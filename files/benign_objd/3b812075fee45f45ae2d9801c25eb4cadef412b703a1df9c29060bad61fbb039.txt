
3b812075fee45f45ae2d9801c25eb4cadef412b703a1df9c29060bad61fbb039.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   0x14000159c
   140001009:	mov    BYTE PTR [rip+0x81a8],0x1        # 0x1400091b8
   140001010:	add    rsp,0x28
   140001014:	ret    
   140001015:	int3   
   140001016:	int3   
   140001017:	int3   
   140001018:	int3   
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	sub    rsp,0x28
   140001024:	lea    rcx,[rip+0x5485]        # 0x1400064b0
   14000102b:	call   QWORD PTR [rip+0xc067]        # 0x14000d098
   140001031:	mov    DWORD PTR [rip+0x81a9],eax        # 0x1400091e0
   140001037:	add    rsp,0x28
   14000103b:	ret    
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	lea    rcx,[rip+0x54c5]        # 0x140006510
   14000104b:	call   QWORD PTR [rip+0xc047]        # 0x14000d098
   140001051:	mov    DWORD PTR [rip+0x818d],eax        # 0x1400091e4
   140001057:	add    rsp,0x28
   14000105b:	ret    
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x3ea9]        # 0x140004f10
   140001067:	jmp    0x140003ec0
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rcx,[rip+0x3ee9]        # 0x140004f60
   140001077:	jmp    0x140003ec0
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	lea    rcx,[rip+0x8d65]        # 0x140009df0
   14000108b:	call   0x140002cd4
   140001090:	lea    rcx,[rip+0x3f79]        # 0x140005010
   140001097:	add    rsp,0x28
   14000109b:	jmp    0x140003ec0
   1400010a0:	lea    rcx,[rip+0x3f79]        # 0x140005020
   1400010a7:	jmp    0x140003ec0
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	lea    rcx,[rip+0x3f79]        # 0x140005030
   1400010b7:	jmp    0x140003ec0
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	sub    rsp,0x28
   1400010c4:	call   0x14000159c
   1400010c9:	mov    rcx,rax
   1400010cc:	test   rax,rax
   1400010cf:	je     0x1400010f9
   1400010d1:	mov    rax,QWORD PTR [rax]
   1400010d4:	mov    rax,QWORD PTR [rax+0x18]
   1400010d8:	call   QWORD PTR [rip+0x524a]        # 0x140006328
   1400010de:	add    rax,0x18
   1400010e2:	lea    rcx,[rip+0x3f57]        # 0x140005040
   1400010e9:	mov    QWORD PTR [rip+0xa440],rax        # 0x14000b530
   1400010f0:	add    rsp,0x28
   1400010f4:	jmp    0x140003ec0
   1400010f9:	mov    ecx,0x80004005
   1400010fe:	call   0x1400014dc
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	sub    rsp,0x28
   140001114:	lea    rcx,[rip+0x8d65]        # 0x140009e80
   14000111b:	call   0x140002f80
   140001120:	lea    rcx,[rip+0x3f59]        # 0x140005080
   140001127:	add    rsp,0x28
   14000112b:	jmp    0x140003ec0
   140001130:	mov    QWORD PTR [rsp+0x8],rbx
   140001135:	push   rdi
   140001136:	sub    rsp,0x20
   14000113a:	mov    rdi,rcx
   14000113d:	test   edx,edx
   14000113f:	js     0x1400011b4
   140001141:	mov    eax,0x7fffffff
   140001146:	sub    eax,edx
   140001148:	cmp    eax,0x1
   14000114b:	jl     0x1400011b4
   14000114d:	inc    edx
   14000114f:	lea    ebx,[rdx+0x7]
   140001152:	and    ebx,0xfffffff8
   140001155:	cmp    edx,ebx
   140001157:	jg     0x1400011b4
   140001159:	movsxd r8,r8d
   14000115c:	movsxd rcx,ebx
   14000115f:	test   ebx,ebx
   140001161:	jne    0x140001167
   140001163:	xor    ecx,ecx
   140001165:	jmp    0x14000117f
   140001167:	xor    edx,edx
   140001169:	or     rax,0xffffffffffffffff
   14000116d:	div    rcx
   140001170:	cmp    rax,r8
   140001173:	jb     0x1400011b4
   140001175:	imul   rcx,r8
   140001179:	cmp    rcx,0xffffffffffffffe7
   14000117d:	ja     0x1400011b4
   14000117f:	lea    rdx,[rcx+0x18]
   140001183:	mov    rcx,QWORD PTR [rdi+0x8]
   140001187:	mov    rax,QWORD PTR [rcx]
   14000118a:	mov    rax,QWORD PTR [rax]
   14000118d:	call   QWORD PTR [rip+0x5195]        # 0x140006328
   140001193:	mov    rcx,rax
   140001196:	test   rax,rax
   140001199:	je     0x1400011b4
   14000119b:	and    DWORD PTR [rcx+0x8],0x0
   14000119f:	mov    QWORD PTR [rax],rdi
   1400011a2:	mov    DWORD PTR [rax+0x10],0x1
   1400011a9:	lea    eax,[rbx-0x1]
   1400011ac:	mov    DWORD PTR [rcx+0xc],eax
   1400011af:	mov    rax,rcx
   1400011b2:	jmp    0x1400011b6
   1400011b4:	xor    eax,eax
   1400011b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011bb:	add    rsp,0x20
   1400011bf:	pop    rdi
   1400011c0:	ret    
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400011d4:	mov    rax,QWORD PTR [rcx]
   1400011d7:	mov    rax,QWORD PTR [rax+0x8]
   1400011db:	rex.W jmp QWORD PTR [rip+0x5146]        # 0x140006328
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	int3   
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	rex push rbx
   1400011f2:	sub    rsp,0x20
   1400011f6:	mov    r11,rcx
   1400011f9:	test   r8d,r8d
   1400011fc:	js     0x14000125a
   1400011fe:	mov    eax,0x7fffffff
   140001203:	sub    eax,r8d
   140001206:	cmp    eax,0x1
   140001209:	jl     0x14000125a
   14000120b:	inc    r8d
   14000120e:	lea    ebx,[r8+0x7]
   140001212:	and    ebx,0xfffffff8
   140001215:	cmp    r8d,ebx
   140001218:	jg     0x14000125a
   14000121a:	mov    eax,r9d
   14000121d:	mov    ecx,ebx
   14000121f:	imul   rcx,rax
   140001223:	mov    eax,0xffffffff
   140001228:	cmp    rcx,rax
   14000122b:	ja     0x14000125a
   14000122d:	cmp    ecx,0xffffffe7
   140001230:	ja     0x14000125a
   140001232:	lea    r8d,[rcx+0x18]
   140001236:	mov    rcx,QWORD PTR [r11+0x8]
   14000123a:	mov    rax,QWORD PTR [rcx]
   14000123d:	mov    rax,QWORD PTR [rax+0x10]
   140001241:	call   QWORD PTR [rip+0x50e1]        # 0x140006328
   140001247:	mov    rcx,rax
   14000124a:	test   rax,rax
   14000124d:	je     0x14000125a
   14000124f:	lea    eax,[rbx-0x1]
   140001252:	mov    DWORD PTR [rcx+0xc],eax
   140001255:	mov    rax,rcx
   140001258:	jmp    0x14000125c
   14000125a:	xor    eax,eax
   14000125c:	add    rsp,0x20
   140001260:	pop    rbx
   140001261:	ret    
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	lock inc DWORD PTR [rcx+0x20]
   140001274:	lea    rax,[rcx+0x10]
   140001278:	ret    
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    rax,rcx
   140001283:	ret    
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	rex push rbx
   140001292:	sub    rsp,0x20
   140001296:	lea    rax,[rip+0x52d3]        # 0x140006570
   14000129d:	mov    rbx,rcx
   1400012a0:	mov    QWORD PTR [rcx],rax
   1400012a3:	mov    BYTE PTR [rip+0x7f0e],0x0        # 0x1400091b8
   1400012aa:	test   dl,0x1
   1400012ad:	je     0x1400012b4
   1400012af:	call   0x140002bec
   1400012b4:	mov    rax,rbx
   1400012b7:	add    rsp,0x20
   1400012bb:	pop    rbx
   1400012bc:	ret    
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400012c4:	mov    r8,rdx
   1400012c7:	xor    edx,edx
   1400012c9:	rex.W jmp QWORD PTR [rip+0x4eb0]        # 0x140006180
   1400012d0:	sub    rsp,0x28
   1400012d4:	test   rdx,rdx
   1400012d7:	je     0x1400012e8
   1400012d9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400012dd:	mov    r8,rdx
   1400012e0:	xor    edx,edx
   1400012e2:	call   QWORD PTR [rip+0x4ea8]        # 0x140006190
   1400012e8:	add    rsp,0x28
   1400012ec:	ret    
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	sub    rsp,0x28
   1400012f4:	test   rdx,rdx
   1400012f7:	jne    0x14000130d
   1400012f9:	mov    rax,QWORD PTR [rcx]
   1400012fc:	mov    rdx,r8
   1400012ff:	mov    rax,QWORD PTR [rax]
   140001302:	add    rsp,0x28
   140001306:	rex.W jmp QWORD PTR [rip+0x501b]        # 0x140006328
   14000130d:	test   r8,r8
   140001310:	jne    0x140001326
   140001312:	mov    rax,QWORD PTR [rcx]
   140001315:	mov    rax,QWORD PTR [rax+0x8]
   140001319:	call   QWORD PTR [rip+0x5009]        # 0x140006328
   14000131f:	xor    eax,eax
   140001321:	add    rsp,0x28
   140001325:	ret    
   140001326:	mov    rcx,QWORD PTR [rcx+0x8]
   14000132a:	mov    r9,r8
   14000132d:	mov    r8,rdx
   140001330:	xor    edx,edx
   140001332:	add    rsp,0x28
   140001336:	rex.W jmp QWORD PTR [rip+0x4e4b]        # 0x140006188
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    rcx,QWORD PTR [rcx+0x8]
   140001344:	mov    r8,rdx
   140001347:	xor    edx,edx
   140001349:	rex.W jmp QWORD PTR [rip+0x4e50]        # 0x1400061a0
   140001350:	mov    QWORD PTR [rsp+0x8],rbx
   140001355:	push   rdi
   140001356:	sub    rsp,0x20
   14000135a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000135e:	lea    rax,[rip+0x5253]        # 0x1400065b8
   140001365:	mov    QWORD PTR [rcx],rax
   140001368:	mov    edi,edx
   14000136a:	mov    rbx,rcx
   14000136d:	je     0x14000137e
   14000136f:	mov    rcx,QWORD PTR [rcx+0x8]
   140001373:	test   rcx,rcx
   140001376:	je     0x14000137e
   140001378:	call   QWORD PTR [rip+0x4dfa]        # 0x140006178
   14000137e:	test   dil,0x1
   140001382:	je     0x14000138c
   140001384:	mov    rcx,rbx
   140001387:	call   0x140002bec
   14000138c:	mov    rax,rbx
   14000138f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001394:	add    rsp,0x20
   140001398:	pop    rdi
   140001399:	ret    
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	mov    DWORD PTR [rcx],edx
   14000139e:	mov    rax,rcx
   1400013a1:	ret    
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400013a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400013ae:	push   rdi
   1400013af:	sub    rsp,0x20
   1400013b3:	mov    eax,DWORD PTR [rcx+0x10]
   1400013b6:	mov    rdi,r8
   1400013b9:	inc    eax
   1400013bb:	mov    rsi,rdx
   1400013be:	mov    rbx,rcx
   1400013c1:	movsxd rdx,eax
   1400013c4:	mov    rcx,QWORD PTR [rcx]
   1400013c7:	mov    r8d,0x4
   1400013cd:	call   QWORD PTR [rip+0x4e35]        # 0x140006208
   1400013d3:	test   rax,rax
   1400013d6:	jne    0x1400013dc
   1400013d8:	xor    eax,eax
   1400013da:	jmp    0x14000142d
   1400013dc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400013e0:	mov    r8d,0x10
   1400013e6:	mov    QWORD PTR [rbx],rax
   1400013e9:	mov    eax,DWORD PTR [rbx+0x10]
   1400013ec:	inc    eax
   1400013ee:	movsxd rdx,eax
   1400013f1:	call   QWORD PTR [rip+0x4e11]        # 0x140006208
   1400013f7:	test   rax,rax
   1400013fa:	je     0x1400013d8
   1400013fc:	movsxd rcx,DWORD PTR [rbx+0x10]
   140001400:	mov    QWORD PTR [rbx+0x8],rax
   140001404:	mov    rax,QWORD PTR [rbx]
   140001407:	lea    rdx,[rax+rcx*4]
   14000140b:	test   rdx,rdx
   14000140e:	je     0x140001414
   140001410:	mov    eax,DWORD PTR [rsi]
   140001412:	mov    DWORD PTR [rdx],eax
   140001414:	shl    rcx,0x4
   140001418:	add    rcx,QWORD PTR [rbx+0x8]
   14000141c:	je     0x140001425
   14000141e:	movups xmm0,XMMWORD PTR [rdi]
   140001421:	movdqu XMMWORD PTR [rcx],xmm0
   140001425:	inc    DWORD PTR [rbx+0x10]
   140001428:	mov    eax,0x1
   14000142d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001432:	mov    rsi,QWORD PTR [rsp+0x38]
   140001437:	add    rsp,0x20
   14000143b:	pop    rdi
   14000143c:	ret    
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	mov    QWORD PTR [rsp+0x8],rbx
   140001445:	mov    QWORD PTR [rsp+0x10],rsi
   14000144a:	push   rdi
   14000144b:	sub    rsp,0x20
   14000144f:	mov    eax,DWORD PTR [rcx+0x10]
   140001452:	mov    rdi,r8
   140001455:	inc    eax
   140001457:	mov    rsi,rdx
   14000145a:	mov    rbx,rcx
   14000145d:	movsxd rdx,eax
   140001460:	mov    rcx,QWORD PTR [rcx]
   140001463:	mov    r8d,0x8
   140001469:	call   QWORD PTR [rip+0x4d99]        # 0x140006208
   14000146f:	test   rax,rax
   140001472:	jne    0x140001478
   140001474:	xor    eax,eax
   140001476:	jmp    0x1400014cb
   140001478:	mov    rcx,QWORD PTR [rbx+0x8]
   14000147c:	mov    r8d,0x4
   140001482:	mov    QWORD PTR [rbx],rax
   140001485:	mov    eax,DWORD PTR [rbx+0x10]
   140001488:	inc    eax
   14000148a:	movsxd rdx,eax
   14000148d:	call   QWORD PTR [rip+0x4d75]        # 0x140006208
   140001493:	test   rax,rax
   140001496:	je     0x140001474
   140001498:	movsxd r8,DWORD PTR [rbx+0x10]
   14000149c:	mov    QWORD PTR [rbx+0x8],rax
   1400014a0:	mov    rax,QWORD PTR [rbx]
   1400014a3:	lea    rdx,[rax+r8*8]
   1400014a7:	test   rdx,rdx
   1400014aa:	je     0x1400014b2
   1400014ac:	mov    rcx,QWORD PTR [rsi]
   1400014af:	mov    QWORD PTR [rdx],rcx
   1400014b2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400014b6:	lea    rdx,[rcx+r8*4]
   1400014ba:	test   rdx,rdx
   1400014bd:	je     0x1400014c3
   1400014bf:	mov    ecx,DWORD PTR [rdi]
   1400014c1:	mov    DWORD PTR [rdx],ecx
   1400014c3:	inc    DWORD PTR [rbx+0x10]
   1400014c6:	mov    eax,0x1
   1400014cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400014d5:	add    rsp,0x20
   1400014d9:	pop    rdi
   1400014da:	ret    
   1400014db:	int3   
   1400014dc:	sub    rsp,0x28
   1400014e0:	mov    edx,ecx
   1400014e2:	lea    rcx,[rsp+0x38]
   1400014e7:	call   0x14000139c
   1400014ec:	lea    rdx,[rip+0x624d]        # 0x140007740
   1400014f3:	lea    rcx,[rsp+0x38]
   1400014f8:	call   0x140004630
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	mov    QWORD PTR [rsp+0x10],rbx
   140001505:	mov    QWORD PTR [rsp+0x18],rsi
   14000150a:	push   rdi
   14000150b:	sub    rsp,0x20
   14000150f:	lea    rcx,[rip+0x523a]        # 0x140006750
   140001516:	mov    ebx,0x1
   14000151b:	call   QWORD PTR [rip+0x4bd7]        # 0x1400060f8
   140001521:	mov    rdi,rax
   140001524:	test   rax,rax
   140001527:	je     0x14000158a
   140001529:	lea    rdx,[rip+0x5240]        # 0x140006770
   140001530:	mov    rcx,rax
   140001533:	call   QWORD PTR [rip+0x4c2f]        # 0x140006168
   140001539:	lea    rdx,[rip+0x5258]        # 0x140006798
   140001540:	mov    rcx,rdi
   140001543:	mov    rsi,rax
   140001546:	call   QWORD PTR [rip+0x4c1c]        # 0x140006168
   14000154c:	test   rsi,rsi
   14000154f:	jne    0x140001558
   140001551:	test   rax,rax
   140001554:	je     0x14000158a
   140001556:	jmp    0x14000155d
   140001558:	test   rax,rax
   14000155b:	jne    0x140001564
   14000155d:	mov    ebx,0x8000ffff
   140001562:	jmp    0x14000158a
   140001564:	and    DWORD PTR [rsp+0x30],0x0
   140001569:	lea    rcx,[rsp+0x30]
   14000156e:	call   QWORD PTR [rip+0x4db4]        # 0x140006328
   140001574:	test   eax,eax
   140001576:	je     0x14000158a
   140001578:	mov    ecx,DWORD PTR [rsp+0x30]
   14000157c:	mov    rax,rsi
   14000157f:	and    ecx,0xfffffffe
   140001582:	call   QWORD PTR [rip+0x4da0]        # 0x140006328
   140001588:	xor    ebx,ebx
   14000158a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000158f:	mov    eax,ebx
   140001591:	mov    rbx,QWORD PTR [rsp+0x38]
   140001596:	add    rsp,0x20
   14000159a:	pop    rdi
   14000159b:	ret    
   14000159c:	mov    QWORD PTR [rsp+0x8],rbx
   1400015a1:	push   rdi
   1400015a2:	sub    rsp,0x20
   1400015a6:	mov    rax,QWORD PTR gs:0x58
   1400015af:	lea    rdi,[rip+0x7bba]        # 0x140009170
   1400015b6:	mov    ecx,DWORD PTR [rip+0xa008]        # 0x14000b5c4
   1400015bc:	mov    r8d,0x4
   1400015c2:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400015c6:	mov    eax,DWORD PTR [rdx+r8*1]
   1400015ca:	cmp    DWORD PTR [rip+0x7b98],eax        # 0x140009168
   1400015d0:	jg     0x1400015e0
   1400015d2:	mov    rax,rdi
   1400015d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015da:	add    rsp,0x20
   1400015de:	pop    rdi
   1400015df:	ret    
   1400015e0:	lea    rcx,[rip+0x7b81]        # 0x140009168
   1400015e7:	call   0x140003a88
   1400015ec:	cmp    DWORD PTR [rip+0x7b75],0xffffffff        # 0x140009168
   1400015f3:	jne    0x1400015d2
   1400015f5:	call   QWORD PTR [rip+0x4bad]        # 0x1400061a8
   1400015fb:	lea    rcx,[rip+0x4fb6]        # 0x1400065b8
   140001602:	xor    ebx,ebx
   140001604:	mov    QWORD PTR [rip+0x7b4d],rax        # 0x140009158
   14000160b:	mov    QWORD PTR [rip+0x7b3e],rcx        # 0x140009150
   140001612:	lea    rcx,[rip+0x3997]        # 0x140004fb0
   140001619:	mov    BYTE PTR [rip+0x7b41],bl        # 0x140009160
   14000161f:	call   0x140003ec0
   140001624:	lea    rax,[rip+0x4f45]        # 0x140006570
   14000162b:	mov    DWORD PTR [rip+0x7b5b],0x2        # 0x140009190
   140001635:	mov    QWORD PTR [rip+0x7b34],rax        # 0x140009170
   14000163c:	lea    rcx,[rip+0x39ad]        # 0x140004ff0
   140001643:	lea    rax,[rip+0x7b06]        # 0x140009150
   14000164a:	mov    QWORD PTR [rip+0x7b37],rbx        # 0x140009188
   140001651:	mov    QWORD PTR [rip+0x7b20],rax        # 0x140009178
   140001658:	mov    DWORD PTR [rip+0x7b3a],ebx        # 0x140009198
   14000165e:	mov    QWORD PTR [rip+0x7b1b],rdi        # 0x140009180
   140001665:	call   0x140003ec0
   14000166a:	lea    rcx,[rip+0x7af7]        # 0x140009168
   140001671:	call   0x140003a28
   140001676:	jmp    0x1400015d2
   14000167b:	int3   
   14000167c:	mov    rax,rsp
   14000167f:	mov    QWORD PTR [rax+0x8],rcx
   140001683:	push   rsi
   140001684:	push   rdi
   140001685:	push   r15
   140001687:	sub    rsp,0x60
   14000168b:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140001693:	mov    QWORD PTR [rax+0x18],rbx
   140001697:	mov    QWORD PTR [rax+0x20],rbp
   14000169b:	mov    rdi,rcx
   14000169e:	lea    rbp,[rip+0x795b]        # 0x140009000
   1400016a5:	lea    r15,[rip+0x4ef4]        # 0x1400065a0
   1400016ac:	mov    esi,0x8000
   1400016b1:	mov    rax,QWORD PTR [rip+0x7948]        # 0x140009000
   1400016b8:	cmp    rax,rbp
   1400016bb:	je     0x1400016ec
   1400016bd:	test   DWORD PTR [rax+0x4fc],esi
   1400016c3:	je     0x140001701
   1400016c5:	cmp    BYTE PTR [rax+0x4f9],0x5
   1400016cc:	jb     0x1400016ec
   1400016ce:	mov    edx,0xb
   1400016d3:	xor    r9d,r9d
   1400016d6:	mov    r8,r15
   1400016d9:	mov    rcx,QWORD PTR [rax+0x4f0]
   1400016e0:	call   0x1400023c0
   1400016e5:	mov    rax,QWORD PTR [rip+0x7914]        # 0x140009000
   1400016ec:	test   DWORD PTR [rax+0x4fc],esi
   1400016f2:	je     0x140001701
   1400016f4:	cmp    BYTE PTR [rax+0x4f9],0x5
   1400016fb:	jb     0x140001701
   1400016fd:	mov    cl,0x1
   1400016ff:	jmp    0x140001703
   140001701:	xor    cl,cl
   140001703:	lea    rdx,[rip+0x500e]        # 0x140006718
   14000170a:	mov    QWORD PTR [rsp+0x48],rdx
   14000170f:	mov    BYTE PTR [rsp+0x50],cl
   140001713:	test   DWORD PTR [rax+0x4fc],esi
   140001719:	je     0x140001729
   14000171b:	cmp    BYTE PTR [rax+0x4f9],0x5
   140001722:	jb     0x140001729
   140001724:	call   0x140003260
   140001729:	mov    rcx,rdi
   14000172c:	call   QWORD PTR [rip+0xb90e]        # 0x14000d040
   140001732:	mov    ebx,0x80070057
   140001737:	test   eax,eax
   140001739:	jne    0x14000176c
   14000173b:	mov    rcx,QWORD PTR [rip+0x78be]        # 0x140009000
   140001742:	cmp    rcx,rbp
   140001745:	je     0x140001a47
   14000174b:	test   DWORD PTR [rcx+0x4fc],esi
   140001751:	je     0x140001a47
   140001757:	cmp    BYTE PTR [rcx+0x4f9],0x2
   14000175e:	jb     0x140001a47
   140001764:	lea    edx,[rax+0xc]
   140001767:	jmp    0x140001a2d
   14000176c:	mov    rcx,QWORD PTR [rip+0x788d]        # 0x140009000
   140001773:	cmp    rcx,rbp
   140001776:	je     0x1400017ac
   140001778:	test   DWORD PTR [rcx+0x4fc],esi
   14000177e:	je     0x1400017c9
   140001780:	cmp    BYTE PTR [rcx+0x4f9],0x4
   140001787:	jb     0x1400017ac
   140001789:	mov    edx,0xd
   14000178e:	mov    QWORD PTR [rsp+0x20],rdi
   140001793:	xor    r9d,r9d
   140001796:	mov    r8,r15
   140001799:	mov    rcx,QWORD PTR [rcx+0x4f0]
   1400017a0:	call   0x140002438
   1400017a5:	mov    rcx,QWORD PTR [rip+0x7854]        # 0x140009000
   1400017ac:	test   DWORD PTR [rcx+0x4fc],esi
   1400017b2:	je     0x1400017c9
   1400017b4:	cmp    BYTE PTR [rcx+0x4f9],0x4
   1400017bb:	jb     0x1400017c9
   1400017bd:	call   0x140003260
   1400017c2:	mov    rcx,QWORD PTR [rip+0x7837]        # 0x140009000
   1400017c9:	xor    eax,eax
   1400017cb:	mov    r8d,DWORD PTR [rip+0x7a06]        # 0x1400091d8
   1400017d2:	test   r8d,r8d
   1400017d5:	jle    0x1400017ee
   1400017d7:	mov    rdx,QWORD PTR [rip+0x79ea]        # 0x1400091c8
   1400017de:	cmp    QWORD PTR [rdx],rdi
   1400017e1:	je     0x1400017f1
   1400017e3:	inc    eax
   1400017e5:	add    rdx,0x8
   1400017e9:	cmp    eax,r8d
   1400017ec:	jl     0x1400017de
   1400017ee:	or     eax,0xffffffff
   1400017f1:	cmp    eax,0xffffffff
   1400017f4:	je     0x140001822
   1400017f6:	cmp    rcx,rbp
   1400017f9:	je     0x140001a47
   1400017ff:	test   DWORD PTR [rcx+0x4fc],esi
   140001805:	je     0x140001a47
   14000180b:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001812:	jb     0x140001a47
   140001818:	mov    edx,0xf
   14000181d:	jmp    0x140001a2d
   140001822:	xor    edx,edx
   140001824:	mov    rcx,rdi
   140001827:	call   QWORD PTR [rip+0xb7eb]        # 0x14000d018
   14000182d:	mov    edi,eax
   14000182f:	mov    DWORD PTR [rsp+0x88],eax
   140001836:	lea    r8,[rsp+0x88]
   14000183e:	lea    rdx,[rsp+0x80]
   140001846:	lea    rcx,[rip+0x797b]        # 0x1400091c8
   14000184d:	call   0x140001440
   140001852:	test   eax,eax
   140001854:	jne    0x14000188c
   140001856:	mov    ebx,0x8007000e
   14000185b:	mov    rcx,QWORD PTR [rip+0x779e]        # 0x140009000
   140001862:	cmp    rcx,rbp
   140001865:	je     0x140001a47
   14000186b:	test   DWORD PTR [rcx+0x4fc],esi
   140001871:	je     0x140001a47
   140001877:	cmp    BYTE PTR [rcx+0x4f9],0x2
   14000187e:	jb     0x140001a47
   140001884:	lea    edx,[rax+0x10]
   140001887:	jmp    0x140001a2d
   14000188c:	xor    ebx,ebx
   14000188e:	mov    ecx,DWORD PTR [rip+0x7964]        # 0x1400091f8
   140001894:	test   ecx,ecx
   140001896:	jle    0x1400018ad
   140001898:	mov    rax,QWORD PTR [rip+0x7949]        # 0x1400091e8
   14000189f:	cmp    DWORD PTR [rax],edi
   1400018a1:	je     0x1400018b0
   1400018a3:	inc    ebx
   1400018a5:	add    rax,0x4
   1400018a9:	cmp    ebx,ecx
   1400018ab:	jl     0x14000189f
   1400018ad:	or     ebx,0xffffffff
   1400018b0:	cmp    ebx,0xffffffff
   1400018b3:	je     0x14000196d
   1400018b9:	mov    rax,QWORD PTR [rip+0x7740]        # 0x140009000
   1400018c0:	cmp    rax,rbp
   1400018c3:	je     0x1400018fe
   1400018c5:	test   DWORD PTR [rax+0x4fc],esi
   1400018cb:	je     0x14000191a
   1400018cd:	cmp    BYTE PTR [rax+0x4f9],0x5
   1400018d4:	jb     0x1400018fe
   1400018d6:	mov    edx,0x11
   1400018db:	mov    DWORD PTR [rsp+0x20],edi
   1400018df:	xor    r9d,r9d
   1400018e2:	mov    r8,r15
   1400018e5:	mov    rcx,QWORD PTR [rax+0x4f0]
   1400018ec:	call   0x1400023f4
   1400018f1:	mov    rax,QWORD PTR [rip+0x7708]        # 0x140009000
   1400018f8:	mov    ecx,DWORD PTR [rip+0x78fa]        # 0x1400091f8
   1400018fe:	test   DWORD PTR [rax+0x4fc],esi
   140001904:	je     0x14000191a
   140001906:	cmp    BYTE PTR [rax+0x4f9],0x5
   14000190d:	jb     0x14000191a
   14000190f:	call   0x140003260
   140001914:	mov    ecx,DWORD PTR [rip+0x78de]        # 0x1400091f8
   14000191a:	test   ebx,ebx
   14000191c:	js     0x14000195d
   14000191e:	cmp    ebx,ecx
   140001920:	jge    0x14000195d
   140001922:	movsxd rbx,ebx
   140001925:	shl    rbx,0x4
   140001929:	add    rbx,QWORD PTR [rip+0x78c0]        # 0x1400091f0
   140001930:	cmp    QWORD PTR [rbx],0x0
   140001934:	jne    0x140001955
   140001936:	mov    r9d,edi
   140001939:	mov    r8,QWORD PTR [rip+0x7868]        # 0x1400091a8
   140001940:	mov    rdx,QWORD PTR [rip+0x7869]        # 0x1400091b0
   140001947:	mov    ecx,0xc
   14000194c:	call   QWORD PTR [rip+0xb6be]        # 0x14000d010
   140001952:	mov    QWORD PTR [rbx],rax
   140001955:	inc    DWORD PTR [rbx+0x8]
   140001958:	jmp    0x140001a45
   14000195d:	mov    edx,0x1
   140001962:	mov    ecx,0xc000008c
   140001967:	call   0x1400023b0
   14000196c:	int3   
   14000196d:	mov    rax,QWORD PTR [rip+0x768c]        # 0x140009000
   140001974:	cmp    rax,rbp
   140001977:	je     0x1400019ac
   140001979:	test   DWORD PTR [rax+0x4fc],esi
   14000197f:	je     0x1400019c2
   140001981:	cmp    BYTE PTR [rax+0x4f9],0x5
   140001988:	jb     0x1400019ac
   14000198a:	mov    edx,0x12
   14000198f:	mov    DWORD PTR [rsp+0x20],edi
   140001993:	xor    r9d,r9d
   140001996:	mov    r8,r15
   140001999:	mov    rcx,QWORD PTR [rax+0x4f0]
   1400019a0:	call   0x1400023f4
   1400019a5:	mov    rax,QWORD PTR [rip+0x7654]        # 0x140009000
   1400019ac:	test   DWORD PTR [rax+0x4fc],esi
   1400019b2:	je     0x1400019c2
   1400019b4:	cmp    BYTE PTR [rax+0x4f9],0x5
   1400019bb:	jb     0x1400019c2
   1400019bd:	call   0x140003260
   1400019c2:	mov    r9d,edi
   1400019c5:	mov    r8,QWORD PTR [rip+0x77dc]        # 0x1400091a8
   1400019cc:	mov    rdx,QWORD PTR [rip+0x77dd]        # 0x1400091b0
   1400019d3:	mov    ecx,0xc
   1400019d8:	call   QWORD PTR [rip+0xb632]        # 0x14000d010
   1400019de:	mov    QWORD PTR [rsp+0x38],rax
   1400019e3:	mov    DWORD PTR [rsp+0x40],0x1
   1400019eb:	lea    r8,[rsp+0x38]
   1400019f0:	lea    rdx,[rsp+0x88]
   1400019f8:	lea    rcx,[rip+0x77e9]        # 0x1400091e8
   1400019ff:	call   0x1400013a4
   140001a04:	test   eax,eax
   140001a06:	jne    0x140001a45
   140001a08:	mov    ebx,0x8007000e
   140001a0d:	mov    rcx,QWORD PTR [rip+0x75ec]        # 0x140009000
   140001a14:	cmp    rcx,rbp
   140001a17:	je     0x140001a47
   140001a19:	test   DWORD PTR [rcx+0x4fc],esi
   140001a1f:	je     0x140001a47
   140001a21:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001a28:	jb     0x140001a47
   140001a2a:	lea    edx,[rax+0x13]
   140001a2d:	mov    DWORD PTR [rsp+0x20],ebx
   140001a31:	xor    r9d,r9d
   140001a34:	mov    r8,r15
   140001a37:	mov    rcx,QWORD PTR [rcx+0x4f0]
   140001a3e:	call   0x1400023f4
   140001a43:	jmp    0x140001a47
   140001a45:	xor    ebx,ebx
   140001a47:	lea    rcx,[rsp+0x48]
   140001a4c:	call   0x14000342c
   140001a51:	mov    eax,ebx
   140001a53:	lea    r11,[rsp+0x60]
   140001a58:	mov    rbx,QWORD PTR [r11+0x30]
   140001a5c:	mov    rbp,QWORD PTR [r11+0x38]
   140001a60:	mov    rsp,r11
   140001a63:	pop    r15
   140001a65:	pop    rdi
   140001a66:	pop    rsi
   140001a67:	ret    
   140001a68:	mov    QWORD PTR [rsp+0x8],rbx
   140001a6d:	mov    QWORD PTR [rsp+0x10],rsi
   140001a72:	push   rdi
   140001a73:	sub    rsp,0x20
   140001a77:	movsxd rdi,edx
   140001a7a:	mov    rbx,rcx
   140001a7d:	test   edx,edx
   140001a7f:	js     0x140001b99
   140001a85:	mov    ecx,DWORD PTR [rcx+0x10]
   140001a88:	cmp    edi,ecx
   140001a8a:	jge    0x140001b99
   140001a90:	lea    eax,[rcx-0x1]
   140001a93:	cmp    edi,eax
   140001a95:	je     0x140001b45
   140001a9b:	sub    ecx,edi
   140001a9d:	mov    rsi,rdi
   140001aa0:	lea    eax,[rcx-0x1]
   140001aa3:	movsxd r8,eax
   140001aa6:	mov    rax,QWORD PTR [rbx]
   140001aa9:	shl    r8,0x2
   140001aad:	lea    r9,[rax+rdi*4]
   140001ab1:	movsxd rax,ecx
   140001ab4:	shl    rax,0x2
   140001ab8:	lea    rdx,[r9+0x4]
   140001abc:	test   r8,r8
   140001abf:	je     0x140001aee
   140001ac1:	test   r9,r9
   140001ac4:	jne    0x140001ad7
   140001ac6:	call   QWORD PTR [rip+0x479c]        # 0x140006268
   140001acc:	mov    DWORD PTR [rax],0x16
   140001ad2:	jmp    0x140001bb7
   140001ad7:	test   rdx,rdx
   140001ada:	je     0x140001ac6
   140001adc:	cmp    rax,r8
   140001adf:	jb     0x140001bab
   140001ae5:	mov    rcx,r9
   140001ae8:	call   QWORD PTR [rip+0x46ea]        # 0x1400061d8
   140001aee:	mov    ecx,DWORD PTR [rbx+0x10]
   140001af1:	mov    r9,QWORD PTR [rbx+0x8]
   140001af5:	sub    ecx,edi
   140001af7:	shl    rsi,0x4
   140001afb:	add    r9,rsi
   140001afe:	lea    eax,[rcx-0x1]
   140001b01:	movsxd r8,eax
   140001b04:	movsxd rax,ecx
   140001b07:	lea    rdx,[r9+0x10]
   140001b0b:	shl    rax,0x4
   140001b0f:	shl    r8,0x4
   140001b13:	test   r8,r8
   140001b16:	je     0x140001b45
   140001b18:	test   r9,r9
   140001b1b:	jne    0x140001b2e
   140001b1d:	call   QWORD PTR [rip+0x4745]        # 0x140006268
   140001b23:	mov    DWORD PTR [rax],0x16
   140001b29:	jmp    0x140001bd4
   140001b2e:	test   rdx,rdx
   140001b31:	je     0x140001b1d
   140001b33:	cmp    rax,r8
   140001b36:	jb     0x140001bc8
   140001b3c:	mov    rcx,r9
   140001b3f:	call   QWORD PTR [rip+0x4693]        # 0x1400061d8
   140001b45:	mov    eax,DWORD PTR [rbx+0x10]
   140001b48:	mov    edi,0x1
   140001b4d:	mov    rcx,QWORD PTR [rbx]
   140001b50:	sub    eax,edi
   140001b52:	movsxd rdx,eax
   140001b55:	lea    r8d,[rdi+0x3]
   140001b59:	call   QWORD PTR [rip+0x46a9]        # 0x140006208
   140001b5f:	test   rax,rax
   140001b62:	jne    0x140001b69
   140001b64:	cmp    DWORD PTR [rbx+0x10],edi
   140001b67:	jne    0x140001b6c
   140001b69:	mov    QWORD PTR [rbx],rax
   140001b6c:	mov    eax,DWORD PTR [rbx+0x10]
   140001b6f:	mov    r8d,0x10
   140001b75:	mov    rcx,QWORD PTR [rbx+0x8]
   140001b79:	sub    eax,edi
   140001b7b:	movsxd rdx,eax
   140001b7e:	call   QWORD PTR [rip+0x4684]        # 0x140006208
   140001b84:	test   rax,rax
   140001b87:	jne    0x140001b8e
   140001b89:	cmp    DWORD PTR [rbx+0x10],edi
   140001b8c:	jne    0x140001b92
   140001b8e:	mov    QWORD PTR [rbx+0x8],rax
   140001b92:	dec    DWORD PTR [rbx+0x10]
   140001b95:	mov    eax,edi
   140001b97:	jmp    0x140001b9b
   140001b99:	xor    eax,eax
   140001b9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ba0:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ba5:	add    rsp,0x20
   140001ba9:	pop    rdi
   140001baa:	ret    
   140001bab:	call   QWORD PTR [rip+0x46b7]        # 0x140006268
   140001bb1:	mov    DWORD PTR [rax],0x22
   140001bb7:	call   QWORD PTR [rip+0x46b3]        # 0x140006270
   140001bbd:	mov    ecx,0x80070057
   140001bc2:	call   0x1400014dc
   140001bc7:	int3   
   140001bc8:	call   QWORD PTR [rip+0x469a]        # 0x140006268
   140001bce:	mov    DWORD PTR [rax],0x22
   140001bd4:	call   QWORD PTR [rip+0x4696]        # 0x140006270
   140001bda:	mov    ecx,0x80070057
   140001bdf:	call   0x1400014dc
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	mov    QWORD PTR [rsp+0x8],rbx
   140001bed:	mov    QWORD PTR [rsp+0x10],rsi
   140001bf2:	push   rdi
   140001bf3:	sub    rsp,0x20
   140001bf7:	movsxd rdi,edx
   140001bfa:	mov    rbx,rcx
   140001bfd:	test   edx,edx
   140001bff:	js     0x140001d13
   140001c05:	mov    ecx,DWORD PTR [rcx+0x10]
   140001c08:	cmp    edi,ecx
   140001c0a:	jge    0x140001d13
   140001c10:	lea    eax,[rcx-0x1]
   140001c13:	cmp    edi,eax
   140001c15:	je     0x140001cbf
   140001c1b:	sub    ecx,edi
   140001c1d:	lea    eax,[rcx-0x1]
   140001c20:	movsxd r8,eax
   140001c23:	mov    rax,QWORD PTR [rbx]
   140001c26:	shl    r8,0x3
   140001c2a:	lea    r9,[rax+rdi*8]
   140001c2e:	movsxd rax,ecx
   140001c31:	shl    rax,0x3
   140001c35:	lea    rdx,[r9+0x8]
   140001c39:	test   r8,r8
   140001c3c:	je     0x140001c6b
   140001c3e:	test   r9,r9
   140001c41:	jne    0x140001c54
   140001c43:	call   QWORD PTR [rip+0x461f]        # 0x140006268
   140001c49:	mov    DWORD PTR [rax],0x16
   140001c4f:	jmp    0x140001d31
   140001c54:	test   rdx,rdx
   140001c57:	je     0x140001c43
   140001c59:	cmp    rax,r8
   140001c5c:	jb     0x140001d25
   140001c62:	mov    rcx,r9
   140001c65:	call   QWORD PTR [rip+0x456d]        # 0x1400061d8
   140001c6b:	mov    ecx,DWORD PTR [rbx+0x10]
   140001c6e:	sub    ecx,edi
   140001c70:	lea    eax,[rcx-0x1]
   140001c73:	movsxd r8,eax
   140001c76:	mov    rax,QWORD PTR [rbx+0x8]
   140001c7a:	shl    r8,0x2
   140001c7e:	lea    r9,[rax+rdi*4]
   140001c82:	movsxd rax,ecx
   140001c85:	shl    rax,0x2
   140001c89:	lea    rdx,[r9+0x4]
   140001c8d:	test   r8,r8
   140001c90:	je     0x140001cbf
   140001c92:	test   r9,r9
   140001c95:	jne    0x140001ca8
   140001c97:	call   QWORD PTR [rip+0x45cb]        # 0x140006268
   140001c9d:	mov    DWORD PTR [rax],0x16
   140001ca3:	jmp    0x140001d4e
   140001ca8:	test   rdx,rdx
   140001cab:	je     0x140001c97
   140001cad:	cmp    rax,r8
   140001cb0:	jb     0x140001d42
   140001cb6:	mov    rcx,r9
   140001cb9:	call   QWORD PTR [rip+0x4519]        # 0x1400061d8
   140001cbf:	mov    eax,DWORD PTR [rbx+0x10]
   140001cc2:	mov    edi,0x1
   140001cc7:	mov    rcx,QWORD PTR [rbx]
   140001cca:	sub    eax,edi
   140001ccc:	movsxd rdx,eax
   140001ccf:	lea    r8d,[rdi+0x7]
   140001cd3:	call   QWORD PTR [rip+0x452f]        # 0x140006208
   140001cd9:	test   rax,rax
   140001cdc:	jne    0x140001ce3
   140001cde:	cmp    DWORD PTR [rbx+0x10],edi
   140001ce1:	jne    0x140001ce6
   140001ce3:	mov    QWORD PTR [rbx],rax
   140001ce6:	mov    eax,DWORD PTR [rbx+0x10]
   140001ce9:	mov    r8d,0x4
   140001cef:	mov    rcx,QWORD PTR [rbx+0x8]
   140001cf3:	sub    eax,edi
   140001cf5:	movsxd rdx,eax
   140001cf8:	call   QWORD PTR [rip+0x450a]        # 0x140006208
   140001cfe:	test   rax,rax
   140001d01:	jne    0x140001d08
   140001d03:	cmp    DWORD PTR [rbx+0x10],edi
   140001d06:	jne    0x140001d0c
   140001d08:	mov    QWORD PTR [rbx+0x8],rax
   140001d0c:	dec    DWORD PTR [rbx+0x10]
   140001d0f:	mov    eax,edi
   140001d11:	jmp    0x140001d15
   140001d13:	xor    eax,eax
   140001d15:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d1f:	add    rsp,0x20
   140001d23:	pop    rdi
   140001d24:	ret    
   140001d25:	call   QWORD PTR [rip+0x453d]        # 0x140006268
   140001d2b:	mov    DWORD PTR [rax],0x22
   140001d31:	call   QWORD PTR [rip+0x4539]        # 0x140006270
   140001d37:	mov    ecx,0x80070057
   140001d3c:	call   0x1400014dc
   140001d41:	int3   
   140001d42:	call   QWORD PTR [rip+0x4520]        # 0x140006268
   140001d48:	mov    DWORD PTR [rax],0x22
   140001d4e:	call   QWORD PTR [rip+0x451c]        # 0x140006270
   140001d54:	mov    ecx,0x80070057
   140001d59:	call   0x1400014dc
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    rax,rsp
   140001d63:	mov    QWORD PTR [rax+0x8],rbx
   140001d67:	mov    QWORD PTR [rax+0x10],rbp
   140001d6b:	mov    QWORD PTR [rax+0x18],rsi
   140001d6f:	mov    QWORD PTR [rax+0x20],rdi
   140001d73:	push   r14
   140001d75:	sub    rsp,0x20
   140001d79:	xor    r14d,r14d
   140001d7c:	mov    ebx,r8d
   140001d7f:	mov    rbp,rdx
   140001d82:	mov    rsi,rcx
   140001d85:	cmp    WORD PTR [rcx],r14w
   140001d89:	jne    0x140001d91
   140001d8b:	lea    ecx,[r14+0x5]
   140001d8f:	int    0x29
   140001d91:	and    r8d,0xfffffff7
   140001d95:	mov    rcx,rsi
   140001d98:	bts    r8d,0xc
   140001d9d:	call   QWORD PTR [rip+0x4295]        # 0x140006038
   140001da3:	mov    rdi,rax
   140001da6:	test   rax,rax
   140001da9:	jne    0x140001df0
   140001dab:	call   QWORD PTR [rip+0x42cf]        # 0x140006080
   140001db1:	cmp    eax,0x57
   140001db4:	jne    0x140001df0
   140001db6:	lea    rcx,[rip+0x489b]        # 0x140006658
   140001dbd:	call   QWORD PTR [rip+0x4335]        # 0x1400060f8
   140001dc3:	mov    rcx,rax
   140001dc6:	lea    rdx,[rip+0x48ab]        # 0x140006678
   140001dcd:	call   QWORD PTR [rip+0x4395]        # 0x140006168
   140001dd3:	test   rax,rax
   140001dd6:	jne    0x140001df0
   140001dd8:	and    ebx,0xffffe0ff
   140001dde:	mov    rdx,rbp
   140001de1:	mov    r8d,ebx
   140001de4:	mov    rcx,rsi
   140001de7:	call   QWORD PTR [rip+0x424b]        # 0x140006038
   140001ded:	mov    rdi,rax
   140001df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140001df5:	mov    rax,rdi
   140001df8:	mov    rdi,QWORD PTR [rsp+0x48]
   140001dfd:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e02:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e07:	add    rsp,0x20
   140001e0b:	pop    r14
   140001e0d:	ret    
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	rex push rsi
   140001e12:	sub    rsp,0x50
   140001e16:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001e1f:	mov    QWORD PTR [rsp+0x60],rbx
   140001e24:	lea    rsi,[rip+0x71d5]        # 0x140009000
   140001e2b:	mov    ebx,0x8000
   140001e30:	mov    rax,QWORD PTR [rip+0x71c9]        # 0x140009000
   140001e37:	cmp    rax,rsi
   140001e3a:	je     0x140001e6f
   140001e3c:	test   DWORD PTR [rax+0x4fc],ebx
   140001e42:	je     0x140001e84
   140001e44:	cmp    BYTE PTR [rax+0x4f9],0x4
   140001e4b:	jb     0x140001e6f
   140001e4d:	mov    edx,0x1a
   140001e52:	xor    r9d,r9d
   140001e55:	lea    r8,[rip+0x4744]        # 0x1400065a0
   140001e5c:	mov    rcx,QWORD PTR [rax+0x4f0]
   140001e63:	call   0x1400023c0
   140001e68:	mov    rax,QWORD PTR [rip+0x7191]        # 0x140009000
   140001e6f:	test   DWORD PTR [rax+0x4fc],ebx
   140001e75:	je     0x140001e84
   140001e77:	cmp    BYTE PTR [rax+0x4f9],0x4
   140001e7e:	jb     0x140001e84
   140001e80:	mov    cl,0x1
   140001e82:	jmp    0x140001e86
   140001e84:	xor    cl,cl
   140001e86:	lea    rdx,[rip+0x4933]        # 0x1400067c0
   140001e8d:	mov    QWORD PTR [rsp+0x38],rdx
   140001e92:	mov    BYTE PTR [rsp+0x40],cl
   140001e96:	test   DWORD PTR [rax+0x4fc],ebx
   140001e9c:	je     0x140001eac
   140001e9e:	cmp    BYTE PTR [rax+0x4f9],0x4
   140001ea5:	jb     0x140001eac
   140001ea7:	call   0x140003260
   140001eac:	lea    rcx,[rip+0x489d]        # 0x140006750
   140001eb3:	call   QWORD PTR [rip+0x423f]        # 0x1400060f8
   140001eb9:	test   rax,rax
   140001ebc:	jne    0x140001ef4
   140001ebe:	call   QWORD PTR [rip+0x41bc]        # 0x140006080
   140001ec4:	mov    rcx,QWORD PTR [rip+0x7135]        # 0x140009000
   140001ecb:	cmp    rcx,rsi
   140001ece:	je     0x140001f88
   140001ed4:	test   DWORD PTR [rcx+0x4fc],ebx
   140001eda:	je     0x140001f9f
   140001ee0:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001ee7:	jb     0x140001f88
   140001eed:	mov    edx,0x1b
   140001ef2:	jmp    0x140001f67
   140001ef4:	lea    rdx,[rip+0x48fd]        # 0x1400067f8
   140001efb:	mov    rcx,rax
   140001efe:	call   QWORD PTR [rip+0x4264]        # 0x140006168
   140001f04:	test   rax,rax
   140001f07:	jne    0x140001f33
   140001f09:	call   QWORD PTR [rip+0x4171]        # 0x140006080
   140001f0f:	mov    rcx,QWORD PTR [rip+0x70ea]        # 0x140009000
   140001f16:	cmp    rcx,rsi
   140001f19:	je     0x140001f88
   140001f1b:	test   DWORD PTR [rcx+0x4fc],ebx
   140001f21:	je     0x140001f9f
   140001f23:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001f2a:	jb     0x140001f88
   140001f2c:	mov    edx,0x1c
   140001f31:	jmp    0x140001f67
   140001f33:	xor    r9d,r9d
   140001f36:	xor    r8d,r8d
   140001f39:	lea    edx,[r9+0x1]
   140001f3d:	xor    ecx,ecx
   140001f3f:	call   QWORD PTR [rip+0x43e3]        # 0x140006328
   140001f45:	mov    rcx,QWORD PTR [rip+0x70b4]        # 0x140009000
   140001f4c:	cmp    rcx,rsi
   140001f4f:	je     0x140001f88
   140001f51:	test   DWORD PTR [rcx+0x4fc],ebx
   140001f57:	je     0x140001f9f
   140001f59:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001f60:	jb     0x140001f88
   140001f62:	mov    edx,0x1d
   140001f67:	mov    DWORD PTR [rsp+0x20],eax
   140001f6b:	xor    r9d,r9d
   140001f6e:	lea    r8,[rip+0x462b]        # 0x1400065a0
   140001f75:	mov    rcx,QWORD PTR [rcx+0x4f0]
   140001f7c:	call   0x1400023f4
   140001f81:	mov    rcx,QWORD PTR [rip+0x7078]        # 0x140009000
   140001f88:	test   DWORD PTR [rcx+0x4fc],ebx
   140001f8e:	je     0x140001f9f
   140001f90:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140001f97:	jb     0x140001f9f
   140001f99:	call   0x140003260
   140001f9e:	nop
   140001f9f:	lea    rcx,[rsp+0x38]
   140001fa4:	call   0x14000342c
   140001fa9:	mov    rbx,QWORD PTR [rsp+0x60]
   140001fae:	add    rsp,0x50
   140001fb2:	pop    rsi
   140001fb3:	ret    
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fc5:	push   rdi
   140001fc6:	sub    rsp,0x20
   140001fca:	xor    edx,edx
   140001fcc:	lea    rcx,[rip+0x46fd]        # 0x1400066d0
   140001fd3:	call   QWORD PTR [rip+0xb047]        # 0x14000d020
   140001fd9:	test   rax,rax
   140001fdc:	je     0x140002034
   140001fde:	mov    rcx,rax
   140001fe1:	call   QWORD PTR [rip+0xb059]        # 0x14000d040
   140001fe7:	test   eax,eax
   140001fe9:	je     0x140002034
   140001feb:	mov    edx,DWORD PTR [rip+0x71e7]        # 0x1400091d8
   140001ff1:	xor    ebx,ebx
   140001ff3:	test   edx,edx
   140001ff5:	jle    0x140002034
   140001ff7:	xor    edi,edi
   140001ff9:	test   rdi,rdi
   140001ffc:	js     0x1400020a8
   140002002:	cmp    ebx,edx
   140002004:	jge    0x1400020a8
   14000200a:	mov    rax,QWORD PTR [rip+0x71b7]        # 0x1400091c8
   140002011:	mov    rcx,QWORD PTR [rdi+rax*1]
   140002015:	test   rcx,rcx
   140002018:	je     0x14000202a
   14000201a:	call   QWORD PTR [rip+0xb020]        # 0x14000d040
   140002020:	test   eax,eax
   140002022:	jne    0x14000209d
   140002024:	mov    edx,DWORD PTR [rip+0x71ae]        # 0x1400091d8
   14000202a:	inc    ebx
   14000202c:	add    rdi,0x8
   140002030:	cmp    ebx,edx
   140002032:	jl     0x140001ff9
   140002034:	mov    rax,QWORD PTR [rip+0x6fc5]        # 0x140009000
   14000203b:	lea    rcx,[rip+0x6fbe]        # 0x140009000
   140002042:	mov    ebx,0x8000
   140002047:	cmp    rax,rcx
   14000204a:	je     0x14000207f
   14000204c:	test   DWORD PTR [rax+0x4fc],ebx
   140002052:	je     0x140002095
   140002054:	cmp    BYTE PTR [rax+0x4f9],0x3
   14000205b:	jb     0x14000207f
   14000205d:	mov    rcx,QWORD PTR [rax+0x4f0]
   140002064:	lea    r8,[rip+0x4535]        # 0x1400065a0
   14000206b:	mov    edx,0xa
   140002070:	xor    r9d,r9d
   140002073:	call   0x1400023c0
   140002078:	mov    rax,QWORD PTR [rip+0x6f81]        # 0x140009000
   14000207f:	test   DWORD PTR [rax+0x4fc],ebx
   140002085:	je     0x140002095
   140002087:	cmp    BYTE PTR [rax+0x4f9],0x3
   14000208e:	jb     0x140002095
   140002090:	call   0x140003260
   140002095:	xor    ecx,ecx
   140002097:	call   QWORD PTR [rip+0xafc3]        # 0x14000d060
   14000209d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020a2:	add    rsp,0x20
   1400020a6:	pop    rdi
   1400020a7:	ret    
   1400020a8:	mov    edx,0x1
   1400020ad:	mov    ecx,0xc000008c
   1400020b2:	call   0x1400023b0
   1400020b7:	int3   
   1400020b8:	mov    rax,rsp
   1400020bb:	push   rdi
   1400020bc:	push   r13
   1400020be:	push   r14
   1400020c0:	sub    rsp,0x50
   1400020c4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400020cc:	mov    QWORD PTR [rax+0x8],rbx
   1400020d0:	mov    QWORD PTR [rax+0x10],rbp
   1400020d4:	mov    QWORD PTR [rax+0x18],rsi
   1400020d8:	mov    rbx,rcx
   1400020db:	lea    r14,[rip+0x6f1e]        # 0x140009000
   1400020e2:	mov    dil,0x5
   1400020e5:	lea    r13,[rip+0x44b4]        # 0x1400065a0
   1400020ec:	mov    ebp,0x8000
   1400020f1:	mov    rcx,QWORD PTR [rip+0x6f08]        # 0x140009000
   1400020f8:	cmp    rcx,r14
   1400020fb:	je     0x14000212c
   1400020fd:	test   DWORD PTR [rcx+0x4fc],ebp
   140002103:	je     0x140002141
   140002105:	cmp    BYTE PTR [rcx+0x4f9],dil
   14000210c:	jb     0x14000212c
   14000210e:	mov    edx,0x14
   140002113:	xor    r9d,r9d
   140002116:	mov    r8,r13
   140002119:	mov    rcx,QWORD PTR [rcx+0x4f0]
   140002120:	call   0x1400023c0
   140002125:	mov    rcx,QWORD PTR [rip+0x6ed4]        # 0x140009000
   14000212c:	test   DWORD PTR [rcx+0x4fc],ebp
   140002132:	je     0x140002141
   140002134:	cmp    BYTE PTR [rcx+0x4f9],dil
   14000213b:	jb     0x140002141
   14000213d:	mov    al,0x1
   14000213f:	jmp    0x140002143
   140002141:	xor    al,al
   140002143:	lea    rdx,[rip+0x45e6]        # 0x140006730
   14000214a:	mov    QWORD PTR [rsp+0x38],rdx
   14000214f:	mov    BYTE PTR [rsp+0x40],al
   140002153:	test   DWORD PTR [rcx+0x4fc],ebp
   140002159:	je     0x140002170
   14000215b:	cmp    BYTE PTR [rcx+0x4f9],dil
   140002162:	jb     0x140002170
   140002164:	call   0x140003260
   140002169:	mov    rcx,QWORD PTR [rip+0x6e90]        # 0x140009000
   140002170:	cmp    rcx,r14
   140002173:	je     0x1400021a9
   140002175:	test   DWORD PTR [rcx+0x4fc],ebp
   14000217b:	je     0x1400021c6
   14000217d:	cmp    BYTE PTR [rcx+0x4f9],0x4
   140002184:	jb     0x1400021a9
   140002186:	mov    edx,0x15
   14000218b:	mov    QWORD PTR [rsp+0x20],rbx
   140002190:	xor    r9d,r9d
   140002193:	mov    r8,r13
   140002196:	mov    rcx,QWORD PTR [rcx+0x4f0]
   14000219d:	call   0x140002438
   1400021a2:	mov    rcx,QWORD PTR [rip+0x6e57]        # 0x140009000
   1400021a9:	test   DWORD PTR [rcx+0x4fc],ebp
   1400021af:	je     0x1400021c6
   1400021b1:	cmp    BYTE PTR [rcx+0x4f9],0x4
   1400021b8:	jb     0x1400021c6
   1400021ba:	call   0x140003260
   1400021bf:	mov    rcx,QWORD PTR [rip+0x6e3a]        # 0x140009000
   1400021c6:	xor    edx,edx
   1400021c8:	mov    r8d,DWORD PTR [rip+0x7009]        # 0x1400091d8
   1400021cf:	test   r8d,r8d
   1400021d2:	jle    0x1400021eb
   1400021d4:	mov    rax,QWORD PTR [rip+0x6fed]        # 0x1400091c8
   1400021db:	cmp    QWORD PTR [rax],rbx
   1400021de:	je     0x1400021ee
   1400021e0:	inc    edx
   1400021e2:	add    rax,0x8
   1400021e6:	cmp    edx,r8d
   1400021e9:	jl     0x1400021db
   1400021eb:	or     edx,0xffffffff
   1400021ee:	mov    edi,0x80070057
   1400021f3:	cmp    edx,0xffffffff
   1400021f6:	jne    0x140002224
   1400021f8:	cmp    rcx,r14
   1400021fb:	je     0x140002327
   140002201:	test   DWORD PTR [rcx+0x4fc],ebp
   140002207:	je     0x140002327
   14000220d:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140002214:	jb     0x140002327
   14000221a:	mov    edx,0x17
   14000221f:	jmp    0x1400022c9
   140002224:	test   edx,edx
   140002226:	js     0x140002345
   14000222c:	cmp    edx,r8d
   14000222f:	jge    0x140002345
   140002235:	movsxd rcx,edx
   140002238:	mov    rax,QWORD PTR [rip+0x6f91]        # 0x1400091d0
   14000223f:	mov    esi,DWORD PTR [rax+rcx*4]
   140002242:	lea    rcx,[rip+0x6f7f]        # 0x1400091c8
   140002249:	call   0x140001be8
   14000224e:	test   eax,eax
   140002250:	jne    0x140002280
   140002252:	mov    rcx,QWORD PTR [rip+0x6da7]        # 0x140009000
   140002259:	cmp    rcx,r14
   14000225c:	je     0x140002327
   140002262:	test   DWORD PTR [rcx+0x4fc],ebp
   140002268:	je     0x140002327
   14000226e:	cmp    BYTE PTR [rcx+0x4f9],0x2
   140002275:	jb     0x140002327
   14000227b:	lea    edx,[rax+0x18]
   14000227e:	jmp    0x1400022c9
   140002280:	xor    ebx,ebx
   140002282:	mov    eax,DWORD PTR [rip+0x6f70]        # 0x1400091f8
   140002288:	test   eax,eax
   14000228a:	jle    0x1400022a1
   14000228c:	mov    rcx,QWORD PTR [rip+0x6f55]        # 0x1400091e8
   140002293:	cmp    DWORD PTR [rcx],esi
   140002295:	je     0x1400022a4
   140002297:	inc    ebx
   140002299:	add    rcx,0x4
   14000229d:	cmp    ebx,eax
   14000229f:	jl     0x140002293
   1400022a1:	or     ebx,0xffffffff
   1400022a4:	cmp    ebx,0xffffffff
   1400022a7:	jne    0x1400022e1
   1400022a9:	mov    rcx,QWORD PTR [rip+0x6d50]        # 0x140009000
   1400022b0:	cmp    rcx,r14
   1400022b3:	je     0x140002327
   1400022b5:	test   DWORD PTR [rcx+0x4fc],ebp
   1400022bb:	je     0x140002327
   1400022bd:	cmp    BYTE PTR [rcx+0x4f9],0x2
   1400022c4:	jb     0x140002327
   1400022c6:	lea    edx,[rbx+0x1a]
   1400022c9:	mov    DWORD PTR [rsp+0x20],edi
   1400022cd:	xor    r9d,r9d
   1400022d0:	mov    r8,r13
   1400022d3:	mov    rcx,QWORD PTR [rcx+0x4f0]
   1400022da:	call   0x1400023f4
   1400022df:	jmp    0x140002327
   1400022e1:	test   ebx,ebx
   1400022e3:	js     0x140002335
   1400022e5:	cmp    ebx,eax
   1400022e7:	jge    0x140002335
   1400022e9:	movsxd rcx,ebx
   1400022ec:	shl    rcx,0x4
   1400022f0:	add    rcx,QWORD PTR [rip+0x6ef9]        # 0x1400091f0
   1400022f7:	mov    eax,DWORD PTR [rcx+0x8]
   1400022fa:	test   eax,eax
   1400022fc:	je     0x140002303
   1400022fe:	dec    eax
   140002300:	mov    DWORD PTR [rcx+0x8],eax
   140002303:	cmp    DWORD PTR [rcx+0x8],0x0
   140002307:	jne    0x140002325
   140002309:	mov    rcx,QWORD PTR [rcx]
   14000230c:	test   rcx,rcx
   14000230f:	je     0x140002317
   140002311:	call   QWORD PTR [rip+0xad89]        # 0x14000d0a0
   140002317:	mov    edx,ebx
   140002319:	lea    rcx,[rip+0x6ec8]        # 0x1400091e8
   140002320:	call   0x140001a68
   140002325:	xor    edi,edi
   140002327:	lea    rcx,[rsp+0x38]
   14000232c:	call   0x14000342c
   140002331:	mov    eax,edi
   140002333:	jmp    0x140002355
   140002335:	mov    edx,0x1
   14000233a:	mov    ecx,0xc000008c
   14000233f:	call   0x1400023b0
   140002344:	int3   
   140002345:	mov    edx,0x1
   14000234a:	mov    ecx,0xc000008c
   14000234f:	call   0x1400023b0
   140002354:	nop
   140002355:	lea    r11,[rsp+0x50]
   14000235a:	mov    rbx,QWORD PTR [r11+0x20]
   14000235e:	mov    rbp,QWORD PTR [r11+0x28]
   140002362:	mov    rsi,QWORD PTR [r11+0x30]
   140002366:	mov    rsp,r11
   140002369:	pop    r14
   14000236b:	pop    r13
   14000236d:	pop    rdi
   14000236e:	ret    
   14000236f:	int3   
   140002370:	sub    rsp,0x28
   140002374:	cmp    edx,DWORD PTR [rip+0x6e66]        # 0x1400091e0
   14000237a:	jne    0x14000238b
   14000237c:	mov    rcx,r8
   14000237f:	call   0x14000167c
   140002384:	cdqe   
   140002386:	add    rsp,0x28
   14000238a:	ret    
   14000238b:	cmp    edx,DWORD PTR [rip+0x6e53]        # 0x1400091e4
   140002391:	jne    0x14000239d
   140002393:	mov    rcx,r8
   140002396:	call   0x1400020b8
   14000239b:	jmp    0x140002384
   14000239d:	add    rsp,0x28
   1400023a1:	rex.W jmp QWORD PTR [rip+0xacc0]        # 0x14000d068
   1400023a8:	rex.W jmp QWORD PTR [rip+0x3db1]        # 0x140006160
   1400023af:	int3   
   1400023b0:	xor    r9d,r9d
   1400023b3:	xor    r8d,r8d
   1400023b6:	rex.W jmp QWORD PTR [rip+0x3cbb]        # 0x140006078
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	mov    r11,rsp
   1400023c3:	mov    QWORD PTR [r11+0x20],r9
   1400023c7:	sub    rsp,0x48
   1400023cb:	and    QWORD PTR [r11-0x18],0x0
   1400023d0:	lea    rax,[r11+0x20]
   1400023d4:	movzx  r9d,dx
   1400023d8:	mov    edx,0x2b
   1400023dd:	mov    QWORD PTR [r11-0x20],0x8
   1400023e5:	mov    QWORD PTR [r11-0x28],rax
   1400023e9:	call   0x140002db0
   1400023ee:	add    rsp,0x48
   1400023f2:	ret    
   1400023f3:	int3   
   1400023f4:	mov    r11,rsp
   1400023f7:	mov    QWORD PTR [r11+0x20],r9
   1400023fb:	sub    rsp,0x58
   1400023ff:	and    QWORD PTR [r11-0x18],0x0
   140002404:	lea    rax,[r11+0x28]
   140002408:	mov    QWORD PTR [r11-0x20],0x4
   140002410:	mov    QWORD PTR [r11-0x28],rax
   140002414:	lea    rax,[r11+0x20]
   140002418:	movzx  r9d,dx
   14000241c:	mov    edx,0x2b
   140002421:	mov    QWORD PTR [r11-0x30],0x8
   140002429:	mov    QWORD PTR [r11-0x38],rax
   14000242d:	call   0x140002db0
   140002432:	add    rsp,0x58
   140002436:	ret    
   140002437:	int3   
   140002438:	mov    r11,rsp
   14000243b:	mov    QWORD PTR [r11+0x20],r9
   14000243f:	sub    rsp,0x58
   140002443:	and    QWORD PTR [r11-0x18],0x0
   140002448:	lea    rax,[r11+0x28]
   14000244c:	mov    r9d,0x8
   140002452:	mov    QWORD PTR [r11-0x20],r9
   140002456:	mov    QWORD PTR [r11-0x28],rax
   14000245a:	lea    rax,[r11+0x20]
   14000245e:	mov    QWORD PTR [r11-0x30],r9
   140002462:	movzx  r9d,dx
   140002466:	mov    edx,0x2b
   14000246b:	mov    QWORD PTR [r11-0x38],rax
   14000246f:	call   0x140002db0
   140002474:	add    rsp,0x58
   140002478:	ret    
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	mov    QWORD PTR [rsp+0x8],rbx
   140002481:	mov    QWORD PTR [rsp+0x10],rsi
   140002486:	push   rbp
   140002487:	push   rdi
   140002488:	push   r12
   14000248a:	push   r14
   14000248c:	push   r15
   14000248e:	lea    rbp,[rsp-0x37]
   140002493:	sub    rsp,0xe0
   14000249a:	xor    r15d,r15d
   14000249d:	mov    rbx,rdx
   1400024a0:	mov    edi,ecx
   1400024a2:	mov    QWORD PTR [rbp+0x77],r15
   1400024a6:	xor    edx,edx
   1400024a8:	mov    DWORD PTR [rbp-0x19],r15d
   1400024ac:	lea    rcx,[rbp-0x11]
   1400024b0:	lea    r8d,[r15+0x40]
   1400024b4:	call   0x14000463c
   1400024b9:	call   0x140001e10
   1400024be:	lea    r12d,[r15+0x1]
   1400024c2:	mov    cl,r12b
   1400024c5:	call   0x140002c0c
   1400024ca:	test   eax,eax
   1400024cc:	je     0x14000269a
   1400024d2:	lea    rcx,[rip+0x1e37]        # 0x140004310
   1400024d9:	call   0x140003e70
   1400024de:	cmp    edi,0x3
   1400024e1:	jne    0x140002605
   1400024e7:	mov    r14,QWORD PTR [rbx+0x8]
   1400024eb:	test   r14,r14
   1400024ee:	je     0x140002605
   1400024f4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400024f8:	test   rcx,rcx
   1400024fb:	je     0x140002605
   140002501:	lea    r8,[rbp+0x77]
   140002505:	xor    edx,edx
   140002507:	call   QWORD PTR [rip+0xaaf3]        # 0x14000d000
   14000250d:	test   eax,eax
   14000250f:	je     0x140002605
   140002515:	mov    rbx,QWORD PTR [rbp+0x77]
   140002519:	lea    rcx,[rip+0x4168]        # 0x140006688
   140002520:	xor    r8d,r8d
   140002523:	xor    edx,edx
   140002525:	call   0x140001d60
   14000252a:	mov    QWORD PTR [rip+0x6c77],rax        # 0x1400091a8
   140002531:	test   rax,rax
   140002534:	je     0x140002605
   14000253a:	lea    rdx,[rip+0x417f]        # 0x1400066c0
   140002541:	mov    rcx,rax
   140002544:	call   QWORD PTR [rip+0x3c1e]        # 0x140006168
   14000254a:	mov    QWORD PTR [rip+0x6c5f],rax        # 0x1400091b0
   140002551:	test   rax,rax
   140002554:	je     0x140002605
   14000255a:	call   0x140001500
   14000255f:	test   eax,eax
   140002561:	js     0x140002605
   140002567:	xor    ecx,ecx
   140002569:	call   QWORD PTR [rip+0x3b89]        # 0x1400060f8
   14000256f:	lea    rcx,[rbp-0x19]
   140002573:	mov    QWORD PTR [rbp+0x27],r14
   140002577:	mov    QWORD PTR [rbp-0x1],rax
   14000257b:	lea    rax,[rip+0xfffffffffffffdee]        # 0x140002370
   140002582:	mov    QWORD PTR [rbp-0x11],rax
   140002586:	call   QWORD PTR [rip+0xaacc]        # 0x14000d058
   14000258c:	test   ax,ax
   14000258f:	je     0x140002605
   140002591:	mov    rax,QWORD PTR [rbp-0x1]
   140002595:	xor    r9d,r9d
   140002598:	mov    rdx,QWORD PTR [rbp+0x27]
   14000259c:	xor    r8d,r8d
   14000259f:	mov    QWORD PTR [rsp+0x58],r15
   1400025a4:	xor    ecx,ecx
   1400025a6:	mov    QWORD PTR [rsp+0x50],rax
   1400025ab:	mov    QWORD PTR [rsp+0x48],r15
   1400025b0:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffd
   1400025b9:	mov    DWORD PTR [rsp+0x38],r15d
   1400025be:	mov    DWORD PTR [rsp+0x30],r15d
   1400025c3:	mov    DWORD PTR [rsp+0x28],r15d
   1400025c8:	mov    DWORD PTR [rsp+0x20],r15d
   1400025cd:	call   QWORD PTR [rip+0xaa75]        # 0x14000d048
   1400025d3:	mov    rsi,rax
   1400025d6:	test   rax,rax
   1400025d9:	je     0x140002605
   1400025db:	lea    r9,[rip+0xfffffffffffff9de]        # 0x140001fc0
   1400025e2:	xor    edx,edx
   1400025e4:	mov    r8d,0x1388
   1400025ea:	mov    rcx,rax
   1400025ed:	call   QWORD PTR [rip+0xaa3d]        # 0x14000d030
   1400025f3:	test   rax,rax
   1400025f6:	je     0x140002605
   1400025f8:	mov    rcx,rbx
   1400025fb:	call   QWORD PTR [rip+0x3aff]        # 0x140006100
   140002601:	test   eax,eax
   140002603:	jne    0x140002621
   140002605:	mov    eax,r12d
   140002608:	jmp    0x14000269d
   14000260d:	lea    rcx,[rbp-0x49]
   140002611:	call   QWORD PTR [rip+0xaa61]        # 0x14000d078
   140002617:	lea    rcx,[rbp-0x49]
   14000261b:	call   QWORD PTR [rip+0xaa4f]        # 0x14000d070
   140002621:	xor    r9d,r9d
   140002624:	lea    rcx,[rbp-0x49]
   140002628:	xor    r8d,r8d
   14000262b:	xor    edx,edx
   14000262d:	call   QWORD PTR [rip+0xaa5d]        # 0x14000d090
   140002633:	test   eax,eax
   140002635:	jg     0x14000260d
   140002637:	mov    edx,DWORD PTR [rip+0x6bbb]        # 0x1400091f8
   14000263d:	mov    ebx,r15d
   140002640:	test   edx,edx
   140002642:	jle    0x140002677
   140002644:	mov    rdi,r15
   140002647:	test   rdi,rdi
   14000264a:	js     0x1400026b9
   14000264c:	cmp    ebx,edx
   14000264e:	jge    0x1400026b9
   140002650:	mov    rax,QWORD PTR [rip+0x6b99]        # 0x1400091f0
   140002657:	mov    rcx,QWORD PTR [rdi+rax*1]
   14000265b:	test   rcx,rcx
   14000265e:	je     0x14000266c
   140002660:	call   QWORD PTR [rip+0xaa3a]        # 0x14000d0a0
   140002666:	mov    edx,DWORD PTR [rip+0x6b8c]        # 0x1400091f8
   14000266c:	add    ebx,r12d
   14000266f:	add    rdi,0x10
   140002673:	cmp    ebx,edx
   140002675:	jl     0x140002647
   140002677:	xor    edx,edx
   140002679:	mov    rcx,rsi
   14000267c:	call   QWORD PTR [rip+0xa9a6]        # 0x14000d028
   140002682:	mov    rcx,rsi
   140002685:	call   QWORD PTR [rip+0xa9ad]        # 0x14000d038
   14000268b:	xor    edx,edx
   14000268d:	mov    rcx,r14
   140002690:	call   QWORD PTR [rip+0xa9ba]        # 0x14000d050
   140002696:	xor    eax,eax
   140002698:	jmp    0x14000269d
   14000269a:	or     eax,0xffffffff
   14000269d:	lea    r11,[rsp+0xe0]
   1400026a5:	mov    rbx,QWORD PTR [r11+0x30]
   1400026a9:	mov    rsi,QWORD PTR [r11+0x38]
   1400026ad:	mov    rsp,r11
   1400026b0:	pop    r15
   1400026b2:	pop    r14
   1400026b4:	pop    r12
   1400026b6:	pop    rdi
   1400026b7:	pop    rbp
   1400026b8:	ret    
   1400026b9:	mov    edx,r12d
   1400026bc:	mov    ecx,0xc000008c
   1400026c1:	call   0x1400023b0
   1400026c6:	int3   
   1400026c7:	int3   
   1400026c8:	sub    rsp,0x28
   1400026cc:	mov    rdx,QWORD PTR [rcx]
   1400026cf:	sub    rdx,0x18
   1400026d3:	or     eax,0xffffffff
   1400026d6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400026db:	sub    eax,0x1
   1400026de:	jg     0x1400026f0
   1400026e0:	mov    rcx,QWORD PTR [rdx]
   1400026e3:	mov    rax,QWORD PTR [rcx]
   1400026e6:	mov    rax,QWORD PTR [rax+0x8]
   1400026ea:	call   QWORD PTR [rip+0x3c38]        # 0x140006328
   1400026f0:	add    rsp,0x28
   1400026f4:	ret    
   1400026f5:	int3   
   1400026f6:	int3   
   1400026f7:	int3   
   1400026f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400026fd:	push   rdi
   1400026fe:	sub    rsp,0x20
   140002702:	mov    rax,QWORD PTR [rcx]
   140002705:	mov    rbx,rcx
   140002708:	xor    ecx,ecx
   14000270a:	lea    rdx,[rax-0x18]
   14000270e:	mov    rdi,QWORD PTR [rdx]
   140002711:	cmp    DWORD PTR [rdx+0x8],ecx
   140002714:	je     0x14000275f
   140002716:	cmp    DWORD PTR [rdx+0x10],ecx
   140002719:	jge    0x14000272b
   14000271b:	cmp    DWORD PTR [rax-0xc],ecx
   14000271e:	jl     0x14000276a
   140002720:	mov    DWORD PTR [rax-0x10],ecx
   140002723:	mov    rax,QWORD PTR [rbx]
   140002726:	mov    WORD PTR [rax],cx
   140002729:	jmp    0x14000275f
   14000272b:	or     eax,0xffffffff
   14000272e:	lock xadd DWORD PTR [rdx+0x10],eax
   140002733:	sub    eax,0x1
   140002736:	jg     0x140002748
   140002738:	mov    rcx,QWORD PTR [rdx]
   14000273b:	mov    rax,QWORD PTR [rcx]
   14000273e:	mov    rax,QWORD PTR [rax+0x8]
   140002742:	call   QWORD PTR [rip+0x3be0]        # 0x140006328
   140002748:	mov    rax,QWORD PTR [rdi]
   14000274b:	mov    rcx,rdi
   14000274e:	mov    rax,QWORD PTR [rax+0x18]
   140002752:	call   QWORD PTR [rip+0x3bd0]        # 0x140006328
   140002758:	add    rax,0x18
   14000275c:	mov    QWORD PTR [rbx],rax
   14000275f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002764:	add    rsp,0x20
   140002768:	pop    rdi
   140002769:	ret    
   14000276a:	mov    ecx,0x80070057
   14000276f:	call   0x1400014dc
   140002774:	int3   
   140002775:	int3   
   140002776:	int3   
   140002777:	int3   
   140002778:	mov    rax,rsp
   14000277b:	mov    QWORD PTR [rax+0x8],rbx
   14000277f:	mov    QWORD PTR [rax+0x10],rbp
   140002783:	mov    QWORD PTR [rax+0x18],rsi
   140002787:	mov    QWORD PTR [rax+0x20],rdi
   14000278b:	push   r14
   14000278d:	sub    rsp,0x20
   140002791:	mov    rbx,QWORD PTR [rcx]
   140002794:	mov    rsi,rcx
   140002797:	mov    edi,edx
   140002799:	mov    rcx,QWORD PTR [rbx-0x18]
   14000279d:	mov    ebp,DWORD PTR [rbx-0x10]
   1400027a0:	mov    rax,QWORD PTR [rcx]
   1400027a3:	mov    rax,QWORD PTR [rax+0x20]
   1400027a7:	call   QWORD PTR [rip+0x3b7b]        # 0x140006328
   1400027ad:	mov    rcx,rax
   1400027b0:	mov    r8d,0x2
   1400027b6:	mov    rdx,QWORD PTR [rax]
   1400027b9:	mov    rax,QWORD PTR [rdx]
   1400027bc:	mov    edx,edi
   1400027be:	call   QWORD PTR [rip+0x3b64]        # 0x140006328
   1400027c4:	mov    r14,rax
   1400027c7:	test   rax,rax
   1400027ca:	je     0x14000282f
   1400027cc:	cmp    ebp,edi
   1400027ce:	mov    r8,rbx
   1400027d1:	cmovl  edi,ebp
   1400027d4:	inc    edi
   1400027d6:	movsxd rdx,edi
   1400027d9:	lea    rdi,[rax+0x18]
   1400027dd:	add    rdx,rdx
   1400027e0:	mov    rcx,rdi
   1400027e3:	mov    r9,rdx
   1400027e6:	call   0x1400028fc
   1400027eb:	or     eax,0xffffffff
   1400027ee:	mov    DWORD PTR [r14+0x8],ebp
   1400027f2:	lock xadd DWORD PTR [rbx-0x8],eax
   1400027f7:	sub    eax,0x1
   1400027fa:	jg     0x140002811
   1400027fc:	mov    rcx,QWORD PTR [rbx-0x18]
   140002800:	lea    rdx,[rbx-0x18]
   140002804:	mov    rax,QWORD PTR [rcx]
   140002807:	mov    rax,QWORD PTR [rax+0x8]
   14000280b:	call   QWORD PTR [rip+0x3b17]        # 0x140006328
   140002811:	mov    rbx,QWORD PTR [rsp+0x30]
   140002816:	mov    rbp,QWORD PTR [rsp+0x38]
   14000281b:	mov    QWORD PTR [rsi],rdi
   14000281e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002823:	mov    rdi,QWORD PTR [rsp+0x48]
   140002828:	add    rsp,0x20
   14000282c:	pop    r14
   14000282e:	ret    
   14000282f:	call   0x1400028ec
   140002834:	int3   
   140002835:	int3   
   140002836:	int3   
   140002837:	int3   
   140002838:	sub    rsp,0x28
   14000283c:	mov    rax,QWORD PTR [rcx]
   14000283f:	mov    r8d,edx
   140002842:	mov    r9,rcx
   140002845:	cmp    DWORD PTR [rax-0x10],edx
   140002848:	cmovg  r8d,DWORD PTR [rax-0x10]
   14000284d:	cmp    DWORD PTR [rax-0x8],0x1
   140002851:	jle    0x14000285f
   140002853:	mov    edx,r8d
   140002856:	add    rsp,0x28
   14000285a:	jmp    0x140002778
   14000285f:	mov    ecx,DWORD PTR [rax-0xc]
   140002862:	cmp    ecx,r8d
   140002865:	jge    0x140002891
   140002867:	cmp    ecx,0x40000000
   14000286d:	jle    0x140002877
   14000286f:	add    ecx,0x100000
   140002875:	jmp    0x140002880
   140002877:	mov    eax,ecx
   140002879:	cdq    
   14000287a:	sub    eax,edx
   14000287c:	sar    eax,1
   14000287e:	add    ecx,eax
   140002880:	cmp    ecx,r8d
   140002883:	cmovl  ecx,r8d
   140002887:	mov    edx,ecx
   140002889:	mov    rcx,r9
   14000288c:	call   0x140002898
   140002891:	add    rsp,0x28
   140002895:	ret    
   140002896:	int3   
   140002897:	int3   
   140002898:	rex push rbx
   14000289a:	sub    rsp,0x30
   14000289e:	mov    r8d,edx
   1400028a1:	mov    rbx,rcx
   1400028a4:	mov    rdx,QWORD PTR [rcx]
   1400028a7:	sub    rdx,0x18
   1400028ab:	mov    rcx,QWORD PTR [rdx]
   1400028ae:	cmp    DWORD PTR [rdx+0xc],r8d
   1400028b2:	jge    0x1400028e4
   1400028b4:	test   r8d,r8d
   1400028b7:	jle    0x1400028e4
   1400028b9:	mov    rax,QWORD PTR [rcx]
   1400028bc:	mov    r9d,0x2
   1400028c2:	mov    rax,QWORD PTR [rax+0x10]
   1400028c6:	call   QWORD PTR [rip+0x3a5c]        # 0x140006328
   1400028cc:	test   rax,rax
   1400028cf:	je     0x1400028de
   1400028d1:	add    rax,0x18
   1400028d5:	mov    QWORD PTR [rbx],rax
   1400028d8:	add    rsp,0x30
   1400028dc:	pop    rbx
   1400028dd:	ret    
   1400028de:	call   0x1400028ec
   1400028e3:	int3   
   1400028e4:	call   0x1400028ec
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	sub    rsp,0x28
   1400028f0:	mov    ecx,0x8007000e
   1400028f5:	call   0x1400014dc
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	mov    QWORD PTR [rsp+0x8],rbx
   140002901:	mov    QWORD PTR [rsp+0x10],rsi
   140002906:	push   rdi
   140002907:	sub    rsp,0x20
   14000290b:	mov    rbx,r9
   14000290e:	mov    rsi,r8
   140002911:	mov    rdi,rdx
   140002914:	test   r9,r9
   140002917:	jne    0x14000291d
   140002919:	xor    eax,eax
   14000291b:	jmp    0x140002976
   14000291d:	test   rcx,rcx
   140002920:	jne    0x140002939
   140002922:	call   QWORD PTR [rip+0x3940]        # 0x140006268
   140002928:	mov    ebx,0x16
   14000292d:	mov    DWORD PTR [rax],ebx
   14000292f:	call   QWORD PTR [rip+0x393b]        # 0x140006270
   140002935:	mov    eax,ebx
   140002937:	jmp    0x140002976
   140002939:	test   rsi,rsi
   14000293c:	je     0x140002950
   14000293e:	cmp    rdi,rbx
   140002941:	jb     0x140002950
   140002943:	mov    r8,rbx
   140002946:	mov    rdx,rsi
   140002949:	call   0x140004642
   14000294e:	jmp    0x140002919
   140002950:	mov    r8,rdi
   140002953:	xor    edx,edx
   140002955:	call   0x14000463c
   14000295a:	test   rsi,rsi
   14000295d:	je     0x140002922
   14000295f:	cmp    rdi,rbx
   140002962:	jae    0x140002971
   140002964:	call   QWORD PTR [rip+0x38fe]        # 0x140006268
   14000296a:	mov    ebx,0x22
   14000296f:	jmp    0x14000292d
   140002971:	mov    eax,0x16
   140002976:	mov    rbx,QWORD PTR [rsp+0x30]
   14000297b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002980:	add    rsp,0x20
   140002984:	pop    rdi
   140002985:	ret    
   140002986:	int3   
   140002987:	int3   
   140002988:	mov    QWORD PTR [rsp+0x8],rbx
   14000298d:	push   rdi
   14000298e:	sub    rsp,0x20
   140002992:	mov    eax,DWORD PTR [rip+0x7408]        # 0x140009da0
   140002998:	xor    ebx,ebx
   14000299a:	mov    rdi,rcx
   14000299d:	test   eax,eax
   14000299f:	je     0x1400029b4
   1400029a1:	lea    rcx,[rip+0x3e88]        # 0x140006830
   1400029a8:	call   QWORD PTR [rip+0x3662]        # 0x140006010
   1400029ae:	mov    eax,DWORD PTR [rip+0x73ec]        # 0x140009da0
   1400029b4:	cmp    DWORD PTR [rip+0x73da],ebx        # 0x140009d94
   1400029ba:	jne    0x140002a04
   1400029bc:	test   eax,eax
   1400029be:	jne    0x1400029c9
   1400029c0:	call   0x140002a18
   1400029c5:	test   eax,eax
   1400029c7:	je     0x1400029dd
   1400029c9:	mov    rcx,QWORD PTR [rip+0x6638]        # 0x140009008
   1400029d0:	mov    rdx,rdi
   1400029d3:	call   QWORD PTR [rip+0x3667]        # 0x140006040
   1400029d9:	test   eax,eax
   1400029db:	jne    0x140002a04
   1400029dd:	call   QWORD PTR [rip+0x369d]        # 0x140006080
   1400029e3:	lea    ecx,[rax-0x7e]
   1400029e6:	cmp    ecx,0x1
   1400029e9:	jbe    0x1400029fa
   1400029eb:	cmp    eax,0x78
   1400029ee:	je     0x1400029fa
   1400029f0:	cmp    eax,0x1
   1400029f3:	je     0x1400029fa
   1400029f5:	cmp    eax,0x32
   1400029f8:	jne    0x140002a09
   1400029fa:	mov    DWORD PTR [rip+0x7390],0x1        # 0x140009d94
   140002a04:	mov    ebx,0x1
   140002a09:	mov    eax,ebx
   140002a0b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a10:	add    rsp,0x20
   140002a14:	pop    rdi
   140002a15:	ret    
   140002a16:	int3   
   140002a17:	int3   
   140002a18:	rex push rbx
   140002a1a:	sub    rsp,0x2f0
   140002a21:	mov    rax,QWORD PTR [rip+0x6608]        # 0x140009030
   140002a28:	xor    rax,rsp
   140002a2b:	mov    QWORD PTR [rsp+0x2e0],rax
   140002a33:	xor    ebx,ebx
   140002a35:	mov    QWORD PTR [rsp+0x40],rbx
   140002a3a:	cmp    DWORD PTR [rip+0x7354],ebx        # 0x140009d94
   140002a40:	jne    0x140002bc4
   140002a46:	cmp    QWORD PTR [rip+0x65ba],0xffffffffffffffff        # 0x140009008
   140002a4e:	jne    0x140002bc4
   140002a54:	mov    QWORD PTR [rsp+0x30],rbx
   140002a59:	mov    QWORD PTR [rsp+0x28],0x10
   140002a62:	lea    rax,[rsp+0x50]
   140002a67:	mov    QWORD PTR [rsp+0x20],rax
   140002a6c:	lea    r9d,[rbx+0x1]
   140002a70:	xor    r8d,r8d
   140002a73:	lea    rdx,[rip+0x658e]        # 0x140009008
   140002a7a:	mov    ecx,0x80000010
   140002a7f:	call   QWORD PTR [rip+0x35d3]        # 0x140006058
   140002a85:	test   eax,eax
   140002a87:	je     0x140002bc9
   140002a8d:	mov    rax,QWORD PTR [rsp+0x50]
   140002a92:	test   rax,rax
   140002a95:	jne    0x140002b65
   140002a9b:	lea    r8,[rsp+0x48]
   140002aa0:	lea    rdx,[rip+0x6561]        # 0x140009008
   140002aa7:	lea    ecx,[rbx+0x6]
   140002aaa:	call   QWORD PTR [rip+0x3578]        # 0x140006028
   140002ab0:	test   eax,eax
   140002ab2:	je     0x140002bc9
   140002ab8:	mov    r8d,0x105
   140002abe:	lea    rdx,[rsp+0xd0]
   140002ac6:	mov    rcx,QWORD PTR [rsp+0x48]
   140002acb:	call   QWORD PTR [rip+0x354f]        # 0x140006020
   140002ad1:	test   eax,eax
   140002ad3:	je     0x140002bc9
   140002ad9:	cmp    eax,0x105
   140002ade:	jb     0x140002aee
   140002ae0:	lea    ecx,[rbx+0x6f]
   140002ae3:	call   QWORD PTR [rip+0x352f]        # 0x140006018
   140002ae9:	jmp    0x140002bc9
   140002aee:	mov    DWORD PTR [rsp+0x60],0x38
   140002af6:	mov    DWORD PTR [rsp+0x64],0x88
   140002afe:	lea    rax,[rsp+0xd0]
   140002b06:	mov    QWORD PTR [rsp+0x68],rax
   140002b0b:	mov    QWORD PTR [rsp+0x80],0x3
   140002b17:	mov    rax,QWORD PTR [rsp+0x48]
   140002b1c:	mov    QWORD PTR [rsp+0x90],rax
   140002b24:	lea    rcx,[rsp+0x60]
   140002b29:	call   QWORD PTR [rip+0x3541]        # 0x140006070
   140002b2f:	mov    QWORD PTR [rsp+0x50],rax
   140002b34:	cmp    rax,0xffffffffffffffff
   140002b38:	jne    0x140002b5b
   140002b3a:	call   QWORD PTR [rip+0x3540]        # 0x140006080
   140002b40:	lea    ecx,[rax-0x714]
   140002b46:	cmp    ecx,0x3
   140002b49:	jbe    0x140002b53
   140002b4b:	add    eax,0xfffffffe
   140002b4e:	cmp    eax,0x1
   140002b51:	ja     0x140002bc9
   140002b53:	mov    rax,rbx
   140002b56:	mov    QWORD PTR [rsp+0x50],rbx
   140002b5b:	mov    DWORD PTR [rip+0x7237],0x1        # 0x140009d9c
   140002b65:	mov    QWORD PTR [rip+0x649c],rax        # 0x140009008
   140002b6c:	lea    rdx,[rsp+0x40]
   140002b71:	mov    rcx,rax
   140002b74:	call   QWORD PTR [rip+0x34c6]        # 0x140006040
   140002b7a:	test   eax,eax
   140002b7c:	je     0x140002bc4
   140002b7e:	mov    DWORD PTR [rsp+0x60],0x70
   140002b86:	lea    rax,[rsp+0x60]
   140002b8b:	mov    QWORD PTR [rsp+0x20],rax
   140002b90:	lea    r9,[rip+0x3c79]        # 0x140006810
   140002b97:	xor    edx,edx
   140002b99:	xor    ecx,ecx
   140002b9b:	lea    r8d,[rdx+0x2]
   140002b9f:	call   QWORD PTR [rip+0x34ab]        # 0x140006050
   140002ba5:	test   eax,eax
   140002ba7:	je     0x140002bb7
   140002ba9:	lea    rcx,[rip+0x3c60]        # 0x140006810
   140002bb0:	call   QWORD PTR [rip+0x347a]        # 0x140006030
   140002bb6:	nop
   140002bb7:	mov    rdx,QWORD PTR [rsp+0x40]
   140002bbc:	xor    ecx,ecx
   140002bbe:	call   QWORD PTR [rip+0x3484]        # 0x140006048
   140002bc4:	mov    ebx,0x1
   140002bc9:	mov    eax,ebx
   140002bcb:	mov    rcx,QWORD PTR [rsp+0x2e0]
   140002bd3:	xor    rcx,rsp
   140002bd6:	call   0x140003610
   140002bdb:	add    rsp,0x2f0
   140002be2:	pop    rbx
   140002be3:	ret    
   140002be4:	lea    rax,[rip+0x71bd]        # 0x140009da8
   140002beb:	ret    
   140002bec:	sub    rsp,0x28
   140002bf0:	test   rcx,rcx
   140002bf3:	je     0x140002c07
   140002bf5:	mov    r8,rcx
   140002bf8:	xor    edx,edx
   140002bfa:	mov    rcx,QWORD PTR [rip+0x71af]        # 0x140009db0
   140002c01:	call   QWORD PTR [rip+0x3589]        # 0x140006190
   140002c07:	add    rsp,0x28
   140002c0b:	ret    
   140002c0c:	rex push rbx
   140002c0e:	sub    rsp,0x20
   140002c12:	cmp    DWORD PTR [rip+0x719f],0x0        # 0x140009db8
   140002c19:	mov    bl,cl
   140002c1b:	je     0x140002c87
   140002c1d:	xor    r8d,r8d
   140002c20:	lea    rcx,[rip+0x7199]        # 0x140009dc0
   140002c27:	xor    edx,edx
   140002c29:	call   QWORD PTR [rip+0x3531]        # 0x140006160
   140002c2f:	test   eax,eax
   140002c31:	jne    0x140002c83
   140002c33:	mov    rax,QWORD PTR [rip+0x63c6]        # 0x140009000
   140002c3a:	lea    rcx,[rip+0x63bf]        # 0x140009000
   140002c41:	cmp    rax,rcx
   140002c44:	je     0x140002c77
   140002c46:	cmp    BYTE PTR [rax+0x19],0x2
   140002c4a:	jb     0x140002c77
   140002c4c:	test   BYTE PTR [rax+0x1c],0x1
   140002c50:	je     0x140002c77
   140002c52:	call   QWORD PTR [rip+0x3428]        # 0x140006080
   140002c58:	mov    rcx,QWORD PTR [rip+0x63a1]        # 0x140009000
   140002c5f:	lea    r8,[rip+0x3c0a]        # 0x140006870
   140002c66:	mov    r9d,eax
   140002c69:	mov    edx,0xa
   140002c6e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c72:	call   0x140002ca0
   140002c77:	and    QWORD PTR [rip+0x7131],0x0        # 0x140009db0
   140002c7f:	xor    eax,eax
   140002c81:	jmp    0x140002c99
   140002c83:	test   bl,bl
   140002c85:	je     0x140002c7f
   140002c87:	call   QWORD PTR [rip+0x351b]        # 0x1400061a8
   140002c8d:	mov    QWORD PTR [rip+0x711c],rax        # 0x140009db0
   140002c94:	mov    eax,0x1
   140002c99:	add    rsp,0x20
   140002c9d:	pop    rbx
   140002c9e:	ret    
   140002c9f:	int3   
   140002ca0:	mov    r11,rsp
   140002ca3:	mov    DWORD PTR [r11+0x20],r9d
   140002ca7:	sub    rsp,0x48
   140002cab:	and    QWORD PTR [r11-0x18],0x0
   140002cb0:	lea    rax,[r11+0x20]
   140002cb4:	movzx  r9d,dx
   140002cb8:	mov    edx,0x2b
   140002cbd:	mov    QWORD PTR [r11-0x20],0x4
   140002cc5:	mov    QWORD PTR [r11-0x28],rax
   140002cc9:	call   0x140002db0
   140002cce:	add    rsp,0x48
   140002cd2:	ret    
   140002cd3:	int3   
   140002cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140002cd9:	push   rdi
   140002cda:	sub    rsp,0x20
   140002cde:	xor    edx,edx
   140002ce0:	mov    rdi,rcx
   140002ce3:	lea    r8d,[rdx+0x28]
   140002ce7:	add    rcx,r8
   140002cea:	call   0x14000463c
   140002cef:	and    QWORD PTR [rdi+0x50],0x0
   140002cf4:	lea    rax,[rip+0xffffffffffffd305]        # 0x140000000
   140002cfb:	and    DWORD PTR [rdi+0x58],0x0
   140002cff:	lea    rcx,[rdi+0x28]
   140002d03:	and    DWORD PTR [rdi+0x5c],0x0
   140002d07:	xor    r8d,r8d
   140002d0a:	mov    QWORD PTR [rdi+0x10],rax
   140002d0e:	xor    edx,edx
   140002d10:	mov    QWORD PTR [rdi+0x8],rax
   140002d14:	lea    rax,[rip+0x3b65]        # 0x140006880
   140002d1b:	mov    QWORD PTR [rdi+0x20],rax
   140002d1f:	mov    DWORD PTR [rdi],0x60
   140002d25:	mov    DWORD PTR [rdi+0x18],0xe00
   140002d2c:	call   0x1400023a8
   140002d31:	test   eax,eax
   140002d33:	jne    0x140002d6b
   140002d35:	call   QWORD PTR [rip+0x3345]        # 0x140006080
   140002d3b:	movzx  ecx,ax
   140002d3e:	or     ecx,0x80070000
   140002d44:	test   eax,eax
   140002d46:	cmovle ecx,eax
   140002d49:	test   ecx,ecx
   140002d4b:	jns    0x140002d6b
   140002d4d:	call   QWORD PTR [rip+0x330d]        # 0x140006060
   140002d53:	test   eax,eax
   140002d55:	je     0x140002d64
   140002d57:	lea    rcx,[rip+0x3b32]        # 0x140006890
   140002d5e:	call   QWORD PTR [rip+0x3304]        # 0x140006068
   140002d64:	mov    BYTE PTR [rip+0x6435],0x1        # 0x1400091a0
   140002d6b:	mov    rax,rdi
   140002d6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d73:	add    rsp,0x20
   140002d77:	pop    rdi
   140002d78:	ret    
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	rex push rbx
   140002d7e:	sub    rsp,0x20
   140002d82:	mov    rbx,rcx
   140002d85:	add    rcx,0x28
   140002d89:	call   QWORD PTR [rip+0x3381]        # 0x140006110
   140002d8f:	mov    rcx,QWORD PTR [rbx+0x50]
   140002d93:	test   rcx,rcx
   140002d96:	je     0x140002da2
   140002d98:	call   0x14000467e
   140002d9d:	and    QWORD PTR [rbx+0x50],0x0
   140002da2:	and    DWORD PTR [rbx+0x58],0x0
   140002da6:	and    DWORD PTR [rbx+0x5c],0x0
   140002daa:	add    rsp,0x20
   140002dae:	pop    rbx
   140002daf:	ret    
   140002db0:	jmp    QWORD PTR [rip+0x324a]        # 0x140006000
   140002db6:	lea    rax,[rip+0xa243]        # 0x14000d000
   140002dbd:	jmp    0x140002dc2
   140002dc2:	mov    QWORD PTR [rsp+0x8],rcx
   140002dc7:	mov    QWORD PTR [rsp+0x10],rdx
   140002dcc:	mov    QWORD PTR [rsp+0x18],r8
   140002dd1:	mov    QWORD PTR [rsp+0x20],r9
   140002dd6:	sub    rsp,0x68
   140002dda:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140002de0:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002de6:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140002dec:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002df2:	mov    rdx,rax
   140002df5:	lea    rcx,[rip+0x499c]        # 0x140007798
   140002dfc:	call   0x140004ad0
   140002e01:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002e07:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140002e0d:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140002e13:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140002e19:	mov    rcx,QWORD PTR [rsp+0x70]
   140002e1e:	mov    rdx,QWORD PTR [rsp+0x78]
   140002e23:	mov    r8,QWORD PTR [rsp+0x80]
   140002e2b:	mov    r9,QWORD PTR [rsp+0x88]
   140002e33:	add    rsp,0x68
   140002e37:	jmp    0x140002e39
   140002e39:	jmp    rax
   140002e3b:	lea    rax,[rip+0xa256]        # 0x14000d098
   140002e42:	jmp    0x140002e47
   140002e47:	mov    QWORD PTR [rsp+0x8],rcx
   140002e4c:	mov    QWORD PTR [rsp+0x10],rdx
   140002e51:	mov    QWORD PTR [rsp+0x18],r8
   140002e56:	mov    QWORD PTR [rsp+0x20],r9
   140002e5b:	sub    rsp,0x68
   140002e5f:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140002e65:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002e6b:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140002e71:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002e77:	mov    rdx,rax
   140002e7a:	lea    rcx,[rip+0x4937]        # 0x1400077b8
   140002e81:	call   0x140004ad0
   140002e86:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002e8c:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140002e92:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140002e98:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140002e9e:	mov    rcx,QWORD PTR [rsp+0x70]
   140002ea3:	mov    rdx,QWORD PTR [rsp+0x78]
   140002ea8:	mov    r8,QWORD PTR [rsp+0x80]
   140002eb0:	mov    r9,QWORD PTR [rsp+0x88]
   140002eb8:	add    rsp,0x68
   140002ebc:	jmp    0x140002ebe
   140002ebe:	jmp    rax
   140002ec0:	lea    rax,[rip+0xa1c9]        # 0x14000d090
   140002ec7:	jmp    0x140002e47
   140002ecc:	lea    rax,[rip+0xa1a5]        # 0x14000d078
   140002ed3:	jmp    0x140002e47
   140002ed8:	lea    rax,[rip+0xa191]        # 0x14000d070
   140002edf:	jmp    0x140002e47
   140002ee4:	lea    rax,[rip+0xa17d]        # 0x14000d068
   140002eeb:	jmp    0x140002e47
   140002ef0:	lea    rax,[rip+0xa169]        # 0x14000d060
   140002ef7:	jmp    0x140002e47
   140002efc:	lea    rax,[rip+0xa155]        # 0x14000d058
   140002f03:	jmp    0x140002e47
   140002f08:	lea    rax,[rip+0xa141]        # 0x14000d050
   140002f0f:	jmp    0x140002e47
   140002f14:	lea    rax,[rip+0xa12d]        # 0x14000d048
   140002f1b:	jmp    0x140002e47
   140002f20:	lea    rax,[rip+0xa119]        # 0x14000d040
   140002f27:	jmp    0x140002e47
   140002f2c:	lea    rax,[rip+0xa105]        # 0x14000d038
   140002f33:	jmp    0x140002e47
   140002f38:	lea    rax,[rip+0xa0f1]        # 0x14000d030
   140002f3f:	jmp    0x140002e47
   140002f44:	lea    rax,[rip+0xa0dd]        # 0x14000d028
   140002f4b:	jmp    0x140002e47
   140002f50:	lea    rax,[rip+0xa0c9]        # 0x14000d020
   140002f57:	jmp    0x140002e47
   140002f5c:	lea    rax,[rip+0xa0b5]        # 0x14000d018
   140002f63:	jmp    0x140002e47
   140002f68:	lea    rax,[rip+0xa0a1]        # 0x14000d010
   140002f6f:	jmp    0x140002e47
   140002f74:	lea    rax,[rip+0xa125]        # 0x14000d0a0
   140002f7b:	jmp    0x140002e47
   140002f80:	mov    QWORD PTR [rsp+0x8],rcx
   140002f85:	push   rbx
   140002f86:	sub    rsp,0x30
   140002f8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f93:	mov    rbx,rcx
   140002f96:	call   0x14000159c
   140002f9b:	mov    rcx,rax
   140002f9e:	xor    edx,edx
   140002fa0:	test   rax,rax
   140002fa3:	setne  dl
   140002fa6:	test   edx,edx
   140002fa8:	jne    0x140002fb5
   140002faa:	mov    ecx,0x80004005
   140002faf:	call   0x1400014dc
   140002fb4:	int3   
   140002fb5:	mov    rax,QWORD PTR [rax]
   140002fb8:	mov    rax,QWORD PTR [rax+0x18]
   140002fbc:	call   QWORD PTR [rip+0x3366]        # 0x140006328
   140002fc2:	add    rax,0x18
   140002fc6:	mov    QWORD PTR [rbx+0x1690],rax
   140002fcd:	mov    rcx,rbx
   140002fd0:	call   0x140003338
   140002fd5:	nop
   140002fd6:	mov    rax,rbx
   140002fd9:	add    rsp,0x30
   140002fdd:	pop    rbx
   140002fde:	ret    
   140002fdf:	int3   
   140002fe0:	rex push rbx
   140002fe2:	sub    rsp,0x30
   140002fe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002fef:	mov    rbx,rcx
   140002ff2:	call   0x140003338
   140002ff7:	nop
   140002ff8:	mov    rdx,QWORD PTR [rbx+0x1690]
   140002fff:	sub    rdx,0x18
   140003003:	or     eax,0xffffffff
   140003006:	lock xadd DWORD PTR [rdx+0x10],eax
   14000300b:	sub    eax,0x1
   14000300e:	jg     0x140003021
   140003010:	mov    rcx,QWORD PTR [rdx]
   140003013:	mov    rax,QWORD PTR [rcx]
   140003016:	mov    rax,QWORD PTR [rax+0x8]
   14000301a:	call   QWORD PTR [rip+0x3308]        # 0x140006328
   140003020:	nop
   140003021:	add    rsp,0x30
   140003025:	pop    rbx
   140003026:	ret    
   140003027:	int3   
   140003028:	rex push rbx
   14000302a:	sub    rsp,0x20
   14000302e:	mov    rbx,rcx
   140003031:	mov    rcx,QWORD PTR [rcx+0x1698]
   140003038:	test   rcx,rcx
   14000303b:	je     0x1400030a9
   14000303d:	xor    r8d,r8d
   140003040:	lea    edx,[r8-0x15]
   140003044:	call   QWORD PTR [rip+0xa03e]        # 0x14000d088
   14000304a:	mov    rcx,QWORD PTR [rbx+0x1698]
   140003051:	call   QWORD PTR [rip+0x9fe1]        # 0x14000d038
   140003057:	mov    edx,DWORD PTR [rbx+0x168c]
   14000305d:	lea    rcx,[rsp+0x30]
   140003062:	and    QWORD PTR [rbx+0x1698],0x0
   14000306a:	call   0x1400031c8
   14000306f:	mov    rbx,QWORD PTR [rax]
   140003072:	call   QWORD PTR [rip+0x30f8]        # 0x140006170
   140003078:	mov    rdx,rax
   14000307b:	mov    rcx,rbx
   14000307e:	call   0x140003388
   140003083:	mov    rdx,QWORD PTR [rsp+0x30]
   140003088:	add    rdx,0xffffffffffffffe8
   14000308c:	or     eax,0xffffffff
   14000308f:	lock xadd DWORD PTR [rdx+0x10],eax
   140003094:	sub    eax,0x1
   140003097:	jg     0x1400030a9
   140003099:	mov    rcx,QWORD PTR [rdx]
   14000309c:	mov    rax,QWORD PTR [rcx]
   14000309f:	mov    rax,QWORD PTR [rax+0x8]
   1400030a3:	call   QWORD PTR [rip+0x327f]        # 0x140006328
   1400030a9:	add    rsp,0x20
   1400030ad:	pop    rbx
   1400030ae:	ret    
   1400030af:	int3   
   1400030b0:	mov    rax,rsp
   1400030b3:	mov    QWORD PTR [rax+0x10],rdx
   1400030b7:	mov    QWORD PTR [rax+0x18],r8
   1400030bb:	mov    QWORD PTR [rax+0x20],r9
   1400030bf:	sub    rsp,0x28
   1400030c3:	lea    r8,[rax+0x18]
   1400030c7:	call   0x1400030d4
   1400030cc:	add    rsp,0x28
   1400030d0:	ret    
   1400030d1:	int3   
   1400030d2:	int3   
   1400030d3:	int3   
   1400030d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400030d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400030de:	mov    QWORD PTR [rsp+0x18],rsi
   1400030e3:	push   rdi
   1400030e4:	push   r14
   1400030e6:	push   r15
   1400030e8:	sub    rsp,0x30
   1400030ec:	xor    r15d,r15d
   1400030ef:	mov    rbp,r8
   1400030f2:	mov    rsi,rdx
   1400030f5:	mov    rdi,rcx
   1400030f8:	test   rdx,rdx
   1400030fb:	je     0x1400031a5
   140003101:	call   0x140002be4
   140003106:	mov    QWORD PTR [rsp+0x28],rbp
   14000310b:	mov    r9,rsi
   14000310e:	xor    r8d,r8d
   140003111:	mov    QWORD PTR [rsp+0x20],r15
   140003116:	xor    edx,edx
   140003118:	mov    r14,rax
   14000311b:	mov    rcx,QWORD PTR [rax]
   14000311e:	or     rcx,0x6
   140003122:	call   QWORD PTR [rip+0x31d8]        # 0x140006300
   140003128:	mov    ebx,eax
   14000312a:	or     eax,0xffffffff
   14000312d:	test   ebx,ebx
   14000312f:	cmovs  ebx,eax
   140003132:	test   ebx,ebx
   140003134:	js     0x1400031b0
   140003136:	mov    rax,QWORD PTR [rdi]
   140003139:	lea    ecx,[r15+0x1]
   14000313d:	sub    ecx,DWORD PTR [rax-0x8]
   140003140:	mov    eax,DWORD PTR [rax-0xc]
   140003143:	sub    eax,ebx
   140003145:	or     ecx,eax
   140003147:	jge    0x140003153
   140003149:	mov    edx,ebx
   14000314b:	mov    rcx,rdi
   14000314e:	call   0x140002838
   140003153:	mov    rcx,QWORD PTR [r14]
   140003156:	lea    eax,[rbx+0x1]
   140003159:	mov    rdx,QWORD PTR [rdi]
   14000315c:	or     rcx,0x4
   140003160:	movsxd r8,eax
   140003163:	mov    r9,rsi
   140003166:	mov    QWORD PTR [rsp+0x28],rbp
   14000316b:	mov    QWORD PTR [rsp+0x20],r15
   140003170:	call   QWORD PTR [rip+0x3172]        # 0x1400062e8
   140003176:	mov    rax,QWORD PTR [rdi]
   140003179:	cmp    ebx,DWORD PTR [rax-0xc]
   14000317c:	jg     0x1400031bb
   14000317e:	mov    rbp,QWORD PTR [rsp+0x58]
   140003183:	mov    rsi,QWORD PTR [rsp+0x60]
   140003188:	mov    DWORD PTR [rax-0x10],ebx
   14000318b:	mov    rax,QWORD PTR [rdi]
   14000318e:	movsxd rcx,ebx
   140003191:	mov    rbx,QWORD PTR [rsp+0x50]
   140003196:	mov    WORD PTR [rax+rcx*2],r15w
   14000319b:	add    rsp,0x30
   14000319f:	pop    r15
   1400031a1:	pop    r14
   1400031a3:	pop    rdi
   1400031a4:	ret    
   1400031a5:	mov    ecx,0x80070057
   1400031aa:	call   0x1400014dc
   1400031af:	int3   
   1400031b0:	mov    ecx,0x80004005
   1400031b5:	call   0x1400014dc
   1400031ba:	int3   
   1400031bb:	mov    ecx,0x80070057
   1400031c0:	call   0x1400014dc
   1400031c5:	int3   
   1400031c6:	int3   
   1400031c7:	int3   
   1400031c8:	mov    rax,rsp
   1400031cb:	mov    QWORD PTR [rax+0x8],rcx
   1400031cf:	push   rdi
   1400031d0:	sub    rsp,0x30
   1400031d4:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   1400031dc:	mov    QWORD PTR [rax+0x10],rbx
   1400031e0:	mov    edi,edx
   1400031e2:	mov    rbx,rcx
   1400031e5:	and    DWORD PTR [rax-0x18],0x0
   1400031e9:	call   0x14000159c
   1400031ee:	mov    rcx,rax
   1400031f1:	xor    r8d,r8d
   1400031f4:	test   rax,rax
   1400031f7:	setne  r8b
   1400031fb:	test   r8d,r8d
   1400031fe:	jne    0x14000320b
   140003200:	mov    ecx,0x80004005
   140003205:	call   0x1400014dc
   14000320a:	int3   
   14000320b:	mov    rax,QWORD PTR [rax]
   14000320e:	mov    rax,QWORD PTR [rax+0x18]
   140003212:	call   QWORD PTR [rip+0x3110]        # 0x140006328
   140003218:	add    rax,0x18
   14000321c:	mov    QWORD PTR [rbx],rax
   14000321f:	mov    DWORD PTR [rsp+0x20],0x1
   140003227:	lea    rax,[rip+0x378a]        # 0x1400069b8
   14000322e:	lea    r9,[rip+0x378b]        # 0x1400069c0
   140003235:	test   edi,edi
   140003237:	cmove  r9,rax
   14000323b:	lea    r8,[rip+0x3786]        # 0x1400069c8
   140003242:	lea    rdx,[rip+0x37b7]        # 0x140006a00
   140003249:	mov    rcx,rbx
   14000324c:	call   0x1400030b0
   140003251:	mov    rax,rbx
   140003254:	mov    rbx,QWORD PTR [rsp+0x48]
   140003259:	add    rsp,0x30
   14000325d:	pop    rdi
   14000325e:	ret    
   14000325f:	int3   
   140003260:	cmp    BYTE PTR [rip+0x5dc1],0x0        # 0x140009028
   140003267:	jne    0x140003277
   140003269:	and    DWORD PTR [rip+0x5da0],0x0        # 0x140009010
   140003270:	mov    BYTE PTR [rip+0x5db1],0x1        # 0x140009028
   140003277:	lea    rcx,[rip+0x5d92]        # 0x140009010
   14000327e:	jmp    0x140003284
   140003283:	int3   
   140003284:	rex push rbx
   140003286:	sub    rsp,0x20
   14000328a:	cmp    BYTE PTR [rcx+0x18],0x0
   14000328e:	mov    rbx,rcx
   140003291:	je     0x140003331
   140003297:	inc    DWORD PTR [rcx+0x10]
   14000329a:	inc    DWORD PTR [rbx+0x14]
   14000329d:	mov    ecx,DWORD PTR [rcx+0x10]
   1400032a0:	cmp    ecx,0x7d0
   1400032a6:	jl     0x140003331
   1400032ac:	cmp    QWORD PTR [rbx+0x8],0x0
   1400032b1:	jne    0x140003312
   1400032b3:	mov    eax,0x10624dd3
   1400032b8:	imul   ecx
   1400032ba:	sar    edx,0x7
   1400032bd:	mov    eax,edx
   1400032bf:	shr    eax,0x1f
   1400032c2:	add    edx,eax
   1400032c4:	imul   eax,edx,0x7d0
   1400032ca:	cmp    ecx,eax
   1400032cc:	jne    0x140003312
   1400032ce:	mov    edx,DWORD PTR [rbx]
   1400032d0:	lea    rcx,[rsp+0x30]
   1400032d5:	call   0x1400031c8
   1400032da:	mov    rcx,QWORD PTR [rsp+0x30]
   1400032df:	mov    rdx,rcx
   1400032e2:	call   QWORD PTR [rip+0x9d38]        # 0x14000d020
   1400032e8:	mov    rdx,QWORD PTR [rsp+0x30]
   1400032ed:	add    rdx,0xffffffffffffffe8
   1400032f1:	mov    QWORD PTR [rbx+0x8],rax
   1400032f5:	or     eax,0xffffffff
   1400032f8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400032fd:	sub    eax,0x1
   140003300:	jg     0x140003312
   140003302:	mov    rcx,QWORD PTR [rdx]
   140003305:	mov    rax,QWORD PTR [rcx]
   140003308:	mov    rax,QWORD PTR [rax+0x8]
   14000330c:	call   QWORD PTR [rip+0x3016]        # 0x140006328
   140003312:	mov    rcx,QWORD PTR [rbx+0x8]
   140003316:	test   rcx,rcx
   140003319:	je     0x140003331
   14000331b:	movsxd r8,DWORD PTR [rbx+0x10]
   14000331f:	xor    r9d,r9d
   140003322:	mov    edx,0xace2
   140003327:	call   QWORD PTR [rip+0x9d53]        # 0x14000d080
   14000332d:	and    DWORD PTR [rbx+0x10],0x0
   140003331:	add    rsp,0x20
   140003335:	pop    rbx
   140003336:	ret    
   140003337:	int3   
   140003338:	rex push rbx
   14000333a:	sub    rsp,0x20
   14000333e:	xor    eax,eax
   140003340:	mov    rbx,rcx
   140003343:	mov    BYTE PTR [rcx+0x1688],al
   140003349:	mov    QWORD PTR [rcx+0x1698],rax
   140003350:	mov    QWORD PTR [rcx+0x16a0],rax
   140003357:	mov    QWORD PTR [rcx+0x1680],rax
   14000335e:	add    rcx,0x1690
   140003365:	call   0x1400026f8
   14000336a:	xor    edx,edx
   14000336c:	mov    r8d,0x1680
   140003372:	mov    rcx,rbx
   140003375:	call   0x14000463c
   14000337a:	mov    rcx,rbx
   14000337d:	add    rsp,0x20
   140003381:	pop    rbx
   140003382:	jmp    0x140003028
   140003387:	int3   
   140003388:	mov    rax,rsp
   14000338b:	mov    QWORD PTR [rax+0x8],rbx
   14000338f:	mov    QWORD PTR [rax+0x10],rsi
   140003393:	push   rdi
   140003394:	sub    rsp,0x30
   140003398:	mov    rbx,rdx
   14000339b:	mov    rdi,rcx
   14000339e:	and    DWORD PTR [rax-0x18],0x0
   1400033a2:	and    QWORD PTR [rax+0x18],0x0
   1400033a7:	cmp    DWORD PTR [rip+0x69ea],0x0        # 0x140009d98
   1400033ae:	jne    0x1400033c6
   1400033b0:	cmp    DWORD PTR [rip+0x69dd],0x0        # 0x140009d94
   1400033b7:	jne    0x1400033c6
   1400033b9:	lea    rcx,[rax+0x18]
   1400033bd:	call   0x140002988
   1400033c2:	test   eax,eax
   1400033c4:	je     0x14000341c
   1400033c6:	mov    rdx,rbx
   1400033c9:	mov    rcx,rdi
   1400033cc:	call   QWORD PTR [rip+0x9c7e]        # 0x14000d050
   1400033d2:	mov    edi,eax
   1400033d4:	mov    DWORD PTR [rsp+0x20],eax
   1400033d8:	cmp    DWORD PTR [rip+0x69b9],0x0        # 0x140009d98
   1400033df:	je     0x1400033ea
   1400033e1:	cmp    DWORD PTR [rip+0x69ac],0x0        # 0x140009d94
   1400033e8:	jne    0x14000341a
   1400033ea:	xor    ebx,ebx
   1400033ec:	test   edi,edi
   1400033ee:	sete   bl
   1400033f1:	test   ebx,ebx
   1400033f3:	je     0x1400033ff
   1400033f5:	call   QWORD PTR [rip+0x2c85]        # 0x140006080
   1400033fb:	mov    esi,eax
   1400033fd:	jmp    0x140003401
   1400033ff:	xor    esi,esi
   140003401:	mov    rdx,QWORD PTR [rsp+0x50]
   140003406:	xor    ecx,ecx
   140003408:	call   QWORD PTR [rip+0x2c3a]        # 0x140006048
   14000340e:	test   ebx,ebx
   140003410:	je     0x14000341a
   140003412:	mov    ecx,esi
   140003414:	call   QWORD PTR [rip+0x2bfe]        # 0x140006018
   14000341a:	mov    eax,edi
   14000341c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003421:	mov    rsi,QWORD PTR [rsp+0x48]
   140003426:	add    rsp,0x30
   14000342a:	pop    rdi
   14000342b:	ret    
   14000342c:	sub    rsp,0x38
   140003430:	cmp    BYTE PTR [rcx+0x8],0x0
   140003434:	mov    r9,rcx
   140003437:	je     0x140003493
   140003439:	mov    rcx,QWORD PTR [rip+0x5bc0]        # 0x140009000
   140003440:	lea    rax,[rip+0x5bb9]        # 0x140009000
   140003447:	cmp    rcx,rax
   14000344a:	je     0x14000347f
   14000344c:	test   DWORD PTR [rcx+0x3c],0x400
   140003453:	je     0x140003493
   140003455:	cmp    BYTE PTR [rcx+0x39],0x5
   140003459:	jb     0x14000347f
   14000345b:	mov    rax,QWORD PTR [r9]
   14000345e:	lea    r8,[rip+0x35ab]        # 0x140006a10
   140003465:	mov    rcx,QWORD PTR [rcx+0x30]
   140003469:	mov    edx,0xc
   14000346e:	mov    QWORD PTR [rsp+0x20],rax
   140003473:	call   0x140003498
   140003478:	mov    rcx,QWORD PTR [rip+0x5b81]        # 0x140009000
   14000347f:	test   DWORD PTR [rcx+0x3c],0x400
   140003486:	je     0x140003493
   140003488:	cmp    BYTE PTR [rcx+0x39],0x5
   14000348c:	jb     0x140003493
   14000348e:	call   0x140003260
   140003493:	add    rsp,0x38
   140003497:	ret    
   140003498:	mov    QWORD PTR [rsp+0x20],r9
   14000349d:	sub    rsp,0x58
   1400034a1:	mov    rax,QWORD PTR [rsp+0x80]
   1400034a9:	xor    r11d,r11d
   1400034ac:	mov    r10,rcx
   1400034af:	test   rax,rax
   1400034b2:	je     0x1400034d8
   1400034b4:	cmp    WORD PTR [rax],r11w
   1400034b8:	jne    0x1400034c0
   1400034ba:	lea    ecx,[r11+0xe]
   1400034be:	jmp    0x1400034dd
   1400034c0:	or     rcx,0xffffffffffffffff
   1400034c4:	inc    rcx
   1400034c7:	cmp    WORD PTR [rax+rcx*2],r11w
   1400034cc:	jne    0x1400034c4
   1400034ce:	lea    rcx,[rcx*2+0x2]
   1400034d6:	jmp    0x1400034dd
   1400034d8:	mov    ecx,0xa
   1400034dd:	test   rax,rax
   1400034e0:	je     0x1400034f3
   1400034e2:	cmp    WORD PTR [rax],r11w
   1400034e6:	lea    r9,[rip+0x3533]        # 0x140006a20
   1400034ed:	cmove  rax,r9
   1400034f1:	jmp    0x1400034fa
   1400034f3:	lea    rax,[rip+0x3536]        # 0x140006a30
   1400034fa:	mov    QWORD PTR [rsp+0x40],r11
   1400034ff:	mov    QWORD PTR [rsp+0x38],rcx
   140003504:	mov    rcx,r10
   140003507:	mov    QWORD PTR [rsp+0x30],rax
   14000350c:	lea    rax,[rsp+0x78]
   140003511:	movzx  r9d,dx
   140003515:	mov    edx,0x2b
   14000351a:	mov    QWORD PTR [rsp+0x28],0x8
   140003523:	mov    QWORD PTR [rsp+0x20],rax
   140003528:	call   0x140002db0
   14000352d:	add    rsp,0x58
   140003531:	ret    
   140003532:	int3   
   140003533:	int3   
   140003534:	mov    QWORD PTR [rsp+0x18],rbx
   140003539:	push   rdi
   14000353a:	sub    rsp,0x20
   14000353e:	mov    rax,QWORD PTR [rip+0x5aeb]        # 0x140009030
   140003545:	movabs rdi,0x2b992ddfa23249d6
   14000354f:	test   rax,rax
   140003552:	je     0x140003564
   140003554:	mov    rax,QWORD PTR [rip+0x5ad5]        # 0x140009030
   14000355b:	cmp    rax,rdi
   14000355e:	jne    0x1400035eb
   140003564:	call   QWORD PTR [rip+0x2c3e]        # 0x1400061a8
   14000356a:	xor    r9d,r9d
   14000356d:	xor    r8d,r8d
   140003570:	mov    rcx,rax
   140003573:	lea    edx,[r9+0x1]
   140003577:	call   QWORD PTR [rip+0x2bd3]        # 0x140006150
   14000357d:	lea    rcx,[rsp+0x30]
   140003582:	call   QWORD PTR [rip+0x2bb0]        # 0x140006138
   140003588:	mov    rbx,QWORD PTR [rsp+0x30]
   14000358d:	call   QWORD PTR [rip+0x2bb5]        # 0x140006148
   140003593:	mov    eax,eax
   140003595:	xor    rbx,rax
   140003598:	call   QWORD PTR [rip+0x2ba2]        # 0x140006140
   14000359e:	mov    eax,eax
   1400035a0:	xor    rbx,rax
   1400035a3:	call   QWORD PTR [rip+0x2b87]        # 0x140006130
   1400035a9:	mov    eax,eax
   1400035ab:	lea    rcx,[rsp+0x38]
   1400035b0:	xor    rbx,rax
   1400035b3:	call   QWORD PTR [rip+0x2b9f]        # 0x140006158
   1400035b9:	xor    rbx,QWORD PTR [rsp+0x38]
   1400035be:	lea    rcx,[rip+0x5a6b]        # 0x140009030
   1400035c5:	mov    edx,0x8
   1400035ca:	cmovne rdi,rbx
   1400035ce:	mov    QWORD PTR [rip+0x5a5b],rdi        # 0x140009030
   1400035d5:	call   0x140004dca
   1400035da:	mov    rax,QWORD PTR [rip+0x5a4f]        # 0x140009030
   1400035e1:	not    rax
   1400035e4:	mov    QWORD PTR [rip+0x5a4d],rax        # 0x140009038
   1400035eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035f0:	add    rsp,0x20
   1400035f4:	pop    rdi
   1400035f5:	ret    
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	int3   
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	int3   
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003610:	cmp    rcx,QWORD PTR [rip+0x5a19]        # 0x140009030
   140003617:	jne    0x14000361b
   140003619:	repz ret 
   14000361b:	jmp    0x140004010
   140003620:	rex push rbx
   140003622:	sub    rsp,0x20
   140003626:	mov    ecx,0x1
   14000362b:	call   0x14000468a
   140003630:	call   0x140004160
   140003635:	mov    ecx,eax
   140003637:	call   0x1400046c0
   14000363c:	call   0x1400046f0
   140003641:	mov    rbx,rax
   140003644:	call   0x140004310
   140003649:	mov    ecx,0x1
   14000364e:	mov    DWORD PTR [rbx],eax
   140003650:	call   0x140003ca4
   140003655:	test   al,al
   140003657:	je     0x1400036c5
   140003659:	call   0x1400043b8
   14000365e:	lea    rcx,[rip+0xdab]        # 0x140004410
   140003665:	call   0x140003ec0
   14000366a:	call   0x140004158
   14000366f:	mov    ecx,eax
   140003671:	call   0x140004696
   140003676:	test   eax,eax
   140003678:	jne    0x1400036d0
   14000367a:	call   0x140004168
   14000367f:	call   0x1400041a0
   140003684:	test   eax,eax
   140003686:	je     0x140003694
   140003688:	lea    rcx,[rip+0xc81]        # 0x140004310
   14000368f:	call   0x140004690
   140003694:	call   0x140003ee0
   140003699:	call   0x140003ee0
   14000369e:	call   0x140004310
   1400036a3:	mov    ecx,eax
   1400036a5:	call   0x1400046e4
   1400036aa:	call   0x140004178
   1400036af:	test   al,al
   1400036b1:	je     0x1400036b8
   1400036b3:	call   0x14000469c
   1400036b8:	call   0x140004310
   1400036bd:	xor    eax,eax
   1400036bf:	add    rsp,0x20
   1400036c3:	pop    rbx
   1400036c4:	ret    
   1400036c5:	mov    ecx,0x7
   1400036ca:	call   0x1400041bc
   1400036cf:	int3   
   1400036d0:	mov    ecx,0x7
   1400036d5:	call   0x1400041bc
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	sub    rsp,0x28
   1400036e4:	call   0x140004184
   1400036e9:	xor    eax,eax
   1400036eb:	add    rsp,0x28
   1400036ef:	ret    
   1400036f0:	sub    rsp,0x28
   1400036f4:	call   0x140004368
   1400036f9:	call   0x140004310
   1400036fe:	mov    ecx,eax
   140003700:	add    rsp,0x28
   140003704:	jmp    0x1400046ea
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	mov    QWORD PTR [rsp+0x8],rbx
   140003711:	mov    QWORD PTR [rsp+0x10],rsi
   140003716:	push   rdi
   140003717:	sub    rsp,0x30
   14000371b:	mov    ecx,0x1
   140003720:	call   0x140003c58
   140003725:	test   al,al
   140003727:	jne    0x140003734
   140003729:	mov    ecx,0x7
   14000372e:	call   0x1400041bc
   140003733:	int3   
   140003734:	xor    sil,sil
   140003737:	mov    BYTE PTR [rsp+0x20],sil
   14000373c:	call   0x140003c1c
   140003741:	mov    bl,al
   140003743:	mov    ecx,DWORD PTR [rip+0x7e37]        # 0x14000b580
   140003749:	cmp    ecx,0x1
   14000374c:	jne    0x140003758
   14000374e:	mov    ecx,0x7
   140003753:	call   0x1400041bc
   140003758:	test   ecx,ecx
   14000375a:	jne    0x1400037a6
   14000375c:	mov    DWORD PTR [rip+0x7e1a],0x1        # 0x14000b580
   140003766:	lea    rdx,[rip+0x2c53]        # 0x1400063c0
   14000376d:	lea    rcx,[rip+0x2c24]        # 0x140006398
   140003774:	call   0x1400046ae
   140003779:	test   eax,eax
   14000377b:	je     0x140003787
   14000377d:	mov    eax,0xff
   140003782:	jmp    0x140003873
   140003787:	lea    rdx,[rip+0x2c02]        # 0x140006390
   14000378e:	lea    rcx,[rip+0x2b9b]        # 0x140006330
   140003795:	call   0x1400046a8
   14000379a:	mov    DWORD PTR [rip+0x7ddc],0x2        # 0x14000b580
   1400037a4:	jmp    0x1400037ae
   1400037a6:	mov    sil,0x1
   1400037a9:	mov    BYTE PTR [rsp+0x20],sil
   1400037ae:	mov    cl,bl
   1400037b0:	call   0x140003e20
   1400037b5:	call   0x1400041ac
   1400037ba:	mov    rbx,rax
   1400037bd:	cmp    QWORD PTR [rax],0x0
   1400037c1:	je     0x1400037e5
   1400037c3:	mov    rcx,rax
   1400037c6:	call   0x140003d84
   1400037cb:	test   al,al
   1400037cd:	je     0x1400037e5
   1400037cf:	mov    rbx,QWORD PTR [rbx]
   1400037d2:	mov    rcx,rbx
   1400037d5:	call   0x140003fc8
   1400037da:	xor    r8d,r8d
   1400037dd:	lea    edx,[r8+0x2]
   1400037e1:	xor    ecx,ecx
   1400037e3:	call   rbx
   1400037e5:	call   0x1400041b4
   1400037ea:	mov    rbx,rax
   1400037ed:	cmp    QWORD PTR [rax],0x0
   1400037f1:	je     0x140003807
   1400037f3:	mov    rcx,rax
   1400037f6:	call   0x140003d84
   1400037fb:	test   al,al
   1400037fd:	je     0x140003807
   1400037ff:	mov    rcx,QWORD PTR [rbx]
   140003802:	call   0x1400046de
   140003807:	call   0x1400046cc
   14000380c:	mov    rdi,QWORD PTR [rax]
   14000380f:	call   0x1400046c6
   140003814:	mov    rbx,rax
   140003817:	call   0x1400046a2
   14000381c:	mov    r8,rax
   14000381f:	mov    rdx,rdi
   140003822:	mov    ecx,DWORD PTR [rbx]
   140003824:	call   0x14000247c
   140003829:	mov    ebx,eax
   14000382b:	call   0x140004314
   140003830:	test   al,al
   140003832:	jne    0x14000383b
   140003834:	mov    ecx,ebx
   140003836:	call   0x1400046b4
   14000383b:	test   sil,sil
   14000383e:	jne    0x140003845
   140003840:	call   0x1400046d2
   140003845:	xor    edx,edx
   140003847:	mov    cl,0x1
   140003849:	call   0x140003e44
   14000384e:	mov    eax,ebx
   140003850:	jmp    0x140003873
   140003852:	mov    ebx,eax
   140003854:	call   0x140004314
   140003859:	test   al,al
   14000385b:	jne    0x140003865
   14000385d:	mov    ecx,ebx
   14000385f:	call   0x1400046ba
   140003864:	int3   
   140003865:	cmp    BYTE PTR [rsp+0x20],0x0
   14000386a:	jne    0x140003871
   14000386c:	call   0x1400046d8
   140003871:	mov    eax,ebx
   140003873:	mov    rbx,QWORD PTR [rsp+0x40]
   140003878:	mov    rsi,QWORD PTR [rsp+0x48]
   14000387d:	add    rsp,0x30
   140003881:	pop    rdi
   140003882:	ret    
   140003883:	int3   
   140003884:	int3   
   140003885:	int3   
   140003886:	int3   
   140003887:	int3   
   140003888:	int3   
   140003889:	int3   
   14000388a:	int3   
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	sub    rsp,0x28
   140003894:	call   0x140003534
   140003899:	add    rsp,0x28
   14000389d:	jmp    0x14000370c
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	int3   
   1400038a5:	int3   
   1400038a6:	int3   
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400038ba:	push   rdi
   1400038bb:	sub    rsp,0x20
   1400038bf:	xor    r8d,r8d
   1400038c2:	lea    rcx,[rip+0x7c6f]        # 0x14000b538
   1400038c9:	mov    edx,0xfa0
   1400038ce:	call   0x14000464e
   1400038d3:	lea    rcx,[rip+0x3166]        # 0x140006a40
   1400038da:	call   QWORD PTR [rip+0x2818]        # 0x1400060f8
   1400038e0:	mov    rbx,rax
   1400038e3:	test   rax,rax
   1400038e6:	jne    0x140003901
   1400038e8:	lea    rcx,[rip+0x2d69]        # 0x140006658
   1400038ef:	call   QWORD PTR [rip+0x2803]        # 0x1400060f8
   1400038f5:	mov    rbx,rax
   1400038f8:	test   rax,rax
   1400038fb:	je     0x1400039da
   140003901:	lea    rdx,[rip+0x3180]        # 0x140006a88
   140003908:	mov    rcx,rbx
   14000390b:	call   QWORD PTR [rip+0x2857]        # 0x140006168
   140003911:	lea    rdx,[rip+0x3190]        # 0x140006aa8
   140003918:	mov    rcx,rbx
   14000391b:	mov    rsi,rax
   14000391e:	call   QWORD PTR [rip+0x2844]        # 0x140006168
   140003924:	lea    rdx,[rip+0x319d]        # 0x140006ac8
   14000392b:	mov    rcx,rbx
   14000392e:	mov    rdi,rax
   140003931:	call   QWORD PTR [rip+0x2831]        # 0x140006168
   140003937:	mov    rbx,rax
   14000393a:	test   rsi,rsi
   14000393d:	je     0x14000399c
   14000393f:	test   rdi,rdi
   140003942:	je     0x14000399c
   140003944:	test   rax,rax
   140003947:	je     0x14000399c
   140003949:	and    QWORD PTR [rip+0x7c17],0x0        # 0x14000b568
   140003951:	mov    rcx,rsi
   140003954:	call   0x140003fc8
   140003959:	lea    rcx,[rip+0x7c00]        # 0x14000b560
   140003960:	call   rsi
   140003962:	mov    rdx,QWORD PTR [rip+0x56c7]        # 0x140009030
   140003969:	mov    ecx,0x40
   14000396e:	mov    eax,edx
   140003970:	and    eax,0x3f
   140003973:	sub    ecx,eax
   140003975:	ror    rdi,cl
   140003978:	xor    rdi,rdx
   14000397b:	ror    rbx,cl
   14000397e:	xor    rbx,rdx
   140003981:	mov    QWORD PTR [rip+0x7be8],rdi        # 0x14000b570
   140003988:	mov    QWORD PTR [rip+0x7be9],rbx        # 0x14000b578
   14000398f:	xor    ecx,ecx
   140003991:	call   0x140003ca4
   140003996:	test   al,al
   140003998:	jne    0x1400039bc
   14000399a:	jmp    0x1400039e5
   14000399c:	xor    r9d,r9d
   14000399f:	xor    r8d,r8d
   1400039a2:	xor    ecx,ecx
   1400039a4:	lea    edx,[r9+0x1]
   1400039a8:	call   QWORD PTR [rip+0x2742]        # 0x1400060f0
   1400039ae:	mov    QWORD PTR [rip+0x7bb3],rax        # 0x14000b568
   1400039b5:	test   rax,rax
   1400039b8:	jne    0x14000398f
   1400039ba:	jmp    0x1400039f0
   1400039bc:	lea    rcx,[rip+0x3d]        # 0x140003a00
   1400039c3:	call   0x140003ec0
   1400039c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039cd:	xor    eax,eax
   1400039cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400039d4:	add    rsp,0x20
   1400039d8:	pop    rdi
   1400039d9:	ret    
   1400039da:	mov    ecx,0x7
   1400039df:	call   0x1400041bc
   1400039e4:	int3   
   1400039e5:	mov    ecx,0x7
   1400039ea:	call   0x1400041bc
   1400039ef:	int3   
   1400039f0:	mov    ecx,0x7
   1400039f5:	call   0x1400041bc
   1400039fa:	int3   
   1400039fb:	int3   
   1400039fc:	int3   
   1400039fd:	int3   
   1400039fe:	int3   
   1400039ff:	int3   
   140003a00:	sub    rsp,0x28
   140003a04:	lea    rcx,[rip+0x7b2d]        # 0x14000b538
   140003a0b:	call   QWORD PTR [rip+0x26ff]        # 0x140006110
   140003a11:	mov    rcx,QWORD PTR [rip+0x7b50]        # 0x14000b568
   140003a18:	test   rcx,rcx
   140003a1b:	je     0x140003a23
   140003a1d:	call   QWORD PTR [rip+0x26fd]        # 0x140006120
   140003a23:	add    rsp,0x28
   140003a27:	ret    
   140003a28:	rex push rbx
   140003a2a:	sub    rsp,0x20
   140003a2e:	mov    rbx,rcx
   140003a31:	lea    rcx,[rip+0x7b00]        # 0x14000b538
   140003a38:	call   QWORD PTR [rip+0x2772]        # 0x1400061b0
   140003a3e:	mov    eax,DWORD PTR [rip+0x55fc]        # 0x140009040
   140003a44:	lea    rcx,[rip+0x7aed]        # 0x14000b538
   140003a4b:	mov    edx,DWORD PTR [rip+0x7b73]        # 0x14000b5c4
   140003a51:	inc    eax
   140003a53:	mov    DWORD PTR [rip+0x55e7],eax        # 0x140009040
   140003a59:	mov    DWORD PTR [rbx],eax
   140003a5b:	mov    rax,QWORD PTR gs:0x58
   140003a64:	mov    r9d,0x4
   140003a6a:	mov    r8,QWORD PTR [rax+rdx*8]
   140003a6e:	mov    eax,DWORD PTR [rip+0x55cc]        # 0x140009040
   140003a74:	mov    DWORD PTR [r9+r8*1],eax
   140003a78:	call   QWORD PTR [rip+0x271a]        # 0x140006198
   140003a7e:	add    rsp,0x20
   140003a82:	pop    rbx
   140003a83:	jmp    0x140003af0
   140003a88:	rex push rbx
   140003a8a:	sub    rsp,0x20
   140003a8e:	mov    rbx,rcx
   140003a91:	lea    rcx,[rip+0x7aa0]        # 0x14000b538
   140003a98:	call   QWORD PTR [rip+0x2712]        # 0x1400061b0
   140003a9e:	cmp    DWORD PTR [rbx],0x0
   140003aa1:	jne    0x140003ab4
   140003aa3:	or     DWORD PTR [rbx],0xffffffff
   140003aa6:	jmp    0x140003adc
   140003aa8:	mov    ecx,0x64
   140003aad:	call   0x140003b4c
   140003ab2:	jmp    0x140003a9e
   140003ab4:	cmp    DWORD PTR [rbx],0xffffffff
   140003ab7:	je     0x140003aa8
   140003ab9:	mov    rax,QWORD PTR gs:0x58
   140003ac2:	mov    ecx,DWORD PTR [rip+0x7afc]        # 0x14000b5c4
   140003ac8:	mov    r8d,0x4
   140003ace:	mov    rdx,QWORD PTR [rax+rcx*8]
   140003ad2:	mov    eax,DWORD PTR [rip+0x5568]        # 0x140009040
   140003ad8:	mov    DWORD PTR [r8+rdx*1],eax
   140003adc:	lea    rcx,[rip+0x7a55]        # 0x14000b538
   140003ae3:	add    rsp,0x20
   140003ae7:	pop    rbx
   140003ae8:	rex.W jmp QWORD PTR [rip+0x26a9]        # 0x140006198
   140003aef:	int3   
   140003af0:	rex push rbx
   140003af2:	sub    rsp,0x20
   140003af6:	mov    rcx,QWORD PTR [rip+0x7a6b]        # 0x14000b568
   140003afd:	test   rcx,rcx
   140003b00:	jne    0x140003b32
   140003b02:	mov    rbx,QWORD PTR [rip+0x5527]        # 0x140009030
   140003b09:	mov    ecx,ebx
   140003b0b:	xor    rbx,QWORD PTR [rip+0x7a66]        # 0x14000b578
   140003b12:	and    ecx,0x3f
   140003b15:	ror    rbx,cl
   140003b18:	mov    rcx,rbx
   140003b1b:	call   0x140003fc8
   140003b20:	lea    rcx,[rip+0x7a39]        # 0x14000b560
   140003b27:	mov    rax,rbx
   140003b2a:	add    rsp,0x20
   140003b2e:	pop    rbx
   140003b2f:	rex.W jmp rax
   140003b32:	call   QWORD PTR [rip+0x25c8]        # 0x140006100
   140003b38:	mov    rcx,QWORD PTR [rip+0x7a29]        # 0x14000b568
   140003b3f:	add    rsp,0x20
   140003b43:	pop    rbx
   140003b44:	rex.W jmp QWORD PTR [rip+0x25cd]        # 0x140006118
   140003b4b:	int3   
   140003b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b51:	mov    QWORD PTR [rsp+0x10],rsi
   140003b56:	push   rdi
   140003b57:	sub    rsp,0x20
   140003b5b:	xor    edi,edi
   140003b5d:	mov    esi,ecx
   140003b5f:	cmp    QWORD PTR [rip+0x7a02],rdi        # 0x14000b568
   140003b66:	jne    0x140003ba0
   140003b68:	mov    rbx,QWORD PTR [rip+0x54c1]        # 0x140009030
   140003b6f:	mov    ecx,ebx
   140003b71:	xor    rbx,QWORD PTR [rip+0x79f8]        # 0x14000b570
   140003b78:	and    ecx,0x3f
   140003b7b:	ror    rbx,cl
   140003b7e:	mov    rcx,rbx
   140003b81:	call   0x140003fc8
   140003b86:	mov    r8d,esi
   140003b89:	lea    rdx,[rip+0x79a8]        # 0x14000b538
   140003b90:	lea    rcx,[rip+0x79c9]        # 0x14000b560
   140003b97:	call   rbx
   140003b99:	test   eax,eax
   140003b9b:	setne  al
   140003b9e:	jmp    0x140003bd3
   140003ba0:	lea    rcx,[rip+0x7991]        # 0x14000b538
   140003ba7:	call   QWORD PTR [rip+0x25eb]        # 0x140006198
   140003bad:	mov    rcx,QWORD PTR [rip+0x79b4]        # 0x14000b568
   140003bb4:	xor    r8d,r8d
   140003bb7:	mov    edx,esi
   140003bb9:	call   QWORD PTR [rip+0x2549]        # 0x140006108
   140003bbf:	lea    rcx,[rip+0x7972]        # 0x14000b538
   140003bc6:	mov    ebx,eax
   140003bc8:	call   QWORD PTR [rip+0x25e2]        # 0x1400061b0
   140003bce:	test   ebx,ebx
   140003bd0:	sete   al
   140003bd3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bd8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bdd:	add    rsp,0x20
   140003be1:	pop    rdi
   140003be2:	ret    
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	rex push rbx
   140003bf2:	sub    rsp,0x20
   140003bf6:	lea    rax,[rip+0x2ef3]        # 0x140006af0
   140003bfd:	mov    rbx,rcx
   140003c00:	mov    QWORD PTR [rcx],rax
   140003c03:	test   dl,0x1
   140003c06:	je     0x140003c12
   140003c08:	mov    edx,0x18
   140003c0d:	call   0x14000445c
   140003c12:	mov    rax,rbx
   140003c15:	add    rsp,0x20
   140003c19:	pop    rbx
   140003c1a:	ret    
   140003c1b:	int3   
   140003c1c:	sub    rsp,0x28
   140003c20:	call   0x140004620
   140003c25:	test   eax,eax
   140003c27:	je     0x140003c4a
   140003c29:	mov    rax,QWORD PTR gs:0x30
   140003c32:	mov    rcx,QWORD PTR [rax+0x8]
   140003c36:	jmp    0x140003c3d
   140003c38:	cmp    rcx,rax
   140003c3b:	je     0x140003c51
   140003c3d:	xor    eax,eax
   140003c3f:	lock cmpxchg QWORD PTR [rip+0x7940],rcx        # 0x14000b588
   140003c48:	jne    0x140003c38
   140003c4a:	xor    al,al
   140003c4c:	add    rsp,0x28
   140003c50:	ret    
   140003c51:	mov    al,0x1
   140003c53:	jmp    0x140003c4c
   140003c55:	int3   
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	rex push rbx
   140003c5a:	sub    rsp,0x20
   140003c5e:	movzx  eax,BYTE PTR [rip+0x795b]        # 0x14000b5c0
   140003c65:	test   ecx,ecx
   140003c67:	mov    ebx,0x1
   140003c6c:	cmove  eax,ebx
   140003c6f:	mov    BYTE PTR [rip+0x794b],al        # 0x14000b5c0
   140003c75:	call   0x140004464
   140003c7a:	call   0x140004178
   140003c7f:	test   al,al
   140003c81:	jne    0x140003c87
   140003c83:	xor    al,al
   140003c85:	jmp    0x140003c9b
   140003c87:	call   0x140004178
   140003c8c:	test   al,al
   140003c8e:	jne    0x140003c99
   140003c90:	xor    ecx,ecx
   140003c92:	call   0x140004178
   140003c97:	jmp    0x140003c83
   140003c99:	mov    al,bl
   140003c9b:	add    rsp,0x20
   140003c9f:	pop    rbx
   140003ca0:	ret    
   140003ca1:	int3   
   140003ca2:	int3   
   140003ca3:	int3   
   140003ca4:	mov    QWORD PTR [rsp+0x8],rbx
   140003ca9:	push   rbp
   140003caa:	mov    rbp,rsp
   140003cad:	sub    rsp,0x40
   140003cb1:	cmp    BYTE PTR [rip+0x78cc],0x0        # 0x14000b584
   140003cb8:	mov    ebx,ecx
   140003cba:	jne    0x140003d6b
   140003cc0:	cmp    ecx,0x1
   140003cc3:	ja     0x140003d78
   140003cc9:	call   0x140004620
   140003cce:	test   eax,eax
   140003cd0:	je     0x140003cff
   140003cd2:	test   ebx,ebx
   140003cd4:	jne    0x140003cff
   140003cd6:	lea    rcx,[rip+0x78b3]        # 0x14000b590
   140003cdd:	call   0x1400046fc
   140003ce2:	test   eax,eax
   140003ce4:	je     0x140003ced
   140003ce6:	xor    al,al
   140003ce8:	jmp    0x140003d6d
   140003ced:	lea    rcx,[rip+0x78b4]        # 0x14000b5a8
   140003cf4:	call   0x1400046fc
   140003cf9:	test   eax,eax
   140003cfb:	je     0x140003d64
   140003cfd:	jmp    0x140003ce6
   140003cff:	mov    rdx,QWORD PTR [rip+0x532a]        # 0x140009030
   140003d06:	mov    ecx,0x40
   140003d0b:	mov    eax,edx
   140003d0d:	and    eax,0x3f
   140003d10:	sub    ecx,eax
   140003d12:	or     rax,0xffffffffffffffff
   140003d16:	ror    rax,cl
   140003d19:	xor    rax,rdx
   140003d1c:	mov    QWORD PTR [rbp-0x20],rax
   140003d20:	mov    QWORD PTR [rbp-0x18],rax
   140003d24:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140003d28:	mov    QWORD PTR [rbp-0x10],rax
   140003d2c:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140003d31:	movups XMMWORD PTR [rip+0x7858],xmm0        # 0x14000b590
   140003d38:	mov    QWORD PTR [rbp-0x20],rax
   140003d3c:	mov    QWORD PTR [rbp-0x18],rax
   140003d40:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140003d44:	mov    QWORD PTR [rbp-0x10],rax
   140003d48:	movsd  QWORD PTR [rip+0x7850],xmm1        # 0x14000b5a0
   140003d50:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140003d55:	movups XMMWORD PTR [rip+0x784c],xmm0        # 0x14000b5a8
   140003d5c:	movsd  QWORD PTR [rip+0x7854],xmm1        # 0x14000b5b8
   140003d64:	mov    BYTE PTR [rip+0x7819],0x1        # 0x14000b584
   140003d6b:	mov    al,0x1
   140003d6d:	mov    rbx,QWORD PTR [rsp+0x50]
   140003d72:	add    rsp,0x40
   140003d76:	pop    rbp
   140003d77:	ret    
   140003d78:	mov    ecx,0x5
   140003d7d:	call   0x1400041bc
   140003d82:	int3   
   140003d83:	int3   
   140003d84:	sub    rsp,0x18
   140003d88:	mov    r8,rcx
   140003d8b:	mov    eax,0x5a4d
   140003d90:	cmp    WORD PTR [rip+0xffffffffffffc269],ax        # 0x140000000
   140003d97:	jne    0x140003e12
   140003d99:	movsxd rax,DWORD PTR [rip+0xffffffffffffc29c]        # 0x14000003c
   140003da0:	lea    rdx,[rip+0xffffffffffffc259]        # 0x140000000
   140003da7:	lea    rcx,[rax+rdx*1]
   140003dab:	cmp    DWORD PTR [rcx],0x4550
   140003db1:	jne    0x140003e12
   140003db3:	mov    eax,0x20b
   140003db8:	cmp    WORD PTR [rcx+0x18],ax
   140003dbc:	jne    0x140003e12
   140003dbe:	sub    r8,rdx
   140003dc1:	movzx  eax,WORD PTR [rcx+0x14]
   140003dc5:	lea    rdx,[rcx+0x18]
   140003dc9:	add    rdx,rax
   140003dcc:	movzx  eax,WORD PTR [rcx+0x6]
   140003dd0:	lea    rcx,[rax+rax*4]
   140003dd4:	lea    r9,[rdx+rcx*8]
   140003dd8:	mov    QWORD PTR [rsp],rdx
   140003ddc:	cmp    rdx,r9
   140003ddf:	je     0x140003df9
   140003de1:	mov    ecx,DWORD PTR [rdx+0xc]
   140003de4:	cmp    r8,rcx
   140003de7:	jb     0x140003df3
   140003de9:	mov    eax,DWORD PTR [rdx+0x8]
   140003dec:	add    eax,ecx
   140003dee:	cmp    r8,rax
   140003df1:	jb     0x140003dfb
   140003df3:	add    rdx,0x28
   140003df7:	jmp    0x140003dd8
   140003df9:	xor    edx,edx
   140003dfb:	test   rdx,rdx
   140003dfe:	jne    0x140003e04
   140003e00:	xor    al,al
   140003e02:	jmp    0x140003e18
   140003e04:	cmp    DWORD PTR [rdx+0x24],0x0
   140003e08:	jge    0x140003e0e
   140003e0a:	xor    al,al
   140003e0c:	jmp    0x140003e18
   140003e0e:	mov    al,0x1
   140003e10:	jmp    0x140003e18
   140003e12:	xor    al,al
   140003e14:	jmp    0x140003e18
   140003e16:	xor    al,al
   140003e18:	add    rsp,0x18
   140003e1c:	ret    
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	rex push rbx
   140003e22:	sub    rsp,0x20
   140003e26:	mov    bl,cl
   140003e28:	call   0x140004620
   140003e2d:	xor    edx,edx
   140003e2f:	test   eax,eax
   140003e31:	je     0x140003e3e
   140003e33:	test   bl,bl
   140003e35:	jne    0x140003e3e
   140003e37:	xchg   QWORD PTR [rip+0x774a],rdx        # 0x14000b588
   140003e3e:	add    rsp,0x20
   140003e42:	pop    rbx
   140003e43:	ret    
   140003e44:	rex push rbx
   140003e46:	sub    rsp,0x20
   140003e4a:	cmp    BYTE PTR [rip+0x776f],0x0        # 0x14000b5c0
   140003e51:	mov    bl,cl
   140003e53:	je     0x140003e59
   140003e55:	test   dl,dl
   140003e57:	jne    0x140003e67
   140003e59:	mov    cl,bl
   140003e5b:	call   0x140004178
   140003e60:	mov    cl,bl
   140003e62:	call   0x140004178
   140003e67:	mov    al,0x1
   140003e69:	add    rsp,0x20
   140003e6d:	pop    rbx
   140003e6e:	ret    
   140003e6f:	int3   
   140003e70:	rex push rbx
   140003e72:	sub    rsp,0x20
   140003e76:	mov    rdx,QWORD PTR [rip+0x51b3]        # 0x140009030
   140003e7d:	mov    rbx,rcx
   140003e80:	mov    ecx,edx
   140003e82:	xor    rdx,QWORD PTR [rip+0x7707]        # 0x14000b590
   140003e89:	and    ecx,0x3f
   140003e8c:	ror    rdx,cl
   140003e8f:	cmp    rdx,0xffffffffffffffff
   140003e93:	jne    0x140003e9f
   140003e95:	mov    rcx,rbx
   140003e98:	call   0x140004708
   140003e9d:	jmp    0x140003eae
   140003e9f:	mov    rdx,rbx
   140003ea2:	lea    rcx,[rip+0x76e7]        # 0x14000b590
   140003ea9:	call   0x140004702
   140003eae:	xor    ecx,ecx
   140003eb0:	test   eax,eax
   140003eb2:	cmove  rcx,rbx
   140003eb6:	mov    rax,rcx
   140003eb9:	add    rsp,0x20
   140003ebd:	pop    rbx
   140003ebe:	ret    
   140003ebf:	int3   
   140003ec0:	sub    rsp,0x28
   140003ec4:	call   0x140003e70
   140003ec9:	neg    rax
   140003ecc:	sbb    eax,eax
   140003ece:	neg    eax
   140003ed0:	dec    eax
   140003ed2:	add    rsp,0x28
   140003ed6:	ret    
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	ret    0x0
   140003ee3:	int3   
   140003ee4:	rex push rbx
   140003ee6:	mov    r11d,DWORD PTR [r8]
   140003ee9:	mov    rbx,rdx
   140003eec:	and    r11d,0xfffffff8
   140003ef0:	mov    r9,rcx
   140003ef3:	test   BYTE PTR [r8],0x4
   140003ef7:	mov    r10,rcx
   140003efa:	je     0x140003f0f
   140003efc:	mov    eax,DWORD PTR [r8+0x8]
   140003f00:	movsxd r10,DWORD PTR [r8+0x4]
   140003f04:	neg    eax
   140003f06:	add    r10,rcx
   140003f09:	movsxd rcx,eax
   140003f0c:	and    r10,rcx
   140003f0f:	movsxd rax,r11d
   140003f12:	mov    rdx,QWORD PTR [rax+r10*1]
   140003f16:	mov    rax,QWORD PTR [rbx+0x10]
   140003f1a:	mov    ecx,DWORD PTR [rax+0x8]
   140003f1d:	add    rcx,QWORD PTR [rbx+0x8]
   140003f21:	test   BYTE PTR [rcx+0x3],0xf
   140003f25:	je     0x140003f31
   140003f27:	movzx  eax,BYTE PTR [rcx+0x3]
   140003f2b:	and    eax,0xfffffff0
   140003f2e:	add    r9,rax
   140003f31:	xor    r9,rdx
   140003f34:	mov    rcx,r9
   140003f37:	pop    rbx
   140003f38:	jmp    0x140003610
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    rax,rsp
   140003f43:	mov    QWORD PTR [rax+0x8],rbx
   140003f47:	mov    QWORD PTR [rax+0x10],rbp
   140003f4b:	mov    QWORD PTR [rax+0x18],rsi
   140003f4f:	mov    QWORD PTR [rax+0x20],rdi
   140003f53:	push   r14
   140003f55:	sub    rsp,0x20
   140003f59:	mov    r10,QWORD PTR [r9+0x38]
   140003f5d:	mov    rsi,rdx
   140003f60:	mov    r14,r8
   140003f63:	mov    rbp,rcx
   140003f66:	mov    rdx,r9
   140003f69:	mov    rcx,rsi
   140003f6c:	mov    rdi,r9
   140003f6f:	mov    ebx,DWORD PTR [r10]
   140003f72:	shl    rbx,0x4
   140003f76:	add    rbx,r10
   140003f79:	lea    r8,[rbx+0x4]
   140003f7d:	call   0x140003ee4
   140003f82:	mov    eax,DWORD PTR [rbp+0x4]
   140003f85:	and    al,0x66
   140003f87:	neg    al
   140003f89:	mov    eax,0x1
   140003f8e:	sbb    edx,edx
   140003f90:	neg    edx
   140003f92:	add    edx,eax
   140003f94:	test   DWORD PTR [rbx+0x4],edx
   140003f97:	je     0x140003faa
   140003f99:	mov    r9,rdi
   140003f9c:	mov    r8,r14
   140003f9f:	mov    rdx,rsi
   140003fa2:	mov    rcx,rbp
   140003fa5:	call   0x140004648
   140003faa:	mov    rbx,QWORD PTR [rsp+0x30]
   140003faf:	mov    rbp,QWORD PTR [rsp+0x38]
   140003fb4:	mov    rsi,QWORD PTR [rsp+0x40]
   140003fb9:	mov    rdi,QWORD PTR [rsp+0x48]
   140003fbe:	add    rsp,0x20
   140003fc2:	pop    r14
   140003fc4:	ret    
   140003fc5:	int3   
   140003fc6:	int3   
   140003fc7:	int3   
   140003fc8:	rex.W jmp QWORD PTR [rip+0x2351]        # 0x140006320
   140003fcf:	int3   
   140003fd0:	rex push rbx
   140003fd2:	sub    rsp,0x20
   140003fd6:	mov    rbx,rcx
   140003fd9:	xor    ecx,ecx
   140003fdb:	call   QWORD PTR [rip+0x20e7]        # 0x1400060c8
   140003fe1:	mov    rcx,rbx
   140003fe4:	call   QWORD PTR [rip+0x20e6]        # 0x1400060d0
   140003fea:	call   QWORD PTR [rip+0x2180]        # 0x140006170
   140003ff0:	mov    rcx,rax
   140003ff3:	mov    edx,0xc0000409
   140003ff8:	add    rsp,0x20
   140003ffc:	pop    rbx
   140003ffd:	rex.W jmp QWORD PTR [rip+0x20bc]        # 0x1400060c0
   140004004:	int3   
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	mov    QWORD PTR [rsp+0x8],rcx
   140004015:	sub    rsp,0x38
   140004019:	mov    ecx,0x17
   14000401e:	call   0x140004dd0
   140004023:	test   eax,eax
   140004025:	je     0x14000402e
   140004027:	mov    ecx,0x2
   14000402c:	int    0x29
   14000402e:	lea    rcx,[rip+0x763b]        # 0x14000b670
   140004035:	call   0x1400040e4
   14000403a:	mov    rax,QWORD PTR [rsp+0x38]
   14000403f:	mov    QWORD PTR [rip+0x7722],rax        # 0x14000b768
   140004046:	lea    rax,[rsp+0x38]
   14000404b:	add    rax,0x8
   14000404f:	mov    QWORD PTR [rip+0x76b2],rax        # 0x14000b708
   140004056:	mov    rax,QWORD PTR [rip+0x770b]        # 0x14000b768
   14000405d:	mov    QWORD PTR [rip+0x757c],rax        # 0x14000b5e0
   140004064:	mov    rax,QWORD PTR [rsp+0x40]
   140004069:	mov    QWORD PTR [rip+0x7680],rax        # 0x14000b6f0
   140004070:	mov    DWORD PTR [rip+0x7556],0xc0000409        # 0x14000b5d0
   14000407a:	mov    DWORD PTR [rip+0x7550],0x1        # 0x14000b5d4
   140004084:	mov    DWORD PTR [rip+0x755a],0x1        # 0x14000b5e8
   14000408e:	mov    eax,0x8
   140004093:	imul   rax,rax,0x0
   140004097:	lea    rcx,[rip+0x7552]        # 0x14000b5f0
   14000409e:	mov    QWORD PTR [rcx+rax*1],0x2
   1400040a6:	mov    eax,0x8
   1400040ab:	imul   rax,rax,0x0
   1400040af:	mov    rcx,QWORD PTR [rip+0x4f7a]        # 0x140009030
   1400040b6:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400040bb:	mov    eax,0x8
   1400040c0:	imul   rax,rax,0x1
   1400040c4:	mov    rcx,QWORD PTR [rip+0x4f6d]        # 0x140009038
   1400040cb:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400040d0:	lea    rcx,[rip+0x2a29]        # 0x140006b00
   1400040d7:	call   0x140003fd0
   1400040dc:	add    rsp,0x38
   1400040e0:	ret    
   1400040e1:	int3   
   1400040e2:	int3   
   1400040e3:	int3   
   1400040e4:	rex push rbx
   1400040e6:	push   rsi
   1400040e7:	push   rdi
   1400040e8:	sub    rsp,0x40
   1400040ec:	mov    rbx,rcx
   1400040ef:	call   QWORD PTR [rip+0x1ff3]        # 0x1400060e8
   1400040f5:	mov    rsi,QWORD PTR [rbx+0xf8]
   1400040fc:	xor    edi,edi
   1400040fe:	xor    r8d,r8d
   140004101:	lea    rdx,[rsp+0x60]
   140004106:	mov    rcx,rsi
   140004109:	call   QWORD PTR [rip+0x1fd1]        # 0x1400060e0
   14000410f:	test   rax,rax
   140004112:	je     0x14000414d
   140004114:	and    QWORD PTR [rsp+0x38],0x0
   14000411a:	lea    rcx,[rsp+0x68]
   14000411f:	mov    rdx,QWORD PTR [rsp+0x60]
   140004124:	mov    r9,rax
   140004127:	mov    QWORD PTR [rsp+0x30],rcx
   14000412c:	mov    r8,rsi
   14000412f:	lea    rcx,[rsp+0x70]
   140004134:	mov    QWORD PTR [rsp+0x28],rcx
   140004139:	xor    ecx,ecx
   14000413b:	mov    QWORD PTR [rsp+0x20],rbx
   140004140:	call   QWORD PTR [rip+0x1f92]        # 0x1400060d8
   140004146:	inc    edi
   140004148:	cmp    edi,0x2
   14000414b:	jl     0x1400040fe
   14000414d:	add    rsp,0x40
   140004151:	pop    rdi
   140004152:	pop    rsi
   140004153:	pop    rbx
   140004154:	ret    
   140004155:	int3   
   140004156:	int3   
   140004157:	int3   
   140004158:	mov    eax,0x1
   14000415d:	ret    
   14000415e:	int3   
   14000415f:	int3   
   140004160:	mov    eax,0x4000
   140004165:	ret    
   140004166:	int3   
   140004167:	int3   
   140004168:	lea    rcx,[rip+0x79d1]        # 0x14000bb40
   14000416f:	rex.W jmp QWORD PTR [rip+0x1f3a]        # 0x1400060b0
   140004176:	int3   
   140004177:	int3   
   140004178:	mov    al,0x1
   14000417a:	ret    
   14000417b:	int3   
   14000417c:	lea    rax,[rip+0x79cd]        # 0x14000bb50
   140004183:	ret    
   140004184:	sub    rsp,0x28
   140004188:	call   0x140002be4
   14000418d:	or     QWORD PTR [rax],0x4
   140004191:	call   0x14000417c
   140004196:	or     QWORD PTR [rax],0x2
   14000419a:	add    rsp,0x28
   14000419e:	ret    
   14000419f:	int3   
   1400041a0:	xor    eax,eax
   1400041a2:	cmp    DWORD PTR [rip+0x4ea0],eax        # 0x140009048
   1400041a8:	sete   al
   1400041ab:	ret    
   1400041ac:	lea    rax,[rip+0x79ed]        # 0x14000bba0
   1400041b3:	ret    
   1400041b4:	lea    rax,[rip+0x79dd]        # 0x14000bb98
   1400041bb:	ret    
   1400041bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400041c1:	push   rbp
   1400041c2:	lea    rbp,[rsp-0x4c0]
   1400041ca:	sub    rsp,0x5c0
   1400041d1:	mov    ebx,ecx
   1400041d3:	mov    ecx,0x17
   1400041d8:	call   0x140004dd0
   1400041dd:	test   eax,eax
   1400041df:	je     0x1400041e5
   1400041e1:	mov    ecx,ebx
   1400041e3:	int    0x29
   1400041e5:	and    DWORD PTR [rip+0x796c],0x0        # 0x14000bb58
   1400041ec:	lea    rcx,[rbp-0x10]
   1400041f0:	xor    edx,edx
   1400041f2:	mov    r8d,0x4d0
   1400041f8:	call   0x14000463c
   1400041fd:	lea    rcx,[rbp-0x10]
   140004201:	call   QWORD PTR [rip+0x1ee1]        # 0x1400060e8
   140004207:	mov    rbx,QWORD PTR [rbp+0xe8]
   14000420e:	lea    rdx,[rbp+0x4d8]
   140004215:	mov    rcx,rbx
   140004218:	xor    r8d,r8d
   14000421b:	call   QWORD PTR [rip+0x1ebf]        # 0x1400060e0
   140004221:	test   rax,rax
   140004224:	je     0x140004262
   140004226:	and    QWORD PTR [rsp+0x38],0x0
   14000422c:	lea    rcx,[rbp+0x4e0]
   140004233:	mov    rdx,QWORD PTR [rbp+0x4d8]
   14000423a:	mov    r9,rax
   14000423d:	mov    QWORD PTR [rsp+0x30],rcx
   140004242:	mov    r8,rbx
   140004245:	lea    rcx,[rbp+0x4e8]
   14000424c:	mov    QWORD PTR [rsp+0x28],rcx
   140004251:	lea    rcx,[rbp-0x10]
   140004255:	mov    QWORD PTR [rsp+0x20],rcx
   14000425a:	xor    ecx,ecx
   14000425c:	call   QWORD PTR [rip+0x1e76]        # 0x1400060d8
   140004262:	mov    rax,QWORD PTR [rbp+0x4c8]
   140004269:	lea    rcx,[rsp+0x50]
   14000426e:	mov    QWORD PTR [rbp+0xe8],rax
   140004275:	xor    edx,edx
   140004277:	lea    rax,[rbp+0x4c8]
   14000427e:	mov    r8d,0x98
   140004284:	add    rax,0x8
   140004288:	mov    QWORD PTR [rbp+0x88],rax
   14000428f:	call   0x14000463c
   140004294:	mov    rax,QWORD PTR [rbp+0x4c8]
   14000429b:	mov    QWORD PTR [rsp+0x60],rax
   1400042a0:	mov    DWORD PTR [rsp+0x50],0x40000015
   1400042a8:	mov    DWORD PTR [rsp+0x54],0x1
   1400042b0:	call   QWORD PTR [rip+0x1daa]        # 0x140006060
   1400042b6:	cmp    eax,0x1
   1400042b9:	lea    rax,[rsp+0x50]
   1400042be:	mov    QWORD PTR [rsp+0x40],rax
   1400042c3:	lea    rax,[rbp-0x10]
   1400042c7:	sete   bl
   1400042ca:	mov    QWORD PTR [rsp+0x48],rax
   1400042cf:	xor    ecx,ecx
   1400042d1:	call   QWORD PTR [rip+0x1df1]        # 0x1400060c8
   1400042d7:	lea    rcx,[rsp+0x40]
   1400042dc:	call   QWORD PTR [rip+0x1dee]        # 0x1400060d0
   1400042e2:	test   eax,eax
   1400042e4:	jne    0x1400042f0
   1400042e6:	neg    bl
   1400042e8:	sbb    eax,eax
   1400042ea:	and    DWORD PTR [rip+0x7868],eax        # 0x14000bb58
   1400042f0:	mov    rbx,QWORD PTR [rsp+0x5d0]
   1400042f8:	add    rsp,0x5c0
   1400042ff:	pop    rbp
   140004300:	ret    
   140004301:	int3   
   140004302:	int3   
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	xor    eax,eax
   140004312:	ret    
   140004313:	int3   
   140004314:	sub    rsp,0x28
   140004318:	xor    ecx,ecx
   14000431a:	call   QWORD PTR [rip+0x1dd8]        # 0x1400060f8
   140004320:	mov    rcx,rax
   140004323:	test   rax,rax
   140004326:	jne    0x14000432c
   140004328:	xor    al,al
   14000432a:	jmp    0x140004363
   14000432c:	mov    eax,0x5a4d
   140004331:	cmp    WORD PTR [rcx],ax
   140004334:	jne    0x140004328
   140004336:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000433a:	add    rax,rcx
   14000433d:	cmp    DWORD PTR [rax],0x4550
   140004343:	jne    0x140004328
   140004345:	mov    ecx,0x20b
   14000434a:	cmp    WORD PTR [rax+0x18],cx
   14000434e:	jne    0x140004328
   140004350:	cmp    DWORD PTR [rax+0x84],0xe
   140004357:	jbe    0x140004328
   140004359:	cmp    DWORD PTR [rax+0xf8],0x0
   140004360:	setne  al
   140004363:	add    rsp,0x28
   140004367:	ret    
   140004368:	lea    rcx,[rip+0x11]        # 0x140004380
   14000436f:	rex.W jmp QWORD PTR [rip+0x1d52]        # 0x1400060c8
   140004376:	int3   
   140004377:	int3   
   140004378:	int3   
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	int3   
   14000437d:	int3   
   14000437e:	int3   
   14000437f:	int3   
   140004380:	sub    rsp,0x28
   140004384:	mov    rax,QWORD PTR [rcx]
   140004387:	cmp    DWORD PTR [rax],0xe06d7363
   14000438d:	jne    0x1400043ab
   14000438f:	cmp    DWORD PTR [rax+0x18],0x4
   140004393:	jne    0x1400043ab
   140004395:	mov    ecx,DWORD PTR [rax+0x20]
   140004398:	lea    eax,[rcx-0x19930520]
   14000439e:	cmp    eax,0x2
   1400043a1:	jbe    0x1400043b2
   1400043a3:	cmp    ecx,0x1994000
   1400043a9:	je     0x1400043b2
   1400043ab:	xor    eax,eax
   1400043ad:	add    rsp,0x28
   1400043b1:	ret    
   1400043b2:	call   0x1400046f6
   1400043b7:	int3   
   1400043b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400043bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400043c2:	push   rdi
   1400043c3:	sub    rsp,0x20
   1400043c7:	lea    rbx,[rip+0x2fda]        # 0x1400073a8
   1400043ce:	lea    rsi,[rip+0x2fd3]        # 0x1400073a8
   1400043d5:	jmp    0x1400043ed
   1400043d7:	mov    rdi,QWORD PTR [rbx]
   1400043da:	test   rdi,rdi
   1400043dd:	je     0x1400043e9
   1400043df:	mov    rcx,rdi
   1400043e2:	call   0x140003fc8
   1400043e7:	call   rdi
   1400043e9:	add    rbx,0x8
   1400043ed:	cmp    rbx,rsi
   1400043f0:	jb     0x1400043d7
   1400043f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400043fc:	add    rsp,0x20
   140004400:	pop    rdi
   140004401:	ret    
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    QWORD PTR [rsp+0x8],rbx
   140004415:	mov    QWORD PTR [rsp+0x10],rsi
   14000441a:	push   rdi
   14000441b:	sub    rsp,0x20
   14000441f:	lea    rbx,[rip+0x2f92]        # 0x1400073b8
   140004426:	lea    rsi,[rip+0x2f8b]        # 0x1400073b8
   14000442d:	jmp    0x140004445
   14000442f:	mov    rdi,QWORD PTR [rbx]
   140004432:	test   rdi,rdi
   140004435:	je     0x140004441
   140004437:	mov    rcx,rdi
   14000443a:	call   0x140003fc8
   14000443f:	call   rdi
   140004441:	add    rbx,0x8
   140004445:	cmp    rbx,rsi
   140004448:	jb     0x14000442f
   14000444a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000444f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004454:	add    rsp,0x20
   140004458:	pop    rdi
   140004459:	ret    
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	jmp    0x140002bec
   140004461:	int3   
   140004462:	int3   
   140004463:	int3   
   140004464:	mov    QWORD PTR [rsp+0x10],rbx
   140004469:	mov    QWORD PTR [rsp+0x18],rbp
   14000446e:	push   rsi
   14000446f:	push   rdi
   140004470:	push   r14
   140004472:	sub    rsp,0x10
   140004476:	xor    ecx,ecx
   140004478:	mov    DWORD PTR [rip+0x4bda],0x2        # 0x14000905c
   140004482:	xor    eax,eax
   140004484:	mov    DWORD PTR [rip+0x4bca],0x1        # 0x140009058
   14000448e:	cpuid  
   140004490:	mov    r10d,ecx
   140004493:	mov    r9d,edx
   140004496:	xor    ecx,0x444d4163
   14000449c:	xor    edx,0x69746e65
   1400044a2:	mov    ebp,ebx
   1400044a4:	xor    r11d,r11d
   1400044a7:	xor    ebp,0x68747541
   1400044ad:	mov    r14d,eax
   1400044b0:	or     ebp,edx
   1400044b2:	xor    r9d,0x49656e69
   1400044b9:	or     ebp,ecx
   1400044bb:	xor    r10d,0x6c65746e
   1400044c2:	mov    r8d,ebx
   1400044c5:	lea    eax,[r11+0x1]
   1400044c9:	xor    ecx,ecx
   1400044cb:	xor    r8d,0x756e6547
   1400044d2:	cpuid  
   1400044d4:	or     r10d,r9d
   1400044d7:	mov    DWORD PTR [rsp],eax
   1400044da:	or     r10d,r8d
   1400044dd:	mov    DWORD PTR [rsp+0x4],ebx
   1400044e1:	mov    r8d,DWORD PTR [rip+0x7674]        # 0x14000bb5c
   1400044e8:	mov    esi,ecx
   1400044ea:	mov    edi,eax
   1400044ec:	mov    DWORD PTR [rsp+0x8],ecx
   1400044f0:	mov    DWORD PTR [rsp+0xc],edx
   1400044f4:	jne    0x140004548
   1400044f6:	or     QWORD PTR [rip+0x4b52],0xffffffffffffffff        # 0x140009050
   1400044fe:	or     r8d,0x4
   140004502:	and    eax,0xfff3ff0
   140004507:	mov    DWORD PTR [rip+0x764e],r8d        # 0x14000bb5c
   14000450e:	cmp    eax,0x106c0
   140004513:	je     0x14000453d
   140004515:	cmp    eax,0x20660
   14000451a:	je     0x14000453d
   14000451c:	cmp    eax,0x20670
   140004521:	je     0x14000453d
   140004523:	add    eax,0xfffcf9b0
   140004528:	cmp    eax,0x20
   14000452b:	ja     0x140004548
   14000452d:	movabs rcx,0x100010001
   140004537:	bt     rcx,rax
   14000453b:	jae    0x140004548
   14000453d:	or     r8d,0x1
   140004541:	mov    DWORD PTR [rip+0x7614],r8d        # 0x14000bb5c
   140004548:	test   ebp,ebp
   14000454a:	jne    0x140004565
   14000454c:	and    edi,0xff00f00
   140004552:	cmp    edi,0x600f00
   140004558:	jb     0x140004565
   14000455a:	or     r8d,0x4
   14000455e:	mov    DWORD PTR [rip+0x75f7],r8d        # 0x14000bb5c
   140004565:	mov    eax,0x7
   14000456a:	cmp    r14d,eax
   14000456d:	jl     0x140004596
   14000456f:	xor    ecx,ecx
   140004571:	cpuid  
   140004573:	mov    DWORD PTR [rsp],eax
   140004576:	mov    r11d,ebx
   140004579:	mov    DWORD PTR [rsp+0x4],ebx
   14000457d:	mov    DWORD PTR [rsp+0x8],ecx
   140004581:	mov    DWORD PTR [rsp+0xc],edx
   140004585:	bt     ebx,0x9
   140004589:	jae    0x140004596
   14000458b:	or     r8d,0x2
   14000458f:	mov    DWORD PTR [rip+0x75c6],r8d        # 0x14000bb5c
   140004596:	bt     esi,0x14
   14000459a:	jae    0x14000460a
   14000459c:	mov    DWORD PTR [rip+0x4ab2],0x2        # 0x140009058
   1400045a6:	mov    DWORD PTR [rip+0x4aac],0x6        # 0x14000905c
   1400045b0:	bt     esi,0x1b
   1400045b4:	jae    0x14000460a
   1400045b6:	bt     esi,0x1c
   1400045ba:	jae    0x14000460a
   1400045bc:	xor    ecx,ecx
   1400045be:	xgetbv 
   1400045c1:	shl    rdx,0x20
   1400045c5:	or     rdx,rax
   1400045c8:	mov    QWORD PTR [rsp+0x30],rdx
   1400045cd:	mov    rax,QWORD PTR [rsp+0x30]
   1400045d2:	and    al,0x6
   1400045d4:	cmp    al,0x6
   1400045d6:	jne    0x14000460a
   1400045d8:	mov    eax,DWORD PTR [rip+0x4a7e]        # 0x14000905c
   1400045de:	or     eax,0x8
   1400045e1:	mov    DWORD PTR [rip+0x4a6d],0x3        # 0x140009058
   1400045eb:	mov    DWORD PTR [rip+0x4a6b],eax        # 0x14000905c
   1400045f1:	test   r11b,0x20
   1400045f5:	je     0x14000460a
   1400045f7:	or     eax,0x20
   1400045fa:	mov    DWORD PTR [rip+0x4a54],0x5        # 0x140009058
   140004604:	mov    DWORD PTR [rip+0x4a52],eax        # 0x14000905c
   14000460a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000460f:	xor    eax,eax
   140004611:	mov    rbp,QWORD PTR [rsp+0x40]
   140004616:	add    rsp,0x10
   14000461a:	pop    r14
   14000461c:	pop    rdi
   14000461d:	pop    rsi
   14000461e:	ret    
   14000461f:	int3   
   140004620:	xor    eax,eax
   140004622:	cmp    DWORD PTR [rip+0x4a38],eax        # 0x140009060
   140004628:	setne  al
   14000462b:	ret    
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	jmp    QWORD PTR [rip+0x1baa]        # 0x1400061e0
   140004636:	jmp    QWORD PTR [rip+0x1b8c]        # 0x1400061c8
   14000463c:	jmp    QWORD PTR [rip+0x1b8e]        # 0x1400061d0
   140004642:	jmp    QWORD PTR [rip+0x1ba0]        # 0x1400061e8
   140004648:	jmp    QWORD PTR [rip+0x1b72]        # 0x1400061c0
   14000464e:	jmp    QWORD PTR [rip+0x1b9c]        # 0x1400061f0
   140004654:	int3   
   140004655:	int3   
   140004656:	int3   
   140004657:	int3   
   140004658:	int3   
   140004659:	int3   
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	sub    rsp,0x28
   140004664:	call   0x140002be4
   140004669:	or     QWORD PTR [rax],0x4
   14000466d:	call   0x14000417c
   140004672:	or     QWORD PTR [rax],0x2
   140004676:	xor    eax,eax
   140004678:	add    rsp,0x28
   14000467c:	ret    
   14000467d:	int3   
   14000467e:	jmp    QWORD PTR [rip+0x1b8c]        # 0x140006210
   140004684:	jmp    QWORD PTR [rip+0x1bb6]        # 0x140006240
   14000468a:	jmp    QWORD PTR [rip+0x1bb8]        # 0x140006248
   140004690:	jmp    QWORD PTR [rip+0x1b9a]        # 0x140006230
   140004696:	jmp    QWORD PTR [rip+0x1bb4]        # 0x140006250
   14000469c:	jmp    QWORD PTR [rip+0x1bb6]        # 0x140006258
   1400046a2:	jmp    QWORD PTR [rip+0x1bb8]        # 0x140006260
   1400046a8:	jmp    QWORD PTR [rip+0x1bca]        # 0x140006278
   1400046ae:	jmp    QWORD PTR [rip+0x1bcc]        # 0x140006280
   1400046b4:	jmp    QWORD PTR [rip+0x1bce]        # 0x140006288
   1400046ba:	jmp    QWORD PTR [rip+0x1bd0]        # 0x140006290
   1400046c0:	jmp    QWORD PTR [rip+0x1c32]        # 0x1400062f8
   1400046c6:	jmp    QWORD PTR [rip+0x1bcc]        # 0x140006298
   1400046cc:	jmp    QWORD PTR [rip+0x1c06]        # 0x1400062d8
   1400046d2:	jmp    QWORD PTR [rip+0x1bc8]        # 0x1400062a0
   1400046d8:	jmp    QWORD PTR [rip+0x1bca]        # 0x1400062a8
   1400046de:	jmp    QWORD PTR [rip+0x1bcc]        # 0x1400062b0
   1400046e4:	jmp    QWORD PTR [rip+0x1b36]        # 0x140006220
   1400046ea:	jmp    QWORD PTR [rip+0x1b10]        # 0x140006200
   1400046f0:	jmp    QWORD PTR [rip+0x1bfa]        # 0x1400062f0
   1400046f6:	jmp    QWORD PTR [rip+0x1bbc]        # 0x1400062b8
   1400046fc:	jmp    QWORD PTR [rip+0x1bce]        # 0x1400062d0
   140004702:	jmp    QWORD PTR [rip+0x1bc0]        # 0x1400062c8
   140004708:	jmp    QWORD PTR [rip+0x1bb2]        # 0x1400062c0
   14000470e:	int3   
   14000470f:	int3   
   140004710:	mov    QWORD PTR [rsp+0x8],rbx
   140004715:	push   rdi
   140004716:	sub    rsp,0x20
   14000471a:	test   DWORD PTR [rip+0x24dc],0x1000        # 0x140006c00
   140004724:	je     0x1400047be
   14000472a:	call   0x1400047cc
   14000472f:	mov    edi,0x1
   140004734:	test   al,al
   140004736:	je     0x140004755
   140004738:	mov    rbx,QWORD PTR [rip+0x7429]        # 0x14000bb68
   14000473f:	mov    rcx,rbx
   140004742:	call   QWORD PTR [rip+0x1bd8]        # 0x140006320
   140004748:	lea    rcx,[rip+0x7429]        # 0x14000bb78
   14000474f:	call   rbx
   140004751:	jmp    0x14000476c
   140004753:	pause  
   140004755:	mov    rax,QWORD PTR [rip+0x741c]        # 0x14000bb78
   14000475c:	test   rax,rax
   14000475f:	jne    0x140004753
   140004761:	lock cmpxchg QWORD PTR [rip+0x740e],rdi        # 0x14000bb78
   14000476a:	jne    0x140004755
   14000476c:	mov    eax,DWORD PTR [rip+0x740e]        # 0x14000bb80
   140004772:	add    eax,edi
   140004774:	mov    DWORD PTR [rip+0x7406],eax        # 0x14000bb80
   14000477a:	cmp    eax,edi
   14000477c:	jne    0x14000478f
   14000477e:	lea    rdx,[rip+0x73ff]        # 0x14000bb84
   140004785:	mov    ecx,0x4
   14000478a:	call   0x140004998
   14000478f:	call   0x1400047cc
   140004794:	test   al,al
   140004796:	je     0x1400047b3
   140004798:	mov    rbx,QWORD PTR [rip+0x73d1]        # 0x14000bb70
   14000479f:	mov    rcx,rbx
   1400047a2:	call   QWORD PTR [rip+0x1b78]        # 0x140006320
   1400047a8:	lea    rcx,[rip+0x73c9]        # 0x14000bb78
   1400047af:	call   rbx
   1400047b1:	jmp    0x1400047be
   1400047b3:	mov    QWORD PTR [rip+0x73ba],0x0        # 0x14000bb78
   1400047be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047c3:	add    rsp,0x20
   1400047c7:	pop    rdi
   1400047c8:	ret    
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400047d1:	push   rdi
   1400047d2:	sub    rsp,0x20
   1400047d6:	mov    rax,QWORD PTR [rip+0x7383]        # 0x14000bb60
   1400047dd:	mov    edi,0x1
   1400047e2:	cmp    rax,rdi
   1400047e5:	jne    0x1400047eb
   1400047e7:	xor    al,al
   1400047e9:	jmp    0x14000485c
   1400047eb:	test   rax,rax
   1400047ee:	jne    0x140004859
   1400047f0:	lea    rcx,[rip+0x2319]        # 0x140006b10
   1400047f7:	call   QWORD PTR [rip+0x18fb]        # 0x1400060f8
   1400047fd:	mov    rbx,rax
   140004800:	test   rax,rax
   140004803:	jne    0x14000480a
   140004805:	mov    rbx,rdi
   140004808:	jmp    0x140004842
   14000480a:	lea    rdx,[rip+0x231f]        # 0x140006b30
   140004811:	mov    rcx,rbx
   140004814:	call   QWORD PTR [rip+0x194e]        # 0x140006168
   14000481a:	test   rax,rax
   14000481d:	je     0x140004805
   14000481f:	lea    rdx,[rip+0x2322]        # 0x140006b48
   140004826:	mov    QWORD PTR [rip+0x733b],rax        # 0x14000bb68
   14000482d:	mov    rcx,rbx
   140004830:	call   QWORD PTR [rip+0x1932]        # 0x140006168
   140004836:	test   rax,rax
   140004839:	je     0x140004805
   14000483b:	mov    QWORD PTR [rip+0x732e],rax        # 0x14000bb70
   140004842:	xor    eax,eax
   140004844:	lock cmpxchg QWORD PTR [rip+0x7313],rbx        # 0x14000bb60
   14000484d:	jne    0x140004854
   14000484f:	cmp    rbx,rdi
   140004852:	je     0x1400047e7
   140004854:	cmp    rax,rdi
   140004857:	je     0x1400047e7
   140004859:	mov    al,dil
   14000485c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004861:	add    rsp,0x20
   140004865:	pop    rdi
   140004866:	ret    
   140004867:	int3   
   140004868:	mov    QWORD PTR [rsp+0x8],rbx
   14000486d:	push   rdi
   14000486e:	sub    rsp,0x80
   140004875:	mov    rdi,rdx
   140004878:	mov    r8d,0x30
   14000487e:	lea    rdx,[rsp+0x20]
   140004883:	mov    rbx,rcx
   140004886:	call   QWORD PTR [rip+0x180c]        # 0x140006098
   14000488c:	test   rax,rax
   14000488f:	jne    0x140004896
   140004891:	lea    ecx,[rax+0x19]
   140004894:	int    0x29
   140004896:	test   BYTE PTR [rsp+0x44],0x44
   14000489b:	je     0x1400048ee
   14000489d:	lea    rcx,[rsp+0x50]
   1400048a2:	call   QWORD PTR [rip+0x1800]        # 0x1400060a8
   1400048a8:	mov    r8d,DWORD PTR [rsp+0x54]
   1400048ad:	xor    edx,edx
   1400048af:	lea    eax,[r8-0x1]
   1400048b3:	mov    ecx,eax
   1400048b5:	and    eax,ebx
   1400048b7:	and    ecx,edi
   1400048b9:	add    eax,ecx
   1400048bb:	dec    rax
   1400048be:	add    rax,r8
   1400048c1:	div    r8
   1400048c4:	xor    edx,edx
   1400048c6:	mov    rcx,rax
   1400048c9:	mov    rax,rdi
   1400048cc:	div    r8
   1400048cf:	add    ecx,eax
   1400048d1:	lea    rax,[r8-0x1]
   1400048d5:	not    rax
   1400048d8:	mov    edx,ecx
   1400048da:	and    rax,rbx
   1400048dd:	test   ecx,ecx
   1400048df:	je     0x1400048ee
   1400048e1:	lock or DWORD PTR [rax],0x0
   1400048e5:	add    rax,r8
   1400048e8:	sub    rdx,0x1
   1400048ec:	jne    0x1400048e1
   1400048ee:	mov    rbx,QWORD PTR [rsp+0x90]
   1400048f6:	add    rsp,0x80
   1400048fd:	pop    rdi
   1400048fe:	ret    
   1400048ff:	int3   
   140004900:	mov    QWORD PTR [rsp+0x8],rbx
   140004905:	mov    QWORD PTR [rsp+0x10],rsi
   14000490a:	mov    QWORD PTR [rsp+0x18],rdi
   14000490f:	movsxd r8,DWORD PTR [rip+0xffffffffffffb726]        # 0x14000003c
   140004916:	lea    rsi,[rip+0xffffffffffffb6e3]        # 0x140000000
   14000491d:	add    r8,rsi
   140004920:	mov    rbx,rdx
   140004923:	mov    rdi,rcx
   140004926:	cmp    DWORD PTR [r8+0x84],0xd
   14000492e:	jbe    0x140004977
   140004930:	mov    ecx,DWORD PTR [r8+0xf0]
   140004937:	xor    r9d,r9d
   14000493a:	test   ecx,ecx
   14000493c:	je     0x140004977
   14000493e:	movzx  eax,WORD PTR [r8+0x14]
   140004943:	lea    rdx,[r8+0x18]
   140004947:	movzx  r11d,WORD PTR [r8+0x6]
   14000494c:	add    rdx,rax
   14000494f:	mov    r10d,DWORD PTR [rcx+rsi*1+0xc]
   140004954:	test   r11d,r11d
   140004957:	je     0x140004977
   140004959:	mov    ecx,DWORD PTR [rdx+0xc]
   14000495c:	cmp    r10d,ecx
   14000495f:	jb     0x14000496b
   140004961:	mov    eax,DWORD PTR [rdx+0x8]
   140004964:	add    ecx,eax
   140004966:	cmp    r10d,ecx
   140004969:	jb     0x140004989
   14000496b:	inc    r9d
   14000496e:	add    rdx,0x28
   140004972:	cmp    r9d,r11d
   140004975:	jb     0x140004959
   140004977:	xor    eax,eax
   140004979:	mov    rbx,QWORD PTR [rsp+0x8]
   14000497e:	mov    rsi,QWORD PTR [rsp+0x10]
   140004983:	mov    rdi,QWORD PTR [rsp+0x18]
   140004988:	ret    
   140004989:	mov    DWORD PTR [rdi],eax
   14000498b:	mov    eax,DWORD PTR [rdx+0x24]
   14000498e:	mov    DWORD PTR [rbx],eax
   140004990:	mov    eax,DWORD PTR [rdx+0xc]
   140004993:	add    rax,rsi
   140004996:	jmp    0x140004979
   140004998:	mov    rax,rsp
   14000499b:	mov    QWORD PTR [rax+0x8],rbx
   14000499f:	mov    QWORD PTR [rax+0x10],rsi
   1400049a3:	push   rdi
   1400049a4:	sub    rsp,0x20
   1400049a8:	mov    rdi,rdx
   1400049ab:	mov    esi,ecx
   1400049ad:	lea    rdx,[rax+0x20]
   1400049b1:	lea    rcx,[rax+0x18]
   1400049b5:	call   0x140004900
   1400049ba:	mov    rbx,rax
   1400049bd:	test   rax,rax
   1400049c0:	jne    0x1400049ca
   1400049c2:	mov    DWORD PTR [rdi],0x4
   1400049c8:	jmp    0x140004a16
   1400049ca:	cmp    DWORD PTR [rip+0x71b7],0x0        # 0x14000bb88
   1400049d1:	jne    0x1400049fa
   1400049d3:	test   DWORD PTR [rsp+0x48],0x80000000
   1400049db:	mov    DWORD PTR [rip+0x71a3],0x1        # 0x14000bb88
   1400049e5:	jne    0x1400049ee
   1400049e7:	mov    ecx,0x19
   1400049ec:	int    0x29
   1400049ee:	mov    edx,DWORD PTR [rsp+0x40]
   1400049f2:	mov    rcx,rbx
   1400049f5:	call   0x140004868
   1400049fa:	mov    edx,DWORD PTR [rsp+0x40]
   1400049fe:	mov    r9,rdi
   140004a01:	mov    r8d,esi
   140004a04:	mov    rcx,rbx
   140004a07:	call   QWORD PTR [rip+0x1693]        # 0x1400060a0
   140004a0d:	test   eax,eax
   140004a0f:	jne    0x140004a16
   140004a11:	lea    ecx,[rax+0x19]
   140004a14:	int    0x29
   140004a16:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a20:	add    rsp,0x20
   140004a24:	pop    rdi
   140004a25:	ret    
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	rex push rbx
   140004a2a:	sub    rsp,0x20
   140004a2e:	test   DWORD PTR [rip+0x21c8],0x1000        # 0x140006c00
   140004a38:	je     0x140004ac6
   140004a3e:	call   0x1400047cc
   140004a43:	test   al,al
   140004a45:	je     0x140004a64
   140004a47:	mov    rbx,QWORD PTR [rip+0x711a]        # 0x14000bb68
   140004a4e:	mov    rcx,rbx
   140004a51:	call   QWORD PTR [rip+0x18c9]        # 0x140006320
   140004a57:	lea    rcx,[rip+0x711a]        # 0x14000bb78
   140004a5e:	call   rbx
   140004a60:	jmp    0x140004a7e
   140004a62:	pause  
   140004a64:	mov    rax,QWORD PTR [rip+0x710d]        # 0x14000bb78
   140004a6b:	test   rax,rax
   140004a6e:	jne    0x140004a62
   140004a70:	lea    ecx,[rax+0x1]
   140004a73:	lock cmpxchg QWORD PTR [rip+0x70fc],rcx        # 0x14000bb78
   140004a7c:	jne    0x140004a64
   140004a7e:	add    DWORD PTR [rip+0x70fb],0xffffffff        # 0x14000bb80
   140004a85:	jne    0x140004a97
   140004a87:	mov    ecx,DWORD PTR [rip+0x70f7]        # 0x14000bb84
   140004a8d:	lea    rdx,[rsp+0x30]
   140004a92:	call   0x140004998
   140004a97:	call   0x1400047cc
   140004a9c:	test   al,al
   140004a9e:	je     0x140004abb
   140004aa0:	mov    rbx,QWORD PTR [rip+0x70c9]        # 0x14000bb70
   140004aa7:	mov    rcx,rbx
   140004aaa:	call   QWORD PTR [rip+0x1870]        # 0x140006320
   140004ab0:	lea    rcx,[rip+0x70c1]        # 0x14000bb78
   140004ab7:	call   rbx
   140004ab9:	jmp    0x140004ac6
   140004abb:	mov    QWORD PTR [rip+0x70b2],0x0        # 0x14000bb78
   140004ac6:	add    rsp,0x20
   140004aca:	pop    rbx
   140004acb:	ret    
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	rex push rbp
   140004ad2:	push   rbx
   140004ad3:	push   rsi
   140004ad4:	push   rdi
   140004ad5:	push   r12
   140004ad7:	push   r13
   140004ad9:	push   r14
   140004adb:	push   r15
   140004add:	lea    rbp,[rsp-0x1f]
   140004ae2:	sub    rsp,0x88
   140004ae9:	mov    r13,rdx
   140004aec:	mov    r15,rcx
   140004aef:	call   0x140004710
   140004af4:	mov    eax,DWORD PTR [r15+0x4]
   140004af8:	lea    r10,[rip+0xffffffffffffb501]        # 0x140000000
   140004aff:	mov    r8d,DWORD PTR [r15+0x14]
   140004b03:	add    rax,r10
   140004b06:	mov    r9d,DWORD PTR [r15]
   140004b09:	add    r8,r10
   140004b0c:	mov    r12d,DWORD PTR [r15+0x8]
   140004b10:	and    r9d,0x1
   140004b14:	mov    edx,DWORD PTR [r15+0xc]
   140004b18:	add    r12,r10
   140004b1b:	mov    ecx,DWORD PTR [r15+0x10]
   140004b1f:	add    rdx,r10
   140004b22:	and    DWORD PTR [rbp-0x19],0x0
   140004b26:	add    rcx,r10
   140004b29:	mov    QWORD PTR [rbp-0x21],rax
   140004b2d:	xor    eax,eax
   140004b2f:	and    QWORD PTR [rbp-0x9],rax
   140004b33:	and    QWORD PTR [rbp-0x1],rax
   140004b37:	and    DWORD PTR [rbp+0x7],eax
   140004b3a:	mov    QWORD PTR [rbp+0x7f],r8
   140004b3e:	mov    r8d,DWORD PTR [r15+0x1c]
   140004b42:	mov    DWORD PTR [rbp+0x67],r8d
   140004b46:	mov    DWORD PTR [rbp-0x39],0x48
   140004b4d:	mov    QWORD PTR [rbp-0x31],r15
   140004b51:	mov    QWORD PTR [rbp-0x29],r13
   140004b55:	mov    QWORD PTR [rbp-0x11],rax
   140004b59:	test   r9b,r9b
   140004b5c:	jne    0x140004b87
   140004b5e:	lea    rax,[rbp-0x39]
   140004b62:	mov    QWORD PTR [rbp+0x6f],rax
   140004b66:	call   0x140004a28
   140004b6b:	xor    edx,edx
   140004b6d:	lea    r9,[rbp+0x6f]
   140004b71:	mov    ecx,0xc06d0057
   140004b76:	lea    r8d,[rdx+0x1]
   140004b7a:	call   QWORD PTR [rip+0x14f8]        # 0x140006078
   140004b80:	xor    eax,eax
   140004b82:	jmp    0x140004db5
   140004b87:	mov    rdi,QWORD PTR [r12]
   140004b8b:	mov    r14,r13
   140004b8e:	sub    r14,rdx
   140004b91:	sar    r14,0x3
   140004b95:	mov    r14d,r14d
   140004b98:	mov    rax,QWORD PTR [rcx+r14*8]
   140004b9c:	shr    rax,0x3f
   140004ba0:	xor    eax,0x1
   140004ba3:	mov    DWORD PTR [rbp-0x19],eax
   140004ba6:	je     0x140004bbc
   140004ba8:	mov    eax,DWORD PTR [rcx+r14*8]
   140004bac:	lea    rcx,[rip+0xffffffffffffb44f]        # 0x140000002
   140004bb3:	add    rax,rcx
   140004bb6:	mov    QWORD PTR [rbp-0x11],rax
   140004bba:	jmp    0x140004bc4
   140004bbc:	movzx  eax,WORD PTR [rcx+r14*8]
   140004bc1:	mov    DWORD PTR [rbp-0x11],eax
   140004bc4:	mov    rsi,QWORD PTR [rip+0x1f95]        # 0x140006b60
   140004bcb:	xor    ebx,ebx
   140004bcd:	test   rsi,rsi
   140004bd0:	je     0x140004bf6
   140004bd2:	mov    rcx,rsi
   140004bd5:	call   QWORD PTR [rip+0x1745]        # 0x140006320
   140004bdb:	lea    rdx,[rbp-0x39]
   140004bdf:	xor    ecx,ecx
   140004be1:	call   rsi
   140004be3:	mov    rbx,rax
   140004be6:	test   rax,rax
   140004be9:	jne    0x140004d81
   140004bef:	mov    rsi,QWORD PTR [rip+0x1f6a]        # 0x140006b60
   140004bf6:	test   rdi,rdi
   140004bf9:	jne    0x140004cad
   140004bff:	test   rsi,rsi
   140004c02:	je     0x140004c1e
   140004c04:	mov    rcx,rsi
   140004c07:	call   QWORD PTR [rip+0x1713]        # 0x140006320
   140004c0d:	lea    rdx,[rbp-0x39]
   140004c11:	lea    ecx,[rdi+0x1]
   140004c14:	call   rsi
   140004c16:	mov    rdi,rax
   140004c19:	test   rax,rax
   140004c1c:	jne    0x140004c91
   140004c1e:	mov    rcx,QWORD PTR [rbp-0x21]
   140004c22:	xor    r8d,r8d
   140004c25:	xor    edx,edx
   140004c27:	call   QWORD PTR [rip+0x145b]        # 0x140006088
   140004c2d:	mov    rdi,rax
   140004c30:	test   rax,rax
   140004c33:	jne    0x140004c91
   140004c35:	call   QWORD PTR [rip+0x1445]        # 0x140006080
   140004c3b:	mov    rdi,QWORD PTR [rip+0x1f26]        # 0x140006b68
   140004c42:	mov    DWORD PTR [rbp+0x7],eax
   140004c45:	test   rdi,rdi
   140004c48:	je     0x140004c66
   140004c4a:	mov    rcx,rdi
   140004c4d:	call   QWORD PTR [rip+0x16cd]        # 0x140006320
   140004c53:	lea    rdx,[rbp-0x39]
   140004c57:	mov    ecx,0x3
   140004c5c:	call   rdi
   140004c5e:	mov    rdi,rax
   140004c61:	test   rax,rax
   140004c64:	jne    0x140004c91
   140004c66:	lea    rax,[rbp-0x39]
   140004c6a:	mov    QWORD PTR [rbp+0x77],rax
   140004c6e:	call   0x140004a28
   140004c73:	xor    edx,edx
   140004c75:	lea    r9,[rbp+0x77]
   140004c79:	mov    ecx,0xc06d007e
   140004c7e:	lea    r8d,[rdx+0x1]
   140004c82:	call   QWORD PTR [rip+0x13f0]        # 0x140006078
   140004c88:	mov    rax,QWORD PTR [rbp-0x1]
   140004c8c:	jmp    0x140004db5
   140004c91:	mov    rax,rdi
   140004c94:	xchg   QWORD PTR [r12],rax
   140004c98:	cmp    rax,rdi
   140004c9b:	jne    0x140004ca6
   140004c9d:	mov    rcx,rdi
   140004ca0:	call   QWORD PTR [rip+0x13ea]        # 0x140006090
   140004ca6:	mov    rsi,QWORD PTR [rip+0x1eb3]        # 0x140006b60
   140004cad:	mov    QWORD PTR [rbp-0x9],rdi
   140004cb1:	test   rsi,rsi
   140004cb4:	je     0x140004ccd
   140004cb6:	mov    rcx,rsi
   140004cb9:	call   QWORD PTR [rip+0x1661]        # 0x140006320
   140004cbf:	lea    rdx,[rbp-0x39]
   140004cc3:	mov    ecx,0x2
   140004cc8:	call   rsi
   140004cca:	mov    rbx,rax
   140004ccd:	test   rbx,rbx
   140004cd0:	jne    0x140004d7d
   140004cd6:	cmp    DWORD PTR [r15+0x14],ebx
   140004cda:	je     0x140004d0c
   140004cdc:	cmp    DWORD PTR [r15+0x1c],ebx
   140004ce0:	je     0x140004d0c
   140004ce2:	movsxd rax,DWORD PTR [rdi+0x3c]
   140004ce6:	cmp    DWORD PTR [rax+rdi*1],0x4550
   140004ced:	jne    0x140004d0c
   140004cef:	mov    ecx,DWORD PTR [rbp+0x67]
   140004cf2:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   140004cf6:	jne    0x140004d0c
   140004cf8:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   140004cfd:	jne    0x140004d0c
   140004cff:	mov    rbx,QWORD PTR [rbp+0x7f]
   140004d03:	mov    rbx,QWORD PTR [rbx+r14*8]
   140004d07:	test   rbx,rbx
   140004d0a:	jne    0x140004d7d
   140004d0c:	mov    rdx,QWORD PTR [rbp-0x11]
   140004d10:	mov    rcx,rdi
   140004d13:	call   QWORD PTR [rip+0x144f]        # 0x140006168
   140004d19:	mov    rbx,rax
   140004d1c:	test   rax,rax
   140004d1f:	jne    0x140004d7d
   140004d21:	call   QWORD PTR [rip+0x1359]        # 0x140006080
   140004d27:	mov    rbx,QWORD PTR [rip+0x1e3a]        # 0x140006b68
   140004d2e:	mov    DWORD PTR [rbp+0x7],eax
   140004d31:	test   rbx,rbx
   140004d34:	je     0x140004d52
   140004d36:	mov    rcx,rbx
   140004d39:	call   QWORD PTR [rip+0x15e1]        # 0x140006320
   140004d3f:	lea    rdx,[rbp-0x39]
   140004d43:	mov    ecx,0x4
   140004d48:	call   rbx
   140004d4a:	mov    rbx,rax
   140004d4d:	test   rax,rax
   140004d50:	jne    0x140004d7d
   140004d52:	lea    rax,[rbp-0x39]
   140004d56:	mov    QWORD PTR [rbp-0x49],rax
   140004d5a:	call   0x140004a28
   140004d5f:	xor    edx,edx
   140004d61:	lea    r9,[rbp-0x49]
   140004d65:	mov    ecx,0xc06d007f
   140004d6a:	lea    r8d,[rdx+0x1]
   140004d6e:	call   QWORD PTR [rip+0x1304]        # 0x140006078
   140004d74:	call   0x140004710
   140004d79:	mov    rbx,QWORD PTR [rbp-0x1]
   140004d7d:	mov    QWORD PTR [r13+0x0],rbx
   140004d81:	mov    rsi,QWORD PTR [rip+0x1dd8]        # 0x140006b60
   140004d88:	test   rsi,rsi
   140004d8b:	je     0x140004dad
   140004d8d:	and    DWORD PTR [rbp+0x7],0x0
   140004d91:	mov    rcx,rsi
   140004d94:	mov    QWORD PTR [rbp-0x9],rdi
   140004d98:	mov    QWORD PTR [rbp-0x1],rbx
   140004d9c:	call   QWORD PTR [rip+0x157e]        # 0x140006320
   140004da2:	lea    rdx,[rbp-0x39]
   140004da6:	mov    ecx,0x5
   140004dab:	call   rsi
   140004dad:	call   0x140004a28
   140004db2:	mov    rax,rbx
   140004db5:	add    rsp,0x88
   140004dbc:	pop    r15
   140004dbe:	pop    r14
   140004dc0:	pop    r13
   140004dc2:	pop    r12
   140004dc4:	pop    rdi
   140004dc5:	pop    rsi
   140004dc6:	pop    rbx
   140004dc7:	pop    rbp
   140004dc8:	ret    
   140004dc9:	int3   
   140004dca:	jmp    QWORD PTR [rip+0x1358]        # 0x140006128
   140004dd0:	jmp    QWORD PTR [rip+0x12e2]        # 0x1400060b8
   140004dd6:	lea    rax,[rip+0x82a3]        # 0x14000d080
   140004ddd:	jmp    0x140002e47
   140004de2:	lea    rax,[rip+0x829f]        # 0x14000d088
   140004de9:	jmp    0x140002e47
   140004dee:	jmp    QWORD PTR [rip+0x151c]        # 0x140006310
   140004df4:	int3   
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	int3   
   140004e01:	int3   
   140004e02:	int3   
   140004e03:	int3   
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004e10:	jmp    rax
   140004e12:	lea    rcx,[rdx+0x48]
   140004e19:	jmp    0x14000342c
   140004e1e:	lea    rcx,[rdx+0x38]
   140004e25:	jmp    0x14000342c
   140004e2a:	rex push rbp
   140004e2c:	sub    rsp,0x40
   140004e30:	mov    rbp,rdx
   140004e33:	mov    rdx,QWORD PTR [rbp+0x40]
   140004e37:	xor    ecx,ecx
   140004e39:	call   QWORD PTR [rip+0x1209]        # 0x140006048
   140004e3f:	nop
   140004e40:	add    rsp,0x40
   140004e44:	pop    rbp
   140004e45:	ret    
   140004e46:	int3   
   140004e47:	mov    rcx,QWORD PTR [rdx+0x40]
   140004e4e:	add    rcx,0x1690
   140004e55:	jmp    0x1400026c8
   140004e5a:	rex push rbp
   140004e5c:	sub    rsp,0x20
   140004e60:	mov    rbp,rdx
   140004e63:	mov    eax,DWORD PTR [rbp+0x20]
   140004e66:	and    eax,0x1
   140004e69:	test   eax,eax
   140004e6b:	je     0x140004e7a
   140004e6d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140004e71:	mov    rcx,QWORD PTR [rbp+0x40]
   140004e75:	call   0x1400026c8
   140004e7a:	add    rsp,0x20
   140004e7e:	pop    rbp
   140004e7f:	ret    
   140004e80:	rex push rbx
   140004e82:	push   rbp
   140004e83:	push   rdi
   140004e84:	sub    rsp,0x20
   140004e88:	mov    rbp,rdx
   140004e8b:	cmp    DWORD PTR [rip+0x4f06],0x0        # 0x140009d98
   140004e92:	je     0x140004e9d
   140004e94:	cmp    DWORD PTR [rip+0x4ef9],0x0        # 0x140009d94
   140004e9b:	jne    0x140004ece
   140004e9d:	xor    ebx,ebx
   140004e9f:	cmp    DWORD PTR [rbp+0x20],ebx
   140004ea2:	sete   bl
   140004ea5:	test   ebx,ebx
   140004ea7:	je     0x140004eb3
   140004ea9:	call   QWORD PTR [rip+0x11d1]        # 0x140006080
   140004eaf:	mov    edi,eax
   140004eb1:	jmp    0x140004eb5
   140004eb3:	xor    edi,edi
   140004eb5:	mov    rdx,QWORD PTR [rbp+0x50]
   140004eb9:	xor    ecx,ecx
   140004ebb:	call   QWORD PTR [rip+0x1187]        # 0x140006048
   140004ec1:	test   ebx,ebx
   140004ec3:	je     0x140004ece
   140004ec5:	mov    ecx,edi
   140004ec7:	call   QWORD PTR [rip+0x114b]        # 0x140006018
   140004ecd:	nop
   140004ece:	add    rsp,0x20
   140004ed2:	pop    rdi
   140004ed3:	pop    rbp
   140004ed4:	pop    rbx
   140004ed5:	ret    
   140004ed6:	int3   
   140004ed7:	rex push rbp
   140004ed9:	sub    rsp,0x20
   140004edd:	mov    rbp,rdx
   140004ee0:	mov    rax,QWORD PTR [rcx]
   140004ee3:	mov    rdx,rcx
   140004ee6:	mov    ecx,DWORD PTR [rax]
   140004ee8:	call   0x140004684
   140004eed:	nop
   140004eee:	add    rsp,0x20
   140004ef2:	pop    rbp
   140004ef3:	ret    
   140004ef4:	int3   
   140004ef5:	rex push rbp
   140004ef7:	mov    rbp,rdx
   140004efa:	mov    rax,QWORD PTR [rcx]
   140004efd:	xor    ecx,ecx
   140004eff:	cmp    DWORD PTR [rax],0xc0000005
   140004f05:	sete   cl
   140004f08:	mov    eax,ecx
   140004f0a:	pop    rbp
   140004f0b:	ret    
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	sub    rsp,0x28
   140004f14:	mov    rcx,QWORD PTR [rip+0x42cd]        # 0x1400091e8
   140004f1b:	test   rcx,rcx
   140004f1e:	je     0x140004f2e
   140004f20:	call   QWORD PTR [rip+0x12ea]        # 0x140006210
   140004f26:	and    QWORD PTR [rip+0x42ba],0x0        # 0x1400091e8
   140004f2e:	mov    rcx,QWORD PTR [rip+0x42bb]        # 0x1400091f0
   140004f35:	test   rcx,rcx
   140004f38:	je     0x140004f48
   140004f3a:	call   QWORD PTR [rip+0x12d0]        # 0x140006210
   140004f40:	and    QWORD PTR [rip+0x42a8],0x0        # 0x1400091f0
   140004f48:	and    DWORD PTR [rip+0x42a9],0x0        # 0x1400091f8
   140004f4f:	add    rsp,0x28
   140004f53:	ret    
   140004f54:	int3   
   140004f55:	int3   
   140004f56:	int3   
   140004f57:	int3   
   140004f58:	int3   
   140004f59:	int3   
   140004f5a:	int3   
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	sub    rsp,0x28
   140004f64:	mov    rcx,QWORD PTR [rip+0x425d]        # 0x1400091c8
   140004f6b:	test   rcx,rcx
   140004f6e:	je     0x140004f7e
   140004f70:	call   QWORD PTR [rip+0x129a]        # 0x140006210
   140004f76:	and    QWORD PTR [rip+0x424a],0x0        # 0x1400091c8
   140004f7e:	mov    rcx,QWORD PTR [rip+0x424b]        # 0x1400091d0
   140004f85:	test   rcx,rcx
   140004f88:	je     0x140004f98
   140004f8a:	call   QWORD PTR [rip+0x1280]        # 0x140006210
   140004f90:	and    QWORD PTR [rip+0x4238],0x0        # 0x1400091d0
   140004f98:	and    DWORD PTR [rip+0x4239],0x0        # 0x1400091d8
   140004f9f:	add    rsp,0x28
   140004fa3:	ret    
   140004fa4:	int3   
   140004fa5:	int3   
   140004fa6:	int3   
   140004fa7:	int3   
   140004fa8:	int3   
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	sub    rsp,0x28
   140004fb4:	cmp    BYTE PTR [rip+0x41a5],0x0        # 0x140009160
   140004fbb:	lea    rax,[rip+0x15f6]        # 0x1400065b8
   140004fc2:	mov    QWORD PTR [rip+0x4187],rax        # 0x140009150
   140004fc9:	je     0x140004fdd
   140004fcb:	mov    rcx,QWORD PTR [rip+0x4186]        # 0x140009158
   140004fd2:	test   rcx,rcx
   140004fd5:	je     0x140004fdd
   140004fd7:	call   QWORD PTR [rip+0x119b]        # 0x140006178
   140004fdd:	add    rsp,0x28
   140004fe1:	ret    
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	int3   
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	lea    rax,[rip+0x1579]        # 0x140006570
   140004ff7:	mov    BYTE PTR [rip+0x41ba],0x0        # 0x1400091b8
   140004ffe:	mov    QWORD PTR [rip+0x416b],rax        # 0x140009170
   140005005:	ret    
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	lea    rcx,[rip+0x4dd9]        # 0x140009df0
   140005017:	jmp    0x140002d7c
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	ret    0x0
   140005023:	int3   
   140005024:	int3   
   140005025:	int3   
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	ret    0x0
   140005033:	int3   
   140005034:	int3   
   140005035:	int3   
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	sub    rsp,0x28
   140005044:	mov    rdx,QWORD PTR [rip+0x64e5]        # 0x14000b530
   14000504b:	add    rdx,0xffffffffffffffe8
   14000504f:	or     eax,0xffffffff
   140005052:	lock xadd DWORD PTR [rdx+0x10],eax
   140005057:	sub    eax,0x1
   14000505a:	jg     0x14000506c
   14000505c:	mov    rcx,QWORD PTR [rdx]
   14000505f:	mov    rax,QWORD PTR [rcx]
   140005062:	mov    rax,QWORD PTR [rax+0x8]
   140005066:	call   QWORD PTR [rip+0x12bc]        # 0x140006328
   14000506c:	add    rsp,0x28
   140005070:	ret    
   140005071:	int3   
   140005072:	int3   
   140005073:	int3   
   140005074:	int3   
   140005075:	int3   
   140005076:	int3   
   140005077:	int3   
   140005078:	int3   
   140005079:	int3   
   14000507a:	int3   
   14000507b:	int3   
   14000507c:	int3   
   14000507d:	int3   
   14000507e:	int3   
   14000507f:	int3   
   140005080:	lea    rcx,[rip+0x4df9]        # 0x140009e80
   140005087:	jmp    0x140002fe0

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	test   al,0x7e
	...
   14000600e:	add    BYTE PTR [rax],al
   140006010:	in     al,0x7f
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	cli    
   140006019:	jg     0x14000601b
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rdx],cl
   140006021:	add    BYTE PTR [rax],0x0
   140006024:	add    BYTE PTR [rax],al
   140006026:	add    BYTE PTR [rax],al
   140006028:	and    BYTE PTR [rax+0x0],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	add    BYTE PTR ss:[rax],0x0
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	sar    BYTE PTR [rdi+0x0],cl
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rsi-0x80],dl
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	push   0x80
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax+rax*4+0x0],bh
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rax+0x80],bl
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rax+0x80],ch
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rax+rax*4+0x0],bh
   14000606e:	add    BYTE PTR [rax],al
   140006070:	rex.RX add BYTE PTR [rax],0x0
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	(bad)  
   140006079:	jle    0x14000607b
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    al,bl
   140006081:	jle    0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rax],bh
   140006089:	xchg   BYTE PTR [rax],al
   14000608b:	add    BYTE PTR [rax],al
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    BYTE PTR [rdx],ch
   140006091:	xchg   BYTE PTR [rax],al
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rdx],bl
   140006099:	xchg   BYTE PTR [rax],al
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rax],cl
   1400060a1:	xchg   BYTE PTR [rax],al
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    al,bh
   1400060a9:	test   DWORD PTR [rax],eax
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    dl,ah
   1400060b1:	test   DWORD PTR [rax],eax
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    dh,al
   1400060b9:	test   DWORD PTR [rax],eax
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rdx+0x85],dh
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rbp+rax*4+0x0],dl
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	js     0x140006057
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	test   DWORD PTR fs:[rax],eax
   1400060db:	add    BYTE PTR [rax],al
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    BYTE PTR [rdx-0x7b],cl
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	test   DWORD PTR ss:[rax],eax
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rsi],ah
   1400060f1:	test   DWORD PTR [rax],eax
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rdi+rdi*2+0x0],ch
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	movabs al,ds:0xe0000000000007f
   140006109:	test   DWORD PTR [rax],eax
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rax+0x7f],cl
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rax],al
   140006119:	test   DWORD PTR [rax],eax
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    dl,dh
   140006121:	test   BYTE PTR [rax],al
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    al,bl
   140006129:	test   BYTE PTR [rax],al
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    al,cl
   140006131:	test   BYTE PTR [rax],al
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rsi+0x84],ch
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rax+0x84],bl
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    BYTE PTR [rdx+0x84],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rsp+rax*4+0x0],ch
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    BYTE PTR [rdx-0x7c],dl
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	push   0x7f
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	sar    BYTE PTR [rdi+0x0],0x0
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	test   BYTE PTR ds:[rax],al
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    al,ch
   140006179:	jle    0x14000617b
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    dh,dh
   140006181:	jle    0x140006183
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    BYTE PTR [rdx],al
   140006189:	jg     0x14000618b
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rax],dl
   140006191:	jg     0x140006193
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rdx+0x7f],dl
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	sbb    al,0x7f
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	sub    BYTE PTR [rdi+0x0],bh
   1400061ab:	add    BYTE PTR [rax],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rdx],bh
   1400061b1:	jg     0x1400061b3
	...
   1400061bf:	add    BYTE PTR [rdx],ch
   1400061c1:	add    DWORD PTR [rax],0x0
   1400061c7:	add    BYTE PTR [rax],al
   1400061c9:	add    DWORD PTR [rax],0x0
   1400061cf:	add    BYTE PTR [rsi],dl
   1400061d1:	add    DWORD PTR [rax],0x0
   1400061d7:	add    al,ah
   1400061d9:	add    BYTE PTR [rax],0x0
   1400061dc:	add    BYTE PTR [rax],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	(bad)  
   1400061e1:	add    BYTE PTR [rax],0x0
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	and    BYTE PTR [rcx+0x0],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	rex.X add DWORD PTR [rax],0x0
	...
   1400061ff:	add    BYTE PTR [rax],ch
   140006201:	add    DWORD PTR [rax],0x0
   140006204:	add    BYTE PTR [rax],al
   140006206:	add    BYTE PTR [rax],al
   140006208:	test   al,0x81
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	movabs al,ds:0x81
   140006219:	add    BYTE PTR [rax],al
   14000621b:	add    BYTE PTR [rax],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rdx],dl
   140006221:	add    DWORD PTR [rax],0x0
	...
   140006230:	adc    BYTE PTR [rdx+0x0],al
	...
   14000623e:	add    BYTE PTR [rax],al
   140006240:	out    dx,al
   140006241:	add    DWORD PTR [rax],0x0
   140006247:	add    BYTE PTR [rax],al
   140006249:	(bad)  
   14000624a:	add    BYTE PTR [rax],al
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	and    al,0x82
   140006252:	add    BYTE PTR [rax],al
   140006254:	add    BYTE PTR [rax],al
   140006256:	add    BYTE PTR [rax],al
   140006258:	cmp    al,0x82
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	pop    rsp
   140006261:	(bad)  
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	xchg   esi,eax
   140006269:	add    DWORD PTR [rax],0x0
   14000626f:	add    BYTE PTR [rdx-0x7f],bh
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	jl     0x1400061fc
   14000627a:	add    BYTE PTR [rax],al
   14000627c:	add    BYTE PTR [rax],al
   14000627e:	add    BYTE PTR [rax],al
   140006280:	mov    BYTE PTR [rdx+0x0],al
   140006286:	add    BYTE PTR [rax],al
   140006288:	xchg   esi,eax
   140006289:	(bad)  
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	add    BYTE PTR [rax],al
   14000628e:	add    BYTE PTR [rax],al
   140006290:	sahf   
   140006291:	(bad)  
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	mov    ah,0x82
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	rol    BYTE PTR [rdx+0x0],1
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	fiadd  DWORD PTR [rdx+0x0]
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	in     al,0x82
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	add    QWORD PTR [rax],0x0
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	mov    WORD PTR [rbx+0x0],es
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	jo     0x14000624d
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	push   rsp
   1400062d1:	add    DWORD PTR [rax],0x0
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	ret    0x82
	...
   1400062e7:	add    BYTE PTR [rcx+rax*4+0x0],dh
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	cmp    BYTE PTR [rbx+0x0],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400062f9:	(bad)  
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	add    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	rol    BYTE PTR [rcx+0x0],cl
	...
   14000630e:	add    BYTE PTR [rax],al
   140006310:	rex.WX xchg BYTE PTR [rax],al
	...
   14000631f:	add    al,ah
   140006321:	add    BYTE PTR ds:[rax+0x1],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rax],dl
   140006329:	rex.WRX add BYTE PTR [rax+0x1],r8b
	...
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    al,dh
   140006339:	add    BYTE PTR ss:[rax+0x1],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rax+0x1400010],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    BYTE PTR [rax],al
   140006349:	adc    BYTE PTR [rax],al
   14000634b:	rex add DWORD PTR [rax],eax
   14000634e:	add    BYTE PTR [rax],al
   140006350:	and    BYTE PTR [rax],dl
   140006352:	add    BYTE PTR [rax+0x1],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rax+0x10],al
   14000635a:	add    BYTE PTR [rax+0x1],al
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rax+0x10],dh
   140006362:	add    BYTE PTR [rax+0x1],al
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rax+0x10],ah
   14000636a:	add    BYTE PTR [rax+0x1],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rax+0x1400010],ah
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    BYTE PTR [rax+0x1400010],dh
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    al,al
   140006381:	adc    BYTE PTR [rax],al
   140006383:	rex add DWORD PTR [rax],eax
   140006386:	add    BYTE PTR [rax],al
   140006388:	adc    BYTE PTR [rcx],dl
   14000638a:	add    BYTE PTR [rax+0x1],al
	...
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rax],ah
   1400063a1:	add    BYTE PTR ss:[rax+0x1],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    al,ah
   1400063a9:	add    BYTE PTR ss:[rax+0x1],al
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    BYTE PTR [rax+0x1400038],dh
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rax+0x46],ah
   1400063ba:	add    BYTE PTR [rax+0x1],al
	...
   1400063f9:	adc    BYTE PTR [rax],al
   1400063fb:	add    BYTE PTR [rax],ah
   1400063fd:	adc    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax+0x10],al
   140006402:	add    BYTE PTR [rax],al
   140006404:	(bad)  
   140006405:	adc    BYTE PTR [rax],al
   140006407:	add    BYTE PTR [rax+0x10],dh
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	adc    BYTE PTR [rax],0x0
   14000640f:	add    BYTE PTR [rax-0x4ffffff0],ah
   140006415:	adc    BYTE PTR [rax],al
   140006417:	add    al,al
   140006419:	adc    BYTE PTR [rax],al
   14000641b:	add    BYTE PTR [rax],dl
   14000641d:	adc    DWORD PTR [rax],eax
   14000641f:	add    BYTE PTR [rax],dh
   140006421:	adc    DWORD PTR [rax],eax
   140006423:	add    al,dl
   140006425:	adc    DWORD PTR [rax],eax
   140006427:	add    al,dh
   140006429:	adc    DWORD PTR [rax],eax
   14000642b:	add    BYTE PTR [rax+0x12],dh
   14000642e:	add    BYTE PTR [rax],al
   140006430:	adc    BYTE PTR [rdx],0x0
   140006433:	add    BYTE PTR [rax-0x3fffffee],dl
   140006439:	adc    al,BYTE PTR [rax]
   14000643b:	add    al,dl
   14000643d:	adc    al,BYTE PTR [rax]
   14000643f:	add    al,dh
   140006441:	adc    al,BYTE PTR [rax]
   140006443:	add    BYTE PTR [rax+0x13],al
   140006446:	add    BYTE PTR [rax],al
   140006448:	push   rax
   140006449:	adc    eax,DWORD PTR [rax]
   14000644b:	add    al,al
   14000644d:	(bad)  
   14000644e:	add    BYTE PTR [rax],al
   140006450:	jo     0x140006475
   140006452:	add    BYTE PTR [rax],al
   140006454:	and    BYTE PTR [rsi],dh
   140006456:	add    BYTE PTR [rax],al
   140006458:	loopne 0x140006490
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	lock add BYTE PTR ss:[rax],al
   140006460:	nop
   140006461:	cmp    BYTE PTR [rax],al
   140006463:	add    BYTE PTR [rax+0x38],dh
   140006469:	cmp    al,BYTE PTR [rax]
   14000646b:	add    al,dh
   14000646d:	cmp    eax,DWORD PTR [rax]
   14000646f:	add    al,ah
   140006471:	add    BYTE PTR ds:[rax],al
   140006474:	adc    BYTE PTR [rax+0x0],al
   140006477:	add    BYTE PTR [rax],dl
   140006479:	rex.XB add BYTE PTR [r8],al
   14000647c:	add    BYTE PTR [rbx+0x0],0x0
   140006480:	adc    BYTE PTR [rax+rax*1+0x0],al
   140006484:	(bad)  
   140006485:	rex.RX add BYTE PTR [rax],r8b
   140006488:	ror    BYTE PTR [rdx+0x0],1
   14000648b:	add    BYTE PTR [rax],dl
   14000648d:	rex.WRXB add BYTE PTR [r8],r8b
   140006490:	(bad)  
   140006491:	rex.WRXB add BYTE PTR [r8],r8b
   140006494:	mov    al,0x4f
   140006496:	add    BYTE PTR [rax],al
   140006498:	lock rex.WRXB add BYTE PTR [r8],r8b
   14000649c:	adc    BYTE PTR [rax+0x0],dl
   14000649f:	add    BYTE PTR [rax],ah
   1400064a1:	push   rax
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	xor    BYTE PTR [rax+0x0],dl
   1400064a7:	add    BYTE PTR [rax+0x50],al
   1400064aa:	add    BYTE PTR [rax],al
   1400064ac:	adc    BYTE PTR [rax+0x0],0x0
   1400064b0:	add    BYTE PTR [r8+0x0],sil
   1400064b4:	jo     0x1400064b6
   1400064b6:	push   rbx
   1400064b7:	add    BYTE PTR [rax+0x0],ch
   1400064ba:	(bad)  
   1400064bb:	add    BYTE PTR [rdx+0x0],dh
   1400064be:	imul   eax,DWORD PTR [rax],0x67006e
   1400064c4:	rex.W add BYTE PTR [rdi+0x0],bpl
   1400064c8:	outs   dx,DWORD PTR ds:[rsi]
   1400064c9:	add    BYTE PTR [rbx+0x0],ch
   1400064cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400064d0:	outs   dx,BYTE PTR ds:[rsi]
   1400064d1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400064d5:	add    BYTE PTR [rdi+0x0],ch
   1400064d8:	ins    BYTE PTR es:[rdi],dx
   1400064d9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400064dd:	add    BYTE PTR [rdx+0x0],dh
   1400064e0:	push   rax
   1400064e1:	add    BYTE PTR [rdx+0x0],dh
   1400064e4:	add    BYTE PTR gs:[rsi+0x0],ah
   1400064e8:	imul   eax,DWORD PTR [rax],0x5f0078
   1400064ee:	rex.WB add BYTE PTR [r14+0x0],cl
   1400064f2:	rex.WX add BYTE PTR [rbp+0x0],al
   1400064f6:	add    BYTE PTR [r8+r8*1+0x48],dl
   1400064fb:	add    BYTE PTR [rdi+0x0],cl
   1400064fe:	rex.WRXB add BYTE PTR [r11+0x0],r9b
	...
   14000650e:	add    BYTE PTR [rax],al
   140006510:	add    BYTE PTR [r8+0x0],sil
   140006514:	jo     0x140006516
   140006516:	push   rbx
   140006517:	add    BYTE PTR [rax+0x0],ch
   14000651a:	(bad)  
   14000651b:	add    BYTE PTR [rdx+0x0],dh
   14000651e:	imul   eax,DWORD PTR [rax],0x67006e
   140006524:	rex.W add BYTE PTR [rdi+0x0],bpl
   140006528:	outs   dx,DWORD PTR ds:[rsi]
   140006529:	add    BYTE PTR [rbx+0x0],ch
   14000652c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006530:	outs   dx,BYTE PTR ds:[rsi]
   140006531:	add    BYTE PTR [rax+rax*1+0x72],dh
   140006535:	add    BYTE PTR [rdi+0x0],ch
   140006538:	ins    BYTE PTR es:[rdi],dx
   140006539:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000653d:	add    BYTE PTR [rdx+0x0],dh
   140006540:	push   rax
   140006541:	add    BYTE PTR [rdx+0x0],dh
   140006544:	add    BYTE PTR gs:[rsi+0x0],ah
   140006548:	imul   eax,DWORD PTR [rax],0x5f0078
   14000654e:	push   rdi
   14000654f:	add    BYTE PTR [rcx+0x0],cl
   140006552:	push   rsp
   140006553:	add    BYTE PTR [rax+0x0],cl
   140006556:	add    BYTE PTR [rdx+0x0],r10b
   14000655a:	add    BYTE PTR [r15+0x0],dl
   14000655e:	rex.W add BYTE PTR [rdi+0x0],cl
   140006562:	rex.WRXB add BYTE PTR [r11+0x0],r9b
   140006566:	add    BYTE PTR [rax],al
   140006568:	nop
   140006569:	ins    DWORD PTR es:[rdi],dx
   14000656a:	add    BYTE PTR [rax+0x1],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax],dh
   140006571:	adc    DWORD PTR [rax],eax
   140006573:	rex add DWORD PTR [rax],eax
   140006576:	add    BYTE PTR [rax],al
   140006578:	rcl    BYTE PTR [rcx],1
   14000657a:	add    BYTE PTR [rax+0x1],al
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    al,dh
   140006581:	adc    DWORD PTR [rax],eax
   140006583:	rex add DWORD PTR [rax],eax
   140006586:	add    BYTE PTR [rax],al
   140006588:	jo     0x14000659c
   14000658a:	add    BYTE PTR [rax+0x1],al
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    BYTE PTR [rax+0x1400012],al
   140006595:	add    BYTE PTR [rax],al
   140006597:	add    BYTE PTR [rax+0x1400012],dl
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    BYTE PTR [rcx],dh
   1400065a1:	icebp  
   1400065a2:	or     BYTE PTR [rdi+0x3b52b01d],0xa7
   1400065a9:	outs   dx,BYTE PTR ds:[rsi]
   1400065aa:	jnp    0x14000658d
   1400065ac:	leave  
   1400065ad:	(bad)  
   1400065ae:	cwde   
   1400065af:	xor    BYTE PTR [rax+0x6c],0x0
   1400065b3:	rex add DWORD PTR [rax],eax
   1400065b6:	add    BYTE PTR [rax],al
   1400065b8:	rcl    BYTE PTR [rdx],0x0
   1400065bb:	rex add DWORD PTR [rax],eax
   1400065be:	add    BYTE PTR [rax],al
   1400065c0:	rcl    BYTE PTR [rdx],1
   1400065c2:	add    BYTE PTR [rax+0x1],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    al,dh
   1400065c9:	adc    al,BYTE PTR [rax]
   1400065cb:	rex add DWORD PTR [rax],eax
   1400065ce:	add    BYTE PTR [rax],al
   1400065d0:	rex adc eax,DWORD PTR [rax]
   1400065d3:	rex add DWORD PTR [rax],eax
   1400065d6:	add    BYTE PTR [rax],al
   1400065d8:	push   rax
   1400065d9:	adc    eax,DWORD PTR [rax]
   1400065db:	rex add DWORD PTR [rax],eax
   1400065de:	add    BYTE PTR [rax],al
   1400065e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140017f79
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	or     al,0x74
	...
   1400065f2:	add    BYTE PTR [rax],al
   1400065f4:	add    eax,DWORD PTR [rax]
   1400065f6:	add    BYTE PTR [rax],al
   1400065f8:	sbb    BYTE PTR [rax+rax*1+0x0],dh
   1400065fc:	xor    BYTE PTR [rax],al
   1400065fe:	add    BYTE PTR [rax],al
   140006600:	add    BYTE PTR [rax],al
   140006602:	add    BYTE PTR [rax],al
   140006604:	add    DWORD PTR [rax],eax
   140006606:	add    BYTE PTR [rax],al
   140006608:	and    al,BYTE PTR [rip+0x11993]        # 0x140017fa1
   14000660e:	add    BYTE PTR [rax],al
   140006610:	pushf  
   140006611:	je     0x140006613
	...
   14000661b:	add    BYTE PTR [rip+0x50000000],al        # 0x190006621
   140006621:	je     0x140006623
   140006623:	add    BYTE PTR [rax],dh
   140006625:	add    BYTE PTR [rax],al
   140006627:	add    BYTE PTR [rax],al
   140006629:	add    BYTE PTR [rax],al
   14000662b:	add    BYTE PTR [rcx],al
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rdx],ah
   140006631:	add    eax,0x11993
   140006636:	add    BYTE PTR [rax],al
   140006638:	pushf  
   140006639:	je     0x14000663b
	...
   140006643:	add    BYTE PTR [rbx],al
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rax+0x30000074],ch
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rax],al
   140006651:	add    BYTE PTR [rax],al
   140006653:	add    BYTE PTR [rcx],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rbx+0x0],ch
   14000665a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000665e:	outs   dx,BYTE PTR ds:[rsi]
   14000665f:	add    BYTE PTR [rbp+0x0],ah
   140006662:	ins    BYTE PTR es:[rdi],dx
   140006663:	add    BYTE PTR [rbx],dh
   140006665:	add    BYTE PTR [rdx],dh
   140006667:	add    BYTE PTR [rsi],ch
   140006669:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000666d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006671:	add    BYTE PTR [rax],al
   140006673:	add    BYTE PTR [rax],al
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rcx+0x64],al
   14000667a:	fs rex.R ins BYTE PTR es:[rdi],dx
   14000667d:	ins    BYTE PTR es:[rdi],dx
   14000667e:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140006686:	jns    0x140006688
   140006688:	add    BYTE PTR [r8+0x0],sil
   14000668c:	jo     0x14000668e
   14000668e:	push   rbx
   14000668f:	add    BYTE PTR [rax+0x0],ch
   140006692:	(bad)  
   140006693:	add    BYTE PTR [rdx+0x0],dh
   140006696:	imul   eax,DWORD PTR [rax],0x67006e
   14000669c:	rex.XB add BYTE PTR [r8+0x0],bpl
   1400066a0:	jb     0x1400066a2
   1400066a2:	outs   dx,DWORD PTR ds:[rsi]
   1400066a3:	add    BYTE PTR [rbp+0x0],ch
   1400066a6:	add    BYTE PTR gs:[rax+0x0],cl
   1400066aa:	outs   dx,DWORD PTR ds:[rsi]
   1400066ab:	add    BYTE PTR [rdi+0x0],ch
   1400066ae:	imul   eax,DWORD PTR [rax],0x36
   1400066b1:	add    BYTE PTR [rax+rax*1],dh
   1400066b4:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400066b9:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400066bd:	add    BYTE PTR [rax],al
   1400066bf:	add    BYTE PTR [rbx+0x61],al
   1400066c2:	ins    BYTE PTR es:[rdi],dx
   1400066c3:	ins    BYTE PTR es:[rdi],dx
   1400066c4:	push   rdi
   1400066c5:	outs   dx,BYTE PTR ds:[rsi]
   1400066c6:	fs push rdx
   1400066c8:	gs je  0x14000671b
   1400066cb:	jb     0x14000673c
   1400066cd:	movsxd eax,DWORD PTR [rax]
   1400066cf:	add    BYTE PTR [rdi+0x0],cl
   1400066d2:	rex.XB add BYTE PTR [r15+0x0],bl
   1400066d6:	add    BYTE PTR [r8+0x0],sil
   1400066da:	jo     0x1400066dc
   1400066dc:	push   rbx
   1400066dd:	add    BYTE PTR [rax+0x0],ch
   1400066e0:	(bad)  
   1400066e1:	add    BYTE PTR [rdx+0x0],dh
   1400066e4:	imul   eax,DWORD PTR [rax],0x67006e
   1400066ea:	rex.XB add BYTE PTR [r8+0x0],bpl
   1400066ee:	jb     0x1400066f0
   1400066f0:	outs   dx,DWORD PTR ds:[rsi]
   1400066f1:	add    BYTE PTR [rbp+0x0],ch
   1400066f4:	add    BYTE PTR gs:[rdi+0x0],bl
   1400066f8:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400066fc:	jae    0x1400066fe
   1400066fe:	jae    0x140006700
   140006700:	(bad)  
   140006701:	add    BYTE PTR [rdi+0x0],ah
   140006704:	add    BYTE PTR gs:[rdi+0x0],dl
   140006708:	imul   eax,DWORD PTR [rax],0x64006e
   14000670e:	outs   dx,DWORD PTR ds:[rsi]
   14000670f:	add    BYTE PTR [rdi+0x0],dh
   140006712:	add    BYTE PTR [rax],al
   140006714:	add    BYTE PTR [rax],al
   140006716:	add    BYTE PTR [rax],al
   140006718:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000671c:	push   0x0
   14000671e:	add    BYTE PTR gs:[rbx+0x0],ah
   140006722:	je     0x140006724
   140006724:	rex.W add BYTE PTR [rdi+0x0],bpl
   140006728:	outs   dx,DWORD PTR ds:[rsi]
   140006729:	add    BYTE PTR [rbx+0x0],ch
   14000672c:	add    BYTE PTR [rax],al
   14000672e:	add    BYTE PTR [rax],al
   140006730:	push   rdi
   140006731:	add    BYTE PTR [rcx+0x0],ch
   140006734:	je     0x140006736
   140006736:	push   0x72006400
   14000673b:	add    BYTE PTR [rcx+0x0],ah
   14000673e:	ja     0x140006740
   140006740:	rex.W add BYTE PTR [rdi+0x0],bpl
   140006744:	outs   dx,DWORD PTR ds:[rsi]
   140006745:	add    BYTE PTR [rbx+0x0],ch
	...
   140006750:	rex.WXB add BYTE PTR [r13+0x0],spl
   140006754:	jb     0x140006756
   140006756:	outs   dx,BYTE PTR ds:[rsi]
   140006757:	add    BYTE PTR [rbp+0x0],ah
   14000675a:	ins    BYTE PTR es:[rdi],dx
   14000675b:	add    BYTE PTR [rbx],dh
   14000675d:	add    BYTE PTR [rdx],dh
   14000675f:	add    BYTE PTR [rsi],ch
   140006761:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006765:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006769:	add    BYTE PTR [rax],al
   14000676b:	add    BYTE PTR [rax],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rbx+0x65],dl
   140006772:	je     0x1400067c4
   140006774:	jb     0x1400067e5
   140006776:	movsxd esp,DWORD PTR [rbp+0x73]
   140006779:	jae    0x1400067d0
   14000677b:	jae    0x1400067e2
   14000677d:	jb     0x1400067cc
   14000677f:	outs   dx,DWORD PTR ds:[rsi]
   140006780:	fs gs rex.RB js 0x1400067e8
   140006785:	gs jo  0x1400067fc
   140006788:	imul   ebp,DWORD PTR [rdi+0x6e],0x696c6f50
   14000678f:	movsxd edi,DWORD PTR [rcx+0x0]
   140006792:	add    BYTE PTR [rax],al
   140006794:	add    BYTE PTR [rax],al
   140006796:	add    BYTE PTR [rax],al
   140006798:	rex.RXB
   140006799:	gs je  0x1400067ec
   14000679c:	jb     0x14000680d
   14000679e:	movsxd esp,DWORD PTR [rbp+0x73]
   1400067a1:	jae    0x1400067f8
   1400067a3:	jae    0x14000680a
   1400067a5:	jb     0x1400067f4
   1400067a7:	outs   dx,DWORD PTR ds:[rsi]
   1400067a8:	fs gs rex.RB js 0x140006810
   1400067ad:	gs jo  0x140006824
   1400067b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x696c6f50
   1400067b7:	movsxd edi,DWORD PTR [rcx+0x0]
   1400067ba:	add    BYTE PTR [rax],al
   1400067bc:	add    BYTE PTR [rax],al
   1400067be:	add    BYTE PTR [rax],al
   1400067c0:	push   rsp
   1400067c1:	add    BYTE PTR [rbp+0x0],ah
   1400067c4:	jb     0x1400067c6
   1400067c6:	ins    DWORD PTR es:[rdi],dx
   1400067c7:	add    BYTE PTR [rcx+0x0],ch
   1400067ca:	outs   dx,BYTE PTR ds:[rsi]
   1400067cb:	add    BYTE PTR [rcx+0x0],ah
   1400067ce:	je     0x1400067d0
   1400067d0:	add    BYTE PTR gs:[rdi+0x0],cl
   1400067d4:	outs   dx,BYTE PTR ds:[rsi]
   1400067d5:	add    BYTE PTR [rax+0x0],cl
   1400067d8:	add    BYTE PTR gs:[rcx+0x0],ah
   1400067dc:	jo     0x1400067de
   1400067de:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400067e2:	jb     0x1400067e4
   1400067e4:	jb     0x1400067e6
   1400067e6:	jne    0x1400067e8
   1400067e8:	jo     0x1400067ea
   1400067ea:	je     0x1400067ec
   1400067ec:	imul   eax,DWORD PTR [rax],0x6e006f
   1400067f2:	add    BYTE PTR [rax],al
   1400067f4:	add    BYTE PTR [rax],al
   1400067f6:	add    BYTE PTR [rax],al
   1400067f8:	rex.W
   1400067f9:	gs (bad) 
   1400067fb:	jo     0x140006850
   1400067fd:	gs je  0x140006849
   140006800:	outs   dx,BYTE PTR ds:[rsi]
   140006801:	outs   dx,WORD PTR ds:[rsi]
   140006803:	jb     0x140006872
   140006805:	(bad)  
   140006806:	je     0x140006871
   140006808:	outs   dx,DWORD PTR ds:[rsi]
   140006809:	outs   dx,BYTE PTR ds:[rsi]
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	add    BYTE PTR [rax],al
   14000680e:	add    BYTE PTR [rax],al
   140006810:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006814:	ins    DWORD PTR es:[rdi],dx
   140006815:	add    BYTE PTR [rbx+0x0],ah
   140006818:	je     0x14000681a
   14000681a:	ins    BYTE PTR es:[rdi],dx
   14000681b:	add    BYTE PTR [rbx],dh
   14000681d:	add    BYTE PTR [rdx],dh
   14000681f:	add    BYTE PTR [rsi],ch
   140006821:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006825:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006829:	add    BYTE PTR [rax],al
   14000682b:	add    BYTE PTR [rax],al
   14000682d:	add    BYTE PTR [rax],al
   14000682f:	add    BYTE PTR [rcx+0x73],cl
   140006832:	outs   dx,DWORD PTR ds:[rsi]
   140006833:	ins    BYTE PTR es:[rdi],dx
   140006834:	(bad)  
   140006835:	je     0x1400068a0
   140006837:	outs   dx,DWORD PTR ds:[rsi]
   140006838:	outs   dx,BYTE PTR ds:[rsi]
   140006839:	rex.B ja 0x14000689d
   14000683c:	jb     0x1400068a3
   14000683e:	and    BYTE PTR [rsi+0x75],ah
   140006841:	outs   dx,BYTE PTR ds:[rsi]
   140006842:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140006846:	outs   dx,BYTE PTR ds:[rsi]
   140006847:	and    BYTE PTR [rbx+0x61],ah
   14000684a:	ins    BYTE PTR es:[rdi],dx
   14000684b:	ins    BYTE PTR es:[rdi],dx
   14000684c:	gs and BYTE PTR fs:[rcx+0x66],ah
   140006851:	je     0x1400068b8
   140006853:	jb     0x140006875
   140006855:	rex.WB jae 0x1400068c7
   140006858:	ins    BYTE PTR es:[rdi],dx
   140006859:	(bad)  
   14000685a:	je     0x1400068c5
   14000685c:	outs   dx,DWORD PTR ds:[rsi]
   14000685d:	outs   dx,BYTE PTR ds:[rsi]
   14000685e:	rex.B ja 0x1400068c2
   140006861:	jb     0x1400068c8
   140006863:	rex.XB ins BYTE PTR es:[rdi],dx
   140006865:	gs (bad) 
   140006867:	outs   dx,BYTE PTR ds:[rsi]
   140006868:	jne    0x1400068da
   14000686a:	or     al,BYTE PTR [rax]
   14000686c:	add    BYTE PTR [rax],al
   14000686e:	add    BYTE PTR [rax],al
   140006870:	(bad)  
   140006871:	fistp  DWORD PTR [rdx-0x54]
   140006874:	lods   al,BYTE PTR ds:[rsi]
   140006875:	leave  
   140006876:	push   0x30
   140006878:	cli    
   140006879:	xchg   esp,eax
   14000687a:	popf   
   14000687b:	xchg   ebx,eax
   14000687c:	xchg   ecx,eax
   14000687d:	js     0x140006805
   14000687f:	jp     0x1400068a9
   140006881:	sub    BYTE PTR [rcx-0x2d],cl
   140006884:	cmp    BYTE PTR [rcx-0x2c],al
   140006887:	rex.WRXB mov r11b,0xec
   14000688a:	fistp  DWORD PTR [rcx-0x7951a1ed]
   140006890:	add    BYTE PTR [r10+0x0],r10b
   140006894:	push   rdx
   140006895:	add    BYTE PTR [rdi+0x0],cl
   140006898:	push   rdx
   140006899:	add    BYTE PTR [rax],ah
   14000689b:	add    BYTE PTR [rdx],bh
   14000689d:	add    BYTE PTR [rax],ah
   14000689f:	add    BYTE PTR [rbp+0x0],dl
   1400068a2:	outs   dx,BYTE PTR ds:[rsi]
   1400068a3:	add    BYTE PTR [rcx+0x0],ah
   1400068a6:	(bad)  
   1400068a7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400068ab:	add    BYTE PTR [rax],ah
   1400068ad:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400068b1:	add    BYTE PTR [rax],ah
   1400068b3:	add    BYTE PTR [rcx+0x0],ch
   1400068b6:	outs   dx,BYTE PTR ds:[rsi]
   1400068b7:	add    BYTE PTR [rcx+0x0],ch
   1400068ba:	je     0x1400068bc
   1400068bc:	imul   eax,DWORD PTR [rax],0x6c0061
   1400068c2:	imul   eax,DWORD PTR [rax],0x65007a
   1400068c8:	and    BYTE PTR [rax],al
   1400068ca:	movsxd eax,DWORD PTR [rax]
   1400068cc:	jb     0x1400068ce
   1400068ce:	imul   eax,DWORD PTR [rax],0x690074
   1400068d4:	movsxd eax,DWORD PTR [rax]
   1400068d6:	(bad)  
   1400068d7:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400068db:	add    BYTE PTR [rbx+0x0],dh
   1400068de:	add    BYTE PTR gs:[rbx+0x0],ah
   1400068e2:	je     0x1400068e4
   1400068e4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400068ea:	and    BYTE PTR [rax],al
   1400068ec:	imul   eax,DWORD PTR [rax],0x20006e
   1400068f2:	rex.XB add BYTE PTR [r9+0x0],al
   1400068f6:	je     0x1400068f8
   1400068f8:	ins    BYTE PTR es:[rdi],dx
   1400068f9:	add    BYTE PTR [rdx+0x0],al
   1400068fc:	(bad)  
   1400068fd:	add    BYTE PTR [rbx+0x0],dh
   140006900:	add    BYTE PTR gs:[rbp+0x0],cl
   140006904:	outs   dx,DWORD PTR ds:[rsi]
   140006905:	add    BYTE PTR [rax+rax*1+0x75],ah
   140006909:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000690d:	add    BYTE PTR [rdx],cl
	...
   14000691f:	add    BYTE PTR [rbx+0x48],dl
   140006922:	rex.WR push rdi
   140006924:	push   r8
   140006926:	rex.WB
   140006927:	cs fs ins BYTE PTR es:[rdi],dx
   14000692a:	ins    BYTE PTR es:[rdi],dx
   14000692b:	add    BYTE PTR [rax],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rbp+0x53],dl
   140006932:	rex.RB push r10
   140006934:	xor    esi,DWORD PTR [rdx]
   140006936:	cs fs ins BYTE PTR es:[rdi],dx
   140006939:	ins    BYTE PTR es:[rdi],dx
   14000693a:	add    BYTE PTR [rax],al
   14000693c:	add    BYTE PTR [rax],al
   14000693e:	add    BYTE PTR [rax],al
   140006940:	and    al,BYTE PTR [rip+0x11993]        # 0x1400182d9
   140006946:	add    BYTE PTR [rax],al
   140006948:	pushf  
   140006949:	jne    0x14000694b
	...
   140006953:	add    BYTE PTR [rbx],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rax+0x20000075],ch
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rax],al
   140006961:	add    BYTE PTR [rax],al
   140006963:	add    BYTE PTR [rcx],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rdx],ah
   140006969:	add    eax,0x1993
	...
   14000697a:	add    BYTE PTR [rax],al
   14000697c:	add    DWORD PTR [rax],eax
   14000697e:	add    BYTE PTR [rax],al
   140006980:	shl    BYTE PTR [rbp+0x0],1
   140006983:	add    BYTE PTR [rax],ah
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    BYTE PTR [rax],al
   140006989:	add    BYTE PTR [rax],al
   14000698b:	add    BYTE PTR [rip+0x22000000],al        # 0x162006991
   140006991:	add    eax,0x11993
   140006996:	add    BYTE PTR [rax],al
   140006998:	in     al,dx
   140006999:	jne    0x14000699b
	...
   1400069a3:	add    BYTE PTR [rdx],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    al,bh
   1400069a9:	jne    0x1400069ab
   1400069ab:	add    BYTE PTR [rax],ch
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rax],al
   1400069b1:	add    BYTE PTR [rax],al
   1400069b3:	add    BYTE PTR [rcx],al
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rbp+0x0],al
   1400069ba:	push   rsp
   1400069bb:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400069bf:	add    BYTE PTR [rdx+0x0],dl
   1400069c2:	push   rsp
   1400069c3:	add    BYTE PTR [rbx+0x0],al
   1400069c6:	add    BYTE PTR [rax],al
   1400069c8:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400069cc:	add    BYTE PTR [ebx+0x0],al
   1400069d0:	push   0x63006500
   1400069d5:	add    BYTE PTR [rbx+0x0],ch
   1400069d8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400069dc:	rex.W add BYTE PTR [rcx+0x0],bpl
   1400069e0:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   1400069e5:	add    BYTE PTR [rsi+0x0],ch
   1400069e8:	push   rdx
   1400069e9:	add    BYTE PTR [rdi+0x0],ch
   1400069ec:	outs   dx,DWORD PTR ds:[rsi]
   1400069ed:	add    BYTE PTR [rax+rax*1+0x57],dh
   1400069f1:	add    BYTE PTR [rcx+0x0],ch
   1400069f4:	outs   dx,BYTE PTR ds:[rsi]
   1400069f5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400069f9:	add    BYTE PTR [rdi+0x0],dh
   1400069fc:	add    BYTE PTR [rax],al
   1400069fe:	add    BYTE PTR [rax],al
   140006a00:	and    eax,0x5f007300
   140006a05:	add    BYTE PTR [rip+0x7300],ah        # 0x14000dd0b
   140006a0b:	add    BYTE PTR [rax],al
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	add    BYTE PTR [rip+0x3f68fdc],al        # 0x143f6f9f1
   140006a15:	rex.WX mov sil,BYTE PTR [rcx]
   140006a18:	jb     0x1400069df
   140006a1a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006a1b:	fsubr  DWORD PTR [rsi-0x46]
   140006a1e:	cmp    al,0xff
   140006a20:	cmp    al,0x0
   140006a22:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140006a26:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140006a2b:	add    BYTE PTR [rax],al
   140006a2d:	add    BYTE PTR [rax],al
   140006a2f:	add    BYTE PTR [rsi+0x0],cl
   140006a32:	push   rbp
   140006a33:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140006a3f:	add    BYTE PTR [rcx+0x0],ah
   140006a42:	jo     0x140006a44
   140006a44:	imul   eax,DWORD PTR [rax],0x6d002d
   140006a4a:	jae    0x140006a4c
   140006a4c:	sub    eax,0x69007700
   140006a51:	add    BYTE PTR [rsi+0x0],ch
   140006a54:	sub    eax,0x6f006300
   140006a59:	add    BYTE PTR [rdx+0x0],dh
   140006a5c:	add    BYTE PTR gs:[rip+0x79007300],ch        # 0x1b900dd63
   140006a63:	add    BYTE PTR [rsi+0x0],ch
   140006a66:	movsxd eax,DWORD PTR [rax]
   140006a68:	push   0x6c002d00
   140006a6d:	add    BYTE PTR [rcx],dh
   140006a6f:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d009c75
   140006a75:	add    BYTE PTR [rax],dh
   140006a77:	add    BYTE PTR [rsi],ch
   140006a79:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006a7d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006a81:	add    BYTE PTR [rax],al
   140006a83:	add    BYTE PTR [rax],al
   140006a85:	add    BYTE PTR [rax],al
   140006a87:	add    BYTE PTR [rcx+0x6e],cl
   140006a8a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140006a92:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006a94:	outs   dx,BYTE PTR ds:[rsi]
   140006a95:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7261566e
   140006a9e:	imul   esp,DWORD PTR [rcx+0x62],0x656c
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    BYTE PTR [rbx+0x6c],dl
   140006aaa:	gs gs jo 0x140006af1
   140006aae:	outs   dx,DWORD PTR ds:[rsi]
   140006aaf:	outs   dx,BYTE PTR ds:[rsi]
   140006ab0:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7261566e
   140006ab9:	imul   esp,DWORD PTR [rcx+0x62],0x5343656c
	...
   140006ac8:	push   rdi
   140006ac9:	(bad)  
   140006aca:	imul   esp,DWORD PTR [rbp+0x41],0x6c
   140006ace:	ins    BYTE PTR es:[rdi],dx
   140006acf:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006ad1:	outs   dx,BYTE PTR ds:[rsi]
   140006ad2:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7261566e
   140006adb:	imul   esp,DWORD PTR [rcx+0x62],0x656c
   140006ae2:	add    BYTE PTR [rax],al
   140006ae4:	add    BYTE PTR [rax],al
   140006ae6:	add    BYTE PTR [rax],al
   140006ae8:	adc    BYTE PTR [rsi+0x0],ch
   140006aeb:	rex add DWORD PTR [rax],eax
   140006aee:	add    BYTE PTR [rax],al
   140006af0:	lock cmp eax,DWORD PTR [rax]
   140006af3:	rex add DWORD PTR [rax],eax
	...
   140006afe:	add    BYTE PTR [rax],al
   140006b00:	shl    BYTE PTR [rbp+0x14000],1
   140006b06:	add    BYTE PTR [rax],al
   140006b08:	jo     0x140006ac0
   140006b0a:	add    BYTE PTR [rax+0x1],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    BYTE PTR [rbx+0x0],cl
   140006b12:	add    BYTE PTR [r10+0x0],r10b
   140006b16:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140006b1a:	rex.WR add BYTE PTR [rbx],r14b
   140006b1d:	add    BYTE PTR [rdx],dh
   140006b1f:	add    BYTE PTR [rsi],ch
   140006b21:	add    BYTE PTR [rax+rax*1+0x4c],al
   140006b25:	add    BYTE PTR [rax+rax*1+0x0],cl
   140006b29:	add    BYTE PTR [rax],al
   140006b2b:	add    BYTE PTR [rax],al
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    BYTE PTR [rcx+0x63],al
   140006b32:	jno    0x140006ba9
   140006b34:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140006b3b:	outs   dx,DWORD PTR ds:[rsi]
   140006b3c:	movsxd ebp,DWORD PTR [rbx+0x45]
   140006b3f:	js     0x140006ba4
   140006b41:	ins    BYTE PTR es:[rdi],dx
   140006b42:	jne    0x140006bb7
   140006b44:	imul   esi,DWORD PTR [rsi+0x65],0x6c655200
   140006b4b:	gs (bad) 
   140006b4d:	jae    0x140006bb4
   140006b4f:	push   rbx
   140006b50:	push   rdx
   140006b51:	push   rdi
   140006b52:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006b54:	movsxd ebp,DWORD PTR [rbx+0x45]
   140006b57:	js     0x140006bbc
   140006b59:	ins    BYTE PTR es:[rdi],dx
   140006b5a:	jne    0x140006bcf
   140006b5c:	imul   esi,DWORD PTR [rsi+0x65],0x0
	...
   140006b6f:	add    BYTE PTR [rax+0x0],ah
	...
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rax],dh
   140006bc9:	nop
   140006bca:	add    BYTE PTR [rax+0x1],al
	...
   140006bdd:	add    BYTE PTR [rax],al
   140006bdf:	add    BYTE PTR [rax],ah
   140006be1:	movsxd eax,DWORD PTR [rax]
   140006be3:	rex add DWORD PTR [rax],eax
   140006be6:	add    BYTE PTR [rax],al
   140006be8:	sub    BYTE PTR [rbx+0x0],ah
   140006beb:	rex add DWORD PTR [rax],eax
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	clc    
   140006bf1:	movsxd eax,DWORD PTR [rax]
   140006bf3:	rex add DWORD PTR [rax],eax
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	add    BYTE PTR cs:[rax],al
   140006bfb:	add    BYTE PTR [rax],al
   140006bfd:	add    BYTE PTR [rax],al
   140006bff:	add    BYTE PTR [rax],al
   140006c01:	xor    eax,0x1
	...
   140006c12:	add    BYTE PTR [rax],al
   140006c14:	mov    WORD PTR [rbx],fs
   140006c16:	mov    dl,0x59
   140006c18:	add    BYTE PTR [rax],al
   140006c1a:	add    BYTE PTR [rax],al
   140006c1c:	add    al,BYTE PTR [rax]
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	sbb    BYTE PTR [rcx],al
   140006c22:	add    BYTE PTR [rax],al
   140006c24:	test   BYTE PTR [rsi+0x0],ch
   140006c27:	add    BYTE PTR [rsp+rdx*2+0x0],al
   140006c2e:	add    BYTE PTR [rax],al
   140006c30:	mov    WORD PTR [rbx],fs
   140006c32:	mov    dl,0x59
   140006c34:	add    BYTE PTR [rax],al
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	or     eax,0x0
   140006c3d:	add    al,0x0
   140006c3f:	add    BYTE PTR [rdi+rbp*2+0x559c0000],bl
   140006c46:	add    BYTE PTR [rax],al
   140006c48:	add    al,ah
   140006c4a:	add    BYTE PTR [rax+0x1],al
   140006c4d:	add    BYTE PTR [rax],al
   140006c4f:	add    BYTE PTR [rax],cl
   140006c51:	loopne 0x140006c53
   140006c53:	rex add DWORD PTR [rax],eax
   140006c56:	add    BYTE PTR [rax],al
   140006c58:	(bad)  
   140006c59:	mov    ch,0x0
   140006c5b:	rex add DWORD PTR [rax],eax
   140006c5e:	add    BYTE PTR [rax],al
   140006c60:	shl    BYTE PTR [rbx+0x0],1
   140006c63:	rex add DWORD PTR [rax],eax
	...
   140006c6e:	xor    BYTE PTR [rax],al
   140006c70:	add    DWORD PTR [rax],eax
	...
   140006c7a:	add    BYTE PTR [rax],al
   140006c7c:	push   0xffffffff98000090
   140006c81:	ins    BYTE PTR es:[rdi],dx
   140006c82:	add    BYTE PTR [rax],al
   140006c84:	jo     0x140006cf2
	...
   140006c9e:	add    BYTE PTR [rax],al
   140006ca0:	add    al,BYTE PTR [rax]
   140006ca2:	add    BYTE PTR [rax],al
   140006ca4:	mov    al,0x6c
	...
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	enter  0x6c,0x0
   140006cb4:	lock ins BYTE PTR es:[rdi],dx
	...
   140006cc6:	add    BYTE PTR [rax],al
   140006cc8:	push   0x1000090
   140006ccd:	add    BYTE PTR [rax],al
   140006ccf:	add    BYTE PTR [rax],al
   140006cd1:	add    BYTE PTR [rax],al
   140006cd3:	add    bh,bh
   140006cd5:	(bad)  
   140006cd6:	(bad)  
   140006cd7:	inc    DWORD PTR [rax]
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rax+0x0],al
   140006cde:	add    BYTE PTR [rax],al
   140006ce0:	cwde   
   140006ce1:	ins    BYTE PTR es:[rdi],dx
	...
   140006cee:	add    BYTE PTR [rax],al
   140006cf0:	nop
   140006cf1:	nop
	...
   140006cfa:	add    BYTE PTR [rax],al
   140006cfc:	(bad)  
   140006cfd:	(bad)  
   140006cfe:	(bad)  
   140006cff:	inc    DWORD PTR [rax]
   140006d01:	add    BYTE PTR [rax],al
   140006d03:	add    BYTE PTR [rax+0x0],al
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	sbb    BYTE PTR [rbp+0x0],ch
	...
   140006d1f:	add    BYTE PTR [rcx],al
   140006d21:	add    BYTE PTR [rax],al
   140006d23:	add    BYTE PTR [rax],dh
   140006d25:	ins    DWORD PTR es:[rdi],dx
	...
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	lock ins BYTE PTR es:[rdi],dx
	...
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	mov    eax,0x90
   140006d45:	add    BYTE PTR [rax],al
   140006d47:	add    BYTE PTR [rax],al
   140006d49:	add    BYTE PTR [rax],al
   140006d4b:	add    bh,bh
   140006d4d:	(bad)  
   140006d4e:	(bad)  
   140006d4f:	inc    DWORD PTR [rax]
   140006d51:	add    BYTE PTR [rax],al
   140006d53:	add    BYTE PTR [rax+0x0],al
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	push   0x6d
	...
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rcx],al
   140006d71:	add    BYTE PTR [rax],al
   140006d73:	add    BYTE PTR [rax+0x6d],al
   140006d79:	add    BYTE PTR [rax],al
   140006d7b:	add    BYTE PTR [rax],al
   140006d7d:	add    BYTE PTR [rax],al
   140006d7f:	add    BYTE PTR [rax+0x6d],al
	...
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	add    DWORD PTR [rax],eax
	...
   140006d9a:	add    BYTE PTR [rax],al
   140006d9c:	loopne 0x140006d2e
   140006d9e:	add    BYTE PTR [rax],al
   140006da0:	mov    eax,0x9000006d
   140006da5:	ins    DWORD PTR es:[rdi],dx
	...
   140006dbe:	add    BYTE PTR [rax],al
   140006dc0:	add    al,BYTE PTR [rax]
   140006dc2:	add    BYTE PTR [rax],al
   140006dc4:	shr    BYTE PTR [rbp+0x0],1
	...
   140006dcf:	add    al,ch
   140006dd1:	ins    DWORD PTR es:[rdi],dx
   140006dd2:	add    BYTE PTR [rax],al
   140006dd4:	rex ins DWORD PTR es:[rdi],dx
	...
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	loopne 0x140006d7a
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	add    DWORD PTR [rax],eax
   140006dee:	add    BYTE PTR [rax],al
   140006df0:	add    BYTE PTR [rax],al
   140006df2:	add    BYTE PTR [rax],al
   140006df4:	(bad)  
   140006df5:	(bad)  
   140006df6:	(bad)  
   140006df7:	inc    DWORD PTR [rax]
   140006df9:	add    BYTE PTR [rax],al
   140006dfb:	add    BYTE PTR [rax+0x0],al
   140006dfe:	add    BYTE PTR [rax],al
   140006e00:	mov    eax,0x6d
	...
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    BYTE PTR [rcx],al
	...
   140006e19:	add    BYTE PTR [rax],al
   140006e1b:	add    BYTE PTR [rax],dh
   140006e1d:	xchg   ecx,eax
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	cmp    BYTE PTR [rsi+0x0],ch
   140006e23:	add    BYTE PTR [rax],dl
   140006e25:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	add    DWORD PTR [rax],eax
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	push   rax
   140006e45:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e4e:	add    BYTE PTR [rax],al
   140006e50:	(bad)  
   140006e51:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e5e:	add    BYTE PTR [rax],al
   140006e60:	xor    BYTE PTR [rcx+0x0],dl
   140006e66:	add    BYTE PTR [rax],al
   140006e68:	add    BYTE PTR [rax],al
   140006e6a:	add    BYTE PTR [rax],al
   140006e6c:	(bad)  
   140006e6d:	(bad)  
   140006e6e:	(bad)  
   140006e6f:	inc    DWORD PTR [rax]
   140006e71:	add    BYTE PTR [rax],al
   140006e73:	add    BYTE PTR [rax+0x0],al
   140006e76:	add    BYTE PTR [rax],al
   140006e78:	cmp    BYTE PTR [rsi+0x0],ch
	...
   140006e83:	add    BYTE PTR [rdx+0x53],dl
   140006e86:	rex.R push rbx
   140006e88:	xor    eax,0x4b99dbf5
   140006e8d:	cld    
   140006e8e:	push   rbx
   140006e8f:	rex.RXB lahf 
   140006e91:	pop    rax
   140006e92:	(bad)  
   140006e93:	(bad)  
   140006e94:	jge    0x140006f12
   140006e96:	outs   dx,BYTE PTR ds:[rsi]
   140006e97:	add    DWORD PTR [rcx],0x0
   140006e9a:	add    BYTE PTR [rax],al
   140006e9c:	cmp    r11b,BYTE PTR [rdi+r9*2+0x66]
   140006ea1:	imul   sp,WORD PTR [rbx+0x65],0x545c
   140006ea7:	(bad)  
   140006ea8:	jb     0x140006f11
   140006eaa:	gs je  0x140006f09
   140006ead:	js     0x140006ee5
   140006eaf:	xor    al,0x5c
   140006eb1:	jae    0x140006f1b
   140006eb3:	imul   esi,DWORD PTR [rax+0x5c],0x74736f70
   140006eba:	movsxd esi,DWORD PTR [rdx]
   140006ebc:	jb     0x140006f21
   140006ebe:	jb     0x140006f2f
   140006ec0:	jae    0x140006f35
   140006ec2:	pop    rsp
   140006ec3:	js     0x140006ef2
   140006ec5:	outs   dx,BYTE PTR ds:[rsi]
   140006ec6:	outs   dx,DWORD PTR ds:[rsi]
   140006ec7:	outs   dx,BYTE PTR ds:[rsi]
   140006ec8:	gs pop rsp
   140006eca:	(bad)  
   140006ecb:	jo     0x140006f3d
   140006ecd:	jae    0x140006f37
   140006ecf:	(bad)  
   140006ed0:	jb     0x140006f3b
   140006ed2:	outs   dx,BYTE PTR ds:[rsi]
   140006ed3:	addr32 push 0x636b6f6f
   140006ed9:	outs   dx,DWORD PTR ds:[rsi]
   140006eda:	outs   dx,BYTE PTR ds:[rsi]
   140006edb:	je     0x140006f4f
   140006edd:	outs   dx,DWORD PTR ds:[rsi]
   140006ede:	ins    BYTE PTR es:[rdi],dx
   140006edf:	ins    BYTE PTR es:[rdi],dx
   140006ee0:	gs jb  0x140006f11
   140006ee3:	jo     0x140006f49
   140006ee5:	(bad)  
   140006ee6:	add    BYTE PTR [rdi+0x6e],ch
   140006ee9:	je     0x140006f5d
   140006eeb:	outs   dx,DWORD PTR ds:[rsi]
   140006eec:	ins    BYTE PTR es:[rdi],dx
   140006eed:	ins    BYTE PTR es:[rdi],dx
   140006eee:	gs jb  0x140006f1f
   140006ef1:	jo     0x140006f57
   140006ef3:	(bad)  
	...
   140006fa0:	add    BYTE PTR [rax],dl
   140006fa2:	add    BYTE PTR [rax],al
   140006fa4:	xor    BYTE PTR [rcx],al
   140006fa6:	add    BYTE PTR [rax],al
   140006fa8:	cs je  0x140007010
   140006fab:	js     0x140007021
   140006fad:	and    al,0x64
   140006faf:	imul   eax,DWORD PTR [rax],0x30000000
   140006fb5:	adc    DWORD PTR [rax],eax
   140006fb7:	add    al,dl
   140006fb9:	cmp    al,0x0
   140006fbb:	add    BYTE PTR [rsi],ch
   140006fbd:	je     0x140007024
   140006fbf:	js     0x140007035
   140006fc1:	and    al,0x6d
   140006fc3:	outs   dx,BYTE PTR ds:[rsi]
   140006fc4:	add    BYTE PTR [rax],al
   140006fc6:	add    BYTE PTR [rax],al
   140006fc8:	add    BYTE PTR [rsi+0x0],cl
   140006fcb:	add    BYTE PTR [rdx],dl
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rsi],ch
   140006fd1:	je     0x140007038
   140006fd3:	js     0x140007049
   140006fd5:	and    al,0x6d
   140006fd7:	outs   dx,BYTE PTR ds:[rsi]
   140006fd8:	and    al,0x30
   140006fda:	xor    BYTE PTR [rax],al
   140006fdc:	adc    cl,BYTE PTR [rsi+0x0]
   140006fdf:	add    dh,bh
   140006fe1:	add    BYTE PTR [rax],al
   140006fe3:	add    BYTE PTR [rsi],ch
   140006fe5:	je     0x14000704c
   140006fe7:	js     0x14000705d
   140006fe9:	and    al,0x78
   140006feb:	add    BYTE PTR [rax],dl
   140006fed:	rex.WRXB add BYTE PTR [r8],r8b
   140006ff0:	jl     0x140006ff3
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	cs je  0x14000705c
   140006ff7:	js     0x14000706d
   140006ff9:	and    al,0x79
   140006ffb:	add    BYTE PTR fs:[rax],al
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	add    BYTE PTR [rax+0x0],ah
   140007003:	add    BYTE PTR [rax],ah
   140007005:	add    eax,DWORD PTR [rax]
   140007007:	add    BYTE PTR [rsi],ch
   140007009:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007011:	add    BYTE PTR [rax],al
   140007013:	add    BYTE PTR [rax],ah
   140007015:	movsxd eax,DWORD PTR [rax]
   140007017:	add    BYTE PTR [rax],dl
   140007019:	add    BYTE PTR [rax],al
   14000701b:	add    BYTE PTR [rsi],ch
   14000701d:	xor    BYTE PTR [rax],dh
   14000701f:	movsxd esp,DWORD PTR [rsi+0x67]
   140007022:	add    BYTE PTR [rax],al
   140007024:	xor    BYTE PTR [rbx+0x0],ah
   140007027:	add    BYTE PTR [rax],cl
   140007029:	add    BYTE PTR [rax],al
   14000702b:	add    BYTE PTR [rsi],ch
   14000702d:	rex.XB push r10
   14000702f:	push   rsp
   140007030:	and    al,0x58
   140007032:	rex.XB
   140007033:	add    BYTE PTR [r8],al
   140007036:	add    BYTE PTR [rax],al
   140007038:	cmp    BYTE PTR [rbx+0x0],ah
   14000703b:	add    BYTE PTR [rax],cl
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    BYTE PTR [rsi],ch
   140007041:	rex.XB push r10
   140007043:	push   rsp
   140007044:	and    al,0x58
   140007046:	rex.XB
   140007047:	rex.B
   140007048:	add    BYTE PTR [r8],al
   14000704b:	add    BYTE PTR [rax+0x63],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	or     BYTE PTR [rax],al
   140007052:	add    BYTE PTR [rax],al
   140007054:	cs rex.XB push r10
   140007057:	push   rsp
   140007058:	and    al,0x58
   14000705a:	rex.XB
   14000705b:	rex.WR add BYTE PTR [rax],r8b
   14000705e:	add    BYTE PTR [rax],al
   140007060:	movsxd rax,DWORD PTR [rax]
   140007063:	add    BYTE PTR [rax+0x0],cl
   140007066:	add    BYTE PTR [rax],al
   140007068:	cs rex.XB push r10
   14000706b:	push   rsp
   14000706c:	and    al,0x58
   14000706e:	rex.XB push r13
   140007070:	add    BYTE PTR [rax],al
   140007072:	add    BYTE PTR [rax],al
   140007074:	nop
   140007075:	movsxd eax,DWORD PTR [rax]
   140007077:	add    BYTE PTR [rax],cl
   140007079:	add    BYTE PTR [rax],al
   14000707b:	add    BYTE PTR [rsi],ch
   14000707d:	rex.XB push r10
   14000707f:	push   rsp
   140007080:	and    al,0x58
   140007082:	rex.XB pop r10
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	cwde   
   140007089:	movsxd eax,DWORD PTR [rax]
   14000708b:	add    BYTE PTR [rax],cl
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rsi],ch
   140007091:	rex.XB push r10
   140007093:	push   rsp
   140007094:	and    al,0x58
   140007096:	rex.WB
   140007097:	add    BYTE PTR [r8],al
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	movabs al,ds:0x2e00000008000063
   1400070a5:	rex.XB push r10
   1400070a7:	push   rsp
   1400070a8:	and    al,0x58
   1400070aa:	rex.WB
   1400070ab:	rex.B
   1400070ac:	add    BYTE PTR [r8],al
   1400070af:	add    BYTE PTR [rax+0x8000063],ch
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rsi],ch
   1400070b9:	rex.XB push r10
   1400070bb:	push   rsp
   1400070bc:	and    al,0x58
   1400070be:	rex.WB
   1400070bf:	rex.B
   1400070c0:	rex.XB add BYTE PTR [r8],al
   1400070c3:	add    BYTE PTR [rax+0x10000063],dh
   1400070c9:	add    BYTE PTR [rax],al
   1400070cb:	add    BYTE PTR [rsi],ch
   1400070cd:	rex.XB push r10
   1400070cf:	push   rsp
   1400070d0:	and    al,0x58
   1400070d2:	rex.WB
   1400070d3:	rex.XB add BYTE PTR [r8],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	shl    BYTE PTR [rbx+0x0],0x0
   1400070dc:	or     BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	cs rex.XB push r10
   1400070e3:	push   rsp
   1400070e4:	and    al,0x58
   1400070e6:	rex.WB pop r10
   1400070e8:	add    BYTE PTR [rax],al
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	enter  0x63,0x0
   1400070f0:	or     BYTE PTR [rax],al
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	cs rex.XB push r10
   1400070f7:	push   rsp
   1400070f8:	and    al,0x58
   1400070fa:	rex.WR
   1400070fb:	add    BYTE PTR [r8],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	shl    BYTE PTR [rbx+0x0],1
   140007103:	add    BYTE PTR [rax],cl
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    BYTE PTR [rsi],ch
   140007109:	rex.XB push r10
   14000710b:	push   rsp
   14000710c:	and    al,0x58
   14000710e:	rex.WR pop rdx
   140007110:	add    BYTE PTR [rax],al
   140007112:	add    BYTE PTR [rax],al
   140007114:	fsub   DWORD PTR [rbx+0x0]
   140007117:	add    BYTE PTR [rax],cl
   140007119:	add    BYTE PTR [rax],al
   14000711b:	add    BYTE PTR [rsi],ch
   14000711d:	rex.XB push r10
   14000711f:	push   rsp
   140007120:	and    al,0x58
   140007122:	push   rax
   140007123:	add    BYTE PTR [r8],al
   140007126:	add    BYTE PTR [rax],al
   140007128:	loopne 0x14000718d
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	or     BYTE PTR [rax],al
   14000712e:	add    BYTE PTR [rax],al
   140007130:	cs rex.XB push r10
   140007133:	push   rsp
   140007134:	and    al,0x58
   140007136:	push   rax
   140007137:	pop    rdx
   140007138:	add    BYTE PTR [rax],al
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	call   0x1480071a4
   140007141:	add    BYTE PTR [rax],al
   140007143:	add    BYTE PTR [rsi],ch
   140007145:	rex.XB push r10
   140007147:	push   rsp
   140007148:	and    al,0x58
   14000714a:	push   rsp
   14000714b:	add    BYTE PTR [r8],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	lock movsxd eax,DWORD PTR [rax]
   140007153:	add    BYTE PTR [rax],cl
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rsi],ch
   140007159:	rex.XB push r10
   14000715b:	push   rsp
   14000715c:	and    al,0x58
   14000715e:	push   rsp
   14000715f:	pop    rdx
   140007160:	add    BYTE PTR [rax],al
   140007162:	add    BYTE PTR [rax],al
   140007164:	clc    
   140007165:	movsxd eax,DWORD PTR [rax]
   140007167:	add    BYTE PTR [rax+0x2e000000],bh
   14000716d:	imul   sp,WORD PTR [ebx+esi*2+0x0],0xb000
   140007175:	add    BYTE PTR fs:[rax],al
   140007178:	cwde   
   140007179:	(bad)  
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	cs jb  0x1400071e3
   14000717f:	(bad)  
   140007180:	je     0x1400071e3
   140007182:	add    BYTE PTR [rax],al
   140007184:	rex.W ins BYTE PTR es:[rdi],dx
   140007186:	add    BYTE PTR [rax],al
   140007188:	sub    BYTE PTR [rax],al
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	cs jb  0x1400071f3
   14000718f:	(bad)  
   140007190:	je     0x1400071f3
   140007192:	and    al,0x54
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	jo     0x140007206
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	adc    al,0x2
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	cs jb  0x140007207
   1400071a3:	(bad)  
   1400071a4:	je     0x140007207
   1400071a6:	and    al,0x72
   1400071a8:	add    BYTE PTR [rax],al
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	test   BYTE PTR [rsi+0x0],ch
   1400071af:	add    BYTE PTR [rax*1+0x722e0000],bl
   1400071b6:	fs (bad) 
   1400071b8:	je     0x14000721b
   1400071ba:	and    al,0x7a
   1400071bc:	jp     0x140007238
   1400071be:	fs (bad) 
   1400071c0:	add    BYTE PTR [eax],al
   1400071c3:	add    BYTE PTR [rax+0x8000073],ah
   1400071c9:	add    BYTE PTR [rax],al
   1400071cb:	add    BYTE PTR [rsi],ch
   1400071cd:	jb     0x140007243
   1400071cf:	movsxd esp,DWORD PTR [rcx+rcx*2]
   1400071d2:	rex.B
   1400071d3:	add    BYTE PTR [r8],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	test   al,0x73
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	or     BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	cs jb  0x140007257
   1400071e3:	movsxd esp,DWORD PTR [rcx+rcx*2]
   1400071e6:	pop    rdx
   1400071e7:	pop    rdx
   1400071e8:	add    BYTE PTR [rax],al
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	mov    al,0x73
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	or     BYTE PTR [rax],al
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	cs jb  0x14000726b
   1400071f7:	movsxd esp,DWORD PTR [rsp+rdx*2]
   1400071fa:	rex.B
   1400071fb:	add    BYTE PTR [r8],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	mov    eax,0x8000073
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    BYTE PTR [rsi],ch
   140007209:	jb     0x14000727f
   14000720b:	movsxd esp,DWORD PTR [rsp+rdx*2]
   14000720e:	pop    rdx
   14000720f:	pop    rdx
   140007210:	add    BYTE PTR [rax],al
   140007212:	add    BYTE PTR [rax],al
   140007214:	shl    BYTE PTR [rbx+0x0],0x0
   140007218:	add    BYTE PTR [rbx],0x0
   14000721b:	add    BYTE PTR [rsi],ch
   14000721d:	js     0x140007283
   14000721f:	(bad)  
   140007220:	je     0x140007283
   140007222:	add    BYTE PTR [rax],al
   140007224:	rex ja 0x140007227
   140007227:	add    BYTE PTR [rax+0x0],bl
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	cs js  0x140007293
   14000722f:	(bad)  
   140007230:	je     0x140007293
   140007232:	and    al,0x78
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	cwde   
   140007239:	ja     0x14000723b
   14000723b:	add    BYTE PTR [rax+0x0],al
   14000723e:	add    BYTE PTR [rax],al
   140007240:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	fdiv   DWORD PTR [rdi+0x0]
   14000724f:	add    BYTE PTR [rax],ah
   140007251:	add    BYTE PTR [rax],al
   140007253:	add    BYTE PTR [rsi],ch
   140007255:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000725e:	add    BYTE PTR [rax],al
   140007260:	clc    
   140007261:	ja     0x140007263
   140007263:	add    BYTE PTR [rax+0x2e000000],dh
   140007269:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140007272:	add    BYTE PTR [rax],al
   140007274:	test   al,0x78
   140007276:	add    BYTE PTR [rax],al
   140007278:	push   0x2e000001
   14000727d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140007286:	add    BYTE PTR [rax],al
   140007288:	adc    BYTE PTR [rdx+0x0],bh
   14000728b:	add    BYTE PTR [rax+0x2e000000],dh
   140007291:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	sar    BYTE PTR [rdx+0x0],0x0
   1400072a0:	mov    ah,0x0
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    BYTE PTR [rbx+rdi*2+0x0],dh
   1400072b3:	add    BYTE PTR [rax+rax*1],dl
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400072c1:	add    BYTE PTR [rax],al
   1400072c3:	add    BYTE PTR [rax+0x2000007b],cl
   1400072c9:	add    eax,DWORD PTR [rax]
   1400072cb:	add    BYTE PTR [rsi],ch
   1400072cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    BYTE PTR [rax-0x33ffff82],ch
   1400072dd:	(bad)  
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400072e9:	add    BYTE PTR [rax],al
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	nop
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	push   0x2e000000
   1400072f5:	fs (bad) 
   1400072f7:	je     0x14000735a
   1400072f9:	add    BYTE PTR [rax],al
   1400072fb:	add    BYTE PTR [rax-0x70],ch
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	call   0x16e007305
   140007305:	fs (bad) 
   140007307:	je     0x14000736a
   140007309:	and    al,0x72
   14000730b:	add    BYTE PTR [rax-0x6f],dl
   14000730e:	add    BYTE PTR [rax],al
   140007310:	pop    rax
   140007311:	sub    al,BYTE PTR [rax]
   140007313:	add    BYTE PTR [rsi],ch
   140007315:	(bad)  
   140007317:	jae    0x140007319
   140007319:	add    BYTE PTR [rax],al
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	rol    BYTE PTR [rax],0x0
   140007320:	adc    BYTE PTR [rip+0x702e0000],al        # 0x1b02e7326
   140007326:	fs (bad) 
   140007328:	je     0x14000738b
   14000732a:	add    BYTE PTR [rax],al
   14000732c:	add    al,dl
   14000732e:	add    BYTE PTR [rax],al
   140007330:	mov    al,0x0
   140007332:	add    BYTE PTR [rax],al
   140007334:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000733e:	add    BYTE PTR [rax],al
   140007340:	add    al,ah
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    al,0x0
   140007346:	add    BYTE PTR [rax],al
   140007348:	cs je  0x1400073b7
   14000734b:	jae    0x14000734d
   14000734d:	add    BYTE PTR [rax],al
   14000734f:	add    BYTE PTR [rax+riz*8],al
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    al,0x0
   140007356:	add    BYTE PTR [rax],al
   140007358:	cs je  0x1400073c7
   14000735b:	jae    0x140007381
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rax],cl
   140007361:	loopne 0x140007363
   140007363:	add    BYTE PTR [rcx],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rsi],ch
   140007369:	je     0x1400073d7
   14000736b:	jae    0x140007391
   14000736d:	pop    rdx
   14000736e:	pop    rdx
   14000736f:	pop    rdx
   140007370:	add    BYTE PTR [rax],al
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    al,dh
   140007376:	add    BYTE PTR [rax],al
   140007378:	(bad)  
   140007379:	add    BYTE PTR [rax],al
   14000737b:	add    BYTE PTR [rsi],ch
   14000737d:	jb     0x1400073f2
   14000737f:	jb     0x1400073e4
   140007381:	and    al,0x30
   140007383:	xor    DWORD PTR [rax],eax
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax-0x10],ah
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	nop
   14000738d:	add    al,0x0
   14000738f:	add    BYTE PTR [rsi],ch
   140007391:	jb     0x140007406
   140007393:	jb     0x1400073f8
   140007395:	and    al,0x30
   140007397:	xor    al,BYTE PTR [rax]
	...
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rcx],al
   1400073c1:	sbb    DWORD PTR [rdx],ecx
   1400073c3:	add    BYTE PTR [rcx],bl
   1400073c5:	je     0x1400073d0
   1400073c7:	add    BYTE PTR [rcx],bl
   1400073c9:	or     BYTE PTR fs:[rax],al
   1400073cc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400073d0:	sbb    DWORD PTR [rsi+rax*1],esi
   1400073d3:	add    BYTE PTR [rcx],bl
   1400073d5:	xor    dl,BYTE PTR [rip+0x10b01e0]        # 0x1410b75bb
   1400073db:	add    BYTE PTR [rbx],cl
   1400073dd:	(bad)  
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	add    DWORD PTR [rbx],ecx
   1400073e2:	add    DWORD PTR [rax],eax
   1400073e4:	or     esp,DWORD PTR [rdx+0x4010000]
   1400073ea:	add    DWORD PTR [rax],eax
   1400073ec:	add    al,0x42
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	adc    DWORD PTR [rdi],ebx
   1400073f2:	or     BYTE PTR [rax],al
   1400073f4:	(bad)  
   1400073f5:	push   rsp
   1400073f6:	adc    eax,DWORD PTR [rax]
   1400073f8:	sbb    esi,DWORD PTR [rdx+rdx*1]
   1400073fb:	add    BYTE PTR [rdi],cl
   1400073fd:	mov    dl,0xb
   1400073ff:	lock or DWORD PTR [rax+0x8],esi
   140007403:	(bad)  
   140007404:	rex.RX add BYTE PTR ss:[rax],r8b
   140007408:	loopne 0x14000746f
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	(bad)  
   14000740d:	(bad)  
   14000740e:	(bad)  
   14000740f:	call   QWORD PTR [rdx]
   140007411:	rex.WRX add BYTE PTR [rax],r8b
   140007414:	add    BYTE PTR [rax],al
   140007416:	add    BYTE PTR [rax],al
   140007418:	jl     0x140007430
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	(bad)  
   14000741d:	(bad)  
   14000741e:	(bad)  
   14000741f:	call   QWORD PTR [rbx]
   140007421:	(bad)  
   140007422:	add    BYTE PTR [rax],al
   140007424:	add    BYTE PTR [rax],al
   140007426:	add    BYTE PTR [rax],al
   140007428:	rex.RXB sbb r8b,BYTE PTR [r8]
   14000742b:	add    bh,bh
   14000742d:	(bad)  
   14000742e:	(bad)  
   14000742f:	call   QWORD PTR [rcx]
   140007431:	and    BYTE PTR [rdx],cl
   140007433:	add    BYTE PTR [rax],ah
   140007435:	adc    BYTE PTR fs:[rax],al
   140007438:	sbb    al,0x54
   14000743a:	ltr    WORD PTR [rax]
   14000743d:	xor    al,0xe
   14000743f:	add    BYTE PTR [rdx+rdx*4],cl
   140007442:	or     al,ah
   140007444:	(bad)  
   140007445:	rol    BYTE PTR [rax+rsi*2],1
   140007448:	rex.RX add BYTE PTR ss:[rax],r8b
   14000744c:	or     BYTE PTR [rsi+0x0],ah
   14000744f:	add    BYTE PTR [rax-0xffffe0],bh
   140007455:	(bad)  
   140007456:	(bad)  
   140007457:	call   QWORD PTR [rbx+0x21]
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	add    BYTE PTR [rax],al
   14000745e:	add    BYTE PTR [rax],al
   140007460:	(bad)  
   140007461:	and    eax,DWORD PTR [rax]
   140007463:	add    bh,bh
   140007465:	(bad)  
   140007466:	(bad)  
   140007467:	push   QWORD PTR [rip+0x23]        # 0x140007490
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rbp+0x23],dl
   140007472:	add    BYTE PTR [rax],al
   140007474:	(bad)  
   140007475:	(bad)  
   140007476:	(bad)  
   140007477:	inc    DWORD PTR [rcx]
   140007479:	clts   
   14000747b:	add    BYTE PTR [rdi],cl
   14000747d:	or     BYTE PTR fs:[rax],al
   140007480:	sysenter 
   140007482:	(bad)  
   140007483:	add    BYTE PTR [rdi],cl
   140007485:	xor    cl,BYTE PTR [rbx]
   140007487:	jo     0x14000749a
   140007489:	adc    al,0x4
   14000748b:	add    BYTE PTR [rsp+rsi*1],dl
   14000748e:	or     al,0x0
   140007490:	(bad)  
   140007491:	xchg   edx,eax
   140007492:	add    ah,BYTE PTR [rax+0x36]
   140007495:	rex.RX add BYTE PTR [rax],r8b
   140007498:	xor    BYTE PTR [rsi+0x0],ah
   14000749b:	add    bh,bh
   14000749d:	(bad)  
   14000749e:	(bad)  
   14000749f:	call   FWORD PTR [rsi]
   1400074a1:	rex.WRX add BYTE PTR [rax],r8b
   1400074a4:	add    BYTE PTR [rax],al
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	adc    BYTE PTR [rsi],bl
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	(bad)  
   1400074ad:	(bad)  
   1400074ae:	(bad)  
   1400074af:	call   QWORD PTR [rsi+0x1e]
   1400074b5:	add    BYTE PTR [rax],al
   1400074b7:	add    BYTE PTR [rdi-0xffffe1],bl
   1400074bd:	(bad)  
   1400074be:	(bad)  
   1400074bf:	inc    DWORD PTR [rcx]
   1400074c1:	(bad)  
   1400074c2:	or     eax,DWORD PTR [rax]
   1400074c4:	(bad)  
   1400074c5:	and    eax,DWORD PTR fs:[rax]
   1400074c8:	(bad)  
   1400074c9:	xor    al,0x22
   1400074cb:	add    BYTE PTR [rsi],bl
   1400074cd:	add    DWORD PTR [rax+rax*1],ebx
   1400074d0:	adc    dh,al
   1400074d2:	adc    al,ah
   1400074d4:	(bad)  
   1400074d5:	ror    BYTE PTR [rax+rsi*2],0xb
   1400074d9:	push   rax
   1400074da:	add    BYTE PTR [rax],al
   1400074dc:	add    DWORD PTR [rsi],eax
   1400074de:	add    al,BYTE PTR [rax]
   1400074e0:	(bad)  
   1400074e1:	push   rdx
   1400074e2:	add    dh,BYTE PTR [rax]
   1400074e4:	sbb    DWORD PTR [rbx],ebx
   1400074e6:	add    eax,DWORD PTR [rax]
   1400074e8:	or     DWORD PTR [rcx],eax
   1400074ea:	pop    rsi
   1400074eb:	add    BYTE PTR [rdx],al
   1400074ed:	xor    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax+0x3f],al
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	add    DWORD PTR [rax],eax
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	jle    0x140007525
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	mov    bh,0x2b
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	sub    cl,BYTE PTR [rsi+0x0]
   140007503:	add    BYTE PTR [rax],al
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    dl,ah
   140007509:	add    al,BYTE PTR [rax]
   14000750b:	add    BYTE PTR [rcx],al
   14000750d:	(bad)  
   14000750e:	add    al,BYTE PTR [rax]
   140007510:	(bad)  
   140007511:	jb     0x140007515
   140007513:	push   rax
   140007514:	add    DWORD PTR [rsi],eax
   140007516:	add    al,BYTE PTR [rax]
   140007518:	(bad)  
   140007519:	xor    al,BYTE PTR [rdx]
   14000751b:	xor    BYTE PTR [rcx],al
   14000751d:	or     al,BYTE PTR [rax+rax*1]
   140007520:	or     dh,BYTE PTR [rsi+rax*1]
   140007523:	add    BYTE PTR [rdx],cl
   140007525:	xor    al,BYTE PTR [rsi]
   140007527:	jo     0x14000752a
   140007529:	sbb    BYTE PTR [rcx],al
   14000752b:	add    BYTE PTR [rax],bl
   14000752d:	ret    0x0
   140007530:	add    DWORD PTR [rax],ebx
   140007532:	add    DWORD PTR [rax],eax
   140007534:	sbb    dl,al
   140007536:	add    BYTE PTR [rax],al
   140007538:	adc    DWORD PTR [rax],edx
   14000753a:	(bad)  
   14000753b:	add    BYTE PTR [rax],dl
   14000753d:	or     DWORD PTR fs:[rax],eax
   140007540:	adc    BYTE PTR [rax+rcx*1],dh
   140007543:	add    BYTE PTR [rax],dl
   140007545:	push   rdx
   140007546:	or     al,0x70
   140007548:	rex.W
   140007549:	rex.RX add BYTE PTR [rax],r8b
   14000754c:	add    DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	(bad)  
   140007551:	xor    eax,DWORD PTR [rax]
   140007553:	add    al,bl
   140007555:	xor    eax,DWORD PTR [rax]
   140007557:	add    BYTE PTR [rax+0x4e],al
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rcx],al
   140007561:	or     BYTE PTR [rax+rax*1],al
   140007564:	or     BYTE PTR [rdx],dh
   140007566:	add    al,0x70
   140007568:	add    edx,DWORD PTR [rax+0x2]
   14000756b:	xor    BYTE PTR [rcx],al
   14000756d:	adc    eax,DWORD PTR [rcx]
   14000756f:	add    BYTE PTR [rbx],dl
   140007571:	rex.X add BYTE PTR [rax],al
   140007574:	add    DWORD PTR [rax],ebx
   140007576:	or     al,BYTE PTR [rax]
   140007578:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   14000757c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140007580:	sbb    BYTE PTR [rdx+rcx*1],dh
   140007583:	add    BYTE PTR [rax],bl
   140007585:	push   rdx
   140007586:	adc    al,0xf0
   140007588:	adc    ah,al
   14000758a:	adc    BYTE PTR [rax+0x11],dh
   14000758d:	adc    eax,DWORD PTR [rdx]
   14000758f:	add    BYTE PTR [rdx],cl
   140007591:	push   rdx
   140007592:	(bad)  
   140007593:	xor    BYTE PTR [rsi],dh
   140007595:	rex.RX add BYTE PTR [rax],r8b
   140007598:	rex imul eax,DWORD PTR [rax],0xffffff00
   14000759f:	inc    DWORD PTR [rdi+0x4e]
   1400075a2:	add    BYTE PTR [rax],al
   1400075a4:	add    BYTE PTR [rax],al
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	sub    BYTE PTR [rdi],0x0
   1400075ab:	add    bh,bh
   1400075ad:	(bad)  
   1400075ae:	(bad)  
   1400075af:	dec    ebp
   1400075b1:	(bad)  
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	add    BYTE PTR [rax],al
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	(bad)  
   1400075b9:	(bad)  
   1400075ba:	add    BYTE PTR [rax],al
   1400075bc:	(bad)  
   1400075bd:	(bad)  
   1400075be:	(bad)  
   1400075bf:	call   FWORD PTR [rcx]
   1400075c1:	lar    eax,WORD PTR [rax]
   1400075c4:	(bad)  
   1400075c5:	push   rdx
   1400075c6:	add    dh,BYTE PTR [rax]
   1400075c8:	rex.RX add BYTE PTR ss:[rax],r8b
   1400075cc:	push   0xffffffffe0000069
   1400075d1:	(bad)  
   1400075d2:	add    BYTE PTR [rax],al
   1400075d4:	(bad)  
   1400075d5:	(bad)  
   1400075d6:	(bad)  
   1400075d7:	call   QWORD PTR [rcx]
   1400075d9:	sbb    BYTE PTR [rax+rax*1],al
   1400075dc:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400075df:	add    BYTE PTR [rdx+rdx*2],cl
   1400075e2:	or     BYTE PTR [rax+0x36],dh
   1400075e5:	rex.RX add BYTE PTR [rax],r8b
   1400075e8:	nop
   1400075e9:	imul   eax,DWORD PTR [rax],0xffffff00
   1400075ef:	call   FWORD PTR [rdx+0x4e]
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	add    BYTE PTR [rax],al
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	enter  0x31,0x0
   1400075fc:	(bad)  
   1400075fd:	(bad)  
   1400075fe:	(bad)  
   1400075ff:	jmp    rbp
   140007601:	xor    DWORD PTR [rax],eax
   140007603:	add    BYTE PTR [rax],al
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rcx],al
   140007609:	(bad)  
   14000760a:	add    al,BYTE PTR [rax]
   14000760c:	(bad)  
   14000760d:	xor    al,BYTE PTR [rdx]
   14000760f:	push   rax
   140007610:	add    DWORD PTR [rcx+rax*1],eax
   140007613:	add    BYTE PTR [rdx+riz*2],al
   140007616:	add    BYTE PTR [rax],al
   140007618:	add    DWORD PTR [rcx],ecx
   14000761a:	add    DWORD PTR [rax],eax
   14000761c:	or     DWORD PTR [rdx+0x18010000],esp
   140007622:	add    DWORD PTR [rax],eax
   140007624:	sbb    dl,al
   140007626:	add    BYTE PTR [rax],al
   140007628:	add    DWORD PTR [rdx],ecx
   14000762a:	add    al,0x0
   14000762c:	or     dh,BYTE PTR [rax+rcx*1]
   14000762f:	add    BYTE PTR [rdx],cl
   140007631:	xor    al,BYTE PTR [rsi]
   140007633:	jo     0x140007635
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rcx],al
   140007639:	add    BYTE PTR [rax],al
   14000763b:	add    BYTE PTR [rcx],cl
   14000763d:	clts   
   14000763f:	add    BYTE PTR [rdi],cl
   140007641:	or     DWORD PTR fs:[rax],eax
   140007644:	sysenter 
   140007646:	or     BYTE PTR [rax],al
   140007648:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000764b:	jo     0x140007695
   14000764d:	rex.RX add BYTE PTR [rax],r8b
   140007650:	add    DWORD PTR [rax],eax
   140007652:	add    BYTE PTR [rax],al
   140007654:	cmp    al,0x37
   140007656:	add    BYTE PTR [rax],al
   140007658:	push   rdx
   140007659:	cmp    BYTE PTR [rax],al
   14000765b:	add    bh,dl
   14000765d:	rex.WRX add BYTE PTR [rax],r8b
   140007660:	push   rdx
   140007661:	cmp    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rcx],cl
   140007665:	add    al,0x1
   140007667:	add    BYTE PTR [rdx+riz*1],al
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	rex.W
   14000766d:	rex.RX add BYTE PTR [rax],r8b
   140007670:	add    DWORD PTR [rax],eax
   140007672:	add    BYTE PTR [rax],al
   140007674:	mov    edi,DWORD PTR [rip+0x3e160000]        # 0x17e16767a
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	cmc    
   14000767d:	rex.WRX add BYTE PTR [rax],r8b
   140007680:	(bad)  
   140007681:	add    BYTE PTR ds:[rax],al
   140007684:	add    DWORD PTR [rdx],eax
   140007686:	add    DWORD PTR [rax],eax
   140007688:	add    dl,BYTE PTR [rax+0x0]
   14000768b:	add    BYTE PTR [rcx],al
   14000768d:	or     eax,0x340d0004
   140007692:	or     al,BYTE PTR [rax]
   140007694:	or     eax,0x1500672
   140007699:	add    al,BYTE PTR [rcx]
   14000769b:	add    BYTE PTR [rdx],al
   14000769d:	xor    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rcx],al
   1400076a1:	or     DWORD PTR [rcx],eax
   1400076a3:	add    BYTE PTR [rcx],cl
   1400076a5:	(bad)  
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	add    DWORD PTR [rax],ecx
   1400076aa:	add    al,0x0
   1400076ac:	or     BYTE PTR [rdx+0x4],dh
   1400076af:	jo     0x1400076b4
   1400076b1:	(bad)  
   1400076b2:	add    dh,BYTE PTR [rax]
   1400076b4:	add    DWORD PTR [rip+0x34150005],edx        # 0x1741576bf
   1400076ba:	mov    edx,0xb8011500
   1400076bf:	add    BYTE PTR [rsi],al
   1400076c1:	push   rax
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	add    DWORD PTR [rdi],ecx
   1400076c6:	(bad)  
   1400076c7:	add    BYTE PTR [rdi],cl
   1400076c9:	fs (bad) 
   1400076cb:	add    BYTE PTR [rdi],cl
   1400076cd:	xor    al,0x6
   1400076cf:	add    BYTE PTR [rdi],cl
   1400076d1:	xor    cl,BYTE PTR [rbx]
   1400076d3:	jo     0x1400076d6
   1400076d5:	adc    cl,BYTE PTR [rax]
   1400076d7:	add    BYTE PTR [rdx],dl
   1400076d9:	push   rsp
   1400076da:	or     BYTE PTR [rax],al
   1400076dc:	adc    dh,BYTE PTR [rdi+rax*1]
   1400076df:	add    BYTE PTR [rdx],dl
   1400076e1:	adc    cl,BYTE PTR [rsi]
   1400076e3:	loopne 0x1400076f1
   1400076e5:	jo     0x1400076f2
   1400076e7:	(bad)  
   1400076e8:	add    DWORD PTR [rax],eax
   1400076ea:	add    BYTE PTR [rax],al
   1400076ec:	add    DWORD PTR [rdi],ecx
   1400076ee:	(bad)  
   1400076ef:	add    BYTE PTR [rdi],cl
   1400076f1:	je     0x1400076f6
   1400076f3:	add    BYTE PTR [rdx],cl
   1400076f5:	add    al,BYTE PTR fs:[rax]
   1400076f8:	add    eax,0x1000134
   1400076fd:	or     eax,0x340d0004
   140007702:	adc    al,BYTE PTR [rax]
   140007704:	or     eax,0x17006f2
   140007709:	adc    BYTE PTR [rsi],al
   14000770b:	add    BYTE PTR [rax],dl
   14000770d:	fs (bad) 
   14000770f:	add    BYTE PTR [rax],dl
   140007711:	xor    al,0x6
   140007713:	add    BYTE PTR [rax],dl
   140007715:	xor    cl,BYTE PTR [rax+rsi*2]
   140007718:	add    DWORD PTR [rcx],ebx
   14000771a:	or     al,BYTE PTR [rax]
   14000771c:	sbb    DWORD PTR [rcx],eax
   14000771e:	adc    DWORD PTR [rax],eax
   140007720:	or     eax,0x9e00bf0
   140007725:	rol    BYTE PTR [rdi],1
   140007727:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607b9e
   14000772e:	add    dl,BYTE PTR [rax+0x1]
   140007731:	sbb    BYTE PTR [rcx],al
   140007733:	add    BYTE PTR [rax],bl
   140007735:	ret    0x0
   140007738:	add    DWORD PTR [rax],ebx
   14000773a:	add    DWORD PTR [rax],eax
   14000773c:	sbb    dl,al
	...
   14000774a:	add    BYTE PTR [rax],al
   14000774c:	(bad)  
   14000774d:	ja     0x14000774f
	...
   14000775f:	add    BYTE PTR [rcx],al
   140007761:	add    BYTE PTR [rax],al
   140007763:	add    BYTE PTR [rax+0x77],dh
	...
   140007772:	add    BYTE PTR [rax],al
   140007774:	or     BYTE PTR [rcx+0x0],dl
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	(bad)  
   14000777d:	(bad)  
   14000777e:	(bad)  
   14000777f:	inc    DWORD PTR [rax]
   140007781:	add    BYTE PTR [rax],al
   140007783:	add    BYTE PTR [rax+rax*1],al
	...
   140007796:	add    BYTE PTR [rax],al
   140007798:	add    DWORD PTR [rax],eax
   14000779a:	add    BYTE PTR [rax],al
   14000779c:	and    BYTE PTR [rcx+0x0],ch
   14000779f:	add    BYTE PTR [rax-0x62],bl
   1400077a2:	add    BYTE PTR [rax],al
   1400077a4:	add    al,dl
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	clc    
   1400077a9:	ja     0x1400077ab
   1400077ab:	add    BYTE PTR [rax],dl
   1400077ad:	jp     0x1400077af
	...
   1400077b7:	add    BYTE PTR [rcx],al
   1400077b9:	add    BYTE PTR [rax],al
   1400077bb:	add    BYTE PTR [rax],dh
   1400077bd:	imul   eax,DWORD PTR [rax],0x9e6000
   1400077c3:	add    BYTE PTR [rax],dl
   1400077c5:	rol    BYTE PTR [rax],1
   1400077c7:	add    BYTE PTR [rax],cl
   1400077c9:	js     0x1400077cb
   1400077cb:	add    BYTE PTR [rax],ah
   1400077cd:	jp     0x1400077cf
	...
   1400077f7:	add    BYTE PTR [rax+0x78],ch
	...
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    dl,al
   140007809:	jns    0x14000780b
   14000780b:	add    BYTE PTR [rax],al
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rsi+0x79],ah
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    BYTE PTR [rax+0x79],bl
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rcx+rdi*2+0x0],cl
   140007826:	add    BYTE PTR [rax],al
   140007828:	cmp    BYTE PTR [rcx+0x0],0x0
   14000782c:	add    BYTE PTR [rax],al
   14000782e:	add    BYTE PTR [rax],al
   140007830:	jo     0x1400078ab
   140007832:	add    BYTE PTR [rax],al
   140007834:	add    BYTE PTR [rax],al
   140007836:	add    BYTE PTR [rax],al
   140007838:	fs jns 0x14000783b
   14000783b:	add    BYTE PTR [rax],al
   14000783d:	add    BYTE PTR [rax],al
   14000783f:	add    BYTE PTR [rdx+0x79],dl
   140007842:	add    BYTE PTR [rax],al
   140007844:	add    BYTE PTR [rax],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	ds jns 0x14000784b
   14000784b:	add    BYTE PTR [rax],al
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rcx+rdi*2],ch
   140007852:	add    BYTE PTR [rax],al
   140007854:	add    BYTE PTR [rax],al
   140007856:	add    BYTE PTR [rax],al
   140007858:	sbb    bh,BYTE PTR [rcx+0x0]
   14000785b:	add    BYTE PTR [rax],al
   14000785d:	add    BYTE PTR [rax],al
   14000785f:	add    BYTE PTR [rax],cl
   140007861:	jns    0x140007863
   140007863:	add    BYTE PTR [rax],al
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    ah,dh
   140007869:	js     0x14000786b
   14000786b:	add    BYTE PTR [rax],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    al,ah
   140007871:	js     0x140007873
   140007873:	add    BYTE PTR [rax],al
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    ah,ch
   140007879:	jns    0x14000787b
   14000787b:	add    BYTE PTR [rax],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    ah,bh
   140007881:	jns    0x140007883
   140007883:	add    BYTE PTR [rax],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    dl,dl
   140007889:	js     0x14000788b
   14000788b:	add    BYTE PTR [rax],al
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rax+0x78],bh
   140007895:	add    BYTE PTR [rax],al
   140007897:	add    dh,dl
   140007899:	jns    0x14000789b
	...
   1400078a7:	add    BYTE PTR [rax],al
   1400078a9:	add    BYTE PTR [rbx+0x74],dl
   1400078ac:	jb     0x140007902
   1400078ae:	outs   dx,DWORD PTR ds:[rsi]
   1400078af:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400078b1:	je     0x1400078e9
   1400078b3:	xor    al,0x45
   1400078b5:	js     0x14000790e
   1400078b7:	add    BYTE PTR [rax],al
   1400078b9:	add    BYTE PTR [rdx+0x65],dl
   1400078bc:	imul   esi,DWORD PTR [ebx+0x74],0x69577265
   1400078c4:	outs   dx,BYTE PTR ds:[rsi]
   1400078c5:	outs   dx,DWORD PTR fs:[rsi]
   1400078c7:	ja     0x140007916
   1400078c9:	gs jae 0x14000793f
   1400078cc:	(bad)  
   1400078cd:	addr32 gs push rdi
   1400078d0:	add    BYTE PTR [rax],al
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	rex.RXB
   1400078d5:	gs je  0x140007925
   1400078d8:	gs jae 0x14000794e
   1400078db:	(bad)  
   1400078dc:	addr32 gs push rdi
   1400078df:	add    BYTE PTR [rax],al
   1400078e1:	add    BYTE PTR [rdx+rsi*2+0x61],dl
   1400078e5:	outs   dx,BYTE PTR ds:[rsi]
   1400078e6:	jae    0x140007954
   1400078e8:	(bad)  
   1400078e9:	je     0x140007950
   1400078eb:	rex.WRB
   1400078ec:	gs jae 0x140007962
   1400078ef:	(bad)  
   1400078f0:	add    BYTE PTR gs:[eax],al
   1400078f4:	add    BYTE PTR [rax],al
   1400078f6:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400078fe:	rex.WRB
   1400078ff:	gs jae 0x140007975
   140007902:	(bad)  
   140007903:	addr32 gs push rdi
   140007906:	add    BYTE PTR [rax],al
   140007908:	add    BYTE PTR [rax],al
   14000790a:	rex.R
   14000790b:	gs push di
   14000790e:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140007915:	outs   dx,DWORD PTR ds:[rsi]
   140007916:	movsxd edx,DWORD PTR [rdi+0x0]
   140007919:	add    BYTE PTR [rax],al
   14000791b:	add    BYTE PTR [rax+0x6f],dl
   14000791e:	jae    0x140007994
   140007920:	push   rcx
   140007921:	jne    0x14000798c
   140007923:	je     0x140007972
   140007925:	gs jae 0x14000799b
   140007928:	(bad)  
   140007929:	add    BYTE PTR gs:[eax],al
   14000792d:	add    BYTE PTR [rdx+0x65],dl
   140007930:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140007938:	(bad)  
   140007939:	jae    0x1400079ae
   14000793b:	push   rdi
   14000793c:	add    BYTE PTR [rax],al
   14000793e:	add    BYTE PTR [rax],al
   140007940:	push   rbp
   140007941:	outs   dx,BYTE PTR ds:[rsi]
   140007942:	jb     0x1400079a9
   140007944:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000794c:	(bad)  
   14000794d:	jae    0x1400079c2
   14000794f:	push   rdi
   140007950:	add    BYTE PTR [rax],al
   140007952:	add    BYTE PTR [rax],al
   140007954:	rex.XB jb 0x1400079bc
   140007957:	(bad)  
   140007958:	je     0x1400079bf
   14000795a:	push   rdi
   14000795b:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140007962:	push   rdi
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rcx+0x73],cl
   140007968:	push   rdi
   140007969:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140007970:	add    BYTE PTR [rax],al
   140007972:	rex.R
   140007973:	gs jae 0x1400079ea
   140007976:	jb     0x1400079e7
   140007978:	jns    0x1400079d1
   14000797a:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140007981:	add    BYTE PTR [rbx+0x65],dl
   140007984:	je     0x1400079da
   140007986:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   14000798d:	add    BYTE PTR [rbx+0x69],cl
   140007990:	ins    BYTE PTR es:[rdi],dx
   140007991:	ins    BYTE PTR es:[rdi],dx
   140007992:	push   rsp
   140007993:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   14000799a:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   1400079a2:	outs   dx,DWORD PTR ds:[rsi]
   1400079a3:	ja     0x1400079fc
   1400079a5:	add    BYTE PTR [rax],al
   1400079a7:	add    BYTE PTR [rdi+0x65],al
   1400079aa:	je     0x140007a03
   1400079ac:	imul   ebp,DWORD PTR [rsi+0x64],0x6854776f
   1400079b3:	jb     0x140007a1a
   1400079b5:	(bad)  
   1400079b6:	fs push rax
   1400079b8:	jb     0x140007a29
   1400079ba:	movsxd esp,DWORD PTR [rbp+0x73]
   1400079bd:	jae    0x140007a08
   1400079bf:	add    BYTE PTR fs:[rax],al
   1400079c2:	add    BYTE PTR [rax],al
   1400079c4:	push   rbx
   1400079c5:	gs je  0x140007a1f
   1400079c8:	imul   ebp,DWORD PTR [rsi+0x64],0x4873776f
   1400079cf:	outs   dx,DWORD PTR ds:[rsi]
   1400079d0:	outs   dx,DWORD PTR ds:[rsi]
   1400079d1:	imul   eax,DWORD PTR [rbp+0x78],0x57
   1400079d5:	add    BYTE PTR [rax],al
   1400079d7:	add    BYTE PTR [rbp+0x6e],dl
   1400079da:	push   0x576b6f6f
   1400079df:	imul   ebp,DWORD PTR [rsi+0x64],0x4873776f
   1400079e6:	outs   dx,DWORD PTR ds:[rsi]
   1400079e7:	outs   dx,DWORD PTR ds:[rsi]
   1400079e8:	imul   eax,DWORD PTR [rbp+0x78],0x0
   1400079ec:	add    BYTE PTR [rax],al
   1400079ee:	push   rax
   1400079ef:	outs   dx,DWORD PTR ds:[rsi]
   1400079f0:	jae    0x140007a66
   1400079f2:	rex.WRB
   1400079f3:	gs jae 0x140007a69
   1400079f6:	(bad)  
   1400079f7:	addr32 gs push rdi
   1400079fa:	add    BYTE PTR [rax],al
   1400079fc:	add    BYTE PTR [rax],al
   1400079fe:	push   rbx
   1400079ff:	gs je  0x140007a59
   140007a02:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140007a09:	outs   dx,BYTE PTR ds:[rsi]
   140007a0a:	addr32 push rax
   140007a0c:	je     0x140007a80
   140007a0e:	push   rdi
	...
   140007abf:	add    BYTE PTR [rax+0x7b],cl
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rax],al
   140007ac9:	add    BYTE PTR [rax],al
   140007acb:	add    BYTE PTR [rax+0x7e],bh
   140007ad1:	(bad)  
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	cwde   
   140007ad5:	jnp    0x140007ad7
	...
   140007adf:	add    dl,dl
   140007ae1:	add    BYTE PTR [rax],0x0
   140007ae4:	adc    BYTE PTR [rax+0x0],ah
   140007ae7:	add    BYTE PTR [rax+0x7d],cl
	...
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	push   0xffffffffc0000081
   140007af9:	(bad)  
   140007afa:	add    BYTE PTR [rax],al
   140007afc:	enter  0x7d,0x0
	...
   140007b08:	(bad)  
   140007b09:	add    DWORD PTR [rax],0x0
   140007b0c:	rex (bad) 
   140007b0e:	add    BYTE PTR [rax],al
   140007b10:	mov    BYTE PTR [rbp+0x0],bh
	...
   140007b1b:	add    BYTE PTR [rbx+rax*4+0x62000000],bh
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	jo     0x140007ba4
	...
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	fadd   QWORD PTR [rbx+0x62e80000]
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	mov    eax,0x7d
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rax],al
   140007b41:	add    BYTE PTR [rax],al
   140007b43:	add    ah,bh
   140007b45:	add    DWORD PTR [rax],0x0
   140007b48:	xor    BYTE PTR [rdx+0x0],ah
   140007b4b:	add    BYTE PTR [rax+0x7d],ch
   140007b51:	add    BYTE PTR [rax],al
   140007b53:	add    BYTE PTR [rax],al
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    BYTE PTR [rsp+rax*4],bl
   140007b5a:	add    BYTE PTR [rax],al
   140007b5c:	and    BYTE PTR [rdx+0x0],ah
   140007b5f:	add    BYTE PTR [rax+0x7e],bl
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    BYTE PTR [rax],al
   140007b69:	add    BYTE PTR [rax],al
   140007b6b:	add    BYTE PTR [rdx-0x7a],dl
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	adc    BYTE PTR [rbx+0x0],ah
	...
   140007b87:	add    BYTE PTR [rax+0x7e],ch
	...
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    ah,ah
   140007b99:	jg     0x140007b9b
   140007b9b:	add    BYTE PTR [rax],al
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    dl,bh
   140007ba1:	jg     0x140007ba3
   140007ba3:	add    BYTE PTR [rax],al
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rdx],cl
   140007ba9:	add    BYTE PTR [rax],0x0
   140007bac:	add    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	and    BYTE PTR [rax+0x0],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	add    BYTE PTR ss:[rax],0x0
   140007bbc:	add    BYTE PTR [rax],al
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	sar    BYTE PTR [rdi+0x0],cl
   140007bc3:	add    BYTE PTR [rax],al
   140007bc5:	add    BYTE PTR [rax],al
   140007bc7:	add    BYTE PTR [rsi-0x80],dl
   140007bca:	add    BYTE PTR [rax],al
   140007bcc:	add    BYTE PTR [rax],al
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	push   0x80
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rax+rax*4+0x0],bh
   140007bdb:	add    BYTE PTR [rax],al
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    BYTE PTR [rax+0x80],bl
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    BYTE PTR [rax+0x80],ch
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    BYTE PTR [rax+rax*4+0x0],bh
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	rex.RX add BYTE PTR [rax],0x0
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	(bad)  
   140007c01:	jle    0x140007c03
   140007c03:	add    BYTE PTR [rax],al
   140007c05:	add    BYTE PTR [rax],al
   140007c07:	add    al,bl
   140007c09:	jle    0x140007c0b
   140007c0b:	add    BYTE PTR [rax],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rax],bh
   140007c11:	xchg   BYTE PTR [rax],al
   140007c13:	add    BYTE PTR [rax],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    BYTE PTR [rdx],ch
   140007c19:	xchg   BYTE PTR [rax],al
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rdx],bl
   140007c21:	xchg   BYTE PTR [rax],al
   140007c23:	add    BYTE PTR [rax],al
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rax],cl
   140007c29:	xchg   BYTE PTR [rax],al
   140007c2b:	add    BYTE PTR [rax],al
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    al,bh
   140007c31:	test   DWORD PTR [rax],eax
   140007c33:	add    BYTE PTR [rax],al
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    dl,ah
   140007c39:	test   DWORD PTR [rax],eax
   140007c3b:	add    BYTE PTR [rax],al
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    dh,al
   140007c41:	test   DWORD PTR [rax],eax
   140007c43:	add    BYTE PTR [rax],al
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rdx+0x85],dh
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rbp+rax*4+0x0],dl
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	js     0x140007bdf
   140007c5a:	add    BYTE PTR [rax],al
   140007c5c:	add    BYTE PTR [rax],al
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	test   DWORD PTR fs:[rax],eax
   140007c63:	add    BYTE PTR [rax],al
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rdx-0x7b],cl
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	test   DWORD PTR ss:[rax],eax
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rsi],ah
   140007c79:	test   DWORD PTR [rax],eax
   140007c7b:	add    BYTE PTR [rax],al
   140007c7d:	add    BYTE PTR [rax],al
   140007c7f:	add    BYTE PTR [rdi+rdi*2+0x0],ch
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	movabs al,ds:0xe0000000000007f
   140007c91:	test   DWORD PTR [rax],eax
   140007c93:	add    BYTE PTR [rax],al
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    BYTE PTR [rax+0x7f],cl
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    BYTE PTR [rax],al
   140007ca1:	test   DWORD PTR [rax],eax
   140007ca3:	add    BYTE PTR [rax],al
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    dl,dh
   140007ca9:	test   BYTE PTR [rax],al
   140007cab:	add    BYTE PTR [rax],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    al,bl
   140007cb1:	test   BYTE PTR [rax],al
   140007cb3:	add    BYTE PTR [rax],al
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    al,cl
   140007cb9:	test   BYTE PTR [rax],al
   140007cbb:	add    BYTE PTR [rax],al
   140007cbd:	add    BYTE PTR [rax],al
   140007cbf:	add    BYTE PTR [rsi+0x84],ch
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rax+0x84],bl
   140007ccd:	add    BYTE PTR [rax],al
   140007ccf:	add    BYTE PTR [rdx+0x84],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rsp+rax*4+0x0],ch
   140007cdb:	add    BYTE PTR [rax],al
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rdx-0x7c],dl
   140007ce2:	add    BYTE PTR [rax],al
   140007ce4:	add    BYTE PTR [rax],al
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	push   0x7f
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	add    BYTE PTR [rax],al
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	sar    BYTE PTR [rdi+0x0],0x0
   140007cf4:	add    BYTE PTR [rax],al
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	test   BYTE PTR ds:[rax],al
   140007cfb:	add    BYTE PTR [rax],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    al,ch
   140007d01:	jle    0x140007d03
   140007d03:	add    BYTE PTR [rax],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    dh,dh
   140007d09:	jle    0x140007d0b
   140007d0b:	add    BYTE PTR [rax],al
   140007d0d:	add    BYTE PTR [rax],al
   140007d0f:	add    BYTE PTR [rdx],al
   140007d11:	jg     0x140007d13
   140007d13:	add    BYTE PTR [rax],al
   140007d15:	add    BYTE PTR [rax],al
   140007d17:	add    BYTE PTR [rax],dl
   140007d19:	jg     0x140007d1b
   140007d1b:	add    BYTE PTR [rax],al
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rdx+0x7f],dl
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    BYTE PTR [rax],al
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	sbb    al,0x7f
   140007d2a:	add    BYTE PTR [rax],al
   140007d2c:	add    BYTE PTR [rax],al
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	sub    BYTE PTR [rdi+0x0],bh
   140007d33:	add    BYTE PTR [rax],al
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rdx],bh
   140007d39:	jg     0x140007d3b
	...
   140007d47:	add    BYTE PTR [rdx],ch
   140007d49:	add    DWORD PTR [rax],0x0
   140007d4f:	add    BYTE PTR [rax],al
   140007d51:	add    DWORD PTR [rax],0x0
   140007d57:	add    BYTE PTR [rsi],dl
   140007d59:	add    DWORD PTR [rax],0x0
   140007d5f:	add    al,ah
   140007d61:	add    BYTE PTR [rax],0x0
   140007d64:	add    BYTE PTR [rax],al
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	(bad)  
   140007d69:	add    BYTE PTR [rax],0x0
   140007d6c:	add    BYTE PTR [rax],al
   140007d6e:	add    BYTE PTR [rax],al
   140007d70:	and    BYTE PTR [rcx+0x0],al
   140007d76:	add    BYTE PTR [rax],al
   140007d78:	rex.X add DWORD PTR [rax],0x0
	...
   140007d87:	add    BYTE PTR [rax],ch
   140007d89:	add    DWORD PTR [rax],0x0
   140007d8c:	add    BYTE PTR [rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	test   al,0x81
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	add    BYTE PTR [rax],al
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	movabs al,ds:0x81
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    BYTE PTR [rax],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rdx],dl
   140007da9:	add    DWORD PTR [rax],0x0
	...
   140007db8:	adc    BYTE PTR [rdx+0x0],al
	...
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	out    dx,al
   140007dc9:	add    DWORD PTR [rax],0x0
   140007dcf:	add    BYTE PTR [rax],al
   140007dd1:	(bad)  
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	add    BYTE PTR [rax],al
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	and    al,0x82
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    BYTE PTR [rax],al
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	cmp    al,0x82
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	pop    rsp
   140007de9:	(bad)  
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	add    BYTE PTR [rax],al
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	xchg   esi,eax
   140007df1:	add    DWORD PTR [rax],0x0
   140007df7:	add    BYTE PTR [rdx-0x7f],bh
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	add    BYTE PTR [rax],al
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	jl     0x140007d84
   140007e02:	add    BYTE PTR [rax],al
   140007e04:	add    BYTE PTR [rax],al
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	mov    BYTE PTR [rdx+0x0],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	xchg   esi,eax
   140007e11:	(bad)  
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	sahf   
   140007e19:	(bad)  
   140007e1a:	add    BYTE PTR [rax],al
   140007e1c:	add    BYTE PTR [rax],al
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	mov    ah,0x82
   140007e22:	add    BYTE PTR [rax],al
   140007e24:	add    BYTE PTR [rax],al
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	rol    BYTE PTR [rdx+0x0],1
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	fiadd  DWORD PTR [rdx+0x0]
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	in     al,0x82
   140007e3a:	add    BYTE PTR [rax],al
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	add    QWORD PTR [rax],0x0
   140007e44:	add    BYTE PTR [rax],al
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	mov    WORD PTR [rbx+0x0],es
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	jo     0x140007dd5
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	add    BYTE PTR [rax],al
   140007e56:	add    BYTE PTR [rax],al
   140007e58:	push   rsp
   140007e59:	add    DWORD PTR [rax],0x0
   140007e5c:	add    BYTE PTR [rax],al
   140007e5e:	add    BYTE PTR [rax],al
   140007e60:	ret    0x82
	...
   140007e6f:	add    BYTE PTR [rcx+rax*4+0x0],dh
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	cmp    BYTE PTR [rbx+0x0],al
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007e81:	(bad)  
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	add    BYTE PTR [rax],al
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	rol    BYTE PTR [rcx+0x0],cl
	...
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	rex.WX xchg BYTE PTR [rax],al
	...
   140007ea7:	add    BYTE PTR [rbx+rax*1],ah
   140007eaa:	push   rsp
   140007eab:	jb     0x140007f0e
   140007ead:	movsxd esp,DWORD PTR [rbp+0x4d]
   140007eb0:	gs jae 0x140007f26
   140007eb3:	(bad)  
   140007eb4:	add    BYTE PTR gs:[eax],al
   140007eb8:	rex.B
   140007eb9:	rex.R push rsi
   140007ebb:	push   r8
   140007ebd:	xor    rsi,QWORD PTR [r10]
   140007ec0:	cs fs ins BYTE PTR es:[rdi],dx
   140007ec3:	ins    BYTE PTR es:[rdi],dx
   140007ec4:	add    BYTE PTR [rax],al
   140007ec6:	pop    rcx
   140007ec7:	add    al,0x52
   140007ec9:	(bad)  
   140007eca:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140007ed1:	jo     0x140007f47
   140007ed3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2600000
   140007eda:	rex.RXB
   140007edb:	gs je  0x140007f2a
   140007ede:	(bad)  
   140007edf:	jae    0x140007f55
   140007ee1:	rex.RB jb 0x140007f56
   140007ee4:	outs   dx,DWORD PTR ds:[rsi]
   140007ee5:	jb     0x140007ee7
   140007ee7:	add    BYTE PTR [rcx+0x3],cl
   140007eea:	rex.W
   140007eeb:	gs (bad) 
   140007eed:	jo     0x140007f33
   140007eef:	gs jae 0x140007f66
   140007ef2:	jb     0x140007f63
   140007ef4:	jns    0x140007ef6
   140007ef6:	rex.RX add r9d,DWORD PTR [rax+0x65]
   140007efa:	(bad)  
   140007efb:	jo     0x140007f3e
   140007efd:	ins    BYTE PTR es:[rdi],dx
   140007efe:	ins    BYTE PTR es:[rdi],dx
   140007eff:	outs   dx,DWORD PTR ds:[rsi]
   140007f00:	movsxd eax,DWORD PTR [rax]
   140007f02:	add    r9,QWORD PTR [r8+0x65]
   140007f06:	(bad)  
   140007f07:	jo     0x140007f5b
   140007f09:	gs rex.B ins BYTE PTR es:[rdi],dx
   140007f0c:	ins    BYTE PTR es:[rdi],dx
   140007f0d:	outs   dx,DWORD PTR ds:[rsi]
   140007f0e:	movsxd eax,DWORD PTR [rax]
   140007f10:	rex.WX add rcx,QWORD PTR [rax+0x65]
   140007f14:	(bad)  
   140007f15:	jo     0x140007f5d
   140007f17:	jb     0x140007f7e
   140007f19:	add    BYTE PTR gs:[rax],al
   140007f1c:	rex.WRXB add r9,QWORD PTR [r8+0x65]
   140007f20:	(bad)  
   140007f21:	jo     0x140007f76
   140007f23:	imul   edi,DWORD PTR [rdx+0x65],0x2b40000
   140007f2a:	rex.RXB
   140007f2b:	gs je  0x140007f7e
   140007f2e:	jb     0x140007f9f
   140007f30:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f33:	jae    0x140007f7d
   140007f35:	gs (bad) 
   140007f37:	jo     0x140007f39
   140007f39:	add    BYTE PTR [rdx],dh
   140007f3b:	add    DWORD PTR [rbp+0x6e],eax
   140007f3e:	je     0x140007fa5
   140007f40:	jb     0x140007f85
   140007f42:	jb     0x140007fad
   140007f44:	je     0x140007faf
   140007f46:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007f49:	push   rbx
   140007f4a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007f4f:	outs   dx,BYTE PTR ds:[rsi]
   140007f50:	add    BYTE PTR [rax],al
   140007f52:	mov    ch,0x3
   140007f54:	rex.WR
   140007f55:	gs (bad) 
   140007f57:	jbe    0x140007fbe
   140007f59:	rex.XB jb 0x140007fc5
   140007f5c:	je     0x140007fc7
   140007f5e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007f61:	push   rbx
   140007f62:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007f67:	outs   dx,BYTE PTR ds:[rsi]
   140007f68:	add    BYTE PTR [rax],al
   140007f6a:	(bad)  
   140007f6b:	add    ecx,DWORD PTR [rcx+0x6e]
   140007f6e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007f76:	rex.XB jb 0x140007fe2
   140007f79:	je     0x140007fe4
   140007f7b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007f7e:	push   rbx
   140007f7f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007f84:	outs   dx,BYTE PTR ds:[rsi]
   140007f85:	rex.RB js 0x140007f88
   140007f88:	(bad)  
   140007f89:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140007f8d:	gs je  0x140007ff5
   140007f90:	rex.XB jb 0x140007ffc
   140007f93:	je     0x140007ffe
   140007f95:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007f98:	push   rbx
   140007f99:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007f9e:	outs   dx,BYTE PTR ds:[rsi]
   140007f9f:	add    BYTE PTR [rip+0x74655305],dl        # 0x1b465d2aa
   140007fa5:	rex.RB jbe 0x14000800d
   140007fa8:	outs   dx,BYTE PTR ds:[rsi]
   140007fa9:	je     0x140007fab
   140007fab:	add    BYTE PTR [rdi+0x2],dh
   140007fae:	rex.RXB
   140007faf:	gs je  0x140007fff
   140007fb2:	outs   dx,DWORD PTR ds:[rsi]
   140007fb3:	fs jne 0x140008022
   140007fb6:	gs rex.W (bad) 
   140007fb9:	outs   dx,BYTE PTR ds:[rsi]
   140007fba:	fs ins BYTE PTR es:[rdi],dx
   140007fbc:	gs push rdi
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	scas   al,BYTE PTR es:[rdi]
   140007fc1:	add    al,BYTE PTR [rdi+0x65]
   140007fc4:	je     0x140008016
   140007fc6:	jb     0x140008037
   140007fc8:	movsxd eax,DWORD PTR [rcx+0x64]
   140007fcb:	fs jb  0x140008033
   140007fce:	jae    0x140008043
   140007fd0:	add    BYTE PTR [rax],al
   140007fd2:	mov    ebx,0x616f4c03
   140007fd7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007fe0:	js     0x140008039
   140007fe2:	add    BYTE PTR [rax],al
   140007fe4:	(bad)  
   140007fe5:	add    al,0x4f
   140007fe7:	jne    0x14000805d
   140007fe9:	jo     0x140008060
   140007feb:	je     0x140008031
   140007fed:	gs (bad) 
   140007fef:	jne    0x140008058
   140007ff1:	push   rbx
   140007ff2:	je     0x140008066
   140007ff4:	imul   ebp,DWORD PTR [rsi+0x67],0x30000041
   140007ffb:	add    eax,0x4c746553
   140008000:	(bad)  
   140008001:	jae    0x140008077
   140008003:	rex.RB jb 0x140008078
   140008006:	outs   dx,DWORD PTR ds:[rsi]
   140008007:	jb     0x140008009
   140008009:	add    BYTE PTR [rbx+0x2],dh
   14000800c:	rex.RXB
   14000800d:	gs je  0x14000805d
   140008010:	outs   dx,DWORD PTR ds:[rsi]
   140008011:	fs jne 0x140008080
   140008014:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000801e:	add    BYTE PTR [rax],al
   140008020:	jbe    0x140008024
   140008022:	rex.RXB
   140008023:	gs je  0x140008073
   140008026:	outs   dx,DWORD PTR ds:[rsi]
   140008027:	fs jne 0x140008096
   14000802a:	gs rex.W (bad) 
   14000802d:	outs   dx,BYTE PTR ds:[rsi]
   14000802e:	fs ins BYTE PTR es:[rdi],dx
   140008030:	gs rex.RB js 0x14000808b
   140008034:	add    BYTE PTR [rax],al
   140008036:	mov    esp,0x616f4c03
   14000803b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140008044:	add    BYTE PTR [rax],al
   140008046:	scas   al,BYTE PTR es:[rdi]
   140008047:	add    BYTE PTR [rbx+0x72],al
   14000804a:	gs (bad) 
   14000804c:	je     0x1400080b3
   14000804e:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140008053:	js     0x1400080ac
   140008055:	add    BYTE PTR [rdx],al
   140008057:	add    BYTE PTR [rcx+0x63],al
   14000805a:	je     0x1400080c5
   14000805c:	jbe    0x1400080bf
   14000805e:	je     0x1400080c5
   140008060:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140008065:	js     0x140008067
   140008067:	add    BYTE PTR [rax],al
   140008069:	add    DWORD PTR [rbp+riz*2+0x61],eax
   14000806d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008071:	(bad)  
   140008072:	je     0x1400080d9
   140008074:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   140008079:	js     0x14000807b
   14000807b:	add    BYTE PTR [rbx+0x1],dh
   14000807e:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x43746341
   140008086:	je     0x140008100
   140008088:	push   rbx
   140008089:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000808e:	outs   dx,BYTE PTR ds:[rsi]
   14000808f:	push   rbx
   140008090:	je     0x140008104
   140008092:	imul   ebp,DWORD PTR [rsi+0x67],0x37000057
   140008099:	add    al,0x51
   14000809b:	jne    0x140008102
   14000809d:	jb     0x140008118
   14000809f:	movsxd esi,DWORD PTR [r11+rax*2+0x74]
   1400080a4:	js     0x1400080fd
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	jns    0x1400080ad
   1400080aa:	rex.WB jae 0x1400080f1
   1400080ad:	gs (bad) 
   1400080af:	jne    0x140008118
   1400080b1:	addr32 gs jb 0x140008105
   1400080b5:	jb     0x14000811c
   1400080b7:	jae    0x14000811e
   1400080b9:	outs   dx,BYTE PTR ds:[rsi]
   1400080ba:	je     0x1400080bc
   1400080bc:	(bad)  
   1400080be:	rex.WRXB jne 0x140008135
   1400080c1:	jo     0x140008138
   1400080c3:	je     0x140008109
   1400080c5:	gs (bad) 
   1400080c7:	jne    0x140008130
   1400080c9:	push   rbx
   1400080ca:	je     0x14000813e
   1400080cc:	imul   ebp,DWORD PTR [rsi+0x67],0x4b000057
   1400080d3:	rex.RB push r10
   1400080d5:	rex.WRX
   1400080d6:	rex.RB
   1400080d7:	xor    r14,QWORD PTR [rdx]
   1400080da:	cs fs ins BYTE PTR es:[rdi],dx
   1400080dd:	ins    BYTE PTR es:[rdi],dx
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	cmp    eax,0x6d656d00
   1400080e5:	ins    DWORD PTR es:[rdi],dx
   1400080e6:	outs   dx,DWORD PTR ds:[rsi]
   1400080e7:	jbe    0x14000814e
   1400080e9:	add    BYTE PTR [rcx],al
   1400080eb:	add    BYTE PTR [rdi+0x43],bl
   1400080ee:	js     0x140008168
   1400080f0:	push   rsp
   1400080f1:	push   0x45776f72
   1400080f6:	js     0x14000815b
   1400080f8:	gs jo  0x14000816f
   1400080fb:	imul   ebp,DWORD PTR [rdi+0x6e],0xe0000
   140008102:	pop    rdi
   140008103:	pop    rdi
   140008104:	rex.XB js 0x14000817f
   140008107:	rex.RX jb 0x14000816b
   14000810a:	ins    DWORD PTR es:[rdi],dx
   14000810b:	gs rex.W (bad) 
   14000810e:	outs   dx,BYTE PTR ds:[rsi]
   14000810f:	fs ins BYTE PTR es:[rdi],dx
   140008111:	gs jb  0x140008147
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR ds:[rbp+0x65],ch
   14000811a:	ins    DWORD PTR es:[rdi],dx
   14000811b:	jae    0x140008182
   14000811d:	je     0x14000811f
   14000811f:	add    BYTE PTR [rax+rax*1],bh
   140008122:	ins    DWORD PTR es:[rdi],dx
   140008123:	gs ins DWORD PTR es:[rdi],dx
   140008125:	movsxd esi,DWORD PTR [rax+0x79]
   140008128:	add    BYTE PTR [rax],al
   14000812a:	or     BYTE PTR [rax],al
   14000812c:	pop    rdi
   14000812d:	pop    rdi
   14000812e:	rex.XB pop r15
   140008130:	jae    0x1400081a2
   140008132:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008136:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000813d:	ins    BYTE PTR es:[rdi],dx
   14000813e:	gs jb  0x140008141
   140008141:	add    BYTE PTR [rax],dh
   140008143:	add    BYTE PTR [rdi+0x5f],bl
   140008146:	jbe    0x1400081ab
   140008148:	jb     0x1400081be
   14000814a:	pop    rdi
   14000814b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000814d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008155:	rex.XB jb 0x1400081c1
   140008158:	je     0x1400081c3
   14000815a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000815d:	push   rbx
   14000815e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008163:	outs   dx,BYTE PTR ds:[rsi]
   140008164:	rex.RB js 0x140008167
   140008167:	add    BYTE PTR [rsi+0x43],dl
   14000816a:	push   rdx
   14000816b:	push   rbp
   14000816c:	rex.WRX push rsp
   14000816e:	rex.WB
   14000816f:	rex.WRB
   140008170:	xor    DWORD PTR [r8+rsi*1],r14d
   140008174:	cs fs ins BYTE PTR es:[rdi],dx
   140008177:	ins    BYTE PTR es:[rdi],dx
   140008178:	add    BYTE PTR [rax],al
   14000817a:	cmp    BYTE PTR [rax],al
   14000817c:	pop    rdi
   14000817d:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140008184:	pop    rdi
   140008185:	jo     0x1400081e8
   140008187:	jb     0x1400081ea
   140008189:	ins    DWORD PTR es:[rdi],dx
   14000818a:	gs je  0x1400081f2
   14000818d:	jb     0x1400081ee
   14000818f:	outs   dx,BYTE PTR ds:[rsi]
   140008190:	outs   dx,DWORD PTR ds:[rsi]
   140008191:	imul   ebp,DWORD PTR [rsi+0x66],0x21006f
   140008198:	pop    rdi
   140008199:	gs jb  0x14000820e
   14000819c:	outs   dx,BYTE PTR ds:[rsi]
   14000819d:	outs   dx,DWORD PTR ds:[rsi]
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	sbb    BYTE PTR [rax],al
   1400081a2:	data16 jb 0x14000820a
   1400081a5:	add    BYTE PTR gs:[rax],al
   1400081a8:	adc    eax,0x65725f00
   1400081ad:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400081b0:	ins    BYTE PTR es:[rdi],dx
   1400081b1:	outs   dx,DWORD PTR ds:[rsi]
   1400081b2:	movsxd eax,DWORD PTR [rax]
   1400081b4:	adc    eax,DWORD PTR [rax]
   1400081b6:	pop    rdi
   1400081b7:	pop    rdi
   1400081b8:	jae    0x14000822e
   1400081ba:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   1400081c2:	outs   dx,DWORD PTR ds:[rsi]
   1400081c3:	outs   dx,BYTE PTR ds:[rsi]
   1400081c4:	pop    rdi
   1400081c5:	jbe    0x14000823a
   1400081c7:	ja     0x140008239
   1400081c9:	jb     0x140008234
   1400081cb:	outs   dx,BYTE PTR ds:[rsi]
   1400081cc:	je     0x140008234
   1400081ce:	pop    rdi
   1400081cf:	jae    0x1400081d1
   1400081d1:	add    BYTE PTR [rcx],dl
   1400081d3:	add    BYTE PTR [rdi+0x5f],bl
   1400081d6:	jae    0x14000824c
   1400081d8:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   1400081e0:	outs   dx,DWORD PTR ds:[rsi]
   1400081e1:	outs   dx,BYTE PTR ds:[rsi]
   1400081e2:	pop    rdi
   1400081e3:	jbe    0x140008258
   1400081e5:	ja     0x140008257
   1400081e7:	jb     0x140008252
   1400081e9:	outs   dx,BYTE PTR ds:[rsi]
   1400081ea:	je     0x140008252
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rdi+0x73],bl
   1400081f2:	gs push 0x6c69665f
   1400081f8:	je     0x14000825f
   1400081fa:	jb     0x14000825b
   1400081fc:	gs js  0x140008264
   1400081ff:	add    BYTE PTR [rdx+0x0],al
   140008202:	pop    rdi
   140008203:	jae    0x14000826a
   140008205:	je     0x140008266
   140008207:	(bad)  
   140008208:	jo     0x14000827a
   14000820a:	pop    rdi
   14000820b:	je     0x140008286
   14000820d:	jo     0x140008274
   14000820f:	add    BYTE PTR [rcx],cl
   140008211:	add    BYTE PTR [rdi+0x5f],bl
   140008214:	jae    0x14000827b
   140008216:	je     0x14000828d
   140008218:	jae    0x14000827f
   14000821a:	jb     0x140008289
   14000821c:	(bad)  
   14000821d:	je     0x140008287
   14000821f:	gs jb  0x140008294
   140008222:	add    BYTE PTR [rax],al
   140008224:	sbb    DWORD PTR [rax],eax
   140008226:	pop    rdi
   140008227:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000822a:	imul   sp,WORD PTR [rdi+0x75],0x6572
   140008230:	pop    rdi
   140008231:	ja     0x14000829c
   140008233:	fs gs pop rdi
   140008236:	(bad)  
   140008237:	jb     0x1400082a0
   140008239:	jbe    0x14000823b
   14000823b:	add    BYTE PTR [rip+0x6e695f00],dh        # 0x1ae69e141
   140008241:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008249:	pop    rdi
   14000824a:	ja     0x1400082b5
   14000824c:	fs gs pop rdi
   14000824f:	outs   dx,BYTE PTR gs:[rsi]
   140008251:	jbe    0x1400082bc
   140008253:	jb     0x1400082c4
   140008255:	outs   dx,BYTE PTR ds:[rsi]
   140008256:	ins    DWORD PTR es:[rdi],dx
   140008257:	outs   dx,BYTE PTR gs:[rsi]
   140008259:	je     0x14000825b
   14000825b:	add    BYTE PTR [rcx],ch
   14000825d:	add    BYTE PTR [rdi+0x67],bl
   140008260:	gs je  0x1400082c2
   140008263:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000826a:	pop    rdi
   14000826b:	ja     0x1400082d6
   14000826d:	fs gs pop rdi
   140008270:	outs   dx,BYTE PTR gs:[rsi]
   140008272:	jbe    0x1400082dd
   140008274:	jb     0x1400082e5
   140008276:	outs   dx,BYTE PTR ds:[rsi]
   140008277:	ins    DWORD PTR es:[rdi],dx
   140008278:	outs   dx,BYTE PTR gs:[rsi]
   14000827a:	je     0x14000827c
   14000827c:	add    BYTE PTR ss:[rdi+0x69],bl
   140008280:	outs   dx,BYTE PTR ds:[rsi]
   140008281:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x37006d72
   140008289:	add    BYTE PTR [rdi+0x69],bl
   14000828c:	outs   dx,BYTE PTR ds:[rsi]
   14000828d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140008295:	add    BYTE PTR [rbp+0x0],dl
   140008298:	gs js  0x140008304
   14000829b:	je     0x14000829d
   14000829d:	add    BYTE PTR [rbx],ah
   14000829f:	add    BYTE PTR [rdi+0x65],bl
   1400082a2:	js     0x14000830d
   1400082a4:	je     0x1400082a6
   1400082a6:	push   rsp
   1400082a7:	add    BYTE PTR [rdi+0x73],bl
   1400082aa:	gs je  0x14000830c
   1400082ad:	ins    WORD PTR es:[rdi],dx
   1400082af:	outs   dx,DWORD PTR ds:[rsi]
   1400082b0:	fs add BYTE PTR gs:[rax],al
   1400082b4:	add    al,0x0
   1400082b6:	pop    rdi
   1400082b7:	pop    rdi
   1400082b8:	jo     0x140008319
   1400082ba:	pop    rdi
   1400082bb:	pop    rdi
   1400082bc:	(bad)  
   1400082bd:	jb     0x140008326
   1400082bf:	movsxd eax,DWORD PTR [rax]
   1400082c1:	add    BYTE PTR [rsi],al
   1400082c3:	add    BYTE PTR [rdi+0x5f],bl
   1400082c6:	jo     0x140008327
   1400082c8:	pop    rdi
   1400082c9:	pop    rdi
   1400082ca:	ja     0x14000832d
   1400082cc:	jb     0x140008335
   1400082ce:	jbe    0x1400082d0
   1400082d0:	(bad)  
   1400082d1:	add    BYTE PTR [rdi+0x63],bl
   1400082d4:	gs js  0x140008340
   1400082d7:	je     0x1400082d9
   1400082d9:	add    BYTE PTR [rip+0x5f635f00],dl        # 0x19f63e1df
   1400082df:	gs js  0x14000834b
   1400082e2:	je     0x1400082e4
   1400082e4:	cmp    eax,0x65725f00
   1400082e9:	imul   esi,DWORD PTR [ebx+0x74],0x745f7265
   1400082f1:	push   0x64616572
   1400082f6:	pop    rdi
   1400082f7:	ins    BYTE PTR es:[rdi],dx
   1400082f8:	outs   dx,DWORD PTR ds:[rsi]
   1400082f9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400082fc:	pop    rdi
   1400082fd:	gs js  0x140008365
   140008300:	pop    rdi
   140008301:	(bad)  
   140008302:	je     0x140008369
   140008304:	js     0x14000836f
   140008306:	je     0x140008367
   140008308:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000830b:	ins    BYTE PTR es:[rdi],dx
   14000830c:	(bad)  
   14000830e:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008311:	add    BYTE PTR [rax],cl
   140008313:	add    BYTE PTR [rdi+0x63],bl
   140008316:	outs   dx,DWORD PTR ds:[rsi]
   140008317:	outs   dx,BYTE PTR ds:[rsi]
   140008318:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000831e:	gs (bad) 
   140008320:	fs ins BYTE PTR es:[rdi],dx
   140008322:	outs   dx,DWORD PTR ds:[rsi]
   140008323:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008326:	add    BYTE PTR gs:[rsi],dl
   140008329:	add    BYTE PTR [rdi+0x73],bl
   14000832c:	gs je  0x14000838e
   14000832f:	outs   dx,BYTE PTR ds:[rsi]
   140008330:	gs ja  0x140008392
   140008333:	ins    DWORD PTR es:[rdi],dx
   140008334:	outs   dx,DWORD PTR ds:[rsi]
   140008335:	fs add BYTE PTR gs:[rcx],al
   140008339:	add    BYTE PTR [rdi+0x5f],bl
   14000833c:	jo     0x14000839d
   14000833e:	pop    rdi
   14000833f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008342:	ins    DWORD PTR es:[rdi],dx
   140008343:	outs   dx,DWORD PTR ds:[rsi]
   140008344:	fs add BYTE PTR gs:[rax],al
   140008348:	add    BYTE PTR [ebp+eiz*2+0x72],dh
   14000834d:	ins    DWORD PTR es:[rdi],dx
   14000834e:	imul   ebp,DWORD PTR [rsi+0x61],0x34006574
   140008355:	add    BYTE PTR [rdi+0x69],bl
   140008358:	outs   dx,BYTE PTR ds:[rsi]
   140008359:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008361:	pop    rdi
   140008362:	outs   dx,DWORD PTR ds:[rsi]
   140008363:	outs   dx,BYTE PTR ds:[rsi]
   140008364:	gs js  0x1400083d0
   140008367:	je     0x1400083c8
   140008369:	je     0x1400083cc
   14000836b:	(bad)  
   14000836c:	ins    BYTE PTR es:[rdi],dx
   14000836d:	add    BYTE PTR gs:[rax],al
   140008370:	cmp    al,0x0
   140008372:	pop    rdi
   140008373:	jb     0x1400083da
   140008375:	imul   esi,DWORD PTR [ebx+0x74],0x6f5f7265
   14000837d:	outs   dx,BYTE PTR ds:[rsi]
   14000837e:	gs js  0x1400083ea
   140008381:	je     0x1400083e2
   140008383:	data16 jne 0x1400083f4
   140008386:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000838a:	outs   dx,BYTE PTR ds:[rsi]
   14000838b:	add    BYTE PTR [rsi],bl
   14000838d:	add    BYTE PTR [rdi+0x63],bl
   140008390:	jb     0x140008406
   140008392:	pop    rdi
   140008393:	(bad)  
   140008394:	je     0x1400083fb
   140008396:	js     0x140008401
   140008398:	je     0x14000839a
   14000839a:	(bad)  
   14000839b:	jo     0x140008406
   14000839d:	sub    eax,0x772d736d
   1400083a2:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400083a9:	jb     0x140008420
   1400083ab:	outs   dx,BYTE PTR ds:[rsi]
   1400083ac:	je     0x140008417
   1400083ae:	ins    DWORD PTR es:[rdi],dx
   1400083af:	gs sub eax,0x312d316c
   1400083b5:	sub    eax,0x6c642e30
   1400083ba:	ins    BYTE PTR es:[rdi],dx
   1400083bb:	add    BYTE PTR [rcx+0x70],ah
   1400083be:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df735
   1400083c8:	jb     0x14000843e
   1400083ca:	sub    eax,0x70616568
   1400083cf:	sub    eax,0x312d316c
   1400083d4:	sub    eax,0x6c642e30
   1400083d9:	ins    BYTE PTR es:[rdi],dx
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	(bad)  
   1400083dd:	jo     0x140008448
   1400083df:	sub    eax,0x772d736d
   1400083e4:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400083eb:	jae    0x140008461
   1400083ed:	imul   ebp,DWORD PTR fs:[rdi+0x2d],0x312d316c
   1400083f5:	sub    eax,0x6c642e30
   1400083fa:	ins    BYTE PTR es:[rdi],dx
   1400083fb:	add    BYTE PTR [rcx+0x70],ah
   1400083fe:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df775
   140008408:	jb     0x14000847e
   14000840a:	sub    eax,0x6874616d
   14000840f:	sub    eax,0x312d316c
   140008414:	sub    eax,0x6c642e30
   140008419:	ins    BYTE PTR es:[rdi],dx
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	(bad)  
   14000841d:	jo     0x140008488
   14000841f:	sub    eax,0x772d736d
   140008424:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000842b:	ins    BYTE PTR es:[rdi],dx
   14000842c:	outs   dx,DWORD PTR ds:[rsi]
   14000842d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008430:	gs sub eax,0x312d316c
   140008436:	sub    eax,0x6c642e30
   14000843b:	ins    BYTE PTR es:[rdi],dx
   14000843c:	add    BYTE PTR [rax],al
   14000843e:	sbb    DWORD PTR [rdx],eax
   140008440:	rex.RXB
   140008441:	gs je  0x140008487
   140008444:	jne    0x1400084b8
   140008446:	jb     0x1400084ad
   140008448:	outs   dx,BYTE PTR ds:[rsi]
   140008449:	je     0x14000849b
   14000844b:	jb     0x1400084bc
   14000844d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008450:	jae    0x140008452
   140008452:	rex.XB add al,0x51
   140008455:	jne    0x1400084bc
   140008457:	jb     0x1400084d2
   140008459:	push   rax
   14000845a:	gs jb  0x1400084c3
   14000845d:	outs   dx,DWORD PTR ds:[rsi]
   14000845e:	jb     0x1400084cd
   140008460:	(bad)  
   140008461:	outs   dx,BYTE PTR ds:[rsi]
   140008462:	movsxd esp,DWORD PTR [rbp+0x43]
   140008465:	outs   dx,DWORD PTR ds:[rsi]
   140008466:	jne    0x1400084d6
   140008468:	je     0x1400084cf
   14000846a:	jb     0x14000846c
   14000846c:	rex.WRX add r9,QWORD PTR [rax+0x65]
   140008470:	(bad)  
   140008471:	jo     0x1400084c6
   140008473:	gs je  0x1400084bf
   140008476:	outs   dx,BYTE PTR ds:[rsi]
   140008477:	outs   dx,WORD PTR ds:[rsi]
   140008479:	jb     0x1400084e8
   14000847b:	(bad)  
   14000847c:	je     0x1400084e7
   14000847e:	outs   dx,DWORD PTR ds:[rsi]
   14000847f:	outs   dx,BYTE PTR ds:[rsi]
   140008480:	add    BYTE PTR [rax],al
   140008482:	sbb    al,BYTE PTR [rdx]
   140008484:	rex.RXB
   140008485:	gs je  0x1400084cb
   140008488:	jne    0x1400084fc
   14000848a:	jb     0x1400084f1
   14000848c:	outs   dx,BYTE PTR ds:[rsi]
   14000848d:	je     0x1400084df
   14000848f:	jb     0x140008500
   140008491:	movsxd esp,DWORD PTR [rbp+0x73]
   140008494:	jae    0x1400084df
   140008496:	add    BYTE PTR fs:[rsi],bl
   140008499:	add    al,BYTE PTR [rdi+0x65]
   14000849c:	je     0x1400084e1
   14000849e:	jne    0x140008512
   1400084a0:	jb     0x140008507
   1400084a2:	outs   dx,BYTE PTR ds:[rsi]
   1400084a3:	je     0x1400084f9
   1400084a5:	push   0x64616572
   1400084aa:	rex.WB
   1400084ab:	add    BYTE PTR fs:[rax],al
   1400084ae:	jmp    0x1b465cbb5
   1400084b3:	push   rbx
   1400084b4:	jns    0x140008529
   1400084b6:	je     0x14000851d
   1400084b8:	ins    DWORD PTR es:[rdi],dx
   1400084b9:	push   rsp
   1400084ba:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400084c1:	ins    BYTE PTR es:[rdi],dx
   1400084c2:	gs push rsp
   1400084c4:	imul   ebp,DWORD PTR [rbp+0x65],0x47030700
   1400084cb:	gs je  0x140008522
   1400084ce:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400084d5:	je     0x1400084d7
   1400084d7:	add    bh,ah
   1400084d9:	add    eax,0x52726557
   1400084de:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654d7265
   1400084e7:	ins    DWORD PTR es:[rdi],dx
   1400084e8:	outs   dx,DWORD PTR ds:[rsi]
   1400084e9:	jb     0x140008564
   1400084eb:	rex.X ins BYTE PTR es:[rdi],dx
   1400084ed:	outs   dx,DWORD PTR ds:[rsi]
   1400084ee:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400084f1:	add    BYTE PTR [rbp+0x6f6c4300],al
   1400084f7:	jae    0x14000855e
   1400084f9:	rex.W (bad) 
   1400084fb:	outs   dx,BYTE PTR ds:[rsi]
   1400084fc:	fs ins BYTE PTR es:[rdi],dx
   1400084fe:	add    BYTE PTR gs:[rsp+rax*1+0x65736552],bh
   140008506:	je     0x14000854d
   140008508:	jbe    0x14000856f
   14000850a:	outs   dx,BYTE PTR ds:[rsi]
   14000850b:	je     0x14000850d
   14000850d:	add    bh,dl
   14000850f:	add    eax,0x74696157
   140008514:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008516:	jb     0x14000856b
   140008518:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000851f:	push   0x65
   140008521:	movsxd esi,DWORD PTR [rbp+rax*2+0x78]
   140008525:	add    BYTE PTR [rbp+0x65724300],bh
   14000852b:	(bad)  
   14000852c:	je     0x140008593
   14000852e:	rex.RB jbe 0x140008596
   140008531:	outs   dx,BYTE PTR ds:[rsi]
   140008532:	je     0x14000858b
   140008534:	add    BYTE PTR [rax],al
   140008536:	(bad)  
   140008537:	add    al,0x52
   140008539:	je     0x1400085a7
   14000853b:	rex.XB (bad) 
   14000853d:	jo     0x1400085b3
   14000853f:	jne    0x1400085b3
   140008541:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008544:	outs   dx,BYTE PTR ds:[rsi]
   140008545:	je     0x1400085ac
   140008547:	js     0x1400085bd
   140008549:	add    bl,cl
   14000854b:	add    al,0x52
   14000854d:	je     0x1400085bb
   14000854f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008551:	outs   dx,DWORD PTR ds:[rsi]
   140008552:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140008556:	jne    0x1400085c6
   140008558:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000855c:	outs   dx,BYTE PTR ds:[rsi]
   14000855d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000855f:	je     0x1400085d3
   140008561:	jns    0x140008563
   140008563:	add    dl,dl
   140008565:	add    al,0x52
   140008567:	je     0x1400085d5
   140008569:	push   rsi
   14000856a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008571:	outs   dx,BYTE PTR ds:[rsi]
   140008572:	ja     0x1400085dd
   140008574:	outs   dx,BYTE PTR ds:[rsi]
   140008575:	add    BYTE PTR fs:[rax],al
   140008578:	lods   al,BYTE PTR ds:[rsi]
   140008579:	add    eax,0x61686e55
   14000857e:	outs   dx,BYTE PTR ds:[rsi]
   14000857f:	fs ins BYTE PTR es:[rdi],dx
   140008581:	gs fs rex.RB js 0x1400085e9
   140008586:	gs jo  0x1400085fd
   140008589:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008590:	gs jb  0x140008593
   140008593:	add    BYTE PTR [rbp+rax*1+0x53],ch
   140008597:	gs je  0x1400085ef
   14000859a:	outs   dx,BYTE PTR ds:[rsi]
   14000859b:	push   0x6c646e61
   1400085a0:	gs fs rex.RB js 0x140008608
   1400085a5:	gs jo  0x14000861c
   1400085a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400085af:	gs jb  0x1400085b2
   1400085b2:	mov    al,BYTE PTR [rip+0x6d726554]        # 0x1ad72eb0c
   1400085b8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400085bf:	outs   dx,DWORD PTR ds:[rsi]
   1400085c0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400085c3:	jae    0x1400085c5
   1400085c5:	add    BYTE PTR [rax+0x50734903],al
   1400085cb:	jb     0x14000863c
   1400085cd:	movsxd esp,DWORD PTR [rbp+0x73]
   1400085d0:	jae    0x140008641
   1400085d2:	jb     0x14000861a
   1400085d4:	gs (bad) 
   1400085d6:	je     0x14000864d
   1400085d8:	jb     0x14000863f
   1400085da:	push   rax
   1400085db:	jb     0x140008642
   1400085dd:	jae    0x140008644
   1400085df:	outs   dx,BYTE PTR ds:[rsi]
   1400085e0:	je     0x1400085e2
   1400085e2:	movsxd eax,DWORD PTR [rbx]
   1400085e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400085e6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400085ee:	push   rbx
   1400085ef:	imul   r14,QWORD PTR [rbx+0x74],0x64616548
   1400085f7:	add    bl,ah
   1400085f9:	add    al,BYTE PTR [rdi+0x65]
   1400085fc:	je     0x140008651
   1400085fe:	jns    0x140008673
   140008600:	je     0x140008667
   140008602:	ins    DWORD PTR es:[rdi],dx
   140008603:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008605:	outs   dx,WORD PTR ds:[rsi]
   140008607:	add    bl,cl
   140008609:	add    eax,0x74726956
   14000860e:	jne    0x140008671
   140008610:	ins    BYTE PTR es:[rdi],dx
   140008611:	push   rax
   140008612:	jb     0x140008683
   140008614:	je     0x14000867b
   140008616:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000861a:	int    0x5
   14000861c:	push   rsi
   14000861d:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
   140008624:	jne    0x14000868b
   140008626:	jb     0x1400086a1
   140008628:	add    BYTE PTR [rax],al
   14000862a:	lods   eax,DWORD PTR ds:[rsi]
   14000862b:	add    DWORD PTR [rsi+0x72],eax
   14000862e:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140008638:	mov    edx,0x616f4c03
   14000863d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140008646:	js     0x140008689
   140008648:	add    BYTE PTR [rax],al
   14000864a:	sbb    eax,DWORD PTR [rax]
   14000864c:	jb     0x1400086af
   14000864e:	outs   dx,BYTE PTR ds:[rsi]
   14000864f:	add    BYTE PTR fs:[rax],al
   140008652:	(bad)  
   140008653:	jo     0x1400086be
   140008655:	sub    eax,0x772d736d
   14000865a:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140008661:	jne    0x1400086d7
   140008663:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x316c2d79
   14000866b:	sub    eax,0x2e302d31
   140008670:	fs ins BYTE PTR es:[rdi],dx
   140008672:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    BYTE PTR [rax+0x14000],dl
   140009006:	add    BYTE PTR [rax],al
   140009008:	(bad)  
   140009009:	(bad)  
   14000900a:	(bad)  
   14000900b:	(bad)  
   14000900c:	(bad)  
   14000900d:	(bad)  
   14000900e:	(bad)  
   14000900f:	inc    DWORD PTR [rdx]
	...
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    dh,dl
   140009031:	rex.WB xor spl,BYTE PTR [r10+0x2b992ddf]
   140009038:	sub    DWORD PTR [rsi-0x2ddfa233],esi
   14000903e:	data16 (bad) 
   140009040:	add    BYTE PTR [rax],al
   140009042:	add    BYTE PTR [rax-0x1],al
   140009048:	add    DWORD PTR [rax],eax
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	(bad)  
   140009051:	and    BYTE PTR [rax],al
   140009053:	add    BYTE PTR [rax],al
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rcx],al
   140009059:	add    BYTE PTR [rax],al
   14000905b:	add    BYTE PTR [rdx],al
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rcx],al
   140009061:	add    BYTE PTR [rax],al
   140009063:	add    BYTE PTR [rax],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    al,dh
   140009069:	push   0x0
   14000906b:	rex add DWORD PTR [rax],eax
	...
   140009076:	add    BYTE PTR [rax],al
   140009078:	cs (bad) 
   14000907a:	push   r14
   14000907c:	rex.XB push r15
   14000907e:	imul   ebp,DWORD PTR [rsi+0x33],0x61654832
   140009085:	jo     0x1400090c7
   140009087:	push   r12
   140009089:	rex.WR
   14000908a:	rex
   14000908b:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	lock push 0x0
   140009093:	rex add DWORD PTR [rax],eax
	...
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	cs (bad) 
   1400090a2:	push   r13
   1400090a4:	rex.WB
   1400090a5:	rex.B je 0x140009114
   1400090a8:	rex.WRB
   1400090a9:	gs ins DWORD PTR es:[rdi],dx
   1400090ab:	rex.WRB
   1400090ac:	addr32 jb 0x1400090ef
   1400090af:	push   r12
   1400090b1:	rex.WR
   1400090b2:	rex
   1400090b3:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	lock push 0x0
   1400090bb:	rex add DWORD PTR [rax],eax
	...
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	cs (bad) 
   1400090ca:	push   r13
   1400090cc:	rex.WB
   1400090cd:	rex.B je 0x14000913c
   1400090d0:	push   rbx
   1400090d1:	je     0x140009145
   1400090d3:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   1400090da:	push   r12
   1400090dc:	rex.WR
   1400090dd:	rex
   1400090de:	add    al,sil
   1400090e1:	push   0x0
   1400090e3:	rex add DWORD PTR [rax],eax
	...
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	cs (bad) 
   1400090f2:	push   r14
   1400090f4:	rex.XB
   1400090f5:	rex.B je 0x140009164
   1400090f8:	push   rbx
   1400090f9:	je     0x14000916d
   1400090fb:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   140009102:	push   r12
   140009104:	rex.WR
   140009105:	rex
   140009106:	add    al,sil
   140009109:	push   0x0
   14000910b:	rex add DWORD PTR [rax],eax
	...
   140009116:	add    BYTE PTR [rax],al
   140009118:	cs (bad) 
   14000911a:	push   r14
   14000911c:	rex.XB
   14000911d:	rex.B je 0x14000918c
   140009120:	rex.RB js 0x140009186
   140009123:	gs jo  0x14000919a
   140009126:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000912d:	rex
   14000912e:	add    al,sil
   140009131:	push   0x0
   140009133:	rex add DWORD PTR [rax],eax
	...
   14000913e:	add    BYTE PTR [rax],al
   140009140:	cs (bad) 
   140009142:	push   r14
   140009144:	je     0x1400091bf
   140009146:	jo     0x1400091ad
   140009148:	pop    rdi
   140009149:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	add    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	adc    eax,0xe8000010
   14000c009:	jae    0x14000c00b
   14000c00b:	add    BYTE PTR [rax],ah
   14000c00d:	adc    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rax+rdx*1],bh
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	call   0x18000c08c
   14000c019:	adc    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax+rdx*1+0x0],bl
   14000c01f:	add    al,ch
   14000c021:	jae    0x14000c023
   14000c023:	add    BYTE PTR [rax-0x5ffffff0],al
   14000c029:	adc    BYTE PTR [rax],al
   14000c02b:	add    al,ch
   14000c02d:	jae    0x14000c02f
   14000c02f:	add    al,al
   14000c031:	adc    BYTE PTR [rax],al
   14000c033:	add    BYTE PTR [rcx+rdx*1],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	call   0x15000c0b0
   14000c03d:	adc    DWORD PTR [rax],eax
   14000c03f:	add    BYTE PTR [rax],dh
   14000c041:	adc    DWORD PTR [rax],eax
   14000c043:	add    al,ch
   14000c045:	jae    0x14000c047
   14000c047:	add    BYTE PTR [rax],dh
   14000c049:	adc    DWORD PTR [rax],eax
   14000c04b:	add    cl,al
   14000c04d:	adc    DWORD PTR [rax],eax
   14000c04f:	add    BYTE PTR [rsi*2+0x11f00000],bl
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	(bad)  
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	adc    al,0x75
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	nop
   14000c061:	adc    al,BYTE PTR [rax]
   14000c063:	add    BYTE PTR [rbp+0x14000012],bh
   14000c069:	jne    0x14000c06b
   14000c06b:	add    al,dl
   14000c06d:	adc    al,BYTE PTR [rax]
   14000c06f:	add    ch,ch
   14000c071:	adc    al,BYTE PTR [rax]
   14000c073:	add    al,ch
   14000c075:	jae    0x14000c077
   14000c077:	add    al,dh
   14000c079:	adc    al,BYTE PTR [rax]
   14000c07b:	add    BYTE PTR [rip+0xffffffffe8000013],bh        # 0x12800c094
   14000c081:	jae    0x14000c083
   14000c083:	add    BYTE PTR [rax+0x13],dl
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	(bad)  
   14000c089:	adc    eax,DWORD PTR [rax]
   14000c08b:	add    BYTE PTR [rsi*2+0x13a40000],bl
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	cmp    eax,0xc4000014
   14000c099:	jbe    0x14000c09b
   14000c09b:	add    BYTE PTR [rax+0x14],al
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	fist   DWORD PTR [rax+rax*1]
   14000c0a3:	add    ah,al
   14000c0a5:	jbe    0x14000c0a7
   14000c0a7:	add    ah,bl
   14000c0a9:	adc    al,0x0
   14000c0ab:	add    dh,bh
   14000c0ad:	adc    al,0x0
   14000c0af:	add    al,ch
   14000c0b1:	jae    0x14000c0b3
   14000c0b3:	add    BYTE PTR [rax],al
   14000c0b5:	adc    eax,0x159c0000
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	js     0x14000c132
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	pushf  
   14000c0c1:	adc    eax,0x167b0000
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	sbb    al,0x75
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	jl     0x14000c0e4
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	push   0xfffffffff000001a
   14000c0d5:	jae    0x14000c0d7
   14000c0d7:	add    BYTE PTR [rax+0x1a],ch
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	in     eax,0x1b
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	(bad)  
   14000c0e1:	jbe    0x14000c0e3
   14000c0e3:	add    al,ch
   14000c0e5:	sbb    eax,DWORD PTR [rax]
   14000c0e7:	add    BYTE PTR [rdi+0x1d],bl
   14000c0ea:	add    BYTE PTR [rax],al
   14000c0ec:	(bad)  
   14000c0ed:	jbe    0x14000c0ef
   14000c0ef:	add    BYTE PTR [rax+0x1d],ah
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	(bad)  
   14000c0f5:	(bad)  
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	shl    BYTE PTR [rbx+0x0],0x0
   14000c0fc:	adc    BYTE PTR [rsi],bl
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	mov    ah,0x1f
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000c108:	rcr    BYTE PTR [rdi],0x0
   14000c10b:	add    BYTE PTR [rax+0x1c000020],bh
   14000c111:	jne    0x14000c113
   14000c113:	add    BYTE PTR [rax+0x6f000020],bh
   14000c119:	and    eax,DWORD PTR [rax]
   14000c11b:	add    BYTE PTR [rax],dh
   14000c11d:	je     0x14000c11f
   14000c11f:	add    BYTE PTR [rax+0x23],dh
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	test   al,0x23
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	call   0x10000c1a0
   14000c12d:	and    eax,DWORD PTR [rax]
   14000c12f:	add    bl,dh
   14000c131:	and    eax,DWORD PTR [rax]
   14000c133:	add    al,bl
   14000c135:	jae    0x14000c137
   14000c137:	add    ah,dh
   14000c139:	and    eax,DWORD PTR [rax]
   14000c13b:	add    BYTE PTR [rdi],dh
   14000c13d:	and    al,0x0
   14000c13f:	add    al,ah
   14000c141:	jae    0x14000c143
   14000c143:	add    BYTE PTR [rax],bh
   14000c145:	and    al,0x0
   14000c147:	add    BYTE PTR [rcx+0x24],bh
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	loopne 0x14000c1c1
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	jl     0x14000c176
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	(bad)  
   14000c155:	add    BYTE PTR es:[rax],al
   14000c158:	shl    BYTE PTR [rax+rax*1+0x0],0xc8
   14000c15d:	add    BYTE PTR es:[rax],al
   14000c160:	cmc    
   14000c161:	add    BYTE PTR es:[rax],al
   14000c164:	call   0x13800c1dc
   14000c169:	add    BYTE PTR es:[rax],al
   14000c16c:	jne    0x14000c195
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	sbb    al,0x75
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	js     0x14000c19d
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	xor    eax,0xc0000028
   14000c17d:	jae    0x14000c17f
   14000c17f:	add    BYTE PTR [rax],bh
   14000c181:	sub    BYTE PTR [rax],al
   14000c183:	add    BYTE PTR [rsi-0x17ffffd8],dl
   14000c189:	jae    0x14000c18b
   14000c18b:	add    BYTE PTR [rax-0x15ffffd8],bl
   14000c191:	sub    BYTE PTR [rax],al
   14000c193:	add    ah,bl
   14000c195:	je     0x14000c197
   14000c197:	add    ah,ch
   14000c199:	sub    BYTE PTR [rax],al
   14000c19b:	add    bl,bh
   14000c19d:	sub    BYTE PTR [rax],al
   14000c19f:	add    al,ch
   14000c1a1:	jae    0x14000c1a3
   14000c1a3:	add    ah,bh
   14000c1a5:	sub    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rsi-0x3bffffd7],al
   14000c1ad:	jbe    0x14000c1af
   14000c1af:	add    BYTE PTR [rax+0x16000029],cl
   14000c1b5:	sub    al,BYTE PTR [rax]
   14000c1b7:	add    BYTE PTR [rsi*2+0x2a180000],bl
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	in     al,0x2b
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	in     al,0x74
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	in     al,dx
   14000c1c9:	sub    eax,DWORD PTR [rax]
   14000c1cb:	add    BYTE PTR [rsp+rbp*1],cl
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	call   0x14c00c248
   14000c1d5:	sub    al,0x0
   14000c1d7:	add    BYTE PTR [rdi+0x1400002c],bl
   14000c1dd:	jne    0x14000c1df
   14000c1df:	add    BYTE PTR [rax-0x2cffffd4],ah
   14000c1e5:	sub    al,0x0
   14000c1e7:	add    al,bl
   14000c1e9:	jae    0x14000c1eb
   14000c1eb:	add    ah,dl
   14000c1ed:	sub    al,0x0
   14000c1ef:	add    BYTE PTR [rcx+0x2d],bh
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	sbb    al,0x75
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	jl     0x14000c227
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	mov    al,0x2d
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	adc    al,0x75
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	ret    0x2d
   14000c207:	add    BYTE PTR [rcx],bh
   14000c209:	add    BYTE PTR cs:[rax],al
   14000c20c:	sub    BYTE PTR [rbp+0x0],dh
   14000c20f:	add    BYTE PTR [rdi+0x2e],al
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	mov    esi,0x3000002e
   14000c219:	jne    0x14000c21b
   14000c21b:	add    BYTE PTR [rax-0x20ffffd1],al
   14000c221:	(bad)  
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	mov    WORD PTR [rbp+0x0],?
   14000c227:	add    al,ah
   14000c229:	(bad)  
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	(bad)  
   14000c22d:	xor    BYTE PTR [rax],al
   14000c22f:	add    al,al
   14000c231:	jne    0x14000c233
   14000c233:	add    BYTE PTR [rax],ch
   14000c235:	xor    BYTE PTR [rax],al
   14000c237:	add    BYTE PTR [rdi+0x14000030],ch
   14000c23d:	jne    0x14000c23f
   14000c23f:	add    BYTE PTR [rax-0x2effffd0],dh
   14000c245:	xor    BYTE PTR [rax],al
   14000c247:	add    BYTE PTR [rbp+rsi*2+0x0],ch
   14000c24b:	add    ah,dl
   14000c24d:	xor    BYTE PTR [rax],al
   14000c24f:	add    dh,al
   14000c251:	xor    DWORD PTR [rax],eax
   14000c253:	add    BYTE PTR [rbp+rsi*2+0x0],dh
   14000c257:	add    al,cl
   14000c259:	xor    DWORD PTR [rax],eax
   14000c25b:	add    BYTE PTR [rax+0x32],ah
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	fdiv   DWORD PTR [rbp+0x0]
   14000c263:	add    BYTE PTR [rdx+rsi*1+0x33370000],al
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	adc    al,0x75
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	cmp    BYTE PTR [rbx],dh
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	xchg   DWORD PTR [rbx],esi
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	adc    al,0x75
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	mov    BYTE PTR [rbx],dh
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	sub    al,0x34
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	cmp    BYTE PTR [rbp+0x0],dh
   14000c287:	add    BYTE PTR [rsp+rsi*1],ch
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	cwde   
   14000c28d:	xor    al,0x0
   14000c28f:	add    BYTE PTR [rax],dl
   14000c291:	jbe    0x14000c293
   14000c293:	add    BYTE PTR [rax+0x32000034],bl
   14000c299:	xor    eax,0x76180000
   14000c29e:	add    BYTE PTR [rax],al
   14000c2a0:	xor    al,0x35
   14000c2a2:	add    BYTE PTR [rax],al
   14000c2a4:	div    BYTE PTR [rip+0x76280000]        # 0x1b628c2aa
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	adc    BYTE PTR [rsi],dh
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	and    BYTE PTR [rsi],dh
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	cmp    BYTE PTR [rsi+0x0],dh
   14000c2b7:	add    BYTE PTR [rax],ah
   14000c2b9:	add    BYTE PTR ss:[rax],al
   14000c2bc:	(bad)  [rsi]
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	adc    al,0x75
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	loopne 0x14000c2fc
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	lock add BYTE PTR ss:[rax],al
   14000c2cc:	call   0x13000c344
   14000c2d1:	add    BYTE PTR ss:[rax],al
   14000c2d4:	or     DWORD PTR [rdi],esi
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	call   0x14c00c350
   14000c2dd:	(bad)  
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	cmp    DWORD PTR [rax],0x0
   14000c2e3:	add    BYTE PTR [rsi+rsi*2],bh
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	nop
   14000c2e9:	cmp    BYTE PTR [rax],al
   14000c2eb:	add    BYTE PTR [rdx-0x17ffffc8],ah
   14000c2f1:	jae    0x14000c2f3
   14000c2f3:	add    BYTE PTR [rax-0x4ffffc8],dh
   14000c2f9:	cmp    DWORD PTR [rax],eax
   14000c2fb:	add    ah,al
   14000c2fd:	jbe    0x14000c2ff
   14000c2ff:	add    BYTE PTR [rax],al
   14000c301:	cmp    al,BYTE PTR [rax]
   14000c303:	add    BYTE PTR [rax],ch
   14000c305:	cmp    al,BYTE PTR [rax]
   14000c307:	add    al,ch
   14000c309:	jae    0x14000c30b
   14000c30b:	add    BYTE PTR [rax],ch
   14000c30d:	cmp    al,BYTE PTR [rax]
   14000c30f:	add    BYTE PTR [rax+0x1400003a],cl
   14000c315:	jne    0x14000c317
   14000c317:	add    BYTE PTR [rax-0x10ffffc6],cl
   14000c31d:	cmp    al,BYTE PTR [rax]
   14000c31f:	add    BYTE PTR [rsi*2+0x3af00000],dl
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	rex.WXB cmp rax,QWORD PTR [r8]
   14000c32b:	add    BYTE PTR [rsi*2+0x3b4c0000],dl
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	jrcxz  0x14000c371
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	(bad)  
   14000c339:	jbe    0x14000c33b
   14000c33b:	add    al,dh
   14000c33d:	cmp    eax,DWORD PTR [rax]
   14000c33f:	add    BYTE PTR [rbx],bl
   14000c341:	cmp    al,0x0
   14000c343:	add    BYTE PTR [rsi*2+0x3c1c0000],dl
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	push   rbp
   14000c34d:	cmp    al,0x0
   14000c34f:	add    al,ch
   14000c351:	jae    0x14000c353
   14000c353:	add    BYTE PTR [rax+0x3c],bl
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	movabs eax,ds:0xa40000751400003c
   14000c361:	cmp    al,0x0
   14000c363:	add    BYTE PTR [rbx-0x73ffffc3],al
   14000c369:	jbe    0x14000c36b
   14000c36b:	add    BYTE PTR [rbp+rdi*1+0x3e1d0000],al
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	fs jbe 0x14000c377
   14000c377:	add    BYTE PTR [rax],ah
   14000c379:	add    BYTE PTR ds:[rax],al
   14000c37c:	rex.R
   14000c37d:	add    BYTE PTR ds:[rax],al
   14000c380:	adc    al,0x75
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	rex.R
   14000c385:	add    BYTE PTR ds:[rax],al
   14000c388:	outs   dx,DWORD PTR ds:[rsi]
   14000c389:	add    BYTE PTR ds:[rax],al
   14000c38c:	adc    al,0x75
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	jo     0x14000c3d0
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	mov    edi,0x1400003e
   14000c399:	jne    0x14000c39b
   14000c39b:	add    al,al
   14000c39d:	add    BYTE PTR ds:[rax],al
   14000c3a0:	xlat   BYTE PTR ds:[rbx]
   14000c3a1:	add    BYTE PTR ds:[rax],al
   14000c3a4:	call   0x12400c41c
   14000c3a9:	add    BYTE PTR ds:[rax],al
   14000c3ac:	cmp    eax,0x9800003f
   14000c3b1:	jbe    0x14000c3b3
   14000c3b3:	add    BYTE PTR [rax+0x3f],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	(bad)
   14000c3bb:	add    al,al
   14000c3bd:	jae    0x14000c3bf
   14000c3bf:	add    al,dl
   14000c3c1:	(bad)  
   14000c3c2:	add    BYTE PTR [rax],al
   14000c3c4:	add    al,0x40
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	adc    al,0x75
   14000c3ca:	add    BYTE PTR [rax],al
   14000c3cc:	adc    BYTE PTR [rax+0x0],al
   14000c3cf:	add    cl,ah
   14000c3d1:	add    BYTE PTR [rax],al
   14000c3d4:	movabs al,ds:0x55000040e4000076
   14000c3dd:	add    BYTE PTR [r8],al
   14000c3e0:	test   al,0x76
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	test   BYTE PTR [rcx+0x0],al
   14000c3e7:	add    BYTE PTR [rdi-0x17ffffbf],bl
   14000c3ed:	jae    0x14000c3ef
   14000c3ef:	add    BYTE PTR [rcx+rax*2+0x43010000],bh
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	mov    ah,0x76
   14000c3fa:	add    BYTE PTR [rax],al
   14000c3fc:	adc    al,0x43
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	push   0xffffffffe8000043
   14000c405:	jae    0x14000c407
   14000c407:	add    BYTE PTR [rax-0x47ffffbd],al
   14000c40d:	rex.XB add BYTE PTR [r8],al
   14000c410:	call   0xf800c488
   14000c415:	rex.XB add BYTE PTR [r8],al
   14000c418:	add    al,BYTE PTR [rax+rax*1+0x0]
   14000c41c:	(bad)  
   14000c41d:	jbe    0x14000c41f
   14000c41f:	add    BYTE PTR [rax],dl
   14000c421:	add    BYTE PTR [rax],r8b
   14000c424:	pop    rdx
   14000c425:	add    BYTE PTR [rax],r8b
   14000c428:	(bad)  
   14000c429:	jbe    0x14000c42b
   14000c42b:	add    BYTE PTR [rsp+rax*2+0x0],ah
   14000c42f:	add    BYTE PTR [rdi],bl
   14000c431:	rex.RX add BYTE PTR [rax],r8b
   14000c434:	(bad)  
   14000c435:	jbe    0x14000c437
   14000c437:	add    BYTE PTR [rax+0x46],ah
   14000c43a:	add    BYTE PTR [rax],al
   14000c43c:	jge    0x14000c484
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	call   0x15000c4b8
   14000c445:	rex.RXB add BYTE PTR [r8],r8b
   14000c448:	leave  
   14000c449:	rex.RXB add BYTE PTR [r8],r8b
   14000c44c:	sbb    al,0x75
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	int3   
   14000c451:	rex.RXB add BYTE PTR [r8],r8b
   14000c454:	rex.W add BYTE PTR [eax],al
   14000c458:	sbb    al,0x75
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	push   0xffffffffff000048
   14000c461:	rex.W add BYTE PTR [rax],al
   14000c464:	cld    
   14000c465:	jbe    0x14000c467
   14000c467:	add    BYTE PTR [rax],al
   14000c469:	rex.WB add BYTE PTR [r8],al
   14000c46c:	cwde   
   14000c46d:	rex.WB add BYTE PTR [r8],al
   14000c470:	in     al,dx
   14000c471:	jbe    0x14000c473
   14000c473:	add    BYTE PTR [rax+0x26000049],bl
   14000c479:	rex.WX add BYTE PTR [rax],al
   14000c47c:	or     BYTE PTR [rdi+0x0],dh
   14000c47f:	add    BYTE PTR [rax],ch
   14000c481:	rex.WX add BYTE PTR [rax],al
   14000c484:	int3   
   14000c485:	rex.WX add BYTE PTR [rax],al
   14000c488:	adc    al,0x75
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	ror    BYTE PTR [rdx+0x0],1
   14000c48f:	add    cl,cl
   14000c491:	rex.WRB add BYTE PTR [r8],r8b
   14000c494:	sbb    BYTE PTR [rdi+0x0],dh
   14000c497:	add    BYTE PTR [rax],dl
   14000c499:	rex.WRX add BYTE PTR [rax],r8b
   14000c49c:	adc    cl,BYTE PTR [rsi+0x0]
   14000c49f:	add    al,ch
   14000c4a1:	jbe    0x14000c4a3
   14000c4a3:	add    BYTE PTR [rdx],ch
   14000c4a5:	rex.WRX add BYTE PTR [rax],r8b
   14000c4a8:	rex.RXB
   14000c4a9:	rex.WRX add BYTE PTR [rax],r8b
   14000c4ac:	or     al,0x75
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	pop    rdx
   14000c4b1:	rex.WRX add BYTE PTR [rax],r8b
   14000c4b4:	or     BYTE PTR [rsi+0x0],0x0
   14000c4b8:	or     BYTE PTR [rsi+0x0],dh
   14000c4bb:	add    BYTE PTR [rax-0x28ffffb2],al
   14000c4c1:	rex.WRX add BYTE PTR [rax],r8b
   14000c4c4:	(bad)  
   14000c4c5:	jne    0x14000c4c7
   14000c4c7:	add    bh,dl
   14000c4c9:	rex.WRX add BYTE PTR [rax],r8b
   14000c4cc:	cmc    
   14000c4cd:	rex.WRX add BYTE PTR [rax],r8b
   14000c4d0:	or     BYTE PTR [rsi+0x0],dh
   14000c4d3:	add    ch,dh
   14000c4d5:	rex.WRX add BYTE PTR [rax],r8b
   14000c4d8:	or     eax,0x8400004f
   14000c4dd:	jbe    0x14000c4df
   14000c4df:	add    BYTE PTR [rax],dl
   14000c4e1:	rex.WRXB add BYTE PTR [r8],r8b
   14000c4e4:	push   rsp
   14000c4e5:	rex.WRXB add BYTE PTR [r8],r8b
   14000c4e8:	call   0x1a000c560
   14000c4ed:	rex.WRXB add BYTE PTR [r8],r8b
   14000c4f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c4f1:	rex.WRXB add BYTE PTR [r8],r8b
   14000c4f4:	call   0xf000c56c
   14000c4f9:	rex.WRXB add BYTE PTR [r8],r8b
   14000c4fc:	loop   0x14000c54d
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	call   0x18000c578
   14000c505:	push   rax
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	jno    0x14000c55a
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	.byte 0xe8
   14000c50d:	jae    0x14000c50f
	...

Disassembly of section .didat:

000000014000d000 <.didat>:
   14000d000:	mov    dh,0x2d
   14000d002:	add    BYTE PTR [rax+0x1],al
	...
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rax+0x2f],ch
   14000d012:	add    BYTE PTR [rax+0x1],al
   14000d015:	add    BYTE PTR [rax],al
   14000d017:	add    BYTE PTR [rdi+rbp*1+0x0],bl
   14000d01b:	rex add DWORD PTR [rax],eax
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	push   rax
   14000d021:	(bad)  
   14000d022:	add    BYTE PTR [rax+0x1],al
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rdi+rbp*1+0x0],al
   14000d02b:	rex add DWORD PTR [rax],eax
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	cmp    BYTE PTR [rdi],ch
   14000d032:	add    BYTE PTR [rax+0x1],al
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rdi+rbp*1],ch
   14000d03a:	add    BYTE PTR [rax+0x1],al
   14000d03d:	add    BYTE PTR [rax],al
   14000d03f:	add    BYTE PTR [rax],ah
   14000d041:	(bad)  
   14000d042:	add    BYTE PTR [rax+0x1],al
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rdi+rbp*1],dl
   14000d04a:	add    BYTE PTR [rax+0x1],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rax],cl
   14000d051:	(bad)  
   14000d052:	add    BYTE PTR [rax+0x1],al
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	add    ah,bh
   14000d059:	add    BYTE PTR cs:[rax+0x1],al
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    al,dh
   14000d061:	add    BYTE PTR cs:[rax+0x1],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    ah,ah
   14000d069:	add    BYTE PTR cs:[rax+0x1],al
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    al,bl
   14000d071:	add    BYTE PTR cs:[rax+0x1],al
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    ah,cl
   14000d079:	add    BYTE PTR cs:[rax+0x1],al
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    dh,dl
   14000d081:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d085:	add    BYTE PTR [rax],al
   14000d087:	add    dl,ah
   14000d089:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000d08d:	add    BYTE PTR [rax],al
   14000d08f:	add    al,al
   14000d091:	add    BYTE PTR cs:[rax+0x1],al
   14000d095:	add    BYTE PTR [rax],al
   14000d097:	add    BYTE PTR [rbx],bh
   14000d099:	add    BYTE PTR cs:[rax+0x1],al
   14000d09d:	add    BYTE PTR [rax],al
   14000d09f:	add    BYTE PTR [rdi+rbp*1+0x0],dh
   14000d0a3:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .tls:

000000014000e000 <.tls>:
   14000e000:	add    BYTE PTR [rax],al
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	.byte 0x0
   14000e007:	.byte 0x80
	...

Disassembly of section .c2r:

000000014000f000 <.c2r>:
   14000f000:	hlt    
   14000f001:	lock add BYTE PTR [rax],al
   14000f004:	add    BYTE PTR [rax],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	(bad)  
   14000f009:	(bad)  
   14000f00a:	(bad)  
   14000f00b:	(bad)  
   14000f00c:	fdivr  st(0),st
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	add    al,0xf1
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	mov    BYTE PTR [rbx+0x0],bh
	...
   14000f01f:	add    BYTE PTR [rax+0x7e],bh
   14000f025:	(bad)  
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	cwde   
   14000f029:	jnp    0x14000f02b
	...
   14000f033:	add    dl,dl
   14000f035:	add    BYTE PTR [rax],0x0
   14000f038:	adc    BYTE PTR [rax+0x0],ah
   14000f03b:	add    BYTE PTR [rax+0x7d],cl
	...
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	push   0xffffffffc0000081
   14000f04d:	(bad)  
   14000f04e:	add    BYTE PTR [rax],al
   14000f050:	enter  0x7d,0x0
	...
   14000f05c:	(bad)  
   14000f05d:	add    DWORD PTR [rax],0x0
   14000f060:	rex (bad) 
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	mov    BYTE PTR [rbp+0x0],bh
	...
   14000f06f:	add    BYTE PTR [rbx+rax*4+0x62000000],bh
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	jo     0x14000f0f8
	...
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	fadd   QWORD PTR [rbx+0x62e80000]
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	mov    eax,0x7d
   14000f091:	add    BYTE PTR [rax],al
   14000f093:	add    BYTE PTR [rax],al
   14000f095:	add    BYTE PTR [rax],al
   14000f097:	add    ah,bh
   14000f099:	add    DWORD PTR [rax],0x0
   14000f09c:	xor    BYTE PTR [rdx+0x0],ah
   14000f09f:	add    BYTE PTR [rax+0x7d],ch
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    BYTE PTR [rax],al
   14000f0a9:	add    BYTE PTR [rax],al
   14000f0ab:	add    BYTE PTR [rsp+rax*4],bl
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	and    BYTE PTR [rdx+0x0],ah
   14000f0b3:	add    BYTE PTR [rax+0x7e],bl
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    BYTE PTR [rax],al
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    BYTE PTR [rdx-0x7a],dl
   14000f0c2:	add    BYTE PTR [rax],al
   14000f0c4:	adc    BYTE PTR [rbx+0x0],ah
	...
   14000f0db:	add    BYTE PTR [rcx+0x70],al
   14000f0de:	jo     0x14000f136
   14000f0e0:	rex.WB jae 0x14000f159
   14000f0e3:	push   rbx
   14000f0e4:	jne    0x14000f148
   14000f0e6:	jae    0x14000f161
   14000f0e8:	jae    0x14000f15e
   14000f0ea:	gs ins DWORD PTR es:[rdi],dx
   14000f0ec:	jae    0x14000f124
   14000f0ee:	xor    al,0x2e
   14000f0f0:	fs ins BYTE PTR es:[rdi],dx
   14000f0f2:	ins    BYTE PTR es:[rdi],dx
   14000f0f3:	add    BYTE PTR [rcx],al
   14000f0f5:	add    BYTE PTR [rax],al
   14000f0f7:	add    BYTE PTR [rax],al
   14000f0f9:	add    BYTE PTR [rax],al
   14000f0fb:	add    BYTE PTR [rax],0x0
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	add    BYTE PTR [rax],al
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	add    DWORD PTR [rax],eax
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	add    BYTE PTR [rax],al
   14000f10a:	add    BYTE PTR [rax+0x0],al
   14000f110:	add    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

0000000140010000 <.rsrc>:
	...
   140010008:	add    al,0x0
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	add    DWORD PTR [rax],eax
   140010010:	adc    BYTE PTR [rax],al
   140010012:	add    BYTE PTR [rax],al
   140010014:	sbb    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax+0x0],al
   14001001c:	add    BYTE PTR [rax],al
   14001001e:	add    BYTE PTR [rax],al
   140010020:	add    al,0x0
   140010022:	add    BYTE PTR [rax],al
   140010024:	add    BYTE PTR [rax],al
   140010026:	add    DWORD PTR [rax],eax
   140010028:	add    DWORD PTR [rax],eax
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	xor    BYTE PTR [rax],al
   14001002e:	add    BYTE PTR [rax+0x0],al
   140010034:	add    BYTE PTR [rax],al
   140010036:	add    BYTE PTR [rax],al
   140010038:	add    al,0x0
   14001003a:	add    BYTE PTR [rax],al
   14001003c:	add    BYTE PTR [rax],al
   14001003e:	add    DWORD PTR [rax],eax
   140010040:	or     DWORD PTR [rax+rax*1],eax
   140010043:	add    BYTE PTR [rax+0x0],cl
   140010046:	add    BYTE PTR [rax],al
   140010048:	pop    rax
   140010049:	add    BYTE PTR [rcx],al
   14001004b:	add    BYTE PTR [rcx+rcx*1],ah
   14001004e:	add    BYTE PTR [rax],al
   140010050:	in     al,0x4
   140010052:	add    BYTE PTR [rax],al
   140010054:	add    BYTE PTR [rax],al
   140010056:	add    BYTE PTR [rax],al
   140010058:	nop
   140010059:	add    al,0x34
   14001005b:	add    BYTE PTR [rax],al
   14001005d:	add    BYTE PTR [rsi+0x0],dl
   140010060:	push   rbx
   140010061:	add    BYTE PTR [rdi+0x0],bl
   140010064:	push   rsi
   140010065:	add    BYTE PTR [rbp+0x0],al
   140010068:	push   rdx
   140010069:	add    BYTE PTR [rbx+0x0],dl
   14001006c:	rex.WB add BYTE PTR [r15+0x0],cl
   140010070:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140010074:	rex.WB add BYTE PTR [r14+0x0],cl
   140010078:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001007c:	add    BYTE PTR [rax],al
   14001007e:	add    BYTE PTR [rax],al
   140010080:	mov    ebp,0xfeef04
   140010085:	add    BYTE PTR [rcx],al
   140010087:	add    BYTE PTR [rax],al
   140010089:	add    BYTE PTR [rax],dl
   14001008b:	add    BYTE PTR [rbx],bh
   14001008d:	or     BYTE PTR [rsi+0x10000020],al
   140010093:	add    BYTE PTR [rbx],bh
   140010095:	or     BYTE PTR [rsi+0x3f20],al
   14001009b:	add    BYTE PTR [rdx],ah
   14001009d:	add    BYTE PTR [rax],al
   14001009f:	add    BYTE PTR [rax+rax*1],al
   1400100a2:	add    al,0x0
   1400100a4:	add    DWORD PTR [rax],eax
	...
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	out    dx,al
   1400100b5:	add    eax,DWORD PTR [rax]
   1400100b7:	add    BYTE PTR [rcx],al
   1400100b9:	add    BYTE PTR [rbx+0x0],dl
   1400100bc:	je     0x1400100be
   1400100be:	jb     0x1400100c0
   1400100c0:	imul   eax,DWORD PTR [rax],0x67006e
   1400100c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400100ca:	ins    BYTE PTR es:[rdi],dx
   1400100cb:	add    BYTE PTR [rbp+0x0],ah
   1400100ce:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400100d2:	data16 add BYTE PTR [rdi+0x0],ch
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	retf   0x3
   1400100db:	add    BYTE PTR [rcx],al
   1400100dd:	add    BYTE PTR [rax],dh
   1400100df:	add    BYTE PTR [rax],dh
   1400100e1:	add    BYTE PTR [rax],dh
   1400100e3:	add    BYTE PTR [rax],dh
   1400100e5:	add    BYTE PTR [rax],dh
   1400100e7:	add    BYTE PTR [rax+rax*1],dh
   1400100ea:	add    BYTE PTR [r8+rax*1],r14b
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	rex.WR add BYTE PTR [rsi],r10b
   1400100f3:	add    BYTE PTR [rcx],al
   1400100f5:	add    BYTE PTR [rbx+0x0],al
   1400100f8:	outs   dx,DWORD PTR ds:[rsi]
   1400100f9:	add    BYTE PTR [rbp+0x0],ch
   1400100fc:	jo     0x1400100fe
   1400100fe:	(bad)  
   1400100ff:	add    BYTE PTR [rsi+0x0],ch
   140010102:	jns    0x140010104
   140010104:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010108:	ins    DWORD PTR es:[rdi],dx
   140010109:	add    BYTE PTR [rbp+0x0],ah
   14001010c:	add    BYTE PTR [rax],al
   14001010e:	add    BYTE PTR [rax],al
   140010110:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140010114:	movsxd eax,DWORD PTR [rax]
   140010116:	jb     0x140010118
   140010118:	outs   dx,DWORD PTR ds:[rsi]
   140010119:	add    BYTE PTR [rbx+0x0],dh
   14001011c:	outs   dx,DWORD PTR ds:[rsi]
   14001011d:	add    BYTE PTR [rsi+0x0],ah
   140010120:	je     0x140010122
   140010122:	and    BYTE PTR [rax],al
   140010124:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010128:	jb     0x14001012a
   14001012a:	jo     0x14001012c
   14001012c:	outs   dx,DWORD PTR ds:[rsi]
   14001012d:	add    BYTE PTR [rdx+0x0],dh
   140010130:	(bad)  
   140010131:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010135:	add    BYTE PTR [rdi+0x0],ch
   140010138:	outs   dx,BYTE PTR ds:[rsi]
   140010139:	add    BYTE PTR [rax],al
   14001013b:	add    BYTE PTR [rsi+0x0],cl
   14001013e:	adc    eax,DWORD PTR [rax]
   140010140:	add    DWORD PTR [rax],eax
   140010142:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140010146:	ins    BYTE PTR es:[rdi],dx
   140010147:	add    BYTE PTR [rbp+0x0],ah
   14001014a:	add    BYTE PTR [rbp+0x0],r12b
   14001014e:	jae    0x140010150
   140010150:	movsxd eax,DWORD PTR [rax]
   140010152:	jb     0x140010154
   140010154:	imul   eax,DWORD PTR [rax],0x740070
   14001015a:	imul   eax,DWORD PTR [rax],0x6e006f
   140010160:	add    BYTE PTR [rax],al
   140010162:	add    BYTE PTR [rax],al
   140010164:	push   rbx
   140010165:	add    BYTE PTR [rbx+0x0],ch
   140010168:	jns    0x14001016a
   14001016a:	jo     0x14001016c
   14001016c:	add    BYTE PTR gs:[rax],ah
   14001016f:	add    BYTE PTR [rsi+0x0],ah
   140010172:	outs   dx,DWORD PTR ds:[rsi]
   140010173:	add    BYTE PTR [rdx+0x0],dh
   140010176:	and    BYTE PTR [rax],al
   140010178:	rex.X add BYTE PTR [rbp+0x0],sil
   14001017c:	jae    0x14001017e
   14001017e:	imul   eax,DWORD PTR [rax],0x65006e
   140010184:	jae    0x140010186
   140010186:	jae    0x140010188
   140010188:	add    BYTE PTR [rax],al
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	add    BYTE PTR ds:[rdi],cl
   14001018f:	add    BYTE PTR [rcx],al
   140010191:	add    BYTE PTR [rsi+0x0],al
   140010194:	imul   eax,DWORD PTR [rax],0x65006c
   14001019a:	push   rsi
   14001019b:	add    BYTE PTR [rbp+0x0],ah
   14001019e:	jb     0x1400101a0
   1400101a0:	jae    0x1400101a2
   1400101a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400101a8:	add    BYTE PTR [rax],al
   1400101aa:	add    BYTE PTR [rax],al
   1400101ac:	xor    DWORD PTR [rax],eax
   1400101ae:	add    BYTE PTR ss:[rsi],ch
   1400101b1:	add    BYTE PTR [rax],dh
   1400101b3:	add    BYTE PTR [rsi],ch
   1400101b5:	add    BYTE PTR [rax],bh
   1400101b7:	add    BYTE PTR [rbx],dh
   1400101b9:	add    BYTE PTR [rdx],dh
   1400101bb:	add    BYTE PTR [rsi],dh
   1400101bd:	add    BYTE PTR [rsi],ch
   1400101bf:	add    BYTE PTR [rdx],dh
   1400101c1:	add    BYTE PTR [rcx],dh
   1400101c3:	add    BYTE PTR [rax],dh
   1400101c5:	add    BYTE PTR [rdi],dh
   1400101c7:	add    BYTE PTR [rax],al
   1400101c9:	add    BYTE PTR [rax],al
   1400101cb:	add    BYTE PTR [rsi+0x0],bl
   1400101ce:	(bad)  
   1400101cf:	add    BYTE PTR [rcx],al
   1400101d1:	add    BYTE PTR [rcx+0x0],cl
   1400101d4:	outs   dx,BYTE PTR ds:[rsi]
   1400101d5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400101d9:	add    BYTE PTR [rdx+0x0],dh
   1400101dc:	outs   dx,BYTE PTR ds:[rsi]
   1400101dd:	add    BYTE PTR [rcx+0x0],ah
   1400101e0:	ins    BYTE PTR es:[rdi],dx
   1400101e1:	add    BYTE PTR [rsi+0x0],cl
   1400101e4:	(bad)  
   1400101e5:	add    BYTE PTR [rbp+0x0],ch
   1400101e8:	add    BYTE PTR gs:[rax],al
   1400101eb:	add    BYTE PTR [rcx+0x0],al
   1400101ee:	jo     0x1400101f0
   1400101f0:	jo     0x1400101f2
   1400101f2:	push   rbx
   1400101f3:	add    BYTE PTR [rax+0x0],ch
   1400101f6:	(bad)  
   1400101f7:	add    BYTE PTR [rdx+0x0],dh
   1400101fa:	imul   eax,DWORD PTR [rax],0x67006e
   140010200:	rex.XB add BYTE PTR [r8+0x0],bpl
   140010204:	jb     0x140010206
   140010206:	outs   dx,DWORD PTR ds:[rsi]
   140010207:	add    BYTE PTR [rbp+0x0],ch
   14001020a:	add    BYTE PTR gs:[rax+0x0],cl
   14001020e:	outs   dx,DWORD PTR ds:[rsi]
   14001020f:	add    BYTE PTR [rdi+0x0],ch
   140010212:	imul   eax,DWORD PTR [rax],0x43
   140010215:	add    BYTE PTR [rdi+0x0],ch
   140010218:	outs   dx,BYTE PTR ds:[rsi]
   140010219:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001021d:	add    BYTE PTR [rdi+0x0],ch
   140010220:	ins    BYTE PTR es:[rdi],dx
   140010221:	add    BYTE PTR [rax+rax*1+0x65],ch
   140010225:	add    BYTE PTR [rdx+0x0],dh
   140010228:	add    BYTE PTR [rax],al
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001022d:	add    BYTE PTR [rdi],bh
   14001022f:	add    BYTE PTR [rcx],al
   140010231:	add    BYTE PTR [rax+rax*1+0x65],cl
   140010235:	add    BYTE PTR [rdi+0x0],ah
   140010238:	(bad)  
   140010239:	add    BYTE PTR [rax+rax*1+0x54],ch
   14001023d:	add    BYTE PTR [rdx+0x0],dh
   140010240:	(bad)  
   140010241:	add    BYTE PTR [rax+rax*1+0x65],ah
   140010245:	add    BYTE PTR [rbp+0x0],ch
   140010248:	(bad)  
   140010249:	add    BYTE PTR [rdx+0x0],dh
   14001024c:	imul   eax,DWORD PTR [rax],0x73
   14001024f:	add    BYTE PTR [rcx],dh
   140010251:	add    BYTE PTR [rax],al
   140010253:	add    BYTE PTR [rbp+0x0],cl
   140010256:	imul   eax,DWORD PTR [rax],0x720063
   14001025c:	outs   dx,DWORD PTR ds:[rsi]
   14001025d:	add    BYTE PTR [rbx+0x0],dh
   140010260:	outs   dx,DWORD PTR ds:[rsi]
   140010261:	add    BYTE PTR [rsi+0x0],ah
   140010264:	je     0x140010266
   140010266:	scas   al,BYTE PTR es:[rdi]
   140010267:	add    BYTE PTR [rax],ah
   140010269:	add    BYTE PTR [rcx+0x0],ch
   14001026c:	jae    0x14001026e
   14001026e:	and    BYTE PTR [rax],al
   140010270:	(bad)  
   140010271:	add    BYTE PTR [rax],ah
   140010273:	add    BYTE PTR [rdx+0x0],dh
   140010276:	add    BYTE PTR gs:[rdi+0x0],ah
   14001027a:	imul   eax,DWORD PTR [rax],0x740073
   140010280:	add    BYTE PTR gs:[rdx+0x0],dh
   140010284:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140010289:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001028d:	add    BYTE PTR [rcx+0x0],ah
   140010290:	add    BYTE PTR fs:[rbp+0x0],ah
   140010294:	ins    DWORD PTR es:[rdi],dx
   140010295:	add    BYTE PTR [rcx+0x0],ah
   140010298:	jb     0x14001029a
   14001029a:	imul   eax,DWORD PTR [rax],0x20
   14001029d:	add    BYTE PTR [rdi+0x0],ch
   1400102a0:	data16 add BYTE PTR [rax],ah
   1400102a3:	add    BYTE PTR [rbp+0x0],cl
   1400102a6:	imul   eax,DWORD PTR [rax],0x720063
   1400102ac:	outs   dx,DWORD PTR ds:[rsi]
   1400102ad:	add    BYTE PTR [rbx+0x0],dh
   1400102b0:	outs   dx,DWORD PTR ds:[rsi]
   1400102b1:	add    BYTE PTR [rsi+0x0],ah
   1400102b4:	je     0x1400102b6
   1400102b6:	and    BYTE PTR [rax],al
   1400102b8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400102bc:	jb     0x1400102be
   1400102be:	jo     0x1400102c0
   1400102c0:	outs   dx,DWORD PTR ds:[rsi]
   1400102c1:	add    BYTE PTR [rdx+0x0],dh
   1400102c4:	(bad)  
   1400102c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400102c9:	add    BYTE PTR [rdi+0x0],ch
   1400102cc:	outs   dx,BYTE PTR ds:[rsi]
   1400102cd:	add    BYTE PTR [rsi],ch
   1400102cf:	add    BYTE PTR [rax],al
   1400102d1:	add    BYTE PTR [rax],al
   1400102d3:	add    BYTE PTR [rdx+0x1003d00],ah
   1400102d9:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400102dd:	add    BYTE PTR [rdi+0x0],ah
   1400102e0:	(bad)  
   1400102e1:	add    BYTE PTR [rax+rax*1+0x54],ch
   1400102e5:	add    BYTE PTR [rdx+0x0],dh
   1400102e8:	(bad)  
   1400102e9:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400102ed:	add    BYTE PTR [rbp+0x0],ch
   1400102f0:	(bad)  
   1400102f1:	add    BYTE PTR [rdx+0x0],dh
   1400102f4:	imul   eax,DWORD PTR [rax],0x73
   1400102f7:	add    BYTE PTR [rdx],dh
   1400102f9:	add    BYTE PTR [rax],al
   1400102fb:	add    BYTE PTR [rdi+0x0],dl
   1400102fe:	imul   eax,DWORD PTR [rax],0x64006e
   140010304:	outs   dx,DWORD PTR ds:[rsi]
   140010305:	add    BYTE PTR [rdi+0x0],dh
   140010308:	jae    0x14001030a
   14001030a:	scas   al,BYTE PTR es:[rdi]
   14001030b:	add    BYTE PTR [rax],ah
   14001030d:	add    BYTE PTR [rcx+0x0],ch
   140010310:	jae    0x140010312
   140010312:	and    BYTE PTR [rax],al
   140010314:	(bad)  
   140010315:	add    BYTE PTR [rax],ah
   140010317:	add    BYTE PTR [rdx+0x0],dh
   14001031a:	add    BYTE PTR gs:[rdi+0x0],ah
   14001031e:	imul   eax,DWORD PTR [rax],0x740073
   140010324:	add    BYTE PTR gs:[rdx+0x0],dh
   140010328:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14001032d:	add    BYTE PTR [rax+rax*1+0x72],dh
   140010331:	add    BYTE PTR [rcx+0x0],ah
   140010334:	add    BYTE PTR fs:[rbp+0x0],ah
   140010338:	ins    DWORD PTR es:[rdi],dx
   140010339:	add    BYTE PTR [rcx+0x0],ah
   14001033c:	jb     0x14001033e
   14001033e:	imul   eax,DWORD PTR [rax],0x20
   140010341:	add    BYTE PTR [rdi+0x0],ch
   140010344:	data16 add BYTE PTR [rax],ah
   140010347:	add    BYTE PTR [rbp+0x0],cl
   14001034a:	imul   eax,DWORD PTR [rax],0x720063
   140010350:	outs   dx,DWORD PTR ds:[rsi]
   140010351:	add    BYTE PTR [rbx+0x0],dh
   140010354:	outs   dx,DWORD PTR ds:[rsi]
   140010355:	add    BYTE PTR [rsi+0x0],ah
   140010358:	je     0x14001035a
   14001035a:	and    BYTE PTR [rax],al
   14001035c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010360:	jb     0x140010362
   140010362:	jo     0x140010364
   140010364:	outs   dx,DWORD PTR ds:[rsi]
   140010365:	add    BYTE PTR [rdx+0x0],dh
   140010368:	(bad)  
   140010369:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001036d:	add    BYTE PTR [rdi+0x0],ch
   140010370:	outs   dx,BYTE PTR ds:[rsi]
   140010371:	add    BYTE PTR [rsi],ch
   140010373:	add    BYTE PTR [rax],al
   140010375:	add    BYTE PTR [rax],al
   140010377:	add    BYTE PTR [rsi+0x0],ch
   14001037a:	and    eax,DWORD PTR [rax]
   14001037c:	add    DWORD PTR [rax],eax
   14001037e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140010382:	imul   eax,DWORD PTR [rax],0x690067
   140010388:	outs   dx,BYTE PTR ds:[rsi]
   140010389:	add    BYTE PTR [rcx+0x0],ah
   14001038c:	ins    BYTE PTR es:[rdi],dx
   14001038d:	add    BYTE PTR [rsi+0x0],al
   140010390:	imul   eax,DWORD PTR [rax],0x65006c
   140010396:	outs   dx,BYTE PTR ds:[rsi]
   140010397:	add    BYTE PTR [rcx+0x0],ah
   14001039a:	ins    DWORD PTR es:[rdi],dx
   14001039b:	add    BYTE PTR [rbp+0x0],ah
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	add    BYTE PTR [r8+0x0],sil
   1400103a4:	jo     0x1400103a6
   1400103a6:	push   rbx
   1400103a7:	add    BYTE PTR [rax+0x0],ch
   1400103aa:	(bad)  
   1400103ab:	add    BYTE PTR [rdx+0x0],dh
   1400103ae:	imul   eax,DWORD PTR [rax],0x67006e
   1400103b4:	rex.XB add BYTE PTR [r8+0x0],bpl
   1400103b8:	jb     0x1400103ba
   1400103ba:	outs   dx,DWORD PTR ds:[rsi]
   1400103bb:	add    BYTE PTR [rbp+0x0],ch
   1400103be:	add    BYTE PTR gs:[rax+0x0],cl
   1400103c2:	outs   dx,DWORD PTR ds:[rsi]
   1400103c3:	add    BYTE PTR [rdi+0x0],ch
   1400103c6:	imul   eax,DWORD PTR [rax],0x43
   1400103c9:	add    BYTE PTR [rdi+0x0],ch
   1400103cc:	outs   dx,BYTE PTR ds:[rsi]
   1400103cd:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400103d1:	add    BYTE PTR [rdi+0x0],ch
   1400103d4:	ins    BYTE PTR es:[rdi],dx
   1400103d5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400103d9:	add    BYTE PTR [rdx+0x0],dh
   1400103dc:	add    BYTE PTR cs:[rbp+0x0],ah
   1400103e0:	js     0x1400103e2
   1400103e2:	add    BYTE PTR gs:[rax],al
   1400103e5:	add    BYTE PTR [rax],al
   1400103e7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400103eb:	add    BYTE PTR [rcx],al
   1400103ed:	add    BYTE PTR [rax+0x0],dl
   1400103f0:	jb     0x1400103f2
   1400103f2:	outs   dx,DWORD PTR ds:[rsi]
   1400103f3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400103f7:	add    BYTE PTR [rbx+0x0],ah
   1400103fa:	je     0x1400103fc
   1400103fc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010400:	ins    DWORD PTR es:[rdi],dx
   140010401:	add    BYTE PTR [rbp+0x0],ah
   140010404:	add    BYTE PTR [rax],al
   140010406:	add    BYTE PTR [rax],al
   140010408:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001040c:	movsxd eax,DWORD PTR [rax]
   14001040e:	jb     0x140010410
   140010410:	outs   dx,DWORD PTR ds:[rsi]
   140010411:	add    BYTE PTR [rbx+0x0],dh
   140010414:	outs   dx,DWORD PTR ds:[rsi]
   140010415:	add    BYTE PTR [rsi+0x0],ah
   140010418:	je     0x14001041a
   14001041a:	and    BYTE PTR [rax],al
   14001041c:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140010420:	data16 add BYTE PTR [rcx+0x0],ch
   140010424:	movsxd eax,DWORD PTR [rax]
   140010426:	add    BYTE PTR gs:[rax],ah
   140010429:	add    BYTE PTR [rdx],dh
   14001042b:	add    BYTE PTR [rax],dh
   14001042d:	add    BYTE PTR [rcx],dh
   14001042f:	add    BYTE PTR [rsi],dh
   140010431:	add    BYTE PTR [rax],al
   140010433:	add    BYTE PTR [rdx+0x0],al
   140010436:	sldt   WORD PTR [rcx]
   140010439:	add    BYTE PTR [rax+0x0],dl
   14001043c:	jb     0x14001043e
   14001043e:	outs   dx,DWORD PTR ds:[rsi]
   14001043f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140010443:	add    BYTE PTR [rbx+0x0],ah
   140010446:	je     0x140010448
   140010448:	push   rsi
   140010449:	add    BYTE PTR [rbp+0x0],ah
   14001044c:	jb     0x14001044e
   14001044e:	jae    0x140010450
   140010450:	imul   eax,DWORD PTR [rax],0x6e006f
   140010456:	add    BYTE PTR [rax],al
   140010458:	xor    DWORD PTR [rax],eax
   14001045a:	add    BYTE PTR ss:[rsi],ch
   14001045d:	add    BYTE PTR [rax],dh
   14001045f:	add    BYTE PTR [rsi],ch
   140010461:	add    BYTE PTR [rax],bh
   140010463:	add    BYTE PTR [rbx],dh
   140010465:	add    BYTE PTR [rdx],dh
   140010467:	add    BYTE PTR [rsi],dh
   140010469:	add    BYTE PTR [rsi],ch
   14001046b:	add    BYTE PTR [rdx],dh
   14001046d:	add    BYTE PTR [rcx],dh
   14001046f:	add    BYTE PTR [rax],dh
   140010471:	add    BYTE PTR [rdi],dh
   140010473:	add    BYTE PTR [rax],al
   140010475:	add    BYTE PTR [rax],al
   140010477:	add    BYTE PTR [rdx],ch
   140010479:	add    BYTE PTR [rip+0x4d000100],al        # 0x18d01057f
   14001047f:	add    BYTE PTR [rdi+0x0],cl
   140010482:	push   rbx
   140010483:	add    BYTE PTR [rbp+0x0],al
   140010486:	push   rsi
   140010487:	add    BYTE PTR [rbp+0x0],ah
   14001048a:	jb     0x14001048c
   14001048c:	jae    0x14001048e
   14001048e:	imul   eax,DWORD PTR [rax],0x6e006f
   140010494:	add    BYTE PTR [rax],al
   140010496:	add    BYTE PTR [rax],al
   140010498:	rex.X add BYTE PTR [rbp+0x0],al
   14001049c:	push   rsp
   14001049d:	add    BYTE PTR [rcx+0x0],al
   1400104a0:	add    BYTE PTR [rax],al
   1400104a2:	add    BYTE PTR [rax],al
   1400104a4:	add    BYTE PTR [rax],r8b
   1400104a7:	add    BYTE PTR [rcx],al
   1400104a9:	add    BYTE PTR [rsi+0x0],dl
   1400104ac:	(bad)  
   1400104ad:	add    BYTE PTR [rdx+0x0],dh
   1400104b0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400104b4:	ins    BYTE PTR es:[rdi],dx
   1400104b5:	add    BYTE PTR [rbp+0x0],ah
   1400104b8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400104bc:	data16 add BYTE PTR [rdi+0x0],ch
   1400104c0:	add    BYTE PTR [rax],al
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	and    al,0x0
   1400104c6:	add    al,0x0
   1400104c8:	add    BYTE PTR [rax],al
   1400104ca:	push   rsp
   1400104cb:	add    BYTE PTR [rdx+0x0],dh
   1400104ce:	(bad)  
   1400104cf:	add    BYTE PTR [rsi+0x0],ch
   1400104d2:	jae    0x1400104d4
   1400104d4:	ins    BYTE PTR es:[rdi],dx
   1400104d5:	add    BYTE PTR [rcx+0x0],ah
   1400104d8:	je     0x1400104da
   1400104da:	imul   eax,DWORD PTR [rax],0x6e006f
   1400104e0:	add    BYTE PTR [rax],al
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	in     al,0x4
   1400104e8:	rex.RX
   1400104e9:	xor    r11b,BYTE PTR [r8+0x0]
	...

Disassembly of section .reloc:

0000000140011000 <.reloc>:
   140011000:	add    BYTE PTR [rax+0x0],ah
   140011003:	add    BYTE PTR [rax+rax*1+0x0],bl
   140011007:	add    BYTE PTR [rax],ah
   140011009:	movabs ds:0xa348a340a338a328,eax
   140011012:	push   rax
   140011013:	movabs ds:0xa370a368a360a358,eax
   14001101c:	js     0x140010fc1
   14001101e:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   140011025:	movabs ds:0xa570a568a3b8a3b0,eax
   14001102e:	js     0x140010fd5
   140011030:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140011037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011038:	mov    al,0xa5
   14001103a:	mov    eax,0xc8a5c0a5
   14001103f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011040:	shl    BYTE PTR [rbp-0x55175a28],1
   140011046:	lock stos BYTE PTR es:[rdi],al
   140011048:	add    BYTE PTR [rbx-0x543754f8],ch
   14001104e:	loopne 0x140010ffb
   140011050:	call   0x188ad0100
   140011055:	lods   al,BYTE PTR ds:[rsi]
   140011056:	push   rax
   140011057:	lods   al,BYTE PTR ds:[rsi]
   140011058:	pop    rax
   140011059:	lods   al,BYTE PTR ds:[rsi]
   14001105a:	(bad)  
   14001105b:	lods   al,BYTE PTR ds:[rsi]
   14001105c:	add    BYTE PTR [rax+0x180000],dl
   140011062:	add    BYTE PTR [rax],al
   140011064:	add    BYTE PTR [rax-0x5f6f5f98],ah
   14001106a:	mov    eax,0x8a0e0a0
   14001106f:	movabs eax,ds:0xd0000000a130
   140011078:	xor    BYTE PTR [rax],al
   14001107a:	add    BYTE PTR [rax],al
   14001107c:	add    BYTE PTR [rax-0x5fe75ff0],ah
   140011082:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   140011088:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14001108e:	push   rax
   14001108f:	movabs al,ds:0xa070a068a060a058
   140011098:	js     0x14001103a
   14001109a:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   1400110a1:	.byte 0xa0
   1400110a2:	.byte 0xa0
   1400110a3:	.byte 0xa0
