
d96cd6f8855cf9e59d796e178637a72eea63bf5d30aaab4e070490240278f3af.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	mov    QWORD PTR [rsp+0x10],rsi
   14000100a:	push   rdi
   14000100b:	sub    rsp,0xb0
   140001012:	xor    eax,eax
   140001014:	mov    rdi,rcx
   140001017:	lea    rcx,[rip+0x846a]        # 0x140009488
   14000101e:	xor    ebx,ebx
   140001020:	xor    edx,edx
   140001022:	mov    DWORD PTR [rsp+0x44],eax
   140001026:	mov    DWORD PTR [rsp+0x48],eax
   14000102a:	mov    DWORD PTR [rsp+0x4c],eax
   14000102e:	mov    DWORD PTR [rsp+0x40],ebx
   140001032:	call   QWORD PTR [rip+0x8318]        # 0x140009350
   140001038:	mov    QWORD PTR [rsp+0x60],rbx
   14000103d:	mov    DWORD PTR [rsp+0x88],0x28
   140001048:	mov    rsi,rax
   14000104b:	xor    eax,eax
   14000104d:	mov    DWORD PTR [rsp+0x8c],ebx
   140001054:	mov    QWORD PTR [rsp+0x68],rax
   140001059:	mov    QWORD PTR [rsp+0x70],rax
   14000105e:	mov    QWORD PTR [rsp+0x78],rax
   140001063:	mov    QWORD PTR [rsp+0x80],rax
   14000106b:	mov    QWORD PTR [rsp+0x90],rax
   140001073:	mov    QWORD PTR [rsp+0x98],rax
   14000107b:	mov    QWORD PTR [rsp+0xa0],rax
   140001083:	mov    QWORD PTR [rsp+0xa8],rax
   14000108b:	mov    DWORD PTR [rsp+0x54],eax
   14000108f:	mov    DWORD PTR [rsp+0x58],eax
   140001093:	mov    DWORD PTR [rsp+0x5c],eax
   140001097:	mov    DWORD PTR [rsp+0x50],ebx
   14000109b:	test   rdi,rdi
   14000109e:	je     0x14000127b
   1400010a4:	mov    rcx,rdi
   1400010a7:	call   QWORD PTR [rip+0x828b]        # 0x140009338
   1400010ad:	test   eax,eax
   1400010af:	jne    0x14000127b
   1400010b5:	mov    edx,DWORD PTR [rdi+0x4]
   1400010b8:	mov    ecx,DWORD PTR [rdi]
   1400010ba:	mov    eax,DWORD PTR [rdi+0x8]
   1400010bd:	sub    eax,ecx
   1400010bf:	mov    DWORD PTR [rsp+0x70],ecx
   1400010c3:	lea    rcx,[rsp+0x40]
   1400010c8:	mov    DWORD PTR [rsp+0x78],eax
   1400010cc:	mov    eax,DWORD PTR [rdi+0xc]
   1400010cf:	mov    DWORD PTR [rsp+0x74],edx
   1400010d3:	sub    eax,edx
   1400010d5:	lea    r9,[rsp+0x60]
   1400010da:	xor    r8d,r8d
   1400010dd:	mov    DWORD PTR [rsp+0x7c],eax
   1400010e1:	mov    eax,DWORD PTR [rdi]
   1400010e3:	mov    QWORD PTR [rsp+0x60],rsi
   1400010e8:	mov    DWORD PTR [rcx],eax
   1400010ea:	mov    eax,DWORD PTR [rdi+0x8]
   1400010ed:	mov    DWORD PTR [rcx+0x4],edx
   1400010f0:	mov    DWORD PTR [rcx+0x8],eax
   1400010f3:	mov    eax,DWORD PTR [rdi+0xc]
   1400010f6:	lea    edx,[rbx+0x46]
   1400010f9:	mov    DWORD PTR [rcx+0xc],eax
   1400010fc:	mov    rcx,rsi
   1400010ff:	mov    QWORD PTR [rsp+0x68],rbx
   140001104:	mov    DWORD PTR [rsp+0x80],ebx
   14000110b:	call   QWORD PTR [rip+0x81e7]        # 0x1400092f8
   140001111:	lea    r9,[rsp+0x60]
   140001116:	lea    edx,[rbx+0x47]
   140001119:	xor    r8d,r8d
   14000111c:	mov    rcx,rsi
   14000111f:	call   QWORD PTR [rip+0x81d3]        # 0x1400092f8
   140001125:	xor    r9d,r9d
   140001128:	xor    r8d,r8d
   14000112b:	mov    edx,0x231
   140001130:	mov    rcx,rsi
   140001133:	call   QWORD PTR [rip+0x81bf]        # 0x1400092f8
   140001139:	lea    r9,[rsp+0x40]
   14000113e:	lea    r8d,[rbx+0x7]
   140001142:	mov    edx,0x216
   140001147:	mov    rcx,rsi
   14000114a:	call   QWORD PTR [rip+0x81a8]        # 0x1400092f8
   140001150:	mov    ecx,DWORD PTR [rdi+0xc]
   140001153:	mov    r9d,DWORD PTR [rdi+0x4]
   140001157:	mov    r8d,DWORD PTR [rdi]
   14000115a:	mov    eax,DWORD PTR [rdi+0x8]
   14000115d:	sub    ecx,r9d
   140001160:	mov    DWORD PTR [rsp+0x30],ebx
   140001164:	mov    DWORD PTR [rsp+0x28],ecx
   140001168:	sub    eax,r8d
   14000116b:	mov    rcx,rsi
   14000116e:	xor    edx,edx
   140001170:	mov    DWORD PTR [rsp+0x20],eax
   140001174:	call   QWORD PTR [rip+0x81ce]        # 0x140009348
   14000117a:	mov    eax,DWORD PTR [rdi]
   14000117c:	lea    r11,[rsp+0x40]
   140001181:	mov    DWORD PTR [r11],eax
   140001184:	mov    eax,DWORD PTR [rdi+0x4]
   140001187:	lea    r9,[rsp+0x40]
   14000118c:	mov    DWORD PTR [r11+0x4],eax
   140001190:	mov    eax,DWORD PTR [rdi+0x8]
   140001193:	lea    r8d,[rbx+0x7]
   140001197:	mov    DWORD PTR [r11+0x8],eax
   14000119b:	mov    eax,DWORD PTR [rdi+0xc]
   14000119e:	mov    edx,0x214
   1400011a3:	mov    rcx,rsi
   1400011a6:	mov    DWORD PTR [r11+0xc],eax
   1400011aa:	call   QWORD PTR [rip+0x8148]        # 0x1400092f8
   1400011b0:	lea    r9,[rsp+0x60]
   1400011b5:	lea    edx,[rbx+0x46]
   1400011b8:	xor    r8d,r8d
   1400011bb:	mov    rcx,rsi
   1400011be:	call   QWORD PTR [rip+0x8134]        # 0x1400092f8
   1400011c4:	lea    r9,[rsp+0x60]
   1400011c9:	lea    edx,[rbx+0x47]
   1400011cc:	xor    r8d,r8d
   1400011cf:	mov    rcx,rsi
   1400011d2:	call   QWORD PTR [rip+0x8120]        # 0x1400092f8
   1400011d8:	mov    rcx,rsi
   1400011db:	call   QWORD PTR [rip+0x811f]        # 0x140009300
   1400011e1:	mov    r9d,0x4
   1400011e7:	mov    rbx,rax
   1400011ea:	mov    r8,rax
   1400011ed:	mov    edx,0x318
   1400011f2:	mov    rcx,rsi
   1400011f5:	call   QWORD PTR [rip+0x80fd]        # 0x1400092f8
   1400011fb:	mov    rdx,rbx
   1400011fe:	mov    rcx,rsi
   140001201:	call   QWORD PTR [rip+0x8101]        # 0x140009308
   140001207:	xor    r9d,r9d
   14000120a:	xor    r8d,r8d
   14000120d:	mov    edx,0x232
   140001212:	mov    rcx,rsi
   140001215:	call   QWORD PTR [rip+0x80dd]        # 0x1400092f8
   14000121b:	mov    edx,0x2
   140001220:	mov    rcx,rdi
   140001223:	call   QWORD PTR [rip+0x80e7]        # 0x140009310
   140001229:	lea    rdx,[rsp+0x88]
   140001231:	mov    rcx,rax
   140001234:	call   QWORD PTR [rip+0x80de]        # 0x140009318
   14000123a:	lea    rdx,[rsp+0x8c]
   140001242:	lea    rcx,[rsp+0x50]
   140001247:	mov    r8,rdi
   14000124a:	call   QWORD PTR [rip+0x80d0]        # 0x140009320
   140001250:	xor    edx,edx
   140001252:	lea    r8,[rsp+0x50]
   140001257:	lea    ecx,[rdx+0x2f]
   14000125a:	mov    r9d,0x2
   140001260:	call   QWORD PTR [rip+0x80c2]        # 0x140009328
   140001266:	xor    edx,edx
   140001268:	xor    ecx,ecx
   14000126a:	lea    r8d,[rdx+0x1]
   14000126e:	call   QWORD PTR [rip+0x80bc]        # 0x140009330
   140001274:	mov    eax,0x1
   140001279:	jmp    0x14000127d
   14000127b:	mov    eax,ebx
   14000127d:	lea    r11,[rsp+0xb0]
   140001285:	mov    rbx,QWORD PTR [r11+0x10]
   140001289:	mov    rsi,QWORD PTR [r11+0x18]
   14000128d:	mov    rsp,r11
   140001290:	pop    rdi
   140001291:	ret    
   140001292:	int3   
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	rex push rbx
   1400012a2:	sub    rsp,0x60
   1400012a6:	xor    eax,eax
   1400012a8:	lea    rdx,[rsp+0x30]
   1400012ad:	mov    rbx,r9
   1400012b0:	mov    DWORD PTR [rsp+0x20],0x0
   1400012b8:	mov    DWORD PTR [rsp+0x30],0x28
   1400012c0:	mov    DWORD PTR [rsp+0x24],eax
   1400012c4:	mov    DWORD PTR [rsp+0x28],eax
   1400012c8:	mov    DWORD PTR [rsp+0x2c],eax
   1400012cc:	mov    DWORD PTR [rsp+0x34],eax
   1400012d0:	mov    DWORD PTR [rsp+0x38],eax
   1400012d4:	mov    DWORD PTR [rsp+0x3c],eax
   1400012d8:	mov    DWORD PTR [rsp+0x40],eax
   1400012dc:	mov    DWORD PTR [rsp+0x44],eax
   1400012e0:	mov    DWORD PTR [rsp+0x48],eax
   1400012e4:	mov    DWORD PTR [rsp+0x4c],eax
   1400012e8:	mov    DWORD PTR [rsp+0x50],eax
   1400012ec:	mov    DWORD PTR [rsp+0x54],eax
   1400012f0:	call   QWORD PTR [rip+0x8022]        # 0x140009318
   1400012f6:	lea    rdx,[rsp+0x34]
   1400012fb:	lea    rcx,[rsp+0x44]
   140001300:	call   QWORD PTR [rip+0x7fea]        # 0x1400092f0
   140001306:	test   eax,eax
   140001308:	jne    0x1400013c5
   14000130e:	mov    eax,DWORD PTR [rsp+0x34]
   140001312:	cmp    DWORD PTR [rsp+0x44],eax
   140001316:	jne    0x140001322
   140001318:	mov    eax,DWORD PTR [rsp+0x3c]
   14000131c:	cmp    DWORD PTR [rsp+0x4c],eax
   140001320:	je     0x140001336
   140001322:	mov    eax,DWORD PTR [rsp+0x38]
   140001326:	cmp    DWORD PTR [rsp+0x48],eax
   14000132a:	jne    0x14000134d
   14000132c:	mov    eax,DWORD PTR [rsp+0x40]
   140001330:	cmp    DWORD PTR [rsp+0x50],eax
   140001334:	jne    0x14000134d
   140001336:	lea    r8,[rsp+0x44]
   14000133b:	lea    rdx,[rsp+0x34]
   140001340:	lea    rcx,[rsp+0x20]
   140001345:	call   QWORD PTR [rip+0x7fd5]        # 0x140009320
   14000134b:	jmp    0x1400013ad
   14000134d:	lea    rcx,[rip+0x8134]        # 0x140009488
   140001354:	xor    edx,edx
   140001356:	call   QWORD PTR [rip+0x7ff4]        # 0x140009350
   14000135c:	lea    rdx,[rsp+0x20]
   140001361:	mov    rcx,rax
   140001364:	call   QWORD PTR [rip+0x7fee]        # 0x140009358
   14000136a:	mov    r8d,DWORD PTR [rsp+0x38]
   14000136f:	mov    edx,DWORD PTR [rsp+0x34]
   140001373:	sub    r8d,DWORD PTR [rsp+0x24]
   140001378:	sub    edx,DWORD PTR [rsp+0x20]
   14000137c:	lea    rcx,[rsp+0x20]
   140001381:	call   QWORD PTR [rip+0x7fb9]        # 0x140009340
   140001387:	mov    r11d,DWORD PTR [rsp+0x28]
   14000138c:	mov    eax,DWORD PTR [rsp+0x3c]
   140001390:	mov    ecx,DWORD PTR [rsp+0x2c]
   140001394:	cmp    r11d,eax
   140001397:	cmovg  r11d,eax
   14000139b:	mov    eax,DWORD PTR [rsp+0x40]
   14000139f:	cmp    ecx,eax
   1400013a1:	mov    DWORD PTR [rsp+0x28],r11d
   1400013a6:	cmovg  ecx,eax
   1400013a9:	mov    DWORD PTR [rsp+0x2c],ecx
   1400013ad:	lea    rcx,[rsp+0x20]
   1400013b2:	call   0x140001000
   1400013b7:	mov    DWORD PTR [rbx],0x1
   1400013bd:	xor    eax,eax
   1400013bf:	add    rsp,0x60
   1400013c3:	pop    rbx
   1400013c4:	ret    
   1400013c5:	test   rbx,rbx
   1400013c8:	je     0x140001450
   1400013ce:	cmp    DWORD PTR [rbx],0x0
   1400013d1:	je     0x140001450
   1400013d3:	test   BYTE PTR [rsp+0x54],0x1
   1400013d8:	je     0x140001450
   1400013da:	lea    rcx,[rip+0x80a7]        # 0x140009488
   1400013e1:	xor    edx,edx
   1400013e3:	call   QWORD PTR [rip+0x7f67]        # 0x140009350
   1400013e9:	lea    rdx,[rsp+0x20]
   1400013ee:	mov    rcx,rax
   1400013f1:	call   QWORD PTR [rip+0x7f61]        # 0x140009358
   1400013f7:	mov    r11d,DWORD PTR [rsp+0x2c]
   1400013fc:	mov    edx,DWORD PTR [rsp+0x28]
   140001400:	sub    r11d,DWORD PTR [rsp+0x24]
   140001405:	sub    edx,DWORD PTR [rsp+0x20]
   140001409:	cmp    edx,r11d
   14000140c:	jge    0x140001419
   14000140e:	mov    eax,DWORD PTR [rsp+0x38]
   140001412:	mov    r11d,DWORD PTR [rsp+0x40]
   140001417:	jmp    0x140001424
   140001419:	mov    eax,DWORD PTR [rsp+0x40]
   14000141d:	mov    edx,DWORD PTR [rsp+0x3c]
   140001421:	sub    eax,r11d
   140001424:	mov    ecx,DWORD PTR [rsp+0x34]
   140001428:	mov    DWORD PTR [rsp+0x24],eax
   14000142c:	mov    DWORD PTR [rsp+0x20],ecx
   140001430:	add    ecx,edx
   140001432:	mov    DWORD PTR [rsp+0x28],ecx
   140001436:	lea    ecx,[r11+rax*1]
   14000143a:	mov    DWORD PTR [rsp+0x2c],ecx
   14000143e:	lea    rcx,[rsp+0x20]
   140001443:	call   0x140001000
   140001448:	xor    eax,eax
   14000144a:	add    rsp,0x60
   14000144e:	pop    rbx
   14000144f:	ret    
   140001450:	mov    eax,0x1
   140001455:	add    rsp,0x60
   140001459:	pop    rbx
   14000145a:	ret    
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	test   rcx,rcx
   140001467:	je     0x140001487
   140001469:	mov    rcx,QWORD PTR [rip+0xc398]        # 0x14000d808
   140001470:	or     edx,0xffffffff
   140001473:	call   QWORD PTR [rip+0x7c6f]        # 0x1400090e8
   140001479:	test   eax,eax
   14000147b:	jne    0x140001487
   14000147d:	call   0x140001a34
   140001482:	call   0x140001a2e
   140001487:	mov    rcx,QWORD PTR [rip+0xc37a]        # 0x14000d808
   14000148e:	call   QWORD PTR [rip+0x7c4c]        # 0x1400090e0
   140001494:	xor    eax,eax
   140001496:	add    rsp,0x28
   14000149a:	ret    
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    r11,rsp
   1400014a3:	mov    QWORD PTR [r11+0x18],rbx
   1400014a7:	mov    QWORD PTR [r11+0x20],rsi
   1400014ab:	push   rdi
   1400014ac:	sub    rsp,0xc0
   1400014b3:	mov    rax,QWORD PTR [rip+0xaf2e]        # 0x14000c3e8
   1400014ba:	xor    rax,rsp
   1400014bd:	mov    QWORD PTR [rsp+0xb0],rax
   1400014c5:	xor    eax,eax
   1400014c7:	xor    esi,esi
   1400014c9:	lea    r8,[rip+0x8050]        # 0x140009520
   1400014d0:	mov    WORD PTR [rsp+0x60],si
   1400014d5:	mov    QWORD PTR [r11-0x66],rax
   1400014d9:	mov    QWORD PTR [r11-0x5e],rax
   1400014dd:	mov    QWORD PTR [r11-0x56],rax
   1400014e1:	mov    QWORD PTR [r11-0x4e],rax
   1400014e5:	mov    QWORD PTR [r11-0x46],rax
   1400014e9:	mov    QWORD PTR [r11-0x3e],rax
   1400014ed:	mov    QWORD PTR [r11-0x36],rax
   1400014f1:	mov    QWORD PTR [r11-0x2e],rax
   1400014f5:	mov    QWORD PTR [r11-0x26],rax
   1400014f9:	mov    DWORD PTR [r11-0x1e],eax
   1400014fd:	mov    WORD PTR [r11-0x1a],ax
   140001502:	lea    rax,[r11-0x68]
   140001506:	mov    edi,edx
   140001508:	mov    rbx,rcx
   14000150b:	sub    r8,rax
   14000150e:	lea    edx,[rsi+0x28]
   140001511:	lea    rcx,[r11-0x68]
   140001515:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001520:	lea    rax,[rdx+0x7fffffd6]
   140001527:	test   rax,rax
   14000152a:	je     0x140001545
   14000152c:	movzx  eax,WORD PTR [r8+rcx*1]
   140001531:	test   ax,ax
   140001534:	je     0x140001545
   140001536:	mov    WORD PTR [rcx],ax
   140001539:	add    rcx,0x2
   14000153d:	sub    rdx,0x1
   140001541:	jne    0x140001520
   140001543:	jmp    0x14000154a
   140001545:	test   rdx,rdx
   140001548:	jne    0x14000154e
   14000154a:	sub    rcx,0x2
   14000154e:	mov    WORD PTR [rcx],si
   140001551:	lea    r8,[rip+0x7f58]        # 0x1400094b0
   140001558:	xor    edx,edx
   14000155a:	mov    ecx,0x100000
   14000155f:	mov    QWORD PTR [rip+0xd0ca],rbx        # 0x14000e630
   140001566:	call   QWORD PTR [rip+0x7b8c]        # 0x1400090f8
   14000156c:	mov    QWORD PTR [rip+0xc295],rax        # 0x14000d808
   140001573:	call   QWORD PTR [rip+0x7b77]        # 0x1400090f0
   140001579:	mov    QWORD PTR [rsp+0x58],rsi
   14000157e:	mov    QWORD PTR [rsp+0x50],rbx
   140001583:	mov    QWORD PTR [rsp+0x48],rsi
   140001588:	mov    QWORD PTR [rsp+0x40],rsi
   14000158d:	mov    DWORD PTR [rsp+0x38],esi
   140001591:	mov    DWORD PTR [rsp+0x30],0x80000000
   140001599:	lea    r8,[rsp+0x60]
   14000159e:	lea    rdx,[rip+0xaa63]        # 0x14000c008
   1400015a5:	mov    r9d,0xcf0000
   1400015ab:	xor    ecx,ecx
   1400015ad:	mov    DWORD PTR [rsp+0x28],esi
   1400015b1:	mov    DWORD PTR [rsp+0x20],0x80000000
   1400015b9:	call   QWORD PTR [rip+0x7d19]        # 0x1400092d8
   1400015bf:	mov    rbx,rax
   1400015c2:	test   rax,rax
   1400015c5:	je     0x1400015e2
   1400015c7:	mov    edx,edi
   1400015c9:	mov    rcx,rax
   1400015cc:	call   QWORD PTR [rip+0x7d0e]        # 0x1400092e0
   1400015d2:	mov    rcx,rbx
   1400015d5:	call   QWORD PTR [rip+0x7d0d]        # 0x1400092e8
   1400015db:	mov    eax,0x1
   1400015e0:	jmp    0x1400015e4
   1400015e2:	mov    eax,esi
   1400015e4:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400015ec:	xor    rcx,rsp
   1400015ef:	call   0x140001ad0
   1400015f4:	lea    r11,[rsp+0xc0]
   1400015fc:	mov    rbx,QWORD PTR [r11+0x20]
   140001600:	mov    rsi,QWORD PTR [r11+0x28]
   140001604:	mov    rsp,r11
   140001607:	pop    rdi
   140001608:	ret    
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	rex push rbx
   140001612:	sub    rsp,0x30
   140001616:	mov    eax,edx
   140001618:	mov    rbx,rcx
   14000161b:	sub    eax,0x1
   14000161e:	je     0x140001696
   140001620:	cmp    eax,0x1
   140001623:	je     0x140001631
   140001625:	add    rsp,0x30
   140001629:	pop    rbx
   14000162a:	rex.W jmp QWORD PTR [rip+0x7c8f]        # 0x1400092c0
   140001631:	lea    r9,[rsp+0x48]
   140001636:	lea    r8,[rip+0xfffffffffffffc63]        # 0x1400012a0
   14000163d:	xor    edx,edx
   14000163f:	xor    ecx,ecx
   140001641:	mov    DWORD PTR [rsp+0x48],0x0
   140001649:	call   QWORD PTR [rip+0x7c79]        # 0x1400092c8
   14000164f:	cmp    DWORD PTR [rsp+0x48],0x0
   140001654:	jne    0x140001674
   140001656:	lea    r9,[rsp+0x48]
   14000165b:	lea    r8,[rip+0xfffffffffffffc3e]        # 0x1400012a0
   140001662:	xor    edx,edx
   140001664:	xor    ecx,ecx
   140001666:	mov    DWORD PTR [rsp+0x48],0x1
   14000166e:	call   QWORD PTR [rip+0x7c54]        # 0x1400092c8
   140001674:	mov    rcx,QWORD PTR [rip+0xc18d]        # 0x14000d808
   14000167b:	test   rcx,rcx
   14000167e:	je     0x140001686
   140001680:	call   QWORD PTR [rip+0x7a5a]        # 0x1400090e0
   140001686:	xor    ecx,ecx
   140001688:	call   QWORD PTR [rip+0x7c42]        # 0x1400092d0
   14000168e:	xor    eax,eax
   140001690:	add    rsp,0x30
   140001694:	pop    rbx
   140001695:	ret    
   140001696:	call   QWORD PTR [rip+0x7bdc]        # 0x140009278
   14000169c:	lea    r11,[rsp+0x48]
   1400016a1:	lea    r8,[rip+0xfffffffffffffdb8]        # 0x140001460
   1400016a8:	mov    QWORD PTR [rsp+0x28],r11
   1400016ad:	mov    r9,rbx
   1400016b0:	xor    edx,edx
   1400016b2:	xor    ecx,ecx
   1400016b4:	mov    DWORD PTR [rsp+0x20],0x0
   1400016bc:	call   QWORD PTR [rip+0x7a3e]        # 0x140009100
   1400016c2:	test   rax,rax
   1400016c5:	jne    0x1400016d4
   1400016c7:	mov    rcx,QWORD PTR [rip+0xc13a]        # 0x14000d808
   1400016ce:	call   QWORD PTR [rip+0x7a0c]        # 0x1400090e0
   1400016d4:	xor    eax,eax
   1400016d6:	add    rsp,0x30
   1400016da:	pop    rbx
   1400016db:	ret    
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016e5:	push   rdi
   1400016e6:	sub    rsp,0x70
   1400016ea:	xor    edx,edx
   1400016ec:	mov    rbx,rcx
   1400016ef:	lea    rcx,[rsp+0x24]
   1400016f4:	lea    r8d,[rdx+0x4c]
   1400016f8:	call   0x140001b00
   1400016fd:	xor    edi,edi
   1400016ff:	lea    rax,[rip+0xffffffffffffff0a]        # 0x140001610
   140001706:	mov    edx,0x7f00
   14000170b:	xor    ecx,ecx
   14000170d:	mov    DWORD PTR [rsp+0x20],0x50
   140001715:	mov    QWORD PTR [rsp+0x28],rax
   14000171a:	mov    DWORD PTR [rsp+0x24],0x3
   140001722:	mov    DWORD PTR [rsp+0x30],edi
   140001726:	mov    DWORD PTR [rsp+0x34],edi
   14000172a:	mov    QWORD PTR [rsp+0x38],rbx
   14000172f:	mov    QWORD PTR [rsp+0x40],rdi
   140001734:	call   QWORD PTR [rip+0x7b76]        # 0x1400092b0
   14000173a:	lea    rcx,[rsp+0x20]
   14000173f:	mov    QWORD PTR [rsp+0x50],0x6
   140001748:	mov    QWORD PTR [rsp+0x48],rax
   14000174d:	lea    rax,[rip+0xa8b4]        # 0x14000c008
   140001754:	mov    QWORD PTR [rsp+0x58],rdi
   140001759:	mov    QWORD PTR [rsp+0x60],rax
   14000175e:	mov    QWORD PTR [rsp+0x68],rdi
   140001763:	call   QWORD PTR [rip+0x7b4f]        # 0x1400092b8
   140001769:	mov    rbx,QWORD PTR [rsp+0x80]
   140001771:	add    rsp,0x70
   140001775:	pop    rdi
   140001776:	ret    
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x18],rbp
   140001785:	push   rsi
   140001786:	push   rdi
   140001787:	push   r12
   140001789:	sub    rsp,0x280
   140001790:	mov    rax,QWORD PTR [rip+0xac51]        # 0x14000c3e8
   140001797:	xor    rax,rsp
   14000179a:	mov    QWORD PTR [rsp+0x270],rax
   1400017a2:	xor    eax,eax
   1400017a4:	mov    rdi,rcx
   1400017a7:	lea    r8,[rip+0x7e12]        # 0x1400095c0
   1400017ae:	xor    r12d,r12d
   1400017b1:	xor    edx,edx
   1400017b3:	xor    ecx,ecx
   1400017b5:	mov    ebp,r9d
   1400017b8:	mov    QWORD PTR [rsp+0x38],rax
   1400017bd:	mov    QWORD PTR [rsp+0x40],rax
   1400017c2:	mov    QWORD PTR [rsp+0x30],r12
   1400017c7:	mov    QWORD PTR [rsp+0x48],rax
   1400017cc:	mov    QWORD PTR [rsp+0x50],rax
   1400017d1:	mov    QWORD PTR [rsp+0x58],rax
   1400017d6:	call   QWORD PTR [rip+0x7964]        # 0x140009140
   1400017dc:	mov    rsi,rax
   1400017df:	test   rax,rax
   1400017e2:	je     0x140001a06
   1400017e8:	call   QWORD PTR [rip+0x7902]        # 0x1400090f0
   1400017ee:	cmp    eax,0xb7
   1400017f3:	je     0x1400019fd
   1400017f9:	call   QWORD PTR [rip+0x78f1]        # 0x1400090f0
   1400017ff:	cmp    eax,0x5
   140001802:	je     0x1400019fd
   140001808:	lea    rcx,[rsp+0x62]
   14000180d:	xor    edx,edx
   14000180f:	mov    r8d,0x206
   140001815:	mov    DWORD PTR [rsp+0x20],r12d
   14000181a:	mov    QWORD PTR [rsp+0x28],r12
   14000181f:	mov    WORD PTR [rsp+0x60],r12w
   140001825:	call   0x140001b00
   14000182a:	call   QWORD PTR [rip+0x7908]        # 0x140009138
   140001830:	lea    rdx,[rsp+0x20]
   140001835:	mov    rcx,rax
   140001838:	call   QWORD PTR [rip+0x78f2]        # 0x140009130
   14000183e:	mov    r11d,DWORD PTR [rsp+0x20]
   140001843:	test   r11d,r11d
   140001846:	je     0x140001860
   140001848:	lea    rcx,[rsp+0x28]
   14000184d:	call   QWORD PTR [rip+0x78d5]        # 0x140009128
   140001853:	test   eax,eax
   140001855:	je     0x1400019fd
   14000185b:	mov    r11d,DWORD PTR [rsp+0x20]
   140001860:	lea    rax,[rip+0x7d39]        # 0x1400095a0
   140001867:	test   r11d,r11d
   14000186a:	lea    rcx,[rip+0x7d0f]        # 0x140009580
   140001871:	mov    QWORD PTR [rsp+0x2a8],rbx
   140001879:	mov    ebx,0x104
   14000187e:	lea    rdx,[rsp+0x60]
   140001883:	cmovne rcx,rax
   140001887:	mov    r8d,ebx
   14000188a:	call   QWORD PTR [rip+0x7890]        # 0x140009120
   140001890:	mov    r11,rbx
   140001893:	lea    rax,[rsp+0x60]
   140001898:	cmp    WORD PTR [rax],r12w
   14000189c:	je     0x1400018aa
   14000189e:	add    rax,0x2
   1400018a2:	sub    r11,0x1
   1400018a6:	jne    0x140001898
   1400018a8:	jmp    0x140001904
   1400018aa:	test   r11,r11
   1400018ad:	je     0x140001904
   1400018af:	mov    rdx,rbx
   1400018b2:	mov    rcx,rbx
   1400018b5:	sub    rdx,r11
   1400018b8:	sub    rcx,rdx
   1400018bb:	lea    rax,[rsp+rdx*2+0x60]
   1400018c0:	je     0x1400018fc
   1400018c2:	lea    r9,[rip+0x7caf]        # 0x140009578
   1400018c9:	lea    rdx,[rcx+rdx*1+0x7ffffefb]
   1400018d1:	sub    r9,rax
   1400018d4:	test   rdx,rdx
   1400018d7:	je     0x1400018f7
   1400018d9:	movzx  r8d,WORD PTR [r9+rax*1]
   1400018de:	test   r8w,r8w
   1400018e2:	je     0x1400018f7
   1400018e4:	mov    WORD PTR [rax],r8w
   1400018e8:	add    rax,0x2
   1400018ec:	dec    rdx
   1400018ef:	sub    rcx,0x1
   1400018f3:	jne    0x1400018d4
   1400018f5:	jmp    0x1400018fc
   1400018f7:	test   rcx,rcx
   1400018fa:	jne    0x140001900
   1400018fc:	sub    rax,0x2
   140001900:	mov    WORD PTR [rax],r12w
   140001904:	mov    rcx,rbx
   140001907:	lea    rax,[rsp+0x60]
   14000190c:	nop    DWORD PTR [rax+0x0]
   140001910:	cmp    WORD PTR [rax],r12w
   140001914:	je     0x140001922
   140001916:	add    rax,0x2
   14000191a:	sub    rcx,0x1
   14000191e:	jne    0x140001910
   140001920:	jmp    0x14000197e
   140001922:	test   rcx,rcx
   140001925:	je     0x14000197e
   140001927:	mov    rdx,rbx
   14000192a:	sub    rdx,rcx
   14000192d:	sub    rbx,rdx
   140001930:	lea    rax,[rsp+rdx*2+0x60]
   140001935:	je     0x140001976
   140001937:	lea    r8,[rip+0x7c02]        # 0x140009540
   14000193e:	lea    rcx,[rbx+rdx*1+0x7ffffefb]
   140001946:	sub    r8,rax
   140001949:	nop    DWORD PTR [rax+0x0]
   140001950:	test   rcx,rcx
   140001953:	je     0x140001971
   140001955:	movzx  edx,WORD PTR [r8+rax*1]
   14000195a:	test   dx,dx
   14000195d:	je     0x140001971
   14000195f:	mov    WORD PTR [rax],dx
   140001962:	add    rax,0x2
   140001966:	dec    rcx
   140001969:	sub    rbx,0x1
   14000196d:	jne    0x140001950
   14000196f:	jmp    0x140001976
   140001971:	test   rbx,rbx
   140001974:	jne    0x14000197a
   140001976:	sub    rax,0x2
   14000197a:	mov    WORD PTR [rax],r12w
   14000197e:	lea    rcx,[rsp+0x60]
   140001983:	call   QWORD PTR [rip+0x778f]        # 0x140009118
   140001989:	lea    rcx,[rsp+0x60]
   14000198e:	call   QWORD PTR [rip+0x777c]        # 0x140009110
   140001994:	mov    rcx,rdi
   140001997:	call   0x1400016e0
   14000199c:	mov    edx,ebp
   14000199e:	mov    rcx,rdi
   1400019a1:	call   0x1400014a0
   1400019a6:	mov    rbx,QWORD PTR [rsp+0x2a8]
   1400019ae:	test   eax,eax
   1400019b0:	je     0x1400019fd
   1400019b2:	lea    rcx,[rsp+0x30]
   1400019b7:	xor    r9d,r9d
   1400019ba:	xor    r8d,r8d
   1400019bd:	xor    edx,edx
   1400019bf:	call   QWORD PTR [rip+0x78d3]        # 0x140009298
   1400019c5:	test   eax,eax
   1400019c7:	je     0x1400019fd
   1400019c9:	nop    DWORD PTR [rax+0x0]
   1400019d0:	lea    rcx,[rsp+0x30]
   1400019d5:	call   QWORD PTR [rip+0x78c5]        # 0x1400092a0
   1400019db:	lea    rcx,[rsp+0x30]
   1400019e0:	call   QWORD PTR [rip+0x78c2]        # 0x1400092a8
   1400019e6:	lea    rcx,[rsp+0x30]
   1400019eb:	xor    r9d,r9d
   1400019ee:	xor    r8d,r8d
   1400019f1:	xor    edx,edx
   1400019f3:	call   QWORD PTR [rip+0x789f]        # 0x140009298
   1400019f9:	test   eax,eax
   1400019fb:	jne    0x1400019d0
   1400019fd:	mov    rcx,rsi
   140001a00:	call   QWORD PTR [rip+0x76da]        # 0x1400090e0
   140001a06:	mov    eax,DWORD PTR [rsp+0x40]
   140001a0a:	mov    rcx,QWORD PTR [rsp+0x270]
   140001a12:	xor    rcx,rsp
   140001a15:	call   0x140001ad0
   140001a1a:	mov    rbp,QWORD PTR [rsp+0x2b0]
   140001a22:	add    rsp,0x280
   140001a29:	pop    r12
   140001a2b:	pop    rdi
   140001a2c:	pop    rsi
   140001a2d:	ret    
   140001a2e:	jmp    QWORD PTR [rip+0x7854]        # 0x140009288
   140001a34:	jmp    QWORD PTR [rip+0x7846]        # 0x140009280
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	rex push rbx
   140001a3e:	sub    rsp,0x20
   140001a42:	mov    r11d,DWORD PTR [r8]
   140001a45:	mov    rbx,rdx
   140001a48:	mov    r9,rcx
   140001a4b:	and    r11d,0xfffffff8
   140001a4f:	test   BYTE PTR [r8],0x4
   140001a53:	mov    r10,rcx
   140001a56:	je     0x140001a6b
   140001a58:	mov    eax,DWORD PTR [r8+0x8]
   140001a5c:	movsxd r10,DWORD PTR [r8+0x4]
   140001a60:	neg    eax
   140001a62:	add    r10,rcx
   140001a65:	movsxd rcx,eax
   140001a68:	and    r10,rcx
   140001a6b:	movsxd rax,r11d
   140001a6e:	mov    rdx,QWORD PTR [rax+r10*1]
   140001a72:	mov    rax,QWORD PTR [rbx+0x10]
   140001a76:	mov    ecx,DWORD PTR [rax+0x8]
   140001a79:	add    rcx,QWORD PTR [rbx+0x8]
   140001a7d:	test   BYTE PTR [rcx+0x3],0xf
   140001a81:	je     0x140001a8f
   140001a83:	movzx  eax,BYTE PTR [rcx+0x3]
   140001a87:	and    eax,0xfffffff0
   140001a8a:	cdqe   
   140001a8c:	add    r9,rax
   140001a8f:	xor    r9,rdx
   140001a92:	mov    rcx,r9
   140001a95:	add    rsp,0x20
   140001a99:	pop    rbx
   140001a9a:	jmp    0x140001ad0
   140001a9f:	int3   
   140001aa0:	sub    rsp,0x28
   140001aa4:	mov    r8,QWORD PTR [r9+0x38]
   140001aa8:	mov    rcx,rdx
   140001aab:	mov    rdx,r9
   140001aae:	call   0x140001a3c
   140001ab3:	mov    eax,0x1
   140001ab8:	add    rsp,0x28
   140001abc:	ret    
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	int3   
   140001ac1:	int3   
   140001ac2:	int3   
   140001ac3:	int3   
   140001ac4:	int3   
   140001ac5:	int3   
   140001ac6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001ad0:	cmp    rcx,QWORD PTR [rip+0xa911]        # 0x14000c3e8
   140001ad7:	jne    0x140001aea
   140001ad9:	rol    rcx,0x10
   140001add:	test   cx,0xffff
   140001ae2:	jne    0x140001ae6
   140001ae4:	repz ret 
   140001ae6:	ror    rcx,0x10
   140001aea:	jmp    0x140002110
   140001aef:	int3   
   140001af0:	int3   
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001b00:	mov    rax,rcx
   140001b03:	cmp    r8,0x8
   140001b07:	jb     0x140001b5c
   140001b09:	movzx  edx,dl
   140001b0c:	movabs r9,0x101010101010101
   140001b16:	imul   rdx,r9
   140001b1a:	cmp    r8,0x40
   140001b1e:	jb     0x140001b3e
   140001b20:	neg    rcx
   140001b23:	and    ecx,0x7
   140001b26:	je     0x140001b2e
   140001b28:	sub    r8,rcx
   140001b2b:	mov    QWORD PTR [rax],rdx
   140001b2e:	add    rcx,rax
   140001b31:	mov    r9,r8
   140001b34:	and    r8,0x3f
   140001b38:	shr    r9,0x6
   140001b3c:	jne    0x140001b77
   140001b3e:	mov    r9,r8
   140001b41:	and    r8,0x7
   140001b45:	shr    r9,0x3
   140001b49:	je     0x140001b5c
   140001b4b:	data16 data16 xchg ax,ax
   140001b4f:	nop
   140001b50:	mov    QWORD PTR [rcx],rdx
   140001b53:	add    rcx,0x8
   140001b57:	dec    r9
   140001b5a:	jne    0x140001b50
   140001b5c:	test   r8,r8
   140001b5f:	je     0x140001b6b
   140001b61:	mov    BYTE PTR [rcx],dl
   140001b63:	inc    rcx
   140001b66:	dec    r8
   140001b69:	jne    0x140001b61
   140001b6b:	ret    
   140001b6c:	nop    DWORD PTR [rax+0x0]
   140001b70:	data16 data16 xchg ax,ax
   140001b74:	data16 xchg ax,ax
   140001b77:	cmp    r9,0x1c00
   140001b7e:	jae    0x140001bb0
   140001b80:	mov    QWORD PTR [rcx],rdx
   140001b83:	mov    QWORD PTR [rcx+0x8],rdx
   140001b87:	mov    QWORD PTR [rcx+0x10],rdx
   140001b8b:	add    rcx,0x40
   140001b8f:	mov    QWORD PTR [rcx-0x28],rdx
   140001b93:	mov    QWORD PTR [rcx-0x20],rdx
   140001b97:	dec    r9
   140001b9a:	mov    QWORD PTR [rcx-0x18],rdx
   140001b9e:	mov    QWORD PTR [rcx-0x10],rdx
   140001ba2:	mov    QWORD PTR [rcx-0x8],rdx
   140001ba6:	jne    0x140001b80
   140001ba8:	jmp    0x140001b3e
   140001baa:	nop    WORD PTR [rax+rax*1+0x0]
   140001bb0:	movnti QWORD PTR [rcx],rdx
   140001bb4:	movnti QWORD PTR [rcx+0x8],rdx
   140001bb9:	movnti QWORD PTR [rcx+0x10],rdx
   140001bbe:	add    rcx,0x40
   140001bc2:	movnti QWORD PTR [rcx-0x28],rdx
   140001bc7:	movnti QWORD PTR [rcx-0x20],rdx
   140001bcc:	dec    r9
   140001bcf:	movnti QWORD PTR [rcx-0x18],rdx
   140001bd4:	movnti QWORD PTR [rcx-0x10],rdx
   140001bd9:	movnti QWORD PTR [rcx-0x8],rdx
   140001bde:	jne    0x140001bb0
   140001be0:	lock or BYTE PTR [rsp],0x0
   140001be5:	jmp    0x140001b3e
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	mov    QWORD PTR [rsp+0x10],rbx
   140001bf1:	mov    QWORD PTR [rsp+0x18],rsi
   140001bf6:	push   rdi
   140001bf7:	sub    rsp,0xa0
   140001bfe:	lea    rcx,[rsp+0x30]
   140001c03:	call   QWORD PTR [rip+0x7547]        # 0x140009150
   140001c09:	nop
   140001c0a:	mov    eax,0x5a4d
   140001c0f:	cmp    WORD PTR [rip+0xffffffffffffe3ea],ax        # 0x140000000
   140001c16:	jne    0x140001c7a
   140001c18:	movsxd rax,DWORD PTR [rip+0xffffffffffffe41d]        # 0x14000003c
   140001c1f:	lea    rsi,[rip+0xffffffffffffe3da]        # 0x140000000
   140001c26:	add    rax,rsi
   140001c29:	cmp    DWORD PTR [rax],0x4550
   140001c2f:	je     0x140001c3c
   140001c31:	xor    ebx,ebx
   140001c33:	mov    DWORD PTR [rsp+0xb0],ebx
   140001c3a:	jmp    0x140001c8a
   140001c3c:	mov    ecx,0x20b
   140001c41:	cmp    WORD PTR [rax+0x18],cx
   140001c45:	je     0x140001c52
   140001c47:	xor    ebx,ebx
   140001c49:	mov    DWORD PTR [rsp+0xb0],ebx
   140001c50:	jmp    0x140001c8a
   140001c52:	cmp    DWORD PTR [rax+0x84],0xe
   140001c59:	ja     0x140001c66
   140001c5b:	xor    ebx,ebx
   140001c5d:	mov    DWORD PTR [rsp+0xb0],ebx
   140001c64:	jmp    0x140001c8a
   140001c66:	xor    ebx,ebx
   140001c68:	cmp    DWORD PTR [rax+0xf8],ebx
   140001c6e:	setne  bl
   140001c71:	mov    DWORD PTR [rsp+0xb0],ebx
   140001c78:	jmp    0x140001c8a
   140001c7a:	xor    ebx,ebx
   140001c7c:	mov    DWORD PTR [rsp+0xb0],ebx
   140001c83:	lea    rsi,[rip+0xffffffffffffe376]        # 0x140000000
   140001c8a:	mov    edi,0x1
   140001c8f:	mov    ecx,edi
   140001c91:	call   0x140003968
   140001c96:	test   eax,eax
   140001c98:	jne    0x140001cbb
   140001c9a:	cmp    DWORD PTR [rip+0xbb80],edi        # 0x14000d820
   140001ca0:	jne    0x140001ca7
   140001ca2:	call   0x1400028c8
   140001ca7:	mov    ecx,0x1c
   140001cac:	call   0x1400026a0
   140001cb1:	mov    ecx,0xff
   140001cb6:	call   0x140002324
   140001cbb:	call   0x1400038e4
   140001cc0:	test   eax,eax
   140001cc2:	jne    0x140001ce5
   140001cc4:	cmp    DWORD PTR [rip+0xbb56],edi        # 0x14000d820
   140001cca:	jne    0x140001cd1
   140001ccc:	call   0x1400028c8
   140001cd1:	mov    ecx,0x10
   140001cd6:	call   0x1400026a0
   140001cdb:	mov    ecx,0xff
   140001ce0:	call   0x140002324
   140001ce5:	call   0x14000359c
   140001cea:	nop
   140001ceb:	call   0x1400032ac
   140001cf0:	test   eax,eax
   140001cf2:	jns    0x140001cfe
   140001cf4:	mov    ecx,0x1b
   140001cf9:	call   0x1400022b8
   140001cfe:	call   QWORD PTR [rip+0x7444]        # 0x140009148
   140001d04:	mov    QWORD PTR [rip+0xdbad],rax        # 0x14000f8b8
   140001d0b:	call   0x1400030f8
   140001d10:	mov    QWORD PTR [rip+0xbaf9],rax        # 0x14000d810
   140001d17:	call   0x140003000
   140001d1c:	test   eax,eax
   140001d1e:	jns    0x140001d2a
   140001d20:	mov    ecx,0x8
   140001d25:	call   0x1400022b8
   140001d2a:	call   0x140002d00
   140001d2f:	test   eax,eax
   140001d31:	jns    0x140001d3d
   140001d33:	mov    ecx,0x9
   140001d38:	call   0x1400022b8
   140001d3d:	mov    ecx,edi
   140001d3f:	call   0x1400023c4
   140001d44:	test   eax,eax
   140001d46:	je     0x140001d4f
   140001d48:	mov    ecx,eax
   140001d4a:	call   0x1400022b8
   140001d4f:	call   0x140002c84
   140001d54:	test   BYTE PTR [rsp+0x6c],dil
   140001d59:	movzx  edx,WORD PTR [rsp+0x70]
   140001d5e:	mov    r9d,0xa
   140001d64:	cmovne r9d,edx
   140001d68:	mov    r8,rax
   140001d6b:	xor    edx,edx
   140001d6d:	mov    rcx,rsi
   140001d70:	call   0x140001780
   140001d75:	mov    edi,eax
   140001d77:	mov    DWORD PTR [rsp+0x20],eax
   140001d7b:	test   ebx,ebx
   140001d7d:	jne    0x140001d86
   140001d7f:	mov    ecx,eax
   140001d81:	call   0x140002600
   140001d86:	call   0x140002618
   140001d8b:	jmp    0x140001da7
   140001d8d:	mov    edi,eax
   140001d8f:	cmp    DWORD PTR [rsp+0xb0],0x0
   140001d97:	jne    0x140001da1
   140001d99:	mov    ecx,eax
   140001d9b:	call   0x14000260c
   140001da0:	int3   
   140001da1:	call   0x140002628
   140001da6:	nop
   140001da7:	mov    eax,edi
   140001da9:	jmp    0x140001db0
   140001dab:	mov    eax,0xff
   140001db0:	lea    r11,[rsp+0xa0]
   140001db8:	mov    rbx,QWORD PTR [r11+0x18]
   140001dbc:	mov    rsi,QWORD PTR [r11+0x20]
   140001dc0:	mov    rsp,r11
   140001dc3:	pop    rdi
   140001dc4:	ret    
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	sub    rsp,0x28
   140001dcc:	call   0x1400039b4
   140001dd1:	add    rsp,0x28
   140001dd5:	jmp    0x140001bec
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	rex push rbx
   140001dde:	sub    rsp,0x20
   140001de2:	mov    rbx,rcx
   140001de5:	mov    BYTE PTR [rcx+0x18],0x0
   140001de9:	test   rdx,rdx
   140001dec:	jne    0x140001e74
   140001df2:	call   0x140003788
   140001df7:	mov    QWORD PTR [rbx+0x10],rax
   140001dfb:	mov    rdx,QWORD PTR [rax+0xc0]
   140001e02:	mov    QWORD PTR [rbx],rdx
   140001e05:	mov    rcx,QWORD PTR [rax+0xb8]
   140001e0c:	mov    QWORD PTR [rbx+0x8],rcx
   140001e10:	mov    rcx,QWORD PTR [rip+0xb3c9]        # 0x14000d1e0
   140001e17:	cmp    rdx,rcx
   140001e1a:	je     0x140001e32
   140001e1c:	mov    eax,DWORD PTR [rax+0xc8]
   140001e22:	test   DWORD PTR [rip+0xb240],eax        # 0x14000d068
   140001e28:	jne    0x140001e32
   140001e2a:	call   0x1400051c8
   140001e2f:	mov    QWORD PTR [rbx],rax
   140001e32:	mov    rax,QWORD PTR [rip+0xb127]        # 0x14000cf60
   140001e39:	cmp    QWORD PTR [rbx+0x8],rax
   140001e3d:	je     0x140001e5a
   140001e3f:	mov    rax,QWORD PTR [rbx+0x10]
   140001e43:	mov    ecx,DWORD PTR [rax+0xc8]
   140001e49:	test   DWORD PTR [rip+0xb219],ecx        # 0x14000d068
   140001e4f:	jne    0x140001e5a
   140001e51:	call   0x1400048d0
   140001e56:	mov    QWORD PTR [rbx+0x8],rax
   140001e5a:	mov    rax,QWORD PTR [rbx+0x10]
   140001e5e:	test   BYTE PTR [rax+0xc8],0x2
   140001e65:	jne    0x140001e7c
   140001e67:	or     DWORD PTR [rax+0xc8],0x2
   140001e6e:	mov    BYTE PTR [rbx+0x18],0x1
   140001e72:	jmp    0x140001e7c
   140001e74:	movdqu xmm0,XMMWORD PTR [rdx]
   140001e78:	movdqu XMMWORD PTR [rcx],xmm0
   140001e7c:	mov    rax,rbx
   140001e7f:	add    rsp,0x20
   140001e83:	pop    rbx
   140001e84:	ret    
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	mov    QWORD PTR [rip+0xb999],rcx        # 0x14000d828
   140001e8f:	ret    
   140001e90:	rex push rbx
   140001e92:	sub    rsp,0x5e0
   140001e99:	and    DWORD PTR [rsp+0x70],0x0
   140001e9e:	lea    rcx,[rsp+0x74]
   140001ea3:	xor    edx,edx
   140001ea5:	mov    r8d,0x94
   140001eab:	call   0x140001b00
   140001eb0:	lea    r11,[rsp+0x70]
   140001eb5:	lea    rax,[rsp+0x110]
   140001ebd:	lea    rcx,[rsp+0x110]
   140001ec5:	mov    QWORD PTR [rsp+0x48],r11
   140001eca:	mov    QWORD PTR [rsp+0x50],rax
   140001ecf:	call   QWORD PTR [rip+0x72b3]        # 0x140009188
   140001ed5:	mov    rbx,QWORD PTR [rsp+0x208]
   140001edd:	lea    rdx,[rsp+0x40]
   140001ee2:	mov    rcx,rbx
   140001ee5:	xor    r8d,r8d
   140001ee8:	call   0x140008976
   140001eed:	test   rax,rax
   140001ef0:	je     0x140001f2d
   140001ef2:	and    QWORD PTR [rsp+0x38],0x0
   140001ef8:	mov    rdx,QWORD PTR [rsp+0x40]
   140001efd:	lea    rcx,[rsp+0x60]
   140001f02:	mov    QWORD PTR [rsp+0x30],rcx
   140001f07:	lea    rcx,[rsp+0x58]
   140001f0c:	mov    r9,rax
   140001f0f:	mov    QWORD PTR [rsp+0x28],rcx
   140001f14:	lea    rcx,[rsp+0x110]
   140001f1c:	mov    r8,rbx
   140001f1f:	mov    QWORD PTR [rsp+0x20],rcx
   140001f24:	xor    ecx,ecx
   140001f26:	call   0x140008970
   140001f2b:	jmp    0x140001f4d
   140001f2d:	mov    rax,QWORD PTR [rsp+0x5e8]
   140001f35:	mov    QWORD PTR [rsp+0x208],rax
   140001f3d:	lea    rax,[rsp+0x5e8]
   140001f45:	mov    QWORD PTR [rsp+0x1a8],rax
   140001f4d:	mov    rax,QWORD PTR [rsp+0x5e8]
   140001f55:	mov    DWORD PTR [rsp+0x70],0xc0000417
   140001f5d:	mov    DWORD PTR [rsp+0x74],0x1
   140001f65:	mov    QWORD PTR [rsp+0x80],rax
   140001f6d:	call   QWORD PTR [rip+0x71fd]        # 0x140009170
   140001f73:	xor    ecx,ecx
   140001f75:	mov    ebx,eax
   140001f77:	call   QWORD PTR [rip+0x71eb]        # 0x140009168
   140001f7d:	lea    rcx,[rsp+0x48]
   140001f82:	call   QWORD PTR [rip+0x71d8]        # 0x140009160
   140001f88:	test   eax,eax
   140001f8a:	jne    0x140001f98
   140001f8c:	test   ebx,ebx
   140001f8e:	jne    0x140001f98
   140001f90:	lea    ecx,[rax+0x2]
   140001f93:	call   0x1400056f8
   140001f98:	call   QWORD PTR [rip+0x719a]        # 0x140009138
   140001f9e:	mov    edx,0xc0000417
   140001fa3:	mov    rcx,rax
   140001fa6:	call   QWORD PTR [rip+0x71ac]        # 0x140009158
   140001fac:	add    rsp,0x5e0
   140001fb3:	pop    rbx
   140001fb4:	ret    
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140001fbd:	mov    QWORD PTR [rsp+0x10],rbp
   140001fc2:	mov    QWORD PTR [rsp+0x18],rsi
   140001fc7:	push   rdi
   140001fc8:	sub    rsp,0x30
   140001fcc:	mov    rbp,rcx
   140001fcf:	mov    rcx,QWORD PTR [rip+0xb852]        # 0x14000d828
   140001fd6:	mov    ebx,r9d
   140001fd9:	mov    rdi,r8
   140001fdc:	mov    rsi,rdx
   140001fdf:	call   0x140003620
   140001fe4:	test   rax,rax
   140001fe7:	je     0x140002003
   140001fe9:	mov    r10,QWORD PTR [rsp+0x60]
   140001fee:	mov    r9d,ebx
   140001ff1:	mov    r8,rdi
   140001ff4:	mov    rdx,rsi
   140001ff7:	mov    rcx,rbp
   140001ffa:	mov    QWORD PTR [rsp+0x20],r10
   140001fff:	call   rax
   140002001:	jmp    0x140002028
   140002003:	mov    ecx,0x2
   140002008:	call   0x1400056f8
   14000200d:	mov    r11,QWORD PTR [rsp+0x60]
   140002012:	mov    r9d,ebx
   140002015:	mov    r8,rdi
   140002018:	mov    rdx,rsi
   14000201b:	mov    rcx,rbp
   14000201e:	mov    QWORD PTR [rsp+0x20],r11
   140002023:	call   0x140001e90
   140002028:	mov    rbx,QWORD PTR [rsp+0x40]
   14000202d:	mov    rbp,QWORD PTR [rsp+0x48]
   140002032:	mov    rsi,QWORD PTR [rsp+0x50]
   140002037:	add    rsp,0x30
   14000203b:	pop    rdi
   14000203c:	ret    
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	lea    r9,[rip+0xa3c9]        # 0x14000c410
   140002047:	xor    eax,eax
   140002049:	mov    rdx,r9
   14000204c:	lea    r8d,[rax+0x8]
   140002050:	cmp    ecx,DWORD PTR [rdx]
   140002052:	je     0x14000207f
   140002054:	inc    eax
   140002056:	add    rdx,r8
   140002059:	cmp    eax,0x2d
   14000205c:	jb     0x140002050
   14000205e:	lea    eax,[rcx-0x13]
   140002061:	cmp    eax,0x11
   140002064:	ja     0x14000206c
   140002066:	mov    eax,0xd
   14000206b:	ret    
   14000206c:	add    ecx,0xffffff44
   140002072:	mov    eax,0x16
   140002077:	cmp    ecx,0xe
   14000207a:	cmovbe eax,r8d
   14000207e:	ret    
   14000207f:	cdqe   
   140002081:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140002086:	ret    
   140002087:	int3   
   140002088:	sub    rsp,0x28
   14000208c:	call   0x140003704
   140002091:	test   rax,rax
   140002094:	jne    0x14000209f
   140002096:	lea    rax,[rip+0xa4db]        # 0x14000c578
   14000209d:	jmp    0x1400020a3
   14000209f:	add    rax,0x10
   1400020a3:	add    rsp,0x28
   1400020a7:	ret    
   1400020a8:	sub    rsp,0x28
   1400020ac:	call   0x140003704
   1400020b1:	test   rax,rax
   1400020b4:	jne    0x1400020bf
   1400020b6:	lea    rax,[rip+0xa4bf]        # 0x14000c57c
   1400020bd:	jmp    0x1400020c3
   1400020bf:	add    rax,0x14
   1400020c3:	add    rsp,0x28
   1400020c7:	ret    
   1400020c8:	rex push rbx
   1400020ca:	sub    rsp,0x20
   1400020ce:	mov    ebx,ecx
   1400020d0:	call   0x140003704
   1400020d5:	test   rax,rax
   1400020d8:	jne    0x1400020e3
   1400020da:	lea    rax,[rip+0xa49b]        # 0x14000c57c
   1400020e1:	jmp    0x1400020e7
   1400020e3:	add    rax,0x14
   1400020e7:	mov    DWORD PTR [rax],ebx
   1400020e9:	call   0x140003704
   1400020ee:	lea    r10,[rip+0xa483]        # 0x14000c578
   1400020f5:	test   rax,rax
   1400020f8:	je     0x1400020fe
   1400020fa:	lea    r10,[rax+0x10]
   1400020fe:	mov    ecx,ebx
   140002100:	call   0x140002040
   140002105:	mov    DWORD PTR [r10],eax
   140002108:	add    rsp,0x20
   14000210c:	pop    rbx
   14000210d:	ret    
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rcx
   140002115:	sub    rsp,0x88
   14000211c:	lea    rcx,[rip+0xb7ad]        # 0x14000d8d0
   140002123:	call   QWORD PTR [rip+0x705f]        # 0x140009188
   140002129:	mov    r11,QWORD PTR [rip+0xb898]        # 0x14000d9c8
   140002130:	mov    QWORD PTR [rsp+0x58],r11
   140002135:	xor    r8d,r8d
   140002138:	lea    rdx,[rsp+0x60]
   14000213d:	mov    rcx,QWORD PTR [rsp+0x58]
   140002142:	call   0x140008976
   140002147:	mov    QWORD PTR [rsp+0x50],rax
   14000214c:	cmp    QWORD PTR [rsp+0x50],0x0
   140002152:	je     0x140002195
   140002154:	mov    QWORD PTR [rsp+0x38],0x0
   14000215d:	lea    rax,[rsp+0x48]
   140002162:	mov    QWORD PTR [rsp+0x30],rax
   140002167:	lea    rax,[rsp+0x40]
   14000216c:	mov    QWORD PTR [rsp+0x28],rax
   140002171:	lea    rax,[rip+0xb758]        # 0x14000d8d0
   140002178:	mov    QWORD PTR [rsp+0x20],rax
   14000217d:	mov    r9,QWORD PTR [rsp+0x50]
   140002182:	mov    r8,QWORD PTR [rsp+0x58]
   140002187:	mov    rdx,QWORD PTR [rsp+0x60]
   14000218c:	xor    ecx,ecx
   14000218e:	call   0x140008970
   140002193:	jmp    0x1400021b7
   140002195:	mov    rax,QWORD PTR [rsp+0x88]
   14000219d:	mov    QWORD PTR [rip+0xb824],rax        # 0x14000d9c8
   1400021a4:	lea    rax,[rsp+0x88]
   1400021ac:	add    rax,0x8
   1400021b0:	mov    QWORD PTR [rip+0xb7b1],rax        # 0x14000d968
   1400021b7:	mov    rax,QWORD PTR [rip+0xb80a]        # 0x14000d9c8
   1400021be:	mov    QWORD PTR [rip+0xb67b],rax        # 0x14000d840
   1400021c5:	mov    rax,QWORD PTR [rsp+0x90]
   1400021cd:	mov    QWORD PTR [rip+0xb77c],rax        # 0x14000d950
   1400021d4:	mov    DWORD PTR [rip+0xb652],0xc0000409        # 0x14000d830
   1400021de:	mov    DWORD PTR [rip+0xb64c],0x1        # 0x14000d834
   1400021e8:	mov    rax,QWORD PTR [rip+0xa1f9]        # 0x14000c3e8
   1400021ef:	mov    QWORD PTR [rsp+0x68],rax
   1400021f4:	mov    rax,QWORD PTR [rip+0xa1f5]        # 0x14000c3f0
   1400021fb:	mov    QWORD PTR [rsp+0x70],rax
   140002200:	call   QWORD PTR [rip+0x6f6a]        # 0x140009170
   140002206:	mov    DWORD PTR [rip+0xb6bc],eax        # 0x14000d8c8
   14000220c:	mov    ecx,0x1
   140002211:	call   0x1400056f8
   140002216:	xor    ecx,ecx
   140002218:	call   QWORD PTR [rip+0x6f4a]        # 0x140009168
   14000221e:	lea    rcx,[rip+0x73c3]        # 0x1400095e8
   140002225:	call   QWORD PTR [rip+0x6f35]        # 0x140009160
   14000222b:	cmp    DWORD PTR [rip+0xb696],0x0        # 0x14000d8c8
   140002232:	jne    0x14000223e
   140002234:	mov    ecx,0x1
   140002239:	call   0x1400056f8
   14000223e:	call   QWORD PTR [rip+0x6ef4]        # 0x140009138
   140002244:	mov    edx,0xc0000409
   140002249:	mov    rcx,rax
   14000224c:	call   QWORD PTR [rip+0x6f06]        # 0x140009158
   140002252:	add    rsp,0x88
   140002259:	ret    
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	sub    rsp,0x28
   140002260:	mov    rax,QWORD PTR [rcx]
   140002263:	cmp    DWORD PTR [rax],0xe06d7363
   140002269:	jne    0x140002296
   14000226b:	cmp    DWORD PTR [rax+0x18],0x4
   14000226f:	jne    0x140002296
   140002271:	mov    eax,DWORD PTR [rax+0x20]
   140002274:	cmp    eax,0x19930520
   140002279:	je     0x140002290
   14000227b:	cmp    eax,0x19930521
   140002280:	je     0x140002290
   140002282:	cmp    eax,0x19930522
   140002287:	je     0x140002290
   140002289:	cmp    eax,0x1994000
   14000228e:	jne    0x140002296
   140002290:	call   0x140005700
   140002295:	int3   
   140002296:	xor    eax,eax
   140002298:	add    rsp,0x28
   14000229c:	ret    
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	sub    rsp,0x28
   1400022a4:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000225c
   1400022ab:	call   QWORD PTR [rip+0x6eb7]        # 0x140009168
   1400022b1:	xor    eax,eax
   1400022b3:	add    rsp,0x28
   1400022b7:	ret    
   1400022b8:	rex push rbx
   1400022ba:	sub    rsp,0x20
   1400022be:	mov    ebx,ecx
   1400022c0:	call   0x1400028c8
   1400022c5:	mov    ecx,ebx
   1400022c7:	call   0x1400026a0
   1400022cc:	mov    rcx,QWORD PTR [rip+0xa2ad]        # 0x14000c580
   1400022d3:	call   0x140003620
   1400022d8:	mov    ecx,0xff
   1400022dd:	add    rsp,0x20
   1400022e1:	pop    rbx
   1400022e2:	rex.W jmp rax
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	rex push rbx
   1400022ea:	sub    rsp,0x20
   1400022ee:	mov    ebx,ecx
   1400022f0:	lea    rcx,[rip+0x7311]        # 0x140009608
   1400022f7:	call   QWORD PTR [rip+0x6e93]        # 0x140009190
   1400022fd:	test   rax,rax
   140002300:	je     0x14000231b
   140002302:	lea    rdx,[rip+0x72ef]        # 0x1400095f8
   140002309:	mov    rcx,rax
   14000230c:	call   QWORD PTR [rip+0x6e8e]        # 0x1400091a0
   140002312:	test   rax,rax
   140002315:	je     0x14000231b
   140002317:	mov    ecx,ebx
   140002319:	call   rax
   14000231b:	add    rsp,0x20
   14000231f:	pop    rbx
   140002320:	ret    
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	rex push rbx
   140002326:	sub    rsp,0x20
   14000232a:	mov    ebx,ecx
   14000232c:	call   0x1400022e8
   140002331:	mov    ecx,ebx
   140002333:	call   QWORD PTR [rip+0x6cc7]        # 0x140009000
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	mov    ecx,0x8
   140002341:	jmp    0x140005950
   140002346:	int3   
   140002347:	int3   
   140002348:	mov    ecx,0x8
   14000234d:	jmp    0x140005850
   140002352:	int3   
   140002353:	int3   
   140002354:	cmp    rcx,rdx
   140002357:	jae    0x140002386
   140002359:	mov    QWORD PTR [rsp+0x8],rbx
   14000235e:	push   rdi
   14000235f:	sub    rsp,0x20
   140002363:	mov    rdi,rdx
   140002366:	mov    rbx,rcx
   140002369:	mov    rax,QWORD PTR [rbx]
   14000236c:	test   rax,rax
   14000236f:	je     0x140002373
   140002371:	call   rax
   140002373:	add    rbx,0x8
   140002377:	cmp    rbx,rdi
   14000237a:	jb     0x140002369
   14000237c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002381:	add    rsp,0x20
   140002385:	pop    rdi
   140002386:	ret    
   140002387:	int3   
   140002388:	mov    QWORD PTR [rsp+0x8],rbx
   14000238d:	push   rdi
   14000238e:	sub    rsp,0x20
   140002392:	xor    eax,eax
   140002394:	mov    rdi,rdx
   140002397:	mov    rbx,rcx
   14000239a:	cmp    rcx,rdx
   14000239d:	jae    0x1400023b6
   14000239f:	test   eax,eax
   1400023a1:	jne    0x1400023b6
   1400023a3:	mov    rcx,QWORD PTR [rbx]
   1400023a6:	test   rcx,rcx
   1400023a9:	je     0x1400023ad
   1400023ab:	call   rcx
   1400023ad:	add    rbx,0x8
   1400023b1:	cmp    rbx,rdi
   1400023b4:	jb     0x14000239f
   1400023b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023bb:	add    rsp,0x20
   1400023bf:	pop    rdi
   1400023c0:	ret    
   1400023c1:	int3   
   1400023c2:	int3   
   1400023c3:	int3   
   1400023c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400023c9:	push   rdi
   1400023ca:	sub    rsp,0x20
   1400023ce:	cmp    QWORD PTR [rip+0xd4d2],0x0        # 0x14000f8a8
   1400023d6:	mov    ebx,ecx
   1400023d8:	je     0x1400023f2
   1400023da:	lea    rcx,[rip+0xd4c7]        # 0x14000f8a8
   1400023e1:	call   0x140005b80
   1400023e6:	test   eax,eax
   1400023e8:	je     0x1400023f2
   1400023ea:	mov    ecx,ebx
   1400023ec:	call   QWORD PTR [rip+0xd4b6]        # 0x14000f8a8
   1400023f2:	call   0x140005280
   1400023f7:	lea    rdx,[rip+0x6fa2]        # 0x1400093a0
   1400023fe:	lea    rcx,[rip+0x6f73]        # 0x140009378
   140002405:	call   0x140002388
   14000240a:	test   eax,eax
   14000240c:	jne    0x140002468
   14000240e:	lea    rcx,[rip+0x11bf]        # 0x1400035d4
   140002415:	call   0x140005ae0
   14000241a:	lea    rbx,[rip+0x6f47]        # 0x140009368
   140002421:	lea    rdi,[rip+0x6f48]        # 0x140009370
   140002428:	jmp    0x140002438
   14000242a:	mov    rax,QWORD PTR [rbx]
   14000242d:	test   rax,rax
   140002430:	je     0x140002434
   140002432:	call   rax
   140002434:	add    rbx,0x8
   140002438:	cmp    rbx,rdi
   14000243b:	jb     0x14000242a
   14000243d:	cmp    QWORD PTR [rip+0xd46b],0x0        # 0x14000f8b0
   140002445:	je     0x140002466
   140002447:	lea    rcx,[rip+0xd462]        # 0x14000f8b0
   14000244e:	call   0x140005b80
   140002453:	test   eax,eax
   140002455:	je     0x140002466
   140002457:	xor    r8d,r8d
   14000245a:	xor    ecx,ecx
   14000245c:	lea    edx,[r8+0x2]
   140002460:	call   QWORD PTR [rip+0xd44a]        # 0x14000f8b0
   140002466:	xor    eax,eax
   140002468:	mov    rbx,QWORD PTR [rsp+0x30]
   14000246d:	add    rsp,0x20
   140002471:	pop    rdi
   140002472:	ret    
   140002473:	int3   
   140002474:	mov    QWORD PTR [rsp+0x8],rbx
   140002479:	mov    QWORD PTR [rsp+0x10],rsi
   14000247e:	mov    DWORD PTR [rsp+0x18],r8d
   140002483:	push   rdi
   140002484:	push   r12
   140002486:	push   r13
   140002488:	push   r14
   14000248a:	push   r15
   14000248c:	sub    rsp,0x40
   140002490:	mov    r12d,r8d
   140002493:	mov    ebx,edx
   140002495:	mov    r15d,ecx
   140002498:	mov    ecx,0x8
   14000249d:	call   0x140005950
   1400024a2:	nop
   1400024a3:	cmp    DWORD PTR [rip+0xb946],0x1        # 0x14000ddf0
   1400024aa:	je     0x1400025ac
   1400024b0:	mov    DWORD PTR [rip+0xb932],0x1        # 0x14000ddec
   1400024ba:	mov    BYTE PTR [rip+0xb927],r12b        # 0x14000dde8
   1400024c1:	test   ebx,ebx
   1400024c3:	jne    0x140002598
   1400024c9:	mov    rcx,QWORD PTR [rip+0xd3c8]        # 0x14000f898
   1400024d0:	call   0x140003620
   1400024d5:	mov    rsi,rax
   1400024d8:	mov    QWORD PTR [rsp+0x30],rax
   1400024dd:	test   rax,rax
   1400024e0:	je     0x140002585
   1400024e6:	mov    rcx,QWORD PTR [rip+0xd3a3]        # 0x14000f890
   1400024ed:	call   0x140003620
   1400024f2:	mov    rdi,rax
   1400024f5:	mov    QWORD PTR [rsp+0x20],rax
   1400024fa:	mov    r14,rsi
   1400024fd:	mov    QWORD PTR [rsp+0x28],rsi
   140002502:	mov    r13,rax
   140002505:	mov    QWORD PTR [rsp+0x38],rax
   14000250a:	sub    rdi,0x8
   14000250e:	mov    QWORD PTR [rsp+0x20],rdi
   140002513:	cmp    rdi,rsi
   140002516:	jb     0x140002524
   140002518:	call   0x140003614
   14000251d:	cmp    QWORD PTR [rdi],rax
   140002520:	jne    0x140002524
   140002522:	jmp    0x14000250a
   140002524:	cmp    rdi,rsi
   140002527:	jb     0x140002585
   140002529:	mov    rcx,QWORD PTR [rdi]
   14000252c:	call   0x140003620
   140002531:	mov    rbx,rax
   140002534:	call   0x140003614
   140002539:	mov    QWORD PTR [rdi],rax
   14000253c:	call   rbx
   14000253e:	mov    rcx,QWORD PTR [rip+0xd353]        # 0x14000f898
   140002545:	call   0x140003620
   14000254a:	mov    rbx,rax
   14000254d:	mov    rcx,QWORD PTR [rip+0xd33c]        # 0x14000f890
   140002554:	call   0x140003620
   140002559:	cmp    r14,rbx
   14000255c:	jne    0x140002563
   14000255e:	cmp    r13,rax
   140002561:	je     0x140002583
   140002563:	mov    r14,rbx
   140002566:	mov    QWORD PTR [rsp+0x28],rbx
   14000256b:	mov    rsi,rbx
   14000256e:	mov    QWORD PTR [rsp+0x30],rbx
   140002573:	mov    r13,rax
   140002576:	mov    QWORD PTR [rsp+0x38],rax
   14000257b:	mov    rdi,rax
   14000257e:	mov    QWORD PTR [rsp+0x20],rax
   140002583:	jmp    0x14000250a
   140002585:	lea    rdx,[rip+0x6e34]        # 0x1400093c0
   14000258c:	lea    rcx,[rip+0x6e15]        # 0x1400093a8
   140002593:	call   0x140002354
   140002598:	lea    rdx,[rip+0x6e31]        # 0x1400093d0
   14000259f:	lea    rcx,[rip+0x6e22]        # 0x1400093c8
   1400025a6:	call   0x140002354
   1400025ab:	nop
   1400025ac:	test   r12d,r12d
   1400025af:	je     0x1400025bb
   1400025b1:	mov    ecx,0x8
   1400025b6:	call   0x140005850
   1400025bb:	test   r12d,r12d
   1400025be:	jne    0x1400025e6
   1400025c0:	mov    DWORD PTR [rip+0xb826],0x1        # 0x14000ddf0
   1400025ca:	lea    ecx,[r12+0x8]
   1400025cf:	call   0x140005850
   1400025d4:	mov    ecx,r15d
   1400025d7:	call   0x1400022e8
   1400025dc:	mov    ecx,r15d
   1400025df:	call   QWORD PTR [rip+0x6a1b]        # 0x140009000
   1400025e5:	int3   
   1400025e6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400025eb:	mov    rsi,QWORD PTR [rsp+0x78]
   1400025f0:	add    rsp,0x40
   1400025f4:	pop    r15
   1400025f6:	pop    r14
   1400025f8:	pop    r13
   1400025fa:	pop    r12
   1400025fc:	pop    rdi
   1400025fd:	ret    
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	xor    r8d,r8d
   140002603:	xor    edx,edx
   140002605:	jmp    0x140002474
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	xor    r8d,r8d
   14000260f:	lea    edx,[r8+0x1]
   140002613:	jmp    0x140002474
   140002618:	xor    edx,edx
   14000261a:	xor    ecx,ecx
   14000261c:	lea    r8d,[rdx+0x1]
   140002620:	jmp    0x140002474
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	mov    edx,0x1
   14000262d:	xor    ecx,ecx
   14000262f:	mov    r8d,edx
   140002632:	jmp    0x140002474
   140002637:	int3   
   140002638:	rex push rbx
   14000263a:	sub    rsp,0x20
   14000263e:	call   0x140003614
   140002643:	mov    rcx,rax
   140002646:	mov    rbx,rax
   140002649:	call   0x140005eb4
   14000264e:	mov    rcx,rbx
   140002651:	call   0x140005e74
   140002656:	mov    rcx,rbx
   140002659:	call   0x140001e88
   14000265e:	mov    rcx,rbx
   140002661:	call   0x140005e6c
   140002666:	mov    rcx,rbx
   140002669:	call   0x140005e64
   14000266e:	mov    rcx,rbx
   140002671:	call   0x140005bc4
   140002676:	mov    rcx,rbx
   140002679:	call   0x140002ab0
   14000267e:	mov    rcx,rbx
   140002681:	call   0x140005724
   140002686:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x14000260c
   14000268d:	call   0x14000360c
   140002692:	mov    QWORD PTR [rip+0x9ee7],rax        # 0x14000c580
   140002699:	add    rsp,0x20
   14000269d:	pop    rbx
   14000269e:	ret    
   14000269f:	int3   
   1400026a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026a5:	mov    QWORD PTR [rsp+0x18],rdi
   1400026aa:	mov    QWORD PTR [rsp+0x20],r13
   1400026af:	push   r14
   1400026b1:	sub    rsp,0x30
   1400026b5:	lea    r14,[rip+0x9ed4]        # 0x14000c590
   1400026bc:	mov    edi,ecx
   1400026be:	xor    ebx,ebx
   1400026c0:	mov    rax,r14
   1400026c3:	cmp    ecx,DWORD PTR [rax]
   1400026c5:	je     0x1400026d2
   1400026c7:	inc    ebx
   1400026c9:	add    rax,0x10
   1400026cd:	cmp    ebx,0x17
   1400026d0:	jb     0x1400026c3
   1400026d2:	cmp    ebx,0x17
   1400026d5:	jae    0x1400028af
   1400026db:	mov    ecx,0x3
   1400026e0:	call   0x1400062bc
   1400026e5:	cmp    eax,0x1
   1400026e8:	je     0x14000286a
   1400026ee:	mov    ecx,0x3
   1400026f3:	call   0x1400062bc
   1400026f8:	test   eax,eax
   1400026fa:	jne    0x140002709
   1400026fc:	cmp    DWORD PTR [rip+0x9cfd],0x1        # 0x14000c400
   140002703:	je     0x14000286a
   140002709:	cmp    edi,0xfc
   14000270f:	je     0x1400028af
   140002715:	lea    rdi,[rip+0xb6e4]        # 0x14000de00
   14000271c:	mov    r13d,0x314
   140002722:	lea    r8,[rip+0x74c7]        # 0x140009bf0
   140002729:	mov    rcx,rdi
   14000272c:	mov    rdx,r13
   14000272f:	call   0x140006248
   140002734:	test   eax,eax
   140002736:	je     0x14000274d
   140002738:	and    QWORD PTR [rsp+0x20],0x0
   14000273e:	xor    r9d,r9d
   140002741:	xor    r8d,r8d
   140002744:	xor    edx,edx
   140002746:	xor    ecx,ecx
   140002748:	call   0x140001e90
   14000274d:	lea    rdx,[rip+0xb6c5]        # 0x14000de19
   140002754:	mov    r8d,0x104
   14000275a:	xor    ecx,ecx
   14000275c:	mov    BYTE PTR [rip+0xb7ba],0x0        # 0x14000df1d
   140002763:	call   QWORD PTR [rip+0x6a4f]        # 0x1400091b8
   140002769:	test   eax,eax
   14000276b:	jne    0x14000279e
   14000276d:	lea    r8,[rip+0x7464]        # 0x140009bd8
   140002774:	lea    rcx,[rip+0xb69e]        # 0x14000de19
   14000277b:	mov    edx,0x2fb
   140002780:	call   0x140006248
   140002785:	test   eax,eax
   140002787:	je     0x14000279e
   140002789:	and    QWORD PTR [rsp+0x20],0x0
   14000278f:	xor    r9d,r9d
   140002792:	xor    r8d,r8d
   140002795:	xor    edx,edx
   140002797:	xor    ecx,ecx
   140002799:	call   0x140001e90
   14000279e:	lea    rcx,[rip+0xb674]        # 0x14000de19
   1400027a5:	call   0x140005650
   1400027aa:	inc    rax
   1400027ad:	cmp    rax,0x3c
   1400027b1:	jbe    0x1400027f9
   1400027b3:	lea    rcx,[rip+0xb65f]        # 0x14000de19
   1400027ba:	call   0x140005650
   1400027bf:	lea    rdx,[rip+0xb94e]        # 0x14000e114
   1400027c6:	lea    r8,[rip+0x7407]        # 0x140009bd4
   1400027cd:	lea    rcx,[rax+rdi*1-0x22]
   1400027d2:	mov    r9d,0x3
   1400027d8:	sub    rdx,rcx
   1400027db:	call   0x140006170
   1400027e0:	test   eax,eax
   1400027e2:	je     0x1400027f9
   1400027e4:	and    QWORD PTR [rsp+0x20],0x0
   1400027ea:	xor    r9d,r9d
   1400027ed:	xor    r8d,r8d
   1400027f0:	xor    edx,edx
   1400027f2:	xor    ecx,ecx
   1400027f4:	call   0x140001e90
   1400027f9:	lea    r8,[rip+0x73d0]        # 0x140009bd0
   140002800:	mov    rdx,r13
   140002803:	mov    rcx,rdi
   140002806:	call   0x1400060e4
   14000280b:	test   eax,eax
   14000280d:	je     0x140002824
   14000280f:	and    QWORD PTR [rsp+0x20],0x0
   140002815:	xor    r9d,r9d
   140002818:	xor    r8d,r8d
   14000281b:	xor    edx,edx
   14000281d:	xor    ecx,ecx
   14000281f:	call   0x140001e90
   140002824:	movsxd r8,ebx
   140002827:	mov    rdx,r13
   14000282a:	mov    rcx,rdi
   14000282d:	add    r8,r8
   140002830:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140002835:	call   0x1400060e4
   14000283a:	test   eax,eax
   14000283c:	je     0x140002853
   14000283e:	and    QWORD PTR [rsp+0x20],0x0
   140002844:	xor    r9d,r9d
   140002847:	xor    r8d,r8d
   14000284a:	xor    edx,edx
   14000284c:	xor    ecx,ecx
   14000284e:	call   0x140001e90
   140002853:	lea    rdx,[rip+0x734e]        # 0x140009ba8
   14000285a:	mov    r8d,0x12010
   140002860:	mov    rcx,rdi
   140002863:	call   0x140005ef0
   140002868:	jmp    0x1400028af
   14000286a:	mov    ecx,0xfffffff4
   14000286f:	call   QWORD PTR [rip+0x693b]        # 0x1400091b0
   140002875:	mov    rdi,rax
   140002878:	test   rax,rax
   14000287b:	je     0x1400028af
   14000287d:	cmp    rax,0xffffffffffffffff
   140002881:	je     0x1400028af
   140002883:	movsxd rbx,ebx
   140002886:	add    rbx,rbx
   140002889:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   14000288e:	call   0x140005650
   140002893:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   140002898:	and    QWORD PTR [rsp+0x20],0x0
   14000289e:	lea    r9,[rsp+0x48]
   1400028a3:	mov    r8,rax
   1400028a6:	mov    rcx,rdi
   1400028a9:	call   QWORD PTR [rip+0x68f9]        # 0x1400091a8
   1400028af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028b4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400028b9:	mov    r13,QWORD PTR [rsp+0x58]
   1400028be:	add    rsp,0x30
   1400028c2:	pop    r14
   1400028c4:	ret    
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	sub    rsp,0x28
   1400028cc:	mov    ecx,0x3
   1400028d1:	call   0x1400062bc
   1400028d6:	cmp    eax,0x1
   1400028d9:	je     0x1400028f2
   1400028db:	mov    ecx,0x3
   1400028e0:	call   0x1400062bc
   1400028e5:	test   eax,eax
   1400028e7:	jne    0x140002906
   1400028e9:	cmp    DWORD PTR [rip+0x9b10],0x1        # 0x14000c400
   1400028f0:	jne    0x140002906
   1400028f2:	mov    ecx,0xfc
   1400028f7:	call   0x1400026a0
   1400028fc:	mov    ecx,0xff
   140002901:	call   0x1400026a0
   140002906:	add    rsp,0x28
   14000290a:	ret    
   14000290b:	int3   
   14000290c:	mov    rax,rsp
   14000290f:	mov    QWORD PTR [rax+0x8],rbx
   140002913:	mov    QWORD PTR [rax+0x18],rbp
   140002917:	mov    QWORD PTR [rax+0x20],rsi
   14000291b:	mov    QWORD PTR [rax+0x10],rdx
   14000291f:	push   rdi
   140002920:	push   r12
   140002922:	push   r13
   140002924:	push   r14
   140002926:	push   r15
   140002928:	sub    rsp,0x40
   14000292c:	mov    r15,QWORD PTR [r9+0x8]
   140002930:	mov    r12,QWORD PTR [r9]
   140002933:	mov    rsi,QWORD PTR [r9+0x38]
   140002937:	sub    r12,r15
   14000293a:	test   BYTE PTR [rcx+0x4],0x66
   14000293e:	mov    r14,r9
   140002941:	mov    rbp,rdx
   140002944:	mov    r13,rcx
   140002947:	jne    0x140002a29
   14000294d:	xor    edi,edi
   14000294f:	mov    QWORD PTR [rax-0x38],rcx
   140002953:	mov    QWORD PTR [rax-0x30],r8
   140002957:	cmp    DWORD PTR [rsi],edi
   140002959:	jbe    0x140002a8a
   14000295f:	lea    rbx,[rsi+0xc]
   140002963:	mov    eax,DWORD PTR [rbx-0x8]
   140002966:	cmp    r12,rax
   140002969:	jb     0x140002a16
   14000296f:	mov    eax,DWORD PTR [rbx-0x4]
   140002972:	cmp    r12,rax
   140002975:	jae    0x140002a16
   14000297b:	cmp    DWORD PTR [rbx+0x4],0x0
   14000297f:	je     0x140002a16
   140002985:	cmp    DWORD PTR [rbx],0x1
   140002988:	je     0x1400029a3
   14000298a:	mov    eax,DWORD PTR [rbx]
   14000298c:	lea    rcx,[rsp+0x30]
   140002991:	mov    rdx,rbp
   140002994:	add    rax,r15
   140002997:	call   rax
   140002999:	test   eax,eax
   14000299b:	js     0x140002a25
   1400029a1:	jle    0x140002a16
   1400029a3:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   1400029ab:	jne    0x1400029d5
   1400029ad:	cmp    QWORD PTR [rip+0xcecb],0x0        # 0x14000f880
   1400029b5:	je     0x1400029d5
   1400029b7:	lea    rcx,[rip+0xcec2]        # 0x14000f880
   1400029be:	call   0x140005b80
   1400029c3:	test   eax,eax
   1400029c5:	je     0x1400029d5
   1400029c7:	mov    edx,0x1
   1400029cc:	mov    rcx,r13
   1400029cf:	call   QWORD PTR [rip+0xceab]        # 0x14000f880
   1400029d5:	mov    ecx,DWORD PTR [rbx+0x4]
   1400029d8:	mov    r8d,0x1
   1400029de:	mov    rdx,rbp
   1400029e1:	add    rcx,r15
   1400029e4:	call   0x140006350
   1400029e9:	mov    rax,QWORD PTR [r14+0x40]
   1400029ed:	mov    edx,DWORD PTR [rbx+0x4]
   1400029f0:	movsxd r9,DWORD PTR [r13+0x0]
   1400029f4:	mov    QWORD PTR [rsp+0x28],rax
   1400029f9:	mov    rax,QWORD PTR [r14+0x28]
   1400029fd:	add    rdx,r15
   140002a00:	mov    r8,r13
   140002a03:	mov    rcx,rbp
   140002a06:	mov    QWORD PTR [rsp+0x20],rax
   140002a0b:	call   QWORD PTR [rip+0x67af]        # 0x1400091c0
   140002a11:	call   0x140006380
   140002a16:	inc    edi
   140002a18:	add    rbx,0x10
   140002a1c:	cmp    edi,DWORD PTR [rsi]
   140002a1e:	jae    0x140002a8a
   140002a20:	jmp    0x140002963
   140002a25:	xor    eax,eax
   140002a27:	jmp    0x140002a8f
   140002a29:	mov    rdi,QWORD PTR [r9+0x20]
   140002a2d:	xor    ebp,ebp
   140002a2f:	sub    rdi,r15
   140002a32:	cmp    DWORD PTR [rsi],ebp
   140002a34:	jbe    0x140002a8a
   140002a36:	lea    rbx,[rsi+0x10]
   140002a3a:	mov    ecx,DWORD PTR [rbx-0xc]
   140002a3d:	cmp    r12,rcx
   140002a40:	jb     0x140002a80
   140002a42:	mov    eax,DWORD PTR [rbx-0x8]
   140002a45:	cmp    r12,rax
   140002a48:	jae    0x140002a80
   140002a4a:	cmp    rdi,rcx
   140002a4d:	jb     0x140002a5b
   140002a4f:	cmp    rdi,rax
   140002a52:	jae    0x140002a5b
   140002a54:	test   BYTE PTR [r13+0x4],0x20
   140002a59:	jne    0x140002a8a
   140002a5b:	cmp    DWORD PTR [rbx],0x0
   140002a5e:	je     0x140002a69
   140002a60:	mov    eax,DWORD PTR [rbx]
   140002a62:	cmp    rdi,rax
   140002a65:	je     0x140002a8a
   140002a67:	jmp    0x140002a80
   140002a69:	mov    rdx,QWORD PTR [rsp+0x78]
   140002a6e:	add    rax,r15
   140002a71:	mov    cl,0x1
   140002a73:	mov    QWORD PTR [r14],rax
   140002a76:	mov    r8d,DWORD PTR [rbx-0x4]
   140002a7a:	add    r8,r15
   140002a7d:	call   r8
   140002a80:	inc    ebp
   140002a82:	add    rbx,0x10
   140002a86:	cmp    ebp,DWORD PTR [rsi]
   140002a88:	jb     0x140002a3a
   140002a8a:	mov    eax,0x1
   140002a8f:	lea    r11,[rsp+0x40]
   140002a94:	mov    rbx,QWORD PTR [r11+0x30]
   140002a98:	mov    rbp,QWORD PTR [r11+0x40]
   140002a9c:	mov    rsi,QWORD PTR [r11+0x48]
   140002aa0:	mov    rsp,r11
   140002aa3:	pop    r15
   140002aa5:	pop    r14
   140002aa7:	pop    r13
   140002aa9:	pop    r12
   140002aab:	pop    rdi
   140002aac:	ret    
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	ret    0x0
   140002ab3:	int3   
   140002ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140002ab9:	mov    QWORD PTR [rsp+0x10],rbp
   140002abe:	mov    QWORD PTR [rsp+0x18],rsi
   140002ac3:	push   rdi
   140002ac4:	sub    rsp,0x20
   140002ac8:	mov    rsi,rdx
   140002acb:	mov    edi,ecx
   140002acd:	call   0x140003704
   140002ad2:	xor    r11d,r11d
   140002ad5:	mov    rbx,rax
   140002ad8:	cmp    rax,r11
   140002adb:	je     0x140002c6b
   140002ae1:	mov    rcx,QWORD PTR [rax+0xa0]
   140002ae8:	movsxd r8,DWORD PTR [rip+0x9c1d]        # 0x14000c70c
   140002aef:	mov    rdx,rcx
   140002af2:	cmp    DWORD PTR [rdx],edi
   140002af4:	je     0x140002b09
   140002af6:	mov    rax,r8
   140002af9:	add    rdx,0x10
   140002afd:	shl    rax,0x4
   140002b01:	add    rax,rcx
   140002b04:	cmp    rdx,rax
   140002b07:	jb     0x140002af2
   140002b09:	mov    rax,r8
   140002b0c:	shl    rax,0x4
   140002b10:	add    rax,rcx
   140002b13:	cmp    rdx,rax
   140002b16:	jae    0x140002b1c
   140002b18:	cmp    DWORD PTR [rdx],edi
   140002b1a:	je     0x140002b1f
   140002b1c:	mov    rdx,r11
   140002b1f:	cmp    rdx,r11
   140002b22:	je     0x140002c6b
   140002b28:	mov    r8,QWORD PTR [rdx+0x8]
   140002b2c:	cmp    r8,r11
   140002b2f:	je     0x140002c6b
   140002b35:	cmp    r8,0x5
   140002b39:	jne    0x140002b48
   140002b3b:	mov    QWORD PTR [rdx+0x8],r11
   140002b3f:	lea    eax,[r8-0x4]
   140002b43:	jmp    0x140002c6d
   140002b48:	cmp    r8,0x1
   140002b4c:	jne    0x140002b56
   140002b4e:	or     eax,0xffffffff
   140002b51:	jmp    0x140002c6d
   140002b56:	mov    rbp,QWORD PTR [rbx+0xa8]
   140002b5d:	mov    QWORD PTR [rbx+0xa8],rsi
   140002b64:	mov    ecx,DWORD PTR [rdx+0x4]
   140002b67:	cmp    ecx,0x8
   140002b6a:	jne    0x140002c58
   140002b70:	movsxd r10,DWORD PTR [rip+0x9b89]        # 0x14000c700
   140002b77:	mov    ecx,DWORD PTR [rip+0x9b87]        # 0x14000c704
   140002b7d:	add    ecx,r10d
   140002b80:	mov    r9,r10
   140002b83:	cmp    r10d,ecx
   140002b86:	jge    0x140002bb2
   140002b88:	shl    r9,0x4
   140002b8c:	mov    rax,QWORD PTR [rbx+0xa0]
   140002b93:	inc    r10d
   140002b96:	add    r9,0x10
   140002b9a:	mov    QWORD PTR [r9+rax*1-0x8],r11
   140002b9f:	mov    ecx,DWORD PTR [rip+0x9b5b]        # 0x14000c700
   140002ba5:	mov    eax,DWORD PTR [rip+0x9b59]        # 0x14000c704
   140002bab:	add    ecx,eax
   140002bad:	cmp    r10d,ecx
   140002bb0:	jl     0x140002b8c
   140002bb2:	cmp    DWORD PTR [rdx],0xc000008e
   140002bb8:	mov    edi,DWORD PTR [rbx+0xb0]
   140002bbe:	jne    0x140002bcc
   140002bc0:	mov    DWORD PTR [rbx+0xb0],0x83
   140002bca:	jmp    0x140002c42
   140002bcc:	cmp    DWORD PTR [rdx],0xc0000090
   140002bd2:	jne    0x140002be0
   140002bd4:	mov    DWORD PTR [rbx+0xb0],0x81
   140002bde:	jmp    0x140002c42
   140002be0:	cmp    DWORD PTR [rdx],0xc0000091
   140002be6:	jne    0x140002bf4
   140002be8:	mov    DWORD PTR [rbx+0xb0],0x84
   140002bf2:	jmp    0x140002c42
   140002bf4:	cmp    DWORD PTR [rdx],0xc0000093
   140002bfa:	jne    0x140002c08
   140002bfc:	mov    DWORD PTR [rbx+0xb0],0x85
   140002c06:	jmp    0x140002c42
   140002c08:	cmp    DWORD PTR [rdx],0xc000008d
   140002c0e:	jne    0x140002c1c
   140002c10:	mov    DWORD PTR [rbx+0xb0],0x82
   140002c1a:	jmp    0x140002c42
   140002c1c:	cmp    DWORD PTR [rdx],0xc000008f
   140002c22:	jne    0x140002c30
   140002c24:	mov    DWORD PTR [rbx+0xb0],0x86
   140002c2e:	jmp    0x140002c42
   140002c30:	cmp    DWORD PTR [rdx],0xc0000092
   140002c36:	jne    0x140002c42
   140002c38:	mov    DWORD PTR [rbx+0xb0],0x8a
   140002c42:	mov    edx,DWORD PTR [rbx+0xb0]
   140002c48:	mov    ecx,0x8
   140002c4d:	call   r8
   140002c50:	mov    DWORD PTR [rbx+0xb0],edi
   140002c56:	jmp    0x140002c5f
   140002c58:	mov    QWORD PTR [rdx+0x8],r11
   140002c5c:	call   r8
   140002c5f:	mov    QWORD PTR [rbx+0xa8],rbp
   140002c66:	jmp    0x140002b4e
   140002c6b:	xor    eax,eax
   140002c6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c72:	mov    rbp,QWORD PTR [rsp+0x38]
   140002c77:	mov    rsi,QWORD PTR [rsp+0x40]
   140002c7c:	add    rsp,0x20
   140002c80:	pop    rdi
   140002c81:	ret    
   140002c82:	int3   
   140002c83:	int3   
   140002c84:	mov    QWORD PTR [rsp+0x8],rbx
   140002c89:	push   rdi
   140002c8a:	sub    rsp,0x20
   140002c8e:	xor    edi,edi
   140002c90:	cmp    DWORD PTR [rip+0xcc0a],edi        # 0x14000f8a0
   140002c96:	jne    0x140002c9d
   140002c98:	call   0x140004e8c
   140002c9d:	mov    rbx,QWORD PTR [rip+0xcc14]        # 0x14000f8b8
   140002ca4:	lea    rax,[rip+0x7005]        # 0x140009cb0
   140002cab:	test   rbx,rbx
   140002cae:	cmove  rbx,rax
   140002cb2:	cmp    BYTE PTR [rbx],0x20
   140002cb5:	ja     0x140002cc0
   140002cb7:	cmp    BYTE PTR [rbx],0x0
   140002cba:	je     0x140002cef
   140002cbc:	test   edi,edi
   140002cbe:	je     0x140002ce9
   140002cc0:	cmp    BYTE PTR [rbx],0x22
   140002cc3:	jne    0x140002cce
   140002cc5:	xor    eax,eax
   140002cc7:	test   edi,edi
   140002cc9:	sete   al
   140002ccc:	mov    edi,eax
   140002cce:	movzx  ecx,BYTE PTR [rbx]
   140002cd1:	call   0x140006400
   140002cd6:	test   eax,eax
   140002cd8:	je     0x140002cdd
   140002cda:	inc    rbx
   140002cdd:	inc    rbx
   140002ce0:	jmp    0x140002cb2
   140002ce2:	cmp    al,0x20
   140002ce4:	ja     0x140002cef
   140002ce6:	inc    rbx
   140002ce9:	mov    al,BYTE PTR [rbx]
   140002ceb:	test   al,al
   140002ced:	jne    0x140002ce2
   140002cef:	mov    rax,rbx
   140002cf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cf7:	add    rsp,0x20
   140002cfb:	pop    rdi
   140002cfc:	ret    
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	mov    QWORD PTR [rsp+0x8],rbx
   140002d05:	mov    QWORD PTR [rsp+0x10],rbp
   140002d0a:	mov    QWORD PTR [rsp+0x18],rsi
   140002d0f:	push   rdi
   140002d10:	sub    rsp,0x30
   140002d14:	cmp    DWORD PTR [rip+0xcb85],0x0        # 0x14000f8a0
   140002d1b:	jne    0x140002d22
   140002d1d:	call   0x140004e8c
   140002d22:	mov    rbx,QWORD PTR [rip+0xaae7]        # 0x14000d810
   140002d29:	xor    edi,edi
   140002d2b:	test   rbx,rbx
   140002d2e:	jne    0x140002d4b
   140002d30:	or     eax,0xffffffff
   140002d33:	jmp    0x140002e01
   140002d38:	cmp    al,0x3d
   140002d3a:	je     0x140002d3e
   140002d3c:	inc    edi
   140002d3e:	mov    rcx,rbx
   140002d41:	call   0x140005650
   140002d46:	lea    rbx,[rbx+rax*1+0x1]
   140002d4b:	mov    al,BYTE PTR [rbx]
   140002d4d:	test   al,al
   140002d4f:	jne    0x140002d38
   140002d51:	lea    eax,[rdi+0x1]
   140002d54:	mov    edx,0x8
   140002d59:	movsxd rcx,eax
   140002d5c:	call   0x140005324
   140002d61:	mov    rdi,rax
   140002d64:	mov    QWORD PTR [rip+0xb04d],rax        # 0x14000ddb8
   140002d6b:	test   rax,rax
   140002d6e:	je     0x140002d30
   140002d70:	mov    rbx,QWORD PTR [rip+0xaa99]        # 0x14000d810
   140002d77:	cmp    BYTE PTR [rbx],0x0
   140002d7a:	je     0x140002de1
   140002d7c:	mov    rcx,rbx
   140002d7f:	call   0x140005650
   140002d84:	cmp    BYTE PTR [rbx],0x3d
   140002d87:	lea    esi,[rax+0x1]
   140002d8a:	je     0x140002dcf
   140002d8c:	movsxd rbp,esi
   140002d8f:	mov    edx,0x1
   140002d94:	mov    rcx,rbp
   140002d97:	call   0x140005324
   140002d9c:	mov    QWORD PTR [rdi],rax
   140002d9f:	test   rax,rax
   140002da2:	je     0x140002e16
   140002da4:	mov    r8,rbx
   140002da7:	mov    rdx,rbp
   140002daa:	mov    rcx,rax
   140002dad:	call   0x140006248
   140002db2:	test   eax,eax
   140002db4:	je     0x140002dcb
   140002db6:	and    QWORD PTR [rsp+0x20],0x0
   140002dbc:	xor    r9d,r9d
   140002dbf:	xor    r8d,r8d
   140002dc2:	xor    edx,edx
   140002dc4:	xor    ecx,ecx
   140002dc6:	call   0x140001e90
   140002dcb:	add    rdi,0x8
   140002dcf:	movsxd rax,esi
   140002dd2:	add    rbx,rax
   140002dd5:	cmp    BYTE PTR [rbx],0x0
   140002dd8:	jne    0x140002d7c
   140002dda:	mov    rbx,QWORD PTR [rip+0xaa2f]        # 0x14000d810
   140002de1:	mov    rcx,rbx
   140002de4:	call   0x140005240
   140002de9:	and    QWORD PTR [rip+0xaa1f],0x0        # 0x14000d810
   140002df1:	and    QWORD PTR [rdi],0x0
   140002df5:	mov    DWORD PTR [rip+0xca89],0x1        # 0x14000f888
   140002dff:	xor    eax,eax
   140002e01:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e06:	mov    rbp,QWORD PTR [rsp+0x48]
   140002e0b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002e10:	add    rsp,0x30
   140002e14:	pop    rdi
   140002e15:	ret    
   140002e16:	mov    rcx,QWORD PTR [rip+0xaf9b]        # 0x14000ddb8
   140002e1d:	call   0x140005240
   140002e22:	and    QWORD PTR [rip+0xaf8e],0x0        # 0x14000ddb8
   140002e2a:	jmp    0x140002d30
   140002e2f:	int3   
   140002e30:	mov    rax,rsp
   140002e33:	mov    QWORD PTR [rax+0x8],rbx
   140002e37:	mov    QWORD PTR [rax+0x10],rbp
   140002e3b:	mov    QWORD PTR [rax+0x18],rsi
   140002e3f:	mov    QWORD PTR [rax+0x20],rdi
   140002e43:	push   r12
   140002e45:	push   r13
   140002e47:	push   r14
   140002e49:	sub    rsp,0x20
   140002e4d:	mov    r13,QWORD PTR [rsp+0x60]
   140002e52:	mov    r14,r9
   140002e55:	mov    rdi,r8
   140002e58:	and    DWORD PTR [r13+0x0],0x0
   140002e5d:	mov    r12,rdx
   140002e60:	mov    rbx,rcx
   140002e63:	mov    DWORD PTR [r9],0x1
   140002e6a:	test   rdx,rdx
   140002e6d:	je     0x140002e76
   140002e6f:	mov    QWORD PTR [rdx],r8
   140002e72:	add    r12,0x8
   140002e76:	xor    ebp,ebp
   140002e78:	cmp    BYTE PTR [rbx],0x22
   140002e7b:	jne    0x140002e8e
   140002e7d:	xor    eax,eax
   140002e7f:	test   ebp,ebp
   140002e81:	mov    sil,0x22
   140002e84:	sete   al
   140002e87:	inc    rbx
   140002e8a:	mov    ebp,eax
   140002e8c:	jmp    0x140002ec7
   140002e8e:	inc    DWORD PTR [r13+0x0]
   140002e92:	test   rdi,rdi
   140002e95:	je     0x140002e9e
   140002e97:	mov    al,BYTE PTR [rbx]
   140002e99:	mov    BYTE PTR [rdi],al
   140002e9b:	inc    rdi
   140002e9e:	movzx  esi,BYTE PTR [rbx]
   140002ea1:	inc    rbx
   140002ea4:	mov    ecx,esi
   140002ea6:	call   0x140006400
   140002eab:	test   eax,eax
   140002ead:	je     0x140002ec2
   140002eaf:	inc    DWORD PTR [r13+0x0]
   140002eb3:	test   rdi,rdi
   140002eb6:	je     0x140002ebf
   140002eb8:	mov    al,BYTE PTR [rbx]
   140002eba:	mov    BYTE PTR [rdi],al
   140002ebc:	inc    rdi
   140002ebf:	inc    rbx
   140002ec2:	test   sil,sil
   140002ec5:	je     0x140002ee2
   140002ec7:	test   ebp,ebp
   140002ec9:	jne    0x140002e78
   140002ecb:	cmp    sil,0x20
   140002ecf:	je     0x140002ed7
   140002ed1:	cmp    sil,0x9
   140002ed5:	jne    0x140002e78
   140002ed7:	test   rdi,rdi
   140002eda:	je     0x140002ee5
   140002edc:	mov    BYTE PTR [rdi-0x1],0x0
   140002ee0:	jmp    0x140002ee5
   140002ee2:	dec    rbx
   140002ee5:	xor    esi,esi
   140002ee7:	cmp    BYTE PTR [rbx],0x0
   140002eea:	je     0x140002fd3
   140002ef0:	cmp    BYTE PTR [rbx],0x20
   140002ef3:	je     0x140002efa
   140002ef5:	cmp    BYTE PTR [rbx],0x9
   140002ef8:	jne    0x140002eff
   140002efa:	inc    rbx
   140002efd:	jmp    0x140002ef0
   140002eff:	cmp    BYTE PTR [rbx],0x0
   140002f02:	je     0x140002fd3
   140002f08:	test   r12,r12
   140002f0b:	je     0x140002f15
   140002f0d:	mov    QWORD PTR [r12],rdi
   140002f11:	add    r12,0x8
   140002f15:	inc    DWORD PTR [r14]
   140002f18:	mov    edx,0x1
   140002f1d:	xor    ecx,ecx
   140002f1f:	jmp    0x140002f26
   140002f21:	inc    rbx
   140002f24:	inc    ecx
   140002f26:	cmp    BYTE PTR [rbx],0x5c
   140002f29:	je     0x140002f21
   140002f2b:	cmp    BYTE PTR [rbx],0x22
   140002f2e:	jne    0x140002f66
   140002f30:	test   dl,cl
   140002f32:	jne    0x140002f51
   140002f34:	test   esi,esi
   140002f36:	je     0x140002f46
   140002f38:	lea    rax,[rbx+0x1]
   140002f3c:	cmp    BYTE PTR [rax],0x22
   140002f3f:	jne    0x140002f46
   140002f41:	mov    rbx,rax
   140002f44:	jmp    0x140002f51
   140002f46:	xor    eax,eax
   140002f48:	xor    edx,edx
   140002f4a:	test   esi,esi
   140002f4c:	sete   al
   140002f4f:	mov    esi,eax
   140002f51:	shr    ecx,1
   140002f53:	jmp    0x140002f66
   140002f55:	dec    ecx
   140002f57:	test   rdi,rdi
   140002f5a:	je     0x140002f62
   140002f5c:	mov    BYTE PTR [rdi],0x5c
   140002f5f:	inc    rdi
   140002f62:	inc    DWORD PTR [r13+0x0]
   140002f66:	test   ecx,ecx
   140002f68:	jne    0x140002f55
   140002f6a:	mov    al,BYTE PTR [rbx]
   140002f6c:	test   al,al
   140002f6e:	je     0x140002fbf
   140002f70:	test   esi,esi
   140002f72:	jne    0x140002f7c
   140002f74:	cmp    al,0x20
   140002f76:	je     0x140002fbf
   140002f78:	cmp    al,0x9
   140002f7a:	je     0x140002fbf
   140002f7c:	test   edx,edx
   140002f7e:	je     0x140002fb7
   140002f80:	movsx  ecx,al
   140002f83:	call   0x140006400
   140002f88:	test   rdi,rdi
   140002f8b:	je     0x140002fa8
   140002f8d:	test   eax,eax
   140002f8f:	je     0x140002f9f
   140002f91:	mov    al,BYTE PTR [rbx]
   140002f93:	inc    rbx
   140002f96:	mov    BYTE PTR [rdi],al
   140002f98:	inc    rdi
   140002f9b:	inc    DWORD PTR [r13+0x0]
   140002f9f:	mov    al,BYTE PTR [rbx]
   140002fa1:	mov    BYTE PTR [rdi],al
   140002fa3:	inc    rdi
   140002fa6:	jmp    0x140002fb3
   140002fa8:	test   eax,eax
   140002faa:	je     0x140002fb3
   140002fac:	inc    rbx
   140002faf:	inc    DWORD PTR [r13+0x0]
   140002fb3:	inc    DWORD PTR [r13+0x0]
   140002fb7:	inc    rbx
   140002fba:	jmp    0x140002f18
   140002fbf:	test   rdi,rdi
   140002fc2:	je     0x140002fca
   140002fc4:	mov    BYTE PTR [rdi],0x0
   140002fc7:	inc    rdi
   140002fca:	inc    DWORD PTR [r13+0x0]
   140002fce:	jmp    0x140002ee7
   140002fd3:	test   r12,r12
   140002fd6:	je     0x140002fdd
   140002fd8:	and    QWORD PTR [r12],0x0
   140002fdd:	inc    DWORD PTR [r14]
   140002fe0:	mov    rbx,QWORD PTR [rsp+0x40]
   140002fe5:	mov    rbp,QWORD PTR [rsp+0x48]
   140002fea:	mov    rsi,QWORD PTR [rsp+0x50]
   140002fef:	mov    rdi,QWORD PTR [rsp+0x58]
   140002ff4:	add    rsp,0x20
   140002ff8:	pop    r14
   140002ffa:	pop    r13
   140002ffc:	pop    r12
   140002ffe:	ret    
   140002fff:	int3   
   140003000:	mov    QWORD PTR [rsp+0x18],rbx
   140003005:	mov    QWORD PTR [rsp+0x20],rsi
   14000300a:	push   rdi
   14000300b:	sub    rsp,0x30
   14000300f:	cmp    DWORD PTR [rip+0xc88a],0x0        # 0x14000f8a0
   140003016:	jne    0x14000301d
   140003018:	call   0x140004e8c
   14000301d:	lea    rdi,[rip+0xb0fc]        # 0x14000e120
   140003024:	mov    r8d,0x104
   14000302a:	xor    ecx,ecx
   14000302c:	mov    rdx,rdi
   14000302f:	mov    BYTE PTR [rip+0xb1ee],0x0        # 0x14000e224
   140003036:	call   QWORD PTR [rip+0x617c]        # 0x1400091b8
   14000303c:	mov    rbx,QWORD PTR [rip+0xc875]        # 0x14000f8b8
   140003043:	mov    QWORD PTR [rip+0xad8e],rdi        # 0x14000ddd8
   14000304a:	test   rbx,rbx
   14000304d:	je     0x140003054
   14000304f:	cmp    BYTE PTR [rbx],0x0
   140003052:	jne    0x140003057
   140003054:	mov    rbx,rdi
   140003057:	lea    rax,[rsp+0x48]
   14000305c:	lea    r9,[rsp+0x40]
   140003061:	xor    r8d,r8d
   140003064:	xor    edx,edx
   140003066:	mov    rcx,rbx
   140003069:	mov    QWORD PTR [rsp+0x20],rax
   14000306e:	call   0x140002e30
   140003073:	movsxd rsi,DWORD PTR [rsp+0x40]
   140003078:	movabs rcx,0x1fffffffffffffff
   140003082:	cmp    rsi,rcx
   140003085:	jae    0x1400030e3
   140003087:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000308c:	cmp    rcx,0xffffffffffffffff
   140003090:	jae    0x1400030e3
   140003092:	lea    rdx,[rcx+rsi*8]
   140003096:	cmp    rdx,rcx
   140003099:	jb     0x1400030e3
   14000309b:	mov    rcx,rdx
   14000309e:	call   0x1400052b8
   1400030a3:	mov    rdi,rax
   1400030a6:	test   rax,rax
   1400030a9:	je     0x1400030e3
   1400030ab:	lea    r8,[rax+rsi*8]
   1400030af:	lea    rax,[rsp+0x48]
   1400030b4:	lea    r9,[rsp+0x40]
   1400030b9:	mov    rdx,rdi
   1400030bc:	mov    rcx,rbx
   1400030bf:	mov    QWORD PTR [rsp+0x20],rax
   1400030c4:	call   0x140002e30
   1400030c9:	mov    r11d,DWORD PTR [rsp+0x40]
   1400030ce:	mov    QWORD PTR [rip+0xacd3],rdi        # 0x14000dda8
   1400030d5:	dec    r11d
   1400030d8:	xor    eax,eax
   1400030da:	mov    DWORD PTR [rip+0xacc3],r11d        # 0x14000dda4
   1400030e1:	jmp    0x1400030e6
   1400030e3:	or     eax,0xffffffff
   1400030e6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400030eb:	mov    rsi,QWORD PTR [rsp+0x58]
   1400030f0:	add    rsp,0x30
   1400030f4:	pop    rdi
   1400030f5:	ret    
   1400030f6:	int3   
   1400030f7:	int3   
   1400030f8:	mov    rax,rsp
   1400030fb:	mov    QWORD PTR [rax+0x8],rbx
   1400030ff:	mov    QWORD PTR [rax+0x10],rbp
   140003103:	mov    QWORD PTR [rax+0x18],rsi
   140003107:	mov    QWORD PTR [rax+0x20],rdi
   14000310b:	push   r12
   14000310d:	sub    rsp,0x40
   140003111:	mov    ecx,DWORD PTR [rip+0xb111]        # 0x14000e228
   140003117:	xor    r12d,r12d
   14000311a:	mov    rbx,r12
   14000311d:	lea    esi,[r12+0x2]
   140003122:	cmp    ecx,r12d
   140003125:	jne    0x140003159
   140003127:	call   QWORD PTR [rip+0x60bb]        # 0x1400091e8
   14000312d:	mov    rbx,rax
   140003130:	cmp    rax,r12
   140003133:	je     0x140003141
   140003135:	mov    DWORD PTR [rip+0xb0e9],0x1        # 0x14000e228
   14000313f:	jmp    0x140003162
   140003141:	call   QWORD PTR [rip+0x5fa9]        # 0x1400090f0
   140003147:	mov    ecx,DWORD PTR [rip+0xb0db]        # 0x14000e228
   14000314d:	cmp    eax,0x78
   140003150:	cmove  ecx,esi
   140003153:	mov    DWORD PTR [rip+0xb0cf],ecx        # 0x14000e228
   140003159:	cmp    ecx,0x1
   14000315c:	jne    0x14000321c
   140003162:	cmp    rbx,r12
   140003165:	jne    0x14000317c
   140003167:	call   QWORD PTR [rip+0x607b]        # 0x1400091e8
   14000316d:	mov    rbx,rax
   140003170:	cmp    rax,r12
   140003173:	jne    0x14000317c
   140003175:	xor    eax,eax
   140003177:	jmp    0x14000328f
   14000317c:	mov    rdi,rbx
   14000317f:	cmp    WORD PTR [rbx],r12w
   140003183:	je     0x140003197
   140003185:	add    rdi,rsi
   140003188:	cmp    WORD PTR [rdi],r12w
   14000318c:	jne    0x140003185
   14000318e:	add    rdi,rsi
   140003191:	cmp    WORD PTR [rdi],r12w
   140003195:	jne    0x140003185
   140003197:	mov    QWORD PTR [rsp+0x38],r12
   14000319c:	mov    QWORD PTR [rsp+0x30],r12
   1400031a1:	sub    rdi,rbx
   1400031a4:	sar    rdi,1
   1400031a7:	mov    r8,rbx
   1400031aa:	xor    edx,edx
   1400031ac:	lea    r9d,[rdi+0x1]
   1400031b0:	xor    ecx,ecx
   1400031b2:	mov    DWORD PTR [rsp+0x28],r12d
   1400031b7:	mov    QWORD PTR [rsp+0x20],r12
   1400031bc:	call   QWORD PTR [rip+0x601e]        # 0x1400091e0
   1400031c2:	movsxd rbp,eax
   1400031c5:	cmp    ebp,r12d
   1400031c8:	je     0x14000320b
   1400031ca:	mov    rcx,rbp
   1400031cd:	call   0x1400052b8
   1400031d2:	mov    rsi,rax
   1400031d5:	cmp    rax,r12
   1400031d8:	je     0x14000320b
   1400031da:	mov    QWORD PTR [rsp+0x38],r12
   1400031df:	mov    QWORD PTR [rsp+0x30],r12
   1400031e4:	lea    r9d,[rdi+0x1]
   1400031e8:	mov    r8,rbx
   1400031eb:	xor    edx,edx
   1400031ed:	xor    ecx,ecx
   1400031ef:	mov    DWORD PTR [rsp+0x28],ebp
   1400031f3:	mov    QWORD PTR [rsp+0x20],rax
   1400031f8:	call   QWORD PTR [rip+0x5fe2]        # 0x1400091e0
   1400031fe:	cmp    eax,r12d
   140003201:	jne    0x14000320e
   140003203:	mov    rcx,rsi
   140003206:	call   0x140005240
   14000320b:	mov    rsi,r12
   14000320e:	mov    rcx,rbx
   140003211:	call   QWORD PTR [rip+0x5fc1]        # 0x1400091d8
   140003217:	mov    rax,rsi
   14000321a:	jmp    0x14000328f
   14000321c:	cmp    ecx,esi
   14000321e:	je     0x140003229
   140003220:	cmp    ecx,r12d
   140003223:	jne    0x140003175
   140003229:	call   QWORD PTR [rip+0x5fa1]        # 0x1400091d0
   14000322f:	mov    rbx,rax
   140003232:	cmp    rax,r12
   140003235:	je     0x140003175
   14000323b:	cmp    BYTE PTR [rax],r12b
   14000323e:	je     0x140003250
   140003240:	inc    rax
   140003243:	cmp    BYTE PTR [rax],r12b
   140003246:	jne    0x140003240
   140003248:	inc    rax
   14000324b:	cmp    BYTE PTR [rax],r12b
   14000324e:	jne    0x140003240
   140003250:	sub    eax,ebx
   140003252:	inc    eax
   140003254:	movsxd rsi,eax
   140003257:	mov    rcx,rsi
   14000325a:	call   0x1400052b8
   14000325f:	mov    rdi,rax
   140003262:	cmp    rax,r12
   140003265:	jne    0x140003275
   140003267:	mov    rcx,rbx
   14000326a:	call   QWORD PTR [rip+0x5f58]        # 0x1400091c8
   140003270:	jmp    0x140003175
   140003275:	mov    r8,rsi
   140003278:	mov    rdx,rbx
   14000327b:	mov    rcx,rax
   14000327e:	call   0x140006430
   140003283:	mov    rcx,rbx
   140003286:	call   QWORD PTR [rip+0x5f3c]        # 0x1400091c8
   14000328c:	mov    rax,rdi
   14000328f:	mov    rbx,QWORD PTR [rsp+0x50]
   140003294:	mov    rbp,QWORD PTR [rsp+0x58]
   140003299:	mov    rsi,QWORD PTR [rsp+0x60]
   14000329e:	mov    rdi,QWORD PTR [rsp+0x68]
   1400032a3:	add    rsp,0x40
   1400032a7:	pop    r12
   1400032a9:	ret    
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	mov    rax,rsp
   1400032af:	mov    QWORD PTR [rax+0x8],rbx
   1400032b3:	mov    QWORD PTR [rax+0x10],rsi
   1400032b7:	mov    QWORD PTR [rax+0x18],rdi
   1400032bb:	mov    QWORD PTR [rax+0x20],r12
   1400032bf:	push   r13
   1400032c1:	push   r14
   1400032c3:	push   r15
   1400032c5:	sub    rsp,0x90
   1400032cc:	lea    rcx,[rsp+0x20]
   1400032d1:	call   QWORD PTR [rip+0x5e79]        # 0x140009150
   1400032d7:	nop
   1400032d8:	mov    edx,0x58
   1400032dd:	lea    r12d,[rdx-0x38]
   1400032e1:	mov    rcx,r12
   1400032e4:	call   0x140005324
   1400032e9:	mov    r11,rax
   1400032ec:	xor    r15d,r15d
   1400032ef:	cmp    rax,r15
   1400032f2:	jne    0x1400032fc
   1400032f4:	or     eax,0xffffffff
   1400032f7:	jmp    0x140003577
   1400032fc:	mov    QWORD PTR [rip+0xc37d],rax        # 0x14000f680
   140003303:	mov    ecx,r12d
   140003306:	mov    DWORD PTR [rip+0xc358],ecx        # 0x14000f664
   14000330c:	add    rax,0xb00
   140003312:	cmp    r11,rax
   140003315:	jae    0x14000335a
   140003317:	mov    BYTE PTR [r11+0x8],r15b
   14000331b:	or     QWORD PTR [r11],0xffffffffffffffff
   14000331f:	mov    BYTE PTR [r11+0x9],0xa
   140003324:	mov    DWORD PTR [r11+0xc],r15d
   140003328:	mov    BYTE PTR [r11+0x38],r15b
   14000332c:	mov    BYTE PTR [r11+0x39],0xa
   140003331:	mov    BYTE PTR [r11+0x3a],0xa
   140003336:	mov    DWORD PTR [r11+0x50],r15d
   14000333a:	mov    BYTE PTR [r11+0x4c],r15b
   14000333e:	add    r11,0x58
   140003342:	mov    rax,QWORD PTR [rip+0xc337]        # 0x14000f680
   140003349:	add    rax,0xb00
   14000334f:	cmp    r11,rax
   140003352:	jb     0x140003317
   140003354:	mov    ecx,DWORD PTR [rip+0xc30a]        # 0x14000f664
   14000335a:	cmp    WORD PTR [rsp+0x62],r15w
   140003360:	je     0x1400034af
   140003366:	mov    rax,QWORD PTR [rsp+0x68]
   14000336b:	cmp    rax,r15
   14000336e:	je     0x1400034af
   140003374:	lea    r13,[rax+0x4]
   140003378:	movsxd rsi,DWORD PTR [rax]
   14000337b:	add    rsi,r13
   14000337e:	mov    ebx,0x800
   140003383:	cmp    DWORD PTR [rax],ebx
   140003385:	cmovl  ebx,DWORD PTR [rax]
   140003388:	mov    edi,0x1
   14000338d:	cmp    ecx,ebx
   14000338f:	jge    0x140003422
   140003395:	lea    r14,[rip+0xc2e4]        # 0x14000f680
   14000339c:	mov    edx,0x58
   1400033a1:	mov    rcx,r12
   1400033a4:	call   0x140005324
   1400033a9:	mov    r11,rax
   1400033ac:	cmp    rax,r15
   1400033af:	je     0x14000341a
   1400033b1:	mov    QWORD PTR [r14+rdi*8],rax
   1400033b5:	mov    eax,DWORD PTR [rip+0xc2a9]        # 0x14000f664
   1400033bb:	add    eax,r12d
   1400033be:	mov    DWORD PTR [rip+0xc2a0],eax        # 0x14000f664
   1400033c4:	lea    rcx,[r11+0xb00]
   1400033cb:	cmp    r11,rcx
   1400033ce:	jae    0x140003411
   1400033d0:	mov    BYTE PTR [r11+0x8],r15b
   1400033d4:	or     QWORD PTR [r11],0xffffffffffffffff
   1400033d8:	mov    BYTE PTR [r11+0x9],0xa
   1400033dd:	mov    DWORD PTR [r11+0xc],r15d
   1400033e1:	and    BYTE PTR [r11+0x38],0x80
   1400033e6:	mov    BYTE PTR [r11+0x39],0xa
   1400033eb:	mov    BYTE PTR [r11+0x3a],0xa
   1400033f0:	mov    DWORD PTR [r11+0x50],r15d
   1400033f4:	mov    BYTE PTR [r11+0x4c],r15b
   1400033f8:	add    r11,0x58
   1400033fc:	mov    rax,QWORD PTR [r14+rdi*8]
   140003400:	add    rax,0xb00
   140003406:	cmp    r11,rax
   140003409:	jb     0x1400033d0
   14000340b:	mov    eax,DWORD PTR [rip+0xc253]        # 0x14000f664
   140003411:	inc    rdi
   140003414:	cmp    eax,ebx
   140003416:	jl     0x14000339c
   140003418:	jmp    0x140003429
   14000341a:	mov    ebx,DWORD PTR [rip+0xc244]        # 0x14000f664
   140003420:	jmp    0x140003429
   140003422:	lea    r14,[rip+0xc257]        # 0x14000f680
   140003429:	mov    edi,r15d
   14000342c:	cmp    ebx,r15d
   14000342f:	jle    0x1400034af
   140003431:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   140003435:	je     0x1400034a2
   140003437:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   14000343b:	je     0x1400034a2
   14000343d:	test   BYTE PTR [r13+0x0],0x1
   140003442:	je     0x1400034a2
   140003444:	test   BYTE PTR [r13+0x0],0x8
   140003449:	jne    0x140003459
   14000344b:	mov    rcx,QWORD PTR [rsi]
   14000344e:	call   QWORD PTR [rip+0x5da4]        # 0x1400091f8
   140003454:	cmp    eax,r15d
   140003457:	je     0x1400034a2
   140003459:	movsxd r12,edi
   14000345c:	mov    rax,r12
   14000345f:	sar    rax,0x5
   140003463:	and    r12d,0x1f
   140003467:	imul   r12,r12,0x58
   14000346b:	add    r12,QWORD PTR [r14+rax*8]
   14000346f:	mov    rax,QWORD PTR [rsi]
   140003472:	mov    QWORD PTR [r12],rax
   140003476:	mov    al,BYTE PTR [r13+0x0]
   14000347a:	mov    BYTE PTR [r12+0x8],al
   14000347f:	lea    rcx,[r12+0x10]
   140003484:	mov    edx,0xfa0
   140003489:	call   0x140005e7c
   14000348e:	cmp    eax,r15d
   140003491:	je     0x14000349a
   140003493:	inc    DWORD PTR [r12+0xc]
   140003498:	jmp    0x1400034a2
   14000349a:	or     eax,0xffffffff
   14000349d:	jmp    0x140003577
   1400034a2:	inc    edi
   1400034a4:	inc    r13
   1400034a7:	add    rsi,0x8
   1400034ab:	cmp    edi,ebx
   1400034ad:	jl     0x140003431
   1400034af:	mov    r12d,r15d
   1400034b2:	mov    rdi,r15
   1400034b5:	mov    rbx,rdi
   1400034b8:	imul   rbx,rbx,0x58
   1400034bc:	add    rbx,QWORD PTR [rip+0xc1bd]        # 0x14000f680
   1400034c3:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   1400034c7:	je     0x1400034d5
   1400034c9:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   1400034cd:	je     0x1400034d5
   1400034cf:	or     BYTE PTR [rbx+0x8],0x80
   1400034d3:	jmp    0x140003554
   1400034d5:	mov    BYTE PTR [rbx+0x8],0x81
   1400034d9:	lea    eax,[r12-0x1]
   1400034de:	neg    eax
   1400034e0:	sbb    ecx,ecx
   1400034e2:	add    ecx,0xfffffff5
   1400034e5:	mov    eax,0xfffffff6
   1400034ea:	cmp    r12d,r15d
   1400034ed:	cmove  ecx,eax
   1400034f0:	call   QWORD PTR [rip+0x5cba]        # 0x1400091b0
   1400034f6:	mov    rsi,rax
   1400034f9:	cmp    rax,0xffffffffffffffff
   1400034fd:	je     0x140003549
   1400034ff:	cmp    rax,r15
   140003502:	je     0x140003549
   140003504:	mov    rcx,rax
   140003507:	call   QWORD PTR [rip+0x5ceb]        # 0x1400091f8
   14000350d:	cmp    eax,r15d
   140003510:	je     0x140003549
   140003512:	mov    QWORD PTR [rbx],rsi
   140003515:	movzx  eax,al
   140003518:	cmp    eax,0x2
   14000351b:	jne    0x140003523
   14000351d:	or     BYTE PTR [rbx+0x8],0x40
   140003521:	jmp    0x14000352c
   140003523:	cmp    eax,0x3
   140003526:	jne    0x14000352c
   140003528:	or     BYTE PTR [rbx+0x8],0x8
   14000352c:	lea    rcx,[rbx+0x10]
   140003530:	mov    edx,0xfa0
   140003535:	call   0x140005e7c
   14000353a:	cmp    eax,r15d
   14000353d:	je     0x140003544
   14000353f:	inc    DWORD PTR [rbx+0xc]
   140003542:	jmp    0x140003554
   140003544:	or     eax,0xffffffff
   140003547:	jmp    0x140003577
   140003549:	or     BYTE PTR [rbx+0x8],0x40
   14000354d:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140003554:	inc    r12d
   140003557:	inc    rdi
   14000355a:	cmp    rdi,0x3
   14000355e:	jl     0x1400034b5
   140003564:	mov    ecx,DWORD PTR [rip+0xc0fa]        # 0x14000f664
   14000356a:	call   QWORD PTR [rip+0x5c80]        # 0x1400091f0
   140003570:	xor    eax,eax
   140003572:	jmp    0x140003577
   140003574:	or     eax,0xffffffff
   140003577:	lea    r11,[rsp+0x90]
   14000357f:	mov    rbx,QWORD PTR [r11+0x20]
   140003583:	mov    rsi,QWORD PTR [r11+0x28]
   140003587:	mov    rdi,QWORD PTR [r11+0x30]
   14000358b:	mov    r12,QWORD PTR [r11+0x38]
   14000358f:	mov    rsp,r11
   140003592:	pop    r15
   140003594:	pop    r14
   140003596:	pop    r13
   140003598:	ret    
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	mov    QWORD PTR [rsp+0x8],rbx
   1400035a1:	push   rdi
   1400035a2:	sub    rsp,0x20
   1400035a6:	lea    rbx,[rip+0x7333]        # 0x14000a8e0
   1400035ad:	lea    rdi,[rip+0x732c]        # 0x14000a8e0
   1400035b4:	jmp    0x1400035c4
   1400035b6:	mov    rax,QWORD PTR [rbx]
   1400035b9:	test   rax,rax
   1400035bc:	je     0x1400035c0
   1400035be:	call   rax
   1400035c0:	add    rbx,0x8
   1400035c4:	cmp    rbx,rdi
   1400035c7:	jb     0x1400035b6
   1400035c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035ce:	add    rsp,0x20
   1400035d2:	pop    rdi
   1400035d3:	ret    
   1400035d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400035d9:	push   rdi
   1400035da:	sub    rsp,0x20
   1400035de:	lea    rbx,[rip+0x730b]        # 0x14000a8f0
   1400035e5:	lea    rdi,[rip+0x7304]        # 0x14000a8f0
   1400035ec:	jmp    0x1400035fc
   1400035ee:	mov    rax,QWORD PTR [rbx]
   1400035f1:	test   rax,rax
   1400035f4:	je     0x1400035f8
   1400035f6:	call   rax
   1400035f8:	add    rbx,0x8
   1400035fc:	cmp    rbx,rdi
   1400035ff:	jb     0x1400035ee
   140003601:	mov    rbx,QWORD PTR [rsp+0x30]
   140003606:	add    rsp,0x20
   14000360a:	pop    rdi
   14000360b:	ret    
   14000360c:	rex.W jmp QWORD PTR [rip+0x5bf5]        # 0x140009208
   140003613:	int3   
   140003614:	xor    ecx,ecx
   140003616:	rex.W jmp QWORD PTR [rip+0x5beb]        # 0x140009208
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	rex.W jmp QWORD PTR [rip+0x5be9]        # 0x140009210
   140003627:	int3   
   140003628:	sub    rsp,0x28
   14000362c:	mov    ecx,DWORD PTR [rip+0x9136]        # 0x14000c768
   140003632:	cmp    ecx,0xffffffff
   140003635:	je     0x140003644
   140003637:	call   QWORD PTR [rip+0x5beb]        # 0x140009228
   14000363d:	or     DWORD PTR [rip+0x9124],0xffffffff        # 0x14000c768
   140003644:	add    rsp,0x28
   140003648:	jmp    0x1400057cc
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    QWORD PTR [rsp+0x8],rbx
   140003655:	push   rdi
   140003656:	sub    rsp,0x20
   14000365a:	mov    rdi,rdx
   14000365d:	mov    rbx,rcx
   140003660:	lea    rax,[rip+0x65a9]        # 0x140009c10
   140003667:	mov    QWORD PTR [rcx+0xa0],rax
   14000366e:	mov    DWORD PTR [rcx+0x1c],0x1
   140003675:	mov    DWORD PTR [rcx+0xc8],0x1
   14000367f:	mov    BYTE PTR [rcx+0x174],0x43
   140003686:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000368d:	lea    rax,[rip+0x949c]        # 0x14000cb30
   140003694:	mov    QWORD PTR [rcx+0xb8],rax
   14000369b:	mov    ecx,0xd
   1400036a0:	call   0x140005950
   1400036a5:	nop
   1400036a6:	mov    rax,QWORD PTR [rbx+0xb8]
   1400036ad:	lock add DWORD PTR [rax],0x1
   1400036b1:	mov    ecx,0xd
   1400036b6:	call   0x140005850
   1400036bb:	mov    ecx,0xc
   1400036c0:	call   0x140005950
   1400036c5:	nop
   1400036c6:	mov    QWORD PTR [rbx+0xc0],rdi
   1400036cd:	test   rdi,rdi
   1400036d0:	jne    0x1400036e0
   1400036d2:	mov    rax,QWORD PTR [rip+0x9b07]        # 0x14000d1e0
   1400036d9:	mov    QWORD PTR [rbx+0xc0],rax
   1400036e0:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400036e7:	call   0x140005030
   1400036ec:	nop
   1400036ed:	mov    ecx,0xc
   1400036f2:	call   0x140005850
   1400036f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036fc:	add    rsp,0x20
   140003700:	pop    rdi
   140003701:	ret    
   140003702:	int3   
   140003703:	int3   
   140003704:	mov    QWORD PTR [rsp+0x8],rbx
   140003709:	push   rdi
   14000370a:	sub    rsp,0x20
   14000370e:	call   QWORD PTR [rip+0x59dc]        # 0x1400090f0
   140003714:	mov    ecx,DWORD PTR [rip+0x904e]        # 0x14000c768
   14000371a:	mov    edi,eax
   14000371c:	call   QWORD PTR [rip+0x5af6]        # 0x140009218
   140003722:	mov    rbx,rax
   140003725:	test   rax,rax
   140003728:	jne    0x140003772
   14000372a:	lea    ecx,[rax+0x1]
   14000372d:	mov    edx,0x2c8
   140003732:	call   0x140005324
   140003737:	mov    rbx,rax
   14000373a:	test   rax,rax
   14000373d:	je     0x140003772
   14000373f:	mov    ecx,DWORD PTR [rip+0x9023]        # 0x14000c768
   140003745:	mov    rdx,rax
   140003748:	call   QWORD PTR [rip+0x5ad2]        # 0x140009220
   14000374e:	mov    rcx,rbx
   140003751:	test   eax,eax
   140003753:	je     0x14000376b
   140003755:	xor    edx,edx
   140003757:	call   0x140003650
   14000375c:	call   QWORD PTR [rip+0x59a6]        # 0x140009108
   140003762:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003767:	mov    DWORD PTR [rbx],eax
   140003769:	jmp    0x140003772
   14000376b:	call   0x140005240
   140003770:	xor    ebx,ebx
   140003772:	mov    ecx,edi
   140003774:	call   QWORD PTR [rip+0x5ab6]        # 0x140009230
   14000377a:	mov    rax,rbx
   14000377d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003782:	add    rsp,0x20
   140003786:	pop    rdi
   140003787:	ret    
   140003788:	rex push rbx
   14000378a:	sub    rsp,0x20
   14000378e:	call   0x140003704
   140003793:	mov    rbx,rax
   140003796:	test   rax,rax
   140003799:	jne    0x1400037a3
   14000379b:	lea    ecx,[rax+0x10]
   14000379e:	call   0x1400022b8
   1400037a3:	mov    rax,rbx
   1400037a6:	add    rsp,0x20
   1400037aa:	pop    rbx
   1400037ab:	ret    
   1400037ac:	test   rcx,rcx
   1400037af:	je     0x1400038e0
   1400037b5:	mov    QWORD PTR [rsp+0x10],rbx
   1400037ba:	push   rdi
   1400037bb:	sub    rsp,0x20
   1400037bf:	mov    rbx,rcx
   1400037c2:	mov    rcx,QWORD PTR [rcx+0x38]
   1400037c6:	test   rcx,rcx
   1400037c9:	je     0x1400037d0
   1400037cb:	call   0x140005240
   1400037d0:	mov    rcx,QWORD PTR [rbx+0x48]
   1400037d4:	test   rcx,rcx
   1400037d7:	je     0x1400037de
   1400037d9:	call   0x140005240
   1400037de:	mov    rcx,QWORD PTR [rbx+0x58]
   1400037e2:	test   rcx,rcx
   1400037e5:	je     0x1400037ec
   1400037e7:	call   0x140005240
   1400037ec:	mov    rcx,QWORD PTR [rbx+0x68]
   1400037f0:	test   rcx,rcx
   1400037f3:	je     0x1400037fa
   1400037f5:	call   0x140005240
   1400037fa:	mov    rcx,QWORD PTR [rbx+0x70]
   1400037fe:	test   rcx,rcx
   140003801:	je     0x140003808
   140003803:	call   0x140005240
   140003808:	mov    rcx,QWORD PTR [rbx+0x78]
   14000380c:	test   rcx,rcx
   14000380f:	je     0x140003816
   140003811:	call   0x140005240
   140003816:	mov    rcx,QWORD PTR [rbx+0x80]
   14000381d:	test   rcx,rcx
   140003820:	je     0x140003827
   140003822:	call   0x140005240
   140003827:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000382e:	lea    rax,[rip+0x63db]        # 0x140009c10
   140003835:	cmp    rcx,rax
   140003838:	je     0x14000383f
   14000383a:	call   0x140005240
   14000383f:	mov    ecx,0xd
   140003844:	call   0x140005950
   140003849:	nop
   14000384a:	mov    rcx,QWORD PTR [rbx+0xb8]
   140003851:	mov    QWORD PTR [rsp+0x30],rcx
   140003856:	test   rcx,rcx
   140003859:	je     0x140003878
   14000385b:	lock add DWORD PTR [rcx],0xffffffff
   14000385f:	jne    0x140003878
   140003861:	lea    rax,[rip+0x92c8]        # 0x14000cb30
   140003868:	mov    rcx,QWORD PTR [rsp+0x30]
   14000386d:	cmp    rcx,rax
   140003870:	je     0x140003878
   140003872:	call   0x140005240
   140003877:	nop
   140003878:	mov    ecx,0xd
   14000387d:	call   0x140005850
   140003882:	mov    ecx,0xc
   140003887:	call   0x140005950
   14000388c:	nop
   14000388d:	mov    rdi,QWORD PTR [rbx+0xc0]
   140003894:	test   rdi,rdi
   140003897:	je     0x1400038c4
   140003899:	mov    rcx,rdi
   14000389c:	call   0x1400050c8
   1400038a1:	cmp    rdi,QWORD PTR [rip+0x9938]        # 0x14000d1e0
   1400038a8:	je     0x1400038c4
   1400038aa:	lea    rax,[rip+0x97cf]        # 0x14000d080
   1400038b1:	cmp    rdi,rax
   1400038b4:	je     0x1400038c4
   1400038b6:	cmp    DWORD PTR [rdi],0x0
   1400038b9:	jne    0x1400038c4
   1400038bb:	mov    rcx,rdi
   1400038be:	call   0x140004eb4
   1400038c3:	nop
   1400038c4:	mov    ecx,0xc
   1400038c9:	call   0x140005850
   1400038ce:	mov    rcx,rbx
   1400038d1:	call   0x140005240
   1400038d6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400038db:	add    rsp,0x20
   1400038df:	pop    rdi
   1400038e0:	ret    
   1400038e1:	int3   
   1400038e2:	int3   
   1400038e3:	int3   
   1400038e4:	rex push rbx
   1400038e6:	sub    rsp,0x20
   1400038ea:	call   0x140002638
   1400038ef:	call   0x140005740
   1400038f4:	test   eax,eax
   1400038f6:	je     0x140003958
   1400038f8:	lea    rcx,[rip+0xfffffffffffffead]        # 0x1400037ac
   1400038ff:	call   QWORD PTR [rip+0x5933]        # 0x140009238
   140003905:	mov    DWORD PTR [rip+0x8e5d],eax        # 0x14000c768
   14000390b:	cmp    eax,0xffffffff
   14000390e:	je     0x140003958
   140003910:	mov    edx,0x2c8
   140003915:	mov    ecx,0x1
   14000391a:	call   0x140005324
   14000391f:	mov    rbx,rax
   140003922:	test   rax,rax
   140003925:	je     0x140003958
   140003927:	mov    ecx,DWORD PTR [rip+0x8e3b]        # 0x14000c768
   14000392d:	mov    rdx,rax
   140003930:	call   QWORD PTR [rip+0x58ea]        # 0x140009220
   140003936:	test   eax,eax
   140003938:	je     0x140003958
   14000393a:	xor    edx,edx
   14000393c:	mov    rcx,rbx
   14000393f:	call   0x140003650
   140003944:	call   QWORD PTR [rip+0x57be]        # 0x140009108
   14000394a:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000394f:	mov    DWORD PTR [rbx],eax
   140003951:	mov    eax,0x1
   140003956:	jmp    0x14000395f
   140003958:	call   0x140003628
   14000395d:	xor    eax,eax
   14000395f:	add    rsp,0x20
   140003963:	pop    rbx
   140003964:	ret    
   140003965:	int3   
   140003966:	int3   
   140003967:	int3   
   140003968:	mov    DWORD PTR [rsp+0x8],ecx
   14000396c:	sub    rsp,0x28
   140003970:	xor    r8d,r8d
   140003973:	mov    edx,0x1000
   140003978:	xor    ecx,ecx
   14000397a:	call   QWORD PTR [rip+0x58c8]        # 0x140009248
   140003980:	mov    QWORD PTR [rip+0xa8a9],rax        # 0x14000e230
   140003987:	test   rax,rax
   14000398a:	je     0x1400039af
   14000398c:	lea    r8,[rsp+0x30]
   140003991:	mov    r9d,0x4
   140003997:	xor    edx,edx
   140003999:	mov    rcx,rax
   14000399c:	mov    DWORD PTR [rsp+0x30],0x2
   1400039a4:	call   QWORD PTR [rip+0x5896]        # 0x140009240
   1400039aa:	mov    eax,0x1
   1400039af:	add    rsp,0x28
   1400039b3:	ret    
   1400039b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400039b9:	push   rdi
   1400039ba:	sub    rsp,0x20
   1400039be:	mov    rax,QWORD PTR [rip+0x8a23]        # 0x14000c3e8
   1400039c5:	and    QWORD PTR [rsp+0x30],0x0
   1400039cb:	movabs rdi,0x2b992ddfa232
   1400039d5:	cmp    rax,rdi
   1400039d8:	je     0x1400039e6
   1400039da:	not    rax
   1400039dd:	mov    QWORD PTR [rip+0x8a0c],rax        # 0x14000c3f0
   1400039e4:	jmp    0x140003a5c
   1400039e6:	lea    rcx,[rsp+0x30]
   1400039eb:	call   QWORD PTR [rip+0x5877]        # 0x140009268
   1400039f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039f6:	call   QWORD PTR [rip+0x5864]        # 0x140009260
   1400039fc:	mov    r11d,eax
   1400039ff:	xor    rbx,r11
   140003a02:	call   QWORD PTR [rip+0x5700]        # 0x140009108
   140003a08:	mov    r11d,eax
   140003a0b:	xor    rbx,r11
   140003a0e:	call   QWORD PTR [rip+0x5844]        # 0x140009258
   140003a14:	lea    rcx,[rsp+0x38]
   140003a19:	mov    r11d,eax
   140003a1c:	xor    rbx,r11
   140003a1f:	call   QWORD PTR [rip+0x582b]        # 0x140009250
   140003a25:	mov    r11,QWORD PTR [rsp+0x38]
   140003a2a:	xor    r11,rbx
   140003a2d:	movabs rax,0xffffffffffff
   140003a37:	and    r11,rax
   140003a3a:	movabs rax,0x2b992ddfa233
   140003a44:	cmp    r11,rdi
   140003a47:	cmove  r11,rax
   140003a4b:	mov    QWORD PTR [rip+0x8996],r11        # 0x14000c3e8
   140003a52:	not    r11
   140003a55:	mov    QWORD PTR [rip+0x8994],r11        # 0x14000c3f0
   140003a5c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003a61:	add    rsp,0x20
   140003a65:	pop    rdi
   140003a66:	ret    
   140003a67:	int3   
   140003a68:	mov    QWORD PTR [rsp+0x8],rbx
   140003a6d:	push   rdi
   140003a6e:	sub    rsp,0x20
   140003a72:	movsxd rbx,ecx
   140003a75:	mov    edi,r8d
   140003a78:	mov    QWORD PTR [rsp+0x38],rdx
   140003a7d:	mov    ecx,ebx
   140003a7f:	call   0x140006810
   140003a84:	cmp    rax,0xffffffffffffffff
   140003a88:	jne    0x140003a9b
   140003a8a:	call   0x140002088
   140003a8f:	mov    DWORD PTR [rax],0x9
   140003a95:	or     rax,0xffffffffffffffff
   140003a99:	jmp    0x140003af2
   140003a9b:	mov    edx,DWORD PTR [rsp+0x38]
   140003a9f:	lea    r8,[rsp+0x3c]
   140003aa4:	mov    r9d,edi
   140003aa7:	mov    rcx,rax
   140003aaa:	call   QWORD PTR [rip+0x5628]        # 0x1400090d8
   140003ab0:	mov    DWORD PTR [rsp+0x38],eax
   140003ab4:	cmp    eax,0xffffffff
   140003ab7:	jne    0x140003acc
   140003ab9:	call   QWORD PTR [rip+0x5631]        # 0x1400090f0
   140003abf:	test   eax,eax
   140003ac1:	je     0x140003acc
   140003ac3:	mov    ecx,eax
   140003ac5:	call   0x1400020c8
   140003aca:	jmp    0x140003a95
   140003acc:	mov    rcx,rbx
   140003acf:	mov    rax,rbx
   140003ad2:	lea    rdx,[rip+0xbba7]        # 0x14000f680
   140003ad9:	sar    rax,0x5
   140003add:	and    ecx,0x1f
   140003ae0:	mov    rax,QWORD PTR [rdx+rax*8]
   140003ae4:	imul   rcx,rcx,0x58
   140003ae8:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140003aed:	mov    rax,QWORD PTR [rsp+0x38]
   140003af2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003af7:	add    rsp,0x20
   140003afb:	pop    rdi
   140003afc:	ret    
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	mov    QWORD PTR [rsp+0x20],rbx
   140003b05:	push   rbp
   140003b06:	push   rsi
   140003b07:	push   rdi
   140003b08:	push   r12
   140003b0a:	push   r13
   140003b0c:	push   r14
   140003b0e:	push   r15
   140003b10:	mov    eax,0x1b30
   140003b15:	call   0x1400089a0
   140003b1a:	sub    rsp,rax
   140003b1d:	mov    rax,QWORD PTR [rip+0x88c4]        # 0x14000c3e8
   140003b24:	xor    rax,rsp
   140003b27:	mov    QWORD PTR [rsp+0x1b20],rax
   140003b2f:	xor    ebp,ebp
   140003b31:	xor    edi,edi
   140003b33:	mov    r13d,r8d
   140003b36:	mov    r12,rdx
   140003b39:	movsxd rbx,ecx
   140003b3c:	mov    DWORD PTR [rsp+0x40],ebp
   140003b40:	test   r8d,r8d
   140003b43:	jne    0x140003b4c
   140003b45:	xor    eax,eax
   140003b47:	jmp    0x140004233
   140003b4c:	test   rdx,rdx
   140003b4f:	jne    0x140003b7f
   140003b51:	call   0x1400020a8
   140003b56:	and    DWORD PTR [rax],edi
   140003b58:	call   0x140002088
   140003b5d:	and    QWORD PTR [rsp+0x20],rdi
   140003b62:	xor    r9d,r9d
   140003b65:	xor    r8d,r8d
   140003b68:	xor    edx,edx
   140003b6a:	xor    ecx,ecx
   140003b6c:	mov    DWORD PTR [rax],0x16
   140003b72:	call   0x140001fb8
   140003b77:	or     eax,0xffffffff
   140003b7a:	jmp    0x140004233
   140003b7f:	mov    r15,rbx
   140003b82:	mov    r14,rbx
   140003b85:	lea    rax,[rip+0xbaf4]        # 0x14000f680
   140003b8c:	sar    r14,0x5
   140003b90:	and    r15d,0x1f
   140003b94:	mov    rcx,QWORD PTR [rax+r14*8]
   140003b98:	mov    QWORD PTR [rsp+0x50],r14
   140003b9d:	imul   r15,r15,0x58
   140003ba1:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140003ba6:	add    sil,sil
   140003ba9:	sar    sil,1
   140003bac:	cmp    sil,0x2
   140003bb0:	je     0x140003bb8
   140003bb2:	cmp    sil,0x1
   140003bb6:	jne    0x140003bc1
   140003bb8:	mov    eax,r13d
   140003bbb:	not    eax
   140003bbd:	test   al,0x1
   140003bbf:	je     0x140003b51
   140003bc1:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140003bc7:	je     0x140003bd6
   140003bc9:	xor    edx,edx
   140003bcb:	mov    ecx,ebx
   140003bcd:	lea    r8d,[rdx+0x2]
   140003bd1:	call   0x140003a68
   140003bd6:	mov    ecx,ebx
   140003bd8:	call   0x140004394
   140003bdd:	test   eax,eax
   140003bdf:	je     0x140003ed6
   140003be5:	lea    rax,[rip+0xba94]        # 0x14000f680
   140003bec:	mov    rax,QWORD PTR [rax+r14*8]
   140003bf0:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140003bf6:	je     0x140003ed6
   140003bfc:	call   0x140003788
   140003c01:	xor    ebx,ebx
   140003c03:	lea    rdx,[rsp+0x58]
   140003c08:	mov    rcx,QWORD PTR [rax+0xc0]
   140003c0f:	lea    rax,[rip+0xba6a]        # 0x14000f680
   140003c16:	cmp    DWORD PTR [rcx+0x14],ebx
   140003c19:	mov    rcx,QWORD PTR [rax+r14*8]
   140003c1d:	mov    rcx,QWORD PTR [r15+rcx*1]
   140003c21:	sete   bl
   140003c24:	call   QWORD PTR [rip+0x549e]        # 0x1400090c8
   140003c2a:	test   eax,eax
   140003c2c:	je     0x140003ed6
   140003c32:	test   ebx,ebx
   140003c34:	je     0x140003c3f
   140003c36:	test   sil,sil
   140003c39:	je     0x140003ed6
   140003c3f:	call   QWORD PTR [rip+0x548b]        # 0x1400090d0
   140003c45:	and    DWORD PTR [rsp+0x4c],edi
   140003c49:	mov    rbx,r12
   140003c4c:	mov    DWORD PTR [rsp+0x58],eax
   140003c50:	test   r13d,r13d
   140003c53:	je     0x140003ed0
   140003c59:	mov    r14d,DWORD PTR [rsp+0x58]
   140003c5e:	mov    ebp,0xd
   140003c63:	test   sil,sil
   140003c66:	jne    0x140003def
   140003c6c:	mov    rdx,QWORD PTR [rsp+0x50]
   140003c71:	mov    cl,BYTE PTR [rbx]
   140003c73:	xor    r14d,r14d
   140003c76:	cmp    cl,0xa
   140003c79:	lea    rbp,[rip+0xba00]        # 0x14000f680
   140003c80:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   140003c85:	sete   r14b
   140003c89:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140003c8f:	je     0x140003cb1
   140003c91:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140003c96:	mov    BYTE PTR [rsp+0x5d],cl
   140003c9a:	mov    r8d,0x2
   140003ca0:	mov    BYTE PTR [rsp+0x5c],al
   140003ca4:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140003caa:	lea    rdx,[rsp+0x5c]
   140003caf:	jmp    0x140003cfa
   140003cb1:	movsx  ecx,cl
   140003cb4:	call   0x1400055f4
   140003cb9:	test   eax,eax
   140003cbb:	je     0x140003cf1
   140003cbd:	mov    rax,r13
   140003cc0:	sub    rax,rbx
   140003cc3:	add    rax,r12
   140003cc6:	cmp    rax,0x1
   140003cca:	jle    0x140003e9f
   140003cd0:	lea    rcx,[rsp+0x44]
   140003cd5:	mov    r8d,0x2
   140003cdb:	mov    rdx,rbx
   140003cde:	call   0x1400055a4
   140003ce3:	cmp    eax,0xffffffff
   140003ce6:	je     0x140003e62
   140003cec:	inc    rbx
   140003cef:	jmp    0x140003d0d
   140003cf1:	mov    r8d,0x1
   140003cf7:	mov    rdx,rbx
   140003cfa:	lea    rcx,[rsp+0x44]
   140003cff:	call   0x1400055a4
   140003d04:	cmp    eax,0xffffffff
   140003d07:	je     0x140003e62
   140003d0d:	and    QWORD PTR [rsp+0x38],0x0
   140003d13:	and    QWORD PTR [rsp+0x30],0x0
   140003d19:	mov    ecx,DWORD PTR [rsp+0x58]
   140003d1d:	lea    rax,[rsp+0x5c]
   140003d22:	lea    r8,[rsp+0x44]
   140003d27:	mov    r9d,0x1
   140003d2d:	xor    edx,edx
   140003d2f:	mov    DWORD PTR [rsp+0x28],0x5
   140003d37:	inc    rbx
   140003d3a:	mov    QWORD PTR [rsp+0x20],rax
   140003d3f:	call   QWORD PTR [rip+0x549b]        # 0x1400091e0
   140003d45:	mov    ebp,eax
   140003d47:	test   eax,eax
   140003d49:	je     0x140003e62
   140003d4f:	mov    rax,QWORD PTR [rsp+0x50]
   140003d54:	and    QWORD PTR [rsp+0x20],0x0
   140003d5a:	lea    rcx,[rip+0xb91f]        # 0x14000f680
   140003d61:	mov    rcx,QWORD PTR [rcx+rax*8]
   140003d65:	lea    r9,[rsp+0x4c]
   140003d6a:	lea    rdx,[rsp+0x5c]
   140003d6f:	mov    rcx,QWORD PTR [r15+rcx*1]
   140003d73:	mov    r8d,ebp
   140003d76:	call   QWORD PTR [rip+0x542c]        # 0x1400091a8
   140003d7c:	test   eax,eax
   140003d7e:	je     0x140003ec6
   140003d84:	mov    edi,ebx
   140003d86:	sub    edi,r12d
   140003d89:	add    edi,DWORD PTR [rsp+0x40]
   140003d8d:	cmp    DWORD PTR [rsp+0x4c],ebp
   140003d91:	jl     0x140003e62
   140003d97:	mov    ebp,0xd
   140003d9c:	test   r14d,r14d
   140003d9f:	je     0x140003e54
   140003da5:	mov    rax,QWORD PTR [rsp+0x50]
   140003daa:	and    QWORD PTR [rsp+0x20],0x0
   140003db0:	mov    BYTE PTR [rsp+0x5c],bpl
   140003db5:	lea    rcx,[rip+0xb8c4]        # 0x14000f680
   140003dbc:	lea    r9,[rsp+0x4c]
   140003dc1:	lea    r8d,[rbp-0xc]
   140003dc5:	mov    rcx,QWORD PTR [rcx+rax*8]
   140003dc9:	lea    rdx,[rsp+0x5c]
   140003dce:	mov    rcx,QWORD PTR [r15+rcx*1]
   140003dd2:	call   QWORD PTR [rip+0x53d0]        # 0x1400091a8
   140003dd8:	test   eax,eax
   140003dda:	je     0x140003ec6
   140003de0:	cmp    DWORD PTR [rsp+0x4c],0x1
   140003de5:	jl     0x140003e62
   140003de7:	inc    DWORD PTR [rsp+0x40]
   140003deb:	inc    edi
   140003ded:	jmp    0x140003e54
   140003def:	cmp    sil,0x1
   140003df3:	je     0x140003dfb
   140003df5:	cmp    sil,0x2
   140003df9:	jne    0x140003e12
   140003dfb:	movzx  eax,WORD PTR [rbx]
   140003dfe:	xor    r14d,r14d
   140003e01:	cmp    ax,0xa
   140003e05:	mov    WORD PTR [rsp+0x44],ax
   140003e0a:	sete   r14b
   140003e0e:	add    rbx,0x2
   140003e12:	cmp    sil,0x1
   140003e16:	je     0x140003e1e
   140003e18:	cmp    sil,0x2
   140003e1c:	jne    0x140003e54
   140003e1e:	movzx  ecx,WORD PTR [rsp+0x44]
   140003e23:	call   0x140006964
   140003e28:	cmp    ax,WORD PTR [rsp+0x44]
   140003e2d:	jne    0x140003ec6
   140003e33:	add    edi,0x2
   140003e36:	test   r14d,r14d
   140003e39:	je     0x140003e54
   140003e3b:	mov    ecx,ebp
   140003e3d:	mov    WORD PTR [rsp+0x44],bp
   140003e42:	call   0x140006964
   140003e47:	cmp    ax,WORD PTR [rsp+0x44]
   140003e4c:	jne    0x140003ec6
   140003e4e:	inc    edi
   140003e50:	inc    DWORD PTR [rsp+0x40]
   140003e54:	mov    eax,ebx
   140003e56:	sub    eax,r12d
   140003e59:	cmp    eax,r13d
   140003e5c:	jb     0x140003c63
   140003e62:	mov    ebx,DWORD PTR [rsp+0x4c]
   140003e66:	mov    r14,QWORD PTR [rsp+0x50]
   140003e6b:	mov    ebp,DWORD PTR [rsp+0x40]
   140003e6f:	test   edi,edi
   140003e71:	jne    0x14000422f
   140003e77:	test   ebx,ebx
   140003e79:	je     0x1400041f9
   140003e7f:	cmp    ebx,0x5
   140003e82:	jne    0x1400041ed
   140003e88:	call   0x140002088
   140003e8d:	mov    DWORD PTR [rax],0x9
   140003e93:	call   0x1400020a8
   140003e98:	mov    DWORD PTR [rax],ebx
   140003e9a:	jmp    0x140003b77
   140003e9f:	mov    al,BYTE PTR [rbx]
   140003ea1:	mov    r14,QWORD PTR [rsp+0x50]
   140003ea6:	inc    edi
   140003ea8:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   140003ead:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140003eb2:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   140003eb7:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140003ec0:	mov    ebx,DWORD PTR [rsp+0x4c]
   140003ec4:	jmp    0x140003e6b
   140003ec6:	call   QWORD PTR [rip+0x5224]        # 0x1400090f0
   140003ecc:	mov    ebx,eax
   140003ece:	jmp    0x140003e66
   140003ed0:	mov    ebx,DWORD PTR [rsp+0x4c]
   140003ed4:	jmp    0x140003e77
   140003ed6:	lea    rax,[rip+0xb7a3]        # 0x14000f680
   140003edd:	mov    rcx,QWORD PTR [rax+r14*8]
   140003ee1:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140003ee7:	je     0x1400041b7
   140003eed:	xor    ebx,ebx
   140003eef:	mov    rbp,r12
   140003ef2:	test   sil,sil
   140003ef5:	jne    0x140003fcb
   140003efb:	test   r13d,r13d
   140003efe:	je     0x140004200
   140003f04:	lea    edx,[rbx+0xd]
   140003f07:	mov    r14d,DWORD PTR [rsp+0x40]
   140003f0c:	lea    rsi,[rsp+0x720]
   140003f14:	xor    ecx,ecx
   140003f16:	mov    eax,ebp
   140003f18:	sub    eax,r12d
   140003f1b:	cmp    eax,r13d
   140003f1e:	jae    0x140003f46
   140003f20:	mov    al,BYTE PTR [rbp+0x0]
   140003f23:	inc    rbp
   140003f26:	cmp    al,0xa
   140003f28:	jne    0x140003f35
   140003f2a:	mov    BYTE PTR [rsi],dl
   140003f2c:	inc    r14d
   140003f2f:	inc    rsi
   140003f32:	inc    rcx
   140003f35:	inc    rcx
   140003f38:	mov    BYTE PTR [rsi],al
   140003f3a:	inc    rsi
   140003f3d:	cmp    rcx,0x13ff
   140003f44:	jb     0x140003f16
   140003f46:	and    QWORD PTR [rsp+0x20],rbx
   140003f4b:	lea    rax,[rsp+0x720]
   140003f53:	mov    r8d,esi
   140003f56:	sub    r8d,eax
   140003f59:	lea    rax,[rip+0xb720]        # 0x14000f680
   140003f60:	mov    DWORD PTR [rsp+0x40],r14d
   140003f65:	mov    r14,QWORD PTR [rsp+0x50]
   140003f6a:	lea    r9,[rsp+0x48]
   140003f6f:	lea    rdx,[rsp+0x720]
   140003f77:	mov    rcx,QWORD PTR [rax+r14*8]
   140003f7b:	mov    rcx,QWORD PTR [r15+rcx*1]
   140003f7f:	call   QWORD PTR [rip+0x5223]        # 0x1400091a8
   140003f85:	test   eax,eax
   140003f87:	je     0x140003fbe
   140003f89:	add    edi,DWORD PTR [rsp+0x48]
   140003f8d:	lea    rax,[rsp+0x720]
   140003f95:	sub    rsi,rax
   140003f98:	movsxd rax,DWORD PTR [rsp+0x48]
   140003f9d:	cmp    rax,rsi
   140003fa0:	jl     0x140003e6b
   140003fa6:	mov    eax,ebp
   140003fa8:	mov    edx,0xd
   140003fad:	sub    eax,r12d
   140003fb0:	cmp    eax,r13d
   140003fb3:	jb     0x140003f07
   140003fb9:	jmp    0x140003e6b
   140003fbe:	call   QWORD PTR [rip+0x512c]        # 0x1400090f0
   140003fc4:	mov    ebx,eax
   140003fc6:	jmp    0x140003e6b
   140003fcb:	cmp    sil,0x2
   140003fcf:	jne    0x1400040a9
   140003fd5:	test   r13d,r13d
   140003fd8:	je     0x140004200
   140003fde:	mov    edx,0xd
   140003fe3:	mov    r14d,DWORD PTR [rsp+0x40]
   140003fe8:	lea    rsi,[rsp+0x720]
   140003ff0:	xor    ecx,ecx
   140003ff2:	mov    eax,ebp
   140003ff4:	sub    eax,r12d
   140003ff7:	cmp    eax,r13d
   140003ffa:	jae    0x14000402d
   140003ffc:	movzx  eax,WORD PTR [rbp+0x0]
   140004000:	add    rbp,0x2
   140004004:	cmp    ax,0xa
   140004008:	jne    0x140004019
   14000400a:	mov    WORD PTR [rsi],dx
   14000400d:	add    r14d,0x2
   140004011:	add    rsi,0x2
   140004015:	add    rcx,0x2
   140004019:	add    rcx,0x2
   14000401d:	mov    WORD PTR [rsi],ax
   140004020:	add    rsi,0x2
   140004024:	cmp    rcx,0x13fe
   14000402b:	jb     0x140003ff2
   14000402d:	and    QWORD PTR [rsp+0x20],rbx
   140004032:	lea    rax,[rsp+0x720]
   14000403a:	mov    r8d,esi
   14000403d:	sub    r8d,eax
   140004040:	lea    rax,[rip+0xb639]        # 0x14000f680
   140004047:	mov    DWORD PTR [rsp+0x40],r14d
   14000404c:	mov    r14,QWORD PTR [rsp+0x50]
   140004051:	lea    r9,[rsp+0x48]
   140004056:	lea    rdx,[rsp+0x720]
   14000405e:	mov    rcx,QWORD PTR [rax+r14*8]
   140004062:	mov    rcx,QWORD PTR [r15+rcx*1]
   140004066:	call   QWORD PTR [rip+0x513c]        # 0x1400091a8
   14000406c:	test   eax,eax
   14000406e:	je     0x140003fbe
   140004074:	add    edi,DWORD PTR [rsp+0x48]
   140004078:	lea    rax,[rsp+0x720]
   140004080:	sub    rsi,rax
   140004083:	movsxd rax,DWORD PTR [rsp+0x48]
   140004088:	cmp    rax,rsi
   14000408b:	jl     0x140003e6b
   140004091:	mov    eax,ebp
   140004093:	mov    edx,0xd
   140004098:	sub    eax,r12d
   14000409b:	cmp    eax,r13d
   14000409e:	jb     0x140003fe3
   1400040a4:	jmp    0x140003e6b
   1400040a9:	test   r13d,r13d
   1400040ac:	je     0x140004200
   1400040b2:	mov    r8d,0xd
   1400040b8:	lea    rcx,[rsp+0x70]
   1400040bd:	xor    edx,edx
   1400040bf:	mov    eax,ebp
   1400040c1:	sub    eax,r12d
   1400040c4:	cmp    eax,r13d
   1400040c7:	jae    0x1400040f7
   1400040c9:	movzx  eax,WORD PTR [rbp+0x0]
   1400040cd:	add    rbp,0x2
   1400040d1:	cmp    ax,0xa
   1400040d5:	jne    0x1400040e3
   1400040d7:	mov    WORD PTR [rcx],r8w
   1400040db:	add    rcx,0x2
   1400040df:	add    rdx,0x2
   1400040e3:	add    rdx,0x2
   1400040e7:	mov    WORD PTR [rcx],ax
   1400040ea:	add    rcx,0x2
   1400040ee:	cmp    rdx,0x6a8
   1400040f5:	jb     0x1400040bf
   1400040f7:	and    QWORD PTR [rsp+0x38],0x0
   1400040fd:	and    QWORD PTR [rsp+0x30],0x0
   140004103:	lea    rax,[rsp+0x70]
   140004108:	sub    ecx,eax
   14000410a:	lea    r8,[rsp+0x70]
   14000410f:	mov    DWORD PTR [rsp+0x28],0xd55
   140004117:	mov    eax,ecx
   140004119:	mov    ecx,0xfde9
   14000411e:	cdq    
   14000411f:	sub    eax,edx
   140004121:	xor    edx,edx
   140004123:	sar    eax,1
   140004125:	mov    r9d,eax
   140004128:	lea    rax,[rsp+0x720]
   140004130:	mov    QWORD PTR [rsp+0x20],rax
   140004135:	call   QWORD PTR [rip+0x50a5]        # 0x1400091e0
   14000413b:	mov    r14d,eax
   14000413e:	test   eax,eax
   140004140:	je     0x140003ec6
   140004146:	xor    esi,esi
   140004148:	mov    rax,QWORD PTR [rsp+0x50]
   14000414d:	and    QWORD PTR [rsp+0x20],0x0
   140004153:	movsxd rcx,esi
   140004156:	lea    rdx,[rsp+rcx*1+0x720]
   14000415e:	mov    r8d,r14d
   140004161:	lea    rcx,[rip+0xb518]        # 0x14000f680
   140004168:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000416c:	lea    r9,[rsp+0x48]
   140004171:	sub    r8d,esi
   140004174:	mov    rcx,QWORD PTR [r15+rcx*1]
   140004178:	call   QWORD PTR [rip+0x502a]        # 0x1400091a8
   14000417e:	test   eax,eax
   140004180:	je     0x14000418d
   140004182:	add    esi,DWORD PTR [rsp+0x48]
   140004186:	cmp    r14d,esi
   140004189:	jg     0x140004148
   14000418b:	jmp    0x140004195
   14000418d:	call   QWORD PTR [rip+0x4f5d]        # 0x1400090f0
   140004193:	mov    ebx,eax
   140004195:	cmp    r14d,esi
   140004198:	jg     0x140003e66
   14000419e:	mov    edi,ebp
   1400041a0:	mov    r8d,0xd
   1400041a6:	sub    edi,r12d
   1400041a9:	cmp    edi,r13d
   1400041ac:	jb     0x1400040b8
   1400041b2:	jmp    0x140003e66
   1400041b7:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400041bb:	and    QWORD PTR [rsp+0x20],rdi
   1400041c0:	lea    r9,[rsp+0x48]
   1400041c5:	mov    r8d,r13d
   1400041c8:	mov    rdx,r12
   1400041cb:	call   QWORD PTR [rip+0x4fd7]        # 0x1400091a8
   1400041d1:	test   eax,eax
   1400041d3:	je     0x1400041e0
   1400041d5:	mov    edi,DWORD PTR [rsp+0x48]
   1400041d9:	xor    ebx,ebx
   1400041db:	jmp    0x140003e6f
   1400041e0:	call   QWORD PTR [rip+0x4f0a]        # 0x1400090f0
   1400041e6:	mov    ebx,eax
   1400041e8:	jmp    0x140003e6f
   1400041ed:	mov    ecx,ebx
   1400041ef:	call   0x1400020c8
   1400041f4:	jmp    0x140003b77
   1400041f9:	lea    rax,[rip+0xb480]        # 0x14000f680
   140004200:	mov    rax,QWORD PTR [rax+r14*8]
   140004204:	test   BYTE PTR [r15+rax*1+0x8],0x40
   14000420a:	je     0x140004217
   14000420c:	cmp    BYTE PTR [r12],0x1a
   140004211:	je     0x140003b45
   140004217:	call   0x140002088
   14000421c:	mov    DWORD PTR [rax],0x1c
   140004222:	call   0x1400020a8
   140004227:	and    DWORD PTR [rax],0x0
   14000422a:	jmp    0x140003b77
   14000422f:	sub    edi,ebp
   140004231:	mov    eax,edi
   140004233:	mov    rcx,QWORD PTR [rsp+0x1b20]
   14000423b:	xor    rcx,rsp
   14000423e:	call   0x140001ad0
   140004243:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14000424b:	add    rsp,0x1b30
   140004252:	pop    r15
   140004254:	pop    r14
   140004256:	pop    r13
   140004258:	pop    r12
   14000425a:	pop    rdi
   14000425b:	pop    rsi
   14000425c:	pop    rbp
   14000425d:	ret    
   14000425e:	int3   
   14000425f:	int3   
   140004260:	mov    QWORD PTR [rsp+0x10],rbx
   140004265:	mov    QWORD PTR [rsp+0x18],rsi
   14000426a:	mov    DWORD PTR [rsp+0x8],ecx
   14000426e:	push   rdi
   14000426f:	push   r12
   140004271:	push   r13
   140004273:	push   r14
   140004275:	push   r15
   140004277:	sub    rsp,0x30
   14000427b:	mov    r12d,r8d
   14000427e:	mov    r13,rdx
   140004281:	movsxd rbx,ecx
   140004284:	cmp    ebx,0xfffffffe
   140004287:	jne    0x1400042a5
   140004289:	call   0x1400020a8
   14000428e:	xor    edi,edi
   140004290:	mov    DWORD PTR [rax],edi
   140004292:	call   0x140002088
   140004297:	mov    DWORD PTR [rax],0x9
   14000429d:	or     eax,0xffffffff
   1400042a0:	jmp    0x140004379
   1400042a5:	xor    edi,edi
   1400042a7:	cmp    ebx,edi
   1400042a9:	jl     0x140004350
   1400042af:	cmp    ebx,DWORD PTR [rip+0xb3af]        # 0x14000f664
   1400042b5:	jae    0x140004350
   1400042bb:	mov    rsi,rbx
   1400042be:	mov    r14,rbx
   1400042c1:	sar    r14,0x5
   1400042c5:	lea    r15,[rip+0xb3b4]        # 0x14000f680
   1400042cc:	and    esi,0x1f
   1400042cf:	imul   rsi,rsi,0x58
   1400042d3:	mov    rax,QWORD PTR [r15+r14*8]
   1400042d7:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400042dc:	and    ecx,0x1
   1400042df:	jne    0x14000430c
   1400042e1:	call   0x1400020a8
   1400042e6:	mov    DWORD PTR [rax],edi
   1400042e8:	call   0x140002088
   1400042ed:	mov    DWORD PTR [rax],0x9
   1400042f3:	mov    QWORD PTR [rsp+0x20],rdi
   1400042f8:	xor    r9d,r9d
   1400042fb:	xor    r8d,r8d
   1400042fe:	xor    edx,edx
   140004300:	xor    ecx,ecx
   140004302:	call   0x140001fb8
   140004307:	or     eax,0xffffffff
   14000430a:	jmp    0x140004379
   14000430c:	mov    ecx,ebx
   14000430e:	call   0x140006894
   140004313:	nop
   140004314:	mov    rax,QWORD PTR [r15+r14*8]
   140004318:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14000431d:	je     0x140004330
   14000431f:	mov    r8d,r12d
   140004322:	mov    rdx,r13
   140004325:	mov    ecx,ebx
   140004327:	call   0x140003b00
   14000432c:	mov    edi,eax
   14000432e:	jmp    0x140004345
   140004330:	call   0x140002088
   140004335:	mov    DWORD PTR [rax],0x9
   14000433b:	call   0x1400020a8
   140004340:	mov    DWORD PTR [rax],edi
   140004342:	or     edi,0xffffffff
   140004345:	mov    ecx,ebx
   140004347:	call   0x14000693c
   14000434c:	mov    eax,edi
   14000434e:	jmp    0x140004379
   140004350:	call   0x1400020a8
   140004355:	mov    DWORD PTR [rax],edi
   140004357:	call   0x140002088
   14000435c:	mov    DWORD PTR [rax],0x9
   140004362:	mov    QWORD PTR [rsp+0x20],rdi
   140004367:	xor    r9d,r9d
   14000436a:	xor    r8d,r8d
   14000436d:	xor    edx,edx
   14000436f:	xor    ecx,ecx
   140004371:	call   0x140001fb8
   140004376:	or     eax,0xffffffff
   140004379:	mov    rbx,QWORD PTR [rsp+0x68]
   14000437e:	mov    rsi,QWORD PTR [rsp+0x70]
   140004383:	add    rsp,0x30
   140004387:	pop    r15
   140004389:	pop    r14
   14000438b:	pop    r13
   14000438d:	pop    r12
   14000438f:	pop    rdi
   140004390:	ret    
   140004391:	int3   
   140004392:	int3   
   140004393:	int3   
   140004394:	sub    rsp,0x38
   140004398:	cmp    ecx,0xfffffffe
   14000439b:	jne    0x1400043aa
   14000439d:	call   0x140002088
   1400043a2:	mov    DWORD PTR [rax],0x9
   1400043a8:	jmp    0x1400043fc
   1400043aa:	test   ecx,ecx
   1400043ac:	js     0x1400043dc
   1400043ae:	cmp    ecx,DWORD PTR [rip+0xb2b0]        # 0x14000f664
   1400043b4:	jae    0x1400043dc
   1400043b6:	movsxd rcx,ecx
   1400043b9:	lea    rdx,[rip+0xb2c0]        # 0x14000f680
   1400043c0:	mov    rax,rcx
   1400043c3:	and    ecx,0x1f
   1400043c6:	sar    rax,0x5
   1400043ca:	imul   rcx,rcx,0x58
   1400043ce:	mov    rax,QWORD PTR [rdx+rax*8]
   1400043d2:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   1400043d7:	and    eax,0x40
   1400043da:	jmp    0x1400043fe
   1400043dc:	call   0x140002088
   1400043e1:	and    QWORD PTR [rsp+0x20],0x0
   1400043e7:	xor    r9d,r9d
   1400043ea:	xor    r8d,r8d
   1400043ed:	xor    edx,edx
   1400043ef:	xor    ecx,ecx
   1400043f1:	mov    DWORD PTR [rax],0x9
   1400043f7:	call   0x140001fb8
   1400043fc:	xor    eax,eax
   1400043fe:	add    rsp,0x38
   140004402:	ret    
   140004403:	int3   
   140004404:	rex push rbx
   140004406:	sub    rsp,0x20
   14000440a:	mov    eax,DWORD PTR [rip+0xb250]        # 0x14000f660
   140004410:	mov    ebx,0x14
   140004415:	test   eax,eax
   140004417:	jne    0x140004420
   140004419:	mov    eax,0x200
   14000441e:	jmp    0x140004425
   140004420:	cmp    eax,ebx
   140004422:	cmovl  eax,ebx
   140004425:	movsxd rcx,eax
   140004428:	mov    edx,0x8
   14000442d:	mov    DWORD PTR [rip+0xb22d],eax        # 0x14000f660
   140004433:	call   0x140005324
   140004438:	mov    QWORD PTR [rip+0xa201],rax        # 0x14000e640
   14000443f:	test   rax,rax
   140004442:	jne    0x140004468
   140004444:	lea    edx,[rax+0x8]
   140004447:	mov    rcx,rbx
   14000444a:	mov    DWORD PTR [rip+0xb210],ebx        # 0x14000f660
   140004450:	call   0x140005324
   140004455:	mov    QWORD PTR [rip+0xa1e4],rax        # 0x14000e640
   14000445c:	test   rax,rax
   14000445f:	jne    0x140004468
   140004461:	mov    eax,0x1a
   140004466:	jmp    0x1400044e0
   140004468:	xor    ecx,ecx
   14000446a:	lea    rdx,[rip+0x82ff]        # 0x14000c770
   140004471:	mov    QWORD PTR [rcx+rax*1],rdx
   140004475:	add    rdx,0x30
   140004479:	add    rcx,0x8
   14000447d:	sub    rbx,0x1
   140004481:	je     0x14000448c
   140004483:	mov    rax,QWORD PTR [rip+0xa1b6]        # 0x14000e640
   14000448a:	jmp    0x140004471
   14000448c:	xor    r8d,r8d
   14000448f:	lea    rdx,[rip+0x82f6]        # 0x14000c78c
   140004496:	lea    r9d,[r8+0x3]
   14000449a:	mov    rcx,r8
   14000449d:	lea    r10,[rip+0xb1dc]        # 0x14000f680
   1400044a4:	mov    rax,r8
   1400044a7:	sar    rax,0x5
   1400044ab:	and    ecx,0x1f
   1400044ae:	mov    rax,QWORD PTR [r10+rax*8]
   1400044b2:	imul   rcx,rcx,0x58
   1400044b6:	mov    r10,QWORD PTR [rcx+rax*1]
   1400044ba:	cmp    r10,0xffffffffffffffff
   1400044be:	je     0x1400044cb
   1400044c0:	cmp    r10,0xfffffffffffffffe
   1400044c4:	je     0x1400044cb
   1400044c6:	test   r10,r10
   1400044c9:	jne    0x1400044d1
   1400044cb:	mov    DWORD PTR [rdx],0xfffffffe
   1400044d1:	inc    r8
   1400044d4:	add    rdx,0x30
   1400044d8:	sub    r9,0x1
   1400044dc:	jne    0x14000449a
   1400044de:	xor    eax,eax
   1400044e0:	add    rsp,0x20
   1400044e4:	pop    rbx
   1400044e5:	ret    
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	sub    rsp,0x28
   1400044ec:	call   0x140006ce8
   1400044f1:	cmp    BYTE PTR [rip+0x98f0],0x0        # 0x14000dde8
   1400044f8:	je     0x1400044ff
   1400044fa:	call   0x140006a80
   1400044ff:	mov    rcx,QWORD PTR [rip+0xa13a]        # 0x14000e640
   140004506:	add    rsp,0x28
   14000450a:	jmp    0x140005240
   14000450f:	int3   
   140004510:	rex push rbx
   140004512:	sub    rsp,0x20
   140004516:	mov    rbx,rcx
   140004519:	lea    rcx,[rip+0x8250]        # 0x14000c770
   140004520:	cmp    rbx,rcx
   140004523:	jb     0x14000455f
   140004525:	lea    rax,[rip+0x85d4]        # 0x14000cb00
   14000452c:	cmp    rbx,rax
   14000452f:	ja     0x14000455f
   140004531:	mov    rdx,rbx
   140004534:	movabs rax,0x2aaaaaaaaaaaaaab
   14000453e:	sub    rdx,rcx
   140004541:	imul   rdx
   140004544:	sar    rdx,0x3
   140004548:	mov    rcx,rdx
   14000454b:	shr    rcx,0x3f
   14000454f:	lea    ecx,[rcx+rdx*1+0x10]
   140004553:	call   0x140005950
   140004558:	bts    DWORD PTR [rbx+0x18],0xf
   14000455d:	jmp    0x140004569
   14000455f:	lea    rcx,[rbx+0x30]
   140004563:	call   QWORD PTR [rip+0x4b57]        # 0x1400090c0
   140004569:	add    rsp,0x20
   14000456d:	pop    rbx
   14000456e:	ret    
   14000456f:	int3   
   140004570:	rex push rbx
   140004572:	sub    rsp,0x20
   140004576:	cmp    ecx,0x14
   140004579:	mov    rbx,rdx
   14000457c:	jge    0x14000458d
   14000457e:	add    ecx,0x10
   140004581:	call   0x140005950
   140004586:	bts    DWORD PTR [rbx+0x18],0xf
   14000458b:	jmp    0x140004597
   14000458d:	lea    rcx,[rdx+0x30]
   140004591:	call   QWORD PTR [rip+0x4b29]        # 0x1400090c0
   140004597:	add    rsp,0x20
   14000459b:	pop    rbx
   14000459c:	ret    
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	sub    rsp,0x28
   1400045a4:	lea    rdx,[rip+0x81c5]        # 0x14000c770
   1400045ab:	cmp    rcx,rdx
   1400045ae:	jb     0x1400045e7
   1400045b0:	lea    rax,[rip+0x8549]        # 0x14000cb00
   1400045b7:	cmp    rcx,rax
   1400045ba:	ja     0x1400045e7
   1400045bc:	btr    DWORD PTR [rcx+0x18],0xf
   1400045c1:	sub    rcx,rdx
   1400045c4:	movabs rax,0x2aaaaaaaaaaaaaab
   1400045ce:	imul   rcx
   1400045d1:	sar    rdx,0x3
   1400045d5:	mov    rcx,rdx
   1400045d8:	shr    rcx,0x3f
   1400045dc:	lea    ecx,[rcx+rdx*1+0x10]
   1400045e0:	call   0x140005850
   1400045e5:	jmp    0x1400045f1
   1400045e7:	add    rcx,0x30
   1400045eb:	call   QWORD PTR [rip+0x4ac7]        # 0x1400090b8
   1400045f1:	add    rsp,0x28
   1400045f5:	ret    
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	sub    rsp,0x28
   1400045fc:	cmp    ecx,0x14
   1400045ff:	jge    0x140004610
   140004601:	btr    DWORD PTR [rdx+0x18],0xf
   140004606:	add    ecx,0x10
   140004609:	call   0x140005850
   14000460e:	jmp    0x14000461a
   140004610:	lea    rcx,[rdx+0x30]
   140004614:	call   QWORD PTR [rip+0x4a9e]        # 0x1400090b8
   14000461a:	add    rsp,0x28
   14000461e:	ret    
   14000461f:	int3   
   140004620:	sub    rsp,0x38
   140004624:	test   rcx,rcx
   140004627:	jne    0x14000464e
   140004629:	call   0x140002088
   14000462e:	and    QWORD PTR [rsp+0x20],0x0
   140004634:	xor    r9d,r9d
   140004637:	xor    r8d,r8d
   14000463a:	xor    edx,edx
   14000463c:	xor    ecx,ecx
   14000463e:	mov    DWORD PTR [rax],0x16
   140004644:	call   0x140001fb8
   140004649:	or     eax,0xffffffff
   14000464c:	jmp    0x140004651
   14000464e:	mov    eax,DWORD PTR [rcx+0x1c]
   140004651:	add    rsp,0x38
   140004655:	ret    
   140004656:	int3   
   140004657:	int3   
   140004658:	mov    QWORD PTR [rsp+0x8],rbx
   14000465d:	mov    QWORD PTR [rsp+0x10],rbp
   140004662:	mov    QWORD PTR [rsp+0x18],rsi
   140004667:	push   rdi
   140004668:	sub    rsp,0x20
   14000466c:	lea    rbx,[rcx+0x1c]
   140004670:	mov    rbp,rcx
   140004673:	mov    esi,0x101
   140004678:	mov    rcx,rbx
   14000467b:	mov    r8,rsi
   14000467e:	xor    edx,edx
   140004680:	call   0x140001b00
   140004685:	xor    r11d,r11d
   140004688:	lea    rdi,[rbp+0x10]
   14000468c:	lea    ecx,[r11+0x6]
   140004690:	movzx  eax,r11w
   140004694:	mov    DWORD PTR [rbp+0x4],r11d
   140004698:	mov    DWORD PTR [rbp+0x8],r11d
   14000469c:	mov    DWORD PTR [rbp+0xc],r11d
   1400046a0:	rep stos WORD PTR es:[rdi],ax
   1400046a3:	lea    rdi,[rip+0x8486]        # 0x14000cb30
   1400046aa:	sub    rdi,rbp
   1400046ad:	mov    al,BYTE PTR [rdi+rbx*1]
   1400046b0:	mov    BYTE PTR [rbx],al
   1400046b2:	inc    rbx
   1400046b5:	sub    rsi,0x1
   1400046b9:	jne    0x1400046ad
   1400046bb:	lea    rcx,[rbp+0x11d]
   1400046c2:	mov    edx,0x100
   1400046c7:	mov    al,BYTE PTR [rcx+rdi*1]
   1400046ca:	mov    BYTE PTR [rcx],al
   1400046cc:	inc    rcx
   1400046cf:	sub    rdx,0x1
   1400046d3:	jne    0x1400046c7
   1400046d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046da:	mov    rbp,QWORD PTR [rsp+0x38]
   1400046df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400046e4:	add    rsp,0x20
   1400046e8:	pop    rdi
   1400046e9:	ret    
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400046f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400046f6:	push   rdi
   1400046f7:	sub    rsp,0x580
   1400046fe:	mov    rax,QWORD PTR [rip+0x7ce3]        # 0x14000c3e8
   140004705:	xor    rax,rsp
   140004708:	mov    QWORD PTR [rsp+0x570],rax
   140004710:	mov    rsi,rcx
   140004713:	mov    ecx,DWORD PTR [rcx+0x4]
   140004716:	lea    rdx,[rsp+0x50]
   14000471b:	call   QWORD PTR [rip+0x498f]        # 0x1400090b0
   140004721:	mov    ebx,0x100
   140004726:	test   eax,eax
   140004728:	je     0x14000486b
   14000472e:	xor    eax,eax
   140004730:	lea    rdx,[rsp+0x70]
   140004735:	mov    BYTE PTR [rdx],al
   140004737:	inc    eax
   140004739:	inc    rdx
   14000473c:	cmp    eax,ebx
   14000473e:	jb     0x140004735
   140004740:	mov    al,BYTE PTR [rsp+0x56]
   140004744:	mov    BYTE PTR [rsp+0x70],0x20
   140004749:	lea    rdi,[rsp+0x56]
   14000474e:	jmp    0x140004779
   140004750:	movzx  edx,BYTE PTR [rdi+0x1]
   140004754:	movzx  r8d,al
   140004758:	cmp    r8d,edx
   14000475b:	ja     0x140004773
   14000475d:	sub    edx,r8d
   140004760:	mov    rax,r8
   140004763:	lea    rcx,[rsp+r8*1+0x70]
   140004768:	lea    r8d,[rdx+0x1]
   14000476c:	mov    dl,0x20
   14000476e:	call   0x140001b00
   140004773:	add    rdi,0x2
   140004777:	mov    al,BYTE PTR [rdi]
   140004779:	test   al,al
   14000477b:	jne    0x140004750
   14000477d:	mov    eax,DWORD PTR [rsi+0xc]
   140004780:	and    DWORD PTR [rsp+0x38],0x0
   140004785:	lea    r8,[rsp+0x70]
   14000478a:	mov    DWORD PTR [rsp+0x30],eax
   14000478e:	mov    eax,DWORD PTR [rsi+0x4]
   140004791:	mov    r9d,ebx
   140004794:	mov    DWORD PTR [rsp+0x28],eax
   140004798:	lea    rax,[rsp+0x370]
   1400047a0:	mov    edx,0x1
   1400047a5:	xor    ecx,ecx
   1400047a7:	mov    QWORD PTR [rsp+0x20],rax
   1400047ac:	call   0x140007538
   1400047b1:	and    DWORD PTR [rsp+0x40],0x0
   1400047b6:	mov    eax,DWORD PTR [rsi+0x4]
   1400047b9:	mov    edx,DWORD PTR [rsi+0xc]
   1400047bc:	mov    DWORD PTR [rsp+0x38],eax
   1400047c0:	lea    rax,[rsp+0x170]
   1400047c8:	mov    DWORD PTR [rsp+0x30],ebx
   1400047cc:	mov    QWORD PTR [rsp+0x28],rax
   1400047d1:	lea    r9,[rsp+0x70]
   1400047d6:	mov    r8d,ebx
   1400047d9:	xor    ecx,ecx
   1400047db:	mov    DWORD PTR [rsp+0x20],ebx
   1400047df:	call   0x140007234
   1400047e4:	and    DWORD PTR [rsp+0x40],0x0
   1400047e9:	mov    eax,DWORD PTR [rsi+0x4]
   1400047ec:	mov    edx,DWORD PTR [rsi+0xc]
   1400047ef:	mov    DWORD PTR [rsp+0x38],eax
   1400047f3:	lea    rax,[rsp+0x270]
   1400047fb:	mov    DWORD PTR [rsp+0x30],ebx
   1400047ff:	mov    QWORD PTR [rsp+0x28],rax
   140004804:	lea    r9,[rsp+0x70]
   140004809:	mov    r8d,0x200
   14000480f:	xor    ecx,ecx
   140004811:	mov    DWORD PTR [rsp+0x20],ebx
   140004815:	call   0x140007234
   14000481a:	lea    r11,[rsp+0x370]
   140004822:	lea    rcx,[rsi+0x1d]
   140004826:	xor    edx,edx
   140004828:	test   BYTE PTR [r11],0x1
   14000482c:	je     0x14000483a
   14000482e:	or     BYTE PTR [rcx],0x10
   140004831:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   140004838:	jmp    0x14000484a
   14000483a:	test   BYTE PTR [r11],0x2
   14000483e:	je     0x140004852
   140004840:	or     BYTE PTR [rcx],0x20
   140004843:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   14000484a:	mov    BYTE PTR [rcx+0x100],al
   140004850:	jmp    0x140004859
   140004852:	mov    BYTE PTR [rcx+0x100],0x0
   140004859:	inc    rcx
   14000485c:	inc    rdx
   14000485f:	add    r11,0x2
   140004863:	sub    rbx,0x1
   140004867:	jne    0x140004828
   140004869:	jmp    0x1400048aa
   14000486b:	xor    edx,edx
   14000486d:	lea    rcx,[rsi+0x1d]
   140004871:	lea    r8d,[rdx-0x61]
   140004875:	lea    eax,[r8+0x20]
   140004879:	cmp    eax,0x19
   14000487c:	ja     0x140004886
   14000487e:	or     BYTE PTR [rcx],0x10
   140004881:	lea    eax,[rdx+0x20]
   140004884:	jmp    0x140004892
   140004886:	cmp    r8d,0x19
   14000488a:	ja     0x14000489a
   14000488c:	or     BYTE PTR [rcx],0x20
   14000488f:	lea    eax,[rdx-0x20]
   140004892:	mov    BYTE PTR [rcx+0x100],al
   140004898:	jmp    0x1400048a1
   14000489a:	mov    BYTE PTR [rcx+0x100],0x0
   1400048a1:	inc    edx
   1400048a3:	inc    rcx
   1400048a6:	cmp    edx,ebx
   1400048a8:	jb     0x140004871
   1400048aa:	mov    rcx,QWORD PTR [rsp+0x570]
   1400048b2:	xor    rcx,rsp
   1400048b5:	call   0x140001ad0
   1400048ba:	lea    r11,[rsp+0x580]
   1400048c2:	mov    rbx,QWORD PTR [r11+0x18]
   1400048c6:	mov    rsi,QWORD PTR [r11+0x20]
   1400048ca:	mov    rsp,r11
   1400048cd:	pop    rdi
   1400048ce:	ret    
   1400048cf:	int3   
   1400048d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400048d5:	push   rdi
   1400048d6:	sub    rsp,0x20
   1400048da:	call   0x140003788
   1400048df:	mov    rdi,rax
   1400048e2:	mov    ecx,DWORD PTR [rax+0xc8]
   1400048e8:	test   DWORD PTR [rip+0x877a],ecx        # 0x14000d068
   1400048ee:	je     0x140004903
   1400048f0:	cmp    QWORD PTR [rax+0xc0],0x0
   1400048f8:	je     0x140004903
   1400048fa:	mov    rbx,QWORD PTR [rax+0xb8]
   140004901:	jmp    0x140004971
   140004903:	mov    ecx,0xd
   140004908:	call   0x140005950
   14000490d:	nop
   14000490e:	mov    rbx,QWORD PTR [rdi+0xb8]
   140004915:	mov    QWORD PTR [rsp+0x30],rbx
   14000491a:	cmp    rbx,QWORD PTR [rip+0x863f]        # 0x14000cf60
   140004921:	je     0x140004967
   140004923:	test   rbx,rbx
   140004926:	je     0x140004944
   140004928:	lock add DWORD PTR [rbx],0xffffffff
   14000492c:	jne    0x140004944
   14000492e:	lea    rax,[rip+0x81fb]        # 0x14000cb30
   140004935:	mov    rcx,QWORD PTR [rsp+0x30]
   14000493a:	cmp    rcx,rax
   14000493d:	je     0x140004944
   14000493f:	call   0x140005240
   140004944:	mov    rax,QWORD PTR [rip+0x8615]        # 0x14000cf60
   14000494b:	mov    QWORD PTR [rdi+0xb8],rax
   140004952:	mov    rax,QWORD PTR [rip+0x8607]        # 0x14000cf60
   140004959:	mov    QWORD PTR [rsp+0x30],rax
   14000495e:	lock add DWORD PTR [rax],0x1
   140004962:	mov    rbx,QWORD PTR [rsp+0x30]
   140004967:	mov    ecx,0xd
   14000496c:	call   0x140005850
   140004971:	test   rbx,rbx
   140004974:	jne    0x14000497e
   140004976:	lea    ecx,[rbx+0x20]
   140004979:	call   0x1400022b8
   14000497e:	mov    rax,rbx
   140004981:	mov    rbx,QWORD PTR [rsp+0x38]
   140004986:	add    rsp,0x20
   14000498a:	pop    rdi
   14000498b:	ret    
   14000498c:	rex push rbx
   14000498e:	sub    rsp,0x40
   140004992:	mov    ebx,ecx
   140004994:	lea    rcx,[rsp+0x20]
   140004999:	xor    edx,edx
   14000499b:	call   0x140001ddc
   1400049a0:	and    DWORD PTR [rip+0x9899],0x0        # 0x14000e240
   1400049a7:	cmp    ebx,0xfffffffe
   1400049aa:	jne    0x1400049d1
   1400049ac:	mov    DWORD PTR [rip+0x988a],0x1        # 0x14000e240
   1400049b6:	call   QWORD PTR [rip+0x46e4]        # 0x1400090a0
   1400049bc:	cmp    BYTE PTR [rsp+0x38],0x0
   1400049c1:	je     0x140004a16
   1400049c3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400049c8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400049cf:	jmp    0x140004a16
   1400049d1:	cmp    ebx,0xfffffffd
   1400049d4:	jne    0x1400049e8
   1400049d6:	mov    DWORD PTR [rip+0x9860],0x1        # 0x14000e240
   1400049e0:	call   QWORD PTR [rip+0x46c2]        # 0x1400090a8
   1400049e6:	jmp    0x1400049bc
   1400049e8:	cmp    ebx,0xfffffffc
   1400049eb:	jne    0x140004a01
   1400049ed:	mov    rax,QWORD PTR [rsp+0x20]
   1400049f2:	mov    DWORD PTR [rip+0x9844],0x1        # 0x14000e240
   1400049fc:	mov    eax,DWORD PTR [rax+0x4]
   1400049ff:	jmp    0x1400049bc
   140004a01:	cmp    BYTE PTR [rsp+0x38],0x0
   140004a06:	je     0x140004a14
   140004a08:	mov    rax,QWORD PTR [rsp+0x30]
   140004a0d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140004a14:	mov    eax,ebx
   140004a16:	add    rsp,0x40
   140004a1a:	pop    rbx
   140004a1b:	ret    
   140004a1c:	mov    QWORD PTR [rsp+0x18],rbx
   140004a21:	push   rbp
   140004a22:	push   rsi
   140004a23:	push   rdi
   140004a24:	push   r12
   140004a26:	push   r13
   140004a28:	sub    rsp,0x40
   140004a2c:	mov    rax,QWORD PTR [rip+0x79b5]        # 0x14000c3e8
   140004a33:	xor    rax,rsp
   140004a36:	mov    QWORD PTR [rsp+0x38],rax
   140004a3b:	mov    rsi,rdx
   140004a3e:	call   0x14000498c
   140004a43:	xor    ebx,ebx
   140004a45:	mov    edi,eax
   140004a47:	cmp    eax,ebx
   140004a49:	jne    0x140004a58
   140004a4b:	mov    rcx,rsi
   140004a4e:	call   0x140004658
   140004a53:	jmp    0x140004c70
   140004a58:	lea    r13,[rip+0x8511]        # 0x14000cf70
   140004a5f:	mov    ecx,ebx
   140004a61:	mov    rbp,rbx
   140004a64:	mov    rax,r13
   140004a67:	mov    r12d,0x1
   140004a6d:	cmp    DWORD PTR [rax],edi
   140004a6f:	je     0x140004b9c
   140004a75:	add    ecx,r12d
   140004a78:	add    rbp,r12
   140004a7b:	add    rax,0x30
   140004a7f:	cmp    ecx,0x5
   140004a82:	jb     0x140004a6d
   140004a84:	cmp    edi,0xfde8
   140004a8a:	je     0x140004b94
   140004a90:	cmp    edi,0xfde9
   140004a96:	je     0x140004b94
   140004a9c:	movzx  ecx,di
   140004a9f:	call   QWORD PTR [rip+0x45f3]        # 0x140009098
   140004aa5:	cmp    eax,ebx
   140004aa7:	je     0x140004b94
   140004aad:	lea    rdx,[rsp+0x20]
   140004ab2:	mov    ecx,edi
   140004ab4:	call   QWORD PTR [rip+0x45f6]        # 0x1400090b0
   140004aba:	cmp    eax,ebx
   140004abc:	je     0x140004b88
   140004ac2:	lea    rcx,[rsi+0x1c]
   140004ac6:	xor    edx,edx
   140004ac8:	mov    r8d,0x101
   140004ace:	call   0x140001b00
   140004ad3:	mov    DWORD PTR [rsi+0x4],edi
   140004ad6:	mov    DWORD PTR [rsi+0xc],ebx
   140004ad9:	cmp    DWORD PTR [rsp+0x20],r12d
   140004ade:	jbe    0x140004b71
   140004ae4:	lea    rax,[rsp+0x26]
   140004ae9:	cmp    BYTE PTR [rsp+0x26],bl
   140004aed:	je     0x140004b1c
   140004aef:	cmp    BYTE PTR [rax+0x1],bl
   140004af2:	je     0x140004b1c
   140004af4:	movzx  edi,BYTE PTR [rax]
   140004af7:	movzx  ecx,BYTE PTR [rax+0x1]
   140004afb:	cmp    edi,ecx
   140004afd:	ja     0x140004b14
   140004aff:	sub    ecx,edi
   140004b01:	lea    rdx,[rdi+rsi*1+0x1d]
   140004b06:	add    ecx,r12d
   140004b09:	or     BYTE PTR [rdx],0x4
   140004b0c:	add    rdx,r12
   140004b0f:	sub    rcx,r12
   140004b12:	jne    0x140004b09
   140004b14:	add    rax,0x2
   140004b18:	cmp    BYTE PTR [rax],bl
   140004b1a:	jne    0x140004aef
   140004b1c:	lea    rax,[rsi+0x1e]
   140004b20:	mov    ecx,0xfe
   140004b25:	or     BYTE PTR [rax],0x8
   140004b28:	add    rax,r12
   140004b2b:	sub    rcx,r12
   140004b2e:	jne    0x140004b25
   140004b30:	mov    ecx,DWORD PTR [rsi+0x4]
   140004b33:	sub    ecx,0x3a4
   140004b39:	je     0x140004b63
   140004b3b:	sub    ecx,0x4
   140004b3e:	je     0x140004b5c
   140004b40:	sub    ecx,0xd
   140004b43:	je     0x140004b55
   140004b45:	cmp    ecx,r12d
   140004b48:	je     0x140004b4e
   140004b4a:	mov    eax,ebx
   140004b4c:	jmp    0x140004b68
   140004b4e:	mov    eax,0x404
   140004b53:	jmp    0x140004b68
   140004b55:	mov    eax,0x412
   140004b5a:	jmp    0x140004b68
   140004b5c:	mov    eax,0x804
   140004b61:	jmp    0x140004b68
   140004b63:	mov    eax,0x411
   140004b68:	mov    DWORD PTR [rsi+0xc],eax
   140004b6b:	mov    DWORD PTR [rsi+0x8],r12d
   140004b6f:	jmp    0x140004b74
   140004b71:	mov    DWORD PTR [rsi+0x8],ebx
   140004b74:	lea    rdi,[rsi+0x10]
   140004b78:	movzx  eax,bx
   140004b7b:	mov    ecx,0x6
   140004b80:	rep stos WORD PTR es:[rdi],ax
   140004b83:	jmp    0x140004c68
   140004b88:	cmp    DWORD PTR [rip+0x96b2],ebx        # 0x14000e240
   140004b8e:	jne    0x140004a4b
   140004b94:	or     eax,0xffffffff
   140004b97:	jmp    0x140004c72
   140004b9c:	lea    rcx,[rsi+0x1c]
   140004ba0:	xor    edx,edx
   140004ba2:	mov    r8d,0x101
   140004ba8:	call   0x140001b00
   140004bad:	lea    rbp,[rbp+rbp*2+0x0]
   140004bb2:	lea    r11,[rip+0x83af]        # 0x14000cf68
   140004bb9:	add    rbp,rbp
   140004bbc:	mov    r10d,0x4
   140004bc2:	lea    r8,[r13+rbp*8+0x10]
   140004bc7:	mov    rcx,r8
   140004bca:	cmp    BYTE PTR [r8],bl
   140004bcd:	je     0x140004c00
   140004bcf:	cmp    BYTE PTR [rcx+0x1],bl
   140004bd2:	je     0x140004c00
   140004bd4:	movzx  edx,BYTE PTR [rcx]
   140004bd7:	movzx  eax,BYTE PTR [rcx+0x1]
   140004bdb:	cmp    edx,eax
   140004bdd:	ja     0x140004bf8
   140004bdf:	lea    r9,[rdx+rsi*1+0x1d]
   140004be4:	mov    al,BYTE PTR [r11]
   140004be7:	add    edx,r12d
   140004bea:	or     BYTE PTR [r9],al
   140004bed:	movzx  eax,BYTE PTR [rcx+0x1]
   140004bf1:	add    r9,r12
   140004bf4:	cmp    edx,eax
   140004bf6:	jbe    0x140004be4
   140004bf8:	add    rcx,0x2
   140004bfc:	cmp    BYTE PTR [rcx],bl
   140004bfe:	jne    0x140004bcf
   140004c00:	add    r8,0x8
   140004c04:	add    r11,r12
   140004c07:	sub    r10,r12
   140004c0a:	jne    0x140004bc7
   140004c0c:	mov    DWORD PTR [rsi+0x4],edi
   140004c0f:	sub    edi,0x3a4
   140004c15:	mov    DWORD PTR [rsi+0x8],r12d
   140004c19:	je     0x140004c3f
   140004c1b:	sub    edi,0x4
   140004c1e:	je     0x140004c38
   140004c20:	sub    edi,0xd
   140004c23:	je     0x140004c31
   140004c25:	cmp    edi,r12d
   140004c28:	jne    0x140004c44
   140004c2a:	mov    ebx,0x404
   140004c2f:	jmp    0x140004c44
   140004c31:	mov    ebx,0x412
   140004c36:	jmp    0x140004c44
   140004c38:	mov    ebx,0x804
   140004c3d:	jmp    0x140004c44
   140004c3f:	mov    ebx,0x411
   140004c44:	mov    DWORD PTR [rsi+0xc],ebx
   140004c47:	lea    rdx,[rsi+0x10]
   140004c4b:	lea    rdi,[r13+rbp*8+0x4]
   140004c50:	mov    ecx,0x6
   140004c55:	movzx  eax,WORD PTR [rdi]
   140004c58:	add    rdi,0x2
   140004c5c:	mov    WORD PTR [rdx],ax
   140004c5f:	add    rdx,0x2
   140004c63:	sub    rcx,r12
   140004c66:	jne    0x140004c55
   140004c68:	mov    rcx,rsi
   140004c6b:	call   0x1400046ec
   140004c70:	xor    eax,eax
   140004c72:	mov    rcx,QWORD PTR [rsp+0x38]
   140004c77:	xor    rcx,rsp
   140004c7a:	call   0x140001ad0
   140004c7f:	mov    rbx,QWORD PTR [rsp+0x80]
   140004c87:	add    rsp,0x40
   140004c8b:	pop    r13
   140004c8d:	pop    r12
   140004c8f:	pop    rdi
   140004c90:	pop    rsi
   140004c91:	pop    rbp
   140004c92:	ret    
   140004c93:	int3   
   140004c94:	mov    rax,rsp
   140004c97:	mov    QWORD PTR [rax+0x8],rbx
   140004c9b:	mov    QWORD PTR [rax+0x10],rsi
   140004c9f:	mov    QWORD PTR [rax+0x18],rdi
   140004ca3:	mov    QWORD PTR [rax+0x20],r12
   140004ca7:	push   r13
   140004ca9:	sub    rsp,0x30
   140004cad:	mov    edi,ecx
   140004caf:	or     r13d,0xffffffff
   140004cb3:	call   0x140003788
   140004cb8:	mov    rsi,rax
   140004cbb:	call   0x1400048d0
   140004cc0:	mov    rbx,QWORD PTR [rsi+0xb8]
   140004cc7:	mov    ecx,edi
   140004cc9:	call   0x14000498c
   140004cce:	mov    r12d,eax
   140004cd1:	cmp    eax,DWORD PTR [rbx+0x4]
   140004cd4:	je     0x140004e69
   140004cda:	mov    ecx,0x220
   140004cdf:	call   0x1400052b8
   140004ce4:	mov    rbx,rax
   140004ce7:	xor    edi,edi
   140004ce9:	cmp    rax,rdi
   140004cec:	je     0x140004e6e
   140004cf2:	mov    rdx,QWORD PTR [rsi+0xb8]
   140004cf9:	mov    rcx,rax
   140004cfc:	mov    r8d,0x220
   140004d02:	call   0x140006430
   140004d07:	mov    DWORD PTR [rbx],edi
   140004d09:	mov    rdx,rbx
   140004d0c:	mov    ecx,r12d
   140004d0f:	call   0x140004a1c
   140004d14:	mov    r13d,eax
   140004d17:	cmp    eax,edi
   140004d19:	jne    0x140004e43
   140004d1f:	mov    rcx,QWORD PTR [rsi+0xb8]
   140004d26:	lock add DWORD PTR [rcx],0xffffffff
   140004d2a:	jne    0x140004d46
   140004d2c:	mov    rcx,QWORD PTR [rsi+0xb8]
   140004d33:	lea    r12,[rip+0x7df6]        # 0x14000cb30
   140004d3a:	cmp    rcx,r12
   140004d3d:	je     0x140004d4d
   140004d3f:	call   0x140005240
   140004d44:	jmp    0x140004d4d
   140004d46:	lea    r12,[rip+0x7de3]        # 0x14000cb30
   140004d4d:	mov    QWORD PTR [rsi+0xb8],rbx
   140004d54:	lock add DWORD PTR [rbx],0x1
   140004d58:	test   BYTE PTR [rsi+0xc8],0x2
   140004d5f:	jne    0x140004e6e
   140004d65:	test   BYTE PTR [rip+0x82fc],0x1        # 0x14000d068
   140004d6c:	jne    0x140004e6e
   140004d72:	mov    ecx,0xd
   140004d77:	call   0x140005950
   140004d7c:	nop
   140004d7d:	mov    eax,DWORD PTR [rbx+0x4]
   140004d80:	mov    DWORD PTR [rip+0x94ce],eax        # 0x14000e254
   140004d86:	mov    eax,DWORD PTR [rbx+0x8]
   140004d89:	mov    DWORD PTR [rip+0x94c9],eax        # 0x14000e258
   140004d8f:	mov    eax,DWORD PTR [rbx+0xc]
   140004d92:	mov    DWORD PTR [rip+0x94c4],eax        # 0x14000e25c
   140004d98:	mov    edx,edi
   140004d9a:	mov    DWORD PTR [rsp+0x20],edx
   140004d9e:	lea    r8,[rip+0xffffffffffffb25b]        # 0x140000000
   140004da5:	cmp    edx,0x5
   140004da8:	jge    0x140004dc3
   140004daa:	movsxd rcx,edx
   140004dad:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140004db2:	mov    WORD PTR [r8+rcx*2+0xe248],ax
   140004dbb:	inc    edx
   140004dbd:	mov    DWORD PTR [rsp+0x20],edx
   140004dc1:	jmp    0x140004da5
   140004dc3:	mov    edx,edi
   140004dc5:	mov    DWORD PTR [rsp+0x20],edx
   140004dc9:	cmp    edx,0x101
   140004dcf:	jge    0x140004de8
   140004dd1:	movsxd rcx,edx
   140004dd4:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140004dd8:	mov    BYTE PTR [rcx+r8*1+0xcd50],al
   140004de0:	inc    edx
   140004de2:	mov    DWORD PTR [rsp+0x20],edx
   140004de6:	jmp    0x140004dc9
   140004de8:	mov    DWORD PTR [rsp+0x20],edi
   140004dec:	cmp    edi,0x100
   140004df2:	jge    0x140004e0e
   140004df4:	movsxd rcx,edi
   140004df7:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140004dfe:	mov    BYTE PTR [rcx+r8*1+0xce60],al
   140004e06:	inc    edi
   140004e08:	mov    DWORD PTR [rsp+0x20],edi
   140004e0c:	jmp    0x140004dec
   140004e0e:	mov    rax,QWORD PTR [rip+0x814b]        # 0x14000cf60
   140004e15:	lock add DWORD PTR [rax],0xffffffff
   140004e19:	jne    0x140004e2c
   140004e1b:	mov    rcx,QWORD PTR [rip+0x813e]        # 0x14000cf60
   140004e22:	cmp    rcx,r12
   140004e25:	je     0x140004e2c
   140004e27:	call   0x140005240
   140004e2c:	mov    QWORD PTR [rip+0x812d],rbx        # 0x14000cf60
   140004e33:	lock add DWORD PTR [rbx],0x1
   140004e37:	mov    ecx,0xd
   140004e3c:	call   0x140005850
   140004e41:	jmp    0x140004e6e
   140004e43:	cmp    eax,0xffffffff
   140004e46:	jne    0x140004e6e
   140004e48:	lea    r12,[rip+0x7ce1]        # 0x14000cb30
   140004e4f:	cmp    rbx,r12
   140004e52:	je     0x140004e5c
   140004e54:	mov    rcx,rbx
   140004e57:	call   0x140005240
   140004e5c:	call   0x140002088
   140004e61:	mov    DWORD PTR [rax],0x16
   140004e67:	jmp    0x140004e6e
   140004e69:	xor    edi,edi
   140004e6b:	mov    r13d,edi
   140004e6e:	mov    eax,r13d
   140004e71:	mov    rbx,QWORD PTR [rsp+0x40]
   140004e76:	mov    rsi,QWORD PTR [rsp+0x48]
   140004e7b:	mov    rdi,QWORD PTR [rsp+0x50]
   140004e80:	mov    r12,QWORD PTR [rsp+0x58]
   140004e85:	add    rsp,0x30
   140004e89:	pop    r13
   140004e8b:	ret    
   140004e8c:	sub    rsp,0x28
   140004e90:	cmp    DWORD PTR [rip+0xaa09],0x0        # 0x14000f8a0
   140004e97:	jne    0x140004ead
   140004e99:	mov    ecx,0xfffffffd
   140004e9e:	call   0x140004c94
   140004ea3:	mov    DWORD PTR [rip+0xa9f3],0x1        # 0x14000f8a0
   140004ead:	xor    eax,eax
   140004eaf:	add    rsp,0x28
   140004eb3:	ret    
   140004eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140004eb9:	mov    QWORD PTR [rsp+0x10],rsi
   140004ebe:	push   rdi
   140004ebf:	sub    rsp,0x20
   140004ec3:	mov    rax,QWORD PTR [rcx+0x128]
   140004eca:	mov    rbx,rcx
   140004ecd:	test   rax,rax
   140004ed0:	je     0x140004f4b
   140004ed2:	lea    rcx,[rip+0x8767]        # 0x14000d640
   140004ed9:	cmp    rax,rcx
   140004edc:	je     0x140004f4b
   140004ede:	mov    rax,QWORD PTR [rbx+0x110]
   140004ee5:	test   rax,rax
   140004ee8:	je     0x140004f4b
   140004eea:	cmp    DWORD PTR [rax],0x0
   140004eed:	jne    0x140004f4b
   140004eef:	mov    rcx,QWORD PTR [rbx+0x120]
   140004ef6:	test   rcx,rcx
   140004ef9:	je     0x140004f11
   140004efb:	cmp    DWORD PTR [rcx],0x0
   140004efe:	jne    0x140004f11
   140004f00:	call   0x140005240
   140004f05:	mov    rcx,QWORD PTR [rbx+0x128]
   140004f0c:	call   0x1400077f8
   140004f11:	mov    rcx,QWORD PTR [rbx+0x118]
   140004f18:	test   rcx,rcx
   140004f1b:	je     0x140004f33
   140004f1d:	cmp    DWORD PTR [rcx],0x0
   140004f20:	jne    0x140004f33
   140004f22:	call   0x140005240
   140004f27:	mov    rcx,QWORD PTR [rbx+0x128]
   140004f2e:	call   0x1400077b0
   140004f33:	mov    rcx,QWORD PTR [rbx+0x110]
   140004f3a:	call   0x140005240
   140004f3f:	mov    rcx,QWORD PTR [rbx+0x128]
   140004f46:	call   0x140005240
   140004f4b:	mov    rax,QWORD PTR [rbx+0x130]
   140004f52:	test   rax,rax
   140004f55:	je     0x140004f9e
   140004f57:	cmp    DWORD PTR [rax],0x0
   140004f5a:	jne    0x140004f9e
   140004f5c:	mov    rcx,QWORD PTR [rbx+0x138]
   140004f63:	sub    rcx,0xfe
   140004f6a:	call   0x140005240
   140004f6f:	mov    rcx,QWORD PTR [rbx+0x148]
   140004f76:	mov    edi,0x80
   140004f7b:	sub    rcx,rdi
   140004f7e:	call   0x140005240
   140004f83:	mov    rcx,QWORD PTR [rbx+0x150]
   140004f8a:	sub    rcx,rdi
   140004f8d:	call   0x140005240
   140004f92:	mov    rcx,QWORD PTR [rbx+0x130]
   140004f99:	call   0x140005240
   140004f9e:	mov    rcx,QWORD PTR [rbx+0x158]
   140004fa5:	lea    rax,[rip+0x8514]        # 0x14000d4c0
   140004fac:	cmp    rcx,rax
   140004faf:	je     0x140004fcb
   140004fb1:	cmp    DWORD PTR [rcx+0x160],0x0
   140004fb8:	jne    0x140004fcb
   140004fba:	call   0x1400075c4
   140004fbf:	mov    rcx,QWORD PTR [rbx+0x158]
   140004fc6:	call   0x140005240
   140004fcb:	lea    rdi,[rbx+0x58]
   140004fcf:	mov    esi,0x6
   140004fd4:	lea    rax,[rip+0x8095]        # 0x14000d070
   140004fdb:	cmp    QWORD PTR [rdi-0x10],rax
   140004fdf:	je     0x140004ff3
   140004fe1:	mov    rcx,QWORD PTR [rdi]
   140004fe4:	test   rcx,rcx
   140004fe7:	je     0x140004ff3
   140004fe9:	cmp    DWORD PTR [rcx],0x0
   140004fec:	jne    0x140004ff3
   140004fee:	call   0x140005240
   140004ff3:	cmp    QWORD PTR [rdi-0x8],0x0
   140004ff8:	je     0x14000500d
   140004ffa:	mov    rcx,QWORD PTR [rdi+0x8]
   140004ffe:	test   rcx,rcx
   140005001:	je     0x14000500d
   140005003:	cmp    DWORD PTR [rcx],0x0
   140005006:	jne    0x14000500d
   140005008:	call   0x140005240
   14000500d:	add    rdi,0x20
   140005011:	sub    rsi,0x1
   140005015:	jne    0x140004fd4
   140005017:	mov    rcx,rbx
   14000501a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000501f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005024:	add    rsp,0x20
   140005028:	pop    rdi
   140005029:	jmp    0x140005240
   14000502e:	int3   
   14000502f:	int3   
   140005030:	lock add DWORD PTR [rcx],0x1
   140005034:	mov    rax,QWORD PTR [rcx+0x110]
   14000503b:	test   rax,rax
   14000503e:	je     0x140005044
   140005040:	lock add DWORD PTR [rax],0x1
   140005044:	mov    rax,QWORD PTR [rcx+0x120]
   14000504b:	test   rax,rax
   14000504e:	je     0x140005054
   140005050:	lock add DWORD PTR [rax],0x1
   140005054:	mov    rax,QWORD PTR [rcx+0x118]
   14000505b:	test   rax,rax
   14000505e:	je     0x140005064
   140005060:	lock add DWORD PTR [rax],0x1
   140005064:	mov    rax,QWORD PTR [rcx+0x130]
   14000506b:	test   rax,rax
   14000506e:	je     0x140005074
   140005070:	lock add DWORD PTR [rax],0x1
   140005074:	lea    rax,[rcx+0x58]
   140005078:	mov    r8d,0x6
   14000507e:	lea    rdx,[rip+0x7feb]        # 0x14000d070
   140005085:	cmp    QWORD PTR [rax-0x10],rdx
   140005089:	je     0x140005097
   14000508b:	mov    rdx,QWORD PTR [rax]
   14000508e:	test   rdx,rdx
   140005091:	je     0x140005097
   140005093:	lock add DWORD PTR [rdx],0x1
   140005097:	cmp    QWORD PTR [rax-0x8],0x0
   14000509c:	je     0x1400050ab
   14000509e:	mov    rdx,QWORD PTR [rax+0x8]
   1400050a2:	test   rdx,rdx
   1400050a5:	je     0x1400050ab
   1400050a7:	lock add DWORD PTR [rdx],0x1
   1400050ab:	add    rax,0x20
   1400050af:	sub    r8,0x1
   1400050b3:	jne    0x14000507e
   1400050b5:	mov    rax,QWORD PTR [rcx+0x158]
   1400050bc:	lock add DWORD PTR [rax+0x160],0x1
   1400050c4:	ret    
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	test   rcx,rcx
   1400050cb:	je     0x140005169
   1400050d1:	or     r9d,0xffffffff
   1400050d5:	lock add DWORD PTR [rcx],r9d
   1400050d9:	mov    rax,QWORD PTR [rcx+0x110]
   1400050e0:	test   rax,rax
   1400050e3:	je     0x1400050e9
   1400050e5:	lock add DWORD PTR [rax],r9d
   1400050e9:	mov    rax,QWORD PTR [rcx+0x120]
   1400050f0:	test   rax,rax
   1400050f3:	je     0x1400050f9
   1400050f5:	lock add DWORD PTR [rax],r9d
   1400050f9:	mov    rax,QWORD PTR [rcx+0x118]
   140005100:	test   rax,rax
   140005103:	je     0x140005109
   140005105:	lock add DWORD PTR [rax],r9d
   140005109:	mov    rax,QWORD PTR [rcx+0x130]
   140005110:	test   rax,rax
   140005113:	je     0x140005119
   140005115:	lock add DWORD PTR [rax],r9d
   140005119:	lea    rax,[rcx+0x58]
   14000511d:	mov    r8d,0x6
   140005123:	lea    rdx,[rip+0x7f46]        # 0x14000d070
   14000512a:	cmp    QWORD PTR [rax-0x10],rdx
   14000512e:	je     0x14000513c
   140005130:	mov    rdx,QWORD PTR [rax]
   140005133:	test   rdx,rdx
   140005136:	je     0x14000513c
   140005138:	lock add DWORD PTR [rdx],r9d
   14000513c:	cmp    QWORD PTR [rax-0x8],0x0
   140005141:	je     0x140005150
   140005143:	mov    rdx,QWORD PTR [rax+0x8]
   140005147:	test   rdx,rdx
   14000514a:	je     0x140005150
   14000514c:	lock add DWORD PTR [rdx],r9d
   140005150:	add    rax,0x20
   140005154:	sub    r8,0x1
   140005158:	jne    0x140005123
   14000515a:	mov    rax,QWORD PTR [rcx+0x158]
   140005161:	lock add DWORD PTR [rax+0x160],r9d
   140005169:	mov    rax,rcx
   14000516c:	ret    
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	rex push rbx
   140005172:	sub    rsp,0x20
   140005176:	mov    rbx,rdx
   140005179:	test   rdx,rdx
   14000517c:	je     0x1400051bf
   14000517e:	test   rcx,rcx
   140005181:	je     0x1400051bf
   140005183:	mov    r10,QWORD PTR [rcx]
   140005186:	cmp    r10,rdx
   140005189:	je     0x1400051ba
   14000518b:	mov    QWORD PTR [rcx],rdx
   14000518e:	mov    rcx,rdx
   140005191:	call   0x140005030
   140005196:	test   r10,r10
   140005199:	je     0x1400051ba
   14000519b:	mov    rcx,r10
   14000519e:	call   0x1400050c8
   1400051a3:	cmp    DWORD PTR [r10],0x0
   1400051a7:	jne    0x1400051ba
   1400051a9:	lea    rax,[rip+0x7ed0]        # 0x14000d080
   1400051b0:	cmp    r10,rax
   1400051b3:	je     0x1400051ba
   1400051b5:	call   0x140004eb4
   1400051ba:	mov    rax,rbx
   1400051bd:	jmp    0x1400051c1
   1400051bf:	xor    eax,eax
   1400051c1:	add    rsp,0x20
   1400051c5:	pop    rbx
   1400051c6:	ret    
   1400051c7:	int3   
   1400051c8:	rex push rbx
   1400051ca:	sub    rsp,0x20
   1400051ce:	call   0x140003788
   1400051d3:	mov    rbx,rax
   1400051d6:	mov    ecx,DWORD PTR [rax+0xc8]
   1400051dc:	test   DWORD PTR [rip+0x7e86],ecx        # 0x14000d068
   1400051e2:	je     0x1400051fc
   1400051e4:	cmp    QWORD PTR [rax+0xc0],0x0
   1400051ec:	je     0x1400051fc
   1400051ee:	call   0x140003788
   1400051f3:	mov    rbx,QWORD PTR [rax+0xc0]
   1400051fa:	jmp    0x140005227
   1400051fc:	mov    ecx,0xc
   140005201:	call   0x140005950
   140005206:	nop
   140005207:	lea    rcx,[rbx+0xc0]
   14000520e:	mov    rdx,QWORD PTR [rip+0x7fcb]        # 0x14000d1e0
   140005215:	call   0x140005170
   14000521a:	mov    rbx,rax
   14000521d:	mov    ecx,0xc
   140005222:	call   0x140005850
   140005227:	test   rbx,rbx
   14000522a:	jne    0x140005234
   14000522c:	lea    ecx,[rbx+0x20]
   14000522f:	call   0x1400022b8
   140005234:	mov    rax,rbx
   140005237:	add    rsp,0x20
   14000523b:	pop    rbx
   14000523c:	ret    
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	test   rcx,rcx
   140005243:	je     0x14000527c
   140005245:	push   rbx
   140005246:	sub    rsp,0x20
   14000524a:	mov    r8,rcx
   14000524d:	mov    rcx,QWORD PTR [rip+0x8fdc]        # 0x14000e230
   140005254:	xor    edx,edx
   140005256:	call   QWORD PTR [rip+0x3e34]        # 0x140009090
   14000525c:	test   eax,eax
   14000525e:	jne    0x140005277
   140005260:	call   0x140002088
   140005265:	mov    rbx,rax
   140005268:	call   QWORD PTR [rip+0x3e82]        # 0x1400090f0
   14000526e:	mov    ecx,eax
   140005270:	call   0x140002040
   140005275:	mov    DWORD PTR [rbx],eax
   140005277:	add    rsp,0x20
   14000527b:	pop    rbx
   14000527c:	ret    
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    QWORD PTR [rsp+0x8],rbx
   140005285:	push   rdi
   140005286:	sub    rsp,0x20
   14000528a:	lea    rbx,[rip+0x7f6f]        # 0x14000d200
   140005291:	mov    edi,0xa
   140005296:	mov    rcx,QWORD PTR [rbx]
   140005299:	call   0x14000360c
   14000529e:	mov    QWORD PTR [rbx],rax
   1400052a1:	add    rbx,0x8
   1400052a5:	sub    rdi,0x1
   1400052a9:	jne    0x140005296
   1400052ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052b0:	add    rsp,0x20
   1400052b4:	pop    rdi
   1400052b5:	ret    
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400052bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400052c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400052c7:	push   rdi
   1400052c8:	sub    rsp,0x20
   1400052cc:	xor    edi,edi
   1400052ce:	mov    rsi,rcx
   1400052d1:	or     ebp,0xffffffff
   1400052d4:	mov    rcx,rsi
   1400052d7:	call   0x140007b04
   1400052dc:	mov    rbx,rax
   1400052df:	test   rax,rax
   1400052e2:	jne    0x14000530c
   1400052e4:	cmp    DWORD PTR [rip+0x8f9e],eax        # 0x14000e288
   1400052ea:	jbe    0x14000530c
   1400052ec:	mov    ecx,edi
   1400052ee:	call   QWORD PTR [rip+0x3ea4]        # 0x140009198
   1400052f4:	lea    r11d,[rdi+0x3e8]
   1400052fb:	cmp    r11d,DWORD PTR [rip+0x8f86]        # 0x14000e288
   140005302:	mov    edi,r11d
   140005305:	cmova  edi,ebp
   140005308:	cmp    edi,ebp
   14000530a:	jne    0x1400052d4
   14000530c:	mov    rbp,QWORD PTR [rsp+0x38]
   140005311:	mov    rsi,QWORD PTR [rsp+0x40]
   140005316:	mov    rax,rbx
   140005319:	mov    rbx,QWORD PTR [rsp+0x30]
   14000531e:	add    rsp,0x20
   140005322:	pop    rdi
   140005323:	ret    
   140005324:	mov    rax,rsp
   140005327:	mov    QWORD PTR [rax+0x8],rbx
   14000532b:	mov    QWORD PTR [rax+0x10],rbp
   14000532f:	mov    QWORD PTR [rax+0x18],rsi
   140005333:	mov    QWORD PTR [rax+0x20],rdi
   140005337:	push   r12
   140005339:	sub    rsp,0x20
   14000533d:	xor    edi,edi
   14000533f:	mov    rsi,rdx
   140005342:	mov    rbp,rcx
   140005345:	or     r12d,0xffffffff
   140005349:	xor    r8d,r8d
   14000534c:	mov    rdx,rsi
   14000534f:	mov    rcx,rbp
   140005352:	call   0x140007bbc
   140005357:	mov    rbx,rax
   14000535a:	test   rax,rax
   14000535d:	jne    0x140005389
   14000535f:	cmp    DWORD PTR [rip+0x8f23],eax        # 0x14000e288
   140005365:	jbe    0x140005389
   140005367:	mov    ecx,edi
   140005369:	call   QWORD PTR [rip+0x3e29]        # 0x140009198
   14000536f:	lea    r11d,[rdi+0x3e8]
   140005376:	cmp    r11d,DWORD PTR [rip+0x8f0b]        # 0x14000e288
   14000537d:	mov    edi,r11d
   140005380:	cmova  edi,r12d
   140005384:	cmp    edi,r12d
   140005387:	jne    0x140005349
   140005389:	mov    rbp,QWORD PTR [rsp+0x38]
   14000538e:	mov    rsi,QWORD PTR [rsp+0x40]
   140005393:	mov    rdi,QWORD PTR [rsp+0x48]
   140005398:	mov    rax,rbx
   14000539b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053a0:	add    rsp,0x20
   1400053a4:	pop    r12
   1400053a6:	ret    
   1400053a7:	int3   
   1400053a8:	mov    rax,rsp
   1400053ab:	mov    QWORD PTR [rax+0x8],rbx
   1400053af:	mov    QWORD PTR [rax+0x10],rbp
   1400053b3:	mov    QWORD PTR [rax+0x18],rsi
   1400053b7:	mov    QWORD PTR [rax+0x20],rdi
   1400053bb:	push   r12
   1400053bd:	sub    rsp,0x20
   1400053c1:	xor    esi,esi
   1400053c3:	mov    rdi,rdx
   1400053c6:	mov    rbp,rcx
   1400053c9:	or     r12d,0xffffffff
   1400053cd:	mov    rdx,rdi
   1400053d0:	mov    rcx,rbp
   1400053d3:	call   0x140007c6c
   1400053d8:	mov    rbx,rax
   1400053db:	test   rax,rax
   1400053de:	jne    0x14000540f
   1400053e0:	test   rdi,rdi
   1400053e3:	je     0x14000540f
   1400053e5:	cmp    DWORD PTR [rip+0x8e9d],eax        # 0x14000e288
   1400053eb:	jbe    0x14000540f
   1400053ed:	mov    ecx,esi
   1400053ef:	call   QWORD PTR [rip+0x3da3]        # 0x140009198
   1400053f5:	lea    r11d,[rsi+0x3e8]
   1400053fc:	cmp    r11d,DWORD PTR [rip+0x8e85]        # 0x14000e288
   140005403:	mov    esi,r11d
   140005406:	cmova  esi,r12d
   14000540a:	cmp    esi,r12d
   14000540d:	jne    0x1400053cd
   14000540f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005414:	mov    rsi,QWORD PTR [rsp+0x40]
   140005419:	mov    rdi,QWORD PTR [rsp+0x48]
   14000541e:	mov    rax,rbx
   140005421:	mov    rbx,QWORD PTR [rsp+0x30]
   140005426:	add    rsp,0x20
   14000542a:	pop    r12
   14000542c:	ret    
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	mov    QWORD PTR [rsp+0x8],rbx
   140005435:	mov    QWORD PTR [rsp+0x10],rbp
   14000543a:	mov    QWORD PTR [rsp+0x18],rsi
   14000543f:	push   rdi
   140005440:	sub    rsp,0x50
   140005444:	xor    ebp,ebp
   140005446:	mov    rsi,r8
   140005449:	mov    rdi,rdx
   14000544c:	mov    rbx,rcx
   14000544f:	cmp    rdx,rbp
   140005452:	je     0x140005466
   140005454:	cmp    r8,rbp
   140005457:	je     0x140005466
   140005459:	cmp    BYTE PTR [rdx],bpl
   14000545c:	jne    0x14000547d
   14000545e:	cmp    rcx,rbp
   140005461:	je     0x140005466
   140005463:	mov    WORD PTR [rcx],bp
   140005466:	xor    eax,eax
   140005468:	mov    rbx,QWORD PTR [rsp+0x60]
   14000546d:	mov    rbp,QWORD PTR [rsp+0x68]
   140005472:	mov    rsi,QWORD PTR [rsp+0x70]
   140005477:	add    rsp,0x50
   14000547b:	pop    rdi
   14000547c:	ret    
   14000547d:	lea    rcx,[rsp+0x30]
   140005482:	mov    rdx,r9
   140005485:	call   0x140001ddc
   14000548a:	mov    r11,QWORD PTR [rsp+0x30]
   14000548f:	cmp    DWORD PTR [r11+0x14],ebp
   140005493:	jne    0x1400054ba
   140005495:	cmp    rbx,rbp
   140005498:	je     0x1400054a0
   14000549a:	movzx  eax,BYTE PTR [rdi]
   14000549d:	mov    WORD PTR [rbx],ax
   1400054a0:	cmp    BYTE PTR [rsp+0x48],bpl
   1400054a5:	je     0x1400054b3
   1400054a7:	mov    rax,QWORD PTR [rsp+0x40]
   1400054ac:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400054b3:	mov    eax,0x1
   1400054b8:	jmp    0x140005468
   1400054ba:	movzx  ecx,BYTE PTR [rdi]
   1400054bd:	lea    rdx,[rsp+0x30]
   1400054c2:	call   0x1400055ac
   1400054c7:	cmp    eax,ebp
   1400054c9:	je     0x14000556b
   1400054cf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400054d4:	mov    r9d,DWORD PTR [rcx+0x10c]
   1400054db:	cmp    r9d,0x1
   1400054df:	jle    0x140005511
   1400054e1:	cmp    esi,r9d
   1400054e4:	jl     0x140005511
   1400054e6:	mov    ecx,DWORD PTR [rcx+0x4]
   1400054e9:	mov    eax,ebp
   1400054eb:	cmp    rbx,rbp
   1400054ee:	setne  al
   1400054f1:	mov    r8,rdi
   1400054f4:	mov    edx,0x9
   1400054f9:	mov    DWORD PTR [rsp+0x28],eax
   1400054fd:	mov    QWORD PTR [rsp+0x20],rbx
   140005502:	call   QWORD PTR [rip+0x3b80]        # 0x140009088
   140005508:	mov    rcx,QWORD PTR [rsp+0x30]
   14000550d:	cmp    eax,ebp
   14000550f:	jne    0x140005523
   140005511:	movsxd rax,DWORD PTR [rcx+0x10c]
   140005518:	cmp    rsi,rax
   14000551b:	jb     0x140005545
   14000551d:	cmp    BYTE PTR [rdi+0x1],bpl
   140005521:	je     0x140005545
   140005523:	mov    eax,DWORD PTR [rcx+0x10c]
   140005529:	cmp    BYTE PTR [rsp+0x48],bpl
   14000552e:	je     0x140005468
   140005534:	mov    rcx,QWORD PTR [rsp+0x40]
   140005539:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140005540:	jmp    0x140005468
   140005545:	call   0x140002088
   14000554a:	mov    DWORD PTR [rax],0x2a
   140005550:	cmp    BYTE PTR [rsp+0x48],bpl
   140005555:	je     0x140005563
   140005557:	mov    rax,QWORD PTR [rsp+0x40]
   14000555c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140005563:	or     eax,0xffffffff
   140005566:	jmp    0x140005468
   14000556b:	mov    eax,ebp
   14000556d:	mov    r9d,0x1
   140005573:	cmp    rbx,rbp
   140005576:	setne  al
   140005579:	lea    edx,[r9+0x8]
   14000557d:	mov    r8,rdi
   140005580:	mov    DWORD PTR [rsp+0x28],eax
   140005584:	mov    rax,QWORD PTR [rsp+0x30]
   140005589:	mov    QWORD PTR [rsp+0x20],rbx
   14000558e:	mov    ecx,DWORD PTR [rax+0x4]
   140005591:	call   QWORD PTR [rip+0x3af1]        # 0x140009088
   140005597:	cmp    eax,ebp
   140005599:	jne    0x1400054a0
   14000559f:	jmp    0x140005545
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	xor    r9d,r9d
   1400055a7:	jmp    0x140005430
   1400055ac:	rex push rbx
   1400055ae:	sub    rsp,0x40
   1400055b2:	mov    ebx,ecx
   1400055b4:	lea    rcx,[rsp+0x20]
   1400055b9:	call   0x140001ddc
   1400055be:	mov    rax,QWORD PTR [rsp+0x20]
   1400055c3:	movzx  r11d,bl
   1400055c7:	mov    rcx,QWORD PTR [rax+0x140]
   1400055ce:	movzx  eax,WORD PTR [rcx+r11*2]
   1400055d3:	and    eax,0x8000
   1400055d8:	cmp    BYTE PTR [rsp+0x38],0x0
   1400055dd:	je     0x1400055eb
   1400055df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400055e4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400055eb:	add    rsp,0x40
   1400055ef:	pop    rbx
   1400055f0:	ret    
   1400055f1:	int3   
   1400055f2:	int3   
   1400055f3:	int3   
   1400055f4:	rex push rbx
   1400055f6:	sub    rsp,0x40
   1400055fa:	mov    ebx,ecx
   1400055fc:	lea    rcx,[rsp+0x20]
   140005601:	xor    edx,edx
   140005603:	call   0x140001ddc
   140005608:	mov    rax,QWORD PTR [rsp+0x20]
   14000560d:	movzx  r11d,bl
   140005611:	mov    rcx,QWORD PTR [rax+0x140]
   140005618:	movzx  eax,WORD PTR [rcx+r11*2]
   14000561d:	and    eax,0x8000
   140005622:	cmp    BYTE PTR [rsp+0x38],0x0
   140005627:	je     0x140005635
   140005629:	mov    rcx,QWORD PTR [rsp+0x30]
   14000562e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140005635:	add    rsp,0x40
   140005639:	pop    rbx
   14000563a:	ret    
   14000563b:	int3   
   14000563c:	int3   
   14000563d:	int3   
   14000563e:	int3   
   14000563f:	int3   
   140005640:	int3   
   140005641:	int3   
   140005642:	int3   
   140005643:	int3   
   140005644:	int3   
   140005645:	int3   
   140005646:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005650:	mov    rax,rcx
   140005653:	neg    rcx
   140005656:	test   rax,0x7
   14000565c:	je     0x14000566d
   14000565e:	xchg   ax,ax
   140005660:	mov    dl,BYTE PTR [rax]
   140005662:	inc    rax
   140005665:	test   dl,dl
   140005667:	je     0x1400056c8
   140005669:	test   al,0x7
   14000566b:	jne    0x140005660
   14000566d:	movabs r8,0x7efefefefefefeff
   140005677:	movabs r11,0x8101010101010100
   140005681:	mov    rdx,QWORD PTR [rax]
   140005684:	mov    r9,r8
   140005687:	add    rax,0x8
   14000568b:	add    r9,rdx
   14000568e:	not    rdx
   140005691:	xor    rdx,r9
   140005694:	and    rdx,r11
   140005697:	je     0x140005681
   140005699:	mov    rdx,QWORD PTR [rax-0x8]
   14000569d:	test   dl,dl
   14000569f:	je     0x1400056f2
   1400056a1:	test   dh,dh
   1400056a3:	je     0x1400056ec
   1400056a5:	shr    rdx,0x10
   1400056a9:	test   dl,dl
   1400056ab:	je     0x1400056e6
   1400056ad:	test   dh,dh
   1400056af:	je     0x1400056e0
   1400056b1:	shr    rdx,0x10
   1400056b5:	test   dl,dl
   1400056b7:	je     0x1400056da
   1400056b9:	test   dh,dh
   1400056bb:	je     0x1400056d4
   1400056bd:	shr    edx,0x10
   1400056c0:	test   dl,dl
   1400056c2:	je     0x1400056ce
   1400056c4:	test   dh,dh
   1400056c6:	jne    0x140005681
   1400056c8:	lea    rax,[rcx+rax*1-0x1]
   1400056cd:	ret    
   1400056ce:	lea    rax,[rcx+rax*1-0x2]
   1400056d3:	ret    
   1400056d4:	lea    rax,[rcx+rax*1-0x3]
   1400056d9:	ret    
   1400056da:	lea    rax,[rcx+rax*1-0x4]
   1400056df:	ret    
   1400056e0:	lea    rax,[rcx+rax*1-0x5]
   1400056e5:	ret    
   1400056e6:	lea    rax,[rcx+rax*1-0x6]
   1400056eb:	ret    
   1400056ec:	lea    rax,[rcx+rax*1-0x7]
   1400056f1:	ret    
   1400056f2:	lea    rax,[rcx+rax*1-0x8]
   1400056f7:	ret    
   1400056f8:	and    DWORD PTR [rip+0x8f39],0x0        # 0x14000e638
   1400056ff:	ret    
   140005700:	sub    rsp,0x28
   140005704:	call   0x140003788
   140005709:	mov    rcx,QWORD PTR [rax+0xd0]
   140005710:	test   rcx,rcx
   140005713:	je     0x140005719
   140005715:	call   rcx
   140005717:	jmp    0x140005719
   140005719:	call   0x140007d40
   14000571e:	add    rsp,0x28
   140005722:	ret    
   140005723:	int3   
   140005724:	sub    rsp,0x28
   140005728:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x140005700
   14000572f:	call   0x14000360c
   140005734:	mov    QWORD PTR [rip+0x8b5d],rax        # 0x14000e298
   14000573b:	add    rsp,0x28
   14000573f:	ret    
   140005740:	mov    QWORD PTR [rsp+0x8],rbx
   140005745:	mov    QWORD PTR [rsp+0x10],rsi
   14000574a:	mov    QWORD PTR [rsp+0x18],rdi
   14000574f:	push   r12
   140005751:	sub    rsp,0x20
   140005755:	lea    r12,[rip+0x7b04]        # 0x14000d260
   14000575c:	xor    esi,esi
   14000575e:	xor    edi,edi
   140005760:	mov    rbx,r12
   140005763:	cmp    DWORD PTR [rbx+0x8],0x1
   140005767:	jne    0x14000578e
   140005769:	movsxd rax,esi
   14000576c:	mov    edx,0xfa0
   140005771:	inc    esi
   140005773:	lea    rcx,[rax+rax*4]
   140005777:	lea    rax,[rip+0x8b22]        # 0x14000e2a0
   14000577e:	lea    rcx,[rax+rcx*8]
   140005782:	mov    QWORD PTR [rbx],rcx
   140005785:	call   0x140005e7c
   14000578a:	test   eax,eax
   14000578c:	je     0x1400057bb
   14000578e:	lea    rax,[rip+0x7d0b]        # 0x14000d4a0
   140005795:	add    rbx,0x10
   140005799:	inc    edi
   14000579b:	cmp    rbx,rax
   14000579e:	jl     0x140005763
   1400057a0:	mov    eax,0x1
   1400057a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400057af:	mov    rdi,QWORD PTR [rsp+0x40]
   1400057b4:	add    rsp,0x20
   1400057b8:	pop    r12
   1400057ba:	ret    
   1400057bb:	movsxd rax,edi
   1400057be:	add    rax,rax
   1400057c1:	and    QWORD PTR [r12+rax*8],0x0
   1400057c6:	xor    eax,eax
   1400057c8:	jmp    0x1400057a5
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400057d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400057d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400057db:	push   rdi
   1400057dc:	sub    rsp,0x20
   1400057e0:	lea    rbx,[rip+0x7a79]        # 0x14000d260
   1400057e7:	lea    rbp,[rip+0x7cb2]        # 0x14000d4a0
   1400057ee:	mov    rdi,rbx
   1400057f1:	mov    rsi,QWORD PTR [rdi]
   1400057f4:	test   rsi,rsi
   1400057f7:	je     0x140005814
   1400057f9:	cmp    DWORD PTR [rdi+0x8],0x1
   1400057fd:	je     0x140005814
   1400057ff:	mov    rcx,rsi
   140005802:	call   QWORD PTR [rip+0x39f8]        # 0x140009200
   140005808:	mov    rcx,rsi
   14000580b:	call   0x140005240
   140005810:	and    QWORD PTR [rdi],0x0
   140005814:	add    rdi,0x10
   140005818:	cmp    rdi,rbp
   14000581b:	jl     0x1400057f1
   14000581d:	mov    rcx,QWORD PTR [rbx]
   140005820:	test   rcx,rcx
   140005823:	je     0x140005831
   140005825:	cmp    DWORD PTR [rbx+0x8],0x1
   140005829:	jne    0x140005831
   14000582b:	call   QWORD PTR [rip+0x39cf]        # 0x140009200
   140005831:	add    rbx,0x10
   140005835:	cmp    rbx,rbp
   140005838:	jl     0x14000581d
   14000583a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000583f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005844:	mov    rsi,QWORD PTR [rsp+0x40]
   140005849:	add    rsp,0x20
   14000584d:	pop    rdi
   14000584e:	ret    
   14000584f:	int3   
   140005850:	movsxd rcx,ecx
   140005853:	lea    rax,[rip+0x7a06]        # 0x14000d260
   14000585a:	add    rcx,rcx
   14000585d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140005861:	rex.W jmp QWORD PTR [rip+0x3850]        # 0x1400090b8
   140005868:	mov    QWORD PTR [rsp+0x8],rbx
   14000586d:	mov    QWORD PTR [rsp+0x10],rsi
   140005872:	mov    QWORD PTR [rsp+0x18],rdi
   140005877:	push   r13
   140005879:	sub    rsp,0x20
   14000587d:	movsxd rbx,ecx
   140005880:	mov    esi,0x1
   140005885:	cmp    QWORD PTR [rip+0x89a3],0x0        # 0x14000e230
   14000588d:	jne    0x1400058a6
   14000588f:	call   0x1400028c8
   140005894:	lea    ecx,[rsi+0x1d]
   140005897:	call   0x1400026a0
   14000589c:	mov    ecx,0xff
   1400058a1:	call   0x140002324
   1400058a6:	mov    rdi,rbx
   1400058a9:	add    rdi,rdi
   1400058ac:	lea    r13,[rip+0x79ad]        # 0x14000d260
   1400058b3:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400058b9:	je     0x1400058bf
   1400058bb:	mov    eax,esi
   1400058bd:	jmp    0x14000593a
   1400058bf:	mov    ecx,0x28
   1400058c4:	call   0x1400052b8
   1400058c9:	mov    rbx,rax
   1400058cc:	test   rax,rax
   1400058cf:	jne    0x1400058e0
   1400058d1:	call   0x140002088
   1400058d6:	mov    DWORD PTR [rax],0xc
   1400058dc:	xor    eax,eax
   1400058de:	jmp    0x14000593a
   1400058e0:	mov    ecx,0xa
   1400058e5:	call   0x140005950
   1400058ea:	nop
   1400058eb:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400058f1:	jne    0x140005922
   1400058f3:	mov    edx,0xfa0
   1400058f8:	mov    rcx,rbx
   1400058fb:	call   0x140005e7c
   140005900:	test   eax,eax
   140005902:	jne    0x14000591b
   140005904:	mov    rcx,rbx
   140005907:	call   0x140005240
   14000590c:	call   0x140002088
   140005911:	mov    DWORD PTR [rax],0xc
   140005917:	xor    esi,esi
   140005919:	jmp    0x14000592b
   14000591b:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140005920:	jmp    0x14000592b
   140005922:	mov    rcx,rbx
   140005925:	call   0x140005240
   14000592a:	nop
   14000592b:	mov    rcx,QWORD PTR [rip+0x79ce]        # 0x14000d300
   140005932:	call   QWORD PTR [rip+0x3780]        # 0x1400090b8
   140005938:	mov    eax,esi
   14000593a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000593f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005944:	mov    rdi,QWORD PTR [rsp+0x40]
   140005949:	add    rsp,0x20
   14000594d:	pop    r13
   14000594f:	ret    
   140005950:	mov    QWORD PTR [rsp+0x8],rbx
   140005955:	push   rdi
   140005956:	sub    rsp,0x20
   14000595a:	movsxd rbx,ecx
   14000595d:	lea    rdi,[rip+0x78fc]        # 0x14000d260
   140005964:	add    rbx,rbx
   140005967:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000596c:	jne    0x14000597f
   14000596e:	call   0x140005868
   140005973:	test   eax,eax
   140005975:	jne    0x14000597f
   140005977:	lea    ecx,[rax+0x11]
   14000597a:	call   0x1400022b8
   14000597f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140005983:	mov    rbx,QWORD PTR [rsp+0x30]
   140005988:	add    rsp,0x20
   14000598c:	pop    rdi
   14000598d:	rex.W jmp QWORD PTR [rip+0x372c]        # 0x1400090c0
   140005994:	rex push rbx
   140005996:	sub    rsp,0x20
   14000599a:	mov    edx,0x8
   14000599f:	lea    ecx,[rdx+0x18]
   1400059a2:	call   0x140005324
   1400059a7:	mov    rcx,rax
   1400059aa:	mov    rbx,rax
   1400059ad:	call   0x14000360c
   1400059b2:	mov    QWORD PTR [rip+0x9edf],rax        # 0x14000f898
   1400059b9:	mov    QWORD PTR [rip+0x9ed0],rax        # 0x14000f890
   1400059c0:	test   rbx,rbx
   1400059c3:	jne    0x1400059ca
   1400059c5:	lea    eax,[rbx+0x18]
   1400059c8:	jmp    0x1400059d0
   1400059ca:	and    QWORD PTR [rbx],0x0
   1400059ce:	xor    eax,eax
   1400059d0:	add    rsp,0x20
   1400059d4:	pop    rbx
   1400059d5:	ret    
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400059dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400059e2:	mov    QWORD PTR [rsp+0x18],rdi
   1400059e7:	push   r12
   1400059e9:	push   r13
   1400059eb:	push   r14
   1400059ed:	sub    rsp,0x20
   1400059f1:	mov    r14,rcx
   1400059f4:	call   0x14000233c
   1400059f9:	nop
   1400059fa:	mov    rcx,QWORD PTR [rip+0x9e97]        # 0x14000f898
   140005a01:	call   0x140003620
   140005a06:	mov    r12,rax
   140005a09:	mov    rcx,QWORD PTR [rip+0x9e80]        # 0x14000f890
   140005a10:	call   0x140003620
   140005a15:	mov    rbx,rax
   140005a18:	cmp    rax,r12
   140005a1b:	jb     0x140005ab9
   140005a21:	mov    rdi,rax
   140005a24:	sub    rdi,r12
   140005a27:	lea    r13,[rdi+0x8]
   140005a2b:	cmp    r13,0x8
   140005a2f:	jb     0x140005ab9
   140005a35:	mov    rcx,r12
   140005a38:	call   0x140007de4
   140005a3d:	mov    rsi,rax
   140005a40:	cmp    rax,r13
   140005a43:	jae    0x140005a99
   140005a45:	mov    edx,0x1000
   140005a4a:	cmp    rax,rdx
   140005a4d:	cmovb  rdx,rax
   140005a51:	add    rdx,rax
   140005a54:	cmp    rdx,rax
   140005a57:	jb     0x140005a6a
   140005a59:	mov    rcx,r12
   140005a5c:	call   0x1400053a8
   140005a61:	xor    ebx,ebx
   140005a63:	cmp    rax,rbx
   140005a66:	jne    0x140005a82
   140005a68:	jmp    0x140005a6c
   140005a6a:	xor    ebx,ebx
   140005a6c:	lea    rdx,[rsi+0x20]
   140005a70:	cmp    rdx,rsi
   140005a73:	jb     0x140005abb
   140005a75:	mov    rcx,r12
   140005a78:	call   0x1400053a8
   140005a7d:	cmp    rax,rbx
   140005a80:	je     0x140005abb
   140005a82:	sar    rdi,0x3
   140005a86:	lea    rbx,[rax+rdi*8]
   140005a8a:	mov    rcx,rax
   140005a8d:	call   0x14000360c
   140005a92:	mov    QWORD PTR [rip+0x9dff],rax        # 0x14000f898
   140005a99:	mov    rcx,r14
   140005a9c:	call   0x14000360c
   140005aa1:	mov    QWORD PTR [rbx],rax
   140005aa4:	lea    rcx,[rbx+0x8]
   140005aa8:	call   0x14000360c
   140005aad:	mov    QWORD PTR [rip+0x9ddc],rax        # 0x14000f890
   140005ab4:	mov    rbx,r14
   140005ab7:	jmp    0x140005abb
   140005ab9:	xor    ebx,ebx
   140005abb:	call   0x140002348
   140005ac0:	mov    rax,rbx
   140005ac3:	mov    rbx,QWORD PTR [rsp+0x40]
   140005ac8:	mov    rsi,QWORD PTR [rsp+0x48]
   140005acd:	mov    rdi,QWORD PTR [rsp+0x50]
   140005ad2:	add    rsp,0x20
   140005ad6:	pop    r14
   140005ad8:	pop    r13
   140005ada:	pop    r12
   140005adc:	ret    
   140005add:	int3   
   140005ade:	int3   
   140005adf:	int3   
   140005ae0:	sub    rsp,0x28
   140005ae4:	call   0x1400059d8
   140005ae9:	neg    rax
   140005aec:	sbb    eax,eax
   140005aee:	neg    eax
   140005af0:	dec    eax
   140005af2:	add    rsp,0x28
   140005af6:	ret    
   140005af7:	int3   
   140005af8:	int3   
   140005af9:	int3   
   140005afa:	int3   
   140005afb:	int3   
   140005afc:	int3   
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	mov    rax,rcx
   140005b03:	mov    ecx,0x5a4d
   140005b08:	cmp    WORD PTR [rax],cx
   140005b0b:	je     0x140005b10
   140005b0d:	xor    eax,eax
   140005b0f:	ret    
   140005b10:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005b14:	add    rcx,rax
   140005b17:	xor    eax,eax
   140005b19:	cmp    DWORD PTR [rcx],0x4550
   140005b1f:	jne    0x140005b2d
   140005b21:	mov    edx,0x20b
   140005b26:	cmp    WORD PTR [rcx+0x18],dx
   140005b2a:	sete   al
   140005b2d:	repz ret 
   140005b2f:	int3   
   140005b30:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005b34:	xor    r9d,r9d
   140005b37:	mov    r10,rdx
   140005b3a:	add    r8,rcx
   140005b3d:	movzx  eax,WORD PTR [r8+0x14]
   140005b42:	movzx  r11d,WORD PTR [r8+0x6]
   140005b47:	lea    rcx,[rax+r8*1+0x18]
   140005b4c:	test   r11d,r11d
   140005b4f:	je     0x140005b6f
   140005b51:	mov    edx,DWORD PTR [rcx+0xc]
   140005b54:	cmp    r10,rdx
   140005b57:	jb     0x140005b63
   140005b59:	mov    eax,DWORD PTR [rcx+0x8]
   140005b5c:	add    eax,edx
   140005b5e:	cmp    r10,rax
   140005b61:	jb     0x140005b72
   140005b63:	inc    r9d
   140005b66:	add    rcx,0x28
   140005b6a:	cmp    r9d,r11d
   140005b6d:	jb     0x140005b51
   140005b6f:	xor    eax,eax
   140005b71:	ret    
   140005b72:	mov    rax,rcx
   140005b75:	ret    
   140005b76:	int3   
   140005b77:	int3   
   140005b78:	int3   
   140005b79:	int3   
   140005b7a:	int3   
   140005b7b:	int3   
   140005b7c:	int3   
   140005b7d:	int3   
   140005b7e:	int3   
   140005b7f:	int3   
   140005b80:	sub    rsp,0x28
   140005b84:	mov    r8,rcx
   140005b87:	lea    r9,[rip+0xffffffffffffa472]        # 0x140000000
   140005b8e:	mov    rcx,r9
   140005b91:	call   0x140005b00
   140005b96:	test   eax,eax
   140005b98:	je     0x140005bbc
   140005b9a:	sub    r8,r9
   140005b9d:	mov    rdx,r8
   140005ba0:	mov    rcx,r9
   140005ba3:	call   0x140005b30
   140005ba8:	test   rax,rax
   140005bab:	je     0x140005bbc
   140005bad:	mov    eax,DWORD PTR [rax+0x24]
   140005bb0:	shr    eax,0x1f
   140005bb3:	not    eax
   140005bb5:	and    eax,0x1
   140005bb8:	jmp    0x140005bbc
   140005bba:	xor    eax,eax
   140005bbc:	add    rsp,0x28
   140005bc0:	ret    
   140005bc1:	int3   
   140005bc2:	int3   
   140005bc3:	int3   
   140005bc4:	mov    QWORD PTR [rip+0x8905],rcx        # 0x14000e4d0
   140005bcb:	mov    QWORD PTR [rip+0x8906],rcx        # 0x14000e4d8
   140005bd2:	mov    QWORD PTR [rip+0x8907],rcx        # 0x14000e4e0
   140005bd9:	mov    QWORD PTR [rip+0x8908],rcx        # 0x14000e4e8
   140005be0:	ret    
   140005be1:	int3   
   140005be2:	int3   
   140005be3:	int3   
   140005be4:	mov    rcx,QWORD PTR [rip+0x88f5]        # 0x14000e4e0
   140005beb:	jmp    0x140003620
   140005bf0:	mov    QWORD PTR [rsp+0x10],rbx
   140005bf5:	mov    QWORD PTR [rsp+0x18],rsi
   140005bfa:	push   rdi
   140005bfb:	push   r12
   140005bfd:	push   r13
   140005bff:	push   r14
   140005c01:	push   r15
   140005c03:	sub    rsp,0x40
   140005c07:	mov    ebx,ecx
   140005c09:	xor    edi,edi
   140005c0b:	mov    DWORD PTR [rsp+0x70],edi
   140005c0f:	xor    esi,esi
   140005c11:	mov    edx,ecx
   140005c13:	sub    edx,0x2
   140005c16:	je     0x140005d25
   140005c1c:	sub    edx,0x2
   140005c1f:	je     0x140005cc7
   140005c25:	sub    edx,0x2
   140005c28:	je     0x140005cae
   140005c2e:	sub    edx,0x2
   140005c31:	je     0x140005cc7
   140005c37:	sub    edx,0x3
   140005c3a:	je     0x140005cc7
   140005c40:	sub    edx,0x4
   140005c43:	je     0x140005c92
   140005c45:	sub    edx,0x6
   140005c48:	je     0x140005c76
   140005c4a:	cmp    edx,0x1
   140005c4d:	je     0x140005cae
   140005c4f:	call   0x140002088
   140005c54:	mov    DWORD PTR [rax],0x16
   140005c5a:	and    QWORD PTR [rsp+0x20],rsi
   140005c5f:	xor    r9d,r9d
   140005c62:	xor    r8d,r8d
   140005c65:	xor    edx,edx
   140005c67:	xor    ecx,ecx
   140005c69:	call   0x140001fb8
   140005c6e:	or     eax,0xffffffff
   140005c71:	jmp    0x140005e47
   140005c76:	lea    r12,[rip+0x885b]        # 0x14000e4d8
   140005c7d:	mov    rcx,QWORD PTR [rip+0x8854]        # 0x14000e4d8
   140005c84:	mov    edi,0x1
   140005c89:	mov    DWORD PTR [rsp+0x70],edi
   140005c8d:	jmp    0x140005d3c
   140005c92:	lea    r12,[rip+0x884f]        # 0x14000e4e8
   140005c99:	mov    rcx,QWORD PTR [rip+0x8848]        # 0x14000e4e8
   140005ca0:	mov    edi,0x1
   140005ca5:	mov    DWORD PTR [rsp+0x70],edi
   140005ca9:	jmp    0x140005d3c
   140005cae:	lea    r12,[rip+0x882b]        # 0x14000e4e0
   140005cb5:	mov    rcx,QWORD PTR [rip+0x8824]        # 0x14000e4e0
   140005cbc:	mov    edi,0x1
   140005cc1:	mov    DWORD PTR [rsp+0x70],edi
   140005cc5:	jmp    0x140005d3c
   140005cc7:	call   0x140003704
   140005ccc:	mov    rsi,rax
   140005ccf:	test   rax,rax
   140005cd2:	jne    0x140005cdc
   140005cd4:	or     eax,0xffffffff
   140005cd7:	jmp    0x140005e47
   140005cdc:	mov    rdx,QWORD PTR [rax+0xa0]
   140005ce3:	mov    rcx,rdx
   140005ce6:	movsxd r8,DWORD PTR [rip+0x6a1f]        # 0x14000c70c
   140005ced:	cmp    DWORD PTR [rcx+0x4],ebx
   140005cf0:	je     0x140005d05
   140005cf2:	add    rcx,0x10
   140005cf6:	mov    rax,r8
   140005cf9:	shl    rax,0x4
   140005cfd:	add    rax,rdx
   140005d00:	cmp    rcx,rax
   140005d03:	jb     0x140005ced
   140005d05:	mov    rax,r8
   140005d08:	shl    rax,0x4
   140005d0c:	add    rax,rdx
   140005d0f:	cmp    rcx,rax
   140005d12:	jae    0x140005d19
   140005d14:	cmp    DWORD PTR [rcx+0x4],ebx
   140005d17:	je     0x140005d1b
   140005d19:	xor    ecx,ecx
   140005d1b:	lea    r12,[rcx+0x8]
   140005d1f:	mov    r13,QWORD PTR [r12]
   140005d23:	jmp    0x140005d44
   140005d25:	lea    r12,[rip+0x87a4]        # 0x14000e4d0
   140005d2c:	mov    rcx,QWORD PTR [rip+0x879d]        # 0x14000e4d0
   140005d33:	mov    edi,0x1
   140005d38:	mov    DWORD PTR [rsp+0x70],edi
   140005d3c:	call   0x140003620
   140005d41:	mov    r13,rax
   140005d44:	cmp    r13,0x1
   140005d48:	jne    0x140005d51
   140005d4a:	xor    eax,eax
   140005d4c:	jmp    0x140005e47
   140005d51:	test   r13,r13
   140005d54:	jne    0x140005d60
   140005d56:	lea    ecx,[r13+0x3]
   140005d5a:	call   0x14000260c
   140005d5f:	int3   
   140005d60:	test   edi,edi
   140005d62:	je     0x140005d6c
   140005d64:	xor    ecx,ecx
   140005d66:	call   0x140005950
   140005d6b:	nop
   140005d6c:	cmp    ebx,0x8
   140005d6f:	je     0x140005d87
   140005d71:	cmp    ebx,0xb
   140005d74:	je     0x140005d87
   140005d76:	cmp    ebx,0x4
   140005d79:	je     0x140005d87
   140005d7b:	mov    r15,QWORD PTR [rsp+0x38]
   140005d80:	mov    r14d,DWORD PTR [rsp+0x70]
   140005d85:	jmp    0x140005db8
   140005d87:	mov    r15,QWORD PTR [rsi+0xa8]
   140005d8e:	mov    QWORD PTR [rsp+0x38],r15
   140005d93:	and    QWORD PTR [rsi+0xa8],0x0
   140005d9b:	cmp    ebx,0x8
   140005d9e:	jne    0x140005db3
   140005da0:	mov    r14d,DWORD PTR [rsi+0xb0]
   140005da7:	mov    DWORD PTR [rsi+0xb0],0x8c
   140005db1:	jmp    0x140005db8
   140005db3:	mov    r14d,DWORD PTR [rsp+0x70]
   140005db8:	cmp    ebx,0x8
   140005dbb:	jne    0x140005df6
   140005dbd:	mov    ecx,DWORD PTR [rip+0x693d]        # 0x14000c700
   140005dc3:	mov    edx,ecx
   140005dc5:	mov    DWORD PTR [rsp+0x30],ecx
   140005dc9:	mov    eax,DWORD PTR [rip+0x6935]        # 0x14000c704
   140005dcf:	add    ecx,eax
   140005dd1:	cmp    edx,ecx
   140005dd3:	jge    0x140005dff
   140005dd5:	movsxd rcx,edx
   140005dd8:	add    rcx,rcx
   140005ddb:	mov    rax,QWORD PTR [rsi+0xa0]
   140005de2:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140005de8:	inc    edx
   140005dea:	mov    DWORD PTR [rsp+0x30],edx
   140005dee:	mov    ecx,DWORD PTR [rip+0x690c]        # 0x14000c700
   140005df4:	jmp    0x140005dc9
   140005df6:	call   0x140003614
   140005dfb:	mov    QWORD PTR [r12],rax
   140005dff:	test   edi,edi
   140005e01:	je     0x140005e0a
   140005e03:	xor    ecx,ecx
   140005e05:	call   0x140005850
   140005e0a:	mov    edi,0x8
   140005e0f:	cmp    ebx,edi
   140005e11:	jne    0x140005e20
   140005e13:	mov    edx,DWORD PTR [rsi+0xb0]
   140005e19:	mov    ecx,edi
   140005e1b:	call   r13
   140005e1e:	jmp    0x140005e25
   140005e20:	mov    ecx,ebx
   140005e22:	call   r13
   140005e25:	cmp    ebx,edi
   140005e27:	je     0x140005e33
   140005e29:	cmp    ebx,0xb
   140005e2c:	je     0x140005e33
   140005e2e:	cmp    ebx,0x4
   140005e31:	jne    0x140005e45
   140005e33:	mov    QWORD PTR [rsi+0xa8],r15
   140005e3a:	cmp    ebx,edi
   140005e3c:	jne    0x140005e45
   140005e3e:	mov    DWORD PTR [rsi+0xb0],r14d
   140005e45:	xor    eax,eax
   140005e47:	lea    r11,[rsp+0x40]
   140005e4c:	mov    rbx,QWORD PTR [r11+0x38]
   140005e50:	mov    rsi,QWORD PTR [r11+0x40]
   140005e54:	mov    rsp,r11
   140005e57:	pop    r15
   140005e59:	pop    r14
   140005e5b:	pop    r13
   140005e5d:	pop    r12
   140005e5f:	pop    rdi
   140005e60:	ret    
   140005e61:	int3   
   140005e62:	int3   
   140005e63:	int3   
   140005e64:	mov    QWORD PTR [rip+0x868d],rcx        # 0x14000e4f8
   140005e6b:	ret    
   140005e6c:	mov    QWORD PTR [rip+0x8695],rcx        # 0x14000e508
   140005e73:	ret    
   140005e74:	mov    QWORD PTR [rip+0x8695],rcx        # 0x14000e510
   140005e7b:	ret    
   140005e7c:	sub    rsp,0x38
   140005e80:	call   QWORD PTR [rip+0x31f2]        # 0x140009078
   140005e86:	mov    r11d,eax
   140005e89:	mov    DWORD PTR [rsp+0x20],eax
   140005e8d:	jmp    0x140005ea9
   140005e8f:	cmp    eax,0xc0000017
   140005e94:	jne    0x140005ea1
   140005e96:	mov    ecx,0x8
   140005e9b:	call   QWORD PTR [rip+0x338f]        # 0x140009230
   140005ea1:	xor    r11d,r11d
   140005ea4:	mov    DWORD PTR [rsp+0x20],r11d
   140005ea9:	mov    eax,r11d
   140005eac:	add    rsp,0x38
   140005eb0:	ret    
   140005eb1:	int3   
   140005eb2:	int3   
   140005eb3:	int3   
   140005eb4:	mov    QWORD PTR [rip+0x865d],rcx        # 0x14000e518
   140005ebb:	ret    
   140005ebc:	rex push rbx
   140005ebe:	sub    rsp,0x20
   140005ec2:	mov    rbx,rcx
   140005ec5:	mov    rcx,QWORD PTR [rip+0x864c]        # 0x14000e518
   140005ecc:	call   0x140003620
   140005ed1:	test   rax,rax
   140005ed4:	je     0x140005ee6
   140005ed6:	mov    rcx,rbx
   140005ed9:	call   rax
   140005edb:	test   eax,eax
   140005edd:	je     0x140005ee6
   140005edf:	mov    eax,0x1
   140005ee4:	jmp    0x140005ee8
   140005ee6:	xor    eax,eax
   140005ee8:	add    rsp,0x20
   140005eec:	pop    rbx
   140005eed:	ret    
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ef5:	mov    QWORD PTR [rsp+0x10],rbp
   140005efa:	push   rsi
   140005efb:	push   rdi
   140005efc:	push   r12
   140005efe:	push   r13
   140005f00:	push   r14
   140005f02:	sub    rsp,0x40
   140005f06:	mov    ebp,r8d
   140005f09:	mov    r13,rdx
   140005f0c:	mov    r14,rcx
   140005f0f:	call   0x140003614
   140005f14:	xor    ebx,ebx
   140005f16:	mov    rdi,rax
   140005f19:	cmp    QWORD PTR [rip+0x8600],rbx        # 0x14000e520
   140005f20:	jne    0x140005ff6
   140005f26:	lea    rcx,[rip+0x3f03]        # 0x140009e30
   140005f2d:	call   QWORD PTR [rip+0x314d]        # 0x140009080
   140005f33:	mov    rsi,rax
   140005f36:	test   rax,rax
   140005f39:	je     0x1400060cb
   140005f3f:	lea    rdx,[rip+0x3eda]        # 0x140009e20
   140005f46:	mov    rcx,rax
   140005f49:	call   QWORD PTR [rip+0x3251]        # 0x1400091a0
   140005f4f:	test   rax,rax
   140005f52:	je     0x1400060cb
   140005f58:	mov    rcx,rax
   140005f5b:	call   0x14000360c
   140005f60:	lea    rdx,[rip+0x3ea9]        # 0x140009e10
   140005f67:	mov    rcx,rsi
   140005f6a:	mov    QWORD PTR [rip+0x85af],rax        # 0x14000e520
   140005f71:	call   QWORD PTR [rip+0x3229]        # 0x1400091a0
   140005f77:	mov    rcx,rax
   140005f7a:	call   0x14000360c
   140005f7f:	lea    rdx,[rip+0x3e72]        # 0x140009df8
   140005f86:	mov    rcx,rsi
   140005f89:	mov    QWORD PTR [rip+0x8598],rax        # 0x14000e528
   140005f90:	call   QWORD PTR [rip+0x320a]        # 0x1400091a0
   140005f96:	mov    rcx,rax
   140005f99:	call   0x14000360c
   140005f9e:	lea    rdx,[rip+0x3e33]        # 0x140009dd8
   140005fa5:	mov    rcx,rsi
   140005fa8:	mov    QWORD PTR [rip+0x8581],rax        # 0x14000e530
   140005faf:	call   QWORD PTR [rip+0x31eb]        # 0x1400091a0
   140005fb5:	mov    rcx,rax
   140005fb8:	call   0x14000360c
   140005fbd:	mov    r11,rax
   140005fc0:	mov    QWORD PTR [rip+0x8579],rax        # 0x14000e540
   140005fc7:	test   rax,rax
   140005fca:	je     0x140005fed
   140005fcc:	lea    rdx,[rip+0x3ded]        # 0x140009dc0
   140005fd3:	mov    rcx,rsi
   140005fd6:	call   QWORD PTR [rip+0x31c4]        # 0x1400091a0
   140005fdc:	mov    rcx,rax
   140005fdf:	call   0x14000360c
   140005fe4:	mov    QWORD PTR [rip+0x854d],rax        # 0x14000e538
   140005feb:	jmp    0x140005ffd
   140005fed:	mov    rax,QWORD PTR [rip+0x8544]        # 0x14000e538
   140005ff4:	jmp    0x140006004
   140005ff6:	mov    rax,QWORD PTR [rip+0x853b]        # 0x14000e538
   140005ffd:	mov    r11,QWORD PTR [rip+0x853c]        # 0x14000e540
   140006004:	cmp    rax,rdi
   140006007:	je     0x14000606c
   140006009:	cmp    r11,rdi
   14000600c:	je     0x14000606c
   14000600e:	mov    rcx,rax
   140006011:	call   0x140003620
   140006016:	mov    rcx,QWORD PTR [rip+0x8523]        # 0x14000e540
   14000601d:	mov    rsi,rax
   140006020:	call   0x140003620
   140006025:	mov    r12,rax
   140006028:	test   rsi,rsi
   14000602b:	je     0x14000606c
   14000602d:	test   rax,rax
   140006030:	je     0x14000606c
   140006032:	call   rsi
   140006034:	test   rax,rax
   140006037:	je     0x140006066
   140006039:	lea    rcx,[rsp+0x88]
   140006041:	mov    r9d,0xc
   140006047:	lea    r8,[rsp+0x30]
   14000604c:	mov    QWORD PTR [rsp+0x20],rcx
   140006051:	lea    edx,[r9-0xb]
   140006055:	mov    rcx,rax
   140006058:	call   r12
   14000605b:	test   eax,eax
   14000605d:	je     0x140006066
   14000605f:	test   BYTE PTR [rsp+0x38],0x1
   140006064:	jne    0x14000606c
   140006066:	bts    ebp,0x15
   14000606a:	jmp    0x1400060aa
   14000606c:	mov    rcx,QWORD PTR [rip+0x84b5]        # 0x14000e528
   140006073:	cmp    rcx,rdi
   140006076:	je     0x1400060aa
   140006078:	call   0x140003620
   14000607d:	test   rax,rax
   140006080:	je     0x1400060aa
   140006082:	call   rax
   140006084:	mov    rbx,rax
   140006087:	test   rax,rax
   14000608a:	je     0x1400060aa
   14000608c:	mov    rcx,QWORD PTR [rip+0x849d]        # 0x14000e530
   140006093:	cmp    rcx,rdi
   140006096:	je     0x1400060aa
   140006098:	call   0x140003620
   14000609d:	test   rax,rax
   1400060a0:	je     0x1400060aa
   1400060a2:	mov    rcx,rbx
   1400060a5:	call   rax
   1400060a7:	mov    rbx,rax
   1400060aa:	mov    rcx,QWORD PTR [rip+0x846f]        # 0x14000e520
   1400060b1:	call   0x140003620
   1400060b6:	test   rax,rax
   1400060b9:	je     0x1400060cb
   1400060bb:	mov    r9d,ebp
   1400060be:	mov    r8,r13
   1400060c1:	mov    rdx,r14
   1400060c4:	mov    rcx,rbx
   1400060c7:	call   rax
   1400060c9:	jmp    0x1400060cd
   1400060cb:	xor    eax,eax
   1400060cd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400060d2:	mov    rbp,QWORD PTR [rsp+0x78]
   1400060d7:	add    rsp,0x40
   1400060db:	pop    r14
   1400060dd:	pop    r13
   1400060df:	pop    r12
   1400060e1:	pop    rdi
   1400060e2:	pop    rsi
   1400060e3:	ret    
   1400060e4:	rex push rbx
   1400060e6:	sub    rsp,0x30
   1400060ea:	mov    r9,rcx
   1400060ed:	test   rcx,rcx
   1400060f0:	je     0x1400060ff
   1400060f2:	test   rdx,rdx
   1400060f5:	je     0x1400060ff
   1400060f7:	test   r8,r8
   1400060fa:	jne    0x140006128
   1400060fc:	mov    BYTE PTR [rcx],r8b
   1400060ff:	call   0x140002088
   140006104:	mov    ebx,0x16
   140006109:	and    QWORD PTR [rsp+0x20],0x0
   14000610f:	xor    r9d,r9d
   140006112:	xor    r8d,r8d
   140006115:	xor    edx,edx
   140006117:	xor    ecx,ecx
   140006119:	mov    DWORD PTR [rax],ebx
   14000611b:	call   0x140001fb8
   140006120:	mov    eax,ebx
   140006122:	add    rsp,0x30
   140006126:	pop    rbx
   140006127:	ret    
   140006128:	cmp    BYTE PTR [rcx],0x0
   14000612b:	je     0x140006136
   14000612d:	inc    rcx
   140006130:	sub    rdx,0x1
   140006134:	jne    0x140006128
   140006136:	test   rdx,rdx
   140006139:	jne    0x140006140
   14000613b:	mov    BYTE PTR [r9],dl
   14000613e:	jmp    0x1400060ff
   140006140:	mov    al,BYTE PTR [r8]
   140006143:	inc    r8
   140006146:	mov    BYTE PTR [rcx],al
   140006148:	inc    rcx
   14000614b:	test   al,al
   14000614d:	je     0x140006155
   14000614f:	sub    rdx,0x1
   140006153:	jne    0x140006140
   140006155:	test   rdx,rdx
   140006158:	jne    0x140006169
   14000615a:	mov    BYTE PTR [r9],dl
   14000615d:	call   0x140002088
   140006162:	mov    ebx,0x22
   140006167:	jmp    0x140006109
   140006169:	xor    eax,eax
   14000616b:	jmp    0x140006122
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	rex push rbx
   140006172:	sub    rsp,0x30
   140006176:	mov    r11,r8
   140006179:	test   r9,r9
   14000617c:	jne    0x14000618c
   14000617e:	test   rcx,rcx
   140006181:	jne    0x140006191
   140006183:	test   rdx,rdx
   140006186:	jne    0x1400061a8
   140006188:	xor    eax,eax
   14000618a:	jmp    0x1400061cb
   14000618c:	test   rcx,rcx
   14000618f:	je     0x1400061a8
   140006191:	test   rdx,rdx
   140006194:	je     0x1400061a8
   140006196:	test   r9,r9
   140006199:	jne    0x1400061a0
   14000619b:	mov    BYTE PTR [rcx],r9b
   14000619e:	jmp    0x140006188
   1400061a0:	test   r8,r8
   1400061a3:	jne    0x1400061d1
   1400061a5:	mov    BYTE PTR [rcx],r8b
   1400061a8:	call   0x140002088
   1400061ad:	mov    ebx,0x16
   1400061b2:	and    QWORD PTR [rsp+0x20],0x0
   1400061b8:	xor    r9d,r9d
   1400061bb:	xor    r8d,r8d
   1400061be:	xor    edx,edx
   1400061c0:	xor    ecx,ecx
   1400061c2:	mov    DWORD PTR [rax],ebx
   1400061c4:	call   0x140001fb8
   1400061c9:	mov    eax,ebx
   1400061cb:	add    rsp,0x30
   1400061cf:	pop    rbx
   1400061d0:	ret    
   1400061d1:	mov    r10,rcx
   1400061d4:	mov    r8,rdx
   1400061d7:	cmp    r9,0xffffffffffffffff
   1400061db:	jne    0x1400061f5
   1400061dd:	mov    al,BYTE PTR [r11]
   1400061e0:	inc    r11
   1400061e3:	mov    BYTE PTR [r10],al
   1400061e6:	inc    r10
   1400061e9:	test   al,al
   1400061eb:	je     0x140006219
   1400061ed:	sub    r8,0x1
   1400061f1:	jne    0x1400061dd
   1400061f3:	jmp    0x140006219
   1400061f5:	mov    al,BYTE PTR [r11]
   1400061f8:	inc    r11
   1400061fb:	mov    BYTE PTR [r10],al
   1400061fe:	inc    r10
   140006201:	test   al,al
   140006203:	je     0x140006211
   140006205:	sub    r8,0x1
   140006209:	je     0x140006211
   14000620b:	sub    r9,0x1
   14000620f:	jne    0x1400061f5
   140006211:	test   r9,r9
   140006214:	jne    0x140006219
   140006216:	mov    BYTE PTR [r10],r9b
   140006219:	test   r8,r8
   14000621c:	jne    0x140006188
   140006222:	cmp    r9,0xffffffffffffffff
   140006226:	jne    0x140006233
   140006228:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   14000622d:	lea    eax,[r8+0x50]
   140006231:	jmp    0x1400061cb
   140006233:	mov    BYTE PTR [rcx],0x0
   140006236:	call   0x140002088
   14000623b:	mov    ebx,0x22
   140006240:	jmp    0x1400061b2
   140006245:	int3   
   140006246:	int3   
   140006247:	int3   
   140006248:	rex push rbx
   14000624a:	sub    rsp,0x30
   14000624e:	test   rcx,rcx
   140006251:	je     0x140006260
   140006253:	test   rdx,rdx
   140006256:	je     0x140006260
   140006258:	test   r8,r8
   14000625b:	jne    0x140006289
   14000625d:	mov    BYTE PTR [rcx],r8b
   140006260:	call   0x140002088
   140006265:	mov    ebx,0x16
   14000626a:	and    QWORD PTR [rsp+0x20],0x0
   140006270:	xor    r9d,r9d
   140006273:	xor    r8d,r8d
   140006276:	xor    edx,edx
   140006278:	xor    ecx,ecx
   14000627a:	mov    DWORD PTR [rax],ebx
   14000627c:	call   0x140001fb8
   140006281:	mov    eax,ebx
   140006283:	add    rsp,0x30
   140006287:	pop    rbx
   140006288:	ret    
   140006289:	mov    r9,rcx
   14000628c:	mov    al,BYTE PTR [r8]
   14000628f:	inc    r8
   140006292:	mov    BYTE PTR [r9],al
   140006295:	inc    r9
   140006298:	test   al,al
   14000629a:	je     0x1400062a2
   14000629c:	sub    rdx,0x1
   1400062a0:	jne    0x14000628c
   1400062a2:	test   rdx,rdx
   1400062a5:	jne    0x1400062b5
   1400062a7:	mov    BYTE PTR [rcx],dl
   1400062a9:	call   0x140002088
   1400062ae:	mov    ebx,0x22
   1400062b3:	jmp    0x14000626a
   1400062b5:	xor    eax,eax
   1400062b7:	jmp    0x140006283
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	sub    rsp,0x38
   1400062c0:	test   ecx,ecx
   1400062c2:	js     0x1400062e4
   1400062c4:	cmp    ecx,0x2
   1400062c7:	jle    0x1400062d6
   1400062c9:	cmp    ecx,0x3
   1400062cc:	jne    0x1400062e4
   1400062ce:	mov    eax,DWORD PTR [rip+0x754c]        # 0x14000d820
   1400062d4:	jmp    0x140006307
   1400062d6:	mov    eax,DWORD PTR [rip+0x7544]        # 0x14000d820
   1400062dc:	mov    DWORD PTR [rip+0x753e],ecx        # 0x14000d820
   1400062e2:	jmp    0x140006307
   1400062e4:	call   0x140002088
   1400062e9:	and    QWORD PTR [rsp+0x20],0x0
   1400062ef:	xor    r9d,r9d
   1400062f2:	xor    r8d,r8d
   1400062f5:	xor    edx,edx
   1400062f7:	xor    ecx,ecx
   1400062f9:	mov    DWORD PTR [rax],0x16
   1400062ff:	call   0x140001fb8
   140006304:	or     eax,0xffffffff
   140006307:	add    rsp,0x38
   14000630b:	ret    
   14000630c:	int3   
   14000630d:	int3   
   14000630e:	int3   
   14000630f:	int3   
   140006310:	int3   
   140006311:	int3   
   140006312:	int3   
   140006313:	int3   
   140006314:	int3   
   140006315:	int3   
   140006316:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006320:	sub    rsp,0x4d8
   140006327:	xor    r8,r8
   14000632a:	xor    r9,r9
   14000632d:	mov    QWORD PTR [rsp+0x20],rsp
   140006332:	mov    QWORD PTR [rsp+0x28],r8
   140006337:	call   0x14000897c
   14000633c:	add    rsp,0x4d8
   140006343:	ret    
   140006344:	int3   
   140006345:	int3   
   140006346:	int3   
   140006347:	int3   
   140006348:	int3   
   140006349:	int3   
   14000634a:	nop    WORD PTR [rax+rax*1+0x0]
   140006350:	mov    QWORD PTR [rsp+0x8],rcx
   140006355:	mov    QWORD PTR [rsp+0x18],rdx
   14000635a:	mov    DWORD PTR [rsp+0x10],r8d
   14000635f:	mov    r9,0x19930520
   140006366:	jmp    0x140006370
   140006368:	int3   
   140006369:	int3   
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	xchg   ax,ax
   140006370:	ret    
   140006371:	int3   
   140006372:	int3   
   140006373:	int3   
   140006374:	int3   
   140006375:	int3   
   140006376:	int3   
   140006377:	nop    WORD PTR [rax+rax*1+0x0]
   140006380:	ret    
   140006381:	int3   
   140006382:	int3   
   140006383:	int3   
   140006384:	mov    QWORD PTR [rsp+0x8],rbx
   140006389:	mov    QWORD PTR [rsp+0x10],rsi
   14000638e:	push   rdi
   14000638f:	sub    rsp,0x40
   140006393:	mov    ebx,edx
   140006395:	mov    rdx,rcx
   140006398:	lea    rcx,[rsp+0x20]
   14000639d:	mov    edi,r9d
   1400063a0:	mov    esi,r8d
   1400063a3:	call   0x140001ddc
   1400063a8:	mov    rax,QWORD PTR [rsp+0x28]
   1400063ad:	movzx  r11d,bl
   1400063b1:	test   BYTE PTR [r11+rax*1+0x1d],dil
   1400063b6:	jne    0x1400063d7
   1400063b8:	test   esi,esi
   1400063ba:	je     0x1400063d1
   1400063bc:	mov    rax,QWORD PTR [rsp+0x20]
   1400063c1:	mov    rcx,QWORD PTR [rax+0x140]
   1400063c8:	movzx  eax,WORD PTR [rcx+r11*2]
   1400063cd:	and    eax,esi
   1400063cf:	jmp    0x1400063d3
   1400063d1:	xor    eax,eax
   1400063d3:	test   eax,eax
   1400063d5:	je     0x1400063dc
   1400063d7:	mov    eax,0x1
   1400063dc:	cmp    BYTE PTR [rsp+0x38],0x0
   1400063e1:	je     0x1400063ef
   1400063e3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400063e8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400063ef:	mov    rbx,QWORD PTR [rsp+0x50]
   1400063f4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400063f9:	add    rsp,0x40
   1400063fd:	pop    rdi
   1400063fe:	ret    
   1400063ff:	int3   
   140006400:	mov    edx,ecx
   140006402:	mov    r9d,0x4
   140006408:	xor    r8d,r8d
   14000640b:	xor    ecx,ecx
   14000640d:	jmp    0x140006384
   140006412:	int3   
   140006413:	int3   
   140006414:	int3   
   140006415:	int3   
   140006416:	int3   
   140006417:	int3   
   140006418:	int3   
   140006419:	int3   
   14000641a:	int3   
   14000641b:	int3   
   14000641c:	int3   
   14000641d:	int3   
   14000641e:	int3   
   14000641f:	int3   
   140006420:	int3   
   140006421:	int3   
   140006422:	int3   
   140006423:	int3   
   140006424:	int3   
   140006425:	int3   
   140006426:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006430:	mov    r11,rcx
   140006433:	sub    rdx,rcx
   140006436:	jb     0x1400065da
   14000643c:	cmp    r8,0x8
   140006440:	jb     0x1400064a3
   140006442:	test   cl,0x7
   140006445:	je     0x14000647d
   140006447:	test   cl,0x1
   14000644a:	je     0x140006457
   14000644c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000644f:	dec    r8
   140006452:	mov    BYTE PTR [rcx],al
   140006454:	inc    rcx
   140006457:	test   cl,0x2
   14000645a:	je     0x14000646b
   14000645c:	mov    ax,WORD PTR [rdx+rcx*1]
   140006460:	sub    r8,0x2
   140006464:	mov    WORD PTR [rcx],ax
   140006467:	add    rcx,0x2
   14000646b:	test   cl,0x4
   14000646e:	je     0x14000647d
   140006470:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006473:	sub    r8,0x4
   140006477:	mov    DWORD PTR [rcx],eax
   140006479:	add    rcx,0x4
   14000647d:	mov    r9,r8
   140006480:	shr    r9,0x5
   140006484:	jne    0x1400064d7
   140006486:	mov    r9,r8
   140006489:	shr    r9,0x3
   14000648d:	je     0x1400064a3
   14000648f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006493:	mov    QWORD PTR [rcx],rax
   140006496:	add    rcx,0x8
   14000649a:	dec    r9
   14000649d:	jne    0x14000648f
   14000649f:	and    r8,0x7
   1400064a3:	test   r8,r8
   1400064a6:	jne    0x1400064b0
   1400064a8:	mov    rax,r11
   1400064ab:	ret    
   1400064ac:	nop    DWORD PTR [rax+0x0]
   1400064b0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400064b3:	mov    BYTE PTR [rcx],al
   1400064b5:	inc    rcx
   1400064b8:	dec    r8
   1400064bb:	jne    0x1400064b0
   1400064bd:	mov    rax,r11
   1400064c0:	ret    
   1400064c1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400064d0:	data16 data16 xchg ax,ax
   1400064d4:	data16 xchg ax,ax
   1400064d7:	cmp    r9,0x2000
   1400064de:	jae    0x140006522
   1400064e0:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400064e4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400064e9:	add    rcx,0x20
   1400064ed:	mov    QWORD PTR [rcx-0x20],rax
   1400064f1:	mov    QWORD PTR [rcx-0x18],r10
   1400064f5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   1400064fa:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400064ff:	dec    r9
   140006502:	mov    QWORD PTR [rcx-0x10],rax
   140006506:	mov    QWORD PTR [rcx-0x8],r10
   14000650a:	jne    0x1400064e0
   14000650c:	and    r8,0x1f
   140006510:	jmp    0x140006486
   140006515:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006520:	xchg   ax,ax
   140006522:	cmp    rdx,0x1000
   140006529:	jb     0x1400064e0
   14000652b:	mov    eax,0x20
   140006530:	prefetchnta BYTE PTR [rdx+rcx*1]
   140006534:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140006539:	add    rcx,0x80
   140006540:	dec    eax
   140006542:	jne    0x140006530
   140006544:	sub    rcx,0x1000
   14000654b:	mov    eax,0x40
   140006550:	mov    r9,QWORD PTR [rdx+rcx*1]
   140006554:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140006559:	movnti QWORD PTR [rcx],r9
   14000655d:	movnti QWORD PTR [rcx+0x8],r10
   140006562:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140006567:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000656c:	movnti QWORD PTR [rcx+0x10],r9
   140006571:	movnti QWORD PTR [rcx+0x18],r10
   140006576:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000657b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140006580:	add    rcx,0x40
   140006584:	movnti QWORD PTR [rcx-0x20],r9
   140006589:	movnti QWORD PTR [rcx-0x18],r10
   14000658e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140006593:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140006598:	dec    eax
   14000659a:	movnti QWORD PTR [rcx-0x10],r9
   14000659f:	movnti QWORD PTR [rcx-0x8],r10
   1400065a4:	jne    0x140006550
   1400065a6:	sub    r8,0x1000
   1400065ad:	cmp    r8,0x1000
   1400065b4:	jae    0x14000652b
   1400065ba:	lock or BYTE PTR [rsp],0x0
   1400065bf:	jmp    0x14000647d
   1400065c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400065d0:	data16 data16 xchg ax,ax
   1400065d4:	data16 data16 xchg ax,ax
   1400065d8:	xchg   ax,ax
   1400065da:	add    rcx,r8
   1400065dd:	cmp    r8,0x8
   1400065e1:	jb     0x140006644
   1400065e3:	test   cl,0x7
   1400065e6:	je     0x14000661e
   1400065e8:	test   cl,0x1
   1400065eb:	je     0x1400065f8
   1400065ed:	dec    rcx
   1400065f0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400065f3:	dec    r8
   1400065f6:	mov    BYTE PTR [rcx],al
   1400065f8:	test   cl,0x2
   1400065fb:	je     0x14000660c
   1400065fd:	sub    rcx,0x2
   140006601:	mov    ax,WORD PTR [rdx+rcx*1]
   140006605:	sub    r8,0x2
   140006609:	mov    WORD PTR [rcx],ax
   14000660c:	test   cl,0x4
   14000660f:	je     0x14000661e
   140006611:	sub    rcx,0x4
   140006615:	mov    eax,DWORD PTR [rdx+rcx*1]
   140006618:	sub    r8,0x4
   14000661c:	mov    DWORD PTR [rcx],eax
   14000661e:	mov    r9,r8
   140006621:	shr    r9,0x5
   140006625:	jne    0x140006677
   140006627:	mov    r9,r8
   14000662a:	shr    r9,0x3
   14000662e:	je     0x140006644
   140006630:	sub    rcx,0x8
   140006634:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006638:	dec    r9
   14000663b:	mov    QWORD PTR [rcx],rax
   14000663e:	jne    0x140006630
   140006640:	and    r8,0x7
   140006644:	test   r8,r8
   140006647:	jne    0x140006650
   140006649:	mov    rax,r11
   14000664c:	ret    
   14000664d:	nop    DWORD PTR [rax]
   140006650:	dec    rcx
   140006653:	mov    al,BYTE PTR [rdx+rcx*1]
   140006656:	dec    r8
   140006659:	mov    BYTE PTR [rcx],al
   14000665b:	jne    0x140006650
   14000665d:	mov    rax,r11
   140006660:	ret    
   140006661:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006670:	data16 data16 xchg ax,ax
   140006674:	data16 xchg ax,ax
   140006677:	cmp    r9,0x2000
   14000667e:	jae    0x1400066c2
   140006680:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140006685:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000668a:	sub    rcx,0x20
   14000668e:	mov    QWORD PTR [rcx+0x18],rax
   140006692:	mov    QWORD PTR [rcx+0x10],r10
   140006696:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000669b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000669f:	dec    r9
   1400066a2:	mov    QWORD PTR [rcx+0x8],rax
   1400066a6:	mov    QWORD PTR [rcx],r10
   1400066a9:	jne    0x140006680
   1400066ab:	and    r8,0x1f
   1400066af:	jmp    0x140006627
   1400066b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400066c0:	xchg   ax,ax
   1400066c2:	cmp    rdx,0xfffffffffffff000
   1400066c9:	ja     0x140006680
   1400066cb:	mov    eax,0x20
   1400066d0:	sub    rcx,0x80
   1400066d7:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400066db:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400066e0:	dec    eax
   1400066e2:	jne    0x1400066d0
   1400066e4:	add    rcx,0x1000
   1400066eb:	mov    eax,0x40
   1400066f0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   1400066f5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400066fa:	movnti QWORD PTR [rcx-0x8],r9
   1400066ff:	movnti QWORD PTR [rcx-0x10],r10
   140006704:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140006709:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000670e:	movnti QWORD PTR [rcx-0x18],r9
   140006713:	movnti QWORD PTR [rcx-0x20],r10
   140006718:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000671d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140006722:	sub    rcx,0x40
   140006726:	movnti QWORD PTR [rcx+0x18],r9
   14000672b:	movnti QWORD PTR [rcx+0x10],r10
   140006730:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140006735:	mov    r10,QWORD PTR [rdx+rcx*1]
   140006739:	dec    eax
   14000673b:	movnti QWORD PTR [rcx+0x8],r9
   140006740:	movnti QWORD PTR [rcx],r10
   140006744:	jne    0x1400066f0
   140006746:	sub    r8,0x1000
   14000674d:	cmp    r8,0x1000
   140006754:	jae    0x1400066cb
   14000675a:	lock or BYTE PTR [rsp],0x0
   14000675f:	jmp    0x14000661e
   140006764:	mov    QWORD PTR [rsp+0x8],rbx
   140006769:	mov    QWORD PTR [rsp+0x10],rbp
   14000676e:	push   rdi
   14000676f:	sub    rsp,0x20
   140006773:	test   ecx,ecx
   140006775:	js     0x1400067ea
   140006777:	cmp    ecx,DWORD PTR [rip+0x8ee7]        # 0x14000f664
   14000677d:	jae    0x1400067ea
   14000677f:	movsxd rbx,ecx
   140006782:	lea    rbp,[rip+0x8ef7]        # 0x14000f680
   140006789:	mov    rdi,rbx
   14000678c:	and    ebx,0x1f
   14000678f:	sar    rdi,0x5
   140006793:	imul   rbx,rbx,0x58
   140006797:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000679c:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400067a1:	je     0x1400067ea
   1400067a3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400067a8:	je     0x1400067ea
   1400067aa:	cmp    DWORD PTR [rip+0x5c4f],0x1        # 0x14000c400
   1400067b1:	jne    0x1400067dc
   1400067b3:	test   ecx,ecx
   1400067b5:	je     0x1400067cf
   1400067b7:	sub    ecx,0x1
   1400067ba:	je     0x1400067c8
   1400067bc:	cmp    ecx,0x1
   1400067bf:	jne    0x1400067dc
   1400067c1:	mov    ecx,0xfffffff4
   1400067c6:	jmp    0x1400067d4
   1400067c8:	mov    ecx,0xfffffff5
   1400067cd:	jmp    0x1400067d4
   1400067cf:	mov    ecx,0xfffffff6
   1400067d4:	xor    edx,edx
   1400067d6:	call   QWORD PTR [rip+0x2894]        # 0x140009070
   1400067dc:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400067e1:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400067e6:	xor    eax,eax
   1400067e8:	jmp    0x140006800
   1400067ea:	call   0x140002088
   1400067ef:	mov    DWORD PTR [rax],0x9
   1400067f5:	call   0x1400020a8
   1400067fa:	and    DWORD PTR [rax],0x0
   1400067fd:	or     eax,0xffffffff
   140006800:	mov    rbx,QWORD PTR [rsp+0x30]
   140006805:	mov    rbp,QWORD PTR [rsp+0x38]
   14000680a:	add    rsp,0x20
   14000680e:	pop    rdi
   14000680f:	ret    
   140006810:	sub    rsp,0x38
   140006814:	cmp    ecx,0xfffffffe
   140006817:	jne    0x14000682e
   140006819:	call   0x1400020a8
   14000681e:	and    DWORD PTR [rax],0x0
   140006821:	call   0x140002088
   140006826:	mov    DWORD PTR [rax],0x9
   14000682c:	jmp    0x14000688b
   14000682e:	test   ecx,ecx
   140006830:	js     0x140006863
   140006832:	cmp    ecx,DWORD PTR [rip+0x8e2c]        # 0x14000f664
   140006838:	jae    0x140006863
   14000683a:	movsxd rdx,ecx
   14000683d:	lea    rcx,[rip+0x8e3c]        # 0x14000f680
   140006844:	mov    rax,rdx
   140006847:	and    edx,0x1f
   14000684a:	sar    rax,0x5
   14000684e:	imul   rdx,rdx,0x58
   140006852:	mov    rax,QWORD PTR [rcx+rax*8]
   140006856:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000685b:	je     0x140006863
   14000685d:	mov    rax,QWORD PTR [rax+rdx*1]
   140006861:	jmp    0x14000688f
   140006863:	call   0x1400020a8
   140006868:	and    DWORD PTR [rax],0x0
   14000686b:	call   0x140002088
   140006870:	and    QWORD PTR [rsp+0x20],0x0
   140006876:	xor    r9d,r9d
   140006879:	xor    r8d,r8d
   14000687c:	xor    edx,edx
   14000687e:	xor    ecx,ecx
   140006880:	mov    DWORD PTR [rax],0x9
   140006886:	call   0x140001fb8
   14000688b:	or     rax,0xffffffffffffffff
   14000688f:	add    rsp,0x38
   140006893:	ret    
   140006894:	mov    rax,rsp
   140006897:	mov    QWORD PTR [rax+0x8],rbx
   14000689b:	mov    QWORD PTR [rax+0x10],rsi
   14000689f:	mov    QWORD PTR [rax+0x18],rdi
   1400068a3:	mov    QWORD PTR [rax+0x20],r12
   1400068a7:	push   r13
   1400068a9:	sub    rsp,0x20
   1400068ad:	movsxd rbx,ecx
   1400068b0:	mov    r12,rbx
   1400068b3:	sar    r12,0x5
   1400068b7:	lea    r13,[rip+0x8dc2]        # 0x14000f680
   1400068be:	and    ebx,0x1f
   1400068c1:	imul   rbx,rbx,0x58
   1400068c5:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   1400068ca:	mov    edi,0x1
   1400068cf:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400068d4:	jne    0x140006909
   1400068d6:	lea    ecx,[rdi+0x9]
   1400068d9:	call   0x140005950
   1400068de:	nop
   1400068df:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400068e4:	jne    0x1400068ff
   1400068e6:	lea    rcx,[rbx+rsi*1+0x10]
   1400068eb:	mov    edx,0xfa0
   1400068f0:	call   0x140005e7c
   1400068f5:	neg    eax
   1400068f7:	sbb    edx,edx
   1400068f9:	and    edi,edx
   1400068fb:	inc    DWORD PTR [rbx+rsi*1+0xc]
   1400068ff:	mov    ecx,0xa
   140006904:	call   0x140005850
   140006909:	test   edi,edi
   14000690b:	je     0x14000691d
   14000690d:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   140006912:	lea    rcx,[rcx+rbx*1+0x10]
   140006917:	call   QWORD PTR [rip+0x27a3]        # 0x1400090c0
   14000691d:	mov    eax,edi
   14000691f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006924:	mov    rsi,QWORD PTR [rsp+0x38]
   140006929:	mov    rdi,QWORD PTR [rsp+0x40]
   14000692e:	mov    r12,QWORD PTR [rsp+0x48]
   140006933:	add    rsp,0x20
   140006937:	pop    r13
   140006939:	ret    
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	movsxd rdx,ecx
   14000693f:	lea    rcx,[rip+0x8d3a]        # 0x14000f680
   140006946:	mov    rax,rdx
   140006949:	and    edx,0x1f
   14000694c:	sar    rax,0x5
   140006950:	imul   rdx,rdx,0x58
   140006954:	mov    rax,QWORD PTR [rcx+rax*8]
   140006958:	lea    rcx,[rax+rdx*1+0x10]
   14000695d:	rex.W jmp QWORD PTR [rip+0x2754]        # 0x1400090b8
   140006964:	sub    rsp,0x68
   140006968:	mov    rax,QWORD PTR [rip+0x5a79]        # 0x14000c3e8
   14000696f:	xor    rax,rsp
   140006972:	mov    QWORD PTR [rsp+0x50],rax
   140006977:	cmp    DWORD PTR [rip+0x6b22],0x0        # 0x14000d4a0
   14000697e:	mov    WORD PTR [rsp+0x40],cx
   140006983:	je     0x1400069eb
   140006985:	mov    rcx,QWORD PTR [rip+0x6d34]        # 0x14000d6c0
   14000698c:	cmp    rcx,0xfffffffffffffffe
   140006990:	jne    0x14000699e
   140006992:	call   0x140007e2c
   140006997:	mov    rcx,QWORD PTR [rip+0x6d22]        # 0x14000d6c0
   14000699e:	cmp    rcx,0xffffffffffffffff
   1400069a2:	je     0x140006a61
   1400069a8:	and    QWORD PTR [rsp+0x20],0x0
   1400069ae:	lea    r9,[rsp+0x44]
   1400069b3:	lea    rdx,[rsp+0x40]
   1400069b8:	mov    r8d,0x1
   1400069be:	call   QWORD PTR [rip+0x2694]        # 0x140009058
   1400069c4:	test   eax,eax
   1400069c6:	jne    0x140006a55
   1400069cc:	cmp    DWORD PTR [rip+0x6acd],0x2        # 0x14000d4a0
   1400069d3:	jne    0x140006a61
   1400069d9:	call   QWORD PTR [rip+0x2711]        # 0x1400090f0
   1400069df:	cmp    eax,0x78
   1400069e2:	jne    0x140006a61
   1400069e4:	and    DWORD PTR [rip+0x6ab5],0x0        # 0x14000d4a0
   1400069eb:	call   QWORD PTR [rip+0x266f]        # 0x140009060
   1400069f1:	and    QWORD PTR [rsp+0x38],0x0
   1400069f7:	and    QWORD PTR [rsp+0x30],0x0
   1400069fd:	mov    ecx,eax
   1400069ff:	lea    rax,[rsp+0x48]
   140006a04:	lea    r8,[rsp+0x40]
   140006a09:	mov    r9d,0x1
   140006a0f:	xor    edx,edx
   140006a11:	mov    DWORD PTR [rsp+0x28],0x5
   140006a19:	mov    QWORD PTR [rsp+0x20],rax
   140006a1e:	call   QWORD PTR [rip+0x27bc]        # 0x1400091e0
   140006a24:	mov    rcx,QWORD PTR [rip+0x6c95]        # 0x14000d6c0
   140006a2b:	cmp    rcx,0xffffffffffffffff
   140006a2f:	je     0x140006a61
   140006a31:	and    QWORD PTR [rsp+0x20],0x0
   140006a37:	lea    r9,[rsp+0x44]
   140006a3c:	lea    rdx,[rsp+0x48]
   140006a41:	mov    r8d,eax
   140006a44:	call   QWORD PTR [rip+0x261e]        # 0x140009068
   140006a4a:	test   eax,eax
   140006a4c:	je     0x140006a61
   140006a4e:	mov    ax,WORD PTR [rsp+0x40]
   140006a53:	jmp    0x140006a66
   140006a55:	mov    DWORD PTR [rip+0x6a41],0x1        # 0x14000d4a0
   140006a5f:	jmp    0x140006a4e
   140006a61:	mov    eax,0xffff
   140006a66:	mov    rcx,QWORD PTR [rsp+0x50]
   140006a6b:	xor    rcx,rsp
   140006a6e:	call   0x140001ad0
   140006a73:	add    rsp,0x68
   140006a77:	ret    
   140006a78:	int3   
   140006a79:	int3   
   140006a7a:	int3   
   140006a7b:	int3   
   140006a7c:	int3   
   140006a7d:	int3   
   140006a7e:	int3   
   140006a7f:	int3   
   140006a80:	mov    QWORD PTR [rsp+0x8],rbx
   140006a85:	mov    QWORD PTR [rsp+0x10],rsi
   140006a8a:	push   r12
   140006a8c:	sub    rsp,0x30
   140006a90:	xor    esi,esi
   140006a92:	lea    ecx,[rsi+0x1]
   140006a95:	call   0x140005950
   140006a9a:	nop
   140006a9b:	lea    ebx,[rsi+0x3]
   140006a9e:	mov    DWORD PTR [rsp+0x20],ebx
   140006aa2:	cmp    ebx,DWORD PTR [rip+0x8bb8]        # 0x14000f660
   140006aa8:	jge    0x140006b13
   140006aaa:	movsxd r12,ebx
   140006aad:	mov    rax,QWORD PTR [rip+0x7b8c]        # 0x14000e640
   140006ab4:	cmp    QWORD PTR [rax+r12*8],0x0
   140006ab9:	je     0x140006b0b
   140006abb:	mov    rcx,QWORD PTR [rax+r12*8]
   140006abf:	test   BYTE PTR [rcx+0x18],0x83
   140006ac3:	je     0x140006ad5
   140006ac5:	call   0x140007f30
   140006aca:	cmp    eax,0xffffffff
   140006acd:	je     0x140006ad5
   140006acf:	inc    esi
   140006ad1:	mov    DWORD PTR [rsp+0x24],esi
   140006ad5:	cmp    ebx,0x14
   140006ad8:	jl     0x140006b0b
   140006ada:	mov    rax,QWORD PTR [rip+0x7b5f]        # 0x14000e640
   140006ae1:	mov    rcx,QWORD PTR [rax+r12*8]
   140006ae5:	add    rcx,0x30
   140006ae9:	call   QWORD PTR [rip+0x2711]        # 0x140009200
   140006aef:	mov    rcx,QWORD PTR [rip+0x7b4a]        # 0x14000e640
   140006af6:	mov    rcx,QWORD PTR [rcx+r12*8]
   140006afa:	call   0x140005240
   140006aff:	mov    r11,QWORD PTR [rip+0x7b3a]        # 0x14000e640
   140006b06:	and    QWORD PTR [r11+r12*8],0x0
   140006b0b:	inc    ebx
   140006b0d:	mov    DWORD PTR [rsp+0x20],ebx
   140006b11:	jmp    0x140006aa2
   140006b13:	mov    ecx,0x1
   140006b18:	call   0x140005850
   140006b1d:	mov    eax,esi
   140006b1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140006b24:	mov    rsi,QWORD PTR [rsp+0x48]
   140006b29:	add    rsp,0x30
   140006b2d:	pop    r12
   140006b2f:	ret    
   140006b30:	mov    QWORD PTR [rsp+0x8],rbx
   140006b35:	mov    QWORD PTR [rsp+0x10],rsi
   140006b3a:	push   rdi
   140006b3b:	sub    rsp,0x20
   140006b3f:	mov    eax,DWORD PTR [rcx+0x18]
   140006b42:	xor    esi,esi
   140006b44:	mov    rbx,rcx
   140006b47:	and    al,0x3
   140006b49:	cmp    al,0x2
   140006b4b:	jne    0x140006b8c
   140006b4d:	test   DWORD PTR [rcx+0x18],0x108
   140006b54:	je     0x140006b8c
   140006b56:	mov    edi,DWORD PTR [rcx]
   140006b58:	sub    edi,DWORD PTR [rcx+0x10]
   140006b5b:	test   edi,edi
   140006b5d:	jle    0x140006b8c
   140006b5f:	call   0x140004620
   140006b64:	mov    rdx,QWORD PTR [rbx+0x10]
   140006b68:	mov    r8d,edi
   140006b6b:	mov    ecx,eax
   140006b6d:	call   0x140004260
   140006b72:	cmp    eax,edi
   140006b74:	jne    0x140006b85
   140006b76:	mov    eax,DWORD PTR [rbx+0x18]
   140006b79:	test   al,al
   140006b7b:	jns    0x140006b8c
   140006b7d:	and    eax,0xfffffffd
   140006b80:	mov    DWORD PTR [rbx+0x18],eax
   140006b83:	jmp    0x140006b8c
   140006b85:	or     DWORD PTR [rbx+0x18],0x20
   140006b89:	or     esi,0xffffffff
   140006b8c:	mov    rcx,QWORD PTR [rbx+0x10]
   140006b90:	and    DWORD PTR [rbx+0x8],0x0
   140006b94:	mov    eax,esi
   140006b96:	mov    rsi,QWORD PTR [rsp+0x38]
   140006b9b:	mov    QWORD PTR [rbx],rcx
   140006b9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ba3:	add    rsp,0x20
   140006ba7:	pop    rdi
   140006ba8:	ret    
   140006ba9:	int3   
   140006baa:	int3   
   140006bab:	int3   
   140006bac:	rex push rbx
   140006bae:	sub    rsp,0x20
   140006bb2:	mov    rbx,rcx
   140006bb5:	test   rcx,rcx
   140006bb8:	jne    0x140006bc1
   140006bba:	call   0x140006bf4
   140006bbf:	jmp    0x140006bed
   140006bc1:	call   0x140006b30
   140006bc6:	test   eax,eax
   140006bc8:	je     0x140006bcf
   140006bca:	or     eax,0xffffffff
   140006bcd:	jmp    0x140006bed
   140006bcf:	bt     DWORD PTR [rbx+0x18],0xe
   140006bd4:	jae    0x140006beb
   140006bd6:	mov    rcx,rbx
   140006bd9:	call   0x140004620
   140006bde:	mov    ecx,eax
   140006be0:	call   0x140007fa8
   140006be5:	neg    eax
   140006be7:	sbb    eax,eax
   140006be9:	jmp    0x140006bed
   140006beb:	xor    eax,eax
   140006bed:	add    rsp,0x20
   140006bf1:	pop    rbx
   140006bf2:	ret    
   140006bf3:	int3   
   140006bf4:	mov    QWORD PTR [rsp+0x8],rsi
   140006bf9:	mov    QWORD PTR [rsp+0x10],rdi
   140006bfe:	mov    QWORD PTR [rsp+0x18],r12
   140006c03:	push   r13
   140006c05:	push   r14
   140006c07:	push   r15
   140006c09:	sub    rsp,0x30
   140006c0d:	mov    r14d,ecx
   140006c10:	xor    r12d,r12d
   140006c13:	xor    esi,esi
   140006c15:	lea    ecx,[rsi+0x1]
   140006c18:	call   0x140005950
   140006c1d:	nop
   140006c1e:	xor    edi,edi
   140006c20:	mov    DWORD PTR [rsp+0x20],edi
   140006c24:	or     r15d,0xffffffff
   140006c28:	cmp    edi,DWORD PTR [rip+0x8a32]        # 0x14000f660
   140006c2e:	jge    0x140006cba
   140006c34:	movsxd r13,edi
   140006c37:	mov    rax,QWORD PTR [rip+0x7a02]        # 0x14000e640
   140006c3e:	cmp    QWORD PTR [rax+r13*8],0x0
   140006c43:	je     0x140006caf
   140006c45:	mov    rdx,QWORD PTR [rax+r13*8]
   140006c49:	test   BYTE PTR [rdx+0x18],0x83
   140006c4d:	je     0x140006caf
   140006c4f:	mov    ecx,edi
   140006c51:	call   0x140004570
   140006c56:	nop
   140006c57:	mov    rax,QWORD PTR [rip+0x79e2]        # 0x14000e640
   140006c5e:	mov    rcx,QWORD PTR [rax+r13*8]
   140006c62:	test   BYTE PTR [rcx+0x18],0x83
   140006c66:	je     0x140006c9d
   140006c68:	cmp    r14d,0x1
   140006c6c:	jne    0x140006c82
   140006c6e:	call   0x140006bac
   140006c73:	cmp    eax,r15d
   140006c76:	je     0x140006c9d
   140006c78:	inc    r12d
   140006c7b:	mov    DWORD PTR [rsp+0x24],r12d
   140006c80:	jmp    0x140006c9d
   140006c82:	test   r14d,r14d
   140006c85:	jne    0x140006c9d
   140006c87:	test   BYTE PTR [rcx+0x18],0x2
   140006c8b:	je     0x140006c9d
   140006c8d:	call   0x140006bac
   140006c92:	cmp    eax,r15d
   140006c95:	cmove  esi,r15d
   140006c99:	mov    DWORD PTR [rsp+0x28],esi
   140006c9d:	mov    rdx,QWORD PTR [rip+0x799c]        # 0x14000e640
   140006ca4:	mov    rdx,QWORD PTR [rdx+r13*8]
   140006ca8:	mov    ecx,edi
   140006caa:	call   0x1400045f8
   140006caf:	inc    edi
   140006cb1:	mov    DWORD PTR [rsp+0x20],edi
   140006cb5:	jmp    0x140006c28
   140006cba:	mov    ecx,0x1
   140006cbf:	call   0x140005850
   140006cc4:	cmp    r14d,0x1
   140006cc8:	cmove  esi,r12d
   140006ccc:	mov    eax,esi
   140006cce:	mov    rsi,QWORD PTR [rsp+0x50]
   140006cd3:	mov    rdi,QWORD PTR [rsp+0x58]
   140006cd8:	mov    r12,QWORD PTR [rsp+0x60]
   140006cdd:	add    rsp,0x30
   140006ce1:	pop    r15
   140006ce3:	pop    r14
   140006ce5:	pop    r13
   140006ce7:	ret    
   140006ce8:	mov    ecx,0x1
   140006ced:	jmp    0x140006bf4
   140006cf2:	int3   
   140006cf3:	int3   
   140006cf4:	rex push rbp
   140006cf6:	push   r12
   140006cf8:	push   r13
   140006cfa:	push   r14
   140006cfc:	push   r15
   140006cfe:	sub    rsp,0x60
   140006d02:	lea    rbp,[rsp+0x40]
   140006d07:	mov    QWORD PTR [rbp+0x50],rbx
   140006d0b:	mov    QWORD PTR [rbp+0x58],rsi
   140006d0f:	mov    QWORD PTR [rbp+0x60],rdi
   140006d13:	mov    rax,QWORD PTR [rip+0x56ce]        # 0x14000c3e8
   140006d1a:	xor    rax,rbp
   140006d1d:	mov    QWORD PTR [rbp+0x18],rax
   140006d21:	mov    r10d,DWORD PTR [rip+0x7820]        # 0x14000e548
   140006d28:	mov    esi,0x2
   140006d2d:	xor    edi,edi
   140006d2f:	mov    r11,r9
   140006d32:	mov    QWORD PTR [rbp+0x10],r9
   140006d36:	mov    DWORD PTR [rbp+0x0],r8d
   140006d3a:	mov    r14d,edx
   140006d3d:	mov    DWORD PTR [rbp+0x8],edx
   140006d40:	mov    rbx,rcx
   140006d43:	lea    r13d,[rsi-0x1]
   140006d47:	cmp    r10d,edi
   140006d4a:	jne    0x140006d9b
   140006d4c:	lea    r8,[rip+0x30e9]        # 0x140009e3c
   140006d53:	mov    r9d,r13d
   140006d56:	mov    edx,0x100
   140006d5b:	xor    ecx,ecx
   140006d5d:	mov    DWORD PTR [rsp+0x28],edi
   140006d61:	mov    QWORD PTR [rsp+0x20],rdi
   140006d66:	call   QWORD PTR [rip+0x22dc]        # 0x140009048
   140006d6c:	cmp    eax,edi
   140006d6e:	je     0x140006d7c
   140006d70:	mov    r10d,r13d
   140006d73:	mov    DWORD PTR [rip+0x77ce],r13d        # 0x14000e548
   140006d7a:	jmp    0x140006d97
   140006d7c:	call   QWORD PTR [rip+0x236e]        # 0x1400090f0
   140006d82:	mov    r10d,DWORD PTR [rip+0x77bf]        # 0x14000e548
   140006d89:	cmp    eax,0x78
   140006d8c:	cmove  r10d,esi
   140006d90:	mov    DWORD PTR [rip+0x77b1],r10d        # 0x14000e548
   140006d97:	mov    r11,QWORD PTR [rbp+0x10]
   140006d9b:	mov    r9d,DWORD PTR [rbp+0x70]
   140006d9f:	cmp    r9d,edi
   140006da2:	jle    0x140006dd9
   140006da4:	mov    ecx,r9d
   140006da7:	mov    rax,r11
   140006daa:	sub    ecx,r13d
   140006dad:	cmp    BYTE PTR [rax],dil
   140006db0:	je     0x140006dbc
   140006db2:	add    rax,r13
   140006db5:	cmp    ecx,edi
   140006db7:	jne    0x140006daa
   140006db9:	or     ecx,0xffffffff
   140006dbc:	mov    eax,r9d
   140006dbf:	sub    eax,ecx
   140006dc1:	sub    eax,r13d
   140006dc4:	cmp    eax,r9d
   140006dc7:	jge    0x140006dd3
   140006dc9:	lea    r9d,[rax+0x1]
   140006dcd:	mov    DWORD PTR [rbp+0x70],r9d
   140006dd1:	jmp    0x140006dd9
   140006dd3:	mov    r9d,eax
   140006dd6:	mov    DWORD PTR [rbp+0x70],eax
   140006dd9:	cmp    r10d,esi
   140006ddc:	je     0x14000703e
   140006de2:	cmp    r10d,edi
   140006de5:	je     0x14000703e
   140006deb:	cmp    r10d,r13d
   140006dee:	jne    0x140007074
   140006df4:	mov    r12d,DWORD PTR [rbp+0x88]
   140006dfb:	mov    esi,edi
   140006dfd:	cmp    r12d,edi
   140006e00:	jne    0x140006e09
   140006e02:	mov    rax,QWORD PTR [rbx]
   140006e05:	mov    r12d,DWORD PTR [rax+0x4]
   140006e09:	neg    DWORD PTR [rbp+0x90]
   140006e0f:	mov    r8,r11
   140006e12:	mov    ecx,r12d
   140006e15:	sbb    edx,edx
   140006e17:	mov    DWORD PTR [rsp+0x28],edi
   140006e1b:	mov    QWORD PTR [rsp+0x20],rdi
   140006e20:	and    edx,0x8
   140006e23:	add    edx,r13d
   140006e26:	call   QWORD PTR [rip+0x225c]        # 0x140009088
   140006e2c:	movsxd r15,eax
   140006e2f:	cmp    r15d,edi
   140006e32:	je     0x140007074
   140006e38:	movabs rbx,0xffffffffffffff0
   140006e42:	mov    r14d,0xdddd
   140006e48:	mov    r13d,0x400
   140006e4e:	jle    0x140006eab
   140006e50:	xor    edx,edx
   140006e52:	lea    rax,[rdx-0x20]
   140006e56:	div    r15
   140006e59:	cmp    rax,0x2
   140006e5d:	jb     0x140006eab
   140006e5f:	lea    rcx,[r15+r15*1+0x10]
   140006e64:	cmp    rcx,r13
   140006e67:	ja     0x140006e97
   140006e69:	lea    rax,[rcx+0xf]
   140006e6d:	cmp    rax,rcx
   140006e70:	ja     0x140006e75
   140006e72:	mov    rax,rbx
   140006e75:	and    rax,0xfffffffffffffff0
   140006e79:	call   0x1400089a0
   140006e7e:	sub    rsp,rax
   140006e81:	lea    rdi,[rsp+0x40]
   140006e86:	test   rdi,rdi
   140006e89:	je     0x140007074
   140006e8f:	mov    DWORD PTR [rdi],0xcccc
   140006e95:	jmp    0x140006ea7
   140006e97:	call   0x140007b04
   140006e9c:	mov    rdi,rax
   140006e9f:	test   rax,rax
   140006ea2:	je     0x140006eab
   140006ea4:	mov    DWORD PTR [rax],r14d
   140006ea7:	add    rdi,0x10
   140006eab:	test   rdi,rdi
   140006eae:	je     0x140007074
   140006eb4:	mov    r9d,DWORD PTR [rbp+0x70]
   140006eb8:	mov    r8,QWORD PTR [rbp+0x10]
   140006ebc:	mov    edx,0x1
   140006ec1:	mov    ecx,r12d
   140006ec4:	mov    DWORD PTR [rsp+0x28],r15d
   140006ec9:	mov    QWORD PTR [rsp+0x20],rdi
   140006ece:	call   QWORD PTR [rip+0x21b4]        # 0x140009088
   140006ed4:	xor    ecx,ecx
   140006ed6:	cmp    eax,ecx
   140006ed8:	je     0x140007029
   140006ede:	mov    edx,DWORD PTR [rbp+0x0]
   140006ee1:	mov    DWORD PTR [rsp+0x28],ecx
   140006ee5:	mov    QWORD PTR [rsp+0x20],rcx
   140006eea:	mov    ecx,DWORD PTR [rbp+0x8]
   140006eed:	mov    r9d,r15d
   140006ef0:	mov    r8,rdi
   140006ef3:	call   QWORD PTR [rip+0x214f]        # 0x140009048
   140006ef9:	xor    r8d,r8d
   140006efc:	movsxd rsi,eax
   140006eff:	cmp    esi,r8d
   140006f02:	je     0x140007029
   140006f08:	mov    r10d,DWORD PTR [rbp+0x0]
   140006f0c:	bt     r10d,0xa
   140006f11:	jae    0x140006f4e
   140006f13:	mov    eax,DWORD PTR [rbp+0x80]
   140006f19:	cmp    eax,r8d
   140006f1c:	je     0x140007029
   140006f22:	cmp    esi,eax
   140006f24:	jg     0x140007029
   140006f2a:	mov    ecx,DWORD PTR [rbp+0x8]
   140006f2d:	mov    DWORD PTR [rsp+0x28],eax
   140006f31:	mov    rax,QWORD PTR [rbp+0x78]
   140006f35:	mov    r9d,r15d
   140006f38:	mov    r8,rdi
   140006f3b:	mov    edx,r10d
   140006f3e:	mov    QWORD PTR [rsp+0x20],rax
   140006f43:	call   QWORD PTR [rip+0x20ff]        # 0x140009048
   140006f49:	jmp    0x140007029
   140006f4e:	cmp    esi,r8d
   140006f51:	jle    0x140006fb3
   140006f53:	xor    edx,edx
   140006f55:	lea    rax,[rdx-0x20]
   140006f59:	div    rsi
   140006f5c:	cmp    rax,0x2
   140006f60:	jb     0x140006fb3
   140006f62:	lea    rcx,[rsi+rsi*1+0x10]
   140006f67:	cmp    rcx,r13
   140006f6a:	ja     0x140006f96
   140006f6c:	lea    rax,[rcx+0xf]
   140006f70:	cmp    rax,rcx
   140006f73:	ja     0x140006f78
   140006f75:	mov    rax,rbx
   140006f78:	and    rax,0xfffffffffffffff0
   140006f7c:	call   0x1400089a0
   140006f81:	sub    rsp,rax
   140006f84:	lea    rbx,[rsp+0x40]
   140006f89:	cmp    rbx,r8
   140006f8c:	je     0x140006fad
   140006f8e:	mov    DWORD PTR [rbx],0xcccc
   140006f94:	jmp    0x140006fa9
   140006f96:	call   0x140007b04
   140006f9b:	xor    r8d,r8d
   140006f9e:	mov    rbx,rax
   140006fa1:	cmp    rax,r8
   140006fa4:	je     0x140006fad
   140006fa6:	mov    DWORD PTR [rax],r14d
   140006fa9:	add    rbx,0x10
   140006fad:	mov    r10d,DWORD PTR [rbp+0x0]
   140006fb1:	jmp    0x140006fb6
   140006fb3:	mov    rbx,r8
   140006fb6:	cmp    rbx,r8
   140006fb9:	je     0x140007029
   140006fbb:	mov    ecx,DWORD PTR [rbp+0x8]
   140006fbe:	mov    r9d,r15d
   140006fc1:	mov    r8,rdi
   140006fc4:	mov    edx,r10d
   140006fc7:	mov    DWORD PTR [rsp+0x28],esi
   140006fcb:	mov    QWORD PTR [rsp+0x20],rbx
   140006fd0:	call   QWORD PTR [rip+0x2072]        # 0x140009048
   140006fd6:	xor    ecx,ecx
   140006fd8:	cmp    eax,ecx
   140006fda:	je     0x14000701b
   140006fdc:	mov    eax,DWORD PTR [rbp+0x80]
   140006fe2:	xor    edx,edx
   140006fe4:	mov    QWORD PTR [rsp+0x38],rcx
   140006fe9:	mov    r9d,esi
   140006fec:	mov    r8,rbx
   140006fef:	mov    QWORD PTR [rsp+0x30],rcx
   140006ff4:	cmp    eax,ecx
   140006ff6:	jne    0x140007003
   140006ff8:	mov    DWORD PTR [rsp+0x28],ecx
   140006ffc:	mov    QWORD PTR [rsp+0x20],rcx
   140007001:	jmp    0x140007010
   140007003:	mov    DWORD PTR [rsp+0x28],eax
   140007007:	mov    rax,QWORD PTR [rbp+0x78]
   14000700b:	mov    QWORD PTR [rsp+0x20],rax
   140007010:	mov    ecx,r12d
   140007013:	call   QWORD PTR [rip+0x21c7]        # 0x1400091e0
   140007019:	mov    esi,eax
   14000701b:	lea    rcx,[rbx-0x10]
   14000701f:	cmp    DWORD PTR [rcx],r14d
   140007022:	jne    0x140007029
   140007024:	call   0x140005240
   140007029:	lea    rcx,[rdi-0x10]
   14000702d:	cmp    DWORD PTR [rcx],r14d
   140007030:	jne    0x140007037
   140007032:	call   0x140005240
   140007037:	mov    eax,esi
   140007039:	jmp    0x14000720b
   14000703e:	mov    rsi,rdi
   140007041:	mov    r12,rdi
   140007044:	cmp    r14d,edi
   140007047:	jne    0x140007054
   140007049:	mov    rax,QWORD PTR [rbx]
   14000704c:	mov    r14d,DWORD PTR [rax+0x14]
   140007050:	mov    DWORD PTR [rbp+0x8],r14d
   140007054:	mov    edi,DWORD PTR [rbp+0x88]
   14000705a:	test   edi,edi
   14000705c:	jne    0x140007064
   14000705e:	mov    rax,QWORD PTR [rbx]
   140007061:	mov    edi,DWORD PTR [rax+0x4]
   140007064:	mov    ecx,r14d
   140007067:	call   0x1400080bc
   14000706c:	mov    r13d,eax
   14000706f:	cmp    eax,0xffffffff
   140007072:	jne    0x14000707b
   140007074:	xor    eax,eax
   140007076:	jmp    0x14000720b
   14000707b:	mov    r15,QWORD PTR [rbp+0x78]
   14000707f:	mov    r8,QWORD PTR [rbp+0x10]
   140007083:	cmp    eax,edi
   140007085:	je     0x1400071c7
   14000708b:	xor    ebx,ebx
   14000708d:	lea    r9,[rbp+0x70]
   140007091:	mov    edx,eax
   140007093:	mov    ecx,edi
   140007095:	mov    DWORD PTR [rsp+0x28],ebx
   140007099:	mov    QWORD PTR [rsp+0x20],rbx
   14000709e:	call   0x140008110
   1400070a3:	mov    rsi,rax
   1400070a6:	cmp    rax,rbx
   1400070a9:	je     0x140007074
   1400070ab:	mov    r9d,DWORD PTR [rbp+0x70]
   1400070af:	mov    edx,DWORD PTR [rbp+0x0]
   1400070b2:	mov    r8,rax
   1400070b5:	mov    ecx,r14d
   1400070b8:	mov    DWORD PTR [rsp+0x28],ebx
   1400070bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400070c1:	call   QWORD PTR [rip+0x1f89]        # 0x140009050
   1400070c7:	movsxd r9,eax
   1400070ca:	mov    DWORD PTR [rbp+0x4],r9d
   1400070ce:	cmp    r9d,ebx
   1400070d1:	jne    0x1400070da
   1400070d3:	mov    edi,ebx
   1400070d5:	jmp    0x1400071ea
   1400070da:	cmp    r9d,ebx
   1400070dd:	mov    r14d,0xdddd
   1400070e3:	jle    0x140007147
   1400070e5:	mov    rcx,r9
   1400070e8:	cmp    r9,0xffffffffffffffe0
   1400070ec:	ja     0x140007147
   1400070ee:	add    rcx,0x10
   1400070f2:	cmp    rcx,0x400
   1400070f9:	ja     0x14000712f
   1400070fb:	lea    rbx,[rcx+0xf]
   1400070ff:	cmp    rbx,rcx
   140007102:	ja     0x14000710e
   140007104:	movabs rbx,0xffffffffffffff0
   14000710e:	and    rbx,0xfffffffffffffff0
   140007112:	mov    rax,rbx
   140007115:	call   0x1400089a0
   14000711a:	sub    rsp,rbx
   14000711d:	lea    rbx,[rsp+0x40]
   140007122:	test   rbx,rbx
   140007125:	je     0x14000714c
   140007127:	mov    DWORD PTR [rbx],0xcccc
   14000712d:	jmp    0x14000713f
   14000712f:	call   0x140007b04
   140007134:	mov    rbx,rax
   140007137:	test   rax,rax
   14000713a:	je     0x140007143
   14000713c:	mov    DWORD PTR [rax],r14d
   14000713f:	add    rbx,0x10
   140007143:	mov    r9d,DWORD PTR [rbp+0x4]
   140007147:	test   rbx,rbx
   14000714a:	jne    0x140007150
   14000714c:	xor    ebx,ebx
   14000714e:	jmp    0x1400070d3
   140007150:	movsxd r8,r9d
   140007153:	xor    edx,edx
   140007155:	mov    rcx,rbx
   140007158:	call   0x140001b00
   14000715d:	mov    r11d,DWORD PTR [rbp+0x4]
   140007161:	mov    r9d,DWORD PTR [rbp+0x70]
   140007165:	mov    edx,DWORD PTR [rbp+0x0]
   140007168:	mov    ecx,DWORD PTR [rbp+0x8]
   14000716b:	mov    DWORD PTR [rsp+0x28],r11d
   140007170:	mov    r8,rsi
   140007173:	mov    QWORD PTR [rsp+0x20],rbx
   140007178:	call   QWORD PTR [rip+0x1ed2]        # 0x140009050
   14000717e:	mov    DWORD PTR [rbp+0x4],eax
   140007181:	test   eax,eax
   140007183:	jne    0x140007189
   140007185:	xor    edi,edi
   140007187:	jmp    0x1400071b7
   140007189:	mov    eax,DWORD PTR [rbp+0x80]
   14000718f:	lea    r9,[rbp+0x4]
   140007193:	mov    r8,rbx
   140007196:	mov    DWORD PTR [rsp+0x28],eax
   14000719a:	mov    edx,edi
   14000719c:	mov    ecx,r13d
   14000719f:	mov    QWORD PTR [rsp+0x20],r15
   1400071a4:	call   0x140008110
   1400071a9:	mov    edi,DWORD PTR [rbp+0x4]
   1400071ac:	mov    r12,rax
   1400071af:	xor    eax,eax
   1400071b1:	cmp    r12,rax
   1400071b4:	cmove  edi,eax
   1400071b7:	lea    rcx,[rbx-0x10]
   1400071bb:	cmp    DWORD PTR [rcx],r14d
   1400071be:	jne    0x1400071e8
   1400071c0:	call   0x140005240
   1400071c5:	jmp    0x1400071e8
   1400071c7:	mov    eax,DWORD PTR [rbp+0x80]
   1400071cd:	mov    r9d,DWORD PTR [rbp+0x70]
   1400071d1:	mov    edx,DWORD PTR [rbp+0x0]
   1400071d4:	mov    DWORD PTR [rsp+0x28],eax
   1400071d8:	mov    ecx,r14d
   1400071db:	mov    QWORD PTR [rsp+0x20],r15
   1400071e0:	call   QWORD PTR [rip+0x1e6a]        # 0x140009050
   1400071e6:	mov    edi,eax
   1400071e8:	xor    ebx,ebx
   1400071ea:	cmp    rsi,rbx
   1400071ed:	je     0x1400071f7
   1400071ef:	mov    rcx,rsi
   1400071f2:	call   0x140005240
   1400071f7:	cmp    r12,rbx
   1400071fa:	je     0x140007209
   1400071fc:	cmp    r15,r12
   1400071ff:	je     0x140007209
   140007201:	mov    rcx,r12
   140007204:	call   0x140005240
   140007209:	mov    eax,edi
   14000720b:	mov    rcx,QWORD PTR [rbp+0x18]
   14000720f:	xor    rcx,rbp
   140007212:	call   0x140001ad0
   140007217:	mov    rbx,QWORD PTR [rbp+0x50]
   14000721b:	mov    rsi,QWORD PTR [rbp+0x58]
   14000721f:	mov    rdi,QWORD PTR [rbp+0x60]
   140007223:	lea    rsp,[rbp+0x20]
   140007227:	pop    r15
   140007229:	pop    r14
   14000722b:	pop    r13
   14000722d:	pop    r12
   14000722f:	pop    rbp
   140007230:	ret    
   140007231:	int3   
   140007232:	int3   
   140007233:	int3   
   140007234:	mov    QWORD PTR [rsp+0x8],rbx
   140007239:	mov    QWORD PTR [rsp+0x10],rsi
   14000723e:	push   rdi
   14000723f:	sub    rsp,0x70
   140007243:	mov    esi,edx
   140007245:	mov    rdx,rcx
   140007248:	lea    rcx,[rsp+0x50]
   14000724d:	mov    rbx,r9
   140007250:	mov    edi,r8d
   140007253:	call   0x140001ddc
   140007258:	mov    eax,DWORD PTR [rsp+0xb8]
   14000725f:	mov    r11d,DWORD PTR [rsp+0xc0]
   140007267:	lea    rcx,[rsp+0x50]
   14000726c:	mov    DWORD PTR [rsp+0x40],r11d
   140007271:	mov    DWORD PTR [rsp+0x38],eax
   140007275:	mov    eax,DWORD PTR [rsp+0xb0]
   14000727c:	mov    DWORD PTR [rsp+0x30],eax
   140007280:	mov    rax,QWORD PTR [rsp+0xa8]
   140007288:	mov    r9,rbx
   14000728b:	mov    QWORD PTR [rsp+0x28],rax
   140007290:	mov    eax,DWORD PTR [rsp+0xa0]
   140007297:	mov    r8d,edi
   14000729a:	mov    edx,esi
   14000729c:	mov    DWORD PTR [rsp+0x20],eax
   1400072a0:	call   0x140006cf4
   1400072a5:	cmp    BYTE PTR [rsp+0x68],0x0
   1400072aa:	je     0x1400072b8
   1400072ac:	mov    rcx,QWORD PTR [rsp+0x60]
   1400072b1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400072b8:	lea    r11,[rsp+0x70]
   1400072bd:	mov    rbx,QWORD PTR [r11+0x10]
   1400072c1:	mov    rsi,QWORD PTR [r11+0x18]
   1400072c5:	mov    rsp,r11
   1400072c8:	pop    rdi
   1400072c9:	ret    
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	mov    DWORD PTR [rsp+0x20],r9d
   1400072d1:	push   rbp
   1400072d2:	push   r12
   1400072d4:	push   r13
   1400072d6:	push   r14
   1400072d8:	push   r15
   1400072da:	sub    rsp,0x40
   1400072de:	lea    rbp,[rsp+0x30]
   1400072e3:	mov    QWORD PTR [rbp+0x40],rbx
   1400072e7:	mov    QWORD PTR [rbp+0x48],rsi
   1400072eb:	mov    QWORD PTR [rbp+0x50],rdi
   1400072ef:	mov    rax,QWORD PTR [rip+0x50f2]        # 0x14000c3e8
   1400072f6:	xor    rax,rbp
   1400072f9:	mov    QWORD PTR [rbp+0x8],rax
   1400072fd:	mov    r9d,DWORD PTR [rip+0x7248]        # 0x14000e54c
   140007304:	mov    edi,0x1
   140007309:	xor    ebx,ebx
   14000730b:	mov    r14,r8
   14000730e:	mov    r15d,edx
   140007311:	mov    r13,rcx
   140007314:	lea    esi,[rdi+0x1]
   140007317:	cmp    r9d,ebx
   14000731a:	jne    0x140007359
   14000731c:	lea    r9,[rbp+0x0]
   140007320:	lea    rdx,[rip+0x2b15]        # 0x140009e3c
   140007327:	mov    r8d,edi
   14000732a:	mov    ecx,edi
   14000732c:	call   QWORD PTR [rip+0x1d06]        # 0x140009038
   140007332:	cmp    eax,ebx
   140007334:	je     0x14000733e
   140007336:	mov    DWORD PTR [rip+0x7210],edi        # 0x14000e54c
   14000733c:	jmp    0x140007374
   14000733e:	call   QWORD PTR [rip+0x1dac]        # 0x1400090f0
   140007344:	mov    r9d,DWORD PTR [rip+0x7201]        # 0x14000e54c
   14000734b:	cmp    eax,0x78
   14000734e:	cmove  r9d,esi
   140007352:	mov    DWORD PTR [rip+0x71f3],r9d        # 0x14000e54c
   140007359:	cmp    r9d,esi
   14000735c:	je     0x140007488
   140007362:	cmp    r9d,ebx
   140007365:	je     0x140007488
   14000736b:	cmp    r9d,edi
   14000736e:	jne    0x1400074b7
   140007374:	mov    esi,DWORD PTR [rbp+0x68]
   140007377:	cmp    esi,ebx
   140007379:	jne    0x140007382
   14000737b:	mov    rax,QWORD PTR [r13+0x0]
   14000737f:	mov    esi,DWORD PTR [rax+0x4]
   140007382:	neg    DWORD PTR [rbp+0x78]
   140007385:	mov    r9d,DWORD PTR [rbp+0x58]
   140007389:	mov    r8,r14
   14000738c:	sbb    edx,edx
   14000738e:	mov    ecx,esi
   140007390:	mov    DWORD PTR [rsp+0x28],ebx
   140007394:	and    edx,0x8
   140007397:	mov    QWORD PTR [rsp+0x20],rbx
   14000739c:	add    edx,edi
   14000739e:	call   QWORD PTR [rip+0x1ce4]        # 0x140009088
   1400073a4:	movsxd r12,eax
   1400073a7:	cmp    r12d,ebx
   1400073aa:	je     0x1400074b7
   1400073b0:	mov    r13d,0xdddd
   1400073b6:	jle    0x140007420
   1400073b8:	movabs rax,0x7ffffffffffffff0
   1400073c2:	cmp    r12,rax
   1400073c5:	ja     0x140007420
   1400073c7:	lea    rcx,[r12+r12*1+0x10]
   1400073cc:	cmp    rcx,0x400
   1400073d3:	ja     0x14000740a
   1400073d5:	lea    rax,[rcx+0xf]
   1400073d9:	cmp    rax,rcx
   1400073dc:	ja     0x1400073e8
   1400073de:	movabs rax,0xffffffffffffff0
   1400073e8:	and    rax,0xfffffffffffffff0
   1400073ec:	call   0x1400089a0
   1400073f1:	sub    rsp,rax
   1400073f4:	lea    rdi,[rsp+0x30]
   1400073f9:	cmp    rdi,rbx
   1400073fc:	je     0x1400074b7
   140007402:	mov    DWORD PTR [rdi],0xcccc
   140007408:	jmp    0x14000741a
   14000740a:	call   0x140007b04
   14000740f:	mov    rdi,rax
   140007412:	cmp    rax,rbx
   140007415:	je     0x140007423
   140007417:	mov    DWORD PTR [rax],r13d
   14000741a:	add    rdi,0x10
   14000741e:	jmp    0x140007423
   140007420:	mov    rdi,rbx
   140007423:	cmp    rdi,rbx
   140007426:	je     0x1400074b7
   14000742c:	mov    r8,r12
   14000742f:	xor    edx,edx
   140007431:	mov    rcx,rdi
   140007434:	add    r8,r8
   140007437:	call   0x140001b00
   14000743c:	mov    r9d,DWORD PTR [rbp+0x58]
   140007440:	mov    r8,r14
   140007443:	mov    edx,0x1
   140007448:	mov    ecx,esi
   14000744a:	mov    DWORD PTR [rsp+0x28],r12d
   14000744f:	mov    QWORD PTR [rsp+0x20],rdi
   140007454:	call   QWORD PTR [rip+0x1c2e]        # 0x140009088
   14000745a:	cmp    eax,ebx
   14000745c:	je     0x140007473
   14000745e:	mov    r9,QWORD PTR [rbp+0x60]
   140007462:	mov    r8d,eax
   140007465:	mov    rdx,rdi
   140007468:	mov    ecx,r15d
   14000746b:	call   QWORD PTR [rip+0x1bc7]        # 0x140009038
   140007471:	mov    ebx,eax
   140007473:	lea    rcx,[rdi-0x10]
   140007477:	cmp    DWORD PTR [rcx],r13d
   14000747a:	jne    0x140007481
   14000747c:	call   0x140005240
   140007481:	mov    eax,ebx
   140007483:	jmp    0x140007510
   140007488:	mov    r12d,DWORD PTR [rbp+0x70]
   14000748c:	mov    rdi,rbx
   14000748f:	cmp    r12d,ebx
   140007492:	jne    0x14000749c
   140007494:	mov    rax,QWORD PTR [r13+0x0]
   140007498:	mov    r12d,DWORD PTR [rax+0x14]
   14000749c:	mov    esi,DWORD PTR [rbp+0x68]
   14000749f:	cmp    esi,ebx
   1400074a1:	jne    0x1400074aa
   1400074a3:	mov    rax,QWORD PTR [r13+0x0]
   1400074a7:	mov    esi,DWORD PTR [rax+0x4]
   1400074aa:	mov    ecx,r12d
   1400074ad:	call   0x1400080bc
   1400074b2:	cmp    eax,0xffffffff
   1400074b5:	jne    0x1400074bb
   1400074b7:	xor    eax,eax
   1400074b9:	jmp    0x140007510
   1400074bb:	cmp    eax,esi
   1400074bd:	je     0x1400074e3
   1400074bf:	lea    r9,[rbp+0x58]
   1400074c3:	mov    r8,r14
   1400074c6:	mov    edx,eax
   1400074c8:	mov    ecx,esi
   1400074ca:	mov    DWORD PTR [rsp+0x28],ebx
   1400074ce:	mov    QWORD PTR [rsp+0x20],rbx
   1400074d3:	call   0x140008110
   1400074d8:	mov    rdi,rax
   1400074db:	cmp    rax,rbx
   1400074de:	je     0x1400074b7
   1400074e0:	mov    r14,rax
   1400074e3:	mov    rax,QWORD PTR [rbp+0x60]
   1400074e7:	mov    r9d,DWORD PTR [rbp+0x58]
   1400074eb:	mov    r8,r14
   1400074ee:	mov    edx,r15d
   1400074f1:	mov    ecx,r12d
   1400074f4:	mov    QWORD PTR [rsp+0x20],rax
   1400074f9:	call   QWORD PTR [rip+0x1b41]        # 0x140009040
   1400074ff:	mov    esi,eax
   140007501:	cmp    rdi,rbx
   140007504:	je     0x14000750e
   140007506:	mov    rcx,rdi
   140007509:	call   0x140005240
   14000750e:	mov    eax,esi
   140007510:	mov    rcx,QWORD PTR [rbp+0x8]
   140007514:	xor    rcx,rbp
   140007517:	call   0x140001ad0
   14000751c:	mov    rbx,QWORD PTR [rbp+0x40]
   140007520:	mov    rsi,QWORD PTR [rbp+0x48]
   140007524:	mov    rdi,QWORD PTR [rbp+0x50]
   140007528:	lea    rsp,[rbp+0x10]
   14000752c:	pop    r15
   14000752e:	pop    r14
   140007530:	pop    r13
   140007532:	pop    r12
   140007534:	pop    rbp
   140007535:	ret    
   140007536:	int3   
   140007537:	int3   
   140007538:	mov    QWORD PTR [rsp+0x8],rbx
   14000753d:	mov    QWORD PTR [rsp+0x10],rsi
   140007542:	push   rdi
   140007543:	sub    rsp,0x60
   140007547:	mov    esi,edx
   140007549:	mov    rdx,rcx
   14000754c:	lea    rcx,[rsp+0x40]
   140007551:	mov    ebx,r9d
   140007554:	mov    rdi,r8
   140007557:	call   0x140001ddc
   14000755c:	mov    eax,DWORD PTR [rsp+0xa0]
   140007563:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000756b:	lea    rcx,[rsp+0x40]
   140007570:	mov    DWORD PTR [rsp+0x38],r11d
   140007575:	mov    DWORD PTR [rsp+0x30],eax
   140007579:	mov    eax,DWORD PTR [rsp+0x98]
   140007580:	mov    DWORD PTR [rsp+0x28],eax
   140007584:	mov    rax,QWORD PTR [rsp+0x90]
   14000758c:	mov    r9d,ebx
   14000758f:	mov    r8,rdi
   140007592:	mov    edx,esi
   140007594:	mov    QWORD PTR [rsp+0x20],rax
   140007599:	call   0x1400072cc
   14000759e:	cmp    BYTE PTR [rsp+0x58],0x0
   1400075a3:	je     0x1400075b1
   1400075a5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400075aa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400075b1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400075b6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400075bb:	add    rsp,0x60
   1400075bf:	pop    rdi
   1400075c0:	ret    
   1400075c1:	int3   
   1400075c2:	int3   
   1400075c3:	int3   
   1400075c4:	test   rcx,rcx
   1400075c7:	je     0x1400077ad
   1400075cd:	push   rbx
   1400075ce:	sub    rsp,0x20
   1400075d2:	mov    rbx,rcx
   1400075d5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400075d9:	call   0x140005240
   1400075de:	mov    rcx,QWORD PTR [rbx+0x10]
   1400075e2:	call   0x140005240
   1400075e7:	mov    rcx,QWORD PTR [rbx+0x18]
   1400075eb:	call   0x140005240
   1400075f0:	mov    rcx,QWORD PTR [rbx+0x20]
   1400075f4:	call   0x140005240
   1400075f9:	mov    rcx,QWORD PTR [rbx+0x28]
   1400075fd:	call   0x140005240
   140007602:	mov    rcx,QWORD PTR [rbx+0x30]
   140007606:	call   0x140005240
   14000760b:	mov    rcx,QWORD PTR [rbx]
   14000760e:	call   0x140005240
   140007613:	mov    rcx,QWORD PTR [rbx+0x40]
   140007617:	call   0x140005240
   14000761c:	mov    rcx,QWORD PTR [rbx+0x48]
   140007620:	call   0x140005240
   140007625:	mov    rcx,QWORD PTR [rbx+0x50]
   140007629:	call   0x140005240
   14000762e:	mov    rcx,QWORD PTR [rbx+0x58]
   140007632:	call   0x140005240
   140007637:	mov    rcx,QWORD PTR [rbx+0x60]
   14000763b:	call   0x140005240
   140007640:	mov    rcx,QWORD PTR [rbx+0x68]
   140007644:	call   0x140005240
   140007649:	mov    rcx,QWORD PTR [rbx+0x38]
   14000764d:	call   0x140005240
   140007652:	mov    rcx,QWORD PTR [rbx+0x70]
   140007656:	call   0x140005240
   14000765b:	mov    rcx,QWORD PTR [rbx+0x78]
   14000765f:	call   0x140005240
   140007664:	mov    rcx,QWORD PTR [rbx+0x80]
   14000766b:	call   0x140005240
   140007670:	mov    rcx,QWORD PTR [rbx+0x88]
   140007677:	call   0x140005240
   14000767c:	mov    rcx,QWORD PTR [rbx+0x90]
   140007683:	call   0x140005240
   140007688:	mov    rcx,QWORD PTR [rbx+0x98]
   14000768f:	call   0x140005240
   140007694:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000769b:	call   0x140005240
   1400076a0:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400076a7:	call   0x140005240
   1400076ac:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400076b3:	call   0x140005240
   1400076b8:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400076bf:	call   0x140005240
   1400076c4:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400076cb:	call   0x140005240
   1400076d0:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400076d7:	call   0x140005240
   1400076dc:	mov    rcx,QWORD PTR [rbx+0xd0]
   1400076e3:	call   0x140005240
   1400076e8:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400076ef:	call   0x140005240
   1400076f4:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400076fb:	call   0x140005240
   140007700:	mov    rcx,QWORD PTR [rbx+0xe8]
   140007707:	call   0x140005240
   14000770c:	mov    rcx,QWORD PTR [rbx+0xf0]
   140007713:	call   0x140005240
   140007718:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000771f:	call   0x140005240
   140007724:	mov    rcx,QWORD PTR [rbx+0x100]
   14000772b:	call   0x140005240
   140007730:	mov    rcx,QWORD PTR [rbx+0x108]
   140007737:	call   0x140005240
   14000773c:	mov    rcx,QWORD PTR [rbx+0x110]
   140007743:	call   0x140005240
   140007748:	mov    rcx,QWORD PTR [rbx+0x118]
   14000774f:	call   0x140005240
   140007754:	mov    rcx,QWORD PTR [rbx+0x120]
   14000775b:	call   0x140005240
   140007760:	mov    rcx,QWORD PTR [rbx+0x128]
   140007767:	call   0x140005240
   14000776c:	mov    rcx,QWORD PTR [rbx+0x130]
   140007773:	call   0x140005240
   140007778:	mov    rcx,QWORD PTR [rbx+0x138]
   14000777f:	call   0x140005240
   140007784:	mov    rcx,QWORD PTR [rbx+0x140]
   14000778b:	call   0x140005240
   140007790:	mov    rcx,QWORD PTR [rbx+0x148]
   140007797:	call   0x140005240
   14000779c:	mov    rcx,QWORD PTR [rbx+0x150]
   1400077a3:	call   0x140005240
   1400077a8:	add    rsp,0x20
   1400077ac:	pop    rbx
   1400077ad:	ret    
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	test   rcx,rcx
   1400077b3:	je     0x1400077f7
   1400077b5:	push   rbx
   1400077b6:	sub    rsp,0x20
   1400077ba:	mov    rbx,rcx
   1400077bd:	mov    rcx,QWORD PTR [rcx]
   1400077c0:	cmp    rcx,QWORD PTR [rip+0x5e79]        # 0x14000d640
   1400077c7:	je     0x1400077ce
   1400077c9:	call   0x140005240
   1400077ce:	mov    rcx,QWORD PTR [rbx+0x8]
   1400077d2:	cmp    rcx,QWORD PTR [rip+0x5e6f]        # 0x14000d648
   1400077d9:	je     0x1400077e0
   1400077db:	call   0x140005240
   1400077e0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400077e4:	cmp    rcx,QWORD PTR [rip+0x5e65]        # 0x14000d650
   1400077eb:	je     0x1400077f2
   1400077ed:	call   0x140005240
   1400077f2:	add    rsp,0x20
   1400077f6:	pop    rbx
   1400077f7:	ret    
   1400077f8:	test   rcx,rcx
   1400077fb:	je     0x14000788c
   140007801:	push   rbx
   140007802:	sub    rsp,0x20
   140007806:	mov    rbx,rcx
   140007809:	mov    rcx,QWORD PTR [rcx+0x18]
   14000780d:	cmp    rcx,QWORD PTR [rip+0x5e44]        # 0x14000d658
   140007814:	je     0x14000781b
   140007816:	call   0x140005240
   14000781b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000781f:	cmp    rcx,QWORD PTR [rip+0x5e3a]        # 0x14000d660
   140007826:	je     0x14000782d
   140007828:	call   0x140005240
   14000782d:	mov    rcx,QWORD PTR [rbx+0x28]
   140007831:	cmp    rcx,QWORD PTR [rip+0x5e30]        # 0x14000d668
   140007838:	je     0x14000783f
   14000783a:	call   0x140005240
   14000783f:	mov    rcx,QWORD PTR [rbx+0x30]
   140007843:	cmp    rcx,QWORD PTR [rip+0x5e26]        # 0x14000d670
   14000784a:	je     0x140007851
   14000784c:	call   0x140005240
   140007851:	mov    rcx,QWORD PTR [rbx+0x38]
   140007855:	cmp    rcx,QWORD PTR [rip+0x5e1c]        # 0x14000d678
   14000785c:	je     0x140007863
   14000785e:	call   0x140005240
   140007863:	mov    rcx,QWORD PTR [rbx+0x40]
   140007867:	cmp    rcx,QWORD PTR [rip+0x5e12]        # 0x14000d680
   14000786e:	je     0x140007875
   140007870:	call   0x140005240
   140007875:	mov    rcx,QWORD PTR [rbx+0x48]
   140007879:	cmp    rcx,QWORD PTR [rip+0x5e08]        # 0x14000d688
   140007880:	je     0x140007887
   140007882:	call   0x140005240
   140007887:	add    rsp,0x20
   14000788b:	pop    rbx
   14000788c:	ret    
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	int3   
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	int3   
   140007895:	int3   
   140007896:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400078a0:	sub    rdx,rcx
   1400078a3:	mov    r9,rdx
   1400078a6:	test   cl,0x7
   1400078a9:	je     0x1400078c6
   1400078ab:	mov    al,BYTE PTR [rcx]
   1400078ad:	mov    dl,BYTE PTR [rcx+r9*1]
   1400078b1:	cmp    al,dl
   1400078b3:	jne    0x14000790b
   1400078b5:	inc    rcx
   1400078b8:	test   al,al
   1400078ba:	je     0x140007913
   1400078bc:	test   rcx,0x7
   1400078c3:	jne    0x1400078ab
   1400078c5:	nop
   1400078c6:	movabs r11,0x8101010101010100
   1400078d0:	lea    rdx,[rcx+r9*1]
   1400078d4:	and    dx,0xfff
   1400078d9:	cmp    dx,0xff8
   1400078de:	ja     0x1400078ab
   1400078e0:	mov    rax,QWORD PTR [rcx]
   1400078e3:	mov    rdx,QWORD PTR [rcx+r9*1]
   1400078e7:	cmp    rax,rdx
   1400078ea:	jne    0x1400078ab
   1400078ec:	movabs r10,0x7efefefefefefeff
   1400078f6:	add    r10,rdx
   1400078f9:	xor    rax,0xffffffffffffffff
   1400078fd:	add    rcx,0x8
   140007901:	xor    rax,r10
   140007904:	test   r11,rax
   140007907:	je     0x1400078d0
   140007909:	jmp    0x14000791a
   14000790b:	sbb    rax,rax
   14000790e:	sbb    rax,0xffffffffffffffff
   140007912:	ret    
   140007913:	xor    eax,eax
   140007915:	ret    
   140007916:	data16 data16 xchg ax,ax
   14000791a:	test   dl,dl
   14000791c:	je     0x140007945
   14000791e:	test   dh,dh
   140007920:	je     0x140007945
   140007922:	shr    rdx,0x10
   140007926:	test   dl,dl
   140007928:	je     0x140007945
   14000792a:	test   dh,dh
   14000792c:	je     0x140007945
   14000792e:	shr    rdx,0x10
   140007932:	test   dl,dl
   140007934:	je     0x140007945
   140007936:	test   dh,dh
   140007938:	je     0x140007945
   14000793a:	shr    edx,0x10
   14000793d:	test   dl,dl
   14000793f:	je     0x140007945
   140007941:	test   dh,dh
   140007943:	jne    0x1400078d0
   140007945:	xor    eax,eax
   140007947:	ret    
   140007948:	sbb    rax,rax
   14000794b:	sbb    rax,0xffffffffffffffff
   14000794f:	ret    
   140007950:	int3   
   140007951:	int3   
   140007952:	int3   
   140007953:	int3   
   140007954:	int3   
   140007955:	int3   
   140007956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007960:	sub    rdx,rcx
   140007963:	cmp    r8,0x8
   140007967:	jb     0x14000798b
   140007969:	test   cl,0x7
   14000796c:	je     0x140007982
   14000796e:	xchg   ax,ax
   140007970:	mov    al,BYTE PTR [rcx]
   140007972:	cmp    al,BYTE PTR [rdx+rcx*1]
   140007975:	jne    0x1400079a3
   140007977:	inc    rcx
   14000797a:	dec    r8
   14000797d:	test   cl,0x7
   140007980:	jne    0x140007970
   140007982:	mov    r9,r8
   140007985:	shr    r9,0x3
   140007989:	jne    0x1400079aa
   14000798b:	test   r8,r8
   14000798e:	je     0x14000799f
   140007990:	mov    al,BYTE PTR [rcx]
   140007992:	cmp    al,BYTE PTR [rdx+rcx*1]
   140007995:	jne    0x1400079a3
   140007997:	inc    rcx
   14000799a:	dec    r8
   14000799d:	jne    0x140007990
   14000799f:	xor    rax,rax
   1400079a2:	ret    
   1400079a3:	sbb    eax,eax
   1400079a5:	sbb    eax,0xffffffff
   1400079a8:	ret    
   1400079a9:	nop
   1400079aa:	shr    r9,0x2
   1400079ae:	je     0x1400079e7
   1400079b0:	mov    rax,QWORD PTR [rcx]
   1400079b3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400079b7:	jne    0x140007a14
   1400079b9:	mov    rax,QWORD PTR [rcx+0x8]
   1400079bd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400079c2:	jne    0x140007a10
   1400079c4:	mov    rax,QWORD PTR [rcx+0x10]
   1400079c8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   1400079cd:	jne    0x140007a0c
   1400079cf:	mov    rax,QWORD PTR [rcx+0x18]
   1400079d3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   1400079d8:	jne    0x140007a08
   1400079da:	add    rcx,0x20
   1400079de:	dec    r9
   1400079e1:	jne    0x1400079b0
   1400079e3:	and    r8,0x1f
   1400079e7:	mov    r9,r8
   1400079ea:	shr    r9,0x3
   1400079ee:	je     0x14000798b
   1400079f0:	mov    rax,QWORD PTR [rcx]
   1400079f3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400079f7:	jne    0x140007a14
   1400079f9:	add    rcx,0x8
   1400079fd:	dec    r9
   140007a00:	jne    0x1400079f0
   140007a02:	and    r8,0x7
   140007a06:	jmp    0x14000798b
   140007a08:	add    rcx,0x8
   140007a0c:	add    rcx,0x8
   140007a10:	add    rcx,0x8
   140007a14:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140007a18:	bswap  rax
   140007a1b:	bswap  rcx
   140007a1e:	cmp    rax,rcx
   140007a21:	sbb    eax,eax
   140007a23:	sbb    eax,0xffffffff
   140007a26:	ret    
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	int3   
   140007a2d:	int3   
   140007a2e:	int3   
   140007a2f:	int3   
   140007a30:	int3   
   140007a31:	int3   
   140007a32:	int3   
   140007a33:	int3   
   140007a34:	int3   
   140007a35:	int3   
   140007a36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007a40:	test   r8,r8
   140007a43:	je     0x140007aba
   140007a45:	sub    rdx,rcx
   140007a48:	mov    r9,rdx
   140007a4b:	movabs r11,0x8101010101010100
   140007a55:	test   cl,0x7
   140007a58:	je     0x140007a79
   140007a5a:	mov    al,BYTE PTR [rcx]
   140007a5c:	mov    dl,BYTE PTR [rcx+r9*1]
   140007a60:	inc    rcx
   140007a63:	cmp    al,dl
   140007a65:	jne    0x140007abe
   140007a67:	dec    r8
   140007a6a:	je     0x140007aba
   140007a6c:	test   al,al
   140007a6e:	je     0x140007aba
   140007a70:	test   rcx,0x7
   140007a77:	jne    0x140007a5a
   140007a79:	lea    rdx,[rcx+r9*1]
   140007a7d:	and    dx,0xfff
   140007a82:	cmp    dx,0xff8
   140007a87:	ja     0x140007a5a
   140007a89:	mov    rax,QWORD PTR [rcx]
   140007a8c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140007a90:	cmp    rax,rdx
   140007a93:	jne    0x140007a5a
   140007a95:	add    rcx,0x8
   140007a99:	sub    r8,0x8
   140007a9d:	movabs r10,0x7efefefefefefeff
   140007aa7:	jbe    0x140007aba
   140007aa9:	xor    rax,0xffffffffffffffff
   140007aad:	add    r10,rdx
   140007ab0:	xor    rax,r10
   140007ab3:	test   r11,rax
   140007ab6:	je     0x140007a79
   140007ab8:	jmp    0x140007ac6
   140007aba:	xor    rax,rax
   140007abd:	ret    
   140007abe:	sbb    rax,rax
   140007ac1:	sbb    rax,0xffffffffffffffff
   140007ac5:	ret    
   140007ac6:	test   dl,dl
   140007ac8:	je     0x140007af1
   140007aca:	test   dh,dh
   140007acc:	je     0x140007af1
   140007ace:	shr    rdx,0x10
   140007ad2:	test   dl,dl
   140007ad4:	je     0x140007af1
   140007ad6:	test   dh,dh
   140007ad8:	je     0x140007af1
   140007ada:	shr    rdx,0x10
   140007ade:	test   dl,dl
   140007ae0:	je     0x140007af1
   140007ae2:	test   dh,dh
   140007ae4:	je     0x140007af1
   140007ae6:	shr    edx,0x10
   140007ae9:	test   dl,dl
   140007aeb:	je     0x140007af1
   140007aed:	test   dh,dh
   140007aef:	jne    0x140007a79
   140007af1:	xor    rax,rax
   140007af4:	ret    
   140007af5:	int3   
   140007af6:	int3   
   140007af7:	int3   
   140007af8:	mov    ecx,0x2
   140007afd:	jmp    0x1400022b8
   140007b02:	int3   
   140007b03:	int3   
   140007b04:	mov    QWORD PTR [rsp+0x8],rbx
   140007b09:	mov    QWORD PTR [rsp+0x10],rsi
   140007b0e:	push   rdi
   140007b0f:	sub    rsp,0x20
   140007b13:	mov    rbx,rcx
   140007b16:	cmp    rcx,0xffffffffffffffe0
   140007b1a:	ja     0x140007b98
   140007b1c:	mov    edi,0x1
   140007b21:	test   rcx,rcx
   140007b24:	cmovne rdi,rcx
   140007b28:	mov    rcx,QWORD PTR [rip+0x6701]        # 0x14000e230
   140007b2f:	test   rcx,rcx
   140007b32:	jne    0x140007b54
   140007b34:	call   0x1400028c8
   140007b39:	mov    ecx,0x1e
   140007b3e:	call   0x1400026a0
   140007b43:	mov    ecx,0xff
   140007b48:	call   0x140002324
   140007b4d:	mov    rcx,QWORD PTR [rip+0x66dc]        # 0x14000e230
   140007b54:	mov    r8,rdi
   140007b57:	xor    edx,edx
   140007b59:	call   QWORD PTR [rip+0x14c9]        # 0x140009028
   140007b5f:	mov    rsi,rax
   140007b62:	test   rax,rax
   140007b65:	jne    0x140007b93
   140007b67:	cmp    DWORD PTR [rip+0x6abf],eax        # 0x14000e62c
   140007b6d:	je     0x140007b7d
   140007b6f:	mov    rcx,rbx
   140007b72:	call   0x140005ebc
   140007b77:	test   eax,eax
   140007b79:	je     0x140007b88
   140007b7b:	jmp    0x140007b28
   140007b7d:	call   0x140002088
   140007b82:	mov    DWORD PTR [rax],0xc
   140007b88:	call   0x140002088
   140007b8d:	mov    DWORD PTR [rax],0xc
   140007b93:	mov    rax,rsi
   140007b96:	jmp    0x140007baa
   140007b98:	call   0x140005ebc
   140007b9d:	call   0x140002088
   140007ba2:	mov    DWORD PTR [rax],0xc
   140007ba8:	xor    eax,eax
   140007baa:	mov    rbx,QWORD PTR [rsp+0x30]
   140007baf:	mov    rsi,QWORD PTR [rsp+0x38]
   140007bb4:	add    rsp,0x20
   140007bb8:	pop    rdi
   140007bb9:	ret    
   140007bba:	int3   
   140007bbb:	int3   
   140007bbc:	mov    QWORD PTR [rsp+0x8],rbx
   140007bc1:	push   rdi
   140007bc2:	sub    rsp,0x30
   140007bc6:	mov    rbx,r8
   140007bc9:	mov    rdi,rdx
   140007bcc:	test   rcx,rcx
   140007bcf:	je     0x140007c03
   140007bd1:	xor    edx,edx
   140007bd3:	lea    rax,[rdx-0x20]
   140007bd7:	div    rcx
   140007bda:	cmp    rax,rdi
   140007bdd:	jae    0x140007c03
   140007bdf:	call   0x140002088
   140007be4:	and    QWORD PTR [rsp+0x20],0x0
   140007bea:	xor    r9d,r9d
   140007bed:	xor    r8d,r8d
   140007bf0:	xor    edx,edx
   140007bf2:	xor    ecx,ecx
   140007bf4:	mov    DWORD PTR [rax],0xc
   140007bfa:	call   0x140001fb8
   140007bff:	xor    eax,eax
   140007c01:	jmp    0x140007c60
   140007c03:	imul   rdi,rcx
   140007c07:	mov    eax,0x1
   140007c0c:	test   rdi,rdi
   140007c0f:	cmove  rdi,rax
   140007c13:	xor    eax,eax
   140007c15:	cmp    rdi,0xffffffffffffffe0
   140007c19:	ja     0x140007c33
   140007c1b:	mov    rcx,QWORD PTR [rip+0x660e]        # 0x14000e230
   140007c22:	lea    edx,[rax+0x8]
   140007c25:	mov    r8,rdi
   140007c28:	call   QWORD PTR [rip+0x13fa]        # 0x140009028
   140007c2e:	test   rax,rax
   140007c31:	jne    0x140007c60
   140007c33:	cmp    DWORD PTR [rip+0x69f2],0x0        # 0x14000e62c
   140007c3a:	je     0x140007c55
   140007c3c:	mov    rcx,rdi
   140007c3f:	call   0x140005ebc
   140007c44:	test   eax,eax
   140007c46:	jne    0x140007c13
   140007c48:	test   rbx,rbx
   140007c4b:	je     0x140007bff
   140007c4d:	mov    DWORD PTR [rbx],0xc
   140007c53:	jmp    0x140007bff
   140007c55:	test   rbx,rbx
   140007c58:	je     0x140007c60
   140007c5a:	mov    DWORD PTR [rbx],0xc
   140007c60:	mov    rbx,QWORD PTR [rsp+0x40]
   140007c65:	add    rsp,0x30
   140007c69:	pop    rdi
   140007c6a:	ret    
   140007c6b:	int3   
   140007c6c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c71:	mov    QWORD PTR [rsp+0x10],rsi
   140007c76:	push   rdi
   140007c77:	sub    rsp,0x20
   140007c7b:	mov    rbx,rdx
   140007c7e:	mov    rdi,rcx
   140007c81:	test   rcx,rcx
   140007c84:	jne    0x140007c90
   140007c86:	mov    rcx,rdx
   140007c89:	call   0x140007b04
   140007c8e:	jmp    0x140007cfa
   140007c90:	test   rdx,rdx
   140007c93:	jne    0x140007c9c
   140007c95:	call   0x140005240
   140007c9a:	jmp    0x140007cf8
   140007c9c:	cmp    rdx,0xffffffffffffffe0
   140007ca0:	ja     0x140007ce5
   140007ca2:	mov    rcx,QWORD PTR [rip+0x6587]        # 0x14000e230
   140007ca9:	mov    eax,0x1
   140007cae:	test   rbx,rbx
   140007cb1:	cmove  rbx,rax
   140007cb5:	mov    r8,rdi
   140007cb8:	xor    edx,edx
   140007cba:	mov    r9,rbx
   140007cbd:	call   QWORD PTR [rip+0x135d]        # 0x140009020
   140007cc3:	mov    rsi,rax
   140007cc6:	test   rax,rax
   140007cc9:	jne    0x140007d3a
   140007ccb:	cmp    DWORD PTR [rip+0x695b],eax        # 0x14000e62c
   140007cd1:	je     0x140007d23
   140007cd3:	mov    rcx,rbx
   140007cd6:	call   0x140005ebc
   140007cdb:	test   eax,eax
   140007cdd:	je     0x140007d0a
   140007cdf:	cmp    rbx,0xffffffffffffffe0
   140007ce3:	jbe    0x140007ca2
   140007ce5:	mov    rcx,rbx
   140007ce8:	call   0x140005ebc
   140007ced:	call   0x140002088
   140007cf2:	mov    DWORD PTR [rax],0xc
   140007cf8:	xor    eax,eax
   140007cfa:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cff:	mov    rsi,QWORD PTR [rsp+0x38]
   140007d04:	add    rsp,0x20
   140007d08:	pop    rdi
   140007d09:	ret    
   140007d0a:	call   0x140002088
   140007d0f:	mov    rbx,rax
   140007d12:	call   QWORD PTR [rip+0x13d8]        # 0x1400090f0
   140007d18:	mov    ecx,eax
   140007d1a:	call   0x140002040
   140007d1f:	mov    DWORD PTR [rbx],eax
   140007d21:	jmp    0x140007cf8
   140007d23:	call   0x140002088
   140007d28:	mov    rbx,rax
   140007d2b:	call   QWORD PTR [rip+0x13bf]        # 0x1400090f0
   140007d31:	mov    ecx,eax
   140007d33:	call   0x140002040
   140007d38:	mov    DWORD PTR [rbx],eax
   140007d3a:	mov    rax,rsi
   140007d3d:	jmp    0x140007cfa
   140007d3f:	int3   
   140007d40:	sub    rsp,0x5a8
   140007d47:	test   BYTE PTR [rip+0x5962],0x1        # 0x14000d6b0
   140007d4e:	je     0x140007d5a
   140007d50:	mov    ecx,0xa
   140007d55:	call   0x1400026a0
   140007d5a:	call   0x140005be4
   140007d5f:	test   rax,rax
   140007d62:	je     0x140007d6e
   140007d64:	mov    ecx,0x16
   140007d69:	call   0x140005bf0
   140007d6e:	test   BYTE PTR [rip+0x593b],0x2        # 0x14000d6b0
   140007d75:	je     0x140007dd6
   140007d77:	lea    rcx,[rsp+0xd0]
   140007d7f:	call   QWORD PTR [rip+0x1403]        # 0x140009188
   140007d85:	lea    rcx,[rsp+0x30]
   140007d8a:	xor    edx,edx
   140007d8c:	mov    r8d,0x98
   140007d92:	call   0x140001b00
   140007d97:	mov    rax,QWORD PTR [rsp+0x5a8]
   140007d9f:	xor    ecx,ecx
   140007da1:	mov    QWORD PTR [rsp+0x40],rax
   140007da6:	lea    rax,[rsp+0x30]
   140007dab:	mov    DWORD PTR [rsp+0x30],0x40000015
   140007db3:	mov    QWORD PTR [rsp+0x20],rax
   140007db8:	lea    rax,[rsp+0xd0]
   140007dc0:	mov    QWORD PTR [rsp+0x28],rax
   140007dc5:	call   QWORD PTR [rip+0x139d]        # 0x140009168
   140007dcb:	lea    rcx,[rsp+0x20]
   140007dd0:	call   QWORD PTR [rip+0x138a]        # 0x140009160
   140007dd6:	mov    ecx,0x3
   140007ddb:	call   0x14000260c
   140007de0:	int3   
   140007de1:	int3   
   140007de2:	int3   
   140007de3:	int3   
   140007de4:	sub    rsp,0x38
   140007de8:	test   rcx,rcx
   140007deb:	jne    0x140007e13
   140007ded:	call   0x140002088
   140007df2:	and    QWORD PTR [rsp+0x20],0x0
   140007df8:	xor    r9d,r9d
   140007dfb:	xor    r8d,r8d
   140007dfe:	xor    edx,edx
   140007e00:	xor    ecx,ecx
   140007e02:	mov    DWORD PTR [rax],0x16
   140007e08:	call   0x140001fb8
   140007e0d:	or     rax,0xffffffffffffffff
   140007e11:	jmp    0x140007e25
   140007e13:	mov    r8,rcx
   140007e16:	mov    rcx,QWORD PTR [rip+0x6413]        # 0x14000e230
   140007e1d:	xor    edx,edx
   140007e1f:	call   QWORD PTR [rip+0x11f3]        # 0x140009018
   140007e25:	add    rsp,0x38
   140007e29:	ret    
   140007e2a:	int3   
   140007e2b:	int3   
   140007e2c:	sub    rsp,0x48
   140007e30:	and    QWORD PTR [rsp+0x30],0x0
   140007e36:	and    DWORD PTR [rsp+0x28],0x0
   140007e3b:	mov    r8d,0x3
   140007e41:	lea    rcx,[rip+0x2960]        # 0x14000a7a8
   140007e48:	xor    r9d,r9d
   140007e4b:	mov    edx,0x40000000
   140007e50:	mov    DWORD PTR [rsp+0x20],r8d
   140007e55:	call   QWORD PTR [rip+0x11b5]        # 0x140009010
   140007e5b:	mov    QWORD PTR [rip+0x585e],rax        # 0x14000d6c0
   140007e62:	add    rsp,0x48
   140007e66:	ret    
   140007e67:	int3   
   140007e68:	sub    rsp,0x28
   140007e6c:	mov    rcx,QWORD PTR [rip+0x584d]        # 0x14000d6c0
   140007e73:	cmp    rcx,0xffffffffffffffff
   140007e77:	je     0x140007e85
   140007e79:	cmp    rcx,0xfffffffffffffffe
   140007e7d:	je     0x140007e85
   140007e7f:	call   QWORD PTR [rip+0x125b]        # 0x1400090e0
   140007e85:	mov    rcx,QWORD PTR [rip+0x582c]        # 0x14000d6b8
   140007e8c:	cmp    rcx,0xffffffffffffffff
   140007e90:	je     0x140007e9e
   140007e92:	cmp    rcx,0xfffffffffffffffe
   140007e96:	je     0x140007e9e
   140007e98:	call   QWORD PTR [rip+0x1242]        # 0x1400090e0
   140007e9e:	add    rsp,0x28
   140007ea2:	ret    
   140007ea3:	int3   
   140007ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140007ea9:	push   rdi
   140007eaa:	sub    rsp,0x30
   140007eae:	or     edi,0xffffffff
   140007eb1:	mov    rbx,rcx
   140007eb4:	test   rcx,rcx
   140007eb7:	jne    0x140007edc
   140007eb9:	call   0x140002088
   140007ebe:	and    QWORD PTR [rsp+0x20],rbx
   140007ec3:	xor    r9d,r9d
   140007ec6:	xor    r8d,r8d
   140007ec9:	xor    edx,edx
   140007ecb:	xor    ecx,ecx
   140007ecd:	mov    DWORD PTR [rax],0x16
   140007ed3:	call   0x140001fb8
   140007ed8:	or     eax,edi
   140007eda:	jmp    0x140007f22
   140007edc:	test   BYTE PTR [rcx+0x18],0x83
   140007ee0:	je     0x140007f1c
   140007ee2:	call   0x140006b30
   140007ee7:	mov    rcx,rbx
   140007eea:	mov    edi,eax
   140007eec:	call   0x140008684
   140007ef1:	mov    rcx,rbx
   140007ef4:	call   0x140004620
   140007ef9:	mov    ecx,eax
   140007efb:	call   0x14000856c
   140007f00:	test   eax,eax
   140007f02:	jns    0x140007f09
   140007f04:	or     edi,0xffffffff
   140007f07:	jmp    0x140007f1c
   140007f09:	mov    rcx,QWORD PTR [rbx+0x28]
   140007f0d:	test   rcx,rcx
   140007f10:	je     0x140007f1c
   140007f12:	call   0x140005240
   140007f17:	and    QWORD PTR [rbx+0x28],0x0
   140007f1c:	and    DWORD PTR [rbx+0x18],0x0
   140007f20:	mov    eax,edi
   140007f22:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f27:	add    rsp,0x30
   140007f2b:	pop    rdi
   140007f2c:	ret    
   140007f2d:	int3   
   140007f2e:	int3   
   140007f2f:	int3   
   140007f30:	mov    QWORD PTR [rsp+0x10],rbx
   140007f35:	mov    QWORD PTR [rsp+0x8],rcx
   140007f3a:	push   rdi
   140007f3b:	sub    rsp,0x30
   140007f3f:	mov    rbx,rcx
   140007f42:	or     edi,0xffffffff
   140007f45:	xor    eax,eax
   140007f47:	test   rcx,rcx
   140007f4a:	setne  al
   140007f4d:	test   eax,eax
   140007f4f:	jne    0x140007f75
   140007f51:	call   0x140002088
   140007f56:	mov    DWORD PTR [rax],0x16
   140007f5c:	and    QWORD PTR [rsp+0x20],0x0
   140007f62:	xor    r9d,r9d
   140007f65:	xor    r8d,r8d
   140007f68:	xor    edx,edx
   140007f6a:	xor    ecx,ecx
   140007f6c:	call   0x140001fb8
   140007f71:	mov    eax,edi
   140007f73:	jmp    0x140007f9b
   140007f75:	test   BYTE PTR [rcx+0x18],0x40
   140007f79:	je     0x140007f81
   140007f7b:	and    DWORD PTR [rcx+0x18],0x0
   140007f7f:	jmp    0x140007f99
   140007f81:	call   0x140004510
   140007f86:	nop
   140007f87:	mov    rcx,rbx
   140007f8a:	call   0x140007ea4
   140007f8f:	mov    edi,eax
   140007f91:	mov    rcx,rbx
   140007f94:	call   0x1400045a0
   140007f99:	mov    eax,edi
   140007f9b:	mov    rbx,QWORD PTR [rsp+0x48]
   140007fa0:	add    rsp,0x30
   140007fa4:	pop    rdi
   140007fa5:	ret    
   140007fa6:	int3   
   140007fa7:	int3   
   140007fa8:	mov    QWORD PTR [rsp+0x18],rbx
   140007fad:	mov    DWORD PTR [rsp+0x8],ecx
   140007fb1:	push   rsi
   140007fb2:	push   rdi
   140007fb3:	push   r12
   140007fb5:	sub    rsp,0x30
   140007fb9:	movsxd rdi,ecx
   140007fbc:	cmp    edi,0xfffffffe
   140007fbf:	jne    0x140007fd4
   140007fc1:	call   0x140002088
   140007fc6:	mov    DWORD PTR [rax],0x9
   140007fcc:	or     eax,0xffffffff
   140007fcf:	jmp    0x1400080ad
   140007fd4:	test   ecx,ecx
   140007fd6:	js     0x14000808a
   140007fdc:	cmp    edi,DWORD PTR [rip+0x7682]        # 0x14000f664
   140007fe2:	jae    0x14000808a
   140007fe8:	mov    rbx,rdi
   140007feb:	mov    rsi,rdi
   140007fee:	sar    rsi,0x5
   140007ff2:	lea    r12,[rip+0x7687]        # 0x14000f680
   140007ff9:	and    ebx,0x1f
   140007ffc:	imul   rbx,rbx,0x58
   140008000:	mov    rax,QWORD PTR [r12+rsi*8]
   140008004:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140008009:	and    ecx,0x1
   14000800c:	jne    0x140008033
   14000800e:	call   0x140002088
   140008013:	mov    DWORD PTR [rax],0x9
   140008019:	and    QWORD PTR [rsp+0x20],0x0
   14000801f:	xor    r9d,r9d
   140008022:	xor    r8d,r8d
   140008025:	xor    edx,edx
   140008027:	xor    ecx,ecx
   140008029:	call   0x140001fb8
   14000802e:	or     eax,0xffffffff
   140008031:	jmp    0x1400080ad
   140008033:	mov    ecx,edi
   140008035:	call   0x140006894
   14000803a:	nop
   14000803b:	mov    rax,QWORD PTR [r12+rsi*8]
   14000803f:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140008044:	je     0x140008071
   140008046:	mov    ecx,edi
   140008048:	call   0x140006810
   14000804d:	mov    rcx,rax
   140008050:	call   QWORD PTR [rip+0xfb2]        # 0x140009008
   140008056:	test   eax,eax
   140008058:	jne    0x140008064
   14000805a:	call   QWORD PTR [rip+0x1090]        # 0x1400090f0
   140008060:	mov    ebx,eax
   140008062:	jmp    0x140008066
   140008064:	xor    ebx,ebx
   140008066:	test   ebx,ebx
   140008068:	je     0x14000807f
   14000806a:	call   0x1400020a8
   14000806f:	mov    DWORD PTR [rax],ebx
   140008071:	call   0x140002088
   140008076:	mov    DWORD PTR [rax],0x9
   14000807c:	or     ebx,0xffffffff
   14000807f:	mov    ecx,edi
   140008081:	call   0x14000693c
   140008086:	mov    eax,ebx
   140008088:	jmp    0x1400080ad
   14000808a:	call   0x140002088
   14000808f:	mov    DWORD PTR [rax],0x9
   140008095:	and    QWORD PTR [rsp+0x20],0x0
   14000809b:	xor    r9d,r9d
   14000809e:	xor    r8d,r8d
   1400080a1:	xor    edx,edx
   1400080a3:	xor    ecx,ecx
   1400080a5:	call   0x140001fb8
   1400080aa:	or     eax,0xffffffff
   1400080ad:	mov    rbx,QWORD PTR [rsp+0x60]
   1400080b2:	add    rsp,0x30
   1400080b6:	pop    r12
   1400080b8:	pop    rdi
   1400080b9:	pop    rsi
   1400080ba:	ret    
   1400080bb:	int3   
   1400080bc:	sub    rsp,0x38
   1400080c0:	mov    rax,QWORD PTR [rip+0x4321]        # 0x14000c3e8
   1400080c7:	xor    rax,rsp
   1400080ca:	mov    QWORD PTR [rsp+0x28],rax
   1400080cf:	lea    r8,[rsp+0x20]
   1400080d4:	mov    r9d,0x6
   1400080da:	mov    edx,0x1004
   1400080df:	mov    BYTE PTR [rsp+0x26],0x0
   1400080e4:	call   QWORD PTR [rip+0xf46]        # 0x140009030
   1400080ea:	test   eax,eax
   1400080ec:	jne    0x1400080f3
   1400080ee:	or     eax,0xffffffff
   1400080f1:	jmp    0x1400080fd
   1400080f3:	lea    rcx,[rsp+0x20]
   1400080f8:	call   0x140008398
   1400080fd:	mov    rcx,QWORD PTR [rsp+0x28]
   140008102:	xor    rcx,rsp
   140008105:	call   0x140001ad0
   14000810a:	add    rsp,0x38
   14000810e:	ret    
   14000810f:	int3   
   140008110:	rex push rbp
   140008112:	push   rbx
   140008113:	push   rsi
   140008114:	push   rdi
   140008115:	push   r12
   140008117:	push   r13
   140008119:	push   r14
   14000811b:	push   r15
   14000811d:	sub    rsp,0x88
   140008124:	lea    rbp,[rsp+0x40]
   140008129:	mov    rax,QWORD PTR [rip+0x42b8]        # 0x14000c3e8
   140008130:	xor    rax,rbp
   140008133:	mov    QWORD PTR [rbp+0x30],rax
   140008137:	mov    r14,QWORD PTR [rbp+0xb0]
   14000813e:	mov    r12d,DWORD PTR [r9]
   140008141:	xor    edi,edi
   140008143:	mov    rbx,r8
   140008146:	mov    rsi,rdi
   140008149:	mov    DWORD PTR [rbp+0x0],edi
   14000814c:	mov    QWORD PTR [rbp+0x10],r9
   140008150:	mov    r13d,edx
   140008153:	mov    r15d,ecx
   140008156:	mov    QWORD PTR [rbp+0x8],rbx
   14000815a:	cmp    ecx,edx
   14000815c:	je     0x140008375
   140008162:	lea    rdx,[rbp+0x18]
   140008166:	call   QWORD PTR [rip+0xf44]        # 0x1400090b0
   14000816c:	cmp    eax,edi
   14000816e:	je     0x140008213
   140008174:	cmp    DWORD PTR [rbp+0x18],0x1
   140008178:	jne    0x140008213
   14000817e:	lea    rdx,[rbp+0x18]
   140008182:	mov    ecx,r13d
   140008185:	call   QWORD PTR [rip+0xf25]        # 0x1400090b0
   14000818b:	cmp    eax,edi
   14000818d:	je     0x140008213
   140008193:	cmp    DWORD PTR [rbp+0x18],0x1
   140008197:	jne    0x140008213
   140008199:	mov    DWORD PTR [rbp+0x0],0x1
   1400081a0:	cmp    r12d,0xffffffff
   1400081a4:	je     0x140008206
   1400081a6:	mov    edi,r12d
   1400081a9:	test   edi,edi
   1400081ab:	jle    0x14000825a
   1400081b1:	movsxd rcx,edi
   1400081b4:	movabs rax,0x7ffffffffffffff0
   1400081be:	cmp    rcx,rax
   1400081c1:	ja     0x14000825a
   1400081c7:	lea    rcx,[rcx+rcx*1+0x10]
   1400081cc:	cmp    rcx,0x400
   1400081d3:	ja     0x140008241
   1400081d5:	lea    rax,[rcx+0xf]
   1400081d9:	cmp    rax,rcx
   1400081dc:	ja     0x1400081e8
   1400081de:	movabs rax,0xffffffffffffff0
   1400081e8:	and    rax,0xfffffffffffffff0
   1400081ec:	call   0x1400089a0
   1400081f1:	sub    rsp,rax
   1400081f4:	lea    rbx,[rsp+0x40]
   1400081f9:	test   rbx,rbx
   1400081fc:	je     0x14000823a
   1400081fe:	mov    DWORD PTR [rbx],0xcccc
   140008204:	jmp    0x140008254
   140008206:	mov    rcx,rbx
   140008209:	call   0x140005650
   14000820e:	lea    edi,[rax+0x1]
   140008211:	jmp    0x1400081a9
   140008213:	mov    r9d,r12d
   140008216:	mov    r8,rbx
   140008219:	mov    edx,0x1
   14000821e:	mov    ecx,r15d
   140008221:	mov    DWORD PTR [rsp+0x28],edi
   140008225:	mov    QWORD PTR [rsp+0x20],rdi
   14000822a:	call   QWORD PTR [rip+0xe58]        # 0x140009088
   140008230:	mov    edi,eax
   140008232:	test   eax,eax
   140008234:	jne    0x1400081a9
   14000823a:	xor    eax,eax
   14000823c:	jmp    0x140008378
   140008241:	call   0x140007b04
   140008246:	mov    rbx,rax
   140008249:	test   rax,rax
   14000824c:	je     0x14000825c
   14000824e:	mov    DWORD PTR [rax],0xdddd
   140008254:	add    rbx,0x10
   140008258:	jmp    0x14000825c
   14000825a:	xor    ebx,ebx
   14000825c:	test   rbx,rbx
   14000825f:	je     0x14000823a
   140008261:	movsxd r8,edi
   140008264:	xor    edx,edx
   140008266:	mov    rcx,rbx
   140008269:	add    r8,r8
   14000826c:	call   0x140001b00
   140008271:	mov    r8,QWORD PTR [rbp+0x8]
   140008275:	mov    r9d,r12d
   140008278:	mov    edx,0x1
   14000827d:	mov    ecx,r15d
   140008280:	mov    DWORD PTR [rsp+0x28],edi
   140008284:	mov    QWORD PTR [rsp+0x20],rbx
   140008289:	call   QWORD PTR [rip+0xdf9]        # 0x140009088
   14000828f:	xor    r15d,r15d
   140008292:	cmp    eax,r15d
   140008295:	je     0x140008364
   14000829b:	cmp    r14,r15
   14000829e:	je     0x1400082db
   1400082a0:	mov    eax,DWORD PTR [rbp+0xb8]
   1400082a6:	mov    QWORD PTR [rsp+0x38],r15
   1400082ab:	mov    QWORD PTR [rsp+0x30],r15
   1400082b0:	mov    DWORD PTR [rsp+0x28],eax
   1400082b4:	mov    r9d,edi
   1400082b7:	mov    r8,rbx
   1400082ba:	xor    edx,edx
   1400082bc:	mov    ecx,r13d
   1400082bf:	mov    QWORD PTR [rsp+0x20],r14
   1400082c4:	call   QWORD PTR [rip+0xf16]        # 0x1400091e0
   1400082ca:	cmp    eax,r15d
   1400082cd:	je     0x140008364
   1400082d3:	mov    rsi,r14
   1400082d6:	jmp    0x140008364
   1400082db:	cmp    DWORD PTR [rbp+0x0],r15d
   1400082df:	jne    0x14000830d
   1400082e1:	mov    QWORD PTR [rsp+0x38],r15
   1400082e6:	mov    QWORD PTR [rsp+0x30],r15
   1400082eb:	mov    r9d,edi
   1400082ee:	mov    r8,rbx
   1400082f1:	xor    edx,edx
   1400082f3:	mov    ecx,r13d
   1400082f6:	mov    DWORD PTR [rsp+0x28],r15d
   1400082fb:	mov    QWORD PTR [rsp+0x20],r15
   140008300:	call   QWORD PTR [rip+0xeda]        # 0x1400091e0
   140008306:	mov    edi,eax
   140008308:	cmp    eax,r15d
   14000830b:	je     0x140008364
   14000830d:	movsxd rdx,edi
   140008310:	mov    ecx,0x1
   140008315:	call   0x140005324
   14000831a:	mov    rsi,rax
   14000831d:	cmp    rax,r15
   140008320:	je     0x140008364
   140008322:	mov    QWORD PTR [rsp+0x38],r15
   140008327:	mov    QWORD PTR [rsp+0x30],r15
   14000832c:	mov    r9d,edi
   14000832f:	mov    r8,rbx
   140008332:	xor    edx,edx
   140008334:	mov    ecx,r13d
   140008337:	mov    DWORD PTR [rsp+0x28],edi
   14000833b:	mov    QWORD PTR [rsp+0x20],rax
   140008340:	call   QWORD PTR [rip+0xe9a]        # 0x1400091e0
   140008346:	cmp    eax,r15d
   140008349:	jne    0x140008358
   14000834b:	mov    rcx,rsi
   14000834e:	call   0x140005240
   140008353:	mov    rsi,r15
   140008356:	jmp    0x140008364
   140008358:	cmp    r12d,0xffffffff
   14000835c:	je     0x140008364
   14000835e:	mov    rcx,QWORD PTR [rbp+0x10]
   140008362:	mov    DWORD PTR [rcx],eax
   140008364:	lea    rcx,[rbx-0x10]
   140008368:	cmp    DWORD PTR [rcx],0xdddd
   14000836e:	jne    0x140008375
   140008370:	call   0x140005240
   140008375:	mov    rax,rsi
   140008378:	mov    rcx,QWORD PTR [rbp+0x30]
   14000837c:	xor    rcx,rbp
   14000837f:	call   0x140001ad0
   140008384:	lea    rsp,[rbp+0x48]
   140008388:	pop    r15
   14000838a:	pop    r14
   14000838c:	pop    r13
   14000838e:	pop    r12
   140008390:	pop    rdi
   140008391:	pop    rsi
   140008392:	pop    rbx
   140008393:	pop    rbp
   140008394:	ret    
   140008395:	int3   
   140008396:	int3   
   140008397:	int3   
   140008398:	xor    edx,edx
   14000839a:	lea    r8d,[rdx+0xa]
   14000839e:	jmp    0x140008940
   1400083a3:	int3   
   1400083a4:	mov    QWORD PTR [rsp+0x10],rbp
   1400083a9:	mov    QWORD PTR [rsp+0x18],rsi
   1400083ae:	push   rdi
   1400083af:	sub    rsp,0x60
   1400083b3:	movsxd rdi,ecx
   1400083b6:	mov    ebp,edx
   1400083b8:	lea    rcx,[rsp+0x40]
   1400083bd:	mov    rdx,r8
   1400083c0:	call   0x140001ddc
   1400083c5:	lea    r11d,[rdi+0x1]
   1400083c9:	cmp    r11d,0x100
   1400083d0:	ja     0x1400083e7
   1400083d2:	mov    rax,QWORD PTR [rsp+0x40]
   1400083d7:	mov    rcx,QWORD PTR [rax+0x140]
   1400083de:	movzx  eax,WORD PTR [rcx+rdi*2]
   1400083e2:	jmp    0x140008486
   1400083e7:	mov    esi,edi
   1400083e9:	lea    rdx,[rsp+0x40]
   1400083ee:	sar    esi,0x8
   1400083f1:	movzx  ecx,sil
   1400083f5:	call   0x1400055ac
   1400083fa:	mov    edx,0x1
   1400083ff:	test   eax,eax
   140008401:	je     0x140008421
   140008403:	mov    BYTE PTR [rsp+0x88],sil
   14000840b:	mov    BYTE PTR [rsp+0x89],dil
   140008413:	mov    BYTE PTR [rsp+0x8a],0x0
   14000841b:	lea    r9d,[rdx+0x1]
   14000841f:	jmp    0x140008434
   140008421:	mov    BYTE PTR [rsp+0x88],dil
   140008429:	mov    BYTE PTR [rsp+0x89],0x0
   140008431:	mov    r9d,edx
   140008434:	mov    rcx,QWORD PTR [rsp+0x40]
   140008439:	mov    DWORD PTR [rsp+0x38],edx
   14000843d:	lea    r8,[rsp+0x88]
   140008445:	mov    eax,DWORD PTR [rcx+0x14]
   140008448:	mov    DWORD PTR [rsp+0x30],eax
   14000844c:	mov    eax,DWORD PTR [rcx+0x4]
   14000844f:	lea    rcx,[rsp+0x40]
   140008454:	mov    DWORD PTR [rsp+0x28],eax
   140008458:	lea    rax,[rsp+0x70]
   14000845d:	mov    QWORD PTR [rsp+0x20],rax
   140008462:	call   0x140007538
   140008467:	test   eax,eax
   140008469:	jne    0x140008481
   14000846b:	cmp    BYTE PTR [rsp+0x58],al
   14000846f:	je     0x14000847d
   140008471:	mov    rax,QWORD PTR [rsp+0x50]
   140008476:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000847d:	xor    eax,eax
   14000847f:	jmp    0x14000849b
   140008481:	movzx  eax,WORD PTR [rsp+0x70]
   140008486:	and    eax,ebp
   140008488:	cmp    BYTE PTR [rsp+0x58],0x0
   14000848d:	je     0x14000849b
   14000848f:	mov    rcx,QWORD PTR [rsp+0x50]
   140008494:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000849b:	lea    r11,[rsp+0x60]
   1400084a0:	mov    rbp,QWORD PTR [r11+0x18]
   1400084a4:	mov    rsi,QWORD PTR [r11+0x20]
   1400084a8:	mov    rsp,r11
   1400084ab:	pop    rdi
   1400084ac:	ret    
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084b5:	push   rdi
   1400084b6:	sub    rsp,0x20
   1400084ba:	movsxd rdi,ecx
   1400084bd:	mov    ecx,edi
   1400084bf:	call   0x140006810
   1400084c4:	cmp    rax,0xffffffffffffffff
   1400084c8:	je     0x140008523
   1400084ca:	mov    rax,QWORD PTR [rip+0x71af]        # 0x14000f680
   1400084d1:	mov    ecx,0x2
   1400084d6:	cmp    edi,0x1
   1400084d9:	jne    0x1400084e4
   1400084db:	test   BYTE PTR [rax+0xb8],dil
   1400084e2:	jne    0x1400084ee
   1400084e4:	cmp    edi,ecx
   1400084e6:	jne    0x140008505
   1400084e8:	test   BYTE PTR [rax+0x60],0x1
   1400084ec:	je     0x140008505
   1400084ee:	call   0x140006810
   1400084f3:	mov    ecx,0x1
   1400084f8:	mov    rbx,rax
   1400084fb:	call   0x140006810
   140008500:	cmp    rax,rbx
   140008503:	je     0x140008523
   140008505:	mov    ecx,edi
   140008507:	call   0x140006810
   14000850c:	mov    rcx,rax
   14000850f:	call   QWORD PTR [rip+0xbcb]        # 0x1400090e0
   140008515:	test   eax,eax
   140008517:	jne    0x140008523
   140008519:	call   QWORD PTR [rip+0xbd1]        # 0x1400090f0
   14000851f:	mov    ebx,eax
   140008521:	jmp    0x140008525
   140008523:	xor    ebx,ebx
   140008525:	mov    ecx,edi
   140008527:	call   0x140006764
   14000852c:	mov    r11,rdi
   14000852f:	mov    rcx,rdi
   140008532:	sar    rcx,0x5
   140008536:	and    r11d,0x1f
   14000853a:	lea    rdx,[rip+0x713f]        # 0x14000f680
   140008541:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140008545:	imul   r11,r11,0x58
   140008549:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14000854f:	test   ebx,ebx
   140008551:	je     0x14000855f
   140008553:	mov    ecx,ebx
   140008555:	call   0x1400020c8
   14000855a:	or     eax,0xffffffff
   14000855d:	jmp    0x140008561
   14000855f:	xor    eax,eax
   140008561:	mov    rbx,QWORD PTR [rsp+0x30]
   140008566:	add    rsp,0x20
   14000856a:	pop    rdi
   14000856b:	ret    
   14000856c:	mov    QWORD PTR [rsp+0x18],rbx
   140008571:	mov    QWORD PTR [rsp+0x20],rsi
   140008576:	mov    DWORD PTR [rsp+0x8],ecx
   14000857a:	push   rdi
   14000857b:	push   r12
   14000857d:	push   r13
   14000857f:	sub    rsp,0x30
   140008583:	movsxd rbx,ecx
   140008586:	cmp    ebx,0xfffffffe
   140008589:	jne    0x1400085a7
   14000858b:	call   0x1400020a8
   140008590:	xor    edi,edi
   140008592:	mov    DWORD PTR [rax],edi
   140008594:	call   0x140002088
   140008599:	mov    DWORD PTR [rax],0x9
   14000859f:	or     eax,0xffffffff
   1400085a2:	jmp    0x140008670
   1400085a7:	xor    edi,edi
   1400085a9:	cmp    ebx,edi
   1400085ab:	jl     0x140008647
   1400085b1:	cmp    ebx,DWORD PTR [rip+0x70ad]        # 0x14000f664
   1400085b7:	jae    0x140008647
   1400085bd:	mov    rsi,rbx
   1400085c0:	mov    r12,rbx
   1400085c3:	sar    r12,0x5
   1400085c7:	lea    r13,[rip+0x70b2]        # 0x14000f680
   1400085ce:	and    esi,0x1f
   1400085d1:	imul   rsi,rsi,0x58
   1400085d5:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   1400085da:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400085df:	and    ecx,0x1
   1400085e2:	jne    0x14000860f
   1400085e4:	call   0x1400020a8
   1400085e9:	mov    DWORD PTR [rax],edi
   1400085eb:	call   0x140002088
   1400085f0:	mov    DWORD PTR [rax],0x9
   1400085f6:	mov    QWORD PTR [rsp+0x20],rdi
   1400085fb:	xor    r9d,r9d
   1400085fe:	xor    r8d,r8d
   140008601:	xor    edx,edx
   140008603:	xor    ecx,ecx
   140008605:	call   0x140001fb8
   14000860a:	or     eax,0xffffffff
   14000860d:	jmp    0x140008670
   14000860f:	mov    ecx,ebx
   140008611:	call   0x140006894
   140008616:	nop
   140008617:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   14000861c:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140008621:	je     0x14000862e
   140008623:	mov    ecx,ebx
   140008625:	call   0x1400084b0
   14000862a:	mov    edi,eax
   14000862c:	jmp    0x14000863c
   14000862e:	call   0x140002088
   140008633:	mov    DWORD PTR [rax],0x9
   140008639:	or     edi,0xffffffff
   14000863c:	mov    ecx,ebx
   14000863e:	call   0x14000693c
   140008643:	mov    eax,edi
   140008645:	jmp    0x140008670
   140008647:	call   0x1400020a8
   14000864c:	mov    DWORD PTR [rax],edi
   14000864e:	call   0x140002088
   140008653:	mov    DWORD PTR [rax],0x9
   140008659:	mov    QWORD PTR [rsp+0x20],rdi
   14000865e:	xor    r9d,r9d
   140008661:	xor    r8d,r8d
   140008664:	xor    edx,edx
   140008666:	xor    ecx,ecx
   140008668:	call   0x140001fb8
   14000866d:	or     eax,0xffffffff
   140008670:	mov    rbx,QWORD PTR [rsp+0x60]
   140008675:	mov    rsi,QWORD PTR [rsp+0x68]
   14000867a:	add    rsp,0x30
   14000867e:	pop    r13
   140008680:	pop    r12
   140008682:	pop    rdi
   140008683:	ret    
   140008684:	rex push rbx
   140008686:	sub    rsp,0x20
   14000868a:	test   BYTE PTR [rcx+0x18],0x83
   14000868e:	mov    rbx,rcx
   140008691:	je     0x1400086b5
   140008693:	test   BYTE PTR [rcx+0x18],0x8
   140008697:	je     0x1400086b5
   140008699:	mov    rcx,QWORD PTR [rcx+0x10]
   14000869d:	call   0x140005240
   1400086a2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   1400086a9:	xor    eax,eax
   1400086ab:	mov    QWORD PTR [rbx],rax
   1400086ae:	mov    QWORD PTR [rbx+0x10],rax
   1400086b2:	mov    DWORD PTR [rbx+0x8],eax
   1400086b5:	add    rsp,0x20
   1400086b9:	pop    rbx
   1400086ba:	ret    
   1400086bb:	int3   
   1400086bc:	mov    rax,rsp
   1400086bf:	mov    QWORD PTR [rax+0x8],rbx
   1400086c3:	mov    QWORD PTR [rax+0x10],rbp
   1400086c7:	mov    QWORD PTR [rax+0x18],rsi
   1400086cb:	mov    QWORD PTR [rax+0x20],rdi
   1400086cf:	push   r12
   1400086d1:	push   r13
   1400086d3:	push   r14
   1400086d5:	sub    rsp,0x50
   1400086d9:	mov    r14,rdx
   1400086dc:	mov    rdx,rcx
   1400086df:	lea    rcx,[rax-0x38]
   1400086e3:	mov    r12d,r9d
   1400086e6:	mov    r13,r8
   1400086e9:	call   0x140001ddc
   1400086ee:	test   r13,r13
   1400086f1:	je     0x1400086f7
   1400086f3:	mov    QWORD PTR [r13+0x0],r14
   1400086f7:	test   r14,r14
   1400086fa:	jne    0x140008726
   1400086fc:	call   0x140002088
   140008701:	and    QWORD PTR [rsp+0x20],0x0
   140008707:	xor    r9d,r9d
   14000870a:	xor    r8d,r8d
   14000870d:	xor    edx,edx
   14000870f:	xor    ecx,ecx
   140008711:	mov    DWORD PTR [rax],0x16
   140008717:	call   0x140001fb8
   14000871c:	cmp    BYTE PTR [rsp+0x48],0x0
   140008721:	jmp    0x14000890f
   140008726:	test   r12d,r12d
   140008729:	je     0x140008737
   14000872b:	cmp    r12d,0x2
   14000872f:	jl     0x1400086fc
   140008731:	cmp    r12d,0x24
   140008735:	jg     0x1400086fc
   140008737:	mov    bpl,BYTE PTR [r14]
   14000873a:	mov    r8,QWORD PTR [rsp+0x30]
   14000873f:	xor    edi,edi
   140008741:	lea    rbx,[r14+0x1]
   140008745:	cmp    DWORD PTR [r8+0x10c],0x1
   14000874d:	jle    0x140008769
   14000874f:	lea    r8,[rsp+0x30]
   140008754:	movzx  ecx,bpl
   140008758:	mov    edx,0x8
   14000875d:	call   0x1400083a4
   140008762:	mov    r8,QWORD PTR [rsp+0x30]
   140008767:	jmp    0x14000877b
   140008769:	mov    rax,QWORD PTR [r8+0x140]
   140008770:	movzx  ecx,bpl
   140008774:	movzx  eax,WORD PTR [rax+rcx*2]
   140008778:	and    eax,0x8
   14000877b:	test   eax,eax
   14000877d:	je     0x140008787
   14000877f:	mov    bpl,BYTE PTR [rbx]
   140008782:	inc    rbx
   140008785:	jmp    0x140008745
   140008787:	mov    esi,DWORD PTR [rsp+0x90]
   14000878e:	cmp    bpl,0x2d
   140008792:	jne    0x140008799
   140008794:	or     esi,0x2
   140008797:	jmp    0x14000879f
   140008799:	cmp    bpl,0x2b
   14000879d:	jne    0x1400087a5
   14000879f:	mov    bpl,BYTE PTR [rbx]
   1400087a2:	inc    rbx
   1400087a5:	test   r12d,r12d
   1400087a8:	js     0x140008901
   1400087ae:	cmp    r12d,0x1
   1400087b2:	je     0x140008901
   1400087b8:	cmp    r12d,0x24
   1400087bc:	jg     0x140008901
   1400087c2:	test   r12d,r12d
   1400087c5:	jne    0x1400087ef
   1400087c7:	cmp    bpl,0x30
   1400087cb:	je     0x1400087d5
   1400087cd:	mov    r12d,0xa
   1400087d3:	jmp    0x14000880d
   1400087d5:	cmp    BYTE PTR [rbx],0x78
   1400087d8:	je     0x1400087e7
   1400087da:	cmp    BYTE PTR [rbx],0x58
   1400087dd:	je     0x1400087e7
   1400087df:	mov    r12d,0x8
   1400087e5:	jmp    0x14000880d
   1400087e7:	mov    r12d,0x10
   1400087ed:	jmp    0x1400087fb
   1400087ef:	cmp    r12d,0x10
   1400087f3:	jne    0x14000880d
   1400087f5:	cmp    bpl,0x30
   1400087f9:	jne    0x14000880d
   1400087fb:	cmp    BYTE PTR [rbx],0x78
   1400087fe:	je     0x140008805
   140008800:	cmp    BYTE PTR [rbx],0x58
   140008803:	jne    0x14000880d
   140008805:	mov    bpl,BYTE PTR [rbx+0x1]
   140008809:	add    rbx,0x2
   14000880d:	mov    r10,QWORD PTR [r8+0x140]
   140008814:	xor    edx,edx
   140008816:	or     eax,0xffffffff
   140008819:	div    r12d
   14000881c:	mov    r9d,eax
   14000881f:	movzx  ecx,bpl
   140008823:	movzx  r8d,WORD PTR [r10+rcx*2]
   140008828:	test   r8b,0x4
   14000882c:	je     0x140008837
   14000882e:	movsx  ecx,bpl
   140008832:	sub    ecx,0x30
   140008835:	jmp    0x140008851
   140008837:	test   r8d,0x103
   14000883e:	je     0x14000886c
   140008840:	lea    eax,[rbp-0x61]
   140008843:	movsx  ecx,bpl
   140008847:	cmp    al,0x19
   140008849:	ja     0x14000884e
   14000884b:	sub    ecx,0x20
   14000884e:	add    ecx,0xffffffc9
   140008851:	cmp    ecx,r12d
   140008854:	jae    0x14000886c
   140008856:	or     esi,0x8
   140008859:	cmp    edi,r9d
   14000885c:	jb     0x140008880
   14000885e:	jne    0x140008864
   140008860:	cmp    ecx,edx
   140008862:	jbe    0x140008880
   140008864:	or     esi,0x4
   140008867:	test   r13,r13
   14000886a:	jne    0x140008886
   14000886c:	dec    rbx
   14000886f:	test   sil,0x8
   140008873:	jne    0x14000888e
   140008875:	test   r13,r13
   140008878:	cmovne rbx,r14
   14000887c:	xor    edi,edi
   14000887e:	jmp    0x1400088d9
   140008880:	imul   edi,r12d
   140008884:	add    edi,ecx
   140008886:	mov    bpl,BYTE PTR [rbx]
   140008889:	inc    rbx
   14000888c:	jmp    0x14000881f
   14000888e:	mov    ebp,0x7fffffff
   140008893:	test   sil,0x4
   140008897:	jne    0x1400088b6
   140008899:	test   sil,0x1
   14000889d:	jne    0x1400088d9
   14000889f:	mov    eax,esi
   1400088a1:	and    eax,0x2
   1400088a4:	je     0x1400088ae
   1400088a6:	cmp    edi,0x80000000
   1400088ac:	ja     0x1400088b6
   1400088ae:	test   eax,eax
   1400088b0:	jne    0x1400088d9
   1400088b2:	cmp    edi,ebp
   1400088b4:	jbe    0x1400088d9
   1400088b6:	call   0x140002088
   1400088bb:	mov    DWORD PTR [rax],0x22
   1400088c1:	test   sil,0x1
   1400088c5:	je     0x1400088cc
   1400088c7:	or     edi,0xffffffff
   1400088ca:	jmp    0x1400088d9
   1400088cc:	mov    al,sil
   1400088cf:	and    al,0x2
   1400088d1:	neg    al
   1400088d3:	sbb    edi,edi
   1400088d5:	neg    edi
   1400088d7:	add    edi,ebp
   1400088d9:	test   r13,r13
   1400088dc:	je     0x1400088e2
   1400088de:	mov    QWORD PTR [r13+0x0],rbx
   1400088e2:	test   sil,0x2
   1400088e6:	je     0x1400088ea
   1400088e8:	neg    edi
   1400088ea:	cmp    BYTE PTR [rsp+0x48],0x0
   1400088ef:	je     0x1400088fd
   1400088f1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400088f6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400088fd:	mov    eax,edi
   1400088ff:	jmp    0x14000891f
   140008901:	test   r13,r13
   140008904:	je     0x14000890a
   140008906:	mov    QWORD PTR [r13+0x0],r14
   14000890a:	cmp    BYTE PTR [rsp+0x48],dil
   14000890f:	je     0x14000891d
   140008911:	mov    rax,QWORD PTR [rsp+0x40]
   140008916:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000891d:	xor    eax,eax
   14000891f:	lea    r11,[rsp+0x50]
   140008924:	mov    rbx,QWORD PTR [r11+0x20]
   140008928:	mov    rbp,QWORD PTR [r11+0x28]
   14000892c:	mov    rsi,QWORD PTR [r11+0x30]
   140008930:	mov    rdi,QWORD PTR [r11+0x38]
   140008934:	mov    rsp,r11
   140008937:	pop    r14
   140008939:	pop    r13
   14000893b:	pop    r12
   14000893d:	ret    
   14000893e:	int3   
   14000893f:	int3   
   140008940:	sub    rsp,0x38
   140008944:	xor    eax,eax
   140008946:	mov    r9d,r8d
   140008949:	mov    r8,rdx
   14000894c:	mov    DWORD PTR [rsp+0x20],eax
   140008950:	mov    rdx,rcx
   140008953:	cmp    DWORD PTR [rip+0x5907],eax        # 0x14000e260
   140008959:	jne    0x140008964
   14000895b:	lea    rcx,[rip+0x488e]        # 0x14000d1f0
   140008962:	jmp    0x140008966
   140008964:	xor    ecx,ecx
   140008966:	call   0x1400086bc
   14000896b:	add    rsp,0x38
   14000896f:	ret    
   140008970:	jmp    QWORD PTR [rip+0x802]        # 0x140009178
   140008976:	jmp    QWORD PTR [rip+0x804]        # 0x140009180
   14000897c:	jmp    QWORD PTR [rip+0x83e]        # 0x1400091c0
   140008982:	int3   
   140008983:	int3   
   140008984:	int3   
   140008985:	int3   
   140008986:	int3   
   140008987:	int3   
   140008988:	int3   
   140008989:	int3   
   14000898a:	int3   
   14000898b:	int3   
   14000898c:	int3   
   14000898d:	int3   
   14000898e:	int3   
   14000898f:	int3   
   140008990:	int3   
   140008991:	int3   
   140008992:	int3   
   140008993:	int3   
   140008994:	int3   
   140008995:	int3   
   140008996:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400089a0:	sub    rsp,0x10
   1400089a4:	mov    QWORD PTR [rsp],r10
   1400089a8:	mov    QWORD PTR [rsp+0x8],r11
   1400089ad:	xor    r11,r11
   1400089b0:	lea    r10,[rsp+0x18]
   1400089b5:	sub    r10,rax
   1400089b8:	cmovb  r10,r11
   1400089bc:	mov    r11,QWORD PTR gs:0x10
   1400089c5:	cmp    r10,r11
   1400089c8:	jae    0x1400089e0
   1400089ca:	and    r10w,0xf000
   1400089d0:	lea    r11,[r11-0x1000]
   1400089d7:	mov    BYTE PTR [r11],0x0
   1400089db:	cmp    r10,r11
   1400089de:	jne    0x1400089d0
   1400089e0:	mov    r10,QWORD PTR [rsp]
   1400089e4:	mov    r11,QWORD PTR [rsp+0x8]
   1400089e9:	add    rsp,0x10
   1400089ed:	ret    
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	rex push rbp
   1400089f2:	sub    rsp,0x20
   1400089f6:	mov    rbp,rdx
   1400089f9:	mov    rax,QWORD PTR [rcx]
   1400089fc:	mov    rdx,rcx
   1400089ff:	mov    ecx,DWORD PTR [rax]
   140008a01:	call   0x140002ab4
   140008a06:	add    rsp,0x20
   140008a0a:	pop    rbp
   140008a0b:	ret    
   140008a0c:	rex push rbp
   140008a0e:	sub    rsp,0x20
   140008a12:	mov    rbp,rdx
   140008a15:	cmp    DWORD PTR [rbp+0x80],0x0
   140008a1c:	je     0x140008a28
   140008a1e:	mov    ecx,0x8
   140008a23:	call   0x140005850
   140008a28:	add    rsp,0x20
   140008a2c:	pop    rbp
   140008a2d:	ret    
   140008a2e:	rex push rbp
   140008a30:	sub    rsp,0x20
   140008a34:	mov    rbp,rdx
   140008a37:	mov    ecx,0xd
   140008a3c:	call   0x140005850
   140008a41:	add    rsp,0x20
   140008a45:	pop    rbp
   140008a46:	ret    
   140008a47:	int3   
   140008a48:	int3   
   140008a49:	int3   
   140008a4a:	int3   
   140008a4b:	int3   
   140008a4c:	int3   
   140008a4d:	int3   
   140008a4e:	rex push rbp
   140008a50:	sub    rsp,0x20
   140008a54:	mov    rbp,rdx
   140008a57:	mov    ecx,0xc
   140008a5c:	call   0x140005850
   140008a61:	add    rsp,0x20
   140008a65:	pop    rbp
   140008a66:	ret    
   140008a67:	rex push rbp
   140008a69:	sub    rsp,0x30
   140008a6d:	mov    rbp,rdx
   140008a70:	mov    ecx,DWORD PTR [rbp+0x60]
   140008a73:	call   0x14000693c
   140008a78:	add    rsp,0x30
   140008a7c:	pop    rbp
   140008a7d:	ret    
   140008a7e:	rex push rbp
   140008a80:	sub    rsp,0x20
   140008a84:	mov    rbp,rdx
   140008a87:	mov    ecx,0xd
   140008a8c:	call   0x140005850
   140008a91:	add    rsp,0x20
   140008a95:	pop    rbp
   140008a96:	ret    
   140008a97:	rex push rbp
   140008a99:	sub    rsp,0x20
   140008a9d:	mov    rbp,rdx
   140008aa0:	mov    ecx,0xc
   140008aa5:	call   0x140005850
   140008aaa:	add    rsp,0x20
   140008aae:	pop    rbp
   140008aaf:	ret    
   140008ab0:	rex push rbp
   140008ab2:	sub    rsp,0x20
   140008ab6:	mov    rbp,rdx
   140008ab9:	mov    rcx,QWORD PTR [rip+0x4840]        # 0x14000d300
   140008ac0:	call   QWORD PTR [rip+0x5f2]        # 0x1400090b8
   140008ac6:	add    rsp,0x20
   140008aca:	pop    rbp
   140008acb:	ret    
   140008acc:	rex push rbp
   140008ace:	sub    rsp,0x20
   140008ad2:	mov    rbp,rdx
   140008ad5:	call   0x140002348
   140008ada:	add    rsp,0x20
   140008ade:	pop    rbp
   140008adf:	ret    
   140008ae0:	rex push rbp
   140008ae2:	sub    rsp,0x20
   140008ae6:	mov    rbp,rdx
   140008ae9:	mov    rax,QWORD PTR [rcx]
   140008aec:	xor    ecx,ecx
   140008aee:	cmp    DWORD PTR [rax],0xc0000005
   140008af4:	sete   cl
   140008af7:	mov    eax,ecx
   140008af9:	mov    eax,ecx
   140008afb:	add    rsp,0x20
   140008aff:	pop    rbp
   140008b00:	ret    
   140008b01:	rex push rbp
   140008b03:	sub    rsp,0x30
   140008b07:	mov    rbp,rdx
   140008b0a:	cmp    DWORD PTR [rbp+0x70],0x0
   140008b0e:	je     0x140008b17
   140008b10:	xor    ecx,ecx
   140008b12:	call   0x140005850
   140008b17:	add    rsp,0x30
   140008b1b:	pop    rbp
   140008b1c:	ret    
   140008b1d:	rex push rbp
   140008b1f:	sub    rsp,0x20
   140008b23:	mov    rbp,rdx
   140008b26:	mov    rax,QWORD PTR [rcx]
   140008b29:	xor    r11d,r11d
   140008b2c:	cmp    DWORD PTR [rax],0xc0000017
   140008b32:	sete   r11b
   140008b36:	mov    eax,r11d
   140008b39:	add    rsp,0x20
   140008b3d:	pop    rbp
   140008b3e:	ret    
   140008b3f:	rex push rbp
   140008b41:	sub    rsp,0x20
   140008b45:	mov    rbp,rdx
   140008b48:	mov    ecx,0xa
   140008b4d:	call   0x140005850
   140008b52:	add    rsp,0x20
   140008b56:	pop    rbp
   140008b57:	ret    
   140008b58:	rex push rbp
   140008b5a:	sub    rsp,0x20
   140008b5e:	mov    rbp,rdx
   140008b61:	mov    ecx,0x1
   140008b66:	call   0x140005850
   140008b6b:	add    rsp,0x20
   140008b6f:	pop    rbp
   140008b70:	ret    
   140008b71:	rex push rbp
   140008b73:	sub    rsp,0x20
   140008b77:	mov    rbp,rdx
   140008b7a:	movsxd rcx,DWORD PTR [rbp+0x20]
   140008b7e:	mov    rax,rcx
   140008b81:	mov    rdx,QWORD PTR [rip+0x5ab8]        # 0x14000e640
   140008b88:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140008b8c:	call   0x1400045f8
   140008b91:	add    rsp,0x20
   140008b95:	pop    rbp
   140008b96:	ret    
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	int3   
   140008ba1:	rex push rbp
   140008ba3:	sub    rsp,0x20
   140008ba7:	mov    rbp,rdx
   140008baa:	mov    ecx,0x1
   140008baf:	call   0x140005850
   140008bb4:	add    rsp,0x20
   140008bb8:	pop    rbp
   140008bb9:	ret    
   140008bba:	rex push rbp
   140008bbc:	sub    rsp,0x30
   140008bc0:	mov    rbp,rdx
   140008bc3:	mov    rcx,QWORD PTR [rbp+0x40]
   140008bc7:	call   0x1400045a0
   140008bcc:	add    rsp,0x30
   140008bd0:	pop    rbp
   140008bd1:	ret    
   140008bd2:	rex push rbp
   140008bd4:	sub    rsp,0x30
   140008bd8:	mov    rbp,rdx
   140008bdb:	mov    ecx,DWORD PTR [rbp+0x50]
   140008bde:	call   0x14000693c
   140008be3:	add    rsp,0x30
   140008be7:	pop    rbp
   140008be8:	ret    
