
7b6a2c47f68bdabc73a7dc13ffc5d8c241419161c13f88f85de0e4ab5e5ca7f2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	mov    QWORD PTR [rsp+0x18],r8
   140001009:	mov    QWORD PTR [rsp+0x20],r9
   14000100e:	push   rbx
   14000100f:	push   rbp
   140001010:	push   rsi
   140001011:	push   rdi
   140001012:	sub    rsp,0x28
   140001016:	shr    rdx,1
   140001019:	xor    ebp,ebp
   14000101b:	mov    rdi,rcx
   14000101e:	lea    rax,[rdx-0x1]
   140001022:	mov    esi,ebp
   140001024:	mov    ecx,0x80070057
   140001029:	cmp    rax,0x7ffffffe
   14000102f:	cmova  esi,ecx
   140001032:	test   esi,esi
   140001034:	js     0x14000106a
   140001036:	lea    rbx,[rdx-0x1]
   14000103a:	lea    r9,[rsp+0x68]
   14000103f:	mov    rcx,rdi
   140001042:	mov    rdx,rbx
   140001045:	mov    esi,ebp
   140001047:	call   0x1400218c0
   14000104c:	test   eax,eax
   14000104e:	js     0x14000105f
   140001050:	cdqe   
   140001052:	cmp    rax,rbx
   140001055:	ja     0x14000105f
   140001057:	jne    0x140001072
   140001059:	mov    WORD PTR [rdi+rbx*2],bp
   14000105d:	jmp    0x140001072
   14000105f:	mov    WORD PTR [rdi+rbx*2],bp
   140001063:	mov    esi,0x8007007a
   140001068:	jmp    0x140001072
   14000106a:	test   rdx,rdx
   14000106d:	je     0x140001072
   14000106f:	mov    WORD PTR [rdi],bp
   140001072:	mov    eax,esi
   140001074:	add    rsp,0x28
   140001078:	pop    rdi
   140001079:	pop    rsi
   14000107a:	pop    rbp
   14000107b:	pop    rbx
   14000107c:	ret    
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rax,[rip+0x3bf11]        # 0x14003cf98
   140001087:	mov    QWORD PTR [rcx],rax
   14000108a:	ret    
   14000108b:	int3   
   14000108c:	rex push rbx
   14000108e:	sub    rsp,0x20
   140001092:	lea    rax,[rip+0x3beff]        # 0x14003cf98
   140001099:	mov    rbx,rcx
   14000109c:	mov    QWORD PTR [rcx],rax
   14000109f:	test   dl,0x1
   1400010a2:	je     0x1400010a9
   1400010a4:	call   0x140020e30
   1400010a9:	mov    rax,rbx
   1400010ac:	add    rsp,0x20
   1400010b0:	pop    rbx
   1400010b1:	ret    
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	mov    DWORD PTR [rdx],r8d
   1400010b7:	mov    QWORD PTR [rdx+0x8],rcx
   1400010bb:	mov    rax,rdx
   1400010be:	ret    
   1400010bf:	int3   
   1400010c0:	rex push rbx
   1400010c2:	sub    rsp,0x30
   1400010c6:	mov    rax,QWORD PTR [rcx]
   1400010c9:	mov    rbx,r8
   1400010cc:	mov    r8d,edx
   1400010cf:	lea    rdx,[rsp+0x20]
   1400010d4:	call   QWORD PTR [rax+0x18]
   1400010d7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400010db:	cmp    QWORD PTR [rax+0x8],rcx
   1400010df:	jne    0x1400010ee
   1400010e1:	mov    ecx,DWORD PTR [rbx]
   1400010e3:	cmp    DWORD PTR [rax],ecx
   1400010e5:	jne    0x1400010ee
   1400010e7:	mov    eax,0x1
   1400010ec:	jmp    0x1400010f0
   1400010ee:	xor    eax,eax
   1400010f0:	add    rsp,0x30
   1400010f4:	pop    rbx
   1400010f5:	ret    
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400010fc:	jne    0x140001109
   1400010fe:	cmp    DWORD PTR [rdx],r8d
   140001101:	jne    0x140001109
   140001103:	mov    eax,0x1
   140001108:	ret    
   140001109:	xor    eax,eax
   14000110b:	ret    
   14000110c:	lea    rax,[rip+0x3c34d]        # 0x14003d460
   140001113:	ret    
   140001114:	mov    rax,rsp
   140001117:	mov    QWORD PTR [rax+0x10],rdx
   14000111b:	push   rdi
   14000111c:	sub    rsp,0x30
   140001120:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140001128:	mov    QWORD PTR [rax+0x8],rbx
   14000112c:	mov    rdi,rdx
   14000112f:	xor    ebx,ebx
   140001131:	mov    DWORD PTR [rax-0x18],ebx
   140001134:	mov    ecx,r8d
   140001137:	call   0x14002a848
   14000113c:	lea    rdx,[rip+0x3c325]        # 0x14003d468
   140001143:	test   rax,rax
   140001146:	cmovne rdx,rax
   14000114a:	mov    QWORD PTR [rdi+0x18],0xf
   140001152:	mov    QWORD PTR [rdi+0x10],rbx
   140001156:	mov    BYTE PTR [rdi],bl
   140001158:	cmp    BYTE PTR [rdx],bl
   14000115a:	je     0x14000116b
   14000115c:	or     rax,0xffffffffffffffff
   140001160:	inc    rax
   140001163:	cmp    BYTE PTR [rdx+rax*1],bl
   140001166:	jne    0x140001160
   140001168:	mov    rbx,rax
   14000116b:	mov    r8,rbx
   14000116e:	mov    rcx,rdi
   140001171:	call   0x140002138
   140001176:	nop
   140001177:	mov    DWORD PTR [rsp+0x20],0x1
   14000117f:	mov    rax,rdi
   140001182:	mov    rbx,QWORD PTR [rsp+0x40]
   140001187:	add    rsp,0x30
   14000118b:	pop    rdi
   14000118c:	ret    
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	mov    QWORD PTR [rsp+0x8],rcx
   140001195:	push   rbx
   140001196:	sub    rsp,0x30
   14000119a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400011a3:	mov    rbx,rcx
   1400011a6:	lea    rax,[rip+0x3bdeb]        # 0x14003cf98
   1400011ad:	mov    QWORD PTR [rcx],rax
   1400011b0:	test   dl,0x1
   1400011b3:	je     0x1400011ba
   1400011b5:	call   0x140020e30
   1400011ba:	mov    rax,rbx
   1400011bd:	add    rsp,0x30
   1400011c1:	pop    rbx
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400011c9:	sub    rsp,0x18
   1400011cd:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400011d5:	lea    rax,[rip+0x3bdbc]        # 0x14003cf98
   1400011dc:	mov    QWORD PTR [rcx],rax
   1400011df:	add    rsp,0x18
   1400011e3:	ret    
   1400011e4:	lea    rax,[rip+0x3c28d]        # 0x14003d478
   1400011eb:	ret    
   1400011ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400011f1:	push   rbx
   1400011f2:	sub    rsp,0x30
   1400011f6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400011ff:	mov    rbx,rdx
   140001202:	xor    eax,eax
   140001204:	mov    DWORD PTR [rsp+0x20],eax
   140001208:	cmp    r8d,0x1
   14000120c:	jne    0x140001231
   14000120e:	mov    QWORD PTR [rdx+0x18],0xf
   140001216:	mov    QWORD PTR [rdx+0x10],rax
   14000121a:	mov    BYTE PTR [rdx],al
   14000121c:	lea    r8d,[rax+0x15]
   140001220:	lea    rdx,[rip+0x3c261]        # 0x14003d488
   140001227:	mov    rcx,rbx
   14000122a:	call   0x140002138
   14000122f:	jmp    0x140001237
   140001231:	call   0x140001114
   140001236:	nop
   140001237:	mov    DWORD PTR [rsp+0x20],0x1
   14000123f:	mov    rax,rbx
   140001242:	add    rsp,0x30
   140001246:	pop    rbx
   140001247:	ret    
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	mov    QWORD PTR [rsp+0x8],rcx
   140001251:	push   rbx
   140001252:	sub    rsp,0x30
   140001256:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000125f:	mov    rbx,rcx
   140001262:	lea    rax,[rip+0x3bd2f]        # 0x14003cf98
   140001269:	mov    QWORD PTR [rcx],rax
   14000126c:	test   dl,0x1
   14000126f:	je     0x140001276
   140001271:	call   0x140020e30
   140001276:	mov    rax,rbx
   140001279:	add    rsp,0x30
   14000127d:	pop    rbx
   14000127e:	ret    
   14000127f:	int3   
   140001280:	lea    rax,[rip+0x3c219]        # 0x14003d4a0
   140001287:	ret    
   140001288:	mov    rax,rsp
   14000128b:	mov    QWORD PTR [rax+0x10],rdx
   14000128f:	push   rdi
   140001290:	sub    rsp,0x30
   140001294:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000129c:	mov    QWORD PTR [rax+0x8],rbx
   1400012a0:	mov    rdi,rdx
   1400012a3:	xor    ebx,ebx
   1400012a5:	mov    DWORD PTR [rax-0x18],ebx
   1400012a8:	mov    ecx,r8d
   1400012ab:	call   0x14002a870
   1400012b0:	lea    rdx,[rip+0x3c1b1]        # 0x14003d468
   1400012b7:	test   rax,rax
   1400012ba:	cmovne rdx,rax
   1400012be:	mov    QWORD PTR [rdi+0x18],0xf
   1400012c6:	mov    QWORD PTR [rdi+0x10],rbx
   1400012ca:	mov    BYTE PTR [rdi],bl
   1400012cc:	cmp    BYTE PTR [rdx],bl
   1400012ce:	je     0x1400012df
   1400012d0:	or     rax,0xffffffffffffffff
   1400012d4:	inc    rax
   1400012d7:	cmp    BYTE PTR [rdx+rax*1],bl
   1400012da:	jne    0x1400012d4
   1400012dc:	mov    rbx,rax
   1400012df:	mov    r8,rbx
   1400012e2:	mov    rcx,rdi
   1400012e5:	call   0x140002138
   1400012ea:	nop
   1400012eb:	mov    DWORD PTR [rsp+0x20],0x1
   1400012f3:	mov    rax,rdi
   1400012f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012fb:	add    rsp,0x30
   1400012ff:	pop    rdi
   140001300:	ret    
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	mov    QWORD PTR [rsp+0x8],rbx
   140001309:	push   rdi
   14000130a:	sub    rsp,0x20
   14000130e:	mov    ecx,r8d
   140001311:	mov    edi,r8d
   140001314:	mov    rbx,rdx
   140001317:	call   0x14002a848
   14000131c:	mov    DWORD PTR [rbx],edi
   14000131e:	test   rax,rax
   140001321:	lea    rax,[rip+0x4e428]        # 0x14004f750
   140001328:	jne    0x140001331
   14000132a:	lea    rax,[rip+0x4e40f]        # 0x14004f740
   140001331:	mov    QWORD PTR [rbx+0x8],rax
   140001335:	mov    rax,rbx
   140001338:	mov    rbx,QWORD PTR [rsp+0x30]
   14000133d:	add    rsp,0x20
   140001341:	pop    rdi
   140001342:	ret    
   140001343:	int3   
   140001344:	lea    rax,[rip+0x3c58d]        # 0x14003d8d8
   14000134b:	mov    QWORD PTR [rcx],rax
   14000134e:	ret    
   14000134f:	int3   
   140001350:	rex push rbx
   140001352:	sub    rsp,0x20
   140001356:	lea    rax,[rip+0x3c57b]        # 0x14003d8d8
   14000135d:	mov    rbx,rcx
   140001360:	mov    QWORD PTR [rcx],rax
   140001363:	test   dl,0x1
   140001366:	je     0x14000136d
   140001368:	call   0x140020e30
   14000136d:	mov    rax,rbx
   140001370:	add    rsp,0x20
   140001374:	pop    rbx
   140001375:	ret    
   140001376:	int3   
   140001377:	int3   
   140001378:	rex push rbx
   14000137a:	push   rdi
   14000137b:	sub    rsp,0x38
   14000137f:	xor    edi,edi
   140001381:	cmp    BYTE PTR [rip+0x4f9c8],dil        # 0x140050d50
   140001388:	jne    0x140001424
   14000138e:	lea    rax,[rsp+0x68]
   140001393:	lea    rdx,[rip+0x3c196]        # 0x14003d530
   14000139a:	mov    r9d,0x20019
   1400013a0:	xor    r8d,r8d
   1400013a3:	mov    rcx,0xffffffff80000002
   1400013aa:	mov    QWORD PTR [rsp+0x20],rax
   1400013af:	call   QWORD PTR [rip+0x37c53]        # 0x140039008
   1400013b5:	test   eax,eax
   1400013b7:	jne    0x14000141d
   1400013b9:	mov    rcx,QWORD PTR [rsp+0x68]
   1400013be:	lea    rax,[rsp+0x60]
   1400013c3:	lea    r9,[rsp+0x50]
   1400013c8:	mov    QWORD PTR [rsp+0x28],rax
   1400013cd:	lea    rax,[rsp+0x58]
   1400013d2:	lea    rdx,[rip+0x3c19f]        # 0x14003d578
   1400013d9:	xor    r8d,r8d
   1400013dc:	mov    DWORD PTR [rsp+0x58],edi
   1400013e0:	mov    DWORD PTR [rsp+0x60],0x4
   1400013e8:	mov    QWORD PTR [rsp+0x20],rax
   1400013ed:	mov    DWORD PTR [rsp+0x50],0x4
   1400013f5:	call   QWORD PTR [rip+0x37c05]        # 0x140039000
   1400013fb:	mov    rcx,QWORD PTR [rsp+0x68]
   140001400:	mov    ebx,eax
   140001402:	call   QWORD PTR [rip+0x37c08]        # 0x140039010
   140001408:	test   ebx,ebx
   14000140a:	jne    0x14000141d
   14000140c:	cmp    DWORD PTR [rsp+0x50],0x4
   140001411:	jne    0x14000141d
   140001413:	cmp    DWORD PTR [rsp+0x58],0x1
   140001418:	jne    0x14000141d
   14000141a:	mov    BYTE PTR [rdi],dil
   14000141d:	mov    BYTE PTR [rip+0x4f92c],0x1        # 0x140050d50
   140001424:	add    rsp,0x38
   140001428:	pop    rdi
   140001429:	pop    rbx
   14000142a:	ret    
   14000142b:	int3   
   14000142c:	mov    QWORD PTR [rsp+0x8],rcx
   140001431:	push   rbx
   140001432:	sub    rsp,0x30
   140001436:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000143f:	mov    rbx,rcx
   140001442:	lea    rax,[rip+0x3c48f]        # 0x14003d8d8
   140001449:	mov    QWORD PTR [rcx],rax
   14000144c:	test   dl,0x1
   14000144f:	je     0x140001456
   140001451:	call   0x140020e30
   140001456:	mov    rax,rbx
   140001459:	add    rsp,0x30
   14000145d:	pop    rbx
   14000145e:	ret    
   14000145f:	int3   
   140001460:	mov    QWORD PTR [rsp+0x8],rcx
   140001465:	sub    rsp,0x18
   140001469:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140001471:	lea    rax,[rip+0x3c460]        # 0x14003d8d8
   140001478:	mov    QWORD PTR [rcx],rax
   14000147b:	add    rsp,0x18
   14000147f:	ret    
   140001480:	sub    rsp,0x28
   140001484:	mov    rcx,QWORD PTR [rip+0x4f8d5]        # 0x140050d60
   14000148b:	test   rcx,rcx
   14000148e:	je     0x1400014a4
   140001490:	mov    rcx,QWORD PTR [rcx+0x8]
   140001494:	xor    r9d,r9d
   140001497:	xor    r8d,r8d
   14000149a:	mov    rax,QWORD PTR [rcx]
   14000149d:	mov    edx,0x61230d49
   1400014a2:	call   QWORD PTR [rax]
   1400014a4:	mov    eax,0x1
   1400014a9:	add    rsp,0x28
   1400014ad:	ret    
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    rax,rsp
   1400014b3:	push   rbp
   1400014b4:	lea    rbp,[rax-0x198]
   1400014bb:	sub    rsp,0x290
   1400014c2:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400014cb:	mov    QWORD PTR [rax+0x8],rbx
   1400014cf:	mov    QWORD PTR [rax+0x10],rdi
   1400014d3:	mov    rax,QWORD PTR [rip+0x4bf6e]        # 0x14004d448
   1400014da:	xor    rax,rsp
   1400014dd:	mov    QWORD PTR [rbp+0x180],rax
   1400014e4:	mov    r8,QWORD PTR [rip+0x4f9b5]        # 0x140050ea0
   1400014eb:	xor    edx,edx
   1400014ed:	xor    ecx,ecx
   1400014ef:	call   QWORD PTR [rip+0x380d3]        # 0x1400395c8
   1400014f5:	mov    rbx,rax
   1400014f8:	call   QWORD PTR [rip+0x380e2]        # 0x1400395e0
   1400014fe:	xor    edi,edi
   140001500:	test   rbx,rbx
   140001503:	je     0x14000155a
   140001505:	cmp    eax,0xb7
   14000150a:	jne    0x140001555
   14000150c:	mov    rcx,rbx
   14000150f:	call   QWORD PTR [rip+0x380ab]        # 0x1400395c0
   140001515:	mov    DWORD PTR [rsp+0x20],0x1
   14000151d:	mov    DWORD PTR [rsp+0x24],0xe123053e
   140001525:	mov    QWORD PTR [rsp+0x28],rdi
   14000152a:	mov    QWORD PTR [rsp+0x30],rdi
   14000152f:	mov    QWORD PTR [rsp+0x38],rdi
   140001534:	mov    QWORD PTR [rsp+0x40],rdi
   140001539:	mov    QWORD PTR [rsp+0x48],rdi
   14000153e:	mov    QWORD PTR [rsp+0x50],rdi
   140001543:	lea    rdx,[rip+0x493ce]        # 0x14004a918
   14000154a:	lea    rcx,[rsp+0x20]
   14000154f:	call   0x1400265e8
   140001554:	int3   
   140001555:	mov    rax,rbx
   140001558:	jmp    0x1400015c4
   14000155a:	cmp    eax,0x5
   14000155d:	jne    0x14000159f
   14000155f:	mov    DWORD PTR [rsp+0x20],0x1
   140001567:	mov    DWORD PTR [rsp+0x24],0xe123053e
   14000156f:	mov    QWORD PTR [rsp+0x28],rdi
   140001574:	mov    QWORD PTR [rsp+0x30],rdi
   140001579:	mov    QWORD PTR [rsp+0x38],rdi
   14000157e:	mov    QWORD PTR [rsp+0x40],rdi
   140001583:	mov    QWORD PTR [rsp+0x48],rdi
   140001588:	mov    QWORD PTR [rsp+0x50],rdi
   14000158d:	lea    rdx,[rip+0x49384]        # 0x14004a918
   140001594:	lea    rcx,[rsp+0x20]
   140001599:	call   0x1400265e8
   14000159e:	int3   
   14000159f:	mov    r8,QWORD PTR [rip+0x4f8fa]        # 0x140050ea0
   1400015a6:	mov    edx,eax
   1400015a8:	lea    rcx,[rsp+0x60]
   1400015ad:	call   0x140002e28
   1400015b2:	lea    rdx,[rip+0x4937f]        # 0x14004a938
   1400015b9:	lea    rcx,[rsp+0x60]
   1400015be:	call   0x1400265e8
   1400015c3:	int3   
   1400015c4:	mov    rcx,QWORD PTR [rbp+0x180]
   1400015cb:	xor    rcx,rsp
   1400015ce:	call   0x140020e50
   1400015d3:	lea    r11,[rsp+0x290]
   1400015db:	mov    rbx,QWORD PTR [r11+0x10]
   1400015df:	mov    rdi,QWORD PTR [r11+0x18]
   1400015e3:	mov    rsp,r11
   1400015e6:	pop    rbp
   1400015e7:	ret    
   1400015e8:	mov    rax,rsp
   1400015eb:	push   rdi
   1400015ec:	sub    rsp,0xb0
   1400015f3:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400015fc:	mov    QWORD PTR [rax+0x8],rbx
   140001600:	mov    ebx,ecx
   140001602:	call   QWORD PTR [rip+0x37fd8]        # 0x1400395e0
   140001608:	mov    ecx,eax
   14000160a:	call   0x140004908
   14000160f:	mov    rdi,rax
   140001612:	lea    rdx,[rip+0x3be37]        # 0x14003d450
   140001619:	test   rax,rax
   14000161c:	cmovne rdx,rax
   140001620:	mov    QWORD PTR [rsp+0x20],rdx
   140001625:	lea    r9,[rip+0x3bf7c]        # 0x14003d5a8
   14000162c:	mov    r8d,0x2
   140001632:	mov    edx,ebx
   140001634:	lea    rcx,[rsp+0x38]
   140001639:	call   0x140002f94
   14000163e:	nop
   14000163f:	mov    rcx,rdi
   140001642:	call   QWORD PTR [rip+0x37f70]        # 0x1400395b8
   140001648:	lea    rdx,[rsp+0x38]
   14000164d:	lea    rcx,[rsp+0x70]
   140001652:	call   0x140002ff4
   140001657:	lea    rdx,[rip+0x492ba]        # 0x14004a918
   14000165e:	lea    rcx,[rsp+0x70]
   140001663:	call   0x1400265e8
   140001668:	int3   
   140001669:	int3   
   14000166a:	int3   
   14000166b:	int3   
   14000166c:	mov    QWORD PTR [rsp+0x18],rbx
   140001671:	push   rsi
   140001672:	push   rdi
   140001673:	push   r14
   140001675:	sub    rsp,0x30
   140001679:	xor    edi,edi
   14000167b:	mov    rsi,rdx
   14000167e:	mov    r14,rcx
   140001681:	lea    rdx,[rip+0x3c8c0]        # 0x14003df48
   140001688:	lea    r8d,[rdi+0x1]
   14000168c:	xor    ebx,ebx
   14000168e:	xor    ecx,ecx
   140001690:	mov    DWORD PTR [rsp+0x24],edi
   140001694:	mov    DWORD PTR [rsp+0x20],ebx
   140001698:	call   QWORD PTR [rip+0x37a02]        # 0x1400390a0
   14000169e:	test   rax,rax
   1400016a1:	je     0x1400016c1
   1400016a3:	lea    rdx,[rsp+0x20]
   1400016a8:	lea    rcx,[rsp+0x24]
   1400016ad:	mov    r8,rax
   1400016b0:	call   0x140006c7c
   1400016b5:	mov    edi,DWORD PTR [rsp+0x24]
   1400016b9:	mov    ebx,DWORD PTR [rsp+0x20]
   1400016bd:	test   edi,edi
   1400016bf:	jne    0x1400016cc
   1400016c1:	call   0x140006dc4
   1400016c6:	test   eax,eax
   1400016c8:	je     0x1400016f4
   1400016ca:	test   edi,edi
   1400016cc:	sete   al
   1400016cf:	mov    BYTE PTR [r14],al
   1400016d2:	test   ebx,ebx
   1400016d4:	jne    0x1400016e1
   1400016d6:	call   0x140006fec
   1400016db:	test   eax,eax
   1400016dd:	je     0x1400016ff
   1400016df:	test   ebx,ebx
   1400016e1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400016e6:	sete   al
   1400016e9:	mov    BYTE PTR [rsi],al
   1400016eb:	add    rsp,0x30
   1400016ef:	pop    r14
   1400016f1:	pop    rdi
   1400016f2:	pop    rsi
   1400016f3:	ret    
   1400016f4:	mov    ecx,0xe12305a5
   1400016f9:	call   0x1400015e8
   1400016fe:	int3   
   1400016ff:	mov    ecx,0xe12305a9
   140001704:	call   0x1400015e8
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	rex push rbp
   14000170e:	push   rbx
   14000170f:	push   rsi
   140001710:	push   rdi
   140001711:	push   r12
   140001713:	push   r13
   140001715:	push   r14
   140001717:	push   r15
   140001719:	lea    rbp,[rsp-0x98]
   140001721:	sub    rsp,0x198
   140001728:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140001731:	mov    rax,QWORD PTR [rip+0x4bd10]        # 0x14004d448
   140001738:	xor    rax,rsp
   14000173b:	mov    QWORD PTR [rbp+0x80],rax
   140001742:	mov    QWORD PTR [rsp+0x20],r9
   140001747:	mov    r14,r8
   14000174a:	mov    QWORD PTR [rsp+0x28],rdx
   14000174f:	mov    r12d,ecx
   140001752:	mov    r15,QWORD PTR [rbp+0x100]
   140001759:	mov    QWORD PTR [rsp+0x30],r15
   14000175e:	mov    r13,QWORD PTR [rbp+0x108]
   140001765:	xor    ecx,ecx
   140001767:	call   QWORD PTR [rip+0x37ed3]        # 0x140039640
   14000176d:	call   QWORD PTR [rip+0x37ed5]        # 0x140039648
   140001773:	mov    rbx,rax
   140001776:	call   QWORD PTR [rip+0x37cc4]        # 0x140039440
   14000177c:	movzx  edi,ax
   14000177f:	call   0x1400052cc
   140001784:	mov    r8d,0x104
   14000178a:	lea    rdx,[rsp+0x70]
   14000178f:	mov    rcx,rbx
   140001792:	call   QWORD PTR [rip+0x37ca0]        # 0x140039438
   140001798:	xor    esi,esi
   14000179a:	test   eax,eax
   14000179c:	je     0x1400017b4
   14000179e:	mov    r8d,edi
   1400017a1:	lea    rdx,[rsp+0x70]
   1400017a6:	call   0x140005318
   1400017ab:	mov    rcx,QWORD PTR [rip+0x4f80e]        # 0x140050fc0
   1400017b2:	jmp    0x1400017be
   1400017b4:	mov    rcx,rsi
   1400017b7:	mov    QWORD PTR [rip+0x4f802],rcx        # 0x140050fc0
   1400017be:	call   QWORD PTR [rip+0x37e7c]        # 0x140039640
   1400017c4:	mov    edi,0x1
   1400017c9:	mov    edx,edi
   1400017cb:	lea    rcx,[rip+0xfffffffffffffcae]        # 0x140001480
   1400017d2:	call   QWORD PTR [rip+0x37e00]        # 0x1400395d8
   1400017d8:	xor    r8d,r8d
   1400017db:	mov    ecx,0x21230003
   1400017e0:	call   0x1400048b4
   1400017e5:	lea    rcx,[rip+0x3bdd4]        # 0x14003d5c0
   1400017ec:	mov    QWORD PTR [rsp+0x40],rcx
   1400017f1:	mov    QWORD PTR [rsp+0x48],rax
   1400017f6:	mov    rax,QWORD PTR [r14]
   1400017f9:	lea    r9,[rsp+0x40]
   1400017fe:	mov    edx,0x61230d15
   140001803:	lea    r8d,[rdi+0x1]
   140001807:	mov    rcx,r14
   14000180a:	call   QWORD PTR [rax]
   14000180c:	mov    QWORD PTR [rsp+0x38],rsi
   140001811:	mov    rbx,rsi
   140001814:	mov    QWORD PTR [rsp+0x38],rbx
   140001819:	mov    ecx,0x690
   14000181e:	call   0x140021a98
   140001823:	mov    QWORD PTR [rsp+0x40],rax
   140001828:	test   rax,rax
   14000182b:	je     0x14000183b
   14000182d:	mov    r8,r14
   140001830:	mov    rcx,rax
   140001833:	call   0x140008388
   140001838:	mov    rsi,rax
   14000183b:	test   rsi,rsi
   14000183e:	je     0x140001bae
   140001844:	mov    rax,QWORD PTR [rsi]
   140001847:	mov    r8,QWORD PTR [rsp+0x28]
   14000184c:	mov    edx,r12d
   14000184f:	mov    rcx,rsi
   140001852:	call   QWORD PTR [rax+0x8]
   140001855:	xor    ecx,ecx
   140001857:	test   eax,eax
   140001859:	je     0x140001ba3
   14000185f:	cmp    DWORD PTR [rsi+0x644],ecx
   140001865:	je     0x14000187a
   140001867:	mov    rax,QWORD PTR [rsi]
   14000186a:	mov    edx,edi
   14000186c:	mov    rcx,rsi
   14000186f:	call   QWORD PTR [rax]
   140001871:	xor    esi,esi
   140001873:	mov    edi,esi
   140001875:	jmp    0x140001bae
   14000187a:	lea    rbx,[rsi+0x10]
   14000187e:	mov    QWORD PTR [rsp+0x38],rbx
   140001883:	mov    rax,QWORD PTR [rbx]
   140001886:	mov    rcx,rbx
   140001889:	call   QWORD PTR [rax+0x8]
   14000188c:	mov    rax,QWORD PTR [rbx]
   14000188f:	mov    rcx,rbx
   140001892:	call   QWORD PTR [rax+0x38]
   140001895:	xor    esi,esi
   140001897:	test   al,al
   140001899:	sete   r12b
   14000189d:	test   r12b,r12b
   1400018a0:	sete   al
   1400018a3:	mov    rcx,QWORD PTR [rsp+0x20]
   1400018a8:	mov    BYTE PTR [rcx],al
   1400018aa:	test   r12b,r12b
   1400018ad:	jne    0x1400019cb
   1400018b3:	mov    rdx,r13
   1400018b6:	mov    rcx,r15
   1400018b9:	call   0x14000166c
   1400018be:	cmp    BYTE PTR [r15],sil
   1400018c1:	je     0x1400018cd
   1400018c3:	cmp    BYTE PTR [r13+0x0],sil
   1400018c7:	jne    0x1400019cb
   1400018cd:	mov    eax,DWORD PTR [rip+0x4f4a1]        # 0x140050d74
   1400018d3:	test   eax,eax
   1400018d5:	jne    0x1400018e4
   1400018d7:	call   0x140004f38
   1400018dc:	mov    eax,edi
   1400018de:	mov    DWORD PTR [rip+0x4f490],eax        # 0x140050d74
   1400018e4:	cmp    WORD PTR [rip+0x4f48d],si        # 0x140050d78
   1400018eb:	je     0x1400019cb
   1400018f1:	test   eax,eax
   1400018f3:	jne    0x140001900
   1400018f5:	call   0x140004f38
   1400018fa:	mov    DWORD PTR [rip+0x4f474],edi        # 0x140050d74
   140001900:	xor    r15d,r15d
   140001903:	cmp    DWORD PTR [rip+0x4f466],r15d        # 0x140050d70
   14000190a:	sete   sil
   14000190e:	lea    rcx,[rsp+0x20]
   140001913:	call   0x140007508
   140001918:	test   eax,eax
   14000191a:	js     0x1400019c9
   140001920:	cmp    DWORD PTR [rsp+0x20],esi
   140001924:	setne  al
   140001927:	xor    esi,esi
   140001929:	test   al,al
   14000192b:	je     0x1400019cb
   140001931:	call   0x14000729c
   140001936:	test   eax,eax
   140001938:	jne    0x140001945
   14000193a:	mov    ecx,0xe12305ab
   14000193f:	call   0x1400015e8
   140001944:	int3   
   140001945:	call   0x1400073ec
   14000194a:	test   eax,eax
   14000194c:	jne    0x140001959
   14000194e:	mov    ecx,0xe12305a7
   140001953:	call   0x1400015e8
   140001958:	int3   
   140001959:	mov    DWORD PTR [rsp+0x20],esi
   14000195d:	xor    eax,eax
   14000195f:	mov    DWORD PTR [rsp+0x28],eax
   140001963:	mov    r8d,edi
   140001966:	lea    rdx,[rip+0x3c5db]        # 0x14003df48
   14000196d:	xor    ecx,ecx
   14000196f:	call   QWORD PTR [rip+0x3772b]        # 0x1400390a0
   140001975:	test   rax,rax
   140001978:	je     0x14000199f
   14000197a:	mov    r8,rax
   14000197d:	lea    rdx,[rsp+0x28]
   140001982:	lea    rcx,[rsp+0x20]
   140001987:	call   0x140006c7c
   14000198c:	mov    esi,DWORD PTR [rsp+0x20]
   140001990:	test   esi,esi
   140001992:	je     0x14000199f
   140001994:	mov    ecx,0x64
   140001999:	call   QWORD PTR [rip+0x37c51]        # 0x1400395f0
   14000199f:	add    r15d,edi
   1400019a2:	test   esi,esi
   1400019a4:	je     0x1400019bc
   1400019a6:	cmp    r15d,0x32
   1400019aa:	mov    esi,0x0
   1400019af:	jb     0x140001959
   1400019b1:	mov    ecx,0xe12305a7
   1400019b6:	call   0x1400015e8
   1400019bb:	int3   
   1400019bc:	mov    rdx,r13
   1400019bf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400019c4:	call   0x14000166c
   1400019c9:	xor    esi,esi
   1400019cb:	mov    rax,QWORD PTR [rbx]
   1400019ce:	mov    rcx,rbx
   1400019d1:	call   QWORD PTR [rax+0x30]
   1400019d4:	test   al,al
   1400019d6:	je     0x1400019e6
   1400019d8:	mov    rax,QWORD PTR [rbx]
   1400019db:	mov    rcx,rbx
   1400019de:	call   QWORD PTR [rax+0x68]
   1400019e1:	mov    rdx,rax
   1400019e4:	jmp    0x1400019e8
   1400019e6:	xor    edx,edx
   1400019e8:	mov    cl,r12b
   1400019eb:	call   0x140006a74
   1400019f0:	mov    rax,QWORD PTR [rbx]
   1400019f3:	mov    rcx,rbx
   1400019f6:	call   QWORD PTR [rax+0x18]
   1400019f9:	test   al,al
   1400019fb:	jne    0x140001a0a
   1400019fd:	mov    rax,QWORD PTR [rbx]
   140001a00:	mov    rcx,rbx
   140001a03:	call   QWORD PTR [rax+0x20]
   140001a06:	test   al,al
   140001a08:	je     0x140001a3d
   140001a0a:	cmp    DWORD PTR [rip+0x4f364],esi        # 0x140050d74
   140001a10:	jne    0x140001a1d
   140001a12:	call   0x140004f38
   140001a17:	mov    DWORD PTR [rip+0x4f357],edi        # 0x140050d74
   140001a1d:	cmp    DWORD PTR [rip+0x4f34d],esi        # 0x140050d70
   140001a23:	je     0x140001a3d
   140001a25:	mov    rax,QWORD PTR [r14]
   140001a28:	xor    r9d,r9d
   140001a2b:	xor    r8d,r8d
   140001a2e:	mov    edx,0xe12305b4
   140001a33:	mov    rcx,r14
   140001a36:	call   QWORD PTR [rax]
   140001a38:	jmp    0x140001bae
   140001a3d:	call   0x1400014b0
   140001a42:	mov    r15,rax
   140001a45:	mov    ecx,0x10
   140001a4a:	call   0x140021a98
   140001a4f:	mov    rsi,rax
   140001a52:	mov    QWORD PTR [rsp+0x40],rax
   140001a57:	xor    r12d,r12d
   140001a5a:	test   rax,rax
   140001a5d:	je     0x140001a93
   140001a5f:	lea    rax,[rip+0x3c6da]        # 0x14003e140
   140001a66:	mov    QWORD PTR [rsi],rax
   140001a69:	mov    ecx,0x2308
   140001a6e:	call   0x140021a98
   140001a73:	mov    QWORD PTR [rsp+0x30],rax
   140001a78:	test   rax,rax
   140001a7b:	je     0x140001a8a
   140001a7d:	mov    rdx,r14
   140001a80:	mov    rcx,rax
   140001a83:	call   0x14000931c
   140001a88:	jmp    0x140001a8d
   140001a8a:	mov    rax,r12
   140001a8d:	mov    QWORD PTR [rsi+0x8],rax
   140001a91:	jmp    0x140001a96
   140001a93:	mov    rsi,r12
   140001a96:	mov    QWORD PTR [rip+0x4f2c3],rsi        # 0x140050d60
   140001a9d:	mov    rdx,rbx
   140001aa0:	mov    rcx,QWORD PTR [rsi+0x8]
   140001aa4:	call   0x14000a3c0
   140001aa9:	xor    esi,esi
   140001aab:	test   eax,eax
   140001aad:	jns    0x140001adb
   140001aaf:	mov    rcx,r15
   140001ab2:	call   QWORD PTR [rip+0x37b08]        # 0x1400395c0
   140001ab8:	mov    rcx,QWORD PTR [rip+0x4f2a1]        # 0x140050d60
   140001abf:	test   rcx,rcx
   140001ac2:	je     0x140001bae
   140001ac8:	mov    rax,QWORD PTR [rcx]
   140001acb:	mov    edx,edi
   140001acd:	call   QWORD PTR [rax]
   140001acf:	mov    QWORD PTR [rip+0x4f28a],rsi        # 0x140050d60
   140001ad6:	jmp    0x140001bae
   140001adb:	lea    r12,[rip+0x3bdf6]        # 0x14003d8d8
   140001ae2:	mov    QWORD PTR [rsp+0x50],r12
   140001ae7:	lea    rax,[rip+0x3bf12]        # 0x14003da00
   140001aee:	mov    QWORD PTR [rsp+0x50],rax
   140001af3:	mov    QWORD PTR [rsp+0x58],r14
   140001af8:	mov    rcx,QWORD PTR [rip+0x4f261]        # 0x140050d60
   140001aff:	mov    rax,QWORD PTR [rcx+0x8]
   140001b03:	lea    rdx,[rsp+0x50]
   140001b08:	mov    QWORD PTR [rax+0x1550],rdx
   140001b0f:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b13:	call   0x14000b14c
   140001b18:	test   eax,eax
   140001b1a:	jne    0x140001b58
   140001b1c:	mov    rax,QWORD PTR [r14]
   140001b1f:	xor    r9d,r9d
   140001b22:	xor    r8d,r8d
   140001b25:	mov    edx,0xe123053d
   140001b2a:	mov    rcx,r14
   140001b2d:	call   QWORD PTR [rax]
   140001b2f:	mov    rcx,r15
   140001b32:	call   QWORD PTR [rip+0x37a88]        # 0x1400395c0
   140001b38:	mov    rcx,QWORD PTR [rip+0x4f221]        # 0x140050d60
   140001b3f:	test   rcx,rcx
   140001b42:	je     0x140001b9c
   140001b44:	mov    rax,QWORD PTR [rcx]
   140001b47:	mov    edx,edi
   140001b49:	call   QWORD PTR [rax]
   140001b4b:	jmp    0x140001b95
   140001b4d:	mov    ecx,0x1f4
   140001b52:	call   QWORD PTR [rip+0x37a98]        # 0x1400395f0
   140001b58:	mov    rax,QWORD PTR [rip+0x4f201]        # 0x140050d60
   140001b5f:	mov    rcx,QWORD PTR [rax+0x8]
   140001b63:	cmp    DWORD PTR [rcx+0x1560],esi
   140001b69:	jne    0x140001b4d
   140001b6b:	call   0x140001378
   140001b70:	mov    rcx,QWORD PTR [rip+0x4f1e9]        # 0x140050d60
   140001b77:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b7b:	call   0x14000b5c0
   140001b80:	mov    rcx,QWORD PTR [rip+0x4f1d9]        # 0x140050d60
   140001b87:	test   rcx,rcx
   140001b8a:	je     0x140001b93
   140001b8c:	mov    rax,QWORD PTR [rcx]
   140001b8f:	mov    edx,edi
   140001b91:	call   QWORD PTR [rax]
   140001b93:	mov    edi,esi
   140001b95:	mov    QWORD PTR [rip+0x4f1c4],rsi        # 0x140050d60
   140001b9c:	mov    QWORD PTR [rsp+0x50],r12
   140001ba1:	jmp    0x140001bae
   140001ba3:	mov    rax,QWORD PTR [rsi]
   140001ba6:	mov    edx,edi
   140001ba8:	mov    rcx,rsi
   140001bab:	call   QWORD PTR [rax]
   140001bad:	nop
   140001bae:	test   rbx,rbx
   140001bb1:	je     0x140001bbc
   140001bb3:	mov    rdx,QWORD PTR [rbx]
   140001bb6:	mov    rcx,rbx
   140001bb9:	call   QWORD PTR [rdx+0x10]
   140001bbc:	mov    eax,edi
   140001bbe:	mov    rcx,QWORD PTR [rbp+0x80]
   140001bc5:	xor    rcx,rsp
   140001bc8:	call   0x140020e50
   140001bcd:	add    rsp,0x198
   140001bd4:	pop    r15
   140001bd6:	pop    r14
   140001bd8:	pop    r13
   140001bda:	pop    r12
   140001bdc:	pop    rdi
   140001bdd:	pop    rsi
   140001bde:	pop    rbx
   140001bdf:	pop    rbp
   140001be0:	ret    
   140001be1:	int3   
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	mov    QWORD PTR [rsp+0x8],rcx
   140001be9:	sub    rsp,0x38
   140001bed:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001bf6:	mov    rcx,QWORD PTR [rcx]
   140001bf9:	test   rcx,rcx
   140001bfc:	je     0x140001c04
   140001bfe:	mov    rax,QWORD PTR [rcx]
   140001c01:	call   QWORD PTR [rax+0x10]
   140001c04:	add    rsp,0x38
   140001c08:	ret    
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	mov    rax,rsp
   140001c0f:	push   rdi
   140001c10:	push   r14
   140001c12:	push   r15
   140001c14:	sub    rsp,0x1f0
   140001c1b:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140001c24:	mov    QWORD PTR [rax+0x18],rbx
   140001c28:	mov    QWORD PTR [rax+0x20],rsi
   140001c2c:	mov    rax,QWORD PTR [rip+0x4b815]        # 0x14004d448
   140001c33:	xor    rax,rsp
   140001c36:	mov    QWORD PTR [rsp+0x1e0],rax
   140001c3e:	mov    r15,rdx
   140001c41:	mov    r14d,ecx
   140001c44:	cmp    ecx,0x1
   140001c47:	jle    0x140001c8c
   140001c49:	mov    rcx,QWORD PTR [rdx+0x8]
   140001c4d:	movzx  eax,WORD PTR [rcx]
   140001c50:	sub    ax,0x2d
   140001c54:	mov    r8d,0xfffd
   140001c5a:	test   r8w,ax
   140001c5e:	jne    0x140001c8c
   140001c60:	movzx  eax,WORD PTR [rcx+0x2]
   140001c64:	sub    ax,0x55
   140001c68:	mov    r8d,0xffdf
   140001c6e:	test   r8w,ax
   140001c72:	jne    0x140001c8c
   140001c74:	xor    edi,edi
   140001c76:	cmp    WORD PTR [rcx+0x4],di
   140001c7a:	jne    0x140001c8e
   140001c7c:	mov    BYTE PTR [rip+0x4f0e5],0x1        # 0x140050d68
   140001c83:	dec    r14d
   140001c86:	lea    r15,[rdx+0x8]
   140001c8a:	jmp    0x140001c8e
   140001c8c:	xor    edi,edi
   140001c8e:	xor    edx,edx
   140001c90:	lea    r8d,[rdx+0x2c]
   140001c94:	lea    rcx,[rsp+0x1a0]
   140001c9c:	call   0x1400260e0
   140001ca1:	mov    r8d,0x16
   140001ca7:	lea    rdx,[rsp+0x1a0]
   140001caf:	lea    rcx,[rip+0x3bdda]        # 0x14003da90
   140001cb6:	call   QWORD PTR [rip+0x3771c]        # 0x1400393d8
   140001cbc:	test   eax,eax
   140001cbe:	je     0x140001d20
   140001cc0:	lea    rcx,[rsp+0x1a0]
   140001cc8:	call   0x140029fe0
   140001ccd:	movsxd rbx,eax
   140001cd0:	xor    edx,edx
   140001cd2:	lea    rcx,[rip+0x3bdb7]        # 0x14003da90
   140001cd9:	call   QWORD PTR [rip+0x37701]        # 0x1400393e0
   140001cdf:	mov    ecx,0x10
   140001ce4:	call   0x140021a98
   140001ce9:	mov    rsi,rax
   140001cec:	mov    QWORD PTR [rsp+0x40],rax
   140001cf1:	test   rax,rax
   140001cf4:	je     0x140001d1b
   140001cf6:	lea    rax,[rip+0x3bdeb]        # 0x14003dae8
   140001cfd:	mov    QWORD PTR [rsi],rax
   140001d00:	lea    rax,[rip+0x3be11]        # 0x14003db18
   140001d07:	mov    QWORD PTR [rsi],rax
   140001d0a:	or     rax,0xffffffffffffffff
   140001d0e:	test   rbx,rbx
   140001d11:	cmove  rbx,rax
   140001d15:	mov    QWORD PTR [rsi+0x8],rbx
   140001d19:	jmp    0x140001d1e
   140001d1b:	mov    rsi,rdi
   140001d1e:	jmp    0x140001d28
   140001d20:	call   0x140004784
   140001d25:	mov    rsi,rax
   140001d28:	mov    QWORD PTR [rsp+0x38],rsi
   140001d2d:	xor    edx,edx
   140001d2f:	xor    ecx,ecx
   140001d31:	call   QWORD PTR [rip+0x37939]        # 0x140039670
   140001d37:	cmp    DWORD PTR [rip+0x4f037],edi        # 0x140050d74
   140001d3d:	jne    0x140001d4e
   140001d3f:	call   0x140004f38
   140001d44:	mov    DWORD PTR [rip+0x4f026],0x1        # 0x140050d74
   140001d4e:	cmp    DWORD PTR [rip+0x4f028],edi        # 0x140050d7c
   140001d54:	jne    0x140001d73
   140001d56:	mov    rax,QWORD PTR [rsi]
   140001d59:	xor    r9d,r9d
   140001d5c:	xor    r8d,r8d
   140001d5f:	mov    edx,0xe1230514
   140001d64:	mov    rcx,rsi
   140001d67:	call   QWORD PTR [rax]
   140001d69:	mov    ebx,0xe1230514
   140001d6e:	jmp    0x140001f7f
   140001d73:	mov    QWORD PTR [rsp+0x1a8],rdi
   140001d7b:	mov    QWORD PTR [rsp+0x1b8],rdi
   140001d83:	mov    QWORD PTR [rsp+0x1c8],rdi
   140001d8b:	call   QWORD PTR [rip+0x3757f]        # 0x140039310
   140001d91:	lea    r8,[rsp+0x1a0]
   140001d99:	mov    edx,0x28
   140001d9e:	mov    rcx,rax
   140001da1:	call   QWORD PTR [rip+0x37331]        # 0x1400390d8
   140001da7:	neg    eax
   140001da9:	sbb    rcx,rcx
   140001dac:	and    rcx,QWORD PTR [rsp+0x1a0]
   140001db4:	mov    QWORD PTR [rsp+0x1a0],rcx
   140001dbc:	cmp    QWORD PTR [rsp+0x1a0],rdi
   140001dc4:	jne    0x140001dd3
   140001dc6:	mov    ecx,0x6
   140001dcb:	call   QWORD PTR [rip+0x373f7]        # 0x1400391c8
   140001dd1:	jmp    0x140001deb
   140001dd3:	lea    rdx,[rip+0x3b7ae]        # 0x14003d588
   140001dda:	lea    rcx,[rsp+0x1a0]
   140001de2:	call   0x140005f78
   140001de7:	test   eax,eax
   140001de9:	jne    0x140001df1
   140001deb:	mov    DWORD PTR [rip+0x4c70f],edi        # 0x14004e500
   140001df1:	lea    rcx,[rsp+0x1a0]
   140001df9:	call   0x140006018
   140001dfe:	mov    BYTE PTR [rsp+0x31],dil
   140001e03:	mov    BYTE PTR [rsp+0x30],dil
   140001e08:	mov    BYTE PTR [rsp+0x32],dil
   140001e0d:	lea    rax,[rsp+0x32]
   140001e12:	mov    QWORD PTR [rsp+0x28],rax
   140001e17:	lea    rax,[rsp+0x30]
   140001e1c:	mov    QWORD PTR [rsp+0x20],rax
   140001e21:	lea    r9,[rsp+0x31]
   140001e26:	mov    r8,rsi
   140001e29:	mov    rdx,r15
   140001e2c:	mov    ecx,r14d
   140001e2f:	call   0x14000170c
   140001e34:	mov    ebx,eax
   140001e36:	mov    DWORD PTR [rsp+0x34],eax
   140001e3a:	jmp    0x140001e47
   140001e3c:	xor    edi,edi
   140001e3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e43:	mov    ebx,DWORD PTR [rsp+0x34]
   140001e47:	mov    rax,QWORD PTR [rsi]
   140001e4a:	mov    rcx,rsi
   140001e4d:	call   QWORD PTR [rax+0x18]
   140001e50:	test   al,al
   140001e52:	je     0x140001e67
   140001e54:	mov    rax,QWORD PTR [rsi]
   140001e57:	xor    r9d,r9d
   140001e5a:	xor    r8d,r8d
   140001e5d:	mov    edx,0x61231771
   140001e62:	mov    rcx,rsi
   140001e65:	call   QWORD PTR [rax]
   140001e67:	cmp    BYTE PTR [rsp+0x31],dil
   140001e6c:	je     0x140001f7f
   140001e72:	mov    DWORD PTR [rsp+0x70],0x4
   140001e7a:	lea    rax,[rsp+0x70]
   140001e7f:	test   rax,rax
   140001e82:	je     0x140001e92
   140001e84:	lea    rcx,[rsp+0x70]
   140001e89:	call   0x140007914
   140001e8e:	mov    edx,eax
   140001e90:	jmp    0x140001e97
   140001e92:	mov    edx,0xe1230554
   140001e97:	test   edx,edx
   140001e99:	je     0x140001eae
   140001e9b:	mov    rax,QWORD PTR [rsi]
   140001e9e:	xor    r9d,r9d
   140001ea1:	xor    r8d,r8d
   140001ea4:	mov    rcx,rsi
   140001ea7:	call   QWORD PTR [rax]
   140001ea9:	mov    ebx,0x1
   140001eae:	cmp    BYTE PTR [rsp+0x32],dil
   140001eb3:	je     0x140001f19
   140001eb5:	call   0x14000729c
   140001eba:	test   eax,eax
   140001ebc:	jne    0x140001f19
   140001ebe:	call   QWORD PTR [rip+0x3771c]        # 0x1400395e0
   140001ec4:	mov    ecx,eax
   140001ec6:	call   0x140004908
   140001ecb:	mov    rbx,rax
   140001ece:	lea    r15,[rip+0x3b6d3]        # 0x14003d5a8
   140001ed5:	mov    QWORD PTR [rsp+0x40],r15
   140001eda:	lea    r14,[rip+0x3b56f]        # 0x14003d450
   140001ee1:	mov    rcx,r14
   140001ee4:	test   rax,rax
   140001ee7:	cmovne rcx,rax
   140001eeb:	mov    QWORD PTR [rsp+0x48],rcx
   140001ef0:	mov    r10,QWORD PTR [rsi]
   140001ef3:	lea    r9,[rsp+0x40]
   140001ef8:	mov    edx,0xe12305ab
   140001efd:	mov    r8d,0x2
   140001f03:	mov    rcx,rsi
   140001f06:	call   QWORD PTR [r10]
   140001f09:	mov    rcx,rbx
   140001f0c:	call   QWORD PTR [rip+0x376a6]        # 0x1400395b8
   140001f12:	mov    ebx,0x1
   140001f17:	jmp    0x140001f27
   140001f19:	lea    r15,[rip+0x3b688]        # 0x14003d5a8
   140001f20:	lea    r14,[rip+0x3b529]        # 0x14003d450
   140001f27:	cmp    BYTE PTR [rsp+0x30],dil
   140001f2c:	je     0x140001f7f
   140001f2e:	call   0x1400073ec
   140001f33:	test   eax,eax
   140001f35:	jne    0x140001f7f
   140001f37:	call   QWORD PTR [rip+0x376a3]        # 0x1400395e0
   140001f3d:	mov    ecx,eax
   140001f3f:	call   0x140004908
   140001f44:	mov    rbx,rax
   140001f47:	mov    QWORD PTR [rsp+0x40],r15
   140001f4c:	test   rax,rax
   140001f4f:	cmovne r14,rax
   140001f53:	mov    QWORD PTR [rsp+0x48],r14
   140001f58:	mov    r10,QWORD PTR [rsi]
   140001f5b:	lea    r9,[rsp+0x40]
   140001f60:	mov    edx,0xe12305a7
   140001f65:	mov    r8d,0x2
   140001f6b:	mov    rcx,rsi
   140001f6e:	call   QWORD PTR [r10]
   140001f71:	mov    rcx,rbx
   140001f74:	call   QWORD PTR [rip+0x3763e]        # 0x1400395b8
   140001f7a:	mov    ebx,0x1
   140001f7f:	call   QWORD PTR [rip+0x376f3]        # 0x140039678
   140001f85:	mov    rax,QWORD PTR [rsi]
   140001f88:	mov    edx,0x1
   140001f8d:	mov    rcx,rsi
   140001f90:	call   QWORD PTR [rax+0x10]
   140001f93:	mov    eax,ebx
   140001f95:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140001f9d:	xor    rcx,rsp
   140001fa0:	call   0x140020e50
   140001fa5:	lea    r11,[rsp+0x1f0]
   140001fad:	mov    rbx,QWORD PTR [r11+0x30]
   140001fb1:	mov    rsi,QWORD PTR [r11+0x38]
   140001fb5:	mov    rsp,r11
   140001fb8:	pop    r15
   140001fba:	pop    r14
   140001fbc:	pop    rdi
   140001fbd:	ret    
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    rax,QWORD PTR [rcx]
   140001fc3:	cmp    DWORD PTR [rax],0x80000003
   140001fc9:	jne    0x140001fce
   140001fcb:	xor    eax,eax
   140001fcd:	ret    
   140001fce:	jmp    0x140007c2c
   140001fd3:	int3   
   140001fd4:	mov    rax,rsp
   140001fd7:	mov    QWORD PTR [rax+0x8],rbx
   140001fdb:	mov    QWORD PTR [rax+0x10],rbp
   140001fdf:	mov    QWORD PTR [rax+0x18],rsi
   140001fe3:	mov    QWORD PTR [rax+0x20],rdi
   140001fe7:	push   r14
   140001fe9:	sub    rsp,0x30
   140001fed:	xor    r9d,r9d
   140001ff0:	mov    rdi,rdx
   140001ff3:	movsxd rbp,ecx
   140001ff6:	lea    r14d,[r9+0x1]
   140001ffa:	xor    r8d,r8d
   140001ffd:	xor    ecx,ecx
   140001fff:	mov    edx,r14d
   140002002:	call   QWORD PTR [rip+0x375c8]        # 0x1400395d0
   140002008:	and    QWORD PTR [rip+0x4fcb8],0x0        # 0x140051cc8
   140002010:	mov    DWORD PTR [rip+0x4fca6],0x18        # 0x140051cc0
   14000201a:	mov    DWORD PTR [rip+0x4fcaf],r14d        # 0x140051cd0
   140002021:	call   0x140007bac
   140002026:	lea    rax,[rip+0x3b423]        # 0x14003d450
   14000202d:	mov    QWORD PTR [rip+0x4c59c],rax        # 0x14004e5d0
   140002034:	lea    rax,[rip+0x3b5f5]        # 0x14003d630
   14000203b:	lea    rcx,[rip+0xffffffffffffff7e]        # 0x140001fc0
   140002042:	mov    QWORD PTR [rip+0x4c4cf],rax        # 0x14004e518
   140002049:	call   QWORD PTR [rip+0x375a9]        # 0x1400395f8
   14000204f:	mov    DWORD PTR [rip+0x4ef0a],r14d        # 0x140050f60
   140002056:	mov    ebx,r14d
   140002059:	cmp    r14,rbp
   14000205c:	jge    0x1400020ca
   14000205e:	mov    r8,QWORD PTR [rdi+rbx*8]
   140002062:	mov    ecx,0xfffd
   140002067:	movzx  eax,WORD PTR [r8]
   14000206b:	sub    ax,0x2d
   14000206f:	test   cx,ax
   140002072:	jne    0x1400020bb
   140002074:	movzx  eax,WORD PTR [r8+0x2]
   140002079:	mov    ecx,0xffdf
   14000207e:	sub    ax,0x44
   140002082:	test   cx,ax
   140002085:	jne    0x1400020bb
   140002087:	cmp    WORD PTR [r8+0x4],0x3a
   14000208d:	jne    0x1400020bb
   14000208f:	or     DWORD PTR [rsp+0x28],0xffffffff
   140002094:	lea    rax,[rip+0x3b545]        # 0x14003d5e0
   14000209b:	add    r8,0x6
   14000209f:	or     r9d,0xffffffff
   1400020a3:	mov    edx,r14d
   1400020a6:	mov    ecx,0x409
   1400020ab:	mov    QWORD PTR [rsp+0x20],rax
   1400020b0:	call   QWORD PTR [rip+0x37532]        # 0x1400395e8
   1400020b6:	cmp    eax,0x2
   1400020b9:	je     0x1400020c3
   1400020bb:	add    rbx,r14
   1400020be:	cmp    rbx,rbp
   1400020c1:	jmp    0x14000205c
   1400020c3:	and    DWORD PTR [rip+0x4ee96],0x0        # 0x140050f60
   1400020ca:	mov    rdx,rdi
   1400020cd:	mov    ecx,ebp
   1400020cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400020d4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400020d9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400020de:	mov    rdi,QWORD PTR [rsp+0x58]
   1400020e3:	add    rsp,0x30
   1400020e7:	pop    r14
   1400020e9:	jmp    0x140001c0c
   1400020ee:	int3   
   1400020ef:	int3   
   1400020f0:	rex push rbx
   1400020f2:	sub    rsp,0x20
   1400020f6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400020fb:	mov    rbx,rcx
   1400020fe:	jb     0x140002108
   140002100:	mov    rcx,QWORD PTR [rcx]
   140002103:	call   0x140020e30
   140002108:	and    QWORD PTR [rbx+0x10],0x0
   14000210d:	mov    QWORD PTR [rbx+0x18],0xf
   140002115:	mov    BYTE PTR [rbx],0x0
   140002118:	add    rsp,0x20
   14000211c:	pop    rbx
   14000211d:	ret    
   14000211e:	int3   
   14000211f:	int3   
   140002120:	sub    rsp,0x28
   140002124:	mov    rcx,QWORD PTR [rcx]
   140002127:	test   rcx,rcx
   14000212a:	je     0x140002132
   14000212c:	mov    rax,QWORD PTR [rcx]
   14000212f:	call   QWORD PTR [rax+0x10]
   140002132:	add    rsp,0x28
   140002136:	ret    
   140002137:	int3   
   140002138:	mov    QWORD PTR [rsp+0x8],rbx
   14000213d:	mov    QWORD PTR [rsp+0x10],rsi
   140002142:	push   rdi
   140002143:	sub    rsp,0x20
   140002147:	mov    rdi,r8
   14000214a:	mov    rsi,rdx
   14000214d:	mov    rbx,rcx
   140002150:	test   rdx,rdx
   140002153:	je     0x1400021a1
   140002155:	cmp    QWORD PTR [rcx+0x18],0x10
   14000215a:	jb     0x140002161
   14000215c:	mov    rax,QWORD PTR [rcx]
   14000215f:	jmp    0x140002164
   140002161:	mov    rax,rcx
   140002164:	cmp    rdx,rax
   140002167:	jb     0x1400021a1
   140002169:	cmp    QWORD PTR [rcx+0x18],0x10
   14000216e:	jb     0x140002173
   140002170:	mov    rcx,QWORD PTR [rcx]
   140002173:	add    rcx,QWORD PTR [rbx+0x10]
   140002177:	cmp    rcx,rdx
   14000217a:	jbe    0x1400021a1
   14000217c:	cmp    QWORD PTR [rbx+0x18],0x10
   140002181:	jb     0x140002188
   140002183:	mov    rax,QWORD PTR [rbx]
   140002186:	jmp    0x14000218b
   140002188:	mov    rax,rbx
   14000218b:	sub    rsi,rax
   14000218e:	mov    r9,r8
   140002191:	mov    rdx,rbx
   140002194:	mov    r8,rsi
   140002197:	mov    rcx,rbx
   14000219a:	call   0x140002238
   14000219f:	jmp    0x14000221b
   1400021a1:	cmp    r8,0xfffffffffffffffe
   1400021a5:	ja     0x14000222b
   1400021ab:	cmp    QWORD PTR [rbx+0x18],r8
   1400021af:	jae    0x1400021c2
   1400021b1:	mov    r8,QWORD PTR [rbx+0x10]
   1400021b5:	mov    rdx,rdi
   1400021b8:	mov    rcx,rbx
   1400021bb:	call   0x1400023f8
   1400021c0:	jmp    0x1400021dd
   1400021c2:	test   r8,r8
   1400021c5:	jne    0x1400021dd
   1400021c7:	and    QWORD PTR [rbx+0x10],r8
   1400021cb:	cmp    QWORD PTR [rbx+0x18],0x10
   1400021d0:	jb     0x1400021d7
   1400021d2:	mov    rax,QWORD PTR [rbx]
   1400021d5:	jmp    0x1400021da
   1400021d7:	mov    rax,rbx
   1400021da:	mov    BYTE PTR [rax],0x0
   1400021dd:	test   rdi,rdi
   1400021e0:	je     0x140002218
   1400021e2:	cmp    QWORD PTR [rbx+0x18],0x10
   1400021e7:	jb     0x1400021ee
   1400021e9:	mov    rcx,QWORD PTR [rbx]
   1400021ec:	jmp    0x1400021f1
   1400021ee:	mov    rcx,rbx
   1400021f1:	test   rdi,rdi
   1400021f4:	je     0x140002201
   1400021f6:	mov    r8,rdi
   1400021f9:	mov    rdx,rsi
   1400021fc:	call   0x140020e80
   140002201:	cmp    QWORD PTR [rbx+0x18],0x10
   140002206:	mov    QWORD PTR [rbx+0x10],rdi
   14000220a:	jb     0x140002211
   14000220c:	mov    rax,QWORD PTR [rbx]
   14000220f:	jmp    0x140002214
   140002211:	mov    rax,rbx
   140002214:	mov    BYTE PTR [rax+rdi*1],0x0
   140002218:	mov    rax,rbx
   14000221b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002220:	mov    rsi,QWORD PTR [rsp+0x38]
   140002225:	add    rsp,0x20
   140002229:	pop    rdi
   14000222a:	ret    
   14000222b:	lea    rcx,[rip+0x3b3e6]        # 0x14003d618
   140002232:	call   0x14002a95c
   140002237:	int3   
   140002238:	mov    QWORD PTR [rsp+0x8],rbx
   14000223d:	mov    QWORD PTR [rsp+0x10],rbp
   140002242:	mov    QWORD PTR [rsp+0x18],rsi
   140002247:	push   rdi
   140002248:	sub    rsp,0x20
   14000224c:	mov    rdi,QWORD PTR [rdx+0x10]
   140002250:	mov    rbp,r8
   140002253:	mov    rsi,rdx
   140002256:	mov    rbx,rcx
   140002259:	cmp    rdi,r8
   14000225c:	jb     0x140002334
   140002262:	sub    rdi,r8
   140002265:	cmp    r9,rdi
   140002268:	cmovb  rdi,r9
   14000226c:	cmp    rcx,rdx
   14000226f:	jne    0x14000229d
   140002271:	lea    rax,[rdi+r8*1]
   140002275:	cmp    QWORD PTR [rcx+0x10],rax
   140002279:	jb     0x140002341
   14000227f:	cmp    QWORD PTR [rcx+0x18],0x10
   140002284:	mov    QWORD PTR [rcx+0x10],rax
   140002288:	jb     0x14000228d
   14000228a:	mov    rcx,QWORD PTR [rcx]
   14000228d:	mov    BYTE PTR [rax+rcx*1],0x0
   140002291:	xor    edx,edx
   140002293:	mov    rcx,rbx
   140002296:	call   0x14000235c
   14000229b:	jmp    0x14000231c
   14000229d:	cmp    rdi,0xfffffffffffffffe
   1400022a1:	ja     0x14000234e
   1400022a7:	cmp    QWORD PTR [rcx+0x18],rdi
   1400022ab:	jae    0x1400022bb
   1400022ad:	mov    r8,QWORD PTR [rcx+0x10]
   1400022b1:	mov    rdx,rdi
   1400022b4:	call   0x1400023f8
   1400022b9:	jmp    0x1400022d6
   1400022bb:	test   rdi,rdi
   1400022be:	jne    0x1400022db
   1400022c0:	and    QWORD PTR [rcx+0x10],rdi
   1400022c4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022c9:	jb     0x1400022d0
   1400022cb:	mov    rax,QWORD PTR [rcx]
   1400022ce:	jmp    0x1400022d3
   1400022d0:	mov    rax,rcx
   1400022d3:	mov    BYTE PTR [rax],0x0
   1400022d6:	test   rdi,rdi
   1400022d9:	je     0x14000231c
   1400022db:	cmp    QWORD PTR [rsi+0x18],0x10
   1400022e0:	jb     0x1400022e5
   1400022e2:	mov    rsi,QWORD PTR [rsi]
   1400022e5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400022ea:	jb     0x1400022f1
   1400022ec:	mov    rcx,QWORD PTR [rbx]
   1400022ef:	jmp    0x1400022f4
   1400022f1:	mov    rcx,rbx
   1400022f4:	test   rdi,rdi
   1400022f7:	je     0x140002305
   1400022f9:	lea    rdx,[rsi+rbp*1]
   1400022fd:	mov    r8,rdi
   140002300:	call   0x140020e80
   140002305:	cmp    QWORD PTR [rbx+0x18],0x10
   14000230a:	mov    QWORD PTR [rbx+0x10],rdi
   14000230e:	jb     0x140002315
   140002310:	mov    rax,QWORD PTR [rbx]
   140002313:	jmp    0x140002318
   140002315:	mov    rax,rbx
   140002318:	mov    BYTE PTR [rax+rdi*1],0x0
   14000231c:	mov    rbp,QWORD PTR [rsp+0x38]
   140002321:	mov    rsi,QWORD PTR [rsp+0x40]
   140002326:	mov    rax,rbx
   140002329:	mov    rbx,QWORD PTR [rsp+0x30]
   14000232e:	add    rsp,0x20
   140002332:	pop    rdi
   140002333:	ret    
   140002334:	lea    rcx,[rip+0x3b2c5]        # 0x14003d600
   14000233b:	call   0x14002a994
   140002340:	int3   
   140002341:	lea    rcx,[rip+0x3b2b8]        # 0x14003d600
   140002348:	call   0x14002a994
   14000234d:	int3   
   14000234e:	lea    rcx,[rip+0x3b2c3]        # 0x14003d618
   140002355:	call   0x14002a95c
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	mov    QWORD PTR [rsp+0x8],rbx
   140002361:	push   rdi
   140002362:	sub    rsp,0x20
   140002366:	mov    rdi,QWORD PTR [rcx+0x10]
   14000236a:	mov    rbx,rcx
   14000236d:	cmp    rdi,rdx
   140002370:	jb     0x1400023ea
   140002372:	mov    rax,rdi
   140002375:	sub    rax,rdx
   140002378:	cmp    rax,r8
   14000237b:	ja     0x140002396
   14000237d:	cmp    QWORD PTR [rcx+0x18],0x10
   140002382:	mov    QWORD PTR [rcx+0x10],rdx
   140002386:	jb     0x14000238d
   140002388:	mov    rax,QWORD PTR [rcx]
   14000238b:	jmp    0x140002390
   14000238d:	mov    rax,rcx
   140002390:	mov    BYTE PTR [rax+rdx*1],0x0
   140002394:	jmp    0x1400023dc
   140002396:	test   r8,r8
   140002399:	je     0x1400023dc
   14000239b:	cmp    QWORD PTR [rcx+0x18],0x10
   1400023a0:	jb     0x1400023a7
   1400023a2:	mov    rax,QWORD PTR [rcx]
   1400023a5:	jmp    0x1400023aa
   1400023a7:	mov    rax,rcx
   1400023aa:	sub    rdi,r8
   1400023ad:	lea    rcx,[rax+rdx*1]
   1400023b1:	mov    rax,rdi
   1400023b4:	sub    rax,rdx
   1400023b7:	je     0x1400023c5
   1400023b9:	lea    rdx,[rcx+r8*1]
   1400023bd:	mov    r8,rax
   1400023c0:	call   0x140020e80
   1400023c5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400023ca:	mov    QWORD PTR [rbx+0x10],rdi
   1400023ce:	jb     0x1400023d5
   1400023d0:	mov    rax,QWORD PTR [rbx]
   1400023d3:	jmp    0x1400023d8
   1400023d5:	mov    rax,rbx
   1400023d8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400023dc:	mov    rax,rbx
   1400023df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023e4:	add    rsp,0x20
   1400023e8:	pop    rdi
   1400023e9:	ret    
   1400023ea:	lea    rcx,[rip+0x3b20f]        # 0x14003d600
   1400023f1:	call   0x14002a994
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	mov    rax,rsp
   1400023fb:	mov    QWORD PTR [rax+0x18],r8
   1400023ff:	mov    QWORD PTR [rax+0x10],rdx
   140002403:	mov    QWORD PTR [rax+0x8],rcx
   140002407:	push   rbx
   140002408:	push   rsi
   140002409:	push   rdi
   14000240a:	push   r14
   14000240c:	sub    rsp,0x38
   140002410:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140002418:	mov    rsi,r8
   14000241b:	mov    rbx,rcx
   14000241e:	mov    rdi,rdx
   140002421:	or     rdi,0xf
   140002425:	mov    r9,0xfffffffffffffffe
   14000242c:	cmp    rdi,r9
   14000242f:	jbe    0x140002436
   140002431:	mov    rdi,rdx
   140002434:	jmp    0x140002467
   140002436:	mov    r8,QWORD PTR [rcx+0x18]
   14000243a:	mov    rcx,r8
   14000243d:	shr    rcx,1
   140002440:	movabs rax,0xaaaaaaaaaaaaaaab
   14000244a:	mul    rdi
   14000244d:	shr    rdx,1
   140002450:	cmp    rcx,rdx
   140002453:	jbe    0x140002467
   140002455:	mov    rax,r9
   140002458:	sub    rax,rcx
   14000245b:	cmp    r8,rax
   14000245e:	lea    rdi,[rcx+r8*1]
   140002462:	jbe    0x140002467
   140002464:	mov    rdi,r9
   140002467:	lea    rcx,[rdi+0x1]
   14000246b:	xor    r14d,r14d
   14000246e:	test   rcx,rcx
   140002471:	je     0x14000248b
   140002473:	cmp    rcx,0xffffffffffffffff
   140002477:	ja     0x140002486
   140002479:	call   0x140021a98
   14000247e:	mov    r14,rax
   140002481:	test   rax,rax
   140002484:	jne    0x14000248b
   140002486:	call   0x14002a918
   14000248b:	mov    QWORD PTR [rsp+0x20],r14
   140002490:	jmp    0x1400024a6
   140002492:	mov    rbx,QWORD PTR [rsp+0x60]
   140002497:	mov    rsi,QWORD PTR [rsp+0x70]
   14000249c:	mov    rdi,QWORD PTR [rsp+0x68]
   1400024a1:	mov    r14,QWORD PTR [rsp+0x20]
   1400024a6:	test   rsi,rsi
   1400024a9:	je     0x1400024ca
   1400024ab:	cmp    QWORD PTR [rbx+0x18],0x10
   1400024b0:	jb     0x1400024b7
   1400024b2:	mov    rdx,QWORD PTR [rbx]
   1400024b5:	jmp    0x1400024ba
   1400024b7:	mov    rdx,rbx
   1400024ba:	test   rsi,rsi
   1400024bd:	je     0x1400024ca
   1400024bf:	mov    r8,rsi
   1400024c2:	mov    rcx,r14
   1400024c5:	call   0x140020e80
   1400024ca:	cmp    QWORD PTR [rbx+0x18],0x10
   1400024cf:	jb     0x1400024d9
   1400024d1:	mov    rcx,QWORD PTR [rbx]
   1400024d4:	call   0x140020e30
   1400024d9:	mov    QWORD PTR [rbx+0x18],0xf
   1400024e1:	and    QWORD PTR [rbx+0x10],0x0
   1400024e6:	mov    BYTE PTR [rbx],0x0
   1400024e9:	mov    QWORD PTR [rsp+0x68],rbx
   1400024ee:	mov    QWORD PTR [rsp+0x78],rbx
   1400024f3:	mov    QWORD PTR [rbx],r14
   1400024f6:	mov    QWORD PTR [rbx+0x18],rdi
   1400024fa:	mov    QWORD PTR [rbx+0x10],rsi
   1400024fe:	cmp    rdi,0x10
   140002502:	jb     0x140002507
   140002504:	mov    rbx,QWORD PTR [rbx]
   140002507:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000250b:	add    rsp,0x38
   14000250f:	pop    r14
   140002511:	pop    rdi
   140002512:	pop    rsi
   140002513:	pop    rbx
   140002514:	ret    
   140002515:	int3   
   140002516:	int3   
   140002517:	int3   
   140002518:	lea    rax,[rip+0x3b511]        # 0x14003da30
   14000251f:	mov    QWORD PTR [rcx],rax
   140002522:	ret    
   140002523:	int3   
   140002524:	rex push rbx
   140002526:	sub    rsp,0x20
   14000252a:	lea    rax,[rip+0x3b4ff]        # 0x14003da30
   140002531:	mov    rbx,rcx
   140002534:	mov    QWORD PTR [rcx],rax
   140002537:	test   dl,0x1
   14000253a:	je     0x140002541
   14000253c:	call   0x140020e30
   140002541:	mov    rax,rbx
   140002544:	add    rsp,0x20
   140002548:	pop    rbx
   140002549:	ret    
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	mov    QWORD PTR [rsp+0x8],rbx
   140002551:	push   rdi
   140002552:	sub    rsp,0x20
   140002556:	mov    ebx,edx
   140002558:	mov    rdi,rcx
   14000255b:	call   0x14000257c
   140002560:	test   bl,0x1
   140002563:	je     0x14000256d
   140002565:	mov    rcx,rdi
   140002568:	call   0x140020e30
   14000256d:	mov    rax,rdi
   140002570:	mov    rbx,QWORD PTR [rsp+0x30]
   140002575:	add    rsp,0x20
   140002579:	pop    rdi
   14000257a:	ret    
   14000257b:	int3   
   14000257c:	mov    QWORD PTR [rsp+0x8],rcx
   140002581:	push   rbx
   140002582:	sub    rsp,0x30
   140002586:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000258f:	mov    rbx,rcx
   140002592:	lea    rax,[rip+0x3b4df]        # 0x14003da78
   140002599:	mov    QWORD PTR [rcx],rax
   14000259c:	lea    rax,[rip+0x3b4ad]        # 0x14003da50
   1400025a3:	mov    QWORD PTR [rcx+0x8],rax
   1400025a7:	cmp    QWORD PTR [rcx+0x18],0x0
   1400025ac:	je     0x1400025f8
   1400025ae:	cmp    DWORD PTR [rcx+0x24],0x0
   1400025b2:	jne    0x1400025f8
   1400025b4:	cmp    DWORD PTR [rcx+0x30],0x0
   1400025b8:	je     0x1400025ee
   1400025ba:	cmp    DWORD PTR [rcx+0x20],0x0
   1400025be:	jne    0x1400025ee
   1400025c0:	cmp    DWORD PTR [rip+0x4e7ad],0x0        # 0x140050d74
   1400025c7:	jne    0x1400025d8
   1400025c9:	call   0x140004f38
   1400025ce:	mov    DWORD PTR [rip+0x4e79c],0x1        # 0x140050d74
   1400025d8:	cmp    DWORD PTR [rip+0x4e89d],0x0        # 0x140050e7c
   1400025df:	je     0x1400025ee
   1400025e1:	mov    edx,DWORD PTR [rbx+0x34]
   1400025e4:	mov    rcx,QWORD PTR [rbx+0x18]
   1400025e8:	call   QWORD PTR [rip+0x36dc2]        # 0x1400393b0
   1400025ee:	mov    rcx,QWORD PTR [rbx+0x18]
   1400025f2:	call   QWORD PTR [rip+0x36db0]        # 0x1400393a8
   1400025f8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400025fc:	test   rcx,rcx
   1400025ff:	je     0x140002607
   140002601:	call   QWORD PTR [rip+0x36fb9]        # 0x1400395c0
   140002607:	and    QWORD PTR [rbx+0x10],0x0
   14000260c:	and    QWORD PTR [rbx+0x18],0x0
   140002611:	lea    rax,[rip+0x3b418]        # 0x14003da30
   140002618:	mov    QWORD PTR [rbx+0x8],rax
   14000261c:	lea    rax,[rip+0x3b625]        # 0x14003dc48
   140002623:	mov    QWORD PTR [rbx],rax
   140002626:	add    rsp,0x30
   14000262a:	pop    rbx
   14000262b:	ret    
   14000262c:	mov    QWORD PTR [rsp+0x10],rbx
   140002631:	mov    QWORD PTR [rsp+0x18],rbp
   140002636:	mov    QWORD PTR [rsp+0x20],rsi
   14000263b:	push   rdi
   14000263c:	sub    rsp,0x20
   140002640:	cmp    DWORD PTR [rsp+0x58],0x0
   140002645:	mov    ebp,DWORD PTR [rsp+0x50]
   140002649:	mov    rsi,rdx
   14000264c:	mov    rbx,rcx
   14000264f:	mov    DWORD PTR [rcx+0x28],r9d
   140002653:	mov    DWORD PTR [rcx+0x2c],ebp
   140002656:	je     0x140002668
   140002658:	cmp    DWORD PTR [rip+0x4bea1],0x0        # 0x14004e500
   14000265f:	je     0x140002668
   140002661:	mov    eax,0x1
   140002666:	jmp    0x14000266a
   140002668:	xor    eax,eax
   14000266a:	mov    DWORD PTR [rcx+0x34],r8d
   14000266e:	mov    DWORD PTR [rcx+0x30],eax
   140002671:	add    rcx,0x38
   140002675:	mov    r8,rsi
   140002678:	mov    edi,0x104
   14000267d:	sub    r8,rcx
   140002680:	mov    edx,edi
   140002682:	lea    rax,[rdx+0x7ffffefa]
   140002689:	test   rax,rax
   14000268c:	je     0x1400026a0
   14000268e:	mov    al,BYTE PTR [r8+rcx*1]
   140002692:	test   al,al
   140002694:	je     0x1400026a0
   140002696:	mov    BYTE PTR [rcx],al
   140002698:	inc    rcx
   14000269b:	dec    rdx
   14000269e:	jne    0x140002682
   1400026a0:	test   rdx,rdx
   1400026a3:	jne    0x1400026a8
   1400026a5:	dec    rcx
   1400026a8:	mov    BYTE PTR [rcx],0x0
   1400026ab:	and    QWORD PTR [rbx+0x18],0x0
   1400026b0:	mov    rcx,rbx
   1400026b3:	call   0x14000273c
   1400026b8:	test   eax,eax
   1400026ba:	jne    0x140002726
   1400026bc:	cmp    ebp,0x1
   1400026bf:	jne    0x140002726
   1400026c1:	test   rsi,rsi
   1400026c4:	je     0x1400026e6
   1400026c6:	mov    rcx,rdi
   1400026c9:	mov    rdx,rsi
   1400026cc:	cmp    BYTE PTR [rdx],al
   1400026ce:	je     0x1400026d8
   1400026d0:	inc    rdx
   1400026d3:	dec    rcx
   1400026d6:	jne    0x1400026cc
   1400026d8:	test   rcx,rcx
   1400026db:	jne    0x1400026e1
   1400026dd:	xor    edi,edi
   1400026df:	jmp    0x1400026eb
   1400026e1:	sub    rdi,rcx
   1400026e4:	jmp    0x1400026f0
   1400026e6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400026eb:	mov    eax,0x80070057
   1400026f0:	test   eax,eax
   1400026f2:	js     0x140002726
   1400026f4:	mov    r8d,0x7
   1400026fa:	cmp    rdi,r8
   1400026fd:	jbe    0x140002726
   1400026ff:	lea    rdx,[rip+0x3b362]        # 0x14003da68
   140002706:	mov    rcx,rsi
   140002709:	call   0x14002b0b0
   14000270e:	test   eax,eax
   140002710:	jne    0x140002726
   140002712:	mov    rcx,rbx
   140002715:	call   0x1400029c8
   14000271a:	and    DWORD PTR [rbx+0x2c],0x0
   14000271e:	mov    rcx,rbx
   140002721:	call   0x14000273c
   140002726:	mov    rbx,QWORD PTR [rsp+0x38]
   14000272b:	mov    rbp,QWORD PTR [rsp+0x40]
   140002730:	mov    rsi,QWORD PTR [rsp+0x48]
   140002735:	add    rsp,0x20
   140002739:	pop    rdi
   14000273a:	ret    
   14000273b:	int3   
   14000273c:	mov    rax,rsp
   14000273f:	mov    QWORD PTR [rax+0x10],rbx
   140002743:	mov    QWORD PTR [rax+0x18],rsi
   140002747:	mov    QWORD PTR [rax+0x20],rdi
   14000274b:	push   rbp
   14000274c:	push   r12
   14000274e:	push   r13
   140002750:	push   r14
   140002752:	push   r15
   140002754:	lea    rbp,[rax-0x198]
   14000275b:	sub    rsp,0x270
   140002762:	mov    rax,QWORD PTR [rip+0x4acdf]        # 0x14004d448
   140002769:	xor    rax,rsp
   14000276c:	mov    QWORD PTR [rbp+0x160],rax
   140002773:	xor    r12d,r12d
   140002776:	mov    rbx,rcx
   140002779:	mov    ecx,DWORD PTR [rcx+0x28]
   14000277c:	mov    r8d,r12d
   14000277f:	mov    esi,r12d
   140002782:	mov    edi,r12d
   140002785:	test   ecx,ecx
   140002787:	je     0x14000279b
   140002789:	dec    ecx
   14000278b:	jne    0x1400027a9
   14000278d:	lea    esi,[rcx+0x4]
   140002790:	lea    edi,[rcx+0x6]
   140002793:	mov    r8d,0x4000004
   140002799:	jmp    0x1400027a9
   14000279b:	mov    esi,0x2
   1400027a0:	mov    r8d,0x4000002
   1400027a6:	lea    edi,[rsi+0x2]
   1400027a9:	mov    r13d,0x1
   1400027af:	cmp    DWORD PTR [rbx+0x2c],r13d
   1400027b3:	jne    0x14000280d
   1400027b5:	mov    eax,DWORD PTR [rbx+0x34]
   1400027b8:	lea    r15,[rbx+0x38]
   1400027bc:	xor    r9d,r9d
   1400027bf:	xor    edx,edx
   1400027c1:	or     rcx,0xffffffffffffffff
   1400027c5:	mov    QWORD PTR [rsp+0x28],r15
   1400027ca:	mov    DWORD PTR [rsp+0x20],eax
   1400027ce:	call   QWORD PTR [rip+0x36bec]        # 0x1400393c0
   1400027d4:	mov    QWORD PTR [rbx+0x10],rax
   1400027d8:	call   QWORD PTR [rip+0x36e02]        # 0x1400395e0
   1400027de:	mov    r14d,eax
   1400027e1:	cmp    eax,0xb7
   1400027e6:	jne    0x140002801
   1400027e8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400027ec:	call   QWORD PTR [rip+0x36dce]        # 0x1400395c0
   1400027f2:	mov    QWORD PTR [rbx+0x10],r12
   1400027f6:	cmp    QWORD PTR [rbx+0x10],r12
   1400027fa:	jne    0x140002835
   1400027fc:	jmp    0x140002920
   140002801:	cmp    eax,0x5
   140002804:	jne    0x1400027f6
   140002806:	xor    eax,eax
   140002808:	jmp    0x1400028f0
   14000280d:	cmp    DWORD PTR [rbx+0x2c],r12d
   140002811:	jne    0x140002835
   140002813:	lea    r8,[rbx+0x38]
   140002817:	xor    edx,edx
   140002819:	mov    ecx,edi
   14000281b:	call   QWORD PTR [rip+0x36baf]        # 0x1400393d0
   140002821:	mov    QWORD PTR [rbx+0x10],rax
   140002825:	call   QWORD PTR [rip+0x36db5]        # 0x1400395e0
   14000282b:	cmp    QWORD PTR [rbx+0x10],r12
   14000282f:	je     0x140002844
   140002831:	mov    DWORD PTR [rbx+0x20],r13d
   140002835:	cmp    QWORD PTR [rbx+0x18],r12
   140002839:	je     0x14000286c
   14000283b:	mov    DWORD PTR [rbx+0x24],r13d
   14000283f:	jmp    0x1400028ed
   140002844:	lea    rdx,[rip+0x481b5]        # 0x14004aa00
   14000284b:	lea    rcx,[rsp+0x30]
   140002850:	cmp    eax,0x5
   140002853:	je     0x140002942
   140002859:	mov    DWORD PTR [rsp+0x30],r12d
   14000285e:	cmp    eax,0x2
   140002861:	je     0x14000295f
   140002867:	jmp    0x140002977
   14000286c:	mov    eax,DWORD PTR [rbx+0x34]
   14000286f:	mov    rcx,QWORD PTR [rbx+0x10]
   140002873:	xor    r9d,r9d
   140002876:	xor    r8d,r8d
   140002879:	mov    edx,edi
   14000287b:	mov    QWORD PTR [rsp+0x20],rax
   140002880:	call   QWORD PTR [rip+0x36b1a]        # 0x1400393a0
   140002886:	mov    QWORD PTR [rbx+0x18],rax
   14000288a:	test   rax,rax
   14000288d:	je     0x14000298f
   140002893:	cmp    DWORD PTR [rbx+0x20],r12d
   140002897:	jne    0x1400028ae
   140002899:	mov    edx,DWORD PTR [rbx+0x34]
   14000289c:	mov    r9d,esi
   14000289f:	mov    r8d,0x1000
   1400028a5:	mov    rcx,rax
   1400028a8:	call   QWORD PTR [rip+0x36b0a]        # 0x1400393b8
   1400028ae:	cmp    DWORD PTR [rbx+0x30],r12d
   1400028b2:	je     0x1400028ed
   1400028b4:	cmp    DWORD PTR [rbx+0x20],r12d
   1400028b8:	jne    0x1400028ed
   1400028ba:	cmp    DWORD PTR [rip+0x4e4b3],r12d        # 0x140050d74
   1400028c1:	jne    0x1400028cf
   1400028c3:	call   0x140004f38
   1400028c8:	mov    DWORD PTR [rip+0x4e4a5],r13d        # 0x140050d74
   1400028cf:	cmp    DWORD PTR [rip+0x4e5a6],r12d        # 0x140050e7c
   1400028d6:	je     0x1400028ed
   1400028d8:	mov    edx,DWORD PTR [rbx+0x34]
   1400028db:	mov    rcx,QWORD PTR [rbx+0x18]
   1400028df:	call   QWORD PTR [rip+0x36ae3]        # 0x1400393c8
   1400028e5:	test   eax,eax
   1400028e7:	jne    0x1400028ed
   1400028e9:	mov    DWORD PTR [rbx+0x30],r12d
   1400028ed:	mov    eax,r13d
   1400028f0:	mov    rcx,QWORD PTR [rbp+0x160]
   1400028f7:	xor    rcx,rsp
   1400028fa:	call   0x140020e50
   1400028ff:	lea    r11,[rsp+0x270]
   140002907:	mov    rbx,QWORD PTR [r11+0x38]
   14000290b:	mov    rsi,QWORD PTR [r11+0x40]
   14000290f:	mov    rdi,QWORD PTR [r11+0x48]
   140002913:	mov    rsp,r11
   140002916:	pop    r15
   140002918:	pop    r14
   14000291a:	pop    r13
   14000291c:	pop    r12
   14000291e:	pop    rbp
   14000291f:	ret    
   140002920:	lea    rcx,[rsp+0x40]
   140002925:	mov    r8,r15
   140002928:	mov    edx,r14d
   14000292b:	call   0x140002e28
   140002930:	lea    rdx,[rip+0x48001]        # 0x14004a938
   140002937:	lea    rcx,[rsp+0x40]
   14000293c:	call   0x1400265e8
   140002941:	int3   
   140002942:	mov    DWORD PTR [rsp+0x30],r13d
   140002947:	mov    DWORD PTR [rsp+0x34],0xe1230fb6
   14000294f:	mov    rax,QWORD PTR [rsp+0x30]
   140002954:	mov    QWORD PTR [rsp+0x30],rax
   140002959:	call   0x1400265e8
   14000295e:	int3   
   14000295f:	mov    DWORD PTR [rsp+0x34],0xe1232742
   140002967:	mov    rax,QWORD PTR [rsp+0x30]
   14000296c:	mov    QWORD PTR [rsp+0x30],rax
   140002971:	call   0x1400265e8
   140002976:	int3   
   140002977:	mov    DWORD PTR [rsp+0x34],0xe1232738
   14000297f:	mov    rax,QWORD PTR [rsp+0x30]
   140002984:	mov    QWORD PTR [rsp+0x30],rax
   140002989:	call   0x1400265e8
   14000298e:	int3   
   14000298f:	mov    rcx,QWORD PTR [rbx+0x10]
   140002993:	call   QWORD PTR [rip+0x36c27]        # 0x1400395c0
   140002999:	mov    DWORD PTR [rsp+0x30],r12d
   14000299e:	mov    DWORD PTR [rsp+0x34],0xe1232739
   1400029a6:	mov    rax,QWORD PTR [rsp+0x30]
   1400029ab:	lea    rdx,[rip+0x4804e]        # 0x14004aa00
   1400029b2:	lea    rcx,[rsp+0x30]
   1400029b7:	mov    QWORD PTR [rsp+0x30],rax
   1400029bc:	mov    QWORD PTR [rbx+0x10],r12
   1400029c0:	call   0x1400265e8
   1400029c5:	int3   
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	rex push rbp
   1400029ca:	lea    rbp,[rsp-0x90]
   1400029d2:	sub    rsp,0x190
   1400029d9:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400029e2:	mov    DWORD PTR [rsp+0x60],0x3
   1400029ea:	mov    eax,DWORD PTR [rcx+0x34]
   1400029ed:	mov    DWORD PTR [rsp+0x64],eax
   1400029f1:	mov    eax,DWORD PTR [rcx+0x28]
   1400029f4:	mov    DWORD PTR [rbp+0x6c],eax
   1400029f7:	mov    eax,DWORD PTR [rcx+0x30]
   1400029fa:	mov    DWORD PTR [rbp+0x70],eax
   1400029fd:	lea    r9,[rcx+0x38]
   140002a01:	mov    edx,0x104
   140002a06:	lea    rcx,[rsp+0x68]
   140002a0b:	xor    r8d,r8d
   140002a0e:	lea    rax,[rsp+0x68]
   140002a13:	sub    r9,rax
   140002a16:	lea    rax,[rdx+0x7ffffefa]
   140002a1d:	test   rax,rax
   140002a20:	je     0x140002a34
   140002a22:	mov    al,BYTE PTR [r9+rcx*1]
   140002a26:	test   al,al
   140002a28:	je     0x140002a34
   140002a2a:	mov    BYTE PTR [rcx],al
   140002a2c:	inc    rcx
   140002a2f:	dec    rdx
   140002a32:	jne    0x140002a16
   140002a34:	test   rdx,rdx
   140002a37:	jne    0x140002a42
   140002a39:	dec    rcx
   140002a3c:	mov    r8d,0x8007007a
   140002a42:	mov    BYTE PTR [rcx],0x0
   140002a45:	test   r8d,r8d
   140002a48:	jns    0x140002a7d
   140002a4a:	and    DWORD PTR [rbp+0xa0],0x0
   140002a51:	mov    DWORD PTR [rbp+0xa4],0xe1232738
   140002a5b:	mov    rax,QWORD PTR [rbp+0xa0]
   140002a62:	mov    QWORD PTR [rbp+0xa0],rax
   140002a69:	lea    rdx,[rip+0x47f90]        # 0x14004aa00
   140002a70:	lea    rcx,[rbp+0xa0]
   140002a77:	call   0x1400265e8
   140002a7c:	int3   
   140002a7d:	lea    rax,[rsp+0x60]
   140002a82:	test   rax,rax
   140002a85:	je     0x140002a93
   140002a87:	lea    rcx,[rsp+0x60]
   140002a8c:	call   0x140007914
   140002a91:	jmp    0x140002a98
   140002a93:	mov    eax,0xe1230554
   140002a98:	test   eax,eax
   140002a9a:	je     0x140002ade
   140002a9c:	mov    DWORD PTR [rsp+0x20],0x1
   140002aa4:	mov    DWORD PTR [rsp+0x24],eax
   140002aa8:	and    QWORD PTR [rsp+0x28],0x0
   140002aae:	and    QWORD PTR [rsp+0x30],0x0
   140002ab4:	and    QWORD PTR [rsp+0x38],0x0
   140002aba:	and    QWORD PTR [rsp+0x40],0x0
   140002ac0:	and    QWORD PTR [rsp+0x48],0x0
   140002ac6:	and    QWORD PTR [rsp+0x50],0x0
   140002acc:	lea    rdx,[rip+0x47e45]        # 0x14004a918
   140002ad3:	lea    rcx,[rsp+0x20]
   140002ad8:	call   0x1400265e8
   140002add:	int3   
   140002ade:	add    rsp,0x190
   140002ae5:	pop    rbp
   140002ae6:	ret    
   140002ae7:	int3   
   140002ae8:	mov    rax,QWORD PTR [rcx+0x18]
   140002aec:	ret    
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	sub    rcx,0x8
   140002af4:	jmp    0x14000254c
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	lea    rax,[rip+0x3afe5]        # 0x14003dae8
   140002b03:	mov    QWORD PTR [rcx],rax
   140002b06:	ret    
   140002b07:	int3   
   140002b08:	xor    al,al
   140002b0a:	ret    
   140002b0b:	int3   
   140002b0c:	rex push rbx
   140002b0e:	sub    rsp,0x20
   140002b12:	lea    rax,[rip+0x3afcf]        # 0x14003dae8
   140002b19:	mov    rbx,rcx
   140002b1c:	mov    QWORD PTR [rcx],rax
   140002b1f:	test   dl,0x1
   140002b22:	je     0x140002b29
   140002b24:	call   0x140020e30
   140002b29:	mov    rax,rbx
   140002b2c:	add    rsp,0x20
   140002b30:	pop    rbx
   140002b31:	ret    
   140002b32:	int3   
   140002b33:	int3   
   140002b34:	mov    al,0x1
   140002b36:	ret    
   140002b37:	int3   
   140002b38:	mov    QWORD PTR [rsp+0x8],rcx
   140002b3d:	push   rbx
   140002b3e:	sub    rsp,0x30
   140002b42:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b4b:	mov    rbx,rcx
   140002b4e:	lea    rax,[rip+0x3afc3]        # 0x14003db18
   140002b55:	mov    QWORD PTR [rcx],rax
   140002b58:	lea    rax,[rip+0x3af89]        # 0x14003dae8
   140002b5f:	mov    QWORD PTR [rcx],rax
   140002b62:	test   dl,0x1
   140002b65:	je     0x140002b6c
   140002b67:	call   0x140020e30
   140002b6c:	mov    rax,rbx
   140002b6f:	add    rsp,0x30
   140002b73:	pop    rbx
   140002b74:	ret    
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	mov    QWORD PTR [rsp+0x10],rbx
   140002b7d:	mov    QWORD PTR [rsp+0x18],rbp
   140002b82:	mov    QWORD PTR [rsp+0x20],rsi
   140002b87:	push   rdi
   140002b88:	push   r14
   140002b8a:	push   r15
   140002b8c:	sub    rsp,0x40
   140002b90:	or     rbx,0xffffffffffffffff
   140002b94:	mov    esi,edx
   140002b96:	mov    r14,rcx
   140002b99:	cmp    QWORD PTR [rcx+0x8],rbx
   140002b9d:	je     0x140002c3d
   140002ba3:	mov    r8,r9
   140002ba6:	mov    ecx,edx
   140002ba8:	call   0x1400048b4
   140002bad:	xor    r15d,r15d
   140002bb0:	mov    rdi,rax
   140002bb3:	test   rax,rax
   140002bb6:	je     0x140002c3d
   140002bbc:	inc    rbx
   140002bbf:	cmp    WORD PTR [rax+rbx*2],r15w
   140002bc4:	jne    0x140002bbc
   140002bc6:	lea    rbx,[rbx*2+0x2]
   140002bce:	cmp    rbx,0x3fc
   140002bd5:	jb     0x140002bdc
   140002bd7:	mov    rcx,rax
   140002bda:	jmp    0x140002c37
   140002bdc:	lea    ebp,[rbx+0x8]
   140002bdf:	mov    DWORD PTR [rsp+0x34],esi
   140002be3:	mov    ecx,ebp
   140002be5:	mov    DWORD PTR [rsp+0x30],ebp
   140002be9:	call   0x14002b130
   140002bee:	mov    rsi,rax
   140002bf1:	test   rax,rax
   140002bf4:	je     0x140002c3d
   140002bf6:	mov    rcx,QWORD PTR [rsp+0x30]
   140002bfb:	mov    r8,rbx
   140002bfe:	mov    rdx,rdi
   140002c01:	mov    QWORD PTR [rax],rcx
   140002c04:	lea    rcx,[rax+0x8]
   140002c08:	call   0x140020e80
   140002c0d:	mov    rcx,QWORD PTR [r14+0x8]
   140002c11:	lea    r9,[rsp+0x60]
   140002c16:	mov    r8d,ebp
   140002c19:	mov    rdx,rsi
   140002c1c:	mov    DWORD PTR [rsp+0x60],r15d
   140002c21:	mov    QWORD PTR [rsp+0x20],r15
   140002c26:	call   QWORD PTR [rip+0x365dc]        # 0x140039208
   140002c2c:	mov    rcx,rsi
   140002c2f:	call   0x14002b138
   140002c34:	mov    rcx,rdi
   140002c37:	call   QWORD PTR [rip+0x3697b]        # 0x1400395b8
   140002c3d:	mov    rbx,QWORD PTR [rsp+0x68]
   140002c42:	mov    rbp,QWORD PTR [rsp+0x70]
   140002c47:	mov    rsi,QWORD PTR [rsp+0x78]
   140002c4c:	add    rsp,0x40
   140002c50:	pop    r15
   140002c52:	pop    r14
   140002c54:	pop    rdi
   140002c55:	ret    
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	mov    QWORD PTR [rsp+0x18],rbx
   140002c5d:	mov    DWORD PTR [rsp+0x10],edx
   140002c61:	mov    QWORD PTR [rsp+0x8],rcx
   140002c66:	push   rbp
   140002c67:	push   rsi
   140002c68:	push   rdi
   140002c69:	push   r12
   140002c6b:	push   r13
   140002c6d:	push   r14
   140002c6f:	push   r15
   140002c71:	sub    rsp,0x30
   140002c75:	mov    r14,rcx
   140002c78:	or     rcx,0xffffffffffffffff
   140002c7c:	mov    r15,r9
   140002c7f:	mov    ebp,r8d
   140002c82:	cmp    QWORD PTR [r14+0x8],rcx
   140002c86:	je     0x140002d62
   140002c8c:	xor    esi,esi
   140002c8e:	test   r8d,r8d
   140002c91:	je     0x140002d20
   140002c97:	lea    eax,[rcx+0x9]
   140002c9a:	mov    r13d,ebp
   140002c9d:	mul    rbp
   140002ca0:	cmovo  rax,rcx
   140002ca4:	mov    rcx,rax
   140002ca7:	call   0x14002b130
   140002cac:	mov    rsi,rax
   140002caf:	test   ebp,ebp
   140002cb1:	je     0x140002d20
   140002cb3:	mov    r12,rax
   140002cb6:	sub    r12,r15
   140002cb9:	or     r14,0xffffffffffffffff
   140002cbd:	mov    r8,QWORD PTR [r15]
   140002cc0:	and    DWORD PTR [rsp+0x28],0x0
   140002cc5:	and    QWORD PTR [rsp+0x20],0x0
   140002ccb:	mov    r9d,r14d
   140002cce:	xor    edx,edx
   140002cd0:	xor    ecx,ecx
   140002cd2:	call   QWORD PTR [rip+0x36520]        # 0x1400391f8
   140002cd8:	movsxd rdi,eax
   140002cdb:	mov    rbx,rdi
   140002cde:	add    rbx,rbx
   140002ce1:	call   QWORD PTR [rip+0x36531]        # 0x140039218
   140002ce7:	mov    r8,rbx
   140002cea:	mov    rcx,rax
   140002ced:	xor    edx,edx
   140002cef:	call   QWORD PTR [rip+0x365c3]        # 0x1400392b8
   140002cf5:	mov    r9d,r14d
   140002cf8:	xor    edx,edx
   140002cfa:	mov    QWORD PTR [r12+r15*1],rax
   140002cfe:	mov    r8,QWORD PTR [r15]
   140002d01:	xor    ecx,ecx
   140002d03:	mov    DWORD PTR [rsp+0x28],edi
   140002d07:	mov    QWORD PTR [rsp+0x20],rax
   140002d0c:	call   QWORD PTR [rip+0x364e6]        # 0x1400391f8
   140002d12:	lea    r15,[r15+0x8]
   140002d16:	dec    r13
   140002d19:	jne    0x140002cbd
   140002d1b:	mov    r14,QWORD PTR [rsp+0x70]
   140002d20:	mov    rax,QWORD PTR [r14]
   140002d23:	mov    edx,DWORD PTR [rsp+0x78]
   140002d27:	mov    r9,rsi
   140002d2a:	mov    r8d,ebp
   140002d2d:	mov    rcx,r14
   140002d30:	call   QWORD PTR [rax]
   140002d32:	xor    ebx,ebx
   140002d34:	test   ebp,ebp
   140002d36:	je     0x140002d55
   140002d38:	call   QWORD PTR [rip+0x364da]        # 0x140039218
   140002d3e:	mov    r8,QWORD PTR [rsi+rbx*8]
   140002d42:	xor    edx,edx
   140002d44:	mov    rcx,rax
   140002d47:	call   QWORD PTR [rip+0x3652b]        # 0x140039278
   140002d4d:	inc    rbx
   140002d50:	cmp    rbx,rbp
   140002d53:	jb     0x140002d38
   140002d55:	test   rsi,rsi
   140002d58:	je     0x140002d62
   140002d5a:	mov    rcx,rsi
   140002d5d:	call   0x14002b138
   140002d62:	mov    rbx,QWORD PTR [rsp+0x80]
   140002d6a:	add    rsp,0x30
   140002d6e:	pop    r15
   140002d70:	pop    r14
   140002d72:	pop    r13
   140002d74:	pop    r12
   140002d76:	pop    rdi
   140002d77:	pop    rsi
   140002d78:	pop    rbp
   140002d79:	ret    
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140002d81:	shr    rdx,1
   140002d84:	xor    ebx,ebx
   140002d86:	mov    r10d,0x7ffffffe
   140002d8c:	lea    rax,[rdx-0x1]
   140002d90:	mov    r9d,ebx
   140002d93:	mov    r11d,0x80070057
   140002d99:	cmp    rax,r10
   140002d9c:	cmova  r9d,r11d
   140002da0:	test   r9d,r9d
   140002da3:	js     0x140002de3
   140002da5:	mov    r9d,ebx
   140002da8:	test   rdx,rdx
   140002dab:	je     0x140002dd7
   140002dad:	sub    r10,rdx
   140002db0:	sub    r8,rcx
   140002db3:	lea    rax,[r10+rdx*1]
   140002db7:	test   rax,rax
   140002dba:	je     0x140002dd2
   140002dbc:	movzx  eax,WORD PTR [r8+rcx*1]
   140002dc1:	test   ax,ax
   140002dc4:	je     0x140002dd2
   140002dc6:	mov    WORD PTR [rcx],ax
   140002dc9:	add    rcx,0x2
   140002dcd:	dec    rdx
   140002dd0:	jne    0x140002db3
   140002dd2:	test   rdx,rdx
   140002dd5:	jne    0x140002de8
   140002dd7:	sub    rcx,0x2
   140002ddb:	mov    r9d,0x8007007a
   140002de1:	jmp    0x140002de8
   140002de3:	test   rdx,rdx
   140002de6:	je     0x140002deb
   140002de8:	mov    WORD PTR [rcx],bx
   140002deb:	mov    rbx,QWORD PTR [rsp+0x8]
   140002df0:	mov    eax,r9d
   140002df3:	ret    
   140002df4:	lea    rax,[rip+0x3ad65]        # 0x14003db60
   140002dfb:	mov    QWORD PTR [rcx],rax
   140002dfe:	ret    
   140002dff:	int3   
   140002e00:	rex push rbx
   140002e02:	sub    rsp,0x20
   140002e06:	lea    rax,[rip+0x3ad53]        # 0x14003db60
   140002e0d:	mov    rbx,rcx
   140002e10:	mov    QWORD PTR [rcx],rax
   140002e13:	test   dl,0x1
   140002e16:	je     0x140002e1d
   140002e18:	call   0x140020e30
   140002e1d:	mov    rax,rbx
   140002e20:	add    rsp,0x20
   140002e24:	pop    rbx
   140002e25:	ret    
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	rex push rbx
   140002e2a:	sub    rsp,0x30
   140002e2e:	mov    eax,edx
   140002e30:	mov    rbx,rcx
   140002e33:	sub    eax,0x5
   140002e36:	je     0x140002e58
   140002e38:	dec    eax
   140002e3a:	je     0x140002e51
   140002e3c:	cmp    eax,0xb1
   140002e41:	je     0x140002e4a
   140002e43:	mov    eax,0xe123054a
   140002e48:	jmp    0x140002e5d
   140002e4a:	mov    eax,0xe1230547
   140002e4f:	jmp    0x140002e5d
   140002e51:	mov    eax,0xe1230548
   140002e56:	jmp    0x140002e5d
   140002e58:	mov    eax,0xe1230549
   140002e5d:	mov    DWORD PTR [rcx+0x8],edx
   140002e60:	lea    rdx,[rcx+0xc]
   140002e64:	mov    DWORD PTR [rcx],0x1
   140002e6a:	mov    DWORD PTR [rcx+0x4],eax
   140002e6d:	xor    ecx,ecx
   140002e6f:	mov    WORD PTR [rdx],cx
   140002e72:	test   r8,r8
   140002e75:	je     0x140002ea5
   140002e77:	or     rax,0xffffffffffffffff
   140002e7b:	inc    rax
   140002e7e:	cmp    BYTE PTR [r8+rax*1],cl
   140002e82:	jne    0x140002e7b
   140002e84:	test   rax,rax
   140002e87:	je     0x140002ea5
   140002e89:	mov    r9,r8
   140002e8c:	lea    rcx,[rsp+0x40]
   140002e91:	mov    r8d,0x104
   140002e97:	mov    QWORD PTR [rsp+0x20],0x103
   140002ea0:	call   0x14002b44c
   140002ea5:	mov    rax,rbx
   140002ea8:	add    rsp,0x30
   140002eac:	pop    rbx
   140002ead:	ret    
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	rex push rbx
   140002eb2:	sub    rsp,0x20
   140002eb6:	mov    r8d,DWORD PTR [rdx+0x4]
   140002eba:	mov    eax,DWORD PTR [rdx]
   140002ebc:	mov    rbx,rcx
   140002ebf:	mov    DWORD PTR [rcx+0x4],r8d
   140002ec3:	mov    DWORD PTR [rcx],eax
   140002ec5:	mov    eax,DWORD PTR [rdx+0x8]
   140002ec8:	lea    r8,[rdx+0xc]
   140002ecc:	mov    DWORD PTR [rcx+0x8],eax
   140002ecf:	add    rcx,0xc
   140002ed3:	mov    edx,0x208
   140002ed8:	call   0x140002d7c
   140002edd:	mov    rax,rbx
   140002ee0:	add    rsp,0x20
   140002ee4:	pop    rbx
   140002ee5:	ret    
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	mov    rax,rsp
   140002eeb:	mov    QWORD PTR [rax+0x8],rbx
   140002eef:	mov    QWORD PTR [rax+0x10],rbp
   140002ef3:	mov    QWORD PTR [rax+0x18],rsi
   140002ef7:	mov    QWORD PTR [rax+0x20],rdi
   140002efb:	push   r12
   140002efd:	push   r14
   140002eff:	push   r15
   140002f01:	sub    rsp,0x20
   140002f05:	lea    r12,[rcx+0x8]
   140002f09:	mov    edi,edx
   140002f0b:	mov    r15,rcx
   140002f0e:	mov    ebp,edx
   140002f10:	mov    rcx,r12
   140002f13:	mov    edx,edx
   140002f15:	mov    r14,r8
   140002f18:	call   0x14000322c
   140002f1d:	lea    rcx,[r15+0x20]
   140002f21:	mov    edx,edi
   140002f23:	call   0x1400033e8
   140002f28:	xor    ebx,ebx
   140002f2a:	test   edi,edi
   140002f2c:	je     0x140002f73
   140002f2e:	mov    edi,ebx
   140002f30:	add    r14,0xfffffffffffffff8
   140002f34:	mov    esi,ebx
   140002f36:	mov    rcx,QWORD PTR [r15+0x20]
   140002f3a:	lea    r14,[r14+0x8]
   140002f3e:	mov    rdx,QWORD PTR [r14]
   140002f41:	add    rcx,rsi
   140002f44:	call   0x1400034e4
   140002f49:	mov    rcx,QWORD PTR [r15+0x20]
   140002f4d:	add    rcx,rdi
   140002f50:	cmp    QWORD PTR [rcx+0x18],0x8
   140002f55:	jb     0x140002f5a
   140002f57:	mov    rcx,QWORD PTR [rcx]
   140002f5a:	mov    rax,QWORD PTR [r12]
   140002f5e:	add    rsi,0x20
   140002f62:	add    rdi,0x20
   140002f66:	mov    QWORD PTR [rbx+rax*1],rcx
   140002f6a:	add    rbx,0x8
   140002f6e:	dec    rbp
   140002f71:	jne    0x140002f36
   140002f73:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f78:	mov    rbp,QWORD PTR [rsp+0x48]
   140002f7d:	mov    rsi,QWORD PTR [rsp+0x50]
   140002f82:	mov    rdi,QWORD PTR [rsp+0x58]
   140002f87:	add    rsp,0x20
   140002f8b:	pop    r15
   140002f8d:	pop    r14
   140002f8f:	pop    r12
   140002f91:	ret    
   140002f92:	int3   
   140002f93:	int3   
   140002f94:	mov    r11,rsp
   140002f97:	mov    DWORD PTR [r11+0x18],r8d
   140002f9b:	mov    QWORD PTR [r11+0x8],rcx
   140002f9f:	mov    QWORD PTR [r11+0x20],r9
   140002fa3:	push   rbx
   140002fa4:	sub    rsp,0x30
   140002fa8:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140002fb0:	mov    rbx,rcx
   140002fb3:	mov    DWORD PTR [rcx],0x1
   140002fb9:	mov    DWORD PTR [rcx+0x4],edx
   140002fbc:	xor    eax,eax
   140002fbe:	mov    QWORD PTR [rcx+0x8],rax
   140002fc2:	mov    QWORD PTR [rcx+0x10],rax
   140002fc6:	mov    QWORD PTR [rcx+0x18],rax
   140002fca:	mov    QWORD PTR [rcx+0x20],rax
   140002fce:	mov    QWORD PTR [rcx+0x28],rax
   140002fd2:	mov    QWORD PTR [rcx+0x30],rax
   140002fd6:	mov    edx,DWORD PTR [rsp+0x50]
   140002fda:	test   edx,edx
   140002fdc:	je     0x140002fe8
   140002fde:	lea    r8,[r11+0x20]
   140002fe2:	call   0x140002ee8
   140002fe7:	nop
   140002fe8:	mov    rax,rbx
   140002feb:	add    rsp,0x30
   140002fef:	pop    rbx
   140002ff0:	ret    
   140002ff1:	int3   
   140002ff2:	int3   
   140002ff3:	int3   
   140002ff4:	mov    rax,rsp
   140002ff7:	mov    QWORD PTR [rax+0x8],rcx
   140002ffb:	push   rsi
   140002ffc:	push   rdi
   140002ffd:	push   r12
   140002fff:	push   r14
   140003001:	push   r15
   140003003:	sub    rsp,0x30
   140003007:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000300f:	mov    QWORD PTR [rax+0x10],rbx
   140003013:	mov    QWORD PTR [rax+0x18],rbp
   140003017:	mov    r15,rdx
   14000301a:	mov    r14,rcx
   14000301d:	mov    r8d,DWORD PTR [rdx+0x4]
   140003021:	mov    eax,DWORD PTR [rdx]
   140003023:	mov    DWORD PTR [rcx],eax
   140003025:	mov    DWORD PTR [rcx+0x4],r8d
   140003029:	lea    r12,[rcx+0x8]
   14000302d:	xor    ebx,ebx
   14000302f:	mov    QWORD PTR [r12],rbx
   140003033:	mov    QWORD PTR [r12+0x8],rbx
   140003038:	mov    QWORD PTR [r12+0x10],rbx
   14000303d:	lea    rdi,[rcx+0x20]
   140003041:	mov    QWORD PTR [rdi],rbx
   140003044:	mov    QWORD PTR [rdi+0x8],rbx
   140003048:	mov    QWORD PTR [rdi+0x10],rbx
   14000304c:	mov    rdx,QWORD PTR [rdx+0x28]
   140003050:	sub    rdx,QWORD PTR [r15+0x20]
   140003054:	sar    rdx,0x5
   140003058:	test   rdx,rdx
   14000305b:	je     0x1400030dc
   14000305d:	mov    rcx,rdi
   140003060:	call   0x1400033e8
   140003065:	mov    rdx,QWORD PTR [r15+0x28]
   140003069:	sub    rdx,QWORD PTR [r15+0x20]
   14000306d:	sar    rdx,0x5
   140003071:	mov    rcx,r12
   140003074:	call   0x14000322c
   140003079:	mov    rax,QWORD PTR [rdi+0x8]
   14000307d:	sub    rax,QWORD PTR [rdi]
   140003080:	sar    rax,0x5
   140003084:	test   rax,rax
   140003087:	je     0x1400030dc
   140003089:	mov    ebp,ebx
   14000308b:	mov    rsi,rbp
   14000308e:	shl    rsi,0x5
   140003092:	mov    rdx,QWORD PTR [r15+0x20]
   140003096:	add    rdx,rsi
   140003099:	mov    rcx,QWORD PTR [rdi]
   14000309c:	add    rcx,rsi
   14000309f:	cmp    rcx,rdx
   1400030a2:	je     0x1400030b0
   1400030a4:	or     r9,0xffffffffffffffff
   1400030a8:	xor    r8d,r8d
   1400030ab:	call   0x140003718
   1400030b0:	mov    rcx,QWORD PTR [rdi]
   1400030b3:	add    rcx,rsi
   1400030b6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400030bb:	jb     0x1400030c0
   1400030bd:	mov    rcx,QWORD PTR [rcx]
   1400030c0:	mov    rax,QWORD PTR [r12]
   1400030c4:	mov    QWORD PTR [rax+rbp*8],rcx
   1400030c8:	inc    ebx
   1400030ca:	mov    ebp,ebx
   1400030cc:	mov    rax,QWORD PTR [rdi+0x8]
   1400030d0:	sub    rax,QWORD PTR [rdi]
   1400030d3:	sar    rax,0x5
   1400030d7:	cmp    rbp,rax
   1400030da:	jb     0x14000308b
   1400030dc:	mov    rax,r14
   1400030df:	mov    rbx,QWORD PTR [rsp+0x68]
   1400030e4:	mov    rbp,QWORD PTR [rsp+0x70]
   1400030e9:	add    rsp,0x30
   1400030ed:	pop    r15
   1400030ef:	pop    r14
   1400030f1:	pop    r12
   1400030f3:	pop    rdi
   1400030f4:	pop    rsi
   1400030f5:	ret    
   1400030f6:	int3   
   1400030f7:	int3   
   1400030f8:	mov    QWORD PTR [rsp+0x8],rcx
   1400030fd:	push   rbx
   1400030fe:	sub    rsp,0x30
   140003102:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000310b:	mov    rbx,rcx
   14000310e:	add    rcx,0x20
   140003112:	call   0x140003370
   140003117:	nop
   140003118:	mov    rcx,QWORD PTR [rbx+0x8]
   14000311c:	test   rcx,rcx
   14000311f:	je     0x140003135
   140003121:	call   0x140020e30
   140003126:	and    QWORD PTR [rbx+0x8],0x0
   14000312b:	and    QWORD PTR [rbx+0x10],0x0
   140003130:	and    QWORD PTR [rbx+0x18],0x0
   140003135:	add    rsp,0x30
   140003139:	pop    rbx
   14000313a:	ret    
   14000313b:	int3   
   14000313c:	rex push rbx
   14000313e:	sub    rsp,0x80
   140003145:	mov    rax,QWORD PTR [rip+0x4a2fc]        # 0x14004d448
   14000314c:	xor    rax,rsp
   14000314f:	mov    QWORD PTR [rsp+0x70],rax
   140003154:	cmp    DWORD PTR [rcx],0x1
   140003157:	mov    rbx,rdx
   14000315a:	jne    0x14000317d
   14000315c:	mov    r8,QWORD PTR [rcx+0x10]
   140003160:	sub    r8,QWORD PTR [rcx+0x8]
   140003164:	sar    r8,0x3
   140003168:	mov    rax,r8
   14000316b:	neg    rax
   14000316e:	mov    rax,QWORD PTR [rdx]
   140003171:	mov    edx,DWORD PTR [rcx+0x4]
   140003174:	sbb    r9,r9
   140003177:	and    r9,QWORD PTR [rcx+0x8]
   14000317b:	jmp    0x1400031b4
   14000317d:	mov    r9d,DWORD PTR [rcx+0x4]
   140003181:	lea    r8,[rip+0x3a2cc]        # 0x14003d454
   140003188:	lea    rcx,[rsp+0x30]
   14000318d:	mov    edx,0x40
   140003192:	call   0x140001004
   140003197:	lea    rax,[rsp+0x30]
   14000319c:	lea    r9,[rsp+0x20]
   1400031a1:	mov    QWORD PTR [rsp+0x20],rax
   1400031a6:	mov    rax,QWORD PTR [rbx]
   1400031a9:	mov    edx,0xe123055d
   1400031ae:	mov    r8d,0x1
   1400031b4:	mov    rcx,rbx
   1400031b7:	call   QWORD PTR [rax]
   1400031b9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400031be:	xor    rcx,rsp
   1400031c1:	call   0x140020e50
   1400031c6:	add    rsp,0x80
   1400031cd:	pop    rbx
   1400031ce:	ret    
   1400031cf:	int3   
   1400031d0:	rex push rbx
   1400031d2:	sub    rsp,0x20
   1400031d6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400031db:	mov    rbx,rcx
   1400031de:	jb     0x1400031e8
   1400031e0:	mov    rcx,QWORD PTR [rcx]
   1400031e3:	call   0x140020e30
   1400031e8:	xor    eax,eax
   1400031ea:	mov    QWORD PTR [rbx+0x18],0x7
   1400031f2:	mov    QWORD PTR [rbx+0x10],rax
   1400031f6:	mov    WORD PTR [rbx],ax
   1400031f9:	add    rsp,0x20
   1400031fd:	pop    rbx
   1400031fe:	ret    
   1400031ff:	int3   
   140003200:	rex push rbx
   140003202:	sub    rsp,0x20
   140003206:	mov    rbx,rcx
   140003209:	mov    rcx,QWORD PTR [rcx]
   14000320c:	test   rcx,rcx
   14000320f:	je     0x140003224
   140003211:	call   0x140020e30
   140003216:	and    QWORD PTR [rbx],0x0
   14000321a:	and    QWORD PTR [rbx+0x8],0x0
   14000321f:	and    QWORD PTR [rbx+0x10],0x0
   140003224:	add    rsp,0x20
   140003228:	pop    rbx
   140003229:	ret    
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	mov    rax,rsp
   14000322f:	mov    QWORD PTR [rax+0x8],rcx
   140003233:	push   rdi
   140003234:	sub    rsp,0x40
   140003238:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003240:	mov    QWORD PTR [rax+0x10],rbx
   140003244:	mov    QWORD PTR [rax+0x18],rsi
   140003248:	mov    rbx,rdx
   14000324b:	mov    rsi,rcx
   14000324e:	mov    rax,QWORD PTR [rcx+0x8]
   140003252:	mov    r9,QWORD PTR [rcx]
   140003255:	mov    r8,rax
   140003258:	sub    r8,r9
   14000325b:	sar    r8,0x3
   14000325f:	cmp    r8,rdx
   140003262:	jbe    0x1400032a4
   140003264:	lea    rbx,[r9+rdx*8]
   140003268:	cmp    rbx,r9
   14000326b:	jne    0x140003276
   14000326d:	mov    QWORD PTR [rcx+0x8],r9
   140003271:	jmp    0x14000335f
   140003276:	cmp    rbx,rax
   140003279:	je     0x14000335f
   14000327f:	mov    rdi,rax
   140003282:	sub    rdi,rax
   140003285:	and    rdi,0xfffffffffffffff8
   140003289:	mov    r8,rdi
   14000328c:	mov    rdx,rax
   14000328f:	mov    rcx,rbx
   140003292:	call   0x140020e80
   140003297:	lea    rax,[rdi+rbx*1]
   14000329b:	mov    QWORD PTR [rsi+0x8],rax
   14000329f:	jmp    0x14000335f
   1400032a4:	jae    0x14000335f
   1400032aa:	mov    r10,rdx
   1400032ad:	sub    r10,r8
   1400032b0:	mov    rdx,QWORD PTR [rcx+0x10]
   1400032b4:	mov    rcx,rdx
   1400032b7:	sub    rcx,rax
   1400032ba:	sar    rcx,0x3
   1400032be:	cmp    rcx,r10
   1400032c1:	jae    0x140003315
   1400032c3:	movabs rcx,0x1fffffffffffffff
   1400032cd:	mov    rax,rcx
   1400032d0:	sub    rax,r8
   1400032d3:	cmp    rax,r10
   1400032d6:	jae    0x1400032e5
   1400032d8:	lea    rcx,[rip+0x3a861]        # 0x14003db40
   1400032df:	call   0x14002a95c
   1400032e4:	int3   
   1400032e5:	lea    r11,[r8+r10*1]
   1400032e9:	sub    rdx,r9
   1400032ec:	sar    rdx,0x3
   1400032f0:	mov    rax,rdx
   1400032f3:	shr    rax,1
   1400032f6:	sub    rcx,rax
   1400032f9:	cmp    rcx,rdx
   1400032fc:	jae    0x140003302
   1400032fe:	xor    edx,edx
   140003300:	jmp    0x140003305
   140003302:	add    rdx,rax
   140003305:	cmp    rdx,r11
   140003308:	cmovb  rdx,r11
   14000330c:	mov    rcx,rsi
   14000330f:	call   0x140003858
   140003314:	nop
   140003315:	mov    rdx,QWORD PTR [rsi+0x8]
   140003319:	mov    rax,rdx
   14000331c:	sub    rax,QWORD PTR [rsi]
   14000331f:	sar    rax,0x3
   140003323:	mov    rcx,rbx
   140003326:	sub    rcx,rax
   140003329:	mov    QWORD PTR [rsp+0x20],rcx
   14000332e:	mov    QWORD PTR [rsp+0x28],rdx
   140003333:	test   rcx,rcx
   140003336:	je     0x140003345
   140003338:	and    QWORD PTR [rdx],0x0
   14000333c:	dec    rcx
   14000333f:	add    rdx,0x8
   140003343:	jmp    0x140003329
   140003345:	mov    rcx,QWORD PTR [rsi+0x8]
   140003349:	mov    rax,rcx
   14000334c:	sub    rax,QWORD PTR [rsi]
   14000334f:	sar    rax,0x3
   140003353:	sub    rbx,rax
   140003356:	lea    rax,[rcx+rbx*8]
   14000335a:	jmp    0x14000329b
   14000335f:	mov    rbx,QWORD PTR [rsp+0x58]
   140003364:	mov    rsi,QWORD PTR [rsp+0x60]
   140003369:	add    rsp,0x40
   14000336d:	pop    rdi
   14000336e:	ret    
   14000336f:	int3   
   140003370:	mov    QWORD PTR [rsp+0x8],rbx
   140003375:	mov    QWORD PTR [rsp+0x10],rbp
   14000337a:	mov    QWORD PTR [rsp+0x18],rsi
   14000337f:	push   rdi
   140003380:	sub    rsp,0x20
   140003384:	mov    rbx,QWORD PTR [rcx]
   140003387:	xor    ebp,ebp
   140003389:	mov    rdi,rcx
   14000338c:	test   rbx,rbx
   14000338f:	je     0x1400033d1
   140003391:	mov    rsi,QWORD PTR [rcx+0x8]
   140003395:	jmp    0x1400033b9
   140003397:	cmp    QWORD PTR [rbx+0x18],0x8
   14000339c:	jb     0x1400033a6
   14000339e:	mov    rcx,QWORD PTR [rbx]
   1400033a1:	call   0x140020e30
   1400033a6:	mov    QWORD PTR [rbx+0x18],0x7
   1400033ae:	mov    QWORD PTR [rbx+0x10],rbp
   1400033b2:	mov    WORD PTR [rbx],bp
   1400033b5:	add    rbx,0x20
   1400033b9:	cmp    rbx,rsi
   1400033bc:	jne    0x140003397
   1400033be:	mov    rcx,QWORD PTR [rdi]
   1400033c1:	call   0x140020e30
   1400033c6:	mov    QWORD PTR [rdi],rbp
   1400033c9:	mov    QWORD PTR [rdi+0x8],rbp
   1400033cd:	mov    QWORD PTR [rdi+0x10],rbp
   1400033d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033d6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400033db:	mov    rsi,QWORD PTR [rsp+0x40]
   1400033e0:	add    rsp,0x20
   1400033e4:	pop    rdi
   1400033e5:	ret    
   1400033e6:	int3   
   1400033e7:	int3   
   1400033e8:	mov    rax,rsp
   1400033eb:	mov    QWORD PTR [rax+0x8],rcx
   1400033ef:	push   rdi
   1400033f0:	sub    rsp,0x40
   1400033f4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400033fc:	mov    QWORD PTR [rax+0x10],rbx
   140003400:	mov    rbx,rdx
   140003403:	mov    rdi,rcx
   140003406:	mov    rcx,QWORD PTR [rcx+0x8]
   14000340a:	sub    rcx,QWORD PTR [rdi]
   14000340d:	sar    rcx,0x5
   140003411:	cmp    rcx,rdx
   140003414:	jbe    0x140003435
   140003416:	shl    rbx,0x5
   14000341a:	add    rbx,QWORD PTR [rdi]
   14000341d:	mov    r9,QWORD PTR [rdi+0x8]
   140003421:	mov    r8,rbx
   140003424:	lea    rdx,[rax+0x8]
   140003428:	mov    rcx,rdi
   14000342b:	call   0x140003614
   140003430:	jmp    0x1400034d7
   140003435:	jae    0x1400034d7
   14000343b:	mov    r8,rdx
   14000343e:	sub    r8,rcx
   140003441:	mov    rdx,QWORD PTR [rdi+0x10]
   140003445:	mov    rax,rdx
   140003448:	sub    rax,QWORD PTR [rdi+0x8]
   14000344c:	sar    rax,0x5
   140003450:	cmp    rax,r8
   140003453:	jae    0x1400034a7
   140003455:	movabs r9,0x7ffffffffffffff
   14000345f:	mov    rax,r9
   140003462:	sub    rax,rcx
   140003465:	cmp    rax,r8
   140003468:	jae    0x140003477
   14000346a:	lea    rcx,[rip+0x3a6cf]        # 0x14003db40
   140003471:	call   0x14002a95c
   140003476:	int3   
   140003477:	lea    r10,[rcx+r8*1]
   14000347b:	sub    rdx,QWORD PTR [rdi]
   14000347e:	sar    rdx,0x5
   140003482:	mov    rax,rdx
   140003485:	shr    rax,1
   140003488:	sub    r9,rax
   14000348b:	cmp    r9,rdx
   14000348e:	jae    0x140003494
   140003490:	xor    edx,edx
   140003492:	jmp    0x140003497
   140003494:	add    rdx,rax
   140003497:	cmp    rdx,r10
   14000349a:	cmovb  rdx,r10
   14000349e:	mov    rcx,rdi
   1400034a1:	call   0x140003910
   1400034a6:	nop
   1400034a7:	mov    rcx,QWORD PTR [rdi+0x8]
   1400034ab:	mov    rax,rcx
   1400034ae:	sub    rax,QWORD PTR [rdi]
   1400034b1:	sar    rax,0x5
   1400034b5:	mov    rdx,rbx
   1400034b8:	sub    rdx,rax
   1400034bb:	call   0x140003be4
   1400034c0:	nop
   1400034c1:	mov    rax,QWORD PTR [rdi+0x8]
   1400034c5:	sub    rax,QWORD PTR [rdi]
   1400034c8:	sar    rax,0x5
   1400034cc:	sub    rbx,rax
   1400034cf:	shl    rbx,0x5
   1400034d3:	add    QWORD PTR [rdi+0x8],rbx
   1400034d7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400034dc:	add    rsp,0x40
   1400034e0:	pop    rdi
   1400034e1:	ret    
   1400034e2:	int3   
   1400034e3:	int3   
   1400034e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400034e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400034ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400034f3:	push   rdi
   1400034f4:	sub    rsp,0x20
   1400034f8:	xor    ebp,ebp
   1400034fa:	mov    rsi,rdx
   1400034fd:	mov    rbx,rcx
   140003500:	cmp    WORD PTR [rdx],bp
   140003503:	jne    0x140003509
   140003505:	mov    edi,ebp
   140003507:	jmp    0x140003516
   140003509:	or     rdi,0xffffffffffffffff
   14000350d:	inc    rdi
   140003510:	cmp    WORD PTR [rdx+rdi*2],bp
   140003514:	jne    0x14000350d
   140003516:	mov    rdx,QWORD PTR [rcx+0x18]
   14000351a:	cmp    rdx,0x8
   14000351e:	jb     0x140003525
   140003520:	mov    rax,QWORD PTR [rcx]
   140003523:	jmp    0x140003528
   140003525:	mov    rax,rcx
   140003528:	cmp    rsi,rax
   14000352b:	jb     0x14000356d
   14000352d:	cmp    rdx,0x8
   140003531:	jb     0x140003536
   140003533:	mov    rcx,QWORD PTR [rcx]
   140003536:	mov    rax,QWORD PTR [rbx+0x10]
   14000353a:	lea    rcx,[rcx+rax*2]
   14000353e:	cmp    rcx,rsi
   140003541:	jbe    0x14000356d
   140003543:	cmp    rdx,0x8
   140003547:	jb     0x14000354e
   140003549:	mov    rax,QWORD PTR [rbx]
   14000354c:	jmp    0x140003551
   14000354e:	mov    rax,rbx
   140003551:	sub    rsi,rax
   140003554:	mov    r9,rdi
   140003557:	mov    rdx,rbx
   14000355a:	sar    rsi,1
   14000355d:	mov    rcx,rbx
   140003560:	mov    r8,rsi
   140003563:	call   0x140003718
   140003568:	mov    rbx,rax
   14000356b:	jmp    0x1400035ec
   14000356d:	movabs rax,0x7ffffffffffffffe
   140003577:	cmp    rdi,rax
   14000357a:	ja     0x140003604
   140003580:	cmp    rdx,rdi
   140003583:	jae    0x140003596
   140003585:	mov    r8,QWORD PTR [rbx+0x10]
   140003589:	mov    rdx,rdi
   14000358c:	mov    rcx,rbx
   14000358f:	call   0x140003aac
   140003594:	jmp    0x1400035b0
   140003596:	test   rdi,rdi
   140003599:	jne    0x1400035b5
   14000359b:	mov    QWORD PTR [rbx+0x10],rbp
   14000359f:	cmp    rdx,0x8
   1400035a3:	jb     0x1400035aa
   1400035a5:	mov    rax,QWORD PTR [rbx]
   1400035a8:	jmp    0x1400035ad
   1400035aa:	mov    rax,rbx
   1400035ad:	mov    WORD PTR [rax],bp
   1400035b0:	test   rdi,rdi
   1400035b3:	je     0x1400035ec
   1400035b5:	cmp    QWORD PTR [rbx+0x18],0x8
   1400035ba:	jb     0x1400035c1
   1400035bc:	mov    rcx,QWORD PTR [rbx]
   1400035bf:	jmp    0x1400035c4
   1400035c1:	mov    rcx,rbx
   1400035c4:	test   rdi,rdi
   1400035c7:	je     0x1400035d5
   1400035c9:	lea    r8,[rdi+rdi*1]
   1400035cd:	mov    rdx,rsi
   1400035d0:	call   0x140020e80
   1400035d5:	cmp    QWORD PTR [rbx+0x18],0x8
   1400035da:	mov    QWORD PTR [rbx+0x10],rdi
   1400035de:	jb     0x1400035e5
   1400035e0:	mov    rax,QWORD PTR [rbx]
   1400035e3:	jmp    0x1400035e8
   1400035e5:	mov    rax,rbx
   1400035e8:	mov    WORD PTR [rax+rdi*2],bp
   1400035ec:	mov    rbp,QWORD PTR [rsp+0x38]
   1400035f1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400035f6:	mov    rax,rbx
   1400035f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035fe:	add    rsp,0x20
   140003602:	pop    rdi
   140003603:	ret    
   140003604:	lea    rcx,[rip+0x3a00d]        # 0x14003d618
   14000360b:	call   0x14002a95c
   140003610:	int3   
   140003611:	int3   
   140003612:	int3   
   140003613:	int3   
   140003614:	mov    rax,rsp
   140003617:	mov    QWORD PTR [rax+0x8],rbx
   14000361b:	mov    QWORD PTR [rax+0x10],rbp
   14000361f:	mov    QWORD PTR [rax+0x20],rsi
   140003623:	mov    QWORD PTR [rax+0x18],r8
   140003627:	push   rdi
   140003628:	push   r14
   14000362a:	push   r15
   14000362c:	sub    rsp,0x20
   140003630:	mov    rdi,QWORD PTR [rcx]
   140003633:	mov    rbx,r9
   140003636:	mov    r15,rdx
   140003639:	mov    rsi,rcx
   14000363c:	cmp    r8,rdi
   14000363f:	jne    0x140003688
   140003641:	mov    rbp,QWORD PTR [rcx+0x8]
   140003645:	cmp    rbx,rbp
   140003648:	jne    0x140003688
   14000364a:	cmp    rdi,rbp
   14000364d:	je     0x14000367f
   14000364f:	xor    r14d,r14d
   140003652:	cmp    QWORD PTR [rdi+0x18],0x8
   140003657:	jb     0x140003661
   140003659:	mov    rcx,QWORD PTR [rdi]
   14000365c:	call   0x140020e30
   140003661:	mov    QWORD PTR [rdi+0x18],0x7
   140003669:	mov    QWORD PTR [rdi+0x10],r14
   14000366d:	mov    WORD PTR [rdi],r14w
   140003671:	add    rdi,0x20
   140003675:	cmp    rdi,rbp
   140003678:	jne    0x140003652
   14000367a:	mov    r8,QWORD PTR [rsp+0x50]
   14000367f:	mov    rax,QWORD PTR [rsi]
   140003682:	mov    QWORD PTR [rsi+0x8],rax
   140003686:	jmp    0x1400036f6
   140003688:	cmp    r8,rbx
   14000368b:	je     0x1400036f6
   14000368d:	mov    rbp,QWORD PTR [rcx+0x8]
   140003691:	mov    rdi,r8
   140003694:	cmp    rbx,rbp
   140003697:	je     0x1400036b6
   140003699:	mov    rdx,rbx
   14000369c:	mov    rcx,rdi
   14000369f:	call   0x140003c58
   1400036a4:	add    rbx,0x20
   1400036a8:	add    rdi,0x20
   1400036ac:	cmp    rbx,rbp
   1400036af:	jne    0x140003699
   1400036b1:	mov    r8,QWORD PTR [rsp+0x50]
   1400036b6:	mov    rbp,QWORD PTR [rsi+0x8]
   1400036ba:	mov    rbx,rdi
   1400036bd:	cmp    rdi,rbp
   1400036c0:	je     0x1400036f2
   1400036c2:	xor    r14d,r14d
   1400036c5:	cmp    QWORD PTR [rbx+0x18],0x8
   1400036ca:	jb     0x1400036d4
   1400036cc:	mov    rcx,QWORD PTR [rbx]
   1400036cf:	call   0x140020e30
   1400036d4:	mov    QWORD PTR [rbx+0x18],0x7
   1400036dc:	mov    QWORD PTR [rbx+0x10],r14
   1400036e0:	mov    WORD PTR [rbx],r14w
   1400036e4:	add    rbx,0x20
   1400036e8:	cmp    rbx,rbp
   1400036eb:	jne    0x1400036c5
   1400036ed:	mov    r8,QWORD PTR [rsp+0x50]
   1400036f2:	mov    QWORD PTR [rsi+0x8],rdi
   1400036f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400036fb:	mov    rbp,QWORD PTR [rsp+0x48]
   140003700:	mov    rsi,QWORD PTR [rsp+0x58]
   140003705:	mov    QWORD PTR [r15],r8
   140003708:	mov    rax,r15
   14000370b:	add    rsp,0x20
   14000370f:	pop    r15
   140003711:	pop    r14
   140003713:	pop    rdi
   140003714:	ret    
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	mov    rax,rsp
   14000371b:	mov    QWORD PTR [rax+0x8],rbx
   14000371f:	mov    QWORD PTR [rax+0x10],rbp
   140003723:	mov    QWORD PTR [rax+0x18],rsi
   140003727:	mov    QWORD PTR [rax+0x20],rdi
   14000372b:	push   r14
   14000372d:	sub    rsp,0x20
   140003731:	mov    rdi,QWORD PTR [rdx+0x10]
   140003735:	mov    rbp,r8
   140003738:	mov    r14,rdx
   14000373b:	mov    rbx,rcx
   14000373e:	cmp    rdi,r8
   140003741:	jb     0x140003830
   140003747:	sub    rdi,r8
   14000374a:	cmp    r9,rdi
   14000374d:	cmovb  rdi,r9
   140003751:	cmp    rcx,rdx
   140003754:	jne    0x140003787
   140003756:	lea    rax,[rdi+r8*1]
   14000375a:	cmp    QWORD PTR [rcx+0x10],rax
   14000375e:	jb     0x14000383d
   140003764:	cmp    QWORD PTR [rcx+0x18],0x8
   140003769:	mov    QWORD PTR [rcx+0x10],rax
   14000376d:	jb     0x140003772
   14000376f:	mov    rcx,QWORD PTR [rcx]
   140003772:	xor    esi,esi
   140003774:	xor    edx,edx
   140003776:	mov    WORD PTR [rcx+rax*2],si
   14000377a:	mov    rcx,rbx
   14000377d:	call   0x1400039fc
   140003782:	jmp    0x140003812
   140003787:	movabs rax,0x7ffffffffffffffe
   140003791:	cmp    rdi,rax
   140003794:	ja     0x14000384a
   14000379a:	xor    esi,esi
   14000379c:	cmp    QWORD PTR [rcx+0x18],rdi
   1400037a0:	jae    0x1400037b0
   1400037a2:	mov    r8,QWORD PTR [rcx+0x10]
   1400037a6:	mov    rdx,rdi
   1400037a9:	call   0x140003aac
   1400037ae:	jmp    0x1400037cb
   1400037b0:	test   rdi,rdi
   1400037b3:	jne    0x1400037d0
   1400037b5:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037ba:	mov    QWORD PTR [rcx+0x10],rsi
   1400037be:	jb     0x1400037c5
   1400037c0:	mov    rax,QWORD PTR [rcx]
   1400037c3:	jmp    0x1400037c8
   1400037c5:	mov    rax,rcx
   1400037c8:	mov    WORD PTR [rax],si
   1400037cb:	test   rdi,rdi
   1400037ce:	je     0x140003812
   1400037d0:	cmp    QWORD PTR [r14+0x18],0x8
   1400037d5:	jb     0x1400037da
   1400037d7:	mov    r14,QWORD PTR [r14]
   1400037da:	cmp    QWORD PTR [rbx+0x18],0x8
   1400037df:	jb     0x1400037e6
   1400037e1:	mov    rcx,QWORD PTR [rbx]
   1400037e4:	jmp    0x1400037e9
   1400037e6:	mov    rcx,rbx
   1400037e9:	test   rdi,rdi
   1400037ec:	je     0x1400037fb
   1400037ee:	lea    r8,[rdi+rdi*1]
   1400037f2:	lea    rdx,[r14+rbp*2]
   1400037f6:	call   0x140020e80
   1400037fb:	cmp    QWORD PTR [rbx+0x18],0x8
   140003800:	mov    QWORD PTR [rbx+0x10],rdi
   140003804:	jb     0x14000380b
   140003806:	mov    rax,QWORD PTR [rbx]
   140003809:	jmp    0x14000380e
   14000380b:	mov    rax,rbx
   14000380e:	mov    WORD PTR [rax+rdi*2],si
   140003812:	mov    rbp,QWORD PTR [rsp+0x38]
   140003817:	mov    rsi,QWORD PTR [rsp+0x40]
   14000381c:	mov    rdi,QWORD PTR [rsp+0x48]
   140003821:	mov    rax,rbx
   140003824:	mov    rbx,QWORD PTR [rsp+0x30]
   140003829:	add    rsp,0x20
   14000382d:	pop    r14
   14000382f:	ret    
   140003830:	lea    rcx,[rip+0x39dc9]        # 0x14003d600
   140003837:	call   0x14002a994
   14000383c:	int3   
   14000383d:	lea    rcx,[rip+0x39dbc]        # 0x14003d600
   140003844:	call   0x14002a994
   140003849:	int3   
   14000384a:	lea    rcx,[rip+0x39dc7]        # 0x14003d618
   140003851:	call   0x14002a95c
   140003856:	int3   
   140003857:	int3   
   140003858:	mov    rax,rsp
   14000385b:	push   r14
   14000385d:	sub    rsp,0x30
   140003861:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003869:	mov    QWORD PTR [rax+0x8],rbx
   14000386d:	mov    QWORD PTR [rax+0x18],rsi
   140003871:	mov    QWORD PTR [rax+0x20],rdi
   140003875:	mov    rsi,rdx
   140003878:	mov    rdi,rcx
   14000387b:	xor    ebx,ebx
   14000387d:	mov    QWORD PTR [rsp+0x48],rbx
   140003882:	test   rdx,rdx
   140003885:	je     0x1400038b5
   140003887:	movabs rax,0x1fffffffffffffff
   140003891:	cmp    rdx,rax
   140003894:	ja     0x1400038af
   140003896:	mov    rcx,rdx
   140003899:	shl    rcx,0x3
   14000389d:	call   0x140021a98
   1400038a2:	mov    rbx,rax
   1400038a5:	mov    QWORD PTR [rsp+0x48],rax
   1400038aa:	test   rax,rax
   1400038ad:	jne    0x1400038b5
   1400038af:	call   0x14002a918
   1400038b4:	nop
   1400038b5:	mov    r8,QWORD PTR [rdi+0x8]
   1400038b9:	sub    r8,QWORD PTR [rdi]
   1400038bc:	and    r8,0xfffffffffffffff8
   1400038c0:	mov    rdx,QWORD PTR [rdi]
   1400038c3:	mov    rcx,rbx
   1400038c6:	call   0x140020e80
   1400038cb:	nop
   1400038cc:	mov    rcx,QWORD PTR [rdi]
   1400038cf:	mov    r14,QWORD PTR [rdi+0x8]
   1400038d3:	sub    r14,rcx
   1400038d6:	sar    r14,0x3
   1400038da:	test   rcx,rcx
   1400038dd:	je     0x1400038e4
   1400038df:	call   0x140020e30
   1400038e4:	lea    rax,[rbx+rsi*8]
   1400038e8:	mov    QWORD PTR [rdi+0x10],rax
   1400038ec:	lea    rax,[rbx+r14*8]
   1400038f0:	mov    QWORD PTR [rdi+0x8],rax
   1400038f4:	mov    QWORD PTR [rdi],rbx
   1400038f7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400038fc:	mov    rsi,QWORD PTR [rsp+0x50]
   140003901:	mov    rdi,QWORD PTR [rsp+0x58]
   140003906:	add    rsp,0x30
   14000390a:	pop    r14
   14000390c:	ret    
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    rax,rsp
   140003913:	push   rdi
   140003914:	push   r12
   140003916:	push   r13
   140003918:	push   r14
   14000391a:	push   r15
   14000391c:	sub    rsp,0x40
   140003920:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003928:	mov    QWORD PTR [rax+0x8],rbx
   14000392c:	mov    QWORD PTR [rax+0x18],rsi
   140003930:	mov    rdi,rdx
   140003933:	mov    r15,rcx
   140003936:	xor    r13d,r13d
   140003939:	mov    esi,r13d
   14000393c:	mov    QWORD PTR [rsp+0x78],r13
   140003941:	test   rdx,rdx
   140003944:	je     0x140003974
   140003946:	movabs rax,0x7ffffffffffffff
   140003950:	cmp    rdx,rax
   140003953:	ja     0x14000396e
   140003955:	mov    rcx,rdx
   140003958:	shl    rcx,0x5
   14000395c:	call   0x140021a98
   140003961:	mov    rsi,rax
   140003964:	mov    QWORD PTR [rsp+0x78],rax
   140003969:	test   rax,rax
   14000396c:	jne    0x140003974
   14000396e:	call   0x14002a918
   140003973:	nop
   140003974:	mov    r8,rsi
   140003977:	mov    rdx,QWORD PTR [r15+0x8]
   14000397b:	mov    rcx,QWORD PTR [r15]
   14000397e:	call   0x140003d04
   140003983:	nop
   140003984:	mov    r12,QWORD PTR [r15+0x8]
   140003988:	mov    rbx,QWORD PTR [r15]
   14000398b:	mov    r14,r12
   14000398e:	sub    r14,rbx
   140003991:	test   rbx,rbx
   140003994:	je     0x1400039c8
   140003996:	jmp    0x1400039bb
   140003998:	cmp    QWORD PTR [rbx+0x18],0x8
   14000399d:	jb     0x1400039a7
   14000399f:	mov    rcx,QWORD PTR [rbx]
   1400039a2:	call   0x140020e30
   1400039a7:	mov    QWORD PTR [rbx+0x18],0x7
   1400039af:	mov    QWORD PTR [rbx+0x10],r13
   1400039b3:	mov    WORD PTR [rbx],r13w
   1400039b7:	add    rbx,0x20
   1400039bb:	cmp    rbx,r12
   1400039be:	jne    0x140003998
   1400039c0:	mov    rcx,QWORD PTR [r15]
   1400039c3:	call   0x140020e30
   1400039c8:	shl    rdi,0x5
   1400039cc:	add    rdi,rsi
   1400039cf:	mov    QWORD PTR [r15+0x10],rdi
   1400039d3:	and    r14,0xffffffffffffffe0
   1400039d7:	add    r14,rsi
   1400039da:	mov    QWORD PTR [r15+0x8],r14
   1400039de:	mov    QWORD PTR [r15],rsi
   1400039e1:	lea    r11,[rsp+0x40]
   1400039e6:	mov    rbx,QWORD PTR [r11+0x30]
   1400039ea:	mov    rsi,QWORD PTR [r11+0x40]
   1400039ee:	mov    rsp,r11
   1400039f1:	pop    r15
   1400039f3:	pop    r14
   1400039f5:	pop    r13
   1400039f7:	pop    r12
   1400039f9:	pop    rdi
   1400039fa:	ret    
   1400039fb:	int3   
   1400039fc:	mov    QWORD PTR [rsp+0x8],rbx
   140003a01:	mov    QWORD PTR [rsp+0x10],rsi
   140003a06:	push   rdi
   140003a07:	sub    rsp,0x20
   140003a0b:	mov    rdi,QWORD PTR [rcx+0x10]
   140003a0f:	mov    r9,r8
   140003a12:	mov    rbx,rcx
   140003a15:	cmp    rdi,rdx
   140003a18:	jb     0x140003a9f
   140003a1e:	mov    rax,rdi
   140003a21:	sub    rax,rdx
   140003a24:	cmp    rax,r8
   140003a27:	ja     0x140003a44
   140003a29:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a2e:	mov    QWORD PTR [rcx+0x10],rdx
   140003a32:	jb     0x140003a39
   140003a34:	mov    rax,QWORD PTR [rcx]
   140003a37:	jmp    0x140003a3c
   140003a39:	mov    rax,rcx
   140003a3c:	xor    esi,esi
   140003a3e:	mov    WORD PTR [rax+rdx*2],si
   140003a42:	jmp    0x140003a8c
   140003a44:	xor    esi,esi
   140003a46:	test   r8,r8
   140003a49:	je     0x140003a8c
   140003a4b:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a50:	jb     0x140003a57
   140003a52:	mov    rax,QWORD PTR [rcx]
   140003a55:	jmp    0x140003a5a
   140003a57:	mov    rax,rcx
   140003a5a:	sub    rdi,r8
   140003a5d:	lea    rcx,[rax+rdx*2]
   140003a61:	mov    r8,rdi
   140003a64:	sub    r8,rdx
   140003a67:	je     0x140003a75
   140003a69:	lea    rdx,[rcx+r9*2]
   140003a6d:	add    r8,r8
   140003a70:	call   0x140020e80
   140003a75:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a7a:	mov    QWORD PTR [rbx+0x10],rdi
   140003a7e:	jb     0x140003a85
   140003a80:	mov    rax,QWORD PTR [rbx]
   140003a83:	jmp    0x140003a88
   140003a85:	mov    rax,rbx
   140003a88:	mov    WORD PTR [rax+rdi*2],si
   140003a8c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a91:	mov    rax,rbx
   140003a94:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a99:	add    rsp,0x20
   140003a9d:	pop    rdi
   140003a9e:	ret    
   140003a9f:	lea    rcx,[rip+0x39b5a]        # 0x14003d600
   140003aa6:	call   0x14002a994
   140003aab:	int3   
   140003aac:	mov    rax,rsp
   140003aaf:	mov    QWORD PTR [rax+0x18],r8
   140003ab3:	mov    QWORD PTR [rax+0x10],rdx
   140003ab7:	mov    QWORD PTR [rax+0x8],rcx
   140003abb:	push   rbx
   140003abc:	push   rsi
   140003abd:	push   rdi
   140003abe:	push   r14
   140003ac0:	push   r15
   140003ac2:	sub    rsp,0x30
   140003ac6:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140003ace:	mov    r15,r8
   140003ad1:	mov    rbx,rcx
   140003ad4:	mov    rsi,rdx
   140003ad7:	or     rsi,0x7
   140003adb:	movabs r9,0x7ffffffffffffffe
   140003ae5:	cmp    rsi,r9
   140003ae8:	jbe    0x140003aef
   140003aea:	mov    rsi,rdx
   140003aed:	jmp    0x140003b20
   140003aef:	mov    r8,QWORD PTR [rcx+0x18]
   140003af3:	mov    rcx,r8
   140003af6:	shr    rcx,1
   140003af9:	movabs rax,0xaaaaaaaaaaaaaaab
   140003b03:	mul    rsi
   140003b06:	shr    rdx,1
   140003b09:	cmp    rcx,rdx
   140003b0c:	jbe    0x140003b20
   140003b0e:	mov    rax,r9
   140003b11:	sub    rax,rcx
   140003b14:	cmp    r8,rax
   140003b17:	lea    rsi,[rcx+r8*1]
   140003b1b:	jbe    0x140003b20
   140003b1d:	mov    rsi,r9
   140003b20:	lea    rcx,[rsi+0x1]
   140003b24:	xor    edi,edi
   140003b26:	mov    r14d,edi
   140003b29:	test   rcx,rcx
   140003b2c:	je     0x140003b52
   140003b2e:	movabs rax,0x7fffffffffffffff
   140003b38:	cmp    rcx,rax
   140003b3b:	ja     0x140003b4d
   140003b3d:	add    rcx,rcx
   140003b40:	call   0x140021a98
   140003b45:	mov    r14,rax
   140003b48:	test   rax,rax
   140003b4b:	jne    0x140003b52
   140003b4d:	call   0x14002a918
   140003b52:	mov    QWORD PTR [rsp+0x20],r14
   140003b57:	jmp    0x140003b6f
   140003b59:	xor    edi,edi
   140003b5b:	mov    rbx,QWORD PTR [rsp+0x60]
   140003b60:	mov    r15,QWORD PTR [rsp+0x70]
   140003b65:	mov    rsi,QWORD PTR [rsp+0x68]
   140003b6a:	mov    r14,QWORD PTR [rsp+0x20]
   140003b6f:	test   r15,r15
   140003b72:	je     0x140003b94
   140003b74:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b79:	jb     0x140003b80
   140003b7b:	mov    rdx,QWORD PTR [rbx]
   140003b7e:	jmp    0x140003b83
   140003b80:	mov    rdx,rbx
   140003b83:	test   r15,r15
   140003b86:	je     0x140003b94
   140003b88:	lea    r8,[r15+r15*1]
   140003b8c:	mov    rcx,r14
   140003b8f:	call   0x140020e80
   140003b94:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b99:	jb     0x140003ba3
   140003b9b:	mov    rcx,QWORD PTR [rbx]
   140003b9e:	call   0x140020e30
   140003ba3:	mov    QWORD PTR [rbx+0x18],0x7
   140003bab:	mov    QWORD PTR [rbx+0x10],rdi
   140003baf:	mov    WORD PTR [rbx],di
   140003bb2:	mov    QWORD PTR [rsp+0x68],rbx
   140003bb7:	mov    QWORD PTR [rsp+0x78],rbx
   140003bbc:	mov    QWORD PTR [rbx],r14
   140003bbf:	mov    QWORD PTR [rbx+0x18],rsi
   140003bc3:	mov    QWORD PTR [rbx+0x10],r15
   140003bc7:	cmp    rsi,0x8
   140003bcb:	jb     0x140003bd0
   140003bcd:	mov    rbx,QWORD PTR [rbx]
   140003bd0:	mov    WORD PTR [rbx+r15*2],di
   140003bd5:	add    rsp,0x30
   140003bd9:	pop    r15
   140003bdb:	pop    r14
   140003bdd:	pop    rdi
   140003bde:	pop    rsi
   140003bdf:	pop    rbx
   140003be0:	ret    
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	mov    rax,rsp
   140003be7:	mov    QWORD PTR [rax+0x20],r9
   140003beb:	mov    QWORD PTR [rax+0x18],r8
   140003bef:	mov    QWORD PTR [rax+0x8],rcx
   140003bf3:	sub    rsp,0x38
   140003bf7:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003bff:	mov    QWORD PTR [rsp+0x58],rcx
   140003c04:	xor    r8d,r8d
   140003c07:	test   rdx,rdx
   140003c0a:	je     0x140003c50
   140003c0c:	mov    QWORD PTR [rsp+0x50],rcx
   140003c11:	test   rcx,rcx
   140003c14:	je     0x140003c3d
   140003c16:	mov    QWORD PTR [rcx+0x10],r8
   140003c1a:	mov    QWORD PTR [rcx+0x18],r8
   140003c1e:	mov    QWORD PTR [rcx+0x18],0x7
   140003c26:	mov    QWORD PTR [rcx+0x10],r8
   140003c2a:	cmp    QWORD PTR [rcx+0x18],0x8
   140003c2f:	jb     0x140003c36
   140003c31:	mov    rax,QWORD PTR [rcx]
   140003c34:	jmp    0x140003c39
   140003c36:	mov    rax,rcx
   140003c39:	mov    WORD PTR [rax],r8w
   140003c3d:	dec    rdx
   140003c40:	mov    QWORD PTR [rsp+0x48],rdx
   140003c45:	add    rcx,0x20
   140003c49:	mov    QWORD PTR [rsp+0x40],rcx
   140003c4e:	jmp    0x140003c07
   140003c50:	add    rsp,0x38
   140003c54:	ret    
   140003c55:	int3   
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	rex push rdi
   140003c5a:	sub    rsp,0x30
   140003c5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003c67:	mov    QWORD PTR [rsp+0x50],rbx
   140003c6c:	mov    QWORD PTR [rsp+0x58],rsi
   140003c71:	mov    rdi,rdx
   140003c74:	mov    rbx,rcx
   140003c77:	cmp    rcx,rdx
   140003c7a:	je     0x140003cee
   140003c7c:	cmp    QWORD PTR [rcx+0x18],0x8
   140003c81:	jb     0x140003c8b
   140003c83:	mov    rcx,QWORD PTR [rcx]
   140003c86:	call   0x140020e30
   140003c8b:	mov    QWORD PTR [rbx+0x18],0x7
   140003c93:	xor    esi,esi
   140003c95:	mov    QWORD PTR [rbx+0x10],rsi
   140003c99:	mov    WORD PTR [rbx],si
   140003c9c:	cmp    QWORD PTR [rdi+0x18],0x8
   140003ca1:	jae    0x140003cbc
   140003ca3:	mov    r8,QWORD PTR [rdi+0x10]
   140003ca7:	inc    r8
   140003caa:	je     0x140003ccf
   140003cac:	add    r8,r8
   140003caf:	mov    rdx,rdi
   140003cb2:	mov    rcx,rbx
   140003cb5:	call   0x140020e80
   140003cba:	jmp    0x140003ccf
   140003cbc:	mov    QWORD PTR [rsp+0x40],rbx
   140003cc1:	mov    QWORD PTR [rsp+0x48],rbx
   140003cc6:	mov    rax,QWORD PTR [rdi]
   140003cc9:	mov    QWORD PTR [rbx],rax
   140003ccc:	mov    QWORD PTR [rdi],rsi
   140003ccf:	mov    rax,QWORD PTR [rdi+0x10]
   140003cd3:	mov    QWORD PTR [rbx+0x10],rax
   140003cd7:	mov    rax,QWORD PTR [rdi+0x18]
   140003cdb:	mov    QWORD PTR [rbx+0x18],rax
   140003cdf:	mov    QWORD PTR [rdi+0x18],0x7
   140003ce7:	mov    QWORD PTR [rdi+0x10],rsi
   140003ceb:	mov    WORD PTR [rdi],si
   140003cee:	mov    rax,rbx
   140003cf1:	mov    rbx,QWORD PTR [rsp+0x50]
   140003cf6:	mov    rsi,QWORD PTR [rsp+0x58]
   140003cfb:	add    rsp,0x30
   140003cff:	pop    rdi
   140003d00:	ret    
   140003d01:	int3   
   140003d02:	int3   
   140003d03:	int3   
   140003d04:	mov    QWORD PTR [rsp+0x20],r9
   140003d09:	mov    QWORD PTR [rsp+0x18],r8
   140003d0e:	push   rbx
   140003d0f:	push   rsi
   140003d10:	push   rdi
   140003d11:	sub    rsp,0x30
   140003d15:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003d1e:	mov    rbx,r8
   140003d21:	mov    rsi,rdx
   140003d24:	mov    rdi,rcx
   140003d27:	mov    QWORD PTR [rsp+0x68],rbx
   140003d2c:	cmp    rdi,rsi
   140003d2f:	je     0x140003d50
   140003d31:	mov    r8,rdi
   140003d34:	mov    rdx,rbx
   140003d37:	call   0x140003d5c
   140003d3c:	add    rbx,0x20
   140003d40:	mov    QWORD PTR [rsp+0x60],rbx
   140003d45:	add    rdi,0x20
   140003d49:	mov    QWORD PTR [rsp+0x50],rdi
   140003d4e:	jmp    0x140003d2c
   140003d50:	mov    rax,rbx
   140003d53:	add    rsp,0x30
   140003d57:	pop    rdi
   140003d58:	pop    rsi
   140003d59:	pop    rbx
   140003d5a:	ret    
   140003d5b:	int3   
   140003d5c:	mov    rax,rsp
   140003d5f:	mov    QWORD PTR [rax+0x10],rdx
   140003d63:	mov    QWORD PTR [rax+0x8],rcx
   140003d67:	push   rbx
   140003d68:	push   rsi
   140003d69:	push   rdi
   140003d6a:	sub    rsp,0x30
   140003d6e:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003d76:	mov    rdi,r8
   140003d79:	mov    rbx,rdx
   140003d7c:	mov    QWORD PTR [rax+0x8],rdx
   140003d80:	xor    esi,esi
   140003d82:	test   rdx,rdx
   140003d85:	je     0x140003de8
   140003d87:	mov    QWORD PTR [rdx+0x18],0x7
   140003d8f:	mov    QWORD PTR [rdx+0x10],rsi
   140003d93:	mov    WORD PTR [rdx],si
   140003d96:	cmp    QWORD PTR [r8+0x18],0x8
   140003d9b:	jae    0x140003db6
   140003d9d:	mov    r8,QWORD PTR [r8+0x10]
   140003da1:	inc    r8
   140003da4:	je     0x140003dc9
   140003da6:	add    r8,r8
   140003da9:	mov    rdx,rdi
   140003dac:	mov    rcx,rbx
   140003daf:	call   0x140020e80
   140003db4:	jmp    0x140003dc9
   140003db6:	mov    QWORD PTR [rsp+0x68],rdx
   140003dbb:	mov    QWORD PTR [rsp+0x28],rdx
   140003dc0:	mov    rax,QWORD PTR [r8]
   140003dc3:	mov    QWORD PTR [rdx],rax
   140003dc6:	mov    QWORD PTR [r8],rsi
   140003dc9:	mov    rax,QWORD PTR [rdi+0x10]
   140003dcd:	mov    QWORD PTR [rbx+0x10],rax
   140003dd1:	mov    rax,QWORD PTR [rdi+0x18]
   140003dd5:	mov    QWORD PTR [rbx+0x18],rax
   140003dd9:	mov    QWORD PTR [rdi+0x18],0x7
   140003de1:	mov    QWORD PTR [rdi+0x10],rsi
   140003de5:	mov    WORD PTR [rdi],si
   140003de8:	add    rsp,0x30
   140003dec:	pop    rdi
   140003ded:	pop    rsi
   140003dee:	pop    rbx
   140003def:	ret    
   140003df0:	mov    QWORD PTR [rsp+0x18],r8
   140003df5:	mov    QWORD PTR [rsp+0x20],r9
   140003dfa:	push   rbx
   140003dfb:	push   rsi
   140003dfc:	push   rdi
   140003dfd:	sub    rsp,0x20
   140003e01:	xor    edi,edi
   140003e03:	lea    rax,[rdx-0x1]
   140003e07:	mov    rsi,rcx
   140003e0a:	cmp    rax,0x7ffffffe
   140003e10:	mov    ecx,0x80070057
   140003e15:	cmova  edi,ecx
   140003e18:	test   edi,edi
   140003e1a:	js     0x140003e50
   140003e1c:	lea    rbx,[rdx-0x1]
   140003e20:	lea    r9,[rsp+0x58]
   140003e25:	mov    rcx,rsi
   140003e28:	mov    rdx,rbx
   140003e2b:	xor    edi,edi
   140003e2d:	call   0x14002b5e4
   140003e32:	test   eax,eax
   140003e34:	js     0x140003e45
   140003e36:	cdqe   
   140003e38:	cmp    rax,rbx
   140003e3b:	ja     0x140003e45
   140003e3d:	jne    0x140003e58
   140003e3f:	mov    BYTE PTR [rbx+rsi*1],dil
   140003e43:	jmp    0x140003e58
   140003e45:	mov    BYTE PTR [rbx+rsi*1],dil
   140003e49:	mov    edi,0x8007007a
   140003e4e:	jmp    0x140003e58
   140003e50:	test   rdx,rdx
   140003e53:	je     0x140003e58
   140003e55:	mov    BYTE PTR [rsi],0x0
   140003e58:	mov    eax,edi
   140003e5a:	add    rsp,0x20
   140003e5e:	pop    rdi
   140003e5f:	pop    rsi
   140003e60:	pop    rbx
   140003e61:	ret    
   140003e62:	int3   
   140003e63:	int3   
   140003e64:	sub    rsp,0x28
   140003e68:	mov    DWORD PTR [rsp+0x30],ecx
   140003e6c:	lea    rdx,[rip+0x46bfd]        # 0x14004aa70
   140003e73:	lea    rcx,[rsp+0x30]
   140003e78:	call   0x1400265e8
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	sub    rsp,0x28
   140003e84:	call   QWORD PTR [rip+0x35756]        # 0x1400395e0
   140003e8a:	movzx  ecx,ax
   140003e8d:	or     ecx,0x80070000
   140003e93:	test   eax,eax
   140003e95:	cmovle ecx,eax
   140003e98:	call   0x140003e64
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    QWORD PTR [rsp+0x18],rbx
   140003ea5:	push   rbp
   140003ea6:	push   rsi
   140003ea7:	push   rdi
   140003ea8:	push   r14
   140003eaa:	push   r15
   140003eac:	sub    rsp,0x50
   140003eb0:	mov    rax,QWORD PTR [rip+0x49591]        # 0x14004d448
   140003eb7:	xor    rax,rsp
   140003eba:	mov    QWORD PTR [rsp+0x40],rax
   140003ebf:	mov    r14,r9
   140003ec2:	mov    ebx,edx
   140003ec4:	mov    rdi,rcx
   140003ec7:	mov    r15d,0xc0000000
   140003ecd:	test   edx,edx
   140003ecf:	jns    0x140003ee1
   140003ed1:	mov    eax,edx
   140003ed3:	and    eax,r15d
   140003ed6:	cmp    eax,r15d
   140003ed9:	jne    0x140003ee1
   140003edb:	mov    rbp,QWORD PTR [rcx+0x10]
   140003edf:	jmp    0x140003ee5
   140003ee1:	mov    rbp,QWORD PTR [rcx+0x8]
   140003ee5:	cmp    edx,0xa1230917
   140003eeb:	je     0x140003f55
   140003eed:	mov    esi,edx
   140003eef:	shr    esi,0x1e
   140003ef2:	lea    eax,[rsi-0x2]
   140003ef5:	cmp    eax,0x1
   140003ef8:	ja     0x140003f55
   140003efa:	movzx  r9d,dx
   140003efe:	lea    r8,[rip+0x39cb3]        # 0x14003dbb8
   140003f05:	lea    rcx,[rsp+0x28]
   140003f0a:	mov    edx,0x14
   140003f0f:	call   0x140001004
   140003f14:	xor    ecx,ecx
   140003f16:	lea    rax,[rsp+0x28]
   140003f1b:	cmp    esi,0x3
   140003f1e:	lea    r8,[rsp+0x20]
   140003f23:	mov    QWORD PTR [rsp+0x20],rax
   140003f28:	setne  cl
   140003f2b:	add    ecx,0x21230001
   140003f31:	call   0x1400048b4
   140003f36:	mov    rsi,rax
   140003f39:	test   rax,rax
   140003f3c:	je     0x140003f55
   140003f3e:	mov    r8,rbp
   140003f41:	mov    rdx,rax
   140003f44:	mov    rcx,rdi
   140003f47:	call   0x1400044c0
   140003f4c:	mov    rcx,rsi
   140003f4f:	call   QWORD PTR [rip+0x35663]        # 0x1400395b8
   140003f55:	mov    r8,r14
   140003f58:	mov    ecx,ebx
   140003f5a:	call   0x1400048b4
   140003f5f:	mov    rsi,rax
   140003f62:	test   rax,rax
   140003f65:	je     0x140003f7e
   140003f67:	mov    r8,rbp
   140003f6a:	mov    rdx,rax
   140003f6d:	mov    rcx,rdi
   140003f70:	call   0x1400044c0
   140003f75:	mov    rcx,rsi
   140003f78:	call   QWORD PTR [rip+0x3563a]        # 0x1400395b8
   140003f7e:	and    ebx,r15d
   140003f81:	cmp    ebx,r15d
   140003f84:	jne    0x140003f8a
   140003f86:	mov    BYTE PTR [rdi+0x18],0x1
   140003f8a:	mov    rcx,QWORD PTR [rsp+0x40]
   140003f8f:	xor    rcx,rsp
   140003f92:	call   0x140020e50
   140003f97:	mov    rbx,QWORD PTR [rsp+0x90]
   140003f9f:	add    rsp,0x50
   140003fa3:	pop    r15
   140003fa5:	pop    r14
   140003fa7:	pop    rdi
   140003fa8:	pop    rsi
   140003fa9:	pop    rbp
   140003faa:	ret    
   140003fab:	int3   
   140003fac:	mov    QWORD PTR [rsp+0x18],rbx
   140003fb1:	push   rbp
   140003fb2:	push   rsi
   140003fb3:	push   rdi
   140003fb4:	push   r14
   140003fb6:	push   r15
   140003fb8:	sub    rsp,0x40
   140003fbc:	mov    rax,QWORD PTR [rip+0x49485]        # 0x14004d448
   140003fc3:	xor    rax,rsp
   140003fc6:	mov    QWORD PTR [rsp+0x38],rax
   140003fcb:	mov    r14,r9
   140003fce:	mov    ebx,edx
   140003fd0:	mov    rdi,rcx
   140003fd3:	mov    r15d,0xc0000000
   140003fd9:	test   edx,edx
   140003fdb:	jns    0x140003fed
   140003fdd:	mov    eax,edx
   140003fdf:	and    eax,r15d
   140003fe2:	cmp    eax,r15d
   140003fe5:	jne    0x140003fed
   140003fe7:	mov    rbp,QWORD PTR [rcx+0x10]
   140003feb:	jmp    0x140003ff1
   140003fed:	mov    rbp,QWORD PTR [rcx+0x8]
   140003ff1:	cmp    edx,0xa1230917
   140003ff7:	je     0x140004061
   140003ff9:	mov    esi,edx
   140003ffb:	shr    esi,0x1e
   140003ffe:	lea    eax,[rsi-0x2]
   140004001:	cmp    eax,0x1
   140004004:	ja     0x140004061
   140004006:	movzx  r9d,dx
   14000400a:	lea    r8,[rip+0x39baf]        # 0x14003dbc0
   140004011:	lea    rcx,[rsp+0x28]
   140004016:	mov    edx,0xa
   14000401b:	call   0x140003df0
   140004020:	xor    ecx,ecx
   140004022:	lea    rax,[rsp+0x28]
   140004027:	cmp    esi,0x3
   14000402a:	lea    r8,[rsp+0x20]
   14000402f:	mov    QWORD PTR [rsp+0x20],rax
   140004034:	setne  cl
   140004037:	add    ecx,0x21230001
   14000403d:	call   0x140004860
   140004042:	mov    rsi,rax
   140004045:	test   rax,rax
   140004048:	je     0x140004061
   14000404a:	mov    r8,rbp
   14000404d:	mov    rdx,rax
   140004050:	mov    rcx,rdi
   140004053:	call   0x1400041ec
   140004058:	mov    rcx,rsi
   14000405b:	call   QWORD PTR [rip+0x35557]        # 0x1400395b8
   140004061:	mov    r8,r14
   140004064:	mov    ecx,ebx
   140004066:	call   0x140004860
   14000406b:	mov    rsi,rax
   14000406e:	test   rax,rax
   140004071:	je     0x14000408a
   140004073:	mov    r8,rbp
   140004076:	mov    rdx,rax
   140004079:	mov    rcx,rdi
   14000407c:	call   0x1400041ec
   140004081:	mov    rcx,rsi
   140004084:	call   QWORD PTR [rip+0x3552e]        # 0x1400395b8
   14000408a:	and    ebx,r15d
   14000408d:	cmp    ebx,r15d
   140004090:	jne    0x140004096
   140004092:	mov    BYTE PTR [rdi+0x18],0x1
   140004096:	mov    rcx,QWORD PTR [rsp+0x38]
   14000409b:	xor    rcx,rsp
   14000409e:	call   0x140020e50
   1400040a3:	mov    rbx,QWORD PTR [rsp+0x80]
   1400040ab:	add    rsp,0x40
   1400040af:	pop    r15
   1400040b1:	pop    r14
   1400040b3:	pop    rdi
   1400040b4:	pop    rsi
   1400040b5:	pop    rbp
   1400040b6:	ret    
   1400040b7:	int3   
   1400040b8:	mov    al,BYTE PTR [rcx+0x18]
   1400040bb:	ret    
   1400040bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400040c1:	mov    QWORD PTR [rsp+0x20],rsi
   1400040c6:	push   rdi
   1400040c7:	sub    rsp,0x50
   1400040cb:	mov    rax,QWORD PTR [rip+0x49376]        # 0x14004d448
   1400040d2:	xor    rax,rsp
   1400040d5:	mov    QWORD PTR [rsp+0x40],rax
   1400040da:	mov    rbx,rcx
   1400040dd:	mov    rcx,rdx
   1400040e0:	call   0x140023a40
   1400040e5:	mov    ecx,eax
   1400040e7:	mov    edi,eax
   1400040e9:	call   0x1400282fc
   1400040ee:	mov    rcx,rax
   1400040f1:	mov    rsi,rax
   1400040f4:	call   QWORD PTR [rip+0x35126]        # 0x140039220
   1400040fa:	cmp    eax,0x2
   1400040fd:	je     0x140004106
   1400040ff:	xor    al,al
   140004101:	jmp    0x140004199
   140004106:	test   edi,edi
   140004108:	je     0x140004120
   14000410a:	dec    edi
   14000410c:	je     0x140004119
   14000410e:	dec    edi
   140004110:	jne    0x14000412e
   140004112:	mov    ecx,0xfffffff4
   140004117:	jmp    0x140004125
   140004119:	mov    ecx,0xfffffff5
   14000411e:	jmp    0x140004125
   140004120:	mov    ecx,0xfffffff6
   140004125:	call   QWORD PTR [rip+0x350d5]        # 0x140039200
   14000412b:	mov    rsi,rax
   14000412e:	lea    rdx,[rsp+0x20]
   140004133:	mov    rcx,rsi
   140004136:	call   QWORD PTR [rip+0x3516c]        # 0x1400392a8
   14000413c:	test   eax,eax
   14000413e:	je     0x1400040ff
   140004140:	lea    rdx,[rsp+0x28]
   140004145:	mov    rcx,rsi
   140004148:	call   QWORD PTR [rip+0x352b2]        # 0x140039400
   14000414e:	mov    edx,0x1
   140004153:	test   eax,eax
   140004155:	je     0x14000417c
   140004157:	movsx  eax,WORD PTR [rsp+0x34]
   14000415c:	movsx  ecx,WORD PTR [rsp+0x38]
   140004161:	sub    ecx,eax
   140004163:	cmp    QWORD PTR [rbx+0x28],0x7fffffff
   14000416b:	lea    eax,[rdx+rcx*1]
   14000416e:	cdqe   
   140004170:	mov    QWORD PTR [rbx+0x20],rax
   140004174:	jne    0x140004189
   140004176:	mov    QWORD PTR [rbx+0x28],rax
   14000417a:	jmp    0x140004189
   14000417c:	mov    ecx,0x19
   140004181:	mov    QWORD PTR [rbx+0x20],rcx
   140004185:	mov    QWORD PTR [rbx+0x28],rcx
   140004189:	cmp    QWORD PTR [rbx+0x20],rdx
   14000418d:	jae    0x140004197
   14000418f:	mov    QWORD PTR [rbx+0x20],rdx
   140004193:	mov    QWORD PTR [rbx+0x28],rdx
   140004197:	mov    al,dl
   140004199:	mov    rcx,QWORD PTR [rsp+0x40]
   14000419e:	xor    rcx,rsp
   1400041a1:	call   0x140020e50
   1400041a6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400041ab:	mov    rsi,QWORD PTR [rsp+0x78]
   1400041b0:	add    rsp,0x50
   1400041b4:	pop    rdi
   1400041b5:	ret    
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400041bd:	push   rbx
   1400041be:	sub    rsp,0x30
   1400041c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400041cb:	mov    rbx,rcx
   1400041ce:	lea    rax,[rip+0x39913]        # 0x14003dae8
   1400041d5:	mov    QWORD PTR [rcx],rax
   1400041d8:	test   dl,0x1
   1400041db:	je     0x1400041e2
   1400041dd:	call   0x140020e30
   1400041e2:	mov    rax,rbx
   1400041e5:	add    rsp,0x30
   1400041e9:	pop    rbx
   1400041ea:	ret    
   1400041eb:	int3   
   1400041ec:	rex push rbx
   1400041ee:	push   rsi
   1400041ef:	push   rdi
   1400041f0:	sub    rsp,0x190
   1400041f7:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004200:	mov    rax,QWORD PTR [rip+0x49241]        # 0x14004d448
   140004207:	xor    rax,rsp
   14000420a:	mov    QWORD PTR [rsp+0x180],rax
   140004212:	mov    rbx,r8
   140004215:	mov    QWORD PTR [rsp+0x48],rbx
   14000421a:	mov    rsi,rdx
   14000421d:	mov    rdi,rcx
   140004220:	mov    QWORD PTR [rsp+0x50],rcx
   140004225:	mov    QWORD PTR [rsp+0x40],rdx
   14000422a:	mov    QWORD PTR [rsp+0x30],rbx
   14000422f:	mov    rdx,r8
   140004232:	call   0x1400040bc
   140004237:	xor    r8d,r8d
   14000423a:	test   al,al
   14000423c:	je     0x14000445d
   140004242:	cmp    BYTE PTR [rdi+0x30],r8b
   140004246:	jne    0x1400044a4
   14000424c:	or     rax,0xffffffffffffffff
   140004250:	inc    rax
   140004253:	cmp    BYTE PTR [rsi+rax*1],r8b
   140004257:	jne    0x140004250
   140004259:	mov    QWORD PTR [rsp+0x40],rax
   14000425e:	mov    QWORD PTR [rsp+0x30],r8
   140004263:	mov    rcx,QWORD PTR [rdi+0x28]
   140004267:	cmp    rcx,0x2
   14000426b:	jbe    0x1400042b2
   14000426d:	lea    rdx,[rcx-0x2]
   140004271:	test   rdx,rdx
   140004274:	jne    0x14000427b
   140004276:	mov    rbx,r8
   140004279:	jmp    0x1400042b5
   14000427b:	mov    rbx,rsi
   14000427e:	mov    rax,r8
   140004281:	mov    cl,BYTE PTR [rsi]
   140004283:	test   cl,cl
   140004285:	je     0x1400042a8
   140004287:	cmp    cl,0xa
   14000428a:	jne    0x140004299
   14000428c:	inc    rax
   14000428f:	mov    QWORD PTR [rsp+0x30],rax
   140004294:	cmp    rax,rdx
   140004297:	jae    0x1400042a0
   140004299:	inc    rbx
   14000429c:	mov    cl,BYTE PTR [rbx]
   14000429e:	jmp    0x140004283
   1400042a0:	sub    rbx,rsi
   1400042a3:	inc    rbx
   1400042a6:	jmp    0x1400042b5
   1400042a8:	mov    QWORD PTR [rsp+0x30],rax
   1400042ad:	sub    rbx,rsi
   1400042b0:	jmp    0x1400042b5
   1400042b2:	mov    rbx,rax
   1400042b5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400042ba:	call   0x140023a40
   1400042bf:	mov    ecx,eax
   1400042c1:	call   0x1400282fc
   1400042c6:	mov    rcx,rax
   1400042c9:	xor    edx,edx
   1400042cb:	mov    QWORD PTR [rsp+0x20],rdx
   1400042d0:	jmp    0x140004432
   1400042d5:	mov    rax,QWORD PTR [rsp+0x40]
   1400042da:	cmp    rbx,rax
   1400042dd:	je     0x1400044a4
   1400042e3:	add    rsi,rbx
   1400042e6:	sub    rax,rbx
   1400042e9:	mov    QWORD PTR [rsp+0x40],rax
   1400042ee:	xor    ebx,ebx
   1400042f0:	cmp    QWORD PTR [rdi+0x38],rbx
   1400042f4:	jne    0x140004317
   1400042f6:	xor    r8d,r8d
   1400042f9:	mov    ecx,0x21230006
   1400042fe:	call   0x1400048b4
   140004303:	mov    QWORD PTR [rdi+0x38],rax
   140004307:	test   rax,rax
   14000430a:	jne    0x140004317
   14000430c:	lea    rax,[rip+0x39865]        # 0x14003db78
   140004313:	mov    QWORD PTR [rdi+0x38],rax
   140004317:	mov    rax,QWORD PTR [rdi+0x38]
   14000431b:	mov    QWORD PTR [rsp+0x30],rax
   140004320:	test   rax,rax
   140004323:	jne    0x14000434b
   140004325:	xor    r8d,r8d
   140004328:	mov    ecx,0x21230006
   14000432d:	call   0x1400048b4
   140004332:	mov    QWORD PTR [rdi+0x38],rax
   140004336:	test   rax,rax
   140004339:	jne    0x140004346
   14000433b:	lea    rax,[rip+0x39836]        # 0x14003db78
   140004342:	mov    QWORD PTR [rdi+0x38],rax
   140004346:	mov    rax,QWORD PTR [rsp+0x30]
   14000434b:	mov    rcx,QWORD PTR [rdi+0x38]
   14000434f:	mov    QWORD PTR [rsp+0x30],rcx
   140004354:	or     rbx,0xffffffffffffffff
   140004358:	xor    edx,edx
   14000435a:	inc    rbx
   14000435d:	cmp    WORD PTR [rax+rbx*2],dx
   140004361:	jne    0x14000435a
   140004363:	mov    rcx,QWORD PTR [rsp+0x48]
   140004368:	call   0x140023a40
   14000436d:	mov    ecx,eax
   14000436f:	call   0x1400282fc
   140004374:	mov    rcx,rax
   140004377:	xor    eax,eax
   140004379:	mov    QWORD PTR [rsp+0x20],rax
   14000437e:	lea    r9,[rsp+0x38]
   140004383:	mov    r8d,ebx
   140004386:	mov    rdx,QWORD PTR [rsp+0x30]
   14000438b:	call   QWORD PTR [rip+0x34fef]        # 0x140039380
   140004391:	mov    ebx,0xffff
   140004396:	call   0x14002142c
   14000439b:	mov    rcx,rax
   14000439e:	call   0x14002b8d4
   1400043a3:	cmp    ax,0xa
   1400043a7:	je     0x1400043ae
   1400043a9:	cmp    ax,bx
   1400043ac:	jne    0x140004396
   1400043ae:	cmp    ax,bx
   1400043b1:	je     0x140004457
   1400043b7:	mov    rax,QWORD PTR [rdi+0x20]
   1400043bb:	mov    QWORD PTR [rdi+0x28],rax
   1400043bf:	xor    r8d,r8d
   1400043c2:	mov    QWORD PTR [rsp+0x30],r8
   1400043c7:	cmp    rax,0x2
   1400043cb:	jbe    0x140004412
   1400043cd:	lea    rdx,[rax-0x2]
   1400043d1:	test   rdx,rdx
   1400043d4:	jne    0x1400043db
   1400043d6:	mov    ebx,r8d
   1400043d9:	jmp    0x140004417
   1400043db:	mov    rbx,rsi
   1400043de:	mov    rax,r8
   1400043e1:	mov    cl,BYTE PTR [rsi]
   1400043e3:	test   cl,cl
   1400043e5:	je     0x140004408
   1400043e7:	cmp    cl,0xa
   1400043ea:	jne    0x1400043f9
   1400043ec:	inc    rax
   1400043ef:	mov    QWORD PTR [rsp+0x30],rax
   1400043f4:	cmp    rax,rdx
   1400043f7:	jae    0x140004400
   1400043f9:	inc    rbx
   1400043fc:	mov    cl,BYTE PTR [rbx]
   1400043fe:	jmp    0x1400043e3
   140004400:	sub    rbx,rsi
   140004403:	inc    rbx
   140004406:	jmp    0x140004417
   140004408:	mov    QWORD PTR [rsp+0x30],rax
   14000440d:	sub    rbx,rsi
   140004410:	jmp    0x140004417
   140004412:	mov    rbx,QWORD PTR [rsp+0x40]
   140004417:	mov    rcx,QWORD PTR [rsp+0x48]
   14000441c:	call   0x140023a40
   140004421:	mov    ecx,eax
   140004423:	call   0x1400282fc
   140004428:	mov    rcx,rax
   14000442b:	xor    eax,eax
   14000442d:	mov    QWORD PTR [rsp+0x20],rax
   140004432:	lea    r9,[rsp+0x38]
   140004437:	mov    r8d,ebx
   14000443a:	mov    rdx,rsi
   14000443d:	call   QWORD PTR [rip+0x34fb5]        # 0x1400393f8
   140004443:	mov    rax,QWORD PTR [rsp+0x30]
   140004448:	sub    QWORD PTR [rdi+0x28],rax
   14000444c:	test   rbx,rbx
   14000444f:	jne    0x1400042d5
   140004455:	jmp    0x1400044a4
   140004457:	mov    BYTE PTR [rdi+0x30],0x1
   14000445b:	jmp    0x1400044a4
   14000445d:	cmp    BYTE PTR [rip+0x4c904],r8b        # 0x140050d68
   140004464:	jne    0x140004473
   140004466:	mov    rdx,rbx
   140004469:	mov    rcx,rsi
   14000446c:	call   0x14002b4b0
   140004471:	jmp    0x1400044a4
   140004473:	mov    rdx,rsi
   140004476:	lea    rcx,[rsp+0x70]
   14000447b:	call   0x1400049e8
   140004480:	nop
   140004481:	mov    rdx,rbx
   140004484:	mov    rcx,QWORD PTR [rsp+0x70]
   140004489:	call   0x14002b930
   14000448e:	nop
   14000448f:	lea    rax,[rsp+0x78]
   140004494:	mov    rcx,QWORD PTR [rsp+0x70]
   140004499:	cmp    rcx,rax
   14000449c:	je     0x1400044a4
   14000449e:	call   0x140023328
   1400044a3:	nop
   1400044a4:	mov    rcx,QWORD PTR [rsp+0x180]
   1400044ac:	xor    rcx,rsp
   1400044af:	call   0x140020e50
   1400044b4:	add    rsp,0x190
   1400044bb:	pop    rdi
   1400044bc:	pop    rsi
   1400044bd:	pop    rbx
   1400044be:	ret    
   1400044bf:	int3   
   1400044c0:	rex push rbx
   1400044c2:	push   rsi
   1400044c3:	push   rdi
   1400044c4:	push   r12
   1400044c6:	push   r13
   1400044c8:	push   r14
   1400044ca:	push   r15
   1400044cc:	sub    rsp,0xf0
   1400044d3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400044dc:	mov    rax,QWORD PTR [rip+0x48f65]        # 0x14004d448
   1400044e3:	xor    rax,rsp
   1400044e6:	mov    QWORD PTR [rsp+0xe0],rax
   1400044ee:	mov    r12,r8
   1400044f1:	mov    rsi,rdx
   1400044f4:	mov    rdi,rcx
   1400044f7:	mov    QWORD PTR [rsp+0x38],rdx
   1400044fc:	mov    QWORD PTR [rsp+0x30],r8
   140004501:	mov    rdx,r8
   140004504:	call   0x1400040bc
   140004509:	xor    r13d,r13d
   14000450c:	test   al,al
   14000450e:	je     0x140004717
   140004514:	cmp    BYTE PTR [rdi+0x30],r13b
   140004518:	jne    0x14000475e
   14000451e:	or     r15,0xffffffffffffffff
   140004522:	inc    r15
   140004525:	cmp    WORD PTR [rsi+r15*2],r13w
   14000452a:	jne    0x140004522
   14000452c:	mov    r14,r13
   14000452f:	mov    rax,QWORD PTR [rdi+0x28]
   140004533:	cmp    rax,0x2
   140004537:	jbe    0x14000457c
   140004539:	lea    rcx,[rax-0x2]
   14000453d:	test   rcx,rcx
   140004540:	jne    0x140004547
   140004542:	mov    rbx,r13
   140004545:	jmp    0x14000457f
   140004547:	mov    rbx,rsi
   14000454a:	movzx  eax,WORD PTR [rsi]
   14000454d:	test   ax,ax
   140004550:	je     0x140004574
   140004552:	cmp    ax,0xa
   140004556:	jne    0x140004560
   140004558:	inc    r14
   14000455b:	cmp    r14,rcx
   14000455e:	jae    0x140004569
   140004560:	add    rbx,0x2
   140004564:	movzx  eax,WORD PTR [rbx]
   140004567:	jmp    0x14000454d
   140004569:	sub    rbx,rsi
   14000456c:	sar    rbx,1
   14000456f:	inc    rbx
   140004572:	jmp    0x14000457f
   140004574:	sub    rbx,rsi
   140004577:	sar    rbx,1
   14000457a:	jmp    0x14000457f
   14000457c:	mov    rbx,r15
   14000457f:	mov    rcx,r12
   140004582:	call   0x140023a40
   140004587:	mov    ecx,eax
   140004589:	call   0x1400282fc
   14000458e:	mov    rcx,rax
   140004591:	mov    QWORD PTR [rsp+0x20],r13
   140004596:	lea    r9,[rsp+0x30]
   14000459b:	mov    r8d,ebx
   14000459e:	mov    rdx,rsi
   1400045a1:	call   QWORD PTR [rip+0x34dd9]        # 0x140039380
   1400045a7:	sub    QWORD PTR [rdi+0x28],r14
   1400045ab:	test   rbx,rbx
   1400045ae:	je     0x14000475e
   1400045b4:	lea    r14,[rip+0x395bd]        # 0x14003db78
   1400045bb:	cmp    rbx,r15
   1400045be:	je     0x14000475e
   1400045c4:	lea    rsi,[rsi+rbx*2]
   1400045c8:	sub    r15,rbx
   1400045cb:	cmp    QWORD PTR [rdi+0x38],r13
   1400045cf:	jne    0x1400045eb
   1400045d1:	xor    r8d,r8d
   1400045d4:	mov    ecx,0x21230006
   1400045d9:	call   0x1400048b4
   1400045de:	mov    QWORD PTR [rdi+0x38],rax
   1400045e2:	test   rax,rax
   1400045e5:	jne    0x1400045eb
   1400045e7:	mov    QWORD PTR [rdi+0x38],r14
   1400045eb:	mov    r14,QWORD PTR [rdi+0x38]
   1400045ef:	test   r14,r14
   1400045f2:	jne    0x140004615
   1400045f4:	xor    r8d,r8d
   1400045f7:	mov    ecx,0x21230006
   1400045fc:	call   0x1400048b4
   140004601:	mov    QWORD PTR [rdi+0x38],rax
   140004605:	test   rax,rax
   140004608:	jne    0x140004615
   14000460a:	lea    rax,[rip+0x39567]        # 0x14003db78
   140004611:	mov    QWORD PTR [rdi+0x38],rax
   140004615:	mov    r13,QWORD PTR [rdi+0x38]
   140004619:	or     rbx,0xffffffffffffffff
   14000461d:	xor    eax,eax
   14000461f:	inc    rbx
   140004622:	cmp    WORD PTR [r14+rbx*2],ax
   140004627:	jne    0x14000461f
   140004629:	mov    rcx,r12
   14000462c:	call   0x140023a40
   140004631:	mov    ecx,eax
   140004633:	call   0x1400282fc
   140004638:	mov    rcx,rax
   14000463b:	xor    eax,eax
   14000463d:	mov    QWORD PTR [rsp+0x20],rax
   140004642:	lea    r9,[rsp+0x30]
   140004647:	mov    r8d,ebx
   14000464a:	mov    rdx,r13
   14000464d:	call   QWORD PTR [rip+0x34d2d]        # 0x140039380
   140004653:	mov    ebx,0xffff
   140004658:	call   0x14002142c
   14000465d:	mov    rcx,rax
   140004660:	call   0x14002b8d4
   140004665:	cmp    ax,0xa
   140004669:	je     0x140004670
   14000466b:	cmp    ax,bx
   14000466e:	jne    0x140004658
   140004670:	cmp    ax,bx
   140004673:	je     0x140004711
   140004679:	mov    rax,QWORD PTR [rdi+0x20]
   14000467d:	mov    QWORD PTR [rdi+0x28],rax
   140004681:	xor    r13d,r13d
   140004684:	mov    r14d,r13d
   140004687:	cmp    rax,0x2
   14000468b:	jbe    0x1400046d0
   14000468d:	lea    rcx,[rax-0x2]
   140004691:	test   rcx,rcx
   140004694:	jne    0x14000469b
   140004696:	mov    ebx,r13d
   140004699:	jmp    0x1400046d3
   14000469b:	mov    rbx,rsi
   14000469e:	movzx  eax,WORD PTR [rsi]
   1400046a1:	test   ax,ax
   1400046a4:	je     0x1400046c8
   1400046a6:	cmp    ax,0xa
   1400046aa:	jne    0x1400046b4
   1400046ac:	inc    r14
   1400046af:	cmp    r14,rcx
   1400046b2:	jae    0x1400046bd
   1400046b4:	add    rbx,0x2
   1400046b8:	movzx  eax,WORD PTR [rbx]
   1400046bb:	jmp    0x1400046a1
   1400046bd:	sub    rbx,rsi
   1400046c0:	sar    rbx,1
   1400046c3:	inc    rbx
   1400046c6:	jmp    0x1400046d3
   1400046c8:	sub    rbx,rsi
   1400046cb:	sar    rbx,1
   1400046ce:	jmp    0x1400046d3
   1400046d0:	mov    rbx,r15
   1400046d3:	mov    rcx,r12
   1400046d6:	call   0x140023a40
   1400046db:	mov    ecx,eax
   1400046dd:	call   0x1400282fc
   1400046e2:	mov    rcx,rax
   1400046e5:	mov    QWORD PTR [rsp+0x20],r13
   1400046ea:	lea    r9,[rsp+0x30]
   1400046ef:	mov    r8d,ebx
   1400046f2:	mov    rdx,rsi
   1400046f5:	call   QWORD PTR [rip+0x34c85]        # 0x140039380
   1400046fb:	sub    QWORD PTR [rdi+0x28],r14
   1400046ff:	test   rbx,rbx
   140004702:	lea    r14,[rip+0x3946f]        # 0x14003db78
   140004709:	jne    0x1400045bb
   14000470f:	jmp    0x14000475e
   140004711:	mov    BYTE PTR [rdi+0x30],0x1
   140004715:	jmp    0x14000475e
   140004717:	cmp    BYTE PTR [rip+0x4c64a],r13b        # 0x140050d68
   14000471e:	je     0x14000472d
   140004720:	mov    rdx,r12
   140004723:	mov    rcx,rsi
   140004726:	call   0x14002b930
   14000472b:	jmp    0x14000475e
   14000472d:	mov    rdx,rsi
   140004730:	lea    rcx,[rsp+0x50]
   140004735:	call   0x140004af8
   14000473a:	nop
   14000473b:	mov    rdx,r12
   14000473e:	mov    rcx,QWORD PTR [rsp+0x50]
   140004743:	call   0x14002b4b0
   140004748:	nop
   140004749:	lea    rax,[rsp+0x58]
   14000474e:	mov    rcx,QWORD PTR [rsp+0x50]
   140004753:	cmp    rcx,rax
   140004756:	je     0x14000475e
   140004758:	call   0x140023328
   14000475d:	nop
   14000475e:	mov    rcx,QWORD PTR [rsp+0xe0]
   140004766:	xor    rcx,rsp
   140004769:	call   0x140020e50
   14000476e:	add    rsp,0xf0
   140004775:	pop    r15
   140004777:	pop    r14
   140004779:	pop    r13
   14000477b:	pop    r12
   14000477d:	pop    rdi
   14000477e:	pop    rsi
   14000477f:	pop    rbx
   140004780:	ret    
   140004781:	int3   
   140004782:	int3   
   140004783:	int3   
   140004784:	rex push rdi
   140004786:	sub    rsp,0x30
   14000478a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004793:	mov    QWORD PTR [rsp+0x48],rbx
   140004798:	mov    QWORD PTR [rsp+0x50],rsi
   14000479d:	mov    ecx,0x40
   1400047a2:	call   0x140021a98
   1400047a7:	mov    rbx,rax
   1400047aa:	mov    QWORD PTR [rsp+0x40],rax
   1400047af:	test   rax,rax
   1400047b2:	je     0x140004849
   1400047b8:	call   0x14002142c
   1400047bd:	lea    rdi,[rax+0x60]
   1400047c1:	call   0x14002142c
   1400047c6:	lea    rsi,[rax+0x30]
   1400047ca:	lea    rax,[rip+0x39317]        # 0x14003dae8
   1400047d1:	mov    QWORD PTR [rbx],rax
   1400047d4:	lea    rax,[rip+0x393f5]        # 0x14003dbd0
   1400047db:	mov    QWORD PTR [rbx],rax
   1400047de:	mov    QWORD PTR [rbx+0x8],rsi
   1400047e2:	mov    QWORD PTR [rbx+0x10],rdi
   1400047e6:	mov    BYTE PTR [rbx+0x18],0x0
   1400047ea:	mov    eax,0x7fffffff
   1400047ef:	mov    QWORD PTR [rbx+0x20],rax
   1400047f3:	mov    QWORD PTR [rbx+0x28],rax
   1400047f7:	mov    BYTE PTR [rbx+0x30],0x0
   1400047fb:	and    QWORD PTR [rbx+0x38],0x0
   140004800:	mov    rdx,rsi
   140004803:	mov    rcx,rbx
   140004806:	call   0x1400040bc
   14000480b:	test   al,al
   14000480d:	jne    0x140004823
   14000480f:	mov    rcx,rsi
   140004812:	call   0x140023a40
   140004817:	mov    ecx,eax
   140004819:	mov    edx,0x8000
   14000481e:	call   0x14002b9e4
   140004823:	mov    rdx,rdi
   140004826:	mov    rcx,rbx
   140004829:	call   0x1400040bc
   14000482e:	test   al,al
   140004830:	jne    0x140004847
   140004832:	mov    rcx,rdi
   140004835:	call   0x140023a40
   14000483a:	mov    ecx,eax
   14000483c:	mov    edx,0x8000
   140004841:	call   0x14002b9e4
   140004846:	nop
   140004847:	jmp    0x14000484b
   140004849:	xor    ebx,ebx
   14000484b:	mov    rax,rbx
   14000484e:	mov    rbx,QWORD PTR [rsp+0x48]
   140004853:	mov    rsi,QWORD PTR [rsp+0x50]
   140004858:	add    rsp,0x30
   14000485c:	pop    rdi
   14000485d:	ret    
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    QWORD PTR [rsp+0x8],rbx
   140004865:	push   rdi
   140004866:	sub    rsp,0x40
   14000486a:	and    QWORD PTR [rsp+0x68],0x0
   140004870:	mov    rbx,r8
   140004873:	mov    edi,ecx
   140004875:	call   QWORD PTR [rip+0x34dcd]        # 0x140039648
   14000487b:	mov    QWORD PTR [rsp+0x30],rbx
   140004880:	and    DWORD PTR [rsp+0x28],0x0
   140004885:	mov    rdx,rax
   140004888:	lea    rax,[rsp+0x68]
   14000488d:	xor    r9d,r9d
   140004890:	mov    r8d,edi
   140004893:	mov    ecx,0x2900
   140004898:	mov    QWORD PTR [rsp+0x20],rax
   14000489d:	call   QWORD PTR [rip+0x34b45]        # 0x1400393e8
   1400048a3:	mov    rax,QWORD PTR [rsp+0x68]
   1400048a8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400048ad:	add    rsp,0x40
   1400048b1:	pop    rdi
   1400048b2:	ret    
   1400048b3:	int3   
   1400048b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400048b9:	push   rdi
   1400048ba:	sub    rsp,0x40
   1400048be:	and    QWORD PTR [rsp+0x68],0x0
   1400048c4:	mov    rbx,r8
   1400048c7:	mov    edi,ecx
   1400048c9:	call   QWORD PTR [rip+0x34d79]        # 0x140039648
   1400048cf:	mov    QWORD PTR [rsp+0x30],rbx
   1400048d4:	and    DWORD PTR [rsp+0x28],0x0
   1400048d9:	mov    rdx,rax
   1400048dc:	lea    rax,[rsp+0x68]
   1400048e1:	xor    r9d,r9d
   1400048e4:	mov    r8d,edi
   1400048e7:	mov    ecx,0x2900
   1400048ec:	mov    QWORD PTR [rsp+0x20],rax
   1400048f1:	call   QWORD PTR [rip+0x34af9]        # 0x1400393f0
   1400048f7:	mov    rax,QWORD PTR [rsp+0x68]
   1400048fc:	mov    rbx,QWORD PTR [rsp+0x50]
   140004901:	add    rsp,0x40
   140004905:	pop    rdi
   140004906:	ret    
   140004907:	int3   
   140004908:	mov    QWORD PTR [rsp+0x10],rbx
   14000490d:	push   rdi
   14000490e:	sub    rsp,0xe0
   140004915:	mov    rax,QWORD PTR [rip+0x48b2c]        # 0x14004d448
   14000491c:	xor    rax,rsp
   14000491f:	mov    QWORD PTR [rsp+0xd0],rax
   140004927:	and    QWORD PTR [rsp+0x30],0x0
   14000492d:	and    DWORD PTR [rsp+0x28],0x0
   140004932:	lea    rax,[rsp+0x48]
   140004937:	mov    edi,ecx
   140004939:	mov    r8d,ecx
   14000493c:	xor    r9d,r9d
   14000493f:	xor    edx,edx
   140004941:	mov    ecx,0x1300
   140004946:	mov    QWORD PTR [rsp+0x20],rax
   14000494b:	call   QWORD PTR [rip+0x34a9f]        # 0x1400393f0
   140004951:	test   eax,eax
   140004953:	je     0x14000495c
   140004955:	mov    rax,QWORD PTR [rsp+0x48]
   14000495a:	jmp    0x1400049c4
   14000495c:	lea    r8,[rip+0x38af1]        # 0x14003d454
   140004963:	lea    rcx,[rsp+0x90]
   14000496b:	mov    r9,rdi
   14000496e:	mov    edx,0x40
   140004973:	call   0x140001004
   140004978:	lea    r8,[rip+0x391f1]        # 0x14003db70
   14000497f:	lea    rcx,[rsp+0x50]
   140004984:	mov    r9,rdi
   140004987:	mov    edx,0x40
   14000498c:	call   0x140001004
   140004991:	lea    rax,[rsp+0x50]
   140004996:	mov    ecx,0x21230004
   14000499b:	mov    QWORD PTR [rsp+0x40],rax
   1400049a0:	cmp    edi,0xffff
   1400049a6:	jbe    0x1400049ba
   1400049a8:	lea    rax,[rsp+0x90]
   1400049b0:	mov    ecx,0x21230005
   1400049b5:	mov    QWORD PTR [rsp+0x40],rax
   1400049ba:	lea    r8,[rsp+0x40]
   1400049bf:	call   0x1400048b4
   1400049c4:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400049cc:	xor    rcx,rsp
   1400049cf:	call   0x140020e50
   1400049d4:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400049dc:	add    rsp,0xe0
   1400049e3:	pop    rdi
   1400049e4:	ret    
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	mov    rax,rsp
   1400049eb:	mov    QWORD PTR [rax+0x8],rbx
   1400049ef:	mov    QWORD PTR [rax+0x10],rbp
   1400049f3:	mov    QWORD PTR [rax+0x18],rsi
   1400049f7:	mov    QWORD PTR [rax+0x20],rdi
   1400049fb:	push   r14
   1400049fd:	sub    rsp,0x30
   140004a01:	lea    r14,[rcx+0x8]
   140004a05:	mov    rbp,rdx
   140004a08:	mov    rdi,rcx
   140004a0b:	mov    QWORD PTR [rcx],r14
   140004a0e:	test   rdx,rdx
   140004a11:	jne    0x140004a34
   140004a13:	and    QWORD PTR [rcx],rdx
   140004a16:	mov    rbx,QWORD PTR [rsp+0x40]
   140004a1b:	mov    rbp,QWORD PTR [rsp+0x48]
   140004a20:	mov    rsi,QWORD PTR [rsp+0x50]
   140004a25:	mov    rax,rdi
   140004a28:	mov    rdi,QWORD PTR [rsp+0x58]
   140004a2d:	add    rsp,0x30
   140004a31:	pop    r14
   140004a33:	ret    
   140004a34:	or     rsi,0xffffffffffffffff
   140004a38:	inc    rsi
   140004a3b:	cmp    BYTE PTR [rsi+rdx*1],0x0
   140004a3f:	jne    0x140004a38
   140004a41:	inc    esi
   140004a43:	mov    r8,r14
   140004a46:	mov    edx,esi
   140004a48:	call   0x140004c10
   140004a4d:	mov    rax,QWORD PTR [rdi]
   140004a50:	mov    r9d,esi
   140004a53:	mov    r8,rbp
   140004a56:	xor    edx,edx
   140004a58:	xor    ecx,ecx
   140004a5a:	mov    DWORD PTR [rsp+0x28],esi
   140004a5e:	mov    QWORD PTR [rsp+0x20],rax
   140004a63:	call   QWORD PTR [rip+0x3478f]        # 0x1400391f8
   140004a69:	xor    ebx,ebx
   140004a6b:	test   eax,eax
   140004a6d:	sete   bl
   140004a70:	test   ebx,ebx
   140004a72:	je     0x140004a16
   140004a74:	call   QWORD PTR [rip+0x34b66]        # 0x1400395e0
   140004a7a:	cmp    eax,0x7a
   140004a7d:	jne    0x140004acc
   140004a7f:	and    DWORD PTR [rsp+0x28],0x0
   140004a84:	and    QWORD PTR [rsp+0x20],0x0
   140004a8a:	mov    r9d,esi
   140004a8d:	mov    r8,rbp
   140004a90:	xor    edx,edx
   140004a92:	xor    ecx,ecx
   140004a94:	call   QWORD PTR [rip+0x3475e]        # 0x1400391f8
   140004a9a:	mov    r8,r14
   140004a9d:	mov    rcx,rdi
   140004aa0:	mov    edx,eax
   140004aa2:	mov    ebx,eax
   140004aa4:	call   0x140004c10
   140004aa9:	mov    rax,QWORD PTR [rdi]
   140004aac:	mov    r9d,esi
   140004aaf:	mov    r8,rbp
   140004ab2:	xor    edx,edx
   140004ab4:	xor    ecx,ecx
   140004ab6:	mov    DWORD PTR [rsp+0x28],ebx
   140004aba:	mov    QWORD PTR [rsp+0x20],rax
   140004abf:	call   QWORD PTR [rip+0x34733]        # 0x1400391f8
   140004ac5:	xor    ebx,ebx
   140004ac7:	test   eax,eax
   140004ac9:	sete   bl
   140004acc:	test   ebx,ebx
   140004ace:	je     0x140004a16
   140004ad4:	call   0x140003e80
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	sub    rsp,0x28
   140004ae0:	lea    rax,[rcx+0x8]
   140004ae4:	cmp    QWORD PTR [rcx],rax
   140004ae7:	je     0x140004af1
   140004ae9:	mov    rcx,QWORD PTR [rcx]
   140004aec:	call   0x140023328
   140004af1:	add    rsp,0x28
   140004af5:	ret    
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	mov    QWORD PTR [rsp+0x8],rbx
   140004afd:	mov    QWORD PTR [rsp+0x10],rbp
   140004b02:	mov    QWORD PTR [rsp+0x18],rsi
   140004b07:	push   rdi
   140004b08:	push   r14
   140004b0a:	push   r15
   140004b0c:	sub    rsp,0x40
   140004b10:	lea    r14,[rcx+0x8]
   140004b14:	xor    r15d,r15d
   140004b17:	mov    rbp,rdx
   140004b1a:	mov    rdi,rcx
   140004b1d:	mov    QWORD PTR [rcx],r14
   140004b20:	test   rdx,rdx
   140004b23:	jne    0x140004b44
   140004b25:	mov    QWORD PTR [rcx],r15
   140004b28:	mov    rbx,QWORD PTR [rsp+0x60]
   140004b2d:	mov    rbp,QWORD PTR [rsp+0x68]
   140004b32:	mov    rsi,QWORD PTR [rsp+0x70]
   140004b37:	mov    rax,rdi
   140004b3a:	add    rsp,0x40
   140004b3e:	pop    r15
   140004b40:	pop    r14
   140004b42:	pop    rdi
   140004b43:	ret    
   140004b44:	or     rsi,0xffffffffffffffff
   140004b48:	inc    rsi
   140004b4b:	cmp    WORD PTR [rdx+rsi*2],r15w
   140004b50:	jne    0x140004b48
   140004b52:	inc    esi
   140004b54:	mov    r8,r14
   140004b57:	mov    ebx,esi
   140004b59:	shl    ebx,0x2
   140004b5c:	mov    edx,ebx
   140004b5e:	call   0x140004cc4
   140004b63:	mov    rax,QWORD PTR [rdi]
   140004b66:	mov    QWORD PTR [rsp+0x38],r15
   140004b6b:	mov    QWORD PTR [rsp+0x30],r15
   140004b70:	mov    r9d,esi
   140004b73:	mov    r8,rbp
   140004b76:	xor    edx,edx
   140004b78:	xor    ecx,ecx
   140004b7a:	mov    DWORD PTR [rsp+0x28],ebx
   140004b7e:	mov    QWORD PTR [rsp+0x20],rax
   140004b83:	call   QWORD PTR [rip+0x3470f]        # 0x140039298
   140004b89:	mov    ebx,r15d
   140004b8c:	test   eax,eax
   140004b8e:	sete   bl
   140004b91:	test   ebx,ebx
   140004b93:	je     0x140004b28
   140004b95:	call   QWORD PTR [rip+0x34a45]        # 0x1400395e0
   140004b9b:	cmp    eax,0x7a
   140004b9e:	jne    0x140004c01
   140004ba0:	mov    QWORD PTR [rsp+0x38],r15
   140004ba5:	mov    QWORD PTR [rsp+0x30],r15
   140004baa:	mov    r9d,esi
   140004bad:	mov    r8,rbp
   140004bb0:	xor    edx,edx
   140004bb2:	xor    ecx,ecx
   140004bb4:	mov    DWORD PTR [rsp+0x28],r15d
   140004bb9:	mov    QWORD PTR [rsp+0x20],r15
   140004bbe:	call   QWORD PTR [rip+0x346d4]        # 0x140039298
   140004bc4:	mov    r8,r14
   140004bc7:	mov    rcx,rdi
   140004bca:	mov    edx,eax
   140004bcc:	mov    ebx,eax
   140004bce:	call   0x140004cc4
   140004bd3:	mov    rax,QWORD PTR [rdi]
   140004bd6:	mov    QWORD PTR [rsp+0x38],r15
   140004bdb:	mov    QWORD PTR [rsp+0x30],r15
   140004be0:	mov    r9d,esi
   140004be3:	mov    r8,rbp
   140004be6:	xor    edx,edx
   140004be8:	xor    ecx,ecx
   140004bea:	mov    DWORD PTR [rsp+0x28],ebx
   140004bee:	mov    QWORD PTR [rsp+0x20],rax
   140004bf3:	call   QWORD PTR [rip+0x3469f]        # 0x140039298
   140004bf9:	test   eax,eax
   140004bfb:	mov    ebx,r15d
   140004bfe:	sete   bl
   140004c01:	test   ebx,ebx
   140004c03:	je     0x140004b28
   140004c09:	call   0x140003e80
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rbx
   140004c15:	push   rdi
   140004c16:	sub    rsp,0x20
   140004c1a:	mov    rdi,r8
   140004c1d:	mov    rbx,rcx
   140004c20:	test   rcx,rcx
   140004c23:	je     0x140004c8b
   140004c25:	test   edx,edx
   140004c27:	js     0x140004c96
   140004c29:	test   r8,r8
   140004c2c:	je     0x140004ca1
   140004c2e:	cmp    QWORD PTR [rcx],r8
   140004c31:	je     0x140004c5d
   140004c33:	mov    rcx,QWORD PTR [rcx]
   140004c36:	cmp    edx,0x80
   140004c3c:	jle    0x140004c53
   140004c3e:	movsxd rdx,edx
   140004c41:	mov    r8d,0x2
   140004c47:	call   0x140028094
   140004c4c:	test   rax,rax
   140004c4f:	jne    0x140004c72
   140004c51:	jmp    0x140004cac
   140004c53:	call   0x140023328
   140004c58:	mov    QWORD PTR [rbx],rdi
   140004c5b:	jmp    0x140004c7a
   140004c5d:	cmp    edx,0x80
   140004c63:	jle    0x140004c77
   140004c65:	movsxd rcx,edx
   140004c68:	mov    edx,0x2
   140004c6d:	call   0x14002b46c
   140004c72:	mov    QWORD PTR [rbx],rax
   140004c75:	jmp    0x140004c7a
   140004c77:	mov    QWORD PTR [rcx],r8
   140004c7a:	cmp    QWORD PTR [rbx],0x0
   140004c7e:	je     0x140004cb7
   140004c80:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c85:	add    rsp,0x20
   140004c89:	pop    rdi
   140004c8a:	ret    
   140004c8b:	mov    ecx,0x80070057
   140004c90:	call   0x140003e64
   140004c95:	int3   
   140004c96:	mov    ecx,0x80070057
   140004c9b:	call   0x140003e64
   140004ca0:	int3   
   140004ca1:	mov    ecx,0x80070057
   140004ca6:	call   0x140003e64
   140004cab:	int3   
   140004cac:	mov    ecx,0x8007000e
   140004cb1:	call   0x140003e64
   140004cb6:	int3   
   140004cb7:	mov    ecx,0x8007000e
   140004cbc:	call   0x140003e64
   140004cc1:	int3   
   140004cc2:	int3   
   140004cc3:	int3   
   140004cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140004cc9:	push   rdi
   140004cca:	sub    rsp,0x20
   140004cce:	mov    rdi,r8
   140004cd1:	mov    rbx,rcx
   140004cd4:	test   rcx,rcx
   140004cd7:	je     0x140004d3f
   140004cd9:	test   edx,edx
   140004cdb:	js     0x140004d4a
   140004cdd:	test   r8,r8
   140004ce0:	je     0x140004d55
   140004ce2:	cmp    QWORD PTR [rcx],r8
   140004ce5:	je     0x140004d11
   140004ce7:	mov    rcx,QWORD PTR [rcx]
   140004cea:	cmp    edx,0x80
   140004cf0:	jle    0x140004d07
   140004cf2:	movsxd rdx,edx
   140004cf5:	mov    r8d,0x1
   140004cfb:	call   0x140028094
   140004d00:	test   rax,rax
   140004d03:	jne    0x140004d26
   140004d05:	jmp    0x140004d60
   140004d07:	call   0x140023328
   140004d0c:	mov    QWORD PTR [rbx],rdi
   140004d0f:	jmp    0x140004d2e
   140004d11:	cmp    edx,0x80
   140004d17:	jle    0x140004d2b
   140004d19:	movsxd rcx,edx
   140004d1c:	mov    edx,0x1
   140004d21:	call   0x14002b46c
   140004d26:	mov    QWORD PTR [rbx],rax
   140004d29:	jmp    0x140004d2e
   140004d2b:	mov    QWORD PTR [rcx],r8
   140004d2e:	cmp    QWORD PTR [rbx],0x0
   140004d32:	je     0x140004d6b
   140004d34:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d39:	add    rsp,0x20
   140004d3d:	pop    rdi
   140004d3e:	ret    
   140004d3f:	mov    ecx,0x80070057
   140004d44:	call   0x140003e64
   140004d49:	int3   
   140004d4a:	mov    ecx,0x80070057
   140004d4f:	call   0x140003e64
   140004d54:	int3   
   140004d55:	mov    ecx,0x80070057
   140004d5a:	call   0x140003e64
   140004d5f:	int3   
   140004d60:	mov    ecx,0x8007000e
   140004d65:	call   0x140003e64
   140004d6a:	int3   
   140004d6b:	mov    ecx,0x8007000e
   140004d70:	call   0x140003e64
   140004d75:	int3   
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	mov    QWORD PTR [rsp+0x10],rbx
   140004d7d:	mov    QWORD PTR [rsp+0x18],rsi
   140004d82:	mov    QWORD PTR [rsp+0x20],rdi
   140004d87:	push   rbp
   140004d88:	mov    rbp,rsp
   140004d8b:	sub    rsp,0x50
   140004d8f:	mov    rax,QWORD PTR [rip+0x486b2]        # 0x14004d448
   140004d96:	xor    rax,rsp
   140004d99:	mov    QWORD PTR [rbp-0x10],rax
   140004d9d:	mov    rbx,rcx
   140004da0:	lea    rdx,[rbp-0x20]
   140004da4:	xor    ecx,ecx
   140004da6:	call   0x1400353c0
   140004dab:	mov    eax,DWORD PTR [rbp-0x1c]
   140004dae:	mov    edi,DWORD PTR [rbp-0x20]
   140004db1:	mov    DWORD PTR [rbx],eax
   140004db3:	mov    eax,DWORD PTR [rbp-0x14]
   140004db6:	mov    esi,0x1
   140004dbb:	mov    DWORD PTR [rbx+0x4],eax
   140004dbe:	mov    eax,DWORD PTR [rbp-0x18]
   140004dc1:	lea    rdx,[rbp-0x20]
   140004dc5:	mov    ecx,esi
   140004dc7:	mov    DWORD PTR [rbx+0x8],eax
   140004dca:	call   0x1400353c0
   140004dcf:	mov    eax,DWORD PTR [rbp-0x20]
   140004dd2:	mov    DWORD PTR [rbx+0xc],eax
   140004dd5:	mov    eax,DWORD PTR [rbp-0x1c]
   140004dd8:	mov    DWORD PTR [rbx+0x10],eax
   140004ddb:	mov    eax,DWORD PTR [rbp-0x14]
   140004dde:	mov    DWORD PTR [rbx+0x14],eax
   140004de1:	mov    eax,DWORD PTR [rbp-0x18]
   140004de4:	mov    DWORD PTR [rbx+0x18],eax
   140004de7:	test   eax,eax
   140004de9:	jns    0x140004e5e
   140004deb:	lea    rdx,[rbp-0x30]
   140004def:	mov    ecx,0x40000000
   140004df4:	call   0x1400353c0
   140004df9:	cmp    DWORD PTR [rbp-0x30],0x40000005
   140004e00:	jb     0x140004e5e
   140004e02:	cmp    DWORD PTR [rbp-0x2c],0x7263694d
   140004e09:	jne    0x140004e5e
   140004e0b:	cmp    DWORD PTR [rbp-0x28],0x666f736f
   140004e12:	jne    0x140004e5e
   140004e14:	cmp    DWORD PTR [rbp-0x24],0x76482074
   140004e1b:	jne    0x140004e5e
   140004e1d:	lea    rdx,[rbp-0x30]
   140004e21:	mov    ecx,0x40000001
   140004e26:	call   0x1400353c0
   140004e2b:	cmp    DWORD PTR [rbp-0x30],0x31237648
   140004e32:	jne    0x140004e5e
   140004e34:	lea    rdx,[rbp-0x30]
   140004e38:	mov    ecx,0x40000002
   140004e3d:	call   0x1400353c0
   140004e42:	cmp    DWORD PTR [rbp-0x30],0x0
   140004e46:	jne    0x140004e5a
   140004e48:	cmp    DWORD PTR [rbp-0x2c],0x0
   140004e4c:	jne    0x140004e5a
   140004e4e:	cmp    DWORD PTR [rbp-0x28],0x0
   140004e52:	jne    0x140004e5a
   140004e54:	cmp    DWORD PTR [rbp-0x24],0x0
   140004e58:	je     0x140004e5e
   140004e5a:	mov    eax,esi
   140004e5c:	jmp    0x140004e60
   140004e5e:	xor    eax,eax
   140004e60:	and    DWORD PTR [rbx+0x1c],0x0
   140004e64:	cmp    DWORD PTR [rbx],0x756e6547
   140004e6a:	mov    DWORD PTR [rbx+0x20],eax
   140004e6d:	mov    r8d,0x2
   140004e73:	jne    0x140004eac
   140004e75:	cmp    DWORD PTR [rbx+0x4],0x49656e69
   140004e7c:	jne    0x140004eac
   140004e7e:	cmp    DWORD PTR [rbx+0x8],0x6c65746e
   140004e85:	jne    0x140004eac
   140004e87:	mov    edx,DWORD PTR [rbx+0xc]
   140004e8a:	lea    ecx,[r8+0x4]
   140004e8e:	shr    edx,0x8
   140004e91:	and    edx,0xf
   140004e94:	cmp    edx,ecx
   140004e96:	je     0x140004ea6
   140004e98:	lea    eax,[rcx-0x3]
   140004e9b:	cmp    edx,0xf
   140004e9e:	cmovne eax,esi
   140004ea1:	mov    DWORD PTR [rbx+0x1c],eax
   140004ea4:	jmp    0x140004eed
   140004ea6:	mov    DWORD PTR [rbx+0x1c],r8d
   140004eaa:	jmp    0x140004eed
   140004eac:	cmp    DWORD PTR [rbx],0x68747541
   140004eb2:	jne    0x140004eed
   140004eb4:	cmp    DWORD PTR [rbx+0x4],0x69746e65
   140004ebb:	jne    0x140004eed
   140004ebd:	cmp    DWORD PTR [rbx+0x8],0x444d4163
   140004ec4:	jne    0x140004eed
   140004ec6:	mov    eax,DWORD PTR [rbx+0xc]
   140004ec9:	mov    ecx,0x6
   140004ece:	shr    eax,0x8
   140004ed1:	and    eax,0xf
   140004ed4:	cmp    eax,ecx
   140004ed6:	je     0x140004ee6
   140004ed8:	lea    edx,[rcx-0x2]
   140004edb:	cmp    eax,0xf
   140004ede:	cmovne ecx,edx
   140004ee1:	mov    DWORD PTR [rbx+0x1c],ecx
   140004ee4:	jmp    0x140004eed
   140004ee6:	mov    DWORD PTR [rbx+0x1c],0x5
   140004eed:	and    DWORD PTR [rbx+0x24],0x0
   140004ef1:	cmp    DWORD PTR [rbx+0x1c],r8d
   140004ef5:	jne    0x140004f14
   140004ef7:	mov    ecx,0xa
   140004efc:	mov    DWORD PTR [rbx+0x24],r8d
   140004f00:	cmp    edi,ecx
   140004f02:	jb     0x140004f14
   140004f04:	lea    rdx,[rbp-0x20]
   140004f08:	call   0x1400353c0
   140004f0d:	movzx  eax,BYTE PTR [rbp-0x1f]
   140004f11:	mov    DWORD PTR [rbx+0x24],eax
   140004f14:	mov    rcx,QWORD PTR [rbp-0x10]
   140004f18:	xor    rcx,rsp
   140004f1b:	call   0x140020e50
   140004f20:	mov    rbx,QWORD PTR [rsp+0x68]
   140004f25:	mov    rsi,QWORD PTR [rsp+0x70]
   140004f2a:	mov    rdi,QWORD PTR [rsp+0x78]
   140004f2f:	add    rsp,0x50
   140004f33:	pop    rbp
   140004f34:	ret    
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	mov    rax,rsp
   140004f3b:	mov    QWORD PTR [rax+0x8],rbx
   140004f3f:	mov    QWORD PTR [rax+0x10],rsi
   140004f43:	mov    QWORD PTR [rax+0x18],rdi
   140004f47:	mov    QWORD PTR [rax+0x20],r14
   140004f4b:	push   rbp
   140004f4c:	lea    rbp,[rax-0x38]
   140004f50:	sub    rsp,0x130
   140004f57:	mov    rax,QWORD PTR [rip+0x484ea]        # 0x14004d448
   140004f5e:	xor    rax,rsp
   140004f61:	mov    QWORD PTR [rbp+0x20],rax
   140004f65:	lea    rcx,[rsp+0x20]
   140004f6a:	call   QWORD PTR [rip+0x34498]        # 0x140039408
   140004f70:	mov    eax,DWORD PTR [rsp+0x48]
   140004f74:	xor    edx,edx
   140004f76:	mov    DWORD PTR [rip+0x4be28],eax        # 0x140050da4
   140004f7c:	movzx  eax,WORD PTR [rsp+0x40]
   140004f81:	lea    r8d,[rdx+0x28]
   140004f85:	mov    WORD PTR [rip+0x4bdfc],ax        # 0x140050d88
   140004f8c:	mov    eax,DWORD PTR [rsp+0x24]
   140004f90:	lea    rcx,[rip+0x4beb9]        # 0x140050e50
   140004f97:	mov    DWORD PTR [rip+0x4bde7],eax        # 0x140050d84
   140004f9d:	movzx  eax,WORD PTR [rsp+0x20]
   140004fa2:	mov    WORD PTR [rip+0x4bdcf],ax        # 0x140050d78
   140004fa9:	call   0x1400260e0
   140004fae:	lea    rcx,[rip+0x4be9b]        # 0x140050e50
   140004fb5:	call   0x140004d78
   140004fba:	lea    rcx,[rip+0x4bdef]        # 0x140050db0
   140004fc1:	mov    DWORD PTR [rip+0x4bde5],0x9c        # 0x140050db0
   140004fcb:	call   QWORD PTR [rip+0x34447]        # 0x140039418
   140004fd1:	xor    ebx,ebx
   140004fd3:	lea    rcx,[rip+0x38c2e]        # 0x14003dc08
   140004fda:	mov    eax,ebx
   140004fdc:	lea    esi,[rbx+0x2]
   140004fdf:	lea    r14d,[rbx+0x1]
   140004fe3:	cmp    DWORD PTR [rip+0x4bdd7],esi        # 0x140050dc0
   140004fe9:	sete   al
   140004fec:	cmp    DWORD PTR [rip+0x4bdcd],r14d        # 0x140050dc0
   140004ff3:	mov    DWORD PTR [rip+0x4be83],eax        # 0x140050e7c
   140004ff9:	mov    eax,ebx
   140004ffb:	sete   al
   140004ffe:	mov    DWORD PTR [rip+0x4be74],eax        # 0x140050e78
   140005004:	call   QWORD PTR [rip+0x34406]        # 0x140039410
   14000500a:	lea    rdx,[rip+0x38be7]        # 0x14003dbf8
   140005011:	mov    rcx,rax
   140005014:	call   QWORD PTR [rip+0x341d6]        # 0x1400391f0
   14000501a:	mov    rdi,rax
   14000501d:	test   rax,rax
   140005020:	je     0x140005034
   140005022:	call   QWORD PTR [rip+0x342e8]        # 0x140039310
   140005028:	lea    rdx,[rip+0x4bd41]        # 0x140050d70
   14000502f:	mov    rcx,rax
   140005032:	call   rdi
   140005034:	cmp    DWORD PTR [rip+0x4bd36],ebx        # 0x140050d70
   14000503a:	je     0x14000507b
   14000503c:	lea    rcx,[rip+0x38bc5]        # 0x14003dc08
   140005043:	call   QWORD PTR [rip+0x343c7]        # 0x140039410
   140005049:	lea    rdx,[rip+0x38bc8]        # 0x14003dc18
   140005050:	mov    rcx,rax
   140005053:	call   QWORD PTR [rip+0x34197]        # 0x1400391f0
   140005059:	test   rax,rax
   14000505c:	je     0x14000507b
   14000505e:	lea    rcx,[rsp+0x50]
   140005063:	call   rax
   140005065:	mov    eax,DWORD PTR [rip+0x4bde1]        # 0x140050e4c
   14000506b:	cmp    WORD PTR [rsp+0x50],0x6
   140005071:	cmove  eax,r14d
   140005075:	mov    DWORD PTR [rip+0x4bdd1],eax        # 0x140050e4c
   14000507b:	lea    rcx,[rbp-0x80]
   14000507f:	xor    edx,edx
   140005081:	mov    r8d,0x9c
   140005087:	mov    DWORD PTR [rip+0x4bcef],ebx        # 0x140050d7c
   14000508d:	call   0x1400260e0
   140005092:	mov    eax,0x3
   140005097:	mov    edx,esi
   140005099:	xor    ecx,ecx
   14000509b:	mov    WORD PTR [rbp+0x14],ax
   14000509f:	mov    DWORD PTR [rbp-0x80],0x9c
   1400050a6:	mov    QWORD PTR [rbp-0x7c],0x5
   1400050ae:	call   0x14000679c
   1400050b3:	mov    rcx,rax
   1400050b6:	mov    edx,r14d
   1400050b9:	call   0x14000679c
   1400050be:	mov    edx,0x20
   1400050c3:	mov    rcx,rax
   1400050c6:	call   0x14000679c
   1400050cb:	mov    rdi,rax
   1400050ce:	mov    rax,QWORD PTR [rip+0x4bdb3]        # 0x140050e88
   1400050d5:	test   rax,rax
   1400050d8:	jne    0x140005107
   1400050da:	lea    rcx,[rip+0x38bef]        # 0x14003dcd0
   1400050e1:	call   QWORD PTR [rip+0x34329]        # 0x140039410
   1400050e7:	lea    rdx,[rip+0x38b8a]        # 0x14003dc78
   1400050ee:	mov    rcx,rax
   1400050f1:	call   QWORD PTR [rip+0x340f9]        # 0x1400391f0
   1400050f7:	mov    QWORD PTR [rip+0x4bd8a],rax        # 0x140050e88
   1400050fe:	test   rax,rax
   140005101:	jne    0x140005107
   140005103:	mov    eax,ebx
   140005105:	jmp    0x140005115
   140005107:	lea    rcx,[rbp-0x80]
   14000510b:	mov    r8,rdi
   14000510e:	mov    edx,0x23
   140005113:	call   rax
   140005115:	mov    DWORD PTR [rip+0x4bc61],eax        # 0x140050d7c
   14000511b:	mov    eax,DWORD PTR [rip+0x4bc93]        # 0x140050db4
   140005121:	cmp    eax,0x5
   140005124:	jne    0x14000514b
   140005126:	mov    eax,DWORD PTR [rip+0x4bc8c]        # 0x140050db8
   14000512c:	cmp    eax,r14d
   14000512f:	jne    0x14000513d
   140005131:	cmp    WORD PTR [rip+0x4bd0c],si        # 0x140050e44
   140005138:	setae  bl
   14000513b:	jmp    0x14000514e
   14000513d:	cmp    eax,esi
   14000513f:	jne    0x14000514b
   140005141:	cmp    WORD PTR [rip+0x4bcfb],r14w        # 0x140050e44
   140005149:	jmp    0x140005138
   14000514b:	seta   bl
   14000514e:	mov    DWORD PTR [rip+0x4bc40],ebx        # 0x140050d94
   140005154:	mov    rcx,QWORD PTR [rbp+0x20]
   140005158:	xor    rcx,rsp
   14000515b:	call   0x140020e50
   140005160:	lea    r11,[rsp+0x130]
   140005168:	mov    rbx,QWORD PTR [r11+0x10]
   14000516c:	mov    rsi,QWORD PTR [r11+0x18]
   140005170:	mov    rdi,QWORD PTR [r11+0x20]
   140005174:	mov    r14,QWORD PTR [r11+0x28]
   140005178:	mov    rsp,r11
   14000517b:	pop    rbp
   14000517c:	ret    
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    QWORD PTR [rsp+0x8],rbx
   140005185:	push   rdi
   140005186:	sub    rsp,0x40
   14000518a:	mov    rax,QWORD PTR [rip+0x482b7]        # 0x14004d448
   140005191:	xor    rax,rsp
   140005194:	mov    QWORD PTR [rsp+0x30],rax
   140005199:	xor    ebx,ebx
   14000519b:	cmp    DWORD PTR [rip+0x4bbef],ebx        # 0x140050d90
   1400051a1:	jne    0x14000527e
   1400051a7:	cmp    DWORD PTR [rip+0x4bbef],ebx        # 0x140050d9c
   1400051ad:	jne    0x14000527e
   1400051b3:	mov    ecx,DWORD PTR [rip+0x4bcb3]        # 0x140050e6c
   1400051b9:	lea    edi,[rbx+0x1]
   1400051bc:	mov    DWORD PTR [rip+0x4bbd6],ebx        # 0x140050d98
   1400051c2:	cmp    ecx,edi
   1400051c4:	jbe    0x14000527e
   1400051ca:	cmp    ecx,0x2
   1400051cd:	je     0x1400051fb
   1400051cf:	cmp    ecx,0x3
   1400051d2:	je     0x1400051ea
   1400051d4:	lea    eax,[rcx-0x5]
   1400051d7:	cmp    eax,edi
   1400051d9:	ja     0x14000527e
   1400051df:	mov    DWORD PTR [rip+0x4bb87],edi        # 0x140050d6c
   1400051e5:	jmp    0x140005284
   1400051ea:	mov    DWORD PTR [rip+0x4bb7c],ebx        # 0x140050d6c
   1400051f0:	mov    DWORD PTR [rip+0x4bbb2],edi        # 0x140050da8
   1400051f6:	jmp    0x14000528a
   1400051fb:	mov    eax,DWORD PTR [rip+0x4bc5b]        # 0x140050e5c
   140005201:	mov    DWORD PTR [rip+0x4bba1],ebx        # 0x140050da8
   140005207:	mov    edx,eax
   140005209:	shr    edx,0x4
   14000520c:	and    edx,0xf
   14000520f:	cmp    edx,edi
   140005211:	jne    0x140005222
   140005213:	and    eax,0xf
   140005216:	cmp    al,0x9
   140005218:	jb     0x140005222
   14000521a:	mov    DWORD PTR [rip+0x4bb4c],edi        # 0x140050d6c
   140005220:	jmp    0x14000522f
   140005222:	mov    eax,ebx
   140005224:	cmp    edx,edi
   140005226:	seta   al
   140005229:	mov    DWORD PTR [rip+0x4bb3d],eax        # 0x140050d6c
   14000522f:	lea    eax,[rcx-0x1]
   140005232:	cmp    eax,0x2
   140005235:	ja     0x14000528a
   140005237:	lea    rdx,[rsp+0x20]
   14000523c:	xor    ecx,ecx
   14000523e:	call   0x1400353c0
   140005243:	mov    ecx,0xa
   140005248:	cmp    DWORD PTR [rsp+0x20],ecx
   14000524c:	jb     0x14000528a
   14000524e:	lea    rdx,[rsp+0x20]
   140005253:	call   0x1400353c0
   140005258:	movzx  eax,BYTE PTR [rsp+0x20]
   14000525d:	cmp    eax,edi
   14000525f:	jb     0x14000528a
   140005261:	movzx  ecx,BYTE PTR [rsp+0x23]
   140005266:	cmp    ecx,0x20
   140005269:	ja     0x14000528a
   14000526b:	mov    eax,DWORD PTR [rsp+0x24]
   14000526f:	mov    edx,edi
   140005271:	shl    edx,cl
   140005273:	not    eax
   140005275:	sub    edx,edi
   140005277:	test   eax,edx
   140005279:	setne  bl
   14000527c:	jmp    0x14000528a
   14000527e:	mov    DWORD PTR [rip+0x4bae8],ebx        # 0x140050d6c
   140005284:	mov    DWORD PTR [rip+0x4bb1e],ebx        # 0x140050da8
   14000528a:	mov    DWORD PTR [rip+0x4baf0],ebx        # 0x140050d80
   140005290:	mov    rcx,QWORD PTR [rsp+0x30]
   140005295:	xor    rcx,rsp
   140005298:	call   0x140020e50
   14000529d:	mov    rbx,QWORD PTR [rsp+0x50]
   1400052a2:	add    rsp,0x40
   1400052a6:	pop    rdi
   1400052a7:	ret    
   1400052a8:	sub    rsp,0x38
   1400052ac:	call   0x140035410
   1400052b1:	mov    rcx,rax
   1400052b4:	jmp    0x1400052bd
   1400052b6:	xor    ecx,ecx
   1400052b8:	mov    QWORD PTR [rsp+0x20],rcx
   1400052bd:	xor    eax,eax
   1400052bf:	test   rcx,rcx
   1400052c2:	setne  al
   1400052c5:	add    rsp,0x38
   1400052c9:	ret    
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	sub    rsp,0x28
   1400052d0:	mov    rcx,QWORD PTR [rip+0x4bce1]        # 0x140050fb8
   1400052d7:	test   rcx,rcx
   1400052da:	je     0x1400052e9
   1400052dc:	call   0x14002b138
   1400052e1:	and    QWORD PTR [rip+0x4bccf],0x0        # 0x140050fb8
   1400052e9:	mov    rcx,QWORD PTR [rip+0x4bcd0]        # 0x140050fc0
   1400052f0:	test   rcx,rcx
   1400052f3:	je     0x14000530c
   1400052f5:	cmp    DWORD PTR [rip+0x4bccc],0x0        # 0x140050fc8
   1400052fc:	jne    0x140005304
   1400052fe:	call   QWORD PTR [rip+0x34044]        # 0x140039348
   140005304:	and    QWORD PTR [rip+0x4bcb4],0x0        # 0x140050fc0
   14000530c:	and    DWORD PTR [rip+0x4bcb5],0x0        # 0x140050fc8
   140005313:	add    rsp,0x28
   140005317:	ret    
   140005318:	mov    QWORD PTR [rsp+0x8],rbx
   14000531d:	mov    QWORD PTR [rsp+0x20],rsi
   140005322:	push   rbp
   140005323:	push   rdi
   140005324:	push   r14
   140005326:	lea    rbp,[rsp-0x3e0]
   14000532e:	sub    rsp,0x4e0
   140005335:	mov    rax,QWORD PTR [rip+0x4810c]        # 0x14004d448
   14000533c:	xor    rax,rsp
   14000533f:	mov    QWORD PTR [rbp+0x3d0],rax
   140005346:	mov    r14d,r8d
   140005349:	mov    rbx,rdx
   14000534c:	call   0x1400052cc
   140005351:	xor    edi,edi
   140005353:	lea    rax,[rbp+0xa0]
   14000535a:	mov    esi,0x102
   14000535f:	mov    QWORD PTR [rsp+0x40],rdi
   140005364:	mov    QWORD PTR [rsp+0x38],rdi
   140005369:	mov    QWORD PTR [rsp+0x30],rsi
   14000536e:	mov    QWORD PTR [rsp+0x28],rax
   140005373:	lea    r8d,[rdi+0x3]
   140005377:	lea    r9,[rbp+0x1b0]
   14000537e:	lea    rdx,[rsp+0x50]
   140005383:	mov    rcx,rbx
   140005386:	mov    QWORD PTR [rsp+0x20],0x104
   14000538f:	call   0x14002bd10
   140005394:	mov    eax,esi
   140005396:	lea    rcx,[rbp+0xa0]
   14000539d:	cmp    BYTE PTR [rcx],dil
   1400053a0:	je     0x1400053aa
   1400053a2:	inc    rcx
   1400053a5:	dec    rax
   1400053a8:	jne    0x14000539d
   1400053aa:	test   rax,rax
   1400053ad:	je     0x140005400
   1400053af:	mov    rcx,rsi
   1400053b2:	sub    rcx,rax
   1400053b5:	lea    rax,[rbp+0xa0]
   1400053bc:	lea    rax,[rax+rcx*1]
   1400053c0:	sub    rsi,rcx
   1400053c3:	je     0x1400053fa
   1400053c5:	lea    rdx,[rcx+0x7ffffefc]
   1400053cc:	lea    rcx,[rip+0x38859]        # 0x14003dc2c
   1400053d3:	add    rdx,rsi
   1400053d6:	sub    rcx,rax
   1400053d9:	test   rdx,rdx
   1400053dc:	je     0x1400053f5
   1400053de:	mov    r8b,BYTE PTR [rcx+rax*1]
   1400053e2:	test   r8b,r8b
   1400053e5:	je     0x1400053f5
   1400053e7:	mov    BYTE PTR [rax],r8b
   1400053ea:	dec    rdx
   1400053ed:	inc    rax
   1400053f0:	dec    rsi
   1400053f3:	jne    0x1400053d9
   1400053f5:	test   rsi,rsi
   1400053f8:	jne    0x1400053fd
   1400053fa:	dec    rax
   1400053fd:	mov    BYTE PTR [rax],dil
   140005400:	movzx  eax,r14w
   140005404:	lea    r9,[rbp+0x1b0]
   14000540b:	lea    r8,[rip+0x3881e]        # 0x14003dc30
   140005412:	lea    rcx,[rbp+0x2c0]
   140005419:	mov    edx,0x104
   14000541e:	mov    DWORD PTR [rsp+0x20],eax
   140005422:	call   0x140003df0
   140005427:	mov    rcx,QWORD PTR [rip+0x4bb8a]        # 0x140050fb8
   14000542e:	test   rcx,rcx
   140005431:	je     0x140005438
   140005433:	call   0x14002b138
   140005438:	or     rsi,0xffffffffffffffff
   14000543c:	lea    rax,[rbp+0x2c0]
   140005443:	mov    rcx,rsi
   140005446:	inc    rcx
   140005449:	cmp    BYTE PTR [rax+rcx*1],dil
   14000544d:	jne    0x140005446
   14000544f:	lea    rdx,[rbp+0x1b0]
   140005456:	mov    rax,rsi
   140005459:	inc    rax
   14000545c:	cmp    BYTE PTR [rdx+rax*1],dil
   140005460:	jne    0x140005459
   140005462:	cmp    rcx,rax
   140005465:	mov    rdx,rsi
   140005468:	cmova  rax,rcx
   14000546c:	lea    rcx,[rsp+0x50]
   140005471:	inc    rdx
   140005474:	cmp    BYTE PTR [rcx+rdx*1],dil
   140005478:	jne    0x140005471
   14000547a:	lea    r8,[rbp+0xa0]
   140005481:	mov    rcx,rsi
   140005484:	inc    rcx
   140005487:	cmp    BYTE PTR [r8+rcx*1],dil
   14000548b:	jne    0x140005484
   14000548d:	add    rcx,0x7
   140005491:	lea    rbx,[rdx+rax*1]
   140005495:	add    rbx,rcx
   140005498:	mov    rcx,rbx
   14000549b:	call   0x14002b130
   1400054a0:	mov    QWORD PTR [rip+0x4bb11],rax        # 0x140050fb8
   1400054a7:	test   rax,rax
   1400054aa:	je     0x140005589
   1400054b0:	lea    rcx,[rbp+0xa0]
   1400054b7:	lea    r14,[rip+0x3877a]        # 0x14003dc38
   1400054be:	lea    r9,[rbp+0x2c0]
   1400054c5:	lea    r8,[rsp+0x50]
   1400054ca:	mov    QWORD PTR [rsp+0x28],r14
   1400054cf:	mov    QWORD PTR [rsp+0x20],rcx
   1400054d4:	mov    rcx,rax
   1400054d7:	mov    rdx,rbx
   1400054da:	call   0x14002bbc8
   1400054df:	mov    rcx,QWORD PTR [rip+0x4bad2]        # 0x140050fb8
   1400054e6:	lea    rdx,[rsp+0x60]
   1400054eb:	call   QWORD PTR [rip+0x33f2f]        # 0x140039420
   1400054f1:	cmp    rax,rsi
   1400054f4:	je     0x14000551c
   1400054f6:	mov    rcx,rax
   1400054f9:	call   QWORD PTR [rip+0x33f29]        # 0x140039428
   1400054ff:	mov    rcx,QWORD PTR [rip+0x4bab2]        # 0x140050fb8
   140005506:	call   QWORD PTR [rip+0x33f24]        # 0x140039430
   14000550c:	mov    QWORD PTR [rip+0x4baad],rax        # 0x140050fc0
   140005513:	test   rax,rax
   140005516:	je     0x14000551c
   140005518:	mov    al,0x1
   14000551a:	jmp    0x14000558b
   14000551c:	mov    rcx,QWORD PTR [rip+0x4ba95]        # 0x140050fb8
   140005523:	lea    rax,[rbp+0xa0]
   14000552a:	lea    r9,[rbp+0x1b0]
   140005531:	lea    r8,[rsp+0x50]
   140005536:	mov    rdx,rbx
   140005539:	mov    QWORD PTR [rsp+0x28],r14
   14000553e:	mov    QWORD PTR [rsp+0x20],rax
   140005543:	call   0x14002bbc8
   140005548:	mov    rcx,QWORD PTR [rip+0x4ba69]        # 0x140050fb8
   14000554f:	lea    rdx,[rsp+0x60]
   140005554:	call   QWORD PTR [rip+0x33ec6]        # 0x140039420
   14000555a:	cmp    rax,rsi
   14000555d:	je     0x140005584
   14000555f:	mov    rcx,rax
   140005562:	call   QWORD PTR [rip+0x33ec0]        # 0x140039428
   140005568:	mov    rcx,QWORD PTR [rip+0x4ba49]        # 0x140050fb8
   14000556f:	call   QWORD PTR [rip+0x33ebb]        # 0x140039430
   140005575:	test   rax,rax
   140005578:	mov    QWORD PTR [rip+0x4ba41],rax        # 0x140050fc0
   14000557f:	setne  al
   140005582:	jmp    0x14000558b
   140005584:	call   0x1400052cc
   140005589:	xor    al,al
   14000558b:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140005592:	xor    rcx,rsp
   140005595:	call   0x140020e50
   14000559a:	lea    r11,[rsp+0x4e0]
   1400055a2:	mov    rbx,QWORD PTR [r11+0x20]
   1400055a6:	mov    rsi,QWORD PTR [r11+0x38]
   1400055aa:	mov    rsp,r11
   1400055ad:	pop    r14
   1400055af:	pop    rdi
   1400055b0:	pop    rbp
   1400055b1:	ret    
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400055b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400055be:	mov    QWORD PTR [rsp+0x18],rsi
   1400055c3:	push   rdi
   1400055c4:	sub    rsp,0x20
   1400055c8:	mov    edi,r8d
   1400055cb:	mov    rsi,rdx
   1400055ce:	mov    rbp,rcx
   1400055d1:	call   QWORD PTR [rip+0x33e81]        # 0x140039458
   1400055d7:	test   rax,rax
   1400055da:	jne    0x1400055e0
   1400055dc:	xor    eax,eax
   1400055de:	jmp    0x14000562c
   1400055e0:	mov    rcx,rax
   1400055e3:	call   QWORD PTR [rip+0x33e7f]        # 0x140039468
   1400055e9:	mov    rbx,rax
   1400055ec:	test   rax,rax
   1400055ef:	je     0x1400055dc
   1400055f1:	mov    rdx,rsi
   1400055f4:	mov    rcx,rbp
   1400055f7:	call   QWORD PTR [rip+0x33e63]        # 0x140039460
   1400055fd:	mov    ecx,eax
   1400055ff:	add    rcx,rbx
   140005602:	and    edi,0xf
   140005605:	jbe    0x14000561b
   140005607:	cmp    rbx,rcx
   14000560a:	jae    0x1400055dc
   14000560c:	movzx  eax,WORD PTR [rbx]
   14000560f:	lea    rbx,[rbx+rax*2]
   140005613:	add    rbx,0x2
   140005617:	dec    edi
   140005619:	jne    0x140005607
   14000561b:	cmp    rbx,rcx
   14000561e:	jae    0x1400055dc
   140005620:	movzx  eax,WORD PTR [rbx]
   140005623:	neg    ax
   140005626:	sbb    rax,rax
   140005629:	and    rax,rbx
   14000562c:	mov    rbx,QWORD PTR [rsp+0x30]
   140005631:	mov    rbp,QWORD PTR [rsp+0x38]
   140005636:	mov    rsi,QWORD PTR [rsp+0x40]
   14000563b:	add    rsp,0x20
   14000563f:	pop    rdi
   140005640:	ret    
   140005641:	int3   
   140005642:	int3   
   140005643:	int3   
   140005644:	rex push rbx
   140005646:	sub    rsp,0x20
   14000564a:	lea    rax,[rip+0x385f7]        # 0x14003dc48
   140005651:	mov    rbx,rcx
   140005654:	mov    QWORD PTR [rcx],rax
   140005657:	test   dl,0x1
   14000565a:	je     0x140005661
   14000565c:	call   0x140020e30
   140005661:	mov    rax,rbx
   140005664:	add    rsp,0x20
   140005668:	pop    rbx
   140005669:	ret    
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	lea    rax,[rip+0x385d5]        # 0x14003dc48
   140005673:	mov    QWORD PTR [rcx],rax
   140005676:	ret    
   140005677:	int3   
   140005678:	mov    rax,rsp
   14000567b:	mov    QWORD PTR [rax+0x8],rcx
   14000567f:	push   rdi
   140005680:	sub    rsp,0x30
   140005684:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000568c:	mov    QWORD PTR [rax+0x10],rbx
   140005690:	mov    QWORD PTR [rax+0x18],rsi
   140005694:	mov    rsi,rcx
   140005697:	mov    rbx,QWORD PTR [rdx]
   14000569a:	mov    rcx,QWORD PTR [rbx-0x18]
   14000569e:	mov    rax,QWORD PTR [rcx]
   1400056a1:	call   QWORD PTR [rax+0x20]
   1400056a4:	mov    rcx,rax
   1400056a7:	cmp    DWORD PTR [rbx-0x8],0x0
   1400056ab:	jl     0x1400056bd
   1400056ad:	cmp    rax,QWORD PTR [rbx-0x18]
   1400056b1:	jne    0x1400056bd
   1400056b3:	lea    rdi,[rbx-0x18]
   1400056b7:	lock inc DWORD PTR [rbx-0x8]
   1400056bb:	jmp    0x1400056fa
   1400056bd:	mov    rax,QWORD PTR [rax]
   1400056c0:	mov    r8d,0x2
   1400056c6:	mov    edx,DWORD PTR [rbx-0x10]
   1400056c9:	call   QWORD PTR [rax]
   1400056cb:	mov    rdi,rax
   1400056ce:	test   rax,rax
   1400056d1:	jne    0x1400056d9
   1400056d3:	call   0x140005d58
   1400056d8:	int3   
   1400056d9:	mov    eax,DWORD PTR [rbx-0x10]
   1400056dc:	mov    DWORD PTR [rdi+0x8],eax
   1400056df:	mov    eax,DWORD PTR [rbx-0x10]
   1400056e2:	inc    eax
   1400056e4:	movsxd rdx,eax
   1400056e7:	lea    r9,[rdx+rdx*1]
   1400056eb:	mov    r8,rbx
   1400056ee:	add    rdx,rdx
   1400056f1:	lea    rcx,[rdi+0x18]
   1400056f5:	call   0x14002c220
   1400056fa:	lea    rax,[rdi+0x18]
   1400056fe:	mov    QWORD PTR [rsi],rax
   140005701:	mov    rax,rsi
   140005704:	mov    rbx,QWORD PTR [rsp+0x48]
   140005709:	mov    rsi,QWORD PTR [rsp+0x50]
   14000570e:	add    rsp,0x30
   140005712:	pop    rdi
   140005713:	ret    
   140005714:	mov    QWORD PTR [rsp+0x8],rcx
   140005719:	push   rdi
   14000571a:	sub    rsp,0x30
   14000571e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005727:	mov    QWORD PTR [rsp+0x48],rbx
   14000572c:	mov    rbx,rdx
   14000572f:	mov    rdi,rcx
   140005732:	lea    rcx,[rip+0x48d27]        # 0x14004e460
   140005739:	mov    rax,QWORD PTR [rip+0x48d20]        # 0x14004e460
   140005740:	call   QWORD PTR [rax+0x18]
   140005743:	add    rax,0x18
   140005747:	mov    QWORD PTR [rdi],rax
   14000574a:	mov    rdx,rbx
   14000574d:	mov    rcx,rdi
   140005750:	call   0x14000592c
   140005755:	xor    ecx,ecx
   140005757:	test   al,al
   140005759:	jne    0x14000577e
   14000575b:	test   rbx,rbx
   14000575e:	je     0x14000576f
   140005760:	or     rax,0xffffffffffffffff
   140005764:	inc    rax
   140005767:	cmp    WORD PTR [rbx+rax*2],cx
   14000576b:	jne    0x140005764
   14000576d:	mov    ecx,eax
   14000576f:	mov    r8d,ecx
   140005772:	mov    rdx,rbx
   140005775:	mov    rcx,rdi
   140005778:	call   0x140005ae0
   14000577d:	nop
   14000577e:	mov    rax,rdi
   140005781:	mov    rbx,QWORD PTR [rsp+0x48]
   140005786:	add    rsp,0x30
   14000578a:	pop    rdi
   14000578b:	ret    
   14000578c:	mov    QWORD PTR [rsp+0x8],rcx
   140005791:	sub    rsp,0x38
   140005795:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000579e:	mov    rdx,QWORD PTR [rcx]
   1400057a1:	sub    rdx,0x18
   1400057a5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400057aa:	jg     0x1400057b5
   1400057ac:	mov    rcx,QWORD PTR [rdx]
   1400057af:	mov    rax,QWORD PTR [rcx]
   1400057b2:	call   QWORD PTR [rax+0x8]
   1400057b5:	add    rsp,0x38
   1400057b9:	ret    
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400057c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400057c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400057cb:	push   rdi
   1400057cc:	sub    rsp,0x20
   1400057d0:	mov    rdx,QWORD PTR [rdx]
   1400057d3:	mov    rbx,QWORD PTR [rcx]
   1400057d6:	mov    rsi,rcx
   1400057d9:	lea    rdi,[rdx-0x18]
   1400057dd:	sub    rbx,0x18
   1400057e1:	cmp    rdi,rbx
   1400057e4:	je     0x140005874
   1400057ea:	cmp    DWORD PTR [rbx+0x10],0x0
   1400057ee:	jl     0x140005868
   1400057f0:	mov    rcx,QWORD PTR [rdi]
   1400057f3:	cmp    rcx,QWORD PTR [rbx]
   1400057f6:	jne    0x140005868
   1400057f8:	mov    rax,QWORD PTR [rcx]
   1400057fb:	call   QWORD PTR [rax+0x20]
   1400057fe:	cmp    DWORD PTR [rdi+0x10],0x0
   140005802:	mov    rcx,rax
   140005805:	jl     0x140005815
   140005807:	cmp    rax,QWORD PTR [rdi]
   14000580a:	jne    0x140005815
   14000580c:	mov    rbp,rdi
   14000580f:	lock inc DWORD PTR [rdi+0x10]
   140005813:	jmp    0x14000584c
   140005815:	mov    rax,QWORD PTR [rax]
   140005818:	mov    edx,DWORD PTR [rdi+0x8]
   14000581b:	mov    r8d,0x2
   140005821:	call   QWORD PTR [rax]
   140005823:	mov    rbp,rax
   140005826:	test   rax,rax
   140005829:	je     0x14000588c
   14000582b:	mov    eax,DWORD PTR [rdi+0x8]
   14000582e:	lea    r8,[rdi+0x18]
   140005832:	lea    rcx,[rbp+0x18]
   140005836:	mov    DWORD PTR [rbp+0x8],eax
   140005839:	mov    eax,DWORD PTR [rdi+0x8]
   14000583c:	inc    eax
   14000583e:	movsxd rdx,eax
   140005841:	add    rdx,rdx
   140005844:	mov    r9,rdx
   140005847:	call   0x14002c220
   14000584c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140005851:	jg     0x14000585f
   140005853:	mov    rcx,QWORD PTR [rbx]
   140005856:	mov    rdx,rbx
   140005859:	mov    rax,QWORD PTR [rcx]
   14000585c:	call   QWORD PTR [rax+0x8]
   14000585f:	lea    rax,[rbp+0x18]
   140005863:	mov    QWORD PTR [rsi],rax
   140005866:	jmp    0x140005874
   140005868:	mov    r8d,DWORD PTR [rdx-0x10]
   14000586c:	mov    rcx,rsi
   14000586f:	call   0x140005ae0
   140005874:	mov    rbx,QWORD PTR [rsp+0x30]
   140005879:	mov    rbp,QWORD PTR [rsp+0x38]
   14000587e:	mov    rax,rsi
   140005881:	mov    rsi,QWORD PTR [rsp+0x40]
   140005886:	add    rsp,0x20
   14000588a:	pop    rdi
   14000588b:	ret    
   14000588c:	call   0x140005d58
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	mov    rax,rsp
   140005897:	mov    QWORD PTR [rax+0x10],rdx
   14000589b:	push   rdi
   14000589c:	sub    rsp,0x30
   1400058a0:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   1400058a8:	mov    QWORD PTR [rax+0x8],rbx
   1400058ac:	mov    QWORD PTR [rax+0x18],rsi
   1400058b0:	mov    esi,r8d
   1400058b3:	mov    rbx,rdx
   1400058b6:	mov    rdi,rcx
   1400058b9:	and    DWORD PTR [rax-0x18],0x0
   1400058bd:	mov    rcx,QWORD PTR [rcx]
   1400058c0:	cmp    r8d,DWORD PTR [rcx-0x10]
   1400058c4:	jl     0x1400058d3
   1400058c6:	mov    rdx,rdi
   1400058c9:	mov    rcx,rbx
   1400058cc:	call   0x140005678
   1400058d1:	jmp    0x14000590e
   1400058d3:	mov    rcx,QWORD PTR [rcx-0x18]
   1400058d7:	test   rcx,rcx
   1400058da:	je     0x1400058e4
   1400058dc:	mov    rax,QWORD PTR [rcx]
   1400058df:	call   QWORD PTR [rax+0x20]
   1400058e2:	jmp    0x1400058e6
   1400058e4:	xor    eax,eax
   1400058e6:	test   rax,rax
   1400058e9:	jne    0x1400058fc
   1400058eb:	lea    rcx,[rip+0x48b6e]        # 0x14004e460
   1400058f2:	mov    rax,QWORD PTR [rip+0x48b67]        # 0x14004e460
   1400058f9:	call   QWORD PTR [rax+0x20]
   1400058fc:	mov    r9,rax
   1400058ff:	mov    r8d,esi
   140005902:	mov    rdx,QWORD PTR [rdi]
   140005905:	mov    rcx,rbx
   140005908:	call   0x140005a30
   14000590d:	nop
   14000590e:	mov    DWORD PTR [rsp+0x20],0x1
   140005916:	mov    rax,rbx
   140005919:	mov    rbx,QWORD PTR [rsp+0x40]
   14000591e:	mov    rsi,QWORD PTR [rsp+0x50]
   140005923:	add    rsp,0x30
   140005927:	pop    rdi
   140005928:	ret    
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	mov    rax,rsp
   14000592f:	mov    QWORD PTR [rax+0x8],rbx
   140005933:	mov    QWORD PTR [rax+0x10],rbp
   140005937:	mov    QWORD PTR [rax+0x18],rsi
   14000593b:	mov    QWORD PTR [rax+0x20],rdi
   14000593f:	push   r12
   140005941:	push   r14
   140005943:	push   r15
   140005945:	sub    rsp,0x20
   140005949:	xor    ebx,ebx
   14000594b:	mov    r15,rcx
   14000594e:	test   rdx,rdx
   140005951:	je     0x1400059ec
   140005957:	test   rdx,0xffffffffffff0000
   14000595e:	jne    0x1400059ec
   140005964:	movzx  ebp,dx
   140005967:	lea    rcx,[rip+0x4b2e2]        # 0x140050c50
   14000596e:	xor    edx,edx
   140005970:	call   0x14002f7ac
   140005975:	lea    r12d,[rbx+0x1]
   140005979:	mov    rdi,rax
   14000597c:	mov    r14d,r12d
   14000597f:	test   rax,rax
   140005982:	je     0x1400059d3
   140005984:	mov    esi,ebp
   140005986:	shr    esi,0x4
   140005989:	xor    r9d,r9d
   14000598c:	lea    eax,[r12+rsi*1]
   140005990:	mov    rcx,rdi
   140005993:	lea    edx,[r9+0x6]
   140005997:	movzx  r8d,ax
   14000599b:	call   QWORD PTR [rip+0x33aa7]        # 0x140039448
   1400059a1:	test   rax,rax
   1400059a4:	je     0x1400059b9
   1400059a6:	mov    r8d,ebp
   1400059a9:	mov    rdx,rax
   1400059ac:	mov    rcx,rdi
   1400059af:	call   0x1400055b4
   1400059b4:	test   rax,rax
   1400059b7:	jne    0x1400059d6
   1400059b9:	lea    rcx,[rip+0x4b290]        # 0x140050c50
   1400059c0:	mov    edx,r14d
   1400059c3:	call   0x14002f7ac
   1400059c8:	add    r14d,r12d
   1400059cb:	mov    rdi,rax
   1400059ce:	test   rax,rax
   1400059d1:	jne    0x140005989
   1400059d3:	mov    rdi,rbx
   1400059d6:	test   rdi,rdi
   1400059d9:	je     0x1400059e9
   1400059db:	mov    r8d,ebp
   1400059de:	mov    rdx,rdi
   1400059e1:	mov    rcx,r15
   1400059e4:	call   0x140005c14
   1400059e9:	mov    bl,r12b
   1400059ec:	mov    rbp,QWORD PTR [rsp+0x48]
   1400059f1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400059f6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400059fb:	mov    al,bl
   1400059fd:	mov    rbx,QWORD PTR [rsp+0x40]
   140005a02:	add    rsp,0x20
   140005a06:	pop    r15
   140005a08:	pop    r14
   140005a0a:	pop    r12
   140005a0c:	ret    
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	sub    rsp,0x28
   140005a14:	mov    rdx,QWORD PTR [rcx]
   140005a17:	sub    rdx,0x18
   140005a1b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140005a20:	jg     0x140005a2b
   140005a22:	mov    rcx,QWORD PTR [rdx]
   140005a25:	mov    rax,QWORD PTR [rcx]
   140005a28:	call   QWORD PTR [rax+0x8]
   140005a2b:	add    rsp,0x28
   140005a2f:	ret    
   140005a30:	mov    QWORD PTR [rsp+0x8],rbx
   140005a35:	mov    QWORD PTR [rsp+0x10],rbp
   140005a3a:	mov    QWORD PTR [rsp+0x18],rsi
   140005a3f:	push   rdi
   140005a40:	sub    rsp,0x20
   140005a44:	xor    ebp,ebp
   140005a46:	movsxd rbx,r8d
   140005a49:	mov    rsi,rdx
   140005a4c:	mov    rdi,rcx
   140005a4f:	test   r9,r9
   140005a52:	je     0x140005ab7
   140005a54:	test   rdx,rdx
   140005a57:	jne    0x140005a5e
   140005a59:	test   r8d,r8d
   140005a5c:	jne    0x140005ac2
   140005a5e:	mov    rax,QWORD PTR [r9]
   140005a61:	mov    r8d,0x2
   140005a67:	mov    edx,ebx
   140005a69:	mov    rcx,r9
   140005a6c:	call   QWORD PTR [rax]
   140005a6e:	test   rax,rax
   140005a71:	je     0x140005acd
   140005a73:	add    rax,0x18
   140005a77:	mov    QWORD PTR [rdi],rax
   140005a7a:	test   ebx,ebx
   140005a7c:	js     0x140005ad3
   140005a7e:	cmp    ebx,DWORD PTR [rax-0xc]
   140005a81:	jg     0x140005ad3
   140005a83:	mov    DWORD PTR [rax-0x10],ebx
   140005a86:	mov    rax,QWORD PTR [rdi]
   140005a89:	lea    rdx,[rbx+rbx*1]
   140005a8d:	mov    WORD PTR [rdx+rax*1],bp
   140005a91:	mov    rcx,QWORD PTR [rdi]
   140005a94:	mov    r9,rdx
   140005a97:	mov    r8,rsi
   140005a9a:	call   0x14002c220
   140005a9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005aa4:	mov    rbp,QWORD PTR [rsp+0x38]
   140005aa9:	mov    rsi,QWORD PTR [rsp+0x40]
   140005aae:	mov    rax,rdi
   140005ab1:	add    rsp,0x20
   140005ab5:	pop    rdi
   140005ab6:	ret    
   140005ab7:	mov    ecx,0x80004005
   140005abc:	call   0x140003e64
   140005ac1:	int3   
   140005ac2:	mov    ecx,0x80070057
   140005ac7:	call   0x140003e64
   140005acc:	int3   
   140005acd:	call   0x140005d58
   140005ad2:	int3   
   140005ad3:	mov    ecx,0x80070057
   140005ad8:	call   0x140003e64
   140005add:	int3   
   140005ade:	int3   
   140005adf:	int3   
   140005ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ae5:	mov    QWORD PTR [rsp+0x10],rbp
   140005aea:	mov    QWORD PTR [rsp+0x18],rsi
   140005aef:	push   rdi
   140005af0:	push   r14
   140005af2:	push   r15
   140005af4:	sub    rsp,0x20
   140005af8:	xor    r15d,r15d
   140005afb:	movsxd rdi,r8d
   140005afe:	mov    rbp,rdx
   140005b01:	mov    rbx,rcx
   140005b04:	test   r8d,r8d
   140005b07:	jne    0x140005b6f
   140005b09:	mov    rax,QWORD PTR [rcx]
   140005b0c:	lea    rdx,[rax-0x18]
   140005b10:	mov    rdi,QWORD PTR [rdx]
   140005b13:	cmp    DWORD PTR [rdx+0x8],r15d
   140005b17:	je     0x140005b34
   140005b19:	cmp    DWORD PTR [rdx+0x10],r15d
   140005b1d:	jge    0x140005b4d
   140005b1f:	cmp    DWORD PTR [rax-0xc],r15d
   140005b23:	jl     0x140005be5
   140005b29:	mov    DWORD PTR [rax-0x10],r15d
   140005b2d:	mov    rax,QWORD PTR [rcx]
   140005b30:	mov    WORD PTR [rax],r15w
   140005b34:	mov    rbx,QWORD PTR [rsp+0x40]
   140005b39:	mov    rbp,QWORD PTR [rsp+0x48]
   140005b3e:	mov    rsi,QWORD PTR [rsp+0x50]
   140005b43:	add    rsp,0x20
   140005b47:	pop    r15
   140005b49:	pop    r14
   140005b4b:	pop    rdi
   140005b4c:	ret    
   140005b4d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140005b52:	jg     0x140005b5d
   140005b54:	mov    rcx,QWORD PTR [rdx]
   140005b57:	mov    rax,QWORD PTR [rcx]
   140005b5a:	call   QWORD PTR [rax+0x8]
   140005b5d:	mov    rax,QWORD PTR [rdi]
   140005b60:	mov    rcx,rdi
   140005b63:	call   QWORD PTR [rax+0x18]
   140005b66:	add    rax,0x18
   140005b6a:	mov    QWORD PTR [rbx],rax
   140005b6d:	jmp    0x140005b34
   140005b6f:	test   rdx,rdx
   140005b72:	je     0x140005bf0
   140005b74:	mov    rax,QWORD PTR [rcx]
   140005b77:	mov    rsi,rdx
   140005b7a:	mov    r14d,DWORD PTR [rax-0x10]
   140005b7e:	sub    rsi,rax
   140005b81:	sar    rsi,1
   140005b84:	test   r8d,r8d
   140005b87:	js     0x140005bfb
   140005b89:	mov    ecx,0x1
   140005b8e:	sub    ecx,DWORD PTR [rax-0x8]
   140005b91:	mov    eax,DWORD PTR [rax-0xc]
   140005b94:	sub    eax,edi
   140005b96:	or     ecx,eax
   140005b98:	jge    0x140005ba4
   140005b9a:	mov    edx,edi
   140005b9c:	mov    rcx,rbx
   140005b9f:	call   0x140005d68
   140005ba4:	mov    rcx,QWORD PTR [rbx]
   140005ba7:	movsxd rdx,DWORD PTR [rcx-0xc]
   140005bab:	add    rdx,rdx
   140005bae:	cmp    rsi,r14
   140005bb1:	lea    r14,[rdi+rdi*1]
   140005bb5:	mov    r9,r14
   140005bb8:	ja     0x140005bc5
   140005bba:	lea    r8,[rcx+rsi*2]
   140005bbe:	call   0x14002bfb0
   140005bc3:	jmp    0x140005bcd
   140005bc5:	mov    r8,rbp
   140005bc8:	call   0x14002c220
   140005bcd:	mov    rax,QWORD PTR [rbx]
   140005bd0:	cmp    edi,DWORD PTR [rax-0xc]
   140005bd3:	jg     0x140005c06
   140005bd5:	mov    DWORD PTR [rax-0x10],edi
   140005bd8:	mov    rax,QWORD PTR [rbx]
   140005bdb:	mov    WORD PTR [r14+rax*1],r15w
   140005be0:	jmp    0x140005b34
   140005be5:	mov    ecx,0x80070057
   140005bea:	call   0x140003e64
   140005bef:	int3   
   140005bf0:	mov    ecx,0x80070057
   140005bf5:	call   0x140003e64
   140005bfa:	int3   
   140005bfb:	mov    ecx,0x80070057
   140005c00:	call   0x140003e64
   140005c05:	int3   
   140005c06:	mov    ecx,0x80070057
   140005c0b:	call   0x140003e64
   140005c10:	int3   
   140005c11:	int3   
   140005c12:	int3   
   140005c13:	int3   
   140005c14:	mov    rax,rsp
   140005c17:	mov    QWORD PTR [rax+0x8],rbx
   140005c1b:	mov    QWORD PTR [rax+0x10],rbp
   140005c1f:	mov    QWORD PTR [rax+0x18],rsi
   140005c23:	mov    QWORD PTR [rax+0x20],rdi
   140005c27:	push   r14
   140005c29:	sub    rsp,0x20
   140005c2d:	mov    eax,r8d
   140005c30:	mov    rdi,rdx
   140005c33:	mov    r14d,0x1
   140005c39:	shr    eax,0x4
   140005c3c:	mov    ebx,r8d
   140005c3f:	mov    rsi,rcx
   140005c42:	add    ax,r14w
   140005c46:	lea    r8d,[r14+0x5]
   140005c4a:	mov    rcx,rdi
   140005c4d:	movzx  edx,ax
   140005c50:	call   QWORD PTR [rip+0x337fa]        # 0x140039450
   140005c56:	xor    ebp,ebp
   140005c58:	test   rax,rax
   140005c5b:	je     0x140005d04
   140005c61:	mov    r8d,ebx
   140005c64:	mov    rdx,rax
   140005c67:	mov    rcx,rdi
   140005c6a:	call   0x1400055b4
   140005c6f:	mov    rdi,rax
   140005c72:	test   rax,rax
   140005c75:	je     0x140005d04
   140005c7b:	movzx  ebx,WORD PTR [rax]
   140005c7e:	test   ebx,ebx
   140005c80:	js     0x140005d21
   140005c86:	mov    rax,QWORD PTR [rsi]
   140005c89:	mov    ecx,r14d
   140005c8c:	sub    ecx,DWORD PTR [rax-0x8]
   140005c8f:	mov    eax,DWORD PTR [rax-0xc]
   140005c92:	sub    eax,ebx
   140005c94:	or     ecx,eax
   140005c96:	jge    0x140005ca2
   140005c98:	mov    edx,ebx
   140005c9a:	mov    rcx,rsi
   140005c9d:	call   0x140005d68
   140005ca2:	movzx  ecx,WORD PTR [rdi]
   140005ca5:	or     rax,0xffffffffffffffff
   140005ca9:	lea    r8,[rdi+0x2]
   140005cad:	cmp    ecx,eax
   140005caf:	jne    0x140005cc7
   140005cb1:	test   r8,r8
   140005cb4:	jne    0x140005cba
   140005cb6:	mov    eax,ebp
   140005cb8:	jmp    0x140005cc4
   140005cba:	inc    rax
   140005cbd:	cmp    WORD PTR [r8+rax*2],bp
   140005cc2:	jne    0x140005cba
   140005cc4:	lea    ecx,[rax+0x1]
   140005cc7:	movsxd r9,ecx
   140005cca:	mov    rcx,QWORD PTR [rsi]
   140005ccd:	mov    rdx,rbx
   140005cd0:	call   0x14002c00c
   140005cd5:	test   eax,eax
   140005cd7:	je     0x140005ced
   140005cd9:	cmp    eax,0xc
   140005cdc:	je     0x140005d42
   140005cde:	cmp    eax,0x16
   140005ce1:	je     0x140005d37
   140005ce3:	cmp    eax,0x22
   140005ce6:	je     0x140005d37
   140005ce8:	cmp    eax,0x50
   140005ceb:	jne    0x140005d2c
   140005ced:	mov    rcx,QWORD PTR [rsi]
   140005cf0:	cmp    ebx,DWORD PTR [rcx-0xc]
   140005cf3:	jg     0x140005d4d
   140005cf5:	mov    DWORD PTR [rcx-0x10],ebx
   140005cf8:	mov    rcx,QWORD PTR [rsi]
   140005cfb:	mov    eax,r14d
   140005cfe:	mov    WORD PTR [rcx+rbx*2],bp
   140005d02:	jmp    0x140005d06
   140005d04:	xor    eax,eax
   140005d06:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d0b:	mov    rbp,QWORD PTR [rsp+0x38]
   140005d10:	mov    rsi,QWORD PTR [rsp+0x40]
   140005d15:	mov    rdi,QWORD PTR [rsp+0x48]
   140005d1a:	add    rsp,0x20
   140005d1e:	pop    r14
   140005d20:	ret    
   140005d21:	mov    ecx,0x80070057
   140005d26:	call   0x140003e64
   140005d2b:	int3   
   140005d2c:	mov    ecx,0x80004005
   140005d31:	call   0x140003e64
   140005d36:	int3   
   140005d37:	mov    ecx,0x80070057
   140005d3c:	call   0x140003e64
   140005d41:	int3   
   140005d42:	mov    ecx,0x8007000e
   140005d47:	call   0x140003e64
   140005d4c:	int3   
   140005d4d:	mov    ecx,0x80070057
   140005d52:	call   0x140003e64
   140005d57:	int3   
   140005d58:	sub    rsp,0x28
   140005d5c:	mov    ecx,0x8007000e
   140005d61:	call   0x140003e64
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	sub    rsp,0x28
   140005d6c:	mov    rax,QWORD PTR [rcx]
   140005d6f:	mov    r8d,edx
   140005d72:	mov    r9,rcx
   140005d75:	cmp    DWORD PTR [rax-0x10],edx
   140005d78:	cmovg  r8d,DWORD PTR [rax-0x10]
   140005d7d:	cmp    DWORD PTR [rax-0x8],0x1
   140005d81:	jle    0x140005d8f
   140005d83:	mov    edx,r8d
   140005d86:	add    rsp,0x28
   140005d8a:	jmp    0x140005dc8
   140005d8f:	mov    ecx,DWORD PTR [rax-0xc]
   140005d92:	cmp    ecx,r8d
   140005d95:	jge    0x140005dc1
   140005d97:	cmp    ecx,0x40000000
   140005d9d:	jle    0x140005da7
   140005d9f:	add    ecx,0x100000
   140005da5:	jmp    0x140005db0
   140005da7:	mov    eax,ecx
   140005da9:	cdq    
   140005daa:	sub    eax,edx
   140005dac:	sar    eax,1
   140005dae:	add    ecx,eax
   140005db0:	cmp    ecx,r8d
   140005db3:	cmovl  ecx,r8d
   140005db7:	mov    edx,ecx
   140005db9:	mov    rcx,r9
   140005dbc:	call   0x140005e70
   140005dc1:	add    rsp,0x28
   140005dc5:	ret    
   140005dc6:	int3   
   140005dc7:	int3   
   140005dc8:	mov    rax,rsp
   140005dcb:	mov    QWORD PTR [rax+0x8],rbx
   140005dcf:	mov    QWORD PTR [rax+0x10],rbp
   140005dd3:	mov    QWORD PTR [rax+0x18],rsi
   140005dd7:	mov    QWORD PTR [rax+0x20],rdi
   140005ddb:	push   r14
   140005ddd:	sub    rsp,0x20
   140005de1:	mov    rbx,QWORD PTR [rcx]
   140005de4:	mov    rsi,rcx
   140005de7:	mov    edi,edx
   140005de9:	mov    rcx,QWORD PTR [rbx-0x18]
   140005ded:	mov    r14d,DWORD PTR [rbx-0x10]
   140005df1:	mov    rax,QWORD PTR [rcx]
   140005df4:	call   QWORD PTR [rax+0x20]
   140005df7:	mov    r8d,0x2
   140005dfd:	mov    edx,edi
   140005dff:	mov    r9,QWORD PTR [rax]
   140005e02:	mov    rcx,rax
   140005e05:	call   QWORD PTR [r9]
   140005e08:	mov    rbp,rax
   140005e0b:	test   rax,rax
   140005e0e:	je     0x140005e68
   140005e10:	cmp    r14d,edi
   140005e13:	mov    r8,rbx
   140005e16:	cmovl  edi,r14d
   140005e1a:	inc    edi
   140005e1c:	movsxd rdx,edi
   140005e1f:	lea    rdi,[rax+0x18]
   140005e23:	add    rdx,rdx
   140005e26:	mov    rcx,rdi
   140005e29:	mov    r9,rdx
   140005e2c:	call   0x14002c220
   140005e31:	mov    DWORD PTR [rbp+0x8],r14d
   140005e35:	lock add DWORD PTR [rbx-0x8],0xffffffff
   140005e3a:	jg     0x140005e4a
   140005e3c:	mov    rcx,QWORD PTR [rbx-0x18]
   140005e40:	lea    rdx,[rbx-0x18]
   140005e44:	mov    rax,QWORD PTR [rcx]
   140005e47:	call   QWORD PTR [rax+0x8]
   140005e4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e4f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005e54:	mov    QWORD PTR [rsi],rdi
   140005e57:	mov    rsi,QWORD PTR [rsp+0x40]
   140005e5c:	mov    rdi,QWORD PTR [rsp+0x48]
   140005e61:	add    rsp,0x20
   140005e65:	pop    r14
   140005e67:	ret    
   140005e68:	call   0x140005d58
   140005e6d:	int3   
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	rex push rbx
   140005e72:	sub    rsp,0x20
   140005e76:	mov    r8d,edx
   140005e79:	mov    rdx,QWORD PTR [rcx]
   140005e7c:	mov    rbx,rcx
   140005e7f:	sub    rdx,0x18
   140005e83:	mov    rcx,QWORD PTR [rdx]
   140005e86:	cmp    DWORD PTR [rdx+0xc],r8d
   140005e8a:	jge    0x140005eb5
   140005e8c:	test   r8d,r8d
   140005e8f:	jle    0x140005eb5
   140005e91:	mov    rax,QWORD PTR [rcx]
   140005e94:	mov    r9d,0x2
   140005e9a:	call   QWORD PTR [rax+0x10]
   140005e9d:	test   rax,rax
   140005ea0:	je     0x140005eaf
   140005ea2:	add    rax,0x18
   140005ea6:	mov    QWORD PTR [rbx],rax
   140005ea9:	add    rsp,0x20
   140005ead:	pop    rbx
   140005eae:	ret    
   140005eaf:	call   0x140005d58
   140005eb4:	int3   
   140005eb5:	call   0x140005d58
   140005eba:	int3   
   140005ebb:	int3   
   140005ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140005ec1:	mov    QWORD PTR [rsp+0x10],rsi
   140005ec6:	push   rdi
   140005ec7:	sub    rsp,0x30
   140005ecb:	cmp    QWORD PTR [rcx],0x0
   140005ecf:	mov    rbx,rcx
   140005ed2:	jne    0x140005ee6
   140005ed4:	mov    ecx,0x6
   140005ed9:	call   QWORD PTR [rip+0x332e9]        # 0x1400391c8
   140005edf:	xor    eax,eax
   140005ee1:	jmp    0x140005f68
   140005ee6:	mov    rcx,QWORD PTR [rcx+0x8]
   140005eea:	test   rcx,rcx
   140005eed:	je     0x140005ef9
   140005eef:	call   0x14002b138
   140005ef4:	and    QWORD PTR [rbx+0x8],0x0
   140005ef9:	mov    rcx,QWORD PTR [rbx]
   140005efc:	xor    r9d,r9d
   140005eff:	lea    rsi,[rbx+0x10]
   140005f03:	lea    edx,[r9+0x3]
   140005f07:	xor    r8d,r8d
   140005f0a:	mov    QWORD PTR [rsp+0x20],rsi
   140005f0f:	call   QWORD PTR [rip+0x331cb]        # 0x1400390e0
   140005f15:	test   eax,eax
   140005f17:	jne    0x140005f24
   140005f19:	call   QWORD PTR [rip+0x336c1]        # 0x1400395e0
   140005f1f:	cmp    eax,0x7a
   140005f22:	jne    0x140005edf
   140005f24:	mov    ecx,DWORD PTR [rsi]
   140005f26:	call   0x14002b130
   140005f2b:	mov    rdi,rax
   140005f2e:	test   rax,rax
   140005f31:	jne    0x140005f38
   140005f33:	lea    ecx,[rax+0x8]
   140005f36:	jmp    0x140005ed9
   140005f38:	mov    r9d,DWORD PTR [rsi]
   140005f3b:	mov    rcx,QWORD PTR [rbx]
   140005f3e:	mov    r8,rax
   140005f41:	mov    edx,0x3
   140005f46:	mov    QWORD PTR [rsp+0x20],rsi
   140005f4b:	call   QWORD PTR [rip+0x3318f]        # 0x1400390e0
   140005f51:	test   eax,eax
   140005f53:	jne    0x140005f5f
   140005f55:	mov    rcx,rdi
   140005f58:	call   0x14002b138
   140005f5d:	jmp    0x140005edf
   140005f5f:	mov    QWORD PTR [rbx+0x8],rdi
   140005f63:	mov    eax,0x1
   140005f68:	mov    rbx,QWORD PTR [rsp+0x40]
   140005f6d:	mov    rsi,QWORD PTR [rsp+0x48]
   140005f72:	add    rsp,0x30
   140005f76:	pop    rdi
   140005f77:	ret    
   140005f78:	mov    QWORD PTR [rsp+0x10],rbx
   140005f7d:	mov    QWORD PTR [rsp+0x18],rsi
   140005f82:	push   rdi
   140005f83:	sub    rsp,0x20
   140005f87:	xor    ebx,ebx
   140005f89:	mov    rsi,rdx
   140005f8c:	mov    rdi,rcx
   140005f8f:	cmp    QWORD PTR [rcx+0x8],rbx
   140005f93:	jne    0x140005fa3
   140005f95:	call   0x140005ebc
   140005f9a:	test   eax,eax
   140005f9c:	jne    0x140005fa3
   140005f9e:	lea    ecx,[rbx+0xd]
   140005fa1:	jmp    0x140005fe6
   140005fa3:	lea    r8,[rsp+0x30]
   140005fa8:	mov    rdx,rsi
   140005fab:	xor    ecx,ecx
   140005fad:	call   QWORD PTR [rip+0x33135]        # 0x1400390e8
   140005fb3:	test   eax,eax
   140005fb5:	je     0x140005fec
   140005fb7:	mov    rdx,QWORD PTR [rdi+0x8]
   140005fbb:	cmp    DWORD PTR [rdx],ebx
   140005fbd:	jbe    0x140005fe1
   140005fbf:	mov    rax,QWORD PTR [rsp+0x30]
   140005fc4:	mov    r8d,DWORD PTR [rsp+0x34]
   140005fc9:	lea    rcx,[rdx+0x4]
   140005fcd:	cmp    DWORD PTR [rcx],eax
   140005fcf:	jne    0x140005fd7
   140005fd1:	cmp    DWORD PTR [rcx+0x4],r8d
   140005fd5:	je     0x140005ffe
   140005fd7:	inc    ebx
   140005fd9:	add    rcx,0xc
   140005fdd:	cmp    ebx,DWORD PTR [rdx]
   140005fdf:	jb     0x140005fcd
   140005fe1:	mov    ecx,0x490
   140005fe6:	call   QWORD PTR [rip+0x331dc]        # 0x1400391c8
   140005fec:	xor    eax,eax
   140005fee:	mov    rbx,QWORD PTR [rsp+0x38]
   140005ff3:	mov    rsi,QWORD PTR [rsp+0x40]
   140005ff8:	add    rsp,0x20
   140005ffc:	pop    rdi
   140005ffd:	ret    
   140005ffe:	mov    ecx,ebx
   140006000:	mov    eax,0x1
   140006005:	inc    rcx
   140006008:	lea    rcx,[rcx+rcx*2]
   14000600c:	mov    DWORD PTR [rdx+rcx*4],0x2
   140006013:	jmp    0x140005fee
   140006015:	int3   
   140006016:	int3   
   140006017:	int3   
   140006018:	rex push rbx
   14000601a:	sub    rsp,0x20
   14000601e:	mov    rbx,rcx
   140006021:	mov    rcx,QWORD PTR [rcx+0x8]
   140006025:	test   rcx,rcx
   140006028:	je     0x14000602f
   14000602a:	call   0x14002b138
   14000602f:	mov    rcx,QWORD PTR [rbx+0x18]
   140006033:	test   rcx,rcx
   140006036:	je     0x14000603d
   140006038:	call   0x14002b138
   14000603d:	mov    rcx,QWORD PTR [rbx+0x28]
   140006041:	test   rcx,rcx
   140006044:	je     0x14000604b
   140006046:	call   0x14002b138
   14000604b:	mov    rcx,QWORD PTR [rbx]
   14000604e:	test   rcx,rcx
   140006051:	je     0x140006059
   140006053:	call   QWORD PTR [rip+0x33567]        # 0x1400395c0
   140006059:	add    rsp,0x20
   14000605d:	pop    rbx
   14000605e:	ret    
   14000605f:	int3   
   140006060:	sub    rsp,0x38
   140006064:	mov    r9d,r8d
   140006067:	mov    BYTE PTR [rsp+0x20],0x1
   14000606c:	call   0x140006090
   140006071:	add    rsp,0x38
   140006075:	ret    
   140006076:	int3   
   140006077:	int3   
   140006078:	sub    rsp,0x38
   14000607c:	xor    r9d,r9d
   14000607f:	mov    BYTE PTR [rsp+0x20],0x0
   140006084:	call   0x140006090
   140006089:	add    rsp,0x38
   14000608d:	ret    
   14000608e:	int3   
   14000608f:	int3   
   140006090:	mov    QWORD PTR [rsp+0x10],rbx
   140006095:	mov    QWORD PTR [rsp+0x18],rsi
   14000609a:	push   rbp
   14000609b:	push   rdi
   14000609c:	push   r14
   14000609e:	mov    rbp,rsp
   1400060a1:	sub    rsp,0x80
   1400060a8:	mov    rsi,rcx
   1400060ab:	mov    rcx,QWORD PTR [rcx+0x8]
   1400060af:	mov    r14d,r9d
   1400060b2:	mov    rdi,rdx
   1400060b5:	test   rcx,rcx
   1400060b8:	jne    0x1400060c2
   1400060ba:	lea    eax,[rcx+0x6]
   1400060bd:	jmp    0x14000619a
   1400060c2:	test   rdx,rdx
   1400060c5:	jne    0x1400060cf
   1400060c7:	lea    eax,[rdx+0x57]
   1400060ca:	jmp    0x14000619a
   1400060cf:	and    QWORD PTR [rbp-0x40],0x0
   1400060d4:	xor    r9d,r9d
   1400060d7:	lea    rax,[rbp-0x40]
   1400060db:	mov    QWORD PTR [rsp+0x38],rax
   1400060e0:	and    QWORD PTR [rsp+0x30],0x0
   1400060e6:	lea    rax,[rbp-0x38]
   1400060ea:	mov    QWORD PTR [rsp+0x28],rax
   1400060ef:	and    QWORD PTR [rsp+0x20],0x0
   1400060f5:	lea    edx,[r9+0x6]
   1400060f9:	lea    r8d,[r9+0x4]
   1400060fd:	call   QWORD PTR [rip+0x3300d]        # 0x140039110
   140006103:	mov    ebx,eax
   140006105:	test   eax,eax
   140006107:	jne    0x140006198
   14000610d:	mov    dl,BYTE PTR [rbp+0x40]
   140006110:	mov    r8,QWORD PTR [rbp-0x38]
   140006114:	lea    r9,[rbp+0x20]
   140006118:	mov    al,dl
   14000611a:	mov    QWORD PTR [rbp-0x8],rdi
   14000611e:	neg    al
   140006120:	sbb    ecx,ecx
   140006122:	and    ecx,r14d
   140006125:	neg    dl
   140006127:	lea    rdx,[rbp-0x30]
   14000612b:	sbb    eax,eax
   14000612d:	and    DWORD PTR [rbp-0x28],ebx
   140006130:	and    QWORD PTR [rbp-0x20],0x0
   140006135:	and    DWORD PTR [rbp-0x18],ebx
   140006138:	and    DWORD PTR [rbp-0x14],ebx
   14000613b:	and    eax,0xfffffffd
   14000613e:	mov    DWORD PTR [rbp-0x30],ecx
   140006141:	lea    ecx,[rbx+0x1]
   140006144:	add    eax,0x4
   140006147:	mov    DWORD PTR [rbp-0x2c],eax
   14000614a:	mov    DWORD PTR [rbp-0x10],ecx
   14000614d:	call   QWORD PTR [rip+0x32fa5]        # 0x1400390f8
   140006153:	mov    ebx,eax
   140006155:	test   eax,eax
   140006157:	jne    0x14000618e
   140006159:	mov    rax,QWORD PTR [rbp+0x20]
   14000615d:	and    QWORD PTR [rsp+0x30],0x0
   140006163:	mov    rcx,QWORD PTR [rsi+0x8]
   140006167:	mov    QWORD PTR [rsp+0x28],rax
   14000616c:	and    QWORD PTR [rsp+0x20],0x0
   140006172:	lea    edx,[rbx+0x6]
   140006175:	lea    r8d,[rbx+0x4]
   140006179:	xor    r9d,r9d
   14000617c:	call   QWORD PTR [rip+0x32f9e]        # 0x140039120
   140006182:	mov    rcx,QWORD PTR [rbp+0x20]
   140006186:	mov    ebx,eax
   140006188:	call   QWORD PTR [rip+0x3342a]        # 0x1400395b8
   14000618e:	mov    rcx,QWORD PTR [rbp-0x40]
   140006192:	call   QWORD PTR [rip+0x33420]        # 0x1400395b8
   140006198:	mov    eax,ebx
   14000619a:	lea    r11,[rsp+0x80]
   1400061a2:	mov    rbx,QWORD PTR [r11+0x28]
   1400061a6:	mov    rsi,QWORD PTR [r11+0x30]
   1400061aa:	mov    rsp,r11
   1400061ad:	pop    r14
   1400061af:	pop    rdi
   1400061b0:	pop    rbp
   1400061b1:	ret    
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	mov    rax,rsp
   1400061b7:	mov    QWORD PTR [rax+0x8],rbx
   1400061bb:	mov    QWORD PTR [rax+0x10],rbp
   1400061bf:	mov    QWORD PTR [rax+0x18],rsi
   1400061c3:	mov    QWORD PTR [rax+0x20],rdi
   1400061c7:	push   r14
   1400061c9:	sub    rsp,0x20
   1400061cd:	xor    r14d,r14d
   1400061d0:	or     r8,0xffffffffffffffff
   1400061d4:	mov    rbp,rdx
   1400061d7:	mov    rbx,rcx
   1400061da:	cmp    WORD PTR [rdx],r14w
   1400061de:	jne    0x1400061e5
   1400061e0:	mov    edi,r14d
   1400061e3:	jmp    0x1400061f2
   1400061e5:	mov    rdi,r8
   1400061e8:	inc    rdi
   1400061eb:	cmp    WORD PTR [rdx+rdi*2],r14w
   1400061f0:	jne    0x1400061e8
   1400061f2:	mov    rdx,QWORD PTR [rcx+0x18]
   1400061f6:	cmp    rdx,0x8
   1400061fa:	jb     0x140006201
   1400061fc:	mov    rax,QWORD PTR [rcx]
   1400061ff:	jmp    0x140006204
   140006201:	mov    rax,rcx
   140006204:	cmp    rbp,rax
   140006207:	jb     0x14000624c
   140006209:	cmp    rdx,0x8
   14000620d:	jb     0x140006212
   14000620f:	mov    rcx,QWORD PTR [rcx]
   140006212:	mov    rax,QWORD PTR [rbx+0x10]
   140006216:	lea    rcx,[rcx+rax*2]
   14000621a:	cmp    rcx,rbp
   14000621d:	jbe    0x14000624c
   14000621f:	cmp    rdx,0x8
   140006223:	jb     0x14000622a
   140006225:	mov    rax,QWORD PTR [rbx]
   140006228:	jmp    0x14000622d
   14000622a:	mov    rax,rbx
   14000622d:	sub    rbp,rax
   140006230:	mov    r9,rdi
   140006233:	mov    rdx,rbx
   140006236:	sar    rbp,1
   140006239:	mov    rcx,rbx
   14000623c:	mov    r8,rbp
   14000623f:	call   0x14000642c
   140006244:	mov    rbx,rax
   140006247:	jmp    0x1400062f1
   14000624c:	mov    rax,QWORD PTR [rbx+0x10]
   140006250:	sub    r8,rax
   140006253:	cmp    r8,rdi
   140006256:	jbe    0x14000630f
   14000625c:	test   rdi,rdi
   14000625f:	je     0x1400062f1
   140006265:	lea    rsi,[rax+rdi*1]
   140006269:	movabs rcx,0x7ffffffffffffffe
   140006273:	cmp    rsi,rcx
   140006276:	ja     0x14000631c
   14000627c:	cmp    rdx,rsi
   14000627f:	jae    0x140006291
   140006281:	mov    r8,rax
   140006284:	mov    rdx,rsi
   140006287:	mov    rcx,rbx
   14000628a:	call   0x140003aac
   14000628f:	jmp    0x1400062ac
   140006291:	test   rsi,rsi
   140006294:	jne    0x1400062b1
   140006296:	mov    QWORD PTR [rbx+0x10],r14
   14000629a:	cmp    rdx,0x8
   14000629e:	jb     0x1400062a5
   1400062a0:	mov    rax,QWORD PTR [rbx]
   1400062a3:	jmp    0x1400062a8
   1400062a5:	mov    rax,rbx
   1400062a8:	mov    WORD PTR [rax],r14w
   1400062ac:	test   rsi,rsi
   1400062af:	je     0x1400062f1
   1400062b1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400062b6:	jb     0x1400062bd
   1400062b8:	mov    rcx,QWORD PTR [rbx]
   1400062bb:	jmp    0x1400062c0
   1400062bd:	mov    rcx,rbx
   1400062c0:	test   rdi,rdi
   1400062c3:	je     0x1400062d9
   1400062c5:	mov    rax,QWORD PTR [rbx+0x10]
   1400062c9:	lea    r8,[rdi+rdi*1]
   1400062cd:	mov    rdx,rbp
   1400062d0:	lea    rcx,[rcx+rax*2]
   1400062d4:	call   0x140020e80
   1400062d9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400062de:	mov    QWORD PTR [rbx+0x10],rsi
   1400062e2:	jb     0x1400062e9
   1400062e4:	mov    rax,QWORD PTR [rbx]
   1400062e7:	jmp    0x1400062ec
   1400062e9:	mov    rax,rbx
   1400062ec:	mov    WORD PTR [rax+rsi*2],r14w
   1400062f1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400062f6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400062fb:	mov    rdi,QWORD PTR [rsp+0x48]
   140006300:	mov    rax,rbx
   140006303:	mov    rbx,QWORD PTR [rsp+0x30]
   140006308:	add    rsp,0x20
   14000630c:	pop    r14
   14000630e:	ret    
   14000630f:	lea    rcx,[rip+0x37302]        # 0x14003d618
   140006316:	call   0x14002a95c
   14000631b:	int3   
   14000631c:	lea    rcx,[rip+0x372f5]        # 0x14003d618
   140006323:	call   0x14002a95c
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	mov    rax,rsp
   14000632f:	mov    QWORD PTR [rax+0x8],rcx
   140006333:	push   rdi
   140006334:	sub    rsp,0x30
   140006338:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140006340:	mov    QWORD PTR [rax+0x10],rbx
   140006344:	mov    QWORD PTR [rax+0x18],rsi
   140006348:	mov    rbx,rdx
   14000634b:	mov    rsi,rcx
   14000634e:	mov    rax,QWORD PTR [rcx+0x8]
   140006352:	mov    r8,QWORD PTR [rcx]
   140006355:	mov    r9,rax
   140006358:	sub    r9,r8
   14000635b:	cmp    r9,rdx
   14000635e:	jbe    0x14000639b
   140006360:	add    rbx,r8
   140006363:	cmp    rbx,r8
   140006366:	jne    0x140006371
   140006368:	mov    QWORD PTR [rcx+0x8],r8
   14000636c:	jmp    0x14000641b
   140006371:	cmp    rbx,rax
   140006374:	je     0x14000641b
   14000637a:	mov    rdi,rax
   14000637d:	sub    rdi,rax
   140006380:	mov    r8,rdi
   140006383:	mov    rdx,rax
   140006386:	mov    rcx,rbx
   140006389:	call   0x140020e80
   14000638e:	lea    rax,[rdi+rbx*1]
   140006392:	mov    QWORD PTR [rsi+0x8],rax
   140006396:	jmp    0x14000641b
   14000639b:	jae    0x14000641b
   14000639d:	mov    r10,r8
   1400063a0:	sub    r10,rax
   1400063a3:	lea    r11,[r10+rdx*1]
   1400063a7:	mov    rdx,QWORD PTR [rcx+0x10]
   1400063ab:	mov    rcx,rdx
   1400063ae:	sub    rcx,rax
   1400063b1:	cmp    rcx,r11
   1400063b4:	jae    0x1400063fc
   1400063b6:	lea    rax,[r10-0x1]
   1400063ba:	cmp    rax,r11
   1400063bd:	jae    0x1400063cc
   1400063bf:	lea    rcx,[rip+0x3777a]        # 0x14003db40
   1400063c6:	call   0x14002a95c
   1400063cb:	int3   
   1400063cc:	lea    r10,[r9+r11*1]
   1400063d0:	sub    rdx,r8
   1400063d3:	mov    rcx,rdx
   1400063d6:	shr    rcx,1
   1400063d9:	or     rax,0xffffffffffffffff
   1400063dd:	sub    rax,rcx
   1400063e0:	cmp    rax,rdx
   1400063e3:	jae    0x1400063e9
   1400063e5:	xor    edx,edx
   1400063e7:	jmp    0x1400063ec
   1400063e9:	add    rdx,rcx
   1400063ec:	cmp    rdx,r10
   1400063ef:	cmovb  rdx,r10
   1400063f3:	mov    rcx,rsi
   1400063f6:	call   0x140006560
   1400063fb:	nop
   1400063fc:	mov    rcx,QWORD PTR [rsi+0x8]
   140006400:	mov    r8,QWORD PTR [rsi]
   140006403:	sub    r8,rcx
   140006406:	add    r8,rbx
   140006409:	xor    edx,edx
   14000640b:	call   0x1400260e0
   140006410:	nop
   140006411:	mov    rcx,QWORD PTR [rsi]
   140006414:	add    rcx,rbx
   140006417:	mov    QWORD PTR [rsi+0x8],rcx
   14000641b:	mov    rbx,QWORD PTR [rsp+0x48]
   140006420:	mov    rsi,QWORD PTR [rsp+0x50]
   140006425:	add    rsp,0x30
   140006429:	pop    rdi
   14000642a:	ret    
   14000642b:	int3   
   14000642c:	mov    QWORD PTR [rsp+0x8],rbx
   140006431:	mov    QWORD PTR [rsp+0x10],rbp
   140006436:	mov    QWORD PTR [rsp+0x18],rsi
   14000643b:	push   rdi
   14000643c:	push   r14
   14000643e:	push   r15
   140006440:	sub    rsp,0x20
   140006444:	mov    rax,QWORD PTR [rdx+0x10]
   140006448:	mov    rsi,r9
   14000644b:	mov    rbp,r8
   14000644e:	mov    r14,rdx
   140006451:	mov    rbx,rcx
   140006454:	cmp    rax,r8
   140006457:	jb     0x140006536
   14000645d:	sub    rax,r8
   140006460:	mov    r8,QWORD PTR [rcx+0x10]
   140006464:	cmp    rax,r9
   140006467:	cmovb  rsi,rax
   14000646b:	or     rax,0xffffffffffffffff
   14000646f:	sub    rax,r8
   140006472:	cmp    rax,rsi
   140006475:	jbe    0x140006543
   14000647b:	xor    r15d,r15d
   14000647e:	test   rsi,rsi
   140006481:	je     0x14000651a
   140006487:	lea    rdi,[r8+rsi*1]
   14000648b:	movabs rax,0x7ffffffffffffffe
   140006495:	cmp    rdi,rax
   140006498:	ja     0x140006550
   14000649e:	cmp    QWORD PTR [rcx+0x18],rdi
   1400064a2:	jae    0x1400064ae
   1400064a4:	mov    rdx,rdi
   1400064a7:	call   0x140003aac
   1400064ac:	jmp    0x1400064ca
   1400064ae:	test   rdi,rdi
   1400064b1:	jne    0x1400064cf
   1400064b3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400064b8:	mov    QWORD PTR [rcx+0x10],r15
   1400064bc:	jb     0x1400064c3
   1400064be:	mov    rax,QWORD PTR [rcx]
   1400064c1:	jmp    0x1400064c6
   1400064c3:	mov    rax,rcx
   1400064c6:	mov    WORD PTR [rax],r15w
   1400064ca:	test   rdi,rdi
   1400064cd:	je     0x14000651a
   1400064cf:	cmp    QWORD PTR [r14+0x18],0x8
   1400064d4:	jb     0x1400064d9
   1400064d6:	mov    r14,QWORD PTR [r14]
   1400064d9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400064de:	jb     0x1400064e5
   1400064e0:	mov    rcx,QWORD PTR [rbx]
   1400064e3:	jmp    0x1400064e8
   1400064e5:	mov    rcx,rbx
   1400064e8:	test   rsi,rsi
   1400064eb:	je     0x140006502
   1400064ed:	mov    rax,QWORD PTR [rbx+0x10]
   1400064f1:	lea    r8,[rsi+rsi*1]
   1400064f5:	lea    rdx,[r14+rbp*2]
   1400064f9:	lea    rcx,[rcx+rax*2]
   1400064fd:	call   0x140020e80
   140006502:	cmp    QWORD PTR [rbx+0x18],0x8
   140006507:	mov    QWORD PTR [rbx+0x10],rdi
   14000650b:	jb     0x140006512
   14000650d:	mov    rax,QWORD PTR [rbx]
   140006510:	jmp    0x140006515
   140006512:	mov    rax,rbx
   140006515:	mov    WORD PTR [rax+rdi*2],r15w
   14000651a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000651f:	mov    rsi,QWORD PTR [rsp+0x50]
   140006524:	mov    rax,rbx
   140006527:	mov    rbx,QWORD PTR [rsp+0x40]
   14000652c:	add    rsp,0x20
   140006530:	pop    r15
   140006532:	pop    r14
   140006534:	pop    rdi
   140006535:	ret    
   140006536:	lea    rcx,[rip+0x370c3]        # 0x14003d600
   14000653d:	call   0x14002a994
   140006542:	int3   
   140006543:	lea    rcx,[rip+0x370ce]        # 0x14003d618
   14000654a:	call   0x14002a95c
   14000654f:	int3   
   140006550:	lea    rcx,[rip+0x370c1]        # 0x14003d618
   140006557:	call   0x14002a95c
   14000655c:	int3   
   14000655d:	int3   
   14000655e:	int3   
   14000655f:	int3   
   140006560:	mov    rax,rsp
   140006563:	push   r14
   140006565:	sub    rsp,0x30
   140006569:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140006571:	mov    QWORD PTR [rax+0x8],rbx
   140006575:	mov    QWORD PTR [rax+0x18],rsi
   140006579:	mov    QWORD PTR [rax+0x20],rdi
   14000657d:	mov    rsi,rdx
   140006580:	mov    rdi,rcx
   140006583:	xor    ebx,ebx
   140006585:	mov    QWORD PTR [rsp+0x48],rbx
   14000658a:	test   rdx,rdx
   14000658d:	je     0x1400065b0
   14000658f:	cmp    rdx,0xffffffffffffffff
   140006593:	ja     0x1400065aa
   140006595:	mov    rcx,rdx
   140006598:	call   0x140021a98
   14000659d:	mov    rbx,rax
   1400065a0:	mov    QWORD PTR [rsp+0x48],rax
   1400065a5:	test   rax,rax
   1400065a8:	jne    0x1400065b0
   1400065aa:	call   0x14002a918
   1400065af:	nop
   1400065b0:	mov    r8,QWORD PTR [rdi+0x8]
   1400065b4:	sub    r8,QWORD PTR [rdi]
   1400065b7:	mov    rdx,QWORD PTR [rdi]
   1400065ba:	mov    rcx,rbx
   1400065bd:	call   0x140020e80
   1400065c2:	nop
   1400065c3:	mov    rcx,QWORD PTR [rdi]
   1400065c6:	mov    r14,QWORD PTR [rdi+0x8]
   1400065ca:	sub    r14,rcx
   1400065cd:	test   rcx,rcx
   1400065d0:	je     0x1400065d7
   1400065d2:	call   0x140020e30
   1400065d7:	lea    rax,[rbx+rsi*1]
   1400065db:	mov    QWORD PTR [rdi+0x10],rax
   1400065df:	lea    rax,[rbx+r14*1]
   1400065e3:	mov    QWORD PTR [rdi+0x8],rax
   1400065e7:	mov    QWORD PTR [rdi],rbx
   1400065ea:	mov    rbx,QWORD PTR [rsp+0x40]
   1400065ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400065f4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400065f9:	add    rsp,0x30
   1400065fd:	pop    r14
   1400065ff:	ret    
   140006600:	rex push rbx
   140006602:	sub    rsp,0x20
   140006606:	lea    rax,[rip+0x376bb]        # 0x14003dcc8
   14000660d:	mov    rbx,rcx
   140006610:	mov    QWORD PTR [rcx],rax
   140006613:	test   dl,0x1
   140006616:	je     0x14000661d
   140006618:	call   0x140020e30
   14000661d:	mov    rax,rbx
   140006620:	add    rsp,0x20
   140006624:	pop    rbx
   140006625:	ret    
   140006626:	int3   
   140006627:	int3   
   140006628:	mov    QWORD PTR [rsp+0x10],rbx
   14000662d:	push   rdi
   14000662e:	sub    rsp,0x20
   140006632:	xor    ebx,ebx
   140006634:	cmp    BYTE PTR [rip+0x4b69f],bl        # 0x140051cd9
   14000663a:	jne    0x140006727
   140006640:	mov    eax,DWORD PTR [rip+0x4a72e]        # 0x140050d74
   140006646:	lea    edi,[rbx+0x1]
   140006649:	mov    BYTE PTR [rip+0x4b689],dil        # 0x140051cd9
   140006650:	test   eax,eax
   140006652:	jne    0x140006661
   140006654:	call   0x140004f38
   140006659:	mov    eax,edi
   14000665b:	mov    DWORD PTR [rip+0x4a713],eax        # 0x140050d74
   140006661:	mov    edx,DWORD PTR [rip+0x4a725]        # 0x140050d8c
   140006667:	mov    ecx,DWORD PTR [rip+0x4a803]        # 0x140050e70
   14000666d:	test   edx,edx
   14000666f:	jne    0x14000669a
   140006671:	mov    DWORD PTR [rip+0x4a719],ecx        # 0x140050d90
   140006677:	test   ecx,ecx
   140006679:	jne    0x140006692
   14000667b:	call   0x1400052a8
   140006680:	mov    ecx,DWORD PTR [rip+0x4a7ea]        # 0x140050e70
   140006686:	mov    DWORD PTR [rip+0x4a710],eax        # 0x140050d9c
   14000668c:	mov    eax,DWORD PTR [rip+0x4a6e2]        # 0x140050d74
   140006692:	mov    edx,edi
   140006694:	mov    DWORD PTR [rip+0x4a6f2],edx        # 0x140050d8c
   14000669a:	cmp    DWORD PTR [rip+0x4a6f0],ebx        # 0x140050d90
   1400066a0:	jne    0x1400066ec
   1400066a2:	test   eax,eax
   1400066a4:	jne    0x1400066bf
   1400066a6:	call   0x140004f38
   1400066ab:	mov    edx,DWORD PTR [rip+0x4a6db]        # 0x140050d8c
   1400066b1:	mov    ecx,DWORD PTR [rip+0x4a7b9]        # 0x140050e70
   1400066b7:	mov    eax,edi
   1400066b9:	mov    DWORD PTR [rip+0x4a6b5],eax        # 0x140050d74
   1400066bf:	test   edx,edx
   1400066c1:	jne    0x1400066e4
   1400066c3:	mov    DWORD PTR [rip+0x4a6c7],ecx        # 0x140050d90
   1400066c9:	test   ecx,ecx
   1400066cb:	jne    0x1400066de
   1400066cd:	call   0x1400052a8
   1400066d2:	mov    DWORD PTR [rip+0x4a6c4],eax        # 0x140050d9c
   1400066d8:	mov    eax,DWORD PTR [rip+0x4a696]        # 0x140050d74
   1400066de:	mov    DWORD PTR [rip+0x4a6a8],edi        # 0x140050d8c
   1400066e4:	cmp    DWORD PTR [rip+0x4a6b2],ebx        # 0x140050d9c
   1400066ea:	je     0x140006727
   1400066ec:	test   eax,eax
   1400066ee:	jne    0x1400066fb
   1400066f0:	call   0x140004f38
   1400066f5:	mov    DWORD PTR [rip+0x4a679],edi        # 0x140050d74
   1400066fb:	cmp    WORD PTR [rip+0x4a686],di        # 0x140050d88
   140006702:	jle    0x140006727
   140006704:	lea    rcx,[rip+0x4b675]        # 0x140051d80
   14000670b:	call   QWORD PTR [rip+0x32d77]        # 0x140039488
   140006711:	test   eax,eax
   140006713:	je     0x140006727
   140006715:	mov    BYTE PTR [rip+0x4b5be],dil        # 0x140051cda
   14000671c:	call   0x140006980
   140006721:	mov    DWORD PTR [rip+0x4b5b5],eax        # 0x140051cdc
   140006727:	cmp    BYTE PTR [rip+0x4b5ad],bl        # 0x140051cda
   14000672d:	je     0x140006781
   14000672f:	lea    rcx,[rsp+0x30]
   140006734:	call   QWORD PTR [rip+0x32b0e]        # 0x140039248
   14000673a:	test   eax,eax
   14000673c:	je     0x14000678d
   14000673e:	mov    eax,DWORD PTR [rip+0x4b598]        # 0x140051cdc
   140006744:	xorps  xmm2,xmm2
   140006747:	xorps  xmm0,xmm0
   14000674a:	cvtsi2sd xmm2,QWORD PTR [rsp+0x30]
   140006751:	cvtsi2sd xmm0,QWORD PTR [rip+0x4b626]        # 0x140051d80
   14000675a:	mulsd  xmm2,QWORD PTR [rip+0x38e96]        # 0x14003f5f8
   140006762:	divsd  xmm2,xmm0
   140006766:	xorps  xmm0,xmm0
   140006769:	cvtsi2sd xmm0,rax
   14000676e:	mulsd  xmm2,QWORD PTR [rip+0x38e82]        # 0x14003f5f8
   140006776:	mulsd  xmm2,xmm0
   14000677a:	cvttsd2si rbx,xmm2
   14000677f:	jmp    0x14000678d
   140006781:	rdtsc  
   140006783:	shl    rdx,0x20
   140006787:	or     rax,rdx
   14000678a:	mov    rbx,rax
   14000678d:	mov    rax,rbx
   140006790:	mov    rbx,QWORD PTR [rsp+0x38]
   140006795:	add    rsp,0x20
   140006799:	pop    rdi
   14000679a:	ret    
   14000679b:	int3   
   14000679c:	mov    QWORD PTR [rsp+0x8],rbx
   1400067a1:	push   rdi
   1400067a2:	sub    rsp,0x20
   1400067a6:	mov    rax,QWORD PTR [rip+0x4a6d3]        # 0x140050e80
   1400067ad:	mov    edi,edx
   1400067af:	mov    rbx,rcx
   1400067b2:	test   rax,rax
   1400067b5:	jne    0x1400067e5
   1400067b7:	lea    rcx,[rip+0x37512]        # 0x14003dcd0
   1400067be:	call   QWORD PTR [rip+0x32c4c]        # 0x140039410
   1400067c4:	lea    rdx,[rip+0x374c5]        # 0x14003dc90
   1400067cb:	mov    rcx,rax
   1400067ce:	call   QWORD PTR [rip+0x32a1c]        # 0x1400391f0
   1400067d4:	mov    QWORD PTR [rip+0x4a6a5],rax        # 0x140050e80
   1400067db:	test   rax,rax
   1400067de:	jne    0x1400067e5
   1400067e0:	mov    rax,rbx
   1400067e3:	jmp    0x1400067ef
   1400067e5:	mov    r8b,0x3
   1400067e8:	mov    edx,edi
   1400067ea:	mov    rcx,rbx
   1400067ed:	call   rax
   1400067ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067f4:	add    rsp,0x20
   1400067f8:	pop    rdi
   1400067f9:	ret    
   1400067fa:	int3   
   1400067fb:	int3   
   1400067fc:	mov    QWORD PTR [rsp+0x8],rbx
   140006801:	push   rdi
   140006802:	sub    rsp,0x20
   140006806:	mov    rbx,rcx
   140006809:	mov    rcx,QWORD PTR [rcx+0x8]
   14000680d:	mov    rdi,rdx
   140006810:	cmp    rdx,rcx
   140006813:	jae    0x14000688e
   140006815:	cmp    QWORD PTR [rbx],rdx
   140006818:	ja     0x14000688e
   14000681a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000681e:	sub    rdi,QWORD PTR [rbx]
   140006821:	cmp    rcx,rdx
   140006824:	jne    0x140006885
   140006826:	mov    rax,rdx
   140006829:	sub    rax,rcx
   14000682c:	sar    rax,0x5
   140006830:	cmp    rax,0x1
   140006834:	jae    0x140006885
   140006836:	sub    rcx,QWORD PTR [rbx]
   140006839:	movabs r8,0x7ffffffffffffff
   140006843:	sar    rcx,0x5
   140006847:	mov    rax,r8
   14000684a:	sub    rax,rcx
   14000684d:	cmp    rax,0x1
   140006851:	jb     0x14000690e
   140006857:	sub    rdx,QWORD PTR [rbx]
   14000685a:	inc    rcx
   14000685d:	sar    rdx,0x5
   140006861:	mov    rax,rdx
   140006864:	shr    rax,1
   140006867:	sub    r8,rax
   14000686a:	cmp    r8,rdx
   14000686d:	jae    0x140006873
   14000686f:	xor    edx,edx
   140006871:	jmp    0x140006876
   140006873:	add    rdx,rax
   140006876:	cmp    rdx,rcx
   140006879:	cmovb  rdx,rcx
   14000687d:	mov    rcx,rbx
   140006880:	call   0x140003910
   140006885:	and    rdi,0xffffffffffffffe0
   140006889:	add    rdi,QWORD PTR [rbx]
   14000688c:	jmp    0x1400068f2
   14000688e:	mov    rdx,QWORD PTR [rbx+0x10]
   140006892:	cmp    rcx,rdx
   140006895:	jne    0x1400068f2
   140006897:	mov    rax,rdx
   14000689a:	sub    rax,rcx
   14000689d:	sar    rax,0x5
   1400068a1:	cmp    rax,0x1
   1400068a5:	jae    0x1400068f2
   1400068a7:	sub    rcx,QWORD PTR [rbx]
   1400068aa:	movabs r8,0x7ffffffffffffff
   1400068b4:	sar    rcx,0x5
   1400068b8:	mov    rax,r8
   1400068bb:	sub    rax,rcx
   1400068be:	cmp    rax,0x1
   1400068c2:	jb     0x14000691b
   1400068c4:	sub    rdx,QWORD PTR [rbx]
   1400068c7:	inc    rcx
   1400068ca:	sar    rdx,0x5
   1400068ce:	mov    rax,rdx
   1400068d1:	shr    rax,1
   1400068d4:	sub    r8,rax
   1400068d7:	cmp    r8,rdx
   1400068da:	jae    0x1400068e0
   1400068dc:	xor    edx,edx
   1400068de:	jmp    0x1400068e3
   1400068e0:	add    rdx,rax
   1400068e3:	cmp    rdx,rcx
   1400068e6:	cmovb  rdx,rcx
   1400068ea:	mov    rcx,rbx
   1400068ed:	call   0x140003910
   1400068f2:	mov    rdx,QWORD PTR [rbx+0x8]
   1400068f6:	mov    r8,rdi
   1400068f9:	call   0x140003d5c
   1400068fe:	add    QWORD PTR [rbx+0x8],0x20
   140006903:	mov    rbx,QWORD PTR [rsp+0x30]
   140006908:	add    rsp,0x20
   14000690c:	pop    rdi
   14000690d:	ret    
   14000690e:	lea    rcx,[rip+0x3722b]        # 0x14003db40
   140006915:	call   0x14002a95c
   14000691a:	int3   
   14000691b:	lea    rcx,[rip+0x3721e]        # 0x14003db40
   140006922:	call   0x14002a95c
   140006927:	int3   
   140006928:	cmp    DWORD PTR [rip+0x4a561],0x0        # 0x140050e90
   14000692f:	mov    ecx,0x9
   140006934:	je     0x14000693b
   140006936:	mov    ecx,0x8009
   14000693b:	mov    edx,DWORD PTR [rip+0x4a553]        # 0x140050e94
   140006941:	dec    edx
   140006943:	je     0x140006971
   140006945:	dec    edx
   140006947:	je     0x14000696a
   140006949:	dec    edx
   14000694b:	je     0x140006963
   14000694d:	dec    edx
   14000694f:	je     0x14000695c
   140006951:	dec    edx
   140006953:	jne    0x140006979
   140006955:	mov    eax,0x400
   14000695a:	jmp    0x140006976
   14000695c:	mov    eax,0x800
   140006961:	jmp    0x140006976
   140006963:	mov    eax,0x1000
   140006968:	jmp    0x140006976
   14000696a:	mov    eax,0x2000
   14000696f:	jmp    0x140006976
   140006971:	mov    eax,0x4000
   140006976:	or     cx,ax
   140006979:	movzx  eax,cx
   14000697c:	ret    
   14000697d:	int3   
   14000697e:	int3   
   14000697f:	int3   
   140006980:	rex push rbp
   140006982:	push   rbx
   140006983:	push   rdi
   140006984:	mov    rbp,rsp
   140006987:	sub    rsp,0x30
   14000698b:	lea    rax,[rbp+0x30]
   14000698f:	lea    rdx,[rip+0x3735a]        # 0x14003dcf0
   140006996:	mov    r9d,0x20019
   14000699c:	xor    r8d,r8d
   14000699f:	mov    rcx,0xffffffff80000002
   1400069a6:	mov    QWORD PTR [rsp+0x20],rax
   1400069ab:	call   QWORD PTR [rip+0x32657]        # 0x140039008
   1400069b1:	xor    edi,edi
   1400069b3:	test   eax,eax
   1400069b5:	jne    0x140006a65
   1400069bb:	mov    rcx,QWORD PTR [rbp+0x30]
   1400069bf:	lea    rax,[rbp+0x20]
   1400069c3:	lea    rdx,[rip+0x37356]        # 0x14003dd20
   1400069ca:	mov    QWORD PTR [rsp+0x28],rax
   1400069cf:	lea    rax,[rbp+0x28]
   1400069d3:	xor    r9d,r9d
   1400069d6:	xor    r8d,r8d
   1400069d9:	mov    QWORD PTR [rbp+0x28],rdi
   1400069dd:	mov    DWORD PTR [rbp+0x20],0x8
   1400069e4:	mov    QWORD PTR [rsp+0x20],rax
   1400069e9:	call   QWORD PTR [rip+0x32611]        # 0x140039000
   1400069ef:	mov    ebx,eax
   1400069f1:	test   eax,eax
   1400069f3:	je     0x140006a4f
   1400069f5:	mov    rcx,QWORD PTR [rbp+0x30]
   1400069f9:	lea    rax,[rbp+0x20]
   1400069fd:	lea    rdx,[rip+0x37324]        # 0x14003dd28
   140006a04:	mov    QWORD PTR [rsp+0x28],rax
   140006a09:	lea    rax,[rbp+0x28]
   140006a0d:	xor    r9d,r9d
   140006a10:	xor    r8d,r8d
   140006a13:	mov    QWORD PTR [rsp+0x20],rax
   140006a18:	call   QWORD PTR [rip+0x325e2]        # 0x140039000
   140006a1e:	mov    ebx,eax
   140006a20:	test   eax,eax
   140006a22:	je     0x140006a4f
   140006a24:	mov    rcx,QWORD PTR [rbp+0x30]
   140006a28:	lea    rax,[rbp+0x20]
   140006a2c:	lea    rdx,[rip+0x372fd]        # 0x14003dd30
   140006a33:	mov    QWORD PTR [rsp+0x28],rax
   140006a38:	lea    rax,[rbp+0x28]
   140006a3c:	xor    r9d,r9d
   140006a3f:	xor    r8d,r8d
   140006a42:	mov    QWORD PTR [rsp+0x20],rax
   140006a47:	call   QWORD PTR [rip+0x325b3]        # 0x140039000
   140006a4d:	mov    ebx,eax
   140006a4f:	mov    rcx,QWORD PTR [rbp+0x30]
   140006a53:	call   QWORD PTR [rip+0x325b7]        # 0x140039010
   140006a59:	mov    rax,QWORD PTR [rbp+0x28]
   140006a5d:	test   ebx,ebx
   140006a5f:	cmovne rax,rdi
   140006a63:	jmp    0x140006a69
   140006a65:	mov    rax,QWORD PTR [rbp+0x28]
   140006a69:	add    rsp,0x30
   140006a6d:	pop    rdi
   140006a6e:	pop    rbx
   140006a6f:	pop    rbp
   140006a70:	ret    
   140006a71:	int3   
   140006a72:	int3   
   140006a73:	int3   
   140006a74:	mov    rax,rsp
   140006a77:	mov    QWORD PTR [rax+0x8],rbx
   140006a7b:	mov    QWORD PTR [rax+0x10],rbp
   140006a7f:	mov    QWORD PTR [rax+0x18],rsi
   140006a83:	mov    QWORD PTR [rax+0x20],rdi
   140006a87:	push   r12
   140006a89:	push   r14
   140006a8b:	push   r15
   140006a8d:	sub    rsp,0x30
   140006a91:	xor    r15d,r15d
   140006a94:	lea    rax,[rip+0x3746d]        # 0x14003df08
   140006a9b:	lea    rdi,[rip+0x36fc6]        # 0x14003da68
   140006aa2:	test   cl,cl
   140006aa4:	mov    rbx,rdx
   140006aa7:	lea    rsi,[rip+0x4ab32]        # 0x1400515e0
   140006aae:	mov    r14d,r15d
   140006ab1:	lea    ebp,[r15+0x16]
   140006ab5:	lea    r12,[rip+0xffffffffffff9544]        # 0x140000000
   140006abc:	cmovne rdi,rax
   140006ac0:	test   rbx,rbx
   140006ac3:	je     0x140006ace
   140006ac5:	mov    rcx,rbx
   140006ac8:	cmp    WORD PTR [rbx],r15w
   140006acc:	jne    0x140006ad5
   140006ace:	lea    rcx,[rip+0x37423]        # 0x14003def8
   140006ad5:	mov    rax,QWORD PTR [r14+r12*1+0x4e520]
   140006add:	lea    r8,[rip+0x3742c]        # 0x14003df10
   140006ae4:	mov    r9,rdi
   140006ae7:	mov    QWORD PTR [rsp+0x28],rax
   140006aec:	mov    QWORD PTR [rsp+0x20],rcx
   140006af1:	mov    rcx,rsi
   140006af4:	mov    edx,0x50
   140006af9:	call   0x140003df0
   140006afe:	mov    QWORD PTR [r14+r12*1+0x50ea0],rsi
   140006b06:	add    rsi,0x50
   140006b0a:	add    r14,0x8
   140006b0e:	dec    rbp
   140006b11:	jne    0x140006ac0
   140006b13:	mov    rbx,QWORD PTR [rsp+0x50]
   140006b18:	mov    rbp,QWORD PTR [rsp+0x58]
   140006b1d:	mov    rsi,QWORD PTR [rsp+0x60]
   140006b22:	mov    rdi,QWORD PTR [rsp+0x68]
   140006b27:	mov    DWORD PTR [rip+0x4a367],0x1        # 0x140050e98
   140006b31:	add    rsp,0x30
   140006b35:	pop    r15
   140006b37:	pop    r14
   140006b39:	pop    r12
   140006b3b:	ret    
   140006b3c:	mov    QWORD PTR [rsp+0x8],rcx
   140006b41:	push   rdi
   140006b42:	sub    rsp,0x30
   140006b46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006b4f:	mov    QWORD PTR [rsp+0x48],rbx
   140006b54:	mov    ebx,edx
   140006b56:	mov    rdi,rcx
   140006b59:	call   0x140026484
   140006b5e:	test   bl,0x1
   140006b61:	je     0x140006b6b
   140006b63:	mov    rcx,rdi
   140006b66:	call   0x140020e30
   140006b6b:	mov    rax,rdi
   140006b6e:	mov    rbx,QWORD PTR [rsp+0x48]
   140006b73:	add    rsp,0x30
   140006b77:	pop    rdi
   140006b78:	ret    
   140006b79:	int3   
   140006b7a:	int3   
   140006b7b:	int3   
   140006b7c:	mov    QWORD PTR [rsp+0x8],rcx
   140006b81:	sub    rsp,0x38
   140006b85:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006b8e:	add    rsp,0x38
   140006b92:	jmp    0x140026484
   140006b97:	int3   
   140006b98:	mov    QWORD PTR [rsp+0x8],rcx
   140006b9d:	push   rdi
   140006b9e:	sub    rsp,0x30
   140006ba2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bab:	mov    QWORD PTR [rsp+0x48],rbx
   140006bb0:	mov    ebx,edx
   140006bb2:	mov    rdi,rcx
   140006bb5:	call   0x140026484
   140006bba:	test   bl,0x1
   140006bbd:	je     0x140006bc7
   140006bbf:	mov    rcx,rdi
   140006bc2:	call   0x140020e30
   140006bc7:	mov    rax,rdi
   140006bca:	mov    rbx,QWORD PTR [rsp+0x48]
   140006bcf:	add    rsp,0x30
   140006bd3:	pop    rdi
   140006bd4:	ret    
   140006bd5:	int3   
   140006bd6:	int3   
   140006bd7:	int3   
   140006bd8:	mov    QWORD PTR [rsp+0x8],rcx
   140006bdd:	sub    rsp,0x38
   140006be1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bea:	add    rsp,0x38
   140006bee:	jmp    0x140026484
   140006bf3:	int3   
   140006bf4:	sub    rsp,0x28
   140006bf8:	xor    eax,eax
   140006bfa:	xchg   QWORD PTR [rcx],rax
   140006bfd:	test   rax,rax
   140006c00:	je     0x140006c0b
   140006c02:	mov    rcx,rax
   140006c05:	call   QWORD PTR [rip+0x324bd]        # 0x1400390c8
   140006c0b:	add    rsp,0x28
   140006c0f:	ret    
   140006c10:	mov    QWORD PTR [rsp+0x8],rcx
   140006c15:	push   rbx
   140006c16:	sub    rsp,0x30
   140006c1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006c23:	mov    rbx,rcx
   140006c26:	call   0x140026458
   140006c2b:	nop
   140006c2c:	lea    rax,[rip+0x36445]        # 0x14003d078
   140006c33:	mov    QWORD PTR [rbx],rax
   140006c36:	lea    rax,[rip+0x36453]        # 0x14003d090
   140006c3d:	mov    QWORD PTR [rbx],rax
   140006c40:	mov    rax,rbx
   140006c43:	add    rsp,0x30
   140006c47:	pop    rbx
   140006c48:	ret    
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	mov    QWORD PTR [rsp+0x8],rcx
   140006c51:	push   rbx
   140006c52:	sub    rsp,0x30
   140006c56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006c5f:	mov    rbx,rcx
   140006c62:	call   0x140026458
   140006c67:	nop
   140006c68:	lea    rax,[rip+0x36409]        # 0x14003d078
   140006c6f:	mov    QWORD PTR [rbx],rax
   140006c72:	mov    rax,rbx
   140006c75:	add    rsp,0x30
   140006c79:	pop    rbx
   140006c7a:	ret    
   140006c7b:	int3   
   140006c7c:	mov    rax,rsp
   140006c7f:	push   rbp
   140006c80:	push   rsi
   140006c81:	push   rdi
   140006c82:	lea    rbp,[rax-0x5f]
   140006c86:	sub    rsp,0xa0
   140006c8d:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140006c95:	mov    QWORD PTR [rax+0x18],rbx
   140006c99:	mov    rax,QWORD PTR [rip+0x467a8]        # 0x14004d448
   140006ca0:	xor    rax,rsp
   140006ca3:	mov    QWORD PTR [rbp+0x3f],rax
   140006ca7:	mov    rdi,rdx
   140006caa:	mov    rsi,rcx
   140006cad:	mov    QWORD PTR [rbp-0x31],r8
   140006cb1:	mov    rcx,QWORD PTR [rbp-0x31]
   140006cb5:	test   rcx,rcx
   140006cb8:	jne    0x140006cfa
   140006cba:	lea    rax,[rip+0x3726f]        # 0x14003df30
   140006cc1:	mov    QWORD PTR [rbp-0x21],rax
   140006cc5:	lea    rdx,[rbp-0x21]
   140006cc9:	lea    rcx,[rbp-0x19]
   140006ccd:	call   0x14002640c
   140006cd2:	nop
   140006cd3:	lea    rax,[rip+0x3639e]        # 0x14003d078
   140006cda:	mov    QWORD PTR [rbp-0x19],rax
   140006cde:	lea    rax,[rip+0x363ab]        # 0x14003d090
   140006ce5:	mov    QWORD PTR [rbp-0x19],rax
   140006ce9:	lea    rdx,[rip+0x43e70]        # 0x14004ab60
   140006cf0:	lea    rcx,[rbp-0x19]
   140006cf4:	call   0x1400265e8
   140006cf9:	int3   
   140006cfa:	mov    r8d,0x84
   140006d00:	lea    rdx,[rip+0x368a1]        # 0x14003d5a8
   140006d07:	call   QWORD PTR [rip+0x323ab]        # 0x1400390b8
   140006d0d:	test   rax,rax
   140006d10:	jne    0x140006d16
   140006d12:	xor    ebx,ebx
   140006d14:	jmp    0x140006d92
   140006d16:	mov    QWORD PTR [rbp-0x39],rax
   140006d1a:	mov    ebx,0x1
   140006d1f:	mov    DWORD PTR [rsi],ebx
   140006d21:	mov    rcx,QWORD PTR [rbp-0x39]
   140006d25:	test   rcx,rcx
   140006d28:	jne    0x140006d6a
   140006d2a:	lea    rax,[rip+0x371ff]        # 0x14003df30
   140006d31:	mov    QWORD PTR [rbp-0x29],rax
   140006d35:	lea    rdx,[rbp-0x29]
   140006d39:	lea    rcx,[rbp-0x1]
   140006d3d:	call   0x14002640c
   140006d42:	nop
   140006d43:	lea    rax,[rip+0x3632e]        # 0x14003d078
   140006d4a:	mov    QWORD PTR [rbp-0x1],rax
   140006d4e:	lea    rax,[rip+0x3633b]        # 0x14003d090
   140006d55:	mov    QWORD PTR [rbp-0x1],rax
   140006d59:	lea    rdx,[rip+0x43e00]        # 0x14004ab60
   140006d60:	lea    rcx,[rbp-0x1]
   140006d64:	call   0x1400265e8
   140006d69:	int3   
   140006d6a:	lea    rdx,[rbp+0x1f]
   140006d6e:	call   QWORD PTR [rip+0x32334]        # 0x1400390a8
   140006d74:	test   eax,eax
   140006d76:	je     0x140006d80
   140006d78:	cmp    DWORD PTR [rbp+0x23],0x4
   140006d7c:	jne    0x140006d80
   140006d7e:	mov    DWORD PTR [rdi],ebx
   140006d80:	xor    ecx,ecx
   140006d82:	xchg   QWORD PTR [rbp-0x39],rcx
   140006d86:	test   rcx,rcx
   140006d89:	je     0x140006d92
   140006d8b:	call   QWORD PTR [rip+0x32337]        # 0x1400390c8
   140006d91:	nop
   140006d92:	xor    ecx,ecx
   140006d94:	xchg   QWORD PTR [rbp-0x31],rcx
   140006d98:	test   rcx,rcx
   140006d9b:	je     0x140006da3
   140006d9d:	call   QWORD PTR [rip+0x32325]        # 0x1400390c8
   140006da3:	mov    eax,ebx
   140006da5:	mov    rcx,QWORD PTR [rbp+0x3f]
   140006da9:	xor    rcx,rsp
   140006dac:	call   0x140020e50
   140006db1:	mov    rbx,QWORD PTR [rsp+0xd0]
   140006db9:	add    rsp,0xa0
   140006dc0:	pop    rdi
   140006dc1:	pop    rsi
   140006dc2:	pop    rbp
   140006dc3:	ret    
   140006dc4:	mov    rax,rsp
   140006dc7:	push   rbp
   140006dc8:	lea    rbp,[rax-0x5f]
   140006dcc:	sub    rsp,0x100
   140006dd3:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   140006ddb:	mov    QWORD PTR [rax+0x8],rbx
   140006ddf:	mov    QWORD PTR [rax+0x10],rsi
   140006de3:	mov    QWORD PTR [rax+0x18],rdi
   140006de7:	mov    rax,QWORD PTR [rip+0x4665a]        # 0x14004d448
   140006dee:	xor    rax,rsp
   140006df1:	mov    QWORD PTR [rbp+0x4f],rax
   140006df5:	mov    r8d,0x3
   140006dfb:	lea    rdx,[rip+0x37146]        # 0x14003df48
   140006e02:	xor    ecx,ecx
   140006e04:	call   QWORD PTR [rip+0x32296]        # 0x1400390a0
   140006e0a:	xor    edi,edi
   140006e0c:	test   rax,rax
   140006e0f:	je     0x140006fc7
   140006e15:	mov    QWORD PTR [rbp-0x31],rax
   140006e19:	mov    QWORD PTR [rbp+0x1f],rdi
   140006e1d:	mov    QWORD PTR [rbp+0x27],rdi
   140006e21:	mov    esi,0x7
   140006e26:	mov    QWORD PTR [rbp+0x27],rsi
   140006e2a:	mov    QWORD PTR [rbp+0x1f],rdi
   140006e2e:	mov    WORD PTR [rbp+0xf],di
   140006e32:	lea    rcx,[rbp-0x19]
   140006e36:	call   0x14002223c
   140006e3b:	test   eax,eax
   140006e3d:	jne    0x140006f95
   140006e43:	mov    rdx,QWORD PTR [rbp-0x19]
   140006e47:	test   rdx,rdx
   140006e4a:	je     0x140006f95
   140006e50:	lea    rcx,[rbp+0xf]
   140006e54:	call   0x1400034e4
   140006e59:	lea    eax,[rsi+0x55]
   140006e5c:	mov    WORD PTR [rbp-0x39],ax
   140006e60:	lea    rdx,[rbp-0x39]
   140006e64:	lea    rcx,[rbp+0xf]
   140006e68:	call   0x1400077b8
   140006e6d:	cmp    rax,0xffffffffffffffff
   140006e71:	je     0x140006f95
   140006e77:	mov    r9,rax
   140006e7a:	xor    r8d,r8d
   140006e7d:	lea    rdx,[rbp+0x2f]
   140006e81:	lea    rcx,[rbp+0xf]
   140006e85:	call   0x14000776c
   140006e8a:	nop
   140006e8b:	mov    rdx,rax
   140006e8e:	lea    rcx,[rbp+0xf]
   140006e92:	call   0x140003c58
   140006e97:	nop
   140006e98:	cmp    QWORD PTR [rbp+0x47],0x8
   140006e9d:	jb     0x140006ea8
   140006e9f:	mov    rcx,QWORD PTR [rbp+0x2f]
   140006ea3:	call   0x140020e30
   140006ea8:	mov    QWORD PTR [rbp+0x47],rsi
   140006eac:	mov    QWORD PTR [rbp+0x3f],rdi
   140006eb0:	mov    WORD PTR [rbp+0x2f],di
   140006eb4:	lea    rdx,[rip+0x36d95]        # 0x14003dc50
   140006ebb:	lea    rcx,[rbp+0xf]
   140006ebf:	call   0x1400061b4
   140006ec4:	lea    rdx,[rip+0x3708d]        # 0x14003df58
   140006ecb:	lea    rcx,[rbp+0xf]
   140006ecf:	call   0x1400061b4
   140006ed4:	lea    rax,[rbp+0xf]
   140006ed8:	cmp    QWORD PTR [rbp+0x27],0x8
   140006edd:	cmovae rax,QWORD PTR [rbp+0xf]
   140006ee2:	mov    rcx,QWORD PTR [rbp-0x31]
   140006ee6:	test   rcx,rcx
   140006ee9:	jne    0x140006f2b
   140006eeb:	lea    rax,[rip+0x3703e]        # 0x14003df30
   140006ef2:	mov    QWORD PTR [rbp-0x21],rax
   140006ef6:	lea    rdx,[rbp-0x21]
   140006efa:	lea    rcx,[rbp-0x11]
   140006efe:	call   0x14002640c
   140006f03:	nop
   140006f04:	lea    rax,[rip+0x3616d]        # 0x14003d078
   140006f0b:	mov    QWORD PTR [rbp-0x11],rax
   140006f0f:	lea    rax,[rip+0x3617a]        # 0x14003d090
   140006f16:	mov    QWORD PTR [rbp-0x11],rax
   140006f1a:	lea    rdx,[rip+0x43c3f]        # 0x14004ab60
   140006f21:	lea    rcx,[rbp-0x11]
   140006f25:	call   0x1400265e8
   140006f2a:	int3   
   140006f2b:	mov    QWORD PTR [rsp+0x60],rdi
   140006f30:	mov    QWORD PTR [rsp+0x58],rdi
   140006f35:	mov    QWORD PTR [rsp+0x50],rdi
   140006f3a:	mov    QWORD PTR [rsp+0x48],rdi
   140006f3f:	mov    QWORD PTR [rsp+0x40],rdi
   140006f44:	mov    QWORD PTR [rsp+0x38],rax
   140006f49:	mov    ebx,0x1
   140006f4e:	mov    DWORD PTR [rsp+0x30],ebx
   140006f52:	mov    DWORD PTR [rsp+0x28],0x3
   140006f5a:	mov    DWORD PTR [rsp+0x20],0x10
   140006f62:	mov    r9d,0xf01ff
   140006f68:	lea    rdx,[rip+0x36639]        # 0x14003d5a8
   140006f6f:	mov    r8,rdx
   140006f72:	call   QWORD PTR [rip+0x32158]        # 0x1400390d0
   140006f78:	test   rax,rax
   140006f7b:	je     0x140006f95
   140006f7d:	mov    QWORD PTR [rbp-0x29],rax
   140006f81:	mov    rcx,rdi
   140006f84:	xchg   QWORD PTR [rbp-0x29],rcx
   140006f88:	test   rcx,rcx
   140006f8b:	je     0x140006f97
   140006f8d:	call   QWORD PTR [rip+0x32135]        # 0x1400390c8
   140006f93:	jmp    0x140006f97
   140006f95:	mov    ebx,edi
   140006f97:	cmp    QWORD PTR [rbp+0x27],0x8
   140006f9c:	jb     0x140006fa7
   140006f9e:	mov    rcx,QWORD PTR [rbp+0xf]
   140006fa2:	call   0x140020e30
   140006fa7:	mov    QWORD PTR [rbp+0x27],rsi
   140006fab:	mov    QWORD PTR [rbp+0x1f],rdi
   140006faf:	mov    WORD PTR [rbp+0xf],di
   140006fb3:	mov    rcx,rdi
   140006fb6:	xchg   QWORD PTR [rbp-0x31],rcx
   140006fba:	test   rcx,rcx
   140006fbd:	je     0x140006fc5
   140006fbf:	call   QWORD PTR [rip+0x32103]        # 0x1400390c8
   140006fc5:	mov    eax,ebx
   140006fc7:	mov    rcx,QWORD PTR [rbp+0x4f]
   140006fcb:	xor    rcx,rsp
   140006fce:	call   0x140020e50
   140006fd3:	lea    r11,[rsp+0x100]
   140006fdb:	mov    rbx,QWORD PTR [r11+0x10]
   140006fdf:	mov    rsi,QWORD PTR [r11+0x18]
   140006fe3:	mov    rdi,QWORD PTR [r11+0x20]
   140006fe7:	mov    rsp,r11
   140006fea:	pop    rbp
   140006feb:	ret    
   140006fec:	mov    rax,rsp
   140006fef:	push   rbp
   140006ff0:	lea    rbp,[rax-0x5f]
   140006ff4:	sub    rsp,0xf0
   140006ffb:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   140007003:	mov    QWORD PTR [rax+0x8],rbx
   140007007:	mov    QWORD PTR [rax+0x10],rsi
   14000700b:	mov    QWORD PTR [rax+0x18],rdi
   14000700f:	mov    rax,QWORD PTR [rip+0x46432]        # 0x14004d448
   140007016:	xor    rax,rsp
   140007019:	mov    QWORD PTR [rbp+0x47],rax
   14000701d:	and    QWORD PTR [rsp+0x30],0x0
   140007023:	and    DWORD PTR [rsp+0x28],0x0
   140007028:	mov    DWORD PTR [rsp+0x20],0x3
   140007030:	xor    r9d,r9d
   140007033:	xor    r8d,r8d
   140007036:	mov    edx,0xc0000000
   14000703b:	lea    rcx,[rip+0x36ed6]        # 0x14003df18
   140007042:	call   QWORD PTR [rip+0x32468]        # 0x1400394b0
   140007048:	cmp    rax,0xffffffffffffffff
   14000704c:	je     0x140007069
   14000704e:	mov    rcx,rax
   140007051:	call   QWORD PTR [rip+0x32569]        # 0x1400395c0
   140007057:	mov    ecx,0x217
   14000705c:	call   QWORD PTR [rip+0x32166]        # 0x1400391c8
   140007062:	xor    eax,eax
   140007064:	jmp    0x140007275
   140007069:	call   QWORD PTR [rip+0x32571]        # 0x1400395e0
   14000706f:	cmp    eax,0xe7
   140007074:	je     0x140007062
   140007076:	mov    ebx,0x1
   14000707b:	mov    r8d,ebx
   14000707e:	lea    rdx,[rip+0x36ec3]        # 0x14003df48
   140007085:	xor    ecx,ecx
   140007087:	call   QWORD PTR [rip+0x32013]        # 0x1400390a0
   14000708d:	test   rax,rax
   140007090:	je     0x140007062
   140007092:	mov    QWORD PTR [rbp-0x51],rax
   140007096:	mov    rcx,QWORD PTR [rbp-0x51]
   14000709a:	test   rcx,rcx
   14000709d:	jne    0x1400070df
   14000709f:	lea    rax,[rip+0x36e8a]        # 0x14003df30
   1400070a6:	mov    QWORD PTR [rbp-0x39],rax
   1400070aa:	lea    rdx,[rbp-0x39]
   1400070ae:	lea    rcx,[rbp-0x29]
   1400070b2:	call   0x14002640c
   1400070b7:	nop
   1400070b8:	lea    rax,[rip+0x35fb9]        # 0x14003d078
   1400070bf:	mov    QWORD PTR [rbp-0x29],rax
   1400070c3:	lea    rax,[rip+0x35fc6]        # 0x14003d090
   1400070ca:	mov    QWORD PTR [rbp-0x29],rax
   1400070ce:	lea    rdx,[rip+0x43a8b]        # 0x14004ab60
   1400070d5:	lea    rcx,[rbp-0x29]
   1400070d9:	call   0x1400265e8
   1400070de:	int3   
   1400070df:	mov    r8d,0x20000094
   1400070e5:	lea    rdx,[rip+0x364bc]        # 0x14003d5a8
   1400070ec:	call   QWORD PTR [rip+0x31fc6]        # 0x1400390b8
   1400070f2:	test   rax,rax
   1400070f5:	jne    0x1400070fe
   1400070f7:	xor    ebx,ebx
   1400070f9:	jmp    0x140007262
   1400070fe:	mov    QWORD PTR [rbp-0x59],rax
   140007102:	mov    rcx,QWORD PTR [rbp-0x59]
   140007106:	test   rcx,rcx
   140007109:	jne    0x14000714b
   14000710b:	lea    rax,[rip+0x36e1e]        # 0x14003df30
   140007112:	mov    QWORD PTR [rbp-0x31],rax
   140007116:	lea    rdx,[rbp-0x31]
   14000711a:	lea    rcx,[rbp+0x7]
   14000711e:	call   0x14002640c
   140007123:	nop
   140007124:	lea    rax,[rip+0x35f4d]        # 0x14003d078
   14000712b:	mov    QWORD PTR [rbp+0x7],rax
   14000712f:	lea    rax,[rip+0x35f5a]        # 0x14003d090
   140007136:	mov    QWORD PTR [rbp+0x7],rax
   14000713a:	lea    rdx,[rip+0x43a1f]        # 0x14004ab60
   140007141:	lea    rcx,[rbp+0x7]
   140007145:	call   0x1400265e8
   14000714a:	int3   
   14000714b:	xor    r8d,r8d
   14000714e:	xor    edx,edx
   140007150:	call   QWORD PTR [rip+0x31f5a]        # 0x1400390b0
   140007156:	test   eax,eax
   140007158:	je     0x14000724e
   14000715e:	mov    rsi,QWORD PTR [rbp-0x59]
   140007162:	test   rsi,rsi
   140007165:	jne    0x1400071a7
   140007167:	lea    rax,[rip+0x36dc2]        # 0x14003df30
   14000716e:	mov    QWORD PTR [rbp-0x49],rax
   140007172:	lea    rdx,[rbp-0x49]
   140007176:	lea    rcx,[rbp-0x11]
   14000717a:	call   0x14002640c
   14000717f:	nop
   140007180:	lea    rax,[rip+0x35ef1]        # 0x14003d078
   140007187:	mov    QWORD PTR [rbp-0x11],rax
   14000718b:	lea    rax,[rip+0x35efe]        # 0x14003d090
   140007192:	mov    QWORD PTR [rbp-0x11],rax
   140007196:	lea    rdx,[rip+0x439c3]        # 0x14004ab60
   14000719d:	lea    rcx,[rbp-0x11]
   1400071a1:	call   0x1400265e8
   1400071a6:	int3   
   1400071a7:	xor    edi,edi
   1400071a9:	lea    rdx,[rbp+0x27]
   1400071ad:	mov    rcx,rsi
   1400071b0:	call   QWORD PTR [rip+0x31ef2]        # 0x1400390a8
   1400071b6:	test   eax,eax
   1400071b8:	je     0x14000724e
   1400071be:	mov    eax,DWORD PTR [rbp+0x2b]
   1400071c1:	cmp    eax,0x4
   1400071c4:	je     0x1400071d4
   1400071c6:	mov    ecx,0x64
   1400071cb:	call   QWORD PTR [rip+0x3241f]        # 0x1400395f0
   1400071d1:	mov    eax,DWORD PTR [rbp+0x2b]
   1400071d4:	add    edi,ebx
   1400071d6:	cmp    eax,0x4
   1400071d9:	je     0x1400071e0
   1400071db:	cmp    edi,0x32
   1400071de:	jb     0x1400071a9
   1400071e0:	sub    eax,0x4
   1400071e3:	neg    eax
   1400071e5:	sbb    eax,eax
   1400071e7:	and    eax,0x80004005
   1400071ec:	jl     0x14000724e
   1400071ee:	mov    edi,0xc0000000
   1400071f3:	jmp    0x140007215
   1400071f5:	call   QWORD PTR [rip+0x323e5]        # 0x1400395e0
   1400071fb:	cmp    eax,0xe7
   140007200:	jne    0x14000724e
   140007202:	xor    edx,edx
   140007204:	lea    rcx,[rip+0x36d0d]        # 0x14003df18
   14000720b:	call   QWORD PTR [rip+0x322a7]        # 0x1400394b8
   140007211:	test   eax,eax
   140007213:	je     0x14000724e
   140007215:	and    QWORD PTR [rsp+0x30],0x0
   14000721b:	and    DWORD PTR [rsp+0x28],0x0
   140007220:	mov    DWORD PTR [rsp+0x20],0x3
   140007228:	xor    r9d,r9d
   14000722b:	xor    r8d,r8d
   14000722e:	mov    edx,edi
   140007230:	lea    rcx,[rip+0x36ce1]        # 0x14003df18
   140007237:	call   QWORD PTR [rip+0x32273]        # 0x1400394b0
   14000723d:	cmp    rax,0xffffffffffffffff
   140007241:	je     0x1400071f5
   140007243:	mov    rcx,rax
   140007246:	call   QWORD PTR [rip+0x32374]        # 0x1400395c0
   14000724c:	jmp    0x140007250
   14000724e:	xor    ebx,ebx
   140007250:	xor    ecx,ecx
   140007252:	xchg   QWORD PTR [rbp-0x59],rcx
   140007256:	test   rcx,rcx
   140007259:	je     0x140007262
   14000725b:	call   QWORD PTR [rip+0x31e67]        # 0x1400390c8
   140007261:	nop
   140007262:	xor    ecx,ecx
   140007264:	xchg   QWORD PTR [rbp-0x51],rcx
   140007268:	test   rcx,rcx
   14000726b:	je     0x140007273
   14000726d:	call   QWORD PTR [rip+0x31e55]        # 0x1400390c8
   140007273:	mov    eax,ebx
   140007275:	mov    rcx,QWORD PTR [rbp+0x47]
   140007279:	xor    rcx,rsp
   14000727c:	call   0x140020e50
   140007281:	lea    r11,[rsp+0xf0]
   140007289:	mov    rbx,QWORD PTR [r11+0x10]
   14000728d:	mov    rsi,QWORD PTR [r11+0x18]
   140007291:	mov    rdi,QWORD PTR [r11+0x20]
   140007295:	mov    rsp,r11
   140007298:	pop    rbp
   140007299:	ret    
   14000729a:	int3   
   14000729b:	int3   
   14000729c:	mov    rax,rsp
   14000729f:	push   rbp
   1400072a0:	lea    rbp,[rax-0x5f]
   1400072a4:	sub    rsp,0xa0
   1400072ab:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   1400072b3:	mov    QWORD PTR [rax+0x8],rbx
   1400072b7:	mov    rax,QWORD PTR [rip+0x4618a]        # 0x14004d448
   1400072be:	xor    rax,rsp
   1400072c1:	mov    QWORD PTR [rbp+0x4f],rax
   1400072c5:	mov    ebx,0x1
   1400072ca:	mov    r8d,ebx
   1400072cd:	lea    rdx,[rip+0x36c74]        # 0x14003df48
   1400072d4:	xor    ecx,ecx
   1400072d6:	call   QWORD PTR [rip+0x31dc4]        # 0x1400390a0
   1400072dc:	test   rax,rax
   1400072df:	je     0x1400073ce
   1400072e5:	mov    QWORD PTR [rbp-0x21],rax
   1400072e9:	mov    rcx,QWORD PTR [rbp-0x21]
   1400072ed:	test   rcx,rcx
   1400072f0:	jne    0x140007332
   1400072f2:	lea    rax,[rip+0x36c37]        # 0x14003df30
   1400072f9:	mov    QWORD PTR [rbp-0x11],rax
   1400072fd:	lea    rdx,[rbp-0x11]
   140007301:	lea    rcx,[rbp-0x9]
   140007305:	call   0x14002640c
   14000730a:	nop
   14000730b:	lea    rax,[rip+0x35d66]        # 0x14003d078
   140007312:	mov    QWORD PTR [rbp-0x9],rax
   140007316:	lea    rax,[rip+0x35d73]        # 0x14003d090
   14000731d:	mov    QWORD PTR [rbp-0x9],rax
   140007321:	lea    rdx,[rip+0x43838]        # 0x14004ab60
   140007328:	lea    rcx,[rbp-0x9]
   14000732c:	call   0x1400265e8
   140007331:	int3   
   140007332:	mov    r8d,0x200000a4
   140007338:	lea    rdx,[rip+0x36269]        # 0x14003d5a8
   14000733f:	call   QWORD PTR [rip+0x31d73]        # 0x1400390b8
   140007345:	test   rax,rax
   140007348:	jne    0x14000734e
   14000734a:	xor    ebx,ebx
   14000734c:	jmp    0x1400073bb
   14000734e:	mov    QWORD PTR [rbp-0x29],rax
   140007352:	mov    rcx,QWORD PTR [rbp-0x29]
   140007356:	test   rcx,rcx
   140007359:	jne    0x14000739b
   14000735b:	lea    rax,[rip+0x36bce]        # 0x14003df30
   140007362:	mov    QWORD PTR [rbp-0x19],rax
   140007366:	lea    rdx,[rbp-0x19]
   14000736a:	lea    rcx,[rbp+0xf]
   14000736e:	call   0x14002640c
   140007373:	nop
   140007374:	lea    rax,[rip+0x35cfd]        # 0x14003d078
   14000737b:	mov    QWORD PTR [rbp+0xf],rax
   14000737f:	lea    rax,[rip+0x35d0a]        # 0x14003d090
   140007386:	mov    QWORD PTR [rbp+0xf],rax
   14000738a:	lea    rdx,[rip+0x437cf]        # 0x14004ab60
   140007391:	lea    rcx,[rbp+0xf]
   140007395:	call   0x1400265e8
   14000739a:	int3   
   14000739b:	lea    r8,[rbp+0x2f]
   14000739f:	mov    edx,ebx
   1400073a1:	call   QWORD PTR [rip+0x31cf1]        # 0x140039098
   1400073a7:	mov    ebx,eax
   1400073a9:	xor    ecx,ecx
   1400073ab:	xchg   QWORD PTR [rbp-0x29],rcx
   1400073af:	test   rcx,rcx
   1400073b2:	je     0x1400073bb
   1400073b4:	call   QWORD PTR [rip+0x31d0e]        # 0x1400390c8
   1400073ba:	nop
   1400073bb:	xor    ecx,ecx
   1400073bd:	xchg   QWORD PTR [rbp-0x21],rcx
   1400073c1:	test   rcx,rcx
   1400073c4:	je     0x1400073cc
   1400073c6:	call   QWORD PTR [rip+0x31cfc]        # 0x1400390c8
   1400073cc:	mov    eax,ebx
   1400073ce:	mov    rcx,QWORD PTR [rbp+0x4f]
   1400073d2:	xor    rcx,rsp
   1400073d5:	call   0x140020e50
   1400073da:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400073e2:	add    rsp,0xa0
   1400073e9:	pop    rbp
   1400073ea:	ret    
   1400073eb:	int3   
   1400073ec:	rex push rbp
   1400073ee:	push   rbx
   1400073ef:	mov    rbp,rsp
   1400073f2:	sub    rsp,0x68
   1400073f6:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   1400073fe:	mov    r8d,0x3
   140007404:	lea    rdx,[rip+0x36b3d]        # 0x14003df48
   14000740b:	xor    ecx,ecx
   14000740d:	call   QWORD PTR [rip+0x31c8d]        # 0x1400390a0
   140007413:	test   rax,rax
   140007416:	je     0x1400074ff
   14000741c:	mov    QWORD PTR [rbp+0x20],rax
   140007420:	mov    rcx,QWORD PTR [rbp+0x20]
   140007424:	test   rcx,rcx
   140007427:	jne    0x140007469
   140007429:	lea    rax,[rip+0x36b00]        # 0x14003df30
   140007430:	mov    QWORD PTR [rbp+0x28],rax
   140007434:	lea    rdx,[rbp+0x28]
   140007438:	lea    rcx,[rbp-0x40]
   14000743c:	call   0x14002640c
   140007441:	nop
   140007442:	lea    rax,[rip+0x35c2f]        # 0x14003d078
   140007449:	mov    QWORD PTR [rbp-0x40],rax
   14000744d:	lea    rax,[rip+0x35c3c]        # 0x14003d090
   140007454:	mov    QWORD PTR [rbp-0x40],rax
   140007458:	lea    rdx,[rip+0x43701]        # 0x14004ab60
   14000745f:	lea    rcx,[rbp-0x40]
   140007463:	call   0x1400265e8
   140007468:	int3   
   140007469:	mov    r8d,0x20010084
   14000746f:	lea    rdx,[rip+0x36132]        # 0x14003d5a8
   140007476:	call   QWORD PTR [rip+0x31c3c]        # 0x1400390b8
   14000747c:	test   rax,rax
   14000747f:	jne    0x140007485
   140007481:	xor    ebx,ebx
   140007483:	jmp    0x1400074ec
   140007485:	mov    QWORD PTR [rbp+0x18],rax
   140007489:	mov    rcx,QWORD PTR [rbp+0x18]
   14000748d:	test   rcx,rcx
   140007490:	jne    0x1400074d2
   140007492:	lea    rax,[rip+0x36a97]        # 0x14003df30
   140007499:	mov    QWORD PTR [rbp+0x30],rax
   14000749d:	lea    rdx,[rbp+0x30]
   1400074a1:	lea    rcx,[rbp-0x28]
   1400074a5:	call   0x14002640c
   1400074aa:	nop
   1400074ab:	lea    rax,[rip+0x35bc6]        # 0x14003d078
   1400074b2:	mov    QWORD PTR [rbp-0x28],rax
   1400074b6:	lea    rax,[rip+0x35bd3]        # 0x14003d090
   1400074bd:	mov    QWORD PTR [rbp-0x28],rax
   1400074c1:	lea    rdx,[rip+0x43698]        # 0x14004ab60
   1400074c8:	lea    rcx,[rbp-0x28]
   1400074cc:	call   0x1400265e8
   1400074d1:	int3   
   1400074d2:	call   QWORD PTR [rip+0x31be8]        # 0x1400390c0
   1400074d8:	mov    ebx,eax
   1400074da:	xor    ecx,ecx
   1400074dc:	xchg   QWORD PTR [rbp+0x18],rcx
   1400074e0:	test   rcx,rcx
   1400074e3:	je     0x1400074ec
   1400074e5:	call   QWORD PTR [rip+0x31bdd]        # 0x1400390c8
   1400074eb:	nop
   1400074ec:	xor    ecx,ecx
   1400074ee:	xchg   QWORD PTR [rbp+0x20],rcx
   1400074f2:	test   rcx,rcx
   1400074f5:	je     0x1400074fd
   1400074f7:	call   QWORD PTR [rip+0x31bcb]        # 0x1400390c8
   1400074fd:	mov    eax,ebx
   1400074ff:	add    rsp,0x68
   140007503:	pop    rbx
   140007504:	pop    rbp
   140007505:	ret    
   140007506:	int3   
   140007507:	int3   
   140007508:	mov    rax,rsp
   14000750b:	push   rbp
   14000750c:	lea    rbp,[rax-0xc8]
   140007513:	sub    rsp,0x1c0
   14000751a:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   140007522:	mov    QWORD PTR [rax+0x10],rbx
   140007526:	mov    QWORD PTR [rax+0x18],rsi
   14000752a:	mov    QWORD PTR [rax+0x20],rdi
   14000752e:	mov    rax,QWORD PTR [rip+0x45f13]        # 0x14004d448
   140007535:	xor    rax,rsp
   140007538:	mov    QWORD PTR [rbp+0xb0],rax
   14000753f:	mov    rsi,rcx
   140007542:	and    DWORD PTR [rcx],0x0
   140007545:	mov    ebx,0x1
   14000754a:	mov    r8d,ebx
   14000754d:	lea    rdx,[rip+0x369f4]        # 0x14003df48
   140007554:	xor    ecx,ecx
   140007556:	call   QWORD PTR [rip+0x31b44]        # 0x1400390a0
   14000755c:	test   rax,rax
   14000755f:	jne    0x14000757b
   140007561:	call   QWORD PTR [rip+0x32079]        # 0x1400395e0
   140007567:	mov    ecx,eax
   140007569:	movzx  eax,ax
   14000756c:	or     eax,0x80070000
   140007571:	test   ecx,ecx
   140007573:	cmovle eax,ecx
   140007576:	jmp    0x140007743
   14000757b:	mov    QWORD PTR [rsp+0x30],rax
   140007580:	mov    rcx,QWORD PTR [rsp+0x30]
   140007585:	test   rcx,rcx
   140007588:	jne    0x1400075d0
   14000758a:	lea    rax,[rip+0x3699f]        # 0x14003df30
   140007591:	mov    QWORD PTR [rsp+0x58],rax
   140007596:	lea    rdx,[rsp+0x58]
   14000759b:	lea    rcx,[rsp+0x60]
   1400075a0:	call   0x14002640c
   1400075a5:	nop
   1400075a6:	lea    rax,[rip+0x35acb]        # 0x14003d078
   1400075ad:	mov    QWORD PTR [rsp+0x60],rax
   1400075b2:	lea    rax,[rip+0x35ad7]        # 0x14003d090
   1400075b9:	mov    QWORD PTR [rsp+0x60],rax
   1400075be:	lea    rdx,[rip+0x4359b]        # 0x14004ab60
   1400075c5:	lea    rcx,[rsp+0x60]
   1400075ca:	call   0x1400265e8
   1400075cf:	int3   
   1400075d0:	mov    r8d,ebx
   1400075d3:	lea    rdx,[rip+0x35fce]        # 0x14003d5a8
   1400075da:	call   QWORD PTR [rip+0x31ad8]        # 0x1400390b8
   1400075e0:	test   rax,rax
   1400075e3:	jne    0x1400075fe
   1400075e5:	call   QWORD PTR [rip+0x31ff5]        # 0x1400395e0
   1400075eb:	movzx  ebx,ax
   1400075ee:	or     ebx,0x80070000
   1400075f4:	test   eax,eax
   1400075f6:	cmovle ebx,eax
   1400075f9:	jmp    0x1400076e7
   1400075fe:	mov    QWORD PTR [rsp+0x28],rax
   140007603:	and    QWORD PTR [rsp+0x38],0x0
   140007609:	and    QWORD PTR [rsp+0x40],0x0
   14000760f:	and    QWORD PTR [rsp+0x48],0x0
   140007615:	mov    edx,0x100
   14000761a:	lea    rcx,[rsp+0x38]
   14000761f:	call   0x14000632c
   140007624:	nop
   140007625:	and    DWORD PTR [rsp+0x20],0x0
   14000762a:	jmp    0x14000765d
   14000762c:	lea    r9,[rsp+0x20]
   140007631:	mov    r8d,ecx
   140007634:	mov    rdx,rdi
   140007637:	mov    rcx,rax
   14000763a:	call   QWORD PTR [rip+0x31a50]        # 0x140039090
   140007640:	test   eax,eax
   140007642:	jne    0x14000768f
   140007644:	call   QWORD PTR [rip+0x31f96]        # 0x1400395e0
   14000764a:	cmp    eax,0x7a
   14000764d:	jne    0x140007679
   14000764f:	mov    edx,DWORD PTR [rsp+0x20]
   140007653:	lea    rcx,[rsp+0x38]
   140007658:	call   0x14000632c
   14000765d:	mov    rdi,QWORD PTR [rsp+0x38]
   140007662:	mov    rcx,QWORD PTR [rsp+0x40]
   140007667:	mov    rax,QWORD PTR [rsp+0x28]
   14000766c:	sub    rcx,rdi
   14000766f:	test   rax,rax
   140007672:	jne    0x14000762c
   140007674:	jmp    0x1400076fd
   140007679:	call   QWORD PTR [rip+0x31f61]        # 0x1400395e0
   14000767f:	movzx  ebx,ax
   140007682:	or     ebx,0x80070000
   140007688:	test   eax,eax
   14000768a:	cmovle ebx,eax
   14000768d:	jmp    0x1400076b5
   14000768f:	xor    ebx,ebx
   140007691:	lea    rdx,[rbp-0x60]
   140007695:	mov    rcx,QWORD PTR [rdi+0x10]
   140007699:	call   0x140016498
   14000769e:	test   eax,eax
   1400076a0:	je     0x1400076a6
   1400076a2:	movzx  ebx,WORD PTR [rbp-0x5c]
   1400076a6:	xor    eax,eax
   1400076a8:	cmp    ebx,0x8664
   1400076ae:	sete   al
   1400076b1:	mov    DWORD PTR [rsi],eax
   1400076b3:	xor    ebx,ebx
   1400076b5:	test   rdi,rdi
   1400076b8:	je     0x1400076d4
   1400076ba:	mov    rcx,rdi
   1400076bd:	call   0x140020e30
   1400076c2:	and    QWORD PTR [rsp+0x38],0x0
   1400076c8:	and    QWORD PTR [rsp+0x40],0x0
   1400076ce:	and    QWORD PTR [rsp+0x48],0x0
   1400076d4:	xor    ecx,ecx
   1400076d6:	xchg   QWORD PTR [rsp+0x28],rcx
   1400076db:	test   rcx,rcx
   1400076de:	je     0x1400076e7
   1400076e0:	call   QWORD PTR [rip+0x319e2]        # 0x1400390c8
   1400076e6:	nop
   1400076e7:	xor    ecx,ecx
   1400076e9:	xchg   QWORD PTR [rsp+0x30],rcx
   1400076ee:	test   rcx,rcx
   1400076f1:	je     0x1400076f9
   1400076f3:	call   QWORD PTR [rip+0x319cf]        # 0x1400390c8
   1400076f9:	mov    eax,ebx
   1400076fb:	jmp    0x140007743
   1400076fd:	lea    rax,[rip+0x3682c]        # 0x14003df30
   140007704:	mov    QWORD PTR [rsp+0x50],rax
   140007709:	lea    rdx,[rsp+0x50]
   14000770e:	lea    rcx,[rsp+0x78]
   140007713:	call   0x14002640c
   140007718:	nop
   140007719:	lea    rax,[rip+0x35958]        # 0x14003d078
   140007720:	mov    QWORD PTR [rsp+0x78],rax
   140007725:	lea    rax,[rip+0x35964]        # 0x14003d090
   14000772c:	mov    QWORD PTR [rsp+0x78],rax
   140007731:	lea    rdx,[rip+0x43428]        # 0x14004ab60
   140007738:	lea    rcx,[rsp+0x78]
   14000773d:	call   0x1400265e8
   140007742:	nop
   140007743:	mov    rcx,QWORD PTR [rbp+0xb0]
   14000774a:	xor    rcx,rsp
   14000774d:	call   0x140020e50
   140007752:	lea    r11,[rsp+0x1c0]
   14000775a:	mov    rbx,QWORD PTR [r11+0x18]
   14000775e:	mov    rsi,QWORD PTR [r11+0x20]
   140007762:	mov    rdi,QWORD PTR [r11+0x28]
   140007766:	mov    rsp,r11
   140007769:	pop    rbp
   14000776a:	ret    
   14000776b:	int3   
   14000776c:	mov    QWORD PTR [rsp+0x10],rdx
   140007771:	push   rbx
   140007772:	sub    rsp,0x30
   140007776:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000777f:	mov    rbx,rdx
   140007782:	xor    eax,eax
   140007784:	mov    DWORD PTR [rsp+0x20],eax
   140007788:	mov    QWORD PTR [rdx+0x18],0x7
   140007790:	mov    QWORD PTR [rdx+0x10],rax
   140007794:	mov    WORD PTR [rdx],ax
   140007797:	mov    rdx,rcx
   14000779a:	mov    rcx,rbx
   14000779d:	call   0x140003718
   1400077a2:	nop
   1400077a3:	mov    DWORD PTR [rsp+0x20],0x1
   1400077ab:	mov    rax,rbx
   1400077ae:	add    rsp,0x30
   1400077b2:	pop    rbx
   1400077b3:	ret    
   1400077b4:	int3   
   1400077b5:	int3   
   1400077b6:	int3   
   1400077b7:	int3   
   1400077b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400077bd:	mov    QWORD PTR [rsp+0x10],rdi
   1400077c2:	mov    rax,QWORD PTR [rcx+0x10]
   1400077c6:	or     rdi,0xffffffffffffffff
   1400077ca:	mov    r11,rdx
   1400077cd:	mov    r8,rcx
   1400077d0:	cmp    rax,0x1
   1400077d4:	jb     0x14000785a
   1400077da:	dec    rax
   1400077dd:	cmp    rax,rdi
   1400077e0:	cmova  rax,rdi
   1400077e4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400077e9:	jb     0x1400077ee
   1400077eb:	mov    rcx,QWORD PTR [rcx]
   1400077ee:	movzx  ebx,WORD PTR [rdx]
   1400077f1:	lea    rcx,[rcx+rax*2]
   1400077f5:	cmp    WORD PTR [rcx],bx
   1400077f8:	jne    0x14000782b
   1400077fa:	mov    r10d,0x1
   140007800:	mov    rdx,r11
   140007803:	mov    r9,rcx
   140007806:	movzx  eax,WORD PTR [rdx]
   140007809:	cmp    WORD PTR [r9],ax
   14000780d:	jne    0x140007820
   14000780f:	add    r9,0x2
   140007813:	add    rdx,0x2
   140007817:	dec    r10
   14000781a:	jne    0x140007806
   14000781c:	xor    eax,eax
   14000781e:	jmp    0x140007827
   140007820:	sbb    eax,eax
   140007822:	and    eax,0xfffffffe
   140007825:	inc    eax
   140007827:	test   eax,eax
   140007829:	je     0x140007845
   14000782b:	cmp    QWORD PTR [r8+0x18],0x8
   140007830:	jb     0x140007837
   140007832:	mov    rax,QWORD PTR [r8]
   140007835:	jmp    0x14000783a
   140007837:	mov    rax,r8
   14000783a:	cmp    rcx,rax
   14000783d:	je     0x14000785a
   14000783f:	sub    rcx,0x2
   140007843:	jmp    0x1400077f5
   140007845:	cmp    QWORD PTR [r8+0x18],0x8
   14000784a:	jb     0x14000784f
   14000784c:	mov    r8,QWORD PTR [r8]
   14000784f:	sub    rcx,r8
   140007852:	sar    rcx,1
   140007855:	mov    rax,rcx
   140007858:	jmp    0x14000785d
   14000785a:	mov    rax,rdi
   14000785d:	mov    rbx,QWORD PTR [rsp+0x8]
   140007862:	mov    rdi,QWORD PTR [rsp+0x10]
   140007867:	ret    
   140007868:	rex push rbx
   14000786a:	sub    rsp,0x20
   14000786e:	lea    rax,[rip+0x3670b]        # 0x14003df80
   140007875:	mov    rbx,rcx
   140007878:	mov    QWORD PTR [rcx],rax
   14000787b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000787f:	test   rcx,rcx
   140007882:	je     0x14000788a
   140007884:	call   QWORD PTR [rip+0x3183e]        # 0x1400390c8
   14000788a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000788e:	test   rcx,rcx
   140007891:	je     0x140007899
   140007893:	call   QWORD PTR [rip+0x3182f]        # 0x1400390c8
   140007899:	mov    rcx,QWORD PTR [rbx+0x18]
   14000789d:	test   rcx,rcx
   1400078a0:	je     0x1400078a8
   1400078a2:	call   QWORD PTR [rip+0x31d18]        # 0x1400395c0
   1400078a8:	add    rsp,0x20
   1400078ac:	pop    rbx
   1400078ad:	ret    
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078b5:	push   rdi
   1400078b6:	sub    rsp,0x20
   1400078ba:	lea    rax,[rip+0x366bf]        # 0x14003df80
   1400078c1:	mov    rbx,rcx
   1400078c4:	mov    edi,edx
   1400078c6:	mov    QWORD PTR [rcx],rax
   1400078c9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400078cd:	test   rcx,rcx
   1400078d0:	je     0x1400078d8
   1400078d2:	call   QWORD PTR [rip+0x317f0]        # 0x1400390c8
   1400078d8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400078dc:	test   rcx,rcx
   1400078df:	je     0x1400078e7
   1400078e1:	call   QWORD PTR [rip+0x317e1]        # 0x1400390c8
   1400078e7:	mov    rcx,QWORD PTR [rbx+0x18]
   1400078eb:	test   rcx,rcx
   1400078ee:	je     0x1400078f6
   1400078f0:	call   QWORD PTR [rip+0x31cca]        # 0x1400395c0
   1400078f6:	test   dil,0x1
   1400078fa:	je     0x140007904
   1400078fc:	mov    rcx,rbx
   1400078ff:	call   0x140020e30
   140007904:	mov    rax,rbx
   140007907:	mov    rbx,QWORD PTR [rsp+0x30]
   14000790c:	add    rsp,0x20
   140007910:	pop    rdi
   140007911:	ret    
   140007912:	int3   
   140007913:	int3   
   140007914:	rex push rbp
   140007916:	push   rbx
   140007917:	push   rsi
   140007918:	push   rdi
   140007919:	push   r12
   14000791b:	mov    rbp,rsp
   14000791e:	sub    rsp,0x70
   140007922:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14000792a:	mov    rsi,rcx
   14000792d:	lea    r12,[rip+0x3664c]        # 0x14003df80
   140007934:	mov    QWORD PTR [rbp-0x20],r12
   140007938:	and    QWORD PTR [rbp-0x18],0x0
   14000793d:	and    QWORD PTR [rbp-0x10],0x0
   140007942:	xor    edi,edi
   140007944:	mov    QWORD PTR [rbp-0x8],rdi
   140007948:	jmp    0x140007972
   14000794a:	call   QWORD PTR [rip+0x31c90]        # 0x1400395e0
   140007950:	cmp    eax,0xe7
   140007955:	jne    0x140007a1e
   14000795b:	xor    edx,edx
   14000795d:	lea    rcx,[rip+0x365b4]        # 0x14003df18
   140007964:	call   QWORD PTR [rip+0x31b4e]        # 0x1400394b8
   14000796a:	test   eax,eax
   14000796c:	je     0x140007a1e
   140007972:	and    QWORD PTR [rsp+0x30],0x0
   140007978:	and    DWORD PTR [rsp+0x28],0x0
   14000797d:	mov    DWORD PTR [rsp+0x20],0x3
   140007985:	xor    r9d,r9d
   140007988:	xor    r8d,r8d
   14000798b:	mov    edx,0xc0000000
   140007990:	lea    rcx,[rip+0x36581]        # 0x14003df18
   140007997:	call   QWORD PTR [rip+0x31b13]        # 0x1400394b0
   14000799d:	cmp    rax,0xffffffffffffffff
   1400079a1:	mov    rbx,rax
   1400079a4:	je     0x14000794a
   1400079a6:	mov    rdi,rax
   1400079a9:	mov    QWORD PTR [rbp-0x8],rax
   1400079ad:	mov    DWORD PTR [rbp+0x38],0x2
   1400079b4:	xor    r9d,r9d
   1400079b7:	xor    r8d,r8d
   1400079ba:	lea    rdx,[rbp+0x38]
   1400079be:	mov    rcx,rax
   1400079c1:	call   QWORD PTR [rip+0x31b01]        # 0x1400394c8
   1400079c7:	test   eax,eax
   1400079c9:	je     0x140007a1e
   1400079cb:	and    QWORD PTR [rsp+0x20],0x0
   1400079d1:	lea    r9,[rbp+0x40]
   1400079d5:	mov    r8d,0x124
   1400079db:	mov    rdx,rsi
   1400079de:	mov    rcx,rbx
   1400079e1:	call   QWORD PTR [rip+0x31821]        # 0x140039208
   1400079e7:	test   eax,eax
   1400079e9:	je     0x140007a1e
   1400079eb:	cmp    DWORD PTR [rbp+0x40],0x124
   1400079f2:	jne    0x140007a1e
   1400079f4:	and    QWORD PTR [rsp+0x20],0x0
   1400079fa:	lea    r9,[rbp+0x48]
   1400079fe:	mov    r8d,0x4
   140007a04:	lea    rdx,[rbp-0x30]
   140007a08:	mov    rcx,rbx
   140007a0b:	call   QWORD PTR [rip+0x31aaf]        # 0x1400394c0
   140007a11:	test   eax,eax
   140007a13:	je     0x140007a1e
   140007a15:	cmp    DWORD PTR [rbp+0x48],0x4
   140007a19:	mov    ebx,DWORD PTR [rbp-0x30]
   140007a1c:	je     0x140007a23
   140007a1e:	mov    ebx,0xe1230555
   140007a23:	mov    QWORD PTR [rbp-0x20],r12
   140007a27:	test   rdi,rdi
   140007a2a:	je     0x140007a35
   140007a2c:	mov    rcx,rdi
   140007a2f:	call   QWORD PTR [rip+0x31b8b]        # 0x1400395c0
   140007a35:	mov    eax,ebx
   140007a37:	add    rsp,0x70
   140007a3b:	pop    r12
   140007a3d:	pop    rdi
   140007a3e:	pop    rsi
   140007a3f:	pop    rbx
   140007a40:	pop    rbp
   140007a41:	ret    
   140007a42:	int3   
   140007a43:	int3   
   140007a44:	rex push rbx
   140007a46:	push   rdi
   140007a47:	sub    rsp,0x38
   140007a4b:	call   QWORD PTR [rip+0x31aaf]        # 0x140039500
   140007a51:	cmp    al,0x6
   140007a53:	jb     0x140007a5c
   140007a55:	mov    al,0x1
   140007a57:	jmp    0x140007ae8
   140007a5c:	lea    rax,[rsp+0x68]
   140007a61:	lea    rdx,[rip+0x36528]        # 0x14003df90
   140007a68:	mov    r9d,0x20019
   140007a6e:	xor    r8d,r8d
   140007a71:	mov    rcx,0xffffffff80000001
   140007a78:	mov    QWORD PTR [rsp+0x20],rax
   140007a7d:	call   QWORD PTR [rip+0x315fd]        # 0x140039080
   140007a83:	test   eax,eax
   140007a85:	jne    0x140007ae6
   140007a87:	mov    rcx,QWORD PTR [rsp+0x68]
   140007a8c:	lea    rax,[rsp+0x50]
   140007a91:	lea    r9,[rsp+0x58]
   140007a96:	mov    QWORD PTR [rsp+0x28],rax
   140007a9b:	lea    rax,[rsp+0x60]
   140007aa0:	lea    rdx,[rip+0x36541]        # 0x14003dfe8
   140007aa7:	xor    r8d,r8d
   140007aaa:	mov    DWORD PTR [rsp+0x50],0x4
   140007ab2:	mov    QWORD PTR [rsp+0x20],rax
   140007ab7:	call   QWORD PTR [rip+0x315cb]        # 0x140039088
   140007abd:	mov    rcx,QWORD PTR [rsp+0x68]
   140007ac2:	mov    ebx,eax
   140007ac4:	call   QWORD PTR [rip+0x31546]        # 0x140039010
   140007aca:	test   ebx,ebx
   140007acc:	jne    0x140007ae6
   140007ace:	cmp    DWORD PTR [rsp+0x58],0x4
   140007ad3:	jne    0x140007ae6
   140007ad5:	cmp    DWORD PTR [rsp+0x50],0x4
   140007ada:	jne    0x140007ae6
   140007adc:	cmp    DWORD PTR [rsp+0x60],0x1
   140007ae1:	sete   al
   140007ae4:	jmp    0x140007ae8
   140007ae6:	xor    al,al
   140007ae8:	add    rsp,0x38
   140007aec:	pop    rdi
   140007aed:	pop    rbx
   140007aee:	ret    
   140007aef:	int3   
   140007af0:	rex push rbx
   140007af2:	push   rsi
   140007af3:	push   rdi
   140007af4:	sub    rsp,0x30
   140007af8:	lea    rax,[rsp+0x68]
   140007afd:	mov    rdi,rcx
   140007b00:	lea    rdx,[rip+0x36519]        # 0x14003e020
   140007b07:	mov    r9d,0x20019
   140007b0d:	xor    r8d,r8d
   140007b10:	mov    rcx,0xffffffff80000002
   140007b17:	mov    QWORD PTR [rsp+0x20],rax
   140007b1c:	call   QWORD PTR [rip+0x3155e]        # 0x140039080
   140007b22:	xor    esi,esi
   140007b24:	test   eax,eax
   140007b26:	je     0x140007b2c
   140007b28:	xor    al,al
   140007b2a:	jmp    0x140007ba2
   140007b2c:	mov    rcx,QWORD PTR [rsp+0x68]
   140007b31:	lea    rax,[rsp+0x60]
   140007b36:	lea    r9,[rsp+0x58]
   140007b3b:	mov    QWORD PTR [rsp+0x28],rax
   140007b40:	lea    rdx,[rip+0x36561]        # 0x14003e0a8
   140007b47:	xor    r8d,r8d
   140007b4a:	mov    QWORD PTR [rsp+0x20],rdi
   140007b4f:	mov    DWORD PTR [rsp+0x60],0x208
   140007b57:	call   QWORD PTR [rip+0x3152b]        # 0x140039088
   140007b5d:	mov    rcx,QWORD PTR [rsp+0x68]
   140007b62:	mov    ebx,eax
   140007b64:	call   QWORD PTR [rip+0x314a6]        # 0x140039010
   140007b6a:	mov    WORD PTR [rdi+0x206],si
   140007b71:	test   ebx,ebx
   140007b73:	jne    0x140007b28
   140007b75:	cmp    DWORD PTR [rsp+0x58],0x2
   140007b7a:	jne    0x140007b99
   140007b7c:	mov    r8d,0x104
   140007b82:	mov    rdx,rdi
   140007b85:	mov    rcx,rdi
   140007b88:	call   QWORD PTR [rip+0x31982]        # 0x140039510
   140007b8e:	dec    eax
   140007b90:	cmp    eax,0x103
   140007b95:	jbe    0x140007ba0
   140007b97:	jmp    0x140007b28
   140007b99:	cmp    DWORD PTR [rsp+0x58],0x1
   140007b9e:	jne    0x140007b28
   140007ba0:	mov    al,0x1
   140007ba2:	add    rsp,0x30
   140007ba6:	pop    rdi
   140007ba7:	pop    rsi
   140007ba8:	pop    rbx
   140007ba9:	ret    
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	sub    rsp,0x38
   140007bb0:	and    QWORD PTR [rsp+0x28],0x0
   140007bb6:	xor    r9d,r9d
   140007bb9:	lea    rdx,[rip+0x4a100]        # 0x140051cc0
   140007bc0:	lea    r8d,[r9+0x4]
   140007bc4:	or     rcx,0xffffffffffffffff
   140007bc8:	mov    DWORD PTR [rsp+0x20],0x9cb8
   140007bd0:	call   QWORD PTR [rip+0x3190a]        # 0x1400394e0
   140007bd6:	mov    QWORD PTR [rip+0x49373],rax        # 0x140050f50
   140007bdd:	test   rax,rax
   140007be0:	jne    0x140007be6
   140007be2:	xor    al,al
   140007be4:	jmp    0x140007c24
   140007be6:	and    QWORD PTR [rsp+0x20],0x0
   140007bec:	xor    r9d,r9d
   140007bef:	xor    r8d,r8d
   140007bf2:	lea    edx,[r9+0x6]
   140007bf6:	mov    rcx,rax
   140007bf9:	call   QWORD PTR [rip+0x317a1]        # 0x1400393a0
   140007bff:	mov    QWORD PTR [rip+0x49352],rax        # 0x140050f58
   140007c06:	test   rax,rax
   140007c09:	jne    0x140007c22
   140007c0b:	mov    rcx,QWORD PTR [rip+0x4933e]        # 0x140050f50
   140007c12:	call   QWORD PTR [rip+0x319a8]        # 0x1400395c0
   140007c18:	and    QWORD PTR [rip+0x49330],0x0        # 0x140050f50
   140007c20:	jmp    0x140007be2
   140007c22:	mov    al,0x1
   140007c24:	add    rsp,0x38
   140007c28:	ret    
   140007c29:	int3   
   140007c2a:	int3   
   140007c2b:	int3   
   140007c2c:	mov    rax,rsp
   140007c2f:	mov    QWORD PTR [rax+0x8],rbx
   140007c33:	mov    QWORD PTR [rax+0x10],rsi
   140007c37:	mov    QWORD PTR [rax+0x18],rdi
   140007c3b:	mov    QWORD PTR [rax+0x20],r13
   140007c3f:	push   rbp
   140007c40:	push   r14
   140007c42:	push   r15
   140007c44:	lea    rbp,[rax-0x5f]
   140007c48:	sub    rsp,0xc0
   140007c4f:	mov    rax,QWORD PTR [rip+0x457f2]        # 0x14004d448
   140007c56:	xor    rax,rsp
   140007c59:	mov    QWORD PTR [rbp+0x37],rax
   140007c5d:	xor    r13d,r13d
   140007c60:	mov    r15,rcx
   140007c63:	cmp    QWORD PTR [rip+0x4a076],r13        # 0x140051ce0
   140007c6a:	mov    QWORD PTR [rbp-0x29],r13
   140007c6e:	je     0x140007ca1
   140007c70:	lea    eax,[r13+0x1]
   140007c74:	mov    rcx,QWORD PTR [rbp+0x37]
   140007c78:	xor    rcx,rsp
   140007c7b:	call   0x140020e50
   140007c80:	lea    r11,[rsp+0xc0]
   140007c88:	mov    rbx,QWORD PTR [r11+0x20]
   140007c8c:	mov    rsi,QWORD PTR [r11+0x28]
   140007c90:	mov    rdi,QWORD PTR [r11+0x30]
   140007c94:	mov    r13,QWORD PTR [r11+0x38]
   140007c98:	mov    rsp,r11
   140007c9b:	pop    r15
   140007c9d:	pop    r14
   140007c9f:	pop    rbp
   140007ca0:	ret    
   140007ca1:	mov    eax,DWORD PTR [rip+0x492b9]        # 0x140050f60
   140007ca7:	mov    edi,0x1
   140007cac:	test   eax,eax
   140007cae:	jle    0x140007cc6
   140007cb0:	cmp    eax,0x2
   140007cb3:	jle    0x140007cd1
   140007cb5:	cmp    eax,0x3
   140007cb8:	jne    0x140007cc6
   140007cba:	call   0x140007a44
   140007cbf:	test   al,al
   140007cc1:	sete   al
   140007cc4:	jmp    0x140007cc9
   140007cc6:	mov    al,dil
   140007cc9:	test   al,al
   140007ccb:	je     0x140007cd1
   140007ccd:	mov    eax,edi
   140007ccf:	jmp    0x140007c74
   140007cd1:	cmp    QWORD PTR [rip+0x49280],r13        # 0x140050f58
   140007cd8:	mov    DWORD PTR [rip+0x49fde],0x18        # 0x140051cc0
   140007ce2:	mov    QWORD PTR [rip+0x49fdf],r13        # 0x140051cc8
   140007ce9:	mov    DWORD PTR [rip+0x49fe1],edi        # 0x140051cd0
   140007cef:	jne    0x140007cfa
   140007cf1:	call   0x140007bac
   140007cf6:	test   al,al
   140007cf8:	je     0x140007ccd
   140007cfa:	lea    rax,[rip+0x4a08f]        # 0x140051d90
   140007d01:	test   rax,rax
   140007d04:	je     0x140007d10
   140007d06:	mov    rcx,rax
   140007d09:	call   0x140007af0
   140007d0e:	jmp    0x140007d13
   140007d10:	mov    al,r13b
   140007d13:	test   al,al
   140007d15:	je     0x140007ccd
   140007d17:	lea    rbx,[rip+0x49fa2]        # 0x140051cc0
   140007d1e:	xor    r9d,r9d
   140007d21:	xor    r8d,r8d
   140007d24:	mov    rcx,rbx
   140007d27:	xor    edx,edx
   140007d29:	call   QWORD PTR [rip+0x317b9]        # 0x1400394e8
   140007d2f:	xor    r9d,r9d
   140007d32:	xor    r8d,r8d
   140007d35:	xor    edx,edx
   140007d37:	mov    rcx,rbx
   140007d3a:	mov    QWORD PTR [rip+0x49f9f],rax        # 0x140051ce0
   140007d41:	call   QWORD PTR [rip+0x317a1]        # 0x1400394e8
   140007d47:	xor    r8d,r8d
   140007d4a:	xor    edx,edx
   140007d4c:	mov    rcx,rbx
   140007d4f:	mov    r14,rax
   140007d52:	call   QWORD PTR [rip+0x31778]        # 0x1400394d0
   140007d58:	mov    rsi,rax
   140007d5b:	call   QWORD PTR [rip+0x315af]        # 0x140039310
   140007d61:	mov    DWORD PTR [rsp+0x30],r13d
   140007d66:	lea    r9,[rbp-0x29]
   140007d6a:	mov    r8,rax
   140007d6d:	mov    rdx,rax
   140007d70:	mov    rcx,rax
   140007d73:	mov    DWORD PTR [rsp+0x28],edi
   140007d77:	mov    DWORD PTR [rsp+0x20],0x1fffff
   140007d7f:	call   QWORD PTR [rip+0x3176b]        # 0x1400394f0
   140007d85:	test   eax,eax
   140007d87:	je     0x1400080bb
   140007d8d:	cmp    QWORD PTR [rip+0x49f4c],r13        # 0x140051ce0
   140007d94:	je     0x1400080bb
   140007d9a:	test   r14,r14
   140007d9d:	je     0x1400080c9
   140007da3:	test   rsi,rsi
   140007da6:	je     0x1400080bb
   140007dac:	cmp    QWORD PTR [rbp-0x29],r13
   140007db0:	je     0x1400080bb
   140007db6:	mov    rbx,QWORD PTR [rip+0x4919b]        # 0x140050f58
   140007dbd:	xor    edx,edx
   140007dbf:	mov    r8d,0x9cb8
   140007dc5:	mov    rcx,rbx
   140007dc8:	call   0x1400260e0
   140007dcd:	mov    rax,QWORD PTR [rbp-0x29]
   140007dd1:	mov    QWORD PTR [rbx+0x40],rax
   140007dd5:	call   QWORD PTR [rip+0x3172d]        # 0x140039508
   140007ddb:	mov    rcx,QWORD PTR [rip+0x49176]        # 0x140050f58
   140007de2:	mov    DWORD PTR [rcx+0x8],eax
   140007de5:	call   QWORD PTR [rip+0x313ed]        # 0x1400391d8
   140007deb:	mov    rdx,QWORD PTR [rip+0x49166]        # 0x140050f58
   140007df2:	mov    DWORD PTR [rdx+0xc],eax
   140007df5:	mov    rax,QWORD PTR [rip+0x49ee4]        # 0x140051ce0
   140007dfc:	mov    QWORD PTR [rdx+0x20],r14
   140007e00:	mov    QWORD PTR [rdx+0x38],rsi
   140007e04:	mov    DWORD PTR [rdx],0x9cb8
   140007e0a:	mov    DWORD PTR [rdx+0x4],0x20000
   140007e11:	mov    QWORD PTR [rdx+0x30],rax
   140007e15:	mov    QWORD PTR [rdx+0x18],r15
   140007e19:	mov    rax,QWORD PTR [r15]
   140007e1c:	mov    rcx,QWORD PTR [rax+0x10]
   140007e20:	mov    QWORD PTR [rdx+0x10],rcx
   140007e24:	call   QWORD PTR [rip+0x316d6]        # 0x140039500
   140007e2a:	mov    ecx,DWORD PTR [rip+0x49130]        # 0x140050f60
   140007e30:	cmp    al,0x6
   140007e32:	setae  dl
   140007e35:	dec    ecx
   140007e37:	je     0x140007e6f
   140007e39:	dec    ecx
   140007e3b:	je     0x140007e52
   140007e3d:	dec    ecx
   140007e3f:	jne    0x1400080bb
   140007e45:	mov    r8,QWORD PTR [rip+0x4910c]        # 0x140050f58
   140007e4c:	mov    DWORD PTR [r8+0x48],r13d
   140007e50:	jmp    0x140007e61
   140007e52:	mov    r8,QWORD PTR [rip+0x490ff]        # 0x140050f58
   140007e59:	mov    DWORD PTR [r8+0x48],0x8
   140007e61:	mov    eax,r13d
   140007e64:	test   dl,dl
   140007e66:	sete   al
   140007e69:	mov    DWORD PTR [r8+0x4c],eax
   140007e6d:	jmp    0x140007e7a
   140007e6f:	mov    r8,QWORD PTR [rip+0x490e2]        # 0x140050f58
   140007e76:	mov    QWORD PTR [r8+0x48],r13
   140007e7a:	mov    dl,BYTE PTR [rip+0x48ee9]        # 0x140050d69
   140007e80:	mov    DWORD PTR [r8+0x50],r13d
   140007e84:	mov    DWORD PTR [r8+0x58],r13d
   140007e88:	mov    al,dl
   140007e8a:	mov    DWORD PTR [r8+0x60],edi
   140007e8e:	neg    al
   140007e90:	sbb    ecx,ecx
   140007e92:	not    ecx
   140007e94:	and    ecx,0x10
   140007e97:	or     ecx,0x4
   140007e9a:	neg    dl
   140007e9c:	sbb    eax,eax
   140007e9e:	mov    DWORD PTR [r8+0x54],ecx
   140007ea2:	or     r15,0xffffffffffffffff
   140007ea6:	and    eax,0x10
   140007ea9:	lea    rcx,[r8+0x21c8]
   140007eb0:	lea    edx,[r15+0x39]
   140007eb4:	or     eax,edi
   140007eb6:	mov    r9,r15
   140007eb9:	mov    DWORD PTR [r8+0x68],eax
   140007ebd:	mov    r8,QWORD PTR [rip+0x46654]        # 0x14004e518
   140007ec4:	call   0x140027a98
   140007ec9:	mov    rcx,QWORD PTR [rip+0x49088]        # 0x140050f58
   140007ed0:	mov    r8,QWORD PTR [rip+0x47bd9]        # 0x14004fab0
   140007ed7:	mov    ebx,0x104
   140007edc:	add    rcx,0x274
   140007ee3:	mov    r9,r15
   140007ee6:	mov    edx,ebx
   140007ee8:	call   0x140027a98
   140007eed:	mov    rax,QWORD PTR [rip+0x361cc]        # 0x14003e0c0
   140007ef4:	mov    rcx,QWORD PTR [rip+0x4905d]        # 0x140050f58
   140007efb:	mov    QWORD PTR [rbp-0x19],rax
   140007eff:	mov    rax,QWORD PTR [rip+0x361c2]        # 0x14003e0c8
   140007f06:	lea    r9d,[r15+0x49]
   140007f0a:	mov    QWORD PTR [rbp-0x11],rax
   140007f0e:	mov    rax,QWORD PTR [rip+0x361bb]        # 0x14003e0d0
   140007f15:	lea    r8,[rbp-0x19]
   140007f19:	mov    QWORD PTR [rbp-0x9],rax
   140007f1d:	mov    rax,QWORD PTR [rip+0x361b4]        # 0x14003e0d8
   140007f24:	add    rcx,0x47c
   140007f2b:	mov    QWORD PTR [rbp-0x1],rax
   140007f2f:	mov    rax,QWORD PTR [rip+0x361aa]        # 0x14003e0e0
   140007f36:	mov    edx,ebx
   140007f38:	mov    QWORD PTR [rbp+0x7],rax
   140007f3c:	mov    rax,QWORD PTR [rip+0x361a5]        # 0x14003e0e8
   140007f43:	mov    QWORD PTR [rbp+0xf],rax
   140007f47:	mov    rax,QWORD PTR [rip+0x361a2]        # 0x14003e0f0
   140007f4e:	mov    QWORD PTR [rbp+0x17],rax
   140007f52:	mov    rax,QWORD PTR [rip+0x3619f]        # 0x14003e0f8
   140007f59:	mov    QWORD PTR [rbp+0x1f],rax
   140007f5d:	mov    rax,QWORD PTR [rip+0x3619c]        # 0x14003e100
   140007f64:	mov    QWORD PTR [rbp+0x27],rax
   140007f68:	call   0x14002c220
   140007f6d:	mov    rcx,QWORD PTR [rip+0x48fe4]        # 0x140050f58
   140007f74:	mov    r8,QWORD PTR [rip+0x46655]        # 0x14004e5d0
   140007f7b:	add    rcx,0x7c0
   140007f82:	mov    r9,r15
   140007f85:	mov    edx,ebx
   140007f87:	call   0x140027a98
   140007f8c:	mov    r9,QWORD PTR [rip+0x48fbd]        # 0x140050f50
   140007f93:	lea    r8,[rip+0x3616e]        # 0x14003e108
   140007f9a:	lea    rcx,[rip+0x4a07f]        # 0x140052020
   140007fa1:	mov    edx,ebx
   140007fa3:	call   0x14002c558
   140007fa8:	lea    ebx,[r15+0x69]
   140007fac:	lea    r15,[rip+0x49ffd]        # 0x140051fb0
   140007fb3:	mov    rcx,r15
   140007fb6:	mov    r8d,ebx
   140007fb9:	xor    edx,edx
   140007fbb:	call   0x1400260e0
   140007fc0:	lea    rax,[rip+0x49fd1]        # 0x140051f98
   140007fc7:	xor    r9d,r9d
   140007fca:	mov    QWORD PTR [rsp+0x48],rax
   140007fcf:	mov    QWORD PTR [rsp+0x40],r15
   140007fd4:	mov    QWORD PTR [rsp+0x38],r13
   140007fd9:	mov    QWORD PTR [rsp+0x30],r13
   140007fde:	mov    DWORD PTR [rsp+0x28],0x4000020
   140007fe6:	mov    DWORD PTR [rip+0x49fc4],ebx        # 0x140051fb0
   140007fec:	mov    DWORD PTR [rsp+0x20],edi
   140007ff0:	xor    r8d,r8d
   140007ff3:	lea    rdx,[rip+0x4a026]        # 0x140052020
   140007ffa:	lea    rcx,[rip+0x49d8f]        # 0x140051d90
   140008001:	call   QWORD PTR [rip+0x31489]        # 0x140039490
   140008007:	test   eax,eax
   140008009:	je     0x1400080bb
   14000800f:	mov    rcx,QWORD PTR [rip+0x49f82]        # 0x140051f98
   140008016:	call   QWORD PTR [rip+0x315a4]        # 0x1400395c0
   14000801c:	mov    rcx,QWORD PTR [rip+0x49f7d]        # 0x140051fa0
   140008023:	call   QWORD PTR [rip+0x31597]        # 0x1400395c0
   140008029:	mov    bl,dil
   14000802c:	mov    r15d,0x4e20
   140008032:	mov    rcx,QWORD PTR [rip+0x49ca7]        # 0x140051ce0
   140008039:	mov    edx,r15d
   14000803c:	call   QWORD PTR [rip+0x31456]        # 0x140039498
   140008042:	test   eax,eax
   140008044:	jne    0x14000805a
   140008046:	mov    edx,edi
   140008048:	mov    rcx,r14
   14000804b:	call   QWORD PTR [rip+0x31447]        # 0x140039498
   140008051:	test   eax,eax
   140008053:	jne    0x1400080ac
   140008055:	mov    bl,r13b
   140008058:	jmp    0x1400080ac
   14000805a:	mov    edx,r15d
   14000805d:	mov    rcx,rsi
   140008060:	call   QWORD PTR [rip+0x31432]        # 0x140039498
   140008066:	cmp    eax,0x102
   14000806b:	je     0x1400080bb
   14000806d:	cmp    eax,0x80
   140008072:	je     0x1400080b2
   140008074:	mov    rcx,QWORD PTR [rip+0x49c65]        # 0x140051ce0
   14000807b:	mov    edx,edi
   14000807d:	call   QWORD PTR [rip+0x31415]        # 0x140039498
   140008083:	mov    rcx,r14
   140008086:	test   eax,eax
   140008088:	je     0x140008095
   14000808a:	call   QWORD PTR [rip+0x31448]        # 0x1400394d8
   140008090:	mov    bl,r13b
   140008093:	jmp    0x1400080a3
   140008095:	mov    edx,edi
   140008097:	call   QWORD PTR [rip+0x313fb]        # 0x140039498
   14000809d:	neg    eax
   14000809f:	sbb    cl,cl
   1400080a1:	and    bl,cl
   1400080a3:	mov    rcx,rsi
   1400080a6:	call   QWORD PTR [rip+0x3144c]        # 0x1400394f8
   1400080ac:	test   bl,bl
   1400080ae:	je     0x1400080bb
   1400080b0:	jmp    0x140008032
   1400080b2:	mov    rcx,rsi
   1400080b5:	call   QWORD PTR [rip+0x3143d]        # 0x1400394f8
   1400080bb:	test   r14,r14
   1400080be:	je     0x1400080c9
   1400080c0:	mov    rcx,r14
   1400080c3:	call   QWORD PTR [rip+0x314f7]        # 0x1400395c0
   1400080c9:	test   rsi,rsi
   1400080cc:	je     0x1400080d7
   1400080ce:	mov    rcx,rsi
   1400080d1:	call   QWORD PTR [rip+0x314e9]        # 0x1400395c0
   1400080d7:	mov    rcx,QWORD PTR [rbp-0x29]
   1400080db:	test   rcx,rcx
   1400080de:	je     0x1400080e6
   1400080e0:	call   QWORD PTR [rip+0x314da]        # 0x1400395c0
   1400080e6:	mov    rcx,QWORD PTR [rip+0x49bf3]        # 0x140051ce0
   1400080ed:	test   rcx,rcx
   1400080f0:	je     0x1400080ff
   1400080f2:	call   QWORD PTR [rip+0x314c8]        # 0x1400395c0
   1400080f8:	mov    QWORD PTR [rip+0x49be1],r13        # 0x140051ce0
   1400080ff:	mov    rcx,QWORD PTR [rip+0x48e52]        # 0x140050f58
   140008106:	test   rcx,rcx
   140008109:	je     0x140008118
   14000810b:	call   QWORD PTR [rip+0x31297]        # 0x1400393a8
   140008111:	mov    QWORD PTR [rip+0x48e40],r13        # 0x140050f58
   140008118:	mov    rcx,QWORD PTR [rip+0x48e31]        # 0x140050f50
   14000811f:	test   rcx,rcx
   140008122:	je     0x140008131
   140008124:	call   QWORD PTR [rip+0x31496]        # 0x1400395c0
   14000812a:	mov    QWORD PTR [rip+0x48e1f],r13        # 0x140050f50
   140008131:	mov    ecx,edi
   140008133:	call   0x1400224dc
   140008138:	int3   
   140008139:	int3   
   14000813a:	int3   
   14000813b:	int3   
   14000813c:	mov    QWORD PTR [rsp+0x8],rbx
   140008141:	push   rdi
   140008142:	sub    rsp,0x20
   140008146:	mov    ebx,edx
   140008148:	mov    rdi,rcx
   14000814b:	call   0x14000816c
   140008150:	test   bl,0x1
   140008153:	je     0x14000815d
   140008155:	mov    rcx,rdi
   140008158:	call   0x140020e30
   14000815d:	mov    rax,rdi
   140008160:	mov    rbx,QWORD PTR [rsp+0x30]
   140008165:	add    rsp,0x20
   140008169:	pop    rdi
   14000816a:	ret    
   14000816b:	int3   
   14000816c:	sub    rsp,0x28
   140008170:	lea    rax,[rip+0x35fc9]        # 0x14003e140
   140008177:	mov    QWORD PTR [rcx],rax
   14000817a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000817e:	test   rcx,rcx
   140008181:	je     0x14000818e
   140008183:	mov    rax,QWORD PTR [rcx]
   140008186:	mov    edx,0x1
   14000818b:	call   QWORD PTR [rax+0x10]
   14000818e:	add    rsp,0x28
   140008192:	ret    
   140008193:	int3   
   140008194:	mov    QWORD PTR [rsp+0x8],rbx
   140008199:	xor    ebx,ebx
   14000819b:	lea    rax,[rdx-0x1]
   14000819f:	mov    r10d,0x7ffffffe
   1400081a5:	cmp    rax,r10
   1400081a8:	mov    r9d,ebx
   1400081ab:	mov    r11d,0x80070057
   1400081b1:	cmova  r9d,r11d
   1400081b5:	test   r9d,r9d
   1400081b8:	js     0x1400081f8
   1400081ba:	mov    r9d,ebx
   1400081bd:	test   rdx,rdx
   1400081c0:	je     0x1400081ec
   1400081c2:	sub    r10,rdx
   1400081c5:	sub    r8,rcx
   1400081c8:	lea    rax,[r10+rdx*1]
   1400081cc:	test   rax,rax
   1400081cf:	je     0x1400081e7
   1400081d1:	movzx  eax,WORD PTR [r8+rcx*1]
   1400081d6:	test   ax,ax
   1400081d9:	je     0x1400081e7
   1400081db:	mov    WORD PTR [rcx],ax
   1400081de:	add    rcx,0x2
   1400081e2:	dec    rdx
   1400081e5:	jne    0x1400081c8
   1400081e7:	test   rdx,rdx
   1400081ea:	jne    0x1400081fd
   1400081ec:	sub    rcx,0x2
   1400081f0:	mov    r9d,0x8007007a
   1400081f6:	jmp    0x1400081fd
   1400081f8:	test   rdx,rdx
   1400081fb:	je     0x140008200
   1400081fd:	mov    WORD PTR [rcx],bx
   140008200:	mov    rbx,QWORD PTR [rsp+0x8]
   140008205:	mov    eax,r9d
   140008208:	ret    
   140008209:	int3   
   14000820a:	int3   
   14000820b:	int3   
   14000820c:	mov    r11,rsp
   14000820f:	mov    QWORD PTR [r11+0x20],rbx
   140008213:	push   rdi
   140008214:	sub    rsp,0x70
   140008218:	mov    rax,QWORD PTR [rip+0x45229]        # 0x14004d448
   14000821f:	xor    rax,rsp
   140008222:	mov    QWORD PTR [rsp+0x68],rax
   140008227:	mov    rbx,rcx
   14000822a:	lea    rax,[r11-0x50]
   14000822e:	mov    r9d,r8d
   140008231:	mov    edi,edx
   140008233:	lea    r8,[rip+0x35936]        # 0x14003db70
   14000823a:	lea    rcx,[r11-0x50]
   14000823e:	mov    edx,0x3c
   140008243:	mov    QWORD PTR [r11-0x58],rax
   140008247:	call   0x140001004
   14000824c:	mov    rax,QWORD PTR [rbx]
   14000824f:	lea    r9,[rsp+0x20]
   140008254:	mov    r8d,0x1
   14000825a:	mov    edx,edi
   14000825c:	mov    rcx,rbx
   14000825f:	call   QWORD PTR [rax]
   140008261:	mov    rcx,QWORD PTR [rsp+0x68]
   140008266:	xor    rcx,rsp
   140008269:	call   0x140020e50
   14000826e:	mov    rbx,QWORD PTR [rsp+0x98]
   140008276:	add    rsp,0x70
   14000827a:	pop    rdi
   14000827b:	ret    
   14000827c:	mov    QWORD PTR [rsp+0x8],rbx
   140008281:	push   rdi
   140008282:	sub    rsp,0x20
   140008286:	xor    ebx,ebx
   140008288:	mov    edi,0x1
   14000828d:	cmp    DWORD PTR [rip+0x48ae1],ebx        # 0x140050d74
   140008293:	jne    0x1400082a0
   140008295:	call   0x140004f38
   14000829a:	mov    DWORD PTR [rip+0x48ad4],edi        # 0x140050d74
   1400082a0:	cmp    DWORD PTR [rip+0x48ae6],ebx        # 0x140050d8c
   1400082a6:	jne    0x1400082c9
   1400082a8:	mov    eax,DWORD PTR [rip+0x48bc2]        # 0x140050e70
   1400082ae:	mov    DWORD PTR [rip+0x48adc],eax        # 0x140050d90
   1400082b4:	test   eax,eax
   1400082b6:	jne    0x1400082c3
   1400082b8:	call   0x1400052a8
   1400082bd:	mov    DWORD PTR [rip+0x48ad9],eax        # 0x140050d9c
   1400082c3:	mov    DWORD PTR [rip+0x48ac3],edi        # 0x140050d8c
   1400082c9:	cmp    DWORD PTR [rip+0x48ac1],ebx        # 0x140050d90
   1400082cf:	jne    0x140008370
   1400082d5:	cmp    DWORD PTR [rip+0x48a99],ebx        # 0x140050d74
   1400082db:	jne    0x1400082e8
   1400082dd:	call   0x140004f38
   1400082e2:	mov    DWORD PTR [rip+0x48a8c],edi        # 0x140050d74
   1400082e8:	cmp    DWORD PTR [rip+0x48a9e],ebx        # 0x140050d8c
   1400082ee:	jne    0x140008311
   1400082f0:	mov    eax,DWORD PTR [rip+0x48b7a]        # 0x140050e70
   1400082f6:	mov    DWORD PTR [rip+0x48a94],eax        # 0x140050d90
   1400082fc:	test   eax,eax
   1400082fe:	jne    0x14000830b
   140008300:	call   0x1400052a8
   140008305:	mov    DWORD PTR [rip+0x48a91],eax        # 0x140050d9c
   14000830b:	mov    DWORD PTR [rip+0x48a7b],edi        # 0x140050d8c
   140008311:	cmp    DWORD PTR [rip+0x48a89],ebx        # 0x140050da0
   140008317:	jne    0x140008324
   140008319:	call   0x140005180
   14000831e:	mov    DWORD PTR [rip+0x48a7c],edi        # 0x140050da0
   140008324:	cmp    DWORD PTR [rip+0x48a6e],ebx        # 0x140050d98
   14000832a:	jne    0x140008370
   14000832c:	cmp    DWORD PTR [rip+0x48a42],ebx        # 0x140050d74
   140008332:	jne    0x14000833f
   140008334:	call   0x140004f38
   140008339:	mov    DWORD PTR [rip+0x48a35],edi        # 0x140050d74
   14000833f:	cmp    DWORD PTR [rip+0x48a47],ebx        # 0x140050d8c
   140008345:	jne    0x140008368
   140008347:	mov    eax,DWORD PTR [rip+0x48b23]        # 0x140050e70
   14000834d:	mov    DWORD PTR [rip+0x48a3d],eax        # 0x140050d90
   140008353:	test   eax,eax
   140008355:	jne    0x140008362
   140008357:	call   0x1400052a8
   14000835c:	mov    DWORD PTR [rip+0x48a3a],eax        # 0x140050d9c
   140008362:	mov    DWORD PTR [rip+0x48a24],edi        # 0x140050d8c
   140008368:	cmp    DWORD PTR [rip+0x48a2e],ebx        # 0x140050d9c
   14000836e:	je     0x140008372
   140008370:	mov    ebx,edi
   140008372:	mov    eax,ebx
   140008374:	mov    rbx,QWORD PTR [rsp+0x30]
   140008379:	add    rsp,0x20
   14000837d:	pop    rdi
   14000837e:	ret    
   14000837f:	int3   
   140008380:	mov    eax,0x1
   140008385:	ret    
   140008386:	int3   
   140008387:	int3   
   140008388:	mov    r11,rsp
   14000838b:	mov    QWORD PTR [r11+0x10],rdx
   14000838f:	mov    QWORD PTR [r11+0x8],rcx
   140008393:	push   rdi
   140008394:	sub    rsp,0x30
   140008398:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   1400083a0:	mov    QWORD PTR [r11+0x18],rbx
   1400083a4:	mov    QWORD PTR [r11+0x20],rsi
   1400083a8:	mov    rdi,r8
   1400083ab:	mov    rsi,rcx
   1400083ae:	lea    rax,[rip+0x364b3]        # 0x14003e868
   1400083b5:	mov    QWORD PTR [rcx],rax
   1400083b8:	lea    rbx,[rcx+0x8]
   1400083bc:	mov    QWORD PTR [r11+0x10],rbx
   1400083c0:	lea    rcx,[rip+0x46099]        # 0x14004e460
   1400083c7:	mov    rax,QWORD PTR [rip+0x46092]        # 0x14004e460
   1400083ce:	call   QWORD PTR [rax+0x18]
   1400083d1:	add    rax,0x18
   1400083d5:	mov    QWORD PTR [rbx],rax
   1400083d8:	lea    rax,[rip+0x35f19]        # 0x14003e2f8
   1400083df:	mov    QWORD PTR [rsi],rax
   1400083e2:	lea    rax,[rip+0x35e7f]        # 0x14003e268
   1400083e9:	mov    QWORD PTR [rsi+0x10],rax
   1400083ed:	xor    ebx,ebx
   1400083ef:	mov    QWORD PTR [rsi+0x428],rbx
   1400083f6:	mov    QWORD PTR [rsi+0x430],rbx
   1400083fd:	mov    DWORD PTR [rsi+0x438],ebx
   140008403:	mov    DWORD PTR [rsi+0x644],ebx
   140008409:	mov    QWORD PTR [rsi+0x648],rbx
   140008410:	mov    QWORD PTR [rsi+0x650],rbx
   140008417:	mov    QWORD PTR [rsi+0x658],rbx
   14000841e:	mov    QWORD PTR [rsi+0x660],rbx
   140008425:	mov    QWORD PTR [rsi+0x668],rbx
   14000842c:	mov    QWORD PTR [rsi+0x670],rbx
   140008433:	mov    DWORD PTR [rsi+0x678],0x1f4
   14000843d:	mov    QWORD PTR [rsi+0x680],rdi
   140008444:	mov    DWORD PTR [rsi+0x688],ebx
   14000844a:	lea    rcx,[rsi+0x18]
   14000844e:	lea    r8,[rip+0x35053]        # 0x14003d4a8
   140008455:	mov    edi,0x208
   14000845a:	mov    edx,edi
   14000845c:	call   0x140002d7c
   140008461:	test   eax,eax
   140008463:	jns    0x14000847f
   140008465:	mov    DWORD PTR [rsp+0x48],0x8007006f
   14000846d:	lea    rdx,[rip+0x42754]        # 0x14004abc8
   140008474:	lea    rcx,[rsp+0x48]
   140008479:	call   0x1400265e8
   14000847e:	int3   
   14000847f:	lea    rcx,[rsi+0x220]
   140008486:	mov    r8,rdi
   140008489:	xor    edx,edx
   14000848b:	call   0x1400260e0
   140008490:	lea    rcx,[rsi+0x43c]
   140008497:	mov    r8,rdi
   14000849a:	xor    edx,edx
   14000849c:	call   0x1400260e0
   1400084a1:	nop
   1400084a2:	mov    rax,rsi
   1400084a5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400084aa:	mov    rsi,QWORD PTR [rsp+0x58]
   1400084af:	add    rsp,0x30
   1400084b3:	pop    rdi
   1400084b4:	ret    
   1400084b5:	int3   
   1400084b6:	int3   
   1400084b7:	int3   
   1400084b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400084bd:	push   rdi
   1400084be:	sub    rsp,0x30
   1400084c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400084cb:	mov    QWORD PTR [rsp+0x48],rbx
   1400084d0:	mov    ebx,edx
   1400084d2:	mov    rdi,rcx
   1400084d5:	add    rcx,0x668
   1400084dc:	call   0x1400090dc
   1400084e1:	nop
   1400084e2:	lea    rcx,[rdi+0x658]
   1400084e9:	call   0x1400090dc
   1400084ee:	nop
   1400084ef:	lea    rcx,[rdi+0x648]
   1400084f6:	call   0x1400090dc
   1400084fb:	nop
   1400084fc:	mov    rcx,rdi
   1400084ff:	call   0x14001654c
   140008504:	test   bl,0x1
   140008507:	je     0x140008511
   140008509:	mov    rcx,rdi
   14000850c:	call   0x140020e30
   140008511:	mov    rax,rdi
   140008514:	mov    rbx,QWORD PTR [rsp+0x48]
   140008519:	add    rsp,0x30
   14000851d:	pop    rdi
   14000851e:	ret    
   14000851f:	int3   
   140008520:	mov    rax,rsp
   140008523:	push   rbp
   140008524:	push   rsi
   140008525:	push   rdi
   140008526:	push   r12
   140008528:	push   r13
   14000852a:	push   r14
   14000852c:	push   r15
   14000852e:	lea    rbp,[rax-0x58]
   140008532:	sub    rsp,0x120
   140008539:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   140008541:	mov    QWORD PTR [rax+0x20],rbx
   140008545:	mov    rax,QWORD PTR [rip+0x44efc]        # 0x14004d448
   14000854c:	xor    rax,rsp
   14000854f:	mov    QWORD PTR [rbp+0x10],rax
   140008553:	mov    r15,r8
   140008556:	mov    r12,rdx
   140008559:	mov    rsi,rcx
   14000855c:	mov    r14,QWORD PTR [rbp+0x80]
   140008563:	lea    rcx,[rip+0x45ef6]        # 0x14004e460
   14000856a:	mov    rax,QWORD PTR [rip+0x45eef]        # 0x14004e460
   140008571:	call   QWORD PTR [rax+0x18]
   140008574:	add    rax,0x18
   140008578:	mov    QWORD PTR [rsp+0x48],rax
   14000857d:	or     r13,0xffffffffffffffff
   140008581:	mov    DWORD PTR [rsp+0x28],r13d
   140008586:	mov    QWORD PTR [rsp+0x20],r15
   14000858b:	mov    r9d,r13d
   14000858e:	lea    r8,[rip+0x35c53]        # 0x14003e1e8
   140008595:	lea    ebx,[r13+0x2]
   140008599:	mov    edx,ebx
   14000859b:	mov    ecx,0x409
   1400085a0:	call   QWORD PTR [rip+0x31042]        # 0x1400395e8
   1400085a6:	xor    edi,edi
   1400085a8:	cmp    eax,0x2
   1400085ab:	je     0x1400085d3
   1400085ad:	mov    DWORD PTR [rsp+0x28],r13d
   1400085b2:	mov    QWORD PTR [rsp+0x20],r15
   1400085b7:	mov    r9d,r13d
   1400085ba:	lea    r8,[rip+0x35c1f]        # 0x14003e1e0
   1400085c1:	mov    edx,ebx
   1400085c3:	mov    ecx,0x409
   1400085c8:	call   QWORD PTR [rip+0x3101a]        # 0x1400395e8
   1400085ce:	cmp    eax,0x2
   1400085d1:	jne    0x1400085de
   1400085d3:	mov    DWORD PTR [rsi+0x644],ebx
   1400085d9:	jmp    0x140008abb
   1400085de:	mov    DWORD PTR [rsp+0x28],r13d
   1400085e3:	mov    QWORD PTR [rsp+0x20],r15
   1400085e8:	mov    r9d,r13d
   1400085eb:	lea    r8,[rip+0x35b76]        # 0x14003e168
   1400085f2:	mov    edx,ebx
   1400085f4:	mov    ecx,0x409
   1400085f9:	call   QWORD PTR [rip+0x30fe9]        # 0x1400395e8
   1400085ff:	cmp    eax,0x2
   140008602:	jne    0x140008678
   140008604:	test   r14,r14
   140008607:	je     0x140008664
   140008609:	cmp    WORD PTR [r14],di
   14000860d:	je     0x140008664
   14000860f:	lea    rcx,[rsi+0x220]
   140008616:	mov    r8,r14
   140008619:	mov    r14d,0x104
   14000861f:	mov    edx,r14d
   140008622:	call   0x140008194
   140008627:	test   eax,eax
   140008629:	jns    0x140008abb
   14000862f:	mov    r9d,r14d
   140008632:	lea    r8,[rip+0x35537]        # 0x14003db70
   140008639:	mov    edx,0x40
   14000863e:	lea    rcx,[rbp-0x70]
   140008642:	call   0x140001004
   140008647:	mov    QWORD PTR [rsp+0x68],r15
   14000864c:	lea    rax,[rbp-0x70]
   140008650:	mov    QWORD PTR [rsp+0x70],rax
   140008655:	lea    r8,[rsp+0x68]
   14000865a:	mov    ecx,0xe1230fac
   14000865f:	jmp    0x140008a9b
   140008664:	mov    QWORD PTR [rsp+0x58],r15
   140008669:	lea    r8,[rsp+0x58]
   14000866e:	mov    ecx,0xe1230faa
   140008673:	jmp    0x140008a9b
   140008678:	mov    DWORD PTR [rsp+0x28],r13d
   14000867d:	mov    QWORD PTR [rsp+0x20],r15
   140008682:	mov    r9d,r13d
   140008685:	lea    r8,[rip+0x35aec]        # 0x14003e178
   14000868c:	mov    edx,ebx
   14000868e:	mov    ecx,0x409
   140008693:	call   QWORD PTR [rip+0x30f4f]        # 0x1400395e8
   140008699:	cmp    eax,0x2
   14000869c:	jne    0x1400086a9
   14000869e:	mov    DWORD PTR [rsi+0x428],ebx
   1400086a4:	jmp    0x140008abb
   1400086a9:	mov    DWORD PTR [rsp+0x28],r13d
   1400086ae:	mov    QWORD PTR [rsp+0x20],r15
   1400086b3:	mov    r9d,r13d
   1400086b6:	lea    r8,[rip+0x35af3]        # 0x14003e1b0
   1400086bd:	mov    edx,ebx
   1400086bf:	mov    ecx,0x409
   1400086c4:	call   QWORD PTR [rip+0x30f1e]        # 0x1400395e8
   1400086ca:	cmp    eax,0x2
   1400086cd:	jne    0x1400086da
   1400086cf:	mov    DWORD PTR [rsi+0x42c],ebx
   1400086d5:	jmp    0x140008abb
   1400086da:	mov    DWORD PTR [rsp+0x28],r13d
   1400086df:	mov    QWORD PTR [rsp+0x20],r15
   1400086e4:	mov    r9d,r13d
   1400086e7:	lea    r8,[rip+0x35a9a]        # 0x14003e188
   1400086ee:	mov    edx,ebx
   1400086f0:	mov    ecx,0x409
   1400086f5:	call   QWORD PTR [rip+0x30eed]        # 0x1400395e8
   1400086fb:	cmp    eax,0x2
   1400086fe:	jne    0x14000870b
   140008700:	mov    DWORD PTR [rsi+0x430],ebx
   140008706:	jmp    0x140008abb
   14000870b:	mov    DWORD PTR [rsp+0x28],r13d
   140008710:	mov    QWORD PTR [rsp+0x20],r15
   140008715:	mov    r9d,r13d
   140008718:	lea    r8,[rip+0x35a79]        # 0x14003e198
   14000871f:	mov    edx,ebx
   140008721:	mov    ecx,0x409
   140008726:	call   QWORD PTR [rip+0x30ebc]        # 0x1400395e8
   14000872c:	cmp    eax,0x2
   14000872f:	jne    0x14000873c
   140008731:	mov    DWORD PTR [rsi+0x434],ebx
   140008737:	jmp    0x140008abb
   14000873c:	mov    DWORD PTR [rsp+0x28],r13d
   140008741:	mov    QWORD PTR [rsp+0x20],r15
   140008746:	mov    r9d,r13d
   140008749:	lea    r8,[rip+0x35ab8]        # 0x14003e208
   140008750:	mov    edx,ebx
   140008752:	mov    ecx,0x409
   140008757:	call   QWORD PTR [rip+0x30e8b]        # 0x1400395e8
   14000875d:	cmp    eax,0x2
   140008760:	je     0x140008788
   140008762:	mov    DWORD PTR [rsp+0x28],r13d
   140008767:	mov    QWORD PTR [rsp+0x20],r15
   14000876c:	mov    r9d,r13d
   14000876f:	lea    r8,[rip+0x35aae]        # 0x14003e224
   140008776:	mov    edx,ebx
   140008778:	mov    ecx,0x409
   14000877d:	call   QWORD PTR [rip+0x30e65]        # 0x1400395e8
   140008783:	cmp    eax,0x2
   140008786:	jne    0x140008793
   140008788:	mov    DWORD PTR [rsi+0x438],ebx
   14000878e:	jmp    0x140008abb
   140008793:	mov    DWORD PTR [rsp+0x28],r13d
   140008798:	mov    QWORD PTR [rsp+0x20],r15
   14000879d:	mov    r9d,r13d
   1400087a0:	lea    r8,[rip+0x35a29]        # 0x14003e1d0
   1400087a7:	mov    edx,ebx
   1400087a9:	mov    ecx,0x409
   1400087ae:	call   QWORD PTR [rip+0x30e34]        # 0x1400395e8
   1400087b4:	cmp    eax,0x2
   1400087b7:	jne    0x140008822
   1400087b9:	lea    rcx,[rip+0x45ca0]        # 0x14004e460
   1400087c0:	mov    rax,QWORD PTR [rip+0x45c99]        # 0x14004e460
   1400087c7:	call   QWORD PTR [rax+0x18]
   1400087ca:	add    rax,0x18
   1400087ce:	mov    QWORD PTR [rsp+0x40],rax
   1400087d3:	test   r14,r14
   1400087d6:	je     0x1400087f2
   1400087d8:	mov    rax,r13
   1400087db:	inc    rax
   1400087de:	cmp    WORD PTR [r14+rax*2],di
   1400087e3:	jne    0x1400087db
   1400087e5:	test   rax,rax
   1400087e8:	je     0x1400087f2
   1400087ea:	mov    r8d,eax
   1400087ed:	mov    rdx,r14
   1400087f0:	jmp    0x1400087fc
   1400087f2:	xor    r8d,r8d
   1400087f5:	lea    rdx,[rip+0x34c54]        # 0x14003d450
   1400087fc:	lea    rcx,[rsp+0x40]
   140008801:	call   0x140005ae0
   140008806:	lea    rcx,[rsi+0x648]
   14000880d:	lea    rdx,[rsp+0x40]
   140008812:	call   0x140009028
   140008817:	nop
   140008818:	mov    rdx,QWORD PTR [rsp+0x40]
   14000881d:	jmp    0x14000893f
   140008822:	mov    DWORD PTR [rsp+0x28],r13d
   140008827:	mov    QWORD PTR [rsp+0x20],r15
   14000882c:	mov    r9d,r13d
   14000882f:	lea    r8,[rip+0x359c2]        # 0x14003e1f8
   140008836:	mov    edx,ebx
   140008838:	mov    ecx,0x409
   14000883d:	call   QWORD PTR [rip+0x30da5]        # 0x1400395e8
   140008843:	cmp    eax,0x2
   140008846:	jne    0x1400088b1
   140008848:	lea    rcx,[rip+0x45c11]        # 0x14004e460
   14000884f:	mov    rax,QWORD PTR [rip+0x45c0a]        # 0x14004e460
   140008856:	call   QWORD PTR [rax+0x18]
   140008859:	add    rax,0x18
   14000885d:	mov    QWORD PTR [rsp+0x30],rax
   140008862:	test   r14,r14
   140008865:	je     0x140008881
   140008867:	mov    rax,r13
   14000886a:	inc    rax
   14000886d:	cmp    WORD PTR [r14+rax*2],di
   140008872:	jne    0x14000886a
   140008874:	test   rax,rax
   140008877:	je     0x140008881
   140008879:	mov    r8d,eax
   14000887c:	mov    rdx,r14
   14000887f:	jmp    0x14000888b
   140008881:	xor    r8d,r8d
   140008884:	lea    rdx,[rip+0x34bc5]        # 0x14003d450
   14000888b:	lea    rcx,[rsp+0x30]
   140008890:	call   0x140005ae0
   140008895:	lea    rcx,[rsi+0x658]
   14000889c:	lea    rdx,[rsp+0x30]
   1400088a1:	call   0x140009028
   1400088a6:	nop
   1400088a7:	mov    rdx,QWORD PTR [rsp+0x30]
   1400088ac:	jmp    0x14000893f
   1400088b1:	mov    DWORD PTR [rsp+0x28],r13d
   1400088b6:	mov    QWORD PTR [rsp+0x20],r15
   1400088bb:	mov    r9d,r13d
   1400088be:	lea    r8,[rip+0x3596b]        # 0x14003e230
   1400088c5:	mov    edx,ebx
   1400088c7:	mov    ecx,0x409
   1400088cc:	call   QWORD PTR [rip+0x30d16]        # 0x1400395e8
   1400088d2:	cmp    eax,0x2
   1400088d5:	jne    0x140008964
   1400088db:	lea    rcx,[rip+0x45b7e]        # 0x14004e460
   1400088e2:	mov    rax,QWORD PTR [rip+0x45b77]        # 0x14004e460
   1400088e9:	call   QWORD PTR [rax+0x18]
   1400088ec:	add    rax,0x18
   1400088f0:	mov    QWORD PTR [rsp+0x38],rax
   1400088f5:	test   r14,r14
   1400088f8:	je     0x140008914
   1400088fa:	mov    rax,r13
   1400088fd:	inc    rax
   140008900:	cmp    WORD PTR [r14+rax*2],di
   140008905:	jne    0x1400088fd
   140008907:	test   rax,rax
   14000890a:	je     0x140008914
   14000890c:	mov    r8d,eax
   14000890f:	mov    rdx,r14
   140008912:	jmp    0x14000891e
   140008914:	xor    r8d,r8d
   140008917:	lea    rdx,[rip+0x34b32]        # 0x14003d450
   14000891e:	lea    rcx,[rsp+0x38]
   140008923:	call   0x140005ae0
   140008928:	lea    rcx,[rsi+0x668]
   14000892f:	lea    rdx,[rsp+0x38]
   140008934:	call   0x140009028
   140008939:	nop
   14000893a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000893f:	add    rdx,0xffffffffffffffe8
   140008943:	mov    eax,r13d
   140008946:	lock xadd DWORD PTR [rdx+0x10],eax
   14000894b:	add    eax,r13d
   14000894e:	test   eax,eax
   140008950:	jg     0x140008abb
   140008956:	mov    rcx,QWORD PTR [rdx]
   140008959:	mov    rax,QWORD PTR [rcx]
   14000895c:	call   QWORD PTR [rax+0x8]
   14000895f:	jmp    0x140008abb
   140008964:	mov    DWORD PTR [rsp+0x28],r13d
   140008969:	mov    QWORD PTR [rsp+0x20],r15
   14000896e:	mov    r9d,r13d
   140008971:	lea    r8,[rip+0x3588c]        # 0x14003e204
   140008978:	mov    edx,ebx
   14000897a:	mov    ecx,0x409
   14000897f:	call   QWORD PTR [rip+0x30c63]        # 0x1400395e8
   140008985:	cmp    eax,0x2
   140008988:	jne    0x1400089c2
   14000898a:	test   r14,r14
   14000898d:	je     0x1400089a9
   14000898f:	mov    rax,r13
   140008992:	inc    rax
   140008995:	cmp    WORD PTR [r14+rax*2],di
   14000899a:	jne    0x140008992
   14000899c:	test   rax,rax
   14000899f:	je     0x1400089a9
   1400089a1:	mov    r8d,eax
   1400089a4:	mov    rdx,r14
   1400089a7:	jmp    0x1400089b3
   1400089a9:	xor    r8d,r8d
   1400089ac:	lea    rdx,[rip+0x34a9d]        # 0x14003d450
   1400089b3:	lea    rcx,[rsp+0x48]
   1400089b8:	call   0x140005ae0
   1400089bd:	jmp    0x140008abb
   1400089c2:	mov    DWORD PTR [rsp+0x28],r13d
   1400089c7:	mov    QWORD PTR [rsp+0x20],r15
   1400089cc:	mov    r9d,r13d
   1400089cf:	lea    r8,[rip+0x35872]        # 0x14003e248
   1400089d6:	mov    edx,ebx
   1400089d8:	mov    ecx,0x409
   1400089dd:	call   QWORD PTR [rip+0x30c05]        # 0x1400395e8
   1400089e3:	cmp    eax,0x2
   1400089e6:	jne    0x140008a01
   1400089e8:	lea    r9,[rsi+0x678]
   1400089ef:	mov    r8,r14
   1400089f2:	mov    rcx,rsi
   1400089f5:	call   0x140016de8
   1400089fa:	mov    ebx,eax
   1400089fc:	jmp    0x140008abb
   140008a01:	mov    DWORD PTR [rsp+0x28],r13d
   140008a06:	mov    QWORD PTR [rsp+0x20],r15
   140008a0b:	mov    r9d,r13d
   140008a0e:	lea    r8,[rip+0x357b3]        # 0x14003e1c8
   140008a15:	mov    edx,ebx
   140008a17:	mov    ecx,0x409
   140008a1c:	call   QWORD PTR [rip+0x30bc6]        # 0x1400395e8
   140008a22:	cmp    eax,0x2
   140008a25:	jne    0x140008a8c
   140008a27:	test   r14,r14
   140008a2a:	je     0x140008a7d
   140008a2c:	cmp    WORD PTR [r14],di
   140008a30:	je     0x140008a7d
   140008a32:	lea    rcx,[rsi+0x43c]
   140008a39:	mov    r8,r14
   140008a3c:	mov    r14d,0x104
   140008a42:	mov    edx,r14d
   140008a45:	call   0x140008194
   140008a4a:	test   eax,eax
   140008a4c:	jns    0x140008abb
   140008a4e:	mov    r9d,r14d
   140008a51:	lea    r8,[rip+0x35118]        # 0x14003db70
   140008a58:	mov    edx,0x40
   140008a5d:	lea    rcx,[rbp-0x30]
   140008a61:	call   0x140001004
   140008a66:	mov    QWORD PTR [rsp+0x78],r15
   140008a6b:	lea    rax,[rbp-0x30]
   140008a6f:	mov    QWORD PTR [rbp-0x80],rax
   140008a73:	lea    r8,[rsp+0x78]
   140008a78:	jmp    0x14000865a
   140008a7d:	mov    QWORD PTR [rsp+0x50],r15
   140008a82:	lea    r8,[rsp+0x50]
   140008a87:	jmp    0x14000866e
   140008a8c:	mov    QWORD PTR [rsp+0x60],r12
   140008a91:	lea    r8,[rsp+0x60]
   140008a96:	mov    ecx,0xe1230fad
   140008a9b:	call   0x1400048b4
   140008aa0:	mov    rbx,rax
   140008aa3:	mov    r8,QWORD PTR [rsi]
   140008aa6:	mov    rdx,rax
   140008aa9:	mov    rcx,rsi
   140008aac:	call   QWORD PTR [r8+0x20]
   140008ab0:	mov    rcx,rbx
   140008ab3:	call   QWORD PTR [rip+0x30aff]        # 0x1400395b8
   140008ab9:	mov    ebx,edi
   140008abb:	mov    rdx,QWORD PTR [rsp+0x48]
   140008ac0:	add    rdx,0xffffffffffffffe8
   140008ac4:	mov    ecx,r13d
   140008ac7:	lock xadd DWORD PTR [rdx+0x10],ecx
   140008acc:	add    ecx,r13d
   140008acf:	test   ecx,ecx
   140008ad1:	jg     0x140008add
   140008ad3:	mov    rcx,QWORD PTR [rdx]
   140008ad6:	mov    r8,QWORD PTR [rcx]
   140008ad9:	call   QWORD PTR [r8+0x8]
   140008add:	mov    eax,ebx
   140008adf:	mov    rcx,QWORD PTR [rbp+0x10]
   140008ae3:	xor    rcx,rsp
   140008ae6:	call   0x140020e50
   140008aeb:	mov    rbx,QWORD PTR [rsp+0x178]
   140008af3:	add    rsp,0x120
   140008afa:	pop    r15
   140008afc:	pop    r14
   140008afe:	pop    r13
   140008b00:	pop    r12
   140008b02:	pop    rdi
   140008b03:	pop    rsi
   140008b04:	pop    rbp
   140008b05:	ret    
   140008b06:	int3   
   140008b07:	int3   
   140008b08:	sub    rsp,0x28
   140008b0c:	mov    rcx,QWORD PTR [rcx+0x680]
   140008b13:	xor    r9d,r9d
   140008b16:	xor    r8d,r8d
   140008b19:	mov    rax,QWORD PTR [rcx]
   140008b1c:	mov    edx,0xe123056b
   140008b21:	call   QWORD PTR [rax]
   140008b23:	xor    eax,eax
   140008b25:	add    rsp,0x28
   140008b29:	ret    
   140008b2a:	int3   
   140008b2b:	int3   
   140008b2c:	rex push rbx
   140008b2e:	sub    rsp,0x20
   140008b32:	mov    rbx,rcx
   140008b35:	mov    rcx,QWORD PTR [rcx+0x680]
   140008b3c:	mov    QWORD PTR [rsp+0x30],rdx
   140008b41:	mov    rax,QWORD PTR [rcx]
   140008b44:	lea    r9,[rsp+0x30]
   140008b49:	mov    edx,0xe12303ed
   140008b4e:	mov    r8d,0x1
   140008b54:	call   QWORD PTR [rax]
   140008b56:	mov    rax,QWORD PTR [rbx]
   140008b59:	mov    rcx,rbx
   140008b5c:	call   QWORD PTR [rax+0x30]
   140008b5f:	xor    eax,eax
   140008b61:	add    rsp,0x20
   140008b65:	pop    rbx
   140008b66:	ret    
   140008b67:	int3   
   140008b68:	sub    rsp,0x28
   140008b6c:	mov    rcx,QWORD PTR [rcx+0x680]
   140008b73:	mov    QWORD PTR [rsp+0x30],rdx
   140008b78:	lea    r9,[rsp+0x30]
   140008b7d:	mov    r10,QWORD PTR [rcx]
   140008b80:	mov    edx,0xa12308fc
   140008b85:	mov    r8d,0x1
   140008b8b:	call   QWORD PTR [r10]
   140008b8e:	mov    eax,0x1
   140008b93:	add    rsp,0x28
   140008b97:	ret    
   140008b98:	mov    QWORD PTR [rsp+0x8],rbx
   140008b9d:	mov    QWORD PTR [rsp+0x10],rdi
   140008ba2:	push   rbp
   140008ba3:	mov    rbp,rsp
   140008ba6:	sub    rsp,0x40
   140008baa:	lea    rax,[rcx+0x18]
   140008bae:	mov    rbx,rcx
   140008bb1:	mov    rcx,QWORD PTR [rcx+0x680]
   140008bb8:	mov    QWORD PTR [rbp-0x20],rax
   140008bbc:	lea    rax,[rip+0x355a5]        # 0x14003e168
   140008bc3:	mov    edi,0x3
   140008bc8:	mov    QWORD PTR [rbp-0x18],rax
   140008bcc:	mov    QWORD PTR [rbp-0x10],rax
   140008bd0:	mov    rax,QWORD PTR [rcx]
   140008bd3:	lea    r9,[rbp-0x20]
   140008bd7:	mov    r8d,edi
   140008bda:	mov    edx,0x61230d81
   140008bdf:	call   QWORD PTR [rax]
   140008be1:	mov    rcx,QWORD PTR [rbx+0x680]
   140008be8:	lea    r9,[rbp-0x20]
   140008bec:	mov    rax,QWORD PTR [rcx]
   140008bef:	mov    r8d,edi
   140008bf2:	mov    edx,0x61230d82
   140008bf7:	call   QWORD PTR [rax]
   140008bf9:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c00:	lea    r9,[rbp-0x20]
   140008c04:	mov    rax,QWORD PTR [rcx]
   140008c07:	mov    r8d,edi
   140008c0a:	mov    edx,0x61230d83
   140008c0f:	call   QWORD PTR [rax]
   140008c11:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c18:	lea    r9,[rbp-0x20]
   140008c1c:	mov    rax,QWORD PTR [rcx]
   140008c1f:	mov    r8d,edi
   140008c22:	mov    edx,0x61230d84
   140008c27:	call   QWORD PTR [rax]
   140008c29:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c30:	lea    r9,[rbp-0x20]
   140008c34:	mov    rax,QWORD PTR [rcx]
   140008c37:	mov    r8d,edi
   140008c3a:	mov    edx,0x61230d85
   140008c3f:	call   QWORD PTR [rax]
   140008c41:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c48:	lea    r9,[rbp-0x20]
   140008c4c:	mov    rax,QWORD PTR [rcx]
   140008c4f:	mov    r8d,edi
   140008c52:	mov    edx,0x61230d86
   140008c57:	call   QWORD PTR [rax]
   140008c59:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c60:	lea    r9,[rbp-0x20]
   140008c64:	mov    rax,QWORD PTR [rcx]
   140008c67:	mov    r8d,edi
   140008c6a:	mov    edx,0x61230d87
   140008c6f:	call   QWORD PTR [rax]
   140008c71:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c78:	lea    r9,[rbp-0x20]
   140008c7c:	mov    rax,QWORD PTR [rcx]
   140008c7f:	mov    r8d,edi
   140008c82:	mov    edx,0x61230d8a
   140008c87:	call   QWORD PTR [rax]
   140008c89:	mov    rcx,QWORD PTR [rbx+0x680]
   140008c90:	lea    r9,[rbp-0x20]
   140008c94:	mov    rax,QWORD PTR [rcx]
   140008c97:	mov    r8d,edi
   140008c9a:	mov    edx,0x61230d8b
   140008c9f:	call   QWORD PTR [rax]
   140008ca1:	mov    rcx,QWORD PTR [rbx+0x680]
   140008ca8:	lea    r9,[rbp-0x20]
   140008cac:	mov    rax,QWORD PTR [rcx]
   140008caf:	mov    r8d,edi
   140008cb2:	mov    edx,0x61230d8c
   140008cb7:	call   QWORD PTR [rax]
   140008cb9:	mov    rcx,QWORD PTR [rbx+0x680]
   140008cc0:	lea    r9,[rbp-0x20]
   140008cc4:	mov    rax,QWORD PTR [rcx]
   140008cc7:	mov    r8d,edi
   140008cca:	mov    edx,0x61230d8d
   140008ccf:	call   QWORD PTR [rax]
   140008cd1:	mov    rcx,QWORD PTR [rbx+0x680]
   140008cd8:	lea    r9,[rbp-0x20]
   140008cdc:	mov    rax,QWORD PTR [rcx]
   140008cdf:	mov    r8d,edi
   140008ce2:	mov    edx,0x61230d8e
   140008ce7:	call   QWORD PTR [rax]
   140008ce9:	mov    rbx,QWORD PTR [rsp+0x50]
   140008cee:	mov    rdi,QWORD PTR [rsp+0x58]
   140008cf3:	add    rsp,0x40
   140008cf7:	pop    rbp
   140008cf8:	ret    
   140008cf9:	int3   
   140008cfa:	int3   
   140008cfb:	int3   
   140008cfc:	mov    QWORD PTR [rsp+0x10],rbx
   140008d01:	mov    QWORD PTR [rsp+0x18],rbp
   140008d06:	mov    QWORD PTR [rsp+0x20],rsi
   140008d0b:	push   rdi
   140008d0c:	sub    rsp,0x20
   140008d10:	xor    ebp,ebp
   140008d12:	mov    rdi,rcx
   140008d15:	cmp    DWORD PTR [rcx+0x644],ebp
   140008d1b:	je     0x140008d2b
   140008d1d:	mov    rax,QWORD PTR [rcx]
   140008d20:	call   QWORD PTR [rax+0x30]
   140008d23:	lea    eax,[rbp+0x1]
   140008d26:	jmp    0x140008e76
   140008d2b:	lea    rsi,[rcx+0x10]
   140008d2f:	mov    rcx,rsi
   140008d32:	mov    rax,QWORD PTR [rsi]
   140008d35:	call   QWORD PTR [rax+0x30]
   140008d38:	mov    rcx,rsi
   140008d3b:	movzx  ebx,al
   140008d3e:	mov    rax,QWORD PTR [rsi]
   140008d41:	call   QWORD PTR [rax+0x28]
   140008d44:	mov    rcx,rsi
   140008d47:	movzx  eax,al
   140008d4a:	add    ebx,eax
   140008d4c:	mov    rax,QWORD PTR [rsi]
   140008d4f:	call   QWORD PTR [rax+0x20]
   140008d52:	mov    rcx,rsi
   140008d55:	movzx  eax,al
   140008d58:	add    ebx,eax
   140008d5a:	mov    rax,QWORD PTR [rsi]
   140008d5d:	call   QWORD PTR [rax+0x18]
   140008d60:	movzx  eax,al
   140008d63:	add    eax,ebx
   140008d65:	mov    ebx,0x1
   140008d6a:	cmp    eax,ebx
   140008d6c:	je     0x140008d8c
   140008d6e:	mov    edx,0xe123056f
   140008d73:	xor    r9d,r9d
   140008d76:	xor    r8d,r8d
   140008d79:	mov    rcx,QWORD PTR [rdi+0x680]
   140008d80:	mov    rax,QWORD PTR [rcx]
   140008d83:	call   QWORD PTR [rax]
   140008d85:	xor    eax,eax
   140008d87:	jmp    0x140008e76
   140008d8c:	call   0x14000827c
   140008d91:	test   eax,eax
   140008d93:	je     0x140008da4
   140008d95:	cmp    DWORD PTR [rdi+0x650],ebp
   140008d9b:	jle    0x140008da4
   140008d9d:	mov    edx,0xe12305c6
   140008da2:	jmp    0x140008d73
   140008da4:	mov    rax,QWORD PTR [rsi]
   140008da7:	mov    rcx,rsi
   140008daa:	call   QWORD PTR [rax+0x28]
   140008dad:	test   al,al
   140008daf:	jne    0x140008dc0
   140008db1:	cmp    DWORD PTR [rdi+0x650],ebp
   140008db7:	je     0x140008dc0
   140008db9:	mov    edx,0xe123056e
   140008dbe:	jmp    0x140008d73
   140008dc0:	mov    rax,QWORD PTR [rsi]
   140008dc3:	mov    rcx,rsi
   140008dc6:	call   QWORD PTR [rax+0x30]
   140008dc9:	test   al,al
   140008dcb:	jne    0x140008df6
   140008dcd:	mov    rax,QWORD PTR [rsi]
   140008dd0:	mov    rcx,rsi
   140008dd3:	call   QWORD PTR [rax+0x68]
   140008dd6:	cmp    WORD PTR [rax],bp
   140008dd9:	je     0x140008df6
   140008ddb:	lea    rax,[rip+0x353e6]        # 0x14003e1c8
   140008de2:	lea    r9,[rsp+0x30]
   140008de7:	mov    r8d,ebx
   140008dea:	mov    QWORD PTR [rsp+0x30],rax
   140008def:	mov    edx,0xe1230fad
   140008df4:	jmp    0x140008d79
   140008df6:	cmp    DWORD PTR [rdi+0x670],ebp
   140008dfc:	je     0x140008e3b
   140008dfe:	mov    rax,QWORD PTR [rsi]
   140008e01:	mov    rcx,rsi
   140008e04:	call   QWORD PTR [rax+0x80]
   140008e0a:	test   eax,eax
   140008e0c:	je     0x140008e3b
   140008e0e:	mov    rax,QWORD PTR [rsi]
   140008e11:	mov    rcx,rsi
   140008e14:	call   QWORD PTR [rax+0x80]
   140008e1a:	mov    r8d,0x1f4
   140008e20:	cmp    eax,r8d
   140008e23:	jae    0x140008e3b
   140008e25:	mov    rcx,QWORD PTR [rdi+0x680]
   140008e2c:	mov    edx,0xe12305e5
   140008e31:	call   0x14000820c
   140008e36:	jmp    0x140008d85
   140008e3b:	mov    rax,QWORD PTR [rsi]
   140008e3e:	mov    rcx,rsi
   140008e41:	call   QWORD PTR [rax+0x60]
   140008e44:	or     rcx,0xffffffffffffffff
   140008e48:	inc    rcx
   140008e4b:	cmp    WORD PTR [rax+rcx*2],bp
   140008e4f:	jne    0x140008e48
   140008e51:	test   rcx,rcx
   140008e54:	jne    0x140008e74
   140008e56:	lea    rax,[rip+0x3530b]        # 0x14003e168
   140008e5d:	lea    r9,[rsp+0x30]
   140008e62:	mov    r8d,ebx
   140008e65:	mov    QWORD PTR [rsp+0x30],rax
   140008e6a:	mov    edx,0xe123059b
   140008e6f:	jmp    0x140008d79
   140008e74:	mov    eax,ebx
   140008e76:	mov    rbx,QWORD PTR [rsp+0x38]
   140008e7b:	mov    rbp,QWORD PTR [rsp+0x40]
   140008e80:	mov    rsi,QWORD PTR [rsp+0x48]
   140008e85:	add    rsp,0x20
   140008e89:	pop    rdi
   140008e8a:	ret    
   140008e8b:	int3   
   140008e8c:	mov    QWORD PTR [rsp+0x8],rbx
   140008e91:	push   rdi
   140008e92:	sub    rsp,0x20
   140008e96:	mov    rdi,rcx
   140008e99:	call   0x140016590
   140008e9e:	mov    ebx,eax
   140008ea0:	test   eax,eax
   140008ea2:	je     0x140008eb2
   140008ea4:	mov    rcx,rdi
   140008ea7:	call   0x140008cfc
   140008eac:	neg    eax
   140008eae:	sbb    ecx,ecx
   140008eb0:	and    ebx,ecx
   140008eb2:	mov    eax,ebx
   140008eb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eb9:	add    rsp,0x20
   140008ebd:	pop    rdi
   140008ebe:	ret    
   140008ebf:	int3   
   140008ec0:	cmp    DWORD PTR [rcx+0x418],0x0
   140008ec7:	setne  al
   140008eca:	ret    
   140008ecb:	int3   
   140008ecc:	cmp    DWORD PTR [rcx+0x41c],0x0
   140008ed3:	setne  al
   140008ed6:	ret    
   140008ed7:	int3   
   140008ed8:	cmp    DWORD PTR [rcx+0x420],0x0
   140008edf:	setne  al
   140008ee2:	ret    
   140008ee3:	int3   
   140008ee4:	cmp    DWORD PTR [rcx+0x424],0x0
   140008eeb:	setne  al
   140008eee:	ret    
   140008eef:	int3   
   140008ef0:	cmp    DWORD PTR [rcx+0x428],0x0
   140008ef7:	setne  al
   140008efa:	ret    
   140008efb:	int3   
   140008efc:	lea    rax,[rcx+0x42c]
   140008f03:	ret    
   140008f04:	mov    eax,DWORD PTR [rcx+0x640]
   140008f0a:	ret    
   140008f0b:	int3   
   140008f0c:	sub    rsp,0x28
   140008f10:	test   edx,edx
   140008f12:	js     0x140008f2f
   140008f14:	cmp    edx,DWORD PTR [rcx+0x640]
   140008f1a:	jge    0x140008f2f
   140008f1c:	mov    rax,QWORD PTR [rcx+0x638]
   140008f23:	movsxd rdx,edx
   140008f26:	mov    rax,QWORD PTR [rax+rdx*8]
   140008f2a:	add    rsp,0x28
   140008f2e:	ret    
   140008f2f:	xor    r9d,r9d
   140008f32:	xor    r8d,r8d
   140008f35:	mov    ecx,0xc000008c
   140008f3a:	lea    edx,[r9+0x1]
   140008f3e:	call   QWORD PTR [rip+0x30384]        # 0x1400392c8
   140008f44:	int3   
   140008f45:	int3   
   140008f46:	int3   
   140008f47:	int3   
   140008f48:	mov    eax,DWORD PTR [rcx+0x650]
   140008f4e:	ret    
   140008f4f:	int3   
   140008f50:	sub    rsp,0x28
   140008f54:	test   edx,edx
   140008f56:	js     0x140008f73
   140008f58:	cmp    edx,DWORD PTR [rcx+0x650]
   140008f5e:	jge    0x140008f73
   140008f60:	mov    rax,QWORD PTR [rcx+0x648]
   140008f67:	movsxd rdx,edx
   140008f6a:	mov    rax,QWORD PTR [rax+rdx*8]
   140008f6e:	add    rsp,0x28
   140008f72:	ret    
   140008f73:	xor    r9d,r9d
   140008f76:	xor    r8d,r8d
   140008f79:	mov    ecx,0xc000008c
   140008f7e:	lea    edx,[r9+0x1]
   140008f82:	call   QWORD PTR [rip+0x30340]        # 0x1400392c8
   140008f88:	int3   
   140008f89:	int3   
   140008f8a:	int3   
   140008f8b:	int3   
   140008f8c:	mov    eax,DWORD PTR [rcx+0x660]
   140008f92:	ret    
   140008f93:	int3   
   140008f94:	sub    rsp,0x28
   140008f98:	test   edx,edx
   140008f9a:	js     0x140008fb7
   140008f9c:	cmp    edx,DWORD PTR [rcx+0x660]
   140008fa2:	jge    0x140008fb7
   140008fa4:	mov    rax,QWORD PTR [rcx+0x658]
   140008fab:	movsxd rdx,edx
   140008fae:	mov    rax,QWORD PTR [rax+rdx*8]
   140008fb2:	add    rsp,0x28
   140008fb6:	ret    
   140008fb7:	xor    r9d,r9d
   140008fba:	xor    r8d,r8d
   140008fbd:	mov    ecx,0xc000008c
   140008fc2:	lea    edx,[r9+0x1]
   140008fc6:	call   QWORD PTR [rip+0x302fc]        # 0x1400392c8
   140008fcc:	int3   
   140008fcd:	int3   
   140008fce:	int3   
   140008fcf:	int3   
   140008fd0:	mov    eax,DWORD PTR [rcx+0x668]
   140008fd6:	ret    
   140008fd7:	int3   
   140008fd8:	lea    rax,[rcx+0x210]
   140008fdf:	ret    
   140008fe0:	and    QWORD PTR [r8],0x0
   140008fe4:	mov    eax,0x80004005
   140008fe9:	ret    
   140008fea:	int3   
   140008feb:	int3   
   140008fec:	mov    eax,0x1
   140008ff1:	lock xadd DWORD PTR [rcx+0x678],eax
   140008ff9:	inc    eax
   140008ffb:	ret    
   140008ffc:	rex push rbx
   140008ffe:	sub    rsp,0x20
   140009002:	or     ebx,0xffffffff
   140009005:	lock xadd DWORD PTR [rcx+0x678],ebx
   14000900d:	dec    ebx
   14000900f:	jne    0x140009020
   140009011:	add    rcx,0xfffffffffffffff0
   140009015:	je     0x140009020
   140009017:	mov    r8,QWORD PTR [rcx]
   14000901a:	lea    edx,[rbx+0x1]
   14000901d:	call   QWORD PTR [r8]
   140009020:	mov    eax,ebx
   140009022:	add    rsp,0x20
   140009026:	pop    rbx
   140009027:	ret    
   140009028:	mov    QWORD PTR [rsp+0x8],rcx
   14000902d:	push   rbx
   14000902e:	push   rsi
   14000902f:	push   rdi
   140009030:	sub    rsp,0x30
   140009034:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000903d:	mov    rsi,rdx
   140009040:	mov    rbx,rcx
   140009043:	mov    edi,DWORD PTR [rcx+0x8]
   140009046:	movsxd r8,DWORD PTR [rcx+0xc]
   14000904a:	cmp    edi,r8d
   14000904d:	jne    0x1400090a5
   14000904f:	mov    r9,QWORD PTR [rcx]
   140009052:	cmp    rdx,r9
   140009055:	jb     0x14000906b
   140009057:	lea    rcx,[r9+r8*8]
   14000905b:	cmp    rdx,rcx
   14000905e:	jae    0x14000906b
   140009060:	mov    ecx,0x80004005
   140009065:	call   0x140003e64
   14000906a:	int3   
   14000906b:	test   r8d,r8d
   14000906e:	jne    0x140009076
   140009070:	lea    edi,[r8+0x1]
   140009074:	jmp    0x14000907a
   140009076:	add    edi,edi
   140009078:	js     0x1400090a1
   14000907a:	movsxd rdx,edi
   14000907d:	cmp    rdx,0xfffffff
   140009084:	ja     0x1400090a1
   140009086:	mov    r8d,0x8
   14000908c:	mov    rcx,r9
   14000908f:	call   0x140028094
   140009094:	test   rax,rax
   140009097:	je     0x1400090a1
   140009099:	mov    DWORD PTR [rbx+0xc],edi
   14000909c:	mov    QWORD PTR [rbx],rax
   14000909f:	jmp    0x1400090a5
   1400090a1:	xor    eax,eax
   1400090a3:	jmp    0x1400090d2
   1400090a5:	movsxd rax,DWORD PTR [rbx+0x8]
   1400090a9:	mov    DWORD PTR [rsp+0x60],eax
   1400090ad:	mov    rcx,rax
   1400090b0:	mov    rax,QWORD PTR [rbx]
   1400090b3:	lea    rcx,[rax+rcx*8]
   1400090b7:	mov    QWORD PTR [rsp+0x68],rcx
   1400090bc:	test   rcx,rcx
   1400090bf:	je     0x1400090ca
   1400090c1:	mov    rdx,rsi
   1400090c4:	call   0x140005678
   1400090c9:	nop
   1400090ca:	inc    DWORD PTR [rbx+0x8]
   1400090cd:	mov    eax,0x1
   1400090d2:	add    rsp,0x30
   1400090d6:	pop    rdi
   1400090d7:	pop    rsi
   1400090d8:	pop    rbx
   1400090d9:	ret    
   1400090da:	int3   
   1400090db:	int3   
   1400090dc:	rex push rdi
   1400090de:	sub    rsp,0x30
   1400090e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400090eb:	mov    QWORD PTR [rsp+0x48],rbx
   1400090f0:	mov    QWORD PTR [rsp+0x50],rsi
   1400090f5:	mov    rbx,rcx
   1400090f8:	cmp    QWORD PTR [rcx],0x0
   1400090fc:	je     0x140009140
   1400090fe:	xor    edi,edi
   140009100:	cmp    DWORD PTR [rcx+0x8],edi
   140009103:	jle    0x140009134
   140009105:	xor    esi,esi
   140009107:	mov    rcx,QWORD PTR [rbx]
   14000910a:	add    rcx,rsi
   14000910d:	mov    QWORD PTR [rsp+0x40],rcx
   140009112:	mov    rdx,QWORD PTR [rcx]
   140009115:	sub    rdx,0x18
   140009119:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000911e:	jg     0x140009129
   140009120:	mov    rcx,QWORD PTR [rdx]
   140009123:	mov    rax,QWORD PTR [rcx]
   140009126:	call   QWORD PTR [rax+0x8]
   140009129:	inc    edi
   14000912b:	add    rsi,0x8
   14000912f:	cmp    edi,DWORD PTR [rbx+0x8]
   140009132:	jl     0x140009107
   140009134:	mov    rcx,QWORD PTR [rbx]
   140009137:	call   0x140023328
   14000913c:	and    QWORD PTR [rbx],0x0
   140009140:	and    DWORD PTR [rbx+0x8],0x0
   140009144:	and    DWORD PTR [rbx+0xc],0x0
   140009148:	mov    rbx,QWORD PTR [rsp+0x48]
   14000914d:	mov    rsi,QWORD PTR [rsp+0x50]
   140009152:	add    rsp,0x30
   140009156:	pop    rdi
   140009157:	ret    
   140009158:	sub    rsp,0x28
   14000915c:	mov    rcx,QWORD PTR [rcx]
   14000915f:	xor    eax,eax
   140009161:	xchg   DWORD PTR [rcx+0x8],eax
   140009164:	lock or DWORD PTR [rsp],0x0
   140009169:	mov    eax,DWORD PTR [rcx+0xc]
   14000916c:	test   eax,eax
   14000916e:	jle    0x140009189
   140009170:	lock or DWORD PTR [rsp],0x0
   140009175:	mov    eax,DWORD PTR [rcx+0xc]
   140009178:	mov    rax,QWORD PTR [rcx]
   14000917b:	test   rax,rax
   14000917e:	je     0x140009189
   140009180:	mov    rcx,QWORD PTR [rcx]
   140009183:	call   QWORD PTR [rip+0x3034f]        # 0x1400394d8
   140009189:	add    rsp,0x28
   14000918d:	ret    
   14000918e:	int3   
   14000918f:	int3   
   140009190:	rex push rbx
   140009192:	sub    rsp,0x20
   140009196:	mov    rax,QWORD PTR [rcx]
   140009199:	mov    rbx,rcx
   14000919c:	test   rax,rax
   14000919f:	je     0x1400091aa
   1400091a1:	mov    rcx,QWORD PTR [rcx]
   1400091a4:	call   QWORD PTR [rip+0x30416]        # 0x1400395c0
   1400091aa:	mov    QWORD PTR [rbx],0x0
   1400091b1:	add    rsp,0x20
   1400091b5:	pop    rbx
   1400091b6:	ret    
   1400091b7:	int3   
   1400091b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400091bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400091c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400091c7:	push   rdi
   1400091c8:	sub    rsp,0x40
   1400091cc:	mov    rbp,QWORD PTR [rip+0x4597d]        # 0x14004eb50
   1400091d3:	mov    rbx,rcx
   1400091d6:	add    rcx,0x18
   1400091da:	call   QWORD PTR [rip+0x2ffc8]        # 0x1400391a8
   1400091e0:	xor    edi,edi
   1400091e2:	cmp    QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400091e7:	jne    0x140009216
   1400091e9:	lea    r8d,[rdi+0x3]
   1400091ed:	mov    QWORD PTR [rsp+0x30],rdi
   1400091f2:	xor    r9d,r9d
   1400091f5:	mov    edx,0xc0000000
   1400091fa:	mov    rcx,rbp
   1400091fd:	mov    DWORD PTR [rsp+0x28],edi
   140009201:	mov    DWORD PTR [rsp+0x20],r8d
   140009206:	call   QWORD PTR [rip+0x3018c]        # 0x140039398
   14000920c:	mov    QWORD PTR [rbx+0x8],rax
   140009210:	cmp    rax,0xffffffffffffffff
   140009214:	je     0x140009219
   140009216:	inc    DWORD PTR [rbx+0x10]
   140009219:	lea    rcx,[rbx+0x18]
   14000921d:	call   QWORD PTR [rip+0x2ff8d]        # 0x1400391b0
   140009223:	cmp    QWORD PTR [rbx+0x8],0xffffffffffffffff
   140009228:	mov    rbx,QWORD PTR [rsp+0x50]
   14000922d:	mov    rbp,QWORD PTR [rsp+0x58]
   140009232:	mov    rsi,QWORD PTR [rsp+0x60]
   140009237:	setne  dil
   14000923b:	mov    eax,edi
   14000923d:	add    rsp,0x40
   140009241:	pop    rdi
   140009242:	ret    
   140009243:	int3   
   140009244:	mov    QWORD PTR [rsp+0x8],rcx
   140009249:	push   rbx
   14000924a:	sub    rsp,0x30
   14000924e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009257:	mov    rbx,rcx
   14000925a:	lea    rax,[rip+0x348ff]        # 0x14003db60
   140009261:	mov    QWORD PTR [rcx],rax
   140009264:	test   dl,0x1
   140009267:	je     0x14000926e
   140009269:	call   0x140020e30
   14000926e:	mov    rax,rbx
   140009271:	add    rsp,0x30
   140009275:	pop    rbx
   140009276:	ret    
   140009277:	int3   
   140009278:	mov    QWORD PTR [rsp+0x8],rcx
   14000927d:	sub    rsp,0x18
   140009281:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140009289:	lea    rax,[rip+0x348d0]        # 0x14003db60
   140009290:	mov    QWORD PTR [rcx],rax
   140009293:	add    rsp,0x18
   140009297:	ret    
   140009298:	rex push rbx
   14000929a:	sub    rsp,0x80
   1400092a1:	mov    rax,QWORD PTR [rip+0x441a0]        # 0x14004d448
   1400092a8:	xor    rax,rsp
   1400092ab:	mov    QWORD PTR [rsp+0x70],rax
   1400092b0:	cmp    DWORD PTR [rdx],0x1
   1400092b3:	mov    rbx,rcx
   1400092b6:	jne    0x1400092c7
   1400092b8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400092bc:	mov    edx,DWORD PTR [rdx+0x4]
   1400092bf:	xor    r9d,r9d
   1400092c2:	xor    r8d,r8d
   1400092c5:	jmp    0x1400092ff
   1400092c7:	mov    r9d,DWORD PTR [rdx+0x4]
   1400092cb:	lea    r8,[rip+0x34182]        # 0x14003d454
   1400092d2:	lea    rcx,[rsp+0x30]
   1400092d7:	mov    edx,0x40
   1400092dc:	call   0x140001004
   1400092e1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400092e5:	lea    rax,[rsp+0x30]
   1400092ea:	mov    QWORD PTR [rsp+0x20],rax
   1400092ef:	lea    r9,[rsp+0x20]
   1400092f4:	mov    edx,0xe12303e9
   1400092f9:	mov    r8d,0x1
   1400092ff:	mov    rax,QWORD PTR [rcx]
   140009302:	call   QWORD PTR [rax]
   140009304:	mov    rcx,QWORD PTR [rsp+0x70]
   140009309:	xor    rcx,rsp
   14000930c:	call   0x140020e50
   140009311:	add    rsp,0x80
   140009318:	pop    rbx
   140009319:	ret    
   14000931a:	int3   
   14000931b:	int3   
   14000931c:	mov    rax,rsp
   14000931f:	push   rbp
   140009320:	push   r12
   140009322:	push   r13
   140009324:	push   r14
   140009326:	push   r15
   140009328:	lea    rbp,[rax-0xe88]
   14000932f:	sub    rsp,0xf60
   140009336:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000933f:	mov    QWORD PTR [rax+0x10],rbx
   140009343:	mov    QWORD PTR [rax+0x18],rsi
   140009347:	mov    QWORD PTR [rax+0x20],rdi
   14000934b:	mov    rax,QWORD PTR [rip+0x440f6]        # 0x14004d448
   140009352:	xor    rax,rsp
   140009355:	mov    QWORD PTR [rbp+0xe50],rax
   14000935c:	mov    QWORD PTR [rsp+0x58],rdx
   140009361:	mov    rsi,rcx
   140009364:	mov    QWORD PTR [rsp+0x68],rcx
   140009369:	lea    rdx,[rip+0x34778]        # 0x14003dae8
   140009370:	mov    QWORD PTR [rcx],rdx
   140009373:	lea    rax,[rip+0x34fe6]        # 0x14003e360
   14000937a:	mov    QWORD PTR [rcx],rax
   14000937d:	add    rcx,0x8
   140009381:	mov    QWORD PTR [rsp+0x30],rcx
   140009386:	mov    QWORD PTR [rcx],rdx
   140009389:	lea    rax,[rip+0x35a30]        # 0x14003edc0
   140009390:	mov    QWORD PTR [rcx],rax
   140009393:	xor    r14d,r14d
   140009396:	mov    DWORD PTR [rcx+0x28],r14d
   14000939a:	mov    DWORD PTR [rcx+0x2c],r14d
   14000939e:	mov    QWORD PTR [rcx+0x20],r14
   1400093a2:	or     rdx,0xffffffffffffffff
   1400093a6:	mov    DWORD PTR [rcx+0x30],edx
   1400093a9:	lea    rax,[rcx+0x8]
   1400093ad:	mov    QWORD PTR [rax+0x8],rax
   1400093b1:	mov    QWORD PTR [rax],rax
   1400093b4:	mov    DWORD PTR [rcx+0x18],r14d
   1400093b8:	mov    DWORD PTR [rsi+0x48],r14d
   1400093bc:	mov    DWORD PTR [rsi+0x4c],r14d
   1400093c0:	mov    QWORD PTR [rsi+0x40],r14
   1400093c4:	mov    DWORD PTR [rsi+0x50],edx
   1400093c7:	lea    rax,[rsi+0x58]
   1400093cb:	mov    QWORD PTR [rsp+0x30],rax
   1400093d0:	lea    rbx,[rip+0x34659]        # 0x14003da30
   1400093d7:	mov    QWORD PTR [rax],rbx
   1400093da:	mov    QWORD PTR [rax+0x8],r14
   1400093de:	lea    rcx,[rip+0x3545b]        # 0x14003e840
   1400093e5:	mov    QWORD PTR [rax],rcx
   1400093e8:	mov    DWORD PTR [rax+0x10],r14d
   1400093ec:	lea    r15,[rsi+0x70]
   1400093f0:	mov    QWORD PTR [rsp+0x30],r15
   1400093f5:	mov    QWORD PTR [r15],rbx
   1400093f8:	mov    QWORD PTR [r15+0x8],r14
   1400093fc:	mov    QWORD PTR [r15],rcx
   1400093ff:	mov    DWORD PTR [r15+0x10],r14d
   140009403:	lea    r12,[rsi+0x88]
   14000940a:	mov    QWORD PTR [rsp+0x30],r12
   14000940f:	mov    QWORD PTR [r12],rbx
   140009413:	mov    QWORD PTR [r12+0x8],r14
   140009418:	mov    QWORD PTR [r12],rcx
   14000941c:	mov    DWORD PTR [r12+0x10],r14d
   140009421:	lea    r13,[rsi+0xa0]
   140009428:	mov    QWORD PTR [rsp+0x30],r13
   14000942d:	mov    QWORD PTR [r13+0x0],rbx
   140009431:	mov    QWORD PTR [r13+0x8],r14
   140009435:	mov    QWORD PTR [r13+0x0],rcx
   140009439:	mov    DWORD PTR [r13+0x10],r14d
   14000943d:	lea    rax,[rsi+0xb8]
   140009444:	mov    QWORD PTR [rsp+0x30],rax
   140009449:	mov    QWORD PTR [rax],rbx
   14000944c:	mov    QWORD PTR [rax+0x8],r14
   140009450:	mov    QWORD PTR [rax],rcx
   140009453:	mov    DWORD PTR [rax+0x10],r14d
   140009457:	lea    rax,[rsi+0xd0]
   14000945e:	mov    QWORD PTR [rsp+0x30],rax
   140009463:	mov    QWORD PTR [rax],rbx
   140009466:	mov    QWORD PTR [rax+0x8],r14
   14000946a:	mov    QWORD PTR [rax],rcx
   14000946d:	mov    DWORD PTR [rax+0x10],r14d
   140009471:	lea    rax,[rsi+0xe8]
   140009478:	mov    QWORD PTR [rsp+0x30],rax
   14000947d:	mov    QWORD PTR [rax],rbx
   140009480:	mov    QWORD PTR [rax+0x8],r14
   140009484:	lea    rcx,[rip+0x3547d]        # 0x14003e908
   14000948b:	mov    QWORD PTR [rax],rcx
   14000948e:	call   QWORD PTR [rip+0x2fe7c]        # 0x140039310
   140009494:	mov    QWORD PTR [rsi+0xf8],rbx
   14000949b:	mov    QWORD PTR [rsi+0x100],rax
   1400094a2:	mov    QWORD PTR [rsi+0x108],r14
   1400094a9:	lea    rdx,[rsi+0x110]
   1400094b0:	mov    QWORD PTR [rsp+0x30],rdx
   1400094b5:	lea    rax,[rip+0x352fc]        # 0x14003e7b8
   1400094bc:	mov    QWORD PTR [rdx],rax
   1400094bf:	lea    rcx,[rdx+0x8]
   1400094c3:	mov    QWORD PTR [rsp+0x38],rcx
   1400094c8:	lea    rax,[rip+0x35be1]        # 0x14003f0b0
   1400094cf:	mov    QWORD PTR [rcx],rax
   1400094d2:	mov    DWORD PTR [rcx+0x8],0x1
   1400094d9:	lea    rax,[rcx+0x10]
   1400094dd:	mov    QWORD PTR [rsp+0x48],rax
   1400094e2:	lea    r8,[rip+0x3475f]        # 0x14003dc48
   1400094e9:	mov    QWORD PTR [rax],r8
   1400094ec:	mov    QWORD PTR [rax+0x8],rbx
   1400094f0:	mov    QWORD PTR [rax+0x10],r14
   1400094f4:	lea    r8,[rip+0x3457d]        # 0x14003da78
   1400094fb:	mov    QWORD PTR [rax],r8
   1400094fe:	lea    r8,[rip+0x3454b]        # 0x14003da50
   140009505:	mov    QWORD PTR [rax+0x8],r8
   140009509:	mov    QWORD PTR [rax+0x18],r14
   14000950d:	mov    QWORD PTR [rax+0x20],r14
   140009511:	mov    DWORD PTR [rax+0x28],r14d
   140009515:	mov    QWORD PTR [rax+0x30],r14
   140009519:	mov    BYTE PTR [rax+0x38],r14b
   14000951d:	mov    QWORD PTR [rcx+0x150],r14
   140009524:	mov    QWORD PTR [rcx+0x158],r14
   14000952b:	mov    QWORD PTR [rcx+0x178],r14
   140009532:	mov    DWORD PTR [rdx+0x188],r14d
   140009539:	lea    rcx,[rsi+0x2a0]
   140009540:	mov    rdx,rsi
   140009543:	call   0x14000e8d4
   140009548:	nop
   140009549:	lea    rdi,[rsi+0xf78]
   140009550:	mov    QWORD PTR [rsp+0x48],rdi
   140009555:	mov    QWORD PTR [rdi],rsi
   140009558:	mov    DWORD PTR [rdi+0x10],r14d
   14000955c:	mov    DWORD PTR [rdi+0x14],r14d
   140009560:	mov    QWORD PTR [rdi+0x8],r14
   140009564:	or     rax,0xffffffffffffffff
   140009568:	mov    DWORD PTR [rdi+0x18],eax
   14000956b:	mov    QWORD PTR [rdi+0x20],r14
   14000956f:	mov    QWORD PTR [rdi+0x28],r14
   140009573:	mov    QWORD PTR [rdi+0x30],r14
   140009577:	lea    rbx,[rdi+0x38]
   14000957b:	mov    QWORD PTR [rsp+0x38],rbx
   140009580:	mov    QWORD PTR [rbx],r14
   140009583:	mov    QWORD PTR [rbx+0x8],r14
   140009587:	call   0x14000dd50
   14000958c:	mov    QWORD PTR [rbx],rax
   14000958f:	add    rdi,0x48
   140009593:	mov    QWORD PTR [rsp+0x38],rdi
   140009598:	mov    r14d,0x80
   14000959e:	mov    DWORD PTR [rdi],r14d
   1400095a1:	lea    rbx,[rdi+0x10]
   1400095a5:	mov    QWORD PTR [rsp+0x30],rbx
   1400095aa:	mov    rcx,rbx
   1400095ad:	call   0x14000e3d4
   1400095b2:	nop
   1400095b3:	mov    DWORD PTR [rbx+0x10],r14d
   1400095b7:	and    DWORD PTR [rbx+0x14],0x0
   1400095bb:	lea    eax,[r14-0x78]
   1400095bf:	mul    r14
   1400095c2:	mov    rcx,0xffffffffffffffff
   1400095c9:	cmovo  rax,rcx
   1400095cd:	mov    rcx,rax
   1400095d0:	call   0x14002b130
   1400095d5:	mov    QWORD PTR [rbx+0x18],rax
   1400095d9:	lea    rbx,[rdi+0x30]
   1400095dd:	mov    QWORD PTR [rsp+0x30],rbx
   1400095e2:	mov    DWORD PTR [rbx+0xc],r14d
   1400095e6:	mov    DWORD PTR [rbx+0x8],0x40
   1400095ed:	mov    DWORD PTR [rbx+0x10],0x8
   1400095f4:	mov    ecx,0x440
   1400095f9:	call   0x14002b130
   1400095fe:	mov    QWORD PTR [rbx+0x18],rax
   140009602:	mov    ecx,DWORD PTR [rbx+0x8]
   140009605:	dec    rcx
   140009608:	add    rax,rcx
   14000960b:	not    rcx
   14000960e:	and    rax,rcx
   140009611:	mov    QWORD PTR [rbx+0x20],rax
   140009615:	mov    DWORD PTR [rbx],r14d
   140009618:	and    DWORD PTR [rbx+0x4],0x0
   14000961c:	xor    ebx,ebx
   14000961e:	mov    DWORD PTR [rdi+0x4],ebx
   140009621:	mov    DWORD PTR [rdi+0x8],0x40
   140009628:	mov    rcx,rdi
   14000962b:	call   0x14000ddf8
   140009630:	mov    DWORD PTR [rdi],r14d
   140009633:	lea    r14,[rsi+0x1018]
   14000963a:	mov    QWORD PTR [rsp+0x48],r14
   14000963f:	mov    QWORD PTR [r14+0x8],rsi
   140009643:	mov    QWORD PTR [r14+0x10],rbx
   140009647:	mov    DWORD PTR [r14+0x50],ebx
   14000964b:	mov    DWORD PTR [r14+0x54],ebx
   14000964f:	mov    QWORD PTR [r14+0x48],rbx
   140009653:	or     rax,0xffffffffffffffff
   140009657:	mov    DWORD PTR [r14+0x58],eax
   14000965b:	lea    rdi,[r14+0x60]
   14000965f:	mov    QWORD PTR [rsp+0x38],rdi
   140009664:	mov    eax,0x80
   140009669:	mov    DWORD PTR [rdi],eax
   14000966b:	lea    rbx,[rdi+0x10]
   14000966f:	mov    QWORD PTR [rsp+0x30],rbx
   140009674:	mov    rcx,rbx
   140009677:	call   0x14000e3d4
   14000967c:	nop
   14000967d:	mov    ecx,0x80
   140009682:	mov    DWORD PTR [rbx+0x10],ecx
   140009685:	and    DWORD PTR [rbx+0x14],0x0
   140009689:	lea    eax,[rcx-0x78]
   14000968c:	mul    rcx
   14000968f:	mov    rcx,0xffffffffffffffff
   140009696:	cmovo  rax,rcx
   14000969a:	mov    rcx,rax
   14000969d:	call   0x14002b130
   1400096a2:	mov    QWORD PTR [rbx+0x18],rax
   1400096a6:	lea    rbx,[rdi+0x30]
   1400096aa:	mov    QWORD PTR [rsp+0x30],rbx
   1400096af:	lea    rcx,[rbx+0x8]
   1400096b3:	mov    edx,0x80
   1400096b8:	call   0x140012948
   1400096bd:	nop
   1400096be:	mov    eax,0x80
   1400096c3:	mov    DWORD PTR [rbx],eax
   1400096c5:	and    DWORD PTR [rbx+0x4],0x0
   1400096c9:	and    DWORD PTR [rdi+0x4],0x0
   1400096cd:	mov    DWORD PTR [rdi+0x8],0x40
   1400096d4:	mov    rcx,rdi
   1400096d7:	call   0x140012698
   1400096dc:	mov    eax,0x80
   1400096e1:	mov    DWORD PTR [rdi],eax
   1400096e3:	lea    rbx,[r14+0xb8]
   1400096ea:	mov    QWORD PTR [rsp+0x38],rbx
   1400096ef:	mov    QWORD PTR [rsp+0x30],rbx
   1400096f4:	lea    ecx,[rax-0x18]
   1400096f7:	call   0x14002b130
   1400096fc:	mov    QWORD PTR [rbx+0x8],rax
   140009700:	add    rax,0x3f
   140009704:	xor    ecx,ecx
   140009706:	and    rax,0xffffffffffffffc0
   14000970a:	mov    QWORD PTR [rbx],rax
   14000970d:	mov    QWORD PTR [rsp+0x40],rax
   140009712:	je     0x140009725
   140009714:	mov    DWORD PTR [rax+0x18],ecx
   140009717:	mov    DWORD PTR [rax+0x1c],ecx
   14000971a:	mov    QWORD PTR [rax+0x10],rcx
   14000971e:	or     rcx,0xffffffffffffffff
   140009722:	mov    DWORD PTR [rax+0x20],ecx
   140009725:	mov    edi,0x400
   14000972a:	mov    DWORD PTR [rbx+0x14],edi
   14000972d:	mov    DWORD PTR [rbx+0x10],0x40
   140009734:	mov    DWORD PTR [rbx+0x18],0x8
   14000973b:	mov    ecx,0x2040
   140009740:	call   0x14002b130
   140009745:	mov    QWORD PTR [rbx+0x20],rax
   140009749:	mov    ecx,DWORD PTR [rbx+0x10]
   14000974c:	dec    rcx
   14000974f:	add    rax,rcx
   140009752:	not    rcx
   140009755:	and    rax,rcx
   140009758:	mov    QWORD PTR [rbx+0x28],rax
   14000975c:	mov    rax,QWORD PTR [rbx]
   14000975f:	xor    ecx,ecx
   140009761:	mov    QWORD PTR [rax],rcx
   140009764:	mov    DWORD PTR [rax+0xc],edi
   140009767:	mov    DWORD PTR [rax+0x8],0x7
   14000976e:	mov    DWORD PTR [r14+0xe8],ecx
   140009775:	mov    QWORD PTR [r14+0x18],rcx
   140009779:	mov    QWORD PTR [r14],rcx
   14000977c:	mov    QWORD PTR [r14+0x28],rcx
   140009780:	mov    QWORD PTR [r14+0x38],rcx
   140009784:	mov    QWORD PTR [r14+0x20],rcx
   140009788:	mov    QWORD PTR [r14+0x30],rcx
   14000978c:	mov    QWORD PTR [r14+0x40],rcx
   140009790:	lea    rdi,[rsi+0x1108]
   140009797:	mov    QWORD PTR [rsp+0x40],rdi
   14000979c:	lea    rax,[rip+0x344a5]        # 0x14003dc48
   1400097a3:	mov    QWORD PTR [rdi],rax
   1400097a6:	lea    rax,[rip+0x34ffb]        # 0x14003e7a8
   1400097ad:	mov    QWORD PTR [rdi],rax
   1400097b0:	mov    QWORD PTR [rdi+0x8],rsi
   1400097b4:	mov    QWORD PTR [rdi+0x10],rcx
   1400097b8:	mov    DWORD PTR [rdi+0x18],ecx
   1400097bb:	mov    QWORD PTR [rdi+0x20],rcx
   1400097bf:	mov    QWORD PTR [rdi+0x28],rcx
   1400097c3:	mov    QWORD PTR [rdi+0x50],rcx
   1400097c7:	lea    rbx,[rdi+0x58]
   1400097cb:	mov    QWORD PTR [rsp+0x48],rbx
   1400097d0:	lea    rcx,[rbx+0x8]
   1400097d4:	mov    r14d,0x400
   1400097da:	mov    edx,r14d
   1400097dd:	call   0x140015690
   1400097e2:	nop
   1400097e3:	mov    QWORD PTR [rbx],0x400
   1400097ea:	xor    r14d,r14d
   1400097ed:	or     rax,0xffffffffffffffff
   1400097f1:	mov    QWORD PTR [rdi+0x80],rax
   1400097f8:	mov    QWORD PTR [rdi+0x88],r14
   1400097ff:	mov    DWORD PTR [rdi+0x90],r14d
   140009806:	lea    rax,[rdi+0xa0]
   14000980d:	mov    QWORD PTR [rsp+0x48],rax
   140009812:	mov    QWORD PTR [rax],r14
   140009815:	mov    QWORD PTR [rax+0x8],r14
   140009819:	mov    QWORD PTR [rax+0x10],r14
   14000981d:	mov    QWORD PTR [rax+0x18],rdi
   140009821:	mov    QWORD PTR [rax+0x20],rsi
   140009825:	mov    QWORD PTR [rax+0x28],r14
   140009829:	mov    DWORD PTR [rax+0x30],r14d
   14000982d:	lea    rcx,[rdi+0x30]
   140009831:	xor    edx,edx
   140009833:	lea    r8d,[r14+0x20]
   140009837:	call   0x1400260e0
   14000983c:	xor    r9d,r9d
   14000983f:	xor    r8d,r8d
   140009842:	lea    edx,[r14+0x1]
   140009846:	xor    ecx,ecx
   140009848:	call   QWORD PTR [rip+0x2fcd2]        # 0x140039520
   14000984e:	mov    QWORD PTR [rdi+0x48],rax
   140009852:	lea    rax,[rdi+0x40]
   140009856:	mov    QWORD PTR [rdi+0x28],rax
   14000985a:	lea    rdx,[rsi+0x11e0]
   140009861:	mov    QWORD PTR [rsp+0x40],rdx
   140009866:	lea    rax,[rip+0x34cbb]        # 0x14003e528
   14000986d:	mov    QWORD PTR [rdx],rax
   140009870:	mov    QWORD PTR [rdx+0x8],rsi
   140009874:	lea    rcx,[rdx+0x10]
   140009878:	mov    QWORD PTR [rsp+0x48],rcx
   14000987d:	lea    rax,[rip+0x35944]        # 0x14003f1c8
   140009884:	mov    QWORD PTR [rcx],rax
   140009887:	mov    QWORD PTR [rcx+0x8],0x1
   14000988f:	lea    rax,[rcx+0x10]
   140009893:	mov    QWORD PTR [rsp+0x38],rax
   140009898:	lea    r9,[rip+0x343a9]        # 0x14003dc48
   14000989f:	mov    QWORD PTR [rax],r9
   1400098a2:	lea    r8,[rip+0x34187]        # 0x14003da30
   1400098a9:	mov    QWORD PTR [rax+0x8],r8
   1400098ad:	mov    QWORD PTR [rax+0x10],r14
   1400098b1:	lea    r10,[rip+0x341c0]        # 0x14003da78
   1400098b8:	mov    QWORD PTR [rax],r10
   1400098bb:	lea    r11,[rip+0x3418e]        # 0x14003da50
   1400098c2:	mov    QWORD PTR [rax+0x8],r11
   1400098c6:	mov    QWORD PTR [rax+0x18],r14
   1400098ca:	mov    QWORD PTR [rax+0x20],r14
   1400098ce:	mov    DWORD PTR [rax+0x28],r14d
   1400098d2:	mov    QWORD PTR [rax+0x30],r14
   1400098d6:	mov    BYTE PTR [rax+0x38],r14b
   1400098da:	lea    rax,[rcx+0x150]
   1400098e1:	mov    QWORD PTR [rsp+0x38],rax
   1400098e6:	mov    QWORD PTR [rax],r9
   1400098e9:	mov    QWORD PTR [rax+0x8],r8
   1400098ed:	mov    QWORD PTR [rax+0x10],r14
   1400098f1:	mov    QWORD PTR [rax],r10
   1400098f4:	mov    QWORD PTR [rax+0x8],r11
   1400098f8:	mov    QWORD PTR [rax+0x18],r14
   1400098fc:	mov    QWORD PTR [rax+0x20],r14
   140009900:	mov    DWORD PTR [rax+0x28],r14d
   140009904:	mov    QWORD PTR [rax+0x30],r14
   140009908:	mov    BYTE PTR [rax+0x38],r14b
   14000990c:	lea    rax,[rcx+0x290]
   140009913:	mov    QWORD PTR [rsp+0x38],rax
   140009918:	mov    QWORD PTR [rax],r8
   14000991b:	mov    QWORD PTR [rax+0x8],r14
   14000991f:	lea    r9,[rip+0x34f1a]        # 0x14003e840
   140009926:	mov    QWORD PTR [rax],r9
   140009929:	mov    DWORD PTR [rax+0x10],r14d
   14000992d:	lea    rax,[rcx+0x2a8]
   140009934:	mov    QWORD PTR [rsp+0x38],rax
   140009939:	mov    QWORD PTR [rax],r8
   14000993c:	mov    QWORD PTR [rax+0x8],r14
   140009940:	mov    QWORD PTR [rax],r9
   140009943:	mov    DWORD PTR [rax+0x10],r14d
   140009947:	lea    rax,[rcx+0x2c0]
   14000994e:	mov    QWORD PTR [rsp+0x38],rax
   140009953:	mov    QWORD PTR [rax],r8
   140009956:	mov    QWORD PTR [rax+0x8],r14
   14000995a:	lea    r9,[rip+0x34fa7]        # 0x14003e908
   140009961:	mov    QWORD PTR [rax],r9
   140009964:	lea    rax,[rcx+0x2d0]
   14000996b:	mov    QWORD PTR [rsp+0x38],rax
   140009970:	mov    QWORD PTR [rax],r8
   140009973:	mov    QWORD PTR [rax+0x8],r14
   140009977:	mov    QWORD PTR [rax],r9
   14000997a:	mov    QWORD PTR [rcx+0x2e0],r14
   140009981:	mov    QWORD PTR [rcx+0x2e8],r14
   140009988:	mov    DWORD PTR [rdx+0x300],r14d
   14000998f:	mov    QWORD PTR [rsi+0x14e8],r14
   140009996:	mov    QWORD PTR [rsi+0x14f0],r14
   14000999d:	mov    QWORD PTR [rsi+0x14f8],r14
   1400099a4:	mov    QWORD PTR [rsi+0x1500],r14
   1400099ab:	mov    QWORD PTR [rsi+0x1548],rsi
   1400099b2:	lea    rax,[rsi+0x1510]
   1400099b9:	lea    ecx,[r14+0x2]
   1400099bd:	mov    QWORD PTR [rax-0x8],r14
   1400099c1:	mov    DWORD PTR [rax],r14d
   1400099c4:	mov    QWORD PTR [rax+0x8],r14
   1400099c8:	mov    QWORD PTR [rax+0x10],r14
   1400099cc:	lea    rax,[rax+0x20]
   1400099d0:	dec    rcx
   1400099d3:	jne    0x1400099bd
   1400099d5:	mov    QWORD PTR [rsi+0x1550],r14
   1400099dc:	mov    rax,QWORD PTR [rsp+0x58]
   1400099e1:	mov    QWORD PTR [rsi+0x1558],rax
   1400099e8:	mov    DWORD PTR [rsi+0x1560],r14d
   1400099ef:	lea    rcx,[rsi+0x1568]
   1400099f6:	lea    rdx,[rip+0x349b3]        # 0x14003e3b0
   1400099fd:	call   0x140018354
   140009a02:	nop
   140009a03:	lea    rcx,[rsi+0x17d8]
   140009a0a:	lea    rdx,[rip+0x349a7]        # 0x14003e3b8
   140009a11:	call   0x140018354
   140009a16:	nop
   140009a17:	lea    rcx,[rsi+0x1a48]
   140009a1e:	lea    rdx,[rip+0x349a3]        # 0x14003e3c8
   140009a25:	call   0x140018354
   140009a2a:	nop
   140009a2b:	lea    rcx,[rsi+0x1cb8]
   140009a32:	lea    rdx,[rip+0x3499f]        # 0x14003e3d8
   140009a39:	call   0x140018354
   140009a3e:	nop
   140009a3f:	mov    QWORD PTR [rsi+0x1f28],r14
   140009a46:	lea    rax,[rsi+0x2138]
   140009a4d:	mov    QWORD PTR [rsp+0x40],rax
   140009a52:	lea    rcx,[rip+0x34107]        # 0x14003db60
   140009a59:	mov    QWORD PTR [rax],rcx
   140009a5c:	lea    rcx,[rip+0x3492d]        # 0x14003e390
   140009a63:	mov    QWORD PTR [rax],rcx
   140009a66:	mov    QWORD PTR [rax+0x8],rsi
   140009a6a:	mov    QWORD PTR [rsi+0x2148],r14
   140009a71:	mov    QWORD PTR [rsi+0x2150],r14
   140009a78:	mov    DWORD PTR [rsi+0x2158],r14d
   140009a7f:	mov    QWORD PTR [rsi+0x2178],r14
   140009a86:	mov    QWORD PTR [rsi+0x2180],r14
   140009a8d:	mov    QWORD PTR [rsi+0x2188],r14
   140009a94:	mov    QWORD PTR [rsi+0x2190],r14
   140009a9b:	mov    QWORD PTR [rsi+0x2198],r14
   140009aa2:	mov    QWORD PTR [rsi+0x21a0],r14
   140009aa9:	mov    QWORD PTR [rsi+0x21a8],r14
   140009ab0:	mov    QWORD PTR [rsi+0x21b0],r14
   140009ab7:	mov    DWORD PTR [rsi+0x21b8],r14d
   140009abe:	mov    QWORD PTR [rsi+0x21c0],r14
   140009ac5:	mov    QWORD PTR [rsi+0x21c8],r14
   140009acc:	mov    QWORD PTR [rsi+0x21d0],r14
   140009ad3:	mov    QWORD PTR [rsi+0x21d8],r14
   140009ada:	mov    QWORD PTR [rsi+0x21e0],r14
   140009ae1:	mov    DWORD PTR [rsi+0x21e8],r14d
   140009ae8:	mov    QWORD PTR [rsi+0x21f0],r14
   140009aef:	mov    QWORD PTR [rsi+0x21f8],r14
   140009af6:	mov    QWORD PTR [rsi+0x2200],r14
   140009afd:	mov    QWORD PTR [rsi+0x2208],r14
   140009b04:	mov    QWORD PTR [rsi+0x2210],r14
   140009b0b:	lea    rcx,[rsi+0x2218]
   140009b12:	mov    QWORD PTR [rsp+0x40],rcx
   140009b17:	mov    QWORD PTR [rcx],rsi
   140009b1a:	mov    QWORD PTR [rcx+0x8],r14
   140009b1e:	mov    QWORD PTR [rcx+0x10],r14
   140009b22:	mov    WORD PTR [rcx+0x28],r14w
   140009b27:	mov    QWORD PTR [rcx+0x30],r14
   140009b2b:	mov    QWORD PTR [rcx+0x38],r14
   140009b2f:	mov    QWORD PTR [rcx+0x40],r14
   140009b33:	mov    DWORD PTR [rcx+0x48],r14d
   140009b37:	mov    QWORD PTR [rcx+0x50],r14
   140009b3b:	add    rcx,0x18
   140009b3f:	call   QWORD PTR [rip+0x2fb13]        # 0x140039658
   140009b45:	nop
   140009b46:	lea    rbx,[rsi+0x2270]
   140009b4d:	mov    QWORD PTR [rsp+0x40],rbx
   140009b52:	lea    rax,[rip+0x3519f]        # 0x14003ecf8
   140009b59:	mov    QWORD PTR [rbx],rax
   140009b5c:	lea    rcx,[rbx+0x8]
   140009b60:	mov    QWORD PTR [rcx],r14
   140009b63:	mov    QWORD PTR [rcx+0x8],r14
   140009b67:	mov    DWORD PTR [rcx+0x10],0x11
   140009b6e:	mov    eax,0xffffffff
   140009b73:	mov    QWORD PTR [rcx+0x20],rax
   140009b77:	mov    QWORD PTR [rcx+0x28],r14
   140009b7b:	mov    DWORD PTR [rcx+0x30],r14d
   140009b7f:	mov    DWORD PTR [rcx+0x34],0xa
   140009b86:	mov    QWORD PTR [rcx+0x38],r14
   140009b8a:	mov    QWORD PTR [rcx+0x40],r14
   140009b8e:	mov    DWORD PTR [rcx+0x14],0x3f400000
   140009b95:	mov    r14d,0x3e800000
   140009b9b:	mov    DWORD PTR [rcx+0x18],r14d
   140009b9f:	mov    edi,0x40100000
   140009ba4:	mov    DWORD PTR [rcx+0x1c],edi
   140009ba7:	call   0x14001bf94
   140009bac:	nop
   140009bad:	lea    rcx,[rbx+0x50]
   140009bb1:	xor    ebx,ebx
   140009bb3:	mov    QWORD PTR [rcx],rbx
   140009bb6:	mov    QWORD PTR [rcx+0x8],rbx
   140009bba:	mov    DWORD PTR [rcx+0x10],0x11
   140009bc1:	mov    eax,0xffffffff
   140009bc6:	mov    QWORD PTR [rcx+0x20],rax
   140009bca:	mov    QWORD PTR [rcx+0x28],rbx
   140009bce:	mov    DWORD PTR [rcx+0x30],ebx
   140009bd1:	mov    DWORD PTR [rcx+0x34],0xa
   140009bd8:	mov    QWORD PTR [rcx+0x38],rbx
   140009bdc:	mov    QWORD PTR [rcx+0x40],rbx
   140009be0:	mov    DWORD PTR [rcx+0x14],0x3f400000
   140009be7:	mov    DWORD PTR [rcx+0x18],r14d
   140009beb:	mov    DWORD PTR [rcx+0x1c],edi
   140009bee:	call   0x14001bf94
   140009bf3:	nop
   140009bf4:	mov    WORD PTR [rsi+0x1f30],bx
   140009bfb:	lea    rcx,[rsi+0x118]
   140009c02:	mov    rdx,QWORD PTR [rsi+0x1558]
   140009c09:	call   0x14001d72c
   140009c0e:	lea    edi,[rbx+0x1]
   140009c11:	mov    r9d,edi
   140009c14:	mov    rdx,QWORD PTR [rip+0x472b5]        # 0x140050ed0
   140009c1b:	lea    rcx,[rsi+0x58]
   140009c1f:	call   0x140016348
   140009c24:	test   eax,eax
   140009c26:	jne    0x140009c53
   140009c28:	call   QWORD PTR [rip+0x2f9b2]        # 0x1400395e0
   140009c2e:	mov    edx,eax
   140009c30:	mov    r8,QWORD PTR [rip+0x47299]        # 0x140050ed0
   140009c37:	lea    rcx,[rsp+0x70]
   140009c3c:	call   0x140002e28
   140009c41:	lea    rdx,[rip+0x40cf0]        # 0x14004a938
   140009c48:	lea    rcx,[rsp+0x70]
   140009c4d:	call   0x1400265e8
   140009c52:	int3   
   140009c53:	mov    r9d,edi
   140009c56:	mov    rdx,QWORD PTR [rip+0x4724b]        # 0x140050ea8
   140009c5d:	mov    rcx,r15
   140009c60:	call   0x140016348
   140009c65:	test   eax,eax
   140009c67:	jne    0x140009c98
   140009c69:	call   QWORD PTR [rip+0x2f971]        # 0x1400395e0
   140009c6f:	mov    edx,eax
   140009c71:	mov    r8,QWORD PTR [rip+0x47230]        # 0x140050ea8
   140009c78:	lea    rcx,[rbp+0xa10]
   140009c7f:	call   0x140002e28
   140009c84:	lea    rdx,[rip+0x40cad]        # 0x14004a938
   140009c8b:	lea    rcx,[rbp+0xa10]
   140009c92:	call   0x1400265e8
   140009c97:	int3   
   140009c98:	mov    r9d,edi
   140009c9b:	mov    rdx,QWORD PTR [rip+0x4721e]        # 0x140050ec0
   140009ca2:	mov    rcx,r12
   140009ca5:	call   0x140016348
   140009caa:	test   eax,eax
   140009cac:	jne    0x140009cdd
   140009cae:	call   QWORD PTR [rip+0x2f92c]        # 0x1400395e0
   140009cb4:	mov    edx,eax
   140009cb6:	mov    r8,QWORD PTR [rip+0x47203]        # 0x140050ec0
   140009cbd:	lea    rcx,[rbp+0x5d0]
   140009cc4:	call   0x140002e28
   140009cc9:	lea    rdx,[rip+0x40c68]        # 0x14004a938
   140009cd0:	lea    rcx,[rbp+0x5d0]
   140009cd7:	call   0x1400265e8
   140009cdc:	int3   
   140009cdd:	mov    r9d,edi
   140009ce0:	mov    rdx,QWORD PTR [rip+0x471e1]        # 0x140050ec8
   140009ce7:	mov    rcx,r13
   140009cea:	call   0x140016348
   140009cef:	test   eax,eax
   140009cf1:	jne    0x140009d22
   140009cf3:	call   QWORD PTR [rip+0x2f8e7]        # 0x1400395e0
   140009cf9:	mov    edx,eax
   140009cfb:	mov    r8,QWORD PTR [rip+0x471c6]        # 0x140050ec8
   140009d02:	lea    rcx,[rbp+0x190]
   140009d09:	call   0x140002e28
   140009d0e:	lea    rdx,[rip+0x40c23]        # 0x14004a938
   140009d15:	lea    rcx,[rbp+0x190]
   140009d1c:	call   0x1400265e8
   140009d21:	int3   
   140009d22:	xor    r9d,r9d
   140009d25:	mov    rdx,QWORD PTR [rip+0x47214]        # 0x140050f40
   140009d2c:	lea    rcx,[rsi+0xb8]
   140009d33:	call   0x140016348
   140009d38:	test   eax,eax
   140009d3a:	jne    0x140009d6b
   140009d3c:	call   QWORD PTR [rip+0x2f89e]        # 0x1400395e0
   140009d42:	mov    edx,eax
   140009d44:	mov    r8,QWORD PTR [rip+0x471f5]        # 0x140050f40
   140009d4b:	lea    rcx,[rbp+0x3b0]
   140009d52:	call   0x140002e28
   140009d57:	lea    rdx,[rip+0x40bda]        # 0x14004a938
   140009d5e:	lea    rcx,[rbp+0x3b0]
   140009d65:	call   0x1400265e8
   140009d6a:	int3   
   140009d6b:	mov    r9d,edi
   140009d6e:	mov    rdx,QWORD PTR [rip+0x471d3]        # 0x140050f48
   140009d75:	lea    rcx,[rsi+0xd0]
   140009d7c:	call   0x140016348
   140009d81:	test   eax,eax
   140009d83:	jne    0x140009db4
   140009d85:	call   QWORD PTR [rip+0x2f855]        # 0x1400395e0
   140009d8b:	mov    edx,eax
   140009d8d:	mov    r8,QWORD PTR [rip+0x471ac]        # 0x140050f40
   140009d94:	lea    rcx,[rbp+0x7f0]
   140009d9b:	call   0x140002e28
   140009da0:	lea    rdx,[rip+0x40b91]        # 0x14004a938
   140009da7:	lea    rcx,[rbp+0x7f0]
   140009dae:	call   0x1400265e8
   140009db3:	int3   
   140009db4:	mov    r8,QWORD PTR [rip+0x470e5]        # 0x140050ea0
   140009dbb:	xor    edx,edx
   140009dbd:	mov    edi,0x60000
   140009dc2:	mov    ecx,edi
   140009dc4:	call   QWORD PTR [rip+0x2f396]        # 0x140039160
   140009dca:	mov    QWORD PTR [rsi+0xf0],rax
   140009dd1:	test   rax,rax
   140009dd4:	jne    0x140009e05
   140009dd6:	call   QWORD PTR [rip+0x2f804]        # 0x1400395e0
   140009ddc:	mov    edx,eax
   140009dde:	mov    r8,QWORD PTR [rip+0x470bb]        # 0x140050ea0
   140009de5:	lea    rcx,[rbp+0xc30]
   140009dec:	call   0x140002e28
   140009df1:	lea    rdx,[rip+0x40b40]        # 0x14004a938
   140009df8:	lea    rcx,[rbp+0xc30]
   140009dff:	call   0x1400265e8
   140009e04:	int3   
   140009e05:	call   QWORD PTR [rip+0x2f505]        # 0x140039310
   140009e0b:	mov    rcx,rax
   140009e0e:	lea    r8,[rsp+0x50]
   140009e13:	mov    edx,edi
   140009e15:	call   QWORD PTR [rip+0x2f2bd]        # 0x1400390d8
   140009e1b:	test   eax,eax
   140009e1d:	je     0x140009e55
   140009e1f:	mov    ecx,0x10
   140009e24:	call   0x140021a98
   140009e29:	mov    rcx,rax
   140009e2c:	mov    QWORD PTR [rsp+0x40],rax
   140009e31:	test   rax,rax
   140009e34:	je     0x140009e4b
   140009e36:	mov    rax,QWORD PTR [rsp+0x50]
   140009e3b:	lea    rdx,[rip+0x33bee]        # 0x14003da30
   140009e42:	mov    QWORD PTR [rcx],rdx
   140009e45:	mov    QWORD PTR [rcx+0x8],rax
   140009e49:	jmp    0x140009e4e
   140009e4b:	mov    rcx,rbx
   140009e4e:	mov    QWORD PTR [rsi+0x108],rcx
   140009e55:	mov    rax,rsi
   140009e58:	mov    rcx,QWORD PTR [rbp+0xe50]
   140009e5f:	xor    rcx,rsp
   140009e62:	call   0x140020e50
   140009e67:	lea    r11,[rsp+0xf60]
   140009e6f:	mov    rbx,QWORD PTR [r11+0x38]
   140009e73:	mov    rsi,QWORD PTR [r11+0x40]
   140009e77:	mov    rdi,QWORD PTR [r11+0x48]
   140009e7b:	mov    rsp,r11
   140009e7e:	pop    r15
   140009e80:	pop    r14
   140009e82:	pop    r13
   140009e84:	pop    r12
   140009e86:	pop    rbp
   140009e87:	ret    
   140009e88:	mov    QWORD PTR [rsp+0x8],rbx
   140009e8d:	push   rdi
   140009e8e:	sub    rsp,0x20
   140009e92:	mov    ebx,edx
   140009e94:	mov    rdi,rcx
   140009e97:	call   0x140009eb8
   140009e9c:	test   bl,0x1
   140009e9f:	je     0x140009ea9
   140009ea1:	mov    rcx,rdi
   140009ea4:	call   0x140020e30
   140009ea9:	mov    rax,rdi
   140009eac:	mov    rbx,QWORD PTR [rsp+0x30]
   140009eb1:	add    rsp,0x20
   140009eb5:	pop    rdi
   140009eb6:	ret    
   140009eb7:	int3   
   140009eb8:	mov    QWORD PTR [rsp+0x8],rcx
   140009ebd:	push   rbp
   140009ebe:	push   rsi
   140009ebf:	push   rdi
   140009ec0:	sub    rsp,0x30
   140009ec4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009ecd:	mov    QWORD PTR [rsp+0x60],rbx
   140009ed2:	mov    rbx,rcx
   140009ed5:	lea    rax,[rip+0x34484]        # 0x14003e360
   140009edc:	mov    QWORD PTR [rcx],rax
   140009edf:	mov    rcx,QWORD PTR [rcx+0x1f28]
   140009ee6:	xor    ebp,ebp
   140009ee8:	test   rcx,rcx
   140009eeb:	je     0x140009efa
   140009eed:	call   QWORD PTR [rip+0x2f6cd]        # 0x1400395c0
   140009ef3:	mov    QWORD PTR [rbx+0x1f28],rbp
   140009efa:	mov    QWORD PTR [rbx+0x1550],rbp
   140009f01:	mov    QWORD PTR [rbx+0x1558],rbp
   140009f08:	mov    edi,ebp
   140009f0a:	mov    rsi,rbp
   140009f0d:	cmp    DWORD PTR [rbx+0x2210],ebp
   140009f13:	jle    0x140009f57
   140009f15:	test   rsi,rsi
   140009f18:	js     0x140009f41
   140009f1a:	cmp    edi,DWORD PTR [rbx+0x2210]
   140009f20:	jge    0x140009f41
   140009f22:	mov    rcx,QWORD PTR [rbx+0x2208]
   140009f29:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140009f2d:	call   0x140020e30
   140009f32:	inc    edi
   140009f34:	inc    rsi
   140009f37:	cmp    edi,DWORD PTR [rbx+0x2210]
   140009f3d:	jl     0x140009f15
   140009f3f:	jmp    0x140009f57
   140009f41:	xor    r9d,r9d
   140009f44:	xor    r8d,r8d
   140009f47:	lea    edx,[r9+0x1]
   140009f4b:	mov    ecx,0xc000008c
   140009f50:	call   QWORD PTR [rip+0x2f372]        # 0x1400392c8
   140009f56:	int3   
   140009f57:	mov    rdi,QWORD PTR [rbx+0x2150]
   140009f5e:	mov    QWORD PTR [rsp+0x58],rdi
   140009f63:	test   rdi,rdi
   140009f66:	je     0x140009f79
   140009f68:	lea    rcx,[rdi+0x8]
   140009f6c:	call   0x14001769c
   140009f71:	mov    rcx,rdi
   140009f74:	call   0x140020e30
   140009f79:	mov    rcx,QWORD PTR [rbx+0x108]
   140009f80:	test   rcx,rcx
   140009f83:	je     0x140009f8f
   140009f85:	mov    rcx,QWORD PTR [rcx+0x8]
   140009f89:	call   QWORD PTR [rip+0x2f631]        # 0x1400395c0
   140009f8f:	mov    rcx,QWORD PTR [rbx+0x108]
   140009f96:	test   rcx,rcx
   140009f99:	je     0x140009fa7
   140009f9b:	mov    rax,QWORD PTR [rcx]
   140009f9e:	mov    edx,0x1
   140009fa3:	call   QWORD PTR [rax+0x10]
   140009fa6:	nop
   140009fa7:	lea    rcx,[rbx+0x2270]
   140009fae:	call   0x14001ab20
   140009fb3:	nop
   140009fb4:	lea    rcx,[rbx+0x2218]
   140009fbb:	call   0x140013744
   140009fc0:	nop
   140009fc1:	mov    rcx,QWORD PTR [rbx+0x2208]
   140009fc8:	test   rcx,rcx
   140009fcb:	je     0x140009fd9
   140009fcd:	call   0x140023328
   140009fd2:	mov    QWORD PTR [rbx+0x2208],rbp
   140009fd9:	mov    QWORD PTR [rbx+0x2210],rbp
   140009fe0:	lea    rcx,[rbx+0x21f0]
   140009fe7:	call   0x140003370
   140009fec:	nop
   140009fed:	cmp    DWORD PTR [rbx+0x21b8],ebp
   140009ff3:	je     0x14000a002
   140009ff5:	mov    rcx,QWORD PTR [rbx+0x21c0]
   140009ffc:	call   QWORD PTR [rip+0x2f696]        # 0x140039698
   14000a002:	mov    rcx,QWORD PTR [rbx+0x21d8]
   14000a009:	call   0x14002b138
   14000a00e:	mov    rcx,QWORD PTR [rbx+0x21e0]
   14000a015:	call   0x14002b138
   14000a01a:	nop
   14000a01b:	lea    rcx,[rbx+0x21a8]
   14000a022:	call   0x1400090dc
   14000a027:	nop
   14000a028:	lea    rcx,[rbx+0x2198]
   14000a02f:	call   0x1400090dc
   14000a034:	nop
   14000a035:	mov    rcx,QWORD PTR [rbx+0x2188]
   14000a03c:	test   rcx,rcx
   14000a03f:	je     0x14000a04d
   14000a041:	call   0x140023328
   14000a046:	mov    QWORD PTR [rbx+0x2188],rbp
   14000a04d:	mov    QWORD PTR [rbx+0x2190],rbp
   14000a054:	mov    rcx,QWORD PTR [rbx+0x2178]
   14000a05b:	test   rcx,rcx
   14000a05e:	je     0x14000a06c
   14000a060:	call   0x140023328
   14000a065:	mov    QWORD PTR [rbx+0x2178],rbp
   14000a06c:	mov    QWORD PTR [rbx+0x2180],rbp
   14000a073:	lea    rax,[rbx+0x2138]
   14000a07a:	mov    QWORD PTR [rsp+0x58],rax
   14000a07f:	lea    rcx,[rip+0x33ada]        # 0x14003db60
   14000a086:	mov    QWORD PTR [rax],rcx
   14000a089:	lea    rcx,[rbx+0x1cb8]
   14000a090:	call   0x14001875c
   14000a095:	nop
   14000a096:	lea    rcx,[rbx+0x1a48]
   14000a09d:	call   0x14001875c
   14000a0a2:	nop
   14000a0a3:	lea    rcx,[rbx+0x17d8]
   14000a0aa:	call   0x14001875c
   14000a0af:	nop
   14000a0b0:	lea    rcx,[rbx+0x1568]
   14000a0b7:	call   0x14001875c
   14000a0bc:	nop
   14000a0bd:	mov    rcx,QWORD PTR [rbx+0x14e8]
   14000a0c4:	test   rcx,rcx
   14000a0c7:	je     0x14000a0cf
   14000a0c9:	call   QWORD PTR [rip+0x2f4f1]        # 0x1400395c0
   14000a0cf:	mov    rcx,QWORD PTR [rbx+0x14f0]
   14000a0d6:	test   rcx,rcx
   14000a0d9:	je     0x14000a0e1
   14000a0db:	call   QWORD PTR [rip+0x2f4df]        # 0x1400395c0
   14000a0e1:	mov    rcx,QWORD PTR [rbx+0x14f8]
   14000a0e8:	test   rcx,rcx
   14000a0eb:	je     0x14000a0f4
   14000a0ed:	call   QWORD PTR [rip+0x2f4cd]        # 0x1400395c0
   14000a0f3:	nop
   14000a0f4:	lea    rcx,[rbx+0x11e0]
   14000a0fb:	call   0x14000fa78
   14000a100:	nop
   14000a101:	lea    rcx,[rbx+0x1108]
   14000a108:	call   0x14001448c
   14000a10d:	nop
   14000a10e:	lea    rcx,[rbx+0x1018]
   14000a115:	call   0x140011020
   14000a11a:	nop
   14000a11b:	lea    rcx,[rbx+0xf78]
   14000a122:	call   0x14000cb64
   14000a127:	nop
   14000a128:	lea    rcx,[rbx+0x2a0]
   14000a12f:	call   0x14000ecc0
   14000a134:	nop
   14000a135:	lea    rcx,[rbx+0x110]
   14000a13c:	call   0x1400157a8
   14000a141:	nop
   14000a142:	lea    rax,[rip+0x338e7]        # 0x14003da30
   14000a149:	mov    QWORD PTR [rbx+0xf8],rax
   14000a150:	lea    rcx,[rbx+0xe8]
   14000a157:	call   0x1400179a8
   14000a15c:	nop
   14000a15d:	lea    rcx,[rbx+0xd0]
   14000a164:	call   0x1400162f8
   14000a169:	nop
   14000a16a:	lea    rcx,[rbx+0xb8]
   14000a171:	call   0x1400162f8
   14000a176:	nop
   14000a177:	lea    rcx,[rbx+0xa0]
   14000a17e:	call   0x1400162f8
   14000a183:	nop
   14000a184:	lea    rcx,[rbx+0x88]
   14000a18b:	call   0x1400162f8
   14000a190:	nop
   14000a191:	lea    rcx,[rbx+0x70]
   14000a195:	call   0x1400162f8
   14000a19a:	nop
   14000a19b:	lea    rcx,[rbx+0x58]
   14000a19f:	call   0x1400162f8
   14000a1a4:	nop
   14000a1a5:	mov    rax,QWORD PTR [rbx+0x40]
   14000a1a9:	test   rax,rax
   14000a1ac:	je     0x14000a1b8
   14000a1ae:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a1b2:	call   QWORD PTR [rip+0x2f408]        # 0x1400395c0
   14000a1b8:	mov    QWORD PTR [rbx+0x40],rbp
   14000a1bc:	lea    rcx,[rbx+0x8]
   14000a1c0:	call   0x14001ce18
   14000a1c5:	nop
   14000a1c6:	lea    rax,[rip+0x3391b]        # 0x14003dae8
   14000a1cd:	mov    QWORD PTR [rbx],rax
   14000a1d0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a1d5:	add    rsp,0x30
   14000a1d9:	pop    rdi
   14000a1da:	pop    rsi
   14000a1db:	pop    rbp
   14000a1dc:	ret    
   14000a1dd:	int3   
   14000a1de:	int3   
   14000a1df:	int3   
   14000a1e0:	mov    rax,rsp
   14000a1e3:	push   rbp
   14000a1e4:	push   rdi
   14000a1e5:	push   r13
   14000a1e7:	push   r14
   14000a1e9:	push   r15
   14000a1eb:	mov    rbp,rsp
   14000a1ee:	sub    rsp,0x80
   14000a1f5:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   14000a1fd:	mov    QWORD PTR [rax+0x18],rbx
   14000a201:	mov    QWORD PTR [rax+0x20],rsi
   14000a205:	mov    rax,QWORD PTR [rip+0x4323c]        # 0x14004d448
   14000a20c:	xor    rax,rsp
   14000a20f:	mov    QWORD PTR [rbp-0x10],rax
   14000a213:	mov    rsi,rdx
   14000a216:	mov    rbx,rcx
   14000a219:	mov    rax,QWORD PTR [rdx]
   14000a21c:	mov    rcx,rdx
   14000a21f:	call   QWORD PTR [rax+0x70]
   14000a222:	mov    r14d,eax
   14000a225:	xor    r15d,r15d
   14000a228:	test   eax,eax
   14000a22a:	je     0x14000a2aa
   14000a22c:	mov    rdx,QWORD PTR [rsi]
   14000a22f:	mov    rcx,rsi
   14000a232:	call   QWORD PTR [rdx+0x80]
   14000a238:	mov    DWORD PTR [rbx+0x21e8],eax
   14000a23e:	lea    r8,[rbx+0x21c0]
   14000a245:	xor    edx,edx
   14000a247:	xor    ecx,ecx
   14000a249:	call   QWORD PTR [rip+0x2f439]        # 0x140039688
   14000a24f:	mov    edi,eax
   14000a251:	test   eax,eax
   14000a253:	jne    0x14000a261
   14000a255:	mov    DWORD PTR [rbx+0x21b8],0x1
   14000a25f:	jmp    0x14000a299
   14000a261:	mov    ecx,eax
   14000a263:	call   0x140004908
   14000a268:	mov    rcx,QWORD PTR [rbx+0x1558]
   14000a26f:	mov    QWORD PTR [rbp-0x60],rax
   14000a273:	mov    rax,QWORD PTR [rcx]
   14000a276:	lea    r9,[rbp-0x60]
   14000a27a:	mov    edx,0xe12305de
   14000a27f:	mov    r8d,0x1
   14000a285:	call   QWORD PTR [rax]
   14000a287:	movzx  eax,di
   14000a28a:	or     eax,0x80070000
   14000a28f:	test   edi,edi
   14000a291:	cmovle eax,edi
   14000a294:	jmp    0x14000a389
   14000a299:	mov    rax,QWORD PTR [rbx+0x270]
   14000a2a0:	mov    DWORD PTR [rax+0x344],0x1
   14000a2aa:	mov    edi,r15d
   14000a2ad:	test   r14d,r14d
   14000a2b0:	je     0x14000a387
   14000a2b6:	mov    r13d,0x7
   14000a2bc:	mov    rax,QWORD PTR [rsi]
   14000a2bf:	mov    edx,edi
   14000a2c1:	mov    rcx,rsi
   14000a2c4:	call   QWORD PTR [rax+0x78]
   14000a2c7:	mov    QWORD PTR [rbp-0x40],r15
   14000a2cb:	mov    QWORD PTR [rbp-0x38],r15
   14000a2cf:	mov    QWORD PTR [rbp-0x38],r13
   14000a2d3:	mov    QWORD PTR [rbp-0x40],r15
   14000a2d7:	mov    WORD PTR [rbp-0x50],r15w
   14000a2dc:	mov    rdx,rax
   14000a2df:	lea    rcx,[rbp-0x50]
   14000a2e3:	call   0x1400034e4
   14000a2e8:	nop
   14000a2e9:	cmp    QWORD PTR [rbp-0x40],r15
   14000a2ed:	jbe    0x14000a348
   14000a2ef:	lea    rax,[rbp-0x50]
   14000a2f3:	cmp    QWORD PTR [rbp-0x38],0x8
   14000a2f8:	cmovae rax,QWORD PTR [rbp-0x50]
   14000a2fd:	cmp    WORD PTR [rax],0x21
   14000a301:	jne    0x14000a348
   14000a303:	or     r9,0xffffffffffffffff
   14000a307:	lea    r8d,[r9+0x2]
   14000a30b:	lea    rdx,[rbp-0x30]
   14000a30f:	lea    rcx,[rbp-0x50]
   14000a313:	call   0x14000776c
   14000a318:	nop
   14000a319:	lea    rcx,[rbx+0x21f0]
   14000a320:	mov    rdx,rax
   14000a323:	call   0x1400067fc
   14000a328:	nop
   14000a329:	cmp    QWORD PTR [rbp-0x18],0x8
   14000a32e:	jb     0x14000a339
   14000a330:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a334:	call   0x140020e30
   14000a339:	mov    QWORD PTR [rbp-0x18],r13
   14000a33d:	mov    QWORD PTR [rbp-0x20],r15
   14000a341:	mov    WORD PTR [rbp-0x30],r15w
   14000a346:	jmp    0x14000a35f
   14000a348:	lea    rdx,[rbp-0x50]
   14000a34c:	cmp    QWORD PTR [rbp-0x38],0x8
   14000a351:	cmovae rdx,QWORD PTR [rbp-0x50]
   14000a356:	mov    rcx,rbx
   14000a359:	call   0x14000c194
   14000a35e:	nop
   14000a35f:	cmp    QWORD PTR [rbp-0x38],0x8
   14000a364:	jb     0x14000a36f
   14000a366:	mov    rcx,QWORD PTR [rbp-0x50]
   14000a36a:	call   0x140020e30
   14000a36f:	mov    WORD PTR [rbp-0x50],r15w
   14000a374:	mov    QWORD PTR [rbp-0x40],r15
   14000a378:	mov    QWORD PTR [rbp-0x38],r13
   14000a37c:	inc    edi
   14000a37e:	cmp    edi,r14d
   14000a381:	jb     0x14000a2bc
   14000a387:	xor    eax,eax
   14000a389:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a38d:	xor    rcx,rsp
   14000a390:	call   0x140020e50
   14000a395:	lea    r11,[rsp+0x80]
   14000a39d:	mov    rbx,QWORD PTR [r11+0x40]
   14000a3a1:	mov    rsi,QWORD PTR [r11+0x48]
   14000a3a5:	mov    rsp,r11
   14000a3a8:	pop    r15
   14000a3aa:	pop    r14
   14000a3ac:	pop    r13
   14000a3ae:	pop    rdi
   14000a3af:	pop    rbp
   14000a3b0:	ret    
   14000a3b1:	int3   
   14000a3b2:	int3   
   14000a3b3:	int3   
   14000a3b4:	mov    rdx,QWORD PTR [rcx+0x8]
   14000a3b8:	mov    rcx,QWORD PTR [rcx]
   14000a3bb:	jmp    0x14000a1e0
   14000a3c0:	mov    rax,rsp
   14000a3c3:	push   rdi
   14000a3c4:	push   r12
   14000a3c6:	push   r13
   14000a3c8:	push   r14
   14000a3ca:	push   r15
   14000a3cc:	sub    rsp,0xd80
   14000a3d3:	mov    QWORD PTR [rax-0xc78],0xfffffffffffffffe
   14000a3de:	mov    QWORD PTR [rax+0x18],rbx
   14000a3e2:	mov    QWORD PTR [rax+0x20],rsi
   14000a3e6:	mov    rax,QWORD PTR [rip+0x4305b]        # 0x14004d448
   14000a3ed:	xor    rax,rsp
   14000a3f0:	mov    QWORD PTR [rsp+0xd70],rax
   14000a3f8:	mov    rbx,rdx
   14000a3fb:	mov    rdi,rcx
   14000a3fe:	mov    QWORD PTR [rsp+0x80],rcx
   14000a406:	mov    rax,QWORD PTR [rdx]
   14000a409:	mov    rcx,rdx
   14000a40c:	call   QWORD PTR [rax+0x18]
   14000a40f:	xor    r13d,r13d
   14000a412:	test   al,al
   14000a414:	je     0x14000a422
   14000a416:	mov    DWORD PTR [rdi+0x2148],0x4
   14000a420:	jmp    0x14000a451
   14000a422:	mov    rax,QWORD PTR [rbx]
   14000a425:	mov    rcx,rbx
   14000a428:	call   QWORD PTR [rax+0x30]
   14000a42b:	test   al,al
   14000a42d:	je     0x14000a43b
   14000a42f:	mov    DWORD PTR [rdi+0x2148],0x8
   14000a439:	jmp    0x14000a451
   14000a43b:	mov    rax,QWORD PTR [rbx]
   14000a43e:	mov    rcx,rbx
   14000a441:	call   QWORD PTR [rax+0x20]
   14000a444:	neg    al
   14000a446:	sbb    ecx,ecx
   14000a448:	add    ecx,0x2
   14000a44b:	mov    DWORD PTR [rdi+0x2148],ecx
   14000a451:	mov    rax,QWORD PTR [rbx]
   14000a454:	mov    rcx,rbx
   14000a457:	call   QWORD PTR [rax+0x38]
   14000a45a:	mov    r14d,0x1
   14000a460:	test   al,al
   14000a462:	je     0x14000a46b
   14000a464:	mov    DWORD PTR [rdi+0x214c],r14d
   14000a46b:	mov    rax,QWORD PTR [rbx]
   14000a46e:	mov    rcx,rbx
   14000a471:	call   QWORD PTR [rax+0x28]
   14000a474:	test   al,al
   14000a476:	je     0x14000a70e
   14000a47c:	call   0x14000827c
   14000a481:	test   eax,eax
   14000a483:	jne    0x14000a70e
   14000a489:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000a490:	mov    QWORD PTR [rsp+0x138],rcx
   14000a498:	call   0x14001885c
   14000a49d:	mov    r13,rax
   14000a4a0:	mov    QWORD PTR [rsp+0xf8],rax
   14000a4a8:	lea    rcx,[rip+0x43fb1]        # 0x14004e460
   14000a4af:	mov    rdx,QWORD PTR [rip+0x43faa]        # 0x14004e460
   14000a4b6:	call   QWORD PTR [rdx+0x18]
   14000a4b9:	mov    QWORD PTR [rsp+0x128],rax
   14000a4c1:	lea    rcx,[rax+0x18]
   14000a4c5:	mov    QWORD PTR [rsp+0x68],rcx
   14000a4ca:	lea    rdx,[rdi+0x2160]
   14000a4d1:	mov    r9,r13
   14000a4d4:	lea    r8,[rsp+0x68]
   14000a4d9:	lea    rcx,[rip+0x33f08]        # 0x14003e3e8
   14000a4e0:	call   0x140018054
   14000a4e5:	and    DWORD PTR [rdi+0x2164],0xfffffffd
   14000a4ec:	xor    r12d,r12d
   14000a4ef:	mov    DWORD PTR [rsp+0x88],r12d
   14000a4f7:	mov    rax,QWORD PTR [rbx]
   14000a4fa:	mov    rcx,rbx
   14000a4fd:	call   QWORD PTR [rax+0x40]
   14000a500:	cmp    r12d,eax
   14000a503:	jae    0x14000a6cb
   14000a509:	mov    rax,QWORD PTR [rbx]
   14000a50c:	mov    edx,r12d
   14000a50f:	mov    rcx,rbx
   14000a512:	call   QWORD PTR [rax+0x48]
   14000a515:	mov    rcx,rax
   14000a518:	mov    r9,r13
   14000a51b:	lea    r8,[rsp+0x68]
   14000a520:	lea    rdx,[rsp+0xb8]
   14000a528:	call   0x140018054
   14000a52d:	lea    rsi,[rdi+0x2178]
   14000a534:	mov    QWORD PTR [rsp+0x100],rsi
   14000a53c:	mov    r15d,DWORD PTR [rsi+0x8]
   14000a540:	movsxd rdx,DWORD PTR [rsi+0xc]
   14000a544:	cmp    r15d,edx
   14000a547:	jne    0x14000a5be
   14000a549:	mov    r9,QWORD PTR [rsi]
   14000a54c:	lea    rax,[rsp+0xb8]
   14000a554:	cmp    rax,r9
   14000a557:	jb     0x14000a578
   14000a559:	lea    rcx,[rdx+rdx*2]
   14000a55d:	lea    rax,[r9+rcx*8]
   14000a561:	lea    rcx,[rsp+0xb8]
   14000a569:	cmp    rcx,rax
   14000a56c:	jae    0x14000a578
   14000a56e:	mov    ecx,0x80004005
   14000a573:	call   0x140003e64
   14000a578:	test   edx,edx
   14000a57a:	jne    0x14000a586
   14000a57c:	mov    r15d,r14d
   14000a57f:	mov    DWORD PTR [rsp+0x78],r14d
   14000a584:	jmp    0x14000a590
   14000a586:	add    r15d,r15d
   14000a589:	mov    DWORD PTR [rsp+0x78],r15d
   14000a58e:	js     0x14000a608
   14000a590:	movsxd rdx,r15d
   14000a593:	cmp    rdx,0x5555555
   14000a59a:	ja     0x14000a608
   14000a59c:	mov    r8d,0x18
   14000a5a2:	mov    rcx,r9
   14000a5a5:	call   0x140028094
   14000a5aa:	mov    QWORD PTR [rsp+0x108],rax
   14000a5b2:	test   rax,rax
   14000a5b5:	je     0x14000a608
   14000a5b7:	mov    DWORD PTR [rsi+0xc],r15d
   14000a5bb:	mov    QWORD PTR [rsi],rax
   14000a5be:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a5c2:	mov    DWORD PTR [rsp+0xa8],eax
   14000a5c9:	lea    rcx,[rax+rax*2]
   14000a5cd:	mov    rax,QWORD PTR [rsi]
   14000a5d0:	lea    rdx,[rax+rcx*8]
   14000a5d4:	mov    QWORD PTR [rsp+0x118],rdx
   14000a5dc:	test   rdx,rdx
   14000a5df:	je     0x14000a604
   14000a5e1:	mov    rax,QWORD PTR [rsp+0xb8]
   14000a5e9:	mov    QWORD PTR [rdx],rax
   14000a5ec:	mov    rax,QWORD PTR [rsp+0xc0]
   14000a5f4:	mov    QWORD PTR [rdx+0x8],rax
   14000a5f8:	mov    rax,QWORD PTR [rsp+0xc8]
   14000a600:	mov    QWORD PTR [rdx+0x10],rax
   14000a604:	add    DWORD PTR [rsi+0x8],r14d
   14000a608:	mov    BYTE PTR [rsp+0x50],0xff
   14000a60d:	lea    rsi,[rdi+0x2188]
   14000a614:	mov    QWORD PTR [rsp+0x110],rsi
   14000a61c:	mov    r15d,DWORD PTR [rsi+0x8]
   14000a620:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000a624:	cmp    r15d,ecx
   14000a627:	jne    0x14000a690
   14000a629:	lea    rax,[rsp+0x50]
   14000a62e:	cmp    rax,QWORD PTR [rsi]
   14000a631:	jb     0x14000a64d
   14000a633:	mov    rax,rcx
   14000a636:	add    rax,QWORD PTR [rsi]
   14000a639:	lea    rdx,[rsp+0x50]
   14000a63e:	cmp    rdx,rax
   14000a641:	jae    0x14000a64d
   14000a643:	mov    ecx,0x80004005
   14000a648:	call   0x140003e64
   14000a64d:	test   ecx,ecx
   14000a64f:	jne    0x14000a65b
   14000a651:	mov    r15d,r14d
   14000a654:	mov    DWORD PTR [rsp+0x5c],r14d
   14000a659:	jmp    0x14000a665
   14000a65b:	add    r15d,r15d
   14000a65e:	mov    DWORD PTR [rsp+0x5c],r15d
   14000a663:	js     0x14000a6b2
   14000a665:	movsxd rdx,r15d
   14000a668:	cmp    rdx,0x7fffffff
   14000a66f:	ja     0x14000a6b2
   14000a671:	mov    r8,r14
   14000a674:	mov    rcx,QWORD PTR [rsi]
   14000a677:	call   0x140028094
   14000a67c:	mov    QWORD PTR [rsp+0xa0],rax
   14000a684:	test   rax,rax
   14000a687:	je     0x14000a6b2
   14000a689:	mov    DWORD PTR [rsi+0xc],r15d
   14000a68d:	mov    QWORD PTR [rsi],rax
   14000a690:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a694:	mov    DWORD PTR [rsp+0x70],eax
   14000a698:	mov    rcx,rax
   14000a69b:	add    rcx,QWORD PTR [rsi]
   14000a69e:	mov    QWORD PTR [rsp+0xb0],rcx
   14000a6a6:	je     0x14000a6ae
   14000a6a8:	mov    al,BYTE PTR [rsp+0x50]
   14000a6ac:	mov    BYTE PTR [rcx],al
   14000a6ae:	add    DWORD PTR [rsi+0x8],r14d
   14000a6b2:	lea    rcx,[rdi+0x2198]
   14000a6b9:	lea    rdx,[rsp+0x68]
   14000a6be:	call   0x140009028
   14000a6c3:	add    r12d,r14d
   14000a6c6:	jmp    0x14000a4ef
   14000a6cb:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a6d0:	add    rcx,0xffffffffffffffe8
   14000a6d4:	mov    QWORD PTR [rsp+0x98],rcx
   14000a6dc:	or     r15,0xffffffffffffffff
   14000a6e0:	mov    eax,r15d
   14000a6e3:	lock xadd DWORD PTR [rcx+0x10],eax
   14000a6e8:	add    eax,r15d
   14000a6eb:	xor    r13d,r13d
   14000a6ee:	test   eax,eax
   14000a6f0:	jg     0x14000a703
   14000a6f2:	mov    rdx,QWORD PTR [rsp+0x98]
   14000a6fa:	mov    rcx,QWORD PTR [rdx]
   14000a6fd:	mov    rax,QWORD PTR [rcx]
   14000a700:	call   QWORD PTR [rax+0x8]
   14000a703:	jmp    0x14000a712
   14000a705:	mov    eax,DWORD PTR [rsp+0x5c]
   14000a709:	jmp    0x14000ad0e
   14000a70e:	or     r15,0xffffffffffffffff
   14000a712:	mov    rax,QWORD PTR [rbx]
   14000a715:	mov    rcx,rbx
   14000a718:	call   QWORD PTR [rax+0x70]
   14000a71b:	test   eax,eax
   14000a71d:	je     0x14000a7a9
   14000a723:	mov    QWORD PTR [rsp+0xd8],rdi
   14000a72b:	mov    QWORD PTR [rsp+0xe0],rbx
   14000a733:	mov    QWORD PTR [rsp+0x28],r13
   14000a738:	mov    DWORD PTR [rsp+0x20],r13d
   14000a73d:	lea    r9,[rsp+0xd8]
   14000a745:	lea    r8,[rip+0xfffffffffffffc68]        # 0x14000a3b4
   14000a74c:	xor    edx,edx
   14000a74e:	xor    ecx,ecx
   14000a750:	call   QWORD PTR [rip+0x2ede2]        # 0x140039538
   14000a756:	mov    rsi,rax
   14000a759:	test   rax,rax
   14000a75c:	jne    0x14000a768
   14000a75e:	mov    eax,0x80004005
   14000a763:	jmp    0x14000ad0e
   14000a768:	or     edx,0xffffffff
   14000a76b:	mov    rcx,rax
   14000a76e:	call   QWORD PTR [rip+0x2ed24]        # 0x140039498
   14000a774:	lea    rdx,[rsp+0x54]
   14000a779:	mov    rcx,rsi
   14000a77c:	call   QWORD PTR [rip+0x2edae]        # 0x140039530
   14000a782:	mov    ecx,DWORD PTR [rsp+0x54]
   14000a786:	mov    edx,0x80004005
   14000a78b:	test   eax,eax
   14000a78d:	cmovs  ecx,edx
   14000a790:	mov    DWORD PTR [rsp+0x54],ecx
   14000a794:	mov    rcx,rsi
   14000a797:	call   QWORD PTR [rip+0x2ee23]        # 0x1400395c0
   14000a79d:	mov    eax,DWORD PTR [rsp+0x54]
   14000a7a1:	test   eax,eax
   14000a7a3:	js     0x14000ad0e
   14000a7a9:	mov    r12d,r13d
   14000a7ac:	mov    rax,QWORD PTR [rbx]
   14000a7af:	mov    rcx,rbx
   14000a7b2:	call   QWORD PTR [rax+0x50]
   14000a7b5:	test   eax,eax
   14000a7b7:	je     0x14000a9a5
   14000a7bd:	mov    DWORD PTR [rsp+0x60],r13d
   14000a7c2:	mov    DWORD PTR [rsp+0x58],r13d
   14000a7c7:	mov    rax,QWORD PTR [rbx]
   14000a7ca:	mov    edx,r12d
   14000a7cd:	mov    rcx,rbx
   14000a7d0:	call   QWORD PTR [rax+0x58]
   14000a7d3:	mov    rdx,rax
   14000a7d6:	lea    rax,[rsp+0x8c]
   14000a7de:	mov    QWORD PTR [rsp+0x30],rax
   14000a7e3:	lea    rax,[rsp+0x58]
   14000a7e8:	mov    QWORD PTR [rsp+0x28],rax
   14000a7ed:	mov    QWORD PTR [rsp+0x20],r13
   14000a7f2:	lea    r9,[rsp+0x60]
   14000a7f7:	xor    r8d,r8d
   14000a7fa:	xor    ecx,ecx
   14000a7fc:	call   QWORD PTR [rip+0x2e8fe]        # 0x140039100
   14000a802:	mov    esi,eax
   14000a804:	call   QWORD PTR [rip+0x2edd6]        # 0x1400395e0
   14000a80a:	cmp    eax,0x7a
   14000a80d:	jne    0x14000a94c
   14000a813:	mov    ecx,DWORD PTR [rsp+0x60]
   14000a817:	call   0x14002b130
   14000a81c:	mov    rsi,rax
   14000a81f:	mov    QWORD PTR [rsp+0x80],rax
   14000a827:	mov    ecx,DWORD PTR [rsp+0x58]
   14000a82b:	mov    eax,0x2
   14000a830:	mul    rcx
   14000a833:	cmovo  rax,r15
   14000a837:	mov    rcx,rax
   14000a83a:	call   0x14002b130
   14000a83f:	mov    QWORD PTR [rsp+0x68],rax
   14000a844:	mov    r8,QWORD PTR [rbx]
   14000a847:	mov    edx,r12d
   14000a84a:	mov    rcx,rbx
   14000a84d:	call   QWORD PTR [r8+0x58]
   14000a851:	mov    rdx,rax
   14000a854:	lea    rax,[rsp+0x8c]
   14000a85c:	mov    QWORD PTR [rsp+0x30],rax
   14000a861:	lea    rax,[rsp+0x58]
   14000a866:	mov    QWORD PTR [rsp+0x28],rax
   14000a86b:	mov    rax,QWORD PTR [rsp+0x68]
   14000a870:	mov    QWORD PTR [rsp+0x20],rax
   14000a875:	lea    r9,[rsp+0x60]
   14000a87a:	mov    r8,rsi
   14000a87d:	xor    ecx,ecx
   14000a87f:	call   QWORD PTR [rip+0x2e87b]        # 0x140039100
   14000a885:	mov    esi,eax
   14000a887:	mov    DWORD PTR [rsp+0x54],eax
   14000a88b:	test   eax,eax
   14000a88d:	je     0x14000a942
   14000a893:	lea    rsi,[rdi+0x2208]
   14000a89a:	mov    QWORD PTR [rsp+0xb0],rsi
   14000a8a2:	mov    r13d,DWORD PTR [rsi+0x8]
   14000a8a6:	movsxd rdx,DWORD PTR [rsi+0xc]
   14000a8aa:	cmp    r13d,edx
   14000a8ad:	jne    0x14000a908
   14000a8af:	mov    r9,QWORD PTR [rsi]
   14000a8b2:	lea    rax,[rsp+0x90]
   14000a8ba:	cmp    rax,r9
   14000a8bd:	jb     0x14000a8d4
   14000a8bf:	lea    rcx,[r9+rdx*8]
   14000a8c3:	lea    rax,[rsp+0x90]
   14000a8cb:	cmp    rax,rcx
   14000a8ce:	jb     0x14000a966
   14000a8d4:	test   edx,edx
   14000a8d6:	jne    0x14000a8dd
   14000a8d8:	mov    r13d,r14d
   14000a8db:	jmp    0x14000a8e2
   14000a8dd:	add    r13d,r13d
   14000a8e0:	js     0x14000a93b
   14000a8e2:	movsxd rdx,r13d
   14000a8e5:	cmp    rdx,0xfffffff
   14000a8ec:	ja     0x14000a93b
   14000a8ee:	mov    r8d,0x8
   14000a8f4:	mov    rcx,r9
   14000a8f7:	call   0x140028094
   14000a8fc:	test   rax,rax
   14000a8ff:	je     0x14000a93b
   14000a901:	mov    DWORD PTR [rsi+0xc],r13d
   14000a905:	mov    QWORD PTR [rsi],rax
   14000a908:	movsxd rax,DWORD PTR [rsi+0x8]
   14000a90c:	mov    DWORD PTR [rsp+0x70],eax
   14000a910:	mov    rcx,rax
   14000a913:	mov    rax,QWORD PTR [rsi]
   14000a916:	lea    rdx,[rax+rcx*8]
   14000a91a:	mov    QWORD PTR [rsp+0xa0],rdx
   14000a922:	xor    r13d,r13d
   14000a925:	test   rdx,rdx
   14000a928:	je     0x14000a935
   14000a92a:	mov    rax,QWORD PTR [rsp+0x80]
   14000a932:	mov    QWORD PTR [rdx],rax
   14000a935:	add    DWORD PTR [rsi+0x8],r14d
   14000a939:	jmp    0x14000a93e
   14000a93b:	xor    r13d,r13d
   14000a93e:	mov    esi,DWORD PTR [rsp+0x54]
   14000a942:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a947:	call   0x14002b138
   14000a94c:	mov    rax,QWORD PTR [rbx]
   14000a94f:	mov    rcx,rbx
   14000a952:	test   esi,esi
   14000a954:	je     0x14000a971
   14000a956:	add    r12d,r14d
   14000a959:	call   QWORD PTR [rax+0x50]
   14000a95c:	cmp    r12d,eax
   14000a95f:	jae    0x14000a9a5
   14000a961:	jmp    0x14000a7bd
   14000a966:	mov    ecx,0x80004005
   14000a96b:	call   0x140003e64
   14000a970:	int3   
   14000a971:	mov    edx,r12d
   14000a974:	call   QWORD PTR [rax+0x58]
   14000a977:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000a97e:	mov    QWORD PTR [rsp+0xd0],rax
   14000a986:	mov    rax,QWORD PTR [rcx]
   14000a989:	lea    r9,[rsp+0xd0]
   14000a991:	mov    r8d,r14d
   14000a994:	mov    edx,0xe123059d
   14000a999:	call   QWORD PTR [rax]
   14000a99b:	mov    eax,0xe123059d
   14000a9a0:	jmp    0x14000ad0e
   14000a9a5:	mov    rax,QWORD PTR [rbx]
   14000a9a8:	mov    rcx,rbx
   14000a9ab:	call   QWORD PTR [rax+0x60]
   14000a9ae:	mov    rcx,r15
   14000a9b1:	inc    rcx
   14000a9b4:	cmp    WORD PTR [rax+rcx*2],r13w
   14000a9b9:	jne    0x14000a9b1
   14000a9bb:	test   rcx,rcx
   14000a9be:	jne    0x14000a9c7
   14000a9c0:	xor    eax,eax
   14000a9c2:	jmp    0x14000ad0e
   14000a9c7:	cmp    DWORD PTR [rdi+0x2148],0x8
   14000a9ce:	jne    0x14000a9e0
   14000a9d0:	lea    r13,[rip+0x32af1]        # 0x14003d4c8
   14000a9d7:	lea    r12,[rip+0x32b0a]        # 0x14003d4e8
   14000a9de:	jmp    0x14000a9ee
   14000a9e0:	lea    r13,[rip+0x32af9]        # 0x14003d4e0
   14000a9e7:	lea    r12,[rip+0x32b2a]        # 0x14003d518
   14000a9ee:	mov    rax,QWORD PTR [rbx]
   14000a9f1:	mov    rcx,rbx
   14000a9f4:	call   QWORD PTR [rax+0x60]
   14000a9f7:	mov    rsi,rax
   14000a9fa:	xor    ecx,ecx
   14000a9fc:	test   rax,rax
   14000a9ff:	je     0x14000acf2
   14000aa05:	mov    rax,r15
   14000aa08:	inc    rax
   14000aa0b:	cmp    WORD PTR [rsi+rax*2],cx
   14000aa0f:	jne    0x14000aa08
   14000aa11:	test   rax,rax
   14000aa14:	je     0x14000acf2
   14000aa1a:	lea    rbx,[rsi-0x2]
   14000aa1e:	lea    rbx,[rbx+rax*2]
   14000aa22:	cmp    rbx,rsi
   14000aa25:	jb     0x14000aaad
   14000aa2b:	cmp    WORD PTR [rbx],0x2e
   14000aa2f:	je     0x14000aa3a
   14000aa31:	sub    rbx,0x2
   14000aa35:	cmp    rbx,rsi
   14000aa38:	jae    0x14000aa2b
   14000aa3a:	cmp    rbx,rsi
   14000aa3d:	jb     0x14000aaad
   14000aa3f:	add    rbx,0x2
   14000aa43:	cmp    WORD PTR [rbx],cx
   14000aa46:	jne    0x14000aa8b
   14000aa48:	lea    r8,[rip+0x33219]        # 0x14003dc68
   14000aa4f:	jmp    0x14000aab4
   14000aa51:	mov    DWORD PTR [rsp+0x28],r15d
   14000aa56:	mov    QWORD PTR [rsp+0x20],rbx
   14000aa5b:	mov    r9d,r15d
   14000aa5e:	mov    r8,r12
   14000aa61:	mov    edx,r14d
   14000aa64:	mov    ecx,0x409
   14000aa69:	call   QWORD PTR [rip+0x2eb79]        # 0x1400395e8
   14000aa6f:	cmp    eax,0x2
   14000aa72:	je     0x14000aa94
   14000aa74:	mov    rax,r15
   14000aa77:	xor    ecx,ecx
   14000aa79:	inc    rax
   14000aa7c:	cmp    WORD PTR [r12+rax*2],cx
   14000aa81:	jne    0x14000aa79
   14000aa83:	lea    r12,[r12+rax*2]
   14000aa87:	add    r12,0x2
   14000aa8b:	cmp    WORD PTR [r12],cx
   14000aa90:	jne    0x14000aa51
   14000aa92:	jmp    0x14000aaad
   14000aa94:	mov    r8,rsi
   14000aa97:	mov    ebx,0x208
   14000aa9c:	mov    edx,ebx
   14000aa9e:	lea    rcx,[rsp+0x140]
   14000aaa6:	call   0x140002d7c
   14000aaab:	jmp    0x14000aad0
   14000aaad:	lea    r8,[rip+0x331a4]        # 0x14003dc58
   14000aab4:	mov    ebx,0x208
   14000aab9:	mov    QWORD PTR [rsp+0x20],r13
   14000aabe:	mov    r9,rsi
   14000aac1:	mov    edx,ebx
   14000aac3:	lea    rcx,[rsp+0x140]
   14000aacb:	call   0x140001004
   14000aad0:	xor    esi,esi
   14000aad2:	test   eax,eax
   14000aad4:	js     0x14000acf2
   14000aada:	lea    rcx,[rsp+0x140]
   14000aae2:	call   QWORD PTR [rip+0x2e998]        # 0x140039480
   14000aae8:	cmp    eax,0xffffffff
   14000aaeb:	jne    0x14000ab05
   14000aaed:	call   QWORD PTR [rip+0x2eaed]        # 0x1400395e0
   14000aaf3:	cmp    eax,0x7b
   14000aaf6:	jne    0x14000ab05
   14000aaf8:	mov    eax,0x80004005
   14000aafd:	test   eax,eax
   14000aaff:	js     0x14000acf2
   14000ab05:	cmp    WORD PTR [rsp+0x140],0x5c
   14000ab0e:	jne    0x14000ab1f
   14000ab10:	cmp    WORD PTR [rsp+0x142],0x5c
   14000ab19:	je     0x14000acd8
   14000ab1f:	lea    rcx,[rsp+0x140]
   14000ab27:	mov    rax,r15
   14000ab2a:	inc    rax
   14000ab2d:	cmp    WORD PTR [rcx+rax*2],si
   14000ab31:	jne    0x14000ab2a
   14000ab33:	mov    r14d,0x104
   14000ab39:	cmp    rax,r14
   14000ab3c:	jae    0x14000acd8
   14000ab42:	lea    ecx,[r14-0x4]
   14000ab46:	mov    QWORD PTR [rsp+0x40],rcx
   14000ab4b:	lea    rax,[rsp+0xb70]
   14000ab53:	mov    QWORD PTR [rsp+0x38],rax
   14000ab58:	mov    QWORD PTR [rsp+0x30],rcx
   14000ab5d:	lea    rax,[rsp+0x970]
   14000ab65:	mov    QWORD PTR [rsp+0x28],rax
   14000ab6a:	mov    QWORD PTR [rsp+0x20],rcx
   14000ab6f:	lea    r9,[rsp+0x560]
   14000ab77:	mov    r8d,r14d
   14000ab7a:	lea    rdx,[rsp+0x350]
   14000ab82:	lea    rcx,[rsp+0x140]
   14000ab8a:	call   0x14002c2a8
   14000ab8f:	lea    rcx,[rsp+0x560]
   14000ab97:	mov    rax,r15
   14000ab9a:	inc    rax
   14000ab9d:	cmp    WORD PTR [rcx+rax*2],si
   14000aba1:	jne    0x14000ab9a
   14000aba3:	lea    rcx,[rsp+0x350]
   14000abab:	test   rax,rax
   14000abae:	je     0x14000abcf
   14000abb0:	mov    rax,r15
   14000abb3:	inc    rax
   14000abb6:	cmp    WORD PTR [rcx+rax*2],si
   14000abba:	jne    0x14000abb3
   14000abbc:	cmp    WORD PTR [rsp+rax*2+0x34e],0x5c
   14000abc5:	je     0x14000abde
   14000abc7:	lea    rcx,[rsp+0x350]
   14000abcf:	lea    r8,[rip+0x3307a]        # 0x14003dc50
   14000abd6:	mov    rdx,r14
   14000abd9:	call   0x140027988
   14000abde:	lea    rcx,[rsp+0x350]
   14000abe6:	call   QWORD PTR [rip+0x2e884]        # 0x140039470
   14000abec:	mov    ecx,esi
   14000abee:	cmp    eax,0x4
   14000abf1:	sete   cl
   14000abf4:	test   ecx,ecx
   14000abf6:	jne    0x14000acd8
   14000abfc:	mov    QWORD PTR [rsp+0x30],rsi
   14000ac01:	mov    DWORD PTR [rsp+0x28],0xe8000000
   14000ac09:	mov    DWORD PTR [rsp+0x20],0x2
   14000ac11:	xor    r9d,r9d
   14000ac14:	xor    r8d,r8d
   14000ac17:	mov    edx,0xc0000000
   14000ac1c:	lea    rcx,[rsp+0x140]
   14000ac24:	call   QWORD PTR [rip+0x2e76e]        # 0x140039398
   14000ac2a:	cmp    rax,r15
   14000ac2d:	je     0x14000ac80
   14000ac2f:	mov    rcx,rax
   14000ac32:	call   QWORD PTR [rip+0x2e988]        # 0x1400395c0
   14000ac38:	xor    r9d,r9d
   14000ac3b:	lea    r8,[rsp+0x760]
   14000ac43:	mov    edx,r14d
   14000ac46:	lea    rcx,[rsp+0x140]
   14000ac4e:	call   QWORD PTR [rip+0x2e8c4]        # 0x140039518
   14000ac54:	mov    rcx,QWORD PTR [rdi+0x270]
   14000ac5b:	mov    rdx,rbx
   14000ac5e:	add    rcx,0x14
   14000ac62:	test   eax,eax
   14000ac64:	lea    r8,[rsp+0x760]
   14000ac6c:	jne    0x14000ac76
   14000ac6e:	lea    r8,[rsp+0x140]
   14000ac76:	call   0x140002d7c
   14000ac7b:	jmp    0x14000a9c0
   14000ac80:	call   QWORD PTR [rip+0x2e95a]        # 0x1400395e0
   14000ac86:	mov    ecx,eax
   14000ac88:	call   0x140004908
   14000ac8d:	mov    rbx,rax
   14000ac90:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000ac97:	lea    rax,[rsp+0x140]
   14000ac9f:	mov    QWORD PTR [rsp+0xe8],rax
   14000aca7:	mov    QWORD PTR [rsp+0xf0],rbx
   14000acaf:	mov    r10,QWORD PTR [rcx]
   14000acb2:	lea    r9,[rsp+0xe8]
   14000acba:	mov    edx,0xe1230541
   14000acbf:	mov    r8d,0x2
   14000acc5:	call   QWORD PTR [r10]
   14000acc8:	mov    rcx,rbx
   14000accb:	call   QWORD PTR [rip+0x2e8e7]        # 0x1400395b8
   14000acd1:	mov    eax,0xe1230541
   14000acd6:	jmp    0x14000ad0e
   14000acd8:	mov    rax,QWORD PTR [rdi]
   14000acdb:	xor    r9d,r9d
   14000acde:	xor    r8d,r8d
   14000ace1:	mov    edx,0xe1230558
   14000ace6:	mov    rcx,rdi
   14000ace9:	call   QWORD PTR [rax]
   14000aceb:	mov    eax,0xe1230558
   14000acf0:	jmp    0x14000ad0e
   14000acf2:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000acf9:	mov    rax,QWORD PTR [rcx]
   14000acfc:	xor    r9d,r9d
   14000acff:	xor    r8d,r8d
   14000ad02:	mov    edx,0xe1230574
   14000ad07:	call   QWORD PTR [rax]
   14000ad09:	mov    eax,0xe1230574
   14000ad0e:	mov    rcx,QWORD PTR [rsp+0xd70]
   14000ad16:	xor    rcx,rsp
   14000ad19:	call   0x140020e50
   14000ad1e:	lea    r11,[rsp+0xd80]
   14000ad26:	mov    rbx,QWORD PTR [r11+0x40]
   14000ad2a:	mov    rsi,QWORD PTR [r11+0x48]
   14000ad2e:	mov    rsp,r11
   14000ad31:	pop    r15
   14000ad33:	pop    r14
   14000ad35:	pop    r13
   14000ad37:	pop    r12
   14000ad39:	pop    rdi
   14000ad3a:	ret    
   14000ad3b:	int3   
   14000ad3c:	mov    rax,rsp
   14000ad3f:	push   rbp
   14000ad40:	push   r12
   14000ad42:	push   r13
   14000ad44:	push   r14
   14000ad46:	push   r15
   14000ad48:	lea    rbp,[rax-0x1b8]
   14000ad4f:	sub    rsp,0x290
   14000ad56:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000ad5f:	mov    QWORD PTR [rax+0x10],rbx
   14000ad63:	mov    QWORD PTR [rax+0x18],rsi
   14000ad67:	mov    QWORD PTR [rax+0x20],rdi
   14000ad6b:	mov    rax,QWORD PTR [rip+0x426d6]        # 0x14004d448
   14000ad72:	xor    rax,rsp
   14000ad75:	mov    QWORD PTR [rbp+0x180],rax
   14000ad7c:	mov    rsi,rcx
   14000ad7f:	mov    ecx,0x80
   14000ad84:	call   0x140021a98
   14000ad89:	mov    r14,rax
   14000ad8c:	mov    QWORD PTR [rsp+0x40],rax
   14000ad91:	xor    r13d,r13d
   14000ad94:	test   rax,rax
   14000ad97:	je     0x14000ae02
   14000ad99:	mov    rbx,QWORD PTR [rip+0x43c88]        # 0x14004ea28
   14000ada0:	lea    rdi,[rax+0x8]
   14000ada4:	mov    QWORD PTR [rsp+0x50],rdi
   14000ada9:	or     QWORD PTR [rdi],0xffffffffffffffff
   14000adad:	mov    DWORD PTR [rdi+0x8],r13d
   14000adb1:	lea    rcx,[rdi+0x38]
   14000adb5:	lea    r15d,[r13+0x7]
   14000adb9:	mov    QWORD PTR [rcx+0x18],r15
   14000adbd:	mov    QWORD PTR [rcx+0x10],r13
   14000adc1:	mov    WORD PTR [rcx],r13w
   14000adc5:	mov    rdx,QWORD PTR [rip+0x43d8c]        # 0x14004eb58
   14000adcc:	call   0x1400034e4
   14000add1:	nop
   14000add2:	lea    rcx,[rdi+0x58]
   14000add6:	mov    QWORD PTR [rcx+0x18],r15
   14000adda:	mov    QWORD PTR [rcx+0x10],r13
   14000adde:	mov    WORD PTR [rcx],r13w
   14000ade2:	mov    rdx,rbx
   14000ade5:	call   0x1400034e4
   14000adea:	nop
   14000adeb:	lea    rcx,[rdi+0x10]
   14000adef:	call   QWORD PTR [rip+0x2e35b]        # 0x140039150
   14000adf5:	nop
   14000adf6:	lea    rax,[rip+0x3354b]        # 0x14003e348
   14000adfd:	mov    QWORD PTR [r14],rax
   14000ae00:	jmp    0x14000ae05
   14000ae02:	mov    r14,r13
   14000ae05:	mov    QWORD PTR [rsi+0x2150],r14
   14000ae0c:	mov    r12d,r13d
   14000ae0f:	mov    edi,r13d
   14000ae12:	mov    r8d,0x1
   14000ae18:	lea    rdx,[rip+0x33129]        # 0x14003df48
   14000ae1f:	xor    ecx,ecx
   14000ae21:	call   QWORD PTR [rip+0x2e279]        # 0x1400390a0
   14000ae27:	mov    r15,rax
   14000ae2a:	test   rax,rax
   14000ae2d:	je     0x14000ae91
   14000ae2f:	lea    rdx,[r14+0x40]
   14000ae33:	cmp    QWORD PTR [rdx+0x18],0x8
   14000ae38:	jb     0x14000ae3d
   14000ae3a:	mov    rdx,QWORD PTR [rdx]
   14000ae3d:	mov    r8d,0x84
   14000ae43:	mov    rcx,rax
   14000ae46:	call   QWORD PTR [rip+0x2e26c]        # 0x1400390b8
   14000ae4c:	mov    rbx,rax
   14000ae4f:	mov    r14d,0x1
   14000ae55:	test   rax,rax
   14000ae58:	je     0x14000ae81
   14000ae5a:	mov    r12d,r14d
   14000ae5d:	lea    rdx,[rsp+0x60]
   14000ae62:	mov    rcx,rax
   14000ae65:	call   QWORD PTR [rip+0x2e23d]        # 0x1400390a8
   14000ae6b:	test   eax,eax
   14000ae6d:	je     0x14000ae78
   14000ae6f:	cmp    DWORD PTR [rsp+0x64],0x4
   14000ae74:	cmove  edi,r14d
   14000ae78:	mov    rcx,rbx
   14000ae7b:	call   QWORD PTR [rip+0x2e247]        # 0x1400390c8
   14000ae81:	mov    rcx,r15
   14000ae84:	call   QWORD PTR [rip+0x2e23e]        # 0x1400390c8
   14000ae8a:	test   r12d,r12d
   14000ae8d:	jne    0x14000aec4
   14000ae8f:	jmp    0x14000ae97
   14000ae91:	mov    r14d,0x1
   14000ae97:	mov    rcx,QWORD PTR [rsi+0x2150]
   14000ae9e:	call   0x14001c538
   14000aea3:	mov    ebx,eax
   14000aea5:	test   eax,eax
   14000aea7:	setne  cl
   14000aeaa:	mov    BYTE PTR [rsi+0x2158],cl
   14000aeb0:	call   QWORD PTR [rip+0x2e72a]        # 0x1400395e0
   14000aeb6:	test   ebx,ebx
   14000aeb8:	jne    0x14000aec4
   14000aeba:	mov    eax,0xa1230913
   14000aebf:	jmp    0x14000b020
   14000aec4:	test   edi,edi
   14000aec6:	jne    0x14000af55
   14000aecc:	lea    rcx,[rip+0x32e0d]        # 0x14003dce0
   14000aed3:	call   QWORD PTR [rip+0x2e537]        # 0x140039410
   14000aed9:	lea    rdx,[rip+0x33530]        # 0x14003e410
   14000aee0:	mov    rcx,rax
   14000aee3:	call   QWORD PTR [rip+0x2e307]        # 0x1400391f0
   14000aee9:	test   rax,rax
   14000aeec:	je     0x14000af00
   14000aeee:	call   rax
   14000aef0:	cmp    ax,r14w
   14000aef4:	jbe    0x14000af00
   14000aef6:	mov    eax,0xa1230936
   14000aefb:	jmp    0x14000b020
   14000af00:	mov    DWORD PTR [rsp+0x50],r13d
   14000af05:	lea    rdx,[rsp+0x50]
   14000af0a:	mov    rcx,QWORD PTR [rsi+0x2150]
   14000af11:	call   0x14001c76c
   14000af16:	mov    ebx,eax
   14000af18:	test   eax,eax
   14000af1a:	setne  cl
   14000af1d:	mov    BYTE PTR [rsi+0x2159],cl
   14000af23:	call   QWORD PTR [rip+0x2e6b7]        # 0x1400395e0
   14000af29:	test   ebx,ebx
   14000af2b:	jne    0x14000af37
   14000af2d:	mov    eax,0xa1230914
   14000af32:	jmp    0x14000b020
   14000af37:	cmp    DWORD PTR [rsp+0x50],r13d
   14000af3c:	je     0x14000af55
   14000af3e:	mov    rcx,QWORD PTR [rsi+0x1558]
   14000af45:	mov    rax,QWORD PTR [rcx]
   14000af48:	xor    r9d,r9d
   14000af4b:	xor    r8d,r8d
   14000af4e:	mov    edx,0xa1230905
   14000af53:	call   QWORD PTR [rax]
   14000af55:	mov    rcx,QWORD PTR [rsi+0x2150]
   14000af5c:	call   0x1400091b8
   14000af61:	test   eax,eax
   14000af63:	je     0x14000b01b
   14000af69:	mov    ebx,0x1
   14000af6e:	mov    BYTE PTR [rsi+0x215a],bl
   14000af74:	mov    DWORD PTR [rsp+0x50],r13d
   14000af79:	mov    DWORD PTR [rsp+0x40],r13d
   14000af7e:	lea    r9,[rsp+0x40]
   14000af83:	lea    r8,[rsp+0x50]
   14000af88:	lea    rdx,[rbp-0x80]
   14000af8c:	mov    rcx,QWORD PTR [rsi+0x2150]
   14000af93:	call   0x14001c920
   14000af98:	test   eax,eax
   14000af9a:	jne    0x14000afc2
   14000af9c:	cmp    DWORD PTR [rsp+0x50],ebx
   14000afa0:	jne    0x14000afa9
   14000afa2:	mov    eax,0xe12305c5
   14000afa7:	jmp    0x14000b020
   14000afa9:	mov    eax,DWORD PTR [rsp+0x40]
   14000afad:	cmp    eax,0xe123053e
   14000afb2:	je     0x14000b020
   14000afb4:	cmp    eax,0xe123056d
   14000afb9:	je     0x14000b020
   14000afbb:	mov    eax,0xa1230923
   14000afc0:	jmp    0x14000b020
   14000afc2:	cmp    DWORD PTR [rsi+0x280],ebx
   14000afc8:	je     0x14000b017
   14000afca:	xor    eax,eax
   14000afcc:	mov    QWORD PTR [rsp+0x40],rax
   14000afd1:	mov    QWORD PTR [rsp+0x44],rbx
   14000afd6:	or     DWORD PTR [rsp+0x48],0xffffffff
   14000afdb:	mov    DWORD PTR [rsp+0x40],ebx
   14000afdf:	mov    rcx,QWORD PTR [rsi+0x2150]
   14000afe6:	add    rcx,0x8
   14000afea:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000afee:	je     0x14000b017
   14000aff0:	mov    QWORD PTR [rsp+0x30],r13
   14000aff5:	lea    r9d,[rax+0xc]
   14000aff9:	mov    DWORD PTR [rsp+0x28],r9d
   14000affe:	lea    rax,[rsp+0x40]
   14000b003:	mov    QWORD PTR [rsp+0x20],rax
   14000b008:	lea    r8,[rsp+0x40]
   14000b00d:	mov    edx,0x8000a500
   14000b012:	call   0x14001761c
   14000b017:	xor    eax,eax
   14000b019:	jmp    0x14000b020
   14000b01b:	mov    eax,0xa123090c
   14000b020:	mov    rcx,QWORD PTR [rbp+0x180]
   14000b027:	xor    rcx,rsp
   14000b02a:	call   0x140020e50
   14000b02f:	lea    r11,[rsp+0x290]
   14000b037:	mov    rbx,QWORD PTR [r11+0x38]
   14000b03b:	mov    rsi,QWORD PTR [r11+0x40]
   14000b03f:	mov    rdi,QWORD PTR [r11+0x48]
   14000b043:	mov    rsp,r11
   14000b046:	pop    r15
   14000b048:	pop    r14
   14000b04a:	pop    r13
   14000b04c:	pop    r12
   14000b04e:	pop    rbp
   14000b04f:	ret    
   14000b050:	mov    r11,rsp
   14000b053:	mov    QWORD PTR [r11+0x10],rbx
   14000b057:	mov    QWORD PTR [r11+0x18],rbp
   14000b05b:	mov    QWORD PTR [r11+0x20],rsi
   14000b05f:	push   rdi
   14000b060:	sub    rsp,0x40
   14000b064:	mov    rax,QWORD PTR [rcx+0x2150]
   14000b06b:	mov    rbx,rcx
   14000b06e:	mov    dil,0x1
   14000b071:	test   rax,rax
   14000b074:	je     0x14000b132
   14000b07a:	cmp    BYTE PTR [rcx+0x215a],0x0
   14000b081:	je     0x14000b0ef
   14000b083:	lea    rcx,[rax+0x8]
   14000b087:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000b08b:	je     0x14000b0b2
   14000b08d:	and    QWORD PTR [r11-0x18],0x0
   14000b092:	lea    rax,[r11+0x8]
   14000b096:	xor    r9d,r9d
   14000b099:	xor    r8d,r8d
   14000b09c:	mov    edx,0x80006004
   14000b0a1:	mov    DWORD PTR [rsp+0x28],0x4
   14000b0a9:	mov    QWORD PTR [r11-0x28],rax
   14000b0ad:	call   0x14001761c
   14000b0b2:	mov    rsi,QWORD PTR [rbx+0x2150]
   14000b0b9:	lea    rcx,[rsi+0x18]
   14000b0bd:	call   QWORD PTR [rip+0x2e0e5]        # 0x1400391a8
   14000b0c3:	cmp    QWORD PTR [rsi+0x8],0xffffffffffffffff
   14000b0c8:	je     0x14000b0de
   14000b0ca:	dec    DWORD PTR [rsi+0x10]
   14000b0cd:	jne    0x14000b0de
   14000b0cf:	mov    rcx,QWORD PTR [rsi+0x8]
   14000b0d3:	call   QWORD PTR [rip+0x2e4e7]        # 0x1400395c0
   14000b0d9:	or     QWORD PTR [rsi+0x8],0xffffffffffffffff
   14000b0de:	lea    rcx,[rsi+0x18]
   14000b0e2:	call   QWORD PTR [rip+0x2e0c8]        # 0x1400391b0
   14000b0e8:	test   BYTE PTR [rsp+0x50],0x20
   14000b0ed:	je     0x14000b132
   14000b0ef:	cmp    BYTE PTR [rbx+0x2159],0x0
   14000b0f6:	je     0x14000b132
   14000b0f8:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000b0ff:	add    rcx,0x8
   14000b103:	call   0x140017534
   14000b108:	test   eax,eax
   14000b10a:	setne  dil
   14000b10e:	test   dil,dil
   14000b111:	je     0x14000b132
   14000b113:	cmp    BYTE PTR [rbx+0x2158],0x0
   14000b11a:	je     0x14000b132
   14000b11c:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000b123:	add    rcx,0x8
   14000b127:	call   0x14001742c
   14000b12c:	test   eax,eax
   14000b12e:	setne  dil
   14000b132:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b137:	mov    rbp,QWORD PTR [rsp+0x60]
   14000b13c:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b141:	mov    al,dil
   14000b144:	add    rsp,0x40
   14000b148:	pop    rdi
   14000b149:	ret    
   14000b14a:	int3   
   14000b14b:	int3   
   14000b14c:	mov    rax,rsp
   14000b14f:	push   rdi
   14000b150:	push   r14
   14000b152:	push   r15
   14000b154:	sub    rsp,0x130
   14000b15b:	mov    QWORD PTR [rax-0xb8],0xfffffffffffffffe
   14000b166:	mov    QWORD PTR [rax+0x10],rbx
   14000b16a:	mov    QWORD PTR [rax+0x18],rsi
   14000b16e:	mov    rax,QWORD PTR [rip+0x422d3]        # 0x14004d448
   14000b175:	xor    rax,rsp
   14000b178:	mov    QWORD PTR [rsp+0x120],rax
   14000b180:	mov    rdi,rcx
   14000b183:	mov    QWORD PTR [rsp+0x38],rcx
   14000b188:	call   0x14000c3a4
   14000b18d:	lea    rsi,[rdi+0x2a0]
   14000b194:	mov    rcx,rsi
   14000b197:	call   0x14000efd8
   14000b19c:	xor    r14d,r14d
   14000b19f:	mov    ebx,r14d
   14000b1a2:	lea    r15d,[r14+0x1]
   14000b1a6:	mov    DWORD PTR [rsp+0x48],ebx
   14000b1aa:	mov    rax,QWORD PTR [rsi+0x8]
   14000b1ae:	mov    rcx,QWORD PTR [rax+0x270]
   14000b1b5:	cmp    ebx,DWORD PTR [rcx+0x8]
   14000b1b8:	jae    0x14000b1cd
   14000b1ba:	lea    rcx,[rsi+0x150]
   14000b1c1:	mov    edx,ebx
   14000b1c3:	call   0x14001f03c
   14000b1c8:	add    ebx,r15d
   14000b1cb:	jmp    0x14000b1a6
   14000b1cd:	mov    rcx,QWORD PTR [rdi+0xca8]
   14000b1d4:	mov    eax,DWORD PTR [rdi+0x2148]
   14000b1da:	mov    DWORD PTR [rcx+0xa4],eax
   14000b1e0:	mov    rax,QWORD PTR [rdi]
   14000b1e3:	xor    r9d,r9d
   14000b1e6:	xor    r8d,r8d
   14000b1e9:	mov    edx,0x61230d2a
   14000b1ee:	mov    rcx,rdi
   14000b1f1:	call   QWORD PTR [rax]
   14000b1f3:	cmp    DWORD PTR [rdi+0x2148],0x8
   14000b1fa:	je     0x14000b3e3
   14000b200:	mov    rcx,rdi
   14000b203:	call   0x14000ad3c
   14000b208:	mov    ebx,eax
   14000b20a:	test   eax,eax
   14000b20c:	je     0x14000b356
   14000b212:	call   QWORD PTR [rip+0x2e3c8]        # 0x1400395e0
   14000b218:	mov    QWORD PTR [rsp+0x40],r14
   14000b21d:	cmp    ebx,0xa123090c
   14000b223:	je     0x14000b230
   14000b225:	lea    ecx,[rbx+0x5edcf6ed]
   14000b22b:	cmp    ecx,r15d
   14000b22e:	ja     0x14000b25d
   14000b230:	mov    ecx,eax
   14000b232:	call   0x140004908
   14000b237:	mov    QWORD PTR [rsp+0x40],rax
   14000b23c:	test   rax,rax
   14000b23f:	je     0x14000b25d
   14000b241:	lea    r8,[rsp+0x40]
   14000b246:	mov    ecx,ebx
   14000b248:	call   0x1400048b4
   14000b24d:	mov    rsi,rax
   14000b250:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b255:	call   QWORD PTR [rip+0x2e35d]        # 0x1400395b8
   14000b25b:	jmp    0x14000b26a
   14000b25d:	xor    r8d,r8d
   14000b260:	mov    ecx,ebx
   14000b262:	call   0x1400048b4
   14000b267:	mov    rsi,rax
   14000b26a:	mov    rax,rsi
   14000b26d:	mov    QWORD PTR [rsp+0x50],rax
   14000b272:	mov    rcx,rsi
   14000b275:	mov    QWORD PTR [rsp+0x70],rcx
   14000b27a:	movzx  edx,WORD PTR [rax]
   14000b27d:	test   dx,dx
   14000b280:	je     0x14000b2a5
   14000b282:	cmp    dx,0xd
   14000b286:	je     0x14000b29a
   14000b288:	cmp    dx,0xa
   14000b28c:	je     0x14000b29a
   14000b28e:	mov    WORD PTR [rcx],dx
   14000b291:	add    rcx,0x2
   14000b295:	mov    QWORD PTR [rsp+0x70],rcx
   14000b29a:	add    rax,0x2
   14000b29e:	mov    QWORD PTR [rsp+0x50],rax
   14000b2a3:	jmp    0x14000b27a
   14000b2a5:	movzx  eax,WORD PTR [rax]
   14000b2a8:	mov    WORD PTR [rcx],ax
   14000b2ab:	mov    eax,DWORD PTR [rdi+0x2148]
   14000b2b1:	cmp    eax,0x10
   14000b2b4:	ja     0x14000b2c0
   14000b2b6:	mov    ecx,0x10012
   14000b2bb:	bt     ecx,eax
   14000b2be:	jb     0x14000b30a
   14000b2c0:	cmp    ebx,0xe12305c5
   14000b2c6:	je     0x14000b30a
   14000b2c8:	cmp    ebx,0xe123053e
   14000b2ce:	je     0x14000b30a
   14000b2d0:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000b2d7:	mov    QWORD PTR [rsp+0x30],rsi
   14000b2dc:	mov    rax,QWORD PTR [rcx]
   14000b2df:	lea    r9,[rsp+0x30]
   14000b2e4:	mov    r8d,r15d
   14000b2e7:	mov    edx,0xa123092b
   14000b2ec:	call   QWORD PTR [rax]
   14000b2ee:	mov    rcx,rsi
   14000b2f1:	call   QWORD PTR [rip+0x2e2c1]        # 0x1400395b8
   14000b2f7:	mov    rax,QWORD PTR [rdi+0x270]
   14000b2fe:	mov    BYTE PTR [rax+0x33f],r14b
   14000b305:	jmp    0x14000b3e3
   14000b30a:	mov    r9,rsi
   14000b30d:	mov    r8d,r15d
   14000b310:	mov    edx,0xe1230576
   14000b315:	lea    rcx,[rsp+0xe0]
   14000b31d:	call   0x140002f94
   14000b322:	nop
   14000b323:	mov    rcx,rsi
   14000b326:	call   QWORD PTR [rip+0x2e28c]        # 0x1400395b8
   14000b32c:	lea    rdx,[rsp+0xe0]
   14000b334:	lea    rcx,[rsp+0xa0]
   14000b33c:	call   0x140002ff4
   14000b341:	lea    rdx,[rip+0x3f5d0]        # 0x14004a918
   14000b348:	lea    rcx,[rsp+0xa0]
   14000b350:	call   0x1400265e8
   14000b355:	nop
   14000b356:	mov    eax,DWORD PTR [rdi+0x2148]
   14000b35c:	cmp    eax,0x2
   14000b35f:	jne    0x14000b39f
   14000b361:	mov    rcx,rdi
   14000b364:	call   0x14000b970
   14000b369:	mov    rax,QWORD PTR [rdi+0x270]
   14000b370:	movzx  ecx,BYTE PTR [rax+0x340]
   14000b377:	mov    rax,QWORD PTR [rdi+0xca8]
   14000b37e:	cmp    ecx,0xffffffff
   14000b381:	je     0x14000b38f
   14000b383:	mov    DWORD PTR [rax+0x1bc],0x2
   14000b38d:	jmp    0x14000b396
   14000b38f:	mov    DWORD PTR [rax+0x1bc],r14d
   14000b396:	mov    BYTE PTR [rdi+0x215b],r15b
   14000b39d:	jmp    0x14000b3e3
   14000b39f:	cmp    eax,0x10
   14000b3a2:	ja     0x14000b3e3
   14000b3a4:	mov    ecx,0x10012
   14000b3a9:	bt     ecx,eax
   14000b3ac:	jae    0x14000b3e3
   14000b3ae:	mov    edx,r15d
   14000b3b1:	mov    rcx,QWORD PTR [rdi+0x2150]
   14000b3b8:	call   0x14001cc18
   14000b3bd:	test   eax,eax
   14000b3bf:	jne    0x14000b3e3
   14000b3c1:	mov    rcx,rdi
   14000b3c4:	call   0x14000b050
   14000b3c9:	mov    rax,QWORD PTR [rdi]
   14000b3cc:	xor    r9d,r9d
   14000b3cf:	xor    r8d,r8d
   14000b3d2:	mov    edx,0xe1230516
   14000b3d7:	mov    rcx,rdi
   14000b3da:	call   QWORD PTR [rax]
   14000b3dc:	xor    eax,eax
   14000b3de:	jmp    0x14000b593
   14000b3e3:	xor    r9d,r9d
   14000b3e6:	xor    r8d,r8d
   14000b3e9:	mov    edx,r15d
   14000b3ec:	xor    ecx,ecx
   14000b3ee:	call   QWORD PTR [rip+0x2e12c]        # 0x140039520
   14000b3f4:	mov    QWORD PTR [rdi+0x1f28],rax
   14000b3fb:	test   rax,rax
   14000b3fe:	jne    0x14000b428
   14000b400:	mov    DWORD PTR [rsp+0x60],r14d
   14000b405:	mov    DWORD PTR [rsp+0x64],0xe1232723
   14000b40d:	mov    rax,QWORD PTR [rsp+0x60]
   14000b412:	mov    QWORD PTR [rsp+0x68],rax
   14000b417:	lea    rdx,[rip+0x3f69a]        # 0x14004aab8
   14000b41e:	lea    rcx,[rsp+0x68]
   14000b423:	call   0x1400265e8
   14000b428:	lea    rcx,[rdi+0x11f0]
   14000b42f:	call   0x14001f55c
   14000b434:	mov    DWORD PTR [rdi+0x17e0],r15d
   14000b43b:	lea    rax,[rdi+0x2138]
   14000b442:	mov    QWORD PTR [rdi+0x17f8],rax
   14000b449:	lea    r8,[rdi+0x11e0]
   14000b450:	lea    rcx,[rdi+0x17d8]
   14000b457:	lea    rdx,[rip+0x42ca]        # 0x14000f728
   14000b45e:	call   0x140018428
   14000b463:	cmp    DWORD PTR [rdi+0x14e0],r14d
   14000b46a:	jne    0x14000b474
   14000b46c:	call   QWORD PTR [rip+0x2e0ce]        # 0x140039540
   14000b472:	jmp    0x14000b463
   14000b474:	lea    rbx,[rdi+0x2138]
   14000b47b:	mov    QWORD PTR [rdi+0x1588],rbx
   14000b482:	lea    r8,[rdi+0xf78]
   14000b489:	lea    rcx,[rdi+0x1568]
   14000b490:	lea    rdx,[rip+0x1741]        # 0x14000cbd8
   14000b497:	call   0x140018428
   14000b49c:	mov    DWORD PTR [rdi+0x1a58],0x2
   14000b4a6:	mov    DWORD PTR [rdi+0x1a50],r15d
   14000b4ad:	mov    QWORD PTR [rdi+0x1a68],rbx
   14000b4b4:	lea    r8,[rdi+0x1108]
   14000b4bb:	lea    rcx,[rdi+0x1a48]
   14000b4c2:	lea    rdx,[rip+0x8947]        # 0x140013e10
   14000b4c9:	call   0x140018428
   14000b4ce:	mov    DWORD PTR [rdi+0x1cc0],r15d
   14000b4d5:	mov    DWORD PTR [rdi+0x1a58],0x2
   14000b4df:	mov    QWORD PTR [rdi+0x1cd8],rbx
   14000b4e6:	lea    r8,[rdi+0x1018]
   14000b4ed:	lea    rcx,[rdi+0x1cb8]
   14000b4f4:	lea    rdx,[rip+0x5bd5]        # 0x1400110d0
   14000b4fb:	call   0x140018428
   14000b500:	mov    rcx,rdi
   14000b503:	call   0x14000b8fc
   14000b508:	mov    rcx,rdi
   14000b50b:	call   0x14000c6c4
   14000b510:	test   eax,eax
   14000b512:	jne    0x14000b53c
   14000b514:	mov    DWORD PTR [rsp+0x58],r15d
   14000b519:	mov    DWORD PTR [rsp+0x5c],0xe1230546
   14000b521:	mov    rax,QWORD PTR [rsp+0x58]
   14000b526:	mov    QWORD PTR [rsp+0x78],rax
   14000b52b:	lea    rdx,[rip+0x3f586]        # 0x14004aab8
   14000b532:	lea    rcx,[rsp+0x78]
   14000b537:	call   0x1400265e8
   14000b53c:	mov    rcx,rdi
   14000b53f:	call   0x14000c87c
   14000b544:	mov    DWORD PTR [rdi+0x1560],r15d
   14000b54b:	call   0x14002142c
   14000b550:	lea    rcx,[rax+0x60]
   14000b554:	call   0x140021614
   14000b559:	mov    rcx,QWORD PTR [rdi+0x60]
   14000b55d:	call   QWORD PTR [rip+0x2df75]        # 0x1400394d8
   14000b563:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000b56a:	mov    rax,QWORD PTR [rcx]
   14000b56d:	call   QWORD PTR [rax+0x18]
   14000b570:	test   al,al
   14000b572:	je     0x14000b58c
   14000b574:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000b57b:	mov    rax,QWORD PTR [rcx]
   14000b57e:	xor    r9d,r9d
   14000b581:	xor    r8d,r8d
   14000b584:	mov    edx,0x61231772
   14000b589:	call   QWORD PTR [rax]
   14000b58b:	nop
   14000b58c:	mov    eax,r15d
   14000b58f:	jmp    0x14000b593
   14000b591:	xor    eax,eax
   14000b593:	mov    rcx,QWORD PTR [rsp+0x120]
   14000b59b:	xor    rcx,rsp
   14000b59e:	call   0x140020e50
   14000b5a3:	lea    r11,[rsp+0x130]
   14000b5ab:	mov    rbx,QWORD PTR [r11+0x28]
   14000b5af:	mov    rsi,QWORD PTR [r11+0x30]
   14000b5b3:	mov    rsp,r11
   14000b5b6:	pop    r15
   14000b5b8:	pop    r14
   14000b5ba:	pop    rdi
   14000b5bb:	ret    
   14000b5bc:	int3   
   14000b5bd:	int3   
   14000b5be:	int3   
   14000b5bf:	int3   
   14000b5c0:	mov    rax,rsp
   14000b5c3:	push   rbp
   14000b5c4:	lea    rbp,[rax-0x838]
   14000b5cb:	sub    rsp,0x930
   14000b5d2:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000b5db:	mov    QWORD PTR [rax+0x10],rbx
   14000b5df:	mov    QWORD PTR [rax+0x18],rsi
   14000b5e3:	mov    QWORD PTR [rax+0x20],rdi
   14000b5e7:	mov    rax,QWORD PTR [rip+0x41e5a]        # 0x14004d448
   14000b5ee:	xor    rax,rsp
   14000b5f1:	mov    QWORD PTR [rbp+0x820],rax
   14000b5f8:	mov    rbx,rcx
   14000b5fb:	mov    rcx,QWORD PTR [rcx+0x60]
   14000b5ff:	call   QWORD PTR [rip+0x2df6b]        # 0x140039570
   14000b605:	mov    eax,DWORD PTR [rbx+0x2148]
   14000b60b:	xor    esi,esi
   14000b60d:	cmp    eax,0x10
   14000b610:	ja     0x14000b7be
   14000b616:	mov    ecx,0x10012
   14000b61b:	bt     ecx,eax
   14000b61e:	jae    0x14000b7be
   14000b624:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000b62b:	mov    QWORD PTR [rsp+0x40],rsi
   14000b630:	add    rcx,0x8
   14000b634:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000b638:	je     0x14000b65b
   14000b63a:	mov    QWORD PTR [rsp+0x30],rsi
   14000b63f:	mov    DWORD PTR [rsp+0x28],esi
   14000b643:	mov    QWORD PTR [rsp+0x20],rsi
   14000b648:	lea    r9d,[rsi+0x8]
   14000b64c:	lea    r8,[rsp+0x40]
   14000b651:	mov    edx,0x8000a414
   14000b656:	call   0x14001761c
   14000b65b:	cmp    QWORD PTR [rbx+0x14e8],rsi
   14000b662:	je     0x14000b683
   14000b664:	mov    rcx,QWORD PTR [rbx+0x14f8]
   14000b66b:	call   QWORD PTR [rip+0x2de67]        # 0x1400394d8
   14000b671:	mov    edx,0xea60
   14000b676:	mov    rcx,QWORD PTR [rbx+0x14e8]
   14000b67d:	call   QWORD PTR [rip+0x2de15]        # 0x140039498
   14000b683:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000b68a:	test   rcx,rcx
   14000b68d:	je     0x14000b7f6
   14000b693:	lea    rdx,[rbp+0x390]
   14000b69a:	call   0x14001cbc0
   14000b69f:	test   eax,eax
   14000b6a1:	je     0x14000b7f6
   14000b6a7:	mov    rcx,QWORD PTR [rbx+0xca8]
   14000b6ae:	mov    eax,DWORD PTR [rbp+0x3c0]
   14000b6b4:	mov    DWORD PTR [rcx+0xb8],eax
   14000b6ba:	mov    eax,DWORD PTR [rbp+0x3c4]
   14000b6c0:	mov    DWORD PTR [rcx+0xbc],eax
   14000b6c6:	mov    eax,DWORD PTR [rbp+0x3cc]
   14000b6cc:	mov    DWORD PTR [rcx+0xc0],eax
   14000b6d2:	mov    eax,DWORD PTR [rbp+0x3c8]
   14000b6d8:	mov    DWORD PTR [rcx+0xc4],eax
   14000b6de:	mov    eax,DWORD PTR [rbp+0x3d0]
   14000b6e4:	mov    DWORD PTR [rcx+0xc8],eax
   14000b6ea:	mov    eax,DWORD PTR [rbp+0x390]
   14000b6f0:	mov    DWORD PTR [rcx+0xcc],eax
   14000b6f6:	mov    eax,DWORD PTR [rbp+0x394]
   14000b6fc:	mov    DWORD PTR [rcx+0xd0],eax
   14000b702:	mov    eax,DWORD PTR [rbp+0x39c]
   14000b708:	mov    DWORD PTR [rcx+0xd8],eax
   14000b70e:	mov    eax,DWORD PTR [rbp+0x398]
   14000b714:	mov    DWORD PTR [rcx+0xd4],eax
   14000b71a:	mov    eax,DWORD PTR [rbp+0x3bc]
   14000b720:	mov    DWORD PTR [rcx+0xdc],eax
   14000b726:	cmp    DWORD PTR [rbp+0x3d8],esi
   14000b72c:	je     0x14000b736
   14000b72e:	bts    DWORD PTR [rcx+0x9c],0x9
   14000b736:	cmp    DWORD PTR [rbp+0x3dc],esi
   14000b73c:	je     0x14000b7f6
   14000b742:	bts    DWORD PTR [rcx+0x9c],0xc
   14000b74a:	mov    ecx,0x10
   14000b74f:	call   0x140021a98
   14000b754:	mov    rdi,rax
   14000b757:	mov    QWORD PTR [rsp+0x40],rax
   14000b75c:	test   rax,rax
   14000b75f:	je     0x14000b77c
   14000b761:	lea    rax,[rip+0x32380]        # 0x14003dae8
   14000b768:	mov    QWORD PTR [rdi],rax
   14000b76b:	lea    rax,[rip+0x33166]        # 0x14003e8d8
   14000b772:	mov    QWORD PTR [rdi],rax
   14000b775:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14000b77a:	jmp    0x14000b77f
   14000b77c:	mov    rdi,rsi
   14000b77f:	test   rdi,rdi
   14000b782:	je     0x14000b7a5
   14000b784:	mov    rax,QWORD PTR [rdi]
   14000b787:	xor    r9d,r9d
   14000b78a:	xor    r8d,r8d
   14000b78d:	mov    edx,0xe1230531
   14000b792:	mov    rcx,rdi
   14000b795:	call   QWORD PTR [rax]
   14000b797:	mov    rax,QWORD PTR [rdi]
   14000b79a:	mov    edx,0x1
   14000b79f:	mov    rcx,rdi
   14000b7a2:	call   QWORD PTR [rax+0x10]
   14000b7a5:	mov    rcx,QWORD PTR [rbx+0x1558]
   14000b7ac:	mov    rax,QWORD PTR [rcx]
   14000b7af:	xor    r9d,r9d
   14000b7b2:	xor    r8d,r8d
   14000b7b5:	mov    edx,0xe1230531
   14000b7ba:	call   QWORD PTR [rax]
   14000b7bc:	jmp    0x14000b7f6
   14000b7be:	cmp    eax,0x2
   14000b7c1:	jne    0x14000b7f6
   14000b7c3:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000b7ca:	test   rcx,rcx
   14000b7cd:	je     0x14000b7f6
   14000b7cf:	lea    rdx,[rbp+0x390]
   14000b7d6:	call   0x14001cbc0
   14000b7db:	test   eax,eax
   14000b7dd:	je     0x14000b7f6
   14000b7df:	cmp    DWORD PTR [rbp+0x3d8],esi
   14000b7e5:	je     0x14000b7f6
   14000b7e7:	mov    rax,QWORD PTR [rbx+0xca8]
   14000b7ee:	bts    DWORD PTR [rax+0x9c],0x9
   14000b7f6:	cmp    DWORD PTR [rbx+0x14e0],esi
   14000b7fc:	je     0x14000b828
   14000b7fe:	mov    DWORD PTR [rsp+0x50],0x6
   14000b806:	lea    rcx,[rbx+0x11f0]
   14000b80d:	lea    rax,[rsp+0x40]
   14000b812:	mov    QWORD PTR [rsp+0x28],rax
   14000b817:	lea    r9,[rbp+0x3e0]
   14000b81e:	lea    rdx,[rsp+0x50]
   14000b823:	call   0x14001f8f8
   14000b828:	lea    rcx,[rbx+0x2b0]
   14000b82f:	mov    rax,QWORD PTR [rcx]
   14000b832:	call   QWORD PTR [rax+0x8]
   14000b835:	test   rax,rax
   14000b838:	je     0x14000b844
   14000b83a:	mov    DWORD PTR [rax+0x498],0x1
   14000b844:	mov    rax,QWORD PTR [rbx+0xca8]
   14000b84b:	mov    DWORD PTR [rax+0xb4],0x1
   14000b855:	lea    rcx,[rbx+0x17d8]
   14000b85c:	call   0x1400186cc
   14000b861:	lea    rcx,[rbx+0x1568]
   14000b868:	call   0x1400186cc
   14000b86d:	mov    rcx,QWORD PTR [rbx+0x1f28]
   14000b874:	call   QWORD PTR [rip+0x2dc5e]        # 0x1400394d8
   14000b87a:	lea    rcx,[rbx+0x1a48]
   14000b881:	call   0x1400186cc
   14000b886:	mov    DWORD PTR [rbx+0x1560],esi
   14000b88c:	mov    rdx,QWORD PTR [rbx+0x270]
   14000b893:	add    rdx,0x14
   14000b897:	lea    rcx,[rbx+0x2270]
   14000b89e:	call   0x14001ac60
   14000b8a3:	mov    edx,DWORD PTR [rbx+0x2148]
   14000b8a9:	cmp    edx,0x8
   14000b8ac:	je     0x14000b8cc
   14000b8ae:	cmp    edx,0x2
   14000b8b1:	jne    0x14000b8c4
   14000b8b3:	cmp    BYTE PTR [rbx+0x215b],sil
   14000b8ba:	je     0x14000b8c4
   14000b8bc:	mov    rcx,rbx
   14000b8bf:	call   0x14000bec0
   14000b8c4:	mov    rcx,rbx
   14000b8c7:	call   0x14000b050
   14000b8cc:	mov    eax,0x1
   14000b8d1:	mov    rcx,QWORD PTR [rbp+0x820]
   14000b8d8:	xor    rcx,rsp
   14000b8db:	call   0x140020e50
   14000b8e0:	lea    r11,[rsp+0x930]
   14000b8e8:	mov    rbx,QWORD PTR [r11+0x18]
   14000b8ec:	mov    rsi,QWORD PTR [r11+0x20]
   14000b8f0:	mov    rdi,QWORD PTR [r11+0x28]
   14000b8f4:	mov    rsp,r11
   14000b8f7:	pop    rbp
   14000b8f8:	ret    
   14000b8f9:	int3   
   14000b8fa:	int3   
   14000b8fb:	int3   
   14000b8fc:	rex push rbx
   14000b8fe:	sub    rsp,0x20
   14000b902:	mov    r8,QWORD PTR [rcx+0x270]
   14000b909:	mov    rbx,rcx
   14000b90c:	or     rax,0xffffffffffffffff
   14000b910:	add    r8,0x14
   14000b914:	xor    ecx,ecx
   14000b916:	inc    rax
   14000b919:	cmp    WORD PTR [r8+rax*2],cx
   14000b91e:	jne    0x14000b916
   14000b920:	test   rax,rax
   14000b923:	je     0x14000b947
   14000b925:	lea    rcx,[rbx+0x1f30]
   14000b92c:	mov    edx,0x208
   14000b931:	call   0x140002d7c
   14000b936:	mov    rcx,QWORD PTR [rbx+0x1f28]
   14000b93d:	call   QWORD PTR [rip+0x2db95]        # 0x1400394d8
   14000b943:	xor    eax,eax
   14000b945:	jmp    0x14000b94c
   14000b947:	mov    eax,0x80004005
   14000b94c:	add    rsp,0x20
   14000b950:	pop    rbx
   14000b951:	ret    
   14000b952:	int3   
   14000b953:	int3   
   14000b954:	sub    rsp,0x28
   14000b958:	xor    ecx,ecx
   14000b95a:	call   0x1400353f0
   14000b95f:	mov    QWORD PTR [rsp+0x30],rax
   14000b964:	mov    al,0x1
   14000b966:	jmp    0x14000b96a
   14000b968:	xor    al,al
   14000b96a:	add    rsp,0x28
   14000b96e:	ret    
   14000b96f:	int3   
   14000b970:	mov    rax,rsp
   14000b973:	push   rbp
   14000b974:	push   r12
   14000b976:	push   r13
   14000b978:	push   r14
   14000b97a:	push   r15
   14000b97c:	lea    rbp,[rax-0x5f]
   14000b980:	sub    rsp,0xe0
   14000b987:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   14000b98f:	mov    QWORD PTR [rax+0x10],rbx
   14000b993:	mov    QWORD PTR [rax+0x18],rsi
   14000b997:	mov    QWORD PTR [rax+0x20],rdi
   14000b99b:	mov    rax,QWORD PTR [rip+0x41aa6]        # 0x14004d448
   14000b9a2:	xor    rax,rsp
   14000b9a5:	mov    QWORD PTR [rbp+0x27],rax
   14000b9a9:	mov    rbx,rcx
   14000b9ac:	mov    rax,QWORD PTR [rcx+0x270]
   14000b9b3:	mov    BYTE PTR [rax+0x340],0xff
   14000b9ba:	call   0x14000827c
   14000b9bf:	xor    r12d,r12d
   14000b9c2:	test   eax,eax
   14000b9c4:	je     0x14000b9fa
   14000b9c6:	cmp    DWORD PTR [rbx+0x2180],r12d
   14000b9cd:	je     0x14000b9e6
   14000b9cf:	mov    rcx,QWORD PTR [rbx+0x1558]
   14000b9d6:	mov    rax,QWORD PTR [rcx]
   14000b9d9:	xor    r9d,r9d
   14000b9dc:	xor    r8d,r8d
   14000b9df:	mov    edx,0xe12305c6
   14000b9e4:	call   QWORD PTR [rax]
   14000b9e6:	mov    rcx,QWORD PTR [rbx+0x1558]
   14000b9ed:	mov    rax,QWORD PTR [rcx]
   14000b9f0:	mov    edx,0xa123090d
   14000b9f5:	jmp    0x14000be8b
   14000b9fa:	mov    rax,QWORD PTR [rbx+0x270]
   14000ba01:	cmp    BYTE PTR [rax+0x33f],r12b
   14000ba08:	jne    0x14000ba17
   14000ba0a:	cmp    DWORD PTR [rbx+0x2180],r12d
   14000ba11:	je     0x14000be93
   14000ba17:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000ba1e:	add    rcx,0x8
   14000ba22:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000ba26:	je     0x14000ba49
   14000ba28:	mov    QWORD PTR [rsp+0x30],r12
   14000ba2d:	mov    DWORD PTR [rsp+0x28],r12d
   14000ba32:	mov    QWORD PTR [rsp+0x20],r12
   14000ba37:	xor    r9d,r9d
   14000ba3a:	xor    r8d,r8d
   14000ba3d:	mov    edx,0x8000a608
   14000ba42:	call   0x14001761c
   14000ba47:	jmp    0x14000ba4c
   14000ba49:	mov    eax,r12d
   14000ba4c:	test   eax,eax
   14000ba4e:	je     0x14000be72
   14000ba54:	call   0x14000b954
   14000ba59:	test   al,al
   14000ba5b:	je     0x14000be72
   14000ba61:	mov    rax,QWORD PTR [rbx+0x270]
   14000ba68:	mov    r13d,0x1
   14000ba6e:	cmp    BYTE PTR [rax+0x33f],r12b
   14000ba75:	je     0x14000bb29
   14000ba7b:	lea    rdx,[rbx+0x2160]
   14000ba82:	lea    r8,[rbp-0x69]
   14000ba86:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000ba8d:	call   0x14001c874
   14000ba92:	test   eax,eax
   14000ba94:	je     0x14000bb04
   14000ba96:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000ba9d:	movzx  edi,BYTE PTR [rbp-0x69]
   14000baa1:	mov    DWORD PTR [rbp-0x5d],edi
   14000baa4:	mov    BYTE PTR [rbp-0x61],r13b
   14000baa8:	add    rcx,0x8
   14000baac:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000bab0:	je     0x14000bad5
   14000bab2:	mov    QWORD PTR [rsp+0x30],r12
   14000bab7:	mov    DWORD PTR [rsp+0x28],r12d
   14000babc:	mov    QWORD PTR [rsp+0x20],r12
   14000bac1:	lea    r9d,[r13+0x7]
   14000bac5:	lea    r8,[rbp-0x61]
   14000bac9:	mov    edx,0x8000e010
   14000bace:	call   0x14001761c
   14000bad3:	jmp    0x14000bad8
   14000bad5:	mov    eax,r12d
   14000bad8:	test   eax,eax
   14000bada:	mov    rax,QWORD PTR [rbx+0x270]
   14000bae1:	je     0x14000baec
   14000bae3:	mov    BYTE PTR [rax+0x340],dil
   14000baea:	jmp    0x14000bb29
   14000baec:	mov    BYTE PTR [rax+0x33f],r12b
   14000baf3:	mov    dl,dil
   14000baf6:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000bafd:	call   0x14001c8e0
   14000bb02:	jmp    0x14000bb12
   14000bb04:	mov    rax,QWORD PTR [rbx+0x270]
   14000bb0b:	mov    BYTE PTR [rax+0x33f],r12b
   14000bb12:	mov    rcx,QWORD PTR [rbx+0x1558]
   14000bb19:	mov    rax,QWORD PTR [rcx]
   14000bb1c:	xor    r9d,r9d
   14000bb1f:	xor    r8d,r8d
   14000bb22:	mov    edx,0xa123090d
   14000bb27:	call   QWORD PTR [rax]
   14000bb29:	mov    edi,r12d
   14000bb2c:	mov    rsi,r12
   14000bb2f:	cmp    DWORD PTR [rbx+0x2180],r12d
   14000bb36:	jle    0x14000be93
   14000bb3c:	test   edi,edi
   14000bb3e:	js     0x14000be5d
   14000bb44:	cmp    edi,DWORD PTR [rbx+0x2190]
   14000bb4a:	jge    0x14000be5d
   14000bb50:	movsxd r14,edi
   14000bb53:	mov    r8,QWORD PTR [rbx+0x2188]
   14000bb5a:	add    r8,r14
   14000bb5d:	cmp    edi,DWORD PTR [rbx+0x2180]
   14000bb63:	jge    0x14000be48
   14000bb69:	lea    rcx,[r14+r14*2]
   14000bb6d:	mov    rax,QWORD PTR [rbx+0x2178]
   14000bb74:	lea    rdx,[rax+rcx*8]
   14000bb78:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000bb7f:	call   0x14001c874
   14000bb84:	test   eax,eax
   14000bb86:	setne  al
   14000bb89:	test   al,al
   14000bb8b:	je     0x14000bd92
   14000bb91:	cmp    edi,DWORD PTR [rbx+0x2190]
   14000bb97:	jge    0x14000be1e
   14000bb9d:	mov    rax,QWORD PTR [rbx+0x2188]
   14000bba4:	mov    r15b,BYTE PTR [rsi+rax*1]
   14000bba8:	mov    rcx,QWORD PTR [rbx+0x268]
   14000bbaf:	call   0x14001fcd8
   14000bbb4:	mov    rcx,QWORD PTR [rbx+0x270]
   14000bbbb:	mov    eax,DWORD PTR [rcx+0x32c]
   14000bbc1:	cmp    eax,0xf
   14000bbc4:	jne    0x14000bbfb
   14000bbc6:	mov    rcx,QWORD PTR [rbx+0x268]
   14000bbcd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bbd1:	call   QWORD PTR [rip+0x2d921]        # 0x1400394f8
   14000bbd7:	cmp    edi,DWORD PTR [rbx+0x21a0]
   14000bbdd:	jge    0x14000bddf
   14000bbe3:	mov    rax,QWORD PTR [rbx+0x2198]
   14000bbea:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000bbee:	mov    QWORD PTR [rbp-0x51],rcx
   14000bbf2:	lea    r9,[rbp-0x51]
   14000bbf6:	jmp    0x14000bdb1
   14000bbfb:	mov    BYTE PTR [rax+rcx*1+0x330],r15b
   14000bc03:	mov    rax,QWORD PTR [rbx+0x270]
   14000bc0a:	add    DWORD PTR [rax+0x32c],r13d
   14000bc11:	mov    rcx,QWORD PTR [rbx+0x268]
   14000bc18:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bc1c:	call   QWORD PTR [rip+0x2d8d6]        # 0x1400394f8
   14000bc22:	xor    edx,edx
   14000bc24:	lea    r8d,[rdx+0x50]
   14000bc28:	lea    rcx,[rbp-0x29]
   14000bc2c:	call   0x1400260e0
   14000bc31:	mov    DWORD PTR [rbp-0x29],0x5
   14000bc38:	mov    QWORD PTR [rbp-0x21],0x3
   14000bc40:	cmp    edi,DWORD PTR [rbx+0x21a0]
   14000bc46:	jge    0x14000be09
   14000bc4c:	mov    rax,QWORD PTR [rbx+0x2198]
   14000bc53:	lea    rcx,[rax+r14*8]
   14000bc57:	mov    r8d,0x1f
   14000bc5d:	lea    rdx,[rbp-0x41]
   14000bc61:	call   0x140005894
   14000bc66:	nop
   14000bc67:	or     r9,0xffffffffffffffff
   14000bc6b:	mov    r8,QWORD PTR [rax]
   14000bc6e:	lea    edx,[r9+0x21]
   14000bc72:	lea    rcx,[rbp-0x19]
   14000bc76:	call   0x140027a98
   14000bc7b:	nop
   14000bc7c:	mov    rdx,QWORD PTR [rbp-0x41]
   14000bc80:	add    rdx,0xffffffffffffffe8
   14000bc84:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000bc89:	jg     0x14000bc94
   14000bc8b:	mov    rcx,QWORD PTR [rdx]
   14000bc8e:	mov    rax,QWORD PTR [rcx]
   14000bc91:	call   QWORD PTR [rax+0x8]
   14000bc94:	mov    DWORD PTR [rbp-0x25],0x666
   14000bc9b:	mov    rdx,QWORD PTR [rbx+0xca8]
   14000bca2:	mov    eax,DWORD PTR [rdx+0x20c]
   14000bca8:	cmp    eax,0x10
   14000bcab:	jae    0x14000bd3e
   14000bcb1:	lea    rcx,[rax+rax*4]
   14000bcb5:	add    rcx,rcx
   14000bcb8:	mov    rax,QWORD PTR [rbp-0x29]
   14000bcbc:	mov    QWORD PTR [rdx+rcx*8+0x210],rax
   14000bcc4:	mov    rax,QWORD PTR [rbp-0x21]
   14000bcc8:	mov    QWORD PTR [rdx+rcx*8+0x218],rax
   14000bcd0:	mov    rax,QWORD PTR [rbp-0x19]
   14000bcd4:	mov    QWORD PTR [rdx+rcx*8+0x220],rax
   14000bcdc:	mov    rax,QWORD PTR [rbp-0x11]
   14000bce0:	mov    QWORD PTR [rdx+rcx*8+0x228],rax
   14000bce8:	mov    rax,QWORD PTR [rbp-0x9]
   14000bcec:	mov    QWORD PTR [rdx+rcx*8+0x230],rax
   14000bcf4:	mov    rax,QWORD PTR [rbp-0x1]
   14000bcf8:	mov    QWORD PTR [rdx+rcx*8+0x238],rax
   14000bd00:	mov    rax,QWORD PTR [rbp+0x7]
   14000bd04:	mov    QWORD PTR [rdx+rcx*8+0x240],rax
   14000bd0c:	mov    rax,QWORD PTR [rbp+0xf]
   14000bd10:	mov    QWORD PTR [rdx+rcx*8+0x248],rax
   14000bd18:	mov    rax,QWORD PTR [rbp+0x17]
   14000bd1c:	mov    QWORD PTR [rdx+rcx*8+0x250],rax
   14000bd24:	mov    rax,QWORD PTR [rbp+0x1f]
   14000bd28:	mov    QWORD PTR [rdx+rcx*8+0x258],rax
   14000bd30:	mov    rax,QWORD PTR [rbx+0xca8]
   14000bd37:	add    DWORD PTR [rax+0x20c],r13d
   14000bd3e:	cmp    edi,DWORD PTR [rbx+0x2190]
   14000bd44:	jge    0x14000bdf4
   14000bd4a:	mov    rax,QWORD PTR [rbx+0x2188]
   14000bd51:	movzx  ecx,BYTE PTR [rax+rsi*1]
   14000bd55:	mov    DWORD PTR [rbp-0x55],ecx
   14000bd58:	mov    BYTE PTR [rbp-0x59],r13b
   14000bd5c:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000bd63:	add    rcx,0x8
   14000bd67:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000bd6b:	je     0x14000bdc8
   14000bd6d:	mov    QWORD PTR [rsp+0x30],r12
   14000bd72:	mov    DWORD PTR [rsp+0x28],r12d
   14000bd77:	mov    QWORD PTR [rsp+0x20],r12
   14000bd7c:	mov    r9d,0x8
   14000bd82:	lea    r8,[rbp-0x59]
   14000bd86:	mov    edx,0x8000e010
   14000bd8b:	call   0x14001761c
   14000bd90:	jmp    0x14000bdc8
   14000bd92:	cmp    edi,DWORD PTR [rbx+0x21a0]
   14000bd98:	jge    0x14000be33
   14000bd9e:	mov    rax,QWORD PTR [rbx+0x2198]
   14000bda5:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000bda9:	mov    QWORD PTR [rbp-0x49],rcx
   14000bdad:	lea    r9,[rbp-0x49]
   14000bdb1:	mov    r10,QWORD PTR [rbx+0x1558]
   14000bdb8:	mov    rax,QWORD PTR [r10]
   14000bdbb:	mov    r8d,r13d
   14000bdbe:	mov    edx,0xa123090e
   14000bdc3:	mov    rcx,r10
   14000bdc6:	call   QWORD PTR [rax]
   14000bdc8:	add    edi,r13d
   14000bdcb:	add    rsi,r13
   14000bdce:	cmp    edi,DWORD PTR [rbx+0x2180]
   14000bdd4:	jge    0x14000be93
   14000bdda:	jmp    0x14000bb3c
   14000bddf:	xor    r9d,r9d
   14000bde2:	xor    r8d,r8d
   14000bde5:	mov    edx,r13d
   14000bde8:	mov    ecx,0xc000008c
   14000bded:	call   QWORD PTR [rip+0x2d4d5]        # 0x1400392c8
   14000bdf3:	int3   
   14000bdf4:	xor    r9d,r9d
   14000bdf7:	xor    r8d,r8d
   14000bdfa:	mov    edx,r13d
   14000bdfd:	mov    ecx,0xc000008c
   14000be02:	call   QWORD PTR [rip+0x2d4c0]        # 0x1400392c8
   14000be08:	int3   
   14000be09:	xor    r9d,r9d
   14000be0c:	xor    r8d,r8d
   14000be0f:	mov    edx,r13d
   14000be12:	mov    ecx,0xc000008c
   14000be17:	call   QWORD PTR [rip+0x2d4ab]        # 0x1400392c8
   14000be1d:	int3   
   14000be1e:	xor    r9d,r9d
   14000be21:	xor    r8d,r8d
   14000be24:	mov    edx,r13d
   14000be27:	mov    ecx,0xc000008c
   14000be2c:	call   QWORD PTR [rip+0x2d496]        # 0x1400392c8
   14000be32:	int3   
   14000be33:	xor    r9d,r9d
   14000be36:	xor    r8d,r8d
   14000be39:	mov    edx,r13d
   14000be3c:	mov    ecx,0xc000008c
   14000be41:	call   QWORD PTR [rip+0x2d481]        # 0x1400392c8
   14000be47:	int3   
   14000be48:	xor    r9d,r9d
   14000be4b:	xor    r8d,r8d
   14000be4e:	mov    edx,r13d
   14000be51:	mov    ecx,0xc000008c
   14000be56:	call   QWORD PTR [rip+0x2d46c]        # 0x1400392c8
   14000be5c:	int3   
   14000be5d:	xor    r9d,r9d
   14000be60:	xor    r8d,r8d
   14000be63:	mov    edx,r13d
   14000be66:	mov    ecx,0xc000008c
   14000be6b:	call   QWORD PTR [rip+0x2d457]        # 0x1400392c8
   14000be71:	int3   
   14000be72:	mov    rax,QWORD PTR [rbx+0x270]
   14000be79:	mov    BYTE PTR [rax+0x33f],r12b
   14000be80:	mov    rax,QWORD PTR [rbx]
   14000be83:	mov    edx,0xa123090f
   14000be88:	mov    rcx,rbx
   14000be8b:	xor    r9d,r9d
   14000be8e:	xor    r8d,r8d
   14000be91:	call   QWORD PTR [rax]
   14000be93:	mov    rcx,QWORD PTR [rbp+0x27]
   14000be97:	xor    rcx,rsp
   14000be9a:	call   0x140020e50
   14000be9f:	lea    r11,[rsp+0xe0]
   14000bea7:	mov    rbx,QWORD PTR [r11+0x38]
   14000beab:	mov    rsi,QWORD PTR [r11+0x40]
   14000beaf:	mov    rdi,QWORD PTR [r11+0x48]
   14000beb3:	mov    rsp,r11
   14000beb6:	pop    r15
   14000beb8:	pop    r14
   14000beba:	pop    r13
   14000bebc:	pop    r12
   14000bebe:	pop    rbp
   14000bebf:	ret    
   14000bec0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bec5:	mov    QWORD PTR [rsp+0x10],rsi
   14000beca:	push   rdi
   14000becb:	sub    rsp,0x20
   14000becf:	mov    rbx,rcx
   14000bed2:	mov    rcx,QWORD PTR [rcx+0x270]
   14000bed9:	mov    al,BYTE PTR [rcx+0x33f]
   14000bedf:	test   al,al
   14000bee1:	jne    0x14000bef0
   14000bee3:	cmp    DWORD PTR [rbx+0x2180],0x0
   14000beea:	je     0x14000bf43
   14000beec:	test   al,al
   14000beee:	je     0x14000bf02
   14000bef0:	mov    dl,BYTE PTR [rcx+0x340]
   14000bef6:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000befd:	call   0x14001c8e0
   14000bf02:	xor    esi,esi
   14000bf04:	xor    edi,edi
   14000bf06:	cmp    DWORD PTR [rbx+0x2180],esi
   14000bf0c:	jle    0x14000bf43
   14000bf0e:	test   rsi,rsi
   14000bf11:	js     0x14000bf53
   14000bf13:	cmp    edi,DWORD PTR [rbx+0x2190]
   14000bf19:	jge    0x14000bf53
   14000bf1b:	mov    rax,QWORD PTR [rbx+0x2188]
   14000bf22:	mov    dl,BYTE PTR [rsi+rax*1]
   14000bf25:	cmp    dl,0x12
   14000bf28:	jae    0x14000bf36
   14000bf2a:	mov    rcx,QWORD PTR [rbx+0x2150]
   14000bf31:	call   0x14001c8e0
   14000bf36:	inc    edi
   14000bf38:	inc    rsi
   14000bf3b:	cmp    edi,DWORD PTR [rbx+0x2180]
   14000bf41:	jl     0x14000bf0e
   14000bf43:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf48:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bf4d:	add    rsp,0x20
   14000bf51:	pop    rdi
   14000bf52:	ret    
   14000bf53:	xor    r9d,r9d
   14000bf56:	xor    r8d,r8d
   14000bf59:	mov    ecx,0xc000008c
   14000bf5e:	lea    edx,[r9+0x1]
   14000bf62:	call   QWORD PTR [rip+0x2d360]        # 0x1400392c8
   14000bf68:	int3   
   14000bf69:	int3   
   14000bf6a:	int3   
   14000bf6b:	int3   
   14000bf6c:	rex push rbp
   14000bf6e:	push   rsi
   14000bf6f:	push   rdi
   14000bf70:	push   r14
   14000bf72:	push   r15
   14000bf74:	lea    rbp,[rsp-0xf80]
   14000bf7c:	mov    eax,0x1080
   14000bf81:	call   0x140028810
   14000bf86:	sub    rsp,rax
   14000bf89:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000bf92:	mov    QWORD PTR [rsp+0x10c0],rbx
   14000bf9a:	mov    rax,QWORD PTR [rip+0x414a7]        # 0x14004d448
   14000bfa1:	xor    rax,rsp
   14000bfa4:	mov    QWORD PTR [rbp+0xf70],rax
   14000bfab:	mov    rdi,rcx
   14000bfae:	mov    rax,QWORD PTR [rcx+0x21f8]
   14000bfb5:	cmp    QWORD PTR [rcx+0x21f0],rax
   14000bfbc:	je     0x14000c16b
   14000bfc2:	xor    r14d,r14d
   14000bfc5:	mov    QWORD PTR [rsp+0x40],r14
   14000bfca:	mov    QWORD PTR [rsp+0x48],r14
   14000bfcf:	lea    r15d,[r14+0x7]
   14000bfd3:	mov    QWORD PTR [rsp+0x48],r15
   14000bfd8:	mov    QWORD PTR [rsp+0x40],r14
   14000bfdd:	mov    WORD PTR [rsp+0x30],r14w
   14000bfe3:	lea    rcx,[rsp+0x30]
   14000bfe8:	call   0x1400034e4
   14000bfed:	nop
   14000bfee:	lea    eax,[r14+0x2e]
   14000bff2:	mov    WORD PTR [rsp+0x20],ax
   14000bff7:	lea    rdx,[rsp+0x20]
   14000bffc:	lea    rcx,[rsp+0x30]
   14000c001:	call   0x1400077b8
   14000c006:	cmp    rax,0xffffffffffffffff
   14000c00a:	je     0x14000c052
   14000c00c:	mov    r9,rax
   14000c00f:	xor    r8d,r8d
   14000c012:	lea    rdx,[rsp+0x50]
   14000c017:	lea    rcx,[rsp+0x30]
   14000c01c:	call   0x14000776c
   14000c021:	nop
   14000c022:	mov    rdx,rax
   14000c025:	lea    rcx,[rsp+0x30]
   14000c02a:	call   0x140003c58
   14000c02f:	nop
   14000c030:	cmp    QWORD PTR [rsp+0x68],0x8
   14000c036:	jb     0x14000c042
   14000c038:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c03d:	call   0x140020e30
   14000c042:	mov    QWORD PTR [rsp+0x68],r15
   14000c047:	mov    QWORD PTR [rsp+0x60],r14
   14000c04c:	mov    WORD PTR [rsp+0x50],r14w
   14000c052:	mov    eax,0x5c
   14000c057:	mov    WORD PTR [rsp+0x20],ax
   14000c05c:	lea    rdx,[rsp+0x20]
   14000c061:	lea    rcx,[rsp+0x30]
   14000c066:	call   0x1400077b8
   14000c06b:	cmp    rax,0xffffffffffffffff
   14000c06f:	je     0x14000c0c0
   14000c071:	lea    r8,[rax+0x1]
   14000c075:	cmp    r8,QWORD PTR [rsp+0x40]
   14000c07a:	jae    0x14000c0c0
   14000c07c:	or     r9,0xffffffffffffffff
   14000c080:	lea    rdx,[rsp+0x50]
   14000c085:	lea    rcx,[rsp+0x30]
   14000c08a:	call   0x14000776c
   14000c08f:	nop
   14000c090:	mov    rdx,rax
   14000c093:	lea    rcx,[rsp+0x30]
   14000c098:	call   0x140003c58
   14000c09d:	nop
   14000c09e:	cmp    QWORD PTR [rsp+0x68],0x8
   14000c0a4:	jb     0x14000c0b0
   14000c0a6:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c0ab:	call   0x140020e30
   14000c0b0:	mov    QWORD PTR [rsp+0x68],r15
   14000c0b5:	mov    QWORD PTR [rsp+0x60],r14
   14000c0ba:	mov    WORD PTR [rsp+0x50],r14w
   14000c0c0:	mov    sil,r14b
   14000c0c3:	mov    rbx,QWORD PTR [rdi+0x21f0]
   14000c0ca:	cmp    rbx,QWORD PTR [rdi+0x21f8]
   14000c0d1:	je     0x14000c149
   14000c0d3:	movsxd rax,DWORD PTR [rdi+0x21b0]
   14000c0da:	cmp    rax,0x5a
   14000c0de:	jae    0x14000c13b
   14000c0e0:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c0e5:	jb     0x14000c0ec
   14000c0e7:	mov    r8,QWORD PTR [rbx]
   14000c0ea:	jmp    0x14000c0ef
   14000c0ec:	mov    r8,rbx
   14000c0ef:	lea    r9,[rsp+0x30]
   14000c0f4:	cmp    QWORD PTR [rsp+0x48],0x8
   14000c0fa:	cmovae r9,QWORD PTR [rsp+0x30]
   14000c100:	mov    edx,0x800
   14000c105:	lea    rcx,[rsp+0x70]
   14000c10a:	call   0x14002c558
   14000c10f:	test   eax,eax
   14000c111:	jle    0x14000c12e
   14000c113:	lea    rdx,[rsp+0x70]
   14000c118:	mov    rcx,rdi
   14000c11b:	call   0x14000c194
   14000c120:	movzx  esi,sil
   14000c124:	mov    ecx,0x1
   14000c129:	test   al,al
   14000c12b:	cmovne esi,ecx
   14000c12e:	add    rbx,0x20
   14000c132:	cmp    rbx,QWORD PTR [rdi+0x21f8]
   14000c139:	jne    0x14000c0d3
   14000c13b:	test   sil,sil
   14000c13e:	je     0x14000c149
   14000c140:	mov    rcx,rdi
   14000c143:	call   0x14000c87c
   14000c148:	nop
   14000c149:	cmp    QWORD PTR [rsp+0x48],0x8
   14000c14f:	jb     0x14000c15b
   14000c151:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c156:	call   0x140020e30
   14000c15b:	mov    QWORD PTR [rsp+0x48],r15
   14000c160:	mov    QWORD PTR [rsp+0x40],r14
   14000c165:	mov    WORD PTR [rsp+0x30],r14w
   14000c16b:	mov    rcx,QWORD PTR [rbp+0xf70]
   14000c172:	xor    rcx,rsp
   14000c175:	call   0x140020e50
   14000c17a:	mov    rbx,QWORD PTR [rsp+0x10c0]
   14000c182:	add    rsp,0x1080
   14000c189:	pop    r15
   14000c18b:	pop    r14
   14000c18d:	pop    rdi
   14000c18e:	pop    rsi
   14000c18f:	pop    rbp
   14000c190:	ret    
   14000c191:	int3   
   14000c192:	int3   
   14000c193:	int3   
   14000c194:	rex push rdi
   14000c196:	sub    rsp,0x40
   14000c19a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c1a3:	mov    QWORD PTR [rsp+0x58],rbx
   14000c1a8:	mov    QWORD PTR [rsp+0x60],rsi
   14000c1ad:	mov    rsi,rdx
   14000c1b0:	mov    rdi,rcx
   14000c1b3:	movsxd rax,DWORD PTR [rcx+0x21b0]
   14000c1ba:	cmp    rax,0x5a
   14000c1be:	jae    0x14000c23a
   14000c1c0:	lea    rbx,[rcx+0x21b8]
   14000c1c7:	cmp    DWORD PTR [rbx],0x0
   14000c1ca:	jne    0x14000c1d3
   14000c1cc:	mov    eax,0xc0000bbc
   14000c1d1:	jmp    0x14000c22a
   14000c1d3:	mov    rcx,rbx
   14000c1d6:	call   0x140013bd0
   14000c1db:	test   eax,eax
   14000c1dd:	jne    0x14000c203
   14000c1df:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c1e3:	mov    rax,QWORD PTR [rbx+0x28]
   14000c1e7:	lea    r9,[rax+rcx*8]
   14000c1eb:	xor    r8d,r8d
   14000c1ee:	mov    rdx,rsi
   14000c1f1:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c1f5:	call   QWORD PTR [rip+0x2d495]        # 0x140039690
   14000c1fb:	test   eax,eax
   14000c1fd:	jne    0x14000c203
   14000c1ff:	inc    QWORD PTR [rbx+0x10]
   14000c203:	cmp    eax,0x800007d1
   14000c208:	je     0x14000c233
   14000c20a:	cmp    eax,0xc0000bb7
   14000c20f:	jle    0x14000c22a
   14000c211:	cmp    eax,0xc0000bb9
   14000c216:	jle    0x14000c233
   14000c218:	cmp    eax,0xc0000bbe
   14000c21d:	jle    0x14000c22a
   14000c21f:	cmp    eax,0xc0000bc0
   14000c224:	jle    0x14000c233
   14000c226:	test   eax,eax
   14000c228:	je     0x14000c276
   14000c22a:	mov    ecx,eax
   14000c22c:	call   0x140004908
   14000c231:	jmp    0x14000c247
   14000c233:	mov    ecx,0xa1230934
   14000c238:	jmp    0x14000c23f
   14000c23a:	mov    ecx,0xa1230935
   14000c23f:	xor    r8d,r8d
   14000c242:	call   0x1400048b4
   14000c247:	test   rax,rax
   14000c24a:	je     0x14000c276
   14000c24c:	mov    rcx,QWORD PTR [rdi+0x1558]
   14000c253:	mov    QWORD PTR [rsp+0x28],rsi
   14000c258:	mov    QWORD PTR [rsp+0x30],rax
   14000c25d:	mov    rax,QWORD PTR [rcx]
   14000c260:	lea    r9,[rsp+0x28]
   14000c265:	mov    edx,0xa1230933
   14000c26a:	mov    r8d,0x2
   14000c270:	call   QWORD PTR [rax]
   14000c272:	xor    al,al
   14000c274:	jmp    0x14000c2b2
   14000c276:	mov    rdx,rsi
   14000c279:	lea    rcx,[rsp+0x50]
   14000c27e:	call   0x140005714
   14000c283:	nop
   14000c284:	lea    rcx,[rdi+0x21a8]
   14000c28b:	lea    rdx,[rsp+0x50]
   14000c290:	call   0x140009028
   14000c295:	nop
   14000c296:	mov    rax,QWORD PTR [rsp+0x50]
   14000c29b:	lea    rdx,[rax-0x18]
   14000c29f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c2a4:	jg     0x14000c2b0
   14000c2a6:	mov    rcx,QWORD PTR [rdx]
   14000c2a9:	mov    r8,QWORD PTR [rcx]
   14000c2ac:	call   QWORD PTR [r8+0x8]
   14000c2b0:	mov    al,0x1
   14000c2b2:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c2b7:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c2bc:	add    rsp,0x40
   14000c2c0:	pop    rdi
   14000c2c1:	ret    
   14000c2c2:	int3   
   14000c2c3:	int3   
   14000c2c4:	mov    rax,rsp
   14000c2c7:	mov    QWORD PTR [rax+0x8],rbx
   14000c2cb:	mov    QWORD PTR [rax+0x10],rbp
   14000c2cf:	mov    QWORD PTR [rax+0x18],rsi
   14000c2d3:	mov    QWORD PTR [rax+0x20],rdi
   14000c2d7:	push   r14
   14000c2d9:	sub    rsp,0x20
   14000c2dd:	mov    r14,rcx
   14000c2e0:	mov    rcx,QWORD PTR [rcx+0x1558]
   14000c2e7:	mov    ebx,edx
   14000c2e9:	shr    ebx,0x1e
   14000c2ec:	mov    rsi,r9
   14000c2ef:	mov    ebp,r8d
   14000c2f2:	mov    edi,edx
   14000c2f4:	test   rcx,rcx
   14000c2f7:	je     0x14000c2fe
   14000c2f9:	mov    rax,QWORD PTR [rcx]
   14000c2fc:	call   QWORD PTR [rax]
   14000c2fe:	lea    eax,[rbx-0x2]
   14000c301:	cmp    eax,0x1
   14000c304:	ja     0x14000c317
   14000c306:	lea    rcx,[r14+0x8]
   14000c30a:	mov    r9,rsi
   14000c30d:	mov    r8d,ebp
   14000c310:	mov    rax,QWORD PTR [rcx]
   14000c313:	mov    edx,edi
   14000c315:	call   QWORD PTR [rax]
   14000c317:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c31c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c321:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c326:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c32b:	add    rsp,0x20
   14000c32f:	pop    r14
   14000c331:	ret    
   14000c332:	int3   
   14000c333:	int3   
   14000c334:	mov    rax,rsp
   14000c337:	mov    QWORD PTR [rax+0x8],rbx
   14000c33b:	mov    QWORD PTR [rax+0x10],rbp
   14000c33f:	mov    QWORD PTR [rax+0x18],rsi
   14000c343:	mov    QWORD PTR [rax+0x20],rdi
   14000c347:	push   r14
   14000c349:	sub    rsp,0x20
   14000c34d:	mov    r14,rcx
   14000c350:	mov    rcx,QWORD PTR [rcx+0x1558]
   14000c357:	mov    ebx,edx
   14000c359:	shr    ebx,0x1e
   14000c35c:	mov    rsi,r9
   14000c35f:	mov    ebp,r8d
   14000c362:	mov    edi,edx
   14000c364:	test   rcx,rcx
   14000c367:	je     0x14000c36f
   14000c369:	mov    rax,QWORD PTR [rcx]
   14000c36c:	call   QWORD PTR [rax+0x8]
   14000c36f:	lea    eax,[rbx-0x2]
   14000c372:	cmp    eax,0x1
   14000c375:	ja     0x14000c389
   14000c377:	lea    rcx,[r14+0x8]
   14000c37b:	mov    r9,rsi
   14000c37e:	mov    r8d,ebp
   14000c381:	mov    rax,QWORD PTR [rcx]
   14000c384:	mov    edx,edi
   14000c386:	call   QWORD PTR [rax+0x8]
   14000c389:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c38e:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c393:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c398:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c39d:	add    rsp,0x20
   14000c3a1:	pop    r14
   14000c3a3:	ret    
   14000c3a4:	mov    rax,rsp
   14000c3a7:	push   rbp
   14000c3a8:	lea    rbp,[rax-0x38]
   14000c3ac:	sub    rsp,0x130
   14000c3b3:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14000c3bc:	mov    QWORD PTR [rax+0x8],rbx
   14000c3c0:	mov    QWORD PTR [rax+0x10],rsi
   14000c3c4:	mov    QWORD PTR [rax+0x18],rdi
   14000c3c8:	mov    rax,QWORD PTR [rip+0x41079]        # 0x14004d448
   14000c3cf:	xor    rax,rsp
   14000c3d2:	mov    QWORD PTR [rbp+0x20],rax
   14000c3d6:	mov    rbx,rcx
   14000c3d9:	mov    DWORD PTR [rbp-0x80],0x9c
   14000c3e0:	xor    edx,edx
   14000c3e2:	mov    r8d,0x98
   14000c3e8:	lea    rcx,[rbp-0x7c]
   14000c3ec:	call   0x1400260e0
   14000c3f1:	lea    rcx,[rbp-0x80]
   14000c3f5:	call   QWORD PTR [rip+0x2d01d]        # 0x140039418
   14000c3fb:	xor    edi,edi
   14000c3fd:	mov    QWORD PTR [rsp+0x48],rdi
   14000c402:	mov    QWORD PTR [rsp+0x58],rdi
   14000c407:	mov    QWORD PTR [rsp+0x68],rdi
   14000c40c:	call   QWORD PTR [rip+0x2cefe]        # 0x140039310
   14000c412:	lea    r8,[rsp+0x40]
   14000c417:	lea    edx,[rdi+0x28]
   14000c41a:	mov    rcx,rax
   14000c41d:	call   QWORD PTR [rip+0x2ccb5]        # 0x1400390d8
   14000c423:	neg    eax
   14000c425:	sbb    rcx,rcx
   14000c428:	and    rcx,QWORD PTR [rsp+0x40]
   14000c42d:	mov    QWORD PTR [rsp+0x40],rcx
   14000c432:	lea    esi,[rdi+0x6]
   14000c435:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c43a:	jne    0x14000c446
   14000c43c:	mov    ecx,esi
   14000c43e:	call   QWORD PTR [rip+0x2cd84]        # 0x1400391c8
   14000c444:	jmp    0x14000c489
   14000c446:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c44b:	test   rcx,rcx
   14000c44e:	jne    0x14000c468
   14000c450:	lea    rcx,[rsp+0x40]
   14000c455:	call   0x140005ebc
   14000c45a:	test   eax,eax
   14000c45c:	jne    0x14000c463
   14000c45e:	lea    ecx,[rax+0xd]
   14000c461:	jmp    0x14000c43e
   14000c463:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c468:	mov    edx,edi
   14000c46a:	cmp    DWORD PTR [rcx],edi
   14000c46c:	jbe    0x14000c489
   14000c46e:	mov    eax,edx
   14000c470:	inc    rax
   14000c473:	lea    rax,[rax+rax*2]
   14000c477:	mov    DWORD PTR [rcx+rax*4],0x4
   14000c47e:	inc    edx
   14000c480:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c485:	cmp    edx,DWORD PTR [rcx]
   14000c487:	jb     0x14000c46e
   14000c489:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c48e:	jne    0x14000c49a
   14000c490:	mov    ecx,esi
   14000c492:	call   QWORD PTR [rip+0x2cd30]        # 0x1400391c8
   14000c498:	jmp    0x14000c4ab
   14000c49a:	lea    rdx,[rip+0x31f8f]        # 0x14003e430
   14000c4a1:	lea    rcx,[rsp+0x40]
   14000c4a6:	call   0x140005f78
   14000c4ab:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c4b0:	jne    0x14000c4bc
   14000c4b2:	mov    ecx,esi
   14000c4b4:	call   QWORD PTR [rip+0x2cd0e]        # 0x1400391c8
   14000c4ba:	jmp    0x14000c4cd
   14000c4bc:	lea    rdx,[rip+0x31f85]        # 0x14003e448
   14000c4c3:	lea    rcx,[rsp+0x40]
   14000c4c8:	call   0x140005f78
   14000c4cd:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c4d2:	jne    0x14000c4db
   14000c4d4:	mov    ecx,esi
   14000c4d6:	jmp    0x14000c644
   14000c4db:	lea    rdx,[rip+0x31f86]        # 0x14003e468
   14000c4e2:	lea    rcx,[rsp+0x40]
   14000c4e7:	call   0x140005f78
   14000c4ec:	test   eax,eax
   14000c4ee:	je     0x14000c693
   14000c4f4:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c4f9:	jne    0x14000c505
   14000c4fb:	mov    ecx,esi
   14000c4fd:	call   QWORD PTR [rip+0x2ccc5]        # 0x1400391c8
   14000c503:	jmp    0x14000c51a
   14000c505:	lea    rdx,[rip+0x31f74]        # 0x14003e480
   14000c50c:	lea    rcx,[rsp+0x40]
   14000c511:	call   0x140005f78
   14000c516:	test   eax,eax
   14000c518:	jne    0x14000c546
   14000c51a:	mov    DWORD PTR [rsp+0x38],0x1
   14000c522:	mov    DWORD PTR [rsp+0x3c],0xe1230579
   14000c52a:	mov    rax,QWORD PTR [rsp+0x38]
   14000c52f:	mov    QWORD PTR [rsp+0x30],rax
   14000c534:	lea    rdx,[rip+0x3e6bd]        # 0x14004abf8
   14000c53b:	lea    rcx,[rsp+0x30]
   14000c540:	call   0x1400265e8
   14000c545:	int3   
   14000c546:	cmp    DWORD PTR [rbp-0x7c],esi
   14000c549:	jb     0x14000c571
   14000c54b:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c550:	jne    0x14000c55c
   14000c552:	mov    ecx,esi
   14000c554:	call   QWORD PTR [rip+0x2cc6e]        # 0x1400391c8
   14000c55a:	jmp    0x14000c58d
   14000c55c:	lea    rdx,[rip+0x31f35]        # 0x14003e498
   14000c563:	lea    rcx,[rsp+0x40]
   14000c568:	call   0x140005f78
   14000c56d:	test   eax,eax
   14000c56f:	je     0x14000c58d
   14000c571:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c576:	je     0x14000c552
   14000c578:	lea    rdx,[rip+0x31009]        # 0x14003d588
   14000c57f:	lea    rcx,[rsp+0x40]
   14000c584:	call   0x140005f78
   14000c589:	test   eax,eax
   14000c58b:	jne    0x14000c593
   14000c58d:	mov    DWORD PTR [rip+0x41f6d],edi        # 0x14004e500
   14000c593:	cmp    DWORD PTR [rbx+0x214c],0x1
   14000c59a:	jne    0x14000c622
   14000c5a0:	mov    DWORD PTR [rsp+0x38],edi
   14000c5a4:	call   QWORD PTR [rip+0x2cf5e]        # 0x140039508
   14000c5aa:	mov    ecx,eax
   14000c5ac:	lea    rdx,[rsp+0x38]
   14000c5b1:	call   QWORD PTR [rip+0x2cf71]        # 0x140039528
   14000c5b7:	cmp    DWORD PTR [rsp+0x38],edi
   14000c5bb:	je     0x14000c622
   14000c5bd:	cmp    DWORD PTR [rbp-0x7c],0x5
   14000c5c1:	jne    0x14000c5d0
   14000c5c3:	cmp    DWORD PTR [rbp-0x78],0x1
   14000c5c7:	jne    0x14000c5d0
   14000c5c9:	cmp    WORD PTR [rbp+0x14],0x2
   14000c5ce:	jb     0x14000c622
   14000c5d0:	cmp    QWORD PTR [rsp+0x40],rdi
   14000c5d5:	jne    0x14000c5e1
   14000c5d7:	mov    ecx,esi
   14000c5d9:	call   QWORD PTR [rip+0x2cbe9]        # 0x1400391c8
   14000c5df:	jmp    0x14000c5f6
   14000c5e1:	lea    rdx,[rip+0x31ec8]        # 0x14003e4b0
   14000c5e8:	lea    rcx,[rsp+0x40]
   14000c5ed:	call   0x140005f78
   14000c5f2:	test   eax,eax
   14000c5f4:	jne    0x14000c622
   14000c5f6:	mov    DWORD PTR [rsp+0x30],0x1
   14000c5fe:	mov    DWORD PTR [rsp+0x34],0xe123057a
   14000c606:	mov    rax,QWORD PTR [rsp+0x30]
   14000c60b:	mov    QWORD PTR [rsp+0x30],rax
   14000c610:	lea    rdx,[rip+0x3e5e1]        # 0x14004abf8
   14000c617:	lea    rcx,[rsp+0x30]
   14000c61c:	call   0x1400265e8
   14000c621:	int3   
   14000c622:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c627:	test   rcx,rcx
   14000c62a:	jne    0x14000c636
   14000c62c:	mov    ecx,esi
   14000c62e:	call   QWORD PTR [rip+0x2cb94]        # 0x1400391c8
   14000c634:	jmp    0x14000c667
   14000c636:	mov    r8,QWORD PTR [rsp+0x48]
   14000c63b:	test   r8,r8
   14000c63e:	jne    0x14000c64c
   14000c640:	lea    ecx,[r8+0xd]
   14000c644:	call   QWORD PTR [rip+0x2cb7e]        # 0x1400391c8
   14000c64a:	jmp    0x14000c693
   14000c64c:	mov    QWORD PTR [rsp+0x28],rdi
   14000c651:	mov    QWORD PTR [rsp+0x20],rdi
   14000c656:	mov    r9d,DWORD PTR [rsp+0x50]
   14000c65b:	xor    edx,edx
   14000c65d:	call   QWORD PTR [rip+0x2ca8d]        # 0x1400390f0
   14000c663:	test   eax,eax
   14000c665:	jne    0x14000c693
   14000c667:	mov    DWORD PTR [rsp+0x30],0x1
   14000c66f:	mov    DWORD PTR [rsp+0x34],0xe123057a
   14000c677:	mov    rax,QWORD PTR [rsp+0x30]
   14000c67c:	mov    QWORD PTR [rsp+0x30],rax
   14000c681:	lea    rdx,[rip+0x3e570]        # 0x14004abf8
   14000c688:	lea    rcx,[rsp+0x30]
   14000c68d:	call   0x1400265e8
   14000c692:	nop
   14000c693:	lea    rcx,[rsp+0x40]
   14000c698:	call   0x140006018
   14000c69d:	mov    al,0x1
   14000c69f:	mov    rcx,QWORD PTR [rbp+0x20]
   14000c6a3:	xor    rcx,rsp
   14000c6a6:	call   0x140020e50
   14000c6ab:	lea    r11,[rsp+0x130]
   14000c6b3:	mov    rbx,QWORD PTR [r11+0x10]
   14000c6b7:	mov    rsi,QWORD PTR [r11+0x18]
   14000c6bb:	mov    rdi,QWORD PTR [r11+0x20]
   14000c6bf:	mov    rsp,r11
   14000c6c2:	pop    rbp
   14000c6c3:	ret    
   14000c6c4:	mov    rax,rsp
   14000c6c7:	mov    QWORD PTR [rax+0x8],rbx
   14000c6cb:	mov    QWORD PTR [rax+0x10],rbp
   14000c6cf:	mov    QWORD PTR [rax+0x18],rsi
   14000c6d3:	mov    QWORD PTR [rax+0x20],rdi
   14000c6d7:	push   r14
   14000c6d9:	sub    rsp,0x20
   14000c6dd:	movsxd rax,DWORD PTR [rcx+0x2210]
   14000c6e4:	mov    rbx,rcx
   14000c6e7:	mov    r14d,0x1
   14000c6ed:	mov    rcx,rax
   14000c6f0:	test   eax,eax
   14000c6f2:	jle    0x14000c842
   14000c6f8:	lea    esi,[rax-0x1]
   14000c6fb:	lea    rbp,[rcx-0x1]
   14000c6ff:	test   rbp,rbp
   14000c702:	js     0x14000c864
   14000c708:	cmp    esi,DWORD PTR [rbx+0x2210]
   14000c70e:	jge    0x14000c864
   14000c714:	mov    rax,QWORD PTR [rbx+0x2208]
   14000c71b:	mov    r8d,r14d
   14000c71e:	mov    rdi,QWORD PTR [rax+rcx*8-0x8]
   14000c723:	lea    rcx,[rbx+0x2a0]
   14000c72a:	mov    rax,QWORD PTR [rcx]
   14000c72d:	mov    rdx,rdi
   14000c730:	call   QWORD PTR [rax]
   14000c732:	test   eax,eax
   14000c734:	jne    0x14000c860
   14000c73a:	lea    rcx,[rbx+0x118]
   14000c741:	mov    r8d,r14d
   14000c744:	mov    rdx,rdi
   14000c747:	mov    rax,QWORD PTR [rcx]
   14000c74a:	call   QWORD PTR [rax]
   14000c74c:	test   eax,eax
   14000c74e:	jne    0x14000c860
   14000c754:	lea    rcx,[rbx+0x11e0]
   14000c75b:	mov    r8d,r14d
   14000c75e:	mov    rdx,rdi
   14000c761:	mov    rax,QWORD PTR [rcx]
   14000c764:	call   QWORD PTR [rax]
   14000c766:	test   eax,eax
   14000c768:	jne    0x14000c860
   14000c76e:	lea    rcx,[rbx+0x58]
   14000c772:	mov    r8d,0x100002
   14000c778:	mov    rdx,rdi
   14000c77b:	mov    rax,QWORD PTR [rcx]
   14000c77e:	call   QWORD PTR [rax]
   14000c780:	test   eax,eax
   14000c782:	jne    0x14000c860
   14000c788:	lea    rcx,[rbx+0x70]
   14000c78c:	mov    r8d,0x100002
   14000c792:	mov    rdx,rdi
   14000c795:	mov    rax,QWORD PTR [rcx]
   14000c798:	call   QWORD PTR [rax]
   14000c79a:	test   eax,eax
   14000c79c:	jne    0x14000c860
   14000c7a2:	lea    rcx,[rbx+0x88]
   14000c7a9:	mov    r8d,0x100002
   14000c7af:	mov    rdx,rdi
   14000c7b2:	mov    rax,QWORD PTR [rcx]
   14000c7b5:	call   QWORD PTR [rax]
   14000c7b7:	test   eax,eax
   14000c7b9:	jne    0x14000c860
   14000c7bf:	lea    rcx,[rbx+0xa0]
   14000c7c6:	mov    r8d,0x100002
   14000c7cc:	mov    rdx,rdi
   14000c7cf:	mov    rax,QWORD PTR [rcx]
   14000c7d2:	call   QWORD PTR [rax]
   14000c7d4:	test   eax,eax
   14000c7d6:	jne    0x14000c860
   14000c7dc:	lea    rcx,[rbx+0xe8]
   14000c7e3:	mov    r8d,0x100001
   14000c7e9:	mov    rdx,rdi
   14000c7ec:	mov    rax,QWORD PTR [rcx]
   14000c7ef:	call   QWORD PTR [rax]
   14000c7f1:	test   eax,eax
   14000c7f3:	jne    0x14000c860
   14000c7f5:	lea    rcx,[rbx+0xf8]
   14000c7fc:	mov    r8d,0x100400
   14000c802:	mov    rdx,rdi
   14000c805:	mov    rax,QWORD PTR [rcx]
   14000c808:	call   QWORD PTR [rax]
   14000c80a:	test   eax,eax
   14000c80c:	jne    0x14000c860
   14000c80e:	mov    rcx,QWORD PTR [rbx+0x108]
   14000c815:	test   rcx,rcx
   14000c818:	je     0x14000c82a
   14000c81a:	mov    rax,QWORD PTR [rcx]
   14000c81d:	mov    r8d,0x8
   14000c823:	mov    rdx,rdi
   14000c826:	call   QWORD PTR [rax]
   14000c828:	jmp    0x14000c82f
   14000c82a:	mov    eax,0x5
   14000c82f:	test   eax,eax
   14000c831:	jne    0x14000c860
   14000c833:	sub    esi,r14d
   14000c836:	mov    rcx,rbp
   14000c839:	test   rbp,rbp
   14000c83c:	jg     0x14000c6fb
   14000c842:	mov    eax,r14d
   14000c845:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c84a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c84f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c854:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c859:	add    rsp,0x20
   14000c85d:	pop    r14
   14000c85f:	ret    
   14000c860:	xor    eax,eax
   14000c862:	jmp    0x14000c845
   14000c864:	xor    r9d,r9d
   14000c867:	xor    r8d,r8d
   14000c86a:	mov    edx,r14d
   14000c86d:	mov    ecx,0xc000008c
   14000c872:	call   QWORD PTR [rip+0x2ca50]        # 0x1400392c8
   14000c878:	int3   
   14000c879:	int3   
   14000c87a:	int3   
   14000c87b:	int3   
   14000c87c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c881:	mov    QWORD PTR [rsp+0x10],rbp
   14000c886:	mov    QWORD PTR [rsp+0x18],rsi
   14000c88b:	push   rdi
   14000c88c:	push   r12
   14000c88e:	push   r13
   14000c890:	push   r14
   14000c892:	push   r15
   14000c894:	sub    rsp,0x20
   14000c898:	mov    ebp,DWORD PTR [rcx+0x21b0]
   14000c89e:	xor    eax,eax
   14000c8a0:	mov    rsi,rcx
   14000c8a3:	mov    ebx,eax
   14000c8a5:	test   ebp,ebp
   14000c8a7:	je     0x14000c95b
   14000c8ad:	mov    r15d,eax
   14000c8b0:	lea    ecx,[rax+0x1]
   14000c8b3:	test   ebx,ebx
   14000c8b5:	js     0x14000c978
   14000c8bb:	cmp    ebx,DWORD PTR [rsi+0x21b0]
   14000c8c1:	jge    0x14000c978
   14000c8c7:	mov    rax,QWORD PTR [rsi+0x21a8]
   14000c8ce:	lea    r12,[rsi+0x1018]
   14000c8d5:	mov    r13,QWORD PTR [r15+rax*1]
   14000c8d9:	mov    rcx,r12
   14000c8dc:	call   0x140010d78
   14000c8e1:	or     rdi,0xffffffffffffffff
   14000c8e5:	mov    DWORD PTR [rax],0x13
   14000c8eb:	mov    DWORD PTR [rax+0x8],ebx
   14000c8ee:	mov    r14,rax
   14000c8f1:	xor    eax,eax
   14000c8f3:	inc    rdi
   14000c8f6:	cmp    WORD PTR [r13+rdi*2+0x0],ax
   14000c8fc:	jne    0x14000c8f3
   14000c8fe:	cmp    rdi,0x179
   14000c905:	jbe    0x14000c914
   14000c907:	mov    rdx,r14
   14000c90a:	mov    rcx,r12
   14000c90d:	call   0x140010e2c
   14000c912:	jmp    0x14000c948
   14000c914:	lea    rcx,[r14+0xc]
   14000c918:	mov    r8,r13
   14000c91b:	mov    edx,0x17a
   14000c920:	call   0x140008194
   14000c925:	mov    eax,0x1
   14000c92a:	mov    rdx,r14
   14000c92d:	add    eax,edi
   14000c92f:	add    di,0x7
   14000c933:	mov    rcx,r12
   14000c936:	add    di,di
   14000c939:	mov    WORD PTR [r14+0x6],ax
   14000c93e:	mov    WORD PTR [r14+0x4],di
   14000c943:	call   0x140010f08
   14000c948:	mov    ecx,0x1
   14000c94d:	add    r15,0x8
   14000c951:	add    ebx,ecx
   14000c953:	cmp    ebx,ebp
   14000c955:	jb     0x14000c8b3
   14000c95b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c960:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c965:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c96a:	add    rsp,0x20
   14000c96e:	pop    r15
   14000c970:	pop    r14
   14000c972:	pop    r13
   14000c974:	pop    r12
   14000c976:	pop    rdi
   14000c977:	ret    
   14000c978:	mov    edx,ecx
   14000c97a:	xor    r9d,r9d
   14000c97d:	xor    r8d,r8d
   14000c980:	mov    ecx,0xc000008c
   14000c985:	call   QWORD PTR [rip+0x2c93d]        # 0x1400392c8
   14000c98b:	int3   
   14000c98c:	mov    rax,rsp
   14000c98f:	mov    QWORD PTR [rax+0x8],rbx
   14000c993:	mov    QWORD PTR [rax+0x10],rbp
   14000c997:	mov    QWORD PTR [rax+0x18],rsi
   14000c99b:	mov    QWORD PTR [rax+0x20],rdi
   14000c99f:	push   r14
   14000c9a1:	sub    rsp,0x30
   14000c9a5:	mov    rbx,rcx
   14000c9a8:	mov    rcx,QWORD PTR [rcx+0x21c0]
   14000c9af:	mov    ebp,r9d
   14000c9b2:	mov    r14,r8
   14000c9b5:	mov    rsi,rdx
   14000c9b8:	call   QWORD PTR [rip+0x2cce2]        # 0x1400396a0
   14000c9be:	test   eax,eax
   14000c9c0:	je     0x14000c9dd
   14000c9c2:	mov    r8,QWORD PTR [rbx+0x21c8]
   14000c9c9:	mov    rcx,QWORD PTR [rbx+0x21d8]
   14000c9d0:	xor    edx,edx
   14000c9d2:	shl    r8,0x3
   14000c9d6:	call   0x1400260e0
   14000c9db:	jmp    0x14000ca34
   14000c9dd:	xor    edi,edi
   14000c9df:	cmp    QWORD PTR [rbx+0x21c8],rdi
   14000c9e6:	jbe    0x14000ca34
   14000c9e8:	mov    rcx,QWORD PTR [rbx+0x21e0]
   14000c9ef:	lea    r9,[rsp+0x20]
   14000c9f4:	xor    r8d,r8d
   14000c9f7:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14000c9fb:	mov    edx,0x8400
   14000ca00:	call   QWORD PTR [rip+0x2cca2]        # 0x1400396a8
   14000ca06:	test   eax,eax
   14000ca08:	jne    0x14000ca1c
   14000ca0a:	mov    rcx,QWORD PTR [rbx+0x21d8]
   14000ca11:	mov    rax,QWORD PTR [rsp+0x28]
   14000ca16:	mov    QWORD PTR [rcx+rdi*8],rax
   14000ca1a:	jmp    0x14000ca28
   14000ca1c:	mov    rax,QWORD PTR [rbx+0x21d8]
   14000ca23:	and    QWORD PTR [rax+rdi*8],0x0
   14000ca28:	inc    rdi
   14000ca2b:	cmp    rdi,QWORD PTR [rbx+0x21c8]
   14000ca32:	jb     0x14000c9e8
   14000ca34:	mov    edx,DWORD PTR [rbx+0x21c8]
   14000ca3a:	mov    r8,QWORD PTR [rbx+0x21d8]
   14000ca41:	cmp    ebp,edx
   14000ca43:	cmovb  edx,ebp
   14000ca46:	test   edx,edx
   14000ca48:	je     0x14000ca60
   14000ca4a:	sub    r8,rsi
   14000ca4d:	mov    r9d,edx
   14000ca50:	mov    rcx,QWORD PTR [r8+rsi*1]
   14000ca54:	mov    QWORD PTR [rsi],rcx
   14000ca57:	lea    rsi,[rsi+0x8]
   14000ca5b:	dec    r9
   14000ca5e:	jne    0x14000ca50
   14000ca60:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ca65:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ca6a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ca6f:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ca74:	mov    DWORD PTR [r14],edx
   14000ca77:	mov    eax,0x1
   14000ca7c:	add    rsp,0x30
   14000ca80:	pop    r14
   14000ca82:	ret    
   14000ca83:	int3   
   14000ca84:	rex push rbx
   14000ca86:	sub    rsp,0x20
   14000ca8a:	mov    rbx,rcx
   14000ca8d:	mov    rcx,QWORD PTR [rcx]
   14000ca90:	test   rcx,rcx
   14000ca93:	je     0x14000ca9e
   14000ca95:	call   0x140023328
   14000ca9a:	and    QWORD PTR [rbx],0x0
   14000ca9e:	and    DWORD PTR [rbx+0x8],0x0
   14000caa2:	and    DWORD PTR [rbx+0xc],0x0
   14000caa6:	add    rsp,0x20
   14000caaa:	pop    rbx
   14000caab:	ret    
   14000caac:	rex push rbx
   14000caae:	push   rsi
   14000caaf:	push   rdi
   14000cab0:	sub    rsp,0xc0
   14000cab7:	mov    rax,QWORD PTR [rip+0x4098a]        # 0x14004d448
   14000cabe:	xor    rax,rsp
   14000cac1:	mov    QWORD PTR [rsp+0xb0],rax
   14000cac9:	lea    rax,[rsp+0x30]
   14000cace:	mov    ebx,r9d
   14000cad1:	mov    rdi,rcx
   14000cad4:	mov    QWORD PTR [rsp+0x20],rax
   14000cad9:	mov    r9d,r8d
   14000cadc:	lea    rax,[rsp+0x70]
   14000cae1:	mov    esi,edx
   14000cae3:	lea    r8,[rip+0x31086]        # 0x14003db70
   14000caea:	lea    rcx,[rsp+0x30]
   14000caef:	mov    edx,0x3c
   14000caf4:	mov    QWORD PTR [rsp+0x28],rax
   14000caf9:	call   0x140001004
   14000cafe:	lea    r8,[rip+0x3106b]        # 0x14003db70
   14000cb05:	lea    rcx,[rsp+0x70]
   14000cb0a:	mov    r9d,ebx
   14000cb0d:	mov    edx,0x3c
   14000cb12:	call   0x140001004
   14000cb17:	mov    rax,QWORD PTR [rdi]
   14000cb1a:	lea    r9,[rsp+0x20]
   14000cb1f:	mov    r8d,0x2
   14000cb25:	mov    edx,esi
   14000cb27:	mov    rcx,rdi
   14000cb2a:	call   QWORD PTR [rax]
   14000cb2c:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000cb34:	xor    rcx,rsp
   14000cb37:	call   0x140020e50
   14000cb3c:	add    rsp,0xc0
   14000cb43:	pop    rdi
   14000cb44:	pop    rsi
   14000cb45:	pop    rbx
   14000cb46:	ret    
   14000cb47:	int3   
   14000cb48:	mov    QWORD PTR [rsp+0x8],rcx
   14000cb4d:	sub    rsp,0x38
   14000cb51:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cb5a:	add    rsp,0x38
   14000cb5e:	jmp    0x14000d740
   14000cb63:	int3   
   14000cb64:	mov    rax,rsp
   14000cb67:	mov    QWORD PTR [rax+0x8],rcx
   14000cb6b:	push   rdi
   14000cb6c:	sub    rsp,0x30
   14000cb70:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000cb78:	mov    QWORD PTR [rax+0x20],rbx
   14000cb7c:	mov    rdi,rcx
   14000cb7f:	lea    rbx,[rcx+0x48]
   14000cb83:	mov    QWORD PTR [rax+0x10],rbx
   14000cb87:	lea    rcx,[rbx+0x30]
   14000cb8b:	mov    QWORD PTR [rax+0x18],rcx
   14000cb8f:	mov    rcx,QWORD PTR [rcx+0x18]
   14000cb93:	call   0x14002b138
   14000cb98:	nop
   14000cb99:	lea    rcx,[rbx+0x10]
   14000cb9d:	call   0x14000e054
   14000cba2:	nop
   14000cba3:	lea    rcx,[rdi+0x38]
   14000cba7:	mov    QWORD PTR [rsp+0x48],rcx
   14000cbac:	call   0x14000d740
   14000cbb1:	nop
   14000cbb2:	mov    rax,QWORD PTR [rdi+0x8]
   14000cbb6:	test   rax,rax
   14000cbb9:	je     0x14000cbc5
   14000cbbb:	mov    rcx,QWORD PTR [rdi+0x8]
   14000cbbf:	call   QWORD PTR [rip+0x2c9fb]        # 0x1400395c0
   14000cbc5:	mov    QWORD PTR [rdi+0x8],0x0
   14000cbcd:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cbd2:	add    rsp,0x30
   14000cbd6:	pop    rdi
   14000cbd7:	ret    
   14000cbd8:	mov    QWORD PTR [rsp+0x18],rbx
   14000cbdd:	mov    QWORD PTR [rsp+0x20],rbp
   14000cbe2:	push   rsi
   14000cbe3:	push   rdi
   14000cbe4:	push   r12
   14000cbe6:	sub    rsp,0x20
   14000cbea:	mov    rdi,rcx
   14000cbed:	or     r12,0xffffffffffffffff
   14000cbf1:	mov    rcx,QWORD PTR [rdi]
   14000cbf4:	add    rcx,0x2b0
   14000cbfb:	mov    rax,QWORD PTR [rcx]
   14000cbfe:	call   QWORD PTR [rax+0x8]
   14000cc01:	test   rax,rax
   14000cc04:	je     0x14000cc0c
   14000cc06:	mov    eax,DWORD PTR [rax+0x498]
   14000cc0c:	test   eax,eax
   14000cc0e:	jne    0x14000cdcc
   14000cc14:	mov    ecx,0x1f4
   14000cc19:	call   QWORD PTR [rip+0x2c9d1]        # 0x1400395f0
   14000cc1f:	mov    eax,0x1
   14000cc24:	xchg   DWORD PTR [rdi+0x10],eax
   14000cc27:	test   eax,eax
   14000cc29:	je     0x14000cc9a
   14000cc2b:	mov    ecx,0x1000
   14000cc30:	mov    eax,DWORD PTR [rdi+0x10]
   14000cc33:	test   eax,eax
   14000cc35:	je     0x14000cc3f
   14000cc37:	pause  
   14000cc39:	dec    ecx
   14000cc3b:	test   ecx,ecx
   14000cc3d:	jg     0x14000cc30
   14000cc3f:	test   ecx,ecx
   14000cc41:	jne    0x14000cc1f
   14000cc43:	lock inc DWORD PTR [rdi+0x18]
   14000cc47:	jne    0x14000cc61
   14000cc49:	xor    r9d,r9d
   14000cc4c:	xor    r8d,r8d
   14000cc4f:	xor    edx,edx
   14000cc51:	xor    ecx,ecx
   14000cc53:	call   QWORD PTR [rip+0x2c8c7]        # 0x140039520
   14000cc59:	mov    QWORD PTR [rdi+0x8],rax
   14000cc5d:	jmp    0x14000cc6a
   14000cc5f:	pause  
   14000cc61:	mov    rax,QWORD PTR [rdi+0x8]
   14000cc65:	test   rax,rax
   14000cc68:	je     0x14000cc5f
   14000cc6a:	lock inc DWORD PTR [rdi+0x14]
   14000cc6e:	mov    eax,0x1
   14000cc73:	xchg   DWORD PTR [rdi+0x10],eax
   14000cc76:	test   eax,eax
   14000cc78:	je     0x14000cc95
   14000cc7a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000cc7e:	or     edx,0xffffffff
   14000cc81:	call   QWORD PTR [rip+0x2c811]        # 0x140039498
   14000cc87:	lock add DWORD PTR [rdi+0x14],r12d
   14000cc8c:	test   eax,eax
   14000cc8e:	je     0x14000cc1f
   14000cc90:	jmp    0x14000cdf2
   14000cc95:	lock add DWORD PTR [rdi+0x14],r12d
   14000cc9a:	mov    rsi,QWORD PTR [rdi+0x40]
   14000cc9e:	mov    eax,0x8
   14000cca3:	movsxd rbx,esi
   14000cca6:	mul    rbx
   14000cca9:	cmovo  rax,r12
   14000ccad:	mov    rcx,rax
   14000ccb0:	call   0x14002b130
   14000ccb5:	mov    r8,rbx
   14000ccb8:	xor    edx,edx
   14000ccba:	mov    rcx,rax
   14000ccbd:	shl    r8,0x3
   14000ccc1:	mov    rbp,rax
   14000ccc4:	call   0x1400260e0
   14000ccc9:	mov    rcx,QWORD PTR [rdi+0x38]
   14000cccd:	mov    rdx,QWORD PTR [rcx]
   14000ccd0:	cmp    rdx,rcx
   14000ccd3:	je     0x14000cd23
   14000ccd5:	mov    rcx,rbp
   14000ccd8:	mov    rax,QWORD PTR [rdx+0x28]
   14000ccdc:	mov    QWORD PTR [rcx],rax
   14000ccdf:	cmp    BYTE PTR [rdx+0x19],0x0
   14000cce3:	lea    rcx,[rcx+0x8]
   14000cce7:	jne    0x14000cd1d
   14000cce9:	mov    rax,QWORD PTR [rdx+0x10]
   14000cced:	cmp    BYTE PTR [rax+0x19],0x0
   14000ccf1:	jne    0x14000cd01
   14000ccf3:	mov    rdx,rax
   14000ccf6:	mov    rax,QWORD PTR [rax]
   14000ccf9:	cmp    BYTE PTR [rax+0x19],0x0
   14000ccfd:	je     0x14000ccf3
   14000ccff:	jmp    0x14000cd1d
   14000cd01:	mov    rax,QWORD PTR [rdx+0x8]
   14000cd05:	jmp    0x14000cd14
   14000cd07:	cmp    rdx,QWORD PTR [rax+0x10]
   14000cd0b:	jne    0x14000cd1a
   14000cd0d:	mov    rdx,rax
   14000cd10:	mov    rax,QWORD PTR [rax+0x8]
   14000cd14:	cmp    BYTE PTR [rax+0x19],0x0
   14000cd18:	je     0x14000cd07
   14000cd1a:	mov    rdx,rax
   14000cd1d:	cmp    rdx,QWORD PTR [rdi+0x38]
   14000cd21:	jne    0x14000ccd8
   14000cd23:	xor    eax,eax
   14000cd25:	xchg   DWORD PTR [rdi+0x10],eax
   14000cd28:	lock or DWORD PTR [rsp],0x0
   14000cd2d:	mov    eax,DWORD PTR [rdi+0x14]
   14000cd30:	test   eax,eax
   14000cd32:	jle    0x14000cd4f
   14000cd34:	lock or DWORD PTR [rsp],0x0
   14000cd39:	mov    eax,DWORD PTR [rdi+0x14]
   14000cd3c:	mov    rax,QWORD PTR [rdi+0x8]
   14000cd40:	test   rax,rax
   14000cd43:	je     0x14000cd4f
   14000cd45:	mov    rcx,QWORD PTR [rdi+0x8]
   14000cd49:	call   QWORD PTR [rip+0x2c789]        # 0x1400394d8
   14000cd4f:	test   esi,esi
   14000cd51:	jle    0x14000cdb6
   14000cd53:	mov    rbx,rbp
   14000cd56:	mov    esi,esi
   14000cd58:	mov    rcx,QWORD PTR [rbx]
   14000cd5b:	or     DWORD PTR [rsp+0x40],0xffffffff
   14000cd60:	cmp    DWORD PTR [rcx],0x8
   14000cd63:	jb     0x14000cdad
   14000cd65:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cd69:	lea    rdx,[rsp+0x40]
   14000cd6e:	call   QWORD PTR [rip+0x2c7d4]        # 0x140039548
   14000cd74:	test   eax,eax
   14000cd76:	je     0x14000cdad
   14000cd78:	cmp    DWORD PTR [rsp+0x40],0x103
   14000cd80:	je     0x14000cdad
   14000cd82:	mov    rcx,QWORD PTR [rbx]
   14000cd85:	mov    edx,0x9c4
   14000cd8a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cd8e:	call   QWORD PTR [rip+0x2c704]        # 0x140039498
   14000cd94:	cmp    eax,0x102
   14000cd99:	je     0x14000cd82
   14000cd9b:	mov    rax,QWORD PTR [rbx]
   14000cd9e:	mov    r8d,DWORD PTR [rsp+0x40]
   14000cda3:	mov    rcx,rdi
   14000cda6:	mov    edx,DWORD PTR [rax]
   14000cda8:	call   0x14000d3f0
   14000cdad:	add    rbx,0x8
   14000cdb1:	dec    rsi
   14000cdb4:	jne    0x14000cd58
   14000cdb6:	test   rbp,rbp
   14000cdb9:	je     0x14000cbf1
   14000cdbf:	mov    rcx,rbp
   14000cdc2:	call   0x14002b138
   14000cdc7:	jmp    0x14000cbf1
   14000cdcc:	mov    rcx,QWORD PTR [rdi]
   14000cdcf:	xor    r9d,r9d
   14000cdd2:	xor    r8d,r8d
   14000cdd5:	mov    rax,QWORD PTR [rcx]
   14000cdd8:	mov    edx,0x61230d1d
   14000cddd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cde2:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cde7:	add    rsp,0x20
   14000cdeb:	pop    r12
   14000cded:	pop    rdi
   14000cdee:	pop    rsi
   14000cdef:	rex.W jmp QWORD PTR [rax]
   14000cdf2:	and    DWORD PTR [rsp+0x40],0x0
   14000cdf7:	mov    DWORD PTR [rsp+0x44],0xe1232723
   14000cdff:	mov    rax,QWORD PTR [rsp+0x40]
   14000ce04:	lea    rdx,[rip+0x3dcad]        # 0x14004aab8
   14000ce0b:	lea    rcx,[rsp+0x48]
   14000ce10:	mov    QWORD PTR [rsp+0x48],rax
   14000ce15:	call   0x1400265e8
   14000ce1a:	int3   
   14000ce1b:	int3   
   14000ce1c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce21:	mov    DWORD PTR [rsp+0x20],r9d
   14000ce26:	push   rbp
   14000ce27:	push   rsi
   14000ce28:	push   rdi
   14000ce29:	push   r12
   14000ce2b:	push   r13
   14000ce2d:	push   r14
   14000ce2f:	push   r15
   14000ce31:	sub    rsp,0x50
   14000ce35:	lea    rdi,[rcx+0x8]
   14000ce39:	mov    eax,0x1
   14000ce3e:	xor    r14d,r14d
   14000ce41:	xchg   DWORD PTR [rdi+0x8],eax
   14000ce44:	mov    r13,r8
   14000ce47:	mov    ebp,edx
   14000ce49:	mov    rsi,rcx
   14000ce4c:	test   eax,eax
   14000ce4e:	je     0x14000ce58
   14000ce50:	mov    rcx,rdi
   14000ce53:	call   0x1400178cc
   14000ce58:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000ce60:	test   rbx,rbx
   14000ce63:	je     0x14000ce68
   14000ce65:	mov    DWORD PTR [rbx],r14d
   14000ce68:	lea    r12,[rsi+0x38]
   14000ce6c:	mov    rax,QWORD PTR [r12]
   14000ce70:	mov    rdx,rax
   14000ce73:	mov    rcx,QWORD PTR [rax+0x8]
   14000ce77:	jmp    0x14000ce8a
   14000ce79:	cmp    DWORD PTR [rcx+0x20],ebp
   14000ce7c:	jae    0x14000ce84
   14000ce7e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ce82:	jmp    0x14000ce8a
   14000ce84:	mov    rdx,rcx
   14000ce87:	mov    rcx,QWORD PTR [rcx]
   14000ce8a:	cmp    BYTE PTR [rcx+0x19],r14b
   14000ce8e:	je     0x14000ce79
   14000ce90:	cmp    rdx,rax
   14000ce93:	je     0x14000ceac
   14000ce95:	cmp    ebp,DWORD PTR [rdx+0x20]
   14000ce98:	jb     0x14000ceac
   14000ce9a:	mov    QWORD PTR [rsp+0x90],rdx
   14000cea2:	lea    rcx,[rsp+0x90]
   14000ceaa:	jmp    0x14000ceb6
   14000ceac:	mov    QWORD PTR [rsp+0x30],rax
   14000ceb1:	lea    rcx,[rsp+0x30]
   14000ceb6:	cmp    QWORD PTR [rcx],rax
   14000ceb9:	je     0x14000cef8
   14000cebb:	test   rbx,rbx
   14000cebe:	je     0x14000cec6
   14000cec0:	mov    DWORD PTR [rbx],0xe1230587
   14000cec6:	mov    eax,r14d
   14000cec9:	xchg   DWORD PTR [rdi+0x8],eax
   14000cecc:	lock or DWORD PTR [rsp],r14d
   14000ced1:	mov    eax,DWORD PTR [rdi+0xc]
   14000ced4:	test   eax,eax
   14000ced6:	jle    0x14000cef1
   14000ced8:	lock or DWORD PTR [rsp],r14d
   14000cedd:	mov    eax,DWORD PTR [rdi+0xc]
   14000cee0:	mov    rax,QWORD PTR [rdi]
   14000cee3:	test   rax,rax
   14000cee6:	je     0x14000cef1
   14000cee8:	mov    rcx,QWORD PTR [rdi]
   14000ceeb:	call   QWORD PTR [rip+0x2c5e7]        # 0x1400394d8
   14000cef1:	xor    eax,eax
   14000cef3:	jmp    0x14000d084
   14000cef8:	mov    r8d,ebp
   14000cefb:	xor    edx,edx
   14000cefd:	mov    ecx,0x100400
   14000cf02:	call   QWORD PTR [rip+0x2c570]        # 0x140039478
   14000cf08:	mov    r15,rax
   14000cf0b:	test   rax,rax
   14000cf0e:	jne    0x14000cf1d
   14000cf10:	test   rbx,rbx
   14000cf13:	je     0x14000cec6
   14000cf15:	mov    DWORD PTR [rbx],0xe1230592
   14000cf1b:	jmp    0x14000cec6
   14000cf1d:	cmp    DWORD PTR [rsi+0x7c],r14d
   14000cf21:	jg     0x14000cf2e
   14000cf23:	lea    rcx,[rsi+0x48]
   14000cf27:	call   0x14000ddf8
   14000cf2c:	jmp    0x14000cf1d
   14000cf2e:	dec    DWORD PTR [rsi+0x7c]
   14000cf31:	movsxd rax,DWORD PTR [rsi+0x7c]
   14000cf35:	mov    ecx,DWORD PTR [rsi+0x88]
   14000cf3b:	imul   rcx,rax
   14000cf3f:	mov    rax,QWORD PTR [rsi+0x98]
   14000cf46:	mov    r8d,ebp
   14000cf49:	xor    edx,edx
   14000cf4b:	mov    r14,QWORD PTR [rcx+rax*1]
   14000cf4f:	mov    ecx,0x43a
   14000cf54:	mov    QWORD PTR [r14+0x8],r15
   14000cf58:	call   QWORD PTR [rip+0x2c51a]        # 0x140039478
   14000cf5e:	xor    r15d,r15d
   14000cf61:	mov    QWORD PTR [r14+0x10],rax
   14000cf65:	mov    eax,DWORD PTR [rsp+0xb0]
   14000cf6c:	mov    DWORD PTR [r14],ebp
   14000cf6f:	mov    BYTE PTR [r14+0x18],r15b
   14000cf73:	mov    QWORD PTR [r14+0x20],r15
   14000cf77:	mov    DWORD PTR [r14+0x1c],eax
   14000cf7b:	mov    rax,QWORD PTR [r12]
   14000cf7f:	mov    rbx,rax
   14000cf82:	mov    rcx,QWORD PTR [rax+0x8]
   14000cf86:	jmp    0x14000cf99
   14000cf88:	cmp    DWORD PTR [rcx+0x20],ebp
   14000cf8b:	jae    0x14000cf93
   14000cf8d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cf91:	jmp    0x14000cf99
   14000cf93:	mov    rbx,rcx
   14000cf96:	mov    rcx,QWORD PTR [rcx]
   14000cf99:	cmp    BYTE PTR [rcx+0x19],r15b
   14000cf9d:	je     0x14000cf88
   14000cf9f:	cmp    rbx,rax
   14000cfa2:	je     0x14000cfa9
   14000cfa4:	cmp    ebp,DWORD PTR [rbx+0x20]
   14000cfa7:	jae    0x14000cfdd
   14000cfa9:	lea    rdx,[rsp+0x40]
   14000cfae:	mov    rcx,r12
   14000cfb1:	mov    DWORD PTR [rsp+0x40],ebp
   14000cfb5:	mov    QWORD PTR [rsp+0x48],r15
   14000cfba:	call   0x14000e0e4
   14000cfbf:	lea    rdx,[rsp+0x38]
   14000cfc4:	lea    r9,[rax+0x20]
   14000cfc8:	mov    r8,rbx
   14000cfcb:	mov    rcx,r12
   14000cfce:	mov    QWORD PTR [rsp+0x20],rax
   14000cfd3:	call   0x14000e134
   14000cfd8:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cfdd:	mov    QWORD PTR [rbx+0x28],r14
   14000cfe1:	mov    rbx,QWORD PTR [rsi+0x40]
   14000cfe5:	mov    eax,r15d
   14000cfe8:	xchg   DWORD PTR [rdi+0x8],eax
   14000cfeb:	lock or DWORD PTR [rsp],r15d
   14000cff0:	mov    eax,DWORD PTR [rdi+0xc]
   14000cff3:	test   eax,eax
   14000cff5:	jle    0x14000d010
   14000cff7:	lock or DWORD PTR [rsp],r15d
   14000cffc:	mov    eax,DWORD PTR [rdi+0xc]
   14000cfff:	mov    rax,QWORD PTR [rdi]
   14000d002:	test   rax,rax
   14000d005:	je     0x14000d010
   14000d007:	mov    rcx,QWORD PTR [rdi]
   14000d00a:	call   QWORD PTR [rip+0x2c4c8]        # 0x1400394d8
   14000d010:	cmp    DWORD PTR [rsi+0x20],ebx
   14000d013:	jae    0x14000d018
   14000d015:	mov    DWORD PTR [rsi+0x20],ebx
   14000d018:	mov    rbx,QWORD PTR [rsi]
   14000d01b:	mov    edi,0x1
   14000d020:	mov    rdx,r13
   14000d023:	add    DWORD PTR [rsi+0x24],edi
   14000d026:	mov    rcx,rbx
   14000d029:	call   0x14000bf6c
   14000d02e:	mov    rcx,QWORD PTR [rbx+0x1550]
   14000d035:	test   rcx,rcx
   14000d038:	je     0x14000d04d
   14000d03a:	mov    rax,QWORD PTR [rcx]
   14000d03d:	mov    r9d,DWORD PTR [rsp+0xa8]
   14000d045:	mov    r8,r13
   14000d048:	mov    edx,ebp
   14000d04a:	call   QWORD PTR [rax+0x8]
   14000d04d:	mov    rdx,QWORD PTR [rsi]
   14000d050:	mov    rax,QWORD PTR [rdx+0xca8]
   14000d057:	lock add DWORD PTR [rax+0x70],edi
   14000d05b:	mov    rcx,QWORD PTR [rdx+0xca8]
   14000d062:	lock add DWORD PTR [rcx+0x6c],edi
   14000d066:	mov    rcx,QWORD PTR [rdx+0xca8]
   14000d06d:	mov    r8d,DWORD PTR [rcx+0x70]
   14000d071:	cmp    r8d,DWORD PTR [rcx+0x68]
   14000d075:	jbe    0x14000d07b
   14000d077:	mov    DWORD PTR [rcx+0x68],r8d
   14000d07b:	lock add DWORD PTR [rdx+0xf70],edi
   14000d082:	mov    eax,edi
   14000d084:	mov    rbx,QWORD PTR [rsp+0x98]
   14000d08c:	add    rsp,0x50
   14000d090:	pop    r15
   14000d092:	pop    r14
   14000d094:	pop    r13
   14000d096:	pop    r12
   14000d098:	pop    rdi
   14000d099:	pop    rsi
   14000d09a:	pop    rbp
   14000d09b:	ret    
   14000d09c:	mov    DWORD PTR [rsp+0x10],edx
   14000d0a0:	push   rbx
   14000d0a1:	push   rbp
   14000d0a2:	push   rsi
   14000d0a3:	push   rdi
   14000d0a4:	push   r12
   14000d0a6:	push   r13
   14000d0a8:	push   r14
   14000d0aa:	push   r15
   14000d0ac:	sub    rsp,0x28
   14000d0b0:	lea    rdi,[rcx+0x8]
   14000d0b4:	mov    eax,0x1
   14000d0b9:	xor    r15d,r15d
   14000d0bc:	xchg   DWORD PTR [rdi+0x8],eax
   14000d0bf:	mov    ebp,edx
   14000d0c1:	mov    rsi,rcx
   14000d0c4:	test   eax,eax
   14000d0c6:	je     0x14000d0d0
   14000d0c8:	mov    rcx,rdi
   14000d0cb:	call   0x1400178cc
   14000d0d0:	mov    rax,QWORD PTR [rsi+0x38]
   14000d0d4:	mov    rdx,rax
   14000d0d7:	mov    rcx,QWORD PTR [rax+0x8]
   14000d0db:	jmp    0x14000d0ee
   14000d0dd:	cmp    DWORD PTR [rcx+0x20],ebp
   14000d0e0:	jae    0x14000d0e8
   14000d0e2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d0e6:	jmp    0x14000d0ee
   14000d0e8:	mov    rdx,rcx
   14000d0eb:	mov    rcx,QWORD PTR [rcx]
   14000d0ee:	cmp    BYTE PTR [rcx+0x19],r15b
   14000d0f2:	je     0x14000d0dd
   14000d0f4:	cmp    rdx,rax
   14000d0f7:	je     0x14000d10a
   14000d0f9:	cmp    ebp,DWORD PTR [rdx+0x20]
   14000d0fc:	jb     0x14000d10a
   14000d0fe:	mov    QWORD PTR [rsp+0x70],rdx
   14000d103:	lea    rbx,[rsp+0x70]
   14000d108:	jmp    0x14000d11a
   14000d10a:	mov    QWORD PTR [rsp+0x80],rax
   14000d112:	lea    rbx,[rsp+0x80]
   14000d11a:	mov    rbx,QWORD PTR [rbx]
   14000d11d:	cmp    rbx,rax
   14000d120:	je     0x14000d1a0
   14000d122:	mov    rbp,QWORD PTR [rbx+0x28]
   14000d126:	mov    rcx,QWORD PTR [rbp+0x8]
   14000d12a:	test   rcx,rcx
   14000d12d:	je     0x14000d135
   14000d12f:	call   QWORD PTR [rip+0x2c48b]        # 0x1400395c0
   14000d135:	mov    rcx,QWORD PTR [rbp+0x10]
   14000d139:	test   rcx,rcx
   14000d13c:	je     0x14000d144
   14000d13e:	call   QWORD PTR [rip+0x2c47c]        # 0x1400395c0
   14000d144:	lea    rdx,[rsp+0x88]
   14000d14c:	lea    rcx,[rsi+0x38]
   14000d150:	mov    r8,rbx
   14000d153:	call   0x14000d828
   14000d158:	mov    eax,DWORD PTR [rsi+0x78]
   14000d15b:	cmp    DWORD PTR [rsi+0x7c],eax
   14000d15e:	jl     0x14000d17b
   14000d160:	add    eax,eax
   14000d162:	mov    edx,0x2
   14000d167:	lea    rcx,[rsi+0x80]
   14000d16e:	cmp    eax,edx
   14000d170:	cmovg  edx,eax
   14000d173:	mov    DWORD PTR [rsi+0x78],edx
   14000d176:	call   0x14000e464
   14000d17b:	movsxd rax,DWORD PTR [rsi+0x7c]
   14000d17f:	mov    rdx,rax
   14000d182:	inc    eax
   14000d184:	mov    DWORD PTR [rsi+0x7c],eax
   14000d187:	mov    ecx,DWORD PTR [rsi+0x88]
   14000d18d:	mov    rax,QWORD PTR [rsi+0x98]
   14000d194:	imul   rcx,rdx
   14000d198:	mov    QWORD PTR [rcx+rax*1],rbp
   14000d19c:	mov    ebp,DWORD PTR [rsp+0x78]
   14000d1a0:	mov    eax,r15d
   14000d1a3:	xchg   DWORD PTR [rdi+0x8],eax
   14000d1a6:	lock or DWORD PTR [rsp],r15d
   14000d1ab:	mov    eax,DWORD PTR [rdi+0xc]
   14000d1ae:	test   eax,eax
   14000d1b0:	jle    0x14000d1cb
   14000d1b2:	lock or DWORD PTR [rsp],r15d
   14000d1b7:	mov    eax,DWORD PTR [rdi+0xc]
   14000d1ba:	mov    rax,QWORD PTR [rdi]
   14000d1bd:	test   rax,rax
   14000d1c0:	je     0x14000d1cb
   14000d1c2:	mov    rcx,QWORD PTR [rdi]
   14000d1c5:	call   QWORD PTR [rip+0x2c30d]        # 0x1400394d8
   14000d1cb:	mov    rax,QWORD PTR [rsi]
   14000d1ce:	mov    rcx,QWORD PTR [rax+0x1550]
   14000d1d5:	test   rcx,rcx
   14000d1d8:	je     0x14000d1e2
   14000d1da:	mov    rax,QWORD PTR [rcx]
   14000d1dd:	mov    edx,ebp
   14000d1df:	call   QWORD PTR [rax+0x10]
   14000d1e2:	mov    rcx,QWORD PTR [rsi]
   14000d1e5:	mov    rax,QWORD PTR [rcx+0x270]
   14000d1ec:	lea    r13,[rcx+0x3f0]
   14000d1f3:	cmp    DWORD PTR [rax+0x8],r15d
   14000d1f7:	jbe    0x14000d261
   14000d1f9:	mov    r14,r15
   14000d1fc:	mov    r15d,DWORD PTR [rax+0x8]
   14000d200:	lea    r12,[r13+0x190]
   14000d207:	mov    rax,QWORD PTR [r12]
   14000d20b:	mov    rcx,r12
   14000d20e:	call   QWORD PTR [rax+0x8]
   14000d211:	lea    rdi,[r14+rax*1]
   14000d215:	cmp    DWORD PTR [rdi+0xc],ebp
   14000d218:	jne    0x14000d258
   14000d21a:	cmp    DWORD PTR [rdi+0x14],0x0
   14000d21e:	jne    0x14000d258
   14000d220:	mov    ebp,DWORD PTR [rdi+0x10]
   14000d223:	imul   ebp,DWORD PTR [rdi+0x8]
   14000d227:	add    rbp,QWORD PTR [rip+0x43d7a]        # 0x140050fa8
   14000d22e:	cmp    DWORD PTR [rbp+0x4],0x0
   14000d232:	mov    DWORD PTR [rbp+0x8],0x100
   14000d239:	jne    0x14000d249
   14000d23b:	movzx  ebx,BYTE PTR [rbp+0x34]
   14000d23f:	call   0x140006628
   14000d244:	mov    QWORD PTR [rbp+rbx*8+0x38],rax
   14000d249:	mov    rdx,rdi
   14000d24c:	mov    rcx,r13
   14000d24f:	call   0x14001ef98
   14000d254:	mov    ebp,DWORD PTR [rsp+0x78]
   14000d258:	add    r14,0x40
   14000d25c:	dec    r15
   14000d25f:	jne    0x14000d207
   14000d261:	mov    rdx,QWORD PTR [rsi]
   14000d264:	mov    rcx,QWORD PTR [rdx+0xca8]
   14000d26b:	lock dec DWORD PTR [rcx+0x70]
   14000d26f:	lock inc DWORD PTR [rdx+0xf70]
   14000d276:	mov    eax,0x1
   14000d27b:	add    rsp,0x28
   14000d27f:	pop    r15
   14000d281:	pop    r14
   14000d283:	pop    r13
   14000d285:	pop    r12
   14000d287:	pop    rdi
   14000d288:	pop    rsi
   14000d289:	pop    rbp
   14000d28a:	pop    rbx
   14000d28b:	ret    
   14000d28c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d291:	push   rdi
   14000d292:	sub    rsp,0x20
   14000d296:	lea    rbx,[rcx+0x8]
   14000d29a:	mov    eax,0x1
   14000d29f:	mov    rdi,rcx
   14000d2a2:	xchg   DWORD PTR [rbx+0x8],eax
   14000d2a5:	test   eax,eax
   14000d2a7:	je     0x14000d2b1
   14000d2a9:	mov    rcx,rbx
   14000d2ac:	call   0x1400178cc
   14000d2b1:	mov    rdi,QWORD PTR [rdi+0x40]
   14000d2b5:	xor    eax,eax
   14000d2b7:	xchg   DWORD PTR [rbx+0x8],eax
   14000d2ba:	lock or DWORD PTR [rsp],0x0
   14000d2bf:	mov    eax,DWORD PTR [rbx+0xc]
   14000d2c2:	test   eax,eax
   14000d2c4:	jle    0x14000d2df
   14000d2c6:	lock or DWORD PTR [rsp],0x0
   14000d2cb:	mov    edx,DWORD PTR [rbx+0xc]
   14000d2ce:	mov    rdx,QWORD PTR [rbx]
   14000d2d1:	test   rdx,rdx
   14000d2d4:	je     0x14000d2df
   14000d2d6:	mov    rcx,QWORD PTR [rbx]
   14000d2d9:	call   QWORD PTR [rip+0x2c1f9]        # 0x1400394d8
   14000d2df:	mov    eax,edi
   14000d2e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d2e6:	add    rsp,0x20
   14000d2ea:	pop    rdi
   14000d2eb:	ret    
   14000d2ec:	mov    QWORD PTR [rsp+0x10],rbx
   14000d2f1:	mov    QWORD PTR [rsp+0x18],rbp
   14000d2f6:	mov    QWORD PTR [rsp+0x20],rsi
   14000d2fb:	push   rdi
   14000d2fc:	push   r14
   14000d2fe:	push   r15
   14000d300:	sub    rsp,0x30
   14000d304:	lea    rbx,[rcx+0x8]
   14000d308:	mov    eax,0x1
   14000d30d:	xor    dil,dil
   14000d310:	xchg   DWORD PTR [rbx+0x8],eax
   14000d313:	mov    r15,r9
   14000d316:	mov    r14,r8
   14000d319:	mov    ebp,edx
   14000d31b:	mov    rsi,rcx
   14000d31e:	test   eax,eax
   14000d320:	je     0x14000d32a
   14000d322:	mov    rcx,rbx
   14000d325:	call   0x1400178cc
   14000d32a:	mov    rax,QWORD PTR [rsi+0x38]
   14000d32e:	mov    rdx,rax
   14000d331:	mov    rcx,QWORD PTR [rax+0x8]
   14000d335:	jmp    0x14000d348
   14000d337:	cmp    DWORD PTR [rcx+0x20],ebp
   14000d33a:	jae    0x14000d342
   14000d33c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d340:	jmp    0x14000d348
   14000d342:	mov    rdx,rcx
   14000d345:	mov    rcx,QWORD PTR [rcx]
   14000d348:	cmp    BYTE PTR [rcx+0x19],0x0
   14000d34c:	je     0x14000d337
   14000d34e:	cmp    rdx,rax
   14000d351:	je     0x14000d364
   14000d353:	cmp    ebp,DWORD PTR [rdx+0x20]
   14000d356:	jb     0x14000d364
   14000d358:	mov    QWORD PTR [rsp+0x50],rdx
   14000d35d:	lea    rcx,[rsp+0x50]
   14000d362:	jmp    0x14000d36e
   14000d364:	mov    QWORD PTR [rsp+0x20],rax
   14000d369:	lea    rcx,[rsp+0x20]
   14000d36e:	mov    rcx,QWORD PTR [rcx]
   14000d371:	cmp    rcx,rax
   14000d374:	je     0x14000d3a7
   14000d376:	mov    rdx,QWORD PTR [rcx+0x28]
   14000d37a:	cmp    BYTE PTR [rdx+0x18],0x0
   14000d37e:	je     0x14000d3a7
   14000d380:	test   r14,r14
   14000d383:	je     0x14000d38b
   14000d385:	mov    eax,DWORD PTR [rdx+0x1c]
   14000d388:	mov    DWORD PTR [r14],eax
   14000d38b:	test   r15,r15
   14000d38e:	je     0x14000d397
   14000d390:	mov    rax,QWORD PTR [rdx+0x20]
   14000d394:	mov    QWORD PTR [r15],rax
   14000d397:	and    DWORD PTR [rdx+0x1c],0x0
   14000d39b:	and    QWORD PTR [rdx+0x20],0x0
   14000d3a0:	mov    BYTE PTR [rdx+0x18],0x0
   14000d3a4:	mov    dil,0x1
   14000d3a7:	xor    eax,eax
   14000d3a9:	xchg   DWORD PTR [rbx+0x8],eax
   14000d3ac:	lock or DWORD PTR [rsp],0x0
   14000d3b1:	mov    eax,DWORD PTR [rbx+0xc]
   14000d3b4:	test   eax,eax
   14000d3b6:	jle    0x14000d3d1
   14000d3b8:	lock or DWORD PTR [rsp],0x0
   14000d3bd:	mov    edx,DWORD PTR [rbx+0xc]
   14000d3c0:	mov    rdx,QWORD PTR [rbx]
   14000d3c3:	test   rdx,rdx
   14000d3c6:	je     0x14000d3d1
   14000d3c8:	mov    rcx,QWORD PTR [rbx]
   14000d3cb:	call   QWORD PTR [rip+0x2c107]        # 0x1400394d8
   14000d3d1:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d3d6:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d3db:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d3e0:	mov    al,dil
   14000d3e3:	add    rsp,0x30
   14000d3e7:	pop    r15
   14000d3e9:	pop    r14
   14000d3eb:	pop    rdi
   14000d3ec:	ret    
   14000d3ed:	int3   
   14000d3ee:	int3   
   14000d3ef:	int3   
   14000d3f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000d3f5:	mov    QWORD PTR [rsp+0x18],rbp
   14000d3fa:	push   rsi
   14000d3fb:	push   rdi
   14000d3fc:	push   r12
   14000d3fe:	push   r14
   14000d400:	push   r15
   14000d402:	sub    rsp,0x90
   14000d409:	mov    r14,rcx
   14000d40c:	mov    rcx,QWORD PTR [rcx]
   14000d40f:	mov    r9d,r8d
   14000d412:	mov    r12d,edx
   14000d415:	mov    r8d,edx
   14000d418:	mov    edx,0x61230d43
   14000d41d:	call   0x14000caac
   14000d422:	xor    edi,edi
   14000d424:	lea    rbx,[r14+0x8]
   14000d428:	lea    r15d,[rdi+0x1]
   14000d42c:	xor    sil,sil
   14000d42f:	xor    ebp,ebp
   14000d431:	mov    eax,r15d
   14000d434:	xchg   DWORD PTR [rbx+0x8],eax
   14000d437:	test   eax,eax
   14000d439:	je     0x14000d443
   14000d43b:	mov    rcx,rbx
   14000d43e:	call   0x1400178cc
   14000d443:	mov    rax,QWORD PTR [r14+0x38]
   14000d447:	mov    rdx,rax
   14000d44a:	mov    rcx,QWORD PTR [rax+0x8]
   14000d44e:	jmp    0x14000d462
   14000d450:	cmp    DWORD PTR [rcx+0x20],r12d
   14000d454:	jae    0x14000d45c
   14000d456:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d45a:	jmp    0x14000d462
   14000d45c:	mov    rdx,rcx
   14000d45f:	mov    rcx,QWORD PTR [rcx]
   14000d462:	cmp    BYTE PTR [rcx+0x19],dil
   14000d466:	je     0x14000d450
   14000d468:	cmp    rdx,rax
   14000d46b:	je     0x14000d485
   14000d46d:	cmp    r12d,DWORD PTR [rdx+0x20]
   14000d471:	jb     0x14000d485
   14000d473:	mov    QWORD PTR [rsp+0xc0],rdx
   14000d47b:	lea    rcx,[rsp+0xc0]
   14000d483:	jmp    0x14000d495
   14000d485:	mov    QWORD PTR [rsp+0xd8],rax
   14000d48d:	lea    rcx,[rsp+0xd8]
   14000d495:	mov    rcx,QWORD PTR [rcx]
   14000d498:	cmp    rcx,rax
   14000d49b:	je     0x14000d4ac
   14000d49d:	mov    rax,QWORD PTR [rcx+0x28]
   14000d4a1:	mov    sil,BYTE PTR [rax+0x18]
   14000d4a5:	mov    rdi,QWORD PTR [rax+0x10]
   14000d4a9:	mov    ebp,DWORD PTR [rax+0x1c]
   14000d4ac:	xor    eax,eax
   14000d4ae:	xchg   DWORD PTR [rbx+0x8],eax
   14000d4b1:	lock or DWORD PTR [rsp],0x0
   14000d4b6:	mov    eax,DWORD PTR [rbx+0xc]
   14000d4b9:	test   eax,eax
   14000d4bb:	jle    0x14000d4d6
   14000d4bd:	lock or DWORD PTR [rsp],0x0
   14000d4c2:	mov    eax,DWORD PTR [rbx+0xc]
   14000d4c5:	mov    rax,QWORD PTR [rbx]
   14000d4c8:	test   rax,rax
   14000d4cb:	je     0x14000d4d6
   14000d4cd:	mov    rcx,QWORD PTR [rbx]
   14000d4d0:	call   QWORD PTR [rip+0x2c002]        # 0x1400394d8
   14000d4d6:	test   sil,sil
   14000d4d9:	je     0x14000d5d7
   14000d4df:	test   rdi,rdi
   14000d4e2:	je     0x14000d5d7
   14000d4e8:	mov    eax,DWORD PTR [rip+0x43886]        # 0x140050d74
   14000d4ee:	test   eax,eax
   14000d4f0:	jne    0x14000d500
   14000d4f2:	call   0x140004f38
   14000d4f7:	mov    eax,r15d
   14000d4fa:	mov    DWORD PTR [rip+0x43874],eax        # 0x140050d74
   14000d500:	mov    ecx,DWORD PTR [rip+0x438ae]        # 0x140050db4
   14000d506:	cmp    ecx,0x6
   14000d509:	ja     0x14000d5d7
   14000d50f:	test   eax,eax
   14000d511:	jne    0x14000d527
   14000d513:	call   0x140004f38
   14000d518:	mov    ecx,DWORD PTR [rip+0x43896]        # 0x140050db4
   14000d51e:	mov    eax,r15d
   14000d521:	mov    DWORD PTR [rip+0x4384d],eax        # 0x140050d74
   14000d527:	cmp    ecx,0x6
   14000d52a:	jne    0x14000d549
   14000d52c:	test   eax,eax
   14000d52e:	jne    0x14000d53c
   14000d530:	call   0x140004f38
   14000d535:	mov    DWORD PTR [rip+0x43838],r15d        # 0x140050d74
   14000d53c:	cmp    DWORD PTR [rip+0x43875],0x2        # 0x140050db8
   14000d543:	jae    0x14000d5d7
   14000d549:	mov    rax,QWORD PTR [r14]
   14000d54c:	cmp    DWORD PTR [rax+0x2148],0x4
   14000d553:	mov    rbx,QWORD PTR [rax+0x2150]
   14000d55a:	jne    0x14000d591
   14000d55c:	lea    rcx,[rbx+0x8]
   14000d560:	mov    QWORD PTR [rsp+0x40],rdi
   14000d565:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000d569:	je     0x14000d591
   14000d56b:	and    QWORD PTR [rsp+0x30],0x0
   14000d571:	and    DWORD PTR [rsp+0x28],0x0
   14000d576:	and    QWORD PTR [rsp+0x20],0x0
   14000d57c:	lea    r8,[rsp+0x40]
   14000d581:	mov    r9d,0x8
   14000d587:	mov    edx,0x8000a488
   14000d58c:	call   0x14001761c
   14000d591:	mov    esi,0x40
   14000d596:	lea    rcx,[rsp+0x50]
   14000d59b:	xor    edx,edx
   14000d59d:	mov    r8d,esi
   14000d5a0:	call   0x1400260e0
   14000d5a5:	lea    rcx,[rbx+0x8]
   14000d5a9:	mov    QWORD PTR [rsp+0x50],rdi
   14000d5ae:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000d5b2:	je     0x14000d5d7
   14000d5b4:	and    QWORD PTR [rsp+0x30],0x0
   14000d5ba:	and    DWORD PTR [rsp+0x28],0x0
   14000d5bf:	and    QWORD PTR [rsp+0x20],0x0
   14000d5c5:	lea    r8,[rsp+0x50]
   14000d5ca:	mov    r9d,esi
   14000d5cd:	mov    edx,0x8000a424
   14000d5d2:	call   0x14001761c
   14000d5d7:	mov    rdi,QWORD PTR [r14]
   14000d5da:	add    rdi,0xb10
   14000d5e1:	lea    r15,[rdi+0x10]
   14000d5e5:	mov    rcx,r15
   14000d5e8:	mov    rax,QWORD PTR [r15]
   14000d5eb:	call   QWORD PTR [rax+0x8]
   14000d5ee:	mov    rcx,QWORD PTR [rdi+0x170]
   14000d5f5:	mov    rbx,rax
   14000d5f8:	call   0x14001fcd8
   14000d5fd:	mov    eax,DWORD PTR [rbx+0x8]
   14000d600:	or     ecx,0xffffffff
   14000d603:	jmp    0x14000d61d
   14000d605:	mov    ebx,eax
   14000d607:	imul   rbx,rbx,0x234
   14000d60e:	add    rbx,QWORD PTR [rdi+0x160]
   14000d615:	cmp    ebp,DWORD PTR [rbx+0x8]
   14000d618:	je     0x14000d623
   14000d61a:	mov    eax,DWORD PTR [rbx+0x10]
   14000d61d:	cmp    eax,ecx
   14000d61f:	jne    0x14000d605
   14000d621:	jmp    0x14000d692
   14000d623:	lea    rsi,[rbx+0x14]
   14000d627:	mov    eax,DWORD PTR [rsi]
   14000d629:	cmp    eax,ecx
   14000d62b:	je     0x14000d692
   14000d62d:	mov    edx,eax
   14000d62f:	mov    rcx,rdi
   14000d632:	call   0x14001f2e0
   14000d637:	mov    r9,rax
   14000d63a:	test   rax,rax
   14000d63d:	je     0x14000d692
   14000d63f:	mov    edx,DWORD PTR [rsi]
   14000d641:	mov    r8,rsi
   14000d644:	or     r10d,0xffffffff
   14000d648:	jmp    0x14000d66c
   14000d64a:	mov    ecx,edx
   14000d64c:	imul   rcx,rcx,0x3b8
   14000d653:	add    rcx,QWORD PTR [rdi+0x168]
   14000d65a:	cmp    DWORD PTR [rax+0xd8],edx
   14000d660:	je     0x14000d673
   14000d662:	lea    r8,[rcx+0xf8]
   14000d669:	mov    edx,DWORD PTR [r8]
   14000d66c:	cmp    edx,r10d
   14000d66f:	jne    0x14000d64a
   14000d671:	jmp    0x14000d680
   14000d673:	mov    eax,DWORD PTR [rcx+0xf8]
   14000d679:	mov    DWORD PTR [r8],eax
   14000d67c:	add    DWORD PTR [rbx+0xc],r10d
   14000d680:	mov    rdx,r9
   14000d683:	mov    rcx,rdi
   14000d686:	call   0x14001f358
   14000d68b:	mov    eax,DWORD PTR [rsi]
   14000d68d:	cmp    eax,0xffffffff
   14000d690:	jne    0x14000d62d
   14000d692:	mov    rcx,QWORD PTR [rdi+0x170]
   14000d699:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d69d:	call   QWORD PTR [rip+0x2be55]        # 0x1400394f8
   14000d6a3:	mov    rax,QWORD PTR [r15]
   14000d6a6:	mov    rcx,r15
   14000d6a9:	xor    esi,esi
   14000d6ab:	call   QWORD PTR [rax+0x8]
   14000d6ae:	mov    rcx,QWORD PTR [rdi+0x170]
   14000d6b5:	mov    rbx,rax
   14000d6b8:	call   0x14001fcd8
   14000d6bd:	mov    edx,DWORD PTR [rbx+0x8]
   14000d6c0:	or     ecx,0xffffffff
   14000d6c3:	jmp    0x14000d6dd
   14000d6c5:	mov    eax,edx
   14000d6c7:	imul   rax,rax,0x234
   14000d6ce:	add    rax,QWORD PTR [rdi+0x160]
   14000d6d5:	cmp    ebp,DWORD PTR [rax+0x8]
   14000d6d8:	je     0x14000d6e3
   14000d6da:	mov    edx,DWORD PTR [rax+0x10]
   14000d6dd:	cmp    edx,ecx
   14000d6df:	jne    0x14000d6c5
   14000d6e1:	jmp    0x14000d6f0
   14000d6e3:	mov    rcx,rdi
   14000d6e6:	call   0x14001ea70
   14000d6eb:	mov    esi,0x1
   14000d6f0:	mov    rcx,QWORD PTR [rdi+0x170]
   14000d6f7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d6fb:	call   QWORD PTR [rip+0x2bdf7]        # 0x1400394f8
   14000d701:	test   esi,esi
   14000d703:	setne  al
   14000d706:	test   al,al
   14000d708:	je     0x14000d71f
   14000d70a:	mov    rcx,QWORD PTR [r14]
   14000d70d:	mov    r8d,ebp
   14000d710:	mov    edx,r12d
   14000d713:	add    rcx,0x2a0
   14000d71a:	call   0x14000eefc
   14000d71f:	inc    DWORD PTR [r14+0x28]
   14000d723:	lea    r11,[rsp+0x90]
   14000d72b:	mov    rbx,QWORD PTR [r11+0x38]
   14000d72f:	mov    rbp,QWORD PTR [r11+0x40]
   14000d733:	mov    rsp,r11
   14000d736:	pop    r15
   14000d738:	pop    r14
   14000d73a:	pop    r12
   14000d73c:	pop    rdi
   14000d73d:	pop    rsi
   14000d73e:	ret    
   14000d73f:	int3   
   14000d740:	mov    rax,rsp
   14000d743:	mov    QWORD PTR [rax+0x8],rcx
   14000d747:	push   r14
   14000d749:	sub    rsp,0x30
   14000d74d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d755:	mov    QWORD PTR [rax+0x18],rbx
   14000d759:	mov    QWORD PTR [rax+0x20],rdi
   14000d75d:	mov    r14,rcx
   14000d760:	mov    rdi,QWORD PTR [rcx]
   14000d763:	mov    rbx,QWORD PTR [rdi]
   14000d766:	cmp    rbx,rbx
   14000d769:	jne    0x14000d80a
   14000d76f:	cmp    rdi,rdi
   14000d772:	jne    0x14000d80a
   14000d778:	mov    rbx,QWORD PTR [rdi+0x8]
   14000d77c:	mov    rdi,rbx
   14000d77f:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d783:	jne    0x14000d7a5
   14000d785:	mov    rdx,QWORD PTR [rdi+0x10]
   14000d789:	mov    rcx,r14
   14000d78c:	call   0x14000dd00
   14000d791:	mov    rdi,QWORD PTR [rdi]
   14000d794:	mov    rcx,rbx
   14000d797:	call   0x140020e30
   14000d79c:	mov    rbx,rdi
   14000d79f:	cmp    BYTE PTR [rdi+0x19],0x0
   14000d7a3:	je     0x14000d785
   14000d7a5:	mov    rax,QWORD PTR [r14]
   14000d7a8:	mov    QWORD PTR [rax+0x8],rax
   14000d7ac:	mov    rax,QWORD PTR [r14]
   14000d7af:	mov    QWORD PTR [rax],rax
   14000d7b2:	mov    rax,QWORD PTR [r14]
   14000d7b5:	mov    QWORD PTR [rax+0x10],rax
   14000d7b9:	and    QWORD PTR [r14+0x8],0x0
   14000d7be:	jmp    0x14000d80f
   14000d7c0:	mov    r8,rbx
   14000d7c3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d7c7:	jne    0x14000d7fd
   14000d7c9:	mov    rax,QWORD PTR [rbx+0x10]
   14000d7cd:	cmp    BYTE PTR [rax+0x19],0x0
   14000d7d1:	jne    0x14000d7e1
   14000d7d3:	mov    rbx,rax
   14000d7d6:	mov    rax,QWORD PTR [rax]
   14000d7d9:	cmp    BYTE PTR [rax+0x19],0x0
   14000d7dd:	je     0x14000d7d3
   14000d7df:	jmp    0x14000d7fd
   14000d7e1:	mov    rax,QWORD PTR [rbx+0x8]
   14000d7e5:	jmp    0x14000d7f4
   14000d7e7:	cmp    rbx,QWORD PTR [rax+0x10]
   14000d7eb:	jne    0x14000d7fa
   14000d7ed:	mov    rbx,rax
   14000d7f0:	mov    rax,QWORD PTR [rax+0x8]
   14000d7f4:	cmp    BYTE PTR [rax+0x19],0x0
   14000d7f8:	je     0x14000d7e7
   14000d7fa:	mov    rbx,rax
   14000d7fd:	lea    rdx,[rsp+0x48]
   14000d802:	mov    rcx,r14
   14000d805:	call   0x14000d828
   14000d80a:	cmp    rbx,rdi
   14000d80d:	jne    0x14000d7c0
   14000d80f:	mov    rcx,QWORD PTR [r14]
   14000d812:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d817:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d81c:	add    rsp,0x30
   14000d820:	pop    r14
   14000d822:	jmp    0x140020e30
   14000d827:	int3   
   14000d828:	mov    QWORD PTR [rsp+0x8],rbx
   14000d82d:	mov    QWORD PTR [rsp+0x10],rsi
   14000d832:	mov    QWORD PTR [rsp+0x18],r8
   14000d837:	push   rdi
   14000d838:	sub    rsp,0x20
   14000d83c:	xor    esi,esi
   14000d83e:	mov    rdi,rdx
   14000d841:	mov    rbx,rcx
   14000d844:	cmp    BYTE PTR [r8+0x19],sil
   14000d848:	jne    0x14000dca8
   14000d84e:	lea    rcx,[r8+0x10]
   14000d852:	mov    r10,r8
   14000d855:	mov    r9,QWORD PTR [rcx]
   14000d858:	cmp    BYTE PTR [r9+0x19],sil
   14000d85c:	jne    0x14000d871
   14000d85e:	mov    rax,QWORD PTR [r9]
   14000d861:	jmp    0x14000d869
   14000d863:	mov    r9,rax
   14000d866:	mov    rax,QWORD PTR [rax]
   14000d869:	cmp    BYTE PTR [rax+0x19],sil
   14000d86d:	je     0x14000d863
   14000d86f:	jmp    0x14000d88f
   14000d871:	mov    r9,QWORD PTR [r8+0x8]
   14000d875:	jmp    0x14000d889
   14000d877:	cmp    r8,QWORD PTR [r9+0x10]
   14000d87b:	jne    0x14000d88f
   14000d87d:	mov    r8,r9
   14000d880:	mov    QWORD PTR [rsp+0x40],r9
   14000d885:	mov    r9,QWORD PTR [r9+0x8]
   14000d889:	cmp    BYTE PTR [r9+0x19],sil
   14000d88d:	je     0x14000d877
   14000d88f:	mov    QWORD PTR [rsp+0x40],r9
   14000d894:	mov    rdx,QWORD PTR [r10]
   14000d897:	cmp    BYTE PTR [rdx+0x19],sil
   14000d89b:	je     0x14000d8a2
   14000d89d:	mov    r8,QWORD PTR [rcx]
   14000d8a0:	jmp    0x14000d8bd
   14000d8a2:	mov    rax,QWORD PTR [rcx]
   14000d8a5:	cmp    BYTE PTR [rax+0x19],sil
   14000d8a9:	je     0x14000d8b0
   14000d8ab:	mov    r8,rdx
   14000d8ae:	jmp    0x14000d8bd
   14000d8b0:	mov    r8,QWORD PTR [r9+0x10]
   14000d8b4:	cmp    r9,r10
   14000d8b7:	jne    0x14000d946
   14000d8bd:	mov    rdx,QWORD PTR [r10+0x8]
   14000d8c1:	cmp    BYTE PTR [r8+0x19],sil
   14000d8c5:	jne    0x14000d8cb
   14000d8c7:	mov    QWORD PTR [r8+0x8],rdx
   14000d8cb:	mov    rax,QWORD PTR [rbx]
   14000d8ce:	cmp    QWORD PTR [rax+0x8],r10
   14000d8d2:	jne    0x14000d8da
   14000d8d4:	mov    QWORD PTR [rax+0x8],r8
   14000d8d8:	jmp    0x14000d8e8
   14000d8da:	cmp    QWORD PTR [rdx],r10
   14000d8dd:	jne    0x14000d8e4
   14000d8df:	mov    QWORD PTR [rdx],r8
   14000d8e2:	jmp    0x14000d8e8
   14000d8e4:	mov    QWORD PTR [rdx+0x10],r8
   14000d8e8:	mov    r9,QWORD PTR [rbx]
   14000d8eb:	cmp    QWORD PTR [r9],r10
   14000d8ee:	jne    0x14000d912
   14000d8f0:	cmp    BYTE PTR [r8+0x19],sil
   14000d8f4:	je     0x14000d8fb
   14000d8f6:	mov    rax,rdx
   14000d8f9:	jmp    0x14000d90f
   14000d8fb:	mov    rcx,QWORD PTR [r8]
   14000d8fe:	mov    rax,r8
   14000d901:	jmp    0x14000d909
   14000d903:	mov    rax,rcx
   14000d906:	mov    rcx,QWORD PTR [rcx]
   14000d909:	cmp    BYTE PTR [rcx+0x19],sil
   14000d90d:	je     0x14000d903
   14000d90f:	mov    QWORD PTR [r9],rax
   14000d912:	mov    r9,QWORD PTR [rbx]
   14000d915:	cmp    QWORD PTR [r9+0x10],r10
   14000d919:	jne    0x14000d9b2
   14000d91f:	cmp    BYTE PTR [r8+0x19],sil
   14000d923:	je     0x14000d92a
   14000d925:	mov    rax,rdx
   14000d928:	jmp    0x14000d940
   14000d92a:	mov    rcx,QWORD PTR [r8+0x10]
   14000d92e:	mov    rax,r8
   14000d931:	jmp    0x14000d93a
   14000d933:	mov    rax,rcx
   14000d936:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d93a:	cmp    BYTE PTR [rcx+0x19],sil
   14000d93e:	je     0x14000d933
   14000d940:	mov    QWORD PTR [r9+0x10],rax
   14000d944:	jmp    0x14000d9b2
   14000d946:	mov    QWORD PTR [rdx+0x8],r9
   14000d94a:	mov    rax,QWORD PTR [r10]
   14000d94d:	mov    QWORD PTR [r9],rax
   14000d950:	cmp    r9,QWORD PTR [rcx]
   14000d953:	jne    0x14000d95a
   14000d955:	mov    rdx,r9
   14000d958:	jmp    0x14000d979
   14000d95a:	mov    rdx,QWORD PTR [r9+0x8]
   14000d95e:	cmp    BYTE PTR [r8+0x19],sil
   14000d962:	jne    0x14000d968
   14000d964:	mov    QWORD PTR [r8+0x8],rdx
   14000d968:	mov    QWORD PTR [rdx],r8
   14000d96b:	mov    rax,QWORD PTR [rcx]
   14000d96e:	mov    QWORD PTR [r9+0x10],rax
   14000d972:	mov    rax,QWORD PTR [rcx]
   14000d975:	mov    QWORD PTR [rax+0x8],r9
   14000d979:	mov    rax,QWORD PTR [rbx]
   14000d97c:	cmp    QWORD PTR [rax+0x8],r10
   14000d980:	jne    0x14000d988
   14000d982:	mov    QWORD PTR [rax+0x8],r9
   14000d986:	jmp    0x14000d99a
   14000d988:	mov    rax,QWORD PTR [r10+0x8]
   14000d98c:	cmp    QWORD PTR [rax],r10
   14000d98f:	jne    0x14000d996
   14000d991:	mov    QWORD PTR [rax],r9
   14000d994:	jmp    0x14000d99a
   14000d996:	mov    QWORD PTR [rax+0x10],r9
   14000d99a:	mov    rax,QWORD PTR [r10+0x8]
   14000d99e:	mov    QWORD PTR [r9+0x8],rax
   14000d9a2:	mov    al,BYTE PTR [r10+0x18]
   14000d9a6:	mov    cl,BYTE PTR [r9+0x18]
   14000d9aa:	mov    BYTE PTR [r9+0x18],al
   14000d9ae:	mov    BYTE PTR [r10+0x18],cl
   14000d9b2:	mov    r11b,0x1
   14000d9b5:	cmp    BYTE PTR [r10+0x18],r11b
   14000d9b9:	jne    0x14000dc75
   14000d9bf:	mov    rax,QWORD PTR [rbx]
   14000d9c2:	cmp    r8,QWORD PTR [rax+0x8]
   14000d9c6:	je     0x14000dc71
   14000d9cc:	cmp    BYTE PTR [r8+0x18],r11b
   14000d9d0:	jne    0x14000dc71
   14000d9d6:	mov    rcx,QWORD PTR [rdx]
   14000d9d9:	cmp    r8,rcx
   14000d9dc:	jne    0x14000dab0
   14000d9e2:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d9e6:	cmp    BYTE PTR [rcx+0x18],sil
   14000d9ea:	jne    0x14000da40
   14000d9ec:	mov    BYTE PTR [rcx+0x18],r11b
   14000d9f0:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d9f4:	mov    BYTE PTR [rdx+0x18],sil
   14000d9f8:	mov    rax,QWORD PTR [rcx]
   14000d9fb:	mov    QWORD PTR [rdx+0x10],rax
   14000d9ff:	mov    rax,QWORD PTR [rcx]
   14000da02:	cmp    BYTE PTR [rax+0x19],sil
   14000da06:	jne    0x14000da0c
   14000da08:	mov    QWORD PTR [rax+0x8],rdx
   14000da0c:	mov    rax,QWORD PTR [rdx+0x8]
   14000da10:	mov    QWORD PTR [rcx+0x8],rax
   14000da14:	mov    rax,QWORD PTR [rbx]
   14000da17:	cmp    rdx,QWORD PTR [rax+0x8]
   14000da1b:	jne    0x14000da23
   14000da1d:	mov    QWORD PTR [rax+0x8],rcx
   14000da21:	jmp    0x14000da35
   14000da23:	mov    rax,QWORD PTR [rdx+0x8]
   14000da27:	cmp    rdx,QWORD PTR [rax]
   14000da2a:	jne    0x14000da31
   14000da2c:	mov    QWORD PTR [rax],rcx
   14000da2f:	jmp    0x14000da35
   14000da31:	mov    QWORD PTR [rax+0x10],rcx
   14000da35:	mov    QWORD PTR [rcx],rdx
   14000da38:	mov    QWORD PTR [rdx+0x8],rcx
   14000da3c:	mov    rcx,QWORD PTR [rdx+0x10]
   14000da40:	cmp    BYTE PTR [rcx+0x19],sil
   14000da44:	jne    0x14000db30
   14000da4a:	mov    rax,QWORD PTR [rcx]
   14000da4d:	cmp    BYTE PTR [rax+0x18],r11b
   14000da51:	jne    0x14000da61
   14000da53:	mov    rax,QWORD PTR [rcx+0x10]
   14000da57:	cmp    BYTE PTR [rax+0x18],r11b
   14000da5b:	je     0x14000db2c
   14000da61:	mov    rax,QWORD PTR [rcx+0x10]
   14000da65:	cmp    BYTE PTR [rax+0x18],r11b
   14000da69:	jne    0x14000db5b
   14000da6f:	mov    rax,QWORD PTR [rcx]
   14000da72:	mov    BYTE PTR [rax+0x18],r11b
   14000da76:	mov    r9,QWORD PTR [rcx]
   14000da79:	mov    BYTE PTR [rcx+0x18],sil
   14000da7d:	mov    rax,QWORD PTR [r9+0x10]
   14000da81:	mov    QWORD PTR [rcx],rax
   14000da84:	mov    rax,QWORD PTR [r9+0x10]
   14000da88:	cmp    BYTE PTR [rax+0x19],sil
   14000da8c:	jne    0x14000da92
   14000da8e:	mov    QWORD PTR [rax+0x8],rcx
   14000da92:	mov    rax,QWORD PTR [rcx+0x8]
   14000da96:	mov    QWORD PTR [r9+0x8],rax
   14000da9a:	mov    rax,QWORD PTR [rbx]
   14000da9d:	cmp    rcx,QWORD PTR [rax+0x8]
   14000daa1:	jne    0x14000db3c
   14000daa7:	mov    QWORD PTR [rax+0x8],r9
   14000daab:	jmp    0x14000db4f
   14000dab0:	cmp    BYTE PTR [rcx+0x18],sil
   14000dab4:	jne    0x14000db0b
   14000dab6:	mov    BYTE PTR [rcx+0x18],r11b
   14000daba:	mov    rcx,QWORD PTR [rdx]
   14000dabd:	mov    BYTE PTR [rdx+0x18],sil
   14000dac1:	mov    rax,QWORD PTR [rcx+0x10]
   14000dac5:	mov    QWORD PTR [rdx],rax
   14000dac8:	mov    rax,QWORD PTR [rcx+0x10]
   14000dacc:	cmp    BYTE PTR [rax+0x19],sil
   14000dad0:	jne    0x14000dad6
   14000dad2:	mov    QWORD PTR [rax+0x8],rdx
   14000dad6:	mov    rax,QWORD PTR [rdx+0x8]
   14000dada:	mov    QWORD PTR [rcx+0x8],rax
   14000dade:	mov    rax,QWORD PTR [rbx]
   14000dae1:	cmp    rdx,QWORD PTR [rax+0x8]
   14000dae5:	jne    0x14000daed
   14000dae7:	mov    QWORD PTR [rax+0x8],rcx
   14000daeb:	jmp    0x14000db00
   14000daed:	mov    rax,QWORD PTR [rdx+0x8]
   14000daf1:	cmp    rdx,QWORD PTR [rax+0x10]
   14000daf5:	jne    0x14000dafd
   14000daf7:	mov    QWORD PTR [rax+0x10],rcx
   14000dafb:	jmp    0x14000db00
   14000dafd:	mov    QWORD PTR [rax],rcx
   14000db00:	mov    QWORD PTR [rcx+0x10],rdx
   14000db04:	mov    QWORD PTR [rdx+0x8],rcx
   14000db08:	mov    rcx,QWORD PTR [rdx]
   14000db0b:	cmp    BYTE PTR [rcx+0x19],sil
   14000db0f:	jne    0x14000db30
   14000db11:	mov    rax,QWORD PTR [rcx+0x10]
   14000db15:	cmp    BYTE PTR [rax+0x18],r11b
   14000db19:	jne    0x14000dbb6
   14000db1f:	mov    rax,QWORD PTR [rcx]
   14000db22:	cmp    BYTE PTR [rax+0x18],r11b
   14000db26:	jne    0x14000dbb6
   14000db2c:	mov    BYTE PTR [rcx+0x18],sil
   14000db30:	mov    r8,rdx
   14000db33:	mov    rdx,QWORD PTR [rdx+0x8]
   14000db37:	jmp    0x14000d9bf
   14000db3c:	mov    rax,QWORD PTR [rcx+0x8]
   14000db40:	cmp    rcx,QWORD PTR [rax+0x10]
   14000db44:	jne    0x14000db4c
   14000db46:	mov    QWORD PTR [rax+0x10],r9
   14000db4a:	jmp    0x14000db4f
   14000db4c:	mov    QWORD PTR [rax],r9
   14000db4f:	mov    QWORD PTR [r9+0x10],rcx
   14000db53:	mov    QWORD PTR [rcx+0x8],r9
   14000db57:	mov    rcx,QWORD PTR [rdx+0x10]
   14000db5b:	mov    al,BYTE PTR [rdx+0x18]
   14000db5e:	mov    BYTE PTR [rcx+0x18],al
   14000db61:	mov    BYTE PTR [rdx+0x18],r11b
   14000db65:	mov    rax,QWORD PTR [rcx+0x10]
   14000db69:	mov    BYTE PTR [rax+0x18],r11b
   14000db6d:	mov    rcx,QWORD PTR [rdx+0x10]
   14000db71:	mov    rax,QWORD PTR [rcx]
   14000db74:	mov    QWORD PTR [rdx+0x10],rax
   14000db78:	mov    rax,QWORD PTR [rcx]
   14000db7b:	cmp    BYTE PTR [rax+0x19],sil
   14000db7f:	jne    0x14000db85
   14000db81:	mov    QWORD PTR [rax+0x8],rdx
   14000db85:	mov    rax,QWORD PTR [rdx+0x8]
   14000db89:	mov    QWORD PTR [rcx+0x8],rax
   14000db8d:	mov    rax,QWORD PTR [rbx]
   14000db90:	cmp    rdx,QWORD PTR [rax+0x8]
   14000db94:	jne    0x14000db9c
   14000db96:	mov    QWORD PTR [rax+0x8],rcx
   14000db9a:	jmp    0x14000dbae
   14000db9c:	mov    rax,QWORD PTR [rdx+0x8]
   14000dba0:	cmp    rdx,QWORD PTR [rax]
   14000dba3:	jne    0x14000dbaa
   14000dba5:	mov    QWORD PTR [rax],rcx
   14000dba8:	jmp    0x14000dbae
   14000dbaa:	mov    QWORD PTR [rax+0x10],rcx
   14000dbae:	mov    QWORD PTR [rcx],rdx
   14000dbb1:	jmp    0x14000dc6d
   14000dbb6:	mov    rax,QWORD PTR [rcx]
   14000dbb9:	cmp    BYTE PTR [rax+0x18],r11b
   14000dbbd:	jne    0x14000dc16
   14000dbbf:	mov    rax,QWORD PTR [rcx+0x10]
   14000dbc3:	mov    BYTE PTR [rax+0x18],r11b
   14000dbc7:	mov    r9,QWORD PTR [rcx+0x10]
   14000dbcb:	mov    BYTE PTR [rcx+0x18],sil
   14000dbcf:	mov    rax,QWORD PTR [r9]
   14000dbd2:	mov    QWORD PTR [rcx+0x10],rax
   14000dbd6:	mov    rax,QWORD PTR [r9]
   14000dbd9:	cmp    BYTE PTR [rax+0x19],sil
   14000dbdd:	jne    0x14000dbe3
   14000dbdf:	mov    QWORD PTR [rax+0x8],rcx
   14000dbe3:	mov    rax,QWORD PTR [rcx+0x8]
   14000dbe7:	mov    QWORD PTR [r9+0x8],rax
   14000dbeb:	mov    rax,QWORD PTR [rbx]
   14000dbee:	cmp    rcx,QWORD PTR [rax+0x8]
   14000dbf2:	jne    0x14000dbfa
   14000dbf4:	mov    QWORD PTR [rax+0x8],r9
   14000dbf8:	jmp    0x14000dc0c
   14000dbfa:	mov    rax,QWORD PTR [rcx+0x8]
   14000dbfe:	cmp    rcx,QWORD PTR [rax]
   14000dc01:	jne    0x14000dc08
   14000dc03:	mov    QWORD PTR [rax],r9
   14000dc06:	jmp    0x14000dc0c
   14000dc08:	mov    QWORD PTR [rax+0x10],r9
   14000dc0c:	mov    QWORD PTR [r9],rcx
   14000dc0f:	mov    QWORD PTR [rcx+0x8],r9
   14000dc13:	mov    rcx,QWORD PTR [rdx]
   14000dc16:	mov    al,BYTE PTR [rdx+0x18]
   14000dc19:	mov    BYTE PTR [rcx+0x18],al
   14000dc1c:	mov    BYTE PTR [rdx+0x18],r11b
   14000dc20:	mov    rax,QWORD PTR [rcx]
   14000dc23:	mov    BYTE PTR [rax+0x18],r11b
   14000dc27:	mov    rcx,QWORD PTR [rdx]
   14000dc2a:	mov    rax,QWORD PTR [rcx+0x10]
   14000dc2e:	mov    QWORD PTR [rdx],rax
   14000dc31:	mov    rax,QWORD PTR [rcx+0x10]
   14000dc35:	cmp    BYTE PTR [rax+0x19],sil
   14000dc39:	jne    0x14000dc3f
   14000dc3b:	mov    QWORD PTR [rax+0x8],rdx
   14000dc3f:	mov    rax,QWORD PTR [rdx+0x8]
   14000dc43:	mov    QWORD PTR [rcx+0x8],rax
   14000dc47:	mov    rax,QWORD PTR [rbx]
   14000dc4a:	cmp    rdx,QWORD PTR [rax+0x8]
   14000dc4e:	jne    0x14000dc56
   14000dc50:	mov    QWORD PTR [rax+0x8],rcx
   14000dc54:	jmp    0x14000dc69
   14000dc56:	mov    rax,QWORD PTR [rdx+0x8]
   14000dc5a:	cmp    rdx,QWORD PTR [rax+0x10]
   14000dc5e:	jne    0x14000dc66
   14000dc60:	mov    QWORD PTR [rax+0x10],rcx
   14000dc64:	jmp    0x14000dc69
   14000dc66:	mov    QWORD PTR [rax],rcx
   14000dc69:	mov    QWORD PTR [rcx+0x10],rdx
   14000dc6d:	mov    QWORD PTR [rdx+0x8],rcx
   14000dc71:	mov    BYTE PTR [r8+0x18],r11b
   14000dc75:	mov    rcx,r10
   14000dc78:	call   0x140020e30
   14000dc7d:	mov    rax,QWORD PTR [rbx+0x8]
   14000dc81:	test   rax,rax
   14000dc84:	je     0x14000dc8d
   14000dc86:	dec    rax
   14000dc89:	mov    QWORD PTR [rbx+0x8],rax
   14000dc8d:	mov    rax,QWORD PTR [rsp+0x40]
   14000dc92:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc97:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dc9c:	mov    QWORD PTR [rdi],rax
   14000dc9f:	mov    rax,rdi
   14000dca2:	add    rsp,0x20
   14000dca6:	pop    rdi
   14000dca7:	ret    
   14000dca8:	lea    rcx,[rip+0x30819]        # 0x14003e4c8
   14000dcaf:	call   0x14002a994
   14000dcb4:	int3   
   14000dcb5:	int3   
   14000dcb6:	int3   
   14000dcb7:	int3   
   14000dcb8:	mov    QWORD PTR [rsp+0x8],rcx
   14000dcbd:	sub    rsp,0x38
   14000dcc1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dcca:	mov    rcx,QWORD PTR [rcx]
   14000dccd:	add    rsp,0x38
   14000dcd1:	jmp    0x140020e30
   14000dcd6:	int3   
   14000dcd7:	int3   
   14000dcd8:	mov    QWORD PTR [rsp+0x8],rcx
   14000dcdd:	sub    rsp,0x38
   14000dce1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dcea:	mov    rcx,QWORD PTR [rcx]
   14000dced:	add    rsp,0x38
   14000dcf1:	jmp    0x140020e30
   14000dcf6:	int3   
   14000dcf7:	int3   
   14000dcf8:	mov    rcx,QWORD PTR [rcx]
   14000dcfb:	jmp    0x140020e30
   14000dd00:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd05:	mov    QWORD PTR [rsp+0x10],rsi
   14000dd0a:	push   rdi
   14000dd0b:	sub    rsp,0x20
   14000dd0f:	cmp    BYTE PTR [rdx+0x19],0x0
   14000dd13:	mov    rdi,rdx
   14000dd16:	mov    rsi,rcx
   14000dd19:	mov    rbx,rdx
   14000dd1c:	jne    0x14000dd3e
   14000dd1e:	mov    rdx,QWORD PTR [rbx+0x10]
   14000dd22:	mov    rcx,rsi
   14000dd25:	call   0x14000dd00
   14000dd2a:	mov    rbx,QWORD PTR [rbx]
   14000dd2d:	mov    rcx,rdi
   14000dd30:	call   0x140020e30
   14000dd35:	cmp    BYTE PTR [rbx+0x19],0x0
   14000dd39:	mov    rdi,rbx
   14000dd3c:	je     0x14000dd1e
   14000dd3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd43:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dd48:	add    rsp,0x20
   14000dd4c:	pop    rdi
   14000dd4d:	ret    
   14000dd4e:	int3   
   14000dd4f:	int3   
   14000dd50:	mov    QWORD PTR [rsp+0x8],rcx
   14000dd55:	sub    rsp,0x38
   14000dd59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dd62:	mov    ecx,0x30
   14000dd67:	call   0x140021a98
   14000dd6c:	mov    QWORD PTR [rsp+0x40],rax
   14000dd71:	test   rax,rax
   14000dd74:	jne    0x14000dd7c
   14000dd76:	call   0x14002a918
   14000dd7b:	nop
   14000dd7c:	mov    QWORD PTR [rsp+0x48],rax
   14000dd81:	mov    QWORD PTR [rsp+0x50],rax
   14000dd86:	mov    QWORD PTR [rax],rax
   14000dd89:	lea    rcx,[rax+0x8]
   14000dd8d:	mov    QWORD PTR [rsp+0x48],rcx
   14000dd92:	mov    QWORD PTR [rsp+0x50],rcx
   14000dd97:	test   rcx,rcx
   14000dd9a:	je     0x14000dd9f
   14000dd9c:	mov    QWORD PTR [rcx],rax
   14000dd9f:	lea    rcx,[rax+0x10]
   14000dda3:	mov    QWORD PTR [rsp+0x48],rcx
   14000dda8:	mov    QWORD PTR [rsp+0x50],rcx
   14000ddad:	test   rcx,rcx
   14000ddb0:	je     0x14000ddb5
   14000ddb2:	mov    QWORD PTR [rcx],rax
   14000ddb5:	mov    WORD PTR [rax+0x18],0x101
   14000ddbb:	add    rsp,0x38
   14000ddbf:	ret    
   14000ddc0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ddc5:	push   rbx
   14000ddc6:	sub    rsp,0x30
   14000ddca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ddd3:	mov    rbx,rcx
   14000ddd6:	add    rcx,0x30
   14000ddda:	mov    QWORD PTR [rsp+0x48],rcx
   14000dddf:	mov    rcx,QWORD PTR [rcx+0x18]
   14000dde3:	call   0x14002b138
   14000dde8:	nop
   14000dde9:	lea    rcx,[rbx+0x10]
   14000dded:	add    rsp,0x30
   14000ddf1:	pop    rbx
   14000ddf2:	jmp    0x14000e054
   14000ddf7:	int3   
   14000ddf8:	mov    rax,rsp
   14000ddfb:	push   rbp
   14000ddfc:	push   rsi
   14000ddfd:	push   rdi
   14000ddfe:	push   r14
   14000de00:	push   r15
   14000de02:	lea    rbp,[rax-0x58]
   14000de06:	sub    rsp,0x130
   14000de0d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000de16:	mov    QWORD PTR [rax+0x8],rbx
   14000de1a:	mov    rbx,rcx
   14000de1d:	mov    ecx,0x20
   14000de22:	call   0x140021a98
   14000de27:	mov    rdi,rax
   14000de2a:	mov    QWORD PTR [rbp+0x68],rax
   14000de2e:	test   rax,rax
   14000de31:	je     0x14000de93
   14000de33:	mov    r8d,DWORD PTR [rbx+0x8]
   14000de37:	mov    eax,DWORD PTR [rbx+0x4]
   14000de3a:	mov    edx,DWORD PTR [rbx]
   14000de3c:	mov    DWORD PTR [rdi+0x4],edx
   14000de3f:	mov    DWORD PTR [rdi],r8d
   14000de42:	test   eax,eax
   14000de44:	jne    0x14000de4f
   14000de46:	mov    DWORD PTR [rdi+0x8],0x28
   14000de4d:	jmp    0x14000de5d
   14000de4f:	lea    rcx,[r8-0x1]
   14000de53:	lea    eax,[rcx+0x28]
   14000de56:	not    ecx
   14000de58:	and    eax,ecx
   14000de5a:	mov    DWORD PTR [rdi+0x8],eax
   14000de5d:	test   edx,edx
   14000de5f:	je     0x14000de87
   14000de61:	mov    ecx,DWORD PTR [rdi+0x8]
   14000de64:	imul   ecx,edx
   14000de67:	add    ecx,r8d
   14000de6a:	call   0x14002b130
   14000de6f:	mov    QWORD PTR [rdi+0x10],rax
   14000de73:	mov    ecx,DWORD PTR [rdi]
   14000de75:	dec    rcx
   14000de78:	add    rax,rcx
   14000de7b:	not    rcx
   14000de7e:	and    rax,rcx
   14000de81:	mov    QWORD PTR [rdi+0x18],rax
   14000de85:	jmp    0x14000de95
   14000de87:	and    QWORD PTR [rdi+0x18],0x0
   14000de8c:	and    QWORD PTR [rdi+0x10],0x0
   14000de91:	jmp    0x14000de95
   14000de93:	xor    edi,edi
   14000de95:	test   rdi,rdi
   14000de98:	jne    0x14000dec1
   14000de9a:	mov    DWORD PTR [rbp+0x68],0x1
   14000dea1:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   14000dea8:	mov    rax,QWORD PTR [rbp+0x68]
   14000deac:	mov    QWORD PTR [rbp+0x68],rax
   14000deb0:	lea    rdx,[rip+0x3cc01]        # 0x14004aab8
   14000deb7:	lea    rcx,[rbp+0x68]
   14000debb:	call   0x1400265e8
   14000dec0:	int3   
   14000dec1:	xor    r14d,r14d
   14000dec4:	mov    edx,DWORD PTR [rbx]
   14000dec6:	test   edx,edx
   14000dec8:	je     0x14000df61
   14000dece:	xor    esi,esi
   14000ded0:	cmp    r14d,edx
   14000ded3:	jae    0x14000df15
   14000ded5:	cmp    esi,0x20
   14000ded8:	jae    0x14000df15
   14000deda:	lea    ecx,[rsi+r14*1]
   14000dede:	mov    eax,DWORD PTR [rdi+0x8]
   14000dee1:	imul   rcx,rax
   14000dee5:	add    rcx,QWORD PTR [rdi+0x18]
   14000dee9:	mov    QWORD PTR [rsp+rsi*8+0x30],rcx
   14000deee:	inc    esi
   14000def0:	lea    eax,[rsi+r14*1]
   14000def4:	cmp    eax,edx
   14000def6:	jb     0x14000ded5
   14000def8:	jmp    0x14000df15
   14000defa:	mov    eax,DWORD PTR [rbx+0x30]
   14000defd:	add    eax,eax
   14000deff:	mov    edx,0x2
   14000df04:	cmp    eax,edx
   14000df06:	cmovg  edx,eax
   14000df09:	mov    DWORD PTR [rbx+0x30],edx
   14000df0c:	lea    rcx,[rbx+0x38]
   14000df10:	call   0x14000e464
   14000df15:	mov    ecx,DWORD PTR [rbx+0x34]
   14000df18:	add    ecx,esi
   14000df1a:	cmp    ecx,DWORD PTR [rbx+0x30]
   14000df1d:	jge    0x14000defa
   14000df1f:	test   esi,esi
   14000df21:	jle    0x14000df52
   14000df23:	lea    r8,[rsp+0x30]
   14000df28:	mov    r9d,esi
   14000df2b:	movsxd rax,DWORD PTR [rbx+0x34]
   14000df2f:	mov    rcx,rax
   14000df32:	inc    eax
   14000df34:	mov    DWORD PTR [rbx+0x34],eax
   14000df37:	mov    edx,DWORD PTR [rbx+0x40]
   14000df3a:	imul   rdx,rcx
   14000df3e:	mov    rcx,QWORD PTR [rbx+0x50]
   14000df42:	mov    rax,QWORD PTR [r8]
   14000df45:	mov    QWORD PTR [rdx+rcx*1],rax
   14000df49:	lea    r8,[r8+0x8]
   14000df4d:	dec    r9
   14000df50:	jne    0x14000df2b
   14000df52:	add    r14d,0x20
   14000df56:	mov    edx,DWORD PTR [rbx]
   14000df58:	cmp    r14d,edx
   14000df5b:	jb     0x14000dece
   14000df61:	mov    rsi,QWORD PTR [rbx+0x10]
   14000df65:	mov    QWORD PTR [rbp+0x78],rsi
   14000df69:	mov    eax,0x1
   14000df6e:	xchg   DWORD PTR [rsi+0x8],eax
   14000df71:	test   eax,eax
   14000df73:	je     0x14000df7e
   14000df75:	mov    rcx,rsi
   14000df78:	call   0x1400178cc
   14000df7d:	nop
   14000df7e:	mov    ecx,DWORD PTR [rbx+0x20]
   14000df81:	cmp    DWORD PTR [rbx+0x24],ecx
   14000df84:	jl     0x14000e002
   14000df86:	lea    r15d,[rcx-0x1]
   14000df8a:	add    ecx,ecx
   14000df8c:	mov    DWORD PTR [rbx+0x20],ecx
   14000df8f:	movsxd rdx,ecx
   14000df92:	mov    eax,0x8
   14000df97:	mul    rdx
   14000df9a:	mov    rcx,0xffffffffffffffff
   14000dfa1:	cmovo  rax,rcx
   14000dfa5:	mov    rcx,rax
   14000dfa8:	call   0x14002b130
   14000dfad:	mov    r14,rax
   14000dfb0:	test   rax,rax
   14000dfb3:	jne    0x14000dfdc
   14000dfb5:	mov    DWORD PTR [rbp+0x68],0x1
   14000dfbc:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   14000dfc3:	mov    rax,QWORD PTR [rbp+0x68]
   14000dfc7:	mov    QWORD PTR [rbp+0x70],rax
   14000dfcb:	lea    rdx,[rip+0x3cae6]        # 0x14004aab8
   14000dfd2:	lea    rcx,[rbp+0x70]
   14000dfd6:	call   0x1400265e8
   14000dfdb:	int3   
   14000dfdc:	movsxd rdx,r15d
   14000dfdf:	test   r15d,r15d
   14000dfe2:	js     0x14000dff5
   14000dfe4:	mov    rax,QWORD PTR [rbx+0x28]
   14000dfe8:	mov    rcx,QWORD PTR [rax+rdx*8]
   14000dfec:	mov    QWORD PTR [r14+rdx*8],rcx
   14000dff0:	dec    rdx
   14000dff3:	jns    0x14000dfe4
   14000dff5:	mov    rcx,QWORD PTR [rbx+0x28]
   14000dff9:	call   0x14002b138
   14000dffe:	mov    QWORD PTR [rbx+0x28],r14
   14000e002:	movsxd rcx,DWORD PTR [rbx+0x24]
   14000e006:	mov    rax,QWORD PTR [rbx+0x28]
   14000e00a:	mov    QWORD PTR [rax+rcx*8],rdi
   14000e00e:	inc    DWORD PTR [rbx+0x24]
   14000e011:	xor    eax,eax
   14000e013:	xchg   DWORD PTR [rsi+0x8],eax
   14000e016:	lock or DWORD PTR [rsp],0x0
   14000e01b:	mov    eax,DWORD PTR [rsi+0xc]
   14000e01e:	test   eax,eax
   14000e020:	jle    0x14000e03b
   14000e022:	lock or DWORD PTR [rsp],0x0
   14000e027:	mov    eax,DWORD PTR [rsi+0xc]
   14000e02a:	mov    rax,QWORD PTR [rsi]
   14000e02d:	test   rax,rax
   14000e030:	je     0x14000e03b
   14000e032:	mov    rcx,QWORD PTR [rsi]
   14000e035:	call   QWORD PTR [rip+0x2b49d]        # 0x1400394d8
   14000e03b:	mov    rbx,QWORD PTR [rsp+0x160]
   14000e043:	add    rsp,0x130
   14000e04a:	pop    r15
   14000e04c:	pop    r14
   14000e04e:	pop    rdi
   14000e04f:	pop    rsi
   14000e050:	pop    rbp
   14000e051:	ret    
   14000e052:	int3   
   14000e053:	int3   
   14000e054:	mov    rax,rsp
   14000e057:	mov    QWORD PTR [rax+0x8],rcx
   14000e05b:	push   rdi
   14000e05c:	sub    rsp,0x30
   14000e060:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000e068:	mov    QWORD PTR [rax+0x10],rbx
   14000e06c:	mov    QWORD PTR [rax+0x18],rsi
   14000e070:	mov    rbx,rcx
   14000e073:	mov    eax,DWORD PTR [rcx+0x14]
   14000e076:	dec    eax
   14000e078:	movsxd rdi,eax
   14000e07b:	js     0x14000e0a0
   14000e07d:	mov    rax,QWORD PTR [rbx+0x18]
   14000e081:	mov    rsi,QWORD PTR [rax+rdi*8]
   14000e085:	test   rsi,rsi
   14000e088:	je     0x14000e09b
   14000e08a:	mov    rcx,QWORD PTR [rsi+0x10]
   14000e08e:	call   0x14002b138
   14000e093:	mov    rcx,rsi
   14000e096:	call   0x140020e30
   14000e09b:	dec    rdi
   14000e09e:	jns    0x14000e07d
   14000e0a0:	mov    rcx,QWORD PTR [rbx+0x18]
   14000e0a4:	call   0x14002b138
   14000e0a9:	nop
   14000e0aa:	mov    rcx,rbx
   14000e0ad:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e0b2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e0b7:	add    rsp,0x30
   14000e0bb:	pop    rdi
   14000e0bc:	jmp    0x14000e428
   14000e0c1:	int3   
   14000e0c2:	int3   
   14000e0c3:	int3   
   14000e0c4:	mov    QWORD PTR [rsp+0x8],rcx
   14000e0c9:	sub    rsp,0x38
   14000e0cd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e0d6:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e0da:	add    rsp,0x38
   14000e0de:	jmp    0x14002b138
   14000e0e3:	int3   
   14000e0e4:	rex push rbx
   14000e0e6:	sub    rsp,0x30
   14000e0ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e0f3:	mov    rbx,rdx
   14000e0f6:	call   0x14000e358
   14000e0fb:	mov    r8,rax
   14000e0fe:	mov    QWORD PTR [rsp+0x50],rax
   14000e103:	mov    WORD PTR [rax+0x18],0x0
   14000e109:	lea    rcx,[rax+0x20]
   14000e10d:	mov    QWORD PTR [rsp+0x58],rcx
   14000e112:	mov    QWORD PTR [rsp+0x28],rcx
   14000e117:	test   rcx,rcx
   14000e11a:	je     0x14000e128
   14000e11c:	mov    eax,DWORD PTR [rbx]
   14000e11e:	mov    DWORD PTR [rcx],eax
   14000e120:	mov    rax,QWORD PTR [rbx+0x8]
   14000e124:	mov    QWORD PTR [rcx+0x8],rax
   14000e128:	mov    rax,r8
   14000e12b:	add    rsp,0x30
   14000e12f:	pop    rbx
   14000e130:	ret    
   14000e131:	int3   
   14000e132:	int3   
   14000e133:	int3   
   14000e134:	mov    QWORD PTR [rsp+0x18],r8
   14000e139:	push   rbx
   14000e13a:	sub    rsp,0x50
   14000e13e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000e147:	mov    r11,r9
   14000e14a:	mov    rbx,rdx
   14000e14d:	mov    r10,rcx
   14000e150:	xor    r8d,r8d
   14000e153:	cmp    QWORD PTR [rcx+0x8],r8
   14000e157:	jne    0x14000e179
   14000e159:	mov    rax,QWORD PTR [rsp+0x80]
   14000e161:	mov    QWORD PTR [rsp+0x28],rax
   14000e166:	mov    r9,QWORD PTR [rcx]
   14000e169:	mov    r8b,0x1
   14000e16c:	call   0x14000e508
   14000e171:	mov    rax,rbx
   14000e174:	jmp    0x14000e351
   14000e179:	mov    rax,QWORD PTR [rcx]
   14000e17c:	mov    r9,QWORD PTR [rsp+0x70]
   14000e181:	cmp    r9,QWORD PTR [rax]
   14000e184:	jne    0x14000e1b0
   14000e186:	mov    eax,DWORD PTR [r9+0x20]
   14000e18a:	cmp    DWORD PTR [r11],eax
   14000e18d:	jae    0x14000e32b
   14000e193:	mov    rax,QWORD PTR [rsp+0x80]
   14000e19b:	mov    QWORD PTR [rsp+0x28],rax
   14000e1a0:	mov    r8b,0x1
   14000e1a3:	call   0x14000e508
   14000e1a8:	mov    rax,rbx
   14000e1ab:	jmp    0x14000e351
   14000e1b0:	cmp    r9,rax
   14000e1b3:	jne    0x14000e1e3
   14000e1b5:	mov    r9,QWORD PTR [rax+0x10]
   14000e1b9:	mov    eax,DWORD PTR [r11]
   14000e1bc:	cmp    DWORD PTR [r9+0x20],eax
   14000e1c0:	jae    0x14000e32b
   14000e1c6:	mov    rax,QWORD PTR [rsp+0x80]
   14000e1ce:	mov    QWORD PTR [rsp+0x28],rax
   14000e1d3:	xor    r8d,r8d
   14000e1d6:	call   0x14000e508
   14000e1db:	mov    rax,rbx
   14000e1de:	jmp    0x14000e351
   14000e1e3:	mov    ecx,DWORD PTR [r11]
   14000e1e6:	cmp    DWORD PTR [r9+0x20],ecx
   14000e1ea:	jbe    0x14000e292
   14000e1f0:	mov    rcx,r9
   14000e1f3:	cmp    BYTE PTR [r9+0x19],r8b
   14000e1f7:	je     0x14000e1ff
   14000e1f9:	mov    rax,QWORD PTR [r9+0x10]
   14000e1fd:	jmp    0x14000e236
   14000e1ff:	mov    rax,QWORD PTR [r9]
   14000e202:	cmp    BYTE PTR [rax+0x19],r8b
   14000e206:	jne    0x14000e217
   14000e208:	mov    rcx,QWORD PTR [rax+0x10]
   14000e20c:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e210:	jne    0x14000e236
   14000e212:	mov    rax,rcx
   14000e215:	jmp    0x14000e208
   14000e217:	mov    rdx,QWORD PTR [rcx+0x8]
   14000e21b:	cmp    BYTE PTR [rdx+0x19],r8b
   14000e21f:	jne    0x14000e22b
   14000e221:	cmp    rcx,QWORD PTR [rdx]
   14000e224:	jne    0x14000e22b
   14000e226:	mov    rcx,rdx
   14000e229:	jmp    0x14000e217
   14000e22b:	mov    rax,rcx
   14000e22e:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e232:	cmove  rax,rdx
   14000e236:	mov    ecx,DWORD PTR [r11]
   14000e239:	cmp    DWORD PTR [rax+0x20],ecx
   14000e23c:	jae    0x14000e28e
   14000e23e:	mov    rcx,QWORD PTR [rax+0x10]
   14000e242:	mov    rdx,rbx
   14000e245:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e249:	je     0x14000e26e
   14000e24b:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e253:	mov    QWORD PTR [rsp+0x28],rcx
   14000e258:	mov    r9,rax
   14000e25b:	xor    r8d,r8d
   14000e25e:	mov    rcx,r10
   14000e261:	call   0x14000e508
   14000e266:	mov    rax,rbx
   14000e269:	jmp    0x14000e351
   14000e26e:	mov    rax,QWORD PTR [rsp+0x80]
   14000e276:	mov    QWORD PTR [rsp+0x28],rax
   14000e27b:	mov    r8b,0x1
   14000e27e:	mov    rcx,r10
   14000e281:	call   0x14000e508
   14000e286:	mov    rax,rbx
   14000e289:	jmp    0x14000e351
   14000e28e:	cmp    DWORD PTR [r9+0x20],ecx
   14000e292:	jae    0x14000e32b
   14000e298:	mov    rax,r9
   14000e29b:	cmp    BYTE PTR [r9+0x19],r8b
   14000e29f:	jne    0x14000e2d4
   14000e2a1:	mov    rcx,QWORD PTR [r9+0x10]
   14000e2a5:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e2a9:	jne    0x14000e2bc
   14000e2ab:	mov    rax,rcx
   14000e2ae:	mov    rcx,QWORD PTR [rax]
   14000e2b1:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e2b5:	jne    0x14000e2d4
   14000e2b7:	mov    rax,rcx
   14000e2ba:	jmp    0x14000e2ae
   14000e2bc:	mov    rcx,QWORD PTR [rax+0x8]
   14000e2c0:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e2c4:	jne    0x14000e2d1
   14000e2c6:	cmp    rax,QWORD PTR [rcx+0x10]
   14000e2ca:	jne    0x14000e2d1
   14000e2cc:	mov    rax,rcx
   14000e2cf:	jmp    0x14000e2bc
   14000e2d1:	mov    rax,rcx
   14000e2d4:	cmp    rax,QWORD PTR [r10]
   14000e2d7:	je     0x14000e2e1
   14000e2d9:	mov    ecx,DWORD PTR [rax+0x20]
   14000e2dc:	cmp    DWORD PTR [r11],ecx
   14000e2df:	jae    0x14000e32b
   14000e2e1:	mov    rcx,QWORD PTR [r9+0x10]
   14000e2e5:	mov    rdx,rbx
   14000e2e8:	cmp    BYTE PTR [rcx+0x19],r8b
   14000e2ec:	je     0x14000e30b
   14000e2ee:	mov    rax,QWORD PTR [rsp+0x80]
   14000e2f6:	mov    QWORD PTR [rsp+0x28],rax
   14000e2fb:	xor    r8d,r8d
   14000e2fe:	mov    rcx,r10
   14000e301:	call   0x14000e508
   14000e306:	mov    rax,rbx
   14000e309:	jmp    0x14000e351
   14000e30b:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e313:	mov    QWORD PTR [rsp+0x28],rcx
   14000e318:	mov    r9,rax
   14000e31b:	mov    r8b,0x1
   14000e31e:	mov    rcx,r10
   14000e321:	call   0x14000e508
   14000e326:	mov    rax,rbx
   14000e329:	jmp    0x14000e351
   14000e32b:	mov    rax,QWORD PTR [rsp+0x80]
   14000e333:	mov    QWORD PTR [rsp+0x20],rax
   14000e338:	mov    r9,r11
   14000e33b:	lea    rdx,[rsp+0x38]
   14000e340:	mov    rcx,r10
   14000e343:	call   0x14000e788
   14000e348:	mov    rcx,QWORD PTR [rax]
   14000e34b:	mov    QWORD PTR [rbx],rcx
   14000e34e:	mov    rax,rbx
   14000e351:	add    rsp,0x50
   14000e355:	pop    rbx
   14000e356:	ret    
   14000e357:	int3   
   14000e358:	rex push rbx
   14000e35a:	sub    rsp,0x30
   14000e35e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e367:	mov    rbx,rcx
   14000e36a:	mov    ecx,0x30
   14000e36f:	call   0x140021a98
   14000e374:	mov    rdx,rax
   14000e377:	mov    QWORD PTR [rsp+0x48],rax
   14000e37c:	test   rax,rax
   14000e37f:	jne    0x14000e387
   14000e381:	call   0x14002a918
   14000e386:	nop
   14000e387:	mov    QWORD PTR [rsp+0x50],rax
   14000e38c:	mov    QWORD PTR [rsp+0x58],rax
   14000e391:	mov    rax,QWORD PTR [rbx]
   14000e394:	mov    QWORD PTR [rdx],rax
   14000e397:	lea    rcx,[rdx+0x8]
   14000e39b:	mov    QWORD PTR [rsp+0x50],rcx
   14000e3a0:	mov    QWORD PTR [rsp+0x58],rcx
   14000e3a5:	test   rcx,rcx
   14000e3a8:	je     0x14000e3b0
   14000e3aa:	mov    rax,QWORD PTR [rbx]
   14000e3ad:	mov    QWORD PTR [rcx],rax
   14000e3b0:	lea    rcx,[rdx+0x10]
   14000e3b4:	mov    QWORD PTR [rsp+0x50],rcx
   14000e3b9:	mov    QWORD PTR [rsp+0x58],rcx
   14000e3be:	test   rcx,rcx
   14000e3c1:	je     0x14000e3c9
   14000e3c3:	mov    rax,QWORD PTR [rbx]
   14000e3c6:	mov    QWORD PTR [rcx],rax
   14000e3c9:	mov    rax,rdx
   14000e3cc:	add    rsp,0x30
   14000e3d0:	pop    rbx
   14000e3d1:	ret    
   14000e3d2:	int3   
   14000e3d3:	int3   
   14000e3d4:	mov    QWORD PTR [rsp+0x8],rcx
   14000e3d9:	push   rbx
   14000e3da:	sub    rsp,0x30
   14000e3de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e3e7:	mov    rbx,rcx
   14000e3ea:	mov    ecx,0x58
   14000e3ef:	call   0x14002b130
   14000e3f4:	mov    QWORD PTR [rbx+0x8],rax
   14000e3f8:	add    rax,0x3f
   14000e3fc:	and    rax,0xffffffffffffffc0
   14000e400:	mov    QWORD PTR [rbx],rax
   14000e403:	mov    QWORD PTR [rsp+0x48],rax
   14000e408:	je     0x14000e41c
   14000e40a:	xor    ecx,ecx
   14000e40c:	mov    DWORD PTR [rax+0x8],ecx
   14000e40f:	mov    DWORD PTR [rax+0xc],ecx
   14000e412:	mov    QWORD PTR [rax],rcx
   14000e415:	mov    DWORD PTR [rax+0x10],0xffffffff
   14000e41c:	mov    rax,rbx
   14000e41f:	add    rsp,0x30
   14000e423:	pop    rbx
   14000e424:	ret    
   14000e425:	int3   
   14000e426:	int3   
   14000e427:	int3   
   14000e428:	mov    QWORD PTR [rsp+0x8],rbx
   14000e42d:	push   rdi
   14000e42e:	sub    rsp,0x20
   14000e432:	mov    rbx,QWORD PTR [rcx]
   14000e435:	mov    rdi,rcx
   14000e438:	mov    rax,QWORD PTR [rbx]
   14000e43b:	test   rax,rax
   14000e43e:	je     0x14000e449
   14000e440:	mov    rcx,QWORD PTR [rbx]
   14000e443:	call   QWORD PTR [rip+0x2b177]        # 0x1400395c0
   14000e449:	mov    QWORD PTR [rbx],0x0
   14000e450:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e454:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e459:	add    rsp,0x20
   14000e45d:	pop    rdi
   14000e45e:	jmp    0x14002b138
   14000e463:	int3   
   14000e464:	mov    QWORD PTR [rsp+0x8],rbx
   14000e469:	mov    QWORD PTR [rsp+0x10],rbp
   14000e46e:	mov    QWORD PTR [rsp+0x18],rsi
   14000e473:	push   rdi
   14000e474:	sub    rsp,0x20
   14000e478:	cmp    DWORD PTR [rcx+0x4],edx
   14000e47b:	mov    ebp,edx
   14000e47d:	mov    eax,edx
   14000e47f:	cmovb  ebp,DWORD PTR [rcx+0x4]
   14000e483:	xor    edi,edi
   14000e485:	mov    esi,edx
   14000e487:	imul   eax,DWORD PTR [rcx+0x8]
   14000e48b:	add    eax,DWORD PTR [rcx]
   14000e48d:	mov    rbx,rcx
   14000e490:	test   edx,edx
   14000e492:	je     0x14000e4af
   14000e494:	mov    ecx,eax
   14000e496:	call   0x14002b130
   14000e49b:	mov    ecx,DWORD PTR [rbx]
   14000e49d:	dec    rcx
   14000e4a0:	mov    r9,rax
   14000e4a3:	lea    r8,[rcx+rax*1]
   14000e4a7:	not    rcx
   14000e4aa:	and    r8,rcx
   14000e4ad:	jmp    0x14000e4b5
   14000e4af:	mov    r9,rdi
   14000e4b2:	mov    r8,rdi
   14000e4b5:	test   ebp,ebp
   14000e4b7:	je     0x14000e4d1
   14000e4b9:	mov    rax,QWORD PTR [rbx+0x18]
   14000e4bd:	mov    edx,edi
   14000e4bf:	inc    edi
   14000e4c1:	imul   edx,DWORD PTR [rbx+0x8]
   14000e4c5:	mov    rcx,QWORD PTR [rdx+rax*1]
   14000e4c9:	mov    QWORD PTR [rdx+r8*1],rcx
   14000e4cd:	cmp    edi,ebp
   14000e4cf:	jb     0x14000e4b9
   14000e4d1:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e4d5:	mov    QWORD PTR [rbx+0x18],r8
   14000e4d9:	mov    DWORD PTR [rbx+0x4],esi
   14000e4dc:	mov    QWORD PTR [rbx+0x10],r9
   14000e4e0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e4e5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e4ea:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e4ef:	add    rsp,0x20
   14000e4f3:	pop    rdi
   14000e4f4:	jmp    0x14002b138
   14000e4f9:	int3   
   14000e4fa:	int3   
   14000e4fb:	int3   
   14000e4fc:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e500:	jmp    0x14002b138
   14000e505:	int3   
   14000e506:	int3   
   14000e507:	int3   
   14000e508:	mov    QWORD PTR [rsp+0x8],rbx
   14000e50d:	push   rdi
   14000e50e:	sub    rsp,0x20
   14000e512:	mov    rax,QWORD PTR [rcx+0x8]
   14000e516:	mov    r10,rcx
   14000e519:	movabs rcx,0x555555555555554
   14000e523:	mov    r11b,r8b
   14000e526:	mov    rbx,rdx
   14000e529:	cmp    rax,rcx
   14000e52c:	jae    0x14000e76e
   14000e532:	mov    r8,QWORD PTR [rsp+0x58]
   14000e537:	inc    rax
   14000e53a:	xor    edi,edi
   14000e53c:	mov    QWORD PTR [r10+0x8],rax
   14000e540:	mov    QWORD PTR [r8+0x8],r9
   14000e544:	mov    rax,QWORD PTR [r10]
   14000e547:	cmp    r9,rax
   14000e54a:	jne    0x14000e55b
   14000e54c:	mov    QWORD PTR [rax+0x8],r8
   14000e550:	mov    rax,QWORD PTR [r10]
   14000e553:	mov    QWORD PTR [rax],r8
   14000e556:	mov    rax,QWORD PTR [r10]
   14000e559:	jmp    0x14000e57d
   14000e55b:	test   r11b,r11b
   14000e55e:	je     0x14000e570
   14000e560:	mov    QWORD PTR [r9],r8
   14000e563:	mov    rax,QWORD PTR [r10]
   14000e566:	cmp    r9,QWORD PTR [rax]
   14000e569:	jne    0x14000e581
   14000e56b:	mov    QWORD PTR [rax],r8
   14000e56e:	jmp    0x14000e581
   14000e570:	mov    QWORD PTR [r9+0x10],r8
   14000e574:	mov    rax,QWORD PTR [r10]
   14000e577:	cmp    r9,QWORD PTR [rax+0x10]
   14000e57b:	jne    0x14000e581
   14000e57d:	mov    QWORD PTR [rax+0x10],r8
   14000e581:	mov    rax,QWORD PTR [r8+0x8]
   14000e585:	mov    rdx,r8
   14000e588:	jmp    0x14000e748
   14000e58d:	mov    rax,QWORD PTR [rdx+0x8]
   14000e591:	mov    r9,QWORD PTR [rax+0x8]
   14000e595:	mov    rcx,QWORD PTR [r9]
   14000e598:	cmp    rax,rcx
   14000e59b:	jne    0x14000e667
   14000e5a1:	mov    rcx,QWORD PTR [r9+0x10]
   14000e5a5:	cmp    BYTE PTR [rcx+0x18],dil
   14000e5a9:	je     0x14000e66d
   14000e5af:	cmp    rdx,QWORD PTR [rax+0x10]
   14000e5b3:	jne    0x14000e600
   14000e5b5:	mov    rcx,QWORD PTR [rax+0x10]
   14000e5b9:	mov    rdx,rax
   14000e5bc:	mov    rax,QWORD PTR [rcx]
   14000e5bf:	mov    QWORD PTR [rdx+0x10],rax
   14000e5c3:	mov    rax,QWORD PTR [rcx]
   14000e5c6:	cmp    BYTE PTR [rax+0x19],dil
   14000e5ca:	jne    0x14000e5d0
   14000e5cc:	mov    QWORD PTR [rax+0x8],rdx
   14000e5d0:	mov    rax,QWORD PTR [rdx+0x8]
   14000e5d4:	mov    QWORD PTR [rcx+0x8],rax
   14000e5d8:	mov    rax,QWORD PTR [r10]
   14000e5db:	cmp    rdx,QWORD PTR [rax+0x8]
   14000e5df:	jne    0x14000e5e7
   14000e5e1:	mov    QWORD PTR [rax+0x8],rcx
   14000e5e5:	jmp    0x14000e5f9
   14000e5e7:	mov    rax,QWORD PTR [rdx+0x8]
   14000e5eb:	cmp    rdx,QWORD PTR [rax]
   14000e5ee:	jne    0x14000e5f5
   14000e5f0:	mov    QWORD PTR [rax],rcx
   14000e5f3:	jmp    0x14000e5f9
   14000e5f5:	mov    QWORD PTR [rax+0x10],rcx
   14000e5f9:	mov    QWORD PTR [rcx],rdx
   14000e5fc:	mov    QWORD PTR [rdx+0x8],rcx
   14000e600:	mov    rax,QWORD PTR [rdx+0x8]
   14000e604:	mov    BYTE PTR [rax+0x18],0x1
   14000e608:	mov    rax,QWORD PTR [rdx+0x8]
   14000e60c:	mov    rcx,QWORD PTR [rax+0x8]
   14000e610:	mov    BYTE PTR [rcx+0x18],dil
   14000e614:	mov    rax,QWORD PTR [rdx+0x8]
   14000e618:	mov    rcx,QWORD PTR [rax+0x8]
   14000e61c:	mov    r9,QWORD PTR [rcx]
   14000e61f:	mov    rax,QWORD PTR [r9+0x10]
   14000e623:	mov    QWORD PTR [rcx],rax
   14000e626:	mov    rax,QWORD PTR [r9+0x10]
   14000e62a:	cmp    BYTE PTR [rax+0x19],dil
   14000e62e:	jne    0x14000e634
   14000e630:	mov    QWORD PTR [rax+0x8],rcx
   14000e634:	mov    rax,QWORD PTR [rcx+0x8]
   14000e638:	mov    QWORD PTR [r9+0x8],rax
   14000e63c:	mov    rax,QWORD PTR [r10]
   14000e63f:	cmp    rcx,QWORD PTR [rax+0x8]
   14000e643:	jne    0x14000e64b
   14000e645:	mov    QWORD PTR [rax+0x8],r9
   14000e649:	jmp    0x14000e65e
   14000e64b:	mov    rax,QWORD PTR [rcx+0x8]
   14000e64f:	cmp    rcx,QWORD PTR [rax+0x10]
   14000e653:	jne    0x14000e65b
   14000e655:	mov    QWORD PTR [rax+0x10],r9
   14000e659:	jmp    0x14000e65e
   14000e65b:	mov    QWORD PTR [rax],r9
   14000e65e:	mov    QWORD PTR [r9+0x10],rcx
   14000e662:	jmp    0x14000e740
   14000e667:	cmp    BYTE PTR [rcx+0x18],dil
   14000e66b:	jne    0x14000e68e
   14000e66d:	mov    BYTE PTR [rax+0x18],0x1
   14000e671:	mov    BYTE PTR [rcx+0x18],0x1
   14000e675:	mov    rax,QWORD PTR [rdx+0x8]
   14000e679:	mov    rcx,QWORD PTR [rax+0x8]
   14000e67d:	mov    BYTE PTR [rcx+0x18],dil
   14000e681:	mov    rax,QWORD PTR [rdx+0x8]
   14000e685:	mov    rdx,QWORD PTR [rax+0x8]
   14000e689:	jmp    0x14000e744
   14000e68e:	cmp    rdx,QWORD PTR [rax]
   14000e691:	jne    0x14000e6e0
   14000e693:	mov    rcx,QWORD PTR [rax]
   14000e696:	mov    rdx,rax
   14000e699:	mov    rax,QWORD PTR [rcx+0x10]
   14000e69d:	mov    QWORD PTR [rdx],rax
   14000e6a0:	mov    rax,QWORD PTR [rcx+0x10]
   14000e6a4:	cmp    BYTE PTR [rax+0x19],dil
   14000e6a8:	jne    0x14000e6ae
   14000e6aa:	mov    QWORD PTR [rax+0x8],rdx
   14000e6ae:	mov    rax,QWORD PTR [rdx+0x8]
   14000e6b2:	mov    QWORD PTR [rcx+0x8],rax
   14000e6b6:	mov    rax,QWORD PTR [r10]
   14000e6b9:	cmp    rdx,QWORD PTR [rax+0x8]
   14000e6bd:	jne    0x14000e6c5
   14000e6bf:	mov    QWORD PTR [rax+0x8],rcx
   14000e6c3:	jmp    0x14000e6d8
   14000e6c5:	mov    rax,QWORD PTR [rdx+0x8]
   14000e6c9:	cmp    rdx,QWORD PTR [rax+0x10]
   14000e6cd:	jne    0x14000e6d5
   14000e6cf:	mov    QWORD PTR [rax+0x10],rcx
   14000e6d3:	jmp    0x14000e6d8
   14000e6d5:	mov    QWORD PTR [rax],rcx
   14000e6d8:	mov    QWORD PTR [rcx+0x10],rdx
   14000e6dc:	mov    QWORD PTR [rdx+0x8],rcx
   14000e6e0:	mov    rax,QWORD PTR [rdx+0x8]
   14000e6e4:	mov    BYTE PTR [rax+0x18],0x1
   14000e6e8:	mov    rax,QWORD PTR [rdx+0x8]
   14000e6ec:	mov    rcx,QWORD PTR [rax+0x8]
   14000e6f0:	mov    BYTE PTR [rcx+0x18],dil
   14000e6f4:	mov    rax,QWORD PTR [rdx+0x8]
   14000e6f8:	mov    rcx,QWORD PTR [rax+0x8]
   14000e6fc:	mov    r9,QWORD PTR [rcx+0x10]
   14000e700:	mov    rax,QWORD PTR [r9]
   14000e703:	mov    QWORD PTR [rcx+0x10],rax
   14000e707:	mov    rax,QWORD PTR [r9]
   14000e70a:	cmp    BYTE PTR [rax+0x19],dil
   14000e70e:	jne    0x14000e714
   14000e710:	mov    QWORD PTR [rax+0x8],rcx
   14000e714:	mov    rax,QWORD PTR [rcx+0x8]
   14000e718:	mov    QWORD PTR [r9+0x8],rax
   14000e71c:	mov    rax,QWORD PTR [r10]
   14000e71f:	cmp    rcx,QWORD PTR [rax+0x8]
   14000e723:	jne    0x14000e72b
   14000e725:	mov    QWORD PTR [rax+0x8],r9
   14000e729:	jmp    0x14000e73d
   14000e72b:	mov    rax,QWORD PTR [rcx+0x8]
   14000e72f:	cmp    rcx,QWORD PTR [rax]
   14000e732:	jne    0x14000e739
   14000e734:	mov    QWORD PTR [rax],r9
   14000e737:	jmp    0x14000e73d
   14000e739:	mov    QWORD PTR [rax+0x10],r9
   14000e73d:	mov    QWORD PTR [r9],rcx
   14000e740:	mov    QWORD PTR [rcx+0x8],r9
   14000e744:	mov    rax,QWORD PTR [rdx+0x8]
   14000e748:	cmp    BYTE PTR [rax+0x18],dil
   14000e74c:	je     0x14000e58d
   14000e752:	mov    rax,QWORD PTR [r10]
   14000e755:	mov    QWORD PTR [rbx],r8
   14000e758:	mov    rcx,QWORD PTR [rax+0x8]
   14000e75c:	mov    rax,rbx
   14000e75f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e764:	mov    BYTE PTR [rcx+0x18],0x1
   14000e768:	add    rsp,0x20
   14000e76c:	pop    rdi
   14000e76d:	ret    
   14000e76e:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e773:	call   0x140020e30
   14000e778:	lea    rcx,[rip+0x2fd69]        # 0x14003e4e8
   14000e77f:	call   0x14002a95c
   14000e784:	int3   
   14000e785:	int3   
   14000e786:	int3   
   14000e787:	int3   
   14000e788:	rex push rdi
   14000e78a:	sub    rsp,0x50
   14000e78e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000e797:	mov    QWORD PTR [rsp+0x60],rbx
   14000e79c:	mov    QWORD PTR [rsp+0x68],rsi
   14000e7a1:	mov    rsi,r9
   14000e7a4:	mov    r11b,r8b
   14000e7a7:	mov    rdi,rdx
   14000e7aa:	mov    r9,QWORD PTR [rcx]
   14000e7ad:	mov    r10,QWORD PTR [r9+0x8]
   14000e7b1:	mov    r8b,0x1
   14000e7b4:	cmp    BYTE PTR [r10+0x19],0x0
   14000e7b9:	jne    0x14000e7e9
   14000e7bb:	mov    r9,r10
   14000e7be:	test   r11b,r11b
   14000e7c1:	je     0x14000e7cf
   14000e7c3:	mov    eax,DWORD PTR [rsi]
   14000e7c5:	cmp    DWORD PTR [r10+0x20],eax
   14000e7c9:	setae  r8b
   14000e7cd:	jmp    0x14000e7d9
   14000e7cf:	mov    eax,DWORD PTR [r10+0x20]
   14000e7d3:	cmp    DWORD PTR [rsi],eax
   14000e7d5:	setb   r8b
   14000e7d9:	test   r8b,r8b
   14000e7dc:	je     0x14000e7e3
   14000e7de:	mov    r10,QWORD PTR [r10]
   14000e7e1:	jmp    0x14000e7e7
   14000e7e3:	mov    r10,QWORD PTR [r10+0x10]
   14000e7e7:	jmp    0x14000e7b4
   14000e7e9:	mov    rbx,r9
   14000e7ec:	mov    QWORD PTR [rsp+0x30],rbx
   14000e7f1:	test   r8b,r8b
   14000e7f4:	je     0x14000e87c
   14000e7fa:	mov    rax,QWORD PTR [rcx]
   14000e7fd:	cmp    r9,QWORD PTR [rax]
   14000e800:	jne    0x14000e82e
   14000e802:	mov    rax,QWORD PTR [rsp+0x80]
   14000e80a:	mov    QWORD PTR [rsp+0x28],rax
   14000e80f:	mov    r8b,0x1
   14000e812:	lea    rdx,[rsp+0x40]
   14000e817:	call   0x14000e508
   14000e81c:	mov    rax,QWORD PTR [rax]
   14000e81f:	mov    QWORD PTR [rdi],rax
   14000e822:	mov    BYTE PTR [rdi+0x8],0x1
   14000e826:	mov    rax,rdi
   14000e829:	jmp    0x14000e8c0
   14000e82e:	cmp    BYTE PTR [r9+0x19],0x0
   14000e833:	je     0x14000e83b
   14000e835:	mov    rbx,QWORD PTR [r9+0x10]
   14000e839:	jmp    0x14000e877
   14000e83b:	mov    rax,QWORD PTR [r9]
   14000e83e:	cmp    BYTE PTR [rax+0x19],0x0
   14000e842:	jne    0x14000e856
   14000e844:	mov    rbx,rax
   14000e847:	mov    rax,QWORD PTR [rbx+0x10]
   14000e84b:	cmp    BYTE PTR [rax+0x19],0x0
   14000e84f:	jne    0x14000e877
   14000e851:	mov    rbx,rax
   14000e854:	jmp    0x14000e847
   14000e856:	mov    rax,QWORD PTR [rbx+0x8]
   14000e85a:	cmp    BYTE PTR [rax+0x19],0x0
   14000e85e:	jne    0x14000e86f
   14000e860:	cmp    rbx,QWORD PTR [rax]
   14000e863:	jne    0x14000e86f
   14000e865:	mov    rbx,rax
   14000e868:	mov    QWORD PTR [rsp+0x30],rax
   14000e86d:	jmp    0x14000e856
   14000e86f:	cmp    BYTE PTR [rbx+0x19],0x0
   14000e873:	cmove  rbx,rax
   14000e877:	mov    QWORD PTR [rsp+0x30],rbx
   14000e87c:	mov    eax,DWORD PTR [rsi]
   14000e87e:	cmp    DWORD PTR [rbx+0x20],eax
   14000e881:	jae    0x14000e8a9
   14000e883:	mov    rax,QWORD PTR [rsp+0x80]
   14000e88b:	mov    QWORD PTR [rsp+0x28],rax
   14000e890:	lea    rdx,[rsp+0x40]
   14000e895:	call   0x14000e508
   14000e89a:	mov    rax,QWORD PTR [rax]
   14000e89d:	mov    QWORD PTR [rdi],rax
   14000e8a0:	mov    BYTE PTR [rdi+0x8],0x1
   14000e8a4:	mov    rax,rdi
   14000e8a7:	jmp    0x14000e8c0
   14000e8a9:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e8b1:	call   0x140020e30
   14000e8b6:	mov    QWORD PTR [rdi],rbx
   14000e8b9:	mov    BYTE PTR [rdi+0x8],0x0
   14000e8bd:	mov    rax,rdi
   14000e8c0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e8c5:	mov    rsi,QWORD PTR [rsp+0x68]
   14000e8ca:	add    rsp,0x50
   14000e8ce:	pop    rdi
   14000e8cf:	ret    
   14000e8d0:	int3   
   14000e8d1:	int3   
   14000e8d2:	int3   
   14000e8d3:	int3   
   14000e8d4:	mov    QWORD PTR [rsp+0x8],rcx
   14000e8d9:	push   rbp
   14000e8da:	push   rbx
   14000e8db:	push   rsi
   14000e8dc:	push   rdi
   14000e8dd:	mov    rbp,rsp
   14000e8e0:	sub    rsp,0x18
   14000e8e4:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   14000e8ec:	mov    r8,rcx
   14000e8ef:	lea    rax,[rip+0x2fc12]        # 0x14003e508
   14000e8f6:	mov    QWORD PTR [rcx],rax
   14000e8f9:	mov    QWORD PTR [rcx+0x8],rdx
   14000e8fd:	lea    rax,[rcx+0x10]
   14000e901:	mov    QWORD PTR [rbp+0x30],rax
   14000e905:	lea    rdi,[rip+0x2f33c]        # 0x14003dc48
   14000e90c:	mov    QWORD PTR [rax],rdi
   14000e90f:	lea    rbx,[rip+0x2f11a]        # 0x14003da30
   14000e916:	mov    QWORD PTR [rax+0x8],rbx
   14000e91a:	xor    esi,esi
   14000e91c:	mov    QWORD PTR [rax+0x10],rsi
   14000e920:	lea    r11,[rip+0x2f151]        # 0x14003da78
   14000e927:	mov    QWORD PTR [rax],r11
   14000e92a:	lea    r10,[rip+0x2f11f]        # 0x14003da50
   14000e931:	mov    QWORD PTR [rax+0x8],r10
   14000e935:	mov    QWORD PTR [rax+0x18],rsi
   14000e939:	mov    QWORD PTR [rax+0x20],rsi
   14000e93d:	mov    DWORD PTR [rax+0x28],esi
   14000e940:	mov    QWORD PTR [rax+0x30],rsi
   14000e944:	mov    BYTE PTR [rax+0x38],sil
   14000e948:	add    rcx,0x150
   14000e94f:	mov    QWORD PTR [rbp+0x30],rcx
   14000e953:	lea    rax,[rip+0x30806]        # 0x14003f160
   14000e95a:	mov    QWORD PTR [rcx],rax
   14000e95d:	lea    r9d,[rsi+0x1]
   14000e961:	mov    DWORD PTR [rcx+0x8],r9d
   14000e965:	or     DWORD PTR [rcx+0x10],0xffffffff
   14000e969:	mov    QWORD PTR [rcx+0x18],rsi
   14000e96d:	lea    rax,[rcx+0x20]
   14000e971:	mov    QWORD PTR [rbp+0x38],rax
   14000e975:	mov    QWORD PTR [rax],rdi
   14000e978:	mov    QWORD PTR [rax+0x8],rbx
   14000e97c:	mov    QWORD PTR [rax+0x10],rsi
   14000e980:	mov    QWORD PTR [rax],r11
   14000e983:	mov    QWORD PTR [rax+0x8],r10
   14000e987:	mov    QWORD PTR [rax+0x18],rsi
   14000e98b:	mov    QWORD PTR [rax+0x20],rsi
   14000e98f:	mov    DWORD PTR [rax+0x28],esi
   14000e992:	mov    QWORD PTR [rax+0x30],rsi
   14000e996:	mov    BYTE PTR [rax+0x38],sil
   14000e99a:	mov    QWORD PTR [rcx+0x160],rsi
   14000e9a1:	mov    QWORD PTR [rcx+0x168],rsi
   14000e9a8:	lea    rax,[rcx+0x170]
   14000e9af:	mov    QWORD PTR [rbp+0x38],rax
   14000e9b3:	mov    QWORD PTR [rax],rbx
   14000e9b6:	mov    QWORD PTR [rax+0x8],rsi
   14000e9ba:	lea    rdx,[rip+0x30867]        # 0x14003f228
   14000e9c1:	mov    QWORD PTR [rax],rdx
   14000e9c4:	add    rcx,0x180
   14000e9cb:	mov    QWORD PTR [rbp+0x38],rcx
   14000e9cf:	lea    rax,[rip+0x30772]        # 0x14003f148
   14000e9d6:	mov    QWORD PTR [rcx],rax
   14000e9d9:	mov    DWORD PTR [rcx+0x8],r9d
   14000e9dd:	lea    rax,[rcx+0x10]
   14000e9e1:	mov    QWORD PTR [rbp+0x40],rax
   14000e9e5:	mov    QWORD PTR [rax],rdi
   14000e9e8:	mov    QWORD PTR [rax+0x8],rbx
   14000e9ec:	mov    QWORD PTR [rax+0x10],rsi
   14000e9f0:	mov    QWORD PTR [rax],r11
   14000e9f3:	mov    QWORD PTR [rax+0x8],r10
   14000e9f7:	mov    QWORD PTR [rax+0x18],rsi
   14000e9fb:	mov    QWORD PTR [rax+0x20],rsi
   14000e9ff:	mov    DWORD PTR [rax+0x28],esi
   14000ea02:	mov    QWORD PTR [rax+0x30],rsi
   14000ea06:	mov    BYTE PTR [rax+0x38],sil
   14000ea0a:	lea    rax,[rcx+0x150]
   14000ea11:	mov    QWORD PTR [rbp+0x40],rax
   14000ea15:	lea    rdx,[rip+0x307dc]        # 0x14003f1f8
   14000ea1c:	mov    QWORD PTR [rax],rdx
   14000ea1f:	mov    DWORD PTR [rax+0x8],r9d
   14000ea23:	add    rax,0x10
   14000ea27:	mov    QWORD PTR [rbp-0x10],rax
   14000ea2b:	mov    QWORD PTR [rax],rdi
   14000ea2e:	mov    QWORD PTR [rax+0x8],rbx
   14000ea32:	mov    QWORD PTR [rax+0x10],rsi
   14000ea36:	mov    QWORD PTR [rax],r11
   14000ea39:	mov    QWORD PTR [rax+0x8],r10
   14000ea3d:	mov    QWORD PTR [rax+0x18],rsi
   14000ea41:	mov    QWORD PTR [rax+0x20],rsi
   14000ea45:	mov    DWORD PTR [rax+0x28],esi
   14000ea48:	mov    QWORD PTR [rax+0x30],rsi
   14000ea4c:	mov    BYTE PTR [rax+0x38],sil
   14000ea50:	mov    DWORD PTR [rcx+0x2a0],esi
   14000ea56:	lea    rdx,[r8+0x578]
   14000ea5d:	mov    QWORD PTR [rbp+0x30],rdx
   14000ea61:	lea    rax,[rip+0x30710]        # 0x14003f178
   14000ea68:	mov    QWORD PTR [rdx],rax
   14000ea6b:	mov    DWORD PTR [rdx+0x8],r9d
   14000ea6f:	lea    rax,[rdx+0x10]
   14000ea73:	mov    QWORD PTR [rbp+0x38],rax
   14000ea77:	mov    QWORD PTR [rax],rdi
   14000ea7a:	mov    QWORD PTR [rax+0x8],rbx
   14000ea7e:	mov    QWORD PTR [rax+0x10],rsi
   14000ea82:	mov    QWORD PTR [rax],r11
   14000ea85:	mov    QWORD PTR [rax+0x8],r10
   14000ea89:	mov    QWORD PTR [rax+0x18],rsi
   14000ea8d:	mov    QWORD PTR [rax+0x20],rsi
   14000ea91:	mov    DWORD PTR [rax+0x28],esi
   14000ea94:	mov    QWORD PTR [rax+0x30],rsi
   14000ea98:	mov    BYTE PTR [rax+0x38],sil
   14000ea9c:	lea    rcx,[rdx+0x150]
   14000eaa3:	mov    QWORD PTR [rbp+0x38],rcx
   14000eaa7:	lea    rax,[rip+0x30762]        # 0x14003f210
   14000eaae:	mov    QWORD PTR [rcx],rax
   14000eab1:	mov    DWORD PTR [rcx+0x8],r9d
   14000eab5:	lea    rax,[rcx+0x10]
   14000eab9:	mov    QWORD PTR [rbp+0x40],rax
   14000eabd:	mov    QWORD PTR [rax],rdi
   14000eac0:	mov    QWORD PTR [rax+0x8],rbx
   14000eac4:	mov    QWORD PTR [rax+0x10],rsi
   14000eac8:	mov    QWORD PTR [rax],r11
   14000eacb:	mov    QWORD PTR [rax+0x8],r10
   14000eacf:	mov    QWORD PTR [rax+0x18],rsi
   14000ead3:	mov    QWORD PTR [rax+0x20],rsi
   14000ead7:	mov    DWORD PTR [rax+0x28],esi
   14000eada:	mov    QWORD PTR [rax+0x30],rsi
   14000eade:	mov    BYTE PTR [rax+0x38],sil
   14000eae2:	mov    DWORD PTR [rcx+0x150],esi
   14000eae8:	mov    QWORD PTR [rcx+0x158],rsi
   14000eaef:	lea    rax,[rdx+0x2b0]
   14000eaf6:	mov    QWORD PTR [rbp+0x38],rax
   14000eafa:	mov    QWORD PTR [rax],rbx
   14000eafd:	mov    QWORD PTR [rax+0x8],rsi
   14000eb01:	lea    rcx,[rip+0x2fd38]        # 0x14003e840
   14000eb08:	mov    QWORD PTR [rax],rcx
   14000eb0b:	mov    DWORD PTR [rax+0x10],esi
   14000eb0e:	lea    rax,[rdx+0x2c8]
   14000eb15:	mov    QWORD PTR [rbp+0x38],rax
   14000eb19:	mov    QWORD PTR [rax],rbx
   14000eb1c:	mov    QWORD PTR [rax+0x8],rsi
   14000eb20:	mov    QWORD PTR [rax],rcx
   14000eb23:	mov    DWORD PTR [rax+0x10],esi
   14000eb26:	mov    QWORD PTR [rdx+0x2e0],rsi
   14000eb2d:	mov    QWORD PTR [rdx+0x2e8],rsi
   14000eb34:	mov    DWORD PTR [rdx+0x2f4],esi
   14000eb3a:	lea    rcx,[r8+0x870]
   14000eb41:	mov    QWORD PTR [rbp+0x30],rcx
   14000eb45:	lea    rax,[rip+0x30664]        # 0x14003f1b0
   14000eb4c:	mov    QWORD PTR [rcx],rax
   14000eb4f:	mov    DWORD PTR [rcx+0x8],r9d
   14000eb53:	lea    rax,[rcx+0x10]
   14000eb57:	mov    QWORD PTR [rbp+0x38],rax
   14000eb5b:	mov    QWORD PTR [rax],rdi
   14000eb5e:	mov    QWORD PTR [rax+0x8],rbx
   14000eb62:	mov    QWORD PTR [rax+0x10],rsi
   14000eb66:	mov    QWORD PTR [rax],r11
   14000eb69:	mov    QWORD PTR [rax+0x8],r10
   14000eb6d:	mov    QWORD PTR [rax+0x18],rsi
   14000eb71:	mov    QWORD PTR [rax+0x20],rsi
   14000eb75:	mov    DWORD PTR [rax+0x28],esi
   14000eb78:	mov    QWORD PTR [rax+0x30],rsi
   14000eb7c:	mov    BYTE PTR [rax+0x38],sil
   14000eb80:	mov    QWORD PTR [rcx+0x150],rsi
   14000eb87:	mov    DWORD PTR [rcx+0x158],esi
   14000eb8d:	mov    QWORD PTR [rcx+0x160],rsi
   14000eb94:	mov    QWORD PTR [rcx+0x168],rsi
   14000eb9b:	mov    QWORD PTR [rcx+0x170],rsi
   14000eba2:	lea    rax,[rip+0x30587]        # 0x14003f130
   14000eba9:	mov    QWORD PTR [rcx],rax
   14000ebac:	mov    DWORD PTR [rcx+0x178],0x80000000
   14000ebb6:	mov    QWORD PTR [rcx+0x180],rsi
   14000ebbd:	lea    rdx,[r8+0x9f8]
   14000ebc4:	mov    QWORD PTR [rbp+0x30],rdx
   14000ebc8:	lea    rax,[rip+0x30501]        # 0x14003f0d0
   14000ebcf:	mov    QWORD PTR [rdx],rax
   14000ebd2:	mov    DWORD PTR [rdx+0x8],r9d
   14000ebd6:	mov    QWORD PTR [rdx+0x10],rsi
   14000ebda:	lea    rax,[rdx+0x18]
   14000ebde:	mov    QWORD PTR [rbp+0x38],rax
   14000ebe2:	mov    QWORD PTR [rax],rdi
   14000ebe5:	mov    QWORD PTR [rax+0x8],rbx
   14000ebe9:	mov    QWORD PTR [rax+0x10],rsi
   14000ebed:	mov    QWORD PTR [rax],r11
   14000ebf0:	mov    QWORD PTR [rax+0x8],r10
   14000ebf4:	mov    QWORD PTR [rax+0x18],rsi
   14000ebf8:	mov    QWORD PTR [rax+0x20],rsi
   14000ebfc:	mov    DWORD PTR [rax+0x28],esi
   14000ebff:	mov    QWORD PTR [rax+0x30],rsi
   14000ec03:	mov    BYTE PTR [rax+0x38],sil
   14000ec07:	lea    rax,[rdx+0x158]
   14000ec0e:	mov    QWORD PTR [rbp+0x38],rax
   14000ec12:	mov    QWORD PTR [rax],rdi
   14000ec15:	mov    QWORD PTR [rax+0x8],rbx
   14000ec19:	mov    QWORD PTR [rax+0x10],rsi
   14000ec1d:	mov    QWORD PTR [rax],r11
   14000ec20:	mov    QWORD PTR [rax+0x8],r10
   14000ec24:	mov    QWORD PTR [rax+0x18],rsi
   14000ec28:	mov    QWORD PTR [rax+0x20],rsi
   14000ec2c:	mov    DWORD PTR [rax+0x28],esi
   14000ec2f:	mov    QWORD PTR [rax+0x30],rsi
   14000ec33:	mov    BYTE PTR [rax+0x38],sil
   14000ec37:	mov    QWORD PTR [rdx+0x298],rsi
   14000ec3e:	lea    rcx,[rdx+0x2a0]
   14000ec45:	mov    QWORD PTR [rbp+0x38],rcx
   14000ec49:	lea    rax,[rip+0x2ee98]        # 0x14003dae8
   14000ec50:	mov    QWORD PTR [rcx],rax
   14000ec53:	lea    rax,[rip+0x30166]        # 0x14003edc0
   14000ec5a:	mov    QWORD PTR [rcx],rax
   14000ec5d:	mov    DWORD PTR [rcx+0x28],esi
   14000ec60:	mov    DWORD PTR [rcx+0x2c],esi
   14000ec63:	mov    QWORD PTR [rcx+0x20],rsi
   14000ec67:	mov    DWORD PTR [rcx+0x30],0xffffffff
   14000ec6e:	lea    rax,[rcx+0x8]
   14000ec72:	mov    QWORD PTR [rax+0x8],rax
   14000ec76:	mov    QWORD PTR [rax],rax
   14000ec79:	mov    DWORD PTR [rcx+0x18],esi
   14000ec7c:	mov    QWORD PTR [rdx+0x2d8],rsi
   14000ec83:	mov    rax,r8
   14000ec86:	add    rsp,0x18
   14000ec8a:	pop    rdi
   14000ec8b:	pop    rsi
   14000ec8c:	pop    rbx
   14000ec8d:	pop    rbp
   14000ec8e:	ret    
   14000ec8f:	int3   
   14000ec90:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec95:	push   rdi
   14000ec96:	sub    rsp,0x20
   14000ec9a:	mov    ebx,edx
   14000ec9c:	mov    rdi,rcx
   14000ec9f:	call   0x14000ecc0
   14000eca4:	test   bl,0x1
   14000eca7:	je     0x14000ecb1
   14000eca9:	mov    rcx,rdi
   14000ecac:	call   0x140020e30
   14000ecb1:	mov    rax,rdi
   14000ecb4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ecb9:	add    rsp,0x20
   14000ecbd:	pop    rdi
   14000ecbe:	ret    
   14000ecbf:	int3   
   14000ecc0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ecc5:	push   rbx
   14000ecc6:	sub    rsp,0x30
   14000ecca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ecd3:	mov    rbx,rcx
   14000ecd6:	lea    rax,[rip+0x2f82b]        # 0x14003e508
   14000ecdd:	mov    QWORD PTR [rcx],rax
   14000ece0:	add    rcx,0x9f8
   14000ece7:	call   0x14001e110
   14000ecec:	nop
   14000eced:	lea    rcx,[rbx+0x870]
   14000ecf4:	mov    QWORD PTR [rsp+0x48],rcx
   14000ecf9:	lea    rax,[rip+0x30430]        # 0x14003f130
   14000ed00:	mov    QWORD PTR [rcx],rax
   14000ed03:	call   0x14001f264
   14000ed08:	nop
   14000ed09:	lea    rcx,[rbx+0x578]
   14000ed10:	call   0x14001f174
   14000ed15:	nop
   14000ed16:	lea    rcx,[rbx+0x150]
   14000ed1d:	call   0x14001ee9c
   14000ed22:	nop
   14000ed23:	lea    rcx,[rbx+0x10]
   14000ed27:	add    rsp,0x30
   14000ed2b:	pop    rbx
   14000ed2c:	jmp    0x14000257c
   14000ed31:	int3   
   14000ed32:	int3   
   14000ed33:	int3   
   14000ed34:	rex push rbx
   14000ed36:	push   rbp
   14000ed37:	push   rsi
   14000ed38:	push   rdi
   14000ed39:	push   r14
   14000ed3b:	sub    rsp,0xb0
   14000ed42:	mov    rax,QWORD PTR [rip+0x3e6ff]        # 0x14004d448
   14000ed49:	xor    rax,rsp
   14000ed4c:	mov    QWORD PTR [rsp+0xa8],rax
   14000ed54:	cmp    DWORD PTR [rip+0x42f8d],0x0        # 0x140051ce8
   14000ed5b:	mov    r14,r8
   14000ed5e:	mov    rdi,rdx
   14000ed61:	mov    rsi,rcx
   14000ed64:	jne    0x14000ed79
   14000ed66:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ed6a:	call   0x14000b8fc
   14000ed6f:	mov    DWORD PTR [rip+0x42f6f],0x1        # 0x140051ce8
   14000ed79:	call   0x140006628
   14000ed7e:	and    QWORD PTR [rsp+0x40],0x0
   14000ed84:	and    QWORD PTR [rsp+0x38],0x0
   14000ed8a:	and    QWORD PTR [rsp+0x30],0x0
   14000ed90:	mov    r8d,DWORD PTR [rdi+0x4]
   14000ed94:	lea    rcx,[rip+0x42535]        # 0x1400512d0
   14000ed9b:	mov    r9,rax
   14000ed9e:	xor    edx,edx
   14000eda0:	mov    DWORD PTR [rsp+0x28],0x1
   14000eda8:	and    QWORD PTR [rsp+0x20],0x0
   14000edae:	call   0x140020004
   14000edb3:	and    DWORD PTR [rsp+0x50],0x0
   14000edb8:	mov    DWORD PTR [r14+0xc],eax
   14000edbc:	mov    rcx,QWORD PTR [rsi+0x8]
   14000edc0:	mov    r9d,DWORD PTR [rdi+0x14]
   14000edc4:	lea    rdx,[rsp+0x50]
   14000edc9:	lea    rbp,[rdi+0x22c]
   14000edd0:	add    rcx,0xf78
   14000edd7:	mov    QWORD PTR [rsp+0x28],rdx
   14000eddc:	mov    edx,DWORD PTR [rdi+0x4]
   14000eddf:	mov    r8,rbp
   14000ede2:	mov    DWORD PTR [rsp+0x20],eax
   14000ede6:	call   0x14000ce1c
   14000edeb:	test   eax,eax
   14000eded:	je     0x14000eeb5
   14000edf3:	and    DWORD PTR [r14+0x438],0x0
   14000edfb:	mov    DWORD PTR [r14],0x80
   14000ee02:	mov    rbx,QWORD PTR [rsi+0x8]
   14000ee06:	call   0x140006628
   14000ee0b:	mov    r9d,DWORD PTR [rdi+0x4]
   14000ee0f:	mov    QWORD PTR [rsp+0x48],rbp
   14000ee14:	mov    rdx,rax
   14000ee17:	mov    eax,DWORD PTR [rdi+0x20]
   14000ee1a:	lea    rcx,[rbx+0x1018]
   14000ee21:	mov    DWORD PTR [rsp+0x38],eax
   14000ee25:	mov    eax,DWORD PTR [rdi+0x1c]
   14000ee28:	mov    DWORD PTR [rsp+0x30],eax
   14000ee2c:	mov    eax,DWORD PTR [rdi+0x18]
   14000ee2f:	mov    DWORD PTR [rsp+0x28],eax
   14000ee33:	mov    eax,DWORD PTR [r14+0xc]
   14000ee37:	mov    DWORD PTR [rsp+0x20],eax
   14000ee3b:	call   0x1400114fc
   14000ee40:	mov    rax,QWORD PTR [rsi+0x8]
   14000ee44:	mov    rcx,QWORD PTR [rax+0x1558]
   14000ee4b:	mov    rax,QWORD PTR [rcx]
   14000ee4e:	call   QWORD PTR [rax+0x18]
   14000ee51:	test   al,al
   14000ee53:	je     0x14000ee6e
   14000ee55:	mov    rcx,QWORD PTR [rsi+0x8]
   14000ee59:	mov    r8d,DWORD PTR [rdi+0x4]
   14000ee5d:	mov    edx,0x61231774
   14000ee62:	mov    rcx,QWORD PTR [rcx+0x1558]
   14000ee69:	call   0x14000820c
   14000ee6e:	mov    r9d,DWORD PTR [rdi+0x4]
   14000ee72:	mov    rbx,QWORD PTR [rsi+0x8]
   14000ee76:	lea    rax,[rsp+0x68]
   14000ee7b:	lea    r8,[rip+0x2ecee]        # 0x14003db70
   14000ee82:	lea    rcx,[rsp+0x68]
   14000ee87:	mov    edx,0x3c
   14000ee8c:	mov    QWORD PTR [rsp+0x58],rax
   14000ee91:	mov    QWORD PTR [rsp+0x60],rbp
   14000ee96:	call   0x140001004
   14000ee9b:	mov    rax,QWORD PTR [rbx]
   14000ee9e:	lea    r9,[rsp+0x58]
   14000eea3:	mov    edx,0x61230d1f
   14000eea8:	mov    r8d,0x2
   14000eeae:	mov    rcx,rbx
   14000eeb1:	call   QWORD PTR [rax]
   14000eeb3:	jmp    0x14000eed8
   14000eeb5:	call   0x140006628
   14000eeba:	mov    r8d,DWORD PTR [rdi+0x4]
   14000eebe:	lea    rcx,[rip+0x4240b]        # 0x1400512d0
   14000eec5:	mov    r9,rax
   14000eec8:	call   0x1400200ec
   14000eecd:	mov    ecx,DWORD PTR [rsp+0x50]
   14000eed1:	mov    DWORD PTR [r14+0x438],ecx
   14000eed8:	mov    eax,0x1
   14000eedd:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000eee5:	xor    rcx,rsp
   14000eee8:	call   0x140020e50
   14000eeed:	add    rsp,0xb0
   14000eef4:	pop    r14
   14000eef6:	pop    rdi
   14000eef7:	pop    rsi
   14000eef8:	pop    rbp
   14000eef9:	pop    rbx
   14000eefa:	ret    
   14000eefb:	int3   
   14000eefc:	mov    rax,rsp
   14000eeff:	mov    QWORD PTR [rax+0x8],rbx
   14000ef03:	mov    QWORD PTR [rax+0x10],rbp
   14000ef07:	mov    QWORD PTR [rax+0x18],rsi
   14000ef0b:	mov    QWORD PTR [rax+0x20],rdi
   14000ef0f:	push   r14
   14000ef11:	sub    rsp,0x30
   14000ef15:	mov    r14,rcx
   14000ef18:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ef1c:	mov    esi,r8d
   14000ef1f:	mov    ebp,edx
   14000ef21:	mov    r8d,edx
   14000ef24:	mov    edx,0x61230d20
   14000ef29:	call   0x14000820c
   14000ef2e:	mov    rcx,QWORD PTR [r14+0x8]
   14000ef32:	mov    edx,ebp
   14000ef34:	add    rcx,0xf78
   14000ef3b:	call   0x14000d09c
   14000ef40:	call   0x140006628
   14000ef45:	lea    rcx,[rip+0x42384]        # 0x1400512d0
   14000ef4c:	mov    r9,rax
   14000ef4f:	mov    r8d,ebp
   14000ef52:	call   0x1400200ec
   14000ef57:	mov    rdi,QWORD PTR [r14+0x8]
   14000ef5b:	call   0x140006628
   14000ef60:	lea    rcx,[rdi+0x1018]
   14000ef67:	mov    rbx,rax
   14000ef6a:	call   0x140010d78
   14000ef6f:	lea    rcx,[rdi+0x1018]
   14000ef76:	mov    rdx,rax
   14000ef79:	mov    DWORD PTR [rax],0x2
   14000ef7f:	mov    DWORD PTR [rax+0x4],ebp
   14000ef82:	mov    DWORD PTR [rax+0x8],esi
   14000ef85:	mov    QWORD PTR [rax+0xc],rbx
   14000ef89:	call   0x140010f08
   14000ef8e:	mov    rax,QWORD PTR [r14+0x8]
   14000ef92:	mov    rcx,QWORD PTR [rax+0x1558]
   14000ef99:	mov    rax,QWORD PTR [rcx]
   14000ef9c:	call   QWORD PTR [rax+0x18]
   14000ef9f:	test   al,al
   14000efa1:	je     0x14000efbb
   14000efa3:	mov    rcx,QWORD PTR [r14+0x8]
   14000efa7:	mov    r8d,ebp
   14000efaa:	mov    edx,0x61231773
   14000efaf:	mov    rcx,QWORD PTR [rcx+0x1558]
   14000efb6:	call   0x14000820c
   14000efbb:	mov    rbx,QWORD PTR [rsp+0x40]
   14000efc0:	mov    rbp,QWORD PTR [rsp+0x48]
   14000efc5:	mov    rsi,QWORD PTR [rsp+0x50]
   14000efca:	mov    rdi,QWORD PTR [rsp+0x58]
   14000efcf:	mov    al,0x1
   14000efd1:	add    rsp,0x30
   14000efd5:	pop    r14
   14000efd7:	ret    
   14000efd8:	mov    rax,rsp
   14000efdb:	push   rbp
   14000efdc:	push   r12
   14000efde:	push   r13
   14000efe0:	push   r14
   14000efe2:	push   r15
   14000efe4:	lea    rbp,[rax-0x1c8]
   14000efeb:	sub    rsp,0x2a0
   14000eff2:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000effb:	mov    QWORD PTR [rax+0x10],rbx
   14000efff:	mov    QWORD PTR [rax+0x18],rsi
   14000f003:	mov    QWORD PTR [rax+0x20],rdi
   14000f007:	mov    rax,QWORD PTR [rip+0x3e43a]        # 0x14004d448
   14000f00e:	xor    rax,rsp
   14000f011:	mov    QWORD PTR [rbp+0x190],rax
   14000f018:	mov    rdi,rcx
   14000f01b:	mov    rax,QWORD PTR [rcx+0x8]
   14000f01f:	mov    rdx,QWORD PTR [rax+0x270]
   14000f026:	mov    r13d,DWORD PTR [rdx+0xc]
   14000f02a:	mov    DWORD PTR [rsp+0x58],r13d
   14000f02f:	mov    r15d,DWORD PTR [rdx+0x8]
   14000f033:	mov    eax,DWORD PTR [rdx+0x4]
   14000f036:	mov    DWORD PTR [rsp+0x48],eax
   14000f03a:	mov    r12d,DWORD PTR [rdx]
   14000f03d:	lea    ebx,[r13+0x40]
   14000f041:	imul   ebx,r15d
   14000f045:	mov    edx,DWORD PTR [rip+0x41d29]        # 0x140050d74
   14000f04b:	xor    esi,esi
   14000f04d:	test   edx,edx
   14000f04f:	jne    0x14000f05f
   14000f051:	call   0x140004f38
   14000f056:	lea    edx,[rsi+0x1]
   14000f059:	mov    DWORD PTR [rip+0x41d15],edx        # 0x140050d74
   14000f05f:	mov    r8d,DWORD PTR [rip+0x41d1e]        # 0x140050d84
   14000f066:	mov    r14d,r8d
   14000f069:	test   edx,edx
   14000f06b:	jne    0x14000f084
   14000f06d:	call   0x140004f38
   14000f072:	mov    edx,0x1
   14000f077:	mov    DWORD PTR [rip+0x41cf7],edx        # 0x140050d74
   14000f07d:	mov    r8d,DWORD PTR [rip+0x41d00]        # 0x140050d84
   14000f084:	mov    r9d,DWORD PTR [rsp+0x48]
   14000f089:	imul   r9d,r9d,0x3b8
   14000f090:	mov    DWORD PTR [rsp+0x5c],r9d
   14000f095:	mov    r10d,r12d
   14000f098:	imul   r10d,r10d,0x234
   14000f09f:	mov    DWORD PTR [rsp+0x60],r10d
   14000f0a4:	lea    ecx,[r8-0x1]
   14000f0a8:	not    ecx
   14000f0aa:	lea    eax,[r14+0x4d27]
   14000f0b1:	and    ecx,eax
   14000f0b3:	add    ecx,r10d
   14000f0b6:	add    ecx,r9d
   14000f0b9:	add    ebx,0x96b28
   14000f0bf:	add    ebx,ecx
   14000f0c1:	mov    rax,QWORD PTR [rdi+0x8]
   14000f0c5:	mov    rax,QWORD PTR [rax+0x270]
   14000f0cc:	mov    r14d,DWORD PTR [rax+0x10]
   14000f0d0:	test   edx,edx
   14000f0d2:	jne    0x14000f0eb
   14000f0d4:	call   0x140004f38
   14000f0d9:	mov    edx,0x1
   14000f0de:	mov    DWORD PTR [rip+0x41c90],edx        # 0x140050d74
   14000f0e4:	mov    r8d,DWORD PTR [rip+0x41c99]        # 0x140050d84
   14000f0eb:	imul   r8d,r14d
   14000f0ef:	add    ebx,r8d
   14000f0f2:	test   edx,edx
   14000f0f4:	jne    0x14000f105
   14000f0f6:	call   0x140004f38
   14000f0fb:	mov    DWORD PTR [rip+0x41c6f],0x1        # 0x140050d74
   14000f105:	cmp    DWORD PTR [rip+0x41d71],esi        # 0x140050e7c
   14000f10b:	je     0x14000f14b
   14000f10d:	call   QWORD PTR [rip+0x2a1fd]        # 0x140039310
   14000f113:	mov    rcx,rax
   14000f116:	lea    r8,[rsp+0x50]
   14000f11b:	lea    rdx,[rsp+0x40]
   14000f120:	call   QWORD PTR [rip+0x2a42a]        # 0x140039550
   14000f126:	mov    eax,ebx
   14000f128:	add    QWORD PTR [rsp+0x40],rax
   14000f12d:	add    QWORD PTR [rsp+0x50],rax
   14000f132:	call   QWORD PTR [rip+0x2a1d8]        # 0x140039310
   14000f138:	mov    rcx,rax
   14000f13b:	mov    r8,QWORD PTR [rsp+0x50]
   14000f140:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f145:	call   QWORD PTR [rip+0x2a40d]        # 0x140039558
   14000f14b:	lea    rbx,[rdi+0x10]
   14000f14f:	mov    DWORD PTR [rsp+0x28],0x1
   14000f157:	mov    DWORD PTR [rsp+0x20],esi
   14000f15b:	mov    r9d,0x1
   14000f161:	mov    r8d,0x4b8
   14000f167:	mov    rdx,QWORD PTR [rip+0x41d82]        # 0x140050ef0
   14000f16e:	mov    rcx,rbx
   14000f171:	call   0x14000262c
   14000f176:	mov    rax,QWORD PTR [rbx]
   14000f179:	mov    rcx,rbx
   14000f17c:	call   QWORD PTR [rax+0x8]
   14000f17f:	mov    rbx,rax
   14000f182:	call   QWORD PTR [rip+0x2a380]        # 0x140039508
   14000f188:	mov    DWORD PTR [rbx+0x4a8],eax
   14000f18e:	lea    r14,[rdi+0x578]
   14000f195:	lea    rbx,[r14+0x10]
   14000f199:	mov    DWORD PTR [rsp+0x28],0x1
   14000f1a1:	mov    DWORD PTR [rsp+0x20],esi
   14000f1a5:	mov    r9d,0x1
   14000f1ab:	mov    r8d,0x4b8
   14000f1b1:	mov    rdx,QWORD PTR [rip+0x41d38]        # 0x140050ef0
   14000f1b8:	mov    rcx,rbx
   14000f1bb:	call   0x14000262c
   14000f1c0:	mov    rax,QWORD PTR [rbx]
   14000f1c3:	mov    rcx,rbx
   14000f1c6:	call   QWORD PTR [rax+0x8]
   14000f1c9:	lea    rcx,[rax+0x400]
   14000f1d0:	mov    QWORD PTR [r14+0x2e0],rcx
   14000f1d7:	lea    rcx,[rax+0x440]
   14000f1de:	mov    QWORD PTR [r14+0x2e8],rcx
   14000f1e5:	mov    eax,DWORD PTR [rax+0x344]
   14000f1eb:	mov    DWORD PTR [r14+0x2f0],eax
   14000f1f2:	mov    r8,QWORD PTR [rip+0x41d47]        # 0x140050f40
   14000f1f9:	xor    edx,edx
   14000f1fb:	mov    ebx,0x100002
   14000f200:	mov    ecx,ebx
   14000f202:	call   QWORD PTR [rip+0x29f30]        # 0x140039138
   14000f208:	mov    QWORD PTR [r14+0x2b8],rax
   14000f20f:	test   rax,rax
   14000f212:	jne    0x14000f21b
   14000f214:	mov    DWORD PTR [r14+0x2f0],esi
   14000f21b:	mov    r8,QWORD PTR [rip+0x41d26]        # 0x140050f48
   14000f222:	xor    edx,edx
   14000f224:	mov    ecx,ebx
   14000f226:	call   QWORD PTR [rip+0x29f0c]        # 0x140039138
   14000f22c:	mov    QWORD PTR [r14+0x2d0],rax
   14000f233:	test   rax,rax
   14000f236:	jne    0x14000f23f
   14000f238:	mov    DWORD PTR [r14+0x2f0],esi
   14000f23f:	mov    QWORD PTR [r14+0x2a8],r14
   14000f246:	mov    DWORD PTR [r14+0x2a0],0x400
   14000f251:	lea    rbx,[r14+0x160]
   14000f258:	mov    eax,esi
   14000f25a:	cmp    DWORD PTR [r14+0x158],0x3
   14000f262:	setne  al
   14000f265:	mov    DWORD PTR [rsp+0x28],0x1
   14000f26d:	mov    DWORD PTR [rsp+0x20],eax
   14000f271:	mov    r9d,0x1
   14000f277:	mov    r8d,0x96000
   14000f27d:	mov    rdx,QWORD PTR [rip+0x41c5c]        # 0x140050ee0
   14000f284:	mov    rcx,rbx
   14000f287:	call   0x14000262c
   14000f28c:	cmp    DWORD PTR [r14+0x158],0x1
   14000f294:	jne    0x14000f301
   14000f296:	mov    rax,QWORD PTR [rbx]
   14000f299:	mov    rcx,rbx
   14000f29c:	call   QWORD PTR [rax+0x8]
   14000f29f:	mov    QWORD PTR [rsp+0x40],rax
   14000f2a4:	mov    edx,0x400
   14000f2a9:	mov    ecx,DWORD PTR [rip+0x41d01]        # 0x140050fb0
   14000f2af:	mov    QWORD PTR [rsp+0x50],rax
   14000f2b4:	test   rax,rax
   14000f2b7:	je     0x14000f2d4
   14000f2b9:	mov    QWORD PTR [rax],rsi
   14000f2bc:	mov    DWORD PTR [rax+0x8],ecx
   14000f2bf:	inc    ecx
   14000f2c1:	mov    DWORD PTR [rip+0x41ce9],ecx        # 0x140050fb0
   14000f2c7:	mov    DWORD PTR [rax+0x10],esi
   14000f2ca:	or     DWORD PTR [rax+0x14],0xffffffff
   14000f2ce:	or     DWORD PTR [rax+0x18],0xffffffff
   14000f2d2:	jmp    0x14000f2d7
   14000f2d4:	mov    rax,rsi
   14000f2d7:	add    rax,0x258
   14000f2dd:	mov    QWORD PTR [rsp+0x40],rax
   14000f2e2:	dec    rdx
   14000f2e5:	jne    0x14000f2af
   14000f2e7:	mov    ebx,esi
   14000f2e9:	mov    edx,ebx
   14000f2eb:	mov    rcx,QWORD PTR [r14+0x2a8]
   14000f2f2:	call   0x14001f1dc
   14000f2f7:	inc    ebx
   14000f2f9:	cmp    ebx,0x400
   14000f2ff:	jb     0x14000f2e9
   14000f301:	mov    DWORD PTR [r14+0x2f4],0x1
   14000f30c:	or     DWORD PTR [rdi+0x160],0xffffffff
   14000f313:	lea    rbx,[rdi+0x170]
   14000f31a:	mov    DWORD PTR [rsp+0x28],0x1
   14000f322:	mov    DWORD PTR [rsp+0x20],esi
   14000f326:	mov    r9d,0x1
   14000f32c:	mov    r8d,0x4b8
   14000f332:	mov    rdx,QWORD PTR [rip+0x41bb7]        # 0x140050ef0
   14000f339:	mov    rcx,rbx
   14000f33c:	call   0x14000262c
   14000f341:	mov    rax,QWORD PTR [rbx]
   14000f344:	mov    rcx,rbx
   14000f347:	call   QWORD PTR [rax+0x8]
   14000f34a:	lea    rcx,[rax+0x380]
   14000f351:	mov    QWORD PTR [rdi+0x2b0],rcx
   14000f358:	lea    rcx,[rax+0x3c0]
   14000f35f:	mov    QWORD PTR [rdi+0x2b8],rcx
   14000f366:	add    rax,0x4a0
   14000f36c:	mov    QWORD PTR [rdi+0x168],rax
   14000f373:	mov    ebx,0x1
   14000f378:	xor    edx,edx
   14000f37a:	cmp    DWORD PTR [rdi+0x158],ebx
   14000f380:	jne    0x14000f3fd
   14000f382:	mov    r9,QWORD PTR [rip+0x41b9f]        # 0x140050f28
   14000f389:	mov    r8d,r15d
   14000f38c:	xor    ecx,ecx
   14000f38e:	call   QWORD PTR [rip+0x29f3c]        # 0x1400392d0
   14000f394:	mov    QWORD PTR [rdi+0x2c8],rax
   14000f39b:	call   QWORD PTR [rip+0x2a23f]        # 0x1400395e0
   14000f3a1:	mov    r14d,0xb7
   14000f3a7:	cmp    eax,r14d
   14000f3aa:	jne    0x14000f3c9
   14000f3ac:	mov    rcx,QWORD PTR [rdi+0x2c8]
   14000f3b3:	call   QWORD PTR [rip+0x2a207]        # 0x1400395c0
   14000f3b9:	mov    QWORD PTR [rdi+0x2c8],rsi
   14000f3c0:	mov    ecx,r14d
   14000f3c3:	call   QWORD PTR [rip+0x29dff]        # 0x1400391c8
   14000f3c9:	cmp    QWORD PTR [rdi+0x2c8],rsi
   14000f3d0:	jne    0x14000f443
   14000f3d2:	call   QWORD PTR [rip+0x2a208]        # 0x1400395e0
   14000f3d8:	mov    edx,eax
   14000f3da:	mov    r8,QWORD PTR [rip+0x41b47]        # 0x140050f28
   14000f3e1:	lea    rcx,[rsp+0x70]
   14000f3e6:	call   0x140002e28
   14000f3eb:	lea    rdx,[rip+0x3b546]        # 0x14004a938
   14000f3f2:	lea    rcx,[rsp+0x70]
   14000f3f7:	call   0x1400265e8
   14000f3fc:	int3   
   14000f3fd:	mov    r8,QWORD PTR [rip+0x41b24]        # 0x140050f28
   14000f404:	mov    ecx,0x100002
   14000f409:	call   QWORD PTR [rip+0x29d89]        # 0x140039198
   14000f40f:	mov    QWORD PTR [rdi+0x2c8],rax
   14000f416:	test   rax,rax
   14000f419:	jne    0x14000f443
   14000f41b:	mov    DWORD PTR [rsp+0x40],esi
   14000f41f:	mov    DWORD PTR [rsp+0x44],0xe1232724
   14000f427:	mov    rax,QWORD PTR [rsp+0x40]
   14000f42c:	mov    QWORD PTR [rsp+0x40],rax
   14000f431:	lea    rdx,[rip+0x3b8f0]        # 0x14004ad28
   14000f438:	lea    rcx,[rsp+0x40]
   14000f43d:	call   0x1400265e8
   14000f442:	int3   
   14000f443:	lea    rcx,[rdi+0x2d0]
   14000f44a:	mov    r8d,r15d
   14000f44d:	mov    edx,r13d
   14000f450:	call   0x14001ec74
   14000f455:	mov    DWORD PTR [rdi+0x15c],r15d
   14000f45c:	mov    rax,QWORD PTR [rdi+0x8]
   14000f460:	mov    r13d,DWORD PTR [rax+0x280]
   14000f467:	mov    QWORD PTR [rdi+0x9f0],rax
   14000f46e:	mov    eax,DWORD PTR [rsp+0x48]
   14000f472:	mov    DWORD PTR [rdi+0x9c4],eax
   14000f478:	mov    DWORD PTR [rdi+0x9c8],r12d
   14000f47f:	mov    r8d,DWORD PTR [rsp+0x5c]
   14000f484:	add    r8d,0x230
   14000f48b:	add    r8d,DWORD PTR [rsp+0x60]
   14000f490:	mov    DWORD PTR [rdi+0x9c0],r8d
   14000f497:	lea    r14,[rdi+0x880]
   14000f49e:	mov    DWORD PTR [rsp+0x28],ebx
   14000f4a2:	mov    r9d,ebx
   14000f4a5:	mov    rdx,QWORD PTR [rip+0x41a54]        # 0x140050f00
   14000f4ac:	mov    rcx,r14
   14000f4af:	cmp    DWORD PTR [rdi+0x878],0x3
   14000f4b6:	jne    0x14000f4c3
   14000f4b8:	mov    DWORD PTR [rsp+0x20],esi
   14000f4bc:	call   0x14000262c
   14000f4c1:	jmp    0x14000f51e
   14000f4c3:	mov    DWORD PTR [rsp+0x20],ebx
   14000f4c7:	call   0x14000262c
   14000f4cc:	mov    ebx,DWORD PTR [rdi+0x9c0]
   14000f4d2:	mov    rax,QWORD PTR [r14]
   14000f4d5:	mov    rcx,r14
   14000f4d8:	call   QWORD PTR [rax+0x8]
   14000f4db:	mov    rcx,rax
   14000f4de:	mov    r8d,ebx
   14000f4e1:	xor    edx,edx
   14000f4e3:	call   0x1400260e0
   14000f4e8:	mov    rax,QWORD PTR [r14]
   14000f4eb:	mov    rcx,r14
   14000f4ee:	call   QWORD PTR [rax+0x8]
   14000f4f1:	or     DWORD PTR [rax+0x8],0xffffffff
   14000f4f5:	mov    ecx,0x80000000
   14000f4fa:	cmp    r13d,0xffffffff
   14000f4fe:	cmove  r13d,ecx
   14000f502:	mov    DWORD PTR [rax+0xc],r13d
   14000f506:	mov    DWORD PTR [rax],r12d
   14000f509:	lea    rcx,[rax+0x1c]
   14000f50d:	lea    r8,[rip+0x2fc74]        # 0x14003f188
   14000f514:	mov    edx,0x208
   14000f519:	call   0x140002d7c
   14000f51e:	mov    rax,QWORD PTR [r14]
   14000f521:	mov    rcx,r14
   14000f524:	call   QWORD PTR [rax+0x8]
   14000f527:	lea    rcx,[rax+0x230]
   14000f52e:	mov    QWORD PTR [rdi+0x9d0],rcx
   14000f535:	mov    rax,r12
   14000f538:	imul   rax,rax,0x234
   14000f53f:	add    rax,rcx
   14000f542:	mov    QWORD PTR [rdi+0x9d8],rax
   14000f549:	mov    ecx,0x18
   14000f54e:	call   0x140021a98
   14000f553:	mov    rbx,rax
   14000f556:	mov    QWORD PTR [rsp+0x40],rax
   14000f55b:	test   rax,rax
   14000f55e:	je     0x14000f58e
   14000f560:	mov    rdx,QWORD PTR [r14]
   14000f563:	mov    rcx,r14
   14000f566:	call   QWORD PTR [rdx+0x8]
   14000f569:	mov    rdx,QWORD PTR [r14]
   14000f56c:	mov    rcx,r14
   14000f56f:	call   QWORD PTR [rdx+0x8]
   14000f572:	mov    ecx,DWORD PTR [rdi+0x878]
   14000f578:	mov    DWORD PTR [rsp+0x20],ecx
   14000f57c:	mov    rdx,QWORD PTR [rip+0x4199d]        # 0x140050f20
   14000f583:	mov    rcx,rbx
   14000f586:	call   0x14001fbbc
   14000f58b:	mov    rsi,rax
   14000f58e:	mov    QWORD PTR [rdi+0x9e0],rsi
   14000f595:	mov    rax,QWORD PTR [rdi+0x8]
   14000f599:	lea    rcx,[rdi+0x9f8]
   14000f5a0:	mov    DWORD PTR [rsp+0x28],r12d
   14000f5a5:	mov    r9d,DWORD PTR [rsp+0x48]
   14000f5aa:	mov    DWORD PTR [rsp+0x20],r9d
   14000f5af:	mov    r9d,r15d
   14000f5b2:	mov    r8d,DWORD PTR [rsp+0x58]
   14000f5b7:	mov    edx,DWORD PTR [rax+0x2148]
   14000f5bd:	call   0x14001e2b8
   14000f5c2:	mov    rcx,QWORD PTR [rbp+0x190]
   14000f5c9:	xor    rcx,rsp
   14000f5cc:	call   0x140020e50
   14000f5d1:	lea    r11,[rsp+0x2a0]
   14000f5d9:	mov    rbx,QWORD PTR [r11+0x38]
   14000f5dd:	mov    rsi,QWORD PTR [r11+0x40]
   14000f5e1:	mov    rdi,QWORD PTR [r11+0x48]
   14000f5e5:	mov    rsp,r11
   14000f5e8:	pop    r15
   14000f5ea:	pop    r14
   14000f5ec:	pop    r13
   14000f5ee:	pop    r12
   14000f5f0:	pop    rbp
   14000f5f1:	ret    
   14000f5f2:	int3   
   14000f5f3:	int3   
   14000f5f4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f5f9:	mov    QWORD PTR [rsp+0x10],rsi
   14000f5fe:	push   rdi
   14000f5ff:	sub    rsp,0x20
   14000f603:	mov    rsi,rcx
   14000f606:	add    rcx,0x150
   14000f60d:	mov    ebx,r8d
   14000f610:	mov    rax,QWORD PTR [rcx]
   14000f613:	mov    rdi,rdx
   14000f616:	call   QWORD PTR [rax]
   14000f618:	test   eax,eax
   14000f61a:	jne    0x14000f65c
   14000f61c:	lea    rcx,[rsi+0x578]
   14000f623:	mov    r8d,ebx
   14000f626:	mov    rdx,rdi
   14000f629:	mov    rax,QWORD PTR [rcx]
   14000f62c:	call   QWORD PTR [rax]
   14000f62e:	test   eax,eax
   14000f630:	jne    0x14000f65c
   14000f632:	lea    rcx,[rsi+0x870]
   14000f639:	mov    r8d,ebx
   14000f63c:	mov    rdx,rdi
   14000f63f:	mov    rax,QWORD PTR [rcx]
   14000f642:	call   QWORD PTR [rax]
   14000f644:	test   eax,eax
   14000f646:	jne    0x14000f65c
   14000f648:	lea    rcx,[rsi+0x9f8]
   14000f64f:	mov    r8d,ebx
   14000f652:	mov    rdx,rdi
   14000f655:	mov    rax,QWORD PTR [rcx]
   14000f658:	call   QWORD PTR [rax]
   14000f65a:	xor    eax,eax
   14000f65c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f661:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f666:	add    rsp,0x20
   14000f66a:	pop    rdi
   14000f66b:	ret    
   14000f66c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f671:	push   rdi
   14000f672:	sub    rsp,0x40
   14000f676:	mov    rax,QWORD PTR [rip+0x3ddcb]        # 0x14004d448
   14000f67d:	xor    rax,rsp
   14000f680:	mov    QWORD PTR [rsp+0x30],rax
   14000f685:	mov    rbx,rcx
   14000f688:	add    rcx,0x150
   14000f68f:	mov    rdi,rdx
   14000f692:	mov    rax,QWORD PTR [rcx]
   14000f695:	call   QWORD PTR [rax+0x8]
   14000f698:	lea    rcx,[rbx+0x578]
   14000f69f:	mov    rdx,rdi
   14000f6a2:	mov    DWORD PTR [rsp+0x20],eax
   14000f6a6:	mov    rax,QWORD PTR [rcx]
   14000f6a9:	call   QWORD PTR [rax+0x8]
   14000f6ac:	lea    rcx,[rbx+0x870]
   14000f6b3:	mov    rdx,rdi
   14000f6b6:	mov    DWORD PTR [rsp+0x24],eax
   14000f6ba:	mov    rax,QWORD PTR [rcx]
   14000f6bd:	call   QWORD PTR [rax+0x8]
   14000f6c0:	lea    rcx,[rbx+0x9f8]
   14000f6c7:	mov    rdx,rdi
   14000f6ca:	mov    DWORD PTR [rsp+0x28],eax
   14000f6ce:	mov    rax,QWORD PTR [rcx]
   14000f6d1:	call   QWORD PTR [rax+0x8]
   14000f6d4:	lea    rcx,[rsp+0x20]
   14000f6d9:	mov    DWORD PTR [rsp+0x2c],eax
   14000f6dd:	xor    eax,eax
   14000f6df:	mov    edx,DWORD PTR [rcx]
   14000f6e1:	test   edx,edx
   14000f6e3:	jne    0x14000f6f4
   14000f6e5:	inc    eax
   14000f6e7:	add    rcx,0x4
   14000f6eb:	cmp    eax,0x4
   14000f6ee:	jb     0x14000f6df
   14000f6f0:	xor    eax,eax
   14000f6f2:	jmp    0x14000f6f6
   14000f6f4:	mov    eax,edx
   14000f6f6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f6fb:	xor    rcx,rsp
   14000f6fe:	call   0x140020e50
   14000f703:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f708:	add    rsp,0x40
   14000f70c:	pop    rdi
   14000f70d:	ret    
   14000f70e:	int3   
   14000f70f:	int3   
   14000f710:	add    rcx,0x10
   14000f714:	mov    rax,QWORD PTR [rcx]
   14000f717:	rex.W jmp QWORD PTR [rax]
   14000f71a:	int3   
   14000f71b:	int3   
   14000f71c:	add    rcx,0x10
   14000f720:	mov    rax,QWORD PTR [rcx]
   14000f723:	rex.W jmp QWORD PTR [rax+0x8]
   14000f727:	int3   
   14000f728:	mov    rax,rsp
   14000f72b:	mov    QWORD PTR [rax+0x10],rbx
   14000f72f:	mov    QWORD PTR [rax+0x18],rsi
   14000f733:	mov    QWORD PTR [rax+0x20],rdi
   14000f737:	push   rbp
   14000f738:	lea    rbp,[rax-0x7d8]
   14000f73f:	sub    rsp,0x8d0
   14000f746:	mov    rax,QWORD PTR [rip+0x3dcfb]        # 0x14004d448
   14000f74d:	xor    rax,rsp
   14000f750:	mov    QWORD PTR [rbp+0x7c0],rax
   14000f757:	mov    rbx,rcx
   14000f75a:	call   QWORD PTR [rip+0x29a70]        # 0x1400391d0
   14000f760:	mov    edx,0x2
   14000f765:	mov    rcx,rax
   14000f768:	call   QWORD PTR [rip+0x29df2]        # 0x140039560
   14000f76e:	mov    rcx,QWORD PTR [rbx+0x2e8]
   14000f775:	mov    edx,0x2710
   14000f77a:	call   QWORD PTR [rip+0x29d18]        # 0x140039498
   14000f780:	test   eax,0xffffff7f
   14000f785:	je     0x14000f791
   14000f787:	mov    edx,0xe123053c
   14000f78c:	jmp    0x14000fa10
   14000f791:	mov    DWORD PTR [rbx+0x300],0x1
   14000f79b:	xor    esi,esi
   14000f79d:	mov    rcx,QWORD PTR [rbx+0x2c0]
   14000f7a4:	or     edx,0xffffffff
   14000f7a7:	call   QWORD PTR [rip+0x29ceb]        # 0x140039498
   14000f7ad:	test   eax,eax
   14000f7af:	je     0x14000f7c9
   14000f7b1:	call   QWORD PTR [rip+0x29e29]        # 0x1400395e0
   14000f7b7:	xor    ecx,ecx
   14000f7b9:	cmp    eax,0x217
   14000f7be:	sete   cl
   14000f7c1:	test   ecx,ecx
   14000f7c3:	je     0x14000fa03
   14000f7c9:	and    DWORD PTR [rsp+0x34],0x0
   14000f7ce:	and    DWORD PTR [rsp+0x30],0x0
   14000f7d3:	lea    r9,[rsp+0x34]
   14000f7d8:	lea    rdx,[rbp+0x380]
   14000f7df:	lea    rcx,[rbx+0x10]
   14000f7e3:	mov    r8d,0x440
   14000f7e9:	mov    DWORD PTR [rsp+0x40],0x80
   14000f7f1:	call   0x14001f7f4
   14000f7f6:	mov    ecx,DWORD PTR [rbp+0x380]
   14000f7fc:	cmp    ecx,0x6
   14000f7ff:	jg     0x14000f8fc
   14000f805:	je     0x14000f8c1
   14000f80b:	dec    ecx
   14000f80d:	je     0x14000f899
   14000f813:	dec    ecx
   14000f815:	je     0x14000f873
   14000f817:	dec    ecx
   14000f819:	je     0x14000f84c
   14000f81b:	dec    ecx
   14000f81d:	je     0x14000f836
   14000f81f:	dec    ecx
   14000f821:	jne    0x14000f9e3
   14000f827:	lea    r8,[rsp+0x40]
   14000f82c:	mov    rcx,rbx
   14000f82f:	call   0x14000fce0
   14000f834:	jmp    0x14000f887
   14000f836:	lea    r8,[rsp+0x40]
   14000f83b:	lea    rdx,[rbp+0x380]
   14000f842:	mov    rcx,rbx
   14000f845:	call   0x14000fbf0
   14000f84a:	jmp    0x14000f887
   14000f84c:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f850:	mov    r8d,DWORD PTR [rbp+0x38c]
   14000f857:	mov    edx,DWORD PTR [rbp+0x384]
   14000f85d:	add    rcx,0x2a0
   14000f864:	call   0x14000eefc
   14000f869:	mov    DWORD PTR [rsp+0x40],0x80
   14000f871:	jmp    0x14000f8f0
   14000f873:	lea    r8,[rsp+0x40]
   14000f878:	lea    rdx,[rbp+0x380]
   14000f87f:	mov    rcx,rbx
   14000f882:	call   0x14000faa4
   14000f887:	xor    ecx,ecx
   14000f889:	test   eax,eax
   14000f88b:	sete   cl
   14000f88e:	mov    DWORD PTR [rbp+0x378],ecx
   14000f894:	jmp    0x14000f9e3
   14000f899:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f89d:	and    DWORD PTR [rbp+0x378],0x0
   14000f8a4:	lea    r8,[rsp+0x40]
   14000f8a9:	lea    rdx,[rbp+0x380]
   14000f8b0:	add    rcx,0x2a0
   14000f8b7:	call   0x14000ed34
   14000f8bc:	jmp    0x14000f9e3
   14000f8c1:	mov    rcx,QWORD PTR [rbx+0x2e8]
   14000f8c8:	mov    esi,0x1
   14000f8cd:	call   QWORD PTR [rip+0x29c25]        # 0x1400394f8
   14000f8d3:	test   eax,eax
   14000f8d5:	jne    0x14000f8df
   14000f8d7:	call   QWORD PTR [rip+0x29d03]        # 0x1400395e0
   14000f8dd:	jmp    0x14000f8f0
   14000f8df:	mov    rcx,QWORD PTR [rbx+0x2e8]
   14000f8e6:	call   QWORD PTR [rip+0x29c0c]        # 0x1400394f8
   14000f8ec:	test   eax,eax
   14000f8ee:	jne    0x14000f8df
   14000f8f0:	and    DWORD PTR [rbp+0x378],0x0
   14000f8f7:	jmp    0x14000f9e3
   14000f8fc:	sub    ecx,0x7
   14000f8ff:	je     0x14000f9d8
   14000f905:	sub    ecx,0x2
   14000f908:	je     0x14000f9c4
   14000f90e:	dec    ecx
   14000f910:	je     0x14000f982
   14000f912:	dec    ecx
   14000f914:	je     0x14000f96c
   14000f916:	dec    ecx
   14000f918:	jne    0x14000f9e3
   14000f91e:	lea    rcx,[rsp+0x40]
   14000f923:	xor    edx,edx
   14000f925:	mov    r8d,0x440
   14000f92b:	call   0x1400260e0
   14000f930:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f934:	mov    r9d,DWORD PTR [rbp+0x3ac]
   14000f93b:	mov    r8d,DWORD PTR [rbp+0x3a8]
   14000f942:	lea    rax,[rbp+0x398]
   14000f949:	add    rcx,0x2218
   14000f950:	mov    QWORD PTR [rsp+0x28],rax
   14000f955:	mov    eax,DWORD PTR [rbp+0x3b0]
   14000f95b:	mov    DWORD PTR [rsp+0x20],eax
   14000f95f:	call   0x1400137f8
   14000f964:	mov    DWORD PTR [rbp+0x378],eax
   14000f96a:	jmp    0x14000f9e3
   14000f96c:	and    DWORD PTR [rbp+0x378],0x0
   14000f973:	lea    r8,[rsp+0x40]
   14000f978:	mov    rcx,rbx
   14000f97b:	call   0x14000ff94
   14000f980:	jmp    0x14000f9e3
   14000f982:	mov    rax,QWORD PTR [rbx+0x8]
   14000f986:	mov    edx,DWORD PTR [rbp+0x398]
   14000f98c:	and    DWORD PTR [rbp+0x378],0x0
   14000f993:	mov    rcx,QWORD PTR [rax+0x1548]
   14000f99a:	lea    r9,[rsp+0x60]
   14000f99f:	lea    r8,[rsp+0x4c]
   14000f9a4:	add    rcx,0xf78
   14000f9ab:	mov    DWORD PTR [rsp+0x58],edx
   14000f9af:	call   0x14000d2ec
   14000f9b4:	test   al,al
   14000f9b6:	jne    0x14000f9e3
   14000f9b8:	mov    DWORD PTR [rbp+0x378],0xe1230588
   14000f9c2:	jmp    0x14000f9e3
   14000f9c4:	lea    rdx,[rbp+0x380]
   14000f9cb:	mov    rcx,rbx
   14000f9ce:	call   0x14000fe68
   14000f9d3:	jmp    0x14000f887
   14000f9d8:	mov    rax,QWORD PTR [rbx+0x8]
   14000f9dc:	and    DWORD PTR [rax+0x1560],0x0
   14000f9e3:	lea    r9,[rsp+0x30]
   14000f9e8:	lea    rdx,[rsp+0x40]
   14000f9ed:	lea    rcx,[rbx+0x10]
   14000f9f1:	call   0x14001f87c
   14000f9f6:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000f9fd:	call   QWORD PTR [rip+0x29ad5]        # 0x1400394d8
   14000fa03:	test   esi,esi
   14000fa05:	je     0x14000f79d
   14000fa0b:	mov    edx,0x61230d1e
   14000fa10:	mov    rcx,QWORD PTR [rbx+0x8]
   14000fa14:	xor    r9d,r9d
   14000fa17:	xor    r8d,r8d
   14000fa1a:	mov    rax,QWORD PTR [rcx]
   14000fa1d:	call   QWORD PTR [rax]
   14000fa1f:	mov    rcx,QWORD PTR [rbp+0x7c0]
   14000fa26:	xor    rcx,rsp
   14000fa29:	call   0x140020e50
   14000fa2e:	lea    r11,[rsp+0x8d0]
   14000fa36:	mov    rbx,QWORD PTR [r11+0x18]
   14000fa3a:	mov    rsi,QWORD PTR [r11+0x20]
   14000fa3e:	mov    rdi,QWORD PTR [r11+0x28]
   14000fa42:	mov    rsp,r11
   14000fa45:	pop    rbp
   14000fa46:	ret    
   14000fa47:	int3   
   14000fa48:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa4d:	push   rdi
   14000fa4e:	sub    rsp,0x20
   14000fa52:	mov    ebx,edx
   14000fa54:	mov    rdi,rcx
   14000fa57:	call   0x14000fa78
   14000fa5c:	test   bl,0x1
   14000fa5f:	je     0x14000fa69
   14000fa61:	mov    rcx,rdi
   14000fa64:	call   0x140020e30
   14000fa69:	mov    rax,rdi
   14000fa6c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fa71:	add    rsp,0x20
   14000fa75:	pop    rdi
   14000fa76:	ret    
   14000fa77:	int3   
   14000fa78:	mov    QWORD PTR [rsp+0x8],rcx
   14000fa7d:	sub    rsp,0x38
   14000fa81:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fa8a:	lea    rax,[rip+0x2ea97]        # 0x14003e528
   14000fa91:	mov    QWORD PTR [rcx],rax
   14000fa94:	add    rcx,0x10
   14000fa98:	add    rsp,0x38
   14000fa9c:	jmp    0x14001f4dc
   14000faa1:	int3   
   14000faa2:	int3   
   14000faa3:	int3   
   14000faa4:	rex push rbx
   14000faa6:	push   rbp
   14000faa7:	push   rsi
   14000faa8:	push   rdi
   14000faa9:	push   r14
   14000faab:	sub    rsp,0x70
   14000faaf:	mov    rax,QWORD PTR [rip+0x3d992]        # 0x14004d448
   14000fab6:	xor    rax,rsp
   14000fab9:	mov    QWORD PTR [rsp+0x60],rax
   14000fabe:	mov    rdi,r8
   14000fac1:	mov    rbx,rdx
   14000fac4:	mov    rsi,rcx
   14000fac7:	call   0x140006628
   14000facc:	mov    rcx,QWORD PTR [rsi+0x8]
   14000fad0:	mov    edx,DWORD PTR [rbx+0x14]
   14000fad3:	add    rcx,0xb10
   14000fada:	mov    r14,rax
   14000fadd:	call   0x14001f2e0
   14000fae2:	mov    rbp,rax
   14000fae5:	test   rax,rax
   14000fae8:	je     0x14000fbd6
   14000faee:	mov    eax,DWORD PTR [rax+0xec]
   14000faf4:	and    QWORD PTR [rsp+0x40],0x0
   14000fafa:	and    QWORD PTR [rsp+0x38],0x0
   14000fb00:	mov    r8d,DWORD PTR [rbx+0x8]
   14000fb04:	or     DWORD PTR [rsp+0x58],0xffffffff
   14000fb09:	mov    DWORD PTR [rbx+0xc],eax
   14000fb0c:	mov    eax,DWORD PTR [rbx+0x4]
   14000fb0f:	lea    rcx,[rip+0x4150a]        # 0x140051020
   14000fb16:	mov    r9,r14
   14000fb19:	mov    QWORD PTR [rsp+0x50],rax
   14000fb1e:	lea    rax,[rsp+0x50]
   14000fb23:	xor    edx,edx
   14000fb25:	mov    QWORD PTR [rsp+0x30],rax
   14000fb2a:	mov    DWORD PTR [rsp+0x28],0x1
   14000fb32:	and    QWORD PTR [rsp+0x20],0x0
   14000fb38:	call   0x140020004
   14000fb3d:	and    QWORD PTR [rsp+0x38],0x0
   14000fb43:	mov    rdx,r14
   14000fb46:	mov    DWORD PTR [rdi+0x10],eax
   14000fb49:	mov    rcx,QWORD PTR [rsi+0x8]
   14000fb4d:	mov    r9d,DWORD PTR [rbx+0x4]
   14000fb51:	mov    DWORD PTR [rsp+0x30],eax
   14000fb55:	mov    eax,DWORD PTR [rbx+0xc]
   14000fb58:	add    rcx,0x1018
   14000fb5f:	mov    DWORD PTR [rsp+0x28],eax
   14000fb63:	mov    eax,DWORD PTR [rbx+0x8]
   14000fb66:	mov    DWORD PTR [rsp+0x20],eax
   14000fb6a:	call   0x1400115b8
   14000fb6f:	mov    eax,DWORD PTR [rdi+0x10]
   14000fb72:	mov    DWORD PTR [rbp+0xe8],eax
   14000fb78:	mov    rax,QWORD PTR [rsi+0x8]
   14000fb7c:	mov    r11d,DWORD PTR [rbx+0x14]
   14000fb80:	mov    rax,QWORD PTR [rax+0x2a8]
   14000fb87:	mov    r8d,DWORD PTR [rbx+0x8]
   14000fb8b:	mov    edx,DWORD PTR [rbx+0x4]
   14000fb8e:	add    rax,0xf78
   14000fb94:	inc    DWORD PTR [rax+0x34]
   14000fb97:	mov    ecx,DWORD PTR [rax+0x34]
   14000fb9a:	inc    DWORD PTR [rax+0x30]
   14000fb9d:	cmp    DWORD PTR [rax+0x2c],ecx
   14000fba0:	jae    0x14000fba5
   14000fba2:	mov    DWORD PTR [rax+0x2c],ecx
   14000fba5:	mov    rax,QWORD PTR [rax]
   14000fba8:	mov    rcx,QWORD PTR [rax+0x1550]
   14000fbaf:	test   rcx,rcx
   14000fbb2:	je     0x14000fbc4
   14000fbb4:	mov    r10,QWORD PTR [rcx]
   14000fbb7:	lea    r9,[rbx+0x24]
   14000fbbb:	mov    DWORD PTR [rsp+0x20],r11d
   14000fbc0:	call   QWORD PTR [r10+0x18]
   14000fbc4:	and    DWORD PTR [rdi+0x438],0x0
   14000fbcb:	mov    DWORD PTR [rdi],0x80
   14000fbd1:	mov    eax,0x1
   14000fbd6:	mov    rcx,QWORD PTR [rsp+0x60]
   14000fbdb:	xor    rcx,rsp
   14000fbde:	call   0x140020e50
   14000fbe3:	add    rsp,0x70
   14000fbe7:	pop    r14
   14000fbe9:	pop    rdi
   14000fbea:	pop    rsi
   14000fbeb:	pop    rbp
   14000fbec:	pop    rbx
   14000fbed:	ret    
   14000fbee:	int3   
   14000fbef:	int3   
   14000fbf0:	mov    QWORD PTR [rsp+0x8],rbx
   14000fbf5:	mov    QWORD PTR [rsp+0x10],rbp
   14000fbfa:	mov    QWORD PTR [rsp+0x18],rsi
   14000fbff:	push   rdi
   14000fc00:	sub    rsp,0x40
   14000fc04:	mov    rbx,r8
   14000fc07:	mov    rdi,rdx
   14000fc0a:	mov    rsi,rcx
   14000fc0d:	call   0x140006628
   14000fc12:	mov    rcx,QWORD PTR [rsi+0x8]
   14000fc16:	mov    edx,DWORD PTR [rdi+0x14]
   14000fc19:	add    rcx,0xb10
   14000fc20:	mov    rbp,rax
   14000fc23:	call   0x14001f2e0
   14000fc28:	test   rax,rax
   14000fc2b:	je     0x14000fccb
   14000fc31:	mov    edx,DWORD PTR [rax+0xec]
   14000fc37:	mov    r9d,DWORD PTR [rdi+0x4]
   14000fc3b:	mov    DWORD PTR [rdi+0xc],edx
   14000fc3e:	mov    eax,DWORD PTR [rax+0xe8]
   14000fc44:	mov    DWORD PTR [rsp+0x30],eax
   14000fc48:	mov    DWORD PTR [rdi+0x10],eax
   14000fc4b:	mov    rcx,QWORD PTR [rsi+0x8]
   14000fc4f:	mov    eax,DWORD PTR [rdi+0x8]
   14000fc52:	mov    DWORD PTR [rsp+0x28],edx
   14000fc56:	add    rcx,0x1018
   14000fc5d:	mov    rdx,rbp
   14000fc60:	mov    DWORD PTR [rsp+0x20],eax
   14000fc64:	call   0x140011620
   14000fc69:	mov    r8d,DWORD PTR [rdi+0x8]
   14000fc6d:	lea    rcx,[rip+0x413ac]        # 0x140051020
   14000fc74:	mov    r9,rbp
   14000fc77:	call   0x1400200ec
   14000fc7c:	mov    rax,QWORD PTR [rsi+0x8]
   14000fc80:	mov    r8d,DWORD PTR [rdi+0x8]
   14000fc84:	mov    rcx,QWORD PTR [rax+0x2a8]
   14000fc8b:	mov    edx,DWORD PTR [rdi+0x4]
   14000fc8e:	mov    eax,DWORD PTR [rcx+0xfac]
   14000fc94:	test   eax,eax
   14000fc96:	je     0x14000fca0
   14000fc98:	dec    eax
   14000fc9a:	mov    DWORD PTR [rcx+0xfac],eax
   14000fca0:	mov    rax,QWORD PTR [rcx+0xf78]
   14000fca7:	mov    rcx,QWORD PTR [rax+0x1550]
   14000fcae:	test   rcx,rcx
   14000fcb1:	je     0x14000fcb9
   14000fcb3:	mov    rax,QWORD PTR [rcx]
   14000fcb6:	call   QWORD PTR [rax+0x20]
   14000fcb9:	and    DWORD PTR [rbx+0x438],0x0
   14000fcc0:	mov    DWORD PTR [rbx],0x80
   14000fcc6:	mov    eax,0x1
   14000fccb:	mov    rbx,QWORD PTR [rsp+0x50]
   14000fcd0:	mov    rbp,QWORD PTR [rsp+0x58]
   14000fcd5:	mov    rsi,QWORD PTR [rsp+0x60]
   14000fcda:	add    rsp,0x40
   14000fcde:	pop    rdi
   14000fcdf:	ret    
   14000fce0:	mov    QWORD PTR [rsp+0x8],rbx
   14000fce5:	mov    QWORD PTR [rsp+0x10],rsi
   14000fcea:	push   rdi
   14000fceb:	sub    rsp,0x20
   14000fcef:	mov    rsi,QWORD PTR [rcx+0x8]
   14000fcf3:	mov    DWORD PTR [r8],0x80
   14000fcfa:	xor    ebx,ebx
   14000fcfc:	mov    DWORD PTR [r8+0x438],ebx
   14000fd03:	add    rsi,0x2a0
   14000fd0a:	mov    rdi,r8
   14000fd0d:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd11:	lea    edx,[rbx+0x40]
   14000fd14:	mov    r9d,ebx
   14000fd17:	mov    rcx,QWORD PTR [rax+0xca8]
   14000fd1e:	mov    eax,DWORD PTR [rcx+0x8]
   14000fd21:	mov    DWORD PTR [r8+0x18],eax
   14000fd25:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd29:	mov    rcx,QWORD PTR [rax+0xca8]
   14000fd30:	mov    eax,DWORD PTR [rcx+0xc]
   14000fd33:	mov    DWORD PTR [r8+0x1c],eax
   14000fd37:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd3b:	mov    rcx,QWORD PTR [rax+0xca8]
   14000fd42:	mov    eax,DWORD PTR [rcx+0x10]
   14000fd45:	lea    rcx,[r8+0x24]
   14000fd49:	mov    DWORD PTR [r8+0x20],eax
   14000fd4d:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd51:	mov    r8,QWORD PTR [rax+0xca8]
   14000fd58:	add    r8,0x14
   14000fd5c:	lea    rax,[rdx+0x7fffffbe]
   14000fd63:	test   rax,rax
   14000fd66:	je     0x14000fd7c
   14000fd68:	mov    al,BYTE PTR [r8]
   14000fd6b:	test   al,al
   14000fd6d:	je     0x14000fd7c
   14000fd6f:	mov    BYTE PTR [rcx],al
   14000fd71:	inc    r8
   14000fd74:	inc    rcx
   14000fd77:	dec    rdx
   14000fd7a:	jne    0x14000fd5c
   14000fd7c:	test   rdx,rdx
   14000fd7f:	jne    0x14000fd8a
   14000fd81:	dec    rcx
   14000fd84:	mov    r9d,0x8007007a
   14000fd8a:	mov    BYTE PTR [rcx],bl
   14000fd8c:	test   r9d,r9d
   14000fd8f:	js     0x14000fe56
   14000fd95:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd99:	mov    rcx,QWORD PTR [rax+0x270]
   14000fda0:	mov    eax,DWORD PTR [rcx+0x8]
   14000fda3:	mov    DWORD PTR [rdi+0x64],eax
   14000fda6:	mov    rax,QWORD PTR [rsi+0x8]
   14000fdaa:	mov    rcx,QWORD PTR [rax+0x270]
   14000fdb1:	mov    eax,DWORD PTR [rcx+0xc]
   14000fdb4:	mov    DWORD PTR [rdi+0x68],eax
   14000fdb7:	mov    rax,QWORD PTR [rsi+0x8]
   14000fdbb:	mov    rcx,QWORD PTR [rax+0x270]
   14000fdc2:	mov    eax,DWORD PTR [rcx]
   14000fdc4:	mov    DWORD PTR [rdi+0x6c],eax
   14000fdc7:	mov    rax,QWORD PTR [rsi+0x8]
   14000fdcb:	mov    rcx,QWORD PTR [rax+0x270]
   14000fdd2:	mov    eax,DWORD PTR [rcx+0x4]
   14000fdd5:	mov    DWORD PTR [rdi+0x70],eax
   14000fdd8:	call   QWORD PTR [rip+0x2972a]        # 0x140039508
   14000fdde:	mov    DWORD PTR [rdi+0x74],eax
   14000fde1:	mov    rax,QWORD PTR [rsi+0x2b0]
   14000fde8:	test   rax,rax
   14000fdeb:	je     0x14000fdf3
   14000fded:	movzx  eax,WORD PTR [rax+0x4]
   14000fdf1:	jmp    0x14000fdf5
   14000fdf3:	mov    eax,ebx
   14000fdf5:	mov    DWORD PTR [rdi+0x78],eax
   14000fdf8:	mov    rax,QWORD PTR [rsi+0x2b8]
   14000fdff:	test   rax,rax
   14000fe02:	je     0x14000fe08
   14000fe04:	movzx  ebx,WORD PTR [rax+0x4]
   14000fe08:	mov    DWORD PTR [rdi+0x7c],ebx
   14000fe0b:	mov    rcx,QWORD PTR [rsi+0x8]
   14000fe0f:	add    rcx,0xf78
   14000fe16:	call   0x14000d28c
   14000fe1b:	mov    ebx,0x1
   14000fe20:	mov    DWORD PTR [rdi+0x80],eax
   14000fe26:	mov    rax,QWORD PTR [rsi+0x8]
   14000fe2a:	mov    ecx,DWORD PTR [rax+0xf98]
   14000fe30:	mov    DWORD PTR [rdi+0x84],ecx
   14000fe36:	mov    rax,QWORD PTR [rsi+0x8]
   14000fe3a:	mov    ecx,DWORD PTR [rax+0xfa0]
   14000fe40:	mov    DWORD PTR [rdi+0x8c],ecx
   14000fe46:	mov    rax,QWORD PTR [rsi+0x8]
   14000fe4a:	mov    ecx,DWORD PTR [rax+0xf9c]
   14000fe50:	mov    DWORD PTR [rdi+0x88],ecx
   14000fe56:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fe5b:	mov    eax,ebx
   14000fe5d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fe62:	add    rsp,0x20
   14000fe66:	pop    rdi
   14000fe67:	ret    
   14000fe68:	mov    QWORD PTR [rsp+0x10],rbx
   14000fe6d:	mov    QWORD PTR [rsp+0x18],r8
   14000fe72:	push   rbp
   14000fe73:	push   rsi
   14000fe74:	push   rdi
   14000fe75:	push   r12
   14000fe77:	push   r13
   14000fe79:	push   r14
   14000fe7b:	push   r15
   14000fe7d:	sub    rsp,0x20
   14000fe81:	mov    rbp,QWORD PTR [rcx+0x8]
   14000fe85:	mov    r12d,DWORD PTR [rdx+0xc]
   14000fe89:	mov    r13,QWORD PTR [rdx+0x20]
   14000fe8d:	mov    rsi,QWORD PTR [rbp+0x1548]
   14000fe94:	mov    r14d,DWORD PTR [rdx+0x18]
   14000fe98:	xor    ebx,ebx
   14000fe9a:	lea    rdi,[rsi+0xf80]
   14000fea1:	lea    eax,[rbx+0x1]
   14000fea4:	mov    r15b,bl
   14000fea7:	xchg   DWORD PTR [rdi+0x8],eax
   14000feaa:	test   eax,eax
   14000feac:	je     0x14000feb6
   14000feae:	mov    rcx,rdi
   14000feb1:	call   0x1400178cc
   14000feb6:	mov    rax,QWORD PTR [rsi+0xfb0]
   14000febd:	mov    rdx,rax
   14000fec0:	mov    rcx,QWORD PTR [rax+0x8]
   14000fec4:	jmp    0x14000fed8
   14000fec6:	cmp    DWORD PTR [rcx+0x20],r14d
   14000feca:	jae    0x14000fed2
   14000fecc:	mov    rcx,QWORD PTR [rcx+0x10]
   14000fed0:	jmp    0x14000fed8
   14000fed2:	mov    rdx,rcx
   14000fed5:	mov    rcx,QWORD PTR [rcx]
   14000fed8:	cmp    BYTE PTR [rcx+0x19],bl
   14000fedb:	je     0x14000fec6
   14000fedd:	cmp    rdx,rax
   14000fee0:	je     0x14000fef4
   14000fee2:	cmp    r14d,DWORD PTR [rdx+0x20]
   14000fee6:	jb     0x14000fef4
   14000fee8:	mov    QWORD PTR [rsp+0x70],rdx
   14000feed:	lea    rcx,[rsp+0x70]
   14000fef2:	jmp    0x14000fefe
   14000fef4:	mov    QWORD PTR [rsp+0x60],rax
   14000fef9:	lea    rcx,[rsp+0x60]
   14000fefe:	mov    rcx,QWORD PTR [rcx]
   14000ff01:	cmp    rcx,rax
   14000ff04:	je     0x14000ff1f
   14000ff06:	mov    rax,QWORD PTR [rcx+0x28]
   14000ff0a:	cmp    QWORD PTR [rax+0x10],rbx
   14000ff0e:	je     0x14000ff1f
   14000ff10:	mov    r15b,0x1
   14000ff13:	mov    DWORD PTR [rax+0x1c],r12d
   14000ff17:	mov    QWORD PTR [rax+0x20],r13
   14000ff1b:	mov    BYTE PTR [rax+0x18],r15b
   14000ff1f:	mov    eax,ebx
   14000ff21:	xchg   DWORD PTR [rdi+0x8],eax
   14000ff24:	lock or DWORD PTR [rsp],ebx
   14000ff28:	mov    eax,DWORD PTR [rdi+0xc]
   14000ff2b:	test   eax,eax
   14000ff2d:	jle    0x14000ff47
   14000ff2f:	lock or DWORD PTR [rsp],ebx
   14000ff33:	mov    eax,DWORD PTR [rdi+0xc]
   14000ff36:	mov    rax,QWORD PTR [rdi]
   14000ff39:	test   rax,rax
   14000ff3c:	je     0x14000ff47
   14000ff3e:	mov    rcx,QWORD PTR [rdi]
   14000ff41:	call   QWORD PTR [rip+0x29591]        # 0x1400394d8
   14000ff47:	test   r15b,r15b
   14000ff4a:	je     0x14000ff7c
   14000ff4c:	lea    rcx,[rbp+0x14e8]
   14000ff53:	call   0x140010b5c
   14000ff58:	test   al,al
   14000ff5a:	jne    0x14000ff7a
   14000ff5c:	mov    rcx,QWORD PTR [rbp+0x1548]
   14000ff63:	xor    r9d,r9d
   14000ff66:	xor    r8d,r8d
   14000ff69:	add    rcx,0xf78
   14000ff70:	mov    edx,r14d
   14000ff73:	call   0x14000d2ec
   14000ff78:	jmp    0x14000ff7c
   14000ff7a:	mov    bl,0x1
   14000ff7c:	movzx  eax,bl
   14000ff7f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ff84:	add    rsp,0x20
   14000ff88:	pop    r15
   14000ff8a:	pop    r14
   14000ff8c:	pop    r13
   14000ff8e:	pop    r12
   14000ff90:	pop    rdi
   14000ff91:	pop    rsi
   14000ff92:	pop    rbp
   14000ff93:	ret    
   14000ff94:	mov    rax,rsp
   14000ff97:	mov    QWORD PTR [rax+0x8],rbx
   14000ff9b:	mov    QWORD PTR [rax+0x10],rbp
   14000ff9f:	mov    QWORD PTR [rax+0x18],rsi
   14000ffa3:	mov    QWORD PTR [rax+0x20],rdi
   14000ffa7:	push   r14
   14000ffa9:	sub    rsp,0x20
   14000ffad:	mov    rbp,QWORD PTR [rcx+0x8]
   14000ffb1:	lea    r14,[r8+0x1c]
   14000ffb5:	lea    rdi,[r8+0x18]
   14000ffb9:	test   r14,r14
   14000ffbc:	je     0x140010095
   14000ffc2:	test   rdi,rdi
   14000ffc5:	je     0x140010095
   14000ffcb:	xor    edx,edx
   14000ffcd:	mov    r8d,0x200
   14000ffd3:	mov    rcx,r14
   14000ffd6:	call   0x1400260e0
   14000ffdb:	and    DWORD PTR [rdi],0x0
   14000ffde:	lea    rbx,[rbp+0xf80]
   14000ffe5:	mov    esi,0x1
   14000ffea:	mov    eax,esi
   14000ffec:	xchg   DWORD PTR [rbx+0x8],eax
   14000ffef:	test   eax,eax
   14000fff1:	je     0x14000fffb
   14000fff3:	mov    rcx,rbx
   14000fff6:	call   0x1400178cc
   14000fffb:	mov    rax,QWORD PTR [rbp+0xfb0]
   140010002:	mov    rcx,QWORD PTR [rax]
   140010005:	cmp    rcx,rax
   140010008:	je     0x140010069
   14001000a:	mov    rax,QWORD PTR [rcx+0x28]
   14001000e:	cmp    BYTE PTR [rax+0x18],0x0
   140010012:	je     0x140010026
   140010014:	cmp    DWORD PTR [rdi],0x80
   14001001a:	jae    0x140010026
   14001001c:	mov    edx,DWORD PTR [rdi]
   14001001e:	mov    eax,DWORD PTR [rax]
   140010020:	mov    DWORD PTR [r14+rdx*4],eax
   140010024:	add    DWORD PTR [rdi],esi
   140010026:	cmp    BYTE PTR [rcx+0x19],0x0
   14001002a:	jne    0x140010060
   14001002c:	mov    rax,QWORD PTR [rcx+0x10]
   140010030:	cmp    BYTE PTR [rax+0x19],0x0
   140010034:	jne    0x140010044
   140010036:	mov    rcx,rax
   140010039:	mov    rax,QWORD PTR [rax]
   14001003c:	cmp    BYTE PTR [rax+0x19],0x0
   140010040:	je     0x140010036
   140010042:	jmp    0x140010060
   140010044:	mov    rax,QWORD PTR [rcx+0x8]
   140010048:	jmp    0x140010057
   14001004a:	cmp    rcx,QWORD PTR [rax+0x10]
   14001004e:	jne    0x14001005d
   140010050:	mov    rcx,rax
   140010053:	mov    rax,QWORD PTR [rax+0x8]
   140010057:	cmp    BYTE PTR [rax+0x19],0x0
   14001005b:	je     0x14001004a
   14001005d:	mov    rcx,rax
   140010060:	cmp    rcx,QWORD PTR [rbp+0xfb0]
   140010067:	jne    0x14001000a
   140010069:	xor    eax,eax
   14001006b:	xchg   DWORD PTR [rbx+0x8],eax
   14001006e:	lock or DWORD PTR [rsp],0x0
   140010073:	mov    eax,DWORD PTR [rbx+0xc]
   140010076:	test   eax,eax
   140010078:	jle    0x140010098
   14001007a:	lock or DWORD PTR [rsp],0x0
   14001007f:	mov    eax,DWORD PTR [rbx+0xc]
   140010082:	mov    rax,QWORD PTR [rbx]
   140010085:	test   rax,rax
   140010088:	je     0x140010098
   14001008a:	mov    rcx,QWORD PTR [rbx]
   14001008d:	call   QWORD PTR [rip+0x29445]        # 0x1400394d8
   140010093:	jmp    0x140010098
   140010095:	xor    sil,sil
   140010098:	mov    rbx,QWORD PTR [rsp+0x30]
   14001009d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400100a2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400100a7:	movzx  eax,sil
   1400100ab:	mov    rsi,QWORD PTR [rsp+0x40]
   1400100b0:	add    rsp,0x20
   1400100b4:	pop    r14
   1400100b6:	ret    
   1400100b7:	int3   
   1400100b8:	rex push rbx
   1400100ba:	sub    rsp,0x20
   1400100be:	mov    rbx,rcx
   1400100c1:	mov    rcx,QWORD PTR [rcx]
   1400100c4:	test   rcx,rcx
   1400100c7:	je     0x1400100cf
   1400100c9:	call   QWORD PTR [rip+0x294f1]        # 0x1400395c0
   1400100cf:	mov    rcx,QWORD PTR [rbx+0x8]
   1400100d3:	test   rcx,rcx
   1400100d6:	je     0x1400100de
   1400100d8:	call   QWORD PTR [rip+0x294e2]        # 0x1400395c0
   1400100de:	mov    rcx,QWORD PTR [rbx+0x10]
   1400100e2:	test   rcx,rcx
   1400100e5:	je     0x1400100ed
   1400100e7:	call   QWORD PTR [rip+0x294d3]        # 0x1400395c0
   1400100ed:	add    rsp,0x20
   1400100f1:	pop    rbx
   1400100f2:	ret    
   1400100f3:	int3   
   1400100f4:	mov    rax,rsp
   1400100f7:	mov    QWORD PTR [rax+0x10],rbx
   1400100fb:	mov    QWORD PTR [rax+0x18],rsi
   1400100ff:	mov    QWORD PTR [rax+0x20],rdi
   140010103:	push   rbp
   140010104:	push   r12
   140010106:	push   r13
   140010108:	push   r14
   14001010a:	push   r15
   14001010c:	lea    rbp,[rax-0x5f]
   140010110:	sub    rsp,0xe0
   140010117:	mov    rax,QWORD PTR [rip+0x3d32a]        # 0x14004d448
   14001011e:	xor    rax,rsp
   140010121:	mov    QWORD PTR [rbp+0x27],rax
   140010125:	mov    rdi,rcx
   140010128:	rdtsc  
   14001012a:	shl    rdx,0x20
   14001012e:	lea    r8,[rip+0x2d31b]        # 0x14003d450
   140010135:	mov    BYTE PTR [rsp+0x20],0x0
   14001013a:	or     rax,rdx
   14001013d:	mov    dl,0x21
   14001013f:	mov    r9,rax
   140010142:	call   0x1400181e4
   140010147:	mov    rcx,QWORD PTR [rdi+0x60]
   14001014b:	mov    rcx,QWORD PTR [rcx+0x2150]
   140010152:	call   0x1400091b8
   140010157:	mov    r14,QWORD PTR [rdi+0x18]
   14001015b:	xor    r10d,r10d
   14001015e:	lea    rdx,[rbp-0x51]
   140010162:	mov    QWORD PTR [rbp-0x1],rdx
   140010166:	lea    rdx,[rbp-0x65]
   14001016a:	mov    al,r10b
   14001016d:	mov    QWORD PTR [rbp-0x39],r14
   140010171:	mov    rbx,r14
   140010174:	mov    QWORD PTR [rbp-0x51],r10
   140010178:	mov    QWORD PTR [rbp-0x19],rdx
   14001017c:	mov    r13d,r10d
   14001017f:	mov    esi,r10d
   140010182:	mov    QWORD PTR [rbp-0x49],r10
   140010186:	mov    DWORD PTR [rbp-0x65],r10d
   14001018a:	mov    BYTE PTR [rbp-0x69],al
   14001018d:	mov    DWORD PTR [rbp-0x9],0x640000
   140010194:	mov    QWORD PTR [rbp-0x11],r14
   140010198:	mov    rcx,r10
   14001019b:	mov    r12,r10
   14001019e:	mov    r15,r10
   1400101a1:	mov    QWORD PTR [rbp-0x61],rcx
   1400101a5:	cmp    DWORD PTR [rbp-0x65],r10d
   1400101a9:	je     0x1400101bd
   1400101ab:	test   rsi,rsi
   1400101ae:	jne    0x140010295
   1400101b4:	test   r15,r15
   1400101b7:	je     0x1400105b5
   1400101bd:	test   rsi,rsi
   1400101c0:	jne    0x140010295
   1400101c6:	cmp    DWORD PTR [rbp-0x65],r10d
   1400101ca:	jne    0x140010295
   1400101d0:	test   r15,r15
   1400101d3:	je     0x1400101de
   1400101d5:	cmp    r12,rcx
   1400101d8:	jae    0x14001054e
   1400101de:	mov    rax,QWORD PTR [rdi+0x60]
   1400101e2:	mov    rcx,QWORD PTR [rax+0x2150]
   1400101e9:	add    rcx,0x8
   1400101ed:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400101f1:	je     0x140010219
   1400101f3:	mov    QWORD PTR [rsp+0x30],r10
   1400101f8:	mov    DWORD PTR [rsp+0x28],r10d
   1400101fd:	lea    r8,[rbp-0x19]
   140010201:	mov    r9d,0x20
   140010207:	mov    edx,0x80006450
   14001020c:	mov    QWORD PTR [rsp+0x20],r10
   140010211:	call   0x14001761c
   140010216:	xor    r10d,r10d
   140010219:	mov    rsi,QWORD PTR [rbp-0x51]
   14001021d:	mov    rbx,r14
   140010220:	mov    r13,r14
   140010223:	sub    rsi,r14
   140010226:	mov    rax,rsi
   140010229:	cqo    
   14001022b:	movzx  edx,dx
   14001022e:	add    rax,rdx
   140010231:	sar    rax,0x10
   140010235:	mov    QWORD PTR [rbp-0x49],rax
   140010239:	test   rsi,rsi
   14001023c:	jne    0x140010247
   14001023e:	lea    ecx,[rsi+0x5]
   140010241:	cmp    DWORD PTR [rbp-0x65],r10d
   140010245:	je     0x14001024c
   140010247:	mov    ecx,0x4
   14001024c:	mov    rax,rsi
   14001024f:	mov    r9,rsi
   140010252:	lea    r8,[rip+0x2d1f7]        # 0x14003d450
   140010259:	neg    rax
   14001025c:	cmp    DWORD PTR [rbp-0x65],r10d
   140010260:	mov    dl,0x23
   140010262:	cmovne r9,rax
   140010266:	mov    BYTE PTR [rsp+0x20],cl
   14001026a:	call   0x1400181e4
   14001026f:	xor    r10d,r10d
   140010272:	test   rsi,rsi
   140010275:	jne    0x140010295
   140010277:	cmp    DWORD PTR [rbp-0x65],r10d
   14001027b:	jne    0x140010295
   14001027d:	mov    ecx,0xc8
   140010282:	call   QWORD PTR [rip+0x29368]        # 0x1400395f0
   140010288:	xor    r10d,r10d
   14001028b:	cmp    DWORD PTR [rbp-0x65],r10d
   14001028f:	je     0x140010547
   140010295:	mov    rax,QWORD PTR [rdi+0x60]
   140010299:	mov    DWORD PTR [rbp+0x17],0x3
   1400102a0:	mov    rcx,QWORD PTR [rax+0x2150]
   1400102a7:	add    rcx,0x8
   1400102ab:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400102af:	je     0x1400102e4
   1400102b1:	lea    rax,[rbp-0x31]
   1400102b5:	lea    r8,[rbp+0x17]
   1400102b9:	mov    r9d,0x10
   1400102bf:	mov    QWORD PTR [rsp+0x30],rax
   1400102c4:	lea    rax,[rbp+0x7]
   1400102c8:	mov    edx,0x80006490
   1400102cd:	mov    DWORD PTR [rsp+0x28],0xc
   1400102d5:	mov    QWORD PTR [rsp+0x20],rax
   1400102da:	call   0x14001761c
   1400102df:	xor    r10d,r10d
   1400102e2:	jmp    0x1400102e7
   1400102e4:	mov    eax,r10d
   1400102e7:	test   eax,eax
   1400102e9:	je     0x14001030f
   1400102eb:	mov    rdx,QWORD PTR [rdi+0x60]
   1400102ef:	mov    eax,DWORD PTR [rbp+0x7]
   1400102f2:	mov    rcx,QWORD PTR [rdx+0xca8]
   1400102f9:	mov    DWORD PTR [rcx+0x74],eax
   1400102fc:	mov    eax,DWORD PTR [rbp+0xb]
   1400102ff:	mov    DWORD PTR [rcx+0x78],eax
   140010302:	mov    eax,DWORD PTR [rbp+0xf]
   140010305:	mov    DWORD PTR [rcx+0x7c],eax
   140010308:	lock inc DWORD PTR [rdx+0xf70]
   14001030f:	test   rsi,rsi
   140010312:	je     0x140010547
   140010318:	test   r15,r15
   14001031b:	jne    0x140010391
   14001031d:	mov    rcx,QWORD PTR [rdi+0x60]
   140010321:	lea    edx,[r15+0x1]
   140010325:	add    rcx,0x3f0
   14001032c:	call   0x14001eef4
   140010331:	mov    r8,QWORD PTR [rip+0x40c70]        # 0x140050fa8
   140010338:	xor    r10d,r10d
   14001033b:	mov    edx,DWORD PTR [rax+0x8]
   14001033e:	mov    r15,rax
   140010341:	imul   edx,DWORD PTR [rax+0x10]
   140010345:	add    rdx,r8
   140010348:	mov    DWORD PTR [rdx],0x52414542
   14001034e:	mov    QWORD PTR [rdx+0x4],0x4
   140010356:	mov    DWORD PTR [rdx+0xc],r10d
   14001035a:	mov    ecx,DWORD PTR [rax+0x10]
   14001035d:	mov    DWORD PTR [rdx+0x14],r10d
   140010361:	lea    r12,[rdx+0x28]
   140010365:	mov    DWORD PTR [rdx+0x10],ecx
   140010368:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   14001036d:	mov    QWORD PTR [rdx+0x20],r10
   140010371:	mov    edx,DWORD PTR [rax+0x10]
   140010374:	mov    eax,edx
   140010376:	imul   eax,DWORD PTR [r15+0x8]
   14001037b:	add    rax,r8
   14001037e:	lea    rcx,[rax-0x10]
   140010382:	mov    al,r10b
   140010385:	add    rcx,rdx
   140010388:	mov    BYTE PTR [rbp-0x69],al
   14001038b:	mov    QWORD PTR [rbp-0x61],rcx
   14001038f:	jmp    0x140010398
   140010391:	mov    rcx,QWORD PTR [rbp-0x61]
   140010395:	mov    al,BYTE PTR [rbp-0x69]
   140010398:	cmp    r12,rcx
   14001039b:	jae    0x14001054e
   1400103a1:	mov    rdx,r10
   1400103a4:	mov    DWORD PTR [rbp-0x55],r10d
   1400103a8:	mov    DWORD PTR [rbp-0x59],r10d
   1400103ac:	mov    QWORD PTR [rbp-0x41],rdx
   1400103b0:	mov    r9d,0x10000
   1400103b6:	jmp    0x1400103bc
   1400103b8:	mov    rcx,QWORD PTR [rbp-0x61]
   1400103bc:	mov    rax,r13
   1400103bf:	sub    rax,rbx
   1400103c2:	add    rax,r9
   1400103c5:	cmp    rax,0xc
   1400103c9:	setbe  al
   1400103cc:	mov    BYTE PTR [rbp-0x68],al
   1400103cf:	cmp    al,0x1
   1400103d1:	je     0x140010422
   1400103d3:	lea    rax,[rbp-0x68]
   1400103d7:	mov    r9,rcx
   1400103da:	mov    r8,r12
   1400103dd:	mov    QWORD PTR [rsp+0x38],rax
   1400103e2:	lea    rax,[rbp-0x41]
   1400103e6:	mov    rdx,rbx
   1400103e9:	mov    QWORD PTR [rsp+0x30],rax
   1400103ee:	lea    rax,[rbp-0x59]
   1400103f2:	mov    rcx,rdi
   1400103f5:	mov    QWORD PTR [rsp+0x28],rax
   1400103fa:	lea    rax,[rbp-0x55]
   1400103fe:	mov    QWORD PTR [rsp+0x20],rax
   140010403:	call   0x1400106d0
   140010408:	mov    r14d,DWORD PTR [rbp-0x55]
   14001040c:	mov    ecx,DWORD PTR [rbp-0x59]
   14001040f:	mov    r8b,BYTE PTR [rbp-0x68]
   140010413:	mov    rdx,QWORD PTR [rbp-0x41]
   140010417:	xor    r10d,r10d
   14001041a:	mov    r9d,0x10000
   140010420:	jmp    0x140010439
   140010422:	mov    ecx,r10d
   140010425:	mov    r8b,0x1
   140010428:	mov    r14d,r10d
   14001042b:	mov    DWORD PTR [rbp-0x55],r10d
   14001042f:	mov    al,r10b
   140010432:	mov    DWORD PTR [rbp-0x59],ecx
   140010435:	mov    BYTE PTR [rbp-0x68],r8b
   140010439:	test   al,al
   14001043b:	je     0x140010490
   14001043d:	mov    eax,r14d
   140010440:	add    rbx,rax
   140010443:	sub    rsi,rax
   140010446:	mov    eax,ecx
   140010448:	add    r12,rax
   14001044b:	test   ecx,ecx
   14001044d:	mov    rcx,QWORD PTR [rbp-0x61]
   140010451:	je     0x1400103bc
   140010457:	mov    ecx,DWORD PTR [r15+0x10]
   14001045b:	imul   ecx,DWORD PTR [r15+0x8]
   140010460:	add    rcx,QWORD PTR [rip+0x40b41]        # 0x140050fa8
   140010467:	inc    DWORD PTR [rcx+0xc]
   14001046a:	test   rdx,rdx
   14001046d:	je     0x1400103b8
   140010473:	cmp    QWORD PTR [rcx+0x18],rdx
   140010477:	jbe    0x14001047d
   140010479:	mov    QWORD PTR [rcx+0x18],rdx
   14001047d:	cmp    QWORD PTR [rcx+0x20],rdx
   140010481:	jae    0x1400103b8
   140010487:	mov    QWORD PTR [rcx+0x20],rdx
   14001048b:	jmp    0x1400103b8
   140010490:	test   r8b,r8b
   140010493:	je     0x140010509
   140010495:	cmp    r13,rbx
   140010498:	je     0x1400104d5
   14001049a:	test   bx,bx
   14001049d:	je     0x1400104a9
   14001049f:	and    rbx,0xffffffffffff0000
   1400104a6:	add    rbx,r9
   1400104a9:	cmp    rbx,r13
   1400104ac:	jb     0x1400104d1
   1400104ae:	cmp    rbx,QWORD PTR [rbp-0x51]
   1400104b2:	ja     0x1400104d1
   1400104b4:	mov    r8,rbx
   1400104b7:	sub    r8,r13
   1400104ba:	cmp    r8,r9
   1400104bd:	jg     0x1400104d1
   1400104bf:	xor    edx,edx
   1400104c1:	mov    rcx,r13
   1400104c4:	call   0x1400260e0
   1400104c9:	mov    r13,rbx
   1400104cc:	xor    r10d,r10d
   1400104cf:	jmp    0x1400104d5
   1400104d1:	mov    rbx,QWORD PTR [rbp-0x51]
   1400104d5:	mov    rcx,QWORD PTR [rbp-0x51]
   1400104d9:	mov    rsi,rcx
   1400104dc:	sub    rsi,rbx
   1400104df:	mov    rax,rsi
   1400104e2:	cqo    
   1400104e4:	movzx  edx,dx
   1400104e7:	add    rax,rdx
   1400104ea:	sar    rax,0x10
   1400104ee:	mov    rdx,rax
   1400104f1:	mov    QWORD PTR [rbp-0x49],rax
   1400104f5:	cmp    rbx,rcx
   1400104f8:	jbe    0x14001050d
   1400104fa:	mov    rdx,r10
   1400104fd:	mov    rbx,rcx
   140010500:	mov    rsi,r10
   140010503:	mov    QWORD PTR [rbp-0x49],rdx
   140010507:	jmp    0x14001050d
   140010509:	mov    rdx,QWORD PTR [rbp-0x49]
   14001050d:	mov    rcx,QWORD PTR [rbp-0x61]
   140010511:	mov    eax,r14d
   140010514:	sub    rcx,r12
   140010517:	cmp    rcx,rax
   14001051a:	jb     0x140010526
   14001051c:	test   r14d,r14d
   14001051f:	jne    0x14001052d
   140010521:	test   rcx,rcx
   140010524:	jne    0x14001052d
   140010526:	mov    al,0x1
   140010528:	mov    BYTE PTR [rbp-0x69],al
   14001052b:	jmp    0x140010530
   14001052d:	mov    al,BYTE PTR [rbp-0x69]
   140010530:	test   rdx,rdx
   140010533:	jle    0x140010541
   140010535:	mov    rcx,QWORD PTR [rbp-0x61]
   140010539:	test   al,al
   14001053b:	je     0x1400103a1
   140010541:	mov    r14,QWORD PTR [rbp-0x39]
   140010545:	jmp    0x14001054a
   140010547:	mov    al,BYTE PTR [rbp-0x69]
   14001054a:	mov    rcx,QWORD PTR [rbp-0x61]
   14001054e:	test   r15,r15
   140010551:	je     0x1400101a5
   140010557:	test   al,al
   140010559:	jne    0x140010565
   14001055b:	cmp    DWORD PTR [rbp-0x65],r10d
   14001055f:	je     0x1400101bd
   140010565:	mov    QWORD PTR [r12],0x5449534d
   14001056d:	mov    QWORD PTR [r12+0x8],0x0
   140010576:	mov    eax,DWORD PTR [rbp-0x65]
   140010579:	mov    ecx,DWORD PTR [r15+0x10]
   14001057d:	neg    eax
   14001057f:	mov    rax,QWORD PTR [rip+0x40a22]        # 0x140050fa8
   140010586:	sbb    edx,edx
   140010588:	and    edx,0x4
   14001058b:	add    edx,0x4
   14001058e:	imul   ecx,DWORD PTR [r15+0x8]
   140010593:	mov    DWORD PTR [rcx+rax*1+0x8],edx
   140010597:	mov    rcx,QWORD PTR [rdi+0x60]
   14001059b:	mov    rdx,r15
   14001059e:	add    rcx,0x3f0
   1400105a5:	call   0x14001ef98
   1400105aa:	mov    al,BYTE PTR [rbp-0x69]
   1400105ad:	xor    r10d,r10d
   1400105b0:	jmp    0x140010198
   1400105b5:	mov    rax,QWORD PTR [rdi+0x10]
   1400105b9:	xor    r8d,r8d
   1400105bc:	or     r14d,0xffffffff
   1400105c0:	mov    QWORD PTR [rbp-0x29],rax
   1400105c4:	mov    rax,QWORD PTR [rdi+0x8]
   1400105c8:	lea    esi,[r8+0x2]
   1400105cc:	lea    rdx,[rbp-0x29]
   1400105d0:	mov    r9d,r14d
   1400105d3:	mov    ecx,esi
   1400105d5:	mov    QWORD PTR [rbp-0x21],rax
   1400105d9:	call   QWORD PTR [rip+0x28ec9]        # 0x1400394a8
   1400105df:	cmp    eax,0x1
   1400105e2:	jne    0x1400105f3
   1400105e4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400105e8:	call   QWORD PTR [rip+0x28f82]        # 0x140039570
   1400105ee:	jmp    0x140010157
   1400105f3:	lea    rbx,[rdi+0x20]
   1400105f7:	mov    rdx,QWORD PTR [rbx]
   1400105fa:	test   rdx,rdx
   1400105fd:	je     0x140010625
   1400105ff:	mov    ecx,DWORD PTR [rdx+0x10]
   140010602:	mov    rax,QWORD PTR [rip+0x4099f]        # 0x140050fa8
   140010609:	imul   ecx,DWORD PTR [rdx+0x8]
   14001060d:	mov    DWORD PTR [rcx+rax*1+0x8],0x8
   140010615:	mov    rcx,QWORD PTR [rdi+0x60]
   140010619:	add    rcx,0x3f0
   140010620:	call   0x14001ef98
   140010625:	add    rbx,0x20
   140010629:	dec    rsi
   14001062c:	jne    0x1400105f7
   14001062e:	mov    rax,QWORD PTR [rdi+0x60]
   140010632:	mov    rbx,QWORD PTR [rax+0x2150]
   140010639:	lea    rcx,[rbx+0x18]
   14001063d:	call   QWORD PTR [rip+0x28b65]        # 0x1400391a8
   140010643:	cmp    QWORD PTR [rbx+0x8],0xffffffffffffffff
   140010648:	je     0x14001065f
   14001064a:	add    DWORD PTR [rbx+0x10],r14d
   14001064e:	jne    0x14001065f
   140010650:	mov    rcx,QWORD PTR [rbx+0x8]
   140010654:	call   QWORD PTR [rip+0x28f66]        # 0x1400395c0
   14001065a:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001065f:	lea    rcx,[rbx+0x18]
   140010663:	call   QWORD PTR [rip+0x28b47]        # 0x1400391b0
   140010669:	mov    rcx,QWORD PTR [rdi+0x18]
   14001066d:	xor    edx,edx
   14001066f:	mov    r8d,0x8000
   140010675:	call   QWORD PTR [rip+0x28eed]        # 0x140039568
   14001067b:	and    QWORD PTR [rdi+0x18],0x0
   140010680:	rdtsc  
   140010682:	shl    rdx,0x20
   140010686:	lea    r8,[rip+0x2cdc3]        # 0x14003d450
   14001068d:	mov    BYTE PTR [rsp+0x20],0x0
   140010692:	or     rax,rdx
   140010695:	mov    dl,0x22
   140010697:	mov    r9,rax
   14001069a:	call   0x1400181e4
   14001069f:	xor    eax,eax
   1400106a1:	mov    rcx,QWORD PTR [rbp+0x27]
   1400106a5:	xor    rcx,rsp
   1400106a8:	call   0x140020e50
   1400106ad:	lea    r11,[rsp+0xe0]
   1400106b5:	mov    rbx,QWORD PTR [r11+0x38]
   1400106b9:	mov    rsi,QWORD PTR [r11+0x40]
   1400106bd:	mov    rdi,QWORD PTR [r11+0x48]
   1400106c1:	mov    rsp,r11
   1400106c4:	pop    r15
   1400106c6:	pop    r14
   1400106c8:	pop    r13
   1400106ca:	pop    r12
   1400106cc:	pop    rbp
   1400106cd:	ret    
   1400106ce:	int3   
   1400106cf:	int3   
   1400106d0:	rex push rbx
   1400106d2:	push   rbp
   1400106d3:	push   rsi
   1400106d4:	push   rdi
   1400106d5:	push   r14
   1400106d7:	sub    rsp,0xc0
   1400106de:	mov    rax,QWORD PTR [rip+0x3cd63]        # 0x14004d448
   1400106e5:	xor    rax,rsp
   1400106e8:	mov    QWORD PTR [rsp+0xb0],rax
   1400106f0:	mov    rdi,QWORD PTR [rsp+0x118]
   1400106f8:	mov    r11,QWORD PTR [rsp+0x120]
   140010700:	mov    rax,QWORD PTR [rsp+0x128]
   140010708:	mov    rbx,rdx
   14001070b:	mov    rdx,QWORD PTR [rsp+0x110]
   140010713:	xor    ebp,ebp
   140010715:	mov    r10,r8
   140010718:	mov    rsi,rcx
   14001071b:	cmp    DWORD PTR [rbx],ebp
   14001071d:	jne    0x14001072d
   14001071f:	mov    DWORD PTR [rdx],ebp
   140010721:	mov    DWORD PTR [rdi],ebp
   140010723:	mov    BYTE PTR [rax],0x1
   140010726:	xor    al,al
   140010728:	jmp    0x1400109b2
   14001072d:	mov    BYTE PTR [rax],bpl
   140010730:	mov    ecx,DWORD PTR [rbx]
   140010732:	mov    r14d,0xcdcdcde
   140010738:	cmp    ecx,r14d
   14001073b:	jg     0x140010786
   14001073d:	je     0x140010760
   14001073f:	sub    ecx,0xcdcdcd1
   140010745:	je     0x1400107ad
   140010747:	dec    ecx
   140010749:	je     0x14001077f
   14001074b:	dec    ecx
   14001074d:	je     0x140010778
   14001074f:	dec    ecx
   140010751:	je     0x140010771
   140010753:	dec    ecx
   140010755:	je     0x14001076a
   140010757:	sub    ecx,0x4
   14001075a:	je     0x140010765
   14001075c:	dec    ecx
   14001075e:	jne    0x1400107a4
   140010760:	mov    eax,DWORD PTR [rbx+0x39]
   140010763:	jmp    0x1400107be
   140010765:	mov    eax,DWORD PTR [rbx+0x14]
   140010768:	jmp    0x1400107be
   14001076a:	mov    eax,0x21c
   14001076f:	jmp    0x1400107be
   140010771:	mov    eax,0x30
   140010776:	jmp    0x1400107be
   140010778:	mov    eax,0x248
   14001077d:	jmp    0x1400107be
   14001077f:	mov    eax,0x818
   140010784:	jmp    0x1400107be
   140010786:	sub    ecx,0xcdcdce3
   14001078c:	je     0x1400107b9
   14001078e:	sub    ecx,0x5
   140010791:	je     0x1400107b4
   140010793:	dec    ecx
   140010795:	je     0x1400107ad
   140010797:	sub    ecx,0x2
   14001079a:	je     0x1400107a8
   14001079c:	dec    ecx
   14001079e:	je     0x140010771
   1400107a0:	dec    ecx
   1400107a2:	je     0x140010765
   1400107a4:	mov    eax,ebp
   1400107a6:	jmp    0x1400107be
   1400107a8:	mov    eax,DWORD PTR [rbx+0x24]
   1400107ab:	jmp    0x1400107be
   1400107ad:	mov    eax,0x18
   1400107b2:	jmp    0x1400107be
   1400107b4:	mov    eax,DWORD PTR [rbx+0xc]
   1400107b7:	jmp    0x1400107be
   1400107b9:	mov    eax,0x20
   1400107be:	mov    DWORD PTR [rdx],eax
   1400107c0:	mov    DWORD PTR [rdi],eax
   1400107c2:	mov    QWORD PTR [r11],rbp
   1400107c5:	mov    r8d,DWORD PTR [rdx]
   1400107c8:	sub    r9,r10
   1400107cb:	cmp    r9,r8
   1400107ce:	jae    0x1400107d7
   1400107d0:	mov    DWORD PTR [rdi],ebp
   1400107d2:	jmp    0x140010726
   1400107d7:	mov    ecx,DWORD PTR [rbx]
   1400107d9:	cmp    ecx,r14d
   1400107dc:	jg     0x140010974
   1400107e2:	je     0x140010819
   1400107e4:	sub    ecx,0xcdcdcd1
   1400107ea:	je     0x140010970
   1400107f0:	dec    ecx
   1400107f2:	je     0x140010970
   1400107f8:	dec    ecx
   1400107fa:	je     0x140010910
   140010800:	dec    ecx
   140010802:	je     0x1400108b7
   140010808:	dec    ecx
   14001080a:	je     0x140010881
   14001080c:	sub    ecx,0x4
   14001080f:	je     0x140010829
   140010811:	dec    ecx
   140010813:	jne    0x1400109b0
   140010819:	mov    rdx,rbx
   14001081c:	mov    rcx,rsi
   14001081f:	call   0x1400109d0
   140010824:	jmp    0x140010970
   140010829:	mov    DWORD PTR [rdi],ebp
   14001082b:	mov    ecx,DWORD PTR [rbx+0xc]
   14001082e:	sub    ecx,0x6
   140010831:	je     0x14001086a
   140010833:	dec    ecx
   140010835:	jne    0x1400109b0
   14001083b:	mov    r9,QWORD PTR [rbx+0x18]
   14001083f:	lea    edx,[rcx+0x40]
   140010842:	lea    r8,[rip+0x2d327]        # 0x14003db70
   140010849:	lea    rcx,[rsp+0x70]
   14001084e:	call   0x140001004
   140010853:	lea    rax,[rsp+0x70]
   140010858:	lea    r9,[rsp+0x60]
   14001085d:	mov    QWORD PTR [rsp+0x60],rax
   140010862:	mov    r8d,0x1
   140010868:	jmp    0x140010870
   14001086a:	xor    r9d,r9d
   14001086d:	xor    r8d,r8d
   140010870:	mov    rcx,QWORD PTR [rsi+0x60]
   140010874:	mov    edx,DWORD PTR [rbx+0x10]
   140010877:	mov    rax,QWORD PTR [rcx]
   14001087a:	call   QWORD PTR [rax]
   14001087c:	jmp    0x1400109b0
   140010881:	mov    rcx,QWORD PTR [rsi+0x60]
   140010885:	mov    r9d,DWORD PTR [rbx+0xc]
   140010889:	mov    r8d,DWORD PTR [rbx+0x10]
   14001088d:	lea    rax,[rbx+0x1c]
   140010891:	add    rcx,0x1018
   140010898:	xor    edx,edx
   14001089a:	mov    QWORD PTR [rsp+0x30],rax
   14001089f:	mov    eax,DWORD PTR [rbx+0x14]
   1400108a2:	mov    DWORD PTR [rsp+0x28],eax
   1400108a6:	mov    eax,DWORD PTR [rbx+0x18]
   1400108a9:	mov    DWORD PTR [rsp+0x20],eax
   1400108ad:	call   0x140011680
   1400108b2:	jmp    0x140010970
   1400108b7:	mov    rcx,QWORD PTR [rsi+0x60]
   1400108bb:	mov    r9d,DWORD PTR [rbx+0xc]
   1400108bf:	mov    rdx,QWORD PTR [rbx+0x4]
   1400108c3:	add    rcx,0x1018
   1400108ca:	cmp    DWORD PTR [rbx+0x2c],ebp
   1400108cd:	je     0x1400108f4
   1400108cf:	mov    rax,QWORD PTR [rbx+0x1c]
   1400108d3:	mov    QWORD PTR [rsp+0x38],rax
   1400108d8:	mov    eax,DWORD PTR [rbx+0x18]
   1400108db:	mov    DWORD PTR [rsp+0x30],eax
   1400108df:	mov    eax,DWORD PTR [rbx+0x10]
   1400108e2:	mov    DWORD PTR [rsp+0x28],eax
   1400108e6:	mov    eax,DWORD PTR [rbx+0x14]
   1400108e9:	mov    DWORD PTR [rsp+0x20],eax
   1400108ed:	call   0x1400115b8
   1400108f2:	jmp    0x140010970
   1400108f4:	mov    eax,DWORD PTR [rbx+0x18]
   1400108f7:	mov    DWORD PTR [rsp+0x30],eax
   1400108fb:	mov    eax,DWORD PTR [rbx+0x10]
   1400108fe:	mov    DWORD PTR [rsp+0x28],eax
   140010902:	mov    eax,DWORD PTR [rbx+0x14]
   140010905:	mov    DWORD PTR [rsp+0x20],eax
   140010909:	call   0x140011620
   14001090e:	jmp    0x140010970
   140010910:	mov    eax,DWORD PTR [rbx+0x244]
   140010916:	mov    rcx,QWORD PTR [rsi+0x60]
   14001091a:	mov    r9,QWORD PTR [rbx+0xc]
   14001091e:	mov    DWORD PTR [rsp+0x50],eax
   140010922:	mov    rax,QWORD PTR [rbx+0x23c]
   140010929:	lea    rdx,[rbx+0x38]
   14001092d:	mov    QWORD PTR [rsp+0x48],rax
   140010932:	mov    eax,DWORD PTR [rbx+0x238]
   140010938:	or     r8d,0xffffffff
   14001093c:	mov    DWORD PTR [rsp+0x40],eax
   140010940:	mov    rax,QWORD PTR [rbx+0x4]
   140010944:	add    rcx,0x1018
   14001094b:	mov    QWORD PTR [rsp+0x30],rax
   140010950:	mov    eax,DWORD PTR [rbx+0x1c]
   140010953:	mov    QWORD PTR [rsp+0x28],rdx
   140010958:	mov    edx,DWORD PTR [rbx+0x24]
   14001095b:	mov    DWORD PTR [rsp+0x20],eax
   14001095f:	cmp    DWORD PTR [rbx+0x30],ebp
   140010962:	je     0x14001096b
   140010964:	call   0x140011978
   140010969:	jmp    0x140010970
   14001096b:	call   0x140011a40
   140010970:	mov    DWORD PTR [rdi],ebp
   140010972:	jmp    0x1400109b0
   140010974:	sub    ecx,0xcdcdce3
   14001097a:	je     0x14001099b
   14001097c:	sub    ecx,0x5
   14001097f:	je     0x140010992
   140010981:	dec    ecx
   140010983:	je     0x1400109a5
   140010985:	sub    ecx,0x2
   140010988:	je     0x140010992
   14001098a:	dec    ecx
   14001098c:	je     0x140010992
   14001098e:	dec    ecx
   140010990:	jne    0x1400109b0
   140010992:	mov    rax,QWORD PTR [rbx+0x4]
   140010996:	mov    QWORD PTR [r11],rax
   140010999:	jmp    0x1400109a2
   14001099b:	mov    rcx,QWORD PTR [rbx+0x4]
   14001099f:	mov    QWORD PTR [r11],rcx
   1400109a2:	mov    r8d,DWORD PTR [rdx]
   1400109a5:	mov    rdx,rbx
   1400109a8:	mov    rcx,r10
   1400109ab:	call   0x140020e80
   1400109b0:	mov    al,0x1
   1400109b2:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400109ba:	xor    rcx,rsp
   1400109bd:	call   0x140020e50
   1400109c2:	add    rsp,0xc0
   1400109c9:	pop    r14
   1400109cb:	pop    rdi
   1400109cc:	pop    rsi
   1400109cd:	pop    rbp
   1400109ce:	pop    rbx
   1400109cf:	ret    
   1400109d0:	mov    rax,rsp
   1400109d3:	mov    QWORD PTR [rax+0x8],rbx
   1400109d7:	mov    QWORD PTR [rax+0x10],rbp
   1400109db:	mov    QWORD PTR [rax+0x18],rsi
   1400109df:	mov    QWORD PTR [rax+0x20],rdi
   1400109e3:	push   r14
   1400109e5:	sub    rsp,0x20
   1400109e9:	cmp    BYTE PTR [rdx+0x38],0x0
   1400109ed:	mov    rbp,rdx
   1400109f0:	mov    rbx,rcx
   1400109f3:	je     0x140010a04
   1400109f5:	mov    esi,DWORD PTR [rdx+0x39]
   1400109f8:	lea    rdi,[rcx+0x40]
   1400109fc:	mov    r14d,0x8
   140010a02:	jmp    0x140010a11
   140010a04:	mov    esi,0x38
   140010a09:	lea    rdi,[rcx+0x20]
   140010a0d:	lea    r14d,[rsi-0x33]
   140010a11:	cmp    QWORD PTR [rdi],0x0
   140010a15:	jne    0x140010a43
   140010a17:	mov    rcx,QWORD PTR [rcx+0x60]
   140010a1b:	mov    edx,0x1
   140010a20:	add    rcx,0x3f0
   140010a27:	call   0x14001eef4
   140010a2c:	mov    QWORD PTR [rdi],rax
   140010a2f:	test   rax,rax
   140010a32:	je     0x140010acd
   140010a38:	mov    r8d,r14d
   140010a3b:	mov    rdx,rdi
   140010a3e:	call   0x140010ae8
   140010a43:	cmp    DWORD PTR [rdi+0x8],esi
   140010a46:	ja     0x140010aaf
   140010a48:	mov    rax,QWORD PTR [rdi+0x10]
   140010a4c:	and    DWORD PTR [rax+0x4],0x0
   140010a50:	and    DWORD PTR [rax+0x8],0x0
   140010a54:	and    DWORD PTR [rax+0xc],0x0
   140010a58:	mov    DWORD PTR [rax],0x5449534d
   140010a5e:	mov    rdx,QWORD PTR [rdi]
   140010a61:	mov    rax,QWORD PTR [rip+0x40540]        # 0x140050fa8
   140010a68:	mov    ecx,DWORD PTR [rdx+0x10]
   140010a6b:	imul   ecx,DWORD PTR [rdx+0x8]
   140010a6f:	mov    DWORD PTR [rcx+rax*1+0x8],0x4
   140010a77:	mov    rcx,QWORD PTR [rbx+0x60]
   140010a7b:	add    rcx,0x3f0
   140010a82:	call   0x14001ef98
   140010a87:	mov    rcx,QWORD PTR [rbx+0x60]
   140010a8b:	mov    edx,0x1
   140010a90:	add    rcx,0x3f0
   140010a97:	call   0x14001eef4
   140010a9c:	mov    QWORD PTR [rdi],rax
   140010a9f:	test   rax,rax
   140010aa2:	je     0x140010acd
   140010aa4:	mov    r8d,r14d
   140010aa7:	mov    rdx,rdi
   140010aaa:	call   0x140010ae8
   140010aaf:	mov    rcx,QWORD PTR [rdi+0x10]
   140010ab3:	mov    r8d,esi
   140010ab6:	mov    rdx,rbp
   140010ab9:	mov    ebx,esi
   140010abb:	call   0x140020e80
   140010ac0:	mov    rax,QWORD PTR [rdi+0x18]
   140010ac4:	sub    DWORD PTR [rdi+0x8],esi
   140010ac7:	add    QWORD PTR [rdi+0x10],rbx
   140010acb:	inc    DWORD PTR [rax]
   140010acd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ad2:	mov    rbp,QWORD PTR [rsp+0x38]
   140010ad7:	mov    rsi,QWORD PTR [rsp+0x40]
   140010adc:	mov    rdi,QWORD PTR [rsp+0x48]
   140010ae1:	add    rsp,0x20
   140010ae5:	pop    r14
   140010ae7:	ret    
   140010ae8:	mov    rcx,QWORD PTR [rdx]
   140010aeb:	xor    r10d,r10d
   140010aee:	mov    r11,rdx
   140010af1:	test   rcx,rcx
   140010af4:	je     0x140010b55
   140010af6:	mov    r9d,DWORD PTR [rcx+0x10]
   140010afa:	imul   r9d,DWORD PTR [rcx+0x8]
   140010aff:	add    r9,QWORD PTR [rip+0x404a2]        # 0x140050fa8
   140010b06:	mov    DWORD PTR [r9],0x52414542
   140010b0d:	mov    DWORD PTR [r9+0x4],r8d
   140010b11:	mov    DWORD PTR [r9+0x8],0x10
   140010b19:	lea    rdx,[r9+0xc]
   140010b1d:	mov    DWORD PTR [rdx],r10d
   140010b20:	mov    rax,QWORD PTR [r11]
   140010b23:	mov    ecx,DWORD PTR [rax+0x10]
   140010b26:	mov    DWORD PTR [r9+0x14],0x2
   140010b2e:	lea    rax,[r9+0x30]
   140010b32:	mov    DWORD PTR [r9+0x10],ecx
   140010b36:	mov    QWORD PTR [r11+0x18],rdx
   140010b3a:	mov    QWORD PTR [r9+0x28],r10
   140010b3e:	mov    QWORD PTR [r11+0x10],rax
   140010b42:	mov    rax,QWORD PTR [r11]
   140010b45:	mov    r10d,0x1
   140010b4b:	mov    ecx,DWORD PTR [rax+0x10]
   140010b4e:	sub    ecx,0x40
   140010b51:	mov    DWORD PTR [r11+0x8],ecx
   140010b55:	mov    eax,r10d
   140010b58:	ret    
   140010b59:	int3   
   140010b5a:	int3   
   140010b5b:	int3   
   140010b5c:	mov    QWORD PTR [rsp+0x10],rbx
   140010b61:	push   rdi
   140010b62:	sub    rsp,0x30
   140010b66:	xor    edi,edi
   140010b68:	mov    rbx,rcx
   140010b6b:	cmp    QWORD PTR [rcx],rdi
   140010b6e:	je     0x140010b81
   140010b70:	mov    rcx,QWORD PTR [rcx+0x8]
   140010b74:	call   QWORD PTR [rip+0x2895e]        # 0x1400394d8
   140010b7a:	mov    al,0x1
   140010b7c:	jmp    0x140010c4c
   140010b81:	xor    ecx,ecx
   140010b83:	mov    edx,0x640000
   140010b88:	mov    r8d,0x1000
   140010b8e:	lea    r9d,[rcx+0x4]
   140010b92:	call   QWORD PTR [rip+0x28820]        # 0x1400393b8
   140010b98:	mov    QWORD PTR [rbx+0x18],rax
   140010b9c:	test   rax,rax
   140010b9f:	jne    0x140010ba8
   140010ba1:	xor    al,al
   140010ba3:	jmp    0x140010c4c
   140010ba8:	xor    r9d,r9d
   140010bab:	xor    r8d,r8d
   140010bae:	xor    edx,edx
   140010bb0:	xor    ecx,ecx
   140010bb2:	call   QWORD PTR [rip+0x28968]        # 0x140039520
   140010bb8:	mov    QWORD PTR [rbx+0x8],rax
   140010bbc:	test   rax,rax
   140010bbf:	jne    0x140010bd5
   140010bc1:	mov    rcx,QWORD PTR [rbx+0x18]
   140010bc5:	xor    edx,edx
   140010bc7:	mov    r8d,0x8000
   140010bcd:	call   QWORD PTR [rip+0x28995]        # 0x140039568
   140010bd3:	jmp    0x140010ba1
   140010bd5:	xor    r9d,r9d
   140010bd8:	xor    r8d,r8d
   140010bdb:	xor    edx,edx
   140010bdd:	xor    ecx,ecx
   140010bdf:	call   QWORD PTR [rip+0x2893b]        # 0x140039520
   140010be5:	xor    edx,edx
   140010be7:	mov    QWORD PTR [rbx+0x10],rax
   140010beb:	test   rax,rax
   140010bee:	jne    0x140010c0c
   140010bf0:	mov    rcx,QWORD PTR [rbx+0x18]
   140010bf4:	mov    r8d,0x8000
   140010bfa:	call   QWORD PTR [rip+0x28968]        # 0x140039568
   140010c00:	mov    rcx,QWORD PTR [rbx+0x8]
   140010c04:	call   QWORD PTR [rip+0x289b6]        # 0x1400395c0
   140010c0a:	jmp    0x140010ba1
   140010c0c:	lea    rax,[rsp+0x40]
   140010c11:	lea    r8,[rip+0xfffffffffffff4dc]        # 0x1400100f4
   140010c18:	mov    r9,rbx
   140010c1b:	mov    QWORD PTR [rsp+0x28],rax
   140010c20:	xor    ecx,ecx
   140010c22:	mov    DWORD PTR [rsp+0x20],edi
   140010c26:	call   QWORD PTR [rip+0x2890c]        # 0x140039538
   140010c2c:	mov    QWORD PTR [rbx],rax
   140010c2f:	test   rax,rax
   140010c32:	jne    0x140010c46
   140010c34:	mov    rcx,QWORD PTR [rbx+0x18]
   140010c38:	xor    edx,edx
   140010c3a:	mov    r8d,0x8000
   140010c40:	call   QWORD PTR [rip+0x28922]        # 0x140039568
   140010c46:	cmp    QWORD PTR [rbx],rdi
   140010c49:	setne  al
   140010c4c:	mov    rbx,QWORD PTR [rsp+0x48]
   140010c51:	add    rsp,0x30
   140010c55:	pop    rdi
   140010c56:	ret    
   140010c57:	int3   
   140010c58:	sub    rsp,0x28
   140010c5c:	mov    r8,rcx
   140010c5f:	xor    ecx,ecx
   140010c61:	mov    edx,DWORD PTR [r8]
   140010c64:	cmp    edx,0xa
   140010c67:	jg     0x140010d04
   140010c6d:	je     0x140010c9b
   140010c6f:	dec    edx
   140010c71:	je     0x140010cfd
   140010c77:	dec    edx
   140010c79:	je     0x140010cf6
   140010c7b:	dec    edx
   140010c7d:	je     0x140010cef
   140010c7f:	dec    edx
   140010c81:	je     0x140010ce5
   140010c83:	dec    edx
   140010c85:	je     0x140010ccd
   140010c87:	dec    edx
   140010c89:	je     0x140010caf
   140010c8b:	dec    edx
   140010c8d:	je     0x140010ca5
   140010c8f:	dec    edx
   140010c91:	je     0x140010ca5
   140010c93:	dec    edx
   140010c95:	jne    0x140010d70
   140010c9b:	mov    ecx,0x218
   140010ca0:	jmp    0x140010d70
   140010ca5:	mov    ecx,0x23c
   140010caa:	jmp    0x140010d70
   140010caf:	cmp    BYTE PTR [r8+0x28],0x10
   140010cb4:	jbe    0x140010cbb
   140010cb6:	mov    BYTE PTR [r8+0x28],0x10
   140010cbb:	movzx  ecx,BYTE PTR [r8+0x28]
   140010cc0:	shl    rcx,0x4
   140010cc4:	add    rcx,0x2c
   140010cc8:	jmp    0x140010d64
   140010ccd:	lea    rcx,[r8+0x28]
   140010cd1:	call   QWORD PTR [rip+0x288a1]        # 0x140039578
   140010cd7:	inc    eax
   140010cd9:	cdqe   
   140010cdb:	lea    rcx,[rax*2+0x28]
   140010ce3:	jmp    0x140010d64
   140010ce5:	mov    ecx,0x1c
   140010cea:	jmp    0x140010d70
   140010cef:	mov    ecx,0x24
   140010cf4:	jmp    0x140010d70
   140010cf6:	mov    ecx,0x14
   140010cfb:	jmp    0x140010d70
   140010cfd:	mov    ecx,0x228
   140010d02:	jmp    0x140010d70
   140010d04:	sub    edx,0xb
   140010d07:	je     0x140010d5f
   140010d09:	sub    edx,0x2
   140010d0c:	je     0x140010d58
   140010d0e:	dec    edx
   140010d10:	je     0x140010d58
   140010d12:	dec    edx
   140010d14:	je     0x140010d51
   140010d16:	dec    edx
   140010d18:	je     0x140010d4a
   140010d1a:	dec    edx
   140010d1c:	je     0x140010d43
   140010d1e:	dec    edx
   140010d20:	je     0x140010d2d
   140010d22:	dec    edx
   140010d24:	jne    0x140010d70
   140010d26:	movzx  ecx,WORD PTR [r8+0x4]
   140010d2b:	jmp    0x140010d64
   140010d2d:	mov    ecx,DWORD PTR [r8+0x28]
   140010d31:	mov    eax,DWORD PTR [r8+0x24]
   140010d35:	lea    rcx,[rax+rcx*4]
   140010d39:	lea    rcx,[rcx*2+0x2c]
   140010d41:	jmp    0x140010d64
   140010d43:	mov    ecx,0x3c
   140010d48:	jmp    0x140010d70
   140010d4a:	mov    ecx,0x2d
   140010d4f:	jmp    0x140010d70
   140010d51:	mov    ecx,0x23b
   140010d56:	jmp    0x140010d70
   140010d58:	mov    ecx,0x20
   140010d5d:	jmp    0x140010d70
   140010d5f:	mov    ecx,0x2c
   140010d64:	mov    eax,0x300
   140010d69:	cmp    rcx,rax
   140010d6c:	cmova  rcx,rax
   140010d70:	mov    eax,ecx
   140010d72:	add    rsp,0x28
   140010d76:	ret    
   140010d77:	int3   
   140010d78:	rex push rdi
   140010d7a:	sub    rsp,0x30
   140010d7e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010d87:	mov    QWORD PTR [rsp+0x48],rbx
   140010d8c:	mov    rdi,rcx
   140010d8f:	lea    rbx,[rcx+0x48]
   140010d93:	mov    QWORD PTR [rsp+0x40],rbx
   140010d98:	mov    eax,0x1
   140010d9d:	xchg   DWORD PTR [rbx+0x8],eax
   140010da0:	test   eax,eax
   140010da2:	je     0x140010daf
   140010da4:	mov    rcx,QWORD PTR [rsp+0x40]
   140010da9:	call   0x1400178cc
   140010dae:	nop
   140010daf:	cmp    DWORD PTR [rdi+0x94],0x0
   140010db6:	jg     0x140010dc3
   140010db8:	lea    rcx,[rdi+0x60]
   140010dbc:	call   0x140012698
   140010dc1:	jmp    0x140010daf
   140010dc3:	dec    DWORD PTR [rdi+0x94]
   140010dc9:	mov    ecx,DWORD PTR [rdi+0xa0]
   140010dcf:	movsxd rax,DWORD PTR [rdi+0x94]
   140010dd6:	imul   rcx,rax
   140010dda:	mov    rax,QWORD PTR [rdi+0xb0]
   140010de1:	mov    rdi,QWORD PTR [rcx+rax*1]
   140010de5:	xor    eax,eax
   140010de7:	xchg   DWORD PTR [rbx+0x8],eax
   140010dea:	lock or DWORD PTR [rsp],0x0
   140010def:	mov    rcx,QWORD PTR [rsp+0x40]
   140010df4:	mov    eax,DWORD PTR [rcx+0xc]
   140010df7:	test   eax,eax
   140010df9:	jle    0x140010e1e
   140010dfb:	lock or DWORD PTR [rsp],0x0
   140010e00:	mov    ecx,DWORD PTR [rcx+0xc]
   140010e03:	mov    rcx,QWORD PTR [rsp+0x40]
   140010e08:	mov    rdx,QWORD PTR [rcx]
   140010e0b:	test   rdx,rdx
   140010e0e:	je     0x140010e1e
   140010e10:	mov    rcx,QWORD PTR [rsp+0x40]
   140010e15:	mov    rcx,QWORD PTR [rcx]
   140010e18:	call   QWORD PTR [rip+0x286ba]        # 0x1400394d8
   140010e1e:	mov    rax,rdi
   140010e21:	mov    rbx,QWORD PTR [rsp+0x48]
   140010e26:	add    rsp,0x30
   140010e2a:	pop    rdi
   140010e2b:	ret    
   140010e2c:	mov    rax,rsp
   140010e2f:	push   rdi
   140010e30:	sub    rsp,0x30
   140010e34:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140010e3c:	mov    QWORD PTR [rax+0x10],rbx
   140010e40:	mov    QWORD PTR [rax+0x18],rsi
   140010e44:	mov    rsi,rdx
   140010e47:	mov    rdi,rcx
   140010e4a:	lea    rbx,[rcx+0x48]
   140010e4e:	mov    QWORD PTR [rax+0x8],rbx
   140010e52:	mov    eax,0x1
   140010e57:	xchg   DWORD PTR [rbx+0x8],eax
   140010e5a:	test   eax,eax
   140010e5c:	je     0x140010e69
   140010e5e:	mov    rcx,QWORD PTR [rsp+0x40]
   140010e63:	call   0x1400178cc
   140010e68:	nop
   140010e69:	mov    eax,DWORD PTR [rdi+0x90]
   140010e6f:	cmp    DWORD PTR [rdi+0x94],eax
   140010e75:	jl     0x140010e95
   140010e77:	add    eax,eax
   140010e79:	mov    edx,0x2
   140010e7e:	cmp    eax,edx
   140010e80:	cmovg  edx,eax
   140010e83:	mov    DWORD PTR [rdi+0x90],edx
   140010e89:	lea    rcx,[rdi+0x98]
   140010e90:	call   0x14000e464
   140010e95:	movsxd rax,DWORD PTR [rdi+0x94]
   140010e9c:	mov    rdx,rax
   140010e9f:	inc    eax
   140010ea1:	mov    DWORD PTR [rdi+0x94],eax
   140010ea7:	mov    ecx,DWORD PTR [rdi+0xa0]
   140010ead:	imul   rcx,rdx
   140010eb1:	mov    rax,QWORD PTR [rdi+0xb0]
   140010eb8:	mov    QWORD PTR [rcx+rax*1],rsi
   140010ebc:	xor    eax,eax
   140010ebe:	xchg   DWORD PTR [rbx+0x8],eax
   140010ec1:	lock or DWORD PTR [rsp],0x0
   140010ec6:	mov    rcx,QWORD PTR [rsp+0x40]
   140010ecb:	mov    eax,DWORD PTR [rcx+0xc]
   140010ece:	test   eax,eax
   140010ed0:	jle    0x140010ef5
   140010ed2:	lock or DWORD PTR [rsp],0x0
   140010ed7:	mov    eax,DWORD PTR [rcx+0xc]
   140010eda:	mov    rax,QWORD PTR [rsp+0x40]
   140010edf:	mov    rcx,QWORD PTR [rax]
   140010ee2:	test   rcx,rcx
   140010ee5:	je     0x140010ef5
   140010ee7:	mov    rcx,QWORD PTR [rsp+0x40]
   140010eec:	mov    rcx,QWORD PTR [rcx]
   140010eef:	call   QWORD PTR [rip+0x285e3]        # 0x1400394d8
   140010ef5:	mov    rbx,QWORD PTR [rsp+0x48]
   140010efa:	mov    rsi,QWORD PTR [rsp+0x50]
   140010eff:	add    rsp,0x30
   140010f03:	pop    rdi
   140010f04:	ret    
   140010f05:	int3   
   140010f06:	int3   
   140010f07:	int3   
   140010f08:	mov    rax,rsp
   140010f0b:	push   rdi
   140010f0c:	sub    rsp,0x30
   140010f10:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140010f18:	mov    QWORD PTR [rax+0x10],rbx
   140010f1c:	mov    QWORD PTR [rax+0x18],rbp
   140010f20:	mov    QWORD PTR [rax+0x20],rsi
   140010f24:	mov    rbp,rdx
   140010f27:	mov    rsi,rcx
   140010f2a:	mov    rdi,QWORD PTR [rcx+0xb8]
   140010f31:	lea    rbx,[rdi+0x10]
   140010f35:	mov    QWORD PTR [rax+0x8],rbx
   140010f39:	mov    eax,0x1
   140010f3e:	xchg   DWORD PTR [rbx+0x8],eax
   140010f41:	test   eax,eax
   140010f43:	je     0x140010f50
   140010f45:	mov    rcx,QWORD PTR [rsp+0x40]
   140010f4a:	call   0x1400178cc
   140010f4f:	nop
   140010f50:	mov    edx,DWORD PTR [rdi+0x4]
   140010f53:	lea    eax,[rdx+0x1]
   140010f56:	mov    DWORD PTR [rdi+0x4],eax
   140010f59:	mov    ecx,DWORD PTR [rsi+0xd0]
   140010f5f:	imul   rcx,rdx
   140010f63:	mov    rax,QWORD PTR [rsi+0xe0]
   140010f6a:	mov    QWORD PTR [rcx+rax*1],rbp
   140010f6e:	mov    ebp,DWORD PTR [rdi+0xc]
   140010f71:	cmp    DWORD PTR [rdi+0x4],ebp
   140010f74:	sbb    eax,eax
   140010f76:	and    DWORD PTR [rdi+0x4],eax
   140010f79:	mov    eax,DWORD PTR [rdi+0x4]
   140010f7c:	cmp    DWORD PTR [rdi],eax
   140010f7e:	jne    0x140010fd2
   140010f80:	add    ebp,ebp
   140010f82:	mov    edx,ebp
   140010f84:	lea    rcx,[rsi+0xc8]
   140010f8b:	call   0x14000e464
   140010f90:	xor    r10d,r10d
   140010f93:	cmp    DWORD PTR [rdi+0x4],r10d
   140010f97:	jbe    0x140010fc9
   140010f99:	mov    r8d,DWORD PTR [rsi+0xd0]
   140010fa0:	mov    r9,QWORD PTR [rsi+0xe0]
   140010fa7:	mov    edx,r10d
   140010faa:	imul   rdx,r8
   140010fae:	mov    ecx,DWORD PTR [rdi+0xc]
   140010fb1:	add    ecx,r10d
   140010fb4:	imul   rcx,r8
   140010fb8:	mov    rax,QWORD PTR [rdx+r9*1]
   140010fbc:	mov    QWORD PTR [rcx+r9*1],rax
   140010fc0:	inc    r10d
   140010fc3:	cmp    r10d,DWORD PTR [rdi+0x4]
   140010fc7:	jb     0x140010f99
   140010fc9:	mov    eax,DWORD PTR [rdi+0xc]
   140010fcc:	add    DWORD PTR [rdi+0x4],eax
   140010fcf:	mov    DWORD PTR [rdi+0xc],ebp
   140010fd2:	xor    eax,eax
   140010fd4:	xchg   DWORD PTR [rbx+0x8],eax
   140010fd7:	lock or DWORD PTR [rsp],0x0
   140010fdc:	mov    rcx,QWORD PTR [rsp+0x40]
   140010fe1:	mov    eax,DWORD PTR [rcx+0xc]
   140010fe4:	test   eax,eax
   140010fe6:	jle    0x14001100b
   140010fe8:	lock or DWORD PTR [rsp],0x0
   140010fed:	mov    eax,DWORD PTR [rcx+0xc]
   140010ff0:	mov    rax,QWORD PTR [rsp+0x40]
   140010ff5:	mov    rcx,QWORD PTR [rax]
   140010ff8:	test   rcx,rcx
   140010ffb:	je     0x14001100b
   140010ffd:	mov    rcx,QWORD PTR [rsp+0x40]
   140011002:	mov    rcx,QWORD PTR [rcx]
   140011005:	call   QWORD PTR [rip+0x284cd]        # 0x1400394d8
   14001100b:	mov    rbx,QWORD PTR [rsp+0x48]
   140011010:	mov    rbp,QWORD PTR [rsp+0x50]
   140011015:	mov    rsi,QWORD PTR [rsp+0x58]
   14001101a:	add    rsp,0x30
   14001101e:	pop    rdi
   14001101f:	ret    
   140011020:	mov    rax,rsp
   140011023:	mov    QWORD PTR [rax+0x8],rcx
   140011027:	push   rdi
   140011028:	sub    rsp,0x30
   14001102c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011034:	mov    QWORD PTR [rax+0x20],rbx
   140011038:	mov    rdi,rcx
   14001103b:	and    QWORD PTR [rcx+0x10],0x0
   140011040:	and    QWORD PTR [rcx+0x18],0x0
   140011045:	and    QWORD PTR [rcx+0x28],0x0
   14001104a:	and    QWORD PTR [rcx+0x38],0x0
   14001104f:	and    QWORD PTR [rcx+0x8],0x0
   140011054:	and    QWORD PTR [rcx+0x20],0x0
   140011059:	and    QWORD PTR [rcx+0x30],0x0
   14001105e:	and    QWORD PTR [rcx+0x40],0x0
   140011063:	lea    rbx,[rcx+0xb8]
   14001106a:	mov    QWORD PTR [rax+0x10],rbx
   14001106e:	mov    rcx,QWORD PTR [rbx+0x20]
   140011072:	call   0x14002b138
   140011077:	nop
   140011078:	mov    rcx,rbx
   14001107b:	call   0x1400128f8
   140011080:	nop
   140011081:	lea    rbx,[rdi+0x60]
   140011085:	mov    QWORD PTR [rsp+0x48],rbx
   14001108a:	lea    rcx,[rbx+0x30]
   14001108e:	mov    QWORD PTR [rsp+0x50],rcx
   140011093:	mov    rcx,QWORD PTR [rcx+0x18]
   140011097:	call   0x14002b138
   14001109c:	nop
   14001109d:	lea    rcx,[rbx+0x10]
   1400110a1:	call   0x14000e054
   1400110a6:	nop
   1400110a7:	mov    rax,QWORD PTR [rdi+0x48]
   1400110ab:	test   rax,rax
   1400110ae:	je     0x1400110ba
   1400110b0:	mov    rcx,QWORD PTR [rdi+0x48]
   1400110b4:	call   QWORD PTR [rip+0x28506]        # 0x1400395c0
   1400110ba:	mov    QWORD PTR [rdi+0x48],0x0
   1400110c2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400110c7:	add    rsp,0x30
   1400110cb:	pop    rdi
   1400110cc:	ret    
   1400110cd:	int3   
   1400110ce:	int3   
   1400110cf:	int3   
   1400110d0:	mov    rax,rsp
   1400110d3:	push   rbp
   1400110d4:	push   rsi
   1400110d5:	push   rdi
   1400110d6:	push   r12
   1400110d8:	push   r13
   1400110da:	push   r14
   1400110dc:	push   r15
   1400110de:	mov    rbp,rsp
   1400110e1:	sub    rsp,0x60
   1400110e5:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400110ed:	mov    QWORD PTR [rax+0x20],rbx
   1400110f1:	mov    rdi,rcx
   1400110f4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400110f8:	add    rcx,0x3f0
   1400110ff:	mov    QWORD PTR [rdi+0x10],rcx
   140011103:	mov    ebx,0x1
   140011108:	mov    edx,ebx
   14001110a:	call   0x14001eef4
   14001110f:	mov    QWORD PTR [rdi+0x18],rax
   140011113:	xor    edx,edx
   140011115:	mov    rcx,rdi
   140011118:	call   0x140011474
   14001111d:	mov    edx,ebx
   14001111f:	mov    rcx,QWORD PTR [rdi+0x10]
   140011123:	call   0x14001eef4
   140011128:	mov    QWORD PTR [rdi+0x20],rax
   14001112c:	mov    edx,ebx
   14001112e:	mov    rcx,rdi
   140011131:	call   0x140011474
   140011136:	mov    DWORD PTR [rip+0x3d534],ebx        # 0x14004e670
   14001113c:	xor    r14d,r14d
   14001113f:	cmp    DWORD PTR [rip+0x3fe1e],r14d        # 0x140050f64
   140011146:	je     0x14001115f
   140011148:	mov    rcx,QWORD PTR [rdi+0x8]
   14001114c:	add    rcx,0xb10
   140011153:	call   0x14001ea18
   140011158:	mov    DWORD PTR [rip+0x3fe05],r14d        # 0x140050f64
   14001115f:	mov    r13b,bl
   140011162:	cmp    DWORD PTR [rip+0x3d507],r14d        # 0x14004e670
   140011169:	jne    0x140011177
   14001116b:	test   r13b,r13b
   14001116e:	je     0x1400113ef
   140011174:	mov    r13b,r14b
   140011177:	mov    rcx,QWORD PTR [rdi+0x8]
   14001117b:	mov    edx,0x1f4
   140011180:	mov    rcx,QWORD PTR [rcx+0xc0]
   140011187:	call   QWORD PTR [rip+0x2830b]        # 0x140039498
   14001118d:	mov    esi,r14d
   140011190:	mov    DWORD PTR [rbp+0x40],r14d
   140011194:	cmp    DWORD PTR [rip+0x3fdc9],r14d        # 0x140050f64
   14001119b:	jne    0x1400111de
   14001119d:	mov    rcx,QWORD PTR [rdi+0x8]
   1400111a1:	add    rcx,0xb20
   1400111a8:	mov    rax,QWORD PTR [rcx]
   1400111ab:	call   QWORD PTR [rax+0x8]
   1400111ae:	cmp    DWORD PTR [rax+0x18],r14d
   1400111b2:	je     0x1400111de
   1400111b4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400111b8:	add    rcx,0xb10
   1400111bf:	call   0x14001e9c8
   1400111c4:	mov    DWORD PTR [rip+0x3fd9a],ebx        # 0x140050f64
   1400111ca:	mov    rcx,QWORD PTR [rdi+0x8]
   1400111ce:	mov    rax,QWORD PTR [rcx]
   1400111d1:	xor    r9d,r9d
   1400111d4:	xor    r8d,r8d
   1400111d7:	mov    edx,0xe1230565
   1400111dc:	call   QWORD PTR [rax]
   1400111de:	mov    rcx,rdi
   1400111e1:	call   0x140011e90
   1400111e6:	mov    r12,r14
   1400111e9:	mov    r15d,ebx
   1400111ec:	mov    r14,QWORD PTR [rdi+0xb8]
   1400111f3:	lea    rbx,[r14+0x10]
   1400111f7:	mov    QWORD PTR [rbp+0x48],rbx
   1400111fb:	mov    edx,0x1
   140011200:	mov    eax,edx
   140011202:	xchg   DWORD PTR [rbx+0x8],eax
   140011205:	test   eax,eax
   140011207:	je     0x1400112a9
   14001120d:	mov    ecx,0x1000
   140011212:	mov    eax,DWORD PTR [rbx+0x8]
   140011215:	test   eax,eax
   140011217:	je     0x140011221
   140011219:	pause  
   14001121b:	sub    ecx,edx
   14001121d:	test   ecx,ecx
   14001121f:	jg     0x140011212
   140011221:	test   ecx,ecx
   140011223:	jne    0x140011290
   140011225:	mov    rcx,QWORD PTR [rbp+0x48]
   140011229:	mov    eax,edx
   14001122b:	lock xadd DWORD PTR [rcx+0x10],eax
   140011230:	add    eax,edx
   140011232:	jne    0x140011254
   140011234:	xor    r9d,r9d
   140011237:	xor    r8d,r8d
   14001123a:	xor    edx,edx
   14001123c:	xor    ecx,ecx
   14001123e:	call   QWORD PTR [rip+0x282dc]        # 0x140039520
   140011244:	mov    rcx,QWORD PTR [rbp+0x48]
   140011248:	mov    QWORD PTR [rcx],rax
   14001124b:	mov    edx,0x1
   140011250:	jmp    0x140011260
   140011252:	pause  
   140011254:	mov    rax,QWORD PTR [rbp+0x48]
   140011258:	mov    rcx,QWORD PTR [rax]
   14001125b:	test   rcx,rcx
   14001125e:	je     0x140011252
   140011260:	mov    rsi,QWORD PTR [rbp+0x48]
   140011264:	lock add DWORD PTR [rsi+0xc],edx
   140011268:	mov    eax,edx
   14001126a:	xchg   DWORD PTR [rbx+0x8],eax
   14001126d:	test   eax,eax
   14001126f:	je     0x14001129e
   140011271:	or     edx,0xffffffff
   140011274:	mov    rcx,QWORD PTR [rbp+0x48]
   140011278:	mov    rcx,QWORD PTR [rcx]
   14001127b:	call   QWORD PTR [rip+0x28217]        # 0x140039498
   140011281:	test   eax,eax
   140011283:	jne    0x14001142e
   140011289:	lock dec DWORD PTR [rsi+0xc]
   14001128d:	lea    edx,[rax+0x1]
   140011290:	mov    eax,edx
   140011292:	xchg   DWORD PTR [rbx+0x8],eax
   140011295:	test   eax,eax
   140011297:	je     0x1400112a6
   140011299:	jmp    0x14001120d
   14001129e:	mov    rax,QWORD PTR [rbp+0x48]
   1400112a2:	lock dec DWORD PTR [rax+0xc]
   1400112a6:	mov    esi,DWORD PTR [rbp+0x40]
   1400112a9:	mov    edx,DWORD PTR [r14]
   1400112ac:	cmp    edx,DWORD PTR [r14+0x4]
   1400112b0:	je     0x1400112d9
   1400112b2:	mov    ecx,DWORD PTR [rdi+0xd0]
   1400112b8:	imul   rcx,rdx
   1400112bc:	mov    rax,QWORD PTR [rdi+0xe0]
   1400112c3:	mov    r12,QWORD PTR [rcx+rax*1]
   1400112c7:	lea    eax,[rdx+0x1]
   1400112ca:	mov    DWORD PTR [r14],eax
   1400112cd:	cmp    eax,DWORD PTR [r14+0xc]
   1400112d1:	jb     0x1400112e1
   1400112d3:	and    DWORD PTR [r14],0x0
   1400112d7:	jmp    0x1400112e1
   1400112d9:	xor    r14d,r14d
   1400112dc:	mov    r15d,r14d
   1400112df:	jmp    0x1400112e4
   1400112e1:	xor    r14d,r14d
   1400112e4:	mov    eax,r14d
   1400112e7:	xchg   DWORD PTR [rbx+0x8],eax
   1400112ea:	lock or DWORD PTR [rsp],r14d
   1400112ef:	mov    rcx,QWORD PTR [rbp+0x48]
   1400112f3:	mov    eax,DWORD PTR [rcx+0xc]
   1400112f6:	test   eax,eax
   1400112f8:	jle    0x14001131b
   1400112fa:	lock or DWORD PTR [rsp],r14d
   1400112ff:	mov    eax,DWORD PTR [rcx+0xc]
   140011302:	mov    rax,QWORD PTR [rbp+0x48]
   140011306:	mov    rcx,QWORD PTR [rax]
   140011309:	test   rcx,rcx
   14001130c:	je     0x14001131b
   14001130e:	mov    rcx,QWORD PTR [rbp+0x48]
   140011312:	mov    rcx,QWORD PTR [rcx]
   140011315:	call   QWORD PTR [rip+0x281bd]        # 0x1400394d8
   14001131b:	test   r15d,r15d
   14001131e:	je     0x140011355
   140011320:	mov    eax,DWORD PTR [r12]
   140011324:	sub    eax,0x12
   140011327:	mov    r8d,r14d
   14001132a:	mov    ebx,0x1
   14001132f:	cmp    eax,ebx
   140011331:	cmovbe r8d,ebx
   140011335:	mov    rdx,r12
   140011338:	mov    rcx,rdi
   14001133b:	call   0x140011cec
   140011340:	mov    rdx,r12
   140011343:	mov    rcx,rdi
   140011346:	call   0x140010e2c
   14001134b:	mov    esi,ebx
   14001134d:	mov    DWORD PTR [rbp+0x40],ebx
   140011350:	jmp    0x1400111e9
   140011355:	test   esi,esi
   140011357:	je     0x14001136a
   140011359:	mov    rcx,QWORD PTR [rdi+0x8]
   14001135d:	mov    rcx,QWORD PTR [rcx+0xd8]
   140011364:	call   QWORD PTR [rip+0x2816e]        # 0x1400394d8
   14001136a:	mov    rax,QWORD PTR [rdi+0x8]
   14001136e:	cmp    DWORD PTR [rax+0x21b0],r14d
   140011375:	je     0x1400113e5
   140011377:	cmp    DWORD PTR [rax+0x21e8],r14d
   14001137e:	je     0x1400113e5
   140011380:	call   QWORD PTR [rip+0x2811a]        # 0x1400394a0
   140011386:	mov    edx,eax
   140011388:	sub    edx,DWORD PTR [rip+0x40e9a]        # 0x140052228
   14001138e:	mov    rcx,QWORD PTR [rdi+0x8]
   140011392:	cmp    edx,DWORD PTR [rcx+0x21e8]
   140011398:	jb     0x1400113e5
   14001139a:	mov    DWORD PTR [rip+0x40e88],eax        # 0x140052228
   1400113a0:	mov    eax,DWORD PTR [rip+0x3dd96]        # 0x14004f13c
   1400113a6:	mov    ebx,eax
   1400113a8:	inc    eax
   1400113aa:	mov    DWORD PTR [rip+0x3dd8c],eax        # 0x14004f13c
   1400113b0:	call   0x140006628
   1400113b5:	mov    QWORD PTR [rsp+0x40],rax
   1400113ba:	mov    DWORD PTR [rsp+0x38],r14d
   1400113bf:	mov    DWORD PTR [rsp+0x30],r14d
   1400113c4:	mov    DWORD PTR [rsp+0x28],r14d
   1400113c9:	mov    DWORD PTR [rsp+0x20],r14d
   1400113ce:	mov    r9d,0x9
   1400113d4:	lea    r8,[rip+0x3d29d]        # 0x14004e678
   1400113db:	mov    edx,ebx
   1400113dd:	mov    rcx,rdi
   1400113e0:	call   0x140011704
   1400113e5:	mov    ebx,0x1
   1400113ea:	jmp    0x140011162
   1400113ef:	mov    rcx,QWORD PTR [rdi+0x20]
   1400113f3:	test   rcx,rcx
   1400113f6:	je     0x140011412
   1400113f8:	mov    rax,QWORD PTR [rdi+0x40]
   1400113fc:	cmp    DWORD PTR [rax],r14d
   1400113ff:	je     0x140011412
   140011401:	mov    DWORD PTR [rcx+0x18],r14d
   140011405:	mov    rdx,QWORD PTR [rdi+0x20]
   140011409:	mov    rcx,QWORD PTR [rdi+0x10]
   14001140d:	call   0x14001ef98
   140011412:	mov    rax,QWORD PTR [rdi+0x18]
   140011416:	test   rax,rax
   140011419:	je     0x14001145a
   14001141b:	mov    DWORD PTR [rax+0x18],r14d
   14001141f:	mov    rdx,QWORD PTR [rdi+0x18]
   140011423:	mov    rcx,QWORD PTR [rdi+0x10]
   140011427:	call   0x14001ef98
   14001142c:	jmp    0x14001145a
   14001142e:	mov    rax,QWORD PTR [rbp+0x48]
   140011432:	lock dec DWORD PTR [rax+0xc]
   140011436:	and    DWORD PTR [rbp+0x40],0x0
   14001143a:	mov    DWORD PTR [rbp+0x44],0xe1232723
   140011441:	mov    rax,QWORD PTR [rbp+0x40]
   140011445:	mov    QWORD PTR [rbp+0x50],rax
   140011449:	lea    rdx,[rip+0x39668]        # 0x14004aab8
   140011450:	lea    rcx,[rbp+0x50]
   140011454:	call   0x1400265e8
   140011459:	int3   
   14001145a:	mov    rbx,QWORD PTR [rsp+0xb8]
   140011462:	add    rsp,0x60
   140011466:	pop    r15
   140011468:	pop    r14
   14001146a:	pop    r13
   14001146c:	pop    r12
   14001146e:	pop    rdi
   14001146f:	pop    rsi
   140011470:	pop    rbp
   140011471:	ret    
   140011472:	int3   
   140011473:	int3   
   140011474:	movsxd r11,edx
   140011477:	mov    r10,rcx
   14001147a:	xor    r9d,r9d
   14001147d:	mov    rcx,QWORD PTR [rcx+r11*8+0x18]
   140011482:	test   rcx,rcx
   140011485:	je     0x1400114f5
   140011487:	mov    r8d,DWORD PTR [rcx+0x10]
   14001148b:	imul   r8d,DWORD PTR [rcx+0x8]
   140011490:	add    r8,QWORD PTR [rip+0x3fb11]        # 0x140050fa8
   140011497:	neg    edx
   140011499:	mov    DWORD PTR [r8],0x52414542
   1400114a0:	mov    DWORD PTR [r8+0x8],0x10
   1400114a8:	sbb    eax,eax
   1400114aa:	and    eax,0x8
   1400114ad:	lea    rdx,[r8+0xc]
   1400114b1:	mov    DWORD PTR [rdx],r9d
   1400114b4:	inc    eax
   1400114b6:	mov    DWORD PTR [r8+0x4],eax
   1400114ba:	mov    rax,QWORD PTR [r10+r11*8+0x18]
   1400114bf:	mov    ecx,DWORD PTR [rax+0x10]
   1400114c2:	mov    DWORD PTR [r8+0x14],0x4
   1400114ca:	lea    rax,[r8+0x20]
   1400114ce:	mov    DWORD PTR [r8+0x10],ecx
   1400114d2:	mov    QWORD PTR [r10+r11*8+0x38],rdx
   1400114d7:	mov    QWORD PTR [r8+0x18],r9
   1400114db:	mov    QWORD PTR [r10+r11*8+0x28],rax
   1400114e0:	mov    rax,QWORD PTR [r10+r11*8+0x18]
   1400114e5:	mov    r9d,0x1
   1400114eb:	mov    ecx,DWORD PTR [rax+0x10]
   1400114ee:	sub    ecx,0x20
   1400114f1:	mov    DWORD PTR [r10+r11*4],ecx
   1400114f5:	mov    eax,r9d
   1400114f8:	ret    
   1400114f9:	int3   
   1400114fa:	int3   
   1400114fb:	int3   
   1400114fc:	mov    QWORD PTR [rsp+0x8],rbx
   140011501:	mov    QWORD PTR [rsp+0x10],rbp
   140011506:	mov    QWORD PTR [rsp+0x18],rsi
   14001150b:	push   rdi
   14001150c:	sub    rsp,0x20
   140011510:	mov    ebx,r9d
   140011513:	mov    rdi,rdx
   140011516:	mov    rbp,rcx
   140011519:	call   0x140010d78
   14001151e:	mov    r8d,DWORD PTR [rsp+0x50]
   140011523:	xor    edx,edx
   140011525:	mov    DWORD PTR [rax+0x8],r8d
   140011529:	or     r8d,0xffffffff
   14001152d:	mov    rsi,rax
   140011530:	mov    DWORD PTR [rax],0x1
   140011536:	mov    DWORD PTR [rax+0x4],ebx
   140011539:	mov    QWORD PTR [rax+0xc],rdi
   14001153d:	mov    ecx,0x2
   140011542:	cmp    DWORD PTR [rsp+0x58],edx
   140011546:	je     0x140011554
   140011548:	cmp    DWORD PTR [rsp+0x58],r8d
   14001154d:	mov    eax,edx
   14001154f:	setne  al
   140011552:	jmp    0x140011556
   140011554:	mov    eax,ecx
   140011556:	mov    DWORD PTR [rsi+0x14],eax
   140011559:	cmp    DWORD PTR [rsp+0x60],edx
   14001155d:	je     0x14001156b
   14001155f:	cmp    DWORD PTR [rsp+0x60],r8d
   140011564:	mov    eax,edx
   140011566:	setne  al
   140011569:	jmp    0x14001156d
   14001156b:	mov    eax,ecx
   14001156d:	mov    DWORD PTR [rsi+0x18],eax
   140011570:	cmp    DWORD PTR [rsp+0x68],edx
   140011574:	je     0x140011580
   140011576:	cmp    DWORD PTR [rsp+0x68],r8d
   14001157b:	setne  dl
   14001157e:	jmp    0x140011582
   140011580:	mov    edx,ecx
   140011582:	mov    r8,QWORD PTR [rsp+0x78]
   140011587:	mov    DWORD PTR [rsi+0x1c],edx
   14001158a:	lea    rcx,[rsi+0x20]
   14001158e:	mov    edx,0x208
   140011593:	call   0x140002d7c
   140011598:	mov    rdx,rsi
   14001159b:	mov    rcx,rbp
   14001159e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115a3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115a8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115ad:	add    rsp,0x20
   1400115b1:	pop    rdi
   1400115b2:	jmp    0x140010f08
   1400115b7:	int3   
   1400115b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400115bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400115c2:	push   rdi
   1400115c3:	sub    rsp,0x20
   1400115c7:	mov    ebx,r9d
   1400115ca:	mov    rdi,rdx
   1400115cd:	mov    rsi,rcx
   1400115d0:	call   0x140010d78
   1400115d5:	mov    r8d,DWORD PTR [rsp+0x50]
   1400115da:	mov    rcx,rsi
   1400115dd:	mov    DWORD PTR [rax+0x8],r8d
   1400115e1:	mov    r8d,DWORD PTR [rsp+0x60]
   1400115e6:	mov    rdx,rax
   1400115e9:	mov    DWORD PTR [rax+0xc],r8d
   1400115ed:	mov    r8d,DWORD PTR [rsp+0x58]
   1400115f2:	mov    DWORD PTR [rax],0x3
   1400115f8:	mov    DWORD PTR [rax+0x10],r8d
   1400115fc:	mov    r8,QWORD PTR [rsp+0x68]
   140011601:	mov    DWORD PTR [rax+0x4],ebx
   140011604:	mov    QWORD PTR [rax+0x14],r8
   140011608:	mov    QWORD PTR [rax+0x1c],rdi
   14001160c:	mov    rbx,QWORD PTR [rsp+0x30]
   140011611:	mov    rsi,QWORD PTR [rsp+0x38]
   140011616:	add    rsp,0x20
   14001161a:	pop    rdi
   14001161b:	jmp    0x140010f08
   140011620:	mov    QWORD PTR [rsp+0x8],rbx
   140011625:	mov    QWORD PTR [rsp+0x10],rsi
   14001162a:	push   rdi
   14001162b:	sub    rsp,0x20
   14001162f:	mov    ebx,r9d
   140011632:	mov    rdi,rdx
   140011635:	mov    rsi,rcx
   140011638:	call   0x140010d78
   14001163d:	mov    r8d,DWORD PTR [rsp+0x50]
   140011642:	mov    rcx,rsi
   140011645:	mov    DWORD PTR [rax+0x8],r8d
   140011649:	mov    r8d,DWORD PTR [rsp+0x60]
   14001164e:	mov    rdx,rax
   140011651:	mov    DWORD PTR [rax+0xc],r8d
   140011655:	mov    r8d,DWORD PTR [rsp+0x58]
   14001165a:	mov    DWORD PTR [rax],0x4
   140011660:	mov    DWORD PTR [rax+0x4],ebx
   140011663:	mov    QWORD PTR [rax+0x14],rdi
   140011667:	mov    DWORD PTR [rax+0x10],r8d
   14001166b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011670:	mov    rsi,QWORD PTR [rsp+0x38]
   140011675:	add    rsp,0x20
   140011679:	pop    rdi
   14001167a:	jmp    0x140010f08
   14001167f:	int3   
   140011680:	mov    rax,rsp
   140011683:	mov    QWORD PTR [rax+0x8],rbx
   140011687:	mov    QWORD PTR [rax+0x10],rbp
   14001168b:	mov    QWORD PTR [rax+0x18],rsi
   14001168f:	mov    QWORD PTR [rax+0x20],rdi
   140011693:	push   r14
   140011695:	sub    rsp,0x20
   140011699:	mov    edi,r9d
   14001169c:	mov    esi,r8d
   14001169f:	mov    ebx,edx
   1400116a1:	mov    rbp,rcx
   1400116a4:	call   0x140010d78
   1400116a9:	mov    edx,DWORD PTR [rsp+0x58]
   1400116ad:	mov    r8,QWORD PTR [rsp+0x60]
   1400116b2:	mov    DWORD PTR [rax+0x10],edx
   1400116b5:	mov    edx,DWORD PTR [rsp+0x50]
   1400116b9:	mov    DWORD PTR [rax+0x14],edx
   1400116bc:	lea    rcx,[rax+0x18]
   1400116c0:	mov    edx,0x200
   1400116c5:	mov    r14,rax
   1400116c8:	mov    DWORD PTR [rax],0x9
   1400116ce:	mov    DWORD PTR [rax+0x4],ebx
   1400116d1:	mov    DWORD PTR [rax+0x8],edi
   1400116d4:	mov    DWORD PTR [rax+0xc],esi
   1400116d7:	call   0x140002d7c
   1400116dc:	mov    rdx,r14
   1400116df:	mov    rcx,rbp
   1400116e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400116e7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400116ec:	mov    rsi,QWORD PTR [rsp+0x40]
   1400116f1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400116f6:	add    rsp,0x20
   1400116fa:	pop    r14
   1400116fc:	jmp    0x140010f08
   140011701:	int3   
   140011702:	int3   
   140011703:	int3   
   140011704:	mov    rax,rsp
   140011707:	mov    QWORD PTR [rax+0x8],rbx
   14001170b:	mov    QWORD PTR [rax+0x18],rbp
   14001170f:	mov    QWORD PTR [rax+0x20],rsi
   140011713:	mov    DWORD PTR [rax+0x10],edx
   140011716:	push   rdi
   140011717:	push   r12
   140011719:	push   r13
   14001171b:	push   r14
   14001171d:	push   r15
   14001171f:	sub    rsp,0x20
   140011723:	mov    rdi,r9
   140011726:	mov    r14,r8
   140011729:	mov    ebx,edx
   14001172b:	mov    rbp,rcx
   14001172e:	call   0x140010d78
   140011733:	lea    r10,[rdi-0x1]
   140011737:	mov    esi,0x7ffffffe
   14001173c:	mov    DWORD PTR [rax],0x5
   140011742:	mov    DWORD PTR [rax+0x4],0x2
   140011749:	mov    DWORD PTR [rax+0x10],ebx
   14001174c:	lea    r11,[rax+0x28]
   140011750:	cmp    r10,rsi
   140011753:	ja     0x14001178d
   140011755:	cmp    rdi,rsi
   140011758:	jbe    0x14001175e
   14001175a:	xor    ebx,ebx
   14001175c:	jmp    0x140011794
   14001175e:	mov    rcx,r14
   140011761:	sub    rcx,r11
   140011764:	xor    ebx,ebx
   140011766:	test   rdi,rdi
   140011769:	je     0x140011787
   14001176b:	movzx  edx,WORD PTR [rcx+r11*1]
   140011770:	test   dx,dx
   140011773:	je     0x140011782
   140011775:	mov    WORD PTR [r11],dx
   140011779:	add    r11,0x2
   14001177d:	dec    rdi
   140011780:	jne    0x140011766
   140011782:	test   rdi,rdi
   140011785:	jne    0x140011794
   140011787:	sub    r11,0x2
   14001178b:	jmp    0x140011794
   14001178d:	xor    ebx,ebx
   14001178f:	test   rdi,rdi
   140011792:	je     0x140011798
   140011794:	mov    WORD PTR [r11],bx
   140011798:	mov    ecx,DWORD PTR [rsp+0x88]
   14001179f:	mov    r15d,DWORD PTR [rsp+0x70]
   1400117a4:	mov    r12d,DWORD PTR [rsp+0x78]
   1400117a9:	mov    r13d,DWORD PTR [rsp+0x80]
   1400117b1:	mov    DWORD PTR [rax+0x1c],ecx
   1400117b4:	mov    rcx,QWORD PTR [rsp+0x90]
   1400117bc:	mov    QWORD PTR [rax+0x8],rcx
   1400117c0:	mov    rdx,rax
   1400117c3:	mov    rcx,rbp
   1400117c6:	mov    DWORD PTR [rax+0x14],r15d
   1400117ca:	mov    DWORD PTR [rax+0x18],r12d
   1400117ce:	mov    DWORD PTR [rax+0x20],r13d
   1400117d2:	mov    DWORD PTR [rax+0x24],ebx
   1400117d5:	call   0x140010f08
   1400117da:	mov    rax,QWORD PTR [rbp+0x8]
   1400117de:	cmp    DWORD PTR [rax+0x21b0],ebx
   1400117e4:	je     0x1400118fd
   1400117ea:	mov    rcx,rbp
   1400117ed:	call   0x140010d78
   1400117f2:	mov    r9d,0x5a
   1400117f8:	mov    rdi,rax
   1400117fb:	mov    DWORD PTR [rax],0x12
   140011801:	mov    DWORD PTR [rax+0x4],0x2
   140011808:	mov    eax,DWORD PTR [rsp+0x58]
   14001180c:	mov    DWORD PTR [rdi+0x14],r15d
   140011810:	mov    DWORD PTR [rdi+0x18],r12d
   140011814:	mov    DWORD PTR [rdi+0x10],eax
   140011817:	mov    eax,DWORD PTR [rsp+0x88]
   14001181e:	mov    DWORD PTR [rdi+0x20],r13d
   140011822:	mov    DWORD PTR [rdi+0x1c],eax
   140011825:	mov    rax,QWORD PTR [rsp+0x90]
   14001182d:	lea    r15,[rdi+0x28]
   140011831:	mov    QWORD PTR [rdi+0x8],rax
   140011835:	mov    rcx,QWORD PTR [rbp+0x8]
   140011839:	lea    rdx,[rdi+0x2c]
   14001183d:	mov    r8,r15
   140011840:	call   0x14000c98c
   140011845:	mov    eax,DWORD PTR [r15]
   140011848:	mov    ecx,0x2d4
   14001184d:	shl    rax,0x3
   140011851:	sub    rcx,rax
   140011854:	shr    rcx,1
   140011857:	lea    r10,[rax+0x2c]
   14001185b:	lea    rax,[rcx-0x1]
   14001185f:	add    r10,rdi
   140011862:	cmp    rax,rsi
   140011865:	ja     0x1400118c8
   140011867:	sub    rsi,rcx
   14001186a:	mov    rdx,r10
   14001186d:	mov    r9d,ebx
   140011870:	sub    r14,r10
   140011873:	mov    r8,rbx
   140011876:	lea    rax,[rsi+rcx*1]
   14001187a:	test   rax,rax
   14001187d:	je     0x140011898
   14001187f:	movzx  eax,WORD PTR [r14+rdx*1]
   140011884:	test   ax,ax
   140011887:	je     0x140011898
   140011889:	mov    WORD PTR [rdx],ax
   14001188c:	inc    r8
   14001188f:	add    rdx,0x2
   140011893:	dec    rcx
   140011896:	jne    0x140011876
   140011898:	mov    r11d,0x8007007a
   14001189e:	test   rcx,rcx
   1400118a1:	jne    0x1400118ad
   1400118a3:	sub    rdx,0x2
   1400118a7:	mov    r9d,r11d
   1400118aa:	dec    r8
   1400118ad:	mov    WORD PTR [rdx],bx
   1400118b0:	mov    edx,0x80000000
   1400118b5:	lea    rcx,[r10+r8*2]
   1400118b9:	lea    eax,[r9+rdx*1]
   1400118bd:	test   edx,eax
   1400118bf:	jne    0x1400118d9
   1400118c1:	cmp    r9d,r11d
   1400118c4:	jne    0x1400118d1
   1400118c6:	jmp    0x1400118d9
   1400118c8:	test   rcx,rcx
   1400118cb:	je     0x1400118d1
   1400118cd:	mov    WORD PTR [r10],bx
   1400118d1:	mov    rcx,QWORD PTR [rsp+0x90]
   1400118d9:	mov    eax,DWORD PTR [r15]
   1400118dc:	mov    rdx,rdi
   1400118df:	shl    rax,0x3
   1400118e3:	sub    rcx,rax
   1400118e6:	sub    rcx,rdi
   1400118e9:	sub    rcx,0x2c
   1400118ed:	sar    rcx,1
   1400118f0:	inc    ecx
   1400118f2:	mov    DWORD PTR [rdi+0x24],ecx
   1400118f5:	mov    rcx,rbp
   1400118f8:	call   0x140010f08
   1400118fd:	mov    rbx,QWORD PTR [rsp+0x50]
   140011902:	mov    rbp,QWORD PTR [rsp+0x60]
   140011907:	mov    rsi,QWORD PTR [rsp+0x68]
   14001190c:	add    rsp,0x20
   140011910:	pop    r15
   140011912:	pop    r14
   140011914:	pop    r13
   140011916:	pop    r12
   140011918:	pop    rdi
   140011919:	ret    
   14001191a:	int3   
   14001191b:	int3   
   14001191c:	rex push rbx
   14001191e:	sub    rsp,0x140
   140011925:	mov    rax,QWORD PTR [rip+0x3bb1c]        # 0x14004d448
   14001192c:	xor    rax,rsp
   14001192f:	mov    QWORD PTR [rsp+0x130],rax
   140011937:	xor    ebx,ebx
   140011939:	or     rax,0xffffffffffffffff
   14001193d:	inc    rax
   140011940:	cmp    WORD PTR [rcx+rax*2],bx
   140011944:	jne    0x14001193d
   140011946:	test   rax,rax
   140011949:	je     0x14001195c
   14001194b:	lea    rdx,[rsp+0x20]
   140011950:	call   0x140016498
   140011955:	test   eax,eax
   140011957:	cmovne ebx,DWORD PTR [rsp+0x28]
   14001195c:	mov    eax,ebx
   14001195e:	mov    rcx,QWORD PTR [rsp+0x130]
   140011966:	xor    rcx,rsp
   140011969:	call   0x140020e50
   14001196e:	add    rsp,0x140
   140011975:	pop    rbx
   140011976:	ret    
   140011977:	int3   
   140011978:	rex push rbp
   14001197a:	push   rbx
   14001197b:	push   rdi
   14001197c:	lea    rbp,[rsp-0x230]
   140011984:	sub    rsp,0x330
   14001198b:	mov    rax,QWORD PTR [rip+0x3bab6]        # 0x14004d448
   140011992:	xor    rax,rsp
   140011995:	mov    QWORD PTR [rbp+0x220],rax
   14001199c:	mov    rax,QWORD PTR [rbp+0x280]
   1400119a3:	mov    rbx,QWORD PTR [rbp+0x278]
   1400119aa:	mov    rdi,rcx
   1400119ad:	mov    QWORD PTR [rsp+0x24],rax
   1400119b2:	mov    eax,DWORD PTR [rbp+0x270]
   1400119b8:	mov    rcx,rbx
   1400119bb:	mov    DWORD PTR [rsp+0x20],0x7
   1400119c3:	mov    DWORD PTR [rsp+0x2c],edx
   1400119c7:	mov    DWORD PTR [rsp+0x30],r8d
   1400119cc:	mov    DWORD PTR [rsp+0x3c],eax
   1400119d0:	mov    QWORD PTR [rsp+0x34],r9
   1400119d5:	call   0x14001191c
   1400119da:	lea    rcx,[rsp+0x44]
   1400119df:	mov    r8,rbx
   1400119e2:	mov    edx,0x208
   1400119e7:	mov    DWORD PTR [rsp+0x40],eax
   1400119eb:	call   0x140002d7c
   1400119f0:	mov    eax,DWORD PTR [rbp+0x2a0]
   1400119f6:	mov    DWORD PTR [rbp+0x158],eax
   1400119fc:	mov    eax,DWORD PTR [rbp+0x290]
   140011a02:	lea    rdx,[rsp+0x20]
   140011a07:	mov    DWORD PTR [rbp+0x14c],eax
   140011a0d:	mov    rax,QWORD PTR [rbp+0x298]
   140011a14:	xor    r8d,r8d
   140011a17:	mov    rcx,rdi
   140011a1a:	mov    QWORD PTR [rbp+0x150],rax
   140011a21:	call   0x140011cec
   140011a26:	mov    rcx,QWORD PTR [rbp+0x220]
   140011a2d:	xor    rcx,rsp
   140011a30:	call   0x140020e50
   140011a35:	add    rsp,0x330
   140011a3c:	pop    rdi
   140011a3d:	pop    rbx
   140011a3e:	pop    rbp
   140011a3f:	ret    
   140011a40:	rex push rbp
   140011a42:	push   rbx
   140011a43:	push   rdi
   140011a44:	lea    rbp,[rsp-0x230]
   140011a4c:	sub    rsp,0x330
   140011a53:	mov    rax,QWORD PTR [rip+0x3b9ee]        # 0x14004d448
   140011a5a:	xor    rax,rsp
   140011a5d:	mov    QWORD PTR [rbp+0x220],rax
   140011a64:	mov    rax,QWORD PTR [rbp+0x280]
   140011a6b:	mov    rbx,QWORD PTR [rbp+0x278]
   140011a72:	mov    rdi,rcx
   140011a75:	mov    QWORD PTR [rsp+0x24],rax
   140011a7a:	mov    eax,DWORD PTR [rbp+0x270]
   140011a80:	mov    rcx,rbx
   140011a83:	mov    DWORD PTR [rsp+0x20],0x8
   140011a8b:	mov    DWORD PTR [rsp+0x2c],edx
   140011a8f:	mov    DWORD PTR [rsp+0x30],r8d
   140011a94:	mov    DWORD PTR [rsp+0x3c],eax
   140011a98:	mov    QWORD PTR [rsp+0x34],r9
   140011a9d:	call   0x14001191c
   140011aa2:	lea    rcx,[rsp+0x44]
   140011aa7:	mov    r8,rbx
   140011aaa:	mov    edx,0x208
   140011aaf:	mov    DWORD PTR [rsp+0x40],eax
   140011ab3:	call   0x140002d7c
   140011ab8:	mov    eax,DWORD PTR [rbp+0x2a0]
   140011abe:	mov    DWORD PTR [rbp+0x158],eax
   140011ac4:	mov    eax,DWORD PTR [rbp+0x290]
   140011aca:	lea    rdx,[rsp+0x20]
   140011acf:	mov    DWORD PTR [rbp+0x14c],eax
   140011ad5:	mov    rax,QWORD PTR [rbp+0x298]
   140011adc:	xor    r8d,r8d
   140011adf:	mov    rcx,rdi
   140011ae2:	mov    QWORD PTR [rbp+0x150],rax
   140011ae9:	call   0x140011cec
   140011aee:	mov    rcx,QWORD PTR [rbp+0x220]
   140011af5:	xor    rcx,rsp
   140011af8:	call   0x140020e50
   140011afd:	add    rsp,0x330
   140011b04:	pop    rdi
   140011b05:	pop    rbx
   140011b06:	pop    rbp
   140011b07:	ret    
   140011b08:	rex push rbx
   140011b0a:	push   rbp
   140011b0b:	push   rsi
   140011b0c:	push   rdi
   140011b0d:	sub    rsp,0x338
   140011b14:	mov    rax,QWORD PTR [rip+0x3b92d]        # 0x14004d448
   140011b1b:	xor    rax,rsp
   140011b1e:	mov    QWORD PTR [rsp+0x320],rax
   140011b26:	mov    rbx,QWORD PTR [rsp+0x388]
   140011b2e:	mov    rsi,rcx
   140011b31:	mov    rcx,QWORD PTR [rsp+0x380]
   140011b39:	mov    QWORD PTR [rsp+0x24],rdx
   140011b3e:	lea    rdx,[rsp+0x38]
   140011b43:	mov    rax,rcx
   140011b46:	mov    edi,0x2
   140011b4b:	or     rax,rdx
   140011b4e:	mov    QWORD PTR [rsp+0x30],r9
   140011b53:	mov    DWORD PTR [rsp+0x20],0xa
   140011b5b:	mov    DWORD PTR [rsp+0x2c],r8d
   140011b60:	lea    r9,[rsp+0x38]
   140011b65:	lea    ebp,[rdi+0x7e]
   140011b68:	and    eax,0xf
   140011b6b:	jne    0x140011bba
   140011b6d:	mov    eax,edi
   140011b6f:	movaps xmm0,XMMWORD PTR [rcx]
   140011b72:	movaps xmm1,XMMWORD PTR [rcx+0x10]
   140011b76:	movaps XMMWORD PTR [rdx],xmm0
   140011b79:	movaps xmm0,XMMWORD PTR [rcx+0x20]
   140011b7d:	movaps XMMWORD PTR [rdx+0x10],xmm1
   140011b81:	movaps xmm1,XMMWORD PTR [rcx+0x30]
   140011b85:	movaps XMMWORD PTR [rdx+0x20],xmm0
   140011b89:	movaps xmm0,XMMWORD PTR [rcx+0x40]
   140011b8d:	movaps XMMWORD PTR [rdx+0x30],xmm1
   140011b91:	movaps xmm1,XMMWORD PTR [rcx+0x50]
   140011b95:	movaps XMMWORD PTR [rdx+0x40],xmm0
   140011b99:	movaps xmm0,XMMWORD PTR [rcx+0x60]
   140011b9d:	movaps XMMWORD PTR [rdx+0x50],xmm1
   140011ba1:	movaps xmm1,XMMWORD PTR [rcx+0x70]
   140011ba5:	add    rcx,rbp
   140011ba8:	movaps XMMWORD PTR [rdx+0x60],xmm0
   140011bac:	add    rdx,rbp
   140011baf:	movaps XMMWORD PTR [rdx-0x10],xmm1
   140011bb3:	dec    rax
   140011bb6:	jne    0x140011b6f
   140011bb8:	jmp    0x140011bcb
   140011bba:	mov    rdx,rcx
   140011bbd:	mov    r8d,0x100
   140011bc3:	mov    rcx,r9
   140011bc6:	call   0x140020e80
   140011bcb:	lea    rcx,[rsp+0x138]
   140011bd3:	mov    rax,rbx
   140011bd6:	lea    r9,[rsp+0x138]
   140011bde:	or     rax,rcx
   140011be1:	and    eax,0xf
   140011be4:	jne    0x140011c31
   140011be6:	movaps xmm0,XMMWORD PTR [rbx]
   140011be9:	movaps xmm1,XMMWORD PTR [rbx+0x10]
   140011bed:	movaps XMMWORD PTR [rcx],xmm0
   140011bf0:	movaps xmm0,XMMWORD PTR [rbx+0x20]
   140011bf4:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140011bf8:	movaps xmm1,XMMWORD PTR [rbx+0x30]
   140011bfc:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140011c00:	movaps xmm0,XMMWORD PTR [rbx+0x40]
   140011c04:	movaps XMMWORD PTR [rcx+0x30],xmm1
   140011c08:	movaps xmm1,XMMWORD PTR [rbx+0x50]
   140011c0c:	movaps XMMWORD PTR [rcx+0x40],xmm0
   140011c10:	movaps xmm0,XMMWORD PTR [rbx+0x60]
   140011c14:	movaps XMMWORD PTR [rcx+0x50],xmm1
   140011c18:	movaps xmm1,XMMWORD PTR [rbx+0x70]
   140011c1c:	add    rbx,rbp
   140011c1f:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140011c23:	add    rcx,rbp
   140011c26:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140011c2a:	dec    rdi
   140011c2d:	jne    0x140011be6
   140011c2f:	jmp    0x140011c42
   140011c31:	mov    r8d,0x100
   140011c37:	mov    rdx,rbx
   140011c3a:	mov    rcx,r9
   140011c3d:	call   0x140020e80
   140011c42:	lea    rdx,[rsp+0x20]
   140011c47:	xor    r8d,r8d
   140011c4a:	mov    rcx,rsi
   140011c4d:	call   0x140011cec
   140011c52:	mov    rcx,QWORD PTR [rsp+0x320]
   140011c5a:	xor    rcx,rsp
   140011c5d:	call   0x140020e50
   140011c62:	add    rsp,0x338
   140011c69:	pop    rdi
   140011c6a:	pop    rsi
   140011c6b:	pop    rbp
   140011c6c:	pop    rbx
   140011c6d:	ret    
   140011c6e:	int3   
   140011c6f:	int3   
   140011c70:	mov    QWORD PTR [rsp+0x8],rbx
   140011c75:	mov    QWORD PTR [rsp+0x10],rbp
   140011c7a:	mov    QWORD PTR [rsp+0x18],rsi
   140011c7f:	push   rdi
   140011c80:	sub    rsp,0x20
   140011c84:	mov    ebx,DWORD PTR [rip+0x3ca12]        # 0x14004e69c
   140011c8a:	mov    esi,r9d
   140011c8d:	mov    edi,r8d
   140011c90:	mov    rbp,rcx
   140011c93:	call   0x140010d78
   140011c98:	mov    rcx,QWORD PTR [rsp+0x68]
   140011c9d:	mov    edx,DWORD PTR [rsp+0x50]
   140011ca1:	and    DWORD PTR [rax+0x10],0x0
   140011ca5:	mov    QWORD PTR [rax+0x24],rcx
   140011ca9:	mov    ecx,DWORD PTR [rsp+0x70]
   140011cad:	mov    DWORD PTR [rax+0xc],edx
   140011cb0:	mov    rdx,QWORD PTR [rsp+0x60]
   140011cb5:	mov    QWORD PTR [rax+0x1c],rdx
   140011cb9:	mov    DWORD PTR [rax+0x18],ecx
   140011cbc:	mov    rdx,rax
   140011cbf:	mov    rcx,rbp
   140011cc2:	mov    DWORD PTR [rax],0xb
   140011cc8:	mov    DWORD PTR [rax+0x4],ebx
   140011ccb:	mov    DWORD PTR [rax+0x14],edi
   140011cce:	mov    DWORD PTR [rax+0x8],esi
   140011cd1:	mov    rbx,QWORD PTR [rsp+0x30]
   140011cd6:	mov    rbp,QWORD PTR [rsp+0x38]
   140011cdb:	mov    rsi,QWORD PTR [rsp+0x40]
   140011ce0:	add    rsp,0x20
   140011ce4:	pop    rdi
   140011ce5:	jmp    0x140010f08
   140011cea:	int3   
   140011ceb:	int3   
   140011cec:	mov    rax,rsp
   140011cef:	mov    QWORD PTR [rax+0x8],rbx
   140011cf3:	mov    QWORD PTR [rax+0x10],rbp
   140011cf7:	mov    QWORD PTR [rax+0x18],rsi
   140011cfb:	mov    QWORD PTR [rax+0x20],rdi
   140011cff:	push   r14
   140011d01:	sub    rsp,0x20
   140011d05:	movsxd rbx,r8d
   140011d08:	mov    r14,rdx
   140011d0b:	mov    rdi,rcx
   140011d0e:	cmp    QWORD PTR [rcx+rbx*8+0x18],0x0
   140011d14:	je     0x140011da0
   140011d1a:	mov    rcx,rdx
   140011d1d:	call   0x140010c58
   140011d22:	mov    ebp,eax
   140011d24:	cmp    DWORD PTR [rdi+rbx*4],eax
   140011d27:	jae    0x140011d7f
   140011d29:	mov    rcx,QWORD PTR [rdi+rbx*8+0x18]
   140011d2e:	and    DWORD PTR [rcx+0x18],0x0
   140011d32:	mov    rdx,QWORD PTR [rdi+rbx*8+0x18]
   140011d37:	mov    rcx,QWORD PTR [rdi+0x10]
   140011d3b:	call   0x14001ef98
   140011d40:	mov    rcx,QWORD PTR [rdi+0x10]
   140011d44:	mov    edx,0x1
   140011d49:	call   0x14001eef4
   140011d4e:	mov    QWORD PTR [rdi+rbx*8+0x18],rax
   140011d53:	test   rax,rax
   140011d56:	jne    0x140011d75
   140011d58:	mov    rcx,QWORD PTR [rdi+0x8]
   140011d5c:	add    rcx,0xb20
   140011d63:	mov    rax,QWORD PTR [rcx]
   140011d66:	call   QWORD PTR [rax+0x8]
   140011d69:	mov    DWORD PTR [rax+0x18],0x1
   140011d70:	jmp    0x140011df5
   140011d75:	mov    edx,ebx
   140011d77:	mov    rcx,rdi
   140011d7a:	call   0x140011474
   140011d7f:	mov    rcx,QWORD PTR [rdi+rbx*8+0x28]
   140011d84:	mov    r8,rbp
   140011d87:	mov    rdx,r14
   140011d8a:	call   0x140020e80
   140011d8f:	add    QWORD PTR [rdi+rbx*8+0x28],rbp
   140011d94:	sub    DWORD PTR [rdi+rbx*4],ebp
   140011d97:	mov    rax,QWORD PTR [rdi+rbx*8+0x38]
   140011d9c:	inc    DWORD PTR [rax]
   140011d9e:	jmp    0x140011df5
   140011da0:	mov    ecx,DWORD PTR [rdx]
   140011da2:	lea    eax,[rcx-0x1]
   140011da5:	test   eax,0xfffffffd
   140011daa:	je     0x140011dce
   140011dac:	cmp    ecx,0x5
   140011daf:	je     0x140011e62
   140011db5:	cmp    ecx,0x6
   140011db8:	jle    0x140011df5
   140011dba:	cmp    ecx,0x8
   140011dbd:	jle    0x140011e39
   140011dbf:	cmp    ecx,0x9
   140011dc2:	je     0x140011e10
   140011dc4:	cmp    ecx,0xa
   140011dc7:	je     0x140011e39
   140011dc9:	cmp    ecx,0xd
   140011dcc:	jne    0x140011df5
   140011dce:	cmp    DWORD PTR [rip+0x3ff23],0x0        # 0x140051cf8
   140011dd5:	jne    0x140011df5
   140011dd7:	mov    rcx,QWORD PTR [rdi+0x8]
   140011ddb:	xor    r9d,r9d
   140011dde:	xor    r8d,r8d
   140011de1:	mov    rax,QWORD PTR [rcx]
   140011de4:	mov    edx,0xe1230566
   140011de9:	call   QWORD PTR [rax]
   140011deb:	mov    DWORD PTR [rip+0x3ff03],0x1        # 0x140051cf8
   140011df5:	mov    rbx,QWORD PTR [rsp+0x30]
   140011dfa:	mov    rbp,QWORD PTR [rsp+0x38]
   140011dff:	mov    rsi,QWORD PTR [rsp+0x40]
   140011e04:	mov    rdi,QWORD PTR [rsp+0x48]
   140011e09:	add    rsp,0x20
   140011e0d:	pop    r14
   140011e0f:	ret    
   140011e10:	cmp    DWORD PTR [rip+0x3fed5],0x0        # 0x140051cec
   140011e17:	jne    0x140011df5
   140011e19:	mov    rcx,QWORD PTR [rdi+0x8]
   140011e1d:	xor    r9d,r9d
   140011e20:	xor    r8d,r8d
   140011e23:	mov    rax,QWORD PTR [rcx]
   140011e26:	mov    edx,0xe1230569
   140011e2b:	call   QWORD PTR [rax]
   140011e2d:	mov    DWORD PTR [rip+0x3feb5],0x1        # 0x140051cec
   140011e37:	jmp    0x140011df5
   140011e39:	cmp    DWORD PTR [rip+0x3feb0],0x0        # 0x140051cf0
   140011e40:	jne    0x140011df5
   140011e42:	mov    rcx,QWORD PTR [rdi+0x8]
   140011e46:	xor    r9d,r9d
   140011e49:	xor    r8d,r8d
   140011e4c:	mov    rax,QWORD PTR [rcx]
   140011e4f:	mov    edx,0xe1230568
   140011e54:	call   QWORD PTR [rax]
   140011e56:	mov    DWORD PTR [rip+0x3fe90],0x1        # 0x140051cf0
   140011e60:	jmp    0x140011df5
   140011e62:	cmp    DWORD PTR [rip+0x3fe8b],0x0        # 0x140051cf4
   140011e69:	jne    0x140011df5
   140011e6b:	mov    rcx,QWORD PTR [rdi+0x8]
   140011e6f:	xor    r9d,r9d
   140011e72:	xor    r8d,r8d
   140011e75:	mov    rax,QWORD PTR [rcx]
   140011e78:	mov    edx,0xe1230567
   140011e7d:	call   QWORD PTR [rax]
   140011e7f:	mov    DWORD PTR [rip+0x3fe6b],0x1        # 0x140051cf4
   140011e89:	jmp    0x140011df5
   140011e8e:	int3   
   140011e8f:	int3   
   140011e90:	mov    rax,rsp
   140011e93:	mov    QWORD PTR [rax+0x10],rbx
   140011e97:	mov    QWORD PTR [rax+0x18],rsi
   140011e9b:	mov    QWORD PTR [rax+0x20],rdi
   140011e9f:	push   rbp
   140011ea0:	push   r12
   140011ea2:	push   r13
   140011ea4:	push   r14
   140011ea6:	push   r15
   140011ea8:	lea    rbp,[rax-0x6f8]
   140011eaf:	sub    rsp,0x7d0
   140011eb6:	movaps XMMWORD PTR [rax-0x38],xmm6
   140011eba:	mov    rax,QWORD PTR [rip+0x3b587]        # 0x14004d448
   140011ec1:	xor    rax,rsp
   140011ec4:	mov    QWORD PTR [rbp+0x6b0],rax
   140011ecb:	mov    r12,rcx
   140011ece:	mov    QWORD PTR [rsp+0x70],rcx
   140011ed3:	mov    rbx,QWORD PTR [r12+0x8]
   140011ed8:	lea    rcx,[rbx+0x978]
   140011edf:	mov    rax,QWORD PTR [rcx]
   140011ee2:	call   QWORD PTR [rax+0x8]
   140011ee5:	mov    rcx,QWORD PTR [rbx+0xb00]
   140011eec:	mov    rdx,rax
   140011eef:	call   0x14001fdf8
   140011ef4:	test   rax,rax
   140011ef7:	je     0x140012630
   140011efd:	mov    eax,DWORD PTR [rax+0x8]
   140011f00:	mov    rcx,QWORD PTR [r12+0x8]
   140011f05:	add    rcx,0x978
   140011f0c:	mov    DWORD PTR [rsp+0x60],eax
   140011f10:	mov    rax,QWORD PTR [rcx]
   140011f13:	call   QWORD PTR [rax+0x8]
   140011f16:	mov    r13,rax
   140011f19:	mov    eax,DWORD PTR [rsp+0x60]
   140011f1d:	imul   rax,rax,0x258
   140011f24:	add    r13,rax
   140011f27:	mov    QWORD PTR [rsp+0x68],r13
   140011f2c:	mov    ecx,DWORD PTR [r13+0x10]
   140011f30:	cmp    ecx,0x8
   140011f33:	jg     0x140012378
   140011f39:	je     0x140012351
   140011f3f:	dec    ecx
   140011f41:	je     0x1400122f5
   140011f47:	dec    ecx
   140011f49:	je     0x14001227f
   140011f4f:	dec    ecx
   140011f51:	je     0x140012209
   140011f57:	dec    ecx
   140011f59:	je     0x14001210c
   140011f5f:	dec    ecx
   140011f61:	je     0x1400120b9
   140011f67:	dec    ecx
   140011f69:	je     0x1400120a8
   140011f6f:	dec    ecx
   140011f71:	jne    0x140012616
   140011f77:	lea    rdx,[r13+0x38]
   140011f7b:	lea    rcx,[rbp-0x60]
   140011f7f:	lea    r9,[rbp-0x60]
   140011f83:	mov    rax,rdx
   140011f86:	or     rax,rcx
   140011f89:	and    eax,0xf
   140011f8c:	jne    0x140011fe6
   140011f8e:	mov    eax,0x2
   140011f93:	movaps xmm0,XMMWORD PTR [rdx]
   140011f96:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   140011f9a:	lea    rdx,[rdx+0x80]
   140011fa1:	movaps XMMWORD PTR [rcx],xmm0
   140011fa4:	movaps xmm0,XMMWORD PTR [rdx-0x60]
   140011fa8:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140011fac:	lea    rcx,[rcx+0x80]
   140011fb3:	movaps xmm1,XMMWORD PTR [rdx-0x50]
   140011fb7:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140011fbb:	movaps xmm0,XMMWORD PTR [rdx-0x40]
   140011fbf:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140011fc3:	movaps xmm1,XMMWORD PTR [rdx-0x30]
   140011fc7:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140011fcb:	movaps xmm0,XMMWORD PTR [rdx-0x20]
   140011fcf:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140011fd3:	movaps xmm1,XMMWORD PTR [rdx-0x10]
   140011fd7:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140011fdb:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140011fdf:	dec    rax
   140011fe2:	jne    0x140011f93
   140011fe4:	jmp    0x140011ff4
   140011fe6:	mov    r8d,0x100
   140011fec:	mov    rcx,r9
   140011fef:	call   0x140020e80
   140011ff4:	lea    rdx,[r13+0x138]
   140011ffb:	lea    rcx,[rbp+0xa0]
   140012002:	lea    r9,[rbp+0xa0]
   140012009:	mov    rax,rdx
   14001200c:	or     rax,rcx
   14001200f:	and    eax,0xf
   140012012:	jne    0x14001206c
   140012014:	mov    eax,0x2
   140012019:	movaps xmm0,XMMWORD PTR [rdx]
   14001201c:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   140012020:	lea    rdx,[rdx+0x80]
   140012027:	movaps XMMWORD PTR [rcx],xmm0
   14001202a:	movaps xmm0,XMMWORD PTR [rdx-0x60]
   14001202e:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140012032:	lea    rcx,[rcx+0x80]
   140012039:	movaps xmm1,XMMWORD PTR [rdx-0x50]
   14001203d:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140012041:	movaps xmm0,XMMWORD PTR [rdx-0x40]
   140012045:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140012049:	movaps xmm1,XMMWORD PTR [rdx-0x30]
   14001204d:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140012051:	movaps xmm0,XMMWORD PTR [rdx-0x20]
   140012055:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140012059:	movaps xmm1,XMMWORD PTR [rdx-0x10]
   14001205d:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140012061:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140012065:	dec    rax
   140012068:	jne    0x140012019
   14001206a:	jmp    0x14001207a
   14001206c:	mov    r8d,0x100
   140012072:	mov    rcx,r9
   140012075:	call   0x140020e80
   14001207a:	mov    r9,QWORD PTR [r13+0x28]
   14001207e:	mov    r8d,DWORD PTR [r13+0x1c]
   140012082:	mov    rdx,QWORD PTR [r13+0x30]
   140012086:	lea    rax,[rbp+0xa0]
   14001208d:	mov    rcx,r12
   140012090:	mov    QWORD PTR [rsp+0x28],rax
   140012095:	lea    rax,[rbp-0x60]
   140012099:	mov    QWORD PTR [rsp+0x20],rax
   14001209e:	call   0x140011b08
   1400120a3:	jmp    0x140012616
   1400120a8:	mov    rax,QWORD PTR [r12+0x8]
   1400120ad:	and    DWORD PTR [rax+0x1560],0x0
   1400120b4:	jmp    0x140012616
   1400120b9:	mov    r15d,DWORD PTR [r13+0x24]
   1400120bd:	mov    r14d,DWORD PTR [r13+0x28]
   1400120c1:	mov    esi,DWORD PTR [r13+0x2c]
   1400120c5:	mov    edi,DWORD PTR [r13+0x30]
   1400120c9:	mov    ebx,DWORD PTR [r13+0x34]
   1400120cd:	lea    r8,[r13+0x38]
   1400120d1:	lea    rcx,[rbp+0x4a0]
   1400120d8:	mov    edx,0x200
   1400120dd:	call   0x140002d7c
   1400120e2:	lea    rax,[rbp+0x4a0]
   1400120e9:	mov    r9d,esi
   1400120ec:	mov    QWORD PTR [rsp+0x30],rax
   1400120f1:	mov    r8d,r14d
   1400120f4:	mov    edx,r15d
   1400120f7:	mov    rcx,r12
   1400120fa:	mov    DWORD PTR [rsp+0x28],ebx
   1400120fe:	mov    DWORD PTR [rsp+0x20],edi
   140012102:	call   0x140011680
   140012107:	jmp    0x140012616
   14001210c:	mov    r12d,DWORD PTR [r13+0x4c]
   140012110:	mov    r8d,DWORD PTR [r13+0x28]
   140012114:	mov    r9d,DWORD PTR [r13+0x2c]
   140012118:	mov    r10d,DWORD PTR [r13+0x30]
   14001211c:	mov    r11d,DWORD PTR [r13+0x34]
   140012120:	mov    ebx,DWORD PTR [r13+0x38]
   140012124:	mov    edi,DWORD PTR [r13+0x3c]
   140012128:	mov    esi,DWORD PTR [r13+0x40]
   14001212c:	mov    r14d,DWORD PTR [r13+0x44]
   140012130:	mov    r15d,DWORD PTR [r13+0x48]
   140012134:	mov    r13d,DWORD PTR [r13+0x50]
   140012138:	mov    rcx,QWORD PTR [rsp+0x68]
   14001213d:	mov    eax,DWORD PTR [rcx+0x54]
   140012140:	mov    edx,DWORD PTR [rcx+0x24]
   140012143:	shl    rdx,0x6
   140012147:	mov    DWORD PTR [rsp+0x7c],eax
   14001214b:	mov    eax,DWORD PTR [rcx+0x58]
   14001214e:	mov    DWORD PTR [rbp-0x7c],eax
   140012151:	mov    eax,DWORD PTR [rcx+0x5c]
   140012154:	mov    DWORD PTR [rbp-0x80],eax
   140012157:	mov    eax,DWORD PTR [rcx+0x60]
   14001215a:	mov    DWORD PTR [rsp+0x78],eax
   14001215e:	mov    eax,DWORD PTR [rcx+0x64]
   140012161:	mov    DWORD PTR [rsp+0x68],eax
   140012165:	mov    rax,QWORD PTR [rsp+0x70]
   14001216a:	mov    rax,QWORD PTR [rax+0x8]
   14001216e:	mov    rcx,QWORD PTR [rax+0xca8]
   140012175:	mov    eax,DWORD PTR [rsp+0x7c]
   140012179:	mov    DWORD PTR [rdx+rcx*1+0x710],r8d
   140012181:	mov    DWORD PTR [rdx+rcx*1+0x714],r9d
   140012189:	mov    DWORD PTR [rdx+rcx*1+0x718],r10d
   140012191:	mov    DWORD PTR [rdx+rcx*1+0x71c],r11d
   140012199:	mov    DWORD PTR [rdx+rcx*1+0x720],ebx
   1400121a0:	mov    DWORD PTR [rdx+rcx*1+0x724],edi
   1400121a7:	mov    DWORD PTR [rdx+rcx*1+0x728],esi
   1400121ae:	mov    DWORD PTR [rdx+rcx*1+0x72c],r14d
   1400121b6:	mov    DWORD PTR [rdx+rcx*1+0x730],r15d
   1400121be:	mov    DWORD PTR [rdx+rcx*1+0x734],r12d
   1400121c6:	mov    r12,QWORD PTR [rsp+0x70]
   1400121cb:	mov    DWORD PTR [rdx+rcx*1+0x738],r13d
   1400121d3:	mov    DWORD PTR [rdx+rcx*1+0x73c],eax
   1400121da:	mov    eax,DWORD PTR [rbp-0x7c]
   1400121dd:	mov    DWORD PTR [rdx+rcx*1+0x740],eax
   1400121e4:	mov    eax,DWORD PTR [rbp-0x80]
   1400121e7:	mov    DWORD PTR [rdx+rcx*1+0x744],eax
   1400121ee:	mov    eax,DWORD PTR [rsp+0x78]
   1400121f2:	mov    DWORD PTR [rdx+rcx*1+0x748],eax
   1400121f9:	mov    eax,DWORD PTR [rsp+0x68]
   1400121fd:	mov    DWORD PTR [rdx+rcx*1+0x74c],eax
   140012204:	jmp    0x140012616
   140012209:	mov    r15d,DWORD PTR [r13+0x1c]
   14001220d:	mov    r14d,DWORD PTR [r13+0x20]
   140012211:	mov    rsi,QWORD PTR [r13+0x28]
   140012215:	mov    edi,DWORD PTR [r13+0x38]
   140012219:	mov    rbx,QWORD PTR [r13+0x30]
   14001221d:	lea    r8,[r13+0x3c]
   140012221:	lea    rcx,[rbp+0x4a0]
   140012228:	mov    edx,0x208
   14001222d:	call   0x140002d7c
   140012232:	mov    eax,DWORD PTR [r13+0x250]
   140012239:	mov    r9,rsi
   14001223c:	mov    DWORD PTR [rsp+0x50],eax
   140012240:	mov    rax,QWORD PTR [r13+0x248]
   140012247:	mov    r8d,r14d
   14001224a:	mov    QWORD PTR [rsp+0x48],rax
   14001224f:	mov    eax,DWORD PTR [r13+0x244]
   140012256:	mov    edx,r15d
   140012259:	mov    DWORD PTR [rsp+0x40],eax
   14001225d:	lea    rax,[rbp+0x4a0]
   140012264:	mov    QWORD PTR [rsp+0x30],rbx
   140012269:	mov    QWORD PTR [rsp+0x28],rax
   14001226e:	mov    rcx,r12
   140012271:	mov    DWORD PTR [rsp+0x20],edi
   140012275:	call   0x140011a40
   14001227a:	jmp    0x140012616
   14001227f:	mov    r15d,DWORD PTR [r13+0x1c]
   140012283:	mov    r14d,DWORD PTR [r13+0x20]
   140012287:	mov    rsi,QWORD PTR [r13+0x28]
   14001228b:	mov    edi,DWORD PTR [r13+0x38]
   14001228f:	mov    rbx,QWORD PTR [r13+0x30]
   140012293:	lea    r8,[r13+0x3c]
   140012297:	lea    rcx,[rbp+0x4a0]
   14001229e:	mov    edx,0x208
   1400122a3:	call   0x140002d7c
   1400122a8:	mov    eax,DWORD PTR [r13+0x250]
   1400122af:	mov    r9,rsi
   1400122b2:	mov    DWORD PTR [rsp+0x50],eax
   1400122b6:	mov    rax,QWORD PTR [r13+0x248]
   1400122bd:	mov    r8d,r14d
   1400122c0:	mov    QWORD PTR [rsp+0x48],rax
   1400122c5:	mov    eax,DWORD PTR [r13+0x244]
   1400122cc:	mov    edx,r15d
   1400122cf:	mov    DWORD PTR [rsp+0x40],eax
   1400122d3:	lea    rax,[rbp+0x4a0]
   1400122da:	mov    QWORD PTR [rsp+0x30],rbx
   1400122df:	mov    QWORD PTR [rsp+0x28],rax
   1400122e4:	mov    rcx,r12
   1400122e7:	mov    DWORD PTR [rsp+0x20],edi
   1400122eb:	call   0x140011978
   1400122f0:	jmp    0x140012616
   1400122f5:	lea    r8,[r13+0x30]
   1400122f9:	lea    rcx,[rbp+0x4a0]
   140012300:	mov    edx,0x200
   140012305:	call   0x140002d7c
   14001230a:	mov    rax,QWORD PTR [r13+0x28]
   14001230e:	mov    edx,DWORD PTR [r13+0x24]
   140012312:	mov    QWORD PTR [rsp+0x40],rax
   140012317:	mov    eax,DWORD PTR [r13+0x20]
   14001231b:	lea    r8,[rbp+0x4a0]
   140012322:	mov    DWORD PTR [rsp+0x38],eax
   140012326:	mov    eax,DWORD PTR [r13+0x1c]
   14001232a:	mov    r9d,0x100
   140012330:	mov    DWORD PTR [rsp+0x30],eax
   140012334:	mov    eax,DWORD PTR [r13+0x18]
   140012338:	mov    rcx,r12
   14001233b:	mov    DWORD PTR [rsp+0x28],eax
   14001233f:	mov    eax,DWORD PTR [r13+0x14]
   140012343:	mov    DWORD PTR [rsp+0x20],eax
   140012347:	call   0x140011704
   14001234c:	jmp    0x140012616
   140012351:	mov    r14d,DWORD PTR [r13+0x40]
   140012355:	mov    r15d,DWORD PTR [r13+0x34]
   140012359:	mov    rdi,QWORD PTR [r13+0x38]
   14001235d:	mov    ebx,DWORD PTR [r13+0x30]
   140012361:	mov    rsi,QWORD PTR [r13+0x28]
   140012365:	mov    rcx,r12
   140012368:	call   0x140010d78
   14001236d:	mov    DWORD PTR [rax],0xd
   140012373:	jmp    0x1400125f8
   140012378:	mov    edx,ecx
   14001237a:	sub    edx,0x9
   14001237d:	je     0x1400125d6
   140012383:	dec    edx
   140012385:	je     0x14001256b
   14001238b:	dec    edx
   14001238d:	je     0x140012542
   140012393:	dec    edx
   140012395:	je     0x140012498
   14001239b:	dec    edx
   14001239d:	je     0x14001245a
   1400123a3:	dec    edx
   1400123a5:	je     0x140012403
   1400123a7:	dec    edx
   1400123a9:	jne    0x140012616
   1400123af:	xor    ebx,ebx
   1400123b1:	xor    edi,edi
   1400123b3:	xor    esi,esi
   1400123b5:	cmp    ecx,0xf
   1400123b8:	jne    0x1400123ca
   1400123ba:	mov    edx,DWORD PTR [r13+0x14]
   1400123be:	mov    rbx,QWORD PTR [r13+0x28]
   1400123c2:	mov    rdi,QWORD PTR [r13+0x30]
   1400123c6:	mov    esi,DWORD PTR [r13+0x38]
   1400123ca:	mov    rcx,QWORD PTR [r12+0x8]
   1400123cf:	add    rcx,0x2270
   1400123d6:	call   0x14001b4a4
   1400123db:	test   rax,rax
   1400123de:	je     0x140012616
   1400123e4:	lea    r8,[rbp-0x78]
   1400123e8:	mov    rdx,rbx
   1400123eb:	mov    rcx,rax
   1400123ee:	mov    QWORD PTR [rbp-0x78],rbx
   1400123f2:	mov    QWORD PTR [rbp-0x70],rdi
   1400123f6:	mov    DWORD PTR [rbp-0x68],esi
   1400123f9:	call   0x14001b9b0
   1400123fe:	jmp    0x140012616
   140012403:	xor    edx,edx
   140012405:	xor    ebx,ebx
   140012407:	cmp    ecx,0xe
   14001240a:	jne    0x140012429
   14001240c:	lea    r8,[r13+0x30]
   140012410:	lea    rcx,[rbp+0x4a0]
   140012417:	mov    edx,0x208
   14001241c:	call   0x140002d7c
   140012421:	mov    edx,DWORD PTR [r13+0x14]
   140012425:	mov    rbx,QWORD PTR [r13+0x28]
   140012429:	mov    rcx,QWORD PTR [r12+0x8]
   14001242e:	add    rcx,0x2270
   140012435:	call   0x14001b370
   14001243a:	test   rax,rax
   14001243d:	je     0x140012616
   140012443:	lea    r8,[rbp+0x4a0]
   14001244a:	mov    rdx,rbx
   14001244d:	mov    rcx,rax
   140012450:	call   0x14001b808
   140012455:	jmp    0x140012616
   14001245a:	mov    rax,QWORD PTR [r13+0x48]
   14001245e:	movups xmm0,XMMWORD PTR [r13+0x24]
   140012463:	movups xmm1,XMMWORD PTR [r13+0x34]
   140012468:	mov    QWORD PTR [rbp+0x1c4],rax
   14001246f:	mov    al,BYTE PTR [r13+0x50]
   140012473:	mov    DWORD PTR [rbp+0x1a0],0x10
   14001247d:	movdqu XMMWORD PTR [rbp+0x1a4],xmm0
   140012485:	movdqu XMMWORD PTR [rbp+0x1b4],xmm1
   14001248d:	mov    BYTE PTR [rbp+0x1cc],al
   140012493:	jmp    0x14001252b
   140012498:	mov    rcx,QWORD PTR [rsp+0x68]
   14001249d:	mov    r14,QWORD PTR [r13+0x38]
   1400124a1:	mov    r15d,DWORD PTR [r13+0x14]
   1400124a5:	movups xmm6,XMMWORD PTR [rcx+0x24]
   1400124a9:	mov    ebx,DWORD PTR [rcx+0x40]
   1400124ac:	mov    edi,DWORD PTR [rcx+0x44]
   1400124af:	mov    esi,DWORD PTR [rcx+0x48]
   1400124b2:	mov    r12d,DWORD PTR [r13+0x1c]
   1400124b6:	mov    r13b,BYTE PTR [r13+0x4c]
   1400124ba:	lea    r8,[rcx+0x4e]
   1400124be:	lea    rcx,[rbp+0x4a0]
   1400124c5:	mov    edx,0x20a
   1400124ca:	call   0x140002d7c
   1400124cf:	lea    r8,[rbp+0x4a0]
   1400124d6:	lea    rcx,[rbp+0x1d1]
   1400124dd:	movups XMMWORD PTR [rbp+0x1a4],xmm6
   1400124e4:	mov    edx,0x20a
   1400124e9:	mov    DWORD PTR [rbp+0x1a0],0xf
   1400124f3:	mov    QWORD PTR [rbp+0x1b4],r14
   1400124fa:	mov    DWORD PTR [rbp+0x1bc],r15d
   140012501:	mov    DWORD PTR [rbp+0x1c0],r12d
   140012508:	mov    BYTE PTR [rbp+0x1c4],r13b
   14001250f:	mov    DWORD PTR [rbp+0x1c9],ebx
   140012515:	mov    DWORD PTR [rbp+0x1cd],edi
   14001251b:	mov    DWORD PTR [rbp+0x1c5],esi
   140012521:	call   0x140002d7c
   140012526:	mov    r12,QWORD PTR [rsp+0x70]
   14001252b:	lea    rdx,[rbp+0x1a0]
   140012532:	xor    r8d,r8d
   140012535:	mov    rcx,r12
   140012538:	call   0x140011cec
   14001253d:	jmp    0x140012616
   140012542:	mov    esi,DWORD PTR [r13+0x38]
   140012546:	mov    ebx,DWORD PTR [r13+0x34]
   14001254a:	mov    rdi,QWORD PTR [r13+0x28]
   14001254e:	mov    rcx,r12
   140012551:	call   0x140010d78
   140012556:	mov    DWORD PTR [rax],0x2
   14001255c:	mov    DWORD PTR [rax+0x4],ebx
   14001255f:	mov    DWORD PTR [rax+0x8],esi
   140012562:	mov    QWORD PTR [rax+0xc],rdi
   140012566:	jmp    0x14001260b
   14001256b:	mov    r14,QWORD PTR [r13+0x28]
   14001256f:	mov    ebx,DWORD PTR [r13+0x34]
   140012573:	mov    edi,DWORD PTR [r13+0x38]
   140012577:	lea    r8,[r13+0x3c]
   14001257b:	lea    rcx,[rbp+0x4a0]
   140012582:	mov    edx,0x200
   140012587:	call   0x140002d7c
   14001258c:	mov    rcx,r12
   14001258f:	call   0x140010d78
   140012594:	lea    r8,[rbp+0x4a0]
   14001259b:	mov    edx,0x208
   1400125a0:	lea    rcx,[rax+0x20]
   1400125a4:	mov    rsi,rax
   1400125a7:	mov    DWORD PTR [rax],0x1
   1400125ad:	mov    DWORD PTR [rax+0x4],ebx
   1400125b0:	mov    DWORD PTR [rax+0x8],edi
   1400125b3:	mov    QWORD PTR [rax+0xc],r14
   1400125b7:	mov    DWORD PTR [rax+0x14],0x2
   1400125be:	mov    DWORD PTR [rax+0x18],0x2
   1400125c5:	mov    DWORD PTR [rax+0x1c],0x2
   1400125cc:	call   0x140002d7c
   1400125d1:	mov    rdx,rsi
   1400125d4:	jmp    0x14001260e
   1400125d6:	mov    r14d,DWORD PTR [r13+0x40]
   1400125da:	mov    r15d,DWORD PTR [r13+0x34]
   1400125de:	mov    rdi,QWORD PTR [r13+0x38]
   1400125e2:	mov    ebx,DWORD PTR [r13+0x30]
   1400125e6:	mov    rsi,QWORD PTR [r13+0x28]
   1400125ea:	mov    rcx,r12
   1400125ed:	call   0x140010d78
   1400125f2:	mov    DWORD PTR [rax],0xe
   1400125f8:	mov    DWORD PTR [rax+0x4],ebx
   1400125fb:	mov    QWORD PTR [rax+0x8],rdi
   1400125ff:	mov    DWORD PTR [rax+0x14],r14d
   140012603:	mov    DWORD PTR [rax+0x10],r15d
   140012607:	mov    QWORD PTR [rax+0x18],rsi
   14001260b:	mov    rdx,rax
   14001260e:	mov    rcx,r12
   140012611:	call   0x140010f08
   140012616:	mov    rcx,QWORD PTR [r12+0x8]
   14001261b:	mov    edx,DWORD PTR [rsp+0x60]
   14001261f:	add    rcx,0x818
   140012626:	call   0x14001f1dc
   14001262b:	jmp    0x140011ed3
   140012630:	mov    rcx,QWORD PTR [rbp+0x6b0]
   140012637:	xor    rcx,rsp
   14001263a:	call   0x140020e50
   14001263f:	lea    r11,[rsp+0x7d0]
   140012647:	mov    rbx,QWORD PTR [r11+0x38]
   14001264b:	mov    rsi,QWORD PTR [r11+0x40]
   14001264f:	mov    rdi,QWORD PTR [r11+0x48]
   140012653:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140012658:	mov    rsp,r11
   14001265b:	pop    r15
   14001265d:	pop    r14
   14001265f:	pop    r13
   140012661:	pop    r12
   140012663:	pop    rbp
   140012664:	ret    
   140012665:	int3   
   140012666:	int3   
   140012667:	int3   
   140012668:	mov    QWORD PTR [rsp+0x8],rcx
   14001266d:	push   rbx
   14001266e:	sub    rsp,0x30
   140012672:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001267b:	mov    rbx,rcx
   14001267e:	mov    rcx,QWORD PTR [rcx+0x20]
   140012682:	call   0x14002b138
   140012687:	nop
   140012688:	mov    rcx,rbx
   14001268b:	add    rsp,0x30
   14001268f:	pop    rbx
   140012690:	jmp    0x1400128f8
   140012695:	int3   
   140012696:	int3   
   140012697:	int3   
   140012698:	mov    rax,rsp
   14001269b:	push   rbp
   14001269c:	push   rsi
   14001269d:	push   rdi
   14001269e:	push   r14
   1400126a0:	push   r15
   1400126a2:	lea    rbp,[rax-0x58]
   1400126a6:	sub    rsp,0x130
   1400126ad:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400126b6:	mov    QWORD PTR [rax+0x8],rbx
   1400126ba:	mov    rbx,rcx
   1400126bd:	mov    ecx,0x20
   1400126c2:	call   0x140021a98
   1400126c7:	mov    rdi,rax
   1400126ca:	mov    QWORD PTR [rbp+0x68],rax
   1400126ce:	test   rax,rax
   1400126d1:	je     0x140012736
   1400126d3:	mov    r8d,DWORD PTR [rbx+0x8]
   1400126d7:	mov    eax,DWORD PTR [rbx+0x4]
   1400126da:	mov    edx,DWORD PTR [rbx]
   1400126dc:	mov    DWORD PTR [rdi+0x4],edx
   1400126df:	mov    DWORD PTR [rdi],r8d
   1400126e2:	test   eax,eax
   1400126e4:	jne    0x1400126ef
   1400126e6:	mov    DWORD PTR [rdi+0x8],0x300
   1400126ed:	jmp    0x140012700
   1400126ef:	lea    rcx,[r8-0x1]
   1400126f3:	lea    eax,[rcx+0x300]
   1400126f9:	not    ecx
   1400126fb:	and    eax,ecx
   1400126fd:	mov    DWORD PTR [rdi+0x8],eax
   140012700:	test   edx,edx
   140012702:	je     0x14001272a
   140012704:	mov    ecx,DWORD PTR [rdi+0x8]
   140012707:	imul   ecx,edx
   14001270a:	add    ecx,r8d
   14001270d:	call   0x14002b130
   140012712:	mov    QWORD PTR [rdi+0x10],rax
   140012716:	mov    ecx,DWORD PTR [rdi]
   140012718:	dec    rcx
   14001271b:	add    rax,rcx
   14001271e:	not    rcx
   140012721:	and    rax,rcx
   140012724:	mov    QWORD PTR [rdi+0x18],rax
   140012728:	jmp    0x140012738
   14001272a:	and    QWORD PTR [rdi+0x18],0x0
   14001272f:	and    QWORD PTR [rdi+0x10],0x0
   140012734:	jmp    0x140012738
   140012736:	xor    edi,edi
   140012738:	test   rdi,rdi
   14001273b:	jne    0x140012764
   14001273d:	mov    DWORD PTR [rbp+0x68],0x1
   140012744:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   14001274b:	mov    rax,QWORD PTR [rbp+0x68]
   14001274f:	mov    QWORD PTR [rbp+0x68],rax
   140012753:	lea    rdx,[rip+0x3835e]        # 0x14004aab8
   14001275a:	lea    rcx,[rbp+0x68]
   14001275e:	call   0x1400265e8
   140012763:	int3   
   140012764:	xor    r14d,r14d
   140012767:	mov    edx,DWORD PTR [rbx]
   140012769:	test   edx,edx
   14001276b:	je     0x140012804
   140012771:	xor    esi,esi
   140012773:	cmp    r14d,edx
   140012776:	jae    0x1400127b8
   140012778:	cmp    esi,0x20
   14001277b:	jae    0x1400127b8
   14001277d:	lea    ecx,[rsi+r14*1]
   140012781:	mov    eax,DWORD PTR [rdi+0x8]
   140012784:	imul   rcx,rax
   140012788:	add    rcx,QWORD PTR [rdi+0x18]
   14001278c:	mov    QWORD PTR [rsp+rsi*8+0x30],rcx
   140012791:	inc    esi
   140012793:	lea    eax,[rsi+r14*1]
   140012797:	cmp    eax,edx
   140012799:	jb     0x140012778
   14001279b:	jmp    0x1400127b8
   14001279d:	mov    eax,DWORD PTR [rbx+0x30]
   1400127a0:	add    eax,eax
   1400127a2:	mov    edx,0x2
   1400127a7:	cmp    eax,edx
   1400127a9:	cmovg  edx,eax
   1400127ac:	mov    DWORD PTR [rbx+0x30],edx
   1400127af:	lea    rcx,[rbx+0x38]
   1400127b3:	call   0x14000e464
   1400127b8:	mov    ecx,DWORD PTR [rbx+0x34]
   1400127bb:	add    ecx,esi
   1400127bd:	cmp    ecx,DWORD PTR [rbx+0x30]
   1400127c0:	jge    0x14001279d
   1400127c2:	test   esi,esi
   1400127c4:	jle    0x1400127f5
   1400127c6:	lea    r8,[rsp+0x30]
   1400127cb:	mov    r9d,esi
   1400127ce:	movsxd rax,DWORD PTR [rbx+0x34]
   1400127d2:	mov    rcx,rax
   1400127d5:	inc    eax
   1400127d7:	mov    DWORD PTR [rbx+0x34],eax
   1400127da:	mov    edx,DWORD PTR [rbx+0x40]
   1400127dd:	imul   rdx,rcx
   1400127e1:	mov    rcx,QWORD PTR [rbx+0x50]
   1400127e5:	mov    rax,QWORD PTR [r8]
   1400127e8:	mov    QWORD PTR [rdx+rcx*1],rax
   1400127ec:	lea    r8,[r8+0x8]
   1400127f0:	dec    r9
   1400127f3:	jne    0x1400127ce
   1400127f5:	add    r14d,0x20
   1400127f9:	mov    edx,DWORD PTR [rbx]
   1400127fb:	cmp    r14d,edx
   1400127fe:	jb     0x140012771
   140012804:	mov    rsi,QWORD PTR [rbx+0x10]
   140012808:	mov    QWORD PTR [rbp+0x78],rsi
   14001280c:	mov    eax,0x1
   140012811:	xchg   DWORD PTR [rsi+0x8],eax
   140012814:	test   eax,eax
   140012816:	je     0x140012821
   140012818:	mov    rcx,rsi
   14001281b:	call   0x1400178cc
   140012820:	nop
   140012821:	mov    ecx,DWORD PTR [rbx+0x20]
   140012824:	cmp    DWORD PTR [rbx+0x24],ecx
   140012827:	jl     0x1400128a5
   140012829:	lea    r15d,[rcx-0x1]
   14001282d:	add    ecx,ecx
   14001282f:	mov    DWORD PTR [rbx+0x20],ecx
   140012832:	movsxd rdx,ecx
   140012835:	mov    eax,0x8
   14001283a:	mul    rdx
   14001283d:	mov    rcx,0xffffffffffffffff
   140012844:	cmovo  rax,rcx
   140012848:	mov    rcx,rax
   14001284b:	call   0x14002b130
   140012850:	mov    r14,rax
   140012853:	test   rax,rax
   140012856:	jne    0x14001287f
   140012858:	mov    DWORD PTR [rbp+0x68],0x1
   14001285f:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   140012866:	mov    rax,QWORD PTR [rbp+0x68]
   14001286a:	mov    QWORD PTR [rbp+0x70],rax
   14001286e:	lea    rdx,[rip+0x38243]        # 0x14004aab8
   140012875:	lea    rcx,[rbp+0x70]
   140012879:	call   0x1400265e8
   14001287e:	int3   
   14001287f:	movsxd rdx,r15d
   140012882:	test   r15d,r15d
   140012885:	js     0x140012898
   140012887:	mov    rax,QWORD PTR [rbx+0x28]
   14001288b:	mov    rcx,QWORD PTR [rax+rdx*8]
   14001288f:	mov    QWORD PTR [r14+rdx*8],rcx
   140012893:	dec    rdx
   140012896:	jns    0x140012887
   140012898:	mov    rcx,QWORD PTR [rbx+0x28]
   14001289c:	call   0x14002b138
   1400128a1:	mov    QWORD PTR [rbx+0x28],r14
   1400128a5:	movsxd rcx,DWORD PTR [rbx+0x24]
   1400128a9:	mov    rax,QWORD PTR [rbx+0x28]
   1400128ad:	mov    QWORD PTR [rax+rcx*8],rdi
   1400128b1:	inc    DWORD PTR [rbx+0x24]
   1400128b4:	xor    eax,eax
   1400128b6:	xchg   DWORD PTR [rsi+0x8],eax
   1400128b9:	lock or DWORD PTR [rsp],0x0
   1400128be:	mov    eax,DWORD PTR [rsi+0xc]
   1400128c1:	test   eax,eax
   1400128c3:	jle    0x1400128de
   1400128c5:	lock or DWORD PTR [rsp],0x0
   1400128ca:	mov    eax,DWORD PTR [rsi+0xc]
   1400128cd:	mov    rax,QWORD PTR [rsi]
   1400128d0:	test   rax,rax
   1400128d3:	je     0x1400128de
   1400128d5:	mov    rcx,QWORD PTR [rsi]
   1400128d8:	call   QWORD PTR [rip+0x26bfa]        # 0x1400394d8
   1400128de:	mov    rbx,QWORD PTR [rsp+0x160]
   1400128e6:	add    rsp,0x130
   1400128ed:	pop    r15
   1400128ef:	pop    r14
   1400128f1:	pop    rdi
   1400128f2:	pop    rsi
   1400128f3:	pop    rbp
   1400128f4:	ret    
   1400128f5:	int3   
   1400128f6:	int3   
   1400128f7:	int3   
   1400128f8:	rex push rdi
   1400128fa:	sub    rsp,0x30
   1400128fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012907:	mov    QWORD PTR [rsp+0x48],rbx
   14001290c:	mov    rdi,rcx
   14001290f:	mov    rbx,QWORD PTR [rcx]
   140012912:	mov    QWORD PTR [rsp+0x40],rbx
   140012917:	mov    rax,QWORD PTR [rbx+0x10]
   14001291b:	test   rax,rax
   14001291e:	je     0x14001292a
   140012920:	mov    rcx,QWORD PTR [rbx+0x10]
   140012924:	call   QWORD PTR [rip+0x26c96]        # 0x1400395c0
   14001292a:	mov    QWORD PTR [rbx+0x10],0x0
   140012932:	mov    rcx,QWORD PTR [rdi+0x8]
   140012936:	mov    rbx,QWORD PTR [rsp+0x48]
   14001293b:	add    rsp,0x30
   14001293f:	pop    rdi
   140012940:	jmp    0x14002b138
   140012945:	int3   
   140012946:	int3   
   140012947:	int3   
   140012948:	rex push rbx
   14001294a:	sub    rsp,0x20
   14001294e:	mov    rbx,rcx
   140012951:	mov    DWORD PTR [rcx+0x4],edx
   140012954:	mov    DWORD PTR [rcx],0x40
   14001295a:	mov    DWORD PTR [rcx+0x8],0x8
   140012961:	test   edx,edx
   140012963:	je     0x140012989
   140012965:	lea    ecx,[rdx*8+0x40]
   14001296c:	call   0x14002b130
   140012971:	mov    edx,DWORD PTR [rbx]
   140012973:	dec    rdx
   140012976:	mov    QWORD PTR [rbx+0x10],rax
   14001297a:	add    rax,rdx
   14001297d:	not    rdx
   140012980:	and    rax,rdx
   140012983:	mov    QWORD PTR [rbx+0x18],rax
   140012987:	jmp    0x140012993
   140012989:	and    QWORD PTR [rcx+0x18],0x0
   14001298e:	and    QWORD PTR [rcx+0x10],0x0
   140012993:	mov    rax,rbx
   140012996:	add    rsp,0x20
   14001299a:	pop    rbx
   14001299b:	ret    
   14001299c:	mov    rax,rsp
   14001299f:	push   rbp
   1400129a0:	push   rsi
   1400129a1:	push   rdi
   1400129a2:	push   r14
   1400129a4:	push   r15
   1400129a6:	mov    rbp,rsp
   1400129a9:	sub    rsp,0x40
   1400129ad:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400129b5:	mov    QWORD PTR [rax+0x18],rbx
   1400129b9:	mov    rbx,r9
   1400129bc:	mov    rsi,r8
   1400129bf:	mov    rdi,rcx
   1400129c2:	lea    rax,[rip+0x2bdbf]        # 0x14003e788
   1400129c9:	mov    QWORD PTR [rcx],rax
   1400129cc:	mov    al,BYTE PTR [rbp+0x50]
   1400129cf:	mov    BYTE PTR [rcx+0x18],al
   1400129d2:	xor    r14d,r14d
   1400129d5:	mov    WORD PTR [rcx+0x19],r14w
   1400129da:	mov    QWORD PTR [rcx+0x20],r14
   1400129de:	mov    QWORD PTR [rcx+0x28],rdx
   1400129e2:	mov    QWORD PTR [rcx+0x30],r14
   1400129e6:	mov    DWORD PTR [rcx+0x38],r14d
   1400129ea:	mov    rdx,QWORD PTR [rdx+0x50]
   1400129ee:	add    rdx,0x18
   1400129f2:	lea    rcx,[rbp+0x38]
   1400129f6:	call   0x140005714
   1400129fb:	nop
   1400129fc:	mov    rdx,rbx
   1400129ff:	lea    rcx,[rbp+0x38]
   140012a03:	call   0x140013b24
   140012a08:	mov    rax,QWORD PTR [rbp+0x38]
   140012a0c:	or     r15,0xffffffffffffffff
   140012a10:	mov    rbx,r15
   140012a13:	inc    rbx
   140012a16:	cmp    WORD PTR [rax+rbx*2],r14w
   140012a1b:	jne    0x140012a13
   140012a1d:	inc    rbx
   140012a20:	mov    eax,0x2
   140012a25:	mul    rbx
   140012a28:	cmovo  rax,r15
   140012a2c:	mov    rcx,rax
   140012a2f:	call   0x14002b130
   140012a34:	mov    QWORD PTR [rdi+0x10],rax
   140012a38:	mov    r8,QWORD PTR [rbp+0x38]
   140012a3c:	mov    rdx,rbx
   140012a3f:	mov    rcx,rax
   140012a42:	call   0x140008194
   140012a47:	mov    rbx,r15
   140012a4a:	inc    rbx
   140012a4d:	cmp    WORD PTR [rsi+rbx*2],r14w
   140012a52:	jne    0x140012a4a
   140012a54:	inc    rbx
   140012a57:	mov    eax,0x2
   140012a5c:	mul    rbx
   140012a5f:	cmovo  rax,r15
   140012a63:	mov    rcx,rax
   140012a66:	call   0x14002b130
   140012a6b:	mov    QWORD PTR [rdi+0x8],rax
   140012a6f:	mov    r8,rsi
   140012a72:	mov    rdx,rbx
   140012a75:	mov    rcx,rax
   140012a78:	call   0x140008194
   140012a7d:	cmp    DWORD PTR [rip+0x3e4e4],r14d        # 0x140050f68
   140012a84:	jne    0x140012b87
   140012a8a:	mov    DWORD PTR [rip+0x3e4d4],0x1        # 0x140050f68
   140012a94:	lea    rax,[rbp+0x30]
   140012a98:	mov    QWORD PTR [rsp+0x20],rax
   140012a9d:	mov    r9d,0x20019
   140012aa3:	xor    r8d,r8d
   140012aa6:	lea    rdx,[rip+0x2ba93]        # 0x14003e540
   140012aad:	mov    rcx,0xffffffff80000001
   140012ab4:	call   QWORD PTR [rip+0x265c6]        # 0x140039080
   140012aba:	test   eax,eax
   140012abc:	jne    0x140012b87
   140012ac2:	mov    rax,QWORD PTR [rdi+0x28]
   140012ac6:	mov    rcx,QWORD PTR [rax]
   140012ac9:	mov    rax,QWORD PTR [rcx]
   140012acc:	xor    r9d,r9d
   140012acf:	xor    r8d,r8d
   140012ad2:	mov    edx,0xa12305fa
   140012ad7:	call   QWORD PTR [rax]
   140012ad9:	mov    r9d,DWORD PTR [rip+0x3e4a0]        # 0x140050f80
   140012ae0:	lea    r8,[rip+0x2baf1]        # 0x14003e5d8
   140012ae7:	mov    rdx,QWORD PTR [rbp+0x30]
   140012aeb:	call   0x1400131d0
   140012af0:	mov    DWORD PTR [rip+0x3e48a],eax        # 0x140050f80
   140012af6:	mov    r9d,DWORD PTR [rip+0x3bb8f]        # 0x14004e68c
   140012afd:	lea    r8,[rip+0x2babc]        # 0x14003e5c0
   140012b04:	mov    rdx,QWORD PTR [rbp+0x30]
   140012b08:	call   0x1400131d0
   140012b0d:	mov    DWORD PTR [rip+0x3bb79],eax        # 0x14004e68c
   140012b13:	mov    r9d,DWORD PTR [rip+0x3bb7a]        # 0x14004e694
   140012b1a:	lea    r8,[rip+0x2bae7]        # 0x14003e608
   140012b21:	mov    rdx,QWORD PTR [rbp+0x30]
   140012b25:	call   0x1400131d0
   140012b2a:	mov    DWORD PTR [rip+0x3bb64],eax        # 0x14004e694
   140012b30:	mov    r9d,DWORD PTR [rip+0x3bb59]        # 0x14004e690
   140012b37:	lea    r8,[rip+0x2bab2]        # 0x14003e5f0
   140012b3e:	mov    rdx,QWORD PTR [rbp+0x30]
   140012b42:	call   0x1400131d0
   140012b47:	mov    DWORD PTR [rip+0x3bb43],eax        # 0x14004e690
   140012b4d:	mov    r9d,DWORD PTR [rip+0x3e418]        # 0x140050f6c
   140012b54:	lea    r8,[rip+0x2bac5]        # 0x14003e620
   140012b5b:	mov    rdx,QWORD PTR [rbp+0x30]
   140012b5f:	call   0x1400131d0
   140012b64:	mov    DWORD PTR [rip+0x3e402],eax        # 0x140050f6c
   140012b6a:	mov    r9d,DWORD PTR [rip+0x3bb03]        # 0x14004e674
   140012b71:	lea    r8,[rip+0x2baa8]        # 0x14003e620
   140012b78:	mov    rdx,QWORD PTR [rbp+0x30]
   140012b7c:	call   0x1400131d0
   140012b81:	mov    DWORD PTR [rip+0x3baed],eax        # 0x14004e674
   140012b87:	lea    rax,[rbp+0x38]
   140012b8b:	mov    QWORD PTR [rbp-0x8],rax
   140012b8f:	mov    rdx,QWORD PTR [rbp+0x38]
   140012b93:	add    rdx,0xffffffffffffffe8
   140012b97:	mov    eax,r15d
   140012b9a:	lock xadd DWORD PTR [rdx+0x10],eax
   140012b9f:	add    eax,r15d
   140012ba2:	test   eax,eax
   140012ba4:	jg     0x140012baf
   140012ba6:	mov    rcx,QWORD PTR [rdx]
   140012ba9:	mov    rax,QWORD PTR [rcx]
   140012bac:	call   QWORD PTR [rax+0x8]
   140012baf:	mov    rax,rdi
   140012bb2:	mov    rbx,QWORD PTR [rsp+0x80]
   140012bba:	add    rsp,0x40
   140012bbe:	pop    r15
   140012bc0:	pop    r14
   140012bc2:	pop    rdi
   140012bc3:	pop    rsi
   140012bc4:	pop    rbp
   140012bc5:	ret    
   140012bc6:	int3   
   140012bc7:	int3   
   140012bc8:	mov    QWORD PTR [rsp+0x8],rbx
   140012bcd:	push   rdi
   140012bce:	sub    rsp,0x20
   140012bd2:	mov    ebx,edx
   140012bd4:	mov    rdi,rcx
   140012bd7:	call   0x140012c2c
   140012bdc:	test   bl,0x1
   140012bdf:	je     0x140012be9
   140012be1:	mov    rcx,rdi
   140012be4:	call   0x140020e30
   140012be9:	mov    rax,rdi
   140012bec:	mov    rbx,QWORD PTR [rsp+0x30]
   140012bf1:	add    rsp,0x20
   140012bf5:	pop    rdi
   140012bf6:	ret    
   140012bf7:	int3   
   140012bf8:	mov    QWORD PTR [rsp+0x8],rcx
   140012bfd:	sub    rsp,0x38
   140012c01:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012c0a:	mov    QWORD PTR [rsp+0x40],rcx
   140012c0f:	mov    rdx,QWORD PTR [rcx]
   140012c12:	sub    rdx,0x18
   140012c16:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140012c1b:	jg     0x140012c26
   140012c1d:	mov    rcx,QWORD PTR [rdx]
   140012c20:	mov    rax,QWORD PTR [rcx]
   140012c23:	call   QWORD PTR [rax+0x8]
   140012c26:	add    rsp,0x38
   140012c2a:	ret    
   140012c2b:	int3   
   140012c2c:	rex push rbx
   140012c2e:	sub    rsp,0x20
   140012c32:	lea    rax,[rip+0x2bb4f]        # 0x14003e788
   140012c39:	mov    rbx,rcx
   140012c3c:	mov    QWORD PTR [rcx],rax
   140012c3f:	mov    rcx,QWORD PTR [rcx+0x30]
   140012c43:	call   0x14002b138
   140012c48:	mov    rcx,QWORD PTR [rbx+0x10]
   140012c4c:	call   0x14002b138
   140012c51:	mov    rcx,QWORD PTR [rbx+0x8]
   140012c55:	add    rsp,0x20
   140012c59:	pop    rbx
   140012c5a:	jmp    0x14002b138
   140012c5f:	int3   
   140012c60:	mov    rax,rsp
   140012c63:	mov    QWORD PTR [rax+0x8],rbx
   140012c67:	mov    QWORD PTR [rax+0x10],rbp
   140012c6b:	mov    QWORD PTR [rax+0x18],rsi
   140012c6f:	mov    QWORD PTR [rax+0x20],rdi
   140012c73:	push   r12
   140012c75:	push   r14
   140012c77:	push   r15
   140012c79:	sub    rsp,0x20
   140012c7d:	mov    rdi,rcx
   140012c80:	mov    rcx,QWORD PTR [rcx+0x30]
   140012c84:	xor    r12d,r12d
   140012c87:	mov    ebx,r9d
   140012c8a:	mov    r14,r8
   140012c8d:	mov    r15,rdx
   140012c90:	test   rcx,rcx
   140012c93:	je     0x140012c9a
   140012c95:	call   0x14002b138
   140012c9a:	or     rax,0xffffffffffffffff
   140012c9e:	mov    rcx,rax
   140012ca1:	inc    rcx
   140012ca4:	cmp    WORD PTR [r15+rcx*2],r12w
   140012ca9:	jne    0x140012ca1
   140012cab:	lea    rsi,[rcx*2+0x2]
   140012cb3:	inc    rax
   140012cb6:	cmp    WORD PTR [r14+rax*2],r12w
   140012cbb:	jne    0x140012cb3
   140012cbd:	lea    rbp,[rax*2+0x2]
   140012cc5:	lea    rcx,[rbx+0x78]
   140012cc9:	add    rcx,rbp
   140012ccc:	add    rcx,rsi
   140012ccf:	mov    eax,ecx
   140012cd1:	cmp    rcx,rax
   140012cd4:	je     0x140012ce0
   140012cd6:	mov    eax,0x57
   140012cdb:	jmp    0x140012dc7
   140012ce0:	add    ecx,0x7
   140012ce3:	and    ecx,0xfffffff8
   140012ce6:	mov    DWORD PTR [rdi+0x38],ecx
   140012ce9:	call   0x14002b130
   140012cee:	mov    QWORD PTR [rdi+0x30],rax
   140012cf2:	test   rax,rax
   140012cf5:	je     0x140012dc2
   140012cfb:	mov    r8d,DWORD PTR [rdi+0x38]
   140012cff:	xor    edx,edx
   140012d01:	mov    rcx,rax
   140012d04:	call   0x1400260e0
   140012d09:	mov    rax,QWORD PTR [rdi+0x30]
   140012d0d:	mov    rdx,rsi
   140012d10:	mov    DWORD PTR [rax+0x74],0x78
   140012d17:	mov    r8,QWORD PTR [rdi+0x30]
   140012d1b:	mov    ecx,DWORD PTR [r8+0x74]
   140012d1f:	add    ecx,esi
   140012d21:	mov    DWORD PTR [r8+0x70],ecx
   140012d25:	mov    rax,QWORD PTR [rdi+0x30]
   140012d29:	mov    r8,r15
   140012d2c:	mov    ecx,DWORD PTR [rax+0x74]
   140012d2f:	mov    ebx,DWORD PTR [rax+0x70]
   140012d32:	add    rcx,rax
   140012d35:	add    rbx,rax
   140012d38:	call   0x140002d7c
   140012d3d:	mov    r8,r14
   140012d40:	mov    rdx,rbp
   140012d43:	mov    rcx,rbx
   140012d46:	call   0x140002d7c
   140012d4b:	mov    rcx,QWORD PTR [rdi+0x30]
   140012d4f:	mov    eax,DWORD PTR [rdi+0x38]
   140012d52:	mov    DWORD PTR [rcx],eax
   140012d54:	mov    rax,QWORD PTR [rdi+0x30]
   140012d58:	mov    DWORD PTR [rax+0x2c],0x20000
   140012d5f:	mov    al,BYTE PTR [rdi+0x18]
   140012d62:	neg    al
   140012d64:	mov    rax,QWORD PTR [rdi+0x30]
   140012d68:	sbb    ecx,ecx
   140012d6a:	and    ecx,0x4
   140012d6d:	mov    DWORD PTR [rax+0x40],ecx
   140012d70:	mov    rax,QWORD PTR [rdi+0x30]
   140012d74:	cmp    BYTE PTR [rdi+0x19],r12b
   140012d78:	je     0x140012d83
   140012d7a:	mov    DWORD PTR [rax+0x28],0x1
   140012d81:	jmp    0x140012d8a
   140012d83:	mov    DWORD PTR [rax+0x28],0x3
   140012d8a:	mov    rcx,QWORD PTR [rdi+0x30]
   140012d8e:	mov    eax,DWORD PTR [rip+0x3e1ec]        # 0x140050f80
   140012d94:	mov    DWORD PTR [rcx+0x44],eax
   140012d97:	mov    rcx,QWORD PTR [rdi+0x30]
   140012d9b:	mov    eax,DWORD PTR [rip+0x3b8eb]        # 0x14004e68c
   140012da1:	mov    DWORD PTR [rcx+0x30],eax
   140012da4:	mov    rcx,QWORD PTR [rdi+0x30]
   140012da8:	mov    eax,DWORD PTR [rip+0x3b8e6]        # 0x14004e694
   140012dae:	mov    DWORD PTR [rcx+0x34],eax
   140012db1:	mov    eax,DWORD PTR [rip+0x3b8d9]        # 0x14004e690
   140012db7:	mov    rcx,QWORD PTR [rdi+0x30]
   140012dbb:	mov    DWORD PTR [rcx+0x38],eax
   140012dbe:	xor    eax,eax
   140012dc0:	jmp    0x140012dc7
   140012dc2:	mov    eax,0xe
   140012dc7:	mov    rbx,QWORD PTR [rsp+0x40]
   140012dcc:	mov    rbp,QWORD PTR [rsp+0x48]
   140012dd1:	mov    rsi,QWORD PTR [rsp+0x50]
   140012dd6:	mov    rdi,QWORD PTR [rsp+0x58]
   140012ddb:	add    rsp,0x20
   140012ddf:	pop    r15
   140012de1:	pop    r14
   140012de3:	pop    r12
   140012de5:	ret    
   140012de6:	int3   
   140012de7:	int3   
   140012de8:	rex push rbx
   140012dea:	sub    rsp,0x20
   140012dee:	cmp    QWORD PTR [rcx+0x30],0x0
   140012df3:	mov    rbx,rcx
   140012df6:	jne    0x140012e03
   140012df8:	mov    eax,0x6
   140012dfd:	add    rsp,0x20
   140012e01:	pop    rbx
   140012e02:	ret    
   140012e03:	cmp    QWORD PTR [rcx+0x20],0x0
   140012e08:	je     0x140012df8
   140012e0a:	cmp    QWORD PTR [rcx+0x20],0xffffffffffffffff
   140012e0f:	je     0x140012df8
   140012e11:	mov    r8,QWORD PTR [rcx+0x10]
   140012e15:	mov    rdx,QWORD PTR [rcx+0x8]
   140012e19:	xor    r9d,r9d
   140012e1c:	call   0x140012c60
   140012e21:	mov    r8,QWORD PTR [rbx+0x30]
   140012e25:	mov    rcx,QWORD PTR [rbx+0x20]
   140012e29:	mov    r9d,0x3
   140012e2f:	xor    edx,edx
   140012e31:	call   QWORD PTR [rip+0x26241]        # 0x140039078
   140012e37:	mov    r8,QWORD PTR [rbx+0x30]
   140012e3b:	mov    rcx,QWORD PTR [rbx+0x20]
   140012e3f:	mov    r9d,0x1
   140012e45:	xor    edx,edx
   140012e47:	add    rsp,0x20
   140012e4b:	pop    rbx
   140012e4c:	rex.W jmp QWORD PTR [rip+0x26225]        # 0x140039078
   140012e53:	int3   
   140012e54:	mov    rax,rsp
   140012e57:	mov    QWORD PTR [rax+0x18],rbx
   140012e5b:	mov    QWORD PTR [rax+0x20],rsi
   140012e5f:	push   rdi
   140012e60:	sub    rsp,0x40
   140012e64:	xor    ebx,ebx
   140012e66:	mov    rdi,rcx
   140012e69:	mov    rcx,QWORD PTR [rcx+0x10]
   140012e6d:	mov    QWORD PTR [rax-0x18],rbx
   140012e71:	mov    DWORD PTR [rax-0x20],ebx
   140012e74:	lea    edx,[rbx+0x4]
   140012e77:	xor    r9d,r9d
   140012e7a:	xor    r8d,r8d
   140012e7d:	mov    DWORD PTR [rax-0x28],0x3
   140012e84:	call   QWORD PTR [rip+0x2650e]        # 0x140039398
   140012e8a:	mov    rsi,rax
   140012e8d:	cmp    rax,0xffffffffffffffff
   140012e91:	jne    0x140012ec0
   140012e93:	call   QWORD PTR [rip+0x26747]        # 0x1400395e0
   140012e99:	lea    r9,[rsp+0x58]
   140012e9e:	lea    r8d,[rsi+0x2]
   140012ea2:	mov    ebx,eax
   140012ea4:	mov    rax,QWORD PTR [rdi+0x28]
   140012ea8:	mov    edx,0xe123059a
   140012ead:	mov    rcx,QWORD PTR [rax]
   140012eb0:	mov    rax,QWORD PTR [rdi+0x10]
   140012eb4:	mov    QWORD PTR [rsp+0x58],rax
   140012eb9:	mov    rax,QWORD PTR [rcx]
   140012ebc:	call   QWORD PTR [rax]
   140012ebe:	jmp    0x140012f3a
   140012ec0:	mov    r9d,0x2
   140012ec6:	xor    r8d,r8d
   140012ec9:	xor    edx,edx
   140012ecb:	mov    rcx,rax
   140012ece:	call   QWORD PTR [rip+0x266ac]        # 0x140039580
   140012ed4:	mov    rdx,QWORD PTR [rdi+0x28]
   140012ed8:	lea    r9,[rsp+0x50]
   140012edd:	mov    rdx,QWORD PTR [rdx+0x50]
   140012ee1:	mov    r8d,0x220
   140012ee7:	mov    rcx,rsi
   140012eea:	mov    QWORD PTR [rsp+0x20],rbx
   140012eef:	call   QWORD PTR [rip+0x26313]        # 0x140039208
   140012ef5:	test   eax,eax
   140012ef7:	je     0x140012f03
   140012ef9:	cmp    DWORD PTR [rsp+0x50],0x220
   140012f01:	je     0x140012f31
   140012f03:	call   QWORD PTR [rip+0x266d7]        # 0x1400395e0
   140012f09:	mov    rdx,QWORD PTR [rdi+0x10]
   140012f0d:	mov    rcx,QWORD PTR [rdi+0x28]
   140012f11:	mov    rcx,QWORD PTR [rcx]
   140012f14:	mov    QWORD PTR [rsp+0x58],rdx
   140012f19:	lea    r9,[rsp+0x58]
   140012f1e:	mov    r10,QWORD PTR [rcx]
   140012f21:	mov    edx,0xe123059a
   140012f26:	mov    r8d,0x1
   140012f2c:	mov    ebx,eax
   140012f2e:	call   QWORD PTR [r10]
   140012f31:	mov    rcx,rsi
   140012f34:	call   QWORD PTR [rip+0x26686]        # 0x1400395c0
   140012f3a:	mov    rsi,QWORD PTR [rsp+0x68]
   140012f3f:	mov    eax,ebx
   140012f41:	mov    rbx,QWORD PTR [rsp+0x60]
   140012f46:	add    rsp,0x40
   140012f4a:	pop    rdi
   140012f4b:	ret    
   140012f4c:	mov    QWORD PTR [rsp+0x10],rbx
   140012f51:	push   rdi
   140012f52:	sub    rsp,0x20
   140012f56:	mov    rbx,rdx
   140012f59:	mov    rdi,rcx
   140012f5c:	call   QWORD PTR [rip+0x2667e]        # 0x1400395e0
   140012f62:	mov    ecx,eax
   140012f64:	mov    DWORD PTR [rbx],eax
   140012f66:	call   0x140004908
   140012f6b:	mov    rcx,QWORD PTR [rdi+0x28]
   140012f6f:	lea    r9,[rsp+0x30]
   140012f74:	mov    rcx,QWORD PTR [rcx]
   140012f77:	mov    edx,0xe12305f1
   140012f7c:	mov    r8d,0x1
   140012f82:	mov    r10,QWORD PTR [rcx]
   140012f85:	mov    rbx,rax
   140012f88:	mov    QWORD PTR [rsp+0x30],rax
   140012f8d:	call   QWORD PTR [r10]
   140012f90:	mov    rcx,rbx
   140012f93:	call   QWORD PTR [rip+0x2661f]        # 0x1400395b8
   140012f99:	mov    rbx,QWORD PTR [rsp+0x38]
   140012f9e:	xor    eax,eax
   140012fa0:	add    rsp,0x20
   140012fa4:	pop    rdi
   140012fa5:	ret    
   140012fa6:	int3   
   140012fa7:	int3   
   140012fa8:	mov    QWORD PTR [rsp+0x8],rbx
   140012fad:	mov    QWORD PTR [rsp+0x18],rsi
   140012fb2:	push   rdi
   140012fb3:	sub    rsp,0x20
   140012fb7:	xor    edi,edi
   140012fb9:	mov    rsi,rcx
   140012fbc:	cmp    QWORD PTR [rip+0x3dfad],rdi        # 0x140050f70
   140012fc3:	mov    DWORD PTR [rsp+0x38],edi
   140012fc7:	je     0x140012fd6
   140012fc9:	cmp    QWORD PTR [rip+0x3dfa8],rdi        # 0x140050f78
   140012fd0:	jne    0x140013093
   140012fd6:	lea    rcx,[rip+0x2b67b]        # 0x14003e658
   140012fdd:	call   QWORD PTR [rip+0x2637d]        # 0x140039360
   140012fe3:	mov    rbx,rax
   140012fe6:	test   rax,rax
   140012fe9:	je     0x140013056
   140012feb:	lea    rdx,[rip+0x2b64e]        # 0x14003e640
   140012ff2:	mov    rcx,rax
   140012ff5:	call   QWORD PTR [rip+0x261f5]        # 0x1400391f0
   140012ffb:	test   rax,rax
   140012ffe:	je     0x140013006
   140013000:	mov    DWORD PTR [rsp+0x38],edi
   140013004:	jmp    0x140013017
   140013006:	lea    rdx,[rsp+0x38]
   14001300b:	mov    rcx,rsi
   14001300e:	call   0x140012f4c
   140013013:	mov    edi,DWORD PTR [rsp+0x38]
   140013017:	mov    QWORD PTR [rip+0x3df52],rax        # 0x140050f70
   14001301e:	test   rax,rax
   140013021:	je     0x140013093
   140013023:	lea    rdx,[rip+0x2b66e]        # 0x14003e698
   14001302a:	mov    rcx,rbx
   14001302d:	call   QWORD PTR [rip+0x261bd]        # 0x1400391f0
   140013033:	test   rax,rax
   140013036:	je     0x14001303c
   140013038:	xor    edi,edi
   14001303a:	jmp    0x14001304d
   14001303c:	lea    rdx,[rsp+0x38]
   140013041:	mov    rcx,rsi
   140013044:	call   0x140012f4c
   140013049:	mov    edi,DWORD PTR [rsp+0x38]
   14001304d:	mov    QWORD PTR [rip+0x3df24],rax        # 0x140050f78
   140013054:	jmp    0x140013093
   140013056:	call   QWORD PTR [rip+0x26584]        # 0x1400395e0
   14001305c:	mov    ecx,eax
   14001305e:	mov    edi,eax
   140013060:	call   0x140004908
   140013065:	mov    rcx,QWORD PTR [rsi+0x28]
   140013069:	lea    r9,[rsp+0x38]
   14001306e:	mov    rcx,QWORD PTR [rcx]
   140013071:	mov    edx,0xe12305f0
   140013076:	mov    r8d,0x1
   14001307c:	mov    r10,QWORD PTR [rcx]
   14001307f:	mov    rbx,rax
   140013082:	mov    QWORD PTR [rsp+0x38],rax
   140013087:	call   QWORD PTR [r10]
   14001308a:	mov    rcx,rbx
   14001308d:	call   QWORD PTR [rip+0x26525]        # 0x1400395b8
   140013093:	mov    rbx,QWORD PTR [rsp+0x30]
   140013098:	mov    rsi,QWORD PTR [rsp+0x40]
   14001309d:	mov    eax,edi
   14001309f:	add    rsp,0x20
   1400130a3:	pop    rdi
   1400130a4:	ret    
   1400130a5:	int3   
   1400130a6:	int3   
   1400130a7:	int3   
   1400130a8:	rex push rbp
   1400130aa:	push   rsi
   1400130ab:	push   rdi
   1400130ac:	sub    rsp,0x40
   1400130b0:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400130b9:	mov    QWORD PTR [rsp+0x68],rbx
   1400130be:	mov    ebx,edx
   1400130c0:	mov    rsi,rcx
   1400130c3:	xor    edi,edi
   1400130c5:	cmp    BYTE PTR [rcx+0x1a],dil
   1400130c9:	je     0x1400131bf
   1400130cf:	test   edx,edx
   1400130d1:	je     0x1400131bf
   1400130d7:	mov    rdx,QWORD PTR [rcx+0x10]
   1400130db:	lea    rcx,[rsp+0x60]
   1400130e0:	call   0x140005714
   1400130e5:	nop
   1400130e6:	lea    rdx,[rip+0x2b59b]        # 0x14003e688
   1400130ed:	lea    rcx,[rsp+0x60]
   1400130f2:	call   0x140013b24
   1400130f7:	mov    rbp,QWORD PTR [rsp+0x60]
   1400130fc:	mov    rax,QWORD PTR [rsi+0x10]
   140013100:	mov    QWORD PTR [rsp+0x70],rax
   140013105:	mov    rcx,rsi
   140013108:	call   0x140012fa8
   14001310d:	mov    edi,eax
   14001310f:	test   eax,eax
   140013111:	jne    0x14001319c
   140013117:	mov    r9d,ebx
   14001311a:	lea    r8d,[rax+0x1]
   14001311e:	lea    rdx,[rsp+0x70]
   140013123:	mov    rcx,rbp
   140013126:	call   QWORD PTR [rip+0x3de4c]        # 0x140050f78
   14001312c:	mov    edi,eax
   14001312e:	test   eax,eax
   140013130:	jne    0x140013192
   140013132:	and    QWORD PTR [rsp+0x28],0x0
   140013138:	and    QWORD PTR [rsp+0x20],0x0
   14001313e:	xor    r9d,r9d
   140013141:	xor    r8d,r8d
   140013144:	mov    rdx,rbp
   140013147:	mov    rcx,QWORD PTR [rsi+0x10]
   14001314b:	call   QWORD PTR [rip+0x26437]        # 0x140039588
   140013151:	test   eax,eax
   140013153:	jne    0x140013192
   140013155:	call   QWORD PTR [rip+0x26485]        # 0x1400395e0
   14001315b:	mov    edi,eax
   14001315d:	mov    ecx,eax
   14001315f:	call   0x140004908
   140013164:	mov    rbx,rax
   140013167:	mov    rdx,QWORD PTR [rsi+0x28]
   14001316b:	mov    rcx,QWORD PTR [rdx]
   14001316e:	mov    QWORD PTR [rsp+0x78],rax
   140013173:	mov    r10,QWORD PTR [rcx]
   140013176:	lea    r9,[rsp+0x78]
   14001317b:	mov    edx,0xa12305f5
   140013180:	mov    r8d,0x1
   140013186:	call   QWORD PTR [r10]
   140013189:	mov    rcx,rbx
   14001318c:	call   QWORD PTR [rip+0x26426]        # 0x1400395b8
   140013192:	mov    rcx,rbp
   140013195:	call   QWORD PTR [rip+0x263f5]        # 0x140039590
   14001319b:	nop
   14001319c:	lea    rax,[rsp+0x60]
   1400131a1:	mov    QWORD PTR [rsp+0x38],rax
   1400131a6:	mov    rdx,QWORD PTR [rsp+0x60]
   1400131ab:	add    rdx,0xffffffffffffffe8
   1400131af:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400131b4:	jg     0x1400131bf
   1400131b6:	mov    rcx,QWORD PTR [rdx]
   1400131b9:	mov    rax,QWORD PTR [rcx]
   1400131bc:	call   QWORD PTR [rax+0x8]
   1400131bf:	mov    eax,edi
   1400131c1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400131c6:	add    rsp,0x40
   1400131ca:	pop    rdi
   1400131cb:	pop    rsi
   1400131cc:	pop    rbp
   1400131cd:	ret    
   1400131ce:	int3   
   1400131cf:	int3   
   1400131d0:	mov    r11,rsp
   1400131d3:	mov    QWORD PTR [r11+0x8],rcx
   1400131d7:	push   rbx
   1400131d8:	sub    rsp,0x40
   1400131dc:	mov    ecx,0x4
   1400131e1:	mov    rax,r8
   1400131e4:	mov    r10,rdx
   1400131e7:	mov    DWORD PTR [rsp+0x30],ecx
   1400131eb:	mov    DWORD PTR [rsp+0x50],ecx
   1400131ef:	lea    rcx,[r11+0x8]
   1400131f3:	mov    QWORD PTR [r11-0x20],rcx
   1400131f7:	lea    rcx,[r11-0x14]
   1400131fb:	mov    ebx,r9d
   1400131fe:	mov    QWORD PTR [r11-0x28],rcx
   140013202:	lea    r9,[r11-0x18]
   140013206:	xor    r8d,r8d
   140013209:	mov    rcx,r10
   14001320c:	mov    rdx,rax
   14001320f:	call   QWORD PTR [rip+0x25e73]        # 0x140039088
   140013215:	mov    ecx,DWORD PTR [rsp+0x34]
   140013219:	test   eax,eax
   14001321b:	cmovne ecx,ebx
   14001321e:	mov    eax,ecx
   140013220:	add    rsp,0x40
   140013224:	pop    rbx
   140013225:	ret    
   140013226:	int3   
   140013227:	int3   
   140013228:	mov    QWORD PTR [rsp+0x8],rbx
   14001322d:	push   rdi
   14001322e:	sub    rsp,0x20
   140013232:	mov    ebx,edx
   140013234:	mov    rdi,rcx
   140013237:	call   0x140013258
   14001323c:	test   bl,0x1
   14001323f:	je     0x140013249
   140013241:	mov    rcx,rdi
   140013244:	call   0x140020e30
   140013249:	mov    rax,rdi
   14001324c:	mov    rbx,QWORD PTR [rsp+0x30]
   140013251:	add    rsp,0x20
   140013255:	pop    rdi
   140013256:	ret    
   140013257:	int3   
   140013258:	mov    QWORD PTR [rsp+0x8],rcx
   14001325d:	sub    rsp,0x38
   140013261:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001326a:	lea    rax,[rip+0x2b4e7]        # 0x14003e758
   140013271:	mov    QWORD PTR [rcx],rax
   140013274:	add    rsp,0x38
   140013278:	jmp    0x140012c2c
   14001327d:	int3   
   14001327e:	int3   
   14001327f:	int3   
   140013280:	mov    rax,rsp
   140013283:	push   rdi
   140013284:	push   r12
   140013286:	push   r15
   140013288:	sub    rsp,0x30
   14001328c:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140013294:	mov    QWORD PTR [rax+0x8],rbx
   140013298:	mov    QWORD PTR [rax+0x10],rbp
   14001329c:	mov    QWORD PTR [rax+0x18],rsi
   1400132a0:	mov    ebp,r9d
   1400132a3:	mov    ebx,r8d
   1400132a6:	mov    rdi,rcx
   1400132a9:	test   edx,edx
   1400132ab:	je     0x1400134f0
   1400132b1:	cmp    QWORD PTR [rcx+0x30],0x0
   1400132b6:	jne    0x1400134f0
   1400132bc:	mov    r15d,0xff
   1400132c2:	mov    r9d,r15d
   1400132c5:	mov    r8,QWORD PTR [rcx+0x10]
   1400132c9:	mov    rdx,QWORD PTR [rcx+0x8]
   1400132cd:	call   0x140012c60
   1400132d2:	test   eax,eax
   1400132d4:	jne    0x140013504
   1400132da:	lea    esi,[rax+0x3]
   1400132dd:	lea    r12d,[rax+0x2]
   1400132e1:	mov    rax,QWORD PTR [rdi+0x30]
   1400132e5:	test   bpl,bpl
   1400132e8:	jns    0x140013337
   1400132ea:	mov    DWORD PTR [rax+0x48],0x80000000
   1400132f1:	mov    rcx,QWORD PTR [rdi+0x30]
   1400132f5:	mov    eax,DWORD PTR [rdi+0x38]
   1400132f8:	sub    eax,r15d
   1400132fb:	cmp    eax,0xff00
   140013300:	ja     0x14001332d
   140013302:	movzx  eax,WORD PTR [rdi+0x38]
   140013306:	sub    ax,r15w
   14001330a:	mov    WORD PTR [rcx+0x48],ax
   14001330e:	mov    BYTE PTR [rcx+0x4a],r12b
   140013312:	mov    ecx,DWORD PTR [rdi+0x38]
   140013315:	mov    rax,QWORD PTR [rdi+0x30]
   140013319:	mov    DWORD PTR [rcx+rax*1-0xff],esi
   140013320:	mov    DWORD PTR [rcx+rax*1-0xfb],0x4
   14001332b:	jmp    0x14001335d
   14001332d:	mov    eax,0x57
   140013332:	jmp    0x140013504
   140013337:	cmp    BYTE PTR [rdi+0x40],0x0
   14001333b:	jne    0x140013348
   14001333d:	and    ebx,0x1fffffff
   140013343:	mov    DWORD PTR [rax+0x48],ebx
   140013346:	jmp    0x14001335d
   140013348:	mov    DWORD PTR [rax+0x48],ebx
   14001334b:	mov    rcx,rdi
   14001334e:	call   0x140012fa8
   140013353:	mov    ebx,eax
   140013355:	test   eax,eax
   140013357:	jne    0x1400134b3
   14001335d:	mov    rax,QWORD PTR [rdi+0x30]
   140013361:	movups xmm0,XMMWORD PTR [rip+0x2a558]        # 0x14003d8c0
   140013368:	movdqu XMMWORD PTR [rax+0x18],xmm0
   14001336d:	mov    rax,QWORD PTR [rdi+0x30]
   140013371:	mov    ebp,0x1000000
   140013376:	test   DWORD PTR [rax+0x48],ebp
   140013379:	je     0x1400133c2
   14001337b:	call   0x140013520
   140013380:	test   eax,eax
   140013382:	je     0x1400133c2
   140013384:	mov    rcx,QWORD PTR [rdi+0x30]
   140013388:	btr    DWORD PTR [rcx+0x48],0x18
   14001338d:	mov    ecx,eax
   14001338f:	call   0x140004908
   140013394:	mov    rbx,rax
   140013397:	mov    rcx,QWORD PTR [rdi+0x28]
   14001339b:	mov    rcx,QWORD PTR [rcx]
   14001339e:	mov    QWORD PTR [rsp+0x20],rax
   1400133a3:	mov    r10,QWORD PTR [rcx]
   1400133a6:	lea    r9,[rsp+0x20]
   1400133ab:	mov    edx,0xa12305f2
   1400133b0:	mov    r8d,0x1
   1400133b6:	call   QWORD PTR [r10]
   1400133b9:	mov    rcx,rbx
   1400133bc:	call   QWORD PTR [rip+0x261f6]        # 0x1400395b8
   1400133c2:	cmp    BYTE PTR [rdi+0x40],0x0
   1400133c6:	jne    0x1400133e2
   1400133c8:	lea    rcx,[rdi+0x20]
   1400133cc:	mov    r8,QWORD PTR [rdi+0x30]
   1400133d0:	lea    rdx,[rip+0x2b301]        # 0x14003e6d8
   1400133d7:	call   QWORD PTR [rip+0x25c8b]        # 0x140039068
   1400133dd:	jmp    0x140013488
   1400133e2:	mov    eax,DWORD PTR [rip+0x3ee44]        # 0x14005222c
   1400133e8:	test   al,0x1
   1400133ea:	jne    0x140013469
   1400133ec:	or     eax,0x1
   1400133ef:	mov    DWORD PTR [rip+0x3ee37],eax        # 0x14005222c
   1400133f5:	movups xmm0,XMMWORD PTR [rip+0x2ad5c]        # 0x14003e158
   1400133fc:	movups XMMWORD PTR [rip+0x3e8fd],xmm0        # 0x140051d00
   140013403:	mov    BYTE PTR [rip+0x3e906],0x24        # 0x140051d10
   14001340a:	xor    eax,eax
   14001340c:	mov    DWORD PTR [rip+0x3e8ff],eax        # 0x140051d11
   140013412:	mov    WORD PTR [rip+0x3e8fc],ax        # 0x140051d15
   140013419:	mov    BYTE PTR [rip+0x3e8f8],al        # 0x140051d17
   14001341f:	movups XMMWORD PTR [rip+0x3e8f2],xmm0        # 0x140051d18
   140013426:	mov    BYTE PTR [rip+0x3e8fb],0x32        # 0x140051d28
   14001342d:	mov    DWORD PTR [rip+0x3e8f6],eax        # 0x140051d29
   140013433:	mov    WORD PTR [rip+0x3e8f3],ax        # 0x140051d2d
   14001343a:	mov    BYTE PTR [rip+0x3e8ef],al        # 0x140051d2f
   140013440:	movups xmm0,XMMWORD PTR [rip+0x2ad01]        # 0x14003e148
   140013447:	movdqu XMMWORD PTR [rip+0x3e8e1],xmm0        # 0x140051d30
   14001344f:	mov    BYTE PTR [rip+0x3e8ea],0x2e        # 0x140051d40
   140013456:	mov    DWORD PTR [rip+0x3e8e5],eax        # 0x140051d41
   14001345c:	mov    WORD PTR [rip+0x3e8e2],ax        # 0x140051d45
   140013463:	mov    BYTE PTR [rip+0x3e8de],al        # 0x140051d47
   140013469:	mov    rdx,QWORD PTR [rdi+0x30]
   14001346d:	test   DWORD PTR [rdx+0x48],ebp
   140013470:	cmove  esi,r12d
   140013474:	lea    rcx,[rdi+0x20]
   140013478:	mov    r9d,esi
   14001347b:	lea    r8,[rip+0x3e87e]        # 0x140051d00
   140013482:	call   QWORD PTR [rip+0x3dae8]        # 0x140050f70
   140013488:	mov    ebx,eax
   14001348a:	test   eax,eax
   14001348c:	jne    0x1400134b3
   14001348e:	mov    rax,QWORD PTR [rdi+0x28]
   140013492:	mov    rcx,QWORD PTR [rax]
   140013495:	mov    rcx,QWORD PTR [rcx+0xca8]
   14001349c:	add    rcx,0x4908
   1400134a3:	mov    r8,QWORD PTR [rdi+0x10]
   1400134a7:	mov    edx,0x208
   1400134ac:	call   0x140002d7c
   1400134b1:	jmp    0x140013502
   1400134b3:	mov    rcx,QWORD PTR [rdi+0x30]
   1400134b7:	call   0x140020e30
   1400134bc:	and    QWORD PTR [rdi+0x30],0x0
   1400134c1:	cmp    ebx,0xb7
   1400134c7:	jne    0x1400134d0
   1400134c9:	mov    ebx,0xe12305f7
   1400134ce:	jmp    0x1400134da
   1400134d0:	cmp    ebx,0x5
   1400134d3:	jne    0x140013502
   1400134d5:	mov    ebx,0xe12305f9
   1400134da:	mov    rax,QWORD PTR [rdi+0x28]
   1400134de:	mov    rcx,QWORD PTR [rax]
   1400134e1:	mov    rax,QWORD PTR [rcx]
   1400134e4:	xor    r9d,r9d
   1400134e7:	xor    r8d,r8d
   1400134ea:	mov    edx,ebx
   1400134ec:	call   QWORD PTR [rax]
   1400134ee:	jmp    0x140013502
   1400134f0:	mov    rax,QWORD PTR [rcx+0x30]
   1400134f4:	neg    rax
   1400134f7:	sbb    ebx,ebx
   1400134f9:	and    ebx,0xffffffb2
   1400134fc:	add    ebx,0xe1230599
   140013502:	mov    eax,ebx
   140013504:	mov    rbx,QWORD PTR [rsp+0x50]
   140013509:	mov    rbp,QWORD PTR [rsp+0x58]
   14001350e:	mov    rsi,QWORD PTR [rsp+0x60]
   140013513:	add    rsp,0x30
   140013517:	pop    r15
   140013519:	pop    r12
   14001351b:	pop    rdi
   14001351c:	ret    
   14001351d:	int3   
   14001351e:	int3   
   14001351f:	int3   
   140013520:	rex push rbx
   140013522:	sub    rsp,0x60
   140013526:	mov    rax,QWORD PTR [rip+0x39f1b]        # 0x14004d448
   14001352d:	xor    rax,rsp
   140013530:	mov    QWORD PTR [rsp+0x50],rax
   140013535:	call   QWORD PTR [rip+0x25dd5]        # 0x140039310
   14001353b:	and    QWORD PTR [rsp+0x30],0x0
   140013541:	lea    r8,[rsp+0x30]
   140013546:	mov    rcx,rax
   140013549:	mov    edx,0x20
   14001354e:	call   QWORD PTR [rip+0x25b84]        # 0x1400390d8
   140013554:	test   eax,eax
   140013556:	je     0x1400135aa
   140013558:	lea    r8,[rsp+0x38]
   14001355d:	lea    rdx,[rip+0x2aee4]        # 0x14003e448
   140013564:	xor    ecx,ecx
   140013566:	call   QWORD PTR [rip+0x25b7c]        # 0x1400390e8
   14001356c:	mov    rax,QWORD PTR [rsp+0x38]
   140013571:	and    QWORD PTR [rsp+0x28],0x0
   140013577:	mov    rcx,QWORD PTR [rsp+0x30]
   14001357c:	and    QWORD PTR [rsp+0x20],0x0
   140013582:	lea    r8,[rsp+0x40]
   140013587:	mov    r9d,0x10
   14001358d:	xor    edx,edx
   14001358f:	mov    QWORD PTR [rsp+0x44],rax
   140013594:	mov    DWORD PTR [rsp+0x40],0x1
   14001359c:	mov    DWORD PTR [rsp+0x4c],0x2
   1400135a4:	call   QWORD PTR [rip+0x25b46]        # 0x1400390f0
   1400135aa:	call   QWORD PTR [rip+0x26030]        # 0x1400395e0
   1400135b0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400135b5:	mov    ebx,eax
   1400135b7:	test   rcx,rcx
   1400135ba:	je     0x1400135c2
   1400135bc:	call   QWORD PTR [rip+0x25ffe]        # 0x1400395c0
   1400135c2:	mov    eax,ebx
   1400135c4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400135c9:	xor    rcx,rsp
   1400135cc:	call   0x140020e50
   1400135d1:	add    rsp,0x60
   1400135d5:	pop    rbx
   1400135d6:	ret    
   1400135d7:	int3   
   1400135d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400135dd:	push   rdi
   1400135de:	sub    rsp,0x20
   1400135e2:	mov    ebx,edx
   1400135e4:	mov    rdi,rcx
   1400135e7:	call   0x140013608
   1400135ec:	test   bl,0x1
   1400135ef:	je     0x1400135f9
   1400135f1:	mov    rcx,rdi
   1400135f4:	call   0x140020e30
   1400135f9:	mov    rax,rdi
   1400135fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140013601:	add    rsp,0x20
   140013605:	pop    rdi
   140013606:	ret    
   140013607:	int3   
   140013608:	mov    QWORD PTR [rsp+0x8],rcx
   14001360d:	sub    rsp,0x38
   140013611:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001361a:	lea    rax,[rip+0x2b117]        # 0x14003e738
   140013621:	mov    QWORD PTR [rcx],rax
   140013624:	add    rsp,0x38
   140013628:	jmp    0x140012c2c
   14001362d:	int3   
   14001362e:	int3   
   14001362f:	int3   
   140013630:	mov    QWORD PTR [rsp+0x8],rbx
   140013635:	mov    QWORD PTR [rsp+0x18],rbp
   14001363a:	mov    QWORD PTR [rsp+0x20],rsi
   14001363f:	push   rdi
   140013640:	push   r14
   140013642:	push   r15
   140013644:	sub    rsp,0x30
   140013648:	xor    esi,esi
   14001364a:	mov    r14d,r9d
   14001364d:	mov    r15d,r8d
   140013650:	mov    ebp,edx
   140013652:	mov    rbx,rcx
   140013655:	test   edx,edx
   140013657:	je     0x1400136f4
   14001365d:	cmp    QWORD PTR [rcx+0x30],rsi
   140013661:	jne    0x1400136f4
   140013667:	mov    r8,QWORD PTR [rcx+0x10]
   14001366b:	mov    rdx,QWORD PTR [rcx+0x8]
   14001366f:	xor    r9d,r9d
   140013672:	call   0x140012c60
   140013677:	test   eax,eax
   140013679:	jne    0x14001372b
   14001367f:	mov    r8,QWORD PTR [rbx+0x30]
   140013683:	lea    rcx,[rbx+0x20]
   140013687:	lea    rdx,[rip+0x2b022]        # 0x14003e6b0
   14001368e:	call   QWORD PTR [rip+0x259d4]        # 0x140039068
   140013694:	mov    edi,eax
   140013696:	test   eax,eax
   140013698:	je     0x1400136cf
   14001369a:	mov    rcx,QWORD PTR [rbx+0x30]
   14001369e:	call   0x140020e30
   1400136a3:	and    QWORD PTR [rbx+0x30],rsi
   1400136a7:	mov    esi,0x1
   1400136ac:	cmp    edi,0xb7
   1400136b2:	jne    0x1400136f8
   1400136b4:	mov    rax,QWORD PTR [rbx+0x28]
   1400136b8:	mov    edi,0xe12305f8
   1400136bd:	xor    r9d,r9d
   1400136c0:	mov    rcx,QWORD PTR [rax]
   1400136c3:	xor    r8d,r8d
   1400136c6:	mov    edx,edi
   1400136c8:	mov    rax,QWORD PTR [rcx]
   1400136cb:	call   QWORD PTR [rax]
   1400136cd:	jmp    0x1400136f8
   1400136cf:	mov    rax,QWORD PTR [rbx+0x28]
   1400136d3:	mov    r8,QWORD PTR [rbx+0x10]
   1400136d7:	mov    edx,0x208
   1400136dc:	mov    rcx,QWORD PTR [rax]
   1400136df:	mov    rcx,QWORD PTR [rcx+0xca8]
   1400136e6:	add    rcx,0x4b10
   1400136ed:	call   0x140002d7c
   1400136f2:	jmp    0x1400136f8
   1400136f4:	mov    edi,DWORD PTR [rsp+0x58]
   1400136f8:	cmp    QWORD PTR [rbx+0x30],0x0
   1400136fd:	je     0x14001371f
   1400136ff:	mov    rax,QWORD PTR [rbx+0x20]
   140013703:	mov    r9,QWORD PTR [rsp+0x70]
   140013708:	mov    r8d,r14d
   14001370b:	mov    edx,r15d
   14001370e:	mov    ecx,ebp
   140013710:	mov    QWORD PTR [rsp+0x20],rax
   140013715:	call   QWORD PTR [rip+0x25955]        # 0x140039070
   14001371b:	mov    edi,eax
   14001371d:	jmp    0x140013729
   14001371f:	mov    eax,0xe1230599
   140013724:	test   esi,esi
   140013726:	cmove  edi,eax
   140013729:	mov    eax,edi
   14001372b:	mov    rbx,QWORD PTR [rsp+0x50]
   140013730:	mov    rbp,QWORD PTR [rsp+0x60]
   140013735:	mov    rsi,QWORD PTR [rsp+0x68]
   14001373a:	add    rsp,0x30
   14001373e:	pop    r15
   140013740:	pop    r14
   140013742:	pop    rdi
   140013743:	ret    
   140013744:	mov    QWORD PTR [rsp+0x8],rcx
   140013749:	push   rbx
   14001374a:	sub    rsp,0x30
   14001374e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013757:	mov    rbx,rcx
   14001375a:	mov    rcx,QWORD PTR [rcx+0x8]
   14001375e:	test   rcx,rcx
   140013761:	je     0x140013768
   140013763:	call   0x140012de8
   140013768:	mov    rcx,QWORD PTR [rbx+0x10]
   14001376c:	test   rcx,rcx
   14001376f:	je     0x140013776
   140013771:	call   0x140012de8
   140013776:	mov    rcx,QWORD PTR [rbx+0x8]
   14001377a:	test   rcx,rcx
   14001377d:	je     0x1400137a8
   14001377f:	mov    rax,QWORD PTR [rcx]
   140013782:	mov    edx,DWORD PTR [rip+0x3d7e4]        # 0x140050f6c
   140013788:	call   QWORD PTR [rax+0x8]
   14001378b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001378f:	call   0x140012e54
   140013794:	mov    rcx,QWORD PTR [rbx+0x8]
   140013798:	test   rcx,rcx
   14001379b:	je     0x1400137a8
   14001379d:	mov    rax,QWORD PTR [rcx]
   1400137a0:	mov    edx,0x1
   1400137a5:	call   QWORD PTR [rax+0x10]
   1400137a8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400137ac:	test   rcx,rcx
   1400137af:	je     0x1400137da
   1400137b1:	mov    rax,QWORD PTR [rcx]
   1400137b4:	mov    edx,DWORD PTR [rip+0x3aeba]        # 0x14004e674
   1400137ba:	call   QWORD PTR [rax+0x8]
   1400137bd:	mov    rcx,QWORD PTR [rbx+0x10]
   1400137c1:	call   0x140012e54
   1400137c6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400137ca:	test   rcx,rcx
   1400137cd:	je     0x1400137da
   1400137cf:	mov    rax,QWORD PTR [rcx]
   1400137d2:	mov    edx,0x1
   1400137d7:	call   QWORD PTR [rax+0x10]
   1400137da:	mov    rcx,QWORD PTR [rbx+0x50]
   1400137de:	call   0x140020e30
   1400137e3:	nop
   1400137e4:	mov    rcx,QWORD PTR [rbx+0x30]
   1400137e8:	test   rcx,rcx
   1400137eb:	je     0x1400137f2
   1400137ed:	call   0x140023328
   1400137f2:	add    rsp,0x30
   1400137f6:	pop    rbx
   1400137f7:	ret    
   1400137f8:	mov    rax,rsp
   1400137fb:	push   rsi
   1400137fc:	push   rdi
   1400137fd:	push   r12
   1400137ff:	push   r14
   140013801:	push   r15
   140013803:	sub    rsp,0x40
   140013807:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001380f:	mov    QWORD PTR [rax+0x10],rbx
   140013813:	mov    QWORD PTR [rax+0x18],rbp
   140013817:	mov    r15d,r9d
   14001381a:	mov    r12d,r8d
   14001381d:	mov    rbx,rcx
   140013820:	mov    r10,QWORD PTR [rcx+0x38]
   140013824:	xor    ecx,ecx
   140013826:	lea    r9d,[rcx+0x10]
   14001382a:	mov    r14,QWORD PTR [rsp+0x98]
   140013832:	test   r10,r10
   140013835:	je     0x14001386e
   140013837:	xor    edx,edx
   140013839:	cmp    rcx,r10
   14001383c:	jae    0x140013863
   14001383e:	mov    r8,QWORD PTR [rbx+0x30]
   140013842:	mov    rax,QWORD PTR [rdx+r8*1]
   140013846:	cmp    rax,QWORD PTR [r14]
   140013849:	jne    0x140013856
   14001384b:	mov    rax,QWORD PTR [rdx+r8*1+0x8]
   140013850:	cmp    rax,QWORD PTR [r14+0x8]
   140013854:	je     0x14001386e
   140013856:	inc    rcx
   140013859:	add    rdx,r9
   14001385c:	cmp    rcx,r10
   14001385f:	jb     0x14001383e
   140013861:	jmp    0x14001386e
   140013863:	mov    ecx,0x80070057
   140013868:	call   0x140003e64
   14001386d:	int3   
   14001386e:	cmp    rcx,r10
   140013871:	jne    0x140013980
   140013877:	mov    rsi,r10
   14001387a:	mov    r8,QWORD PTR [rbx+0x40]
   14001387e:	cmp    r10,r8
   140013881:	jb     0x14001396a
   140013887:	lea    rdi,[r10+0x1]
   14001388b:	cmp    rdi,r8
   14001388e:	jbe    0x14001396a
   140013894:	cmp    QWORD PTR [rbx+0x30],0x0
   140013899:	jne    0x1400138c3
   14001389b:	movsxd rax,DWORD PTR [rbx+0x48]
   14001389f:	cmp    rax,rdi
   1400138a2:	cmova  rdi,rax
   1400138a6:	mov    rdx,r9
   1400138a9:	mov    rcx,rdi
   1400138ac:	call   0x14002b46c
   1400138b1:	mov    QWORD PTR [rbx+0x30],rax
   1400138b5:	test   rax,rax
   1400138b8:	je     0x14001395f
   1400138be:	jmp    0x140013959
   1400138c3:	movsxd rcx,DWORD PTR [rbx+0x48]
   1400138c7:	test   rcx,rcx
   1400138ca:	jne    0x1400138df
   1400138cc:	mov    rcx,r8
   1400138cf:	shr    rcx,1
   1400138d2:	mov    rax,rdi
   1400138d5:	sub    rax,r8
   1400138d8:	cmp    rax,rcx
   1400138db:	cmova  rcx,rax
   1400138df:	lea    rax,[r8+rcx*1]
   1400138e3:	cmp    rdi,rax
   1400138e6:	cmovb  rdi,rax
   1400138ea:	mov    rdx,r9
   1400138ed:	mov    rcx,rdi
   1400138f0:	call   0x14002b46c
   1400138f5:	mov    rbp,rax
   1400138f8:	test   rax,rax
   1400138fb:	je     0x14001395f
   1400138fd:	mov    rdx,rsi
   140013900:	shl    rdx,0x4
   140013904:	mov    r9,rdx
   140013907:	mov    r8,QWORD PTR [rbx+0x30]
   14001390b:	mov    rcx,rax
   14001390e:	call   0x14002bfb0
   140013913:	test   eax,eax
   140013915:	je     0x14001394c
   140013917:	cmp    eax,0xc
   14001391a:	je     0x140013941
   14001391c:	cmp    eax,0x16
   14001391f:	je     0x140013936
   140013921:	cmp    eax,0x22
   140013924:	je     0x140013936
   140013926:	cmp    eax,0x50
   140013929:	je     0x14001394c
   14001392b:	mov    ecx,0x80004005
   140013930:	call   0x140003e64
   140013935:	int3   
   140013936:	mov    ecx,0x80070057
   14001393b:	call   0x140003e64
   140013940:	int3   
   140013941:	mov    ecx,0x8007000e
   140013946:	call   0x140003e64
   14001394b:	int3   
   14001394c:	mov    rcx,QWORD PTR [rbx+0x30]
   140013950:	call   0x140023328
   140013955:	mov    QWORD PTR [rbx+0x30],rbp
   140013959:	mov    QWORD PTR [rbx+0x40],rdi
   14001395d:	jmp    0x14001396a
   14001395f:	mov    ecx,0x8007000e
   140013964:	call   0x140003e64
   140013969:	int3   
   14001396a:	shl    rsi,0x4
   14001396e:	add    rsi,QWORD PTR [rbx+0x30]
   140013972:	je     0x14001397c
   140013974:	movups xmm0,XMMWORD PTR [r14]
   140013978:	movdqu XMMWORD PTR [rsi],xmm0
   14001397c:	inc    QWORD PTR [rbx+0x38]
   140013980:	cmp    QWORD PTR [rbx+0x50],0x0
   140013985:	jne    0x140013a17
   14001398b:	mov    rax,QWORD PTR [rbx]
   14001398e:	mov    rdi,QWORD PTR [rax+0x270]
   140013995:	mov    esi,0x220
   14001399a:	mov    ecx,esi
   14001399c:	call   0x140021a98
   1400139a1:	mov    QWORD PTR [rbx+0x50],rax
   1400139a5:	test   rax,rax
   1400139a8:	jne    0x1400139b4
   1400139aa:	mov    eax,0xe
   1400139af:	jmp    0x140013b0a
   1400139b4:	mov    r8,rsi
   1400139b7:	xor    edx,edx
   1400139b9:	mov    rcx,rax
   1400139bc:	call   0x1400260e0
   1400139c1:	mov    rax,QWORD PTR [rbx+0x50]
   1400139c5:	movups xmm0,XMMWORD PTR [rbx+0x18]
   1400139c9:	movdqu XMMWORD PTR [rax+0x8],xmm0
   1400139ce:	mov    rax,QWORD PTR [rbx]
   1400139d1:	mov    rdx,QWORD PTR [rax+0xca8]
   1400139d8:	mov    rcx,QWORD PTR [rbx+0x50]
   1400139dc:	mov    eax,DWORD PTR [rdx+0x8]
   1400139df:	mov    DWORD PTR [rcx],eax
   1400139e1:	mov    rcx,QWORD PTR [rbx+0x50]
   1400139e5:	mov    eax,DWORD PTR [rdx+0x54]
   1400139e8:	mov    DWORD PTR [rcx+0x4],eax
   1400139eb:	mov    rcx,QWORD PTR [rbx+0x50]
   1400139ef:	add    rcx,0x18
   1400139f3:	lea    r8,[rdi+0x14]
   1400139f7:	mov    edx,0x208
   1400139fc:	call   0x140002d7c
   140013a01:	mov    rax,QWORD PTR [rbx]
   140013a04:	mov    rax,QWORD PTR [rax+0xca8]
   140013a0b:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140013a0f:	movdqu XMMWORD PTR [rax+0x4d18],xmm0
   140013a17:	mov    rax,QWORD PTR [r14]
   140013a1a:	cmp    rax,QWORD PTR [rip+0x29e9f]        # 0x14003d8c0
   140013a21:	jne    0x140013a94
   140013a23:	mov    rax,QWORD PTR [r14+0x8]
   140013a27:	cmp    rax,QWORD PTR [rip+0x29e9a]        # 0x14003d8c8
   140013a2e:	jne    0x140013a94
   140013a30:	cmp    QWORD PTR [rbx+0x10],0x0
   140013a35:	jne    0x140013a8e
   140013a37:	mov    ecx,0x48
   140013a3c:	call   0x140021a98
   140013a41:	mov    rdi,rax
   140013a44:	mov    QWORD PTR [rsp+0x70],rax
   140013a49:	test   rax,rax
   140013a4c:	je     0x140013a7f
   140013a4e:	mov    cl,BYTE PTR [rbx+0x28]
   140013a51:	mov    BYTE PTR [rsp+0x20],cl
   140013a55:	lea    r9,[rip+0x2aca4]        # 0x14003e700
   140013a5c:	lea    r8,[rip+0x2ac75]        # 0x14003e6d8
   140013a63:	mov    rdx,rbx
   140013a66:	mov    rcx,rax
   140013a69:	call   0x14001299c
   140013a6e:	nop
   140013a6f:	lea    rax,[rip+0x2ace2]        # 0x14003e758
   140013a76:	mov    QWORD PTR [rdi],rax
   140013a79:	mov    BYTE PTR [rdi+0x40],0x0
   140013a7d:	jmp    0x140013a81
   140013a7f:	xor    edi,edi
   140013a81:	mov    QWORD PTR [rbx+0x10],rdi
   140013a85:	test   rdi,rdi
   140013a88:	je     0x1400139aa
   140013a8e:	mov    rcx,QWORD PTR [rbx+0x10]
   140013a92:	jmp    0x140013af2
   140013a94:	cmp    QWORD PTR [rbx+0x8],0x0
   140013a99:	jne    0x140013aee
   140013a9b:	mov    ecx,0x40
   140013aa0:	call   0x140021a98
   140013aa5:	mov    rdi,rax
   140013aa8:	mov    QWORD PTR [rsp+0x70],rax
   140013aad:	test   rax,rax
   140013ab0:	je     0x140013adf
   140013ab2:	mov    cl,BYTE PTR [rbx+0x29]
   140013ab5:	mov    BYTE PTR [rsp+0x20],cl
   140013ab9:	lea    r9,[rip+0x2ac58]        # 0x14003e718
   140013ac0:	lea    r8,[rip+0x2abe9]        # 0x14003e6b0
   140013ac7:	mov    rdx,rbx
   140013aca:	mov    rcx,rax
   140013acd:	call   0x14001299c
   140013ad2:	nop
   140013ad3:	lea    rax,[rip+0x2ac5e]        # 0x14003e738
   140013ada:	mov    QWORD PTR [rdi],rax
   140013add:	jmp    0x140013ae1
   140013adf:	xor    edi,edi
   140013ae1:	mov    QWORD PTR [rbx+0x8],rdi
   140013ae5:	test   rdi,rdi
   140013ae8:	je     0x1400139aa
   140013aee:	mov    rcx,QWORD PTR [rbx+0x8]
   140013af2:	mov    rax,QWORD PTR [rcx]
   140013af5:	mov    QWORD PTR [rsp+0x20],r14
   140013afa:	mov    r9d,DWORD PTR [rsp+0x90]
   140013b02:	mov    r8d,r15d
   140013b05:	mov    edx,r12d
   140013b08:	call   QWORD PTR [rax]
   140013b0a:	lea    r11,[rsp+0x40]
   140013b0f:	mov    rbx,QWORD PTR [r11+0x38]
   140013b13:	mov    rbp,QWORD PTR [r11+0x40]
   140013b17:	mov    rsp,r11
   140013b1a:	pop    r15
   140013b1c:	pop    r14
   140013b1e:	pop    r12
   140013b20:	pop    rdi
   140013b21:	pop    rsi
   140013b22:	ret    
   140013b23:	int3   
   140013b24:	mov    QWORD PTR [rsp+0x8],rbx
   140013b29:	mov    QWORD PTR [rsp+0x10],rsi
   140013b2e:	push   rdi
   140013b2f:	sub    rsp,0x20
   140013b33:	mov    rax,QWORD PTR [rcx]
   140013b36:	mov    r8d,0x1
   140013b3c:	mov    rdi,rdx
   140013b3f:	sub    r8d,DWORD PTR [rax-0x8]
   140013b43:	mov    eax,DWORD PTR [rax-0xc]
   140013b46:	mov    edx,0x104
   140013b4b:	sub    eax,edx
   140013b4d:	mov    rbx,rcx
   140013b50:	or     r8d,eax
   140013b53:	jge    0x140013b5a
   140013b55:	call   0x140005d68
   140013b5a:	mov    rcx,QWORD PTR [rbx]
   140013b5d:	mov    rdx,rdi
   140013b60:	call   QWORD PTR [rip+0x25aca]        # 0x140039630
   140013b66:	mov    rcx,QWORD PTR [rbx]
   140013b69:	xor    esi,esi
   140013b6b:	mov    edi,eax
   140013b6d:	test   rcx,rcx
   140013b70:	jne    0x140013b76
   140013b72:	mov    eax,esi
   140013b74:	jmp    0x140013b83
   140013b76:	movsxd rdx,DWORD PTR [rcx-0xc]
   140013b7a:	call   0x140029e88
   140013b7f:	test   eax,eax
   140013b81:	js     0x140013baa
   140013b83:	mov    rcx,QWORD PTR [rbx]
   140013b86:	cmp    eax,DWORD PTR [rcx-0xc]
   140013b89:	jg     0x140013baa
   140013b8b:	mov    DWORD PTR [rcx-0x10],eax
   140013b8e:	movsxd rcx,eax
   140013b91:	mov    rax,QWORD PTR [rbx]
   140013b94:	mov    rbx,QWORD PTR [rsp+0x30]
   140013b99:	mov    WORD PTR [rax+rcx*2],si
   140013b9d:	mov    rsi,QWORD PTR [rsp+0x38]
   140013ba2:	mov    eax,edi
   140013ba4:	add    rsp,0x20
   140013ba8:	pop    rdi
   140013ba9:	ret    
   140013baa:	mov    ecx,0x80070057
   140013baf:	call   0x140003e64
   140013bb4:	int3   
   140013bb5:	int3   
   140013bb6:	int3   
   140013bb7:	int3   
   140013bb8:	sub    rsp,0x28
   140013bbc:	mov    rcx,QWORD PTR [rcx]
   140013bbf:	test   rcx,rcx
   140013bc2:	je     0x140013bc9
   140013bc4:	call   0x140023328
   140013bc9:	add    rsp,0x28
   140013bcd:	ret    
   140013bce:	int3   
   140013bcf:	int3   
   140013bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140013bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140013bda:	mov    QWORD PTR [rsp+0x18],rsi
   140013bdf:	push   rdi
   140013be0:	push   r14
   140013be2:	push   r15
   140013be4:	sub    rsp,0x20
   140013be8:	mov    rax,QWORD PTR [rcx+0x18]
   140013bec:	mov    rbx,rcx
   140013bef:	cmp    rax,QWORD PTR [rcx+0x10]
   140013bf3:	jbe    0x140013bfc
   140013bf5:	xor    eax,eax
   140013bf7:	jmp    0x140013cb6
   140013bfc:	xor    edi,edi
   140013bfe:	lea    ebp,[rdi+0xa]
   140013c01:	test   rax,rax
   140013c04:	je     0x140013c0a
   140013c06:	lea    rbp,[rax+rax*1]
   140013c0a:	cmp    rbp,rax
   140013c0d:	jbe    0x140013cb1
   140013c13:	mov    esi,0x8
   140013c18:	mov    eax,esi
   140013c1a:	lea    r15,[rsi-0x9]
   140013c1e:	mul    rbp
   140013c21:	cmovo  rax,r15
   140013c25:	mov    rcx,rax
   140013c28:	call   0x14002b130
   140013c2d:	mov    r14,rax
   140013c30:	mov    eax,esi
   140013c32:	mul    rbp
   140013c35:	cmovo  rax,r15
   140013c39:	mov    rcx,rax
   140013c3c:	call   0x14002b130
   140013c41:	mov    rsi,rax
   140013c44:	test   r14,r14
   140013c47:	je     0x140013ca1
   140013c49:	test   rax,rax
   140013c4c:	je     0x140013ca1
   140013c4e:	cmp    QWORD PTR [rbx+0x10],rdi
   140013c52:	jbe    0x140013c7e
   140013c54:	mov    r8,r14
   140013c57:	sub    r8,rax
   140013c5a:	mov    rax,QWORD PTR [rbx+0x20]
   140013c5e:	lea    rdx,[rsi+rdi*8]
   140013c62:	mov    rcx,QWORD PTR [rax+rdi*8]
   140013c66:	mov    QWORD PTR [r8+rdx*1],rcx
   140013c6a:	mov    rax,QWORD PTR [rbx+0x28]
   140013c6e:	mov    rcx,QWORD PTR [rax+rdi*8]
   140013c72:	inc    rdi
   140013c75:	mov    QWORD PTR [rdx],rcx
   140013c78:	cmp    rdi,QWORD PTR [rbx+0x10]
   140013c7c:	jb     0x140013c5a
   140013c7e:	mov    rcx,QWORD PTR [rbx+0x20]
   140013c82:	call   0x14002b138
   140013c87:	mov    rcx,QWORD PTR [rbx+0x28]
   140013c8b:	call   0x14002b138
   140013c90:	mov    QWORD PTR [rbx+0x20],r14
   140013c94:	mov    QWORD PTR [rbx+0x28],rsi
   140013c98:	mov    QWORD PTR [rbx+0x18],rbp
   140013c9c:	jmp    0x140013bf5
   140013ca1:	mov    rcx,r14
   140013ca4:	call   0x14002b138
   140013ca9:	mov    rcx,rsi
   140013cac:	call   0x14002b138
   140013cb1:	mov    eax,0xc0000bbb
   140013cb6:	mov    rbx,QWORD PTR [rsp+0x40]
   140013cbb:	mov    rbp,QWORD PTR [rsp+0x48]
   140013cc0:	mov    rsi,QWORD PTR [rsp+0x50]
   140013cc5:	add    rsp,0x20
   140013cc9:	pop    r15
   140013ccb:	pop    r14
   140013ccd:	pop    rdi
   140013cce:	ret    
   140013ccf:	int3   
   140013cd0:	rex push rbx
   140013cd2:	sub    rsp,0x20
   140013cd6:	cmp    DWORD PTR [rcx],0x0
   140013cd9:	mov    rbx,rcx
   140013cdc:	je     0x140013ce8
   140013cde:	mov    rcx,QWORD PTR [rcx+0x8]
   140013ce2:	call   QWORD PTR [rip+0x259b0]        # 0x140039698
   140013ce8:	mov    rcx,QWORD PTR [rbx+0x20]
   140013cec:	call   0x14002b138
   140013cf1:	mov    rcx,QWORD PTR [rbx+0x28]
   140013cf5:	add    rsp,0x20
   140013cf9:	pop    rbx
   140013cfa:	jmp    0x14002b138
   140013cff:	int3   
   140013d00:	mov    rax,rsp
   140013d03:	push   rbp
   140013d04:	mov    rbp,rsp
   140013d07:	sub    rsp,0x70
   140013d0b:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   140013d13:	mov    QWORD PTR [rax+0x10],rbx
   140013d17:	mov    QWORD PTR [rax+0x18],rdi
   140013d1b:	mov    rdi,rcx
   140013d1e:	lea    rbx,[rcx+0x40]
   140013d22:	mov    QWORD PTR [rbp+0x10],rbx
   140013d26:	mov    eax,0x1
   140013d2b:	xchg   DWORD PTR [rbx+0x8],eax
   140013d2e:	test   eax,eax
   140013d30:	je     0x140013d3c
   140013d32:	mov    rcx,QWORD PTR [rbp+0x10]
   140013d36:	call   0x1400178cc
   140013d3b:	nop
   140013d3c:	lea    rax,[rip+0x29da5]        # 0x14003dae8
   140013d43:	mov    QWORD PTR [rbp-0x38],rax
   140013d47:	lea    rax,[rip+0x2b072]        # 0x14003edc0
   140013d4e:	mov    QWORD PTR [rbp-0x38],rax
   140013d52:	mov    DWORD PTR [rbp-0x10],0x0
   140013d59:	mov    DWORD PTR [rbp-0xc],0x0
   140013d60:	mov    QWORD PTR [rbp-0x18],0x0
   140013d68:	mov    DWORD PTR [rbp-0x8],0xffffffff
   140013d6f:	lea    rax,[rbp-0x30]
   140013d73:	mov    QWORD PTR [rbp-0x28],rax
   140013d77:	lea    rax,[rbp-0x30]
   140013d7b:	mov    QWORD PTR [rbp-0x30],rax
   140013d7f:	and    DWORD PTR [rbp-0x20],0x0
   140013d83:	lea    rcx,[rdi+0x8]
   140013d87:	mov    rax,QWORD PTR [rcx]
   140013d8a:	xor    r8d,r8d
   140013d8d:	lea    rdx,[rbp-0x38]
   140013d91:	call   QWORD PTR [rax+0x28]
   140013d94:	jmp    0x140013dad
   140013d96:	mov    r9,QWORD PTR [rbp-0x40]
   140013d9a:	mov    r8d,DWORD PTR [rbp-0x44]
   140013d9e:	mov    edx,DWORD PTR [rbp-0x48]
   140013da1:	lea    rcx,[rdi+0xc98]
   140013da8:	call   0x14001e7cc
   140013dad:	lea    rdx,[rbp-0x48]
   140013db1:	lea    rcx,[rbp-0x38]
   140013db5:	call   0x14001d218
   140013dba:	test   eax,eax
   140013dbc:	jne    0x140013d96
   140013dbe:	lea    rcx,[rbp-0x38]
   140013dc2:	call   0x14001ce18
   140013dc7:	nop
   140013dc8:	xor    eax,eax
   140013dca:	xchg   DWORD PTR [rbx+0x8],eax
   140013dcd:	lock or DWORD PTR [rsp],0x0
   140013dd2:	mov    rcx,QWORD PTR [rbp+0x10]
   140013dd6:	mov    eax,DWORD PTR [rcx+0xc]
   140013dd9:	test   eax,eax
   140013ddb:	jle    0x140013dfe
   140013ddd:	lock or DWORD PTR [rsp],0x0
   140013de2:	mov    eax,DWORD PTR [rcx+0xc]
   140013de5:	mov    rax,QWORD PTR [rbp+0x10]
   140013de9:	mov    rcx,QWORD PTR [rax]
   140013dec:	test   rcx,rcx
   140013def:	je     0x140013dfe
   140013df1:	mov    rcx,QWORD PTR [rbp+0x10]
   140013df5:	mov    rcx,QWORD PTR [rcx]
   140013df8:	call   QWORD PTR [rip+0x256da]        # 0x1400394d8
   140013dfe:	lea    r11,[rsp+0x70]
   140013e03:	mov    rbx,QWORD PTR [r11+0x18]
   140013e07:	mov    rdi,QWORD PTR [r11+0x20]
   140013e0b:	mov    rsp,r11
   140013e0e:	pop    rbp
   140013e0f:	ret    
   140013e10:	rex push rbx
   140013e12:	push   rbp
   140013e13:	push   rsi
   140013e14:	push   rdi
   140013e15:	push   r12
   140013e17:	push   r13
   140013e19:	push   r14
   140013e1b:	sub    rsp,0x50
   140013e1f:	mov    r8d,DWORD PTR [rip+0x3cf4e]        # 0x140050d74
   140013e26:	xor    ebp,ebp
   140013e28:	mov    rdi,rcx
   140013e2b:	lea    r14d,[rbp+0x1]
   140013e2f:	mov    DWORD PTR [rcx+0x8c],ebp
   140013e35:	mov    DWORD PTR [rip+0x3a860],r14d        # 0x14004e69c
   140013e3c:	test   r8d,r8d
   140013e3f:	jne    0x140013e50
   140013e41:	call   0x140004f38
   140013e46:	mov    r8d,r14d
   140013e49:	mov    DWORD PTR [rip+0x3cf24],r14d        # 0x140050d74
   140013e50:	mov    r9d,DWORD PTR [rip+0x3cf2d]        # 0x140050d84
   140013e57:	mov    ebx,r9d
   140013e5a:	test   r8d,r8d
   140013e5d:	jne    0x140013e75
   140013e5f:	call   0x140004f38
   140013e64:	mov    r9d,DWORD PTR [rip+0x3cf19]        # 0x140050d84
   140013e6b:	mov    r8d,r14d
   140013e6e:	mov    DWORD PTR [rip+0x3ceff],r14d        # 0x140050d74
   140013e75:	lea    eax,[rbx-0x1]
   140013e78:	mov    QWORD PTR [rip+0x3d121],rbp        # 0x140050fa0
   140013e7f:	mov    QWORD PTR [rip+0x3d112],rbp        # 0x140050f98
   140013e86:	movsxd rdx,eax
   140013e89:	mov    QWORD PTR [rip+0x3d0f8],rbp        # 0x140050f88
   140013e90:	mov    DWORD PTR [rip+0x3d0ee],ebp        # 0x140050f84
   140013e96:	add    rdx,0x4d28
   140013e9d:	lea    eax,[r9-0x1]
   140013ea1:	or     ebx,0xffffffff
   140013ea4:	mov    DWORD PTR [rip+0x3a7ee],ebx        # 0x14004e698
   140013eaa:	mov    DWORD PTR [rdi+0x98],ebp
   140013eb0:	not    eax
   140013eb2:	movsxd rcx,eax
   140013eb5:	and    rdx,rcx
   140013eb8:	mov    QWORD PTR [rip+0x3d0d1],rdx        # 0x140050f90
   140013ebf:	mov    rdx,QWORD PTR [rdi+0x8]
   140013ec3:	mov    rax,QWORD PTR [rdx+0x270]
   140013eca:	mov    ecx,DWORD PTR [rax+0xc]
   140013ecd:	mov    DWORD PTR [rdi+0x10],ecx
   140013ed0:	mov    rax,QWORD PTR [rdx+0x270]
   140013ed7:	mov    ecx,DWORD PTR [rax+0x8]
   140013eda:	mov    DWORD PTR [rdi+0x14],ecx
   140013edd:	test   r8d,r8d
   140013ee0:	jne    0x140013ef5
   140013ee2:	call   0x140004f38
   140013ee7:	mov    r9d,DWORD PTR [rip+0x3ce96]        # 0x140050d84
   140013eee:	mov    DWORD PTR [rip+0x3ce7f],r14d        # 0x140050d74
   140013ef5:	mov    eax,DWORD PTR [rdi+0x10]
   140013ef8:	xor    edx,edx
   140013efa:	mov    esi,0x8
   140013eff:	div    r9d
   140013f02:	lea    r13,[rsi-0x9]
   140013f06:	mov    DWORD PTR [rdi+0x18],eax
   140013f09:	mov    rax,QWORD PTR [rdi+0x8]
   140013f0d:	mov    rcx,QWORD PTR [rax+0x270]
   140013f14:	mov    eax,DWORD PTR [rcx+0x10]
   140013f17:	mov    ecx,eax
   140013f19:	mov    DWORD PTR [rdi+0x94],eax
   140013f1f:	mov    eax,esi
   140013f21:	mul    rcx
   140013f24:	cmovo  rax,r13
   140013f28:	mov    rcx,rax
   140013f2b:	call   0x14002b130
   140013f30:	mov    rcx,QWORD PTR [rdi+0x28]
   140013f34:	mov    r8d,esi
   140013f37:	mov    QWORD PTR [rdi+0x20],rax
   140013f3b:	mov    rax,QWORD PTR [rdi+0x8]
   140013f3f:	add    rax,0x3f0
   140013f45:	mov    QWORD PTR [rdi+0x50],rax
   140013f49:	mov    rax,QWORD PTR [rip+0x3d040]        # 0x140050f90
   140013f50:	mov    QWORD PTR [rcx],rax
   140013f53:	mov    eax,DWORD PTR [rdi+0x14]
   140013f56:	lea    rcx,[rip+0x3a74f]        # 0x14004e6ac
   140013f5d:	mov    DWORD PTR [rip+0x3a7d9],eax        # 0x14004e73c
   140013f63:	mov    eax,DWORD PTR [rdi+0x14]
   140013f66:	xor    edx,edx
   140013f68:	shr    eax,1
   140013f6a:	mov    DWORD PTR [rcx-0x4],eax
   140013f6d:	mov    eax,DWORD PTR [rcx]
   140013f6f:	lea    rcx,[rcx+0x14]
   140013f73:	imul   eax,DWORD PTR [rdi+0x14]
   140013f77:	div    DWORD PTR [rcx-0x10]
   140013f7a:	cmp    eax,r14d
   140013f7d:	cmovb  eax,r14d
   140013f81:	mov    DWORD PTR [rcx-0x1c],eax
   140013f84:	sub    r8,r14
   140013f87:	jne    0x140013f63
   140013f89:	mov    rcx,QWORD PTR [rdi+0x8]
   140013f8d:	mov    edx,ebx
   140013f8f:	mov    rcx,QWORD PTR [rcx+0x1f28]
   140013f96:	call   QWORD PTR [rip+0x254fc]        # 0x140039498
   140013f9c:	mov    rcx,QWORD PTR [rdi+0x8]
   140013fa0:	lea    rsi,[rcx+0x1f30]
   140013fa7:	test   rsi,rsi
   140013faa:	je     0x140013fce
   140013fac:	cmp    WORD PTR [rsi],bp
   140013faf:	je     0x140013fce
   140013fb1:	mov    rax,QWORD PTR [rcx]
   140013fb4:	lea    r9,[rsp+0x90]
   140013fbc:	mov    r8d,r14d
   140013fbf:	mov    edx,0x61230d1a
   140013fc4:	mov    QWORD PTR [rsp+0x90],rsi
   140013fcc:	call   QWORD PTR [rax]
   140013fce:	mov    rcx,QWORD PTR [rdi+0x8]
   140013fd2:	mov    r12d,0x2a0
   140013fd8:	add    rcx,0x10
   140013fdc:	add    rcx,r12
   140013fdf:	mov    rax,QWORD PTR [rcx]
   140013fe2:	call   QWORD PTR [rax+0x8]
   140013fe5:	test   rax,rax
   140013fe8:	je     0x140013ff2
   140013fea:	mov    eax,DWORD PTR [rax+0x498]
   140013ff0:	jmp    0x140013ff4
   140013ff2:	mov    eax,ebp
   140013ff4:	test   eax,eax
   140013ff6:	je     0x140014013
   140013ff8:	mov    rcx,QWORD PTR [rdi+0x8]
   140013ffc:	mov    DWORD PTR [rip+0x3a66e],ebp        # 0x14004e670
   140014002:	add    rcx,0x1cb8
   140014009:	call   0x1400186cc
   14001400e:	jmp    0x14001444c
   140014013:	test   rsi,rsi
   140014016:	je     0x14001443f
   14001401c:	cmp    WORD PTR [rsi],bp
   14001401f:	je     0x14001443f
   140014025:	mov    rcx,QWORD PTR [rdi+0x8]
   140014029:	mov    DWORD PTR [rdi+0x88],ebp
   14001402f:	cmp    DWORD PTR [rcx+0x280],ebx
   140014035:	je     0x140014100
   14001403b:	mov    QWORD PTR [rsp+0x30],rbp
   140014040:	add    rcx,0x1f30
   140014047:	xor    r9d,r9d
   14001404a:	xor    r8d,r8d
   14001404d:	mov    edx,0xc0000000
   140014052:	mov    DWORD PTR [rsp+0x28],0xe8000000
   14001405a:	mov    DWORD PTR [rsp+0x20],0x2
   140014062:	call   QWORD PTR [rip+0x25330]        # 0x140039398
   140014068:	mov    QWORD PTR [rdi+0x80],rax
   14001406f:	cmp    rax,r13
   140014072:	jne    0x1400140dd
   140014074:	call   QWORD PTR [rip+0x25566]        # 0x1400395e0
   14001407a:	mov    rcx,QWORD PTR [rdi+0x8]
   14001407e:	mov    DWORD PTR [rdi+0x88],r14d
   140014085:	mov    r10,QWORD PTR [rcx]
   140014088:	xor    r9d,r9d
   14001408b:	xor    r8d,r8d
   14001408e:	mov    edx,0xe1230540
   140014093:	mov    ebx,eax
   140014095:	call   QWORD PTR [r10]
   140014098:	mov    ecx,ebx
   14001409a:	call   0x140004908
   14001409f:	mov    rbx,rax
   1400140a2:	test   rax,rax
   1400140a5:	je     0x140014111
   1400140a7:	mov    rcx,QWORD PTR [rdi+0x8]
   1400140ab:	lea    r9,[rsp+0x40]
   1400140b0:	mov    r8d,0x2
   1400140b6:	mov    r10,QWORD PTR [rcx]
   1400140b9:	lea    rdx,[rcx+0x1f30]
   1400140c0:	mov    QWORD PTR [rsp+0x48],rax
   1400140c5:	mov    QWORD PTR [rsp+0x40],rdx
   1400140ca:	mov    edx,0xe1230541
   1400140cf:	call   QWORD PTR [r10]
   1400140d2:	mov    rcx,rbx
   1400140d5:	call   QWORD PTR [rip+0x254dd]        # 0x1400395b8
   1400140db:	jmp    0x140014111
   1400140dd:	mov    rcx,QWORD PTR [rdi+0x8]
   1400140e1:	add    rcx,0x10
   1400140e5:	add    rcx,r12
   1400140e8:	mov    rax,QWORD PTR [rcx]
   1400140eb:	call   QWORD PTR [rax+0x8]
   1400140ee:	test   rax,rax
   1400140f1:	je     0x1400140fa
   1400140f3:	mov    DWORD PTR [rax+0x494],r14d
   1400140fa:	mov    rcx,QWORD PTR [rdi+0x8]
   1400140fe:	jmp    0x140014107
   140014100:	mov    DWORD PTR [rdi+0x88],r14d
   140014107:	mov    rcx,QWORD PTR [rcx+0x78]
   14001410b:	call   QWORD PTR [rip+0x253c7]        # 0x1400394d8
   140014111:	mov    rcx,rdi
   140014114:	call   0x140015188
   140014119:	mov    ebx,ebp
   14001411b:	mov    rax,QWORD PTR [rdi+0x50]
   14001411f:	mov    rcx,QWORD PTR [rax+0x168]
   140014126:	test   rcx,rcx
   140014129:	je     0x140014131
   14001412b:	movzx  eax,WORD PTR [rcx+0x4]
   14001412f:	jmp    0x140014133
   140014131:	mov    eax,ebp
   140014133:	test   eax,eax
   140014135:	jne    0x14001416b
   140014137:	cmp    DWORD PTR [rdi+0x8c],ebp
   14001413d:	jne    0x1400142b6
   140014143:	mov    rcx,QWORD PTR [rdi+0x8]
   140014147:	add    rcx,0x10
   14001414b:	add    rcx,r12
   14001414e:	mov    rax,QWORD PTR [rcx]
   140014151:	call   QWORD PTR [rax+0x8]
   140014154:	test   rax,rax
   140014157:	je     0x140014161
   140014159:	mov    eax,DWORD PTR [rax+0x498]
   14001415f:	jmp    0x140014163
   140014161:	mov    eax,ebp
   140014163:	test   eax,eax
   140014165:	jne    0x1400142b6
   14001416b:	cmp    DWORD PTR [rip+0x3dbd7],ebp        # 0x140051d48
   140014171:	jne    0x14001419a
   140014173:	mov    eax,ebx
   140014175:	lea    rcx,[rax+rax*4]
   140014179:	lea    rax,[rip+0x3a520]        # 0x14004e6a0
   140014180:	mov    ecx,DWORD PTR [rax+rcx*4]
   140014183:	test   ecx,ecx
   140014185:	je     0x14001418f
   140014187:	cmp    DWORD PTR [rip+0x3dbc7],ebp        # 0x140051d54
   14001418d:	jne    0x140014194
   14001418f:	mov    ecx,0x64
   140014194:	call   QWORD PTR [rip+0x25456]        # 0x1400395f0
   14001419a:	mov    edx,ebx
   14001419c:	mov    rcx,rdi
   14001419f:	call   0x140014628
   1400141a4:	mov    ecx,ebp
   1400141a6:	cmp    eax,r14d
   1400141a9:	sete   cl
   1400141ac:	mov    DWORD PTR [rip+0x3db96],ecx        # 0x140051d48
   1400141b2:	test   eax,eax
   1400141b4:	js     0x1400141c1
   1400141b6:	mov    DWORD PTR [rip+0x3db97],r14d        # 0x140051d54
   1400141bd:	mov    ebx,ebp
   1400141bf:	jmp    0x1400141d5
   1400141c1:	lea    eax,[rbx+0x1]
   1400141c4:	cmp    eax,0x8
   1400141c7:	jae    0x1400141cd
   1400141c9:	mov    ebx,eax
   1400141cb:	jmp    0x1400141d5
   1400141cd:	mov    rcx,rdi
   1400141d0:	call   0x140015188
   1400141d5:	cmp    DWORD PTR [rdi+0x88],0x2
   1400141dc:	jne    0x14001411b
   1400141e2:	mov    edx,0x8
   1400141e7:	mov    rcx,rdi
   1400141ea:	call   0x140014628
   1400141ef:	cmp    eax,r14d
   1400141f2:	je     0x1400141e2
   1400141f4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400141f8:	call   0x140013d00
   1400141fd:	mov    rax,QWORD PTR [rdi+0x8]
   140014201:	mov    rcx,QWORD PTR [rax+0xca8]
   140014208:	mov    DWORD PTR [rcx+0xb4],r14d
   14001420f:	mov    rax,QWORD PTR [rdi+0x8]
   140014213:	lock add DWORD PTR [rax+0xf70],r14d
   14001421b:	mov    rcx,rdi
   14001421e:	call   0x140015188
   140014223:	mov    rcx,QWORD PTR [rdi+0x80]
   14001422a:	call   QWORD PTR [rip+0x25390]        # 0x1400395c0
   140014230:	mov    rcx,QWORD PTR [rdi+0x8]
   140014234:	mov    QWORD PTR [rdi+0x80],r13
   14001423b:	mov    rcx,QWORD PTR [rcx+0x1f28]
   140014242:	call   QWORD PTR [rip+0x25328]        # 0x140039570
   140014248:	mov    rax,QWORD PTR [rdi+0x8]
   14001424c:	mov    rcx,QWORD PTR [rax+0x1558]
   140014253:	mov    rax,QWORD PTR [rcx]
   140014256:	call   QWORD PTR [rax+0x18]
   140014259:	test   al,al
   14001425b:	je     0x140014285
   14001425d:	mov    rax,QWORD PTR [rdi+0x8]
   140014261:	lea    r9,[rsp+0x98]
   140014269:	mov    r8d,r14d
   14001426c:	mov    rcx,QWORD PTR [rax+0x1558]
   140014273:	mov    edx,0x61231770
   140014278:	mov    QWORD PTR [rsp+0x98],rsi
   140014280:	mov    rax,QWORD PTR [rcx]
   140014283:	call   QWORD PTR [rax]
   140014285:	mov    rcx,QWORD PTR [rdi+0x8]
   140014289:	xor    r9d,r9d
   14001428c:	xor    r8d,r8d
   14001428f:	mov    rax,QWORD PTR [rcx]
   140014292:	mov    edx,0x61230d21
   140014297:	call   QWORD PTR [rax]
   140014299:	mov    rcx,QWORD PTR [rdi+0x8]
   14001429d:	mov    DWORD PTR [rdi+0x88],r14d
   1400142a4:	mov    rcx,QWORD PTR [rcx+0xa8]
   1400142ab:	call   QWORD PTR [rip+0x25227]        # 0x1400394d8
   1400142b1:	jmp    0x14001411b
   1400142b6:	mov    ebx,0x7
   1400142bb:	mov    edx,ebx
   1400142bd:	mov    rcx,rdi
   1400142c0:	call   0x140014628
   1400142c5:	cmp    eax,r14d
   1400142c8:	je     0x1400142bb
   1400142ca:	mov    rcx,QWORD PTR [rdi+0xc8]
   1400142d1:	test   rcx,rcx
   1400142d4:	je     0x140014314
   1400142d6:	mov    eax,DWORD PTR [rcx+0x10]
   1400142d9:	mov    edx,DWORD PTR [rdi+0xd0]
   1400142df:	sub    edx,0x1c
   1400142e2:	imul   eax,DWORD PTR [rcx+0x8]
   1400142e6:	mov    ecx,eax
   1400142e8:	mov    rax,QWORD PTR [rip+0x3ccb9]        # 0x140050fa8
   1400142ef:	mov    DWORD PTR [rcx+rax*1+0x18],edx
   1400142f3:	mov    rcx,QWORD PTR [rdi+0xc0]
   1400142fa:	mov    rdx,QWORD PTR [rdi+0xc8]
   140014301:	add    rcx,0x3f0
   140014308:	call   0x14001ef98
   14001430d:	mov    QWORD PTR [rdi+0xc8],rbp
   140014314:	mov    edx,ebx
   140014316:	mov    rcx,rdi
   140014319:	call   0x140014628
   14001431e:	cmp    eax,r14d
   140014321:	je     0x140014314
   140014323:	mov    rcx,QWORD PTR [rdi+0x8]
   140014327:	mov    DWORD PTR [rip+0x3a343],ebp        # 0x14004e670
   14001432d:	add    rcx,0x1cb8
   140014334:	call   0x1400186cc
   140014339:	mov    edx,0x8
   14001433e:	mov    rcx,rdi
   140014341:	call   0x140014628
   140014346:	cmp    eax,r14d
   140014349:	je     0x140014339
   14001434b:	cmp    DWORD PTR [rdi+0x88],0x3
   140014352:	jne    0x14001436d
   140014354:	mov    r8d,DWORD PTR [rip+0x3cc35]        # 0x140050f90
   14001435b:	mov    rcx,QWORD PTR [rdi+0x8]
   14001435f:	mov    edx,0xe1230559
   140014364:	shr    r8d,0xa
   140014368:	call   0x14000820c
   14001436d:	cmp    QWORD PTR [rdi+0x80],r13
   140014374:	je     0x14001437f
   140014376:	mov    rcx,QWORD PTR [rdi+0x8]
   14001437a:	call   0x140013d00
   14001437f:	mov    rax,QWORD PTR [rdi+0x8]
   140014383:	lock add DWORD PTR [rax+0xf70],r14d
   14001438b:	mov    rcx,rdi
   14001438e:	call   0x140015188
   140014393:	mov    rcx,QWORD PTR [rdi+0x8]
   140014397:	xor    r9d,r9d
   14001439a:	mov    rax,QWORD PTR [rcx]
   14001439d:	xor    r8d,r8d
   1400143a0:	mov    edx,0x61230d22
   1400143a5:	call   QWORD PTR [rax]
   1400143a7:	cmp    QWORD PTR [rdi+0x80],r13
   1400143ae:	je     0x140014412
   1400143b0:	mov    rax,QWORD PTR [rdi+0x8]
   1400143b4:	mov    rcx,QWORD PTR [rax+0x1558]
   1400143bb:	mov    rax,QWORD PTR [rcx]
   1400143be:	call   QWORD PTR [rax+0x18]
   1400143c1:	test   al,al
   1400143c3:	je     0x1400143ed
   1400143c5:	mov    rax,QWORD PTR [rdi+0x8]
   1400143c9:	lea    r9,[rsp+0xa0]
   1400143d1:	mov    r8d,r14d
   1400143d4:	mov    rcx,QWORD PTR [rax+0x1558]
   1400143db:	mov    edx,0x61231770
   1400143e0:	mov    QWORD PTR [rsp+0xa0],rsi
   1400143e8:	mov    rax,QWORD PTR [rcx]
   1400143eb:	call   QWORD PTR [rax]
   1400143ed:	mov    rcx,QWORD PTR [rdi+0x80]
   1400143f4:	call   QWORD PTR [rip+0x251c6]        # 0x1400395c0
   1400143fa:	mov    rcx,QWORD PTR [rdi+0x8]
   1400143fe:	mov    QWORD PTR [rdi+0x80],r13
   140014405:	mov    rcx,QWORD PTR [rcx+0x1f28]
   14001440c:	call   QWORD PTR [rip+0x2515e]        # 0x140039570
   140014412:	mov    rcx,QWORD PTR [rdi+0x20]
   140014416:	call   0x14002b138
   14001441b:	mov    QWORD PTR [rdi+0x20],rbp
   14001441f:	cmp    DWORD PTR [rdi+0x90],ebp
   140014425:	je     0x14001444c
   140014427:	mov    rcx,QWORD PTR [rdi+0x8]
   14001442b:	add    rcx,0xb10
   140014432:	call   0x14001ea18
   140014437:	mov    DWORD PTR [rdi+0x90],ebp
   14001443d:	jmp    0x14001444c
   14001443f:	mov    rcx,QWORD PTR [rdi+0x20]
   140014443:	call   0x14002b138
   140014448:	mov    QWORD PTR [rdi+0x20],rbp
   14001444c:	add    rsp,0x50
   140014450:	pop    r14
   140014452:	pop    r13
   140014454:	pop    r12
   140014456:	pop    rdi
   140014457:	pop    rsi
   140014458:	pop    rbp
   140014459:	pop    rbx
   14001445a:	ret    
   14001445b:	int3   
   14001445c:	mov    QWORD PTR [rsp+0x8],rbx
   140014461:	push   rdi
   140014462:	sub    rsp,0x20
   140014466:	mov    ebx,edx
   140014468:	mov    rdi,rcx
   14001446b:	call   0x14001448c
   140014470:	test   bl,0x1
   140014473:	je     0x14001447d
   140014475:	mov    rcx,rdi
   140014478:	call   0x140020e30
   14001447d:	mov    rax,rdi
   140014480:	mov    rbx,QWORD PTR [rsp+0x30]
   140014485:	add    rsp,0x20
   140014489:	pop    rdi
   14001448a:	ret    
   14001448b:	int3   
   14001448c:	mov    QWORD PTR [rsp+0x8],rcx
   140014491:	push   rdi
   140014492:	sub    rsp,0x30
   140014496:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001449f:	mov    QWORD PTR [rsp+0x50],rbx
   1400144a4:	mov    rdi,rcx
   1400144a7:	lea    rax,[rip+0x2a2fa]        # 0x14003e7a8
   1400144ae:	mov    QWORD PTR [rcx],rax
   1400144b1:	mov    rcx,QWORD PTR [rcx+0x20]
   1400144b5:	call   0x14002b138
   1400144ba:	mov    rcx,QWORD PTR [rdi+0x48]
   1400144be:	test   rcx,rcx
   1400144c1:	je     0x1400144ca
   1400144c3:	call   QWORD PTR [rip+0x250f7]        # 0x1400395c0
   1400144c9:	nop
   1400144ca:	lea    rbx,[rdi+0xa0]
   1400144d1:	mov    QWORD PTR [rsp+0x48],rbx
   1400144d6:	mov    rcx,QWORD PTR [rbx]
   1400144d9:	test   rcx,rcx
   1400144dc:	je     0x1400144f1
   1400144de:	call   0x140020e30
   1400144e3:	and    QWORD PTR [rbx],0x0
   1400144e7:	and    QWORD PTR [rbx+0x8],0x0
   1400144ec:	and    QWORD PTR [rbx+0x10],0x0
   1400144f1:	lea    rcx,[rdi+0x58]
   1400144f5:	mov    QWORD PTR [rsp+0x48],rcx
   1400144fa:	mov    rcx,QWORD PTR [rcx+0x18]
   1400144fe:	call   0x14002b138
   140014503:	nop
   140014504:	lea    rax,[rip+0x2973d]        # 0x14003dc48
   14001450b:	mov    QWORD PTR [rdi],rax
   14001450e:	mov    rbx,QWORD PTR [rsp+0x50]
   140014513:	add    rsp,0x30
   140014517:	pop    rdi
   140014518:	ret    
   140014519:	int3   
   14001451a:	int3   
   14001451b:	int3   
   14001451c:	mov    QWORD PTR [rsp+0x8],rbx
   140014521:	mov    QWORD PTR [rsp+0x10],rbp
   140014526:	mov    QWORD PTR [rsp+0x20],rsi
   14001452b:	push   rdi
   14001452c:	push   r14
   14001452e:	push   r15
   140014530:	sub    rsp,0x30
   140014534:	mov    r9d,DWORD PTR [rip+0x3c839]        # 0x140050d74
   14001453b:	mov    ebx,r8d
   14001453e:	mov    rsi,rdx
   140014541:	mov    r14,rcx
   140014544:	mov    r15d,0x1
   14001454a:	test   r9d,r9d
   14001454d:	jne    0x14001455e
   14001454f:	call   0x140004f38
   140014554:	mov    r9d,r15d
   140014557:	mov    DWORD PTR [rip+0x3c816],r15d        # 0x140050d74
   14001455e:	mov    ecx,DWORD PTR [rip+0x3c820]        # 0x140050d84
   140014564:	xor    edx,edx
   140014566:	mov    eax,ebx
   140014568:	div    ecx
   14001456a:	xor    edi,edi
   14001456c:	mov    ebp,eax
   14001456e:	test   eax,eax
   140014570:	je     0x140014607
   140014576:	mov    rbx,QWORD PTR [rsp+0x70]
   14001457b:	test   r9d,r9d
   14001457e:	jne    0x140014592
   140014580:	call   0x140004f38
   140014585:	mov    ecx,DWORD PTR [rip+0x3c7f9]        # 0x140050d84
   14001458b:	mov    DWORD PTR [rip+0x3c7e2],r15d        # 0x140050d74
   140014592:	mov    rdx,QWORD PTR [rsi]
   140014595:	mov    r8d,ecx
   140014598:	xor    r9d,r9d
   14001459b:	mov    rcx,r14
   14001459e:	mov    QWORD PTR [rsp+0x20],rbx
   1400145a3:	call   QWORD PTR [rip+0x24c5f]        # 0x140039208
   1400145a9:	test   eax,eax
   1400145ab:	jne    0x1400145d2
   1400145ad:	call   QWORD PTR [rip+0x2502d]        # 0x1400395e0
   1400145b3:	cmp    eax,0x3e5
   1400145b8:	jne    0x140014623
   1400145ba:	lea    r8,[rsp+0x60]
   1400145bf:	mov    r9d,r15d
   1400145c2:	mov    rdx,rbx
   1400145c5:	mov    rcx,r14
   1400145c8:	call   QWORD PTR [rip+0x24fd2]        # 0x1400395a0
   1400145ce:	test   eax,eax
   1400145d0:	je     0x140014623
   1400145d2:	mov    r9d,DWORD PTR [rip+0x3c79b]        # 0x140050d74
   1400145d9:	test   r9d,r9d
   1400145dc:	jne    0x1400145ed
   1400145de:	call   0x140004f38
   1400145e3:	mov    r9d,r15d
   1400145e6:	mov    DWORD PTR [rip+0x3c787],r15d        # 0x140050d74
   1400145ed:	movsxd rcx,DWORD PTR [rip+0x3c790]        # 0x140050d84
   1400145f4:	add    edi,r15d
   1400145f7:	add    rsi,0x8
   1400145fb:	add    QWORD PTR [rbx+0x10],rcx
   1400145ff:	cmp    edi,ebp
   140014601:	jb     0x14001457b
   140014607:	mov    eax,r15d
   14001460a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001460f:	mov    rbp,QWORD PTR [rsp+0x58]
   140014614:	mov    rsi,QWORD PTR [rsp+0x68]
   140014619:	add    rsp,0x30
   14001461d:	pop    r15
   14001461f:	pop    r14
   140014621:	pop    rdi
   140014622:	ret    
   140014623:	xor    eax,eax
   140014625:	jmp    0x14001460a
   140014627:	int3   
   140014628:	mov    rax,rsp
   14001462b:	push   rbp
   14001462c:	push   r12
   14001462e:	push   r13
   140014630:	push   r14
   140014632:	push   r15
   140014634:	lea    rbp,[rax-0xc8]
   14001463b:	sub    rsp,0x1a0
   140014642:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   14001464a:	mov    QWORD PTR [rax+0x10],rbx
   14001464e:	mov    QWORD PTR [rax+0x18],rsi
   140014652:	mov    QWORD PTR [rax+0x20],rdi
   140014656:	mov    rax,QWORD PTR [rip+0x38deb]        # 0x14004d448
   14001465d:	xor    rax,rsp
   140014660:	mov    QWORD PTR [rbp+0x90],rax
   140014667:	mov    r14d,edx
   14001466a:	mov    DWORD PTR [rsp+0x78],edx
   14001466e:	mov    rdi,rcx
   140014671:	mov    QWORD PTR [rbp-0x58],rcx
   140014675:	mov    eax,DWORD PTR [rip+0x3dbb5]        # 0x140052230
   14001467b:	mov    r12d,0x1
   140014681:	test   r12b,al
   140014684:	jne    0x1400146a4
   140014686:	or     eax,r12d
   140014689:	mov    DWORD PTR [rip+0x3dba1],eax        # 0x140052230
   14001468f:	mov    edx,DWORD PTR [rcx+0x14]
   140014692:	call   0x14001537c
   140014697:	lea    rcx,[rip+0x24546]        # 0x140038be4
   14001469e:	call   0x140021890
   1400146a3:	nop
   1400146a4:	mov    ebx,DWORD PTR [rdi+0x14]
   1400146a7:	mov    edx,ebx
   1400146a9:	lea    rcx,[rbp-0x78]
   1400146ad:	call   0x140015690
   1400146b2:	nop
   1400146b3:	mov    DWORD PTR [rbp-0x80],ebx
   1400146b6:	xor    esi,esi
   1400146b8:	mov    DWORD PTR [rbp-0x7c],esi
   1400146bb:	mov    r15d,0xffffffff
   1400146c1:	mov    DWORD PTR [rsp+0x50],r15d
   1400146c6:	mov    r13d,esi
   1400146c9:	mov    QWORD PTR [rsp+0x60],rsi
   1400146ce:	mov    DWORD PTR [rsp+0x58],esi
   1400146d2:	mov    rbx,QWORD PTR [rdi+0x50]
   1400146d6:	lea    rcx,[rbx+0x190]
   1400146dd:	mov    rax,QWORD PTR [rcx]
   1400146e0:	call   QWORD PTR [rax+0x8]
   1400146e3:	mov    r9,rax
   1400146e6:	mov    r8,QWORD PTR [rbx+0x168]
   1400146ed:	mov    rdx,QWORD PTR [r8]
   1400146f0:	cmp    edx,r15d
   1400146f3:	je     0x140014ca0
   1400146f9:	movsxd rbx,edx
   1400146fc:	add    rbx,r9
   1400146ff:	mov    WORD PTR [rbp+0x4],si
   140014703:	mov    rax,rdx
   140014706:	shr    rax,0x30
   14001470a:	add    ax,r12w
   14001470e:	mov    WORD PTR [rbp+0x6],ax
   140014712:	or     DWORD PTR [rbp+0x0],0xffffffff
   140014716:	mov    rcx,QWORD PTR [rbp+0x0]
   14001471a:	mov    rax,rdx
   14001471d:	lock cmpxchg QWORD PTR [r8],rcx
   140014722:	jne    0x1400146ed
   140014724:	test   rbx,rbx
   140014727:	je     0x140014ca0
   14001472d:	mov    ebx,DWORD PTR [rbx+0x8]
   140014730:	mov    DWORD PTR [rsp+0x50],ebx
   140014734:	cmp    ebx,r15d
   140014737:	je     0x1400147c2
   14001473d:	mov    r15d,DWORD PTR [rbp-0x80]
   140014741:	mov    esi,DWORD PTR [rbp-0x7c]
   140014744:	mov    rcx,QWORD PTR [rdi+0x50]
   140014748:	add    rcx,0x190
   14001474f:	mov    rax,QWORD PTR [rcx]
   140014752:	call   QWORD PTR [rax+0x8]
   140014755:	mov    r14,rax
   140014758:	mov    eax,ebx
   14001475a:	shl    rax,0x6
   14001475e:	add    r14,rax
   140014761:	cmp    esi,r15d
   140014764:	jl     0x140014787
   140014766:	lea    eax,[r15+r15*1]
   14001476a:	mov    edx,0x2
   14001476f:	cmp    eax,edx
   140014771:	cmovg  edx,eax
   140014774:	mov    DWORD PTR [rbp-0x80],edx
   140014777:	lea    rcx,[rbp-0x78]
   14001477b:	call   0x1400156e4
   140014780:	mov    r15d,DWORD PTR [rbp-0x80]
   140014784:	mov    esi,DWORD PTR [rbp-0x7c]
   140014787:	movsxd rax,esi
   14001478a:	add    esi,r12d
   14001478d:	mov    DWORD PTR [rbp-0x7c],esi
   140014790:	mov    ecx,DWORD PTR [rbp-0x70]
   140014793:	imul   rcx,rax
   140014797:	mov    rax,QWORD PTR [rbp-0x60]
   14001479b:	mov    DWORD PTR [rcx+rax*1],ebx
   14001479e:	mov    rbx,QWORD PTR [r14]
   1400147a1:	mov    r14d,0xffffffff
   1400147a7:	cmp    rbx,r14
   1400147aa:	je     0x1400147b2
   1400147ac:	shr    rbx,0x6
   1400147b0:	jmp    0x1400147b5
   1400147b2:	mov    ebx,r14d
   1400147b5:	mov    DWORD PTR [rsp+0x50],ebx
   1400147b9:	cmp    ebx,r14d
   1400147bc:	jne    0x140014744
   1400147be:	xor    esi,esi
   1400147c0:	jmp    0x1400147c5
   1400147c2:	mov    r14,r15
   1400147c5:	mov    eax,DWORD PTR [rbp-0x7c]
   1400147c8:	test   eax,eax
   1400147ca:	jle    0x140014c90
   1400147d0:	sub    eax,r12d
   1400147d3:	mov    DWORD PTR [rbp-0x7c],eax
   1400147d6:	movsxd rcx,eax
   1400147d9:	mov    eax,DWORD PTR [rbp-0x70]
   1400147dc:	imul   rcx,rax
   1400147e0:	mov    rax,QWORD PTR [rbp-0x60]
   1400147e4:	mov    r15d,DWORD PTR [rcx+rax*1]
   1400147e8:	mov    DWORD PTR [rsp+0x68],r15d
   1400147ed:	mov    DWORD PTR [rsp+0x50],r15d
   1400147f2:	mov    rcx,QWORD PTR [rdi+0x50]
   1400147f6:	add    rcx,0x190
   1400147fd:	mov    rax,QWORD PTR [rcx]
   140014800:	call   QWORD PTR [rax+0x8]
   140014803:	mov    r13,rax
   140014806:	mov    eax,r15d
   140014809:	shl    rax,0x6
   14001480d:	add    r13,rax
   140014810:	mov    QWORD PTR [rbp-0x20],r13
   140014814:	mov    ebx,DWORD PTR [r13+0x10]
   140014818:	imul   ebx,DWORD PTR [r13+0x8]
   14001481d:	add    rbx,QWORD PTR [rip+0x3c784]        # 0x140050fa8
   140014824:	mov    QWORD PTR [rbp-0x48],rbx
   140014828:	mov    DWORD PTR [r13+0xc],r14d
   14001482c:	mov    DWORD PTR [r13+0x14],0x3
   140014834:	or     DWORD PTR [rbx+0x14],0x4
   140014838:	mov    r12d,DWORD PTR [rbx+0x10]
   14001483c:	mov    DWORD PTR [rsp+0x54],r12d
   140014841:	cmp    DWORD PTR [rdi+0x88],0x3
   140014848:	jne    0x140014863
   14001484a:	mov    DWORD PTR [r13+0x14],0x1
   140014852:	mov    edx,r15d
   140014855:	mov    rcx,QWORD PTR [rdi+0x50]
   140014859:	call   0x14001f03c
   14001485e:	jmp    0x140014b87
   140014863:	mov    ecx,DWORD PTR [rbx+0x4]
   140014866:	test   ecx,ecx
   140014868:	jne    0x1400149a5
   14001486e:	mov    esi,DWORD PTR [rbx+0x2c]
   140014871:	mov    r14d,DWORD PTR [rbx+0x28]
   140014875:	mov    r15d,DWORD PTR [rbx+0x30]
   140014879:	mov    r13d,DWORD PTR [rbx+0x8]
   14001487d:	mov    r12d,DWORD PTR [rbx+0xc]
   140014881:	movzx  eax,BYTE PTR [rbx+0x34]
   140014885:	add    rax,0x7
   140014889:	lea    rax,[rbx+rax*8]
   14001488d:	mov    QWORD PTR [rsp+0x70],rax
   140014892:	mov    rcx,QWORD PTR [rdi+0x8]
   140014896:	mov    rax,QWORD PTR [rcx+0xca8]
   14001489d:	mov    edx,DWORD PTR [rax+0x20c]
   1400148a3:	mov    DWORD PTR [rsp+0x6c],edx
   1400148a7:	movzx  edi,BYTE PTR [rbx+0x35]
   1400148ab:	mov    ebx,DWORD PTR [rip+0x39deb]        # 0x14004e69c
   1400148b1:	lea    rax,[rcx+0x1018]
   1400148b8:	mov    QWORD PTR [rbp-0x30],rax
   1400148bc:	mov    rcx,rax
   1400148bf:	call   0x140010d78
   1400148c4:	mov    rcx,rax
   1400148c7:	mov    QWORD PTR [rbp-0x40],rax
   1400148cb:	mov    DWORD PTR [rax],0x6
   1400148d1:	mov    DWORD PTR [rax+0x4],ebx
   1400148d4:	mov    eax,DWORD PTR [rsp+0x54]
   1400148d8:	mov    DWORD PTR [rcx+0x20],eax
   1400148db:	mov    DWORD PTR [rcx+0x14],esi
   1400148de:	mov    DWORD PTR [rcx+0x10],r14d
   1400148e2:	mov    DWORD PTR [rcx+0xc],r15d
   1400148e6:	mov    DWORD PTR [rcx+0x18],r13d
   1400148ea:	mov    DWORD PTR [rcx+0x1c],edi
   1400148ed:	mov    DWORD PTR [rcx+0x24],r12d
   1400148f1:	mov    r14d,DWORD PTR [rsp+0x6c]
   1400148f6:	mov    BYTE PTR [rcx+0x28],r14b
   1400148fa:	xor    esi,esi
   1400148fc:	mov    r15,QWORD PTR [rsp+0x70]
   140014901:	bt     r13d,0x8
   140014906:	jae    0x14001492d
   140014908:	test   r14d,r14d
   14001490b:	je     0x14001492d
   14001490d:	mov    rbx,r15
   140014910:	mov    edi,r14d
   140014913:	cmp    QWORD PTR [rbx],rsi
   140014916:	jne    0x140014920
   140014918:	call   0x140006628
   14001491d:	mov    QWORD PTR [rbx],rax
   140014920:	add    rbx,0x8
   140014924:	dec    rdi
   140014927:	jne    0x140014913
   140014929:	mov    rcx,QWORD PTR [rbp-0x40]
   14001492d:	mov    rbx,r14
   140014930:	shl    rbx,0x3
   140014934:	mov    rdx,QWORD PTR [rbp-0x48]
   140014938:	add    rdx,0x38
   14001493c:	add    rcx,0x2c
   140014940:	mov    r8,rbx
   140014943:	call   0x140020e80
   140014948:	mov    rdi,QWORD PTR [rbp-0x40]
   14001494c:	movzx  eax,BYTE PTR [rdi+0x28]
   140014950:	lea    rcx,[rdi+0x2c]
   140014954:	lea    rcx,[rcx+rax*8]
   140014958:	mov    r8,rbx
   14001495b:	mov    rdx,r15
   14001495e:	call   0x140020e80
   140014963:	mov    rdx,rdi
   140014966:	mov    rcx,QWORD PTR [rbp-0x30]
   14001496a:	call   0x140010f08
   14001496f:	mov    rbx,QWORD PTR [rbp-0x48]
   140014973:	mov    al,BYTE PTR [rbx+0x35]
   140014976:	and    al,0x1
   140014978:	neg    al
   14001497a:	sbb    ecx,ecx
   14001497c:	and    ecx,0x2
   14001497f:	add    ecx,0x2
   140014982:	mov    rdi,QWORD PTR [rbp-0x58]
   140014986:	or     DWORD PTR [rdi+0x98],ecx
   14001498c:	mov    r15d,DWORD PTR [rsp+0x68]
   140014991:	mov    r12d,DWORD PTR [rsp+0x54]
   140014996:	mov    r13,QWORD PTR [rbp-0x20]
   14001499a:	mov    r14d,0xffffffff
   1400149a0:	jmp    0x140014b87
   1400149a5:	lea    eax,[rcx-0x1]
   1400149a8:	test   eax,0xfffffff7
   1400149ad:	je     0x140014afb
   1400149b3:	cmp    ecx,0x4
   1400149b6:	jne    0x1400149e9
   1400149b8:	mov    rcx,QWORD PTR [rdi+0x8]
   1400149bc:	add    rcx,0x1018
   1400149c3:	mov    eax,DWORD PTR [rbx+0xc]
   1400149c6:	mov    DWORD PTR [rsp+0x40],eax
   1400149ca:	mov    rax,QWORD PTR [rbx+0x20]
   1400149ce:	mov    QWORD PTR [rsp+0x38],rax
   1400149d3:	mov    rax,QWORD PTR [rbx+0x18]
   1400149d7:	mov    QWORD PTR [rsp+0x30],rax
   1400149dc:	mov    DWORD PTR [rsp+0x20],0x3
   1400149e4:	jmp    0x140014a86
   1400149e9:	cmp    ecx,0x5
   1400149ec:	je     0x140014aa8
   1400149f2:	cmp    ecx,0x8
   1400149f5:	je     0x140014aa8
   1400149fb:	cmp    ecx,0x6
   1400149fe:	jne    0x140014a1a
   140014a00:	lea    rcx,[rdi+0xa0]
   140014a07:	mov    rdx,r13
   140014a0a:	call   0x140015b10
   140014a0f:	mov    r12d,0x1
   140014a15:	jmp    0x1400147c5
   140014a1a:	cmp    ecx,0x7
   140014a1d:	jne    0x140014a33
   140014a1f:	lea    rcx,[rdi+0xa0]
   140014a26:	mov    edx,r15d
   140014a29:	call   0x140015cd0
   140014a2e:	jmp    0x140014b87
   140014a33:	mov    eax,ecx
   140014a35:	mov    edx,0x80000000
   140014a3a:	and    eax,edx
   140014a3c:	cmp    eax,edx
   140014a3e:	jne    0x140014a5c
   140014a40:	mov    rcx,QWORD PTR [rdi+0x8]
   140014a44:	add    rcx,0x1018
   140014a4b:	mov    DWORD PTR [rsp+0x40],esi
   140014a4f:	or     QWORD PTR [rsp+0x38],0xffffffffffffffff
   140014a55:	mov    QWORD PTR [rsp+0x30],rsi
   140014a5a:	jmp    0x140014a82
   140014a5c:	cmp    ecx,0xa
   140014a5f:	jne    0x140014a97
   140014a61:	mov    rcx,QWORD PTR [rdi+0x8]
   140014a65:	add    rcx,0x1018
   140014a6c:	mov    DWORD PTR [rsp+0x40],esi
   140014a70:	mov    rax,QWORD PTR [rbx+0x30]
   140014a74:	mov    QWORD PTR [rsp+0x38],rax
   140014a79:	mov    rax,QWORD PTR [rbx+0x28]
   140014a7d:	mov    QWORD PTR [rsp+0x30],rax
   140014a82:	mov    DWORD PTR [rsp+0x20],esi
   140014a86:	mov    r9d,DWORD PTR [rbx+0x8]
   140014a8a:	mov    r8d,r12d
   140014a8d:	call   0x140011c70
   140014a92:	jmp    0x140014b87
   140014a97:	mov    edx,r15d
   140014a9a:	mov    rcx,QWORD PTR [rdi+0x50]
   140014a9e:	call   0x14001f03c
   140014aa3:	jmp    0x140014a0f
   140014aa8:	mov    rax,QWORD PTR [rip+0x3c4e9]        # 0x140050f98
   140014aaf:	mov    QWORD PTR [rbx+0x28],rax
   140014ab3:	mov    rax,QWORD PTR [rdi+0x8]
   140014ab7:	mov    rcx,QWORD PTR [rax+0xca8]
   140014abe:	mov    rax,QWORD PTR [rip+0x3c4cb]        # 0x140050f90
   140014ac5:	mov    QWORD PTR [rcx+0x89c],rax
   140014acc:	mov    rax,QWORD PTR [rdi+0x8]
   140014ad0:	mov    rcx,QWORD PTR [rax+0xca8]
   140014ad7:	inc    DWORD PTR [rcx+0x8a4]
   140014add:	mov    rax,QWORD PTR [rdi+0x8]
   140014ae1:	lock inc DWORD PTR [rax+0xf70]
   140014ae8:	mov    rax,QWORD PTR [rip+0x3c4a1]        # 0x140050f90
   140014aef:	mov    QWORD PTR [rip+0x3c4a2],rax        # 0x140050f98
   140014af6:	jmp    0x140014b82
   140014afb:	mov    rax,QWORD PTR [rip+0x3c49e]        # 0x140050fa0
   140014b02:	mov    QWORD PTR [rbx+0x18],rax
   140014b06:	cmp    QWORD PTR [rsp+0x60],rsi
   140014b0b:	jne    0x140014b2e
   140014b0d:	mov    rax,QWORD PTR [rdi+0x8]
   140014b11:	mov    rcx,QWORD PTR [rax+0xca8]
   140014b18:	mov    rax,QWORD PTR [rcx+0x890]
   140014b1f:	mov    QWORD PTR [rsp+0x60],rax
   140014b24:	mov    eax,DWORD PTR [rcx+0x898]
   140014b2a:	mov    DWORD PTR [rsp+0x58],eax
   140014b2e:	mov    rax,QWORD PTR [rdi+0x8]
   140014b32:	mov    rcx,QWORD PTR [rax+0xca8]
   140014b39:	mov    rax,QWORD PTR [rip+0x3c450]        # 0x140050f90
   140014b40:	mov    QWORD PTR [rcx+0x890],rax
   140014b47:	mov    rax,QWORD PTR [rdi+0x8]
   140014b4b:	mov    rcx,QWORD PTR [rax+0xca8]
   140014b52:	inc    DWORD PTR [rcx+0x898]
   140014b58:	mov    rax,QWORD PTR [rdi+0x8]
   140014b5c:	lock inc DWORD PTR [rax+0xf70]
   140014b63:	mov    rax,QWORD PTR [rip+0x3c426]        # 0x140050f90
   140014b6a:	mov    QWORD PTR [rip+0x3c42f],rax        # 0x140050fa0
   140014b71:	cmp    DWORD PTR [r13+0x18],0x1
   140014b76:	jne    0x140014b82
   140014b78:	mov    DWORD PTR [rdi+0x88],0x2
   140014b82:	mov    r15d,DWORD PTR [rsp+0x50]
   140014b87:	cmp    DWORD PTR [rdi+0x88],0x3
   140014b8e:	je     0x140014c6f
   140014b94:	cmp    DWORD PTR [rip+0x39afd],r14d        # 0x14004e698
   140014b9b:	jne    0x140014bc2
   140014b9d:	mov    DWORD PTR [rip+0x39af4],r15d        # 0x14004e698
   140014ba4:	mov    eax,DWORD PTR [rdi+0x10]
   140014ba7:	sub    eax,r12d
   140014baa:	mov    DWORD PTR [rip+0x3c3d4],eax        # 0x140050f84
   140014bb0:	mov    eax,r12d
   140014bb3:	add    rax,rbx
   140014bb6:	mov    QWORD PTR [rip+0x3c3cb],rax        # 0x140050f88
   140014bbd:	jmp    0x140014c6f
   140014bc2:	mov    r14d,DWORD PTR [rip+0x3c3bb]        # 0x140050f84
   140014bc9:	cmp    r12d,r14d
   140014bcc:	jbe    0x140014c2b
   140014bce:	test   r14d,r14d
   140014bd1:	je     0x140014be5
   140014bd3:	mov    r8d,r14d
   140014bd6:	mov    rdx,rbx
   140014bd9:	mov    rcx,QWORD PTR [rip+0x3c3a8]        # 0x140050f88
   140014be0:	call   0x140020e80
   140014be5:	call   0x140015420
   140014bea:	mov    DWORD PTR [rip+0x39aa7],r15d        # 0x14004e698
   140014bf1:	mov    r14d,r12d
   140014bf4:	mov    eax,DWORD PTR [rip+0x3c38a]        # 0x140050f84
   140014bfa:	sub    r14d,eax
   140014bfd:	test   eax,eax
   140014bff:	je     0x140014c10
   140014c01:	mov    r8d,r14d
   140014c04:	lea    rdx,[rbx+rax*1]
   140014c08:	mov    rcx,rbx
   140014c0b:	call   0x140020e80
   140014c10:	mov    eax,r14d
   140014c13:	add    rax,rbx
   140014c16:	mov    QWORD PTR [rip+0x3c36b],rax        # 0x140050f88
   140014c1d:	mov    eax,DWORD PTR [rdi+0x10]
   140014c20:	sub    eax,r14d
   140014c23:	mov    DWORD PTR [rip+0x3c35b],eax        # 0x140050f84
   140014c29:	jmp    0x140014c6f
   140014c2b:	mov    edi,r12d
   140014c2e:	mov    r8d,r12d
   140014c31:	mov    rdx,rbx
   140014c34:	mov    rbx,QWORD PTR [rip+0x3c34d]        # 0x140050f88
   140014c3b:	mov    rcx,rbx
   140014c3e:	call   0x140020e80
   140014c43:	add    rbx,rdi
   140014c46:	mov    QWORD PTR [rip+0x3c33b],rbx        # 0x140050f88
   140014c4d:	sub    r14d,r12d
   140014c50:	mov    DWORD PTR [rip+0x3c32d],r14d        # 0x140050f84
   140014c57:	mov    DWORD PTR [r13+0x14],0x1
   140014c5f:	mov    edx,r15d
   140014c62:	mov    rdi,QWORD PTR [rbp-0x58]
   140014c66:	mov    rcx,QWORD PTR [rdi+0x50]
   140014c6a:	call   0x14001f03c
   140014c6f:	inc    DWORD PTR [rip+0x39a27]        # 0x14004e69c
   140014c75:	mov    eax,r12d
   140014c78:	add    QWORD PTR [rip+0x3c311],rax        # 0x140050f90
   140014c7f:	mov    r12d,0x1
   140014c85:	mov    r14d,0xffffffff
   140014c8b:	jmp    0x1400147c5
   140014c90:	mov    r14d,DWORD PTR [rsp+0x78]
   140014c95:	mov    r13,QWORD PTR [rsp+0x60]
   140014c9a:	mov    r15d,0xffffffff
   140014ca0:	cmp    DWORD PTR [rdi+0x88],0x3
   140014ca7:	je     0x14001514c
   140014cad:	cmp    r14d,0x8
   140014cb1:	jne    0x140014cce
   140014cb3:	mov    r14d,0x7
   140014cb9:	cmp    DWORD PTR [rip+0x399d8],r15d        # 0x14004e698
   140014cc0:	je     0x140014cce
   140014cc2:	call   0x140015420
   140014cc7:	mov    DWORD PTR [rip+0x399ca],r15d        # 0x14004e698
   140014cce:	call   0x1400155f8
   140014cd3:	mov    edx,eax
   140014cd5:	mov    eax,r14d
   140014cd8:	lea    rcx,[rax+rax*4]
   140014cdc:	lea    rax,[rip+0x399c1]        # 0x14004e6a4
   140014ce3:	cmp    edx,DWORD PTR [rax+rcx*4]
   140014ce6:	jae    0x140014cf2
   140014ce8:	mov    esi,0x80004004
   140014ced:	jmp    0x14001514c
   140014cf2:	mov    r15d,esi
   140014cf5:	mov    eax,DWORD PTR [rdi+0x94]
   140014cfb:	cmp    DWORD PTR [rdi+0x18],eax
   140014cfe:	jae    0x140014dec
   140014d04:	lea    rdx,[rsp+0x50]
   140014d09:	call   0x14001552c
   140014d0e:	test   eax,eax
   140014d10:	je     0x140014de1
   140014d16:	mov    rcx,QWORD PTR [rdi+0x50]
   140014d1a:	add    rcx,0x190
   140014d21:	mov    rax,QWORD PTR [rcx]
   140014d24:	call   QWORD PTR [rax+0x8]
   140014d27:	mov    rbx,rax
   140014d2a:	mov    r13d,DWORD PTR [rsp+0x50]
   140014d2f:	mov    eax,r13d
   140014d32:	shl    rax,0x6
   140014d36:	add    rbx,rax
   140014d39:	mov    r14d,esi
   140014d3c:	cmp    DWORD PTR [rdi+0x18],esi
   140014d3f:	jbe    0x140014d94
   140014d41:	mov    r13d,0x1
   140014d47:	mov    r12d,DWORD PTR [rbx+0x8]
   140014d4b:	imul   r12d,DWORD PTR [rbx+0x10]
   140014d50:	add    r12,QWORD PTR [rip+0x3c251]        # 0x140050fa8
   140014d57:	cmp    DWORD PTR [rip+0x3c017],esi        # 0x140050d74
   140014d5d:	jne    0x140014d6b
   140014d5f:	call   0x140004f38
   140014d64:	mov    DWORD PTR [rip+0x3c009],r13d        # 0x140050d74
   140014d6b:	mov    edx,DWORD PTR [rip+0x3c013]        # 0x140050d84
   140014d71:	imul   edx,r14d
   140014d75:	add    rdx,r12
   140014d78:	mov    ecx,r15d
   140014d7b:	mov    rax,QWORD PTR [rdi+0x20]
   140014d7f:	mov    QWORD PTR [rax+rcx*8],rdx
   140014d83:	add    r15d,r13d
   140014d86:	add    r14d,r13d
   140014d89:	cmp    r14d,DWORD PTR [rdi+0x18]
   140014d8d:	jb     0x140014d47
   140014d8f:	mov    r13d,DWORD PTR [rsp+0x50]
   140014d94:	mov    eax,DWORD PTR [rdi+0x58]
   140014d97:	cmp    DWORD PTR [rdi+0x5c],eax
   140014d9a:	jl     0x140014db4
   140014d9c:	add    eax,eax
   140014d9e:	mov    edx,0x2
   140014da3:	cmp    eax,edx
   140014da5:	cmovg  edx,eax
   140014da8:	mov    DWORD PTR [rdi+0x58],edx
   140014dab:	lea    rcx,[rdi+0x60]
   140014daf:	call   0x1400156e4
   140014db4:	movsxd rax,DWORD PTR [rdi+0x5c]
   140014db8:	mov    rdx,rax
   140014dbb:	inc    eax
   140014dbd:	mov    DWORD PTR [rdi+0x5c],eax
   140014dc0:	mov    ecx,DWORD PTR [rdi+0x68]
   140014dc3:	imul   rcx,rdx
   140014dc7:	mov    rax,QWORD PTR [rdi+0x78]
   140014dcb:	mov    DWORD PTR [rcx+rax*1],r13d
   140014dcf:	mov    ecx,DWORD PTR [rdi+0x18]
   140014dd2:	add    ecx,r15d
   140014dd5:	cmp    ecx,DWORD PTR [rdi+0x94]
   140014ddb:	jb     0x140014d04
   140014de1:	mov    r13,QWORD PTR [rsp+0x60]
   140014de6:	mov    r12d,0x1
   140014dec:	mov    rax,QWORD PTR [rdi+0x8]
   140014df0:	mov    rcx,QWORD PTR [rax+0xca8]
   140014df7:	mov    eax,DWORD PTR [rdi+0x98]
   140014dfd:	or     DWORD PTR [rcx+0x9c],eax
   140014e03:	mov    eax,DWORD PTR [rip+0x39893]        # 0x14004e69c
   140014e09:	mov    DWORD PTR [rcx+0x8a8],eax
   140014e0f:	mov    rax,QWORD PTR [rdi+0x8]
   140014e13:	lock add DWORD PTR [rax+0xf70],r12d
   140014e1b:	mov    rax,QWORD PTR [rdi+0x8]
   140014e1f:	cmp    DWORD PTR [rax+0x298],esi
   140014e25:	jne    0x1400150f9
   140014e2b:	cmp    DWORD PTR [rdi+0x88],r12d
   140014e32:	je     0x1400150f9
   140014e38:	mov    r14d,DWORD PTR [rdi+0x44]
   140014e3c:	shl    r14,0x20
   140014e40:	mov    eax,DWORD PTR [rdi+0x40]
   140014e43:	or     r14,rax
   140014e46:	cmp    DWORD PTR [rip+0x3bf28],esi        # 0x140050d74
   140014e4c:	jne    0x140014e5a
   140014e4e:	call   0x140004f38
   140014e53:	mov    DWORD PTR [rip+0x3bf1a],r12d        # 0x140050d74
   140014e5a:	mov    ebx,DWORD PTR [rip+0x3bf24]        # 0x140050d84
   140014e60:	imul   ebx,r15d
   140014e64:	mov    QWORD PTR [rbp-0x38],rbx
   140014e68:	mov    QWORD PTR [rbp-0x18],r14
   140014e6c:	mov    r12d,0x50
   140014e72:	mov    r8d,r12d
   140014e75:	xor    edx,edx
   140014e77:	lea    rcx,[rbp+0x40]
   140014e7b:	call   0x1400260e0
   140014e80:	mov    WORD PTR [rbp+0x40],r12w
   140014e85:	movaps xmm0,XMMWORD PTR [rip+0x39c54]        # 0x14004eae0
   140014e8c:	movdqu XMMWORD PTR [rbp+0x58],xmm0
   140014e91:	mov    DWORD PTR [rbp+0x6c],0x120000
   140014e98:	mov    BYTE PTR [rbp+0x44],0x24
   140014e9c:	lea    rax,[rbp-0x18]
   140014ea0:	mov    QWORD PTR [rbp+0x70],rax
   140014ea4:	mov    DWORD PTR [rbp+0x78],0x8
   140014eab:	lea    rax,[rbp-0x38]
   140014eaf:	mov    QWORD PTR [rbp+0x80],rax
   140014eb6:	mov    DWORD PTR [rbp+0x88],0x8
   140014ec0:	lea    rdx,[rbp+0x40]
   140014ec4:	mov    rcx,QWORD PTR [rip+0x39c2d]        # 0x14004eaf8
   140014ecb:	call   QWORD PTR [rip+0x24177]        # 0x140039048
   140014ed1:	lea    r12,[rdi+0x30]
   140014ed5:	mov    QWORD PTR [rsp+0x20],r12
   140014eda:	xor    r9d,r9d
   140014edd:	mov    r8d,ebx
   140014ee0:	mov    rdx,QWORD PTR [rdi+0x20]
   140014ee4:	mov    rcx,QWORD PTR [rdi+0x80]
   140014eeb:	call   QWORD PTR [rip+0x246a7]        # 0x140039598
   140014ef1:	mov    ebx,eax
   140014ef3:	test   eax,eax
   140014ef5:	jne    0x140014f3d
   140014ef7:	call   QWORD PTR [rip+0x246e3]        # 0x1400395e0
   140014efd:	cmp    eax,0x32
   140014f00:	jne    0x140014f3d
   140014f02:	cmp    DWORD PTR [rip+0x3be6c],esi        # 0x140050d74
   140014f08:	jne    0x140014f19
   140014f0a:	call   0x140004f38
   140014f0f:	mov    DWORD PTR [rip+0x3be5b],0x1        # 0x140050d74
   140014f19:	mov    r8d,DWORD PTR [rip+0x3be64]        # 0x140050d84
   140014f20:	imul   r8d,r15d
   140014f24:	mov    QWORD PTR [rsp+0x20],r12
   140014f29:	mov    rdx,QWORD PTR [rdi+0x20]
   140014f2d:	mov    rcx,QWORD PTR [rdi+0x80]
   140014f34:	call   0x14001451c
   140014f39:	mov    ebx,eax
   140014f3b:	jmp    0x140014f65
   140014f3d:	cmp    DWORD PTR [rip+0x3be31],esi        # 0x140050d74
   140014f43:	jne    0x140014f54
   140014f45:	call   0x140004f38
   140014f4a:	mov    DWORD PTR [rip+0x3be20],0x1        # 0x140050d74
   140014f54:	mov    rcx,QWORD PTR [rdi+0x28]
   140014f58:	mov    eax,DWORD PTR [rip+0x3be26]        # 0x140050d84
   140014f5e:	imul   eax,r15d
   140014f62:	add    QWORD PTR [rcx],rax
   140014f65:	test   ebx,ebx
   140014f67:	jne    0x1400150d2
   140014f6d:	call   QWORD PTR [rip+0x2466d]        # 0x1400395e0
   140014f73:	cmp    eax,0x27
   140014f76:	je     0x140015021
   140014f7c:	cmp    eax,0x70
   140014f7f:	je     0x140015021
   140014f85:	cmp    eax,0x3e5
   140014f8a:	je     0x1400150d2
   140014f90:	cmp    DWORD PTR [rip+0x3cdc6],esi        # 0x140051d5c
   140014f96:	jne    0x14001500e
   140014f98:	call   QWORD PTR [rip+0x24642]        # 0x1400395e0
   140014f9e:	mov    r8d,eax
   140014fa1:	mov    QWORD PTR [rsp+0x30],rsi
   140014fa6:	mov    DWORD PTR [rsp+0x28],esi
   140014faa:	lea    rax,[rbp-0x50]
   140014fae:	mov    QWORD PTR [rsp+0x20],rax
   140014fb3:	xor    edx,edx
   140014fb5:	mov    ecx,0x1100
   140014fba:	mov    r9d,0x400
   140014fc0:	call   QWORD PTR [rip+0x2442a]        # 0x1400393f0
   140014fc6:	mov    rcx,QWORD PTR [rdi+0x8]
   140014fca:	mov    rax,QWORD PTR [rbp-0x50]
   140014fce:	mov    QWORD PTR [rbp-0x28],rax
   140014fd2:	mov    rax,QWORD PTR [rcx]
   140014fd5:	lea    r9,[rbp-0x28]
   140014fd9:	lea    r12d,[rbx+0x1]
   140014fdd:	mov    r8d,r12d
   140014fe0:	mov    edx,0xe123056c
   140014fe5:	call   QWORD PTR [rax]
   140014fe7:	mov    rcx,QWORD PTR [rdi+0x8]
   140014feb:	mov    rax,QWORD PTR [rcx]
   140014fee:	xor    r9d,r9d
   140014ff1:	xor    r8d,r8d
   140014ff4:	mov    edx,0xe123055b
   140014ff9:	call   QWORD PTR [rax]
   140014ffb:	mov    rcx,QWORD PTR [rbp-0x50]
   140014fff:	call   QWORD PTR [rip+0x245b3]        # 0x1400395b8
   140015005:	mov    DWORD PTR [rip+0x3cd50],r12d        # 0x140051d5c
   14001500c:	jmp    0x140015014
   14001500e:	mov    r12d,0x1
   140015014:	mov    rcx,rdi
   140015017:	call   0x140015340
   14001501c:	jmp    0x1400150f9
   140015021:	cmp    DWORD PTR [rip+0x3cd25],esi        # 0x140051d4c
   140015027:	jne    0x14001504c
   140015029:	mov    rcx,QWORD PTR [rdi+0x8]
   14001502d:	mov    rax,QWORD PTR [rcx]
   140015030:	xor    r9d,r9d
   140015033:	xor    r8d,r8d
   140015036:	mov    edx,0xe123055a
   14001503b:	call   QWORD PTR [rax]
   14001503d:	mov    r12d,0x1
   140015043:	mov    DWORD PTR [rip+0x3cd02],r12d        # 0x140051d4c
   14001504a:	jmp    0x140015052
   14001504c:	mov    r12d,0x1
   140015052:	test   r13,r13
   140015055:	je     0x1400150b8
   140015057:	mov    rax,QWORD PTR [rdi+0x8]
   14001505b:	mov    rcx,QWORD PTR [rax+0xca8]
   140015062:	mov    QWORD PTR [rcx+0x890],r13
   140015069:	mov    rax,QWORD PTR [rdi+0x8]
   14001506d:	mov    rcx,QWORD PTR [rax+0xca8]
   140015074:	mov    eax,DWORD PTR [rsp+0x58]
   140015078:	mov    DWORD PTR [rcx+0x898],eax
   14001507e:	mov    rax,QWORD PTR [rdi+0x8]
   140015082:	lock add DWORD PTR [rax+0xf70],r12d
   14001508a:	jmp    0x1400150b8
   14001508c:	mov    rcx,QWORD PTR [rdi+0x50]
   140015090:	add    rcx,0x190
   140015097:	mov    rax,QWORD PTR [rcx]
   14001509a:	call   QWORD PTR [rax+0x8]
   14001509d:	mov    rcx,rax
   1400150a0:	mov    edx,DWORD PTR [rsp+0x50]
   1400150a4:	mov    eax,edx
   1400150a6:	shl    rax,0x6
   1400150aa:	mov    DWORD PTR [rcx+rax*1+0x14],r12d
   1400150af:	mov    rcx,QWORD PTR [rdi+0x50]
   1400150b3:	call   0x14001f03c
   1400150b8:	lea    rdx,[rsp+0x50]
   1400150bd:	call   0x14001552c
   1400150c2:	test   eax,eax
   1400150c4:	jne    0x14001508c
   1400150c6:	mov    DWORD PTR [rdi+0x88],0x3
   1400150d0:	jmp    0x1400150f9
   1400150d2:	mov    edx,0xffffffff
   1400150d7:	mov    rcx,QWORD PTR [rdi+0x48]
   1400150db:	call   QWORD PTR [rip+0x243b7]        # 0x140039498
   1400150e1:	mov    BYTE PTR [rsp+0x20],0x5
   1400150e6:	mov    r9,r14
   1400150e9:	xor    r8d,r8d
   1400150ec:	mov    dl,0x25
   1400150ee:	call   0x1400181e4
   1400150f3:	mov    r12d,0x1
   1400150f9:	mov    eax,DWORD PTR [rdi+0x5c]
   1400150fc:	test   eax,eax
   1400150fe:	jle    0x140015141
   140015100:	dec    eax
   140015102:	mov    DWORD PTR [rdi+0x5c],eax
   140015105:	mov    ecx,DWORD PTR [rdi+0x68]
   140015108:	cdqe   
   14001510a:	imul   rcx,rax
   14001510e:	mov    rax,QWORD PTR [rdi+0x78]
   140015112:	mov    ebx,DWORD PTR [rcx+rax*1]
   140015115:	mov    rcx,QWORD PTR [rdi+0x50]
   140015119:	add    rcx,0x190
   140015120:	mov    rax,QWORD PTR [rcx]
   140015123:	call   QWORD PTR [rax+0x8]
   140015126:	mov    rcx,rax
   140015129:	mov    eax,ebx
   14001512b:	shl    rax,0x6
   14001512f:	mov    DWORD PTR [rcx+rax*1+0x14],r12d
   140015134:	mov    edx,ebx
   140015136:	mov    rcx,QWORD PTR [rdi+0x50]
   14001513a:	call   0x14001f03c
   14001513f:	jmp    0x1400150f9
   140015141:	call   0x1400155f8
   140015146:	test   eax,eax
   140015148:	setne  sil
   14001514c:	mov    rcx,QWORD PTR [rbp-0x68]
   140015150:	call   0x14002b138
   140015155:	mov    eax,esi
   140015157:	mov    rcx,QWORD PTR [rbp+0x90]
   14001515e:	xor    rcx,rsp
   140015161:	call   0x140020e50
   140015166:	lea    r11,[rsp+0x1a0]
   14001516e:	mov    rbx,QWORD PTR [r11+0x38]
   140015172:	mov    rsi,QWORD PTR [r11+0x40]
   140015176:	mov    rdi,QWORD PTR [r11+0x48]
   14001517a:	mov    rsp,r11
   14001517d:	pop    r15
   14001517f:	pop    r14
   140015181:	pop    r13
   140015183:	pop    r12
   140015185:	pop    rbp
   140015186:	ret    
   140015187:	int3   
   140015188:	mov    QWORD PTR [rsp+0x20],rbx
   14001518d:	push   rbp
   14001518e:	mov    rbp,rsp
   140015191:	sub    rsp,0x60
   140015195:	cmp    DWORD PTR [rcx+0x88],0x1
   14001519c:	mov    rbx,rcx
   14001519f:	je     0x14001532f
   1400151a5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400151a9:	mov    eax,DWORD PTR [rcx+0xf74]
   1400151af:	cmp    DWORD PTR [rcx+0xf70],eax
   1400151b5:	jle    0x14001532f
   1400151bb:	mov    eax,DWORD PTR [rcx+0xf70]
   1400151c1:	lea    r9,[rbp+0x10]
   1400151c5:	xchg   DWORD PTR [rcx+0xf74],eax
   1400151cb:	mov    rax,QWORD PTR [rbx+0x30]
   1400151cf:	and    DWORD PTR [rbp+0x10],0x0
   1400151d3:	mov    rcx,QWORD PTR [rbx+0x80]
   1400151da:	mov    QWORD PTR [rbp-0x20],rax
   1400151de:	mov    rax,QWORD PTR [rbx+0x38]
   1400151e2:	mov    QWORD PTR [rbp-0x18],rax
   1400151e6:	mov    rax,QWORD PTR [rbx+0x40]
   1400151ea:	mov    QWORD PTR [rbp-0x10],rax
   1400151ee:	mov    rax,QWORD PTR [rbx+0x48]
   1400151f2:	and    DWORD PTR [rbp-0x10],0x0
   1400151f6:	and    DWORD PTR [rbp-0xc],0x0
   1400151fa:	mov    QWORD PTR [rbp-0x8],rax
   1400151fe:	mov    rax,QWORD PTR [rbx+0x8]
   140015202:	mov    rdx,QWORD PTR [rax+0xca8]
   140015209:	lea    rax,[rbp-0x20]
   14001520d:	mov    r8d,DWORD PTR [rdx+0x4]
   140015211:	mov    QWORD PTR [rsp+0x20],rax
   140015216:	call   QWORD PTR [rip+0x23fec]        # 0x140039208
   14001521c:	test   eax,eax
   14001521e:	jne    0x14001532f
   140015224:	call   QWORD PTR [rip+0x243b6]        # 0x1400395e0
   14001522a:	cmp    eax,0x27
   14001522d:	je     0x1400152e5
   140015233:	cmp    eax,0x70
   140015236:	je     0x1400152e5
   14001523c:	cmp    eax,0x3e5
   140015241:	je     0x1400152d6
   140015247:	mov    rcx,rbx
   14001524a:	call   0x140015340
   14001524f:	cmp    DWORD PTR [rip+0x3cafa],0x0        # 0x140051d50
   140015256:	jne    0x14001532f
   14001525c:	call   QWORD PTR [rip+0x2437e]        # 0x1400395e0
   140015262:	and    QWORD PTR [rsp+0x30],0x0
   140015268:	and    DWORD PTR [rsp+0x28],0x0
   14001526d:	mov    r8d,eax
   140015270:	lea    rax,[rbp+0x18]
   140015274:	xor    edx,edx
   140015276:	mov    ecx,0x1100
   14001527b:	mov    r9d,0x400
   140015281:	mov    QWORD PTR [rsp+0x20],rax
   140015286:	call   QWORD PTR [rip+0x24164]        # 0x1400393f0
   14001528c:	mov    rax,QWORD PTR [rbp+0x18]
   140015290:	mov    rcx,QWORD PTR [rbx+0x8]
   140015294:	mov    QWORD PTR [rbp+0x20],rax
   140015298:	mov    rax,QWORD PTR [rcx]
   14001529b:	lea    r9,[rbp+0x20]
   14001529f:	mov    edx,0xe123056c
   1400152a4:	mov    r8d,0x1
   1400152aa:	call   QWORD PTR [rax]
   1400152ac:	mov    rcx,QWORD PTR [rbx+0x8]
   1400152b0:	xor    r9d,r9d
   1400152b3:	mov    rax,QWORD PTR [rcx]
   1400152b6:	xor    r8d,r8d
   1400152b9:	mov    edx,0xe123055b
   1400152be:	call   QWORD PTR [rax]
   1400152c0:	mov    rcx,QWORD PTR [rbp+0x18]
   1400152c4:	call   QWORD PTR [rip+0x242ee]        # 0x1400395b8
   1400152ca:	mov    DWORD PTR [rip+0x3ca7c],0x1        # 0x140051d50
   1400152d4:	jmp    0x14001532f
   1400152d6:	mov    rcx,QWORD PTR [rbp-0x8]
   1400152da:	or     edx,0xffffffff
   1400152dd:	call   QWORD PTR [rip+0x241b5]        # 0x140039498
   1400152e3:	jmp    0x14001532f
   1400152e5:	mov    rcx,rbx
   1400152e8:	call   0x140015340
   1400152ed:	cmp    DWORD PTR [rip+0x3ca64],0x0        # 0x140051d58
   1400152f4:	jne    0x14001532f
   1400152f6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400152fa:	xor    r9d,r9d
   1400152fd:	xor    r8d,r8d
   140015300:	mov    rax,QWORD PTR [rcx]
   140015303:	mov    edx,0xe123055c
   140015308:	call   QWORD PTR [rax]
   14001530a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001530e:	xor    r9d,r9d
   140015311:	xor    r8d,r8d
   140015314:	mov    edx,0xe123055c
   140015319:	add    rcx,0xc98
   140015320:	call   0x14001e7cc
   140015325:	mov    DWORD PTR [rip+0x3ca29],0x1        # 0x140051d58
   14001532f:	mov    rbx,QWORD PTR [rsp+0x88]
   140015337:	add    rsp,0x60
   14001533b:	pop    rbp
   14001533c:	ret    
   14001533d:	int3   
   14001533e:	int3   
   14001533f:	int3   
   140015340:	rex push rbx
   140015342:	sub    rsp,0x20
   140015346:	cmp    DWORD PTR [rcx+0x90],0x0
   14001534d:	mov    rbx,rcx
   140015350:	jne    0x14001536c
   140015352:	mov    rcx,QWORD PTR [rcx+0x8]
   140015356:	add    rcx,0xb10
   14001535d:	call   0x14001e9c8
   140015362:	mov    DWORD PTR [rbx+0x90],0x1
   14001536c:	mov    DWORD PTR [rbx+0x88],0x1
   140015376:	add    rsp,0x20
   14001537a:	pop    rbx
   14001537b:	ret    
   14001537c:	mov    rax,rsp
   14001537f:	mov    QWORD PTR [rax+0x8],rcx
   140015383:	push   rsi
   140015384:	sub    rsp,0x30
   140015388:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140015390:	mov    QWORD PTR [rax+0x10],rbx
   140015394:	mov    ebx,edx
   140015396:	lea    rsi,[rip+0x3ce9b]        # 0x140052238
   14001539d:	mov    QWORD PTR [rax+0x8],rsi
   1400153a1:	mov    QWORD PTR [rax+0x18],rsi
   1400153a5:	mov    ecx,0x68
   1400153aa:	call   0x14002b130
   1400153af:	mov    QWORD PTR [rip+0x3ce8a],rax        # 0x140052240
   1400153b6:	add    rax,0x3f
   1400153ba:	and    rax,0xffffffffffffffc0
   1400153be:	mov    QWORD PTR [rip+0x3ce73],rax        # 0x140052238
   1400153c5:	mov    QWORD PTR [rsp+0x58],rax
   1400153ca:	je     0x1400153e9
   1400153cc:	mov    DWORD PTR [rax+0x18],0x0
   1400153d3:	mov    DWORD PTR [rax+0x1c],0x0
   1400153da:	mov    QWORD PTR [rax+0x10],0x0
   1400153e2:	mov    DWORD PTR [rax+0x20],0xffffffff
   1400153e9:	mov    edx,ebx
   1400153eb:	lea    rcx,[rip+0x3ce56]        # 0x140052248
   1400153f2:	call   0x140015690
   1400153f7:	nop
   1400153f8:	mov    rcx,QWORD PTR [rip+0x3ce39]        # 0x140052238
   1400153ff:	and    DWORD PTR [rcx],0x0
   140015402:	and    DWORD PTR [rcx+0x4],0x0
   140015406:	mov    DWORD PTR [rcx+0xc],ebx
   140015409:	mov    DWORD PTR [rcx+0x8],0xf
   140015410:	mov    rax,rsi
   140015413:	mov    rbx,QWORD PTR [rsp+0x48]
   140015418:	add    rsp,0x30
   14001541c:	pop    rsi
   14001541d:	ret    
   14001541e:	int3   
   14001541f:	int3   
   140015420:	mov    rax,rsp
   140015423:	push   rdi
   140015424:	sub    rsp,0x30
   140015428:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140015430:	mov    QWORD PTR [rax+0x8],rbx
   140015434:	mov    QWORD PTR [rax+0x10],rsi
   140015438:	mov    rdi,QWORD PTR [rip+0x3cdf9]        # 0x140052238
   14001543f:	lea    rbx,[rdi+0x10]
   140015443:	mov    QWORD PTR [rax+0x18],rbx
   140015447:	mov    eax,0x1
   14001544c:	xchg   DWORD PTR [rbx+0x8],eax
   14001544f:	test   eax,eax
   140015451:	je     0x14001545e
   140015453:	mov    rcx,QWORD PTR [rsp+0x50]
   140015458:	call   0x1400178cc
   14001545d:	nop
   14001545e:	mov    ecx,DWORD PTR [rdi+0x4]
   140015461:	lea    eax,[rcx+0x1]
   140015464:	mov    DWORD PTR [rdi+0x4],eax
   140015467:	mov    edx,DWORD PTR [rip+0x3cde3]        # 0x140052250
   14001546d:	imul   rdx,rcx
   140015471:	mov    ecx,DWORD PTR [rip+0x39221]        # 0x14004e698
   140015477:	mov    rax,QWORD PTR [rip+0x3cde2]        # 0x140052260
   14001547e:	mov    DWORD PTR [rdx+rax*1],ecx
   140015481:	mov    esi,DWORD PTR [rdi+0xc]
   140015484:	cmp    DWORD PTR [rdi+0x4],esi
   140015487:	sbb    eax,eax
   140015489:	and    DWORD PTR [rdi+0x4],eax
   14001548c:	mov    eax,DWORD PTR [rdi+0x4]
   14001548f:	cmp    DWORD PTR [rdi],eax
   140015491:	jne    0x1400154e3
   140015493:	add    esi,esi
   140015495:	mov    edx,esi
   140015497:	lea    rcx,[rip+0x3cdaa]        # 0x140052248
   14001549e:	call   0x1400156e4
   1400154a3:	xor    r9d,r9d
   1400154a6:	cmp    DWORD PTR [rdi+0x4],r9d
   1400154aa:	jbe    0x1400154da
   1400154ac:	mov    ecx,DWORD PTR [rip+0x3cd9e]        # 0x140052250
   1400154b2:	mov    r8d,r9d
   1400154b5:	imul   r8,rcx
   1400154b9:	mov    edx,DWORD PTR [rdi+0xc]
   1400154bc:	add    edx,r9d
   1400154bf:	imul   rdx,rcx
   1400154c3:	mov    rcx,QWORD PTR [rip+0x3cd96]        # 0x140052260
   1400154ca:	mov    eax,DWORD PTR [r8+rcx*1]
   1400154ce:	mov    DWORD PTR [rdx+rcx*1],eax
   1400154d1:	inc    r9d
   1400154d4:	cmp    r9d,DWORD PTR [rdi+0x4]
   1400154d8:	jb     0x1400154ac
   1400154da:	mov    eax,DWORD PTR [rdi+0xc]
   1400154dd:	add    DWORD PTR [rdi+0x4],eax
   1400154e0:	mov    DWORD PTR [rdi+0xc],esi
   1400154e3:	xor    eax,eax
   1400154e5:	xchg   DWORD PTR [rbx+0x8],eax
   1400154e8:	lock or DWORD PTR [rsp],0x0
   1400154ed:	mov    rcx,QWORD PTR [rsp+0x50]
   1400154f2:	mov    eax,DWORD PTR [rcx+0xc]
   1400154f5:	test   eax,eax
   1400154f7:	jle    0x14001551c
   1400154f9:	lock or DWORD PTR [rsp],0x0
   1400154fe:	mov    eax,DWORD PTR [rcx+0xc]
   140015501:	mov    rax,QWORD PTR [rsp+0x50]
   140015506:	mov    rcx,QWORD PTR [rax]
   140015509:	test   rcx,rcx
   14001550c:	je     0x14001551c
   14001550e:	mov    rcx,QWORD PTR [rsp+0x50]
   140015513:	mov    rcx,QWORD PTR [rcx]
   140015516:	call   QWORD PTR [rip+0x23fbc]        # 0x1400394d8
   14001551c:	mov    rbx,QWORD PTR [rsp+0x40]
   140015521:	mov    rsi,QWORD PTR [rsp+0x48]
   140015526:	add    rsp,0x30
   14001552a:	pop    rdi
   14001552b:	ret    
   14001552c:	mov    rax,rsp
   14001552f:	push   r14
   140015531:	sub    rsp,0x30
   140015535:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001553d:	mov    QWORD PTR [rax+0x8],rbx
   140015541:	mov    QWORD PTR [rax+0x10],rsi
   140015545:	mov    QWORD PTR [rax+0x20],rdi
   140015549:	mov    r14,rdx
   14001554c:	mov    esi,0x1
   140015551:	mov    rdi,QWORD PTR [rip+0x3cce0]        # 0x140052238
   140015558:	lea    rbx,[rdi+0x10]
   14001555c:	mov    QWORD PTR [rax+0x18],rbx
   140015560:	mov    eax,esi
   140015562:	xchg   DWORD PTR [rbx+0x8],eax
   140015565:	test   eax,eax
   140015567:	je     0x140015574
   140015569:	mov    rcx,QWORD PTR [rsp+0x50]
   14001556e:	call   0x1400178cc
   140015573:	nop
   140015574:	mov    eax,DWORD PTR [rdi]
   140015576:	cmp    eax,DWORD PTR [rdi+0x4]
   140015579:	je     0x1400155a2
   14001557b:	mov    ecx,eax
   14001557d:	mov    eax,DWORD PTR [rip+0x3cccd]        # 0x140052250
   140015583:	imul   rcx,rax
   140015587:	mov    rax,QWORD PTR [rip+0x3ccd2]        # 0x140052260
   14001558e:	mov    ecx,DWORD PTR [rcx+rax*1]
   140015591:	mov    DWORD PTR [r14],ecx
   140015594:	add    DWORD PTR [rdi],esi
   140015596:	mov    eax,DWORD PTR [rdi]
   140015598:	cmp    eax,DWORD PTR [rdi+0xc]
   14001559b:	jb     0x1400155a4
   14001559d:	and    DWORD PTR [rdi],0x0
   1400155a0:	jmp    0x1400155a4
   1400155a2:	xor    esi,esi
   1400155a4:	xor    eax,eax
   1400155a6:	xchg   DWORD PTR [rbx+0x8],eax
   1400155a9:	lock or DWORD PTR [rsp],0x0
   1400155ae:	mov    rcx,QWORD PTR [rsp+0x50]
   1400155b3:	mov    eax,DWORD PTR [rcx+0xc]
   1400155b6:	test   eax,eax
   1400155b8:	jle    0x1400155dd
   1400155ba:	lock or DWORD PTR [rsp],0x0
   1400155bf:	mov    ecx,DWORD PTR [rcx+0xc]
   1400155c2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400155c7:	mov    rdx,QWORD PTR [rcx]
   1400155ca:	test   rdx,rdx
   1400155cd:	je     0x1400155dd
   1400155cf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400155d4:	mov    rcx,QWORD PTR [rcx]
   1400155d7:	call   QWORD PTR [rip+0x23efb]        # 0x1400394d8
   1400155dd:	mov    eax,esi
   1400155df:	mov    rbx,QWORD PTR [rsp+0x40]
   1400155e4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400155e9:	mov    rdi,QWORD PTR [rsp+0x58]
   1400155ee:	add    rsp,0x30
   1400155f2:	pop    r14
   1400155f4:	ret    
   1400155f5:	int3   
   1400155f6:	int3   
   1400155f7:	int3   
   1400155f8:	rex push rdi
   1400155fa:	sub    rsp,0x30
   1400155fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015607:	mov    QWORD PTR [rsp+0x40],rbx
   14001560c:	mov    rdi,QWORD PTR [rip+0x3cc25]        # 0x140052238
   140015613:	lea    rbx,[rdi+0x10]
   140015617:	mov    QWORD PTR [rsp+0x48],rbx
   14001561c:	mov    eax,0x1
   140015621:	xchg   DWORD PTR [rbx+0x8],eax
   140015624:	test   eax,eax
   140015626:	je     0x140015633
   140015628:	mov    rcx,QWORD PTR [rsp+0x48]
   14001562d:	call   0x1400178cc
   140015632:	nop
   140015633:	mov    eax,DWORD PTR [rdi]
   140015635:	mov    ecx,DWORD PTR [rdi+0x4]
   140015638:	cmp    eax,ecx
   14001563a:	jbe    0x140015645
   14001563c:	mov    edi,DWORD PTR [rdi+0xc]
   14001563f:	sub    edi,eax
   140015641:	add    edi,ecx
   140015643:	jmp    0x140015649
   140015645:	mov    edi,ecx
   140015647:	sub    edi,eax
   140015649:	xor    eax,eax
   14001564b:	xchg   DWORD PTR [rbx+0x8],eax
   14001564e:	lock or DWORD PTR [rsp],0x0
   140015653:	mov    rcx,QWORD PTR [rsp+0x48]
   140015658:	mov    eax,DWORD PTR [rcx+0xc]
   14001565b:	test   eax,eax
   14001565d:	jle    0x140015682
   14001565f:	lock or DWORD PTR [rsp],0x0
   140015664:	mov    ecx,DWORD PTR [rcx+0xc]
   140015667:	mov    rcx,QWORD PTR [rsp+0x48]
   14001566c:	mov    rdx,QWORD PTR [rcx]
   14001566f:	test   rdx,rdx
   140015672:	je     0x140015682
   140015674:	mov    rcx,QWORD PTR [rsp+0x48]
   140015679:	mov    rcx,QWORD PTR [rcx]
   14001567c:	call   QWORD PTR [rip+0x23e56]        # 0x1400394d8
   140015682:	mov    eax,edi
   140015684:	mov    rbx,QWORD PTR [rsp+0x40]
   140015689:	add    rsp,0x30
   14001568d:	pop    rdi
   14001568e:	ret    
   14001568f:	int3   
   140015690:	rex push rbx
   140015692:	sub    rsp,0x20
   140015696:	mov    rbx,rcx
   140015699:	mov    DWORD PTR [rcx+0x4],edx
   14001569c:	mov    DWORD PTR [rcx],0x40
   1400156a2:	mov    DWORD PTR [rcx+0x8],0x4
   1400156a9:	test   edx,edx
   1400156ab:	je     0x1400156d1
   1400156ad:	lea    ecx,[rdx*4+0x40]
   1400156b4:	call   0x14002b130
   1400156b9:	mov    edx,DWORD PTR [rbx]
   1400156bb:	dec    rdx
   1400156be:	mov    QWORD PTR [rbx+0x10],rax
   1400156c2:	add    rax,rdx
   1400156c5:	not    rdx
   1400156c8:	and    rax,rdx
   1400156cb:	mov    QWORD PTR [rbx+0x18],rax
   1400156cf:	jmp    0x1400156db
   1400156d1:	and    QWORD PTR [rcx+0x18],0x0
   1400156d6:	and    QWORD PTR [rcx+0x10],0x0
   1400156db:	mov    rax,rbx
   1400156de:	add    rsp,0x20
   1400156e2:	pop    rbx
   1400156e3:	ret    
   1400156e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400156e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400156ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400156f3:	push   rdi
   1400156f4:	sub    rsp,0x20
   1400156f8:	cmp    DWORD PTR [rcx+0x4],edx
   1400156fb:	mov    ebp,edx
   1400156fd:	mov    eax,edx
   1400156ff:	cmovb  ebp,DWORD PTR [rcx+0x4]
   140015703:	xor    edi,edi
   140015705:	mov    esi,edx
   140015707:	imul   eax,DWORD PTR [rcx+0x8]
   14001570b:	add    eax,DWORD PTR [rcx]
   14001570d:	mov    rbx,rcx
   140015710:	test   edx,edx
   140015712:	je     0x14001572f
   140015714:	mov    ecx,eax
   140015716:	call   0x14002b130
   14001571b:	mov    ecx,DWORD PTR [rbx]
   14001571d:	dec    rcx
   140015720:	mov    r9,rax
   140015723:	lea    r8,[rcx+rax*1]
   140015727:	not    rcx
   14001572a:	and    r8,rcx
   14001572d:	jmp    0x140015735
   14001572f:	mov    r9,rdi
   140015732:	mov    r8,rdi
   140015735:	test   ebp,ebp
   140015737:	je     0x140015750
   140015739:	mov    rax,QWORD PTR [rbx+0x18]
   14001573d:	mov    edx,edi
   14001573f:	inc    edi
   140015741:	imul   edx,DWORD PTR [rbx+0x8]
   140015745:	mov    ecx,DWORD PTR [rdx+rax*1]
   140015748:	mov    DWORD PTR [rdx+r8*1],ecx
   14001574c:	cmp    edi,ebp
   14001574e:	jb     0x140015739
   140015750:	mov    rcx,QWORD PTR [rbx+0x10]
   140015754:	mov    QWORD PTR [rbx+0x18],r8
   140015758:	mov    DWORD PTR [rbx+0x4],esi
   14001575b:	mov    QWORD PTR [rbx+0x10],r9
   14001575f:	mov    rbx,QWORD PTR [rsp+0x30]
   140015764:	mov    rbp,QWORD PTR [rsp+0x38]
   140015769:	mov    rsi,QWORD PTR [rsp+0x40]
   14001576e:	add    rsp,0x20
   140015772:	pop    rdi
   140015773:	jmp    0x14002b138
   140015778:	mov    QWORD PTR [rsp+0x8],rbx
   14001577d:	push   rdi
   14001577e:	sub    rsp,0x20
   140015782:	mov    ebx,edx
   140015784:	mov    rdi,rcx
   140015787:	call   0x1400157a8
   14001578c:	test   bl,0x1
   14001578f:	je     0x140015799
   140015791:	mov    rcx,rdi
   140015794:	call   0x140020e30
   140015799:	mov    rax,rdi
   14001579c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400157a1:	add    rsp,0x20
   1400157a5:	pop    rdi
   1400157a6:	ret    
   1400157a7:	int3   
   1400157a8:	mov    QWORD PTR [rsp+0x8],rcx
   1400157ad:	sub    rsp,0x38
   1400157b1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400157ba:	lea    rax,[rip+0x28ff7]        # 0x14003e7b8
   1400157c1:	mov    QWORD PTR [rcx],rax
   1400157c4:	add    rcx,0x8
   1400157c8:	add    rsp,0x38
   1400157cc:	jmp    0x14001dff4
   1400157d1:	int3   
   1400157d2:	int3   
   1400157d3:	int3   
   1400157d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400157d9:	push   rdi
   1400157da:	sub    rsp,0x30
   1400157de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400157e7:	mov    QWORD PTR [rsp+0x58],rbx
   1400157ec:	mov    rbx,rcx
   1400157ef:	lea    rax,[rip+0x28fd2]        # 0x14003e7c8
   1400157f6:	mov    QWORD PTR [rcx],rax
   1400157f9:	mov    rax,QWORD PTR [rcx+0xe8]
   140015800:	test   rax,rax
   140015803:	je     0x140015812
   140015805:	mov    rcx,QWORD PTR [rcx+0xe8]
   14001580c:	call   QWORD PTR [rip+0x23dae]        # 0x1400395c0
   140015812:	mov    QWORD PTR [rbx+0xe8],0x0
   14001581d:	lea    rdi,[rbx+0x78]
   140015821:	mov    QWORD PTR [rsp+0x48],rdi
   140015826:	mov    rax,QWORD PTR [rdi+0x58]
   14001582a:	test   rax,rax
   14001582d:	je     0x140015839
   14001582f:	mov    rcx,QWORD PTR [rdi+0x58]
   140015833:	call   QWORD PTR [rip+0x23d87]        # 0x1400395c0
   140015839:	mov    QWORD PTR [rdi+0x58],0x0
   140015841:	mov    QWORD PTR [rsp+0x48],rdi
   140015846:	lea    rcx,[rdi+0x30]
   14001584a:	mov    QWORD PTR [rsp+0x50],rcx
   14001584f:	mov    rcx,QWORD PTR [rcx+0x18]
   140015853:	call   0x14002b138
   140015858:	nop
   140015859:	lea    rcx,[rdi+0x10]
   14001585d:	call   0x14000e054
   140015862:	nop
   140015863:	add    rbx,0x8
   140015867:	mov    QWORD PTR [rsp+0x40],rbx
   14001586c:	mov    rax,QWORD PTR [rbx+0x58]
   140015870:	test   rax,rax
   140015873:	je     0x14001587f
   140015875:	mov    rcx,QWORD PTR [rbx+0x58]
   140015879:	call   QWORD PTR [rip+0x23d41]        # 0x1400395c0
   14001587f:	mov    QWORD PTR [rbx+0x58],0x0
   140015887:	mov    QWORD PTR [rsp+0x40],rbx
   14001588c:	lea    rcx,[rbx+0x30]
   140015890:	mov    QWORD PTR [rsp+0x48],rcx
   140015895:	mov    rcx,QWORD PTR [rcx+0x18]
   140015899:	call   0x14002b138
   14001589e:	nop
   14001589f:	lea    rcx,[rbx+0x10]
   1400158a3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400158a8:	add    rsp,0x30
   1400158ac:	pop    rdi
   1400158ad:	jmp    0x14000e054
   1400158b2:	int3   
   1400158b3:	int3   
   1400158b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400158b9:	push   rbx
   1400158ba:	sub    rsp,0x30
   1400158be:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400158c7:	mov    rbx,rcx
   1400158ca:	mov    rax,QWORD PTR [rcx+0x58]
   1400158ce:	test   rax,rax
   1400158d1:	je     0x1400158dd
   1400158d3:	mov    rcx,QWORD PTR [rcx+0x58]
   1400158d7:	call   QWORD PTR [rip+0x23ce3]        # 0x1400395c0
   1400158dd:	mov    QWORD PTR [rbx+0x58],0x0
   1400158e5:	mov    QWORD PTR [rsp+0x40],rbx
   1400158ea:	lea    rcx,[rbx+0x30]
   1400158ee:	mov    QWORD PTR [rsp+0x48],rcx
   1400158f3:	mov    rcx,QWORD PTR [rcx+0x18]
   1400158f7:	call   0x14002b138
   1400158fc:	nop
   1400158fd:	lea    rcx,[rbx+0x10]
   140015901:	add    rsp,0x30
   140015905:	pop    rbx
   140015906:	jmp    0x14000e054
   14001590b:	int3   
   14001590c:	mov    eax,DWORD PTR [rcx+0x2a8]
   140015912:	lea    edx,[rax+0x1]
   140015915:	mov    DWORD PTR [rcx+0x2a8],edx
   14001591b:	ret    
   14001591c:	xor    eax,eax
   14001591e:	ret    
   14001591f:	int3   
   140015920:	rex push rbx
   140015922:	sub    rsp,0x60
   140015926:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001592e:	test   rbx,rbx
   140015931:	jne    0x140015937
   140015933:	xor    eax,eax
   140015935:	jmp    0x140015990
   140015937:	mov    r9,QWORD PTR [rsp+0x90]
   14001593f:	mov    r8,QWORD PTR [rbx]
   140015942:	lea    rax,[rsp+0x50]
   140015947:	mov    QWORD PTR [rsp+0x40],rax
   14001594c:	lea    rax,[rsp+0xa0]
   140015954:	lea    rcx,[rip+0x3b975]        # 0x1400512d0
   14001595b:	mov    QWORD PTR [rsp+0x38],rax
   140015960:	mov    rax,QWORD PTR [rsp+0x98]
   140015968:	and    QWORD PTR [rsp+0x30],0x0
   14001596e:	and    DWORD PTR [rsp+0x28],0x0
   140015973:	mov    QWORD PTR [rsp+0x20],rax
   140015978:	call   0x140020004
   14001597d:	cmp    DWORD PTR [rsp+0xa0],0x0
   140015985:	je     0x14001598b
   140015987:	and    QWORD PTR [rbx],0x0
   14001598b:	mov    rax,QWORD PTR [rsp+0x50]
   140015990:	add    rsp,0x60
   140015994:	pop    rbx
   140015995:	ret    
   140015996:	int3   
   140015997:	int3   
   140015998:	xor    ecx,ecx
   14001599a:	test   rdx,rdx
   14001599d:	jne    0x1400159a7
   14001599f:	test   r8,r8
   1400159a2:	sete   cl
   1400159a5:	jmp    0x1400159cc
   1400159a7:	test   r8,r8
   1400159aa:	jne    0x1400159b1
   1400159ac:	lea    eax,[r8+0x1]
   1400159b0:	ret    
   1400159b1:	mov    rax,QWORD PTR [r8]
   1400159b4:	cmp    QWORD PTR [rdx],rax
   1400159b7:	jne    0x1400159cc
   1400159b9:	mov    eax,DWORD PTR [r8+0x8]
   1400159bd:	cmp    eax,0xffffffff
   1400159c0:	je     0x1400159c7
   1400159c2:	cmp    DWORD PTR [rdx+0x10],eax
   1400159c5:	jne    0x1400159cc
   1400159c7:	mov    ecx,0x1
   1400159cc:	mov    eax,ecx
   1400159ce:	ret    
   1400159cf:	int3   
   1400159d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400159d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400159da:	mov    QWORD PTR [rsp+0x20],rsi
   1400159df:	push   rdi
   1400159e0:	sub    rsp,0x30
   1400159e4:	mov    r11,QWORD PTR [rcx+0x28]
   1400159e8:	mov    r10d,DWORD PTR [rcx+0x30]
   1400159ec:	mov    rdi,r9
   1400159ef:	mov    ebx,DWORD PTR [r11+0x10]
   1400159f3:	mov    r9d,DWORD PTR [r11+0x10]
   1400159f7:	mov    rsi,r8
   1400159fa:	sub    r9d,r10d
   1400159fd:	mov    rbp,rdx
   140015a00:	imul   ebx,DWORD PTR [r11+0x8]
   140015a05:	add    rbx,QWORD PTR [rip+0x3b59c]        # 0x140050fa8
   140015a0c:	add    rbx,r10
   140015a0f:	cmp    r9,0x18
   140015a13:	jae    0x140015a1c
   140015a15:	mov    eax,0x7a
   140015a1a:	jmp    0x140015a3a
   140015a1c:	and    QWORD PTR [rdi],0x0
   140015a20:	test   r8,r8
   140015a23:	jne    0x140015a4f
   140015a25:	xor    ecx,ecx
   140015a27:	mov    rax,QWORD PTR [rdi]
   140015a2a:	mov    QWORD PTR [rbx],rsi
   140015a2d:	mov    QWORD PTR [rbx+0x8],rax
   140015a31:	mov    eax,DWORD PTR [rsp+0x40]
   140015a35:	mov    DWORD PTR [rbx+0x10],eax
   140015a38:	mov    eax,ecx
   140015a3a:	mov    rbx,QWORD PTR [rsp+0x48]
   140015a3f:	mov    rbp,QWORD PTR [rsp+0x50]
   140015a44:	mov    rsi,QWORD PTR [rsp+0x58]
   140015a49:	add    rsp,0x30
   140015a4d:	pop    rdi
   140015a4e:	ret    
   140015a4f:	lea    rax,[rsp+0x40]
   140015a54:	lea    r8,[rbx+0x18]
   140015a58:	add    r9,0xffffffffffffffe8
   140015a5c:	mov    QWORD PTR [rsp+0x28],rax
   140015a61:	mov    rdx,rsi
   140015a64:	mov    rcx,rbp
   140015a67:	mov    QWORD PTR [rsp+0x20],rdi
   140015a6c:	call   0x140016200
   140015a71:	mov    ecx,eax
   140015a73:	test   eax,eax
   140015a75:	je     0x140015a27
   140015a77:	cmp    eax,0x7a
   140015a7a:	je     0x140015a38
   140015a7c:	lea    rdx,[rip+0x351e5]        # 0x14004ac68
   140015a83:	lea    rcx,[rsp+0x40]
   140015a88:	mov    DWORD PTR [rsp+0x40],eax
   140015a8c:	call   0x1400265e8
   140015a91:	int3   
   140015a92:	int3   
   140015a93:	int3   
   140015a94:	rex push rbx
   140015a96:	sub    rsp,0x20
   140015a9a:	mov    rbx,rcx
   140015a9d:	mov    rcx,QWORD PTR [rcx+0x20]
   140015aa1:	xor    edx,edx
   140015aa3:	add    rcx,0x3f0
   140015aaa:	call   0x14001eef4
   140015aaf:	xor    r8d,r8d
   140015ab2:	mov    QWORD PTR [rbx+0x28],rax
   140015ab6:	test   rax,rax
   140015ab9:	jne    0x140015ad5
   140015abb:	mov    rcx,QWORD PTR [rbx+0x20]
   140015abf:	add    rcx,0xb20
   140015ac6:	mov    rax,QWORD PTR [rcx]
   140015ac9:	call   QWORD PTR [rax+0x8]
   140015acc:	mov    DWORD PTR [rax+0x18],0x1
   140015ad3:	jmp    0x140015b0a
   140015ad5:	mov    edx,DWORD PTR [rax+0x10]
   140015ad8:	imul   edx,DWORD PTR [rax+0x8]
   140015adc:	add    rdx,QWORD PTR [rip+0x3b4c5]        # 0x140050fa8
   140015ae3:	mov    DWORD PTR [rdx],0x52414542
   140015ae9:	mov    QWORD PTR [rdx+0x4],0x7
   140015af1:	mov    DWORD PTR [rdx+0xc],r8d
   140015af5:	mov    rax,QWORD PTR [rbx+0x28]
   140015af9:	mov    ecx,DWORD PTR [rax+0x10]
   140015afc:	mov    DWORD PTR [rdx+0x14],r8d
   140015b00:	mov    DWORD PTR [rdx+0x10],ecx
   140015b03:	mov    DWORD PTR [rbx+0x30],0x1c
   140015b0a:	add    rsp,0x20
   140015b0e:	pop    rbx
   140015b0f:	ret    
   140015b10:	mov    QWORD PTR [rsp+0x18],rbx
   140015b15:	mov    QWORD PTR [rsp+0x20],rsi
   140015b1a:	push   rbp
   140015b1b:	push   rdi
   140015b1c:	push   r12
   140015b1e:	push   r14
   140015b20:	push   r15
   140015b22:	mov    rbp,rsp
   140015b25:	sub    rsp,0x80
   140015b2c:	mov    rax,QWORD PTR [rip+0x37915]        # 0x14004d448
   140015b33:	xor    rax,rsp
   140015b36:	mov    QWORD PTR [rbp-0x8],rax
   140015b3a:	movups xmm0,XMMWORD PTR [rip+0x28c2f]        # 0x14003e770
   140015b41:	mov    edi,DWORD PTR [rdx+0x10]
   140015b44:	mov    rsi,QWORD PTR [rip+0x3b45d]        # 0x140050fa8
   140015b4b:	mov    r14,rdx
   140015b4e:	mov    rbx,rcx
   140015b51:	imul   edi,DWORD PTR [rdx+0x8]
   140015b55:	cmp    QWORD PTR [rcx+0x28],0x0
   140015b5a:	movdqu XMMWORD PTR [rbp-0x58],xmm0
   140015b5f:	jne    0x140015b66
   140015b61:	call   0x140015a94
   140015b66:	cmp    QWORD PTR [rbx+0x28],0x0
   140015b6b:	je     0x140015c8a
   140015b71:	mov    r12d,DWORD PTR [rdi+rsi*1+0x4c]
   140015b76:	and    QWORD PTR [rbp-0x60],0x0
   140015b7b:	lea    r15,[rdi+rsi*1]
   140015b7f:	lea    rdx,[r15+0x51]
   140015b83:	lea    r9,[rbp-0x60]
   140015b87:	mov    r8d,r12d
   140015b8a:	mov    rcx,rbx
   140015b8d:	call   0x1400159d0
   140015b92:	cmp    eax,0x7a
   140015b95:	jne    0x140015bff
   140015b97:	mov    rcx,QWORD PTR [rbx+0x28]
   140015b9b:	mov    r9d,DWORD PTR [rbx+0x30]
   140015b9f:	mov    eax,DWORD PTR [rcx+0x10]
   140015ba2:	sub    r9d,0x1c
   140015ba6:	imul   eax,DWORD PTR [rcx+0x8]
   140015baa:	mov    ecx,eax
   140015bac:	mov    rax,QWORD PTR [rip+0x3b3f5]        # 0x140050fa8
   140015bb3:	mov    DWORD PTR [rcx+rax*1+0x18],r9d
   140015bb8:	mov    rcx,QWORD PTR [rbx+0x20]
   140015bbc:	mov    rdx,QWORD PTR [rbx+0x28]
   140015bc0:	add    rcx,0x3f0
   140015bc7:	call   0x14001ef98
   140015bcc:	and    QWORD PTR [rbx+0x28],0x0
   140015bd1:	mov    rcx,rbx
   140015bd4:	call   0x140015a94
   140015bd9:	cmp    QWORD PTR [rbx+0x28],0x0
   140015bde:	je     0x140015c8a
   140015be4:	lea    r9,[rbp-0x60]
   140015be8:	lea    rdx,[r15+0x51]
   140015bec:	mov    r8d,r12d
   140015bef:	mov    rcx,rbx
   140015bf2:	call   0x1400159d0
   140015bf7:	test   eax,eax
   140015bf9:	jne    0x140015c8a
   140015bff:	mov    eax,DWORD PTR [rdi+rsi*1+0x48]
   140015c03:	movups xmm0,XMMWORD PTR [rdi+rsi*1+0x28]
   140015c08:	mov    cl,BYTE PTR [rdi+rsi*1+0x50]
   140015c0c:	mov    r15,QWORD PTR [rbp-0x60]
   140015c10:	mov    DWORD PTR [rbp-0x24],eax
   140015c13:	mov    eax,DWORD PTR [rdi+rsi*1+0x4c]
   140015c17:	movdqu XMMWORD PTR [rbp-0x34],xmm0
   140015c1c:	mov    DWORD PTR [rbp-0x14],eax
   140015c1f:	mov    eax,DWORD PTR [rbx+0x30]
   140015c22:	mov    DWORD PTR [rbp-0x10],0x1
   140015c29:	add    eax,0x18
   140015c2c:	mov    DWORD PTR [rbp-0x18],r15d
   140015c30:	mov    DWORD PTR [rbp-0x1c],eax
   140015c33:	and    cl,0x1
   140015c36:	jne    0x140015c4e
   140015c38:	mov    rax,QWORD PTR [rdi+rsi*1+0x38]
   140015c3d:	cmp    rax,QWORD PTR [rbp-0x58]
   140015c41:	jne    0x140015c63
   140015c43:	mov    rax,QWORD PTR [rdi+rsi*1+0x40]
   140015c48:	cmp    rax,QWORD PTR [rbp-0x50]
   140015c4c:	jne    0x140015c63
   140015c4e:	test   cl,cl
   140015c50:	jne    0x140015c5c
   140015c52:	call   0x140006628
   140015c57:	mov    QWORD PTR [rdi+rsi*1+0x38],rax
   140015c5c:	mov    DWORD PTR [rbp-0x10],0x3
   140015c63:	mov    rax,QWORD PTR [rbx+0x28]
   140015c67:	movups xmm0,XMMWORD PTR [rdi+rsi*1+0x38]
   140015c6c:	lea    rdx,[rbp-0x48]
   140015c70:	mov    ecx,DWORD PTR [rax+0x8]
   140015c73:	mov    DWORD PTR [rbp-0x20],ecx
   140015c76:	mov    rcx,rbx
   140015c79:	movdqu XMMWORD PTR [rbp-0x44],xmm0
   140015c7e:	call   0x140015ecc
   140015c83:	lea    eax,[r15+0x18]
   140015c87:	add    DWORD PTR [rbx+0x30],eax
   140015c8a:	mov    edx,DWORD PTR [r14+0x8]
   140015c8e:	mov    DWORD PTR [r14+0x14],0x1
   140015c96:	mov    rcx,QWORD PTR [rbx+0x20]
   140015c9a:	add    rcx,0x3f0
   140015ca1:	call   0x14001f03c
   140015ca6:	mov    rcx,QWORD PTR [rbp-0x8]
   140015caa:	xor    rcx,rsp
   140015cad:	call   0x140020e50
   140015cb2:	lea    r11,[rsp+0x80]
   140015cba:	mov    rbx,QWORD PTR [r11+0x40]
   140015cbe:	mov    rsi,QWORD PTR [r11+0x48]
   140015cc2:	mov    rsp,r11
   140015cc5:	pop    r15
   140015cc7:	pop    r14
   140015cc9:	pop    r12
   140015ccb:	pop    rdi
   140015ccc:	pop    rbp
   140015ccd:	ret    
   140015cce:	int3   
   140015ccf:	int3   
   140015cd0:	mov    QWORD PTR [rsp+0x10],rbx
   140015cd5:	mov    QWORD PTR [rsp+0x18],rbp
   140015cda:	push   rsi
   140015cdb:	push   rdi
   140015cdc:	push   r13
   140015cde:	push   r14
   140015ce0:	push   r15
   140015ce2:	sub    rsp,0x330
   140015ce9:	mov    rax,QWORD PTR [rip+0x37758]        # 0x14004d448
   140015cf0:	xor    rax,rsp
   140015cf3:	mov    QWORD PTR [rsp+0x320],rax
   140015cfb:	mov    r14,QWORD PTR [rcx+0x8]
   140015cff:	mov    rsi,QWORD PTR [rcx]
   140015d02:	mov    r15d,DWORD PTR [rip+0x38993]        # 0x14004e69c
   140015d09:	mov    r13,QWORD PTR [rcx+0x20]
   140015d0d:	mov    ebp,edx
   140015d0f:	mov    rbx,rcx
   140015d12:	cmp    rsi,r14
   140015d15:	je     0x140015d84
   140015d17:	lea    rdi,[rsi+0x4]
   140015d1b:	cmp    DWORD PTR [rdi+0x24],ebp
   140015d1e:	jne    0x140015d77
   140015d20:	mov    eax,DWORD PTR [rdi+0x20]
   140015d23:	movups xmm0,XMMWORD PTR [rdi]
   140015d26:	movups xmm1,XMMWORD PTR [rdi+0x10]
   140015d2a:	mov    DWORD PTR [rsp+0x44],eax
   140015d2e:	mov    eax,DWORD PTR [rdi+0x28]
   140015d31:	lea    rcx,[r13+0x1018]
   140015d38:	movdqu XMMWORD PTR [rsp+0x24],xmm0
   140015d3e:	movdqu XMMWORD PTR [rsp+0x34],xmm1
   140015d44:	mov    DWORD PTR [rsp+0x4c],eax
   140015d48:	mov    eax,DWORD PTR [rdi+0x2c]
   140015d4b:	lea    rdx,[rsp+0x20]
   140015d50:	mov    DWORD PTR [rsp+0x50],eax
   140015d54:	mov    eax,DWORD PTR [rdi+0x30]
   140015d57:	xor    r8d,r8d
   140015d5a:	mov    DWORD PTR [rsp+0x54],eax
   140015d5e:	mov    eax,DWORD PTR [rdi+0x34]
   140015d61:	mov    DWORD PTR [rsp+0x20],0x11
   140015d69:	mov    DWORD PTR [rsp+0x58],eax
   140015d6d:	mov    DWORD PTR [rsp+0x48],r15d
   140015d72:	call   0x140011cec
   140015d77:	add    rsi,0x3c
   140015d7b:	add    rdi,0x3c
   140015d7f:	cmp    rsi,r14
   140015d82:	jne    0x140015d1b
   140015d84:	mov    rax,QWORD PTR [rbx+0x8]
   140015d88:	mov    rdx,QWORD PTR [rbx]
   140015d8b:	cmp    rdx,rax
   140015d8e:	je     0x140015df9
   140015d90:	cmp    DWORD PTR [rdx+0x28],ebp
   140015d93:	je     0x140015d9e
   140015d95:	add    rdx,0x3c
   140015d99:	cmp    rdx,rax
   140015d9c:	jne    0x140015d90
   140015d9e:	cmp    rdx,rax
   140015da1:	je     0x140015df9
   140015da3:	lea    r8,[rdx+0x3c]
   140015da7:	jmp    0x140015df4
   140015da9:	cmp    DWORD PTR [r8+0x28],ebp
   140015dad:	je     0x140015df0
   140015daf:	mov    rcx,QWORD PTR [r8]
   140015db2:	mov    QWORD PTR [rdx],rcx
   140015db5:	mov    rcx,QWORD PTR [r8+0x8]
   140015db9:	add    rdx,0x3c
   140015dbd:	mov    QWORD PTR [rdx-0x34],rcx
   140015dc1:	mov    rcx,QWORD PTR [r8+0x10]
   140015dc5:	mov    QWORD PTR [rdx-0x2c],rcx
   140015dc9:	mov    rcx,QWORD PTR [r8+0x18]
   140015dcd:	mov    QWORD PTR [rdx-0x24],rcx
   140015dd1:	mov    rcx,QWORD PTR [r8+0x20]
   140015dd5:	mov    QWORD PTR [rdx-0x1c],rcx
   140015dd9:	mov    rcx,QWORD PTR [r8+0x28]
   140015ddd:	mov    QWORD PTR [rdx-0x14],rcx
   140015de1:	mov    rcx,QWORD PTR [r8+0x30]
   140015de5:	mov    QWORD PTR [rdx-0xc],rcx
   140015de9:	mov    ecx,DWORD PTR [r8+0x38]
   140015ded:	mov    DWORD PTR [rdx-0x4],ecx
   140015df0:	add    r8,0x3c
   140015df4:	cmp    r8,rax
   140015df7:	jne    0x140015da9
   140015df9:	mov    rax,QWORD PTR [rbx]
   140015dfc:	mov    r8,QWORD PTR [rbx+0x8]
   140015e00:	cmp    rdx,rax
   140015e03:	jne    0x140015e0b
   140015e05:	mov    QWORD PTR [rbx+0x8],rax
   140015e09:	jmp    0x140015e65
   140015e0b:	cmp    rdx,r8
   140015e0e:	je     0x140015e65
   140015e10:	mov    rcx,r8
   140015e13:	cmp    r8,r8
   140015e16:	je     0x140015e61
   140015e18:	mov    rax,QWORD PTR [rcx]
   140015e1b:	add    rcx,0x3c
   140015e1f:	mov    QWORD PTR [rdx],rax
   140015e22:	mov    rax,QWORD PTR [rcx-0x34]
   140015e26:	add    rdx,0x3c
   140015e2a:	mov    QWORD PTR [rdx-0x34],rax
   140015e2e:	mov    rax,QWORD PTR [rcx-0x2c]
   140015e32:	mov    QWORD PTR [rdx-0x2c],rax
   140015e36:	mov    rax,QWORD PTR [rcx-0x24]
   140015e3a:	mov    QWORD PTR [rdx-0x24],rax
   140015e3e:	mov    rax,QWORD PTR [rcx-0x1c]
   140015e42:	mov    QWORD PTR [rdx-0x1c],rax
   140015e46:	mov    rax,QWORD PTR [rcx-0x14]
   140015e4a:	mov    QWORD PTR [rdx-0x14],rax
   140015e4e:	mov    rax,QWORD PTR [rcx-0xc]
   140015e52:	mov    QWORD PTR [rdx-0xc],rax
   140015e56:	mov    eax,DWORD PTR [rcx-0x4]
   140015e59:	mov    DWORD PTR [rdx-0x4],eax
   140015e5c:	cmp    rcx,r8
   140015e5f:	jne    0x140015e18
   140015e61:	mov    QWORD PTR [rbx+0x8],rdx
   140015e65:	mov    rcx,QWORD PTR [rsp+0x320]
   140015e6d:	xor    rcx,rsp
   140015e70:	call   0x140020e50
   140015e75:	lea    r11,[rsp+0x330]
   140015e7d:	mov    rbx,QWORD PTR [r11+0x38]
   140015e81:	mov    rbp,QWORD PTR [r11+0x40]
   140015e85:	mov    rsp,r11
   140015e88:	pop    r15
   140015e8a:	pop    r14
   140015e8c:	pop    r13
   140015e8e:	pop    rdi
   140015e8f:	pop    rsi
   140015e90:	ret    
   140015e91:	int3   
   140015e92:	int3   
   140015e93:	int3   
   140015e94:	mov    QWORD PTR [rsp+0x8],rcx
   140015e99:	push   rbx
   140015e9a:	sub    rsp,0x30
   140015e9e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015ea7:	mov    rbx,rcx
   140015eaa:	mov    rcx,QWORD PTR [rcx]
   140015ead:	test   rcx,rcx
   140015eb0:	je     0x140015ec5
   140015eb2:	call   0x140020e30
   140015eb7:	and    QWORD PTR [rbx],0x0
   140015ebb:	and    QWORD PTR [rbx+0x8],0x0
   140015ec0:	and    QWORD PTR [rbx+0x10],0x0
   140015ec5:	add    rsp,0x30
   140015ec9:	pop    rbx
   140015eca:	ret    
   140015ecb:	int3   
   140015ecc:	rex push rdi
   140015ece:	sub    rsp,0x30
   140015ed2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015edb:	mov    QWORD PTR [rsp+0x50],rbx
   140015ee0:	mov    QWORD PTR [rsp+0x58],rsi
   140015ee5:	mov    rsi,rdx
   140015ee8:	mov    rbx,rcx
   140015eeb:	mov    rcx,QWORD PTR [rcx+0x8]
   140015eef:	cmp    rdx,rcx
   140015ef2:	jae    0x140015f89
   140015ef8:	cmp    QWORD PTR [rbx],rdx
   140015efb:	ja     0x140015f89
   140015f01:	sub    rsi,QWORD PTR [rbx]
   140015f04:	movabs rax,0x8888888888888889
   140015f0e:	imul   rsi
   140015f11:	lea    rdi,[rsi+rdx*1]
   140015f15:	sar    rdi,0x5
   140015f19:	mov    rax,rdi
   140015f1c:	shr    rax,0x3f
   140015f20:	add    rdi,rax
   140015f23:	cmp    rcx,QWORD PTR [rbx+0x10]
   140015f27:	jne    0x140015f31
   140015f29:	mov    rcx,rbx
   140015f2c:	call   0x140015ff4
   140015f31:	imul   rdi,rdi,0x3c
   140015f35:	add    rdi,QWORD PTR [rbx]
   140015f38:	mov    rcx,QWORD PTR [rbx+0x8]
   140015f3c:	mov    QWORD PTR [rsp+0x40],rcx
   140015f41:	mov    QWORD PTR [rsp+0x48],rcx
   140015f46:	test   rcx,rcx
   140015f49:	je     0x140015f87
   140015f4b:	mov    rax,QWORD PTR [rdi]
   140015f4e:	mov    QWORD PTR [rcx],rax
   140015f51:	mov    rax,QWORD PTR [rdi+0x8]
   140015f55:	mov    QWORD PTR [rcx+0x8],rax
   140015f59:	mov    rax,QWORD PTR [rdi+0x10]
   140015f5d:	mov    QWORD PTR [rcx+0x10],rax
   140015f61:	mov    rax,QWORD PTR [rdi+0x18]
   140015f65:	mov    QWORD PTR [rcx+0x18],rax
   140015f69:	mov    rax,QWORD PTR [rdi+0x20]
   140015f6d:	mov    QWORD PTR [rcx+0x20],rax
   140015f71:	mov    rax,QWORD PTR [rdi+0x28]
   140015f75:	mov    QWORD PTR [rcx+0x28],rax
   140015f79:	mov    rax,QWORD PTR [rdi+0x30]
   140015f7d:	mov    QWORD PTR [rcx+0x30],rax
   140015f81:	mov    eax,DWORD PTR [rdi+0x38]
   140015f84:	mov    DWORD PTR [rcx+0x38],eax
   140015f87:	jmp    0x140015fdc
   140015f89:	cmp    rcx,QWORD PTR [rbx+0x10]
   140015f8d:	jne    0x140015f97
   140015f8f:	mov    rcx,rbx
   140015f92:	call   0x140015ff4
   140015f97:	mov    rcx,QWORD PTR [rbx+0x8]
   140015f9b:	test   rcx,rcx
   140015f9e:	je     0x140015fdc
   140015fa0:	mov    rax,QWORD PTR [rsi]
   140015fa3:	mov    QWORD PTR [rcx],rax
   140015fa6:	mov    rax,QWORD PTR [rsi+0x8]
   140015faa:	mov    QWORD PTR [rcx+0x8],rax
   140015fae:	mov    rax,QWORD PTR [rsi+0x10]
   140015fb2:	mov    QWORD PTR [rcx+0x10],rax
   140015fb6:	mov    rax,QWORD PTR [rsi+0x18]
   140015fba:	mov    QWORD PTR [rcx+0x18],rax
   140015fbe:	mov    rax,QWORD PTR [rsi+0x20]
   140015fc2:	mov    QWORD PTR [rcx+0x20],rax
   140015fc6:	mov    rax,QWORD PTR [rsi+0x28]
   140015fca:	mov    QWORD PTR [rcx+0x28],rax
   140015fce:	mov    rax,QWORD PTR [rsi+0x30]
   140015fd2:	mov    QWORD PTR [rcx+0x30],rax
   140015fd6:	mov    eax,DWORD PTR [rsi+0x38]
   140015fd9:	mov    DWORD PTR [rcx+0x38],eax
   140015fdc:	add    QWORD PTR [rbx+0x8],0x3c
   140015fe1:	mov    rbx,QWORD PTR [rsp+0x50]
   140015fe6:	mov    rsi,QWORD PTR [rsp+0x58]
   140015feb:	add    rsp,0x30
   140015fef:	pop    rdi
   140015ff0:	ret    
   140015ff1:	int3   
   140015ff2:	int3   
   140015ff3:	int3   
   140015ff4:	sub    rsp,0x28
   140015ff8:	mov    r10,QWORD PTR [rcx+0x10]
   140015ffc:	mov    r9,QWORD PTR [rcx+0x8]
   140016000:	movabs r11,0x8888888888888889
   14001600a:	mov    r8,r10
   14001600d:	mov    rax,r11
   140016010:	sub    r8,r9
   140016013:	imul   r8
   140016016:	add    rdx,r8
   140016019:	sar    rdx,0x5
   14001601d:	mov    rax,rdx
   140016020:	shr    rax,0x3f
   140016024:	add    rdx,rax
   140016027:	cmp    rdx,0x1
   14001602b:	jae    0x14001609c
   14001602d:	sub    r9,QWORD PTR [rcx]
   140016030:	mov    rax,r11
   140016033:	imul   r9
   140016036:	add    rdx,r9
   140016039:	movabs r9,0x444444444444444
   140016043:	sar    rdx,0x5
   140016047:	mov    rax,rdx
   14001604a:	shr    rax,0x3f
   14001604e:	add    rdx,rax
   140016051:	mov    rax,r9
   140016054:	sub    rax,rdx
   140016057:	cmp    rax,0x1
   14001605b:	jb     0x1400160a1
   14001605d:	sub    r10,QWORD PTR [rcx]
   140016060:	lea    r8,[rdx+0x1]
   140016064:	mov    rax,r11
   140016067:	imul   r10
   14001606a:	add    rdx,r10
   14001606d:	sar    rdx,0x5
   140016071:	mov    rax,rdx
   140016074:	shr    rax,0x3f
   140016078:	add    rdx,rax
   14001607b:	mov    rax,rdx
   14001607e:	shr    rax,1
   140016081:	sub    r9,rax
   140016084:	cmp    r9,rdx
   140016087:	jae    0x14001608d
   140016089:	xor    edx,edx
   14001608b:	jmp    0x140016090
   14001608d:	add    rdx,rax
   140016090:	cmp    rdx,r8
   140016093:	cmovb  rdx,r8
   140016097:	call   0x1400160b0
   14001609c:	add    rsp,0x28
   1400160a0:	ret    
   1400160a1:	lea    rcx,[rip+0x27a98]        # 0x14003db40
   1400160a8:	call   0x14002a95c
   1400160ad:	int3   
   1400160ae:	int3   
   1400160af:	int3   
   1400160b0:	mov    rax,rsp
   1400160b3:	push   r14
   1400160b5:	sub    rsp,0x40
   1400160b9:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400160c1:	mov    QWORD PTR [rax+0x8],rbx
   1400160c5:	mov    QWORD PTR [rax+0x18],rsi
   1400160c9:	mov    QWORD PTR [rax+0x20],rdi
   1400160cd:	mov    rbx,rdx
   1400160d0:	mov    r14,rcx
   1400160d3:	xor    edi,edi
   1400160d5:	mov    QWORD PTR [rsp+0x58],rdi
   1400160da:	test   rdx,rdx
   1400160dd:	je     0x14001610d
   1400160df:	movabs rax,0x444444444444444
   1400160e9:	cmp    rdx,rax
   1400160ec:	ja     0x140016107
   1400160ee:	mov    rcx,rdx
   1400160f1:	imul   rcx,rcx,0x3c
   1400160f5:	call   0x140021a98
   1400160fa:	mov    rdi,rax
   1400160fd:	mov    QWORD PTR [rsp+0x58],rax
   140016102:	test   rax,rax
   140016105:	jne    0x14001610d
   140016107:	call   0x14002a918
   14001610c:	nop
   14001610d:	mov    r8,rdi
   140016110:	mov    rdx,QWORD PTR [r14+0x8]
   140016114:	mov    rcx,QWORD PTR [r14]
   140016117:	call   0x140016180
   14001611c:	nop
   14001611d:	mov    rcx,QWORD PTR [r14]
   140016120:	mov    r8,QWORD PTR [r14+0x8]
   140016124:	sub    r8,rcx
   140016127:	movabs rax,0x8888888888888889
   140016131:	imul   r8
   140016134:	lea    rsi,[r8+rdx*1]
   140016138:	sar    rsi,0x5
   14001613c:	mov    rax,rsi
   14001613f:	shr    rax,0x3f
   140016143:	add    rsi,rax
   140016146:	test   rcx,rcx
   140016149:	je     0x140016150
   14001614b:	call   0x140020e30
   140016150:	imul   rbx,rbx,0x3c
   140016154:	add    rbx,rdi
   140016157:	mov    QWORD PTR [r14+0x10],rbx
   14001615b:	imul   rsi,rsi,0x3c
   14001615f:	add    rsi,rdi
   140016162:	mov    QWORD PTR [r14+0x8],rsi
   140016166:	mov    QWORD PTR [r14],rdi
   140016169:	mov    rbx,QWORD PTR [rsp+0x50]
   14001616e:	mov    rsi,QWORD PTR [rsp+0x60]
   140016173:	mov    rdi,QWORD PTR [rsp+0x68]
   140016178:	add    rsp,0x40
   14001617c:	pop    r14
   14001617e:	ret    
   14001617f:	int3   
   140016180:	mov    QWORD PTR [rsp+0x20],r9
   140016185:	mov    QWORD PTR [rsp+0x18],r8
   14001618a:	sub    rsp,0x38
   14001618e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016197:	cmp    rcx,rdx
   14001619a:	je     0x1400161f7
   14001619c:	mov    QWORD PTR [rsp+0x58],r8
   1400161a1:	test   r8,r8
   1400161a4:	je     0x1400161e3
   1400161a6:	mov    rax,QWORD PTR [rcx]
   1400161a9:	mov    QWORD PTR [r8],rax
   1400161ac:	mov    rax,QWORD PTR [rcx+0x8]
   1400161b0:	mov    QWORD PTR [r8+0x8],rax
   1400161b4:	mov    rax,QWORD PTR [rcx+0x10]
   1400161b8:	mov    QWORD PTR [r8+0x10],rax
   1400161bc:	mov    rax,QWORD PTR [rcx+0x18]
   1400161c0:	mov    QWORD PTR [r8+0x18],rax
   1400161c4:	mov    rax,QWORD PTR [rcx+0x20]
   1400161c8:	mov    QWORD PTR [r8+0x20],rax
   1400161cc:	mov    rax,QWORD PTR [rcx+0x28]
   1400161d0:	mov    QWORD PTR [r8+0x28],rax
   1400161d4:	mov    rax,QWORD PTR [rcx+0x30]
   1400161d8:	mov    QWORD PTR [r8+0x30],rax
   1400161dc:	mov    eax,DWORD PTR [rcx+0x38]
   1400161df:	mov    DWORD PTR [r8+0x38],eax
   1400161e3:	add    r8,0x3c
   1400161e7:	mov    QWORD PTR [rsp+0x50],r8
   1400161ec:	add    rcx,0x3c
   1400161f0:	mov    QWORD PTR [rsp+0x40],rcx
   1400161f5:	jmp    0x140016197
   1400161f7:	mov    rax,r8
   1400161fa:	add    rsp,0x38
   1400161fe:	ret    
   1400161ff:	int3   
   140016200:	mov    rax,rsp
   140016203:	mov    QWORD PTR [rax+0x8],rbx
   140016207:	mov    QWORD PTR [rax+0x10],rbp
   14001620b:	mov    QWORD PTR [rax+0x18],rsi
   14001620f:	mov    QWORD PTR [rax+0x20],rdi
   140016213:	push   r14
   140016215:	mov    rdi,QWORD PTR [rsp+0x30]
   14001621a:	mov    rbx,r8
   14001621d:	xor    r11d,r11d
   140016220:	mov    rbp,r9
   140016223:	mov    r14,rdx
   140016226:	mov    rsi,rcx
   140016229:	neg    rbx
   14001622c:	mov    r10,rcx
   14001622f:	mov    r9,r10
   140016232:	xor    ecx,ecx
   140016234:	mov    rdx,r10
   140016237:	sub    r9,rsi
   14001623a:	lea    rax,[r9+rcx*1]
   14001623e:	cmp    rax,r14
   140016241:	jae    0x140016259
   140016243:	mov    al,BYTE PTR [r10]
   140016246:	cmp    BYTE PTR [rdx],al
   140016248:	jne    0x140016259
   14001624a:	inc    rcx
   14001624d:	inc    rdx
   140016250:	cmp    rcx,0x80
   140016257:	jl     0x14001623a
   140016259:	cmp    rdx,r10
   14001625c:	je     0x1400162a1
   14001625e:	mov    eax,edx
   140016260:	sub    eax,r10d
   140016263:	cmp    BYTE PTR [r10],0x1
   140016267:	lea    ecx,[rax*2-0x2]
   14001626e:	ja     0x14001629a
   140016270:	movzx  eax,BYTE PTR [r10]
   140016274:	or     ecx,eax
   140016276:	lea    rax,[rbx+r8*1]
   14001627a:	cmp    rax,rbp
   14001627d:	jae    0x140016293
   14001627f:	inc    QWORD PTR [rdi]
   140016282:	movzx  eax,cl
   140016285:	mov    BYTE PTR [r8],cl
   140016288:	inc    r8
   14001628b:	mov    r10,rdx
   14001628e:	add    r11d,eax
   140016291:	jmp    0x14001622f
   140016293:	mov    eax,0x7a
   140016298:	jmp    0x1400162b0
   14001629a:	mov    eax,0xd
   14001629f:	jmp    0x1400162b0
   1400162a1:	mov    rax,QWORD PTR [rsp+0x38]
   1400162a6:	test   rax,rax
   1400162a9:	je     0x1400162ae
   1400162ab:	mov    DWORD PTR [rax],r11d
   1400162ae:	xor    eax,eax
   1400162b0:	mov    rbx,QWORD PTR [rsp+0x10]
   1400162b5:	mov    rbp,QWORD PTR [rsp+0x18]
   1400162ba:	mov    rsi,QWORD PTR [rsp+0x20]
   1400162bf:	mov    rdi,QWORD PTR [rsp+0x28]
   1400162c4:	pop    r14
   1400162c6:	ret    
   1400162c7:	int3   
   1400162c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400162cd:	push   rdi
   1400162ce:	sub    rsp,0x20
   1400162d2:	mov    ebx,edx
   1400162d4:	mov    rdi,rcx
   1400162d7:	call   0x1400162f8
   1400162dc:	test   bl,0x1
   1400162df:	je     0x1400162e9
   1400162e1:	mov    rcx,rdi
   1400162e4:	call   0x140020e30
   1400162e9:	mov    rax,rdi
   1400162ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400162f1:	add    rsp,0x20
   1400162f5:	pop    rdi
   1400162f6:	ret    
   1400162f7:	int3   
   1400162f8:	mov    QWORD PTR [rsp+0x8],rcx
   1400162fd:	push   rbx
   1400162fe:	sub    rsp,0x30
   140016302:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001630b:	mov    rbx,rcx
   14001630e:	lea    rax,[rip+0x2852b]        # 0x14003e840
   140016315:	mov    QWORD PTR [rcx],rax
   140016318:	cmp    DWORD PTR [rcx+0x10],0x0
   14001631c:	je     0x140016328
   14001631e:	mov    rcx,QWORD PTR [rcx+0x8]
   140016322:	call   QWORD PTR [rip+0x231b0]        # 0x1400394d8
   140016328:	mov    rcx,QWORD PTR [rbx+0x8]
   14001632c:	call   QWORD PTR [rip+0x2328e]        # 0x1400395c0
   140016332:	and    QWORD PTR [rbx+0x8],0x0
   140016337:	lea    rax,[rip+0x276f2]        # 0x14003da30
   14001633e:	mov    QWORD PTR [rbx],rax
   140016341:	add    rsp,0x30
   140016345:	pop    rbx
   140016346:	ret    
   140016347:	int3   
   140016348:	mov    QWORD PTR [rsp+0x8],rbx
   14001634d:	mov    QWORD PTR [rsp+0x10],rsi
   140016352:	push   rdi
   140016353:	sub    rsp,0x20
   140016357:	mov    eax,r9d
   14001635a:	mov    rdi,rcx
   14001635d:	mov    r9,rdx
   140016360:	xor    r8d,r8d
   140016363:	xor    ecx,ecx
   140016365:	mov    edx,eax
   140016367:	call   QWORD PTR [rip+0x231b3]        # 0x140039520
   14001636d:	mov    QWORD PTR [rdi+0x8],rax
   140016371:	call   QWORD PTR [rip+0x23269]        # 0x1400395e0
   140016377:	mov    esi,eax
   140016379:	call   QWORD PTR [rip+0x23261]        # 0x1400395e0
   14001637f:	xor    ebx,ebx
   140016381:	cmp    eax,0xb7
   140016386:	jne    0x140016396
   140016388:	mov    rcx,QWORD PTR [rdi+0x8]
   14001638c:	call   QWORD PTR [rip+0x2322e]        # 0x1400395c0
   140016392:	mov    QWORD PTR [rdi+0x8],rbx
   140016396:	mov    ecx,esi
   140016398:	call   QWORD PTR [rip+0x22e2a]        # 0x1400391c8
   14001639e:	cmp    QWORD PTR [rdi+0x8],rbx
   1400163a2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400163a7:	setne  bl
   1400163aa:	mov    eax,ebx
   1400163ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400163b1:	add    rsp,0x20
   1400163b5:	pop    rdi
   1400163b6:	ret    
   1400163b7:	int3   
   1400163b8:	mov    QWORD PTR [rsp+0x18],rbx
   1400163bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400163c2:	push   rdi
   1400163c3:	sub    rsp,0x90
   1400163ca:	mov    rax,QWORD PTR [rip+0x37077]        # 0x14004d448
   1400163d1:	xor    rax,rsp
   1400163d4:	mov    QWORD PTR [rsp+0x80],rax
   1400163dc:	mov    rsi,rdx
   1400163df:	xor    r9d,r9d
   1400163e2:	xor    r8d,r8d
   1400163e5:	xor    edx,edx
   1400163e7:	mov    rdi,rcx
   1400163ea:	xor    ebx,ebx
   1400163ec:	call   QWORD PTR [rip+0x2318e]        # 0x140039580
   1400163f2:	cmp    eax,0xffffffff
   1400163f5:	je     0x140016470
   1400163f7:	lea    r9,[rsp+0x30]
   1400163fc:	lea    r8d,[rbx+0x40]
   140016400:	lea    rdx,[rsp+0x40]
   140016405:	mov    rcx,rdi
   140016408:	mov    QWORD PTR [rsp+0x20],rbx
   14001640d:	call   QWORD PTR [rip+0x230ad]        # 0x1400394c0
   140016413:	test   eax,eax
   140016415:	je     0x140016470
   140016417:	cmp    DWORD PTR [rsp+0x30],0x40
   14001641c:	jne    0x140016470
   14001641e:	mov    eax,0x5a4d
   140016423:	cmp    WORD PTR [rsp+0x40],ax
   140016428:	jne    0x140016470
   14001642a:	mov    edx,DWORD PTR [rsp+0x7c]
   14001642e:	xor    r9d,r9d
   140016431:	xor    r8d,r8d
   140016434:	mov    rcx,rdi
   140016437:	call   QWORD PTR [rip+0x23143]        # 0x140039580
   14001643d:	cmp    eax,0xffffffff
   140016440:	je     0x140016470
   140016442:	lea    r9,[rsp+0x30]
   140016447:	mov    r8d,0x108
   14001644d:	mov    rdx,rsi
   140016450:	mov    rcx,rdi
   140016453:	mov    QWORD PTR [rsp+0x20],rbx
   140016458:	call   QWORD PTR [rip+0x23062]        # 0x1400394c0
   14001645e:	test   eax,eax
   140016460:	je     0x140016470
   140016462:	cmp    DWORD PTR [rsp+0x30],0x108
   14001646a:	lea    eax,[rbx+0x1]
   14001646d:	cmove  ebx,eax
   140016470:	mov    eax,ebx
   140016472:	mov    rcx,QWORD PTR [rsp+0x80]
   14001647a:	xor    rcx,rsp
   14001647d:	call   0x140020e50
   140016482:	lea    r11,[rsp+0x90]
   14001648a:	mov    rbx,QWORD PTR [r11+0x20]
   14001648e:	mov    rsi,QWORD PTR [r11+0x28]
   140016492:	mov    rsp,r11
   140016495:	pop    rdi
   140016496:	ret    
   140016497:	int3   
   140016498:	mov    QWORD PTR [rsp+0x8],rbx
   14001649d:	mov    QWORD PTR [rsp+0x10],rsi
   1400164a2:	push   rdi
   1400164a3:	sub    rsp,0x40
   1400164a7:	xor    ebx,ebx
   1400164a9:	mov    rsi,rdx
   1400164ac:	test   rcx,rcx
   1400164af:	je     0x140016509
   1400164b1:	or     rax,0xffffffffffffffff
   1400164b5:	inc    rax
   1400164b8:	cmp    WORD PTR [rcx+rax*2],bx
   1400164bc:	jne    0x1400164b5
   1400164be:	test   rax,rax
   1400164c1:	je     0x140016509
   1400164c3:	xor    r9d,r9d
   1400164c6:	mov    QWORD PTR [rsp+0x30],rbx
   1400164cb:	mov    edx,0x80000000
   1400164d0:	lea    r8d,[r9+0x1]
   1400164d4:	mov    DWORD PTR [rsp+0x28],ebx
   1400164d8:	mov    DWORD PTR [rsp+0x20],0x3
   1400164e0:	call   QWORD PTR [rip+0x22eb2]        # 0x140039398
   1400164e6:	mov    rdi,rax
   1400164e9:	cmp    rax,0xffffffffffffffff
   1400164ed:	je     0x140016505
   1400164ef:	mov    rdx,rsi
   1400164f2:	mov    rcx,rax
   1400164f5:	call   0x1400163b8
   1400164fa:	mov    rcx,rdi
   1400164fd:	mov    ebx,eax
   1400164ff:	call   QWORD PTR [rip+0x230bb]        # 0x1400395c0
   140016505:	mov    eax,ebx
   140016507:	jmp    0x14001650b
   140016509:	xor    eax,eax
   14001650b:	mov    rbx,QWORD PTR [rsp+0x50]
   140016510:	mov    rsi,QWORD PTR [rsp+0x58]
   140016515:	add    rsp,0x40
   140016519:	pop    rdi
   14001651a:	ret    
   14001651b:	int3   
   14001651c:	mov    QWORD PTR [rsp+0x8],rbx
   140016521:	push   rdi
   140016522:	sub    rsp,0x20
   140016526:	mov    ebx,edx
   140016528:	mov    rdi,rcx
   14001652b:	call   0x14001654c
   140016530:	test   bl,0x1
   140016533:	je     0x14001653d
   140016535:	mov    rcx,rdi
   140016538:	call   0x140020e30
   14001653d:	mov    rax,rdi
   140016540:	mov    rbx,QWORD PTR [rsp+0x30]
   140016545:	add    rsp,0x20
   140016549:	pop    rdi
   14001654a:	ret    
   14001654b:	int3   
   14001654c:	mov    QWORD PTR [rsp+0x8],rcx
   140016551:	sub    rsp,0x38
   140016555:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001655e:	lea    rax,[rip+0x28303]        # 0x14003e868
   140016565:	mov    QWORD PTR [rcx],rax
   140016568:	lea    rax,[rcx+0x8]
   14001656c:	mov    QWORD PTR [rsp+0x40],rax
   140016571:	mov    rdx,QWORD PTR [rax]
   140016574:	sub    rdx,0x18
   140016578:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001657d:	jg     0x140016588
   14001657f:	mov    rcx,QWORD PTR [rdx]
   140016582:	mov    rax,QWORD PTR [rcx]
   140016585:	call   QWORD PTR [rax+0x8]
   140016588:	add    rsp,0x38
   14001658c:	ret    
   14001658d:	int3   
   14001658e:	int3   
   14001658f:	int3   
   140016590:	mov    QWORD PTR [rsp+0x8],rbx
   140016595:	mov    QWORD PTR [rsp+0x10],rbp
   14001659a:	mov    QWORD PTR [rsp+0x18],rsi
   14001659f:	push   rdi
   1400165a0:	push   r14
   1400165a2:	push   r15
   1400165a4:	sub    rsp,0x20
   1400165a8:	mov    esi,edx
   1400165aa:	mov    rbx,rcx
   1400165ad:	cmp    edx,0x2
   1400165b0:	jge    0x1400165bd
   1400165b2:	mov    rax,QWORD PTR [rcx]
   1400165b5:	call   QWORD PTR [rax+0x38]
   1400165b8:	jmp    0x14001663e
   1400165bd:	xor    r15d,r15d
   1400165c0:	test   r8,r8
   1400165c3:	jne    0x1400165c9
   1400165c5:	xor    eax,eax
   1400165c7:	jmp    0x14001663e
   1400165c9:	mov    edi,0x1
   1400165ce:	mov    ebp,edi
   1400165d0:	cmp    edx,edi
   1400165d2:	jle    0x14001663c
   1400165d4:	lea    r14,[r8+0x8]
   1400165d8:	mov    rdx,QWORD PTR [r14]
   1400165db:	mov    ecx,0xfffd
   1400165e0:	movzx  eax,WORD PTR [rdx]
   1400165e3:	sub    ax,0x2d
   1400165e7:	test   cx,ax
   1400165ea:	jne    0x1400165f3
   1400165ec:	cmp    WORD PTR [rdx+0x2],r15w
   1400165f1:	jne    0x140016600
   1400165f3:	cmp    WORD PTR [rdx],0x40
   1400165f7:	jne    0x140016623
   1400165f9:	cmp    WORD PTR [rdx+0x2],r15w
   1400165fe:	je     0x140016623
   140016600:	cmp    WORD PTR [rdx],0x40
   140016604:	mov    rcx,rbx
   140016607:	jne    0x14001661c
   140016609:	mov    rax,QWORD PTR [rbx]
   14001660c:	call   QWORD PTR [rax+0x40]
   14001660f:	mov    rdx,QWORD PTR [r14]
   140016612:	mov    rcx,rbx
   140016615:	call   0x140016658
   14001661a:	jmp    0x14001662c
   14001661c:	call   0x140016ab0
   140016621:	jmp    0x14001662e
   140016623:	mov    rax,QWORD PTR [rbx]
   140016626:	mov    rcx,rbx
   140016629:	call   QWORD PTR [rax+0x18]
   14001662c:	mov    edi,eax
   14001662e:	test   eax,eax
   140016630:	je     0x1400165c5
   140016632:	inc    ebp
   140016634:	add    r14,0x8
   140016638:	cmp    ebp,esi
   14001663a:	jl     0x1400165d8
   14001663c:	mov    eax,edi
   14001663e:	mov    rbx,QWORD PTR [rsp+0x40]
   140016643:	mov    rbp,QWORD PTR [rsp+0x48]
   140016648:	mov    rsi,QWORD PTR [rsp+0x50]
   14001664d:	add    rsp,0x20
   140016651:	pop    r15
   140016653:	pop    r14
   140016655:	pop    rdi
   140016656:	ret    
   140016657:	int3   
   140016658:	mov    rax,rsp
   14001665b:	push   rbp
   14001665c:	push   rsi
   14001665d:	push   rdi
   14001665e:	push   r12
   140016660:	push   r13
   140016662:	push   r14
   140016664:	push   r15
   140016666:	mov    rbp,rsp
   140016669:	sub    rsp,0x70
   14001666d:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140016675:	mov    QWORD PTR [rax+0x8],rbx
   140016679:	mov    r14,rcx
   14001667c:	xor    esi,esi
   14001667e:	test   rdx,rdx
   140016681:	jne    0x14001668a
   140016683:	xor    eax,eax
   140016685:	jmp    0x140016a96
   14001668a:	or     r13,0xffffffffffffffff
   14001668e:	mov    rax,r13
   140016691:	inc    rax
   140016694:	cmp    WORD PTR [rdx+rax*2],si
   140016698:	jne    0x140016691
   14001669a:	cmp    rax,0x1
   14001669e:	ja     0x1400166c7
   1400166a0:	mov    ecx,0xe1230fae
   1400166a5:	xor    r8d,r8d
   1400166a8:	call   0x1400048b4
   1400166ad:	mov    rbx,rax
   1400166b0:	mov    rax,QWORD PTR [r14]
   1400166b3:	mov    rdx,rbx
   1400166b6:	mov    rcx,r14
   1400166b9:	call   QWORD PTR [rax+0x20]
   1400166bc:	mov    rcx,rbx
   1400166bf:	call   QWORD PTR [rip+0x22ef3]        # 0x1400395b8
   1400166c5:	jmp    0x140016683
   1400166c7:	lea    rbx,[rdx+0x2]
   1400166cb:	mov    rcx,rbx
   1400166ce:	call   QWORD PTR [rip+0x22dac]        # 0x140039480
   1400166d4:	or     r15d,0xffffffff
   1400166d8:	cmp    eax,r15d
   1400166db:	jne    0x1400166e4
   1400166dd:	mov    ecx,0xe1230faf
   1400166e2:	jmp    0x1400166a5
   1400166e4:	mov    QWORD PTR [rbp-0x28],r13
   1400166e8:	mov    QWORD PTR [rsp+0x30],rsi
   1400166ed:	mov    DWORD PTR [rsp+0x28],0x80
   1400166f5:	mov    DWORD PTR [rsp+0x20],0x3
   1400166fd:	xor    r9d,r9d
   140016700:	mov    edx,0x80000000
   140016705:	lea    r8d,[r9+0x1]
   140016709:	mov    rcx,rbx
   14001670c:	call   QWORD PTR [rip+0x22c86]        # 0x140039398
   140016712:	mov    rbx,rax
   140016715:	mov    QWORD PTR [rbp-0x28],rax
   140016719:	cmp    rax,r13
   14001671c:	jne    0x140016725
   14001671e:	mov    ecx,0xe1230fb0
   140016723:	jmp    0x140016747
   140016725:	xor    edx,edx
   140016727:	mov    rcx,rax
   14001672a:	call   QWORD PTR [rip+0x22a10]        # 0x140039140
   140016730:	mov    edi,eax
   140016732:	cmp    eax,r15d
   140016735:	jne    0x14001673e
   140016737:	mov    ecx,0xe1230fb1
   14001673c:	jmp    0x140016747
   14001673e:	test   eax,eax
   140016740:	jne    0x14001676c
   140016742:	mov    ecx,0xe1230fb3
   140016747:	xor    r8d,r8d
   14001674a:	call   0x1400048b4
   14001674f:	mov    rbx,rax
   140016752:	mov    rax,QWORD PTR [r14]
   140016755:	mov    rdx,rbx
   140016758:	mov    rcx,r14
   14001675b:	call   QWORD PTR [rax+0x20]
   14001675e:	mov    rcx,rbx
   140016761:	call   QWORD PTR [rip+0x22e51]        # 0x1400395b8
   140016767:	jmp    0x140016a81
   14001676c:	lea    eax,[rdi+0x2]
   14001676f:	mov    r12d,eax
   140016772:	mov    ecx,eax
   140016774:	call   0x140026354
   140016779:	mov    r15,rax
   14001677c:	mov    QWORD PTR [rbp-0x20],rax
   140016780:	test   rax,rax
   140016783:	jne    0x14001678f
   140016785:	mov    ecx,0xe1230fb2
   14001678a:	jmp    0x140016a56
   14001678f:	mov    r8,r12
   140016792:	xor    edx,edx
   140016794:	mov    rcx,rax
   140016797:	call   0x1400260e0
   14001679c:	mov    QWORD PTR [rsp+0x20],rsi
   1400167a1:	lea    r9,[rbp+0x48]
   1400167a5:	mov    r8d,edi
   1400167a8:	mov    rdx,r15
   1400167ab:	mov    rcx,rbx
   1400167ae:	call   QWORD PTR [rip+0x22d0c]        # 0x1400394c0
   1400167b4:	test   eax,eax
   1400167b6:	je     0x140016a51
   1400167bc:	cmp    edi,DWORD PTR [rbp+0x48]
   1400167bf:	jne    0x140016a51
   1400167c5:	mov    rcx,rbx
   1400167c8:	call   QWORD PTR [rip+0x22df2]        # 0x1400395c0
   1400167ce:	mov    QWORD PTR [rbp-0x28],r13
   1400167d2:	mov    r12,r15
   1400167d5:	mov    rax,rdi
   1400167d8:	shr    rax,1
   1400167db:	lea    rax,[r15+rax*2]
   1400167df:	mov    QWORD PTR [rbp-0x30],rax
   1400167e3:	mov    rbx,r15
   1400167e6:	mov    r13d,0x1
   1400167ec:	mov    DWORD PTR [rbp+0x50],0x1005
   1400167f3:	mov    ecx,0xfeff
   1400167f8:	cmp    WORD PTR [r15],cx
   1400167fc:	jne    0x14001680a
   1400167fe:	lea    r12,[r15+0x2]
   140016802:	mov    rbx,r12
   140016805:	jmp    0x1400168cf
   14001680a:	mov    ecx,0xfffe
   14001680f:	cmp    WORD PTR [r15],cx
   140016813:	jne    0x140016853
   140016815:	lea    r12,[r15+0x2]
   140016819:	mov    rbx,r12
   14001681c:	shr    edi,1
   14001681e:	dec    edi
   140016820:	mov    r9d,edi
   140016823:	mov    r8d,esi
   140016826:	je     0x1400168cf
   14001682c:	mov    rdx,rsi
   14001682f:	movzx  ecx,BYTE PTR [r12+rdx*2+0x1]
   140016835:	movzx  eax,WORD PTR [r12+rdx*2]
   14001683a:	shl    ax,0x8
   14001683e:	or     cx,ax
   140016841:	mov    WORD PTR [r12+rdx*2],cx
   140016846:	inc    r8d
   140016849:	mov    edx,r8d
   14001684c:	cmp    rdx,r9
   14001684f:	jb     0x14001682f
   140016851:	jmp    0x1400168cb
   140016853:	lea    r8,[rbp+0x50]
   140016857:	mov    edx,edi
   140016859:	mov    rcx,r15
   14001685c:	call   QWORD PTR [rip+0x227fe]        # 0x140039060
   140016862:	test   eax,eax
   140016864:	jne    0x1400168cb
   140016866:	mov    DWORD PTR [rsp+0x28],esi
   14001686a:	mov    QWORD PTR [rsp+0x20],rsi
   14001686f:	or     r9d,0xffffffff
   140016873:	mov    r8,r15
   140016876:	xor    edx,edx
   140016878:	xor    ecx,ecx
   14001687a:	call   QWORD PTR [rip+0x22978]        # 0x1400391f8
   140016880:	movsxd rbx,eax
   140016883:	lea    rdi,[rbx+rbx*1]
   140016887:	mov    rcx,rdi
   14001688a:	call   0x140026354
   14001688f:	mov    r12,rax
   140016892:	mov    QWORD PTR [rbp-0x18],rax
   140016896:	mov    DWORD PTR [rsp+0x28],ebx
   14001689a:	mov    QWORD PTR [rsp+0x20],rax
   14001689f:	or     r9d,0xffffffff
   1400168a3:	mov    r8,r15
   1400168a6:	xor    edx,edx
   1400168a8:	xor    ecx,ecx
   1400168aa:	call   QWORD PTR [rip+0x22948]        # 0x1400391f8
   1400168b0:	mov    QWORD PTR [rbp-0x20],r12
   1400168b4:	mov    QWORD PTR [rbp-0x18],r15
   1400168b8:	lea    rax,[rdi+r12*1]
   1400168bc:	mov    QWORD PTR [rbp-0x30],rax
   1400168c0:	mov    rbx,r12
   1400168c3:	mov    rcx,r15
   1400168c6:	call   0x140023328
   1400168cb:	mov    rax,QWORD PTR [rbp-0x30]
   1400168cf:	cmp    WORD PTR [rbx],si
   1400168d2:	je     0x140016a48
   1400168d8:	cmp    rbx,rax
   1400168db:	jae    0x140016a48
   1400168e1:	jmp    0x1400168f2
   1400168e3:	cmp    WORD PTR [rbx],0xd
   1400168e7:	je     0x1400168f8
   1400168e9:	cmp    WORD PTR [rbx],si
   1400168ec:	je     0x1400168f8
   1400168ee:	add    rbx,0x2
   1400168f2:	cmp    WORD PTR [rbx],0xa
   1400168f6:	jne    0x1400168e3
   1400168f8:	mov    WORD PTR [rbx],si
   1400168fb:	add    rbx,0x2
   1400168ff:	mov    rdx,r12
   140016902:	lea    rcx,[rbp+0x58]
   140016906:	call   0x140005714
   14001690b:	nop
   14001690c:	lea    rcx,[rbp+0x58]
   140016910:	call   0x1400171bc
   140016915:	mov    r15,QWORD PTR [rbp+0x58]
   140016919:	mov    rdi,rsi
   14001691c:	cmp    WORD PTR [r15],si
   140016920:	je     0x140016998
   140016922:	movzx  ecx,WORD PTR [r15]
   140016926:	call   0x140028438
   14001692b:	test   eax,eax
   14001692d:	je     0x140016939
   14001692f:	test   rdi,rdi
   140016932:	jne    0x14001693c
   140016934:	mov    rdi,r15
   140016937:	jmp    0x14001693c
   140016939:	mov    rdi,rsi
   14001693c:	add    r15,0x2
   140016940:	cmp    WORD PTR [r15],si
   140016944:	jne    0x140016922
   140016946:	test   rdi,rdi
   140016949:	je     0x140016994
   14001694b:	mov    rax,QWORD PTR [rbp+0x58]
   14001694f:	sub    rdi,rax
   140016952:	sar    rdi,1
   140016955:	test   edi,edi
   140016957:	js     0x140016a17
   14001695d:	mov    edx,0x1
   140016962:	sub    edx,DWORD PTR [rax-0x8]
   140016965:	mov    ecx,DWORD PTR [rax-0xc]
   140016968:	sub    ecx,edi
   14001696a:	or     ecx,edx
   14001696c:	jge    0x14001697d
   14001696e:	mov    edx,edi
   140016970:	lea    rcx,[rbp+0x58]
   140016974:	call   0x140005d68
   140016979:	mov    rax,QWORD PTR [rbp+0x58]
   14001697d:	cmp    edi,DWORD PTR [rax-0xc]
   140016980:	jg     0x140016a0c
   140016986:	mov    DWORD PTR [rax-0x10],edi
   140016989:	movsxd rcx,edi
   14001698c:	mov    rax,QWORD PTR [rbp+0x58]
   140016990:	mov    WORD PTR [rax+rcx*2],si
   140016994:	mov    r15,QWORD PTR [rbp+0x58]
   140016998:	movzx  eax,WORD PTR [r15]
   14001699c:	sub    ax,0x2d
   1400169a0:	mov    ecx,0xfffd
   1400169a5:	test   cx,ax
   1400169a8:	jne    0x1400169be
   1400169aa:	cmp    WORD PTR [r15+0x2],si
   1400169af:	je     0x1400169be
   1400169b1:	mov    rdx,r15
   1400169b4:	mov    rcx,r14
   1400169b7:	call   0x140016ab0
   1400169bc:	jmp    0x1400169ca
   1400169be:	mov    rax,QWORD PTR [r14]
   1400169c1:	mov    rdx,r15
   1400169c4:	mov    rcx,r14
   1400169c7:	call   QWORD PTR [rax+0x18]
   1400169ca:	test   eax,eax
   1400169cc:	mov    r13d,eax
   1400169cf:	je     0x140016a22
   1400169d1:	cmp    WORD PTR [rbx],0xa
   1400169d5:	je     0x1400169dd
   1400169d7:	cmp    WORD PTR [rbx],0xd
   1400169db:	jne    0x1400169e3
   1400169dd:	add    rbx,0x2
   1400169e1:	jmp    0x1400169d1
   1400169e3:	mov    r12,rbx
   1400169e6:	mov    rdx,QWORD PTR [rbp+0x58]
   1400169ea:	add    rdx,0xffffffffffffffe8
   1400169ee:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400169f3:	jg     0x1400169fe
   1400169f5:	mov    rcx,QWORD PTR [rdx]
   1400169f8:	mov    rax,QWORD PTR [rcx]
   1400169fb:	call   QWORD PTR [rax+0x8]
   1400169fe:	cmp    WORD PTR [rbx],si
   140016a01:	je     0x140016a48
   140016a03:	mov    rax,QWORD PTR [rbp-0x30]
   140016a07:	jmp    0x1400168d8
   140016a0c:	mov    ecx,0x80070057
   140016a11:	call   0x140003e64
   140016a16:	int3   
   140016a17:	mov    ecx,0x80070057
   140016a1c:	call   0x140003e64
   140016a21:	nop
   140016a22:	mov    rdx,QWORD PTR [rbp+0x58]
   140016a26:	add    rdx,0xffffffffffffffe8
   140016a2a:	or     r13,0xffffffffffffffff
   140016a2e:	mov    eax,r13d
   140016a31:	lock xadd DWORD PTR [rdx+0x10],eax
   140016a36:	add    eax,r13d
   140016a39:	test   eax,eax
   140016a3b:	jg     0x140016a77
   140016a3d:	mov    rcx,QWORD PTR [rdx]
   140016a40:	mov    rax,QWORD PTR [rcx]
   140016a43:	call   QWORD PTR [rax+0x8]
   140016a46:	jmp    0x140016a77
   140016a48:	mov    esi,r13d
   140016a4b:	or     r13,0xffffffffffffffff
   140016a4f:	jmp    0x140016a77
   140016a51:	mov    ecx,0xe1230fb3
   140016a56:	xor    r8d,r8d
   140016a59:	call   0x1400048b4
   140016a5e:	mov    rbx,rax
   140016a61:	mov    rax,QWORD PTR [r14]
   140016a64:	mov    rdx,rbx
   140016a67:	mov    rcx,r14
   140016a6a:	call   QWORD PTR [rax+0x20]
   140016a6d:	mov    rcx,rbx
   140016a70:	call   QWORD PTR [rip+0x22b42]        # 0x1400395b8
   140016a76:	nop
   140016a77:	mov    rcx,QWORD PTR [rbp-0x20]
   140016a7b:	call   0x140023328
   140016a80:	nop
   140016a81:	mov    rcx,QWORD PTR [rbp-0x28]
   140016a85:	cmp    rcx,r13
   140016a88:	je     0x140016a94
   140016a8a:	call   QWORD PTR [rip+0x22b30]        # 0x1400395c0
   140016a90:	mov    QWORD PTR [rbp-0x28],r13
   140016a94:	mov    eax,esi
   140016a96:	mov    rbx,QWORD PTR [rsp+0xb0]
   140016a9e:	add    rsp,0x70
   140016aa2:	pop    r15
   140016aa4:	pop    r14
   140016aa6:	pop    r13
   140016aa8:	pop    r12
   140016aaa:	pop    rdi
   140016aab:	pop    rsi
   140016aac:	pop    rbp
   140016aad:	ret    
   140016aae:	int3   
   140016aaf:	int3   
   140016ab0:	rex push rbp
   140016ab2:	push   rbx
   140016ab3:	push   rsi
   140016ab4:	push   rdi
   140016ab5:	push   r12
   140016ab7:	push   r14
   140016ab9:	push   r15
   140016abb:	mov    rbp,rsp
   140016abe:	sub    rsp,0x40
   140016ac2:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140016aca:	mov    rdi,rdx
   140016acd:	mov    rsi,rcx
   140016ad0:	xor    r12d,r12d
   140016ad3:	test   rdx,rdx
   140016ad6:	je     0x140016c42
   140016adc:	lea    rcx,[rbp+0x58]
   140016ae0:	call   0x140005714
   140016ae5:	nop
   140016ae6:	mov    rax,QWORD PTR [rbp+0x58]
   140016aea:	mov    r15d,DWORD PTR [rax-0x10]
   140016aee:	mov    r8d,r15d
   140016af1:	lea    rcx,[rbp+0x50]
   140016af5:	call   0x140016fe0
   140016afa:	nop
   140016afb:	mov    r8d,r15d
   140016afe:	lea    rcx,[rbp+0x48]
   140016b02:	call   0x140016fe0
   140016b07:	nop
   140016b08:	mov    r14,QWORD PTR [rbp+0x48]
   140016b0c:	cmp    DWORD PTR [r14-0x8],0x1
   140016b11:	jle    0x140016b24
   140016b13:	mov    edx,DWORD PTR [r14-0x10]
   140016b17:	lea    rcx,[rbp+0x48]
   140016b1b:	call   0x140005dc8
   140016b20:	mov    r14,QWORD PTR [rbp+0x48]
   140016b24:	mov    rbx,QWORD PTR [rbp+0x50]
   140016b28:	cmp    DWORD PTR [rbx-0x8],0x1
   140016b2c:	jle    0x140016b3e
   140016b2e:	mov    edx,DWORD PTR [rbx-0x10]
   140016b31:	lea    rcx,[rbp+0x50]
   140016b35:	call   0x140005dc8
   140016b3a:	mov    rbx,QWORD PTR [rbp+0x50]
   140016b3e:	mov    rdx,QWORD PTR [rbp+0x58]
   140016b42:	cmp    DWORD PTR [rdx-0x8],0x1
   140016b46:	jle    0x140016b58
   140016b48:	mov    edx,DWORD PTR [rdx-0x10]
   140016b4b:	lea    rcx,[rbp+0x58]
   140016b4f:	call   0x140005dc8
   140016b54:	mov    rdx,QWORD PTR [rbp+0x58]
   140016b58:	mov    DWORD PTR [rsp+0x28],r15d
   140016b5d:	mov    QWORD PTR [rsp+0x20],r14
   140016b62:	mov    r9d,r15d
   140016b65:	mov    r8,rbx
   140016b68:	mov    rcx,rsi
   140016b6b:	call   0x140016c54
   140016b70:	test   eax,eax
   140016b72:	je     0x140016be3
   140016b74:	mov    rdx,rdi
   140016b77:	lea    rcx,[rsi+0x8]
   140016b7b:	call   0x14001708c
   140016b80:	lea    rdx,[rip+0x27d29]        # 0x14003e8b0
   140016b87:	lea    rcx,[rsi+0x8]
   140016b8b:	call   0x14001708c
   140016b90:	mov    rbx,QWORD PTR [rbp+0x48]
   140016b94:	cmp    DWORD PTR [rbx-0x8],0x1
   140016b98:	jle    0x140016baa
   140016b9a:	mov    edx,DWORD PTR [rbx-0x10]
   140016b9d:	lea    rcx,[rbp+0x48]
   140016ba1:	call   0x140005dc8
   140016ba6:	mov    rbx,QWORD PTR [rbp+0x48]
   140016baa:	mov    r8,QWORD PTR [rbp+0x50]
   140016bae:	cmp    DWORD PTR [r8-0x8],0x1
   140016bb3:	jle    0x140016bc6
   140016bb5:	mov    edx,DWORD PTR [r8-0x10]
   140016bb9:	lea    rcx,[rbp+0x50]
   140016bbd:	call   0x140005dc8
   140016bc2:	mov    r8,QWORD PTR [rbp+0x50]
   140016bc6:	mov    rax,QWORD PTR [rsi]
   140016bc9:	mov    DWORD PTR [rsp+0x28],r15d
   140016bce:	mov    QWORD PTR [rsp+0x20],rbx
   140016bd3:	mov    r9d,r15d
   140016bd6:	mov    rdx,QWORD PTR [rbp+0x58]
   140016bda:	mov    rcx,rsi
   140016bdd:	call   QWORD PTR [rax+0x10]
   140016be0:	mov    r12d,eax
   140016be3:	mov    rdx,QWORD PTR [rbp+0x48]
   140016be7:	add    rdx,0xffffffffffffffe8
   140016beb:	or     ebx,0xffffffff
   140016bee:	mov    ecx,ebx
   140016bf0:	lock xadd DWORD PTR [rdx+0x10],ecx
   140016bf5:	add    ecx,ebx
   140016bf7:	test   ecx,ecx
   140016bf9:	jg     0x140016c05
   140016bfb:	mov    rcx,QWORD PTR [rdx]
   140016bfe:	mov    rax,QWORD PTR [rcx]
   140016c01:	call   QWORD PTR [rax+0x8]
   140016c04:	nop
   140016c05:	mov    rdx,QWORD PTR [rbp+0x50]
   140016c09:	add    rdx,0xffffffffffffffe8
   140016c0d:	mov    eax,ebx
   140016c0f:	lock xadd DWORD PTR [rdx+0x10],eax
   140016c14:	add    eax,ebx
   140016c16:	test   eax,eax
   140016c18:	jg     0x140016c24
   140016c1a:	mov    rcx,QWORD PTR [rdx]
   140016c1d:	mov    rax,QWORD PTR [rcx]
   140016c20:	call   QWORD PTR [rax+0x8]
   140016c23:	nop
   140016c24:	mov    rdx,QWORD PTR [rbp+0x58]
   140016c28:	add    rdx,0xffffffffffffffe8
   140016c2c:	mov    eax,ebx
   140016c2e:	lock xadd DWORD PTR [rdx+0x10],eax
   140016c33:	add    eax,ebx
   140016c35:	test   eax,eax
   140016c37:	jg     0x140016c42
   140016c39:	mov    rcx,QWORD PTR [rdx]
   140016c3c:	mov    rax,QWORD PTR [rcx]
   140016c3f:	call   QWORD PTR [rax+0x8]
   140016c42:	mov    eax,r12d
   140016c45:	add    rsp,0x40
   140016c49:	pop    r15
   140016c4b:	pop    r14
   140016c4d:	pop    r12
   140016c4f:	pop    rdi
   140016c50:	pop    rsi
   140016c51:	pop    rbx
   140016c52:	pop    rbp
   140016c53:	ret    
   140016c54:	mov    QWORD PTR [rsp+0x8],rbx
   140016c59:	mov    QWORD PTR [rsp+0x18],rbp
   140016c5e:	push   rsi
   140016c5f:	push   rdi
   140016c60:	push   r13
   140016c62:	push   r14
   140016c64:	push   r15
   140016c66:	sub    rsp,0x20
   140016c6a:	xor    r13d,r13d
   140016c6d:	mov    ebp,r9d
   140016c70:	mov    rbx,r8
   140016c73:	mov    rdi,rdx
   140016c76:	mov    rsi,rcx
   140016c79:	test   rdx,rdx
   140016c7c:	je     0x140016d96
   140016c82:	test   rbx,rbx
   140016c85:	je     0x140016d96
   140016c8b:	mov    r15,QWORD PTR [rsp+0x70]
   140016c90:	test   r15,r15
   140016c93:	je     0x140016d96
   140016c99:	test   r9d,r9d
   140016c9c:	je     0x140016d96
   140016ca2:	cmp    DWORD PTR [rsp+0x78],r13d
   140016ca7:	je     0x140016d96
   140016cad:	movzx  eax,WORD PTR [rdx]
   140016cb0:	mov    ecx,0xfffd
   140016cb5:	sub    ax,0x2d
   140016cb9:	test   cx,ax
   140016cbc:	jne    0x140016d96
   140016cc2:	lea    r14,[rdx+0x2]
   140016cc6:	cmp    WORD PTR [r14],r13w
   140016cca:	je     0x140016d96
   140016cd0:	lea    edx,[r13+0x3a]
   140016cd4:	mov    rcx,rdi
   140016cd7:	call   0x140029fec
   140016cdc:	mov    edx,ebp
   140016cde:	mov    r10,rax
   140016ce1:	test   rax,rax
   140016ce4:	je     0x140016dc5
   140016cea:	mov    r8,rax
   140016ced:	lea    rcx,[rbp-0x1]
   140016cf1:	mov    r11d,0x7ffffffe
   140016cf7:	sub    r8,rdi
   140016cfa:	mov    r9d,r13d
   140016cfd:	mov    eax,0x80070057
   140016d02:	sar    r8,1
   140016d05:	dec    r8
   140016d08:	cmp    rcx,r11
   140016d0b:	cmova  r9d,eax
   140016d0f:	test   r9d,r9d
   140016d12:	js     0x140016d5c
   140016d14:	cmp    r8,r11
   140016d17:	jbe    0x140016d1f
   140016d19:	mov    WORD PTR [rbx],r13w
   140016d1d:	jmp    0x140016d69
   140016d1f:	mov    r9d,r13d
   140016d22:	test   ebp,ebp
   140016d24:	je     0x140016d50
   140016d26:	sub    r8,rdx
   140016d29:	sub    r14,rbx
   140016d2c:	lea    rax,[r8+rdx*1]
   140016d30:	test   rax,rax
   140016d33:	je     0x140016d4b
   140016d35:	movzx  eax,WORD PTR [r14+rbx*1]
   140016d3a:	test   ax,ax
   140016d3d:	je     0x140016d4b
   140016d3f:	mov    WORD PTR [rbx],ax
   140016d42:	add    rbx,0x2
   140016d46:	dec    rdx
   140016d49:	jne    0x140016d2c
   140016d4b:	test   rdx,rdx
   140016d4e:	jne    0x140016d60
   140016d50:	sub    rbx,0x2
   140016d54:	mov    r9d,0x8007007a
   140016d5a:	jmp    0x140016d60
   140016d5c:	test   ebp,ebp
   140016d5e:	je     0x140016d64
   140016d60:	mov    WORD PTR [rbx],r13w
   140016d64:	test   r9d,r9d
   140016d67:	jns    0x140016daf
   140016d69:	mov    ecx,0xe1230fba
   140016d6e:	lea    r8,[rsp+0x58]
   140016d73:	mov    QWORD PTR [rsp+0x58],rdi
   140016d78:	call   0x1400048b4
   140016d7d:	mov    r8,QWORD PTR [rsi]
   140016d80:	mov    rcx,rsi
   140016d83:	mov    rdx,rax
   140016d86:	mov    rbx,rax
   140016d89:	call   QWORD PTR [r8+0x20]
   140016d8d:	mov    rcx,rbx
   140016d90:	call   QWORD PTR [rip+0x22822]        # 0x1400395b8
   140016d96:	xor    eax,eax
   140016d98:	mov    rbx,QWORD PTR [rsp+0x50]
   140016d9d:	mov    rbp,QWORD PTR [rsp+0x60]
   140016da2:	add    rsp,0x20
   140016da6:	pop    r15
   140016da8:	pop    r14
   140016daa:	pop    r13
   140016dac:	pop    rdi
   140016dad:	pop    rsi
   140016dae:	ret    
   140016daf:	mov    edx,DWORD PTR [rsp+0x78]
   140016db3:	lea    r8,[r10+0x2]
   140016db7:	mov    rcx,r15
   140016dba:	call   0x140008194
   140016dbf:	test   eax,eax
   140016dc1:	jns    0x140016ddf
   140016dc3:	jmp    0x140016d69
   140016dc5:	mov    r8,r14
   140016dc8:	mov    rcx,rbx
   140016dcb:	call   0x140008194
   140016dd0:	test   eax,eax
   140016dd2:	jns    0x140016ddb
   140016dd4:	mov    ecx,0xe1230fa7
   140016dd9:	jmp    0x140016d6e
   140016ddb:	mov    WORD PTR [r15],r13w
   140016ddf:	mov    eax,0x1
   140016de4:	jmp    0x140016d98
   140016de6:	int3   
   140016de7:	int3   
   140016de8:	mov    rax,rsp
   140016deb:	mov    QWORD PTR [rax+0x8],rbx
   140016def:	mov    QWORD PTR [rax+0x18],rbp
   140016df3:	mov    QWORD PTR [rax+0x20],rsi
   140016df7:	mov    QWORD PTR [rax+0x10],rdx
   140016dfb:	push   rdi
   140016dfc:	sub    rsp,0x30
   140016e00:	xor    ebp,ebp
   140016e02:	mov    rsi,r9
   140016e05:	mov    rbx,r8
   140016e08:	mov    rdi,rcx
   140016e0b:	test   r8,r8
   140016e0e:	je     0x140016e83
   140016e10:	or     rdx,0xffffffffffffffff
   140016e14:	inc    rdx
   140016e17:	cmp    WORD PTR [r8+rdx*2],bp
   140016e1c:	jne    0x140016e14
   140016e1e:	inc    rdx
   140016e21:	mov    rcx,rbx
   140016e24:	call   0x14002fbf4
   140016e29:	movzx  eax,WORD PTR [rbx]
   140016e2c:	cmp    ax,0x30
   140016e30:	jne    0x140016e4f
   140016e32:	cmp    WORD PTR [rbx+0x2],0x58
   140016e37:	jne    0x140016e4f
   140016e39:	cmp    WORD PTR [rbx+0x4],bp
   140016e3d:	je     0x140016e4f
   140016e3f:	mov    r9,rsi
   140016e42:	mov    r8,rbx
   140016e45:	mov    rcx,rdi
   140016e48:	call   0x140016ed0
   140016e4d:	jmp    0x140016eb9
   140016e4f:	test   ax,ax
   140016e52:	je     0x140016e83
   140016e54:	mov    rcx,rbx
   140016e57:	sub    ax,0x30
   140016e5b:	cmp    ax,0x9
   140016e5f:	ja     0x140016e83
   140016e61:	add    rcx,0x2
   140016e65:	movzx  eax,WORD PTR [rcx]
   140016e68:	test   ax,ax
   140016e6b:	jne    0x140016e57
   140016e6d:	xor    r8d,r8d
   140016e70:	xor    edx,edx
   140016e72:	mov    rcx,rbx
   140016e75:	call   0x14002a58c
   140016e7a:	mov    DWORD PTR [rsi],eax
   140016e7c:	mov    eax,0x1
   140016e81:	jmp    0x140016eb9
   140016e83:	lea    rax,[rip+0x273be]        # 0x14003e248
   140016e8a:	lea    r8,[rsp+0x48]
   140016e8f:	mov    ecx,0xe1230fb4
   140016e94:	mov    QWORD PTR [rsp+0x48],rax
   140016e99:	call   0x1400048b4
   140016e9e:	mov    r8,QWORD PTR [rdi]
   140016ea1:	mov    rdx,rax
   140016ea4:	mov    rcx,rdi
   140016ea7:	mov    rbx,rax
   140016eaa:	call   QWORD PTR [r8+0x20]
   140016eae:	mov    rcx,rbx
   140016eb1:	call   QWORD PTR [rip+0x22701]        # 0x1400395b8
   140016eb7:	xor    eax,eax
   140016eb9:	mov    rbx,QWORD PTR [rsp+0x40]
   140016ebe:	mov    rbp,QWORD PTR [rsp+0x50]
   140016ec3:	mov    rsi,QWORD PTR [rsp+0x58]
   140016ec8:	add    rsp,0x30
   140016ecc:	pop    rdi
   140016ecd:	ret    
   140016ece:	int3   
   140016ecf:	int3   
   140016ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140016ed5:	mov    QWORD PTR [rsp+0x18],rsi
   140016eda:	mov    QWORD PTR [rsp+0x10],rdx
   140016edf:	push   rdi
   140016ee0:	push   r14
   140016ee2:	push   r15
   140016ee4:	sub    rsp,0x20
   140016ee8:	xor    ebx,ebx
   140016eea:	mov    r14,r9
   140016eed:	mov    rdi,r8
   140016ef0:	mov    r15,rcx
   140016ef3:	test   r8,r8
   140016ef6:	je     0x140016fc4
   140016efc:	cmp    WORD PTR [r8],bx
   140016f00:	je     0x140016fc4
   140016f06:	or     rdx,0xffffffffffffffff
   140016f0a:	inc    rdx
   140016f0d:	cmp    WORD PTR [r8+rdx*2],bx
   140016f12:	jne    0x140016f0a
   140016f14:	mov    esi,0x1
   140016f19:	mov    rcx,r8
   140016f1c:	add    rdx,rsi
   140016f1f:	call   0x14002fbf4
   140016f24:	cmp    WORD PTR [rdi],0x30
   140016f28:	mov    eax,ebx
   140016f2a:	jne    0x140016f3a
   140016f2c:	cmp    WORD PTR [rdi+0x2],0x58
   140016f31:	jne    0x140016f3a
   140016f33:	cmp    WORD PTR [rdi+0x4],bx
   140016f37:	cmovne eax,esi
   140016f3a:	mov    rdx,rdi
   140016f3d:	test   eax,eax
   140016f3f:	je     0x140016f45
   140016f41:	lea    rdx,[rdi+0x4]
   140016f45:	test   rdx,rdx
   140016f48:	je     0x140016f8c
   140016f4a:	movzx  ecx,WORD PTR [rdx]
   140016f4d:	test   cx,cx
   140016f50:	je     0x140016f8c
   140016f52:	lea    eax,[rcx-0x30]
   140016f55:	cmp    ax,0x9
   140016f59:	jbe    0x140016f65
   140016f5b:	sub    cx,0x41
   140016f5f:	cmp    cx,0x5
   140016f63:	ja     0x140016f8c
   140016f65:	add    rdx,0x2
   140016f69:	movzx  ecx,WORD PTR [rdx]
   140016f6c:	test   cx,cx
   140016f6f:	jne    0x140016f52
   140016f71:	lea    rdx,[rip+0x2793c]        # 0x14003e8b4
   140016f78:	mov    r8,r14
   140016f7b:	mov    rcx,rdi
   140016f7e:	call   0x14002fc48
   140016f83:	cmp    eax,esi
   140016f85:	sete   bl
   140016f88:	mov    eax,ebx
   140016f8a:	jmp    0x140016fcc
   140016f8c:	lea    rax,[rip+0x272b5]        # 0x14003e248
   140016f93:	lea    r8,[rsp+0x48]
   140016f98:	mov    ecx,0xe1230fb5
   140016f9d:	mov    QWORD PTR [rsp+0x48],rax
   140016fa2:	call   0x1400048b4
   140016fa7:	mov    r8,QWORD PTR [r15]
   140016faa:	mov    rdx,rax
   140016fad:	mov    rcx,r15
   140016fb0:	mov    rbx,rax
   140016fb3:	call   QWORD PTR [r8+0x20]
   140016fb7:	mov    rcx,rbx
   140016fba:	call   QWORD PTR [rip+0x225f8]        # 0x1400395b8
   140016fc0:	xor    eax,eax
   140016fc2:	jmp    0x140016fcc
   140016fc4:	mov    DWORD PTR [r9],ebx
   140016fc7:	mov    eax,0x1
   140016fcc:	mov    rbx,QWORD PTR [rsp+0x40]
   140016fd1:	mov    rsi,QWORD PTR [rsp+0x50]
   140016fd6:	add    rsp,0x20
   140016fda:	pop    r15
   140016fdc:	pop    r14
   140016fde:	pop    rdi
   140016fdf:	ret    
   140016fe0:	mov    rax,rsp
   140016fe3:	mov    QWORD PTR [rax+0x8],rcx
   140016fe7:	push   rdi
   140016fe8:	sub    rsp,0x30
   140016fec:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140016ff4:	mov    QWORD PTR [rax+0x10],rbx
   140016ff8:	mov    QWORD PTR [rax+0x18],rbp
   140016ffc:	mov    QWORD PTR [rax+0x20],rsi
   140017000:	movsxd rsi,r8d
   140017003:	mov    rbx,rcx
   140017006:	lea    rcx,[rip+0x37453]        # 0x14004e460
   14001700d:	mov    rax,QWORD PTR [rip+0x3744c]        # 0x14004e460
   140017014:	call   QWORD PTR [rax+0x18]
   140017017:	add    rax,0x18
   14001701b:	mov    QWORD PTR [rbx],rax
   14001701e:	xor    ebp,ebp
   140017020:	test   esi,esi
   140017022:	jle    0x140017074
   140017024:	mov    rax,QWORD PTR [rbx]
   140017027:	lea    ecx,[rbp+0x1]
   14001702a:	sub    ecx,DWORD PTR [rax-0x8]
   14001702d:	mov    eax,DWORD PTR [rax-0xc]
   140017030:	sub    eax,esi
   140017032:	or     eax,ecx
   140017034:	jge    0x140017040
   140017036:	mov    edx,esi
   140017038:	mov    rcx,rbx
   14001703b:	call   0x140005d68
   140017040:	test   esi,esi
   140017042:	jle    0x140017055
   140017044:	mov    eax,0x64
   140017049:	movzx  eax,ax
   14001704c:	mov    rdi,QWORD PTR [rbx]
   14001704f:	mov    rcx,rsi
   140017052:	rep stos WORD PTR es:[rdi],ax
   140017055:	mov    rax,QWORD PTR [rbx]
   140017058:	cmp    esi,DWORD PTR [rax-0xc]
   14001705b:	jg     0x140017069
   14001705d:	mov    DWORD PTR [rax-0x10],esi
   140017060:	mov    rax,QWORD PTR [rbx]
   140017063:	mov    WORD PTR [rax+rsi*2],bp
   140017067:	jmp    0x140017074
   140017069:	mov    ecx,0x80070057
   14001706e:	call   0x140003e64
   140017073:	nop
   140017074:	mov    rax,rbx
   140017077:	mov    rbx,QWORD PTR [rsp+0x48]
   14001707c:	mov    rbp,QWORD PTR [rsp+0x50]
   140017081:	mov    rsi,QWORD PTR [rsp+0x58]
   140017086:	add    rsp,0x30
   14001708a:	pop    rdi
   14001708b:	ret    
   14001708c:	mov    rax,rsp
   14001708f:	mov    QWORD PTR [rax+0x8],rbx
   140017093:	mov    QWORD PTR [rax+0x10],rbp
   140017097:	mov    QWORD PTR [rax+0x18],rsi
   14001709b:	mov    QWORD PTR [rax+0x20],rdi
   14001709f:	push   r12
   1400170a1:	push   r14
   1400170a3:	push   r15
   1400170a5:	sub    rsp,0x20
   1400170a9:	xor    r12d,r12d
   1400170ac:	mov    rbx,rdx
   1400170af:	mov    rdi,rcx
   1400170b2:	test   rdx,rdx
   1400170b5:	jne    0x1400170bc
   1400170b7:	mov    edx,r12d
   1400170ba:	jmp    0x1400170ca
   1400170bc:	or     rdx,0xffffffffffffffff
   1400170c0:	inc    rdx
   1400170c3:	cmp    WORD PTR [rbx+rdx*2],r12w
   1400170c8:	jne    0x1400170c0
   1400170ca:	mov    rax,QWORD PTR [rcx]
   1400170cd:	mov    rbp,rbx
   1400170d0:	mov    r15d,DWORD PTR [rax-0x10]
   1400170d4:	sub    rbp,rax
   1400170d7:	sar    rbp,1
   1400170da:	test   edx,edx
   1400170dc:	js     0x14001718e
   1400170e2:	test   rbx,rbx
   1400170e5:	jne    0x1400170ec
   1400170e7:	mov    r14d,r12d
   1400170ea:	jmp    0x1400170fa
   1400170ec:	movsxd rdx,edx
   1400170ef:	mov    rcx,rbx
   1400170f2:	call   0x140029e88
   1400170f7:	mov    r14,rax
   1400170fa:	mov    ecx,0x7fffffff
   1400170ff:	sub    ecx,r14d
   140017102:	cmp    ecx,r15d
   140017105:	jl     0x140017199
   14001710b:	lea    esi,[r15+r14*1]
   14001710f:	test   esi,esi
   140017111:	js     0x1400171a4
   140017117:	mov    rax,QWORD PTR [rdi]
   14001711a:	mov    ecx,0x1
   14001711f:	sub    ecx,DWORD PTR [rax-0x8]
   140017122:	mov    eax,DWORD PTR [rax-0xc]
   140017125:	sub    eax,esi
   140017127:	or     ecx,eax
   140017129:	jge    0x140017135
   14001712b:	mov    edx,esi
   14001712d:	mov    rcx,rdi
   140017130:	call   0x140005d68
   140017135:	mov    rax,QWORD PTR [rdi]
   140017138:	cmp    rbp,r15
   14001713b:	ja     0x140017141
   14001713d:	lea    rbx,[rax+rbp*2]
   140017141:	movsxd rdx,r14d
   140017144:	lea    rcx,[rax+r15*2]
   140017148:	mov    r8,rbx
   14001714b:	add    rdx,rdx
   14001714e:	mov    r9,rdx
   140017151:	call   0x14002c220
   140017156:	mov    rax,QWORD PTR [rdi]
   140017159:	cmp    esi,DWORD PTR [rax-0xc]
   14001715c:	jg     0x1400171af
   14001715e:	mov    rbx,QWORD PTR [rsp+0x40]
   140017163:	mov    rbp,QWORD PTR [rsp+0x48]
   140017168:	mov    DWORD PTR [rax-0x10],esi
   14001716b:	mov    rax,QWORD PTR [rdi]
   14001716e:	movsxd rcx,esi
   140017171:	mov    rsi,QWORD PTR [rsp+0x50]
   140017176:	mov    WORD PTR [rax+rcx*2],r12w
   14001717b:	mov    rax,rdi
   14001717e:	mov    rdi,QWORD PTR [rsp+0x58]
   140017183:	add    rsp,0x20
   140017187:	pop    r15
   140017189:	pop    r14
   14001718b:	pop    r12
   14001718d:	ret    
   14001718e:	mov    ecx,0x80070057
   140017193:	call   0x140003e64
   140017198:	int3   
   140017199:	mov    ecx,0x80070057
   14001719e:	call   0x140003e64
   1400171a3:	int3   
   1400171a4:	mov    ecx,0x80070057
   1400171a9:	call   0x140003e64
   1400171ae:	int3   
   1400171af:	mov    ecx,0x80070057
   1400171b4:	call   0x140003e64
   1400171b9:	int3   
   1400171ba:	int3   
   1400171bb:	int3   
   1400171bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400171c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400171c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400171cb:	push   rdi
   1400171cc:	sub    rsp,0x20
   1400171d0:	mov    rbx,QWORD PTR [rcx]
   1400171d3:	mov    rdi,rcx
   1400171d6:	movzx  ecx,WORD PTR [rbx]
   1400171d9:	call   0x140028438
   1400171de:	xor    ebp,ebp
   1400171e0:	jmp    0x1400171ee
   1400171e2:	add    rbx,0x2
   1400171e6:	movzx  ecx,WORD PTR [rbx]
   1400171e9:	call   0x140028438
   1400171ee:	test   eax,eax
   1400171f0:	jne    0x1400171e2
   1400171f2:	mov    rax,QWORD PTR [rdi]
   1400171f5:	cmp    rbx,rax
   1400171f8:	je     0x140017281
   1400171fe:	mov    edx,DWORD PTR [rax-0x10]
   140017201:	sub    rbx,rax
   140017204:	sar    rbx,1
   140017207:	test   edx,edx
   140017209:	js     0x140017299
   14001720f:	mov    ecx,0x1
   140017214:	sub    ecx,DWORD PTR [rax-0x8]
   140017217:	mov    eax,DWORD PTR [rax-0xc]
   14001721a:	sub    eax,edx
   14001721c:	or     ecx,eax
   14001721e:	jge    0x140017228
   140017220:	mov    rcx,rdi
   140017223:	call   0x140005d68
   140017228:	mov    rcx,QWORD PTR [rdi]
   14001722b:	mov    edx,DWORD PTR [rcx-0x10]
   14001722e:	mov    esi,edx
   140017230:	sub    esi,ebx
   140017232:	lea    eax,[rsi+0x1]
   140017235:	movsxd r9,eax
   140017238:	movsxd rax,ebx
   14001723b:	lea    r8,[rcx+rax*2]
   14001723f:	lea    eax,[rdx+0x1]
   140017242:	add    r9,r9
   140017245:	movsxd rdx,eax
   140017248:	add    rdx,rdx
   14001724b:	call   0x14002bfb0
   140017250:	test   eax,eax
   140017252:	je     0x140017268
   140017254:	cmp    eax,0xc
   140017257:	je     0x1400172ba
   140017259:	cmp    eax,0x16
   14001725c:	je     0x1400172af
   14001725e:	cmp    eax,0x22
   140017261:	je     0x1400172af
   140017263:	cmp    eax,0x50
   140017266:	jne    0x1400172a4
   140017268:	test   esi,esi
   14001726a:	js     0x1400172c5
   14001726c:	mov    rax,QWORD PTR [rdi]
   14001726f:	cmp    esi,DWORD PTR [rax-0xc]
   140017272:	jg     0x1400172c5
   140017274:	mov    DWORD PTR [rax-0x10],esi
   140017277:	mov    rax,QWORD PTR [rdi]
   14001727a:	movsxd rcx,esi
   14001727d:	mov    WORD PTR [rax+rcx*2],bp
   140017281:	mov    rbx,QWORD PTR [rsp+0x30]
   140017286:	mov    rbp,QWORD PTR [rsp+0x38]
   14001728b:	mov    rsi,QWORD PTR [rsp+0x40]
   140017290:	mov    rax,rdi
   140017293:	add    rsp,0x20
   140017297:	pop    rdi
   140017298:	ret    
   140017299:	mov    ecx,0x80070057
   14001729e:	call   0x140003e64
   1400172a3:	int3   
   1400172a4:	mov    ecx,0x80004005
   1400172a9:	call   0x140003e64
   1400172ae:	int3   
   1400172af:	mov    ecx,0x80070057
   1400172b4:	call   0x140003e64
   1400172b9:	int3   
   1400172ba:	mov    ecx,0x8007000e
   1400172bf:	call   0x140003e64
   1400172c4:	int3   
   1400172c5:	mov    ecx,0x80070057
   1400172ca:	call   0x140003e64
   1400172cf:	int3   
   1400172d0:	mov    rcx,QWORD PTR [rcx]
   1400172d3:	jmp    0x140023328
   1400172d8:	rex push rbx
   1400172da:	sub    rsp,0x20
   1400172de:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400172e2:	mov    rbx,rcx
   1400172e5:	je     0x1400172f4
   1400172e7:	mov    rcx,QWORD PTR [rcx]
   1400172ea:	call   QWORD PTR [rip+0x222d0]        # 0x1400395c0
   1400172f0:	or     QWORD PTR [rbx],0xffffffffffffffff
   1400172f4:	add    rsp,0x20
   1400172f8:	pop    rbx
   1400172f9:	ret    
   1400172fa:	int3   
   1400172fb:	int3   
   1400172fc:	mov    QWORD PTR [rsp+0x18],rbx
   140017301:	mov    QWORD PTR [rsp+0x20],rbp
   140017306:	push   rsi
   140017307:	push   rdi
   140017308:	push   r14
   14001730a:	sub    rsp,0x2d0
   140017311:	mov    rax,QWORD PTR [rip+0x36130]        # 0x14004d448
   140017318:	xor    rax,rsp
   14001731b:	mov    QWORD PTR [rsp+0x2c0],rax
   140017323:	xor    ebx,ebx
   140017325:	mov    r14,rdx
   140017328:	mov    rsi,rcx
   14001732b:	lea    rdx,[rip+0x26c16]        # 0x14003df48
   140017332:	lea    r8d,[rbx+0x3]
   140017336:	xor    ecx,ecx
   140017338:	mov    edi,ebx
   14001733a:	call   QWORD PTR [rip+0x21d60]        # 0x1400390a0
   140017340:	mov    rbp,rax
   140017343:	test   rax,rax
   140017346:	je     0x140017401
   14001734c:	lea    rdx,[rsp+0x70]
   140017351:	mov    rcx,r14
   140017354:	call   QWORD PTR [rip+0x21dee]        # 0x140039148
   14001735a:	cmp    rax,0xffffffffffffffff
   14001735e:	je     0x1400173e4
   140017364:	mov    rcx,rax
   140017367:	call   QWORD PTR [rip+0x220bb]        # 0x140039428
   14001736d:	lea    r8,[rsi+0x58]
   140017371:	cmp    QWORD PTR [r8+0x18],0x8
   140017376:	jb     0x14001737b
   140017378:	mov    r8,QWORD PTR [r8]
   14001737b:	lea    rdx,[rsi+0x38]
   14001737f:	cmp    QWORD PTR [rdx+0x18],0x8
   140017384:	jb     0x140017389
   140017386:	mov    rdx,QWORD PTR [rdx]
   140017389:	mov    QWORD PTR [rsp+0x60],rbx
   14001738e:	mov    QWORD PTR [rsp+0x58],rbx
   140017393:	mov    QWORD PTR [rsp+0x50],rbx
   140017398:	mov    QWORD PTR [rsp+0x48],rbx
   14001739d:	mov    QWORD PTR [rsp+0x40],rbx
   1400173a2:	mov    QWORD PTR [rsp+0x38],r14
   1400173a7:	mov    DWORD PTR [rsp+0x30],ebx
   1400173ab:	mov    r9d,0xe0000000
   1400173b1:	mov    rcx,rbp
   1400173b4:	mov    DWORD PTR [rsp+0x28],0x3
   1400173bc:	mov    DWORD PTR [rsp+0x20],0x1
   1400173c4:	call   QWORD PTR [rip+0x21d06]        # 0x1400390d0
   1400173ca:	test   rax,rax
   1400173cd:	jne    0x1400173d9
   1400173cf:	call   QWORD PTR [rip+0x2220b]        # 0x1400395e0
   1400173d5:	mov    edi,eax
   1400173d7:	jmp    0x1400173e9
   1400173d9:	mov    rcx,rax
   1400173dc:	call   QWORD PTR [rip+0x21ce6]        # 0x1400390c8
   1400173e2:	jmp    0x1400173e9
   1400173e4:	mov    edi,0x2
   1400173e9:	mov    rcx,rbp
   1400173ec:	call   QWORD PTR [rip+0x21cd6]        # 0x1400390c8
   1400173f2:	mov    ecx,edi
   1400173f4:	call   QWORD PTR [rip+0x21dce]        # 0x1400391c8
   1400173fa:	test   edi,edi
   1400173fc:	sete   bl
   1400173ff:	mov    eax,ebx
   140017401:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140017409:	xor    rcx,rsp
   14001740c:	call   0x140020e50
   140017411:	lea    r11,[rsp+0x2d0]
   140017419:	mov    rbx,QWORD PTR [r11+0x30]
   14001741d:	mov    rbp,QWORD PTR [r11+0x38]
   140017421:	mov    rsp,r11
   140017424:	pop    r14
   140017426:	pop    rdi
   140017427:	pop    rsi
   140017428:	ret    
   140017429:	int3   
   14001742a:	int3   
   14001742b:	int3   
   14001742c:	mov    QWORD PTR [rsp+0x10],rbx
   140017431:	mov    QWORD PTR [rsp+0x18],rbp
   140017436:	mov    QWORD PTR [rsp+0x20],rsi
   14001743b:	push   rdi
   14001743c:	sub    rsp,0x50
   140017440:	mov    rax,QWORD PTR [rip+0x36001]        # 0x14004d448
   140017447:	xor    rax,rsp
   14001744a:	mov    QWORD PTR [rsp+0x40],rax
   14001744f:	xor    ebx,ebx
   140017451:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140017455:	mov    rdi,rcx
   140017458:	mov    esi,ebx
   14001745a:	je     0x140017469
   14001745c:	mov    rcx,QWORD PTR [rcx]
   14001745f:	call   QWORD PTR [rip+0x2215b]        # 0x1400395c0
   140017465:	or     QWORD PTR [rdi],0xffffffffffffffff
   140017469:	lea    rdx,[rip+0x26ad8]        # 0x14003df48
   140017470:	mov    r8d,0x3
   140017476:	xor    ecx,ecx
   140017478:	call   QWORD PTR [rip+0x21c22]        # 0x1400390a0
   14001747e:	mov    rbp,rax
   140017481:	test   rax,rax
   140017484:	je     0x140017510
   14001748a:	lea    rdx,[rdi+0x38]
   14001748e:	cmp    QWORD PTR [rdx+0x18],0x8
   140017493:	jb     0x140017498
   140017495:	mov    rdx,QWORD PTR [rdx]
   140017498:	mov    r8d,0x20010084
   14001749e:	mov    rcx,rax
   1400174a1:	call   QWORD PTR [rip+0x21c11]        # 0x1400390b8
   1400174a7:	mov    rdi,rax
   1400174aa:	test   rax,rax
   1400174ad:	je     0x1400174f7
   1400174af:	lea    rdx,[rsp+0x20]
   1400174b4:	mov    rcx,rax
   1400174b7:	call   QWORD PTR [rip+0x21beb]        # 0x1400390a8
   1400174bd:	test   eax,eax
   1400174bf:	je     0x1400174e4
   1400174c1:	mov    eax,DWORD PTR [rsp+0x24]
   1400174c5:	dec    eax
   1400174c7:	test   eax,0xfffffffd
   1400174cc:	je     0x1400174d5
   1400174ce:	mov    ebx,0x420
   1400174d3:	jmp    0x1400174ec
   1400174d5:	mov    rcx,rdi
   1400174d8:	call   QWORD PTR [rip+0x21be2]        # 0x1400390c0
   1400174de:	mov    esi,eax
   1400174e0:	test   eax,eax
   1400174e2:	jne    0x1400174ec
   1400174e4:	call   QWORD PTR [rip+0x220f6]        # 0x1400395e0
   1400174ea:	mov    ebx,eax
   1400174ec:	mov    rcx,rdi
   1400174ef:	call   QWORD PTR [rip+0x21bd3]        # 0x1400390c8
   1400174f5:	jmp    0x1400174ff
   1400174f7:	call   QWORD PTR [rip+0x220e3]        # 0x1400395e0
   1400174fd:	mov    ebx,eax
   1400174ff:	mov    rcx,rbp
   140017502:	call   QWORD PTR [rip+0x21bc0]        # 0x1400390c8
   140017508:	mov    ecx,ebx
   14001750a:	call   QWORD PTR [rip+0x21cb8]        # 0x1400391c8
   140017510:	mov    eax,esi
   140017512:	mov    rcx,QWORD PTR [rsp+0x40]
   140017517:	xor    rcx,rsp
   14001751a:	call   0x140020e50
   14001751f:	mov    rbx,QWORD PTR [rsp+0x68]
   140017524:	mov    rbp,QWORD PTR [rsp+0x70]
   140017529:	mov    rsi,QWORD PTR [rsp+0x78]
   14001752e:	add    rsp,0x50
   140017532:	pop    rdi
   140017533:	ret    
   140017534:	mov    QWORD PTR [rsp+0x10],rbx
   140017539:	mov    QWORD PTR [rsp+0x18],rbp
   14001753e:	mov    QWORD PTR [rsp+0x20],rsi
   140017543:	push   rdi
   140017544:	sub    rsp,0x50
   140017548:	mov    rax,QWORD PTR [rip+0x35ef9]        # 0x14004d448
   14001754f:	xor    rax,rsp
   140017552:	mov    QWORD PTR [rsp+0x40],rax
   140017557:	xor    ebx,ebx
   140017559:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001755d:	mov    rdi,rcx
   140017560:	mov    esi,ebx
   140017562:	je     0x140017571
   140017564:	mov    rcx,QWORD PTR [rcx]
   140017567:	call   QWORD PTR [rip+0x22053]        # 0x1400395c0
   14001756d:	or     QWORD PTR [rdi],0xffffffffffffffff
   140017571:	lea    rdx,[rip+0x269d0]        # 0x14003df48
   140017578:	mov    r8d,0x1
   14001757e:	xor    ecx,ecx
   140017580:	call   QWORD PTR [rip+0x21b1a]        # 0x1400390a0
   140017586:	mov    rbp,rax
   140017589:	test   rax,rax
   14001758c:	je     0x1400175f8
   14001758e:	lea    rdx,[rdi+0x38]
   140017592:	cmp    QWORD PTR [rdx+0x18],0x8
   140017597:	jb     0x14001759c
   140017599:	mov    rdx,QWORD PTR [rdx]
   14001759c:	mov    r8d,0x200000a4
   1400175a2:	mov    rcx,rax
   1400175a5:	call   QWORD PTR [rip+0x21b0d]        # 0x1400390b8
   1400175ab:	mov    rdi,rax
   1400175ae:	test   rax,rax
   1400175b1:	je     0x1400175df
   1400175b3:	lea    r8,[rsp+0x20]
   1400175b8:	mov    edx,0x1
   1400175bd:	mov    rcx,rax
   1400175c0:	call   QWORD PTR [rip+0x21ad2]        # 0x140039098
   1400175c6:	mov    esi,eax
   1400175c8:	test   eax,eax
   1400175ca:	jne    0x1400175d4
   1400175cc:	call   QWORD PTR [rip+0x2200e]        # 0x1400395e0
   1400175d2:	mov    ebx,eax
   1400175d4:	mov    rcx,rdi
   1400175d7:	call   QWORD PTR [rip+0x21aeb]        # 0x1400390c8
   1400175dd:	jmp    0x1400175e7
   1400175df:	call   QWORD PTR [rip+0x21ffb]        # 0x1400395e0
   1400175e5:	mov    ebx,eax
   1400175e7:	mov    rcx,rbp
   1400175ea:	call   QWORD PTR [rip+0x21ad8]        # 0x1400390c8
   1400175f0:	mov    ecx,ebx
   1400175f2:	call   QWORD PTR [rip+0x21bd0]        # 0x1400391c8
   1400175f8:	mov    eax,esi
   1400175fa:	mov    rcx,QWORD PTR [rsp+0x40]
   1400175ff:	xor    rcx,rsp
   140017602:	call   0x140020e50
   140017607:	mov    rbx,QWORD PTR [rsp+0x68]
   14001760c:	mov    rbp,QWORD PTR [rsp+0x70]
   140017611:	mov    rsi,QWORD PTR [rsp+0x78]
   140017616:	add    rsp,0x50
   14001761a:	pop    rdi
   14001761b:	ret    
   14001761c:	mov    r11,rsp
   14001761f:	push   rbx
   140017620:	sub    rsp,0x60
   140017624:	mov    rax,QWORD PTR [rsp+0xa0]
   14001762c:	mov    rcx,QWORD PTR [rcx]
   14001762f:	lea    r10,[r11+0x8]
   140017633:	test   rax,rax
   140017636:	cmovne r10,rax
   14001763a:	and    QWORD PTR [r11-0x28],0x0
   14001763f:	and    QWORD PTR [r11-0x20],0x0
   140017644:	and    DWORD PTR [rsp+0x50],0x0
   140017649:	and    DWORD PTR [rsp+0x54],0x0
   14001764e:	and    QWORD PTR [r11-0x10],0x0
   140017653:	lea    rax,[r11-0x28]
   140017657:	mov    QWORD PTR [r11-0x30],rax
   14001765b:	mov    eax,DWORD PTR [rsp+0x98]
   140017662:	mov    QWORD PTR [r11-0x38],r10
   140017666:	mov    DWORD PTR [rsp+0x28],eax
   14001766a:	mov    rax,QWORD PTR [rsp+0x90]
   140017672:	mov    QWORD PTR [r11-0x48],rax
   140017676:	call   QWORD PTR [rip+0x21adc]        # 0x140039158
   14001767c:	mov    ebx,eax
   14001767e:	test   eax,eax
   140017680:	jne    0x140017693
   140017682:	call   QWORD PTR [rip+0x21f58]        # 0x1400395e0
   140017688:	cmp    eax,0x3e5
   14001768d:	jne    0x140017693
   14001768f:	xor    eax,eax
   140017691:	jmp    0x140017695
   140017693:	mov    eax,ebx
   140017695:	add    rsp,0x60
   140017699:	pop    rbx
   14001769a:	ret    
   14001769b:	int3   
   14001769c:	mov    QWORD PTR [rsp+0x8],rcx
   1400176a1:	push   rdi
   1400176a2:	sub    rsp,0x30
   1400176a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400176af:	mov    QWORD PTR [rsp+0x48],rbx
   1400176b4:	mov    rbx,rcx
   1400176b7:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400176bb:	je     0x1400176ca
   1400176bd:	mov    rcx,QWORD PTR [rcx]
   1400176c0:	call   QWORD PTR [rip+0x21efa]        # 0x1400395c0
   1400176c6:	or     QWORD PTR [rbx],0xffffffffffffffff
   1400176ca:	lea    rcx,[rbx+0x10]
   1400176ce:	call   QWORD PTR [rip+0x21b5c]        # 0x140039230
   1400176d4:	nop
   1400176d5:	cmp    QWORD PTR [rbx+0x70],0x8
   1400176da:	jb     0x1400176e5
   1400176dc:	mov    rcx,QWORD PTR [rbx+0x58]
   1400176e0:	call   0x140020e30
   1400176e5:	mov    QWORD PTR [rbx+0x70],0x7
   1400176ed:	xor    edi,edi
   1400176ef:	mov    QWORD PTR [rbx+0x68],rdi
   1400176f3:	mov    WORD PTR [rbx+0x58],di
   1400176f7:	cmp    QWORD PTR [rbx+0x50],0x8
   1400176fc:	jb     0x140017707
   1400176fe:	mov    rcx,QWORD PTR [rbx+0x38]
   140017702:	call   0x140020e30
   140017707:	mov    QWORD PTR [rbx+0x50],0x7
   14001770f:	mov    QWORD PTR [rbx+0x48],rdi
   140017713:	mov    WORD PTR [rbx+0x38],di
   140017717:	mov    rbx,QWORD PTR [rsp+0x48]
   14001771c:	add    rsp,0x30
   140017720:	pop    rdi
   140017721:	ret    
   140017722:	int3   
   140017723:	int3   
   140017724:	mov    QWORD PTR [rsp+0x8],rcx
   140017729:	push   rdi
   14001772a:	sub    rsp,0x30
   14001772e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017737:	mov    QWORD PTR [rsp+0x48],rbx
   14001773c:	mov    edi,edx
   14001773e:	mov    rbx,rcx
   140017741:	lea    rax,[rip+0x27190]        # 0x14003e8d8
   140017748:	mov    QWORD PTR [rcx],rax
   14001774b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001774f:	cmp    rcx,0xffffffffffffffff
   140017753:	je     0x14001775c
   140017755:	call   QWORD PTR [rip+0x218c5]        # 0x140039020
   14001775b:	nop
   14001775c:	lea    rax,[rip+0x26385]        # 0x14003dae8
   140017763:	mov    QWORD PTR [rbx],rax
   140017766:	test   dil,0x1
   14001776a:	je     0x140017774
   14001776c:	mov    rcx,rbx
   14001776f:	call   0x140020e30
   140017774:	mov    rax,rbx
   140017777:	mov    rbx,QWORD PTR [rsp+0x48]
   14001777c:	add    rsp,0x30
   140017780:	pop    rdi
   140017781:	ret    
   140017782:	int3   
   140017783:	int3   
   140017784:	mov    QWORD PTR [rsp+0x8],rbx
   140017789:	mov    QWORD PTR [rsp+0x10],rbp
   14001778e:	mov    QWORD PTR [rsp+0x18],rsi
   140017793:	push   rdi
   140017794:	sub    rsp,0x50
   140017798:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   14001779d:	mov    rsi,r9
   1400177a0:	mov    ebp,r8d
   1400177a3:	mov    edi,edx
   1400177a5:	mov    rbx,rcx
   1400177a8:	jne    0x1400177bd
   1400177aa:	lea    rdx,[rip+0x2710f]        # 0x14003e8c0
   1400177b1:	xor    ecx,ecx
   1400177b3:	call   QWORD PTR [rip+0x2185f]        # 0x140039018
   1400177b9:	mov    QWORD PTR [rbx+0x8],rax
   1400177bd:	mov    eax,edi
   1400177bf:	xor    ecx,ecx
   1400177c1:	shr    eax,0x1e
   1400177c4:	test   eax,eax
   1400177c6:	je     0x1400177e5
   1400177c8:	dec    eax
   1400177ca:	je     0x1400177de
   1400177cc:	dec    eax
   1400177ce:	je     0x1400177d7
   1400177d0:	dec    eax
   1400177d2:	lea    eax,[rcx+0x1]
   1400177d5:	jmp    0x1400177e8
   1400177d7:	mov    eax,0x2
   1400177dc:	jmp    0x1400177e8
   1400177de:	mov    eax,0x4
   1400177e3:	jmp    0x1400177e8
   1400177e5:	movzx  eax,cx
   1400177e8:	mov    QWORD PTR [rsp+0x40],rcx
   1400177ed:	mov    QWORD PTR [rsp+0x38],rsi
   1400177f2:	mov    DWORD PTR [rsp+0x30],ecx
   1400177f6:	mov    WORD PTR [rsp+0x28],bp
   1400177fb:	mov    QWORD PTR [rsp+0x20],rcx
   140017800:	mov    rcx,QWORD PTR [rbx+0x8]
   140017804:	xor    r8d,r8d
   140017807:	mov    r9d,edi
   14001780a:	movzx  edx,ax
   14001780d:	call   QWORD PTR [rip+0x2181d]        # 0x140039030
   140017813:	mov    rbx,QWORD PTR [rsp+0x60]
   140017818:	mov    rbp,QWORD PTR [rsp+0x68]
   14001781d:	mov    rsi,QWORD PTR [rsp+0x70]
   140017822:	add    rsp,0x50
   140017826:	pop    rdi
   140017827:	ret    
   140017828:	mov    QWORD PTR [rsp+0x8],rbx
   14001782d:	mov    QWORD PTR [rsp+0x10],rbp
   140017832:	mov    QWORD PTR [rsp+0x18],rsi
   140017837:	push   rdi
   140017838:	sub    rsp,0x50
   14001783c:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   140017841:	mov    rsi,r9
   140017844:	mov    ebp,r8d
   140017847:	mov    edi,edx
   140017849:	mov    rbx,rcx
   14001784c:	jne    0x140017861
   14001784e:	lea    rdx,[rip+0x2706b]        # 0x14003e8c0
   140017855:	xor    ecx,ecx
   140017857:	call   QWORD PTR [rip+0x217bb]        # 0x140039018
   14001785d:	mov    QWORD PTR [rbx+0x8],rax
   140017861:	mov    eax,edi
   140017863:	xor    ecx,ecx
   140017865:	shr    eax,0x1e
   140017868:	test   eax,eax
   14001786a:	je     0x140017889
   14001786c:	dec    eax
   14001786e:	je     0x140017882
   140017870:	dec    eax
   140017872:	je     0x14001787b
   140017874:	dec    eax
   140017876:	lea    eax,[rcx+0x1]
   140017879:	jmp    0x14001788c
   14001787b:	mov    eax,0x2
   140017880:	jmp    0x14001788c
   140017882:	mov    eax,0x4
   140017887:	jmp    0x14001788c
   140017889:	movzx  eax,cx
   14001788c:	mov    QWORD PTR [rsp+0x40],rcx
   140017891:	mov    QWORD PTR [rsp+0x38],rsi
   140017896:	mov    DWORD PTR [rsp+0x30],ecx
   14001789a:	mov    WORD PTR [rsp+0x28],bp
   14001789f:	mov    QWORD PTR [rsp+0x20],rcx
   1400178a4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400178a8:	xor    r8d,r8d
   1400178ab:	mov    r9d,edi
   1400178ae:	movzx  edx,ax
   1400178b1:	call   QWORD PTR [rip+0x21771]        # 0x140039028
   1400178b7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400178bc:	mov    rbp,QWORD PTR [rsp+0x68]
   1400178c1:	mov    rsi,QWORD PTR [rsp+0x70]
   1400178c6:	add    rsp,0x50
   1400178ca:	pop    rdi
   1400178cb:	ret    
   1400178cc:	rex push rbx
   1400178ce:	sub    rsp,0x20
   1400178d2:	mov    rbx,rcx
   1400178d5:	mov    ecx,0x1000
   1400178da:	mov    eax,DWORD PTR [rbx+0x8]
   1400178dd:	test   eax,eax
   1400178df:	je     0x1400178e9
   1400178e1:	pause  
   1400178e3:	dec    ecx
   1400178e5:	test   ecx,ecx
   1400178e7:	jg     0x1400178da
   1400178e9:	test   ecx,ecx
   1400178eb:	jne    0x140017936
   1400178ed:	lock inc DWORD PTR [rbx+0x10]
   1400178f1:	jne    0x14001790a
   1400178f3:	xor    r9d,r9d
   1400178f6:	xor    r8d,r8d
   1400178f9:	xor    edx,edx
   1400178fb:	xor    ecx,ecx
   1400178fd:	call   QWORD PTR [rip+0x21c1d]        # 0x140039520
   140017903:	mov    QWORD PTR [rbx],rax
   140017906:	jmp    0x140017912
   140017908:	pause  
   14001790a:	mov    rax,QWORD PTR [rbx]
   14001790d:	test   rax,rax
   140017910:	je     0x140017908
   140017912:	lock inc DWORD PTR [rbx+0xc]
   140017916:	mov    eax,0x1
   14001791b:	xchg   DWORD PTR [rbx+0x8],eax
   14001791e:	test   eax,eax
   140017920:	je     0x140017944
   140017922:	mov    rcx,QWORD PTR [rbx]
   140017925:	or     edx,0xffffffff
   140017928:	call   QWORD PTR [rip+0x21b6a]        # 0x140039498
   14001792e:	lock dec DWORD PTR [rbx+0xc]
   140017932:	test   eax,eax
   140017934:	jne    0x14001794e
   140017936:	mov    eax,0x1
   14001793b:	xchg   DWORD PTR [rbx+0x8],eax
   14001793e:	test   eax,eax
   140017940:	je     0x140017948
   140017942:	jmp    0x1400178d5
   140017944:	lock dec DWORD PTR [rbx+0xc]
   140017948:	add    rsp,0x20
   14001794c:	pop    rbx
   14001794d:	ret    
   14001794e:	and    DWORD PTR [rsp+0x38],0x0
   140017953:	mov    DWORD PTR [rsp+0x3c],0xe1232723
   14001795b:	mov    rax,QWORD PTR [rsp+0x38]
   140017960:	lea    rdx,[rip+0x33151]        # 0x14004aab8
   140017967:	lea    rcx,[rsp+0x38]
   14001796c:	mov    QWORD PTR [rsp+0x38],rax
   140017971:	call   0x1400265e8
   140017976:	int3   
   140017977:	int3   
   140017978:	mov    QWORD PTR [rsp+0x8],rbx
   14001797d:	push   rdi
   14001797e:	sub    rsp,0x20
   140017982:	mov    ebx,edx
   140017984:	mov    rdi,rcx
   140017987:	call   0x1400179a8
   14001798c:	test   bl,0x1
   14001798f:	je     0x140017999
   140017991:	mov    rcx,rdi
   140017994:	call   0x140020e30
   140017999:	mov    rax,rdi
   14001799c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400179a1:	add    rsp,0x20
   1400179a5:	pop    rdi
   1400179a6:	ret    
   1400179a7:	int3   
   1400179a8:	mov    QWORD PTR [rsp+0x8],rcx
   1400179ad:	push   rbx
   1400179ae:	sub    rsp,0x30
   1400179b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400179bb:	mov    rbx,rcx
   1400179be:	lea    rax,[rip+0x26f43]        # 0x14003e908
   1400179c5:	mov    QWORD PTR [rcx],rax
   1400179c8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400179cc:	call   QWORD PTR [rip+0x21bee]        # 0x1400395c0
   1400179d2:	and    QWORD PTR [rbx+0x8],0x0
   1400179d7:	lea    rax,[rip+0x26052]        # 0x14003da30
   1400179de:	mov    QWORD PTR [rbx],rax
   1400179e1:	add    rsp,0x30
   1400179e5:	pop    rbx
   1400179e6:	ret    
   1400179e7:	int3   
   1400179e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400179ed:	push   rdi
   1400179ee:	sub    rsp,0x20
   1400179f2:	mov    rdi,rcx
   1400179f5:	call   QWORD PTR [rip+0x21be5]        # 0x1400395e0
   1400179fb:	xor    ebx,ebx
   1400179fd:	cmp    eax,0xb7
   140017a02:	jne    0x140017a1d
   140017a04:	mov    rcx,QWORD PTR [rdi+0x8]
   140017a08:	call   QWORD PTR [rip+0x21bb2]        # 0x1400395c0
   140017a0e:	mov    ecx,0xb7
   140017a13:	mov    QWORD PTR [rdi+0x8],rbx
   140017a17:	call   QWORD PTR [rip+0x217ab]        # 0x1400391c8
   140017a1d:	cmp    QWORD PTR [rdi+0x8],rbx
   140017a21:	setne  bl
   140017a24:	mov    eax,ebx
   140017a26:	mov    rbx,QWORD PTR [rsp+0x30]
   140017a2b:	add    rsp,0x20
   140017a2f:	pop    rdi
   140017a30:	ret    
   140017a31:	int3   
   140017a32:	int3   
   140017a33:	int3   
   140017a34:	mov    rax,rsp
   140017a37:	push   rbp
   140017a38:	push   rdi
   140017a39:	push   r14
   140017a3b:	lea    rbp,[rax-0x28]
   140017a3f:	sub    rsp,0x110
   140017a46:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140017a4f:	mov    QWORD PTR [rax+0x18],rbx
   140017a53:	mov    QWORD PTR [rax+0x20],rsi
   140017a57:	mov    rax,QWORD PTR [rip+0x359ea]        # 0x14004d448
   140017a5e:	xor    rax,rsp
   140017a61:	mov    QWORD PTR [rbp+0x8],rax
   140017a65:	mov    rbx,rdx
   140017a68:	mov    rdi,rcx
   140017a6b:	mov    r8d,0x2
   140017a71:	lea    rdx,[rsp+0x38]
   140017a76:	call   0x140005894
   140017a7b:	nop
   140017a7c:	lea    rdx,[rip+0x26e9d]        # 0x14003e920
   140017a83:	mov    rcx,QWORD PTR [rsp+0x38]
   140017a88:	call   0x14002a078
   140017a8d:	xor    r14d,r14d
   140017a90:	mov    esi,r14d
   140017a93:	test   eax,eax
   140017a95:	sete   sil
   140017a99:	lea    rdx,[rsp+0x30]
   140017a9e:	mov    rcx,QWORD PTR [rdi]
   140017aa1:	test   esi,esi
   140017aa3:	lea    r8d,[r14+0x10]
   140017aa7:	jne    0x140017aad
   140017aa9:	lea    r8d,[r14+0xa]
   140017aad:	call   0x14002a58c
   140017ab2:	mov    DWORD PTR [rbx],eax
   140017ab4:	mov    rax,QWORD PTR [rsp+0x30]
   140017ab9:	cmp    WORD PTR [rax],r14w
   140017abd:	je     0x140017ae7
   140017abf:	mov    r9,QWORD PTR [rdi]
   140017ac2:	mov    edx,0xe1230551
   140017ac7:	mov    r8d,0x1
   140017acd:	lea    rcx,[rbp-0x80]
   140017ad1:	call   0x140002f94
   140017ad6:	lea    rdx,[rip+0x32e3b]        # 0x14004a918
   140017add:	lea    rcx,[rbp-0x80]
   140017ae1:	call   0x1400265e8
   140017ae6:	int3   
   140017ae7:	cmp    DWORD PTR [rbx],0xffffffff
   140017aea:	ja     0x140017b0e
   140017aec:	mov    rdx,QWORD PTR [rsp+0x38]
   140017af1:	add    rdx,0xffffffffffffffe8
   140017af5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140017afa:	jg     0x140017b93
   140017b00:	mov    rcx,QWORD PTR [rdx]
   140017b03:	mov    rax,QWORD PTR [rcx]
   140017b06:	call   QWORD PTR [rax+0x8]
   140017b09:	jmp    0x140017b93
   140017b0e:	xor    r9d,r9d
   140017b11:	lea    ebx,[r9+0x28]
   140017b15:	lea    rcx,[rbp-0x20]
   140017b19:	mov    edx,ebx
   140017b1b:	test   esi,esi
   140017b1d:	je     0x140017b34
   140017b1f:	lea    r8,[rip+0x26e22]        # 0x14003e948
   140017b26:	call   0x140001004
   140017b2b:	lea    r8,[rip+0x26e16]        # 0x14003e948
   140017b32:	jmp    0x140017b47
   140017b34:	lea    r8,[rip+0x26035]        # 0x14003db70
   140017b3b:	call   0x140001004
   140017b40:	lea    r8,[rip+0x26029]        # 0x14003db70
   140017b47:	or     r9d,0xffffffff
   140017b4b:	mov    rdx,rbx
   140017b4e:	lea    rcx,[rbp-0x48]
   140017b52:	call   0x140001004
   140017b57:	lea    rax,[rbp-0x48]
   140017b5b:	mov    QWORD PTR [rsp+0x28],rax
   140017b60:	lea    rax,[rbp-0x20]
   140017b64:	mov    QWORD PTR [rsp+0x20],rax
   140017b69:	mov    r9,QWORD PTR [rdi]
   140017b6c:	mov    edx,0xe1230550
   140017b71:	mov    r8d,0x3
   140017b77:	lea    rcx,[rsp+0x48]
   140017b7c:	call   0x140002f94
   140017b81:	lea    rdx,[rip+0x32d90]        # 0x14004a918
   140017b88:	lea    rcx,[rsp+0x48]
   140017b8d:	call   0x1400265e8
   140017b92:	nop
   140017b93:	mov    rcx,QWORD PTR [rbp+0x8]
   140017b97:	xor    rcx,rsp
   140017b9a:	call   0x140020e50
   140017b9f:	lea    r11,[rsp+0x110]
   140017ba7:	mov    rbx,QWORD PTR [r11+0x30]
   140017bab:	mov    rsi,QWORD PTR [r11+0x38]
   140017baf:	mov    rsp,r11
   140017bb2:	pop    r14
   140017bb4:	pop    rdi
   140017bb5:	pop    rbp
   140017bb6:	ret    
   140017bb7:	int3   
   140017bb8:	mov    rax,rsp
   140017bbb:	mov    QWORD PTR [rax+0x20],r9
   140017bbf:	push   rbp
   140017bc0:	push   r12
   140017bc2:	push   r13
   140017bc4:	push   r14
   140017bc6:	push   r15
   140017bc8:	lea    rbp,[rax-0x48]
   140017bcc:	sub    rsp,0x120
   140017bd3:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140017bdb:	mov    QWORD PTR [rax+0x8],rbx
   140017bdf:	mov    QWORD PTR [rax+0x10],rsi
   140017be3:	mov    QWORD PTR [rax+0x18],rdi
   140017be7:	mov    r12,r8
   140017bea:	mov    rdi,rdx
   140017bed:	mov    r15,rcx
   140017bf0:	xor    r14d,r14d
   140017bf3:	test   r9,r9
   140017bf6:	jne    0x140017c34
   140017bf8:	lea    ebx,[r9+0x1]
   140017bfc:	mov    DWORD PTR [rsp+0x68],ebx
   140017c00:	mov    DWORD PTR [rsp+0x6c],0xe12305e1
   140017c08:	mov    QWORD PTR [rsp+0x70],r14
   140017c0d:	mov    QWORD PTR [rsp+0x78],r14
   140017c12:	mov    QWORD PTR [rbp-0x80],r14
   140017c16:	mov    QWORD PTR [rbp-0x78],r14
   140017c1a:	mov    QWORD PTR [rbp-0x70],r14
   140017c1e:	mov    QWORD PTR [rbp-0x68],r14
   140017c22:	lea    rdx,[rip+0x32cef]        # 0x14004a918
   140017c29:	lea    rcx,[rsp+0x68]
   140017c2e:	call   0x1400265e8
   140017c33:	int3   
   140017c34:	xor    eax,eax
   140017c36:	mov    QWORD PTR [rdx],rax
   140017c39:	mov    QWORD PTR [rdx+0x8],rax
   140017c3d:	mov    QWORD PTR [rdx+0x10],rax
   140017c41:	mov    rax,QWORD PTR [r8]
   140017c44:	lea    rdx,[rax-0x18]
   140017c48:	mov    rbx,QWORD PTR [rdx]
   140017c4b:	cmp    DWORD PTR [rdx+0x8],r14d
   140017c4f:	je     0x140017c96
   140017c51:	cmp    DWORD PTR [rdx+0x10],r14d
   140017c55:	jge    0x140017c75
   140017c57:	cmp    DWORD PTR [rax-0xc],r14d
   140017c5b:	jge    0x140017c68
   140017c5d:	mov    ecx,0x80070057
   140017c62:	call   0x140003e64
   140017c67:	int3   
   140017c68:	mov    DWORD PTR [rax-0x10],r14d
   140017c6c:	mov    rax,QWORD PTR [r8]
   140017c6f:	mov    WORD PTR [rax],r14w
   140017c73:	jmp    0x140017c96
   140017c75:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140017c7a:	jg     0x140017c85
   140017c7c:	mov    rcx,QWORD PTR [rdx]
   140017c7f:	mov    rax,QWORD PTR [rcx]
   140017c82:	call   QWORD PTR [rax+0x8]
   140017c85:	mov    rax,QWORD PTR [rbx]
   140017c88:	mov    rcx,rbx
   140017c8b:	call   QWORD PTR [rax+0x18]
   140017c8e:	add    rax,0x18
   140017c92:	mov    QWORD PTR [r12],rax
   140017c96:	mov    rax,QWORD PTR [r15]
   140017c99:	cmp    DWORD PTR [rax-0x10],r14d
   140017c9d:	jne    0x140017cd7
   140017c9f:	mov    ebx,0x1
   140017ca4:	mov    DWORD PTR [rbp-0x60],ebx
   140017ca7:	mov    DWORD PTR [rbp-0x5c],0xe123054e
   140017cae:	mov    QWORD PTR [rbp-0x58],r14
   140017cb2:	mov    QWORD PTR [rbp-0x50],r14
   140017cb6:	mov    QWORD PTR [rbp-0x48],r14
   140017cba:	mov    QWORD PTR [rbp-0x40],r14
   140017cbe:	mov    QWORD PTR [rbp-0x38],r14
   140017cc2:	mov    QWORD PTR [rbp-0x30],r14
   140017cc6:	lea    rdx,[rip+0x32c4b]        # 0x14004a918
   140017ccd:	lea    rcx,[rbp-0x60]
   140017cd1:	call   0x1400265e8
   140017cd6:	int3   
   140017cd7:	xor    r13d,r13d
   140017cda:	mov    QWORD PTR [rsp+0x30],r13
   140017cdf:	mov    QWORD PTR [rsp+0x38],r13
   140017ce4:	lea    ebx,[r13+0x1]
   140017ce8:	mov    rcx,QWORD PTR [r15]
   140017ceb:	test   r14d,r14d
   140017cee:	js     0x140017d1b
   140017cf0:	cmp    r14d,DWORD PTR [rcx-0x10]
   140017cf4:	jge    0x140017d1b
   140017cf6:	mov    edx,0x2c
   140017cfb:	movsxd rax,r14d
   140017cfe:	lea    rcx,[rcx+rax*2]
   140017d02:	call   0x140029fec
   140017d07:	mov    rsi,rax
   140017d0a:	test   rax,rax
   140017d0d:	je     0x140017db4
   140017d13:	sub    rsi,QWORD PTR [r15]
   140017d16:	sar    rsi,1
   140017d19:	jmp    0x140017d1e
   140017d1b:	or     esi,0xffffffff
   140017d1e:	cmp    esi,0xffffffff
   140017d21:	je     0x140017db4
   140017d27:	cmp    esi,r14d
   140017d2a:	jne    0x140017d6d
   140017d2c:	add    r14d,ebx
   140017d2f:	lea    rdx,[rip+0x2571a]        # 0x14003d450
   140017d36:	lea    rcx,[rsp+0x60]
   140017d3b:	call   0x140005714
   140017d40:	nop
   140017d41:	mov    rdx,rax
   140017d44:	lea    rcx,[rsp+0x30]
   140017d49:	call   0x140009028
   140017d4e:	nop
   140017d4f:	mov    rdx,QWORD PTR [rsp+0x60]
   140017d54:	add    rdx,0xffffffffffffffe8
   140017d58:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140017d5d:	jg     0x140017ce8
   140017d5f:	mov    rcx,QWORD PTR [rdx]
   140017d62:	mov    rax,QWORD PTR [rcx]
   140017d65:	call   QWORD PTR [rax+0x8]
   140017d68:	jmp    0x140017ce8
   140017d6d:	mov    r9d,esi
   140017d70:	sub    r9d,r14d
   140017d73:	mov    r8d,r14d
   140017d76:	lea    rdx,[rsp+0x58]
   140017d7b:	mov    rcx,r15
   140017d7e:	call   0x140018100
   140017d83:	nop
   140017d84:	mov    rdx,rax
   140017d87:	lea    rcx,[rsp+0x30]
   140017d8c:	call   0x140009028
   140017d91:	nop
   140017d92:	mov    rdx,QWORD PTR [rsp+0x58]
   140017d97:	add    rdx,0xffffffffffffffe8
   140017d9b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140017da0:	jg     0x140017dab
   140017da2:	mov    rcx,QWORD PTR [rdx]
   140017da5:	mov    rax,QWORD PTR [rcx]
   140017da8:	call   QWORD PTR [rax+0x8]
   140017dab:	lea    r14d,[rsi+0x1]
   140017daf:	jmp    0x140017ce8
   140017db4:	mov    r8d,r14d
   140017db7:	lea    rdx,[rsp+0x50]
   140017dbc:	mov    rcx,r15
   140017dbf:	call   0x1400180c0
   140017dc4:	nop
   140017dc5:	mov    rdx,rax
   140017dc8:	lea    rcx,[rsp+0x30]
   140017dcd:	call   0x140009028
   140017dd2:	nop
   140017dd3:	mov    rdx,QWORD PTR [rsp+0x50]
   140017dd8:	add    rdx,0xffffffffffffffe8
   140017ddc:	or     r15,0xffffffffffffffff
   140017de0:	mov    eax,r15d
   140017de3:	lock xadd DWORD PTR [rdx+0x10],eax
   140017de8:	add    eax,r15d
   140017deb:	test   eax,eax
   140017ded:	mov    r13,QWORD PTR [rbp+0x68]
   140017df1:	jg     0x140017dfc
   140017df3:	mov    rcx,QWORD PTR [rdx]
   140017df6:	mov    rax,QWORD PTR [rcx]
   140017df9:	call   QWORD PTR [rax+0x8]
   140017dfc:	xor    r14d,r14d
   140017dff:	cmp    DWORD PTR [rsp+0x38],r14d
   140017e04:	jg     0x140017e1a
   140017e06:	xor    r9d,r9d
   140017e09:	xor    r8d,r8d
   140017e0c:	mov    edx,ebx
   140017e0e:	mov    ecx,0xc000008c
   140017e13:	call   QWORD PTR [rip+0x214af]        # 0x1400392c8
   140017e19:	int3   
   140017e1a:	mov    rax,QWORD PTR [rsp+0x30]
   140017e1f:	mov    r8,QWORD PTR [r13+0x0]
   140017e23:	mov    rdx,QWORD PTR [rax]
   140017e26:	mov    rcx,r13
   140017e29:	call   QWORD PTR [r8+0x8]
   140017e2d:	mov    rsi,rax
   140017e30:	test   rax,rax
   140017e33:	jne    0x140017e7a
   140017e35:	cmp    DWORD PTR [rsp+0x38],r14d
   140017e3a:	jg     0x140017e50
   140017e3c:	xor    r9d,r9d
   140017e3f:	xor    r8d,r8d
   140017e42:	mov    edx,ebx
   140017e44:	mov    ecx,0xc000008c
   140017e49:	call   QWORD PTR [rip+0x21479]        # 0x1400392c8
   140017e4f:	int3   
   140017e50:	mov    r9,QWORD PTR [rsp+0x30]
   140017e55:	mov    r9,QWORD PTR [r9]
   140017e58:	mov    r8d,ebx
   140017e5b:	mov    edx,0xe12305e2
   140017e60:	lea    rcx,[rbp-0x20]
   140017e64:	call   0x140002f94
   140017e69:	lea    rdx,[rip+0x32aa8]        # 0x14004a918
   140017e70:	lea    rcx,[rbp-0x20]
   140017e74:	call   0x1400265e8
   140017e79:	int3   
   140017e7a:	or     DWORD PTR [rdi+0x4],0x3
   140017e7e:	cmp    DWORD PTR [rsp+0x38],0x2
   140017e83:	jl     0x140017eb8
   140017e85:	cmp    DWORD PTR [rsp+0x38],ebx
   140017e89:	jg     0x140017e9f
   140017e8b:	xor    r9d,r9d
   140017e8e:	xor    r8d,r8d
   140017e91:	mov    edx,ebx
   140017e93:	mov    ecx,0xc000008c
   140017e98:	call   QWORD PTR [rip+0x2142a]        # 0x1400392c8
   140017e9e:	int3   
   140017e9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140017ea4:	add    rcx,0x8
   140017ea8:	lea    rdx,[rsp+0x40]
   140017ead:	call   0x140017a34
   140017eb2:	mov    eax,DWORD PTR [rsp+0x40]
   140017eb6:	jmp    0x140017ebb
   140017eb8:	mov    eax,DWORD PTR [rax+0x20]
   140017ebb:	mov    QWORD PTR [rdi+0x8],rax
   140017ebf:	lea    rdx,[rip+0x26a62]        # 0x14003e928
   140017ec6:	lea    rcx,[rsp+0x48]
   140017ecb:	call   0x140005714
   140017ed0:	nop
   140017ed1:	cmp    DWORD PTR [rsp+0x38],r14d
   140017ed6:	jg     0x140017eec
   140017ed8:	xor    r9d,r9d
   140017edb:	xor    r8d,r8d
   140017ede:	mov    edx,ebx
   140017ee0:	mov    ecx,0xc000008c
   140017ee5:	call   QWORD PTR [rip+0x213dd]        # 0x1400392c8
   140017eeb:	int3   
   140017eec:	mov    eax,r14d
   140017eef:	mov    rdx,QWORD PTR [rsp+0x48]
   140017ef4:	test   rdx,rdx
   140017ef7:	setne  al
   140017efa:	test   eax,eax
   140017efc:	jne    0x140017f09
   140017efe:	mov    ecx,0x80004005
   140017f03:	call   0x140003e64
   140017f08:	int3   
   140017f09:	mov    rax,QWORD PTR [rsp+0x30]
   140017f0e:	mov    rcx,QWORD PTR [rax]
   140017f11:	call   0x14002a078
   140017f16:	test   eax,eax
   140017f18:	jne    0x140017f29
   140017f1a:	mov    eax,0x2710
   140017f1f:	cmp    QWORD PTR [rdi+0x8],rax
   140017f23:	jae    0x140017f29
   140017f25:	mov    QWORD PTR [rdi+0x8],rax
   140017f29:	cmp    DWORD PTR [rsp+0x38],0x3
   140017f2e:	jl     0x140017f5e
   140017f30:	cmp    DWORD PTR [rsp+0x38],0x2
   140017f35:	jg     0x140017f4b
   140017f37:	xor    r9d,r9d
   140017f3a:	xor    r8d,r8d
   140017f3d:	mov    edx,ebx
   140017f3f:	mov    ecx,0xc000008c
   140017f44:	call   QWORD PTR [rip+0x2137e]        # 0x1400392c8
   140017f4a:	int3   
   140017f4b:	mov    rdx,QWORD PTR [rsp+0x30]
   140017f50:	add    rdx,0x10
   140017f54:	mov    rcx,r12
   140017f57:	call   0x1400057bc
   140017f5c:	jmp    0x140017f84
   140017f5e:	mov    rdx,QWORD PTR [rsi+0x10]
   140017f62:	test   rdx,rdx
   140017f65:	jne    0x140017f6c
   140017f67:	mov    eax,r14d
   140017f6a:	jmp    0x140017f79
   140017f6c:	mov    rax,r15
   140017f6f:	inc    rax
   140017f72:	cmp    WORD PTR [rdx+rax*2],r14w
   140017f77:	jne    0x140017f6f
   140017f79:	mov    r8d,eax
   140017f7c:	mov    rcx,r12
   140017f7f:	call   0x140005ae0
   140017f84:	cmp    DWORD PTR [rip+0x38de9],r14d        # 0x140050d74
   140017f8b:	jne    0x140017f98
   140017f8d:	call   0x140004f38
   140017f92:	mov    DWORD PTR [rip+0x38ddc],ebx        # 0x140050d74
   140017f98:	mov    eax,DWORD PTR [rip+0x38ece]        # 0x140050e6c
   140017f9e:	mov    DWORD PTR [rdi],eax
   140017fa0:	mov    eax,DWORD PTR [rip+0x38ec6]        # 0x140050e6c
   140017fa6:	cmp    eax,0x2
   140017fa9:	je     0x140018001
   140017fab:	cmp    eax,0x3
   140017fae:	je     0x140017fb9
   140017fb0:	add    eax,0xfffffffb
   140017fb3:	cmp    eax,ebx
   140017fb5:	jbe    0x140018001
   140017fb7:	jmp    0x140018007
   140017fb9:	mov    eax,DWORD PTR [rsi+0x38]
   140017fbc:	shr    eax,0x19
   140017fbf:	xor    eax,DWORD PTR [rdi+0x10]
   140017fc2:	and    eax,0x3f
   140017fc5:	xor    DWORD PTR [rdi+0x10],eax
   140017fc8:	mov    eax,DWORD PTR [rsi+0x38]
   140017fcb:	shr    eax,0x3
   140017fce:	xor    eax,DWORD PTR [rdi+0x10]
   140017fd1:	and    eax,0x3fffc0
   140017fd6:	xor    eax,DWORD PTR [rdi+0x10]
   140017fd9:	mov    DWORD PTR [rdi+0x10],eax
   140017fdc:	mov    ecx,DWORD PTR [rsi+0x40]
   140017fdf:	shl    ecx,0x9
   140017fe2:	xor    ecx,eax
   140017fe4:	and    ecx,0x1c00000
   140017fea:	xor    ecx,eax
   140017fec:	mov    DWORD PTR [rdi+0x10],ecx
   140017fef:	movzx  eax,BYTE PTR [rsi+0x30]
   140017ff3:	shl    eax,0x19
   140017ff6:	xor    eax,ecx
   140017ff8:	and    eax,0x6000000
   140017ffd:	xor    eax,ecx
   140017fff:	jmp    0x140018004
   140018001:	mov    eax,DWORD PTR [rsi+0x30]
   140018004:	mov    DWORD PTR [rdi+0x10],eax
   140018007:	mov    rdx,QWORD PTR [rsp+0x48]
   14001800c:	add    rdx,0xffffffffffffffe8
   140018010:	mov    eax,r15d
   140018013:	lock xadd DWORD PTR [rdx+0x10],eax
   140018018:	add    eax,r15d
   14001801b:	test   eax,eax
   14001801d:	jg     0x140018029
   14001801f:	mov    rcx,QWORD PTR [rdx]
   140018022:	mov    rax,QWORD PTR [rcx]
   140018025:	call   QWORD PTR [rax+0x8]
   140018028:	nop
   140018029:	lea    rcx,[rsp+0x30]
   14001802e:	call   0x1400090dc
   140018033:	lea    r11,[rsp+0x120]
   14001803b:	mov    rbx,QWORD PTR [r11+0x30]
   14001803f:	mov    rsi,QWORD PTR [r11+0x38]
   140018043:	mov    rdi,QWORD PTR [r11+0x40]
   140018047:	mov    rsp,r11
   14001804a:	pop    r15
   14001804c:	pop    r14
   14001804e:	pop    r13
   140018050:	pop    r12
   140018052:	pop    rbp
   140018053:	ret    
   140018054:	mov    rax,rsp
   140018057:	push   rdi
   140018058:	sub    rsp,0x30
   14001805c:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140018064:	mov    QWORD PTR [rax+0x8],rbx
   140018068:	mov    QWORD PTR [rax+0x10],rsi
   14001806c:	mov    rbx,r9
   14001806f:	mov    rdi,r8
   140018072:	mov    rsi,rdx
   140018075:	mov    rdx,rcx
   140018078:	lea    rcx,[rax-0x18]
   14001807c:	call   0x140005714
   140018081:	nop
   140018082:	mov    r9,rbx
   140018085:	mov    r8,rdi
   140018088:	mov    rdx,rsi
   14001808b:	mov    rcx,rax
   14001808e:	call   0x140017bb8
   140018093:	nop
   140018094:	mov    rdx,QWORD PTR [rsp+0x20]
   140018099:	add    rdx,0xffffffffffffffe8
   14001809d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400180a2:	jg     0x1400180ad
   1400180a4:	mov    rcx,QWORD PTR [rdx]
   1400180a7:	mov    rax,QWORD PTR [rcx]
   1400180aa:	call   QWORD PTR [rax+0x8]
   1400180ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400180b2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400180b7:	add    rsp,0x30
   1400180bb:	pop    rdi
   1400180bc:	ret    
   1400180bd:	int3   
   1400180be:	int3   
   1400180bf:	int3   
   1400180c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400180c5:	push   rbx
   1400180c6:	sub    rsp,0x30
   1400180ca:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400180d3:	mov    rbx,rdx
   1400180d6:	and    DWORD PTR [rsp+0x20],0x0
   1400180db:	mov    rax,QWORD PTR [rcx]
   1400180de:	mov    r9d,DWORD PTR [rax-0x10]
   1400180e2:	sub    r9d,r8d
   1400180e5:	call   0x140018100
   1400180ea:	nop
   1400180eb:	mov    DWORD PTR [rsp+0x20],0x1
   1400180f3:	mov    rax,rbx
   1400180f6:	add    rsp,0x30
   1400180fa:	pop    rbx
   1400180fb:	ret    
   1400180fc:	int3   
   1400180fd:	int3   
   1400180fe:	int3   
   1400180ff:	int3   
   140018100:	mov    rax,rsp
   140018103:	mov    QWORD PTR [rax+0x10],rdx
   140018107:	push   rsi
   140018108:	push   rdi
   140018109:	push   r14
   14001810b:	sub    rsp,0x30
   14001810f:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140018117:	mov    QWORD PTR [rax+0x8],rbx
   14001811b:	mov    QWORD PTR [rax+0x18],rbp
   14001811f:	mov    ebx,r9d
   140018122:	mov    edi,r8d
   140018125:	mov    rsi,rdx
   140018128:	mov    r14,rcx
   14001812b:	xor    ebp,ebp
   14001812d:	mov    DWORD PTR [rax-0x28],ebp
   140018130:	test   r8d,r8d
   140018133:	cmovs  edi,ebp
   140018136:	test   r9d,r9d
   140018139:	cmovs  ebx,ebp
   14001813c:	mov    eax,0x7fffffff
   140018141:	sub    eax,edi
   140018143:	cmp    eax,ebx
   140018145:	jl     0x1400181c3
   140018147:	lea    eax,[rdi+rbx*1]
   14001814a:	mov    rdx,QWORD PTR [rcx]
   14001814d:	mov    ecx,DWORD PTR [rdx-0x10]
   140018150:	cmp    eax,ecx
   140018152:	jle    0x140018158
   140018154:	mov    ebx,ecx
   140018156:	sub    ebx,edi
   140018158:	cmp    edi,ecx
   14001815a:	cmovg  ebx,ebp
   14001815d:	test   edi,edi
   14001815f:	jne    0x14001817e
   140018161:	cmp    ebx,ecx
   140018163:	jne    0x14001817e
   140018165:	mov    rdx,r14
   140018168:	mov    rcx,rsi
   14001816b:	call   0x140005678
   140018170:	nop
   140018171:	mov    DWORD PTR [rsp+0x20],0x1
   140018179:	mov    rax,rsi
   14001817c:	jmp    0x1400181ce
   14001817e:	mov    rcx,QWORD PTR [rdx-0x18]
   140018182:	test   rcx,rcx
   140018185:	je     0x14001818f
   140018187:	mov    rax,QWORD PTR [rcx]
   14001818a:	call   QWORD PTR [rax+0x20]
   14001818d:	jmp    0x140018192
   14001818f:	mov    rax,rbp
   140018192:	test   rax,rax
   140018195:	jne    0x1400181a8
   140018197:	lea    rcx,[rip+0x362c2]        # 0x14004e460
   14001819e:	mov    rax,QWORD PTR [rip+0x362bb]        # 0x14004e460
   1400181a5:	call   QWORD PTR [rax+0x20]
   1400181a8:	mov    rdx,QWORD PTR [r14]
   1400181ab:	movsxd rcx,edi
   1400181ae:	lea    rdx,[rdx+rcx*2]
   1400181b2:	mov    r9,rax
   1400181b5:	mov    r8d,ebx
   1400181b8:	mov    rcx,rsi
   1400181bb:	call   0x140005a30
   1400181c0:	nop
   1400181c1:	jmp    0x140018171
   1400181c3:	mov    ecx,0x80070216
   1400181c8:	call   0x140003e64
   1400181cd:	nop
   1400181ce:	mov    rbx,QWORD PTR [rsp+0x50]
   1400181d3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400181d8:	add    rsp,0x30
   1400181dc:	pop    r14
   1400181de:	pop    rdi
   1400181df:	pop    rsi
   1400181e0:	ret    
   1400181e1:	int3   
   1400181e2:	int3   
   1400181e3:	int3   
   1400181e4:	mov    QWORD PTR [rsp+0x20],r9
   1400181e9:	push   rbx
   1400181ea:	push   rsi
   1400181eb:	push   rdi
   1400181ec:	sub    rsp,0x90
   1400181f3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400181fc:	mov    rax,QWORD PTR [rip+0x35245]        # 0x14004d448
   140018203:	xor    rax,rsp
   140018206:	mov    QWORD PTR [rsp+0x80],rax
   14001820e:	mov    rbx,r8
   140018211:	mov    dil,dl
   140018214:	cmp    DWORD PTR [rip+0x368f5],0x0        # 0x14004eb10
   14001821b:	je     0x1400182b7
   140018221:	mov    al,BYTE PTR [rip+0x368e5]        # 0x14004eb0c
   140018227:	cmp    BYTE PTR [rsp+0xd0],al
   14001822e:	ja     0x1400182b7
   140018234:	mov    esi,0x50
   140018239:	mov    r8d,esi
   14001823c:	xor    edx,edx
   14001823e:	lea    rcx,[rsp+0x30]
   140018243:	call   0x1400260e0
   140018248:	mov    WORD PTR [rsp+0x30],si
   14001824d:	movaps xmm0,XMMWORD PTR [rip+0x3688c]        # 0x14004eae0
   140018254:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14001825a:	mov    DWORD PTR [rsp+0x5c],0x120000
   140018262:	mov    BYTE PTR [rsp+0x34],dil
   140018267:	lea    rax,[rsp+0xc8]
   14001826f:	mov    QWORD PTR [rsp+0x60],rax
   140018274:	mov    DWORD PTR [rsp+0x68],0x8
   14001827c:	test   rbx,rbx
   14001827f:	je     0x14001829a
   140018281:	mov    QWORD PTR [rsp+0x70],rbx
   140018286:	mov    rcx,rbx
   140018289:	call   QWORD PTR [rip+0x212e9]        # 0x140039578
   14001828f:	inc    eax
   140018291:	add    rax,rax
   140018294:	mov    DWORD PTR [rsp+0x78],eax
   140018298:	jmp    0x1400182a4
   14001829a:	mov    eax,0x40
   14001829f:	mov    WORD PTR [rsp+0x30],ax
   1400182a4:	lea    rdx,[rsp+0x30]
   1400182a9:	mov    rcx,QWORD PTR [rip+0x36848]        # 0x14004eaf8
   1400182b0:	call   QWORD PTR [rip+0x20d92]        # 0x140039048
   1400182b6:	nop
   1400182b7:	mov    rcx,QWORD PTR [rsp+0x80]
   1400182bf:	xor    rcx,rsp
   1400182c2:	call   0x140020e50
   1400182c7:	add    rsp,0x90
   1400182ce:	pop    rdi
   1400182cf:	pop    rsi
   1400182d0:	pop    rbx
   1400182d1:	ret    
   1400182d2:	int3   
   1400182d3:	int3   
   1400182d4:	rex push rbx
   1400182d6:	sub    rsp,0x20
   1400182da:	mov    rbx,rdx
   1400182dd:	sub    ecx,0x4
   1400182e0:	je     0x1400182eb
   1400182e2:	dec    ecx
   1400182e4:	jne    0x140018318
   1400182e6:	and    DWORD PTR [rdx+0x40],ecx
   1400182e9:	jmp    0x140018318
   1400182eb:	mov    rcx,r9
   1400182ee:	mov    DWORD PTR [rdx+0x40],0x1
   1400182f5:	call   QWORD PTR [rip+0x20d45]        # 0x140039040
   1400182fb:	mov    rcx,rax
   1400182fe:	mov    QWORD PTR [rbx+0x28],rax
   140018302:	call   QWORD PTR [rip+0x20d50]        # 0x140039058
   140018308:	mov    rcx,QWORD PTR [rbx+0x28]
   14001830c:	mov    BYTE PTR [rbx+0x3c],al
   14001830f:	call   QWORD PTR [rip+0x20d23]        # 0x140039038
   140018315:	mov    DWORD PTR [rbx+0x38],eax
   140018318:	mov    eax,0x57
   14001831d:	add    rsp,0x20
   140018321:	pop    rbx
   140018322:	ret    
   140018323:	int3   
   140018324:	mov    QWORD PTR [rsp+0x8],rbx
   140018329:	push   rdi
   14001832a:	sub    rsp,0x20
   14001832e:	mov    ebx,edx
   140018330:	mov    rdi,rcx
   140018333:	call   0x14001875c
   140018338:	test   bl,0x1
   14001833b:	je     0x140018345
   14001833d:	mov    rcx,rdi
   140018340:	call   0x140020e30
   140018345:	mov    rax,rdi
   140018348:	mov    rbx,QWORD PTR [rsp+0x30]
   14001834d:	add    rsp,0x20
   140018351:	pop    rdi
   140018352:	ret    
   140018353:	int3   
   140018354:	mov    r11,rsp
   140018357:	mov    QWORD PTR [r11+0x8],rcx
   14001835b:	push   rbx
   14001835c:	sub    rsp,0x30
   140018360:	mov    QWORD PTR [r11-0x10],0xfffffffffffffffe
   140018368:	mov    r8,rdx
   14001836b:	lea    rax,[rip+0x258d6]        # 0x14003dc48
   140018372:	mov    QWORD PTR [rcx],rax
   140018375:	lea    rax,[rip+0x265e4]        # 0x14003e960
   14001837c:	mov    QWORD PTR [rcx],rax
   14001837f:	xor    ebx,ebx
   140018381:	mov    DWORD PTR [rcx+0x8],ebx
   140018384:	mov    WORD PTR [rcx+0xc],bx
   140018388:	mov    QWORD PTR [rcx+0x10],rbx
   14001838c:	mov    DWORD PTR [rcx+0x18],ebx
   14001838f:	mov    QWORD PTR [rcx+0x20],rbx
   140018393:	mov    DWORD PTR [rcx+0x228],ebx
   140018399:	lea    rax,[rcx+0x22c]
   1400183a0:	mov    BYTE PTR [rax],bl
   1400183a2:	test   rdx,rdx
   1400183a5:	je     0x140018416
   1400183a7:	mov    r9d,0x7ffffffe
   1400183ad:	mov    QWORD PTR [r11-0x18],r9
   1400183b1:	mov    QWORD PTR [r11-0x28],rdx
   1400183b5:	lea    r10d,[rbx+0x40]
   1400183b9:	mov    QWORD PTR [r11-0x20],r10
   1400183bd:	mov    QWORD PTR [rsp],rax
   1400183c1:	mov    edx,ebx
   1400183c3:	mov    QWORD PTR [r11-0x30],rbx
   1400183c7:	test   r10,r10
   1400183ca:	je     0x140018405
   1400183cc:	test   r9,r9
   1400183cf:	je     0x140018414
   1400183d1:	mov    r11b,BYTE PTR [r8]
   1400183d4:	test   r11b,r11b
   1400183d7:	je     0x140018414
   1400183d9:	mov    BYTE PTR [rax],r11b
   1400183dc:	inc    rax
   1400183df:	mov    QWORD PTR [rsp],rax
   1400183e3:	inc    r8
   1400183e6:	mov    QWORD PTR [rsp+0x10],r8
   1400183eb:	dec    r10
   1400183ee:	mov    QWORD PTR [rsp+0x18],r10
   1400183f3:	dec    r9
   1400183f6:	mov    QWORD PTR [rsp+0x20],r9
   1400183fb:	inc    rdx
   1400183fe:	mov    QWORD PTR [rsp+0x8],rdx
   140018403:	jmp    0x1400183c7
   140018405:	dec    rax
   140018408:	mov    QWORD PTR [rsp],rax
   14001840c:	dec    rdx
   14001840f:	mov    QWORD PTR [rsp+0x8],rdx
   140018414:	mov    BYTE PTR [rax],bl
   140018416:	jmp    0x14001841d
   140018418:	mov    rcx,QWORD PTR [rsp+0x40]
   14001841d:	mov    rax,rcx
   140018420:	add    rsp,0x30
   140018424:	pop    rbx
   140018425:	ret    
   140018426:	int3   
   140018427:	int3   
   140018428:	mov    QWORD PTR [rsp+0x10],rbx
   14001842d:	mov    QWORD PTR [rsp+0x18],rbp
   140018432:	mov    DWORD PTR [rsp+0x20],r9d
   140018437:	push   rsi
   140018438:	push   rdi
   140018439:	push   r15
   14001843b:	sub    rsp,0x30
   14001843f:	mov    edi,0x1
   140018444:	mov    rbp,r8
   140018447:	mov    rsi,rdx
   14001844a:	mov    eax,edi
   14001844c:	mov    rbx,rcx
   14001844f:	lea    r15,[rip+0x39142]        # 0x140051598
   140018456:	xchg   DWORD PTR [rip+0x39144],eax        # 0x1400515a0
   14001845c:	test   eax,eax
   14001845e:	je     0x140018468
   140018460:	mov    rcx,r15
   140018463:	call   0x1400178cc
   140018468:	cmp    DWORD PTR [rip+0x38905],0x0        # 0x140050d74
   14001846f:	mov    eax,DWORD PTR [rbx+0x8]
   140018472:	mov    QWORD PTR [rip+0x39e07],rsi        # 0x140052280
   140018479:	mov    DWORD PTR [rip+0x39df1],eax        # 0x140052270
   14001847f:	lea    rax,[rbx+0xc]
   140018483:	mov    QWORD PTR [rip+0x39dee],rax        # 0x140052278
   14001848a:	jne    0x140018497
   14001848c:	call   0x140004f38
   140018491:	mov    DWORD PTR [rip+0x388dd],edi        # 0x140050d74
   140018497:	movzx  eax,WORD PTR [rip+0x388ea]        # 0x140050d88
   14001849e:	mov    QWORD PTR [rip+0x39deb],rbp        # 0x140052290
   1400184a5:	lea    r9,[rip+0x39dc4]        # 0x140052270
   1400184ac:	mov    WORD PTR [rip+0x39dd5],ax        # 0x140052288
   1400184b3:	mov    eax,DWORD PTR [rbx+0x10]
   1400184b6:	mov    QWORD PTR [rip+0x39de3],r15        # 0x1400522a0
   1400184bd:	mov    DWORD PTR [rip+0x39dd5],eax        # 0x140052298
   1400184c3:	lea    rax,[rbx+0x18]
   1400184c7:	lea    r8,[rip+0xde]        # 0x1400185ac
   1400184ce:	mov    QWORD PTR [rip+0x39dd3],rax        # 0x1400522a8
   1400184d5:	mov    rax,QWORD PTR [rbx+0x20]
   1400184d9:	and    QWORD PTR [rip+0x39dd7],0x0        # 0x1400522b8
   1400184e1:	mov    QWORD PTR [rip+0x39dc8],rax        # 0x1400522b0
   1400184e8:	mov    edx,DWORD PTR [rbx+0x14]
   1400184eb:	lea    rax,[rsp+0x68]
   1400184f0:	mov    QWORD PTR [rsp+0x28],rax
   1400184f5:	and    DWORD PTR [rsp+0x20],0x0
   1400184fa:	xor    ecx,ecx
   1400184fc:	call   0x14002fda8
   140018501:	mov    ecx,DWORD PTR [rbx+0x228]
   140018507:	mov    QWORD PTR [rbx+rcx*8+0x28],rax
   14001850c:	mov    eax,DWORD PTR [rbx+0x228]
   140018512:	cmp    QWORD PTR [rbx+rax*8+0x28],0x0
   140018518:	je     0x140018582
   14001851a:	inc    eax
   14001851c:	mov    DWORD PTR [rbx+0x228],eax
   140018522:	xchg   DWORD PTR [rip+0x39078],edi        # 0x1400515a0
   140018528:	test   edi,edi
   14001852a:	je     0x140018534
   14001852c:	mov    rcx,r15
   14001852f:	call   0x1400178cc
   140018534:	xor    eax,eax
   140018536:	xchg   DWORD PTR [rip+0x39064],eax        # 0x1400515a0
   14001853c:	lock or DWORD PTR [rsp],0x0
   140018541:	mov    eax,DWORD PTR [rip+0x3905d]        # 0x1400515a4
   140018547:	test   eax,eax
   140018549:	jle    0x14001856f
   14001854b:	lock or DWORD PTR [rsp],0x0
   140018550:	mov    eax,DWORD PTR [rip+0x3904e]        # 0x1400515a4
   140018556:	mov    rax,QWORD PTR [rip+0x3903b]        # 0x140051598
   14001855d:	test   rax,rax
   140018560:	je     0x14001856f
   140018562:	mov    rcx,QWORD PTR [rip+0x3902f]        # 0x140051598
   140018569:	call   QWORD PTR [rip+0x20f69]        # 0x1400394d8
   14001856f:	mov    rbx,QWORD PTR [rsp+0x58]
   140018574:	mov    rbp,QWORD PTR [rsp+0x60]
   140018579:	add    rsp,0x30
   14001857d:	pop    r15
   14001857f:	pop    rdi
   140018580:	pop    rsi
   140018581:	ret    
   140018582:	and    DWORD PTR [rsp+0x50],0x0
   140018587:	mov    DWORD PTR [rsp+0x54],0xe123273b
   14001858f:	mov    rax,QWORD PTR [rsp+0x50]
   140018594:	lea    rdx,[rip+0x3273d]        # 0x14004acd8
   14001859b:	lea    rcx,[rsp+0x50]
   1400185a0:	mov    QWORD PTR [rsp+0x50],rax
   1400185a5:	call   0x1400265e8
   1400185aa:	int3   
   1400185ab:	int3   
   1400185ac:	mov    rax,rsp
   1400185af:	push   r13
   1400185b1:	push   r14
   1400185b3:	push   r15
   1400185b5:	sub    rsp,0x80
   1400185bc:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   1400185c4:	mov    QWORD PTR [rax+0x8],rbx
   1400185c8:	mov    QWORD PTR [rax+0x10],rsi
   1400185cc:	mov    QWORD PTR [rax+0x18],rdi
   1400185d0:	mov    QWORD PTR [rax+0x20],r12
   1400185d4:	mov    rbx,rcx
   1400185d7:	xor    ecx,ecx
   1400185d9:	call   QWORD PTR [rip+0x21081]        # 0x140039660
   1400185df:	mov    rdx,QWORD PTR [rbx+0x8]
   1400185e3:	mov    r15,QWORD PTR [rbx+0x10]
   1400185e7:	mov    rcx,QWORD PTR [rbx+0x18]
   1400185eb:	mov    r12,QWORD PTR [rbx+0x20]
   1400185ef:	mov    r13,QWORD PTR [rbx+0x28]
   1400185f3:	mov    r14,QWORD PTR [rbx+0x30]
   1400185f7:	mov    rsi,QWORD PTR [rbx+0x38]
   1400185fb:	mov    QWORD PTR [rsp+0x68],rsi
   140018600:	mov    rax,QWORD PTR [rbx+0x40]
   140018604:	mov    QWORD PTR [rsp+0x70],rax
   140018609:	mov    rax,QWORD PTR [rbx+0x48]
   14001860d:	mov    QWORD PTR [rsp+0x78],rax
   140018612:	mov    edi,0x1
   140018617:	cmp    DWORD PTR [rbx],0x0
   14001861a:	je     0x14001864b
   14001861c:	cmp    cx,di
   14001861f:	jle    0x14001864b
   140018621:	movzx  eax,WORD PTR [rdx]
   140018624:	cmp    ax,cx
   140018627:	mov    eax,edi
   140018629:	jge    0x140018635
   14001862b:	movzx  ecx,WORD PTR [rdx]
   14001862e:	shl    eax,cl
   140018630:	add    WORD PTR [rdx],di
   140018633:	jmp    0x140018638
   140018635:	mov    WORD PTR [rdx],di
   140018638:	mov    ebx,eax
   14001863a:	call   QWORD PTR [rip+0x20b90]        # 0x1400391d0
   140018640:	mov    rcx,rax
   140018643:	mov    edx,ebx
   140018645:	call   QWORD PTR [rip+0x20b1d]        # 0x140039168
   14001864b:	call   QWORD PTR [rip+0x20b7f]        # 0x1400391d0
   140018651:	mov    rcx,rax
   140018654:	mov    edx,r13d
   140018657:	call   QWORD PTR [rip+0x20f03]        # 0x140039560
   14001865d:	lock add DWORD PTR [rsi],edi
   140018660:	xor    eax,eax
   140018662:	xchg   DWORD PTR [r14+0x8],eax
   140018666:	lock or DWORD PTR [rsp],0x0
   14001866b:	mov    eax,DWORD PTR [r14+0xc]
   14001866f:	test   eax,eax
   140018671:	jle    0x14001868e
   140018673:	lock or DWORD PTR [rsp],0x0
   140018678:	mov    eax,DWORD PTR [r14+0xc]
   14001867c:	mov    rax,QWORD PTR [r14]
   14001867f:	test   rax,rax
   140018682:	je     0x14001868e
   140018684:	mov    rcx,QWORD PTR [r14]
   140018687:	call   QWORD PTR [rip+0x20e4b]        # 0x1400394d8
   14001868d:	nop
   14001868e:	mov    rcx,r12
   140018691:	call   r15
   140018694:	nop
   140018695:	jmp    0x14001869c
   140018697:	mov    rsi,QWORD PTR [rsp+0x68]
   14001869c:	lock dec DWORD PTR [rsi]
   14001869f:	call   QWORD PTR [rip+0x20fd3]        # 0x140039678
   1400186a5:	xor    eax,eax
   1400186a7:	lea    r11,[rsp+0x80]
   1400186af:	mov    rbx,QWORD PTR [r11+0x20]
   1400186b3:	mov    rsi,QWORD PTR [r11+0x28]
   1400186b7:	mov    rdi,QWORD PTR [r11+0x30]
   1400186bb:	mov    r12,QWORD PTR [r11+0x38]
   1400186bf:	mov    rsp,r11
   1400186c2:	pop    r15
   1400186c4:	pop    r14
   1400186c6:	pop    r13
   1400186c8:	ret    
   1400186c9:	int3   
   1400186ca:	int3   
   1400186cb:	int3   
   1400186cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400186d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400186d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400186db:	push   rdi
   1400186dc:	sub    rsp,0x20
   1400186e0:	mov    rbx,rcx
   1400186e3:	mov    ecx,DWORD PTR [rcx+0x228]
   1400186e9:	cmp    ecx,0x40
   1400186ec:	jb     0x1400186f2
   1400186ee:	xor    eax,eax
   1400186f0:	jmp    0x140018744
   1400186f2:	lea    rdx,[rbx+0x28]
   1400186f6:	or     r9d,0xffffffff
   1400186fa:	mov    r8d,0x1
   140018700:	call   QWORD PTR [rip+0x20da2]        # 0x1400394a8
   140018706:	xor    edi,edi
   140018708:	mov    ebp,eax
   14001870a:	cmp    eax,0x102
   14001870f:	je     0x140018738
   140018711:	mov    esi,edi
   140018713:	cmp    DWORD PTR [rbx+0x228],edi
   140018719:	jbe    0x140018732
   14001871b:	mov    ecx,esi
   14001871d:	mov    rcx,QWORD PTR [rbx+rcx*8+0x28]
   140018722:	call   QWORD PTR [rip+0x20e98]        # 0x1400395c0
   140018728:	inc    esi
   14001872a:	cmp    esi,DWORD PTR [rbx+0x228]
   140018730:	jb     0x14001871b
   140018732:	mov    DWORD PTR [rbx+0x228],edi
   140018738:	cmp    ebp,0x102
   14001873e:	setne  dil
   140018742:	mov    eax,edi
   140018744:	mov    rbx,QWORD PTR [rsp+0x30]
   140018749:	mov    rbp,QWORD PTR [rsp+0x38]
   14001874e:	mov    rsi,QWORD PTR [rsp+0x40]
   140018753:	add    rsp,0x20
   140018757:	pop    rdi
   140018758:	ret    
   140018759:	int3   
   14001875a:	int3   
   14001875b:	int3   
   14001875c:	mov    QWORD PTR [rsp+0x8],rcx
   140018761:	push   rdi
   140018762:	sub    rsp,0x30
   140018766:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001876f:	mov    QWORD PTR [rsp+0x48],rbx
   140018774:	mov    rbx,rcx
   140018777:	lea    rax,[rip+0x261e2]        # 0x14003e960
   14001877e:	mov    QWORD PTR [rcx],rax
   140018781:	xor    edi,edi
   140018783:	cmp    DWORD PTR [rcx+0x228],edi
   140018789:	jbe    0x1400187a0
   14001878b:	mov    rcx,QWORD PTR [rbx+rdi*8+0x28]
   140018790:	call   QWORD PTR [rip+0x20e2a]        # 0x1400395c0
   140018796:	inc    edi
   140018798:	cmp    edi,DWORD PTR [rbx+0x228]
   14001879e:	jb     0x14001878b
   1400187a0:	lea    rax,[rip+0x254a1]        # 0x14003dc48
   1400187a7:	mov    QWORD PTR [rbx],rax
   1400187aa:	mov    rbx,QWORD PTR [rsp+0x48]
   1400187af:	add    rsp,0x30
   1400187b3:	pop    rdi
   1400187b4:	ret    
   1400187b5:	int3   
   1400187b6:	int3   
   1400187b7:	int3   
   1400187b8:	lea    rax,[rip+0x261f9]        # 0x14003e9b8
   1400187bf:	mov    QWORD PTR [rcx],rax
   1400187c2:	ret    
   1400187c3:	int3   
   1400187c4:	rex push rbx
   1400187c6:	sub    rsp,0x20
   1400187ca:	lea    rax,[rip+0x261e7]        # 0x14003e9b8
   1400187d1:	mov    rbx,rcx
   1400187d4:	mov    QWORD PTR [rcx],rax
   1400187d7:	test   dl,0x1
   1400187da:	je     0x1400187e1
   1400187dc:	call   0x140020e30
   1400187e1:	mov    rax,rbx
   1400187e4:	add    rsp,0x20
   1400187e8:	pop    rbx
   1400187e9:	ret    
   1400187ea:	int3   
   1400187eb:	int3   
   1400187ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400187f1:	push   rdi
   1400187f2:	sub    rsp,0x20
   1400187f6:	mov    ebx,edx
   1400187f8:	mov    rdi,rcx
   1400187fb:	call   0x14001881c
   140018800:	test   bl,0x1
   140018803:	je     0x14001880d
   140018805:	mov    rcx,rdi
   140018808:	call   0x140020e30
   14001880d:	mov    rax,rdi
   140018810:	mov    rbx,QWORD PTR [rsp+0x30]
   140018815:	add    rsp,0x20
   140018819:	pop    rdi
   14001881a:	ret    
   14001881b:	int3   
   14001881c:	mov    QWORD PTR [rsp+0x8],rcx
   140018821:	push   rbx
   140018822:	sub    rsp,0x30
   140018826:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001882f:	mov    rbx,rcx
   140018832:	lea    rax,[rip+0x26137]        # 0x14003e970
   140018839:	mov    QWORD PTR [rcx],rax
   14001883c:	call   0x140018b10
   140018841:	nop
   140018842:	lea    rcx,[rbx+0x10]
   140018846:	call   0x140019be4
   14001884b:	nop
   14001884c:	lea    rax,[rip+0x26165]        # 0x14003e9b8
   140018853:	mov    QWORD PTR [rbx],rax
   140018856:	add    rsp,0x30
   14001885a:	pop    rbx
   14001885b:	ret    
   14001885c:	sub    rsp,0x38
   140018860:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018869:	test   rcx,rcx
   14001886c:	jne    0x140018872
   14001886e:	xor    eax,eax
   140018870:	jmp    0x1400188ab
   140018872:	cmp    DWORD PTR [rip+0x362cf],0x0        # 0x14004eb48
   140018879:	jne    0x14001889d
   14001887b:	mov    rdx,rcx
   14001887e:	lea    rcx,[rip+0x3629b]        # 0x14004eb20
   140018885:	call   0x1400188b4
   14001888a:	test   eax,eax
   14001888c:	je     0x140018899
   14001888e:	and    DWORD PTR [rip+0x362b3],0x0        # 0x14004eb48
   140018895:	xor    eax,eax
   140018897:	jmp    0x1400188ab
   140018899:	jmp    0x1400188a4
   14001889b:	jmp    0x14001886e
   14001889d:	mov    QWORD PTR [rip+0x36284],rcx        # 0x14004eb28
   1400188a4:	lea    rax,[rip+0x36275]        # 0x14004eb20
   1400188ab:	add    rsp,0x38
   1400188af:	ret    
   1400188b0:	int3   
   1400188b1:	int3   
   1400188b2:	int3   
   1400188b3:	int3   
   1400188b4:	mov    QWORD PTR [rsp+0x18],r8
   1400188b9:	push   rbp
   1400188ba:	push   rbx
   1400188bb:	push   rsi
   1400188bc:	push   rdi
   1400188bd:	push   r14
   1400188bf:	mov    rbp,rsp
   1400188c2:	sub    rsp,0x40
   1400188c6:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400188ce:	mov    rdi,rdx
   1400188d1:	mov    r14,rcx
   1400188d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400188d8:	lea    rcx,[rip+0x35b81]        # 0x14004e460
   1400188df:	mov    rax,QWORD PTR [rip+0x35b7a]        # 0x14004e460
   1400188e6:	call   QWORD PTR [rax+0x18]
   1400188e9:	add    rax,0x18
   1400188ed:	mov    QWORD PTR [rbp+0x38],rax
   1400188f1:	lea    rcx,[rip+0x35b68]        # 0x14004e460
   1400188f8:	mov    rax,QWORD PTR [rip+0x35b61]        # 0x14004e460
   1400188ff:	call   QWORD PTR [rax+0x18]
   140018902:	add    rax,0x18
   140018906:	mov    QWORD PTR [rbp+0x30],rax
   14001890a:	lea    r9,[rbp+0x30]
   14001890e:	lea    r8,[rbp+0x38]
   140018912:	mov    rcx,r14
   140018915:	call   0x140018c1c
   14001891a:	mov    ebx,eax
   14001891c:	test   eax,eax
   14001891e:	js     0x140018ac1
   140018924:	and    QWORD PTR [rbp+0x40],0x0
   140018929:	lea    rax,[rbp+0x40]
   14001892d:	mov    QWORD PTR [rsp+0x20],rax
   140018932:	lea    r9,[rip+0x26067]        # 0x14003e9a0
   140018939:	xor    edx,edx
   14001893b:	lea    r8d,[rdx+0x17]
   14001893f:	lea    rcx,[rip+0x2604a]        # 0x14003e990
   140018946:	call   QWORD PTR [rip+0x20d1c]        # 0x140039668
   14001894c:	mov    ebx,eax
   14001894e:	test   eax,eax
   140018950:	jns    0x14001896b
   140018952:	mov    rcx,QWORD PTR [r14+0x8]
   140018956:	mov    rax,QWORD PTR [rcx]
   140018959:	xor    r9d,r9d
   14001895c:	xor    r8d,r8d
   14001895f:	mov    edx,0xe12305ee
   140018964:	call   QWORD PTR [rax]
   140018966:	jmp    0x140018ac1
   14001896b:	mov    ecx,0x70
   140018970:	call   0x140021a98
   140018975:	mov    QWORD PTR [rbp+0x48],rax
   140018979:	test   rax,rax
   14001897c:	je     0x140018991
   14001897e:	mov    r8,rdi
   140018981:	mov    rdx,r14
   140018984:	mov    rcx,rax
   140018987:	call   0x140019fc0
   14001898c:	mov    rsi,rax
   14001898f:	jmp    0x140018993
   140018991:	xor    esi,esi
   140018993:	mov    rcx,QWORD PTR [rbp+0x40]
   140018997:	mov    rax,QWORD PTR [rcx]
   14001899a:	mov    rdx,rsi
   14001899d:	call   QWORD PTR [rax+0x50]
   1400189a0:	mov    ebx,eax
   1400189a2:	test   eax,eax
   1400189a4:	js     0x140018ab6
   1400189aa:	mov    ecx,0x18
   1400189af:	call   0x140021a98
   1400189b4:	mov    rdi,rax
   1400189b7:	mov    QWORD PTR [rbp+0x48],rax
   1400189bb:	test   rax,rax
   1400189be:	je     0x140018a17
   1400189c0:	mov    rax,QWORD PTR [r14+0x8]
   1400189c4:	lea    rdx,[rip+0x260ad]        # 0x14003ea78
   1400189cb:	mov    QWORD PTR [rdi],rdx
   1400189ce:	mov    QWORD PTR [rdi+0x8],rax
   1400189d2:	lea    rbx,[rdi+0x10]
   1400189d6:	mov    QWORD PTR [rbp-0x8],rbx
   1400189da:	lea    rcx,[rip+0x35a7f]        # 0x14004e460
   1400189e1:	mov    rax,QWORD PTR [rip+0x35a78]        # 0x14004e460
   1400189e8:	call   QWORD PTR [rax+0x18]
   1400189eb:	add    rax,0x18
   1400189ef:	mov    QWORD PTR [rbx],rax
   1400189f2:	lea    rdx,[rip+0x26069]        # 0x14003ea62
   1400189f9:	mov    rcx,rbx
   1400189fc:	call   0x14000592c
   140018a01:	test   al,al
   140018a03:	jne    0x140018a15
   140018a05:	lea    rdx,[rip+0x26056]        # 0x14003ea62
   140018a0c:	mov    rcx,rbx
   140018a0f:	call   0x140019c70
   140018a14:	nop
   140018a15:	jmp    0x140018a19
   140018a17:	xor    edi,edi
   140018a19:	mov    rcx,QWORD PTR [rbp+0x40]
   140018a1d:	mov    rax,QWORD PTR [rcx]
   140018a20:	mov    rdx,rdi
   140018a23:	call   QWORD PTR [rax+0x70]
   140018a26:	mov    ebx,eax
   140018a28:	test   eax,eax
   140018a2a:	js     0x140018ab6
   140018a30:	mov    rax,QWORD PTR [rsi]
   140018a33:	xor    edx,edx
   140018a35:	mov    rcx,rsi
   140018a38:	call   QWORD PTR [rax+0x80]
   140018a3e:	mov    rax,QWORD PTR [rsi]
   140018a41:	lea    rdx,[rbp+0x30]
   140018a45:	mov    rcx,rsi
   140018a48:	call   QWORD PTR [rax+0x78]
   140018a4b:	mov    rax,QWORD PTR [rdi]
   140018a4e:	lea    rdx,[rbp+0x30]
   140018a52:	mov    rcx,rdi
   140018a55:	call   QWORD PTR [rax+0x38]
   140018a58:	mov    rcx,QWORD PTR [rbp+0x40]
   140018a5c:	mov    rax,QWORD PTR [rcx]
   140018a5f:	mov    rdx,QWORD PTR [rbp+0x30]
   140018a63:	call   QWORD PTR [rax+0xa0]
   140018a69:	mov    ebx,eax
   140018a6b:	test   eax,eax
   140018a6d:	js     0x140018ab6
   140018a6f:	mov    rax,QWORD PTR [rsi]
   140018a72:	mov    dl,0x1
   140018a74:	mov    rcx,rsi
   140018a77:	call   QWORD PTR [rax+0x80]
   140018a7d:	mov    rax,QWORD PTR [rsi]
   140018a80:	lea    rdx,[rbp+0x38]
   140018a84:	mov    rcx,rsi
   140018a87:	call   QWORD PTR [rax+0x78]
   140018a8a:	mov    rax,QWORD PTR [rdi]
   140018a8d:	lea    rdx,[rbp+0x38]
   140018a91:	mov    rcx,rdi
   140018a94:	call   QWORD PTR [rax+0x38]
   140018a97:	mov    rcx,QWORD PTR [rbp+0x40]
   140018a9b:	mov    rax,QWORD PTR [rcx]
   140018a9e:	mov    rdx,QWORD PTR [rbp+0x38]
   140018aa2:	call   QWORD PTR [rax+0xa0]
   140018aa8:	mov    ebx,eax
   140018aaa:	test   eax,eax
   140018aac:	js     0x140018ab6
   140018aae:	mov    DWORD PTR [r14+0x28],0x1
   140018ab6:	mov    rcx,QWORD PTR [rbp+0x40]
   140018aba:	mov    rax,QWORD PTR [rcx]
   140018abd:	call   QWORD PTR [rax+0x10]
   140018ac0:	nop
   140018ac1:	mov    rdx,QWORD PTR [rbp+0x30]
   140018ac5:	add    rdx,0xffffffffffffffe8
   140018ac9:	or     edi,0xffffffff
   140018acc:	mov    eax,edi
   140018ace:	lock xadd DWORD PTR [rdx+0x10],eax
   140018ad3:	add    eax,edi
   140018ad5:	test   eax,eax
   140018ad7:	jg     0x140018ae3
   140018ad9:	mov    rcx,QWORD PTR [rdx]
   140018adc:	mov    rax,QWORD PTR [rcx]
   140018adf:	call   QWORD PTR [rax+0x8]
   140018ae2:	nop
   140018ae3:	mov    rdx,QWORD PTR [rbp+0x38]
   140018ae7:	add    rdx,0xffffffffffffffe8
   140018aeb:	mov    eax,edi
   140018aed:	lock xadd DWORD PTR [rdx+0x10],eax
   140018af2:	add    eax,edi
   140018af4:	test   eax,eax
   140018af6:	jg     0x140018b01
   140018af8:	mov    rcx,QWORD PTR [rdx]
   140018afb:	mov    rax,QWORD PTR [rcx]
   140018afe:	call   QWORD PTR [rax+0x8]
   140018b01:	mov    eax,ebx
   140018b03:	add    rsp,0x40
   140018b07:	pop    r14
   140018b09:	pop    rdi
   140018b0a:	pop    rsi
   140018b0b:	pop    rbx
   140018b0c:	pop    rbp
   140018b0d:	ret    
   140018b0e:	int3   
   140018b0f:	int3   
   140018b10:	mov    rax,rsp
   140018b13:	push   r15
   140018b15:	sub    rsp,0x30
   140018b19:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140018b21:	mov    QWORD PTR [rax+0x8],rbx
   140018b25:	mov    QWORD PTR [rax+0x10],rsi
   140018b29:	mov    QWORD PTR [rax+0x18],rdi
   140018b2d:	mov    QWORD PTR [rax+0x20],r14
   140018b31:	mov    r14,rcx
   140018b34:	mov    r15d,DWORD PTR [rcx+0x20]
   140018b38:	xor    esi,esi
   140018b3a:	mov    DWORD PTR [rsp+0x20],esi
   140018b3e:	cmp    esi,r15d
   140018b41:	jae    0x140018b98
   140018b43:	test   esi,esi
   140018b45:	js     0x140018b83
   140018b47:	cmp    esi,DWORD PTR [r14+0x20]
   140018b4b:	jge    0x140018b83
   140018b4d:	movsxd rax,esi
   140018b50:	lea    rdi,[rax+rax*8]
   140018b54:	mov    rbx,QWORD PTR [r14+0x18]
   140018b58:	mov    rcx,QWORD PTR [rbx+rdi*8]
   140018b5c:	call   0x140023328
   140018b61:	mov    rcx,QWORD PTR [rbx+rdi*8+0x8]
   140018b66:	call   0x140023328
   140018b6b:	mov    rcx,QWORD PTR [rbx+rdi*8+0x10]
   140018b70:	call   0x140023328
   140018b75:	mov    rcx,QWORD PTR [rbx+rdi*8+0x18]
   140018b7a:	call   0x140023328
   140018b7f:	inc    esi
   140018b81:	jmp    0x140018b3a
   140018b83:	xor    r9d,r9d
   140018b86:	xor    r8d,r8d
   140018b89:	lea    edx,[r9+0x1]
   140018b8d:	mov    ecx,0xc000008c
   140018b92:	call   QWORD PTR [rip+0x20730]        # 0x1400392c8
   140018b98:	lea    rcx,[r14+0x10]
   140018b9c:	call   0x140019be4
   140018ba1:	nop
   140018ba2:	xor    eax,eax
   140018ba4:	jmp    0x140018bab
   140018ba6:	mov    eax,0x80004005
   140018bab:	mov    rbx,QWORD PTR [rsp+0x40]
   140018bb0:	mov    rsi,QWORD PTR [rsp+0x48]
   140018bb5:	mov    rdi,QWORD PTR [rsp+0x50]
   140018bba:	mov    r14,QWORD PTR [rsp+0x58]
   140018bbf:	add    rsp,0x30
   140018bc3:	pop    r15
   140018bc5:	ret    
   140018bc6:	int3   
   140018bc7:	int3   
   140018bc8:	sub    rsp,0x288
   140018bcf:	mov    rax,QWORD PTR [rip+0x34872]        # 0x14004d448
   140018bd6:	xor    rax,rsp
   140018bd9:	mov    QWORD PTR [rsp+0x270],rax
   140018be1:	lea    rdx,[rsp+0x20]
   140018be6:	call   QWORD PTR [rip+0x2055c]        # 0x140039148
   140018bec:	cmp    rax,0xffffffffffffffff
   140018bf0:	jne    0x140018bf6
   140018bf2:	xor    eax,eax
   140018bf4:	jmp    0x140018c04
   140018bf6:	mov    rcx,rax
   140018bf9:	call   QWORD PTR [rip+0x20829]        # 0x140039428
   140018bff:	mov    eax,0x1
   140018c04:	mov    rcx,QWORD PTR [rsp+0x270]
   140018c0c:	xor    rcx,rsp
   140018c0f:	call   0x140020e50
   140018c14:	add    rsp,0x288
   140018c1b:	ret    
   140018c1c:	mov    rax,rsp
   140018c1f:	push   rbp
   140018c20:	push   rsi
   140018c21:	push   rdi
   140018c22:	push   r12
   140018c24:	push   r13
   140018c26:	push   r14
   140018c28:	push   r15
   140018c2a:	lea    rbp,[rax-0x568]
   140018c31:	sub    rsp,0x630
   140018c38:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140018c40:	mov    QWORD PTR [rax+0x10],rbx
   140018c44:	mov    rax,QWORD PTR [rip+0x347fd]        # 0x14004d448
   140018c4b:	xor    rax,rsp
   140018c4e:	mov    QWORD PTR [rbp+0x520],rax
   140018c55:	mov    rsi,r9
   140018c58:	mov    r14,r8
   140018c5b:	mov    r15,rcx
   140018c5e:	lea    rdx,[rip+0x2573b]        # 0x14003e3a0
   140018c65:	lea    rcx,[rsp+0x20]
   140018c6a:	call   0x140005714
   140018c6f:	nop
   140018c70:	xor    r13d,r13d
   140018c73:	cmp    DWORD PTR [rip+0x380fa],r13d        # 0x140050d74
   140018c7a:	jne    0x140018c8b
   140018c7c:	call   0x140004f38
   140018c81:	mov    DWORD PTR [rip+0x380e9],0x1        # 0x140050d74
   140018c8b:	mov    edi,DWORD PTR [rip+0x381db]        # 0x140050e6c
   140018c91:	or     r12,0xffffffffffffffff
   140018c95:	lea    ebx,[r12+0x3]
   140018c9a:	cmp    edi,0x3
   140018c9d:	jne    0x140018ca8
   140018c9f:	lea    rdx,[rip+0x25d32]        # 0x14003e9d8
   140018ca6:	jmp    0x140018cd3
   140018ca8:	cmp    edi,ebx
   140018caa:	jne    0x140018cb5
   140018cac:	lea    rdx,[rip+0x25d35]        # 0x14003e9e8
   140018cb3:	jmp    0x140018cd3
   140018cb5:	cmp    edi,0x5
   140018cb8:	jne    0x140018cc3
   140018cba:	lea    rdx,[rip+0x25d1f]        # 0x14003e9e0
   140018cc1:	jmp    0x140018cd3
   140018cc3:	cmp    edi,0x6
   140018cc6:	jne    0x1400194b2
   140018ccc:	lea    rdx,[rip+0x25d45]        # 0x14003ea18
   140018cd3:	mov    r8d,ebx
   140018cd6:	lea    rcx,[rsp+0x20]
   140018cdb:	call   0x140005ae0
   140018ce0:	mov    WORD PTR [rbp+0x100],r13w
   140018ce8:	xor    edx,edx
   140018cea:	mov    r8d,0x206
   140018cf0:	lea    rcx,[rbp+0x102]
   140018cf7:	call   0x1400260e0
   140018cfc:	mov    r8d,0x104
   140018d02:	lea    rdx,[rbp+0x100]
   140018d09:	xor    ecx,ecx
   140018d0b:	call   QWORD PTR [rip+0x204ff]        # 0x140039210
   140018d11:	cmp    r13w,WORD PTR [rbp+0x100]
   140018d19:	jne    0x140018d34
   140018d1b:	mov    edx,0xe1232723
   140018d20:	mov    r8d,0xee
   140018d26:	mov    rcx,QWORD PTR [r15+0x8]
   140018d2a:	call   0x14000820c
   140018d2f:	jmp    0x1400194c6
   140018d34:	mov    QWORD PTR [rsp+0x58],r13
   140018d39:	lea    r9,[rsp+0x58]
   140018d3e:	lea    r8,[rbp+0x310]
   140018d45:	mov    edx,0x104
   140018d4a:	lea    rcx,[rbp+0x100]
   140018d51:	call   QWORD PTR [rip+0x207c1]        # 0x140039518
   140018d57:	mov    rax,QWORD PTR [rsp+0x58]
   140018d5c:	test   rax,rax
   140018d5f:	je     0x140018d87
   140018d61:	mov    rcx,r12
   140018d64:	inc    rcx
   140018d67:	cmp    WORD PTR [rax+rcx*2],r13w
   140018d6c:	jne    0x140018d64
   140018d6e:	lea    rdx,[rbp+0x310]
   140018d75:	mov    rax,r12
   140018d78:	inc    rax
   140018d7b:	cmp    WORD PTR [rdx+rax*2],r13w
   140018d80:	jne    0x140018d78
   140018d82:	sub    rax,rcx
   140018d85:	jmp    0x140018d9b
   140018d87:	lea    rcx,[rbp+0x310]
   140018d8e:	mov    rax,r12
   140018d91:	inc    rax
   140018d94:	cmp    WORD PTR [rcx+rax*2],r13w
   140018d99:	jne    0x140018d91
   140018d9b:	lea    r9,[rip+0x356be]        # 0x14004e460
   140018da2:	mov    r8d,eax
   140018da5:	lea    rdx,[rbp+0x310]
   140018dac:	lea    rcx,[rsp+0x30]
   140018db1:	call   0x140005a30
   140018db6:	nop
   140018db7:	lea    r8,[rip+0x25c32]        # 0x14003e9f0
   140018dbe:	lea    rdx,[rsp+0x30]
   140018dc3:	lea    rcx,[rbp-0x60]
   140018dc7:	call   0x140019950
   140018dcc:	nop
   140018dcd:	mov    rdx,rax
   140018dd0:	mov    rcx,r14
   140018dd3:	call   0x1400057bc
   140018dd8:	nop
   140018dd9:	mov    rdx,QWORD PTR [rbp-0x60]
   140018ddd:	add    rdx,0xffffffffffffffe8
   140018de1:	mov    eax,r12d
   140018de4:	lock xadd DWORD PTR [rdx+0x10],eax
   140018de9:	add    eax,r12d
   140018dec:	test   eax,eax
   140018dee:	jg     0x140018df9
   140018df0:	mov    rcx,QWORD PTR [rdx]
   140018df3:	mov    rax,QWORD PTR [rcx]
   140018df6:	call   QWORD PTR [rax+0x8]
   140018df9:	mov    rcx,QWORD PTR [r14]
   140018dfc:	call   0x140018bc8
   140018e01:	test   eax,eax
   140018e03:	jne    0x140018e34
   140018e05:	mov    rcx,QWORD PTR [r15+0x8]
   140018e09:	lea    rax,[rip+0x25be0]        # 0x14003e9f0
   140018e10:	mov    QWORD PTR [rsp+0x70],rax
   140018e15:	mov    rax,QWORD PTR [rcx]
   140018e18:	lea    r9,[rsp+0x70]
   140018e1d:	mov    edx,0xe12305e0
   140018e22:	mov    r8d,0x1
   140018e28:	call   QWORD PTR [rax]
   140018e2a:	mov    ebx,0x80004005
   140018e2f:	jmp    0x14001948f
   140018e34:	cmp    DWORD PTR [rip+0x37f39],r13d        # 0x140050d74
   140018e3b:	jne    0x140018e51
   140018e3d:	call   0x140004f38
   140018e42:	mov    r14d,0x1
   140018e48:	mov    DWORD PTR [rip+0x37f25],r14d        # 0x140050d74
   140018e4f:	jmp    0x140018e57
   140018e51:	mov    r14d,0x1
   140018e57:	mov    ecx,DWORD PTR [rip+0x37fff]        # 0x140050e5c
   140018e5d:	shr    ecx,0x4
   140018e60:	and    ecx,0xf
   140018e63:	mov    r9d,0xa
   140018e69:	lea    r8d,[r9+0x36]
   140018e6d:	lea    rdx,[rbp+0x0]
   140018e71:	call   0x140029ea8
   140018e76:	cmp    DWORD PTR [rip+0x37ef7],r13d        # 0x140050d74
   140018e7d:	jne    0x140018e8b
   140018e7f:	call   0x140004f38
   140018e84:	mov    DWORD PTR [rip+0x37ee9],r14d        # 0x140050d74
   140018e8b:	mov    ecx,DWORD PTR [rip+0x37fcb]        # 0x140050e5c
   140018e91:	and    ecx,0xf
   140018e94:	mov    r9d,0xa
   140018e9a:	lea    r8d,[r9+0x36]
   140018e9e:	lea    rdx,[rbp+0x80]
   140018ea5:	call   0x140029ea8
   140018eaa:	lea    rcx,[rip+0x355af]        # 0x14004e460
   140018eb1:	mov    rax,QWORD PTR [rip+0x355a8]        # 0x14004e460
   140018eb8:	call   QWORD PTR [rax+0x18]
   140018ebb:	add    rax,0x18
   140018ebf:	mov    QWORD PTR [rsp+0x38],rax
   140018ec4:	lea    rdx,[rip+0x25b59]        # 0x14003ea24
   140018ecb:	lea    rcx,[rsp+0x38]
   140018ed0:	call   0x14000592c
   140018ed5:	test   al,al
   140018ed7:	jne    0x140018eeb
   140018ed9:	lea    rdx,[rip+0x25b44]        # 0x14003ea24
   140018ee0:	lea    rcx,[rsp+0x38]
   140018ee5:	call   0x140019c70
   140018eea:	nop
   140018eeb:	lea    r8,[rsp+0x20]
   140018ef0:	lea    rcx,[rbp-0x10]
   140018ef4:	call   0x140019a28
   140018ef9:	nop
   140018efa:	lea    r8,[rip+0x25b1f]        # 0x14003ea20
   140018f01:	mov    rdx,rax
   140018f04:	lea    rcx,[rbp-0x70]
   140018f08:	call   0x140019950
   140018f0d:	nop
   140018f0e:	lea    r8,[rbp+0x0]
   140018f12:	mov    rdx,rax
   140018f15:	lea    rcx,[rbp-0x30]
   140018f19:	call   0x140019950
   140018f1e:	nop
   140018f1f:	lea    r8,[rip+0x25afa]        # 0x14003ea20
   140018f26:	mov    rdx,rax
   140018f29:	lea    rcx,[rbp-0x80]
   140018f2d:	call   0x140019950
   140018f32:	nop
   140018f33:	lea    r8,[rbp+0x80]
   140018f3a:	mov    rdx,rax
   140018f3d:	lea    rcx,[rbp-0x20]
   140018f41:	call   0x140019950
   140018f46:	nop
   140018f47:	lea    r8,[rsp+0x38]
   140018f4c:	mov    rdx,rax
   140018f4f:	lea    rcx,[rsp+0x28]
   140018f54:	call   0x140019898
   140018f59:	nop
   140018f5a:	mov    rdx,QWORD PTR [rbp-0x20]
   140018f5e:	add    rdx,0xffffffffffffffe8
   140018f62:	mov    eax,r12d
   140018f65:	lock xadd DWORD PTR [rdx+0x10],eax
   140018f6a:	add    eax,r12d
   140018f6d:	test   eax,eax
   140018f6f:	jg     0x140018f7b
   140018f71:	mov    rcx,QWORD PTR [rdx]
   140018f74:	mov    rax,QWORD PTR [rcx]
   140018f77:	call   QWORD PTR [rax+0x8]
   140018f7a:	nop
   140018f7b:	mov    rdx,QWORD PTR [rbp-0x80]
   140018f7f:	add    rdx,0xffffffffffffffe8
   140018f83:	mov    eax,r12d
   140018f86:	lock xadd DWORD PTR [rdx+0x10],eax
   140018f8b:	add    eax,r12d
   140018f8e:	test   eax,eax
   140018f90:	jg     0x140018f9c
   140018f92:	mov    rcx,QWORD PTR [rdx]
   140018f95:	mov    rax,QWORD PTR [rcx]
   140018f98:	call   QWORD PTR [rax+0x8]
   140018f9b:	nop
   140018f9c:	mov    rdx,QWORD PTR [rbp-0x30]
   140018fa0:	add    rdx,0xffffffffffffffe8
   140018fa4:	mov    eax,r12d
   140018fa7:	lock xadd DWORD PTR [rdx+0x10],eax
   140018fac:	add    eax,r12d
   140018faf:	test   eax,eax
   140018fb1:	jg     0x140018fbd
   140018fb3:	mov    rcx,QWORD PTR [rdx]
   140018fb6:	mov    rax,QWORD PTR [rcx]
   140018fb9:	call   QWORD PTR [rax+0x8]
   140018fbc:	nop
   140018fbd:	mov    rdx,QWORD PTR [rbp-0x70]
   140018fc1:	add    rdx,0xffffffffffffffe8
   140018fc5:	mov    eax,r12d
   140018fc8:	lock xadd DWORD PTR [rdx+0x10],eax
   140018fcd:	add    eax,r12d
   140018fd0:	test   eax,eax
   140018fd2:	jg     0x140018fde
   140018fd4:	mov    rcx,QWORD PTR [rdx]
   140018fd7:	mov    rax,QWORD PTR [rcx]
   140018fda:	call   QWORD PTR [rax+0x8]
   140018fdd:	nop
   140018fde:	mov    rdx,QWORD PTR [rbp-0x10]
   140018fe2:	add    rdx,0xffffffffffffffe8
   140018fe6:	mov    eax,r12d
   140018fe9:	lock xadd DWORD PTR [rdx+0x10],eax
   140018fee:	add    eax,r12d
   140018ff1:	test   eax,eax
   140018ff3:	jg     0x140018fff
   140018ff5:	mov    rcx,QWORD PTR [rdx]
   140018ff8:	mov    rax,QWORD PTR [rcx]
   140018ffb:	call   QWORD PTR [rax+0x8]
   140018ffe:	nop
   140018fff:	mov    rdx,QWORD PTR [rsp+0x38]
   140019004:	add    rdx,0xffffffffffffffe8
   140019008:	mov    eax,r12d
   14001900b:	lock xadd DWORD PTR [rdx+0x10],eax
   140019010:	add    eax,r12d
   140019013:	test   eax,eax
   140019015:	jg     0x140019020
   140019017:	mov    rcx,QWORD PTR [rdx]
   14001901a:	mov    rax,QWORD PTR [rcx]
   14001901d:	call   QWORD PTR [rax+0x8]
   140019020:	lea    r8,[rsp+0x28]
   140019025:	lea    rdx,[rsp+0x30]
   14001902a:	lea    rcx,[rsp+0x60]
   14001902f:	call   0x140019898
   140019034:	nop
   140019035:	mov    rdx,rax
   140019038:	mov    rcx,rsi
   14001903b:	call   0x1400057bc
   140019040:	nop
   140019041:	mov    rdx,QWORD PTR [rsp+0x60]
   140019046:	add    rdx,0xffffffffffffffe8
   14001904a:	mov    eax,r12d
   14001904d:	lock xadd DWORD PTR [rdx+0x10],eax
   140019052:	add    eax,r12d
   140019055:	test   eax,eax
   140019057:	jg     0x140019062
   140019059:	mov    rcx,QWORD PTR [rdx]
   14001905c:	mov    rax,QWORD PTR [rcx]
   14001905f:	call   QWORD PTR [rax+0x8]
   140019062:	mov    rcx,QWORD PTR [rsi]
   140019065:	call   0x140018bc8
   14001906a:	test   eax,eax
   14001906c:	jne    0x14001946a
   140019072:	lea    rcx,[rip+0x353e7]        # 0x14004e460
   140019079:	mov    rax,QWORD PTR [rip+0x353e0]        # 0x14004e460
   140019080:	call   QWORD PTR [rax+0x18]
   140019083:	add    rax,0x18
   140019087:	mov    QWORD PTR [rsp+0x50],rax
   14001908c:	lea    rdx,[rip+0x25991]        # 0x14003ea24
   140019093:	lea    rcx,[rsp+0x50]
   140019098:	call   0x14000592c
   14001909d:	test   al,al
   14001909f:	jne    0x1400190b3
   1400190a1:	lea    rdx,[rip+0x2597c]        # 0x14003ea24
   1400190a8:	lea    rcx,[rsp+0x50]
   1400190ad:	call   0x140019c70
   1400190b2:	nop
   1400190b3:	lea    r8,[rsp+0x20]
   1400190b8:	lea    rcx,[rbp-0x40]
   1400190bc:	call   0x140019a28
   1400190c1:	nop
   1400190c2:	lea    r8,[rip+0x25957]        # 0x14003ea20
   1400190c9:	mov    rdx,rax
   1400190cc:	lea    rcx,[rbp-0x28]
   1400190d0:	call   0x140019950
   1400190d5:	nop
   1400190d6:	lea    r8,[rbp+0x0]
   1400190da:	mov    rdx,rax
   1400190dd:	lea    rcx,[rbp-0x50]
   1400190e1:	call   0x140019950
   1400190e6:	nop
   1400190e7:	lea    r8,[rsp+0x50]
   1400190ec:	mov    rdx,rax
   1400190ef:	lea    rcx,[rbp-0x18]
   1400190f3:	call   0x140019898
   1400190f8:	nop
   1400190f9:	mov    rdx,rax
   1400190fc:	lea    rcx,[rsp+0x28]
   140019101:	call   0x1400057bc
   140019106:	nop
   140019107:	mov    rdx,QWORD PTR [rbp-0x18]
   14001910b:	add    rdx,0xffffffffffffffe8
   14001910f:	mov    eax,r12d
   140019112:	lock xadd DWORD PTR [rdx+0x10],eax
   140019117:	add    eax,r12d
   14001911a:	test   eax,eax
   14001911c:	jg     0x140019128
   14001911e:	mov    rcx,QWORD PTR [rdx]
   140019121:	mov    rax,QWORD PTR [rcx]
   140019124:	call   QWORD PTR [rax+0x8]
   140019127:	nop
   140019128:	mov    rdx,QWORD PTR [rbp-0x50]
   14001912c:	add    rdx,0xffffffffffffffe8
   140019130:	mov    eax,r12d
   140019133:	lock xadd DWORD PTR [rdx+0x10],eax
   140019138:	add    eax,r12d
   14001913b:	test   eax,eax
   14001913d:	jg     0x140019149
   14001913f:	mov    rcx,QWORD PTR [rdx]
   140019142:	mov    rax,QWORD PTR [rcx]
   140019145:	call   QWORD PTR [rax+0x8]
   140019148:	nop
   140019149:	mov    rdx,QWORD PTR [rbp-0x28]
   14001914d:	add    rdx,0xffffffffffffffe8
   140019151:	mov    eax,r12d
   140019154:	lock xadd DWORD PTR [rdx+0x10],eax
   140019159:	add    eax,r12d
   14001915c:	test   eax,eax
   14001915e:	jg     0x14001916a
   140019160:	mov    rcx,QWORD PTR [rdx]
   140019163:	mov    rax,QWORD PTR [rcx]
   140019166:	call   QWORD PTR [rax+0x8]
   140019169:	nop
   14001916a:	mov    rdx,QWORD PTR [rbp-0x40]
   14001916e:	add    rdx,0xffffffffffffffe8
   140019172:	mov    eax,r12d
   140019175:	lock xadd DWORD PTR [rdx+0x10],eax
   14001917a:	add    eax,r12d
   14001917d:	test   eax,eax
   14001917f:	jg     0x14001918b
   140019181:	mov    rcx,QWORD PTR [rdx]
   140019184:	mov    rax,QWORD PTR [rcx]
   140019187:	call   QWORD PTR [rax+0x8]
   14001918a:	nop
   14001918b:	mov    rdx,QWORD PTR [rsp+0x50]
   140019190:	add    rdx,0xffffffffffffffe8
   140019194:	mov    eax,r12d
   140019197:	lock xadd DWORD PTR [rdx+0x10],eax
   14001919c:	add    eax,r12d
   14001919f:	test   eax,eax
   1400191a1:	jg     0x1400191ac
   1400191a3:	mov    rcx,QWORD PTR [rdx]
   1400191a6:	mov    rax,QWORD PTR [rcx]
   1400191a9:	call   QWORD PTR [rax+0x8]
   1400191ac:	lea    r8,[rsp+0x28]
   1400191b1:	lea    rdx,[rsp+0x30]
   1400191b6:	lea    rcx,[rsp+0x68]
   1400191bb:	call   0x140019898
   1400191c0:	nop
   1400191c1:	mov    rdx,rax
   1400191c4:	mov    rcx,rsi
   1400191c7:	call   0x1400057bc
   1400191cc:	nop
   1400191cd:	mov    rdx,QWORD PTR [rsp+0x68]
   1400191d2:	add    rdx,0xffffffffffffffe8
   1400191d6:	mov    eax,r12d
   1400191d9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400191de:	add    eax,r12d
   1400191e1:	test   eax,eax
   1400191e3:	jg     0x1400191ee
   1400191e5:	mov    rcx,QWORD PTR [rdx]
   1400191e8:	mov    rax,QWORD PTR [rcx]
   1400191eb:	call   QWORD PTR [rax+0x8]
   1400191ee:	mov    rcx,QWORD PTR [rsi]
   1400191f1:	call   0x140018bc8
   1400191f6:	test   eax,eax
   1400191f8:	jne    0x14001946a
   1400191fe:	cmp    edi,ebx
   140019200:	jne    0x140019326
   140019206:	cmp    DWORD PTR [rip+0x37b67],r13d        # 0x140050d74
   14001920d:	jne    0x14001921b
   14001920f:	call   0x140004f38
   140019214:	mov    DWORD PTR [rip+0x37b59],r14d        # 0x140050d74
   14001921b:	cmp    DWORD PTR [rip+0x37b6a],r13d        # 0x140050d8c
   140019222:	jne    0x140019246
   140019224:	mov    eax,DWORD PTR [rip+0x37c46]        # 0x140050e70
   14001922a:	mov    DWORD PTR [rip+0x37b60],eax        # 0x140050d90
   140019230:	test   eax,eax
   140019232:	jne    0x14001923f
   140019234:	call   0x1400052a8
   140019239:	mov    DWORD PTR [rip+0x37b5d],eax        # 0x140050d9c
   14001923f:	mov    DWORD PTR [rip+0x37b46],r14d        # 0x140050d8c
   140019246:	cmp    DWORD PTR [rip+0x37b53],r13d        # 0x140050da0
   14001924d:	jne    0x14001925b
   14001924f:	call   0x140005180
   140019254:	mov    DWORD PTR [rip+0x37b45],r14d        # 0x140050da0
   14001925b:	cmp    DWORD PTR [rip+0x37b1e],r13d        # 0x140050d80
   140019262:	je     0x140019326
   140019268:	lea    rcx,[rip+0x351f1]        # 0x14004e460
   14001926f:	mov    rax,QWORD PTR [rip+0x351ea]        # 0x14004e460
   140019276:	call   QWORD PTR [rax+0x18]
   140019279:	add    rax,0x18
   14001927d:	mov    QWORD PTR [rsp+0x40],rax
   140019282:	lea    rdx,[rip+0x257a7]        # 0x14003ea30
   140019289:	lea    rcx,[rsp+0x40]
   14001928e:	call   0x14000592c
   140019293:	test   al,al
   140019295:	jne    0x1400192a9
   140019297:	lea    rdx,[rip+0x25792]        # 0x14003ea30
   14001929e:	lea    rcx,[rsp+0x40]
   1400192a3:	call   0x140019c70
   1400192a8:	nop
   1400192a9:	lea    r8,[rsp+0x20]
   1400192ae:	lea    rcx,[rbp-0x78]
   1400192b2:	call   0x140019a28
   1400192b7:	nop
   1400192b8:	lea    r8,[rsp+0x40]
   1400192bd:	mov    rdx,rax
   1400192c0:	lea    rcx,[rsp+0x78]
   1400192c5:	call   0x140019898
   1400192ca:	nop
   1400192cb:	mov    rdx,rax
   1400192ce:	lea    rcx,[rsp+0x28]
   1400192d3:	call   0x1400057bc
   1400192d8:	nop
   1400192d9:	mov    rdx,QWORD PTR [rsp+0x78]
   1400192de:	add    rdx,0xffffffffffffffe8
   1400192e2:	mov    eax,r12d
   1400192e5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400192ea:	add    eax,r12d
   1400192ed:	test   eax,eax
   1400192ef:	jg     0x1400192fb
   1400192f1:	mov    rcx,QWORD PTR [rdx]
   1400192f4:	mov    rax,QWORD PTR [rcx]
   1400192f7:	call   QWORD PTR [rax+0x8]
   1400192fa:	nop
   1400192fb:	mov    rdx,QWORD PTR [rbp-0x78]
   1400192ff:	add    rdx,0xffffffffffffffe8
   140019303:	mov    eax,r12d
   140019306:	lock xadd DWORD PTR [rdx+0x10],eax
   14001930b:	add    eax,r12d
   14001930e:	test   eax,eax
   140019310:	jg     0x14001931c
   140019312:	mov    rcx,QWORD PTR [rdx]
   140019315:	mov    rax,QWORD PTR [rcx]
   140019318:	call   QWORD PTR [rax+0x8]
   14001931b:	nop
   14001931c:	mov    rdx,QWORD PTR [rsp+0x40]
   140019321:	jmp    0x1400193dd
   140019326:	lea    rcx,[rip+0x35133]        # 0x14004e460
   14001932d:	mov    rax,QWORD PTR [rip+0x3512c]        # 0x14004e460
   140019334:	call   QWORD PTR [rax+0x18]
   140019337:	add    rax,0x18
   14001933b:	mov    QWORD PTR [rsp+0x48],rax
   140019340:	lea    rdx,[rip+0x256dd]        # 0x14003ea24
   140019347:	lea    rcx,[rsp+0x48]
   14001934c:	call   0x14000592c
   140019351:	test   al,al
   140019353:	jne    0x140019367
   140019355:	lea    rdx,[rip+0x256c8]        # 0x14003ea24
   14001935c:	lea    rcx,[rsp+0x48]
   140019361:	call   0x140019c70
   140019366:	nop
   140019367:	lea    r8,[rsp+0x20]
   14001936c:	lea    rcx,[rbp-0x58]
   140019370:	call   0x140019a28
   140019375:	nop
   140019376:	lea    r8,[rsp+0x48]
   14001937b:	mov    rdx,rax
   14001937e:	lea    rcx,[rbp-0x68]
   140019382:	call   0x140019898
   140019387:	nop
   140019388:	mov    rdx,rax
   14001938b:	lea    rcx,[rsp+0x28]
   140019390:	call   0x1400057bc
   140019395:	nop
   140019396:	mov    rdx,QWORD PTR [rbp-0x68]
   14001939a:	add    rdx,0xffffffffffffffe8
   14001939e:	mov    eax,r12d
   1400193a1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400193a6:	add    eax,r12d
   1400193a9:	test   eax,eax
   1400193ab:	jg     0x1400193b7
   1400193ad:	mov    rcx,QWORD PTR [rdx]
   1400193b0:	mov    rax,QWORD PTR [rcx]
   1400193b3:	call   QWORD PTR [rax+0x8]
   1400193b6:	nop
   1400193b7:	mov    rdx,QWORD PTR [rbp-0x58]
   1400193bb:	add    rdx,0xffffffffffffffe8
   1400193bf:	mov    eax,r12d
   1400193c2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400193c7:	add    eax,r12d
   1400193ca:	test   eax,eax
   1400193cc:	jg     0x1400193d8
   1400193ce:	mov    rcx,QWORD PTR [rdx]
   1400193d1:	mov    rax,QWORD PTR [rcx]
   1400193d4:	call   QWORD PTR [rax+0x8]
   1400193d7:	nop
   1400193d8:	mov    rdx,QWORD PTR [rsp+0x48]
   1400193dd:	add    rdx,0xffffffffffffffe8
   1400193e1:	mov    eax,r12d
   1400193e4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400193e9:	add    eax,r12d
   1400193ec:	test   eax,eax
   1400193ee:	jg     0x1400193f9
   1400193f0:	mov    rcx,QWORD PTR [rdx]
   1400193f3:	mov    rax,QWORD PTR [rcx]
   1400193f6:	call   QWORD PTR [rax+0x8]
   1400193f9:	lea    r8,[rsp+0x28]
   1400193fe:	lea    rdx,[rsp+0x30]
   140019403:	lea    rcx,[rbp-0x48]
   140019407:	call   0x140019898
   14001940c:	nop
   14001940d:	mov    rdx,rax
   140019410:	mov    rcx,rsi
   140019413:	call   0x1400057bc
   140019418:	nop
   140019419:	mov    rdx,QWORD PTR [rbp-0x48]
   14001941d:	add    rdx,0xffffffffffffffe8
   140019421:	mov    eax,r12d
   140019424:	lock xadd DWORD PTR [rdx+0x10],eax
   140019429:	add    eax,r12d
   14001942c:	test   eax,eax
   14001942e:	jg     0x140019439
   140019430:	mov    rcx,QWORD PTR [rdx]
   140019433:	mov    rax,QWORD PTR [rcx]
   140019436:	call   QWORD PTR [rax+0x8]
   140019439:	mov    rcx,QWORD PTR [rsi]
   14001943c:	call   0x140018bc8
   140019441:	test   eax,eax
   140019443:	jne    0x14001946a
   140019445:	mov    rcx,QWORD PTR [r15+0x8]
   140019449:	mov    rax,QWORD PTR [rsp+0x28]
   14001944e:	mov    QWORD PTR [rbp-0x38],rax
   140019452:	mov    rax,QWORD PTR [rcx]
   140019455:	lea    r9,[rbp-0x38]
   140019459:	mov    r8d,r14d
   14001945c:	mov    edx,0xe12305e0
   140019461:	call   QWORD PTR [rax]
   140019463:	mov    ebx,0x80004005
   140019468:	jmp    0x14001946d
   14001946a:	mov    ebx,r13d
   14001946d:	mov    rdx,QWORD PTR [rsp+0x28]
   140019472:	add    rdx,0xffffffffffffffe8
   140019476:	mov    eax,r12d
   140019479:	lock xadd DWORD PTR [rdx+0x10],eax
   14001947e:	add    eax,r12d
   140019481:	test   eax,eax
   140019483:	jg     0x14001948f
   140019485:	mov    rcx,QWORD PTR [rdx]
   140019488:	mov    rax,QWORD PTR [rcx]
   14001948b:	call   QWORD PTR [rax+0x8]
   14001948e:	nop
   14001948f:	mov    rdx,QWORD PTR [rsp+0x30]
   140019494:	add    rdx,0xffffffffffffffe8
   140019498:	mov    eax,r12d
   14001949b:	lock xadd DWORD PTR [rdx+0x10],eax
   1400194a0:	add    eax,r12d
   1400194a3:	test   eax,eax
   1400194a5:	jg     0x1400194cb
   1400194a7:	mov    rcx,QWORD PTR [rdx]
   1400194aa:	mov    rax,QWORD PTR [rcx]
   1400194ad:	call   QWORD PTR [rax+0x8]
   1400194b0:	jmp    0x1400194cb
   1400194b2:	mov    rcx,QWORD PTR [r15+0x8]
   1400194b6:	mov    rax,QWORD PTR [rcx]
   1400194b9:	xor    r9d,r9d
   1400194bc:	xor    r8d,r8d
   1400194bf:	mov    edx,0xe12305e7
   1400194c4:	call   QWORD PTR [rax]
   1400194c6:	mov    ebx,0x80004005
   1400194cb:	mov    rdx,QWORD PTR [rsp+0x20]
   1400194d0:	add    rdx,0xffffffffffffffe8
   1400194d4:	mov    ecx,r12d
   1400194d7:	lock xadd DWORD PTR [rdx+0x10],ecx
   1400194dc:	add    ecx,r12d
   1400194df:	test   ecx,ecx
   1400194e1:	jg     0x1400194ed
   1400194e3:	mov    rcx,QWORD PTR [rdx]
   1400194e6:	mov    r8,QWORD PTR [rcx]
   1400194e9:	call   QWORD PTR [r8+0x8]
   1400194ed:	mov    eax,ebx
   1400194ef:	mov    rcx,QWORD PTR [rbp+0x520]
   1400194f6:	xor    rcx,rsp
   1400194f9:	call   0x140020e50
   1400194fe:	mov    rbx,QWORD PTR [rsp+0x678]
   140019506:	add    rsp,0x630
   14001950d:	pop    r15
   14001950f:	pop    r14
   140019511:	pop    r13
   140019513:	pop    r12
   140019515:	pop    rdi
   140019516:	pop    rsi
   140019517:	pop    rbp
   140019518:	ret    
   140019519:	int3   
   14001951a:	int3   
   14001951b:	int3   
   14001951c:	mov    rax,rsp
   14001951f:	push   rdi
   140019520:	push   r14
   140019522:	push   r15
   140019524:	sub    rsp,0x40
   140019528:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140019530:	mov    QWORD PTR [rax+0x8],rbx
   140019534:	mov    QWORD PTR [rax+0x18],rbp
   140019538:	mov    r15,r8
   14001953b:	mov    rdi,rdx
   14001953e:	mov    r14,rcx
   140019541:	cmp    DWORD PTR [rdx+0x24],0x0
   140019545:	je     0x1400196b7
   14001954b:	cmp    DWORD PTR [rdx+0x28],0x0
   14001954f:	jne    0x1400196b7
   140019555:	mov    rdx,QWORD PTR [rdx]
   140019558:	lea    rcx,[rax+0x10]
   14001955c:	call   0x140005714
   140019561:	nop
   140019562:	lea    rcx,[rsp+0x68]
   140019567:	call   0x140019814
   14001956c:	xor    ecx,ecx
   14001956e:	lea    ebx,[rcx+0x1]
   140019571:	cmp    DWORD PTR [r14+0x20],ecx
   140019575:	jle    0x1400195d0
   140019577:	xor    ebp,ebp
   140019579:	mov    rax,QWORD PTR [rsp+0x68]
   14001957e:	test   rax,rax
   140019581:	setne  bpl
   140019585:	mov    r11,QWORD PTR [r14+0x10]
   140019589:	test   ebp,ebp
   14001958b:	je     0x1400195c5
   14001958d:	mov    rdx,QWORD PTR [r11]
   140019590:	mov    r10,rax
   140019593:	sub    r10,rdx
   140019596:	movzx  r8d,WORD PTR [rdx]
   14001959a:	cmp    r8w,WORD PTR [rdx+r10*1]
   14001959f:	jne    0x1400195af
   1400195a1:	add    rdx,0x2
   1400195a5:	test   r8w,r8w
   1400195a9:	jne    0x140019596
   1400195ab:	xor    edx,edx
   1400195ad:	jmp    0x1400195b3
   1400195af:	sbb    edx,edx
   1400195b1:	or     edx,ebx
   1400195b3:	test   edx,edx
   1400195b5:	je     0x1400195d3
   1400195b7:	add    ecx,ebx
   1400195b9:	add    r11,0x8
   1400195bd:	cmp    ecx,DWORD PTR [r14+0x20]
   1400195c1:	jl     0x140019589
   1400195c3:	jmp    0x1400195d0
   1400195c5:	mov    ecx,0x80004005
   1400195ca:	call   0x140003e64
   1400195cf:	int3   
   1400195d0:	or     ecx,0xffffffff
   1400195d3:	cmp    ecx,0xffffffff
   1400195d6:	jne    0x1400195ee
   1400195d8:	mov    r8,rdi
   1400195db:	lea    rdx,[rsp+0x68]
   1400195e0:	lea    rcx,[r14+0x10]
   1400195e4:	call   0x140019ae4
   1400195e9:	jmp    0x140019685
   1400195ee:	test   ecx,ecx
   1400195f0:	js     0x1400196a3
   1400195f6:	cmp    ecx,DWORD PTR [r14+0x20]
   1400195fa:	jge    0x1400196a3
   140019600:	movsxd rax,ecx
   140019603:	lea    rcx,[rax+rax*8]
   140019607:	mov    rdx,QWORD PTR [r14+0x18]
   14001960b:	cmp    DWORD PTR [rdx+rcx*8+0x24],0x0
   140019610:	je     0x14001963f
   140019612:	mov    rdx,QWORD PTR [r15]
   140019615:	mov    rax,QWORD PTR [rdi]
   140019618:	mov    rcx,QWORD PTR [r14+0x8]
   14001961c:	mov    QWORD PTR [rsp+0x28],rax
   140019621:	mov    QWORD PTR [rsp+0x30],rdx
   140019626:	mov    rax,QWORD PTR [rcx]
   140019629:	lea    r9,[rsp+0x28]
   14001962e:	mov    edx,0xa1230930
   140019633:	mov    r8d,0x2
   140019639:	call   QWORD PTR [rax]
   14001963b:	xor    ebx,ebx
   14001963d:	jmp    0x140019685
   14001963f:	cmp    DWORD PTR [rdx+rcx*8+0x20],0x0
   140019644:	jne    0x14001964d
   140019646:	mov    eax,DWORD PTR [rdi+0x20]
   140019649:	mov    DWORD PTR [rdx+rcx*8+0x20],eax
   14001964d:	cmp    QWORD PTR [rdx+rcx*8+0x10],0x0
   140019653:	jne    0x14001966c
   140019655:	mov    rax,QWORD PTR [rdi+0x10]
   140019659:	mov    QWORD PTR [rdx+rcx*8+0x10],rax
   14001965e:	test   rax,rax
   140019661:	jne    0x14001966c
   140019663:	mov    rax,QWORD PTR [rdx+rcx*8]
   140019667:	mov    QWORD PTR [rdx+rcx*8+0x10],rax
   14001966c:	cmp    QWORD PTR [rdx+rcx*8+0x18],0x0
   140019672:	jne    0x14001967d
   140019674:	mov    rax,QWORD PTR [rdi+0x18]
   140019678:	mov    QWORD PTR [rdx+rcx*8+0x18],rax
   14001967d:	mov    DWORD PTR [rdx+rcx*8+0x24],ebx
   140019681:	mov    DWORD PTR [rdx+rcx*8+0x28],ebx
   140019685:	mov    rdx,QWORD PTR [rsp+0x68]
   14001968a:	add    rdx,0xffffffffffffffe8
   14001968e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140019693:	jg     0x14001969f
   140019695:	mov    rcx,QWORD PTR [rdx]
   140019698:	mov    r8,QWORD PTR [rcx]
   14001969b:	call   QWORD PTR [r8+0x8]
   14001969f:	mov    eax,ebx
   1400196a1:	jmp    0x1400196b9
   1400196a3:	xor    r9d,r9d
   1400196a6:	xor    r8d,r8d
   1400196a9:	mov    edx,ebx
   1400196ab:	mov    ecx,0xc000008c
   1400196b0:	call   QWORD PTR [rip+0x1fc12]        # 0x1400392c8
   1400196b6:	nop
   1400196b7:	xor    eax,eax
   1400196b9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400196be:	mov    rbp,QWORD PTR [rsp+0x70]
   1400196c3:	add    rsp,0x40
   1400196c7:	pop    r15
   1400196c9:	pop    r14
   1400196cb:	pop    rdi
   1400196cc:	ret    
   1400196cd:	int3   
   1400196ce:	int3   
   1400196cf:	int3   
   1400196d0:	mov    eax,DWORD PTR [rcx+0x20]
   1400196d3:	ret    
   1400196d4:	sub    rsp,0x28
   1400196d8:	mov    r8,rcx
   1400196db:	cmp    edx,DWORD PTR [rcx+0x20]
   1400196de:	jb     0x1400196e7
   1400196e0:	xor    eax,eax
   1400196e2:	add    rsp,0x28
   1400196e6:	ret    
   1400196e7:	test   edx,edx
   1400196e9:	js     0x140019701
   1400196eb:	cmp    edx,DWORD PTR [rcx+0x20]
   1400196ee:	jge    0x140019701
   1400196f0:	movsxd rax,edx
   1400196f3:	lea    rcx,[rax+rax*8]
   1400196f7:	mov    rax,QWORD PTR [r8+0x18]
   1400196fb:	lea    rax,[rax+rcx*8]
   1400196ff:	jmp    0x1400196e2
   140019701:	xor    r9d,r9d
   140019704:	xor    r8d,r8d
   140019707:	mov    ecx,0xc000008c
   14001970c:	lea    edx,[r9+0x1]
   140019710:	call   QWORD PTR [rip+0x1fbb2]        # 0x1400392c8
   140019716:	int3   
   140019717:	int3   
   140019718:	rex push rdi
   14001971a:	sub    rsp,0x30
   14001971e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019727:	mov    QWORD PTR [rsp+0x48],rbx
   14001972c:	mov    rdi,rcx
   14001972f:	lea    rcx,[rsp+0x40]
   140019734:	call   0x140005714
   140019739:	nop
   14001973a:	lea    rcx,[rsp+0x40]
   14001973f:	call   0x140019814
   140019744:	xor    edx,edx
   140019746:	mov    r11d,DWORD PTR [rdi+0x20]
   14001974a:	test   r11d,r11d
   14001974d:	jle    0x1400197a6
   14001974f:	mov    rbx,QWORD PTR [rax]
   140019752:	xor    r10d,r10d
   140019755:	test   rbx,rbx
   140019758:	setne  r10b
   14001975c:	mov    r8,QWORD PTR [rdi+0x10]
   140019760:	test   r10d,r10d
   140019763:	je     0x14001979b
   140019765:	mov    rax,QWORD PTR [r8]
   140019768:	mov    r9,rbx
   14001976b:	sub    r9,rax
   14001976e:	movzx  ecx,WORD PTR [rax]
   140019771:	cmp    cx,WORD PTR [rax+r9*1]
   140019776:	jne    0x140019785
   140019778:	add    rax,0x2
   14001977c:	test   cx,cx
   14001977f:	jne    0x14001976e
   140019781:	xor    eax,eax
   140019783:	jmp    0x14001978a
   140019785:	sbb    eax,eax
   140019787:	or     eax,0x1
   14001978a:	test   eax,eax
   14001978c:	je     0x1400197a9
   14001978e:	inc    edx
   140019790:	add    r8,0x8
   140019794:	cmp    edx,r11d
   140019797:	jl     0x140019760
   140019799:	jmp    0x1400197a6
   14001979b:	mov    ecx,0x80004005
   1400197a0:	call   0x140003e64
   1400197a5:	int3   
   1400197a6:	or     edx,0xffffffff
   1400197a9:	cmp    edx,0xffffffff
   1400197ac:	je     0x1400197ea
   1400197ae:	test   edx,edx
   1400197b0:	js     0x1400197d4
   1400197b2:	cmp    edx,r11d
   1400197b5:	jge    0x1400197d4
   1400197b7:	movsxd rax,edx
   1400197ba:	lea    rcx,[rax+rax*8]
   1400197be:	mov    rax,QWORD PTR [rdi+0x18]
   1400197c2:	lea    rbx,[rax+rcx*8]
   1400197c6:	cmp    DWORD PTR [rbx+0x24],0x0
   1400197ca:	je     0x1400197ec
   1400197cc:	cmp    DWORD PTR [rbx+0x28],0x0
   1400197d0:	je     0x1400197ea
   1400197d2:	jmp    0x1400197ec
   1400197d4:	xor    r9d,r9d
   1400197d7:	xor    r8d,r8d
   1400197da:	lea    edx,[r9+0x1]
   1400197de:	mov    ecx,0xc000008c
   1400197e3:	call   QWORD PTR [rip+0x1fadf]        # 0x1400392c8
   1400197e9:	int3   
   1400197ea:	xor    ebx,ebx
   1400197ec:	mov    rdx,QWORD PTR [rsp+0x40]
   1400197f1:	add    rdx,0xffffffffffffffe8
   1400197f5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400197fa:	jg     0x140019806
   1400197fc:	mov    rcx,QWORD PTR [rdx]
   1400197ff:	mov    r8,QWORD PTR [rcx]
   140019802:	call   QWORD PTR [r8+0x8]
   140019806:	mov    rax,rbx
   140019809:	mov    rbx,QWORD PTR [rsp+0x48]
   14001980e:	add    rsp,0x30
   140019812:	pop    rdi
   140019813:	ret    
   140019814:	mov    QWORD PTR [rsp+0x8],rbx
   140019819:	mov    QWORD PTR [rsp+0x10],rsi
   14001981e:	push   rdi
   14001981f:	sub    rsp,0x20
   140019823:	mov    rax,QWORD PTR [rcx]
   140019826:	xor    esi,esi
   140019828:	mov    rdi,rcx
   14001982b:	movsxd rbx,DWORD PTR [rax-0x10]
   14001982f:	test   ebx,ebx
   140019831:	js     0x14001987f
   140019833:	lea    ecx,[rsi+0x1]
   140019836:	sub    ecx,DWORD PTR [rax-0x8]
   140019839:	mov    eax,DWORD PTR [rax-0xc]
   14001983c:	sub    eax,ebx
   14001983e:	or     ecx,eax
   140019840:	jge    0x14001984c
   140019842:	mov    edx,ebx
   140019844:	mov    rcx,rdi
   140019847:	call   0x140005d68
   14001984c:	mov    rcx,QWORD PTR [rdi]
   14001984f:	lea    eax,[rbx+0x1]
   140019852:	movsxd rdx,eax
   140019855:	call   0x14003024c
   14001985a:	mov    rax,QWORD PTR [rdi]
   14001985d:	cmp    ebx,DWORD PTR [rax-0xc]
   140019860:	jg     0x14001988a
   140019862:	mov    DWORD PTR [rax-0x10],ebx
   140019865:	mov    rax,QWORD PTR [rdi]
   140019868:	mov    WORD PTR [rax+rbx*2],si
   14001986c:	mov    rbx,QWORD PTR [rsp+0x30]
   140019871:	mov    rsi,QWORD PTR [rsp+0x38]
   140019876:	mov    rax,rdi
   140019879:	add    rsp,0x20
   14001987d:	pop    rdi
   14001987e:	ret    
   14001987f:	mov    ecx,0x80070057
   140019884:	call   0x140003e64
   140019889:	int3   
   14001988a:	mov    ecx,0x80070057
   14001988f:	call   0x140003e64
   140019894:	int3   
   140019895:	int3   
   140019896:	int3   
   140019897:	int3   
   140019898:	mov    rax,rsp
   14001989b:	mov    QWORD PTR [rax+0x8],rcx
   14001989f:	push   rdi
   1400198a0:	sub    rsp,0x40
   1400198a4:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   1400198ac:	mov    QWORD PTR [rax+0x10],rbx
   1400198b0:	mov    QWORD PTR [rax+0x18],rsi
   1400198b4:	mov    rsi,r8
   1400198b7:	mov    rdi,rdx
   1400198ba:	mov    rbx,rcx
   1400198bd:	and    DWORD PTR [rax-0x18],0x0
   1400198c1:	mov    rax,QWORD PTR [rdx]
   1400198c4:	mov    rcx,QWORD PTR [rax-0x18]
   1400198c8:	test   rcx,rcx
   1400198cb:	je     0x1400198d8
   1400198cd:	mov    rax,QWORD PTR [rcx]
   1400198d0:	call   QWORD PTR [rax+0x20]
   1400198d3:	mov    rdx,rax
   1400198d6:	jmp    0x1400198da
   1400198d8:	xor    edx,edx
   1400198da:	test   rdx,rdx
   1400198dd:	jne    0x1400198f3
   1400198df:	lea    rcx,[rip+0x34b7a]        # 0x14004e460
   1400198e6:	mov    rax,QWORD PTR [rip+0x34b73]        # 0x14004e460
   1400198ed:	call   QWORD PTR [rax+0x20]
   1400198f0:	mov    rdx,rax
   1400198f3:	xor    ecx,ecx
   1400198f5:	test   rdx,rdx
   1400198f8:	setne  cl
   1400198fb:	test   ecx,ecx
   1400198fd:	jne    0x14001990a
   1400198ff:	mov    ecx,0x80004005
   140019904:	call   0x140003e64
   140019909:	int3   
   14001990a:	mov    rax,QWORD PTR [rdx]
   14001990d:	mov    rcx,rdx
   140019910:	call   QWORD PTR [rax+0x18]
   140019913:	add    rax,0x18
   140019917:	mov    QWORD PTR [rbx],rax
   14001991a:	mov    DWORD PTR [rsp+0x30],0x1
   140019922:	mov    r9,QWORD PTR [rsi]
   140019925:	mov    rdx,QWORD PTR [rdi]
   140019928:	mov    eax,DWORD PTR [r9-0x10]
   14001992c:	mov    DWORD PTR [rsp+0x20],eax
   140019930:	mov    r8d,DWORD PTR [rdx-0x10]
   140019934:	mov    rcx,rbx
   140019937:	call   0x140019d8c
   14001993c:	mov    rax,rbx
   14001993f:	mov    rbx,QWORD PTR [rsp+0x58]
   140019944:	mov    rsi,QWORD PTR [rsp+0x60]
   140019949:	add    rsp,0x40
   14001994d:	pop    rdi
   14001994e:	ret    
   14001994f:	int3   
   140019950:	mov    rax,rsp
   140019953:	mov    QWORD PTR [rax+0x8],rcx
   140019957:	push   r14
   140019959:	sub    rsp,0x40
   14001995d:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140019965:	mov    QWORD PTR [rax+0x10],rbx
   140019969:	mov    QWORD PTR [rax+0x18],rsi
   14001996d:	mov    QWORD PTR [rax+0x20],rdi
   140019971:	mov    rsi,r8
   140019974:	mov    r14,rdx
   140019977:	mov    rdi,rcx
   14001997a:	xor    ebx,ebx
   14001997c:	mov    DWORD PTR [rax-0x18],ebx
   14001997f:	mov    rax,QWORD PTR [rdx]
   140019982:	mov    rcx,QWORD PTR [rax-0x18]
   140019986:	test   rcx,rcx
   140019989:	je     0x140019996
   14001998b:	mov    rax,QWORD PTR [rcx]
   14001998e:	call   QWORD PTR [rax+0x20]
   140019991:	mov    rdx,rax
   140019994:	jmp    0x140019999
   140019996:	mov    rdx,rbx
   140019999:	test   rdx,rdx
   14001999c:	jne    0x1400199b2
   14001999e:	lea    rcx,[rip+0x34abb]        # 0x14004e460
   1400199a5:	mov    rax,QWORD PTR [rip+0x34ab4]        # 0x14004e460
   1400199ac:	call   QWORD PTR [rax+0x20]
   1400199af:	mov    rdx,rax
   1400199b2:	mov    ecx,ebx
   1400199b4:	test   rdx,rdx
   1400199b7:	setne  cl
   1400199ba:	test   ecx,ecx
   1400199bc:	jne    0x1400199c9
   1400199be:	mov    ecx,0x80004005
   1400199c3:	call   0x140003e64
   1400199c8:	int3   
   1400199c9:	mov    rax,QWORD PTR [rdx]
   1400199cc:	mov    rcx,rdx
   1400199cf:	call   QWORD PTR [rax+0x18]
   1400199d2:	add    rax,0x18
   1400199d6:	mov    QWORD PTR [rdi],rax
   1400199d9:	mov    DWORD PTR [rsp+0x30],0x1
   1400199e1:	test   rsi,rsi
   1400199e4:	je     0x1400199f5
   1400199e6:	or     rax,0xffffffffffffffff
   1400199ea:	inc    rax
   1400199ed:	cmp    WORD PTR [rsi+rax*2],bx
   1400199f1:	jne    0x1400199ea
   1400199f3:	mov    ebx,eax
   1400199f5:	mov    rdx,QWORD PTR [r14]
   1400199f8:	mov    DWORD PTR [rsp+0x20],ebx
   1400199fc:	mov    r9,rsi
   1400199ff:	mov    r8d,DWORD PTR [rdx-0x10]
   140019a03:	mov    rcx,rdi
   140019a06:	call   0x140019d8c
   140019a0b:	mov    rax,rdi
   140019a0e:	mov    rbx,QWORD PTR [rsp+0x58]
   140019a13:	mov    rsi,QWORD PTR [rsp+0x60]
   140019a18:	mov    rdi,QWORD PTR [rsp+0x68]
   140019a1d:	add    rsp,0x40
   140019a21:	pop    r14
   140019a23:	ret    
   140019a24:	int3   
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	int3   
   140019a28:	mov    rax,rsp
   140019a2b:	mov    QWORD PTR [rax+0x8],rcx
   140019a2f:	push   rdi
   140019a30:	sub    rsp,0x40
   140019a34:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140019a3c:	mov    QWORD PTR [rax+0x10],rbx
   140019a40:	mov    rdi,r8
   140019a43:	mov    rbx,rcx
   140019a46:	and    DWORD PTR [rax-0x18],0x0
   140019a4a:	mov    rax,QWORD PTR [r8]
   140019a4d:	mov    rcx,QWORD PTR [rax-0x18]
   140019a51:	test   rcx,rcx
   140019a54:	je     0x140019a61
   140019a56:	mov    rax,QWORD PTR [rcx]
   140019a59:	call   QWORD PTR [rax+0x20]
   140019a5c:	mov    rdx,rax
   140019a5f:	jmp    0x140019a63
   140019a61:	xor    edx,edx
   140019a63:	test   rdx,rdx
   140019a66:	jne    0x140019a7c
   140019a68:	lea    rcx,[rip+0x349f1]        # 0x14004e460
   140019a6f:	mov    rax,QWORD PTR [rip+0x349ea]        # 0x14004e460
   140019a76:	call   QWORD PTR [rax+0x20]
   140019a79:	mov    rdx,rax
   140019a7c:	xor    ecx,ecx
   140019a7e:	test   rdx,rdx
   140019a81:	setne  cl
   140019a84:	test   ecx,ecx
   140019a86:	jne    0x140019a93
   140019a88:	mov    ecx,0x80004005
   140019a8d:	call   0x140003e64
   140019a92:	int3   
   140019a93:	mov    rax,QWORD PTR [rdx]
   140019a96:	mov    rcx,rdx
   140019a99:	call   QWORD PTR [rax+0x18]
   140019a9c:	add    rax,0x18
   140019aa0:	mov    QWORD PTR [rbx],rax
   140019aa3:	mov    DWORD PTR [rsp+0x30],0x1
   140019aab:	mov    r9,QWORD PTR [rdi]
   140019aae:	mov    eax,DWORD PTR [r9-0x10]
   140019ab2:	mov    DWORD PTR [rsp+0x20],eax
   140019ab6:	mov    r8d,0x10
   140019abc:	lea    rdx,[rip+0x24f7d]        # 0x14003ea40
   140019ac3:	mov    rcx,rbx
   140019ac6:	call   0x140019d8c
   140019acb:	mov    rax,rbx
   140019ace:	mov    rbx,QWORD PTR [rsp+0x58]
   140019ad3:	add    rsp,0x40
   140019ad7:	pop    rdi
   140019ad8:	ret    
   140019ad9:	int3   
   140019ada:	int3   
   140019adb:	int3   
   140019adc:	jmp    0x140019be4
   140019ae1:	int3   
   140019ae2:	int3   
   140019ae3:	int3   
   140019ae4:	mov    QWORD PTR [rsp+0x8],rcx
   140019ae9:	push   rbp
   140019aea:	push   rsi
   140019aeb:	push   rdi
   140019aec:	sub    rsp,0x30
   140019af0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019af9:	mov    QWORD PTR [rsp+0x58],rbx
   140019afe:	mov    rdi,r8
   140019b01:	mov    rbp,rdx
   140019b04:	mov    rbx,rcx
   140019b07:	mov    eax,DWORD PTR [rcx+0x10]
   140019b0a:	inc    eax
   140019b0c:	movsxd rdx,eax
   140019b0f:	mov    r8d,0x8
   140019b15:	mov    rcx,QWORD PTR [rcx]
   140019b18:	call   0x140028094
   140019b1d:	test   rax,rax
   140019b20:	jne    0x140019b29
   140019b22:	xor    eax,eax
   140019b24:	jmp    0x140019bd5
   140019b29:	mov    QWORD PTR [rbx],rax
   140019b2c:	mov    eax,DWORD PTR [rbx+0x10]
   140019b2f:	inc    eax
   140019b31:	movsxd rdx,eax
   140019b34:	mov    r8d,0x48
   140019b3a:	mov    rcx,QWORD PTR [rbx+0x8]
   140019b3e:	call   0x140028094
   140019b43:	test   rax,rax
   140019b46:	je     0x140019b22
   140019b48:	mov    QWORD PTR [rbx+0x8],rax
   140019b4c:	movsxd rax,DWORD PTR [rbx+0x10]
   140019b50:	mov    DWORD PTR [rsp+0x68],eax
   140019b54:	mov    rsi,rax
   140019b57:	mov    rax,QWORD PTR [rbx]
   140019b5a:	lea    rcx,[rax+rsi*8]
   140019b5e:	mov    QWORD PTR [rsp+0x28],rcx
   140019b63:	test   rcx,rcx
   140019b66:	je     0x140019b71
   140019b68:	mov    rdx,rbp
   140019b6b:	call   0x140005678
   140019b70:	nop
   140019b71:	lea    rcx,[rsi+rsi*8]
   140019b75:	mov    rax,QWORD PTR [rbx+0x8]
   140019b79:	lea    rdx,[rax+rcx*8]
   140019b7d:	mov    QWORD PTR [rsp+0x28],rdx
   140019b82:	test   rdx,rdx
   140019b85:	je     0x140019bcd
   140019b87:	mov    rax,QWORD PTR [rdi]
   140019b8a:	mov    QWORD PTR [rdx],rax
   140019b8d:	mov    rax,QWORD PTR [rdi+0x8]
   140019b91:	mov    QWORD PTR [rdx+0x8],rax
   140019b95:	mov    rax,QWORD PTR [rdi+0x10]
   140019b99:	mov    QWORD PTR [rdx+0x10],rax
   140019b9d:	mov    rax,QWORD PTR [rdi+0x18]
   140019ba1:	mov    QWORD PTR [rdx+0x18],rax
   140019ba5:	mov    rcx,QWORD PTR [rdi+0x20]
   140019ba9:	mov    QWORD PTR [rdx+0x20],rcx
   140019bad:	mov    rcx,QWORD PTR [rdi+0x28]
   140019bb1:	mov    QWORD PTR [rdx+0x28],rcx
   140019bb5:	mov    rcx,QWORD PTR [rdi+0x30]
   140019bb9:	mov    QWORD PTR [rdx+0x30],rcx
   140019bbd:	mov    rcx,QWORD PTR [rdi+0x38]
   140019bc1:	mov    QWORD PTR [rdx+0x38],rcx
   140019bc5:	mov    rcx,QWORD PTR [rdi+0x40]
   140019bc9:	mov    QWORD PTR [rdx+0x40],rcx
   140019bcd:	inc    DWORD PTR [rbx+0x10]
   140019bd0:	mov    eax,0x1
   140019bd5:	mov    rbx,QWORD PTR [rsp+0x58]
   140019bda:	add    rsp,0x30
   140019bde:	pop    rdi
   140019bdf:	pop    rsi
   140019be0:	pop    rbp
   140019be1:	ret    
   140019be2:	int3   
   140019be3:	int3   
   140019be4:	rex push rdi
   140019be6:	sub    rsp,0x30
   140019bea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019bf3:	mov    QWORD PTR [rsp+0x48],rbx
   140019bf8:	mov    QWORD PTR [rsp+0x50],rsi
   140019bfd:	mov    rbx,rcx
   140019c00:	cmp    QWORD PTR [rcx],0x0
   140019c04:	je     0x140019c48
   140019c06:	xor    edi,edi
   140019c08:	cmp    DWORD PTR [rcx+0x10],edi
   140019c0b:	jle    0x140019c3c
   140019c0d:	xor    esi,esi
   140019c0f:	mov    rcx,QWORD PTR [rbx]
   140019c12:	add    rcx,rsi
   140019c15:	mov    QWORD PTR [rsp+0x40],rcx
   140019c1a:	mov    rdx,QWORD PTR [rcx]
   140019c1d:	sub    rdx,0x18
   140019c21:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140019c26:	jg     0x140019c31
   140019c28:	mov    rcx,QWORD PTR [rdx]
   140019c2b:	mov    rax,QWORD PTR [rcx]
   140019c2e:	call   QWORD PTR [rax+0x8]
   140019c31:	inc    edi
   140019c33:	add    rsi,0x8
   140019c37:	cmp    edi,DWORD PTR [rbx+0x10]
   140019c3a:	jl     0x140019c0f
   140019c3c:	mov    rcx,QWORD PTR [rbx]
   140019c3f:	call   0x140023328
   140019c44:	and    QWORD PTR [rbx],0x0
   140019c48:	mov    rcx,QWORD PTR [rbx+0x8]
   140019c4c:	test   rcx,rcx
   140019c4f:	je     0x140019c5b
   140019c51:	call   0x140023328
   140019c56:	and    QWORD PTR [rbx+0x8],0x0
   140019c5b:	and    DWORD PTR [rbx+0x10],0x0
   140019c5f:	mov    rbx,QWORD PTR [rsp+0x48]
   140019c64:	mov    rsi,QWORD PTR [rsp+0x50]
   140019c69:	add    rsp,0x30
   140019c6d:	pop    rdi
   140019c6e:	ret    
   140019c6f:	int3   
   140019c70:	mov    rax,rsp
   140019c73:	mov    QWORD PTR [rax+0x8],rbx
   140019c77:	mov    QWORD PTR [rax+0x10],rbp
   140019c7b:	mov    QWORD PTR [rax+0x18],rsi
   140019c7f:	mov    QWORD PTR [rax+0x20],rdi
   140019c83:	push   r14
   140019c85:	sub    rsp,0x30
   140019c89:	xor    r14d,r14d
   140019c8c:	mov    rbp,rdx
   140019c8f:	mov    rbx,rcx
   140019c92:	mov    esi,0x1
   140019c97:	test   rdx,rdx
   140019c9a:	je     0x140019cbc
   140019c9c:	mov    r8,rdx
   140019c9f:	mov    DWORD PTR [rax-0x10],r14d
   140019ca3:	lea    ecx,[rsi+0x2]
   140019ca6:	or     r9d,0xffffffff
   140019caa:	xor    edx,edx
   140019cac:	mov    QWORD PTR [rax-0x18],r14
   140019cb0:	call   QWORD PTR [rip+0x1f542]        # 0x1400391f8
   140019cb6:	mov    edi,eax
   140019cb8:	sub    edi,esi
   140019cba:	jmp    0x140019cbf
   140019cbc:	mov    edi,r14d
   140019cbf:	mov    rax,QWORD PTR [rbx]
   140019cc2:	test   edi,edi
   140019cc4:	jle    0x140019d12
   140019cc6:	sub    esi,DWORD PTR [rax-0x8]
   140019cc9:	mov    eax,DWORD PTR [rax-0xc]
   140019ccc:	sub    eax,edi
   140019cce:	or     esi,eax
   140019cd0:	jge    0x140019cdc
   140019cd2:	mov    edx,edi
   140019cd4:	mov    rcx,rbx
   140019cd7:	call   0x140005d68
   140019cdc:	mov    rax,QWORD PTR [rbx]
   140019cdf:	xor    edx,edx
   140019ce1:	or     r9d,0xffffffff
   140019ce5:	lea    ecx,[rdx+0x3]
   140019ce8:	mov    r8,rbp
   140019ceb:	mov    DWORD PTR [rsp+0x28],edi
   140019cef:	mov    QWORD PTR [rsp+0x20],rax
   140019cf4:	call   QWORD PTR [rip+0x1f4fe]        # 0x1400391f8
   140019cfa:	mov    rax,QWORD PTR [rbx]
   140019cfd:	cmp    edi,DWORD PTR [rax-0xc]
   140019d00:	jg     0x140019d76
   140019d02:	mov    DWORD PTR [rax-0x10],edi
   140019d05:	mov    rax,QWORD PTR [rbx]
   140019d08:	movsxd rcx,edi
   140019d0b:	mov    WORD PTR [rax+rcx*2],r14w
   140019d10:	jmp    0x140019d58
   140019d12:	lea    rdx,[rax-0x18]
   140019d16:	mov    rdi,QWORD PTR [rdx]
   140019d19:	cmp    DWORD PTR [rdx+0x8],r14d
   140019d1d:	je     0x140019d58
   140019d1f:	cmp    DWORD PTR [rdx+0x10],r14d
   140019d23:	jge    0x140019d38
   140019d25:	cmp    DWORD PTR [rax-0xc],r14d
   140019d29:	jl     0x140019d81
   140019d2b:	mov    DWORD PTR [rax-0x10],r14d
   140019d2f:	mov    rax,QWORD PTR [rbx]
   140019d32:	mov    WORD PTR [rax],r14w
   140019d36:	jmp    0x140019d58
   140019d38:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140019d3d:	jg     0x140019d48
   140019d3f:	mov    rcx,QWORD PTR [rdx]
   140019d42:	mov    rax,QWORD PTR [rcx]
   140019d45:	call   QWORD PTR [rax+0x8]
   140019d48:	mov    rax,QWORD PTR [rdi]
   140019d4b:	mov    rcx,rdi
   140019d4e:	call   QWORD PTR [rax+0x18]
   140019d51:	add    rax,0x18
   140019d55:	mov    QWORD PTR [rbx],rax
   140019d58:	mov    rbp,QWORD PTR [rsp+0x48]
   140019d5d:	mov    rsi,QWORD PTR [rsp+0x50]
   140019d62:	mov    rdi,QWORD PTR [rsp+0x58]
   140019d67:	mov    rax,rbx
   140019d6a:	mov    rbx,QWORD PTR [rsp+0x40]
   140019d6f:	add    rsp,0x30
   140019d73:	pop    r14
   140019d75:	ret    
   140019d76:	mov    ecx,0x80070057
   140019d7b:	call   0x140003e64
   140019d80:	int3   
   140019d81:	mov    ecx,0x80070057
   140019d86:	call   0x140003e64
   140019d8b:	int3   
   140019d8c:	mov    QWORD PTR [rsp+0x8],rbx
   140019d91:	mov    QWORD PTR [rsp+0x10],rbp
   140019d96:	mov    QWORD PTR [rsp+0x18],rsi
   140019d9b:	push   rdi
   140019d9c:	push   r12
   140019d9e:	push   r13
   140019da0:	push   r14
   140019da2:	push   r15
   140019da4:	sub    rsp,0x20
   140019da8:	movsxd rbp,DWORD PTR [rsp+0x70]
   140019dad:	movsxd rbx,r8d
   140019db0:	xor    r13d,r13d
   140019db3:	lea    esi,[rbx+rbp*1]
   140019db6:	mov    r15,r9
   140019db9:	mov    r12,rdx
   140019dbc:	mov    r14,rcx
   140019dbf:	test   esi,esi
   140019dc1:	js     0x140019e3f
   140019dc3:	mov    rax,QWORD PTR [rcx]
   140019dc6:	lea    ecx,[r13+0x1]
   140019dca:	sub    ecx,DWORD PTR [rax-0x8]
   140019dcd:	mov    eax,DWORD PTR [rax-0xc]
   140019dd0:	sub    eax,esi
   140019dd2:	or     ecx,eax
   140019dd4:	jge    0x140019de0
   140019dd6:	mov    edx,esi
   140019dd8:	mov    rcx,r14
   140019ddb:	call   0x140005d68
   140019de0:	mov    rdi,QWORD PTR [r14]
   140019de3:	add    rbx,rbx
   140019de6:	mov    r8,r12
   140019de9:	mov    rcx,rdi
   140019dec:	mov    r9,rbx
   140019def:	mov    rdx,rbx
   140019df2:	call   0x14002c220
   140019df7:	mov    rdx,rbp
   140019dfa:	lea    rcx,[rbx+rdi*1]
   140019dfe:	add    rdx,rdx
   140019e01:	mov    r8,r15
   140019e04:	mov    r9,rdx
   140019e07:	call   0x14002c220
   140019e0c:	mov    rax,QWORD PTR [r14]
   140019e0f:	cmp    esi,DWORD PTR [rax-0xc]
   140019e12:	jg     0x140019e4a
   140019e14:	mov    rbx,QWORD PTR [rsp+0x50]
   140019e19:	mov    rbp,QWORD PTR [rsp+0x58]
   140019e1e:	mov    DWORD PTR [rax-0x10],esi
   140019e21:	mov    rax,QWORD PTR [r14]
   140019e24:	movsxd rcx,esi
   140019e27:	mov    rsi,QWORD PTR [rsp+0x60]
   140019e2c:	mov    WORD PTR [rax+rcx*2],r13w
   140019e31:	add    rsp,0x20
   140019e35:	pop    r15
   140019e37:	pop    r14
   140019e39:	pop    r13
   140019e3b:	pop    r12
   140019e3d:	pop    rdi
   140019e3e:	ret    
   140019e3f:	mov    ecx,0x80070057
   140019e44:	call   0x140003e64
   140019e49:	int3   
   140019e4a:	mov    ecx,0x80070057
   140019e4f:	call   0x140003e64
   140019e54:	int3   
   140019e55:	int3   
   140019e56:	int3   
   140019e57:	int3   
   140019e58:	add    rcx,0x10
   140019e5c:	jmp    0x1400057bc
   140019e61:	int3   
   140019e62:	int3   
   140019e63:	int3   
   140019e64:	mov    QWORD PTR [rsp+0x8],rbx
   140019e69:	push   rdi
   140019e6a:	sub    rsp,0x20
   140019e6e:	mov    ebx,edx
   140019e70:	mov    rdi,rcx
   140019e73:	call   0x140019e94
   140019e78:	test   bl,0x1
   140019e7b:	je     0x140019e85
   140019e7d:	mov    rcx,rdi
   140019e80:	call   0x140020e30
   140019e85:	mov    rax,rdi
   140019e88:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e8d:	add    rsp,0x20
   140019e91:	pop    rdi
   140019e92:	ret    
   140019e93:	int3   
   140019e94:	mov    QWORD PTR [rsp+0x8],rcx
   140019e99:	sub    rsp,0x38
   140019e9d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019ea6:	lea    rax,[rip+0x24bcb]        # 0x14003ea78
   140019ead:	mov    QWORD PTR [rcx],rax
   140019eb0:	lea    rax,[rcx+0x10]
   140019eb4:	mov    QWORD PTR [rsp+0x40],rax
   140019eb9:	mov    rdx,QWORD PTR [rax]
   140019ebc:	sub    rdx,0x18
   140019ec0:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140019ec5:	jg     0x140019ed0
   140019ec7:	mov    rcx,QWORD PTR [rdx]
   140019eca:	mov    rax,QWORD PTR [rcx]
   140019ecd:	call   QWORD PTR [rax+0x8]
   140019ed0:	add    rsp,0x38
   140019ed4:	ret    
   140019ed5:	int3   
   140019ed6:	int3   
   140019ed7:	int3   
   140019ed8:	mov    QWORD PTR [rsp+0x20],rbx
   140019edd:	push   rbp
   140019ede:	push   rsi
   140019edf:	push   rdi
   140019ee0:	lea    rbp,[rsp-0x47]
   140019ee5:	sub    rsp,0xe0
   140019eec:	mov    rax,QWORD PTR [rip+0x33555]        # 0x14004d448
   140019ef3:	xor    rax,rsp
   140019ef6:	mov    QWORD PTR [rbp+0x37],rax
   140019efa:	mov    rax,QWORD PTR [rdx]
   140019efd:	mov    rbx,rdx
   140019f00:	mov    rdi,rcx
   140019f03:	lea    rdx,[rbp-0x79]
   140019f07:	mov    rcx,rbx
   140019f0a:	mov    rsi,r8
   140019f0d:	call   QWORD PTR [rax+0x20]
   140019f10:	mov    rax,QWORD PTR [rbx]
   140019f13:	lea    rdx,[rbp-0x75]
   140019f17:	mov    rcx,rbx
   140019f1a:	call   QWORD PTR [rax+0x18]
   140019f1d:	mov    r9d,DWORD PTR [rbp-0x79]
   140019f21:	mov    ebx,0x20
   140019f26:	lea    r8,[rip+0x23c43]        # 0x14003db70
   140019f2d:	lea    rcx,[rbp-0x49]
   140019f31:	mov    edx,ebx
   140019f33:	call   0x14002c558
   140019f38:	mov    r9d,DWORD PTR [rbp-0x75]
   140019f3c:	lea    r8,[rip+0x23c2d]        # 0x14003db70
   140019f43:	lea    rcx,[rbp-0x9]
   140019f47:	mov    edx,ebx
   140019f49:	call   0x14002c558
   140019f4e:	mov    rax,QWORD PTR [rdi+0x10]
   140019f52:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f56:	mov    QWORD PTR [rbp-0x71],rax
   140019f5a:	lea    rax,[rbp-0x49]
   140019f5e:	lea    r9,[rbp-0x71]
   140019f62:	mov    QWORD PTR [rbp-0x69],rax
   140019f66:	lea    rax,[rbp-0x9]
   140019f6a:	lea    r8d,[rbx-0x1c]
   140019f6e:	mov    QWORD PTR [rbp-0x61],rax
   140019f72:	mov    rax,QWORD PTR [rcx]
   140019f75:	mov    edx,0xe12305e4
   140019f7a:	mov    QWORD PTR [rbp-0x59],rsi
   140019f7e:	call   QWORD PTR [rax]
   140019f80:	mov    rcx,QWORD PTR [rbp+0x37]
   140019f84:	xor    rcx,rsp
   140019f87:	call   0x140020e50
   140019f8c:	mov    rbx,QWORD PTR [rsp+0x118]
   140019f94:	add    rsp,0xe0
   140019f9b:	pop    rdi
   140019f9c:	pop    rsi
   140019f9d:	pop    rbp
   140019f9e:	ret    
   140019f9f:	int3   
   140019fa0:	sub    rsp,0x28
   140019fa4:	call   0x140019ed8
   140019fa9:	xor    eax,eax
   140019fab:	add    rsp,0x28
   140019faf:	ret    
   140019fb0:	add    rcx,0x60
   140019fb4:	jmp    0x1400057bc
   140019fb9:	int3   
   140019fba:	int3   
   140019fbb:	int3   
   140019fbc:	mov    BYTE PTR [rcx+0x8],dl
   140019fbf:	ret    
   140019fc0:	mov    r11,rsp
   140019fc3:	mov    QWORD PTR [r11+0x8],rcx
   140019fc7:	push   rbp
   140019fc8:	push   rsi
   140019fc9:	push   rdi
   140019fca:	sub    rsp,0x30
   140019fce:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140019fd6:	mov    QWORD PTR [r11+0x18],rbx
   140019fda:	mov    rsi,r8
   140019fdd:	mov    rbx,rcx
   140019fe0:	lea    rax,[rip+0x24c91]        # 0x14003ec78
   140019fe7:	mov    QWORD PTR [rcx],rax
   140019fea:	lea    rax,[rip+0x24bf7]        # 0x14003ebe8
   140019ff1:	mov    QWORD PTR [rcx],rax
   140019ff4:	xor    ebp,ebp
   140019ff6:	mov    BYTE PTR [rcx+0x8],bpl
   140019ffa:	mov    QWORD PTR [rcx+0x10],rbp
   140019ffe:	mov    QWORD PTR [rcx+0x18],rbp
   14001a002:	mov    DWORD PTR [rcx+0x20],ebp
   14001a005:	mov    QWORD PTR [rcx+0x30],rbp
   14001a009:	mov    DWORD PTR [rcx+0x38],ebp
   14001a00c:	mov    QWORD PTR [rcx+0x40],rbp
   14001a010:	mov    DWORD PTR [rcx+0x48],ebp
   14001a013:	mov    QWORD PTR [rcx+0x58],rdx
   14001a017:	lea    rdi,[rcx+0x60]
   14001a01b:	mov    QWORD PTR [r11+0x10],rdi
   14001a01f:	lea    rcx,[rip+0x3443a]        # 0x14004e460
   14001a026:	mov    rax,QWORD PTR [rip+0x34433]        # 0x14004e460
   14001a02d:	call   QWORD PTR [rax+0x18]
   14001a030:	add    rax,0x18
   14001a034:	mov    QWORD PTR [rdi],rax
   14001a037:	lea    rdx,[rip+0x24a24]        # 0x14003ea62
   14001a03e:	mov    rcx,rdi
   14001a041:	call   0x14000592c
   14001a046:	test   al,al
   14001a048:	jne    0x14001a05a
   14001a04a:	lea    rdx,[rip+0x24a11]        # 0x14003ea62
   14001a051:	mov    rcx,rdi
   14001a054:	call   0x140019c70
   14001a059:	nop
   14001a05a:	mov    QWORD PTR [rbx+0x68],rsi
   14001a05e:	cmp    DWORD PTR [rip+0x36d10],ebp        # 0x140050d74
   14001a064:	jne    0x14001a075
   14001a066:	call   0x140004f38
   14001a06b:	mov    DWORD PTR [rip+0x36cff],0x1        # 0x140050d74
   14001a075:	mov    eax,DWORD PTR [rip+0x36df1]        # 0x140050e6c
   14001a07b:	mov    DWORD PTR [rbx+0x4c],eax
   14001a07e:	mov    ecx,DWORD PTR [rip+0x36de8]        # 0x140050e6c
   14001a084:	cmp    ecx,0x3
   14001a087:	jne    0x14001a092
   14001a089:	lea    rax,[rip+0x24948]        # 0x14003e9d8
   14001a090:	jmp    0x14001a0bc
   14001a092:	cmp    ecx,0x2
   14001a095:	jne    0x14001a0a0
   14001a097:	lea    rax,[rip+0x2494a]        # 0x14003e9e8
   14001a09e:	jmp    0x14001a0bc
   14001a0a0:	cmp    ecx,0x5
   14001a0a3:	jne    0x14001a0ae
   14001a0a5:	lea    rax,[rip+0x24934]        # 0x14003e9e0
   14001a0ac:	jmp    0x14001a0bc
   14001a0ae:	lea    rax,[rip+0x24963]        # 0x14003ea18
   14001a0b5:	cmp    ecx,0x6
   14001a0b8:	cmovne rax,rbp
   14001a0bc:	mov    QWORD PTR [rbx+0x50],rax
   14001a0c0:	mov    rax,rbx
   14001a0c3:	mov    rbx,QWORD PTR [rsp+0x60]
   14001a0c8:	add    rsp,0x30
   14001a0cc:	pop    rdi
   14001a0cd:	pop    rsi
   14001a0ce:	pop    rbp
   14001a0cf:	ret    
   14001a0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0d5:	push   rdi
   14001a0d6:	sub    rsp,0x20
   14001a0da:	mov    ebx,edx
   14001a0dc:	mov    rdi,rcx
   14001a0df:	call   0x14001a100
   14001a0e4:	test   bl,0x1
   14001a0e7:	je     0x14001a0f1
   14001a0e9:	mov    rcx,rdi
   14001a0ec:	call   0x140020e30
   14001a0f1:	mov    rax,rdi
   14001a0f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a0f9:	add    rsp,0x20
   14001a0fd:	pop    rdi
   14001a0fe:	ret    
   14001a0ff:	int3   
   14001a100:	mov    QWORD PTR [rsp+0x8],rcx
   14001a105:	push   rbx
   14001a106:	sub    rsp,0x30
   14001a10a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a113:	mov    rbx,rcx
   14001a116:	lea    rax,[rip+0x24acb]        # 0x14003ebe8
   14001a11d:	mov    QWORD PTR [rcx],rax
   14001a120:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a124:	call   0x140023328
   14001a129:	nop
   14001a12a:	lea    rax,[rbx+0x60]
   14001a12e:	mov    QWORD PTR [rsp+0x48],rax
   14001a133:	mov    rdx,QWORD PTR [rax]
   14001a136:	sub    rdx,0x18
   14001a13a:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001a13f:	jg     0x14001a14b
   14001a141:	mov    rcx,QWORD PTR [rdx]
   14001a144:	mov    rax,QWORD PTR [rcx]
   14001a147:	call   QWORD PTR [rax+0x8]
   14001a14a:	nop
   14001a14b:	lea    rax,[rip+0x24b26]        # 0x14003ec78
   14001a152:	mov    QWORD PTR [rbx],rax
   14001a155:	add    rsp,0x30
   14001a159:	pop    rbx
   14001a15a:	ret    
   14001a15b:	int3   
   14001a15c:	sub    rsp,0x28
   14001a160:	cmp    QWORD PTR [rcx+0x50],0x0
   14001a165:	jne    0x14001a182
   14001a167:	mov    rcx,QWORD PTR [rcx+0x68]
   14001a16b:	xor    r9d,r9d
   14001a16e:	xor    r8d,r8d
   14001a171:	mov    rax,QWORD PTR [rcx]
   14001a174:	mov    edx,0xe12305e7
   14001a179:	call   QWORD PTR [rax]
   14001a17b:	mov    eax,0x80004005
   14001a180:	jmp    0x14001a184
   14001a182:	xor    eax,eax
   14001a184:	add    rsp,0x28
   14001a188:	ret    
   14001a189:	int3   
   14001a18a:	int3   
   14001a18b:	int3   
   14001a18c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a191:	mov    QWORD PTR [rsp+0x10],rsi
   14001a196:	push   rdi
   14001a197:	sub    rsp,0x30
   14001a19b:	mov    rbx,rcx
   14001a19e:	mov    rcx,QWORD PTR [rcx+0x28]
   14001a1a2:	mov    edi,edx
   14001a1a4:	mov    rax,QWORD PTR [rcx]
   14001a1a7:	lea    r9,[rbx+0x38]
   14001a1ab:	lea    r8,[rbx+0x30]
   14001a1af:	call   QWORD PTR [rax+0x28]
   14001a1b2:	mov    esi,eax
   14001a1b4:	test   eax,eax
   14001a1b6:	js     0x14001a1d2
   14001a1b8:	mov    rcx,QWORD PTR [rbx+0x28]
   14001a1bc:	lea    r9,[rbx+0x48]
   14001a1c0:	lea    r8,[rbx+0x40]
   14001a1c4:	mov    rax,QWORD PTR [rcx]
   14001a1c7:	mov    edx,edi
   14001a1c9:	call   QWORD PTR [rax+0x68]
   14001a1cc:	mov    esi,eax
   14001a1ce:	test   eax,eax
   14001a1d0:	jns    0x14001a217
   14001a1d2:	mov    r8d,DWORD PTR [rbx+0x20]
   14001a1d6:	mov    rdx,QWORD PTR [rbx+0x18]
   14001a1da:	call   0x14001a22c
   14001a1df:	mov    rdi,rax
   14001a1e2:	test   rax,rax
   14001a1e5:	je     0x14001a20f
   14001a1e7:	mov    rdx,QWORD PTR [rbx+0x60]
   14001a1eb:	mov    rcx,QWORD PTR [rbx+0x68]
   14001a1ef:	lea    r9,[rsp+0x20]
   14001a1f4:	mov    r10,QWORD PTR [rcx]
   14001a1f7:	mov    QWORD PTR [rsp+0x28],rdx
   14001a1fc:	mov    r8d,0x2
   14001a202:	mov    edx,0xe12305e6
   14001a207:	mov    QWORD PTR [rsp+0x20],rax
   14001a20c:	call   QWORD PTR [r10]
   14001a20f:	mov    rcx,rdi
   14001a212:	call   0x140023328
   14001a217:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a21c:	mov    eax,esi
   14001a21e:	mov    rsi,QWORD PTR [rsp+0x48]
   14001a223:	add    rsp,0x30
   14001a227:	pop    rdi
   14001a228:	ret    
   14001a229:	int3   
   14001a22a:	int3   
   14001a22b:	int3   
   14001a22c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a231:	mov    QWORD PTR [rsp+0x10],rbp
   14001a236:	mov    QWORD PTR [rsp+0x18],rsi
   14001a23b:	push   rdi
   14001a23c:	sub    rsp,0x20
   14001a240:	movsxd rdi,r8d
   14001a243:	mov    rbp,rdx
   14001a246:	lea    eax,[rdi+0x1]
   14001a249:	movsxd rsi,eax
   14001a24c:	lea    rcx,[rsi+rsi*1]
   14001a250:	call   0x140026354
   14001a255:	mov    rbx,rax
   14001a258:	test   rax,rax
   14001a25b:	jne    0x14001a261
   14001a25d:	xor    eax,eax
   14001a25f:	jmp    0x14001a283
   14001a261:	mov    r9,rdi
   14001a264:	mov    r8,rbp
   14001a267:	mov    rdx,rsi
   14001a26a:	mov    rcx,rax
   14001a26d:	call   0x140027a98
   14001a272:	test   eax,eax
   14001a274:	je     0x14001a280
   14001a276:	mov    rcx,rbx
   14001a279:	call   0x140023328
   14001a27e:	jmp    0x14001a25d
   14001a280:	mov    rax,rbx
   14001a283:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a288:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a28d:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a292:	add    rsp,0x20
   14001a296:	pop    rdi
   14001a297:	ret    
   14001a298:	mov    QWORD PTR [rsp+0x8],rbx
   14001a29d:	push   rdi
   14001a29e:	sub    rsp,0x20
   14001a2a2:	mov    r8d,DWORD PTR [rcx+0x48]
   14001a2a6:	mov    rdx,QWORD PTR [rcx+0x40]
   14001a2aa:	call   0x14001a22c
   14001a2af:	xor    r8d,r8d
   14001a2b2:	xor    edx,edx
   14001a2b4:	mov    rcx,rax
   14001a2b7:	mov    rdi,rax
   14001a2ba:	call   0x14002a58c
   14001a2bf:	mov    rcx,rdi
   14001a2c2:	mov    ebx,eax
   14001a2c4:	call   0x140023328
   14001a2c9:	mov    eax,ebx
   14001a2cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a2d0:	add    rsp,0x20
   14001a2d4:	pop    rdi
   14001a2d5:	ret    
   14001a2d6:	int3   
   14001a2d7:	int3   
   14001a2d8:	mov    QWORD PTR [rsp+0x8],rbx
   14001a2dd:	mov    QWORD PTR [rsp+0x10],rsi
   14001a2e2:	push   rdi
   14001a2e3:	sub    rsp,0x40
   14001a2e7:	mov    r8d,DWORD PTR [rcx+0x38]
   14001a2eb:	mov    rbx,rdx
   14001a2ee:	mov    rdx,QWORD PTR [rcx+0x30]
   14001a2f2:	mov    rdi,rcx
   14001a2f5:	call   0x14001a22c
   14001a2fa:	mov    rdx,QWORD PTR [rdi+0x60]
   14001a2fe:	mov    rcx,QWORD PTR [rdi+0x68]
   14001a302:	mov    QWORD PTR [rsp+0x30],rdx
   14001a307:	lea    r9,[rsp+0x20]
   14001a30c:	mov    r10,QWORD PTR [rcx]
   14001a30f:	mov    edx,0xe12305e9
   14001a314:	mov    r8d,0x3
   14001a31a:	mov    rsi,rax
   14001a31d:	mov    QWORD PTR [rsp+0x20],rax
   14001a322:	mov    QWORD PTR [rsp+0x28],rbx
   14001a327:	call   QWORD PTR [r10]
   14001a32a:	mov    rcx,rsi
   14001a32d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a332:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a337:	add    rsp,0x40
   14001a33b:	pop    rdi
   14001a33c:	jmp    0x140023328
   14001a341:	int3   
   14001a342:	int3   
   14001a343:	int3   
   14001a344:	mov    QWORD PTR [rsp+0x8],rbx
   14001a349:	push   rdi
   14001a34a:	sub    rsp,0x40
   14001a34e:	cmp    DWORD PTR [rcx+0x4c],0x3
   14001a352:	mov    rdi,rcx
   14001a355:	je     0x14001a3b0
   14001a357:	mov    r8d,DWORD PTR [rcx+0x38]
   14001a35b:	mov    rdx,QWORD PTR [rcx+0x30]
   14001a35f:	call   0x14001a22c
   14001a364:	mov    rdx,QWORD PTR [rdi+0x50]
   14001a368:	mov    rcx,QWORD PTR [rdi+0x68]
   14001a36c:	mov    r10,QWORD PTR [rcx]
   14001a36f:	mov    QWORD PTR [rsp+0x30],rdx
   14001a374:	mov    rdx,QWORD PTR [rdi+0x60]
   14001a378:	mov    rbx,rax
   14001a37b:	mov    QWORD PTR [rsp+0x20],rax
   14001a380:	lea    rax,[rip+0x24731]        # 0x14003eab8
   14001a387:	mov    QWORD PTR [rsp+0x38],rdx
   14001a38c:	lea    r9,[rsp+0x20]
   14001a391:	mov    r8d,0x4
   14001a397:	mov    edx,0xe12305eb
   14001a39c:	mov    QWORD PTR [rsp+0x28],rax
   14001a3a1:	call   QWORD PTR [r10]
   14001a3a4:	mov    rcx,rbx
   14001a3a7:	call   0x140023328
   14001a3ac:	xor    al,al
   14001a3ae:	jmp    0x14001a3b2
   14001a3b0:	mov    al,0x1
   14001a3b2:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a3b7:	add    rsp,0x40
   14001a3bb:	pop    rdi
   14001a3bc:	ret    
   14001a3bd:	int3   
   14001a3be:	int3   
   14001a3bf:	int3   
   14001a3c0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a3c5:	push   rdi
   14001a3c6:	sub    rsp,0x40
   14001a3ca:	mov    rdi,rcx
   14001a3cd:	mov    rcx,QWORD PTR [rcx+0x28]
   14001a3d1:	lea    rdx,[rsp+0x50]
   14001a3d6:	mov    rax,QWORD PTR [rcx]
   14001a3d9:	call   QWORD PTR [rax+0x18]
   14001a3dc:	xor    ebx,ebx
   14001a3de:	cmp    DWORD PTR [rsp+0x50],ebx
   14001a3e2:	jle    0x14001a42b
   14001a3e4:	mov    edx,ebx
   14001a3e6:	mov    rcx,rdi
   14001a3e9:	call   0x14001a18c
   14001a3ee:	test   eax,eax
   14001a3f0:	js     0x14001a492
   14001a3f6:	movsxd r8,DWORD PTR [rdi+0x38]
   14001a3fa:	mov    rcx,QWORD PTR [rdi+0x30]
   14001a3fe:	lea    rdx,[rip+0x246d3]        # 0x14003ead8
   14001a405:	call   0x14002a1ec
   14001a40a:	test   eax,eax
   14001a40c:	jne    0x14001a483
   14001a40e:	movsxd r8,DWORD PTR [rdi+0x48]
   14001a412:	mov    rdx,QWORD PTR [rdi+0x50]
   14001a416:	mov    rcx,QWORD PTR [rdi+0x40]
   14001a41a:	call   0x14002a1ec
   14001a41f:	test   eax,eax
   14001a421:	jne    0x14001a438
   14001a423:	inc    ebx
   14001a425:	cmp    ebx,DWORD PTR [rsp+0x50]
   14001a429:	jl     0x14001a3e4
   14001a42b:	xor    eax,eax
   14001a42d:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a432:	add    rsp,0x40
   14001a436:	pop    rdi
   14001a437:	ret    
   14001a438:	mov    r8d,DWORD PTR [rdi+0x48]
   14001a43c:	mov    rdx,QWORD PTR [rdi+0x40]
   14001a440:	call   0x14001a22c
   14001a445:	mov    rdx,QWORD PTR [rdi+0x50]
   14001a449:	mov    rcx,QWORD PTR [rdi+0x68]
   14001a44d:	mov    r10,QWORD PTR [rcx]
   14001a450:	mov    QWORD PTR [rsp+0x28],rdx
   14001a455:	mov    rdx,QWORD PTR [rdi+0x60]
   14001a459:	mov    QWORD PTR [rsp+0x30],rdx
   14001a45e:	lea    r9,[rsp+0x20]
   14001a463:	mov    r8d,0x3
   14001a469:	mov    edx,0xe12305e8
   14001a46e:	mov    rbx,rax
   14001a471:	mov    QWORD PTR [rsp+0x20],rax
   14001a476:	call   QWORD PTR [r10]
   14001a479:	mov    rcx,rbx
   14001a47c:	call   0x140023328
   14001a481:	jmp    0x14001a492
   14001a483:	lea    rdx,[rip+0x2463e]        # 0x14003eac8
   14001a48a:	mov    rcx,rdi
   14001a48d:	call   0x14001a2d8
   14001a492:	mov    eax,0x80004005
   14001a497:	jmp    0x14001a42d
   14001a499:	int3   
   14001a49a:	int3   
   14001a49b:	int3   
   14001a49c:	mov    QWORD PTR [rsp+0x10],rbx
   14001a4a1:	push   rdi
   14001a4a2:	sub    rsp,0x20
   14001a4a6:	mov    rbx,rcx
   14001a4a9:	mov    rcx,QWORD PTR [rcx+0x28]
   14001a4ad:	lea    rdx,[rsp+0x30]
   14001a4b2:	mov    rax,QWORD PTR [rcx]
   14001a4b5:	call   QWORD PTR [rax+0x18]
   14001a4b8:	xor    edi,edi
   14001a4ba:	cmp    DWORD PTR [rsp+0x30],edi
   14001a4be:	jle    0x14001a53e
   14001a4c0:	mov    edx,edi
   14001a4c2:	mov    rcx,rbx
   14001a4c5:	call   0x14001a18c
   14001a4ca:	test   eax,eax
   14001a4cc:	js     0x14001a55a
   14001a4d2:	movsxd r8,DWORD PTR [rbx+0x38]
   14001a4d6:	mov    rcx,QWORD PTR [rbx+0x30]
   14001a4da:	lea    rdx,[rip+0x245f7]        # 0x14003ead8
   14001a4e1:	call   0x14002a1ec
   14001a4e6:	test   eax,eax
   14001a4e8:	jne    0x14001a506
   14001a4ea:	mov    rcx,QWORD PTR [rbx+0x10]
   14001a4ee:	call   0x140023328
   14001a4f3:	mov    r8d,DWORD PTR [rbx+0x48]
   14001a4f7:	mov    rdx,QWORD PTR [rbx+0x40]
   14001a4fb:	call   0x14001a22c
   14001a500:	mov    QWORD PTR [rbx+0x10],rax
   14001a504:	jmp    0x14001a536
   14001a506:	movsxd r8,DWORD PTR [rbx+0x38]
   14001a50a:	mov    rcx,QWORD PTR [rbx+0x30]
   14001a50e:	lea    rdx,[rip+0x245f3]        # 0x14003eb08
   14001a515:	call   0x14002a1ec
   14001a51a:	test   eax,eax
   14001a51c:	je     0x14001a536
   14001a51e:	movsxd r8,DWORD PTR [rbx+0x38]
   14001a522:	mov    rcx,QWORD PTR [rbx+0x30]
   14001a526:	lea    rdx,[rip+0x245bb]        # 0x14003eae8
   14001a52d:	call   0x14002a1ec
   14001a532:	test   eax,eax
   14001a534:	jne    0x14001a54b
   14001a536:	inc    edi
   14001a538:	cmp    edi,DWORD PTR [rsp+0x30]
   14001a53c:	jl     0x14001a4c0
   14001a53e:	xor    eax,eax
   14001a540:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a545:	add    rsp,0x20
   14001a549:	pop    rdi
   14001a54a:	ret    
   14001a54b:	lea    rdx,[rip+0x245de]        # 0x14003eb30
   14001a552:	mov    rcx,rbx
   14001a555:	call   0x14001a2d8
   14001a55a:	mov    eax,0x80004005
   14001a55f:	jmp    0x14001a540
   14001a561:	int3   
   14001a562:	int3   
   14001a563:	int3   
   14001a564:	mov    rax,rsp
   14001a567:	push   rbp
   14001a568:	push   rdi
   14001a569:	push   r13
   14001a56b:	push   r14
   14001a56d:	push   r15
   14001a56f:	lea    rbp,[rax-0x5f]
   14001a573:	sub    rsp,0xc0
   14001a57a:	mov    QWORD PTR [rbp+0x2f],0xfffffffffffffffe
   14001a582:	mov    QWORD PTR [rax+0x18],rbx
   14001a586:	mov    QWORD PTR [rax+0x20],rsi
   14001a58a:	mov    rsi,rcx
   14001a58d:	xor    edx,edx
   14001a58f:	lea    r8d,[rdx+0x48]
   14001a593:	lea    rcx,[rbp-0x69]
   14001a597:	call   0x1400260e0
   14001a59c:	mov    rcx,QWORD PTR [rsi+0x10]
   14001a5a0:	call   0x14002fd30
   14001a5a5:	mov    QWORD PTR [rbp-0x61],rax
   14001a5a9:	mov    r15d,DWORD PTR [rbp-0x45]
   14001a5ad:	mov    r13d,0x1
   14001a5b3:	cmp    BYTE PTR [rsi+0x8],0x0
   14001a5b7:	cmovne r15d,r13d
   14001a5bb:	mov    DWORD PTR [rbp-0x45],r15d
   14001a5bf:	mov    rcx,QWORD PTR [rsi+0x28]
   14001a5c3:	mov    rax,QWORD PTR [rcx]
   14001a5c6:	lea    rdx,[rbp+0x67]
   14001a5ca:	call   QWORD PTR [rax+0x18]
   14001a5cd:	xor    ebx,ebx
   14001a5cf:	mov    r14,QWORD PTR [rbp-0x69]
   14001a5d3:	cmp    DWORD PTR [rbp+0x67],ebx
   14001a5d6:	jle    0x14001a8fb
   14001a5dc:	mov    edx,ebx
   14001a5de:	mov    rcx,rsi
   14001a5e1:	call   0x14001a18c
   14001a5e6:	test   eax,eax
   14001a5e8:	js     0x14001a8f1
   14001a5ee:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a5f2:	lea    rdx,[rip+0x244df]        # 0x14003ead8
   14001a5f9:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a5fd:	call   0x14002a1ec
   14001a602:	test   eax,eax
   14001a604:	jne    0x14001a61f
   14001a606:	mov    r8d,DWORD PTR [rsi+0x48]
   14001a60a:	mov    rdx,QWORD PTR [rsi+0x40]
   14001a60e:	call   0x14001a22c
   14001a613:	mov    r14,rax
   14001a616:	mov    QWORD PTR [rbp-0x69],rax
   14001a61a:	jmp    0x14001a82c
   14001a61f:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a623:	lea    rdx,[rip+0x244ee]        # 0x14003eb18
   14001a62a:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a62e:	call   0x14002a1ec
   14001a633:	test   eax,eax
   14001a635:	jne    0x14001a64d
   14001a637:	mov    r8d,DWORD PTR [rsi+0x48]
   14001a63b:	mov    rdx,QWORD PTR [rsi+0x40]
   14001a63f:	call   0x14001a22c
   14001a644:	mov    QWORD PTR [rbp-0x59],rax
   14001a648:	jmp    0x14001a82c
   14001a64d:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a651:	lea    rdx,[rip+0x24500]        # 0x14003eb58
   14001a658:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a65c:	call   0x14002a1ec
   14001a661:	test   eax,eax
   14001a663:	jne    0x14001a67b
   14001a665:	mov    r8d,DWORD PTR [rsi+0x48]
   14001a669:	mov    rdx,QWORD PTR [rsi+0x40]
   14001a66d:	call   0x14001a22c
   14001a672:	mov    QWORD PTR [rbp-0x51],rax
   14001a676:	jmp    0x14001a82c
   14001a67b:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a67f:	lea    rdx,[rip+0x244c2]        # 0x14003eb48
   14001a686:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a68a:	call   0x14002a1ec
   14001a68f:	test   eax,eax
   14001a691:	jne    0x14001a6a3
   14001a693:	mov    rcx,rsi
   14001a696:	call   0x14001a298
   14001a69b:	mov    DWORD PTR [rbp-0x49],eax
   14001a69e:	jmp    0x14001a82c
   14001a6a3:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a6a7:	lea    rdx,[rip+0x244d2]        # 0x14003eb80
   14001a6ae:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a6b2:	call   0x14002a1ec
   14001a6b7:	test   eax,eax
   14001a6b9:	jne    0x14001a6de
   14001a6bb:	mov    rcx,rsi
   14001a6be:	call   0x14001a344
   14001a6c3:	test   al,al
   14001a6c5:	je     0x14001a8f1
   14001a6cb:	mov    rcx,rsi
   14001a6ce:	call   0x14001a298
   14001a6d3:	mov    eax,eax
   14001a6d5:	mov    QWORD PTR [rbp-0x29],rax
   14001a6d9:	jmp    0x14001a82c
   14001a6de:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a6e2:	lea    rdx,[rip+0x24487]        # 0x14003eb70
   14001a6e9:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a6ed:	call   0x14002a1ec
   14001a6f2:	test   eax,eax
   14001a6f4:	jne    0x14001a719
   14001a6f6:	mov    rcx,rsi
   14001a6f9:	call   0x14001a344
   14001a6fe:	test   al,al
   14001a700:	je     0x14001a8f1
   14001a706:	mov    rcx,rsi
   14001a709:	call   0x14001a298
   14001a70e:	mov    eax,eax
   14001a710:	mov    QWORD PTR [rbp-0x31],rax
   14001a714:	jmp    0x14001a82c
   14001a719:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a71d:	lea    rdx,[rip+0x24474]        # 0x14003eb98
   14001a724:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a728:	call   0x14002a1ec
   14001a72d:	test   eax,eax
   14001a72f:	jne    0x14001a7bf
   14001a735:	mov    rcx,rsi
   14001a738:	call   0x14001a344
   14001a73d:	test   al,al
   14001a73f:	je     0x14001a8f1
   14001a745:	movsxd r8,DWORD PTR [rsi+0x48]
   14001a749:	lea    rdx,[rip+0x24440]        # 0x14003eb90
   14001a750:	mov    rcx,QWORD PTR [rsi+0x40]
   14001a754:	call   0x14002a1ec
   14001a759:	test   eax,eax
   14001a75b:	je     0x14001a7ba
   14001a75d:	movsxd r8,DWORD PTR [rsi+0x48]
   14001a761:	lea    rdx,[rip+0x24448]        # 0x14003ebb0
   14001a768:	mov    rcx,QWORD PTR [rsi+0x40]
   14001a76c:	call   0x14002a1ec
   14001a771:	test   eax,eax
   14001a773:	jne    0x14001a77a
   14001a775:	mov    eax,r13d
   14001a778:	jmp    0x14001a7ba
   14001a77a:	movsxd r8,DWORD PTR [rsi+0x48]
   14001a77e:	lea    rdx,[rip+0x2441f]        # 0x14003eba4
   14001a785:	mov    rcx,QWORD PTR [rsi+0x40]
   14001a789:	call   0x14002a1ec
   14001a78e:	test   eax,eax
   14001a790:	jne    0x14001a799
   14001a792:	mov    eax,0x2
   14001a797:	jmp    0x14001a7ba
   14001a799:	movsxd r8,DWORD PTR [rsi+0x48]
   14001a79d:	lea    rdx,[rip+0x24434]        # 0x14003ebd8
   14001a7a4:	mov    rcx,QWORD PTR [rsi+0x40]
   14001a7a8:	call   0x14002a1ec
   14001a7ad:	test   eax,eax
   14001a7af:	jne    0x14001a83d
   14001a7b5:	mov    eax,0x3
   14001a7ba:	mov    BYTE PTR [rbp-0x39],al
   14001a7bd:	jmp    0x14001a82c
   14001a7bf:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a7c3:	lea    rdx,[rip+0x243f6]        # 0x14003ebc0
   14001a7ca:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a7ce:	call   0x14002a1ec
   14001a7d3:	test   eax,eax
   14001a7d5:	jne    0x14001a7f8
   14001a7d7:	mov    eax,DWORD PTR [rsi+0x4c]
   14001a7da:	cmp    eax,0x2
   14001a7dd:	je     0x14001a7eb
   14001a7df:	add    eax,0xfffffffb
   14001a7e2:	cmp    eax,r13d
   14001a7e5:	ja     0x14001a898
   14001a7eb:	mov    rcx,rsi
   14001a7ee:	call   0x14001a298
   14001a7f3:	mov    DWORD PTR [rbp-0x39],eax
   14001a7f6:	jmp    0x14001a82c
   14001a7f8:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a7fc:	lea    rdx,[rip+0x24305]        # 0x14003eb08
   14001a803:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a807:	call   0x14002a1ec
   14001a80c:	test   eax,eax
   14001a80e:	je     0x14001a82c
   14001a810:	movsxd r8,DWORD PTR [rsi+0x38]
   14001a814:	lea    rdx,[rip+0x242cd]        # 0x14003eae8
   14001a81b:	mov    rcx,QWORD PTR [rsi+0x30]
   14001a81f:	call   0x14002a1ec
   14001a824:	test   eax,eax
   14001a826:	jne    0x14001a8e2
   14001a82c:	add    ebx,r13d
   14001a82f:	cmp    ebx,DWORD PTR [rbp+0x67]
   14001a832:	jge    0x14001a8fb
   14001a838:	jmp    0x14001a5dc
   14001a83d:	mov    r8d,DWORD PTR [rsi+0x38]
   14001a841:	mov    rdx,QWORD PTR [rsi+0x30]
   14001a845:	call   0x14001a22c
   14001a84a:	mov    rdi,rax
   14001a84d:	mov    r8d,DWORD PTR [rsi+0x48]
   14001a851:	mov    rdx,QWORD PTR [rsi+0x40]
   14001a855:	call   0x14001a22c
   14001a85a:	mov    rbx,rax
   14001a85d:	mov    rcx,QWORD PTR [rsi+0x68]
   14001a861:	mov    QWORD PTR [rbp-0x9],rax
   14001a865:	mov    QWORD PTR [rbp-0x1],rdi
   14001a869:	mov    rdx,QWORD PTR [rsi+0x60]
   14001a86d:	mov    QWORD PTR [rbp+0x7],rdx
   14001a871:	mov    r10,QWORD PTR [rcx]
   14001a874:	lea    r9,[rbp-0x9]
   14001a878:	mov    edx,0xe12305ea
   14001a87d:	mov    r8d,0x3
   14001a883:	call   QWORD PTR [r10]
   14001a886:	mov    rcx,rdi
   14001a889:	call   0x140023328
   14001a88e:	mov    rcx,rbx
   14001a891:	call   0x140023328
   14001a896:	jmp    0x14001a8f1
   14001a898:	mov    r8d,DWORD PTR [rsi+0x38]
   14001a89c:	mov    rdx,QWORD PTR [rsi+0x30]
   14001a8a0:	call   0x14001a22c
   14001a8a5:	mov    rbx,rax
   14001a8a8:	mov    r8,QWORD PTR [rsi+0x60]
   14001a8ac:	mov    rdx,QWORD PTR [rsi+0x50]
   14001a8b0:	mov    rcx,QWORD PTR [rsi+0x68]
   14001a8b4:	mov    QWORD PTR [rbp+0xf],rax
   14001a8b8:	lea    rax,[rip+0x241f9]        # 0x14003eab8
   14001a8bf:	mov    QWORD PTR [rbp+0x17],rax
   14001a8c3:	mov    QWORD PTR [rbp+0x1f],rdx
   14001a8c7:	mov    QWORD PTR [rbp+0x27],r8
   14001a8cb:	mov    r10,QWORD PTR [rcx]
   14001a8ce:	lea    r9,[rbp+0xf]
   14001a8d2:	mov    edx,0xe12305eb
   14001a8d7:	mov    r8d,0x4
   14001a8dd:	call   QWORD PTR [r10]
   14001a8e0:	jmp    0x14001a88e
   14001a8e2:	lea    rdx,[rip+0x241cf]        # 0x14003eab8
   14001a8e9:	mov    rcx,rsi
   14001a8ec:	call   0x14001a2d8
   14001a8f1:	mov    eax,0x80004005
   14001a8f6:	jmp    0x14001a9f7
   14001a8fb:	lea    rdi,[rsi+0x60]
   14001a8ff:	mov    rbx,QWORD PTR [rsi+0x58]
   14001a903:	cmp    r15d,r13d
   14001a906:	jne    0x14001a91c
   14001a908:	mov    r8,rdi
   14001a90b:	lea    rdx,[rbp-0x69]
   14001a90f:	mov    rcx,rbx
   14001a912:	call   0x14001951c
   14001a917:	jmp    0x14001a9f5
   14001a91c:	mov    rdx,r14
   14001a91f:	lea    rcx,[rbp+0x6f]
   14001a923:	call   0x140005714
   14001a928:	nop
   14001a929:	lea    rcx,[rbp+0x6f]
   14001a92d:	call   0x140019814
   14001a932:	xor    ecx,ecx
   14001a934:	or     r15d,0xffffffff
   14001a938:	cmp    DWORD PTR [rbx+0x20],ecx
   14001a93b:	jle    0x14001a996
   14001a93d:	xor    esi,esi
   14001a93f:	mov    rax,QWORD PTR [rbp+0x6f]
   14001a943:	test   rax,rax
   14001a946:	setne  sil
   14001a94a:	mov    r11,QWORD PTR [rbx+0x10]
   14001a94e:	test   esi,esi
   14001a950:	je     0x14001a98b
   14001a952:	mov    rdx,QWORD PTR [r11]
   14001a955:	mov    r10,rax
   14001a958:	sub    r10,rdx
   14001a95b:	movzx  r8d,WORD PTR [rdx]
   14001a95f:	cmp    r8w,WORD PTR [rdx+r10*1]
   14001a964:	jne    0x14001a974
   14001a966:	add    rdx,0x2
   14001a96a:	test   r8w,r8w
   14001a96e:	jne    0x14001a95b
   14001a970:	xor    edx,edx
   14001a972:	jmp    0x14001a979
   14001a974:	sbb    edx,edx
   14001a976:	or     edx,r13d
   14001a979:	test   edx,edx
   14001a97b:	je     0x14001a999
   14001a97d:	add    ecx,r13d
   14001a980:	add    r11,0x8
   14001a984:	cmp    ecx,DWORD PTR [rbx+0x20]
   14001a987:	jl     0x14001a94e
   14001a989:	jmp    0x14001a996
   14001a98b:	mov    ecx,0x80004005
   14001a990:	call   0x140003e64
   14001a995:	int3   
   14001a996:	mov    ecx,r15d
   14001a999:	cmp    ecx,r15d
   14001a99c:	je     0x14001a9c3
   14001a99e:	mov    rax,QWORD PTR [rdi]
   14001a9a1:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a9a5:	mov    QWORD PTR [rbp-0x19],r14
   14001a9a9:	mov    QWORD PTR [rbp-0x11],rax
   14001a9ad:	mov    rax,QWORD PTR [rcx]
   14001a9b0:	lea    r9,[rbp-0x19]
   14001a9b4:	mov    edx,0xa1230930
   14001a9b9:	mov    r8d,0x2
   14001a9bf:	call   QWORD PTR [rax]
   14001a9c1:	jmp    0x14001a9d5
   14001a9c3:	lea    r8,[rbp-0x69]
   14001a9c7:	lea    rdx,[rbp+0x6f]
   14001a9cb:	lea    rcx,[rbx+0x10]
   14001a9cf:	call   0x140019ae4
   14001a9d4:	nop
   14001a9d5:	mov    rdx,QWORD PTR [rbp+0x6f]
   14001a9d9:	add    rdx,0xffffffffffffffe8
   14001a9dd:	mov    eax,r15d
   14001a9e0:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a9e5:	add    eax,r15d
   14001a9e8:	test   eax,eax
   14001a9ea:	jg     0x14001a9f5
   14001a9ec:	mov    rcx,QWORD PTR [rdx]
   14001a9ef:	mov    rax,QWORD PTR [rcx]
   14001a9f2:	call   QWORD PTR [rax+0x8]
   14001a9f5:	xor    eax,eax
   14001a9f7:	lea    r11,[rsp+0xc0]
   14001a9ff:	mov    rbx,QWORD PTR [r11+0x40]
   14001aa03:	mov    rsi,QWORD PTR [r11+0x48]
   14001aa07:	mov    rsp,r11
   14001aa0a:	pop    r15
   14001aa0c:	pop    r14
   14001aa0e:	pop    r13
   14001aa10:	pop    rdi
   14001aa11:	pop    rbp
   14001aa12:	ret    
   14001aa13:	int3   
   14001aa14:	mov    QWORD PTR [rsp+0x8],rbx
   14001aa19:	mov    QWORD PTR [rsp+0x10],rsi
   14001aa1e:	push   rdi
   14001aa1f:	sub    rsp,0x20
   14001aa23:	movsxd rdx,DWORD PTR [rsp+0x50]
   14001aa28:	mov    rax,QWORD PTR [rsp+0x68]
   14001aa2d:	mov    rbx,rcx
   14001aa30:	mov    DWORD PTR [rcx+0x20],edx
   14001aa33:	mov    rsi,rdx
   14001aa36:	mov    r8,rdx
   14001aa39:	mov    QWORD PTR [rcx+0x18],r9
   14001aa3d:	mov    QWORD PTR [rcx+0x28],rax
   14001aa41:	lea    rdx,[rip+0x24080]        # 0x14003eac8
   14001aa48:	mov    rcx,r9
   14001aa4b:	mov    rdi,r9
   14001aa4e:	call   0x14002a1ec
   14001aa53:	test   eax,eax
   14001aa55:	jne    0x14001aa6a
   14001aa57:	mov    rcx,rbx
   14001aa5a:	call   0x14001a3c0
   14001aa5f:	test   eax,eax
   14001aa61:	jns    0x14001aaaa
   14001aa63:	mov    eax,0x80004005
   14001aa68:	jmp    0x14001aaac
   14001aa6a:	lea    rdx,[rip+0x240bf]        # 0x14003eb30
   14001aa71:	mov    r8,rsi
   14001aa74:	mov    rcx,rdi
   14001aa77:	call   0x14002a1ec
   14001aa7c:	test   eax,eax
   14001aa7e:	jne    0x14001aa8a
   14001aa80:	mov    rcx,rbx
   14001aa83:	call   0x14001a49c
   14001aa88:	jmp    0x14001aa5f
   14001aa8a:	lea    rdx,[rip+0x24027]        # 0x14003eab8
   14001aa91:	mov    r8,rsi
   14001aa94:	mov    rcx,rdi
   14001aa97:	call   0x14002a1ec
   14001aa9c:	test   eax,eax
   14001aa9e:	jne    0x14001aaaa
   14001aaa0:	mov    rcx,rbx
   14001aaa3:	call   0x14001a564
   14001aaa8:	jmp    0x14001aa5f
   14001aaaa:	xor    eax,eax
   14001aaac:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aab1:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aab6:	add    rsp,0x20
   14001aaba:	pop    rdi
   14001aabb:	ret    
   14001aabc:	rex push rbx
   14001aabe:	sub    rsp,0x20
   14001aac2:	lea    rax,[rip+0x241af]        # 0x14003ec78
   14001aac9:	mov    rbx,rcx
   14001aacc:	mov    QWORD PTR [rcx],rax
   14001aacf:	test   dl,0x1
   14001aad2:	je     0x14001aad9
   14001aad4:	call   0x140020e30
   14001aad9:	mov    rax,rbx
   14001aadc:	add    rsp,0x20
   14001aae0:	pop    rbx
   14001aae1:	ret    
   14001aae2:	int3   
   14001aae3:	int3   
   14001aae4:	lea    rax,[rip+0x2418d]        # 0x14003ec78
   14001aaeb:	mov    QWORD PTR [rcx],rax
   14001aaee:	ret    
   14001aaef:	int3   
   14001aaf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001aaf5:	push   rdi
   14001aaf6:	sub    rsp,0x20
   14001aafa:	mov    ebx,edx
   14001aafc:	mov    rdi,rcx
   14001aaff:	call   0x14001ab20
   14001ab04:	test   bl,0x1
   14001ab07:	je     0x14001ab11
   14001ab09:	mov    rcx,rdi
   14001ab0c:	call   0x140020e30
   14001ab11:	mov    rax,rdi
   14001ab14:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ab19:	add    rsp,0x20
   14001ab1d:	pop    rdi
   14001ab1e:	ret    
   14001ab1f:	int3   
   14001ab20:	mov    rax,rsp
   14001ab23:	mov    QWORD PTR [rax+0x8],rcx
   14001ab27:	push   r14
   14001ab29:	sub    rsp,0x30
   14001ab2d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001ab35:	mov    QWORD PTR [rax+0x10],rbx
   14001ab39:	mov    QWORD PTR [rax+0x18],rsi
   14001ab3d:	mov    QWORD PTR [rax+0x20],rdi
   14001ab41:	mov    rsi,rcx
   14001ab44:	lea    rax,[rip+0x241ad]        # 0x14003ecf8
   14001ab4b:	mov    QWORD PTR [rcx],rax
   14001ab4e:	lea    r14,[rcx+0x8]
   14001ab52:	cmp    QWORD PTR [r14+0x8],0x0
   14001ab57:	je     0x14001ab7b
   14001ab59:	xor    ecx,ecx
   14001ab5b:	cmp    DWORD PTR [r14+0x10],ecx
   14001ab5f:	jbe    0x14001ab7b
   14001ab61:	mov    rdi,QWORD PTR [r14]
   14001ab64:	cmp    QWORD PTR [rdi+rcx*8],0x0
   14001ab69:	jne    0x14001ab75
   14001ab6b:	inc    ecx
   14001ab6d:	cmp    ecx,DWORD PTR [r14+0x10]
   14001ab71:	jb     0x14001ab64
   14001ab73:	jmp    0x14001ab7b
   14001ab75:	mov    rdi,QWORD PTR [rdi+rcx*8]
   14001ab79:	jmp    0x14001abb2
   14001ab7b:	xor    edi,edi
   14001ab7d:	jmp    0x14001abb2
   14001ab7f:	xor    eax,eax
   14001ab81:	test   rdi,rdi
   14001ab84:	setne  al
   14001ab87:	test   eax,eax
   14001ab89:	je     0x14001abb9
   14001ab8b:	mov    rbx,QWORD PTR [rdi+0x8]
   14001ab8f:	mov    rdx,rdi
   14001ab92:	mov    rcx,r14
   14001ab95:	call   0x14001bb2c
   14001ab9a:	mov    rdi,rax
   14001ab9d:	test   rbx,rbx
   14001aba0:	je     0x14001abb2
   14001aba2:	mov    rcx,rbx
   14001aba5:	call   0x14001b8f8
   14001abaa:	mov    rcx,rbx
   14001abad:	call   0x140020e30
   14001abb2:	test   rdi,rdi
   14001abb5:	jne    0x14001ab7f
   14001abb7:	jmp    0x14001abc4
   14001abb9:	mov    ecx,0x80004005
   14001abbe:	call   0x140003e64
   14001abc3:	int3   
   14001abc4:	cmp    QWORD PTR [rsi+0x58],0x0
   14001abc9:	je     0x14001abec
   14001abcb:	xor    ecx,ecx
   14001abcd:	cmp    DWORD PTR [rsi+0x60],ecx
   14001abd0:	jbe    0x14001abec
   14001abd2:	mov    rdi,QWORD PTR [rsi+0x50]
   14001abd6:	cmp    QWORD PTR [rdi+rcx*8],0x0
   14001abdb:	jne    0x14001abe6
   14001abdd:	inc    ecx
   14001abdf:	cmp    ecx,DWORD PTR [rsi+0x60]
   14001abe2:	jb     0x14001abd6
   14001abe4:	jmp    0x14001abec
   14001abe6:	mov    rdi,QWORD PTR [rdi+rcx*8]
   14001abea:	jmp    0x14001ac24
   14001abec:	xor    edi,edi
   14001abee:	jmp    0x14001ac24
   14001abf0:	xor    eax,eax
   14001abf2:	test   rdi,rdi
   14001abf5:	setne  al
   14001abf8:	test   eax,eax
   14001abfa:	je     0x14001ac2b
   14001abfc:	mov    rbx,QWORD PTR [rdi+0x8]
   14001ac00:	mov    rdx,rdi
   14001ac03:	lea    rcx,[rsi+0x50]
   14001ac07:	call   0x14001bb2c
   14001ac0c:	mov    rdi,rax
   14001ac0f:	test   rbx,rbx
   14001ac12:	je     0x14001ac24
   14001ac14:	mov    rcx,rbx
   14001ac17:	call   0x14001ba74
   14001ac1c:	mov    rcx,rbx
   14001ac1f:	call   0x140020e30
   14001ac24:	test   rdi,rdi
   14001ac27:	jne    0x14001abf0
   14001ac29:	jmp    0x14001ac36
   14001ac2b:	mov    ecx,0x80004005
   14001ac30:	call   0x140003e64
   14001ac35:	nop
   14001ac36:	lea    rcx,[rsi+0x50]
   14001ac3a:	call   0x14001b6c8
   14001ac3f:	nop
   14001ac40:	mov    rcx,r14
   14001ac43:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ac48:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ac4d:	mov    rdi,QWORD PTR [rsp+0x58]
   14001ac52:	add    rsp,0x30
   14001ac56:	pop    r14
   14001ac58:	jmp    0x14001b6c8
   14001ac5d:	int3   
   14001ac5e:	int3   
   14001ac5f:	int3   
   14001ac60:	mov    QWORD PTR [rsp+0x18],rbx
   14001ac65:	push   rbp
   14001ac66:	push   rsi
   14001ac67:	push   rdi
   14001ac68:	lea    rbp,[rsp-0xe70]
   14001ac70:	sub    rsp,0xf70
   14001ac77:	mov    rax,QWORD PTR [rip+0x327ca]        # 0x14004d448
   14001ac7e:	xor    rax,rsp
   14001ac81:	mov    QWORD PTR [rbp+0xe60],rax
   14001ac88:	mov    rdi,rdx
   14001ac8b:	mov    rbx,rcx
   14001ac8e:	call   0x14001b5d8
   14001ac93:	test   rax,rax
   14001ac96:	jne    0x14001aca9
   14001ac98:	mov    rcx,rbx
   14001ac9b:	call   0x14001b650
   14001aca0:	test   rax,rax
   14001aca3:	je     0x14001ae02
   14001aca9:	and    QWORD PTR [rsp+0x30],0x0
   14001acaf:	and    DWORD PTR [rsp+0x28],0x0
   14001acb4:	xor    r9d,r9d
   14001acb7:	lea    edx,[r9+0x7]
   14001acbb:	xor    r8d,r8d
   14001acbe:	mov    rcx,rdi
   14001acc1:	mov    DWORD PTR [rsp+0x20],0x3
   14001acc9:	call   QWORD PTR [rip+0x1e6c9]        # 0x140039398
   14001accf:	mov    rdi,rax
   14001acd2:	cmp    rax,0xffffffffffffffff
   14001acd6:	jne    0x14001acf2
   14001acd8:	call   QWORD PTR [rip+0x1e902]        # 0x1400395e0
   14001acde:	mov    ecx,eax
   14001ace0:	movzx  eax,ax
   14001ace3:	or     eax,0x80070000
   14001ace8:	test   ecx,ecx
   14001acea:	cmovle eax,ecx
   14001aced:	jmp    0x14001ae02
   14001acf2:	and    DWORD PTR [rsp+0x48],0x0
   14001acf7:	lea    r8,[rsp+0x48]
   14001acfc:	mov    r9d,0x2
   14001ad02:	xor    edx,edx
   14001ad04:	mov    rcx,rax
   14001ad07:	call   QWORD PTR [rip+0x1e873]        # 0x140039580
   14001ad0d:	movsxd rsi,DWORD PTR [rsp+0x48]
   14001ad12:	and    DWORD PTR [rsp+0x40],0x0
   14001ad17:	mov    eax,eax
   14001ad19:	lea    r8,[rsp+0x40]
   14001ad1e:	shl    rsi,0x20
   14001ad22:	mov    rdx,rdi
   14001ad25:	mov    rcx,rbx
   14001ad28:	or     rsi,rax
   14001ad2b:	call   0x14001ae24
   14001ad30:	mov    ebx,eax
   14001ad32:	test   eax,eax
   14001ad34:	jne    0x14001adf7
   14001ad3a:	xor    r9d,r9d
   14001ad3d:	xor    r8d,r8d
   14001ad40:	mov    edx,0x39f8
   14001ad45:	mov    rcx,rdi
   14001ad48:	call   QWORD PTR [rip+0x1e832]        # 0x140039580
   14001ad4e:	and    QWORD PTR [rsp+0x20],0x0
   14001ad54:	lea    r9,[rsp+0x44]
   14001ad59:	lea    rdx,[rsp+0x50]
   14001ad5e:	mov    r8d,0xf10
   14001ad64:	mov    rcx,rdi
   14001ad67:	call   QWORD PTR [rip+0x1e753]        # 0x1400394c0
   14001ad6d:	test   eax,eax
   14001ad6f:	je     0x14001adf5
   14001ad75:	cmp    DWORD PTR [rsp+0x44],0xf10
   14001ad7d:	jne    0x14001adf5
   14001ad7f:	mov    r8d,DWORD PTR [rsp+0x58]
   14001ad84:	cmp    r8d,0x30
   14001ad88:	jae    0x14001adf5
   14001ad8a:	lea    rcx,[r8+r8*4]
   14001ad8e:	inc    r8d
   14001ad91:	lea    rbx,[rsp+0x60]
   14001ad96:	shl    rcx,0x4
   14001ad9a:	mov    DWORD PTR [rsp+0x58],r8d
   14001ad9f:	lea    r8,[rip+0x22992]        # 0x14003d738
   14001ada6:	add    rbx,rcx
   14001ada9:	mov    edx,0x40
   14001adae:	mov    rcx,rbx
   14001adb1:	call   0x140002d7c
   14001adb6:	mov    eax,DWORD PTR [rsp+0x40]
   14001adba:	xor    r9d,r9d
   14001adbd:	xor    r8d,r8d
   14001adc0:	mov    edx,0x39f8
   14001adc5:	mov    rcx,rdi
   14001adc8:	mov    QWORD PTR [rbx+0x48],rax
   14001adcc:	mov    QWORD PTR [rbx+0x40],rsi
   14001add0:	call   QWORD PTR [rip+0x1e7aa]        # 0x140039580
   14001add6:	and    QWORD PTR [rsp+0x20],0x0
   14001addc:	lea    r9,[rsp+0x44]
   14001ade1:	lea    rdx,[rsp+0x50]
   14001ade6:	mov    r8d,0xf10
   14001adec:	mov    rcx,rdi
   14001adef:	call   QWORD PTR [rip+0x1e413]        # 0x140039208
   14001adf5:	xor    ebx,ebx
   14001adf7:	mov    rcx,rdi
   14001adfa:	call   QWORD PTR [rip+0x1e7c0]        # 0x1400395c0
   14001ae00:	mov    eax,ebx
   14001ae02:	mov    rcx,QWORD PTR [rbp+0xe60]
   14001ae09:	xor    rcx,rsp
   14001ae0c:	call   0x140020e50
   14001ae11:	mov    rbx,QWORD PTR [rsp+0xfa0]
   14001ae19:	add    rsp,0xf70
   14001ae20:	pop    rdi
   14001ae21:	pop    rsi
   14001ae22:	pop    rbp
   14001ae23:	ret    
   14001ae24:	mov    rax,rsp
   14001ae27:	push   rbp
   14001ae28:	push   rsi
   14001ae29:	push   rdi
   14001ae2a:	push   r12
   14001ae2c:	push   r13
   14001ae2e:	push   r14
   14001ae30:	push   r15
   14001ae32:	lea    rbp,[rax-0x5f]
   14001ae36:	sub    rsp,0xc0
   14001ae3d:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14001ae45:	mov    QWORD PTR [rax+0x20],rbx
   14001ae49:	mov    rax,QWORD PTR [rip+0x325f8]        # 0x14004d448
   14001ae50:	xor    rax,rsp
   14001ae53:	mov    QWORD PTR [rbp+0x1f],rax
   14001ae57:	mov    rbx,r8
   14001ae5a:	mov    QWORD PTR [rbp-0x31],rbx
   14001ae5e:	mov    rdi,rdx
   14001ae61:	mov    QWORD PTR [rbp-0x59],rdx
   14001ae65:	mov    r13,rcx
   14001ae68:	xor    r14d,r14d
   14001ae6b:	mov    DWORD PTR [r8],r14d
   14001ae6e:	mov    DWORD PTR [rbp-0x9],0x6e6b6f74
   14001ae75:	mov    DWORD PTR [rbp-0x5],0x2
   14001ae7c:	call   0x14001b5d8
   14001ae81:	mov    DWORD PTR [rbp-0x1],eax
   14001ae84:	mov    rcx,r13
   14001ae87:	call   0x14001b650
   14001ae8c:	mov    DWORD PTR [rbp+0x3],eax
   14001ae8f:	mov    DWORD PTR [rbp-0x69],r14d
   14001ae93:	mov    QWORD PTR [rsp+0x20],r14
   14001ae98:	lea    r9,[rbp-0x69]
   14001ae9c:	lea    esi,[r14+0x10]
   14001aea0:	mov    r8d,esi
   14001aea3:	lea    rdx,[rbp-0x9]
   14001aea7:	mov    rcx,rdi
   14001aeaa:	call   QWORD PTR [rip+0x1e358]        # 0x140039208
   14001aeb0:	test   eax,eax
   14001aeb2:	je     0x14001b332
   14001aeb8:	cmp    DWORD PTR [rbp-0x69],esi
   14001aebb:	jne    0x14001b332
   14001aec1:	mov    DWORD PTR [rbx],esi
   14001aec3:	cmp    QWORD PTR [r13+0x10],r14
   14001aec7:	je     0x14001aef0
   14001aec9:	mov    ecx,r14d
   14001aecc:	cmp    DWORD PTR [r13+0x18],r14d
   14001aed0:	jbe    0x14001aef0
   14001aed2:	mov    rsi,QWORD PTR [r13+0x8]
   14001aed6:	mov    eax,ecx
   14001aed8:	cmp    QWORD PTR [rsi+rax*8],r14
   14001aedc:	jne    0x14001aee8
   14001aede:	inc    ecx
   14001aee0:	cmp    ecx,DWORD PTR [r13+0x18]
   14001aee4:	jb     0x14001aed6
   14001aee6:	jmp    0x14001aef0
   14001aee8:	mov    eax,ecx
   14001aeea:	mov    rsi,QWORD PTR [rsi+rax*8]
   14001aeee:	jmp    0x14001aef3
   14001aef0:	mov    rsi,r14
   14001aef3:	test   rsi,rsi
   14001aef6:	je     0x14001b183
   14001aefc:	mov    eax,r14d
   14001aeff:	setne  al
   14001af02:	test   eax,eax
   14001af04:	je     0x14001b178
   14001af0a:	mov    rbx,rsi
   14001af0d:	mov    rdx,rsi
   14001af10:	lea    rcx,[r13+0x8]
   14001af14:	call   0x14001bb2c
   14001af19:	mov    rsi,rax
   14001af1c:	mov    eax,DWORD PTR [rbx]
   14001af1e:	mov    DWORD PTR [rbp-0x41],eax
   14001af21:	mov    r15,QWORD PTR [rbx+0x8]
   14001af25:	test   r15,r15
   14001af28:	je     0x14001aef3
   14001af2a:	cmp    QWORD PTR [r15+0x8],r14
   14001af2e:	je     0x14001af59
   14001af30:	mov    ecx,r14d
   14001af33:	cmp    DWORD PTR [r15+0x10],r14d
   14001af37:	jbe    0x14001af59
   14001af39:	mov    rdi,QWORD PTR [r15]
   14001af3c:	mov    eax,ecx
   14001af3e:	cmp    QWORD PTR [rdi+rax*8],r14
   14001af42:	jne    0x14001af4e
   14001af44:	inc    ecx
   14001af46:	cmp    ecx,DWORD PTR [r15+0x10]
   14001af4a:	jb     0x14001af3c
   14001af4c:	jmp    0x14001af59
   14001af4e:	mov    eax,ecx
   14001af50:	mov    rdi,QWORD PTR [rdi+rax*8]
   14001af54:	jmp    0x14001b13f
   14001af59:	mov    rdi,r14
   14001af5c:	jmp    0x14001b13f
   14001af61:	lea    rcx,[rip+0x334f8]        # 0x14004e460
   14001af68:	mov    rax,QWORD PTR [rip+0x334f1]        # 0x14004e460
   14001af6f:	call   QWORD PTR [rax+0x18]
   14001af72:	add    rax,0x18
   14001af76:	mov    QWORD PTR [rbp-0x51],rax
   14001af7a:	mov    eax,r14d
   14001af7d:	test   rdi,rdi
   14001af80:	setne  al
   14001af83:	test   eax,eax
   14001af85:	je     0x14001b16d
   14001af8b:	mov    r9,rdi
   14001af8e:	test   rdi,rdi
   14001af91:	jne    0x14001af98
   14001af93:	mov    rdi,r14
   14001af96:	jmp    0x14001afcb
   14001af98:	mov    r8,QWORD PTR [rdi+0x10]
   14001af9c:	test   r8,r8
   14001af9f:	jne    0x14001afc8
   14001afa1:	mov    r8,r14
   14001afa4:	xor    edx,edx
   14001afa6:	mov    eax,DWORD PTR [rdi+0x18]
   14001afa9:	div    DWORD PTR [r15+0x10]
   14001afad:	inc    edx
   14001afaf:	cmp    edx,DWORD PTR [r15+0x10]
   14001afb3:	jae    0x14001afc8
   14001afb5:	mov    rax,QWORD PTR [r15]
   14001afb8:	cmp    QWORD PTR [rax+rdx*8],r14
   14001afbc:	cmovne r8,QWORD PTR [rax+rdx*8]
   14001afc1:	inc    edx
   14001afc3:	test   r8,r8
   14001afc6:	je     0x14001afaf
   14001afc8:	mov    rdi,r8
   14001afcb:	mov    rbx,QWORD PTR [r9]
   14001afce:	lea    rdx,[r9+0x8]
   14001afd2:	lea    rcx,[rbp-0x51]
   14001afd6:	call   0x1400057bc
   14001afdb:	lea    rax,[rbp-0x29]
   14001afdf:	mov    QWORD PTR [rbp-0x61],rax
   14001afe3:	lea    rdx,[rbp-0x51]
   14001afe7:	lea    rcx,[rbp-0x29]
   14001afeb:	call   0x140005678
   14001aff0:	mov    r14,rax
   14001aff3:	mov    QWORD PTR [rbp-0x19],rax
   14001aff7:	mov    QWORD PTR [rbp-0x21],rbx
   14001affb:	mov    eax,DWORD PTR [rbp-0x41]
   14001affe:	mov    DWORD PTR [rbp-0x49],eax
   14001b001:	xor    eax,eax
   14001b003:	mov    DWORD PTR [rbp-0x69],eax
   14001b006:	mov    DWORD PTR [rbp-0x61],eax
   14001b009:	mov    QWORD PTR [rsp+0x20],rax
   14001b00e:	lea    r9,[rbp-0x61]
   14001b012:	lea    r8d,[rax+0x4]
   14001b016:	lea    rdx,[rbp-0x49]
   14001b01a:	mov    rbx,QWORD PTR [rbp-0x59]
   14001b01e:	mov    rcx,rbx
   14001b021:	call   QWORD PTR [rip+0x1e1e1]        # 0x140039208
   14001b027:	test   eax,eax
   14001b029:	je     0x14001b0e7
   14001b02f:	cmp    DWORD PTR [rbp-0x61],0x4
   14001b033:	jne    0x14001b0e7
   14001b039:	add    DWORD PTR [rbp-0x69],0x4
   14001b03d:	and    QWORD PTR [rsp+0x20],0x0
   14001b043:	lea    r9,[rbp-0x61]
   14001b047:	mov    r8d,0x8
   14001b04d:	lea    rdx,[rbp-0x21]
   14001b051:	mov    rcx,rbx
   14001b054:	call   QWORD PTR [rip+0x1e1ae]        # 0x140039208
   14001b05a:	test   eax,eax
   14001b05c:	je     0x14001b0d1
   14001b05e:	cmp    DWORD PTR [rbp-0x61],0x8
   14001b062:	jne    0x14001b0d1
   14001b064:	add    DWORD PTR [rbp-0x69],0x8
   14001b068:	mov    rdx,QWORD PTR [r14]
   14001b06b:	mov    eax,DWORD PTR [rdx-0x10]
   14001b06e:	lea    ebx,[rax*2+0x2]
   14001b075:	and    QWORD PTR [rsp+0x20],0x0
   14001b07b:	lea    r9,[rbp-0x61]
   14001b07f:	mov    r8d,ebx
   14001b082:	mov    rcx,QWORD PTR [rbp-0x59]
   14001b086:	call   QWORD PTR [rip+0x1e17c]        # 0x140039208
   14001b08c:	test   eax,eax
   14001b08e:	je     0x14001b0bb
   14001b090:	mov    eax,DWORD PTR [rbp-0x61]
   14001b093:	cmp    eax,ebx
   14001b095:	jne    0x14001b0bb
   14001b097:	add    DWORD PTR [rbp-0x69],eax
   14001b09a:	mov    rdx,QWORD PTR [r14]
   14001b09d:	sub    rdx,0x18
   14001b0a1:	or     eax,0xffffffff
   14001b0a4:	lock xadd DWORD PTR [rdx+0x10],eax
   14001b0a9:	xor    r14d,r14d
   14001b0ac:	dec    eax
   14001b0ae:	jg     0x14001b11e
   14001b0b0:	mov    rcx,QWORD PTR [rdx]
   14001b0b3:	mov    rax,QWORD PTR [rcx]
   14001b0b6:	call   QWORD PTR [rax+0x8]
   14001b0b9:	jmp    0x14001b11e
   14001b0bb:	call   QWORD PTR [rip+0x1e51f]        # 0x1400395e0
   14001b0c1:	movzx  ebx,ax
   14001b0c4:	or     ebx,0x80070000
   14001b0ca:	test   eax,eax
   14001b0cc:	cmovle ebx,eax
   14001b0cf:	jmp    0x14001b0fb
   14001b0d1:	call   QWORD PTR [rip+0x1e509]        # 0x1400395e0
   14001b0d7:	movzx  ebx,ax
   14001b0da:	or     ebx,0x80070000
   14001b0e0:	test   eax,eax
   14001b0e2:	cmovle ebx,eax
   14001b0e5:	jmp    0x14001b0fb
   14001b0e7:	call   QWORD PTR [rip+0x1e4f3]        # 0x1400395e0
   14001b0ed:	movzx  ebx,ax
   14001b0f0:	or     ebx,0x80070000
   14001b0f6:	test   eax,eax
   14001b0f8:	cmovle ebx,eax
   14001b0fb:	mov    rdx,QWORD PTR [r14]
   14001b0fe:	sub    rdx,0x18
   14001b102:	or     eax,0xffffffff
   14001b105:	xor    r14d,r14d
   14001b108:	lock xadd DWORD PTR [rdx+0x10],eax
   14001b10d:	dec    eax
   14001b10f:	jg     0x14001b11a
   14001b111:	mov    rcx,QWORD PTR [rdx]
   14001b114:	mov    rax,QWORD PTR [rcx]
   14001b117:	call   QWORD PTR [rax+0x8]
   14001b11a:	test   ebx,ebx
   14001b11c:	js     0x14001b14d
   14001b11e:	mov    eax,DWORD PTR [rbp-0x69]
   14001b121:	mov    rcx,QWORD PTR [rbp-0x31]
   14001b125:	add    DWORD PTR [rcx],eax
   14001b127:	mov    rdx,QWORD PTR [rbp-0x51]
   14001b12b:	add    rdx,0xffffffffffffffe8
   14001b12f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001b134:	jg     0x14001b13f
   14001b136:	mov    rcx,QWORD PTR [rdx]
   14001b139:	mov    rax,QWORD PTR [rcx]
   14001b13c:	call   QWORD PTR [rax+0x8]
   14001b13f:	test   rdi,rdi
   14001b142:	jne    0x14001af61
   14001b148:	jmp    0x14001aef3
   14001b14d:	mov    rdx,QWORD PTR [rbp-0x51]
   14001b151:	add    rdx,0xffffffffffffffe8
   14001b155:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001b15a:	jg     0x14001b166
   14001b15c:	mov    rcx,QWORD PTR [rdx]
   14001b15f:	mov    r8,QWORD PTR [rcx]
   14001b162:	call   QWORD PTR [r8+0x8]
   14001b166:	mov    eax,ebx
   14001b168:	jmp    0x14001b347
   14001b16d:	mov    ecx,0x80004005
   14001b172:	call   0x140003e64
   14001b177:	nop
   14001b178:	mov    ecx,0x80004005
   14001b17d:	call   0x140003e64
   14001b182:	int3   
   14001b183:	lea    r15,[r13+0x50]
   14001b187:	cmp    QWORD PTR [r15+0x8],r14
   14001b18b:	je     0x14001b1b3
   14001b18d:	mov    ecx,r14d
   14001b190:	cmp    DWORD PTR [r15+0x10],r14d
   14001b194:	jbe    0x14001b1b3
   14001b196:	mov    rdi,QWORD PTR [r15]
   14001b199:	mov    eax,ecx
   14001b19b:	cmp    QWORD PTR [rdi+rax*8],r14
   14001b19f:	jne    0x14001b1ab
   14001b1a1:	inc    ecx
   14001b1a3:	cmp    ecx,DWORD PTR [r15+0x10]
   14001b1a7:	jb     0x14001b199
   14001b1a9:	jmp    0x14001b1b3
   14001b1ab:	mov    eax,ecx
   14001b1ad:	mov    rdi,QWORD PTR [rdi+rax*8]
   14001b1b1:	jmp    0x14001b1b6
   14001b1b3:	mov    rdi,r14
   14001b1b6:	test   rdi,rdi
   14001b1b9:	je     0x14001b32e
   14001b1bf:	mov    r13d,0x80070000
   14001b1c5:	test   rdi,rdi
   14001b1c8:	je     0x14001b323
   14001b1ce:	mov    rbx,rdi
   14001b1d1:	mov    rdx,rdi
   14001b1d4:	mov    rcx,r15
   14001b1d7:	call   0x14001bb2c
   14001b1dc:	mov    rdi,rax
   14001b1df:	mov    r12d,DWORD PTR [rbx]
   14001b1e2:	mov    r14,QWORD PTR [rbx+0x8]
   14001b1e6:	test   r14,r14
   14001b1e9:	je     0x14001b30a
   14001b1ef:	cmp    QWORD PTR [r14+0x8],0x0
   14001b1f4:	je     0x14001b218
   14001b1f6:	xor    ecx,ecx
   14001b1f8:	cmp    DWORD PTR [r14+0x10],ecx
   14001b1fc:	jbe    0x14001b218
   14001b1fe:	mov    rbx,QWORD PTR [r14]
   14001b201:	cmp    QWORD PTR [rbx+rcx*8],0x0
   14001b206:	jne    0x14001b212
   14001b208:	inc    ecx
   14001b20a:	cmp    ecx,DWORD PTR [r14+0x10]
   14001b20e:	jb     0x14001b201
   14001b210:	jmp    0x14001b218
   14001b212:	mov    rbx,QWORD PTR [rbx+rcx*8]
   14001b216:	jmp    0x14001b21a
   14001b218:	xor    ebx,ebx
   14001b21a:	test   rbx,rbx
   14001b21d:	je     0x14001b30a
   14001b223:	test   rbx,rbx
   14001b226:	je     0x14001b318
   14001b22c:	mov    r8,rbx
   14001b22f:	mov    rsi,QWORD PTR [rbx+0x20]
   14001b233:	test   rsi,rsi
   14001b236:	jne    0x14001b25d
   14001b238:	xor    edx,edx
   14001b23a:	mov    eax,DWORD PTR [rbx+0x28]
   14001b23d:	div    DWORD PTR [r14+0x10]
   14001b241:	inc    edx
   14001b243:	cmp    edx,DWORD PTR [r14+0x10]
   14001b247:	jae    0x14001b25d
   14001b249:	mov    rax,QWORD PTR [r14]
   14001b24c:	cmp    QWORD PTR [rax+rdx*8],0x0
   14001b251:	cmovne rsi,QWORD PTR [rax+rdx*8]
   14001b256:	inc    edx
   14001b258:	test   rsi,rsi
   14001b25b:	je     0x14001b243
   14001b25d:	mov    rbx,rsi
   14001b260:	mov    rax,QWORD PTR [r8+0x8]
   14001b264:	mov    QWORD PTR [rbp+0x7],rax
   14001b268:	mov    rax,QWORD PTR [r8+0x10]
   14001b26c:	mov    QWORD PTR [rbp+0xf],rax
   14001b270:	mov    rax,QWORD PTR [r8+0x18]
   14001b274:	mov    QWORD PTR [rbp+0x17],rax
   14001b278:	mov    DWORD PTR [rbp-0x39],r12d
   14001b27c:	and    DWORD PTR [rbp-0x69],0x0
   14001b280:	and    DWORD PTR [rbp-0x65],0x0
   14001b284:	and    QWORD PTR [rsp+0x20],0x0
   14001b28a:	lea    r9,[rbp-0x65]
   14001b28e:	mov    r8d,0x4
   14001b294:	lea    rdx,[rbp-0x39]
   14001b298:	mov    rcx,QWORD PTR [rbp-0x59]
   14001b29c:	call   QWORD PTR [rip+0x1df66]        # 0x140039208
   14001b2a2:	test   eax,eax
   14001b2a4:	je     0x14001b2e3
   14001b2a6:	cmp    DWORD PTR [rbp-0x65],0x4
   14001b2aa:	jne    0x14001b2e3
   14001b2ac:	add    DWORD PTR [rbp-0x69],0x4
   14001b2b0:	and    QWORD PTR [rsp+0x20],0x0
   14001b2b6:	lea    r9,[rbp-0x65]
   14001b2ba:	mov    r8d,0x18
   14001b2c0:	lea    rdx,[rbp+0x7]
   14001b2c4:	mov    rcx,QWORD PTR [rbp-0x59]
   14001b2c8:	call   QWORD PTR [rip+0x1df3a]        # 0x140039208
   14001b2ce:	test   eax,eax
   14001b2d0:	je     0x14001b2e3
   14001b2d2:	cmp    DWORD PTR [rbp-0x65],0x18
   14001b2d6:	jne    0x14001b2e3
   14001b2d8:	mov    eax,DWORD PTR [rbp-0x69]
   14001b2db:	add    eax,0x18
   14001b2de:	mov    DWORD PTR [rbp-0x69],eax
   14001b2e1:	jmp    0x14001b2fb
   14001b2e3:	call   QWORD PTR [rip+0x1e2f7]        # 0x1400395e0
   14001b2e9:	movzx  ecx,ax
   14001b2ec:	or     ecx,r13d
   14001b2ef:	test   eax,eax
   14001b2f1:	cmovle ecx,eax
   14001b2f4:	test   ecx,ecx
   14001b2f6:	js     0x14001b314
   14001b2f8:	mov    eax,DWORD PTR [rbp-0x69]
   14001b2fb:	mov    rcx,QWORD PTR [rbp-0x31]
   14001b2ff:	add    DWORD PTR [rcx],eax
   14001b301:	test   rsi,rsi
   14001b304:	jne    0x14001b223
   14001b30a:	test   rdi,rdi
   14001b30d:	je     0x14001b32e
   14001b30f:	jmp    0x14001b1c5
   14001b314:	mov    eax,ecx
   14001b316:	jmp    0x14001b347
   14001b318:	mov    ecx,0x80004005
   14001b31d:	call   0x140003e64
   14001b322:	int3   
   14001b323:	mov    ecx,0x80004005
   14001b328:	call   0x140003e64
   14001b32d:	int3   
   14001b32e:	xor    eax,eax
   14001b330:	jmp    0x14001b347
   14001b332:	call   QWORD PTR [rip+0x1e2a8]        # 0x1400395e0
   14001b338:	mov    ecx,eax
   14001b33a:	movzx  eax,ax
   14001b33d:	or     eax,0x80070000
   14001b342:	test   ecx,ecx
   14001b344:	cmovle eax,ecx
   14001b347:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001b34b:	xor    rcx,rsp
   14001b34e:	call   0x140020e50
   14001b353:	mov    rbx,QWORD PTR [rsp+0x118]
   14001b35b:	add    rsp,0xc0
   14001b362:	pop    r15
   14001b364:	pop    r14
   14001b366:	pop    r13
   14001b368:	pop    r12
   14001b36a:	pop    rdi
   14001b36b:	pop    rsi
   14001b36c:	pop    rbp
   14001b36d:	ret    
   14001b36e:	int3   
   14001b36f:	int3   
   14001b370:	mov    QWORD PTR [rsp+0x8],rbx
   14001b375:	mov    QWORD PTR [rsp+0x10],rbp
   14001b37a:	mov    QWORD PTR [rsp+0x18],rsi
   14001b37f:	push   rdi
   14001b380:	sub    rsp,0x20
   14001b384:	lea    rsi,[rcx+0x8]
   14001b388:	mov    edi,edx
   14001b38a:	mov    rbx,QWORD PTR [rsi]
   14001b38d:	test   rbx,rbx
   14001b390:	je     0x14001b3bf
   14001b392:	xor    edx,edx
   14001b394:	mov    eax,edi
   14001b396:	div    DWORD PTR [rsi+0x10]
   14001b399:	mov    rbx,QWORD PTR [rbx+rdx*8]
   14001b39d:	jmp    0x14001b3ac
   14001b39f:	cmp    DWORD PTR [rbx+0x18],edi
   14001b3a2:	jne    0x14001b3a8
   14001b3a4:	cmp    DWORD PTR [rbx],edi
   14001b3a6:	je     0x14001b3b1
   14001b3a8:	mov    rbx,QWORD PTR [rbx+0x10]
   14001b3ac:	test   rbx,rbx
   14001b3af:	jne    0x14001b39f
   14001b3b1:	test   rbx,rbx
   14001b3b4:	je     0x14001b3bf
   14001b3b6:	mov    rbx,QWORD PTR [rbx+0x8]
   14001b3ba:	jmp    0x14001b47e
   14001b3bf:	mov    ecx,0x48
   14001b3c4:	call   0x140021a98
   14001b3c9:	mov    rbx,rax
   14001b3cc:	test   rax,rax
   14001b3cf:	je     0x14001b423
   14001b3d1:	and    QWORD PTR [rax],0x0
   14001b3d5:	and    QWORD PTR [rax+0x8],0x0
   14001b3da:	and    QWORD PTR [rbx+0x28],0x0
   14001b3df:	and    DWORD PTR [rbx+0x30],0x0
   14001b3e3:	and    QWORD PTR [rbx+0x38],0x0
   14001b3e8:	and    QWORD PTR [rbx+0x40],0x0
   14001b3ed:	mov    DWORD PTR [rax+0x10],0x11
   14001b3f4:	mov    eax,0xffffffff
   14001b3f9:	mov    rcx,rbx
   14001b3fc:	mov    DWORD PTR [rbx+0x34],0xa
   14001b403:	mov    DWORD PTR [rbx+0x14],0x3f400000
   14001b40a:	mov    DWORD PTR [rbx+0x18],0x3e800000
   14001b411:	mov    QWORD PTR [rbx+0x20],rax
   14001b415:	mov    DWORD PTR [rbx+0x1c],0x40100000
   14001b41c:	call   0x14001bf94
   14001b421:	jmp    0x14001b425
   14001b423:	xor    ebx,ebx
   14001b425:	mov    rcx,QWORD PTR [rsi]
   14001b428:	xor    edx,edx
   14001b42a:	mov    eax,edi
   14001b42c:	div    DWORD PTR [rsi+0x10]
   14001b42f:	mov    ebp,edx
   14001b431:	test   rcx,rcx
   14001b434:	je     0x14001b458
   14001b436:	mov    rax,QWORD PTR [rcx+rdx*8]
   14001b43a:	jmp    0x14001b449
   14001b43c:	cmp    DWORD PTR [rax+0x18],edi
   14001b43f:	jne    0x14001b445
   14001b441:	cmp    DWORD PTR [rax],edi
   14001b443:	je     0x14001b44e
   14001b445:	mov    rax,QWORD PTR [rax+0x10]
   14001b449:	test   rax,rax
   14001b44c:	jne    0x14001b43c
   14001b44e:	test   rax,rax
   14001b451:	jne    0x14001b47a
   14001b453:	test   rcx,rcx
   14001b456:	jne    0x14001b46a
   14001b458:	mov    edx,DWORD PTR [rsi+0x10]
   14001b45b:	mov    r8b,0x1
   14001b45e:	mov    rcx,rsi
   14001b461:	call   0x14001bc2c
   14001b466:	test   al,al
   14001b468:	je     0x14001b496
   14001b46a:	mov    r9d,edi
   14001b46d:	mov    r8d,ebp
   14001b470:	mov    edx,edi
   14001b472:	mov    rcx,rsi
   14001b475:	call   0x14001be4c
   14001b47a:	mov    QWORD PTR [rax+0x8],rbx
   14001b47e:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b483:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b488:	mov    rax,rbx
   14001b48b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b490:	add    rsp,0x20
   14001b494:	pop    rdi
   14001b495:	ret    
   14001b496:	mov    ecx,0x8007000e
   14001b49b:	call   0x140003e64
   14001b4a0:	int3   
   14001b4a1:	int3   
   14001b4a2:	int3   
   14001b4a3:	int3   
   14001b4a4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b4a9:	mov    QWORD PTR [rsp+0x10],rbp
   14001b4ae:	mov    QWORD PTR [rsp+0x18],rsi
   14001b4b3:	push   rdi
   14001b4b4:	sub    rsp,0x20
   14001b4b8:	lea    rsi,[rcx+0x50]
   14001b4bc:	mov    edi,edx
   14001b4be:	mov    rbx,QWORD PTR [rsi]
   14001b4c1:	test   rbx,rbx
   14001b4c4:	je     0x14001b4f3
   14001b4c6:	xor    edx,edx
   14001b4c8:	mov    eax,edi
   14001b4ca:	div    DWORD PTR [rsi+0x10]
   14001b4cd:	mov    rbx,QWORD PTR [rbx+rdx*8]
   14001b4d1:	jmp    0x14001b4e0
   14001b4d3:	cmp    DWORD PTR [rbx+0x18],edi
   14001b4d6:	jne    0x14001b4dc
   14001b4d8:	cmp    DWORD PTR [rbx],edi
   14001b4da:	je     0x14001b4e5
   14001b4dc:	mov    rbx,QWORD PTR [rbx+0x10]
   14001b4e0:	test   rbx,rbx
   14001b4e3:	jne    0x14001b4d3
   14001b4e5:	test   rbx,rbx
   14001b4e8:	je     0x14001b4f3
   14001b4ea:	mov    rbx,QWORD PTR [rbx+0x8]
   14001b4ee:	jmp    0x14001b5b2
   14001b4f3:	mov    ecx,0x48
   14001b4f8:	call   0x140021a98
   14001b4fd:	mov    rbx,rax
   14001b500:	test   rax,rax
   14001b503:	je     0x14001b557
   14001b505:	and    QWORD PTR [rax],0x0
   14001b509:	and    QWORD PTR [rax+0x8],0x0
   14001b50e:	and    QWORD PTR [rbx+0x28],0x0
   14001b513:	and    DWORD PTR [rbx+0x30],0x0
   14001b517:	and    QWORD PTR [rbx+0x38],0x0
   14001b51c:	and    QWORD PTR [rbx+0x40],0x0
   14001b521:	mov    DWORD PTR [rax+0x10],0x11
   14001b528:	mov    eax,0xffffffff
   14001b52d:	mov    rcx,rbx
   14001b530:	mov    DWORD PTR [rbx+0x34],0xa
   14001b537:	mov    DWORD PTR [rbx+0x14],0x3f400000
   14001b53e:	mov    DWORD PTR [rbx+0x18],0x3e800000
   14001b545:	mov    QWORD PTR [rbx+0x20],rax
   14001b549:	mov    DWORD PTR [rbx+0x1c],0x40100000
   14001b550:	call   0x14001bf94
   14001b555:	jmp    0x14001b559
   14001b557:	xor    ebx,ebx
   14001b559:	mov    rcx,QWORD PTR [rsi]
   14001b55c:	xor    edx,edx
   14001b55e:	mov    eax,edi
   14001b560:	div    DWORD PTR [rsi+0x10]
   14001b563:	mov    ebp,edx
   14001b565:	test   rcx,rcx
   14001b568:	je     0x14001b58c
   14001b56a:	mov    rax,QWORD PTR [rcx+rdx*8]
   14001b56e:	jmp    0x14001b57d
   14001b570:	cmp    DWORD PTR [rax+0x18],edi
   14001b573:	jne    0x14001b579
   14001b575:	cmp    DWORD PTR [rax],edi
   14001b577:	je     0x14001b582
   14001b579:	mov    rax,QWORD PTR [rax+0x10]
   14001b57d:	test   rax,rax
   14001b580:	jne    0x14001b570
   14001b582:	test   rax,rax
   14001b585:	jne    0x14001b5ae
   14001b587:	test   rcx,rcx
   14001b58a:	jne    0x14001b59e
   14001b58c:	mov    edx,DWORD PTR [rsi+0x10]
   14001b58f:	mov    r8b,0x1
   14001b592:	mov    rcx,rsi
   14001b595:	call   0x14001bc2c
   14001b59a:	test   al,al
   14001b59c:	je     0x14001b5ca
   14001b59e:	mov    r9d,edi
   14001b5a1:	mov    r8d,ebp
   14001b5a4:	mov    edx,edi
   14001b5a6:	mov    rcx,rsi
   14001b5a9:	call   0x14001be4c
   14001b5ae:	mov    QWORD PTR [rax+0x8],rbx
   14001b5b2:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b5b7:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b5bc:	mov    rax,rbx
   14001b5bf:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b5c4:	add    rsp,0x20
   14001b5c8:	pop    rdi
   14001b5c9:	ret    
   14001b5ca:	mov    ecx,0x8007000e
   14001b5cf:	call   0x140003e64
   14001b5d4:	int3   
   14001b5d5:	int3   
   14001b5d6:	int3   
   14001b5d7:	int3   
   14001b5d8:	mov    QWORD PTR [rsp+0x8],rbx
   14001b5dd:	mov    QWORD PTR [rsp+0x10],rsi
   14001b5e2:	push   rdi
   14001b5e3:	sub    rsp,0x20
   14001b5e7:	lea    rdi,[rcx+0x8]
   14001b5eb:	xor    esi,esi
   14001b5ed:	cmp    QWORD PTR [rdi+0x8],rsi
   14001b5f1:	je     0x14001b610
   14001b5f3:	xor    eax,eax
   14001b5f5:	cmp    DWORD PTR [rdi+0x10],eax
   14001b5f8:	jbe    0x14001b610
   14001b5fa:	mov    rdx,QWORD PTR [rdi]
   14001b5fd:	mov    rcx,rdx
   14001b600:	cmp    QWORD PTR [rcx],rsi
   14001b603:	jne    0x14001b614
   14001b605:	inc    eax
   14001b607:	add    rcx,0x8
   14001b60b:	cmp    eax,DWORD PTR [rdi+0x10]
   14001b60e:	jb     0x14001b600
   14001b610:	xor    eax,eax
   14001b612:	jmp    0x14001b635
   14001b614:	mov    rax,QWORD PTR [rdx+rax*8]
   14001b618:	jmp    0x14001b635
   14001b61a:	mov    rdx,rax
   14001b61d:	mov    rcx,rdi
   14001b620:	mov    rbx,rax
   14001b623:	call   0x14001bb2c
   14001b628:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b62c:	test   rcx,rcx
   14001b62f:	je     0x14001b635
   14001b631:	add    rsi,QWORD PTR [rcx+0x8]
   14001b635:	test   rax,rax
   14001b638:	jne    0x14001b61a
   14001b63a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b63f:	mov    rax,rsi
   14001b642:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b647:	add    rsp,0x20
   14001b64b:	pop    rdi
   14001b64c:	ret    
   14001b64d:	int3   
   14001b64e:	int3   
   14001b64f:	int3   
   14001b650:	mov    QWORD PTR [rsp+0x8],rbx
   14001b655:	mov    QWORD PTR [rsp+0x10],rsi
   14001b65a:	push   rdi
   14001b65b:	sub    rsp,0x20
   14001b65f:	lea    rdi,[rcx+0x50]
   14001b663:	xor    esi,esi
   14001b665:	cmp    QWORD PTR [rdi+0x8],rsi
   14001b669:	je     0x14001b688
   14001b66b:	xor    eax,eax
   14001b66d:	cmp    DWORD PTR [rdi+0x10],eax
   14001b670:	jbe    0x14001b688
   14001b672:	mov    rdx,QWORD PTR [rdi]
   14001b675:	mov    rcx,rdx
   14001b678:	cmp    QWORD PTR [rcx],rsi
   14001b67b:	jne    0x14001b68c
   14001b67d:	inc    eax
   14001b67f:	add    rcx,0x8
   14001b683:	cmp    eax,DWORD PTR [rdi+0x10]
   14001b686:	jb     0x14001b678
   14001b688:	xor    eax,eax
   14001b68a:	jmp    0x14001b6ad
   14001b68c:	mov    rax,QWORD PTR [rdx+rax*8]
   14001b690:	jmp    0x14001b6ad
   14001b692:	mov    rdx,rax
   14001b695:	mov    rcx,rdi
   14001b698:	mov    rbx,rax
   14001b69b:	call   0x14001bb2c
   14001b6a0:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b6a4:	test   rcx,rcx
   14001b6a7:	je     0x14001b6ad
   14001b6a9:	add    rsi,QWORD PTR [rcx+0x8]
   14001b6ad:	test   rax,rax
   14001b6b0:	jne    0x14001b692
   14001b6b2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b6b7:	mov    rax,rsi
   14001b6ba:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b6bf:	add    rsp,0x20
   14001b6c3:	pop    rdi
   14001b6c4:	ret    
   14001b6c5:	int3   
   14001b6c6:	int3   
   14001b6c7:	int3   
   14001b6c8:	mov    rax,rsp
   14001b6cb:	push   r14
   14001b6cd:	sub    rsp,0x30
   14001b6d1:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14001b6d9:	mov    QWORD PTR [rax+0x8],rbx
   14001b6dd:	mov    QWORD PTR [rax+0x10],rsi
   14001b6e1:	mov    QWORD PTR [rax+0x18],rdi
   14001b6e5:	mov    rdi,rcx
   14001b6e8:	inc    DWORD PTR [rcx+0x30]
   14001b6eb:	cmp    QWORD PTR [rcx],0x0
   14001b6ef:	je     0x14001b79d
   14001b6f5:	xor    esi,esi
   14001b6f7:	mov    DWORD PTR [rsp+0x20],esi
   14001b6fb:	cmp    esi,DWORD PTR [rdi+0x10]
   14001b6fe:	jae    0x14001b79d
   14001b704:	mov    rax,QWORD PTR [rdi]
   14001b707:	mov    r14,QWORD PTR [rax+rsi*8]
   14001b70b:	test   r14,r14
   14001b70e:	je     0x14001b796
   14001b714:	mov    rcx,r14
   14001b717:	lea    rdx,[r14+0x10]
   14001b71b:	mov    r14,QWORD PTR [rdx]
   14001b71e:	xor    eax,eax
   14001b720:	test   rcx,rcx
   14001b723:	setne  al
   14001b726:	test   eax,eax
   14001b728:	jne    0x14001b734
   14001b72a:	mov    ecx,0x80004005
   14001b72f:	call   0x140003e64
   14001b734:	mov    rax,QWORD PTR [rdi+0x40]
   14001b738:	mov    QWORD PTR [rdx],rax
   14001b73b:	mov    QWORD PTR [rdi+0x40],rcx
   14001b73f:	dec    QWORD PTR [rdi+0x8]
   14001b743:	mov    rdx,QWORD PTR [rdi+0x8]
   14001b747:	cmp    rdx,QWORD PTR [rdi+0x28]
   14001b74b:	jae    0x14001b765
   14001b74d:	cmp    DWORD PTR [rdi+0x30],0x0
   14001b751:	jne    0x14001b765
   14001b753:	mov    rcx,rdi
   14001b756:	call   0x14001bdcc
   14001b75b:	mov    edx,eax
   14001b75d:	mov    rcx,rdi
   14001b760:	call   0x14001bcc4
   14001b765:	cmp    QWORD PTR [rdi+0x8],0x0
   14001b76a:	jne    0x14001b791
   14001b76c:	and    QWORD PTR [rdi+0x40],0x0
   14001b771:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b775:	test   rcx,rcx
   14001b778:	je     0x14001b791
   14001b77a:	test   rcx,rcx
   14001b77d:	je     0x14001b78c
   14001b77f:	mov    rbx,QWORD PTR [rcx]
   14001b782:	call   0x140023328
   14001b787:	mov    rcx,rbx
   14001b78a:	jmp    0x14001b77a
   14001b78c:	and    QWORD PTR [rdi+0x38],0x0
   14001b791:	jmp    0x14001b70b
   14001b796:	inc    esi
   14001b798:	jmp    0x14001b6f7
   14001b79d:	mov    rcx,QWORD PTR [rdi]
   14001b7a0:	call   0x14002b138
   14001b7a5:	and    QWORD PTR [rdi],0x0
   14001b7a9:	and    QWORD PTR [rdi+0x8],0x0
   14001b7ae:	cmp    DWORD PTR [rdi+0x30],0x0
   14001b7b2:	jne    0x14001b7c9
   14001b7b4:	xor    edx,edx
   14001b7b6:	mov    rcx,rdi
   14001b7b9:	call   0x14001bdcc
   14001b7be:	mov    DWORD PTR [rdi+0x10],eax
   14001b7c1:	mov    rcx,rdi
   14001b7c4:	call   0x14001bf94
   14001b7c9:	and    QWORD PTR [rdi+0x40],0x0
   14001b7ce:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b7d2:	test   rcx,rcx
   14001b7d5:	je     0x14001b7ee
   14001b7d7:	test   rcx,rcx
   14001b7da:	je     0x14001b7e9
   14001b7dc:	mov    rbx,QWORD PTR [rcx]
   14001b7df:	call   0x140023328
   14001b7e4:	mov    rcx,rbx
   14001b7e7:	jmp    0x14001b7d7
   14001b7e9:	and    QWORD PTR [rdi+0x38],0x0
   14001b7ee:	dec    DWORD PTR [rdi+0x30]
   14001b7f1:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b7f6:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b7fb:	mov    rdi,QWORD PTR [rsp+0x50]
   14001b800:	add    rsp,0x30
   14001b804:	pop    r14
   14001b806:	ret    
   14001b807:	int3   
   14001b808:	mov    r11,rsp
   14001b80b:	mov    QWORD PTR [r11+0x8],rcx
   14001b80f:	push   rdi
   14001b810:	push   r14
   14001b812:	push   r15
   14001b814:	sub    rsp,0x50
   14001b818:	mov    QWORD PTR [r11-0x30],0xfffffffffffffffe
   14001b820:	mov    QWORD PTR [r11+0x10],rbx
   14001b824:	mov    QWORD PTR [r11+0x18],rsi
   14001b828:	mov    rdi,r8
   14001b82b:	mov    r15,rdx
   14001b82e:	mov    r14,rcx
   14001b831:	lea    rax,[r11-0x28]
   14001b835:	mov    QWORD PTR [r11-0x48],rax
   14001b839:	lea    r9,[r11+0x20]
   14001b83d:	lea    r8,[r11-0x38]
   14001b841:	call   0x14001bb6c
   14001b846:	mov    rsi,rax
   14001b849:	xor    ebx,ebx
   14001b84b:	test   rax,rax
   14001b84e:	jne    0x14001b8bc
   14001b850:	cmp    QWORD PTR [r14],rbx
   14001b853:	jne    0x14001b873
   14001b855:	mov    r8b,0x1
   14001b858:	mov    edx,DWORD PTR [r14+0x10]
   14001b85c:	mov    rcx,r14
   14001b85f:	call   0x14001bc2c
   14001b864:	test   al,al
   14001b866:	jne    0x14001b873
   14001b868:	mov    ecx,0x8007000e
   14001b86d:	call   0x140003e64
   14001b872:	int3   
   14001b873:	mov    r9d,DWORD PTR [rsp+0x88]
   14001b87b:	mov    r8d,DWORD PTR [rsp+0x30]
   14001b880:	mov    rdx,r15
   14001b883:	mov    rcx,r14
   14001b886:	call   0x14001c008
   14001b88b:	mov    rsi,rax
   14001b88e:	mov    QWORD PTR [rsp+0x88],rax
   14001b896:	lea    rcx,[rax+0x8]
   14001b89a:	test   rdi,rdi
   14001b89d:	je     0x14001b8ae
   14001b89f:	or     rax,0xffffffffffffffff
   14001b8a3:	inc    rax
   14001b8a6:	cmp    WORD PTR [rdi+rax*2],bx
   14001b8aa:	jne    0x14001b8a3
   14001b8ac:	mov    ebx,eax
   14001b8ae:	mov    r8d,ebx
   14001b8b1:	mov    rdx,rdi
   14001b8b4:	call   0x140005ae0
   14001b8b9:	nop
   14001b8ba:	jmp    0x14001b8df
   14001b8bc:	lea    rcx,[rax+0x8]
   14001b8c0:	test   rdi,rdi
   14001b8c3:	je     0x14001b8d4
   14001b8c5:	or     rax,0xffffffffffffffff
   14001b8c9:	inc    rax
   14001b8cc:	cmp    WORD PTR [rdi+rax*2],bx
   14001b8d0:	jne    0x14001b8c9
   14001b8d2:	mov    ebx,eax
   14001b8d4:	mov    r8d,ebx
   14001b8d7:	mov    rdx,rdi
   14001b8da:	call   0x140005ae0
   14001b8df:	mov    rax,rsi
   14001b8e2:	lea    r11,[rsp+0x50]
   14001b8e7:	mov    rbx,QWORD PTR [r11+0x28]
   14001b8eb:	mov    rsi,QWORD PTR [r11+0x30]
   14001b8ef:	mov    rsp,r11
   14001b8f2:	pop    r15
   14001b8f4:	pop    r14
   14001b8f6:	pop    rdi
   14001b8f7:	ret    
   14001b8f8:	rex push rdi
   14001b8fa:	sub    rsp,0x30
   14001b8fe:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001b907:	mov    QWORD PTR [rsp+0x40],rbx
   14001b90c:	mov    QWORD PTR [rsp+0x48],rsi
   14001b911:	mov    rdi,rcx
   14001b914:	inc    DWORD PTR [rcx+0x30]
   14001b917:	cmp    QWORD PTR [rcx],0x0
   14001b91b:	je     0x14001b949
   14001b91d:	xor    ebx,ebx
   14001b91f:	mov    DWORD PTR [rsp+0x20],ebx
   14001b923:	cmp    ebx,DWORD PTR [rdi+0x10]
   14001b926:	jae    0x14001b949
   14001b928:	mov    rax,QWORD PTR [rdi]
   14001b92b:	mov    rsi,QWORD PTR [rax+rbx*8]
   14001b92f:	test   rsi,rsi
   14001b932:	je     0x14001b945
   14001b934:	mov    rdx,rsi
   14001b937:	mov    rsi,QWORD PTR [rsi+0x10]
   14001b93b:	mov    rcx,rdi
   14001b93e:	call   0x14001c170
   14001b943:	jmp    0x14001b92f
   14001b945:	inc    ebx
   14001b947:	jmp    0x14001b91f
   14001b949:	mov    rcx,QWORD PTR [rdi]
   14001b94c:	call   0x14002b138
   14001b951:	and    QWORD PTR [rdi],0x0
   14001b955:	and    QWORD PTR [rdi+0x8],0x0
   14001b95a:	cmp    DWORD PTR [rdi+0x30],0x0
   14001b95e:	jne    0x14001b975
   14001b960:	xor    edx,edx
   14001b962:	mov    rcx,rdi
   14001b965:	call   0x14001bdcc
   14001b96a:	mov    DWORD PTR [rdi+0x10],eax
   14001b96d:	mov    rcx,rdi
   14001b970:	call   0x14001bf94
   14001b975:	and    QWORD PTR [rdi+0x40],0x0
   14001b97a:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b97e:	test   rcx,rcx
   14001b981:	je     0x14001b99a
   14001b983:	test   rcx,rcx
   14001b986:	je     0x14001b995
   14001b988:	mov    rbx,QWORD PTR [rcx]
   14001b98b:	call   0x140023328
   14001b990:	mov    rcx,rbx
   14001b993:	jmp    0x14001b983
   14001b995:	and    QWORD PTR [rdi+0x38],0x0
   14001b99a:	dec    DWORD PTR [rdi+0x30]
   14001b99d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b9a2:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b9a7:	add    rsp,0x30
   14001b9ab:	pop    rdi
   14001b9ac:	ret    
   14001b9ad:	int3   
   14001b9ae:	int3   
   14001b9af:	int3   
   14001b9b0:	mov    r11,rsp
   14001b9b3:	mov    QWORD PTR [r11+0x8],rcx
   14001b9b7:	push   rdi
   14001b9b8:	sub    rsp,0x50
   14001b9bc:	mov    QWORD PTR [r11-0x20],0xfffffffffffffffe
   14001b9c4:	mov    QWORD PTR [r11+0x10],rbx
   14001b9c8:	mov    QWORD PTR [r11+0x18],rsi
   14001b9cc:	mov    rbx,r8
   14001b9cf:	mov    rsi,rdx
   14001b9d2:	mov    rdi,rcx
   14001b9d5:	lea    rax,[r11-0x18]
   14001b9d9:	mov    QWORD PTR [r11-0x38],rax
   14001b9dd:	lea    r9,[r11+0x20]
   14001b9e1:	lea    r8,[r11-0x28]
   14001b9e5:	call   0x14001bbcc
   14001b9ea:	mov    r9,rax
   14001b9ed:	test   rax,rax
   14001b9f0:	jne    0x14001ba4a
   14001b9f2:	cmp    QWORD PTR [rdi],rax
   14001b9f5:	jne    0x14001ba14
   14001b9f7:	mov    r8b,0x1
   14001b9fa:	mov    edx,DWORD PTR [rdi+0x10]
   14001b9fd:	mov    rcx,rdi
   14001ba00:	call   0x14001bc2c
   14001ba05:	test   al,al
   14001ba07:	jne    0x14001ba14
   14001ba09:	mov    ecx,0x8007000e
   14001ba0e:	call   0x140003e64
   14001ba13:	int3   
   14001ba14:	mov    r9d,DWORD PTR [rsp+0x78]
   14001ba19:	mov    r8d,DWORD PTR [rsp+0x30]
   14001ba1e:	mov    rdx,rsi
   14001ba21:	mov    rcx,rdi
   14001ba24:	call   0x14001c334
   14001ba29:	mov    r9,rax
   14001ba2c:	mov    QWORD PTR [rsp+0x78],rax
   14001ba31:	mov    rax,QWORD PTR [rbx]
   14001ba34:	mov    QWORD PTR [r9+0x8],rax
   14001ba38:	mov    rax,QWORD PTR [rbx+0x8]
   14001ba3c:	mov    QWORD PTR [r9+0x10],rax
   14001ba40:	mov    rax,QWORD PTR [rbx+0x10]
   14001ba44:	mov    QWORD PTR [r9+0x18],rax
   14001ba48:	jmp    0x14001ba61
   14001ba4a:	mov    rax,QWORD PTR [rbx]
   14001ba4d:	mov    QWORD PTR [r9+0x8],rax
   14001ba51:	mov    rax,QWORD PTR [rbx+0x8]
   14001ba55:	mov    QWORD PTR [r9+0x10],rax
   14001ba59:	mov    rax,QWORD PTR [rbx+0x10]
   14001ba5d:	mov    QWORD PTR [r9+0x18],rax
   14001ba61:	mov    rax,r9
   14001ba64:	mov    rbx,QWORD PTR [rsp+0x68]
   14001ba69:	mov    rsi,QWORD PTR [rsp+0x70]
   14001ba6e:	add    rsp,0x50
   14001ba72:	pop    rdi
   14001ba73:	ret    
   14001ba74:	rex push rdi
   14001ba76:	sub    rsp,0x30
   14001ba7a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001ba83:	mov    QWORD PTR [rsp+0x40],rbx
   14001ba88:	mov    QWORD PTR [rsp+0x48],rsi
   14001ba8d:	mov    rdi,rcx
   14001ba90:	inc    DWORD PTR [rcx+0x30]
   14001ba93:	cmp    QWORD PTR [rcx],0x0
   14001ba97:	je     0x14001bac5
   14001ba99:	xor    ebx,ebx
   14001ba9b:	mov    DWORD PTR [rsp+0x20],ebx
   14001ba9f:	cmp    ebx,DWORD PTR [rdi+0x10]
   14001baa2:	jae    0x14001bac5
   14001baa4:	mov    rax,QWORD PTR [rdi]
   14001baa7:	mov    rsi,QWORD PTR [rax+rbx*8]
   14001baab:	test   rsi,rsi
   14001baae:	je     0x14001bac1
   14001bab0:	mov    rdx,rsi
   14001bab3:	mov    rsi,QWORD PTR [rsi+0x20]
   14001bab7:	mov    rcx,rdi
   14001baba:	call   0x14001c480
   14001babf:	jmp    0x14001baab
   14001bac1:	inc    ebx
   14001bac3:	jmp    0x14001ba9b
   14001bac5:	mov    rcx,QWORD PTR [rdi]
   14001bac8:	call   0x14002b138
   14001bacd:	and    QWORD PTR [rdi],0x0
   14001bad1:	and    QWORD PTR [rdi+0x8],0x0
   14001bad6:	cmp    DWORD PTR [rdi+0x30],0x0
   14001bada:	jne    0x14001baf1
   14001badc:	xor    edx,edx
   14001bade:	mov    rcx,rdi
   14001bae1:	call   0x14001bdcc
   14001bae6:	mov    DWORD PTR [rdi+0x10],eax
   14001bae9:	mov    rcx,rdi
   14001baec:	call   0x14001bf94
   14001baf1:	and    QWORD PTR [rdi+0x40],0x0
   14001baf6:	mov    rcx,QWORD PTR [rdi+0x38]
   14001bafa:	test   rcx,rcx
   14001bafd:	je     0x14001bb16
   14001baff:	test   rcx,rcx
   14001bb02:	je     0x14001bb11
   14001bb04:	mov    rbx,QWORD PTR [rcx]
   14001bb07:	call   0x140023328
   14001bb0c:	mov    rcx,rbx
   14001bb0f:	jmp    0x14001baff
   14001bb11:	and    QWORD PTR [rdi+0x38],0x0
   14001bb16:	dec    DWORD PTR [rdi+0x30]
   14001bb19:	mov    rbx,QWORD PTR [rsp+0x40]
   14001bb1e:	mov    rsi,QWORD PTR [rsp+0x48]
   14001bb23:	add    rsp,0x30
   14001bb27:	pop    rdi
   14001bb28:	ret    
   14001bb29:	int3   
   14001bb2a:	int3   
   14001bb2b:	int3   
   14001bb2c:	mov    rax,rdx
   14001bb2f:	mov    r10,rcx
   14001bb32:	test   rdx,rdx
   14001bb35:	jne    0x14001bb39
   14001bb37:	repz ret 
   14001bb39:	mov    r9,QWORD PTR [rdx+0x10]
   14001bb3d:	test   r9,r9
   14001bb40:	jne    0x14001bb66
   14001bb42:	mov    eax,DWORD PTR [rax+0x18]
   14001bb45:	xor    edx,edx
   14001bb47:	div    DWORD PTR [rcx+0x10]
   14001bb4a:	inc    edx
   14001bb4c:	cmp    edx,DWORD PTR [r10+0x10]
   14001bb50:	jae    0x14001bb66
   14001bb52:	mov    rcx,QWORD PTR [r10]
   14001bb55:	cmp    QWORD PTR [rcx+rdx*8],0x0
   14001bb5a:	cmovne r9,QWORD PTR [rcx+rdx*8]
   14001bb5f:	inc    edx
   14001bb61:	test   r9,r9
   14001bb64:	je     0x14001bb4c
   14001bb66:	mov    rax,r9
   14001bb69:	ret    
   14001bb6a:	int3   
   14001bb6b:	int3   
   14001bb6c:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb71:	mov    DWORD PTR [r9],edx
   14001bb74:	mov    r11,rdx
   14001bb77:	xor    edx,edx
   14001bb79:	mov    eax,r11d
   14001bb7c:	mov    rbx,r8
   14001bb7f:	mov    r10,rcx
   14001bb82:	div    DWORD PTR [rcx+0x10]
   14001bb85:	mov    DWORD PTR [r8],edx
   14001bb88:	cmp    QWORD PTR [rcx],0x0
   14001bb8c:	je     0x14001bbbf
   14001bb8e:	mov    r8,QWORD PTR [rsp+0x28]
   14001bb93:	xor    edx,edx
   14001bb95:	and    QWORD PTR [r8],rdx
   14001bb98:	mov    ecx,DWORD PTR [rbx]
   14001bb9a:	mov    rax,QWORD PTR [r10]
   14001bb9d:	mov    rax,QWORD PTR [rax+rcx*8]
   14001bba1:	test   rax,rax
   14001bba4:	je     0x14001bbbf
   14001bba6:	mov    ecx,DWORD PTR [r9]
   14001bba9:	cmp    DWORD PTR [rax+0x18],ecx
   14001bbac:	jne    0x14001bbb3
   14001bbae:	cmp    QWORD PTR [rax],r11
   14001bbb1:	je     0x14001bbc7
   14001bbb3:	mov    rdx,rax
   14001bbb6:	mov    rax,QWORD PTR [rax+0x10]
   14001bbba:	test   rax,rax
   14001bbbd:	jne    0x14001bba9
   14001bbbf:	xor    eax,eax
   14001bbc1:	mov    rbx,QWORD PTR [rsp+0x8]
   14001bbc6:	ret    
   14001bbc7:	mov    QWORD PTR [r8],rdx
   14001bbca:	jmp    0x14001bbc1
   14001bbcc:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbd1:	mov    DWORD PTR [r9],edx
   14001bbd4:	mov    r11,rdx
   14001bbd7:	xor    edx,edx
   14001bbd9:	mov    eax,r11d
   14001bbdc:	mov    rbx,r8
   14001bbdf:	mov    r10,rcx
   14001bbe2:	div    DWORD PTR [rcx+0x10]
   14001bbe5:	mov    DWORD PTR [r8],edx
   14001bbe8:	cmp    QWORD PTR [rcx],0x0
   14001bbec:	je     0x14001bc1f
   14001bbee:	mov    r8,QWORD PTR [rsp+0x28]
   14001bbf3:	xor    edx,edx
   14001bbf5:	and    QWORD PTR [r8],rdx
   14001bbf8:	mov    ecx,DWORD PTR [rbx]
   14001bbfa:	mov    rax,QWORD PTR [r10]
   14001bbfd:	mov    rax,QWORD PTR [rax+rcx*8]
   14001bc01:	test   rax,rax
   14001bc04:	je     0x14001bc1f
   14001bc06:	mov    ecx,DWORD PTR [r9]
   14001bc09:	cmp    DWORD PTR [rax+0x28],ecx
   14001bc0c:	jne    0x14001bc13
   14001bc0e:	cmp    QWORD PTR [rax],r11
   14001bc11:	je     0x14001bc27
   14001bc13:	mov    rdx,rax
   14001bc16:	mov    rax,QWORD PTR [rax+0x20]
   14001bc1a:	test   rax,rax
   14001bc1d:	jne    0x14001bc09
   14001bc1f:	xor    eax,eax
   14001bc21:	mov    rbx,QWORD PTR [rsp+0x8]
   14001bc26:	ret    
   14001bc27:	mov    QWORD PTR [r8],rdx
   14001bc2a:	jmp    0x14001bc21
   14001bc2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc31:	mov    QWORD PTR [rsp+0x10],rsi
   14001bc36:	push   rdi
   14001bc37:	sub    rsp,0x20
   14001bc3b:	mov    rbx,rcx
   14001bc3e:	mov    rcx,QWORD PTR [rcx]
   14001bc41:	mov    sil,r8b
   14001bc44:	mov    edi,edx
   14001bc46:	test   rcx,rcx
   14001bc49:	je     0x14001bc54
   14001bc4b:	call   0x14002b138
   14001bc50:	and    QWORD PTR [rbx],0x0
   14001bc54:	test   sil,sil
   14001bc57:	je     0x14001bc9c
   14001bc59:	mov    rcx,0xffffffffffffffff
   14001bc60:	mov    eax,0x8
   14001bc65:	mul    rdi
   14001bc68:	lea    rdx,[rip+0x34fd9]        # 0x140050c48
   14001bc6f:	cmovo  rax,rcx
   14001bc73:	mov    rcx,rax
   14001bc76:	call   0x14002c004
   14001bc7b:	mov    QWORD PTR [rbx],rax
   14001bc7e:	test   rax,rax
   14001bc81:	je     0x14001bca9
   14001bc83:	cmp    edi,0x1fffffff
   14001bc89:	ja     0x14001bcb9
   14001bc8b:	mov    r8,rdi
   14001bc8e:	xor    edx,edx
   14001bc90:	mov    rcx,rax
   14001bc93:	shl    r8,0x3
   14001bc97:	call   0x1400260e0
   14001bc9c:	mov    rcx,rbx
   14001bc9f:	mov    DWORD PTR [rbx+0x10],edi
   14001bca2:	call   0x14001bf94
   14001bca7:	mov    al,0x1
   14001bca9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bcae:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bcb3:	add    rsp,0x20
   14001bcb7:	pop    rdi
   14001bcb8:	ret    
   14001bcb9:	mov    ecx,0x80004005
   14001bcbe:	call   0x140003e64
   14001bcc3:	int3   
   14001bcc4:	mov    QWORD PTR [rsp+0x8],rbx
   14001bcc9:	mov    QWORD PTR [rsp+0x10],rbp
   14001bcce:	mov    QWORD PTR [rsp+0x18],rsi
   14001bcd3:	push   rdi
   14001bcd4:	sub    rsp,0x20
   14001bcd8:	mov    edi,edx
   14001bcda:	mov    rbx,rcx
   14001bcdd:	test   edx,edx
   14001bcdf:	jne    0x14001bcec
   14001bce1:	mov    rdx,QWORD PTR [rcx+0x8]
   14001bce5:	call   0x14001bdcc
   14001bcea:	mov    edi,eax
   14001bcec:	cmp    edi,DWORD PTR [rbx+0x10]
   14001bcef:	je     0x14001bda0
   14001bcf5:	cmp    QWORD PTR [rbx],0x0
   14001bcf9:	je     0x14001bd95
   14001bcff:	mov    rcx,0xffffffffffffffff
   14001bd06:	mov    ebp,edi
   14001bd08:	mov    eax,0x8
   14001bd0d:	mul    rbp
   14001bd10:	lea    rdx,[rip+0x34f31]        # 0x140050c48
   14001bd17:	cmovo  rax,rcx
   14001bd1b:	mov    rcx,rax
   14001bd1e:	call   0x14002c004
   14001bd23:	mov    rsi,rax
   14001bd26:	test   rax,rax
   14001bd29:	je     0x14001bdb5
   14001bd2f:	cmp    edi,0x1fffffff
   14001bd35:	ja     0x14001bdc0
   14001bd3b:	mov    r8d,ebp
   14001bd3e:	xor    edx,edx
   14001bd40:	mov    rcx,rax
   14001bd43:	shl    r8,0x3
   14001bd47:	call   0x1400260e0
   14001bd4c:	xor    r9d,r9d
   14001bd4f:	cmp    DWORD PTR [rbx+0x10],r9d
   14001bd53:	jbe    0x14001bd8a
   14001bd55:	mov    rax,QWORD PTR [rbx]
   14001bd58:	mov    r10,QWORD PTR [rax+r9*8]
   14001bd5c:	test   r10,r10
   14001bd5f:	je     0x14001bd81
   14001bd61:	mov    eax,DWORD PTR [r10+0x18]
   14001bd65:	mov    r8,QWORD PTR [r10+0x10]
   14001bd69:	xor    edx,edx
   14001bd6b:	div    edi
   14001bd6d:	mov    rax,QWORD PTR [rsi+rdx*8]
   14001bd71:	mov    QWORD PTR [r10+0x10],rax
   14001bd75:	mov    QWORD PTR [rsi+rdx*8],r10
   14001bd79:	mov    r10,r8
   14001bd7c:	test   r8,r8
   14001bd7f:	jne    0x14001bd61
   14001bd81:	inc    r9d
   14001bd84:	cmp    r9d,DWORD PTR [rbx+0x10]
   14001bd88:	jb     0x14001bd55
   14001bd8a:	mov    rcx,QWORD PTR [rbx]
   14001bd8d:	call   0x14002b138
   14001bd92:	mov    QWORD PTR [rbx],rsi
   14001bd95:	mov    rcx,rbx
   14001bd98:	mov    DWORD PTR [rbx+0x10],edi
   14001bd9b:	call   0x14001bf94
   14001bda0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bda5:	mov    rbp,QWORD PTR [rsp+0x38]
   14001bdaa:	mov    rsi,QWORD PTR [rsp+0x40]
   14001bdaf:	add    rsp,0x20
   14001bdb3:	pop    rdi
   14001bdb4:	ret    
   14001bdb5:	mov    ecx,0x8007000e
   14001bdba:	call   0x140003e64
   14001bdbf:	int3   
   14001bdc0:	mov    ecx,0x80004005
   14001bdc5:	call   0x140003e64
   14001bdca:	int3   
   14001bdcb:	int3   
   14001bdcc:	xorps  xmm0,xmm0
   14001bdcf:	cvtsi2ss xmm0,rdx
   14001bdd4:	test   rdx,rdx
   14001bdd7:	jns    0x14001bde1
   14001bdd9:	addss  xmm0,DWORD PTR [rip+0x23823]        # 0x14003f604
   14001bde1:	divss  xmm0,DWORD PTR [rcx+0x14]
   14001bde6:	movss  xmm1,DWORD PTR [rip+0x23812]        # 0x14003f600
   14001bdee:	xor    eax,eax
   14001bdf0:	comiss xmm0,xmm1
   14001bdf3:	jb     0x14001be0b
   14001bdf5:	subss  xmm0,xmm1
   14001bdf9:	comiss xmm0,xmm1
   14001bdfc:	jae    0x14001be0b
   14001bdfe:	movabs rcx,0x8000000000000000
   14001be08:	mov    rax,rcx
   14001be0b:	mov    r9d,0xffffffff
   14001be11:	cvttss2si rcx,xmm0
   14001be16:	lea    r8,[rip+0x21ae3]        # 0x14003d900
   14001be1d:	add    rcx,rax
   14001be20:	cmp    rcx,r9
   14001be23:	cmova  ecx,r9d
   14001be27:	xor    edx,edx
   14001be29:	cmp    ecx,0x11
   14001be2c:	jbe    0x14001be3b
   14001be2e:	mov    rax,r8
   14001be31:	lea    rax,[rax+0x4]
   14001be35:	inc    edx
   14001be37:	cmp    ecx,DWORD PTR [rax]
   14001be39:	ja     0x14001be31
   14001be3b:	movsxd rax,edx
   14001be3e:	mov    eax,DWORD PTR [r8+rax*4]
   14001be42:	cmp    eax,r9d
   14001be45:	cmove  eax,ecx
   14001be48:	ret    
   14001be49:	int3   
   14001be4a:	int3   
   14001be4b:	int3   
   14001be4c:	mov    rax,rsp
   14001be4f:	mov    QWORD PTR [rax+0x8],rcx
   14001be53:	push   rdi
   14001be54:	push   r14
   14001be56:	push   r15
   14001be58:	sub    rsp,0x40
   14001be5c:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001be64:	mov    QWORD PTR [rax+0x10],rbx
   14001be68:	mov    QWORD PTR [rax+0x18],rsi
   14001be6c:	mov    esi,r9d
   14001be6f:	mov    r15d,r8d
   14001be72:	mov    r14d,edx
   14001be75:	mov    rbx,rcx
   14001be78:	cmp    QWORD PTR [rcx+0x40],0x0
   14001be7d:	jne    0x14001bf0f
   14001be83:	mov    ecx,DWORD PTR [rcx+0x34]
   14001be86:	test   rcx,rcx
   14001be89:	jne    0x14001be91
   14001be8b:	or     r8,0xffffffffffffffff
   14001be8f:	jmp    0x14001bea7
   14001be91:	xor    edx,edx
   14001be93:	or     r8,0xffffffffffffffff
   14001be97:	mov    rax,r8
   14001be9a:	div    rcx
   14001be9d:	cmp    rax,0x20
   14001bea1:	jb     0x14001bece
   14001bea3:	shl    rcx,0x5
   14001bea7:	sub    r8,rcx
   14001beaa:	cmp    r8,0x10
   14001beae:	jb     0x14001bece
   14001beb0:	add    rcx,0x10
   14001beb4:	call   0x140026354
   14001beb9:	mov    rdx,rax
   14001bebc:	test   rax,rax
   14001bebf:	je     0x14001bed5
   14001bec1:	mov    rcx,QWORD PTR [rbx+0x38]
   14001bec5:	mov    QWORD PTR [rax],rcx
   14001bec8:	mov    QWORD PTR [rbx+0x38],rax
   14001becc:	jmp    0x14001bed0
   14001bece:	xor    edx,edx
   14001bed0:	test   rdx,rdx
   14001bed3:	jne    0x14001bee0
   14001bed5:	mov    ecx,0x8007000e
   14001beda:	call   0x140003e64
   14001bedf:	int3   
   14001bee0:	mov    r8d,DWORD PTR [rbx+0x34]
   14001bee4:	dec    r8d
   14001bee7:	mov    ecx,r8d
   14001beea:	shl    rcx,0x5
   14001beee:	add    rcx,0x10
   14001bef2:	add    rcx,rdx
   14001bef5:	test   r8d,r8d
   14001bef8:	js     0x14001bf0f
   14001befa:	mov    rax,QWORD PTR [rbx+0x40]
   14001befe:	mov    QWORD PTR [rcx+0x10],rax
   14001bf02:	mov    QWORD PTR [rbx+0x40],rcx
   14001bf06:	sub    rcx,0x20
   14001bf0a:	dec    r8d
   14001bf0d:	jns    0x14001befa
   14001bf0f:	mov    rdi,QWORD PTR [rbx+0x40]
   14001bf13:	xor    eax,eax
   14001bf15:	test   rdi,rdi
   14001bf18:	setne  al
   14001bf1b:	test   eax,eax
   14001bf1d:	jne    0x14001bf2a
   14001bf1f:	mov    ecx,0x80004005
   14001bf24:	call   0x140003e64
   14001bf29:	int3   
   14001bf2a:	mov    QWORD PTR [rsp+0x20],rdi
   14001bf2f:	mov    rax,QWORD PTR [rdi+0x10]
   14001bf33:	mov    QWORD PTR [rbx+0x40],rax
   14001bf37:	mov    QWORD PTR [rsp+0x30],rdi
   14001bf3c:	mov    DWORD PTR [rdi],r14d
   14001bf3f:	mov    DWORD PTR [rdi+0x18],esi
   14001bf42:	inc    QWORD PTR [rbx+0x8]
   14001bf46:	mov    rax,QWORD PTR [rbx]
   14001bf49:	mov    rcx,QWORD PTR [rax+r15*8]
   14001bf4d:	mov    QWORD PTR [rdi+0x10],rcx
   14001bf51:	mov    rax,QWORD PTR [rbx]
   14001bf54:	mov    QWORD PTR [rax+r15*8],rdi
   14001bf58:	mov    rdx,QWORD PTR [rbx+0x8]
   14001bf5c:	cmp    rdx,QWORD PTR [rbx+0x20]
   14001bf60:	jbe    0x14001bf7a
   14001bf62:	cmp    DWORD PTR [rbx+0x30],0x0
   14001bf66:	jne    0x14001bf7a
   14001bf68:	mov    rcx,rbx
   14001bf6b:	call   0x14001bdcc
   14001bf70:	mov    edx,eax
   14001bf72:	mov    rcx,rbx
   14001bf75:	call   0x14001bcc4
   14001bf7a:	mov    rax,rdi
   14001bf7d:	mov    rbx,QWORD PTR [rsp+0x68]
   14001bf82:	mov    rsi,QWORD PTR [rsp+0x70]
   14001bf87:	add    rsp,0x40
   14001bf8b:	pop    r15
   14001bf8d:	pop    r14
   14001bf8f:	pop    rdi
   14001bf90:	ret    
   14001bf91:	int3   
   14001bf92:	int3   
   14001bf93:	int3   
   14001bf94:	mov    eax,DWORD PTR [rcx+0x10]
   14001bf97:	movss  xmm2,DWORD PTR [rip+0x23661]        # 0x14003f600
   14001bf9f:	xorps  xmm0,xmm0
   14001bfa2:	xor    edx,edx
   14001bfa4:	movabs r8,0x8000000000000000
   14001bfae:	cvtsi2ss xmm0,rax
   14001bfb3:	movaps xmm1,xmm0
   14001bfb6:	mulss  xmm1,DWORD PTR [rcx+0x1c]
   14001bfbb:	comiss xmm1,xmm2
   14001bfbe:	jb     0x14001bfcc
   14001bfc0:	subss  xmm1,xmm2
   14001bfc4:	comiss xmm1,xmm2
   14001bfc7:	jae    0x14001bfcc
   14001bfc9:	mov    rdx,r8
   14001bfcc:	mulss  xmm0,DWORD PTR [rcx+0x18]
   14001bfd1:	cvttss2si rax,xmm1
   14001bfd6:	add    rax,rdx
   14001bfd9:	xor    edx,edx
   14001bfdb:	comiss xmm0,xmm2
   14001bfde:	mov    QWORD PTR [rcx+0x20],rax
   14001bfe2:	jb     0x14001bff0
   14001bfe4:	subss  xmm0,xmm2
   14001bfe8:	comiss xmm0,xmm2
   14001bfeb:	jae    0x14001bff0
   14001bfed:	mov    rdx,r8
   14001bff0:	cvttss2si rax,xmm0
   14001bff5:	add    rax,rdx
   14001bff8:	xor    edx,edx
   14001bffa:	cmp    rax,0x11
   14001bffe:	cmovb  rax,rdx
   14001c002:	mov    QWORD PTR [rcx+0x28],rax
   14001c006:	ret    
   14001c007:	int3   
   14001c008:	mov    rax,rsp
   14001c00b:	mov    QWORD PTR [rax+0x8],rcx
   14001c00f:	push   rdi
   14001c010:	push   r14
   14001c012:	push   r15
   14001c014:	sub    rsp,0x40
   14001c018:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001c020:	mov    QWORD PTR [rax+0x10],rbx
   14001c024:	mov    QWORD PTR [rax+0x18],rsi
   14001c028:	mov    r14d,r9d
   14001c02b:	mov    r15d,r8d
   14001c02e:	mov    rbx,rdx
   14001c031:	mov    rdi,rcx
   14001c034:	cmp    QWORD PTR [rcx+0x40],0x0
   14001c039:	jne    0x14001c0cb
   14001c03f:	mov    ecx,DWORD PTR [rcx+0x34]
   14001c042:	test   rcx,rcx
   14001c045:	jne    0x14001c04d
   14001c047:	or     r8,0xffffffffffffffff
   14001c04b:	jmp    0x14001c063
   14001c04d:	xor    edx,edx
   14001c04f:	or     r8,0xffffffffffffffff
   14001c053:	mov    rax,r8
   14001c056:	div    rcx
   14001c059:	cmp    rax,0x20
   14001c05d:	jb     0x14001c08a
   14001c05f:	shl    rcx,0x5
   14001c063:	sub    r8,rcx
   14001c066:	cmp    r8,0x10
   14001c06a:	jb     0x14001c08a
   14001c06c:	add    rcx,0x10
   14001c070:	call   0x140026354
   14001c075:	mov    rdx,rax
   14001c078:	test   rax,rax
   14001c07b:	je     0x14001c091
   14001c07d:	mov    rcx,QWORD PTR [rdi+0x38]
   14001c081:	mov    QWORD PTR [rax],rcx
   14001c084:	mov    QWORD PTR [rdi+0x38],rax
   14001c088:	jmp    0x14001c08c
   14001c08a:	xor    edx,edx
   14001c08c:	test   rdx,rdx
   14001c08f:	jne    0x14001c09c
   14001c091:	mov    ecx,0x8007000e
   14001c096:	call   0x140003e64
   14001c09b:	int3   
   14001c09c:	mov    r8d,DWORD PTR [rdi+0x34]
   14001c0a0:	dec    r8d
   14001c0a3:	mov    ecx,r8d
   14001c0a6:	shl    rcx,0x5
   14001c0aa:	add    rcx,0x10
   14001c0ae:	add    rcx,rdx
   14001c0b1:	test   r8d,r8d
   14001c0b4:	js     0x14001c0cb
   14001c0b6:	mov    rax,QWORD PTR [rdi+0x40]
   14001c0ba:	mov    QWORD PTR [rcx+0x10],rax
   14001c0be:	mov    QWORD PTR [rdi+0x40],rcx
   14001c0c2:	sub    rcx,0x20
   14001c0c6:	dec    r8d
   14001c0c9:	jns    0x14001c0b6
   14001c0cb:	mov    rsi,QWORD PTR [rdi+0x40]
   14001c0cf:	xor    eax,eax
   14001c0d1:	test   rsi,rsi
   14001c0d4:	setne  al
   14001c0d7:	test   eax,eax
   14001c0d9:	jne    0x14001c0e6
   14001c0db:	mov    ecx,0x80004005
   14001c0e0:	call   0x140003e64
   14001c0e5:	int3   
   14001c0e6:	mov    QWORD PTR [rsp+0x20],rsi
   14001c0eb:	mov    rax,QWORD PTR [rsi+0x10]
   14001c0ef:	mov    QWORD PTR [rdi+0x40],rax
   14001c0f3:	mov    QWORD PTR [rsp+0x30],rsi
   14001c0f8:	mov    QWORD PTR [rsi],rbx
   14001c0fb:	lea    rbx,[rsi+0x8]
   14001c0ff:	mov    QWORD PTR [rsp+0x38],rbx
   14001c104:	lea    rcx,[rip+0x32355]        # 0x14004e460
   14001c10b:	mov    rax,QWORD PTR [rip+0x3234e]        # 0x14004e460
   14001c112:	call   QWORD PTR [rax+0x18]
   14001c115:	add    rax,0x18
   14001c119:	mov    QWORD PTR [rbx],rax
   14001c11c:	mov    DWORD PTR [rsi+0x18],r14d
   14001c120:	inc    QWORD PTR [rdi+0x8]
   14001c124:	mov    rax,QWORD PTR [rdi]
   14001c127:	mov    rcx,QWORD PTR [rax+r15*8]
   14001c12b:	mov    QWORD PTR [rsi+0x10],rcx
   14001c12f:	mov    rax,QWORD PTR [rdi]
   14001c132:	mov    QWORD PTR [rax+r15*8],rsi
   14001c136:	mov    rdx,QWORD PTR [rdi+0x8]
   14001c13a:	cmp    rdx,QWORD PTR [rdi+0x20]
   14001c13e:	jbe    0x14001c158
   14001c140:	cmp    DWORD PTR [rdi+0x30],0x0
   14001c144:	jne    0x14001c158
   14001c146:	mov    rcx,rdi
   14001c149:	call   0x14001bdcc
   14001c14e:	mov    edx,eax
   14001c150:	mov    rcx,rdi
   14001c153:	call   0x14001bcc4
   14001c158:	mov    rax,rsi
   14001c15b:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c160:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c165:	add    rsp,0x40
   14001c169:	pop    r15
   14001c16b:	pop    r14
   14001c16d:	pop    rdi
   14001c16e:	ret    
   14001c16f:	int3   
   14001c170:	mov    QWORD PTR [rsp+0x10],rdx
   14001c175:	push   rdi
   14001c176:	sub    rsp,0x30
   14001c17a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c183:	mov    QWORD PTR [rsp+0x40],rbx
   14001c188:	mov    rbx,rdx
   14001c18b:	mov    rdi,rcx
   14001c18e:	xor    eax,eax
   14001c190:	test   rdx,rdx
   14001c193:	setne  al
   14001c196:	test   eax,eax
   14001c198:	jne    0x14001c1a5
   14001c19a:	mov    ecx,0x80004005
   14001c19f:	call   0x140003e64
   14001c1a4:	nop
   14001c1a5:	lea    rax,[rdx+0x8]
   14001c1a9:	mov    QWORD PTR [rsp+0x48],rax
   14001c1ae:	mov    rdx,QWORD PTR [rax]
   14001c1b1:	sub    rdx,0x18
   14001c1b5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001c1ba:	jg     0x14001c1c5
   14001c1bc:	mov    rcx,QWORD PTR [rdx]
   14001c1bf:	mov    rax,QWORD PTR [rcx]
   14001c1c2:	call   QWORD PTR [rax+0x8]
   14001c1c5:	mov    rax,QWORD PTR [rdi+0x40]
   14001c1c9:	mov    QWORD PTR [rbx+0x10],rax
   14001c1cd:	mov    QWORD PTR [rdi+0x40],rbx
   14001c1d1:	dec    QWORD PTR [rdi+0x8]
   14001c1d5:	mov    rdx,QWORD PTR [rdi+0x8]
   14001c1d9:	cmp    rdx,QWORD PTR [rdi+0x28]
   14001c1dd:	jae    0x14001c1f7
   14001c1df:	cmp    DWORD PTR [rdi+0x30],0x0
   14001c1e3:	jne    0x14001c1f7
   14001c1e5:	mov    rcx,rdi
   14001c1e8:	call   0x14001bdcc
   14001c1ed:	mov    edx,eax
   14001c1ef:	mov    rcx,rdi
   14001c1f2:	call   0x14001bcc4
   14001c1f7:	cmp    QWORD PTR [rdi+0x8],0x0
   14001c1fc:	jne    0x14001c220
   14001c1fe:	and    QWORD PTR [rdi+0x40],0x0
   14001c203:	mov    rcx,QWORD PTR [rdi+0x38]
   14001c207:	test   rcx,rcx
   14001c20a:	je     0x14001c220
   14001c20c:	mov    rbx,QWORD PTR [rcx]
   14001c20f:	call   0x140023328
   14001c214:	mov    rcx,rbx
   14001c217:	test   rbx,rbx
   14001c21a:	jne    0x14001c20c
   14001c21c:	and    QWORD PTR [rdi+0x38],rbx
   14001c220:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c225:	add    rsp,0x30
   14001c229:	pop    rdi
   14001c22a:	ret    
   14001c22b:	int3   
   14001c22c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c231:	mov    QWORD PTR [rsp+0x10],rbp
   14001c236:	mov    QWORD PTR [rsp+0x18],rsi
   14001c23b:	push   rdi
   14001c23c:	sub    rsp,0x20
   14001c240:	mov    edi,edx
   14001c242:	mov    rbx,rcx
   14001c245:	test   edx,edx
   14001c247:	jne    0x14001c254
   14001c249:	mov    rdx,QWORD PTR [rcx+0x8]
   14001c24d:	call   0x14001bdcc
   14001c252:	mov    edi,eax
   14001c254:	cmp    edi,DWORD PTR [rbx+0x10]
   14001c257:	je     0x14001c308
   14001c25d:	cmp    QWORD PTR [rbx],0x0
   14001c261:	je     0x14001c2fd
   14001c267:	mov    rcx,0xffffffffffffffff
   14001c26e:	mov    ebp,edi
   14001c270:	mov    eax,0x8
   14001c275:	mul    rbp
   14001c278:	lea    rdx,[rip+0x349c9]        # 0x140050c48
   14001c27f:	cmovo  rax,rcx
   14001c283:	mov    rcx,rax
   14001c286:	call   0x14002c004
   14001c28b:	mov    rsi,rax
   14001c28e:	test   rax,rax
   14001c291:	je     0x14001c31d
   14001c297:	cmp    edi,0x1fffffff
   14001c29d:	ja     0x14001c328
   14001c2a3:	mov    r8d,ebp
   14001c2a6:	xor    edx,edx
   14001c2a8:	mov    rcx,rax
   14001c2ab:	shl    r8,0x3
   14001c2af:	call   0x1400260e0
   14001c2b4:	xor    r9d,r9d
   14001c2b7:	cmp    DWORD PTR [rbx+0x10],r9d
   14001c2bb:	jbe    0x14001c2f2
   14001c2bd:	mov    rax,QWORD PTR [rbx]
   14001c2c0:	mov    r10,QWORD PTR [rax+r9*8]
   14001c2c4:	test   r10,r10
   14001c2c7:	je     0x14001c2e9
   14001c2c9:	mov    eax,DWORD PTR [r10+0x28]
   14001c2cd:	mov    r8,QWORD PTR [r10+0x20]
   14001c2d1:	xor    edx,edx
   14001c2d3:	div    edi
   14001c2d5:	mov    rax,QWORD PTR [rsi+rdx*8]
   14001c2d9:	mov    QWORD PTR [r10+0x20],rax
   14001c2dd:	mov    QWORD PTR [rsi+rdx*8],r10
   14001c2e1:	mov    r10,r8
   14001c2e4:	test   r8,r8
   14001c2e7:	jne    0x14001c2c9
   14001c2e9:	inc    r9d
   14001c2ec:	cmp    r9d,DWORD PTR [rbx+0x10]
   14001c2f0:	jb     0x14001c2bd
   14001c2f2:	mov    rcx,QWORD PTR [rbx]
   14001c2f5:	call   0x14002b138
   14001c2fa:	mov    QWORD PTR [rbx],rsi
   14001c2fd:	mov    rcx,rbx
   14001c300:	mov    DWORD PTR [rbx+0x10],edi
   14001c303:	call   0x14001bf94
   14001c308:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c30d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c312:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c317:	add    rsp,0x20
   14001c31b:	pop    rdi
   14001c31c:	ret    
   14001c31d:	mov    ecx,0x8007000e
   14001c322:	call   0x140003e64
   14001c327:	int3   
   14001c328:	mov    ecx,0x80004005
   14001c32d:	call   0x140003e64
   14001c332:	int3   
   14001c333:	int3   
   14001c334:	mov    rax,rsp
   14001c337:	mov    QWORD PTR [rax+0x8],rcx
   14001c33b:	push   rdi
   14001c33c:	push   r14
   14001c33e:	push   r15
   14001c340:	sub    rsp,0x40
   14001c344:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001c34c:	mov    QWORD PTR [rax+0x10],rbx
   14001c350:	mov    QWORD PTR [rax+0x18],rsi
   14001c354:	mov    esi,r9d
   14001c357:	mov    r15d,r8d
   14001c35a:	mov    r14,rdx
   14001c35d:	mov    rbx,rcx
   14001c360:	cmp    QWORD PTR [rcx+0x40],0x0
   14001c365:	jne    0x14001c3fc
   14001c36b:	mov    ecx,DWORD PTR [rcx+0x34]
   14001c36e:	test   rcx,rcx
   14001c371:	jne    0x14001c379
   14001c373:	or     r8,0xffffffffffffffff
   14001c377:	jmp    0x14001c393
   14001c379:	xor    edx,edx
   14001c37b:	or     r8,0xffffffffffffffff
   14001c37f:	mov    rax,r8
   14001c382:	div    rcx
   14001c385:	cmp    rax,0x30
   14001c389:	jb     0x14001c3ba
   14001c38b:	lea    rcx,[rcx+rcx*2]
   14001c38f:	shl    rcx,0x4
   14001c393:	sub    r8,rcx
   14001c396:	cmp    r8,0x10
   14001c39a:	jb     0x14001c3ba
   14001c39c:	add    rcx,0x10
   14001c3a0:	call   0x140026354
   14001c3a5:	mov    rdx,rax
   14001c3a8:	test   rax,rax
   14001c3ab:	je     0x14001c3c1
   14001c3ad:	mov    rcx,QWORD PTR [rbx+0x38]
   14001c3b1:	mov    QWORD PTR [rax],rcx
   14001c3b4:	mov    QWORD PTR [rbx+0x38],rax
   14001c3b8:	jmp    0x14001c3bc
   14001c3ba:	xor    edx,edx
   14001c3bc:	test   rdx,rdx
   14001c3bf:	jne    0x14001c3cc
   14001c3c1:	mov    ecx,0x8007000e
   14001c3c6:	call   0x140003e64
   14001c3cb:	int3   
   14001c3cc:	mov    r9d,DWORD PTR [rbx+0x34]
   14001c3d0:	dec    r9d
   14001c3d3:	lea    r8,[r9+r9*2]
   14001c3d7:	shl    r8,0x4
   14001c3db:	add    r8,0x10
   14001c3df:	add    r8,rdx
   14001c3e2:	test   r9d,r9d
   14001c3e5:	js     0x14001c3fc
   14001c3e7:	mov    rax,QWORD PTR [rbx+0x40]
   14001c3eb:	mov    QWORD PTR [r8+0x20],rax
   14001c3ef:	mov    QWORD PTR [rbx+0x40],r8
   14001c3f3:	sub    r8,0x30
   14001c3f7:	dec    r9d
   14001c3fa:	jns    0x14001c3e7
   14001c3fc:	mov    rdi,QWORD PTR [rbx+0x40]
   14001c400:	xor    eax,eax
   14001c402:	test   rdi,rdi
   14001c405:	setne  al
   14001c408:	test   eax,eax
   14001c40a:	jne    0x14001c417
   14001c40c:	mov    ecx,0x80004005
   14001c411:	call   0x140003e64
   14001c416:	int3   
   14001c417:	mov    QWORD PTR [rsp+0x20],rdi
   14001c41c:	mov    rax,QWORD PTR [rdi+0x20]
   14001c420:	mov    QWORD PTR [rbx+0x40],rax
   14001c424:	mov    QWORD PTR [rsp+0x30],rdi
   14001c429:	mov    QWORD PTR [rdi],r14
   14001c42c:	mov    DWORD PTR [rdi+0x28],esi
   14001c42f:	inc    QWORD PTR [rbx+0x8]
   14001c433:	mov    rax,QWORD PTR [rbx]
   14001c436:	mov    rcx,QWORD PTR [rax+r15*8]
   14001c43a:	mov    QWORD PTR [rdi+0x20],rcx
   14001c43e:	mov    rax,QWORD PTR [rbx]
   14001c441:	mov    QWORD PTR [rax+r15*8],rdi
   14001c445:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c449:	cmp    rdx,QWORD PTR [rbx+0x20]
   14001c44d:	jbe    0x14001c467
   14001c44f:	cmp    DWORD PTR [rbx+0x30],0x0
   14001c453:	jne    0x14001c467
   14001c455:	mov    rcx,rbx
   14001c458:	call   0x14001bdcc
   14001c45d:	mov    edx,eax
   14001c45f:	mov    rcx,rbx
   14001c462:	call   0x14001c22c
   14001c467:	mov    rax,rdi
   14001c46a:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c46f:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c474:	add    rsp,0x40
   14001c478:	pop    r15
   14001c47a:	pop    r14
   14001c47c:	pop    rdi
   14001c47d:	ret    
   14001c47e:	int3   
   14001c47f:	int3   
   14001c480:	mov    QWORD PTR [rsp+0x8],rbx
   14001c485:	push   rdi
   14001c486:	sub    rsp,0x20
   14001c48a:	mov    rdi,rcx
   14001c48d:	test   rdx,rdx
   14001c490:	je     0x14001c4f5
   14001c492:	mov    rax,QWORD PTR [rcx+0x40]
   14001c496:	mov    QWORD PTR [rdx+0x20],rax
   14001c49a:	dec    QWORD PTR [rcx+0x8]
   14001c49e:	mov    QWORD PTR [rcx+0x40],rdx
   14001c4a2:	mov    rdx,QWORD PTR [rcx+0x8]
   14001c4a6:	cmp    rdx,QWORD PTR [rcx+0x28]
   14001c4aa:	jae    0x14001c4c1
   14001c4ac:	cmp    DWORD PTR [rcx+0x30],0x0
   14001c4b0:	jne    0x14001c4c1
   14001c4b2:	call   0x14001bdcc
   14001c4b7:	mov    rcx,rdi
   14001c4ba:	mov    edx,eax
   14001c4bc:	call   0x14001c22c
   14001c4c1:	cmp    QWORD PTR [rdi+0x8],0x0
   14001c4c6:	jne    0x14001c4ea
   14001c4c8:	mov    rcx,QWORD PTR [rdi+0x38]
   14001c4cc:	and    QWORD PTR [rdi+0x40],0x0
   14001c4d1:	test   rcx,rcx
   14001c4d4:	je     0x14001c4ea
   14001c4d6:	mov    rbx,QWORD PTR [rcx]
   14001c4d9:	call   0x140023328
   14001c4de:	mov    rcx,rbx
   14001c4e1:	test   rbx,rbx
   14001c4e4:	jne    0x14001c4d6
   14001c4e6:	and    QWORD PTR [rdi+0x38],rbx
   14001c4ea:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c4ef:	add    rsp,0x20
   14001c4f3:	pop    rdi
   14001c4f4:	ret    
   14001c4f5:	mov    ecx,0x80004005
   14001c4fa:	call   0x140003e64
   14001c4ff:	int3   
   14001c500:	mov    QWORD PTR [rsp+0x8],rcx
   14001c505:	sub    rsp,0x38
   14001c509:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c512:	lea    rax,[rcx+0x8]
   14001c516:	mov    QWORD PTR [rsp+0x40],rax
   14001c51b:	mov    rdx,QWORD PTR [rax]
   14001c51e:	sub    rdx,0x18
   14001c522:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001c527:	jg     0x14001c532
   14001c529:	mov    rcx,QWORD PTR [rdx]
   14001c52c:	mov    rax,QWORD PTR [rcx]
   14001c52f:	call   QWORD PTR [rax+0x8]
   14001c532:	add    rsp,0x38
   14001c536:	ret    
   14001c537:	int3   
   14001c538:	mov    rax,rsp
   14001c53b:	push   rbp
   14001c53c:	push   rdi
   14001c53d:	push   r14
   14001c53f:	lea    rbp,[rax-0x178]
   14001c546:	sub    rsp,0x260
   14001c54d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001c556:	mov    QWORD PTR [rax+0x10],rbx
   14001c55a:	mov    QWORD PTR [rax+0x18],rsi
   14001c55e:	mov    rax,QWORD PTR [rip+0x30ee3]        # 0x14004d448
   14001c565:	xor    rax,rsp
   14001c568:	mov    QWORD PTR [rbp+0x150],rax
   14001c56f:	mov    rsi,rcx
   14001c572:	mov    r8d,0x105
   14001c578:	lea    rdx,[rsp+0x40]
   14001c57d:	xor    ecx,ecx
   14001c57f:	call   QWORD PTR [rip+0x1cc8b]        # 0x140039210
   14001c585:	dec    eax
   14001c587:	cmp    eax,0x102
   14001c58c:	ja     0x14001c740
   14001c592:	lea    rdx,[rsp+0x40]
   14001c597:	lea    rcx,[rsp+0x20]
   14001c59c:	call   0x140005714
   14001c5a1:	nop
   14001c5a2:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c5a7:	mov    edx,DWORD PTR [rcx-0x10]
   14001c5aa:	xor    r14d,r14d
   14001c5ad:	test   edx,edx
   14001c5af:	jns    0x14001c5bc
   14001c5b1:	mov    ecx,0x80070057
   14001c5b6:	call   0x140003e64
   14001c5bb:	int3   
   14001c5bc:	mov    ebx,0x1
   14001c5c1:	mov    r8d,ebx
   14001c5c4:	sub    r8d,DWORD PTR [rcx-0x8]
   14001c5c8:	mov    eax,DWORD PTR [rcx-0xc]
   14001c5cb:	sub    eax,edx
   14001c5cd:	or     eax,r8d
   14001c5d0:	jge    0x14001c5e1
   14001c5d2:	lea    rcx,[rsp+0x20]
   14001c5d7:	call   0x140005d68
   14001c5dc:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c5e1:	call   QWORD PTR [rip+0x1d039]        # 0x140039620
   14001c5e7:	mov    edi,eax
   14001c5e9:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c5ee:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001c5f2:	call   0x140029e88
   14001c5f7:	test   eax,eax
   14001c5f9:	js     0x14001c735
   14001c5ff:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c604:	cmp    eax,DWORD PTR [rcx-0xc]
   14001c607:	jg     0x14001c735
   14001c60d:	mov    DWORD PTR [rcx-0x10],eax
   14001c610:	movsxd rcx,eax
   14001c613:	mov    rax,QWORD PTR [rsp+0x20]
   14001c618:	mov    WORD PTR [rax+rcx*2],r14w
   14001c61d:	test   edi,edi
   14001c61f:	je     0x14001c70b
   14001c625:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c62a:	mov    edx,ebx
   14001c62c:	sub    edx,DWORD PTR [rcx-0x8]
   14001c62f:	mov    eax,DWORD PTR [rcx-0xc]
   14001c632:	mov    edi,0x104
   14001c637:	sub    eax,edi
   14001c639:	or     eax,edx
   14001c63b:	jge    0x14001c64e
   14001c63d:	mov    edx,edi
   14001c63f:	lea    rcx,[rsp+0x20]
   14001c644:	call   0x140005d68
   14001c649:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c64e:	call   QWORD PTR [rip+0x1cfc4]        # 0x140039618
   14001c654:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c659:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001c65d:	call   0x140029e88
   14001c662:	test   eax,eax
   14001c664:	js     0x14001c700
   14001c66a:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c66f:	cmp    eax,DWORD PTR [rcx-0xc]
   14001c672:	jg     0x14001c700
   14001c678:	mov    DWORD PTR [rcx-0x10],eax
   14001c67b:	movsxd rcx,eax
   14001c67e:	mov    rax,QWORD PTR [rsp+0x20]
   14001c683:	mov    WORD PTR [rax+rcx*2],r14w
   14001c688:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c68d:	sub    ebx,DWORD PTR [rcx-0x8]
   14001c690:	mov    eax,DWORD PTR [rcx-0xc]
   14001c693:	sub    eax,edi
   14001c695:	or     eax,ebx
   14001c697:	jge    0x14001c6aa
   14001c699:	mov    edx,edi
   14001c69b:	lea    rcx,[rsp+0x20]
   14001c6a0:	call   0x140005d68
   14001c6a5:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c6aa:	lea    rdx,[rip+0x22697]        # 0x14003ed48
   14001c6b1:	call   QWORD PTR [rip+0x1cf71]        # 0x140039628
   14001c6b7:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c6bc:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001c6c0:	call   0x140029e88
   14001c6c5:	test   eax,eax
   14001c6c7:	js     0x14001c6f5
   14001c6c9:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c6ce:	cmp    eax,DWORD PTR [rcx-0xc]
   14001c6d1:	jg     0x14001c6f5
   14001c6d3:	mov    DWORD PTR [rcx-0x10],eax
   14001c6d6:	movsxd rcx,eax
   14001c6d9:	mov    rax,QWORD PTR [rsp+0x20]
   14001c6de:	mov    WORD PTR [rax+rcx*2],r14w
   14001c6e3:	lea    rcx,[rsi+0x8]
   14001c6e7:	mov    rdx,QWORD PTR [rsp+0x20]
   14001c6ec:	call   0x1400172fc
   14001c6f1:	mov    ebx,eax
   14001c6f3:	jmp    0x14001c70e
   14001c6f5:	mov    ecx,0x80070057
   14001c6fa:	call   0x140003e64
   14001c6ff:	int3   
   14001c700:	mov    ecx,0x80070057
   14001c705:	call   0x140003e64
   14001c70a:	int3   
   14001c70b:	mov    ebx,r14d
   14001c70e:	lea    rax,[rsp+0x20]
   14001c713:	mov    QWORD PTR [rsp+0x30],rax
   14001c718:	mov    rdx,QWORD PTR [rsp+0x20]
   14001c71d:	add    rdx,0xffffffffffffffe8
   14001c721:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001c726:	jg     0x14001c731
   14001c728:	mov    rcx,QWORD PTR [rdx]
   14001c72b:	mov    rax,QWORD PTR [rcx]
   14001c72e:	call   QWORD PTR [rax+0x8]
   14001c731:	mov    eax,ebx
   14001c733:	jmp    0x14001c742
   14001c735:	mov    ecx,0x80070057
   14001c73a:	call   0x140003e64
   14001c73f:	nop
   14001c740:	xor    eax,eax
   14001c742:	mov    rcx,QWORD PTR [rbp+0x150]
   14001c749:	xor    rcx,rsp
   14001c74c:	call   0x140020e50
   14001c751:	lea    r11,[rsp+0x260]
   14001c759:	mov    rbx,QWORD PTR [r11+0x28]
   14001c75d:	mov    rsi,QWORD PTR [r11+0x30]
   14001c761:	mov    rsp,r11
   14001c764:	pop    r14
   14001c766:	pop    rdi
   14001c767:	pop    rbp
   14001c768:	ret    
   14001c769:	int3   
   14001c76a:	int3   
   14001c76b:	int3   
   14001c76c:	mov    rax,rsp
   14001c76f:	mov    QWORD PTR [rax+0x8],rbx
   14001c773:	mov    QWORD PTR [rax+0x10],rbp
   14001c777:	mov    QWORD PTR [rax+0x18],rsi
   14001c77b:	mov    QWORD PTR [rax+0x20],rdi
   14001c77f:	push   r14
   14001c781:	sub    rsp,0x70
   14001c785:	mov    rbx,rdx
   14001c788:	mov    rsi,rcx
   14001c78b:	test   rdx,rdx
   14001c78e:	je     0x14001c793
   14001c790:	and    DWORD PTR [rdx],0x0
   14001c793:	lea    rcx,[rsp+0x20]
   14001c798:	call   0x140004d78
   14001c79d:	xor    ebp,ebp
   14001c79f:	lea    rdx,[rip+0x217a2]        # 0x14003df48
   14001c7a6:	lea    r8d,[rbp+0x1]
   14001c7aa:	xor    ecx,ecx
   14001c7ac:	call   QWORD PTR [rip+0x1c8ee]        # 0x1400390a0
   14001c7b2:	mov    r14,rax
   14001c7b5:	test   rax,rax
   14001c7b8:	je     0x14001c856
   14001c7be:	lea    rdx,[rsi+0x40]
   14001c7c2:	xor    edi,edi
   14001c7c4:	cmp    QWORD PTR [rdx+0x18],0x8
   14001c7c9:	jb     0x14001c7ce
   14001c7cb:	mov    rdx,QWORD PTR [rdx]
   14001c7ce:	mov    r8d,0x20000090
   14001c7d4:	mov    rcx,rax
   14001c7d7:	call   QWORD PTR [rip+0x1c8db]        # 0x1400390b8
   14001c7dd:	mov    rsi,rax
   14001c7e0:	test   rax,rax
   14001c7e3:	je     0x14001c80c
   14001c7e5:	xor    r8d,r8d
   14001c7e8:	xor    edx,edx
   14001c7ea:	mov    rcx,rax
   14001c7ed:	call   QWORD PTR [rip+0x1c8bd]        # 0x1400390b0
   14001c7f3:	mov    ebp,eax
   14001c7f5:	test   eax,eax
   14001c7f7:	jne    0x14001c801
   14001c7f9:	call   QWORD PTR [rip+0x1cde1]        # 0x1400395e0
   14001c7ff:	mov    edi,eax
   14001c801:	mov    rcx,rsi
   14001c804:	call   QWORD PTR [rip+0x1c8be]        # 0x1400390c8
   14001c80a:	jmp    0x14001c814
   14001c80c:	call   QWORD PTR [rip+0x1cdce]        # 0x1400395e0
   14001c812:	mov    edi,eax
   14001c814:	mov    rcx,r14
   14001c817:	call   QWORD PTR [rip+0x1c8ab]        # 0x1400390c8
   14001c81d:	mov    ecx,edi
   14001c81f:	call   QWORD PTR [rip+0x1c9a3]        # 0x1400391c8
   14001c825:	test   ebp,ebp
   14001c827:	je     0x14001c856
   14001c829:	lea    rcx,[rsp+0x48]
   14001c82e:	call   0x140004d78
   14001c833:	test   rbx,rbx
   14001c836:	je     0x14001c84f
   14001c838:	mov    ecx,0x200
   14001c83d:	test   DWORD PTR [rsp+0x34],ecx
   14001c841:	jne    0x14001c84f
   14001c843:	test   DWORD PTR [rsp+0x5c],ecx
   14001c847:	je     0x14001c84f
   14001c849:	mov    DWORD PTR [rbx],0x1
   14001c84f:	mov    eax,0x1
   14001c854:	jmp    0x14001c858
   14001c856:	xor    eax,eax
   14001c858:	lea    r11,[rsp+0x70]
   14001c85d:	mov    rbx,QWORD PTR [r11+0x10]
   14001c861:	mov    rbp,QWORD PTR [r11+0x18]
   14001c865:	mov    rsi,QWORD PTR [r11+0x20]
   14001c869:	mov    rdi,QWORD PTR [r11+0x28]
   14001c86d:	mov    rsp,r11
   14001c870:	pop    r14
   14001c872:	ret    
   14001c873:	int3   
   14001c874:	mov    r11,rsp
   14001c877:	push   rbx
   14001c878:	sub    rsp,0x60
   14001c87c:	mov    BYTE PTR [r8],0xff
   14001c880:	mov    rax,QWORD PTR [rdx+0x8]
   14001c884:	mov    r9,QWORD PTR [rdx]
   14001c887:	mov    QWORD PTR [r11-0x20],rax
   14001c88b:	mov    rax,QWORD PTR [rdx+0x10]
   14001c88f:	add    rcx,0x8
   14001c893:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001c897:	mov    rbx,r8
   14001c89a:	mov    QWORD PTR [r11-0x28],r9
   14001c89e:	mov    QWORD PTR [r11-0x18],rax
   14001c8a2:	je     0x14001c8d0
   14001c8a4:	and    QWORD PTR [r11-0x38],0x0
   14001c8a9:	lea    rax,[r11-0x28]
   14001c8ad:	mov    r9d,0x18
   14001c8b3:	mov    DWORD PTR [r11-0x40],r9d
   14001c8b7:	lea    r8,[r11-0x28]
   14001c8bb:	mov    edx,0x8000e008
   14001c8c0:	mov    QWORD PTR [r11-0x48],rax
   14001c8c4:	call   0x14001761c
   14001c8c9:	mov    r9,QWORD PTR [rsp+0x40]
   14001c8ce:	jmp    0x14001c8d2
   14001c8d0:	xor    eax,eax
   14001c8d2:	test   eax,eax
   14001c8d4:	je     0x14001c8d9
   14001c8d6:	mov    BYTE PTR [rbx],r9b
   14001c8d9:	add    rsp,0x60
   14001c8dd:	pop    rbx
   14001c8de:	ret    
   14001c8df:	int3   
   14001c8e0:	sub    rsp,0x48
   14001c8e4:	movzx  eax,dl
   14001c8e7:	add    rcx,0x8
   14001c8eb:	mov    DWORD PTR [rsp+0x58],eax
   14001c8ef:	xor    eax,eax
   14001c8f1:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001c8f5:	je     0x14001c918
   14001c8f7:	mov    QWORD PTR [rsp+0x30],rax
   14001c8fc:	mov    DWORD PTR [rsp+0x28],eax
   14001c900:	lea    r9d,[rax+0x4]
   14001c904:	lea    r8,[rsp+0x58]
   14001c909:	mov    edx,0x8000e00c
   14001c90e:	mov    QWORD PTR [rsp+0x20],rax
   14001c913:	call   0x14001761c
   14001c918:	add    rsp,0x48
   14001c91c:	ret    
   14001c91d:	int3   
   14001c91e:	int3   
   14001c91f:	int3   
   14001c920:	mov    QWORD PTR [rsp+0x8],rbx
   14001c925:	mov    QWORD PTR [rsp+0x10],rbp
   14001c92a:	mov    QWORD PTR [rsp+0x18],rsi
   14001c92f:	push   rdi
   14001c930:	push   r12
   14001c932:	push   r13
   14001c934:	push   r14
   14001c936:	push   r15
   14001c938:	sub    rsp,0x40
   14001c93c:	xor    r12d,r12d
   14001c93f:	mov    rsi,r9
   14001c942:	mov    r15,r8
   14001c945:	mov    r14,rdx
   14001c948:	mov    rbp,rcx
   14001c94b:	test   r9,r9
   14001c94e:	jne    0x14001c957
   14001c950:	xor    eax,eax
   14001c952:	jmp    0x14001cba1
   14001c957:	mov    ecx,0x214
   14001c95c:	mov    WORD PTR [rdx],r12w
   14001c960:	call   0x14002b130
   14001c965:	mov    rdi,rax
   14001c968:	call   0x140006980
   14001c96d:	mov    r13d,0x1
   14001c973:	mov    ebx,eax
   14001c975:	test   eax,eax
   14001c977:	jne    0x14001ca7c
   14001c97d:	cmp    DWORD PTR [rip+0x343f0],r12d        # 0x140050d74
   14001c984:	jne    0x14001c992
   14001c986:	call   0x140004f38
   14001c98b:	mov    DWORD PTR [rip+0x343e2],r13d        # 0x140050d74
   14001c992:	cmp    DWORD PTR [rip+0x343f3],r12d        # 0x140050d8c
   14001c999:	jne    0x14001c9bd
   14001c99b:	mov    eax,DWORD PTR [rip+0x344cf]        # 0x140050e70
   14001c9a1:	mov    DWORD PTR [rip+0x343e9],eax        # 0x140050d90
   14001c9a7:	test   eax,eax
   14001c9a9:	jne    0x14001c9b6
   14001c9ab:	call   0x1400052a8
   14001c9b0:	mov    DWORD PTR [rip+0x343e6],eax        # 0x140050d9c
   14001c9b6:	mov    DWORD PTR [rip+0x343cf],r13d        # 0x140050d8c
   14001c9bd:	cmp    DWORD PTR [rip+0x343dc],r12d        # 0x140050da0
   14001c9c4:	jne    0x14001c9d2
   14001c9c6:	call   0x140005180
   14001c9cb:	mov    DWORD PTR [rip+0x343ce],r13d        # 0x140050da0
   14001c9d2:	cmp    DWORD PTR [rip+0x343bf],r12d        # 0x140050d98
   14001c9d9:	jne    0x14001ca71
   14001c9df:	cmp    DWORD PTR [rip+0x3438e],r12d        # 0x140050d74
   14001c9e6:	jne    0x14001c9f4
   14001c9e8:	call   0x140004f38
   14001c9ed:	mov    DWORD PTR [rip+0x34380],r13d        # 0x140050d74
   14001c9f4:	cmp    DWORD PTR [rip+0x34391],r12d        # 0x140050d8c
   14001c9fb:	jne    0x14001ca1f
   14001c9fd:	mov    eax,DWORD PTR [rip+0x3446d]        # 0x140050e70
   14001ca03:	mov    DWORD PTR [rip+0x34387],eax        # 0x140050d90
   14001ca09:	test   eax,eax
   14001ca0b:	jne    0x14001ca18
   14001ca0d:	call   0x1400052a8
   14001ca12:	mov    DWORD PTR [rip+0x34384],eax        # 0x140050d9c
   14001ca18:	mov    DWORD PTR [rip+0x3436d],r13d        # 0x140050d8c
   14001ca1f:	cmp    DWORD PTR [rip+0x3436a],r12d        # 0x140050d90
   14001ca26:	jne    0x14001ca71
   14001ca28:	cmp    DWORD PTR [rip+0x34345],r12d        # 0x140050d74
   14001ca2f:	jne    0x14001ca3d
   14001ca31:	call   0x140004f38
   14001ca36:	mov    DWORD PTR [rip+0x34337],r13d        # 0x140050d74
   14001ca3d:	cmp    DWORD PTR [rip+0x34348],r12d        # 0x140050d8c
   14001ca44:	jne    0x14001ca68
   14001ca46:	mov    eax,DWORD PTR [rip+0x34424]        # 0x140050e70
   14001ca4c:	mov    DWORD PTR [rip+0x3433e],eax        # 0x140050d90
   14001ca52:	test   eax,eax
   14001ca54:	jne    0x14001ca61
   14001ca56:	call   0x1400052a8
   14001ca5b:	mov    DWORD PTR [rip+0x3433b],eax        # 0x140050d9c
   14001ca61:	mov    DWORD PTR [rip+0x34324],r13d        # 0x140050d8c
   14001ca68:	cmp    DWORD PTR [rip+0x3432d],r12d        # 0x140050d9c
   14001ca6f:	je     0x14001ca7c
   14001ca71:	mov    DWORD PTR [rsi],0xe123056d
   14001ca77:	jmp    0x14001c950
   14001ca7c:	cmp    DWORD PTR [rip+0x342f1],r12d        # 0x140050d74
   14001ca83:	mov    DWORD PTR [rdi+0x8],ebx
   14001ca86:	jne    0x14001ca94
   14001ca88:	call   0x140004f38
   14001ca8d:	mov    DWORD PTR [rip+0x342e0],r13d        # 0x140050d74
   14001ca94:	cmp    DWORD PTR [rip+0x342f1],r12d        # 0x140050d8c
   14001ca9b:	jne    0x14001cabf
   14001ca9d:	mov    eax,DWORD PTR [rip+0x343cd]        # 0x140050e70
   14001caa3:	mov    DWORD PTR [rip+0x342e7],eax        # 0x140050d90
   14001caa9:	test   eax,eax
   14001caab:	jne    0x14001cab8
   14001caad:	call   0x1400052a8
   14001cab2:	mov    DWORD PTR [rip+0x342e4],eax        # 0x140050d9c
   14001cab8:	mov    DWORD PTR [rip+0x342cd],r13d        # 0x140050d8c
   14001cabf:	cmp    DWORD PTR [rip+0x342da],r12d        # 0x140050da0
   14001cac6:	jne    0x14001cad4
   14001cac8:	call   0x140005180
   14001cacd:	mov    DWORD PTR [rip+0x342cc],r13d        # 0x140050da0
   14001cad4:	cmp    DWORD PTR [rip+0x34299],r12d        # 0x140050d74
   14001cadb:	mov    eax,DWORD PTR [rip+0x342b7]        # 0x140050d98
   14001cae1:	mov    DWORD PTR [rdi],eax
   14001cae3:	jne    0x14001caf1
   14001cae5:	call   0x140004f38
   14001caea:	mov    DWORD PTR [rip+0x34283],r13d        # 0x140050d74
   14001caf1:	cmp    DWORD PTR [rip+0x34294],r12d        # 0x140050d8c
   14001caf8:	jne    0x14001cb1c
   14001cafa:	mov    eax,DWORD PTR [rip+0x34370]        # 0x140050e70
   14001cb00:	mov    DWORD PTR [rip+0x3428a],eax        # 0x140050d90
   14001cb06:	test   eax,eax
   14001cb08:	jne    0x14001cb15
   14001cb0a:	call   0x1400052a8
   14001cb0f:	mov    DWORD PTR [rip+0x34287],eax        # 0x140050d9c
   14001cb15:	mov    DWORD PTR [rip+0x34270],r13d        # 0x140050d8c
   14001cb1c:	mov    eax,DWORD PTR [rip+0x3427a]        # 0x140050d9c
   14001cb22:	lea    rcx,[rbp+0x8]
   14001cb26:	mov    DWORD PTR [rdi+0x4],eax
   14001cb29:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001cb2d:	je     0x14001cb58
   14001cb2f:	mov    QWORD PTR [rsp+0x30],r12
   14001cb34:	mov    r9d,0x214
   14001cb3a:	mov    r8,rdi
   14001cb3d:	mov    edx,0x8000e014
   14001cb42:	mov    DWORD PTR [rsp+0x28],0x214
   14001cb4a:	mov    QWORD PTR [rsp+0x20],rdi
   14001cb4f:	call   0x14001761c
   14001cb54:	mov    ebx,eax
   14001cb56:	jmp    0x14001cb5b
   14001cb58:	mov    ebx,r12d
   14001cb5b:	mov    eax,DWORD PTR [rdi+0x10]
   14001cb5e:	mov    DWORD PTR [rsi],eax
   14001cb60:	mov    eax,DWORD PTR [rdi+0xc]
   14001cb63:	mov    DWORD PTR [r15],eax
   14001cb66:	test   eax,eax
   14001cb68:	je     0x14001cb6f
   14001cb6a:	mov    ebx,r12d
   14001cb6d:	jmp    0x14001cb97
   14001cb6f:	test   ebx,ebx
   14001cb71:	je     0x14001cb97
   14001cb73:	cmp    DWORD PTR [rdi+0x10],r12d
   14001cb77:	mov    ebx,r12d
   14001cb7a:	sete   bl
   14001cb7d:	cmp    DWORD PTR [rdi+0x10],0x102
   14001cb84:	jne    0x14001cb97
   14001cb86:	lea    r8,[rdi+0x14]
   14001cb8a:	mov    edx,0x200
   14001cb8f:	mov    rcx,r14
   14001cb92:	call   0x140002d7c
   14001cb97:	mov    rcx,rdi
   14001cb9a:	call   0x14002b138
   14001cb9f:	mov    eax,ebx
   14001cba1:	lea    r11,[rsp+0x40]
   14001cba6:	mov    rbx,QWORD PTR [r11+0x30]
   14001cbaa:	mov    rbp,QWORD PTR [r11+0x38]
   14001cbae:	mov    rsi,QWORD PTR [r11+0x40]
   14001cbb2:	mov    rsp,r11
   14001cbb5:	pop    r15
   14001cbb7:	pop    r14
   14001cbb9:	pop    r13
   14001cbbb:	pop    r12
   14001cbbd:	pop    rdi
   14001cbbe:	ret    
   14001cbbf:	int3   
   14001cbc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cbc5:	push   rdi
   14001cbc6:	sub    rsp,0x40
   14001cbca:	mov    rdi,rdx
   14001cbcd:	xor    edx,edx
   14001cbcf:	mov    rbx,rcx
   14001cbd2:	lea    r8d,[rdx+0x50]
   14001cbd6:	mov    rcx,rdi
   14001cbd9:	call   0x1400260e0
   14001cbde:	lea    rcx,[rbx+0x8]
   14001cbe2:	xor    eax,eax
   14001cbe4:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001cbe8:	je     0x14001cc0c
   14001cbea:	mov    QWORD PTR [rsp+0x30],rax
   14001cbef:	xor    r9d,r9d
   14001cbf2:	xor    r8d,r8d
   14001cbf5:	mov    edx,0x8000645c
   14001cbfa:	mov    DWORD PTR [rsp+0x28],0x50
   14001cc02:	mov    QWORD PTR [rsp+0x20],rdi
   14001cc07:	call   0x14001761c
   14001cc0c:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cc11:	add    rsp,0x40
   14001cc15:	pop    rdi
   14001cc16:	ret    
   14001cc17:	int3   
   14001cc18:	mov    r11,rsp
   14001cc1b:	sub    rsp,0x48
   14001cc1f:	xor    r8d,r8d
   14001cc22:	test   edx,edx
   14001cc24:	mov    eax,r8d
   14001cc27:	setne  al
   14001cc2a:	add    rcx,0x8
   14001cc2e:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001cc32:	mov    DWORD PTR [rsp+0x50],eax
   14001cc36:	mov    DWORD PTR [r11+0xc],r8d
   14001cc3a:	je     0x14001cc5d
   14001cc3c:	mov    QWORD PTR [r11-0x18],r8
   14001cc40:	mov    DWORD PTR [r11-0x20],r8d
   14001cc44:	lea    r9d,[r8+0x8]
   14001cc48:	mov    QWORD PTR [r11-0x28],r8
   14001cc4c:	lea    r8,[r11+0x8]
   14001cc50:	mov    edx,0x8000a414
   14001cc55:	call   0x14001761c
   14001cc5a:	mov    r8d,eax
   14001cc5d:	mov    eax,r8d
   14001cc60:	add    rsp,0x48
   14001cc64:	ret    
   14001cc65:	int3   
   14001cc66:	int3   
   14001cc67:	int3   
   14001cc68:	mov    r9d,0x4
   14001cc6e:	xor    r8d,r8d
   14001cc71:	mov    rcx,rdx
   14001cc74:	jmp    0x14001cc8c
   14001cc79:	int3   
   14001cc7a:	int3   
   14001cc7b:	int3   
   14001cc7c:	mov    r9d,0x1
   14001cc82:	mov    rcx,rdx
   14001cc85:	jmp    0x14001cc8c
   14001cc8a:	int3   
   14001cc8b:	int3   
   14001cc8c:	mov    QWORD PTR [rsp+0x10],rbx
   14001cc91:	mov    QWORD PTR [rsp+0x18],rsi
   14001cc96:	push   rbp
   14001cc97:	push   rdi
   14001cc98:	push   r14
   14001cc9a:	mov    rbp,rsp
   14001cc9d:	sub    rsp,0x80
   14001cca4:	mov    r14d,r9d
   14001cca7:	mov    rdi,rcx
   14001ccaa:	test   rcx,rcx
   14001ccad:	jne    0x14001ccb7
   14001ccaf:	lea    eax,[rcx+0x57]
   14001ccb2:	jmp    0x14001cd88
   14001ccb7:	mov    rcx,QWORD PTR [rip+0x31e92]        # 0x14004eb50
   14001ccbe:	test   r8b,0x1
   14001ccc2:	mov    eax,0x12019f
   14001ccc7:	mov    esi,0x0
   14001cccc:	cmovne esi,eax
   14001cccf:	and    QWORD PTR [rbp-0x40],0x0
   14001ccd4:	xor    r9d,r9d
   14001ccd7:	lea    rax,[rbp-0x40]
   14001ccdb:	lea    edx,[r9+0x1]
   14001ccdf:	lea    r8d,[r9+0x4]
   14001cce3:	mov    QWORD PTR [rsp+0x38],rax
   14001cce8:	and    QWORD PTR [rsp+0x30],0x0
   14001ccee:	lea    rax,[rbp-0x38]
   14001ccf2:	mov    QWORD PTR [rsp+0x28],rax
   14001ccf7:	and    QWORD PTR [rsp+0x20],0x0
   14001ccfd:	call   QWORD PTR [rip+0x1c415]        # 0x140039118
   14001cd03:	mov    ebx,eax
   14001cd05:	test   eax,eax
   14001cd07:	jne    0x14001cd86
   14001cd09:	mov    r8,QWORD PTR [rbp-0x38]
   14001cd0d:	and    DWORD PTR [rbp-0x28],eax
   14001cd10:	and    QWORD PTR [rbp-0x20],0x0
   14001cd15:	and    DWORD PTR [rbp-0x18],eax
   14001cd18:	and    DWORD PTR [rbp-0x14],eax
   14001cd1b:	lea    r9,[rbp+0x20]
   14001cd1f:	lea    rdx,[rbp-0x30]
   14001cd23:	lea    ecx,[rax+0x1]
   14001cd26:	mov    DWORD PTR [rbp-0x30],esi
   14001cd29:	mov    DWORD PTR [rbp-0x2c],r14d
   14001cd2d:	mov    DWORD PTR [rbp-0x10],0x1
   14001cd34:	mov    QWORD PTR [rbp-0x8],rdi
   14001cd38:	call   QWORD PTR [rip+0x1c3ba]        # 0x1400390f8
   14001cd3e:	mov    ebx,eax
   14001cd40:	test   eax,eax
   14001cd42:	jne    0x14001cd7c
   14001cd44:	mov    rax,QWORD PTR [rbp+0x20]
   14001cd48:	and    QWORD PTR [rsp+0x30],0x0
   14001cd4e:	mov    rcx,QWORD PTR [rip+0x31dfb]        # 0x14004eb50
   14001cd55:	mov    QWORD PTR [rsp+0x28],rax
   14001cd5a:	and    QWORD PTR [rsp+0x20],0x0
   14001cd60:	lea    edx,[rbx+0x1]
   14001cd63:	lea    r8d,[rbx+0x4]
   14001cd67:	xor    r9d,r9d
   14001cd6a:	call   QWORD PTR [rip+0x1c398]        # 0x140039108
   14001cd70:	mov    rcx,QWORD PTR [rbp+0x20]
   14001cd74:	mov    ebx,eax
   14001cd76:	call   QWORD PTR [rip+0x1c83c]        # 0x1400395b8
   14001cd7c:	mov    rcx,QWORD PTR [rbp-0x40]
   14001cd80:	call   QWORD PTR [rip+0x1c832]        # 0x1400395b8
   14001cd86:	mov    eax,ebx
   14001cd88:	lea    r11,[rsp+0x80]
   14001cd90:	mov    rbx,QWORD PTR [r11+0x28]
   14001cd94:	mov    rsi,QWORD PTR [r11+0x30]
   14001cd98:	mov    rsp,r11
   14001cd9b:	pop    r14
   14001cd9d:	pop    rdi
   14001cd9e:	pop    rbp
   14001cd9f:	ret    
   14001cda0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cda5:	push   rdi
   14001cda6:	sub    rsp,0x20
   14001cdaa:	mov    ebx,edx
   14001cdac:	mov    rdi,rcx
   14001cdaf:	call   0x14001ce18
   14001cdb4:	test   bl,0x1
   14001cdb7:	je     0x14001cdc1
   14001cdb9:	mov    rcx,rdi
   14001cdbc:	call   0x140020e30
   14001cdc1:	mov    rax,rdi
   14001cdc4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cdc9:	add    rsp,0x20
   14001cdcd:	pop    rdi
   14001cdce:	ret    
   14001cdcf:	int3   
   14001cdd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdd5:	mov    QWORD PTR [rsp+0x10],rsi
   14001cdda:	push   rdi
   14001cddb:	sub    rsp,0x20
   14001cddf:	cmp    DWORD PTR [rcx+0x4],0x0
   14001cde3:	mov    rdi,QWORD PTR [rcx+0x8]
   14001cde7:	jbe    0x14001ce00
   14001cde9:	mov    esi,DWORD PTR [rcx+0x4]
   14001cdec:	mov    rbx,rdi
   14001cdef:	mov    rcx,QWORD PTR [rbx]
   14001cdf2:	call   0x14002b138
   14001cdf7:	lea    rbx,[rbx+0x8]
   14001cdfb:	dec    rsi
   14001cdfe:	jne    0x14001cdef
   14001ce00:	mov    rcx,rdi
   14001ce03:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce08:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ce0d:	add    rsp,0x20
   14001ce11:	pop    rdi
   14001ce12:	jmp    0x14002b138
   14001ce17:	int3   
   14001ce18:	mov    rax,rsp
   14001ce1b:	mov    QWORD PTR [rax+0x8],rcx
   14001ce1f:	push   rdi
   14001ce20:	sub    rsp,0x30
   14001ce24:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001ce2c:	mov    QWORD PTR [rax+0x10],rbx
   14001ce30:	mov    QWORD PTR [rax+0x18],rsi
   14001ce34:	mov    rdi,rcx
   14001ce37:	lea    rax,[rip+0x21f82]        # 0x14003edc0
   14001ce3e:	mov    QWORD PTR [rcx],rax
   14001ce41:	lea    rsi,[rcx+0x8]
   14001ce45:	jmp    0x14001ce68
   14001ce47:	mov    rbx,QWORD PTR [rsi]
   14001ce4a:	mov    rax,QWORD PTR [rbx]
   14001ce4d:	mov    QWORD PTR [rsi],rax
   14001ce50:	mov    QWORD PTR [rax+0x8],rsi
   14001ce54:	lea    rcx,[rbx+0x10]
   14001ce58:	call   0x14001cdd0
   14001ce5d:	mov    rcx,rbx
   14001ce60:	call   0x140020e30
   14001ce65:	dec    DWORD PTR [rdi+0x18]
   14001ce68:	cmp    QWORD PTR [rsi],rsi
   14001ce6b:	jne    0x14001ce47
   14001ce6d:	mov    rax,QWORD PTR [rdi+0x20]
   14001ce71:	test   rax,rax
   14001ce74:	je     0x14001ce80
   14001ce76:	mov    rcx,QWORD PTR [rdi+0x20]
   14001ce7a:	call   QWORD PTR [rip+0x1c740]        # 0x1400395c0
   14001ce80:	mov    QWORD PTR [rdi+0x20],0x0
   14001ce88:	lea    rax,[rip+0x20c59]        # 0x14003dae8
   14001ce8f:	mov    QWORD PTR [rdi],rax
   14001ce92:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ce97:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ce9c:	add    rsp,0x30
   14001cea0:	pop    rdi
   14001cea1:	ret    
   14001cea2:	int3   
   14001cea3:	int3   
   14001cea4:	rex push rsi
   14001cea6:	push   rdi
   14001cea7:	push   r14
   14001cea9:	sub    rsp,0x30
   14001cead:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ceb6:	mov    QWORD PTR [rsp+0x58],rbx
   14001cebb:	mov    QWORD PTR [rsp+0x60],rbp
   14001cec0:	mov    rdi,r9
   14001cec3:	mov    esi,r8d
   14001cec6:	mov    ebx,edx
   14001cec8:	mov    rbp,rcx
   14001cecb:	mov    ecx,0x20
   14001ced0:	call   0x140021a98
   14001ced5:	mov    r14,rax
   14001ced8:	mov    DWORD PTR [rax+0x10],ebx
   14001cedb:	mov    DWORD PTR [rax+0x14],esi
   14001cede:	mov    rdx,rdi
   14001cee1:	mov    ecx,esi
   14001cee3:	call   0x140020b74
   14001cee8:	mov    QWORD PTR [r14+0x18],rax
   14001ceec:	lea    rbx,[rbp+0x20]
   14001cef0:	mov    QWORD PTR [rsp+0x50],rbx
   14001cef5:	mov    ecx,0x1
   14001cefa:	xchg   DWORD PTR [rbx+0x8],ecx
   14001cefd:	test   ecx,ecx
   14001ceff:	je     0x14001cf0c
   14001cf01:	mov    rcx,QWORD PTR [rsp+0x50]
   14001cf06:	call   0x1400178cc
   14001cf0b:	nop
   14001cf0c:	lea    rcx,[rbp+0x8]
   14001cf10:	mov    rax,QWORD PTR [rcx+0x8]
   14001cf14:	mov    QWORD PTR [r14],rcx
   14001cf17:	mov    QWORD PTR [r14+0x8],rax
   14001cf1b:	mov    QWORD PTR [rax],r14
   14001cf1e:	mov    QWORD PTR [rcx+0x8],r14
   14001cf22:	inc    DWORD PTR [rbp+0x18]
   14001cf25:	xor    eax,eax
   14001cf27:	xchg   DWORD PTR [rbx+0x8],eax
   14001cf2a:	lock or DWORD PTR [rsp],0x0
   14001cf2f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001cf34:	mov    eax,DWORD PTR [rcx+0xc]
   14001cf37:	test   eax,eax
   14001cf39:	jle    0x14001cf5e
   14001cf3b:	lock or DWORD PTR [rsp],0x0
   14001cf40:	mov    eax,DWORD PTR [rcx+0xc]
   14001cf43:	mov    rax,QWORD PTR [rsp+0x50]
   14001cf48:	mov    rcx,QWORD PTR [rax]
   14001cf4b:	test   rcx,rcx
   14001cf4e:	je     0x14001cf5e
   14001cf50:	mov    rcx,QWORD PTR [rsp+0x50]
   14001cf55:	mov    rcx,QWORD PTR [rcx]
   14001cf58:	call   QWORD PTR [rip+0x1c57a]        # 0x1400394d8
   14001cf5e:	mov    rbx,QWORD PTR [rsp+0x58]
   14001cf63:	mov    rbp,QWORD PTR [rsp+0x60]
   14001cf68:	add    rsp,0x30
   14001cf6c:	pop    r14
   14001cf6e:	pop    rdi
   14001cf6f:	pop    rsi
   14001cf70:	ret    
   14001cf71:	int3   
   14001cf72:	int3   
   14001cf73:	int3   
   14001cf74:	mov    rax,rsp
   14001cf77:	mov    QWORD PTR [rax+0x8],rcx
   14001cf7b:	push   rsi
   14001cf7c:	push   rdi
   14001cf7d:	push   r12
   14001cf7f:	push   r14
   14001cf81:	push   r15
   14001cf83:	sub    rsp,0x40
   14001cf87:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001cf8f:	mov    QWORD PTR [rax+0x10],rbx
   14001cf93:	mov    QWORD PTR [rax+0x18],rbp
   14001cf97:	mov    r12,r9
   14001cf9a:	mov    ebp,r8d
   14001cf9d:	mov    ebx,edx
   14001cf9f:	mov    rsi,rcx
   14001cfa2:	mov    ecx,0x20
   14001cfa7:	call   0x140021a98
   14001cfac:	mov    rdi,rax
   14001cfaf:	mov    DWORD PTR [rax+0x10],ebx
   14001cfb2:	test   ebp,ebp
   14001cfb4:	je     0x14001d057
   14001cfba:	mov    DWORD PTR [rax+0x14],ebp
   14001cfbd:	mov    r15d,ebp
   14001cfc0:	mov    eax,0x8
   14001cfc5:	mul    rbp
   14001cfc8:	mov    rcx,0xffffffffffffffff
   14001cfcf:	cmovo  rax,rcx
   14001cfd3:	mov    rcx,rax
   14001cfd6:	call   0x14002b130
   14001cfdb:	mov    QWORD PTR [rdi+0x18],rax
   14001cfdf:	test   ebp,ebp
   14001cfe1:	je     0x14001d060
   14001cfe3:	xor    r14d,r14d
   14001cfe6:	or     rsi,0xffffffffffffffff
   14001cfea:	and    DWORD PTR [rsp+0x28],0x0
   14001cfef:	and    QWORD PTR [rsp+0x20],0x0
   14001cff5:	mov    r9d,esi
   14001cff8:	mov    r8,QWORD PTR [r14+r12*1]
   14001cffc:	xor    edx,edx
   14001cffe:	xor    ecx,ecx
   14001d000:	call   QWORD PTR [rip+0x1c1f2]        # 0x1400391f8
   14001d006:	movsxd rbx,eax
   14001d009:	mov    eax,0x2
   14001d00e:	mul    rbx
   14001d011:	cmovo  rax,rsi
   14001d015:	mov    rcx,rax
   14001d018:	call   0x14002b130
   14001d01d:	mov    rcx,QWORD PTR [rdi+0x18]
   14001d021:	mov    QWORD PTR [r14+rcx*1],rax
   14001d025:	mov    rax,QWORD PTR [rdi+0x18]
   14001d029:	mov    DWORD PTR [rsp+0x28],ebx
   14001d02d:	mov    rax,QWORD PTR [rax+r14*1]
   14001d031:	mov    QWORD PTR [rsp+0x20],rax
   14001d036:	mov    r9d,esi
   14001d039:	mov    r8,QWORD PTR [r14+r12*1]
   14001d03d:	xor    edx,edx
   14001d03f:	xor    ecx,ecx
   14001d041:	call   QWORD PTR [rip+0x1c1b1]        # 0x1400391f8
   14001d047:	lea    r14,[r14+0x8]
   14001d04b:	dec    r15
   14001d04e:	jne    0x14001cfea
   14001d050:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d055:	jmp    0x14001d060
   14001d057:	and    DWORD PTR [rax+0x14],0x0
   14001d05b:	and    QWORD PTR [rax+0x18],0x0
   14001d060:	lea    rbx,[rsi+0x20]
   14001d064:	mov    QWORD PTR [rsp+0x70],rbx
   14001d069:	mov    eax,0x1
   14001d06e:	xchg   DWORD PTR [rbx+0x8],eax
   14001d071:	test   eax,eax
   14001d073:	je     0x14001d080
   14001d075:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d07a:	call   0x1400178cc
   14001d07f:	nop
   14001d080:	lea    rcx,[rsi+0x8]
   14001d084:	mov    rax,QWORD PTR [rcx+0x8]
   14001d088:	mov    QWORD PTR [rdi],rcx
   14001d08b:	mov    QWORD PTR [rdi+0x8],rax
   14001d08f:	mov    QWORD PTR [rax],rdi
   14001d092:	mov    QWORD PTR [rcx+0x8],rdi
   14001d096:	inc    DWORD PTR [rsi+0x18]
   14001d099:	xor    eax,eax
   14001d09b:	xchg   DWORD PTR [rbx+0x8],eax
   14001d09e:	lock or DWORD PTR [rsp],0x0
   14001d0a3:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d0a8:	mov    eax,DWORD PTR [rcx+0xc]
   14001d0ab:	test   eax,eax
   14001d0ad:	jle    0x14001d0d2
   14001d0af:	lock or DWORD PTR [rsp],0x0
   14001d0b4:	mov    eax,DWORD PTR [rcx+0xc]
   14001d0b7:	mov    rax,QWORD PTR [rsp+0x70]
   14001d0bc:	mov    rcx,QWORD PTR [rax]
   14001d0bf:	test   rcx,rcx
   14001d0c2:	je     0x14001d0d2
   14001d0c4:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d0c9:	mov    rcx,QWORD PTR [rcx]
   14001d0cc:	call   QWORD PTR [rip+0x1c406]        # 0x1400394d8
   14001d0d2:	lea    r11,[rsp+0x40]
   14001d0d7:	mov    rbx,QWORD PTR [r11+0x38]
   14001d0db:	mov    rbp,QWORD PTR [r11+0x40]
   14001d0df:	mov    rsp,r11
   14001d0e2:	pop    r15
   14001d0e4:	pop    r14
   14001d0e6:	pop    r12
   14001d0e8:	pop    rdi
   14001d0e9:	pop    rsi
   14001d0ea:	ret    
   14001d0eb:	int3   
   14001d0ec:	mov    rax,rsp
   14001d0ef:	push   rdi
   14001d0f0:	push   r14
   14001d0f2:	push   r15
   14001d0f4:	sub    rsp,0x30
   14001d0f8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001d100:	mov    QWORD PTR [rax+0x10],rbx
   14001d104:	mov    QWORD PTR [rax+0x18],rbp
   14001d108:	mov    QWORD PTR [rax+0x20],rsi
   14001d10c:	mov    esi,r8d
   14001d10f:	mov    rbp,rdx
   14001d112:	mov    rdi,rcx
   14001d115:	lea    rbx,[rcx+0x20]
   14001d119:	mov    QWORD PTR [rax+0x8],rbx
   14001d11d:	mov    eax,0x1
   14001d122:	xchg   DWORD PTR [rbx+0x8],eax
   14001d125:	test   eax,eax
   14001d127:	je     0x14001d134
   14001d129:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d12e:	call   0x1400178cc
   14001d133:	nop
   14001d134:	test   esi,esi
   14001d136:	jne    0x14001d16e
   14001d138:	mov    eax,DWORD PTR [rdi+0x18]
   14001d13b:	mov    DWORD PTR [rbp+0x18],eax
   14001d13e:	lea    rcx,[rbp+0x8]
   14001d142:	lea    rdx,[rdi+0x8]
   14001d146:	mov    rax,QWORD PTR [rdx+0x8]
   14001d14a:	mov    QWORD PTR [rcx],rdx
   14001d14d:	mov    QWORD PTR [rcx+0x8],rax
   14001d151:	mov    QWORD PTR [rax],rcx
   14001d154:	mov    QWORD PTR [rdx+0x8],rcx
   14001d158:	mov    rax,QWORD PTR [rdx]
   14001d15b:	mov    QWORD PTR [rcx],rax
   14001d15e:	mov    QWORD PTR [rax+0x8],rcx
   14001d162:	mov    QWORD PTR [rdx+0x8],rdx
   14001d166:	mov    QWORD PTR [rdx],rdx
   14001d169:	and    DWORD PTR [rdi+0x18],esi
   14001d16c:	jmp    0x14001d1c4
   14001d16e:	lea    r14,[rdi+0x8]
   14001d172:	mov    rsi,QWORD PTR [r14]
   14001d175:	cmp    rsi,r14
   14001d178:	je     0x14001d1c4
   14001d17a:	lea    r15,[rbp+0x8]
   14001d17e:	mov    ecx,0x20
   14001d183:	call   0x140021a98
   14001d188:	mov    rdi,rax
   14001d18b:	mov    ecx,DWORD PTR [rsi+0x10]
   14001d18e:	mov    DWORD PTR [rax+0x10],ecx
   14001d191:	mov    ecx,DWORD PTR [rsi+0x14]
   14001d194:	mov    DWORD PTR [rax+0x14],ecx
   14001d197:	mov    rdx,QWORD PTR [rsi+0x18]
   14001d19b:	mov    ecx,DWORD PTR [rsi+0x14]
   14001d19e:	call   0x140020b74
   14001d1a3:	mov    QWORD PTR [rdi+0x18],rax
   14001d1a7:	mov    rcx,QWORD PTR [r15+0x8]
   14001d1ab:	mov    QWORD PTR [rdi],r15
   14001d1ae:	mov    QWORD PTR [rdi+0x8],rcx
   14001d1b2:	mov    QWORD PTR [rcx],rdi
   14001d1b5:	mov    QWORD PTR [r15+0x8],rdi
   14001d1b9:	inc    DWORD PTR [rbp+0x18]
   14001d1bc:	mov    rsi,QWORD PTR [rsi]
   14001d1bf:	cmp    rsi,r14
   14001d1c2:	jne    0x14001d17e
   14001d1c4:	xor    eax,eax
   14001d1c6:	xchg   DWORD PTR [rbx+0x8],eax
   14001d1c9:	lock or DWORD PTR [rsp],0x0
   14001d1ce:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d1d3:	mov    eax,DWORD PTR [rcx+0xc]
   14001d1d6:	test   eax,eax
   14001d1d8:	jle    0x14001d1fd
   14001d1da:	lock or DWORD PTR [rsp],0x0
   14001d1df:	mov    eax,DWORD PTR [rcx+0xc]
   14001d1e2:	mov    rax,QWORD PTR [rsp+0x50]
   14001d1e7:	mov    rcx,QWORD PTR [rax]
   14001d1ea:	test   rcx,rcx
   14001d1ed:	je     0x14001d1fd
   14001d1ef:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d1f4:	mov    rcx,QWORD PTR [rcx]
   14001d1f7:	call   QWORD PTR [rip+0x1c2db]        # 0x1400394d8
   14001d1fd:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d202:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d207:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d20c:	add    rsp,0x30
   14001d210:	pop    r15
   14001d212:	pop    r14
   14001d214:	pop    rdi
   14001d215:	ret    
   14001d216:	int3   
   14001d217:	int3   
   14001d218:	mov    rax,rsp
   14001d21b:	push   rdi
   14001d21c:	sub    rsp,0x30
   14001d220:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001d228:	mov    QWORD PTR [rax+0x10],rbx
   14001d22c:	mov    QWORD PTR [rax+0x18],rbp
   14001d230:	mov    QWORD PTR [rax+0x20],rsi
   14001d234:	mov    rbp,rdx
   14001d237:	mov    rsi,rcx
   14001d23a:	lea    rbx,[rcx+0x20]
   14001d23e:	mov    QWORD PTR [rax+0x8],rbx
   14001d242:	mov    edi,0x1
   14001d247:	mov    eax,edi
   14001d249:	xchg   DWORD PTR [rbx+0x8],eax
   14001d24c:	test   eax,eax
   14001d24e:	je     0x14001d25b
   14001d250:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d255:	call   0x1400178cc
   14001d25a:	nop
   14001d25b:	lea    rcx,[rsi+0x8]
   14001d25f:	mov    rdx,QWORD PTR [rcx]
   14001d262:	cmp    rdx,rcx
   14001d265:	jne    0x14001d26b
   14001d267:	xor    edi,edi
   14001d269:	jmp    0x14001d28a
   14001d26b:	mov    rax,QWORD PTR [rdx]
   14001d26e:	mov    QWORD PTR [rcx],rax
   14001d271:	mov    QWORD PTR [rax+0x8],rcx
   14001d275:	movups xmm0,XMMWORD PTR [rdx+0x10]
   14001d279:	movdqu XMMWORD PTR [rbp+0x0],xmm0
   14001d27e:	dec    DWORD PTR [rsi+0x18]
   14001d281:	mov    rcx,rdx
   14001d284:	call   0x140020e30
   14001d289:	nop
   14001d28a:	xor    eax,eax
   14001d28c:	xchg   DWORD PTR [rbx+0x8],eax
   14001d28f:	lock or DWORD PTR [rsp],0x0
   14001d294:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d299:	mov    eax,DWORD PTR [rcx+0xc]
   14001d29c:	test   eax,eax
   14001d29e:	jle    0x14001d2c3
   14001d2a0:	lock or DWORD PTR [rsp],0x0
   14001d2a5:	mov    ecx,DWORD PTR [rcx+0xc]
   14001d2a8:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d2ad:	mov    rdx,QWORD PTR [rcx]
   14001d2b0:	test   rdx,rdx
   14001d2b3:	je     0x14001d2c3
   14001d2b5:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d2ba:	mov    rcx,QWORD PTR [rcx]
   14001d2bd:	call   QWORD PTR [rip+0x1c215]        # 0x1400394d8
   14001d2c3:	mov    eax,edi
   14001d2c5:	mov    rbx,QWORD PTR [rsp+0x48]
   14001d2ca:	mov    rbp,QWORD PTR [rsp+0x50]
   14001d2cf:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d2d4:	add    rsp,0x30
   14001d2d8:	pop    rdi
   14001d2d9:	ret    
   14001d2da:	int3   
   14001d2db:	int3   
   14001d2dc:	mov    r11,rsp
   14001d2df:	sub    rsp,0x58
   14001d2e3:	mov    rax,QWORD PTR [rsp+0x80]
   14001d2eb:	mov    QWORD PTR [r11-0x28],r9
   14001d2ef:	mov    QWORD PTR [r11-0x38],rdx
   14001d2f3:	mov    QWORD PTR [r11-0x20],rax
   14001d2f7:	lea    rax,[rip+0x21b5e]        # 0x14003ee5c
   14001d2fe:	mov    QWORD PTR [r11-0x30],r8
   14001d302:	mov    QWORD PTR [r11-0x18],rax
   14001d306:	mov    rax,QWORD PTR [rcx]
   14001d309:	lea    r9,[r11-0x38]
   14001d30d:	mov    edx,0xa123091b
   14001d312:	mov    r8d,0x5
   14001d318:	call   QWORD PTR [rax]
   14001d31a:	add    rsp,0x58
   14001d31e:	ret    
   14001d31f:	int3   
   14001d320:	rex push rbp
   14001d322:	push   rbx
   14001d323:	push   rdi
   14001d324:	lea    rbp,[rsp-0x20]
   14001d329:	sub    rsp,0x120
   14001d330:	mov    rax,QWORD PTR [rip+0x30111]        # 0x14004d448
   14001d337:	xor    rax,rsp
   14001d33a:	mov    QWORD PTR [rbp+0x10],rax
   14001d33e:	lea    rax,[rsp+0x50]
   14001d343:	mov    QWORD PTR [rsp+0x30],r9
   14001d348:	mov    r9d,DWORD PTR [rbp+0x60]
   14001d34c:	mov    QWORD PTR [rsp+0x38],rax
   14001d351:	lea    rax,[rbp-0x70]
   14001d355:	mov    rbx,rcx
   14001d358:	mov    QWORD PTR [rsp+0x40],rax
   14001d35d:	mov    QWORD PTR [rsp+0x28],r8
   14001d362:	lea    rax,[rbp-0x30]
   14001d366:	mov    QWORD PTR [rsp+0x20],rdx
   14001d36b:	mov    edi,0x3c
   14001d370:	lea    r8,[rip+0x207f9]        # 0x14003db70
   14001d377:	lea    rcx,[rsp+0x50]
   14001d37c:	mov    edx,edi
   14001d37e:	mov    QWORD PTR [rsp+0x48],rax
   14001d383:	call   0x140001004
   14001d388:	mov    r9d,DWORD PTR [rbp+0x68]
   14001d38c:	lea    r8,[rip+0x207dd]        # 0x14003db70
   14001d393:	lea    rcx,[rbp-0x70]
   14001d397:	mov    edx,edi
   14001d399:	call   0x140001004
   14001d39e:	mov    r9d,DWORD PTR [rbp+0x70]
   14001d3a2:	lea    r8,[rip+0x207c7]        # 0x14003db70
   14001d3a9:	lea    rcx,[rbp-0x30]
   14001d3ad:	mov    edx,edi
   14001d3af:	call   0x140001004
   14001d3b4:	mov    rax,QWORD PTR [rbx]
   14001d3b7:	lea    r9,[rsp+0x20]
   14001d3bc:	lea    r8d,[rdi-0x36]
   14001d3c0:	mov    edx,0xa123091c
   14001d3c5:	mov    rcx,rbx
   14001d3c8:	call   QWORD PTR [rax]
   14001d3ca:	mov    rcx,QWORD PTR [rbp+0x10]
   14001d3ce:	xor    rcx,rsp
   14001d3d1:	call   0x140020e50
   14001d3d6:	add    rsp,0x120
   14001d3dd:	pop    rdi
   14001d3de:	pop    rbx
   14001d3df:	pop    rbp
   14001d3e0:	ret    
   14001d3e1:	int3   
   14001d3e2:	int3   
   14001d3e3:	int3   
   14001d3e4:	mov    QWORD PTR [rsp+0x8],rbx
   14001d3e9:	mov    QWORD PTR [rsp+0x18],rbp
   14001d3ee:	mov    DWORD PTR [rsp+0x10],edx
   14001d3f2:	push   rsi
   14001d3f3:	push   rdi
   14001d3f4:	push   r14
   14001d3f6:	sub    rsp,0x40
   14001d3fa:	mov    rsi,QWORD PTR [rsp+0x80]
   14001d402:	mov    ebp,r9d
   14001d405:	mov    r14,r8
   14001d408:	mov    rdi,rcx
   14001d40b:	xor    ebx,ebx
   14001d40d:	mov    rcx,QWORD PTR [rdi]
   14001d410:	test   rcx,rcx
   14001d413:	je     0x14001d449
   14001d415:	lea    rax,[rsp+0x68]
   14001d41a:	lea    r9,[rsp+0x30]
   14001d41f:	xor    r8d,r8d
   14001d422:	mov    QWORD PTR [rsp+0x28],rax
   14001d427:	mov    rdx,r14
   14001d42a:	mov    DWORD PTR [rsp+0x68],0x4
   14001d432:	mov    QWORD PTR [rsp+0x20],rsi
   14001d437:	mov    DWORD PTR [rsp+0x30],0x4
   14001d43f:	call   QWORD PTR [rip+0x1bbbb]        # 0x140039000
   14001d445:	test   eax,eax
   14001d447:	je     0x14001d46c
   14001d449:	inc    ebx
   14001d44b:	add    rdi,0x18
   14001d44f:	cmp    ebx,0x2
   14001d452:	jb     0x14001d40d
   14001d454:	mov    DWORD PTR [rsi],ebp
   14001d456:	or     eax,0xffffffff
   14001d459:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d45e:	mov    rbp,QWORD PTR [rsp+0x70]
   14001d463:	add    rsp,0x40
   14001d467:	pop    r14
   14001d469:	pop    rdi
   14001d46a:	pop    rsi
   14001d46b:	ret    
   14001d46c:	mov    eax,ebx
   14001d46e:	jmp    0x14001d459
   14001d470:	mov    QWORD PTR [rsp+0x8],rbx
   14001d475:	mov    QWORD PTR [rsp+0x18],rbp
   14001d47a:	mov    DWORD PTR [rsp+0x10],edx
   14001d47e:	push   rsi
   14001d47f:	push   rdi
   14001d480:	push   r14
   14001d482:	sub    rsp,0x30
   14001d486:	mov    rbx,QWORD PTR [rsp+0x70]
   14001d48b:	xor    esi,esi
   14001d48d:	mov    rbp,r8
   14001d490:	lea    edi,[rsi+0xa]
   14001d493:	mov    r14,rcx
   14001d496:	mov    rcx,QWORD PTR [r14]
   14001d499:	test   rcx,rcx
   14001d49c:	je     0x14001d4ce
   14001d49e:	lea    rax,[rsp+0x58]
   14001d4a3:	lea    r9,[rsp+0x78]
   14001d4a8:	xor    r8d,r8d
   14001d4ab:	mov    QWORD PTR [rsp+0x28],rax
   14001d4b0:	mov    rdx,rbp
   14001d4b3:	mov    DWORD PTR [rsp+0x58],edi
   14001d4b7:	mov    QWORD PTR [rsp+0x20],rbx
   14001d4bc:	mov    DWORD PTR [rsp+0x78],0x1
   14001d4c4:	call   QWORD PTR [rip+0x1bb36]        # 0x140039000
   14001d4ca:	test   eax,eax
   14001d4cc:	je     0x14001d521
   14001d4ce:	inc    esi
   14001d4d0:	add    r14,0x18
   14001d4d4:	cmp    esi,0x2
   14001d4d7:	jb     0x14001d496
   14001d4d9:	lea    rcx,[rip+0x21924]        # 0x14003ee04
   14001d4e0:	sub    rcx,rbx
   14001d4e3:	lea    rax,[rdi+0x7ffffff4]
   14001d4ea:	test   rax,rax
   14001d4ed:	je     0x14001d500
   14001d4ef:	mov    al,BYTE PTR [rcx+rbx*1]
   14001d4f2:	test   al,al
   14001d4f4:	je     0x14001d500
   14001d4f6:	mov    BYTE PTR [rbx],al
   14001d4f8:	inc    rbx
   14001d4fb:	dec    rdi
   14001d4fe:	jne    0x14001d4e3
   14001d500:	test   rdi,rdi
   14001d503:	jne    0x14001d508
   14001d505:	dec    rbx
   14001d508:	mov    BYTE PTR [rbx],0x0
   14001d50b:	or     eax,0xffffffff
   14001d50e:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d513:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d518:	add    rsp,0x30
   14001d51c:	pop    r14
   14001d51e:	pop    rdi
   14001d51f:	pop    rsi
   14001d520:	ret    
   14001d521:	mov    eax,esi
   14001d523:	jmp    0x14001d50e
   14001d525:	int3   
   14001d526:	int3   
   14001d527:	int3   
   14001d528:	rex push rbp
   14001d52a:	push   rbx
   14001d52b:	push   rsi
   14001d52c:	push   rdi
   14001d52d:	push   r12
   14001d52f:	push   r14
   14001d531:	push   r15
   14001d533:	mov    rbp,rsp
   14001d536:	sub    rsp,0x50
   14001d53a:	mov    rax,QWORD PTR [rip+0x2ff07]        # 0x14004d448
   14001d541:	xor    rax,rsp
   14001d544:	mov    QWORD PTR [rbp-0x10],rax
   14001d548:	mov    rdi,QWORD PTR [rbp+0x60]
   14001d54c:	mov    r15,QWORD PTR [rbp+0x68]
   14001d550:	mov    rsi,r8
   14001d553:	lea    rax,[rbp-0x20]
   14001d557:	lea    r8,[rip+0x21892]        # 0x14003edf0
   14001d55e:	mov    r14,r9
   14001d561:	mov    QWORD PTR [rsp+0x20],rax
   14001d566:	mov    rbx,rcx
   14001d569:	call   0x14001d470
   14001d56e:	lea    rdx,[rbp-0x20]
   14001d572:	lea    rcx,[rip+0x2188b]        # 0x14003ee04
   14001d579:	mov    BYTE PTR [rbp-0x17],0x0
   14001d57d:	movsxd r12,eax
   14001d580:	call   0x1400302dc
   14001d585:	test   eax,eax
   14001d587:	jne    0x14001d591
   14001d589:	mov    DWORD PTR [rdi],0x1
   14001d58f:	jmp    0x14001d5eb
   14001d591:	lea    rdx,[rbp-0x20]
   14001d595:	lea    rcx,[rip+0x21864]        # 0x14003ee00
   14001d59c:	call   0x1400302dc
   14001d5a1:	test   eax,eax
   14001d5a3:	jne    0x14001d5a9
   14001d5a5:	and    DWORD PTR [rdi],eax
   14001d5a7:	jmp    0x14001d5eb
   14001d5a9:	lea    rdx,[rbp-0x20]
   14001d5ad:	lea    rcx,[rip+0x218a0]        # 0x14003ee54
   14001d5b4:	call   0x1400302dc
   14001d5b9:	test   eax,eax
   14001d5bb:	jne    0x14001d5c2
   14001d5bd:	or     DWORD PTR [rdi],0xffffffff
   14001d5c0:	jmp    0x14001d5eb
   14001d5c2:	lea    rdx,[r12+r12*2]
   14001d5c6:	lea    rax,[rip+0x2183b]        # 0x14003ee08
   14001d5cd:	lea    r9,[rip+0x21864]        # 0x14003ee38
   14001d5d4:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   14001d5d9:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   14001d5de:	mov    rcx,r15
   14001d5e1:	mov    QWORD PTR [rsp+0x20],rax
   14001d5e6:	call   0x14001d2dc
   14001d5eb:	lea    rax,[rbp-0x20]
   14001d5ef:	lea    r8,[rip+0x218a2]        # 0x14003ee98
   14001d5f6:	mov    rcx,rbx
   14001d5f9:	mov    QWORD PTR [rsp+0x20],rax
   14001d5fe:	call   0x14001d470
   14001d603:	lea    rdx,[rbp-0x20]
   14001d607:	lea    rcx,[rip+0x217f6]        # 0x14003ee04
   14001d60e:	mov    BYTE PTR [rbp-0x17],0x0
   14001d612:	movsxd rdi,eax
   14001d615:	call   0x1400302dc
   14001d61a:	lea    r12,[rip+0x21887]        # 0x14003eea8
   14001d621:	test   eax,eax
   14001d623:	jne    0x14001d62e
   14001d625:	mov    DWORD PTR [r14],0x1
   14001d62c:	jmp    0x14001d669
   14001d62e:	lea    rdx,[rbp-0x20]
   14001d632:	lea    rcx,[rip+0x217c7]        # 0x14003ee00
   14001d639:	call   0x1400302dc
   14001d63e:	test   eax,eax
   14001d640:	jne    0x14001d647
   14001d642:	and    DWORD PTR [r14],eax
   14001d645:	jmp    0x14001d669
   14001d647:	lea    rdx,[rdi+rdi*2]
   14001d64b:	lea    r9,[rip+0x21816]        # 0x14003ee68
   14001d652:	mov    rcx,r15
   14001d655:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   14001d65a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   14001d65f:	mov    QWORD PTR [rsp+0x20],r12
   14001d664:	call   0x14001d2dc
   14001d669:	lea    rax,[rbp-0x20]
   14001d66d:	lea    r8,[rip+0x21814]        # 0x14003ee88
   14001d674:	mov    rcx,rbx
   14001d677:	mov    QWORD PTR [rsp+0x20],rax
   14001d67c:	call   0x14001d470
   14001d681:	lea    rdx,[rbp-0x20]
   14001d685:	lea    rcx,[rip+0x21778]        # 0x14003ee04
   14001d68c:	mov    BYTE PTR [rbp-0x17],0x0
   14001d690:	movsxd rdi,eax
   14001d693:	call   0x1400302dc
   14001d698:	test   eax,eax
   14001d69a:	jne    0x14001d6a4
   14001d69c:	mov    DWORD PTR [rsi],0x1
   14001d6a2:	jmp    0x14001d6de
   14001d6a4:	lea    rdx,[rbp-0x20]
   14001d6a8:	lea    rcx,[rip+0x21751]        # 0x14003ee00
   14001d6af:	call   0x1400302dc
   14001d6b4:	test   eax,eax
   14001d6b6:	jne    0x14001d6bc
   14001d6b8:	and    DWORD PTR [rsi],eax
   14001d6ba:	jmp    0x14001d6de
   14001d6bc:	lea    rdx,[rdi+rdi*2]
   14001d6c0:	lea    r9,[rip+0x218b1]        # 0x14003ef78
   14001d6c7:	mov    rcx,r15
   14001d6ca:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   14001d6cf:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   14001d6d4:	mov    QWORD PTR [rsp+0x20],r12
   14001d6d9:	call   0x14001d2dc
   14001d6de:	mov    rcx,QWORD PTR [rbp-0x10]
   14001d6e2:	xor    rcx,rsp
   14001d6e5:	call   0x140020e50
   14001d6ea:	add    rsp,0x50
   14001d6ee:	pop    r15
   14001d6f0:	pop    r14
   14001d6f2:	pop    r12
   14001d6f4:	pop    rdi
   14001d6f5:	pop    rsi
   14001d6f6:	pop    rbx
   14001d6f7:	pop    rbp
   14001d6f8:	ret    
   14001d6f9:	int3   
   14001d6fa:	int3   
   14001d6fb:	int3   
   14001d6fc:	mov    QWORD PTR [rsp+0x8],rbx
   14001d701:	push   rdi
   14001d702:	sub    rsp,0x20
   14001d706:	mov    ebx,edx
   14001d708:	mov    rdi,rcx
   14001d70b:	call   0x14001dff4
   14001d710:	test   bl,0x1
   14001d713:	je     0x14001d71d
   14001d715:	mov    rcx,rdi
   14001d718:	call   0x140020e30
   14001d71d:	mov    rax,rdi
   14001d720:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d725:	add    rsp,0x20
   14001d729:	pop    rdi
   14001d72a:	ret    
   14001d72b:	int3   
   14001d72c:	mov    rax,rsp
   14001d72f:	push   rbp
   14001d730:	push   r14
   14001d732:	push   r15
   14001d734:	lea    rbp,[rax-0x68]
   14001d738:	sub    rsp,0x150
   14001d73f:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14001d747:	mov    QWORD PTR [rax+0x10],rbx
   14001d74b:	mov    QWORD PTR [rax+0x18],rsi
   14001d74f:	mov    QWORD PTR [rax+0x20],rdi
   14001d753:	mov    rax,QWORD PTR [rip+0x2fcee]        # 0x14004d448
   14001d75a:	xor    rax,rsp
   14001d75d:	mov    QWORD PTR [rbp+0x40],rax
   14001d761:	mov    rsi,rcx
   14001d764:	mov    QWORD PTR [rcx+0x178],rdx
   14001d76b:	lea    rdi,[rcx+0x10]
   14001d76f:	mov    r15d,0x1
   14001d775:	mov    DWORD PTR [rsp+0x28],r15d
   14001d77a:	mov    DWORD PTR [rsp+0x20],r15d
   14001d77f:	mov    r9d,r15d
   14001d782:	mov    r14d,0x4b8
   14001d788:	mov    r8d,r14d
   14001d78b:	mov    rdx,QWORD PTR [rip+0x3375e]        # 0x140050ef0
   14001d792:	mov    rcx,rdi
   14001d795:	call   0x14000262c
   14001d79a:	mov    rax,QWORD PTR [rdi]
   14001d79d:	mov    rcx,rdi
   14001d7a0:	call   QWORD PTR [rax+0x8]
   14001d7a3:	mov    rbx,rax
   14001d7a6:	mov    r8d,r14d
   14001d7a9:	xor    edx,edx
   14001d7ab:	mov    rcx,rax
   14001d7ae:	call   0x1400260e0
   14001d7b3:	mov    eax,0xffffffff
   14001d7b8:	mov    QWORD PTR [rbx+0x380],rax
   14001d7bf:	mov    QWORD PTR [rbx+0x3c0],rax
   14001d7c6:	mov    QWORD PTR [rbx+0x400],rax
   14001d7cd:	mov    QWORD PTR [rbx+0x440],rax
   14001d7d4:	xor    r14d,r14d
   14001d7d7:	mov    DWORD PTR [rbx+0x4ac],r14d
   14001d7de:	mov    rax,QWORD PTR [rdi]
   14001d7e1:	mov    rcx,rdi
   14001d7e4:	call   QWORD PTR [rax+0x8]
   14001d7e7:	mov    QWORD PTR [rsi+0x158],rax
   14001d7ee:	lea    ecx,[r15+0x17]
   14001d7f2:	call   0x140021a98
   14001d7f7:	mov    QWORD PTR [rsp+0x48],rax
   14001d7fc:	test   rax,rax
   14001d7ff:	je     0x14001d819
   14001d801:	mov    ecx,DWORD PTR [rsi+0x8]
   14001d804:	mov    DWORD PTR [rsp+0x20],ecx
   14001d808:	mov    rdx,QWORD PTR [rip+0x33729]        # 0x140050f38
   14001d80f:	mov    rcx,rax
   14001d812:	call   0x14001fbbc
   14001d817:	jmp    0x14001d81c
   14001d819:	mov    rax,r14
   14001d81c:	mov    QWORD PTR [rsi+0x150],rax
   14001d823:	mov    rcx,rax
   14001d826:	call   0x14001fcd8
   14001d82b:	mov    QWORD PTR [rbp-0x80],r14
   14001d82f:	mov    QWORD PTR [rsp+0x48],r14
   14001d834:	lea    rax,[rbp-0x80]
   14001d838:	mov    QWORD PTR [rsp+0x20],rax
   14001d83d:	mov    ebx,0x20019
   14001d842:	mov    r9d,ebx
   14001d845:	xor    r8d,r8d
   14001d848:	lea    rdi,[rip+0x21681]        # 0x14003eed0
   14001d84f:	mov    rdx,rdi
   14001d852:	mov    rcx,0xffffffff80000002
   14001d859:	call   QWORD PTR [rip+0x1b821]        # 0x140039080
   14001d85f:	lea    rax,[rsp+0x48]
   14001d864:	mov    QWORD PTR [rsp+0x20],rax
   14001d869:	mov    r9d,ebx
   14001d86c:	xor    r8d,r8d
   14001d86f:	mov    rdx,rdi
   14001d872:	mov    rcx,0xffffffff80000001
   14001d879:	call   QWORD PTR [rip+0x1b801]        # 0x140039080
   14001d87f:	mov    rax,QWORD PTR [rsp+0x48]
   14001d884:	mov    QWORD PTR [rsp+0x50],rax
   14001d889:	lea    rax,[rip+0x21718]        # 0x14003efa8
   14001d890:	mov    QWORD PTR [rsp+0x58],rax
   14001d895:	mov    QWORD PTR [rsp+0x60],rdi
   14001d89a:	mov    rax,QWORD PTR [rbp-0x80]
   14001d89e:	mov    QWORD PTR [rsp+0x68],rax
   14001d8a3:	lea    rax,[rip+0x216a6]        # 0x14003ef50
   14001d8aa:	mov    QWORD PTR [rsp+0x70],rax
   14001d8af:	mov    QWORD PTR [rsp+0x78],rdi
   14001d8b4:	mov    rax,QWORD PTR [rsi+0x158]
   14001d8bb:	mov    DWORD PTR [rax+0x21c],r15d
   14001d8c2:	mov    rax,QWORD PTR [rsi+0x158]
   14001d8c9:	mov    DWORD PTR [rax+0x220],r15d
   14001d8d0:	mov    rax,QWORD PTR [rsi+0x158]
   14001d8d7:	mov    DWORD PTR [rax+0x224],r15d
   14001d8de:	mov    rax,QWORD PTR [rsi+0x158]
   14001d8e5:	mov    ecx,0x202
   14001d8ea:	mov    DWORD PTR [rax+0x8],ecx
   14001d8ed:	mov    rax,QWORD PTR [rsi+0x158]
   14001d8f4:	mov    DWORD PTR [rax+0x4],0x200
   14001d8fb:	mov    rax,QWORD PTR [rsi+0x158]
   14001d902:	mov    DWORD PTR [rax+0xc],0x10000
   14001d909:	mov    rax,QWORD PTR [rsi+0x158]
   14001d910:	mov    ebx,0x40
   14001d915:	mov    DWORD PTR [rax],ebx
   14001d917:	mov    rax,QWORD PTR [rsi+0x158]
   14001d91e:	mov    edi,0x2000
   14001d923:	mov    DWORD PTR [rax+0x10],edi
   14001d926:	mov    rax,QWORD PTR [rsi+0x158]
   14001d92d:	mov    BYTE PTR [rax+0x340],0xff
   14001d934:	cmp    DWORD PTR [rip+0x33439],r14d        # 0x140050d74
   14001d93b:	jne    0x14001d949
   14001d93d:	call   0x140004f38
   14001d942:	mov    DWORD PTR [rip+0x3342b],r15d        # 0x140050d74
   14001d949:	cmp    DWORD PTR [rip+0x3343c],r14d        # 0x140050d8c
   14001d950:	jne    0x14001d974
   14001d952:	mov    eax,DWORD PTR [rip+0x33518]        # 0x140050e70
   14001d958:	mov    DWORD PTR [rip+0x33432],eax        # 0x140050d90
   14001d95e:	test   eax,eax
   14001d960:	jne    0x14001d96d
   14001d962:	call   0x1400052a8
   14001d967:	mov    DWORD PTR [rip+0x3342f],eax        # 0x140050d9c
   14001d96d:	mov    DWORD PTR [rip+0x33418],r15d        # 0x140050d8c
   14001d974:	cmp    DWORD PTR [rip+0x33425],r14d        # 0x140050da0
   14001d97b:	jne    0x14001d989
   14001d97d:	call   0x140005180
   14001d982:	mov    DWORD PTR [rip+0x33417],r15d        # 0x140050da0
   14001d989:	cmp    DWORD PTR [rip+0x333dc],r14d        # 0x140050d6c
   14001d990:	jne    0x14001da00
   14001d992:	cmp    DWORD PTR [rip+0x333db],r14d        # 0x140050d74
   14001d999:	jne    0x14001d9a7
   14001d99b:	call   0x140004f38
   14001d9a0:	mov    DWORD PTR [rip+0x333cd],r15d        # 0x140050d74
   14001d9a7:	cmp    DWORD PTR [rip+0x333de],r14d        # 0x140050d8c
   14001d9ae:	jne    0x14001d9d2
   14001d9b0:	mov    eax,DWORD PTR [rip+0x334ba]        # 0x140050e70
   14001d9b6:	mov    DWORD PTR [rip+0x333d4],eax        # 0x140050d90
   14001d9bc:	test   eax,eax
   14001d9be:	jne    0x14001d9cb
   14001d9c0:	call   0x1400052a8
   14001d9c5:	mov    DWORD PTR [rip+0x333d1],eax        # 0x140050d9c
   14001d9cb:	mov    DWORD PTR [rip+0x333ba],r15d        # 0x140050d8c
   14001d9d2:	cmp    DWORD PTR [rip+0x333c7],r14d        # 0x140050da0
   14001d9d9:	jne    0x14001d9e7
   14001d9db:	call   0x140005180
   14001d9e0:	mov    DWORD PTR [rip+0x333b9],r15d        # 0x140050da0
   14001d9e7:	cmp    DWORD PTR [rip+0x333ba],r14d        # 0x140050da8
   14001d9ee:	jne    0x14001da00
   14001d9f0:	mov    rax,QWORD PTR [rsi+0x158]
   14001d9f7:	mov    BYTE PTR [rax+0x33f],r14b
   14001d9fe:	jmp    0x14001da0e
   14001da00:	mov    rax,QWORD PTR [rsi+0x158]
   14001da07:	mov    BYTE PTR [rax+0x33f],r15b
   14001da0e:	mov    DWORD PTR [rbp-0x40],ebx
   14001da11:	lea    rcx,[rbp-0x40]
   14001da15:	call   QWORD PTR [rip+0x1b755]        # 0x140039170
   14001da1b:	test   eax,eax
   14001da1d:	jne    0x14001da3f
   14001da1f:	mov    rcx,QWORD PTR [rsi+0x178]
   14001da26:	mov    rax,QWORD PTR [rcx]
   14001da29:	xor    r9d,r9d
   14001da2c:	xor    r8d,r8d
   14001da2f:	mov    edx,0xe12305ef
   14001da34:	call   QWORD PTR [rax]
   14001da36:	mov    rax,r14
   14001da39:	mov    QWORD PTR [rbp-0x38],rax
   14001da3d:	jmp    0x14001da43
   14001da3f:	mov    rax,QWORD PTR [rbp-0x38]
   14001da43:	cmp    rax,0x20000000
   14001da49:	jb     0x14001da68
   14001da4b:	mov    rax,QWORD PTR [rsi+0x158]
   14001da52:	mov    DWORD PTR [rax+0x10],edi
   14001da55:	mov    rax,QWORD PTR [rsi+0x158]
   14001da5c:	mov    DWORD PTR [rax+0x4],0x200
   14001da63:	jmp    0x14001daed
   14001da68:	cmp    rax,0x14000000
   14001da6e:	jb     0x14001da8a
   14001da70:	mov    rax,QWORD PTR [rsi+0x158]
   14001da77:	mov    DWORD PTR [rax+0x10],edi
   14001da7a:	mov    rax,QWORD PTR [rsi+0x158]
   14001da81:	mov    DWORD PTR [rax+0x4],0x80
   14001da88:	jmp    0x14001daed
   14001da8a:	cmp    rax,0xc000000
   14001da90:	jb     0x14001da9e
   14001da92:	mov    rax,QWORD PTR [rsi+0x158]
   14001da99:	mov    DWORD PTR [rax+0x10],edi
   14001da9c:	jmp    0x14001dab4
   14001da9e:	cmp    rax,0x8000000
   14001daa4:	jb     0x14001dac0
   14001daa6:	mov    rax,QWORD PTR [rsi+0x158]
   14001daad:	mov    DWORD PTR [rax+0x10],0x1000
   14001dab4:	mov    rax,QWORD PTR [rsi+0x158]
   14001dabb:	mov    DWORD PTR [rax+0x4],ebx
   14001dabe:	jmp    0x14001daed
   14001dac0:	cmp    rax,0x6000000
   14001dac6:	mov    rax,QWORD PTR [rsi+0x158]
   14001dacd:	jb     0x14001dad8
   14001dacf:	mov    DWORD PTR [rax+0x10],0x400
   14001dad6:	jmp    0x14001dadf
   14001dad8:	mov    DWORD PTR [rax+0x10],0x100
   14001dadf:	mov    rax,QWORD PTR [rsi+0x158]
   14001dae6:	mov    DWORD PTR [rax+0x4],0x20
   14001daed:	mov    r8,QWORD PTR [rsi+0x158]
   14001daf4:	lea    rcx,[r8+0x224]
   14001dafb:	lea    r9,[r8+0x220]
   14001db02:	add    r8,0x21c
   14001db09:	mov    rax,QWORD PTR [rsi+0x178]
   14001db10:	mov    QWORD PTR [rsp+0x28],rax
   14001db15:	mov    QWORD PTR [rsp+0x20],rcx
   14001db1a:	lea    rcx,[rsp+0x50]
   14001db1f:	call   0x14001d528
   14001db24:	lea    rax,[rsp+0x40]
   14001db29:	mov    QWORD PTR [rsp+0x20],rax
   14001db2e:	mov    r9d,ebx
   14001db31:	lea    r8,[rip+0x21460]        # 0x14003ef98
   14001db38:	lea    rcx,[rsp+0x50]
   14001db3d:	call   0x14001d3e4
   14001db42:	mov    edx,DWORD PTR [rsp+0x40]
   14001db46:	lea    ecx,[rdx-0x2]
   14001db49:	cmp    ecx,0x7e
   14001db4c:	ja     0x14001db59
   14001db4e:	mov    rax,QWORD PTR [rsi+0x158]
   14001db55:	mov    DWORD PTR [rax],edx
   14001db57:	jmp    0x14001db99
   14001db59:	cdqe   
   14001db5b:	lea    rdx,[rax+rax*2]
   14001db5f:	mov    rax,QWORD PTR [rsi+0x158]
   14001db66:	mov    ecx,DWORD PTR [rax]
   14001db68:	mov    DWORD PTR [rsp+0x30],ecx
   14001db6c:	mov    DWORD PTR [rsp+0x28],0x80
   14001db74:	mov    DWORD PTR [rsp+0x20],0x2
   14001db7c:	lea    r9,[rip+0x21475]        # 0x14003eff8
   14001db83:	mov    r8,QWORD PTR [rsp+rdx*8+0x60]
   14001db88:	mov    rdx,QWORD PTR [rsp+rdx*8+0x58]
   14001db8d:	mov    rcx,QWORD PTR [rsi+0x178]
   14001db94:	call   0x14001d320
   14001db99:	mov    rax,QWORD PTR [rsi+0x158]
   14001dba0:	lea    rcx,[rsp+0x40]
   14001dba5:	mov    QWORD PTR [rsp+0x20],rcx
   14001dbaa:	mov    r9d,DWORD PTR [rax+0x4]
   14001dbae:	lea    r8,[rip+0x21463]        # 0x14003f018
   14001dbb5:	lea    rcx,[rsp+0x50]
   14001dbba:	call   0x14001d3e4
   14001dbbf:	mov    edx,DWORD PTR [rsp+0x40]
   14001dbc3:	lea    ecx,[rdx-0x4]
   14001dbc6:	cmp    ecx,0xffc
   14001dbcc:	ja     0x14001dbda
   14001dbce:	mov    rax,QWORD PTR [rsi+0x158]
   14001dbd5:	mov    DWORD PTR [rax+0x4],edx
   14001dbd8:	jmp    0x14001dc1b
   14001dbda:	cdqe   
   14001dbdc:	lea    rdx,[rax+rax*2]
   14001dbe0:	mov    rax,QWORD PTR [rsi+0x158]
   14001dbe7:	mov    ecx,DWORD PTR [rax+0x4]
   14001dbea:	mov    DWORD PTR [rsp+0x30],ecx
   14001dbee:	mov    DWORD PTR [rsp+0x28],0x1000
   14001dbf6:	mov    DWORD PTR [rsp+0x20],0x4
   14001dbfe:	lea    r9,[rip+0x213cb]        # 0x14003efd0
   14001dc05:	mov    r8,QWORD PTR [rsp+rdx*8+0x60]
   14001dc0a:	mov    rdx,QWORD PTR [rsp+rdx*8+0x58]
   14001dc0f:	mov    rcx,QWORD PTR [rsi+0x178]
   14001dc16:	call   0x14001d320
   14001dc1b:	lea    rax,[rsp+0x40]
   14001dc20:	mov    QWORD PTR [rsp+0x20],rax
   14001dc25:	mov    r9d,ebx
   14001dc28:	lea    r8,[rip+0x213b9]        # 0x14003efe8
   14001dc2f:	lea    rcx,[rsp+0x50]
   14001dc34:	call   0x14001d3e4
   14001dc39:	movsxd rdi,eax
   14001dc3c:	mov    ecx,DWORD PTR [rip+0x33132]        # 0x140050d74
   14001dc42:	test   ecx,ecx
   14001dc44:	jne    0x14001dc54
   14001dc46:	call   0x140004f38
   14001dc4b:	mov    ecx,r15d
   14001dc4e:	mov    DWORD PTR [rip+0x33120],ecx        # 0x140050d74
   14001dc54:	mov    r9d,DWORD PTR [rip+0x33129]        # 0x140050d84
   14001dc5b:	mov    eax,r9d
   14001dc5e:	cdq    
   14001dc5f:	and    edx,0x3ff
   14001dc65:	lea    ebx,[rdx+rax*1]
   14001dc68:	sar    ebx,0xa
   14001dc6b:	sub    ebx,r15d
   14001dc6e:	mov    r8d,DWORD PTR [rsp+0x40]
   14001dc73:	cmp    r8d,0x4
   14001dc77:	jb     0x14001dd21
   14001dc7d:	cmp    r8d,0x400
   14001dc84:	ja     0x14001dd11
   14001dc8a:	test   ecx,ecx
   14001dc8c:	jne    0x14001dca6
   14001dc8e:	call   0x140004f38
   14001dc93:	mov    DWORD PTR [rip+0x330da],r15d        # 0x140050d74
   14001dc9a:	mov    r8d,DWORD PTR [rsp+0x40]
   14001dc9f:	mov    r9d,DWORD PTR [rip+0x330de]        # 0x140050d84
   14001dca6:	mov    eax,r9d
   14001dca9:	cdq    
   14001dcaa:	and    edx,0x3ff
   14001dcb0:	lea    ecx,[rdx+rax*1]
   14001dcb3:	sar    ecx,0xa
   14001dcb6:	xor    edx,edx
   14001dcb8:	mov    eax,r8d
   14001dcbb:	div    ecx
   14001dcbd:	test   edx,edx
   14001dcbf:	je     0x14001dd0b
   14001dcc1:	mov    rcx,QWORD PTR [rsi+0x178]
   14001dcc8:	lea    rdx,[rdi+rdi*2]
   14001dccc:	mov    rax,QWORD PTR [rsp+rdx*8+0x58]
   14001dcd1:	mov    QWORD PTR [rbp-0x78],rax
   14001dcd5:	mov    rax,QWORD PTR [rsp+rdx*8+0x60]
   14001dcda:	mov    QWORD PTR [rbp-0x70],rax
   14001dcde:	mov    rax,QWORD PTR [rcx]
   14001dce1:	lea    r9,[rbp-0x78]
   14001dce5:	mov    edx,0xa123091d
   14001dcea:	mov    r8d,0x2
   14001dcf0:	call   QWORD PTR [rax]
   14001dcf2:	mov    ecx,DWORD PTR [rsp+0x40]
   14001dcf6:	add    ecx,ebx
   14001dcf8:	not    ebx
   14001dcfa:	and    ecx,ebx
   14001dcfc:	shl    ecx,0xa
   14001dcff:	mov    rax,QWORD PTR [rsi+0x158]
   14001dd06:	mov    DWORD PTR [rax+0xc],ecx
   14001dd09:	jmp    0x14001dd7e
   14001dd0b:	lea    ecx,[rbx+r8*1]
   14001dd0f:	jmp    0x14001dcf8
   14001dd11:	mov    rax,QWORD PTR [rsi+0x158]
   14001dd18:	mov    DWORD PTR [rax+0xc],0x400
   14001dd1f:	jmp    0x14001dd2f
   14001dd21:	mov    rax,QWORD PTR [rsi+0x158]
   14001dd28:	mov    DWORD PTR [rax+0xc],0x4
   14001dd2f:	lea    rdx,[rdi+rdi*2]
   14001dd33:	mov    rax,QWORD PTR [rsi+0x158]
   14001dd3a:	mov    ecx,DWORD PTR [rax+0xc]
   14001dd3d:	mov    DWORD PTR [rsp+0x30],ecx
   14001dd41:	mov    DWORD PTR [rsp+0x28],0x400
   14001dd49:	mov    DWORD PTR [rsp+0x20],0x4
   14001dd51:	lea    r9,[rip+0x21300]        # 0x14003f058
   14001dd58:	mov    r8,QWORD PTR [rsp+rdx*8+0x60]
   14001dd5d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x58]
   14001dd62:	mov    rcx,QWORD PTR [rsi+0x178]
   14001dd69:	call   0x14001d320
   14001dd6e:	mov    rcx,QWORD PTR [rsi+0x158]
   14001dd75:	mov    eax,DWORD PTR [rcx+0xc]
   14001dd78:	shl    eax,0xa
   14001dd7b:	mov    DWORD PTR [rcx+0xc],eax
   14001dd7e:	mov    r9,QWORD PTR [rsi+0x158]
   14001dd85:	mov    r8d,DWORD PTR [r9+0xc]
   14001dd89:	mov    ecx,r8d
   14001dd8c:	shl    ecx,0x4
   14001dd8f:	xor    edx,edx
   14001dd91:	mov    rax,QWORD PTR [rbp-0x38]
   14001dd95:	div    rcx
   14001dd98:	mov    r14,rax
   14001dd9b:	shl    r8d,0x2
   14001dd9f:	xor    edx,edx
   14001dda1:	mov    rax,QWORD PTR [rbp-0x38]
   14001dda5:	div    r8
   14001dda8:	mov    rbx,rax
   14001ddab:	mov    eax,0x40000
   14001ddb0:	cmp    ebx,eax
   14001ddb2:	cmova  ebx,eax
   14001ddb5:	mov    r8d,DWORD PTR [r9+0x4]
   14001ddb9:	lea    edi,[r8+0x2]
   14001ddbd:	cmp    edi,ebx
   14001ddbf:	jbe    0x14001dde5
   14001ddc1:	lea    r9d,[rbx-0x2]
   14001ddc5:	mov    edx,0xa1230920
   14001ddca:	mov    rcx,QWORD PTR [rsi+0x178]
   14001ddd1:	call   0x14000caac
   14001ddd6:	lea    ecx,[rbx-0x2]
   14001ddd9:	mov    rax,QWORD PTR [rsi+0x158]
   14001dde0:	mov    DWORD PTR [rax+0x4],ecx
   14001dde3:	mov    edi,ebx
   14001dde5:	mov    eax,0x202
   14001ddea:	cmp    r14d,eax
   14001dded:	cmova  r14d,eax
   14001ddf1:	lea    rax,[rsp+0x40]
   14001ddf6:	mov    QWORD PTR [rsp+0x20],rax
   14001ddfb:	mov    r9d,r14d
   14001ddfe:	lea    r8,[rip+0x21273]        # 0x14003f078
   14001de05:	lea    rcx,[rsp+0x50]
   14001de0a:	call   0x14001d3e4
   14001de0f:	cmp    DWORD PTR [rsp+0x40],edi
   14001de13:	jae    0x14001de94
   14001de15:	mov    DWORD PTR [rsp+0x40],edi
   14001de19:	mov    r9d,edi
   14001de1c:	cmp    eax,0xffffffff
   14001de1f:	je     0x14001de76
   14001de21:	mov    rbx,QWORD PTR [rsi+0x178]
   14001de28:	cdqe   
   14001de2a:	lea    rdx,[rax+rax*2]
   14001de2e:	mov    rax,QWORD PTR [rsp+rdx*8+0x58]
   14001de33:	mov    QWORD PTR [rbp-0x68],rax
   14001de37:	mov    rax,QWORD PTR [rsp+rdx*8+0x60]
   14001de3c:	mov    QWORD PTR [rbp-0x60],rax
   14001de40:	lea    rax,[rbp+0x0]
   14001de44:	mov    QWORD PTR [rbp-0x58],rax
   14001de48:	lea    r8,[rip+0x1fd21]        # 0x14003db70
   14001de4f:	mov    edx,0x3c
   14001de54:	lea    rcx,[rbp+0x0]
   14001de58:	call   0x140001004
   14001de5d:	mov    rax,QWORD PTR [rbx]
   14001de60:	lea    r9,[rbp-0x68]
   14001de64:	mov    edx,0xa123091e
   14001de69:	mov    r8d,0x3
   14001de6f:	mov    rcx,rbx
   14001de72:	call   QWORD PTR [rax]
   14001de74:	jmp    0x14001ded1
   14001de76:	mov    rax,QWORD PTR [rsi+0x158]
   14001de7d:	mov    r8d,DWORD PTR [rax+0x4]
   14001de81:	mov    edx,0xa1230922
   14001de86:	mov    rcx,QWORD PTR [rsi+0x178]
   14001de8d:	call   0x14000caac
   14001de92:	jmp    0x14001ded1
   14001de94:	cmp    DWORD PTR [rsp+0x40],ebx
   14001de98:	jbe    0x14001ded1
   14001de9a:	mov    DWORD PTR [rsp+0x40],ebx
   14001de9e:	cdqe   
   14001dea0:	lea    rdx,[rax+rax*2]
   14001dea4:	mov    DWORD PTR [rsp+0x30],ebx
   14001dea8:	mov    DWORD PTR [rsp+0x28],ebx
   14001deac:	mov    DWORD PTR [rsp+0x20],0x6
   14001deb4:	lea    r9,[rip+0x2116d]        # 0x14003f028
   14001debb:	mov    r8,QWORD PTR [rsp+rdx*8+0x60]
   14001dec0:	mov    rdx,QWORD PTR [rsp+rdx*8+0x58]
   14001dec5:	mov    rcx,QWORD PTR [rsi+0x178]
   14001decc:	call   0x14001d320
   14001ded1:	mov    rcx,QWORD PTR [rsi+0x158]
   14001ded8:	mov    eax,DWORD PTR [rsp+0x40]
   14001dedc:	mov    DWORD PTR [rcx+0x8],eax
   14001dedf:	mov    rax,QWORD PTR [rsi+0x158]
   14001dee6:	lea    rcx,[rsp+0x40]
   14001deeb:	mov    QWORD PTR [rsp+0x20],rcx
   14001def0:	mov    r9d,DWORD PTR [rax+0x10]
   14001def4:	lea    r8,[rip+0x2114d]        # 0x14003f048
   14001defb:	lea    rcx,[rsp+0x50]
   14001df00:	call   0x14001d3e4
   14001df05:	mov    ecx,DWORD PTR [rsp+0x40]
   14001df09:	mov    r8d,0x2000
   14001df0f:	cmp    ecx,r8d
   14001df12:	ja     0x14001df23
   14001df14:	cmp    ecx,0x100
   14001df1a:	jae    0x14001df62
   14001df1c:	mov    ecx,0x100
   14001df21:	jmp    0x14001df26
   14001df23:	mov    ecx,r8d
   14001df26:	mov    DWORD PTR [rsp+0x40],ecx
   14001df2a:	cdqe   
   14001df2c:	lea    rdx,[rax+rax*2]
   14001df30:	mov    DWORD PTR [rsp+0x30],ecx
   14001df34:	mov    DWORD PTR [rsp+0x28],r8d
   14001df39:	mov    DWORD PTR [rsp+0x20],0x100
   14001df41:	lea    r9,[rip+0x21140]        # 0x14003f088
   14001df48:	mov    r8,QWORD PTR [rsp+rdx*8+0x60]
   14001df4d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x58]
   14001df52:	mov    rcx,QWORD PTR [rsi+0x178]
   14001df59:	call   0x14001d320
   14001df5e:	mov    ecx,DWORD PTR [rsp+0x40]
   14001df62:	mov    rax,QWORD PTR [rsi+0x158]
   14001df69:	mov    DWORD PTR [rax+0x10],ecx
   14001df6c:	mov    rcx,QWORD PTR [rsi+0x158]
   14001df73:	mov    eax,DWORD PTR [rcx+0x21c]
   14001df79:	mov    DWORD PTR [rsi+0x160],eax
   14001df7f:	mov    eax,DWORD PTR [rcx+0x220]
   14001df85:	mov    DWORD PTR [rsi+0x164],eax
   14001df8b:	mov    eax,DWORD PTR [rcx+0x224]
   14001df91:	mov    DWORD PTR [rsi+0x168],eax
   14001df97:	mov    rcx,QWORD PTR [rbp-0x80]
   14001df9b:	call   QWORD PTR [rip+0x1b06f]        # 0x140039010
   14001dfa1:	mov    rcx,QWORD PTR [rsp+0x48]
   14001dfa6:	call   QWORD PTR [rip+0x1b064]        # 0x140039010
   14001dfac:	mov    rax,QWORD PTR [rsi+0x158]
   14001dfb3:	mov    DWORD PTR [rax+0x348],r15d
   14001dfba:	mov    rcx,QWORD PTR [rsi+0x150]
   14001dfc1:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dfc5:	call   QWORD PTR [rip+0x1b52d]        # 0x1400394f8
   14001dfcb:	mov    rcx,QWORD PTR [rbp+0x40]
   14001dfcf:	xor    rcx,rsp
   14001dfd2:	call   0x140020e50
   14001dfd7:	lea    r11,[rsp+0x150]
   14001dfdf:	mov    rbx,QWORD PTR [r11+0x28]
   14001dfe3:	mov    rsi,QWORD PTR [r11+0x30]
   14001dfe7:	mov    rdi,QWORD PTR [r11+0x38]
   14001dfeb:	mov    rsp,r11
   14001dfee:	pop    r15
   14001dff0:	pop    r14
   14001dff2:	pop    rbp
   14001dff3:	ret    
   14001dff4:	mov    r11,rsp
   14001dff7:	mov    QWORD PTR [r11+0x8],rcx
   14001dffb:	push   rdi
   14001dffc:	sub    rsp,0x30
   14001e000:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001e008:	mov    QWORD PTR [r11+0x18],rbx
   14001e00c:	mov    rdi,rcx
   14001e00f:	lea    rax,[rip+0x2109a]        # 0x14003f0b0
   14001e016:	mov    QWORD PTR [rcx],rax
   14001e019:	mov    rbx,QWORD PTR [rcx+0x150]
   14001e020:	mov    QWORD PTR [r11+0x10],rbx
   14001e024:	test   rbx,rbx
   14001e027:	je     0x14001e045
   14001e029:	lea    rax,[rip+0x211b0]        # 0x14003f1e0
   14001e030:	mov    QWORD PTR [rbx],rax
   14001e033:	lea    rcx,[rbx+0x8]
   14001e037:	call   0x1400179a8
   14001e03c:	mov    rcx,rbx
   14001e03f:	call   0x140020e30
   14001e044:	nop
   14001e045:	lea    rcx,[rdi+0x10]
   14001e049:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e04e:	add    rsp,0x30
   14001e052:	pop    rdi
   14001e053:	jmp    0x14000257c
   14001e058:	mov    QWORD PTR [rsp+0x8],rbx
   14001e05d:	mov    QWORD PTR [rsp+0x10],rsi
   14001e062:	push   rdi
   14001e063:	sub    rsp,0x20
   14001e067:	mov    ebx,r8d
   14001e06a:	mov    rdi,rdx
   14001e06d:	mov    rsi,rcx
   14001e070:	test   r8b,0x1
   14001e074:	jne    0x14001e07d
   14001e076:	mov    eax,0xc
   14001e07b:	jmp    0x14001e0a2
   14001e07d:	add    rcx,0x18
   14001e081:	mov    r8d,0x6
   14001e087:	mov    rax,QWORD PTR [rcx]
   14001e08a:	call   QWORD PTR [rax]
   14001e08c:	test   eax,eax
   14001e08e:	jne    0x14001e0a2
   14001e090:	mov    rcx,QWORD PTR [rsi+0x150]
   14001e097:	mov    r8d,ebx
   14001e09a:	mov    rdx,rdi
   14001e09d:	mov    rax,QWORD PTR [rcx]
   14001e0a0:	call   QWORD PTR [rax]
   14001e0a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e0a7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e0ac:	add    rsp,0x20
   14001e0b0:	pop    rdi
   14001e0b1:	ret    
   14001e0b2:	int3   
   14001e0b3:	int3   
   14001e0b4:	mov    QWORD PTR [rsp+0x10],rbx
   14001e0b9:	push   rdi
   14001e0ba:	sub    rsp,0x20
   14001e0be:	mov    rbx,rcx
   14001e0c1:	add    rcx,0x18
   14001e0c5:	mov    rdi,rdx
   14001e0c8:	mov    rax,QWORD PTR [rcx]
   14001e0cb:	call   QWORD PTR [rax+0x8]
   14001e0ce:	mov    rcx,QWORD PTR [rbx+0x150]
   14001e0d5:	mov    rdx,rdi
   14001e0d8:	mov    DWORD PTR [rsp+0x30],eax
   14001e0dc:	mov    rax,QWORD PTR [rcx]
   14001e0df:	call   QWORD PTR [rax+0x8]
   14001e0e2:	lea    rcx,[rsp+0x30]
   14001e0e7:	mov    DWORD PTR [rsp+0x34],eax
   14001e0eb:	xor    eax,eax
   14001e0ed:	mov    edx,DWORD PTR [rcx]
   14001e0ef:	test   edx,edx
   14001e0f1:	jne    0x14001e102
   14001e0f3:	inc    eax
   14001e0f5:	add    rcx,0x4
   14001e0f9:	cmp    eax,0x2
   14001e0fc:	jb     0x14001e0ed
   14001e0fe:	xor    eax,eax
   14001e100:	jmp    0x14001e104
   14001e102:	mov    eax,edx
   14001e104:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e109:	add    rsp,0x20
   14001e10d:	pop    rdi
   14001e10e:	ret    
   14001e10f:	int3   
   14001e110:	mov    r11,rsp
   14001e113:	mov    QWORD PTR [r11+0x8],rcx
   14001e117:	push   rdi
   14001e118:	sub    rsp,0x30
   14001e11c:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001e124:	mov    QWORD PTR [r11+0x18],rbx
   14001e128:	mov    rbx,rcx
   14001e12b:	lea    rax,[rip+0x20f9e]        # 0x14003f0d0
   14001e132:	mov    QWORD PTR [rcx],rax
   14001e135:	and    QWORD PTR [rcx+0x10],0x0
   14001e13a:	mov    rdi,QWORD PTR [rcx+0x298]
   14001e141:	mov    QWORD PTR [r11+0x10],rdi
   14001e145:	test   rdi,rdi
   14001e148:	je     0x14001e165
   14001e14a:	lea    rax,[rip+0x2108f]        # 0x14003f1e0
   14001e151:	mov    QWORD PTR [rdi],rax
   14001e154:	lea    rcx,[rdi+0x8]
   14001e158:	call   0x1400179a8
   14001e15d:	mov    rcx,rdi
   14001e160:	call   0x140020e30
   14001e165:	and    QWORD PTR [rbx+0x298],0x0
   14001e16d:	lea    rcx,[rbx+0x2a0]
   14001e174:	call   0x14001ce18
   14001e179:	nop
   14001e17a:	lea    rcx,[rbx+0x158]
   14001e181:	call   0x14000257c
   14001e186:	nop
   14001e187:	lea    rcx,[rbx+0x18]
   14001e18b:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e190:	add    rsp,0x30
   14001e194:	pop    rdi
   14001e195:	jmp    0x14000257c
   14001e19a:	int3   
   14001e19b:	int3   
   14001e19c:	mov    rax,rsp
   14001e19f:	push   rsi
   14001e1a0:	push   rdi
   14001e1a1:	push   r14
   14001e1a3:	sub    rsp,0x50
   14001e1a7:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001e1af:	mov    QWORD PTR [rax+0x10],rbx
   14001e1b3:	mov    QWORD PTR [rax+0x18],rbp
   14001e1b7:	mov    rsi,rcx
   14001e1ba:	mov    r14d,0x1
   14001e1c0:	mov    eax,DWORD PTR [rip+0x32bae]        # 0x140050d74
   14001e1c6:	xor    edi,edi
   14001e1c8:	test   eax,eax
   14001e1ca:	jne    0x14001e1da
   14001e1cc:	call   0x140004f38
   14001e1d1:	mov    eax,r14d
   14001e1d4:	mov    DWORD PTR [rip+0x32b9a],eax        # 0x140050d74
   14001e1da:	mov    ecx,DWORD PTR [rip+0x32ba4]        # 0x140050d84
   14001e1e0:	mov    ebx,ecx
   14001e1e2:	test   eax,eax
   14001e1e4:	jne    0x14001e1f8
   14001e1e6:	call   0x140004f38
   14001e1eb:	mov    DWORD PTR [rip+0x32b82],r14d        # 0x140050d74
   14001e1f2:	mov    ecx,DWORD PTR [rip+0x32b8c]        # 0x140050d84
   14001e1f8:	lea    ebp,[rcx-0x1]
   14001e1fb:	not    ebp
   14001e1fd:	lea    eax,[rbx+0x4d27]
   14001e203:	and    ebp,eax
   14001e205:	lea    rbx,[rsi+0x158]
   14001e20c:	mov    DWORD PTR [rsp+0x28],r14d
   14001e211:	mov    DWORD PTR [rsp+0x20],edi
   14001e215:	mov    r9d,r14d
   14001e218:	mov    r8d,0x4b8
   14001e21e:	mov    rdx,QWORD PTR [rip+0x32ccb]        # 0x140050ef0
   14001e225:	mov    rcx,rbx
   14001e228:	call   0x14000262c
   14001e22d:	mov    rax,QWORD PTR [rbx]
   14001e230:	mov    rcx,rbx
   14001e233:	call   QWORD PTR [rax+0x8]
   14001e236:	mov    ecx,0x18
   14001e23b:	call   0x140021a98
   14001e240:	mov    QWORD PTR [rsp+0x70],rax
   14001e245:	test   rax,rax
   14001e248:	je     0x14001e262
   14001e24a:	mov    ecx,DWORD PTR [rsi+0x8]
   14001e24d:	mov    DWORD PTR [rsp+0x20],ecx
   14001e251:	mov    rdx,QWORD PTR [rip+0x32cc0]        # 0x140050f18
   14001e258:	mov    rcx,rax
   14001e25b:	call   0x14001fbbc
   14001e260:	jmp    0x14001e265
   14001e262:	mov    rax,rdi
   14001e265:	mov    QWORD PTR [rsi+0x298],rax
   14001e26c:	lea    rbx,[rsi+0x18]
   14001e270:	cmp    DWORD PTR [rsi+0x8],r14d
   14001e274:	sete   dil
   14001e278:	mov    DWORD PTR [rsp+0x28],r14d
   14001e27d:	mov    DWORD PTR [rsp+0x20],edi
   14001e281:	mov    r9d,r14d
   14001e284:	mov    r8d,ebp
   14001e287:	mov    rdx,QWORD PTR [rip+0x32c6a]        # 0x140050ef8
   14001e28e:	mov    rcx,rbx
   14001e291:	call   0x14000262c
   14001e296:	mov    rax,QWORD PTR [rbx]
   14001e299:	mov    rcx,rbx
   14001e29c:	call   QWORD PTR [rax+0x8]
   14001e29f:	mov    QWORD PTR [rsi+0x10],rax
   14001e2a3:	lea    r11,[rsp+0x50]
   14001e2a8:	mov    rbx,QWORD PTR [r11+0x28]
   14001e2ac:	mov    rbp,QWORD PTR [r11+0x30]
   14001e2b0:	mov    rsp,r11
   14001e2b3:	pop    r14
   14001e2b5:	pop    rdi
   14001e2b6:	pop    rsi
   14001e2b7:	ret    
   14001e2b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e2bd:	mov    QWORD PTR [rsp+0x18],rbp
   14001e2c2:	mov    QWORD PTR [rsp+0x20],rsi
   14001e2c7:	push   rdi
   14001e2c8:	push   r12
   14001e2ca:	push   r13
   14001e2cc:	push   r14
   14001e2ce:	push   r15
   14001e2d0:	sub    rsp,0x70
   14001e2d4:	mov    r14d,r9d
   14001e2d7:	mov    r15d,r8d
   14001e2da:	mov    esi,edx
   14001e2dc:	mov    rdi,rcx
   14001e2df:	call   0x14001e19c
   14001e2e4:	mov    eax,DWORD PTR [rip+0x32a8a]        # 0x140050d74
   14001e2ea:	xor    r12d,r12d
   14001e2ed:	mov    r13d,0x1
   14001e2f3:	test   eax,eax
   14001e2f5:	jne    0x14001e305
   14001e2f7:	call   0x140004f38
   14001e2fc:	mov    eax,r13d
   14001e2ff:	mov    DWORD PTR [rip+0x32a6f],eax        # 0x140050d74
   14001e305:	mov    ebx,DWORD PTR [rip+0x32a79]        # 0x140050d84
   14001e30b:	mov    ebp,ebx
   14001e30d:	test   eax,eax
   14001e30f:	jne    0x14001e323
   14001e311:	call   0x140004f38
   14001e316:	mov    ebx,DWORD PTR [rip+0x32a68]        # 0x140050d84
   14001e31c:	mov    DWORD PTR [rip+0x32a51],r13d        # 0x140050d74
   14001e323:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e327:	dec    ebx
   14001e329:	lea    eax,[rbp+0x4d27]
   14001e32f:	not    ebx
   14001e331:	xor    edx,edx
   14001e333:	and    ebx,eax
   14001e335:	mov    r8d,ebx
   14001e338:	call   0x1400260e0
   14001e33d:	mov    rax,QWORD PTR [rdi+0x10]
   14001e341:	mov    ebp,0x10
   14001e346:	mov    DWORD PTR [rax+0xa4],esi
   14001e34c:	mov    rax,QWORD PTR [rdi+0x10]
   14001e350:	mov    DWORD PTR [rax],0x454b494d
   14001e356:	mov    rax,QWORD PTR [rdi+0x10]
   14001e35a:	mov    DWORD PTR [rax+0x8],0x2b
   14001e361:	mov    rax,QWORD PTR [rdi+0x10]
   14001e365:	mov    DWORD PTR [rax+0x54],0x2
   14001e36c:	cmp    esi,r13d
   14001e36f:	je     0x14001e37d
   14001e371:	cmp    esi,ebp
   14001e373:	je     0x14001e37d
   14001e375:	mov    rax,QWORD PTR [rdi+0x10]
   14001e379:	mov    DWORD PTR [rax+0x54],r13d
   14001e37d:	mov    rax,QWORD PTR [rdi+0x10]
   14001e381:	lea    r8,[rip+0x20d90]        # 0x14003f118
   14001e388:	mov    esi,0x40
   14001e38d:	mov    DWORD PTR [rax+0x4],ebx
   14001e390:	mov    rax,QWORD PTR [rdi+0x10]
   14001e394:	mov    edx,esi
   14001e396:	mov    DWORD PTR [rax+0xc],0xb
   14001e39d:	mov    rax,QWORD PTR [rdi+0x10]
   14001e3a1:	mov    DWORD PTR [rax+0x10],0xc627
   14001e3a8:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e3ac:	add    rcx,0x14
   14001e3b0:	sub    r8,rcx
   14001e3b3:	lea    rax,[rdx+0x7fffffbe]
   14001e3ba:	test   rax,rax
   14001e3bd:	je     0x14001e3d1
   14001e3bf:	mov    al,BYTE PTR [r8+rcx*1]
   14001e3c3:	test   al,al
   14001e3c5:	je     0x14001e3d1
   14001e3c7:	mov    BYTE PTR [rcx],al
   14001e3c9:	add    rcx,r13
   14001e3cc:	sub    rdx,r13
   14001e3cf:	jne    0x14001e3b3
   14001e3d1:	test   rdx,rdx
   14001e3d4:	jne    0x14001e3d9
   14001e3d6:	sub    rcx,r13
   14001e3d9:	mov    BYTE PTR [rcx],r12b
   14001e3dc:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e3e0:	add    rcx,0x58
   14001e3e4:	call   QWORD PTR [rip+0x1ad9e]        # 0x140039188
   14001e3ea:	mov    rax,QWORD PTR [rdi+0x10]
   14001e3ee:	lea    r8,[rip+0x20ceb]        # 0x14003f0e0
   14001e3f5:	mov    DWORD PTR [rax+0x68],r12d
   14001e3f9:	mov    rax,QWORD PTR [rdi+0x10]
   14001e3fd:	mov    DWORD PTR [rax+0x6c],r12d
   14001e401:	mov    rax,QWORD PTR [rdi+0x10]
   14001e405:	mov    DWORD PTR [rax+0x70],r12d
   14001e409:	mov    rax,QWORD PTR [rdi+0x10]
   14001e40d:	mov    DWORD PTR [rax+0x7c],r12d
   14001e411:	mov    rax,QWORD PTR [rdi+0x10]
   14001e415:	mov    DWORD PTR [rax+0x78],r12d
   14001e419:	mov    rax,QWORD PTR [rdi+0x10]
   14001e41d:	mov    DWORD PTR [rax+0x74],r12d
   14001e421:	mov    rax,QWORD PTR [rdi+0x10]
   14001e425:	mov    QWORD PTR [rax+0x890],r12
   14001e42c:	mov    rax,QWORD PTR [rdi+0x10]
   14001e430:	mov    DWORD PTR [rax+0x898],r12d
   14001e437:	mov    rax,QWORD PTR [rdi+0x10]
   14001e43b:	mov    QWORD PTR [rax+0x89c],r12
   14001e442:	mov    rax,QWORD PTR [rdi+0x10]
   14001e446:	mov    DWORD PTR [rax+0x8a4],r12d
   14001e44d:	mov    rax,QWORD PTR [rdi+0x10]
   14001e451:	mov    DWORD PTR [rax+0x8a8],r12d
   14001e458:	mov    rax,QWORD PTR [rdi+0x10]
   14001e45c:	mov    DWORD PTR [rax+0x9f4],r12d
   14001e463:	mov    rax,QWORD PTR [rdi+0x10]
   14001e467:	mov    DWORD PTR [rax+0x8c],r15d
   14001e46e:	mov    rax,QWORD PTR [rdi+0x10]
   14001e472:	or     r15,0xffffffffffffffff
   14001e476:	mov    DWORD PTR [rax+0x90],r14d
   14001e47d:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e481:	mov    eax,DWORD PTR [rsp+0xc0]
   14001e488:	mov    DWORD PTR [rcx+0x94],eax
   14001e48e:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e492:	mov    eax,DWORD PTR [rsp+0xc8]
   14001e499:	mov    DWORD PTR [rcx+0x98],eax
   14001e49f:	mov    rax,QWORD PTR [rdi+0x10]
   14001e4a3:	mov    r14d,0x20
   14001e4a9:	mov    DWORD PTR [rax+0x9c],r12d
   14001e4b0:	mov    rax,QWORD PTR [rdi+0x10]
   14001e4b4:	mov    r9,r15
   14001e4b7:	or     DWORD PTR [rax+0x9c],r14d
   14001e4be:	mov    rax,QWORD PTR [rdi+0x10]
   14001e4c2:	mov    edx,r14d
   14001e4c5:	mov    DWORD PTR [rax+0xb0],r12d
   14001e4cc:	mov    rax,QWORD PTR [rdi+0x10]
   14001e4d0:	mov    DWORD PTR [rax+0xb4],r12d
   14001e4d7:	mov    rbx,QWORD PTR [rdi+0x10]
   14001e4db:	lea    rcx,[rbx+0x220]
   14001e4e2:	mov    QWORD PTR [rbx+0x210],r13
   14001e4e9:	mov    DWORD PTR [rbx+0x218],0x3
   14001e4f3:	call   0x140027a98
   14001e4f8:	mov    DWORD PTR [rbx+0x21c],r13d
   14001e4ff:	mov    rax,QWORD PTR [rdi+0x10]
   14001e503:	mov    DWORD PTR [rax+0x20c],r13d
   14001e50a:	lea    ebx,[r14+0x30]
   14001e50e:	mov    rax,QWORD PTR [rdi+0x10]
   14001e512:	lea    r8,[rip+0x20bef]        # 0x14003f108
   14001e519:	mov    r9,r15
   14001e51c:	lea    rcx,[rax+0x220]
   14001e523:	mov    rdx,r14
   14001e526:	mov    QWORD PTR [rbx+rax*1+0x210],r12
   14001e52e:	add    rcx,rbx
   14001e531:	mov    DWORD PTR [rbx+rax*1+0x218],r12d
   14001e539:	call   0x140027a98
   14001e53e:	add    rbx,0x50
   14001e542:	cmp    rbx,0x500
   14001e549:	jl     0x14001e50e
   14001e54b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e54f:	mov    ebx,0x8ac
   14001e554:	lea    rdx,[rsp+0xa8]
   14001e55c:	add    rcx,rbx
   14001e55f:	mov    DWORD PTR [rsp+0xa8],ebp
   14001e566:	call   QWORD PTR [rip+0x1ac0c]        # 0x140039178
   14001e56c:	test   eax,eax
   14001e56e:	jne    0x14001e586
   14001e570:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e574:	lea    r8,[rip+0x1fe25]        # 0x14003e3a0
   14001e57b:	mov    rdx,rbp
   14001e57e:	add    rcx,rbx
   14001e581:	call   0x140008194
   14001e586:	mov    rax,QWORD PTR [rdi+0x10]
   14001e58a:	mov    DWORD PTR [rax+0x8e0],0x114
   14001e594:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e598:	add    rcx,0x8e0
   14001e59f:	call   QWORD PTR [rip+0x1abdb]        # 0x140039180
   14001e5a5:	mov    ebx,r12d
   14001e5a8:	mov    rax,QWORD PTR [rdi+0x10]
   14001e5ac:	mov    ecx,ebx
   14001e5ae:	mov    r8,rsi
   14001e5b1:	add    rax,0x710
   14001e5b7:	shl    rcx,0x6
   14001e5bb:	xor    edx,edx
   14001e5bd:	add    rcx,rax
   14001e5c0:	call   0x1400260e0
   14001e5c5:	add    ebx,r13d
   14001e5c8:	cmp    ebx,0x6
   14001e5cb:	jl     0x14001e5a8
   14001e5cd:	cmp    DWORD PTR [rip+0x327a0],r12d        # 0x140050d74
   14001e5d4:	jne    0x14001e5e2
   14001e5d6:	call   0x140004f38
   14001e5db:	mov    DWORD PTR [rip+0x32792],r13d        # 0x140050d74
   14001e5e2:	mov    rax,QWORD PTR [rdi+0x10]
   14001e5e6:	movsx  ecx,WORD PTR [rip+0x3279b]        # 0x140050d88
   14001e5ed:	mov    DWORD PTR [rax+0x8cc],ecx
   14001e5f3:	call   0x140006928
   14001e5f8:	mov    ecx,0x8000
   14001e5fd:	test   cx,ax
   14001e600:	je     0x14001e691
   14001e606:	mov    ecx,0x4000
   14001e60b:	test   cx,ax
   14001e60e:	je     0x14001e620
   14001e610:	mov    rax,QWORD PTR [rdi+0x10]
   14001e614:	mov    DWORD PTR [rax+0x8d0],0x2
   14001e61e:	jmp    0x14001e69c
   14001e620:	mov    ecx,0x2000
   14001e625:	test   cx,ax
   14001e628:	je     0x14001e63a
   14001e62a:	mov    rax,QWORD PTR [rdi+0x10]
   14001e62e:	mov    DWORD PTR [rax+0x8d0],0x3
   14001e638:	jmp    0x14001e69c
   14001e63a:	mov    ecx,0x1000
   14001e63f:	test   cx,ax
   14001e642:	je     0x14001e654
   14001e644:	mov    rax,QWORD PTR [rdi+0x10]
   14001e648:	mov    DWORD PTR [rax+0x8d0],0x4
   14001e652:	jmp    0x14001e69c
   14001e654:	mov    ecx,0x800
   14001e659:	test   cx,ax
   14001e65c:	je     0x14001e66e
   14001e65e:	mov    rax,QWORD PTR [rdi+0x10]
   14001e662:	mov    DWORD PTR [rax+0x8d0],0x5
   14001e66c:	jmp    0x14001e69c
   14001e66e:	mov    ecx,0x400
   14001e673:	test   cx,ax
   14001e676:	mov    rax,QWORD PTR [rdi+0x10]
   14001e67a:	je     0x14001e688
   14001e67c:	mov    DWORD PTR [rax+0x8d0],0x6
   14001e686:	jmp    0x14001e69c
   14001e688:	mov    DWORD PTR [rax+0x8d0],r12d
   14001e68f:	jmp    0x14001e69c
   14001e691:	mov    rax,QWORD PTR [rdi+0x10]
   14001e695:	mov    DWORD PTR [rax+0x8d0],r13d
   14001e69c:	cmp    DWORD PTR [rip+0x326d1],r12d        # 0x140050d74
   14001e6a3:	jne    0x14001e6b1
   14001e6a5:	call   0x140004f38
   14001e6aa:	mov    DWORD PTR [rip+0x326c3],r13d        # 0x140050d74
   14001e6b1:	mov    rax,QWORD PTR [rdi+0x10]
   14001e6b5:	movzx  ecx,WORD PTR [rip+0x326bc]        # 0x140050d78
   14001e6bc:	mov    DWORD PTR [rax+0x8d4],ecx
   14001e6c2:	mov    edx,DWORD PTR [rip+0x326ac]        # 0x140050d74
   14001e6c8:	test   edx,edx
   14001e6ca:	jne    0x14001e6da
   14001e6cc:	call   0x140004f38
   14001e6d1:	mov    edx,r13d
   14001e6d4:	mov    DWORD PTR [rip+0x3269a],edx        # 0x140050d74
   14001e6da:	mov    ebx,DWORD PTR [rsp+0x4c]
   14001e6de:	mov    ecx,DWORD PTR [rip+0x32778]        # 0x140050e5c
   14001e6e4:	mov    eax,ecx
   14001e6e6:	xor    eax,ebx
   14001e6e8:	and    eax,0xf00
   14001e6ed:	xor    ebx,eax
   14001e6ef:	test   edx,edx
   14001e6f1:	jne    0x14001e707
   14001e6f3:	call   0x140004f38
   14001e6f8:	mov    ecx,DWORD PTR [rip+0x3275e]        # 0x140050e5c
   14001e6fe:	mov    edx,r13d
   14001e701:	mov    DWORD PTR [rip+0x3266d],edx        # 0x140050d74
   14001e707:	mov    eax,ecx
   14001e709:	xor    eax,ebx
   14001e70b:	and    eax,0xf0
   14001e710:	xor    ebx,eax
   14001e712:	test   edx,edx
   14001e714:	jne    0x14001e728
   14001e716:	call   0x140004f38
   14001e71b:	mov    ecx,DWORD PTR [rip+0x3273b]        # 0x140050e5c
   14001e721:	mov    DWORD PTR [rip+0x3264c],r13d        # 0x140050d74
   14001e728:	mov    rax,QWORD PTR [rdi+0x10]
   14001e72c:	xor    ecx,ebx
   14001e72e:	and    ecx,0xf
   14001e731:	xor    ecx,ebx
   14001e733:	mov    DWORD PTR [rax+0x8d8],ecx
   14001e739:	call   0x140006980
   14001e73e:	mov    ecx,eax
   14001e740:	test   eax,eax
   14001e742:	mov    rax,QWORD PTR [rdi+0x10]
   14001e746:	jne    0x14001e764
   14001e748:	or     DWORD PTR [rax+0x8dc],0xffffffff
   14001e74f:	xor    r9d,r9d
   14001e752:	xor    r8d,r8d
   14001e755:	mov    edx,0xe123056d
   14001e75a:	mov    rcx,rdi
   14001e75d:	call   0x14001e7cc
   14001e762:	jmp    0x14001e76a
   14001e764:	mov    DWORD PTR [rax+0x8dc],ecx
   14001e76a:	lea    rbx,[rdi+0x2a0]
   14001e771:	jmp    0x14001e793
   14001e773:	mov    r9,QWORD PTR [rsp+0x38]
   14001e778:	mov    r8d,DWORD PTR [rsp+0x34]
   14001e77d:	mov    edx,DWORD PTR [rsp+0x30]
   14001e781:	mov    rcx,rdi
   14001e784:	call   0x14001e7cc
   14001e789:	lea    rcx,[rsp+0x30]
   14001e78e:	call   0x14001cdd0
   14001e793:	lea    rdx,[rsp+0x30]
   14001e798:	mov    rcx,rbx
   14001e79b:	call   0x14001d218
   14001e7a0:	test   eax,eax
   14001e7a2:	jne    0x14001e773
   14001e7a4:	lock add DWORD PTR [rdi+0x2d8],r13d
   14001e7ac:	lea    r11,[rsp+0x70]
   14001e7b1:	mov    rbx,QWORD PTR [r11+0x30]
   14001e7b5:	mov    rbp,QWORD PTR [r11+0x40]
   14001e7b9:	mov    rsi,QWORD PTR [r11+0x48]
   14001e7bd:	mov    rsp,r11
   14001e7c0:	pop    r15
   14001e7c2:	pop    r14
   14001e7c4:	pop    r13
   14001e7c6:	pop    r12
   14001e7c8:	pop    rdi
   14001e7c9:	ret    
   14001e7ca:	int3   
   14001e7cb:	int3   
   14001e7cc:	mov    rax,rsp
   14001e7cf:	mov    QWORD PTR [rax+0x8],rbx
   14001e7d3:	mov    QWORD PTR [rax+0x10],rbp
   14001e7d7:	mov    QWORD PTR [rax+0x18],rsi
   14001e7db:	mov    QWORD PTR [rax+0x20],rdi
   14001e7df:	push   r12
   14001e7e1:	push   r14
   14001e7e3:	push   r15
   14001e7e5:	sub    rsp,0x20
   14001e7e9:	mov    rbx,rcx
   14001e7ec:	mov    rcx,QWORD PTR [rcx+0x298]
   14001e7f3:	xor    r12d,r12d
   14001e7f6:	mov    r14,r9
   14001e7f9:	mov    edi,r8d
   14001e7fc:	mov    esi,edx
   14001e7fe:	test   rcx,rcx
   14001e801:	je     0x14001e8bb
   14001e807:	mov    rax,QWORD PTR [rbx+0x10]
   14001e80b:	cmp    DWORD PTR [rax+0x9f4],0x20
   14001e812:	je     0x14001e8c7
   14001e818:	call   0x14001fcd8
   14001e81d:	mov    rdx,QWORD PTR [rbx+0x10]
   14001e821:	mov    ebp,r12d
   14001e824:	mov    eax,DWORD PTR [rdx+0x9f4]
   14001e82a:	lea    r15,[rdx+0x9f8]
   14001e831:	lea    rcx,[rax+rax*2]
   14001e835:	shl    rcx,0x7
   14001e839:	add    r15,rcx
   14001e83c:	mov    DWORD PTR [r15],esi
   14001e83f:	mov    DWORD PTR [r15+0x4],edi
   14001e843:	lea    rsi,[r15+0x8]
   14001e847:	test   edi,edi
   14001e849:	je     0x14001e897
   14001e84b:	mov    rax,rsi
   14001e84e:	mov    edx,0xbc
   14001e853:	sub    rax,r15
   14001e856:	sub    rax,0x8
   14001e85a:	sar    rax,1
   14001e85d:	sub    rdx,rax
   14001e860:	cmp    edi,0x1
   14001e863:	jbe    0x14001e86c
   14001e865:	mov    eax,edi
   14001e867:	sub    eax,ebp
   14001e869:	sub    rdx,rax
   14001e86c:	mov    r8,QWORD PTR [r14]
   14001e86f:	mov    rcx,rsi
   14001e872:	call   0x140008194
   14001e877:	or     rax,0xffffffffffffffff
   14001e87b:	inc    rax
   14001e87e:	cmp    WORD PTR [rsi+rax*2],r12w
   14001e883:	jne    0x14001e87b
   14001e885:	lea    rsi,[rsi+rax*2]
   14001e889:	inc    ebp
   14001e88b:	add    r14,0x8
   14001e88f:	add    rsi,0x2
   14001e893:	cmp    ebp,edi
   14001e895:	jb     0x14001e84b
   14001e897:	mov    rax,QWORD PTR [rbx+0x10]
   14001e89b:	inc    DWORD PTR [rax+0x9f4]
   14001e8a1:	lock inc DWORD PTR [rbx+0x2d8]
   14001e8a8:	mov    rcx,QWORD PTR [rbx+0x298]
   14001e8af:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e8b3:	call   QWORD PTR [rip+0x1ac3f]        # 0x1400394f8
   14001e8b9:	jmp    0x14001e8c7
   14001e8bb:	lea    rcx,[rbx+0x2a0]
   14001e8c2:	mov    rax,QWORD PTR [rcx]
   14001e8c5:	call   QWORD PTR [rax]
   14001e8c7:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e8cc:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e8d1:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e8d6:	mov    rdi,QWORD PTR [rsp+0x58]
   14001e8db:	add    rsp,0x20
   14001e8df:	pop    r15
   14001e8e1:	pop    r14
   14001e8e3:	pop    r12
   14001e8e5:	ret    
   14001e8e6:	int3   
   14001e8e7:	int3   
   14001e8e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e8ed:	mov    QWORD PTR [rsp+0x10],rsi
   14001e8f2:	push   rdi
   14001e8f3:	sub    rsp,0x20
   14001e8f7:	mov    ebx,r8d
   14001e8fa:	mov    rdi,rdx
   14001e8fd:	mov    rsi,rcx
   14001e900:	test   r8b,0x1
   14001e904:	jne    0x14001e90d
   14001e906:	mov    eax,0xc
   14001e90b:	jmp    0x14001e932
   14001e90d:	add    rcx,0x20
   14001e911:	mov    r8d,0x6
   14001e917:	mov    rax,QWORD PTR [rcx]
   14001e91a:	call   QWORD PTR [rax]
   14001e91c:	test   eax,eax
   14001e91e:	jne    0x14001e932
   14001e920:	mov    rcx,QWORD PTR [rsi+0x298]
   14001e927:	mov    r8d,ebx
   14001e92a:	mov    rdx,rdi
   14001e92d:	mov    rax,QWORD PTR [rcx]
   14001e930:	call   QWORD PTR [rax]
   14001e932:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e937:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e93c:	add    rsp,0x20
   14001e940:	pop    rdi
   14001e941:	ret    
   14001e942:	int3   
   14001e943:	int3   
   14001e944:	mov    QWORD PTR [rsp+0x10],rbx
   14001e949:	push   rdi
   14001e94a:	sub    rsp,0x20
   14001e94e:	mov    rbx,rcx
   14001e951:	add    rcx,0x20
   14001e955:	mov    rdi,rdx
   14001e958:	mov    rax,QWORD PTR [rcx]
   14001e95b:	call   QWORD PTR [rax+0x8]
   14001e95e:	mov    rcx,QWORD PTR [rbx+0x298]
   14001e965:	mov    rdx,rdi
   14001e968:	mov    DWORD PTR [rsp+0x30],eax
   14001e96c:	mov    rax,QWORD PTR [rcx]
   14001e96f:	call   QWORD PTR [rax+0x8]
   14001e972:	lea    rcx,[rsp+0x30]
   14001e977:	mov    DWORD PTR [rsp+0x34],eax
   14001e97b:	xor    eax,eax
   14001e97d:	mov    edx,DWORD PTR [rcx]
   14001e97f:	test   edx,edx
   14001e981:	jne    0x14001e992
   14001e983:	inc    eax
   14001e985:	add    rcx,0x4
   14001e989:	cmp    eax,0x2
   14001e98c:	jb     0x14001e97d
   14001e98e:	xor    eax,eax
   14001e990:	jmp    0x14001e994
   14001e992:	mov    eax,edx
   14001e994:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e999:	add    rsp,0x20
   14001e99d:	pop    rdi
   14001e99e:	ret    
   14001e99f:	int3   
   14001e9a0:	mov    QWORD PTR [rsp+0x8],rcx
   14001e9a5:	sub    rsp,0x38
   14001e9a9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e9b2:	lea    rax,[rip+0x20777]        # 0x14003f130
   14001e9b9:	mov    QWORD PTR [rcx],rax
   14001e9bc:	add    rsp,0x38
   14001e9c0:	jmp    0x14001f264
   14001e9c5:	int3   
   14001e9c6:	int3   
   14001e9c7:	int3   
   14001e9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9cd:	push   rdi
   14001e9ce:	sub    rsp,0x20
   14001e9d2:	mov    rdi,rcx
   14001e9d5:	add    rcx,0x10
   14001e9d9:	mov    rax,QWORD PTR [rcx]
   14001e9dc:	call   QWORD PTR [rax+0x8]
   14001e9df:	mov    rcx,QWORD PTR [rdi+0x170]
   14001e9e6:	mov    rbx,rax
   14001e9e9:	call   0x14001fcd8
   14001e9ee:	inc    DWORD PTR [rbx+0x14]
   14001e9f1:	mov    rcx,QWORD PTR [rdi+0x170]
   14001e9f8:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e9fc:	call   QWORD PTR [rip+0x1aaf6]        # 0x1400394f8
   14001ea02:	mov    rdx,rbx
   14001ea05:	mov    rcx,rdi
   14001ea08:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea0d:	add    rsp,0x20
   14001ea11:	pop    rdi
   14001ea12:	jmp    0x14001eb88
   14001ea17:	int3   
   14001ea18:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea1d:	push   rdi
   14001ea1e:	sub    rsp,0x20
   14001ea22:	mov    rbx,rcx
   14001ea25:	add    rcx,0x10
   14001ea29:	mov    rax,QWORD PTR [rcx]
   14001ea2c:	call   QWORD PTR [rax+0x8]
   14001ea2f:	mov    rcx,QWORD PTR [rbx+0x170]
   14001ea36:	mov    rdi,rax
   14001ea39:	call   0x14001fcd8
   14001ea3e:	mov    ecx,DWORD PTR [rdi+0x14]
   14001ea41:	test   ecx,ecx
   14001ea43:	jle    0x14001ea4a
   14001ea45:	dec    ecx
   14001ea47:	mov    DWORD PTR [rdi+0x14],ecx
   14001ea4a:	mov    rcx,QWORD PTR [rbx+0x170]
   14001ea51:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ea55:	call   QWORD PTR [rip+0x1aa9d]        # 0x1400394f8
   14001ea5b:	mov    rdx,rdi
   14001ea5e:	mov    rcx,rbx
   14001ea61:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea66:	add    rsp,0x20
   14001ea6a:	pop    rdi
   14001ea6b:	jmp    0x14001eb88
   14001ea70:	mov    rax,rsp
   14001ea73:	mov    QWORD PTR [rax+0x8],rbx
   14001ea77:	mov    QWORD PTR [rax+0x10],rbp
   14001ea7b:	mov    QWORD PTR [rax+0x18],rsi
   14001ea7f:	mov    QWORD PTR [rax+0x20],rdi
   14001ea83:	push   r12
   14001ea85:	push   r14
   14001ea87:	push   r15
   14001ea89:	sub    rsp,0x20
   14001ea8d:	mov    rdi,rcx
   14001ea90:	call   0x14001f324
   14001ea95:	xor    ebx,ebx
   14001ea97:	mov    rsi,rax
   14001ea9a:	test   rax,rax
   14001ea9d:	je     0x14001eb67
   14001eaa3:	mov    rdx,rax
   14001eaa6:	lea    r14,[rdi+0x10]
   14001eaaa:	movabs r12,0x1d0cb58f6ec07433
   14001eab4:	sub    rdx,QWORD PTR [rdi+0x160]
   14001eabb:	mov    rax,r12
   14001eabe:	imul   rdx
   14001eac1:	mov    rax,QWORD PTR [r14]
   14001eac4:	mov    rbp,rdx
   14001eac7:	sar    rbp,0x6
   14001eacb:	mov    rcx,rbp
   14001eace:	shr    rcx,0x3f
   14001ead2:	add    rbp,rcx
   14001ead5:	mov    rcx,r14
   14001ead8:	call   QWORD PTR [rax+0x8]
   14001eadb:	or     r15d,0xffffffff
   14001eadf:	lea    r9,[rax+0x8]
   14001eae3:	jmp    0x14001eaff
   14001eae5:	mov    ecx,r8d
   14001eae8:	imul   rcx,rcx,0x234
   14001eaef:	add    rcx,QWORD PTR [rdi+0x160]
   14001eaf6:	cmp    ebp,r8d
   14001eaf9:	je     0x14001eb09
   14001eafb:	lea    r9,[rcx+0x10]
   14001eaff:	mov    r8d,DWORD PTR [r9]
   14001eb02:	cmp    r8d,r15d
   14001eb05:	jne    0x14001eae5
   14001eb07:	jmp    0x14001eb13
   14001eb09:	mov    edx,DWORD PTR [rcx+0x10]
   14001eb0c:	mov    DWORD PTR [r9],edx
   14001eb0f:	add    DWORD PTR [rax+0x4],r15d
   14001eb13:	mov    rdx,QWORD PTR [r14]
   14001eb16:	mov    rcx,r14
   14001eb19:	call   QWORD PTR [rdx+0x8]
   14001eb1c:	sub    rsi,rax
   14001eb1f:	mov    rax,r12
   14001eb22:	sub    rsi,0x230
   14001eb29:	imul   rsi
   14001eb2c:	sar    rdx,0x6
   14001eb30:	mov    rax,rdx
   14001eb33:	shr    rax,0x3f
   14001eb37:	add    rdx,rax
   14001eb3a:	cmp    edx,DWORD PTR [rdi+0x158]
   14001eb40:	jae    0x14001eb67
   14001eb42:	mov    rcx,rdi
   14001eb45:	call   0x14001f324
   14001eb4a:	test   rax,rax
   14001eb4d:	je     0x14001eb67
   14001eb4f:	mov    DWORD PTR [rax+0xc],ebx
   14001eb52:	mov    DWORD PTR [rax+0x4],ebx
   14001eb55:	mov    DWORD PTR [rax+0x14],r15d
   14001eb59:	mov    DWORD PTR [rax+0x10],r15d
   14001eb5d:	mov    QWORD PTR [rax+0x18],rbx
   14001eb61:	xchg   DWORD PTR [rax+0x228],ebx
   14001eb67:	mov    rbx,QWORD PTR [rsp+0x40]
   14001eb6c:	mov    rbp,QWORD PTR [rsp+0x48]
   14001eb71:	mov    rsi,QWORD PTR [rsp+0x50]
   14001eb76:	mov    rdi,QWORD PTR [rsp+0x58]
   14001eb7b:	add    rsp,0x20
   14001eb7f:	pop    r15
   14001eb81:	pop    r14
   14001eb83:	pop    r12
   14001eb85:	ret    
   14001eb86:	int3   
   14001eb87:	int3   
   14001eb88:	mov    QWORD PTR [rsp+0x8],rbx
   14001eb8d:	mov    QWORD PTR [rsp+0x10],rsi
   14001eb92:	push   rdi
   14001eb93:	sub    rsp,0x20
   14001eb97:	mov    rdi,rcx
   14001eb9a:	mov    rcx,QWORD PTR [rcx+0x170]
   14001eba1:	mov    rbx,rdx
   14001eba4:	call   0x14001fcd8
   14001eba9:	mov    eax,DWORD PTR [rbx+0x8]
   14001ebac:	or     esi,0xffffffff
   14001ebaf:	jmp    0x14001ebf7
   14001ebb1:	mov    edx,eax
   14001ebb3:	mov    rcx,rdi
   14001ebb6:	call   0x14001f324
   14001ebbb:	mov    rbx,rax
   14001ebbe:	test   rax,rax
   14001ebc1:	je     0x14001ebfb
   14001ebc3:	cmp    DWORD PTR [rax+0x18],0x0
   14001ebc7:	jle    0x14001ebf4
   14001ebc9:	cmp    DWORD PTR [rax+0x1c],0x0
   14001ebcd:	jg     0x14001ebf4
   14001ebcf:	mov    eax,DWORD PTR [rax+0x14]
   14001ebd2:	jmp    0x14001ebf0
   14001ebd4:	mov    edx,eax
   14001ebd6:	mov    rcx,rdi
   14001ebd9:	call   0x14001f2e0
   14001ebde:	test   rax,rax
   14001ebe1:	je     0x14001ebea
   14001ebe3:	mov    DWORD PTR [rax+0x40],0x1
   14001ebea:	mov    eax,DWORD PTR [rax+0xf8]
   14001ebf0:	cmp    eax,esi
   14001ebf2:	jne    0x14001ebd4
   14001ebf4:	mov    eax,DWORD PTR [rbx+0x10]
   14001ebf7:	cmp    eax,esi
   14001ebf9:	jne    0x14001ebb1
   14001ebfb:	mov    rcx,QWORD PTR [rdi+0x170]
   14001ec02:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ec06:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ec0b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ec10:	add    rsp,0x20
   14001ec14:	pop    rdi
   14001ec15:	rex.W jmp QWORD PTR [rip+0x1a8dc]        # 0x1400394f8
   14001ec1c:	mov    QWORD PTR [rsp+0x8],rcx
   14001ec21:	push   rbx
   14001ec22:	sub    rsp,0x30
   14001ec26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ec2f:	mov    rbx,rcx
   14001ec32:	lea    rax,[rip+0x2050f]        # 0x14003f148
   14001ec39:	mov    QWORD PTR [rcx],rax
   14001ec3c:	and    QWORD PTR [rip+0x32364],0x0        # 0x140050fa8
   14001ec44:	add    rcx,0x150
   14001ec4b:	mov    QWORD PTR [rsp+0x48],rcx
   14001ec50:	lea    rax,[rip+0x205a1]        # 0x14003f1f8
   14001ec57:	mov    QWORD PTR [rcx],rax
   14001ec5a:	add    rcx,0x10
   14001ec5e:	call   0x14000257c
   14001ec63:	nop
   14001ec64:	lea    rcx,[rbx+0x10]
   14001ec68:	add    rsp,0x30
   14001ec6c:	pop    rbx
   14001ec6d:	jmp    0x14000257c
   14001ec72:	int3   
   14001ec73:	int3   
   14001ec74:	mov    rax,rsp
   14001ec77:	push   rbp
   14001ec78:	push   rsi
   14001ec79:	push   rdi
   14001ec7a:	push   r12
   14001ec7c:	push   r13
   14001ec7e:	push   r14
   14001ec80:	push   r15
   14001ec82:	sub    rsp,0x50
   14001ec86:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14001ec8e:	mov    QWORD PTR [rax+0x18],rbx
   14001ec92:	mov    ebx,r8d
   14001ec95:	mov    ebp,edx
   14001ec97:	mov    rsi,rcx
   14001ec9a:	mov    DWORD PTR [rcx+0x2a0],ebx
   14001eca0:	mov    edi,edx
   14001eca2:	imul   edi,r8d
   14001eca6:	lea    r13,[rip+0x1ef9b]        # 0x14003dc48
   14001ecad:	mov    QWORD PTR [rax+0x8],r13
   14001ecb1:	mov    r12d,0x1
   14001ecb7:	cmp    DWORD PTR [rip+0x320b6],0x0        # 0x140050d74
   14001ecbe:	jne    0x14001eccc
   14001ecc0:	call   0x140004f38
   14001ecc5:	mov    DWORD PTR [rip+0x320a8],r12d        # 0x140050d74
   14001eccc:	movsxd r15,DWORD PTR [rip+0x320b1]        # 0x140050d84
   14001ecd3:	lea    r14,[rsi+0x160]
   14001ecda:	xor    ecx,ecx
   14001ecdc:	cmp    edi,0x10000000
   14001ece2:	setbe  cl
   14001ece5:	xor    eax,eax
   14001ece7:	cmp    DWORD PTR [rsi+0x158],0x3
   14001ecee:	setne  al
   14001ecf1:	mov    DWORD PTR [rsp+0x28],ecx
   14001ecf5:	mov    DWORD PTR [rsp+0x20],eax
   14001ecf9:	mov    r9d,r12d
   14001ecfc:	mov    r8d,edi
   14001ecff:	mov    rdx,QWORD PTR [rip+0x321d2]        # 0x140050ed8
   14001ed06:	mov    rcx,r14
   14001ed09:	call   0x14000262c
   14001ed0e:	mov    rax,QWORD PTR [r14]
   14001ed11:	mov    rcx,r14
   14001ed14:	call   QWORD PTR [rax+0x8]
   14001ed17:	mov    edx,edi
   14001ed19:	add    rdx,0xfffffffffffffffc
   14001ed1d:	add    rdx,rax
   14001ed20:	jmp    0x14001ed2e
   14001ed22:	mov    cl,BYTE PTR [rdx]
   14001ed24:	mov    BYTE PTR [rsp+0x98],cl
   14001ed2b:	sub    rdx,r15
   14001ed2e:	cmp    rdx,rax
   14001ed31:	ja     0x14001ed22
   14001ed33:	mov    QWORD PTR [rsp+0x90],r13
   14001ed3b:	mov    r8d,ebx
   14001ed3e:	shl    r8d,0x6
   14001ed42:	lea    rdi,[rsi+0x10]
   14001ed46:	xor    eax,eax
   14001ed48:	cmp    DWORD PTR [rsi+0x8],0x3
   14001ed4c:	setne  al
   14001ed4f:	mov    DWORD PTR [rsp+0x28],r12d
   14001ed54:	mov    DWORD PTR [rsp+0x20],eax
   14001ed58:	mov    r9d,r12d
   14001ed5b:	mov    rdx,QWORD PTR [rip+0x32186]        # 0x140050ee8
   14001ed62:	mov    rcx,rdi
   14001ed65:	call   0x14000262c
   14001ed6a:	mov    rax,QWORD PTR [r14]
   14001ed6d:	mov    rcx,r14
   14001ed70:	call   QWORD PTR [rax+0x8]
   14001ed73:	mov    QWORD PTR [rip+0x3222e],rax        # 0x140050fa8
   14001ed7a:	cmp    DWORD PTR [rsi+0x8],r12d
   14001ed7e:	jne    0x14001edc9
   14001ed80:	mov    rax,QWORD PTR [rdi]
   14001ed83:	mov    rcx,rdi
   14001ed86:	call   QWORD PTR [rax+0x8]
   14001ed89:	mov    QWORD PTR [rsp+0x90],rax
   14001ed91:	xor    ecx,ecx
   14001ed93:	test   ebx,ebx
   14001ed95:	je     0x14001edc9
   14001ed97:	mov    QWORD PTR [rsp+0xa8],rax
   14001ed9f:	test   rax,rax
   14001eda2:	je     0x14001edb6
   14001eda4:	and    QWORD PTR [rax],0x0
   14001eda8:	mov    DWORD PTR [rax+0x8],ecx
   14001edab:	or     DWORD PTR [rax+0xc],0xffffffff
   14001edaf:	mov    DWORD PTR [rax+0x10],ebp
   14001edb2:	mov    DWORD PTR [rax+0x14],r12d
   14001edb6:	add    rax,0x40
   14001edba:	mov    QWORD PTR [rsp+0x90],rax
   14001edc2:	add    ecx,r12d
   14001edc5:	cmp    ecx,ebx
   14001edc7:	jb     0x14001ed97
   14001edc9:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001edd1:	add    rsp,0x50
   14001edd5:	pop    r15
   14001edd7:	pop    r14
   14001edd9:	pop    r13
   14001eddb:	pop    r12
   14001eddd:	pop    rdi
   14001edde:	pop    rsi
   14001eddf:	pop    rbp
   14001ede0:	ret    
   14001ede1:	int3   
   14001ede2:	int3   
   14001ede3:	int3   
   14001ede4:	mov    QWORD PTR [rsp+0x8],rbx
   14001ede9:	mov    QWORD PTR [rsp+0x10],rsi
   14001edee:	push   rdi
   14001edef:	sub    rsp,0x20
   14001edf3:	mov    ebx,r8d
   14001edf6:	mov    rdi,rdx
   14001edf9:	mov    rsi,rcx
   14001edfc:	test   r8b,0x1
   14001ee00:	jne    0x14001ee09
   14001ee02:	mov    eax,0xc
   14001ee07:	jmp    0x14001ee2e
   14001ee09:	add    rcx,0x18
   14001ee0d:	mov    r8d,0x6
   14001ee13:	mov    rax,QWORD PTR [rcx]
   14001ee16:	call   QWORD PTR [rax]
   14001ee18:	test   eax,eax
   14001ee1a:	jne    0x14001ee2e
   14001ee1c:	lea    rcx,[rsi+0x150]
   14001ee23:	mov    r8d,ebx
   14001ee26:	mov    rdx,rdi
   14001ee29:	mov    rax,QWORD PTR [rcx]
   14001ee2c:	call   QWORD PTR [rax]
   14001ee2e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ee33:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ee38:	add    rsp,0x20
   14001ee3c:	pop    rdi
   14001ee3d:	ret    
   14001ee3e:	int3   
   14001ee3f:	int3   
   14001ee40:	mov    QWORD PTR [rsp+0x10],rbx
   14001ee45:	push   rdi
   14001ee46:	sub    rsp,0x20
   14001ee4a:	mov    rbx,rcx
   14001ee4d:	add    rcx,0x18
   14001ee51:	mov    rdi,rdx
   14001ee54:	mov    rax,QWORD PTR [rcx]
   14001ee57:	call   QWORD PTR [rax+0x8]
   14001ee5a:	lea    rcx,[rbx+0x150]
   14001ee61:	mov    rdx,rdi
   14001ee64:	mov    DWORD PTR [rsp+0x30],eax
   14001ee68:	mov    rax,QWORD PTR [rcx]
   14001ee6b:	call   QWORD PTR [rax+0x8]
   14001ee6e:	lea    rcx,[rsp+0x30]
   14001ee73:	mov    DWORD PTR [rsp+0x34],eax
   14001ee77:	xor    eax,eax
   14001ee79:	mov    edx,DWORD PTR [rcx]
   14001ee7b:	test   edx,edx
   14001ee7d:	jne    0x14001ee8e
   14001ee7f:	inc    eax
   14001ee81:	add    rcx,0x4
   14001ee85:	cmp    eax,0x2
   14001ee88:	jb     0x14001ee79
   14001ee8a:	xor    eax,eax
   14001ee8c:	jmp    0x14001ee90
   14001ee8e:	mov    eax,edx
   14001ee90:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ee95:	add    rsp,0x20
   14001ee99:	pop    rdi
   14001ee9a:	ret    
   14001ee9b:	int3   
   14001ee9c:	mov    QWORD PTR [rsp+0x8],rcx
   14001eea1:	push   rbx
   14001eea2:	sub    rsp,0x30
   14001eea6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001eeaf:	mov    rbx,rcx
   14001eeb2:	lea    rax,[rip+0x202a7]        # 0x14003f160
   14001eeb9:	mov    QWORD PTR [rcx],rax
   14001eebc:	and    QWORD PTR [rcx+0x160],0x0
   14001eec4:	and    QWORD PTR [rcx+0x168],0x0
   14001eecc:	add    rcx,0x180
   14001eed3:	call   0x14001ec1c
   14001eed8:	nop
   14001eed9:	lea    rcx,[rbx+0x170]
   14001eee0:	call   0x140020c64
   14001eee5:	nop
   14001eee6:	lea    rcx,[rbx+0x20]
   14001eeea:	add    rsp,0x30
   14001eeee:	pop    rbx
   14001eeef:	jmp    0x14000257c
   14001eef4:	mov    QWORD PTR [rsp+0x8],rbx
   14001eef9:	mov    QWORD PTR [rsp+0x10],rbp
   14001eefe:	mov    QWORD PTR [rsp+0x18],rsi
   14001ef03:	push   rdi
   14001ef04:	sub    rsp,0x20
   14001ef08:	mov    ebp,edx
   14001ef0a:	mov    rdi,rcx
   14001ef0d:	xor    ebx,ebx
   14001ef0f:	lea    rsi,[rcx+0x190]
   14001ef16:	mov    rax,QWORD PTR [rsi]
   14001ef19:	mov    rcx,rsi
   14001ef1c:	call   QWORD PTR [rax+0x8]
   14001ef1f:	mov    rcx,QWORD PTR [rdi+0x160]
   14001ef26:	mov    rdx,rax
   14001ef29:	call   0x14001fdf8
   14001ef2e:	test   rax,rax
   14001ef31:	jne    0x14001ef64
   14001ef33:	test   ebx,ebx
   14001ef35:	je     0x14001ef45
   14001ef37:	mov    rax,QWORD PTR [rdi+0x168]
   14001ef3e:	mov    ecx,DWORD PTR [rax]
   14001ef40:	cmp    ecx,0xffffffff
   14001ef43:	je     0x14001ef60
   14001ef45:	test   ebp,ebp
   14001ef47:	je     0x14001ef60
   14001ef49:	mov    rcx,QWORD PTR [rdi+0x178]
   14001ef50:	or     edx,0xffffffff
   14001ef53:	call   QWORD PTR [rip+0x1a53f]        # 0x140039498
   14001ef59:	mov    ebx,0x1
   14001ef5e:	jmp    0x14001ef16
   14001ef60:	xor    eax,eax
   14001ef62:	jmp    0x14001ef83
   14001ef64:	mov    ebx,DWORD PTR [rax+0x8]
   14001ef67:	mov    rax,QWORD PTR [rsi]
   14001ef6a:	mov    rcx,rsi
   14001ef6d:	call   QWORD PTR [rax+0x8]
   14001ef70:	mov    ecx,ebx
   14001ef72:	shl    rcx,0x6
   14001ef76:	add    rax,rcx
   14001ef79:	mov    ecx,DWORD PTR [rdi+0x10]
   14001ef7c:	and    DWORD PTR [rax+0x14],0x0
   14001ef80:	mov    DWORD PTR [rax+0xc],ecx
   14001ef83:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ef88:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ef8d:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ef92:	add    rsp,0x20
   14001ef96:	pop    rdi
   14001ef97:	ret    
   14001ef98:	mov    QWORD PTR [rsp+0x8],rbx
   14001ef9d:	mov    QWORD PTR [rsp+0x10],rbp
   14001efa2:	mov    QWORD PTR [rsp+0x18],rsi
   14001efa7:	push   rdi
   14001efa8:	sub    rsp,0x20
   14001efac:	mov    r9d,DWORD PTR [rdx+0x10]
   14001efb0:	mov    ebp,DWORD PTR [rdx+0x8]
   14001efb3:	mov    rsi,rcx
   14001efb6:	imul   r9d,ebp
   14001efba:	add    r9,QWORD PTR [rip+0x31fe7]        # 0x140050fa8
   14001efc1:	cmp    DWORD PTR [r9+0x4],0x0
   14001efc6:	jne    0x14001efe9
   14001efc8:	mov    rax,QWORD PTR [rcx+0x18]
   14001efcc:	mov    r8,QWORD PTR [rax]
   14001efcf:	cmp    QWORD PTR [r9+0x38],r8
   14001efd3:	jae    0x14001efe9
   14001efd5:	or     DWORD PTR [rdx+0xc],0xffffffff
   14001efd9:	mov    DWORD PTR [rdx+0x14],0x1
   14001efe0:	mov    edx,ebp
   14001efe2:	call   0x14001f03c
   14001efe7:	jmp    0x14001f025
   14001efe9:	lea    rbx,[rcx+0x190]
   14001eff0:	mov    DWORD PTR [rdx+0x14],0x2
   14001eff7:	mov    rax,QWORD PTR [rbx]
   14001effa:	mov    rcx,rbx
   14001effd:	call   QWORD PTR [rax+0x8]
   14001f000:	mov    rdx,QWORD PTR [rbx]
   14001f003:	mov    rcx,rbx
   14001f006:	mov    rdi,rax
   14001f009:	call   QWORD PTR [rdx+0x8]
   14001f00c:	mov    rcx,QWORD PTR [rsi+0x168]
   14001f013:	mov    rdx,rbp
   14001f016:	mov    r8,rdi
   14001f019:	shl    rdx,0x6
   14001f01d:	add    rdx,rax
   14001f020:	call   0x14001fdac
   14001f025:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f02a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f02f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f034:	add    rsp,0x20
   14001f038:	pop    rdi
   14001f039:	ret    
   14001f03a:	int3   
   14001f03b:	int3   
   14001f03c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f041:	mov    QWORD PTR [rsp+0x10],rbp
   14001f046:	mov    QWORD PTR [rsp+0x18],rsi
   14001f04b:	push   rdi
   14001f04c:	sub    rsp,0x20
   14001f050:	lea    rbx,[rcx+0x190]
   14001f057:	mov    rbp,rcx
   14001f05a:	mov    esi,edx
   14001f05c:	mov    rax,QWORD PTR [rbx]
   14001f05f:	mov    rcx,rbx
   14001f062:	call   QWORD PTR [rax+0x8]
   14001f065:	mov    r8,QWORD PTR [rbx]
   14001f068:	mov    rcx,rbx
   14001f06b:	mov    rdi,rax
   14001f06e:	call   QWORD PTR [r8+0x8]
   14001f072:	mov    rcx,QWORD PTR [rbp+0x160]
   14001f079:	mov    edx,esi
   14001f07b:	mov    r8,rdi
   14001f07e:	shl    rdx,0x6
   14001f082:	add    rdx,rax
   14001f085:	call   0x14001fdac
   14001f08a:	mov    rcx,QWORD PTR [rbp+0x178]
   14001f091:	xor    r8d,r8d
   14001f094:	lea    edx,[r8+0x1]
   14001f098:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f09d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f0a2:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f0a7:	add    rsp,0x20
   14001f0ab:	pop    rdi
   14001f0ac:	rex.W jmp QWORD PTR [rip+0x1a555]        # 0x140039608
   14001f0b3:	int3   
   14001f0b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f0b9:	mov    QWORD PTR [rsp+0x10],rsi
   14001f0be:	push   rdi
   14001f0bf:	sub    rsp,0x20
   14001f0c3:	mov    ebx,r8d
   14001f0c6:	mov    rdi,rdx
   14001f0c9:	mov    rsi,rcx
   14001f0cc:	test   r8b,0x1
   14001f0d0:	jne    0x14001f0d9
   14001f0d2:	mov    eax,0xc
   14001f0d7:	jmp    0x14001f101
   14001f0d9:	add    rcx,0x170
   14001f0e0:	mov    r8d,0x100002
   14001f0e6:	mov    rax,QWORD PTR [rcx]
   14001f0e9:	call   QWORD PTR [rax]
   14001f0eb:	test   eax,eax
   14001f0ed:	jne    0x14001f101
   14001f0ef:	lea    rcx,[rsi+0x180]
   14001f0f6:	mov    r8d,ebx
   14001f0f9:	mov    rdx,rdi
   14001f0fc:	mov    rax,QWORD PTR [rcx]
   14001f0ff:	call   QWORD PTR [rax]
   14001f101:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f106:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f10b:	add    rsp,0x20
   14001f10f:	pop    rdi
   14001f110:	ret    
   14001f111:	int3   
   14001f112:	int3   
   14001f113:	int3   
   14001f114:	mov    QWORD PTR [rsp+0x10],rbx
   14001f119:	push   rdi
   14001f11a:	sub    rsp,0x20
   14001f11e:	mov    rbx,rcx
   14001f121:	add    rcx,0x170
   14001f128:	mov    rdi,rdx
   14001f12b:	mov    rax,QWORD PTR [rcx]
   14001f12e:	call   QWORD PTR [rax+0x8]
   14001f131:	lea    rcx,[rbx+0x180]
   14001f138:	mov    rdx,rdi
   14001f13b:	mov    DWORD PTR [rsp+0x30],eax
   14001f13f:	mov    rax,QWORD PTR [rcx]
   14001f142:	call   QWORD PTR [rax+0x8]
   14001f145:	lea    rcx,[rsp+0x30]
   14001f14a:	mov    DWORD PTR [rsp+0x34],eax
   14001f14e:	xor    eax,eax
   14001f150:	mov    edx,DWORD PTR [rcx]
   14001f152:	test   edx,edx
   14001f154:	jne    0x14001f165
   14001f156:	inc    eax
   14001f158:	add    rcx,0x4
   14001f15c:	cmp    eax,0x2
   14001f15f:	jb     0x14001f150
   14001f161:	xor    eax,eax
   14001f163:	jmp    0x14001f167
   14001f165:	mov    eax,edx
   14001f167:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f16c:	add    rsp,0x20
   14001f170:	pop    rdi
   14001f171:	ret    
   14001f172:	int3   
   14001f173:	int3   
   14001f174:	mov    QWORD PTR [rsp+0x8],rcx
   14001f179:	push   rbx
   14001f17a:	sub    rsp,0x30
   14001f17e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f187:	mov    rbx,rcx
   14001f18a:	lea    rax,[rip+0x1ffe7]        # 0x14003f178
   14001f191:	mov    QWORD PTR [rcx],rax
   14001f194:	add    rcx,0x2c8
   14001f19b:	call   0x1400162f8
   14001f1a0:	nop
   14001f1a1:	lea    rcx,[rbx+0x2b0]
   14001f1a8:	call   0x1400162f8
   14001f1ad:	nop
   14001f1ae:	lea    rcx,[rbx+0x150]
   14001f1b5:	mov    QWORD PTR [rsp+0x48],rcx
   14001f1ba:	lea    rax,[rip+0x2004f]        # 0x14003f210
   14001f1c1:	mov    QWORD PTR [rcx],rax
   14001f1c4:	add    rcx,0x10
   14001f1c8:	call   0x14000257c
   14001f1cd:	nop
   14001f1ce:	lea    rcx,[rbx+0x10]
   14001f1d2:	add    rsp,0x30
   14001f1d6:	pop    rbx
   14001f1d7:	jmp    0x14000257c
   14001f1dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001f1e1:	mov    QWORD PTR [rsp+0x10],rbp
   14001f1e6:	mov    QWORD PTR [rsp+0x18],rsi
   14001f1eb:	push   rdi
   14001f1ec:	sub    rsp,0x20
   14001f1f0:	lea    rbx,[rcx+0x160]
   14001f1f7:	mov    rbp,rcx
   14001f1fa:	mov    esi,edx
   14001f1fc:	mov    rax,QWORD PTR [rbx]
   14001f1ff:	mov    rcx,rbx
   14001f202:	call   QWORD PTR [rax+0x8]
   14001f205:	mov    r8,QWORD PTR [rbx]
   14001f208:	mov    rcx,rbx
   14001f20b:	mov    rdi,rax
   14001f20e:	call   QWORD PTR [r8+0x8]
   14001f212:	mov    rcx,QWORD PTR [rbp+0x2e0]
   14001f219:	mov    edx,esi
   14001f21b:	mov    r8,rdi
   14001f21e:	imul   rdx,rdx,0x258
   14001f225:	add    rdx,rax
   14001f228:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f22d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f232:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f237:	add    rsp,0x20
   14001f23b:	pop    rdi
   14001f23c:	jmp    0x14001fdac
   14001f241:	int3   
   14001f242:	int3   
   14001f243:	int3   
   14001f244:	add    rcx,0x150
   14001f24b:	mov    rax,QWORD PTR [rcx]
   14001f24e:	rex.W jmp QWORD PTR [rax]
   14001f251:	int3   
   14001f252:	int3   
   14001f253:	int3   
   14001f254:	add    rcx,0x150
   14001f25b:	mov    rax,QWORD PTR [rcx]
   14001f25e:	rex.W jmp QWORD PTR [rax+0x8]
   14001f262:	int3   
   14001f263:	int3   
   14001f264:	mov    r11,rsp
   14001f267:	mov    QWORD PTR [r11+0x8],rcx
   14001f26b:	push   rdi
   14001f26c:	sub    rsp,0x30
   14001f270:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001f278:	mov    QWORD PTR [r11+0x18],rbx
   14001f27c:	mov    rbx,rcx
   14001f27f:	lea    rax,[rip+0x1ff2a]        # 0x14003f1b0
   14001f286:	mov    QWORD PTR [rcx],rax
   14001f289:	and    QWORD PTR [rcx+0x160],0x0
   14001f291:	and    QWORD PTR [rcx+0x168],0x0
   14001f299:	mov    rdi,QWORD PTR [rcx+0x170]
   14001f2a0:	test   rdi,rdi
   14001f2a3:	je     0x14001f2c4
   14001f2a5:	mov    QWORD PTR [r11+0x10],rdi
   14001f2a9:	lea    rax,[rip+0x1ff30]        # 0x14003f1e0
   14001f2b0:	mov    QWORD PTR [rdi],rax
   14001f2b3:	lea    rcx,[rdi+0x8]
   14001f2b7:	call   0x1400179a8
   14001f2bc:	mov    rcx,rdi
   14001f2bf:	call   0x140020e30
   14001f2c4:	and    QWORD PTR [rbx+0x170],0x0
   14001f2cc:	lea    rcx,[rbx+0x10]
   14001f2d0:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f2d5:	add    rsp,0x30
   14001f2d9:	pop    rdi
   14001f2da:	jmp    0x14000257c
   14001f2df:	int3   
   14001f2e0:	rex push rbx
   14001f2e2:	sub    rsp,0x20
   14001f2e6:	cmp    edx,DWORD PTR [rcx+0x154]
   14001f2ec:	jb     0x14001f2f2
   14001f2ee:	xor    eax,eax
   14001f2f0:	jmp    0x14001f31b
   14001f2f2:	mov    eax,DWORD PTR [rcx+0x158]
   14001f2f8:	imul   edx,edx,0x3b8
   14001f2fe:	add    rcx,0x10
   14001f302:	lea    ebx,[rdx+0x230]
   14001f308:	imul   eax,eax,0x234
   14001f30e:	add    ebx,eax
   14001f310:	mov    rax,QWORD PTR [rcx]
   14001f313:	call   QWORD PTR [rax+0x8]
   14001f316:	mov    ecx,ebx
   14001f318:	add    rax,rcx
   14001f31b:	add    rsp,0x20
   14001f31f:	pop    rbx
   14001f320:	ret    
   14001f321:	int3   
   14001f322:	int3   
   14001f323:	int3   
   14001f324:	rex push rbx
   14001f326:	sub    rsp,0x20
   14001f32a:	mov    ebx,edx
   14001f32c:	cmp    edx,DWORD PTR [rcx+0x158]
   14001f332:	jb     0x14001f338
   14001f334:	xor    eax,eax
   14001f336:	jmp    0x14001f351
   14001f338:	add    rcx,0x10
   14001f33c:	mov    rax,QWORD PTR [rcx]
   14001f33f:	call   QWORD PTR [rax+0x8]
   14001f342:	imul   ebx,ebx,0x234
   14001f348:	lea    ecx,[rbx+0x230]
   14001f34e:	add    rax,rcx
   14001f351:	add    rsp,0x20
   14001f355:	pop    rbx
   14001f356:	ret    
   14001f357:	int3   
   14001f358:	test   rdx,rdx
   14001f35b:	je     0x14001f421
   14001f361:	mov    QWORD PTR [rsp+0x8],rbx
   14001f366:	mov    QWORD PTR [rsp+0x10],rsi
   14001f36b:	push   rdi
   14001f36c:	sub    rsp,0x20
   14001f370:	mov    rsi,rcx
   14001f373:	add    rcx,0x10
   14001f377:	mov    rdi,rdx
   14001f37a:	mov    rax,QWORD PTR [rcx]
   14001f37d:	xor    ebx,ebx
   14001f37f:	call   QWORD PTR [rax+0x8]
   14001f382:	mov    r8d,DWORD PTR [rsi+0x158]
   14001f389:	mov    rcx,rsi
   14001f38c:	imul   r8,r8,0x234
   14001f393:	sub    rdi,r8
   14001f396:	sub    rdi,rax
   14001f399:	movabs rax,0x89ae4089ae4089af
   14001f3a3:	sub    rdi,0x230
   14001f3aa:	imul   rdi
   14001f3ad:	add    rdx,rdi
   14001f3b0:	sar    rdx,0x9
   14001f3b4:	mov    rax,rdx
   14001f3b7:	shr    rax,0x3f
   14001f3bb:	add    rdx,rax
   14001f3be:	call   0x14001f2e0
   14001f3c3:	test   rax,rax
   14001f3c6:	je     0x14001f412
   14001f3c8:	mov    QWORD PTR [rax+0x40],rbx
   14001f3cc:	mov    DWORD PTR [rax+0xe0],ebx
   14001f3d2:	mov    DWORD PTR [rax+0x10],ebx
   14001f3d5:	mov    QWORD PTR [rax+0x28],rbx
   14001f3d9:	mov    QWORD PTR [rax+0x18],rbx
   14001f3dd:	mov    QWORD PTR [rax+0x48],rbx
   14001f3e1:	mov    QWORD PTR [rax+0x50],rbx
   14001f3e5:	mov    QWORD PTR [rax+0x58],rbx
   14001f3e9:	or     DWORD PTR [rax+0xf8],0xffffffff
   14001f3f0:	mov    QWORD PTR [rax],rbx
   14001f3f3:	mov    QWORD PTR [rax+0x38],rbx
   14001f3f7:	mov    QWORD PTR [rax+0x8],rbx
   14001f3fb:	mov    QWORD PTR [rax+0xf0],rbx
   14001f402:	mov    DWORD PTR [rax+0x3b0],0x1
   14001f40c:	xchg   DWORD PTR [rax+0x3ac],ebx
   14001f412:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f417:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f41c:	add    rsp,0x20
   14001f420:	pop    rdi
   14001f421:	ret    
   14001f422:	int3   
   14001f423:	int3   
   14001f424:	mov    QWORD PTR [rsp+0x8],rbx
   14001f429:	mov    QWORD PTR [rsp+0x10],rsi
   14001f42e:	push   rdi
   14001f42f:	sub    rsp,0x20
   14001f433:	mov    ebx,r8d
   14001f436:	mov    rdi,rdx
   14001f439:	mov    rsi,rcx
   14001f43c:	test   r8b,0x1
   14001f440:	jne    0x14001f449
   14001f442:	mov    eax,0xc
   14001f447:	jmp    0x14001f46e
   14001f449:	add    rcx,0x18
   14001f44d:	mov    r8d,0x6
   14001f453:	mov    rax,QWORD PTR [rcx]
   14001f456:	call   QWORD PTR [rax]
   14001f458:	test   eax,eax
   14001f45a:	jne    0x14001f46e
   14001f45c:	mov    rcx,QWORD PTR [rsi+0x170]
   14001f463:	mov    r8d,ebx
   14001f466:	mov    rdx,rdi
   14001f469:	mov    rax,QWORD PTR [rcx]
   14001f46c:	call   QWORD PTR [rax]
   14001f46e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f473:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f478:	add    rsp,0x20
   14001f47c:	pop    rdi
   14001f47d:	ret    
   14001f47e:	int3   
   14001f47f:	int3   
   14001f480:	mov    QWORD PTR [rsp+0x10],rbx
   14001f485:	push   rdi
   14001f486:	sub    rsp,0x20
   14001f48a:	mov    rbx,rcx
   14001f48d:	add    rcx,0x18
   14001f491:	mov    rdi,rdx
   14001f494:	mov    rax,QWORD PTR [rcx]
   14001f497:	call   QWORD PTR [rax+0x8]
   14001f49a:	mov    rcx,QWORD PTR [rbx+0x170]
   14001f4a1:	mov    rdx,rdi
   14001f4a4:	mov    DWORD PTR [rsp+0x30],eax
   14001f4a8:	mov    rax,QWORD PTR [rcx]
   14001f4ab:	call   QWORD PTR [rax+0x8]
   14001f4ae:	lea    rcx,[rsp+0x30]
   14001f4b3:	mov    DWORD PTR [rsp+0x34],eax
   14001f4b7:	xor    eax,eax
   14001f4b9:	mov    edx,DWORD PTR [rcx]
   14001f4bb:	test   edx,edx
   14001f4bd:	jne    0x14001f4ce
   14001f4bf:	inc    eax
   14001f4c1:	add    rcx,0x4
   14001f4c5:	cmp    eax,0x2
   14001f4c8:	jb     0x14001f4b9
   14001f4ca:	xor    eax,eax
   14001f4cc:	jmp    0x14001f4d0
   14001f4ce:	mov    eax,edx
   14001f4d0:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f4d5:	add    rsp,0x20
   14001f4d9:	pop    rdi
   14001f4da:	ret    
   14001f4db:	int3   
   14001f4dc:	mov    QWORD PTR [rsp+0x8],rcx
   14001f4e1:	push   rbx
   14001f4e2:	sub    rsp,0x30
   14001f4e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f4ef:	mov    rbx,rcx
   14001f4f2:	lea    rax,[rip+0x1fccf]        # 0x14003f1c8
   14001f4f9:	mov    QWORD PTR [rcx],rax
   14001f4fc:	and    QWORD PTR [rcx+0x2e0],0x0
   14001f504:	and    QWORD PTR [rcx+0x2e8],0x0
   14001f50c:	add    rcx,0x2d0
   14001f513:	call   0x1400179a8
   14001f518:	nop
   14001f519:	lea    rcx,[rbx+0x2c0]
   14001f520:	call   0x1400179a8
   14001f525:	nop
   14001f526:	lea    rcx,[rbx+0x2a8]
   14001f52d:	call   0x1400162f8
   14001f532:	nop
   14001f533:	lea    rcx,[rbx+0x290]
   14001f53a:	call   0x1400162f8
   14001f53f:	nop
   14001f540:	lea    rcx,[rbx+0x150]
   14001f547:	call   0x14000257c
   14001f54c:	nop
   14001f54d:	lea    rcx,[rbx+0x10]
   14001f551:	add    rsp,0x30
   14001f555:	pop    rbx
   14001f556:	jmp    0x14000257c
   14001f55b:	int3   
   14001f55c:	mov    QWORD PTR [rsp+0x10],rbx
   14001f561:	mov    QWORD PTR [rsp+0x18],rsi
   14001f566:	push   rdi
   14001f567:	sub    rsp,0x270
   14001f56e:	mov    rax,QWORD PTR [rip+0x2ded3]        # 0x14004d448
   14001f575:	xor    rax,rsp
   14001f578:	mov    QWORD PTR [rsp+0x260],rax
   14001f580:	or     DWORD PTR [rcx+0xc],0xffffffff
   14001f584:	mov    rdx,QWORD PTR [rip+0x31965]        # 0x140050ef0
   14001f58b:	lea    rbx,[rcx+0x150]
   14001f592:	mov    esi,0x1
   14001f597:	mov    rdi,rcx
   14001f59a:	mov    r8d,0x4b8
   14001f5a0:	mov    rcx,rbx
   14001f5a3:	mov    r9d,esi
   14001f5a6:	mov    DWORD PTR [rsp+0x28],esi
   14001f5aa:	and    DWORD PTR [rsp+0x20],0x0
   14001f5af:	call   0x14000262c
   14001f5b4:	mov    rax,QWORD PTR [rbx]
   14001f5b7:	mov    rcx,rbx
   14001f5ba:	call   QWORD PTR [rax+0x8]
   14001f5bd:	mov    DWORD PTR [rsp+0x28],esi
   14001f5c1:	mov    r9d,esi
   14001f5c4:	lea    rcx,[rax+0x490]
   14001f5cb:	add    rax,0x48c
   14001f5d1:	mov    r8d,0x440
   14001f5d7:	mov    QWORD PTR [rdi+0x2e8],rcx
   14001f5de:	mov    QWORD PTR [rdi+0x2e0],rax
   14001f5e5:	mov    rdx,QWORD PTR [rip+0x3191c]        # 0x140050f08
   14001f5ec:	lea    rcx,[rdi+0x10]
   14001f5f0:	cmp    DWORD PTR [rdi+0x8],esi
   14001f5f3:	jne    0x14001f6a1
   14001f5f9:	mov    DWORD PTR [rsp+0x20],esi
   14001f5fd:	call   0x14000262c
   14001f602:	mov    rdx,QWORD PTR [rip+0x318a7]        # 0x140050eb0
   14001f609:	lea    rcx,[rdi+0x290]
   14001f610:	xor    r9d,r9d
   14001f613:	call   0x140016348
   14001f618:	test   eax,eax
   14001f61a:	je     0x14001f747
   14001f620:	mov    rdx,QWORD PTR [rip+0x31891]        # 0x140050eb8
   14001f627:	lea    rcx,[rdi+0x2a8]
   14001f62e:	xor    r9d,r9d
   14001f631:	call   0x140016348
   14001f636:	test   eax,eax
   14001f638:	je     0x14001f772
   14001f63e:	mov    r8,QWORD PTR [rip+0x318cb]        # 0x140050f10
   14001f645:	xor    edx,edx
   14001f647:	xor    ecx,ecx
   14001f649:	lea    rbx,[rdi+0x2c0]
   14001f650:	call   QWORD PTR [rip+0x19f72]        # 0x1400395c8
   14001f656:	mov    QWORD PTR [rbx+0x8],rax
   14001f65a:	test   rax,rax
   14001f65d:	je     0x14001f667
   14001f65f:	mov    rcx,rbx
   14001f662:	call   0x1400179e8
   14001f667:	test   eax,eax
   14001f669:	je     0x14001f79d
   14001f66f:	mov    r8,QWORD PTR [rip+0x318ba]        # 0x140050f30
   14001f676:	xor    edx,edx
   14001f678:	xor    ecx,ecx
   14001f67a:	lea    rbx,[rdi+0x2d0]
   14001f681:	call   QWORD PTR [rip+0x19f41]        # 0x1400395c8
   14001f687:	mov    QWORD PTR [rbx+0x8],rax
   14001f68b:	test   rax,rax
   14001f68e:	je     0x14001f698
   14001f690:	mov    rcx,rbx
   14001f693:	call   0x1400179e8
   14001f698:	test   eax,eax
   14001f69a:	jne    0x14001f715
   14001f69c:	jmp    0x14001f7c8
   14001f6a1:	and    DWORD PTR [rsp+0x20],0x0
   14001f6a6:	call   0x14000262c
   14001f6ab:	mov    r8,QWORD PTR [rip+0x317fe]        # 0x140050eb0
   14001f6b2:	mov    ebx,0x100002
   14001f6b7:	xor    edx,edx
   14001f6b9:	mov    ecx,ebx
   14001f6bb:	call   QWORD PTR [rip+0x19a77]        # 0x140039138
   14001f6c1:	xor    edx,edx
   14001f6c3:	mov    ecx,ebx
   14001f6c5:	mov    QWORD PTR [rdi+0x298],rax
   14001f6cc:	mov    r8,QWORD PTR [rip+0x317e5]        # 0x140050eb8
   14001f6d3:	call   QWORD PTR [rip+0x19a5f]        # 0x140039138
   14001f6d9:	mov    ebx,0x100001
   14001f6de:	xor    edx,edx
   14001f6e0:	mov    QWORD PTR [rdi+0x2b0],rax
   14001f6e7:	mov    r8,QWORD PTR [rip+0x31822]        # 0x140050f10
   14001f6ee:	mov    ecx,ebx
   14001f6f0:	call   QWORD PTR [rip+0x19a6a]        # 0x140039160
   14001f6f6:	xor    edx,edx
   14001f6f8:	mov    ecx,ebx
   14001f6fa:	mov    QWORD PTR [rdi+0x2c8],rax
   14001f701:	mov    r8,QWORD PTR [rip+0x31828]        # 0x140050f30
   14001f708:	call   QWORD PTR [rip+0x19a52]        # 0x140039160
   14001f70e:	mov    QWORD PTR [rdi+0x2d8],rax
   14001f715:	mov    rax,QWORD PTR [rdi+0x2e0]
   14001f71c:	mov    DWORD PTR [rax],0x440
   14001f722:	mov    rcx,QWORD PTR [rsp+0x260]
   14001f72a:	xor    rcx,rsp
   14001f72d:	call   0x140020e50
   14001f732:	lea    r11,[rsp+0x270]
   14001f73a:	mov    rbx,QWORD PTR [r11+0x18]
   14001f73e:	mov    rsi,QWORD PTR [r11+0x20]
   14001f742:	mov    rsp,r11
   14001f745:	pop    rdi
   14001f746:	ret    
   14001f747:	call   QWORD PTR [rip+0x19e93]        # 0x1400395e0
   14001f74d:	mov    r8,QWORD PTR [rip+0x3175c]        # 0x140050eb0
   14001f754:	lea    rcx,[rsp+0x40]
   14001f759:	mov    edx,eax
   14001f75b:	call   0x140002e28
   14001f760:	lea    rdx,[rip+0x2b1d1]        # 0x14004a938
   14001f767:	lea    rcx,[rsp+0x40]
   14001f76c:	call   0x1400265e8
   14001f771:	int3   
   14001f772:	call   QWORD PTR [rip+0x19e68]        # 0x1400395e0
   14001f778:	mov    r8,QWORD PTR [rip+0x31739]        # 0x140050eb8
   14001f77f:	lea    rcx,[rsp+0x40]
   14001f784:	mov    edx,eax
   14001f786:	call   0x140002e28
   14001f78b:	lea    rdx,[rip+0x2b1a6]        # 0x14004a938
   14001f792:	lea    rcx,[rsp+0x40]
   14001f797:	call   0x1400265e8
   14001f79c:	int3   
   14001f79d:	call   QWORD PTR [rip+0x19e3d]        # 0x1400395e0
   14001f7a3:	mov    r8,QWORD PTR [rip+0x31766]        # 0x140050f10
   14001f7aa:	lea    rcx,[rsp+0x40]
   14001f7af:	mov    edx,eax
   14001f7b1:	call   0x140002e28
   14001f7b6:	lea    rdx,[rip+0x2b17b]        # 0x14004a938
   14001f7bd:	lea    rcx,[rsp+0x40]
   14001f7c2:	call   0x1400265e8
   14001f7c7:	int3   
   14001f7c8:	call   QWORD PTR [rip+0x19e12]        # 0x1400395e0
   14001f7ce:	mov    r8,QWORD PTR [rip+0x3175b]        # 0x140050f30
   14001f7d5:	lea    rcx,[rsp+0x40]
   14001f7da:	mov    edx,eax
   14001f7dc:	call   0x140002e28
   14001f7e1:	lea    rdx,[rip+0x2b150]        # 0x14004a938
   14001f7e8:	lea    rcx,[rsp+0x40]
   14001f7ed:	call   0x1400265e8
   14001f7f2:	int3   
   14001f7f3:	int3   
   14001f7f4:	mov    rax,rsp
   14001f7f7:	mov    QWORD PTR [rax+0x8],rbx
   14001f7fb:	mov    QWORD PTR [rax+0x10],rbp
   14001f7ff:	mov    QWORD PTR [rax+0x18],rsi
   14001f803:	mov    QWORD PTR [rax+0x20],rdi
   14001f807:	push   r14
   14001f809:	sub    rsp,0x20
   14001f80d:	mov    rbx,rcx
   14001f810:	add    rcx,0x10
   14001f814:	mov    r14,r9
   14001f817:	mov    rax,QWORD PTR [rcx]
   14001f81a:	mov    edi,r8d
   14001f81d:	mov    rbp,rdx
   14001f820:	call   QWORD PTR [rax+0x8]
   14001f823:	mov    rcx,QWORD PTR [rbx+0x2e0]
   14001f82a:	cmp    DWORD PTR [rcx],edi
   14001f82c:	mov    rsi,rax
   14001f82f:	cmovb  edi,DWORD PTR [rcx]
   14001f832:	test   rbp,rbp
   14001f835:	je     0x14001f85f
   14001f837:	mov    r8d,edi
   14001f83a:	mov    rdx,rax
   14001f83d:	mov    rcx,rbp
   14001f840:	call   0x140020e80
   14001f845:	mov    r8d,edi
   14001f848:	mov    edx,0xcc
   14001f84d:	mov    rcx,rsi
   14001f850:	mov    DWORD PTR [r14],edi
   14001f853:	call   0x1400260e0
   14001f858:	mov    eax,0x1
   14001f85d:	jmp    0x14001f861
   14001f85f:	xor    eax,eax
   14001f861:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f866:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f86b:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f870:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f875:	add    rsp,0x20
   14001f879:	pop    r14
   14001f87b:	ret    
   14001f87c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f881:	mov    QWORD PTR [rsp+0x10],rsi
   14001f886:	mov    QWORD PTR [rsp+0x18],rdi
   14001f88b:	push   r14
   14001f88d:	sub    rsp,0x20
   14001f891:	mov    rdi,rcx
   14001f894:	add    rcx,0x10
   14001f898:	mov    r14,r9
   14001f89b:	mov    rax,QWORD PTR [rcx]
   14001f89e:	mov    rsi,rdx
   14001f8a1:	call   QWORD PTR [rax+0x8]
   14001f8a4:	mov    r8,QWORD PTR [rdi+0x2e0]
   14001f8ab:	mov    ebx,0x440
   14001f8b0:	cmp    DWORD PTR [r8],ebx
   14001f8b3:	cmovb  ebx,DWORD PTR [r8]
   14001f8b7:	test   rsi,rsi
   14001f8ba:	je     0x14001f8dd
   14001f8bc:	mov    r8d,ebx
   14001f8bf:	mov    rdx,rsi
   14001f8c2:	mov    rcx,rax
   14001f8c5:	call   0x140020e80
   14001f8ca:	mov    rax,QWORD PTR [rdi+0x2e8]
   14001f8d1:	mov    DWORD PTR [r14],ebx
   14001f8d4:	mov    DWORD PTR [rax],ebx
   14001f8d6:	mov    eax,0x1
   14001f8db:	jmp    0x14001f8df
   14001f8dd:	xor    eax,eax
   14001f8df:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f8e4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f8e9:	mov    rdi,QWORD PTR [rsp+0x40]
   14001f8ee:	add    rsp,0x20
   14001f8f2:	pop    r14
   14001f8f4:	ret    
   14001f8f5:	int3   
   14001f8f6:	int3   
   14001f8f7:	int3   
   14001f8f8:	mov    r11,rsp
   14001f8fb:	mov    QWORD PTR [r11+0x8],rbx
   14001f8ff:	mov    QWORD PTR [r11+0x10],rbp
   14001f903:	mov    DWORD PTR [r11+0x18],r8d
   14001f907:	push   rsi
   14001f908:	push   rdi
   14001f909:	push   r14
   14001f90b:	sub    rsp,0x50
   14001f90f:	mov    rax,QWORD PTR [rcx+0x298]
   14001f916:	mov    r8,QWORD PTR [rcx+0x2d8]
   14001f91d:	mov    ebp,0xa
   14001f922:	mov    QWORD PTR [r11-0x38],rax
   14001f926:	mov    rax,QWORD PTR [rcx+0x2c8]
   14001f92d:	mov    rsi,r9
   14001f930:	mov    r14,rdx
   14001f933:	mov    rbx,rcx
   14001f936:	mov    QWORD PTR [r11-0x30],r8
   14001f93a:	mov    QWORD PTR [r11-0x28],rax
   14001f93e:	mov    QWORD PTR [r11-0x20],r8
   14001f942:	lea    edi,[rbp-0x9]
   14001f945:	xor    r8d,r8d
   14001f948:	lea    rdx,[rsp+0x40]
   14001f94d:	or     r9d,0xffffffff
   14001f951:	lea    ecx,[r8+0x2]
   14001f955:	sub    ebp,edi
   14001f957:	call   QWORD PTR [rip+0x19b4b]        # 0x1400394a8
   14001f95d:	test   eax,eax
   14001f95f:	je     0x14001f990
   14001f961:	sub    eax,0x80
   14001f966:	jne    0x14001fa04
   14001f96c:	lea    rdx,[rsp+0x30]
   14001f971:	lea    ecx,[rax+0x2]
   14001f974:	mov    r9d,0xbb8
   14001f97a:	xor    r8d,r8d
   14001f97d:	call   QWORD PTR [rip+0x19b25]        # 0x1400394a8
   14001f983:	dec    eax
   14001f985:	test   eax,0xffffff7f
   14001f98a:	je     0x14001fa4e
   14001f990:	lea    r9,[rsp+0x80]
   14001f998:	mov    rdx,r14
   14001f99b:	mov    rcx,rbx
   14001f99e:	call   0x14001f87c
   14001f9a3:	test   eax,eax
   14001f9a5:	je     0x14001f9ee
   14001f9a7:	mov    rcx,QWORD PTR [rbx+0x298]
   14001f9ae:	call   QWORD PTR [rip+0x19bbc]        # 0x140039570
   14001f9b4:	test   eax,eax
   14001f9b6:	je     0x14001f9ee
   14001f9b8:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001f9bf:	call   QWORD PTR [rip+0x19b13]        # 0x1400394d8
   14001f9c5:	test   eax,eax
   14001f9c7:	je     0x14001f9ee
   14001f9c9:	xor    r8d,r8d
   14001f9cc:	lea    rdx,[rsp+0x30]
   14001f9d1:	or     r9d,0xffffffff
   14001f9d5:	lea    ecx,[r8+0x2]
   14001f9d9:	call   QWORD PTR [rip+0x19ac9]        # 0x1400394a8
   14001f9df:	cmp    eax,edi
   14001f9e1:	je     0x14001fa41
   14001f9e3:	cmp    eax,0x81
   14001f9e8:	je     0x14001fa41
   14001f9ea:	test   eax,eax
   14001f9ec:	je     0x14001fa10
   14001f9ee:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001f9f5:	call   QWORD PTR [rip+0x19afd]        # 0x1400394f8
   14001f9fb:	test   ebp,ebp
   14001f9fd:	jle    0x14001fa08
   14001f9ff:	jmp    0x14001f945
   14001fa04:	dec    eax
   14001fa06:	je     0x14001fa0c
   14001fa08:	xor    eax,eax
   14001fa0a:	jmp    0x14001fa5d
   14001fa0c:	xor    edi,edi
   14001fa0e:	jmp    0x14001fa4e
   14001fa10:	mov    rax,QWORD PTR [rbx+0x2e8]
   14001fa17:	mov    r9,QWORD PTR [rsp+0x98]
   14001fa1f:	mov    r8d,0x440
   14001fa25:	mov    rdx,rsi
   14001fa28:	mov    rcx,rbx
   14001fa2b:	cmp    DWORD PTR [rax],r8d
   14001fa2e:	ja     0x14001fa33
   14001fa30:	mov    r8d,DWORD PTR [rax]
   14001fa33:	call   0x14001f7f4
   14001fa38:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001fa3f:	jmp    0x14001fa55
   14001fa41:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001fa48:	call   QWORD PTR [rip+0x19aaa]        # 0x1400394f8
   14001fa4e:	mov    rcx,QWORD PTR [rbx+0x2d8]
   14001fa55:	call   QWORD PTR [rip+0x19a9d]        # 0x1400394f8
   14001fa5b:	mov    eax,edi
   14001fa5d:	mov    rbx,QWORD PTR [rsp+0x70]
   14001fa62:	mov    rbp,QWORD PTR [rsp+0x78]
   14001fa67:	add    rsp,0x50
   14001fa6b:	pop    r14
   14001fa6d:	pop    rdi
   14001fa6e:	pop    rsi
   14001fa6f:	ret    
   14001fa70:	mov    QWORD PTR [rsp+0x8],rbx
   14001fa75:	push   rdi
   14001fa76:	sub    rsp,0x20
   14001fa7a:	mov    rbx,rdx
   14001fa7d:	mov    rdi,rcx
   14001fa80:	test   r8b,0x1
   14001fa84:	jne    0x14001fa8d
   14001fa86:	mov    eax,0xc
   14001fa8b:	jmp    0x14001fafc
   14001fa8d:	add    rcx,0x290
   14001fa94:	mov    r8d,0x100002
   14001fa9a:	mov    rax,QWORD PTR [rcx]
   14001fa9d:	call   QWORD PTR [rax]
   14001fa9f:	test   eax,eax
   14001faa1:	jne    0x14001fafc
   14001faa3:	lea    rcx,[rdi+0x2a8]
   14001faaa:	mov    r8d,0x100002
   14001fab0:	mov    rdx,rbx
   14001fab3:	mov    rax,QWORD PTR [rcx]
   14001fab6:	call   QWORD PTR [rax]
   14001fab8:	test   eax,eax
   14001faba:	jne    0x14001fafc
   14001fabc:	lea    rcx,[rdi+0x2c0]
   14001fac3:	mov    r8d,0x100001
   14001fac9:	mov    rdx,rbx
   14001facc:	mov    rax,QWORD PTR [rcx]
   14001facf:	call   QWORD PTR [rax]
   14001fad1:	test   eax,eax
   14001fad3:	jne    0x14001fafc
   14001fad5:	lea    rcx,[rdi+0x2d0]
   14001fadc:	mov    r8d,0x100001
   14001fae2:	mov    rdx,rbx
   14001fae5:	mov    rax,QWORD PTR [rcx]
   14001fae8:	call   QWORD PTR [rax]
   14001faea:	lea    rcx,[rdi+0x18]
   14001faee:	mov    r8d,0x6
   14001faf4:	mov    rax,QWORD PTR [rcx]
   14001faf7:	mov    rdx,rbx
   14001fafa:	call   QWORD PTR [rax]
   14001fafc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fb01:	add    rsp,0x20
   14001fb05:	pop    rdi
   14001fb06:	ret    
   14001fb07:	int3   
   14001fb08:	mov    QWORD PTR [rsp+0x18],rbx
   14001fb0d:	push   rdi
   14001fb0e:	sub    rsp,0x40
   14001fb12:	mov    rax,QWORD PTR [rip+0x2d92f]        # 0x14004d448
   14001fb19:	xor    rax,rsp
   14001fb1c:	mov    QWORD PTR [rsp+0x38],rax
   14001fb21:	mov    rbx,rcx
   14001fb24:	add    rcx,0x290
   14001fb2b:	mov    rdi,rdx
   14001fb2e:	mov    rax,QWORD PTR [rcx]
   14001fb31:	call   QWORD PTR [rax+0x8]
   14001fb34:	lea    rcx,[rbx+0x2a8]
   14001fb3b:	mov    rdx,rdi
   14001fb3e:	mov    DWORD PTR [rsp+0x20],eax
   14001fb42:	mov    rax,QWORD PTR [rcx]
   14001fb45:	call   QWORD PTR [rax+0x8]
   14001fb48:	lea    rcx,[rbx+0x2c0]
   14001fb4f:	mov    rdx,rdi
   14001fb52:	mov    DWORD PTR [rsp+0x24],eax
   14001fb56:	mov    rax,QWORD PTR [rcx]
   14001fb59:	call   QWORD PTR [rax+0x8]
   14001fb5c:	lea    rcx,[rbx+0x2d0]
   14001fb63:	mov    rdx,rdi
   14001fb66:	mov    DWORD PTR [rsp+0x28],eax
   14001fb6a:	mov    rax,QWORD PTR [rcx]
   14001fb6d:	call   QWORD PTR [rax+0x8]
   14001fb70:	lea    rcx,[rbx+0x18]
   14001fb74:	mov    rdx,rdi
   14001fb77:	mov    DWORD PTR [rsp+0x2c],eax
   14001fb7b:	mov    rax,QWORD PTR [rcx]
   14001fb7e:	call   QWORD PTR [rax+0x8]
   14001fb81:	lea    rcx,[rsp+0x20]
   14001fb86:	mov    DWORD PTR [rsp+0x30],eax
   14001fb8a:	xor    eax,eax
   14001fb8c:	mov    edx,DWORD PTR [rcx]
   14001fb8e:	test   edx,edx
   14001fb90:	jne    0x14001fba1
   14001fb92:	inc    eax
   14001fb94:	add    rcx,0x4
   14001fb98:	cmp    eax,0x5
   14001fb9b:	jb     0x14001fb8c
   14001fb9d:	xor    eax,eax
   14001fb9f:	jmp    0x14001fba3
   14001fba1:	mov    eax,edx
   14001fba3:	mov    rcx,QWORD PTR [rsp+0x38]
   14001fba8:	xor    rcx,rsp
   14001fbab:	call   0x140020e50
   14001fbb0:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fbb5:	add    rsp,0x40
   14001fbb9:	pop    rdi
   14001fbba:	ret    
   14001fbbb:	int3   
   14001fbbc:	mov    rax,rsp
   14001fbbf:	push   rdi
   14001fbc0:	sub    rsp,0x270
   14001fbc7:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001fbd0:	mov    QWORD PTR [rax+0x18],rbx
   14001fbd4:	mov    QWORD PTR [rax+0x20],rsi
   14001fbd8:	mov    rax,QWORD PTR [rip+0x2d869]        # 0x14004d448
   14001fbdf:	xor    rax,rsp
   14001fbe2:	mov    QWORD PTR [rsp+0x260],rax
   14001fbea:	mov    rdi,rdx
   14001fbed:	mov    rsi,rcx
   14001fbf0:	mov    QWORD PTR [rsp+0x30],rcx
   14001fbf5:	lea    rax,[rip+0x1f5e4]        # 0x14003f1e0
   14001fbfc:	mov    QWORD PTR [rcx],rax
   14001fbff:	lea    rbx,[rcx+0x8]
   14001fc03:	mov    QWORD PTR [rsp+0x20],rbx
   14001fc08:	lea    rax,[rip+0x1de21]        # 0x14003da30
   14001fc0f:	mov    QWORD PTR [rbx],rax
   14001fc12:	and    QWORD PTR [rbx+0x8],0x0
   14001fc17:	lea    rax,[rip+0x1ecea]        # 0x14003e908
   14001fc1e:	mov    QWORD PTR [rbx],rax
   14001fc21:	mov    r8,rdx
   14001fc24:	xor    edx,edx
   14001fc26:	cmp    DWORD PTR [rsp+0x2a0],0x1
   14001fc2e:	jne    0x14001fc74
   14001fc30:	xor    ecx,ecx
   14001fc32:	call   QWORD PTR [rip+0x19990]        # 0x1400395c8
   14001fc38:	mov    QWORD PTR [rbx+0x8],rax
   14001fc3c:	test   rax,rax
   14001fc3f:	je     0x14001fc49
   14001fc41:	mov    rcx,rbx
   14001fc44:	call   0x1400179e8
   14001fc49:	test   eax,eax
   14001fc4b:	jne    0x14001fcb0
   14001fc4d:	call   QWORD PTR [rip+0x1998d]        # 0x1400395e0
   14001fc53:	mov    edx,eax
   14001fc55:	mov    r8,rdi
   14001fc58:	lea    rcx,[rsp+0x40]
   14001fc5d:	call   0x140002e28
   14001fc62:	lea    rdx,[rip+0x2accf]        # 0x14004a938
   14001fc69:	lea    rcx,[rsp+0x40]
   14001fc6e:	call   0x1400265e8
   14001fc73:	int3   
   14001fc74:	mov    ecx,0x100001
   14001fc79:	call   QWORD PTR [rip+0x194e1]        # 0x140039160
   14001fc7f:	mov    QWORD PTR [rbx+0x8],rax
   14001fc83:	test   rax,rax
   14001fc86:	jne    0x14001fcb0
   14001fc88:	and    DWORD PTR [rsp+0x20],eax
   14001fc8c:	mov    DWORD PTR [rsp+0x24],0xe1232725
   14001fc94:	mov    rax,QWORD PTR [rsp+0x20]
   14001fc99:	mov    QWORD PTR [rsp+0x20],rax
   14001fc9e:	lea    rdx,[rip+0x2b0f3]        # 0x14004ad98
   14001fca5:	lea    rcx,[rsp+0x20]
   14001fcaa:	call   0x1400265e8
   14001fcaf:	nop
   14001fcb0:	mov    rax,rsi
   14001fcb3:	mov    rcx,QWORD PTR [rsp+0x260]
   14001fcbb:	xor    rcx,rsp
   14001fcbe:	call   0x140020e50
   14001fcc3:	lea    r11,[rsp+0x270]
   14001fccb:	mov    rbx,QWORD PTR [r11+0x20]
   14001fccf:	mov    rsi,QWORD PTR [r11+0x28]
   14001fcd3:	mov    rsp,r11
   14001fcd6:	pop    rdi
   14001fcd7:	ret    
   14001fcd8:	rex push rbx
   14001fcda:	sub    rsp,0x20
   14001fcde:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fce2:	xor    ebx,ebx
   14001fce4:	test   rcx,rcx
   14001fce7:	je     0x14001fcfa
   14001fce9:	or     edx,0xffffffff
   14001fcec:	call   QWORD PTR [rip+0x197a6]        # 0x140039498
   14001fcf2:	test   eax,0xffffff7f
   14001fcf7:	sete   bl
   14001fcfa:	mov    eax,ebx
   14001fcfc:	add    rsp,0x20
   14001fd00:	pop    rbx
   14001fd01:	ret    
   14001fd02:	int3   
   14001fd03:	int3   
   14001fd04:	test   r8b,0x1
   14001fd08:	jne    0x14001fd10
   14001fd0a:	mov    eax,0xc
   14001fd0f:	ret    
   14001fd10:	add    rcx,0x8
   14001fd14:	mov    r8d,0x100001
   14001fd1a:	mov    rax,QWORD PTR [rcx]
   14001fd1d:	rex.W jmp QWORD PTR [rax]
   14001fd20:	add    rcx,0x8
   14001fd24:	mov    rax,QWORD PTR [rcx]
   14001fd27:	rex.W jmp QWORD PTR [rax+0x8]
   14001fd2b:	int3   
   14001fd2c:	mov    QWORD PTR [rsp+0x8],rcx
   14001fd31:	sub    rsp,0x38
   14001fd35:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fd3e:	lea    rax,[rip+0x1f4b3]        # 0x14003f1f8
   14001fd45:	mov    QWORD PTR [rcx],rax
   14001fd48:	add    rcx,0x10
   14001fd4c:	add    rsp,0x38
   14001fd50:	jmp    0x14000257c
   14001fd55:	int3   
   14001fd56:	int3   
   14001fd57:	int3   
   14001fd58:	test   r8b,0x1
   14001fd5c:	jne    0x14001fd64
   14001fd5e:	mov    eax,0xc
   14001fd63:	ret    
   14001fd64:	add    rcx,0x18
   14001fd68:	mov    r8d,0x6
   14001fd6e:	mov    rax,QWORD PTR [rcx]
   14001fd71:	rex.W jmp QWORD PTR [rax]
   14001fd74:	add    rcx,0x18
   14001fd78:	mov    rax,QWORD PTR [rcx]
   14001fd7b:	rex.W jmp QWORD PTR [rax+0x8]
   14001fd7f:	int3   
   14001fd80:	mov    QWORD PTR [rsp+0x8],rcx
   14001fd85:	sub    rsp,0x38
   14001fd89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fd92:	lea    rax,[rip+0x1f477]        # 0x14003f210
   14001fd99:	mov    QWORD PTR [rcx],rax
   14001fd9c:	add    rcx,0x10
   14001fda0:	add    rsp,0x38
   14001fda4:	jmp    0x14000257c
   14001fda9:	int3   
   14001fdaa:	int3   
   14001fdab:	int3   
   14001fdac:	sub    rsp,0x48
   14001fdb0:	mov    r10d,edx
   14001fdb3:	mov    r9,rcx
   14001fdb6:	sub    r10d,r8d
   14001fdb9:	prefetchw BYTE PTR [rcx]
   14001fdbc:	mov    rax,QWORD PTR [r9]
   14001fdbf:	mov    DWORD PTR [rsp],r10d
   14001fdc3:	mov    r8,rax
   14001fdc6:	mov    rcx,rax
   14001fdc9:	mov    DWORD PTR [rdx],eax
   14001fdcb:	shr    r8,0x20
   14001fdcf:	shr    rcx,0x30
   14001fdd3:	inc    r8w
   14001fdd7:	inc    cx
   14001fdda:	mov    WORD PTR [rsp+0x6],cx
   14001fddf:	mov    WORD PTR [rsp+0x4],r8w
   14001fde5:	mov    rcx,QWORD PTR [rsp]
   14001fde9:	lock cmpxchg QWORD PTR [r9],rcx
   14001fdee:	jne    0x14001fdbc
   14001fdf0:	add    rsp,0x48
   14001fdf4:	ret    
   14001fdf5:	int3   
   14001fdf6:	int3   
   14001fdf7:	int3   
   14001fdf8:	sub    rsp,0x48
   14001fdfc:	mov    r9,rcx
   14001fdff:	mov    rax,QWORD PTR [r9]
   14001fe02:	cmp    eax,0xffffffff
   14001fe05:	je     0x14001fe43
   14001fe07:	mov    r8,rax
   14001fe0a:	mov    rcx,rax
   14001fe0d:	movsxd r10,eax
   14001fe10:	shr    rcx,0x30
   14001fe14:	shr    r8,0x20
   14001fe18:	add    r10,rdx
   14001fe1b:	dec    r8w
   14001fe1f:	inc    cx
   14001fe22:	mov    WORD PTR [rsp+0x6],cx
   14001fe27:	mov    ecx,DWORD PTR [r10]
   14001fe2a:	mov    WORD PTR [rsp+0x4],r8w
   14001fe30:	mov    DWORD PTR [rsp],ecx
   14001fe33:	mov    rcx,QWORD PTR [rsp]
   14001fe37:	lock cmpxchg QWORD PTR [r9],rcx
   14001fe3c:	jne    0x14001fdff
   14001fe3e:	mov    rax,r10
   14001fe41:	jmp    0x14001fe45
   14001fe43:	xor    eax,eax
   14001fe45:	add    rsp,0x48
   14001fe49:	ret    
   14001fe4a:	int3   
   14001fe4b:	int3   
   14001fe4c:	mov    r11,rsp
   14001fe4f:	mov    QWORD PTR [r11+0x8],rcx
   14001fe53:	push   rbx
   14001fe54:	push   rbp
   14001fe55:	push   rsi
   14001fe56:	push   rdi
   14001fe57:	push   r12
   14001fe59:	push   r13
   14001fe5b:	push   r14
   14001fe5d:	sub    rsp,0x30
   14001fe61:	mov    QWORD PTR [r11-0x48],0xfffffffffffffffe
   14001fe69:	mov    rsi,rcx
   14001fe6c:	lea    rax,[rip+0x1e955]        # 0x14003e7c8
   14001fe73:	mov    QWORD PTR [rcx],rax
   14001fe76:	lea    rdi,[rcx+0x8]
   14001fe7a:	mov    QWORD PTR [r11+0x10],rdi
   14001fe7e:	mov    QWORD PTR [r11+0x18],rdi
   14001fe82:	mov    r12d,0x80
   14001fe88:	mov    DWORD PTR [rdi],r12d
   14001fe8b:	lea    rbx,[rdi+0x10]
   14001fe8f:	mov    QWORD PTR [r11+0x20],rbx
   14001fe93:	mov    rcx,rbx
   14001fe96:	call   0x14000e3d4
   14001fe9b:	nop
   14001fe9c:	mov    DWORD PTR [rbx+0x10],r12d
   14001fea0:	and    DWORD PTR [rbx+0x14],0x0
   14001fea4:	lea    r14d,[r12-0x78]
   14001fea9:	mov    eax,r14d
   14001feac:	mul    r12
   14001feaf:	lea    r13,[r14-0x9]
   14001feb3:	cmovo  rax,r13
   14001feb7:	mov    rcx,rax
   14001feba:	call   0x14002b130
   14001febf:	mov    QWORD PTR [rbx+0x18],rax
   14001fec3:	lea    rbx,[rdi+0x30]
   14001fec7:	mov    QWORD PTR [rsp+0x88],rbx
   14001fecf:	mov    DWORD PTR [rbx+0xc],r12d
   14001fed3:	mov    DWORD PTR [rbx+0x8],0x40
   14001feda:	mov    DWORD PTR [rbx+0x10],r14d
   14001fede:	mov    ebp,0x440
   14001fee3:	mov    ecx,ebp
   14001fee5:	call   0x14002b130
   14001feea:	mov    QWORD PTR [rbx+0x18],rax
   14001feee:	mov    ecx,DWORD PTR [rbx+0x8]
   14001fef1:	dec    rcx
   14001fef4:	add    rax,rcx
   14001fef7:	not    rcx
   14001fefa:	and    rax,rcx
   14001fefd:	mov    QWORD PTR [rbx+0x20],rax
   14001ff01:	mov    DWORD PTR [rbx],r12d
   14001ff04:	and    DWORD PTR [rbx+0x4],0x0
   14001ff08:	xor    ebx,ebx
   14001ff0a:	mov    DWORD PTR [rdi+0x4],ebx
   14001ff0d:	mov    DWORD PTR [rdi+0x8],0x40
   14001ff14:	mov    rcx,rdi
   14001ff17:	call   0x1400206bc
   14001ff1c:	mov    DWORD PTR [rdi],r12d
   14001ff1f:	mov    DWORD PTR [rdi+0x60],ebx
   14001ff22:	mov    DWORD PTR [rdi+0x64],ebx
   14001ff25:	mov    QWORD PTR [rdi+0x58],rbx
   14001ff29:	mov    DWORD PTR [rdi+0x68],r13d
   14001ff2d:	lea    rdi,[rsi+0x78]
   14001ff31:	mov    QWORD PTR [rsp+0x78],rdi
   14001ff36:	mov    QWORD PTR [rsp+0x80],rdi
   14001ff3e:	mov    DWORD PTR [rdi],r12d
   14001ff41:	lea    rbx,[rdi+0x10]
   14001ff45:	mov    QWORD PTR [rsp+0x88],rbx
   14001ff4d:	mov    rcx,rbx
   14001ff50:	call   0x14000e3d4
   14001ff55:	nop
   14001ff56:	mov    DWORD PTR [rbx+0x10],r12d
   14001ff5a:	and    DWORD PTR [rbx+0x14],0x0
   14001ff5e:	mov    eax,r14d
   14001ff61:	mul    r12
   14001ff64:	cmovo  rax,r13
   14001ff68:	mov    rcx,rax
   14001ff6b:	call   0x14002b130
   14001ff70:	mov    QWORD PTR [rbx+0x18],rax
   14001ff74:	lea    rbx,[rdi+0x30]
   14001ff78:	mov    QWORD PTR [rsp+0x88],rbx
   14001ff80:	mov    DWORD PTR [rbx+0xc],r12d
   14001ff84:	mov    DWORD PTR [rbx+0x8],0x40
   14001ff8b:	mov    DWORD PTR [rbx+0x10],r14d
   14001ff8f:	mov    ecx,ebp
   14001ff91:	call   0x14002b130
   14001ff96:	mov    QWORD PTR [rbx+0x18],rax
   14001ff9a:	mov    ecx,DWORD PTR [rbx+0x8]
   14001ff9d:	dec    rcx
   14001ffa0:	add    rax,rcx
   14001ffa3:	not    rcx
   14001ffa6:	and    rax,rcx
   14001ffa9:	mov    QWORD PTR [rbx+0x20],rax
   14001ffad:	mov    QWORD PTR [rbx],r12
   14001ffb0:	xor    ebp,ebp
   14001ffb2:	mov    DWORD PTR [rdi+0x4],ebp
   14001ffb5:	mov    DWORD PTR [rdi+0x8],0x40
   14001ffbc:	mov    rcx,rdi
   14001ffbf:	call   0x140020918
   14001ffc4:	mov    DWORD PTR [rdi],r12d
   14001ffc7:	mov    DWORD PTR [rdi+0x60],ebp
   14001ffca:	mov    DWORD PTR [rdi+0x64],ebp
   14001ffcd:	mov    QWORD PTR [rdi+0x58],rbp
   14001ffd1:	mov    DWORD PTR [rdi+0x68],r13d
   14001ffd5:	mov    DWORD PTR [rsi+0xf0],ebp
   14001ffdb:	mov    DWORD PTR [rsi+0xf4],ebp
   14001ffe1:	mov    QWORD PTR [rsi+0xe8],rbp
   14001ffe8:	mov    DWORD PTR [rsi+0xf8],r13d
   14001ffef:	mov    rax,rsi
   14001fff2:	add    rsp,0x30
   14001fff6:	pop    r14
   14001fff8:	pop    r13
   14001fffa:	pop    r12
   14001fffc:	pop    rdi
   14001fffd:	pop    rsi
   14001fffe:	pop    rbp
   14001ffff:	pop    rbx
   140020000:	ret    
   140020001:	int3   
   140020002:	int3   
   140020003:	int3   
   140020004:	mov    QWORD PTR [rsp+0x8],rbx
   140020009:	mov    QWORD PTR [rsp+0x10],rbp
   14002000e:	mov    QWORD PTR [rsp+0x18],rsi
   140020013:	push   rdi
   140020014:	push   r14
   140020016:	push   r15
   140020018:	sub    rsp,0x50
   14002001c:	lea    rbx,[rcx+0xe8]
   140020023:	mov    eax,0x1
   140020028:	or     edi,0xffffffff
   14002002b:	xchg   DWORD PTR [rbx+0x8],eax
   14002002e:	mov    rbp,r9
   140020031:	mov    r14,r8
   140020034:	mov    r15d,edx
   140020037:	mov    rsi,rcx
   14002003a:	test   eax,eax
   14002003c:	je     0x140020046
   14002003e:	mov    rcx,rbx
   140020041:	call   0x1400178cc
   140020046:	mov    rax,QWORD PTR [rsp+0xa8]
   14002004e:	mov    r9,rbp
   140020051:	mov    r8,r14
   140020054:	mov    QWORD PTR [rsp+0x40],rax
   140020059:	mov    rax,QWORD PTR [rsp+0xa0]
   140020061:	mov    edx,r15d
   140020064:	mov    QWORD PTR [rsp+0x38],rax
   140020069:	mov    eax,DWORD PTR [rsp+0x98]
   140020070:	mov    rcx,rsi
   140020073:	mov    DWORD PTR [rsp+0x30],eax
   140020077:	mov    rax,QWORD PTR [rsp+0x90]
   14002007f:	mov    QWORD PTR [rsp+0x20],rax
   140020084:	call   0x1400201d8
   140020089:	mov    rcx,rax
   14002008c:	test   rax,rax
   14002008f:	je     0x140020094
   140020091:	mov    edi,DWORD PTR [rax+0x10]
   140020094:	mov    rax,QWORD PTR [rsp+0xb0]
   14002009c:	test   rax,rax
   14002009f:	je     0x1400200a4
   1400200a1:	mov    QWORD PTR [rax],rcx
   1400200a4:	xor    eax,eax
   1400200a6:	xchg   DWORD PTR [rbx+0x8],eax
   1400200a9:	lock or DWORD PTR [rsp],0x0
   1400200ae:	mov    eax,DWORD PTR [rbx+0xc]
   1400200b1:	test   eax,eax
   1400200b3:	jle    0x1400200ce
   1400200b5:	lock or DWORD PTR [rsp],0x0
   1400200ba:	mov    edx,DWORD PTR [rbx+0xc]
   1400200bd:	mov    rdx,QWORD PTR [rbx]
   1400200c0:	test   rdx,rdx
   1400200c3:	je     0x1400200ce
   1400200c5:	mov    rcx,QWORD PTR [rbx]
   1400200c8:	call   QWORD PTR [rip+0x1940a]        # 0x1400394d8
   1400200ce:	lea    r11,[rsp+0x50]
   1400200d3:	mov    eax,edi
   1400200d5:	mov    rbx,QWORD PTR [r11+0x20]
   1400200d9:	mov    rbp,QWORD PTR [r11+0x28]
   1400200dd:	mov    rsi,QWORD PTR [r11+0x30]
   1400200e1:	mov    rsp,r11
   1400200e4:	pop    r15
   1400200e6:	pop    r14
   1400200e8:	pop    rdi
   1400200e9:	ret    
   1400200ea:	int3   
   1400200eb:	int3   
   1400200ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400200f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400200f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400200fb:	push   rdi
   1400200fc:	sub    rsp,0x20
   140020100:	lea    rbx,[rcx+0xe8]
   140020107:	mov    eax,0x1
   14002010c:	mov    rsi,r9
   14002010f:	xchg   DWORD PTR [rbx+0x8],eax
   140020112:	mov    rdi,r8
   140020115:	mov    rbp,rcx
   140020118:	test   eax,eax
   14002011a:	je     0x140020124
   14002011c:	mov    rcx,rbx
   14002011f:	call   0x1400178cc
   140020124:	movabs rax,0x3521cfb2b78c1353
   14002012e:	mov    rcx,rdi
   140020131:	mul    rdi
   140020134:	mov    rax,rdi
   140020137:	sub    rcx,rdx
   14002013a:	shr    rcx,1
   14002013d:	add    rcx,rdx
   140020140:	shr    rcx,0x5
   140020144:	imul   rcx,rcx,0x35
   140020148:	sub    rax,rcx
   14002014b:	mov    rax,QWORD PTR [rbp+rax*8+0x100]
   140020153:	test   rax,rax
   140020156:	je     0x140020198
   140020158:	cmp    rdi,QWORD PTR [rax]
   14002015b:	je     0x140020166
   14002015d:	mov    rax,QWORD PTR [rax+0x10]
   140020161:	test   rax,rax
   140020164:	jne    0x140020158
   140020166:	test   rax,rax
   140020169:	je     0x140020198
   14002016b:	mov    rax,QWORD PTR [rax+0x8]
   14002016f:	jmp    0x140020193
   140020171:	cmp    QWORD PTR [rax+0x20],0x0
   140020176:	je     0x14002018f
   140020178:	cmp    DWORD PTR [rax+0x14],0x0
   14002017c:	jne    0x14002018f
   14002017e:	cmp    rsi,QWORD PTR [rax+0x38]
   140020182:	jbe    0x140020188
   140020184:	mov    QWORD PTR [rax+0x38],rsi
   140020188:	mov    DWORD PTR [rax+0x14],0x1
   14002018f:	mov    rax,QWORD PTR [rax+0x50]
   140020193:	test   rax,rax
   140020196:	jne    0x140020171
   140020198:	xor    eax,eax
   14002019a:	xchg   DWORD PTR [rbx+0x8],eax
   14002019d:	lock or DWORD PTR [rsp],0x0
   1400201a2:	mov    eax,DWORD PTR [rbx+0xc]
   1400201a5:	test   eax,eax
   1400201a7:	jle    0x1400201c2
   1400201a9:	lock or DWORD PTR [rsp],0x0
   1400201ae:	mov    eax,DWORD PTR [rbx+0xc]
   1400201b1:	mov    rax,QWORD PTR [rbx]
   1400201b4:	test   rax,rax
   1400201b7:	je     0x1400201c2
   1400201b9:	mov    rcx,QWORD PTR [rbx]
   1400201bc:	call   QWORD PTR [rip+0x19316]        # 0x1400394d8
   1400201c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400201c7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400201cc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400201d1:	add    rsp,0x20
   1400201d5:	pop    rdi
   1400201d6:	ret    
   1400201d7:	int3   
   1400201d8:	mov    rax,rsp
   1400201db:	mov    QWORD PTR [rax+0x18],r8
   1400201df:	mov    DWORD PTR [rax+0x10],edx
   1400201e2:	mov    QWORD PTR [rax+0x8],rcx
   1400201e6:	push   rbp
   1400201e7:	push   rsi
   1400201e8:	push   rdi
   1400201e9:	push   r12
   1400201eb:	push   r13
   1400201ed:	push   r14
   1400201ef:	push   r15
   1400201f1:	sub    rsp,0x90
   1400201f8:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140020200:	mov    QWORD PTR [rax+0x20],rbx
   140020204:	mov    rbp,r9
   140020207:	mov    r12,r8
   14002020a:	mov    r8d,edx
   14002020d:	mov    r13,rcx
   140020210:	xor    r9d,r9d
   140020213:	mov    esi,r9d
   140020216:	mov    QWORD PTR [rsp+0x68],r9
   14002021b:	mov    r15d,r9d
   14002021e:	mov    QWORD PTR [rsp+0x60],r9
   140020223:	movabs rax,0x3521cfb2b78c1353
   14002022d:	mul    r12
   140020230:	mov    rax,r12
   140020233:	sub    rax,rdx
   140020236:	shr    rax,1
   140020239:	add    rax,rdx
   14002023c:	shr    rax,0x5
   140020240:	imul   rax,rax,0x35
   140020244:	mov    r14,r12
   140020247:	sub    r14,rax
   14002024a:	mov    DWORD PTR [rsp+0x58],r9d
   14002024f:	mov    rdi,QWORD PTR [rcx+r14*8+0x100]
   140020257:	test   rdi,rdi
   14002025a:	je     0x140020273
   14002025c:	cmp    r12,QWORD PTR [rdi]
   14002025f:	je     0x14002026a
   140020261:	mov    rdi,QWORD PTR [rdi+0x10]
   140020265:	test   rdi,rdi
   140020268:	jne    0x14002025c
   14002026a:	test   rdi,rdi
   14002026d:	jne    0x140020327
   140020273:	lea    rbx,[rcx+0x60]
   140020277:	mov    QWORD PTR [rsp+0x50],rbx
   14002027c:	mov    eax,0x1
   140020281:	xchg   DWORD PTR [rbx+0x8],eax
   140020284:	test   eax,eax
   140020286:	je     0x140020295
   140020288:	mov    rcx,QWORD PTR [rsp+0x50]
   14002028d:	call   0x1400178cc
   140020292:	xor    r9d,r9d
   140020295:	cmp    DWORD PTR [r13+0x3c],r9d
   140020299:	jg     0x1400202a9
   14002029b:	lea    rcx,[r13+0x8]
   14002029f:	call   0x1400206bc
   1400202a4:	xor    r9d,r9d
   1400202a7:	jmp    0x140020295
   1400202a9:	dec    DWORD PTR [r13+0x3c]
   1400202ad:	mov    ecx,DWORD PTR [r13+0x48]
   1400202b1:	movsxd rax,DWORD PTR [r13+0x3c]
   1400202b5:	imul   rcx,rax
   1400202b9:	mov    rax,QWORD PTR [r13+0x58]
   1400202bd:	mov    rdi,QWORD PTR [rcx+rax*1]
   1400202c1:	mov    eax,r9d
   1400202c4:	xchg   DWORD PTR [rbx+0x8],eax
   1400202c7:	lock or DWORD PTR [rsp],r9d
   1400202cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400202d1:	mov    eax,DWORD PTR [rcx+0xc]
   1400202d4:	test   eax,eax
   1400202d6:	jle    0x1400202fe
   1400202d8:	lock or DWORD PTR [rsp],r9d
   1400202dd:	mov    eax,DWORD PTR [rcx+0xc]
   1400202e0:	mov    rax,QWORD PTR [rsp+0x50]
   1400202e5:	mov    rcx,QWORD PTR [rax]
   1400202e8:	test   rcx,rcx
   1400202eb:	je     0x1400202fe
   1400202ed:	mov    rcx,QWORD PTR [rsp+0x50]
   1400202f2:	mov    rcx,QWORD PTR [rcx]
   1400202f5:	call   QWORD PTR [rip+0x191dd]        # 0x1400394d8
   1400202fb:	xor    r9d,r9d
   1400202fe:	xor    eax,eax
   140020300:	mov    QWORD PTR [rdi+0x8],rax
   140020304:	mov    QWORD PTR [rdi+0x10],rax
   140020308:	mov    QWORD PTR [rdi],r12
   14002030b:	mov    rax,QWORD PTR [r13+r14*8+0x100]
   140020313:	mov    QWORD PTR [rdi+0x10],rax
   140020317:	mov    QWORD PTR [r13+r14*8+0x100],rdi
   14002031f:	mov    r8d,DWORD PTR [rsp+0xd8]
   140020327:	lea    r12,[rdi+0x8]
   14002032b:	mov    QWORD PTR [rsp+0x78],r12
   140020330:	mov    rdi,QWORD PTR [r12]
   140020334:	mov    r14,QWORD PTR [rsp+0xf0]
   14002033c:	test   rdi,rdi
   14002033f:	je     0x14002051a
   140020345:	movsxd rbx,r8d
   140020348:	mov    QWORD PTR [rsp+0x70],rbx
   14002034d:	mov    rax,QWORD PTR [rdi+rbx*8+0x20]
   140020352:	test   rax,rax
   140020355:	je     0x1400203ae
   140020357:	cmp    rax,rbp
   14002035a:	ja     0x140020490
   140020360:	cmp    DWORD PTR [rsp+0x100],r9d
   140020368:	jne    0x140020380
   14002036a:	cmp    DWORD PTR [rdi+rbx*4+0x14],r9d
   14002036f:	je     0x14002049e
   140020375:	cmp    rbp,QWORD PTR [rdi+rbx*8+0x38]
   14002037a:	jbe    0x1400204aa
   140020380:	mov    eax,DWORD PTR [rdi+rbx*4+0x14]
   140020384:	test   eax,eax
   140020386:	je     0x140020393
   140020388:	cmp    QWORD PTR [rdi+rbx*8+0x38],rbp
   14002038d:	jb     0x1400204c7
   140020393:	cmp    DWORD PTR [rsp+0x100],r9d
   14002039b:	je     0x140020490
   1400203a1:	test   eax,eax
   1400203a3:	je     0x1400204af
   1400203a9:	jmp    0x140020490
   1400203ae:	mov    DWORD PTR [rsp+0x44],0x1
   1400203b6:	mov    ecx,0x1
   1400203bb:	mov    DWORD PTR [rsp+0x40],ecx
   1400203bf:	mov    eax,r9d
   1400203c2:	mov    DWORD PTR [rsp+0xf8],eax
   1400203c9:	lea    r12,[rdi+0x20]
   1400203cd:	lea    r13,[rdi+0x14]
   1400203d1:	mov    rbx,QWORD PTR [rsp+0xd0]
   1400203d9:	mov    rsi,QWORD PTR [rsp+0x108]
   1400203e1:	mov    r15d,DWORD PTR [rsp+0xd8]
   1400203e9:	cmp    r15d,eax
   1400203ec:	je     0x14002044f
   1400203ee:	cmp    QWORD PTR [r12],r9
   1400203f2:	je     0x14002040c
   1400203f4:	cmp    QWORD PTR [r12],rbp
   1400203f8:	ja     0x140020407
   1400203fa:	cmp    DWORD PTR [r13+0x0],r9d
   1400203fe:	je     0x140020419
   140020400:	cmp    QWORD PTR [r12+0x18],rbp
   140020405:	jae    0x14002040c
   140020407:	mov    DWORD PTR [rsp+0x44],r9d
   14002040c:	cmp    DWORD PTR [r13+0x0],r9d
   140020410:	je     0x140020419
   140020412:	cmp    rbp,QWORD PTR [r12+0x18]
   140020417:	ja     0x140020442
   140020419:	mov    rax,QWORD PTR [rbx]
   14002041c:	mov    r8,rsi
   14002041f:	mov    rdx,QWORD PTR [rdi+0x8]
   140020423:	mov    rcx,rbx
   140020426:	call   QWORD PTR [rax+0x10]
   140020429:	xor    r9d,r9d
   14002042c:	test   eax,eax
   14002042e:	mov    eax,DWORD PTR [rsp+0xf8]
   140020435:	je     0x140020442
   140020437:	test   r14,r14
   14002043a:	je     0x14002044b
   14002043c:	cmp    QWORD PTR [r12],r14
   140020440:	jbe    0x14002044b
   140020442:	mov    ecx,r9d
   140020445:	mov    DWORD PTR [rsp+0x40],ecx
   140020449:	jmp    0x14002044f
   14002044b:	mov    ecx,DWORD PTR [rsp+0x40]
   14002044f:	inc    eax
   140020451:	mov    DWORD PTR [rsp+0xf8],eax
   140020458:	add    r13,0x4
   14002045c:	add    r12,0x8
   140020460:	cmp    eax,0x3
   140020463:	jl     0x1400203e9
   140020465:	mov    rbx,QWORD PTR [rsp+0x70]
   14002046a:	mov    rsi,QWORD PTR [rsp+0x68]
   14002046f:	mov    r15,QWORD PTR [rsp+0x60]
   140020474:	cmp    DWORD PTR [rsp+0x44],r9d
   140020479:	je     0x140020485
   14002047b:	mov    rsi,rdi
   14002047e:	mov    QWORD PTR [rsp+0x68],rdi
   140020483:	jmp    0x140020490
   140020485:	test   ecx,ecx
   140020487:	cmovne r15,rdi
   14002048b:	mov    QWORD PTR [rsp+0x60],r15
   140020490:	mov    rdi,QWORD PTR [rdi+0x50]
   140020494:	test   rdi,rdi
   140020497:	je     0x1400204c7
   140020499:	jmp    0x14002034d
   14002049e:	cmp    rbp,QWORD PTR [rdi+rbx*8+0x38]
   1400204a3:	jbe    0x1400204aa
   1400204a5:	mov    QWORD PTR [rdi+rbx*8+0x38],rbp
   1400204aa:	mov    rsi,rdi
   1400204ad:	jmp    0x1400204c7
   1400204af:	cmp    rbp,QWORD PTR [rdi+rbx*8+0x38]
   1400204b4:	jb     0x1400204bf
   1400204b6:	lea    rax,[rbp-0x1]
   1400204ba:	mov    QWORD PTR [rdi+rbx*8+0x38],rax
   1400204bf:	mov    DWORD PTR [rdi+rbx*4+0x14],0x1
   1400204c7:	test   rsi,rsi
   1400204ca:	je     0x1400204ea
   1400204cc:	cmp    QWORD PTR [rsi+rbx*8+0x20],r9
   1400204d1:	jne    0x14002068a
   1400204d7:	mov    QWORD PTR [rsi+rbx*8+0x20],rbp
   1400204dc:	cmp    r14,QWORD PTR [rsi+rbx*8+0x38]
   1400204e1:	jbe    0x140020503
   1400204e3:	mov    QWORD PTR [rsi+rbx*8+0x38],r14
   1400204e8:	jmp    0x140020503
   1400204ea:	test   r15,r15
   1400204ed:	je     0x14002050d
   1400204ef:	mov    rsi,r15
   1400204f2:	mov    QWORD PTR [r15+rbx*8+0x20],rbp
   1400204f7:	cmp    r14,QWORD PTR [r15+rbx*8+0x38]
   1400204fc:	jbe    0x140020503
   1400204fe:	mov    QWORD PTR [r15+rbx*8+0x38],r14
   140020503:	mov    ecx,0x1
   140020508:	jmp    0x14002068e
   14002050d:	mov    r12,QWORD PTR [rsp+0x78]
   140020512:	mov    r13,QWORD PTR [rsp+0xd0]
   14002051a:	lea    rbx,[r13+0xd0]
   140020521:	mov    QWORD PTR [rsp+0x48],rbx
   140020526:	mov    eax,0x1
   14002052b:	xchg   DWORD PTR [rbx+0x8],eax
   14002052e:	test   eax,eax
   140020530:	je     0x14002053f
   140020532:	mov    rcx,QWORD PTR [rsp+0x48]
   140020537:	call   0x1400178cc
   14002053c:	xor    r9d,r9d
   14002053f:	cmp    DWORD PTR [r13+0xac],r9d
   140020546:	jg     0x140020556
   140020548:	lea    rcx,[r13+0x78]
   14002054c:	call   0x140020918
   140020551:	xor    r9d,r9d
   140020554:	jmp    0x14002053f
   140020556:	dec    DWORD PTR [r13+0xac]
   14002055d:	mov    ecx,DWORD PTR [r13+0xb8]
   140020564:	movsxd rax,DWORD PTR [r13+0xac]
   14002056b:	imul   rcx,rax
   14002056f:	mov    rax,QWORD PTR [r13+0xc8]
   140020576:	mov    rsi,QWORD PTR [rcx+rax*1]
   14002057a:	mov    eax,r9d
   14002057d:	xchg   DWORD PTR [rbx+0x8],eax
   140020580:	lock or DWORD PTR [rsp],r9d
   140020585:	mov    rcx,QWORD PTR [rsp+0x48]
   14002058a:	mov    eax,DWORD PTR [rcx+0xc]
   14002058d:	test   eax,eax
   14002058f:	jle    0x1400205b4
   140020591:	lock or DWORD PTR [rsp],r9d
   140020596:	mov    eax,DWORD PTR [rcx+0xc]
   140020599:	mov    rax,QWORD PTR [rsp+0x48]
   14002059e:	mov    rcx,QWORD PTR [rax]
   1400205a1:	test   rcx,rcx
   1400205a4:	je     0x1400205b4
   1400205a6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400205ab:	mov    rcx,QWORD PTR [rcx]
   1400205ae:	call   QWORD PTR [rip+0x18f24]        # 0x1400394d8
   1400205b4:	xor    edx,edx
   1400205b6:	lea    r8d,[rdx+0x58]
   1400205ba:	mov    rcx,rsi
   1400205bd:	call   0x1400260e0
   1400205c2:	mov    rdi,QWORD PTR [rsp+0xe0]
   1400205ca:	mov    QWORD PTR [rsi],rdi
   1400205cd:	mov    rax,QWORD PTR [r13+0x0]
   1400205d1:	mov    rcx,r13
   1400205d4:	call   QWORD PTR [rax]
   1400205d6:	mov    DWORD PTR [rsi+0x10],eax
   1400205d9:	movsxd rdx,DWORD PTR [rsp+0xd8]
   1400205e1:	mov    rbx,rdx
   1400205e4:	mov    QWORD PTR [rsi+rdx*8+0x20],rbp
   1400205e9:	mov    QWORD PTR [rsi+rdx*8+0x38],r14
   1400205ee:	mov    rax,QWORD PTR [r13+0x0]
   1400205f2:	mov    rcx,QWORD PTR [rsp+0x108]
   1400205fa:	mov    QWORD PTR [rsp+0x30],rcx
   1400205ff:	mov    QWORD PTR [rsp+0x28],r14
   140020604:	mov    QWORD PTR [rsp+0x20],rbp
   140020609:	mov    r9d,DWORD PTR [rsi+0x10]
   14002060d:	mov    r8,rdi
   140020610:	mov    rcx,r13
   140020613:	call   QWORD PTR [rax+0x8]
   140020616:	mov    QWORD PTR [rsi+0x8],rax
   14002061a:	xor    r9d,r9d
   14002061d:	jmp    0x140020670
   14002061f:	mov    rcx,QWORD PTR [rax+rbx*8+0x20]
   140020624:	test   rcx,rcx
   140020627:	je     0x140020630
   140020629:	cmp    rbp,rcx
   14002062c:	jae    0x140020679
   14002062e:	jmp    0x14002066c
   140020630:	mov    rdx,r9
   140020633:	lea    rcx,[rax+0x20]
   140020637:	test   r14,r14
   14002063a:	jne    0x140020655
   14002063c:	cmp    QWORD PTR [rcx],r9
   14002063f:	je     0x140020646
   140020641:	cmp    rbp,QWORD PTR [rcx]
   140020644:	jae    0x14002066c
   140020646:	inc    rdx
   140020649:	add    rcx,0x8
   14002064d:	cmp    rdx,0x3
   140020651:	jl     0x14002063c
   140020653:	jmp    0x14002066c
   140020655:	cmp    QWORD PTR [rcx],r9
   140020658:	je     0x14002065f
   14002065a:	cmp    r14,QWORD PTR [rcx]
   14002065d:	jae    0x14002066c
   14002065f:	inc    rdx
   140020662:	add    rcx,0x8
   140020666:	cmp    rdx,0x3
   14002066a:	jl     0x140020655
   14002066c:	lea    r12,[rax+0x50]
   140020670:	mov    rax,QWORD PTR [r12]
   140020674:	test   rax,rax
   140020677:	jne    0x14002061f
   140020679:	mov    rcx,QWORD PTR [r12]
   14002067d:	mov    QWORD PTR [rsi+0x50],rcx
   140020681:	mov    QWORD PTR [r12],rsi
   140020685:	jmp    0x140020503
   14002068a:	mov    ecx,DWORD PTR [rsp+0x58]
   14002068e:	mov    rax,QWORD PTR [rsp+0x110]
   140020696:	test   rax,rax
   140020699:	je     0x14002069d
   14002069b:	mov    DWORD PTR [rax],ecx
   14002069d:	mov    rax,rsi
   1400206a0:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400206a8:	add    rsp,0x90
   1400206af:	pop    r15
   1400206b1:	pop    r14
   1400206b3:	pop    r13
   1400206b5:	pop    r12
   1400206b7:	pop    rdi
   1400206b8:	pop    rsi
   1400206b9:	pop    rbp
   1400206ba:	ret    
   1400206bb:	int3   
   1400206bc:	mov    rax,rsp
   1400206bf:	push   rbp
   1400206c0:	push   rsi
   1400206c1:	push   rdi
   1400206c2:	push   r14
   1400206c4:	push   r15
   1400206c6:	lea    rbp,[rax-0x58]
   1400206ca:	sub    rsp,0x130
   1400206d1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400206da:	mov    QWORD PTR [rax+0x8],rbx
   1400206de:	mov    rbx,rcx
   1400206e1:	mov    ecx,0x20
   1400206e6:	call   0x140021a98
   1400206eb:	mov    rdi,rax
   1400206ee:	mov    QWORD PTR [rbp+0x68],rax
   1400206f2:	test   rax,rax
   1400206f5:	je     0x140020757
   1400206f7:	mov    r8d,DWORD PTR [rbx+0x8]
   1400206fb:	mov    eax,DWORD PTR [rbx+0x4]
   1400206fe:	mov    edx,DWORD PTR [rbx]
   140020700:	mov    DWORD PTR [rdi+0x4],edx
   140020703:	mov    DWORD PTR [rdi],r8d
   140020706:	test   eax,eax
   140020708:	jne    0x140020713
   14002070a:	mov    DWORD PTR [rdi+0x8],0x18
   140020711:	jmp    0x140020721
   140020713:	lea    rcx,[r8-0x1]
   140020717:	lea    eax,[rcx+0x18]
   14002071a:	not    ecx
   14002071c:	and    eax,ecx
   14002071e:	mov    DWORD PTR [rdi+0x8],eax
   140020721:	test   edx,edx
   140020723:	je     0x14002074b
   140020725:	mov    ecx,DWORD PTR [rdi+0x8]
   140020728:	imul   ecx,edx
   14002072b:	add    ecx,r8d
   14002072e:	call   0x14002b130
   140020733:	mov    QWORD PTR [rdi+0x10],rax
   140020737:	mov    ecx,DWORD PTR [rdi]
   140020739:	dec    rcx
   14002073c:	add    rax,rcx
   14002073f:	not    rcx
   140020742:	and    rax,rcx
   140020745:	mov    QWORD PTR [rdi+0x18],rax
   140020749:	jmp    0x140020759
   14002074b:	and    QWORD PTR [rdi+0x18],0x0
   140020750:	and    QWORD PTR [rdi+0x10],0x0
   140020755:	jmp    0x140020759
   140020757:	xor    edi,edi
   140020759:	test   rdi,rdi
   14002075c:	jne    0x140020785
   14002075e:	mov    DWORD PTR [rbp+0x68],0x1
   140020765:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   14002076c:	mov    rax,QWORD PTR [rbp+0x68]
   140020770:	mov    QWORD PTR [rbp+0x68],rax
   140020774:	lea    rdx,[rip+0x2a33d]        # 0x14004aab8
   14002077b:	lea    rcx,[rbp+0x68]
   14002077f:	call   0x1400265e8
   140020784:	int3   
   140020785:	xor    r14d,r14d
   140020788:	mov    edx,DWORD PTR [rbx]
   14002078a:	test   edx,edx
   14002078c:	je     0x140020825
   140020792:	xor    esi,esi
   140020794:	cmp    r14d,edx
   140020797:	jae    0x1400207d9
   140020799:	cmp    esi,0x20
   14002079c:	jae    0x1400207d9
   14002079e:	lea    ecx,[rsi+r14*1]
   1400207a2:	mov    eax,DWORD PTR [rdi+0x8]
   1400207a5:	imul   rcx,rax
   1400207a9:	add    rcx,QWORD PTR [rdi+0x18]
   1400207ad:	mov    QWORD PTR [rsp+rsi*8+0x30],rcx
   1400207b2:	inc    esi
   1400207b4:	lea    eax,[rsi+r14*1]
   1400207b8:	cmp    eax,edx
   1400207ba:	jb     0x140020799
   1400207bc:	jmp    0x1400207d9
   1400207be:	mov    eax,DWORD PTR [rbx+0x30]
   1400207c1:	add    eax,eax
   1400207c3:	mov    edx,0x2
   1400207c8:	cmp    eax,edx
   1400207ca:	cmovg  edx,eax
   1400207cd:	mov    DWORD PTR [rbx+0x30],edx
   1400207d0:	lea    rcx,[rbx+0x38]
   1400207d4:	call   0x14000e464
   1400207d9:	mov    ecx,DWORD PTR [rbx+0x34]
   1400207dc:	add    ecx,esi
   1400207de:	cmp    ecx,DWORD PTR [rbx+0x30]
   1400207e1:	jge    0x1400207be
   1400207e3:	test   esi,esi
   1400207e5:	jle    0x140020816
   1400207e7:	lea    r8,[rsp+0x30]
   1400207ec:	mov    r9d,esi
   1400207ef:	movsxd rax,DWORD PTR [rbx+0x34]
   1400207f3:	mov    rcx,rax
   1400207f6:	inc    eax
   1400207f8:	mov    DWORD PTR [rbx+0x34],eax
   1400207fb:	mov    edx,DWORD PTR [rbx+0x40]
   1400207fe:	imul   rdx,rcx
   140020802:	mov    rcx,QWORD PTR [rbx+0x50]
   140020806:	mov    rax,QWORD PTR [r8]
   140020809:	mov    QWORD PTR [rdx+rcx*1],rax
   14002080d:	lea    r8,[r8+0x8]
   140020811:	dec    r9
   140020814:	jne    0x1400207ef
   140020816:	add    r14d,0x20
   14002081a:	mov    edx,DWORD PTR [rbx]
   14002081c:	cmp    r14d,edx
   14002081f:	jb     0x140020792
   140020825:	mov    rsi,QWORD PTR [rbx+0x10]
   140020829:	mov    QWORD PTR [rbp+0x78],rsi
   14002082d:	mov    eax,0x1
   140020832:	xchg   DWORD PTR [rsi+0x8],eax
   140020835:	test   eax,eax
   140020837:	je     0x140020842
   140020839:	mov    rcx,rsi
   14002083c:	call   0x1400178cc
   140020841:	nop
   140020842:	mov    ecx,DWORD PTR [rbx+0x20]
   140020845:	cmp    DWORD PTR [rbx+0x24],ecx
   140020848:	jl     0x1400208c6
   14002084a:	lea    r15d,[rcx-0x1]
   14002084e:	add    ecx,ecx
   140020850:	mov    DWORD PTR [rbx+0x20],ecx
   140020853:	movsxd rdx,ecx
   140020856:	mov    eax,0x8
   14002085b:	mul    rdx
   14002085e:	mov    rcx,0xffffffffffffffff
   140020865:	cmovo  rax,rcx
   140020869:	mov    rcx,rax
   14002086c:	call   0x14002b130
   140020871:	mov    r14,rax
   140020874:	test   rax,rax
   140020877:	jne    0x1400208a0
   140020879:	mov    DWORD PTR [rbp+0x68],0x1
   140020880:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   140020887:	mov    rax,QWORD PTR [rbp+0x68]
   14002088b:	mov    QWORD PTR [rbp+0x70],rax
   14002088f:	lea    rdx,[rip+0x2a222]        # 0x14004aab8
   140020896:	lea    rcx,[rbp+0x70]
   14002089a:	call   0x1400265e8
   14002089f:	int3   
   1400208a0:	movsxd rdx,r15d
   1400208a3:	test   r15d,r15d
   1400208a6:	js     0x1400208b9
   1400208a8:	mov    rax,QWORD PTR [rbx+0x28]
   1400208ac:	mov    rcx,QWORD PTR [rax+rdx*8]
   1400208b0:	mov    QWORD PTR [r14+rdx*8],rcx
   1400208b4:	dec    rdx
   1400208b7:	jns    0x1400208a8
   1400208b9:	mov    rcx,QWORD PTR [rbx+0x28]
   1400208bd:	call   0x14002b138
   1400208c2:	mov    QWORD PTR [rbx+0x28],r14
   1400208c6:	movsxd rcx,DWORD PTR [rbx+0x24]
   1400208ca:	mov    rax,QWORD PTR [rbx+0x28]
   1400208ce:	mov    QWORD PTR [rax+rcx*8],rdi
   1400208d2:	inc    DWORD PTR [rbx+0x24]
   1400208d5:	xor    eax,eax
   1400208d7:	xchg   DWORD PTR [rsi+0x8],eax
   1400208da:	lock or DWORD PTR [rsp],0x0
   1400208df:	mov    eax,DWORD PTR [rsi+0xc]
   1400208e2:	test   eax,eax
   1400208e4:	jle    0x1400208ff
   1400208e6:	lock or DWORD PTR [rsp],0x0
   1400208eb:	mov    eax,DWORD PTR [rsi+0xc]
   1400208ee:	mov    rax,QWORD PTR [rsi]
   1400208f1:	test   rax,rax
   1400208f4:	je     0x1400208ff
   1400208f6:	mov    rcx,QWORD PTR [rsi]
   1400208f9:	call   QWORD PTR [rip+0x18bd9]        # 0x1400394d8
   1400208ff:	mov    rbx,QWORD PTR [rsp+0x160]
   140020907:	add    rsp,0x130
   14002090e:	pop    r15
   140020910:	pop    r14
   140020912:	pop    rdi
   140020913:	pop    rsi
   140020914:	pop    rbp
   140020915:	ret    
   140020916:	int3   
   140020917:	int3   
   140020918:	mov    rax,rsp
   14002091b:	push   rbp
   14002091c:	push   rsi
   14002091d:	push   rdi
   14002091e:	push   r14
   140020920:	push   r15
   140020922:	lea    rbp,[rax-0x58]
   140020926:	sub    rsp,0x130
   14002092d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020936:	mov    QWORD PTR [rax+0x8],rbx
   14002093a:	mov    rbx,rcx
   14002093d:	mov    ecx,0x20
   140020942:	call   0x140021a98
   140020947:	mov    rdi,rax
   14002094a:	mov    QWORD PTR [rbp+0x68],rax
   14002094e:	test   rax,rax
   140020951:	je     0x1400209b3
   140020953:	mov    r8d,DWORD PTR [rbx+0x8]
   140020957:	mov    eax,DWORD PTR [rbx+0x4]
   14002095a:	mov    edx,DWORD PTR [rbx]
   14002095c:	mov    DWORD PTR [rdi+0x4],edx
   14002095f:	mov    DWORD PTR [rdi],r8d
   140020962:	test   eax,eax
   140020964:	jne    0x14002096f
   140020966:	mov    DWORD PTR [rdi+0x8],0x58
   14002096d:	jmp    0x14002097d
   14002096f:	lea    rcx,[r8-0x1]
   140020973:	lea    eax,[rcx+0x58]
   140020976:	not    ecx
   140020978:	and    eax,ecx
   14002097a:	mov    DWORD PTR [rdi+0x8],eax
   14002097d:	test   edx,edx
   14002097f:	je     0x1400209a7
   140020981:	mov    ecx,DWORD PTR [rdi+0x8]
   140020984:	imul   ecx,edx
   140020987:	add    ecx,r8d
   14002098a:	call   0x14002b130
   14002098f:	mov    QWORD PTR [rdi+0x10],rax
   140020993:	mov    ecx,DWORD PTR [rdi]
   140020995:	dec    rcx
   140020998:	add    rax,rcx
   14002099b:	not    rcx
   14002099e:	and    rax,rcx
   1400209a1:	mov    QWORD PTR [rdi+0x18],rax
   1400209a5:	jmp    0x1400209b5
   1400209a7:	and    QWORD PTR [rdi+0x18],0x0
   1400209ac:	and    QWORD PTR [rdi+0x10],0x0
   1400209b1:	jmp    0x1400209b5
   1400209b3:	xor    edi,edi
   1400209b5:	test   rdi,rdi
   1400209b8:	jne    0x1400209e1
   1400209ba:	mov    DWORD PTR [rbp+0x68],0x1
   1400209c1:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   1400209c8:	mov    rax,QWORD PTR [rbp+0x68]
   1400209cc:	mov    QWORD PTR [rbp+0x68],rax
   1400209d0:	lea    rdx,[rip+0x2a0e1]        # 0x14004aab8
   1400209d7:	lea    rcx,[rbp+0x68]
   1400209db:	call   0x1400265e8
   1400209e0:	int3   
   1400209e1:	xor    r14d,r14d
   1400209e4:	mov    edx,DWORD PTR [rbx]
   1400209e6:	test   edx,edx
   1400209e8:	je     0x140020a81
   1400209ee:	xor    esi,esi
   1400209f0:	cmp    r14d,edx
   1400209f3:	jae    0x140020a35
   1400209f5:	cmp    esi,0x20
   1400209f8:	jae    0x140020a35
   1400209fa:	lea    ecx,[rsi+r14*1]
   1400209fe:	mov    eax,DWORD PTR [rdi+0x8]
   140020a01:	imul   rcx,rax
   140020a05:	add    rcx,QWORD PTR [rdi+0x18]
   140020a09:	mov    QWORD PTR [rsp+rsi*8+0x30],rcx
   140020a0e:	inc    esi
   140020a10:	lea    eax,[rsi+r14*1]
   140020a14:	cmp    eax,edx
   140020a16:	jb     0x1400209f5
   140020a18:	jmp    0x140020a35
   140020a1a:	mov    eax,DWORD PTR [rbx+0x30]
   140020a1d:	add    eax,eax
   140020a1f:	mov    edx,0x2
   140020a24:	cmp    eax,edx
   140020a26:	cmovg  edx,eax
   140020a29:	mov    DWORD PTR [rbx+0x30],edx
   140020a2c:	lea    rcx,[rbx+0x38]
   140020a30:	call   0x14000e464
   140020a35:	mov    ecx,DWORD PTR [rbx+0x34]
   140020a38:	add    ecx,esi
   140020a3a:	cmp    ecx,DWORD PTR [rbx+0x30]
   140020a3d:	jge    0x140020a1a
   140020a3f:	test   esi,esi
   140020a41:	jle    0x140020a72
   140020a43:	lea    r8,[rsp+0x30]
   140020a48:	mov    r9d,esi
   140020a4b:	movsxd rax,DWORD PTR [rbx+0x34]
   140020a4f:	mov    rcx,rax
   140020a52:	inc    eax
   140020a54:	mov    DWORD PTR [rbx+0x34],eax
   140020a57:	mov    edx,DWORD PTR [rbx+0x40]
   140020a5a:	imul   rdx,rcx
   140020a5e:	mov    rcx,QWORD PTR [rbx+0x50]
   140020a62:	mov    rax,QWORD PTR [r8]
   140020a65:	mov    QWORD PTR [rdx+rcx*1],rax
   140020a69:	lea    r8,[r8+0x8]
   140020a6d:	dec    r9
   140020a70:	jne    0x140020a4b
   140020a72:	add    r14d,0x20
   140020a76:	mov    edx,DWORD PTR [rbx]
   140020a78:	cmp    r14d,edx
   140020a7b:	jb     0x1400209ee
   140020a81:	mov    rsi,QWORD PTR [rbx+0x10]
   140020a85:	mov    QWORD PTR [rbp+0x78],rsi
   140020a89:	mov    eax,0x1
   140020a8e:	xchg   DWORD PTR [rsi+0x8],eax
   140020a91:	test   eax,eax
   140020a93:	je     0x140020a9e
   140020a95:	mov    rcx,rsi
   140020a98:	call   0x1400178cc
   140020a9d:	nop
   140020a9e:	mov    ecx,DWORD PTR [rbx+0x20]
   140020aa1:	cmp    DWORD PTR [rbx+0x24],ecx
   140020aa4:	jl     0x140020b22
   140020aa6:	lea    r15d,[rcx-0x1]
   140020aaa:	add    ecx,ecx
   140020aac:	mov    DWORD PTR [rbx+0x20],ecx
   140020aaf:	movsxd rdx,ecx
   140020ab2:	mov    eax,0x8
   140020ab7:	mul    rdx
   140020aba:	mov    rcx,0xffffffffffffffff
   140020ac1:	cmovo  rax,rcx
   140020ac5:	mov    rcx,rax
   140020ac8:	call   0x14002b130
   140020acd:	mov    r14,rax
   140020ad0:	test   rax,rax
   140020ad3:	jne    0x140020afc
   140020ad5:	mov    DWORD PTR [rbp+0x68],0x1
   140020adc:	mov    DWORD PTR [rbp+0x6c],0xe1230fa0
   140020ae3:	mov    rax,QWORD PTR [rbp+0x68]
   140020ae7:	mov    QWORD PTR [rbp+0x70],rax
   140020aeb:	lea    rdx,[rip+0x29fc6]        # 0x14004aab8
   140020af2:	lea    rcx,[rbp+0x70]
   140020af6:	call   0x1400265e8
   140020afb:	int3   
   140020afc:	movsxd rdx,r15d
   140020aff:	test   r15d,r15d
   140020b02:	js     0x140020b15
   140020b04:	mov    rax,QWORD PTR [rbx+0x28]
   140020b08:	mov    rcx,QWORD PTR [rax+rdx*8]
   140020b0c:	mov    QWORD PTR [r14+rdx*8],rcx
   140020b10:	dec    rdx
   140020b13:	jns    0x140020b04
   140020b15:	mov    rcx,QWORD PTR [rbx+0x28]
   140020b19:	call   0x14002b138
   140020b1e:	mov    QWORD PTR [rbx+0x28],r14
   140020b22:	movsxd rcx,DWORD PTR [rbx+0x24]
   140020b26:	mov    rax,QWORD PTR [rbx+0x28]
   140020b2a:	mov    QWORD PTR [rax+rcx*8],rdi
   140020b2e:	inc    DWORD PTR [rbx+0x24]
   140020b31:	xor    eax,eax
   140020b33:	xchg   DWORD PTR [rsi+0x8],eax
   140020b36:	lock or DWORD PTR [rsp],0x0
   140020b3b:	mov    eax,DWORD PTR [rsi+0xc]
   140020b3e:	test   eax,eax
   140020b40:	jle    0x140020b5b
   140020b42:	lock or DWORD PTR [rsp],0x0
   140020b47:	mov    eax,DWORD PTR [rsi+0xc]
   140020b4a:	mov    rax,QWORD PTR [rsi]
   140020b4d:	test   rax,rax
   140020b50:	je     0x140020b5b
   140020b52:	mov    rcx,QWORD PTR [rsi]
   140020b55:	call   QWORD PTR [rip+0x1897d]        # 0x1400394d8
   140020b5b:	mov    rbx,QWORD PTR [rsp+0x160]
   140020b63:	add    rsp,0x130
   140020b6a:	pop    r15
   140020b6c:	pop    r14
   140020b6e:	pop    rdi
   140020b6f:	pop    rsi
   140020b70:	pop    rbp
   140020b71:	ret    
   140020b72:	int3   
   140020b73:	int3   
   140020b74:	mov    rax,rsp
   140020b77:	mov    QWORD PTR [rax+0x8],rbx
   140020b7b:	mov    QWORD PTR [rax+0x10],rbp
   140020b7f:	mov    QWORD PTR [rax+0x18],rsi
   140020b83:	mov    QWORD PTR [rax+0x20],rdi
   140020b87:	push   r12
   140020b89:	push   r14
   140020b8b:	push   r15
   140020b8d:	sub    rsp,0x20
   140020b91:	xor    r15d,r15d
   140020b94:	mov    rdi,rdx
   140020b97:	mov    ebx,ecx
   140020b99:	test   ecx,ecx
   140020b9b:	jne    0x140020ba1
   140020b9d:	xor    eax,eax
   140020b9f:	jmp    0x140020c12
   140020ba1:	mov    eax,0x8
   140020ba6:	mov    r12,0xffffffffffffffff
   140020bad:	mov    rbp,rbx
   140020bb0:	mul    rbx
   140020bb3:	cmovo  rax,r12
   140020bb7:	mov    rcx,rax
   140020bba:	call   0x14002b130
   140020bbf:	mov    rsi,rax
   140020bc2:	test   ebx,ebx
   140020bc4:	je     0x140020c0f
   140020bc6:	mov    r14,rax
   140020bc9:	sub    r14,rdi
   140020bcc:	mov    rax,QWORD PTR [rdi]
   140020bcf:	mov    rbx,r12
   140020bd2:	inc    rbx
   140020bd5:	cmp    WORD PTR [rax+rbx*2],r15w
   140020bda:	jne    0x140020bd2
   140020bdc:	inc    rbx
   140020bdf:	mov    eax,0x2
   140020be4:	mul    rbx
   140020be7:	cmovo  rax,r12
   140020beb:	mov    rcx,rax
   140020bee:	call   0x14002b130
   140020bf3:	lea    r8,[rbx+rbx*1]
   140020bf7:	mov    QWORD PTR [r14+rdi*1],rax
   140020bfb:	mov    rdx,QWORD PTR [rdi]
   140020bfe:	mov    rcx,rax
   140020c01:	call   0x140020e80
   140020c06:	add    rdi,0x8
   140020c0a:	dec    rbp
   140020c0d:	jne    0x140020bcc
   140020c0f:	mov    rax,rsi
   140020c12:	mov    rbx,QWORD PTR [rsp+0x40]
   140020c17:	mov    rbp,QWORD PTR [rsp+0x48]
   140020c1c:	mov    rsi,QWORD PTR [rsp+0x50]
   140020c21:	mov    rdi,QWORD PTR [rsp+0x58]
   140020c26:	add    rsp,0x20
   140020c2a:	pop    r15
   140020c2c:	pop    r14
   140020c2e:	pop    r12
   140020c30:	ret    
   140020c31:	int3   
   140020c32:	int3   
   140020c33:	int3   
   140020c34:	mov    QWORD PTR [rsp+0x8],rbx
   140020c39:	push   rdi
   140020c3a:	sub    rsp,0x20
   140020c3e:	mov    ebx,edx
   140020c40:	mov    rdi,rcx
   140020c43:	call   0x140020c64
   140020c48:	test   bl,0x1
   140020c4b:	je     0x140020c55
   140020c4d:	mov    rcx,rdi
   140020c50:	call   0x140020e30
   140020c55:	mov    rax,rdi
   140020c58:	mov    rbx,QWORD PTR [rsp+0x30]
   140020c5d:	add    rsp,0x20
   140020c61:	pop    rdi
   140020c62:	ret    
   140020c63:	int3   
   140020c64:	mov    QWORD PTR [rsp+0x8],rcx
   140020c69:	push   rbx
   140020c6a:	sub    rsp,0x30
   140020c6e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020c77:	mov    rbx,rcx
   140020c7a:	lea    rax,[rip+0x1e5a7]        # 0x14003f228
   140020c81:	mov    QWORD PTR [rcx],rax
   140020c84:	mov    rcx,QWORD PTR [rcx+0x8]
   140020c88:	test   rcx,rcx
   140020c8b:	je     0x140020c98
   140020c8d:	call   QWORD PTR [rip+0x1892d]        # 0x1400395c0
   140020c93:	and    QWORD PTR [rbx+0x8],0x0
   140020c98:	lea    rax,[rip+0x1cd91]        # 0x14003da30
   140020c9f:	mov    QWORD PTR [rbx],rax
   140020ca2:	add    rsp,0x30
   140020ca6:	pop    rbx
   140020ca7:	ret    
   140020ca8:	mov    QWORD PTR [rsp+0x10],rbx
   140020cad:	push   rdi
   140020cae:	sub    rsp,0x30
   140020cb2:	mov    edi,0x1
   140020cb7:	mov    ecx,edi
   140020cb9:	call   0x140022f54
   140020cbe:	mov    eax,0x5a4d
   140020cc3:	cmp    WORD PTR [rip+0xfffffffffffdf336],ax        # 0x140000000
   140020cca:	je     0x140020cd0
   140020ccc:	xor    ebx,ebx
   140020cce:	jmp    0x140020d08
   140020cd0:	movsxd rax,DWORD PTR [rip+0xfffffffffffdf365]        # 0x14000003c
   140020cd7:	lea    rcx,[rip+0xfffffffffffdf322]        # 0x140000000
   140020cde:	add    rax,rcx
   140020ce1:	cmp    DWORD PTR [rax],0x4550
   140020ce7:	jne    0x140020ccc
   140020ce9:	mov    ecx,0x20b
   140020cee:	cmp    WORD PTR [rax+0x18],cx
   140020cf2:	jne    0x140020ccc
   140020cf4:	xor    ebx,ebx
   140020cf6:	cmp    DWORD PTR [rax+0x84],0xe
   140020cfd:	jbe    0x140020d08
   140020cff:	cmp    DWORD PTR [rax+0xf8],ebx
   140020d05:	setne  bl
   140020d08:	mov    DWORD PTR [rsp+0x40],ebx
   140020d0c:	call   0x1400227cc
   140020d11:	test   eax,eax
   140020d13:	jne    0x140020d37
   140020d15:	cmp    DWORD PTR [rip+0x2f620],0x2        # 0x14005033c
   140020d1c:	je     0x140020d23
   140020d1e:	call   0x1400224e8
   140020d23:	mov    ecx,0x1c
   140020d28:	call   0x14002255c
   140020d2d:	mov    ecx,0xff
   140020d32:	call   0x140022120
   140020d37:	call   0x140022038
   140020d3c:	test   eax,eax
   140020d3e:	jne    0x140020d62
   140020d40:	cmp    DWORD PTR [rip+0x2f5f5],0x2        # 0x14005033c
   140020d47:	je     0x140020d4e
   140020d49:	call   0x1400224e8
   140020d4e:	mov    ecx,0x10
   140020d53:	call   0x14002255c
   140020d58:	mov    ecx,0xff
   140020d5d:	call   0x140022120
   140020d62:	call   0x140023054
   140020d67:	nop
   140020d68:	call   0x140022818
   140020d6d:	call   QWORD PTR [rip+0x1842d]        # 0x1400391a0
   140020d73:	mov    QWORD PTR [rip+0x327a6],rax        # 0x140053520
   140020d7a:	call   0x1400230c4
   140020d7f:	mov    QWORD PTR [rip+0x2ece2],rax        # 0x14004fa68
   140020d86:	call   0x140022b94
   140020d8b:	test   eax,eax
   140020d8d:	jns    0x140020d99
   140020d8f:	mov    ecx,0x8
   140020d94:	call   0x140022138
   140020d99:	call   0x140022e1c
   140020d9e:	test   eax,eax
   140020da0:	jns    0x140020dac
   140020da2:	mov    ecx,0x9
   140020da7:	call   0x140022138
   140020dac:	mov    ecx,edi
   140020dae:	call   0x140022180
   140020db3:	test   eax,eax
   140020db5:	je     0x140020dbe
   140020db7:	mov    ecx,eax
   140020db9:	call   0x140022138
   140020dbe:	mov    r8,QWORD PTR [rip+0x2ecdb]        # 0x14004faa0
   140020dc5:	mov    QWORD PTR [rip+0x2ecfc],r8        # 0x14004fac8
   140020dcc:	mov    rdx,QWORD PTR [rip+0x2ecbd]        # 0x14004fa90
   140020dd3:	mov    ecx,DWORD PTR [rip+0x2ecab]        # 0x14004fa84
   140020dd9:	call   0x140001fd4
   140020dde:	mov    edi,eax
   140020de0:	mov    DWORD PTR [rsp+0x20],eax
   140020de4:	test   ebx,ebx
   140020de6:	jne    0x140020def
   140020de8:	mov    ecx,eax
   140020dea:	call   0x1400224dc
   140020def:	call   0x140022170
   140020df4:	jmp    0x140020e0d
   140020df6:	mov    edi,eax
   140020df8:	cmp    DWORD PTR [rsp+0x40],0x0
   140020dfd:	jne    0x140020e07
   140020dff:	mov    ecx,eax
   140020e01:	call   0x140022230
   140020e06:	int3   
   140020e07:	call   0x140022160
   140020e0c:	nop
   140020e0d:	mov    eax,edi
   140020e0f:	mov    rbx,QWORD PTR [rsp+0x48]
   140020e14:	add    rsp,0x30
   140020e18:	pop    rdi
   140020e19:	ret    
   140020e1a:	int3   
   140020e1b:	int3   
   140020e1c:	sub    rsp,0x28
   140020e20:	call   0x140022f9c
   140020e25:	add    rsp,0x28
   140020e29:	jmp    0x140020ca8
   140020e2e:	int3   
   140020e2f:	int3   
   140020e30:	jmp    0x140023328
   140020e35:	int3   
   140020e36:	int3   
   140020e37:	int3   
   140020e38:	int3   
   140020e39:	int3   
   140020e3a:	int3   
   140020e3b:	int3   
   140020e3c:	int3   
   140020e3d:	int3   
   140020e3e:	int3   
   140020e3f:	int3   
   140020e40:	int3   
   140020e41:	int3   
   140020e42:	int3   
   140020e43:	int3   
   140020e44:	int3   
   140020e45:	int3   
   140020e46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140020e50:	cmp    rcx,QWORD PTR [rip+0x2c5f1]        # 0x14004d448
   140020e57:	jne    0x140020e6a
   140020e59:	rol    rcx,0x10
   140020e5d:	test   cx,0xffff
   140020e62:	jne    0x140020e66
   140020e64:	repz ret 
   140020e66:	ror    rcx,0x10
   140020e6a:	jmp    0x1400233b4
   140020e6f:	int3   
   140020e70:	int3   
   140020e71:	int3   
   140020e72:	int3   
   140020e73:	int3   
   140020e74:	int3   
   140020e75:	int3   
   140020e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140020e80:	mov    r11,rcx
   140020e83:	mov    r10,rdx
   140020e86:	cmp    r8,0x10
   140020e8a:	jbe    0x140020f39
   140020e90:	sub    rdx,rcx
   140020e93:	jae    0x140020ea4
   140020e95:	mov    rax,r10
   140020e98:	add    rax,r8
   140020e9b:	cmp    rcx,rax
   140020e9e:	jl     0x1400211ea
   140020ea4:	bt     DWORD PTR [rip+0x2fa08],0x1        # 0x1400508b4
   140020eac:	jae    0x140020ec1
   140020eae:	push   rdi
   140020eaf:	push   rsi
   140020eb0:	mov    rdi,rcx
   140020eb3:	mov    rsi,r10
   140020eb6:	mov    rcx,r8
   140020eb9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020ebb:	pop    rsi
   140020ebc:	pop    rdi
   140020ebd:	mov    rax,r11
   140020ec0:	ret    
   140020ec1:	test   cl,0x7
   140020ec4:	je     0x140020efc
   140020ec6:	test   cl,0x1
   140020ec9:	je     0x140020ed6
   140020ecb:	mov    al,BYTE PTR [rdx+rcx*1]
   140020ece:	dec    r8
   140020ed1:	mov    BYTE PTR [rcx],al
   140020ed3:	inc    rcx
   140020ed6:	test   cl,0x2
   140020ed9:	je     0x140020eea
   140020edb:	mov    ax,WORD PTR [rdx+rcx*1]
   140020edf:	sub    r8,0x2
   140020ee3:	mov    WORD PTR [rcx],ax
   140020ee6:	add    rcx,0x2
   140020eea:	test   cl,0x4
   140020eed:	je     0x140020efc
   140020eef:	mov    eax,DWORD PTR [rdx+rcx*1]
   140020ef2:	sub    r8,0x4
   140020ef6:	mov    DWORD PTR [rcx],eax
   140020ef8:	add    rcx,0x4
   140020efc:	mov    r9,r8
   140020eff:	shr    r9,0x5
   140020f03:	jne    0x1400210e7
   140020f09:	mov    r9,r8
   140020f0c:	shr    r9,0x3
   140020f10:	je     0x140020f26
   140020f12:	mov    rax,QWORD PTR [rdx+rcx*1]
   140020f16:	mov    QWORD PTR [rcx],rax
   140020f19:	add    rcx,0x8
   140020f1d:	dec    r9
   140020f20:	jne    0x140020f12
   140020f22:	and    r8,0x7
   140020f26:	test   r8,r8
   140020f29:	jne    0x140020f30
   140020f2b:	mov    rax,r11
   140020f2e:	ret    
   140020f2f:	nop
   140020f30:	lea    rdx,[rdx+rcx*1]
   140020f34:	mov    r10,rcx
   140020f37:	jmp    0x140020f3c
   140020f39:	mov    r10,r11
   140020f3c:	lea    r9,[rip+0xfffffffffffdf0bd]        # 0x140000000
   140020f43:	mov    rax,r8
   140020f46:	mov    eax,DWORD PTR [r9+r8*4+0x20f53]
   140020f4e:	add    rax,r9
   140020f51:	jmp    rax
   140020f53:	xchg   edi,eax
   140020f54:	lar    eax,WORD PTR [rax]
   140020f57:	fwait
   140020f58:	lar    eax,WORD PTR [rax]
   140020f5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020f5c:	lar    eax,WORD PTR [rax]
   140020f5f:	mov    dl,0xf
   140020f61:	add    al,BYTE PTR [rax]
   140020f63:	(bad)  
   140020f64:	lar    eax,WORD PTR [rax]
   140020f67:	ror    BYTE PTR [rdi],1
   140020f69:	add    al,BYTE PTR [rax]
   140020f6b:	loop   0x140020f7c
   140020f6d:	add    al,BYTE PTR [rax]
   140020f6f:	cmc    
   140020f70:	lar    eax,WORD PTR [rax]
   140020f73:	adc    DWORD PTR [rax],edx
   140020f75:	add    al,BYTE PTR [rax]
   140020f77:	sbb    edx,DWORD PTR [rax]
   140020f79:	add    al,BYTE PTR [rax]
   140020f7b:	adc    BYTE PTR cs:[rdx],al
   140020f7e:	add    BYTE PTR [rdx+0x10],al
   140020f81:	add    al,BYTE PTR [rax]
   140020f83:	pop    rdi
   140020f84:	adc    BYTE PTR [rdx],al
   140020f86:	add    BYTE PTR [rax+0x10],dh
   140020f89:	add    al,BYTE PTR [rax]
   140020f8b:	mov    dl,BYTE PTR [rax]
   140020f8d:	add    al,BYTE PTR [rax]
   140020f8f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020f90:	adc    BYTE PTR [rdx],al
   140020f92:	add    cl,cl
   140020f94:	adc    BYTE PTR [rdx],al
   140020f96:	add    BYTE PTR [rcx-0x75],cl
   140020f99:	ret    
   140020f9a:	ret    
   140020f9b:	movzx  rax,BYTE PTR [rdx]
   140020f9f:	mov    BYTE PTR [r10],al
   140020fa2:	mov    rax,r11
   140020fa5:	ret    
   140020fa6:	movzx  rax,WORD PTR [rdx]
   140020faa:	mov    WORD PTR [r10],ax
   140020fae:	mov    rax,r11
   140020fb1:	ret    
   140020fb2:	movzx  rax,BYTE PTR [rdx]
   140020fb6:	movzx  rcx,WORD PTR [rdx+0x1]
   140020fbb:	mov    BYTE PTR [r10],al
   140020fbe:	mov    WORD PTR [r10+0x1],cx
   140020fc3:	mov    rax,r11
   140020fc6:	ret    
   140020fc7:	mov    eax,DWORD PTR [rdx]
   140020fc9:	mov    DWORD PTR [r10],eax
   140020fcc:	mov    rax,r11
   140020fcf:	ret    
   140020fd0:	movzx  rax,BYTE PTR [rdx]
   140020fd4:	mov    ecx,DWORD PTR [rdx+0x1]
   140020fd7:	mov    BYTE PTR [r10],al
   140020fda:	mov    DWORD PTR [r10+0x1],ecx
   140020fde:	mov    rax,r11
   140020fe1:	ret    
   140020fe2:	movzx  rax,WORD PTR [rdx]
   140020fe6:	mov    ecx,DWORD PTR [rdx+0x2]
   140020fe9:	mov    WORD PTR [r10],ax
   140020fed:	mov    DWORD PTR [r10+0x2],ecx
   140020ff1:	mov    rax,r11
   140020ff4:	ret    
   140020ff5:	movzx  rax,BYTE PTR [rdx]
   140020ff9:	movzx  rcx,WORD PTR [rdx+0x1]
   140020ffe:	mov    edx,DWORD PTR [rdx+0x3]
   140021001:	mov    BYTE PTR [r10],al
   140021004:	mov    WORD PTR [r10+0x1],cx
   140021009:	mov    DWORD PTR [r10+0x3],edx
   14002100d:	mov    rax,r11
   140021010:	ret    
   140021011:	mov    rax,QWORD PTR [rdx]
   140021014:	mov    QWORD PTR [r10],rax
   140021017:	mov    rax,r11
   14002101a:	ret    
   14002101b:	movzx  rax,BYTE PTR [rdx]
   14002101f:	mov    rcx,QWORD PTR [rdx+0x1]
   140021023:	mov    BYTE PTR [r10],al
   140021026:	mov    QWORD PTR [r10+0x1],rcx
   14002102a:	mov    rax,r11
   14002102d:	ret    
   14002102e:	movzx  rax,WORD PTR [rdx]
   140021032:	mov    rcx,QWORD PTR [rdx+0x2]
   140021036:	mov    WORD PTR [r10],ax
   14002103a:	mov    QWORD PTR [r10+0x2],rcx
   14002103e:	mov    rax,r11
   140021041:	ret    
   140021042:	movzx  rax,BYTE PTR [rdx]
   140021046:	movzx  rcx,WORD PTR [rdx+0x1]
   14002104b:	mov    rdx,QWORD PTR [rdx+0x3]
   14002104f:	mov    BYTE PTR [r10],al
   140021052:	mov    WORD PTR [r10+0x1],cx
   140021057:	mov    QWORD PTR [r10+0x3],rdx
   14002105b:	mov    rax,r11
   14002105e:	ret    
   14002105f:	mov    eax,DWORD PTR [rdx]
   140021061:	mov    rcx,QWORD PTR [rdx+0x4]
   140021065:	mov    DWORD PTR [r10],eax
   140021068:	mov    QWORD PTR [r10+0x4],rcx
   14002106c:	mov    rax,r11
   14002106f:	ret    
   140021070:	movzx  rax,BYTE PTR [rdx]
   140021074:	mov    ecx,DWORD PTR [rdx+0x1]
   140021077:	mov    rdx,QWORD PTR [rdx+0x5]
   14002107b:	mov    BYTE PTR [r10],al
   14002107e:	mov    DWORD PTR [r10+0x1],ecx
   140021082:	mov    QWORD PTR [r10+0x5],rdx
   140021086:	mov    rax,r11
   140021089:	ret    
   14002108a:	movzx  rax,WORD PTR [rdx]
   14002108e:	mov    ecx,DWORD PTR [rdx+0x2]
   140021091:	mov    rdx,QWORD PTR [rdx+0x6]
   140021095:	mov    WORD PTR [r10],ax
   140021099:	mov    DWORD PTR [r10+0x2],ecx
   14002109d:	mov    QWORD PTR [r10+0x6],rdx
   1400210a1:	mov    rax,r11
   1400210a4:	ret    
   1400210a5:	movzx  r8,BYTE PTR [rdx]
   1400210a9:	movzx  rax,WORD PTR [rdx+0x1]
   1400210ae:	mov    ecx,DWORD PTR [rdx+0x3]
   1400210b1:	mov    rdx,QWORD PTR [rdx+0x7]
   1400210b5:	mov    BYTE PTR [r10],r8b
   1400210b8:	mov    WORD PTR [r10+0x1],ax
   1400210bd:	mov    DWORD PTR [r10+0x3],ecx
   1400210c1:	mov    QWORD PTR [r10+0x7],rdx
   1400210c5:	mov    rax,r11
   1400210c8:	ret    
   1400210c9:	movdqu xmm0,XMMWORD PTR [rdx]
   1400210cd:	movdqu XMMWORD PTR [r10],xmm0
   1400210d2:	mov    rax,r11
   1400210d5:	ret    
   1400210d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400210e0:	data16 data16 xchg ax,ax
   1400210e4:	data16 xchg ax,ax
   1400210e7:	cmp    r9,0x2000
   1400210ee:	jae    0x140021132
   1400210f0:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400210f4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400210f9:	add    rcx,0x20
   1400210fd:	mov    QWORD PTR [rcx-0x20],rax
   140021101:	mov    QWORD PTR [rcx-0x18],r10
   140021105:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14002110a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002110f:	dec    r9
   140021112:	mov    QWORD PTR [rcx-0x10],rax
   140021116:	mov    QWORD PTR [rcx-0x8],r10
   14002111a:	jne    0x1400210f0
   14002111c:	and    r8,0x1f
   140021120:	jmp    0x140020f09
   140021125:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140021130:	xchg   ax,ax
   140021132:	cmp    rdx,0x1000
   140021139:	jb     0x1400210f0
   14002113b:	mov    eax,0x20
   140021140:	prefetchnta BYTE PTR [rdx+rcx*1]
   140021144:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140021149:	add    rcx,0x80
   140021150:	dec    eax
   140021152:	jne    0x140021140
   140021154:	sub    rcx,0x1000
   14002115b:	mov    eax,0x40
   140021160:	mov    r9,QWORD PTR [rdx+rcx*1]
   140021164:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140021169:	movnti QWORD PTR [rcx],r9
   14002116d:	movnti QWORD PTR [rcx+0x8],r10
   140021172:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140021177:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14002117c:	movnti QWORD PTR [rcx+0x10],r9
   140021181:	movnti QWORD PTR [rcx+0x18],r10
   140021186:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14002118b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140021190:	add    rcx,0x40
   140021194:	movnti QWORD PTR [rcx-0x20],r9
   140021199:	movnti QWORD PTR [rcx-0x18],r10
   14002119e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400211a3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400211a8:	dec    eax
   1400211aa:	movnti QWORD PTR [rcx-0x10],r9
   1400211af:	movnti QWORD PTR [rcx-0x8],r10
   1400211b4:	jne    0x140021160
   1400211b6:	sub    r8,0x1000
   1400211bd:	cmp    r8,0x1000
   1400211c4:	jae    0x14002113b
   1400211ca:	lock or BYTE PTR [rsp],0x0
   1400211cf:	jmp    0x140020efc
   1400211d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400211e0:	data16 data16 xchg ax,ax
   1400211e4:	data16 data16 xchg ax,ax
   1400211e8:	xchg   ax,ax
   1400211ea:	add    rcx,r8
   1400211ed:	test   cl,0x7
   1400211f0:	je     0x140021228
   1400211f2:	test   cl,0x1
   1400211f5:	je     0x140021202
   1400211f7:	dec    rcx
   1400211fa:	mov    al,BYTE PTR [rdx+rcx*1]
   1400211fd:	dec    r8
   140021200:	mov    BYTE PTR [rcx],al
   140021202:	test   cl,0x2
   140021205:	je     0x140021216
   140021207:	sub    rcx,0x2
   14002120b:	mov    ax,WORD PTR [rdx+rcx*1]
   14002120f:	sub    r8,0x2
   140021213:	mov    WORD PTR [rcx],ax
   140021216:	test   cl,0x4
   140021219:	je     0x140021228
   14002121b:	sub    rcx,0x4
   14002121f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140021222:	sub    r8,0x4
   140021226:	mov    DWORD PTR [rcx],eax
   140021228:	mov    r9,r8
   14002122b:	shr    r9,0x5
   14002122f:	jne    0x140021277
   140021231:	mov    r9,r8
   140021234:	shr    r9,0x3
   140021238:	je     0x14002124e
   14002123a:	sub    rcx,0x8
   14002123e:	mov    rax,QWORD PTR [rdx+rcx*1]
   140021242:	dec    r9
   140021245:	mov    QWORD PTR [rcx],rax
   140021248:	jne    0x14002123a
   14002124a:	and    r8,0x7
   14002124e:	test   r8,r8
   140021251:	jne    0x140021260
   140021253:	mov    rax,r11
   140021256:	ret    
   140021257:	nop    WORD PTR [rax+rax*1+0x0]
   140021260:	sub    rcx,r8
   140021263:	mov    r10,rcx
   140021266:	lea    rdx,[rdx+rcx*1]
   14002126a:	jmp    0x140020f3c
   14002126f:	nop
   140021270:	data16 data16 xchg ax,ax
   140021274:	data16 xchg ax,ax
   140021277:	cmp    r9,0x2000
   14002127e:	jae    0x1400212c2
   140021280:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140021285:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002128a:	sub    rcx,0x20
   14002128e:	mov    QWORD PTR [rcx+0x18],rax
   140021292:	mov    QWORD PTR [rcx+0x10],r10
   140021296:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002129b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002129f:	dec    r9
   1400212a2:	mov    QWORD PTR [rcx+0x8],rax
   1400212a6:	mov    QWORD PTR [rcx],r10
   1400212a9:	jne    0x140021280
   1400212ab:	and    r8,0x1f
   1400212af:	jmp    0x140021231
   1400212b1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400212c0:	xchg   ax,ax
   1400212c2:	cmp    rdx,0xfffffffffffff000
   1400212c9:	ja     0x140021280
   1400212cb:	mov    eax,0x20
   1400212d0:	sub    rcx,0x80
   1400212d7:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400212db:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400212e0:	dec    eax
   1400212e2:	jne    0x1400212d0
   1400212e4:	add    rcx,0x1000
   1400212eb:	mov    eax,0x40
   1400212f0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   1400212f5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400212fa:	movnti QWORD PTR [rcx-0x8],r9
   1400212ff:	movnti QWORD PTR [rcx-0x10],r10
   140021304:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140021309:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14002130e:	movnti QWORD PTR [rcx-0x18],r9
   140021313:	movnti QWORD PTR [rcx-0x20],r10
   140021318:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14002131d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140021322:	sub    rcx,0x40
   140021326:	movnti QWORD PTR [rcx+0x18],r9
   14002132b:	movnti QWORD PTR [rcx+0x10],r10
   140021330:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140021335:	mov    r10,QWORD PTR [rdx+rcx*1]
   140021339:	dec    eax
   14002133b:	movnti QWORD PTR [rcx+0x8],r9
   140021340:	movnti QWORD PTR [rcx],r10
   140021344:	jne    0x1400212f0
   140021346:	sub    r8,0x1000
   14002134d:	cmp    r8,0x1000
   140021354:	jae    0x1400212cb
   14002135a:	lock or BYTE PTR [rsp],0x0
   14002135f:	jmp    0x140021228
   140021364:	mov    QWORD PTR [rsp+0x8],rbx
   140021369:	push   rdi
   14002136a:	sub    rsp,0x20
   14002136e:	mov    eax,DWORD PTR [rip+0x31194]        # 0x140052508
   140021374:	xor    ebx,ebx
   140021376:	mov    edi,0x14
   14002137b:	test   eax,eax
   14002137d:	jne    0x140021386
   14002137f:	mov    eax,0x200
   140021384:	jmp    0x14002138b
   140021386:	cmp    eax,edi
   140021388:	cmovl  eax,edi
   14002138b:	movsxd rcx,eax
   14002138e:	mov    edx,0x8
   140021393:	mov    DWORD PTR [rip+0x3116f],eax        # 0x140052508
   140021399:	call   0x140023838
   14002139e:	mov    QWORD PTR [rip+0x3115b],rax        # 0x140052500
   1400213a5:	test   rax,rax
   1400213a8:	jne    0x1400213ce
   1400213aa:	lea    edx,[rax+0x8]
   1400213ad:	mov    rcx,rdi
   1400213b0:	mov    DWORD PTR [rip+0x31152],edi        # 0x140052508
   1400213b6:	call   0x140023838
   1400213bb:	mov    QWORD PTR [rip+0x3113e],rax        # 0x140052500
   1400213c2:	test   rax,rax
   1400213c5:	jne    0x1400213ce
   1400213c7:	mov    eax,0x1a
   1400213cc:	jmp    0x1400213f1
   1400213ce:	lea    rcx,[rip+0x2bc2b]        # 0x14004d000
   1400213d5:	mov    QWORD PTR [rbx+rax*1],rcx
   1400213d9:	add    rcx,0x30
   1400213dd:	lea    rbx,[rbx+0x8]
   1400213e1:	dec    rdi
   1400213e4:	je     0x1400213ef
   1400213e6:	mov    rax,QWORD PTR [rip+0x31113]        # 0x140052500
   1400213ed:	jmp    0x1400213d5
   1400213ef:	xor    eax,eax
   1400213f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213f6:	add    rsp,0x20
   1400213fa:	pop    rdi
   1400213fb:	ret    
   1400213fc:	sub    rsp,0x28
   140021400:	call   0x140021608
   140021405:	cmp    BYTE PTR [rip+0x2e6b0],0x0        # 0x14004fabc
   14002140c:	je     0x140021413
   14002140e:	call   0x140023590
   140021413:	mov    rcx,QWORD PTR [rip+0x310e6]        # 0x140052500
   14002141a:	call   0x140023328
   14002141f:	and    QWORD PTR [rip+0x310d9],0x0        # 0x140052500
   140021427:	add    rsp,0x28
   14002142b:	ret    
   14002142c:	lea    rax,[rip+0x2bbcd]        # 0x14004d000
   140021433:	ret    
   140021434:	rex push rbx
   140021436:	sub    rsp,0x20
   14002143a:	mov    rbx,rcx
   14002143d:	lea    rcx,[rip+0x2bbbc]        # 0x14004d000
   140021444:	cmp    rbx,rcx
   140021447:	jb     0x140021489
   140021449:	lea    rax,[rip+0x2bf40]        # 0x14004d390
   140021450:	cmp    rbx,rax
   140021453:	ja     0x140021489
   140021455:	mov    rdx,rbx
   140021458:	movabs rax,0x2aaaaaaaaaaaaaab
   140021462:	sub    rdx,rcx
   140021465:	imul   rdx
   140021468:	sar    rdx,0x3
   14002146c:	mov    rcx,rdx
   14002146f:	shr    rcx,0x3f
   140021473:	add    rcx,rdx
   140021476:	add    ecx,0x10
   140021479:	call   0x140023638
   14002147e:	bts    DWORD PTR [rbx+0x18],0xf
   140021483:	add    rsp,0x20
   140021487:	pop    rbx
   140021488:	ret    
   140021489:	lea    rcx,[rbx+0x30]
   14002148d:	add    rsp,0x20
   140021491:	pop    rbx
   140021492:	rex.W jmp QWORD PTR [rip+0x17d0f]        # 0x1400391a8
   140021499:	int3   
   14002149a:	int3   
   14002149b:	int3   
   14002149c:	rex push rbx
   14002149e:	sub    rsp,0x20
   1400214a2:	mov    rbx,rdx
   1400214a5:	cmp    ecx,0x14
   1400214a8:	jge    0x1400214bd
   1400214aa:	add    ecx,0x10
   1400214ad:	call   0x140023638
   1400214b2:	bts    DWORD PTR [rbx+0x18],0xf
   1400214b7:	add    rsp,0x20
   1400214bb:	pop    rbx
   1400214bc:	ret    
   1400214bd:	lea    rcx,[rdx+0x30]
   1400214c1:	add    rsp,0x20
   1400214c5:	pop    rbx
   1400214c6:	rex.W jmp QWORD PTR [rip+0x17cdb]        # 0x1400391a8
   1400214cd:	int3   
   1400214ce:	int3   
   1400214cf:	int3   
   1400214d0:	lea    rdx,[rip+0x2bb29]        # 0x14004d000
   1400214d7:	cmp    rcx,rdx
   1400214da:	jb     0x140021513
   1400214dc:	lea    rax,[rip+0x2bead]        # 0x14004d390
   1400214e3:	cmp    rcx,rax
   1400214e6:	ja     0x140021513
   1400214e8:	btr    DWORD PTR [rcx+0x18],0xf
   1400214ed:	sub    rcx,rdx
   1400214f0:	movabs rax,0x2aaaaaaaaaaaaaab
   1400214fa:	imul   rcx
   1400214fd:	sar    rdx,0x3
   140021501:	mov    rcx,rdx
   140021504:	shr    rcx,0x3f
   140021508:	add    rcx,rdx
   14002150b:	add    ecx,0x10
   14002150e:	jmp    0x140023820
   140021513:	add    rcx,0x30
   140021517:	rex.W jmp QWORD PTR [rip+0x17c92]        # 0x1400391b0
   14002151e:	int3   
   14002151f:	int3   
   140021520:	cmp    ecx,0x14
   140021523:	jge    0x140021532
   140021525:	btr    DWORD PTR [rdx+0x18],0xf
   14002152a:	add    ecx,0x10
   14002152d:	jmp    0x140023820
   140021532:	lea    rcx,[rdx+0x30]
   140021536:	rex.W jmp QWORD PTR [rip+0x17c73]        # 0x1400391b0
   14002153d:	int3   
   14002153e:	int3   
   14002153f:	int3   
   140021540:	rex push rbx
   140021542:	sub    rsp,0x20
   140021546:	mov    rbx,rcx
   140021549:	test   rcx,rcx
   14002154c:	jne    0x140021558
   14002154e:	add    rsp,0x20
   140021552:	pop    rbx
   140021553:	jmp    0x140021658
   140021558:	call   0x14002158c
   14002155d:	test   eax,eax
   14002155f:	je     0x140021566
   140021561:	or     eax,0xffffffff
   140021564:	jmp    0x140021586
   140021566:	test   DWORD PTR [rbx+0x18],0x4000
   14002156d:	je     0x140021584
   14002156f:	mov    rcx,rbx
   140021572:	call   0x140023a40
   140021577:	mov    ecx,eax
   140021579:	call   0x140023a68
   14002157e:	neg    eax
   140021580:	sbb    eax,eax
   140021582:	jmp    0x140021586
   140021584:	xor    eax,eax
   140021586:	add    rsp,0x20
   14002158a:	pop    rbx
   14002158b:	ret    
   14002158c:	mov    QWORD PTR [rsp+0x8],rbx
   140021591:	mov    QWORD PTR [rsp+0x10],rsi
   140021596:	push   rdi
   140021597:	sub    rsp,0x20
   14002159b:	mov    eax,DWORD PTR [rcx+0x18]
   14002159e:	xor    esi,esi
   1400215a0:	mov    rbx,rcx
   1400215a3:	and    al,0x3
   1400215a5:	cmp    al,0x2
   1400215a7:	jne    0x1400215e8
   1400215a9:	test   DWORD PTR [rcx+0x18],0x108
   1400215b0:	je     0x1400215e8
   1400215b2:	mov    edi,DWORD PTR [rcx]
   1400215b4:	sub    edi,DWORD PTR [rcx+0x10]
   1400215b7:	test   edi,edi
   1400215b9:	jle    0x1400215e8
   1400215bb:	call   0x140023a40
   1400215c0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400215c4:	mov    r8d,edi
   1400215c7:	mov    ecx,eax
   1400215c9:	call   0x140023b54
   1400215ce:	cmp    eax,edi
   1400215d0:	jne    0x1400215e1
   1400215d2:	mov    eax,DWORD PTR [rbx+0x18]
   1400215d5:	test   al,al
   1400215d7:	jns    0x1400215e8
   1400215d9:	and    eax,0xfffffffd
   1400215dc:	mov    DWORD PTR [rbx+0x18],eax
   1400215df:	jmp    0x1400215e8
   1400215e1:	or     DWORD PTR [rbx+0x18],0x20
   1400215e5:	or     esi,0xffffffff
   1400215e8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400215ec:	and    DWORD PTR [rbx+0x8],0x0
   1400215f0:	mov    eax,esi
   1400215f2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400215f7:	mov    QWORD PTR [rbx],rcx
   1400215fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215ff:	add    rsp,0x20
   140021603:	pop    rdi
   140021604:	ret    
   140021605:	int3   
   140021606:	int3   
   140021607:	int3   
   140021608:	mov    ecx,0x1
   14002160d:	jmp    0x140021658
   140021612:	int3   
   140021613:	int3   
   140021614:	mov    QWORD PTR [rsp+0x10],rbx
   140021619:	mov    QWORD PTR [rsp+0x8],rcx
   14002161e:	push   rdi
   14002161f:	sub    rsp,0x20
   140021623:	mov    rbx,rcx
   140021626:	test   rcx,rcx
   140021629:	jne    0x140021632
   14002162b:	call   0x140021658
   140021630:	jmp    0x14002164c
   140021632:	call   0x140021434
   140021637:	nop
   140021638:	mov    rcx,rbx
   14002163b:	call   0x140021540
   140021640:	mov    edi,eax
   140021642:	mov    rcx,rbx
   140021645:	call   0x1400214d0
   14002164a:	mov    eax,edi
   14002164c:	mov    rbx,QWORD PTR [rsp+0x38]
   140021651:	add    rsp,0x20
   140021655:	pop    rdi
   140021656:	ret    
   140021657:	int3   
   140021658:	mov    QWORD PTR [rsp+0x8],rbx
   14002165d:	mov    QWORD PTR [rsp+0x10],rsi
   140021662:	mov    QWORD PTR [rsp+0x18],rdi
   140021667:	push   r13
   140021669:	push   r14
   14002166b:	push   r15
   14002166d:	sub    rsp,0x30
   140021671:	mov    r14d,ecx
   140021674:	xor    esi,esi
   140021676:	xor    edi,edi
   140021678:	lea    ecx,[rsi+0x1]
   14002167b:	call   0x140023638
   140021680:	nop
   140021681:	xor    ebx,ebx
   140021683:	or     r13d,0xffffffff
   140021687:	mov    DWORD PTR [rsp+0x20],ebx
   14002168b:	cmp    ebx,DWORD PTR [rip+0x30e77]        # 0x140052508
   140021691:	jge    0x140021711
   140021693:	movsxd r15,ebx
   140021696:	mov    rax,QWORD PTR [rip+0x30e63]        # 0x140052500
   14002169d:	mov    rdx,QWORD PTR [rax+r15*8]
   1400216a1:	test   rdx,rdx
   1400216a4:	je     0x14002170a
   1400216a6:	test   BYTE PTR [rdx+0x18],0x83
   1400216aa:	je     0x14002170a
   1400216ac:	mov    ecx,ebx
   1400216ae:	call   0x14002149c
   1400216b3:	nop
   1400216b4:	mov    rax,QWORD PTR [rip+0x30e45]        # 0x140052500
   1400216bb:	mov    rcx,QWORD PTR [rax+r15*8]
   1400216bf:	test   BYTE PTR [rcx+0x18],0x83
   1400216c3:	je     0x1400216f8
   1400216c5:	cmp    r14d,0x1
   1400216c9:	jne    0x1400216dd
   1400216cb:	call   0x140021540
   1400216d0:	cmp    eax,r13d
   1400216d3:	je     0x1400216f8
   1400216d5:	inc    esi
   1400216d7:	mov    DWORD PTR [rsp+0x24],esi
   1400216db:	jmp    0x1400216f8
   1400216dd:	test   r14d,r14d
   1400216e0:	jne    0x1400216f8
   1400216e2:	test   BYTE PTR [rcx+0x18],0x2
   1400216e6:	je     0x1400216f8
   1400216e8:	call   0x140021540
   1400216ed:	cmp    eax,r13d
   1400216f0:	cmove  edi,r13d
   1400216f4:	mov    DWORD PTR [rsp+0x28],edi
   1400216f8:	mov    rdx,QWORD PTR [rip+0x30e01]        # 0x140052500
   1400216ff:	mov    rdx,QWORD PTR [rdx+r15*8]
   140021703:	mov    ecx,ebx
   140021705:	call   0x140021520
   14002170a:	inc    ebx
   14002170c:	jmp    0x140021687
   140021711:	mov    ecx,0x1
   140021716:	call   0x140023820
   14002171b:	cmp    r14d,0x1
   14002171f:	cmove  edi,esi
   140021722:	mov    eax,edi
   140021724:	mov    rbx,QWORD PTR [rsp+0x50]
   140021729:	mov    rsi,QWORD PTR [rsp+0x58]
   14002172e:	mov    rdi,QWORD PTR [rsp+0x60]
   140021733:	add    rsp,0x30
   140021737:	pop    r15
   140021739:	pop    r14
   14002173b:	pop    r13
   14002173d:	ret    
   14002173e:	int3   
   14002173f:	int3   
   140021740:	rex push rbx
   140021742:	sub    rsp,0x20
   140021746:	mov    edx,0x8
   14002174b:	lea    ecx,[rdx+0x18]
   14002174e:	call   0x140023838
   140021753:	mov    rcx,rax
   140021756:	mov    rbx,rax
   140021759:	call   QWORD PTR [rip+0x17a59]        # 0x1400391b8
   14002175f:	mov    QWORD PTR [rip+0x30d8a],rax        # 0x1400524f0
   140021766:	mov    QWORD PTR [rip+0x30d7b],rax        # 0x1400524e8
   14002176d:	test   rbx,rbx
   140021770:	jne    0x140021777
   140021772:	lea    eax,[rbx+0x18]
   140021775:	jmp    0x14002177d
   140021777:	and    QWORD PTR [rbx],0x0
   14002177b:	xor    eax,eax
   14002177d:	add    rsp,0x20
   140021781:	pop    rbx
   140021782:	ret    
   140021783:	int3   
   140021784:	mov    QWORD PTR [rsp+0x8],rbx
   140021789:	mov    QWORD PTR [rsp+0x10],rsi
   14002178e:	mov    QWORD PTR [rsp+0x18],rdi
   140021793:	push   r12
   140021795:	push   r14
   140021797:	push   r15
   140021799:	sub    rsp,0x20
   14002179d:	mov    r12,rcx
   1400217a0:	call   0x14002232c
   1400217a5:	nop
   1400217a6:	mov    rcx,QWORD PTR [rip+0x30d43]        # 0x1400524f0
   1400217ad:	call   QWORD PTR [rip+0x17a0d]        # 0x1400391c0
   1400217b3:	mov    r14,rax
   1400217b6:	mov    rcx,QWORD PTR [rip+0x30d2b]        # 0x1400524e8
   1400217bd:	call   QWORD PTR [rip+0x179fd]        # 0x1400391c0
   1400217c3:	mov    rbx,rax
   1400217c6:	cmp    rax,r14
   1400217c9:	jb     0x14002186a
   1400217cf:	mov    rdi,rax
   1400217d2:	sub    rdi,r14
   1400217d5:	lea    r15,[rdi+0x8]
   1400217d9:	cmp    r15,0x8
   1400217dd:	jb     0x14002186a
   1400217e3:	mov    rcx,r14
   1400217e6:	call   0x1400243b4
   1400217eb:	mov    rsi,rax
   1400217ee:	cmp    rax,r15
   1400217f1:	jae    0x140021848
   1400217f3:	mov    edx,0x1000
   1400217f8:	cmp    rax,rdx
   1400217fb:	cmovb  rdx,rax
   1400217ff:	add    rdx,rax
   140021802:	cmp    rdx,rax
   140021805:	jb     0x140021818
   140021807:	mov    rcx,r14
   14002180a:	call   0x140023934
   14002180f:	xor    ebx,ebx
   140021811:	test   rax,rax
   140021814:	jne    0x140021830
   140021816:	jmp    0x14002181a
   140021818:	xor    ebx,ebx
   14002181a:	lea    rdx,[rsi+0x20]
   14002181e:	cmp    rdx,rsi
   140021821:	jb     0x14002186c
   140021823:	mov    rcx,r14
   140021826:	call   0x140023934
   14002182b:	test   rax,rax
   14002182e:	je     0x14002186c
   140021830:	sar    rdi,0x3
   140021834:	lea    rbx,[rax+rdi*8]
   140021838:	mov    rcx,rax
   14002183b:	call   QWORD PTR [rip+0x17977]        # 0x1400391b8
   140021841:	mov    QWORD PTR [rip+0x30ca8],rax        # 0x1400524f0
   140021848:	mov    rcx,r12
   14002184b:	call   QWORD PTR [rip+0x17967]        # 0x1400391b8
   140021851:	mov    QWORD PTR [rbx],rax
   140021854:	lea    rcx,[rbx+0x8]
   140021858:	call   QWORD PTR [rip+0x1795a]        # 0x1400391b8
   14002185e:	mov    QWORD PTR [rip+0x30c83],rax        # 0x1400524e8
   140021865:	mov    rbx,r12
   140021868:	jmp    0x14002186c
   14002186a:	xor    ebx,ebx
   14002186c:	call   0x140022338
   140021871:	mov    rax,rbx
   140021874:	mov    rbx,QWORD PTR [rsp+0x40]
   140021879:	mov    rsi,QWORD PTR [rsp+0x48]
   14002187e:	mov    rdi,QWORD PTR [rsp+0x50]
   140021883:	add    rsp,0x20
   140021887:	pop    r15
   140021889:	pop    r14
   14002188b:	pop    r12
   14002188d:	ret    
   14002188e:	int3   
   14002188f:	int3   
   140021890:	sub    rsp,0x28
   140021894:	call   0x140021784
   140021899:	neg    rax
   14002189c:	sbb    eax,eax
   14002189e:	neg    eax
   1400218a0:	dec    eax
   1400218a2:	add    rsp,0x28
   1400218a6:	ret    
   1400218a7:	int3   
   1400218a8:	mov    rcx,QWORD PTR [rip+0x2bb99]        # 0x14004d448
   1400218af:	xor    eax,eax
   1400218b1:	or     rcx,0x1
   1400218b5:	cmp    QWORD PTR [rip+0x2e1bc],rcx        # 0x14004fa78
   1400218bc:	sete   al
   1400218bf:	ret    
   1400218c0:	sub    rsp,0x38
   1400218c4:	mov    QWORD PTR [rsp+0x20],r9
   1400218c9:	xor    r9d,r9d
   1400218cc:	call   0x1400218d8
   1400218d1:	add    rsp,0x38
   1400218d5:	ret    
   1400218d6:	int3   
   1400218d7:	int3   
   1400218d8:	mov    rax,rsp
   1400218db:	mov    QWORD PTR [rax+0x8],rbx
   1400218df:	mov    QWORD PTR [rax+0x10],rsi
   1400218e3:	mov    QWORD PTR [rax+0x18],rdi
   1400218e7:	mov    QWORD PTR [rax+0x20],r14
   1400218eb:	push   rbp
   1400218ec:	mov    rbp,rsp
   1400218ef:	sub    rsp,0x50
   1400218f3:	and    QWORD PTR [rbp-0x30],0x0
   1400218f8:	mov    rdi,rdx
   1400218fb:	xor    edx,edx
   1400218fd:	mov    rsi,r8
   140021900:	mov    rbx,rcx
   140021903:	lea    r8d,[rdx+0x28]
   140021907:	lea    rcx,[rbp-0x28]
   14002190b:	mov    r14,r9
   14002190e:	call   0x1400260e0
   140021913:	test   rsi,rsi
   140021916:	jne    0x140021930
   140021918:	call   0x140025380
   14002191d:	mov    DWORD PTR [rax],0x16
   140021923:	call   0x140024554
   140021928:	or     eax,0xffffffff
   14002192b:	jmp    0x1400219ba
   140021930:	test   rdi,rdi
   140021933:	je     0x14002193a
   140021935:	test   rbx,rbx
   140021938:	je     0x140021918
   14002193a:	mov    DWORD PTR [rbp-0x18],0x42
   140021941:	mov    QWORD PTR [rbp-0x20],rbx
   140021945:	mov    QWORD PTR [rbp-0x30],rbx
   140021949:	cmp    rdi,0x3fffffff
   140021950:	jbe    0x14002195b
   140021952:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140021959:	jmp    0x140021961
   14002195b:	lea    eax,[rdi+rdi*1]
   14002195e:	mov    DWORD PTR [rbp-0x28],eax
   140021961:	mov    r9,QWORD PTR [rbp+0x30]
   140021965:	lea    rcx,[rbp-0x30]
   140021969:	mov    r8,r14
   14002196c:	mov    rdx,rsi
   14002196f:	call   0x140025588
   140021974:	mov    edi,eax
   140021976:	test   rbx,rbx
   140021979:	je     0x1400219ba
   14002197b:	dec    DWORD PTR [rbp-0x28]
   14002197e:	js     0x140021994
   140021980:	mov    rax,QWORD PTR [rbp-0x30]
   140021984:	mov    BYTE PTR [rax],0x0
   140021987:	mov    rax,QWORD PTR [rbp-0x30]
   14002198b:	inc    rax
   14002198e:	mov    QWORD PTR [rbp-0x30],rax
   140021992:	jmp    0x1400219a3
   140021994:	lea    rdx,[rbp-0x30]
   140021998:	xor    ecx,ecx
   14002199a:	call   0x1400253f0
   14002199f:	mov    rax,QWORD PTR [rbp-0x30]
   1400219a3:	dec    DWORD PTR [rbp-0x28]
   1400219a6:	js     0x1400219ad
   1400219a8:	mov    BYTE PTR [rax],0x0
   1400219ab:	jmp    0x1400219b8
   1400219ad:	lea    rdx,[rbp-0x30]
   1400219b1:	xor    ecx,ecx
   1400219b3:	call   0x1400253f0
   1400219b8:	mov    eax,edi
   1400219ba:	mov    rbx,QWORD PTR [rsp+0x60]
   1400219bf:	mov    rsi,QWORD PTR [rsp+0x68]
   1400219c4:	mov    rdi,QWORD PTR [rsp+0x70]
   1400219c9:	mov    r14,QWORD PTR [rsp+0x78]
   1400219ce:	add    rsp,0x50
   1400219d2:	pop    rbp
   1400219d3:	ret    
   1400219d4:	sub    rsp,0x28
   1400219d8:	mov    rcx,QWORD PTR [rip+0x2f131]        # 0x140050b10
   1400219df:	call   QWORD PTR [rip+0x177db]        # 0x1400391c0
   1400219e5:	test   rax,rax
   1400219e8:	je     0x1400219ec
   1400219ea:	call   rax
   1400219ec:	mov    ecx,0x19
   1400219f1:	call   0x14002255c
   1400219f6:	mov    edx,0x1
   1400219fb:	xor    ecx,ecx
   1400219fd:	call   0x1400261ec
   140021a02:	call   0x140026208
   140021a07:	int3   
   140021a08:	sub    rsp,0x28
   140021a0c:	mov    rax,rdx
   140021a0f:	lea    rdx,[rcx+0x11]
   140021a13:	lea    rcx,[rax+0x11]
   140021a17:	call   0x140026280
   140021a1c:	test   eax,eax
   140021a1e:	sete   al
   140021a21:	add    rsp,0x28
   140021a25:	ret    
   140021a26:	int3   
   140021a27:	int3   
   140021a28:	mov    QWORD PTR [rsp+0x8],rbx
   140021a2d:	push   rdi
   140021a2e:	sub    rsp,0x20
   140021a32:	lea    rax,[rip+0x17db7]        # 0x1400397f0
   140021a39:	mov    ebx,edx
   140021a3b:	mov    rdi,rcx
   140021a3e:	mov    QWORD PTR [rcx],rax
   140021a41:	call   0x1400262e8
   140021a46:	test   bl,0x1
   140021a49:	je     0x140021a53
   140021a4b:	mov    rcx,rdi
   140021a4e:	call   0x140020e30
   140021a53:	mov    rax,rdi
   140021a56:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a5b:	add    rsp,0x20
   140021a5f:	pop    rdi
   140021a60:	ret    
   140021a61:	int3   
   140021a62:	int3   
   140021a63:	int3   
   140021a64:	rex push rbx
   140021a66:	sub    rsp,0x20
   140021a6a:	mov    rbx,rcx
   140021a6d:	call   0x140026458
   140021a72:	lea    rax,[rip+0x17d87]        # 0x140039800
   140021a79:	mov    QWORD PTR [rbx],rax
   140021a7c:	mov    rax,rbx
   140021a7f:	add    rsp,0x20
   140021a83:	pop    rbx
   140021a84:	ret    
   140021a85:	int3   
   140021a86:	int3   
   140021a87:	int3   
   140021a88:	lea    rax,[rip+0x17d71]        # 0x140039800
   140021a8f:	mov    QWORD PTR [rcx],rax
   140021a92:	jmp    0x140026484
   140021a97:	int3   
   140021a98:	rex push rbx
   140021a9a:	sub    rsp,0x40
   140021a9e:	mov    rbx,rcx
   140021aa1:	jmp    0x140021ab2
   140021aa3:	mov    rcx,rbx
   140021aa6:	call   0x1400265ac
   140021aab:	test   eax,eax
   140021aad:	je     0x140021ac2
   140021aaf:	mov    rcx,rbx
   140021ab2:	call   0x140026354
   140021ab7:	test   rax,rax
   140021aba:	je     0x140021aa3
   140021abc:	add    rsp,0x40
   140021ac0:	pop    rbx
   140021ac1:	ret    
   140021ac2:	lea    rax,[rip+0x17d47]        # 0x140039810
   140021ac9:	lea    rdx,[rsp+0x58]
   140021ace:	lea    rcx,[rsp+0x20]
   140021ad3:	mov    r8d,0x1
   140021ad9:	mov    QWORD PTR [rsp+0x58],rax
   140021ade:	call   0x14002643c
   140021ae3:	lea    rax,[rip+0x17d16]        # 0x140039800
   140021aea:	lea    rdx,[rip+0x28c97]        # 0x14004a788
   140021af1:	lea    rcx,[rsp+0x20]
   140021af6:	mov    QWORD PTR [rsp+0x20],rax
   140021afb:	call   0x1400265e8
   140021b00:	int3   
   140021b01:	int3   
   140021b02:	int3   
   140021b03:	int3   
   140021b04:	mov    QWORD PTR [rsp+0x8],rbx
   140021b09:	push   rdi
   140021b0a:	sub    rsp,0x20
   140021b0e:	lea    rax,[rip+0x17ceb]        # 0x140039800
   140021b15:	mov    ebx,edx
   140021b17:	mov    rdi,rcx
   140021b1a:	mov    QWORD PTR [rcx],rax
   140021b1d:	call   0x140026484
   140021b22:	test   bl,0x1
   140021b25:	je     0x140021b2f
   140021b27:	mov    rcx,rdi
   140021b2a:	call   0x140020e30
   140021b2f:	mov    rax,rdi
   140021b32:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b37:	add    rsp,0x20
   140021b3b:	pop    rdi
   140021b3c:	ret    
   140021b3d:	int3   
   140021b3e:	int3   
   140021b3f:	int3   
   140021b40:	sub    rsp,0x28
   140021b44:	mov    rax,QWORD PTR [rcx]
   140021b47:	cmp    DWORD PTR [rax],0xe06d7363
   140021b4d:	jne    0x140021b6b
   140021b4f:	cmp    DWORD PTR [rax+0x18],0x4
   140021b53:	jne    0x140021b6b
   140021b55:	mov    ecx,DWORD PTR [rax+0x20]
   140021b58:	lea    eax,[rcx-0x19930520]
   140021b5e:	cmp    eax,0x2
   140021b61:	jbe    0x140021b72
   140021b63:	cmp    ecx,0x1994000
   140021b69:	je     0x140021b72
   140021b6b:	xor    eax,eax
   140021b6d:	add    rsp,0x28
   140021b71:	ret    
   140021b72:	call   0x1400266e8
   140021b77:	int3   
   140021b78:	sub    rsp,0x28
   140021b7c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140021b40
   140021b83:	call   0x14002688c
   140021b88:	xor    eax,eax
   140021b8a:	add    rsp,0x28
   140021b8e:	ret    
   140021b8f:	int3   
   140021b90:	mov    QWORD PTR [rsp+0x8],rbx
   140021b95:	mov    QWORD PTR [rsp+0x10],rbp
   140021b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140021b9f:	push   rdi
   140021ba0:	sub    rsp,0x20
   140021ba4:	mov    rsi,rdx
   140021ba7:	mov    edi,ecx
   140021ba9:	call   0x140021ef8
   140021bae:	xor    r9d,r9d
   140021bb1:	mov    rbx,rax
   140021bb4:	test   rax,rax
   140021bb7:	je     0x140021d45
   140021bbd:	mov    rdx,QWORD PTR [rax+0xa0]
   140021bc4:	mov    rcx,rdx
   140021bc7:	cmp    DWORD PTR [rcx],edi
   140021bc9:	je     0x140021bdb
   140021bcb:	lea    rax,[rdx+0xc0]
   140021bd2:	add    rcx,0x10
   140021bd6:	cmp    rcx,rax
   140021bd9:	jb     0x140021bc7
   140021bdb:	lea    rax,[rdx+0xc0]
   140021be2:	cmp    rcx,rax
   140021be5:	jae    0x140021beb
   140021be7:	cmp    DWORD PTR [rcx],edi
   140021be9:	je     0x140021bee
   140021beb:	mov    rcx,r9
   140021bee:	test   rcx,rcx
   140021bf1:	je     0x140021d45
   140021bf7:	mov    r8,QWORD PTR [rcx+0x8]
   140021bfb:	test   r8,r8
   140021bfe:	je     0x140021d45
   140021c04:	cmp    r8,0x5
   140021c08:	jne    0x140021c17
   140021c0a:	mov    QWORD PTR [rcx+0x8],r9
   140021c0e:	lea    eax,[r8-0x4]
   140021c12:	jmp    0x140021d47
   140021c17:	cmp    r8,0x1
   140021c1b:	jne    0x140021c25
   140021c1d:	or     eax,0xffffffff
   140021c20:	jmp    0x140021d47
   140021c25:	mov    rbp,QWORD PTR [rbx+0xa8]
   140021c2c:	mov    QWORD PTR [rbx+0xa8],rsi
   140021c33:	cmp    DWORD PTR [rcx+0x4],0x8
   140021c37:	jne    0x140021d2f
   140021c3d:	mov    edx,0x30
   140021c42:	mov    rax,QWORD PTR [rbx+0xa0]
   140021c49:	add    rdx,0x10
   140021c4d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140021c52:	cmp    rdx,0xc0
   140021c59:	jl     0x140021c42
   140021c5b:	cmp    DWORD PTR [rcx],0xc000008e
   140021c61:	mov    edi,DWORD PTR [rbx+0xb0]
   140021c67:	jne    0x140021c78
   140021c69:	mov    DWORD PTR [rbx+0xb0],0x83
   140021c73:	jmp    0x140021d19
   140021c78:	cmp    DWORD PTR [rcx],0xc0000090
   140021c7e:	jne    0x140021c8f
   140021c80:	mov    DWORD PTR [rbx+0xb0],0x81
   140021c8a:	jmp    0x140021d19
   140021c8f:	cmp    DWORD PTR [rcx],0xc0000091
   140021c95:	jne    0x140021ca3
   140021c97:	mov    DWORD PTR [rbx+0xb0],0x84
   140021ca1:	jmp    0x140021d19
   140021ca3:	cmp    DWORD PTR [rcx],0xc0000093
   140021ca9:	jne    0x140021cb7
   140021cab:	mov    DWORD PTR [rbx+0xb0],0x85
   140021cb5:	jmp    0x140021d19
   140021cb7:	cmp    DWORD PTR [rcx],0xc000008d
   140021cbd:	jne    0x140021ccb
   140021cbf:	mov    DWORD PTR [rbx+0xb0],0x82
   140021cc9:	jmp    0x140021d19
   140021ccb:	cmp    DWORD PTR [rcx],0xc000008f
   140021cd1:	jne    0x140021cdf
   140021cd3:	mov    DWORD PTR [rbx+0xb0],0x86
   140021cdd:	jmp    0x140021d19
   140021cdf:	cmp    DWORD PTR [rcx],0xc0000092
   140021ce5:	jne    0x140021cf3
   140021ce7:	mov    DWORD PTR [rbx+0xb0],0x8a
   140021cf1:	jmp    0x140021d19
   140021cf3:	cmp    DWORD PTR [rcx],0xc00002b5
   140021cf9:	jne    0x140021d07
   140021cfb:	mov    DWORD PTR [rbx+0xb0],0x8d
   140021d05:	jmp    0x140021d19
   140021d07:	cmp    DWORD PTR [rcx],0xc00002b4
   140021d0d:	jne    0x140021d19
   140021d0f:	mov    DWORD PTR [rbx+0xb0],0x8e
   140021d19:	mov    edx,DWORD PTR [rbx+0xb0]
   140021d1f:	mov    ecx,0x8
   140021d24:	call   r8
   140021d27:	mov    DWORD PTR [rbx+0xb0],edi
   140021d2d:	jmp    0x140021d39
   140021d2f:	mov    QWORD PTR [rcx+0x8],r9
   140021d33:	mov    ecx,DWORD PTR [rcx+0x4]
   140021d36:	call   r8
   140021d39:	mov    QWORD PTR [rbx+0xa8],rbp
   140021d40:	jmp    0x140021c1d
   140021d45:	xor    eax,eax
   140021d47:	mov    rbx,QWORD PTR [rsp+0x30]
   140021d4c:	mov    rbp,QWORD PTR [rsp+0x38]
   140021d51:	mov    rsi,QWORD PTR [rsp+0x40]
   140021d56:	add    rsp,0x20
   140021d5a:	pop    rdi
   140021d5b:	ret    
   140021d5c:	mov    eax,DWORD PTR [rip+0x2b67e]        # 0x14004d3e0
   140021d62:	ret    
   140021d63:	int3   
   140021d64:	test   rcx,rcx
   140021d67:	je     0x140021e96
   140021d6d:	mov    QWORD PTR [rsp+0x10],rbx
   140021d72:	push   rdi
   140021d73:	sub    rsp,0x20
   140021d77:	mov    rbx,rcx
   140021d7a:	mov    rcx,QWORD PTR [rcx+0x38]
   140021d7e:	test   rcx,rcx
   140021d81:	je     0x140021d88
   140021d83:	call   0x140023328
   140021d88:	mov    rcx,QWORD PTR [rbx+0x48]
   140021d8c:	test   rcx,rcx
   140021d8f:	je     0x140021d96
   140021d91:	call   0x140023328
   140021d96:	mov    rcx,QWORD PTR [rbx+0x58]
   140021d9a:	test   rcx,rcx
   140021d9d:	je     0x140021da4
   140021d9f:	call   0x140023328
   140021da4:	mov    rcx,QWORD PTR [rbx+0x68]
   140021da8:	test   rcx,rcx
   140021dab:	je     0x140021db2
   140021dad:	call   0x140023328
   140021db2:	mov    rcx,QWORD PTR [rbx+0x70]
   140021db6:	test   rcx,rcx
   140021db9:	je     0x140021dc0
   140021dbb:	call   0x140023328
   140021dc0:	mov    rcx,QWORD PTR [rbx+0x78]
   140021dc4:	test   rcx,rcx
   140021dc7:	je     0x140021dce
   140021dc9:	call   0x140023328
   140021dce:	mov    rcx,QWORD PTR [rbx+0x80]
   140021dd5:	test   rcx,rcx
   140021dd8:	je     0x140021ddf
   140021dda:	call   0x140023328
   140021ddf:	mov    rcx,QWORD PTR [rbx+0xa0]
   140021de6:	lea    rax,[rip+0x17a33]        # 0x140039820
   140021ded:	cmp    rcx,rax
   140021df0:	je     0x140021df7
   140021df2:	call   0x140023328
   140021df7:	mov    edi,0xd
   140021dfc:	mov    ecx,edi
   140021dfe:	call   0x140023638
   140021e03:	nop
   140021e04:	mov    rcx,QWORD PTR [rbx+0xb8]
   140021e0b:	mov    QWORD PTR [rsp+0x30],rcx
   140021e10:	test   rcx,rcx
   140021e13:	je     0x140021e31
   140021e15:	lock dec DWORD PTR [rcx]
   140021e18:	jne    0x140021e31
   140021e1a:	lea    rax,[rip+0x2c15f]        # 0x14004df80
   140021e21:	mov    rcx,QWORD PTR [rsp+0x30]
   140021e26:	cmp    rcx,rax
   140021e29:	je     0x140021e31
   140021e2b:	call   0x140023328
   140021e30:	nop
   140021e31:	mov    ecx,edi
   140021e33:	call   0x140023820
   140021e38:	mov    ecx,0xc
   140021e3d:	call   0x140023638
   140021e42:	nop
   140021e43:	mov    rdi,QWORD PTR [rbx+0xc0]
   140021e4a:	test   rdi,rdi
   140021e4d:	je     0x140021e7a
   140021e4f:	mov    rcx,rdi
   140021e52:	call   0x140026af8
   140021e57:	cmp    rdi,QWORD PTR [rip+0x2bca2]        # 0x14004db00
   140021e5e:	je     0x140021e7a
   140021e60:	lea    rax,[rip+0x2bca9]        # 0x14004db10
   140021e67:	cmp    rdi,rax
   140021e6a:	je     0x140021e7a
   140021e6c:	cmp    DWORD PTR [rdi],0x0
   140021e6f:	jne    0x140021e7a
   140021e71:	mov    rcx,rdi
   140021e74:	call   0x140026960
   140021e79:	nop
   140021e7a:	mov    ecx,0xc
   140021e7f:	call   0x140023820
   140021e84:	mov    rcx,rbx
   140021e87:	call   0x140023328
   140021e8c:	mov    rbx,QWORD PTR [rsp+0x38]
   140021e91:	add    rsp,0x20
   140021e95:	pop    rdi
   140021e96:	ret    
   140021e97:	int3   
   140021e98:	rex push rbx
   140021e9a:	sub    rsp,0x20
   140021e9e:	mov    rbx,rcx
   140021ea1:	mov    ecx,DWORD PTR [rip+0x2b539]        # 0x14004d3e0
   140021ea7:	cmp    ecx,0xffffffff
   140021eaa:	je     0x140021ece
   140021eac:	test   rbx,rbx
   140021eaf:	jne    0x140021ebf
   140021eb1:	call   0x14002681c
   140021eb6:	mov    ecx,DWORD PTR [rip+0x2b524]        # 0x14004d3e0
   140021ebc:	mov    rbx,rax
   140021ebf:	xor    edx,edx
   140021ec1:	call   0x140026824
   140021ec6:	mov    rcx,rbx
   140021ec9:	call   0x140021d64
   140021ece:	add    rsp,0x20
   140021ed2:	pop    rbx
   140021ed3:	ret    
   140021ed4:	rex push rbx
   140021ed6:	sub    rsp,0x20
   140021eda:	call   0x140021ef8
   140021edf:	mov    rbx,rax
   140021ee2:	test   rax,rax
   140021ee5:	jne    0x140021eef
   140021ee7:	lea    ecx,[rax+0x10]
   140021eea:	call   0x140022138
   140021eef:	mov    rax,rbx
   140021ef2:	add    rsp,0x20
   140021ef6:	pop    rbx
   140021ef7:	ret    
   140021ef8:	mov    QWORD PTR [rsp+0x8],rbx
   140021efd:	push   rdi
   140021efe:	sub    rsp,0x20
   140021f02:	call   QWORD PTR [rip+0x176d8]        # 0x1400395e0
   140021f08:	mov    ecx,DWORD PTR [rip+0x2b4d2]        # 0x14004d3e0
   140021f0e:	mov    edi,eax
   140021f10:	call   0x14002681c
   140021f15:	mov    rbx,rax
   140021f18:	test   rax,rax
   140021f1b:	jne    0x140021f64
   140021f1d:	lea    ecx,[rax+0x1]
   140021f20:	mov    edx,0x470
   140021f25:	call   0x140023838
   140021f2a:	mov    rbx,rax
   140021f2d:	test   rax,rax
   140021f30:	je     0x140021f64
   140021f32:	mov    ecx,DWORD PTR [rip+0x2b4a8]        # 0x14004d3e0
   140021f38:	mov    rdx,rax
   140021f3b:	call   0x140026824
   140021f40:	mov    rcx,rbx
   140021f43:	test   eax,eax
   140021f45:	je     0x140021f5d
   140021f47:	xor    edx,edx
   140021f49:	call   0x140021f7c
   140021f4e:	call   QWORD PTR [rip+0x17284]        # 0x1400391d8
   140021f54:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140021f59:	mov    DWORD PTR [rbx],eax
   140021f5b:	jmp    0x140021f64
   140021f5d:	call   0x140023328
   140021f62:	xor    ebx,ebx
   140021f64:	mov    ecx,edi
   140021f66:	call   QWORD PTR [rip+0x1725c]        # 0x1400391c8
   140021f6c:	mov    rax,rbx
   140021f6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021f74:	add    rsp,0x20
   140021f78:	pop    rdi
   140021f79:	ret    
   140021f7a:	int3   
   140021f7b:	int3   
   140021f7c:	mov    QWORD PTR [rsp+0x8],rbx
   140021f81:	push   rdi
   140021f82:	sub    rsp,0x20
   140021f86:	mov    rdi,rdx
   140021f89:	mov    rbx,rcx
   140021f8c:	lea    rax,[rip+0x1788d]        # 0x140039820
   140021f93:	mov    QWORD PTR [rcx+0xa0],rax
   140021f9a:	and    DWORD PTR [rcx+0x10],0x0
   140021f9e:	mov    DWORD PTR [rcx+0x1c],0x1
   140021fa5:	mov    DWORD PTR [rcx+0xc8],0x1
   140021faf:	mov    eax,0x43
   140021fb4:	mov    WORD PTR [rcx+0x164],ax
   140021fbb:	mov    WORD PTR [rcx+0x26a],ax
   140021fc2:	lea    rax,[rip+0x2bfb7]        # 0x14004df80
   140021fc9:	mov    QWORD PTR [rcx+0xb8],rax
   140021fd0:	mov    ecx,0xd
   140021fd5:	call   0x140023638
   140021fda:	nop
   140021fdb:	mov    rax,QWORD PTR [rbx+0xb8]
   140021fe2:	lock inc DWORD PTR [rax]
   140021fe5:	mov    ecx,0xd
   140021fea:	call   0x140023820
   140021fef:	mov    ecx,0xc
   140021ff4:	call   0x140023638
   140021ff9:	nop
   140021ffa:	mov    QWORD PTR [rbx+0xc0],rdi
   140022001:	test   rdi,rdi
   140022004:	jne    0x140022014
   140022006:	mov    rax,QWORD PTR [rip+0x2baf3]        # 0x14004db00
   14002200d:	mov    QWORD PTR [rbx+0xc0],rax
   140022014:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002201b:	call   0x1400268d4
   140022020:	nop
   140022021:	mov    ecx,0xc
   140022026:	call   0x140023820
   14002202b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022030:	add    rsp,0x20
   140022034:	pop    rdi
   140022035:	ret    
   140022036:	int3   
   140022037:	int3   
   140022038:	rex push rbx
   14002203a:	sub    rsp,0x20
   14002203e:	call   0x140022274
   140022043:	call   0x1400237c0
   140022048:	test   eax,eax
   14002204a:	je     0x1400220aa
   14002204c:	lea    rcx,[rip+0xfffffffffffffd11]        # 0x140021d64
   140022053:	call   0x14002680c
   140022058:	mov    DWORD PTR [rip+0x2b382],eax        # 0x14004d3e0
   14002205e:	cmp    eax,0xffffffff
   140022061:	je     0x1400220aa
   140022063:	mov    edx,0x470
   140022068:	mov    ecx,0x1
   14002206d:	call   0x140023838
   140022072:	mov    rbx,rax
   140022075:	test   rax,rax
   140022078:	je     0x1400220aa
   14002207a:	mov    ecx,DWORD PTR [rip+0x2b360]        # 0x14004d3e0
   140022080:	mov    rdx,rax
   140022083:	call   0x140026824
   140022088:	test   eax,eax
   14002208a:	je     0x1400220aa
   14002208c:	xor    edx,edx
   14002208e:	mov    rcx,rbx
   140022091:	call   0x140021f7c
   140022096:	call   QWORD PTR [rip+0x1713c]        # 0x1400391d8
   14002209c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400220a1:	mov    DWORD PTR [rbx],eax
   1400220a3:	mov    eax,0x1
   1400220a8:	jmp    0x1400220b1
   1400220aa:	call   0x1400220b8
   1400220af:	xor    eax,eax
   1400220b1:	add    rsp,0x20
   1400220b5:	pop    rbx
   1400220b6:	ret    
   1400220b7:	int3   
   1400220b8:	sub    rsp,0x28
   1400220bc:	mov    ecx,DWORD PTR [rip+0x2b31e]        # 0x14004d3e0
   1400220c2:	cmp    ecx,0xffffffff
   1400220c5:	je     0x1400220d3
   1400220c7:	call   0x140026814
   1400220cc:	or     DWORD PTR [rip+0x2b30d],0xffffffff        # 0x14004d3e0
   1400220d3:	add    rsp,0x28
   1400220d7:	jmp    0x14002367c
   1400220dc:	rex push rbx
   1400220de:	sub    rsp,0x20
   1400220e2:	mov    ebx,ecx
   1400220e4:	lea    r8,[rsp+0x38]
   1400220e9:	lea    rdx,[rip+0x1bbb8]        # 0x14003dca8
   1400220f0:	xor    ecx,ecx
   1400220f2:	call   QWORD PTR [rip+0x170f0]        # 0x1400391e8
   1400220f8:	test   eax,eax
   1400220fa:	je     0x140022117
   1400220fc:	mov    rcx,QWORD PTR [rsp+0x38]
   140022101:	lea    rdx,[rip+0x177e8]        # 0x1400398f0
   140022108:	call   QWORD PTR [rip+0x170e2]        # 0x1400391f0
   14002210e:	test   rax,rax
   140022111:	je     0x140022117
   140022113:	mov    ecx,ebx
   140022115:	call   rax
   140022117:	add    rsp,0x20
   14002211b:	pop    rbx
   14002211c:	ret    
   14002211d:	int3   
   14002211e:	int3   
   14002211f:	int3   
   140022120:	rex push rbx
   140022122:	sub    rsp,0x20
   140022126:	mov    ebx,ecx
   140022128:	call   0x1400220dc
   14002212d:	mov    ecx,ebx
   14002212f:	call   QWORD PTR [rip+0x170ab]        # 0x1400391e0
   140022135:	int3   
   140022136:	int3   
   140022137:	int3   
   140022138:	rex push rbx
   14002213a:	sub    rsp,0x20
   14002213e:	mov    ebx,ecx
   140022140:	call   0x1400224e8
   140022145:	mov    ecx,ebx
   140022147:	call   0x14002255c
   14002214c:	xor    r8d,r8d
   14002214f:	mov    ecx,0xff
   140022154:	lea    edx,[r8+0x1]
   140022158:	call   0x140022344
   14002215d:	int3   
   14002215e:	int3   
   14002215f:	int3   
   140022160:	mov    edx,0x1
   140022165:	xor    ecx,ecx
   140022167:	mov    r8d,edx
   14002216a:	jmp    0x140022344
   14002216f:	int3   
   140022170:	xor    edx,edx
   140022172:	xor    ecx,ecx
   140022174:	lea    r8d,[rdx+0x1]
   140022178:	jmp    0x140022344
   14002217d:	int3   
   14002217e:	int3   
   14002217f:	int3   
   140022180:	mov    QWORD PTR [rsp+0x8],rbx
   140022185:	push   rdi
   140022186:	sub    rsp,0x20
   14002218a:	cmp    QWORD PTR [rip+0x1f6f6],0x0        # 0x140041888
   140022192:	mov    ebx,ecx
   140022194:	je     0x1400221ae
   140022196:	lea    rcx,[rip+0x1f6eb]        # 0x140041888
   14002219d:	call   0x1400275b0
   1400221a2:	test   eax,eax
   1400221a4:	je     0x1400221ae
   1400221a6:	mov    ecx,ebx
   1400221a8:	call   QWORD PTR [rip+0x1f6da]        # 0x140041888
   1400221ae:	call   0x140027630
   1400221b3:	lea    rdx,[rip+0x175ae]        # 0x140039768
   1400221ba:	lea    rcx,[rip+0x17577]        # 0x140039738
   1400221c1:	call   0x1400222f0
   1400221c6:	test   eax,eax
   1400221c8:	jne    0x140022224
   1400221ca:	lea    rcx,[rip+0xebb]        # 0x14002308c
   1400221d1:	call   0x140021890
   1400221d6:	lea    rbx,[rip+0x174db]        # 0x1400396b8
   1400221dd:	lea    rdi,[rip+0x1754c]        # 0x140039730
   1400221e4:	jmp    0x1400221f4
   1400221e6:	mov    rax,QWORD PTR [rbx]
   1400221e9:	test   rax,rax
   1400221ec:	je     0x1400221f0
   1400221ee:	call   rax
   1400221f0:	add    rbx,0x8
   1400221f4:	cmp    rbx,rdi
   1400221f7:	jb     0x1400221e6
   1400221f9:	cmp    QWORD PTR [rip+0x302df],0x0        # 0x1400524e0
   140022201:	je     0x140022222
   140022203:	lea    rcx,[rip+0x302d6]        # 0x1400524e0
   14002220a:	call   0x1400275b0
   14002220f:	test   eax,eax
   140022211:	je     0x140022222
   140022213:	xor    r8d,r8d
   140022216:	xor    ecx,ecx
   140022218:	lea    edx,[r8+0x2]
   14002221c:	call   QWORD PTR [rip+0x302be]        # 0x1400524e0
   140022222:	xor    eax,eax
   140022224:	mov    rbx,QWORD PTR [rsp+0x30]
   140022229:	add    rsp,0x20
   14002222d:	pop    rdi
   14002222e:	ret    
   14002222f:	int3   
   140022230:	xor    r8d,r8d
   140022233:	lea    edx,[r8+0x1]
   140022237:	jmp    0x140022344
   14002223c:	sub    rsp,0x28
   140022240:	test   rcx,rcx
   140022243:	jne    0x14002225c
   140022245:	call   0x140025380
   14002224a:	mov    DWORD PTR [rax],0x16
   140022250:	call   0x140024554
   140022255:	mov    eax,0x16
   14002225a:	jmp    0x14002226d
   14002225c:	mov    rax,QWORD PTR [rip+0x2d84d]        # 0x14004fab0
   140022263:	test   rax,rax
   140022266:	je     0x140022245
   140022268:	mov    QWORD PTR [rcx],rax
   14002226b:	xor    eax,eax
   14002226d:	add    rsp,0x28
   140022271:	ret    
   140022272:	int3   
   140022273:	int3   
   140022274:	rex push rbx
   140022276:	sub    rsp,0x20
   14002227a:	xor    ecx,ecx
   14002227c:	call   QWORD PTR [rip+0x16f36]        # 0x1400391b8
   140022282:	mov    rcx,rax
   140022285:	mov    rbx,rax
   140022288:	call   0x1400265e0
   14002228d:	mov    rcx,rbx
   140022290:	call   0x1400244e4
   140022295:	mov    rcx,rbx
   140022298:	call   0x140026260
   14002229d:	mov    rcx,rbx
   1400222a0:	call   0x14002766c
   1400222a5:	mov    rcx,rbx
   1400222a8:	call   0x140027684
   1400222ad:	mov    rcx,rbx
   1400222b0:	add    rsp,0x20
   1400222b4:	pop    rbx
   1400222b5:	jmp    0x140026708
   1400222ba:	int3   
   1400222bb:	int3   
   1400222bc:	cmp    rcx,rdx
   1400222bf:	jae    0x1400222ee
   1400222c1:	mov    QWORD PTR [rsp+0x8],rbx
   1400222c6:	push   rdi
   1400222c7:	sub    rsp,0x20
   1400222cb:	mov    rdi,rdx
   1400222ce:	mov    rbx,rcx
   1400222d1:	mov    rax,QWORD PTR [rbx]
   1400222d4:	test   rax,rax
   1400222d7:	je     0x1400222db
   1400222d9:	call   rax
   1400222db:	add    rbx,0x8
   1400222df:	cmp    rbx,rdi
   1400222e2:	jb     0x1400222d1
   1400222e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400222e9:	add    rsp,0x20
   1400222ed:	pop    rdi
   1400222ee:	ret    
   1400222ef:	int3   
   1400222f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400222f5:	push   rdi
   1400222f6:	sub    rsp,0x20
   1400222fa:	xor    eax,eax
   1400222fc:	mov    rdi,rdx
   1400222ff:	mov    rbx,rcx
   140022302:	cmp    rcx,rdx
   140022305:	jae    0x14002231e
   140022307:	test   eax,eax
   140022309:	jne    0x14002231e
   14002230b:	mov    rcx,QWORD PTR [rbx]
   14002230e:	test   rcx,rcx
   140022311:	je     0x140022315
   140022313:	call   rcx
   140022315:	add    rbx,0x8
   140022319:	cmp    rbx,rdi
   14002231c:	jb     0x140022307
   14002231e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022323:	add    rsp,0x20
   140022327:	pop    rdi
   140022328:	ret    
   140022329:	int3   
   14002232a:	int3   
   14002232b:	int3   
   14002232c:	mov    ecx,0x8
   140022331:	jmp    0x140023638
   140022336:	int3   
   140022337:	int3   
   140022338:	mov    ecx,0x8
   14002233d:	jmp    0x140023820
   140022342:	int3   
   140022343:	int3   
   140022344:	mov    QWORD PTR [rsp+0x8],rbx
   140022349:	mov    QWORD PTR [rsp+0x10],rsi
   14002234e:	mov    DWORD PTR [rsp+0x18],r8d
   140022353:	push   rdi
   140022354:	push   r12
   140022356:	push   r13
   140022358:	push   r14
   14002235a:	push   r15
   14002235c:	sub    rsp,0x40
   140022360:	mov    r14d,r8d
   140022363:	mov    ebx,edx
   140022365:	mov    r13d,ecx
   140022368:	mov    ecx,0x8
   14002236d:	call   0x140023638
   140022372:	nop
   140022373:	cmp    DWORD PTR [rip+0x2d706],0x1        # 0x14004fa80
   14002237a:	je     0x140022487
   140022380:	mov    DWORD PTR [rip+0x2d736],0x1        # 0x14004fac0
   14002238a:	mov    BYTE PTR [rip+0x2d72b],r14b        # 0x14004fabc
   140022391:	test   ebx,ebx
   140022393:	jne    0x140022473
   140022399:	mov    rcx,QWORD PTR [rip+0x30150]        # 0x1400524f0
   1400223a0:	call   QWORD PTR [rip+0x16e1a]        # 0x1400391c0
   1400223a6:	mov    rsi,rax
   1400223a9:	mov    QWORD PTR [rsp+0x30],rax
   1400223ae:	test   rax,rax
   1400223b1:	je     0x140022460
   1400223b7:	mov    rcx,QWORD PTR [rip+0x3012a]        # 0x1400524e8
   1400223be:	call   QWORD PTR [rip+0x16dfc]        # 0x1400391c0
   1400223c4:	mov    rdi,rax
   1400223c7:	mov    QWORD PTR [rsp+0x20],rax
   1400223cc:	mov    r12,rsi
   1400223cf:	mov    QWORD PTR [rsp+0x28],rsi
   1400223d4:	mov    r15,rax
   1400223d7:	mov    QWORD PTR [rsp+0x38],rax
   1400223dc:	sub    rdi,0x8
   1400223e0:	mov    QWORD PTR [rsp+0x20],rdi
   1400223e5:	cmp    rdi,rsi
   1400223e8:	jb     0x140022460
   1400223ea:	xor    ecx,ecx
   1400223ec:	call   QWORD PTR [rip+0x16dc6]        # 0x1400391b8
   1400223f2:	cmp    QWORD PTR [rdi],rax
   1400223f5:	jne    0x1400223f9
   1400223f7:	jmp    0x1400223dc
   1400223f9:	cmp    rdi,rsi
   1400223fc:	jb     0x140022460
   1400223fe:	mov    rcx,QWORD PTR [rdi]
   140022401:	call   QWORD PTR [rip+0x16db9]        # 0x1400391c0
   140022407:	mov    rbx,rax
   14002240a:	xor    ecx,ecx
   14002240c:	call   QWORD PTR [rip+0x16da6]        # 0x1400391b8
   140022412:	mov    QWORD PTR [rdi],rax
   140022415:	call   rbx
   140022417:	mov    rcx,QWORD PTR [rip+0x300d2]        # 0x1400524f0
   14002241e:	call   QWORD PTR [rip+0x16d9c]        # 0x1400391c0
   140022424:	mov    rbx,rax
   140022427:	mov    rcx,QWORD PTR [rip+0x300ba]        # 0x1400524e8
   14002242e:	call   QWORD PTR [rip+0x16d8c]        # 0x1400391c0
   140022434:	cmp    r12,rbx
   140022437:	jne    0x14002243e
   140022439:	cmp    r15,rax
   14002243c:	je     0x1400223f7
   14002243e:	mov    r12,rbx
   140022441:	mov    QWORD PTR [rsp+0x28],rbx
   140022446:	mov    rsi,rbx
   140022449:	mov    QWORD PTR [rsp+0x30],rbx
   14002244e:	mov    r15,rax
   140022451:	mov    QWORD PTR [rsp+0x38],rax
   140022456:	mov    rdi,rax
   140022459:	mov    QWORD PTR [rsp+0x20],rax
   14002245e:	jmp    0x1400223f7
   140022460:	lea    rdx,[rip+0x17329]        # 0x140039790
   140022467:	lea    rcx,[rip+0x17302]        # 0x140039770
   14002246e:	call   0x1400222bc
   140022473:	lea    rdx,[rip+0x17326]        # 0x1400397a0
   14002247a:	lea    rcx,[rip+0x17317]        # 0x140039798
   140022481:	call   0x1400222bc
   140022486:	nop
   140022487:	test   r14d,r14d
   14002248a:	je     0x14002249b
   14002248c:	mov    ecx,0x8
   140022491:	call   0x140023820
   140022496:	test   r14d,r14d
   140022499:	jne    0x1400224c1
   14002249b:	mov    DWORD PTR [rip+0x2d5db],0x1        # 0x14004fa80
   1400224a5:	mov    ecx,0x8
   1400224aa:	call   0x140023820
   1400224af:	mov    ecx,r13d
   1400224b2:	call   0x1400220dc
   1400224b7:	mov    ecx,r13d
   1400224ba:	call   QWORD PTR [rip+0x16d20]        # 0x1400391e0
   1400224c0:	int3   
   1400224c1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400224c6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400224cb:	add    rsp,0x40
   1400224cf:	pop    r15
   1400224d1:	pop    r14
   1400224d3:	pop    r13
   1400224d5:	pop    r12
   1400224d7:	pop    rdi
   1400224d8:	ret    
   1400224d9:	int3   
   1400224da:	int3   
   1400224db:	int3   
   1400224dc:	xor    r8d,r8d
   1400224df:	xor    edx,edx
   1400224e1:	jmp    0x140022344
   1400224e6:	int3   
   1400224e7:	int3   
   1400224e8:	sub    rsp,0x28
   1400224ec:	mov    ecx,0x3
   1400224f1:	call   0x140022f5c
   1400224f6:	cmp    eax,0x1
   1400224f9:	je     0x140022512
   1400224fb:	mov    ecx,0x3
   140022500:	call   0x140022f5c
   140022505:	test   eax,eax
   140022507:	jne    0x140022526
   140022509:	cmp    DWORD PTR [rip+0x2d5d0],0x1        # 0x14004fae0
   140022510:	jne    0x140022526
   140022512:	mov    ecx,0xfc
   140022517:	call   0x14002255c
   14002251c:	mov    ecx,0xff
   140022521:	call   0x14002255c
   140022526:	add    rsp,0x28
   14002252a:	ret    
   14002252b:	int3   
   14002252c:	lea    r9,[rip+0x173cd]        # 0x140039900
   140022533:	xor    edx,edx
   140022535:	mov    r8,r9
   140022538:	cmp    ecx,DWORD PTR [r8]
   14002253b:	je     0x14002254f
   14002253d:	inc    edx
   14002253f:	add    r8,0x10
   140022543:	movsxd rax,edx
   140022546:	cmp    rax,0x17
   14002254a:	jb     0x140022538
   14002254c:	xor    eax,eax
   14002254e:	ret    
   14002254f:	movsxd rax,edx
   140022552:	add    rax,rax
   140022555:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14002255a:	ret    
   14002255b:	int3   
   14002255c:	mov    QWORD PTR [rsp+0x10],rbx
   140022561:	mov    QWORD PTR [rsp+0x18],rbp
   140022566:	mov    QWORD PTR [rsp+0x20],rsi
   14002256b:	push   rdi
   14002256c:	push   r14
   14002256e:	push   r15
   140022570:	sub    rsp,0x250
   140022577:	mov    rax,QWORD PTR [rip+0x2aeca]        # 0x14004d448
   14002257e:	xor    rax,rsp
   140022581:	mov    QWORD PTR [rsp+0x240],rax
   140022589:	mov    edi,ecx
   14002258b:	call   0x14002252c
   140022590:	xor    esi,esi
   140022592:	mov    rbx,rax
   140022595:	test   rax,rax
   140022598:	je     0x140022737
   14002259e:	lea    ecx,[rsi+0x3]
   1400225a1:	call   0x140022f5c
   1400225a6:	cmp    eax,0x1
   1400225a9:	je     0x1400226cc
   1400225af:	lea    ecx,[rsi+0x3]
   1400225b2:	call   0x140022f5c
   1400225b7:	test   eax,eax
   1400225b9:	jne    0x1400225c8
   1400225bb:	cmp    DWORD PTR [rip+0x2d51e],0x1        # 0x14004fae0
   1400225c2:	je     0x1400226cc
   1400225c8:	cmp    edi,0xfc
   1400225ce:	je     0x140022737
   1400225d4:	lea    rbp,[rip+0x2d515]        # 0x14004faf0
   1400225db:	mov    r15d,0x314
   1400225e1:	lea    r8,[rip+0x17db8]        # 0x14003a3a0
   1400225e8:	mov    rcx,rbp
   1400225eb:	mov    edx,r15d
   1400225ee:	call   0x140027a10
   1400225f3:	xor    ecx,ecx
   1400225f5:	test   eax,eax
   1400225f7:	jne    0x1400227b8
   1400225fd:	lea    r14,[rip+0x2d51e]        # 0x14004fb22
   140022604:	mov    r8d,0x104
   14002260a:	mov    WORD PTR [rip+0x2d719],si        # 0x14004fd2a
   140022611:	mov    rdx,r14
   140022614:	call   QWORD PTR [rip+0x16bf6]        # 0x140039210
   14002261a:	lea    edi,[r15-0x19]
   14002261e:	test   eax,eax
   140022620:	jne    0x14002263b
   140022622:	lea    r8,[rip+0x17daf]        # 0x14003a3d8
   140022629:	mov    edx,edi
   14002262b:	mov    rcx,r14
   14002262e:	call   0x140027a10
   140022633:	test   eax,eax
   140022635:	jne    0x140022764
   14002263b:	mov    rcx,r14
   14002263e:	call   0x140027a7c
   140022643:	inc    rax
   140022646:	cmp    rax,0x3c
   14002264a:	jbe    0x140022685
   14002264c:	mov    rcx,r14
   14002264f:	call   0x140027a7c
   140022654:	lea    rcx,[rbp-0x44]
   140022658:	lea    r8,[rip+0x17da9]        # 0x14003a408
   14002265f:	lea    rcx,[rcx+rax*2]
   140022663:	mov    r9d,0x3
   140022669:	mov    rax,rcx
   14002266c:	sub    rax,r14
   14002266f:	sar    rax,1
   140022672:	sub    rdi,rax
   140022675:	mov    rdx,rdi
   140022678:	call   0x140027a98
   14002267d:	test   eax,eax
   14002267f:	jne    0x140022779
   140022685:	lea    r8,[rip+0x17d84]        # 0x14003a410
   14002268c:	mov    rdx,r15
   14002268f:	mov    rcx,rbp
   140022692:	call   0x140027988
   140022697:	test   eax,eax
   140022699:	jne    0x1400227a3
   14002269f:	mov    r8,rbx
   1400226a2:	mov    rdx,r15
   1400226a5:	mov    rcx,rbp
   1400226a8:	call   0x140027988
   1400226ad:	test   eax,eax
   1400226af:	jne    0x14002278e
   1400226b5:	lea    rdx,[rip+0x17d64]        # 0x14003a420
   1400226bc:	mov    r8d,0x12010
   1400226c2:	mov    rcx,rbp
   1400226c5:	call   0x140027b64
   1400226ca:	jmp    0x140022737
   1400226cc:	mov    ecx,0xfffffff4
   1400226d1:	call   QWORD PTR [rip+0x16b29]        # 0x140039200
   1400226d7:	mov    rdi,rax
   1400226da:	lea    rcx,[rax-0x1]
   1400226de:	cmp    rcx,0xfffffffffffffffd
   1400226e2:	ja     0x140022737
   1400226e4:	mov    r8d,esi
   1400226e7:	lea    rdx,[rsp+0x40]
   1400226ec:	mov    cl,BYTE PTR [rbx]
   1400226ee:	mov    BYTE PTR [rdx],cl
   1400226f0:	cmp    WORD PTR [rbx],si
   1400226f3:	je     0x14002270a
   1400226f5:	inc    r8d
   1400226f8:	inc    rdx
   1400226fb:	add    rbx,0x2
   1400226ff:	movsxd rax,r8d
   140022702:	cmp    rax,0x1f4
   140022708:	jb     0x1400226ec
   14002270a:	lea    rcx,[rsp+0x40]
   14002270f:	mov    BYTE PTR [rsp+0x233],sil
   140022717:	call   0x1400278e0
   14002271c:	lea    r9,[rsp+0x30]
   140022721:	lea    rdx,[rsp+0x40]
   140022726:	mov    rcx,rdi
   140022729:	mov    r8,rax
   14002272c:	mov    QWORD PTR [rsp+0x20],rsi
   140022731:	call   QWORD PTR [rip+0x16ad1]        # 0x140039208
   140022737:	mov    rcx,QWORD PTR [rsp+0x240]
   14002273f:	xor    rcx,rsp
   140022742:	call   0x140020e50
   140022747:	lea    r11,[rsp+0x250]
   14002274f:	mov    rbx,QWORD PTR [r11+0x28]
   140022753:	mov    rbp,QWORD PTR [r11+0x30]
   140022757:	mov    rsi,QWORD PTR [r11+0x38]
   14002275b:	mov    rsp,r11
   14002275e:	pop    r15
   140022760:	pop    r14
   140022762:	pop    rdi
   140022763:	ret    
   140022764:	xor    r9d,r9d
   140022767:	xor    r8d,r8d
   14002276a:	xor    edx,edx
   14002276c:	xor    ecx,ecx
   14002276e:	mov    QWORD PTR [rsp+0x20],rsi
   140022773:	call   0x140024574
   140022778:	int3   
   140022779:	xor    r9d,r9d
   14002277c:	xor    r8d,r8d
   14002277f:	xor    edx,edx
   140022781:	xor    ecx,ecx
   140022783:	mov    QWORD PTR [rsp+0x20],rsi
   140022788:	call   0x140024574
   14002278d:	int3   
   14002278e:	xor    r9d,r9d
   140022791:	xor    r8d,r8d
   140022794:	xor    edx,edx
   140022796:	xor    ecx,ecx
   140022798:	mov    QWORD PTR [rsp+0x20],rsi
   14002279d:	call   0x140024574
   1400227a2:	int3   
   1400227a3:	xor    r9d,r9d
   1400227a6:	xor    r8d,r8d
   1400227a9:	xor    edx,edx
   1400227ab:	xor    ecx,ecx
   1400227ad:	mov    QWORD PTR [rsp+0x20],rsi
   1400227b2:	call   0x140024574
   1400227b7:	int3   
   1400227b8:	xor    r9d,r9d
   1400227bb:	xor    r8d,r8d
   1400227be:	xor    edx,edx
   1400227c0:	mov    QWORD PTR [rsp+0x20],rsi
   1400227c5:	call   0x140024574
   1400227ca:	int3   
   1400227cb:	int3   
   1400227cc:	sub    rsp,0x28
   1400227d0:	call   QWORD PTR [rip+0x16a42]        # 0x140039218
   1400227d6:	xor    ecx,ecx
   1400227d8:	test   rax,rax
   1400227db:	mov    QWORD PTR [rip+0x2d936],rax        # 0x140050118
   1400227e2:	setne  cl
   1400227e5:	mov    eax,ecx
   1400227e7:	add    rsp,0x28
   1400227eb:	ret    
   1400227ec:	sub    rsp,0x28
   1400227f0:	lea    rdx,[rip+0x49]        # 0x140022840
   1400227f7:	lea    rcx,[rip+0x2d922]        # 0x140050120
   1400227fe:	xor    r9d,r9d
   140022801:	xor    r8d,r8d
   140022804:	call   QWORD PTR [rip+0x16a2e]        # 0x140039238
   14002280a:	neg    eax
   14002280c:	sbb    eax,eax
   14002280e:	neg    eax
   140022810:	dec    eax
   140022812:	add    rsp,0x28
   140022816:	ret    
   140022817:	int3   
   140022818:	sub    rsp,0x28
   14002281c:	lea    rcx,[rip+0x2fabd]        # 0x1400522e0
   140022823:	xor    edx,edx
   140022825:	mov    r8d,0x200
   14002282b:	call   0x1400260e0
   140022830:	mov    DWORD PTR [rip+0x2fa92],0x3        # 0x1400522cc
   14002283a:	add    rsp,0x28
   14002283e:	ret    
   14002283f:	int3   
   140022840:	mov    rax,rsp
   140022843:	mov    QWORD PTR [rax+0x8],rbx
   140022847:	mov    QWORD PTR [rax+0x10],rsi
   14002284b:	mov    QWORD PTR [rax+0x18],rdi
   14002284f:	mov    QWORD PTR [rax+0x20],r12
   140022853:	push   r13
   140022855:	push   r14
   140022857:	push   r15
   140022859:	sub    rsp,0xc0
   140022860:	mov    QWORD PTR [rsp+0x38],rsp
   140022865:	mov    ecx,0xb
   14002286a:	call   0x140023638
   14002286f:	nop
   140022870:	xor    r12d,r12d
   140022873:	cmp    QWORD PTR [rip+0x2fa66],r12        # 0x1400522e0
   14002287a:	je     0x140022897
   14002287c:	lea    rdx,[rip+0xa]        # 0x14002288d
   140022883:	mov    rcx,rsp
   140022886:	call   0x140027e70
   14002288b:	nop
   14002288c:	nop
   14002288d:	mov    eax,0x1
   140022892:	jmp    0x140022b72
   140022897:	mov    edi,0x58
   14002289c:	mov    edx,edi
   14002289e:	lea    r13d,[rdi-0x38]
   1400228a2:	mov    ecx,r13d
   1400228a5:	call   0x140023838
   1400228aa:	mov    rcx,rax
   1400228ad:	mov    QWORD PTR [rsp+0x28],rax
   1400228b2:	test   rax,rax
   1400228b5:	jne    0x1400228d1
   1400228b7:	lea    rdx,[rip+0xc]        # 0x1400228ca
   1400228be:	mov    rcx,QWORD PTR [rsp+0x38]
   1400228c3:	call   0x140027e70
   1400228c8:	nop
   1400228c9:	nop
   1400228ca:	xor    eax,eax
   1400228cc:	jmp    0x140022b72
   1400228d1:	mov    QWORD PTR [rip+0x2fa08],rax        # 0x1400522e0
   1400228d8:	mov    DWORD PTR [rip+0x2f9ed],r13d        # 0x1400522cc
   1400228df:	add    rax,0xb00
   1400228e5:	cmp    rcx,rax
   1400228e8:	jae    0x140022923
   1400228ea:	mov    WORD PTR [rcx+0x8],0xa00
   1400228f0:	or     QWORD PTR [rcx],0xffffffffffffffff
   1400228f4:	mov    DWORD PTR [rcx+0xc],r12d
   1400228f8:	and    BYTE PTR [rcx+0x38],0x80
   1400228fc:	mov    al,BYTE PTR [rcx+0x38]
   1400228ff:	and    al,0x7f
   140022901:	mov    BYTE PTR [rcx+0x38],al
   140022904:	mov    WORD PTR [rcx+0x39],0xa0a
   14002290a:	mov    DWORD PTR [rcx+0x50],r12d
   14002290e:	mov    BYTE PTR [rcx+0x4c],r12b
   140022912:	add    rcx,rdi
   140022915:	mov    QWORD PTR [rsp+0x28],rcx
   14002291a:	mov    rax,QWORD PTR [rip+0x2f9bf]        # 0x1400522e0
   140022921:	jmp    0x1400228df
   140022923:	lea    rcx,[rsp+0x50]
   140022928:	call   QWORD PTR [rip+0x16912]        # 0x140039240
   14002292e:	cmp    WORD PTR [rsp+0x92],r12w
   140022937:	je     0x140022a7d
   14002293d:	mov    rax,QWORD PTR [rsp+0x98]
   140022945:	test   rax,rax
   140022948:	je     0x140022a7d
   14002294e:	lea    r14,[rax+0x4]
   140022952:	mov    QWORD PTR [rsp+0x48],r14
   140022957:	movsxd rsi,DWORD PTR [rax]
   14002295a:	add    rsi,r14
   14002295d:	mov    QWORD PTR [rsp+0x40],rsi
   140022962:	mov    r15d,0x800
   140022968:	cmp    DWORD PTR [rax],r15d
   14002296b:	cmovl  r15d,DWORD PTR [rax]
   14002296f:	mov    ebx,0x1
   140022974:	mov    DWORD PTR [rsp+0x30],ebx
   140022978:	cmp    DWORD PTR [rip+0x2f94d],r15d        # 0x1400522cc
   14002297f:	jge    0x1400229f4
   140022981:	mov    rdx,rdi
   140022984:	mov    rcx,r13
   140022987:	call   0x140023838
   14002298c:	mov    rcx,rax
   14002298f:	mov    QWORD PTR [rsp+0x28],rax
   140022994:	test   rax,rax
   140022997:	jne    0x1400229a2
   140022999:	mov    r15d,DWORD PTR [rip+0x2f92c]        # 0x1400522cc
   1400229a0:	jmp    0x1400229f4
   1400229a2:	movsxd rdx,ebx
   1400229a5:	lea    r8,[rip+0x2f934]        # 0x1400522e0
   1400229ac:	mov    QWORD PTR [r8+rdx*8],rax
   1400229b0:	add    DWORD PTR [rip+0x2f915],r13d        # 0x1400522cc
   1400229b7:	mov    rax,QWORD PTR [r8+rdx*8]
   1400229bb:	add    rax,0xb00
   1400229c1:	cmp    rcx,rax
   1400229c4:	jae    0x1400229f0
   1400229c6:	mov    WORD PTR [rcx+0x8],0xa00
   1400229cc:	or     QWORD PTR [rcx],0xffffffffffffffff
   1400229d0:	mov    DWORD PTR [rcx+0xc],r12d
   1400229d4:	and    BYTE PTR [rcx+0x38],0x80
   1400229d8:	mov    WORD PTR [rcx+0x39],0xa0a
   1400229de:	mov    DWORD PTR [rcx+0x50],r12d
   1400229e2:	mov    BYTE PTR [rcx+0x4c],r12b
   1400229e6:	add    rcx,rdi
   1400229e9:	mov    QWORD PTR [rsp+0x28],rcx
   1400229ee:	jmp    0x1400229b7
   1400229f0:	inc    ebx
   1400229f2:	jmp    0x140022974
   1400229f4:	mov    edi,r12d
   1400229f7:	mov    DWORD PTR [rsp+0x20],r12d
   1400229fc:	lea    r13,[rip+0x2f8dd]        # 0x1400522e0
   140022a03:	cmp    edi,r15d
   140022a06:	jge    0x140022a7d
   140022a08:	mov    rcx,QWORD PTR [rsi]
   140022a0b:	lea    rax,[rcx+0x2]
   140022a0f:	cmp    rax,0x1
   140022a13:	jbe    0x140022a64
   140022a15:	test   BYTE PTR [r14],0x1
   140022a19:	je     0x140022a64
   140022a1b:	test   BYTE PTR [r14],0x8
   140022a1f:	jne    0x140022a2b
   140022a21:	call   QWORD PTR [rip+0x167f9]        # 0x140039220
   140022a27:	test   eax,eax
   140022a29:	je     0x140022a64
   140022a2b:	movsxd rbx,edi
   140022a2e:	mov    rax,rbx
   140022a31:	sar    rax,0x5
   140022a35:	and    ebx,0x1f
   140022a38:	imul   rbx,rbx,0x58
   140022a3c:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   140022a41:	mov    QWORD PTR [rsp+0x28],rbx
   140022a46:	mov    rax,QWORD PTR [rsi]
   140022a49:	mov    QWORD PTR [rbx],rax
   140022a4c:	mov    al,BYTE PTR [r14]
   140022a4f:	mov    BYTE PTR [rbx+0x8],al
   140022a52:	lea    rcx,[rbx+0x10]
   140022a56:	mov    edx,0xfa0
   140022a5b:	call   QWORD PTR [rip+0x167c7]        # 0x140039228
   140022a61:	inc    DWORD PTR [rbx+0xc]
   140022a64:	inc    edi
   140022a66:	mov    DWORD PTR [rsp+0x20],edi
   140022a6a:	inc    r14
   140022a6d:	mov    QWORD PTR [rsp+0x48],r14
   140022a72:	add    rsi,0x8
   140022a76:	mov    QWORD PTR [rsp+0x40],rsi
   140022a7b:	jmp    0x140022a03
   140022a7d:	mov    edi,r12d
   140022a80:	mov    DWORD PTR [rsp+0x20],r12d
   140022a85:	mov    r15,0xfffffffffffffffe
   140022a8c:	cmp    edi,0x3
   140022a8f:	jge    0x140022b63
   140022a95:	movsxd r14,edi
   140022a98:	mov    rbx,r14
   140022a9b:	imul   rbx,rbx,0x58
   140022a9f:	add    rbx,QWORD PTR [rip+0x2f83a]        # 0x1400522e0
   140022aa6:	mov    QWORD PTR [rsp+0x28],rbx
   140022aab:	mov    rax,QWORD PTR [rbx]
   140022aae:	add    rax,0x2
   140022ab2:	cmp    rax,0x1
   140022ab6:	jbe    0x140022ac8
   140022ab8:	movsx  eax,BYTE PTR [rbx+0x8]
   140022abc:	bts    eax,0x7
   140022ac0:	mov    BYTE PTR [rbx+0x8],al
   140022ac3:	jmp    0x140022b58
   140022ac8:	mov    BYTE PTR [rbx+0x8],0x81
   140022acc:	lea    eax,[rdi-0x1]
   140022acf:	neg    eax
   140022ad1:	sbb    ecx,ecx
   140022ad3:	add    ecx,0xfffffff5
   140022ad6:	mov    eax,0xfffffff6
   140022adb:	test   edi,edi
   140022add:	cmove  ecx,eax
   140022ae0:	call   QWORD PTR [rip+0x1671a]        # 0x140039200
   140022ae6:	mov    rsi,rax
   140022ae9:	lea    rcx,[rax+0x1]
   140022aed:	cmp    rcx,0x1
   140022af1:	jbe    0x140022b37
   140022af3:	mov    rcx,rax
   140022af6:	call   QWORD PTR [rip+0x16724]        # 0x140039220
   140022afc:	test   eax,eax
   140022afe:	je     0x140022b37
   140022b00:	mov    QWORD PTR [rbx],rsi
   140022b03:	movzx  eax,al
   140022b06:	cmp    eax,0x2
   140022b09:	jne    0x140022b14
   140022b0b:	movsx  eax,BYTE PTR [rbx+0x8]
   140022b0f:	or     eax,0x40
   140022b12:	jmp    0x140022b20
   140022b14:	cmp    eax,0x3
   140022b17:	jne    0x140022b23
   140022b19:	movsx  eax,BYTE PTR [rbx+0x8]
   140022b1d:	or     eax,0x8
   140022b20:	mov    BYTE PTR [rbx+0x8],al
   140022b23:	lea    rcx,[rbx+0x10]
   140022b27:	mov    edx,0xfa0
   140022b2c:	call   QWORD PTR [rip+0x166f6]        # 0x140039228
   140022b32:	inc    DWORD PTR [rbx+0xc]
   140022b35:	jmp    0x140022b58
   140022b37:	movsx  eax,BYTE PTR [rbx+0x8]
   140022b3b:	or     eax,0x40
   140022b3e:	mov    BYTE PTR [rbx+0x8],al
   140022b41:	mov    QWORD PTR [rbx],r15
   140022b44:	mov    rax,QWORD PTR [rip+0x2f9b5]        # 0x140052500
   140022b4b:	test   rax,rax
   140022b4e:	je     0x140022b58
   140022b50:	mov    rax,QWORD PTR [rax+r14*8]
   140022b54:	mov    DWORD PTR [rax+0x1c],r15d
   140022b58:	inc    edi
   140022b5a:	mov    DWORD PTR [rsp+0x20],edi
   140022b5e:	jmp    0x140022a8c
   140022b63:	mov    ecx,0xb
   140022b68:	call   0x140023820
   140022b6d:	mov    eax,0x1
   140022b72:	lea    r11,[rsp+0xc0]
   140022b7a:	mov    rbx,QWORD PTR [r11+0x20]
   140022b7e:	mov    rsi,QWORD PTR [r11+0x28]
   140022b82:	mov    rdi,QWORD PTR [r11+0x30]
   140022b86:	mov    r12,QWORD PTR [r11+0x38]
   140022b8a:	mov    rsp,r11
   140022b8d:	pop    r15
   140022b8f:	pop    r14
   140022b91:	pop    r13
   140022b93:	ret    
   140022b94:	mov    QWORD PTR [rsp+0x18],rbx
   140022b99:	push   rbp
   140022b9a:	push   rsi
   140022b9b:	push   rdi
   140022b9c:	sub    rsp,0x30
   140022ba0:	lea    rdi,[rip+0x2d589]        # 0x140050130
   140022ba7:	xor    ebp,ebp
   140022ba9:	mov    r8d,0x104
   140022baf:	mov    rdx,rdi
   140022bb2:	xor    ecx,ecx
   140022bb4:	mov    WORD PTR [rip+0x2d77d],bp        # 0x140050338
   140022bbb:	call   QWORD PTR [rip+0x1664f]        # 0x140039210
   140022bc1:	mov    rbx,QWORD PTR [rip+0x30958]        # 0x140053520
   140022bc8:	mov    QWORD PTR [rip+0x2cee1],rdi        # 0x14004fab0
   140022bcf:	test   rbx,rbx
   140022bd2:	je     0x140022bd9
   140022bd4:	cmp    WORD PTR [rbx],bp
   140022bd7:	jne    0x140022bdc
   140022bd9:	mov    rbx,rdi
   140022bdc:	lea    rax,[rsp+0x58]
   140022be1:	lea    r9,[rsp+0x50]
   140022be6:	xor    r8d,r8d
   140022be9:	xor    edx,edx
   140022beb:	mov    rcx,rbx
   140022bee:	mov    QWORD PTR [rsp+0x20],rax
   140022bf3:	call   0x140022c84
   140022bf8:	movsxd rsi,DWORD PTR [rsp+0x50]
   140022bfd:	movabs rax,0x1fffffffffffffff
   140022c07:	cmp    rsi,rax
   140022c0a:	jae    0x140022c71
   140022c0c:	movsxd rax,DWORD PTR [rsp+0x58]
   140022c11:	movabs rcx,0x7fffffffffffffff
   140022c1b:	cmp    rax,rcx
   140022c1e:	jae    0x140022c71
   140022c20:	lea    rcx,[rax+rsi*4]
   140022c24:	add    rax,rax
   140022c27:	add    rcx,rcx
   140022c2a:	cmp    rcx,rax
   140022c2d:	jb     0x140022c71
   140022c2f:	call   0x1400238b8
   140022c34:	mov    rdi,rax
   140022c37:	test   rax,rax
   140022c3a:	je     0x140022c71
   140022c3c:	lea    r8,[rax+rsi*8]
   140022c40:	lea    rax,[rsp+0x58]
   140022c45:	lea    r9,[rsp+0x50]
   140022c4a:	mov    rdx,rdi
   140022c4d:	mov    rcx,rbx
   140022c50:	mov    QWORD PTR [rsp+0x20],rax
   140022c55:	call   0x140022c84
   140022c5a:	mov    eax,DWORD PTR [rsp+0x50]
   140022c5e:	mov    QWORD PTR [rip+0x2ce2b],rdi        # 0x14004fa90
   140022c65:	dec    eax
   140022c67:	mov    DWORD PTR [rip+0x2ce17],eax        # 0x14004fa84
   140022c6d:	xor    eax,eax
   140022c6f:	jmp    0x140022c74
   140022c71:	or     eax,0xffffffff
   140022c74:	mov    rbx,QWORD PTR [rsp+0x60]
   140022c79:	add    rsp,0x30
   140022c7d:	pop    rdi
   140022c7e:	pop    rsi
   140022c7f:	pop    rbp
   140022c80:	ret    
   140022c81:	int3   
   140022c82:	int3   
   140022c83:	int3   
   140022c84:	mov    rax,rsp
   140022c87:	mov    QWORD PTR [rax+0x8],rbx
   140022c8b:	mov    QWORD PTR [rax+0x10],rsi
   140022c8f:	mov    QWORD PTR [rax+0x18],rdi
   140022c93:	mov    QWORD PTR [rax+0x20],r12
   140022c97:	push   r15
   140022c99:	mov    r11,QWORD PTR [rsp+0x30]
   140022c9e:	xor    esi,esi
   140022ca0:	mov    rbx,r9
   140022ca3:	mov    DWORD PTR [r11],esi
   140022ca6:	mov    r10,rdx
   140022ca9:	mov    DWORD PTR [r9],0x1
   140022cb0:	test   rdx,rdx
   140022cb3:	je     0x140022cbc
   140022cb5:	mov    QWORD PTR [rdx],r8
   140022cb8:	add    r10,0x8
   140022cbc:	mov    edx,esi
   140022cbe:	mov    r12d,0x22
   140022cc4:	cmp    WORD PTR [rcx],r12w
   140022cc8:	jne    0x140022cdd
   140022cca:	test   edx,edx
   140022ccc:	mov    eax,esi
   140022cce:	sete   al
   140022cd1:	add    rcx,0x2
   140022cd5:	mov    edx,eax
   140022cd7:	movzx  eax,r12w
   140022cdb:	jmp    0x140022cfc
   140022cdd:	inc    DWORD PTR [r11]
   140022ce0:	test   r8,r8
   140022ce3:	je     0x140022cf0
   140022ce5:	movzx  eax,WORD PTR [rcx]
   140022ce8:	mov    WORD PTR [r8],ax
   140022cec:	add    r8,0x2
   140022cf0:	movzx  eax,WORD PTR [rcx]
   140022cf3:	add    rcx,0x2
   140022cf7:	test   ax,ax
   140022cfa:	je     0x140022d18
   140022cfc:	test   edx,edx
   140022cfe:	jne    0x140022cc4
   140022d00:	cmp    ax,0x20
   140022d04:	je     0x140022d0c
   140022d06:	cmp    ax,0x9
   140022d0a:	jne    0x140022cc4
   140022d0c:	test   r8,r8
   140022d0f:	je     0x140022d1c
   140022d11:	mov    WORD PTR [r8-0x2],si
   140022d16:	jmp    0x140022d1c
   140022d18:	sub    rcx,0x2
   140022d1c:	mov    edi,esi
   140022d1e:	mov    r15d,0x5c
   140022d24:	cmp    WORD PTR [rcx],si
   140022d27:	je     0x140022dfb
   140022d2d:	cmp    WORD PTR [rcx],0x20
   140022d31:	je     0x140022d39
   140022d33:	cmp    WORD PTR [rcx],0x9
   140022d37:	jne    0x140022d3f
   140022d39:	add    rcx,0x2
   140022d3d:	jmp    0x140022d2d
   140022d3f:	cmp    WORD PTR [rcx],si
   140022d42:	je     0x140022dfb
   140022d48:	test   r10,r10
   140022d4b:	je     0x140022d54
   140022d4d:	mov    QWORD PTR [r10],r8
   140022d50:	add    r10,0x8
   140022d54:	inc    DWORD PTR [rbx]
   140022d56:	mov    r9d,0x1
   140022d5c:	mov    edx,esi
   140022d5e:	jmp    0x140022d66
   140022d60:	add    rcx,0x2
   140022d64:	inc    edx
   140022d66:	cmp    WORD PTR [rcx],r15w
   140022d6a:	je     0x140022d60
   140022d6c:	cmp    WORD PTR [rcx],r12w
   140022d70:	jne    0x140022dac
   140022d72:	test   r9b,dl
   140022d75:	jne    0x140022d96
   140022d77:	test   edi,edi
   140022d79:	je     0x140022d8a
   140022d7b:	lea    rax,[rcx+0x2]
   140022d7f:	cmp    WORD PTR [rax],r12w
   140022d83:	jne    0x140022d8a
   140022d85:	mov    rcx,rax
   140022d88:	jmp    0x140022d96
   140022d8a:	test   edi,edi
   140022d8c:	mov    eax,esi
   140022d8e:	mov    r9d,esi
   140022d91:	sete   al
   140022d94:	mov    edi,eax
   140022d96:	shr    edx,1
   140022d98:	jmp    0x140022dac
   140022d9a:	dec    edx
   140022d9c:	test   r8,r8
   140022d9f:	je     0x140022da9
   140022da1:	mov    WORD PTR [r8],r15w
   140022da5:	add    r8,0x2
   140022da9:	inc    DWORD PTR [r11]
   140022dac:	test   edx,edx
   140022dae:	jne    0x140022d9a
   140022db0:	movzx  eax,WORD PTR [rcx]
   140022db3:	test   ax,ax
   140022db6:	je     0x140022de6
   140022db8:	test   edi,edi
   140022dba:	jne    0x140022dc8
   140022dbc:	cmp    ax,0x20
   140022dc0:	je     0x140022de6
   140022dc2:	cmp    ax,0x9
   140022dc6:	je     0x140022de6
   140022dc8:	test   r9d,r9d
   140022dcb:	je     0x140022ddd
   140022dcd:	test   r8,r8
   140022dd0:	je     0x140022dda
   140022dd2:	mov    WORD PTR [r8],ax
   140022dd6:	add    r8,0x2
   140022dda:	inc    DWORD PTR [r11]
   140022ddd:	add    rcx,0x2
   140022de1:	jmp    0x140022d56
   140022de6:	test   r8,r8
   140022de9:	je     0x140022df3
   140022deb:	mov    WORD PTR [r8],si
   140022def:	add    r8,0x2
   140022df3:	inc    DWORD PTR [r11]
   140022df6:	jmp    0x140022d24
   140022dfb:	test   r10,r10
   140022dfe:	je     0x140022e03
   140022e00:	mov    QWORD PTR [r10],rsi
   140022e03:	inc    DWORD PTR [rbx]
   140022e05:	mov    rsi,QWORD PTR [rsp+0x18]
   140022e0a:	mov    rdi,QWORD PTR [rsp+0x20]
   140022e0f:	mov    rbx,QWORD PTR [rsp+0x10]
   140022e14:	mov    r12,QWORD PTR [rsp+0x28]
   140022e19:	pop    r15
   140022e1b:	ret    
   140022e1c:	mov    rax,rsp
   140022e1f:	mov    QWORD PTR [rax+0x8],rbx
   140022e23:	mov    QWORD PTR [rax+0x10],rbp
   140022e27:	mov    QWORD PTR [rax+0x18],rsi
   140022e2b:	mov    QWORD PTR [rax+0x20],rdi
   140022e2f:	push   r14
   140022e31:	sub    rsp,0x30
   140022e35:	mov    rbx,QWORD PTR [rip+0x2cc2c]        # 0x14004fa68
   140022e3c:	xor    r14d,r14d
   140022e3f:	mov    edi,r14d
   140022e42:	test   rbx,rbx
   140022e45:	jne    0x140022e67
   140022e47:	or     eax,0xffffffff
   140022e4a:	jmp    0x140022f0c
   140022e4f:	cmp    ax,0x3d
   140022e53:	je     0x140022e57
   140022e55:	inc    edi
   140022e57:	mov    rcx,rbx
   140022e5a:	call   0x140027a7c
   140022e5f:	lea    rbx,[rbx+rax*2]
   140022e63:	add    rbx,0x2
   140022e67:	movzx  eax,WORD PTR [rbx]
   140022e6a:	test   ax,ax
   140022e6d:	jne    0x140022e4f
   140022e6f:	lea    eax,[rdi+0x1]
   140022e72:	mov    edx,0x8
   140022e77:	movsxd rcx,eax
   140022e7a:	call   0x140023838
   140022e7f:	mov    rdi,rax
   140022e82:	mov    QWORD PTR [rip+0x2cc17],rax        # 0x14004faa0
   140022e89:	test   rax,rax
   140022e8c:	je     0x140022e47
   140022e8e:	mov    rbx,QWORD PTR [rip+0x2cbd3]        # 0x14004fa68
   140022e95:	cmp    WORD PTR [rbx],r14w
   140022e99:	je     0x140022eee
   140022e9b:	mov    rcx,rbx
   140022e9e:	call   0x140027a7c
   140022ea3:	cmp    WORD PTR [rbx],0x3d
   140022ea7:	lea    esi,[rax+0x1]
   140022eaa:	je     0x140022eda
   140022eac:	movsxd rbp,esi
   140022eaf:	mov    edx,0x2
   140022eb4:	mov    rcx,rbp
   140022eb7:	call   0x140023838
   140022ebc:	mov    QWORD PTR [rdi],rax
   140022ebf:	test   rax,rax
   140022ec2:	je     0x140022f27
   140022ec4:	mov    r8,rbx
   140022ec7:	mov    rdx,rbp
   140022eca:	mov    rcx,rax
   140022ecd:	call   0x140027a10
   140022ed2:	test   eax,eax
   140022ed4:	jne    0x140022f3f
   140022ed6:	add    rdi,0x8
   140022eda:	movsxd rax,esi
   140022edd:	lea    rbx,[rbx+rax*2]
   140022ee1:	cmp    WORD PTR [rbx],r14w
   140022ee5:	jne    0x140022e9b
   140022ee7:	mov    rbx,QWORD PTR [rip+0x2cb7a]        # 0x14004fa68
   140022eee:	mov    rcx,rbx
   140022ef1:	call   0x140023328
   140022ef6:	mov    QWORD PTR [rip+0x2cb6b],r14        # 0x14004fa68
   140022efd:	mov    QWORD PTR [rdi],r14
   140022f00:	mov    DWORD PTR [rip+0x2f5f2],0x1        # 0x1400524fc
   140022f0a:	xor    eax,eax
   140022f0c:	mov    rbx,QWORD PTR [rsp+0x40]
   140022f11:	mov    rbp,QWORD PTR [rsp+0x48]
   140022f16:	mov    rsi,QWORD PTR [rsp+0x50]
   140022f1b:	mov    rdi,QWORD PTR [rsp+0x58]
   140022f20:	add    rsp,0x30
   140022f24:	pop    r14
   140022f26:	ret    
   140022f27:	mov    rcx,QWORD PTR [rip+0x2cb72]        # 0x14004faa0
   140022f2e:	call   0x140023328
   140022f33:	mov    QWORD PTR [rip+0x2cb66],r14        # 0x14004faa0
   140022f3a:	jmp    0x140022e47
   140022f3f:	xor    r9d,r9d
   140022f42:	xor    r8d,r8d
   140022f45:	xor    edx,edx
   140022f47:	xor    ecx,ecx
   140022f49:	mov    QWORD PTR [rsp+0x20],r14
   140022f4e:	call   0x140024574
   140022f53:	int3   
   140022f54:	mov    DWORD PTR [rip+0x2cb86],ecx        # 0x14004fae0
   140022f5a:	ret    
   140022f5b:	int3   
   140022f5c:	sub    rsp,0x28
   140022f60:	test   ecx,ecx
   140022f62:	js     0x140022f84
   140022f64:	cmp    ecx,0x2
   140022f67:	jle    0x140022f76
   140022f69:	cmp    ecx,0x3
   140022f6c:	jne    0x140022f84
   140022f6e:	mov    eax,DWORD PTR [rip+0x2d3c8]        # 0x14005033c
   140022f74:	jmp    0x140022f97
   140022f76:	mov    eax,DWORD PTR [rip+0x2d3c0]        # 0x14005033c
   140022f7c:	mov    DWORD PTR [rip+0x2d3ba],ecx        # 0x14005033c
   140022f82:	jmp    0x140022f97
   140022f84:	call   0x140025380
   140022f89:	mov    DWORD PTR [rax],0x16
   140022f8f:	call   0x140024554
   140022f94:	or     eax,0xffffffff
   140022f97:	add    rsp,0x28
   140022f9b:	ret    
   140022f9c:	mov    QWORD PTR [rsp+0x20],rbx
   140022fa1:	push   rbp
   140022fa2:	mov    rbp,rsp
   140022fa5:	sub    rsp,0x20
   140022fa9:	mov    rax,QWORD PTR [rip+0x2a498]        # 0x14004d448
   140022fb0:	and    QWORD PTR [rbp+0x18],0x0
   140022fb5:	movabs rbx,0x2b992ddfa232
   140022fbf:	cmp    rax,rbx
   140022fc2:	jne    0x14002303f
   140022fc4:	lea    rcx,[rbp+0x18]
   140022fc8:	call   QWORD PTR [rip+0x16282]        # 0x140039250
   140022fce:	mov    rax,QWORD PTR [rbp+0x18]
   140022fd2:	mov    QWORD PTR [rbp+0x10],rax
   140022fd6:	call   QWORD PTR [rip+0x161fc]        # 0x1400391d8
   140022fdc:	mov    eax,eax
   140022fde:	xor    QWORD PTR [rbp+0x10],rax
   140022fe2:	call   QWORD PTR [rip+0x16270]        # 0x140039258
   140022fe8:	shl    rax,0x18
   140022fec:	xor    QWORD PTR [rbp+0x10],rax
   140022ff0:	call   QWORD PTR [rip+0x16262]        # 0x140039258
   140022ff6:	lea    rcx,[rbp+0x20]
   140022ffa:	xor    QWORD PTR [rbp+0x10],rax
   140022ffe:	call   QWORD PTR [rip+0x16244]        # 0x140039248
   140023004:	mov    eax,DWORD PTR [rbp+0x20]
   140023007:	shl    rax,0x20
   14002300b:	lea    rcx,[rbp+0x10]
   14002300f:	xor    rax,QWORD PTR [rbp+0x20]
   140023013:	xor    rax,QWORD PTR [rbp+0x10]
   140023017:	xor    rax,rcx
   14002301a:	movabs rcx,0xffffffffffff
   140023024:	and    rax,rcx
   140023027:	movabs rcx,0x2b992ddfa233
   140023031:	cmp    rax,rbx
   140023034:	cmove  rax,rcx
   140023038:	mov    QWORD PTR [rip+0x2a409],rax        # 0x14004d448
   14002303f:	mov    rbx,QWORD PTR [rsp+0x48]
   140023044:	not    rax
   140023047:	mov    QWORD PTR [rip+0x2a402],rax        # 0x14004d450
   14002304e:	add    rsp,0x20
   140023052:	pop    rbp
   140023053:	ret    
   140023054:	mov    QWORD PTR [rsp+0x8],rbx
   140023059:	push   rdi
   14002305a:	sub    rsp,0x20
   14002305e:	lea    rbx,[rip+0x20b7b]        # 0x140043be0
   140023065:	lea    rdi,[rip+0x20b74]        # 0x140043be0
   14002306c:	jmp    0x14002307c
   14002306e:	mov    rax,QWORD PTR [rbx]
   140023071:	test   rax,rax
   140023074:	je     0x140023078
   140023076:	call   rax
   140023078:	add    rbx,0x8
   14002307c:	cmp    rbx,rdi
   14002307f:	jb     0x14002306e
   140023081:	mov    rbx,QWORD PTR [rsp+0x30]
   140023086:	add    rsp,0x20
   14002308a:	pop    rdi
   14002308b:	ret    
   14002308c:	mov    QWORD PTR [rsp+0x8],rbx
   140023091:	push   rdi
   140023092:	sub    rsp,0x20
   140023096:	lea    rbx,[rip+0x20b53]        # 0x140043bf0
   14002309d:	lea    rdi,[rip+0x20b4c]        # 0x140043bf0
   1400230a4:	jmp    0x1400230b4
   1400230a6:	mov    rax,QWORD PTR [rbx]
   1400230a9:	test   rax,rax
   1400230ac:	je     0x1400230b0
   1400230ae:	call   rax
   1400230b0:	add    rbx,0x8
   1400230b4:	cmp    rbx,rdi
   1400230b7:	jb     0x1400230a6
   1400230b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400230be:	add    rsp,0x20
   1400230c2:	pop    rdi
   1400230c3:	ret    
   1400230c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400230c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400230ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400230d3:	push   rdi
   1400230d4:	sub    rsp,0x20
   1400230d8:	call   QWORD PTR [rip+0x16182]        # 0x140039260
   1400230de:	xor    ebx,ebx
   1400230e0:	mov    rdi,rax
   1400230e3:	test   rax,rax
   1400230e6:	jne    0x1400230f7
   1400230e8:	jmp    0x140023131
   1400230ea:	add    rax,0x2
   1400230ee:	cmp    WORD PTR [rax],bx
   1400230f1:	jne    0x1400230ea
   1400230f3:	add    rax,0x2
   1400230f7:	cmp    WORD PTR [rax],bx
   1400230fa:	jne    0x1400230ea
   1400230fc:	sub    eax,edi
   1400230fe:	add    eax,0x2
   140023101:	movsxd rbp,eax
   140023104:	mov    rcx,rbp
   140023107:	call   0x1400238b8
   14002310c:	mov    rsi,rax
   14002310f:	test   rax,rax
   140023112:	je     0x140023125
   140023114:	mov    r8,rbp
   140023117:	mov    rdx,rdi
   14002311a:	mov    rcx,rax
   14002311d:	call   0x140020e80
   140023122:	mov    rbx,rsi
   140023125:	mov    rcx,rdi
   140023128:	call   QWORD PTR [rip+0x1613a]        # 0x140039268
   14002312e:	mov    rax,rbx
   140023131:	mov    rbx,QWORD PTR [rsp+0x30]
   140023136:	mov    rbp,QWORD PTR [rsp+0x38]
   14002313b:	mov    rsi,QWORD PTR [rsp+0x40]
   140023140:	add    rsp,0x20
   140023144:	pop    rdi
   140023145:	ret    
   140023146:	int3   
   140023147:	int3   
   140023148:	mov    rax,rsp
   14002314b:	mov    QWORD PTR [rax+0x8],rbx
   14002314f:	mov    QWORD PTR [rax+0x10],rbp
   140023153:	mov    QWORD PTR [rax+0x18],rsi
   140023157:	push   rdi
   140023158:	push   r12
   14002315a:	push   r13
   14002315c:	push   r14
   14002315e:	push   r15
   140023160:	sub    rsp,0x40
   140023164:	mov    r12,QWORD PTR [r9+0x8]
   140023168:	mov    r15,QWORD PTR [r9]
   14002316b:	mov    rbx,QWORD PTR [r9+0x38]
   14002316f:	sub    r15,r12
   140023172:	test   BYTE PTR [rcx+0x4],0x66
   140023176:	mov    r14,r9
   140023179:	mov    r13,rdx
   14002317c:	mov    rbp,rcx
   14002317f:	jne    0x140023263
   140023185:	mov    esi,DWORD PTR [r9+0x48]
   140023189:	mov    QWORD PTR [rax-0x38],rcx
   14002318d:	mov    QWORD PTR [rax-0x30],r8
   140023191:	cmp    esi,DWORD PTR [rbx]
   140023193:	jae    0x140023303
   140023199:	mov    edi,esi
   14002319b:	add    rdi,rdi
   14002319e:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   1400231a2:	cmp    r15,rax
   1400231a5:	jb     0x140023255
   1400231ab:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   1400231af:	cmp    r15,rax
   1400231b2:	jae    0x140023255
   1400231b8:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   1400231bd:	je     0x140023255
   1400231c3:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   1400231c8:	je     0x1400231e1
   1400231ca:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   1400231ce:	lea    rcx,[rsp+0x30]
   1400231d3:	mov    rdx,r13
   1400231d6:	add    rax,r12
   1400231d9:	call   rax
   1400231db:	test   eax,eax
   1400231dd:	js     0x14002325c
   1400231df:	jle    0x140023255
   1400231e1:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   1400231e8:	jne    0x140023212
   1400231ea:	cmp    QWORD PTR [rip+0x19f76],0x0        # 0x14003d168
   1400231f2:	je     0x140023212
   1400231f4:	lea    rcx,[rip+0x19f6d]        # 0x14003d168
   1400231fb:	call   0x1400275b0
   140023200:	test   eax,eax
   140023202:	je     0x140023212
   140023204:	mov    edx,0x1
   140023209:	mov    rcx,rbp
   14002320c:	call   QWORD PTR [rip+0x19f56]        # 0x14003d168
   140023212:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140023216:	mov    r8d,0x1
   14002321c:	mov    rdx,r13
   14002321f:	add    rcx,r12
   140023222:	call   0x140027ea0
   140023227:	mov    rax,QWORD PTR [r14+0x40]
   14002322b:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   14002322f:	mov    r9d,DWORD PTR [rbp+0x0]
   140023233:	mov    QWORD PTR [rsp+0x28],rax
   140023238:	mov    rax,QWORD PTR [r14+0x28]
   14002323c:	add    rdx,r12
   14002323f:	mov    r8,rbp
   140023242:	mov    rcx,r13
   140023245:	mov    QWORD PTR [rsp+0x20],rax
   14002324a:	call   QWORD PTR [rip+0x16020]        # 0x140039270
   140023250:	call   0x140027ed0
   140023255:	inc    esi
   140023257:	jmp    0x140023191
   14002325c:	xor    eax,eax
   14002325e:	jmp    0x140023308
   140023263:	mov    rsi,QWORD PTR [r9+0x20]
   140023267:	mov    edi,DWORD PTR [r9+0x48]
   14002326b:	sub    rsi,r12
   14002326e:	jmp    0x1400232f9
   140023273:	mov    ecx,edi
   140023275:	add    rcx,rcx
   140023278:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14002327c:	cmp    r15,rax
   14002327f:	jb     0x1400232f7
   140023281:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   140023285:	cmp    r15,rax
   140023288:	jae    0x1400232f7
   14002328a:	test   BYTE PTR [rbp+0x4],0x20
   14002328e:	je     0x1400232d1
   140023290:	xor    r9d,r9d
   140023293:	test   edx,edx
   140023295:	je     0x1400232cc
   140023297:	lea    r8,[rbx+0x8]
   14002329b:	mov    eax,DWORD PTR [r8-0x4]
   14002329f:	cmp    rsi,rax
   1400232a2:	jb     0x1400232c0
   1400232a4:	mov    eax,DWORD PTR [r8]
   1400232a7:	cmp    rsi,rax
   1400232aa:	jae    0x1400232c0
   1400232ac:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400232b0:	cmp    DWORD PTR [r8+0x8],eax
   1400232b4:	jne    0x1400232c0
   1400232b6:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   1400232ba:	cmp    DWORD PTR [r8+0x4],eax
   1400232be:	je     0x1400232cc
   1400232c0:	inc    r9d
   1400232c3:	add    r8,0x10
   1400232c7:	cmp    r9d,edx
   1400232ca:	jb     0x14002329b
   1400232cc:	cmp    r9d,edx
   1400232cf:	jne    0x140023303
   1400232d1:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400232d5:	test   eax,eax
   1400232d7:	je     0x1400232e0
   1400232d9:	cmp    rsi,rax
   1400232dc:	je     0x140023303
   1400232de:	jmp    0x1400232f7
   1400232e0:	lea    eax,[rdi+0x1]
   1400232e3:	mov    rdx,r13
   1400232e6:	mov    DWORD PTR [r14+0x48],eax
   1400232ea:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400232ef:	mov    cl,0x1
   1400232f1:	add    r8,r12
   1400232f4:	call   r8
   1400232f7:	inc    edi
   1400232f9:	mov    edx,DWORD PTR [rbx]
   1400232fb:	cmp    edi,edx
   1400232fd:	jb     0x140023273
   140023303:	mov    eax,0x1
   140023308:	lea    r11,[rsp+0x40]
   14002330d:	mov    rbx,QWORD PTR [r11+0x30]
   140023311:	mov    rbp,QWORD PTR [r11+0x38]
   140023315:	mov    rsi,QWORD PTR [r11+0x40]
   140023319:	mov    rsp,r11
   14002331c:	pop    r15
   14002331e:	pop    r14
   140023320:	pop    r13
   140023322:	pop    r12
   140023324:	pop    rdi
   140023325:	ret    
   140023326:	int3   
   140023327:	int3   
   140023328:	test   rcx,rcx
   14002332b:	je     0x140023364
   14002332d:	push   rbx
   14002332e:	sub    rsp,0x20
   140023332:	mov    r8,rcx
   140023335:	mov    rcx,QWORD PTR [rip+0x2cddc]        # 0x140050118
   14002333c:	xor    edx,edx
   14002333e:	call   QWORD PTR [rip+0x15f34]        # 0x140039278
   140023344:	test   eax,eax
   140023346:	jne    0x14002335f
   140023348:	call   0x140025380
   14002334d:	mov    rbx,rax
   140023350:	call   QWORD PTR [rip+0x1628a]        # 0x1400395e0
   140023356:	mov    ecx,eax
   140023358:	call   0x1400253a0
   14002335d:	mov    DWORD PTR [rbx],eax
   14002335f:	add    rsp,0x20
   140023363:	pop    rbx
   140023364:	ret    
   140023365:	int3   
   140023366:	int3   
   140023367:	int3   
   140023368:	rex push rbx
   14002336a:	sub    rsp,0x20
   14002336e:	mov    rbx,rcx
   140023371:	call   QWORD PTR [rip+0x15f09]        # 0x140039280
   140023377:	mov    ecx,0x1
   14002337c:	mov    DWORD PTR [rip+0x2d52e],eax        # 0x1400508b0
   140023382:	call   0x140027ed4
   140023387:	mov    rcx,rbx
   14002338a:	call   0x1400268b4
   14002338f:	cmp    DWORD PTR [rip+0x2d51a],0x0        # 0x1400508b0
   140023396:	jne    0x1400233a2
   140023398:	mov    ecx,0x1
   14002339d:	call   0x140027ed4
   1400233a2:	mov    ecx,0xc0000409
   1400233a7:	add    rsp,0x20
   1400233ab:	pop    rbx
   1400233ac:	jmp    0x140026894
   1400233b1:	int3   
   1400233b2:	int3   
   1400233b3:	int3   
   1400233b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400233b9:	sub    rsp,0x38
   1400233bd:	mov    ecx,0x17
   1400233c2:	call   0x14002a9d6
   1400233c7:	test   eax,eax
   1400233c9:	je     0x1400233d2
   1400233cb:	mov    ecx,0x2
   1400233d0:	int    0x29
   1400233d2:	lea    rcx,[rip+0x2d007]        # 0x1400503e0
   1400233d9:	call   0x140026798
   1400233de:	mov    rax,QWORD PTR [rsp+0x38]
   1400233e3:	mov    QWORD PTR [rip+0x2d0ee],rax        # 0x1400504d8
   1400233ea:	lea    rax,[rsp+0x38]
   1400233ef:	add    rax,0x8
   1400233f3:	mov    QWORD PTR [rip+0x2d07e],rax        # 0x140050478
   1400233fa:	mov    rax,QWORD PTR [rip+0x2d0d7]        # 0x1400504d8
   140023401:	mov    QWORD PTR [rip+0x2cf48],rax        # 0x140050350
   140023408:	mov    rax,QWORD PTR [rsp+0x40]
   14002340d:	mov    QWORD PTR [rip+0x2d04c],rax        # 0x140050460
   140023414:	mov    DWORD PTR [rip+0x2cf22],0xc0000409        # 0x140050340
   14002341e:	mov    DWORD PTR [rip+0x2cf1c],0x1        # 0x140050344
   140023428:	mov    DWORD PTR [rip+0x2cf26],0x1        # 0x140050358
   140023432:	mov    eax,0x8
   140023437:	imul   rax,rax,0x0
   14002343b:	lea    rcx,[rip+0x2cf1e]        # 0x140050360
   140023442:	mov    QWORD PTR [rcx+rax*1],0x2
   14002344a:	mov    eax,0x8
   14002344f:	imul   rax,rax,0x0
   140023453:	mov    rcx,QWORD PTR [rip+0x29fee]        # 0x14004d448
   14002345a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14002345f:	mov    eax,0x8
   140023464:	imul   rax,rax,0x1
   140023468:	mov    rcx,QWORD PTR [rip+0x29fe1]        # 0x14004d450
   14002346f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140023474:	lea    rcx,[rip+0x16ff5]        # 0x14003a470
   14002347b:	call   0x140023368
   140023480:	add    rsp,0x38
   140023484:	ret    
   140023485:	int3   
   140023486:	int3   
   140023487:	int3   
   140023488:	rex push rbx
   14002348a:	sub    rsp,0x10
   14002348e:	mov    r9d,0x2
   140023494:	xor    ecx,ecx
   140023496:	lea    r10d,[r9-0x1]
   14002349a:	mov    DWORD PTR [rip+0x29fbb],r9d        # 0x14004d45c
   1400234a1:	mov    eax,r10d
   1400234a4:	mov    DWORD PTR [rip+0x29fad],r10d        # 0x14004d458
   1400234ab:	cpuid  
   1400234ad:	mov    DWORD PTR [rsp],eax
   1400234b0:	mov    DWORD PTR [rsp+0x4],ebx
   1400234b4:	mov    DWORD PTR [rsp+0xc],edx
   1400234b8:	bt     ecx,0x14
   1400234bc:	jae    0x1400234e9
   1400234be:	mov    DWORD PTR [rip+0x29f93],r9d        # 0x14004d458
   1400234c5:	mov    DWORD PTR [rip+0x29f8d],0x6        # 0x14004d45c
   1400234cf:	bt     ecx,0x1c
   1400234d3:	jae    0x1400234e9
   1400234d5:	mov    DWORD PTR [rip+0x29f79],0x3        # 0x14004d458
   1400234df:	mov    DWORD PTR [rip+0x29f73],0xe        # 0x14004d45c
   1400234e9:	mov    r8d,DWORD PTR [rip+0x2d3c4]        # 0x1400508b4
   1400234f0:	xor    ecx,ecx
   1400234f2:	mov    eax,0x7
   1400234f7:	cpuid  
   1400234f9:	mov    DWORD PTR [rsp],eax
   1400234fc:	mov    DWORD PTR [rsp+0x8],ecx
   140023500:	mov    DWORD PTR [rsp+0xc],edx
   140023504:	bt     ebx,0x9
   140023508:	jae    0x140023514
   14002350a:	or     r8d,r9d
   14002350d:	mov    DWORD PTR [rip+0x2d3a0],r8d        # 0x1400508b4
   140023514:	xor    eax,eax
   140023516:	xor    ecx,ecx
   140023518:	cpuid  
   14002351a:	mov    DWORD PTR [rsp],eax
   14002351d:	cmp    ebx,0x756e6547
   140023523:	jne    0x140023586
   140023525:	cmp    edx,0x49656e69
   14002352b:	jne    0x140023586
   14002352d:	cmp    ecx,0x6c65746e
   140023533:	jne    0x140023586
   140023535:	xor    ecx,ecx
   140023537:	mov    eax,r10d
   14002353a:	cpuid  
   14002353c:	and    eax,0xfff3ff0
   140023541:	mov    DWORD PTR [rsp+0x4],ebx
   140023545:	mov    DWORD PTR [rsp+0x8],ecx
   140023549:	mov    DWORD PTR [rsp+0xc],edx
   14002354d:	cmp    eax,0x106c0
   140023552:	je     0x14002357c
   140023554:	cmp    eax,0x20660
   140023559:	je     0x14002357c
   14002355b:	cmp    eax,0x20670
   140023560:	je     0x14002357c
   140023562:	add    eax,0xfffcf9b0
   140023567:	cmp    eax,0x20
   14002356a:	ja     0x140023586
   14002356c:	movabs rcx,0x100010001
   140023576:	bt     rcx,rax
   14002357a:	jae    0x140023586
   14002357c:	or     r8d,r10d
   14002357f:	mov    DWORD PTR [rip+0x2d32e],r8d        # 0x1400508b4
   140023586:	xor    eax,eax
   140023588:	add    rsp,0x10
   14002358c:	pop    rbx
   14002358d:	ret    
   14002358e:	int3   
   14002358f:	int3   
   140023590:	mov    QWORD PTR [rsp+0x8],rbx
   140023595:	mov    QWORD PTR [rsp+0x10],rsi
   14002359a:	push   rdi
   14002359b:	sub    rsp,0x30
   14002359f:	xor    edi,edi
   1400235a1:	lea    ecx,[rdi+0x1]
   1400235a4:	call   0x140023638
   1400235a9:	nop
   1400235aa:	lea    ebx,[rdi+0x3]
   1400235ad:	mov    DWORD PTR [rsp+0x20],ebx
   1400235b1:	cmp    ebx,DWORD PTR [rip+0x2ef51]        # 0x140052508
   1400235b7:	jge    0x14002361c
   1400235b9:	movsxd rsi,ebx
   1400235bc:	mov    rax,QWORD PTR [rip+0x2ef3d]        # 0x140052500
   1400235c3:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400235c7:	test   rcx,rcx
   1400235ca:	je     0x140023618
   1400235cc:	test   BYTE PTR [rcx+0x18],0x83
   1400235d0:	je     0x1400235e2
   1400235d2:	call   0x140027f58
   1400235d7:	cmp    eax,0xffffffff
   1400235da:	je     0x1400235e2
   1400235dc:	inc    edi
   1400235de:	mov    DWORD PTR [rsp+0x24],edi
   1400235e2:	cmp    ebx,0x14
   1400235e5:	jl     0x140023618
   1400235e7:	mov    rax,QWORD PTR [rip+0x2ef12]        # 0x140052500
   1400235ee:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400235f2:	add    rcx,0x30
   1400235f6:	call   QWORD PTR [rip+0x15c34]        # 0x140039230
   1400235fc:	mov    rcx,QWORD PTR [rip+0x2eefd]        # 0x140052500
   140023603:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140023607:	call   0x140023328
   14002360c:	mov    rax,QWORD PTR [rip+0x2eeed]        # 0x140052500
   140023613:	and    QWORD PTR [rax+rsi*8],0x0
   140023618:	inc    ebx
   14002361a:	jmp    0x1400235ad
   14002361c:	mov    ecx,0x1
   140023621:	call   0x140023820
   140023626:	mov    eax,edi
   140023628:	mov    rbx,QWORD PTR [rsp+0x40]
   14002362d:	mov    rsi,QWORD PTR [rsp+0x48]
   140023632:	add    rsp,0x30
   140023636:	pop    rdi
   140023637:	ret    
   140023638:	mov    QWORD PTR [rsp+0x8],rbx
   14002363d:	push   rdi
   14002363e:	sub    rsp,0x20
   140023642:	movsxd rbx,ecx
   140023645:	lea    rdi,[rip+0x29e14]        # 0x14004d460
   14002364c:	add    rbx,rbx
   14002364f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140023654:	jne    0x140023667
   140023656:	call   0x140023704
   14002365b:	test   eax,eax
   14002365d:	jne    0x140023667
   14002365f:	lea    ecx,[rax+0x11]
   140023662:	call   0x140022138
   140023667:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14002366b:	mov    rbx,QWORD PTR [rsp+0x30]
   140023670:	add    rsp,0x20
   140023674:	pop    rdi
   140023675:	rex.W jmp QWORD PTR [rip+0x15b2c]        # 0x1400391a8
   14002367c:	mov    QWORD PTR [rsp+0x8],rbx
   140023681:	mov    QWORD PTR [rsp+0x10],rbp
   140023686:	mov    QWORD PTR [rsp+0x18],rsi
   14002368b:	push   rdi
   14002368c:	sub    rsp,0x20
   140023690:	mov    edi,0x24
   140023695:	lea    rbx,[rip+0x29dc4]        # 0x14004d460
   14002369c:	mov    ebp,edi
   14002369e:	mov    rsi,QWORD PTR [rbx]
   1400236a1:	test   rsi,rsi
   1400236a4:	je     0x1400236c1
   1400236a6:	cmp    DWORD PTR [rbx+0x8],0x1
   1400236aa:	je     0x1400236c1
   1400236ac:	mov    rcx,rsi
   1400236af:	call   QWORD PTR [rip+0x15b7b]        # 0x140039230
   1400236b5:	mov    rcx,rsi
   1400236b8:	call   0x140023328
   1400236bd:	and    QWORD PTR [rbx],0x0
   1400236c1:	add    rbx,0x10
   1400236c5:	dec    rbp
   1400236c8:	jne    0x14002369e
   1400236ca:	lea    rbx,[rip+0x29d97]        # 0x14004d468
   1400236d1:	mov    rcx,QWORD PTR [rbx-0x8]
   1400236d5:	test   rcx,rcx
   1400236d8:	je     0x1400236e5
   1400236da:	cmp    DWORD PTR [rbx],0x1
   1400236dd:	jne    0x1400236e5
   1400236df:	call   QWORD PTR [rip+0x15b4b]        # 0x140039230
   1400236e5:	add    rbx,0x10
   1400236e9:	dec    rdi
   1400236ec:	jne    0x1400236d1
   1400236ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400236f3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400236f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400236fd:	add    rsp,0x20
   140023701:	pop    rdi
   140023702:	ret    
   140023703:	int3   
   140023704:	mov    QWORD PTR [rsp+0x8],rbx
   140023709:	mov    QWORD PTR [rsp+0x10],rdi
   14002370e:	push   r14
   140023710:	sub    rsp,0x20
   140023714:	movsxd rbx,ecx
   140023717:	cmp    QWORD PTR [rip+0x2c9f9],0x0        # 0x140050118
   14002371f:	jne    0x14002373a
   140023721:	call   0x1400224e8
   140023726:	mov    ecx,0x1e
   14002372b:	call   0x14002255c
   140023730:	mov    ecx,0xff
   140023735:	call   0x140022120
   14002373a:	add    rbx,rbx
   14002373d:	lea    r14,[rip+0x29d1c]        # 0x14004d460
   140023744:	cmp    QWORD PTR [r14+rbx*8],0x0
   140023749:	je     0x140023752
   14002374b:	mov    eax,0x1
   140023750:	jmp    0x1400237ae
   140023752:	mov    ecx,0x28
   140023757:	call   0x1400238b8
   14002375c:	mov    rdi,rax
   14002375f:	test   rax,rax
   140023762:	jne    0x140023773
   140023764:	call   0x140025380
   140023769:	mov    DWORD PTR [rax],0xc
   14002376f:	xor    eax,eax
   140023771:	jmp    0x1400237ae
   140023773:	mov    ecx,0xa
   140023778:	call   0x140023638
   14002377d:	nop
   14002377e:	mov    rcx,rdi
   140023781:	cmp    QWORD PTR [r14+rbx*8],0x0
   140023786:	jne    0x140023799
   140023788:	mov    edx,0xfa0
   14002378d:	call   QWORD PTR [rip+0x15a95]        # 0x140039228
   140023793:	mov    QWORD PTR [r14+rbx*8],rdi
   140023797:	jmp    0x14002379f
   140023799:	call   0x140023328
   14002379e:	nop
   14002379f:	mov    rcx,QWORD PTR [rip+0x29d5a]        # 0x14004d500
   1400237a6:	call   QWORD PTR [rip+0x15a04]        # 0x1400391b0
   1400237ac:	jmp    0x14002374b
   1400237ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400237b3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400237b8:	add    rsp,0x20
   1400237bc:	pop    r14
   1400237be:	ret    
   1400237bf:	int3   
   1400237c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400237c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400237ca:	push   rdi
   1400237cb:	sub    rsp,0x20
   1400237cf:	xor    esi,esi
   1400237d1:	lea    rbx,[rip+0x29c88]        # 0x14004d460
   1400237d8:	lea    edi,[rsi+0x24]
   1400237db:	cmp    DWORD PTR [rbx+0x8],0x1
   1400237df:	jne    0x140023803
   1400237e1:	movsxd rax,esi
   1400237e4:	lea    rdx,[rip+0x2d0d5]        # 0x1400508c0
   1400237eb:	inc    esi
   1400237ed:	lea    rcx,[rax+rax*4]
   1400237f1:	lea    rcx,[rdx+rcx*8]
   1400237f5:	mov    edx,0xfa0
   1400237fa:	mov    QWORD PTR [rbx],rcx
   1400237fd:	call   QWORD PTR [rip+0x15a25]        # 0x140039228
   140023803:	add    rbx,0x10
   140023807:	dec    rdi
   14002380a:	jne    0x1400237db
   14002380c:	mov    rbx,QWORD PTR [rsp+0x30]
   140023811:	mov    rsi,QWORD PTR [rsp+0x38]
   140023816:	lea    eax,[rdi+0x1]
   140023819:	add    rsp,0x20
   14002381d:	pop    rdi
   14002381e:	ret    
   14002381f:	int3   
   140023820:	movsxd rcx,ecx
   140023823:	lea    rax,[rip+0x29c36]        # 0x14004d460
   14002382a:	add    rcx,rcx
   14002382d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140023831:	rex.W jmp QWORD PTR [rip+0x15978]        # 0x1400391b0
   140023838:	mov    rax,rsp
   14002383b:	mov    QWORD PTR [rax+0x8],rbx
   14002383f:	mov    QWORD PTR [rax+0x10],rbp
   140023843:	mov    QWORD PTR [rax+0x18],rsi
   140023847:	mov    QWORD PTR [rax+0x20],rdi
   14002384b:	push   r14
   14002384d:	sub    rsp,0x20
   140023851:	xor    ebx,ebx
   140023853:	mov    rsi,rdx
   140023856:	mov    rbp,rcx
   140023859:	or     r14d,0xffffffff
   14002385d:	xor    r8d,r8d
   140023860:	mov    rdx,rsi
   140023863:	mov    rcx,rbp
   140023866:	call   0x14002811c
   14002386b:	mov    rdi,rax
   14002386e:	test   rax,rax
   140023871:	jne    0x14002389a
   140023873:	cmp    DWORD PTR [rip+0x2d277],eax        # 0x140050af0
   140023879:	jbe    0x14002389a
   14002387b:	mov    ecx,ebx
   14002387d:	call   QWORD PTR [rip+0x15d6d]        # 0x1400395f0
   140023883:	lea    ecx,[rbx+0x3e8]
   140023889:	cmp    ecx,DWORD PTR [rip+0x2d261]        # 0x140050af0
   14002388f:	mov    ebx,ecx
   140023891:	cmova  ebx,r14d
   140023895:	cmp    ebx,r14d
   140023898:	jne    0x14002385d
   14002389a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002389f:	mov    rbp,QWORD PTR [rsp+0x38]
   1400238a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400238a9:	mov    rax,rdi
   1400238ac:	mov    rdi,QWORD PTR [rsp+0x48]
   1400238b1:	add    rsp,0x20
   1400238b5:	pop    r14
   1400238b7:	ret    
   1400238b8:	mov    rax,rsp
   1400238bb:	mov    QWORD PTR [rax+0x8],rbx
   1400238bf:	mov    QWORD PTR [rax+0x10],rbp
   1400238c3:	mov    QWORD PTR [rax+0x18],rsi
   1400238c7:	mov    QWORD PTR [rax+0x20],rdi
   1400238cb:	push   r14
   1400238cd:	sub    rsp,0x20
   1400238d1:	mov    esi,DWORD PTR [rip+0x2d219]        # 0x140050af0
   1400238d7:	xor    edi,edi
   1400238d9:	mov    rbp,rcx
   1400238dc:	or     r14d,0xffffffff
   1400238e0:	mov    rcx,rbp
   1400238e3:	call   0x140026354
   1400238e8:	mov    rbx,rax
   1400238eb:	test   rax,rax
   1400238ee:	jne    0x140023915
   1400238f0:	test   esi,esi
   1400238f2:	je     0x140023915
   1400238f4:	mov    ecx,edi
   1400238f6:	call   QWORD PTR [rip+0x15cf4]        # 0x1400395f0
   1400238fc:	mov    esi,DWORD PTR [rip+0x2d1ee]        # 0x140050af0
   140023902:	lea    ecx,[rdi+0x3e8]
   140023908:	cmp    ecx,esi
   14002390a:	mov    edi,ecx
   14002390c:	cmova  edi,r14d
   140023910:	cmp    edi,r14d
   140023913:	jne    0x1400238e0
   140023915:	mov    rbp,QWORD PTR [rsp+0x38]
   14002391a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002391f:	mov    rdi,QWORD PTR [rsp+0x48]
   140023924:	mov    rax,rbx
   140023927:	mov    rbx,QWORD PTR [rsp+0x30]
   14002392c:	add    rsp,0x20
   140023930:	pop    r14
   140023932:	ret    
   140023933:	int3   
   140023934:	mov    rax,rsp
   140023937:	mov    QWORD PTR [rax+0x8],rbx
   14002393b:	mov    QWORD PTR [rax+0x10],rbp
   14002393f:	mov    QWORD PTR [rax+0x18],rsi
   140023943:	mov    QWORD PTR [rax+0x20],rdi
   140023947:	push   r14
   140023949:	sub    rsp,0x20
   14002394d:	xor    ebx,ebx
   14002394f:	mov    rsi,rdx
   140023952:	mov    rbp,rcx
   140023955:	or     r14d,0xffffffff
   140023959:	mov    rdx,rsi
   14002395c:	mov    rcx,rbp
   14002395f:	call   0x140027fc0
   140023964:	mov    rdi,rax
   140023967:	test   rax,rax
   14002396a:	jne    0x140023998
   14002396c:	test   rsi,rsi
   14002396f:	je     0x140023998
   140023971:	cmp    DWORD PTR [rip+0x2d179],eax        # 0x140050af0
   140023977:	jbe    0x140023998
   140023979:	mov    ecx,ebx
   14002397b:	call   QWORD PTR [rip+0x15c6f]        # 0x1400395f0
   140023981:	lea    ecx,[rbx+0x3e8]
   140023987:	cmp    ecx,DWORD PTR [rip+0x2d163]        # 0x140050af0
   14002398d:	mov    ebx,ecx
   14002398f:	cmova  ebx,r14d
   140023993:	cmp    ebx,r14d
   140023996:	jne    0x140023959
   140023998:	mov    rbx,QWORD PTR [rsp+0x30]
   14002399d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400239a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400239a7:	mov    rax,rdi
   1400239aa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400239af:	add    rsp,0x20
   1400239b3:	pop    r14
   1400239b5:	ret    
   1400239b6:	int3   
   1400239b7:	int3   
   1400239b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400239bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400239c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400239c7:	push   rdi
   1400239c8:	push   r14
   1400239ca:	push   r15
   1400239cc:	sub    rsp,0x20
   1400239d0:	xor    edi,edi
   1400239d2:	mov    rsi,r8
   1400239d5:	mov    rbp,rdx
   1400239d8:	or     r15d,0xffffffff
   1400239dc:	mov    r14,rcx
   1400239df:	mov    r8,rsi
   1400239e2:	mov    rdx,rbp
   1400239e5:	mov    rcx,r14
   1400239e8:	call   0x140028094
   1400239ed:	mov    rbx,rax
   1400239f0:	test   rax,rax
   1400239f3:	jne    0x140023a21
   1400239f5:	test   rsi,rsi
   1400239f8:	je     0x140023a21
   1400239fa:	cmp    DWORD PTR [rip+0x2d0f0],eax        # 0x140050af0
   140023a00:	jbe    0x140023a21
   140023a02:	mov    ecx,edi
   140023a04:	call   QWORD PTR [rip+0x15be6]        # 0x1400395f0
   140023a0a:	lea    ecx,[rdi+0x3e8]
   140023a10:	cmp    ecx,DWORD PTR [rip+0x2d0da]        # 0x140050af0
   140023a16:	mov    edi,ecx
   140023a18:	cmova  edi,r15d
   140023a1c:	cmp    edi,r15d
   140023a1f:	jne    0x1400239df
   140023a21:	mov    rbp,QWORD PTR [rsp+0x48]
   140023a26:	mov    rsi,QWORD PTR [rsp+0x50]
   140023a2b:	mov    rax,rbx
   140023a2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140023a33:	add    rsp,0x20
   140023a37:	pop    r15
   140023a39:	pop    r14
   140023a3b:	pop    rdi
   140023a3c:	ret    
   140023a3d:	int3   
   140023a3e:	int3   
   140023a3f:	int3   
   140023a40:	sub    rsp,0x28
   140023a44:	test   rcx,rcx
   140023a47:	jne    0x140023a5e
   140023a49:	call   0x140025380
   140023a4e:	mov    DWORD PTR [rax],0x16
   140023a54:	call   0x140024554
   140023a59:	or     eax,0xffffffff
   140023a5c:	jmp    0x140023a61
   140023a5e:	mov    eax,DWORD PTR [rcx+0x1c]
   140023a61:	add    rsp,0x28
   140023a65:	ret    
   140023a66:	int3   
   140023a67:	int3   
   140023a68:	mov    QWORD PTR [rsp+0x18],rbx
   140023a6d:	mov    DWORD PTR [rsp+0x8],ecx
   140023a71:	push   rsi
   140023a72:	push   rdi
   140023a73:	push   r14
   140023a75:	sub    rsp,0x20
   140023a79:	movsxd rdi,ecx
   140023a7c:	cmp    edi,0xfffffffe
   140023a7f:	jne    0x140023a91
   140023a81:	call   0x140025380
   140023a86:	mov    DWORD PTR [rax],0x9
   140023a8c:	jmp    0x140023b41
   140023a91:	call   0x1400227ec
   140023a96:	test   eax,eax
   140023a98:	jns    0x140023aa4
   140023a9a:	mov    eax,0x9
   140023a9f:	jmp    0x140023b44
   140023aa4:	test   edi,edi
   140023aa6:	js     0x140023b31
   140023aac:	cmp    edi,DWORD PTR [rip+0x2e81a]        # 0x1400522cc
   140023ab2:	jae    0x140023b31
   140023ab4:	mov    rbx,rdi
   140023ab7:	mov    rsi,rdi
   140023aba:	sar    rsi,0x5
   140023abe:	lea    r14,[rip+0x2e81b]        # 0x1400522e0
   140023ac5:	and    ebx,0x1f
   140023ac8:	imul   rbx,rbx,0x58
   140023acc:	mov    rax,QWORD PTR [r14+rsi*8]
   140023ad0:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140023ad5:	and    ecx,0x1
   140023ad8:	je     0x140023b31
   140023ada:	mov    ecx,edi
   140023adc:	call   0x1400281b8
   140023ae1:	nop
   140023ae2:	mov    rax,QWORD PTR [r14+rsi*8]
   140023ae6:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140023aeb:	je     0x140023b18
   140023aed:	mov    ecx,edi
   140023aef:	call   0x1400282fc
   140023af4:	mov    rcx,rax
   140023af7:	call   QWORD PTR [rip+0x15793]        # 0x140039290
   140023afd:	test   eax,eax
   140023aff:	jne    0x140023b0b
   140023b01:	call   QWORD PTR [rip+0x15ad9]        # 0x1400395e0
   140023b07:	mov    ebx,eax
   140023b09:	jmp    0x140023b0d
   140023b0b:	xor    ebx,ebx
   140023b0d:	test   ebx,ebx
   140023b0f:	je     0x140023b26
   140023b11:	call   0x140025310
   140023b16:	mov    DWORD PTR [rax],ebx
   140023b18:	call   0x140025380
   140023b1d:	mov    DWORD PTR [rax],0x9
   140023b23:	or     ebx,0xffffffff
   140023b26:	mov    ecx,edi
   140023b28:	call   0x140028380
   140023b2d:	mov    eax,ebx
   140023b2f:	jmp    0x140023b44
   140023b31:	call   0x140025380
   140023b36:	mov    DWORD PTR [rax],0x9
   140023b3c:	call   0x140024554
   140023b41:	or     eax,0xffffffff
   140023b44:	mov    rbx,QWORD PTR [rsp+0x50]
   140023b49:	add    rsp,0x20
   140023b4d:	pop    r14
   140023b4f:	pop    rdi
   140023b50:	pop    rsi
   140023b51:	ret    
   140023b52:	int3   
   140023b53:	int3   
   140023b54:	mov    QWORD PTR [rsp+0x10],rbx
   140023b59:	mov    DWORD PTR [rsp+0x8],ecx
   140023b5d:	push   rsi
   140023b5e:	push   rdi
   140023b5f:	push   r12
   140023b61:	push   r14
   140023b63:	push   r15
   140023b65:	sub    rsp,0x20
   140023b69:	mov    r14d,r8d
   140023b6c:	mov    r15,rdx
   140023b6f:	movsxd rdi,ecx
   140023b72:	cmp    edi,0xfffffffe
   140023b75:	jne    0x140023b8f
   140023b77:	call   0x140025310
   140023b7c:	and    DWORD PTR [rax],0x0
   140023b7f:	call   0x140025380
   140023b84:	mov    DWORD PTR [rax],0x9
   140023b8a:	jmp    0x140023c2b
   140023b8f:	call   0x1400227ec
   140023b94:	test   eax,eax
   140023b96:	js     0x140023c2b
   140023b9c:	test   edi,edi
   140023b9e:	js     0x140023c13
   140023ba0:	cmp    edi,DWORD PTR [rip+0x2e726]        # 0x1400522cc
   140023ba6:	jae    0x140023c13
   140023ba8:	mov    rbx,rdi
   140023bab:	mov    rsi,rdi
   140023bae:	sar    rsi,0x5
   140023bb2:	lea    r12,[rip+0x2e727]        # 0x1400522e0
   140023bb9:	and    ebx,0x1f
   140023bbc:	imul   rbx,rbx,0x58
   140023bc0:	mov    rax,QWORD PTR [r12+rsi*8]
   140023bc4:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   140023bc9:	and    ecx,0x1
   140023bcc:	je     0x140023c13
   140023bce:	mov    ecx,edi
   140023bd0:	call   0x1400281b8
   140023bd5:	nop
   140023bd6:	mov    rax,QWORD PTR [r12+rsi*8]
   140023bda:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   140023bdf:	je     0x140023bf2
   140023be1:	mov    r8d,r14d
   140023be4:	mov    rdx,r15
   140023be7:	mov    ecx,edi
   140023be9:	call   0x140023c40
   140023bee:	mov    ebx,eax
   140023bf0:	jmp    0x140023c08
   140023bf2:	call   0x140025380
   140023bf7:	mov    DWORD PTR [rax],0x9
   140023bfd:	call   0x140025310
   140023c02:	and    DWORD PTR [rax],0x0
   140023c05:	or     ebx,0xffffffff
   140023c08:	mov    ecx,edi
   140023c0a:	call   0x140028380
   140023c0f:	mov    eax,ebx
   140023c11:	jmp    0x140023c2e
   140023c13:	call   0x140025310
   140023c18:	and    DWORD PTR [rax],0x0
   140023c1b:	call   0x140025380
   140023c20:	mov    DWORD PTR [rax],0x9
   140023c26:	call   0x140024554
   140023c2b:	or     eax,0xffffffff
   140023c2e:	mov    rbx,QWORD PTR [rsp+0x58]
   140023c33:	add    rsp,0x20
   140023c37:	pop    r15
   140023c39:	pop    r14
   140023c3b:	pop    r12
   140023c3d:	pop    rdi
   140023c3e:	pop    rsi
   140023c3f:	ret    
   140023c40:	mov    QWORD PTR [rsp+0x20],rbx
   140023c45:	push   rbp
   140023c46:	push   rsi
   140023c47:	push   rdi
   140023c48:	push   r12
   140023c4a:	push   r13
   140023c4c:	push   r14
   140023c4e:	push   r15
   140023c50:	lea    rbp,[rsp-0x1a30]
   140023c58:	mov    eax,0x1b30
   140023c5d:	call   0x140028810
   140023c62:	sub    rsp,rax
   140023c65:	mov    rax,QWORD PTR [rip+0x297dc]        # 0x14004d448
   140023c6c:	xor    rax,rsp
   140023c6f:	mov    QWORD PTR [rbp+0x1a20],rax
   140023c76:	xor    edi,edi
   140023c78:	mov    r15d,r8d
   140023c7b:	mov    r14,rdx
   140023c7e:	and    DWORD PTR [rsp+0x48],edi
   140023c82:	movsxd rbx,ecx
   140023c85:	test   r8d,r8d
   140023c88:	jne    0x140023c91
   140023c8a:	xor    eax,eax
   140023c8c:	jmp    0x14002438a
   140023c91:	test   rdx,rdx
   140023c94:	jne    0x140023cb5
   140023c96:	call   0x140025310
   140023c9b:	and    DWORD PTR [rax],edi
   140023c9d:	call   0x140025380
   140023ca2:	mov    DWORD PTR [rax],0x16
   140023ca8:	call   0x140024554
   140023cad:	or     eax,0xffffffff
   140023cb0:	jmp    0x14002438a
   140023cb5:	call   0x1400227ec
   140023cba:	test   eax,eax
   140023cbc:	js     0x140023cad
   140023cbe:	lea    eax,[rbx-0x1]
   140023cc1:	cmp    eax,0x1
   140023cc4:	ja     0x140023ce9
   140023cc6:	mov    rsi,rbx
   140023cc9:	imul   rsi,rsi,0x58
   140023ccd:	add    rsi,QWORD PTR [rip+0x2e60c]        # 0x1400522e0
   140023cd4:	je     0x140023ce9
   140023cd6:	lea    eax,[rbx-0x1]
   140023cd9:	neg    eax
   140023cdb:	sbb    ecx,ecx
   140023cdd:	add    ecx,0xfffffff5
   140023ce0:	call   QWORD PTR [rip+0x1551a]        # 0x140039200
   140023ce6:	mov    QWORD PTR [rsi],rax
   140023ce9:	mov    r12,rbx
   140023cec:	lea    rax,[rip+0x2e5ed]        # 0x1400522e0
   140023cf3:	mov    r13,rbx
   140023cf6:	sar    r13,0x5
   140023cfa:	and    r12d,0x1f
   140023cfe:	mov    rcx,QWORD PTR [rax+r13*8]
   140023d02:	mov    QWORD PTR [rsp+0x50],r13
   140023d07:	imul   r12,r12,0x58
   140023d0b:	mov    sil,BYTE PTR [r12+rcx*1+0x38]
   140023d10:	add    sil,sil
   140023d13:	sar    sil,1
   140023d16:	lea    eax,[rsi-0x1]
   140023d19:	cmp    al,0x1
   140023d1b:	ja     0x140023d2a
   140023d1d:	mov    eax,r15d
   140023d20:	not    eax
   140023d22:	test   al,0x1
   140023d24:	je     0x140023c96
   140023d2a:	test   BYTE PTR [r12+rcx*1+0x8],0x20
   140023d30:	je     0x140023d3f
   140023d32:	xor    edx,edx
   140023d34:	mov    ecx,ebx
   140023d36:	lea    r8d,[rdx+0x2]
   140023d3a:	call   0x1400285a8
   140023d3f:	mov    ecx,ebx
   140023d41:	call   0x140028444
   140023d46:	test   eax,eax
   140023d48:	je     0x14002400a
   140023d4e:	lea    rax,[rip+0x2e58b]        # 0x1400522e0
   140023d55:	mov    rax,QWORD PTR [rax+r13*8]
   140023d59:	test   BYTE PTR [r12+rax*1+0x8],0x80
   140023d5f:	je     0x14002400a
   140023d65:	call   0x140021ed4
   140023d6a:	xor    ebx,ebx
   140023d6c:	lea    rdx,[rsp+0x5c]
   140023d71:	mov    rcx,QWORD PTR [rax+0xc0]
   140023d78:	lea    rax,[rip+0x2e561]        # 0x1400522e0
   140023d7f:	cmp    QWORD PTR [rcx+0x138],rbx
   140023d86:	mov    rcx,QWORD PTR [rax+r13*8]
   140023d8a:	mov    rcx,QWORD PTR [r12+rcx*1]
   140023d8e:	sete   bl
   140023d91:	call   QWORD PTR [rip+0x15511]        # 0x1400392a8
   140023d97:	test   eax,eax
   140023d99:	je     0x14002400a
   140023d9f:	test   ebx,ebx
   140023da1:	je     0x140023dac
   140023da3:	test   sil,sil
   140023da6:	je     0x14002400a
   140023dac:	call   QWORD PTR [rip+0x154ee]        # 0x1400392a0
   140023db2:	and    DWORD PTR [rsp+0x58],edi
   140023db6:	mov    rbx,r14
   140023db9:	mov    DWORD PTR [rsp+0x5c],eax
   140023dbd:	test   r15d,r15d
   140023dc0:	je     0x140024001
   140023dc6:	test   sil,sil
   140023dc9:	jne    0x140023f53
   140023dcf:	mov    cl,BYTE PTR [rbx]
   140023dd1:	xor    eax,eax
   140023dd3:	cmp    cl,0xa
   140023dd6:	sete   al
   140023dd9:	mov    DWORD PTR [rsp+0x44],eax
   140023ddd:	lea    rax,[rip+0x2e4fc]        # 0x1400522e0
   140023de4:	mov    rdx,QWORD PTR [rax+r13*8]
   140023de8:	cmp    DWORD PTR [r12+rdx*1+0x50],0x0
   140023dee:	je     0x140023e10
   140023df0:	mov    al,BYTE PTR [r12+rdx*1+0x4c]
   140023df5:	mov    BYTE PTR [rsp+0x61],cl
   140023df9:	mov    r8d,0x2
   140023dff:	mov    BYTE PTR [rsp+0x60],al
   140023e03:	and    DWORD PTR [r12+rdx*1+0x50],0x0
   140023e09:	lea    rdx,[rsp+0x60]
   140023e0e:	jmp    0x140023e59
   140023e10:	movsx  ecx,cl
   140023e13:	call   0x1400283f0
   140023e18:	test   eax,eax
   140023e1a:	je     0x140023e50
   140023e1c:	mov    rax,r15
   140023e1f:	sub    rax,rbx
   140023e22:	add    rax,r14
   140023e25:	cmp    rax,0x1
   140023e29:	jle    0x140023fd7
   140023e2f:	lea    rcx,[rsp+0x40]
   140023e34:	mov    r8d,0x2
   140023e3a:	mov    rdx,rbx
   140023e3d:	call   0x140028790
   140023e42:	cmp    eax,0xffffffff
   140023e45:	je     0x140023ff8
   140023e4b:	inc    rbx
   140023e4e:	jmp    0x140023e6c
   140023e50:	mov    r8d,0x1
   140023e56:	mov    rdx,rbx
   140023e59:	lea    rcx,[rsp+0x40]
   140023e5e:	call   0x140028790
   140023e63:	cmp    eax,0xffffffff
   140023e66:	je     0x140023ff8
   140023e6c:	and    QWORD PTR [rsp+0x38],0x0
   140023e72:	and    QWORD PTR [rsp+0x30],0x0
   140023e78:	mov    ecx,DWORD PTR [rsp+0x5c]
   140023e7c:	lea    rax,[rsp+0x60]
   140023e81:	lea    r8,[rsp+0x40]
   140023e86:	mov    r9d,0x1
   140023e8c:	xor    edx,edx
   140023e8e:	mov    DWORD PTR [rsp+0x28],0x5
   140023e96:	inc    rbx
   140023e99:	mov    QWORD PTR [rsp+0x20],rax
   140023e9e:	call   QWORD PTR [rip+0x153f4]        # 0x140039298
   140023ea4:	mov    r13d,eax
   140023ea7:	test   eax,eax
   140023ea9:	je     0x140023ff8
   140023eaf:	mov    rcx,QWORD PTR [rsp+0x50]
   140023eb4:	and    QWORD PTR [rsp+0x20],0x0
   140023eba:	lea    rax,[rip+0x2e41f]        # 0x1400522e0
   140023ec1:	mov    rcx,QWORD PTR [rax+rcx*8]
   140023ec5:	lea    r9,[rsp+0x58]
   140023eca:	lea    rdx,[rsp+0x60]
   140023ecf:	mov    rcx,QWORD PTR [r12+rcx*1]
   140023ed3:	mov    r8d,r13d
   140023ed6:	call   QWORD PTR [rip+0x1532c]        # 0x140039208
   140023edc:	test   eax,eax
   140023ede:	je     0x140024312
   140023ee4:	mov    edi,ebx
   140023ee6:	sub    edi,r14d
   140023ee9:	add    edi,DWORD PTR [rsp+0x48]
   140023eed:	cmp    DWORD PTR [rsp+0x58],r13d
   140023ef2:	jl     0x140023ff8
   140023ef8:	cmp    DWORD PTR [rsp+0x44],0x0
   140023efd:	mov    r13,QWORD PTR [rsp+0x50]
   140023f02:	je     0x140023fc8
   140023f08:	and    QWORD PTR [rsp+0x20],0x0
   140023f0e:	lea    rax,[rip+0x2e3cb]        # 0x1400522e0
   140023f15:	mov    BYTE PTR [rsp+0x60],0xd
   140023f1a:	mov    rcx,QWORD PTR [rax+r13*8]
   140023f1e:	lea    r9,[rsp+0x58]
   140023f23:	lea    rdx,[rsp+0x60]
   140023f28:	mov    rcx,QWORD PTR [r12+rcx*1]
   140023f2c:	mov    r8d,0x1
   140023f32:	call   QWORD PTR [rip+0x152d0]        # 0x140039208
   140023f38:	test   eax,eax
   140023f3a:	je     0x140024312
   140023f40:	cmp    DWORD PTR [rsp+0x58],0x1
   140023f45:	jl     0x140023ff8
   140023f4b:	inc    DWORD PTR [rsp+0x48]
   140023f4f:	inc    edi
   140023f51:	jmp    0x140023fc8
   140023f53:	lea    eax,[rsi-0x1]
   140023f56:	cmp    al,0x1
   140023f58:	ja     0x140023f78
   140023f5a:	movzx  eax,WORD PTR [rbx]
   140023f5d:	xor    r13d,r13d
   140023f60:	cmp    ax,0xa
   140023f64:	mov    WORD PTR [rsp+0x40],ax
   140023f69:	sete   r13b
   140023f6d:	add    rbx,0x2
   140023f71:	mov    DWORD PTR [rsp+0x44],r13d
   140023f76:	jmp    0x140023f7d
   140023f78:	mov    r13d,DWORD PTR [rsp+0x44]
   140023f7d:	lea    eax,[rsi-0x1]
   140023f80:	cmp    al,0x1
   140023f82:	ja     0x140023fc3
   140023f84:	movzx  ecx,WORD PTR [rsp+0x40]
   140023f89:	call   0x140028798
   140023f8e:	cmp    ax,WORD PTR [rsp+0x40]
   140023f93:	jne    0x140024312
   140023f99:	add    edi,0x2
   140023f9c:	test   r13d,r13d
   140023f9f:	je     0x140023fc3
   140023fa1:	mov    eax,0xd
   140023fa6:	mov    ecx,eax
   140023fa8:	mov    WORD PTR [rsp+0x40],ax
   140023fad:	call   0x140028798
   140023fb2:	cmp    ax,WORD PTR [rsp+0x40]
   140023fb7:	jne    0x140024312
   140023fbd:	inc    edi
   140023fbf:	inc    DWORD PTR [rsp+0x48]
   140023fc3:	mov    r13,QWORD PTR [rsp+0x50]
   140023fc8:	mov    eax,ebx
   140023fca:	sub    eax,r14d
   140023fcd:	cmp    eax,r15d
   140023fd0:	jae    0x140023ff8
   140023fd2:	jmp    0x140023dc6
   140023fd7:	mov    al,BYTE PTR [rbx]
   140023fd9:	lea    rdx,[rip+0x2e300]        # 0x1400522e0
   140023fe0:	inc    edi
   140023fe2:	mov    rcx,QWORD PTR [rdx+r13*8]
   140023fe6:	mov    BYTE PTR [r12+rcx*1+0x4c],al
   140023feb:	mov    rax,QWORD PTR [rdx+r13*8]
   140023fef:	mov    DWORD PTR [r12+rax*1+0x50],0x1
   140023ff8:	mov    ebx,DWORD PTR [rsp+0x44]
   140023ffc:	jmp    0x14002431a
   140024001:	mov    ebx,DWORD PTR [rsp+0x44]
   140024005:	jmp    0x14002431e
   14002400a:	lea    rax,[rip+0x2e2cf]        # 0x1400522e0
   140024011:	mov    rcx,QWORD PTR [rax+r13*8]
   140024015:	test   BYTE PTR [r12+rcx*1+0x8],0x80
   14002401b:	je     0x1400242ec
   140024021:	xor    ebx,ebx
   140024023:	mov    r13,r14
   140024026:	mov    DWORD PTR [rsp+0x44],ebx
   14002402a:	test   sil,sil
   14002402d:	jne    0x1400240fb
   140024033:	test   r15d,r15d
   140024036:	je     0x14002434a
   14002403c:	lea    edx,[rbx+0xd]
   14002403f:	mov    ebx,DWORD PTR [rsp+0x48]
   140024043:	lea    rsi,[rbp+0x620]
   14002404a:	xor    ecx,ecx
   14002404c:	mov    eax,r13d
   14002404f:	sub    eax,r14d
   140024052:	cmp    eax,r15d
   140024055:	jae    0x14002407d
   140024057:	mov    al,BYTE PTR [r13+0x0]
   14002405b:	inc    r13
   14002405e:	cmp    al,0xa
   140024060:	jne    0x14002406c
   140024062:	mov    BYTE PTR [rsi],dl
   140024064:	inc    ebx
   140024066:	inc    rsi
   140024069:	inc    rcx
   14002406c:	inc    rcx
   14002406f:	mov    BYTE PTR [rsi],al
   140024071:	inc    rsi
   140024074:	cmp    rcx,0x13ff
   14002407b:	jb     0x14002404c
   14002407d:	and    QWORD PTR [rsp+0x20],0x0
   140024083:	lea    rax,[rbp+0x620]
   14002408a:	mov    r8d,esi
   14002408d:	sub    r8d,eax
   140024090:	mov    rax,QWORD PTR [rsp+0x50]
   140024095:	lea    rcx,[rip+0x2e244]        # 0x1400522e0
   14002409c:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400240a0:	lea    r9,[rsp+0x4c]
   1400240a5:	lea    rdx,[rbp+0x620]
   1400240ac:	mov    rcx,QWORD PTR [r12+rcx*1]
   1400240b0:	mov    DWORD PTR [rsp+0x48],ebx
   1400240b4:	call   QWORD PTR [rip+0x1514e]        # 0x140039208
   1400240ba:	mov    ebx,DWORD PTR [rsp+0x44]
   1400240be:	test   eax,eax
   1400240c0:	je     0x140024312
   1400240c6:	add    edi,DWORD PTR [rsp+0x4c]
   1400240ca:	lea    rax,[rbp+0x620]
   1400240d1:	sub    rsi,rax
   1400240d4:	movsxd rax,DWORD PTR [rsp+0x4c]
   1400240d9:	cmp    rax,rsi
   1400240dc:	jl     0x14002431a
   1400240e2:	mov    eax,r13d
   1400240e5:	mov    edx,0xd
   1400240ea:	sub    eax,r14d
   1400240ed:	cmp    eax,r15d
   1400240f0:	jb     0x14002403f
   1400240f6:	jmp    0x14002431a
   1400240fb:	cmp    sil,0x2
   1400240ff:	jne    0x1400241da
   140024105:	test   r15d,r15d
   140024108:	je     0x14002434a
   14002410e:	mov    edx,0xd
   140024113:	mov    ebx,DWORD PTR [rsp+0x48]
   140024117:	lea    rsi,[rbp+0x620]
   14002411e:	xor    ecx,ecx
   140024120:	mov    eax,r13d
   140024123:	sub    eax,r14d
   140024126:	cmp    eax,r15d
   140024129:	jae    0x14002415c
   14002412b:	movzx  eax,WORD PTR [r13+0x0]
   140024130:	add    r13,0x2
   140024134:	cmp    ax,0xa
   140024138:	jne    0x140024148
   14002413a:	mov    WORD PTR [rsi],dx
   14002413d:	add    ebx,0x2
   140024140:	add    rsi,0x2
   140024144:	add    rcx,0x2
   140024148:	add    rcx,0x2
   14002414c:	mov    WORD PTR [rsi],ax
   14002414f:	add    rsi,0x2
   140024153:	cmp    rcx,0x13fe
   14002415a:	jb     0x140024120
   14002415c:	and    QWORD PTR [rsp+0x20],0x0
   140024162:	lea    rax,[rbp+0x620]
   140024169:	mov    r8d,esi
   14002416c:	sub    r8d,eax
   14002416f:	mov    rax,QWORD PTR [rsp+0x50]
   140024174:	lea    rcx,[rip+0x2e165]        # 0x1400522e0
   14002417b:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002417f:	lea    r9,[rsp+0x4c]
   140024184:	lea    rdx,[rbp+0x620]
   14002418b:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002418f:	mov    DWORD PTR [rsp+0x48],ebx
   140024193:	call   QWORD PTR [rip+0x1506f]        # 0x140039208
   140024199:	mov    ebx,DWORD PTR [rsp+0x44]
   14002419d:	test   eax,eax
   14002419f:	je     0x140024312
   1400241a5:	add    edi,DWORD PTR [rsp+0x4c]
   1400241a9:	lea    rax,[rbp+0x620]
   1400241b0:	sub    rsi,rax
   1400241b3:	movsxd rax,DWORD PTR [rsp+0x4c]
   1400241b8:	cmp    rax,rsi
   1400241bb:	jl     0x14002431a
   1400241c1:	mov    eax,r13d
   1400241c4:	mov    edx,0xd
   1400241c9:	sub    eax,r14d
   1400241cc:	cmp    eax,r15d
   1400241cf:	jb     0x140024113
   1400241d5:	jmp    0x14002431a
   1400241da:	test   r15d,r15d
   1400241dd:	je     0x14002434a
   1400241e3:	mov    r8d,0xd
   1400241e9:	lea    rcx,[rsp+0x70]
   1400241ee:	xor    edx,edx
   1400241f0:	mov    eax,r13d
   1400241f3:	sub    eax,r14d
   1400241f6:	cmp    eax,r15d
   1400241f9:	jae    0x14002422a
   1400241fb:	movzx  eax,WORD PTR [r13+0x0]
   140024200:	add    r13,0x2
   140024204:	cmp    ax,0xa
   140024208:	jne    0x140024216
   14002420a:	mov    WORD PTR [rcx],r8w
   14002420e:	add    rcx,0x2
   140024212:	add    rdx,0x2
   140024216:	add    rdx,0x2
   14002421a:	mov    WORD PTR [rcx],ax
   14002421d:	add    rcx,0x2
   140024221:	cmp    rdx,0x6a8
   140024228:	jb     0x1400241f0
   14002422a:	and    QWORD PTR [rsp+0x38],0x0
   140024230:	and    QWORD PTR [rsp+0x30],0x0
   140024236:	lea    rax,[rsp+0x70]
   14002423b:	sub    ecx,eax
   14002423d:	lea    r8,[rsp+0x70]
   140024242:	mov    DWORD PTR [rsp+0x28],0xd55
   14002424a:	mov    eax,ecx
   14002424c:	mov    ecx,0xfde9
   140024251:	cdq    
   140024252:	sub    eax,edx
   140024254:	xor    edx,edx
   140024256:	sar    eax,1
   140024258:	mov    r9d,eax
   14002425b:	lea    rax,[rbp+0x620]
   140024262:	mov    QWORD PTR [rsp+0x20],rax
   140024267:	call   QWORD PTR [rip+0x1502b]        # 0x140039298
   14002426d:	mov    DWORD PTR [rsp+0x44],eax
   140024271:	test   eax,eax
   140024273:	je     0x140024312
   140024279:	xor    esi,esi
   14002427b:	and    QWORD PTR [rsp+0x20],0x0
   140024281:	mov    r8d,eax
   140024284:	mov    rax,QWORD PTR [rsp+0x50]
   140024289:	movsxd rcx,esi
   14002428c:	lea    rdx,[rbp+0x620]
   140024293:	lea    r9,[rsp+0x4c]
   140024298:	add    rdx,rcx
   14002429b:	lea    rcx,[rip+0x2e03e]        # 0x1400522e0
   1400242a2:	sub    r8d,esi
   1400242a5:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400242a9:	mov    rcx,QWORD PTR [r12+rcx*1]
   1400242ad:	call   QWORD PTR [rip+0x14f55]        # 0x140039208
   1400242b3:	test   eax,eax
   1400242b5:	je     0x1400242c5
   1400242b7:	add    esi,DWORD PTR [rsp+0x4c]
   1400242bb:	mov    eax,DWORD PTR [rsp+0x44]
   1400242bf:	cmp    eax,esi
   1400242c1:	jg     0x14002427b
   1400242c3:	jmp    0x1400242d1
   1400242c5:	call   QWORD PTR [rip+0x15315]        # 0x1400395e0
   1400242cb:	mov    ebx,eax
   1400242cd:	mov    eax,DWORD PTR [rsp+0x44]
   1400242d1:	cmp    eax,esi
   1400242d3:	jg     0x14002431a
   1400242d5:	mov    edi,r13d
   1400242d8:	mov    r8d,0xd
   1400242de:	sub    edi,r14d
   1400242e1:	cmp    edi,r15d
   1400242e4:	jb     0x1400241e9
   1400242ea:	jmp    0x14002431a
   1400242ec:	mov    rcx,QWORD PTR [r12+rcx*1]
   1400242f0:	and    QWORD PTR [rsp+0x20],rdi
   1400242f5:	lea    r9,[rsp+0x4c]
   1400242fa:	mov    r8d,r15d
   1400242fd:	mov    rdx,r14
   140024300:	call   QWORD PTR [rip+0x14f02]        # 0x140039208
   140024306:	test   eax,eax
   140024308:	je     0x140024312
   14002430a:	mov    edi,DWORD PTR [rsp+0x4c]
   14002430e:	xor    ebx,ebx
   140024310:	jmp    0x14002431a
   140024312:	call   QWORD PTR [rip+0x152c8]        # 0x1400395e0
   140024318:	mov    ebx,eax
   14002431a:	test   edi,edi
   14002431c:	jne    0x140024384
   14002431e:	test   ebx,ebx
   140024320:	je     0x14002434a
   140024322:	cmp    ebx,0x5
   140024325:	jne    0x14002433e
   140024327:	call   0x140025380
   14002432c:	mov    DWORD PTR [rax],0x9
   140024332:	call   0x140025310
   140024337:	mov    DWORD PTR [rax],ebx
   140024339:	jmp    0x140023cad
   14002433e:	mov    ecx,ebx
   140024340:	call   0x140025330
   140024345:	jmp    0x140023cad
   14002434a:	mov    rax,QWORD PTR [rsp+0x50]
   14002434f:	lea    rcx,[rip+0x2df8a]        # 0x1400522e0
   140024356:	mov    rax,QWORD PTR [rcx+rax*8]
   14002435a:	test   BYTE PTR [r12+rax*1+0x8],0x40
   140024360:	je     0x14002436c
   140024362:	cmp    BYTE PTR [r14],0x1a
   140024366:	je     0x140023c8a
   14002436c:	call   0x140025380
   140024371:	mov    DWORD PTR [rax],0x1c
   140024377:	call   0x140025310
   14002437c:	and    DWORD PTR [rax],0x0
   14002437f:	jmp    0x140023cad
   140024384:	sub    edi,DWORD PTR [rsp+0x48]
   140024388:	mov    eax,edi
   14002438a:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140024391:	xor    rcx,rsp
   140024394:	call   0x140020e50
   140024399:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400243a1:	add    rsp,0x1b30
   1400243a8:	pop    r15
   1400243aa:	pop    r14
   1400243ac:	pop    r13
   1400243ae:	pop    r12
   1400243b0:	pop    rdi
   1400243b1:	pop    rsi
   1400243b2:	pop    rbp
   1400243b3:	ret    
   1400243b4:	sub    rsp,0x28
   1400243b8:	test   rcx,rcx
   1400243bb:	jne    0x1400243d6
   1400243bd:	call   0x140025380
   1400243c2:	mov    DWORD PTR [rax],0x16
   1400243c8:	call   0x140024554
   1400243cd:	or     rax,0xffffffffffffffff
   1400243d1:	add    rsp,0x28
   1400243d5:	ret    
   1400243d6:	mov    r8,rcx
   1400243d9:	mov    rcx,QWORD PTR [rip+0x2bd38]        # 0x140050118
   1400243e0:	xor    edx,edx
   1400243e2:	add    rsp,0x28
   1400243e6:	rex.W jmp QWORD PTR [rip+0x14ec3]        # 0x1400392b0
   1400243ed:	int3   
   1400243ee:	int3   
   1400243ef:	int3   
   1400243f0:	mov    rax,rsp
   1400243f3:	mov    QWORD PTR [rax+0x10],rbx
   1400243f7:	mov    QWORD PTR [rax+0x18],rsi
   1400243fb:	mov    QWORD PTR [rax+0x20],rdi
   1400243ff:	push   rbp
   140024400:	lea    rbp,[rax-0x4b8]
   140024407:	sub    rsp,0x5b0
   14002440e:	mov    rax,QWORD PTR [rip+0x29033]        # 0x14004d448
   140024415:	xor    rax,rsp
   140024418:	mov    QWORD PTR [rbp+0x4a0],rax
   14002441f:	mov    edi,r8d
   140024422:	mov    esi,edx
   140024424:	mov    ebx,ecx
   140024426:	cmp    ecx,0xffffffff
   140024429:	je     0x140024430
   14002442b:	call   0x140027ed4
   140024430:	and    DWORD PTR [rsp+0x30],0x0
   140024435:	lea    rcx,[rsp+0x34]
   14002443a:	xor    edx,edx
   14002443c:	mov    r8d,0x94
   140024442:	call   0x1400260e0
   140024447:	lea    rax,[rsp+0x30]
   14002444c:	lea    rcx,[rbp-0x30]
   140024450:	mov    QWORD PTR [rsp+0x20],rax
   140024455:	lea    rax,[rbp-0x30]
   140024459:	mov    QWORD PTR [rsp+0x28],rax
   14002445e:	call   0x140026728
   140024463:	mov    rax,QWORD PTR [rbp+0x4b8]
   14002446a:	mov    QWORD PTR [rbp+0xc8],rax
   140024471:	lea    rax,[rbp+0x4b8]
   140024478:	mov    DWORD PTR [rsp+0x30],esi
   14002447c:	add    rax,0x8
   140024480:	mov    DWORD PTR [rsp+0x34],edi
   140024484:	mov    QWORD PTR [rbp+0x68],rax
   140024488:	mov    rax,QWORD PTR [rbp+0x4b8]
   14002448f:	mov    QWORD PTR [rsp+0x40],rax
   140024494:	call   QWORD PTR [rip+0x14de6]        # 0x140039280
   14002449a:	lea    rcx,[rsp+0x20]
   14002449f:	mov    edi,eax
   1400244a1:	call   0x1400268b4
   1400244a6:	test   eax,eax
   1400244a8:	jne    0x1400244ba
   1400244aa:	test   edi,edi
   1400244ac:	jne    0x1400244ba
   1400244ae:	cmp    ebx,0xffffffff
   1400244b1:	je     0x1400244ba
   1400244b3:	mov    ecx,ebx
   1400244b5:	call   0x140027ed4
   1400244ba:	mov    rcx,QWORD PTR [rbp+0x4a0]
   1400244c1:	xor    rcx,rsp
   1400244c4:	call   0x140020e50
   1400244c9:	lea    r11,[rsp+0x5b0]
   1400244d1:	mov    rbx,QWORD PTR [r11+0x18]
   1400244d5:	mov    rsi,QWORD PTR [r11+0x20]
   1400244d9:	mov    rdi,QWORD PTR [r11+0x28]
   1400244dd:	mov    rsp,r11
   1400244e0:	pop    rbp
   1400244e1:	ret    
   1400244e2:	int3   
   1400244e3:	int3   
   1400244e4:	mov    QWORD PTR [rip+0x2c60d],rcx        # 0x140050af8
   1400244eb:	ret    
   1400244ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400244f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400244f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400244fb:	push   rdi
   1400244fc:	sub    rsp,0x30
   140024500:	mov    rbp,rcx
   140024503:	mov    rcx,QWORD PTR [rip+0x2c5ee]        # 0x140050af8
   14002450a:	mov    ebx,r9d
   14002450d:	mov    rdi,r8
   140024510:	mov    rsi,rdx
   140024513:	call   QWORD PTR [rip+0x14ca7]        # 0x1400391c0
   140024519:	mov    r9d,ebx
   14002451c:	mov    r8,rdi
   14002451f:	mov    rdx,rsi
   140024522:	mov    rcx,rbp
   140024525:	test   rax,rax
   140024528:	je     0x140024541
   14002452a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002452f:	mov    rbp,QWORD PTR [rsp+0x48]
   140024534:	mov    rsi,QWORD PTR [rsp+0x50]
   140024539:	add    rsp,0x30
   14002453d:	pop    rdi
   14002453e:	rex.W jmp rax
   140024541:	mov    rax,QWORD PTR [rsp+0x60]
   140024546:	mov    QWORD PTR [rsp+0x20],rax
   14002454b:	call   0x140024574
   140024550:	int3   
   140024551:	int3   
   140024552:	int3   
   140024553:	int3   
   140024554:	sub    rsp,0x38
   140024558:	and    QWORD PTR [rsp+0x20],0x0
   14002455e:	xor    r9d,r9d
   140024561:	xor    r8d,r8d
   140024564:	xor    edx,edx
   140024566:	xor    ecx,ecx
   140024568:	call   0x1400244ec
   14002456d:	add    rsp,0x38
   140024571:	ret    
   140024572:	int3   
   140024573:	int3   
   140024574:	sub    rsp,0x28
   140024578:	mov    ecx,0x17
   14002457d:	call   0x14002a9d6
   140024582:	test   eax,eax
   140024584:	je     0x14002458d
   140024586:	mov    ecx,0x5
   14002458b:	int    0x29
   14002458d:	mov    r8d,0x1
   140024593:	mov    edx,0xc0000417
   140024598:	lea    ecx,[r8+0x1]
   14002459c:	call   0x1400243f0
   1400245a1:	mov    ecx,0xc0000417
   1400245a6:	add    rsp,0x28
   1400245aa:	jmp    0x140026894
   1400245af:	int3   
   1400245b0:	test   ecx,ecx
   1400245b2:	je     0x1400245e6
   1400245b4:	push   rbx
   1400245b5:	sub    rsp,0x20
   1400245b9:	test   DWORD PTR [rdx+0x18],0x1000
   1400245c0:	mov    rbx,rdx
   1400245c3:	je     0x1400245e1
   1400245c5:	mov    rcx,rdx
   1400245c8:	call   0x14002158c
   1400245cd:	and    DWORD PTR [rbx+0x18],0xffffeeff
   1400245d4:	and    DWORD PTR [rbx+0x24],0x0
   1400245d8:	and    QWORD PTR [rbx],0x0
   1400245dc:	and    QWORD PTR [rbx+0x10],0x0
   1400245e1:	add    rsp,0x20
   1400245e5:	pop    rbx
   1400245e6:	ret    
   1400245e7:	int3   
   1400245e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400245ed:	mov    QWORD PTR [rsp+0x10],rdi
   1400245f2:	push   r14
   1400245f4:	sub    rsp,0x20
   1400245f8:	mov    rbx,rcx
   1400245fb:	call   0x140023a40
   140024600:	mov    ecx,eax
   140024602:	call   0x140028444
   140024607:	test   eax,eax
   140024609:	je     0x1400246a4
   14002460f:	call   0x14002142c
   140024614:	add    rax,0x30
   140024618:	cmp    rbx,rax
   14002461b:	jne    0x140024621
   14002461d:	xor    eax,eax
   14002461f:	jmp    0x140024634
   140024621:	call   0x14002142c
   140024626:	add    rax,0x60
   14002462a:	cmp    rbx,rax
   14002462d:	jne    0x1400246a4
   14002462f:	mov    eax,0x1
   140024634:	inc    DWORD PTR [rip+0x2b436]        # 0x14004fa70
   14002463a:	test   DWORD PTR [rbx+0x18],0x10c
   140024641:	jne    0x1400246a4
   140024643:	lea    r14,[rip+0x2c4b6]        # 0x140050b00
   14002464a:	movsxd rdi,eax
   14002464d:	mov    rax,QWORD PTR [r14+rdi*8]
   140024651:	test   rax,rax
   140024654:	jne    0x140024681
   140024656:	mov    ecx,0x1000
   14002465b:	call   0x1400238b8
   140024660:	mov    QWORD PTR [r14+rdi*8],rax
   140024664:	test   rax,rax
   140024667:	jne    0x140024681
   140024669:	lea    rax,[rbx+0x20]
   14002466d:	mov    QWORD PTR [rbx+0x10],rax
   140024671:	mov    QWORD PTR [rbx],rax
   140024674:	mov    eax,0x2
   140024679:	mov    DWORD PTR [rbx+0x24],eax
   14002467c:	mov    DWORD PTR [rbx+0x8],eax
   14002467f:	jmp    0x140024696
   140024681:	mov    QWORD PTR [rbx+0x10],rax
   140024685:	mov    QWORD PTR [rbx],rax
   140024688:	mov    DWORD PTR [rbx+0x24],0x1000
   14002468f:	mov    DWORD PTR [rbx+0x8],0x1000
   140024696:	or     DWORD PTR [rbx+0x18],0x1102
   14002469d:	mov    eax,0x1
   1400246a2:	jmp    0x1400246a6
   1400246a4:	xor    eax,eax
   1400246a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400246ab:	mov    rdi,QWORD PTR [rsp+0x38]
   1400246b0:	add    rsp,0x20
   1400246b4:	pop    r14
   1400246b6:	ret    
   1400246b7:	int3   
   1400246b8:	rex push rbx
   1400246ba:	sub    rsp,0x20
   1400246be:	mov    rbx,rcx
   1400246c1:	mov    BYTE PTR [rcx+0x18],0x0
   1400246c5:	test   rdx,rdx
   1400246c8:	jne    0x140024750
   1400246ce:	call   0x140021ed4
   1400246d3:	mov    QWORD PTR [rbx+0x10],rax
   1400246d7:	mov    rdx,QWORD PTR [rax+0xc0]
   1400246de:	mov    QWORD PTR [rbx],rdx
   1400246e1:	mov    rcx,QWORD PTR [rax+0xb8]
   1400246e8:	mov    QWORD PTR [rbx+0x8],rcx
   1400246ec:	cmp    rdx,QWORD PTR [rip+0x2940d]        # 0x14004db00
   1400246f3:	je     0x14002470b
   1400246f5:	mov    eax,DWORD PTR [rax+0xc8]
   1400246fb:	test   DWORD PTR [rip+0x29aff],eax        # 0x14004e200
   140024701:	jne    0x14002470b
   140024703:	call   0x140026b9c
   140024708:	mov    QWORD PTR [rbx],rax
   14002470b:	mov    rax,QWORD PTR [rip+0x29766]        # 0x14004de78
   140024712:	cmp    QWORD PTR [rbx+0x8],rax
   140024716:	je     0x140024733
   140024718:	mov    rax,QWORD PTR [rbx+0x10]
   14002471c:	mov    ecx,DWORD PTR [rax+0xc8]
   140024722:	test   DWORD PTR [rip+0x29ad8],ecx        # 0x14004e200
   140024728:	jne    0x140024733
   14002472a:	call   0x140026f94
   14002472f:	mov    QWORD PTR [rbx+0x8],rax
   140024733:	mov    rcx,QWORD PTR [rbx+0x10]
   140024737:	mov    eax,DWORD PTR [rcx+0xc8]
   14002473d:	test   al,0x2
   14002473f:	jne    0x140024757
   140024741:	or     eax,0x2
   140024744:	mov    DWORD PTR [rcx+0xc8],eax
   14002474a:	mov    BYTE PTR [rbx+0x18],0x1
   14002474e:	jmp    0x140024757
   140024750:	movups xmm0,XMMWORD PTR [rdx]
   140024753:	movdqu XMMWORD PTR [rcx],xmm0
   140024757:	mov    rax,rbx
   14002475a:	add    rsp,0x20
   14002475e:	pop    rbx
   14002475f:	ret    
   140024760:	mov    QWORD PTR [rsp+0x18],rbx
   140024765:	push   rbp
   140024766:	push   rsi
   140024767:	push   rdi
   140024768:	push   r12
   14002476a:	push   r13
   14002476c:	push   r14
   14002476e:	push   r15
   140024770:	lea    rbp,[rsp-0x1e0]
   140024778:	sub    rsp,0x2e0
   14002477f:	mov    rax,QWORD PTR [rip+0x28cc2]        # 0x14004d448
   140024786:	xor    rax,rsp
   140024789:	mov    QWORD PTR [rbp+0x1d8],rax
   140024790:	xor    eax,eax
   140024792:	mov    rsi,rcx
   140024795:	mov    QWORD PTR [rsp+0x68],rcx
   14002479a:	mov    rdi,rdx
   14002479d:	lea    rcx,[rbp-0x58]
   1400247a1:	mov    rdx,r8
   1400247a4:	mov    r13,r9
   1400247a7:	mov    DWORD PTR [rsp+0x64],eax
   1400247ab:	mov    r14d,eax
   1400247ae:	mov    DWORD PTR [rsp+0x54],eax
   1400247b2:	mov    r12d,eax
   1400247b5:	mov    DWORD PTR [rsp+0x48],eax
   1400247b9:	mov    DWORD PTR [rsp+0x60],eax
   1400247bd:	mov    DWORD PTR [rsp+0x58],eax
   1400247c1:	call   0x1400246b8
   1400247c6:	call   0x140025380
   1400247cb:	mov    QWORD PTR [rbp-0x70],rax
   1400247cf:	call   0x1400227ec
   1400247d4:	xor    r10d,r10d
   1400247d7:	test   eax,eax
   1400247d9:	js     0x14002519c
   1400247df:	test   rsi,rsi
   1400247e2:	je     0x140025189
   1400247e8:	test   BYTE PTR [rsi+0x18],0x40
   1400247ec:	lea    r9,[rip+0xfffffffffffdb80d]        # 0x140000000
   1400247f3:	jne    0x140024884
   1400247f9:	mov    rcx,rsi
   1400247fc:	call   0x140023a40
   140024801:	lea    rdx,[rip+0x28be8]        # 0x14004d3f0
   140024808:	movsxd r9,eax
   14002480b:	lea    ecx,[r9+0x2]
   14002480f:	cmp    ecx,0x1
   140024812:	jbe    0x140024837
   140024814:	mov    r8,r9
   140024817:	mov    rcx,r9
   14002481a:	lea    rax,[rip+0xfffffffffffdb7df]        # 0x140000000
   140024821:	and    r8d,0x1f
   140024825:	sar    rcx,0x5
   140024829:	imul   r8,r8,0x58
   14002482d:	add    r8,QWORD PTR [rax+rcx*8+0x522e0]
   140024835:	jmp    0x14002483a
   140024837:	mov    r8,rdx
   14002483a:	test   BYTE PTR [r8+0x38],0x7f
   14002483f:	jne    0x140025189
   140024845:	lea    eax,[r9+0x2]
   140024849:	cmp    eax,0x1
   14002484c:	jbe    0x140024870
   14002484e:	mov    rdx,r9
   140024851:	mov    rax,r9
   140024854:	lea    r9,[rip+0xfffffffffffdb7a5]        # 0x140000000
   14002485b:	and    edx,0x1f
   14002485e:	sar    rax,0x5
   140024862:	imul   rdx,rdx,0x58
   140024866:	add    rdx,QWORD PTR [r9+rax*8+0x522e0]
   14002486e:	jmp    0x140024877
   140024870:	lea    r9,[rip+0xfffffffffffdb789]        # 0x140000000
   140024877:	test   BYTE PTR [rdx+0x38],0x80
   14002487b:	jne    0x140025189
   140024881:	xor    r10d,r10d
   140024884:	test   rdi,rdi
   140024887:	je     0x140025189
   14002488d:	mov    r15b,BYTE PTR [rdi]
   140024890:	mov    r8d,r10d
   140024893:	mov    DWORD PTR [rsp+0x50],r10d
   140024898:	mov    DWORD PTR [rsp+0x40],r10d
   14002489d:	mov    DWORD PTR [rsp+0x44],r10d
   1400248a2:	mov    edx,r10d
   1400248a5:	mov    QWORD PTR [rbp-0x80],r10
   1400248a9:	test   r15b,r15b
   1400248ac:	je     0x1400251a0
   1400248b2:	mov    rbx,QWORD PTR [rbp-0x60]
   1400248b6:	mov    r11d,0x200
   1400248bc:	inc    rdi
   1400248bf:	mov    QWORD PTR [rbp-0x68],rdi
   1400248c3:	test   r8d,r8d
   1400248c6:	js     0x1400251a0
   1400248cc:	lea    eax,[r15-0x20]
   1400248d0:	cmp    al,0x58
   1400248d2:	ja     0x1400248e6
   1400248d4:	movsx  rax,r15b
   1400248d8:	movsx  ecx,BYTE PTR [rax+r9*1+0x3a480]
   1400248e1:	and    ecx,0xf
   1400248e4:	jmp    0x1400248e9
   1400248e6:	mov    ecx,r10d
   1400248e9:	movsxd rax,edx
   1400248ec:	movsxd rcx,ecx
   1400248ef:	lea    rdx,[rax+rcx*8]
   1400248f3:	movsx  edx,BYTE PTR [rdx+r9*1+0x3a4a0]
   1400248fc:	sar    edx,0x4
   1400248ff:	mov    DWORD PTR [rsp+0x5c],edx
   140024903:	mov    ecx,edx
   140024905:	test   edx,edx
   140024907:	je     0x140025043
   14002490d:	dec    ecx
   14002490f:	je     0x140025164
   140024915:	dec    ecx
   140024917:	je     0x140025114
   14002491d:	dec    ecx
   14002491f:	je     0x1400250d8
   140024925:	dec    ecx
   140024927:	je     0x1400250d0
   14002492d:	dec    ecx
   14002492f:	je     0x14002509a
   140024935:	dec    ecx
   140024937:	je     0x140024fa3
   14002493d:	dec    ecx
   14002493f:	jne    0x140024c06
   140024945:	movsx  ecx,r15b
   140024949:	cmp    ecx,0x64
   14002494c:	jg     0x140024abc
   140024952:	je     0x140024c17
   140024958:	cmp    ecx,0x41
   14002495b:	je     0x140024a91
   140024961:	cmp    ecx,0x43
   140024964:	je     0x140024a37
   14002496a:	lea    eax,[rcx-0x45]
   14002496d:	test   eax,0xfffffffd
   140024972:	je     0x140024a91
   140024978:	cmp    ecx,0x53
   14002497b:	je     0x1400249ea
   14002497d:	cmp    ecx,0x58
   140024980:	je     0x140024b56
   140024986:	cmp    ecx,0x5a
   140024989:	je     0x1400249a2
   14002498b:	cmp    ecx,0x61
   14002498e:	je     0x140024a9d
   140024994:	cmp    ecx,0x63
   140024997:	je     0x140024a45
   14002499d:	jmp    0x140024e22
   1400249a2:	mov    rax,QWORD PTR [r13+0x0]
   1400249a6:	add    r13,0x8
   1400249aa:	test   rax,rax
   1400249ad:	je     0x1400249de
   1400249af:	mov    rbx,QWORD PTR [rax+0x8]
   1400249b3:	test   rbx,rbx
   1400249b6:	je     0x1400249de
   1400249b8:	movsx  eax,WORD PTR [rax]
   1400249bb:	bt     r14d,0xb
   1400249c0:	jae    0x1400249d4
   1400249c2:	cdq    
   1400249c3:	mov    DWORD PTR [rsp+0x58],0x1
   1400249cb:	sub    eax,edx
   1400249cd:	sar    eax,1
   1400249cf:	jmp    0x140024e1e
   1400249d4:	mov    DWORD PTR [rsp+0x58],r10d
   1400249d9:	jmp    0x140024e1e
   1400249de:	mov    rbx,QWORD PTR [rip+0x28cbb]        # 0x14004d6a0
   1400249e5:	jmp    0x140024e13
   1400249ea:	test   r14d,0x830
   1400249f1:	jne    0x1400249f8
   1400249f3:	bts    r14d,0xb
   1400249f8:	mov    rbx,QWORD PTR [r13+0x0]
   1400249fc:	cmp    r12d,0xffffffff
   140024a00:	mov    eax,r12d
   140024a03:	mov    ecx,0x7fffffff
   140024a08:	cmove  eax,ecx
   140024a0b:	add    r13,0x8
   140024a0f:	test   r14d,0x810
   140024a16:	je     0x140024b22
   140024a1c:	test   rbx,rbx
   140024a1f:	mov    DWORD PTR [rsp+0x58],0x1
   140024a27:	cmove  rbx,QWORD PTR [rip+0x28c79]        # 0x14004d6a8
   140024a2f:	mov    rcx,rbx
   140024a32:	jmp    0x140024b16
   140024a37:	test   r14d,0x830
   140024a3e:	jne    0x140024a45
   140024a40:	bts    r14d,0xb
   140024a45:	add    r13,0x8
   140024a49:	test   r14d,0x810
   140024a50:	je     0x140024a79
   140024a52:	movzx  r9d,WORD PTR [r13-0x8]
   140024a57:	lea    rdx,[rbp-0x30]
   140024a5b:	lea    rcx,[rsp+0x44]
   140024a60:	mov    r8,r11
   140024a63:	call   0x1400289ec
   140024a68:	xor    r10d,r10d
   140024a6b:	test   eax,eax
   140024a6d:	je     0x140024a88
   140024a6f:	mov    DWORD PTR [rsp+0x60],0x1
   140024a77:	jmp    0x140024a88
   140024a79:	mov    al,BYTE PTR [r13-0x8]
   140024a7d:	mov    DWORD PTR [rsp+0x44],0x1
   140024a85:	mov    BYTE PTR [rbp-0x30],al
   140024a88:	lea    rbx,[rbp-0x30]
   140024a8c:	jmp    0x140024e22
   140024a91:	mov    DWORD PTR [rsp+0x78],0x1
   140024a99:	add    r15b,0x20
   140024a9d:	or     r14d,0x40
   140024aa1:	lea    rbx,[rbp-0x30]
   140024aa5:	mov    esi,r11d
   140024aa8:	test   r12d,r12d
   140024aab:	jns    0x140024d35
   140024ab1:	mov    r12d,0x6
   140024ab7:	jmp    0x140024d7b
   140024abc:	cmp    ecx,0x65
   140024abf:	jl     0x140024e22
   140024ac5:	cmp    ecx,0x67
   140024ac8:	jle    0x140024a9d
   140024aca:	cmp    ecx,0x69
   140024acd:	je     0x140024c17
   140024ad3:	cmp    ecx,0x6e
   140024ad6:	je     0x140024b99
   140024adc:	cmp    ecx,0x6f
   140024adf:	je     0x140024b82
   140024ae5:	cmp    ecx,0x70
   140024ae8:	je     0x140024b4b
   140024aea:	cmp    ecx,0x73
   140024aed:	je     0x1400249f8
   140024af3:	cmp    ecx,0x75
   140024af6:	je     0x140024c1b
   140024afc:	cmp    ecx,0x78
   140024aff:	jne    0x140024e22
   140024b05:	lea    eax,[rcx-0x51]
   140024b08:	jmp    0x140024b5b
   140024b0a:	dec    eax
   140024b0c:	cmp    WORD PTR [rcx],r10w
   140024b10:	je     0x140024b1a
   140024b12:	add    rcx,0x2
   140024b16:	test   eax,eax
   140024b18:	jne    0x140024b0a
   140024b1a:	sub    rcx,rbx
   140024b1d:	sar    rcx,1
   140024b20:	jmp    0x140024b42
   140024b22:	test   rbx,rbx
   140024b25:	cmove  rbx,QWORD PTR [rip+0x28b73]        # 0x14004d6a0
   140024b2d:	mov    rcx,rbx
   140024b30:	jmp    0x140024b3c
   140024b32:	dec    eax
   140024b34:	cmp    BYTE PTR [rcx],r10b
   140024b37:	je     0x140024b40
   140024b39:	inc    rcx
   140024b3c:	test   eax,eax
   140024b3e:	jne    0x140024b32
   140024b40:	sub    ecx,ebx
   140024b42:	mov    DWORD PTR [rsp+0x44],ecx
   140024b46:	jmp    0x140024e22
   140024b4b:	mov    r12d,0x10
   140024b51:	bts    r14d,0xf
   140024b56:	mov    eax,0x7
   140024b5b:	mov    DWORD PTR [rsp+0x64],eax
   140024b5f:	mov    r9d,0x10
   140024b65:	test   r14b,r14b
   140024b68:	jns    0x140024c21
   140024b6e:	add    al,0x51
   140024b70:	mov    BYTE PTR [rsp+0x4c],0x30
   140024b75:	lea    edx,[r9-0xe]
   140024b79:	mov    BYTE PTR [rsp+0x4d],al
   140024b7d:	jmp    0x140024c25
   140024b82:	mov    r9d,0x8
   140024b88:	test   r14b,r14b
   140024b8b:	jns    0x140024c21
   140024b91:	or     r14d,r11d
   140024b94:	jmp    0x140024c21
   140024b99:	mov    rdi,QWORD PTR [r13+0x0]
   140024b9d:	add    r13,0x8
   140024ba1:	call   0x1400218a8
   140024ba6:	xor    r10d,r10d
   140024ba9:	test   eax,eax
   140024bab:	je     0x140025189
   140024bb1:	mov    eax,DWORD PTR [rsp+0x50]
   140024bb5:	test   r14b,0x20
   140024bb9:	je     0x140024bc0
   140024bbb:	mov    WORD PTR [rdi],ax
   140024bbe:	jmp    0x140024bc2
   140024bc0:	mov    DWORD PTR [rdi],eax
   140024bc2:	mov    DWORD PTR [rsp+0x60],0x1
   140024bca:	mov    r8d,DWORD PTR [rsp+0x50]
   140024bcf:	mov    rax,QWORD PTR [rbp-0x80]
   140024bd3:	test   rax,rax
   140024bd6:	je     0x140024bec
   140024bd8:	mov    rcx,rax
   140024bdb:	call   0x140023328
   140024be0:	mov    r8d,DWORD PTR [rsp+0x50]
   140024be5:	xor    r10d,r10d
   140024be8:	mov    QWORD PTR [rbp-0x80],r10
   140024bec:	mov    rsi,QWORD PTR [rsp+0x68]
   140024bf1:	mov    rdi,QWORD PTR [rbp-0x68]
   140024bf5:	mov    edx,DWORD PTR [rsp+0x5c]
   140024bf9:	mov    r11d,0x200
   140024bff:	lea    r9,[rip+0xfffffffffffdb3fa]        # 0x140000000
   140024c06:	mov    r15b,BYTE PTR [rdi]
   140024c09:	test   r15b,r15b
   140024c0c:	je     0x1400251a0
   140024c12:	jmp    0x1400248bc
   140024c17:	or     r14d,0x40
   140024c1b:	mov    r9d,0xa
   140024c21:	mov    edx,DWORD PTR [rsp+0x48]
   140024c25:	mov    eax,0x8000
   140024c2a:	test   eax,r14d
   140024c2d:	je     0x140024c39
   140024c2f:	mov    r8,QWORD PTR [r13+0x0]
   140024c33:	add    r13,0x8
   140024c37:	jmp    0x140024c73
   140024c39:	bt     r14d,0xc
   140024c3e:	jb     0x140024c2f
   140024c40:	add    r13,0x8
   140024c44:	test   r14b,0x20
   140024c48:	je     0x140024c63
   140024c4a:	mov    QWORD PTR [rsp+0x70],r13
   140024c4f:	test   r14b,0x40
   140024c53:	je     0x140024c5c
   140024c55:	movsx  r8,WORD PTR [r13-0x8]
   140024c5a:	jmp    0x140024c78
   140024c5c:	movzx  r8d,WORD PTR [r13-0x8]
   140024c61:	jmp    0x140024c78
   140024c63:	test   r14b,0x40
   140024c67:	je     0x140024c6f
   140024c69:	movsxd r8,DWORD PTR [r13-0x8]
   140024c6d:	jmp    0x140024c73
   140024c6f:	mov    r8d,DWORD PTR [r13-0x8]
   140024c73:	mov    QWORD PTR [rsp+0x70],r13
   140024c78:	test   r14b,0x40
   140024c7c:	je     0x140024c8b
   140024c7e:	test   r8,r8
   140024c81:	jns    0x140024c8b
   140024c83:	neg    r8
   140024c86:	bts    r14d,0x8
   140024c8b:	test   eax,r14d
   140024c8e:	jne    0x140024c9a
   140024c90:	bt     r14d,0xc
   140024c95:	jb     0x140024c9a
   140024c97:	mov    r8d,r8d
   140024c9a:	test   r12d,r12d
   140024c9d:	jns    0x140024ca7
   140024c9f:	mov    r12d,0x1
   140024ca5:	jmp    0x140024cb2
   140024ca7:	and    r14d,0xfffffff7
   140024cab:	cmp    r12d,r11d
   140024cae:	cmovg  r12d,r11d
   140024cb2:	mov    r13d,DWORD PTR [rsp+0x64]
   140024cb7:	mov    rax,r8
   140024cba:	lea    rbx,[rbp+0x1cf]
   140024cc1:	neg    rax
   140024cc4:	sbb    ecx,ecx
   140024cc6:	and    ecx,edx
   140024cc8:	mov    DWORD PTR [rsp+0x48],ecx
   140024ccc:	mov    ecx,r12d
   140024ccf:	dec    r12d
   140024cd2:	test   ecx,ecx
   140024cd4:	jg     0x140024cdb
   140024cd6:	test   r8,r8
   140024cd9:	je     0x140024cfb
   140024cdb:	xor    edx,edx
   140024cdd:	mov    rax,r8
   140024ce0:	movsxd rcx,r9d
   140024ce3:	div    rcx
   140024ce6:	mov    r8,rax
   140024ce9:	lea    eax,[rdx+0x30]
   140024cec:	cmp    eax,0x39
   140024cef:	jle    0x140024cf4
   140024cf1:	add    eax,r13d
   140024cf4:	mov    BYTE PTR [rbx],al
   140024cf6:	dec    rbx
   140024cf9:	jmp    0x140024ccc
   140024cfb:	mov    r13,QWORD PTR [rsp+0x70]
   140024d00:	lea    rax,[rbp+0x1cf]
   140024d07:	sub    eax,ebx
   140024d09:	inc    rbx
   140024d0c:	mov    DWORD PTR [rsp+0x44],eax
   140024d10:	test   r11d,r14d
   140024d13:	je     0x140024e22
   140024d19:	test   eax,eax
   140024d1b:	je     0x140024d26
   140024d1d:	cmp    BYTE PTR [rbx],0x30
   140024d20:	je     0x140024e22
   140024d26:	dec    rbx
   140024d29:	inc    DWORD PTR [rsp+0x44]
   140024d2d:	mov    BYTE PTR [rbx],0x30
   140024d30:	jmp    0x140024e22
   140024d35:	jne    0x140024d45
   140024d37:	cmp    r15b,0x67
   140024d3b:	jne    0x140024d7b
   140024d3d:	mov    r12d,0x1
   140024d43:	jmp    0x140024d7b
   140024d45:	cmp    r12d,r11d
   140024d48:	cmovg  r12d,r11d
   140024d4c:	cmp    r12d,0xa3
   140024d53:	jle    0x140024d7b
   140024d55:	lea    edi,[r12+0x15d]
   140024d5d:	movsxd rcx,edi
   140024d60:	call   0x1400238b8
   140024d65:	mov    QWORD PTR [rbp-0x80],rax
   140024d69:	test   rax,rax
   140024d6c:	je     0x140024d75
   140024d6e:	mov    rbx,rax
   140024d71:	mov    esi,edi
   140024d73:	jmp    0x140024d7b
   140024d75:	mov    r12d,0xa3
   140024d7b:	mov    rax,QWORD PTR [r13+0x0]
   140024d7f:	mov    rcx,QWORD PTR [rip+0x2945a]        # 0x14004e1e0
   140024d86:	add    r13,0x8
   140024d8a:	movsx  edi,r15b
   140024d8e:	movsxd rsi,esi
   140024d91:	mov    QWORD PTR [rbp-0x60],rax
   140024d95:	call   QWORD PTR [rip+0x14425]        # 0x1400391c0
   140024d9b:	lea    rcx,[rbp-0x58]
   140024d9f:	mov    r9d,edi
   140024da2:	mov    QWORD PTR [rsp+0x30],rcx
   140024da7:	mov    ecx,DWORD PTR [rsp+0x78]
   140024dab:	mov    r8,rsi
   140024dae:	mov    DWORD PTR [rsp+0x28],ecx
   140024db2:	lea    rcx,[rbp-0x60]
   140024db6:	mov    rdx,rbx
   140024db9:	mov    DWORD PTR [rsp+0x20],r12d
   140024dbe:	call   rax
   140024dc0:	mov    edi,r14d
   140024dc3:	and    edi,0x80
   140024dc9:	je     0x140024de6
   140024dcb:	test   r12d,r12d
   140024dce:	jne    0x140024de6
   140024dd0:	mov    rcx,QWORD PTR [rip+0x29421]        # 0x14004e1f8
   140024dd7:	call   QWORD PTR [rip+0x143e3]        # 0x1400391c0
   140024ddd:	lea    rdx,[rbp-0x58]
   140024de1:	mov    rcx,rbx
   140024de4:	call   rax
   140024de6:	cmp    r15b,0x67
   140024dea:	jne    0x140024e06
   140024dec:	test   edi,edi
   140024dee:	jne    0x140024e06
   140024df0:	mov    rcx,QWORD PTR [rip+0x293f9]        # 0x14004e1f0
   140024df7:	call   QWORD PTR [rip+0x143c3]        # 0x1400391c0
   140024dfd:	lea    rdx,[rbp-0x58]
   140024e01:	mov    rcx,rbx
   140024e04:	call   rax
   140024e06:	cmp    BYTE PTR [rbx],0x2d
   140024e09:	jne    0x140024e13
   140024e0b:	bts    r14d,0x8
   140024e10:	inc    rbx
   140024e13:	mov    rcx,rbx
   140024e16:	call   0x1400278e0
   140024e1b:	xor    r10d,r10d
   140024e1e:	mov    DWORD PTR [rsp+0x44],eax
   140024e22:	cmp    DWORD PTR [rsp+0x60],r10d
   140024e27:	jne    0x140024bca
   140024e2d:	test   r14b,0x40
   140024e31:	je     0x140024e64
   140024e33:	bt     r14d,0x8
   140024e38:	jae    0x140024e41
   140024e3a:	mov    BYTE PTR [rsp+0x4c],0x2d
   140024e3f:	jmp    0x140024e4c
   140024e41:	test   r14b,0x1
   140024e45:	je     0x140024e57
   140024e47:	mov    BYTE PTR [rsp+0x4c],0x2b
   140024e4c:	mov    edi,0x1
   140024e51:	mov    DWORD PTR [rsp+0x48],edi
   140024e55:	jmp    0x140024e68
   140024e57:	test   r14b,0x2
   140024e5b:	je     0x140024e64
   140024e5d:	mov    BYTE PTR [rsp+0x4c],0x20
   140024e62:	jmp    0x140024e4c
   140024e64:	mov    edi,DWORD PTR [rsp+0x48]
   140024e68:	mov    esi,DWORD PTR [rsp+0x54]
   140024e6c:	mov    r15,QWORD PTR [rsp+0x68]
   140024e71:	sub    esi,DWORD PTR [rsp+0x44]
   140024e75:	sub    esi,edi
   140024e77:	test   r14b,0xc
   140024e7b:	jne    0x140024e8e
   140024e7d:	lea    r9,[rsp+0x40]
   140024e82:	mov    r8,r15
   140024e85:	mov    edx,esi
   140024e87:	mov    cl,0x20
   140024e89:	call   0x140025228
   140024e8e:	mov    rax,QWORD PTR [rbp-0x70]
   140024e92:	lea    r9,[rsp+0x40]
   140024e97:	lea    rcx,[rsp+0x4c]
   140024e9c:	mov    r8,r15
   140024e9f:	mov    edx,edi
   140024ea1:	mov    QWORD PTR [rsp+0x20],rax
   140024ea6:	call   0x14002527c
   140024eab:	test   r14b,0x8
   140024eaf:	je     0x140024ec8
   140024eb1:	test   r14b,0x4
   140024eb5:	jne    0x140024ec8
   140024eb7:	lea    r9,[rsp+0x40]
   140024ebc:	mov    r8,r15
   140024ebf:	mov    edx,esi
   140024ec1:	mov    cl,0x30
   140024ec3:	call   0x140025228
   140024ec8:	cmp    DWORD PTR [rsp+0x58],0x0
   140024ecd:	mov    edi,DWORD PTR [rsp+0x44]
   140024ed1:	je     0x140024f45
   140024ed3:	test   edi,edi
   140024ed5:	jle    0x140024f45
   140024ed7:	mov    r15,rbx
   140024eda:	movzx  r9d,WORD PTR [r15]
   140024ede:	lea    rdx,[rbp+0x1d0]
   140024ee5:	lea    rcx,[rbp-0x78]
   140024ee9:	mov    r8d,0x6
   140024eef:	dec    edi
   140024ef1:	lea    r15,[r15+0x2]
   140024ef5:	call   0x1400289ec
   140024efa:	xor    r10d,r10d
   140024efd:	test   eax,eax
   140024eff:	jne    0x140024f35
   140024f01:	mov    edx,DWORD PTR [rbp-0x78]
   140024f04:	test   edx,edx
   140024f06:	je     0x140024f35
   140024f08:	mov    rax,QWORD PTR [rbp-0x70]
   140024f0c:	mov    r8,QWORD PTR [rsp+0x68]
   140024f11:	lea    r9,[rsp+0x40]
   140024f16:	lea    rcx,[rbp+0x1d0]
   140024f1d:	mov    QWORD PTR [rsp+0x20],rax
   140024f22:	call   0x14002527c
   140024f27:	xor    r10d,r10d
   140024f2a:	test   edi,edi
   140024f2c:	jne    0x140024eda
   140024f2e:	mov    r15,QWORD PTR [rsp+0x68]
   140024f33:	jmp    0x140024f63
   140024f35:	mov    r15,QWORD PTR [rsp+0x68]
   140024f3a:	or     r8d,0xffffffff
   140024f3e:	mov    DWORD PTR [rsp+0x40],r8d
   140024f43:	jmp    0x140024f68
   140024f45:	mov    rax,QWORD PTR [rbp-0x70]
   140024f49:	lea    r9,[rsp+0x40]
   140024f4e:	mov    r8,r15
   140024f51:	mov    edx,edi
   140024f53:	mov    rcx,rbx
   140024f56:	mov    QWORD PTR [rsp+0x20],rax
   140024f5b:	call   0x14002527c
   140024f60:	xor    r10d,r10d
   140024f63:	mov    r8d,DWORD PTR [rsp+0x40]
   140024f68:	mov    DWORD PTR [rsp+0x50],r8d
   140024f6d:	test   r8d,r8d
   140024f70:	js     0x140024bcf
   140024f76:	test   r14b,0x4
   140024f7a:	je     0x140024bcf
   140024f80:	lea    r9,[rsp+0x40]
   140024f85:	mov    r8,r15
   140024f88:	mov    edx,esi
   140024f8a:	mov    cl,0x20
   140024f8c:	call   0x140025228
   140024f91:	mov    r8d,DWORD PTR [rsp+0x40]
   140024f96:	xor    r10d,r10d
   140024f99:	mov    DWORD PTR [rsp+0x50],r8d
   140024f9e:	jmp    0x140024bcf
   140024fa3:	cmp    r15b,0x49
   140024fa7:	je     0x140024fed
   140024fa9:	cmp    r15b,0x68
   140024fad:	je     0x140024fe4
   140024faf:	cmp    r15b,0x6c
   140024fb3:	je     0x140024fc9
   140024fb5:	cmp    r15b,0x77
   140024fb9:	jne    0x140024c06
   140024fbf:	bts    r14d,0xb
   140024fc4:	jmp    0x140024c06
   140024fc9:	cmp    BYTE PTR [rdi],0x6c
   140024fcc:	jne    0x140024fdb
   140024fce:	inc    rdi
   140024fd1:	bts    r14d,0xc
   140024fd6:	jmp    0x140024c06
   140024fdb:	or     r14d,0x10
   140024fdf:	jmp    0x140024c06
   140024fe4:	or     r14d,0x20
   140024fe8:	jmp    0x140024c06
   140024fed:	mov    al,BYTE PTR [rdi]
   140024fef:	bts    r14d,0xf
   140024ff4:	cmp    al,0x36
   140024ff6:	jne    0x14002500c
   140024ff8:	cmp    BYTE PTR [rdi+0x1],0x34
   140024ffc:	jne    0x14002500c
   140024ffe:	add    rdi,0x2
   140025002:	bts    r14d,0xf
   140025007:	jmp    0x140024c06
   14002500c:	cmp    al,0x33
   14002500e:	jne    0x140025024
   140025010:	cmp    BYTE PTR [rdi+0x1],0x32
   140025014:	jne    0x140025024
   140025016:	add    rdi,0x2
   14002501a:	btr    r14d,0xf
   14002501f:	jmp    0x140024c06
   140025024:	sub    al,0x58
   140025026:	cmp    al,0x20
   140025028:	ja     0x14002503e
   14002502a:	movabs rcx,0x120821001
   140025034:	bt     rcx,rax
   140025038:	jb     0x140024c06
   14002503e:	mov    DWORD PTR [rsp+0x5c],r10d
   140025043:	lea    rdx,[rbp-0x58]
   140025047:	movzx  ecx,r15b
   14002504b:	mov    DWORD PTR [rsp+0x58],r10d
   140025050:	call   0x1400283ac
   140025055:	test   eax,eax
   140025057:	je     0x140025078
   140025059:	lea    r8,[rsp+0x40]
   14002505e:	mov    rdx,rsi
   140025061:	mov    cl,r15b
   140025064:	call   0x1400251e0
   140025069:	mov    r15b,BYTE PTR [rdi]
   14002506c:	inc    rdi
   14002506f:	test   r15b,r15b
   140025072:	je     0x140025189
   140025078:	lea    r8,[rsp+0x40]
   14002507d:	mov    rdx,rsi
   140025080:	mov    cl,r15b
   140025083:	call   0x1400251e0
   140025088:	mov    r8d,DWORD PTR [rsp+0x40]
   14002508d:	xor    r10d,r10d
   140025090:	mov    DWORD PTR [rsp+0x50],r8d
   140025095:	jmp    0x140024bf5
   14002509a:	cmp    r15b,0x2a
   14002509e:	jne    0x1400250ba
   1400250a0:	mov    r12d,DWORD PTR [r13+0x0]
   1400250a4:	add    r13,0x8
   1400250a8:	test   r12d,r12d
   1400250ab:	jns    0x140024c06
   1400250b1:	or     r12d,0xffffffff
   1400250b5:	jmp    0x140024c06
   1400250ba:	lea    r12d,[r12+r12*4]
   1400250be:	movsx  eax,r15b
   1400250c2:	lea    r12d,[r12-0x18]
   1400250c7:	lea    r12d,[rax+r12*2]
   1400250cb:	jmp    0x140024c06
   1400250d0:	mov    r12d,r10d
   1400250d3:	jmp    0x140024c06
   1400250d8:	cmp    r15b,0x2a
   1400250dc:	jne    0x1400250fa
   1400250de:	mov    eax,DWORD PTR [r13+0x0]
   1400250e2:	add    r13,0x8
   1400250e6:	mov    DWORD PTR [rsp+0x54],eax
   1400250ea:	test   eax,eax
   1400250ec:	jns    0x140024c06
   1400250f2:	or     r14d,0x4
   1400250f6:	neg    eax
   1400250f8:	jmp    0x14002510b
   1400250fa:	mov    eax,DWORD PTR [rsp+0x54]
   1400250fe:	lea    ecx,[rax+rax*4]
   140025101:	movsx  eax,r15b
   140025105:	lea    eax,[rax+rcx*2]
   140025108:	add    eax,0xffffffd0
   14002510b:	mov    DWORD PTR [rsp+0x54],eax
   14002510f:	jmp    0x140024c06
   140025114:	cmp    r15b,0x20
   140025118:	je     0x14002515b
   14002511a:	cmp    r15b,0x23
   14002511e:	je     0x140025151
   140025120:	cmp    r15b,0x2b
   140025124:	je     0x140025148
   140025126:	cmp    r15b,0x2d
   14002512a:	je     0x14002513f
   14002512c:	cmp    r15b,0x30
   140025130:	jne    0x140024c06
   140025136:	or     r14d,0x8
   14002513a:	jmp    0x140024c06
   14002513f:	or     r14d,0x4
   140025143:	jmp    0x140024c06
   140025148:	or     r14d,0x1
   14002514c:	jmp    0x140024c06
   140025151:	bts    r14d,0x7
   140025156:	jmp    0x140024c06
   14002515b:	or     r14d,0x2
   14002515f:	jmp    0x140024c06
   140025164:	mov    DWORD PTR [rsp+0x78],r10d
   140025169:	mov    DWORD PTR [rsp+0x60],r10d
   14002516e:	mov    DWORD PTR [rsp+0x54],r10d
   140025173:	mov    DWORD PTR [rsp+0x48],r10d
   140025178:	mov    r14d,r10d
   14002517b:	or     r12d,0xffffffff
   14002517f:	mov    DWORD PTR [rsp+0x58],r10d
   140025184:	jmp    0x140024c06
   140025189:	call   0x140025380
   14002518e:	mov    DWORD PTR [rax],0x16
   140025194:	call   0x140024554
   140025199:	xor    r10d,r10d
   14002519c:	or     r8d,0xffffffff
   1400251a0:	cmp    BYTE PTR [rbp-0x40],r10b
   1400251a4:	je     0x1400251b1
   1400251a6:	mov    rcx,QWORD PTR [rbp-0x48]
   1400251aa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400251b1:	mov    eax,r8d
   1400251b4:	mov    rcx,QWORD PTR [rbp+0x1d8]
   1400251bb:	xor    rcx,rsp
   1400251be:	call   0x140020e50
   1400251c3:	mov    rbx,QWORD PTR [rsp+0x330]
   1400251cb:	add    rsp,0x2e0
   1400251d2:	pop    r15
   1400251d4:	pop    r14
   1400251d6:	pop    r13
   1400251d8:	pop    r12
   1400251da:	pop    rdi
   1400251db:	pop    rsi
   1400251dc:	pop    rbp
   1400251dd:	ret    
   1400251de:	int3   
   1400251df:	int3   
   1400251e0:	rex push rbx
   1400251e2:	sub    rsp,0x20
   1400251e6:	test   BYTE PTR [rdx+0x18],0x40
   1400251ea:	mov    rbx,r8
   1400251ed:	je     0x1400251fb
   1400251ef:	cmp    QWORD PTR [rdx+0x10],0x0
   1400251f4:	jne    0x1400251fb
   1400251f6:	inc    DWORD PTR [r8]
   1400251f9:	jmp    0x140025220
   1400251fb:	dec    DWORD PTR [rdx+0x8]
   1400251fe:	js     0x14002520d
   140025200:	mov    rax,QWORD PTR [rdx]
   140025203:	mov    BYTE PTR [rax],cl
   140025205:	inc    QWORD PTR [rdx]
   140025208:	movzx  eax,cl
   14002520b:	jmp    0x140025215
   14002520d:	movsx  ecx,cl
   140025210:	call   0x1400253f0
   140025215:	cmp    eax,0xffffffff
   140025218:	jne    0x14002521e
   14002521a:	or     DWORD PTR [rbx],eax
   14002521c:	jmp    0x140025220
   14002521e:	inc    DWORD PTR [rbx]
   140025220:	add    rsp,0x20
   140025224:	pop    rbx
   140025225:	ret    
   140025226:	int3   
   140025227:	int3   
   140025228:	test   edx,edx
   14002522a:	jle    0x140025278
   14002522c:	mov    QWORD PTR [rsp+0x8],rbx
   140025231:	mov    QWORD PTR [rsp+0x10],rbp
   140025236:	mov    QWORD PTR [rsp+0x18],rsi
   14002523b:	push   rdi
   14002523c:	sub    rsp,0x20
   140025240:	mov    rdi,r9
   140025243:	mov    rsi,r8
   140025246:	mov    ebx,edx
   140025248:	mov    bpl,cl
   14002524b:	mov    r8,rdi
   14002524e:	mov    rdx,rsi
   140025251:	mov    cl,bpl
   140025254:	dec    ebx
   140025256:	call   0x1400251e0
   14002525b:	cmp    DWORD PTR [rdi],0xffffffff
   14002525e:	je     0x140025264
   140025260:	test   ebx,ebx
   140025262:	jg     0x14002524b
   140025264:	mov    rbx,QWORD PTR [rsp+0x30]
   140025269:	mov    rbp,QWORD PTR [rsp+0x38]
   14002526e:	mov    rsi,QWORD PTR [rsp+0x40]
   140025273:	add    rsp,0x20
   140025277:	pop    rdi
   140025278:	ret    
   140025279:	int3   
   14002527a:	int3   
   14002527b:	int3   
   14002527c:	mov    QWORD PTR [rsp+0x8],rbx
   140025281:	mov    QWORD PTR [rsp+0x10],rbp
   140025286:	mov    QWORD PTR [rsp+0x18],rsi
   14002528b:	push   rdi
   14002528c:	push   r14
   14002528e:	push   r15
   140025290:	sub    rsp,0x20
   140025294:	test   BYTE PTR [r8+0x18],0x40
   140025299:	mov    rbx,QWORD PTR [rsp+0x60]
   14002529e:	mov    rdi,r9
   1400252a1:	mov    r15d,DWORD PTR [rbx]
   1400252a4:	mov    rbp,r8
   1400252a7:	mov    esi,edx
   1400252a9:	mov    r14,rcx
   1400252ac:	je     0x1400252ba
   1400252ae:	cmp    QWORD PTR [r8+0x10],0x0
   1400252b3:	jne    0x1400252ba
   1400252b5:	add    DWORD PTR [r9],edx
   1400252b8:	jmp    0x1400252f7
   1400252ba:	and    DWORD PTR [rbx],0x0
   1400252bd:	test   edx,edx
   1400252bf:	jle    0x1400252f4
   1400252c1:	mov    cl,BYTE PTR [r14]
   1400252c4:	mov    r8,rdi
   1400252c7:	mov    rdx,rbp
   1400252ca:	dec    esi
   1400252cc:	call   0x1400251e0
   1400252d1:	inc    r14
   1400252d4:	cmp    DWORD PTR [rdi],0xffffffff
   1400252d7:	jne    0x1400252eb
   1400252d9:	cmp    DWORD PTR [rbx],0x2a
   1400252dc:	jne    0x1400252ef
   1400252de:	mov    r8,rdi
   1400252e1:	mov    rdx,rbp
   1400252e4:	mov    cl,0x3f
   1400252e6:	call   0x1400251e0
   1400252eb:	test   esi,esi
   1400252ed:	jg     0x1400252c1
   1400252ef:	cmp    DWORD PTR [rbx],0x0
   1400252f2:	jne    0x1400252f7
   1400252f4:	mov    DWORD PTR [rbx],r15d
   1400252f7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400252fc:	mov    rbp,QWORD PTR [rsp+0x48]
   140025301:	mov    rsi,QWORD PTR [rsp+0x50]
   140025306:	add    rsp,0x20
   14002530a:	pop    r15
   14002530c:	pop    r14
   14002530e:	pop    rdi
   14002530f:	ret    
   140025310:	sub    rsp,0x28
   140025314:	call   0x140021ef8
   140025319:	test   rax,rax
   14002531c:	jne    0x140025327
   14002531e:	lea    rax,[rip+0x284f7]        # 0x14004d81c
   140025325:	jmp    0x14002532b
   140025327:	add    rax,0x14
   14002532b:	add    rsp,0x28
   14002532f:	ret    
   140025330:	mov    QWORD PTR [rsp+0x8],rbx
   140025335:	push   rdi
   140025336:	sub    rsp,0x20
   14002533a:	mov    edi,ecx
   14002533c:	call   0x140021ef8
   140025341:	test   rax,rax
   140025344:	jne    0x14002534f
   140025346:	lea    rax,[rip+0x284cf]        # 0x14004d81c
   14002534d:	jmp    0x140025353
   14002534f:	add    rax,0x14
   140025353:	mov    DWORD PTR [rax],edi
   140025355:	call   0x140021ef8
   14002535a:	lea    rbx,[rip+0x284b7]        # 0x14004d818
   140025361:	test   rax,rax
   140025364:	je     0x14002536a
   140025366:	lea    rbx,[rax+0x10]
   14002536a:	mov    ecx,edi
   14002536c:	call   0x1400253a0
   140025371:	mov    DWORD PTR [rbx],eax
   140025373:	mov    rbx,QWORD PTR [rsp+0x30]
   140025378:	add    rsp,0x20
   14002537c:	pop    rdi
   14002537d:	ret    
   14002537e:	int3   
   14002537f:	int3   
   140025380:	sub    rsp,0x28
   140025384:	call   0x140021ef8
   140025389:	test   rax,rax
   14002538c:	jne    0x140025397
   14002538e:	lea    rax,[rip+0x28483]        # 0x14004d818
   140025395:	jmp    0x14002539b
   140025397:	add    rax,0x10
   14002539b:	add    rsp,0x28
   14002539f:	ret    
   1400253a0:	lea    r10,[rip+0x28309]        # 0x14004d6b0
   1400253a7:	xor    edx,edx
   1400253a9:	mov    r8,r10
   1400253ac:	lea    r9d,[rdx+0x8]
   1400253b0:	cmp    ecx,DWORD PTR [r8]
   1400253b3:	je     0x1400253e4
   1400253b5:	inc    edx
   1400253b7:	add    r8,r9
   1400253ba:	movsxd rax,edx
   1400253bd:	cmp    rax,0x2d
   1400253c1:	jb     0x1400253b0
   1400253c3:	lea    eax,[rcx-0x13]
   1400253c6:	cmp    eax,0x11
   1400253c9:	ja     0x1400253d1
   1400253cb:	mov    eax,0xd
   1400253d0:	ret    
   1400253d1:	add    ecx,0xffffff44
   1400253d7:	mov    eax,0x16
   1400253dc:	cmp    ecx,0xe
   1400253df:	cmovbe eax,r9d
   1400253e3:	ret    
   1400253e4:	movsxd rax,edx
   1400253e7:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   1400253ec:	ret    
   1400253ed:	int3   
   1400253ee:	int3   
   1400253ef:	int3   
   1400253f0:	mov    rax,rsp
   1400253f3:	mov    QWORD PTR [rax+0x10],rbx
   1400253f7:	mov    QWORD PTR [rax+0x18],rbp
   1400253fb:	mov    QWORD PTR [rax+0x20],rsi
   1400253ff:	mov    DWORD PTR [rax+0x8],ecx
   140025402:	push   rdi
   140025403:	sub    rsp,0x20
   140025407:	mov    rbx,rdx
   14002540a:	call   0x1400227ec
   14002540f:	xor    edi,edi
   140025411:	test   eax,eax
   140025413:	jns    0x14002541d
   140025415:	or     eax,0xffffffff
   140025418:	jmp    0x140025571
   14002541d:	mov    rcx,rbx
   140025420:	call   0x140023a40
   140025425:	mov    ecx,DWORD PTR [rbx+0x18]
   140025428:	movsxd rsi,eax
   14002542b:	test   cl,0x82
   14002542e:	jne    0x140025441
   140025430:	call   0x140025380
   140025435:	mov    DWORD PTR [rax],0x9
   14002543b:	or     DWORD PTR [rbx+0x18],0x20
   14002543f:	jmp    0x140025415
   140025441:	test   cl,0x40
   140025444:	je     0x140025453
   140025446:	call   0x140025380
   14002544b:	mov    DWORD PTR [rax],0x22
   140025451:	jmp    0x14002543b
   140025453:	test   cl,0x1
   140025456:	je     0x140025471
   140025458:	mov    DWORD PTR [rbx+0x8],edi
   14002545b:	test   cl,0x10
   14002545e:	je     0x1400254ed
   140025464:	mov    rax,QWORD PTR [rbx+0x10]
   140025468:	and    ecx,0xfffffffe
   14002546b:	mov    QWORD PTR [rbx],rax
   14002546e:	mov    DWORD PTR [rbx+0x18],ecx
   140025471:	mov    eax,DWORD PTR [rbx+0x18]
   140025474:	mov    DWORD PTR [rbx+0x8],edi
   140025477:	and    eax,0xffffffef
   14002547a:	or     eax,0x2
   14002547d:	mov    DWORD PTR [rbx+0x18],eax
   140025480:	test   eax,0x10c
   140025485:	jne    0x1400254b6
   140025487:	call   0x14002142c
   14002548c:	add    rax,0x30
   140025490:	cmp    rbx,rax
   140025493:	je     0x1400254a3
   140025495:	call   0x14002142c
   14002549a:	add    rax,0x60
   14002549e:	cmp    rbx,rax
   1400254a1:	jne    0x1400254ae
   1400254a3:	mov    ecx,esi
   1400254a5:	call   0x140028444
   1400254aa:	test   eax,eax
   1400254ac:	jne    0x1400254b6
   1400254ae:	mov    rcx,rbx
   1400254b1:	call   0x140028a00
   1400254b6:	test   DWORD PTR [rbx+0x18],0x108
   1400254bd:	je     0x14002554e
   1400254c3:	mov    ebp,DWORD PTR [rbx]
   1400254c5:	mov    rdx,QWORD PTR [rbx+0x10]
   1400254c9:	sub    ebp,DWORD PTR [rbx+0x10]
   1400254cc:	lea    rax,[rdx+0x1]
   1400254d0:	mov    QWORD PTR [rbx],rax
   1400254d3:	mov    eax,DWORD PTR [rbx+0x24]
   1400254d6:	dec    eax
   1400254d8:	mov    DWORD PTR [rbx+0x8],eax
   1400254db:	test   ebp,ebp
   1400254dd:	jle    0x1400254f8
   1400254df:	mov    r8d,ebp
   1400254e2:	mov    ecx,esi
   1400254e4:	call   0x140023b54
   1400254e9:	mov    edi,eax
   1400254eb:	jmp    0x140025542
   1400254ed:	or     ecx,0x20
   1400254f0:	mov    DWORD PTR [rbx+0x18],ecx
   1400254f3:	jmp    0x140025415
   1400254f8:	lea    eax,[rsi+0x2]
   1400254fb:	cmp    eax,0x1
   1400254fe:	jbe    0x14002551e
   140025500:	mov    rcx,rsi
   140025503:	mov    rax,rsi
   140025506:	lea    rdx,[rip+0x2cdd3]        # 0x1400522e0
   14002550d:	and    ecx,0x1f
   140025510:	sar    rax,0x5
   140025514:	imul   rcx,rcx,0x58
   140025518:	add    rcx,QWORD PTR [rdx+rax*8]
   14002551c:	jmp    0x140025525
   14002551e:	lea    rcx,[rip+0x27ecb]        # 0x14004d3f0
   140025525:	test   BYTE PTR [rcx+0x8],0x20
   140025529:	je     0x140025542
   14002552b:	xor    edx,edx
   14002552d:	mov    ecx,esi
   14002552f:	lea    r8d,[rdx+0x2]
   140025533:	call   0x1400284b8
   140025538:	cmp    rax,0xffffffffffffffff
   14002553c:	je     0x14002543b
   140025542:	mov    rcx,QWORD PTR [rbx+0x10]
   140025546:	mov    al,BYTE PTR [rsp+0x30]
   14002554a:	mov    BYTE PTR [rcx],al
   14002554c:	jmp    0x140025564
   14002554e:	mov    ebp,0x1
   140025553:	lea    rdx,[rsp+0x30]
   140025558:	mov    ecx,esi
   14002555a:	mov    r8d,ebp
   14002555d:	call   0x140023b54
   140025562:	mov    edi,eax
   140025564:	cmp    edi,ebp
   140025566:	jne    0x14002543b
   14002556c:	movzx  eax,BYTE PTR [rsp+0x30]
   140025571:	mov    rbx,QWORD PTR [rsp+0x38]
   140025576:	mov    rbp,QWORD PTR [rsp+0x40]
   14002557b:	mov    rsi,QWORD PTR [rsp+0x48]
   140025580:	add    rsp,0x20
   140025584:	pop    rdi
   140025585:	ret    
   140025586:	int3   
   140025587:	int3   
   140025588:	mov    QWORD PTR [rsp+0x18],rbx
   14002558d:	push   rbp
   14002558e:	push   rsi
   14002558f:	push   rdi
   140025590:	push   r12
   140025592:	push   r13
   140025594:	push   r14
   140025596:	push   r15
   140025598:	lea    rbp,[rsp-0x3e0]
   1400255a0:	sub    rsp,0x4e0
   1400255a7:	mov    rax,QWORD PTR [rip+0x27e9a]        # 0x14004d448
   1400255ae:	xor    rax,rsp
   1400255b1:	mov    QWORD PTR [rbp+0x3d0],rax
   1400255b8:	xor    eax,eax
   1400255ba:	mov    rbx,rcx
   1400255bd:	mov    QWORD PTR [rsp+0x78],rcx
   1400255c2:	mov    QWORD PTR [rbp-0x80],rdx
   1400255c6:	lea    rcx,[rbp-0x70]
   1400255ca:	mov    rdx,r8
   1400255cd:	mov    r12,r9
   1400255d0:	mov    QWORD PTR [rsp+0x50],r9
   1400255d5:	mov    DWORD PTR [rsp+0x70],eax
   1400255d9:	mov    r14d,eax
   1400255dc:	mov    DWORD PTR [rsp+0x58],eax
   1400255e0:	mov    edi,eax
   1400255e2:	mov    DWORD PTR [rsp+0x44],eax
   1400255e6:	mov    DWORD PTR [rsp+0x48],eax
   1400255ea:	mov    DWORD PTR [rsp+0x6c],eax
   1400255ee:	mov    DWORD PTR [rsp+0x4c],eax
   1400255f2:	call   0x1400246b8
   1400255f7:	call   0x140025380
   1400255fc:	mov    QWORD PTR [rbp-0x48],rax
   140025600:	call   0x1400227ec
   140025605:	xor    r10d,r10d
   140025608:	test   eax,eax
   14002560a:	jns    0x140025625
   14002560c:	cmp    BYTE PTR [rbp-0x58],r10b
   140025610:	je     0x14002561d
   140025612:	mov    rax,QWORD PTR [rbp-0x60]
   140025616:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002561d:	or     eax,0xffffffff
   140025620:	jmp    0x140025e25
   140025625:	test   rbx,rbx
   140025628:	jne    0x140025641
   14002562a:	call   0x140025380
   14002562f:	mov    DWORD PTR [rax],0x16
   140025635:	call   0x140024554
   14002563a:	xor    ecx,ecx
   14002563c:	cmp    BYTE PTR [rbp-0x58],cl
   14002563f:	jmp    0x140025610
   140025641:	mov    r8,QWORD PTR [rbp-0x80]
   140025645:	test   r8,r8
   140025648:	je     0x14002562a
   14002564a:	movzx  r15d,WORD PTR [r8]
   14002564e:	mov    esi,r10d
   140025651:	mov    DWORD PTR [rsp+0x40],r10d
   140025656:	mov    r13d,r10d
   140025659:	mov    edx,r10d
   14002565c:	mov    QWORD PTR [rbp-0x50],r10
   140025660:	test   r15w,r15w
   140025664:	je     0x140025e12
   14002566a:	mov    rbx,QWORD PTR [rbp-0x40]
   14002566e:	mov    r11d,0x20
   140025674:	mov    r9d,0x200
   14002567a:	add    r8,0x2
   14002567e:	mov    QWORD PTR [rbp-0x80],r8
   140025682:	test   esi,esi
   140025684:	js     0x140025e12
   14002568a:	movzx  eax,r15w
   14002568e:	mov    ecx,0x58
   140025693:	sub    ax,r11w
   140025697:	cmp    ax,cx
   14002569a:	ja     0x1400256b1
   14002569c:	lea    rcx,[rip+0x14dfd]        # 0x14003a4a0
   1400256a3:	movzx  eax,r15w
   1400256a7:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   1400256ac:	and    ecx,0xf
   1400256af:	jmp    0x1400256b4
   1400256b1:	mov    ecx,r10d
   1400256b4:	movsxd rax,edx
   1400256b7:	movsxd rcx,ecx
   1400256ba:	lea    rdx,[rax+rcx*8]
   1400256be:	lea    rax,[rip+0x14ddb]        # 0x14003a4a0
   1400256c5:	movsx  edx,BYTE PTR [rdx+rax*1]
   1400256c9:	sar    edx,0x4
   1400256cc:	mov    DWORD PTR [rsp+0x68],edx
   1400256d0:	mov    ecx,edx
   1400256d2:	test   edx,edx
   1400256d4:	je     0x140025ef8
   1400256da:	dec    ecx
   1400256dc:	je     0x140026008
   1400256e2:	dec    ecx
   1400256e4:	je     0x140025fad
   1400256ea:	dec    ecx
   1400256ec:	je     0x140025f6b
   1400256f2:	dec    ecx
   1400256f4:	je     0x140025f5e
   1400256fa:	dec    ecx
   1400256fc:	je     0x140025f23
   140025702:	dec    ecx
   140025704:	je     0x140025e4f
   14002570a:	dec    ecx
   14002570c:	jne    0x140025e04
   140025712:	movzx  ecx,r15w
   140025716:	cmp    ecx,0x64
   140025719:	jg     0x14002592a
   14002571f:	je     0x140025a3d
   140025725:	cmp    ecx,0x41
   140025728:	je     0x1400258f7
   14002572e:	cmp    ecx,0x43
   140025731:	je     0x140025881
   140025737:	lea    eax,[rcx-0x45]
   14002573a:	test   eax,0xfffffffd
   14002573f:	je     0x1400258f7
   140025745:	cmp    ecx,0x53
   140025748:	je     0x1400257db
   14002574e:	mov    eax,0x58
   140025753:	cmp    ecx,eax
   140025755:	je     0x1400259bc
   14002575b:	cmp    ecx,0x5a
   14002575e:	je     0x140025777
   140025760:	cmp    ecx,0x61
   140025763:	je     0x140025902
   140025769:	cmp    ecx,0x63
   14002576c:	je     0x14002588d
   140025772:	jmp    0x140025849
   140025777:	mov    rax,QWORD PTR [r12]
   14002577b:	add    r12,0x8
   14002577f:	mov    QWORD PTR [rsp+0x50],r12
   140025784:	test   rax,rax
   140025787:	je     0x1400257c4
   140025789:	mov    rbx,QWORD PTR [rax+0x8]
   14002578d:	test   rbx,rbx
   140025790:	je     0x1400257c4
   140025792:	mov    edi,0x2d
   140025797:	bt     r14d,0xb
   14002579c:	jae    0x1400257b6
   14002579e:	movsx  eax,WORD PTR [rax]
   1400257a1:	mov    DWORD PTR [rsp+0x4c],0x1
   1400257a9:	cdq    
   1400257aa:	sub    eax,edx
   1400257ac:	sar    eax,1
   1400257ae:	mov    r13d,eax
   1400257b1:	jmp    0x14002584e
   1400257b6:	movsx  r13d,WORD PTR [rax]
   1400257ba:	mov    DWORD PTR [rsp+0x4c],r10d
   1400257bf:	jmp    0x14002584e
   1400257c4:	mov    rbx,QWORD PTR [rip+0x27ed5]        # 0x14004d6a0
   1400257cb:	mov    rcx,rbx
   1400257ce:	call   0x1400278e0
   1400257d3:	xor    r10d,r10d
   1400257d6:	mov    r13,rax
   1400257d9:	jmp    0x140025849
   1400257db:	test   r14d,0x830
   1400257e2:	jne    0x1400257e7
   1400257e4:	or     r14d,r11d
   1400257e7:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   1400257ec:	mov    rbx,QWORD PTR [r12]
   1400257f0:	mov    eax,0x7fffffff
   1400257f5:	cmove  edi,eax
   1400257f8:	add    r12,0x8
   1400257fc:	mov    QWORD PTR [rsp+0x50],r12
   140025801:	test   r11b,r14b
   140025804:	je     0x14002597c
   14002580a:	test   rbx,rbx
   14002580d:	mov    r13d,r10d
   140025810:	cmove  rbx,QWORD PTR [rip+0x27e88]        # 0x14004d6a0
   140025818:	mov    rsi,rbx
   14002581b:	test   edi,edi
   14002581d:	jle    0x140025845
   14002581f:	cmp    BYTE PTR [rsi],r10b
   140025822:	je     0x140025845
   140025824:	movzx  ecx,BYTE PTR [rsi]
   140025827:	lea    rdx,[rbp-0x70]
   14002582b:	call   0x1400283ac
   140025830:	xor    r10d,r10d
   140025833:	test   eax,eax
   140025835:	je     0x14002583a
   140025837:	inc    rsi
   14002583a:	inc    r13d
   14002583d:	inc    rsi
   140025840:	cmp    r13d,edi
   140025843:	jl     0x14002581f
   140025845:	mov    esi,DWORD PTR [rsp+0x40]
   140025849:	mov    edi,0x2d
   14002584e:	cmp    DWORD PTR [rsp+0x6c],r10d
   140025853:	jne    0x140025dd0
   140025859:	test   r14b,0x40
   14002585d:	je     0x140025ca0
   140025863:	bt     r14d,0x8
   140025868:	jae    0x140025c72
   14002586e:	mov    WORD PTR [rsp+0x5c],di
   140025873:	mov    esi,0x1
   140025878:	mov    DWORD PTR [rsp+0x48],esi
   14002587c:	jmp    0x140025ca4
   140025881:	test   r14d,0x830
   140025888:	jne    0x14002588d
   14002588a:	or     r14d,r11d
   14002588d:	movzx  eax,WORD PTR [r12]
   140025892:	add    r12,0x8
   140025896:	mov    DWORD PTR [rsp+0x4c],0x1
   14002589e:	mov    QWORD PTR [rsp+0x50],r12
   1400258a3:	mov    WORD PTR [rsp+0x60],ax
   1400258a8:	test   r11b,r14b
   1400258ab:	je     0x1400258e4
   1400258ad:	mov    BYTE PTR [rsp+0x64],al
   1400258b1:	mov    rax,QWORD PTR [rbp-0x70]
   1400258b5:	mov    BYTE PTR [rsp+0x65],r10b
   1400258ba:	movsxd r8,DWORD PTR [rax+0xd4]
   1400258c1:	lea    r9,[rbp-0x70]
   1400258c5:	lea    rdx,[rsp+0x64]
   1400258ca:	lea    rcx,[rbp-0x30]
   1400258ce:	call   0x14002863c
   1400258d3:	xor    r10d,r10d
   1400258d6:	test   eax,eax
   1400258d8:	jns    0x1400258e8
   1400258da:	mov    DWORD PTR [rsp+0x6c],0x1
   1400258e2:	jmp    0x1400258e8
   1400258e4:	mov    WORD PTR [rbp-0x30],ax
   1400258e8:	lea    rbx,[rbp-0x30]
   1400258ec:	mov    r13d,0x1
   1400258f2:	jmp    0x140025849
   1400258f7:	mov    DWORD PTR [rbp-0x78],0x1
   1400258fe:	add    r15w,r11w
   140025902:	mov    eax,0x67
   140025907:	or     r14d,0x40
   14002590b:	lea    rbx,[rbp-0x30]
   14002590f:	mov    esi,r9d
   140025912:	test   edi,edi
   140025914:	jns    0x140025b62
   14002591a:	mov    r13d,0x6
   140025920:	mov    DWORD PTR [rsp+0x44],r13d
   140025925:	jmp    0x140025bb5
   14002592a:	cmp    ecx,0x65
   14002592d:	jl     0x140025849
   140025933:	mov    eax,0x67
   140025938:	cmp    ecx,eax
   14002593a:	jle    0x140025907
   14002593c:	cmp    ecx,0x69
   14002593f:	je     0x140025a3d
   140025945:	cmp    ecx,0x6e
   140025948:	je     0x140025a03
   14002594e:	cmp    ecx,0x6f
   140025951:	je     0x1400259ed
   140025957:	cmp    ecx,0x70
   14002595a:	je     0x1400259b2
   14002595c:	cmp    ecx,0x73
   14002595f:	je     0x1400257e7
   140025965:	cmp    ecx,0x75
   140025968:	je     0x140025a41
   14002596e:	cmp    ecx,0x78
   140025971:	jne    0x140025849
   140025977:	lea    eax,[rcx-0x51]
   14002597a:	jmp    0x1400259c1
   14002597c:	test   rbx,rbx
   14002597f:	mov    DWORD PTR [rsp+0x4c],0x1
   140025987:	cmove  rbx,QWORD PTR [rip+0x27d19]        # 0x14004d6a8
   14002598f:	mov    rax,rbx
   140025992:	jmp    0x1400259a0
   140025994:	dec    edi
   140025996:	cmp    WORD PTR [rax],r10w
   14002599a:	je     0x1400259a4
   14002599c:	add    rax,0x2
   1400259a0:	test   edi,edi
   1400259a2:	jne    0x140025994
   1400259a4:	sub    rax,rbx
   1400259a7:	sar    rax,1
   1400259aa:	mov    r13d,eax
   1400259ad:	jmp    0x140025849
   1400259b2:	mov    edi,0x10
   1400259b7:	bts    r14d,0xf
   1400259bc:	mov    eax,0x7
   1400259c1:	mov    DWORD PTR [rsp+0x70],eax
   1400259c5:	mov    r9d,0x10
   1400259cb:	mov    r15d,0x200
   1400259d1:	test   r14b,r14b
   1400259d4:	jns    0x140025a4d
   1400259d6:	lea    ecx,[r9+0x20]
   1400259da:	add    ax,0x51
   1400259de:	lea    edx,[rcx-0x2e]
   1400259e1:	mov    WORD PTR [rsp+0x5c],cx
   1400259e6:	mov    WORD PTR [rsp+0x5e],ax
   1400259eb:	jmp    0x140025a51
   1400259ed:	mov    r9d,0x8
   1400259f3:	test   r14b,r14b
   1400259f6:	jns    0x140025a47
   1400259f8:	mov    r15d,0x200
   1400259fe:	or     r14d,r15d
   140025a01:	jmp    0x140025a4d
   140025a03:	mov    rdi,QWORD PTR [r12]
   140025a07:	add    r12,0x8
   140025a0b:	mov    QWORD PTR [rsp+0x50],r12
   140025a10:	call   0x1400218a8
   140025a15:	xor    r10d,r10d
   140025a18:	test   eax,eax
   140025a1a:	je     0x14002562a
   140025a20:	lea    r11d,[r10+0x20]
   140025a24:	test   r11b,r14b
   140025a27:	je     0x140025a2e
   140025a29:	mov    WORD PTR [rdi],si
   140025a2c:	jmp    0x140025a30
   140025a2e:	mov    DWORD PTR [rdi],esi
   140025a30:	mov    DWORD PTR [rsp+0x6c],0x1
   140025a38:	jmp    0x140025dd6
   140025a3d:	or     r14d,0x40
   140025a41:	mov    r9d,0xa
   140025a47:	mov    r15d,0x200
   140025a4d:	mov    edx,DWORD PTR [rsp+0x48]
   140025a51:	mov    eax,0x8000
   140025a56:	test   eax,r14d
   140025a59:	je     0x140025a65
   140025a5b:	mov    r8,QWORD PTR [r12]
   140025a5f:	add    r12,0x8
   140025a63:	jmp    0x140025aa2
   140025a65:	bt     r14d,0xc
   140025a6a:	jb     0x140025a5b
   140025a6c:	add    r12,0x8
   140025a70:	test   r11b,r14b
   140025a73:	je     0x140025a90
   140025a75:	mov    QWORD PTR [rsp+0x50],r12
   140025a7a:	test   r14b,0x40
   140025a7e:	je     0x140025a88
   140025a80:	movsx  r8,WORD PTR [r12-0x8]
   140025a86:	jmp    0x140025aa7
   140025a88:	movzx  r8d,WORD PTR [r12-0x8]
   140025a8e:	jmp    0x140025aa7
   140025a90:	test   r14b,0x40
   140025a94:	je     0x140025a9d
   140025a96:	movsxd r8,DWORD PTR [r12-0x8]
   140025a9b:	jmp    0x140025aa2
   140025a9d:	mov    r8d,DWORD PTR [r12-0x8]
   140025aa2:	mov    QWORD PTR [rsp+0x50],r12
   140025aa7:	test   r14b,0x40
   140025aab:	je     0x140025aba
   140025aad:	test   r8,r8
   140025ab0:	jns    0x140025aba
   140025ab2:	neg    r8
   140025ab5:	bts    r14d,0x8
   140025aba:	test   eax,r14d
   140025abd:	jne    0x140025ac9
   140025abf:	bt     r14d,0xc
   140025ac4:	jb     0x140025ac9
   140025ac6:	mov    r8d,r8d
   140025ac9:	test   edi,edi
   140025acb:	jns    0x140025ad4
   140025acd:	mov    edi,0x1
   140025ad2:	jmp    0x140025adf
   140025ad4:	and    r14d,0xfffffff7
   140025ad8:	cmp    edi,r15d
   140025adb:	cmovg  edi,r15d
   140025adf:	mov    esi,DWORD PTR [rsp+0x70]
   140025ae3:	mov    rax,r8
   140025ae6:	lea    rbx,[rbp+0x1cf]
   140025aed:	neg    rax
   140025af0:	sbb    ecx,ecx
   140025af2:	and    ecx,edx
   140025af4:	mov    DWORD PTR [rsp+0x48],ecx
   140025af8:	mov    ecx,edi
   140025afa:	dec    edi
   140025afc:	test   ecx,ecx
   140025afe:	jg     0x140025b05
   140025b00:	test   r8,r8
   140025b03:	je     0x140025b24
   140025b05:	xor    edx,edx
   140025b07:	mov    rax,r8
   140025b0a:	movsxd rcx,r9d
   140025b0d:	div    rcx
   140025b10:	mov    r8,rax
   140025b13:	lea    eax,[rdx+0x30]
   140025b16:	cmp    eax,0x39
   140025b19:	jle    0x140025b1d
   140025b1b:	add    eax,esi
   140025b1d:	mov    BYTE PTR [rbx],al
   140025b1f:	dec    rbx
   140025b22:	jmp    0x140025af8
   140025b24:	mov    esi,DWORD PTR [rsp+0x40]
   140025b28:	lea    rax,[rbp+0x1cf]
   140025b2f:	mov    DWORD PTR [rsp+0x44],edi
   140025b33:	sub    eax,ebx
   140025b35:	inc    rbx
   140025b38:	mov    r13d,eax
   140025b3b:	test   r15d,r14d
   140025b3e:	je     0x140025849
   140025b44:	test   eax,eax
   140025b46:	mov    eax,0x30
   140025b4b:	je     0x140025b55
   140025b4d:	cmp    BYTE PTR [rbx],al
   140025b4f:	je     0x140025849
   140025b55:	dec    rbx
   140025b58:	inc    r13d
   140025b5b:	mov    BYTE PTR [rbx],al
   140025b5d:	jmp    0x140025849
   140025b62:	jne    0x140025b75
   140025b64:	cmp    r15w,ax
   140025b68:	jne    0x140025bab
   140025b6a:	mov    r13d,0x1
   140025b70:	jmp    0x140025920
   140025b75:	cmp    edi,r9d
   140025b78:	mov    r13d,0xa3
   140025b7e:	cmovg  edi,r9d
   140025b82:	mov    DWORD PTR [rsp+0x44],edi
   140025b86:	cmp    edi,r13d
   140025b89:	jle    0x140025bb2
   140025b8b:	add    edi,0x15d
   140025b91:	movsxd rcx,edi
   140025b94:	call   0x1400238b8
   140025b99:	mov    QWORD PTR [rbp-0x50],rax
   140025b9d:	test   rax,rax
   140025ba0:	je     0x140025920
   140025ba6:	mov    rbx,rax
   140025ba9:	mov    esi,edi
   140025bab:	mov    r13d,DWORD PTR [rsp+0x44]
   140025bb0:	jmp    0x140025bb5
   140025bb2:	mov    r13d,edi
   140025bb5:	mov    rax,QWORD PTR [r12]
   140025bb9:	mov    rcx,QWORD PTR [rip+0x28620]        # 0x14004e1e0
   140025bc0:	add    r12,0x8
   140025bc4:	mov    QWORD PTR [rsp+0x50],r12
   140025bc9:	movsx  edi,r15b
   140025bcd:	movsxd rsi,esi
   140025bd0:	mov    QWORD PTR [rbp-0x40],rax
   140025bd4:	call   QWORD PTR [rip+0x135e6]        # 0x1400391c0
   140025bda:	lea    rcx,[rbp-0x70]
   140025bde:	mov    QWORD PTR [rsp+0x30],rcx
   140025be3:	mov    ecx,DWORD PTR [rbp-0x78]
   140025be6:	mov    r9d,edi
   140025be9:	mov    DWORD PTR [rsp+0x28],ecx
   140025bed:	lea    rcx,[rbp-0x40]
   140025bf1:	mov    r8,rsi
   140025bf4:	mov    rdx,rbx
   140025bf7:	mov    DWORD PTR [rsp+0x20],r13d
   140025bfc:	call   rax
   140025bfe:	mov    edi,r14d
   140025c01:	and    edi,0x80
   140025c07:	je     0x140025c24
   140025c09:	test   r13d,r13d
   140025c0c:	jne    0x140025c24
   140025c0e:	mov    rcx,QWORD PTR [rip+0x285e3]        # 0x14004e1f8
   140025c15:	call   QWORD PTR [rip+0x135a5]        # 0x1400391c0
   140025c1b:	lea    rdx,[rbp-0x70]
   140025c1f:	mov    rcx,rbx
   140025c22:	call   rax
   140025c24:	mov    ecx,0x67
   140025c29:	cmp    r15w,cx
   140025c2d:	jne    0x140025c49
   140025c2f:	test   edi,edi
   140025c31:	jne    0x140025c49
   140025c33:	mov    rcx,QWORD PTR [rip+0x285b6]        # 0x14004e1f0
   140025c3a:	call   QWORD PTR [rip+0x13580]        # 0x1400391c0
   140025c40:	lea    rdx,[rbp-0x70]
   140025c44:	mov    rcx,rbx
   140025c47:	call   rax
   140025c49:	mov    edi,0x2d
   140025c4e:	cmp    BYTE PTR [rbx],dil
   140025c51:	jne    0x140025c5b
   140025c53:	bts    r14d,0x8
   140025c58:	inc    rbx
   140025c5b:	mov    rcx,rbx
   140025c5e:	call   0x1400278e0
   140025c63:	mov    esi,DWORD PTR [rsp+0x40]
   140025c67:	xor    r10d,r10d
   140025c6a:	mov    r13d,eax
   140025c6d:	jmp    0x14002584e
   140025c72:	test   r14b,0x1
   140025c76:	je     0x140025c87
   140025c78:	mov    eax,0x2b
   140025c7d:	mov    WORD PTR [rsp+0x5c],ax
   140025c82:	jmp    0x140025873
   140025c87:	test   r14b,0x2
   140025c8b:	je     0x140025ca0
   140025c8d:	mov    eax,0x20
   140025c92:	mov    WORD PTR [rsp+0x5c],ax
   140025c97:	lea    esi,[rax-0x1f]
   140025c9a:	mov    DWORD PTR [rsp+0x48],esi
   140025c9e:	jmp    0x140025ca9
   140025ca0:	mov    esi,DWORD PTR [rsp+0x48]
   140025ca4:	mov    eax,0x20
   140025ca9:	mov    r15d,DWORD PTR [rsp+0x58]
   140025cae:	mov    rdi,QWORD PTR [rsp+0x78]
   140025cb3:	sub    r15d,r13d
   140025cb6:	sub    r15d,esi
   140025cb9:	test   r14b,0xc
   140025cbd:	jne    0x140025cd1
   140025cbf:	lea    r9,[rsp+0x40]
   140025cc4:	mov    ecx,eax
   140025cc6:	mov    r8,rdi
   140025cc9:	mov    edx,r15d
   140025ccc:	call   0x14002ec88
   140025cd1:	mov    rax,QWORD PTR [rbp-0x48]
   140025cd5:	lea    r9,[rsp+0x40]
   140025cda:	lea    rcx,[rsp+0x5c]
   140025cdf:	mov    r8,rdi
   140025ce2:	mov    edx,esi
   140025ce4:	mov    QWORD PTR [rsp+0x20],rax
   140025ce9:	call   0x140026030
   140025cee:	test   r14b,0x8
   140025cf2:	je     0x140025d0f
   140025cf4:	test   r14b,0x4
   140025cf8:	jne    0x140025d0f
   140025cfa:	lea    r9,[rsp+0x40]
   140025cff:	mov    ecx,0x30
   140025d04:	mov    r8,rdi
   140025d07:	mov    edx,r15d
   140025d0a:	call   0x14002ec88
   140025d0f:	xor    eax,eax
   140025d11:	cmp    DWORD PTR [rsp+0x4c],eax
   140025d15:	jne    0x140025d87
   140025d17:	test   r13d,r13d
   140025d1a:	jle    0x140025d87
   140025d1c:	mov    rdi,rbx
   140025d1f:	mov    esi,r13d
   140025d22:	mov    rax,QWORD PTR [rbp-0x70]
   140025d26:	lea    r9,[rbp-0x70]
   140025d2a:	lea    rcx,[rsp+0x60]
   140025d2f:	movsxd r8,DWORD PTR [rax+0xd4]
   140025d36:	mov    rdx,rdi
   140025d39:	dec    esi
   140025d3b:	call   0x14002863c
   140025d40:	xor    r10d,r10d
   140025d43:	movsxd r12,eax
   140025d46:	test   eax,eax
   140025d48:	jle    0x140025d74
   140025d4a:	mov    rdx,QWORD PTR [rsp+0x78]
   140025d4f:	movzx  ecx,WORD PTR [rsp+0x60]
   140025d54:	lea    r8,[rsp+0x40]
   140025d59:	call   0x14002ec50
   140025d5e:	add    rdi,r12
   140025d61:	xor    r10d,r10d
   140025d64:	test   esi,esi
   140025d66:	jg     0x140025d22
   140025d68:	mov    r12,QWORD PTR [rsp+0x50]
   140025d6d:	mov    rdi,QWORD PTR [rsp+0x78]
   140025d72:	jmp    0x140025da6
   140025d74:	mov    r12,QWORD PTR [rsp+0x50]
   140025d79:	mov    rdi,QWORD PTR [rsp+0x78]
   140025d7e:	or     esi,0xffffffff
   140025d81:	mov    DWORD PTR [rsp+0x40],esi
   140025d85:	jmp    0x140025daa
   140025d87:	mov    rax,QWORD PTR [rbp-0x48]
   140025d8b:	lea    r9,[rsp+0x40]
   140025d90:	mov    r8,rdi
   140025d93:	mov    edx,r13d
   140025d96:	mov    rcx,rbx
   140025d99:	mov    QWORD PTR [rsp+0x20],rax
   140025d9e:	call   0x140026030
   140025da3:	xor    r10d,r10d
   140025da6:	mov    esi,DWORD PTR [rsp+0x40]
   140025daa:	test   esi,esi
   140025dac:	js     0x140025dd0
   140025dae:	test   r14b,0x4
   140025db2:	je     0x140025dd0
   140025db4:	lea    r9,[rsp+0x40]
   140025db9:	mov    ecx,0x20
   140025dbe:	mov    r8,rdi
   140025dc1:	mov    edx,r15d
   140025dc4:	call   0x14002ec88
   140025dc9:	mov    esi,DWORD PTR [rsp+0x40]
   140025dcd:	xor    r10d,r10d
   140025dd0:	mov    r11d,0x20
   140025dd6:	mov    rax,QWORD PTR [rbp-0x50]
   140025dda:	test   rax,rax
   140025ddd:	je     0x140025df2
   140025ddf:	mov    rcx,rax
   140025de2:	call   0x140023328
   140025de7:	xor    r10d,r10d
   140025dea:	lea    r11d,[r10+0x20]
   140025dee:	mov    QWORD PTR [rbp-0x50],r10
   140025df2:	mov    edi,DWORD PTR [rsp+0x44]
   140025df6:	mov    r8,QWORD PTR [rbp-0x80]
   140025dfa:	mov    edx,DWORD PTR [rsp+0x68]
   140025dfe:	mov    r9d,0x200
   140025e04:	movzx  r15d,WORD PTR [r8]
   140025e08:	test   r15w,r15w
   140025e0c:	jne    0x14002567a
   140025e12:	cmp    BYTE PTR [rbp-0x58],r10b
   140025e16:	je     0x140025e23
   140025e18:	mov    rcx,QWORD PTR [rbp-0x60]
   140025e1c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025e23:	mov    eax,esi
   140025e25:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140025e2c:	xor    rcx,rsp
   140025e2f:	call   0x140020e50
   140025e34:	mov    rbx,QWORD PTR [rsp+0x530]
   140025e3c:	add    rsp,0x4e0
   140025e43:	pop    r15
   140025e45:	pop    r14
   140025e47:	pop    r13
   140025e49:	pop    r12
   140025e4b:	pop    rdi
   140025e4c:	pop    rsi
   140025e4d:	pop    rbp
   140025e4e:	ret    
   140025e4f:	movzx  eax,r15w
   140025e53:	cmp    eax,0x49
   140025e56:	je     0x140025e94
   140025e58:	cmp    eax,0x68
   140025e5b:	je     0x140025e8c
   140025e5d:	mov    ecx,0x6c
   140025e62:	cmp    eax,ecx
   140025e64:	je     0x140025e72
   140025e66:	cmp    eax,0x77
   140025e69:	jne    0x140025e04
   140025e6b:	bts    r14d,0xb
   140025e70:	jmp    0x140025e04
   140025e72:	cmp    WORD PTR [r8],cx
   140025e76:	jne    0x140025e83
   140025e78:	add    r8,0x2
   140025e7c:	bts    r14d,0xc
   140025e81:	jmp    0x140025e04
   140025e83:	or     r14d,0x10
   140025e87:	jmp    0x140025e04
   140025e8c:	or     r14d,r11d
   140025e8f:	jmp    0x140025e04
   140025e94:	movzx  eax,WORD PTR [r8]
   140025e98:	bts    r14d,0xf
   140025e9d:	cmp    ax,0x36
   140025ea1:	jne    0x140025eb9
   140025ea3:	cmp    WORD PTR [r8+0x2],0x34
   140025ea9:	jne    0x140025eb9
   140025eab:	add    r8,0x4
   140025eaf:	bts    r14d,0xf
   140025eb4:	jmp    0x140025e04
   140025eb9:	cmp    ax,0x33
   140025ebd:	jne    0x140025ed5
   140025ebf:	cmp    WORD PTR [r8+0x2],0x32
   140025ec5:	jne    0x140025ed5
   140025ec7:	add    r8,0x4
   140025ecb:	btr    r14d,0xf
   140025ed0:	jmp    0x140025e04
   140025ed5:	sub    ax,0x58
   140025ed9:	cmp    ax,r11w
   140025edd:	ja     0x140025ef3
   140025edf:	movabs rcx,0x120821001
   140025ee9:	bt     rcx,rax
   140025eed:	jb     0x140025e04
   140025ef3:	mov    DWORD PTR [rsp+0x68],r10d
   140025ef8:	mov    rdx,QWORD PTR [rsp+0x78]
   140025efd:	lea    r8,[rsp+0x40]
   140025f02:	movzx  ecx,r15w
   140025f06:	mov    DWORD PTR [rsp+0x4c],0x1
   140025f0e:	call   0x14002ec50
   140025f13:	mov    esi,DWORD PTR [rsp+0x40]
   140025f17:	xor    r10d,r10d
   140025f1a:	lea    r11d,[r10+0x20]
   140025f1e:	jmp    0x140025df6
   140025f23:	cmp    r15w,0x2a
   140025f28:	jne    0x140025f48
   140025f2a:	mov    edi,DWORD PTR [r12]
   140025f2e:	add    r12,0x8
   140025f32:	mov    QWORD PTR [rsp+0x50],r12
   140025f37:	mov    DWORD PTR [rsp+0x44],edi
   140025f3b:	test   edi,edi
   140025f3d:	jns    0x140025e04
   140025f43:	or     edi,0xffffffff
   140025f46:	jmp    0x140025f55
   140025f48:	lea    edi,[rdi+rdi*4]
   140025f4b:	movzx  eax,r15w
   140025f4f:	lea    edi,[rdi-0x18]
   140025f52:	lea    edi,[rax+rdi*2]
   140025f55:	mov    DWORD PTR [rsp+0x44],edi
   140025f59:	jmp    0x140025e04
   140025f5e:	mov    edi,r10d
   140025f61:	mov    DWORD PTR [rsp+0x44],r10d
   140025f66:	jmp    0x140025e04
   140025f6b:	cmp    r15w,0x2a
   140025f70:	jne    0x140025f93
   140025f72:	mov    eax,DWORD PTR [r12]
   140025f76:	add    r12,0x8
   140025f7a:	mov    QWORD PTR [rsp+0x50],r12
   140025f7f:	mov    DWORD PTR [rsp+0x58],eax
   140025f83:	test   eax,eax
   140025f85:	jns    0x140025e04
   140025f8b:	or     r14d,0x4
   140025f8f:	neg    eax
   140025f91:	jmp    0x140025fa4
   140025f93:	mov    eax,DWORD PTR [rsp+0x58]
   140025f97:	lea    ecx,[rax+rax*4]
   140025f9a:	movzx  eax,r15w
   140025f9e:	lea    eax,[rax+rcx*2]
   140025fa1:	add    eax,0xffffffd0
   140025fa4:	mov    DWORD PTR [rsp+0x58],eax
   140025fa8:	jmp    0x140025e04
   140025fad:	movzx  eax,r15w
   140025fb1:	cmp    eax,r11d
   140025fb4:	je     0x140025fff
   140025fb6:	cmp    eax,0x23
   140025fb9:	je     0x140025ff5
   140025fbb:	mov    ecx,0x2b
   140025fc0:	cmp    eax,ecx
   140025fc2:	je     0x140025fec
   140025fc4:	mov    ecx,0x2d
   140025fc9:	cmp    eax,ecx
   140025fcb:	je     0x140025fe3
   140025fcd:	mov    ecx,0x30
   140025fd2:	cmp    eax,ecx
   140025fd4:	jne    0x140025e04
   140025fda:	or     r14d,0x8
   140025fde:	jmp    0x140025e04
   140025fe3:	or     r14d,0x4
   140025fe7:	jmp    0x140025e04
   140025fec:	or     r14d,0x1
   140025ff0:	jmp    0x140025e04
   140025ff5:	bts    r14d,0x7
   140025ffa:	jmp    0x140025e04
   140025fff:	or     r14d,0x2
   140026003:	jmp    0x140025e04
   140026008:	or     edi,0xffffffff
   14002600b:	mov    DWORD PTR [rbp-0x78],r10d
   14002600f:	mov    DWORD PTR [rsp+0x6c],r10d
   140026014:	mov    DWORD PTR [rsp+0x58],r10d
   140026019:	mov    DWORD PTR [rsp+0x48],r10d
   14002601e:	mov    r14d,r10d
   140026021:	mov    DWORD PTR [rsp+0x44],edi
   140026025:	mov    DWORD PTR [rsp+0x4c],r10d
   14002602a:	jmp    0x140025e04
   14002602f:	int3   
   140026030:	mov    QWORD PTR [rsp+0x8],rbx
   140026035:	mov    QWORD PTR [rsp+0x10],rbp
   14002603a:	mov    QWORD PTR [rsp+0x18],rsi
   14002603f:	push   rdi
   140026040:	push   r14
   140026042:	push   r15
   140026044:	sub    rsp,0x20
   140026048:	test   BYTE PTR [r8+0x18],0x40
   14002604d:	mov    rbx,QWORD PTR [rsp+0x60]
   140026052:	mov    rdi,r9
   140026055:	mov    r15d,DWORD PTR [rbx]
   140026058:	mov    rbp,r8
   14002605b:	mov    esi,edx
   14002605d:	mov    r14,rcx
   140026060:	je     0x14002606e
   140026062:	cmp    QWORD PTR [r8+0x10],0x0
   140026067:	jne    0x14002606e
   140026069:	add    DWORD PTR [r9],edx
   14002606c:	jmp    0x1400260b0
   14002606e:	and    DWORD PTR [rbx],0x0
   140026071:	test   edx,edx
   140026073:	jle    0x1400260ad
   140026075:	movzx  ecx,WORD PTR [r14]
   140026079:	mov    r8,rdi
   14002607c:	mov    rdx,rbp
   14002607f:	dec    esi
   140026081:	call   0x14002ec50
   140026086:	cmp    DWORD PTR [rdi],0xffffffff
   140026089:	lea    r14,[r14+0x2]
   14002608d:	jne    0x1400260a4
   14002608f:	cmp    DWORD PTR [rbx],0x2a
   140026092:	jne    0x1400260a8
   140026094:	mov    ecx,0x3f
   140026099:	mov    r8,rdi
   14002609c:	mov    rdx,rbp
   14002609f:	call   0x14002ec50
   1400260a4:	test   esi,esi
   1400260a6:	jg     0x140026075
   1400260a8:	cmp    DWORD PTR [rbx],0x0
   1400260ab:	jne    0x1400260b0
   1400260ad:	mov    DWORD PTR [rbx],r15d
   1400260b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400260b5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400260ba:	mov    rsi,QWORD PTR [rsp+0x50]
   1400260bf:	add    rsp,0x20
   1400260c3:	pop    r15
   1400260c5:	pop    r14
   1400260c7:	pop    rdi
   1400260c8:	ret    
   1400260c9:	int3   
   1400260ca:	int3   
   1400260cb:	int3   
   1400260cc:	int3   
   1400260cd:	int3   
   1400260ce:	int3   
   1400260cf:	int3   
   1400260d0:	int3   
   1400260d1:	int3   
   1400260d2:	int3   
   1400260d3:	int3   
   1400260d4:	int3   
   1400260d5:	int3   
   1400260d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400260e0:	mov    r11,rcx
   1400260e3:	cmp    r8,0x8
   1400260e7:	jb     0x140026154
   1400260e9:	movzx  edx,dl
   1400260ec:	bt     DWORD PTR [rip+0x2a7c0],0x1        # 0x1400508b4
   1400260f4:	jae    0x140026104
   1400260f6:	push   rdi
   1400260f7:	mov    rdi,rcx
   1400260fa:	mov    eax,edx
   1400260fc:	mov    rcx,r8
   1400260ff:	rep stos BYTE PTR es:[rdi],al
   140026101:	pop    rdi
   140026102:	jmp    0x140026163
   140026104:	movabs r9,0x101010101010101
   14002610e:	imul   rdx,r9
   140026112:	cmp    r8,0x40
   140026116:	jb     0x140026136
   140026118:	neg    rcx
   14002611b:	and    ecx,0x7
   14002611e:	je     0x140026126
   140026120:	sub    r8,rcx
   140026123:	mov    QWORD PTR [r11],rdx
   140026126:	add    rcx,r11
   140026129:	mov    r9,r8
   14002612c:	and    r8,0x3f
   140026130:	shr    r9,0x6
   140026134:	jne    0x140026177
   140026136:	mov    r9,r8
   140026139:	and    r8,0x7
   14002613d:	shr    r9,0x3
   140026141:	je     0x140026154
   140026143:	data16 data16 xchg ax,ax
   140026147:	nop
   140026148:	mov    QWORD PTR [rcx],rdx
   14002614b:	add    rcx,0x8
   14002614f:	dec    r9
   140026152:	jne    0x140026148
   140026154:	test   r8,r8
   140026157:	je     0x140026163
   140026159:	mov    BYTE PTR [rcx],dl
   14002615b:	inc    rcx
   14002615e:	dec    r8
   140026161:	jne    0x140026159
   140026163:	mov    rax,r11
   140026166:	ret    
   140026167:	nop    WORD PTR [rax+rax*1+0x0]
   140026170:	data16 data16 xchg ax,ax
   140026174:	data16 xchg ax,ax
   140026177:	cmp    r9,0x1c00
   14002617e:	jae    0x1400261b0
   140026180:	mov    QWORD PTR [rcx],rdx
   140026183:	mov    QWORD PTR [rcx+0x8],rdx
   140026187:	mov    QWORD PTR [rcx+0x10],rdx
   14002618b:	add    rcx,0x40
   14002618f:	mov    QWORD PTR [rcx-0x28],rdx
   140026193:	mov    QWORD PTR [rcx-0x20],rdx
   140026197:	dec    r9
   14002619a:	mov    QWORD PTR [rcx-0x18],rdx
   14002619e:	mov    QWORD PTR [rcx-0x10],rdx
   1400261a2:	mov    QWORD PTR [rcx-0x8],rdx
   1400261a6:	jne    0x140026180
   1400261a8:	jmp    0x140026136
   1400261aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400261b0:	movnti QWORD PTR [rcx],rdx
   1400261b4:	movnti QWORD PTR [rcx+0x8],rdx
   1400261b9:	movnti QWORD PTR [rcx+0x10],rdx
   1400261be:	add    rcx,0x40
   1400261c2:	movnti QWORD PTR [rcx-0x28],rdx
   1400261c7:	movnti QWORD PTR [rcx-0x20],rdx
   1400261cc:	dec    r9
   1400261cf:	movnti QWORD PTR [rcx-0x18],rdx
   1400261d4:	movnti QWORD PTR [rcx-0x10],rdx
   1400261d9:	movnti QWORD PTR [rcx-0x8],rdx
   1400261de:	jne    0x1400261b0
   1400261e0:	lock or BYTE PTR [rsp],0x0
   1400261e5:	jmp    0x140026136
   1400261ea:	int3   
   1400261eb:	int3   
   1400261ec:	mov    eax,DWORD PTR [rip+0x2762e]        # 0x14004d820
   1400261f2:	mov    r8d,edx
   1400261f5:	and    ecx,edx
   1400261f7:	not    r8d
   1400261fa:	and    r8d,eax
   1400261fd:	or     r8d,ecx
   140026200:	mov    DWORD PTR [rip+0x27619],r8d        # 0x14004d820
   140026207:	ret    
   140026208:	sub    rsp,0x28
   14002620c:	call   0x140027674
   140026211:	test   rax,rax
   140026214:	je     0x140026220
   140026216:	mov    ecx,0x16
   14002621b:	call   0x1400276a4
   140026220:	test   BYTE PTR [rip+0x275f9],0x2        # 0x14004d820
   140026227:	je     0x140026252
   140026229:	mov    ecx,0x17
   14002622e:	call   0x14002a9d6
   140026233:	test   eax,eax
   140026235:	je     0x14002623e
   140026237:	mov    ecx,0x7
   14002623c:	int    0x29
   14002623e:	mov    r8d,0x1
   140026244:	mov    edx,0x40000015
   140026249:	lea    ecx,[r8+0x2]
   14002624d:	call   0x1400243f0
   140026252:	mov    ecx,0x3
   140026257:	call   0x140022230
   14002625c:	int3   
   14002625d:	int3   
   14002625e:	int3   
   14002625f:	int3   
   140026260:	mov    QWORD PTR [rip+0x2a8a9],rcx        # 0x140050b10
   140026267:	ret    
   140026268:	int3   
   140026269:	int3   
   14002626a:	int3   
   14002626b:	int3   
   14002626c:	int3   
   14002626d:	int3   
   14002626e:	int3   
   14002626f:	int3   
   140026270:	int3   
   140026271:	int3   
   140026272:	int3   
   140026273:	int3   
   140026274:	int3   
   140026275:	int3   
   140026276:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026280:	sub    rdx,rcx
   140026283:	test   cl,0x7
   140026286:	je     0x14002629c
   140026288:	movzx  eax,BYTE PTR [rcx]
   14002628b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14002628e:	jne    0x1400262df
   140026290:	inc    rcx
   140026293:	test   al,al
   140026295:	je     0x1400262dc
   140026297:	test   cl,0x7
   14002629a:	jne    0x140026288
   14002629c:	movabs r11,0x8080808080808080
   1400262a6:	movabs r10,0xfefefefefefefeff
   1400262b0:	lea    eax,[ecx+edx*1]
   1400262b4:	and    eax,0xfff
   1400262b9:	cmp    eax,0xff8
   1400262be:	ja     0x140026288
   1400262c0:	mov    rax,QWORD PTR [rcx]
   1400262c3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   1400262c7:	jne    0x140026288
   1400262c9:	lea    r9,[r10+rax*1]
   1400262cd:	not    rax
   1400262d0:	add    rcx,0x8
   1400262d4:	and    rax,r9
   1400262d7:	test   r11,rax
   1400262da:	je     0x1400262b0
   1400262dc:	xor    eax,eax
   1400262de:	ret    
   1400262df:	sbb    rax,rax
   1400262e2:	or     rax,0x1
   1400262e6:	ret    
   1400262e7:	int3   
   1400262e8:	rex push rbx
   1400262ea:	sub    rsp,0x30
   1400262ee:	mov    rbx,rcx
   1400262f1:	mov    ecx,0xe
   1400262f6:	call   0x140023638
   1400262fb:	nop
   1400262fc:	mov    rax,QWORD PTR [rbx+0x8]
   140026300:	test   rax,rax
   140026303:	je     0x140026344
   140026305:	mov    rcx,QWORD PTR [rip+0x2a814]        # 0x140050b20
   14002630c:	lea    rdx,[rip+0x2a805]        # 0x140050b18
   140026313:	mov    QWORD PTR [rsp+0x20],rcx
   140026318:	test   rcx,rcx
   14002631b:	je     0x140026336
   14002631d:	cmp    QWORD PTR [rcx],rax
   140026320:	jne    0x140026331
   140026322:	mov    rax,QWORD PTR [rcx+0x8]
   140026326:	mov    QWORD PTR [rdx+0x8],rax
   14002632a:	call   0x140023328
   14002632f:	jmp    0x140026336
   140026331:	mov    rdx,rcx
   140026334:	jmp    0x140026313
   140026336:	mov    rcx,QWORD PTR [rbx+0x8]
   14002633a:	call   0x140023328
   14002633f:	and    QWORD PTR [rbx+0x8],0x0
   140026344:	mov    ecx,0xe
   140026349:	call   0x140023820
   14002634e:	add    rsp,0x30
   140026352:	pop    rbx
   140026353:	ret    
   140026354:	mov    QWORD PTR [rsp+0x8],rbx
   140026359:	mov    QWORD PTR [rsp+0x10],rsi
   14002635e:	push   rdi
   14002635f:	sub    rsp,0x20
   140026363:	mov    rbx,rcx
   140026366:	cmp    rcx,0xffffffffffffffe0
   14002636a:	ja     0x1400263e8
   14002636c:	mov    edi,0x1
   140026371:	test   rcx,rcx
   140026374:	cmovne rdi,rcx
   140026378:	mov    rcx,QWORD PTR [rip+0x29d99]        # 0x140050118
   14002637f:	test   rcx,rcx
   140026382:	jne    0x1400263a4
   140026384:	call   0x1400224e8
   140026389:	mov    ecx,0x1e
   14002638e:	call   0x14002255c
   140026393:	mov    ecx,0xff
   140026398:	call   0x140022120
   14002639d:	mov    rcx,QWORD PTR [rip+0x29d74]        # 0x140050118
   1400263a4:	mov    r8,rdi
   1400263a7:	xor    edx,edx
   1400263a9:	call   QWORD PTR [rip+0x12f09]        # 0x1400392b8
   1400263af:	mov    rsi,rax
   1400263b2:	test   rax,rax
   1400263b5:	jne    0x1400263e3
   1400263b7:	cmp    DWORD PTR [rip+0x2a863],eax        # 0x140050c20
   1400263bd:	je     0x1400263cd
   1400263bf:	mov    rcx,rbx
   1400263c2:	call   0x1400265ac
   1400263c7:	test   eax,eax
   1400263c9:	je     0x1400263d8
   1400263cb:	jmp    0x140026378
   1400263cd:	call   0x140025380
   1400263d2:	mov    DWORD PTR [rax],0xc
   1400263d8:	call   0x140025380
   1400263dd:	mov    DWORD PTR [rax],0xc
   1400263e3:	mov    rax,rsi
   1400263e6:	jmp    0x1400263fa
   1400263e8:	call   0x1400265ac
   1400263ed:	call   0x140025380
   1400263f2:	mov    DWORD PTR [rax],0xc
   1400263f8:	xor    eax,eax
   1400263fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400263ff:	mov    rsi,QWORD PTR [rsp+0x38]
   140026404:	add    rsp,0x20
   140026408:	pop    rdi
   140026409:	ret    
   14002640a:	int3   
   14002640b:	int3   
   14002640c:	rex push rbx
   14002640e:	sub    rsp,0x20
   140026412:	and    QWORD PTR [rcx+0x8],0x0
   140026417:	lea    rax,[rip+0x140ea]        # 0x14003a508
   14002641e:	mov    BYTE PTR [rcx+0x10],0x0
   140026422:	mov    QWORD PTR [rcx],rax
   140026425:	mov    rdx,QWORD PTR [rdx]
   140026428:	mov    rbx,rcx
   14002642b:	call   0x140026514
   140026430:	mov    rax,rbx
   140026433:	add    rsp,0x20
   140026437:	pop    rbx
   140026438:	ret    
   140026439:	int3   
   14002643a:	int3   
   14002643b:	int3   
   14002643c:	lea    rax,[rip+0x140c5]        # 0x14003a508
   140026443:	mov    QWORD PTR [rcx],rax
   140026446:	mov    rax,QWORD PTR [rdx]
   140026449:	mov    BYTE PTR [rcx+0x10],0x0
   14002644d:	mov    QWORD PTR [rcx+0x8],rax
   140026451:	mov    rax,rcx
   140026454:	ret    
   140026455:	int3   
   140026456:	int3   
   140026457:	int3   
   140026458:	rex push rbx
   14002645a:	sub    rsp,0x20
   14002645e:	and    QWORD PTR [rcx+0x8],0x0
   140026463:	lea    rax,[rip+0x1409e]        # 0x14003a508
   14002646a:	mov    rbx,rcx
   14002646d:	mov    QWORD PTR [rcx],rax
   140026470:	mov    BYTE PTR [rcx+0x10],0x0
   140026474:	call   0x140026494
   140026479:	mov    rax,rbx
   14002647c:	add    rsp,0x20
   140026480:	pop    rbx
   140026481:	ret    
   140026482:	int3   
   140026483:	int3   
   140026484:	lea    rax,[rip+0x1407d]        # 0x14003a508
   14002648b:	mov    QWORD PTR [rcx],rax
   14002648e:	jmp    0x140026570
   140026493:	int3   
   140026494:	mov    QWORD PTR [rsp+0x8],rbx
   140026499:	push   rdi
   14002649a:	sub    rsp,0x20
   14002649e:	mov    rdi,rdx
   1400264a1:	mov    rbx,rcx
   1400264a4:	cmp    rcx,rdx
   1400264a7:	je     0x1400264ca
   1400264a9:	call   0x140026570
   1400264ae:	cmp    BYTE PTR [rdi+0x10],0x0
   1400264b2:	je     0x1400264c2
   1400264b4:	mov    rdx,QWORD PTR [rdi+0x8]
   1400264b8:	mov    rcx,rbx
   1400264bb:	call   0x140026514
   1400264c0:	jmp    0x1400264ca
   1400264c2:	mov    rax,QWORD PTR [rdi+0x8]
   1400264c6:	mov    QWORD PTR [rbx+0x8],rax
   1400264ca:	mov    rax,rbx
   1400264cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400264d2:	add    rsp,0x20
   1400264d6:	pop    rdi
   1400264d7:	ret    
   1400264d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400264dd:	push   rdi
   1400264de:	sub    rsp,0x20
   1400264e2:	lea    rax,[rip+0x1401f]        # 0x14003a508
   1400264e9:	mov    ebx,edx
   1400264eb:	mov    rdi,rcx
   1400264ee:	mov    QWORD PTR [rcx],rax
   1400264f1:	call   0x140026570
   1400264f6:	test   bl,0x1
   1400264f9:	je     0x140026503
   1400264fb:	mov    rcx,rdi
   1400264fe:	call   0x140020e30
   140026503:	mov    rax,rdi
   140026506:	mov    rbx,QWORD PTR [rsp+0x30]
   14002650b:	add    rsp,0x20
   14002650f:	pop    rdi
   140026510:	ret    
   140026511:	int3   
   140026512:	int3   
   140026513:	int3   
   140026514:	test   rdx,rdx
   140026517:	je     0x14002656d
   140026519:	mov    QWORD PTR [rsp+0x8],rbx
   14002651e:	mov    QWORD PTR [rsp+0x10],rsi
   140026523:	push   rdi
   140026524:	sub    rsp,0x20
   140026528:	mov    rsi,rcx
   14002652b:	mov    rcx,rdx
   14002652e:	mov    rbx,rdx
   140026531:	call   0x1400278e0
   140026536:	mov    rdi,rax
   140026539:	lea    rcx,[rax+0x1]
   14002653d:	call   0x140026354
   140026542:	mov    QWORD PTR [rsi+0x8],rax
   140026546:	test   rax,rax
   140026549:	je     0x14002655e
   14002654b:	lea    rdx,[rdi+0x1]
   14002654f:	mov    r8,rbx
   140026552:	mov    rcx,rax
   140026555:	call   0x140028d20
   14002655a:	mov    BYTE PTR [rsi+0x10],0x1
   14002655e:	mov    rbx,QWORD PTR [rsp+0x30]
   140026563:	mov    rsi,QWORD PTR [rsp+0x38]
   140026568:	add    rsp,0x20
   14002656c:	pop    rdi
   14002656d:	ret    
   14002656e:	int3   
   14002656f:	int3   
   140026570:	rex push rbx
   140026572:	sub    rsp,0x20
   140026576:	cmp    BYTE PTR [rcx+0x10],0x0
   14002657a:	mov    rbx,rcx
   14002657d:	je     0x140026588
   14002657f:	mov    rcx,QWORD PTR [rcx+0x8]
   140026583:	call   0x140023328
   140026588:	and    QWORD PTR [rbx+0x8],0x0
   14002658d:	mov    BYTE PTR [rbx+0x10],0x0
   140026591:	add    rsp,0x20
   140026595:	pop    rbx
   140026596:	ret    
   140026597:	int3   
   140026598:	cmp    QWORD PTR [rcx+0x8],0x0
   14002659d:	lea    rax,[rip+0x13f74]        # 0x14003a518
   1400265a4:	cmovne rax,QWORD PTR [rcx+0x8]
   1400265a9:	ret    
   1400265aa:	int3   
   1400265ab:	int3   
   1400265ac:	rex push rbx
   1400265ae:	sub    rsp,0x20
   1400265b2:	mov    rbx,rcx
   1400265b5:	mov    rcx,QWORD PTR [rip+0x2a56c]        # 0x140050b28
   1400265bc:	call   QWORD PTR [rip+0x12bfe]        # 0x1400391c0
   1400265c2:	test   rax,rax
   1400265c5:	je     0x1400265d7
   1400265c7:	mov    rcx,rbx
   1400265ca:	call   rax
   1400265cc:	test   eax,eax
   1400265ce:	je     0x1400265d7
   1400265d0:	mov    eax,0x1
   1400265d5:	jmp    0x1400265d9
   1400265d7:	xor    eax,eax
   1400265d9:	add    rsp,0x20
   1400265dd:	pop    rbx
   1400265de:	ret    
   1400265df:	int3   
   1400265e0:	mov    QWORD PTR [rip+0x2a541],rcx        # 0x140050b28
   1400265e7:	ret    
   1400265e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400265ed:	push   rbp
   1400265ee:	mov    rbp,rsp
   1400265f1:	sub    rsp,0x60
   1400265f5:	mov    rax,QWORD PTR [rip+0x13f34]        # 0x14003a530
   1400265fc:	mov    rbx,rdx
   1400265ff:	mov    rdx,rcx
   140026602:	mov    QWORD PTR [rbp-0x40],rax
   140026606:	mov    rax,QWORD PTR [rip+0x13f2b]        # 0x14003a538
   14002660d:	mov    QWORD PTR [rbp-0x38],rax
   140026611:	mov    rax,QWORD PTR [rip+0x13f28]        # 0x14003a540
   140026618:	mov    QWORD PTR [rbp-0x30],rax
   14002661c:	mov    rax,QWORD PTR [rip+0x13f25]        # 0x14003a548
   140026623:	mov    QWORD PTR [rbp-0x28],rax
   140026627:	mov    rax,QWORD PTR [rip+0x13f22]        # 0x14003a550
   14002662e:	mov    QWORD PTR [rbp-0x20],rax
   140026632:	mov    rax,QWORD PTR [rip+0x13f1f]        # 0x14003a558
   140026639:	mov    QWORD PTR [rbp-0x18],rax
   14002663d:	mov    rax,QWORD PTR [rip+0x13f1c]        # 0x14003a560
   140026644:	mov    QWORD PTR [rbp-0x10],rax
   140026648:	mov    rax,QWORD PTR [rip+0x13f19]        # 0x14003a568
   14002664f:	mov    QWORD PTR [rbp-0x8],rax
   140026653:	test   rbx,rbx
   140026656:	je     0x140026668
   140026658:	test   BYTE PTR [rbx],0x10
   14002665b:	je     0x140026668
   14002665d:	mov    rax,QWORD PTR [rcx]
   140026660:	mov    rcx,QWORD PTR [rax-0x8]
   140026664:	mov    rbx,QWORD PTR [rcx+0x30]
   140026668:	mov    QWORD PTR [rbp-0x18],rdx
   14002666c:	lea    rdx,[rbp+0x10]
   140026670:	mov    rcx,rbx
   140026673:	mov    QWORD PTR [rbp-0x10],rbx
   140026677:	call   QWORD PTR [rip+0x12c43]        # 0x1400392c0
   14002667d:	mov    rdx,rax
   140026680:	mov    QWORD PTR [rbp+0x10],rax
   140026684:	mov    QWORD PTR [rbp-0x8],rax
   140026688:	test   rbx,rbx
   14002668b:	je     0x1400266a8
   14002668d:	test   BYTE PTR [rbx],0x8
   140026690:	mov    ecx,0x1994000
   140026695:	je     0x14002669c
   140026697:	mov    DWORD PTR [rbp-0x20],ecx
   14002669a:	jmp    0x1400266a8
   14002669c:	mov    eax,DWORD PTR [rbp-0x20]
   14002669f:	test   rdx,rdx
   1400266a2:	cmove  eax,ecx
   1400266a5:	mov    DWORD PTR [rbp-0x20],eax
   1400266a8:	mov    r8d,DWORD PTR [rbp-0x28]
   1400266ac:	mov    edx,DWORD PTR [rbp-0x3c]
   1400266af:	mov    ecx,DWORD PTR [rbp-0x40]
   1400266b2:	lea    r9,[rbp-0x20]
   1400266b6:	call   QWORD PTR [rip+0x12c0c]        # 0x1400392c8
   1400266bc:	mov    rbx,QWORD PTR [rsp+0x78]
   1400266c1:	add    rsp,0x60
   1400266c5:	pop    rbp
   1400266c6:	ret    
   1400266c7:	int3   
   1400266c8:	sub    rsp,0x28
   1400266cc:	mov    rcx,QWORD PTR [rip+0x2a45d]        # 0x140050b30
   1400266d3:	call   QWORD PTR [rip+0x12ae7]        # 0x1400391c0
   1400266d9:	test   rax,rax
   1400266dc:	je     0x1400266e2
   1400266de:	call   rax
   1400266e0:	jmp    0x1400266e2
   1400266e2:	call   0x1400266e8
   1400266e7:	nop
   1400266e8:	sub    rsp,0x28
   1400266ec:	call   0x140021ed4
   1400266f1:	mov    rcx,QWORD PTR [rax+0xd0]
   1400266f8:	test   rcx,rcx
   1400266fb:	je     0x140026701
   1400266fd:	call   rcx
   1400266ff:	jmp    0x140026701
   140026701:	call   0x140026208
   140026706:	nop
   140026707:	int3   
   140026708:	sub    rsp,0x28
   14002670c:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x1400266e8
   140026713:	call   QWORD PTR [rip+0x12a9f]        # 0x1400391b8
   140026719:	mov    QWORD PTR [rip+0x2a410],rax        # 0x140050b30
   140026720:	add    rsp,0x28
   140026724:	ret    
   140026725:	int3   
   140026726:	int3   
   140026727:	int3   
   140026728:	mov    QWORD PTR [rsp+0x20],rbx
   14002672d:	push   rdi
   14002672e:	sub    rsp,0x40
   140026732:	mov    rbx,rcx
   140026735:	call   QWORD PTR [rip+0x12ec5]        # 0x140039600
   14002673b:	mov    rdi,QWORD PTR [rbx+0xf8]
   140026742:	lea    rdx,[rsp+0x50]
   140026747:	xor    r8d,r8d
   14002674a:	mov    rcx,rdi
   14002674d:	call   QWORD PTR [rip+0x12b85]        # 0x1400392d8
   140026753:	test   rax,rax
   140026756:	je     0x14002678a
   140026758:	and    QWORD PTR [rsp+0x38],0x0
   14002675e:	mov    rdx,QWORD PTR [rsp+0x50]
   140026763:	lea    rcx,[rsp+0x58]
   140026768:	mov    QWORD PTR [rsp+0x30],rcx
   14002676d:	lea    rcx,[rsp+0x60]
   140026772:	mov    r9,rax
   140026775:	mov    QWORD PTR [rsp+0x28],rcx
   14002677a:	xor    ecx,ecx
   14002677c:	mov    r8,rdi
   14002677f:	mov    QWORD PTR [rsp+0x20],rbx
   140026784:	call   QWORD PTR [rip+0x12b56]        # 0x1400392e0
   14002678a:	mov    rbx,QWORD PTR [rsp+0x68]
   14002678f:	add    rsp,0x40
   140026793:	pop    rdi
   140026794:	ret    
   140026795:	int3   
   140026796:	int3   
   140026797:	int3   
   140026798:	rex push rbx
   14002679a:	push   rsi
   14002679b:	push   rdi
   14002679c:	sub    rsp,0x40
   1400267a0:	mov    rbx,rcx
   1400267a3:	call   QWORD PTR [rip+0x12e57]        # 0x140039600
   1400267a9:	mov    rsi,QWORD PTR [rbx+0xf8]
   1400267b0:	xor    edi,edi
   1400267b2:	lea    rdx,[rsp+0x60]
   1400267b7:	xor    r8d,r8d
   1400267ba:	mov    rcx,rsi
   1400267bd:	call   QWORD PTR [rip+0x12b15]        # 0x1400392d8
   1400267c3:	test   rax,rax
   1400267c6:	je     0x140026801
   1400267c8:	and    QWORD PTR [rsp+0x38],0x0
   1400267ce:	mov    rdx,QWORD PTR [rsp+0x60]
   1400267d3:	lea    rcx,[rsp+0x68]
   1400267d8:	mov    QWORD PTR [rsp+0x30],rcx
   1400267dd:	lea    rcx,[rsp+0x70]
   1400267e2:	mov    r9,rax
   1400267e5:	mov    QWORD PTR [rsp+0x28],rcx
   1400267ea:	xor    ecx,ecx
   1400267ec:	mov    r8,rsi
   1400267ef:	mov    QWORD PTR [rsp+0x20],rbx
   1400267f4:	call   QWORD PTR [rip+0x12ae6]        # 0x1400392e0
   1400267fa:	inc    edi
   1400267fc:	cmp    edi,0x2
   1400267ff:	jl     0x1400267b2
   140026801:	add    rsp,0x40
   140026805:	pop    rdi
   140026806:	pop    rsi
   140026807:	pop    rbx
   140026808:	ret    
   140026809:	int3   
   14002680a:	int3   
   14002680b:	int3   
   14002680c:	rex.W jmp QWORD PTR [rip+0x12add]        # 0x1400392f0
   140026813:	int3   
   140026814:	rex.W jmp QWORD PTR [rip+0x12aed]        # 0x140039308
   14002681b:	int3   
   14002681c:	rex.W jmp QWORD PTR [rip+0x12ad5]        # 0x1400392f8
   140026823:	int3   
   140026824:	rex.W jmp QWORD PTR [rip+0x12ad5]        # 0x140039300
   14002682b:	int3   
   14002682c:	rex push rbx
   14002682e:	sub    rsp,0x20
   140026832:	mov    eax,DWORD PTR [rip+0x26ff8]        # 0x14004d830
   140026838:	xor    ebx,ebx
   14002683a:	test   eax,eax
   14002683c:	jns    0x14002687f
   14002683e:	lea    rcx,[rip+0x13d43]        # 0x14003a588
   140026845:	mov    DWORD PTR [rsp+0x30],ebx
   140026849:	call   QWORD PTR [rip+0x12ad1]        # 0x140039320
   14002684f:	lea    rdx,[rip+0x13d1a]        # 0x14003a570
   140026856:	mov    rcx,rax
   140026859:	call   QWORD PTR [rip+0x12991]        # 0x1400391f0
   14002685f:	test   rax,rax
   140026862:	je     0x140026875
   140026864:	lea    rcx,[rsp+0x30]
   140026869:	xor    edx,edx
   14002686b:	call   rax
   14002686d:	cmp    eax,0x7a
   140026870:	lea    eax,[rbx+0x1]
   140026873:	je     0x140026877
   140026875:	mov    eax,ebx
   140026877:	mov    DWORD PTR [rip+0x26fb3],eax        # 0x14004d830
   14002687d:	test   eax,eax
   14002687f:	setg   bl
   140026882:	mov    eax,ebx
   140026884:	add    rsp,0x20
   140026888:	pop    rbx
   140026889:	ret    
   14002688a:	int3   
   14002688b:	int3   
   14002688c:	rex.W jmp QWORD PTR [rip+0x12d65]        # 0x1400395f8
   140026893:	int3   
   140026894:	rex push rbx
   140026896:	sub    rsp,0x20
   14002689a:	mov    ebx,ecx
   14002689c:	call   QWORD PTR [rip+0x12a6e]        # 0x140039310
   1400268a2:	mov    edx,ebx
   1400268a4:	mov    rcx,rax
   1400268a7:	add    rsp,0x20
   1400268ab:	pop    rbx
   1400268ac:	rex.W jmp QWORD PTR [rip+0x12a65]        # 0x140039318
   1400268b3:	int3   
   1400268b4:	rex push rbx
   1400268b6:	sub    rsp,0x20
   1400268ba:	mov    rbx,rcx
   1400268bd:	xor    ecx,ecx
   1400268bf:	call   QWORD PTR [rip+0x12d33]        # 0x1400395f8
   1400268c5:	mov    rcx,rbx
   1400268c8:	add    rsp,0x20
   1400268cc:	pop    rbx
   1400268cd:	rex.W jmp QWORD PTR [rip+0x12a14]        # 0x1400392e8
   1400268d4:	lock inc DWORD PTR [rcx]
   1400268d7:	mov    rax,QWORD PTR [rcx+0xd8]
   1400268de:	test   rax,rax
   1400268e1:	je     0x1400268e6
   1400268e3:	lock inc DWORD PTR [rax]
   1400268e6:	mov    rax,QWORD PTR [rcx+0xe8]
   1400268ed:	test   rax,rax
   1400268f0:	je     0x1400268f5
   1400268f2:	lock inc DWORD PTR [rax]
   1400268f5:	mov    rax,QWORD PTR [rcx+0xe0]
   1400268fc:	test   rax,rax
   1400268ff:	je     0x140026904
   140026901:	lock inc DWORD PTR [rax]
   140026904:	mov    rax,QWORD PTR [rcx+0xf8]
   14002690b:	test   rax,rax
   14002690e:	je     0x140026913
   140026910:	lock inc DWORD PTR [rax]
   140026913:	lea    rax,[rcx+0x28]
   140026917:	mov    r8d,0x6
   14002691d:	lea    rdx,[rip+0x26f10]        # 0x14004d834
   140026924:	cmp    QWORD PTR [rax-0x10],rdx
   140026928:	je     0x140026935
   14002692a:	mov    rdx,QWORD PTR [rax]
   14002692d:	test   rdx,rdx
   140026930:	je     0x140026935
   140026932:	lock inc DWORD PTR [rdx]
   140026935:	cmp    QWORD PTR [rax-0x18],0x0
   14002693a:	je     0x140026948
   14002693c:	mov    rdx,QWORD PTR [rax-0x8]
   140026940:	test   rdx,rdx
   140026943:	je     0x140026948
   140026945:	lock inc DWORD PTR [rdx]
   140026948:	add    rax,0x20
   14002694c:	dec    r8
   14002694f:	jne    0x14002691d
   140026951:	mov    rax,QWORD PTR [rcx+0x120]
   140026958:	lock inc DWORD PTR [rax+0x15c]
   14002695f:	ret    
   140026960:	mov    QWORD PTR [rsp+0x8],rbx
   140026965:	mov    QWORD PTR [rsp+0x10],rbp
   14002696a:	mov    QWORD PTR [rsp+0x18],rsi
   14002696f:	push   rdi
   140026970:	sub    rsp,0x20
   140026974:	mov    rax,QWORD PTR [rcx+0xf0]
   14002697b:	mov    rbx,rcx
   14002697e:	test   rax,rax
   140026981:	je     0x1400269fc
   140026983:	lea    rcx,[rip+0x27896]        # 0x14004e220
   14002698a:	cmp    rax,rcx
   14002698d:	je     0x1400269fc
   14002698f:	mov    rax,QWORD PTR [rbx+0xd8]
   140026996:	test   rax,rax
   140026999:	je     0x1400269fc
   14002699b:	cmp    DWORD PTR [rax],0x0
   14002699e:	jne    0x1400269fc
   1400269a0:	mov    rcx,QWORD PTR [rbx+0xe8]
   1400269a7:	test   rcx,rcx
   1400269aa:	je     0x1400269c2
   1400269ac:	cmp    DWORD PTR [rcx],0x0
   1400269af:	jne    0x1400269c2
   1400269b1:	call   0x140023328
   1400269b6:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400269bd:	call   0x140028d84
   1400269c2:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400269c9:	test   rcx,rcx
   1400269cc:	je     0x1400269e4
   1400269ce:	cmp    DWORD PTR [rcx],0x0
   1400269d1:	jne    0x1400269e4
   1400269d3:	call   0x140023328
   1400269d8:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400269df:	call   0x140028e90
   1400269e4:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400269eb:	call   0x140023328
   1400269f0:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400269f7:	call   0x140023328
   1400269fc:	mov    rax,QWORD PTR [rbx+0xf8]
   140026a03:	test   rax,rax
   140026a06:	je     0x140026a4f
   140026a08:	cmp    DWORD PTR [rax],0x0
   140026a0b:	jne    0x140026a4f
   140026a0d:	mov    rcx,QWORD PTR [rbx+0x100]
   140026a14:	sub    rcx,0xfe
   140026a1b:	call   0x140023328
   140026a20:	mov    rcx,QWORD PTR [rbx+0x110]
   140026a27:	mov    edi,0x80
   140026a2c:	sub    rcx,rdi
   140026a2f:	call   0x140023328
   140026a34:	mov    rcx,QWORD PTR [rbx+0x118]
   140026a3b:	sub    rcx,rdi
   140026a3e:	call   0x140023328
   140026a43:	mov    rcx,QWORD PTR [rbx+0xf8]
   140026a4a:	call   0x140023328
   140026a4f:	mov    rcx,QWORD PTR [rbx+0x120]
   140026a56:	lea    rax,[rip+0x26de3]        # 0x14004d840
   140026a5d:	cmp    rcx,rax
   140026a60:	je     0x140026a7c
   140026a62:	cmp    DWORD PTR [rcx+0x15c],0x0
   140026a69:	jne    0x140026a7c
   140026a6b:	call   0x140028efc
   140026a70:	mov    rcx,QWORD PTR [rbx+0x120]
   140026a77:	call   0x140023328
   140026a7c:	lea    rsi,[rbx+0x128]
   140026a83:	lea    rdi,[rbx+0x28]
   140026a87:	mov    ebp,0x6
   140026a8c:	lea    rax,[rip+0x26da1]        # 0x14004d834
   140026a93:	cmp    QWORD PTR [rdi-0x10],rax
   140026a97:	je     0x140026ab3
   140026a99:	mov    rcx,QWORD PTR [rdi]
   140026a9c:	test   rcx,rcx
   140026a9f:	je     0x140026ab3
   140026aa1:	cmp    DWORD PTR [rcx],0x0
   140026aa4:	jne    0x140026ab3
   140026aa6:	call   0x140023328
   140026aab:	mov    rcx,QWORD PTR [rsi]
   140026aae:	call   0x140023328
   140026ab3:	cmp    QWORD PTR [rdi-0x18],0x0
   140026ab8:	je     0x140026acd
   140026aba:	mov    rcx,QWORD PTR [rdi-0x8]
   140026abe:	test   rcx,rcx
   140026ac1:	je     0x140026acd
   140026ac3:	cmp    DWORD PTR [rcx],0x0
   140026ac6:	jne    0x140026acd
   140026ac8:	call   0x140023328
   140026acd:	add    rsi,0x8
   140026ad1:	add    rdi,0x20
   140026ad5:	dec    rbp
   140026ad8:	jne    0x140026a8c
   140026ada:	mov    rcx,rbx
   140026add:	mov    rbx,QWORD PTR [rsp+0x30]
   140026ae2:	mov    rbp,QWORD PTR [rsp+0x38]
   140026ae7:	mov    rsi,QWORD PTR [rsp+0x40]
   140026aec:	add    rsp,0x20
   140026af0:	pop    rdi
   140026af1:	jmp    0x140023328
   140026af6:	int3   
   140026af7:	int3   
   140026af8:	test   rcx,rcx
   140026afb:	je     0x140026b98
   140026b01:	or     r9d,0xffffffff
   140026b05:	lock add DWORD PTR [rcx],r9d
   140026b09:	mov    rax,QWORD PTR [rcx+0xd8]
   140026b10:	test   rax,rax
   140026b13:	je     0x140026b19
   140026b15:	lock add DWORD PTR [rax],r9d
   140026b19:	mov    rax,QWORD PTR [rcx+0xe8]
   140026b20:	test   rax,rax
   140026b23:	je     0x140026b29
   140026b25:	lock add DWORD PTR [rax],r9d
   140026b29:	mov    rax,QWORD PTR [rcx+0xe0]
   140026b30:	test   rax,rax
   140026b33:	je     0x140026b39
   140026b35:	lock add DWORD PTR [rax],r9d
   140026b39:	mov    rax,QWORD PTR [rcx+0xf8]
   140026b40:	test   rax,rax
   140026b43:	je     0x140026b49
   140026b45:	lock add DWORD PTR [rax],r9d
   140026b49:	lea    rax,[rcx+0x28]
   140026b4d:	mov    r8d,0x6
   140026b53:	lea    rdx,[rip+0x26cda]        # 0x14004d834
   140026b5a:	cmp    QWORD PTR [rax-0x10],rdx
   140026b5e:	je     0x140026b6c
   140026b60:	mov    rdx,QWORD PTR [rax]
   140026b63:	test   rdx,rdx
   140026b66:	je     0x140026b6c
   140026b68:	lock add DWORD PTR [rdx],r9d
   140026b6c:	cmp    QWORD PTR [rax-0x18],0x0
   140026b71:	je     0x140026b80
   140026b73:	mov    rdx,QWORD PTR [rax-0x8]
   140026b77:	test   rdx,rdx
   140026b7a:	je     0x140026b80
   140026b7c:	lock add DWORD PTR [rdx],r9d
   140026b80:	add    rax,0x20
   140026b84:	dec    r8
   140026b87:	jne    0x140026b53
   140026b89:	mov    rax,QWORD PTR [rcx+0x120]
   140026b90:	lock add DWORD PTR [rax+0x15c],r9d
   140026b98:	mov    rax,rcx
   140026b9b:	ret    
   140026b9c:	rex push rbx
   140026b9e:	sub    rsp,0x20
   140026ba2:	call   0x140021ed4
   140026ba7:	mov    rbx,rax
   140026baa:	mov    ecx,DWORD PTR [rip+0x27650]        # 0x14004e200
   140026bb0:	test   DWORD PTR [rax+0xc8],ecx
   140026bb6:	je     0x140026bd0
   140026bb8:	cmp    QWORD PTR [rax+0xc0],0x0
   140026bc0:	je     0x140026bd0
   140026bc2:	call   0x140021ed4
   140026bc7:	mov    rbx,QWORD PTR [rax+0xc0]
   140026bce:	jmp    0x140026bfb
   140026bd0:	mov    ecx,0xc
   140026bd5:	call   0x140023638
   140026bda:	nop
   140026bdb:	lea    rcx,[rbx+0xc0]
   140026be2:	mov    rdx,QWORD PTR [rip+0x26f17]        # 0x14004db00
   140026be9:	call   0x140026c14
   140026bee:	mov    rbx,rax
   140026bf1:	mov    ecx,0xc
   140026bf6:	call   0x140023820
   140026bfb:	test   rbx,rbx
   140026bfe:	jne    0x140026c08
   140026c00:	lea    ecx,[rbx+0x20]
   140026c03:	call   0x140022138
   140026c08:	mov    rax,rbx
   140026c0b:	add    rsp,0x20
   140026c0f:	pop    rbx
   140026c10:	ret    
   140026c11:	int3   
   140026c12:	int3   
   140026c13:	int3   
   140026c14:	mov    QWORD PTR [rsp+0x8],rbx
   140026c19:	push   rdi
   140026c1a:	sub    rsp,0x20
   140026c1e:	mov    rdi,rdx
   140026c21:	test   rdx,rdx
   140026c24:	je     0x140026c69
   140026c26:	test   rcx,rcx
   140026c29:	je     0x140026c69
   140026c2b:	mov    rbx,QWORD PTR [rcx]
   140026c2e:	cmp    rbx,rdx
   140026c31:	je     0x140026c64
   140026c33:	mov    QWORD PTR [rcx],rdx
   140026c36:	mov    rcx,rdx
   140026c39:	call   0x1400268d4
   140026c3e:	test   rbx,rbx
   140026c41:	je     0x140026c64
   140026c43:	mov    rcx,rbx
   140026c46:	call   0x140026af8
   140026c4b:	cmp    DWORD PTR [rbx],0x0
   140026c4e:	jne    0x140026c64
   140026c50:	lea    rax,[rip+0x26eb9]        # 0x14004db10
   140026c57:	cmp    rbx,rax
   140026c5a:	je     0x140026c64
   140026c5c:	mov    rcx,rbx
   140026c5f:	call   0x140026960
   140026c64:	mov    rax,rdi
   140026c67:	jmp    0x140026c6b
   140026c69:	xor    eax,eax
   140026c6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026c70:	add    rsp,0x20
   140026c74:	pop    rdi
   140026c75:	ret    
   140026c76:	int3   
   140026c77:	int3   
   140026c78:	sub    rsp,0x28
   140026c7c:	cmp    DWORD PTR [rip+0x2b875],0x0        # 0x1400524f8
   140026c83:	jne    0x140026c99
   140026c85:	mov    ecx,0xfffffffd
   140026c8a:	call   0x140027050
   140026c8f:	mov    DWORD PTR [rip+0x2b85f],0x1        # 0x1400524f8
   140026c99:	xor    eax,eax
   140026c9b:	add    rsp,0x28
   140026c9f:	ret    
   140026ca0:	rex push rbx
   140026ca2:	sub    rsp,0x40
   140026ca6:	mov    ebx,ecx
   140026ca8:	lea    rcx,[rsp+0x20]
   140026cad:	xor    edx,edx
   140026caf:	call   0x1400246b8
   140026cb4:	and    DWORD PTR [rip+0x29e99],0x0        # 0x140050b54
   140026cbb:	cmp    ebx,0xfffffffe
   140026cbe:	jne    0x140026cd2
   140026cc0:	mov    DWORD PTR [rip+0x29e8a],0x1        # 0x140050b54
   140026cca:	call   QWORD PTR [rip+0x12668]        # 0x140039338
   140026cd0:	jmp    0x140026ce7
   140026cd2:	cmp    ebx,0xfffffffd
   140026cd5:	jne    0x140026ceb
   140026cd7:	mov    DWORD PTR [rip+0x29e73],0x1        # 0x140050b54
   140026ce1:	call   QWORD PTR [rip+0x12649]        # 0x140039330
   140026ce7:	mov    ebx,eax
   140026ce9:	jmp    0x140026d02
   140026ceb:	cmp    ebx,0xfffffffc
   140026cee:	jne    0x140026d02
   140026cf0:	mov    rax,QWORD PTR [rsp+0x20]
   140026cf5:	mov    DWORD PTR [rip+0x29e55],0x1        # 0x140050b54
   140026cff:	mov    ebx,DWORD PTR [rax+0x4]
   140026d02:	cmp    BYTE PTR [rsp+0x38],0x0
   140026d07:	je     0x140026d15
   140026d09:	mov    rcx,QWORD PTR [rsp+0x30]
   140026d0e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026d15:	mov    eax,ebx
   140026d17:	add    rsp,0x40
   140026d1b:	pop    rbx
   140026d1c:	ret    
   140026d1d:	int3   
   140026d1e:	int3   
   140026d1f:	int3   
   140026d20:	mov    QWORD PTR [rsp+0x8],rbx
   140026d25:	mov    QWORD PTR [rsp+0x10],rbp
   140026d2a:	mov    QWORD PTR [rsp+0x18],rsi
   140026d2f:	push   rdi
   140026d30:	sub    rsp,0x20
   140026d34:	lea    rbx,[rcx+0x18]
   140026d38:	mov    rsi,rcx
   140026d3b:	mov    ebp,0x101
   140026d40:	mov    rcx,rbx
   140026d43:	mov    r8d,ebp
   140026d46:	xor    edx,edx
   140026d48:	call   0x1400260e0
   140026d4d:	xor    eax,eax
   140026d4f:	lea    rdi,[rsi+0xc]
   140026d53:	mov    QWORD PTR [rsi+0x4],rax
   140026d57:	mov    QWORD PTR [rsi+0x220],rax
   140026d5e:	mov    ecx,0x6
   140026d63:	movzx  eax,ax
   140026d66:	rep stos WORD PTR es:[rdi],ax
   140026d69:	lea    rdi,[rip+0x27210]        # 0x14004df80
   140026d70:	sub    rdi,rsi
   140026d73:	mov    al,BYTE PTR [rdi+rbx*1]
   140026d76:	mov    BYTE PTR [rbx],al
   140026d78:	inc    rbx
   140026d7b:	dec    rbp
   140026d7e:	jne    0x140026d73
   140026d80:	lea    rcx,[rsi+0x119]
   140026d87:	mov    edx,0x100
   140026d8c:	mov    al,BYTE PTR [rcx+rdi*1]
   140026d8f:	mov    BYTE PTR [rcx],al
   140026d91:	inc    rcx
   140026d94:	dec    rdx
   140026d97:	jne    0x140026d8c
   140026d99:	mov    rbx,QWORD PTR [rsp+0x30]
   140026d9e:	mov    rbp,QWORD PTR [rsp+0x38]
   140026da3:	mov    rsi,QWORD PTR [rsp+0x40]
   140026da8:	add    rsp,0x20
   140026dac:	pop    rdi
   140026dad:	ret    
   140026dae:	int3   
   140026daf:	int3   
   140026db0:	mov    QWORD PTR [rsp+0x10],rbx
   140026db5:	mov    QWORD PTR [rsp+0x18],rdi
   140026dba:	push   rbp
   140026dbb:	lea    rbp,[rsp-0x480]
   140026dc3:	sub    rsp,0x580
   140026dca:	mov    rax,QWORD PTR [rip+0x26677]        # 0x14004d448
   140026dd1:	xor    rax,rsp
   140026dd4:	mov    QWORD PTR [rbp+0x470],rax
   140026ddb:	mov    rdi,rcx
   140026dde:	mov    ecx,DWORD PTR [rcx+0x4]
   140026de1:	lea    rdx,[rsp+0x50]
   140026de6:	call   QWORD PTR [rip+0x12554]        # 0x140039340
   140026dec:	mov    ebx,0x100
   140026df1:	test   eax,eax
   140026df3:	je     0x140026f2e
   140026df9:	xor    eax,eax
   140026dfb:	lea    rcx,[rsp+0x70]
   140026e00:	mov    BYTE PTR [rcx],al
   140026e02:	inc    eax
   140026e04:	inc    rcx
   140026e07:	cmp    eax,ebx
   140026e09:	jb     0x140026e00
   140026e0b:	mov    al,BYTE PTR [rsp+0x56]
   140026e0f:	mov    BYTE PTR [rsp+0x70],0x20
   140026e14:	lea    rdx,[rsp+0x56]
   140026e19:	jmp    0x140026e3d
   140026e1b:	movzx  r8d,BYTE PTR [rdx+0x1]
   140026e20:	movzx  ecx,al
   140026e23:	jmp    0x140026e32
   140026e25:	cmp    ecx,ebx
   140026e27:	jae    0x140026e37
   140026e29:	mov    eax,ecx
   140026e2b:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   140026e30:	inc    ecx
   140026e32:	cmp    ecx,r8d
   140026e35:	jbe    0x140026e25
   140026e37:	add    rdx,0x2
   140026e3b:	mov    al,BYTE PTR [rdx]
   140026e3d:	test   al,al
   140026e3f:	jne    0x140026e1b
   140026e41:	mov    eax,DWORD PTR [rdi+0x4]
   140026e44:	and    DWORD PTR [rsp+0x30],0x0
   140026e49:	lea    r8,[rsp+0x70]
   140026e4e:	mov    DWORD PTR [rsp+0x28],eax
   140026e52:	lea    rax,[rbp+0x270]
   140026e59:	mov    r9d,ebx
   140026e5c:	mov    edx,0x1
   140026e61:	xor    ecx,ecx
   140026e63:	mov    QWORD PTR [rsp+0x20],rax
   140026e68:	call   0x1400297c8
   140026e6d:	and    DWORD PTR [rsp+0x40],0x0
   140026e72:	mov    eax,DWORD PTR [rdi+0x4]
   140026e75:	mov    rdx,QWORD PTR [rdi+0x220]
   140026e7c:	mov    DWORD PTR [rsp+0x38],eax
   140026e80:	lea    rax,[rbp+0x70]
   140026e84:	mov    DWORD PTR [rsp+0x30],ebx
   140026e88:	mov    QWORD PTR [rsp+0x28],rax
   140026e8d:	lea    r9,[rsp+0x70]
   140026e92:	mov    r8d,ebx
   140026e95:	xor    ecx,ecx
   140026e97:	mov    DWORD PTR [rsp+0x20],ebx
   140026e9b:	call   0x1400295c8
   140026ea0:	and    DWORD PTR [rsp+0x40],0x0
   140026ea5:	mov    eax,DWORD PTR [rdi+0x4]
   140026ea8:	mov    rdx,QWORD PTR [rdi+0x220]
   140026eaf:	mov    DWORD PTR [rsp+0x38],eax
   140026eb3:	lea    rax,[rbp+0x170]
   140026eba:	mov    DWORD PTR [rsp+0x30],ebx
   140026ebe:	mov    QWORD PTR [rsp+0x28],rax
   140026ec3:	lea    r9,[rsp+0x70]
   140026ec8:	mov    r8d,0x200
   140026ece:	xor    ecx,ecx
   140026ed0:	mov    DWORD PTR [rsp+0x20],ebx
   140026ed4:	call   0x1400295c8
   140026ed9:	lea    r8,[rbp+0x70]
   140026edd:	lea    r9,[rbp+0x170]
   140026ee4:	sub    r8,rdi
   140026ee7:	lea    rdx,[rbp+0x270]
   140026eee:	lea    rcx,[rdi+0x19]
   140026ef2:	sub    r9,rdi
   140026ef5:	test   BYTE PTR [rdx],0x1
   140026ef8:	je     0x140026f04
   140026efa:	or     BYTE PTR [rcx],0x10
   140026efd:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   140026f02:	jmp    0x140026f11
   140026f04:	test   BYTE PTR [rdx],0x2
   140026f07:	je     0x140026f19
   140026f09:	or     BYTE PTR [rcx],0x20
   140026f0c:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140026f11:	mov    BYTE PTR [rcx+0x100],al
   140026f17:	jmp    0x140026f20
   140026f19:	mov    BYTE PTR [rcx+0x100],0x0
   140026f20:	inc    rcx
   140026f23:	add    rdx,0x2
   140026f27:	dec    rbx
   140026f2a:	jne    0x140026ef5
   140026f2c:	jmp    0x140026f6d
   140026f2e:	xor    edx,edx
   140026f30:	lea    rcx,[rdi+0x19]
   140026f34:	lea    r8d,[rdx-0x61]
   140026f38:	lea    eax,[r8+0x20]
   140026f3c:	cmp    eax,0x19
   140026f3f:	ja     0x140026f49
   140026f41:	or     BYTE PTR [rcx],0x10
   140026f44:	lea    eax,[rdx+0x20]
   140026f47:	jmp    0x140026f55
   140026f49:	cmp    r8d,0x19
   140026f4d:	ja     0x140026f5d
   140026f4f:	or     BYTE PTR [rcx],0x20
   140026f52:	lea    eax,[rdx-0x20]
   140026f55:	mov    BYTE PTR [rcx+0x100],al
   140026f5b:	jmp    0x140026f64
   140026f5d:	mov    BYTE PTR [rcx+0x100],0x0
   140026f64:	inc    edx
   140026f66:	inc    rcx
   140026f69:	cmp    edx,ebx
   140026f6b:	jb     0x140026f34
   140026f6d:	mov    rcx,QWORD PTR [rbp+0x470]
   140026f74:	xor    rcx,rsp
   140026f77:	call   0x140020e50
   140026f7c:	lea    r11,[rsp+0x580]
   140026f84:	mov    rbx,QWORD PTR [r11+0x18]
   140026f88:	mov    rdi,QWORD PTR [r11+0x20]
   140026f8c:	mov    rsp,r11
   140026f8f:	pop    rbp
   140026f90:	ret    
   140026f91:	int3   
   140026f92:	int3   
   140026f93:	int3   
   140026f94:	mov    QWORD PTR [rsp+0x10],rbx
   140026f99:	push   rdi
   140026f9a:	sub    rsp,0x20
   140026f9e:	call   0x140021ed4
   140026fa3:	mov    rdi,rax
   140026fa6:	mov    ecx,DWORD PTR [rip+0x27254]        # 0x14004e200
   140026fac:	test   DWORD PTR [rax+0xc8],ecx
   140026fb2:	je     0x140026fc7
   140026fb4:	cmp    QWORD PTR [rax+0xc0],0x0
   140026fbc:	je     0x140026fc7
   140026fbe:	mov    rbx,QWORD PTR [rax+0xb8]
   140026fc5:	jmp    0x140027033
   140026fc7:	mov    ecx,0xd
   140026fcc:	call   0x140023638
   140026fd1:	nop
   140026fd2:	mov    rbx,QWORD PTR [rdi+0xb8]
   140026fd9:	mov    QWORD PTR [rsp+0x30],rbx
   140026fde:	cmp    rbx,QWORD PTR [rip+0x26e93]        # 0x14004de78
   140026fe5:	je     0x140027029
   140026fe7:	test   rbx,rbx
   140026fea:	je     0x140027007
   140026fec:	lock dec DWORD PTR [rbx]
   140026fef:	jne    0x140027007
   140026ff1:	lea    rax,[rip+0x26f88]        # 0x14004df80
   140026ff8:	mov    rcx,QWORD PTR [rsp+0x30]
   140026ffd:	cmp    rcx,rax
   140027000:	je     0x140027007
   140027002:	call   0x140023328
   140027007:	mov    rax,QWORD PTR [rip+0x26e6a]        # 0x14004de78
   14002700e:	mov    QWORD PTR [rdi+0xb8],rax
   140027015:	mov    rax,QWORD PTR [rip+0x26e5c]        # 0x14004de78
   14002701c:	mov    QWORD PTR [rsp+0x30],rax
   140027021:	lock inc DWORD PTR [rax]
   140027024:	mov    rbx,QWORD PTR [rsp+0x30]
   140027029:	mov    ecx,0xd
   14002702e:	call   0x140023820
   140027033:	test   rbx,rbx
   140027036:	jne    0x140027040
   140027038:	lea    ecx,[rbx+0x20]
   14002703b:	call   0x140022138
   140027040:	mov    rax,rbx
   140027043:	mov    rbx,QWORD PTR [rsp+0x38]
   140027048:	add    rsp,0x20
   14002704c:	pop    rdi
   14002704d:	ret    
   14002704e:	int3   
   14002704f:	int3   
   140027050:	mov    rax,rsp
   140027053:	mov    QWORD PTR [rax+0x8],rbx
   140027057:	mov    QWORD PTR [rax+0x10],rsi
   14002705b:	mov    QWORD PTR [rax+0x18],rdi
   14002705f:	mov    QWORD PTR [rax+0x20],r14
   140027063:	push   r15
   140027065:	sub    rsp,0x30
   140027069:	mov    edi,ecx
   14002706b:	or     r15d,0xffffffff
   14002706f:	call   0x140021ed4
   140027074:	mov    rsi,rax
   140027077:	call   0x140026f94
   14002707c:	mov    rbx,QWORD PTR [rsi+0xb8]
   140027083:	mov    ecx,edi
   140027085:	call   0x140026ca0
   14002708a:	mov    r14d,eax
   14002708d:	cmp    eax,DWORD PTR [rbx+0x4]
   140027090:	je     0x140027289
   140027096:	mov    ecx,0x228
   14002709b:	call   0x1400238b8
   1400270a0:	mov    rbx,rax
   1400270a3:	xor    edi,edi
   1400270a5:	test   rax,rax
   1400270a8:	je     0x14002728e
   1400270ae:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400270b5:	mov    rcx,rax
   1400270b8:	mov    rax,rdx
   1400270bb:	or     rax,rcx
   1400270be:	and    eax,0xf
   1400270c1:	jne    0x14002712b
   1400270c3:	lea    eax,[rdi+0x4]
   1400270c6:	lea    r8d,[rax+0x7c]
   1400270ca:	movaps xmm0,XMMWORD PTR [rdx]
   1400270cd:	movaps XMMWORD PTR [rcx],xmm0
   1400270d0:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   1400270d4:	movaps XMMWORD PTR [rcx+0x10],xmm1
   1400270d8:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   1400270dc:	movaps XMMWORD PTR [rcx+0x20],xmm0
   1400270e0:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   1400270e4:	movaps XMMWORD PTR [rcx+0x30],xmm1
   1400270e8:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   1400270ec:	movaps XMMWORD PTR [rcx+0x40],xmm0
   1400270f0:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   1400270f4:	movaps XMMWORD PTR [rcx+0x50],xmm1
   1400270f8:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   1400270fc:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140027100:	add    rcx,r8
   140027103:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   140027107:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14002710b:	add    rdx,r8
   14002710e:	dec    rax
   140027111:	jne    0x1400270ca
   140027113:	movaps xmm0,XMMWORD PTR [rdx]
   140027116:	movaps XMMWORD PTR [rcx],xmm0
   140027119:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14002711d:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140027121:	mov    rax,QWORD PTR [rdx+0x20]
   140027125:	mov    QWORD PTR [rcx+0x20],rax
   140027129:	jmp    0x140027136
   14002712b:	mov    r8d,0x228
   140027131:	call   0x140020e80
   140027136:	mov    DWORD PTR [rbx],edi
   140027138:	mov    rdx,rbx
   14002713b:	mov    ecx,r14d
   14002713e:	call   0x1400272ac
   140027143:	mov    r15d,eax
   140027146:	test   eax,eax
   140027148:	jne    0x140027263
   14002714e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140027155:	lea    r14,[rip+0x26e24]        # 0x14004df80
   14002715c:	lock dec DWORD PTR [rcx]
   14002715f:	jne    0x140027172
   140027161:	mov    rcx,QWORD PTR [rsi+0xb8]
   140027168:	cmp    rcx,r14
   14002716b:	je     0x140027172
   14002716d:	call   0x140023328
   140027172:	mov    QWORD PTR [rsi+0xb8],rbx
   140027179:	lock inc DWORD PTR [rbx]
   14002717c:	test   BYTE PTR [rsi+0xc8],0x2
   140027183:	jne    0x14002728e
   140027189:	test   BYTE PTR [rip+0x27070],0x1        # 0x14004e200
   140027190:	jne    0x14002728e
   140027196:	mov    esi,0xd
   14002719b:	mov    ecx,esi
   14002719d:	call   0x140023638
   1400271a2:	nop
   1400271a3:	mov    eax,DWORD PTR [rbx+0x4]
   1400271a6:	mov    DWORD PTR [rip+0x29994],eax        # 0x140050b40
   1400271ac:	mov    eax,DWORD PTR [rbx+0x8]
   1400271af:	mov    DWORD PTR [rip+0x2998f],eax        # 0x140050b44
   1400271b5:	mov    rax,QWORD PTR [rbx+0x220]
   1400271bc:	mov    QWORD PTR [rip+0x29975],rax        # 0x140050b38
   1400271c3:	mov    edx,edi
   1400271c5:	lea    r8,[rip+0xfffffffffffd8e34]        # 0x140000000
   1400271cc:	mov    DWORD PTR [rsp+0x20],edx
   1400271d0:	cmp    edx,0x5
   1400271d3:	jge    0x1400271ea
   1400271d5:	movsxd rcx,edx
   1400271d8:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   1400271dd:	mov    WORD PTR [r8+rcx*2+0x50b48],ax
   1400271e6:	inc    edx
   1400271e8:	jmp    0x1400271cc
   1400271ea:	mov    edx,edi
   1400271ec:	mov    DWORD PTR [rsp+0x20],edx
   1400271f0:	cmp    edx,0x101
   1400271f6:	jge    0x14002720b
   1400271f8:	movsxd rcx,edx
   1400271fb:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   1400271ff:	mov    BYTE PTR [rcx+r8*1+0x4dd70],al
   140027207:	inc    edx
   140027209:	jmp    0x1400271ec
   14002720b:	mov    DWORD PTR [rsp+0x20],edi
   14002720f:	cmp    edi,0x100
   140027215:	jge    0x14002722d
   140027217:	movsxd rcx,edi
   14002721a:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   140027221:	mov    BYTE PTR [rcx+r8*1+0x4de80],al
   140027229:	inc    edi
   14002722b:	jmp    0x14002720b
   14002722d:	mov    rcx,QWORD PTR [rip+0x26c44]        # 0x14004de78
   140027234:	or     eax,0xffffffff
   140027237:	lock xadd DWORD PTR [rcx],eax
   14002723b:	dec    eax
   14002723d:	jne    0x140027250
   14002723f:	mov    rcx,QWORD PTR [rip+0x26c32]        # 0x14004de78
   140027246:	cmp    rcx,r14
   140027249:	je     0x140027250
   14002724b:	call   0x140023328
   140027250:	mov    QWORD PTR [rip+0x26c21],rbx        # 0x14004de78
   140027257:	lock inc DWORD PTR [rbx]
   14002725a:	mov    ecx,esi
   14002725c:	call   0x140023820
   140027261:	jmp    0x14002728e
   140027263:	cmp    eax,0xffffffff
   140027266:	jne    0x14002728e
   140027268:	lea    r14,[rip+0x26d11]        # 0x14004df80
   14002726f:	cmp    rbx,r14
   140027272:	je     0x14002727c
   140027274:	mov    rcx,rbx
   140027277:	call   0x140023328
   14002727c:	call   0x140025380
   140027281:	mov    DWORD PTR [rax],0x16
   140027287:	jmp    0x14002728e
   140027289:	xor    edi,edi
   14002728b:	mov    r15d,edi
   14002728e:	mov    eax,r15d
   140027291:	mov    rbx,QWORD PTR [rsp+0x40]
   140027296:	mov    rsi,QWORD PTR [rsp+0x48]
   14002729b:	mov    rdi,QWORD PTR [rsp+0x50]
   1400272a0:	mov    r14,QWORD PTR [rsp+0x58]
   1400272a5:	add    rsp,0x30
   1400272a9:	pop    r15
   1400272ab:	ret    
   1400272ac:	mov    QWORD PTR [rsp+0x18],rbx
   1400272b1:	mov    QWORD PTR [rsp+0x20],rbp
   1400272b6:	push   rsi
   1400272b7:	push   rdi
   1400272b8:	push   r12
   1400272ba:	push   r14
   1400272bc:	push   r15
   1400272be:	sub    rsp,0x40
   1400272c2:	mov    rax,QWORD PTR [rip+0x2617f]        # 0x14004d448
   1400272c9:	xor    rax,rsp
   1400272cc:	mov    QWORD PTR [rsp+0x38],rax
   1400272d1:	mov    rbx,rdx
   1400272d4:	call   0x140026ca0
   1400272d9:	xor    esi,esi
   1400272db:	mov    edi,eax
   1400272dd:	test   eax,eax
   1400272df:	jne    0x1400272ee
   1400272e1:	mov    rcx,rbx
   1400272e4:	call   0x140026d20
   1400272e9:	jmp    0x140027532
   1400272ee:	lea    r12,[rip+0x2698b]        # 0x14004dc80
   1400272f5:	mov    ebp,esi
   1400272f7:	mov    r15d,0x1
   1400272fd:	mov    rax,r12
   140027300:	cmp    DWORD PTR [rax],edi
   140027302:	je     0x140027440
   140027308:	add    ebp,r15d
   14002730b:	add    rax,0x30
   14002730f:	cmp    ebp,0x5
   140027312:	jb     0x140027300
   140027314:	lea    eax,[rdi-0xfde8]
   14002731a:	cmp    eax,r15d
   14002731d:	jbe    0x140027438
   140027323:	movzx  ecx,di
   140027326:	call   QWORD PTR [rip+0x11ffc]        # 0x140039328
   14002732c:	test   eax,eax
   14002732e:	je     0x140027438
   140027334:	lea    rdx,[rsp+0x20]
   140027339:	mov    ecx,edi
   14002733b:	call   QWORD PTR [rip+0x11fff]        # 0x140039340
   140027341:	test   eax,eax
   140027343:	je     0x14002742c
   140027349:	lea    rcx,[rbx+0x18]
   14002734d:	xor    edx,edx
   14002734f:	mov    r8d,0x101
   140027355:	call   0x1400260e0
   14002735a:	mov    DWORD PTR [rbx+0x4],edi
   14002735d:	mov    QWORD PTR [rbx+0x220],rsi
   140027364:	cmp    DWORD PTR [rsp+0x20],r15d
   140027369:	jbe    0x140027415
   14002736f:	lea    rdx,[rsp+0x26]
   140027374:	cmp    BYTE PTR [rsp+0x26],sil
   140027379:	je     0x1400273b4
   14002737b:	cmp    BYTE PTR [rdx+0x1],sil
   14002737f:	je     0x1400273b4
   140027381:	movzx  r8d,BYTE PTR [rdx]
   140027385:	movzx  edi,BYTE PTR [rdx+0x1]
   140027389:	cmp    r8d,edi
   14002738c:	ja     0x1400273ab
   14002738e:	lea    ecx,[r8+0x1]
   140027392:	lea    rax,[rbx+0x18]
   140027396:	add    rax,rcx
   140027399:	sub    edi,r8d
   14002739c:	lea    ecx,[r15+rdi*1]
   1400273a0:	or     BYTE PTR [rax],0x4
   1400273a3:	add    rax,r15
   1400273a6:	sub    rcx,r15
   1400273a9:	jne    0x1400273a0
   1400273ab:	add    rdx,0x2
   1400273af:	cmp    BYTE PTR [rdx],sil
   1400273b2:	jne    0x14002737b
   1400273b4:	lea    rax,[rbx+0x1a]
   1400273b8:	mov    ecx,0xfe
   1400273bd:	or     BYTE PTR [rax],0x8
   1400273c0:	add    rax,r15
   1400273c3:	sub    rcx,r15
   1400273c6:	jne    0x1400273bd
   1400273c8:	mov    ecx,DWORD PTR [rbx+0x4]
   1400273cb:	sub    ecx,0x3a4
   1400273d1:	je     0x140027401
   1400273d3:	sub    ecx,0x4
   1400273d6:	je     0x1400273f8
   1400273d8:	sub    ecx,0xd
   1400273db:	je     0x1400273ef
   1400273dd:	dec    ecx
   1400273df:	je     0x1400273e6
   1400273e1:	mov    rax,rsi
   1400273e4:	jmp    0x140027408
   1400273e6:	mov    rax,QWORD PTR [rip+0x1358b]        # 0x14003a978
   1400273ed:	jmp    0x140027408
   1400273ef:	mov    rax,QWORD PTR [rip+0x1357a]        # 0x14003a970
   1400273f6:	jmp    0x140027408
   1400273f8:	mov    rax,QWORD PTR [rip+0x13569]        # 0x14003a968
   1400273ff:	jmp    0x140027408
   140027401:	mov    rax,QWORD PTR [rip+0x13558]        # 0x14003a960
   140027408:	mov    QWORD PTR [rbx+0x220],rax
   14002740f:	mov    DWORD PTR [rbx+0x8],r15d
   140027413:	jmp    0x140027418
   140027415:	mov    DWORD PTR [rbx+0x8],esi
   140027418:	lea    rdi,[rbx+0xc]
   14002741c:	movzx  eax,si
   14002741f:	mov    ecx,0x6
   140027424:	rep stos WORD PTR es:[rdi],ax
   140027427:	jmp    0x14002752a
   14002742c:	cmp    DWORD PTR [rip+0x29722],esi        # 0x140050b54
   140027432:	jne    0x1400272e1
   140027438:	or     eax,0xffffffff
   14002743b:	jmp    0x140027534
   140027440:	lea    rcx,[rbx+0x18]
   140027444:	xor    edx,edx
   140027446:	mov    r8d,0x101
   14002744c:	call   0x1400260e0
   140027451:	mov    eax,ebp
   140027453:	lea    r9,[r12+0x10]
   140027458:	lea    r11,[rax+rax*2]
   14002745c:	lea    r14,[rip+0x2680d]        # 0x14004dc70
   140027463:	mov    ebp,0x4
   140027468:	shl    r11,0x4
   14002746c:	add    r9,r11
   14002746f:	mov    rdx,r9
   140027472:	cmp    BYTE PTR [r9],sil
   140027475:	je     0x1400274b7
   140027477:	cmp    BYTE PTR [rdx+0x1],sil
   14002747b:	je     0x1400274b7
   14002747d:	movzx  r8d,BYTE PTR [rdx]
   140027481:	movzx  eax,BYTE PTR [rdx+0x1]
   140027485:	cmp    r8d,eax
   140027488:	ja     0x1400274ae
   14002748a:	lea    r10d,[r8+0x1]
   14002748e:	cmp    r10d,0x101
   140027495:	jae    0x1400274ae
   140027497:	mov    al,BYTE PTR [r14]
   14002749a:	add    r8d,r15d
   14002749d:	or     BYTE PTR [r10+rbx*1+0x18],al
   1400274a2:	movzx  eax,BYTE PTR [rdx+0x1]
   1400274a6:	add    r10d,r15d
   1400274a9:	cmp    r8d,eax
   1400274ac:	jbe    0x14002748e
   1400274ae:	add    rdx,0x2
   1400274b2:	cmp    BYTE PTR [rdx],sil
   1400274b5:	jne    0x140027477
   1400274b7:	add    r9,0x8
   1400274bb:	add    r14,r15
   1400274be:	sub    rbp,r15
   1400274c1:	jne    0x14002746f
   1400274c3:	mov    DWORD PTR [rbx+0x4],edi
   1400274c6:	mov    DWORD PTR [rbx+0x8],r15d
   1400274ca:	sub    edi,0x3a4
   1400274d0:	je     0x1400274fb
   1400274d2:	sub    edi,0x4
   1400274d5:	je     0x1400274f2
   1400274d7:	sub    edi,0xd
   1400274da:	je     0x1400274e9
   1400274dc:	dec    edi
   1400274de:	jne    0x140027502
   1400274e0:	mov    rsi,QWORD PTR [rip+0x13491]        # 0x14003a978
   1400274e7:	jmp    0x140027502
   1400274e9:	mov    rsi,QWORD PTR [rip+0x13480]        # 0x14003a970
   1400274f0:	jmp    0x140027502
   1400274f2:	mov    rsi,QWORD PTR [rip+0x1346f]        # 0x14003a968
   1400274f9:	jmp    0x140027502
   1400274fb:	mov    rsi,QWORD PTR [rip+0x1345e]        # 0x14003a960
   140027502:	sub    r11,rbx
   140027505:	mov    QWORD PTR [rbx+0x220],rsi
   14002750c:	lea    rcx,[rbx+0xc]
   140027510:	lea    rdi,[r11+r12*1]
   140027514:	mov    edx,0x6
   140027519:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14002751e:	mov    WORD PTR [rcx],ax
   140027521:	lea    rcx,[rcx+0x2]
   140027525:	sub    rdx,r15
   140027528:	jne    0x140027519
   14002752a:	mov    rcx,rbx
   14002752d:	call   0x140026db0
   140027532:	xor    eax,eax
   140027534:	mov    rcx,QWORD PTR [rsp+0x38]
   140027539:	xor    rcx,rsp
   14002753c:	call   0x140020e50
   140027541:	lea    r11,[rsp+0x40]
   140027546:	mov    rbx,QWORD PTR [r11+0x40]
   14002754a:	mov    rbp,QWORD PTR [r11+0x48]
   14002754e:	mov    rsp,r11
   140027551:	pop    r15
   140027553:	pop    r14
   140027555:	pop    r12
   140027557:	pop    rdi
   140027558:	pop    rsi
   140027559:	ret    
   14002755a:	int3   
   14002755b:	int3   
   14002755c:	int3   
   14002755d:	int3   
   14002755e:	int3   
   14002755f:	int3   
   140027560:	movsxd r8,DWORD PTR [rcx+0x3c]
   140027564:	xor    r9d,r9d
   140027567:	mov    r10,rdx
   14002756a:	add    r8,rcx
   14002756d:	movzx  eax,WORD PTR [r8+0x14]
   140027572:	movzx  r11d,WORD PTR [r8+0x6]
   140027577:	add    rax,0x18
   14002757b:	add    rax,r8
   14002757e:	test   r11d,r11d
   140027581:	je     0x1400275a1
   140027583:	mov    edx,DWORD PTR [rax+0xc]
   140027586:	cmp    r10,rdx
   140027589:	jb     0x140027595
   14002758b:	mov    ecx,DWORD PTR [rax+0x8]
   14002758e:	add    ecx,edx
   140027590:	cmp    r10,rcx
   140027593:	jb     0x1400275a3
   140027595:	inc    r9d
   140027598:	add    rax,0x28
   14002759c:	cmp    r9d,r11d
   14002759f:	jb     0x140027583
   1400275a1:	xor    eax,eax
   1400275a3:	repz ret 
   1400275a5:	int3   
   1400275a6:	int3   
   1400275a7:	int3   
   1400275a8:	int3   
   1400275a9:	int3   
   1400275aa:	int3   
   1400275ab:	int3   
   1400275ac:	int3   
   1400275ad:	int3   
   1400275ae:	int3   
   1400275af:	int3   
   1400275b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400275b5:	push   rdi
   1400275b6:	sub    rsp,0x20
   1400275ba:	mov    rbx,rcx
   1400275bd:	lea    rdi,[rip+0xfffffffffffd8a3c]        # 0x140000000
   1400275c4:	mov    rcx,rdi
   1400275c7:	call   0x140027600
   1400275cc:	test   eax,eax
   1400275ce:	je     0x1400275f2
   1400275d0:	sub    rbx,rdi
   1400275d3:	mov    rdx,rbx
   1400275d6:	mov    rcx,rdi
   1400275d9:	call   0x140027560
   1400275de:	test   rax,rax
   1400275e1:	je     0x1400275f2
   1400275e3:	mov    eax,DWORD PTR [rax+0x24]
   1400275e6:	shr    eax,0x1f
   1400275e9:	not    eax
   1400275eb:	and    eax,0x1
   1400275ee:	jmp    0x1400275f2
   1400275f0:	xor    eax,eax
   1400275f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400275f7:	add    rsp,0x20
   1400275fb:	pop    rdi
   1400275fc:	ret    
   1400275fd:	int3   
   1400275fe:	int3   
   1400275ff:	int3   
   140027600:	mov    rax,rcx
   140027603:	mov    ecx,0x5a4d
   140027608:	cmp    WORD PTR [rax],cx
   14002760b:	je     0x140027610
   14002760d:	xor    eax,eax
   14002760f:	ret    
   140027610:	movsxd rcx,DWORD PTR [rax+0x3c]
   140027614:	add    rcx,rax
   140027617:	xor    eax,eax
   140027619:	cmp    DWORD PTR [rcx],0x4550
   14002761f:	jne    0x14002762d
   140027621:	mov    edx,0x20b
   140027626:	cmp    WORD PTR [rcx+0x18],dx
   14002762a:	sete   al
   14002762d:	repz ret 
   14002762f:	int3   
   140027630:	mov    QWORD PTR [rsp+0x8],rbx
   140027635:	push   rdi
   140027636:	sub    rsp,0x20
   14002763a:	xor    edi,edi
   14002763c:	lea    rbx,[rip+0x26b6d]        # 0x14004e1b0
   140027643:	mov    rcx,QWORD PTR [rbx]
   140027646:	call   QWORD PTR [rip+0x11b6c]        # 0x1400391b8
   14002764c:	inc    edi
   14002764e:	mov    QWORD PTR [rbx],rax
   140027651:	movsxd rax,edi
   140027654:	lea    rbx,[rbx+0x8]
   140027658:	cmp    rax,0xa
   14002765c:	jb     0x140027643
   14002765e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027663:	add    rsp,0x20
   140027667:	pop    rdi
   140027668:	ret    
   140027669:	int3   
   14002766a:	int3   
   14002766b:	int3   
   14002766c:	mov    QWORD PTR [rip+0x294e5],rcx        # 0x140050b58
   140027673:	ret    
   140027674:	mov    rcx,QWORD PTR [rip+0x294f5]        # 0x140050b70
   14002767b:	rex.W jmp QWORD PTR [rip+0x11b3e]        # 0x1400391c0
   140027682:	int3   
   140027683:	int3   
   140027684:	mov    QWORD PTR [rip+0x294d5],rcx        # 0x140050b60
   14002768b:	mov    QWORD PTR [rip+0x294d6],rcx        # 0x140050b68
   140027692:	mov    QWORD PTR [rip+0x294d7],rcx        # 0x140050b70
   140027699:	mov    QWORD PTR [rip+0x294d8],rcx        # 0x140050b78
   1400276a0:	ret    
   1400276a1:	int3   
   1400276a2:	int3   
   1400276a3:	int3   
   1400276a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400276a9:	push   rsi
   1400276aa:	push   rdi
   1400276ab:	push   r12
   1400276ad:	push   r14
   1400276af:	push   r15
   1400276b1:	sub    rsp,0x30
   1400276b5:	mov    ebx,ecx
   1400276b7:	xor    edi,edi
   1400276b9:	mov    DWORD PTR [rsp+0x60],edi
   1400276bd:	xor    esi,esi
   1400276bf:	mov    edx,ecx
   1400276c1:	sub    edx,0x2
   1400276c4:	je     0x14002778e
   1400276ca:	sub    edx,0x2
   1400276cd:	je     0x140027731
   1400276cf:	sub    edx,0x2
   1400276d2:	je     0x140027721
   1400276d4:	sub    edx,0x2
   1400276d7:	je     0x140027731
   1400276d9:	sub    edx,0x3
   1400276dc:	je     0x140027731
   1400276de:	sub    edx,0x4
   1400276e1:	je     0x140027711
   1400276e3:	sub    edx,0x6
   1400276e6:	je     0x1400276fe
   1400276e8:	dec    edx
   1400276ea:	je     0x140027721
   1400276ec:	call   0x140025380
   1400276f1:	mov    DWORD PTR [rax],0x16
   1400276f7:	call   0x140024554
   1400276fc:	jmp    0x14002773e
   1400276fe:	lea    r14,[rip+0x29463]        # 0x140050b68
   140027705:	mov    rcx,QWORD PTR [rip+0x2945c]        # 0x140050b68
   14002770c:	jmp    0x14002779c
   140027711:	lea    r14,[rip+0x29460]        # 0x140050b78
   140027718:	mov    rcx,QWORD PTR [rip+0x29459]        # 0x140050b78
   14002771f:	jmp    0x14002779c
   140027721:	lea    r14,[rip+0x29448]        # 0x140050b70
   140027728:	mov    rcx,QWORD PTR [rip+0x29441]        # 0x140050b70
   14002772f:	jmp    0x14002779c
   140027731:	call   0x140021ef8
   140027736:	mov    rsi,rax
   140027739:	test   rax,rax
   14002773c:	jne    0x140027746
   14002773e:	or     eax,0xffffffff
   140027741:	jmp    0x1400278b6
   140027746:	mov    rdx,QWORD PTR [rax+0xa0]
   14002774d:	mov    rcx,rdx
   140027750:	movsxd r8,DWORD PTR [rip+0x12189]        # 0x1400398e0
   140027757:	cmp    DWORD PTR [rcx+0x4],ebx
   14002775a:	je     0x14002776f
   14002775c:	add    rcx,0x10
   140027760:	mov    rax,r8
   140027763:	shl    rax,0x4
   140027767:	add    rax,rdx
   14002776a:	cmp    rcx,rax
   14002776d:	jb     0x140027757
   14002776f:	mov    rax,r8
   140027772:	shl    rax,0x4
   140027776:	add    rax,rdx
   140027779:	cmp    rcx,rax
   14002777c:	jae    0x140027783
   14002777e:	cmp    DWORD PTR [rcx+0x4],ebx
   140027781:	je     0x140027785
   140027783:	xor    ecx,ecx
   140027785:	lea    r14,[rcx+0x8]
   140027789:	mov    r15,QWORD PTR [r14]
   14002778c:	jmp    0x1400277ae
   14002778e:	lea    r14,[rip+0x293cb]        # 0x140050b60
   140027795:	mov    rcx,QWORD PTR [rip+0x293c4]        # 0x140050b60
   14002779c:	mov    edi,0x1
   1400277a1:	mov    DWORD PTR [rsp+0x60],edi
   1400277a5:	call   QWORD PTR [rip+0x11a15]        # 0x1400391c0
   1400277ab:	mov    r15,rax
   1400277ae:	cmp    r15,0x1
   1400277b2:	jne    0x1400277bb
   1400277b4:	xor    eax,eax
   1400277b6:	jmp    0x1400278b6
   1400277bb:	test   r15,r15
   1400277be:	jne    0x1400277ca
   1400277c0:	lea    ecx,[r15+0x3]
   1400277c4:	call   0x140022230
   1400277c9:	int3   
   1400277ca:	test   edi,edi
   1400277cc:	je     0x1400277d6
   1400277ce:	xor    ecx,ecx
   1400277d0:	call   0x140023638
   1400277d5:	nop
   1400277d6:	mov    r12d,0x910
   1400277dc:	cmp    ebx,0xb
   1400277df:	ja     0x140027814
   1400277e1:	bt     r12d,ebx
   1400277e5:	jae    0x140027814
   1400277e7:	mov    rax,QWORD PTR [rsi+0xa8]
   1400277ee:	mov    QWORD PTR [rsp+0x28],rax
   1400277f3:	and    QWORD PTR [rsi+0xa8],0x0
   1400277fb:	cmp    ebx,0x8
   1400277fe:	jne    0x140027852
   140027800:	mov    eax,DWORD PTR [rsi+0xb0]
   140027806:	mov    DWORD PTR [rsp+0x68],eax
   14002780a:	mov    DWORD PTR [rsi+0xb0],0x8c
   140027814:	cmp    ebx,0x8
   140027817:	jne    0x140027852
   140027819:	mov    ecx,DWORD PTR [rip+0x120c9]        # 0x1400398e8
   14002781f:	mov    edx,ecx
   140027821:	mov    DWORD PTR [rsp+0x20],ecx
   140027825:	mov    eax,DWORD PTR [rip+0x120c1]        # 0x1400398ec
   14002782b:	add    ecx,eax
   14002782d:	cmp    edx,ecx
   14002782f:	jge    0x14002785d
   140027831:	movsxd rcx,edx
   140027834:	add    rcx,rcx
   140027837:	mov    rax,QWORD PTR [rsi+0xa0]
   14002783e:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140027844:	inc    edx
   140027846:	mov    DWORD PTR [rsp+0x20],edx
   14002784a:	mov    ecx,DWORD PTR [rip+0x12098]        # 0x1400398e8
   140027850:	jmp    0x140027825
   140027852:	xor    ecx,ecx
   140027854:	call   QWORD PTR [rip+0x1195e]        # 0x1400391b8
   14002785a:	mov    QWORD PTR [r14],rax
   14002785d:	test   edi,edi
   14002785f:	je     0x140027868
   140027861:	xor    ecx,ecx
   140027863:	call   0x140023820
   140027868:	cmp    ebx,0x8
   14002786b:	jne    0x14002787a
   14002786d:	mov    edx,DWORD PTR [rsi+0xb0]
   140027873:	mov    ecx,ebx
   140027875:	call   r15
   140027878:	jmp    0x14002787f
   14002787a:	mov    ecx,ebx
   14002787c:	call   r15
   14002787f:	cmp    ebx,0xb
   140027882:	ja     0x1400277b4
   140027888:	bt     r12d,ebx
   14002788c:	jae    0x1400277b4
   140027892:	mov    rax,QWORD PTR [rsp+0x28]
   140027897:	mov    QWORD PTR [rsi+0xa8],rax
   14002789e:	cmp    ebx,0x8
   1400278a1:	jne    0x1400277b4
   1400278a7:	mov    eax,DWORD PTR [rsp+0x68]
   1400278ab:	mov    DWORD PTR [rsi+0xb0],eax
   1400278b1:	jmp    0x1400277b4
   1400278b6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400278bb:	add    rsp,0x30
   1400278bf:	pop    r15
   1400278c1:	pop    r14
   1400278c3:	pop    r12
   1400278c5:	pop    rdi
   1400278c6:	pop    rsi
   1400278c7:	ret    
   1400278c8:	int3   
   1400278c9:	int3   
   1400278ca:	int3   
   1400278cb:	int3   
   1400278cc:	int3   
   1400278cd:	int3   
   1400278ce:	int3   
   1400278cf:	int3   
   1400278d0:	int3   
   1400278d1:	int3   
   1400278d2:	int3   
   1400278d3:	int3   
   1400278d4:	int3   
   1400278d5:	int3   
   1400278d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400278e0:	mov    rax,rcx
   1400278e3:	neg    rcx
   1400278e6:	test   rax,0x7
   1400278ec:	je     0x1400278fd
   1400278ee:	xchg   ax,ax
   1400278f0:	mov    dl,BYTE PTR [rax]
   1400278f2:	inc    rax
   1400278f5:	test   dl,dl
   1400278f7:	je     0x140027958
   1400278f9:	test   al,0x7
   1400278fb:	jne    0x1400278f0
   1400278fd:	movabs r8,0x7efefefefefefeff
   140027907:	movabs r11,0x8101010101010100
   140027911:	mov    rdx,QWORD PTR [rax]
   140027914:	mov    r9,r8
   140027917:	add    rax,0x8
   14002791b:	add    r9,rdx
   14002791e:	not    rdx
   140027921:	xor    rdx,r9
   140027924:	and    rdx,r11
   140027927:	je     0x140027911
   140027929:	mov    rdx,QWORD PTR [rax-0x8]
   14002792d:	test   dl,dl
   14002792f:	je     0x140027982
   140027931:	test   dh,dh
   140027933:	je     0x14002797c
   140027935:	shr    rdx,0x10
   140027939:	test   dl,dl
   14002793b:	je     0x140027976
   14002793d:	test   dh,dh
   14002793f:	je     0x140027970
   140027941:	shr    rdx,0x10
   140027945:	test   dl,dl
   140027947:	je     0x14002796a
   140027949:	test   dh,dh
   14002794b:	je     0x140027964
   14002794d:	shr    edx,0x10
   140027950:	test   dl,dl
   140027952:	je     0x14002795e
   140027954:	test   dh,dh
   140027956:	jne    0x140027911
   140027958:	lea    rax,[rcx+rax*1-0x1]
   14002795d:	ret    
   14002795e:	lea    rax,[rcx+rax*1-0x2]
   140027963:	ret    
   140027964:	lea    rax,[rcx+rax*1-0x3]
   140027969:	ret    
   14002796a:	lea    rax,[rcx+rax*1-0x4]
   14002796f:	ret    
   140027970:	lea    rax,[rcx+rax*1-0x5]
   140027975:	ret    
   140027976:	lea    rax,[rcx+rax*1-0x6]
   14002797b:	ret    
   14002797c:	lea    rax,[rcx+rax*1-0x7]
   140027981:	ret    
   140027982:	lea    rax,[rcx+rax*1-0x8]
   140027987:	ret    
   140027988:	rex push rbx
   14002798a:	sub    rsp,0x20
   14002798e:	xor    r10d,r10d
   140027991:	mov    r9,rcx
   140027994:	test   rcx,rcx
   140027997:	je     0x1400279a7
   140027999:	test   rdx,rdx
   14002799c:	je     0x1400279a7
   14002799e:	test   r8,r8
   1400279a1:	jne    0x1400279c0
   1400279a3:	mov    WORD PTR [rcx],r10w
   1400279a7:	call   0x140025380
   1400279ac:	mov    ebx,0x16
   1400279b1:	mov    DWORD PTR [rax],ebx
   1400279b3:	call   0x140024554
   1400279b8:	mov    eax,ebx
   1400279ba:	add    rsp,0x20
   1400279be:	pop    rbx
   1400279bf:	ret    
   1400279c0:	cmp    WORD PTR [rcx],r10w
   1400279c4:	je     0x1400279cf
   1400279c6:	add    rcx,0x2
   1400279ca:	dec    rdx
   1400279cd:	jne    0x1400279c0
   1400279cf:	test   rdx,rdx
   1400279d2:	jne    0x1400279da
   1400279d4:	mov    WORD PTR [r9],r10w
   1400279d8:	jmp    0x1400279a7
   1400279da:	sub    rcx,r8
   1400279dd:	movzx  eax,WORD PTR [r8]
   1400279e1:	mov    WORD PTR [rcx+r8*1],ax
   1400279e6:	lea    r8,[r8+0x2]
   1400279ea:	test   ax,ax
   1400279ed:	je     0x1400279f4
   1400279ef:	dec    rdx
   1400279f2:	jne    0x1400279dd
   1400279f4:	test   rdx,rdx
   1400279f7:	jne    0x140027a09
   1400279f9:	mov    WORD PTR [r9],r10w
   1400279fd:	call   0x140025380
   140027a02:	mov    ebx,0x22
   140027a07:	jmp    0x1400279b1
   140027a09:	xor    eax,eax
   140027a0b:	jmp    0x1400279ba
   140027a0d:	int3   
   140027a0e:	int3   
   140027a0f:	int3   
   140027a10:	rex push rbx
   140027a12:	sub    rsp,0x20
   140027a16:	xor    r10d,r10d
   140027a19:	test   rcx,rcx
   140027a1c:	je     0x140027a2c
   140027a1e:	test   rdx,rdx
   140027a21:	je     0x140027a2c
   140027a23:	test   r8,r8
   140027a26:	jne    0x140027a45
   140027a28:	mov    WORD PTR [rcx],r10w
   140027a2c:	call   0x140025380
   140027a31:	mov    ebx,0x16
   140027a36:	mov    DWORD PTR [rax],ebx
   140027a38:	call   0x140024554
   140027a3d:	mov    eax,ebx
   140027a3f:	add    rsp,0x20
   140027a43:	pop    rbx
   140027a44:	ret    
   140027a45:	mov    r9,rcx
   140027a48:	sub    r9,r8
   140027a4b:	movzx  eax,WORD PTR [r8]
   140027a4f:	mov    WORD PTR [r9+r8*1],ax
   140027a54:	lea    r8,[r8+0x2]
   140027a58:	test   ax,ax
   140027a5b:	je     0x140027a62
   140027a5d:	dec    rdx
   140027a60:	jne    0x140027a4b
   140027a62:	test   rdx,rdx
   140027a65:	jne    0x140027a77
   140027a67:	mov    WORD PTR [rcx],r10w
   140027a6b:	call   0x140025380
   140027a70:	mov    ebx,0x22
   140027a75:	jmp    0x140027a36
   140027a77:	xor    eax,eax
   140027a79:	jmp    0x140027a3f
   140027a7b:	int3   
   140027a7c:	mov    rax,rcx
   140027a7f:	movzx  edx,WORD PTR [rax]
   140027a82:	add    rax,0x2
   140027a86:	test   dx,dx
   140027a89:	jne    0x140027a7f
   140027a8b:	sub    rax,rcx
   140027a8e:	sar    rax,1
   140027a91:	dec    rax
   140027a94:	ret    
   140027a95:	int3   
   140027a96:	int3   
   140027a97:	int3   
   140027a98:	rex push rbx
   140027a9a:	sub    rsp,0x20
   140027a9e:	xor    ebx,ebx
   140027aa0:	test   r9,r9
   140027aa3:	jne    0x140027ab3
   140027aa5:	test   rcx,rcx
   140027aa8:	jne    0x140027ab8
   140027aaa:	test   rdx,rdx
   140027aad:	jne    0x140027acf
   140027aaf:	xor    eax,eax
   140027ab1:	jmp    0x140027ae2
   140027ab3:	test   rcx,rcx
   140027ab6:	je     0x140027acf
   140027ab8:	test   rdx,rdx
   140027abb:	je     0x140027acf
   140027abd:	test   r9,r9
   140027ac0:	jne    0x140027ac7
   140027ac2:	mov    WORD PTR [rcx],bx
   140027ac5:	jmp    0x140027aaf
   140027ac7:	test   r8,r8
   140027aca:	jne    0x140027ae8
   140027acc:	mov    WORD PTR [rcx],bx
   140027acf:	call   0x140025380
   140027ad4:	mov    ebx,0x16
   140027ad9:	mov    DWORD PTR [rax],ebx
   140027adb:	call   0x140024554
   140027ae0:	mov    eax,ebx
   140027ae2:	add    rsp,0x20
   140027ae6:	pop    rbx
   140027ae7:	ret    
   140027ae8:	mov    r11,rcx
   140027aeb:	mov    r10,rdx
   140027aee:	cmp    r9,0xffffffffffffffff
   140027af2:	jne    0x140027b10
   140027af4:	sub    r11,r8
   140027af7:	movzx  eax,WORD PTR [r8]
   140027afb:	mov    WORD PTR [r11+r8*1],ax
   140027b00:	lea    r8,[r8+0x2]
   140027b04:	test   ax,ax
   140027b07:	je     0x140027b38
   140027b09:	dec    r10
   140027b0c:	jne    0x140027af7
   140027b0e:	jmp    0x140027b38
   140027b10:	sub    r8,rcx
   140027b13:	movzx  eax,WORD PTR [r8+r11*1]
   140027b18:	mov    WORD PTR [r11],ax
   140027b1c:	lea    r11,[r11+0x2]
   140027b20:	test   ax,ax
   140027b23:	je     0x140027b2f
   140027b25:	dec    r10
   140027b28:	je     0x140027b2f
   140027b2a:	dec    r9
   140027b2d:	jne    0x140027b13
   140027b2f:	test   r9,r9
   140027b32:	jne    0x140027b38
   140027b34:	mov    WORD PTR [r11],bx
   140027b38:	test   r10,r10
   140027b3b:	jne    0x140027aaf
   140027b41:	cmp    r9,0xffffffffffffffff
   140027b45:	jne    0x140027b52
   140027b47:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140027b4c:	lea    eax,[r10+0x50]
   140027b50:	jmp    0x140027ae2
   140027b52:	mov    WORD PTR [rcx],bx
   140027b55:	call   0x140025380
   140027b5a:	mov    ebx,0x22
   140027b5f:	jmp    0x140027ad9
   140027b64:	rex push rbx
   140027b66:	push   rbp
   140027b67:	push   rsi
   140027b68:	push   rdi
   140027b69:	push   r12
   140027b6b:	push   r14
   140027b6d:	push   r15
   140027b6f:	sub    rsp,0x50
   140027b73:	mov    rax,QWORD PTR [rip+0x258ce]        # 0x14004d448
   140027b7a:	xor    rax,rsp
   140027b7d:	mov    QWORD PTR [rsp+0x48],rax
   140027b82:	mov    r15,rcx
   140027b85:	xor    ecx,ecx
   140027b87:	mov    ebp,r8d
   140027b8a:	mov    r12,rdx
   140027b8d:	call   QWORD PTR [rip+0x11625]        # 0x1400391b8
   140027b93:	xor    edi,edi
   140027b95:	mov    rsi,rax
   140027b98:	call   0x14002682c
   140027b9d:	cmp    QWORD PTR [rip+0x28fe4],rdi        # 0x140050b88
   140027ba4:	mov    r14d,eax
   140027ba7:	jne    0x140027ca0
   140027bad:	lea    rcx,[rip+0x12e0c]        # 0x14003a9c0
   140027bb4:	xor    edx,edx
   140027bb6:	mov    r8d,0x800
   140027bbc:	call   QWORD PTR [rip+0x1178e]        # 0x140039350
   140027bc2:	mov    rbx,rax
   140027bc5:	test   rax,rax
   140027bc8:	jne    0x140027bf2
   140027bca:	call   QWORD PTR [rip+0x11a10]        # 0x1400395e0
   140027bd0:	cmp    eax,0x57
   140027bd3:	jne    0x140027db4
   140027bd9:	lea    rcx,[rip+0x12de0]        # 0x14003a9c0
   140027be0:	call   QWORD PTR [rip+0x1177a]        # 0x140039360
   140027be6:	mov    rbx,rax
   140027be9:	test   rax,rax
   140027bec:	je     0x140027db4
   140027bf2:	lea    rdx,[rip+0x12ddf]        # 0x14003a9d8
   140027bf9:	mov    rcx,rbx
   140027bfc:	call   QWORD PTR [rip+0x115ee]        # 0x1400391f0
   140027c02:	test   rax,rax
   140027c05:	je     0x140027db4
   140027c0b:	mov    rcx,rax
   140027c0e:	call   QWORD PTR [rip+0x115a4]        # 0x1400391b8
   140027c14:	lea    rdx,[rip+0x12dcd]        # 0x14003a9e8
   140027c1b:	mov    rcx,rbx
   140027c1e:	mov    QWORD PTR [rip+0x28f63],rax        # 0x140050b88
   140027c25:	call   QWORD PTR [rip+0x115c5]        # 0x1400391f0
   140027c2b:	mov    rcx,rax
   140027c2e:	call   QWORD PTR [rip+0x11584]        # 0x1400391b8
   140027c34:	lea    rdx,[rip+0x12dbd]        # 0x14003a9f8
   140027c3b:	mov    rcx,rbx
   140027c3e:	mov    QWORD PTR [rip+0x28f4b],rax        # 0x140050b90
   140027c45:	call   QWORD PTR [rip+0x115a5]        # 0x1400391f0
   140027c4b:	mov    rcx,rax
   140027c4e:	call   QWORD PTR [rip+0x11564]        # 0x1400391b8
   140027c54:	lea    rdx,[rip+0x12db5]        # 0x14003aa10
   140027c5b:	mov    rcx,rbx
   140027c5e:	mov    QWORD PTR [rip+0x28f33],rax        # 0x140050b98
   140027c65:	call   QWORD PTR [rip+0x11585]        # 0x1400391f0
   140027c6b:	mov    rcx,rax
   140027c6e:	call   QWORD PTR [rip+0x11544]        # 0x1400391b8
   140027c74:	mov    QWORD PTR [rip+0x28f2d],rax        # 0x140050ba8
   140027c7b:	test   rax,rax
   140027c7e:	je     0x140027ca0
   140027c80:	lea    rdx,[rip+0x12da9]        # 0x14003aa30
   140027c87:	mov    rcx,rbx
   140027c8a:	call   QWORD PTR [rip+0x11560]        # 0x1400391f0
   140027c90:	mov    rcx,rax
   140027c93:	call   QWORD PTR [rip+0x1151f]        # 0x1400391b8
   140027c99:	mov    QWORD PTR [rip+0x28f00],rax        # 0x140050ba0
   140027ca0:	call   QWORD PTR [rip+0x115da]        # 0x140039280
   140027ca6:	test   eax,eax
   140027ca8:	je     0x140027cc7
   140027caa:	test   r15,r15
   140027cad:	je     0x140027cb8
   140027caf:	mov    rcx,r15
   140027cb2:	call   QWORD PTR [rip+0x116a0]        # 0x140039358
   140027cb8:	test   r14d,r14d
   140027cbb:	je     0x140027ce3
   140027cbd:	mov    eax,0x4
   140027cc2:	jmp    0x140027db6
   140027cc7:	test   r14d,r14d
   140027cca:	je     0x140027ce3
   140027ccc:	mov    rcx,QWORD PTR [rip+0x28eb5]        # 0x140050b88
   140027cd3:	call   QWORD PTR [rip+0x114e7]        # 0x1400391c0
   140027cd9:	mov    eax,0x3
   140027cde:	jmp    0x140027db6
   140027ce3:	mov    rcx,QWORD PTR [rip+0x28eb6]        # 0x140050ba0
   140027cea:	cmp    rcx,rsi
   140027ced:	je     0x140027d52
   140027cef:	cmp    QWORD PTR [rip+0x28eb2],rsi        # 0x140050ba8
   140027cf6:	je     0x140027d52
   140027cf8:	call   QWORD PTR [rip+0x114c2]        # 0x1400391c0
   140027cfe:	mov    rcx,QWORD PTR [rip+0x28ea3]        # 0x140050ba8
   140027d05:	mov    rbx,rax
   140027d08:	call   QWORD PTR [rip+0x114b2]        # 0x1400391c0
   140027d0e:	mov    r14,rax
   140027d11:	test   rbx,rbx
   140027d14:	je     0x140027d52
   140027d16:	test   rax,rax
   140027d19:	je     0x140027d52
   140027d1b:	call   rbx
   140027d1d:	test   rax,rax
   140027d20:	je     0x140027d4c
   140027d22:	lea    rcx,[rsp+0x30]
   140027d27:	mov    r9d,0xc
   140027d2d:	lea    r8,[rsp+0x38]
   140027d32:	mov    QWORD PTR [rsp+0x20],rcx
   140027d37:	lea    edx,[r9-0xb]
   140027d3b:	mov    rcx,rax
   140027d3e:	call   r14
   140027d41:	test   eax,eax
   140027d43:	je     0x140027d4c
   140027d45:	test   BYTE PTR [rsp+0x40],0x1
   140027d4a:	jne    0x140027d52
   140027d4c:	bts    ebp,0x15
   140027d50:	jmp    0x140027d92
   140027d52:	mov    rcx,QWORD PTR [rip+0x28e37]        # 0x140050b90
   140027d59:	cmp    rcx,rsi
   140027d5c:	je     0x140027d92
   140027d5e:	call   QWORD PTR [rip+0x1145c]        # 0x1400391c0
   140027d64:	test   rax,rax
   140027d67:	je     0x140027d92
   140027d69:	call   rax
   140027d6b:	mov    rdi,rax
   140027d6e:	test   rax,rax
   140027d71:	je     0x140027d92
   140027d73:	mov    rcx,QWORD PTR [rip+0x28e1e]        # 0x140050b98
   140027d7a:	cmp    rcx,rsi
   140027d7d:	je     0x140027d92
   140027d7f:	call   QWORD PTR [rip+0x1143b]        # 0x1400391c0
   140027d85:	test   rax,rax
   140027d88:	je     0x140027d92
   140027d8a:	mov    rcx,rdi
   140027d8d:	call   rax
   140027d8f:	mov    rdi,rax
   140027d92:	mov    rcx,QWORD PTR [rip+0x28def]        # 0x140050b88
   140027d99:	call   QWORD PTR [rip+0x11421]        # 0x1400391c0
   140027d9f:	test   rax,rax
   140027da2:	je     0x140027db4
   140027da4:	mov    r9d,ebp
   140027da7:	mov    r8,r12
   140027daa:	mov    rdx,r15
   140027dad:	mov    rcx,rdi
   140027db0:	call   rax
   140027db2:	jmp    0x140027db6
   140027db4:	xor    eax,eax
   140027db6:	mov    rcx,QWORD PTR [rsp+0x48]
   140027dbb:	xor    rcx,rsp
   140027dbe:	call   0x140020e50
   140027dc3:	add    rsp,0x50
   140027dc7:	pop    r15
   140027dc9:	pop    r14
   140027dcb:	pop    r12
   140027dcd:	pop    rdi
   140027dce:	pop    rsi
   140027dcf:	pop    rbp
   140027dd0:	pop    rbx
   140027dd1:	ret    
   140027dd2:	int3   
   140027dd3:	int3   
   140027dd4:	sub    rsp,0x28
   140027dd8:	mov    r8,QWORD PTR [r9+0x38]
   140027ddc:	mov    rcx,rdx
   140027ddf:	mov    rdx,r9
   140027de2:	call   0x140027df4
   140027de7:	mov    eax,0x1
   140027dec:	add    rsp,0x28
   140027df0:	ret    
   140027df1:	int3   
   140027df2:	int3   
   140027df3:	int3   
   140027df4:	rex push rbx
   140027df6:	sub    rsp,0x20
   140027dfa:	mov    r11d,DWORD PTR [r8]
   140027dfd:	mov    rbx,rdx
   140027e00:	mov    r9,rcx
   140027e03:	and    r11d,0xfffffff8
   140027e07:	test   BYTE PTR [r8],0x4
   140027e0b:	mov    r10,rcx
   140027e0e:	je     0x140027e23
   140027e10:	mov    eax,DWORD PTR [r8+0x8]
   140027e14:	movsxd r10,DWORD PTR [r8+0x4]
   140027e18:	neg    eax
   140027e1a:	add    r10,rcx
   140027e1d:	movsxd rcx,eax
   140027e20:	and    r10,rcx
   140027e23:	movsxd rax,r11d
   140027e26:	mov    rdx,QWORD PTR [rax+r10*1]
   140027e2a:	mov    rax,QWORD PTR [rbx+0x10]
   140027e2e:	mov    ecx,DWORD PTR [rax+0x8]
   140027e31:	add    rcx,QWORD PTR [rbx+0x8]
   140027e35:	test   BYTE PTR [rcx+0x3],0xf
   140027e39:	je     0x140027e47
   140027e3b:	movzx  eax,BYTE PTR [rcx+0x3]
   140027e3f:	and    eax,0xfffffff0
   140027e42:	cdqe   
   140027e44:	add    r9,rax
   140027e47:	xor    r9,rdx
   140027e4a:	mov    rcx,r9
   140027e4d:	add    rsp,0x20
   140027e51:	pop    rbx
   140027e52:	jmp    0x140020e50
   140027e57:	int3   
   140027e58:	int3   
   140027e59:	int3   
   140027e5a:	int3   
   140027e5b:	int3   
   140027e5c:	int3   
   140027e5d:	int3   
   140027e5e:	int3   
   140027e5f:	int3   
   140027e60:	int3   
   140027e61:	int3   
   140027e62:	int3   
   140027e63:	int3   
   140027e64:	int3   
   140027e65:	int3   
   140027e66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027e70:	sub    rsp,0x4d8
   140027e77:	xor    r8,r8
   140027e7a:	xor    r9,r9
   140027e7d:	mov    QWORD PTR [rsp+0x20],rsp
   140027e82:	mov    QWORD PTR [rsp+0x28],r8
   140027e87:	call   0x14002a9d0
   140027e8c:	add    rsp,0x4d8
   140027e93:	ret    
   140027e94:	int3   
   140027e95:	int3   
   140027e96:	int3   
   140027e97:	int3   
   140027e98:	int3   
   140027e99:	int3   
   140027e9a:	nop    WORD PTR [rax+rax*1+0x0]
   140027ea0:	mov    QWORD PTR [rsp+0x8],rcx
   140027ea5:	mov    QWORD PTR [rsp+0x18],rdx
   140027eaa:	mov    DWORD PTR [rsp+0x10],r8d
   140027eaf:	mov    r9,0x19930520
   140027eb6:	jmp    0x140027ec0
   140027eb8:	int3   
   140027eb9:	int3   
   140027eba:	int3   
   140027ebb:	int3   
   140027ebc:	int3   
   140027ebd:	int3   
   140027ebe:	xchg   ax,ax
   140027ec0:	ret    
   140027ec1:	int3   
   140027ec2:	int3   
   140027ec3:	int3   
   140027ec4:	int3   
   140027ec5:	int3   
   140027ec6:	int3   
   140027ec7:	nop    WORD PTR [rax+rax*1+0x0]
   140027ed0:	ret    
   140027ed1:	int3   
   140027ed2:	int3   
   140027ed3:	int3   
   140027ed4:	and    DWORD PTR [rip+0x2a3ed],0x0        # 0x1400522c8
   140027edb:	ret    
   140027edc:	mov    QWORD PTR [rsp+0x8],rbx
   140027ee1:	push   rdi
   140027ee2:	sub    rsp,0x20
   140027ee6:	or     edi,0xffffffff
   140027ee9:	mov    rbx,rcx
   140027eec:	test   rcx,rcx
   140027eef:	jne    0x140027f05
   140027ef1:	call   0x140025380
   140027ef6:	mov    DWORD PTR [rax],0x16
   140027efc:	call   0x140024554
   140027f01:	or     eax,edi
   140027f03:	jmp    0x140027f4b
   140027f05:	test   BYTE PTR [rcx+0x18],0x83
   140027f09:	je     0x140027f45
   140027f0b:	call   0x14002158c
   140027f10:	mov    rcx,rbx
   140027f13:	mov    edi,eax
   140027f15:	call   0x1400299ec
   140027f1a:	mov    rcx,rbx
   140027f1d:	call   0x140023a40
   140027f22:	mov    ecx,eax
   140027f24:	call   0x140029850
   140027f29:	test   eax,eax
   140027f2b:	jns    0x140027f32
   140027f2d:	or     edi,0xffffffff
   140027f30:	jmp    0x140027f45
   140027f32:	mov    rcx,QWORD PTR [rbx+0x28]
   140027f36:	test   rcx,rcx
   140027f39:	je     0x140027f45
   140027f3b:	call   0x140023328
   140027f40:	and    QWORD PTR [rbx+0x28],0x0
   140027f45:	and    DWORD PTR [rbx+0x18],0x0
   140027f49:	mov    eax,edi
   140027f4b:	mov    rbx,QWORD PTR [rsp+0x30]
   140027f50:	add    rsp,0x20
   140027f54:	pop    rdi
   140027f55:	ret    
   140027f56:	int3   
   140027f57:	int3   
   140027f58:	mov    QWORD PTR [rsp+0x10],rbx
   140027f5d:	mov    QWORD PTR [rsp+0x8],rcx
   140027f62:	push   rdi
   140027f63:	sub    rsp,0x20
   140027f67:	mov    rbx,rcx
   140027f6a:	or     edi,0xffffffff
   140027f6d:	xor    eax,eax
   140027f6f:	test   rcx,rcx
   140027f72:	setne  al
   140027f75:	test   eax,eax
   140027f77:	jne    0x140027f8d
   140027f79:	call   0x140025380
   140027f7e:	mov    DWORD PTR [rax],0x16
   140027f84:	call   0x140024554
   140027f89:	mov    eax,edi
   140027f8b:	jmp    0x140027fb3
   140027f8d:	test   BYTE PTR [rcx+0x18],0x40
   140027f91:	je     0x140027f99
   140027f93:	and    DWORD PTR [rcx+0x18],0x0
   140027f97:	jmp    0x140027f89
   140027f99:	call   0x140021434
   140027f9e:	nop
   140027f9f:	mov    rcx,rbx
   140027fa2:	call   0x140027edc
   140027fa7:	mov    edi,eax
   140027fa9:	mov    rcx,rbx
   140027fac:	call   0x1400214d0
   140027fb1:	jmp    0x140027f89
   140027fb3:	mov    rbx,QWORD PTR [rsp+0x38]
   140027fb8:	add    rsp,0x20
   140027fbc:	pop    rdi
   140027fbd:	ret    
   140027fbe:	int3   
   140027fbf:	int3   
   140027fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140027fc5:	mov    QWORD PTR [rsp+0x10],rsi
   140027fca:	push   rdi
   140027fcb:	sub    rsp,0x20
   140027fcf:	mov    rbx,rdx
   140027fd2:	mov    rdi,rcx
   140027fd5:	test   rcx,rcx
   140027fd8:	jne    0x140027fe4
   140027fda:	mov    rcx,rdx
   140027fdd:	call   0x140026354
   140027fe2:	jmp    0x14002804e
   140027fe4:	test   rdx,rdx
   140027fe7:	jne    0x140027ff0
   140027fe9:	call   0x140023328
   140027fee:	jmp    0x14002804c
   140027ff0:	cmp    rdx,0xffffffffffffffe0
   140027ff4:	ja     0x140028039
   140027ff6:	mov    rcx,QWORD PTR [rip+0x2811b]        # 0x140050118
   140027ffd:	mov    eax,0x1
   140028002:	test   rbx,rbx
   140028005:	cmove  rbx,rax
   140028009:	mov    r8,rdi
   14002800c:	xor    edx,edx
   14002800e:	mov    r9,rbx
   140028011:	call   QWORD PTR [rip+0x11351]        # 0x140039368
   140028017:	mov    rsi,rax
   14002801a:	test   rax,rax
   14002801d:	jne    0x14002808e
   14002801f:	cmp    DWORD PTR [rip+0x28bfb],eax        # 0x140050c20
   140028025:	je     0x140028077
   140028027:	mov    rcx,rbx
   14002802a:	call   0x1400265ac
   14002802f:	test   eax,eax
   140028031:	je     0x14002805e
   140028033:	cmp    rbx,0xffffffffffffffe0
   140028037:	jbe    0x140027ff6
   140028039:	mov    rcx,rbx
   14002803c:	call   0x1400265ac
   140028041:	call   0x140025380
   140028046:	mov    DWORD PTR [rax],0xc
   14002804c:	xor    eax,eax
   14002804e:	mov    rbx,QWORD PTR [rsp+0x30]
   140028053:	mov    rsi,QWORD PTR [rsp+0x38]
   140028058:	add    rsp,0x20
   14002805c:	pop    rdi
   14002805d:	ret    
   14002805e:	call   0x140025380
   140028063:	mov    rbx,rax
   140028066:	call   QWORD PTR [rip+0x11574]        # 0x1400395e0
   14002806c:	mov    ecx,eax
   14002806e:	call   0x1400253a0
   140028073:	mov    DWORD PTR [rbx],eax
   140028075:	jmp    0x14002804c
   140028077:	call   0x140025380
   14002807c:	mov    rbx,rax
   14002807f:	call   QWORD PTR [rip+0x1155b]        # 0x1400395e0
   140028085:	mov    ecx,eax
   140028087:	call   0x1400253a0
   14002808c:	mov    DWORD PTR [rbx],eax
   14002808e:	mov    rax,rsi
   140028091:	jmp    0x14002804e
   140028093:	int3   
   140028094:	mov    QWORD PTR [rsp+0x8],rbx
   140028099:	mov    QWORD PTR [rsp+0x10],rsi
   14002809e:	push   rdi
   14002809f:	sub    rsp,0x20
   1400280a3:	xor    edi,edi
   1400280a5:	mov    rbx,rdx
   1400280a8:	mov    rsi,rcx
   1400280ab:	test   rdx,rdx
   1400280ae:	je     0x1400280cd
   1400280b0:	xor    edx,edx
   1400280b2:	lea    rax,[rdi-0x20]
   1400280b6:	div    rbx
   1400280b9:	cmp    rax,r8
   1400280bc:	jae    0x1400280cd
   1400280be:	call   0x140025380
   1400280c3:	mov    DWORD PTR [rax],0xc
   1400280c9:	xor    eax,eax
   1400280cb:	jmp    0x14002810a
   1400280cd:	imul   rbx,r8
   1400280d1:	test   rcx,rcx
   1400280d4:	je     0x1400280de
   1400280d6:	call   0x1400243b4
   1400280db:	mov    rdi,rax
   1400280de:	mov    rdx,rbx
   1400280e1:	mov    rcx,rsi
   1400280e4:	call   0x140027fc0
   1400280e9:	mov    rsi,rax
   1400280ec:	test   rax,rax
   1400280ef:	je     0x140028107
   1400280f1:	cmp    rdi,rbx
   1400280f4:	jae    0x140028107
   1400280f6:	sub    rbx,rdi
   1400280f9:	lea    rcx,[rdi+rax*1]
   1400280fd:	xor    edx,edx
   1400280ff:	mov    r8,rbx
   140028102:	call   0x1400260e0
   140028107:	mov    rax,rsi
   14002810a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002810f:	mov    rsi,QWORD PTR [rsp+0x38]
   140028114:	add    rsp,0x20
   140028118:	pop    rdi
   140028119:	ret    
   14002811a:	int3   
   14002811b:	int3   
   14002811c:	mov    QWORD PTR [rsp+0x8],rbx
   140028121:	push   rdi
   140028122:	sub    rsp,0x20
   140028126:	mov    rdi,r8
   140028129:	mov    rbx,rdx
   14002812c:	test   rcx,rcx
   14002812f:	je     0x14002814e
   140028131:	xor    edx,edx
   140028133:	lea    rax,[rdx-0x20]
   140028137:	div    rcx
   14002813a:	cmp    rax,rbx
   14002813d:	jae    0x14002814e
   14002813f:	call   0x140025380
   140028144:	mov    DWORD PTR [rax],0xc
   14002814a:	xor    eax,eax
   14002814c:	jmp    0x1400281ab
   14002814e:	imul   rbx,rcx
   140028152:	mov    eax,0x1
   140028157:	test   rbx,rbx
   14002815a:	cmove  rbx,rax
   14002815e:	xor    eax,eax
   140028160:	cmp    rbx,0xffffffffffffffe0
   140028164:	ja     0x14002817e
   140028166:	mov    rcx,QWORD PTR [rip+0x27fab]        # 0x140050118
   14002816d:	lea    edx,[rax+0x8]
   140028170:	mov    r8,rbx
   140028173:	call   QWORD PTR [rip+0x1113f]        # 0x1400392b8
   140028179:	test   rax,rax
   14002817c:	jne    0x1400281ab
   14002817e:	cmp    DWORD PTR [rip+0x28a9b],0x0        # 0x140050c20
   140028185:	je     0x1400281a0
   140028187:	mov    rcx,rbx
   14002818a:	call   0x1400265ac
   14002818f:	test   eax,eax
   140028191:	jne    0x14002815e
   140028193:	test   rdi,rdi
   140028196:	je     0x14002814a
   140028198:	mov    DWORD PTR [rdi],0xc
   14002819e:	jmp    0x14002814a
   1400281a0:	test   rdi,rdi
   1400281a3:	je     0x1400281ab
   1400281a5:	mov    DWORD PTR [rdi],0xc
   1400281ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400281b0:	add    rsp,0x20
   1400281b4:	pop    rdi
   1400281b5:	ret    
   1400281b6:	int3   
   1400281b7:	int3   
   1400281b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400281bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400281c2:	mov    QWORD PTR [rsp+0x18],rdi
   1400281c7:	push   r15
   1400281c9:	sub    rsp,0x20
   1400281cd:	movsxd rbx,ecx
   1400281d0:	mov    rsi,rbx
   1400281d3:	sar    rsi,0x5
   1400281d7:	lea    r15,[rip+0x2a102]        # 0x1400522e0
   1400281de:	and    ebx,0x1f
   1400281e1:	imul   rbx,rbx,0x58
   1400281e5:	mov    rdi,QWORD PTR [r15+rsi*8]
   1400281e9:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   1400281ee:	jne    0x140028222
   1400281f0:	mov    ecx,0xa
   1400281f5:	call   0x140023638
   1400281fa:	nop
   1400281fb:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140028200:	jne    0x140028218
   140028202:	lea    rcx,[rbx+0x10]
   140028206:	add    rcx,rdi
   140028209:	mov    edx,0xfa0
   14002820e:	call   QWORD PTR [rip+0x11014]        # 0x140039228
   140028214:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140028218:	mov    ecx,0xa
   14002821d:	call   0x140023820
   140028222:	mov    rcx,QWORD PTR [r15+rsi*8]
   140028226:	add    rcx,0x10
   14002822a:	add    rcx,rbx
   14002822d:	call   QWORD PTR [rip+0x10f75]        # 0x1400391a8
   140028233:	mov    eax,0x1
   140028238:	mov    rbx,QWORD PTR [rsp+0x30]
   14002823d:	mov    rsi,QWORD PTR [rsp+0x38]
   140028242:	mov    rdi,QWORD PTR [rsp+0x40]
   140028247:	add    rsp,0x20
   14002824b:	pop    r15
   14002824d:	ret    
   14002824e:	int3   
   14002824f:	int3   
   140028250:	mov    QWORD PTR [rsp+0x8],rbx
   140028255:	mov    QWORD PTR [rsp+0x10],rdi
   14002825a:	push   r14
   14002825c:	sub    rsp,0x20
   140028260:	test   ecx,ecx
   140028262:	js     0x1400282d3
   140028264:	cmp    ecx,DWORD PTR [rip+0x2a062]        # 0x1400522cc
   14002826a:	jae    0x1400282d3
   14002826c:	movsxd rbx,ecx
   14002826f:	lea    r14,[rip+0x2a06a]        # 0x1400522e0
   140028276:	mov    rdi,rbx
   140028279:	and    ebx,0x1f
   14002827c:	sar    rdi,0x5
   140028280:	imul   rbx,rbx,0x58
   140028284:	mov    rax,QWORD PTR [r14+rdi*8]
   140028288:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002828d:	je     0x1400282d3
   14002828f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   140028294:	je     0x1400282d3
   140028296:	cmp    DWORD PTR [rip+0x27843],0x1        # 0x14004fae0
   14002829d:	jne    0x1400282c6
   14002829f:	test   ecx,ecx
   1400282a1:	je     0x1400282b9
   1400282a3:	dec    ecx
   1400282a5:	je     0x1400282b2
   1400282a7:	dec    ecx
   1400282a9:	jne    0x1400282c6
   1400282ab:	mov    ecx,0xfffffff4
   1400282b0:	jmp    0x1400282be
   1400282b2:	mov    ecx,0xfffffff5
   1400282b7:	jmp    0x1400282be
   1400282b9:	mov    ecx,0xfffffff6
   1400282be:	xor    edx,edx
   1400282c0:	call   QWORD PTR [rip+0x110aa]        # 0x140039370
   1400282c6:	mov    rax,QWORD PTR [r14+rdi*8]
   1400282ca:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400282cf:	xor    eax,eax
   1400282d1:	jmp    0x1400282e9
   1400282d3:	call   0x140025380
   1400282d8:	mov    DWORD PTR [rax],0x9
   1400282de:	call   0x140025310
   1400282e3:	and    DWORD PTR [rax],0x0
   1400282e6:	or     eax,0xffffffff
   1400282e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400282ee:	mov    rdi,QWORD PTR [rsp+0x38]
   1400282f3:	add    rsp,0x20
   1400282f7:	pop    r14
   1400282f9:	ret    
   1400282fa:	int3   
   1400282fb:	int3   
   1400282fc:	rex push rbx
   1400282fe:	sub    rsp,0x20
   140028302:	movsxd rbx,ecx
   140028305:	cmp    ebx,0xfffffffe
   140028308:	jne    0x14002831f
   14002830a:	call   0x140025310
   14002830f:	and    DWORD PTR [rax],0x0
   140028312:	call   0x140025380
   140028317:	mov    DWORD PTR [rax],0x9
   14002831d:	jmp    0x140028375
   14002831f:	call   0x1400227ec
   140028324:	test   eax,eax
   140028326:	js     0x140028375
   140028328:	test   ebx,ebx
   14002832a:	js     0x14002835d
   14002832c:	cmp    ebx,DWORD PTR [rip+0x29f9a]        # 0x1400522cc
   140028332:	jae    0x14002835d
   140028334:	mov    rcx,rbx
   140028337:	mov    rax,rbx
   14002833a:	lea    rdx,[rip+0x29f9f]        # 0x1400522e0
   140028341:	sar    rax,0x5
   140028345:	and    ecx,0x1f
   140028348:	mov    rax,QWORD PTR [rdx+rax*8]
   14002834c:	imul   rcx,rcx,0x58
   140028350:	test   BYTE PTR [rax+rcx*1+0x8],0x1
   140028355:	je     0x14002835d
   140028357:	mov    rax,QWORD PTR [rax+rcx*1]
   14002835b:	jmp    0x140028379
   14002835d:	call   0x140025310
   140028362:	and    DWORD PTR [rax],0x0
   140028365:	call   0x140025380
   14002836a:	mov    DWORD PTR [rax],0x9
   140028370:	call   0x140024554
   140028375:	or     rax,0xffffffffffffffff
   140028379:	add    rsp,0x20
   14002837d:	pop    rbx
   14002837e:	ret    
   14002837f:	int3   
   140028380:	movsxd rdx,ecx
   140028383:	lea    rcx,[rip+0x29f56]        # 0x1400522e0
   14002838a:	mov    rax,rdx
   14002838d:	and    edx,0x1f
   140028390:	sar    rax,0x5
   140028394:	imul   rdx,rdx,0x58
   140028398:	mov    rax,QWORD PTR [rcx+rax*8]
   14002839c:	lea    rcx,[rdx+0x10]
   1400283a0:	add    rcx,rax
   1400283a3:	rex.W jmp QWORD PTR [rip+0x10e06]        # 0x1400391b0
   1400283aa:	int3   
   1400283ab:	int3   
   1400283ac:	rex push rbx
   1400283ae:	sub    rsp,0x40
   1400283b2:	mov    ebx,ecx
   1400283b4:	lea    rcx,[rsp+0x20]
   1400283b9:	call   0x1400246b8
   1400283be:	mov    rax,QWORD PTR [rsp+0x20]
   1400283c3:	movzx  edx,bl
   1400283c6:	mov    rcx,QWORD PTR [rax+0x108]
   1400283cd:	movzx  eax,WORD PTR [rcx+rdx*2]
   1400283d1:	and    eax,0x8000
   1400283d6:	cmp    BYTE PTR [rsp+0x38],0x0
   1400283db:	je     0x1400283e9
   1400283dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400283e2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400283e9:	add    rsp,0x40
   1400283ed:	pop    rbx
   1400283ee:	ret    
   1400283ef:	int3   
   1400283f0:	rex push rbx
   1400283f2:	sub    rsp,0x40
   1400283f6:	mov    ebx,ecx
   1400283f8:	lea    rcx,[rsp+0x20]
   1400283fd:	xor    edx,edx
   1400283ff:	call   0x1400246b8
   140028404:	mov    rax,QWORD PTR [rsp+0x20]
   140028409:	movzx  edx,bl
   14002840c:	mov    rcx,QWORD PTR [rax+0x108]
   140028413:	movzx  eax,WORD PTR [rcx+rdx*2]
   140028417:	and    eax,0x8000
   14002841c:	cmp    BYTE PTR [rsp+0x38],0x0
   140028421:	je     0x14002842f
   140028423:	mov    rcx,QWORD PTR [rsp+0x30]
   140028428:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002842f:	add    rsp,0x40
   140028433:	pop    rbx
   140028434:	ret    
   140028435:	int3   
   140028436:	int3   
   140028437:	int3   
   140028438:	mov    edx,0x8
   14002843d:	jmp    0x140029a24
   140028442:	int3   
   140028443:	int3   
   140028444:	rex push rbx
   140028446:	sub    rsp,0x20
   14002844a:	movsxd rbx,ecx
   14002844d:	cmp    ebx,0xfffffffe
   140028450:	jne    0x14002845f
   140028452:	call   0x140025380
   140028457:	mov    DWORD PTR [rax],0x9
   14002845d:	jmp    0x1400284af
   14002845f:	call   0x1400227ec
   140028464:	test   eax,eax
   140028466:	jns    0x14002846d
   140028468:	or     eax,0xffffffff
   14002846b:	jmp    0x1400284b1
   14002846d:	test   ebx,ebx
   14002846f:	js     0x14002849f
   140028471:	cmp    ebx,DWORD PTR [rip+0x29e55]        # 0x1400522cc
   140028477:	jae    0x14002849f
   140028479:	mov    rcx,rbx
   14002847c:	mov    rax,rbx
   14002847f:	lea    rdx,[rip+0x29e5a]        # 0x1400522e0
   140028486:	sar    rax,0x5
   14002848a:	and    ecx,0x1f
   14002848d:	mov    rax,QWORD PTR [rdx+rax*8]
   140028491:	imul   rcx,rcx,0x58
   140028495:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14002849a:	and    eax,0x40
   14002849d:	jmp    0x1400284b1
   14002849f:	call   0x140025380
   1400284a4:	mov    DWORD PTR [rax],0x9
   1400284aa:	call   0x140024554
   1400284af:	xor    eax,eax
   1400284b1:	add    rsp,0x20
   1400284b5:	pop    rbx
   1400284b6:	ret    
   1400284b7:	int3   
   1400284b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400284bd:	mov    DWORD PTR [rsp+0x8],ecx
   1400284c1:	push   rsi
   1400284c2:	push   rdi
   1400284c3:	push   r12
   1400284c5:	push   r14
   1400284c7:	push   r15
   1400284c9:	sub    rsp,0x20
   1400284cd:	mov    r14d,r8d
   1400284d0:	mov    r15,rdx
   1400284d3:	movsxd rdi,ecx
   1400284d6:	cmp    edi,0xfffffffe
   1400284d9:	jne    0x1400284f3
   1400284db:	call   0x140025310
   1400284e0:	and    DWORD PTR [rax],0x0
   1400284e3:	call   0x140025380
   1400284e8:	mov    DWORD PTR [rax],0x9
   1400284ee:	jmp    0x140028592
   1400284f3:	call   0x1400227ec
   1400284f8:	test   eax,eax
   1400284fa:	js     0x140028592
   140028500:	test   edi,edi
   140028502:	js     0x14002857a
   140028504:	cmp    edi,DWORD PTR [rip+0x29dc2]        # 0x1400522cc
   14002850a:	jae    0x14002857a
   14002850c:	mov    rbx,rdi
   14002850f:	mov    rsi,rdi
   140028512:	sar    rsi,0x5
   140028516:	lea    r12,[rip+0x29dc3]        # 0x1400522e0
   14002851d:	and    ebx,0x1f
   140028520:	imul   rbx,rbx,0x58
   140028524:	mov    rax,QWORD PTR [r12+rsi*8]
   140028528:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14002852d:	and    ecx,0x1
   140028530:	je     0x14002857a
   140028532:	mov    ecx,edi
   140028534:	call   0x1400281b8
   140028539:	nop
   14002853a:	mov    rax,QWORD PTR [r12+rsi*8]
   14002853e:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   140028543:	je     0x140028557
   140028545:	mov    r8d,r14d
   140028548:	mov    rdx,r15
   14002854b:	mov    ecx,edi
   14002854d:	call   0x1400285a8
   140028552:	mov    rbx,rax
   140028555:	jmp    0x14002856e
   140028557:	call   0x140025380
   14002855c:	mov    DWORD PTR [rax],0x9
   140028562:	call   0x140025310
   140028567:	and    DWORD PTR [rax],0x0
   14002856a:	or     rbx,0xffffffffffffffff
   14002856e:	mov    ecx,edi
   140028570:	call   0x140028380
   140028575:	mov    rax,rbx
   140028578:	jmp    0x140028596
   14002857a:	call   0x140025310
   14002857f:	and    DWORD PTR [rax],0x0
   140028582:	call   0x140025380
   140028587:	mov    DWORD PTR [rax],0x9
   14002858d:	call   0x140024554
   140028592:	or     rax,0xffffffffffffffff
   140028596:	mov    rbx,QWORD PTR [rsp+0x58]
   14002859b:	add    rsp,0x20
   14002859f:	pop    r15
   1400285a1:	pop    r14
   1400285a3:	pop    r12
   1400285a5:	pop    rdi
   1400285a6:	pop    rsi
   1400285a7:	ret    
   1400285a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400285ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400285b2:	push   rdi
   1400285b3:	sub    rsp,0x20
   1400285b7:	movsxd rbx,ecx
   1400285ba:	mov    edi,r8d
   1400285bd:	mov    rsi,rdx
   1400285c0:	mov    ecx,ebx
   1400285c2:	call   0x1400282fc
   1400285c7:	cmp    rax,0xffffffffffffffff
   1400285cb:	jne    0x1400285de
   1400285cd:	call   0x140025380
   1400285d2:	mov    DWORD PTR [rax],0x9
   1400285d8:	or     rax,0xffffffffffffffff
   1400285dc:	jmp    0x14002862b
   1400285de:	lea    r8,[rsp+0x48]
   1400285e3:	mov    r9d,edi
   1400285e6:	mov    rdx,rsi
   1400285e9:	mov    rcx,rax
   1400285ec:	call   QWORD PTR [rip+0x10d86]        # 0x140039378
   1400285f2:	test   eax,eax
   1400285f4:	jne    0x140028605
   1400285f6:	call   QWORD PTR [rip+0x10fe4]        # 0x1400395e0
   1400285fc:	mov    ecx,eax
   1400285fe:	call   0x140025330
   140028603:	jmp    0x1400285d8
   140028605:	mov    rcx,rbx
   140028608:	mov    rax,rbx
   14002860b:	lea    rdx,[rip+0x29cce]        # 0x1400522e0
   140028612:	sar    rax,0x5
   140028616:	and    ecx,0x1f
   140028619:	mov    rax,QWORD PTR [rdx+rax*8]
   14002861d:	imul   rcx,rcx,0x58
   140028621:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140028626:	mov    rax,QWORD PTR [rsp+0x48]
   14002862b:	mov    rbx,QWORD PTR [rsp+0x30]
   140028630:	mov    rsi,QWORD PTR [rsp+0x38]
   140028635:	add    rsp,0x20
   140028639:	pop    rdi
   14002863a:	ret    
   14002863b:	int3   
   14002863c:	mov    rax,rsp
   14002863f:	mov    QWORD PTR [rax+0x8],rbx
   140028643:	mov    QWORD PTR [rax+0x10],rbp
   140028647:	mov    QWORD PTR [rax+0x18],rsi
   14002864b:	mov    QWORD PTR [rax+0x20],rdi
   14002864f:	push   r14
   140028651:	sub    rsp,0x50
   140028655:	xor    r14d,r14d
   140028658:	mov    rbp,r8
   14002865b:	mov    rsi,rdx
   14002865e:	mov    rdi,rcx
   140028661:	test   rdx,rdx
   140028664:	je     0x140028679
   140028666:	test   r8,r8
   140028669:	je     0x140028679
   14002866b:	cmp    BYTE PTR [rdx],r14b
   14002866e:	jne    0x140028696
   140028670:	test   rcx,rcx
   140028673:	je     0x140028679
   140028675:	mov    WORD PTR [rcx],r14w
   140028679:	xor    eax,eax
   14002867b:	mov    rbx,QWORD PTR [rsp+0x60]
   140028680:	mov    rbp,QWORD PTR [rsp+0x68]
   140028685:	mov    rsi,QWORD PTR [rsp+0x70]
   14002868a:	mov    rdi,QWORD PTR [rsp+0x78]
   14002868f:	add    rsp,0x50
   140028693:	pop    r14
   140028695:	ret    
   140028696:	lea    rcx,[rsp+0x30]
   14002869b:	mov    rdx,r9
   14002869e:	call   0x1400246b8
   1400286a3:	mov    rax,QWORD PTR [rsp+0x30]
   1400286a8:	cmp    QWORD PTR [rax+0x138],r14
   1400286af:	jne    0x1400286c6
   1400286b1:	test   rdi,rdi
   1400286b4:	je     0x1400286bc
   1400286b6:	movzx  eax,BYTE PTR [rsi]
   1400286b9:	mov    WORD PTR [rdi],ax
   1400286bc:	mov    ebx,0x1
   1400286c1:	jmp    0x140028773
   1400286c6:	movzx  ecx,BYTE PTR [rsi]
   1400286c9:	lea    rdx,[rsp+0x30]
   1400286ce:	call   0x1400283ac
   1400286d3:	mov    ebx,0x1
   1400286d8:	test   eax,eax
   1400286da:	je     0x140028736
   1400286dc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400286e1:	mov    r9d,DWORD PTR [rcx+0xd4]
   1400286e8:	cmp    r9d,ebx
   1400286eb:	jle    0x14002871c
   1400286ed:	cmp    ebp,r9d
   1400286f0:	jl     0x14002871c
   1400286f2:	mov    ecx,DWORD PTR [rcx+0x4]
   1400286f5:	mov    eax,r14d
   1400286f8:	test   rdi,rdi
   1400286fb:	setne  al
   1400286fe:	lea    edx,[rbx+0x8]
   140028701:	mov    r8,rsi
   140028704:	mov    DWORD PTR [rsp+0x28],eax
   140028708:	mov    QWORD PTR [rsp+0x20],rdi
   14002870d:	call   QWORD PTR [rip+0x10ae5]        # 0x1400391f8
   140028713:	mov    rcx,QWORD PTR [rsp+0x30]
   140028718:	test   eax,eax
   14002871a:	jne    0x14002872e
   14002871c:	movsxd rax,DWORD PTR [rcx+0xd4]
   140028723:	cmp    rbp,rax
   140028726:	jb     0x140028765
   140028728:	cmp    BYTE PTR [rsi+0x1],r14b
   14002872c:	je     0x140028765
   14002872e:	mov    ebx,DWORD PTR [rcx+0xd4]
   140028734:	jmp    0x140028773
   140028736:	mov    eax,r14d
   140028739:	test   rdi,rdi
   14002873c:	mov    r9d,ebx
   14002873f:	setne  al
   140028742:	mov    r8,rsi
   140028745:	mov    edx,0x9
   14002874a:	mov    DWORD PTR [rsp+0x28],eax
   14002874e:	mov    rax,QWORD PTR [rsp+0x30]
   140028753:	mov    QWORD PTR [rsp+0x20],rdi
   140028758:	mov    ecx,DWORD PTR [rax+0x4]
   14002875b:	call   QWORD PTR [rip+0x10a97]        # 0x1400391f8
   140028761:	test   eax,eax
   140028763:	jne    0x140028773
   140028765:	call   0x140025380
   14002876a:	or     ebx,0xffffffff
   14002876d:	mov    DWORD PTR [rax],0x2a
   140028773:	cmp    BYTE PTR [rsp+0x48],r14b
   140028778:	je     0x140028786
   14002877a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002877f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028786:	mov    eax,ebx
   140028788:	jmp    0x14002867b
   14002878d:	int3   
   14002878e:	int3   
   14002878f:	int3   
   140028790:	xor    r9d,r9d
   140028793:	jmp    0x14002863c
   140028798:	mov    WORD PTR [rsp+0x8],cx
   14002879d:	sub    rsp,0x38
   1400287a1:	mov    rcx,QWORD PTR [rip+0x25b20]        # 0x14004e2c8
   1400287a8:	cmp    rcx,0xfffffffffffffffe
   1400287ac:	jne    0x1400287ba
   1400287ae:	call   0x140029aac
   1400287b3:	mov    rcx,QWORD PTR [rip+0x25b0e]        # 0x14004e2c8
   1400287ba:	cmp    rcx,0xffffffffffffffff
   1400287be:	jne    0x1400287c7
   1400287c0:	mov    eax,0xffff
   1400287c5:	jmp    0x1400287ec
   1400287c7:	and    QWORD PTR [rsp+0x20],0x0
   1400287cd:	lea    r9,[rsp+0x48]
   1400287d2:	lea    rdx,[rsp+0x40]
   1400287d7:	mov    r8d,0x1
   1400287dd:	call   QWORD PTR [rip+0x10b9d]        # 0x140039380
   1400287e3:	test   eax,eax
   1400287e5:	je     0x1400287c0
   1400287e7:	movzx  eax,WORD PTR [rsp+0x40]
   1400287ec:	add    rsp,0x38
   1400287f0:	ret    
   1400287f1:	int3   
   1400287f2:	int3   
   1400287f3:	int3   
   1400287f4:	int3   
   1400287f5:	int3   
   1400287f6:	int3   
   1400287f7:	int3   
   1400287f8:	int3   
   1400287f9:	int3   
   1400287fa:	int3   
   1400287fb:	int3   
   1400287fc:	int3   
   1400287fd:	int3   
   1400287fe:	int3   
   1400287ff:	int3   
   140028800:	int3   
   140028801:	int3   
   140028802:	int3   
   140028803:	int3   
   140028804:	int3   
   140028805:	int3   
   140028806:	data16 nop WORD PTR [rax+rax*1+0x0]
   140028810:	sub    rsp,0x10
   140028814:	mov    QWORD PTR [rsp],r10
   140028818:	mov    QWORD PTR [rsp+0x8],r11
   14002881d:	xor    r11,r11
   140028820:	lea    r10,[rsp+0x18]
   140028825:	sub    r10,rax
   140028828:	cmovb  r10,r11
   14002882c:	mov    r11,QWORD PTR gs:0x10
   140028835:	cmp    r10,r11
   140028838:	jae    0x140028850
   14002883a:	and    r10w,0xf000
   140028840:	lea    r11,[r11-0x1000]
   140028847:	mov    BYTE PTR [r11],0x0
   14002884b:	cmp    r10,r11
   14002884e:	jne    0x140028840
   140028850:	mov    r10,QWORD PTR [rsp]
   140028854:	mov    r11,QWORD PTR [rsp+0x8]
   140028859:	add    rsp,0x10
   14002885d:	ret    
   14002885e:	int3   
   14002885f:	int3   
   140028860:	mov    QWORD PTR [rsp+0x8],rbx
   140028865:	mov    QWORD PTR [rsp+0x18],rsi
   14002886a:	mov    WORD PTR [rsp+0x20],r9w
   140028870:	push   rdi
   140028871:	sub    rsp,0x60
   140028875:	mov    rdi,r8
   140028878:	mov    rsi,rdx
   14002887b:	mov    rbx,rcx
   14002887e:	test   rdx,rdx
   140028881:	jne    0x140028896
   140028883:	test   r8,r8
   140028886:	je     0x140028896
   140028888:	test   rcx,rcx
   14002888b:	je     0x14002888f
   14002888d:	and    DWORD PTR [rcx],edx
   14002888f:	xor    eax,eax
   140028891:	jmp    0x14002892b
   140028896:	test   rcx,rcx
   140028899:	je     0x14002889e
   14002889b:	or     DWORD PTR [rcx],0xffffffff
   14002889e:	cmp    r8,0x7fffffff
   1400288a5:	jbe    0x1400288ba
   1400288a7:	call   0x140025380
   1400288ac:	mov    ebx,0x16
   1400288b1:	mov    DWORD PTR [rax],ebx
   1400288b3:	call   0x140024554
   1400288b8:	jmp    0x140028929
   1400288ba:	mov    rdx,QWORD PTR [rsp+0x90]
   1400288c2:	lea    rcx,[rsp+0x40]
   1400288c7:	call   0x1400246b8
   1400288cc:	mov    rax,QWORD PTR [rsp+0x40]
   1400288d1:	cmp    QWORD PTR [rax+0x138],0x0
   1400288d9:	jne    0x14002895a
   1400288db:	movzx  eax,WORD PTR [rsp+0x88]
   1400288e3:	mov    ecx,0xff
   1400288e8:	cmp    ax,cx
   1400288eb:	jbe    0x14002893d
   1400288ed:	test   rsi,rsi
   1400288f0:	je     0x140028904
   1400288f2:	test   rdi,rdi
   1400288f5:	je     0x140028904
   1400288f7:	mov    r8,rdi
   1400288fa:	xor    edx,edx
   1400288fc:	mov    rcx,rsi
   1400288ff:	call   0x1400260e0
   140028904:	call   0x140025380
   140028909:	mov    DWORD PTR [rax],0x2a
   14002890f:	call   0x140025380
   140028914:	mov    ebx,DWORD PTR [rax]
   140028916:	cmp    BYTE PTR [rsp+0x58],0x0
   14002891b:	je     0x140028929
   14002891d:	mov    rcx,QWORD PTR [rsp+0x50]
   140028922:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028929:	mov    eax,ebx
   14002892b:	lea    r11,[rsp+0x60]
   140028930:	mov    rbx,QWORD PTR [r11+0x10]
   140028934:	mov    rsi,QWORD PTR [r11+0x20]
   140028938:	mov    rsp,r11
   14002893b:	pop    rdi
   14002893c:	ret    
   14002893d:	test   rsi,rsi
   140028940:	je     0x14002894d
   140028942:	test   rdi,rdi
   140028945:	je     0x1400289d4
   14002894b:	mov    BYTE PTR [rsi],al
   14002894d:	test   rbx,rbx
   140028950:	je     0x1400289a7
   140028952:	mov    DWORD PTR [rbx],0x1
   140028958:	jmp    0x1400289a7
   14002895a:	and    DWORD PTR [rsp+0x78],0x0
   14002895f:	lea    rcx,[rsp+0x78]
   140028964:	lea    r8,[rsp+0x88]
   14002896c:	mov    QWORD PTR [rsp+0x38],rcx
   140028971:	and    QWORD PTR [rsp+0x30],0x0
   140028977:	mov    ecx,DWORD PTR [rax+0x4]
   14002897a:	mov    r9d,0x1
   140028980:	xor    edx,edx
   140028982:	mov    DWORD PTR [rsp+0x28],edi
   140028986:	mov    QWORD PTR [rsp+0x20],rsi
   14002898b:	call   QWORD PTR [rip+0x10907]        # 0x140039298
   140028991:	test   eax,eax
   140028993:	je     0x1400289ae
   140028995:	cmp    DWORD PTR [rsp+0x78],0x0
   14002899a:	jne    0x140028904
   1400289a0:	test   rbx,rbx
   1400289a3:	je     0x1400289a7
   1400289a5:	mov    DWORD PTR [rbx],eax
   1400289a7:	xor    ebx,ebx
   1400289a9:	jmp    0x140028916
   1400289ae:	call   QWORD PTR [rip+0x10c2c]        # 0x1400395e0
   1400289b4:	cmp    eax,0x7a
   1400289b7:	jne    0x140028904
   1400289bd:	test   rsi,rsi
   1400289c0:	je     0x1400289d4
   1400289c2:	test   rdi,rdi
   1400289c5:	je     0x1400289d4
   1400289c7:	mov    r8,rdi
   1400289ca:	xor    edx,edx
   1400289cc:	mov    rcx,rsi
   1400289cf:	call   0x1400260e0
   1400289d4:	call   0x140025380
   1400289d9:	mov    ebx,0x22
   1400289de:	mov    DWORD PTR [rax],ebx
   1400289e0:	call   0x140024554
   1400289e5:	jmp    0x140028916
   1400289ea:	int3   
   1400289eb:	int3   
   1400289ec:	sub    rsp,0x38
   1400289f0:	and    QWORD PTR [rsp+0x20],0x0
   1400289f6:	call   0x140028860
   1400289fb:	add    rsp,0x38
   1400289ff:	ret    
   140028a00:	rex push rbx
   140028a02:	sub    rsp,0x20
   140028a06:	inc    DWORD PTR [rip+0x27064]        # 0x14004fa70
   140028a0c:	mov    rbx,rcx
   140028a0f:	mov    ecx,0x1000
   140028a14:	call   0x1400238b8
   140028a19:	mov    QWORD PTR [rbx+0x10],rax
   140028a1d:	test   rax,rax
   140028a20:	je     0x140028a2f
   140028a22:	or     DWORD PTR [rbx+0x18],0x8
   140028a26:	mov    DWORD PTR [rbx+0x24],0x1000
   140028a2d:	jmp    0x140028a42
   140028a2f:	or     DWORD PTR [rbx+0x18],0x4
   140028a33:	lea    rax,[rbx+0x20]
   140028a37:	mov    DWORD PTR [rbx+0x24],0x2
   140028a3e:	mov    QWORD PTR [rbx+0x10],rax
   140028a42:	mov    rax,QWORD PTR [rbx+0x10]
   140028a46:	and    DWORD PTR [rbx+0x8],0x0
   140028a4a:	mov    QWORD PTR [rbx],rax
   140028a4d:	add    rsp,0x20
   140028a51:	pop    rbx
   140028a52:	ret    
   140028a53:	int3   
   140028a54:	mov    QWORD PTR [rsp+0x18],rbx
   140028a59:	mov    QWORD PTR [rsp+0x20],rbp
   140028a5e:	push   rsi
   140028a5f:	push   rdi
   140028a60:	push   r14
   140028a62:	sub    rsp,0x40
   140028a66:	mov    rax,QWORD PTR [rip+0x249db]        # 0x14004d448
   140028a6d:	xor    rax,rsp
   140028a70:	mov    QWORD PTR [rsp+0x30],rax
   140028a75:	test   BYTE PTR [rdx+0x18],0x40
   140028a79:	mov    rdi,rdx
   140028a7c:	movzx  esi,cx
   140028a7f:	jne    0x140028be2
   140028a85:	mov    rcx,rdx
   140028a88:	call   0x140023a40
   140028a8d:	lea    rbp,[rip+0x2495c]        # 0x14004d3f0
   140028a94:	lea    r14,[rip+0x29845]        # 0x1400522e0
   140028a9b:	cmp    eax,0xffffffff
   140028a9e:	je     0x140028ad1
   140028aa0:	mov    rcx,rdi
   140028aa3:	call   0x140023a40
   140028aa8:	cmp    eax,0xfffffffe
   140028aab:	je     0x140028ad1
   140028aad:	mov    rcx,rdi
   140028ab0:	call   0x140023a40
   140028ab5:	mov    rcx,rdi
   140028ab8:	movsxd rbx,eax
   140028abb:	sar    rbx,0x5
   140028abf:	call   0x140023a40
   140028ac4:	and    eax,0x1f
   140028ac7:	imul   rax,rax,0x58
   140028acb:	add    rax,QWORD PTR [r14+rbx*8]
   140028acf:	jmp    0x140028ad4
   140028ad1:	mov    rax,rbp
   140028ad4:	mov    al,BYTE PTR [rax+0x38]
   140028ad7:	and    al,0x7f
   140028ad9:	cmp    al,0x2
   140028adb:	je     0x140028be2
   140028ae1:	mov    rcx,rdi
   140028ae4:	call   0x140023a40
   140028ae9:	cmp    eax,0xffffffff
   140028aec:	je     0x140028b1f
   140028aee:	mov    rcx,rdi
   140028af1:	call   0x140023a40
   140028af6:	cmp    eax,0xfffffffe
   140028af9:	je     0x140028b1f
   140028afb:	mov    rcx,rdi
   140028afe:	call   0x140023a40
   140028b03:	mov    rcx,rdi
   140028b06:	movsxd rbx,eax
   140028b09:	sar    rbx,0x5
   140028b0d:	call   0x140023a40
   140028b12:	and    eax,0x1f
   140028b15:	imul   rax,rax,0x58
   140028b19:	add    rax,QWORD PTR [r14+rbx*8]
   140028b1d:	jmp    0x140028b22
   140028b1f:	mov    rax,rbp
   140028b22:	mov    al,BYTE PTR [rax+0x38]
   140028b25:	and    al,0x7f
   140028b27:	cmp    al,0x1
   140028b29:	je     0x140028be2
   140028b2f:	mov    rcx,rdi
   140028b32:	call   0x140023a40
   140028b37:	cmp    eax,0xffffffff
   140028b3a:	je     0x140028b6d
   140028b3c:	mov    rcx,rdi
   140028b3f:	call   0x140023a40
   140028b44:	cmp    eax,0xfffffffe
   140028b47:	je     0x140028b6d
   140028b49:	mov    rcx,rdi
   140028b4c:	call   0x140023a40
   140028b51:	mov    rcx,rdi
   140028b54:	movsxd rbx,eax
   140028b57:	sar    rbx,0x5
   140028b5b:	call   0x140023a40
   140028b60:	mov    ebp,eax
   140028b62:	and    ebp,0x1f
   140028b65:	imul   rbp,rbp,0x58
   140028b69:	add    rbp,QWORD PTR [r14+rbx*8]
   140028b6d:	test   BYTE PTR [rbp+0x8],0x80
   140028b71:	je     0x140028be2
   140028b73:	lea    rdx,[rsp+0x24]
   140028b78:	lea    rcx,[rsp+0x20]
   140028b7d:	movzx  r9d,si
   140028b81:	mov    r8d,0x5
   140028b87:	call   0x1400289ec
   140028b8c:	xor    ebx,ebx
   140028b8e:	test   eax,eax
   140028b90:	je     0x140028b99
   140028b92:	mov    eax,0xffff
   140028b97:	jmp    0x140028c0b
   140028b99:	cmp    DWORD PTR [rsp+0x20],ebx
   140028b9d:	jle    0x140028bdd
   140028b9f:	lea    r14,[rsp+0x24]
   140028ba4:	dec    DWORD PTR [rdi+0x8]
   140028ba7:	js     0x140028bbf
   140028ba9:	mov    rcx,QWORD PTR [rdi]
   140028bac:	mov    al,BYTE PTR [r14]
   140028baf:	mov    BYTE PTR [rcx],al
   140028bb1:	mov    rax,QWORD PTR [rdi]
   140028bb4:	movzx  ecx,BYTE PTR [rax]
   140028bb7:	inc    rax
   140028bba:	mov    QWORD PTR [rdi],rax
   140028bbd:	jmp    0x140028bcd
   140028bbf:	movsx  ecx,BYTE PTR [r14]
   140028bc3:	mov    rdx,rdi
   140028bc6:	call   0x1400253f0
   140028bcb:	mov    ecx,eax
   140028bcd:	cmp    ecx,0xffffffff
   140028bd0:	je     0x140028b92
   140028bd2:	inc    ebx
   140028bd4:	inc    r14
   140028bd7:	cmp    ebx,DWORD PTR [rsp+0x20]
   140028bdb:	jl     0x140028ba4
   140028bdd:	movzx  eax,si
   140028be0:	jmp    0x140028c0b
   140028be2:	movsxd rax,DWORD PTR [rdi+0x8]
   140028be6:	add    rax,0xfffffffffffffffe
   140028bea:	mov    DWORD PTR [rdi+0x8],eax
   140028bed:	test   eax,eax
   140028bef:	js     0x140028c00
   140028bf1:	mov    rax,QWORD PTR [rdi]
   140028bf4:	mov    WORD PTR [rax],si
   140028bf7:	add    QWORD PTR [rdi],0x2
   140028bfb:	movzx  eax,si
   140028bfe:	jmp    0x140028c0b
   140028c00:	mov    rdx,rdi
   140028c03:	movzx  ecx,si
   140028c06:	call   0x140029ae8
   140028c0b:	mov    rcx,QWORD PTR [rsp+0x30]
   140028c10:	xor    rcx,rsp
   140028c13:	call   0x140020e50
   140028c18:	mov    rbx,QWORD PTR [rsp+0x70]
   140028c1d:	mov    rbp,QWORD PTR [rsp+0x78]
   140028c22:	add    rsp,0x40
   140028c26:	pop    r14
   140028c28:	pop    rdi
   140028c29:	pop    rsi
   140028c2a:	ret    
   140028c2b:	int3   
   140028c2c:	rex push rbx
   140028c2e:	sub    rsp,0x20
   140028c32:	xor    ebx,ebx
   140028c34:	test   r9,r9
   140028c37:	jne    0x140028c47
   140028c39:	test   rcx,rcx
   140028c3c:	jne    0x140028c4c
   140028c3e:	test   rdx,rdx
   140028c41:	jne    0x140028c61
   140028c43:	xor    eax,eax
   140028c45:	jmp    0x140028c74
   140028c47:	test   rcx,rcx
   140028c4a:	je     0x140028c61
   140028c4c:	test   rdx,rdx
   140028c4f:	je     0x140028c61
   140028c51:	test   r9,r9
   140028c54:	jne    0x140028c5a
   140028c56:	mov    BYTE PTR [rcx],bl
   140028c58:	jmp    0x140028c43
   140028c5a:	test   r8,r8
   140028c5d:	jne    0x140028c7a
   140028c5f:	mov    BYTE PTR [rcx],bl
   140028c61:	call   0x140025380
   140028c66:	mov    ebx,0x16
   140028c6b:	mov    DWORD PTR [rax],ebx
   140028c6d:	call   0x140024554
   140028c72:	mov    eax,ebx
   140028c74:	add    rsp,0x20
   140028c78:	pop    rbx
   140028c79:	ret    
   140028c7a:	mov    r11,rcx
   140028c7d:	mov    r10,rdx
   140028c80:	cmp    r9,0xffffffffffffffff
   140028c84:	jne    0x140028c9e
   140028c86:	sub    r11,r8
   140028c89:	mov    al,BYTE PTR [r8]
   140028c8c:	mov    BYTE PTR [r11+r8*1],al
   140028c90:	inc    r8
   140028c93:	test   al,al
   140028c95:	je     0x140028cc1
   140028c97:	dec    r10
   140028c9a:	jne    0x140028c89
   140028c9c:	jmp    0x140028cc1
   140028c9e:	sub    r8,rcx
   140028ca1:	mov    al,BYTE PTR [r8+r11*1]
   140028ca5:	mov    BYTE PTR [r11],al
   140028ca8:	inc    r11
   140028cab:	test   al,al
   140028cad:	je     0x140028cb9
   140028caf:	dec    r10
   140028cb2:	je     0x140028cb9
   140028cb4:	dec    r9
   140028cb7:	jne    0x140028ca1
   140028cb9:	test   r9,r9
   140028cbc:	jne    0x140028cc1
   140028cbe:	mov    BYTE PTR [r11],bl
   140028cc1:	test   r10,r10
   140028cc4:	jne    0x140028c43
   140028cca:	cmp    r9,0xffffffffffffffff
   140028cce:	jne    0x140028cda
   140028cd0:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   140028cd4:	lea    eax,[r10+0x50]
   140028cd8:	jmp    0x140028c74
   140028cda:	mov    BYTE PTR [rcx],bl
   140028cdc:	call   0x140025380
   140028ce1:	mov    ebx,0x22
   140028ce6:	jmp    0x140028c6b
   140028ce8:	mov    r11,rsp
   140028ceb:	sub    rsp,0x58
   140028cef:	xor    eax,eax
   140028cf1:	mov    QWORD PTR [r11-0x18],rax
   140028cf5:	mov    QWORD PTR [r11-0x20],rax
   140028cf9:	mov    QWORD PTR [r11-0x28],rax
   140028cfd:	mov    eax,DWORD PTR [rsp+0x88]
   140028d04:	mov    DWORD PTR [rsp+0x28],eax
   140028d08:	mov    rax,QWORD PTR [rsp+0x80]
   140028d10:	mov    QWORD PTR [r11-0x38],rax
   140028d14:	call   QWORD PTR [rip+0x1066e]        # 0x140039388
   140028d1a:	add    rsp,0x58
   140028d1e:	ret    
   140028d1f:	int3   
   140028d20:	rex push rbx
   140028d22:	sub    rsp,0x20
   140028d26:	test   rcx,rcx
   140028d29:	je     0x140028d38
   140028d2b:	test   rdx,rdx
   140028d2e:	je     0x140028d38
   140028d30:	test   r8,r8
   140028d33:	jne    0x140028d51
   140028d35:	mov    BYTE PTR [rcx],r8b
   140028d38:	call   0x140025380
   140028d3d:	mov    ebx,0x16
   140028d42:	mov    DWORD PTR [rax],ebx
   140028d44:	call   0x140024554
   140028d49:	mov    eax,ebx
   140028d4b:	add    rsp,0x20
   140028d4f:	pop    rbx
   140028d50:	ret    
   140028d51:	mov    r9,rcx
   140028d54:	sub    r9,r8
   140028d57:	mov    al,BYTE PTR [r8]
   140028d5a:	mov    BYTE PTR [r9+r8*1],al
   140028d5e:	inc    r8
   140028d61:	test   al,al
   140028d63:	je     0x140028d6a
   140028d65:	dec    rdx
   140028d68:	jne    0x140028d57
   140028d6a:	test   rdx,rdx
   140028d6d:	jne    0x140028d7d
   140028d6f:	mov    BYTE PTR [rcx],dl
   140028d71:	call   0x140025380
   140028d76:	mov    ebx,0x22
   140028d7b:	jmp    0x140028d42
   140028d7d:	xor    eax,eax
   140028d7f:	jmp    0x140028d4b
   140028d81:	int3   
   140028d82:	int3   
   140028d83:	int3   
   140028d84:	test   rcx,rcx
   140028d87:	je     0x140028e8d
   140028d8d:	push   rbx
   140028d8e:	sub    rsp,0x20
   140028d92:	mov    rbx,rcx
   140028d95:	mov    rcx,QWORD PTR [rcx+0x18]
   140028d99:	cmp    rcx,QWORD PTR [rip+0x25498]        # 0x14004e238
   140028da0:	je     0x140028da7
   140028da2:	call   0x140023328
   140028da7:	mov    rcx,QWORD PTR [rbx+0x20]
   140028dab:	cmp    rcx,QWORD PTR [rip+0x2548e]        # 0x14004e240
   140028db2:	je     0x140028db9
   140028db4:	call   0x140023328
   140028db9:	mov    rcx,QWORD PTR [rbx+0x28]
   140028dbd:	cmp    rcx,QWORD PTR [rip+0x25484]        # 0x14004e248
   140028dc4:	je     0x140028dcb
   140028dc6:	call   0x140023328
   140028dcb:	mov    rcx,QWORD PTR [rbx+0x30]
   140028dcf:	cmp    rcx,QWORD PTR [rip+0x2547a]        # 0x14004e250
   140028dd6:	je     0x140028ddd
   140028dd8:	call   0x140023328
   140028ddd:	mov    rcx,QWORD PTR [rbx+0x38]
   140028de1:	cmp    rcx,QWORD PTR [rip+0x25470]        # 0x14004e258
   140028de8:	je     0x140028def
   140028dea:	call   0x140023328
   140028def:	mov    rcx,QWORD PTR [rbx+0x40]
   140028df3:	cmp    rcx,QWORD PTR [rip+0x25466]        # 0x14004e260
   140028dfa:	je     0x140028e01
   140028dfc:	call   0x140023328
   140028e01:	mov    rcx,QWORD PTR [rbx+0x48]
   140028e05:	cmp    rcx,QWORD PTR [rip+0x2545c]        # 0x14004e268
   140028e0c:	je     0x140028e13
   140028e0e:	call   0x140023328
   140028e13:	mov    rcx,QWORD PTR [rbx+0x68]
   140028e17:	cmp    rcx,QWORD PTR [rip+0x2546a]        # 0x14004e288
   140028e1e:	je     0x140028e25
   140028e20:	call   0x140023328
   140028e25:	mov    rcx,QWORD PTR [rbx+0x70]
   140028e29:	cmp    rcx,QWORD PTR [rip+0x25460]        # 0x14004e290
   140028e30:	je     0x140028e37
   140028e32:	call   0x140023328
   140028e37:	mov    rcx,QWORD PTR [rbx+0x78]
   140028e3b:	cmp    rcx,QWORD PTR [rip+0x25456]        # 0x14004e298
   140028e42:	je     0x140028e49
   140028e44:	call   0x140023328
   140028e49:	mov    rcx,QWORD PTR [rbx+0x80]
   140028e50:	cmp    rcx,QWORD PTR [rip+0x25449]        # 0x14004e2a0
   140028e57:	je     0x140028e5e
   140028e59:	call   0x140023328
   140028e5e:	mov    rcx,QWORD PTR [rbx+0x88]
   140028e65:	cmp    rcx,QWORD PTR [rip+0x2543c]        # 0x14004e2a8
   140028e6c:	je     0x140028e73
   140028e6e:	call   0x140023328
   140028e73:	mov    rcx,QWORD PTR [rbx+0x90]
   140028e7a:	cmp    rcx,QWORD PTR [rip+0x2542f]        # 0x14004e2b0
   140028e81:	je     0x140028e88
   140028e83:	call   0x140023328
   140028e88:	add    rsp,0x20
   140028e8c:	pop    rbx
   140028e8d:	ret    
   140028e8e:	int3   
   140028e8f:	int3   
   140028e90:	test   rcx,rcx
   140028e93:	je     0x140028efb
   140028e95:	push   rbx
   140028e96:	sub    rsp,0x20
   140028e9a:	mov    rbx,rcx
   140028e9d:	mov    rcx,QWORD PTR [rcx]
   140028ea0:	cmp    rcx,QWORD PTR [rip+0x25379]        # 0x14004e220
   140028ea7:	je     0x140028eae
   140028ea9:	call   0x140023328
   140028eae:	mov    rcx,QWORD PTR [rbx+0x8]
   140028eb2:	cmp    rcx,QWORD PTR [rip+0x2536f]        # 0x14004e228
   140028eb9:	je     0x140028ec0
   140028ebb:	call   0x140023328
   140028ec0:	mov    rcx,QWORD PTR [rbx+0x10]
   140028ec4:	cmp    rcx,QWORD PTR [rip+0x25365]        # 0x14004e230
   140028ecb:	je     0x140028ed2
   140028ecd:	call   0x140023328
   140028ed2:	mov    rcx,QWORD PTR [rbx+0x58]
   140028ed6:	cmp    rcx,QWORD PTR [rip+0x2539b]        # 0x14004e278
   140028edd:	je     0x140028ee4
   140028edf:	call   0x140023328
   140028ee4:	mov    rcx,QWORD PTR [rbx+0x60]
   140028ee8:	cmp    rcx,QWORD PTR [rip+0x25391]        # 0x14004e280
   140028eef:	je     0x140028ef6
   140028ef1:	call   0x140023328
   140028ef6:	add    rsp,0x20
   140028efa:	pop    rbx
   140028efb:	ret    
   140028efc:	test   rcx,rcx
   140028eff:	je     0x1400292f5
   140028f05:	push   rbx
   140028f06:	sub    rsp,0x20
   140028f0a:	mov    rbx,rcx
   140028f0d:	mov    rcx,QWORD PTR [rcx+0x8]
   140028f11:	call   0x140023328
   140028f16:	mov    rcx,QWORD PTR [rbx+0x10]
   140028f1a:	call   0x140023328
   140028f1f:	mov    rcx,QWORD PTR [rbx+0x18]
   140028f23:	call   0x140023328
   140028f28:	mov    rcx,QWORD PTR [rbx+0x20]
   140028f2c:	call   0x140023328
   140028f31:	mov    rcx,QWORD PTR [rbx+0x28]
   140028f35:	call   0x140023328
   140028f3a:	mov    rcx,QWORD PTR [rbx+0x30]
   140028f3e:	call   0x140023328
   140028f43:	mov    rcx,QWORD PTR [rbx]
   140028f46:	call   0x140023328
   140028f4b:	mov    rcx,QWORD PTR [rbx+0x40]
   140028f4f:	call   0x140023328
   140028f54:	mov    rcx,QWORD PTR [rbx+0x48]
   140028f58:	call   0x140023328
   140028f5d:	mov    rcx,QWORD PTR [rbx+0x50]
   140028f61:	call   0x140023328
   140028f66:	mov    rcx,QWORD PTR [rbx+0x58]
   140028f6a:	call   0x140023328
   140028f6f:	mov    rcx,QWORD PTR [rbx+0x60]
   140028f73:	call   0x140023328
   140028f78:	mov    rcx,QWORD PTR [rbx+0x68]
   140028f7c:	call   0x140023328
   140028f81:	mov    rcx,QWORD PTR [rbx+0x38]
   140028f85:	call   0x140023328
   140028f8a:	mov    rcx,QWORD PTR [rbx+0x70]
   140028f8e:	call   0x140023328
   140028f93:	mov    rcx,QWORD PTR [rbx+0x78]
   140028f97:	call   0x140023328
   140028f9c:	mov    rcx,QWORD PTR [rbx+0x80]
   140028fa3:	call   0x140023328
   140028fa8:	mov    rcx,QWORD PTR [rbx+0x88]
   140028faf:	call   0x140023328
   140028fb4:	mov    rcx,QWORD PTR [rbx+0x90]
   140028fbb:	call   0x140023328
   140028fc0:	mov    rcx,QWORD PTR [rbx+0x98]
   140028fc7:	call   0x140023328
   140028fcc:	mov    rcx,QWORD PTR [rbx+0xa0]
   140028fd3:	call   0x140023328
   140028fd8:	mov    rcx,QWORD PTR [rbx+0xa8]
   140028fdf:	call   0x140023328
   140028fe4:	mov    rcx,QWORD PTR [rbx+0xb0]
   140028feb:	call   0x140023328
   140028ff0:	mov    rcx,QWORD PTR [rbx+0xb8]
   140028ff7:	call   0x140023328
   140028ffc:	mov    rcx,QWORD PTR [rbx+0xc0]
   140029003:	call   0x140023328
   140029008:	mov    rcx,QWORD PTR [rbx+0xc8]
   14002900f:	call   0x140023328
   140029014:	mov    rcx,QWORD PTR [rbx+0xd0]
   14002901b:	call   0x140023328
   140029020:	mov    rcx,QWORD PTR [rbx+0xd8]
   140029027:	call   0x140023328
   14002902c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140029033:	call   0x140023328
   140029038:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002903f:	call   0x140023328
   140029044:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002904b:	call   0x140023328
   140029050:	mov    rcx,QWORD PTR [rbx+0xf8]
   140029057:	call   0x140023328
   14002905c:	mov    rcx,QWORD PTR [rbx+0x100]
   140029063:	call   0x140023328
   140029068:	mov    rcx,QWORD PTR [rbx+0x108]
   14002906f:	call   0x140023328
   140029074:	mov    rcx,QWORD PTR [rbx+0x110]
   14002907b:	call   0x140023328
   140029080:	mov    rcx,QWORD PTR [rbx+0x118]
   140029087:	call   0x140023328
   14002908c:	mov    rcx,QWORD PTR [rbx+0x120]
   140029093:	call   0x140023328
   140029098:	mov    rcx,QWORD PTR [rbx+0x128]
   14002909f:	call   0x140023328
   1400290a4:	mov    rcx,QWORD PTR [rbx+0x130]
   1400290ab:	call   0x140023328
   1400290b0:	mov    rcx,QWORD PTR [rbx+0x138]
   1400290b7:	call   0x140023328
   1400290bc:	mov    rcx,QWORD PTR [rbx+0x140]
   1400290c3:	call   0x140023328
   1400290c8:	mov    rcx,QWORD PTR [rbx+0x148]
   1400290cf:	call   0x140023328
   1400290d4:	mov    rcx,QWORD PTR [rbx+0x150]
   1400290db:	call   0x140023328
   1400290e0:	mov    rcx,QWORD PTR [rbx+0x168]
   1400290e7:	call   0x140023328
   1400290ec:	mov    rcx,QWORD PTR [rbx+0x170]
   1400290f3:	call   0x140023328
   1400290f8:	mov    rcx,QWORD PTR [rbx+0x178]
   1400290ff:	call   0x140023328
   140029104:	mov    rcx,QWORD PTR [rbx+0x180]
   14002910b:	call   0x140023328
   140029110:	mov    rcx,QWORD PTR [rbx+0x188]
   140029117:	call   0x140023328
   14002911c:	mov    rcx,QWORD PTR [rbx+0x190]
   140029123:	call   0x140023328
   140029128:	mov    rcx,QWORD PTR [rbx+0x160]
   14002912f:	call   0x140023328
   140029134:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14002913b:	call   0x140023328
   140029140:	mov    rcx,QWORD PTR [rbx+0x1a8]
   140029147:	call   0x140023328
   14002914c:	mov    rcx,QWORD PTR [rbx+0x1b0]
   140029153:	call   0x140023328
   140029158:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14002915f:	call   0x140023328
   140029164:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14002916b:	call   0x140023328
   140029170:	mov    rcx,QWORD PTR [rbx+0x1c8]
   140029177:	call   0x140023328
   14002917c:	mov    rcx,QWORD PTR [rbx+0x198]
   140029183:	call   0x140023328
   140029188:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14002918f:	call   0x140023328
   140029194:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14002919b:	call   0x140023328
   1400291a0:	mov    rcx,QWORD PTR [rbx+0x1e0]
   1400291a7:	call   0x140023328
   1400291ac:	mov    rcx,QWORD PTR [rbx+0x1e8]
   1400291b3:	call   0x140023328
   1400291b8:	mov    rcx,QWORD PTR [rbx+0x1f0]
   1400291bf:	call   0x140023328
   1400291c4:	mov    rcx,QWORD PTR [rbx+0x1f8]
   1400291cb:	call   0x140023328
   1400291d0:	mov    rcx,QWORD PTR [rbx+0x200]
   1400291d7:	call   0x140023328
   1400291dc:	mov    rcx,QWORD PTR [rbx+0x208]
   1400291e3:	call   0x140023328
   1400291e8:	mov    rcx,QWORD PTR [rbx+0x210]
   1400291ef:	call   0x140023328
   1400291f4:	mov    rcx,QWORD PTR [rbx+0x218]
   1400291fb:	call   0x140023328
   140029200:	mov    rcx,QWORD PTR [rbx+0x220]
   140029207:	call   0x140023328
   14002920c:	mov    rcx,QWORD PTR [rbx+0x228]
   140029213:	call   0x140023328
   140029218:	mov    rcx,QWORD PTR [rbx+0x230]
   14002921f:	call   0x140023328
   140029224:	mov    rcx,QWORD PTR [rbx+0x238]
   14002922b:	call   0x140023328
   140029230:	mov    rcx,QWORD PTR [rbx+0x240]
   140029237:	call   0x140023328
   14002923c:	mov    rcx,QWORD PTR [rbx+0x248]
   140029243:	call   0x140023328
   140029248:	mov    rcx,QWORD PTR [rbx+0x250]
   14002924f:	call   0x140023328
   140029254:	mov    rcx,QWORD PTR [rbx+0x258]
   14002925b:	call   0x140023328
   140029260:	mov    rcx,QWORD PTR [rbx+0x260]
   140029267:	call   0x140023328
   14002926c:	mov    rcx,QWORD PTR [rbx+0x268]
   140029273:	call   0x140023328
   140029278:	mov    rcx,QWORD PTR [rbx+0x270]
   14002927f:	call   0x140023328
   140029284:	mov    rcx,QWORD PTR [rbx+0x278]
   14002928b:	call   0x140023328
   140029290:	mov    rcx,QWORD PTR [rbx+0x280]
   140029297:	call   0x140023328
   14002929c:	mov    rcx,QWORD PTR [rbx+0x288]
   1400292a3:	call   0x140023328
   1400292a8:	mov    rcx,QWORD PTR [rbx+0x290]
   1400292af:	call   0x140023328
   1400292b4:	mov    rcx,QWORD PTR [rbx+0x298]
   1400292bb:	call   0x140023328
   1400292c0:	mov    rcx,QWORD PTR [rbx+0x2a0]
   1400292c7:	call   0x140023328
   1400292cc:	mov    rcx,QWORD PTR [rbx+0x2a8]
   1400292d3:	call   0x140023328
   1400292d8:	mov    rcx,QWORD PTR [rbx+0x2b0]
   1400292df:	call   0x140023328
   1400292e4:	mov    rcx,QWORD PTR [rbx+0x2b8]
   1400292eb:	call   0x140023328
   1400292f0:	add    rsp,0x20
   1400292f4:	pop    rbx
   1400292f5:	ret    
   1400292f6:	int3   
   1400292f7:	int3   
   1400292f8:	rex push rbp
   1400292fa:	push   r12
   1400292fc:	push   r13
   1400292fe:	push   r14
   140029300:	push   r15
   140029302:	sub    rsp,0x50
   140029306:	lea    rbp,[rsp+0x40]
   14002930b:	mov    QWORD PTR [rbp+0x40],rbx
   14002930f:	mov    QWORD PTR [rbp+0x48],rsi
   140029313:	mov    QWORD PTR [rbp+0x50],rdi
   140029317:	mov    rax,QWORD PTR [rip+0x2412a]        # 0x14004d448
   14002931e:	xor    rax,rbp
   140029321:	mov    QWORD PTR [rbp+0x8],rax
   140029325:	mov    ebx,DWORD PTR [rbp+0x60]
   140029328:	xor    edi,edi
   14002932a:	mov    r12,r9
   14002932d:	mov    r13d,r8d
   140029330:	mov    QWORD PTR [rbp+0x0],rdx
   140029334:	test   ebx,ebx
   140029336:	jle    0x140029362
   140029338:	mov    r10d,ebx
   14002933b:	mov    rax,r9
   14002933e:	dec    r10d
   140029341:	cmp    BYTE PTR [rax],dil
   140029344:	je     0x140029352
   140029346:	inc    rax
   140029349:	test   r10d,r10d
   14002934c:	jne    0x14002933e
   14002934e:	or     r10d,0xffffffff
   140029352:	mov    eax,ebx
   140029354:	sub    eax,r10d
   140029357:	dec    eax
   140029359:	cmp    eax,ebx
   14002935b:	lea    ebx,[rax+0x1]
   14002935e:	jl     0x140029362
   140029360:	mov    ebx,eax
   140029362:	mov    r14d,DWORD PTR [rbp+0x78]
   140029366:	mov    esi,edi
   140029368:	test   r14d,r14d
   14002936b:	jne    0x140029374
   14002936d:	mov    rax,QWORD PTR [rcx]
   140029370:	mov    r14d,DWORD PTR [rax+0x4]
   140029374:	neg    DWORD PTR [rbp+0x80]
   14002937a:	mov    r9d,ebx
   14002937d:	mov    r8,r12
   140029380:	sbb    edx,edx
   140029382:	mov    ecx,r14d
   140029385:	mov    DWORD PTR [rsp+0x28],edi
   140029389:	and    edx,0x8
   14002938c:	mov    QWORD PTR [rsp+0x20],rdi
   140029391:	inc    edx
   140029393:	call   QWORD PTR [rip+0xfe5f]        # 0x1400391f8
   140029399:	movsxd r15,eax
   14002939c:	test   eax,eax
   14002939e:	jne    0x1400293a7
   1400293a0:	xor    eax,eax
   1400293a2:	jmp    0x1400295a0
   1400293a7:	movabs r8,0xffffffffffffff0
   1400293b1:	test   eax,eax
   1400293b3:	jle    0x140029416
   1400293b5:	xor    edx,edx
   1400293b7:	lea    rax,[rdx-0x20]
   1400293bb:	div    r15
   1400293be:	cmp    rax,0x2
   1400293c2:	jb     0x140029416
   1400293c4:	lea    rcx,[r15*2+0x10]
   1400293cc:	cmp    rcx,0x400
   1400293d3:	ja     0x1400293ff
   1400293d5:	lea    rax,[rcx+0xf]
   1400293d9:	cmp    rax,rcx
   1400293dc:	ja     0x1400293e1
   1400293de:	mov    rax,r8
   1400293e1:	and    rax,0xfffffffffffffff0
   1400293e5:	call   0x140028810
   1400293ea:	sub    rsp,rax
   1400293ed:	lea    rdi,[rsp+0x40]
   1400293f2:	test   rdi,rdi
   1400293f5:	je     0x1400293a0
   1400293f7:	mov    DWORD PTR [rdi],0xcccc
   1400293fd:	jmp    0x140029412
   1400293ff:	call   0x140026354
   140029404:	mov    rdi,rax
   140029407:	test   rax,rax
   14002940a:	je     0x140029416
   14002940c:	mov    DWORD PTR [rax],0xdddd
   140029412:	add    rdi,0x10
   140029416:	test   rdi,rdi
   140029419:	je     0x1400293a0
   14002941b:	mov    r9d,ebx
   14002941e:	mov    r8,r12
   140029421:	mov    edx,0x1
   140029426:	mov    ecx,r14d
   140029429:	mov    DWORD PTR [rsp+0x28],r15d
   14002942e:	mov    QWORD PTR [rsp+0x20],rdi
   140029433:	call   QWORD PTR [rip+0xfdbf]        # 0x1400391f8
   140029439:	test   eax,eax
   14002943b:	je     0x14002958d
   140029441:	mov    r12,QWORD PTR [rbp+0x0]
   140029445:	and    DWORD PTR [rsp+0x28],esi
   140029449:	and    QWORD PTR [rsp+0x20],rsi
   14002944e:	mov    rcx,r12
   140029451:	mov    r9d,r15d
   140029454:	mov    r8,rdi
   140029457:	mov    edx,r13d
   14002945a:	call   0x140028ce8
   14002945f:	movsxd rsi,eax
   140029462:	test   eax,eax
   140029464:	je     0x14002958d
   14002946a:	mov    r8d,0x400
   140029470:	test   r8d,r13d
   140029473:	je     0x1400294ab
   140029475:	mov    ecx,DWORD PTR [rbp+0x70]
   140029478:	test   ecx,ecx
   14002947a:	je     0x14002958d
   140029480:	cmp    esi,ecx
   140029482:	jg     0x14002958d
   140029488:	mov    rax,QWORD PTR [rbp+0x68]
   14002948c:	mov    DWORD PTR [rsp+0x28],ecx
   140029490:	mov    r9d,r15d
   140029493:	mov    r8,rdi
   140029496:	mov    edx,r13d
   140029499:	mov    rcx,r12
   14002949c:	mov    QWORD PTR [rsp+0x20],rax
   1400294a1:	call   0x140028ce8
   1400294a6:	jmp    0x14002958d
   1400294ab:	test   eax,eax
   1400294ad:	jle    0x140029519
   1400294af:	xor    edx,edx
   1400294b1:	lea    rax,[rdx-0x20]
   1400294b5:	div    rsi
   1400294b8:	cmp    rax,0x2
   1400294bc:	jb     0x140029519
   1400294be:	lea    rcx,[rsi*2+0x10]
   1400294c6:	cmp    rcx,r8
   1400294c9:	ja     0x140029500
   1400294cb:	lea    rax,[rcx+0xf]
   1400294cf:	cmp    rax,rcx
   1400294d2:	ja     0x1400294de
   1400294d4:	movabs rax,0xffffffffffffff0
   1400294de:	and    rax,0xfffffffffffffff0
   1400294e2:	call   0x140028810
   1400294e7:	sub    rsp,rax
   1400294ea:	lea    rbx,[rsp+0x40]
   1400294ef:	test   rbx,rbx
   1400294f2:	je     0x14002958d
   1400294f8:	mov    DWORD PTR [rbx],0xcccc
   1400294fe:	jmp    0x140029513
   140029500:	call   0x140026354
   140029505:	mov    rbx,rax
   140029508:	test   rax,rax
   14002950b:	je     0x14002951b
   14002950d:	mov    DWORD PTR [rax],0xdddd
   140029513:	add    rbx,0x10
   140029517:	jmp    0x14002951b
   140029519:	xor    ebx,ebx
   14002951b:	test   rbx,rbx
   14002951e:	je     0x14002958d
   140029520:	mov    r9d,r15d
   140029523:	mov    r8,rdi
   140029526:	mov    edx,r13d
   140029529:	mov    rcx,r12
   14002952c:	mov    DWORD PTR [rsp+0x28],esi
   140029530:	mov    QWORD PTR [rsp+0x20],rbx
   140029535:	call   0x140028ce8
   14002953a:	xor    ecx,ecx
   14002953c:	test   eax,eax
   14002953e:	je     0x14002957c
   140029540:	mov    eax,DWORD PTR [rbp+0x70]
   140029543:	xor    edx,edx
   140029545:	mov    QWORD PTR [rsp+0x38],rcx
   14002954a:	mov    r9d,esi
   14002954d:	mov    r8,rbx
   140029550:	mov    QWORD PTR [rsp+0x30],rcx
   140029555:	test   eax,eax
   140029557:	jne    0x140029564
   140029559:	mov    DWORD PTR [rsp+0x28],ecx
   14002955d:	mov    QWORD PTR [rsp+0x20],rcx
   140029562:	jmp    0x140029571
   140029564:	mov    DWORD PTR [rsp+0x28],eax
   140029568:	mov    rax,QWORD PTR [rbp+0x68]
   14002956c:	mov    QWORD PTR [rsp+0x20],rax
   140029571:	mov    ecx,r14d
   140029574:	call   QWORD PTR [rip+0xfd1e]        # 0x140039298
   14002957a:	mov    esi,eax
   14002957c:	lea    rcx,[rbx-0x10]
   140029580:	cmp    DWORD PTR [rcx],0xdddd
   140029586:	jne    0x14002958d
   140029588:	call   0x140023328
   14002958d:	lea    rcx,[rdi-0x10]
   140029591:	cmp    DWORD PTR [rcx],0xdddd
   140029597:	jne    0x14002959e
   140029599:	call   0x140023328
   14002959e:	mov    eax,esi
   1400295a0:	mov    rcx,QWORD PTR [rbp+0x8]
   1400295a4:	xor    rcx,rbp
   1400295a7:	call   0x140020e50
   1400295ac:	mov    rbx,QWORD PTR [rbp+0x40]
   1400295b0:	mov    rsi,QWORD PTR [rbp+0x48]
   1400295b4:	mov    rdi,QWORD PTR [rbp+0x50]
   1400295b8:	lea    rsp,[rbp+0x10]
   1400295bc:	pop    r15
   1400295be:	pop    r14
   1400295c0:	pop    r13
   1400295c2:	pop    r12
   1400295c4:	pop    rbp
   1400295c5:	ret    
   1400295c6:	int3   
   1400295c7:	int3   
   1400295c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400295cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400295d2:	push   rdi
   1400295d3:	sub    rsp,0x70
   1400295d7:	mov    rsi,rdx
   1400295da:	mov    rdx,rcx
   1400295dd:	lea    rcx,[rsp+0x50]
   1400295e2:	mov    rbx,r9
   1400295e5:	mov    edi,r8d
   1400295e8:	call   0x1400246b8
   1400295ed:	mov    eax,DWORD PTR [rsp+0xc0]
   1400295f4:	lea    rcx,[rsp+0x50]
   1400295f9:	mov    r9,rbx
   1400295fc:	mov    DWORD PTR [rsp+0x40],eax
   140029600:	mov    eax,DWORD PTR [rsp+0xb8]
   140029607:	mov    r8d,edi
   14002960a:	mov    DWORD PTR [rsp+0x38],eax
   14002960e:	mov    eax,DWORD PTR [rsp+0xb0]
   140029615:	mov    rdx,rsi
   140029618:	mov    DWORD PTR [rsp+0x30],eax
   14002961c:	mov    rax,QWORD PTR [rsp+0xa8]
   140029624:	mov    QWORD PTR [rsp+0x28],rax
   140029629:	mov    eax,DWORD PTR [rsp+0xa0]
   140029630:	mov    DWORD PTR [rsp+0x20],eax
   140029634:	call   0x1400292f8
   140029639:	cmp    BYTE PTR [rsp+0x68],0x0
   14002963e:	je     0x14002964c
   140029640:	mov    rcx,QWORD PTR [rsp+0x60]
   140029645:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002964c:	lea    r11,[rsp+0x70]
   140029651:	mov    rbx,QWORD PTR [r11+0x10]
   140029655:	mov    rsi,QWORD PTR [r11+0x18]
   140029659:	mov    rsp,r11
   14002965c:	pop    rdi
   14002965d:	ret    
   14002965e:	int3   
   14002965f:	int3   
   140029660:	rex push rbp
   140029662:	push   r12
   140029664:	push   r13
   140029666:	push   r14
   140029668:	push   r15
   14002966a:	sub    rsp,0x40
   14002966e:	lea    rbp,[rsp+0x30]
   140029673:	mov    QWORD PTR [rbp+0x40],rbx
   140029677:	mov    QWORD PTR [rbp+0x48],rsi
   14002967b:	mov    QWORD PTR [rbp+0x50],rdi
   14002967f:	mov    rax,QWORD PTR [rip+0x23dc2]        # 0x14004d448
   140029686:	xor    rax,rbp
   140029689:	mov    QWORD PTR [rbp+0x0],rax
   14002968d:	mov    r14d,DWORD PTR [rbp+0x68]
   140029691:	xor    edi,edi
   140029693:	mov    r15d,r9d
   140029696:	mov    r12,r8
   140029699:	mov    r13d,edx
   14002969c:	test   r14d,r14d
   14002969f:	jne    0x1400296a8
   1400296a1:	mov    rax,QWORD PTR [rcx]
   1400296a4:	mov    r14d,DWORD PTR [rax+0x4]
   1400296a8:	neg    DWORD PTR [rbp+0x70]
   1400296ab:	mov    ecx,r14d
   1400296ae:	mov    DWORD PTR [rsp+0x28],edi
   1400296b2:	sbb    edx,edx
   1400296b4:	mov    QWORD PTR [rsp+0x20],rdi
   1400296b9:	and    edx,0x8
   1400296bc:	inc    edx
   1400296be:	call   QWORD PTR [rip+0xfb34]        # 0x1400391f8
   1400296c4:	movsxd rsi,eax
   1400296c7:	test   eax,eax
   1400296c9:	jne    0x1400296d2
   1400296cb:	xor    eax,eax
   1400296cd:	jmp    0x14002979f
   1400296d2:	jle    0x14002973e
   1400296d4:	movabs rax,0x7ffffffffffffff0
   1400296de:	cmp    rsi,rax
   1400296e1:	ja     0x14002973e
   1400296e3:	lea    rcx,[rsi*2+0x10]
   1400296eb:	cmp    rcx,0x400
   1400296f2:	ja     0x140029725
   1400296f4:	lea    rax,[rcx+0xf]
   1400296f8:	cmp    rax,rcx
   1400296fb:	ja     0x140029707
   1400296fd:	movabs rax,0xffffffffffffff0
   140029707:	and    rax,0xfffffffffffffff0
   14002970b:	call   0x140028810
   140029710:	sub    rsp,rax
   140029713:	lea    rbx,[rsp+0x30]
   140029718:	test   rbx,rbx
   14002971b:	je     0x1400296cb
   14002971d:	mov    DWORD PTR [rbx],0xcccc
   140029723:	jmp    0x140029738
   140029725:	call   0x140026354
   14002972a:	mov    rbx,rax
   14002972d:	test   rax,rax
   140029730:	je     0x140029741
   140029732:	mov    DWORD PTR [rax],0xdddd
   140029738:	add    rbx,0x10
   14002973c:	jmp    0x140029741
   14002973e:	mov    rbx,rdi
   140029741:	test   rbx,rbx
   140029744:	je     0x1400296cb
   140029746:	mov    r8,rsi
   140029749:	xor    edx,edx
   14002974b:	mov    rcx,rbx
   14002974e:	add    r8,r8
   140029751:	call   0x1400260e0
   140029756:	mov    r9d,r15d
   140029759:	mov    r8,r12
   14002975c:	mov    edx,0x1
   140029761:	mov    ecx,r14d
   140029764:	mov    DWORD PTR [rsp+0x28],esi
   140029768:	mov    QWORD PTR [rsp+0x20],rbx
   14002976d:	call   QWORD PTR [rip+0xfa85]        # 0x1400391f8
   140029773:	test   eax,eax
   140029775:	je     0x14002978c
   140029777:	mov    r9,QWORD PTR [rbp+0x60]
   14002977b:	mov    r8d,eax
   14002977e:	mov    rdx,rbx
   140029781:	mov    ecx,r13d
   140029784:	call   QWORD PTR [rip+0xfc06]        # 0x140039390
   14002978a:	mov    edi,eax
   14002978c:	lea    rcx,[rbx-0x10]
   140029790:	cmp    DWORD PTR [rcx],0xdddd
   140029796:	jne    0x14002979d
   140029798:	call   0x140023328
   14002979d:	mov    eax,edi
   14002979f:	mov    rcx,QWORD PTR [rbp+0x0]
   1400297a3:	xor    rcx,rbp
   1400297a6:	call   0x140020e50
   1400297ab:	mov    rbx,QWORD PTR [rbp+0x40]
   1400297af:	mov    rsi,QWORD PTR [rbp+0x48]
   1400297b3:	mov    rdi,QWORD PTR [rbp+0x50]
   1400297b7:	lea    rsp,[rbp+0x10]
   1400297bb:	pop    r15
   1400297bd:	pop    r14
   1400297bf:	pop    r13
   1400297c1:	pop    r12
   1400297c3:	pop    rbp
   1400297c4:	ret    
   1400297c5:	int3   
   1400297c6:	int3   
   1400297c7:	int3   
   1400297c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400297cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400297d2:	push   rdi
   1400297d3:	sub    rsp,0x60
   1400297d7:	mov    esi,edx
   1400297d9:	mov    rdx,rcx
   1400297dc:	lea    rcx,[rsp+0x40]
   1400297e1:	mov    ebx,r9d
   1400297e4:	mov    rdi,r8
   1400297e7:	call   0x1400246b8
   1400297ec:	mov    eax,DWORD PTR [rsp+0xa0]
   1400297f3:	lea    rcx,[rsp+0x40]
   1400297f8:	mov    r9d,ebx
   1400297fb:	mov    DWORD PTR [rsp+0x30],eax
   1400297ff:	mov    eax,DWORD PTR [rsp+0x98]
   140029806:	mov    r8,rdi
   140029809:	mov    DWORD PTR [rsp+0x28],eax
   14002980d:	mov    rax,QWORD PTR [rsp+0x90]
   140029815:	mov    edx,esi
   140029817:	mov    QWORD PTR [rsp+0x20],rax
   14002981c:	call   0x140029660
   140029821:	cmp    BYTE PTR [rsp+0x58],0x0
   140029826:	je     0x140029834
   140029828:	mov    rcx,QWORD PTR [rsp+0x50]
   14002982d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140029834:	mov    rbx,QWORD PTR [rsp+0x70]
   140029839:	mov    rsi,QWORD PTR [rsp+0x78]
   14002983e:	add    rsp,0x60
   140029842:	pop    rdi
   140029843:	ret    
   140029844:	mov    ecx,0x2
   140029849:	jmp    0x140022138
   14002984e:	int3   
   14002984f:	int3   
   140029850:	mov    QWORD PTR [rsp+0x18],rbx
   140029855:	mov    DWORD PTR [rsp+0x8],ecx
   140029859:	push   rsi
   14002985a:	push   rdi
   14002985b:	push   r14
   14002985d:	sub    rsp,0x20
   140029861:	movsxd rdi,ecx
   140029864:	cmp    edi,0xfffffffe
   140029867:	jne    0x140029881
   140029869:	call   0x140025310
   14002986e:	and    DWORD PTR [rax],0x0
   140029871:	call   0x140025380
   140029876:	mov    DWORD PTR [rax],0x9
   14002987c:	jmp    0x14002990f
   140029881:	call   0x1400227ec
   140029886:	test   eax,eax
   140029888:	js     0x14002990f
   14002988e:	test   edi,edi
   140029890:	js     0x1400298f7
   140029892:	cmp    edi,DWORD PTR [rip+0x28a34]        # 0x1400522cc
   140029898:	jae    0x1400298f7
   14002989a:	mov    rbx,rdi
   14002989d:	mov    rsi,rdi
   1400298a0:	sar    rsi,0x5
   1400298a4:	lea    r14,[rip+0x28a35]        # 0x1400522e0
   1400298ab:	and    ebx,0x1f
   1400298ae:	imul   rbx,rbx,0x58
   1400298b2:	mov    rax,QWORD PTR [r14+rsi*8]
   1400298b6:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   1400298bb:	and    ecx,0x1
   1400298be:	je     0x1400298f7
   1400298c0:	mov    ecx,edi
   1400298c2:	call   0x1400281b8
   1400298c7:	nop
   1400298c8:	mov    rax,QWORD PTR [r14+rsi*8]
   1400298cc:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   1400298d1:	je     0x1400298de
   1400298d3:	mov    ecx,edi
   1400298d5:	call   0x140029920
   1400298da:	mov    ebx,eax
   1400298dc:	jmp    0x1400298ec
   1400298de:	call   0x140025380
   1400298e3:	mov    DWORD PTR [rax],0x9
   1400298e9:	or     ebx,0xffffffff
   1400298ec:	mov    ecx,edi
   1400298ee:	call   0x140028380
   1400298f3:	mov    eax,ebx
   1400298f5:	jmp    0x140029912
   1400298f7:	call   0x140025310
   1400298fc:	and    DWORD PTR [rax],0x0
   1400298ff:	call   0x140025380
   140029904:	mov    DWORD PTR [rax],0x9
   14002990a:	call   0x140024554
   14002990f:	or     eax,0xffffffff
   140029912:	mov    rbx,QWORD PTR [rsp+0x50]
   140029917:	add    rsp,0x20
   14002991b:	pop    r14
   14002991d:	pop    rdi
   14002991e:	pop    rsi
   14002991f:	ret    
   140029920:	mov    QWORD PTR [rsp+0x8],rbx
   140029925:	push   rdi
   140029926:	sub    rsp,0x20
   14002992a:	movsxd rdi,ecx
   14002992d:	call   0x1400227ec
   140029932:	test   eax,eax
   140029934:	jns    0x14002993e
   140029936:	or     eax,0xffffffff
   140029939:	jmp    0x1400299e0
   14002993e:	mov    ecx,edi
   140029940:	call   0x1400282fc
   140029945:	cmp    rax,0xffffffffffffffff
   140029949:	je     0x1400299a4
   14002994b:	mov    rax,QWORD PTR [rip+0x2898e]        # 0x1400522e0
   140029952:	mov    ecx,0x2
   140029957:	cmp    edi,0x1
   14002995a:	jne    0x140029965
   14002995c:	test   BYTE PTR [rax+0xb8],dil
   140029963:	jne    0x14002996f
   140029965:	cmp    edi,ecx
   140029967:	jne    0x140029986
   140029969:	test   BYTE PTR [rax+0x60],0x1
   14002996d:	je     0x140029986
   14002996f:	call   0x1400282fc
   140029974:	mov    ecx,0x1
   140029979:	mov    rbx,rax
   14002997c:	call   0x1400282fc
   140029981:	cmp    rax,rbx
   140029984:	je     0x1400299a4
   140029986:	mov    ecx,edi
   140029988:	call   0x1400282fc
   14002998d:	mov    rcx,rax
   140029990:	call   QWORD PTR [rip+0xfc2a]        # 0x1400395c0
   140029996:	test   eax,eax
   140029998:	jne    0x1400299a4
   14002999a:	call   QWORD PTR [rip+0xfc40]        # 0x1400395e0
   1400299a0:	mov    ebx,eax
   1400299a2:	jmp    0x1400299a6
   1400299a4:	xor    ebx,ebx
   1400299a6:	mov    ecx,edi
   1400299a8:	call   0x140028250
   1400299ad:	mov    rcx,rdi
   1400299b0:	mov    rax,rdi
   1400299b3:	sar    rax,0x5
   1400299b7:	and    ecx,0x1f
   1400299ba:	lea    rdx,[rip+0x2891f]        # 0x1400522e0
   1400299c1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400299c5:	imul   rcx,rcx,0x58
   1400299c9:	mov    BYTE PTR [rax+rcx*1+0x8],0x0
   1400299ce:	test   ebx,ebx
   1400299d0:	je     0x1400299de
   1400299d2:	mov    ecx,ebx
   1400299d4:	call   0x140025330
   1400299d9:	jmp    0x140029936
   1400299de:	xor    eax,eax
   1400299e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400299e5:	add    rsp,0x20
   1400299e9:	pop    rdi
   1400299ea:	ret    
   1400299eb:	int3   
   1400299ec:	rex push rbx
   1400299ee:	sub    rsp,0x20
   1400299f2:	test   BYTE PTR [rcx+0x18],0x83
   1400299f6:	mov    rbx,rcx
   1400299f9:	je     0x140029a1d
   1400299fb:	test   BYTE PTR [rcx+0x18],0x8
   1400299ff:	je     0x140029a1d
   140029a01:	mov    rcx,QWORD PTR [rcx+0x10]
   140029a05:	call   0x140023328
   140029a0a:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140029a11:	xor    eax,eax
   140029a13:	mov    QWORD PTR [rbx],rax
   140029a16:	mov    QWORD PTR [rbx+0x10],rax
   140029a1a:	mov    DWORD PTR [rbx+0x8],eax
   140029a1d:	add    rsp,0x20
   140029a21:	pop    rbx
   140029a22:	ret    
   140029a23:	int3   
   140029a24:	mov    WORD PTR [rsp+0x8],cx
   140029a29:	push   rbx
   140029a2a:	sub    rsp,0x20
   140029a2e:	mov    eax,0xffff
   140029a33:	movzx  ebx,dx
   140029a36:	cmp    cx,ax
   140029a39:	jne    0x140029a3f
   140029a3b:	xor    eax,eax
   140029a3d:	jmp    0x140029a84
   140029a3f:	mov    eax,0x100
   140029a44:	cmp    cx,ax
   140029a47:	jae    0x140029a59
   140029a49:	mov    rax,QWORD PTR [rip+0x24870]        # 0x14004e2c0
   140029a50:	movzx  ecx,cx
   140029a53:	movzx  eax,WORD PTR [rax+rcx*2]
   140029a57:	jmp    0x140029a7f
   140029a59:	mov    ecx,0x1
   140029a5e:	lea    r9,[rsp+0x40]
   140029a63:	lea    rdx,[rsp+0x30]
   140029a68:	mov    r8d,ecx
   140029a6b:	call   QWORD PTR [rip+0xf91f]        # 0x140039390
   140029a71:	xor    ecx,ecx
   140029a73:	test   eax,eax
   140029a75:	je     0x140029a7c
   140029a77:	movzx  ecx,WORD PTR [rsp+0x40]
   140029a7c:	movzx  eax,cx
   140029a7f:	movzx  ecx,bx
   140029a82:	and    eax,ecx
   140029a84:	add    rsp,0x20
   140029a88:	pop    rbx
   140029a89:	ret    
   140029a8a:	int3   
   140029a8b:	int3   
   140029a8c:	sub    rsp,0x28
   140029a90:	mov    rcx,QWORD PTR [rip+0x24831]        # 0x14004e2c8
   140029a97:	lea    rax,[rcx+0x2]
   140029a9b:	cmp    rax,0x1
   140029a9f:	jbe    0x140029aa7
   140029aa1:	call   QWORD PTR [rip+0xfb19]        # 0x1400395c0
   140029aa7:	add    rsp,0x28
   140029aab:	ret    
   140029aac:	sub    rsp,0x48
   140029ab0:	and    QWORD PTR [rsp+0x30],0x0
   140029ab6:	and    DWORD PTR [rsp+0x28],0x0
   140029abb:	mov    r8d,0x3
   140029ac1:	lea    rcx,[rip+0x12148]        # 0x14003bc10
   140029ac8:	xor    r9d,r9d
   140029acb:	mov    edx,0x40000000
   140029ad0:	mov    DWORD PTR [rsp+0x20],r8d
   140029ad5:	call   QWORD PTR [rip+0xf8bd]        # 0x140039398
   140029adb:	mov    QWORD PTR [rip+0x247e6],rax        # 0x14004e2c8
   140029ae2:	add    rsp,0x48
   140029ae6:	ret    
   140029ae7:	int3   
   140029ae8:	mov    QWORD PTR [rsp+0x8],rbx
   140029aed:	mov    QWORD PTR [rsp+0x10],rbp
   140029af2:	push   rsi
   140029af3:	push   rdi
   140029af4:	push   r14
   140029af6:	sub    rsp,0x20
   140029afa:	mov    rbx,rdx
   140029afd:	mov    r14d,ecx
   140029b00:	call   0x1400227ec
   140029b05:	xor    edi,edi
   140029b07:	test   eax,eax
   140029b09:	jns    0x140029b13
   140029b0b:	or     eax,0xffffffff
   140029b0e:	jmp    0x140029c73
   140029b13:	mov    rcx,rbx
   140029b16:	call   0x140023a40
   140029b1b:	mov    ecx,DWORD PTR [rbx+0x18]
   140029b1e:	movsxd rsi,eax
   140029b21:	test   cl,0x82
   140029b24:	jne    0x140029b3f
   140029b26:	call   0x140025380
   140029b2b:	mov    DWORD PTR [rax],0x9
   140029b31:	or     DWORD PTR [rbx+0x18],0x20
   140029b35:	mov    eax,0xffff
   140029b3a:	jmp    0x140029c73
   140029b3f:	test   cl,0x40
   140029b42:	je     0x140029b51
   140029b44:	call   0x140025380
   140029b49:	mov    DWORD PTR [rax],0x22
   140029b4f:	jmp    0x140029b31
   140029b51:	test   cl,0x1
   140029b54:	je     0x140029b6f
   140029b56:	mov    DWORD PTR [rbx+0x8],edi
   140029b59:	test   cl,0x10
   140029b5c:	je     0x140029bec
   140029b62:	mov    rax,QWORD PTR [rbx+0x10]
   140029b66:	and    ecx,0xfffffffe
   140029b69:	mov    QWORD PTR [rbx],rax
   140029b6c:	mov    DWORD PTR [rbx+0x18],ecx
   140029b6f:	mov    eax,DWORD PTR [rbx+0x18]
   140029b72:	mov    DWORD PTR [rbx+0x8],edi
   140029b75:	and    eax,0xffffffef
   140029b78:	or     eax,0x2
   140029b7b:	mov    DWORD PTR [rbx+0x18],eax
   140029b7e:	test   eax,0x10c
   140029b83:	jne    0x140029bb4
   140029b85:	call   0x14002142c
   140029b8a:	add    rax,0x30
   140029b8e:	cmp    rbx,rax
   140029b91:	je     0x140029ba1
   140029b93:	call   0x14002142c
   140029b98:	add    rax,0x60
   140029b9c:	cmp    rbx,rax
   140029b9f:	jne    0x140029bac
   140029ba1:	mov    ecx,esi
   140029ba3:	call   0x140028444
   140029ba8:	test   eax,eax
   140029baa:	jne    0x140029bb4
   140029bac:	mov    rcx,rbx
   140029baf:	call   0x140028a00
   140029bb4:	test   DWORD PTR [rbx+0x18],0x108
   140029bbb:	je     0x140029c4b
   140029bc1:	mov    ebp,DWORD PTR [rbx]
   140029bc3:	mov    rdx,QWORD PTR [rbx+0x10]
   140029bc7:	sub    ebp,DWORD PTR [rbx+0x10]
   140029bca:	lea    rax,[rdx+0x2]
   140029bce:	mov    QWORD PTR [rbx],rax
   140029bd1:	mov    eax,DWORD PTR [rbx+0x24]
   140029bd4:	sub    eax,0x2
   140029bd7:	mov    DWORD PTR [rbx+0x8],eax
   140029bda:	test   ebp,ebp
   140029bdc:	jle    0x140029bf7
   140029bde:	mov    r8d,ebp
   140029be1:	mov    ecx,esi
   140029be3:	call   0x140023b54
   140029be8:	mov    edi,eax
   140029bea:	jmp    0x140029c41
   140029bec:	or     ecx,0x20
   140029bef:	mov    DWORD PTR [rbx+0x18],ecx
   140029bf2:	jmp    0x140029b35
   140029bf7:	lea    eax,[rsi+0x2]
   140029bfa:	cmp    eax,0x1
   140029bfd:	jbe    0x140029c1d
   140029bff:	mov    rcx,rsi
   140029c02:	mov    rax,rsi
   140029c05:	lea    rdx,[rip+0x286d4]        # 0x1400522e0
   140029c0c:	and    ecx,0x1f
   140029c0f:	sar    rax,0x5
   140029c13:	imul   rcx,rcx,0x58
   140029c17:	add    rcx,QWORD PTR [rdx+rax*8]
   140029c1b:	jmp    0x140029c24
   140029c1d:	lea    rcx,[rip+0x237cc]        # 0x14004d3f0
   140029c24:	test   BYTE PTR [rcx+0x8],0x20
   140029c28:	je     0x140029c41
   140029c2a:	xor    edx,edx
   140029c2c:	mov    ecx,esi
   140029c2e:	lea    r8d,[rdx+0x2]
   140029c32:	call   0x1400284b8
   140029c37:	cmp    rax,0xffffffffffffffff
   140029c3b:	je     0x140029b31
   140029c41:	mov    rax,QWORD PTR [rbx+0x10]
   140029c45:	mov    WORD PTR [rax],r14w
   140029c49:	jmp    0x140029c67
   140029c4b:	mov    ebp,0x2
   140029c50:	lea    rdx,[rsp+0x50]
   140029c55:	mov    ecx,esi
   140029c57:	mov    r8d,ebp
   140029c5a:	mov    WORD PTR [rsp+0x50],r14w
   140029c60:	call   0x140023b54
   140029c65:	mov    edi,eax
   140029c67:	cmp    edi,ebp
   140029c69:	jne    0x140029b31
   140029c6f:	movzx  eax,r14w
   140029c73:	mov    rbx,QWORD PTR [rsp+0x40]
   140029c78:	mov    rbp,QWORD PTR [rsp+0x48]
   140029c7d:	add    rsp,0x20
   140029c81:	pop    r14
   140029c83:	pop    rdi
   140029c84:	pop    rsi
   140029c85:	ret    
   140029c86:	int3   
   140029c87:	int3   
   140029c88:	rex push rdi
   140029c8a:	sub    rsp,0x20
   140029c8e:	lea    rdi,[rip+0x23e7b]        # 0x14004db10
   140029c95:	cmp    QWORD PTR [rip+0x23e64],rdi        # 0x14004db00
   140029c9c:	je     0x140029cc9
   140029c9e:	mov    ecx,0xc
   140029ca3:	call   0x140023638
   140029ca8:	nop
   140029ca9:	mov    rdx,rdi
   140029cac:	lea    rcx,[rip+0x23e4d]        # 0x14004db00
   140029cb3:	call   0x140026c14
   140029cb8:	mov    QWORD PTR [rip+0x23e41],rax        # 0x14004db00
   140029cbf:	mov    ecx,0xc
   140029cc4:	call   0x140023820
   140029cc9:	add    rsp,0x20
   140029ccd:	pop    rdi
   140029cce:	ret    
   140029ccf:	int3   
   140029cd0:	mov    QWORD PTR [rsp+0x10],rsi
   140029cd5:	push   rbp
   140029cd6:	push   rdi
   140029cd7:	push   r14
   140029cd9:	mov    rbp,rsp
   140029cdc:	sub    rsp,0x60
   140029ce0:	movsxd rdi,ecx
   140029ce3:	mov    r14d,edx
   140029ce6:	lea    rcx,[rbp-0x20]
   140029cea:	mov    rdx,r8
   140029ced:	call   0x1400246b8
   140029cf2:	lea    eax,[rdi+0x1]
   140029cf5:	cmp    eax,0x100
   140029cfa:	ja     0x140029d0d
   140029cfc:	mov    rax,QWORD PTR [rbp-0x20]
   140029d00:	mov    rcx,QWORD PTR [rax+0x108]
   140029d07:	movzx  eax,WORD PTR [rcx+rdi*2]
   140029d0b:	jmp    0x140029d86
   140029d0d:	mov    esi,edi
   140029d0f:	lea    rdx,[rbp-0x20]
   140029d13:	sar    esi,0x8
   140029d16:	movzx  ecx,sil
   140029d1a:	call   0x1400283ac
   140029d1f:	mov    edx,0x1
   140029d24:	test   eax,eax
   140029d26:	je     0x140029d3a
   140029d28:	mov    BYTE PTR [rbp+0x38],sil
   140029d2c:	mov    BYTE PTR [rbp+0x39],dil
   140029d30:	mov    BYTE PTR [rbp+0x3a],0x0
   140029d34:	lea    r9d,[rdx+0x1]
   140029d38:	jmp    0x140029d45
   140029d3a:	mov    BYTE PTR [rbp+0x38],dil
   140029d3e:	mov    BYTE PTR [rbp+0x39],0x0
   140029d42:	mov    r9d,edx
   140029d45:	mov    rax,QWORD PTR [rbp-0x20]
   140029d49:	mov    DWORD PTR [rsp+0x30],edx
   140029d4d:	lea    r8,[rbp+0x38]
   140029d51:	mov    ecx,DWORD PTR [rax+0x4]
   140029d54:	lea    rax,[rbp+0x20]
   140029d58:	mov    DWORD PTR [rsp+0x28],ecx
   140029d5c:	lea    rcx,[rbp-0x20]
   140029d60:	mov    QWORD PTR [rsp+0x20],rax
   140029d65:	call   0x1400297c8
   140029d6a:	test   eax,eax
   140029d6c:	jne    0x140029d82
   140029d6e:	cmp    BYTE PTR [rbp-0x8],al
   140029d71:	je     0x140029d7e
   140029d73:	mov    rax,QWORD PTR [rbp-0x10]
   140029d77:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029d7e:	xor    eax,eax
   140029d80:	jmp    0x140029d9a
   140029d82:	movzx  eax,WORD PTR [rbp+0x20]
   140029d86:	and    eax,r14d
   140029d89:	cmp    BYTE PTR [rbp-0x8],0x0
   140029d8d:	je     0x140029d9a
   140029d8f:	mov    rcx,QWORD PTR [rbp-0x10]
   140029d93:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140029d9a:	mov    rsi,QWORD PTR [rsp+0x88]
   140029da2:	add    rsp,0x60
   140029da6:	pop    r14
   140029da8:	pop    rdi
   140029da9:	pop    rbp
   140029daa:	ret    
   140029dab:	int3   
   140029dac:	int3   
   140029dad:	int3   
   140029dae:	int3   
   140029daf:	int3   
   140029db0:	int3   
   140029db1:	int3   
   140029db2:	int3   
   140029db3:	int3   
   140029db4:	int3   
   140029db5:	int3   
   140029db6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029dc0:	sub    rdx,rcx
   140029dc3:	cmp    r8,0x8
   140029dc7:	jb     0x140029deb
   140029dc9:	test   cl,0x7
   140029dcc:	je     0x140029de2
   140029dce:	xchg   ax,ax
   140029dd0:	mov    al,BYTE PTR [rcx]
   140029dd2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140029dd5:	jne    0x140029e03
   140029dd7:	inc    rcx
   140029dda:	dec    r8
   140029ddd:	test   cl,0x7
   140029de0:	jne    0x140029dd0
   140029de2:	mov    r9,r8
   140029de5:	shr    r9,0x3
   140029de9:	jne    0x140029e0a
   140029deb:	test   r8,r8
   140029dee:	je     0x140029dff
   140029df0:	mov    al,BYTE PTR [rcx]
   140029df2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140029df5:	jne    0x140029e03
   140029df7:	inc    rcx
   140029dfa:	dec    r8
   140029dfd:	jne    0x140029df0
   140029dff:	xor    rax,rax
   140029e02:	ret    
   140029e03:	sbb    eax,eax
   140029e05:	sbb    eax,0xffffffff
   140029e08:	ret    
   140029e09:	nop
   140029e0a:	shr    r9,0x2
   140029e0e:	je     0x140029e47
   140029e10:	mov    rax,QWORD PTR [rcx]
   140029e13:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140029e17:	jne    0x140029e74
   140029e19:	mov    rax,QWORD PTR [rcx+0x8]
   140029e1d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140029e22:	jne    0x140029e70
   140029e24:	mov    rax,QWORD PTR [rcx+0x10]
   140029e28:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140029e2d:	jne    0x140029e6c
   140029e2f:	mov    rax,QWORD PTR [rcx+0x18]
   140029e33:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140029e38:	jne    0x140029e68
   140029e3a:	add    rcx,0x20
   140029e3e:	dec    r9
   140029e41:	jne    0x140029e10
   140029e43:	and    r8,0x1f
   140029e47:	mov    r9,r8
   140029e4a:	shr    r9,0x3
   140029e4e:	je     0x140029deb
   140029e50:	mov    rax,QWORD PTR [rcx]
   140029e53:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140029e57:	jne    0x140029e74
   140029e59:	add    rcx,0x8
   140029e5d:	dec    r9
   140029e60:	jne    0x140029e50
   140029e62:	and    r8,0x7
   140029e66:	jmp    0x140029deb
   140029e68:	add    rcx,0x8
   140029e6c:	add    rcx,0x8
   140029e70:	add    rcx,0x8
   140029e74:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140029e78:	bswap  rax
   140029e7b:	bswap  rcx
   140029e7e:	cmp    rax,rcx
   140029e81:	sbb    eax,eax
   140029e83:	sbb    eax,0xffffffff
   140029e86:	ret    
   140029e87:	int3   
   140029e88:	xor    r8d,r8d
   140029e8b:	mov    eax,r8d
   140029e8e:	test   rdx,rdx
   140029e91:	je     0x140029ea5
   140029e93:	cmp    WORD PTR [rcx],r8w
   140029e97:	je     0x140029ea5
   140029e99:	inc    rax
   140029e9c:	add    rcx,0x2
   140029ea0:	cmp    rax,rdx
   140029ea3:	jb     0x140029e93
   140029ea5:	repz ret 
   140029ea7:	int3   
   140029ea8:	sub    rsp,0x38
   140029eac:	cmp    r9d,0xa
   140029eb0:	jne    0x140029ec0
   140029eb2:	test   ecx,ecx
   140029eb4:	jns    0x140029ec0
   140029eb6:	mov    DWORD PTR [rsp+0x20],0x1
   140029ebe:	jmp    0x140029ec5
   140029ec0:	and    DWORD PTR [rsp+0x20],0x0
   140029ec5:	call   0x140029ed0
   140029eca:	add    rsp,0x38
   140029ece:	ret    
   140029ecf:	int3   
   140029ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140029ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140029eda:	mov    QWORD PTR [rsp+0x18],rsi
   140029edf:	push   rdi
   140029ee0:	sub    rsp,0x20
   140029ee4:	xor    ebp,ebp
   140029ee6:	mov    esi,r9d
   140029ee9:	mov    rdi,r8
   140029eec:	mov    r10,rdx
   140029eef:	mov    r11d,ecx
   140029ef2:	test   rdx,rdx
   140029ef5:	jne    0x140029f0f
   140029ef7:	call   0x140025380
   140029efc:	mov    ebx,0x16
   140029f01:	mov    DWORD PTR [rax],ebx
   140029f03:	call   0x140024554
   140029f08:	mov    eax,ebx
   140029f0a:	jmp    0x140029fcb
   140029f0f:	test   r8,r8
   140029f12:	je     0x140029ef7
   140029f14:	mov    WORD PTR [rdx],bp
   140029f17:	mov    edx,DWORD PTR [rsp+0x50]
   140029f1b:	mov    eax,edx
   140029f1d:	neg    eax
   140029f1f:	sbb    rcx,rcx
   140029f22:	neg    rcx
   140029f25:	inc    rcx
   140029f28:	cmp    r8,rcx
   140029f2b:	ja     0x140029f39
   140029f2d:	call   0x140025380
   140029f32:	mov    ebx,0x22
   140029f37:	jmp    0x140029f01
   140029f39:	lea    eax,[r9-0x2]
   140029f3d:	mov    ebx,0x22
   140029f42:	cmp    eax,ebx
   140029f44:	ja     0x140029ef7
   140029f46:	mov    rcx,rbp
   140029f49:	mov    r8,r10
   140029f4c:	test   edx,edx
   140029f4e:	je     0x140029f61
   140029f50:	lea    eax,[rbx+0xb]
   140029f53:	lea    r8,[r10+0x2]
   140029f57:	lea    ecx,[rbx-0x21]
   140029f5a:	mov    WORD PTR [r10],ax
   140029f5e:	neg    r11d
   140029f61:	mov    r9,r8
   140029f64:	xor    edx,edx
   140029f66:	mov    eax,r11d
   140029f69:	div    esi
   140029f6b:	mov    r11d,eax
   140029f6e:	cmp    edx,0x9
   140029f71:	jbe    0x140029f79
   140029f73:	add    dx,0x57
   140029f77:	jmp    0x140029f7d
   140029f79:	add    dx,0x30
   140029f7d:	mov    WORD PTR [r8],dx
   140029f81:	inc    rcx
   140029f84:	add    r8,0x2
   140029f88:	test   eax,eax
   140029f8a:	je     0x140029f91
   140029f8c:	cmp    rcx,rdi
   140029f8f:	jb     0x140029f64
   140029f91:	cmp    rcx,rdi
   140029f94:	jb     0x140029fa4
   140029f96:	mov    WORD PTR [r10],bp
   140029f9a:	call   0x140025380
   140029f9f:	jmp    0x140029f01
   140029fa4:	mov    WORD PTR [r8],bp
   140029fa8:	sub    r8,0x2
   140029fac:	movzx  eax,WORD PTR [r9]
   140029fb0:	movzx  ecx,WORD PTR [r8]
   140029fb4:	mov    WORD PTR [r8],ax
   140029fb8:	mov    WORD PTR [r9],cx
   140029fbc:	add    r9,0x2
   140029fc0:	sub    r8,0x2
   140029fc4:	cmp    r9,r8
   140029fc7:	jb     0x140029fac
   140029fc9:	xor    eax,eax
   140029fcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fd0:	mov    rbp,QWORD PTR [rsp+0x38]
   140029fd5:	mov    rsi,QWORD PTR [rsp+0x40]
   140029fda:	add    rsp,0x20
   140029fde:	pop    rdi
   140029fdf:	ret    
   140029fe0:	xor    edx,edx
   140029fe2:	lea    r8d,[rdx+0xa]
   140029fe6:	jmp    0x14002a584
   140029feb:	int3   
   140029fec:	sub    rsp,0x18
   140029ff0:	movdqa xmm2,XMMWORD PTR [rsp]
   140029ff5:	movzx  eax,dx
   140029ff8:	mov    r8,rcx
   140029ffb:	movd   xmm0,eax
   140029fff:	xor    r9d,r9d
   14002a002:	pshuflw xmm1,xmm0,0x0
   14002a007:	pshufd xmm3,xmm1,0x0
   14002a00c:	mov    rax,r8
   14002a00f:	and    eax,0xfff
   14002a014:	cmp    rax,0xff0
   14002a01a:	ja     0x14002a047
   14002a01c:	movdqu xmm1,XMMWORD PTR [r8]
   14002a021:	movdqa xmm0,xmm2
   14002a025:	pxor   xmm0,xmm2
   14002a029:	movdqa xmm2,xmm0
   14002a02d:	pcmpeqw xmm2,xmm1
   14002a031:	pcmpeqw xmm1,xmm3
   14002a035:	por    xmm2,xmm1
   14002a039:	pmovmskb eax,xmm2
   14002a03d:	test   eax,eax
   14002a03f:	jne    0x14002a059
   14002a041:	add    r8,0x10
   14002a045:	jmp    0x14002a00c
   14002a047:	cmp    WORD PTR [r8],dx
   14002a04b:	je     0x14002a070
   14002a04d:	cmp    WORD PTR [r8],r9w
   14002a051:	je     0x14002a06c
   14002a053:	add    r8,0x2
   14002a057:	jmp    0x14002a00c
   14002a059:	bsf    ecx,eax
   14002a05c:	add    r8,rcx
   14002a05f:	cmp    WORD PTR [r8],dx
   14002a063:	cmove  r9,r8
   14002a067:	mov    rax,r9
   14002a06a:	jmp    0x14002a073
   14002a06c:	xor    eax,eax
   14002a06e:	jmp    0x14002a073
   14002a070:	mov    rax,r8
   14002a073:	add    rsp,0x18
   14002a077:	ret    
   14002a078:	sub    rsp,0x28
   14002a07c:	xor    r8d,r8d
   14002a07f:	mov    r9,rdx
   14002a082:	mov    r10,rcx
   14002a085:	cmp    DWORD PTR [rip+0x26ba0],r8d        # 0x140050c2c
   14002a08c:	jne    0x14002a0f3
   14002a08e:	test   rcx,rcx
   14002a091:	jne    0x14002a0ad
   14002a093:	call   0x140025380
   14002a098:	mov    DWORD PTR [rax],0x16
   14002a09e:	call   0x140024554
   14002a0a3:	mov    eax,0x7fffffff
   14002a0a8:	add    rsp,0x28
   14002a0ac:	ret    
   14002a0ad:	test   rdx,rdx
   14002a0b0:	je     0x14002a093
   14002a0b2:	sub    r10,rdx
   14002a0b5:	movzx  edx,WORD PTR [r10+r9*1]
   14002a0ba:	lea    eax,[rdx-0x41]
   14002a0bd:	cmp    ax,0x19
   14002a0c1:	ja     0x14002a0c7
   14002a0c3:	add    dx,0x20
   14002a0c7:	movzx  ecx,WORD PTR [r9]
   14002a0cb:	lea    eax,[rcx-0x41]
   14002a0ce:	cmp    ax,0x19
   14002a0d2:	ja     0x14002a0d8
   14002a0d4:	add    cx,0x20
   14002a0d8:	add    r9,0x2
   14002a0dc:	test   dx,dx
   14002a0df:	je     0x14002a0e6
   14002a0e1:	cmp    dx,cx
   14002a0e4:	je     0x14002a0b5
   14002a0e6:	movzx  ecx,cx
   14002a0e9:	movzx  eax,dx
   14002a0ec:	sub    eax,ecx
   14002a0ee:	add    rsp,0x28
   14002a0f2:	ret    
   14002a0f3:	add    rsp,0x28
   14002a0f7:	jmp    0x14002a0fc
   14002a0fc:	mov    rax,rsp
   14002a0ff:	mov    QWORD PTR [rax+0x8],rbx
   14002a103:	mov    QWORD PTR [rax+0x10],rbp
   14002a107:	mov    QWORD PTR [rax+0x18],rsi
   14002a10b:	push   rdi
   14002a10c:	sub    rsp,0x40
   14002a110:	mov    rsi,rcx
   14002a113:	mov    rdi,rdx
   14002a116:	lea    rcx,[rax-0x28]
   14002a11a:	mov    rdx,r8
   14002a11d:	call   0x1400246b8
   14002a122:	xor    ebp,ebp
   14002a124:	test   rsi,rsi
   14002a127:	je     0x14002a12e
   14002a129:	test   rdi,rdi
   14002a12c:	jne    0x14002a145
   14002a12e:	call   0x140025380
   14002a133:	mov    DWORD PTR [rax],0x16
   14002a139:	call   0x140024554
   14002a13e:	mov    eax,0x7fffffff
   14002a143:	jmp    0x14002a1c1
   14002a145:	mov    rax,QWORD PTR [rsp+0x20]
   14002a14a:	cmp    QWORD PTR [rax+0x138],rbp
   14002a151:	jne    0x14002a187
   14002a153:	sub    rsi,rdi
   14002a156:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002a15a:	lea    eax,[rbx-0x41]
   14002a15d:	cmp    ax,0x19
   14002a161:	ja     0x14002a167
   14002a163:	add    bx,0x20
   14002a167:	movzx  ecx,WORD PTR [rdi]
   14002a16a:	lea    eax,[rcx-0x41]
   14002a16d:	cmp    ax,0x19
   14002a171:	ja     0x14002a177
   14002a173:	add    cx,0x20
   14002a177:	add    rdi,0x2
   14002a17b:	test   bx,bx
   14002a17e:	je     0x14002a1b9
   14002a180:	cmp    bx,cx
   14002a183:	je     0x14002a156
   14002a185:	jmp    0x14002a1b9
   14002a187:	movzx  ecx,WORD PTR [rsi]
   14002a18a:	lea    rdx,[rsp+0x20]
   14002a18f:	call   0x14002a598
   14002a194:	movzx  ecx,WORD PTR [rdi]
   14002a197:	lea    rdx,[rsp+0x20]
   14002a19c:	movzx  ebx,ax
   14002a19f:	lea    rsi,[rsi+0x2]
   14002a1a3:	call   0x14002a598
   14002a1a8:	lea    rdi,[rdi+0x2]
   14002a1ac:	movzx  ecx,ax
   14002a1af:	test   bx,bx
   14002a1b2:	je     0x14002a1b9
   14002a1b4:	cmp    bx,ax
   14002a1b7:	je     0x14002a187
   14002a1b9:	movzx  ecx,cx
   14002a1bc:	movzx  eax,bx
   14002a1bf:	sub    eax,ecx
   14002a1c1:	cmp    BYTE PTR [rsp+0x38],bpl
   14002a1c6:	je     0x14002a1d4
   14002a1c8:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a1cd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a1d4:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a1d9:	mov    rbp,QWORD PTR [rsp+0x58]
   14002a1de:	mov    rsi,QWORD PTR [rsp+0x60]
   14002a1e3:	add    rsp,0x40
   14002a1e7:	pop    rdi
   14002a1e8:	ret    
   14002a1e9:	int3   
   14002a1ea:	int3   
   14002a1eb:	int3   
   14002a1ec:	sub    rsp,0x28
   14002a1f0:	xor    r9d,r9d
   14002a1f3:	mov    r11,r8
   14002a1f6:	mov    r10,rcx
   14002a1f9:	cmp    DWORD PTR [rip+0x26a2c],r9d        # 0x140050c2c
   14002a200:	jne    0x14002a27a
   14002a202:	test   r8,r8
   14002a205:	je     0x14002a272
   14002a207:	test   rcx,rcx
   14002a20a:	jne    0x14002a226
   14002a20c:	call   0x140025380
   14002a211:	mov    DWORD PTR [rax],0x16
   14002a217:	call   0x140024554
   14002a21c:	mov    eax,0x7fffffff
   14002a221:	add    rsp,0x28
   14002a225:	ret    
   14002a226:	test   rdx,rdx
   14002a229:	je     0x14002a20c
   14002a22b:	sub    r10,rdx
   14002a22e:	movzx  ecx,WORD PTR [r10+rdx*1]
   14002a233:	lea    eax,[rcx-0x41]
   14002a236:	cmp    ax,0x19
   14002a23a:	ja     0x14002a240
   14002a23c:	add    cx,0x20
   14002a240:	movzx  r8d,WORD PTR [rdx]
   14002a244:	lea    eax,[r8-0x41]
   14002a248:	cmp    ax,0x19
   14002a24c:	ja     0x14002a253
   14002a24e:	add    r8w,0x20
   14002a253:	add    rdx,0x2
   14002a257:	dec    r11
   14002a25a:	je     0x14002a267
   14002a25c:	test   cx,cx
   14002a25f:	je     0x14002a267
   14002a261:	cmp    cx,r8w
   14002a265:	je     0x14002a22e
   14002a267:	movzx  eax,r8w
   14002a26b:	movzx  r9d,cx
   14002a26f:	sub    r9d,eax
   14002a272:	mov    eax,r9d
   14002a275:	add    rsp,0x28
   14002a279:	ret    
   14002a27a:	add    rsp,0x28
   14002a27e:	jmp    0x14002a284
   14002a283:	int3   
   14002a284:	mov    rax,rsp
   14002a287:	mov    QWORD PTR [rax+0x8],rbx
   14002a28b:	mov    QWORD PTR [rax+0x10],rbp
   14002a28f:	mov    QWORD PTR [rax+0x18],rsi
   14002a293:	mov    QWORD PTR [rax+0x20],rdi
   14002a297:	push   r14
   14002a299:	sub    rsp,0x40
   14002a29d:	xor    r14d,r14d
   14002a2a0:	mov    rbp,r8
   14002a2a3:	mov    rdi,rdx
   14002a2a6:	mov    rsi,rcx
   14002a2a9:	mov    eax,r14d
   14002a2ac:	test   r8,r8
   14002a2af:	je     0x14002a37f
   14002a2b5:	test   rcx,rcx
   14002a2b8:	jne    0x14002a2d4
   14002a2ba:	call   0x140025380
   14002a2bf:	mov    DWORD PTR [rax],0x16
   14002a2c5:	call   0x140024554
   14002a2ca:	mov    eax,0x7fffffff
   14002a2cf:	jmp    0x14002a37f
   14002a2d4:	test   rdx,rdx
   14002a2d7:	je     0x14002a2ba
   14002a2d9:	lea    rcx,[rsp+0x20]
   14002a2de:	mov    rdx,r9
   14002a2e1:	call   0x1400246b8
   14002a2e6:	mov    rax,QWORD PTR [rsp+0x20]
   14002a2eb:	cmp    QWORD PTR [rax+0x138],r14
   14002a2f2:	jne    0x14002a32d
   14002a2f4:	sub    rsi,rdi
   14002a2f7:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002a2fb:	lea    eax,[rbx-0x41]
   14002a2fe:	cmp    ax,0x19
   14002a302:	ja     0x14002a308
   14002a304:	add    bx,0x20
   14002a308:	movzx  ecx,WORD PTR [rdi]
   14002a30b:	lea    eax,[rcx-0x41]
   14002a30e:	cmp    ax,0x19
   14002a312:	ja     0x14002a318
   14002a314:	add    cx,0x20
   14002a318:	add    rdi,0x2
   14002a31c:	dec    rbp
   14002a31f:	je     0x14002a364
   14002a321:	test   bx,bx
   14002a324:	je     0x14002a364
   14002a326:	cmp    bx,cx
   14002a329:	je     0x14002a2f7
   14002a32b:	jmp    0x14002a364
   14002a32d:	movzx  ecx,WORD PTR [rsi]
   14002a330:	lea    rdx,[rsp+0x20]
   14002a335:	call   0x14002a598
   14002a33a:	movzx  ecx,WORD PTR [rdi]
   14002a33d:	lea    rdx,[rsp+0x20]
   14002a342:	movzx  ebx,ax
   14002a345:	call   0x14002a598
   14002a34a:	lea    rsi,[rsi+0x2]
   14002a34e:	lea    rdi,[rdi+0x2]
   14002a352:	movzx  ecx,ax
   14002a355:	dec    rbp
   14002a358:	je     0x14002a364
   14002a35a:	test   bx,bx
   14002a35d:	je     0x14002a364
   14002a35f:	cmp    bx,ax
   14002a362:	je     0x14002a32d
   14002a364:	movzx  ecx,cx
   14002a367:	movzx  eax,bx
   14002a36a:	sub    eax,ecx
   14002a36c:	cmp    BYTE PTR [rsp+0x38],r14b
   14002a371:	je     0x14002a37f
   14002a373:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a378:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a37f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a384:	mov    rbp,QWORD PTR [rsp+0x58]
   14002a389:	mov    rsi,QWORD PTR [rsp+0x60]
   14002a38e:	mov    rdi,QWORD PTR [rsp+0x68]
   14002a393:	add    rsp,0x40
   14002a397:	pop    r14
   14002a399:	ret    
   14002a39a:	int3   
   14002a39b:	int3   
   14002a39c:	mov    QWORD PTR [rsp+0x18],rbx
   14002a3a1:	mov    QWORD PTR [rsp+0x8],rcx
   14002a3a6:	push   rbp
   14002a3a7:	push   rsi
   14002a3a8:	push   rdi
   14002a3a9:	push   r12
   14002a3ab:	push   r13
   14002a3ad:	push   r14
   14002a3af:	push   r15
   14002a3b1:	sub    rsp,0x20
   14002a3b5:	mov    ebp,r9d
   14002a3b8:	mov    r14d,r8d
   14002a3bb:	mov    r15,rdx
   14002a3be:	test   rdx,rdx
   14002a3c1:	je     0x14002a3c6
   14002a3c3:	mov    QWORD PTR [rdx],rcx
   14002a3c6:	test   rcx,rcx
   14002a3c9:	jne    0x14002a3e2
   14002a3cb:	call   0x140025380
   14002a3d0:	mov    DWORD PTR [rax],0x16
   14002a3d6:	call   0x140024554
   14002a3db:	xor    eax,eax
   14002a3dd:	jmp    0x14002a56f
   14002a3e2:	test   r8d,r8d
   14002a3e5:	je     0x14002a3f0
   14002a3e7:	lea    eax,[r8-0x2]
   14002a3eb:	cmp    eax,0x22
   14002a3ee:	ja     0x14002a3cb
   14002a3f0:	movzx  esi,WORD PTR [rcx]
   14002a3f3:	xor    edi,edi
   14002a3f5:	lea    rbx,[rcx+0x2]
   14002a3f9:	lea    r13d,[rdi+0x8]
   14002a3fd:	jmp    0x14002a406
   14002a3ff:	movzx  esi,WORD PTR [rbx]
   14002a402:	add    rbx,0x2
   14002a406:	mov    edx,r13d
   14002a409:	movzx  ecx,si
   14002a40c:	call   0x140029a24
   14002a411:	test   eax,eax
   14002a413:	jne    0x14002a3ff
   14002a415:	cmp    si,0x2d
   14002a419:	jne    0x14002a420
   14002a41b:	or     ebp,0x2
   14002a41e:	jmp    0x14002a426
   14002a420:	cmp    si,0x2b
   14002a424:	jne    0x14002a42d
   14002a426:	movzx  esi,WORD PTR [rbx]
   14002a429:	add    rbx,0x2
   14002a42d:	mov    r13d,0xffdf
   14002a433:	test   r14d,r14d
   14002a436:	jne    0x14002a467
   14002a438:	movzx  ecx,si
   14002a43b:	call   0x14002a664
   14002a440:	test   eax,eax
   14002a442:	je     0x14002a44c
   14002a444:	mov    r14d,0xa
   14002a44a:	jmp    0x14002a48e
   14002a44c:	movzx  eax,WORD PTR [rbx]
   14002a44f:	sub    ax,0x58
   14002a453:	test   r13w,ax
   14002a457:	je     0x14002a461
   14002a459:	mov    r14d,0x8
   14002a45f:	jmp    0x14002a48e
   14002a461:	mov    r14d,0x10
   14002a467:	cmp    r14d,0x10
   14002a46b:	jne    0x14002a48e
   14002a46d:	movzx  ecx,si
   14002a470:	call   0x14002a664
   14002a475:	test   eax,eax
   14002a477:	jne    0x14002a48e
   14002a479:	movzx  eax,WORD PTR [rbx]
   14002a47c:	sub    ax,0x58
   14002a480:	test   r13w,ax
   14002a484:	jne    0x14002a48e
   14002a486:	movzx  esi,WORD PTR [rbx+0x2]
   14002a48a:	add    rbx,0x4
   14002a48e:	xor    edx,edx
   14002a490:	or     eax,0xffffffff
   14002a493:	div    r14d
   14002a496:	mov    r13d,eax
   14002a499:	mov    r12d,edx
   14002a49c:	movzx  ecx,si
   14002a49f:	call   0x14002a664
   14002a4a4:	cmp    eax,0xffffffff
   14002a4a7:	jne    0x14002a4cd
   14002a4a9:	lea    ecx,[rsi-0x41]
   14002a4ac:	cmp    cx,0x19
   14002a4b0:	jbe    0x14002a4bb
   14002a4b2:	lea    eax,[rsi-0x61]
   14002a4b5:	cmp    ax,0x19
   14002a4b9:	ja     0x14002a4e9
   14002a4bb:	lea    eax,[rsi-0x61]
   14002a4be:	cmp    ax,0x19
   14002a4c2:	movzx  eax,si
   14002a4c5:	ja     0x14002a4ca
   14002a4c7:	sub    eax,0x20
   14002a4ca:	add    eax,0xffffffc9
   14002a4cd:	cmp    eax,r14d
   14002a4d0:	jae    0x14002a4e9
   14002a4d2:	or     ebp,0x8
   14002a4d5:	cmp    edi,r13d
   14002a4d8:	jb     0x14002a503
   14002a4da:	jne    0x14002a4e1
   14002a4dc:	cmp    eax,r12d
   14002a4df:	jbe    0x14002a503
   14002a4e1:	or     ebp,0x4
   14002a4e4:	test   r15,r15
   14002a4e7:	jne    0x14002a509
   14002a4e9:	mov    r12,QWORD PTR [rsp+0x60]
   14002a4ee:	sub    rbx,0x2
   14002a4f2:	test   bpl,0x8
   14002a4f6:	jne    0x14002a512
   14002a4f8:	test   r15,r15
   14002a4fb:	cmovne rbx,r12
   14002a4ff:	xor    edi,edi
   14002a501:	jmp    0x14002a55d
   14002a503:	imul   edi,r14d
   14002a507:	add    edi,eax
   14002a509:	movzx  esi,WORD PTR [rbx]
   14002a50c:	add    rbx,0x2
   14002a510:	jmp    0x14002a49c
   14002a512:	mov    esi,0x7fffffff
   14002a517:	test   bpl,0x4
   14002a51b:	jne    0x14002a53a
   14002a51d:	test   bpl,0x1
   14002a521:	jne    0x14002a55d
   14002a523:	mov    eax,ebp
   14002a525:	and    eax,0x2
   14002a528:	je     0x14002a532
   14002a52a:	cmp    edi,0x80000000
   14002a530:	ja     0x14002a53a
   14002a532:	test   eax,eax
   14002a534:	jne    0x14002a55d
   14002a536:	cmp    edi,esi
   14002a538:	jbe    0x14002a55d
   14002a53a:	call   0x140025380
   14002a53f:	mov    DWORD PTR [rax],0x22
   14002a545:	test   bpl,0x1
   14002a549:	je     0x14002a550
   14002a54b:	or     edi,0xffffffff
   14002a54e:	jmp    0x14002a55d
   14002a550:	mov    al,bpl
   14002a553:	and    al,0x2
   14002a555:	neg    al
   14002a557:	sbb    edi,edi
   14002a559:	neg    edi
   14002a55b:	add    edi,esi
   14002a55d:	test   r15,r15
   14002a560:	je     0x14002a565
   14002a562:	mov    QWORD PTR [r15],rbx
   14002a565:	test   bpl,0x2
   14002a569:	je     0x14002a56d
   14002a56b:	neg    edi
   14002a56d:	mov    eax,edi
   14002a56f:	mov    rbx,QWORD PTR [rsp+0x70]
   14002a574:	add    rsp,0x20
   14002a578:	pop    r15
   14002a57a:	pop    r14
   14002a57c:	pop    r13
   14002a57e:	pop    r12
   14002a580:	pop    rdi
   14002a581:	pop    rsi
   14002a582:	pop    rbp
   14002a583:	ret    
   14002a584:	xor    r9d,r9d
   14002a587:	jmp    0x14002a39c
   14002a58c:	mov    r9d,0x1
   14002a592:	jmp    0x14002a39c
   14002a597:	int3   
   14002a598:	mov    QWORD PTR [rsp+0x10],rbx
   14002a59d:	mov    WORD PTR [rsp+0x8],cx
   14002a5a2:	push   rbp
   14002a5a3:	mov    rbp,rsp
   14002a5a6:	sub    rsp,0x50
   14002a5aa:	mov    eax,0xffff
   14002a5af:	cmp    cx,ax
   14002a5b2:	je     0x14002a657
   14002a5b8:	lea    rcx,[rbp-0x20]
   14002a5bc:	call   0x1400246b8
   14002a5c1:	mov    rbx,QWORD PTR [rbp-0x20]
   14002a5c5:	mov    rax,QWORD PTR [rbx+0x138]
   14002a5cc:	test   rax,rax
   14002a5cf:	jne    0x14002a5e4
   14002a5d1:	movzx  edx,WORD PTR [rbp+0x10]
   14002a5d5:	lea    eax,[rdx-0x41]
   14002a5d8:	cmp    ax,0x19
   14002a5dc:	ja     0x14002a643
   14002a5de:	add    dx,0x20
   14002a5e2:	jmp    0x14002a643
   14002a5e4:	movzx  ecx,WORD PTR [rbp+0x10]
   14002a5e8:	mov    edx,0x100
   14002a5ed:	cmp    cx,dx
   14002a5f0:	jae    0x14002a617
   14002a5f2:	mov    edx,0x1
   14002a5f7:	call   0x140029a24
   14002a5fc:	test   eax,eax
   14002a5fe:	jne    0x14002a606
   14002a600:	movzx  edx,WORD PTR [rbp+0x10]
   14002a604:	jmp    0x14002a643
   14002a606:	movzx  ecx,WORD PTR [rbp+0x10]
   14002a60a:	mov    rax,QWORD PTR [rbx+0x110]
   14002a611:	movzx  edx,BYTE PTR [rax+rcx*1]
   14002a615:	jmp    0x14002a643
   14002a617:	lea    rcx,[rbp+0x20]
   14002a61b:	mov    r9d,0x1
   14002a621:	lea    r8,[rbp+0x10]
   14002a625:	mov    DWORD PTR [rsp+0x28],r9d
   14002a62a:	mov    QWORD PTR [rsp+0x20],rcx
   14002a62f:	mov    rcx,rax
   14002a632:	call   0x14002a7fc
   14002a637:	movzx  edx,WORD PTR [rbp+0x10]
   14002a63b:	test   eax,eax
   14002a63d:	je     0x14002a643
   14002a63f:	movzx  edx,WORD PTR [rbp+0x20]
   14002a643:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a647:	je     0x14002a654
   14002a649:	mov    rcx,QWORD PTR [rbp-0x10]
   14002a64d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a654:	movzx  eax,dx
   14002a657:	mov    rbx,QWORD PTR [rsp+0x68]
   14002a65c:	add    rsp,0x50
   14002a660:	pop    rbp
   14002a661:	ret    
   14002a662:	int3   
   14002a663:	int3   
   14002a664:	mov    edx,0x30
   14002a669:	cmp    cx,dx
   14002a66c:	jb     0x14002a7f5
   14002a672:	cmp    cx,0x3a
   14002a676:	jae    0x14002a67e
   14002a678:	movzx  eax,cx
   14002a67b:	sub    eax,edx
   14002a67d:	ret    
   14002a67e:	mov    edx,0xff10
   14002a683:	cmp    cx,dx
   14002a686:	jae    0x14002a7e7
   14002a68c:	mov    edx,0x660
   14002a691:	cmp    cx,dx
   14002a694:	jb     0x14002a7f5
   14002a69a:	lea    eax,[rdx+0xa]
   14002a69d:	cmp    cx,ax
   14002a6a0:	jb     0x14002a678
   14002a6a2:	mov    edx,0x6f0
   14002a6a7:	cmp    cx,dx
   14002a6aa:	jb     0x14002a7f5
   14002a6b0:	lea    eax,[rdx+0xa]
   14002a6b3:	cmp    cx,ax
   14002a6b6:	jb     0x14002a678
   14002a6b8:	mov    edx,0x966
   14002a6bd:	cmp    cx,dx
   14002a6c0:	jb     0x14002a7f5
   14002a6c6:	lea    eax,[rdx+0xa]
   14002a6c9:	cmp    cx,ax
   14002a6cc:	jb     0x14002a678
   14002a6ce:	lea    edx,[rax+0x76]
   14002a6d1:	cmp    cx,dx
   14002a6d4:	jb     0x14002a7f5
   14002a6da:	lea    eax,[rdx+0xa]
   14002a6dd:	cmp    cx,ax
   14002a6e0:	jb     0x14002a678
   14002a6e2:	lea    edx,[rax+0x76]
   14002a6e5:	cmp    cx,dx
   14002a6e8:	jb     0x14002a7f5
   14002a6ee:	lea    eax,[rdx+0xa]
   14002a6f1:	cmp    cx,ax
   14002a6f4:	jb     0x14002a678
   14002a6f6:	lea    edx,[rax+0x76]
   14002a6f9:	cmp    cx,dx
   14002a6fc:	jb     0x14002a7f5
   14002a702:	lea    eax,[rdx+0xa]
   14002a705:	cmp    cx,ax
   14002a708:	jb     0x14002a678
   14002a70e:	lea    edx,[rax+0x76]
   14002a711:	cmp    cx,dx
   14002a714:	jb     0x14002a7f5
   14002a71a:	lea    eax,[rdx+0xa]
   14002a71d:	cmp    cx,ax
   14002a720:	jb     0x14002a678
   14002a726:	mov    edx,0xc66
   14002a72b:	cmp    cx,dx
   14002a72e:	jb     0x14002a7f5
   14002a734:	lea    eax,[rdx+0xa]
   14002a737:	cmp    cx,ax
   14002a73a:	jb     0x14002a678
   14002a740:	lea    edx,[rax+0x76]
   14002a743:	cmp    cx,dx
   14002a746:	jb     0x14002a7f5
   14002a74c:	lea    eax,[rdx+0xa]
   14002a74f:	cmp    cx,ax
   14002a752:	jb     0x14002a678
   14002a758:	lea    edx,[rax+0x76]
   14002a75b:	cmp    cx,dx
   14002a75e:	jb     0x14002a7f5
   14002a764:	lea    eax,[rdx+0xa]
   14002a767:	cmp    cx,ax
   14002a76a:	jb     0x14002a678
   14002a770:	mov    edx,0xe50
   14002a775:	cmp    cx,dx
   14002a778:	jb     0x14002a7f5
   14002a77a:	lea    eax,[rdx+0xa]
   14002a77d:	cmp    cx,ax
   14002a780:	jb     0x14002a678
   14002a786:	lea    edx,[rax+0x76]
   14002a789:	cmp    cx,dx
   14002a78c:	jb     0x14002a7f5
   14002a78e:	lea    eax,[rdx+0xa]
   14002a791:	cmp    cx,ax
   14002a794:	jb     0x14002a678
   14002a79a:	lea    edx,[rax+0x46]
   14002a79d:	cmp    cx,dx
   14002a7a0:	jb     0x14002a7f5
   14002a7a2:	lea    eax,[rdx+0xa]
   14002a7a5:	cmp    cx,ax
   14002a7a8:	jb     0x14002a678
   14002a7ae:	mov    edx,0x1040
   14002a7b3:	cmp    cx,dx
   14002a7b6:	jb     0x14002a7f5
   14002a7b8:	lea    eax,[rdx+0xa]
   14002a7bb:	cmp    cx,ax
   14002a7be:	jb     0x14002a678
   14002a7c4:	mov    edx,0x17e0
   14002a7c9:	cmp    cx,dx
   14002a7cc:	jb     0x14002a7f5
   14002a7ce:	lea    eax,[rdx+0xa]
   14002a7d1:	cmp    cx,ax
   14002a7d4:	jb     0x14002a678
   14002a7da:	lea    edx,[rax+0x26]
   14002a7dd:	cmp    cx,dx
   14002a7e0:	jb     0x14002a7f5
   14002a7e2:	lea    eax,[rdx+0xa]
   14002a7e5:	jmp    0x14002a7ec
   14002a7e7:	mov    eax,0xff1a
   14002a7ec:	cmp    cx,ax
   14002a7ef:	jb     0x14002a678
   14002a7f5:	or     eax,0xffffffff
   14002a7f8:	ret    
   14002a7f9:	int3   
   14002a7fa:	int3   
   14002a7fb:	int3   
   14002a7fc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a801:	mov    QWORD PTR [rsp+0x10],rsi
   14002a806:	push   rdi
   14002a807:	sub    rsp,0x30
   14002a80b:	movsxd rax,r9d
   14002a80e:	mov    rbx,r8
   14002a811:	mov    edi,edx
   14002a813:	mov    rsi,rcx
   14002a816:	test   r9d,r9d
   14002a819:	jle    0x14002a826
   14002a81b:	mov    rdx,rax
   14002a81e:	mov    rcx,rbx
   14002a821:	call   0x140029e88
   14002a826:	mov    r8,rbx
   14002a829:	mov    edx,edi
   14002a82b:	mov    r9d,eax
   14002a82e:	mov    rcx,rsi
   14002a831:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a836:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a83b:	add    rsp,0x30
   14002a83f:	pop    rdi
   14002a840:	jmp    0x140028ce8
   14002a845:	int3   
   14002a846:	int3   
   14002a847:	int3   
   14002a848:	cmp    QWORD PTR [rip+0x11908],0x0        # 0x14003c158
   14002a850:	lea    rax,[rip+0x118f9]        # 0x14003c150
   14002a857:	je     0x14002a868
   14002a859:	cmp    DWORD PTR [rax],ecx
   14002a85b:	je     0x14002a86b
   14002a85d:	add    rax,0x10
   14002a861:	cmp    QWORD PTR [rax+0x8],0x0
   14002a866:	jne    0x14002a859
   14002a868:	xor    eax,eax
   14002a86a:	ret    
   14002a86b:	mov    rax,QWORD PTR [rax+0x8]
   14002a86f:	ret    
   14002a870:	cmp    QWORD PTR [rip+0x11430],0x0        # 0x14003bca8
   14002a878:	lea    rax,[rip+0x11421]        # 0x14003bca0
   14002a87f:	je     0x14002a890
   14002a881:	cmp    DWORD PTR [rax],ecx
   14002a883:	je     0x14002a893
   14002a885:	add    rax,0x10
   14002a889:	cmp    QWORD PTR [rax+0x8],0x0
   14002a88e:	jne    0x14002a881
   14002a890:	xor    eax,eax
   14002a892:	ret    
   14002a893:	mov    rax,QWORD PTR [rax+0x8]
   14002a897:	ret    
   14002a898:	rex push rbx
   14002a89a:	sub    rsp,0x20
   14002a89e:	mov    rbx,rcx
   14002a8a1:	call   0x140026458
   14002a8a6:	lea    rax,[rip+0x127fb]        # 0x14003d0a8
   14002a8ad:	mov    QWORD PTR [rbx],rax
   14002a8b0:	mov    rax,rbx
   14002a8b3:	add    rsp,0x20
   14002a8b7:	pop    rbx
   14002a8b8:	ret    
   14002a8b9:	int3   
   14002a8ba:	int3   
   14002a8bb:	int3   
   14002a8bc:	rex push rbx
   14002a8be:	sub    rsp,0x20
   14002a8c2:	mov    rbx,rcx
   14002a8c5:	call   0x140026458
   14002a8ca:	lea    rax,[rip+0x127ef]        # 0x14003d0c0
   14002a8d1:	mov    QWORD PTR [rbx],rax
   14002a8d4:	mov    rax,rbx
   14002a8d7:	add    rsp,0x20
   14002a8db:	pop    rbx
   14002a8dc:	ret    
   14002a8dd:	int3   
   14002a8de:	int3   
   14002a8df:	int3   
   14002a8e0:	jmp    0x140026484
   14002a8e5:	int3   
   14002a8e6:	int3   
   14002a8e7:	int3   
   14002a8e8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a8ed:	push   rdi
   14002a8ee:	sub    rsp,0x20
   14002a8f2:	mov    ebx,edx
   14002a8f4:	mov    rdi,rcx
   14002a8f7:	call   0x140026484
   14002a8fc:	test   bl,0x1
   14002a8ff:	je     0x14002a909
   14002a901:	mov    rcx,rdi
   14002a904:	call   0x140020e30
   14002a909:	mov    rax,rdi
   14002a90c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a911:	add    rsp,0x20
   14002a915:	pop    rdi
   14002a916:	ret    
   14002a917:	int3   
   14002a918:	sub    rsp,0x48
   14002a91c:	lea    rax,[rip+0xeeed]        # 0x140039810
   14002a923:	lea    rdx,[rsp+0x50]
   14002a928:	lea    rcx,[rsp+0x20]
   14002a92d:	mov    r8d,0x1
   14002a933:	mov    QWORD PTR [rsp+0x50],rax
   14002a938:	call   0x14002643c
   14002a93d:	lea    rax,[rip+0xeebc]        # 0x140039800
   14002a944:	lea    rdx,[rip+0x1fe3d]        # 0x14004a788
   14002a94b:	lea    rcx,[rsp+0x20]
   14002a950:	mov    QWORD PTR [rsp+0x20],rax
   14002a955:	call   0x1400265e8
   14002a95a:	int3   
   14002a95b:	int3   
   14002a95c:	sub    rsp,0x48
   14002a960:	mov    QWORD PTR [rsp+0x50],rcx
   14002a965:	lea    rdx,[rsp+0x50]
   14002a96a:	lea    rcx,[rsp+0x20]
   14002a96f:	call   0x14002640c
   14002a974:	lea    rax,[rip+0x1272d]        # 0x14003d0a8
   14002a97b:	lea    rdx,[rip+0x1fe66]        # 0x14004a7e8
   14002a982:	lea    rcx,[rsp+0x20]
   14002a987:	mov    QWORD PTR [rsp+0x20],rax
   14002a98c:	call   0x1400265e8
   14002a991:	int3   
   14002a992:	int3   
   14002a993:	int3   
   14002a994:	sub    rsp,0x48
   14002a998:	mov    QWORD PTR [rsp+0x50],rcx
   14002a99d:	lea    rdx,[rsp+0x50]
   14002a9a2:	lea    rcx,[rsp+0x20]
   14002a9a7:	call   0x14002640c
   14002a9ac:	lea    rax,[rip+0x1270d]        # 0x14003d0c0
   14002a9b3:	lea    rdx,[rip+0x1fe96]        # 0x14004a850
   14002a9ba:	lea    rcx,[rsp+0x20]
   14002a9bf:	mov    QWORD PTR [rsp+0x20],rax
   14002a9c4:	call   0x1400265e8
   14002a9c9:	int3   
   14002a9ca:	int3   
   14002a9cb:	int3   
   14002a9cc:	int3   
   14002a9cd:	int3   
   14002a9ce:	int3   
   14002a9cf:	int3   
   14002a9d0:	jmp    QWORD PTR [rip+0xe89a]        # 0x140039270
   14002a9d6:	jmp    QWORD PTR [rip+0xe8ac]        # 0x140039288
   14002a9dc:	mov    QWORD PTR [rsp+0x10],rbx
   14002a9e1:	mov    QWORD PTR [rsp+0x18],rbp
   14002a9e6:	push   rsi
   14002a9e7:	push   rdi
   14002a9e8:	push   r12
   14002a9ea:	push   r14
   14002a9ec:	push   r15
   14002a9ee:	sub    rsp,0x20
   14002a9f2:	mov    edi,DWORD PTR [r8+0xc]
   14002a9f6:	mov    r12,rcx
   14002a9f9:	mov    rcx,r8
   14002a9fc:	mov    rsi,r9
   14002a9ff:	mov    r14,r8
   14002aa02:	mov    r15,rdx
   14002aa05:	call   0x14002d9bc
   14002aa0a:	mov    r10,QWORD PTR [r12]
   14002aa0e:	mov    QWORD PTR [rsi],r10
   14002aa11:	mov    ebp,eax
   14002aa13:	test   edi,edi
   14002aa15:	je     0x14002aa8b
   14002aa17:	movsxd rax,DWORD PTR [r14+0x10]
   14002aa1b:	dec    edi
   14002aa1d:	lea    rdx,[rdi+rdi*4]
   14002aa21:	lea    rbx,[rax+rdx*4]
   14002aa25:	add    rbx,QWORD PTR [r15+0x8]
   14002aa29:	cmp    ebp,DWORD PTR [rbx+0x4]
   14002aa2c:	jle    0x14002aa13
   14002aa2e:	cmp    ebp,DWORD PTR [rbx+0x8]
   14002aa31:	jg     0x14002aa13
   14002aa33:	mov    rcx,QWORD PTR [r15]
   14002aa36:	lea    rdx,[rsp+0x50]
   14002aa3b:	xor    r8d,r8d
   14002aa3e:	call   QWORD PTR [rip+0xe894]        # 0x1400392d8
   14002aa44:	movsxd r8,DWORD PTR [rbx+0x10]
   14002aa48:	mov    r9d,DWORD PTR [rbx+0xc]
   14002aa4c:	add    r8,QWORD PTR [rsp+0x50]
   14002aa51:	mov    r10d,DWORD PTR [rax]
   14002aa54:	xor    ecx,ecx
   14002aa56:	test   r9d,r9d
   14002aa59:	je     0x14002aa72
   14002aa5b:	lea    rdx,[r8+0xc]
   14002aa5f:	movsxd rax,DWORD PTR [rdx]
   14002aa62:	cmp    rax,r10
   14002aa65:	je     0x14002aa72
   14002aa67:	inc    ecx
   14002aa69:	add    rdx,0x14
   14002aa6d:	cmp    ecx,r9d
   14002aa70:	jb     0x14002aa5f
   14002aa72:	cmp    ecx,r9d
   14002aa75:	jae    0x14002aa13
   14002aa77:	mov    rax,QWORD PTR [r12]
   14002aa7b:	lea    rcx,[rcx+rcx*4]
   14002aa7f:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14002aa84:	mov    rcx,QWORD PTR [rcx+rax*1]
   14002aa88:	mov    QWORD PTR [rsi],rcx
   14002aa8b:	mov    rbx,QWORD PTR [rsp+0x58]
   14002aa90:	mov    rbp,QWORD PTR [rsp+0x60]
   14002aa95:	mov    rax,rsi
   14002aa98:	add    rsp,0x20
   14002aa9c:	pop    r15
   14002aa9e:	pop    r14
   14002aaa0:	pop    r12
   14002aaa2:	pop    rdi
   14002aaa3:	pop    rsi
   14002aaa4:	ret    
   14002aaa5:	int3   
   14002aaa6:	int3   
   14002aaa7:	int3   
   14002aaa8:	mov    rax,rsp
   14002aaab:	mov    QWORD PTR [rax+0x8],rbx
   14002aaaf:	mov    QWORD PTR [rax+0x10],rbp
   14002aab3:	mov    QWORD PTR [rax+0x18],rsi
   14002aab7:	mov    QWORD PTR [rax+0x20],rdi
   14002aabb:	push   r12
   14002aabd:	push   r14
   14002aabf:	push   r15
   14002aac1:	sub    rsp,0x20
   14002aac5:	mov    edi,DWORD PTR [rdx+0xc]
   14002aac8:	mov    rbp,QWORD PTR [rsp+0x70]
   14002aacd:	mov    rbx,rdx
   14002aad0:	mov    rcx,rbx
   14002aad3:	mov    rdx,rbp
   14002aad6:	mov    r12d,r9d
   14002aad9:	xor    esi,esi
   14002aadb:	call   0x14002d9bc
   14002aae0:	mov    r14d,eax
   14002aae3:	test   edi,edi
   14002aae5:	jne    0x14002aaec
   14002aae7:	call   0x1400266c8
   14002aaec:	mov    r10,QWORD PTR [rsp+0x68]
   14002aaf1:	mov    r8,QWORD PTR [rsp+0x60]
   14002aaf6:	mov    edx,edi
   14002aaf8:	or     DWORD PTR [r10],0xffffffff
   14002aafc:	or     DWORD PTR [r8],0xffffffff
   14002ab00:	test   edi,edi
   14002ab02:	je     0x14002ab2e
   14002ab04:	movsxd r11,DWORD PTR [rbx+0x10]
   14002ab08:	mov    r15,QWORD PTR [rbp+0x8]
   14002ab0c:	lea    r9d,[rdx-0x1]
   14002ab10:	lea    rcx,[r9+r9*4]
   14002ab14:	lea    rax,[r15+rcx*4]
   14002ab18:	cmp    r14d,DWORD PTR [rax+r11*1+0x4]
   14002ab1d:	jle    0x14002ab26
   14002ab1f:	cmp    r14d,DWORD PTR [rax+r11*1+0x8]
   14002ab24:	jle    0x14002ab2e
   14002ab26:	mov    edx,r9d
   14002ab29:	test   r9d,r9d
   14002ab2c:	jne    0x14002ab0c
   14002ab2e:	test   edx,edx
   14002ab30:	je     0x14002ab45
   14002ab32:	lea    eax,[rdx-0x1]
   14002ab35:	lea    rdx,[rax+rax*4]
   14002ab39:	movsxd rax,DWORD PTR [rbx+0x10]
   14002ab3d:	lea    rsi,[rax+rdx*4]
   14002ab41:	add    rsi,QWORD PTR [rbp+0x8]
   14002ab45:	xor    edx,edx
   14002ab47:	test   edi,edi
   14002ab49:	je     0x14002abab
   14002ab4b:	xor    r9d,r9d
   14002ab4e:	movsxd rcx,DWORD PTR [rbx+0x10]
   14002ab52:	add    rcx,QWORD PTR [rbp+0x8]
   14002ab56:	add    rcx,r9
   14002ab59:	test   rsi,rsi
   14002ab5c:	je     0x14002ab6d
   14002ab5e:	mov    eax,DWORD PTR [rsi+0x4]
   14002ab61:	cmp    DWORD PTR [rcx],eax
   14002ab63:	jle    0x14002ab87
   14002ab65:	mov    eax,DWORD PTR [rsi+0x8]
   14002ab68:	cmp    DWORD PTR [rcx+0x4],eax
   14002ab6b:	jg     0x14002ab87
   14002ab6d:	cmp    r12d,DWORD PTR [rcx]
   14002ab70:	jl     0x14002ab87
   14002ab72:	cmp    r12d,DWORD PTR [rcx+0x4]
   14002ab76:	jg     0x14002ab87
   14002ab78:	cmp    DWORD PTR [r8],0xffffffff
   14002ab7c:	jne    0x14002ab81
   14002ab7e:	mov    DWORD PTR [r8],edx
   14002ab81:	lea    eax,[rdx+0x1]
   14002ab84:	mov    DWORD PTR [r10],eax
   14002ab87:	inc    edx
   14002ab89:	add    r9,0x14
   14002ab8d:	cmp    edx,edi
   14002ab8f:	jb     0x14002ab4e
   14002ab91:	mov    eax,DWORD PTR [r8]
   14002ab94:	cmp    eax,0xffffffff
   14002ab97:	je     0x14002abab
   14002ab99:	lea    rcx,[rax+rax*4]
   14002ab9d:	movsxd rax,DWORD PTR [rbx+0x10]
   14002aba1:	lea    rax,[rax+rcx*4]
   14002aba5:	add    rax,QWORD PTR [rbp+0x8]
   14002aba9:	jmp    0x14002abb5
   14002abab:	and    DWORD PTR [r8],0x0
   14002abaf:	and    DWORD PTR [r10],0x0
   14002abb3:	xor    eax,eax
   14002abb5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002abba:	mov    rbp,QWORD PTR [rsp+0x48]
   14002abbf:	mov    rsi,QWORD PTR [rsp+0x50]
   14002abc4:	mov    rdi,QWORD PTR [rsp+0x58]
   14002abc9:	add    rsp,0x20
   14002abcd:	pop    r15
   14002abcf:	pop    r14
   14002abd1:	pop    r12
   14002abd3:	ret    
   14002abd4:	mov    QWORD PTR [rsp+0x8],rbx
   14002abd9:	mov    QWORD PTR [rsp+0x10],rbp
   14002abde:	push   rsi
   14002abdf:	push   rdi
   14002abe0:	push   r14
   14002abe2:	sub    rsp,0x20
   14002abe6:	lea    r9,[rsp+0x50]
   14002abeb:	mov    rdi,r8
   14002abee:	mov    rbp,rdx
   14002abf1:	call   0x14002a9dc
   14002abf6:	mov    rdx,rbp
   14002abf9:	mov    rcx,rdi
   14002abfc:	mov    r14,rax
   14002abff:	call   0x14002d9bc
   14002ac04:	mov    ebx,DWORD PTR [rdi+0xc]
   14002ac07:	mov    esi,eax
   14002ac09:	jmp    0x14002ac32
   14002ac0b:	dec    ebx
   14002ac0d:	call   0x140021ed4
   14002ac12:	lea    rdx,[rbx+rbx*4]
   14002ac16:	mov    rax,QWORD PTR [rax+0x128]
   14002ac1d:	lea    rcx,[rax+rdx*4]
   14002ac21:	movsxd rax,DWORD PTR [rdi+0x10]
   14002ac25:	add    rcx,rax
   14002ac28:	cmp    esi,DWORD PTR [rcx+0x4]
   14002ac2b:	jle    0x14002ac32
   14002ac2d:	cmp    esi,DWORD PTR [rcx+0x8]
   14002ac30:	jle    0x14002ac38
   14002ac32:	test   ebx,ebx
   14002ac34:	jne    0x14002ac0b
   14002ac36:	xor    ecx,ecx
   14002ac38:	test   rcx,rcx
   14002ac3b:	jne    0x14002ac43
   14002ac3d:	or     r9d,0xffffffff
   14002ac41:	jmp    0x14002ac47
   14002ac43:	mov    r9d,DWORD PTR [rcx+0x4]
   14002ac47:	mov    r8,rdi
   14002ac4a:	mov    rdx,rbp
   14002ac4d:	mov    rcx,r14
   14002ac50:	call   0x14002d448
   14002ac55:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ac5a:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ac5f:	add    rsp,0x20
   14002ac63:	pop    r14
   14002ac65:	pop    rdi
   14002ac66:	pop    rsi
   14002ac67:	ret    
   14002ac68:	mov    QWORD PTR [rsp+0x8],rbx
   14002ac6d:	mov    QWORD PTR [rsp+0x10],rbp
   14002ac72:	mov    QWORD PTR [rsp+0x18],rsi
   14002ac77:	push   rdi
   14002ac78:	sub    rsp,0x40
   14002ac7c:	mov    rsi,r9
   14002ac7f:	mov    rbp,r8
   14002ac82:	mov    rbx,rdx
   14002ac85:	mov    rdi,rcx
   14002ac88:	call   0x140021ed4
   14002ac8d:	mov    QWORD PTR [rax+0x138],rbx
   14002ac94:	mov    rbx,QWORD PTR [rdi]
   14002ac97:	call   0x140021ed4
   14002ac9c:	mov    rdx,QWORD PTR [rbx+0x38]
   14002aca0:	mov    rcx,QWORD PTR [rsp+0x78]
   14002aca5:	mov    r9,QWORD PTR [rsp+0x70]
   14002acaa:	mov    DWORD PTR [rsp+0x38],0x1
   14002acb2:	mov    QWORD PTR [rax+0x130],rdx
   14002acb9:	xor    ebx,ebx
   14002acbb:	mov    QWORD PTR [rsp+0x30],rbx
   14002acc0:	mov    DWORD PTR [rsp+0x28],ebx
   14002acc4:	mov    QWORD PTR [rsp+0x20],rcx
   14002acc9:	mov    rcx,QWORD PTR [rdi]
   14002accc:	mov    r8,rsi
   14002accf:	mov    rdx,rbp
   14002acd2:	call   0x14002d5dc
   14002acd7:	call   0x140021ed4
   14002acdc:	mov    rcx,QWORD PTR [rsp+0x80]
   14002ace4:	mov    rbp,QWORD PTR [rsp+0x58]
   14002ace9:	mov    rsi,QWORD PTR [rsp+0x60]
   14002acee:	mov    QWORD PTR [rax+0x138],rbx
   14002acf5:	lea    eax,[rbx+0x1]
   14002acf8:	mov    rbx,QWORD PTR [rsp+0x50]
   14002acfd:	mov    DWORD PTR [rcx],0x1
   14002ad03:	add    rsp,0x40
   14002ad07:	pop    rdi
   14002ad08:	ret    
   14002ad09:	int3   
   14002ad0a:	int3   
   14002ad0b:	int3   
   14002ad0c:	mov    rax,rsp
   14002ad0f:	mov    QWORD PTR [rax+0x20],r9
   14002ad13:	mov    QWORD PTR [rax+0x18],r8
   14002ad17:	mov    QWORD PTR [rax+0x10],rdx
   14002ad1b:	mov    QWORD PTR [rax+0x8],rcx
   14002ad1f:	push   rbx
   14002ad20:	sub    rsp,0x60
   14002ad24:	mov    rbx,rcx
   14002ad27:	and    DWORD PTR [rax-0x28],0x0
   14002ad2b:	mov    QWORD PTR [rax-0x20],rcx
   14002ad2f:	mov    QWORD PTR [rax-0x18],r8
   14002ad33:	call   0x140021ed4
   14002ad38:	mov    r8,QWORD PTR [rax+0xe0]
   14002ad3f:	lea    rdx,[rsp+0x48]
   14002ad44:	mov    ecx,DWORD PTR [rbx]
   14002ad46:	call   r8
   14002ad49:	mov    DWORD PTR [rsp+0x40],0x0
   14002ad51:	jmp    0x14002ad53
   14002ad53:	mov    eax,DWORD PTR [rsp+0x40]
   14002ad57:	add    rsp,0x60
   14002ad5b:	pop    rbx
   14002ad5c:	ret    
   14002ad5d:	int3   
   14002ad5e:	int3   
   14002ad5f:	int3   
   14002ad60:	rex push rbx
   14002ad62:	sub    rsp,0x20
   14002ad66:	mov    rbx,rcx
   14002ad69:	mov    QWORD PTR [rcx],rdx
   14002ad6c:	call   0x140021ed4
   14002ad71:	cmp    rbx,QWORD PTR [rax+0x120]
   14002ad78:	jae    0x14002ad88
   14002ad7a:	call   0x140021ed4
   14002ad7f:	mov    rcx,QWORD PTR [rax+0x120]
   14002ad86:	jmp    0x14002ad8a
   14002ad88:	xor    ecx,ecx
   14002ad8a:	mov    QWORD PTR [rbx+0x8],rcx
   14002ad8e:	call   0x140021ed4
   14002ad93:	mov    QWORD PTR [rax+0x120],rbx
   14002ad9a:	mov    rax,rbx
   14002ad9d:	add    rsp,0x20
   14002ada1:	pop    rbx
   14002ada2:	ret    
   14002ada3:	int3   
   14002ada4:	mov    QWORD PTR [rsp+0x8],rbx
   14002ada9:	push   rdi
   14002adaa:	sub    rsp,0x20
   14002adae:	mov    rdi,rcx
   14002adb1:	call   0x140021ed4
   14002adb6:	cmp    rdi,QWORD PTR [rax+0x120]
   14002adbd:	je     0x14002adc4
   14002adbf:	call   0x1400266c8
   14002adc4:	call   0x140021ed4
   14002adc9:	mov    rbx,QWORD PTR [rax+0x120]
   14002add0:	jmp    0x14002addb
   14002add2:	cmp    rdi,rbx
   14002add5:	je     0x14002adf0
   14002add7:	mov    rbx,QWORD PTR [rbx+0x8]
   14002addb:	test   rbx,rbx
   14002adde:	jne    0x14002add2
   14002ade0:	call   0x1400266c8
   14002ade5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002adea:	add    rsp,0x20
   14002adee:	pop    rdi
   14002adef:	ret    
   14002adf0:	call   0x140021ed4
   14002adf5:	mov    rcx,QWORD PTR [rbx+0x8]
   14002adf9:	mov    QWORD PTR [rax+0x120],rcx
   14002ae00:	jmp    0x14002ade5
   14002ae02:	int3   
   14002ae03:	int3   
   14002ae04:	sub    rsp,0x28
   14002ae08:	call   0x140021ed4
   14002ae0d:	mov    rax,QWORD PTR [rax+0x128]
   14002ae14:	add    rsp,0x28
   14002ae18:	ret    
   14002ae19:	int3   
   14002ae1a:	int3   
   14002ae1b:	int3   
   14002ae1c:	sub    rsp,0x28
   14002ae20:	call   0x140021ed4
   14002ae25:	mov    rax,QWORD PTR [rax+0x130]
   14002ae2c:	add    rsp,0x28
   14002ae30:	ret    
   14002ae31:	int3   
   14002ae32:	int3   
   14002ae33:	int3   
   14002ae34:	rex push rbx
   14002ae36:	sub    rsp,0x20
   14002ae3a:	mov    rbx,rcx
   14002ae3d:	call   0x140021ed4
   14002ae42:	mov    rdx,QWORD PTR [rax+0x120]
   14002ae49:	jmp    0x14002ae54
   14002ae4b:	cmp    QWORD PTR [rdx],rbx
   14002ae4e:	je     0x14002ae62
   14002ae50:	mov    rdx,QWORD PTR [rdx+0x8]
   14002ae54:	test   rdx,rdx
   14002ae57:	jne    0x14002ae4b
   14002ae59:	lea    eax,[rdx+0x1]
   14002ae5c:	add    rsp,0x20
   14002ae60:	pop    rbx
   14002ae61:	ret    
   14002ae62:	xor    eax,eax
   14002ae64:	jmp    0x14002ae5c
   14002ae66:	int3   
   14002ae67:	int3   
   14002ae68:	rex push rbx
   14002ae6a:	sub    rsp,0x20
   14002ae6e:	mov    rbx,rcx
   14002ae71:	call   0x140021ed4
   14002ae76:	mov    QWORD PTR [rax+0x128],rbx
   14002ae7d:	add    rsp,0x20
   14002ae81:	pop    rbx
   14002ae82:	ret    
   14002ae83:	int3   
   14002ae84:	rex push rbx
   14002ae86:	sub    rsp,0x20
   14002ae8a:	mov    rbx,rcx
   14002ae8d:	call   0x140021ed4
   14002ae92:	mov    QWORD PTR [rax+0x130],rbx
   14002ae99:	add    rsp,0x20
   14002ae9d:	pop    rbx
   14002ae9e:	ret    
   14002ae9f:	int3   
   14002aea0:	mov    rax,rsp
   14002aea3:	mov    QWORD PTR [rax+0x10],rbx
   14002aea7:	mov    QWORD PTR [rax+0x18],rsi
   14002aeab:	mov    QWORD PTR [rax+0x20],rdi
   14002aeaf:	push   rbp
   14002aeb0:	push   r14
   14002aeb2:	push   r15
   14002aeb4:	lea    rbp,[rax-0x4c8]
   14002aebb:	sub    rsp,0x5b0
   14002aec2:	mov    rax,QWORD PTR [rip+0x2257f]        # 0x14004d448
   14002aec9:	xor    rax,rsp
   14002aecc:	mov    QWORD PTR [rbp+0x4a0],rax
   14002aed3:	mov    rbx,QWORD PTR [rbp+0x508]
   14002aeda:	mov    r14,rdx
   14002aedd:	lea    rdx,[rip+0x121ec]        # 0x14003d0d0
   14002aee4:	mov    r15,rcx
   14002aee7:	lea    rcx,[rsp+0x30]
   14002aeec:	mov    rax,rdx
   14002aeef:	or     rax,rcx
   14002aef2:	mov    rdi,r9
   14002aef5:	mov    rsi,r8
   14002aef8:	lea    r9,[rsp+0x30]
   14002aefd:	and    eax,0xf
   14002af00:	jne    0x14002af64
   14002af02:	mov    eax,0x1
   14002af07:	lea    r8d,[rax+0x7f]
   14002af0b:	movaps xmm0,XMMWORD PTR [rdx]
   14002af0e:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14002af12:	movaps XMMWORD PTR [rcx],xmm0
   14002af15:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   14002af19:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14002af1d:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14002af21:	movaps XMMWORD PTR [rcx+0x20],xmm0
   14002af25:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   14002af29:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14002af2d:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14002af31:	movaps XMMWORD PTR [rcx+0x40],xmm0
   14002af35:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   14002af39:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14002af3d:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14002af41:	add    rdx,r8
   14002af44:	movaps XMMWORD PTR [rcx+0x60],xmm0
   14002af48:	add    rcx,r8
   14002af4b:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14002af4f:	dec    rax
   14002af52:	jne    0x14002af0b
   14002af54:	movaps xmm0,XMMWORD PTR [rdx]
   14002af57:	mov    rax,QWORD PTR [rdx+0x10]
   14002af5b:	movaps XMMWORD PTR [rcx],xmm0
   14002af5e:	mov    QWORD PTR [rcx+0x10],rax
   14002af62:	jmp    0x14002af72
   14002af64:	mov    r8d,0x98
   14002af6a:	mov    rcx,r9
   14002af6d:	call   0x140020e80
   14002af72:	mov    rdx,QWORD PTR [rbx]
   14002af75:	mov    rcx,QWORD PTR [r15]
   14002af78:	lea    rax,[rip+0x2271]        # 0x14002d1f0
   14002af7f:	mov    QWORD PTR [rsp+0x50],rax
   14002af84:	mov    rax,QWORD PTR [rbp+0x4f0]
   14002af8b:	lea    r8,[rsp+0x30]
   14002af90:	mov    QWORD PTR [rsp+0x60],rax
   14002af95:	movsxd rax,DWORD PTR [rbp+0x4f8]
   14002af9c:	xor    r9d,r9d
   14002af9f:	mov    QWORD PTR [rsp+0x68],rax
   14002afa4:	mov    rax,QWORD PTR [rbp+0x500]
   14002afab:	mov    QWORD PTR [rsp+0x58],rdi
   14002afb0:	mov    QWORD PTR [rsp+0x78],rax
   14002afb5:	movzx  eax,BYTE PTR [rbp+0x510]
   14002afbc:	mov    QWORD PTR [rsp+0x70],rsi
   14002afc1:	mov    QWORD PTR [rbp-0x78],rax
   14002afc5:	mov    rax,QWORD PTR [rbx+0x40]
   14002afc9:	mov    QWORD PTR [rbp-0x80],r14
   14002afcd:	mov    QWORD PTR [rsp+0x28],rax
   14002afd2:	lea    rax,[rbp-0x30]
   14002afd6:	mov    QWORD PTR [rbp-0x70],0x19930520
   14002afde:	mov    QWORD PTR [rsp+0x20],rax
   14002afe3:	call   QWORD PTR [rip+0xe287]        # 0x140039270
   14002afe9:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14002aff0:	xor    rcx,rsp
   14002aff3:	call   0x140020e50
   14002aff8:	lea    r11,[rsp+0x5b0]
   14002b000:	mov    rbx,QWORD PTR [r11+0x28]
   14002b004:	mov    rsi,QWORD PTR [r11+0x30]
   14002b008:	mov    rdi,QWORD PTR [r11+0x38]
   14002b00c:	mov    rsp,r11
   14002b00f:	pop    r15
   14002b011:	pop    r14
   14002b013:	pop    rbp
   14002b014:	ret    
   14002b015:	int3   
   14002b016:	int3   
   14002b017:	int3   
   14002b018:	mov    QWORD PTR [rsp+0x10],rbx
   14002b01d:	mov    QWORD PTR [rsp+0x18],rsi
   14002b022:	push   rdi
   14002b023:	sub    rsp,0x40
   14002b027:	mov    rbx,r9
   14002b02a:	mov    rdi,r8
   14002b02d:	mov    rsi,rcx
   14002b030:	mov    QWORD PTR [rsp+0x50],rdx
   14002b035:	call   0x140021ed4
   14002b03a:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b03e:	mov    QWORD PTR [rax+0x128],rdx
   14002b045:	call   0x140021ed4
   14002b04a:	mov    rdx,QWORD PTR [rsi+0x38]
   14002b04e:	mov    QWORD PTR [rax+0x130],rdx
   14002b055:	call   0x140021ed4
   14002b05a:	mov    rdx,QWORD PTR [rbx+0x38]
   14002b05e:	mov    r8d,DWORD PTR [rdx]
   14002b061:	lea    rdx,[rsp+0x50]
   14002b066:	mov    r9,rbx
   14002b069:	add    r8,QWORD PTR [rax+0x128]
   14002b070:	xor    eax,eax
   14002b072:	mov    rcx,rsi
   14002b075:	mov    DWORD PTR [rsp+0x38],eax
   14002b079:	mov    QWORD PTR [rsp+0x30],rax
   14002b07e:	mov    DWORD PTR [rsp+0x28],eax
   14002b082:	mov    QWORD PTR [rsp+0x20],r8
   14002b087:	mov    r8,rdi
   14002b08a:	call   0x14002d5dc
   14002b08f:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b094:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b099:	add    rsp,0x40
   14002b09d:	pop    rdi
   14002b09e:	ret    
   14002b09f:	int3   
   14002b0a0:	int3   
   14002b0a1:	int3   
   14002b0a2:	int3   
   14002b0a3:	int3   
   14002b0a4:	int3   
   14002b0a5:	int3   
   14002b0a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b0b0:	sub    rdx,rcx
   14002b0b3:	test   r8,r8
   14002b0b6:	je     0x14002b122
   14002b0b8:	test   ecx,0x7
   14002b0be:	je     0x14002b0dd
   14002b0c0:	movzx  eax,BYTE PTR [rcx]
   14002b0c3:	cmp    al,BYTE PTR [rcx+rdx*1]
   14002b0c6:	jne    0x14002b125
   14002b0c8:	inc    rcx
   14002b0cb:	dec    r8
   14002b0ce:	je     0x14002b122
   14002b0d0:	test   al,al
   14002b0d2:	je     0x14002b122
   14002b0d4:	test   rcx,0x7
   14002b0db:	jne    0x14002b0c0
   14002b0dd:	movabs r11,0x8080808080808080
   14002b0e7:	movabs r10,0xfefefefefefefeff
   14002b0f1:	lea    eax,[rcx+rdx*1]
   14002b0f4:	and    eax,0xfff
   14002b0f9:	cmp    eax,0xff8
   14002b0fe:	ja     0x14002b0c0
   14002b100:	mov    rax,QWORD PTR [rcx]
   14002b103:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14002b107:	jne    0x14002b0c0
   14002b109:	add    rcx,0x8
   14002b10d:	sub    r8,0x8
   14002b111:	jbe    0x14002b122
   14002b113:	lea    r9,[rax+r10*1]
   14002b117:	not    rax
   14002b11a:	and    rax,r9
   14002b11d:	test   r11,rax
   14002b120:	je     0x14002b0f1
   14002b122:	xor    eax,eax
   14002b124:	ret    
   14002b125:	sbb    rax,rax
   14002b128:	or     rax,0x1
   14002b12c:	ret    
   14002b12d:	int3   
   14002b12e:	int3   
   14002b12f:	int3   
   14002b130:	jmp    0x140021a98
   14002b135:	int3   
   14002b136:	int3   
   14002b137:	int3   
   14002b138:	jmp    0x140020e30
   14002b13d:	int3   
   14002b13e:	int3   
   14002b13f:	int3   
   14002b140:	mov    rax,rsp
   14002b143:	mov    QWORD PTR [rax+0x8],rbx
   14002b147:	mov    QWORD PTR [rax+0x10],rbp
   14002b14b:	mov    QWORD PTR [rax+0x18],rsi
   14002b14f:	mov    QWORD PTR [rax+0x20],rdi
   14002b153:	push   r12
   14002b155:	push   r14
   14002b157:	push   r15
   14002b159:	sub    rsp,0x50
   14002b15d:	xor    r12d,r12d
   14002b160:	mov    rbp,r8
   14002b163:	mov    r14,rdx
   14002b166:	mov    rdi,rcx
   14002b169:	mov    ebx,r12d
   14002b16c:	test   rcx,rcx
   14002b16f:	je     0x14002b181
   14002b171:	test   r8,r8
   14002b174:	jne    0x14002b17d
   14002b176:	xor    eax,eax
   14002b178:	jmp    0x14002b2fd
   14002b17d:	mov    WORD PTR [rcx],r12w
   14002b181:	test   rdx,rdx
   14002b184:	jne    0x14002b19f
   14002b186:	call   0x140025380
   14002b18b:	mov    DWORD PTR [rax],0x16
   14002b191:	call   0x140024554
   14002b196:	or     rax,0xffffffffffffffff
   14002b19a:	jmp    0x14002b2fd
   14002b19f:	lea    rcx,[rsp+0x30]
   14002b1a4:	mov    rdx,r9
   14002b1a7:	call   0x1400246b8
   14002b1ac:	mov    rax,QWORD PTR [rsp+0x30]
   14002b1b1:	test   rdi,rdi
   14002b1b4:	je     0x14002b299
   14002b1ba:	cmp    QWORD PTR [rax+0x138],r12
   14002b1c1:	jne    0x14002b1ef
   14002b1c3:	test   rbp,rbp
   14002b1c6:	je     0x14002b2e7
   14002b1cc:	movzx  eax,BYTE PTR [rbx+r14*1]
   14002b1d1:	mov    WORD PTR [rdi],ax
   14002b1d4:	cmp    BYTE PTR [rbx+r14*1],r12b
   14002b1d8:	je     0x14002b2e7
   14002b1de:	inc    rbx
   14002b1e1:	add    rdi,0x2
   14002b1e5:	cmp    rbx,rbp
   14002b1e8:	jb     0x14002b1cc
   14002b1ea:	jmp    0x14002b2e7
   14002b1ef:	mov    ecx,DWORD PTR [rax+0x4]
   14002b1f2:	or     rbx,0xffffffffffffffff
   14002b1f6:	mov    r8,r14
   14002b1f9:	lea    edx,[rbx+0xa]
   14002b1fc:	mov    r9d,ebx
   14002b1ff:	mov    DWORD PTR [rsp+0x28],ebp
   14002b203:	mov    QWORD PTR [rsp+0x20],rdi
   14002b208:	call   QWORD PTR [rip+0xdfea]        # 0x1400391f8
   14002b20e:	movsxd rcx,eax
   14002b211:	test   eax,eax
   14002b213:	jne    0x14002b2e3
   14002b219:	call   QWORD PTR [rip+0xe3c1]        # 0x1400395e0
   14002b21f:	cmp    eax,0x7a
   14002b222:	jne    0x14002b283
   14002b224:	mov    r15d,ebp
   14002b227:	mov    rsi,r14
   14002b22a:	test   ebp,ebp
   14002b22c:	je     0x14002b257
   14002b22e:	dec    r15d
   14002b231:	cmp    BYTE PTR [rsi],r12b
   14002b234:	je     0x14002b257
   14002b236:	movzx  ecx,BYTE PTR [rsi]
   14002b239:	lea    rdx,[rsp+0x30]
   14002b23e:	call   0x1400283ac
   14002b243:	test   eax,eax
   14002b245:	je     0x14002b24f
   14002b247:	inc    rsi
   14002b24a:	cmp    BYTE PTR [rsi],r12b
   14002b24d:	je     0x14002b283
   14002b24f:	inc    rsi
   14002b252:	test   r15d,r15d
   14002b255:	jmp    0x14002b22c
   14002b257:	mov    rax,QWORD PTR [rsp+0x30]
   14002b25c:	sub    esi,r14d
   14002b25f:	mov    r8,r14
   14002b262:	mov    ecx,DWORD PTR [rax+0x4]
   14002b265:	mov    edx,0x1
   14002b26a:	mov    r9d,esi
   14002b26d:	mov    DWORD PTR [rsp+0x28],ebp
   14002b271:	mov    QWORD PTR [rsp+0x20],rdi
   14002b276:	call   QWORD PTR [rip+0xdf7c]        # 0x1400391f8
   14002b27c:	movsxd rcx,eax
   14002b27f:	test   eax,eax
   14002b281:	jne    0x14002b294
   14002b283:	call   0x140025380
   14002b288:	mov    DWORD PTR [rax],0x2a
   14002b28e:	mov    WORD PTR [rdi],r12w
   14002b292:	jmp    0x14002b2e7
   14002b294:	mov    rbx,rcx
   14002b297:	jmp    0x14002b2e7
   14002b299:	cmp    QWORD PTR [rax+0x138],r12
   14002b2a0:	jne    0x14002b2af
   14002b2a2:	mov    rcx,r14
   14002b2a5:	call   0x1400278e0
   14002b2aa:	mov    rbx,rax
   14002b2ad:	jmp    0x14002b2e7
   14002b2af:	mov    ecx,DWORD PTR [rax+0x4]
   14002b2b2:	or     rbx,0xffffffffffffffff
   14002b2b6:	mov    r8,r14
   14002b2b9:	lea    edx,[rbx+0xa]
   14002b2bc:	mov    r9d,ebx
   14002b2bf:	mov    DWORD PTR [rsp+0x28],r12d
   14002b2c4:	mov    QWORD PTR [rsp+0x20],r12
   14002b2c9:	call   QWORD PTR [rip+0xdf29]        # 0x1400391f8
   14002b2cf:	movsxd rcx,eax
   14002b2d2:	test   eax,eax
   14002b2d4:	jne    0x14002b2e3
   14002b2d6:	call   0x140025380
   14002b2db:	mov    DWORD PTR [rax],0x2a
   14002b2e1:	jmp    0x14002b2e7
   14002b2e3:	lea    rbx,[rcx-0x1]
   14002b2e7:	cmp    BYTE PTR [rsp+0x48],r12b
   14002b2ec:	je     0x14002b2fa
   14002b2ee:	mov    rcx,QWORD PTR [rsp+0x40]
   14002b2f3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b2fa:	mov    rax,rbx
   14002b2fd:	lea    r11,[rsp+0x50]
   14002b302:	mov    rbx,QWORD PTR [r11+0x20]
   14002b306:	mov    rbp,QWORD PTR [r11+0x28]
   14002b30a:	mov    rsi,QWORD PTR [r11+0x30]
   14002b30e:	mov    rdi,QWORD PTR [r11+0x38]
   14002b312:	mov    rsp,r11
   14002b315:	pop    r15
   14002b317:	pop    r14
   14002b319:	pop    r12
   14002b31b:	ret    
   14002b31c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b321:	mov    QWORD PTR [rsp+0x10],rsi
   14002b326:	mov    QWORD PTR [rsp+0x18],rdi
   14002b32b:	push   r12
   14002b32d:	push   r14
   14002b32f:	push   r15
   14002b331:	sub    rsp,0x40
   14002b335:	xor    r12d,r12d
   14002b338:	mov    r15,r9
   14002b33b:	mov    rsi,r8
   14002b33e:	mov    rdi,rdx
   14002b341:	mov    r14,rcx
   14002b344:	mov    ebx,r12d
   14002b347:	test   rdx,rdx
   14002b34a:	jne    0x14002b353
   14002b34c:	test   r8,r8
   14002b34f:	je     0x14002b372
   14002b351:	jmp    0x14002b358
   14002b353:	test   r8,r8
   14002b356:	jne    0x14002b36e
   14002b358:	call   0x140025380
   14002b35d:	mov    ebx,0x16
   14002b362:	mov    DWORD PTR [rax],ebx
   14002b364:	call   0x140024554
   14002b369:	jmp    0x14002b430
   14002b36e:	mov    WORD PTR [rdx],r12w
   14002b372:	test   rcx,rcx
   14002b375:	je     0x14002b37a
   14002b377:	mov    QWORD PTR [rcx],r12
   14002b37a:	mov    rdx,QWORD PTR [rsp+0x88]
   14002b382:	lea    rcx,[rsp+0x20]
   14002b387:	call   0x1400246b8
   14002b38c:	mov    r8,QWORD PTR [rsp+0x80]
   14002b394:	cmp    r8,rsi
   14002b397:	cmova  r8,rsi
   14002b39b:	cmp    r8,0x7fffffff
   14002b3a2:	jbe    0x14002b3b0
   14002b3a4:	call   0x140025380
   14002b3a9:	mov    ebx,0x16
   14002b3ae:	jmp    0x14002b3fe
   14002b3b0:	lea    r9,[rsp+0x20]
   14002b3b5:	mov    rdx,r15
   14002b3b8:	mov    rcx,rdi
   14002b3bb:	call   0x14002b140
   14002b3c0:	cmp    rax,0xffffffffffffffff
   14002b3c4:	jne    0x14002b3d8
   14002b3c6:	test   rdi,rdi
   14002b3c9:	je     0x14002b3cf
   14002b3cb:	mov    WORD PTR [rdi],r12w
   14002b3cf:	call   0x140025380
   14002b3d4:	mov    ebx,DWORD PTR [rax]
   14002b3d6:	jmp    0x14002b41d
   14002b3d8:	inc    rax
   14002b3db:	test   rdi,rdi
   14002b3de:	je     0x14002b415
   14002b3e0:	cmp    rax,rsi
   14002b3e3:	jbe    0x14002b40f
   14002b3e5:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   14002b3ee:	je     0x14002b407
   14002b3f0:	mov    WORD PTR [rdi],r12w
   14002b3f4:	call   0x140025380
   14002b3f9:	mov    ebx,0x22
   14002b3fe:	mov    DWORD PTR [rax],ebx
   14002b400:	call   0x140024554
   14002b405:	jmp    0x14002b41d
   14002b407:	mov    rax,rsi
   14002b40a:	mov    ebx,0x50
   14002b40f:	mov    WORD PTR [rdi+rax*2-0x2],r12w
   14002b415:	test   r14,r14
   14002b418:	je     0x14002b41d
   14002b41a:	mov    QWORD PTR [r14],rax
   14002b41d:	cmp    BYTE PTR [rsp+0x38],r12b
   14002b422:	je     0x14002b430
   14002b424:	mov    rcx,QWORD PTR [rsp+0x30]
   14002b429:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b430:	mov    rsi,QWORD PTR [rsp+0x68]
   14002b435:	mov    rdi,QWORD PTR [rsp+0x70]
   14002b43a:	mov    eax,ebx
   14002b43c:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b441:	add    rsp,0x40
   14002b445:	pop    r15
   14002b447:	pop    r14
   14002b449:	pop    r12
   14002b44b:	ret    
   14002b44c:	sub    rsp,0x38
   14002b450:	mov    rax,QWORD PTR [rsp+0x60]
   14002b455:	and    QWORD PTR [rsp+0x28],0x0
   14002b45b:	mov    QWORD PTR [rsp+0x20],rax
   14002b460:	call   0x14002b31c
   14002b465:	add    rsp,0x38
   14002b469:	ret    
   14002b46a:	int3   
   14002b46b:	int3   
   14002b46c:	rex push rbx
   14002b46e:	sub    rsp,0x20
   14002b472:	and    DWORD PTR [rsp+0x40],0x0
   14002b477:	lea    r8,[rsp+0x40]
   14002b47c:	call   0x14002811c
   14002b481:	mov    rbx,rax
   14002b484:	test   rax,rax
   14002b487:	jne    0x14002b4a4
   14002b489:	cmp    DWORD PTR [rsp+0x40],eax
   14002b48d:	je     0x14002b4a4
   14002b48f:	call   0x140025380
   14002b494:	test   rax,rax
   14002b497:	je     0x14002b4a4
   14002b499:	call   0x140025380
   14002b49e:	mov    ecx,DWORD PTR [rsp+0x40]
   14002b4a2:	mov    DWORD PTR [rax],ecx
   14002b4a4:	mov    rax,rbx
   14002b4a7:	add    rsp,0x20
   14002b4ab:	pop    rbx
   14002b4ac:	ret    
   14002b4ad:	int3   
   14002b4ae:	int3   
   14002b4af:	int3   
   14002b4b0:	mov    rax,rsp
   14002b4b3:	mov    QWORD PTR [rax+0x8],rbx
   14002b4b7:	mov    QWORD PTR [rax+0x18],rsi
   14002b4bb:	mov    QWORD PTR [rax+0x20],rdi
   14002b4bf:	mov    QWORD PTR [rax+0x10],rdx
   14002b4c3:	push   r14
   14002b4c5:	sub    rsp,0x20
   14002b4c9:	mov    rdi,rdx
   14002b4cc:	mov    rsi,rcx
   14002b4cf:	xor    eax,eax
   14002b4d1:	test   rcx,rcx
   14002b4d4:	setne  al
   14002b4d7:	test   eax,eax
   14002b4d9:	jne    0x14002b4f3
   14002b4db:	call   0x140025380
   14002b4e0:	mov    DWORD PTR [rax],0x16
   14002b4e6:	call   0x140024554
   14002b4eb:	or     eax,0xffffffff
   14002b4ee:	jmp    0x14002b5ce
   14002b4f3:	xor    eax,eax
   14002b4f5:	test   rdx,rdx
   14002b4f8:	setne  al
   14002b4fb:	test   eax,eax
   14002b4fd:	je     0x14002b4db
   14002b4ff:	call   0x1400227ec
   14002b504:	test   eax,eax
   14002b506:	js     0x14002b4eb
   14002b508:	test   BYTE PTR [rdi+0x18],0x40
   14002b50c:	jne    0x14002b57f
   14002b50e:	mov    rcx,rdi
   14002b511:	call   0x140023a40
   14002b516:	movsxd r8,eax
   14002b519:	lea    ecx,[r8+0x2]
   14002b51d:	lea    r9,[rip+0x26dbc]        # 0x1400522e0
   14002b524:	cmp    ecx,0x1
   14002b527:	jbe    0x14002b547
   14002b529:	mov    rdx,r8
   14002b52c:	mov    rcx,r8
   14002b52f:	sar    rcx,0x5
   14002b533:	and    edx,0x1f
   14002b536:	imul   rdx,rdx,0x58
   14002b53a:	add    rdx,QWORD PTR [r9+rcx*8]
   14002b53e:	lea    rcx,[rip+0x21eab]        # 0x14004d3f0
   14002b545:	jmp    0x14002b551
   14002b547:	lea    rcx,[rip+0x21ea2]        # 0x14004d3f0
   14002b54e:	mov    rdx,rcx
   14002b551:	test   BYTE PTR [rdx+0x38],0x7f
   14002b555:	jne    0x14002b4db
   14002b557:	lea    eax,[r8+0x2]
   14002b55b:	cmp    eax,0x1
   14002b55e:	jbe    0x14002b575
   14002b560:	mov    rcx,r8
   14002b563:	mov    rax,r8
   14002b566:	sar    rax,0x5
   14002b56a:	and    ecx,0x1f
   14002b56d:	imul   rcx,rcx,0x58
   14002b571:	add    rcx,QWORD PTR [r9+rax*8]
   14002b575:	test   BYTE PTR [rcx+0x38],0x80
   14002b579:	jne    0x14002b4db
   14002b57f:	mov    rcx,rsi
   14002b582:	call   0x1400278e0
   14002b587:	mov    r14,rax
   14002b58a:	mov    rcx,rdi
   14002b58d:	call   0x140021434
   14002b592:	nop
   14002b593:	mov    rcx,rdi
   14002b596:	call   0x1400245e8
   14002b59b:	mov    ebx,eax
   14002b59d:	mov    r9,rdi
   14002b5a0:	mov    r8,r14
   14002b5a3:	mov    edx,0x1
   14002b5a8:	mov    rcx,rsi
   14002b5ab:	call   0x14002da50
   14002b5b0:	mov    rsi,rax
   14002b5b3:	mov    rdx,rdi
   14002b5b6:	mov    ecx,ebx
   14002b5b8:	call   0x1400245b0
   14002b5bd:	nop
   14002b5be:	mov    rcx,rdi
   14002b5c1:	call   0x1400214d0
   14002b5c6:	sub    rsi,r14
   14002b5c9:	neg    rsi
   14002b5cc:	sbb    eax,eax
   14002b5ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b5d3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b5d8:	mov    rdi,QWORD PTR [rsp+0x48]
   14002b5dd:	add    rsp,0x20
   14002b5e1:	pop    r14
   14002b5e3:	ret    
   14002b5e4:	sub    rsp,0x38
   14002b5e8:	mov    QWORD PTR [rsp+0x20],r9
   14002b5ed:	xor    r9d,r9d
   14002b5f0:	call   0x14002b5fc
   14002b5f5:	add    rsp,0x38
   14002b5f9:	ret    
   14002b5fa:	int3   
   14002b5fb:	int3   
   14002b5fc:	mov    rax,rsp
   14002b5ff:	mov    QWORD PTR [rax+0x8],rbx
   14002b603:	mov    QWORD PTR [rax+0x10],rbp
   14002b607:	mov    QWORD PTR [rax+0x18],rsi
   14002b60b:	push   rdi
   14002b60c:	sub    rsp,0x50
   14002b610:	and    QWORD PTR [rax-0x38],0x0
   14002b615:	mov    rbx,rdx
   14002b618:	xor    edx,edx
   14002b61a:	mov    rsi,r8
   14002b61d:	mov    rdi,rcx
   14002b620:	lea    r8d,[rdx+0x28]
   14002b624:	lea    rcx,[rax-0x30]
   14002b628:	mov    rbp,r9
   14002b62b:	call   0x1400260e0
   14002b630:	test   rsi,rsi
   14002b633:	jne    0x14002b64a
   14002b635:	call   0x140025380
   14002b63a:	mov    DWORD PTR [rax],0x16
   14002b640:	call   0x140024554
   14002b645:	or     eax,0xffffffff
   14002b648:	jmp    0x14002b6b2
   14002b64a:	test   rbx,rbx
   14002b64d:	je     0x14002b654
   14002b64f:	test   rdi,rdi
   14002b652:	je     0x14002b635
   14002b654:	mov    r9,QWORD PTR [rsp+0x80]
   14002b65c:	mov    eax,0x7fffffff
   14002b661:	lea    rcx,[rsp+0x20]
   14002b666:	cmp    rbx,rax
   14002b669:	mov    r8,rbp
   14002b66c:	mov    rdx,rsi
   14002b66f:	cmova  ebx,eax
   14002b672:	mov    DWORD PTR [rsp+0x38],0x42
   14002b67a:	mov    QWORD PTR [rsp+0x30],rdi
   14002b67f:	mov    DWORD PTR [rsp+0x28],ebx
   14002b683:	mov    QWORD PTR [rsp+0x20],rdi
   14002b688:	call   0x140024760
   14002b68d:	mov    ebx,eax
   14002b68f:	test   rdi,rdi
   14002b692:	je     0x14002b6b2
   14002b694:	dec    DWORD PTR [rsp+0x28]
   14002b698:	js     0x14002b6a4
   14002b69a:	mov    rax,QWORD PTR [rsp+0x20]
   14002b69f:	mov    BYTE PTR [rax],0x0
   14002b6a2:	jmp    0x14002b6b0
   14002b6a4:	lea    rdx,[rsp+0x20]
   14002b6a9:	xor    ecx,ecx
   14002b6ab:	call   0x1400253f0
   14002b6b0:	mov    eax,ebx
   14002b6b2:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b6b7:	mov    rbp,QWORD PTR [rsp+0x68]
   14002b6bc:	mov    rsi,QWORD PTR [rsp+0x70]
   14002b6c1:	add    rsp,0x50
   14002b6c5:	pop    rdi
   14002b6c6:	ret    
   14002b6c7:	int3   
   14002b6c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b6cd:	push   rsi
   14002b6ce:	push   rdi
   14002b6cf:	push   r14
   14002b6d1:	sub    rsp,0x20
   14002b6d5:	mov    rdi,rcx
   14002b6d8:	call   0x1400227ec
   14002b6dd:	test   eax,eax
   14002b6df:	jns    0x14002b6eb
   14002b6e1:	mov    eax,0xffff
   14002b6e6:	jmp    0x14002b8c3
   14002b6eb:	test   BYTE PTR [rdi+0x18],0x40
   14002b6ef:	lea    r14,[rip+0x26bea]        # 0x1400522e0
   14002b6f6:	lea    rsi,[rip+0x21cf3]        # 0x14004d3f0
   14002b6fd:	jne    0x14002b89d
   14002b703:	mov    rcx,rdi
   14002b706:	call   0x140023a40
   14002b70b:	cmp    eax,0xffffffff
   14002b70e:	je     0x14002b741
   14002b710:	mov    rcx,rdi
   14002b713:	call   0x140023a40
   14002b718:	cmp    eax,0xfffffffe
   14002b71b:	je     0x14002b741
   14002b71d:	mov    rcx,rdi
   14002b720:	call   0x140023a40
   14002b725:	mov    rcx,rdi
   14002b728:	movsxd rbx,eax
   14002b72b:	sar    rbx,0x5
   14002b72f:	call   0x140023a40
   14002b734:	and    eax,0x1f
   14002b737:	imul   rax,rax,0x58
   14002b73b:	add    rax,QWORD PTR [r14+rbx*8]
   14002b73f:	jmp    0x14002b744
   14002b741:	mov    rax,rsi
   14002b744:	test   BYTE PTR [rax+0x38],0x7f
   14002b748:	je     0x14002b7a8
   14002b74a:	dec    DWORD PTR [rdi+0x8]
   14002b74d:	js     0x14002b75d
   14002b74f:	mov    rax,QWORD PTR [rdi]
   14002b752:	movzx  ecx,BYTE PTR [rax]
   14002b755:	inc    rax
   14002b758:	mov    QWORD PTR [rdi],rax
   14002b75b:	jmp    0x14002b767
   14002b75d:	mov    rcx,rdi
   14002b760:	call   0x14002dbe0
   14002b765:	mov    ecx,eax
   14002b767:	cmp    ecx,0xffffffff
   14002b76a:	je     0x14002b6e1
   14002b770:	dec    DWORD PTR [rdi+0x8]
   14002b773:	mov    BYTE PTR [rsp+0x48],cl
   14002b777:	js     0x14002b787
   14002b779:	mov    rax,QWORD PTR [rdi]
   14002b77c:	movzx  ecx,BYTE PTR [rax]
   14002b77f:	inc    rax
   14002b782:	mov    QWORD PTR [rdi],rax
   14002b785:	jmp    0x14002b791
   14002b787:	mov    rcx,rdi
   14002b78a:	call   0x14002dbe0
   14002b78f:	mov    ecx,eax
   14002b791:	cmp    ecx,0xffffffff
   14002b794:	je     0x14002b6e1
   14002b79a:	mov    BYTE PTR [rsp+0x49],cl
   14002b79e:	movzx  eax,WORD PTR [rsp+0x48]
   14002b7a3:	jmp    0x14002b8c3
   14002b7a8:	test   BYTE PTR [rdi+0x18],0x40
   14002b7ac:	jne    0x14002b89d
   14002b7b2:	mov    rcx,rdi
   14002b7b5:	call   0x140023a40
   14002b7ba:	cmp    eax,0xffffffff
   14002b7bd:	je     0x14002b7f0
   14002b7bf:	mov    rcx,rdi
   14002b7c2:	call   0x140023a40
   14002b7c7:	cmp    eax,0xfffffffe
   14002b7ca:	je     0x14002b7f0
   14002b7cc:	mov    rcx,rdi
   14002b7cf:	call   0x140023a40
   14002b7d4:	mov    rcx,rdi
   14002b7d7:	movsxd rbx,eax
   14002b7da:	sar    rbx,0x5
   14002b7de:	call   0x140023a40
   14002b7e3:	mov    esi,eax
   14002b7e5:	and    esi,0x1f
   14002b7e8:	imul   rsi,rsi,0x58
   14002b7ec:	add    rsi,QWORD PTR [r14+rbx*8]
   14002b7f0:	test   BYTE PTR [rsi+0x8],0x80
   14002b7f4:	je     0x14002b89d
   14002b7fa:	dec    DWORD PTR [rdi+0x8]
   14002b7fd:	mov    ebx,0x1
   14002b802:	js     0x14002b812
   14002b804:	mov    rax,QWORD PTR [rdi]
   14002b807:	movzx  ecx,BYTE PTR [rax]
   14002b80a:	inc    rax
   14002b80d:	mov    QWORD PTR [rdi],rax
   14002b810:	jmp    0x14002b81c
   14002b812:	mov    rcx,rdi
   14002b815:	call   0x14002dbe0
   14002b81a:	mov    ecx,eax
   14002b81c:	cmp    ecx,0xffffffff
   14002b81f:	je     0x14002b6e1
   14002b825:	mov    BYTE PTR [rsp+0x50],cl
   14002b829:	movzx  ecx,cl
   14002b82c:	call   0x1400283f0
   14002b831:	test   eax,eax
   14002b833:	je     0x14002b872
   14002b835:	dec    DWORD PTR [rdi+0x8]
   14002b838:	js     0x14002b848
   14002b83a:	mov    rax,QWORD PTR [rdi]
   14002b83d:	movzx  ecx,BYTE PTR [rax]
   14002b840:	inc    rax
   14002b843:	mov    QWORD PTR [rdi],rax
   14002b846:	jmp    0x14002b852
   14002b848:	mov    rcx,rdi
   14002b84b:	call   0x14002dbe0
   14002b850:	mov    ecx,eax
   14002b852:	cmp    ecx,0xffffffff
   14002b855:	jne    0x14002b869
   14002b857:	movsx  ecx,BYTE PTR [rsp+0x50]
   14002b85c:	mov    rdx,rdi
   14002b85f:	call   0x14002de3c
   14002b864:	jmp    0x14002b6e1
   14002b869:	mov    BYTE PTR [rsp+0x51],cl
   14002b86d:	mov    ebx,0x2
   14002b872:	lea    rdx,[rsp+0x50]
   14002b877:	lea    rcx,[rsp+0x48]
   14002b87c:	movsxd r8,ebx
   14002b87f:	call   0x140028790
   14002b884:	cmp    eax,0xffffffff
   14002b887:	jne    0x14002b79e
   14002b88d:	call   0x140025380
   14002b892:	mov    DWORD PTR [rax],0x2a
   14002b898:	jmp    0x14002b6e1
   14002b89d:	movsxd rax,DWORD PTR [rdi+0x8]
   14002b8a1:	add    rax,0xfffffffffffffffe
   14002b8a5:	mov    DWORD PTR [rdi+0x8],eax
   14002b8a8:	test   eax,eax
   14002b8aa:	js     0x14002b8bb
   14002b8ac:	mov    rcx,QWORD PTR [rdi]
   14002b8af:	movzx  eax,WORD PTR [rcx]
   14002b8b2:	add    rcx,0x2
   14002b8b6:	mov    QWORD PTR [rdi],rcx
   14002b8b9:	jmp    0x14002b8c3
   14002b8bb:	mov    rcx,rdi
   14002b8be:	call   0x14002dea4
   14002b8c3:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b8c8:	add    rsp,0x20
   14002b8cc:	pop    r14
   14002b8ce:	pop    rdi
   14002b8cf:	pop    rsi
   14002b8d0:	ret    
   14002b8d1:	int3   
   14002b8d2:	int3   
   14002b8d3:	int3   
   14002b8d4:	mov    QWORD PTR [rsp+0x10],rbx
   14002b8d9:	mov    QWORD PTR [rsp+0x8],rcx
   14002b8de:	push   rdi
   14002b8df:	sub    rsp,0x20
   14002b8e3:	mov    rbx,rcx
   14002b8e6:	xor    eax,eax
   14002b8e8:	test   rcx,rcx
   14002b8eb:	setne  al
   14002b8ee:	test   eax,eax
   14002b8f0:	jne    0x14002b909
   14002b8f2:	call   0x140025380
   14002b8f7:	mov    DWORD PTR [rax],0x16
   14002b8fd:	call   0x140024554
   14002b902:	mov    eax,0xffff
   14002b907:	jmp    0x14002b925
   14002b909:	call   0x140021434
   14002b90e:	nop
   14002b90f:	mov    rcx,rbx
   14002b912:	call   0x14002b6c8
   14002b917:	movzx  edi,ax
   14002b91a:	mov    rcx,rbx
   14002b91d:	call   0x1400214d0
   14002b922:	movzx  eax,di
   14002b925:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b92a:	add    rsp,0x20
   14002b92e:	pop    rdi
   14002b92f:	ret    
   14002b930:	mov    QWORD PTR [rsp+0x18],rbx
   14002b935:	mov    QWORD PTR [rsp+0x20],rsi
   14002b93a:	mov    QWORD PTR [rsp+0x10],rdx
   14002b93f:	push   rdi
   14002b940:	push   r14
   14002b942:	push   r15
   14002b944:	sub    rsp,0x30
   14002b948:	mov    rsi,rdx
   14002b94b:	mov    r15,rcx
   14002b94e:	xor    ebx,ebx
   14002b950:	mov    eax,ebx
   14002b952:	test   rcx,rcx
   14002b955:	setne  al
   14002b958:	test   eax,eax
   14002b95a:	jne    0x14002b973
   14002b95c:	call   0x140025380
   14002b961:	mov    DWORD PTR [rax],0x16
   14002b967:	call   0x140024554
   14002b96c:	mov    eax,0xffff
   14002b971:	jmp    0x14002b9d0
   14002b973:	mov    eax,ebx
   14002b975:	test   rdx,rdx
   14002b978:	setne  al
   14002b97b:	test   eax,eax
   14002b97d:	je     0x14002b95c
   14002b97f:	call   0x140027a7c
   14002b984:	mov    r14,rax
   14002b987:	mov    rcx,rsi
   14002b98a:	call   0x140021434
   14002b98f:	nop
   14002b990:	mov    edi,0xffff
   14002b995:	mov    rcx,r14
   14002b998:	dec    r14
   14002b99b:	mov    QWORD PTR [rsp+0x20],r14
   14002b9a0:	test   rcx,rcx
   14002b9a3:	je     0x14002b9c6
   14002b9a5:	movzx  ecx,WORD PTR [r15]
   14002b9a9:	add    r15,0x2
   14002b9ad:	mov    QWORD PTR [rsp+0x50],r15
   14002b9b2:	mov    rdx,rsi
   14002b9b5:	call   0x140028a54
   14002b9ba:	cmp    ax,di
   14002b9bd:	jne    0x14002b9c4
   14002b9bf:	or     ebx,0xffffffff
   14002b9c2:	jmp    0x14002b9c6
   14002b9c4:	jmp    0x14002b995
   14002b9c6:	mov    rcx,rsi
   14002b9c9:	call   0x1400214d0
   14002b9ce:	mov    eax,ebx
   14002b9d0:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b9d5:	mov    rsi,QWORD PTR [rsp+0x68]
   14002b9da:	add    rsp,0x30
   14002b9de:	pop    r15
   14002b9e0:	pop    r14
   14002b9e2:	pop    rdi
   14002b9e3:	ret    
   14002b9e4:	mov    QWORD PTR [rsp+0x18],rbx
   14002b9e9:	mov    QWORD PTR [rsp+0x20],rsi
   14002b9ee:	mov    DWORD PTR [rsp+0x8],ecx
   14002b9f2:	push   rdi
   14002b9f3:	push   r14
   14002b9f5:	push   r15
   14002b9f7:	sub    rsp,0x20
   14002b9fb:	mov    ebx,edx
   14002b9fd:	movsxd rdi,ecx
   14002ba00:	cmp    edx,0x20000
   14002ba06:	je     0x14002ba38
   14002ba08:	cmp    edx,0x10000
   14002ba0e:	je     0x14002ba38
   14002ba10:	cmp    edx,0x8000
   14002ba16:	je     0x14002ba38
   14002ba18:	cmp    edx,0x4000
   14002ba1e:	je     0x14002ba38
   14002ba20:	cmp    edx,0x40000
   14002ba26:	je     0x14002ba38
   14002ba28:	call   0x140025380
   14002ba2d:	mov    DWORD PTR [rax],0x16
   14002ba33:	jmp    0x14002bacc
   14002ba38:	cmp    edi,0xfffffffe
   14002ba3b:	jne    0x14002ba4d
   14002ba3d:	call   0x140025380
   14002ba42:	mov    DWORD PTR [rax],0x9
   14002ba48:	jmp    0x14002bad1
   14002ba4d:	call   0x1400227ec
   14002ba52:	test   eax,eax
   14002ba54:	js     0x14002bad1
   14002ba56:	test   edi,edi
   14002ba58:	js     0x14002bac1
   14002ba5a:	cmp    edi,DWORD PTR [rip+0x2686c]        # 0x1400522cc
   14002ba60:	jae    0x14002bac1
   14002ba62:	mov    rsi,rdi
   14002ba65:	mov    r14,rdi
   14002ba68:	sar    r14,0x5
   14002ba6c:	lea    r15,[rip+0x2686d]        # 0x1400522e0
   14002ba73:	and    esi,0x1f
   14002ba76:	imul   rsi,rsi,0x58
   14002ba7a:	mov    rax,QWORD PTR [r15+r14*8]
   14002ba7e:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002ba83:	and    ecx,0x1
   14002ba86:	je     0x14002bac1
   14002ba88:	mov    ecx,edi
   14002ba8a:	call   0x1400281b8
   14002ba8f:	nop
   14002ba90:	mov    rax,QWORD PTR [r15+r14*8]
   14002ba94:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002ba99:	je     0x14002baa8
   14002ba9b:	mov    edx,ebx
   14002ba9d:	mov    ecx,edi
   14002ba9f:	call   0x14002bae8
   14002baa4:	mov    ebx,eax
   14002baa6:	jmp    0x14002bab6
   14002baa8:	call   0x140025380
   14002baad:	mov    DWORD PTR [rax],0x9
   14002bab3:	or     ebx,0xffffffff
   14002bab6:	mov    ecx,edi
   14002bab8:	call   0x140028380
   14002babd:	mov    eax,ebx
   14002babf:	jmp    0x14002bad4
   14002bac1:	call   0x140025380
   14002bac6:	mov    DWORD PTR [rax],0x9
   14002bacc:	call   0x140024554
   14002bad1:	or     eax,0xffffffff
   14002bad4:	mov    rbx,QWORD PTR [rsp+0x50]
   14002bad9:	mov    rsi,QWORD PTR [rsp+0x58]
   14002bade:	add    rsp,0x20
   14002bae2:	pop    r15
   14002bae4:	pop    r14
   14002bae6:	pop    rdi
   14002bae7:	ret    
   14002bae8:	mov    QWORD PTR [rsp+0x8],rbx
   14002baed:	mov    QWORD PTR [rsp+0x10],rdi
   14002baf2:	movsxd r8,ecx
   14002baf5:	lea    rdi,[rip+0x267e4]        # 0x1400522e0
   14002bafc:	mov    r10,r8
   14002baff:	and    r8d,0x1f
   14002bb03:	sar    r10,0x5
   14002bb07:	imul   r8,r8,0x58
   14002bb0b:	mov    r9,QWORD PTR [rdi+r10*8]
   14002bb0f:	mov    al,BYTE PTR [r9+r8*1+0x38]
   14002bb14:	movzx  ecx,BYTE PTR [r9+r8*1+0x8]
   14002bb1a:	add    al,al
   14002bb1c:	mov    ebx,ecx
   14002bb1e:	movsx  r11d,al
   14002bb22:	and    ebx,0x80
   14002bb28:	sar    r11d,1
   14002bb2b:	cmp    edx,0x4000
   14002bb31:	je     0x14002bb8e
   14002bb33:	cmp    edx,0x8000
   14002bb39:	je     0x14002bb84
   14002bb3b:	lea    eax,[rdx-0x10000]
   14002bb41:	test   eax,0xfffeffff
   14002bb46:	je     0x14002bb6a
   14002bb48:	cmp    edx,0x40000
   14002bb4e:	jne    0x14002bba0
   14002bb50:	or     cl,0x80
   14002bb53:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002bb58:	mov    rax,QWORD PTR [rdi+r10*8]
   14002bb5c:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14002bb62:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14002bb68:	jmp    0x14002bba0
   14002bb6a:	or     cl,0x80
   14002bb6d:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002bb72:	mov    rax,QWORD PTR [rdi+r10*8]
   14002bb76:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14002bb7c:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14002bb82:	jmp    0x14002bba0
   14002bb84:	and    cl,0x7f
   14002bb87:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002bb8c:	jmp    0x14002bba0
   14002bb8e:	or     cl,0x80
   14002bb91:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14002bb96:	mov    rcx,QWORD PTR [rdi+r10*8]
   14002bb9a:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14002bba0:	test   ebx,ebx
   14002bba2:	jne    0x14002bbab
   14002bba4:	mov    eax,0x8000
   14002bba9:	jmp    0x14002bbba
   14002bbab:	neg    r11d
   14002bbae:	sbb    eax,eax
   14002bbb0:	and    eax,0xc000
   14002bbb5:	add    eax,0x4000
   14002bbba:	mov    rbx,QWORD PTR [rsp+0x8]
   14002bbbf:	mov    rdi,QWORD PTR [rsp+0x10]
   14002bbc4:	ret    
   14002bbc5:	int3   
   14002bbc6:	int3   
   14002bbc7:	int3   
   14002bbc8:	mov    QWORD PTR [rsp+0x8],rbx
   14002bbcd:	mov    QWORD PTR [rsp+0x10],rsi
   14002bbd2:	mov    QWORD PTR [rsp+0x18],rdi
   14002bbd7:	push   r14
   14002bbd9:	sub    rsp,0x20
   14002bbdd:	mov    rsi,rdx
   14002bbe0:	mov    r14,rcx
   14002bbe3:	test   rcx,rcx
   14002bbe6:	je     0x14002bce7
   14002bbec:	test   rdx,rdx
   14002bbef:	je     0x14002bce7
   14002bbf5:	xor    edi,edi
   14002bbf7:	mov    rbx,rcx
   14002bbfa:	test   r8,r8
   14002bbfd:	je     0x14002bc20
   14002bbff:	mov    al,BYTE PTR [r8]
   14002bc02:	test   al,al
   14002bc04:	je     0x14002bc20
   14002bc06:	mov    edi,0x2
   14002bc0b:	cmp    rdx,rdi
   14002bc0e:	jbe    0x14002bcd0
   14002bc14:	lea    rbx,[rcx+0x1]
   14002bc18:	mov    BYTE PTR [rcx],al
   14002bc1a:	mov    BYTE PTR [rbx],0x3a
   14002bc1d:	inc    rbx
   14002bc20:	mov    rdx,r9
   14002bc23:	test   r9,r9
   14002bc26:	je     0x14002bc69
   14002bc28:	cmp    BYTE PTR [r9],0x0
   14002bc2c:	je     0x14002bc69
   14002bc2e:	inc    rdi
   14002bc31:	cmp    rdi,rsi
   14002bc34:	jae    0x14002bcd0
   14002bc3a:	mov    al,BYTE PTR [rdx]
   14002bc3c:	inc    rdx
   14002bc3f:	mov    BYTE PTR [rbx],al
   14002bc41:	inc    rbx
   14002bc44:	cmp    BYTE PTR [rdx],0x0
   14002bc47:	jne    0x14002bc2e
   14002bc49:	mov    rcx,r9
   14002bc4c:	call   0x14002dffc
   14002bc51:	cmp    BYTE PTR [rax],0x2f
   14002bc54:	je     0x14002bc69
   14002bc56:	cmp    BYTE PTR [rax],0x5c
   14002bc59:	je     0x14002bc69
   14002bc5b:	inc    rdi
   14002bc5e:	cmp    rdi,rsi
   14002bc61:	jae    0x14002bcd0
   14002bc63:	mov    BYTE PTR [rbx],0x5c
   14002bc66:	inc    rbx
   14002bc69:	mov    rcx,QWORD PTR [rsp+0x50]
   14002bc6e:	test   rcx,rcx
   14002bc71:	je     0x14002bc8c
   14002bc73:	jmp    0x14002bc87
   14002bc75:	inc    rdi
   14002bc78:	cmp    rdi,rsi
   14002bc7b:	jae    0x14002bcd0
   14002bc7d:	mov    al,BYTE PTR [rcx]
   14002bc7f:	mov    BYTE PTR [rbx],al
   14002bc81:	inc    rbx
   14002bc84:	inc    rcx
   14002bc87:	cmp    BYTE PTR [rcx],0x0
   14002bc8a:	jne    0x14002bc75
   14002bc8c:	mov    rcx,QWORD PTR [rsp+0x58]
   14002bc91:	test   rcx,rcx
   14002bc94:	je     0x14002bcc7
   14002bc96:	mov    al,BYTE PTR [rcx]
   14002bc98:	test   al,al
   14002bc9a:	je     0x14002bcc7
   14002bc9c:	cmp    al,0x2e
   14002bc9e:	je     0x14002bcc2
   14002bca0:	inc    rdi
   14002bca3:	cmp    rdi,rsi
   14002bca6:	jae    0x14002bcd0
   14002bca8:	mov    BYTE PTR [rbx],0x2e
   14002bcab:	inc    rbx
   14002bcae:	jmp    0x14002bcc2
   14002bcb0:	inc    rdi
   14002bcb3:	cmp    rdi,rsi
   14002bcb6:	jae    0x14002bcd0
   14002bcb8:	mov    al,BYTE PTR [rcx]
   14002bcba:	mov    BYTE PTR [rbx],al
   14002bcbc:	inc    rbx
   14002bcbf:	inc    rcx
   14002bcc2:	cmp    BYTE PTR [rcx],0x0
   14002bcc5:	jne    0x14002bcb0
   14002bcc7:	lea    rax,[rdi+0x1]
   14002bccb:	cmp    rax,rsi
   14002bcce:	jbe    0x14002bce0
   14002bcd0:	mov    BYTE PTR [r14],0x0
   14002bcd4:	call   0x140025380
   14002bcd9:	mov    ebx,0x22
   14002bcde:	jmp    0x14002bcf1
   14002bce0:	mov    BYTE PTR [rbx],0x0
   14002bce3:	xor    eax,eax
   14002bce5:	jmp    0x14002bcfa
   14002bce7:	call   0x140025380
   14002bcec:	mov    ebx,0x16
   14002bcf1:	mov    DWORD PTR [rax],ebx
   14002bcf3:	call   0x140024554
   14002bcf8:	mov    eax,ebx
   14002bcfa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bcff:	mov    rsi,QWORD PTR [rsp+0x38]
   14002bd04:	mov    rdi,QWORD PTR [rsp+0x40]
   14002bd09:	add    rsp,0x20
   14002bd0d:	pop    r14
   14002bd0f:	ret    
   14002bd10:	mov    QWORD PTR [rsp+0x10],rbx
   14002bd15:	mov    QWORD PTR [rsp+0x18],r8
   14002bd1a:	push   rbp
   14002bd1b:	push   rsi
   14002bd1c:	push   rdi
   14002bd1d:	push   r12
   14002bd1f:	push   r13
   14002bd21:	push   r14
   14002bd23:	push   r15
   14002bd25:	sub    rsp,0x20
   14002bd29:	mov    r14,QWORD PTR [rsp+0x98]
   14002bd31:	mov    r15,QWORD PTR [rsp+0x88]
   14002bd39:	mov    rdi,rcx
   14002bd3c:	mov    r12,rdx
   14002bd3f:	xor    edx,edx
   14002bd41:	mov    r13,r9
   14002bd44:	mov    ecx,edx
   14002bd46:	mov    DWORD PTR [rsp+0x60],edx
   14002bd4a:	mov    r10,r8
   14002bd4d:	test   rdi,rdi
   14002bd50:	je     0x14002bd5c
   14002bd52:	test   r12,r12
   14002bd55:	jne    0x14002bd66
   14002bd57:	test   r8,r8
   14002bd5a:	je     0x14002bd6b
   14002bd5c:	mov    ecx,0x1
   14002bd61:	jmp    0x14002bf29
   14002bd66:	test   r8,r8
   14002bd69:	je     0x14002bd5c
   14002bd6b:	test   r9,r9
   14002bd6e:	jne    0x14002bd7c
   14002bd70:	cmp    QWORD PTR [rsp+0x80],rdx
   14002bd78:	jne    0x14002bd5c
   14002bd7a:	jmp    0x14002bd86
   14002bd7c:	cmp    QWORD PTR [rsp+0x80],rdx
   14002bd84:	je     0x14002bd5c
   14002bd86:	test   r15,r15
   14002bd89:	jne    0x14002bd97
   14002bd8b:	cmp    QWORD PTR [rsp+0x90],rdx
   14002bd93:	jne    0x14002bd5c
   14002bd95:	jmp    0x14002bda1
   14002bd97:	cmp    QWORD PTR [rsp+0x90],rdx
   14002bd9f:	je     0x14002bd5c
   14002bda1:	test   r14,r14
   14002bda4:	jne    0x14002bdb2
   14002bda6:	cmp    QWORD PTR [rsp+0xa0],rdx
   14002bdae:	jne    0x14002bd5c
   14002bdb0:	jmp    0x14002bdbc
   14002bdb2:	cmp    QWORD PTR [rsp+0xa0],rdx
   14002bdba:	je     0x14002bd5c
   14002bdbc:	mov    eax,0x1
   14002bdc1:	mov    rbx,rdi
   14002bdc4:	cmp    BYTE PTR [rbx],dl
   14002bdc6:	je     0x14002bdd0
   14002bdc8:	inc    rbx
   14002bdcb:	dec    rax
   14002bdce:	jne    0x14002bdc4
   14002bdd0:	cmp    BYTE PTR [rbx],0x3a
   14002bdd3:	jne    0x14002be00
   14002bdd5:	test   r12,r12
   14002bdd8:	je     0x14002bdfa
   14002bdda:	cmp    r8,0x3
   14002bdde:	jb     0x14002bf29
   14002bde4:	mov    r9d,0x2
   14002bdea:	mov    r8,rdi
   14002bded:	mov    rdx,r10
   14002bdf0:	mov    rcx,r12
   14002bdf3:	call   0x140028c2c
   14002bdf8:	xor    edx,edx
   14002bdfa:	lea    rdi,[rbx+0x1]
   14002bdfe:	jmp    0x14002be09
   14002be00:	test   r12,r12
   14002be03:	je     0x14002be09
   14002be05:	mov    BYTE PTR [r12],dl
   14002be09:	mov    rbp,rdx
   14002be0c:	mov    rsi,rdx
   14002be0f:	mov    rbx,rdi
   14002be12:	cmp    BYTE PTR [rdi],dl
   14002be14:	je     0x14002be7f
   14002be16:	movsx  ecx,BYTE PTR [rbx]
   14002be19:	call   0x14002e118
   14002be1e:	xor    edx,edx
   14002be20:	test   eax,eax
   14002be22:	je     0x14002be29
   14002be24:	inc    rbx
   14002be27:	jmp    0x14002be40
   14002be29:	mov    al,BYTE PTR [rbx]
   14002be2b:	cmp    al,0x2f
   14002be2d:	je     0x14002be3c
   14002be2f:	cmp    al,0x5c
   14002be31:	je     0x14002be3c
   14002be33:	cmp    al,0x2e
   14002be35:	jne    0x14002be40
   14002be37:	mov    rsi,rbx
   14002be3a:	jmp    0x14002be40
   14002be3c:	lea    rbp,[rbx+0x1]
   14002be40:	inc    rbx
   14002be43:	cmp    BYTE PTR [rbx],dl
   14002be45:	jne    0x14002be16
   14002be47:	test   rbp,rbp
   14002be4a:	je     0x14002be7f
   14002be4c:	test   r13,r13
   14002be4f:	je     0x14002be7a
   14002be51:	mov    r9,rbp
   14002be54:	sub    r9,rdi
   14002be57:	cmp    QWORD PTR [rsp+0x80],r9
   14002be5f:	jbe    0x14002bf1c
   14002be65:	mov    rdx,QWORD PTR [rsp+0x80]
   14002be6d:	mov    r8,rdi
   14002be70:	mov    rcx,r13
   14002be73:	call   0x140028c2c
   14002be78:	xor    edx,edx
   14002be7a:	mov    rdi,rbp
   14002be7d:	jmp    0x14002be88
   14002be7f:	test   r13,r13
   14002be82:	je     0x14002be88
   14002be84:	mov    BYTE PTR [r13+0x0],dl
   14002be88:	test   rsi,rsi
   14002be8b:	je     0x14002bee6
   14002be8d:	cmp    rsi,rdi
   14002be90:	jb     0x14002bee6
   14002be92:	test   r15,r15
   14002be95:	je     0x14002bebc
   14002be97:	mov    r9,rsi
   14002be9a:	sub    r9,rdi
   14002be9d:	cmp    QWORD PTR [rsp+0x90],r9
   14002bea5:	jbe    0x14002bf20
   14002bea7:	mov    rdx,QWORD PTR [rsp+0x90]
   14002beaf:	mov    r8,rdi
   14002beb2:	mov    rcx,r15
   14002beb5:	call   0x140028c2c
   14002beba:	xor    edx,edx
   14002bebc:	test   r14,r14
   14002bebf:	je     0x14002bf18
   14002bec1:	sub    rbx,rsi
   14002bec4:	cmp    QWORD PTR [rsp+0xa0],rbx
   14002becc:	jbe    0x14002bf20
   14002bece:	mov    rdx,QWORD PTR [rsp+0xa0]
   14002bed6:	mov    r9,rbx
   14002bed9:	mov    r8,rsi
   14002bedc:	mov    rcx,r14
   14002bedf:	call   0x140028c2c
   14002bee4:	jmp    0x14002bf18
   14002bee6:	test   r15,r15
   14002bee9:	je     0x14002bf10
   14002beeb:	sub    rbx,rdi
   14002beee:	cmp    QWORD PTR [rsp+0x90],rbx
   14002bef6:	jbe    0x14002bf20
   14002bef8:	mov    rdx,QWORD PTR [rsp+0x90]
   14002bf00:	mov    r9,rbx
   14002bf03:	mov    r8,rdi
   14002bf06:	mov    rcx,r15
   14002bf09:	call   0x140028c2c
   14002bf0e:	xor    edx,edx
   14002bf10:	test   r14,r14
   14002bf13:	je     0x14002bf18
   14002bf15:	mov    BYTE PTR [r14],dl
   14002bf18:	xor    eax,eax
   14002bf1a:	jmp    0x14002bf9a
   14002bf1c:	mov    ecx,edx
   14002bf1e:	jmp    0x14002bf24
   14002bf20:	mov    ecx,DWORD PTR [rsp+0x60]
   14002bf24:	mov    r10,QWORD PTR [rsp+0x70]
   14002bf29:	test   r12,r12
   14002bf2c:	je     0x14002bf37
   14002bf2e:	test   r10,r10
   14002bf31:	je     0x14002bf37
   14002bf33:	mov    BYTE PTR [r12],dl
   14002bf37:	test   r13,r13
   14002bf3a:	je     0x14002bf4a
   14002bf3c:	cmp    QWORD PTR [rsp+0x80],rdx
   14002bf44:	jbe    0x14002bf4a
   14002bf46:	mov    BYTE PTR [r13+0x0],dl
   14002bf4a:	test   r15,r15
   14002bf4d:	je     0x14002bf5c
   14002bf4f:	cmp    QWORD PTR [rsp+0x90],rdx
   14002bf57:	jbe    0x14002bf5c
   14002bf59:	mov    BYTE PTR [r15],dl
   14002bf5c:	test   r14,r14
   14002bf5f:	je     0x14002bf6e
   14002bf61:	cmp    QWORD PTR [rsp+0xa0],rdx
   14002bf69:	jbe    0x14002bf6e
   14002bf6b:	mov    BYTE PTR [r14],dl
   14002bf6e:	test   rdi,rdi
   14002bf71:	jne    0x14002bf88
   14002bf73:	call   0x140025380
   14002bf78:	mov    ebx,0x16
   14002bf7d:	mov    DWORD PTR [rax],ebx
   14002bf7f:	call   0x140024554
   14002bf84:	mov    eax,ebx
   14002bf86:	jmp    0x14002bf9a
   14002bf88:	test   ecx,ecx
   14002bf8a:	jne    0x14002bf73
   14002bf8c:	call   0x140025380
   14002bf91:	mov    ecx,0x22
   14002bf96:	mov    DWORD PTR [rax],ecx
   14002bf98:	mov    eax,ecx
   14002bf9a:	mov    rbx,QWORD PTR [rsp+0x68]
   14002bf9f:	add    rsp,0x20
   14002bfa3:	pop    r15
   14002bfa5:	pop    r14
   14002bfa7:	pop    r13
   14002bfa9:	pop    r12
   14002bfab:	pop    rdi
   14002bfac:	pop    rsi
   14002bfad:	pop    rbp
   14002bfae:	ret    
   14002bfaf:	int3   
   14002bfb0:	rex push rbx
   14002bfb2:	sub    rsp,0x20
   14002bfb6:	mov    rax,r8
   14002bfb9:	test   r9,r9
   14002bfbc:	je     0x14002bff9
   14002bfbe:	test   rcx,rcx
   14002bfc1:	jne    0x14002bfd8
   14002bfc3:	call   0x140025380
   14002bfc8:	mov    ebx,0x16
   14002bfcd:	mov    DWORD PTR [rax],ebx
   14002bfcf:	call   0x140024554
   14002bfd4:	mov    eax,ebx
   14002bfd6:	jmp    0x14002bffb
   14002bfd8:	test   rax,rax
   14002bfdb:	je     0x14002bfc3
   14002bfdd:	cmp    rdx,r9
   14002bfe0:	jae    0x14002bfee
   14002bfe2:	call   0x140025380
   14002bfe7:	mov    ebx,0x22
   14002bfec:	jmp    0x14002bfcd
   14002bfee:	mov    r8,r9
   14002bff1:	mov    rdx,rax
   14002bff4:	call   0x140020e80
   14002bff9:	xor    eax,eax
   14002bffb:	add    rsp,0x20
   14002bfff:	pop    rbx
   14002c000:	ret    
   14002c001:	int3   
   14002c002:	int3   
   14002c003:	int3   
   14002c004:	jmp    0x14002e12c
   14002c009:	int3   
   14002c00a:	int3   
   14002c00b:	int3   
   14002c00c:	rex push rdi
   14002c00e:	sub    rsp,0x20
   14002c012:	mov    r10,r8
   14002c015:	xor    r8d,r8d
   14002c018:	test   r9,r9
   14002c01b:	jne    0x14002c021
   14002c01d:	xor    eax,eax
   14002c01f:	jmp    0x14002c080
   14002c021:	test   rcx,rcx
   14002c024:	jne    0x14002c03b
   14002c026:	call   0x140025380
   14002c02b:	mov    edi,0x16
   14002c030:	mov    DWORD PTR [rax],edi
   14002c032:	call   0x140024554
   14002c037:	mov    eax,edi
   14002c039:	jmp    0x14002c080
   14002c03b:	test   r10,r10
   14002c03e:	je     0x14002c053
   14002c040:	cmp    rdx,r9
   14002c043:	jb     0x14002c053
   14002c045:	lea    r8,[r9+r9*1]
   14002c049:	mov    rdx,r10
   14002c04c:	call   0x140020e80
   14002c051:	jmp    0x14002c01d
   14002c053:	test   rdx,rdx
   14002c056:	je     0x14002c065
   14002c058:	mov    rdi,rcx
   14002c05b:	movzx  eax,r8w
   14002c05f:	mov    rcx,rdx
   14002c062:	rep stos WORD PTR es:[rdi],ax
   14002c065:	test   r10,r10
   14002c068:	je     0x14002c026
   14002c06a:	cmp    rdx,r9
   14002c06d:	jae    0x14002c07b
   14002c06f:	call   0x140025380
   14002c074:	mov    edi,0x22
   14002c079:	jmp    0x14002c030
   14002c07b:	mov    eax,0x16
   14002c080:	add    rsp,0x20
   14002c084:	pop    rdi
   14002c085:	ret    
   14002c086:	int3   
   14002c087:	int3   
   14002c088:	mov    QWORD PTR [rsp+0x8],rbx
   14002c08d:	mov    QWORD PTR [rsp+0x10],rsi
   14002c092:	mov    QWORD PTR [rsp+0x18],rdi
   14002c097:	push   rbp
   14002c098:	push   r14
   14002c09a:	push   r15
   14002c09c:	mov    rbp,rsp
   14002c09f:	sub    rsp,0x50
   14002c0a3:	xor    ebx,ebx
   14002c0a5:	mov    r14,r8
   14002c0a8:	mov    r15,rcx
   14002c0ab:	mov    rdi,rdx
   14002c0ae:	lea    rcx,[rbp-0x28]
   14002c0b2:	lea    r8d,[rbx+0x28]
   14002c0b6:	xor    edx,edx
   14002c0b8:	mov    rsi,r9
   14002c0bb:	mov    QWORD PTR [rbp-0x30],rbx
   14002c0bf:	call   0x1400260e0
   14002c0c4:	test   rsi,rsi
   14002c0c7:	jne    0x14002c0e1
   14002c0c9:	call   0x140025380
   14002c0ce:	mov    DWORD PTR [rax],0x16
   14002c0d4:	call   0x140024554
   14002c0d9:	or     eax,0xffffffff
   14002c0dc:	jmp    0x14002c188
   14002c0e1:	test   r14,r14
   14002c0e4:	je     0x14002c0eb
   14002c0e6:	test   rdi,rdi
   14002c0e9:	je     0x14002c0c9
   14002c0eb:	mov    DWORD PTR [rbp-0x18],0x42
   14002c0f2:	mov    QWORD PTR [rbp-0x20],rdi
   14002c0f6:	mov    QWORD PTR [rbp-0x30],rdi
   14002c0fa:	cmp    r14,0x3fffffff
   14002c101:	jbe    0x14002c10c
   14002c103:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14002c10a:	jmp    0x14002c113
   14002c10c:	lea    eax,[r14+r14*1]
   14002c110:	mov    DWORD PTR [rbp-0x28],eax
   14002c113:	mov    r9,QWORD PTR [rbp+0x48]
   14002c117:	mov    r8,QWORD PTR [rbp+0x40]
   14002c11b:	lea    rcx,[rbp-0x30]
   14002c11f:	mov    rdx,rsi
   14002c122:	call   r15
   14002c125:	mov    esi,eax
   14002c127:	test   rdi,rdi
   14002c12a:	je     0x14002c188
   14002c12c:	test   eax,eax
   14002c12e:	js     0x14002c179
   14002c130:	dec    DWORD PTR [rbp-0x28]
   14002c133:	js     0x14002c148
   14002c135:	mov    rax,QWORD PTR [rbp-0x30]
   14002c139:	mov    BYTE PTR [rax],bl
   14002c13b:	mov    rax,QWORD PTR [rbp-0x30]
   14002c13f:	inc    rax
   14002c142:	mov    QWORD PTR [rbp-0x30],rax
   14002c146:	jmp    0x14002c15c
   14002c148:	lea    rdx,[rbp-0x30]
   14002c14c:	xor    ecx,ecx
   14002c14e:	call   0x1400253f0
   14002c153:	cmp    eax,0xffffffff
   14002c156:	je     0x14002c179
   14002c158:	mov    rax,QWORD PTR [rbp-0x30]
   14002c15c:	dec    DWORD PTR [rbp-0x28]
   14002c15f:	js     0x14002c165
   14002c161:	mov    BYTE PTR [rax],bl
   14002c163:	jmp    0x14002c175
   14002c165:	lea    rdx,[rbp-0x30]
   14002c169:	xor    ecx,ecx
   14002c16b:	call   0x1400253f0
   14002c170:	cmp    eax,0xffffffff
   14002c173:	je     0x14002c179
   14002c175:	mov    eax,esi
   14002c177:	jmp    0x14002c188
   14002c179:	cmp    DWORD PTR [rbp-0x28],ebx
   14002c17c:	mov    WORD PTR [rdi+r14*2-0x2],bx
   14002c182:	setge  bl
   14002c185:	lea    eax,[rbx-0x2]
   14002c188:	lea    r11,[rsp+0x50]
   14002c18d:	mov    rbx,QWORD PTR [r11+0x20]
   14002c191:	mov    rsi,QWORD PTR [r11+0x28]
   14002c195:	mov    rdi,QWORD PTR [r11+0x30]
   14002c199:	mov    rsp,r11
   14002c19c:	pop    r15
   14002c19e:	pop    r14
   14002c1a0:	pop    rbp
   14002c1a1:	ret    
   14002c1a2:	int3   
   14002c1a3:	int3   
   14002c1a4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c1a9:	push   rdi
   14002c1aa:	sub    rsp,0x30
   14002c1ae:	xor    edi,edi
   14002c1b0:	mov    rbx,rcx
   14002c1b3:	test   r8,r8
   14002c1b6:	je     0x14002c1ff
   14002c1b8:	test   rcx,rcx
   14002c1bb:	je     0x14002c1ff
   14002c1bd:	test   rdx,rdx
   14002c1c0:	je     0x14002c1ff
   14002c1c2:	mov    rax,QWORD PTR [rsp+0x60]
   14002c1c7:	mov    QWORD PTR [rsp+0x28],rax
   14002c1cc:	mov    QWORD PTR [rsp+0x20],r9
   14002c1d1:	mov    r9,r8
   14002c1d4:	mov    r8,rdx
   14002c1d7:	mov    rdx,rcx
   14002c1da:	lea    rcx,[rip+0x1f6b]        # 0x14002e14c
   14002c1e1:	call   0x14002c088
   14002c1e6:	test   eax,eax
   14002c1e8:	jns    0x14002c1ed
   14002c1ea:	mov    WORD PTR [rbx],di
   14002c1ed:	cmp    eax,0xfffffffe
   14002c1f0:	jne    0x14002c212
   14002c1f2:	call   0x140025380
   14002c1f7:	mov    DWORD PTR [rax],0x22
   14002c1fd:	jmp    0x14002c20a
   14002c1ff:	call   0x140025380
   14002c204:	mov    DWORD PTR [rax],0x16
   14002c20a:	call   0x140024554
   14002c20f:	or     eax,0xffffffff
   14002c212:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c217:	add    rsp,0x30
   14002c21b:	pop    rdi
   14002c21c:	ret    
   14002c21d:	int3   
   14002c21e:	int3   
   14002c21f:	int3   
   14002c220:	mov    QWORD PTR [rsp+0x8],rbx
   14002c225:	mov    QWORD PTR [rsp+0x10],rsi
   14002c22a:	push   rdi
   14002c22b:	sub    rsp,0x20
   14002c22f:	mov    rbx,r9
   14002c232:	mov    rsi,r8
   14002c235:	mov    rdi,rdx
   14002c238:	test   r9,r9
   14002c23b:	jne    0x14002c241
   14002c23d:	xor    eax,eax
   14002c23f:	jmp    0x14002c297
   14002c241:	test   rcx,rcx
   14002c244:	jne    0x14002c25b
   14002c246:	call   0x140025380
   14002c24b:	mov    ebx,0x16
   14002c250:	mov    DWORD PTR [rax],ebx
   14002c252:	call   0x140024554
   14002c257:	mov    eax,ebx
   14002c259:	jmp    0x14002c297
   14002c25b:	test   r8,r8
   14002c25e:	je     0x14002c272
   14002c260:	cmp    rdx,rbx
   14002c263:	jb     0x14002c272
   14002c265:	mov    r8,rbx
   14002c268:	mov    rdx,rsi
   14002c26b:	call   0x140020e80
   14002c270:	jmp    0x14002c23d
   14002c272:	mov    r8,rdx
   14002c275:	xor    edx,edx
   14002c277:	call   0x1400260e0
   14002c27c:	test   rsi,rsi
   14002c27f:	je     0x14002c246
   14002c281:	cmp    rdi,rbx
   14002c284:	jae    0x14002c292
   14002c286:	call   0x140025380
   14002c28b:	mov    ebx,0x22
   14002c290:	jmp    0x14002c250
   14002c292:	mov    eax,0x16
   14002c297:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c29c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c2a1:	add    rsp,0x20
   14002c2a5:	pop    rdi
   14002c2a6:	ret    
   14002c2a7:	int3   
   14002c2a8:	mov    QWORD PTR [rsp+0x10],rbx
   14002c2ad:	mov    QWORD PTR [rsp+0x18],r8
   14002c2b2:	push   rbp
   14002c2b3:	push   rsi
   14002c2b4:	push   rdi
   14002c2b5:	push   r12
   14002c2b7:	push   r13
   14002c2b9:	push   r14
   14002c2bb:	push   r15
   14002c2bd:	sub    rsp,0x20
   14002c2c1:	mov    r14,QWORD PTR [rsp+0x98]
   14002c2c9:	mov    r15,QWORD PTR [rsp+0x88]
   14002c2d1:	mov    rdi,rcx
   14002c2d4:	xor    ecx,ecx
   14002c2d6:	mov    r13,r9
   14002c2d9:	mov    rsi,r8
   14002c2dc:	mov    r9d,ecx
   14002c2df:	mov    DWORD PTR [rsp+0x60],ecx
   14002c2e3:	mov    r12,rdx
   14002c2e6:	test   rdi,rdi
   14002c2e9:	je     0x14002c2f5
   14002c2eb:	test   rdx,rdx
   14002c2ee:	jne    0x14002c300
   14002c2f0:	test   r8,r8
   14002c2f3:	je     0x14002c305
   14002c2f5:	mov    r9d,0x1
   14002c2fb:	jmp    0x14002c4cd
   14002c300:	test   r8,r8
   14002c303:	je     0x14002c2f5
   14002c305:	test   r13,r13
   14002c308:	jne    0x14002c316
   14002c30a:	cmp    QWORD PTR [rsp+0x80],rcx
   14002c312:	jne    0x14002c2f5
   14002c314:	jmp    0x14002c320
   14002c316:	cmp    QWORD PTR [rsp+0x80],rcx
   14002c31e:	je     0x14002c2f5
   14002c320:	test   r15,r15
   14002c323:	jne    0x14002c331
   14002c325:	cmp    QWORD PTR [rsp+0x90],rcx
   14002c32d:	jne    0x14002c2f5
   14002c32f:	jmp    0x14002c33b
   14002c331:	cmp    QWORD PTR [rsp+0x90],rcx
   14002c339:	je     0x14002c2f5
   14002c33b:	test   r14,r14
   14002c33e:	jne    0x14002c34c
   14002c340:	cmp    QWORD PTR [rsp+0xa0],rcx
   14002c348:	jne    0x14002c2f5
   14002c34a:	jmp    0x14002c356
   14002c34c:	cmp    QWORD PTR [rsp+0xa0],rcx
   14002c354:	je     0x14002c2f5
   14002c356:	mov    eax,0x1
   14002c35b:	mov    rbx,rdi
   14002c35e:	cmp    WORD PTR [rbx],cx
   14002c361:	je     0x14002c36c
   14002c363:	add    rbx,0x2
   14002c367:	dec    rax
   14002c36a:	jne    0x14002c35e
   14002c36c:	cmp    WORD PTR [rbx],0x3a
   14002c370:	jne    0x14002c39d
   14002c372:	test   rdx,rdx
   14002c375:	je     0x14002c397
   14002c377:	cmp    r8,0x3
   14002c37b:	jb     0x14002c4cd
   14002c381:	mov    r9d,0x2
   14002c387:	mov    r8,rdi
   14002c38a:	mov    rdx,rsi
   14002c38d:	mov    rcx,r12
   14002c390:	call   0x140027a98
   14002c395:	xor    ecx,ecx
   14002c397:	lea    rdi,[rbx+0x2]
   14002c39b:	jmp    0x14002c3a5
   14002c39d:	test   rdx,rdx
   14002c3a0:	je     0x14002c3a5
   14002c3a2:	mov    WORD PTR [rdx],cx
   14002c3a5:	movzx  eax,WORD PTR [rdi]
   14002c3a8:	mov    rbp,rcx
   14002c3ab:	mov    rsi,rcx
   14002c3ae:	mov    rbx,rdi
   14002c3b1:	test   ax,ax
   14002c3b4:	je     0x14002c418
   14002c3b6:	cmp    ax,0x2f
   14002c3ba:	je     0x14002c3cd
   14002c3bc:	cmp    ax,0x5c
   14002c3c0:	je     0x14002c3cd
   14002c3c2:	cmp    ax,0x2e
   14002c3c6:	jne    0x14002c3d1
   14002c3c8:	mov    rsi,rbx
   14002c3cb:	jmp    0x14002c3d1
   14002c3cd:	lea    rbp,[rbx+0x2]
   14002c3d1:	add    rbx,0x2
   14002c3d5:	movzx  eax,WORD PTR [rbx]
   14002c3d8:	test   ax,ax
   14002c3db:	jne    0x14002c3b6
   14002c3dd:	test   rbp,rbp
   14002c3e0:	je     0x14002c418
   14002c3e2:	test   r13,r13
   14002c3e5:	je     0x14002c413
   14002c3e7:	mov    r9,rbp
   14002c3ea:	sub    r9,rdi
   14002c3ed:	sar    r9,1
   14002c3f0:	cmp    QWORD PTR [rsp+0x80],r9
   14002c3f8:	jbe    0x14002c4c3
   14002c3fe:	mov    rdx,QWORD PTR [rsp+0x80]
   14002c406:	mov    r8,rdi
   14002c409:	mov    rcx,r13
   14002c40c:	call   0x140027a98
   14002c411:	xor    ecx,ecx
   14002c413:	mov    rdi,rbp
   14002c416:	jmp    0x14002c422
   14002c418:	test   r13,r13
   14002c41b:	je     0x14002c422
   14002c41d:	mov    WORD PTR [r13+0x0],cx
   14002c422:	test   rsi,rsi
   14002c425:	je     0x14002c486
   14002c427:	cmp    rsi,rdi
   14002c42a:	jb     0x14002c486
   14002c42c:	test   r15,r15
   14002c42f:	je     0x14002c459
   14002c431:	mov    r9,rsi
   14002c434:	sub    r9,rdi
   14002c437:	sar    r9,1
   14002c43a:	cmp    QWORD PTR [rsp+0x90],r9
   14002c442:	jbe    0x14002c4c3
   14002c444:	mov    rdx,QWORD PTR [rsp+0x90]
   14002c44c:	mov    r8,rdi
   14002c44f:	mov    rcx,r15
   14002c452:	call   0x140027a98
   14002c457:	xor    ecx,ecx
   14002c459:	test   r14,r14
   14002c45c:	je     0x14002c4bc
   14002c45e:	sub    rbx,rsi
   14002c461:	sar    rbx,1
   14002c464:	cmp    QWORD PTR [rsp+0xa0],rbx
   14002c46c:	jbe    0x14002c4c3
   14002c46e:	mov    rdx,QWORD PTR [rsp+0xa0]
   14002c476:	mov    r9,rbx
   14002c479:	mov    r8,rsi
   14002c47c:	mov    rcx,r14
   14002c47f:	call   0x140027a98
   14002c484:	jmp    0x14002c4bc
   14002c486:	test   r15,r15
   14002c489:	je     0x14002c4b3
   14002c48b:	sub    rbx,rdi
   14002c48e:	sar    rbx,1
   14002c491:	cmp    QWORD PTR [rsp+0x90],rbx
   14002c499:	jbe    0x14002c4c3
   14002c49b:	mov    rdx,QWORD PTR [rsp+0x90]
   14002c4a3:	mov    r9,rbx
   14002c4a6:	mov    r8,rdi
   14002c4a9:	mov    rcx,r15
   14002c4ac:	call   0x140027a98
   14002c4b1:	xor    ecx,ecx
   14002c4b3:	test   r14,r14
   14002c4b6:	je     0x14002c4bc
   14002c4b8:	mov    WORD PTR [r14],cx
   14002c4bc:	xor    eax,eax
   14002c4be:	jmp    0x14002c543
   14002c4c3:	mov    r9d,DWORD PTR [rsp+0x60]
   14002c4c8:	mov    rsi,QWORD PTR [rsp+0x70]
   14002c4cd:	test   r12,r12
   14002c4d0:	je     0x14002c4dc
   14002c4d2:	test   rsi,rsi
   14002c4d5:	je     0x14002c4dc
   14002c4d7:	mov    WORD PTR [r12],cx
   14002c4dc:	test   r13,r13
   14002c4df:	je     0x14002c4f0
   14002c4e1:	cmp    QWORD PTR [rsp+0x80],rcx
   14002c4e9:	jbe    0x14002c4f0
   14002c4eb:	mov    WORD PTR [r13+0x0],cx
   14002c4f0:	test   r15,r15
   14002c4f3:	je     0x14002c503
   14002c4f5:	cmp    QWORD PTR [rsp+0x90],rcx
   14002c4fd:	jbe    0x14002c503
   14002c4ff:	mov    WORD PTR [r15],cx
   14002c503:	test   r14,r14
   14002c506:	je     0x14002c516
   14002c508:	cmp    QWORD PTR [rsp+0xa0],rcx
   14002c510:	jbe    0x14002c516
   14002c512:	mov    WORD PTR [r14],cx
   14002c516:	test   rdi,rdi
   14002c519:	jne    0x14002c530
   14002c51b:	call   0x140025380
   14002c520:	mov    ebx,0x16
   14002c525:	mov    DWORD PTR [rax],ebx
   14002c527:	call   0x140024554
   14002c52c:	mov    eax,ebx
   14002c52e:	jmp    0x14002c543
   14002c530:	test   r9d,r9d
   14002c533:	jne    0x14002c51b
   14002c535:	call   0x140025380
   14002c53a:	mov    ecx,0x22
   14002c53f:	mov    DWORD PTR [rax],ecx
   14002c541:	mov    eax,ecx
   14002c543:	mov    rbx,QWORD PTR [rsp+0x68]
   14002c548:	add    rsp,0x20
   14002c54c:	pop    r15
   14002c54e:	pop    r14
   14002c550:	pop    r13
   14002c552:	pop    r12
   14002c554:	pop    rdi
   14002c555:	pop    rsi
   14002c556:	pop    rbp
   14002c557:	ret    
   14002c558:	mov    r11,rsp
   14002c55b:	mov    QWORD PTR [r11+0x18],r8
   14002c55f:	mov    QWORD PTR [r11+0x20],r9
   14002c563:	sub    rsp,0x38
   14002c567:	lea    rax,[r11+0x20]
   14002c56b:	xor    r9d,r9d
   14002c56e:	mov    QWORD PTR [r11-0x18],rax
   14002c572:	call   0x14002c1a4
   14002c577:	add    rsp,0x38
   14002c57b:	ret    
   14002c57c:	test   rcx,rcx
   14002c57f:	je     0x14002c5e9
   14002c581:	mov    BYTE PTR [rsp+0x10],dl
   14002c585:	sub    rsp,0x28
   14002c589:	cmp    DWORD PTR [rcx],0xe06d7363
   14002c58f:	jne    0x14002c5e5
   14002c591:	cmp    DWORD PTR [rcx+0x18],0x4
   14002c595:	jne    0x14002c5e5
   14002c597:	mov    eax,DWORD PTR [rcx+0x20]
   14002c59a:	sub    eax,0x19930520
   14002c59f:	cmp    eax,0x2
   14002c5a2:	ja     0x14002c5e5
   14002c5a4:	mov    rax,QWORD PTR [rcx+0x30]
   14002c5a8:	test   rax,rax
   14002c5ab:	je     0x14002c5e5
   14002c5ad:	movsxd rdx,DWORD PTR [rax+0x4]
   14002c5b1:	test   edx,edx
   14002c5b3:	je     0x14002c5ce
   14002c5b5:	mov    rax,rdx
   14002c5b8:	mov    rdx,QWORD PTR [rcx+0x38]
   14002c5bc:	add    rdx,rax
   14002c5bf:	mov    rcx,QWORD PTR [rcx+0x28]
   14002c5c3:	call   rdx
   14002c5c5:	nop
   14002c5c6:	jmp    0x14002c5e5
   14002c5c8:	call   0x1400266e8
   14002c5cd:	nop
   14002c5ce:	test   BYTE PTR [rax],0x10
   14002c5d1:	je     0x14002c5e5
   14002c5d3:	mov    rax,QWORD PTR [rcx+0x28]
   14002c5d7:	mov    rcx,QWORD PTR [rax]
   14002c5da:	test   rcx,rcx
   14002c5dd:	je     0x14002c5e5
   14002c5df:	mov    rax,QWORD PTR [rcx]
   14002c5e2:	call   QWORD PTR [rax+0x10]
   14002c5e5:	add    rsp,0x28
   14002c5e9:	ret    
   14002c5ea:	int3   
   14002c5eb:	int3   
   14002c5ec:	rex push rbx
   14002c5ee:	sub    rsp,0x20
   14002c5f2:	mov    rbx,rcx
   14002c5f5:	call   0x140026458
   14002c5fa:	lea    rax,[rip+0x10b77]        # 0x14003d178
   14002c601:	mov    QWORD PTR [rbx],rax
   14002c604:	mov    rax,rbx
   14002c607:	add    rsp,0x20
   14002c60b:	pop    rbx
   14002c60c:	ret    
   14002c60d:	int3   
   14002c60e:	int3   
   14002c60f:	int3   
   14002c610:	lea    rax,[rip+0x10b61]        # 0x14003d178
   14002c617:	mov    QWORD PTR [rcx],rax
   14002c61a:	jmp    0x140026484
   14002c61f:	int3   
   14002c620:	mov    QWORD PTR [rsp+0x8],rbx
   14002c625:	push   rdi
   14002c626:	sub    rsp,0x20
   14002c62a:	lea    rax,[rip+0x10b47]        # 0x14003d178
   14002c631:	mov    ebx,edx
   14002c633:	mov    rdi,rcx
   14002c636:	mov    QWORD PTR [rcx],rax
   14002c639:	call   0x140026484
   14002c63e:	test   bl,0x1
   14002c641:	je     0x14002c64b
   14002c643:	mov    rcx,rdi
   14002c646:	call   0x140020e30
   14002c64b:	mov    rax,rdi
   14002c64e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c653:	add    rsp,0x20
   14002c657:	pop    rdi
   14002c658:	ret    
   14002c659:	int3   
   14002c65a:	int3   
   14002c65b:	int3   
   14002c65c:	mov    rax,rsp
   14002c65f:	mov    QWORD PTR [rax+0x8],rbx
   14002c663:	mov    QWORD PTR [rax+0x18],rbp
   14002c667:	push   rsi
   14002c668:	push   rdi
   14002c669:	push   r12
   14002c66b:	push   r14
   14002c66d:	push   r15
   14002c66f:	sub    rsp,0x50
   14002c673:	mov    r15,QWORD PTR [rsp+0xa0]
   14002c67b:	mov    rbp,r9
   14002c67e:	mov    r14,rdx
   14002c681:	mov    r12,r8
   14002c684:	mov    rbx,rcx
   14002c687:	lea    r9,[rax+0x10]
   14002c68b:	mov    r8,r15
   14002c68e:	mov    rdx,rbp
   14002c691:	mov    rcx,r14
   14002c694:	call   0x14002a9dc
   14002c699:	mov    r9,QWORD PTR [rsp+0xb0]
   14002c6a1:	mov    rsi,QWORD PTR [rsp+0xa8]
   14002c6a9:	mov    rdi,rax
   14002c6ac:	test   r9,r9
   14002c6af:	je     0x14002c6bf
   14002c6b1:	mov    r8,rsi
   14002c6b4:	mov    rdx,rax
   14002c6b7:	mov    rcx,rbx
   14002c6ba:	call   0x14002cf38
   14002c6bf:	call   0x14002ae04
   14002c6c4:	movsxd rcx,DWORD PTR [rsi+0xc]
   14002c6c8:	mov    r9,rdi
   14002c6cb:	add    rax,rcx
   14002c6ce:	mov    cl,BYTE PTR [rsp+0xd8]
   14002c6d5:	mov    r8,r12
   14002c6d8:	mov    BYTE PTR [rsp+0x40],cl
   14002c6dc:	mov    rcx,QWORD PTR [rsp+0xb8]
   14002c6e4:	mov    QWORD PTR [rsp+0x38],rbp
   14002c6e9:	mov    edx,DWORD PTR [rcx]
   14002c6eb:	mov    QWORD PTR [rsp+0x30],r15
   14002c6f0:	mov    rcx,r14
   14002c6f3:	mov    DWORD PTR [rsp+0x28],edx
   14002c6f7:	mov    rdx,rbx
   14002c6fa:	mov    QWORD PTR [rsp+0x20],rax
   14002c6ff:	call   0x14002aea0
   14002c704:	lea    r11,[rsp+0x50]
   14002c709:	mov    rbx,QWORD PTR [r11+0x30]
   14002c70d:	mov    rbp,QWORD PTR [r11+0x40]
   14002c711:	mov    rsp,r11
   14002c714:	pop    r15
   14002c716:	pop    r14
   14002c718:	pop    r12
   14002c71a:	pop    rdi
   14002c71b:	pop    rsi
   14002c71c:	ret    
   14002c71d:	int3   
   14002c71e:	int3   
   14002c71f:	int3   
   14002c720:	mov    QWORD PTR [rsp+0x10],rbx
   14002c725:	mov    QWORD PTR [rsp+0x18],r8
   14002c72a:	push   rbp
   14002c72b:	push   rsi
   14002c72c:	push   rdi
   14002c72d:	push   r12
   14002c72f:	push   r13
   14002c731:	push   r14
   14002c733:	push   r15
   14002c735:	lea    rbp,[rsp-0x7]
   14002c73a:	sub    rsp,0xb0
   14002c741:	mov    rbx,QWORD PTR [rbp+0x67]
   14002c745:	mov    r13,rdx
   14002c748:	mov    rdi,rcx
   14002c74b:	xor    r12d,r12d
   14002c74e:	mov    rdx,r9
   14002c751:	mov    rcx,rbx
   14002c754:	mov    r15,r9
   14002c757:	mov    r14,r8
   14002c75a:	mov    BYTE PTR [rbp+0x47],r12b
   14002c75e:	mov    BYTE PTR [rbp-0x49],r12b
   14002c762:	call   0x14002d9bc
   14002c767:	lea    r9,[rbp-0x21]
   14002c76b:	mov    r8,rbx
   14002c76e:	mov    rdx,r15
   14002c771:	mov    rcx,r13
   14002c774:	mov    esi,eax
   14002c776:	call   0x14002a9dc
   14002c77b:	mov    r8,rbx
   14002c77e:	mov    rdx,r15
   14002c781:	mov    rcx,r13
   14002c784:	call   0x14002d948
   14002c789:	mov    r8,rbx
   14002c78c:	mov    rdx,r15
   14002c78f:	cmp    esi,eax
   14002c791:	jle    0x14002c7b2
   14002c793:	lea    rcx,[rbp-0x21]
   14002c797:	mov    r9d,esi
   14002c79a:	call   0x14002d974
   14002c79f:	mov    r9d,esi
   14002c7a2:	mov    r8,rbx
   14002c7a5:	mov    rdx,r15
   14002c7a8:	mov    rcx,r13
   14002c7ab:	call   0x14002d980
   14002c7b0:	jmp    0x14002c7bc
   14002c7b2:	mov    rcx,r13
   14002c7b5:	call   0x14002d948
   14002c7ba:	mov    esi,eax
   14002c7bc:	cmp    esi,0xffffffff
   14002c7bf:	jl     0x14002c7c6
   14002c7c1:	cmp    esi,DWORD PTR [rbx+0x4]
   14002c7c4:	jl     0x14002c7cb
   14002c7c6:	call   0x1400266c8
   14002c7cb:	cmp    DWORD PTR [rdi],0xe06d7363
   14002c7d1:	jne    0x14002cb52
   14002c7d7:	cmp    DWORD PTR [rdi+0x18],0x4
   14002c7db:	jne    0x14002c918
   14002c7e1:	mov    eax,DWORD PTR [rdi+0x20]
   14002c7e4:	sub    eax,0x19930520
   14002c7e9:	cmp    eax,0x2
   14002c7ec:	ja     0x14002c918
   14002c7f2:	cmp    QWORD PTR [rdi+0x30],r12
   14002c7f6:	jne    0x14002c918
   14002c7fc:	call   0x140021ed4
   14002c801:	cmp    QWORD PTR [rax+0xf0],r12
   14002c808:	je     0x14002cb37
   14002c80e:	call   0x140021ed4
   14002c813:	mov    rdi,QWORD PTR [rax+0xf0]
   14002c81a:	call   0x140021ed4
   14002c81f:	mov    rcx,QWORD PTR [rdi+0x38]
   14002c823:	mov    r14,QWORD PTR [rax+0xf8]
   14002c82a:	mov    BYTE PTR [rbp+0x47],0x1
   14002c82e:	mov    QWORD PTR [rbp+0x57],r14
   14002c832:	call   0x14002ae84
   14002c837:	mov    edx,0x1
   14002c83c:	mov    rcx,rdi
   14002c83f:	call   0x14002ecdc
   14002c844:	test   eax,eax
   14002c846:	jne    0x14002c84d
   14002c848:	call   0x1400266c8
   14002c84d:	cmp    DWORD PTR [rdi],0xe06d7363
   14002c853:	jne    0x14002c873
   14002c855:	cmp    DWORD PTR [rdi+0x18],0x4
   14002c859:	jne    0x14002c873
   14002c85b:	mov    eax,DWORD PTR [rdi+0x20]
   14002c85e:	sub    eax,0x19930520
   14002c863:	cmp    eax,0x2
   14002c866:	ja     0x14002c873
   14002c868:	cmp    QWORD PTR [rdi+0x30],r12
   14002c86c:	jne    0x14002c873
   14002c86e:	call   0x1400266c8
   14002c873:	call   0x140021ed4
   14002c878:	cmp    QWORD PTR [rax+0x108],r12
   14002c87f:	je     0x14002c918
   14002c885:	call   0x140021ed4
   14002c88a:	mov    r14,QWORD PTR [rax+0x108]
   14002c891:	call   0x140021ed4
   14002c896:	mov    rdx,r14
   14002c899:	mov    rcx,rdi
   14002c89c:	mov    QWORD PTR [rax+0x108],r12
   14002c8a3:	call   0x14002ce3c
   14002c8a8:	test   al,al
   14002c8aa:	jne    0x14002c914
   14002c8ac:	mov    r15d,r12d
   14002c8af:	cmp    DWORD PTR [r14],r12d
   14002c8b2:	jle    0x14002cb8a
   14002c8b8:	mov    rsi,r12
   14002c8bb:	call   0x14002ae04
   14002c8c0:	movsxd rcx,DWORD PTR [r14+0x4]
   14002c8c4:	add    rax,rsi
   14002c8c7:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14002c8cc:	je     0x14002c8e9
   14002c8ce:	call   0x14002ae04
   14002c8d3:	movsxd rcx,DWORD PTR [r14+0x4]
   14002c8d7:	add    rax,rsi
   14002c8da:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002c8df:	call   0x14002ae04
   14002c8e4:	add    rax,rbx
   14002c8e7:	jmp    0x14002c8ec
   14002c8e9:	mov    rax,r12
   14002c8ec:	lea    rdx,[rip+0x21a3d]        # 0x14004e330
   14002c8f3:	mov    rcx,rax
   14002c8f6:	call   0x140021a08
   14002c8fb:	test   al,al
   14002c8fd:	jne    0x14002cb90
   14002c903:	inc    r15d
   14002c906:	add    rsi,0x14
   14002c90a:	cmp    r15d,DWORD PTR [r14]
   14002c90d:	jl     0x14002c8bb
   14002c90f:	jmp    0x14002cb8a
   14002c914:	mov    r14,QWORD PTR [rbp+0x57]
   14002c918:	cmp    DWORD PTR [rdi],0xe06d7363
   14002c91e:	jne    0x14002cb52
   14002c924:	cmp    DWORD PTR [rdi+0x18],0x4
   14002c928:	jne    0x14002cb52
   14002c92e:	mov    eax,DWORD PTR [rdi+0x20]
   14002c931:	sub    eax,0x19930520
   14002c936:	cmp    eax,0x2
   14002c939:	ja     0x14002cb52
   14002c93f:	cmp    DWORD PTR [rbx+0xc],r12d
   14002c943:	jbe    0x14002ca97
   14002c949:	mov    r8d,DWORD PTR [rbp+0x77]
   14002c94d:	lea    rax,[rbp-0x41]
   14002c951:	mov    QWORD PTR [rsp+0x30],r15
   14002c956:	mov    QWORD PTR [rsp+0x28],rax
   14002c95b:	lea    rax,[rbp-0x45]
   14002c95f:	mov    r9d,esi
   14002c962:	mov    rdx,rbx
   14002c965:	mov    rcx,r13
   14002c968:	mov    QWORD PTR [rsp+0x20],rax
   14002c96d:	call   0x14002aaa8
   14002c972:	mov    ecx,DWORD PTR [rbp-0x45]
   14002c975:	mov    edx,DWORD PTR [rbp-0x41]
   14002c978:	cmp    ecx,edx
   14002c97a:	jae    0x14002ca97
   14002c980:	lea    r14,[rax+0x10]
   14002c984:	cmp    DWORD PTR [r14-0x10],esi
   14002c988:	jg     0x14002ca79
   14002c98e:	cmp    esi,DWORD PTR [r14-0xc]
   14002c992:	jg     0x14002ca79
   14002c998:	call   0x14002ae04
   14002c99d:	movsxd r12,DWORD PTR [r14]
   14002c9a0:	add    r12,rax
   14002c9a3:	mov    eax,DWORD PTR [r14-0x4]
   14002c9a7:	mov    DWORD PTR [rbp-0x3d],eax
   14002c9aa:	test   eax,eax
   14002c9ac:	jle    0x14002ca73
   14002c9b2:	call   0x14002ae1c
   14002c9b7:	mov    rcx,QWORD PTR [rdi+0x30]
   14002c9bb:	movsxd rdx,DWORD PTR [rcx+0xc]
   14002c9bf:	add    rax,0x4
   14002c9c3:	add    rax,rdx
   14002c9c6:	mov    QWORD PTR [rbp-0x31],rax
   14002c9ca:	call   0x14002ae1c
   14002c9cf:	mov    rcx,QWORD PTR [rdi+0x30]
   14002c9d3:	movsxd rdx,DWORD PTR [rcx+0xc]
   14002c9d7:	mov    ecx,DWORD PTR [rax+rdx*1]
   14002c9da:	mov    DWORD PTR [rbp-0x39],ecx
   14002c9dd:	test   ecx,ecx
   14002c9df:	jle    0x14002ca18
   14002c9e1:	call   0x14002ae1c
   14002c9e6:	mov    rcx,QWORD PTR [rbp-0x31]
   14002c9ea:	mov    r8,QWORD PTR [rdi+0x30]
   14002c9ee:	movsxd rcx,DWORD PTR [rcx]
   14002c9f1:	add    rax,rcx
   14002c9f4:	mov    rcx,r12
   14002c9f7:	mov    rdx,rax
   14002c9fa:	mov    QWORD PTR [rbp-0x29],rax
   14002c9fe:	call   0x14002d800
   14002ca03:	test   eax,eax
   14002ca05:	jne    0x14002ca23
   14002ca07:	mov    eax,DWORD PTR [rbp-0x39]
   14002ca0a:	add    QWORD PTR [rbp-0x31],0x4
   14002ca0f:	dec    eax
   14002ca11:	mov    DWORD PTR [rbp-0x39],eax
   14002ca14:	test   eax,eax
   14002ca16:	jg     0x14002c9e1
   14002ca18:	mov    eax,DWORD PTR [rbp-0x3d]
   14002ca1b:	dec    eax
   14002ca1d:	add    r12,0x14
   14002ca21:	jmp    0x14002c9a7
   14002ca23:	mov    al,BYTE PTR [rbp+0x6f]
   14002ca26:	mov    r8,QWORD PTR [rbp+0x57]
   14002ca2a:	mov    r9,r15
   14002ca2d:	mov    BYTE PTR [rsp+0x58],al
   14002ca31:	mov    al,BYTE PTR [rbp+0x47]
   14002ca34:	mov    rdx,r13
   14002ca37:	mov    BYTE PTR [rsp+0x50],al
   14002ca3b:	mov    rax,QWORD PTR [rbp+0x7f]
   14002ca3f:	mov    rcx,rdi
   14002ca42:	mov    QWORD PTR [rsp+0x48],rax
   14002ca47:	mov    eax,DWORD PTR [rbp+0x77]
   14002ca4a:	mov    BYTE PTR [rbp-0x49],0x1
   14002ca4e:	mov    DWORD PTR [rsp+0x40],eax
   14002ca52:	lea    rax,[r14-0x10]
   14002ca56:	mov    QWORD PTR [rsp+0x38],rax
   14002ca5b:	mov    rax,QWORD PTR [rbp-0x29]
   14002ca5f:	mov    QWORD PTR [rsp+0x30],rax
   14002ca64:	mov    QWORD PTR [rsp+0x28],r12
   14002ca69:	mov    QWORD PTR [rsp+0x20],rbx
   14002ca6e:	call   0x14002c65c
   14002ca73:	mov    edx,DWORD PTR [rbp-0x41]
   14002ca76:	mov    ecx,DWORD PTR [rbp-0x45]
   14002ca79:	inc    ecx
   14002ca7b:	add    r14,0x14
   14002ca7f:	mov    DWORD PTR [rbp-0x45],ecx
   14002ca82:	cmp    ecx,edx
   14002ca84:	jb     0x14002c984
   14002ca8a:	xor    r12d,r12d
   14002ca8d:	cmp    BYTE PTR [rbp-0x49],r12b
   14002ca91:	jne    0x14002cb24
   14002ca97:	mov    eax,DWORD PTR [rbx]
   14002ca99:	and    eax,0x1fffffff
   14002ca9e:	cmp    eax,0x19930521
   14002caa3:	jb     0x14002cb24
   14002caa5:	mov    esi,DWORD PTR [rbx+0x20]
   14002caa8:	test   esi,esi
   14002caaa:	je     0x14002cab9
   14002caac:	movsxd rsi,esi
   14002caaf:	call   0x14002ae04
   14002cab4:	add    rax,rsi
   14002cab7:	jmp    0x14002cabc
   14002cab9:	mov    rax,r12
   14002cabc:	test   rax,rax
   14002cabf:	je     0x14002cb24
   14002cac1:	test   esi,esi
   14002cac3:	je     0x14002cad6
   14002cac5:	call   0x14002ae04
   14002caca:	mov    rdx,rax
   14002cacd:	movsxd rax,DWORD PTR [rbx+0x20]
   14002cad1:	add    rdx,rax
   14002cad4:	jmp    0x14002cad9
   14002cad6:	mov    rdx,r12
   14002cad9:	mov    rcx,rdi
   14002cadc:	call   0x14002ce3c
   14002cae1:	test   al,al
   14002cae3:	jne    0x14002cb24
   14002cae5:	lea    r9,[rbp+0x47]
   14002cae9:	mov    r8,rbx
   14002caec:	mov    rdx,r15
   14002caef:	mov    rcx,r13
   14002caf2:	call   0x14002a9dc
   14002caf7:	mov    cl,BYTE PTR [rbp+0x6f]
   14002cafa:	mov    r8,QWORD PTR [rbp+0x57]
   14002cafe:	mov    BYTE PTR [rsp+0x40],cl
   14002cb02:	mov    QWORD PTR [rsp+0x38],r15
   14002cb07:	mov    QWORD PTR [rsp+0x30],rbx
   14002cb0c:	or     DWORD PTR [rsp+0x28],0xffffffff
   14002cb11:	mov    r9,rax
   14002cb14:	mov    rdx,rdi
   14002cb17:	mov    rcx,r13
   14002cb1a:	mov    QWORD PTR [rsp+0x20],r12
   14002cb1f:	call   0x14002aea0
   14002cb24:	call   0x140021ed4
   14002cb29:	cmp    QWORD PTR [rax+0x108],r12
   14002cb30:	je     0x14002cb37
   14002cb32:	call   0x1400266c8
   14002cb37:	mov    rbx,QWORD PTR [rsp+0xf8]
   14002cb3f:	add    rsp,0xb0
   14002cb46:	pop    r15
   14002cb48:	pop    r14
   14002cb4a:	pop    r13
   14002cb4c:	pop    r12
   14002cb4e:	pop    rdi
   14002cb4f:	pop    rsi
   14002cb50:	pop    rbp
   14002cb51:	ret    
   14002cb52:	cmp    DWORD PTR [rbx+0xc],r12d
   14002cb56:	jbe    0x14002cb24
   14002cb58:	cmp    BYTE PTR [rbp+0x6f],r12b
   14002cb5c:	jne    0x14002cbce
   14002cb5e:	mov    rax,QWORD PTR [rbp+0x7f]
   14002cb62:	mov    r9,r15
   14002cb65:	mov    r8,r14
   14002cb68:	mov    QWORD PTR [rsp+0x38],rax
   14002cb6d:	mov    eax,DWORD PTR [rbp+0x77]
   14002cb70:	mov    rdx,r13
   14002cb73:	mov    DWORD PTR [rsp+0x30],eax
   14002cb77:	mov    rcx,rdi
   14002cb7a:	mov    DWORD PTR [rsp+0x28],esi
   14002cb7e:	mov    QWORD PTR [rsp+0x20],rbx
   14002cb83:	call   0x14002cbd4
   14002cb88:	jmp    0x14002cb24
   14002cb8a:	call   0x1400266e8
   14002cb8f:	int3   
   14002cb90:	mov    dl,0x1
   14002cb92:	mov    rcx,rdi
   14002cb95:	call   0x14002c57c
   14002cb9a:	lea    rax,[rip+0x105e7]        # 0x14003d188
   14002cba1:	lea    rdx,[rbp+0x47]
   14002cba5:	lea    rcx,[rbp-0x19]
   14002cba9:	mov    QWORD PTR [rbp+0x47],rax
   14002cbad:	call   0x14002640c
   14002cbb2:	lea    rax,[rip+0x105bf]        # 0x14003d178
   14002cbb9:	lea    rdx,[rip+0x1dcf8]        # 0x14004a8b8
   14002cbc0:	lea    rcx,[rbp-0x19]
   14002cbc4:	mov    QWORD PTR [rbp-0x19],rax
   14002cbc8:	call   0x1400265e8
   14002cbcd:	int3   
   14002cbce:	call   0x1400266e8
   14002cbd3:	int3   
   14002cbd4:	mov    QWORD PTR [rsp+0x10],rbx
   14002cbd9:	mov    QWORD PTR [rsp+0x18],r8
   14002cbde:	push   rbp
   14002cbdf:	push   rsi
   14002cbe0:	push   rdi
   14002cbe1:	push   r12
   14002cbe3:	push   r13
   14002cbe5:	push   r14
   14002cbe7:	push   r15
   14002cbe9:	sub    rsp,0x70
   14002cbed:	cmp    DWORD PTR [rcx],0x80000003
   14002cbf3:	mov    r15,r9
   14002cbf6:	mov    rdi,r8
   14002cbf9:	mov    r12,rdx
   14002cbfc:	mov    rsi,rcx
   14002cbff:	je     0x14002ce21
   14002cc05:	call   0x140021ed4
   14002cc0a:	mov    rbp,QWORD PTR [rsp+0xd0]
   14002cc12:	cmp    QWORD PTR [rax+0xe0],0x0
   14002cc1a:	je     0x14002cc7d
   14002cc1c:	xor    ecx,ecx
   14002cc1e:	call   QWORD PTR [rip+0xc594]        # 0x1400391b8
   14002cc24:	mov    rbx,rax
   14002cc27:	call   0x140021ed4
   14002cc2c:	cmp    QWORD PTR [rax+0xe0],rbx
   14002cc33:	je     0x14002cc7d
   14002cc35:	cmp    DWORD PTR [rsi],0xe0434f4d
   14002cc3b:	je     0x14002cc7d
   14002cc3d:	cmp    DWORD PTR [rsi],0xe0434352
   14002cc43:	mov    ebx,DWORD PTR [rsp+0xe0]
   14002cc4a:	je     0x14002cc84
   14002cc4c:	mov    rax,QWORD PTR [rsp+0xe8]
   14002cc54:	mov    r9,r15
   14002cc57:	mov    r8,rdi
   14002cc5a:	mov    QWORD PTR [rsp+0x30],rax
   14002cc5f:	mov    rdx,r12
   14002cc62:	mov    rcx,rsi
   14002cc65:	mov    DWORD PTR [rsp+0x28],ebx
   14002cc69:	mov    QWORD PTR [rsp+0x20],rbp
   14002cc6e:	call   0x14002ad0c
   14002cc73:	test   eax,eax
   14002cc75:	jne    0x14002ce21
   14002cc7b:	jmp    0x14002cc84
   14002cc7d:	mov    ebx,DWORD PTR [rsp+0xe0]
   14002cc84:	cmp    DWORD PTR [rbp+0xc],0x0
   14002cc88:	jne    0x14002cc8f
   14002cc8a:	call   0x1400266c8
   14002cc8f:	mov    r14d,DWORD PTR [rsp+0xd8]
   14002cc97:	lea    rax,[rsp+0x60]
   14002cc9c:	mov    QWORD PTR [rsp+0x30],r15
   14002cca1:	mov    QWORD PTR [rsp+0x28],rax
   14002cca6:	lea    rax,[rsp+0xb0]
   14002ccae:	mov    r8d,ebx
   14002ccb1:	mov    r9d,r14d
   14002ccb4:	mov    rdx,rbp
   14002ccb7:	mov    rcx,r12
   14002ccba:	mov    QWORD PTR [rsp+0x20],rax
   14002ccbf:	call   0x14002aaa8
   14002ccc4:	mov    ecx,DWORD PTR [rsp+0xb0]
   14002cccb:	cmp    ecx,DWORD PTR [rsp+0x60]
   14002cccf:	jae    0x14002ce21
   14002ccd5:	lea    rdi,[rax+0xc]
   14002ccd9:	lea    r13,[rdi-0xc]
   14002ccdd:	cmp    r14d,DWORD PTR [r13+0x0]
   14002cce1:	jl     0x14002ce0a
   14002cce7:	cmp    r14d,DWORD PTR [rdi-0x8]
   14002cceb:	jg     0x14002ce0a
   14002ccf1:	call   0x14002ae04
   14002ccf6:	movsxd rcx,DWORD PTR [rdi]
   14002ccf9:	lea    rdx,[rcx+rcx*4]
   14002ccfd:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cd01:	lea    rdx,[rcx+rdx*4]
   14002cd05:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14002cd0a:	je     0x14002cd2f
   14002cd0c:	call   0x14002ae04
   14002cd11:	movsxd rcx,DWORD PTR [rdi]
   14002cd14:	lea    rdx,[rcx+rcx*4]
   14002cd18:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cd1c:	lea    rdx,[rcx+rdx*4]
   14002cd20:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14002cd25:	call   0x14002ae04
   14002cd2a:	add    rax,rbx
   14002cd2d:	jmp    0x14002cd31
   14002cd2f:	xor    eax,eax
   14002cd31:	test   rax,rax
   14002cd34:	je     0x14002cd80
   14002cd36:	call   0x14002ae04
   14002cd3b:	movsxd rcx,DWORD PTR [rdi]
   14002cd3e:	lea    rdx,[rcx+rcx*4]
   14002cd42:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cd46:	lea    rdx,[rcx+rdx*4]
   14002cd4a:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14002cd4f:	je     0x14002cd74
   14002cd51:	call   0x14002ae04
   14002cd56:	movsxd rcx,DWORD PTR [rdi]
   14002cd59:	lea    rdx,[rcx+rcx*4]
   14002cd5d:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cd61:	lea    rdx,[rcx+rdx*4]
   14002cd65:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14002cd6a:	call   0x14002ae04
   14002cd6f:	add    rax,rbx
   14002cd72:	jmp    0x14002cd76
   14002cd74:	xor    eax,eax
   14002cd76:	cmp    BYTE PTR [rax+0x10],0x0
   14002cd7a:	jne    0x14002ce03
   14002cd80:	call   0x14002ae04
   14002cd85:	movsxd rcx,DWORD PTR [rdi]
   14002cd88:	lea    rdx,[rcx+rcx*4]
   14002cd8c:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cd90:	lea    rdx,[rcx+rdx*4]
   14002cd94:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14002cd99:	jne    0x14002ce03
   14002cd9b:	call   0x14002ae04
   14002cda0:	mov    ecx,DWORD PTR [rdi]
   14002cda2:	mov    r8,QWORD PTR [rsp+0xc0]
   14002cdaa:	mov    BYTE PTR [rsp+0x58],0x0
   14002cdaf:	mov    BYTE PTR [rsp+0x50],0x1
   14002cdb4:	dec    ecx
   14002cdb6:	movsxd rcx,ecx
   14002cdb9:	mov    r9,r15
   14002cdbc:	lea    rdx,[rcx+rcx*4]
   14002cdc0:	lea    rcx,[rax+rdx*4]
   14002cdc4:	movsxd rax,DWORD PTR [rdi+0x4]
   14002cdc8:	mov    rdx,r12
   14002cdcb:	add    rcx,rax
   14002cdce:	mov    rax,QWORD PTR [rsp+0xe8]
   14002cdd6:	mov    QWORD PTR [rsp+0x48],rax
   14002cddb:	mov    eax,DWORD PTR [rsp+0xe0]
   14002cde2:	mov    DWORD PTR [rsp+0x40],eax
   14002cde6:	mov    QWORD PTR [rsp+0x38],r13
   14002cdeb:	and    QWORD PTR [rsp+0x30],0x0
   14002cdf1:	mov    QWORD PTR [rsp+0x28],rcx
   14002cdf6:	mov    rcx,rsi
   14002cdf9:	mov    QWORD PTR [rsp+0x20],rbp
   14002cdfe:	call   0x14002c65c
   14002ce03:	mov    ecx,DWORD PTR [rsp+0xb0]
   14002ce0a:	inc    ecx
   14002ce0c:	add    rdi,0x14
   14002ce10:	mov    DWORD PTR [rsp+0xb0],ecx
   14002ce17:	cmp    ecx,DWORD PTR [rsp+0x60]
   14002ce1b:	jb     0x14002ccd9
   14002ce21:	mov    rbx,QWORD PTR [rsp+0xb8]
   14002ce29:	add    rsp,0x70
   14002ce2d:	pop    r15
   14002ce2f:	pop    r14
   14002ce31:	pop    r13
   14002ce33:	pop    r12
   14002ce35:	pop    rdi
   14002ce36:	pop    rsi
   14002ce37:	pop    rbp
   14002ce38:	ret    
   14002ce39:	int3   
   14002ce3a:	int3   
   14002ce3b:	int3   
   14002ce3c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ce41:	mov    QWORD PTR [rsp+0x10],rbp
   14002ce46:	mov    QWORD PTR [rsp+0x18],rsi
   14002ce4b:	push   rdi
   14002ce4c:	push   r12
   14002ce4e:	push   r13
   14002ce50:	push   r14
   14002ce52:	push   r15
   14002ce54:	sub    rsp,0x20
   14002ce58:	mov    rsi,rdx
   14002ce5b:	mov    r13,rcx
   14002ce5e:	test   rdx,rdx
   14002ce61:	je     0x14002cf08
   14002ce67:	xor    edi,edi
   14002ce69:	xor    r14b,r14b
   14002ce6c:	cmp    DWORD PTR [rdx],edi
   14002ce6e:	jle    0x14002cee8
   14002ce70:	call   0x14002ae1c
   14002ce75:	mov    rdx,rax
   14002ce78:	mov    rax,QWORD PTR [r13+0x30]
   14002ce7c:	movsxd r15,DWORD PTR [rax+0xc]
   14002ce80:	add    r15,0x4
   14002ce84:	add    r15,rdx
   14002ce87:	call   0x14002ae1c
   14002ce8c:	mov    rdx,rax
   14002ce8f:	mov    rax,QWORD PTR [r13+0x30]
   14002ce93:	movsxd rcx,DWORD PTR [rax+0xc]
   14002ce97:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14002ce9a:	test   ebp,ebp
   14002ce9c:	jle    0x14002cee2
   14002ce9e:	movsxd rax,edi
   14002cea1:	lea    r12,[rax+rax*4]
   14002cea5:	call   0x14002ae1c
   14002ceaa:	mov    rbx,rax
   14002cead:	movsxd rax,DWORD PTR [r15]
   14002ceb0:	add    rbx,rax
   14002ceb3:	call   0x14002ae04
   14002ceb8:	movsxd rcx,DWORD PTR [rsi+0x4]
   14002cebc:	mov    r8,QWORD PTR [r13+0x30]
   14002cec0:	lea    rax,[rax+r12*4]
   14002cec4:	mov    rdx,rbx
   14002cec7:	add    rcx,rax
   14002ceca:	call   0x14002d800
   14002cecf:	test   eax,eax
   14002ced1:	jne    0x14002cedf
   14002ced3:	dec    ebp
   14002ced5:	add    r15,0x4
   14002ced9:	test   ebp,ebp
   14002cedb:	jg     0x14002cea5
   14002cedd:	jmp    0x14002cee2
   14002cedf:	mov    r14b,0x1
   14002cee2:	inc    edi
   14002cee4:	cmp    edi,DWORD PTR [rsi]
   14002cee6:	jl     0x14002ce70
   14002cee8:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ceed:	mov    rbp,QWORD PTR [rsp+0x58]
   14002cef2:	mov    rsi,QWORD PTR [rsp+0x60]
   14002cef7:	mov    al,r14b
   14002cefa:	add    rsp,0x20
   14002cefe:	pop    r15
   14002cf00:	pop    r14
   14002cf02:	pop    r13
   14002cf04:	pop    r12
   14002cf06:	pop    rdi
   14002cf07:	ret    
   14002cf08:	call   0x1400266c8
   14002cf0d:	call   0x1400266e8
   14002cf12:	int3   
   14002cf13:	int3   
   14002cf14:	movsxd rax,DWORD PTR [rdx]
   14002cf17:	add    rax,rcx
   14002cf1a:	cmp    DWORD PTR [rdx+0x4],0x0
   14002cf1e:	jl     0x14002cf36
   14002cf20:	movsxd r9,DWORD PTR [rdx+0x4]
   14002cf24:	movsxd rdx,DWORD PTR [rdx+0x8]
   14002cf28:	mov    rcx,QWORD PTR [r9+rcx*1]
   14002cf2c:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14002cf30:	add    r8,r9
   14002cf33:	add    rax,r8
   14002cf36:	ret    
   14002cf37:	int3   
   14002cf38:	mov    QWORD PTR [rsp+0x8],rbx
   14002cf3d:	mov    QWORD PTR [rsp+0x10],rsi
   14002cf42:	mov    QWORD PTR [rsp+0x18],rdi
   14002cf47:	push   r14
   14002cf49:	sub    rsp,0x20
   14002cf4d:	mov    rdi,r9
   14002cf50:	mov    r14,rcx
   14002cf53:	test   DWORD PTR [r8],0x80000000
   14002cf5a:	je     0x14002cf61
   14002cf5c:	mov    rsi,rdx
   14002cf5f:	jmp    0x14002cf68
   14002cf61:	movsxd rsi,DWORD PTR [r8+0x8]
   14002cf65:	add    rsi,QWORD PTR [rdx]
   14002cf68:	call   0x14002cff0
   14002cf6d:	dec    eax
   14002cf6f:	je     0x14002cfa8
   14002cf71:	dec    eax
   14002cf73:	jne    0x14002cfd0
   14002cf75:	xor    ebx,ebx
   14002cf77:	cmp    DWORD PTR [rdi+0x18],ebx
   14002cf7a:	je     0x14002cf8b
   14002cf7c:	call   0x14002ae1c
   14002cf81:	mov    rbx,rax
   14002cf84:	movsxd rax,DWORD PTR [rdi+0x18]
   14002cf88:	add    rbx,rax
   14002cf8b:	lea    rdx,[rdi+0x8]
   14002cf8f:	mov    rcx,QWORD PTR [r14+0x28]
   14002cf93:	call   0x14002cf14
   14002cf98:	mov    rdx,rax
   14002cf9b:	mov    r8d,0x1
   14002cfa1:	mov    rcx,rsi
   14002cfa4:	call   rbx
   14002cfa6:	jmp    0x14002cfd0
   14002cfa8:	xor    ebx,ebx
   14002cfaa:	cmp    DWORD PTR [rdi+0x18],ebx
   14002cfad:	je     0x14002cfbb
   14002cfaf:	call   0x14002ae1c
   14002cfb4:	movsxd rbx,DWORD PTR [rdi+0x18]
   14002cfb8:	add    rbx,rax
   14002cfbb:	lea    rdx,[rdi+0x8]
   14002cfbf:	mov    rcx,QWORD PTR [r14+0x28]
   14002cfc3:	call   0x14002cf14
   14002cfc8:	mov    rdx,rax
   14002cfcb:	mov    rcx,rsi
   14002cfce:	call   rbx
   14002cfd0:	jmp    0x14002cfd8
   14002cfd2:	call   0x1400266e8
   14002cfd7:	nop
   14002cfd8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cfdd:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cfe2:	mov    rdi,QWORD PTR [rsp+0x40]
   14002cfe7:	add    rsp,0x20
   14002cfeb:	pop    r14
   14002cfed:	ret    
   14002cfee:	int3   
   14002cfef:	int3   
   14002cff0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cff5:	mov    QWORD PTR [rsp+0x10],rsi
   14002cffa:	mov    QWORD PTR [rsp+0x18],rdi
   14002cfff:	push   r13
   14002d001:	push   r14
   14002d003:	push   r15
   14002d005:	sub    rsp,0x30
   14002d009:	mov    rsi,r9
   14002d00c:	mov    rbx,r8
   14002d00f:	mov    r14,rdx
   14002d012:	mov    r13,rcx
   14002d015:	xor    edi,edi
   14002d017:	mov    r15d,DWORD PTR [r8+0x4]
   14002d01b:	test   r15d,r15d
   14002d01e:	je     0x14002d02e
   14002d020:	movsxd r15,r15d
   14002d023:	call   0x14002ae04
   14002d028:	lea    rdx,[r15+rax*1]
   14002d02c:	jmp    0x14002d031
   14002d02e:	mov    rdx,rdi
   14002d031:	test   rdx,rdx
   14002d034:	je     0x14002d1d1
   14002d03a:	test   r15d,r15d
   14002d03d:	je     0x14002d050
   14002d03f:	call   0x14002ae04
   14002d044:	mov    rcx,rax
   14002d047:	movsxd rax,DWORD PTR [rbx+0x4]
   14002d04b:	add    rcx,rax
   14002d04e:	jmp    0x14002d053
   14002d050:	mov    rcx,rdi
   14002d053:	cmp    BYTE PTR [rcx+0x10],dil
   14002d057:	je     0x14002d1d1
   14002d05d:	cmp    DWORD PTR [rbx+0x8],edi
   14002d060:	jne    0x14002d06e
   14002d062:	test   DWORD PTR [rbx],0x80000000
   14002d068:	je     0x14002d1d1
   14002d06e:	test   DWORD PTR [rbx],0x80000000
   14002d074:	jne    0x14002d080
   14002d076:	movsxd rax,DWORD PTR [rbx+0x8]
   14002d07a:	add    rax,QWORD PTR [r14]
   14002d07d:	mov    r14,rax
   14002d080:	test   BYTE PTR [rbx],0x8
   14002d083:	mov    ebx,0x1
   14002d088:	je     0x14002d0c7
   14002d08a:	mov    edx,ebx
   14002d08c:	mov    rcx,QWORD PTR [r13+0x28]
   14002d090:	call   0x14002ecdc
   14002d095:	test   eax,eax
   14002d097:	je     0x14002d1c1
   14002d09d:	mov    edx,ebx
   14002d09f:	mov    rcx,r14
   14002d0a2:	call   0x14002ecdc
   14002d0a7:	test   eax,eax
   14002d0a9:	je     0x14002d1c1
   14002d0af:	mov    rcx,QWORD PTR [r13+0x28]
   14002d0b3:	mov    QWORD PTR [r14],rcx
   14002d0b6:	lea    rdx,[rsi+0x8]
   14002d0ba:	call   0x14002cf14
   14002d0bf:	mov    QWORD PTR [r14],rax
   14002d0c2:	jmp    0x14002d1c7
   14002d0c7:	test   BYTE PTR [rsi],bl
   14002d0c9:	je     0x14002d118
   14002d0cb:	mov    edx,ebx
   14002d0cd:	mov    rcx,QWORD PTR [r13+0x28]
   14002d0d1:	call   0x14002ecdc
   14002d0d6:	test   eax,eax
   14002d0d8:	je     0x14002d1c1
   14002d0de:	mov    edx,ebx
   14002d0e0:	mov    rcx,r14
   14002d0e3:	call   0x14002ecdc
   14002d0e8:	test   eax,eax
   14002d0ea:	je     0x14002d1c1
   14002d0f0:	movsxd r8,DWORD PTR [rsi+0x14]
   14002d0f4:	mov    rdx,QWORD PTR [r13+0x28]
   14002d0f8:	mov    rcx,r14
   14002d0fb:	call   0x140020e80
   14002d100:	cmp    DWORD PTR [rsi+0x14],0x8
   14002d104:	jne    0x14002d1c7
   14002d10a:	cmp    QWORD PTR [r14],rdi
   14002d10d:	je     0x14002d1c7
   14002d113:	mov    rcx,QWORD PTR [r14]
   14002d116:	jmp    0x14002d0b6
   14002d118:	cmp    DWORD PTR [rsi+0x18],edi
   14002d11b:	je     0x14002d12e
   14002d11d:	call   0x14002ae1c
   14002d122:	mov    rcx,rax
   14002d125:	movsxd rax,DWORD PTR [rsi+0x18]
   14002d129:	add    rcx,rax
   14002d12c:	jmp    0x14002d131
   14002d12e:	mov    rcx,rdi
   14002d131:	mov    edx,ebx
   14002d133:	test   rcx,rcx
   14002d136:	mov    rcx,QWORD PTR [r13+0x28]
   14002d13a:	jne    0x14002d174
   14002d13c:	call   0x14002ecdc
   14002d141:	test   eax,eax
   14002d143:	je     0x14002d1c1
   14002d145:	mov    edx,ebx
   14002d147:	mov    rcx,r14
   14002d14a:	call   0x14002ecdc
   14002d14f:	test   eax,eax
   14002d151:	je     0x14002d1c1
   14002d153:	movsxd rbx,DWORD PTR [rsi+0x14]
   14002d157:	lea    rdx,[rsi+0x8]
   14002d15b:	mov    rcx,QWORD PTR [r13+0x28]
   14002d15f:	call   0x14002cf14
   14002d164:	mov    rdx,rax
   14002d167:	mov    r8,rbx
   14002d16a:	mov    rcx,r14
   14002d16d:	call   0x140020e80
   14002d172:	jmp    0x14002d1c7
   14002d174:	call   0x14002ecdc
   14002d179:	test   eax,eax
   14002d17b:	je     0x14002d1c1
   14002d17d:	mov    edx,ebx
   14002d17f:	mov    rcx,r14
   14002d182:	call   0x14002ecdc
   14002d187:	test   eax,eax
   14002d189:	je     0x14002d1c1
   14002d18b:	cmp    DWORD PTR [rsi+0x18],edi
   14002d18e:	je     0x14002d1a1
   14002d190:	call   0x14002ae1c
   14002d195:	mov    rcx,rax
   14002d198:	movsxd rax,DWORD PTR [rsi+0x18]
   14002d19c:	add    rcx,rax
   14002d19f:	jmp    0x14002d1a4
   14002d1a1:	mov    rcx,rdi
   14002d1a4:	call   0x14002ecdc
   14002d1a9:	test   eax,eax
   14002d1ab:	je     0x14002d1c1
   14002d1ad:	mov    al,BYTE PTR [rsi]
   14002d1af:	and    al,0x4
   14002d1b1:	neg    al
   14002d1b3:	sbb    ecx,ecx
   14002d1b5:	neg    ecx
   14002d1b7:	add    ecx,ebx
   14002d1b9:	mov    edi,ecx
   14002d1bb:	mov    DWORD PTR [rsp+0x20],ecx
   14002d1bf:	jmp    0x14002d1c7
   14002d1c1:	call   0x1400266c8
   14002d1c6:	nop
   14002d1c7:	mov    eax,edi
   14002d1c9:	jmp    0x14002d1d3
   14002d1cb:	call   0x1400266e8
   14002d1d0:	nop
   14002d1d1:	xor    eax,eax
   14002d1d3:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d1d8:	mov    rsi,QWORD PTR [rsp+0x58]
   14002d1dd:	mov    rdi,QWORD PTR [rsp+0x60]
   14002d1e2:	add    rsp,0x30
   14002d1e6:	pop    r15
   14002d1e8:	pop    r14
   14002d1ea:	pop    r13
   14002d1ec:	ret    
   14002d1ed:	int3   
   14002d1ee:	int3   
   14002d1ef:	int3   
   14002d1f0:	rex push rbx
   14002d1f2:	push   rsi
   14002d1f3:	push   rdi
   14002d1f4:	push   r12
   14002d1f6:	push   r13
   14002d1f8:	push   r14
   14002d1fa:	push   r15
   14002d1fc:	sub    rsp,0x90
   14002d203:	mov    rdi,rcx
   14002d206:	xor    r15d,r15d
   14002d209:	mov    DWORD PTR [rsp+0x20],r15d
   14002d20e:	and    DWORD PTR [rsp+0xd0],r15d
   14002d216:	and    QWORD PTR [rsp+0x40],r15
   14002d21b:	and    QWORD PTR [rsp+0xe8],r15
   14002d223:	call   0x140021ed4
   14002d228:	mov    r13,QWORD PTR [rax+0xf8]
   14002d22f:	mov    QWORD PTR [rsp+0x50],r13
   14002d234:	call   0x140021ed4
   14002d239:	mov    rax,QWORD PTR [rax+0xf0]
   14002d240:	mov    QWORD PTR [rsp+0xe0],rax
   14002d248:	mov    rsi,QWORD PTR [rdi+0x50]
   14002d24c:	mov    QWORD PTR [rsp+0xd8],rsi
   14002d254:	mov    rax,QWORD PTR [rdi+0x48]
   14002d258:	mov    QWORD PTR [rsp+0x48],rax
   14002d25d:	mov    rbx,QWORD PTR [rdi+0x40]
   14002d261:	mov    rax,QWORD PTR [rdi+0x30]
   14002d265:	mov    QWORD PTR [rsp+0x58],rax
   14002d26a:	mov    r14,QWORD PTR [rdi+0x28]
   14002d26e:	mov    QWORD PTR [rsp+0x60],r14
   14002d273:	call   0x140021ed4
   14002d278:	mov    QWORD PTR [rax+0xf0],rsi
   14002d27f:	call   0x140021ed4
   14002d284:	mov    QWORD PTR [rax+0xf8],rbx
   14002d28b:	call   0x140021ed4
   14002d290:	mov    rdx,QWORD PTR [rax+0xf0]
   14002d297:	mov    rdx,QWORD PTR [rdx+0x28]
   14002d29b:	lea    rcx,[rsp+0x78]
   14002d2a0:	call   0x14002ad60
   14002d2a5:	mov    r12,rax
   14002d2a8:	mov    QWORD PTR [rsp+0x38],rax
   14002d2ad:	cmp    QWORD PTR [rdi+0x58],r15
   14002d2b1:	je     0x14002d2d2
   14002d2b3:	mov    DWORD PTR [rsp+0xd0],0x1
   14002d2be:	call   0x140021ed4
   14002d2c3:	mov    rcx,QWORD PTR [rax+0x138]
   14002d2ca:	mov    QWORD PTR [rsp+0xe8],rcx
   14002d2d2:	mov    r8d,0x100
   14002d2d8:	mov    rdx,r14
   14002d2db:	mov    rcx,QWORD PTR [rsp+0x58]
   14002d2e0:	call   0x14002ed00
   14002d2e5:	mov    rbx,rax
   14002d2e8:	mov    QWORD PTR [rsp+0x40],rax
   14002d2ed:	mov    rdi,QWORD PTR [rsp+0xe0]
   14002d2f5:	jmp    0x14002d372
   14002d2f7:	mov    DWORD PTR [rsp+0x20],0x1
   14002d2ff:	call   0x140021ed4
   14002d304:	and    DWORD PTR [rax+0x460],0x0
   14002d30b:	mov    rsi,QWORD PTR [rsp+0xd8]
   14002d313:	cmp    DWORD PTR [rsp+0xd0],0x0
   14002d31b:	je     0x14002d33e
   14002d31d:	mov    dl,0x1
   14002d31f:	mov    rcx,rsi
   14002d322:	call   0x14002c57c
   14002d327:	mov    rax,QWORD PTR [rsp+0xe8]
   14002d32f:	lea    r9,[rax+0x20]
   14002d333:	mov    r8d,DWORD PTR [rax+0x18]
   14002d337:	mov    edx,DWORD PTR [rax+0x4]
   14002d33a:	mov    ecx,DWORD PTR [rax]
   14002d33c:	jmp    0x14002d34b
   14002d33e:	lea    r9,[rsi+0x20]
   14002d342:	mov    r8d,DWORD PTR [rsi+0x18]
   14002d346:	mov    edx,DWORD PTR [rsi+0x4]
   14002d349:	mov    ecx,DWORD PTR [rsi]
   14002d34b:	call   QWORD PTR [rip+0xbf77]        # 0x1400392c8
   14002d351:	mov    r15d,DWORD PTR [rsp+0x20]
   14002d356:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d35b:	mov    r13,QWORD PTR [rsp+0x50]
   14002d360:	mov    rdi,QWORD PTR [rsp+0xe0]
   14002d368:	mov    r14,QWORD PTR [rsp+0x60]
   14002d36d:	mov    r12,QWORD PTR [rsp+0x38]
   14002d372:	mov    rcx,r12
   14002d375:	call   0x14002ada4
   14002d37a:	test   r15d,r15d
   14002d37d:	jne    0x14002d3b1
   14002d37f:	cmp    DWORD PTR [rsi],0xe06d7363
   14002d385:	jne    0x14002d3b1
   14002d387:	cmp    DWORD PTR [rsi+0x18],0x4
   14002d38b:	jne    0x14002d3b1
   14002d38d:	mov    eax,DWORD PTR [rsi+0x20]
   14002d390:	sub    eax,0x19930520
   14002d395:	cmp    eax,0x2
   14002d398:	ja     0x14002d3b1
   14002d39a:	mov    rcx,QWORD PTR [rsi+0x28]
   14002d39e:	call   0x14002ae34
   14002d3a3:	test   eax,eax
   14002d3a5:	je     0x14002d3b1
   14002d3a7:	mov    dl,0x1
   14002d3a9:	mov    rcx,rsi
   14002d3ac:	call   0x14002c57c
   14002d3b1:	call   0x140021ed4
   14002d3b6:	mov    QWORD PTR [rax+0xf0],rdi
   14002d3bd:	call   0x140021ed4
   14002d3c2:	mov    QWORD PTR [rax+0xf8],r13
   14002d3c9:	mov    rax,QWORD PTR [rsp+0x48]
   14002d3ce:	movsxd rcx,DWORD PTR [rax+0x1c]
   14002d3d2:	mov    rax,QWORD PTR [r14]
   14002d3d5:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14002d3dd:	mov    rax,rbx
   14002d3e0:	add    rsp,0x90
   14002d3e7:	pop    r15
   14002d3e9:	pop    r14
   14002d3eb:	pop    r13
   14002d3ed:	pop    r12
   14002d3ef:	pop    rdi
   14002d3f0:	pop    rsi
   14002d3f1:	pop    rbx
   14002d3f2:	ret    
   14002d3f3:	int3   
   14002d3f4:	sub    rsp,0x28
   14002d3f8:	mov    rax,QWORD PTR [rcx]
   14002d3fb:	cmp    DWORD PTR [rax],0xe0434352
   14002d401:	je     0x14002d415
   14002d403:	cmp    DWORD PTR [rax],0xe0434f4d
   14002d409:	je     0x14002d415
   14002d40b:	cmp    DWORD PTR [rax],0xe06d7363
   14002d411:	jne    0x14002d42e
   14002d413:	jmp    0x14002d435
   14002d415:	call   0x140021ed4
   14002d41a:	cmp    DWORD PTR [rax+0x100],0x0
   14002d421:	jle    0x14002d42e
   14002d423:	call   0x140021ed4
   14002d428:	dec    DWORD PTR [rax+0x100]
   14002d42e:	xor    eax,eax
   14002d430:	add    rsp,0x28
   14002d434:	ret    
   14002d435:	call   0x140021ed4
   14002d43a:	and    DWORD PTR [rax+0x100],0x0
   14002d441:	call   0x1400266e8
   14002d446:	int3   
   14002d447:	int3   
   14002d448:	mov    rax,rsp
   14002d44b:	mov    DWORD PTR [rax+0x20],r9d
   14002d44f:	mov    QWORD PTR [rax+0x18],r8
   14002d453:	mov    QWORD PTR [rax+0x10],rdx
   14002d457:	mov    QWORD PTR [rax+0x8],rcx
   14002d45b:	push   rbx
   14002d45c:	push   rsi
   14002d45d:	push   rdi
   14002d45e:	push   r12
   14002d460:	push   r13
   14002d462:	push   r14
   14002d464:	push   r15
   14002d466:	sub    rsp,0x30
   14002d46a:	mov    r12d,r9d
   14002d46d:	mov    rsi,r8
   14002d470:	mov    r13,rdx
   14002d473:	mov    r15,rcx
   14002d476:	call   0x14002ae04
   14002d47b:	mov    QWORD PTR [rsp+0x28],rax
   14002d480:	mov    r8,rsi
   14002d483:	mov    rdx,r13
   14002d486:	mov    rcx,r15
   14002d489:	call   0x14002d920
   14002d48e:	mov    edi,eax
   14002d490:	call   0x140021ed4
   14002d495:	inc    DWORD PTR [rax+0x100]
   14002d49b:	cmp    edi,0xffffffff
   14002d49e:	je     0x14002d591
   14002d4a4:	cmp    edi,r12d
   14002d4a7:	jle    0x14002d591
   14002d4ad:	cmp    edi,0xffffffff
   14002d4b0:	jle    0x14002d4b7
   14002d4b2:	cmp    edi,DWORD PTR [rsi+0x4]
   14002d4b5:	jl     0x14002d4bc
   14002d4b7:	call   0x1400266c8
   14002d4bc:	movsxd r14,edi
   14002d4bf:	call   0x14002ae04
   14002d4c4:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002d4c8:	lea    rax,[rax+r14*8]
   14002d4cc:	mov    edi,DWORD PTR [rcx+rax*1]
   14002d4cf:	mov    DWORD PTR [rsp+0x20],edi
   14002d4d3:	call   0x14002ae04
   14002d4d8:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002d4dc:	lea    rax,[rax+r14*8]
   14002d4e0:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002d4e5:	je     0x14002d503
   14002d4e7:	call   0x14002ae04
   14002d4ec:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002d4f0:	lea    rax,[rax+r14*8]
   14002d4f4:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002d4f9:	call   0x14002ae04
   14002d4fe:	add    rax,rbx
   14002d501:	jmp    0x14002d505
   14002d503:	xor    eax,eax
   14002d505:	test   rax,rax
   14002d508:	je     0x14002d568
   14002d50a:	mov    r9d,edi
   14002d50d:	mov    r8,rsi
   14002d510:	mov    rdx,r13
   14002d513:	mov    rcx,r15
   14002d516:	call   0x14002d974
   14002d51b:	call   0x14002ae04
   14002d520:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002d524:	lea    rax,[rax+r14*8]
   14002d528:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002d52d:	je     0x14002d54b
   14002d52f:	call   0x14002ae04
   14002d534:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002d538:	lea    rax,[rax+r14*8]
   14002d53c:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002d541:	call   0x14002ae04
   14002d546:	add    rax,rbx
   14002d549:	jmp    0x14002d54d
   14002d54b:	xor    eax,eax
   14002d54d:	mov    r8d,0x103
   14002d553:	mov    rdx,r15
   14002d556:	mov    rcx,rax
   14002d559:	call   0x14002ed00
   14002d55e:	mov    rcx,QWORD PTR [rsp+0x28]
   14002d563:	call   0x14002ae68
   14002d568:	jmp    0x14002d588
   14002d56a:	mov    r12d,DWORD PTR [rsp+0x88]
   14002d572:	mov    rsi,QWORD PTR [rsp+0x80]
   14002d57a:	mov    r13,QWORD PTR [rsp+0x78]
   14002d57f:	mov    r15,QWORD PTR [rsp+0x70]
   14002d584:	mov    edi,DWORD PTR [rsp+0x20]
   14002d588:	mov    DWORD PTR [rsp+0x24],edi
   14002d58c:	jmp    0x14002d49b
   14002d591:	call   0x140021ed4
   14002d596:	cmp    DWORD PTR [rax+0x100],0x0
   14002d59d:	jle    0x14002d5aa
   14002d59f:	call   0x140021ed4
   14002d5a4:	dec    DWORD PTR [rax+0x100]
   14002d5aa:	cmp    edi,0xffffffff
   14002d5ad:	je     0x14002d5b9
   14002d5af:	cmp    edi,r12d
   14002d5b2:	jle    0x14002d5b9
   14002d5b4:	call   0x1400266c8
   14002d5b9:	mov    r9d,edi
   14002d5bc:	mov    r8,rsi
   14002d5bf:	mov    rdx,r13
   14002d5c2:	mov    rcx,r15
   14002d5c5:	call   0x14002d974
   14002d5ca:	add    rsp,0x30
   14002d5ce:	pop    r15
   14002d5d0:	pop    r14
   14002d5d2:	pop    r13
   14002d5d4:	pop    r12
   14002d5d6:	pop    rdi
   14002d5d7:	pop    rsi
   14002d5d8:	pop    rbx
   14002d5d9:	ret    
   14002d5da:	int3   
   14002d5db:	int3   
   14002d5dc:	mov    QWORD PTR [rsp+0x8],rbx
   14002d5e1:	mov    QWORD PTR [rsp+0x10],rbp
   14002d5e6:	mov    QWORD PTR [rsp+0x18],rsi
   14002d5eb:	push   rdi
   14002d5ec:	push   r12
   14002d5ee:	push   r14
   14002d5f0:	sub    rsp,0x40
   14002d5f4:	mov    rbp,r9
   14002d5f7:	mov    r14,r8
   14002d5fa:	mov    rsi,rdx
   14002d5fd:	mov    rbx,rcx
   14002d600:	call   0x140021ed4
   14002d605:	mov    rdi,QWORD PTR [rsp+0x80]
   14002d60d:	cmp    DWORD PTR [rax+0x460],0x0
   14002d614:	mov    edx,0x1fffffff
   14002d619:	mov    r8d,0x80000029
   14002d61f:	mov    r9d,0x80000026
   14002d625:	mov    r12d,0x1
   14002d62b:	jne    0x14002d665
   14002d62d:	cmp    DWORD PTR [rbx],0xe06d7363
   14002d633:	je     0x14002d665
   14002d635:	cmp    DWORD PTR [rbx],r8d
   14002d638:	jne    0x14002d64a
   14002d63a:	cmp    DWORD PTR [rbx+0x18],0xf
   14002d63e:	jne    0x14002d64a
   14002d640:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14002d648:	je     0x14002d665
   14002d64a:	cmp    DWORD PTR [rbx],r9d
   14002d64d:	je     0x14002d665
   14002d64f:	mov    ecx,DWORD PTR [rdi]
   14002d651:	and    ecx,edx
   14002d653:	cmp    ecx,0x19930522
   14002d659:	jb     0x14002d665
   14002d65b:	test   BYTE PTR [rdi+0x24],r12b
   14002d65f:	jne    0x14002d7e4
   14002d665:	mov    eax,DWORD PTR [rbx+0x4]
   14002d668:	test   al,0x66
   14002d66a:	je     0x14002d702
   14002d670:	cmp    DWORD PTR [rdi+0x4],0x0
   14002d674:	je     0x14002d7e4
   14002d67a:	cmp    DWORD PTR [rsp+0x88],0x0
   14002d682:	jne    0x14002d7e4
   14002d688:	and    eax,0x20
   14002d68b:	je     0x14002d6cb
   14002d68d:	cmp    DWORD PTR [rbx],r9d
   14002d690:	jne    0x14002d6cb
   14002d692:	mov    r8,QWORD PTR [r14+0xf8]
   14002d699:	mov    rdx,rbp
   14002d69c:	mov    rcx,rdi
   14002d69f:	call   0x14002d9c4
   14002d6a4:	mov    ebx,eax
   14002d6a6:	cmp    eax,0xffffffff
   14002d6a9:	jl     0x14002d6b0
   14002d6ab:	cmp    eax,DWORD PTR [rdi+0x4]
   14002d6ae:	jl     0x14002d6b5
   14002d6b0:	call   0x1400266c8
   14002d6b5:	mov    r9d,ebx
   14002d6b8:	mov    rcx,rsi
   14002d6bb:	mov    rdx,rbp
   14002d6be:	mov    r8,rdi
   14002d6c1:	call   0x14002d448
   14002d6c6:	jmp    0x14002d7e4
   14002d6cb:	test   eax,eax
   14002d6cd:	je     0x14002d6ef
   14002d6cf:	cmp    DWORD PTR [rbx],r8d
   14002d6d2:	jne    0x14002d6ef
   14002d6d4:	mov    esi,DWORD PTR [rbx+0x38]
   14002d6d7:	cmp    esi,0xffffffff
   14002d6da:	jl     0x14002d6e1
   14002d6dc:	cmp    esi,DWORD PTR [rdi+0x4]
   14002d6df:	jl     0x14002d6e6
   14002d6e1:	call   0x1400266c8
   14002d6e6:	mov    rcx,QWORD PTR [rbx+0x28]
   14002d6ea:	mov    r9d,esi
   14002d6ed:	jmp    0x14002d6bb
   14002d6ef:	mov    r8,rdi
   14002d6f2:	mov    rdx,rbp
   14002d6f5:	mov    rcx,rsi
   14002d6f8:	call   0x14002abd4
   14002d6fd:	jmp    0x14002d7e4
   14002d702:	cmp    DWORD PTR [rdi+0xc],0x0
   14002d706:	jne    0x14002d736
   14002d708:	mov    eax,DWORD PTR [rdi]
   14002d70a:	and    eax,edx
   14002d70c:	cmp    eax,0x19930521
   14002d711:	jb     0x14002d7e4
   14002d717:	cmp    DWORD PTR [rdi+0x20],0x0
   14002d71b:	je     0x14002d72b
   14002d71d:	call   0x14002ae04
   14002d722:	movsxd rcx,DWORD PTR [rdi+0x20]
   14002d726:	add    rax,rcx
   14002d729:	jmp    0x14002d72d
   14002d72b:	xor    eax,eax
   14002d72d:	test   rax,rax
   14002d730:	je     0x14002d7e4
   14002d736:	cmp    DWORD PTR [rbx],0xe06d7363
   14002d73c:	jne    0x14002d7ab
   14002d73e:	cmp    DWORD PTR [rbx+0x18],0x3
   14002d742:	jb     0x14002d7ab
   14002d744:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14002d74b:	jbe    0x14002d7ab
   14002d74d:	mov    rax,QWORD PTR [rbx+0x30]
   14002d751:	cmp    DWORD PTR [rax+0x8],0x0
   14002d755:	je     0x14002d769
   14002d757:	call   0x14002ae1c
   14002d75c:	mov    rcx,QWORD PTR [rbx+0x30]
   14002d760:	movsxd r10,DWORD PTR [rcx+0x8]
   14002d764:	add    r10,rax
   14002d767:	jmp    0x14002d76c
   14002d769:	xor    r10d,r10d
   14002d76c:	test   r10,r10
   14002d76f:	je     0x14002d7ab
   14002d771:	movzx  eax,BYTE PTR [rsp+0x98]
   14002d779:	mov    r9,rbp
   14002d77c:	mov    r8,r14
   14002d77f:	mov    DWORD PTR [rsp+0x38],eax
   14002d783:	mov    rax,QWORD PTR [rsp+0x90]
   14002d78b:	mov    rdx,rsi
   14002d78e:	mov    QWORD PTR [rsp+0x30],rax
   14002d793:	mov    eax,DWORD PTR [rsp+0x88]
   14002d79a:	mov    rcx,rbx
   14002d79d:	mov    DWORD PTR [rsp+0x28],eax
   14002d7a1:	mov    QWORD PTR [rsp+0x20],rdi
   14002d7a6:	call   r10
   14002d7a9:	jmp    0x14002d7e7
   14002d7ab:	mov    rax,QWORD PTR [rsp+0x90]
   14002d7b3:	mov    r9,rbp
   14002d7b6:	mov    r8,r14
   14002d7b9:	mov    QWORD PTR [rsp+0x38],rax
   14002d7be:	mov    eax,DWORD PTR [rsp+0x88]
   14002d7c5:	mov    rdx,rsi
   14002d7c8:	mov    DWORD PTR [rsp+0x30],eax
   14002d7cc:	mov    al,BYTE PTR [rsp+0x98]
   14002d7d3:	mov    rcx,rbx
   14002d7d6:	mov    BYTE PTR [rsp+0x28],al
   14002d7da:	mov    QWORD PTR [rsp+0x20],rdi
   14002d7df:	call   0x14002c720
   14002d7e4:	mov    eax,r12d
   14002d7e7:	mov    rbx,QWORD PTR [rsp+0x60]
   14002d7ec:	mov    rbp,QWORD PTR [rsp+0x68]
   14002d7f1:	mov    rsi,QWORD PTR [rsp+0x70]
   14002d7f6:	add    rsp,0x40
   14002d7fa:	pop    r14
   14002d7fc:	pop    r12
   14002d7fe:	pop    rdi
   14002d7ff:	ret    
   14002d800:	mov    rax,rsp
   14002d803:	mov    QWORD PTR [rax+0x8],rbx
   14002d807:	mov    QWORD PTR [rax+0x10],rbp
   14002d80b:	mov    QWORD PTR [rax+0x18],rsi
   14002d80f:	mov    QWORD PTR [rax+0x20],rdi
   14002d813:	push   r14
   14002d815:	sub    rsp,0x20
   14002d819:	mov    esi,DWORD PTR [rcx+0x4]
   14002d81c:	xor    ebx,ebx
   14002d81e:	mov    r14,r8
   14002d821:	mov    rbp,rdx
   14002d824:	mov    rdi,rcx
   14002d827:	test   esi,esi
   14002d829:	je     0x14002d839
   14002d82b:	movsxd rsi,esi
   14002d82e:	call   0x14002ae04
   14002d833:	lea    rcx,[rsi+rax*1]
   14002d837:	jmp    0x14002d83c
   14002d839:	mov    rcx,rbx
   14002d83c:	test   rcx,rcx
   14002d83f:	je     0x14002d8fe
   14002d845:	test   esi,esi
   14002d847:	je     0x14002d858
   14002d849:	movsxd rsi,DWORD PTR [rdi+0x4]
   14002d84d:	call   0x14002ae04
   14002d852:	lea    rcx,[rsi+rax*1]
   14002d856:	jmp    0x14002d85b
   14002d858:	mov    rcx,rbx
   14002d85b:	cmp    BYTE PTR [rcx+0x10],bl
   14002d85e:	je     0x14002d8fe
   14002d864:	test   esi,esi
   14002d866:	je     0x14002d879
   14002d868:	call   0x14002ae04
   14002d86d:	mov    rsi,rax
   14002d870:	movsxd rax,DWORD PTR [rdi+0x4]
   14002d874:	add    rsi,rax
   14002d877:	jmp    0x14002d87c
   14002d879:	mov    rsi,rbx
   14002d87c:	call   0x14002ae1c
   14002d881:	mov    rcx,rax
   14002d884:	movsxd rax,DWORD PTR [rbp+0x4]
   14002d888:	add    rcx,rax
   14002d88b:	cmp    rsi,rcx
   14002d88e:	je     0x14002d8ca
   14002d890:	cmp    DWORD PTR [rdi+0x4],ebx
   14002d893:	je     0x14002d8a6
   14002d895:	call   0x14002ae04
   14002d89a:	mov    rsi,rax
   14002d89d:	movsxd rax,DWORD PTR [rdi+0x4]
   14002d8a1:	add    rsi,rax
   14002d8a4:	jmp    0x14002d8a9
   14002d8a6:	mov    rsi,rbx
   14002d8a9:	call   0x14002ae1c
   14002d8ae:	movsxd rdx,DWORD PTR [rbp+0x4]
   14002d8b2:	lea    rcx,[rsi+0x10]
   14002d8b6:	add    rdx,0x10
   14002d8ba:	add    rdx,rax
   14002d8bd:	call   0x140026280
   14002d8c2:	test   eax,eax
   14002d8c4:	je     0x14002d8ca
   14002d8c6:	xor    eax,eax
   14002d8c8:	jmp    0x14002d903
   14002d8ca:	mov    al,0x2
   14002d8cc:	test   BYTE PTR [rbp+0x0],al
   14002d8cf:	je     0x14002d8d6
   14002d8d1:	test   BYTE PTR [rdi],0x8
   14002d8d4:	je     0x14002d8fa
   14002d8d6:	test   BYTE PTR [r14],0x1
   14002d8da:	je     0x14002d8e1
   14002d8dc:	test   BYTE PTR [rdi],0x1
   14002d8df:	je     0x14002d8fa
   14002d8e1:	test   BYTE PTR [r14],0x4
   14002d8e5:	je     0x14002d8ec
   14002d8e7:	test   BYTE PTR [rdi],0x4
   14002d8ea:	je     0x14002d8fa
   14002d8ec:	test   BYTE PTR [r14],al
   14002d8ef:	je     0x14002d8f5
   14002d8f1:	test   BYTE PTR [rdi],al
   14002d8f3:	je     0x14002d8fa
   14002d8f5:	mov    ebx,0x1
   14002d8fa:	mov    eax,ebx
   14002d8fc:	jmp    0x14002d903
   14002d8fe:	mov    eax,0x1
   14002d903:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d908:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d90d:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d912:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d917:	add    rsp,0x20
   14002d91b:	pop    r14
   14002d91d:	ret    
   14002d91e:	int3   
   14002d91f:	int3   
   14002d920:	sub    rsp,0x28
   14002d924:	movsxd r9,DWORD PTR [r8+0x1c]
   14002d928:	mov    rax,QWORD PTR [rcx]
   14002d92b:	mov    r10,r8
   14002d92e:	mov    eax,DWORD PTR [r9+rax*1]
   14002d932:	cmp    eax,0xfffffffe
   14002d935:	jne    0x14002d942
   14002d937:	mov    r8,QWORD PTR [rdx]
   14002d93a:	mov    rcx,r10
   14002d93d:	call   0x14002d9c4
   14002d942:	add    rsp,0x28
   14002d946:	ret    
   14002d947:	int3   
   14002d948:	rex push rbx
   14002d94a:	sub    rsp,0x20
   14002d94e:	lea    r9,[rsp+0x40]
   14002d953:	mov    rbx,r8
   14002d956:	call   0x14002a9dc
   14002d95b:	mov    rcx,QWORD PTR [rax]
   14002d95e:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002d962:	mov    QWORD PTR [rsp+0x40],rcx
   14002d967:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14002d96b:	add    rsp,0x20
   14002d96f:	pop    rbx
   14002d970:	ret    
   14002d971:	int3   
   14002d972:	int3   
   14002d973:	int3   
   14002d974:	movsxd rdx,DWORD PTR [r8+0x1c]
   14002d978:	mov    rax,QWORD PTR [rcx]
   14002d97b:	mov    DWORD PTR [rdx+rax*1],r9d
   14002d97f:	ret    
   14002d980:	mov    QWORD PTR [rsp+0x8],rbx
   14002d985:	push   rdi
   14002d986:	sub    rsp,0x20
   14002d98a:	mov    edi,r9d
   14002d98d:	lea    r9,[rsp+0x40]
   14002d992:	mov    rbx,r8
   14002d995:	call   0x14002a9dc
   14002d99a:	mov    rcx,QWORD PTR [rax]
   14002d99d:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002d9a1:	mov    QWORD PTR [rsp+0x40],rcx
   14002d9a6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14002d9aa:	jle    0x14002d9b0
   14002d9ac:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14002d9b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d9b5:	add    rsp,0x20
   14002d9b9:	pop    rdi
   14002d9ba:	ret    
   14002d9bb:	int3   
   14002d9bc:	mov    r8,QWORD PTR [rdx]
   14002d9bf:	jmp    0x14002d9c4
   14002d9c4:	mov    QWORD PTR [rsp+0x8],rbx
   14002d9c9:	mov    QWORD PTR [rsp+0x10],rbp
   14002d9ce:	mov    QWORD PTR [rsp+0x18],rsi
   14002d9d3:	push   rdi
   14002d9d4:	sub    rsp,0x20
   14002d9d8:	mov    rbp,r8
   14002d9db:	mov    rsi,rdx
   14002d9de:	mov    rbx,rcx
   14002d9e1:	test   rcx,rcx
   14002d9e4:	jne    0x14002d9eb
   14002d9e6:	call   0x1400266c8
   14002d9eb:	movsxd rax,DWORD PTR [rbx+0x18]
   14002d9ef:	mov    edi,DWORD PTR [rbx+0x14]
   14002d9f2:	add    rax,QWORD PTR [rsi+0x8]
   14002d9f6:	jne    0x14002d9fd
   14002d9f8:	call   0x1400266c8
   14002d9fd:	xor    ecx,ecx
   14002d9ff:	test   edi,edi
   14002da01:	je     0x14002da35
   14002da03:	mov    r8,QWORD PTR [rsi+0x8]
   14002da07:	movsxd r9,DWORD PTR [rbx+0x18]
   14002da0b:	lea    rdx,[r8+r9*1]
   14002da0f:	movsxd rax,DWORD PTR [rdx]
   14002da12:	add    rax,r8
   14002da15:	cmp    rbp,rax
   14002da18:	jl     0x14002da24
   14002da1a:	inc    ecx
   14002da1c:	add    rdx,0x8
   14002da20:	cmp    ecx,edi
   14002da22:	jb     0x14002da0f
   14002da24:	test   ecx,ecx
   14002da26:	je     0x14002da35
   14002da28:	dec    ecx
   14002da2a:	lea    rax,[r8+rcx*8]
   14002da2e:	mov    eax,DWORD PTR [rax+r9*1+0x4]
   14002da33:	jmp    0x14002da38
   14002da35:	or     eax,0xffffffff
   14002da38:	mov    rbx,QWORD PTR [rsp+0x30]
   14002da3d:	mov    rbp,QWORD PTR [rsp+0x38]
   14002da42:	mov    rsi,QWORD PTR [rsp+0x40]
   14002da47:	add    rsp,0x20
   14002da4b:	pop    rdi
   14002da4c:	ret    
   14002da4d:	int3   
   14002da4e:	int3   
   14002da4f:	int3   
   14002da50:	mov    rax,rsp
   14002da53:	mov    QWORD PTR [rax+0x8],rbx
   14002da57:	mov    QWORD PTR [rax+0x10],rbp
   14002da5b:	mov    QWORD PTR [rax+0x20],rsi
   14002da5f:	mov    QWORD PTR [rax+0x18],r8
   14002da63:	push   rdi
   14002da64:	push   r12
   14002da66:	push   r13
   14002da68:	push   r14
   14002da6a:	push   r15
   14002da6c:	sub    rsp,0x20
   14002da70:	mov    rsi,r9
   14002da73:	mov    r14,rdx
   14002da76:	mov    r15,rcx
   14002da79:	test   rdx,rdx
   14002da7c:	je     0x14002da98
   14002da7e:	test   r8,r8
   14002da81:	je     0x14002da98
   14002da83:	test   r9,r9
   14002da86:	jne    0x14002dab7
   14002da88:	call   0x140025380
   14002da8d:	mov    DWORD PTR [rax],0x16
   14002da93:	call   0x140024554
   14002da98:	xor    eax,eax
   14002da9a:	mov    rbx,QWORD PTR [rsp+0x50]
   14002da9f:	mov    rbp,QWORD PTR [rsp+0x58]
   14002daa4:	mov    rsi,QWORD PTR [rsp+0x68]
   14002daa9:	add    rsp,0x20
   14002daad:	pop    r15
   14002daaf:	pop    r14
   14002dab1:	pop    r13
   14002dab3:	pop    r12
   14002dab5:	pop    rdi
   14002dab6:	ret    
   14002dab7:	test   rcx,rcx
   14002daba:	je     0x14002da88
   14002dabc:	xor    edx,edx
   14002dabe:	or     rax,0xffffffffffffffff
   14002dac2:	div    r14
   14002dac5:	cmp    r8,rax
   14002dac8:	ja     0x14002da88
   14002daca:	mov    rdi,r14
   14002dacd:	imul   rdi,r8
   14002dad1:	test   DWORD PTR [r9+0x18],0x10c
   14002dad9:	mov    rbp,rdi
   14002dadc:	je     0x14002dae4
   14002dade:	mov    r12d,DWORD PTR [r9+0x24]
   14002dae2:	jmp    0x14002daea
   14002dae4:	mov    r12d,0x1000
   14002daea:	test   rdi,rdi
   14002daed:	je     0x14002dbd6
   14002daf3:	mov    eax,DWORD PTR [rsi+0x18]
   14002daf6:	and    eax,0x108
   14002dafb:	je     0x14002db36
   14002dafd:	mov    r13d,DWORD PTR [rsi+0x8]
   14002db01:	test   r13d,r13d
   14002db04:	je     0x14002db36
   14002db06:	js     0x14002db8e
   14002db0c:	mov    rcx,QWORD PTR [rsi]
   14002db0f:	cmp    rbp,r13
   14002db12:	mov    rdx,r15
   14002db15:	cmovb  r13d,ebp
   14002db19:	mov    r8d,r13d
   14002db1c:	mov    ebx,r13d
   14002db1f:	call   0x140020e80
   14002db24:	sub    DWORD PTR [rsi+0x8],r13d
   14002db28:	add    QWORD PTR [rsi],rbx
   14002db2b:	sub    rbp,rbx
   14002db2e:	add    r15,rbx
   14002db31:	jmp    0x14002dbc8
   14002db36:	mov    ebx,r12d
   14002db39:	cmp    rbp,rbx
   14002db3c:	jb     0x14002dba2
   14002db3e:	test   eax,eax
   14002db40:	je     0x14002db4e
   14002db42:	mov    rcx,rsi
   14002db45:	call   0x14002158c
   14002db4a:	test   eax,eax
   14002db4c:	jne    0x14002db92
   14002db4e:	test   r12d,r12d
   14002db51:	je     0x14002db61
   14002db53:	xor    edx,edx
   14002db55:	mov    rax,rbp
   14002db58:	div    rbx
   14002db5b:	mov    ebx,ebp
   14002db5d:	sub    ebx,edx
   14002db5f:	jmp    0x14002db63
   14002db61:	mov    ebx,ebp
   14002db63:	mov    rcx,rsi
   14002db66:	call   0x140023a40
   14002db6b:	mov    r8d,ebx
   14002db6e:	mov    rdx,r15
   14002db71:	mov    ecx,eax
   14002db73:	call   0x140023b54
   14002db78:	cmp    eax,0xffffffff
   14002db7b:	je     0x14002db8e
   14002db7d:	mov    ecx,eax
   14002db7f:	cmp    eax,ebx
   14002db81:	cmova  ecx,ebx
   14002db84:	sub    rbp,rcx
   14002db87:	add    r15,rcx
   14002db8a:	cmp    eax,ebx
   14002db8c:	jae    0x14002dbc8
   14002db8e:	or     DWORD PTR [rsi+0x18],0x20
   14002db92:	sub    rdi,rbp
   14002db95:	xor    edx,edx
   14002db97:	mov    rax,rdi
   14002db9a:	div    r14
   14002db9d:	jmp    0x14002da9a
   14002dba2:	movsx  ecx,BYTE PTR [r15]
   14002dba6:	mov    rdx,rsi
   14002dba9:	call   0x1400253f0
   14002dbae:	cmp    eax,0xffffffff
   14002dbb1:	je     0x14002db92
   14002dbb3:	inc    r15
   14002dbb6:	dec    rbp
   14002dbb9:	cmp    DWORD PTR [rsi+0x24],0x0
   14002dbbd:	mov    r12d,0x1
   14002dbc3:	cmovg  r12d,DWORD PTR [rsi+0x24]
   14002dbc8:	test   rbp,rbp
   14002dbcb:	jne    0x14002daf3
   14002dbd1:	mov    r8,QWORD PTR [rsp+0x60]
   14002dbd6:	mov    rax,r8
   14002dbd9:	jmp    0x14002da9a
   14002dbde:	int3   
   14002dbdf:	int3   
   14002dbe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dbe5:	mov    QWORD PTR [rsp+0x10],rsi
   14002dbea:	push   rdi
   14002dbeb:	sub    rsp,0x20
   14002dbef:	mov    rdi,rcx
   14002dbf2:	test   rcx,rcx
   14002dbf5:	jne    0x14002dc0c
   14002dbf7:	call   0x140025380
   14002dbfc:	mov    DWORD PTR [rax],0x16
   14002dc02:	call   0x140024554
   14002dc07:	jmp    0x14002dd20
   14002dc0c:	call   0x1400227ec
   14002dc11:	test   eax,eax
   14002dc13:	js     0x14002dd20
   14002dc19:	mov    eax,DWORD PTR [rdi+0x18]
   14002dc1c:	test   al,0x83
   14002dc1e:	je     0x14002dd20
   14002dc24:	test   al,0x40
   14002dc26:	jne    0x14002dd20
   14002dc2c:	test   al,0x2
   14002dc2e:	je     0x14002dc3b
   14002dc30:	or     eax,0x20
   14002dc33:	mov    DWORD PTR [rdi+0x18],eax
   14002dc36:	jmp    0x14002dd20
   14002dc3b:	or     eax,0x1
   14002dc3e:	mov    DWORD PTR [rdi+0x18],eax
   14002dc41:	test   eax,0x10c
   14002dc46:	jne    0x14002dc52
   14002dc48:	mov    rcx,rdi
   14002dc4b:	call   0x140028a00
   14002dc50:	jmp    0x14002dc59
   14002dc52:	mov    rax,QWORD PTR [rdi+0x10]
   14002dc56:	mov    QWORD PTR [rdi],rax
   14002dc59:	mov    rcx,rdi
   14002dc5c:	call   0x140023a40
   14002dc61:	mov    r8d,DWORD PTR [rdi+0x24]
   14002dc65:	mov    rdx,QWORD PTR [rdi+0x10]
   14002dc69:	mov    ecx,eax
   14002dc6b:	call   0x14002ed48
   14002dc70:	mov    DWORD PTR [rdi+0x8],eax
   14002dc73:	lea    ecx,[rax+0x1]
   14002dc76:	cmp    ecx,0x1
   14002dc79:	jbe    0x14002dd0f
   14002dc7f:	test   BYTE PTR [rdi+0x18],0x82
   14002dc83:	jne    0x14002dcdf
   14002dc85:	mov    rcx,rdi
   14002dc88:	call   0x140023a40
   14002dc8d:	cmp    eax,0xffffffff
   14002dc90:	je     0x14002dcca
   14002dc92:	mov    rcx,rdi
   14002dc95:	call   0x140023a40
   14002dc9a:	cmp    eax,0xfffffffe
   14002dc9d:	je     0x14002dcca
   14002dc9f:	mov    rcx,rdi
   14002dca2:	call   0x140023a40
   14002dca7:	mov    rcx,rdi
   14002dcaa:	lea    rsi,[rip+0x2462f]        # 0x1400522e0
   14002dcb1:	movsxd rbx,eax
   14002dcb4:	sar    rbx,0x5
   14002dcb8:	call   0x140023a40
   14002dcbd:	and    eax,0x1f
   14002dcc0:	imul   rax,rax,0x58
   14002dcc4:	add    rax,QWORD PTR [rsi+rbx*8]
   14002dcc8:	jmp    0x14002dcd1
   14002dcca:	lea    rax,[rip+0x1f71f]        # 0x14004d3f0
   14002dcd1:	mov    al,BYTE PTR [rax+0x8]
   14002dcd4:	and    al,0x82
   14002dcd6:	cmp    al,0x82
   14002dcd8:	jne    0x14002dcdf
   14002dcda:	bts    DWORD PTR [rdi+0x18],0xd
   14002dcdf:	cmp    DWORD PTR [rdi+0x24],0x200
   14002dce6:	jne    0x14002dcfe
   14002dce8:	test   BYTE PTR [rdi+0x18],0x8
   14002dcec:	je     0x14002dcfe
   14002dcee:	test   DWORD PTR [rdi+0x18],0x400
   14002dcf5:	jne    0x14002dcfe
   14002dcf7:	mov    DWORD PTR [rdi+0x24],0x1000
   14002dcfe:	mov    rcx,QWORD PTR [rdi]
   14002dd01:	dec    DWORD PTR [rdi+0x8]
   14002dd04:	movzx  eax,BYTE PTR [rcx]
   14002dd07:	inc    rcx
   14002dd0a:	mov    QWORD PTR [rdi],rcx
   14002dd0d:	jmp    0x14002dd23
   14002dd0f:	neg    eax
   14002dd11:	sbb    eax,eax
   14002dd13:	and    eax,0x10
   14002dd16:	add    eax,0x10
   14002dd19:	or     DWORD PTR [rdi+0x18],eax
   14002dd1c:	and    DWORD PTR [rdi+0x8],0x0
   14002dd20:	or     eax,0xffffffff
   14002dd23:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd28:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dd2d:	add    rsp,0x20
   14002dd31:	pop    rdi
   14002dd32:	ret    
   14002dd33:	int3   
   14002dd34:	mov    QWORD PTR [rsp+0x8],rbx
   14002dd39:	push   rdi
   14002dd3a:	sub    rsp,0x20
   14002dd3e:	test   BYTE PTR [rdx+0x18],0x40
   14002dd42:	mov    rbx,rdx
   14002dd45:	mov    edi,ecx
   14002dd47:	jne    0x14002ddd4
   14002dd4d:	mov    rcx,rdx
   14002dd50:	call   0x140023a40
   14002dd55:	lea    rdx,[rip+0x1f694]        # 0x14004d3f0
   14002dd5c:	lea    r10,[rip+0x2457d]        # 0x1400522e0
   14002dd63:	movsxd r9,eax
   14002dd66:	lea    r8d,[r9+0x2]
   14002dd6a:	cmp    r8d,0x1
   14002dd6e:	jbe    0x14002dd88
   14002dd70:	mov    r8,r9
   14002dd73:	mov    rcx,r9
   14002dd76:	and    r8d,0x1f
   14002dd7a:	sar    rcx,0x5
   14002dd7e:	imul   r8,r8,0x58
   14002dd82:	add    r8,QWORD PTR [r10+rcx*8]
   14002dd86:	jmp    0x14002dd8b
   14002dd88:	mov    r8,rdx
   14002dd8b:	test   BYTE PTR [r8+0x38],0x7f
   14002dd90:	jne    0x14002ddb6
   14002dd92:	lea    eax,[r9+0x2]
   14002dd96:	cmp    eax,0x1
   14002dd99:	jbe    0x14002ddb0
   14002dd9b:	mov    rdx,r9
   14002dd9e:	mov    rax,r9
   14002dda1:	and    edx,0x1f
   14002dda4:	sar    rax,0x5
   14002dda8:	imul   rdx,rdx,0x58
   14002ddac:	add    rdx,QWORD PTR [r10+rax*8]
   14002ddb0:	test   BYTE PTR [rdx+0x38],0x80
   14002ddb4:	je     0x14002ddd4
   14002ddb6:	call   0x140025380
   14002ddbb:	mov    DWORD PTR [rax],0x16
   14002ddc1:	call   0x140024554
   14002ddc6:	or     eax,0xffffffff
   14002ddc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ddce:	add    rsp,0x20
   14002ddd2:	pop    rdi
   14002ddd3:	ret    
   14002ddd4:	cmp    edi,0xffffffff
   14002ddd7:	je     0x14002ddc6
   14002ddd9:	test   BYTE PTR [rbx+0x18],0x1
   14002dddd:	jne    0x14002ddeb
   14002dddf:	test   BYTE PTR [rbx+0x18],0x80
   14002dde3:	je     0x14002ddc6
   14002dde5:	test   BYTE PTR [rbx+0x18],0x2
   14002dde9:	jne    0x14002ddc6
   14002ddeb:	cmp    QWORD PTR [rbx+0x10],0x0
   14002ddf0:	jne    0x14002ddfa
   14002ddf2:	mov    rcx,rbx
   14002ddf5:	call   0x140028a00
   14002ddfa:	mov    rax,QWORD PTR [rbx]
   14002ddfd:	cmp    rax,QWORD PTR [rbx+0x10]
   14002de01:	jne    0x14002de0f
   14002de03:	cmp    DWORD PTR [rbx+0x8],0x0
   14002de07:	jne    0x14002ddc6
   14002de09:	inc    rax
   14002de0c:	mov    QWORD PTR [rbx],rax
   14002de0f:	dec    QWORD PTR [rbx]
   14002de12:	test   BYTE PTR [rbx+0x18],0x40
   14002de16:	mov    rax,QWORD PTR [rbx]
   14002de19:	je     0x14002de28
   14002de1b:	cmp    BYTE PTR [rax],dil
   14002de1e:	je     0x14002de2b
   14002de20:	inc    rax
   14002de23:	mov    QWORD PTR [rbx],rax
   14002de26:	jmp    0x14002ddc6
   14002de28:	mov    BYTE PTR [rax],dil
   14002de2b:	inc    DWORD PTR [rbx+0x8]
   14002de2e:	and    DWORD PTR [rbx+0x18],0xffffffef
   14002de32:	or     DWORD PTR [rbx+0x18],0x1
   14002de36:	movzx  eax,dil
   14002de3a:	jmp    0x14002ddc9
   14002de3c:	mov    QWORD PTR [rsp+0x8],rbx
   14002de41:	mov    QWORD PTR [rsp+0x10],rdx
   14002de46:	push   rdi
   14002de47:	sub    rsp,0x20
   14002de4b:	mov    rbx,rdx
   14002de4e:	mov    edi,ecx
   14002de50:	xor    eax,eax
   14002de52:	test   rdx,rdx
   14002de55:	setne  al
   14002de58:	test   eax,eax
   14002de5a:	jne    0x14002de71
   14002de5c:	call   0x140025380
   14002de61:	mov    DWORD PTR [rax],0x16
   14002de67:	call   0x140024554
   14002de6c:	or     eax,0xffffffff
   14002de6f:	jmp    0x14002de99
   14002de71:	call   0x1400227ec
   14002de76:	test   eax,eax
   14002de78:	js     0x14002de6c
   14002de7a:	mov    rcx,rbx
   14002de7d:	call   0x140021434
   14002de82:	nop
   14002de83:	mov    rdx,rbx
   14002de86:	mov    ecx,edi
   14002de88:	call   0x14002dd34
   14002de8d:	mov    edi,eax
   14002de8f:	mov    rcx,rbx
   14002de92:	call   0x1400214d0
   14002de97:	mov    eax,edi
   14002de99:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de9e:	add    rsp,0x20
   14002dea2:	pop    rdi
   14002dea3:	ret    
   14002dea4:	mov    QWORD PTR [rsp+0x8],rbx
   14002dea9:	mov    QWORD PTR [rsp+0x10],rsi
   14002deae:	push   rdi
   14002deaf:	sub    rsp,0x20
   14002deb3:	mov    rdi,rcx
   14002deb6:	test   rcx,rcx
   14002deb9:	jne    0x14002ded0
   14002debb:	call   0x140025380
   14002dec0:	mov    DWORD PTR [rax],0x16
   14002dec6:	call   0x140024554
   14002decb:	jmp    0x14002dfe6
   14002ded0:	call   0x1400227ec
   14002ded5:	test   eax,eax
   14002ded7:	js     0x14002dfe6
   14002dedd:	mov    eax,DWORD PTR [rdi+0x18]
   14002dee0:	test   al,0x83
   14002dee2:	je     0x14002dfe6
   14002dee8:	test   al,0x40
   14002deea:	jne    0x14002dfe6
   14002def0:	test   al,0x2
   14002def2:	je     0x14002deff
   14002def4:	or     eax,0x20
   14002def7:	mov    DWORD PTR [rdi+0x18],eax
   14002defa:	jmp    0x14002dfe6
   14002deff:	or     eax,0x1
   14002df02:	mov    DWORD PTR [rdi+0x18],eax
   14002df05:	test   eax,0x10c
   14002df0a:	jne    0x14002df16
   14002df0c:	mov    rcx,rdi
   14002df0f:	call   0x140028a00
   14002df14:	jmp    0x14002df1d
   14002df16:	mov    rax,QWORD PTR [rdi+0x10]
   14002df1a:	mov    QWORD PTR [rdi],rax
   14002df1d:	mov    rcx,rdi
   14002df20:	call   0x140023a40
   14002df25:	mov    r8d,DWORD PTR [rdi+0x24]
   14002df29:	mov    rdx,QWORD PTR [rdi+0x10]
   14002df2d:	mov    ecx,eax
   14002df2f:	call   0x14002ed48
   14002df34:	mov    DWORD PTR [rdi+0x8],eax
   14002df37:	lea    ecx,[rax+0x1]
   14002df3a:	cmp    ecx,0x2
   14002df3d:	jbe    0x14002dfd5
   14002df43:	test   BYTE PTR [rdi+0x18],0x82
   14002df47:	jne    0x14002dfa3
   14002df49:	mov    rcx,rdi
   14002df4c:	call   0x140023a40
   14002df51:	cmp    eax,0xffffffff
   14002df54:	je     0x14002df8e
   14002df56:	mov    rcx,rdi
   14002df59:	call   0x140023a40
   14002df5e:	cmp    eax,0xfffffffe
   14002df61:	je     0x14002df8e
   14002df63:	mov    rcx,rdi
   14002df66:	call   0x140023a40
   14002df6b:	mov    rcx,rdi
   14002df6e:	lea    rsi,[rip+0x2436b]        # 0x1400522e0
   14002df75:	movsxd rbx,eax
   14002df78:	sar    rbx,0x5
   14002df7c:	call   0x140023a40
   14002df81:	and    eax,0x1f
   14002df84:	imul   rax,rax,0x58
   14002df88:	add    rax,QWORD PTR [rsi+rbx*8]
   14002df8c:	jmp    0x14002df95
   14002df8e:	lea    rax,[rip+0x1f45b]        # 0x14004d3f0
   14002df95:	mov    al,BYTE PTR [rax+0x8]
   14002df98:	and    al,0x82
   14002df9a:	cmp    al,0x82
   14002df9c:	jne    0x14002dfa3
   14002df9e:	bts    DWORD PTR [rdi+0x18],0xd
   14002dfa3:	cmp    DWORD PTR [rdi+0x24],0x200
   14002dfaa:	jne    0x14002dfc2
   14002dfac:	test   BYTE PTR [rdi+0x18],0x8
   14002dfb0:	je     0x14002dfc2
   14002dfb2:	test   DWORD PTR [rdi+0x18],0x400
   14002dfb9:	jne    0x14002dfc2
   14002dfbb:	mov    DWORD PTR [rdi+0x24],0x1000
   14002dfc2:	mov    rcx,QWORD PTR [rdi]
   14002dfc5:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002dfc9:	movzx  eax,WORD PTR [rcx]
   14002dfcc:	add    rcx,0x2
   14002dfd0:	mov    QWORD PTR [rdi],rcx
   14002dfd3:	jmp    0x14002dfeb
   14002dfd5:	neg    eax
   14002dfd7:	sbb    eax,eax
   14002dfd9:	and    eax,0x10
   14002dfdc:	add    eax,0x10
   14002dfdf:	or     DWORD PTR [rdi+0x18],eax
   14002dfe2:	and    DWORD PTR [rdi+0x8],0x0
   14002dfe6:	mov    eax,0xffff
   14002dfeb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dff0:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dff5:	add    rsp,0x20
   14002dff9:	pop    rdi
   14002dffa:	ret    
   14002dffb:	int3   
   14002dffc:	xor    r8d,r8d
   14002dfff:	jmp    0x14002e004
   14002e004:	mov    QWORD PTR [rsp+0x8],rbx
   14002e009:	push   rdi
   14002e00a:	sub    rsp,0x40
   14002e00e:	mov    rbx,rdx
   14002e011:	mov    rdi,rcx
   14002e014:	test   rcx,rcx
   14002e017:	jne    0x14002e02d
   14002e019:	call   0x140025380
   14002e01e:	mov    DWORD PTR [rax],0x16
   14002e024:	call   0x140024554
   14002e029:	xor    eax,eax
   14002e02b:	jmp    0x14002e08f
   14002e02d:	test   rdx,rdx
   14002e030:	je     0x14002e019
   14002e032:	cmp    rcx,rdx
   14002e035:	jae    0x14002e029
   14002e037:	lea    rcx,[rsp+0x20]
   14002e03c:	mov    rdx,r8
   14002e03f:	call   0x1400246b8
   14002e044:	mov    rcx,QWORD PTR [rsp+0x28]
   14002e049:	cmp    DWORD PTR [rcx+0x8],0x0
   14002e04d:	jne    0x14002e054
   14002e04f:	dec    rbx
   14002e052:	jmp    0x14002e079
   14002e054:	lea    rdx,[rbx-0x1]
   14002e058:	dec    rdx
   14002e05b:	cmp    rdi,rdx
   14002e05e:	ja     0x14002e06a
   14002e060:	movzx  eax,BYTE PTR [rdx]
   14002e063:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   14002e068:	jne    0x14002e058
   14002e06a:	mov    rcx,rbx
   14002e06d:	sub    rcx,rdx
   14002e070:	and    ecx,0x1
   14002e073:	sub    rbx,rcx
   14002e076:	dec    rbx
   14002e079:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e07e:	je     0x14002e08c
   14002e080:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e085:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e08c:	mov    rax,rbx
   14002e08f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e094:	add    rsp,0x40
   14002e098:	pop    rdi
   14002e099:	ret    
   14002e09a:	int3   
   14002e09b:	int3   
   14002e09c:	mov    QWORD PTR [rsp+0x8],rbx
   14002e0a1:	mov    QWORD PTR [rsp+0x10],rsi
   14002e0a6:	push   rdi
   14002e0a7:	sub    rsp,0x40
   14002e0ab:	mov    ebx,edx
   14002e0ad:	mov    rdx,rcx
   14002e0b0:	lea    rcx,[rsp+0x20]
   14002e0b5:	mov    edi,r9d
   14002e0b8:	mov    esi,r8d
   14002e0bb:	call   0x1400246b8
   14002e0c0:	mov    rax,QWORD PTR [rsp+0x28]
   14002e0c5:	movzx  edx,bl
   14002e0c8:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14002e0cd:	jne    0x14002e0ed
   14002e0cf:	test   esi,esi
   14002e0d1:	je     0x14002e0e7
   14002e0d3:	mov    rax,QWORD PTR [rsp+0x20]
   14002e0d8:	mov    rcx,QWORD PTR [rax+0x108]
   14002e0df:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002e0e3:	and    eax,esi
   14002e0e5:	jmp    0x14002e0e9
   14002e0e7:	xor    eax,eax
   14002e0e9:	test   eax,eax
   14002e0eb:	je     0x14002e0f2
   14002e0ed:	mov    eax,0x1
   14002e0f2:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e0f7:	je     0x14002e105
   14002e0f9:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e0fe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e105:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e10a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002e10f:	add    rsp,0x40
   14002e113:	pop    rdi
   14002e114:	ret    
   14002e115:	int3   
   14002e116:	int3   
   14002e117:	int3   
   14002e118:	mov    edx,ecx
   14002e11a:	mov    r9d,0x4
   14002e120:	xor    r8d,r8d
   14002e123:	xor    ecx,ecx
   14002e125:	jmp    0x14002e09c
   14002e12a:	int3   
   14002e12b:	int3   
   14002e12c:	sub    rsp,0x38
   14002e130:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e139:	call   0x140021a98
   14002e13e:	nop
   14002e13f:	jmp    0x14002e146
   14002e141:	mov    rax,QWORD PTR [rsp+0x50]
   14002e146:	add    rsp,0x38
   14002e14a:	ret    
   14002e14b:	int3   
   14002e14c:	mov    QWORD PTR [rsp+0x18],rbx
   14002e151:	push   rbp
   14002e152:	push   rsi
   14002e153:	push   rdi
   14002e154:	push   r12
   14002e156:	push   r13
   14002e158:	push   r14
   14002e15a:	push   r15
   14002e15c:	lea    rbp,[rsp-0x3e0]
   14002e164:	sub    rsp,0x4e0
   14002e16b:	mov    rax,QWORD PTR [rip+0x1f2d6]        # 0x14004d448
   14002e172:	xor    rax,rsp
   14002e175:	mov    QWORD PTR [rbp+0x3d0],rax
   14002e17c:	xor    eax,eax
   14002e17e:	mov    rbx,rcx
   14002e181:	mov    QWORD PTR [rsp+0x78],rcx
   14002e186:	mov    QWORD PTR [rbp-0x80],rdx
   14002e18a:	lea    rcx,[rbp-0x70]
   14002e18e:	mov    rdx,r8
   14002e191:	mov    r12,r9
   14002e194:	mov    QWORD PTR [rsp+0x50],r9
   14002e199:	mov    DWORD PTR [rsp+0x74],eax
   14002e19d:	mov    r14d,eax
   14002e1a0:	mov    DWORD PTR [rsp+0x5c],eax
   14002e1a4:	mov    edi,eax
   14002e1a6:	mov    DWORD PTR [rsp+0x44],eax
   14002e1aa:	mov    DWORD PTR [rsp+0x48],eax
   14002e1ae:	mov    DWORD PTR [rsp+0x70],eax
   14002e1b2:	mov    DWORD PTR [rsp+0x58],eax
   14002e1b6:	call   0x1400246b8
   14002e1bb:	call   0x140025380
   14002e1c0:	mov    QWORD PTR [rbp-0x48],rax
   14002e1c4:	call   0x1400227ec
   14002e1c9:	xor    r10d,r10d
   14002e1cc:	test   eax,eax
   14002e1ce:	jns    0x14002e1e9
   14002e1d0:	cmp    BYTE PTR [rbp-0x58],r10b
   14002e1d4:	je     0x14002e1e1
   14002e1d6:	mov    rax,QWORD PTR [rbp-0x60]
   14002e1da:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002e1e1:	or     eax,0xffffffff
   14002e1e4:	jmp    0x14002ea13
   14002e1e9:	test   rbx,rbx
   14002e1ec:	jne    0x14002e205
   14002e1ee:	call   0x140025380
   14002e1f3:	mov    DWORD PTR [rax],0x16
   14002e1f9:	call   0x140024554
   14002e1fe:	xor    ecx,ecx
   14002e200:	cmp    BYTE PTR [rbp-0x58],cl
   14002e203:	jmp    0x14002e1d4
   14002e205:	mov    r8,QWORD PTR [rbp-0x80]
   14002e209:	test   r8,r8
   14002e20c:	je     0x14002e1ee
   14002e20e:	movzx  r15d,WORD PTR [r8]
   14002e212:	mov    edx,r10d
   14002e215:	mov    r13d,r10d
   14002e218:	mov    r9d,r10d
   14002e21b:	mov    QWORD PTR [rbp-0x50],r10
   14002e21f:	mov    DWORD PTR [rsp+0x40],edx
   14002e223:	test   r15w,r15w
   14002e227:	je     0x14002ea00
   14002e22d:	mov    rbx,QWORD PTR [rbp-0x40]
   14002e231:	or     esi,0xffffffff
   14002e234:	lea    r11d,[rsi+0x21]
   14002e238:	add    r8,0x2
   14002e23c:	mov    ecx,0x58
   14002e241:	mov    QWORD PTR [rbp-0x80],r8
   14002e245:	test   edx,edx
   14002e247:	js     0x14002e9f1
   14002e24d:	movzx  eax,r15w
   14002e251:	sub    ax,r11w
   14002e255:	cmp    ax,cx
   14002e258:	ja     0x14002e26f
   14002e25a:	lea    rcx,[rip+0xc7ef]        # 0x14003aa50
   14002e261:	movzx  eax,r15w
   14002e265:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14002e26a:	and    ecx,0xf
   14002e26d:	jmp    0x14002e272
   14002e26f:	mov    ecx,r10d
   14002e272:	movsxd rax,ecx
   14002e275:	lea    rcx,[rax+rax*8]
   14002e279:	movsxd rax,r9d
   14002e27c:	add    rcx,rax
   14002e27f:	lea    rax,[rip+0xc7ca]        # 0x14003aa50
   14002e286:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14002e28b:	shr    r9d,0x4
   14002e28f:	mov    DWORD PTR [rsp+0x6c],r9d
   14002e294:	cmp    r9d,0x8
   14002e298:	je     0x14002ec25
   14002e29e:	mov    ecx,r9d
   14002e2a1:	test   r9d,r9d
   14002e2a4:	je     0x14002eae9
   14002e2aa:	dec    ecx
   14002e2ac:	je     0x14002ebff
   14002e2b2:	dec    ecx
   14002e2b4:	je     0x14002eba4
   14002e2ba:	dec    ecx
   14002e2bc:	je     0x14002eb62
   14002e2c2:	dec    ecx
   14002e2c4:	je     0x14002eb55
   14002e2ca:	dec    ecx
   14002e2cc:	je     0x14002eb14
   14002e2d2:	dec    ecx
   14002e2d4:	je     0x14002ea3d
   14002e2da:	dec    ecx
   14002e2dc:	jne    0x14002e9e3
   14002e2e2:	movzx  ecx,r15w
   14002e2e6:	cmp    ecx,0x64
   14002e2e9:	jg     0x14002e4fe
   14002e2ef:	je     0x14002e61d
   14002e2f5:	cmp    ecx,0x41
   14002e2f8:	je     0x14002e4c7
   14002e2fe:	cmp    ecx,0x43
   14002e301:	je     0x14002e451
   14002e307:	lea    eax,[rcx-0x45]
   14002e30a:	test   eax,0xfffffffd
   14002e30f:	je     0x14002e4c7
   14002e315:	cmp    ecx,0x53
   14002e318:	je     0x14002e3db
   14002e31e:	mov    eax,0x58
   14002e323:	cmp    ecx,eax
   14002e325:	je     0x14002e590
   14002e32b:	cmp    ecx,0x5a
   14002e32e:	je     0x14002e37a
   14002e330:	cmp    ecx,0x61
   14002e333:	je     0x14002e4d2
   14002e339:	cmp    ecx,0x63
   14002e33c:	je     0x14002e45d
   14002e342:	mov    edi,0x2d
   14002e347:	cmp    DWORD PTR [rsp+0x70],r10d
   14002e34c:	jne    0x14002e9a9
   14002e352:	test   r14b,0x40
   14002e356:	je     0x14002e87d
   14002e35c:	bt     r14d,0x8
   14002e361:	jae    0x14002e84f
   14002e367:	mov    WORD PTR [rsp+0x60],di
   14002e36c:	mov    esi,0x1
   14002e371:	mov    DWORD PTR [rsp+0x48],esi
   14002e375:	jmp    0x14002e881
   14002e37a:	mov    rax,QWORD PTR [r12]
   14002e37e:	add    r12,0x8
   14002e382:	mov    QWORD PTR [rsp+0x50],r12
   14002e387:	test   rax,rax
   14002e38a:	je     0x14002e3c1
   14002e38c:	mov    rbx,QWORD PTR [rax+0x8]
   14002e390:	test   rbx,rbx
   14002e393:	je     0x14002e3c1
   14002e395:	mov    edi,0x2d
   14002e39a:	bt     r14d,0xb
   14002e39f:	jae    0x14002e3b6
   14002e3a1:	movsx  eax,WORD PTR [rax]
   14002e3a4:	mov    DWORD PTR [rsp+0x58],0x1
   14002e3ac:	cdq    
   14002e3ad:	sub    eax,edx
   14002e3af:	sar    eax,1
   14002e3b1:	mov    r13d,eax
   14002e3b4:	jmp    0x14002e347
   14002e3b6:	movsx  r13d,WORD PTR [rax]
   14002e3ba:	mov    DWORD PTR [rsp+0x58],r10d
   14002e3bf:	jmp    0x14002e347
   14002e3c1:	mov    rbx,QWORD PTR [rip+0x1f2d8]        # 0x14004d6a0
   14002e3c8:	mov    rcx,rbx
   14002e3cb:	call   0x1400278e0
   14002e3d0:	xor    r10d,r10d
   14002e3d3:	mov    r13,rax
   14002e3d6:	jmp    0x14002e342
   14002e3db:	test   r14d,0x830
   14002e3e2:	jne    0x14002e3e7
   14002e3e4:	or     r14d,r11d
   14002e3e7:	cmp    DWORD PTR [rsp+0x44],esi
   14002e3eb:	mov    rbx,QWORD PTR [r12]
   14002e3ef:	mov    eax,0x7fffffff
   14002e3f4:	cmove  edi,eax
   14002e3f7:	add    r12,0x8
   14002e3fb:	mov    QWORD PTR [rsp+0x50],r12
   14002e400:	test   r11b,r14b
   14002e403:	je     0x14002e550
   14002e409:	test   rbx,rbx
   14002e40c:	mov    r13d,r10d
   14002e40f:	cmove  rbx,QWORD PTR [rip+0x1f289]        # 0x14004d6a0
   14002e417:	mov    rsi,rbx
   14002e41a:	test   edi,edi
   14002e41c:	jle    0x14002e342
   14002e422:	cmp    BYTE PTR [rsi],r10b
   14002e425:	je     0x14002e342
   14002e42b:	movzx  ecx,BYTE PTR [rsi]
   14002e42e:	lea    rdx,[rbp-0x70]
   14002e432:	call   0x1400283ac
   14002e437:	xor    r10d,r10d
   14002e43a:	test   eax,eax
   14002e43c:	je     0x14002e441
   14002e43e:	inc    rsi
   14002e441:	inc    r13d
   14002e444:	inc    rsi
   14002e447:	cmp    r13d,edi
   14002e44a:	jl     0x14002e422
   14002e44c:	jmp    0x14002e342
   14002e451:	test   r14d,0x830
   14002e458:	jne    0x14002e45d
   14002e45a:	or     r14d,r11d
   14002e45d:	movzx  eax,WORD PTR [r12]
   14002e462:	add    r12,0x8
   14002e466:	mov    DWORD PTR [rsp+0x58],0x1
   14002e46e:	mov    QWORD PTR [rsp+0x50],r12
   14002e473:	mov    WORD PTR [rsp+0x64],ax
   14002e478:	test   r11b,r14b
   14002e47b:	je     0x14002e4b4
   14002e47d:	mov    BYTE PTR [rsp+0x68],al
   14002e481:	mov    rax,QWORD PTR [rbp-0x70]
   14002e485:	mov    BYTE PTR [rsp+0x69],r10b
   14002e48a:	movsxd r8,DWORD PTR [rax+0xd4]
   14002e491:	lea    r9,[rbp-0x70]
   14002e495:	lea    rdx,[rsp+0x68]
   14002e49a:	lea    rcx,[rbp-0x30]
   14002e49e:	call   0x14002863c
   14002e4a3:	xor    r10d,r10d
   14002e4a6:	test   eax,eax
   14002e4a8:	jns    0x14002e4b8
   14002e4aa:	mov    DWORD PTR [rsp+0x70],0x1
   14002e4b2:	jmp    0x14002e4b8
   14002e4b4:	mov    WORD PTR [rbp-0x30],ax
   14002e4b8:	lea    rbx,[rbp-0x30]
   14002e4bc:	mov    r13d,0x1
   14002e4c2:	jmp    0x14002e342
   14002e4c7:	mov    DWORD PTR [rbp-0x78],0x1
   14002e4ce:	add    r15w,r11w
   14002e4d2:	mov    edx,0x67
   14002e4d7:	mov    eax,0x200
   14002e4dc:	or     r14d,0x40
   14002e4e0:	lea    rbx,[rbp-0x30]
   14002e4e4:	mov    esi,eax
   14002e4e6:	test   edi,edi
   14002e4e8:	jns    0x14002e745
   14002e4ee:	mov    r13d,0x6
   14002e4f4:	mov    DWORD PTR [rsp+0x44],r13d
   14002e4f9:	jmp    0x14002e796
   14002e4fe:	cmp    ecx,0x65
   14002e501:	jl     0x14002e342
   14002e507:	mov    edx,0x67
   14002e50c:	cmp    ecx,edx
   14002e50e:	jle    0x14002e4d7
   14002e510:	cmp    ecx,0x69
   14002e513:	je     0x14002e61d
   14002e519:	cmp    ecx,0x6e
   14002e51c:	je     0x14002e5db
   14002e522:	cmp    ecx,0x6f
   14002e525:	je     0x14002e5c6
   14002e52b:	cmp    ecx,0x70
   14002e52e:	je     0x14002e586
   14002e530:	cmp    ecx,0x73
   14002e533:	je     0x14002e3e7
   14002e539:	cmp    ecx,0x75
   14002e53c:	je     0x14002e621
   14002e542:	cmp    ecx,0x78
   14002e545:	jne    0x14002e342
   14002e54b:	lea    eax,[rdx-0x40]
   14002e54e:	jmp    0x14002e595
   14002e550:	test   rbx,rbx
   14002e553:	mov    DWORD PTR [rsp+0x58],0x1
   14002e55b:	cmove  rbx,QWORD PTR [rip+0x1f145]        # 0x14004d6a8
   14002e563:	mov    rax,rbx
   14002e566:	jmp    0x14002e574
   14002e568:	dec    edi
   14002e56a:	cmp    WORD PTR [rax],r10w
   14002e56e:	je     0x14002e578
   14002e570:	add    rax,0x2
   14002e574:	test   edi,edi
   14002e576:	jne    0x14002e568
   14002e578:	sub    rax,rbx
   14002e57b:	sar    rax,1
   14002e57e:	mov    r13d,eax
   14002e581:	jmp    0x14002e342
   14002e586:	mov    edi,0x10
   14002e58b:	bts    r14d,0xf
   14002e590:	mov    eax,0x7
   14002e595:	mov    r9d,0x10
   14002e59b:	mov    DWORD PTR [rsp+0x74],eax
   14002e59f:	mov    esi,0x200
   14002e5a4:	lea    r15d,[r9+0x20]
   14002e5a8:	test   r14b,r14b
   14002e5ab:	jns    0x14002e632
   14002e5b1:	add    ax,0x51
   14002e5b5:	mov    WORD PTR [rsp+0x60],r15w
   14002e5bb:	lea    edx,[r9-0xe]
   14002e5bf:	mov    WORD PTR [rsp+0x62],ax
   14002e5c4:	jmp    0x14002e636
   14002e5c6:	mov    r9d,0x8
   14002e5cc:	test   r14b,r14b
   14002e5cf:	jns    0x14002e627
   14002e5d1:	mov    esi,0x200
   14002e5d6:	or     r14d,esi
   14002e5d9:	jmp    0x14002e62c
   14002e5db:	mov    rdi,QWORD PTR [r12]
   14002e5df:	add    r12,0x8
   14002e5e3:	mov    QWORD PTR [rsp+0x50],r12
   14002e5e8:	call   0x1400218a8
   14002e5ed:	xor    r10d,r10d
   14002e5f0:	test   eax,eax
   14002e5f2:	je     0x14002ec25
   14002e5f8:	mov    eax,DWORD PTR [rsp+0x40]
   14002e5fc:	lea    r11d,[r10+0x20]
   14002e600:	test   r11b,r14b
   14002e603:	je     0x14002e60a
   14002e605:	mov    WORD PTR [rdi],ax
   14002e608:	jmp    0x14002e60c
   14002e60a:	mov    DWORD PTR [rdi],eax
   14002e60c:	mov    edx,DWORD PTR [rsp+0x40]
   14002e610:	mov    DWORD PTR [rsp+0x70],0x1
   14002e618:	jmp    0x14002e9b3
   14002e61d:	or     r14d,0x40
   14002e621:	mov    r9d,0xa
   14002e627:	mov    esi,0x200
   14002e62c:	mov    r15d,0x30
   14002e632:	mov    edx,DWORD PTR [rsp+0x48]
   14002e636:	mov    eax,0x8000
   14002e63b:	test   eax,r14d
   14002e63e:	je     0x14002e64a
   14002e640:	mov    r8,QWORD PTR [r12]
   14002e644:	add    r12,0x8
   14002e648:	jmp    0x14002e687
   14002e64a:	bt     r14d,0xc
   14002e64f:	jb     0x14002e640
   14002e651:	add    r12,0x8
   14002e655:	test   r11b,r14b
   14002e658:	je     0x14002e675
   14002e65a:	mov    QWORD PTR [rsp+0x50],r12
   14002e65f:	test   r14b,0x40
   14002e663:	je     0x14002e66d
   14002e665:	movsx  r8,WORD PTR [r12-0x8]
   14002e66b:	jmp    0x14002e68c
   14002e66d:	movzx  r8d,WORD PTR [r12-0x8]
   14002e673:	jmp    0x14002e68c
   14002e675:	test   r14b,0x40
   14002e679:	je     0x14002e682
   14002e67b:	movsxd r8,DWORD PTR [r12-0x8]
   14002e680:	jmp    0x14002e687
   14002e682:	mov    r8d,DWORD PTR [r12-0x8]
   14002e687:	mov    QWORD PTR [rsp+0x50],r12
   14002e68c:	test   r14b,0x40
   14002e690:	je     0x14002e69f
   14002e692:	test   r8,r8
   14002e695:	jns    0x14002e69f
   14002e697:	neg    r8
   14002e69a:	bts    r14d,0x8
   14002e69f:	test   eax,r14d
   14002e6a2:	jne    0x14002e6ae
   14002e6a4:	bt     r14d,0xc
   14002e6a9:	jb     0x14002e6ae
   14002e6ab:	mov    r8d,r8d
   14002e6ae:	test   edi,edi
   14002e6b0:	jns    0x14002e6b9
   14002e6b2:	mov    edi,0x1
   14002e6b7:	jmp    0x14002e6c2
   14002e6b9:	and    r14d,0xfffffff7
   14002e6bd:	cmp    edi,esi
   14002e6bf:	cmovg  edi,esi
   14002e6c2:	mov    r12d,DWORD PTR [rsp+0x74]
   14002e6c7:	mov    rax,r8
   14002e6ca:	lea    rbx,[rbp+0x1cf]
   14002e6d1:	neg    rax
   14002e6d4:	sbb    ecx,ecx
   14002e6d6:	and    ecx,edx
   14002e6d8:	mov    DWORD PTR [rsp+0x48],ecx
   14002e6dc:	mov    ecx,edi
   14002e6de:	dec    edi
   14002e6e0:	test   ecx,ecx
   14002e6e2:	jg     0x14002e6e9
   14002e6e4:	test   r8,r8
   14002e6e7:	je     0x14002e709
   14002e6e9:	xor    edx,edx
   14002e6eb:	mov    rax,r8
   14002e6ee:	movsxd rcx,r9d
   14002e6f1:	div    rcx
   14002e6f4:	mov    r8,rax
   14002e6f7:	lea    eax,[rdx+0x30]
   14002e6fa:	cmp    eax,0x39
   14002e6fd:	jle    0x14002e702
   14002e6ff:	add    eax,r12d
   14002e702:	mov    BYTE PTR [rbx],al
   14002e704:	dec    rbx
   14002e707:	jmp    0x14002e6dc
   14002e709:	mov    r12,QWORD PTR [rsp+0x50]
   14002e70e:	lea    rax,[rbp+0x1cf]
   14002e715:	mov    DWORD PTR [rsp+0x44],edi
   14002e719:	sub    eax,ebx
   14002e71b:	inc    rbx
   14002e71e:	mov    r13d,eax
   14002e721:	test   esi,r14d
   14002e724:	je     0x14002e342
   14002e72a:	test   eax,eax
   14002e72c:	je     0x14002e737
   14002e72e:	cmp    BYTE PTR [rbx],r15b
   14002e731:	je     0x14002e342
   14002e737:	dec    rbx
   14002e73a:	inc    r13d
   14002e73d:	mov    BYTE PTR [rbx],r15b
   14002e740:	jmp    0x14002e342
   14002e745:	jne    0x14002e758
   14002e747:	cmp    r15w,dx
   14002e74b:	jne    0x14002e78c
   14002e74d:	mov    r13d,0x1
   14002e753:	jmp    0x14002e4f4
   14002e758:	cmp    edi,eax
   14002e75a:	mov    r13d,0xa3
   14002e760:	cmovg  edi,eax
   14002e763:	mov    DWORD PTR [rsp+0x44],edi
   14002e767:	cmp    edi,r13d
   14002e76a:	jle    0x14002e793
   14002e76c:	add    edi,0x15d
   14002e772:	movsxd rcx,edi
   14002e775:	call   0x1400238b8
   14002e77a:	mov    QWORD PTR [rbp-0x50],rax
   14002e77e:	test   rax,rax
   14002e781:	je     0x14002e4f4
   14002e787:	mov    rbx,rax
   14002e78a:	mov    esi,edi
   14002e78c:	mov    r13d,DWORD PTR [rsp+0x44]
   14002e791:	jmp    0x14002e796
   14002e793:	mov    r13d,edi
   14002e796:	mov    rax,QWORD PTR [r12]
   14002e79a:	mov    rcx,QWORD PTR [rip+0x1fa3f]        # 0x14004e1e0
   14002e7a1:	add    r12,0x8
   14002e7a5:	mov    QWORD PTR [rsp+0x50],r12
   14002e7aa:	movsx  edi,r15b
   14002e7ae:	movsxd rsi,esi
   14002e7b1:	mov    QWORD PTR [rbp-0x40],rax
   14002e7b5:	call   QWORD PTR [rip+0xaa05]        # 0x1400391c0
   14002e7bb:	lea    rcx,[rbp-0x70]
   14002e7bf:	mov    QWORD PTR [rsp+0x30],rcx
   14002e7c4:	mov    ecx,DWORD PTR [rbp-0x78]
   14002e7c7:	mov    r9d,edi
   14002e7ca:	mov    DWORD PTR [rsp+0x28],ecx
   14002e7ce:	lea    rcx,[rbp-0x40]
   14002e7d2:	mov    r8,rsi
   14002e7d5:	mov    rdx,rbx
   14002e7d8:	mov    DWORD PTR [rsp+0x20],r13d
   14002e7dd:	call   rax
   14002e7df:	mov    edi,r14d
   14002e7e2:	and    edi,0x80
   14002e7e8:	je     0x14002e805
   14002e7ea:	test   r13d,r13d
   14002e7ed:	jne    0x14002e805
   14002e7ef:	mov    rcx,QWORD PTR [rip+0x1fa02]        # 0x14004e1f8
   14002e7f6:	call   QWORD PTR [rip+0xa9c4]        # 0x1400391c0
   14002e7fc:	lea    rdx,[rbp-0x70]
   14002e800:	mov    rcx,rbx
   14002e803:	call   rax
   14002e805:	mov    ecx,0x67
   14002e80a:	cmp    r15w,cx
   14002e80e:	jne    0x14002e82a
   14002e810:	test   edi,edi
   14002e812:	jne    0x14002e82a
   14002e814:	mov    rcx,QWORD PTR [rip+0x1f9d5]        # 0x14004e1f0
   14002e81b:	call   QWORD PTR [rip+0xa99f]        # 0x1400391c0
   14002e821:	lea    rdx,[rbp-0x70]
   14002e825:	mov    rcx,rbx
   14002e828:	call   rax
   14002e82a:	mov    edi,0x2d
   14002e82f:	cmp    BYTE PTR [rbx],dil
   14002e832:	jne    0x14002e83c
   14002e834:	bts    r14d,0x8
   14002e839:	inc    rbx
   14002e83c:	mov    rcx,rbx
   14002e83f:	call   0x1400278e0
   14002e844:	xor    r10d,r10d
   14002e847:	mov    r13d,eax
   14002e84a:	jmp    0x14002e347
   14002e84f:	test   r14b,0x1
   14002e853:	je     0x14002e864
   14002e855:	mov    eax,0x2b
   14002e85a:	mov    WORD PTR [rsp+0x60],ax
   14002e85f:	jmp    0x14002e36c
   14002e864:	test   r14b,0x2
   14002e868:	je     0x14002e87d
   14002e86a:	mov    eax,0x20
   14002e86f:	mov    WORD PTR [rsp+0x60],ax
   14002e874:	lea    esi,[rax-0x1f]
   14002e877:	mov    DWORD PTR [rsp+0x48],esi
   14002e87b:	jmp    0x14002e886
   14002e87d:	mov    esi,DWORD PTR [rsp+0x48]
   14002e881:	mov    eax,0x20
   14002e886:	mov    r15d,DWORD PTR [rsp+0x5c]
   14002e88b:	mov    rdi,QWORD PTR [rsp+0x78]
   14002e890:	sub    r15d,r13d
   14002e893:	sub    r15d,esi
   14002e896:	test   r14b,0xc
   14002e89a:	jne    0x14002e8ae
   14002e89c:	lea    r9,[rsp+0x40]
   14002e8a1:	mov    ecx,eax
   14002e8a3:	mov    r8,rdi
   14002e8a6:	mov    edx,r15d
   14002e8a9:	call   0x14002ec88
   14002e8ae:	mov    rax,QWORD PTR [rbp-0x48]
   14002e8b2:	lea    r9,[rsp+0x40]
   14002e8b7:	lea    rcx,[rsp+0x60]
   14002e8bc:	mov    r8,rdi
   14002e8bf:	mov    edx,esi
   14002e8c1:	mov    QWORD PTR [rsp+0x20],rax
   14002e8c6:	call   0x140026030
   14002e8cb:	test   r14b,0x8
   14002e8cf:	je     0x14002e8ec
   14002e8d1:	test   r14b,0x4
   14002e8d5:	jne    0x14002e8ec
   14002e8d7:	lea    r9,[rsp+0x40]
   14002e8dc:	mov    ecx,0x30
   14002e8e1:	mov    r8,rdi
   14002e8e4:	mov    edx,r15d
   14002e8e7:	call   0x14002ec88
   14002e8ec:	xor    eax,eax
   14002e8ee:	cmp    DWORD PTR [rsp+0x58],eax
   14002e8f2:	jne    0x14002e964
   14002e8f4:	test   r13d,r13d
   14002e8f7:	jle    0x14002e964
   14002e8f9:	mov    rdi,rbx
   14002e8fc:	mov    esi,r13d
   14002e8ff:	mov    rax,QWORD PTR [rbp-0x70]
   14002e903:	lea    r9,[rbp-0x70]
   14002e907:	lea    rcx,[rsp+0x64]
   14002e90c:	movsxd r8,DWORD PTR [rax+0xd4]
   14002e913:	mov    rdx,rdi
   14002e916:	dec    esi
   14002e918:	call   0x14002863c
   14002e91d:	xor    r10d,r10d
   14002e920:	movsxd r12,eax
   14002e923:	test   eax,eax
   14002e925:	jle    0x14002e951
   14002e927:	mov    rdx,QWORD PTR [rsp+0x78]
   14002e92c:	movzx  ecx,WORD PTR [rsp+0x64]
   14002e931:	lea    r8,[rsp+0x40]
   14002e936:	call   0x14002ec50
   14002e93b:	add    rdi,r12
   14002e93e:	xor    r10d,r10d
   14002e941:	test   esi,esi
   14002e943:	jg     0x14002e8ff
   14002e945:	mov    r12,QWORD PTR [rsp+0x50]
   14002e94a:	mov    rdi,QWORD PTR [rsp+0x78]
   14002e94f:	jmp    0x14002e983
   14002e951:	mov    r12,QWORD PTR [rsp+0x50]
   14002e956:	mov    rdi,QWORD PTR [rsp+0x78]
   14002e95b:	or     edx,0xffffffff
   14002e95e:	mov    DWORD PTR [rsp+0x40],edx
   14002e962:	jmp    0x14002e987
   14002e964:	mov    rax,QWORD PTR [rbp-0x48]
   14002e968:	lea    r9,[rsp+0x40]
   14002e96d:	mov    r8,rdi
   14002e970:	mov    edx,r13d
   14002e973:	mov    rcx,rbx
   14002e976:	mov    QWORD PTR [rsp+0x20],rax
   14002e97b:	call   0x140026030
   14002e980:	xor    r10d,r10d
   14002e983:	mov    edx,DWORD PTR [rsp+0x40]
   14002e987:	test   edx,edx
   14002e989:	js     0x14002e9ad
   14002e98b:	test   r14b,0x4
   14002e98f:	je     0x14002e9ad
   14002e991:	lea    r9,[rsp+0x40]
   14002e996:	mov    ecx,0x20
   14002e99b:	mov    r8,rdi
   14002e99e:	mov    edx,r15d
   14002e9a1:	call   0x14002ec88
   14002e9a6:	xor    r10d,r10d
   14002e9a9:	mov    edx,DWORD PTR [rsp+0x40]
   14002e9ad:	mov    r11d,0x20
   14002e9b3:	mov    rax,QWORD PTR [rbp-0x50]
   14002e9b7:	test   rax,rax
   14002e9ba:	je     0x14002e9d3
   14002e9bc:	mov    rcx,rax
   14002e9bf:	call   0x140023328
   14002e9c4:	mov    edx,DWORD PTR [rsp+0x40]
   14002e9c8:	xor    r10d,r10d
   14002e9cb:	lea    r11d,[r10+0x20]
   14002e9cf:	mov    QWORD PTR [rbp-0x50],r10
   14002e9d3:	mov    edi,DWORD PTR [rsp+0x44]
   14002e9d7:	or     esi,0xffffffff
   14002e9da:	mov    r8,QWORD PTR [rbp-0x80]
   14002e9de:	mov    r9d,DWORD PTR [rsp+0x6c]
   14002e9e3:	movzx  r15d,WORD PTR [r8]
   14002e9e7:	test   r15w,r15w
   14002e9eb:	jne    0x14002e238
   14002e9f1:	test   r9d,r9d
   14002e9f4:	je     0x14002ea00
   14002e9f6:	cmp    r9d,0x7
   14002e9fa:	jne    0x14002ec25
   14002ea00:	cmp    BYTE PTR [rbp-0x58],r10b
   14002ea04:	je     0x14002ea11
   14002ea06:	mov    rcx,QWORD PTR [rbp-0x60]
   14002ea0a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002ea11:	mov    eax,edx
   14002ea13:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14002ea1a:	xor    rcx,rsp
   14002ea1d:	call   0x140020e50
   14002ea22:	mov    rbx,QWORD PTR [rsp+0x530]
   14002ea2a:	add    rsp,0x4e0
   14002ea31:	pop    r15
   14002ea33:	pop    r14
   14002ea35:	pop    r13
   14002ea37:	pop    r12
   14002ea39:	pop    rdi
   14002ea3a:	pop    rsi
   14002ea3b:	pop    rbp
   14002ea3c:	ret    
   14002ea3d:	movzx  eax,r15w
   14002ea41:	cmp    eax,0x49
   14002ea44:	je     0x14002ea85
   14002ea46:	cmp    eax,0x68
   14002ea49:	je     0x14002ea7d
   14002ea4b:	mov    ecx,0x6c
   14002ea50:	cmp    eax,ecx
   14002ea52:	je     0x14002ea60
   14002ea54:	cmp    eax,0x77
   14002ea57:	jne    0x14002e9e3
   14002ea59:	bts    r14d,0xb
   14002ea5e:	jmp    0x14002e9e3
   14002ea60:	cmp    WORD PTR [r8],cx
   14002ea64:	jne    0x14002ea74
   14002ea66:	add    r8,0x2
   14002ea6a:	bts    r14d,0xc
   14002ea6f:	jmp    0x14002e9e3
   14002ea74:	or     r14d,0x10
   14002ea78:	jmp    0x14002e9e3
   14002ea7d:	or     r14d,r11d
   14002ea80:	jmp    0x14002e9e3
   14002ea85:	movzx  eax,WORD PTR [r8]
   14002ea89:	bts    r14d,0xf
   14002ea8e:	cmp    ax,0x36
   14002ea92:	jne    0x14002eaaa
   14002ea94:	cmp    WORD PTR [r8+0x2],0x34
   14002ea9a:	jne    0x14002eaaa
   14002ea9c:	add    r8,0x4
   14002eaa0:	bts    r14d,0xf
   14002eaa5:	jmp    0x14002e9e3
   14002eaaa:	cmp    ax,0x33
   14002eaae:	jne    0x14002eac6
   14002eab0:	cmp    WORD PTR [r8+0x2],0x32
   14002eab6:	jne    0x14002eac6
   14002eab8:	add    r8,0x4
   14002eabc:	btr    r14d,0xf
   14002eac1:	jmp    0x14002e9e3
   14002eac6:	sub    ax,0x58
   14002eaca:	cmp    ax,r11w
   14002eace:	ja     0x14002eae4
   14002ead0:	movabs rcx,0x120821001
   14002eada:	bt     rcx,rax
   14002eade:	jb     0x14002e9e3
   14002eae4:	mov    DWORD PTR [rsp+0x6c],r10d
   14002eae9:	mov    rdx,QWORD PTR [rsp+0x78]
   14002eaee:	lea    r8,[rsp+0x40]
   14002eaf3:	movzx  ecx,r15w
   14002eaf7:	mov    DWORD PTR [rsp+0x58],0x1
   14002eaff:	call   0x14002ec50
   14002eb04:	mov    edx,DWORD PTR [rsp+0x40]
   14002eb08:	xor    r10d,r10d
   14002eb0b:	lea    r11d,[r10+0x20]
   14002eb0f:	jmp    0x14002e9da
   14002eb14:	cmp    r15w,0x2a
   14002eb19:	jne    0x14002eb3f
   14002eb1b:	mov    edi,DWORD PTR [r12]
   14002eb1f:	add    r12,0x8
   14002eb23:	mov    QWORD PTR [rsp+0x50],r12
   14002eb28:	mov    DWORD PTR [rsp+0x44],edi
   14002eb2c:	test   edi,edi
   14002eb2e:	jns    0x14002e9e3
   14002eb34:	mov    edi,esi
   14002eb36:	mov    DWORD PTR [rsp+0x44],esi
   14002eb3a:	jmp    0x14002e9e3
   14002eb3f:	lea    edi,[rdi+rdi*4]
   14002eb42:	movzx  eax,r15w
   14002eb46:	lea    edi,[rdi-0x18]
   14002eb49:	lea    edi,[rax+rdi*2]
   14002eb4c:	mov    DWORD PTR [rsp+0x44],edi
   14002eb50:	jmp    0x14002e9e3
   14002eb55:	mov    edi,r10d
   14002eb58:	mov    DWORD PTR [rsp+0x44],r10d
   14002eb5d:	jmp    0x14002e9e3
   14002eb62:	cmp    r15w,0x2a
   14002eb67:	jne    0x14002eb8a
   14002eb69:	mov    eax,DWORD PTR [r12]
   14002eb6d:	add    r12,0x8
   14002eb71:	mov    QWORD PTR [rsp+0x50],r12
   14002eb76:	mov    DWORD PTR [rsp+0x5c],eax
   14002eb7a:	test   eax,eax
   14002eb7c:	jns    0x14002e9e3
   14002eb82:	or     r14d,0x4
   14002eb86:	neg    eax
   14002eb88:	jmp    0x14002eb9b
   14002eb8a:	mov    eax,DWORD PTR [rsp+0x5c]
   14002eb8e:	lea    ecx,[rax+rax*4]
   14002eb91:	movzx  eax,r15w
   14002eb95:	lea    eax,[rax+rcx*2]
   14002eb98:	add    eax,0xffffffd0
   14002eb9b:	mov    DWORD PTR [rsp+0x5c],eax
   14002eb9f:	jmp    0x14002e9e3
   14002eba4:	movzx  eax,r15w
   14002eba8:	cmp    eax,r11d
   14002ebab:	je     0x14002ebf6
   14002ebad:	cmp    eax,0x23
   14002ebb0:	je     0x14002ebec
   14002ebb2:	mov    ecx,0x2b
   14002ebb7:	cmp    eax,ecx
   14002ebb9:	je     0x14002ebe3
   14002ebbb:	mov    ecx,0x2d
   14002ebc0:	cmp    eax,ecx
   14002ebc2:	je     0x14002ebda
   14002ebc4:	mov    ecx,0x30
   14002ebc9:	cmp    eax,ecx
   14002ebcb:	jne    0x14002e9e3
   14002ebd1:	or     r14d,0x8
   14002ebd5:	jmp    0x14002e9e3
   14002ebda:	or     r14d,0x4
   14002ebde:	jmp    0x14002e9e3
   14002ebe3:	or     r14d,0x1
   14002ebe7:	jmp    0x14002e9e3
   14002ebec:	bts    r14d,0x7
   14002ebf1:	jmp    0x14002e9e3
   14002ebf6:	or     r14d,0x2
   14002ebfa:	jmp    0x14002e9e3
   14002ebff:	mov    DWORD PTR [rbp-0x78],r10d
   14002ec03:	mov    DWORD PTR [rsp+0x70],r10d
   14002ec08:	mov    DWORD PTR [rsp+0x5c],r10d
   14002ec0d:	mov    DWORD PTR [rsp+0x48],r10d
   14002ec12:	mov    r14d,r10d
   14002ec15:	mov    edi,esi
   14002ec17:	mov    DWORD PTR [rsp+0x44],esi
   14002ec1b:	mov    DWORD PTR [rsp+0x58],r10d
   14002ec20:	jmp    0x14002e9e3
   14002ec25:	call   0x140025380
   14002ec2a:	mov    DWORD PTR [rax],0x16
   14002ec30:	call   0x140024554
   14002ec35:	xor    ecx,ecx
   14002ec37:	cmp    BYTE PTR [rbp-0x58],cl
   14002ec3a:	je     0x14002ec47
   14002ec3c:	mov    rax,QWORD PTR [rbp-0x60]
   14002ec40:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ec47:	mov    eax,esi
   14002ec49:	jmp    0x14002ea13
   14002ec4e:	int3   
   14002ec4f:	int3   
   14002ec50:	rex push rbx
   14002ec52:	sub    rsp,0x20
   14002ec56:	test   BYTE PTR [rdx+0x18],0x40
   14002ec5a:	mov    rbx,r8
   14002ec5d:	je     0x14002ec6b
   14002ec5f:	cmp    QWORD PTR [rdx+0x10],0x0
   14002ec64:	jne    0x14002ec6b
   14002ec66:	inc    DWORD PTR [r8]
   14002ec69:	jmp    0x14002ec81
   14002ec6b:	call   0x140028a54
   14002ec70:	mov    ecx,0xffff
   14002ec75:	cmp    ax,cx
   14002ec78:	jne    0x14002ec7f
   14002ec7a:	or     DWORD PTR [rbx],0xffffffff
   14002ec7d:	jmp    0x14002ec81
   14002ec7f:	inc    DWORD PTR [rbx]
   14002ec81:	add    rsp,0x20
   14002ec85:	pop    rbx
   14002ec86:	ret    
   14002ec87:	int3   
   14002ec88:	test   edx,edx
   14002ec8a:	jle    0x14002ecd8
   14002ec8c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ec91:	mov    QWORD PTR [rsp+0x10],rbp
   14002ec96:	mov    QWORD PTR [rsp+0x18],rsi
   14002ec9b:	push   rdi
   14002ec9c:	sub    rsp,0x20
   14002eca0:	mov    rdi,r9
   14002eca3:	mov    rsi,r8
   14002eca6:	mov    ebx,edx
   14002eca8:	movzx  ebp,cx
   14002ecab:	mov    r8,rdi
   14002ecae:	mov    rdx,rsi
   14002ecb1:	movzx  ecx,bp
   14002ecb4:	dec    ebx
   14002ecb6:	call   0x14002ec50
   14002ecbb:	cmp    DWORD PTR [rdi],0xffffffff
   14002ecbe:	je     0x14002ecc4
   14002ecc0:	test   ebx,ebx
   14002ecc2:	jg     0x14002ecab
   14002ecc4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ecc9:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ecce:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ecd3:	add    rsp,0x20
   14002ecd7:	pop    rdi
   14002ecd8:	ret    
   14002ecd9:	int3   
   14002ecda:	int3   
   14002ecdb:	int3   
   14002ecdc:	neg    rcx
   14002ecdf:	sbb    eax,eax
   14002ece1:	and    eax,0x1
   14002ece4:	ret    
   14002ece5:	int3   
   14002ece6:	int3   
   14002ece7:	int3   
   14002ece8:	int3   
   14002ece9:	int3   
   14002ecea:	int3   
   14002eceb:	int3   
   14002ecec:	int3   
   14002eced:	int3   
   14002ecee:	int3   
   14002ecef:	int3   
   14002ecf0:	int3   
   14002ecf1:	int3   
   14002ecf2:	int3   
   14002ecf3:	int3   
   14002ecf4:	int3   
   14002ecf5:	int3   
   14002ecf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002ed00:	sub    rsp,0x28
   14002ed04:	mov    QWORD PTR [rsp+0x30],rcx
   14002ed09:	mov    QWORD PTR [rsp+0x38],rdx
   14002ed0e:	mov    DWORD PTR [rsp+0x40],r8d
   14002ed13:	mov    rdx,QWORD PTR [rdx]
   14002ed16:	mov    rax,rcx
   14002ed19:	call   0x140027ea0
   14002ed1e:	call   rax
   14002ed20:	call   0x140027ed0
   14002ed25:	mov    rcx,rax
   14002ed28:	mov    rdx,QWORD PTR [rsp+0x38]
   14002ed2d:	mov    rdx,QWORD PTR [rdx]
   14002ed30:	mov    r8d,0x2
   14002ed36:	call   0x140027ea0
   14002ed3b:	add    rsp,0x28
   14002ed3f:	ret    
   14002ed40:	mov    rax,QWORD PTR [rsp]
   14002ed44:	mov    QWORD PTR [rcx],rax
   14002ed47:	ret    
   14002ed48:	mov    QWORD PTR [rsp+0x10],rbx
   14002ed4d:	mov    QWORD PTR [rsp+0x18],rsi
   14002ed52:	mov    DWORD PTR [rsp+0x8],ecx
   14002ed56:	push   rdi
   14002ed57:	push   r12
   14002ed59:	push   r13
   14002ed5b:	push   r14
   14002ed5d:	push   r15
   14002ed5f:	sub    rsp,0x20
   14002ed63:	mov    r14d,r8d
   14002ed66:	mov    r12,rdx
   14002ed69:	movsxd rdi,ecx
   14002ed6c:	cmp    edi,0xfffffffe
   14002ed6f:	jne    0x14002ed8a
   14002ed71:	call   0x140025310
   14002ed76:	xor    ebx,ebx
   14002ed78:	mov    DWORD PTR [rax],ebx
   14002ed7a:	call   0x140025380
   14002ed7f:	mov    DWORD PTR [rax],0x9
   14002ed85:	jmp    0x14002ee54
   14002ed8a:	call   0x1400227ec
   14002ed8f:	xor    ebx,ebx
   14002ed91:	test   eax,eax
   14002ed93:	js     0x14002ee54
   14002ed99:	test   edi,edi
   14002ed9b:	js     0x14002ee3d
   14002eda1:	cmp    edi,DWORD PTR [rip+0x23525]        # 0x1400522cc
   14002eda7:	jae    0x14002ee3d
   14002edad:	mov    rsi,rdi
   14002edb0:	mov    r15,rdi
   14002edb3:	sar    r15,0x5
   14002edb7:	lea    r13,[rip+0x23522]        # 0x1400522e0
   14002edbe:	and    esi,0x1f
   14002edc1:	imul   rsi,rsi,0x58
   14002edc5:	mov    rax,QWORD PTR [r13+r15*8+0x0]
   14002edca:	movsx  ecx,BYTE PTR [rsi+rax*1+0x8]
   14002edcf:	and    ecx,0x1
   14002edd2:	je     0x14002ee3d
   14002edd4:	mov    eax,ebx
   14002edd6:	cmp    r14d,0x7fffffff
   14002eddd:	setbe  al
   14002ede0:	test   eax,eax
   14002ede2:	jne    0x14002edf8
   14002ede4:	call   0x140025310
   14002ede9:	mov    DWORD PTR [rax],ebx
   14002edeb:	call   0x140025380
   14002edf0:	mov    DWORD PTR [rax],0x16
   14002edf6:	jmp    0x14002ee4f
   14002edf8:	mov    ecx,edi
   14002edfa:	call   0x1400281b8
   14002edff:	nop
   14002ee00:	mov    rax,QWORD PTR [r13+r15*8+0x0]
   14002ee05:	test   BYTE PTR [rsi+rax*1+0x8],0x1
   14002ee0a:	je     0x14002ee1d
   14002ee0c:	mov    r8d,r14d
   14002ee0f:	mov    rdx,r12
   14002ee12:	mov    ecx,edi
   14002ee14:	call   0x14002ee70
   14002ee19:	mov    ebx,eax
   14002ee1b:	jmp    0x14002ee32
   14002ee1d:	call   0x140025380
   14002ee22:	mov    DWORD PTR [rax],0x9
   14002ee28:	call   0x140025310
   14002ee2d:	mov    DWORD PTR [rax],ebx
   14002ee2f:	or     ebx,0xffffffff
   14002ee32:	mov    ecx,edi
   14002ee34:	call   0x140028380
   14002ee39:	mov    eax,ebx
   14002ee3b:	jmp    0x14002ee57
   14002ee3d:	call   0x140025310
   14002ee42:	mov    DWORD PTR [rax],ebx
   14002ee44:	call   0x140025380
   14002ee49:	mov    DWORD PTR [rax],0x9
   14002ee4f:	call   0x140024554
   14002ee54:	or     eax,0xffffffff
   14002ee57:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ee5c:	mov    rsi,QWORD PTR [rsp+0x60]
   14002ee61:	add    rsp,0x20
   14002ee65:	pop    r15
   14002ee67:	pop    r14
   14002ee69:	pop    r13
   14002ee6b:	pop    r12
   14002ee6d:	pop    rdi
   14002ee6e:	ret    
   14002ee6f:	int3   
   14002ee70:	mov    QWORD PTR [rsp+0x10],rdx
   14002ee75:	mov    DWORD PTR [rsp+0x8],ecx
   14002ee79:	push   rbp
   14002ee7a:	push   rbx
   14002ee7b:	push   rsi
   14002ee7c:	push   rdi
   14002ee7d:	push   r12
   14002ee7f:	push   r13
   14002ee81:	push   r14
   14002ee83:	push   r15
   14002ee85:	mov    rbp,rsp
   14002ee88:	sub    rsp,0x58
   14002ee8c:	xor    edi,edi
   14002ee8e:	movsxd r12,ecx
   14002ee91:	mov    ebx,r8d
   14002ee94:	mov    r15,rdx
   14002ee97:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   14002ee9e:	mov    DWORD PTR [rbp-0x18],edi
   14002eea1:	mov    DWORD PTR [rbp-0x10],ebx
   14002eea4:	cmp    r12d,0xfffffffe
   14002eea8:	jne    0x14002eec1
   14002eeaa:	call   0x140025310
   14002eeaf:	mov    DWORD PTR [rax],edi
   14002eeb1:	call   0x140025380
   14002eeb6:	mov    DWORD PTR [rax],0x9
   14002eebc:	jmp    0x14002f6c6
   14002eec1:	call   0x1400227ec
   14002eec6:	test   eax,eax
   14002eec8:	js     0x14002f6c6
   14002eece:	test   r12d,r12d
   14002eed1:	js     0x14002f6af
   14002eed7:	cmp    r12d,DWORD PTR [rip+0x233ee]        # 0x1400522cc
   14002eede:	jae    0x14002f6af
   14002eee4:	mov    rsi,r12
   14002eee7:	mov    r13,r12
   14002eeea:	lea    r9,[rip+0xfffffffffffd110f]        # 0x140000000
   14002eef1:	sar    r13,0x5
   14002eef5:	and    esi,0x1f
   14002eef8:	mov    rcx,QWORD PTR [r9+r13*8+0x522e0]
   14002ef00:	imul   rsi,rsi,0x58
   14002ef04:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   14002ef08:	test   al,0x1
   14002ef0a:	je     0x14002f6af
   14002ef10:	cmp    ebx,0x7fffffff
   14002ef16:	jbe    0x14002ef2f
   14002ef18:	call   0x140025310
   14002ef1d:	mov    DWORD PTR [rax],edi
   14002ef1f:	call   0x140025380
   14002ef24:	mov    DWORD PTR [rax],0x16
   14002ef2a:	jmp    0x14002f6c1
   14002ef2f:	mov    r14d,edi
   14002ef32:	test   ebx,ebx
   14002ef34:	je     0x14002f6ab
   14002ef3a:	test   al,0x2
   14002ef3c:	jne    0x14002f6ab
   14002ef42:	test   r15,r15
   14002ef45:	je     0x14002ef18
   14002ef47:	mov    dl,BYTE PTR [rsi+rcx*1+0x38]
   14002ef4b:	mov    r8d,0x4
   14002ef51:	add    dl,dl
   14002ef53:	sar    dl,1
   14002ef55:	movsx  ecx,dl
   14002ef58:	mov    BYTE PTR [rbp+0x60],dl
   14002ef5b:	dec    ecx
   14002ef5d:	je     0x14002ef70
   14002ef5f:	dec    ecx
   14002ef61:	jne    0x14002efd0
   14002ef63:	mov    eax,ebx
   14002ef65:	not    eax
   14002ef67:	test   al,0x1
   14002ef69:	je     0x14002ef18
   14002ef6b:	and    ebx,0xfffffffe
   14002ef6e:	jmp    0x14002efd0
   14002ef70:	mov    eax,ebx
   14002ef72:	not    eax
   14002ef74:	test   al,0x1
   14002ef76:	je     0x14002ef18
   14002ef78:	shr    ebx,1
   14002ef7a:	cmp    ebx,r8d
   14002ef7d:	cmovb  ebx,r8d
   14002ef81:	mov    ecx,ebx
   14002ef83:	call   0x1400238b8
   14002ef88:	mov    r15,rax
   14002ef8b:	test   rax,rax
   14002ef8e:	jne    0x14002efab
   14002ef90:	call   0x140025380
   14002ef95:	mov    DWORD PTR [rax],0xc
   14002ef9b:	call   0x140025310
   14002efa0:	mov    DWORD PTR [rax],0x8
   14002efa6:	jmp    0x14002f6c6
   14002efab:	xor    edx,edx
   14002efad:	mov    ecx,r12d
   14002efb0:	lea    r8d,[rdx+0x1]
   14002efb4:	call   0x1400285a8
   14002efb9:	mov    dl,BYTE PTR [rbp+0x60]
   14002efbc:	lea    r9,[rip+0xfffffffffffd103d]        # 0x140000000
   14002efc3:	mov    rcx,QWORD PTR [r9+r13*8+0x522e0]
   14002efcb:	mov    QWORD PTR [rsi+rcx*1+0x40],rax
   14002efd0:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002efd8:	mov    r12,r15
   14002efdb:	mov    r8d,0xa
   14002efe1:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   14002efe6:	je     0x14002f089
   14002efec:	mov    cl,BYTE PTR [rsi+rax*1+0x9]
   14002eff0:	cmp    cl,r8b
   14002eff3:	je     0x14002f089
   14002eff9:	test   ebx,ebx
   14002effb:	je     0x14002f089
   14002f001:	mov    BYTE PTR [r15],cl
   14002f004:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002f00c:	or     r10d,0xffffffff
   14002f010:	add    ebx,r10d
   14002f013:	lea    r12,[r15+0x1]
   14002f017:	lea    r14d,[r8-0x9]
   14002f01b:	mov    BYTE PTR [rsi+rax*1+0x9],r8b
   14002f020:	test   dl,dl
   14002f022:	je     0x14002f089
   14002f024:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002f02c:	mov    cl,BYTE PTR [rsi+rax*1+0x39]
   14002f030:	cmp    cl,r8b
   14002f033:	je     0x14002f089
   14002f035:	test   ebx,ebx
   14002f037:	je     0x14002f089
   14002f039:	mov    BYTE PTR [r12],cl
   14002f03d:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002f045:	add    ebx,r10d
   14002f048:	inc    r12
   14002f04b:	lea    r14d,[r8-0x8]
   14002f04f:	mov    BYTE PTR [rsi+rax*1+0x39],r8b
   14002f054:	cmp    dl,0x1
   14002f057:	jne    0x14002f089
   14002f059:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002f061:	mov    cl,BYTE PTR [rsi+rax*1+0x3a]
   14002f065:	cmp    cl,r8b
   14002f068:	je     0x14002f089
   14002f06a:	test   ebx,ebx
   14002f06c:	je     0x14002f089
   14002f06e:	mov    BYTE PTR [r12],cl
   14002f072:	mov    rax,QWORD PTR [r9+r13*8+0x522e0]
   14002f07a:	inc    r12
   14002f07d:	lea    r14d,[r8-0x7]
   14002f081:	add    ebx,r10d
   14002f084:	mov    BYTE PTR [rsi+rax*1+0x3a],r8b
   14002f089:	mov    ecx,DWORD PTR [rbp+0x48]
   14002f08c:	call   0x140028444
   14002f091:	test   eax,eax
   14002f093:	je     0x14002f114
   14002f095:	lea    rcx,[rip+0xfffffffffffd0f64]        # 0x140000000
   14002f09c:	mov    rcx,QWORD PTR [rcx+r13*8+0x522e0]
   14002f0a4:	test   BYTE PTR [rsi+rcx*1+0x8],0x80
   14002f0a9:	je     0x14002f114
   14002f0ab:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002f0af:	lea    rdx,[rbp-0x18]
   14002f0b3:	call   QWORD PTR [rip+0xa1ef]        # 0x1400392a8
   14002f0b9:	mov    DWORD PTR [rbp-0x18],eax
   14002f0bc:	test   eax,eax
   14002f0be:	je     0x14002f114
   14002f0c0:	cmp    BYTE PTR [rbp+0x60],0x2
   14002f0c4:	jne    0x14002f114
   14002f0c6:	lea    rax,[rip+0xfffffffffffd0f33]        # 0x140000000
   14002f0cd:	shr    ebx,1
   14002f0cf:	lea    r9,[rbp-0x24]
   14002f0d3:	mov    rcx,QWORD PTR [rax+r13*8+0x522e0]
   14002f0db:	mov    rdx,r12
   14002f0de:	mov    r8d,ebx
   14002f0e1:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002f0e5:	mov    QWORD PTR [rsp+0x20],rdi
   14002f0ea:	call   QWORD PTR [rip+0xa4c0]        # 0x1400395b0
   14002f0f0:	test   eax,eax
   14002f0f2:	jne    0x14002f109
   14002f0f4:	call   QWORD PTR [rip+0xa4e6]        # 0x1400395e0
   14002f0fa:	mov    ecx,eax
   14002f0fc:	call   0x140025330
   14002f101:	or     ebx,0xffffffff
   14002f104:	jmp    0x14002f4b1
   14002f109:	mov    eax,DWORD PTR [rbp-0x24]
   14002f10c:	lea    edx,[rax+rax*1]
   14002f10f:	mov    DWORD PTR [rbp-0x24],edx
   14002f112:	jmp    0x14002f15b
   14002f114:	lea    rcx,[rip+0xfffffffffffd0ee5]        # 0x140000000
   14002f11b:	lea    r9,[rbp-0x24]
   14002f11f:	mov    r8d,ebx
   14002f122:	mov    rcx,QWORD PTR [rcx+r13*8+0x522e0]
   14002f12a:	mov    rdx,r12
   14002f12d:	mov    QWORD PTR [rsp+0x20],rdi
   14002f132:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002f136:	call   QWORD PTR [rip+0xa384]        # 0x1400394c0
   14002f13c:	test   eax,eax
   14002f13e:	je     0x14002f675
   14002f144:	movsxd rdx,DWORD PTR [rbp-0x24]
   14002f148:	test   edx,edx
   14002f14a:	js     0x14002f675
   14002f150:	mov    eax,ebx
   14002f152:	cmp    rdx,rax
   14002f155:	ja     0x14002f675
   14002f15b:	lea    r10,[rip+0xfffffffffffd0e9e]        # 0x140000000
   14002f162:	add    r14d,edx
   14002f165:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f16d:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   14002f171:	test   al,al
   14002f173:	jns    0x14002f4ae
   14002f179:	cmp    BYTE PTR [rbp+0x60],0x2
   14002f17d:	je     0x14002f423
   14002f183:	test   edx,edx
   14002f185:	mov    edx,0xa
   14002f18a:	je     0x14002f195
   14002f18c:	cmp    BYTE PTR [r15],dl
   14002f18f:	jne    0x14002f195
   14002f191:	or     al,0x4
   14002f193:	jmp    0x14002f197
   14002f195:	and    al,0xfb
   14002f197:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   14002f19b:	movsxd rax,r14d
   14002f19e:	mov    rbx,r15
   14002f1a1:	add    rax,r15
   14002f1a4:	mov    r12,r15
   14002f1a7:	mov    QWORD PTR [rbp-0x18],rax
   14002f1ab:	cmp    r15,rax
   14002f1ae:	jae    0x14002f2e4
   14002f1b4:	mov    r14d,0xd
   14002f1ba:	mov    al,BYTE PTR [r12]
   14002f1be:	cmp    al,0x1a
   14002f1c0:	je     0x14002f2c3
   14002f1c6:	cmp    al,r14b
   14002f1c9:	je     0x14002f1d8
   14002f1cb:	mov    BYTE PTR [rbx],al
   14002f1cd:	inc    rbx
   14002f1d0:	inc    r12
   14002f1d3:	jmp    0x14002f2b7
   14002f1d8:	mov    rax,QWORD PTR [rbp-0x18]
   14002f1dc:	dec    rax
   14002f1df:	cmp    r12,rax
   14002f1e2:	jae    0x14002f1fe
   14002f1e4:	lea    rax,[r12+0x1]
   14002f1e9:	cmp    BYTE PTR [rax],dl
   14002f1eb:	jne    0x14002f1f6
   14002f1ed:	add    r12,0x2
   14002f1f1:	jmp    0x14002f27c
   14002f1f6:	mov    r12,rax
   14002f1f9:	jmp    0x14002f2b1
   14002f1fe:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f206:	lea    r9,[rbp-0x24]
   14002f20a:	lea    rdx,[rbp+0x58]
   14002f20e:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002f212:	mov    r8d,0x1
   14002f218:	inc    r12
   14002f21b:	mov    QWORD PTR [rsp+0x20],rdi
   14002f220:	call   QWORD PTR [rip+0xa29a]        # 0x1400394c0
   14002f226:	test   eax,eax
   14002f228:	jne    0x14002f234
   14002f22a:	call   QWORD PTR [rip+0xa3b0]        # 0x1400395e0
   14002f230:	test   eax,eax
   14002f232:	jne    0x14002f2a5
   14002f234:	cmp    DWORD PTR [rbp-0x24],edi
   14002f237:	je     0x14002f2a5
   14002f239:	lea    r10,[rip+0xfffffffffffd0dc0]        # 0x140000000
   14002f240:	mov    rax,QWORD PTR [r10+r13*8+0x522e0]
   14002f248:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   14002f24d:	je     0x14002f26d
   14002f24f:	mov    edx,0xa
   14002f254:	cmp    BYTE PTR [rbp+0x58],dl
   14002f257:	je     0x14002f27c
   14002f259:	mov    BYTE PTR [rbx],r14b
   14002f25c:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f264:	mov    al,BYTE PTR [rbp+0x58]
   14002f267:	mov    BYTE PTR [rsi+rcx*1+0x9],al
   14002f26b:	jmp    0x14002f2b4
   14002f26d:	cmp    rbx,r15
   14002f270:	jne    0x14002f280
   14002f272:	mov    edx,0xa
   14002f277:	cmp    BYTE PTR [rbp+0x58],dl
   14002f27a:	jne    0x14002f280
   14002f27c:	mov    BYTE PTR [rbx],dl
   14002f27e:	jmp    0x14002f2b4
   14002f280:	mov    ecx,DWORD PTR [rbp+0x48]
   14002f283:	mov    r8d,0x1
   14002f289:	or     rdx,0xffffffffffffffff
   14002f28d:	call   0x1400285a8
   14002f292:	mov    edx,0xa
   14002f297:	lea    r10,[rip+0xfffffffffffd0d62]        # 0x140000000
   14002f29e:	cmp    BYTE PTR [rbp+0x58],dl
   14002f2a1:	je     0x14002f2b7
   14002f2a3:	jmp    0x14002f2b1
   14002f2a5:	mov    edx,0xa
   14002f2aa:	lea    r10,[rip+0xfffffffffffd0d4f]        # 0x140000000
   14002f2b1:	mov    BYTE PTR [rbx],r14b
   14002f2b4:	inc    rbx
   14002f2b7:	cmp    r12,QWORD PTR [rbp-0x18]
   14002f2bb:	jb     0x14002f1ba
   14002f2c1:	jmp    0x14002f2e4
   14002f2c3:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f2cb:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   14002f2cf:	test   al,0x40
   14002f2d1:	jne    0x14002f2db
   14002f2d3:	or     al,0x2
   14002f2d5:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   14002f2d9:	jmp    0x14002f2e4
   14002f2db:	mov    al,BYTE PTR [r12]
   14002f2df:	mov    BYTE PTR [rbx],al
   14002f2e1:	inc    rbx
   14002f2e4:	mov    r14d,ebx
   14002f2e7:	sub    r14d,r15d
   14002f2ea:	cmp    BYTE PTR [rbp+0x60],0x1
   14002f2ee:	jne    0x14002f4ae
   14002f2f4:	test   r14d,r14d
   14002f2f7:	je     0x14002f4ae
   14002f2fd:	dec    rbx
   14002f300:	test   BYTE PTR [rbx],0x80
   14002f303:	jne    0x14002f30d
   14002f305:	inc    rbx
   14002f308:	jmp    0x14002f3bb
   14002f30d:	mov    edx,0x1
   14002f312:	jmp    0x14002f323
   14002f314:	cmp    edx,0x4
   14002f317:	jg     0x14002f330
   14002f319:	cmp    rbx,r15
   14002f31c:	jb     0x14002f330
   14002f31e:	dec    rbx
   14002f321:	inc    edx
   14002f323:	movzx  eax,BYTE PTR [rbx]
   14002f326:	cmp    BYTE PTR [rax+r10*1+0x4e360],dil
   14002f32e:	je     0x14002f314
   14002f330:	movzx  ecx,BYTE PTR [rbx]
   14002f333:	movsx  eax,BYTE PTR [rcx+r10*1+0x4e360]
   14002f33c:	test   eax,eax
   14002f33e:	jne    0x14002f350
   14002f340:	call   0x140025380
   14002f345:	mov    DWORD PTR [rax],0x2a
   14002f34b:	jmp    0x14002f101
   14002f350:	inc    eax
   14002f352:	cmp    eax,edx
   14002f354:	jne    0x14002f35e
   14002f356:	movsxd rax,edx
   14002f359:	add    rbx,rax
   14002f35c:	jmp    0x14002f3bb
   14002f35e:	mov    rax,QWORD PTR [r10+r13*8+0x522e0]
   14002f366:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   14002f36b:	je     0x14002f3a8
   14002f36d:	inc    rbx
   14002f370:	mov    BYTE PTR [rsi+rax*1+0x9],cl
   14002f374:	cmp    edx,0x2
   14002f377:	jl     0x14002f38a
   14002f379:	mov    al,BYTE PTR [rbx]
   14002f37b:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f383:	inc    rbx
   14002f386:	mov    BYTE PTR [rsi+rcx*1+0x39],al
   14002f38a:	cmp    edx,0x3
   14002f38d:	jne    0x14002f3a0
   14002f38f:	mov    al,BYTE PTR [rbx]
   14002f391:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f399:	inc    rbx
   14002f39c:	mov    BYTE PTR [rsi+rcx*1+0x3a],al
   14002f3a0:	movsxd rax,edx
   14002f3a3:	sub    rbx,rax
   14002f3a6:	jmp    0x14002f3bb
   14002f3a8:	mov    ecx,DWORD PTR [rbp+0x48]
   14002f3ab:	neg    edx
   14002f3ad:	mov    r8d,0x1
   14002f3b3:	movsxd rdx,edx
   14002f3b6:	call   0x1400285a8
   14002f3bb:	mov    eax,DWORD PTR [rbp-0x10]
   14002f3be:	mov    r12,QWORD PTR [rbp+0x50]
   14002f3c2:	sub    ebx,r15d
   14002f3c5:	shr    eax,1
   14002f3c7:	mov    r9d,ebx
   14002f3ca:	mov    r8,r15
   14002f3cd:	mov    DWORD PTR [rsp+0x28],eax
   14002f3d1:	xor    edx,edx
   14002f3d3:	mov    ecx,0xfde9
   14002f3d8:	mov    QWORD PTR [rsp+0x20],r12
   14002f3dd:	call   QWORD PTR [rip+0x9e15]        # 0x1400391f8
   14002f3e3:	mov    r14d,eax
   14002f3e6:	test   eax,eax
   14002f3e8:	jne    0x14002f3ff
   14002f3ea:	call   QWORD PTR [rip+0xa1f0]        # 0x1400395e0
   14002f3f0:	mov    ecx,eax
   14002f3f2:	call   0x140025330
   14002f3f7:	or     ebx,0xffffffff
   14002f3fa:	jmp    0x14002f4b5
   14002f3ff:	cmp    eax,ebx
   14002f401:	mov    ebx,DWORD PTR [rbp-0x20]
   14002f404:	lea    rax,[rip+0xfffffffffffd0bf5]        # 0x140000000
   14002f40b:	mov    rax,QWORD PTR [rax+r13*8+0x522e0]
   14002f413:	setne  dil
   14002f417:	add    r14d,r14d
   14002f41a:	mov    DWORD PTR [rsi+rax*1+0x48],edi
   14002f41e:	jmp    0x14002f4b5
   14002f423:	cmp    DWORD PTR [rbp-0x18],edi
   14002f426:	je     0x14002f4d0
   14002f42c:	mov    eax,r14d
   14002f42f:	mov    r8,r15
   14002f432:	mov    r9,r15
   14002f435:	cdq    
   14002f436:	sub    eax,edx
   14002f438:	sar    eax,1
   14002f43a:	movsxd rcx,eax
   14002f43d:	lea    rdx,[r15+rcx*2]
   14002f441:	cmp    r15,rdx
   14002f444:	jae    0x14002f4a2
   14002f446:	mov    ecx,0xa
   14002f44b:	lea    r14d,[rcx+0x3]
   14002f44f:	movzx  eax,WORD PTR [r9]
   14002f453:	cmp    ax,0x1a
   14002f457:	je     0x14002f495
   14002f459:	cmp    ax,r14w
   14002f45d:	je     0x14002f46d
   14002f45f:	mov    WORD PTR [r8],ax
   14002f463:	add    r8,0x2
   14002f467:	add    r9,0x2
   14002f46b:	jmp    0x14002f48e
   14002f46d:	lea    rax,[rdx-0x2]
   14002f471:	cmp    r9,rax
   14002f474:	jae    0x14002f48e
   14002f476:	add    r9,0x2
   14002f47a:	cmp    WORD PTR [r9],cx
   14002f47e:	jne    0x14002f486
   14002f480:	mov    WORD PTR [r8],cx
   14002f484:	jmp    0x14002f48a
   14002f486:	mov    WORD PTR [r8],r14w
   14002f48a:	add    r8,0x2
   14002f48e:	cmp    r9,rdx
   14002f491:	jb     0x14002f44f
   14002f493:	jmp    0x14002f4a2
   14002f495:	mov    rax,QWORD PTR [r10+r13*8+0x522e0]
   14002f49d:	or     BYTE PTR [rsi+rax*1+0x8],0x2
   14002f4a2:	sub    r8,r15
   14002f4a5:	mov    r14,r8
   14002f4a8:	sar    r14,1
   14002f4ab:	add    r14d,r14d
   14002f4ae:	mov    ebx,DWORD PTR [rbp-0x20]
   14002f4b1:	mov    r12,QWORD PTR [rbp+0x50]
   14002f4b5:	cmp    r15,r12
   14002f4b8:	je     0x14002f4c2
   14002f4ba:	mov    rcx,r15
   14002f4bd:	call   0x140023328
   14002f4c2:	cmp    ebx,0xfffffffe
   14002f4c5:	cmove  ebx,r14d
   14002f4c9:	mov    eax,ebx
   14002f4cb:	jmp    0x14002f6c9
   14002f4d0:	test   edx,edx
   14002f4d2:	mov    edx,0xa
   14002f4d7:	je     0x14002f4e3
   14002f4d9:	cmp    WORD PTR [r15],dx
   14002f4dd:	jne    0x14002f4e3
   14002f4df:	or     al,0x4
   14002f4e1:	jmp    0x14002f4e5
   14002f4e3:	and    al,0xfb
   14002f4e5:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   14002f4e9:	movsxd rax,r14d
   14002f4ec:	mov    rbx,r15
   14002f4ef:	add    rax,r15
   14002f4f2:	mov    r12,r15
   14002f4f5:	mov    QWORD PTR [rbp+0x60],rax
   14002f4f9:	cmp    r15,rax
   14002f4fc:	jae    0x14002f66a
   14002f502:	mov    r14d,0xd
   14002f508:	movzx  eax,WORD PTR [r12]
   14002f50d:	cmp    ax,0x1a
   14002f511:	je     0x14002f646
   14002f517:	cmp    ax,r14w
   14002f51b:	je     0x14002f52d
   14002f51d:	mov    WORD PTR [rbx],ax
   14002f520:	add    rbx,0x2
   14002f524:	add    r12,0x2
   14002f528:	jmp    0x14002f63a
   14002f52d:	mov    rax,QWORD PTR [rbp+0x60]
   14002f531:	add    rax,0xfffffffffffffffe
   14002f535:	cmp    r12,rax
   14002f538:	jae    0x14002f555
   14002f53a:	lea    rax,[r12+0x2]
   14002f53f:	cmp    WORD PTR [rax],dx
   14002f542:	jne    0x14002f54d
   14002f544:	add    r12,0x4
   14002f548:	jmp    0x14002f5fa
   14002f54d:	mov    r12,rax
   14002f550:	jmp    0x14002f632
   14002f555:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f55d:	lea    r9,[rbp-0x24]
   14002f561:	lea    rdx,[rbp-0x28]
   14002f565:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002f569:	mov    r8d,0x2
   14002f56f:	add    r12,0x2
   14002f573:	mov    QWORD PTR [rsp+0x20],rdi
   14002f578:	call   QWORD PTR [rip+0x9f42]        # 0x1400394c0
   14002f57e:	test   eax,eax
   14002f580:	jne    0x14002f590
   14002f582:	call   QWORD PTR [rip+0xa058]        # 0x1400395e0
   14002f588:	test   eax,eax
   14002f58a:	jne    0x14002f626
   14002f590:	cmp    DWORD PTR [rbp-0x24],edi
   14002f593:	je     0x14002f626
   14002f599:	lea    r10,[rip+0xfffffffffffd0a60]        # 0x140000000
   14002f5a0:	mov    rax,QWORD PTR [r10+r13*8+0x522e0]
   14002f5a8:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   14002f5ad:	je     0x14002f5ea
   14002f5af:	mov    edx,0xa
   14002f5b4:	cmp    WORD PTR [rbp-0x28],dx
   14002f5b8:	je     0x14002f5fa
   14002f5ba:	mov    WORD PTR [rbx],r14w
   14002f5be:	mov    al,BYTE PTR [rbp-0x28]
   14002f5c1:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f5c9:	mov    BYTE PTR [rsi+rcx*1+0x9],al
   14002f5cd:	mov    al,BYTE PTR [rbp-0x27]
   14002f5d0:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f5d8:	mov    BYTE PTR [rsi+rcx*1+0x39],al
   14002f5dc:	mov    rax,QWORD PTR [r10+r13*8+0x522e0]
   14002f5e4:	mov    BYTE PTR [rsi+rax*1+0x3a],dl
   14002f5e8:	jmp    0x14002f636
   14002f5ea:	cmp    rbx,r15
   14002f5ed:	jne    0x14002f5ff
   14002f5ef:	mov    edx,0xa
   14002f5f4:	cmp    WORD PTR [rbp-0x28],dx
   14002f5f8:	jne    0x14002f5ff
   14002f5fa:	mov    WORD PTR [rbx],dx
   14002f5fd:	jmp    0x14002f636
   14002f5ff:	mov    ecx,DWORD PTR [rbp+0x48]
   14002f602:	mov    rdx,0xfffffffffffffffe
   14002f609:	lea    r8d,[rdx+0x3]
   14002f60d:	call   0x1400285a8
   14002f612:	mov    edx,0xa
   14002f617:	lea    r10,[rip+0xfffffffffffd09e2]        # 0x140000000
   14002f61e:	cmp    WORD PTR [rbp-0x28],dx
   14002f622:	je     0x14002f63a
   14002f624:	jmp    0x14002f632
   14002f626:	mov    edx,0xa
   14002f62b:	lea    r10,[rip+0xfffffffffffd09ce]        # 0x140000000
   14002f632:	mov    WORD PTR [rbx],r14w
   14002f636:	add    rbx,0x2
   14002f63a:	cmp    r12,QWORD PTR [rbp+0x60]
   14002f63e:	jb     0x14002f508
   14002f644:	jmp    0x14002f66a
   14002f646:	mov    rcx,QWORD PTR [r10+r13*8+0x522e0]
   14002f64e:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   14002f652:	test   al,0x40
   14002f654:	jne    0x14002f65e
   14002f656:	or     al,0x2
   14002f658:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   14002f65c:	jmp    0x14002f66a
   14002f65e:	movzx  eax,WORD PTR [r12]
   14002f663:	mov    WORD PTR [rbx],ax
   14002f666:	add    rbx,0x2
   14002f66a:	sub    ebx,r15d
   14002f66d:	mov    r14d,ebx
   14002f670:	jmp    0x14002f4ae
   14002f675:	call   QWORD PTR [rip+0x9f65]        # 0x1400395e0
   14002f67b:	cmp    eax,0x5
   14002f67e:	jne    0x14002f69b
   14002f680:	call   0x140025380
   14002f685:	mov    DWORD PTR [rax],0x9
   14002f68b:	call   0x140025310
   14002f690:	mov    DWORD PTR [rax],0x5
   14002f696:	jmp    0x14002f101
   14002f69b:	cmp    eax,0x6d
   14002f69e:	jne    0x14002f0fa
   14002f6a4:	mov    ebx,edi
   14002f6a6:	jmp    0x14002f4b1
   14002f6ab:	xor    eax,eax
   14002f6ad:	jmp    0x14002f6c9
   14002f6af:	call   0x140025310
   14002f6b4:	mov    DWORD PTR [rax],edi
   14002f6b6:	call   0x140025380
   14002f6bb:	mov    DWORD PTR [rax],0x9
   14002f6c1:	call   0x140024554
   14002f6c6:	or     eax,0xffffffff
   14002f6c9:	add    rsp,0x58
   14002f6cd:	pop    r15
   14002f6cf:	pop    r14
   14002f6d1:	pop    r13
   14002f6d3:	pop    r12
   14002f6d5:	pop    rdi
   14002f6d6:	pop    rsi
   14002f6d7:	pop    rbx
   14002f6d8:	pop    rbp
   14002f6d9:	ret    
   14002f6da:	int3   
   14002f6db:	int3   
   14002f6dc:	mov    QWORD PTR [rsp+0x8],rbx
   14002f6e1:	push   rdi
   14002f6e2:	sub    rsp,0x20
   14002f6e6:	xor    edx,edx
   14002f6e8:	mov    rdi,rcx
   14002f6eb:	lea    r8d,[rdx+0x28]
   14002f6ef:	add    rcx,r8
   14002f6f2:	call   0x1400260e0
   14002f6f7:	and    QWORD PTR [rdi+0x50],0x0
   14002f6fc:	and    DWORD PTR [rdi+0x58],0x0
   14002f700:	and    DWORD PTR [rdi+0x5c],0x0
   14002f704:	lea    rax,[rip+0xfffffffffffd08f5]        # 0x140000000
   14002f70b:	lea    rcx,[rdi+0x28]
   14002f70f:	mov    QWORD PTR [rdi+0x10],rax
   14002f713:	mov    QWORD PTR [rdi+0x8],rax
   14002f717:	lea    rax,[rip+0xdaa2]        # 0x14003d1c0
   14002f71e:	xor    r8d,r8d
   14002f721:	xor    edx,edx
   14002f723:	mov    DWORD PTR [rdi],0x60
   14002f729:	mov    QWORD PTR [rdi+0x20],rax
   14002f72d:	mov    DWORD PTR [rdi+0x18],0xb00
   14002f734:	call   QWORD PTR [rip+0x9e6e]        # 0x1400395a8
   14002f73a:	test   eax,eax
   14002f73c:	jne    0x14002f769
   14002f73e:	call   QWORD PTR [rip+0x9e9c]        # 0x1400395e0
   14002f744:	mov    edx,0x1
   14002f749:	movzx  ecx,ax
   14002f74c:	or     ecx,0x80070000
   14002f752:	test   eax,eax
   14002f754:	cmovle ecx,eax
   14002f757:	movzx  eax,BYTE PTR [rip+0x2257a]        # 0x140051cd8
   14002f75e:	test   ecx,ecx
   14002f760:	cmovs  eax,edx
   14002f763:	mov    BYTE PTR [rip+0x2256f],al        # 0x140051cd8
   14002f769:	mov    rax,rdi
   14002f76c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f771:	add    rsp,0x20
   14002f775:	pop    rdi
   14002f776:	ret    
   14002f777:	int3   
   14002f778:	rex push rbx
   14002f77a:	sub    rsp,0x20
   14002f77e:	mov    rbx,rcx
   14002f781:	add    rcx,0x28
   14002f785:	call   QWORD PTR [rip+0x9aa5]        # 0x140039230
   14002f78b:	mov    rcx,QWORD PTR [rbx+0x50]
   14002f78f:	test   rcx,rcx
   14002f792:	je     0x14002f79e
   14002f794:	call   0x140023328
   14002f799:	and    QWORD PTR [rbx+0x50],0x0
   14002f79e:	and    DWORD PTR [rbx+0x58],0x0
   14002f7a2:	and    DWORD PTR [rbx+0x5c],0x0
   14002f7a6:	add    rsp,0x20
   14002f7aa:	pop    rbx
   14002f7ab:	ret    
   14002f7ac:	mov    QWORD PTR [rsp+0x8],rbx
   14002f7b1:	mov    QWORD PTR [rsp+0x10],rbp
   14002f7b6:	mov    QWORD PTR [rsp+0x18],rsi
   14002f7bb:	push   rdi
   14002f7bc:	sub    rsp,0x20
   14002f7c0:	mov    rsi,rcx
   14002f7c3:	add    rcx,0x28
   14002f7c7:	movsxd rbx,edx
   14002f7ca:	call   QWORD PTR [rip+0x99d8]        # 0x1400391a8
   14002f7d0:	xor    edi,edi
   14002f7d2:	cmp    ebx,DWORD PTR [rsi+0x58]
   14002f7d5:	jg     0x14002f7e4
   14002f7d7:	test   ebx,ebx
   14002f7d9:	js     0x14002f7e4
   14002f7db:	cmp    ebx,DWORD PTR [rsi+0x58]
   14002f7de:	jne    0x14002f806
   14002f7e0:	mov    rdi,QWORD PTR [rsi+0x10]
   14002f7e4:	lea    rcx,[rsi+0x28]
   14002f7e8:	call   QWORD PTR [rip+0x99c2]        # 0x1400391b0
   14002f7ee:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f7f3:	mov    rbp,QWORD PTR [rsp+0x38]
   14002f7f8:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f7fd:	mov    rax,rdi
   14002f800:	add    rsp,0x20
   14002f804:	pop    rdi
   14002f805:	ret    
   14002f806:	jge    0x14002f812
   14002f808:	mov    rax,QWORD PTR [rsi+0x50]
   14002f80c:	mov    rdi,QWORD PTR [rax+rbx*8]
   14002f810:	jmp    0x14002f7e4
   14002f812:	xor    r9d,r9d
   14002f815:	xor    r8d,r8d
   14002f818:	mov    ecx,0xc000008c
   14002f81d:	lea    edx,[r9+0x1]
   14002f821:	call   QWORD PTR [rip+0x9aa1]        # 0x1400392c8
   14002f827:	int3   
   14002f828:	rex push rbx
   14002f82a:	sub    rsp,0x20
   14002f82e:	lea    rax,[rip+0xd9c3]        # 0x14003d1f8
   14002f835:	mov    rbx,rcx
   14002f838:	mov    QWORD PTR [rcx],rax
   14002f83b:	test   dl,0x1
   14002f83e:	je     0x14002f845
   14002f840:	call   0x140020e30
   14002f845:	mov    rax,rbx
   14002f848:	add    rsp,0x20
   14002f84c:	pop    rbx
   14002f84d:	ret    
   14002f84e:	int3   
   14002f84f:	int3   
   14002f850:	mov    QWORD PTR [rsp+0x8],rbx
   14002f855:	push   rdi
   14002f856:	sub    rsp,0x20
   14002f85a:	cmp    BYTE PTR [rcx+0x10],0x0
   14002f85e:	lea    rax,[rip+0xd96b]        # 0x14003d1d0
   14002f865:	mov    edi,edx
   14002f867:	mov    QWORD PTR [rcx],rax
   14002f86a:	mov    rbx,rcx
   14002f86d:	je     0x14002f87e
   14002f86f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f873:	test   rcx,rcx
   14002f876:	je     0x14002f87e
   14002f878:	call   QWORD PTR [rip+0x98b2]        # 0x140039130
   14002f87e:	test   dil,0x1
   14002f882:	je     0x14002f88c
   14002f884:	mov    rcx,rbx
   14002f887:	call   0x140020e30
   14002f88c:	mov    rax,rbx
   14002f88f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f894:	add    rsp,0x20
   14002f898:	pop    rdi
   14002f899:	ret    
   14002f89a:	int3   
   14002f89b:	int3   
   14002f89c:	mov    QWORD PTR [rsp+0x8],rbx
   14002f8a1:	push   rdi
   14002f8a2:	sub    rsp,0x20
   14002f8a6:	lea    ebx,[rdx+0x8]
   14002f8a9:	movsxd r9,r8d
   14002f8ac:	mov    rdi,rcx
   14002f8af:	and    ebx,0xfffffff8
   14002f8b2:	movsxd r8,ebx
   14002f8b5:	jne    0x14002f8bc
   14002f8b7:	xor    r8d,r8d
   14002f8ba:	jmp    0x14002f8d4
   14002f8bc:	xor    edx,edx
   14002f8be:	or     rax,0xffffffffffffffff
   14002f8c2:	div    r8
   14002f8c5:	cmp    rax,r9
   14002f8c8:	jb     0x14002f902
   14002f8ca:	imul   r8,r9
   14002f8ce:	cmp    r8,0xffffffffffffffe7
   14002f8d2:	ja     0x14002f902
   14002f8d4:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f8d8:	lea    rdx,[r8+0x18]
   14002f8dc:	mov    rax,QWORD PTR [rcx]
   14002f8df:	call   QWORD PTR [rax]
   14002f8e1:	mov    rcx,rax
   14002f8e4:	test   rax,rax
   14002f8e7:	je     0x14002f902
   14002f8e9:	and    DWORD PTR [rcx+0x8],0x0
   14002f8ed:	mov    QWORD PTR [rax],rdi
   14002f8f0:	mov    DWORD PTR [rax+0x10],0x1
   14002f8f7:	lea    eax,[rbx-0x1]
   14002f8fa:	mov    DWORD PTR [rcx+0xc],eax
   14002f8fd:	mov    rax,rcx
   14002f900:	jmp    0x14002f904
   14002f902:	xor    eax,eax
   14002f904:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f909:	add    rsp,0x20
   14002f90d:	pop    rdi
   14002f90e:	ret    
   14002f90f:	int3   
   14002f910:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f914:	mov    r8,rdx
   14002f917:	xor    edx,edx
   14002f919:	rex.W jmp QWORD PTR [rip+0x9998]        # 0x1400392b8
   14002f920:	mov    rax,rcx
   14002f923:	ret    
   14002f924:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f928:	mov    rax,QWORD PTR [rcx]
   14002f92b:	rex.W jmp QWORD PTR [rax+0x8]
   14002f92f:	int3   
   14002f930:	sub    rsp,0x28
   14002f934:	test   rdx,rdx
   14002f937:	je     0x14002f948
   14002f939:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f93d:	mov    r8,rdx
   14002f940:	xor    edx,edx
   14002f942:	call   QWORD PTR [rip+0x9930]        # 0x140039278
   14002f948:	add    rsp,0x28
   14002f94c:	ret    
   14002f94d:	int3   
   14002f94e:	int3   
   14002f94f:	int3   
   14002f950:	lock inc DWORD PTR [rcx+0x20]
   14002f954:	lea    rax,[rcx+0x10]
   14002f958:	ret    
   14002f959:	int3   
   14002f95a:	int3   
   14002f95b:	int3   
   14002f95c:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f960:	mov    r8,rdx
   14002f963:	xor    edx,edx
   14002f965:	rex.W jmp QWORD PTR [rip+0x9944]        # 0x1400392b0
   14002f96c:	rex push rbx
   14002f96e:	sub    rsp,0x20
   14002f972:	lea    ebx,[r8+0x8]
   14002f976:	mov    eax,r9d
   14002f979:	and    ebx,0xfffffff8
   14002f97c:	mov    r8d,ebx
   14002f97f:	imul   r8,rax
   14002f983:	mov    eax,0xffffffff
   14002f988:	cmp    r8,rax
   14002f98b:	ja     0x14002f9b5
   14002f98d:	cmp    r8d,0xffffffe7
   14002f991:	ja     0x14002f9b5
   14002f993:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f997:	add    r8d,0x18
   14002f99b:	mov    r9,QWORD PTR [rcx]
   14002f99e:	call   QWORD PTR [r9+0x10]
   14002f9a2:	mov    rcx,rax
   14002f9a5:	test   rax,rax
   14002f9a8:	je     0x14002f9b5
   14002f9aa:	lea    eax,[rbx-0x1]
   14002f9ad:	mov    DWORD PTR [rcx+0xc],eax
   14002f9b0:	mov    rax,rcx
   14002f9b3:	jmp    0x14002f9b7
   14002f9b5:	xor    eax,eax
   14002f9b7:	add    rsp,0x20
   14002f9bb:	pop    rbx
   14002f9bc:	ret    
   14002f9bd:	int3   
   14002f9be:	int3   
   14002f9bf:	int3   
   14002f9c0:	sub    rsp,0x28
   14002f9c4:	test   rdx,rdx
   14002f9c7:	jne    0x14002f9d6
   14002f9c9:	mov    rax,QWORD PTR [rcx]
   14002f9cc:	mov    rdx,r8
   14002f9cf:	add    rsp,0x28
   14002f9d3:	rex.W jmp QWORD PTR [rax]
   14002f9d6:	test   r8,r8
   14002f9d9:	jne    0x14002f9e8
   14002f9db:	mov    rax,QWORD PTR [rcx]
   14002f9de:	call   QWORD PTR [rax+0x8]
   14002f9e1:	xor    eax,eax
   14002f9e3:	add    rsp,0x28
   14002f9e7:	ret    
   14002f9e8:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f9ec:	mov    r9,r8
   14002f9ef:	mov    r8,rdx
   14002f9f2:	xor    edx,edx
   14002f9f4:	add    rsp,0x28
   14002f9f8:	rex.W jmp QWORD PTR [rip+0x9969]        # 0x140039368
   14002f9ff:	int3   
   14002fa00:	rex push rbp
   14002fa02:	push   r14
   14002fa04:	push   r15
   14002fa06:	sub    rsp,0x40
   14002fa0a:	lea    rbp,[rsp+0x30]
   14002fa0f:	mov    QWORD PTR [rbp+0x30],rbx
   14002fa13:	mov    QWORD PTR [rbp+0x38],rsi
   14002fa17:	mov    QWORD PTR [rbp+0x40],rdi
   14002fa1b:	mov    QWORD PTR [rbp+0x48],r12
   14002fa1f:	mov    rax,QWORD PTR [rip+0x1da22]        # 0x14004d448
   14002fa26:	xor    rax,rbp
   14002fa29:	mov    QWORD PTR [rbp+0x0],rax
   14002fa2d:	xor    r12d,r12d
   14002fa30:	mov    r15,r8
   14002fa33:	mov    rsi,rdx
   14002fa36:	mov    rbx,rcx
   14002fa39:	test   rcx,rcx
   14002fa3c:	jne    0x14002fa54
   14002fa3e:	call   0x140025380
   14002fa43:	mov    ebx,0x16
   14002fa48:	mov    DWORD PTR [rax],ebx
   14002fa4a:	call   0x140024554
   14002fa4f:	jmp    0x14002fbca
   14002fa54:	call   0x140029e88
   14002fa59:	cmp    rax,rsi
   14002fa5c:	jb     0x14002fa64
   14002fa5e:	mov    WORD PTR [rbx],r12w
   14002fa62:	jmp    0x14002fa3e
   14002fa64:	mov    rax,QWORD PTR [r15]
   14002fa67:	mov    rcx,QWORD PTR [rax+0x138]
   14002fa6e:	test   rcx,rcx
   14002fa71:	je     0x14002fac4
   14002fa73:	or     r9d,0xffffffff
   14002fa77:	mov    r8,rbx
   14002fa7a:	mov    edx,0x200
   14002fa7f:	mov    DWORD PTR [rsp+0x28],r12d
   14002fa84:	mov    QWORD PTR [rsp+0x20],r12
   14002fa89:	call   0x14002a7fc
   14002fa8e:	movsxd r14,eax
   14002fa91:	test   eax,eax
   14002fa93:	jne    0x14002fad1
   14002fa95:	call   0x140025380
   14002fa9a:	mov    ebx,0x2a
   14002fa9f:	mov    DWORD PTR [rax],ebx
   14002faa1:	call   0x140025380
   14002faa6:	mov    eax,DWORD PTR [rax]
   14002faa8:	jmp    0x14002fbcc
   14002faad:	movzx  ecx,WORD PTR [rbx]
   14002fab0:	lea    eax,[rcx-0x61]
   14002fab3:	cmp    ax,0x19
   14002fab7:	ja     0x14002fac0
   14002fab9:	sub    cx,0x20
   14002fabd:	mov    WORD PTR [rbx],cx
   14002fac0:	add    rbx,0x2
   14002fac4:	cmp    WORD PTR [rbx],r12w
   14002fac8:	jne    0x14002faad
   14002faca:	xor    eax,eax
   14002facc:	jmp    0x14002fbcc
   14002fad1:	mov    rcx,r14
   14002fad4:	cmp    rsi,r14
   14002fad7:	jae    0x14002faec
   14002fad9:	mov    WORD PTR [rbx],r12w
   14002fadd:	call   0x140025380
   14002fae2:	mov    ebx,0x22
   14002fae7:	jmp    0x14002fa48
   14002faec:	test   eax,eax
   14002faee:	jle    0x14002fb5a
   14002faf0:	xor    edx,edx
   14002faf2:	lea    rax,[rdx-0x20]
   14002faf6:	div    rcx
   14002faf9:	cmp    rax,0x2
   14002fafd:	jb     0x14002fb5a
   14002faff:	lea    rcx,[r14*2+0x10]
   14002fb07:	cmp    rcx,0x400
   14002fb0e:	ja     0x14002fb41
   14002fb10:	lea    rax,[rcx+0xf]
   14002fb14:	cmp    rax,rcx
   14002fb17:	ja     0x14002fb23
   14002fb19:	movabs rax,0xffffffffffffff0
   14002fb23:	and    rax,0xfffffffffffffff0
   14002fb27:	call   0x140028810
   14002fb2c:	sub    rsp,rax
   14002fb2f:	lea    rdi,[rsp+0x30]
   14002fb34:	test   rdi,rdi
   14002fb37:	je     0x14002fb62
   14002fb39:	mov    DWORD PTR [rdi],0xcccc
   14002fb3f:	jmp    0x14002fb54
   14002fb41:	call   0x140026354
   14002fb46:	mov    rdi,rax
   14002fb49:	test   rax,rax
   14002fb4c:	je     0x14002fb5d
   14002fb4e:	mov    DWORD PTR [rax],0xdddd
   14002fb54:	add    rdi,0x10
   14002fb58:	jmp    0x14002fb5d
   14002fb5a:	mov    rdi,r12
   14002fb5d:	test   rdi,rdi
   14002fb60:	jne    0x14002fb72
   14002fb62:	call   0x140025380
   14002fb67:	mov    DWORD PTR [rax],0xc
   14002fb6d:	jmp    0x14002faa1
   14002fb72:	mov    rcx,QWORD PTR [r15]
   14002fb75:	or     r9d,0xffffffff
   14002fb79:	mov    r8,rbx
   14002fb7c:	mov    rcx,QWORD PTR [rcx+0x138]
   14002fb83:	mov    edx,0x200
   14002fb88:	mov    DWORD PTR [rsp+0x28],r14d
   14002fb8d:	mov    QWORD PTR [rsp+0x20],rdi
   14002fb92:	call   0x14002a7fc
   14002fb97:	test   eax,eax
   14002fb99:	je     0x14002fbad
   14002fb9b:	mov    r8,rdi
   14002fb9e:	mov    rdx,rsi
   14002fba1:	mov    rcx,rbx
   14002fba4:	call   0x140027a10
   14002fba9:	mov    ebx,eax
   14002fbab:	jmp    0x14002fbb9
   14002fbad:	call   0x140025380
   14002fbb2:	mov    ebx,0x2a
   14002fbb7:	mov    DWORD PTR [rax],ebx
   14002fbb9:	lea    rcx,[rdi-0x10]
   14002fbbd:	cmp    DWORD PTR [rcx],0xdddd
   14002fbc3:	jne    0x14002fbca
   14002fbc5:	call   0x140023328
   14002fbca:	mov    eax,ebx
   14002fbcc:	mov    rcx,QWORD PTR [rbp+0x0]
   14002fbd0:	xor    rcx,rbp
   14002fbd3:	call   0x140020e50
   14002fbd8:	mov    rbx,QWORD PTR [rbp+0x30]
   14002fbdc:	mov    rsi,QWORD PTR [rbp+0x38]
   14002fbe0:	mov    rdi,QWORD PTR [rbp+0x40]
   14002fbe4:	mov    r12,QWORD PTR [rbp+0x48]
   14002fbe8:	lea    rsp,[rbp+0x10]
   14002fbec:	pop    r15
   14002fbee:	pop    r14
   14002fbf0:	pop    rbp
   14002fbf1:	ret    
   14002fbf2:	int3   
   14002fbf3:	int3   
   14002fbf4:	xor    r8d,r8d
   14002fbf7:	jmp    0x14002fbfc
   14002fbfc:	mov    QWORD PTR [rsp+0x8],rbx
   14002fc01:	push   rdi
   14002fc02:	sub    rsp,0x40
   14002fc06:	mov    rdi,rcx
   14002fc09:	mov    rbx,rdx
   14002fc0c:	lea    rcx,[rsp+0x20]
   14002fc11:	mov    rdx,r8
   14002fc14:	call   0x1400246b8
   14002fc19:	lea    r8,[rsp+0x20]
   14002fc1e:	mov    rdx,rbx
   14002fc21:	mov    rcx,rdi
   14002fc24:	call   0x14002fa00
   14002fc29:	cmp    BYTE PTR [rsp+0x38],0x0
   14002fc2e:	je     0x14002fc3c
   14002fc30:	mov    rcx,QWORD PTR [rsp+0x30]
   14002fc35:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002fc3c:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fc41:	add    rsp,0x40
   14002fc45:	pop    rdi
   14002fc46:	ret    
   14002fc47:	int3   
   14002fc48:	mov    r11,rsp
   14002fc4b:	mov    QWORD PTR [r11+0x10],rdx
   14002fc4f:	mov    QWORD PTR [r11+0x18],r8
   14002fc53:	mov    QWORD PTR [r11+0x20],r9
   14002fc57:	sub    rsp,0x38
   14002fc5b:	mov    r8,rdx
   14002fc5e:	lea    rax,[r11+0x18]
   14002fc62:	mov    rdx,rcx
   14002fc65:	lea    rcx,[rip+0x858]        # 0x1400304c4
   14002fc6c:	xor    r9d,r9d
   14002fc6f:	mov    QWORD PTR [r11-0x18],rax
   14002fc73:	call   0x14002fc80
   14002fc78:	add    rsp,0x38
   14002fc7c:	ret    
   14002fc7d:	int3   
   14002fc7e:	int3   
   14002fc7f:	int3   
   14002fc80:	mov    rax,rsp
   14002fc83:	mov    QWORD PTR [rax+0x8],rbx
   14002fc87:	mov    QWORD PTR [rax+0x10],rbp
   14002fc8b:	mov    QWORD PTR [rax+0x18],rsi
   14002fc8f:	push   rdi
   14002fc90:	sub    rsp,0x50
   14002fc94:	and    QWORD PTR [rax-0x38],0x0
   14002fc99:	mov    rbx,rdx
   14002fc9c:	xor    edx,edx
   14002fc9e:	mov    rdi,r8
   14002fca1:	mov    rbp,rcx
   14002fca4:	lea    r8d,[rdx+0x28]
   14002fca8:	lea    rcx,[rax-0x30]
   14002fcac:	mov    rsi,r9
   14002fcaf:	call   0x1400260e0
   14002fcb4:	test   rbx,rbx
   14002fcb7:	jne    0x14002fcce
   14002fcb9:	call   0x140025380
   14002fcbe:	mov    DWORD PTR [rax],0x16
   14002fcc4:	call   0x140024554
   14002fcc9:	or     eax,0xffffffff
   14002fccc:	jmp    0x14002fd1a
   14002fcce:	test   rdi,rdi
   14002fcd1:	je     0x14002fcb9
   14002fcd3:	mov    rcx,rbx
   14002fcd6:	call   0x140027a7c
   14002fcdb:	mov    DWORD PTR [rsp+0x38],0x49
   14002fce3:	mov    QWORD PTR [rsp+0x30],rbx
   14002fce8:	mov    QWORD PTR [rsp+0x20],rbx
   14002fced:	cmp    rax,0x3fffffff
   14002fcf3:	jbe    0x14002fcff
   14002fcf5:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14002fcfd:	jmp    0x14002fd05
   14002fcff:	add    eax,eax
   14002fd01:	mov    DWORD PTR [rsp+0x28],eax
   14002fd05:	mov    r9,QWORD PTR [rsp+0x80]
   14002fd0d:	lea    rcx,[rsp+0x20]
   14002fd12:	mov    r8,rsi
   14002fd15:	mov    rdx,rdi
   14002fd18:	call   rbp
   14002fd1a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002fd1f:	mov    rbp,QWORD PTR [rsp+0x68]
   14002fd24:	mov    rsi,QWORD PTR [rsp+0x70]
   14002fd29:	add    rsp,0x50
   14002fd2d:	pop    rdi
   14002fd2e:	ret    
   14002fd2f:	int3   
   14002fd30:	mov    QWORD PTR [rsp+0x8],rbx
   14002fd35:	mov    QWORD PTR [rsp+0x10],rsi
   14002fd3a:	push   rdi
   14002fd3b:	sub    rsp,0x30
   14002fd3f:	mov    rbx,rcx
   14002fd42:	test   rcx,rcx
   14002fd45:	je     0x14002fd7d
   14002fd47:	call   0x140027a7c
   14002fd4c:	mov    edx,0x2
   14002fd51:	lea    rcx,[rax+0x1]
   14002fd55:	mov    rsi,rax
   14002fd58:	call   0x14002b46c
   14002fd5d:	mov    rdi,rax
   14002fd60:	test   rax,rax
   14002fd63:	je     0x14002fd7d
   14002fd65:	lea    rdx,[rsi+0x1]
   14002fd69:	mov    r8,rbx
   14002fd6c:	mov    rcx,rax
   14002fd6f:	call   0x140027a10
   14002fd74:	test   eax,eax
   14002fd76:	jne    0x14002fd8f
   14002fd78:	mov    rax,rdi
   14002fd7b:	jmp    0x14002fd7f
   14002fd7d:	xor    eax,eax
   14002fd7f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fd84:	mov    rsi,QWORD PTR [rsp+0x48]
   14002fd89:	add    rsp,0x30
   14002fd8d:	pop    rdi
   14002fd8e:	ret    
   14002fd8f:	and    QWORD PTR [rsp+0x20],0x0
   14002fd95:	xor    r9d,r9d
   14002fd98:	xor    r8d,r8d
   14002fd9b:	xor    edx,edx
   14002fd9d:	xor    ecx,ecx
   14002fd9f:	call   0x140024574
   14002fda4:	int3   
   14002fda5:	int3   
   14002fda6:	int3   
   14002fda7:	int3   
   14002fda8:	mov    QWORD PTR [rsp+0x8],rbx
   14002fdad:	mov    QWORD PTR [rsp+0x10],rbp
   14002fdb2:	mov    QWORD PTR [rsp+0x20],rsi
   14002fdb7:	push   rdi
   14002fdb8:	push   r14
   14002fdba:	push   r15
   14002fdbc:	sub    rsp,0x30
   14002fdc0:	xor    ebx,ebx
   14002fdc2:	mov    rbp,r9
   14002fdc5:	mov    rsi,r8
   14002fdc8:	mov    r14d,edx
   14002fdcb:	mov    r15,rcx
   14002fdce:	test   r8,r8
   14002fdd1:	jne    0x14002fde8
   14002fdd3:	call   0x140025380
   14002fdd8:	mov    DWORD PTR [rax],0x16
   14002fdde:	call   0x140024554
   14002fde3:	jmp    0x14002fe7a
   14002fde8:	mov    edx,0x470
   14002fded:	mov    ecx,0x1
   14002fdf2:	call   0x140023838
   14002fdf7:	mov    rdi,rax
   14002fdfa:	test   rax,rax
   14002fdfd:	je     0x14002fe67
   14002fdff:	call   0x140021ed4
   14002fe04:	mov    rcx,rdi
   14002fe07:	mov    rdx,QWORD PTR [rax+0xc0]
   14002fe0e:	call   0x140021f7c
   14002fe13:	mov    rcx,QWORD PTR [rsp+0x78]
   14002fe18:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14002fe1d:	mov    eax,DWORD PTR [rsp+0x70]
   14002fe21:	test   rcx,rcx
   14002fe24:	lea    r8,[rsp+0x60]
   14002fe29:	cmovne r8,rcx
   14002fe2d:	mov    rdx,r14
   14002fe30:	mov    r9,rdi
   14002fe33:	mov    QWORD PTR [rsp+0x28],r8
   14002fe38:	lea    r8,[rip+0x115]        # 0x14002ff54
   14002fe3f:	mov    rcx,r15
   14002fe42:	mov    QWORD PTR [rdi+0x90],rsi
   14002fe49:	mov    QWORD PTR [rdi+0x98],rbp
   14002fe50:	mov    DWORD PTR [rsp+0x20],eax
   14002fe54:	call   QWORD PTR [rip+0x96de]        # 0x140039538
   14002fe5a:	test   rax,rax
   14002fe5d:	jne    0x14002fe7c
   14002fe5f:	call   QWORD PTR [rip+0x977b]        # 0x1400395e0
   14002fe65:	mov    ebx,eax
   14002fe67:	mov    rcx,rdi
   14002fe6a:	call   0x140023328
   14002fe6f:	test   ebx,ebx
   14002fe71:	je     0x14002fe7a
   14002fe73:	mov    ecx,ebx
   14002fe75:	call   0x140025330
   14002fe7a:	xor    eax,eax
   14002fe7c:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fe81:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fe86:	mov    rsi,QWORD PTR [rsp+0x68]
   14002fe8b:	add    rsp,0x30
   14002fe8f:	pop    r15
   14002fe91:	pop    r14
   14002fe93:	pop    rdi
   14002fe94:	ret    
   14002fe95:	int3   
   14002fe96:	int3   
   14002fe97:	int3   
   14002fe98:	sub    rsp,0x28
   14002fe9c:	call   0x140021ed4
   14002fea1:	nop
   14002fea2:	mov    rcx,QWORD PTR [rax+0x98]
   14002fea9:	call   QWORD PTR [rax+0x90]
   14002feaf:	mov    ecx,eax
   14002feb1:	call   0x14002fec4
   14002feb6:	nop
   14002feb7:	mov    ecx,eax
   14002feb9:	call   0x140022230
   14002febe:	nop
   14002febf:	add    rsp,0x28
   14002fec3:	ret    
   14002fec4:	mov    QWORD PTR [rsp+0x8],rbx
   14002fec9:	push   rdi
   14002feca:	sub    rsp,0x20
   14002fece:	mov    edi,ecx
   14002fed0:	call   0x140021ef8
   14002fed5:	mov    rbx,rax
   14002fed8:	test   rax,rax
   14002fedb:	je     0x14002ff4b
   14002fedd:	cmp    DWORD PTR [rax+0x468],0x0
   14002fee4:	je     0x14002ff43
   14002fee6:	mov    edx,DWORD PTR [rip+0x20e58]        # 0x140050d44
   14002feec:	test   edx,edx
   14002feee:	jne    0x14002ff34
   14002fef0:	lea    rcx,[rip+0xd531]        # 0x14003d428
   14002fef7:	xor    edx,edx
   14002fef9:	mov    r8d,0x800
   14002feff:	call   QWORD PTR [rip+0x944b]        # 0x140039350
   14002ff05:	lea    rdx,[rip+0xd534]        # 0x14003d440
   14002ff0c:	mov    rcx,rax
   14002ff0f:	call   QWORD PTR [rip+0x92db]        # 0x1400391f0
   14002ff15:	test   rax,rax
   14002ff18:	je     0x14002ff43
   14002ff1a:	mov    rcx,rax
   14002ff1d:	call   QWORD PTR [rip+0x9295]        # 0x1400391b8
   14002ff23:	mov    QWORD PTR [rip+0x20e1e],rax        # 0x140050d48
   14002ff2a:	mov    DWORD PTR [rip+0x20e10],0x1        # 0x140050d44
   14002ff34:	mov    rcx,QWORD PTR [rip+0x20e0d]        # 0x140050d48
   14002ff3b:	call   QWORD PTR [rip+0x927f]        # 0x1400391c0
   14002ff41:	call   rax
   14002ff43:	mov    rcx,rbx
   14002ff46:	call   0x140021e98
   14002ff4b:	mov    ecx,edi
   14002ff4d:	call   QWORD PTR [rip+0x923d]        # 0x140039190
   14002ff53:	int3   
   14002ff54:	mov    QWORD PTR [rsp+0x8],rbx
   14002ff59:	mov    QWORD PTR [rsp+0x10],rsi
   14002ff5e:	push   rdi
   14002ff5f:	sub    rsp,0x20
   14002ff63:	mov    rsi,rcx
   14002ff66:	call   0x140021d5c
   14002ff6b:	mov    ecx,eax
   14002ff6d:	call   0x14002681c
   14002ff72:	xor    ebx,ebx
   14002ff74:	mov    rdi,rax
   14002ff77:	test   rax,rax
   14002ff7a:	jne    0x14002ffab
   14002ff7c:	call   0x140021d5c
   14002ff81:	mov    rdx,rsi
   14002ff84:	mov    ecx,eax
   14002ff86:	call   0x140026824
   14002ff8b:	test   eax,eax
   14002ff8d:	jne    0x14002ff9e
   14002ff8f:	call   QWORD PTR [rip+0x964b]        # 0x1400395e0
   14002ff95:	mov    ecx,eax
   14002ff97:	call   QWORD PTR [rip+0x91f3]        # 0x140039190
   14002ff9d:	int3   
   14002ff9e:	call   QWORD PTR [rip+0x9234]        # 0x1400391d8
   14002ffa4:	mov    rdi,rsi
   14002ffa7:	mov    DWORD PTR [rsi],eax
   14002ffa9:	jmp    0x14002ffd7
   14002ffab:	mov    rax,QWORD PTR [rsi+0x90]
   14002ffb2:	mov    rcx,rsi
   14002ffb5:	mov    QWORD PTR [rdi+0x90],rax
   14002ffbc:	mov    rax,QWORD PTR [rsi+0x98]
   14002ffc3:	mov    QWORD PTR [rdi+0x98],rax
   14002ffca:	mov    rax,QWORD PTR [rsi+0x8]
   14002ffce:	mov    QWORD PTR [rdi+0x8],rax
   14002ffd2:	call   0x140021d64
   14002ffd7:	call   0x14002682c
   14002ffdc:	mov    DWORD PTR [rdi+0x468],eax
   14002ffe2:	test   eax,eax
   14002ffe4:	je     0x140030051
   14002ffe6:	mov    eax,DWORD PTR [rip+0x20d54]        # 0x140050d40
   14002ffec:	mov    esi,0x1
   14002fff1:	test   eax,eax
   14002fff3:	jne    0x140030035
   14002fff5:	lea    rcx,[rip+0xd42c]        # 0x14003d428
   14002fffc:	xor    edx,edx
   14002fffe:	mov    r8d,0x800
   140030004:	call   QWORD PTR [rip+0x9346]        # 0x140039350
   14003000a:	lea    rdx,[rip+0xd407]        # 0x14003d418
   140030011:	mov    rcx,rax
   140030014:	call   QWORD PTR [rip+0x91d6]        # 0x1400391f0
   14003001a:	test   rax,rax
   14003001d:	je     0x14003004b
   14003001f:	mov    rcx,rax
   140030022:	call   QWORD PTR [rip+0x9190]        # 0x1400391b8
   140030028:	mov    QWORD PTR [rip+0x20d09],rax        # 0x140050d38
   14003002f:	mov    DWORD PTR [rip+0x20d0b],esi        # 0x140050d40
   140030035:	mov    rcx,QWORD PTR [rip+0x20cfc]        # 0x140050d38
   14003003c:	call   QWORD PTR [rip+0x917e]        # 0x1400391c0
   140030042:	mov    ecx,esi
   140030044:	call   rax
   140030046:	test   eax,eax
   140030048:	sete   bl
   14003004b:	mov    DWORD PTR [rdi+0x468],ebx
   140030051:	call   0x14002fe98
   140030056:	int3   
   140030057:	int3   
   140030058:	rex push rbp
   14003005a:	push   r14
   14003005c:	push   r15
   14003005e:	sub    rsp,0x40
   140030062:	lea    rbp,[rsp+0x30]
   140030067:	mov    QWORD PTR [rbp+0x30],rbx
   14003006b:	mov    QWORD PTR [rbp+0x38],rsi
   14003006f:	mov    QWORD PTR [rbp+0x40],rdi
   140030073:	mov    QWORD PTR [rbp+0x48],r12
   140030077:	mov    rax,QWORD PTR [rip+0x1d3ca]        # 0x14004d448
   14003007e:	xor    rax,rbp
   140030081:	mov    QWORD PTR [rbp+0x0],rax
   140030085:	xor    r12d,r12d
   140030088:	mov    r15,r8
   14003008b:	mov    rsi,rdx
   14003008e:	mov    rbx,rcx
   140030091:	test   rcx,rcx
   140030094:	jne    0x1400300ac
   140030096:	call   0x140025380
   14003009b:	mov    ebx,0x16
   1400300a0:	mov    DWORD PTR [rax],ebx
   1400300a2:	call   0x140024554
   1400300a7:	jmp    0x140030222
   1400300ac:	call   0x140029e88
   1400300b1:	cmp    rax,rsi
   1400300b4:	jb     0x1400300bc
   1400300b6:	mov    WORD PTR [rbx],r12w
   1400300ba:	jmp    0x140030096
   1400300bc:	mov    rax,QWORD PTR [r15]
   1400300bf:	mov    rcx,QWORD PTR [rax+0x138]
   1400300c6:	test   rcx,rcx
   1400300c9:	je     0x14003011c
   1400300cb:	or     r9d,0xffffffff
   1400300cf:	mov    r8,rbx
   1400300d2:	mov    edx,0x100
   1400300d7:	mov    DWORD PTR [rsp+0x28],r12d
   1400300dc:	mov    QWORD PTR [rsp+0x20],r12
   1400300e1:	call   0x14002a7fc
   1400300e6:	movsxd r14,eax
   1400300e9:	test   eax,eax
   1400300eb:	jne    0x140030129
   1400300ed:	call   0x140025380
   1400300f2:	mov    ebx,0x2a
   1400300f7:	mov    DWORD PTR [rax],ebx
   1400300f9:	call   0x140025380
   1400300fe:	mov    eax,DWORD PTR [rax]
   140030100:	jmp    0x140030224
   140030105:	movzx  ecx,WORD PTR [rbx]
   140030108:	lea    eax,[rcx-0x41]
   14003010b:	cmp    ax,0x19
   14003010f:	ja     0x140030118
   140030111:	add    cx,0x20
   140030115:	mov    WORD PTR [rbx],cx
   140030118:	add    rbx,0x2
   14003011c:	cmp    WORD PTR [rbx],r12w
   140030120:	jne    0x140030105
   140030122:	xor    eax,eax
   140030124:	jmp    0x140030224
   140030129:	mov    rcx,r14
   14003012c:	cmp    rsi,r14
   14003012f:	jae    0x140030144
   140030131:	mov    WORD PTR [rbx],r12w
   140030135:	call   0x140025380
   14003013a:	mov    ebx,0x22
   14003013f:	jmp    0x1400300a0
   140030144:	test   eax,eax
   140030146:	jle    0x1400301b2
   140030148:	xor    edx,edx
   14003014a:	lea    rax,[rdx-0x20]
   14003014e:	div    rcx
   140030151:	cmp    rax,0x2
   140030155:	jb     0x1400301b2
   140030157:	lea    rcx,[r14*2+0x10]
   14003015f:	cmp    rcx,0x400
   140030166:	ja     0x140030199
   140030168:	lea    rax,[rcx+0xf]
   14003016c:	cmp    rax,rcx
   14003016f:	ja     0x14003017b
   140030171:	movabs rax,0xffffffffffffff0
   14003017b:	and    rax,0xfffffffffffffff0
   14003017f:	call   0x140028810
   140030184:	sub    rsp,rax
   140030187:	lea    rdi,[rsp+0x30]
   14003018c:	test   rdi,rdi
   14003018f:	je     0x1400301ba
   140030191:	mov    DWORD PTR [rdi],0xcccc
   140030197:	jmp    0x1400301ac
   140030199:	call   0x140026354
   14003019e:	mov    rdi,rax
   1400301a1:	test   rax,rax
   1400301a4:	je     0x1400301b5
   1400301a6:	mov    DWORD PTR [rax],0xdddd
   1400301ac:	add    rdi,0x10
   1400301b0:	jmp    0x1400301b5
   1400301b2:	mov    rdi,r12
   1400301b5:	test   rdi,rdi
   1400301b8:	jne    0x1400301ca
   1400301ba:	call   0x140025380
   1400301bf:	mov    DWORD PTR [rax],0xc
   1400301c5:	jmp    0x1400300f9
   1400301ca:	mov    rcx,QWORD PTR [r15]
   1400301cd:	or     r9d,0xffffffff
   1400301d1:	mov    r8,rbx
   1400301d4:	mov    rcx,QWORD PTR [rcx+0x138]
   1400301db:	mov    edx,0x100
   1400301e0:	mov    DWORD PTR [rsp+0x28],r14d
   1400301e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400301ea:	call   0x14002a7fc
   1400301ef:	test   eax,eax
   1400301f1:	je     0x140030205
   1400301f3:	mov    r8,rdi
   1400301f6:	mov    rdx,rsi
   1400301f9:	mov    rcx,rbx
   1400301fc:	call   0x140027a10
   140030201:	mov    ebx,eax
   140030203:	jmp    0x140030211
   140030205:	call   0x140025380
   14003020a:	mov    ebx,0x2a
   14003020f:	mov    DWORD PTR [rax],ebx
   140030211:	lea    rcx,[rdi-0x10]
   140030215:	cmp    DWORD PTR [rcx],0xdddd
   14003021b:	jne    0x140030222
   14003021d:	call   0x140023328
   140030222:	mov    eax,ebx
   140030224:	mov    rcx,QWORD PTR [rbp+0x0]
   140030228:	xor    rcx,rbp
   14003022b:	call   0x140020e50
   140030230:	mov    rbx,QWORD PTR [rbp+0x30]
   140030234:	mov    rsi,QWORD PTR [rbp+0x38]
   140030238:	mov    rdi,QWORD PTR [rbp+0x40]
   14003023c:	mov    r12,QWORD PTR [rbp+0x48]
   140030240:	lea    rsp,[rbp+0x10]
   140030244:	pop    r15
   140030246:	pop    r14
   140030248:	pop    rbp
   140030249:	ret    
   14003024a:	int3   
   14003024b:	int3   
   14003024c:	xor    r8d,r8d
   14003024f:	jmp    0x140030254
   140030254:	mov    QWORD PTR [rsp+0x8],rbx
   140030259:	push   rdi
   14003025a:	sub    rsp,0x40
   14003025e:	mov    rdi,rcx
   140030261:	mov    rbx,rdx
   140030264:	lea    rcx,[rsp+0x20]
   140030269:	mov    rdx,r8
   14003026c:	call   0x1400246b8
   140030271:	lea    r8,[rsp+0x20]
   140030276:	mov    rdx,rbx
   140030279:	mov    rcx,rdi
   14003027c:	call   0x140030058
   140030281:	cmp    BYTE PTR [rsp+0x38],0x0
   140030286:	je     0x140030294
   140030288:	mov    rcx,QWORD PTR [rsp+0x30]
   14003028d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140030294:	mov    rbx,QWORD PTR [rsp+0x50]
   140030299:	add    rsp,0x40
   14003029d:	pop    rdi
   14003029e:	ret    
   14003029f:	int3   
   1400302a0:	mov    r9,rcx
   1400302a3:	movzx  r8d,BYTE PTR [r9]
   1400302a7:	inc    r9
   1400302aa:	lea    eax,[r8-0x41]
   1400302ae:	cmp    eax,0x19
   1400302b1:	ja     0x1400302b7
   1400302b3:	add    r8d,0x20
   1400302b7:	movzx  ecx,BYTE PTR [rdx]
   1400302ba:	inc    rdx
   1400302bd:	lea    eax,[rcx-0x41]
   1400302c0:	cmp    eax,0x19
   1400302c3:	ja     0x1400302c8
   1400302c5:	add    ecx,0x20
   1400302c8:	test   r8d,r8d
   1400302cb:	je     0x1400302d2
   1400302cd:	cmp    r8d,ecx
   1400302d0:	je     0x1400302a3
   1400302d2:	sub    r8d,ecx
   1400302d5:	mov    eax,r8d
   1400302d8:	ret    
   1400302d9:	int3   
   1400302da:	int3   
   1400302db:	int3   
   1400302dc:	sub    rsp,0x28
   1400302e0:	cmp    DWORD PTR [rip+0x20945],0x0        # 0x140050c2c
   1400302e7:	jne    0x140030316
   1400302e9:	test   rcx,rcx
   1400302ec:	jne    0x140030308
   1400302ee:	call   0x140025380
   1400302f3:	mov    DWORD PTR [rax],0x16
   1400302f9:	call   0x140024554
   1400302fe:	mov    eax,0x7fffffff
   140030303:	add    rsp,0x28
   140030307:	ret    
   140030308:	test   rdx,rdx
   14003030b:	je     0x1400302ee
   14003030d:	add    rsp,0x28
   140030311:	jmp    0x1400302a0
   140030316:	xor    r8d,r8d
   140030319:	add    rsp,0x28
   14003031d:	jmp    0x140030324
   140030322:	int3   
   140030323:	int3   
   140030324:	mov    QWORD PTR [rsp+0x8],rbx
   140030329:	mov    QWORD PTR [rsp+0x10],rsi
   14003032e:	push   rdi
   14003032f:	sub    rsp,0x40
   140030333:	mov    rsi,rcx
   140030336:	mov    rdi,rdx
   140030339:	lea    rcx,[rsp+0x20]
   14003033e:	mov    rdx,r8
   140030341:	call   0x1400246b8
   140030346:	test   rsi,rsi
   140030349:	je     0x140030350
   14003034b:	test   rdi,rdi
   14003034e:	jne    0x140030367
   140030350:	call   0x140025380
   140030355:	mov    DWORD PTR [rax],0x16
   14003035b:	call   0x140024554
   140030360:	mov    ebx,0x7fffffff
   140030365:	jmp    0x1400303b2
   140030367:	mov    rax,QWORD PTR [rsp+0x20]
   14003036c:	cmp    QWORD PTR [rax+0x138],0x0
   140030374:	jne    0x140030385
   140030376:	mov    rdx,rdi
   140030379:	mov    rcx,rsi
   14003037c:	call   0x1400302a0
   140030381:	mov    ebx,eax
   140030383:	jmp    0x1400303b2
   140030385:	sub    rsi,rdi
   140030388:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   14003038c:	lea    rdx,[rsp+0x20]
   140030391:	call   0x1400317cc
   140030396:	movzx  ecx,BYTE PTR [rdi]
   140030399:	lea    rdx,[rsp+0x20]
   14003039e:	mov    ebx,eax
   1400303a0:	call   0x1400317cc
   1400303a5:	inc    rdi
   1400303a8:	test   ebx,ebx
   1400303aa:	je     0x1400303b0
   1400303ac:	cmp    ebx,eax
   1400303ae:	je     0x140030388
   1400303b0:	sub    ebx,eax
   1400303b2:	cmp    BYTE PTR [rsp+0x38],0x0
   1400303b7:	je     0x1400303c5
   1400303b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400303be:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400303c5:	mov    rsi,QWORD PTR [rsp+0x58]
   1400303ca:	mov    eax,ebx
   1400303cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400303d1:	add    rsp,0x40
   1400303d5:	pop    rdi
   1400303d6:	ret    
   1400303d7:	int3   
   1400303d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400303dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400303e2:	push   rdi
   1400303e3:	sub    rsp,0x20
   1400303e7:	mov    rsi,r9
   1400303ea:	mov    rdi,r8
   1400303ed:	mov    rbx,rdx
   1400303f0:	cmp    rcx,QWORD PTR [rdx]
   1400303f3:	jne    0x14003045c
   1400303f5:	cmp    QWORD PTR [r8],r9
   1400303f8:	jne    0x14003043a
   1400303fa:	mov    rcx,QWORD PTR [rbx]
   1400303fd:	mov    edx,0x4
   140030402:	call   0x140023838
   140030407:	mov    QWORD PTR [rdi],rax
   14003040a:	test   rax,rax
   14003040d:	jne    0x140030413
   14003040f:	xor    eax,eax
   140030411:	jmp    0x140030461
   140030413:	mov    rax,QWORD PTR [rsp+0x50]
   140030418:	mov    rdx,rsi
   14003041b:	mov    DWORD PTR [rax],0x1
   140030421:	mov    r8,QWORD PTR [rbx]
   140030424:	mov    rcx,QWORD PTR [rdi]
   140030427:	add    r8,r8
   14003042a:	call   0x140020e80
   14003042f:	mov    rax,QWORD PTR [rbx]
   140030432:	add    rax,rax
   140030435:	mov    QWORD PTR [rbx],rax
   140030438:	jmp    0x14003045c
   14003043a:	mov    rdx,QWORD PTR [rdx]
   14003043d:	mov    rcx,QWORD PTR [rdi]
   140030440:	mov    r8d,0x4
   140030446:	call   0x1400239b8
   14003044b:	test   rax,rax
   14003044e:	je     0x14003040f
   140030450:	mov    QWORD PTR [rdi],rax
   140030453:	mov    rcx,QWORD PTR [rbx]
   140030456:	add    rcx,rcx
   140030459:	mov    QWORD PTR [rbx],rcx
   14003045c:	mov    eax,0x1
   140030461:	mov    rbx,QWORD PTR [rsp+0x30]
   140030466:	mov    rsi,QWORD PTR [rsp+0x38]
   14003046b:	add    rsp,0x20
   14003046f:	pop    rdi
   140030470:	ret    
   140030471:	int3   
   140030472:	int3   
   140030473:	int3   
   140030474:	mov    QWORD PTR [rsp+0x8],rbx
   140030479:	mov    QWORD PTR [rsp+0x10],rsi
   14003047e:	push   rdi
   14003047f:	sub    rsp,0x20
   140030483:	mov    rsi,rdx
   140030486:	mov    rdi,rcx
   140030489:	inc    DWORD PTR [rdi]
   14003048b:	mov    rcx,rsi
   14003048e:	call   0x14002b6c8
   140030493:	movzx  ebx,ax
   140030496:	mov    eax,0xffff
   14003049b:	cmp    bx,ax
   14003049e:	je     0x1400304b1
   1400304a0:	mov    edx,0x8
   1400304a5:	movzx  ecx,bx
   1400304a8:	call   0x140029a24
   1400304ad:	test   eax,eax
   1400304af:	jne    0x140030489
   1400304b1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400304b6:	movzx  eax,bx
   1400304b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400304be:	add    rsp,0x20
   1400304c2:	pop    rdi
   1400304c3:	ret    
   1400304c4:	mov    QWORD PTR [rsp+0x18],rbx
   1400304c9:	push   rbp
   1400304ca:	push   rsi
   1400304cb:	push   rdi
   1400304cc:	push   r12
   1400304ce:	push   r13
   1400304d0:	push   r14
   1400304d2:	push   r15
   1400304d4:	lea    rbp,[rsp-0x2c0]
   1400304dc:	sub    rsp,0x3c0
   1400304e3:	mov    rax,QWORD PTR [rip+0x1cf5e]        # 0x14004d448
   1400304ea:	xor    rax,rsp
   1400304ed:	mov    QWORD PTR [rbp+0x2b0],rax
   1400304f4:	xor    r13d,r13d
   1400304f7:	lea    r12,[rbp-0x10]
   1400304fb:	mov    QWORD PTR [rbp-0x40],r9
   1400304ff:	movzx  edi,r13w
   140030503:	mov    rbx,r8
   140030506:	mov    rsi,rdx
   140030509:	mov    QWORD PTR [rsp+0x78],rdx
   14003050e:	mov    r15,rcx
   140030511:	mov    QWORD PTR [rsp+0x70],rcx
   140030516:	mov    DWORD PTR [rsp+0x40],edi
   14003051a:	mov    QWORD PTR [rbp-0x70],r12
   14003051e:	mov    QWORD PTR [rbp-0x58],0x15e
   140030526:	mov    DWORD PTR [rbp-0x68],r13d
   14003052a:	mov    QWORD PTR [rsp+0x68],r13
   14003052f:	mov    DWORD PTR [rbp-0x48],r13d
   140030533:	mov    DWORD PTR [rsp+0x50],r13d
   140030538:	test   rdx,rdx
   14003053b:	jne    0x140030555
   14003053d:	call   0x140025380
   140030542:	mov    DWORD PTR [rax],0x16
   140030548:	call   0x140024554
   14003054d:	or     eax,0xffffffff
   140030550:	jmp    0x14003178b
   140030555:	call   0x1400227ec
   14003055a:	test   eax,eax
   14003055c:	js     0x14003054d
   14003055e:	test   r15,r15
   140030561:	je     0x14003053d
   140030563:	lea    rcx,[rbp-0x38]
   140030567:	mov    rdx,rbx
   14003056a:	call   0x1400246b8
   14003056f:	movzx  eax,WORD PTR [rsi]
   140030572:	mov    ebx,r13d
   140030575:	mov    BYTE PTR [rsp+0x3c],r13b
   14003057a:	mov    r14d,r13d
   14003057d:	mov    DWORD PTR [rsp+0x30],r13d
   140030582:	mov    DWORD PTR [rsp+0x48],r13d
   140030587:	mov    DWORD PTR [rsp+0x38],ebx
   14003058b:	test   ax,ax
   14003058e:	je     0x140031778
   140030594:	mov    ebx,0x1
   140030599:	mov    r12d,0xffff
   14003059f:	mov    edx,0x8
   1400305a4:	movzx  ecx,ax
   1400305a7:	call   0x140029a24
   1400305ac:	test   eax,eax
   1400305ae:	je     0x1400305ff
   1400305b0:	lea    rcx,[rsp+0x48]
   1400305b5:	sub    r14d,ebx
   1400305b8:	mov    rdx,r15
   1400305bb:	mov    DWORD PTR [rsp+0x48],r14d
   1400305c0:	call   0x140030474
   1400305c5:	cmp    r12w,ax
   1400305c9:	je     0x1400305d6
   1400305cb:	mov    rdx,r15
   1400305ce:	movzx  ecx,ax
   1400305d1:	call   0x140031940
   1400305d6:	add    rsi,0x2
   1400305da:	mov    edx,0x8
   1400305df:	movzx  ecx,WORD PTR [rsi]
   1400305e2:	call   0x140029a24
   1400305e7:	test   eax,eax
   1400305e9:	jne    0x1400305d6
   1400305eb:	mov    r14d,DWORD PTR [rsp+0x48]
   1400305f0:	mov    QWORD PTR [rsp+0x78],rsi
   1400305f5:	mov    DWORD PTR [rsp+0x30],r14d
   1400305fa:	jmp    0x1400315f0
   1400305ff:	mov    r10,QWORD PTR [rsp+0x78]
   140030604:	mov    ecx,0x25
   140030609:	cmp    cx,WORD PTR [r10]
   14003060d:	jne    0x140031599
   140030613:	cmp    cx,WORD PTR [r10+0x2]
   140030618:	je     0x140031583
   14003061e:	movzx  r15d,r13w
   140030622:	xor    r11d,r11d
   140030625:	mov    edx,r13d
   140030628:	mov    r12,r13
   14003062b:	lea    r9d,[rcx-0x24]
   14003062f:	mov    DWORD PTR [rsp+0x60],r13d
   140030634:	mov    DWORD PTR [rbp-0x60],r15d
   140030638:	mov    DWORD PTR [rsp+0x64],r13d
   14003063d:	mov    r8d,r13d
   140030640:	mov    DWORD PTR [rsp+0x58],r13d
   140030645:	mov    QWORD PTR [rbp-0x78],r13
   140030649:	mov    BYTE PTR [rsp+0x5c],r13b
   14003064e:	mov    BYTE PTR [rsp+0x4c],r13b
   140030653:	mov    dil,r13b
   140030656:	mov    sil,r13b
   140030659:	mov    DWORD PTR [rbp-0x64],r13d
   14003065d:	mov    r12b,r9b
   140030660:	mov    DWORD PTR [rsp+0x44],edx
   140030664:	mov    r14b,r11b
   140030667:	mov    r13d,r11d
   14003066a:	or     r15d,0xffffffff
   14003066e:	add    r10,0x2
   140030672:	mov    eax,0xff00
   140030677:	movzx  ebx,WORD PTR [r10]
   14003067b:	mov    QWORD PTR [rsp+0x78],r10
   140030680:	test   ax,bx
   140030683:	jne    0x1400306c0
   140030685:	movzx  ecx,bl
   140030688:	call   0x140031b44
   14003068d:	mov    r8d,DWORD PTR [rsp+0x58]
   140030692:	mov    edx,DWORD PTR [rsp+0x44]
   140030696:	mov    r10,QWORD PTR [rsp+0x78]
   14003069b:	xor    r11d,r11d
   14003069e:	lea    r9d,[r11+0x1]
   1400306a2:	test   eax,eax
   1400306a4:	je     0x1400306c0
   1400306a6:	lea    edx,[rdx+rdx*4]
   1400306a9:	add    r8d,r9d
   1400306ac:	lea    edx,[rdx-0x18]
   1400306af:	mov    DWORD PTR [rsp+0x58],r8d
   1400306b4:	lea    edx,[rbx+rdx*2]
   1400306b7:	mov    DWORD PTR [rsp+0x44],edx
   1400306bb:	jmp    0x140030795
   1400306c0:	cmp    ebx,0x2a
   1400306c3:	je     0x140030792
   1400306c9:	cmp    ebx,0x46
   1400306cc:	je     0x140030795
   1400306d2:	cmp    ebx,0x49
   1400306d5:	je     0x140030725
   1400306d7:	cmp    ebx,0x4c
   1400306da:	je     0x140030720
   1400306dc:	cmp    ebx,0x4e
   1400306df:	je     0x140030795
   1400306e5:	cmp    ebx,0x68
   1400306e8:	je     0x140030718
   1400306ea:	mov    ecx,0x6c
   1400306ef:	cmp    ebx,ecx
   1400306f1:	je     0x1400306fd
   1400306f3:	cmp    ebx,0x77
   1400306f6:	je     0x140030713
   1400306f8:	jmp    0x14003078d
   1400306fd:	lea    rax,[r10+0x2]
   140030701:	cmp    WORD PTR [rax],cx
   140030704:	jne    0x140030710
   140030706:	mov    r10,rax
   140030709:	mov    QWORD PTR [rsp+0x78],rax
   14003070e:	jmp    0x140030742
   140030710:	add    r12b,r9b
   140030713:	add    r14b,r9b
   140030716:	jmp    0x140030795
   140030718:	add    r12b,r15b
   14003071b:	add    r14b,r15b
   14003071e:	jmp    0x140030795
   140030720:	add    r12b,r9b
   140030723:	jmp    0x140030795
   140030725:	movzx  eax,WORD PTR [r10+0x2]
   14003072a:	cmp    ax,0x36
   14003072e:	jne    0x14003074b
   140030730:	lea    rcx,[r10+0x4]
   140030734:	cmp    WORD PTR [rcx],0x34
   140030738:	jne    0x14003074b
   14003073a:	mov    r10,rcx
   14003073d:	mov    QWORD PTR [rsp+0x78],rcx
   140030742:	add    r13d,r9d
   140030745:	mov    QWORD PTR [rbp-0x80],r11
   140030749:	jmp    0x140030795
   14003074b:	cmp    ax,0x33
   14003074f:	jne    0x140030765
   140030751:	lea    rcx,[r10+0x4]
   140030755:	cmp    WORD PTR [rcx],0x32
   140030759:	jne    0x140030765
   14003075b:	mov    r10,rcx
   14003075e:	mov    QWORD PTR [rsp+0x78],rcx
   140030763:	jmp    0x140030795
   140030765:	sub    ax,0x58
   140030769:	mov    ecx,0x20
   14003076e:	cmp    ax,cx
   140030771:	ja     0x140030786
   140030773:	movzx  eax,ax
   140030776:	movabs rcx,0x100821001
   140030780:	bt     rcx,rax
   140030784:	jb     0x140030742
   140030786:	add    r13d,r9d
   140030789:	mov    QWORD PTR [rbp-0x80],r11
   14003078d:	add    sil,r9b
   140030790:	jmp    0x140030795
   140030792:	add    dil,r9b
   140030795:	test   sil,sil
   140030798:	je     0x14003066e
   14003079e:	mov    r15d,DWORD PTR [rbp-0x60]
   1400307a2:	mov    BYTE PTR [rsp+0x34],dil
   1400307a7:	mov    edi,DWORD PTR [rsp+0x40]
   1400307ab:	mov    cl,BYTE PTR [rsp+0x34]
   1400307af:	mov    BYTE PTR [rsp+0x35],r12b
   1400307b4:	mov    r12,QWORD PTR [rbp-0x78]
   1400307b8:	mov    DWORD PTR [rsp+0x54],r13d
   1400307bd:	mov    r13d,DWORD PTR [rbp-0x64]
   1400307c1:	test   cl,cl
   1400307c3:	jne    0x1400307df
   1400307c5:	mov    rax,QWORD PTR [rbp-0x40]
   1400307c9:	mov    QWORD PTR [rbp-0x50],rax
   1400307cd:	add    rax,0x8
   1400307d1:	mov    QWORD PTR [rbp-0x40],rax
   1400307d5:	mov    rax,QWORD PTR [rax-0x8]
   1400307d9:	mov    QWORD PTR [rbp-0x78],rax
   1400307dd:	jmp    0x1400307e3
   1400307df:	mov    QWORD PTR [rbp-0x78],r11
   1400307e3:	mov    bl,r11b
   1400307e6:	test   r14b,r14b
   1400307e9:	jne    0x140030810
   1400307eb:	movzx  eax,WORD PTR [r10]
   1400307ef:	mov    r9d,0xffef
   1400307f5:	sub    ax,0x43
   1400307f9:	and    ax,r9w
   1400307fd:	mov    r9d,0x1
   140030803:	neg    ax
   140030806:	sbb    r14b,r14b
   140030809:	and    r14b,0x2
   14003080d:	dec    r14b
   140030810:	movzx  esi,WORD PTR [r10]
   140030814:	mov    eax,0x6e
   140030819:	or     esi,0x20
   14003081c:	mov    DWORD PTR [rbp-0x60],esi
   14003081f:	cmp    esi,eax
   140030821:	je     0x14003088b
   140030823:	cmp    esi,0x63
   140030826:	je     0x140030849
   140030828:	cmp    esi,0x7b
   14003082b:	je     0x140030849
   14003082d:	mov    rdx,QWORD PTR [rsp+0x70]
   140030832:	lea    rcx,[rsp+0x48]
   140030837:	call   0x140030474
   14003083c:	movzx  edi,ax
   14003083f:	mov    eax,DWORD PTR [rsp+0x48]
   140030843:	mov    DWORD PTR [rsp+0x30],eax
   140030847:	jmp    0x140030865
   140030849:	mov    eax,DWORD PTR [rsp+0x30]
   14003084d:	mov    rcx,QWORD PTR [rsp+0x70]
   140030852:	add    eax,r9d
   140030855:	mov    DWORD PTR [rsp+0x30],eax
   140030859:	mov    DWORD PTR [rsp+0x48],eax
   14003085d:	call   0x14002b6c8
   140030862:	movzx  edi,ax
   140030865:	mov    eax,0xffff
   14003086a:	mov    DWORD PTR [rsp+0x40],edi
   14003086e:	cmp    ax,di
   140030871:	je     0x140031746
   140030877:	mov    edx,DWORD PTR [rsp+0x44]
   14003087b:	mov    r10,QWORD PTR [rsp+0x78]
   140030880:	mov    r8d,DWORD PTR [rsp+0x58]
   140030885:	mov    cl,BYTE PTR [rsp+0x34]
   140030889:	jmp    0x140030890
   14003088b:	mov    eax,0xffff
   140030890:	test   r8d,r8d
   140030893:	je     0x14003089d
   140030895:	test   edx,edx
   140030897:	je     0x140031601
   14003089d:	test   cl,cl
   14003089f:	jne    0x1400308f1
   1400308a1:	lea    eax,[rsi-0x63]
   1400308a4:	test   eax,0xffffffe7
   1400308a9:	jne    0x1400308f1
   1400308ab:	cmp    esi,0x6b
   1400308ae:	je     0x1400308f1
   1400308b0:	mov    r9,QWORD PTR [rbp-0x50]
   1400308b4:	mov    rax,QWORD PTR [r9]
   1400308b7:	add    r9,0x8
   1400308bb:	mov    r12d,DWORD PTR [r9]
   1400308be:	mov    r11,r9
   1400308c1:	mov    QWORD PTR [rbp-0x50],r9
   1400308c5:	add    r9,0x8
   1400308c9:	mov    QWORD PTR [rbp-0x78],rax
   1400308cd:	mov    QWORD PTR [rbp-0x40],r9
   1400308d1:	mov    r9d,0x1
   1400308d7:	cmp    r12,r9
   1400308da:	jae    0x1400308fb
   1400308dc:	xor    r13d,r13d
   1400308df:	test   r14b,r14b
   1400308e2:	jle    0x140031622
   1400308e8:	mov    WORD PTR [rax],r13w
   1400308ec:	jmp    0x140031625
   1400308f1:	mov    r11,QWORD PTR [rbp-0x50]
   1400308f5:	mov    r9d,0x1
   1400308fb:	cmp    esi,0x6f
   1400308fe:	jg     0x140030d82
   140030904:	je     0x1400312cf
   14003090a:	cmp    esi,0x63
   14003090d:	je     0x140030d60
   140030913:	cmp    esi,0x64
   140030916:	je     0x1400312cf
   14003091c:	jle    0x140030dab
   140030922:	cmp    esi,0x67
   140030925:	jle    0x140030987
   140030927:	cmp    esi,0x69
   14003092a:	je     0x14003096a
   14003092c:	mov    eax,0x6e
   140030931:	cmp    esi,eax
   140030933:	jne    0x140030dab
   140030939:	mov    r14d,DWORD PTR [rsp+0x30]
   14003093e:	xor    r13d,r13d
   140030941:	mov    eax,r14d
   140030944:	test   cl,cl
   140030946:	jne    0x14003155f
   14003094c:	mov    r12d,DWORD PTR [rsp+0x54]
   140030951:	test   r12d,r12d
   140030954:	je     0x140031548
   14003095a:	mov    rax,QWORD PTR [rbp-0x78]
   14003095e:	mov    rcx,QWORD PTR [rbp-0x80]
   140030962:	mov    QWORD PTR [rax],rcx
   140030965:	jmp    0x14003155f
   14003096a:	mov    esi,0x64
   14003096f:	mov    eax,0x2d
   140030974:	cmp    ax,di
   140030977:	jne    0x140030f44
   14003097d:	mov    BYTE PTR [rsp+0x4c],r9b
   140030982:	jmp    0x140030f4e
   140030987:	xor    r13d,r13d
   14003098a:	mov    ebx,r13d
   14003098d:	lea    ecx,[r13+0x2d]
   140030991:	cmp    cx,di
   140030994:	jne    0x1400309a2
   140030996:	mov    rax,QWORD PTR [rbp-0x70]
   14003099a:	mov    rbx,r9
   14003099d:	mov    WORD PTR [rax],cx
   1400309a0:	jmp    0x1400309ac
   1400309a2:	mov    eax,0x2b
   1400309a7:	cmp    ax,di
   1400309aa:	jne    0x1400309d7
   1400309ac:	mov    r12,QWORD PTR [rsp+0x70]
   1400309b1:	mov    r15d,DWORD PTR [rsp+0x44]
   1400309b6:	mov    r14d,DWORD PTR [rsp+0x30]
   1400309bb:	mov    rcx,r12
   1400309be:	sub    r15d,r9d
   1400309c1:	add    r14d,r9d
   1400309c4:	call   0x14002b6c8
   1400309c9:	mov    r8d,DWORD PTR [rsp+0x58]
   1400309ce:	movzx  edi,ax
   1400309d1:	mov    DWORD PTR [rsp+0x40],edi
   1400309d5:	jmp    0x1400309e6
   1400309d7:	mov    r14d,DWORD PTR [rsp+0x30]
   1400309dc:	mov    r15d,DWORD PTR [rsp+0x44]
   1400309e1:	mov    r12,QWORD PTR [rsp+0x70]
   1400309e6:	test   r8d,r8d
   1400309e9:	mov    eax,0xffffffff
   1400309ee:	cmove  r15d,eax
   1400309f2:	mov    eax,0xff00
   1400309f7:	test   ax,di
   1400309fa:	jne    0x140030a6e
   1400309fc:	mov    esi,0x1
   140030a01:	movzx  eax,di
   140030a04:	movzx  ecx,al
   140030a07:	call   0x140031b44
   140030a0c:	test   eax,eax
   140030a0e:	je     0x140030a6e
   140030a10:	mov    eax,r15d
   140030a13:	sub    r15d,esi
   140030a16:	test   eax,eax
   140030a18:	je     0x140030a6e
   140030a1a:	mov    rcx,QWORD PTR [rbp-0x70]
   140030a1e:	add    DWORD PTR [rsp+0x64],esi
   140030a22:	movsx  eax,dil
   140030a26:	mov    WORD PTR [rcx+rbx*2],ax
   140030a2a:	lea    rax,[rbp-0x68]
   140030a2e:	add    rbx,rsi
   140030a31:	lea    r9,[rbp-0x10]
   140030a35:	lea    r8,[rbp-0x70]
   140030a39:	lea    rdx,[rbp-0x58]
   140030a3d:	mov    rcx,rbx
   140030a40:	mov    QWORD PTR [rsp+0x20],rax
   140030a45:	call   0x1400303d8
   140030a4a:	test   eax,eax
   140030a4c:	je     0x140031630
   140030a52:	mov    rcx,r12
   140030a55:	add    r14d,esi
   140030a58:	call   0x14002b6c8
   140030a5d:	movzx  edi,ax
   140030a60:	mov    eax,0xff00
   140030a65:	mov    DWORD PTR [rsp+0x40],edi
   140030a69:	test   ax,di
   140030a6c:	je     0x140030a01
   140030a6e:	mov    rax,QWORD PTR [rbp-0x38]
   140030a72:	mov    edx,0x1
   140030a77:	mov    rcx,QWORD PTR [rax+0xf0]
   140030a7e:	mov    rax,QWORD PTR [rcx+0x58]
   140030a82:	movzx  esi,WORD PTR [rax]
   140030a85:	movsx  eax,dil
   140030a89:	cmp    esi,eax
   140030a8b:	jne    0x140030b54
   140030a91:	mov    eax,r15d
   140030a94:	sub    r15d,edx
   140030a97:	test   eax,eax
   140030a99:	je     0x140030b54
   140030a9f:	mov    rcx,r12
   140030aa2:	add    r14d,edx
   140030aa5:	call   0x14002b6c8
   140030aaa:	lea    r9,[rbp-0x10]
   140030aae:	lea    r8,[rbp-0x70]
   140030ab2:	movzx  edi,ax
   140030ab5:	mov    rax,QWORD PTR [rbp-0x70]
   140030ab9:	lea    rdx,[rbp-0x58]
   140030abd:	mov    WORD PTR [rax+rbx*2],si
   140030ac1:	lea    rax,[rbp-0x68]
   140030ac5:	mov    esi,0x1
   140030aca:	add    rbx,rsi
   140030acd:	mov    DWORD PTR [rsp+0x40],edi
   140030ad1:	mov    QWORD PTR [rsp+0x20],rax
   140030ad6:	mov    rcx,rbx
   140030ad9:	call   0x1400303d8
   140030ade:	test   eax,eax
   140030ae0:	je     0x140031630
   140030ae6:	jmp    0x140030b47
   140030ae8:	movzx  eax,di
   140030aeb:	movzx  ecx,al
   140030aee:	call   0x140031b44
   140030af3:	test   eax,eax
   140030af5:	je     0x140030b51
   140030af7:	mov    eax,r15d
   140030afa:	sub    r15d,esi
   140030afd:	test   eax,eax
   140030aff:	je     0x140030b51
   140030b01:	mov    rax,QWORD PTR [rbp-0x70]
   140030b05:	add    DWORD PTR [rsp+0x64],esi
   140030b09:	lea    r9,[rbp-0x10]
   140030b0d:	mov    WORD PTR [rax+rbx*2],di
   140030b11:	lea    rax,[rbp-0x68]
   140030b15:	add    rbx,rsi
   140030b18:	lea    r8,[rbp-0x70]
   140030b1c:	lea    rdx,[rbp-0x58]
   140030b20:	mov    rcx,rbx
   140030b23:	mov    QWORD PTR [rsp+0x20],rax
   140030b28:	call   0x1400303d8
   140030b2d:	test   eax,eax
   140030b2f:	je     0x140031630
   140030b35:	mov    rcx,r12
   140030b38:	add    r14d,esi
   140030b3b:	call   0x14002b6c8
   140030b40:	movzx  edi,ax
   140030b43:	mov    DWORD PTR [rsp+0x40],edi
   140030b47:	mov    eax,0xff00
   140030b4c:	test   ax,di
   140030b4f:	je     0x140030ae8
   140030b51:	mov    rdx,rsi
   140030b54:	mov    esi,DWORD PTR [rsp+0x64]
   140030b58:	test   esi,esi
   140030b5a:	je     0x140030c91
   140030b60:	lea    eax,[rdi-0x45]
   140030b63:	mov    ecx,0xffdf
   140030b68:	test   cx,ax
   140030b6b:	jne    0x140030c91
   140030b71:	mov    eax,r15d
   140030b74:	sub    r15d,edx
   140030b77:	test   eax,eax
   140030b79:	je     0x140030c91
   140030b7f:	mov    rax,QWORD PTR [rbp-0x70]
   140030b83:	mov    ecx,0x65
   140030b88:	lea    r9,[rbp-0x10]
   140030b8c:	mov    WORD PTR [rax+rbx*2],cx
   140030b90:	add    rbx,rdx
   140030b93:	lea    rax,[rbp-0x68]
   140030b97:	lea    rdx,[rbp-0x58]
   140030b9b:	lea    r8,[rbp-0x70]
   140030b9f:	mov    rcx,rbx
   140030ba2:	mov    QWORD PTR [rsp+0x20],rax
   140030ba7:	call   0x1400303d8
   140030bac:	test   eax,eax
   140030bae:	je     0x140031630
   140030bb4:	mov    rcx,r12
   140030bb7:	inc    r14d
   140030bba:	call   0x14002b6c8
   140030bbf:	mov    ecx,0x2d
   140030bc4:	movzx  edi,ax
   140030bc7:	mov    DWORD PTR [rsp+0x40],edi
   140030bcb:	cmp    cx,ax
   140030bce:	jne    0x140030c02
   140030bd0:	mov    rax,QWORD PTR [rbp-0x70]
   140030bd4:	lea    r9,[rbp-0x10]
   140030bd8:	lea    r8,[rbp-0x70]
   140030bdc:	mov    WORD PTR [rax+rbx*2],cx
   140030be0:	lea    rax,[rbp-0x68]
   140030be4:	inc    rbx
   140030be7:	lea    rdx,[rbp-0x58]
   140030beb:	mov    rcx,rbx
   140030bee:	mov    QWORD PTR [rsp+0x20],rax
   140030bf3:	call   0x1400303d8
   140030bf8:	test   eax,eax
   140030bfa:	je     0x140031630
   140030c00:	jmp    0x140030c0c
   140030c02:	mov    eax,0x2b
   140030c07:	cmp    ax,di
   140030c0a:	jne    0x140030c87
   140030c0c:	mov    eax,r15d
   140030c0f:	mov    ecx,0x1
   140030c14:	sub    r15d,ecx
   140030c17:	test   eax,eax
   140030c19:	jne    0x140030c20
   140030c1b:	mov    r15d,r13d
   140030c1e:	jmp    0x140030c87
   140030c20:	add    r14d,ecx
   140030c23:	jmp    0x140030c78
   140030c25:	movzx  eax,di
   140030c28:	movzx  ecx,al
   140030c2b:	call   0x140031b44
   140030c30:	test   eax,eax
   140030c32:	je     0x140030c91
   140030c34:	mov    eax,r15d
   140030c37:	mov    ecx,0x1
   140030c3c:	sub    r15d,ecx
   140030c3f:	test   eax,eax
   140030c41:	je     0x140030c91
   140030c43:	mov    rax,QWORD PTR [rbp-0x70]
   140030c47:	add    esi,ecx
   140030c49:	lea    r9,[rbp-0x10]
   140030c4d:	mov    WORD PTR [rax+rbx*2],di
   140030c51:	add    rbx,rcx
   140030c54:	lea    rax,[rbp-0x68]
   140030c58:	lea    r8,[rbp-0x70]
   140030c5c:	lea    rdx,[rbp-0x58]
   140030c60:	mov    rcx,rbx
   140030c63:	mov    QWORD PTR [rsp+0x20],rax
   140030c68:	call   0x1400303d8
   140030c6d:	test   eax,eax
   140030c6f:	je     0x140031630
   140030c75:	inc    r14d
   140030c78:	mov    rcx,r12
   140030c7b:	call   0x14002b6c8
   140030c80:	movzx  edi,ax
   140030c83:	mov    DWORD PTR [rsp+0x40],edi
   140030c87:	mov    eax,0xff00
   140030c8c:	test   ax,di
   140030c8f:	je     0x140030c25
   140030c91:	mov    eax,0x1
   140030c96:	mov    ecx,0xffff
   140030c9b:	sub    r14d,eax
   140030c9e:	mov    DWORD PTR [rsp+0x30],r14d
   140030ca3:	mov    DWORD PTR [rsp+0x48],r14d
   140030ca8:	cmp    cx,di
   140030cab:	je     0x140030cbd
   140030cad:	mov    rdx,r12
   140030cb0:	movzx  ecx,di
   140030cb3:	call   0x140031940
   140030cb8:	mov    eax,0x1
   140030cbd:	test   esi,esi
   140030cbf:	je     0x140031630
   140030cc5:	cmp    BYTE PTR [rsp+0x34],r13b
   140030cca:	jne    0x14003155f
   140030cd0:	mov    r15d,DWORD PTR [rsp+0x38]
   140030cd5:	mov    r12,QWORD PTR [rbp-0x70]
   140030cd9:	add    r15d,eax
   140030cdc:	mov    rax,QWORD PTR [rbp-0x58]
   140030ce0:	mov    WORD PTR [r12+rbx*2],r13w
   140030ce5:	lea    rbx,[rax*2+0x2]
   140030ced:	mov    DWORD PTR [rsp+0x38],r15d
   140030cf2:	mov    rcx,rbx
   140030cf5:	call   0x1400238b8
   140030cfa:	mov    rsi,rax
   140030cfd:	test   rax,rax
   140030d00:	je     0x140031635
   140030d06:	lea    rax,[rbx-0x1]
   140030d0a:	mov    r9,r12
   140030d0d:	mov    r8,rbx
   140030d10:	mov    rdx,rsi
   140030d13:	xor    ecx,ecx
   140030d15:	mov    QWORD PTR [rsp+0x20],rax
   140030d1a:	call   0x14003205c
   140030d1f:	cmp    eax,0x16
   140030d22:	je     0x1400317b5
   140030d28:	cmp    eax,0x22
   140030d2b:	je     0x1400317b5
   140030d31:	mov    rcx,QWORD PTR [rip+0x1d4b0]        # 0x14004e1e8
   140030d38:	movsx  ebx,BYTE PTR [rsp+0x35]
   140030d3d:	call   QWORD PTR [rip+0x847d]        # 0x1400391c0
   140030d43:	mov    rdx,QWORD PTR [rbp-0x78]
   140030d47:	lea    r9,[rbp-0x38]
   140030d4b:	lea    ecx,[rbx-0x1]
   140030d4e:	mov    r8,rsi
   140030d51:	call   rax
   140030d53:	mov    rcx,rsi
   140030d56:	call   0x140023328
   140030d5b:	jmp    0x14003155f
   140030d60:	test   r8d,r8d
   140030d63:	jne    0x140030d71
   140030d65:	add    edx,r9d
   140030d68:	mov    DWORD PTR [rsp+0x58],r9d
   140030d6d:	mov    DWORD PTR [rsp+0x44],edx
   140030d71:	test   r14b,r14b
   140030d74:	jle    0x1400310f0
   140030d7a:	mov    r13b,r9b
   140030d7d:	jmp    0x1400310f0
   140030d82:	cmp    esi,0x70
   140030d85:	je     0x1400312b9
   140030d8b:	cmp    esi,0x73
   140030d8e:	je     0x1400310e5
   140030d94:	cmp    esi,0x75
   140030d97:	je     0x1400312cf
   140030d9d:	cmp    esi,0x78
   140030da0:	je     0x14003096f
   140030da6:	cmp    esi,0x7b
   140030da9:	je     0x140030dd8
   140030dab:	cmp    WORD PTR [r10],di
   140030daf:	jne    0x140031694
   140030db5:	mov    al,BYTE PTR [rsp+0x3c]
   140030db9:	mov    r14d,DWORD PTR [rsp+0x30]
   140030dbe:	xor    r13d,r13d
   140030dc1:	dec    al
   140030dc3:	mov    BYTE PTR [rsp+0x3c],al
   140030dc7:	test   cl,cl
   140030dc9:	jne    0x14003155f
   140030dcf:	mov    QWORD PTR [rbp-0x40],r11
   140030dd3:	jmp    0x14003155f
   140030dd8:	test   r14b,r14b
   140030ddb:	movzx  r13d,r13b
   140030ddf:	mov    eax,0x5e
   140030de4:	cmovg  r13d,r9d
   140030de8:	add    r10,0x2
   140030dec:	mov    DWORD PTR [rbp-0x64],r13d
   140030df0:	mov    QWORD PTR [rsp+0x78],r10
   140030df5:	cmp    ax,WORD PTR [r10]
   140030df9:	jne    0x140030e09
   140030dfb:	add    r10,0x2
   140030dff:	mov    BYTE PTR [rsp+0x5c],0xff
   140030e04:	mov    QWORD PTR [rsp+0x78],r10
   140030e09:	mov    rbx,QWORD PTR [rsp+0x68]
   140030e0e:	xor    r14d,r14d
   140030e11:	test   rbx,rbx
   140030e14:	jne    0x140030e38
   140030e16:	mov    ecx,0x2000
   140030e1b:	call   0x1400238b8
   140030e20:	mov    rbx,rax
   140030e23:	mov    QWORD PTR [rsp+0x68],rax
   140030e28:	test   rax,rax
   140030e2b:	je     0x14003172d
   140030e31:	lea    eax,[r14+0x1]
   140030e35:	mov    DWORD PTR [rbp-0x48],eax
   140030e38:	xor    edx,edx
   140030e3a:	mov    r8d,0x2000
   140030e40:	mov    rcx,rbx
   140030e43:	call   0x1400260e0
   140030e48:	mov    r10,QWORD PTR [rsp+0x78]
   140030e4d:	mov    edx,0x5d
   140030e52:	cmp    dx,WORD PTR [r10]
   140030e56:	jne    0x140030e65
   140030e58:	lea    eax,[rdx-0x3d]
   140030e5b:	mov    r15d,edx
   140030e5e:	add    r10,0x2
   140030e62:	mov    BYTE PTR [rbx+0xb],al
   140030e65:	movzx  eax,WORD PTR [r10]
   140030e69:	mov    r9d,0x1
   140030e6f:	cmp    dx,ax
   140030e72:	je     0x140030f30
   140030e78:	lea    esi,[r9+0x6]
   140030e7c:	lea    r13d,[r9+0x2c]
   140030e80:	add    r10,0x2
   140030e84:	cmp    r13w,ax
   140030e88:	jne    0x140030efb
   140030e8a:	test   r15w,r15w
   140030e8e:	je     0x140030efb
   140030e90:	movzx  ecx,WORD PTR [r10]
   140030e94:	cmp    dx,cx
   140030e97:	je     0x140030efb
   140030e99:	add    r10,0x2
   140030e9d:	cmp    r15w,cx
   140030ea1:	jae    0x140030ea9
   140030ea3:	movzx  r9d,cx
   140030ea7:	jmp    0x140030eb1
   140030ea9:	movzx  r9d,r15w
   140030ead:	movzx  r15d,cx
   140030eb1:	movzx  r8d,r9w
   140030eb5:	mov    r11d,0x1
   140030ebb:	movzx  ecx,r15w
   140030ebf:	mov    eax,r11d
   140030ec2:	cmp    ecx,r8d
   140030ec5:	jge    0x140030edc
   140030ec7:	movzx  edx,r15w
   140030ecb:	and    ecx,esi
   140030ecd:	shr    rdx,0x3
   140030ed1:	shl    al,cl
   140030ed3:	or     BYTE PTR [rdx+rbx*1],al
   140030ed6:	add    r15w,r11w
   140030eda:	jmp    0x140030ebb
   140030edc:	and    r8d,esi
   140030edf:	movzx  edx,r9w
   140030ee3:	movzx  r15d,r14w
   140030ee7:	mov    cl,r8b
   140030eea:	shr    rdx,0x3
   140030eee:	mov    r9d,0x1
   140030ef4:	shl    al,cl
   140030ef6:	or     BYTE PTR [rdx+rbx*1],al
   140030ef9:	jmp    0x140030f17
   140030efb:	movzx  r8d,ax
   140030eff:	movzx  r15d,ax
   140030f03:	movzx  eax,ax
   140030f06:	and    eax,esi
   140030f08:	mov    edx,r9d
   140030f0b:	shr    r8,0x3
   140030f0f:	mov    cl,al
   140030f11:	shl    dl,cl
   140030f13:	or     BYTE PTR [r8+rbx*1],dl
   140030f17:	movzx  eax,WORD PTR [r10]
   140030f1b:	mov    edx,0x5d
   140030f20:	cmp    dx,ax
   140030f23:	jne    0x140030e80
   140030f29:	mov    esi,DWORD PTR [rbp-0x60]
   140030f2c:	mov    r13d,DWORD PTR [rbp-0x64]
   140030f30:	cmp    WORD PTR [r10],r14w
   140030f34:	je     0x140031718
   140030f3a:	mov    QWORD PTR [rsp+0x78],r10
   140030f3f:	jmp    0x1400310f0
   140030f44:	mov    eax,0x2b
   140030f49:	cmp    ax,di
   140030f4c:	jne    0x140030f5f
   140030f4e:	sub    edx,r9d
   140030f51:	mov    DWORD PTR [rsp+0x44],edx
   140030f55:	jne    0x140030fd4
   140030f57:	test   r8d,r8d
   140030f5a:	je     0x140030fd4
   140030f5c:	mov    bl,r9b
   140030f5f:	mov    r15,QWORD PTR [rsp+0x70]
   140030f64:	mov    r14d,DWORD PTR [rsp+0x30]
   140030f69:	mov    eax,0x30
   140030f6e:	cmp    ax,di
   140030f71:	jne    0x14003106f
   140030f77:	lea    r12d,[rax-0x2f]
   140030f7b:	mov    rcx,r15
   140030f7e:	add    r14d,r12d
   140030f81:	mov    DWORD PTR [rsp+0x30],r14d
   140030f86:	mov    DWORD PTR [rsp+0x48],r14d
   140030f8b:	call   0x14002b6c8
   140030f90:	movzx  edi,ax
   140030f93:	mov    ecx,0xffdf
   140030f98:	lea    eax,[rdi-0x58]
   140030f9b:	mov    DWORD PTR [rsp+0x40],edi
   140030f9f:	test   cx,ax
   140030fa2:	je     0x140031033
   140030fa8:	mov    r13d,r12d
   140030fab:	cmp    esi,0x78
   140030fae:	je     0x140030fff
   140030fb0:	mov    r15d,DWORD PTR [rsp+0x44]
   140030fb5:	xor    ecx,ecx
   140030fb7:	cmp    DWORD PTR [rsp+0x58],ecx
   140030fbb:	je     0x140030fc5
   140030fbd:	sub    r15d,r12d
   140030fc0:	jne    0x140030fc5
   140030fc2:	add    bl,r12b
   140030fc5:	mov    r12d,DWORD PTR [rsp+0x54]
   140030fca:	mov    esi,0x6f
   140030fcf:	jmp    0x14003107e
   140030fd4:	mov    r14d,DWORD PTR [rsp+0x30]
   140030fd9:	mov    r15,QWORD PTR [rsp+0x70]
   140030fde:	add    r14d,r9d
   140030fe1:	mov    rcx,r15
   140030fe4:	mov    DWORD PTR [rsp+0x30],r14d
   140030fe9:	mov    DWORD PTR [rsp+0x48],r14d
   140030fee:	call   0x14002b6c8
   140030ff3:	movzx  edi,ax
   140030ff6:	mov    DWORD PTR [rsp+0x40],edi
   140030ffa:	jmp    0x140030f69
   140030fff:	sub    r14d,r12d
   140031002:	mov    ecx,0xffff
   140031007:	mov    DWORD PTR [rsp+0x30],r14d
   14003100c:	mov    DWORD PTR [rsp+0x48],r14d
   140031011:	cmp    cx,di
   140031014:	je     0x140031021
   140031016:	mov    rdx,r15
   140031019:	movzx  ecx,di
   14003101c:	call   0x140031940
   140031021:	mov    r12d,DWORD PTR [rsp+0x54]
   140031026:	mov    eax,0x30
   14003102b:	mov    edi,eax
   14003102d:	mov    DWORD PTR [rsp+0x40],eax
   140031031:	jmp    0x140031079
   140031033:	add    r14d,r12d
   140031036:	mov    rcx,r15
   140031039:	mov    DWORD PTR [rsp+0x30],r14d
   14003103e:	mov    DWORD PTR [rsp+0x48],r14d
   140031043:	call   0x14002b6c8
   140031048:	xor    ecx,ecx
   14003104a:	movzx  edi,ax
   14003104d:	mov    DWORD PTR [rsp+0x40],edi
   140031051:	cmp    DWORD PTR [rsp+0x58],ecx
   140031055:	je     0x14003106a
   140031057:	mov    eax,DWORD PTR [rsp+0x44]
   14003105b:	sub    eax,0x2
   14003105e:	mov    DWORD PTR [rsp+0x44],eax
   140031062:	cmp    eax,r12d
   140031065:	jge    0x14003106a
   140031067:	add    bl,r12b
   14003106a:	mov    esi,0x78
   14003106f:	mov    r12d,DWORD PTR [rsp+0x54]
   140031074:	mov    r13d,DWORD PTR [rsp+0x64]
   140031079:	mov    r15d,DWORD PTR [rsp+0x44]
   14003107e:	mov    r14d,DWORD PTR [rsp+0x30]
   140031083:	test   r12d,r12d
   140031086:	je     0x14003140d
   14003108c:	test   bl,bl
   14003108e:	mov    rbx,QWORD PTR [rbp-0x80]
   140031092:	jne    0x1400313f5
   140031098:	lea    eax,[rsi-0x70]
   14003109b:	test   eax,0xfffffff7
   1400310a0:	mov    eax,0xff00
   1400310a5:	je     0x14003134c
   1400310ab:	test   ax,di
   1400310ae:	jne    0x1400313cd
   1400310b4:	movzx  eax,di
   1400310b7:	movzx  ecx,al
   1400310ba:	call   0x140031b44
   1400310bf:	test   eax,eax
   1400310c1:	je     0x1400313cd
   1400310c7:	cmp    esi,0x6f
   1400310ca:	jne    0x140031343
   1400310d0:	lea    eax,[rsi-0x37]
   1400310d3:	cmp    ax,di
   1400310d6:	jbe    0x1400313cd
   1400310dc:	shl    rbx,0x3
   1400310e0:	jmp    0x140031386
   1400310e5:	movzx  r13d,r13b
   1400310e9:	test   r14b,r14b
   1400310ec:	cmovg  r13d,r9d
   1400310f0:	mov    r14d,DWORD PTR [rsp+0x30]
   1400310f5:	mov    rbx,QWORD PTR [rbp-0x78]
   1400310f9:	mov    r8d,0x1
   1400310ff:	sub    r14d,r8d
   140031102:	mov    r9d,0xffff
   140031108:	mov    DWORD PTR [rsp+0x30],r14d
   14003110d:	mov    DWORD PTR [rsp+0x48],r14d
   140031112:	cmp    r9w,di
   140031116:	je     0x14003112b
   140031118:	mov    rdx,QWORD PTR [rsp+0x70]
   14003111d:	movzx  ecx,di
   140031120:	call   0x140031940
   140031125:	mov    r8d,0x1
   14003112b:	cmp    esi,0x63
   14003112e:	je     0x140031133
   140031130:	sub    r12,r8
   140031133:	mov    r15b,BYTE PTR [rsp+0x5c]
   140031138:	xor    edx,edx
   14003113a:	cmp    DWORD PTR [rsp+0x58],edx
   14003113e:	je     0x140031155
   140031140:	mov    ecx,DWORD PTR [rsp+0x44]
   140031144:	mov    eax,ecx
   140031146:	sub    ecx,r8d
   140031149:	mov    DWORD PTR [rsp+0x44],ecx
   14003114d:	test   eax,eax
   14003114f:	je     0x140031278
   140031155:	mov    rcx,QWORD PTR [rsp+0x70]
   14003115a:	add    r14d,r8d
   14003115d:	mov    DWORD PTR [rsp+0x30],r14d
   140031162:	mov    DWORD PTR [rsp+0x48],r14d
   140031167:	call   0x14002b6c8
   14003116c:	mov    r9d,0xffff
   140031172:	movzx  edi,ax
   140031175:	mov    DWORD PTR [rsp+0x40],edi
   140031179:	cmp    r9w,ax
   14003117d:	je     0x14003124a
   140031183:	cmp    esi,0x63
   140031186:	je     0x1400311cc
   140031188:	cmp    esi,0x73
   14003118b:	jne    0x1400311a2
   14003118d:	lea    eax,[rdi-0x9]
   140031190:	cmp    ax,0x4
   140031194:	jbe    0x14003124a
   14003119a:	lea    eax,[rsi-0x53]
   14003119d:	cmp    di,ax
   1400311a0:	jne    0x1400311cc
   1400311a2:	cmp    esi,0x7b
   1400311a5:	jne    0x14003124a
   1400311ab:	mov    rcx,QWORD PTR [rsp+0x68]
   1400311b0:	movzx  eax,di
   1400311b3:	movzx  edx,di
   1400311b6:	shr    rax,0x3
   1400311ba:	and    edx,0x7
   1400311bd:	movsx  ecx,BYTE PTR [rax+rcx*1]
   1400311c1:	movsx  eax,r15b
   1400311c5:	xor    ecx,eax
   1400311c7:	bt     ecx,edx
   1400311ca:	jae    0x14003124a
   1400311cc:	xor    edx,edx
   1400311ce:	cmp    BYTE PTR [rsp+0x34],dl
   1400311d2:	jne    0x14003123b
   1400311d4:	test   r12,r12
   1400311d7:	je     0x1400316be
   1400311dd:	test   r13b,r13b
   1400311e0:	je     0x1400311fd
   1400311e2:	mov    rcx,QWORD PTR [rbp-0x78]
   1400311e6:	lea    r8d,[rdx+0x1]
   1400311ea:	mov    WORD PTR [rcx],di
   1400311ed:	add    rcx,0x2
   1400311f1:	sub    r12,r8
   1400311f4:	mov    QWORD PTR [rbp-0x78],rcx
   1400311f8:	jmp    0x14003113a
   1400311fd:	mov    DWORD PTR [rbp-0x64],edx
   140031200:	mov    rdx,QWORD PTR [rbp-0x78]
   140031204:	lea    rcx,[rbp-0x64]
   140031208:	movzx  r9d,di
   14003120c:	mov    r8,r12
   14003120f:	call   0x1400289ec
   140031214:	cmp    eax,0x22
   140031217:	je     0x1400316be
   14003121d:	movsxd rax,DWORD PTR [rbp-0x64]
   140031221:	xor    edx,edx
   140031223:	lea    r8d,[rdx+0x1]
   140031227:	test   eax,eax
   140031229:	jle    0x14003113a
   14003122f:	add    QWORD PTR [rbp-0x78],rax
   140031233:	sub    r12,rax
   140031236:	jmp    0x14003113a
   14003123b:	add    rbx,0x2
   14003123f:	mov    r8d,0x1
   140031245:	jmp    0x14003113a
   14003124a:	mov    r8d,0x1
   140031250:	sub    r14d,r8d
   140031253:	mov    DWORD PTR [rsp+0x30],r14d
   140031258:	mov    DWORD PTR [rsp+0x48],r14d
   14003125d:	cmp    r9w,di
   140031261:	je     0x140031276
   140031263:	mov    rdx,QWORD PTR [rsp+0x70]
   140031268:	movzx  ecx,di
   14003126b:	call   0x140031940
   140031270:	mov    r8d,0x1
   140031276:	xor    edx,edx
   140031278:	mov    rax,QWORD PTR [rbp-0x78]
   14003127c:	cmp    rbx,rax
   14003127f:	je     0x140031613
   140031285:	cmp    BYTE PTR [rsp+0x34],dl
   140031289:	jne    0x14003155c
   14003128f:	add    DWORD PTR [rsp+0x38],r8d
   140031294:	cmp    esi,0x63
   140031297:	je     0x14003155c
   14003129d:	test   r13b,r13b
   1400312a0:	je     0x1400312ae
   1400312a2:	xor    r13d,r13d
   1400312a5:	mov    WORD PTR [rax],r13w
   1400312a9:	jmp    0x14003155f
   1400312ae:	xor    r13d,r13d
   1400312b1:	mov    BYTE PTR [rax],r13b
   1400312b4:	jmp    0x14003155f
   1400312b9:	mov    r12d,DWORD PTR [rsp+0x54]
   1400312be:	mov    BYTE PTR [rsp+0x35],r9b
   1400312c3:	add    r12d,r9d
   1400312c6:	xor    r14d,r14d
   1400312c9:	mov    QWORD PTR [rbp-0x80],r14
   1400312cd:	jmp    0x1400312d4
   1400312cf:	mov    r12d,DWORD PTR [rsp+0x54]
   1400312d4:	mov    eax,0x2d
   1400312d9:	cmp    ax,di
   1400312dc:	jne    0x1400312e5
   1400312de:	mov    BYTE PTR [rsp+0x4c],r9b
   1400312e3:	jmp    0x1400312f3
   1400312e5:	mov    eax,0x2b
   1400312ea:	cmp    ax,di
   1400312ed:	jne    0x140031074
   1400312f3:	sub    edx,r9d
   1400312f6:	mov    DWORD PTR [rsp+0x44],edx
   1400312fa:	jne    0x140031311
   1400312fc:	test   r8d,r8d
   1400312ff:	je     0x140031311
   140031301:	mov    r13d,DWORD PTR [rsp+0x64]
   140031306:	mov    bl,r9b
   140031309:	mov    r15d,edx
   14003130c:	jmp    0x14003107e
   140031311:	mov    r14d,DWORD PTR [rsp+0x30]
   140031316:	mov    rcx,QWORD PTR [rsp+0x70]
   14003131b:	add    r14d,r9d
   14003131e:	mov    DWORD PTR [rsp+0x30],r14d
   140031323:	mov    DWORD PTR [rsp+0x48],r14d
   140031328:	call   0x14002b6c8
   14003132d:	mov    r15d,DWORD PTR [rsp+0x44]
   140031332:	mov    r13d,DWORD PTR [rsp+0x64]
   140031337:	movzx  edi,ax
   14003133a:	mov    DWORD PTR [rsp+0x40],edi
   14003133e:	jmp    0x140031083
   140031343:	lea    rbx,[rbx+rbx*4]
   140031347:	add    rbx,rbx
   14003134a:	jmp    0x140031386
   14003134c:	test   ax,di
   14003134f:	jne    0x1400313cd
   140031351:	movzx  eax,di
   140031354:	movzx  ebx,al
   140031357:	mov    ecx,ebx
   140031359:	call   0x140031bc0
   14003135e:	test   eax,eax
   140031360:	je     0x1400313cd
   140031362:	shl    QWORD PTR [rbp-0x80],0x4
   140031367:	mov    ecx,ebx
   140031369:	call   0x140031b44
   14003136e:	mov    rbx,QWORD PTR [rbp-0x80]
   140031372:	test   eax,eax
   140031374:	jne    0x140031386
   140031376:	mov    eax,0xffdf
   14003137b:	and    di,ax
   14003137e:	sub    di,0x7
   140031382:	mov    DWORD PTR [rsp+0x40],edi
   140031386:	movzx  eax,di
   140031389:	mov    ecx,0x1
   14003138e:	sub    eax,0x30
   140031391:	add    r13d,ecx
   140031394:	cdqe   
   140031396:	add    rbx,rax
   140031399:	xor    eax,eax
   14003139b:	mov    QWORD PTR [rbp-0x80],rbx
   14003139f:	cmp    DWORD PTR [rsp+0x58],eax
   1400313a3:	je     0x1400313aa
   1400313a5:	sub    r15d,ecx
   1400313a8:	je     0x1400313f5
   1400313aa:	add    r14d,ecx
   1400313ad:	mov    rcx,QWORD PTR [rsp+0x70]
   1400313b2:	mov    DWORD PTR [rsp+0x30],r14d
   1400313b7:	mov    DWORD PTR [rsp+0x48],r14d
   1400313bc:	call   0x14002b6c8
   1400313c1:	movzx  edi,ax
   1400313c4:	mov    DWORD PTR [rsp+0x40],edi
   1400313c8:	jmp    0x140031098
   1400313cd:	dec    r14d
   1400313d0:	mov    eax,0xffff
   1400313d5:	mov    DWORD PTR [rsp+0x30],r14d
   1400313da:	mov    DWORD PTR [rsp+0x48],r14d
   1400313df:	cmp    ax,di
   1400313e2:	je     0x1400313f1
   1400313e4:	mov    rdx,QWORD PTR [rsp+0x70]
   1400313e9:	movzx  ecx,di
   1400313ec:	call   0x140031940
   1400313f1:	mov    rbx,QWORD PTR [rbp-0x80]
   1400313f5:	xor    ecx,ecx
   1400313f7:	cmp    BYTE PTR [rsp+0x4c],cl
   1400313fb:	je     0x14003151c
   140031401:	neg    rbx
   140031404:	mov    QWORD PTR [rbp-0x80],rbx
   140031408:	jmp    0x14003151c
   14003140d:	test   bl,bl
   14003140f:	mov    ebx,DWORD PTR [rsp+0x60]
   140031413:	jne    0x14003150e
   140031419:	lea    eax,[rsi-0x70]
   14003141c:	test   eax,0xfffffff7
   140031421:	mov    eax,0xff00
   140031426:	je     0x140031462
   140031428:	test   ax,di
   14003142b:	jne    0x1400314e6
   140031431:	movzx  eax,di
   140031434:	movzx  ecx,al
   140031437:	call   0x140031b44
   14003143c:	test   eax,eax
   14003143e:	je     0x1400314e6
   140031444:	cmp    esi,0x6f
   140031447:	jne    0x14003145a
   140031449:	lea    eax,[rsi-0x37]
   14003144c:	cmp    ax,di
   14003144f:	jbe    0x1400314e6
   140031455:	shl    ebx,0x3
   140031458:	jmp    0x1400314a2
   14003145a:	lea    eax,[rbx+rbx*4]
   14003145d:	lea    ebx,[rax+rax*1]
   140031460:	jmp    0x1400314a2
   140031462:	test   ax,di
   140031465:	jne    0x1400314e6
   140031467:	movzx  eax,di
   14003146a:	movzx  ebx,al
   14003146d:	mov    ecx,ebx
   14003146f:	call   0x140031bc0
   140031474:	test   eax,eax
   140031476:	je     0x1400314e6
   140031478:	mov    eax,DWORD PTR [rsp+0x60]
   14003147c:	mov    ecx,ebx
   14003147e:	shl    eax,0x4
   140031481:	mov    DWORD PTR [rsp+0x60],eax
   140031485:	call   0x140031b44
   14003148a:	mov    ebx,DWORD PTR [rsp+0x60]
   14003148e:	test   eax,eax
   140031490:	jne    0x1400314a2
   140031492:	mov    eax,0xffdf
   140031497:	and    di,ax
   14003149a:	sub    di,0x7
   14003149e:	mov    DWORD PTR [rsp+0x40],edi
   1400314a2:	movzx  eax,di
   1400314a5:	add    ebx,0xffffffd0
   1400314a8:	mov    ecx,0x1
   1400314ad:	add    ebx,eax
   1400314af:	xor    eax,eax
   1400314b1:	add    r13d,ecx
   1400314b4:	mov    DWORD PTR [rsp+0x60],ebx
   1400314b8:	cmp    DWORD PTR [rsp+0x58],eax
   1400314bc:	je     0x1400314c3
   1400314be:	sub    r15d,ecx
   1400314c1:	je     0x14003150e
   1400314c3:	add    r14d,ecx
   1400314c6:	mov    rcx,QWORD PTR [rsp+0x70]
   1400314cb:	mov    DWORD PTR [rsp+0x30],r14d
   1400314d0:	mov    DWORD PTR [rsp+0x48],r14d
   1400314d5:	call   0x14002b6c8
   1400314da:	movzx  edi,ax
   1400314dd:	mov    DWORD PTR [rsp+0x40],edi
   1400314e1:	jmp    0x140031419
   1400314e6:	dec    r14d
   1400314e9:	mov    eax,0xffff
   1400314ee:	mov    DWORD PTR [rsp+0x30],r14d
   1400314f3:	mov    DWORD PTR [rsp+0x48],r14d
   1400314f8:	cmp    ax,di
   1400314fb:	je     0x14003150a
   1400314fd:	mov    rdx,QWORD PTR [rsp+0x70]
   140031502:	movzx  ecx,di
   140031505:	call   0x140031940
   14003150a:	mov    ebx,DWORD PTR [rsp+0x60]
   14003150e:	xor    ecx,ecx
   140031510:	cmp    BYTE PTR [rsp+0x4c],cl
   140031514:	je     0x14003151c
   140031516:	neg    ebx
   140031518:	mov    DWORD PTR [rsp+0x60],ebx
   14003151c:	cmp    esi,0x46
   14003151f:	mov    ebx,0x0
   140031524:	cmove  r13d,ebx
   140031528:	test   r13d,r13d
   14003152b:	je     0x140031613
   140031531:	xor    r13d,r13d
   140031534:	cmp    BYTE PTR [rsp+0x34],r13b
   140031539:	jne    0x14003155f
   14003153b:	inc    DWORD PTR [rsp+0x38]
   14003153f:	mov    eax,DWORD PTR [rsp+0x60]
   140031543:	jmp    0x140030951
   140031548:	mov    rcx,QWORD PTR [rbp-0x78]
   14003154c:	cmp    BYTE PTR [rsp+0x35],r13b
   140031551:	je     0x140031557
   140031553:	mov    DWORD PTR [rcx],eax
   140031555:	jmp    0x14003155f
   140031557:	mov    WORD PTR [rcx],ax
   14003155a:	jmp    0x14003155f
   14003155c:	xor    r13d,r13d
   14003155f:	mov    rsi,QWORD PTR [rsp+0x78]
   140031564:	mov    r15,QWORD PTR [rsp+0x70]
   140031569:	mov    ebx,0x1
   14003156e:	add    BYTE PTR [rsp+0x3c],bl
   140031572:	add    rsi,0x2
   140031576:	mov    r12d,0xffff
   14003157c:	mov    QWORD PTR [rsp+0x78],rsi
   140031581:	jmp    0x1400315cf
   140031583:	cmp    cx,WORD PTR [r10]
   140031587:	jne    0x140031599
   140031589:	lea    rax,[r10+0x2]
   14003158d:	cmp    cx,WORD PTR [rax]
   140031590:	cmove  r10,rax
   140031594:	mov    QWORD PTR [rsp+0x78],r10
   140031599:	add    r14d,ebx
   14003159c:	mov    rcx,r15
   14003159f:	mov    DWORD PTR [rsp+0x30],r14d
   1400315a4:	mov    DWORD PTR [rsp+0x48],r14d
   1400315a9:	call   0x14002b6c8
   1400315ae:	mov    rsi,QWORD PTR [rsp+0x78]
   1400315b3:	movzx  edi,ax
   1400315b6:	movzx  eax,WORD PTR [rsi]
   1400315b9:	add    rsi,0x2
   1400315bd:	mov    DWORD PTR [rsp+0x40],edi
   1400315c1:	mov    QWORD PTR [rsp+0x78],rsi
   1400315c6:	cmp    ax,di
   1400315c9:	jne    0x1400316f8
   1400315cf:	cmp    r12w,di
   1400315d3:	jne    0x1400315f0
   1400315d5:	mov    ecx,0x25
   1400315da:	cmp    WORD PTR [rsi],cx
   1400315dd:	jne    0x140031709
   1400315e3:	lea    eax,[rcx+0x49]
   1400315e6:	cmp    WORD PTR [rsi+0x2],ax
   1400315ea:	jne    0x140031709
   1400315f0:	movzx  eax,WORD PTR [rsi]
   1400315f3:	test   ax,ax
   1400315f6:	je     0x140031709
   1400315fc:	jmp    0x14003059f
   140031601:	cmp    ax,di
   140031604:	je     0x140031613
   140031606:	mov    rdx,QWORD PTR [rsp+0x70]
   14003160b:	movzx  ecx,di
   14003160e:	call   0x140031940
   140031613:	mov    r15d,DWORD PTR [rsp+0x38]
   140031618:	mov    r12d,DWORD PTR [rsp+0x50]
   14003161d:	xor    r13d,r13d
   140031620:	jmp    0x140031638
   140031622:	mov    BYTE PTR [rax],r13b
   140031625:	call   0x140025380
   14003162a:	mov    DWORD PTR [rax],0xc
   140031630:	mov    r15d,DWORD PTR [rsp+0x38]
   140031635:	mov    r12d,r13d
   140031638:	mov    esi,0xffff
   14003163d:	mov    r9d,0x1
   140031643:	mov    rbx,QWORD PTR [rsp+0x68]
   140031648:	cmp    DWORD PTR [rbp-0x48],r9d
   14003164c:	jne    0x140031656
   14003164e:	mov    rcx,rbx
   140031651:	call   0x140023328
   140031656:	mov    eax,0x1
   14003165b:	cmp    DWORD PTR [rbp-0x68],eax
   14003165e:	jne    0x14003166e
   140031660:	mov    rcx,QWORD PTR [rbp-0x70]
   140031664:	call   0x140023328
   140031669:	mov    eax,0x1
   14003166e:	cmp    si,di
   140031671:	jne    0x14003175a
   140031677:	test   r15d,r15d
   14003167a:	jne    0x14003176f
   140031680:	mov    al,BYTE PTR [rsp+0x3c]
   140031684:	test   al,al
   140031686:	jne    0x14003176f
   14003168c:	or     eax,0xffffffff
   14003168f:	jmp    0x14003177a
   140031694:	mov    esi,0xffff
   140031699:	cmp    si,di
   14003169c:	je     0x1400316ab
   14003169e:	mov    rdx,QWORD PTR [rsp+0x70]
   1400316a3:	movzx  ecx,di
   1400316a6:	call   0x140031940
   1400316ab:	mov    r15d,DWORD PTR [rsp+0x38]
   1400316b0:	mov    r12d,0x1
   1400316b6:	xor    r13d,r13d
   1400316b9:	mov    r9d,r12d
   1400316bc:	jmp    0x140031643
   1400316be:	call   0x140025380
   1400316c3:	mov    r15d,DWORD PTR [rsp+0x38]
   1400316c8:	mov    esi,0xffff
   1400316cd:	mov    DWORD PTR [rax],0xc
   1400316d3:	xor    eax,eax
   1400316d5:	lea    r9d,[rax+0x1]
   1400316d9:	mov    r12d,eax
   1400316dc:	test   r13b,r13b
   1400316df:	je     0x1400316ed
   1400316e1:	xor    r13d,r13d
   1400316e4:	mov    WORD PTR [rbx],r13w
   1400316e8:	jmp    0x140031643
   1400316ed:	xor    r13d,r13d
   1400316f0:	mov    BYTE PTR [rbx],r13b
   1400316f3:	jmp    0x140031643
   1400316f8:	cmp    r12w,di
   1400316fc:	je     0x140031709
   1400316fe:	mov    rdx,r15
   140031701:	movzx  ecx,di
   140031704:	call   0x140031940
   140031709:	mov    r15d,DWORD PTR [rsp+0x38]
   14003170e:	mov    r12d,DWORD PTR [rsp+0x50]
   140031713:	jmp    0x140031638
   140031718:	mov    r15d,DWORD PTR [rsp+0x38]
   14003171d:	mov    r12d,r14d
   140031720:	xor    r13d,r13d
   140031723:	mov    esi,0xffff
   140031728:	jmp    0x140031648
   14003172d:	mov    r15d,DWORD PTR [rsp+0x38]
   140031732:	xor    r13d,r13d
   140031735:	mov    r12d,r14d
   140031738:	lea    r9d,[r13+0x1]
   14003173c:	mov    esi,0xffff
   140031741:	jmp    0x140031648
   140031746:	mov    r15d,DWORD PTR [rsp+0x38]
   14003174b:	mov    r12d,DWORD PTR [rsp+0x50]
   140031750:	xor    r13d,r13d
   140031753:	mov    esi,eax
   140031755:	jmp    0x14003163d
   14003175a:	cmp    r12d,eax
   14003175d:	jne    0x140031774
   14003175f:	call   0x140025380
   140031764:	mov    DWORD PTR [rax],0x16
   14003176a:	call   0x140024554
   14003176f:	mov    eax,r15d
   140031772:	jmp    0x14003177a
   140031774:	mov    ebx,DWORD PTR [rsp+0x38]
   140031778:	mov    eax,ebx
   14003177a:	cmp    BYTE PTR [rbp-0x20],r13b
   14003177e:	je     0x14003178b
   140031780:	mov    rcx,QWORD PTR [rbp-0x28]
   140031784:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003178b:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140031792:	xor    rcx,rsp
   140031795:	call   0x140020e50
   14003179a:	mov    rbx,QWORD PTR [rsp+0x410]
   1400317a2:	add    rsp,0x3c0
   1400317a9:	pop    r15
   1400317ab:	pop    r14
   1400317ad:	pop    r13
   1400317af:	pop    r12
   1400317b1:	pop    rdi
   1400317b2:	pop    rsi
   1400317b3:	pop    rbp
   1400317b4:	ret    
   1400317b5:	xor    r9d,r9d
   1400317b8:	xor    r8d,r8d
   1400317bb:	xor    edx,edx
   1400317bd:	xor    ecx,ecx
   1400317bf:	mov    QWORD PTR [rsp+0x20],r13
   1400317c4:	call   0x140024574
   1400317c9:	int3   
   1400317ca:	int3   
   1400317cb:	int3   
   1400317cc:	mov    QWORD PTR [rsp+0x10],rdi
   1400317d1:	mov    QWORD PTR [rsp+0x20],r14
   1400317d6:	push   rbp
   1400317d7:	mov    rbp,rsp
   1400317da:	sub    rsp,0x70
   1400317de:	movsxd rdi,ecx
   1400317e1:	lea    rcx,[rbp-0x20]
   1400317e5:	call   0x1400246b8
   1400317ea:	cmp    edi,0x100
   1400317f0:	jae    0x14003184f
   1400317f2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400317f6:	cmp    DWORD PTR [rdx+0xd4],0x1
   1400317fd:	jle    0x140031815
   1400317ff:	lea    r8,[rbp-0x20]
   140031803:	mov    edx,0x1
   140031808:	mov    ecx,edi
   14003180a:	call   0x140029cd0
   14003180f:	mov    rdx,QWORD PTR [rbp-0x20]
   140031813:	jmp    0x140031823
   140031815:	mov    rax,QWORD PTR [rdx+0x108]
   14003181c:	movzx  eax,WORD PTR [rax+rdi*2]
   140031820:	and    eax,0x1
   140031823:	test   eax,eax
   140031825:	je     0x140031837
   140031827:	mov    rax,QWORD PTR [rdx+0x110]
   14003182e:	movzx  eax,BYTE PTR [rax+rdi*1]
   140031832:	jmp    0x1400318fb
   140031837:	cmp    BYTE PTR [rbp-0x8],0x0
   14003183b:	je     0x140031848
   14003183d:	mov    rax,QWORD PTR [rbp-0x10]
   140031841:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031848:	mov    eax,edi
   14003184a:	jmp    0x14003190c
   14003184f:	mov    rax,QWORD PTR [rbp-0x20]
   140031853:	cmp    DWORD PTR [rax+0xd4],0x1
   14003185a:	jle    0x140031887
   14003185c:	mov    r14d,edi
   14003185f:	lea    rdx,[rbp-0x20]
   140031863:	sar    r14d,0x8
   140031867:	movzx  ecx,r14b
   14003186b:	call   0x1400283ac
   140031870:	test   eax,eax
   140031872:	je     0x140031887
   140031874:	mov    BYTE PTR [rbp+0x10],r14b
   140031878:	mov    BYTE PTR [rbp+0x11],dil
   14003187c:	mov    BYTE PTR [rbp+0x12],0x0
   140031880:	mov    ecx,0x2
   140031885:	jmp    0x14003189f
   140031887:	call   0x140025380
   14003188c:	mov    ecx,0x1
   140031891:	mov    DWORD PTR [rax],0x2a
   140031897:	mov    BYTE PTR [rbp+0x10],dil
   14003189b:	mov    BYTE PTR [rbp+0x11],0x0
   14003189f:	mov    rdx,QWORD PTR [rbp-0x20]
   1400318a3:	mov    DWORD PTR [rsp+0x40],0x1
   1400318ab:	lea    r9,[rbp+0x10]
   1400318af:	mov    eax,DWORD PTR [rdx+0x4]
   1400318b2:	mov    rdx,QWORD PTR [rdx+0x138]
   1400318b9:	mov    r8d,0x100
   1400318bf:	mov    DWORD PTR [rsp+0x38],eax
   1400318c3:	lea    rax,[rbp+0x20]
   1400318c7:	mov    DWORD PTR [rsp+0x30],0x3
   1400318cf:	mov    QWORD PTR [rsp+0x28],rax
   1400318d4:	mov    DWORD PTR [rsp+0x20],ecx
   1400318d8:	lea    rcx,[rbp-0x20]
   1400318dc:	call   0x1400295c8
   1400318e1:	test   eax,eax
   1400318e3:	je     0x140031837
   1400318e9:	cmp    eax,0x1
   1400318ec:	movzx  eax,BYTE PTR [rbp+0x20]
   1400318f0:	je     0x1400318fb
   1400318f2:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400318f6:	shl    eax,0x8
   1400318f9:	or     eax,ecx
   1400318fb:	cmp    BYTE PTR [rbp-0x8],0x0
   1400318ff:	je     0x14003190c
   140031901:	mov    rcx,QWORD PTR [rbp-0x10]
   140031905:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003190c:	lea    r11,[rsp+0x70]
   140031911:	mov    rdi,QWORD PTR [r11+0x18]
   140031915:	mov    r14,QWORD PTR [r11+0x28]
   140031919:	mov    rsp,r11
   14003191c:	pop    rbp
   14003191d:	ret    
   14003191e:	int3   
   14003191f:	int3   
   140031920:	cmp    DWORD PTR [rip+0x1f305],0x0        # 0x140050c2c
   140031927:	jne    0x140031937
   140031929:	lea    eax,[rcx-0x41]
   14003192c:	cmp    eax,0x19
   14003192f:	ja     0x140031934
   140031931:	add    ecx,0x20
   140031934:	mov    eax,ecx
   140031936:	ret    
   140031937:	xor    edx,edx
   140031939:	jmp    0x1400317cc
   14003193e:	int3   
   14003193f:	int3   
   140031940:	mov    QWORD PTR [rsp+0x18],rbx
   140031945:	mov    QWORD PTR [rsp+0x20],rbp
   14003194a:	push   rsi
   14003194b:	push   rdi
   14003194c:	push   r13
   14003194e:	push   r14
   140031950:	push   r15
   140031952:	sub    rsp,0x40
   140031956:	mov    rax,QWORD PTR [rip+0x1baeb]        # 0x14004d448
   14003195d:	xor    rax,rsp
   140031960:	mov    QWORD PTR [rsp+0x30],rax
   140031965:	mov    r15d,0xffff
   14003196b:	mov    rdi,rdx
   14003196e:	movzx  ebp,cx
   140031971:	mov    WORD PTR [rsp+0x24],cx
   140031976:	cmp    cx,r15w
   14003197a:	je     0x140031b15
   140031980:	test   BYTE PTR [rdx+0x18],0x1
   140031984:	mov    esi,0x2
   140031989:	jne    0x14003199f
   14003198b:	test   BYTE PTR [rdx+0x18],0x80
   14003198f:	je     0x140031b15
   140031995:	test   BYTE PTR [rdx+0x18],sil
   140031999:	jne    0x140031b15
   14003199f:	cmp    QWORD PTR [rdx+0x10],0x0
   1400319a4:	jne    0x1400319ae
   1400319a6:	mov    rcx,rdx
   1400319a9:	call   0x140028a00
   1400319ae:	test   BYTE PTR [rdi+0x18],0x40
   1400319b2:	jne    0x140031ade
   1400319b8:	mov    rcx,rdi
   1400319bb:	call   0x140023a40
   1400319c0:	lea    r14,[rip+0x1ba29]        # 0x14004d3f0
   1400319c7:	lea    r13,[rip+0x20912]        # 0x1400522e0
   1400319ce:	cmp    eax,0xffffffff
   1400319d1:	je     0x140031a05
   1400319d3:	mov    rcx,rdi
   1400319d6:	call   0x140023a40
   1400319db:	cmp    eax,0xfffffffe
   1400319de:	je     0x140031a05
   1400319e0:	mov    rcx,rdi
   1400319e3:	call   0x140023a40
   1400319e8:	mov    rcx,rdi
   1400319eb:	movsxd rbx,eax
   1400319ee:	sar    rbx,0x5
   1400319f2:	call   0x140023a40
   1400319f7:	and    eax,0x1f
   1400319fa:	imul   rax,rax,0x58
   1400319fe:	add    rax,QWORD PTR [r13+rbx*8+0x0]
   140031a03:	jmp    0x140031a08
   140031a05:	mov    rax,r14
   140031a08:	test   BYTE PTR [rax+0x8],0x80
   140031a0c:	je     0x140031ade
   140031a12:	mov    rcx,rdi
   140031a15:	call   0x140023a40
   140031a1a:	cmp    eax,0xffffffff
   140031a1d:	je     0x140031a53
   140031a1f:	mov    rcx,rdi
   140031a22:	call   0x140023a40
   140031a27:	cmp    eax,0xfffffffe
   140031a2a:	je     0x140031a53
   140031a2c:	mov    rcx,rdi
   140031a2f:	call   0x140023a40
   140031a34:	mov    rcx,rdi
   140031a37:	movsxd rbx,eax
   140031a3a:	sar    rbx,0x5
   140031a3e:	call   0x140023a40
   140031a43:	mov    r14d,eax
   140031a46:	and    r14d,0x1f
   140031a4a:	imul   r14,r14,0x58
   140031a4e:	add    r14,QWORD PTR [r13+rbx*8+0x0]
   140031a53:	test   BYTE PTR [r14+0x38],0x7f
   140031a58:	je     0x140031a6d
   140031a5a:	mov    al,BYTE PTR [rsp+0x25]
   140031a5e:	mov    BYTE PTR [rsp+0x28],bpl
   140031a63:	mov    DWORD PTR [rsp+0x20],esi
   140031a67:	mov    BYTE PTR [rsp+0x29],al
   140031a6b:	jmp    0x140031a92
   140031a6d:	lea    rdx,[rsp+0x28]
   140031a72:	lea    rcx,[rsp+0x20]
   140031a77:	movzx  r9d,bp
   140031a7b:	mov    r8d,0x5
   140031a81:	call   0x1400289ec
   140031a86:	test   eax,eax
   140031a88:	jne    0x140031b15
   140031a8e:	mov    esi,DWORD PTR [rsp+0x20]
   140031a92:	mov    rax,QWORD PTR [rdi+0x10]
   140031a96:	movsxd rdx,esi
   140031a99:	add    rdx,rax
   140031a9c:	cmp    QWORD PTR [rdi],rdx
   140031a9f:	jae    0x140031aaf
   140031aa1:	cmp    DWORD PTR [rdi+0x8],0x0
   140031aa5:	jne    0x140031b15
   140031aa7:	cmp    esi,DWORD PTR [rdi+0x24]
   140031aaa:	jg     0x140031b15
   140031aac:	mov    QWORD PTR [rdi],rdx
   140031aaf:	lea    eax,[rsi-0x1]
   140031ab2:	movsxd rdx,eax
   140031ab5:	test   eax,eax
   140031ab7:	js     0x140031ace
   140031ab9:	dec    QWORD PTR [rdi]
   140031abc:	mov    al,BYTE PTR [rsp+rdx*1+0x28]
   140031ac0:	dec    rdx
   140031ac3:	mov    rcx,QWORD PTR [rdi]
   140031ac6:	mov    BYTE PTR [rcx],al
   140031ac8:	jns    0x140031ab9
   140031aca:	mov    esi,DWORD PTR [rsp+0x20]
   140031ace:	add    DWORD PTR [rdi+0x8],esi
   140031ad1:	and    DWORD PTR [rdi+0x18],0xffffffef
   140031ad5:	or     DWORD PTR [rdi+0x18],0x1
   140031ad9:	movzx  eax,bp
   140031adc:	jmp    0x140031b19
   140031ade:	mov    rax,QWORD PTR [rdi+0x10]
   140031ae2:	lea    rcx,[rax+0x2]
   140031ae6:	cmp    QWORD PTR [rdi],rcx
   140031ae9:	jae    0x140031afd
   140031aeb:	cmp    DWORD PTR [rdi+0x8],0x0
   140031aef:	jne    0x140031b15
   140031af1:	movsxd rax,DWORD PTR [rdi+0x24]
   140031af5:	cmp    rax,rsi
   140031af8:	jb     0x140031b15
   140031afa:	mov    QWORD PTR [rdi],rcx
   140031afd:	add    QWORD PTR [rdi],0xfffffffffffffffe
   140031b01:	test   BYTE PTR [rdi+0x18],0x40
   140031b05:	mov    rax,QWORD PTR [rdi]
   140031b08:	je     0x140031b3f
   140031b0a:	cmp    WORD PTR [rax],bp
   140031b0d:	je     0x140031ace
   140031b0f:	add    rax,rsi
   140031b12:	mov    QWORD PTR [rdi],rax
   140031b15:	movzx  eax,r15w
   140031b19:	mov    rcx,QWORD PTR [rsp+0x30]
   140031b1e:	xor    rcx,rsp
   140031b21:	call   0x140020e50
   140031b26:	lea    r11,[rsp+0x40]
   140031b2b:	mov    rbx,QWORD PTR [r11+0x40]
   140031b2f:	mov    rbp,QWORD PTR [r11+0x48]
   140031b33:	mov    rsp,r11
   140031b36:	pop    r15
   140031b38:	pop    r14
   140031b3a:	pop    r13
   140031b3c:	pop    rdi
   140031b3d:	pop    rsi
   140031b3e:	ret    
   140031b3f:	mov    WORD PTR [rax],bp
   140031b42:	jmp    0x140031ace
   140031b44:	rex push rbx
   140031b46:	sub    rsp,0x40
   140031b4a:	cmp    DWORD PTR [rip+0x1f0db],0x0        # 0x140050c2c
   140031b51:	movsxd rbx,ecx
   140031b54:	jne    0x140031b66
   140031b56:	mov    rax,QWORD PTR [rip+0x1c0bb]        # 0x14004dc18
   140031b5d:	movzx  eax,WORD PTR [rax+rbx*2]
   140031b61:	and    eax,0x4
   140031b64:	jmp    0x140031bb8
   140031b66:	lea    rcx,[rsp+0x20]
   140031b6b:	xor    edx,edx
   140031b6d:	call   0x1400246b8
   140031b72:	mov    rax,QWORD PTR [rsp+0x20]
   140031b77:	cmp    DWORD PTR [rax+0xd4],0x1
   140031b7e:	jle    0x140031b95
   140031b80:	lea    r8,[rsp+0x20]
   140031b85:	mov    edx,0x4
   140031b8a:	mov    ecx,ebx
   140031b8c:	call   0x140029cd0
   140031b91:	mov    ecx,eax
   140031b93:	jmp    0x140031ba3
   140031b95:	mov    rax,QWORD PTR [rax+0x108]
   140031b9c:	movzx  ecx,WORD PTR [rax+rbx*2]
   140031ba0:	and    ecx,0x4
   140031ba3:	cmp    BYTE PTR [rsp+0x38],0x0
   140031ba8:	je     0x140031bb6
   140031baa:	mov    rax,QWORD PTR [rsp+0x30]
   140031baf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031bb6:	mov    eax,ecx
   140031bb8:	add    rsp,0x40
   140031bbc:	pop    rbx
   140031bbd:	ret    
   140031bbe:	int3   
   140031bbf:	int3   
   140031bc0:	rex push rbx
   140031bc2:	sub    rsp,0x40
   140031bc6:	cmp    DWORD PTR [rip+0x1f05f],0x0        # 0x140050c2c
   140031bcd:	movsxd rbx,ecx
   140031bd0:	jne    0x140031be4
   140031bd2:	mov    rax,QWORD PTR [rip+0x1c03f]        # 0x14004dc18
   140031bd9:	movzx  eax,WORD PTR [rax+rbx*2]
   140031bdd:	and    eax,0x80
   140031be2:	jmp    0x140031c39
   140031be4:	lea    rcx,[rsp+0x20]
   140031be9:	xor    edx,edx
   140031beb:	call   0x1400246b8
   140031bf0:	mov    rax,QWORD PTR [rsp+0x20]
   140031bf5:	cmp    DWORD PTR [rax+0xd4],0x1
   140031bfc:	jle    0x140031c13
   140031bfe:	lea    r8,[rsp+0x20]
   140031c03:	mov    edx,0x80
   140031c08:	mov    ecx,ebx
   140031c0a:	call   0x140029cd0
   140031c0f:	mov    ecx,eax
   140031c11:	jmp    0x140031c24
   140031c13:	mov    rax,QWORD PTR [rax+0x108]
   140031c1a:	movzx  ecx,WORD PTR [rax+rbx*2]
   140031c1e:	and    ecx,0x80
   140031c24:	cmp    BYTE PTR [rsp+0x38],0x0
   140031c29:	je     0x140031c37
   140031c2b:	mov    rax,QWORD PTR [rsp+0x30]
   140031c30:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031c37:	mov    eax,ecx
   140031c39:	add    rsp,0x40
   140031c3d:	pop    rbx
   140031c3e:	ret    
   140031c3f:	int3   
   140031c40:	mov    QWORD PTR [rsp+0x20],rbx
   140031c45:	push   rbp
   140031c46:	push   rsi
   140031c47:	push   rdi
   140031c48:	push   r12
   140031c4a:	push   r13
   140031c4c:	push   r14
   140031c4e:	push   r15
   140031c50:	mov    rbp,rsp
   140031c53:	sub    rsp,0x80
   140031c5a:	mov    rax,QWORD PTR [rip+0x1b7e7]        # 0x14004d448
   140031c61:	xor    rax,rsp
   140031c64:	mov    QWORD PTR [rbp-0x10],rax
   140031c68:	xor    r12d,r12d
   140031c6b:	mov    rsi,r8
   140031c6e:	mov    r14,rdx
   140031c71:	mov    r15,rcx
   140031c74:	mov    ebx,r12d
   140031c77:	mov    DWORD PTR [rbp-0x40],r12d
   140031c7b:	test   rcx,rcx
   140031c7e:	je     0x140031c8c
   140031c80:	test   r8,r8
   140031c83:	jne    0x140031c8c
   140031c85:	xor    eax,eax
   140031c87:	jmp    0x140031f47
   140031c8c:	test   rdx,rdx
   140031c8f:	jne    0x140031caa
   140031c91:	call   0x140025380
   140031c96:	mov    DWORD PTR [rax],0x16
   140031c9c:	call   0x140024554
   140031ca1:	or     rax,0xffffffffffffffff
   140031ca5:	jmp    0x140031f47
   140031caa:	lea    rcx,[rbp-0x38]
   140031cae:	mov    rdx,r9
   140031cb1:	call   0x1400246b8
   140031cb6:	test   r15,r15
   140031cb9:	je     0x140031ea0
   140031cbf:	mov    r13,QWORD PTR [rbp-0x38]
   140031cc3:	cmp    QWORD PTR [r13+0x138],r12
   140031cca:	jne    0x140031d13
   140031ccc:	test   rsi,rsi
   140031ccf:	je     0x140031f30
   140031cd5:	mov    ecx,0xff
   140031cda:	cmp    WORD PTR [r14],cx
   140031cde:	ja     0x140031d05
   140031ce0:	mov    al,BYTE PTR [r14]
   140031ce3:	mov    BYTE PTR [r15+rbx*1],al
   140031ce7:	movzx  eax,WORD PTR [r14]
   140031ceb:	add    r14,0x2
   140031cef:	test   ax,ax
   140031cf2:	je     0x140031f30
   140031cf8:	inc    rbx
   140031cfb:	cmp    rbx,rsi
   140031cfe:	jb     0x140031cda
   140031d00:	jmp    0x140031f30
   140031d05:	call   0x140025380
   140031d0a:	or     rbx,0xffffffffffffffff
   140031d0e:	jmp    0x140031f2a
   140031d13:	cmp    DWORD PTR [r13+0xd4],0x1
   140031d1b:	jne    0x140031d97
   140031d1d:	test   rsi,rsi
   140031d20:	je     0x140031d4e
   140031d22:	mov    rax,r14
   140031d25:	mov    rcx,rsi
   140031d28:	cmp    WORD PTR [rax],r12w
   140031d2c:	je     0x140031d37
   140031d2e:	add    rax,0x2
   140031d32:	dec    rcx
   140031d35:	jne    0x140031d28
   140031d37:	test   rcx,rcx
   140031d3a:	je     0x140031d4e
   140031d3c:	cmp    WORD PTR [rax],r12w
   140031d40:	jne    0x140031d4e
   140031d42:	mov    rsi,rax
   140031d45:	sub    rsi,r14
   140031d48:	sar    rsi,1
   140031d4b:	inc    rsi
   140031d4e:	mov    ecx,DWORD PTR [r13+0x4]
   140031d52:	lea    rax,[rbp-0x40]
   140031d56:	mov    r9d,esi
   140031d59:	mov    QWORD PTR [rsp+0x38],rax
   140031d5e:	mov    QWORD PTR [rsp+0x30],r12
   140031d63:	mov    r8,r14
   140031d66:	xor    edx,edx
   140031d68:	mov    DWORD PTR [rsp+0x28],esi
   140031d6c:	mov    QWORD PTR [rsp+0x20],r15
   140031d71:	call   QWORD PTR [rip+0x7521]        # 0x140039298
   140031d77:	movsxd rbx,eax
   140031d7a:	test   eax,eax
   140031d7c:	je     0x140031d05
   140031d7e:	cmp    DWORD PTR [rbp-0x40],r12d
   140031d82:	jne    0x140031d05
   140031d84:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   140031d89:	jne    0x140031f30
   140031d8f:	dec    rbx
   140031d92:	jmp    0x140031f30
   140031d97:	mov    ecx,DWORD PTR [r13+0x4]
   140031d9b:	lea    rax,[rbp-0x40]
   140031d9f:	or     rbx,0xffffffffffffffff
   140031da3:	mov    QWORD PTR [rsp+0x38],rax
   140031da8:	mov    QWORD PTR [rsp+0x30],r12
   140031dad:	mov    r9d,ebx
   140031db0:	mov    r8,r14
   140031db3:	xor    edx,edx
   140031db5:	mov    DWORD PTR [rsp+0x28],esi
   140031db9:	mov    QWORD PTR [rsp+0x20],r15
   140031dbe:	call   QWORD PTR [rip+0x74d4]        # 0x140039298
   140031dc4:	movsxd rdi,eax
   140031dc7:	test   eax,eax
   140031dc9:	je     0x140031dde
   140031dcb:	cmp    DWORD PTR [rbp-0x40],r12d
   140031dcf:	jne    0x140031f25
   140031dd5:	lea    rbx,[rdi-0x1]
   140031dd9:	jmp    0x140031f30
   140031dde:	cmp    DWORD PTR [rbp-0x40],r12d
   140031de2:	jne    0x140031f25
   140031de8:	call   QWORD PTR [rip+0x77f2]        # 0x1400395e0
   140031dee:	cmp    eax,0x7a
   140031df1:	jne    0x140031f25
   140031df7:	test   rsi,rsi
   140031dfa:	je     0x140031f33
   140031e00:	mov    ecx,DWORD PTR [r13+0x4]
   140031e04:	lea    rax,[rbp-0x40]
   140031e08:	mov    r9d,0x1
   140031e0e:	mov    QWORD PTR [rsp+0x38],rax
   140031e13:	mov    eax,DWORD PTR [r13+0xd4]
   140031e1a:	mov    QWORD PTR [rsp+0x30],r12
   140031e1f:	mov    DWORD PTR [rsp+0x28],eax
   140031e23:	lea    rax,[rbp-0x18]
   140031e27:	mov    r8,r14
   140031e2a:	xor    edx,edx
   140031e2c:	mov    QWORD PTR [rsp+0x20],rax
   140031e31:	call   QWORD PTR [rip+0x7461]        # 0x140039298
   140031e37:	test   eax,eax
   140031e39:	je     0x140031f25
   140031e3f:	cmp    DWORD PTR [rbp-0x40],r12d
   140031e43:	jne    0x140031f25
   140031e49:	test   eax,eax
   140031e4b:	js     0x140031f25
   140031e51:	movsxd rdx,eax
   140031e54:	cmp    rdx,0x5
   140031e58:	ja     0x140031f25
   140031e5e:	lea    rax,[rdx+rdi*1]
   140031e62:	cmp    rax,rsi
   140031e65:	ja     0x140031f33
   140031e6b:	mov    rcx,r12
   140031e6e:	test   rdx,rdx
   140031e71:	jle    0x140031e8e
   140031e73:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   140031e77:	mov    BYTE PTR [r15+rdi*1],al
   140031e7b:	test   al,al
   140031e7d:	je     0x140031f33
   140031e83:	inc    rcx
   140031e86:	inc    rdi
   140031e89:	cmp    rcx,rdx
   140031e8c:	jl     0x140031e73
   140031e8e:	add    r14,0x2
   140031e92:	cmp    rdi,rsi
   140031e95:	jae    0x140031f33
   140031e9b:	jmp    0x140031e00
   140031ea0:	mov    rax,QWORD PTR [rbp-0x38]
   140031ea4:	cmp    QWORD PTR [rax+0x138],r12
   140031eab:	jne    0x140031ee6
   140031ead:	movzx  eax,WORD PTR [r14]
   140031eb1:	mov    rdi,r12
   140031eb4:	test   ax,ax
   140031eb7:	je     0x140031f33
   140031eb9:	mov    ecx,0xff
   140031ebe:	cmp    ax,cx
   140031ec1:	ja     0x140031ed5
   140031ec3:	add    r14,0x2
   140031ec7:	inc    rdi
   140031eca:	movzx  eax,WORD PTR [r14]
   140031ece:	test   ax,ax
   140031ed1:	jne    0x140031ebe
   140031ed3:	jmp    0x140031f33
   140031ed5:	call   0x140025380
   140031eda:	or     rdi,0xffffffffffffffff
   140031ede:	mov    DWORD PTR [rax],0x2a
   140031ee4:	jmp    0x140031f33
   140031ee6:	lea    rcx,[rbp-0x40]
   140031eea:	or     rbx,0xffffffffffffffff
   140031eee:	mov    r8,r14
   140031ef1:	mov    QWORD PTR [rsp+0x38],rcx
   140031ef6:	mov    ecx,DWORD PTR [rax+0x4]
   140031ef9:	mov    QWORD PTR [rsp+0x30],r12
   140031efe:	mov    r9d,ebx
   140031f01:	xor    edx,edx
   140031f03:	mov    DWORD PTR [rsp+0x28],r12d
   140031f08:	mov    QWORD PTR [rsp+0x20],r12
   140031f0d:	call   QWORD PTR [rip+0x7385]        # 0x140039298
   140031f13:	movsxd rdi,eax
   140031f16:	test   eax,eax
   140031f18:	je     0x140031f25
   140031f1a:	cmp    DWORD PTR [rbp-0x40],r12d
   140031f1e:	jne    0x140031f25
   140031f20:	dec    rdi
   140031f23:	jmp    0x140031f33
   140031f25:	call   0x140025380
   140031f2a:	mov    DWORD PTR [rax],0x2a
   140031f30:	mov    rdi,rbx
   140031f33:	cmp    BYTE PTR [rbp-0x20],r12b
   140031f37:	je     0x140031f44
   140031f39:	mov    rcx,QWORD PTR [rbp-0x28]
   140031f3d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140031f44:	mov    rax,rdi
   140031f47:	mov    rcx,QWORD PTR [rbp-0x10]
   140031f4b:	xor    rcx,rsp
   140031f4e:	call   0x140020e50
   140031f53:	mov    rbx,QWORD PTR [rsp+0xd8]
   140031f5b:	add    rsp,0x80
   140031f62:	pop    r15
   140031f64:	pop    r14
   140031f66:	pop    r13
   140031f68:	pop    r12
   140031f6a:	pop    rdi
   140031f6b:	pop    rsi
   140031f6c:	pop    rbp
   140031f6d:	ret    
   140031f6e:	int3   
   140031f6f:	int3   
   140031f70:	mov    QWORD PTR [rsp+0x8],rbx
   140031f75:	mov    QWORD PTR [rsp+0x10],rsi
   140031f7a:	mov    QWORD PTR [rsp+0x18],rdi
   140031f7f:	push   r14
   140031f81:	sub    rsp,0x20
   140031f85:	xor    r14d,r14d
   140031f88:	mov    rax,r9
   140031f8b:	mov    rdi,r8
   140031f8e:	mov    rbx,rdx
   140031f91:	mov    rsi,rcx
   140031f94:	test   rdx,rdx
   140031f97:	je     0x140031fea
   140031f99:	test   r8,r8
   140031f9c:	je     0x140031fef
   140031f9e:	test   rdx,rdx
   140031fa1:	je     0x140031fa6
   140031fa3:	mov    BYTE PTR [rdx],r14b
   140031fa6:	test   rcx,rcx
   140031fa9:	je     0x140031fae
   140031fab:	and    QWORD PTR [rcx],r14
   140031fae:	mov    r8,QWORD PTR [rsp+0x50]
   140031fb3:	cmp    r8,rdi
   140031fb6:	cmova  r8,rdi
   140031fba:	cmp    r8,0x7fffffff
   140031fc1:	ja     0x140031fef
   140031fc3:	mov    r9,QWORD PTR [rsp+0x58]
   140031fc8:	mov    rdx,rax
   140031fcb:	mov    rcx,rbx
   140031fce:	call   0x140031c40
   140031fd3:	cmp    rax,0xffffffffffffffff
   140031fd7:	jne    0x140032004
   140031fd9:	test   rbx,rbx
   140031fdc:	je     0x140031fe1
   140031fde:	mov    BYTE PTR [rbx],r14b
   140031fe1:	call   0x140025380
   140031fe6:	mov    eax,DWORD PTR [rax]
   140031fe8:	jmp    0x140032046
   140031fea:	test   r8,r8
   140031fed:	je     0x140031f9e
   140031fef:	call   0x140025380
   140031ff4:	mov    ebx,0x16
   140031ff9:	mov    DWORD PTR [rax],ebx
   140031ffb:	call   0x140024554
   140032000:	mov    eax,ebx
   140032002:	jmp    0x140032046
   140032004:	inc    rax
   140032007:	test   rbx,rbx
   14003200a:	je     0x14003203b
   14003200c:	cmp    rax,rdi
   14003200f:	jbe    0x140032036
   140032011:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   140032017:	je     0x14003202d
   140032019:	mov    BYTE PTR [rbx],r14b
   14003201c:	cmp    rdi,rax
   14003201f:	ja     0x14003202d
   140032021:	call   0x140025380
   140032026:	mov    ebx,0x22
   14003202b:	jmp    0x140031ff9
   14003202d:	mov    rax,rdi
   140032030:	mov    r14d,0x50
   140032036:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14003203b:	test   rsi,rsi
   14003203e:	je     0x140032043
   140032040:	mov    QWORD PTR [rsi],rax
   140032043:	mov    eax,r14d
   140032046:	mov    rbx,QWORD PTR [rsp+0x30]
   14003204b:	mov    rsi,QWORD PTR [rsp+0x38]
   140032050:	mov    rdi,QWORD PTR [rsp+0x40]
   140032055:	add    rsp,0x20
   140032059:	pop    r14
   14003205b:	ret    
   14003205c:	sub    rsp,0x38
   140032060:	mov    rax,QWORD PTR [rsp+0x60]
   140032065:	and    QWORD PTR [rsp+0x28],0x0
   14003206b:	mov    QWORD PTR [rsp+0x20],rax
   140032070:	call   0x140031f70
   140032075:	add    rsp,0x38
   140032079:	ret    
   14003207a:	int3   
   14003207b:	int3   
   14003207c:	mov    rax,rsp
   14003207f:	mov    QWORD PTR [rax+0x8],rbx
   140032083:	mov    QWORD PTR [rax+0x10],rbp
   140032087:	mov    QWORD PTR [rax+0x18],rsi
   14003208b:	mov    QWORD PTR [rax+0x20],rdi
   14003208f:	push   r14
   140032091:	sub    rsp,0x20
   140032095:	mov    rbx,QWORD PTR [r9+0x38]
   140032099:	mov    rsi,rdx
   14003209c:	mov    r14,r8
   14003209f:	mov    rbp,rcx
   1400320a2:	lea    r8,[rbx+0x4]
   1400320a6:	mov    rdx,r9
   1400320a9:	mov    rcx,rsi
   1400320ac:	mov    rdi,r9
   1400320af:	call   0x140027df4
   1400320b4:	mov    r11d,DWORD PTR [rbx+0x4]
   1400320b8:	mov    r10d,DWORD PTR [rbp+0x4]
   1400320bc:	mov    eax,r11d
   1400320bf:	and    r11d,0x2
   1400320c3:	mov    r8d,0x1
   1400320c9:	and    eax,r8d
   1400320cc:	and    r10b,0x66
   1400320d0:	cmove  r11d,eax
   1400320d4:	test   r11d,r11d
   1400320d7:	je     0x1400320ed
   1400320d9:	mov    r9,rdi
   1400320dc:	mov    r8,r14
   1400320df:	mov    rdx,rsi
   1400320e2:	mov    rcx,rbp
   1400320e5:	call   0x14002b018
   1400320ea:	mov    r8d,eax
   1400320ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400320f2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400320f7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400320fc:	mov    rdi,QWORD PTR [rsp+0x48]
   140032101:	mov    eax,r8d
   140032104:	add    rsp,0x20
   140032108:	pop    r14
   14003210a:	ret    
   14003210b:	int3   
   14003210c:	jmp    0x140032114
   140032111:	int3   
   140032112:	int3   
   140032113:	int3   
   140032114:	lea    rax,[rip+0xb35]        # 0x140032c50
   14003211b:	lea    rcx,[rip+0x7a]        # 0x14003219c
   140032122:	mov    QWORD PTR [rip+0x1c08f],rax        # 0x14004e1b8
   140032129:	lea    rax,[rip+0xbc0]        # 0x140032cf0
   140032130:	mov    QWORD PTR [rip+0x1c079],rcx        # 0x14004e1b0
   140032137:	mov    QWORD PTR [rip+0x1c082],rax        # 0x14004e1c0
   14003213e:	lea    rax,[rip+0xbf3]        # 0x140032d38
   140032145:	mov    QWORD PTR [rip+0x1c08c],rcx        # 0x14004e1d8
   14003214c:	mov    QWORD PTR [rip+0x1c075],rax        # 0x14004e1c8
   140032153:	lea    rax,[rip+0xc66]        # 0x140032dc0
   14003215a:	mov    QWORD PTR [rip+0x1c06f],rax        # 0x14004e1d0
   140032161:	lea    rax,[rip+0x58]        # 0x1400321c0
   140032168:	mov    QWORD PTR [rip+0x1c071],rax        # 0x14004e1e0
   14003216f:	lea    rax,[rip+0xb82]        # 0x140032cf8
   140032176:	mov    QWORD PTR [rip+0x1c06b],rax        # 0x14004e1e8
   14003217d:	lea    rax,[rip+0xad4]        # 0x140032c58
   140032184:	mov    QWORD PTR [rip+0x1c065],rax        # 0x14004e1f0
   14003218b:	lea    rax,[rip+0xbae]        # 0x140032d40
   140032192:	mov    QWORD PTR [rip+0x1c05f],rax        # 0x14004e1f8
   140032199:	ret    
   14003219a:	int3   
   14003219b:	int3   
   14003219c:	sub    rsp,0x48
   1400321a0:	mov    eax,DWORD PTR [rsp+0x78]
   1400321a4:	and    QWORD PTR [rsp+0x30],0x0
   1400321aa:	mov    DWORD PTR [rsp+0x28],eax
   1400321ae:	mov    eax,DWORD PTR [rsp+0x70]
   1400321b2:	mov    DWORD PTR [rsp+0x20],eax
   1400321b6:	call   0x1400321c0
   1400321bb:	add    rsp,0x48
   1400321bf:	ret    
   1400321c0:	sub    rsp,0x38
   1400321c4:	lea    eax,[r9-0x45]
   1400321c8:	mov    r10d,0xffffffdf
   1400321ce:	test   r10d,eax
   1400321d1:	je     0x14003221d
   1400321d3:	cmp    r9d,0x66
   1400321d7:	jne    0x1400321ef
   1400321d9:	mov    rax,QWORD PTR [rsp+0x70]
   1400321de:	mov    r9d,DWORD PTR [rsp+0x60]
   1400321e3:	mov    QWORD PTR [rsp+0x20],rax
   1400321e8:	call   0x140032a48
   1400321ed:	jmp    0x140032239
   1400321ef:	lea    eax,[r9-0x41]
   1400321f3:	mov    r9d,DWORD PTR [rsp+0x60]
   1400321f8:	test   r10d,eax
   1400321fb:	mov    rax,QWORD PTR [rsp+0x70]
   140032200:	mov    QWORD PTR [rsp+0x28],rax
   140032205:	mov    eax,DWORD PTR [rsp+0x68]
   140032209:	mov    DWORD PTR [rsp+0x20],eax
   14003220d:	je     0x140032216
   14003220f:	call   0x140032b1c
   140032214:	jmp    0x140032239
   140032216:	call   0x140032240
   14003221b:	jmp    0x140032239
   14003221d:	mov    rax,QWORD PTR [rsp+0x70]
   140032222:	mov    r9d,DWORD PTR [rsp+0x60]
   140032227:	mov    QWORD PTR [rsp+0x28],rax
   14003222c:	mov    eax,DWORD PTR [rsp+0x68]
   140032230:	mov    DWORD PTR [rsp+0x20],eax
   140032234:	call   0x1400327ec
   140032239:	add    rsp,0x38
   14003223d:	ret    
   14003223e:	int3   
   14003223f:	int3   
   140032240:	mov    rax,rsp
   140032243:	mov    QWORD PTR [rax+0x8],rbx
   140032247:	mov    QWORD PTR [rax+0x10],rbp
   14003224b:	mov    QWORD PTR [rax+0x18],rsi
   14003224f:	push   rdi
   140032250:	push   r12
   140032252:	push   r13
   140032254:	push   r14
   140032256:	push   r15
   140032258:	sub    rsp,0x50
   14003225c:	mov    rdi,rdx
   14003225f:	mov    rdx,QWORD PTR [rsp+0xa8]
   140032267:	mov    r14,rcx
   14003226a:	lea    rcx,[rax-0x48]
   14003226e:	mov    r15d,0x30
   140032274:	mov    ebx,r9d
   140032277:	mov    rsi,r8
   14003227a:	mov    r12d,0x3ff
   140032280:	movzx  ebp,r15w
   140032284:	call   0x1400246b8
   140032289:	xor    r9d,r9d
   14003228c:	test   ebx,ebx
   14003228e:	cmovs  ebx,r9d
   140032292:	test   rdi,rdi
   140032295:	jne    0x1400322a3
   140032297:	call   0x140025380
   14003229c:	mov    ebx,0x16
   1400322a1:	jmp    0x1400322c0
   1400322a3:	test   rsi,rsi
   1400322a6:	je     0x140032297
   1400322a8:	lea    eax,[rbx+0xb]
   1400322ab:	mov    BYTE PTR [rdi],r9b
   1400322ae:	movsxd rcx,eax
   1400322b1:	cmp    rsi,rcx
   1400322b4:	ja     0x1400322cf
   1400322b6:	call   0x140025380
   1400322bb:	mov    ebx,0x22
   1400322c0:	mov    DWORD PTR [rax],ebx
   1400322c2:	call   0x140024554
   1400322c7:	xor    r9d,r9d
   1400322ca:	jmp    0x1400325bd
   1400322cf:	mov    rax,QWORD PTR [r14]
   1400322d2:	mov    ecx,0x7ff
   1400322d7:	shr    rax,0x34
   1400322db:	and    rax,rcx
   1400322de:	cmp    rax,rcx
   1400322e1:	jne    0x140032379
   1400322e7:	mov    QWORD PTR [rsp+0x28],r9
   1400322ec:	mov    DWORD PTR [rsp+0x20],r9d
   1400322f1:	lea    r8,[rsi-0x2]
   1400322f5:	cmp    rsi,0xffffffffffffffff
   1400322f9:	lea    rdx,[rdi+0x2]
   1400322fd:	mov    r9d,ebx
   140032300:	cmove  r8,rsi
   140032304:	mov    rcx,r14
   140032307:	call   0x1400327ec
   14003230c:	xor    r9d,r9d
   14003230f:	mov    ebx,eax
   140032311:	test   eax,eax
   140032313:	je     0x14003231d
   140032315:	mov    BYTE PTR [rdi],r9b
   140032318:	jmp    0x1400325bd
   14003231d:	cmp    BYTE PTR [rdi+0x2],0x2d
   140032321:	mov    esi,0x1
   140032326:	jne    0x14003232e
   140032328:	mov    BYTE PTR [rdi],0x2d
   14003232b:	add    rdi,rsi
   14003232e:	mov    ebx,DWORD PTR [rsp+0xa0]
   140032335:	mov    BYTE PTR [rdi],r15b
   140032338:	mov    edx,0x65
   14003233d:	mov    eax,ebx
   14003233f:	neg    eax
   140032341:	sbb    cl,cl
   140032343:	and    cl,0xe0
   140032346:	add    cl,0x78
   140032349:	mov    BYTE PTR [rdi+rsi*1],cl
   14003234c:	lea    rcx,[rsi+0x1]
   140032350:	add    rcx,rdi
   140032353:	call   0x140032dd4
   140032358:	xor    r9d,r9d
   14003235b:	test   rax,rax
   14003235e:	je     0x1400325ba
   140032364:	neg    ebx
   140032366:	sbb    cl,cl
   140032368:	and    cl,0xe0
   14003236b:	add    cl,0x70
   14003236e:	mov    BYTE PTR [rax],cl
   140032370:	mov    BYTE PTR [rax+0x3],r9b
   140032374:	jmp    0x1400325ba
   140032379:	movabs rax,0x8000000000000000
   140032383:	mov    esi,0x1
   140032388:	test   QWORD PTR [r14],rax
   14003238b:	je     0x140032393
   14003238d:	mov    BYTE PTR [rdi],0x2d
   140032390:	add    rdi,rsi
   140032393:	mov    r13d,DWORD PTR [rsp+0xa0]
   14003239b:	mov    r10d,r15d
   14003239e:	movabs r11,0xfffffffffffff
   1400323a8:	mov    BYTE PTR [rdi],r10b
   1400323ab:	add    rdi,rsi
   1400323ae:	mov    eax,r13d
   1400323b1:	neg    eax
   1400323b3:	mov    eax,r13d
   1400323b6:	sbb    cl,cl
   1400323b8:	and    cl,0xe0
   1400323bb:	add    cl,0x78
   1400323be:	mov    BYTE PTR [rdi],cl
   1400323c0:	add    rdi,rsi
   1400323c3:	neg    eax
   1400323c5:	sbb    edx,edx
   1400323c7:	movabs rax,0x7ff0000000000000
   1400323d1:	and    edx,0xffffffe0
   1400323d4:	sub    edx,0xffffffd9
   1400323d7:	test   QWORD PTR [r14],rax
   1400323da:	jne    0x1400323f7
   1400323dc:	mov    BYTE PTR [rdi],r10b
   1400323df:	mov    rax,QWORD PTR [r14]
   1400323e2:	add    rdi,rsi
   1400323e5:	and    rax,r11
   1400323e8:	neg    rax
   1400323eb:	sbb    r12,r12
   1400323ee:	and    r12d,0x3fe
   1400323f5:	jmp    0x1400323fd
   1400323f7:	mov    BYTE PTR [rdi],0x31
   1400323fa:	add    rdi,rsi
   1400323fd:	mov    r15,rdi
   140032400:	add    rdi,rsi
   140032403:	test   ebx,ebx
   140032405:	jne    0x14003240c
   140032407:	mov    BYTE PTR [r15],r9b
   14003240a:	jmp    0x140032420
   14003240c:	mov    rax,QWORD PTR [rsp+0x30]
   140032411:	mov    rcx,QWORD PTR [rax+0xf0]
   140032418:	mov    rax,QWORD PTR [rcx]
   14003241b:	mov    cl,BYTE PTR [rax]
   14003241d:	mov    BYTE PTR [r15],cl
   140032420:	test   QWORD PTR [r14],r11
   140032423:	jbe    0x1400324b1
   140032429:	movabs r8,0xf000000000000
   140032433:	test   ebx,ebx
   140032435:	jle    0x140032464
   140032437:	mov    rax,QWORD PTR [r14]
   14003243a:	mov    cl,bpl
   14003243d:	and    rax,r8
   140032440:	and    rax,r11
   140032443:	shr    rax,cl
   140032446:	add    ax,r10w
   14003244a:	cmp    ax,0x39
   14003244e:	jbe    0x140032453
   140032450:	add    ax,dx
   140032453:	mov    BYTE PTR [rdi],al
   140032455:	shr    r8,0x4
   140032459:	sub    ebx,esi
   14003245b:	add    rdi,rsi
   14003245e:	add    bp,0xfffc
   140032462:	jns    0x140032433
   140032464:	test   bp,bp
   140032467:	js     0x1400324b1
   140032469:	mov    rax,QWORD PTR [r14]
   14003246c:	mov    cl,bpl
   14003246f:	and    rax,r8
   140032472:	and    rax,r11
   140032475:	shr    rax,cl
   140032478:	cmp    ax,0x8
   14003247c:	jbe    0x1400324b1
   14003247e:	lea    rcx,[rdi-0x1]
   140032482:	mov    al,BYTE PTR [rcx]
   140032484:	sub    al,0x46
   140032486:	test   al,0xdf
   140032488:	jne    0x140032492
   14003248a:	mov    BYTE PTR [rcx],r10b
   14003248d:	sub    rcx,rsi
   140032490:	jmp    0x140032482
   140032492:	cmp    rcx,r15
   140032495:	je     0x1400324ab
   140032497:	mov    al,BYTE PTR [rcx]
   140032499:	cmp    al,0x39
   14003249b:	jne    0x1400324a4
   14003249d:	add    dl,0x3a
   1400324a0:	mov    BYTE PTR [rcx],dl
   1400324a2:	jmp    0x1400324b1
   1400324a4:	add    al,sil
   1400324a7:	mov    BYTE PTR [rcx],al
   1400324a9:	jmp    0x1400324b1
   1400324ab:	sub    rcx,rsi
   1400324ae:	add    BYTE PTR [rcx],sil
   1400324b1:	test   ebx,ebx
   1400324b3:	jle    0x1400324cd
   1400324b5:	mov    r8,rbx
   1400324b8:	mov    dl,r10b
   1400324bb:	mov    rcx,rdi
   1400324be:	call   0x1400260e0
   1400324c3:	add    rdi,rbx
   1400324c6:	xor    r9d,r9d
   1400324c9:	lea    r10d,[r9+0x30]
   1400324cd:	cmp    BYTE PTR [r15],r9b
   1400324d0:	cmove  rdi,r15
   1400324d4:	neg    r13d
   1400324d7:	sbb    al,al
   1400324d9:	and    al,0xe0
   1400324db:	add    al,0x70
   1400324dd:	mov    BYTE PTR [rdi],al
   1400324df:	mov    rcx,QWORD PTR [r14]
   1400324e2:	add    rdi,rsi
   1400324e5:	shr    rcx,0x34
   1400324e9:	and    ecx,0x7ff
   1400324ef:	sub    rcx,r12
   1400324f2:	js     0x1400324fc
   1400324f4:	mov    BYTE PTR [rdi],0x2b
   1400324f7:	add    rdi,rsi
   1400324fa:	jmp    0x140032505
   1400324fc:	mov    BYTE PTR [rdi],0x2d
   1400324ff:	add    rdi,rsi
   140032502:	neg    rcx
   140032505:	mov    r8,rdi
   140032508:	mov    BYTE PTR [rdi],r10b
   14003250b:	cmp    rcx,0x3e8
   140032512:	jl     0x140032547
   140032514:	movabs rax,0x20c49ba5e353f7cf
   14003251e:	imul   rcx
   140032521:	sar    rdx,0x7
   140032525:	mov    rax,rdx
   140032528:	shr    rax,0x3f
   14003252c:	add    rdx,rax
   14003252f:	lea    eax,[r10+rdx*1]
   140032533:	imul   rdx,rdx,0xfffffffffffffc18
   14003253a:	mov    BYTE PTR [rdi],al
   14003253c:	add    rdi,rsi
   14003253f:	add    rcx,rdx
   140032542:	cmp    rdi,r8
   140032545:	jne    0x14003254d
   140032547:	cmp    rcx,0x64
   14003254b:	jl     0x14003257b
   14003254d:	movabs rax,0xa3d70a3d70a3d70b
   140032557:	imul   rcx
   14003255a:	add    rdx,rcx
   14003255d:	sar    rdx,0x6
   140032561:	mov    rax,rdx
   140032564:	shr    rax,0x3f
   140032568:	add    rdx,rax
   14003256b:	lea    eax,[r10+rdx*1]
   14003256f:	imul   rdx,rdx,0xffffffffffffff9c
   140032573:	mov    BYTE PTR [rdi],al
   140032575:	add    rdi,rsi
   140032578:	add    rcx,rdx
   14003257b:	cmp    rdi,r8
   14003257e:	jne    0x140032586
   140032580:	cmp    rcx,0xa
   140032584:	jl     0x1400325b1
   140032586:	movabs rax,0x6666666666666667
   140032590:	imul   rcx
   140032593:	sar    rdx,0x2
   140032597:	mov    rax,rdx
   14003259a:	shr    rax,0x3f
   14003259e:	add    rdx,rax
   1400325a1:	lea    eax,[r10+rdx*1]
   1400325a5:	imul   rdx,rdx,0xfffffffffffffff6
   1400325a9:	mov    BYTE PTR [rdi],al
   1400325ab:	add    rdi,rsi
   1400325ae:	add    rcx,rdx
   1400325b1:	add    cl,r10b
   1400325b4:	mov    BYTE PTR [rdi],cl
   1400325b6:	mov    BYTE PTR [rdi+0x1],r9b
   1400325ba:	mov    ebx,r9d
   1400325bd:	cmp    BYTE PTR [rsp+0x48],r9b
   1400325c2:	je     0x1400325d0
   1400325c4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400325c9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400325d0:	lea    r11,[rsp+0x50]
   1400325d5:	mov    eax,ebx
   1400325d7:	mov    rbx,QWORD PTR [r11+0x30]
   1400325db:	mov    rbp,QWORD PTR [r11+0x38]
   1400325df:	mov    rsi,QWORD PTR [r11+0x40]
   1400325e3:	mov    rsp,r11
   1400325e6:	pop    r15
   1400325e8:	pop    r14
   1400325ea:	pop    r13
   1400325ec:	pop    r12
   1400325ee:	pop    rdi
   1400325ef:	ret    
   1400325f0:	mov    rax,rsp
   1400325f3:	mov    QWORD PTR [rax+0x8],rbx
   1400325f7:	mov    QWORD PTR [rax+0x10],rbp
   1400325fb:	mov    QWORD PTR [rax+0x18],rsi
   1400325ff:	mov    QWORD PTR [rax+0x20],rdi
   140032603:	push   r13
   140032605:	push   r14
   140032607:	push   r15
   140032609:	sub    rsp,0x50
   14003260d:	mov    r14,rdx
   140032610:	mov    rdx,QWORD PTR [rsp+0xa0]
   140032618:	mov    rdi,rcx
   14003261b:	lea    rcx,[rax-0x38]
   14003261f:	mov    r13d,r9d
   140032622:	movsxd rsi,r8d
   140032625:	call   0x1400246b8
   14003262a:	test   rdi,rdi
   14003262d:	je     0x140032634
   14003262f:	test   r14,r14
   140032632:	jne    0x140032640
   140032634:	call   0x140025380
   140032639:	mov    ebx,0x16
   14003263e:	jmp    0x14003265b
   140032640:	xor    eax,eax
   140032642:	test   esi,esi
   140032644:	cmovg  eax,esi
   140032647:	add    eax,0x9
   14003264a:	cdqe   
   14003264c:	cmp    r14,rax
   14003264f:	ja     0x140032667
   140032651:	call   0x140025380
   140032656:	mov    ebx,0x22
   14003265b:	mov    DWORD PTR [rax],ebx
   14003265d:	call   0x140024554
   140032662:	jmp    0x14003279f
   140032667:	cmp    BYTE PTR [rsp+0x98],0x0
   14003266f:	mov    rbp,QWORD PTR [rsp+0x90]
   140032677:	je     0x1400326ad
   140032679:	xor    ebx,ebx
   14003267b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003267f:	sete   bl
   140032682:	xor    r15d,r15d
   140032685:	add    rbx,rdi
   140032688:	test   esi,esi
   14003268a:	setg   r15b
   14003268e:	test   r15d,r15d
   140032691:	je     0x1400326ad
   140032693:	mov    rcx,rbx
   140032696:	call   0x1400278e0
   14003269b:	movsxd rcx,r15d
   14003269e:	mov    rdx,rbx
   1400326a1:	lea    r8,[rax+0x1]
   1400326a5:	add    rcx,rbx
   1400326a8:	call   0x140020e80
   1400326ad:	cmp    DWORD PTR [rbp+0x0],0x2d
   1400326b1:	mov    rdx,rdi
   1400326b4:	jne    0x1400326bd
   1400326b6:	mov    BYTE PTR [rdi],0x2d
   1400326b9:	lea    rdx,[rdi+0x1]
   1400326bd:	test   esi,esi
   1400326bf:	jle    0x1400326dc
   1400326c1:	mov    al,BYTE PTR [rdx+0x1]
   1400326c4:	mov    BYTE PTR [rdx],al
   1400326c6:	mov    rax,QWORD PTR [rsp+0x30]
   1400326cb:	inc    rdx
   1400326ce:	mov    rcx,QWORD PTR [rax+0xf0]
   1400326d5:	mov    rax,QWORD PTR [rcx]
   1400326d8:	mov    cl,BYTE PTR [rax]
   1400326da:	mov    BYTE PTR [rdx],cl
   1400326dc:	xor    ecx,ecx
   1400326de:	lea    rbx,[rdx+rsi*1]
   1400326e2:	lea    r8,[rip+0xf1a7]        # 0x140041890
   1400326e9:	cmp    BYTE PTR [rsp+0x98],cl
   1400326f0:	sete   cl
   1400326f3:	add    rbx,rcx
   1400326f6:	sub    rdi,rbx
   1400326f9:	cmp    r14,0xffffffffffffffff
   1400326fd:	mov    rcx,rbx
   140032700:	lea    rdx,[r14+rdi*1]
   140032704:	cmove  rdx,r14
   140032708:	call   0x140028d20
   14003270d:	test   eax,eax
   14003270f:	jne    0x1400327d3
   140032715:	lea    rcx,[rbx+0x2]
   140032719:	test   r13d,r13d
   14003271c:	je     0x140032721
   14003271e:	mov    BYTE PTR [rbx],0x45
   140032721:	mov    rax,QWORD PTR [rbp+0x10]
   140032725:	cmp    BYTE PTR [rax],0x30
   140032728:	je     0x140032780
   14003272a:	mov    r8d,DWORD PTR [rbp+0x4]
   14003272e:	dec    r8d
   140032731:	jns    0x14003273a
   140032733:	neg    r8d
   140032736:	mov    BYTE PTR [rbx+0x1],0x2d
   14003273a:	cmp    r8d,0x64
   14003273e:	jl     0x14003275b
   140032740:	mov    eax,0x51eb851f
   140032745:	imul   r8d
   140032748:	sar    edx,0x5
   14003274b:	mov    eax,edx
   14003274d:	shr    eax,0x1f
   140032750:	add    edx,eax
   140032752:	add    BYTE PTR [rbx+0x2],dl
   140032755:	imul   edx,edx,0xffffff9c
   140032758:	add    r8d,edx
   14003275b:	cmp    r8d,0xa
   14003275f:	jl     0x14003277c
   140032761:	mov    eax,0x66666667
   140032766:	imul   r8d
   140032769:	sar    edx,0x2
   14003276c:	mov    eax,edx
   14003276e:	shr    eax,0x1f
   140032771:	add    edx,eax
   140032773:	add    BYTE PTR [rbx+0x3],dl
   140032776:	imul   edx,edx,0xfffffff6
   140032779:	add    r8d,edx
   14003277c:	add    BYTE PTR [rbx+0x4],r8b
   140032780:	test   BYTE PTR [rip+0x1fb3d],0x1        # 0x1400522c4
   140032787:	je     0x14003279d
   140032789:	cmp    BYTE PTR [rcx],0x30
   14003278c:	jne    0x14003279d
   14003278e:	lea    rdx,[rcx+0x1]
   140032792:	mov    r8d,0x3
   140032798:	call   0x140020e80
   14003279d:	xor    ebx,ebx
   14003279f:	cmp    BYTE PTR [rsp+0x48],0x0
   1400327a4:	je     0x1400327b2
   1400327a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400327ab:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400327b2:	lea    r11,[rsp+0x50]
   1400327b7:	mov    eax,ebx
   1400327b9:	mov    rbx,QWORD PTR [r11+0x20]
   1400327bd:	mov    rbp,QWORD PTR [r11+0x28]
   1400327c1:	mov    rsi,QWORD PTR [r11+0x30]
   1400327c5:	mov    rdi,QWORD PTR [r11+0x38]
   1400327c9:	mov    rsp,r11
   1400327cc:	pop    r15
   1400327ce:	pop    r14
   1400327d0:	pop    r13
   1400327d2:	ret    
   1400327d3:	and    QWORD PTR [rsp+0x20],0x0
   1400327d9:	xor    r9d,r9d
   1400327dc:	xor    r8d,r8d
   1400327df:	xor    edx,edx
   1400327e1:	xor    ecx,ecx
   1400327e3:	call   0x140024574
   1400327e8:	int3   
   1400327e9:	int3   
   1400327ea:	int3   
   1400327eb:	int3   
   1400327ec:	rex push rbx
   1400327ee:	push   rbp
   1400327ef:	push   rsi
   1400327f0:	push   rdi
   1400327f1:	sub    rsp,0x88
   1400327f8:	mov    rax,QWORD PTR [rip+0x1ac49]        # 0x14004d448
   1400327ff:	xor    rax,rsp
   140032802:	mov    QWORD PTR [rsp+0x70],rax
   140032807:	mov    rcx,QWORD PTR [rcx]
   14003280a:	mov    rbx,r8
   14003280d:	mov    rdi,rdx
   140032810:	mov    esi,r9d
   140032813:	mov    ebp,0x16
   140032818:	lea    r8,[rsp+0x58]
   14003281d:	lea    rdx,[rsp+0x40]
   140032822:	mov    r9d,ebp
   140032825:	call   0x140033244
   14003282a:	test   rdi,rdi
   14003282d:	jne    0x140032842
   14003282f:	call   0x140025380
   140032834:	mov    DWORD PTR [rax],ebp
   140032836:	call   0x140024554
   14003283b:	mov    eax,ebp
   14003283d:	jmp    0x1400328ca
   140032842:	test   rbx,rbx
   140032845:	je     0x14003282f
   140032847:	or     rdx,0xffffffffffffffff
   14003284b:	cmp    rbx,rdx
   14003284e:	je     0x14003286a
   140032850:	xor    eax,eax
   140032852:	cmp    DWORD PTR [rsp+0x40],0x2d
   140032857:	mov    rdx,rbx
   14003285a:	sete   al
   14003285d:	sub    rdx,rax
   140032860:	xor    eax,eax
   140032862:	test   esi,esi
   140032864:	setg   al
   140032867:	sub    rdx,rax
   14003286a:	xor    eax,eax
   14003286c:	cmp    DWORD PTR [rsp+0x40],0x2d
   140032871:	lea    r8d,[rsi+0x1]
   140032875:	sete   al
   140032878:	xor    ecx,ecx
   14003287a:	test   esi,esi
   14003287c:	setg   cl
   14003287f:	add    rax,rdi
   140032882:	lea    r9,[rsp+0x40]
   140032887:	add    rcx,rax
   14003288a:	call   0x140032f18
   14003288f:	test   eax,eax
   140032891:	je     0x140032898
   140032893:	mov    BYTE PTR [rdi],0x0
   140032896:	jmp    0x1400328ca
   140032898:	mov    rax,QWORD PTR [rsp+0xd8]
   1400328a0:	mov    r9d,DWORD PTR [rsp+0xd0]
   1400328a8:	mov    r8d,esi
   1400328ab:	mov    QWORD PTR [rsp+0x30],rax
   1400328b0:	lea    rax,[rsp+0x40]
   1400328b5:	mov    rdx,rbx
   1400328b8:	mov    rcx,rdi
   1400328bb:	mov    BYTE PTR [rsp+0x28],0x0
   1400328c0:	mov    QWORD PTR [rsp+0x20],rax
   1400328c5:	call   0x1400325f0
   1400328ca:	mov    rcx,QWORD PTR [rsp+0x70]
   1400328cf:	xor    rcx,rsp
   1400328d2:	call   0x140020e50
   1400328d7:	add    rsp,0x88
   1400328de:	pop    rdi
   1400328df:	pop    rsi
   1400328e0:	pop    rbp
   1400328e1:	pop    rbx
   1400328e2:	ret    
   1400328e3:	int3   
   1400328e4:	mov    rax,rsp
   1400328e7:	mov    QWORD PTR [rax+0x8],rbx
   1400328eb:	mov    QWORD PTR [rax+0x10],rbp
   1400328ef:	mov    QWORD PTR [rax+0x18],rsi
   1400328f3:	mov    QWORD PTR [rax+0x20],rdi
   1400328f7:	push   r14
   1400328f9:	sub    rsp,0x40
   1400328fd:	mov    ebx,DWORD PTR [r9+0x4]
   140032901:	mov    rsi,rdx
   140032904:	mov    rdx,QWORD PTR [rsp+0x78]
   140032909:	mov    rdi,rcx
   14003290c:	lea    rcx,[rax-0x28]
   140032910:	mov    rbp,r9
   140032913:	dec    ebx
   140032915:	mov    r14d,r8d
   140032918:	call   0x1400246b8
   14003291d:	test   rdi,rdi
   140032920:	je     0x140032927
   140032922:	test   rsi,rsi
   140032925:	jne    0x14003293d
   140032927:	call   0x140025380
   14003292c:	mov    ebx,0x16
   140032931:	mov    DWORD PTR [rax],ebx
   140032933:	call   0x140024554
   140032938:	jmp    0x140032a15
   14003293d:	cmp    BYTE PTR [rsp+0x70],0x0
   140032942:	je     0x14003295e
   140032944:	cmp    ebx,r14d
   140032947:	jne    0x14003295e
   140032949:	xor    eax,eax
   14003294b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003294f:	movsxd rcx,ebx
   140032952:	sete   al
   140032955:	add    rax,rdi
   140032958:	mov    WORD PTR [rcx+rax*1],0x30
   14003295e:	cmp    DWORD PTR [rbp+0x0],0x2d
   140032962:	jne    0x14003296a
   140032964:	mov    BYTE PTR [rdi],0x2d
   140032967:	inc    rdi
   14003296a:	cmp    DWORD PTR [rbp+0x4],0x0
   14003296e:	jg     0x140032990
   140032970:	mov    rcx,rdi
   140032973:	call   0x1400278e0
   140032978:	lea    rcx,[rdi+0x1]
   14003297c:	mov    rdx,rdi
   14003297f:	lea    r8,[rax+0x1]
   140032983:	call   0x140020e80
   140032988:	mov    BYTE PTR [rdi],0x30
   14003298b:	inc    rdi
   14003298e:	jmp    0x140032997
   140032990:	movsxd rax,DWORD PTR [rbp+0x4]
   140032994:	add    rdi,rax
   140032997:	test   r14d,r14d
   14003299a:	jle    0x140032a13
   14003299c:	mov    rcx,rdi
   14003299f:	lea    rsi,[rdi+0x1]
   1400329a3:	call   0x1400278e0
   1400329a8:	mov    rdx,rdi
   1400329ab:	mov    rcx,rsi
   1400329ae:	lea    r8,[rax+0x1]
   1400329b2:	call   0x140020e80
   1400329b7:	mov    rax,QWORD PTR [rsp+0x20]
   1400329bc:	mov    rcx,QWORD PTR [rax+0xf0]
   1400329c3:	mov    rax,QWORD PTR [rcx]
   1400329c6:	mov    cl,BYTE PTR [rax]
   1400329c8:	mov    BYTE PTR [rdi],cl
   1400329ca:	mov    ebx,DWORD PTR [rbp+0x4]
   1400329cd:	test   ebx,ebx
   1400329cf:	jns    0x140032a13
   1400329d1:	neg    ebx
   1400329d3:	cmp    BYTE PTR [rsp+0x70],0x0
   1400329d8:	jne    0x1400329e5
   1400329da:	mov    eax,ebx
   1400329dc:	mov    ebx,r14d
   1400329df:	cmp    r14d,eax
   1400329e2:	cmovge ebx,eax
   1400329e5:	test   ebx,ebx
   1400329e7:	je     0x140032a03
   1400329e9:	mov    rcx,rsi
   1400329ec:	call   0x1400278e0
   1400329f1:	movsxd rcx,ebx
   1400329f4:	mov    rdx,rsi
   1400329f7:	lea    r8,[rax+0x1]
   1400329fb:	add    rcx,rsi
   1400329fe:	call   0x140020e80
   140032a03:	movsxd r8,ebx
   140032a06:	mov    edx,0x30
   140032a0b:	mov    rcx,rsi
   140032a0e:	call   0x1400260e0
   140032a13:	xor    ebx,ebx
   140032a15:	cmp    BYTE PTR [rsp+0x38],0x0
   140032a1a:	je     0x140032a28
   140032a1c:	mov    rcx,QWORD PTR [rsp+0x30]
   140032a21:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140032a28:	mov    rbp,QWORD PTR [rsp+0x58]
   140032a2d:	mov    rsi,QWORD PTR [rsp+0x60]
   140032a32:	mov    rdi,QWORD PTR [rsp+0x68]
   140032a37:	mov    eax,ebx
   140032a39:	mov    rbx,QWORD PTR [rsp+0x50]
   140032a3e:	add    rsp,0x40
   140032a42:	pop    r14
   140032a44:	ret    
   140032a45:	int3   
   140032a46:	int3   
   140032a47:	int3   
   140032a48:	rex push rbx
   140032a4a:	push   rbp
   140032a4b:	push   rsi
   140032a4c:	push   rdi
   140032a4d:	sub    rsp,0x78
   140032a51:	mov    rax,QWORD PTR [rip+0x1a9f0]        # 0x14004d448
   140032a58:	xor    rax,rsp
   140032a5b:	mov    QWORD PTR [rsp+0x60],rax
   140032a60:	mov    rcx,QWORD PTR [rcx]
   140032a63:	mov    rbx,r8
   140032a66:	mov    rdi,rdx
   140032a69:	mov    esi,r9d
   140032a6c:	mov    ebp,0x16
   140032a71:	lea    r8,[rsp+0x48]
   140032a76:	lea    rdx,[rsp+0x30]
   140032a7b:	mov    r9d,ebp
   140032a7e:	call   0x140033244
   140032a83:	test   rdi,rdi
   140032a86:	jne    0x140032a98
   140032a88:	call   0x140025380
   140032a8d:	mov    DWORD PTR [rax],ebp
   140032a8f:	call   0x140024554
   140032a94:	mov    eax,ebp
   140032a96:	jmp    0x140032b03
   140032a98:	test   rbx,rbx
   140032a9b:	je     0x140032a88
   140032a9d:	or     rdx,0xffffffffffffffff
   140032aa1:	cmp    rbx,rdx
   140032aa4:	je     0x140032ab6
   140032aa6:	xor    eax,eax
   140032aa8:	cmp    DWORD PTR [rsp+0x30],0x2d
   140032aad:	mov    rdx,rbx
   140032ab0:	sete   al
   140032ab3:	sub    rdx,rax
   140032ab6:	mov    r8d,DWORD PTR [rsp+0x34]
   140032abb:	xor    ecx,ecx
   140032abd:	lea    r9,[rsp+0x30]
   140032ac2:	add    r8d,esi
   140032ac5:	cmp    DWORD PTR [rsp+0x30],0x2d
   140032aca:	sete   cl
   140032acd:	add    rcx,rdi
   140032ad0:	call   0x140032f18
   140032ad5:	test   eax,eax
   140032ad7:	je     0x140032ade
   140032ad9:	mov    BYTE PTR [rdi],0x0
   140032adc:	jmp    0x140032b03
   140032ade:	mov    rax,QWORD PTR [rsp+0xc0]
   140032ae6:	lea    r9,[rsp+0x30]
   140032aeb:	mov    r8d,esi
   140032aee:	mov    QWORD PTR [rsp+0x28],rax
   140032af3:	mov    rdx,rbx
   140032af6:	mov    rcx,rdi
   140032af9:	mov    BYTE PTR [rsp+0x20],0x0
   140032afe:	call   0x1400328e4
   140032b03:	mov    rcx,QWORD PTR [rsp+0x60]
   140032b08:	xor    rcx,rsp
   140032b0b:	call   0x140020e50
   140032b10:	add    rsp,0x78
   140032b14:	pop    rdi
   140032b15:	pop    rsi
   140032b16:	pop    rbp
   140032b17:	pop    rbx
   140032b18:	ret    
   140032b19:	int3   
   140032b1a:	int3   
   140032b1b:	int3   
   140032b1c:	rex push rbx
   140032b1e:	push   rbp
   140032b1f:	push   rsi
   140032b20:	push   rdi
   140032b21:	push   r14
   140032b23:	sub    rsp,0x80
   140032b2a:	mov    rax,QWORD PTR [rip+0x1a917]        # 0x14004d448
   140032b31:	xor    rax,rsp
   140032b34:	mov    QWORD PTR [rsp+0x70],rax
   140032b39:	mov    rcx,QWORD PTR [rcx]
   140032b3c:	mov    rdi,r8
   140032b3f:	mov    rsi,rdx
   140032b42:	mov    ebp,r9d
   140032b45:	mov    ebx,0x16
   140032b4a:	lea    r8,[rsp+0x58]
   140032b4f:	lea    rdx,[rsp+0x40]
   140032b54:	mov    r9d,ebx
   140032b57:	call   0x140033244
   140032b5c:	test   rsi,rsi
   140032b5f:	jne    0x140032b74
   140032b61:	call   0x140025380
   140032b66:	mov    DWORD PTR [rax],ebx
   140032b68:	call   0x140024554
   140032b6d:	mov    eax,ebx
   140032b6f:	jmp    0x140032c35
   140032b74:	test   rdi,rdi
   140032b77:	je     0x140032b61
   140032b79:	mov    r14d,DWORD PTR [rsp+0x44]
   140032b7e:	xor    eax,eax
   140032b80:	dec    r14d
   140032b83:	cmp    DWORD PTR [rsp+0x40],0x2d
   140032b88:	sete   al
   140032b8b:	or     rdx,0xffffffffffffffff
   140032b8f:	lea    rbx,[rax+rsi*1]
   140032b93:	cmp    rdi,rdx
   140032b96:	je     0x140032b9e
   140032b98:	mov    rdx,rdi
   140032b9b:	sub    rdx,rax
   140032b9e:	lea    r9,[rsp+0x40]
   140032ba3:	mov    r8d,ebp
   140032ba6:	mov    rcx,rbx
   140032ba9:	call   0x140032f18
   140032bae:	test   eax,eax
   140032bb0:	je     0x140032bb7
   140032bb2:	mov    BYTE PTR [rsi],0x0
   140032bb5:	jmp    0x140032c35
   140032bb7:	mov    eax,DWORD PTR [rsp+0x44]
   140032bbb:	dec    eax
   140032bbd:	cmp    r14d,eax
   140032bc0:	setl   cl
   140032bc3:	cmp    eax,0xfffffffc
   140032bc6:	jl     0x140032c03
   140032bc8:	cmp    eax,ebp
   140032bca:	jge    0x140032c03
   140032bcc:	test   cl,cl
   140032bce:	je     0x140032bdc
   140032bd0:	mov    al,BYTE PTR [rbx]
   140032bd2:	inc    rbx
   140032bd5:	test   al,al
   140032bd7:	jne    0x140032bd0
   140032bd9:	mov    BYTE PTR [rbx-0x2],al
   140032bdc:	mov    rax,QWORD PTR [rsp+0xd8]
   140032be4:	lea    r9,[rsp+0x40]
   140032be9:	mov    r8d,ebp
   140032bec:	mov    QWORD PTR [rsp+0x28],rax
   140032bf1:	mov    rdx,rdi
   140032bf4:	mov    rcx,rsi
   140032bf7:	mov    BYTE PTR [rsp+0x20],0x1
   140032bfc:	call   0x1400328e4
   140032c01:	jmp    0x140032c35
   140032c03:	mov    rax,QWORD PTR [rsp+0xd8]
   140032c0b:	mov    r9d,DWORD PTR [rsp+0xd0]
   140032c13:	mov    r8d,ebp
   140032c16:	mov    QWORD PTR [rsp+0x30],rax
   140032c1b:	lea    rax,[rsp+0x40]
   140032c20:	mov    rdx,rdi
   140032c23:	mov    rcx,rsi
   140032c26:	mov    BYTE PTR [rsp+0x28],0x1
   140032c2b:	mov    QWORD PTR [rsp+0x20],rax
   140032c30:	call   0x1400325f0
   140032c35:	mov    rcx,QWORD PTR [rsp+0x70]
   140032c3a:	xor    rcx,rsp
   140032c3d:	call   0x140020e50
   140032c42:	add    rsp,0x80
   140032c49:	pop    r14
   140032c4b:	pop    rdi
   140032c4c:	pop    rsi
   140032c4d:	pop    rbp
   140032c4e:	pop    rbx
   140032c4f:	ret    
   140032c50:	xor    edx,edx
   140032c52:	jmp    0x140032c58
   140032c57:	int3   
   140032c58:	rex push rbx
   140032c5a:	sub    rsp,0x40
   140032c5e:	mov    rbx,rcx
   140032c61:	lea    rcx,[rsp+0x20]
   140032c66:	call   0x1400246b8
   140032c6b:	mov    cl,BYTE PTR [rbx]
   140032c6d:	mov    r8,QWORD PTR [rsp+0x20]
   140032c72:	test   cl,cl
   140032c74:	je     0x140032c8f
   140032c76:	mov    rax,QWORD PTR [r8+0xf0]
   140032c7d:	mov    rdx,QWORD PTR [rax]
   140032c80:	mov    al,BYTE PTR [rdx]
   140032c82:	cmp    cl,al
   140032c84:	je     0x140032c8f
   140032c86:	inc    rbx
   140032c89:	mov    cl,BYTE PTR [rbx]
   140032c8b:	test   cl,cl
   140032c8d:	jne    0x140032c82
   140032c8f:	mov    al,BYTE PTR [rbx]
   140032c91:	inc    rbx
   140032c94:	test   al,al
   140032c96:	je     0x140032cd5
   140032c98:	jmp    0x140032ca3
   140032c9a:	sub    al,0x45
   140032c9c:	test   al,0xdf
   140032c9e:	je     0x140032ca9
   140032ca0:	inc    rbx
   140032ca3:	mov    al,BYTE PTR [rbx]
   140032ca5:	test   al,al
   140032ca7:	jne    0x140032c9a
   140032ca9:	mov    rdx,rbx
   140032cac:	dec    rbx
   140032caf:	cmp    BYTE PTR [rbx],0x30
   140032cb2:	je     0x140032cac
   140032cb4:	mov    rax,QWORD PTR [r8+0xf0]
   140032cbb:	mov    rcx,QWORD PTR [rax]
   140032cbe:	mov    al,BYTE PTR [rcx]
   140032cc0:	cmp    BYTE PTR [rbx],al
   140032cc2:	jne    0x140032cc7
   140032cc4:	dec    rbx
   140032cc7:	mov    al,BYTE PTR [rdx]
   140032cc9:	inc    rbx
   140032ccc:	inc    rdx
   140032ccf:	mov    BYTE PTR [rbx],al
   140032cd1:	test   al,al
   140032cd3:	jne    0x140032cc7
   140032cd5:	cmp    BYTE PTR [rsp+0x38],0x0
   140032cda:	je     0x140032ce8
   140032cdc:	mov    rax,QWORD PTR [rsp+0x30]
   140032ce1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140032ce8:	add    rsp,0x40
   140032cec:	pop    rbx
   140032ced:	ret    
   140032cee:	int3   
   140032cef:	int3   
   140032cf0:	xor    r9d,r9d
   140032cf3:	jmp    0x140032cf8
   140032cf8:	rex push rbx
   140032cfa:	sub    rsp,0x30
   140032cfe:	mov    rax,r8
   140032d01:	mov    rbx,rdx
   140032d04:	mov    r8,r9
   140032d07:	mov    rdx,rax
   140032d0a:	test   ecx,ecx
   140032d0c:	je     0x140032d22
   140032d0e:	lea    rcx,[rsp+0x20]
   140032d13:	call   0x140032fe4
   140032d18:	mov    rax,QWORD PTR [rsp+0x20]
   140032d1d:	mov    QWORD PTR [rbx],rax
   140032d20:	jmp    0x140032d32
   140032d22:	lea    rcx,[rsp+0x40]
   140032d27:	call   0x1400330ac
   140032d2c:	mov    eax,DWORD PTR [rsp+0x40]
   140032d30:	mov    DWORD PTR [rbx],eax
   140032d32:	add    rsp,0x30
   140032d36:	pop    rbx
   140032d37:	ret    
   140032d38:	xor    edx,edx
   140032d3a:	jmp    0x140032d40
   140032d3f:	int3   
   140032d40:	rex push rbx
   140032d42:	sub    rsp,0x40
   140032d46:	mov    rbx,rcx
   140032d49:	lea    rcx,[rsp+0x20]
   140032d4e:	call   0x1400246b8
   140032d53:	movsx  ecx,BYTE PTR [rbx]
   140032d56:	call   0x140031920
   140032d5b:	cmp    eax,0x65
   140032d5e:	je     0x140032d6f
   140032d60:	inc    rbx
   140032d63:	movzx  ecx,BYTE PTR [rbx]
   140032d66:	call   0x140031b44
   140032d6b:	test   eax,eax
   140032d6d:	jne    0x140032d60
   140032d6f:	movsx  ecx,BYTE PTR [rbx]
   140032d72:	call   0x140031920
   140032d77:	cmp    eax,0x78
   140032d7a:	jne    0x140032d80
   140032d7c:	add    rbx,0x2
   140032d80:	mov    rax,QWORD PTR [rsp+0x20]
   140032d85:	mov    dl,BYTE PTR [rbx]
   140032d87:	mov    rcx,QWORD PTR [rax+0xf0]
   140032d8e:	mov    rax,QWORD PTR [rcx]
   140032d91:	mov    cl,BYTE PTR [rax]
   140032d93:	mov    BYTE PTR [rbx],cl
   140032d95:	inc    rbx
   140032d98:	mov    al,BYTE PTR [rbx]
   140032d9a:	mov    BYTE PTR [rbx],dl
   140032d9c:	mov    dl,al
   140032d9e:	mov    al,BYTE PTR [rbx]
   140032da0:	inc    rbx
   140032da3:	test   al,al
   140032da5:	jne    0x140032d98
   140032da7:	cmp    BYTE PTR [rsp+0x38],al
   140032dab:	je     0x140032db9
   140032dad:	mov    rax,QWORD PTR [rsp+0x30]
   140032db2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140032db9:	add    rsp,0x40
   140032dbd:	pop    rbx
   140032dbe:	ret    
   140032dbf:	int3   
   140032dc0:	movsd  xmm0,QWORD PTR [rcx]
   140032dc4:	xor    eax,eax
   140032dc6:	comisd xmm0,QWORD PTR [rip+0xeaca]        # 0x140041898
   140032dce:	setae  al
   140032dd1:	ret    
   140032dd2:	int3   
   140032dd3:	int3   
   140032dd4:	sub    rsp,0x18
   140032dd8:	xor    r8d,r8d
   140032ddb:	mov    r9,rcx
   140032dde:	test   edx,edx
   140032de0:	jne    0x140032e2a
   140032de2:	and    r9d,0xf
   140032de6:	mov    rdx,rcx
   140032de9:	xorps  xmm1,xmm1
   140032dec:	and    rdx,0xfffffffffffffff0
   140032df0:	mov    ecx,r9d
   140032df3:	or     r9d,0xffffffff
   140032df7:	shl    r9d,cl
   140032dfa:	movdqa xmm0,XMMWORD PTR [rdx]
   140032dfe:	pcmpeqb xmm0,xmm1
   140032e02:	pmovmskb eax,xmm0
   140032e06:	and    eax,r9d
   140032e09:	jne    0x140032e1f
   140032e0b:	add    rdx,0x10
   140032e0f:	movdqa xmm0,XMMWORD PTR [rdx]
   140032e13:	pcmpeqb xmm0,xmm1
   140032e17:	pmovmskb eax,xmm0
   140032e1b:	test   eax,eax
   140032e1d:	je     0x140032e0b
   140032e1f:	bsf    eax,eax
   140032e22:	add    rax,rdx
   140032e25:	jmp    0x140032ed0
   140032e2a:	cmp    DWORD PTR [rip+0x1a627],0x2        # 0x14004d458
   140032e31:	jge    0x140032ed5
   140032e37:	mov    r10,rcx
   140032e3a:	movzx  eax,dl
   140032e3d:	and    r9d,0xf
   140032e41:	and    r10,0xfffffffffffffff0
   140032e45:	mov    ecx,eax
   140032e47:	xorps  xmm2,xmm2
   140032e4a:	shl    ecx,0x8
   140032e4d:	or     ecx,eax
   140032e4f:	movd   xmm0,ecx
   140032e53:	mov    ecx,r9d
   140032e56:	or     r9d,0xffffffff
   140032e5a:	shl    r9d,cl
   140032e5d:	pshuflw xmm1,xmm0,0x0
   140032e62:	movdqa xmm0,xmm2
   140032e66:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032e6b:	pshufd xmm3,xmm1,0x0
   140032e70:	pmovmskb ecx,xmm0
   140032e74:	movdqa xmm0,xmm3
   140032e78:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032e7d:	pmovmskb edx,xmm0
   140032e81:	and    edx,r9d
   140032e84:	and    ecx,r9d
   140032e87:	jne    0x140032eb7
   140032e89:	bsr    ecx,edx
   140032e8c:	movdqa xmm1,xmm2
   140032e90:	movdqa xmm0,xmm3
   140032e94:	add    rcx,r10
   140032e97:	test   edx,edx
   140032e99:	cmovne r8,rcx
   140032e9d:	add    r10,0x10
   140032ea1:	pcmpeqb xmm1,XMMWORD PTR [r10]
   140032ea6:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140032eab:	pmovmskb ecx,xmm1
   140032eaf:	pmovmskb edx,xmm0
   140032eb3:	test   ecx,ecx
   140032eb5:	je     0x140032e89
   140032eb7:	mov    eax,ecx
   140032eb9:	neg    eax
   140032ebb:	and    eax,ecx
   140032ebd:	dec    eax
   140032ebf:	and    edx,eax
   140032ec1:	bsr    ecx,edx
   140032ec4:	add    rcx,r10
   140032ec7:	test   edx,edx
   140032ec9:	cmovne r8,rcx
   140032ecd:	mov    rax,r8
   140032ed0:	add    rsp,0x18
   140032ed4:	ret    
   140032ed5:	test   cl,0xf
   140032ed8:	je     0x140032ef3
   140032eda:	movsx  eax,BYTE PTR [r9]
   140032ede:	cmp    eax,edx
   140032ee0:	cmove  r8,r9
   140032ee4:	cmp    BYTE PTR [r9],0x0
   140032ee8:	je     0x140032ecd
   140032eea:	inc    r9
   140032eed:	test   r9b,0xf
   140032ef1:	jne    0x140032eda
   140032ef3:	movzx  eax,dl
   140032ef6:	movd   xmm0,eax
   140032efa:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140032f01:	jae    0x140032f10
   140032f03:	movsxd r8,ecx
   140032f06:	add    r8,r9
   140032f09:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140032f10:	je     0x140032ecd
   140032f12:	add    r9,0x10
   140032f16:	jmp    0x140032efa
   140032f18:	mov    QWORD PTR [rsp+0x8],rbx
   140032f1d:	push   rdi
   140032f1e:	sub    rsp,0x20
   140032f22:	mov    rbx,rcx
   140032f25:	mov    rcx,QWORD PTR [r9+0x10]
   140032f29:	xor    r10d,r10d
   140032f2c:	test   rbx,rbx
   140032f2f:	jne    0x140032f49
   140032f31:	call   0x140025380
   140032f36:	mov    ebx,0x16
   140032f3b:	mov    DWORD PTR [rax],ebx
   140032f3d:	call   0x140024554
   140032f42:	mov    eax,ebx
   140032f44:	jmp    0x140032fd8
   140032f49:	test   rdx,rdx
   140032f4c:	je     0x140032f31
   140032f4e:	mov    eax,r10d
   140032f51:	test   r8d,r8d
   140032f54:	mov    BYTE PTR [rbx],r10b
   140032f57:	cmovg  eax,r8d
   140032f5b:	inc    eax
   140032f5d:	cdqe   
   140032f5f:	cmp    rdx,rax
   140032f62:	ja     0x140032f70
   140032f64:	call   0x140025380
   140032f69:	mov    ebx,0x22
   140032f6e:	jmp    0x140032f3b
   140032f70:	lea    rdi,[rbx+0x1]
   140032f74:	mov    BYTE PTR [rbx],0x30
   140032f77:	mov    rax,rdi
   140032f7a:	jmp    0x140032f96
   140032f7c:	cmp    BYTE PTR [rcx],r10b
   140032f7f:	je     0x140032f89
   140032f81:	movsx  edx,BYTE PTR [rcx]
   140032f84:	inc    rcx
   140032f87:	jmp    0x140032f8e
   140032f89:	mov    edx,0x30
   140032f8e:	mov    BYTE PTR [rax],dl
   140032f90:	inc    rax
   140032f93:	dec    r8d
   140032f96:	test   r8d,r8d
   140032f99:	jg     0x140032f7c
   140032f9b:	mov    BYTE PTR [rax],r10b
   140032f9e:	js     0x140032fb4
   140032fa0:	cmp    BYTE PTR [rcx],0x35
   140032fa3:	jl     0x140032fb4
   140032fa5:	jmp    0x140032faa
   140032fa7:	mov    BYTE PTR [rax],0x30
   140032faa:	dec    rax
   140032fad:	cmp    BYTE PTR [rax],0x39
   140032fb0:	je     0x140032fa7
   140032fb2:	inc    BYTE PTR [rax]
   140032fb4:	cmp    BYTE PTR [rbx],0x31
   140032fb7:	jne    0x140032fbf
   140032fb9:	inc    DWORD PTR [r9+0x4]
   140032fbd:	jmp    0x140032fd6
   140032fbf:	mov    rcx,rdi
   140032fc2:	call   0x1400278e0
   140032fc7:	mov    rdx,rdi
   140032fca:	mov    rcx,rbx
   140032fcd:	lea    r8,[rax+0x1]
   140032fd1:	call   0x140020e80
   140032fd6:	xor    eax,eax
   140032fd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140032fdd:	add    rsp,0x20
   140032fe1:	pop    rdi
   140032fe2:	ret    
   140032fe3:	int3   
   140032fe4:	mov    QWORD PTR [rsp+0x18],rbx
   140032fe9:	push   rdi
   140032fea:	sub    rsp,0x80
   140032ff1:	mov    rax,QWORD PTR [rip+0x1a450]        # 0x14004d448
   140032ff8:	xor    rax,rsp
   140032ffb:	mov    QWORD PTR [rsp+0x78],rax
   140033000:	mov    rdi,rcx
   140033003:	mov    rbx,rdx
   140033006:	lea    rcx,[rsp+0x40]
   14003300b:	mov    rdx,r8
   14003300e:	call   0x1400246b8
   140033013:	lea    rax,[rsp+0x40]
   140033018:	lea    rdx,[rsp+0x60]
   14003301d:	mov    QWORD PTR [rsp+0x38],rax
   140033022:	and    DWORD PTR [rsp+0x30],0x0
   140033027:	and    DWORD PTR [rsp+0x28],0x0
   14003302c:	and    DWORD PTR [rsp+0x20],0x0
   140033031:	lea    rcx,[rsp+0x68]
   140033036:	xor    r9d,r9d
   140033039:	mov    r8,rbx
   14003303c:	call   0x140033e5c
   140033041:	lea    rcx,[rsp+0x68]
   140033046:	mov    rdx,rdi
   140033049:	mov    ebx,eax
   14003304b:	call   0x1400332fc
   140033050:	mov    ecx,eax
   140033052:	mov    eax,0x3
   140033057:	test   al,bl
   140033059:	jne    0x140033067
   14003305b:	cmp    ecx,0x1
   14003305e:	je     0x14003307a
   140033060:	cmp    ecx,0x2
   140033063:	jne    0x140033078
   140033065:	jmp    0x14003306c
   140033067:	test   bl,0x1
   14003306a:	je     0x140033073
   14003306c:	mov    eax,0x4
   140033071:	jmp    0x14003307a
   140033073:	test   bl,0x2
   140033076:	jne    0x14003307a
   140033078:	xor    eax,eax
   14003307a:	cmp    BYTE PTR [rsp+0x58],0x0
   14003307f:	je     0x14003308d
   140033081:	mov    rcx,QWORD PTR [rsp+0x50]
   140033086:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003308d:	mov    rcx,QWORD PTR [rsp+0x78]
   140033092:	xor    rcx,rsp
   140033095:	call   0x140020e50
   14003309a:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400330a2:	add    rsp,0x80
   1400330a9:	pop    rdi
   1400330aa:	ret    
   1400330ab:	int3   
   1400330ac:	mov    QWORD PTR [rsp+0x18],rbx
   1400330b1:	push   rdi
   1400330b2:	sub    rsp,0x80
   1400330b9:	mov    rax,QWORD PTR [rip+0x1a388]        # 0x14004d448
   1400330c0:	xor    rax,rsp
   1400330c3:	mov    QWORD PTR [rsp+0x78],rax
   1400330c8:	mov    rdi,rcx
   1400330cb:	mov    rbx,rdx
   1400330ce:	lea    rcx,[rsp+0x40]
   1400330d3:	mov    rdx,r8
   1400330d6:	call   0x1400246b8
   1400330db:	lea    rax,[rsp+0x40]
   1400330e0:	lea    rdx,[rsp+0x60]
   1400330e5:	mov    QWORD PTR [rsp+0x38],rax
   1400330ea:	and    DWORD PTR [rsp+0x30],0x0
   1400330ef:	and    DWORD PTR [rsp+0x28],0x0
   1400330f4:	and    DWORD PTR [rsp+0x20],0x0
   1400330f9:	lea    rcx,[rsp+0x68]
   1400330fe:	xor    r9d,r9d
   140033101:	mov    r8,rbx
   140033104:	call   0x140033e5c
   140033109:	lea    rcx,[rsp+0x68]
   14003310e:	mov    rdx,rdi
   140033111:	mov    ebx,eax
   140033113:	call   0x1400338ac
   140033118:	mov    ecx,eax
   14003311a:	mov    eax,0x3
   14003311f:	test   al,bl
   140033121:	jne    0x14003312f
   140033123:	cmp    ecx,0x1
   140033126:	je     0x140033142
   140033128:	cmp    ecx,0x2
   14003312b:	jne    0x140033140
   14003312d:	jmp    0x140033134
   14003312f:	test   bl,0x1
   140033132:	je     0x14003313b
   140033134:	mov    eax,0x4
   140033139:	jmp    0x140033142
   14003313b:	test   bl,0x2
   14003313e:	jne    0x140033142
   140033140:	xor    eax,eax
   140033142:	cmp    BYTE PTR [rsp+0x58],0x0
   140033147:	je     0x140033155
   140033149:	mov    rcx,QWORD PTR [rsp+0x50]
   14003314e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033155:	mov    rcx,QWORD PTR [rsp+0x78]
   14003315a:	xor    rcx,rsp
   14003315d:	call   0x140020e50
   140033162:	mov    rbx,QWORD PTR [rsp+0xa0]
   14003316a:	add    rsp,0x80
   140033171:	pop    rdi
   140033172:	ret    
   140033173:	int3   
   140033174:	mov    QWORD PTR [rsp+0x8],rbx
   140033179:	movzx  r11d,WORD PTR [rdx+0x6]
   14003317e:	mov    r10,rcx
   140033181:	mov    ecx,DWORD PTR [rdx+0x4]
   140033184:	movzx  r8d,r11w
   140033188:	mov    eax,0x8000
   14003318d:	mov    r9d,0x7ff
   140033193:	shr    r8w,0x4
   140033198:	and    r11w,ax
   14003319c:	mov    eax,DWORD PTR [rdx]
   14003319e:	and    r8w,r9w
   1400331a2:	and    ecx,0xfffff
   1400331a8:	mov    ebx,0x80000000
   1400331ad:	movzx  edx,r8w
   1400331b1:	test   edx,edx
   1400331b3:	je     0x1400331cd
   1400331b5:	cmp    edx,r9d
   1400331b8:	je     0x1400331c5
   1400331ba:	mov    edx,0x3c00
   1400331bf:	add    r8w,dx
   1400331c3:	jmp    0x1400331e9
   1400331c5:	mov    r8d,0x7fff
   1400331cb:	jmp    0x1400331e9
   1400331cd:	test   ecx,ecx
   1400331cf:	jne    0x1400331de
   1400331d1:	test   eax,eax
   1400331d3:	jne    0x1400331de
   1400331d5:	and    DWORD PTR [r10+0x4],eax
   1400331d9:	and    DWORD PTR [r10],eax
   1400331dc:	jmp    0x140033236
   1400331de:	mov    edx,0x3c01
   1400331e3:	add    r8w,dx
   1400331e7:	xor    ebx,ebx
   1400331e9:	mov    r9d,eax
   1400331ec:	shl    ecx,0xb
   1400331ef:	shl    eax,0xb
   1400331f2:	shr    r9d,0x15
   1400331f6:	mov    DWORD PTR [r10],eax
   1400331f9:	or     r9d,ecx
   1400331fc:	or     r9d,ebx
   1400331ff:	mov    DWORD PTR [r10+0x4],r9d
   140033203:	test   r9d,r9d
   140033206:	js     0x140033232
   140033208:	mov    edx,DWORD PTR [r10]
   14003320b:	lea    eax,[r9+r9*1]
   14003320f:	mov    ecx,edx
   140033211:	shr    ecx,0x1f
   140033214:	mov    r9d,ecx
   140033217:	or     r9d,eax
   14003321a:	lea    eax,[rdx+rdx*1]
   14003321d:	mov    DWORD PTR [r10],eax
   140033220:	mov    eax,0xffff
   140033225:	add    r8w,ax
   140033229:	test   r9d,r9d
   14003322c:	jns    0x140033208
   14003322e:	mov    DWORD PTR [r10+0x4],r9d
   140033232:	or     r11w,r8w
   140033236:	mov    rbx,QWORD PTR [rsp+0x8]
   14003323b:	mov    WORD PTR [r10+0x8],r11w
   140033240:	ret    
   140033241:	int3   
   140033242:	int3   
   140033243:	int3   
   140033244:	rex push rbp
   140033246:	push   rbx
   140033247:	push   rsi
   140033248:	push   rdi
   140033249:	lea    rbp,[rsp-0x3f]
   14003324e:	sub    rsp,0x88
   140033255:	mov    rax,QWORD PTR [rip+0x1a1ec]        # 0x14004d448
   14003325c:	xor    rax,rsp
   14003325f:	mov    QWORD PTR [rbp+0x27],rax
   140033263:	mov    rdi,rdx
   140033266:	mov    QWORD PTR [rbp-0x19],rcx
   14003326a:	lea    rdx,[rbp-0x19]
   14003326e:	lea    rcx,[rbp-0x9]
   140033272:	mov    rbx,r9
   140033275:	mov    rsi,r8
   140033278:	call   0x140033174
   14003327d:	mov    rax,QWORD PTR [rbp-0x9]
   140033281:	xor    r8d,r8d
   140033284:	mov    QWORD PTR [rbp-0x19],rax
   140033288:	movzx  eax,WORD PTR [rbp-0x1]
   14003328c:	lea    r9,[rbp+0x7]
   140033290:	lea    edx,[r8+0x11]
   140033294:	lea    rcx,[rbp-0x19]
   140033298:	mov    WORD PTR [rbp-0x11],ax
   14003329c:	call   0x1400346b0
   1400332a1:	movsx  ecx,BYTE PTR [rbp+0x9]
   1400332a5:	lea    r8,[rbp+0xb]
   1400332a9:	mov    DWORD PTR [rdi],ecx
   1400332ab:	movsx  ecx,WORD PTR [rbp+0x7]
   1400332af:	mov    rdx,rbx
   1400332b2:	mov    DWORD PTR [rdi+0x4],ecx
   1400332b5:	mov    rcx,rsi
   1400332b8:	mov    DWORD PTR [rdi+0x8],eax
   1400332bb:	call   0x140028d20
   1400332c0:	test   eax,eax
   1400332c2:	jne    0x1400332e3
   1400332c4:	mov    QWORD PTR [rdi+0x10],rsi
   1400332c8:	mov    rax,rdi
   1400332cb:	mov    rcx,QWORD PTR [rbp+0x27]
   1400332cf:	xor    rcx,rsp
   1400332d2:	call   0x140020e50
   1400332d7:	add    rsp,0x88
   1400332de:	pop    rdi
   1400332df:	pop    rsi
   1400332e0:	pop    rbx
   1400332e1:	pop    rbp
   1400332e2:	ret    
   1400332e3:	and    QWORD PTR [rsp+0x20],0x0
   1400332e9:	xor    r9d,r9d
   1400332ec:	xor    r8d,r8d
   1400332ef:	xor    edx,edx
   1400332f1:	xor    ecx,ecx
   1400332f3:	call   0x140024574
   1400332f8:	int3   
   1400332f9:	int3   
   1400332fa:	int3   
   1400332fb:	int3   
   1400332fc:	mov    QWORD PTR [rsp+0x8],rbx
   140033301:	mov    QWORD PTR [rsp+0x18],rsi
   140033306:	mov    QWORD PTR [rsp+0x20],rdi
   14003330b:	push   rbp
   14003330c:	push   r12
   14003330e:	push   r13
   140033310:	push   r14
   140033312:	push   r15
   140033314:	mov    rbp,rsp
   140033317:	sub    rsp,0x60
   14003331b:	mov    rax,QWORD PTR [rip+0x1a126]        # 0x14004d448
   140033322:	xor    rax,rsp
   140033325:	mov    QWORD PTR [rbp-0x8],rax
   140033329:	movzx  eax,WORD PTR [rcx+0xa]
   14003332d:	movzx  r9d,WORD PTR [rcx]
   140033331:	xor    ebx,ebx
   140033333:	mov    edi,eax
   140033335:	and    eax,0x8000
   14003333a:	shl    r9d,0x10
   14003333e:	mov    DWORD PTR [rbp-0x3c],eax
   140033341:	mov    eax,DWORD PTR [rcx+0x6]
   140033344:	and    edi,0x7fff
   14003334a:	mov    DWORD PTR [rbp-0x18],eax
   14003334d:	mov    eax,DWORD PTR [rcx+0x2]
   140033350:	sub    edi,0x3fff
   140033356:	mov    r12d,0x1f
   14003335c:	mov    QWORD PTR [rbp-0x30],rdx
   140033360:	mov    DWORD PTR [rbp-0x28],r9d
   140033364:	mov    DWORD PTR [rbp-0x14],eax
   140033367:	mov    DWORD PTR [rbp-0x10],r9d
   14003336b:	lea    esi,[rbx+0x1]
   14003336e:	lea    r14d,[r12-0x1c]
   140033373:	cmp    edi,0xffffc001
   140033379:	jne    0x1400333a4
   14003337b:	mov    r8d,ebx
   14003337e:	mov    eax,ebx
   140033380:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140033384:	jne    0x140033393
   140033386:	add    rax,rsi
   140033389:	cmp    rax,r14
   14003338c:	jl     0x140033380
   14003338e:	jmp    0x140033842
   140033393:	mov    QWORD PTR [rbp-0x18],rbx
   140033397:	mov    DWORD PTR [rbp-0x10],ebx
   14003339a:	mov    ebx,0x2
   14003339f:	jmp    0x140033842
   1400333a4:	mov    rax,QWORD PTR [rbp-0x18]
   1400333a8:	mov    r10d,r12d
   1400333ab:	or     r15d,0xffffffff
   1400333af:	mov    QWORD PTR [rbp-0x20],rax
   1400333b3:	mov    eax,DWORD PTR [rip+0x1c3af]        # 0x14004f768
   1400333b9:	mov    DWORD PTR [rbp-0x40],edi
   1400333bc:	dec    eax
   1400333be:	mov    r13d,ebx
   1400333c1:	mov    DWORD PTR [rbp-0x38],eax
   1400333c4:	inc    eax
   1400333c6:	cdq    
   1400333c7:	and    edx,r12d
   1400333ca:	add    eax,edx
   1400333cc:	mov    r11d,eax
   1400333cf:	and    eax,r12d
   1400333d2:	sub    eax,edx
   1400333d4:	sar    r11d,0x5
   1400333d8:	sub    r10d,eax
   1400333db:	movsxd rax,r11d
   1400333de:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   1400333e2:	mov    DWORD PTR [rbp-0x24],r10d
   1400333e6:	bt     ecx,r10d
   1400333ea:	jae    0x140033488
   1400333f0:	mov    ecx,r10d
   1400333f3:	mov    eax,r15d
   1400333f6:	movsxd r8,r11d
   1400333f9:	shl    eax,cl
   1400333fb:	not    eax
   1400333fd:	test   DWORD PTR [rbp+r8*4-0x18],eax
   140033402:	jne    0x14003341c
   140033404:	lea    eax,[rsi+r8*1]
   140033408:	cdqe   
   14003340a:	jmp    0x140033415
   14003340c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140033410:	jne    0x14003341c
   140033412:	add    rax,rsi
   140033415:	cmp    rax,r14
   140033418:	jl     0x14003340c
   14003341a:	jmp    0x140033488
   14003341c:	mov    eax,DWORD PTR [rbp-0x38]
   14003341f:	mov    ecx,r12d
   140033422:	cdq    
   140033423:	and    edx,r12d
   140033426:	add    eax,edx
   140033428:	mov    r8d,eax
   14003342b:	and    eax,r12d
   14003342e:	sub    eax,edx
   140033430:	sar    r8d,0x5
   140033434:	mov    edx,esi
   140033436:	sub    ecx,eax
   140033438:	movsxd r10,r8d
   14003343b:	mov    eax,DWORD PTR [rbp+r10*4-0x18]
   140033440:	shl    edx,cl
   140033442:	lea    ecx,[rax+rdx*1]
   140033445:	cmp    ecx,eax
   140033447:	jb     0x14003344d
   140033449:	cmp    ecx,edx
   14003344b:	jae    0x140033450
   14003344d:	mov    r13d,esi
   140033450:	sub    r8d,esi
   140033453:	mov    DWORD PTR [rbp+r10*4-0x18],ecx
   140033458:	movsxd rdx,r8d
   14003345b:	js     0x140033484
   14003345d:	test   r13d,r13d
   140033460:	je     0x140033484
   140033462:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140033466:	mov    r13d,ebx
   140033469:	lea    r8d,[rax+0x1]
   14003346d:	cmp    r8d,eax
   140033470:	jb     0x140033477
   140033472:	cmp    r8d,esi
   140033475:	jae    0x14003347a
   140033477:	mov    r13d,esi
   14003347a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14003347f:	sub    rdx,rsi
   140033482:	jns    0x14003345d
   140033484:	mov    r10d,DWORD PTR [rbp-0x24]
   140033488:	mov    ecx,r10d
   14003348b:	mov    eax,r15d
   14003348e:	shl    eax,cl
   140033490:	movsxd rcx,r11d
   140033493:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140033497:	lea    eax,[r11+0x1]
   14003349b:	movsxd rdx,eax
   14003349e:	cmp    rdx,r14
   1400334a1:	jge    0x1400334c0
   1400334a3:	lea    rcx,[rbp-0x18]
   1400334a7:	mov    r8,r14
   1400334aa:	sub    r8,rdx
   1400334ad:	lea    rcx,[rcx+rdx*4]
   1400334b1:	xor    edx,edx
   1400334b3:	shl    r8,0x2
   1400334b7:	call   0x1400260e0
   1400334bc:	mov    r9d,DWORD PTR [rbp-0x28]
   1400334c0:	test   r13d,r13d
   1400334c3:	je     0x1400334c7
   1400334c5:	add    edi,esi
   1400334c7:	mov    ecx,DWORD PTR [rip+0x1c297]        # 0x14004f764
   1400334cd:	mov    eax,ecx
   1400334cf:	sub    eax,DWORD PTR [rip+0x1c293]        # 0x14004f768
   1400334d5:	cmp    edi,eax
   1400334d7:	jge    0x1400334ed
   1400334d9:	mov    QWORD PTR [rbp-0x18],rbx
   1400334dd:	mov    DWORD PTR [rbp-0x10],ebx
   1400334e0:	mov    r8d,ebx
   1400334e3:	mov    ebx,0x2
   1400334e8:	jmp    0x14003383e
   1400334ed:	cmp    edi,ecx
   1400334ef:	jg     0x140033723
   1400334f5:	sub    ecx,DWORD PTR [rbp-0x40]
   1400334f8:	mov    rax,QWORD PTR [rbp-0x20]
   1400334fc:	mov    r10d,r15d
   1400334ff:	mov    QWORD PTR [rbp-0x18],rax
   140033503:	mov    eax,ecx
   140033505:	mov    DWORD PTR [rbp-0x10],r9d
   140033509:	cdq    
   14003350a:	mov    r11,r14
   14003350d:	mov    r9d,ebx
   140033510:	and    edx,r12d
   140033513:	lea    r8,[rbp-0x18]
   140033517:	add    eax,edx
   140033519:	mov    r13d,eax
   14003351c:	and    eax,r12d
   14003351f:	sub    eax,edx
   140033521:	sar    r13d,0x5
   140033525:	mov    ecx,eax
   140033527:	mov    edi,eax
   140033529:	mov    eax,0x20
   14003352e:	shl    r10d,cl
   140033531:	sub    eax,ecx
   140033533:	mov    r14d,eax
   140033536:	not    r10d
   140033539:	mov    eax,DWORD PTR [r8]
   14003353c:	mov    ecx,edi
   14003353e:	mov    edx,eax
   140033540:	shr    eax,cl
   140033542:	mov    ecx,r14d
   140033545:	or     eax,r9d
   140033548:	and    edx,r10d
   14003354b:	mov    r9d,edx
   14003354e:	mov    DWORD PTR [r8],eax
   140033551:	lea    r8,[r8+0x4]
   140033555:	shl    r9d,cl
   140033558:	sub    r11,rsi
   14003355b:	jne    0x140033539
   14003355d:	movsxd r10,r13d
   140033560:	lea    edi,[r11+0x2]
   140033564:	lea    r14d,[r11+0x3]
   140033568:	mov    r9,r10
   14003356b:	mov    r8d,edi
   14003356e:	neg    r9
   140033571:	cmp    r8,r10
   140033574:	jl     0x14003358b
   140033576:	mov    rdx,r8
   140033579:	shl    rdx,0x2
   14003357d:	lea    rax,[rdx+r9*4]
   140033581:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033585:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033589:	jmp    0x140033590
   14003358b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140033590:	sub    r8,rsi
   140033593:	jns    0x140033571
   140033595:	mov    r9d,DWORD PTR [rbp-0x38]
   140033599:	mov    r11d,r12d
   14003359c:	lea    eax,[r9+0x1]
   1400335a0:	cdq    
   1400335a1:	and    edx,r12d
   1400335a4:	add    eax,edx
   1400335a6:	mov    r10d,eax
   1400335a9:	and    eax,r12d
   1400335ac:	sub    eax,edx
   1400335ae:	sar    r10d,0x5
   1400335b2:	sub    r11d,eax
   1400335b5:	movsxd rax,r10d
   1400335b8:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   1400335bc:	bt     ecx,r11d
   1400335c0:	jae    0x14003365b
   1400335c6:	mov    ecx,r11d
   1400335c9:	mov    eax,r15d
   1400335cc:	movsxd r8,r10d
   1400335cf:	shl    eax,cl
   1400335d1:	not    eax
   1400335d3:	test   DWORD PTR [rbp+r8*4-0x18],eax
   1400335d8:	jne    0x1400335f2
   1400335da:	lea    eax,[rsi+r8*1]
   1400335de:	cdqe   
   1400335e0:	jmp    0x1400335eb
   1400335e2:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   1400335e6:	jne    0x1400335f2
   1400335e8:	add    rax,rsi
   1400335eb:	cmp    rax,r14
   1400335ee:	jl     0x1400335e2
   1400335f0:	jmp    0x14003365b
   1400335f2:	mov    eax,r9d
   1400335f5:	mov    ecx,r12d
   1400335f8:	cdq    
   1400335f9:	and    edx,r12d
   1400335fc:	add    eax,edx
   1400335fe:	mov    r8d,eax
   140033601:	and    eax,r12d
   140033604:	sub    eax,edx
   140033606:	sar    r8d,0x5
   14003360a:	mov    edx,esi
   14003360c:	sub    ecx,eax
   14003360e:	movsxd r13,r8d
   140033611:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   140033616:	shl    edx,cl
   140033618:	mov    ecx,ebx
   14003361a:	lea    r9d,[rax+rdx*1]
   14003361e:	cmp    r9d,eax
   140033621:	jb     0x140033628
   140033623:	cmp    r9d,edx
   140033626:	jae    0x14003362a
   140033628:	mov    ecx,esi
   14003362a:	sub    r8d,esi
   14003362d:	mov    DWORD PTR [rbp+r13*4-0x18],r9d
   140033632:	movsxd rdx,r8d
   140033635:	js     0x14003365b
   140033637:	test   ecx,ecx
   140033639:	je     0x14003365b
   14003363b:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14003363f:	mov    ecx,ebx
   140033641:	lea    r8d,[rax+0x1]
   140033645:	cmp    r8d,eax
   140033648:	jb     0x14003364f
   14003364a:	cmp    r8d,esi
   14003364d:	jae    0x140033651
   14003364f:	mov    ecx,esi
   140033651:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140033656:	sub    rdx,rsi
   140033659:	jns    0x140033637
   14003365b:	mov    ecx,r11d
   14003365e:	mov    eax,r15d
   140033661:	shl    eax,cl
   140033663:	movsxd rcx,r10d
   140033666:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14003366a:	lea    eax,[r10+0x1]
   14003366e:	movsxd rdx,eax
   140033671:	cmp    rdx,r14
   140033674:	jge    0x14003368f
   140033676:	lea    rcx,[rbp-0x18]
   14003367a:	mov    r8,r14
   14003367d:	sub    r8,rdx
   140033680:	lea    rcx,[rcx+rdx*4]
   140033684:	xor    edx,edx
   140033686:	shl    r8,0x2
   14003368a:	call   0x1400260e0
   14003368f:	mov    eax,DWORD PTR [rip+0x1c0d7]        # 0x14004f76c
   140033695:	mov    r13d,0x20
   14003369b:	mov    r9d,ebx
   14003369e:	inc    eax
   1400336a0:	lea    r8,[rbp-0x18]
   1400336a4:	cdq    
   1400336a5:	and    edx,r12d
   1400336a8:	add    eax,edx
   1400336aa:	mov    r10d,eax
   1400336ad:	and    eax,r12d
   1400336b0:	sub    eax,edx
   1400336b2:	sar    r10d,0x5
   1400336b6:	mov    ecx,eax
   1400336b8:	mov    r11d,eax
   1400336bb:	shl    r15d,cl
   1400336be:	sub    r13d,eax
   1400336c1:	not    r15d
   1400336c4:	mov    eax,DWORD PTR [r8]
   1400336c7:	mov    ecx,r11d
   1400336ca:	mov    edx,eax
   1400336cc:	shr    eax,cl
   1400336ce:	mov    ecx,r13d
   1400336d1:	or     eax,r9d
   1400336d4:	and    edx,r15d
   1400336d7:	mov    r9d,edx
   1400336da:	mov    DWORD PTR [r8],eax
   1400336dd:	lea    r8,[r8+0x4]
   1400336e1:	shl    r9d,cl
   1400336e4:	sub    r14,rsi
   1400336e7:	jne    0x1400336c4
   1400336e9:	movsxd r10,r10d
   1400336ec:	mov    r8,rdi
   1400336ef:	mov    r9,r10
   1400336f2:	neg    r9
   1400336f5:	cmp    r8,r10
   1400336f8:	jl     0x14003370f
   1400336fa:	mov    rdx,r8
   1400336fd:	shl    rdx,0x2
   140033701:	lea    rax,[rdx+r9*4]
   140033705:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033709:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003370d:	jmp    0x140033714
   14003370f:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140033714:	sub    r8,rsi
   140033717:	jns    0x1400336f5
   140033719:	mov    r8d,ebx
   14003371c:	mov    ebx,edi
   14003371e:	jmp    0x14003383e
   140033723:	mov    eax,DWORD PTR [rip+0x1c043]        # 0x14004f76c
   140033729:	mov    r10d,DWORD PTR [rip+0x1c030]        # 0x14004f760
   140033730:	mov    r13d,0x20
   140033736:	cdq    
   140033737:	and    edx,r12d
   14003373a:	add    eax,edx
   14003373c:	mov    r11d,eax
   14003373f:	and    eax,r12d
   140033742:	sub    eax,edx
   140033744:	sar    r11d,0x5
   140033748:	mov    ecx,eax
   14003374a:	shl    r15d,cl
   14003374d:	not    r15d
   140033750:	cmp    edi,r10d
   140033753:	jl     0x1400337cf
   140033755:	mov    QWORD PTR [rbp-0x18],rbx
   140033759:	bts    DWORD PTR [rbp-0x18],0x1f
   14003375e:	mov    DWORD PTR [rbp-0x10],ebx
   140033761:	sub    r13d,eax
   140033764:	mov    edi,eax
   140033766:	mov    r9d,ebx
   140033769:	lea    r8,[rbp-0x18]
   14003376d:	mov    eax,DWORD PTR [r8]
   140033770:	mov    ecx,edi
   140033772:	mov    edx,r15d
   140033775:	and    edx,eax
   140033777:	shr    eax,cl
   140033779:	mov    ecx,r13d
   14003377c:	or     eax,r9d
   14003377f:	mov    r9d,edx
   140033782:	shl    r9d,cl
   140033785:	mov    DWORD PTR [r8],eax
   140033788:	lea    r8,[r8+0x4]
   14003378c:	sub    r14,rsi
   14003378f:	jne    0x14003376d
   140033791:	movsxd r9,r11d
   140033794:	lea    edi,[r14+0x2]
   140033798:	mov    r8,r9
   14003379b:	neg    r8
   14003379e:	cmp    rdi,r9
   1400337a1:	jl     0x1400337b8
   1400337a3:	mov    rdx,rdi
   1400337a6:	shl    rdx,0x2
   1400337aa:	lea    rax,[rdx+r8*4]
   1400337ae:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   1400337b2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   1400337b6:	jmp    0x1400337bc
   1400337b8:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   1400337bc:	sub    rdi,rsi
   1400337bf:	jns    0x14003379e
   1400337c1:	mov    r8d,DWORD PTR [rip+0x1bfac]        # 0x14004f774
   1400337c8:	mov    ebx,esi
   1400337ca:	add    r8d,r10d
   1400337cd:	jmp    0x14003383e
   1400337cf:	mov    r8d,DWORD PTR [rip+0x1bf9e]        # 0x14004f774
   1400337d6:	btr    DWORD PTR [rbp-0x18],0x1f
   1400337db:	mov    r10d,ebx
   1400337de:	add    r8d,edi
   1400337e1:	mov    edi,eax
   1400337e3:	sub    r13d,eax
   1400337e6:	lea    r9,[rbp-0x18]
   1400337ea:	mov    eax,DWORD PTR [r9]
   1400337ed:	mov    ecx,edi
   1400337ef:	mov    edx,eax
   1400337f1:	shr    eax,cl
   1400337f3:	mov    ecx,r13d
   1400337f6:	or     eax,r10d
   1400337f9:	and    edx,r15d
   1400337fc:	mov    r10d,edx
   1400337ff:	mov    DWORD PTR [r9],eax
   140033802:	lea    r9,[r9+0x4]
   140033806:	shl    r10d,cl
   140033809:	sub    r14,rsi
   14003380c:	jne    0x1400337ea
   14003380e:	movsxd r10,r11d
   140033811:	lea    edi,[r14+0x2]
   140033815:	mov    r9,r10
   140033818:	neg    r9
   14003381b:	cmp    rdi,r10
   14003381e:	jl     0x140033835
   140033820:	mov    rdx,rdi
   140033823:	shl    rdx,0x2
   140033827:	lea    rax,[rdx+r9*4]
   14003382b:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003382f:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033833:	jmp    0x140033839
   140033835:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140033839:	sub    rdi,rsi
   14003383c:	jns    0x14003381b
   14003383e:	mov    rdx,QWORD PTR [rbp-0x30]
   140033842:	sub    r12d,DWORD PTR [rip+0x1bf23]        # 0x14004f76c
   140033849:	mov    cl,r12b
   14003384c:	shl    r8d,cl
   14003384f:	neg    DWORD PTR [rbp-0x3c]
   140033852:	sbb    eax,eax
   140033854:	and    eax,0x80000000
   140033859:	or     r8d,eax
   14003385c:	mov    eax,DWORD PTR [rip+0x1bf0e]        # 0x14004f770
   140033862:	or     r8d,DWORD PTR [rbp-0x18]
   140033866:	cmp    eax,0x40
   140033869:	jne    0x140033876
   14003386b:	mov    eax,DWORD PTR [rbp-0x14]
   14003386e:	mov    DWORD PTR [rdx+0x4],r8d
   140033872:	mov    DWORD PTR [rdx],eax
   140033874:	jmp    0x14003387e
   140033876:	cmp    eax,0x20
   140033879:	jne    0x14003387e
   14003387b:	mov    DWORD PTR [rdx],r8d
   14003387e:	mov    eax,ebx
   140033880:	mov    rcx,QWORD PTR [rbp-0x8]
   140033884:	xor    rcx,rsp
   140033887:	call   0x140020e50
   14003388c:	lea    r11,[rsp+0x60]
   140033891:	mov    rbx,QWORD PTR [r11+0x30]
   140033895:	mov    rsi,QWORD PTR [r11+0x40]
   140033899:	mov    rdi,QWORD PTR [r11+0x48]
   14003389d:	mov    rsp,r11
   1400338a0:	pop    r15
   1400338a2:	pop    r14
   1400338a4:	pop    r13
   1400338a6:	pop    r12
   1400338a8:	pop    rbp
   1400338a9:	ret    
   1400338aa:	int3   
   1400338ab:	int3   
   1400338ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400338b1:	mov    QWORD PTR [rsp+0x18],rsi
   1400338b6:	mov    QWORD PTR [rsp+0x20],rdi
   1400338bb:	push   rbp
   1400338bc:	push   r12
   1400338be:	push   r13
   1400338c0:	push   r14
   1400338c2:	push   r15
   1400338c4:	mov    rbp,rsp
   1400338c7:	sub    rsp,0x60
   1400338cb:	mov    rax,QWORD PTR [rip+0x19b76]        # 0x14004d448
   1400338d2:	xor    rax,rsp
   1400338d5:	mov    QWORD PTR [rbp-0x8],rax
   1400338d9:	movzx  eax,WORD PTR [rcx+0xa]
   1400338dd:	movzx  r9d,WORD PTR [rcx]
   1400338e1:	xor    ebx,ebx
   1400338e3:	mov    edi,eax
   1400338e5:	and    eax,0x8000
   1400338ea:	shl    r9d,0x10
   1400338ee:	mov    DWORD PTR [rbp-0x3c],eax
   1400338f1:	mov    eax,DWORD PTR [rcx+0x6]
   1400338f4:	and    edi,0x7fff
   1400338fa:	mov    DWORD PTR [rbp-0x18],eax
   1400338fd:	mov    eax,DWORD PTR [rcx+0x2]
   140033900:	sub    edi,0x3fff
   140033906:	mov    r12d,0x1f
   14003390c:	mov    QWORD PTR [rbp-0x30],rdx
   140033910:	mov    DWORD PTR [rbp-0x28],r9d
   140033914:	mov    DWORD PTR [rbp-0x14],eax
   140033917:	mov    DWORD PTR [rbp-0x10],r9d
   14003391b:	lea    esi,[rbx+0x1]
   14003391e:	lea    r14d,[r12-0x1c]
   140033923:	cmp    edi,0xffffc001
   140033929:	jne    0x140033954
   14003392b:	mov    r8d,ebx
   14003392e:	mov    eax,ebx
   140033930:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140033934:	jne    0x140033943
   140033936:	add    rax,rsi
   140033939:	cmp    rax,r14
   14003393c:	jl     0x140033930
   14003393e:	jmp    0x140033df2
   140033943:	mov    QWORD PTR [rbp-0x18],rbx
   140033947:	mov    DWORD PTR [rbp-0x10],ebx
   14003394a:	mov    ebx,0x2
   14003394f:	jmp    0x140033df2
   140033954:	mov    rax,QWORD PTR [rbp-0x18]
   140033958:	mov    r10d,r12d
   14003395b:	or     r15d,0xffffffff
   14003395f:	mov    QWORD PTR [rbp-0x20],rax
   140033963:	mov    eax,DWORD PTR [rip+0x1be17]        # 0x14004f780
   140033969:	mov    DWORD PTR [rbp-0x40],edi
   14003396c:	dec    eax
   14003396e:	mov    r13d,ebx
   140033971:	mov    DWORD PTR [rbp-0x38],eax
   140033974:	inc    eax
   140033976:	cdq    
   140033977:	and    edx,r12d
   14003397a:	add    eax,edx
   14003397c:	mov    r11d,eax
   14003397f:	and    eax,r12d
   140033982:	sub    eax,edx
   140033984:	sar    r11d,0x5
   140033988:	sub    r10d,eax
   14003398b:	movsxd rax,r11d
   14003398e:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140033992:	mov    DWORD PTR [rbp-0x24],r10d
   140033996:	bt     ecx,r10d
   14003399a:	jae    0x140033a38
   1400339a0:	mov    ecx,r10d
   1400339a3:	mov    eax,r15d
   1400339a6:	movsxd r8,r11d
   1400339a9:	shl    eax,cl
   1400339ab:	not    eax
   1400339ad:	test   DWORD PTR [rbp+r8*4-0x18],eax
   1400339b2:	jne    0x1400339cc
   1400339b4:	lea    eax,[rsi+r8*1]
   1400339b8:	cdqe   
   1400339ba:	jmp    0x1400339c5
   1400339bc:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   1400339c0:	jne    0x1400339cc
   1400339c2:	add    rax,rsi
   1400339c5:	cmp    rax,r14
   1400339c8:	jl     0x1400339bc
   1400339ca:	jmp    0x140033a38
   1400339cc:	mov    eax,DWORD PTR [rbp-0x38]
   1400339cf:	mov    ecx,r12d
   1400339d2:	cdq    
   1400339d3:	and    edx,r12d
   1400339d6:	add    eax,edx
   1400339d8:	mov    r8d,eax
   1400339db:	and    eax,r12d
   1400339de:	sub    eax,edx
   1400339e0:	sar    r8d,0x5
   1400339e4:	mov    edx,esi
   1400339e6:	sub    ecx,eax
   1400339e8:	movsxd r10,r8d
   1400339eb:	mov    eax,DWORD PTR [rbp+r10*4-0x18]
   1400339f0:	shl    edx,cl
   1400339f2:	lea    ecx,[rax+rdx*1]
   1400339f5:	cmp    ecx,eax
   1400339f7:	jb     0x1400339fd
   1400339f9:	cmp    ecx,edx
   1400339fb:	jae    0x140033a00
   1400339fd:	mov    r13d,esi
   140033a00:	sub    r8d,esi
   140033a03:	mov    DWORD PTR [rbp+r10*4-0x18],ecx
   140033a08:	movsxd rdx,r8d
   140033a0b:	js     0x140033a34
   140033a0d:	test   r13d,r13d
   140033a10:	je     0x140033a34
   140033a12:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140033a16:	mov    r13d,ebx
   140033a19:	lea    r8d,[rax+0x1]
   140033a1d:	cmp    r8d,eax
   140033a20:	jb     0x140033a27
   140033a22:	cmp    r8d,esi
   140033a25:	jae    0x140033a2a
   140033a27:	mov    r13d,esi
   140033a2a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140033a2f:	sub    rdx,rsi
   140033a32:	jns    0x140033a0d
   140033a34:	mov    r10d,DWORD PTR [rbp-0x24]
   140033a38:	mov    ecx,r10d
   140033a3b:	mov    eax,r15d
   140033a3e:	shl    eax,cl
   140033a40:	movsxd rcx,r11d
   140033a43:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140033a47:	lea    eax,[r11+0x1]
   140033a4b:	movsxd rdx,eax
   140033a4e:	cmp    rdx,r14
   140033a51:	jge    0x140033a70
   140033a53:	lea    rcx,[rbp-0x18]
   140033a57:	mov    r8,r14
   140033a5a:	sub    r8,rdx
   140033a5d:	lea    rcx,[rcx+rdx*4]
   140033a61:	xor    edx,edx
   140033a63:	shl    r8,0x2
   140033a67:	call   0x1400260e0
   140033a6c:	mov    r9d,DWORD PTR [rbp-0x28]
   140033a70:	test   r13d,r13d
   140033a73:	je     0x140033a77
   140033a75:	add    edi,esi
   140033a77:	mov    ecx,DWORD PTR [rip+0x1bcff]        # 0x14004f77c
   140033a7d:	mov    eax,ecx
   140033a7f:	sub    eax,DWORD PTR [rip+0x1bcfb]        # 0x14004f780
   140033a85:	cmp    edi,eax
   140033a87:	jge    0x140033a9d
   140033a89:	mov    QWORD PTR [rbp-0x18],rbx
   140033a8d:	mov    DWORD PTR [rbp-0x10],ebx
   140033a90:	mov    r8d,ebx
   140033a93:	mov    ebx,0x2
   140033a98:	jmp    0x140033dee
   140033a9d:	cmp    edi,ecx
   140033a9f:	jg     0x140033cd3
   140033aa5:	sub    ecx,DWORD PTR [rbp-0x40]
   140033aa8:	mov    rax,QWORD PTR [rbp-0x20]
   140033aac:	mov    r10d,r15d
   140033aaf:	mov    QWORD PTR [rbp-0x18],rax
   140033ab3:	mov    eax,ecx
   140033ab5:	mov    DWORD PTR [rbp-0x10],r9d
   140033ab9:	cdq    
   140033aba:	mov    r11,r14
   140033abd:	mov    r9d,ebx
   140033ac0:	and    edx,r12d
   140033ac3:	lea    r8,[rbp-0x18]
   140033ac7:	add    eax,edx
   140033ac9:	mov    r13d,eax
   140033acc:	and    eax,r12d
   140033acf:	sub    eax,edx
   140033ad1:	sar    r13d,0x5
   140033ad5:	mov    ecx,eax
   140033ad7:	mov    edi,eax
   140033ad9:	mov    eax,0x20
   140033ade:	shl    r10d,cl
   140033ae1:	sub    eax,ecx
   140033ae3:	mov    r14d,eax
   140033ae6:	not    r10d
   140033ae9:	mov    eax,DWORD PTR [r8]
   140033aec:	mov    ecx,edi
   140033aee:	mov    edx,eax
   140033af0:	shr    eax,cl
   140033af2:	mov    ecx,r14d
   140033af5:	or     eax,r9d
   140033af8:	and    edx,r10d
   140033afb:	mov    r9d,edx
   140033afe:	mov    DWORD PTR [r8],eax
   140033b01:	lea    r8,[r8+0x4]
   140033b05:	shl    r9d,cl
   140033b08:	sub    r11,rsi
   140033b0b:	jne    0x140033ae9
   140033b0d:	movsxd r10,r13d
   140033b10:	lea    edi,[r11+0x2]
   140033b14:	lea    r14d,[r11+0x3]
   140033b18:	mov    r9,r10
   140033b1b:	mov    r8d,edi
   140033b1e:	neg    r9
   140033b21:	cmp    r8,r10
   140033b24:	jl     0x140033b3b
   140033b26:	mov    rdx,r8
   140033b29:	shl    rdx,0x2
   140033b2d:	lea    rax,[rdx+r9*4]
   140033b31:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033b35:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033b39:	jmp    0x140033b40
   140033b3b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140033b40:	sub    r8,rsi
   140033b43:	jns    0x140033b21
   140033b45:	mov    r9d,DWORD PTR [rbp-0x38]
   140033b49:	mov    r11d,r12d
   140033b4c:	lea    eax,[r9+0x1]
   140033b50:	cdq    
   140033b51:	and    edx,r12d
   140033b54:	add    eax,edx
   140033b56:	mov    r10d,eax
   140033b59:	and    eax,r12d
   140033b5c:	sub    eax,edx
   140033b5e:	sar    r10d,0x5
   140033b62:	sub    r11d,eax
   140033b65:	movsxd rax,r10d
   140033b68:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140033b6c:	bt     ecx,r11d
   140033b70:	jae    0x140033c0b
   140033b76:	mov    ecx,r11d
   140033b79:	mov    eax,r15d
   140033b7c:	movsxd r8,r10d
   140033b7f:	shl    eax,cl
   140033b81:	not    eax
   140033b83:	test   DWORD PTR [rbp+r8*4-0x18],eax
   140033b88:	jne    0x140033ba2
   140033b8a:	lea    eax,[rsi+r8*1]
   140033b8e:	cdqe   
   140033b90:	jmp    0x140033b9b
   140033b92:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140033b96:	jne    0x140033ba2
   140033b98:	add    rax,rsi
   140033b9b:	cmp    rax,r14
   140033b9e:	jl     0x140033b92
   140033ba0:	jmp    0x140033c0b
   140033ba2:	mov    eax,r9d
   140033ba5:	mov    ecx,r12d
   140033ba8:	cdq    
   140033ba9:	and    edx,r12d
   140033bac:	add    eax,edx
   140033bae:	mov    r8d,eax
   140033bb1:	and    eax,r12d
   140033bb4:	sub    eax,edx
   140033bb6:	sar    r8d,0x5
   140033bba:	mov    edx,esi
   140033bbc:	sub    ecx,eax
   140033bbe:	movsxd r13,r8d
   140033bc1:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   140033bc6:	shl    edx,cl
   140033bc8:	mov    ecx,ebx
   140033bca:	lea    r9d,[rax+rdx*1]
   140033bce:	cmp    r9d,eax
   140033bd1:	jb     0x140033bd8
   140033bd3:	cmp    r9d,edx
   140033bd6:	jae    0x140033bda
   140033bd8:	mov    ecx,esi
   140033bda:	sub    r8d,esi
   140033bdd:	mov    DWORD PTR [rbp+r13*4-0x18],r9d
   140033be2:	movsxd rdx,r8d
   140033be5:	js     0x140033c0b
   140033be7:	test   ecx,ecx
   140033be9:	je     0x140033c0b
   140033beb:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140033bef:	mov    ecx,ebx
   140033bf1:	lea    r8d,[rax+0x1]
   140033bf5:	cmp    r8d,eax
   140033bf8:	jb     0x140033bff
   140033bfa:	cmp    r8d,esi
   140033bfd:	jae    0x140033c01
   140033bff:	mov    ecx,esi
   140033c01:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140033c06:	sub    rdx,rsi
   140033c09:	jns    0x140033be7
   140033c0b:	mov    ecx,r11d
   140033c0e:	mov    eax,r15d
   140033c11:	shl    eax,cl
   140033c13:	movsxd rcx,r10d
   140033c16:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140033c1a:	lea    eax,[r10+0x1]
   140033c1e:	movsxd rdx,eax
   140033c21:	cmp    rdx,r14
   140033c24:	jge    0x140033c3f
   140033c26:	lea    rcx,[rbp-0x18]
   140033c2a:	mov    r8,r14
   140033c2d:	sub    r8,rdx
   140033c30:	lea    rcx,[rcx+rdx*4]
   140033c34:	xor    edx,edx
   140033c36:	shl    r8,0x2
   140033c3a:	call   0x1400260e0
   140033c3f:	mov    eax,DWORD PTR [rip+0x1bb3f]        # 0x14004f784
   140033c45:	mov    r13d,0x20
   140033c4b:	mov    r9d,ebx
   140033c4e:	inc    eax
   140033c50:	lea    r8,[rbp-0x18]
   140033c54:	cdq    
   140033c55:	and    edx,r12d
   140033c58:	add    eax,edx
   140033c5a:	mov    r10d,eax
   140033c5d:	and    eax,r12d
   140033c60:	sub    eax,edx
   140033c62:	sar    r10d,0x5
   140033c66:	mov    ecx,eax
   140033c68:	mov    r11d,eax
   140033c6b:	shl    r15d,cl
   140033c6e:	sub    r13d,eax
   140033c71:	not    r15d
   140033c74:	mov    eax,DWORD PTR [r8]
   140033c77:	mov    ecx,r11d
   140033c7a:	mov    edx,eax
   140033c7c:	shr    eax,cl
   140033c7e:	mov    ecx,r13d
   140033c81:	or     eax,r9d
   140033c84:	and    edx,r15d
   140033c87:	mov    r9d,edx
   140033c8a:	mov    DWORD PTR [r8],eax
   140033c8d:	lea    r8,[r8+0x4]
   140033c91:	shl    r9d,cl
   140033c94:	sub    r14,rsi
   140033c97:	jne    0x140033c74
   140033c99:	movsxd r10,r10d
   140033c9c:	mov    r8,rdi
   140033c9f:	mov    r9,r10
   140033ca2:	neg    r9
   140033ca5:	cmp    r8,r10
   140033ca8:	jl     0x140033cbf
   140033caa:	mov    rdx,r8
   140033cad:	shl    rdx,0x2
   140033cb1:	lea    rax,[rdx+r9*4]
   140033cb5:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033cb9:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033cbd:	jmp    0x140033cc4
   140033cbf:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140033cc4:	sub    r8,rsi
   140033cc7:	jns    0x140033ca5
   140033cc9:	mov    r8d,ebx
   140033ccc:	mov    ebx,edi
   140033cce:	jmp    0x140033dee
   140033cd3:	mov    eax,DWORD PTR [rip+0x1baab]        # 0x14004f784
   140033cd9:	mov    r10d,DWORD PTR [rip+0x1ba98]        # 0x14004f778
   140033ce0:	mov    r13d,0x20
   140033ce6:	cdq    
   140033ce7:	and    edx,r12d
   140033cea:	add    eax,edx
   140033cec:	mov    r11d,eax
   140033cef:	and    eax,r12d
   140033cf2:	sub    eax,edx
   140033cf4:	sar    r11d,0x5
   140033cf8:	mov    ecx,eax
   140033cfa:	shl    r15d,cl
   140033cfd:	not    r15d
   140033d00:	cmp    edi,r10d
   140033d03:	jl     0x140033d7f
   140033d05:	mov    QWORD PTR [rbp-0x18],rbx
   140033d09:	bts    DWORD PTR [rbp-0x18],0x1f
   140033d0e:	mov    DWORD PTR [rbp-0x10],ebx
   140033d11:	sub    r13d,eax
   140033d14:	mov    edi,eax
   140033d16:	mov    r9d,ebx
   140033d19:	lea    r8,[rbp-0x18]
   140033d1d:	mov    eax,DWORD PTR [r8]
   140033d20:	mov    ecx,edi
   140033d22:	mov    edx,r15d
   140033d25:	and    edx,eax
   140033d27:	shr    eax,cl
   140033d29:	mov    ecx,r13d
   140033d2c:	or     eax,r9d
   140033d2f:	mov    r9d,edx
   140033d32:	shl    r9d,cl
   140033d35:	mov    DWORD PTR [r8],eax
   140033d38:	lea    r8,[r8+0x4]
   140033d3c:	sub    r14,rsi
   140033d3f:	jne    0x140033d1d
   140033d41:	movsxd r9,r11d
   140033d44:	lea    edi,[r14+0x2]
   140033d48:	mov    r8,r9
   140033d4b:	neg    r8
   140033d4e:	cmp    rdi,r9
   140033d51:	jl     0x140033d68
   140033d53:	mov    rdx,rdi
   140033d56:	shl    rdx,0x2
   140033d5a:	lea    rax,[rdx+r8*4]
   140033d5e:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033d62:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033d66:	jmp    0x140033d6c
   140033d68:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140033d6c:	sub    rdi,rsi
   140033d6f:	jns    0x140033d4e
   140033d71:	mov    r8d,DWORD PTR [rip+0x1ba14]        # 0x14004f78c
   140033d78:	mov    ebx,esi
   140033d7a:	add    r8d,r10d
   140033d7d:	jmp    0x140033dee
   140033d7f:	mov    r8d,DWORD PTR [rip+0x1ba06]        # 0x14004f78c
   140033d86:	btr    DWORD PTR [rbp-0x18],0x1f
   140033d8b:	mov    r10d,ebx
   140033d8e:	add    r8d,edi
   140033d91:	mov    edi,eax
   140033d93:	sub    r13d,eax
   140033d96:	lea    r9,[rbp-0x18]
   140033d9a:	mov    eax,DWORD PTR [r9]
   140033d9d:	mov    ecx,edi
   140033d9f:	mov    edx,eax
   140033da1:	shr    eax,cl
   140033da3:	mov    ecx,r13d
   140033da6:	or     eax,r10d
   140033da9:	and    edx,r15d
   140033dac:	mov    r10d,edx
   140033daf:	mov    DWORD PTR [r9],eax
   140033db2:	lea    r9,[r9+0x4]
   140033db6:	shl    r10d,cl
   140033db9:	sub    r14,rsi
   140033dbc:	jne    0x140033d9a
   140033dbe:	movsxd r10,r11d
   140033dc1:	lea    edi,[r14+0x2]
   140033dc5:	mov    r9,r10
   140033dc8:	neg    r9
   140033dcb:	cmp    rdi,r10
   140033dce:	jl     0x140033de5
   140033dd0:	mov    rdx,rdi
   140033dd3:	shl    rdx,0x2
   140033dd7:	lea    rax,[rdx+r9*4]
   140033ddb:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140033ddf:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140033de3:	jmp    0x140033de9
   140033de5:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140033de9:	sub    rdi,rsi
   140033dec:	jns    0x140033dcb
   140033dee:	mov    rdx,QWORD PTR [rbp-0x30]
   140033df2:	sub    r12d,DWORD PTR [rip+0x1b98b]        # 0x14004f784
   140033df9:	mov    cl,r12b
   140033dfc:	shl    r8d,cl
   140033dff:	neg    DWORD PTR [rbp-0x3c]
   140033e02:	sbb    eax,eax
   140033e04:	and    eax,0x80000000
   140033e09:	or     r8d,eax
   140033e0c:	mov    eax,DWORD PTR [rip+0x1b976]        # 0x14004f788
   140033e12:	or     r8d,DWORD PTR [rbp-0x18]
   140033e16:	cmp    eax,0x40
   140033e19:	jne    0x140033e26
   140033e1b:	mov    eax,DWORD PTR [rbp-0x14]
   140033e1e:	mov    DWORD PTR [rdx+0x4],r8d
   140033e22:	mov    DWORD PTR [rdx],eax
   140033e24:	jmp    0x140033e2e
   140033e26:	cmp    eax,0x20
   140033e29:	jne    0x140033e2e
   140033e2b:	mov    DWORD PTR [rdx],r8d
   140033e2e:	mov    eax,ebx
   140033e30:	mov    rcx,QWORD PTR [rbp-0x8]
   140033e34:	xor    rcx,rsp
   140033e37:	call   0x140020e50
   140033e3c:	lea    r11,[rsp+0x60]
   140033e41:	mov    rbx,QWORD PTR [r11+0x30]
   140033e45:	mov    rsi,QWORD PTR [r11+0x40]
   140033e49:	mov    rdi,QWORD PTR [r11+0x48]
   140033e4d:	mov    rsp,r11
   140033e50:	pop    r15
   140033e52:	pop    r14
   140033e54:	pop    r13
   140033e56:	pop    r12
   140033e58:	pop    rbp
   140033e59:	ret    
   140033e5a:	int3   
   140033e5b:	int3   
   140033e5c:	mov    QWORD PTR [rsp+0x18],rbx
   140033e61:	push   rbp
   140033e62:	push   rsi
   140033e63:	push   rdi
   140033e64:	push   r12
   140033e66:	push   r13
   140033e68:	push   r14
   140033e6a:	push   r15
   140033e6c:	lea    rbp,[rsp-0x7]
   140033e71:	sub    rsp,0xa0
   140033e78:	mov    rax,QWORD PTR [rip+0x195c9]        # 0x14004d448
   140033e7f:	xor    rax,rsp
   140033e82:	mov    QWORD PTR [rbp-0x1],rax
   140033e86:	mov    r14,QWORD PTR [rbp+0x7f]
   140033e8a:	xor    ebx,ebx
   140033e8c:	mov    DWORD PTR [rbp-0x6d],r9d
   140033e90:	lea    r9d,[rbx+0x1]
   140033e94:	mov    QWORD PTR [rbp-0x59],rcx
   140033e98:	mov    QWORD PTR [rbp-0x69],rdx
   140033e9c:	lea    r10,[rbp-0x21]
   140033ea0:	mov    WORD PTR [rbp-0x71],bx
   140033ea4:	mov    r11d,ebx
   140033ea7:	mov    DWORD PTR [rbp-0x75],r9d
   140033eab:	mov    r15d,ebx
   140033eae:	mov    DWORD PTR [rbp-0x79],ebx
   140033eb1:	mov    r12d,ebx
   140033eb4:	mov    r13d,ebx
   140033eb7:	mov    esi,ebx
   140033eb9:	mov    ecx,ebx
   140033ebb:	test   r14,r14
   140033ebe:	jne    0x140033ed7
   140033ec0:	call   0x140025380
   140033ec5:	mov    DWORD PTR [rax],0x16
   140033ecb:	call   0x140024554
   140033ed0:	xor    eax,eax
   140033ed2:	jmp    0x140034686
   140033ed7:	mov    rdi,r8
   140033eda:	cmp    BYTE PTR [r8],0x20
   140033ede:	ja     0x140033ef9
   140033ee0:	movsx  rax,BYTE PTR [r8]
   140033ee4:	movabs rdx,0x100002600
   140033eee:	bt     rdx,rax
   140033ef2:	jae    0x140033ef9
   140033ef4:	add    r8,r9
   140033ef7:	jmp    0x140033eda
   140033ef9:	mov    dl,BYTE PTR [r8]
   140033efc:	add    r8,r9
   140033eff:	cmp    ecx,0x5
   140033f02:	jg     0x140034112
   140033f08:	je     0x1400340f8
   140033f0e:	mov    r9d,ecx
   140033f11:	test   ecx,ecx
   140033f13:	je     0x14003409c
   140033f19:	dec    r9d
   140033f1c:	je     0x14003405c
   140033f22:	dec    r9d
   140033f25:	je     0x14003400a
   140033f2b:	dec    r9d
   140033f2e:	je     0x140033fbd
   140033f34:	dec    r9d
   140033f37:	jne    0x1400341d7
   140033f3d:	mov    r9d,0x1
   140033f43:	mov    al,0x30
   140033f45:	mov    r15d,r9d
   140033f48:	mov    DWORD PTR [rbp-0x79],r9d
   140033f4c:	test   r11d,r11d
   140033f4f:	jne    0x140033f81
   140033f51:	jmp    0x140033f5c
   140033f53:	mov    dl,BYTE PTR [r8]
   140033f56:	sub    esi,r9d
   140033f59:	add    r8,r9
   140033f5c:	cmp    dl,al
   140033f5e:	je     0x140033f53
   140033f60:	jmp    0x140033f81
   140033f62:	cmp    dl,0x39
   140033f65:	jg     0x140033f85
   140033f67:	cmp    r11d,0x19
   140033f6b:	jae    0x140033f7b
   140033f6d:	sub    dl,al
   140033f6f:	add    r11d,r9d
   140033f72:	mov    BYTE PTR [r10],dl
   140033f75:	add    r10,r9
   140033f78:	sub    esi,r9d
   140033f7b:	mov    dl,BYTE PTR [r8]
   140033f7e:	add    r8,r9
   140033f81:	cmp    dl,al
   140033f83:	jge    0x140033f62
   140033f85:	lea    eax,[rdx-0x2b]
   140033f88:	test   al,0xfd
   140033f8a:	je     0x140033fb0
   140033f8c:	cmp    dl,0x43
   140033f8f:	jle    0x1400340d1
   140033f95:	cmp    dl,0x45
   140033f98:	jle    0x140033fa6
   140033f9a:	sub    dl,0x64
   140033f9d:	cmp    dl,r9b
   140033fa0:	ja     0x1400340d1
   140033fa6:	mov    ecx,0x6
   140033fab:	jmp    0x140033ef9
   140033fb0:	sub    r8,r9
   140033fb3:	mov    ecx,0xb
   140033fb8:	jmp    0x140033ef9
   140033fbd:	mov    r9d,0x1
   140033fc3:	mov    al,0x30
   140033fc5:	mov    r15d,r9d
   140033fc8:	jmp    0x140033feb
   140033fca:	cmp    dl,0x39
   140033fcd:	jg     0x140033fef
   140033fcf:	cmp    r11d,0x19
   140033fd3:	jae    0x140033fe2
   140033fd5:	sub    dl,al
   140033fd7:	add    r11d,r9d
   140033fda:	mov    BYTE PTR [r10],dl
   140033fdd:	add    r10,r9
   140033fe0:	jmp    0x140033fe5
   140033fe2:	add    esi,r9d
   140033fe5:	mov    dl,BYTE PTR [r8]
   140033fe8:	add    r8,r9
   140033feb:	cmp    dl,al
   140033fed:	jge    0x140033fca
   140033fef:	mov    rax,QWORD PTR [r14]
   140033ff2:	mov    rcx,QWORD PTR [rax+0xf0]
   140033ff9:	mov    rax,QWORD PTR [rcx]
   140033ffc:	cmp    dl,BYTE PTR [rax]
   140033ffe:	jne    0x140033f85
   140034000:	mov    ecx,0x4
   140034005:	jmp    0x140033ef9
   14003400a:	lea    eax,[rdx-0x31]
   14003400d:	cmp    al,0x8
   14003400f:	ja     0x140034024
   140034011:	mov    ecx,0x3
   140034016:	mov    r9d,0x1
   14003401c:	sub    r8,r9
   14003401f:	jmp    0x140033ef9
   140034024:	mov    rax,QWORD PTR [r14]
   140034027:	mov    rcx,QWORD PTR [rax+0xf0]
   14003402e:	mov    rax,QWORD PTR [rcx]
   140034031:	cmp    dl,BYTE PTR [rax]
   140034033:	jne    0x140034045
   140034035:	mov    ecx,0x5
   14003403a:	mov    r9d,0x1
   140034040:	jmp    0x140033ef9
   140034045:	cmp    dl,0x30
   140034048:	jne    0x140034240
   14003404e:	mov    r9d,0x1
   140034054:	mov    ecx,r9d
   140034057:	jmp    0x140033ef9
   14003405c:	lea    eax,[rdx-0x31]
   14003405f:	mov    r9d,0x1
   140034065:	mov    r15d,r9d
   140034068:	cmp    al,0x8
   14003406a:	ja     0x140034072
   14003406c:	lea    ecx,[r9+0x2]
   140034070:	jmp    0x14003401c
   140034072:	mov    rax,QWORD PTR [r14]
   140034075:	mov    rcx,QWORD PTR [rax+0xf0]
   14003407c:	mov    rax,QWORD PTR [rcx]
   14003407f:	cmp    dl,BYTE PTR [rax]
   140034081:	je     0x140034000
   140034087:	lea    eax,[rdx-0x2b]
   14003408a:	test   al,0xfd
   14003408c:	je     0x140033fb0
   140034092:	cmp    dl,0x30
   140034095:	je     0x140034054
   140034097:	jmp    0x140033f8c
   14003409c:	lea    eax,[rdx-0x31]
   14003409f:	cmp    al,0x8
   1400340a1:	jbe    0x140034011
   1400340a7:	mov    rax,QWORD PTR [r14]
   1400340aa:	mov    rcx,QWORD PTR [rax+0xf0]
   1400340b1:	mov    rax,QWORD PTR [rcx]
   1400340b4:	cmp    dl,BYTE PTR [rax]
   1400340b6:	je     0x140034035
   1400340bc:	cmp    dl,0x2b
   1400340bf:	je     0x1400340ea
   1400340c1:	cmp    dl,0x2d
   1400340c4:	je     0x1400340d9
   1400340c6:	cmp    dl,0x30
   1400340c9:	je     0x14003404e
   1400340cb:	mov    r9d,0x1
   1400340d1:	sub    r8,r9
   1400340d4:	jmp    0x140034249
   1400340d9:	mov    ecx,0x2
   1400340de:	mov    DWORD PTR [rbp-0x71],0x8000
   1400340e5:	jmp    0x14003403a
   1400340ea:	mov    ecx,0x2
   1400340ef:	mov    WORD PTR [rbp-0x71],bx
   1400340f3:	jmp    0x14003403a
   1400340f8:	sub    dl,0x30
   1400340fb:	mov    DWORD PTR [rbp-0x79],r9d
   1400340ff:	cmp    dl,0x9
   140034102:	ja     0x1400341e1
   140034108:	mov    ecx,0x4
   14003410d:	jmp    0x14003401c
   140034112:	mov    r9d,ecx
   140034115:	sub    r9d,0x6
   140034119:	je     0x1400341bb
   14003411f:	dec    r9d
   140034122:	je     0x140034197
   140034124:	dec    r9d
   140034127:	je     0x14003416b
   140034129:	dec    r9d
   14003412c:	je     0x1400341e6
   140034132:	cmp    r9d,0x2
   140034136:	jne    0x1400341d7
   14003413c:	cmp    DWORD PTR [rbp+0x77],ebx
   14003413f:	je     0x1400340cb
   140034141:	lea    rdi,[r8-0x1]
   140034145:	cmp    dl,0x2b
   140034148:	je     0x140034161
   14003414a:	cmp    dl,0x2d
   14003414d:	jne    0x140034240
   140034153:	or     DWORD PTR [rbp-0x75],0xffffffff
   140034157:	mov    ecx,0x7
   14003415c:	jmp    0x14003403a
   140034161:	mov    ecx,0x7
   140034166:	jmp    0x14003403a
   14003416b:	mov    r9d,0x1
   140034171:	mov    r12d,r9d
   140034174:	jmp    0x14003417c
   140034176:	mov    dl,BYTE PTR [r8]
   140034179:	add    r8,r9
   14003417c:	cmp    dl,0x30
   14003417f:	je     0x140034176
   140034181:	sub    dl,0x31
   140034184:	cmp    dl,0x8
   140034187:	ja     0x1400340d1
   14003418d:	mov    ecx,0x9
   140034192:	jmp    0x14003401c
   140034197:	lea    eax,[rdx-0x31]
   14003419a:	cmp    al,0x8
   14003419c:	ja     0x1400341a8
   14003419e:	mov    ecx,0x9
   1400341a3:	jmp    0x140034016
   1400341a8:	cmp    dl,0x30
   1400341ab:	jne    0x140034240
   1400341b1:	mov    ecx,0x8
   1400341b6:	jmp    0x14003403a
   1400341bb:	lea    eax,[rdx-0x31]
   1400341be:	lea    rdi,[r8-0x2]
   1400341c2:	cmp    al,0x8
   1400341c4:	jbe    0x14003419e
   1400341c6:	cmp    dl,0x2b
   1400341c9:	je     0x1400341d2
   1400341cb:	cmp    dl,0x2d
   1400341ce:	je     0x140034153
   1400341d0:	jmp    0x1400341a8
   1400341d2:	mov    ecx,0x7
   1400341d7:	cmp    ecx,0xa
   1400341da:	je     0x140034243
   1400341dc:	jmp    0x14003403a
   1400341e1:	mov    r8,rdi
   1400341e4:	jmp    0x140034249
   1400341e6:	mov    r9d,0x1
   1400341ec:	mov    dil,0x30
   1400341ef:	mov    r12d,r9d
   1400341f2:	jmp    0x140034218
   1400341f4:	cmp    dl,0x39
   1400341f7:	jg     0x140034236
   1400341f9:	lea    r13d,[r13+r13*4+0x0]
   1400341fe:	movsx  eax,dl
   140034201:	lea    r13d,[r13-0x18]
   140034205:	lea    r13d,[rax+r13*2]
   140034209:	cmp    r13d,0x1450
   140034210:	jg     0x14003421f
   140034212:	mov    dl,BYTE PTR [r8]
   140034215:	add    r8,r9
   140034218:	cmp    dl,dil
   14003421b:	jge    0x1400341f4
   14003421d:	jmp    0x140034236
   14003421f:	mov    r13d,0x1451
   140034225:	jmp    0x140034236
   140034227:	cmp    dl,0x39
   14003422a:	jg     0x1400340d1
   140034230:	mov    dl,BYTE PTR [r8]
   140034233:	add    r8,r9
   140034236:	cmp    dl,dil
   140034239:	jge    0x140034227
   14003423b:	jmp    0x1400340d1
   140034240:	mov    r8,rdi
   140034243:	mov    r9d,0x1
   140034249:	mov    rax,QWORD PTR [rbp-0x69]
   14003424d:	mov    QWORD PTR [rax],r8
   140034250:	test   r15d,r15d
   140034253:	je     0x14003465c
   140034259:	cmp    r11d,0x18
   14003425d:	jbe    0x140034278
   14003425f:	mov    al,BYTE PTR [rbp-0xa]
   140034262:	cmp    al,0x5
   140034264:	jl     0x14003426c
   140034266:	add    al,r9b
   140034269:	mov    BYTE PTR [rbp-0xa],al
   14003426c:	sub    r10,r9
   14003426f:	mov    r11d,0x18
   140034275:	add    esi,r9d
   140034278:	test   r11d,r11d
   14003427b:	jne    0x140034292
   14003427d:	movzx  edx,bx
   140034280:	movzx  eax,bx
   140034283:	mov    edi,ebx
   140034285:	mov    ecx,ebx
   140034287:	jmp    0x14003466b
   14003428c:	dec    r11d
   14003428f:	add    esi,r9d
   140034292:	sub    r10,r9
   140034295:	cmp    BYTE PTR [r10],bl
   140034298:	je     0x14003428c
   14003429a:	lea    r8,[rbp-0x41]
   14003429e:	lea    rcx,[rbp-0x21]
   1400342a2:	mov    edx,r11d
   1400342a5:	call   0x14003517c
   1400342aa:	cmp    DWORD PTR [rbp-0x75],ebx
   1400342ad:	jge    0x1400342b2
   1400342af:	neg    r13d
   1400342b2:	add    r13d,esi
   1400342b5:	test   r12d,r12d
   1400342b8:	jne    0x1400342be
   1400342ba:	add    r13d,DWORD PTR [rbp+0x67]
   1400342be:	cmp    DWORD PTR [rbp-0x79],ebx
   1400342c1:	jne    0x1400342c7
   1400342c3:	sub    r13d,DWORD PTR [rbp+0x6f]
   1400342c7:	cmp    r13d,0x1450
   1400342ce:	jg     0x140034646
   1400342d4:	cmp    r13d,0xffffebb0
   1400342db:	jl     0x140034636
   1400342e1:	lea    r14,[rip+0x1b4a8]        # 0x14004f790
   1400342e8:	sub    r14,0x60
   1400342ec:	test   r13d,r13d
   1400342ef:	je     0x140034624
   1400342f5:	jns    0x140034305
   1400342f7:	lea    r14,[rip+0x1b5f2]        # 0x14004f8f0
   1400342fe:	neg    r13d
   140034301:	sub    r14,0x60
   140034305:	cmp    DWORD PTR [rbp-0x6d],ebx
   140034308:	jne    0x14003430e
   14003430a:	mov    WORD PTR [rbp-0x41],bx
   14003430e:	test   r13d,r13d
   140034311:	je     0x140034624
   140034317:	mov    edi,0x80000000
   14003431c:	mov    r9d,0x7fff
   140034322:	mov    eax,r13d
   140034325:	add    r14,0x54
   140034329:	sar    r13d,0x3
   14003432d:	mov    QWORD PTR [rbp-0x61],r14
   140034331:	and    eax,0x7
   140034334:	je     0x14003461b
   14003433a:	cdqe   
   14003433c:	mov    r11d,0x8000
   140034342:	mov    esi,0x1
   140034347:	lea    rcx,[rax+rax*2]
   14003434b:	lea    rdx,[r14+rcx*4]
   14003434f:	mov    QWORD PTR [rbp-0x69],rdx
   140034353:	cmp    WORD PTR [rdx],r11w
   140034357:	jb     0x140034377
   140034359:	mov    rcx,QWORD PTR [rdx]
   14003435c:	mov    eax,DWORD PTR [rdx+0x8]
   14003435f:	lea    rdx,[rbp-0x31]
   140034363:	mov    QWORD PTR [rbp-0x31],rcx
   140034367:	shr    rcx,0x10
   14003436b:	mov    DWORD PTR [rbp-0x29],eax
   14003436e:	sub    ecx,esi
   140034370:	mov    QWORD PTR [rbp-0x69],rdx
   140034374:	mov    DWORD PTR [rbp-0x2f],ecx
   140034377:	movzx  eax,WORD PTR [rdx+0xa]
   14003437b:	movzx  ecx,WORD PTR [rbp-0x37]
   14003437f:	mov    QWORD PTR [rbp-0x51],rbx
   140034383:	movzx  r12d,ax
   140034387:	and    ax,r9w
   14003438b:	mov    DWORD PTR [rbp-0x49],ebx
   14003438e:	xor    r12w,cx
   140034392:	and    cx,r9w
   140034396:	and    r12w,r11w
   14003439a:	lea    r8d,[rcx+rax*1]
   14003439e:	cmp    cx,r9w
   1400343a2:	jae    0x140034607
   1400343a8:	cmp    ax,r9w
   1400343ac:	jae    0x140034607
   1400343b2:	mov    r10d,0xbffd
   1400343b8:	cmp    r8w,r10w
   1400343bc:	ja     0x140034607
   1400343c2:	mov    r10d,0x3fbf
   1400343c8:	cmp    r8w,r10w
   1400343cc:	ja     0x1400343da
   1400343ce:	mov    QWORD PTR [rbp-0x3d],rbx
   1400343d2:	mov    DWORD PTR [rbp-0x41],ebx
   1400343d5:	jmp    0x14003461b
   1400343da:	test   cx,cx
   1400343dd:	jne    0x1400343ff
   1400343df:	add    r8w,si
   1400343e3:	test   DWORD PTR [rbp-0x39],0x7fffffff
   1400343ea:	jne    0x1400343ff
   1400343ec:	cmp    DWORD PTR [rbp-0x3d],ebx
   1400343ef:	jne    0x1400343ff
   1400343f1:	cmp    DWORD PTR [rbp-0x41],ebx
   1400343f4:	jne    0x1400343ff
   1400343f6:	mov    WORD PTR [rbp-0x37],bx
   1400343fa:	jmp    0x14003461b
   1400343ff:	test   ax,ax
   140034402:	jne    0x14003441a
   140034404:	add    r8w,si
   140034408:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14003440f:	jne    0x14003441a
   140034411:	cmp    DWORD PTR [rdx+0x4],ebx
   140034414:	jne    0x14003441a
   140034416:	cmp    DWORD PTR [rdx],ebx
   140034418:	je     0x1400343ce
   14003441a:	mov    r15d,ebx
   14003441d:	lea    rcx,[rbp-0x51]
   140034421:	mov    r10d,0x5
   140034427:	lea    eax,[r15+r15*1]
   14003442b:	mov    DWORD PTR [rbp-0x79],r10d
   14003442f:	movsxd r9,eax
   140034432:	test   r10d,r10d
   140034435:	jle    0x140034499
   140034437:	mov    eax,r15d
   14003443a:	lea    rdi,[rbp-0x41]
   14003443e:	lea    r14,[rdx+0x8]
   140034442:	and    eax,esi
   140034444:	add    rdi,r9
   140034447:	mov    edx,eax
   140034449:	movzx  eax,WORD PTR [r14]
   14003444d:	movzx  r9d,WORD PTR [rdi]
   140034451:	mov    r11d,ebx
   140034454:	imul   r9d,eax
   140034458:	mov    eax,DWORD PTR [rcx]
   14003445a:	lea    esi,[rax+r9*1]
   14003445e:	cmp    esi,eax
   140034460:	jb     0x140034467
   140034462:	cmp    esi,r9d
   140034465:	jae    0x14003446d
   140034467:	mov    r11d,0x1
   14003446d:	mov    DWORD PTR [rcx],esi
   14003446f:	mov    esi,0x1
   140034474:	test   r11d,r11d
   140034477:	je     0x14003447d
   140034479:	add    WORD PTR [rcx+0x4],si
   14003447d:	mov    r11d,DWORD PTR [rbp-0x79]
   140034481:	add    rdi,0x2
   140034485:	sub    r14,0x2
   140034489:	sub    r11d,esi
   14003448c:	mov    DWORD PTR [rbp-0x79],r11d
   140034490:	test   r11d,r11d
   140034493:	jg     0x140034449
   140034495:	mov    rdx,QWORD PTR [rbp-0x69]
   140034499:	sub    r10d,esi
   14003449c:	add    rcx,0x2
   1400344a0:	add    r15d,esi
   1400344a3:	test   r10d,r10d
   1400344a6:	jg     0x140034427
   1400344ac:	mov    r10d,DWORD PTR [rbp-0x49]
   1400344b0:	mov    r9d,DWORD PTR [rbp-0x51]
   1400344b4:	mov    eax,0xc002
   1400344b9:	add    r8w,ax
   1400344bd:	mov    edi,0x80000000
   1400344c2:	mov    r15d,0xffff
   1400344c8:	test   r8w,r8w
   1400344cc:	jle    0x14003450d
   1400344ce:	test   edi,r10d
   1400344d1:	jne    0x140034507
   1400344d3:	mov    r11d,DWORD PTR [rbp-0x4d]
   1400344d7:	mov    edx,r9d
   1400344da:	add    r10d,r10d
   1400344dd:	shr    edx,0x1f
   1400344e0:	add    r9d,r9d
   1400344e3:	mov    ecx,r11d
   1400344e6:	shr    ecx,0x1f
   1400344e9:	lea    eax,[r11+r11*1]
   1400344ed:	add    r8w,r15w
   1400344f1:	or     eax,edx
   1400344f3:	or     r10d,ecx
   1400344f6:	mov    DWORD PTR [rbp-0x51],r9d
   1400344fa:	mov    DWORD PTR [rbp-0x4d],eax
   1400344fd:	mov    DWORD PTR [rbp-0x49],r10d
   140034501:	test   r8w,r8w
   140034505:	jg     0x1400344ce
   140034507:	test   r8w,r8w
   14003450b:	jg     0x140034575
   14003450d:	add    r8w,r15w
   140034511:	jns    0x140034575
   140034513:	movzx  eax,r8w
   140034517:	mov    edi,ebx
   140034519:	neg    ax
   14003451c:	movzx  edx,ax
   14003451f:	add    r8w,dx
   140034523:	test   BYTE PTR [rbp-0x51],sil
   140034527:	je     0x14003452b
   140034529:	add    edi,esi
   14003452b:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003452f:	mov    eax,r10d
   140034532:	shr    r9d,1
   140034535:	mov    ecx,r11d
   140034538:	shl    eax,0x1f
   14003453b:	shr    r11d,1
   14003453e:	shl    ecx,0x1f
   140034541:	or     r11d,eax
   140034544:	shr    r10d,1
   140034547:	or     r9d,ecx
   14003454a:	mov    DWORD PTR [rbp-0x4d],r11d
   14003454e:	mov    DWORD PTR [rbp-0x51],r9d
   140034552:	sub    rdx,rsi
   140034555:	jne    0x140034523
   140034557:	test   edi,edi
   140034559:	mov    DWORD PTR [rbp-0x49],r10d
   14003455d:	mov    edi,0x80000000
   140034562:	je     0x140034575
   140034564:	movzx  eax,r9w
   140034568:	or     ax,si
   14003456b:	mov    WORD PTR [rbp-0x51],ax
   14003456f:	mov    r9d,DWORD PTR [rbp-0x51]
   140034573:	jmp    0x140034579
   140034575:	movzx  eax,WORD PTR [rbp-0x51]
   140034579:	mov    r14,QWORD PTR [rbp-0x61]
   14003457d:	mov    r11d,0x8000
   140034583:	cmp    ax,r11w
   140034587:	ja     0x140034599
   140034589:	and    r9d,0x1ffff
   140034590:	cmp    r9d,0x18000
   140034597:	jne    0x1400345de
   140034599:	mov    eax,DWORD PTR [rbp-0x4f]
   14003459c:	or     ecx,0xffffffff
   14003459f:	cmp    eax,ecx
   1400345a1:	jne    0x1400345d9
   1400345a3:	mov    eax,DWORD PTR [rbp-0x4b]
   1400345a6:	mov    DWORD PTR [rbp-0x4f],ebx
   1400345a9:	cmp    eax,ecx
   1400345ab:	jne    0x1400345ce
   1400345ad:	movzx  eax,WORD PTR [rbp-0x47]
   1400345b1:	mov    DWORD PTR [rbp-0x4b],ebx
   1400345b4:	cmp    ax,r15w
   1400345b8:	jne    0x1400345c5
   1400345ba:	mov    WORD PTR [rbp-0x47],r11w
   1400345bf:	add    r8w,si
   1400345c3:	jmp    0x1400345d3
   1400345c5:	add    ax,si
   1400345c8:	mov    WORD PTR [rbp-0x47],ax
   1400345cc:	jmp    0x1400345d3
   1400345ce:	add    eax,esi
   1400345d0:	mov    DWORD PTR [rbp-0x4b],eax
   1400345d3:	mov    r10d,DWORD PTR [rbp-0x49]
   1400345d7:	jmp    0x1400345de
   1400345d9:	add    eax,esi
   1400345db:	mov    DWORD PTR [rbp-0x4f],eax
   1400345de:	mov    r9d,0x7fff
   1400345e4:	cmp    r8w,r9w
   1400345e8:	jae    0x140034607
   1400345ea:	movzx  eax,WORD PTR [rbp-0x4f]
   1400345ee:	or     r8w,r12w
   1400345f2:	mov    DWORD PTR [rbp-0x3b],r10d
   1400345f6:	mov    WORD PTR [rbp-0x41],ax
   1400345fa:	mov    eax,DWORD PTR [rbp-0x4d]
   1400345fd:	mov    WORD PTR [rbp-0x37],r8w
   140034602:	mov    DWORD PTR [rbp-0x3f],eax
   140034605:	jmp    0x14003461b
   140034607:	neg    r12w
   14003460b:	mov    QWORD PTR [rbp-0x41],rbx
   14003460f:	sbb    eax,eax
   140034611:	and    eax,edi
   140034613:	add    eax,0x7fff8000
   140034618:	mov    DWORD PTR [rbp-0x39],eax
   14003461b:	test   r13d,r13d
   14003461e:	jne    0x140034322
   140034624:	mov    eax,DWORD PTR [rbp-0x39]
   140034627:	movzx  edx,WORD PTR [rbp-0x41]
   14003462b:	mov    ecx,DWORD PTR [rbp-0x3f]
   14003462e:	mov    edi,DWORD PTR [rbp-0x3b]
   140034631:	shr    eax,0x10
   140034634:	jmp    0x14003466b
   140034636:	mov    edx,ebx
   140034638:	movzx  eax,bx
   14003463b:	mov    edi,ebx
   14003463d:	mov    ecx,ebx
   14003463f:	mov    ebx,0x1
   140034644:	jmp    0x14003466b
   140034646:	mov    ecx,ebx
   140034648:	movzx  edx,bx
   14003464b:	mov    eax,0x7fff
   140034650:	mov    ebx,0x2
   140034655:	mov    edi,0x80000000
   14003465a:	jmp    0x14003466b
   14003465c:	movzx  edx,bx
   14003465f:	movzx  eax,bx
   140034662:	mov    edi,ebx
   140034664:	mov    ecx,ebx
   140034666:	mov    ebx,0x4
   14003466b:	mov    r8,QWORD PTR [rbp-0x59]
   14003466f:	or     ax,WORD PTR [rbp-0x71]
   140034673:	mov    WORD PTR [r8+0xa],ax
   140034678:	mov    eax,ebx
   14003467a:	mov    WORD PTR [r8],dx
   14003467e:	mov    DWORD PTR [r8+0x2],ecx
   140034682:	mov    DWORD PTR [r8+0x6],edi
   140034686:	mov    rcx,QWORD PTR [rbp-0x1]
   14003468a:	xor    rcx,rsp
   14003468d:	call   0x140020e50
   140034692:	mov    rbx,QWORD PTR [rsp+0xf0]
   14003469a:	add    rsp,0xa0
   1400346a1:	pop    r15
   1400346a3:	pop    r14
   1400346a5:	pop    r13
   1400346a7:	pop    r12
   1400346a9:	pop    rdi
   1400346aa:	pop    rsi
   1400346ab:	pop    rbp
   1400346ac:	ret    
   1400346ad:	int3   
   1400346ae:	int3   
   1400346af:	int3   
   1400346b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400346b5:	push   rbp
   1400346b6:	push   rsi
   1400346b7:	push   rdi
   1400346b8:	push   r12
   1400346ba:	push   r13
   1400346bc:	push   r14
   1400346be:	push   r15
   1400346c0:	lea    rbp,[rsp-0x27]
   1400346c5:	sub    rsp,0xc0
   1400346cc:	mov    rax,QWORD PTR [rip+0x18d75]        # 0x14004d448
   1400346d3:	xor    rax,rsp
   1400346d6:	mov    QWORD PTR [rbp+0x17],rax
   1400346da:	movzx  edi,WORD PTR [rcx+0x8]
   1400346de:	mov    r10d,DWORD PTR [rcx]
   1400346e1:	mov    rbx,r9
   1400346e4:	mov    r9d,DWORD PTR [rcx+0x4]
   1400346e8:	movzx  ecx,di
   1400346eb:	mov    r11d,0x1
   1400346f1:	mov    DWORD PTR [rbp-0x4d],edx
   1400346f4:	mov    edx,0x8000
   1400346f9:	xor    r15d,r15d
   1400346fc:	and    cx,dx
   1400346ff:	lea    r13d,[rdx-0x1]
   140034703:	mov    DWORD PTR [rbp-0x39],r8d
   140034707:	and    di,r13w
   14003470b:	mov    QWORD PTR [rbp-0x41],rbx
   14003470f:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   140034716:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14003471d:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   140034724:	mov    WORD PTR [rbp-0x67],cx
   140034728:	lea    eax,[r11+0x1f]
   14003472c:	lea    r8d,[r11+0x2c]
   140034730:	test   cx,cx
   140034733:	je     0x14003473b
   140034735:	mov    BYTE PTR [rbx+0x2],r8b
   140034739:	jmp    0x14003473e
   14003473b:	mov    BYTE PTR [rbx+0x2],al
   14003473e:	test   di,di
   140034741:	jne    0x140034772
   140034743:	test   r9d,r9d
   140034746:	jne    0x140034841
   14003474c:	test   r10d,r10d
   14003474f:	jne    0x140034841
   140034755:	cmp    cx,dx
   140034758:	cmove  eax,r8d
   14003475c:	mov    WORD PTR [rbx],r15w
   140034760:	mov    BYTE PTR [rbx+0x2],al
   140034763:	mov    WORD PTR [rbx+0x3],0x3001
   140034769:	mov    BYTE PTR [rbx+0x5],r15b
   14003476d:	jmp    0x1400350c2
   140034772:	cmp    di,r13w
   140034776:	jne    0x140034841
   14003477c:	mov    esi,0x80000000
   140034781:	mov    WORD PTR [rbx],r11w
   140034785:	cmp    r9d,esi
   140034788:	jne    0x14003478f
   14003478a:	test   r10d,r10d
   14003478d:	je     0x1400347b8
   14003478f:	bt     r9d,0x1e
   140034794:	jb     0x1400347b8
   140034796:	lea    rcx,[rbx+0x4]
   14003479a:	lea    r8,[rip+0xd0ff]        # 0x1400418a0
   1400347a1:	mov    edx,0x16
   1400347a6:	call   0x140028d20
   1400347ab:	test   eax,eax
   1400347ad:	je     0x140034835
   1400347b3:	jmp    0x140035128
   1400347b8:	test   cx,cx
   1400347bb:	je     0x1400347e8
   1400347bd:	cmp    r9d,0xc0000000
   1400347c4:	jne    0x1400347e8
   1400347c6:	test   r10d,r10d
   1400347c9:	jne    0x140034818
   1400347cb:	lea    rcx,[rbx+0x4]
   1400347cf:	lea    r8,[rip+0xd0d2]        # 0x1400418a8
   1400347d6:	lea    edx,[r10+0x16]
   1400347da:	call   0x140028d20
   1400347df:	test   eax,eax
   1400347e1:	je     0x14003480e
   1400347e3:	jmp    0x14003513d
   1400347e8:	cmp    r9d,esi
   1400347eb:	jne    0x140034818
   1400347ed:	test   r10d,r10d
   1400347f0:	jne    0x140034818
   1400347f2:	lea    rcx,[rbx+0x4]
   1400347f6:	lea    r8,[rip+0xd0b3]        # 0x1400418b0
   1400347fd:	lea    edx,[r10+0x16]
   140034801:	call   0x140028d20
   140034806:	test   eax,eax
   140034808:	jne    0x140035152
   14003480e:	mov    eax,0x5
   140034813:	mov    BYTE PTR [rbx+0x3],al
   140034816:	jmp    0x140034839
   140034818:	lea    rcx,[rbx+0x4]
   14003481c:	lea    r8,[rip+0xd095]        # 0x1400418b8
   140034823:	mov    edx,0x16
   140034828:	call   0x140028d20
   14003482d:	test   eax,eax
   14003482f:	jne    0x140035167
   140034835:	mov    BYTE PTR [rbx+0x3],0x6
   140034839:	mov    r11d,r15d
   14003483c:	jmp    0x1400350c2
   140034841:	movzx  r8d,di
   140034845:	mov    ecx,r9d
   140034848:	mov    DWORD PTR [rbp-0x13],r9d
   14003484c:	shr    ecx,0x18
   14003484f:	mov    eax,r8d
   140034852:	mov    DWORD PTR [rbp-0x17],r10d
   140034856:	shr    eax,0x8
   140034859:	lea    r9,[rip+0x1af30]        # 0x14004f790
   140034860:	mov    r14d,0x80000000
   140034866:	imul   r8d,r8d,0x4d10
   14003486d:	lea    edx,[rax+rcx*2]
   140034870:	lea    ecx,[r8-0x134312f4]
   140034877:	mov    r12d,0x5
   14003487d:	sub    r9,0x60
   140034881:	mov    WORD PTR [rbp-0xf],di
   140034885:	mov    WORD PTR [rbp-0x19],r15w
   14003488a:	imul   edx,edx,0x4d
   14003488d:	add    ecx,edx
   14003488f:	mov    DWORD PTR [rbp-0x49],r12d
   140034893:	mov    esi,0xbffd
   140034898:	sar    ecx,0x10
   14003489b:	lea    edi,[r14-0x1]
   14003489f:	movsx  r10d,cx
   1400348a3:	mov    DWORD PTR [rbp-0x61],ecx
   1400348a6:	neg    r10d
   1400348a9:	je     0x140034c16
   1400348af:	test   r10d,r10d
   1400348b2:	jns    0x1400348c5
   1400348b4:	lea    r9,[rip+0x1b035]        # 0x14004f8f0
   1400348bb:	neg    r10d
   1400348be:	sub    r9,0x60
   1400348c2:	test   r10d,r10d
   1400348c5:	je     0x140034c16
   1400348cb:	mov    r8d,DWORD PTR [rbp-0x15]
   1400348cf:	mov    edx,DWORD PTR [rbp-0x19]
   1400348d2:	mov    eax,r10d
   1400348d5:	add    r9,0x54
   1400348d9:	sar    r10d,0x3
   1400348dd:	mov    DWORD PTR [rbp-0x51],r10d
   1400348e1:	mov    QWORD PTR [rbp-0x59],r9
   1400348e5:	and    eax,0x7
   1400348e8:	je     0x140034bff
   1400348ee:	cdqe   
   1400348f0:	lea    rcx,[rax+rax*2]
   1400348f4:	lea    rsi,[r9+rcx*4]
   1400348f8:	mov    r9d,0x8000
   1400348fe:	mov    QWORD PTR [rbp-0x31],rsi
   140034902:	cmp    WORD PTR [rsi],r9w
   140034906:	jb     0x140034927
   140034908:	mov    rcx,QWORD PTR [rsi]
   14003490b:	mov    eax,DWORD PTR [rsi+0x8]
   14003490e:	lea    rsi,[rbp+0x7]
   140034912:	mov    QWORD PTR [rbp+0x7],rcx
   140034916:	shr    rcx,0x10
   14003491a:	mov    DWORD PTR [rbp+0xf],eax
   14003491d:	sub    ecx,r11d
   140034920:	mov    QWORD PTR [rbp-0x31],rsi
   140034924:	mov    DWORD PTR [rbp+0x9],ecx
   140034927:	movzx  ecx,WORD PTR [rsi+0xa]
   14003492b:	movzx  eax,WORD PTR [rbp-0xf]
   14003492f:	mov    DWORD PTR [rbp-0x65],r15d
   140034933:	movzx  ebx,cx
   140034936:	and    cx,r13w
   14003493a:	mov    QWORD PTR [rbp-0x29],0x0
   140034942:	xor    bx,ax
   140034945:	and    ax,r13w
   140034949:	mov    DWORD PTR [rbp-0x21],r15d
   14003494d:	and    bx,r9w
   140034951:	lea    r9d,[rax+rcx*1]
   140034955:	mov    WORD PTR [rbp-0x69],bx
   140034959:	cmp    ax,r13w
   14003495d:	jae    0x140034bde
   140034963:	cmp    cx,r13w
   140034967:	jae    0x140034bde
   14003496d:	mov    r13d,0xbffd
   140034973:	cmp    r9w,r13w
   140034977:	ja     0x140034bd8
   14003497d:	mov    ebx,0x3fbf
   140034982:	cmp    r9w,bx
   140034986:	ja     0x14003499b
   140034988:	mov    QWORD PTR [rbp-0x15],0x0
   140034990:	mov    r13d,0x7fff
   140034996:	jmp    0x140034bf2
   14003499b:	test   ax,ax
   14003499e:	jne    0x1400349c2
   1400349a0:	add    r9w,r11w
   1400349a4:	test   DWORD PTR [rbp-0x11],edi
   1400349a7:	jne    0x1400349c2
   1400349a9:	test   r8d,r8d
   1400349ac:	jne    0x1400349c2
   1400349ae:	test   edx,edx
   1400349b0:	jne    0x1400349c2
   1400349b2:	mov    WORD PTR [rbp-0xf],r15w
   1400349b7:	mov    r13d,0x7fff
   1400349bd:	jmp    0x140034bfb
   1400349c2:	test   cx,cx
   1400349c5:	jne    0x1400349db
   1400349c7:	add    r9w,r11w
   1400349cb:	test   DWORD PTR [rsi+0x8],edi
   1400349ce:	jne    0x1400349db
   1400349d0:	cmp    DWORD PTR [rsi+0x4],r15d
   1400349d4:	jne    0x1400349db
   1400349d6:	cmp    DWORD PTR [rsi],r15d
   1400349d9:	je     0x140034988
   1400349db:	mov    r14d,r15d
   1400349de:	lea    rdx,[rbp-0x29]
   1400349e2:	mov    edi,r12d
   1400349e5:	lea    eax,[r14+r14*1]
   1400349e9:	mov    r13d,edi
   1400349ec:	movsxd rcx,eax
   1400349ef:	test   edi,edi
   1400349f1:	jle    0x140034a4c
   1400349f3:	lea    r15,[rbp-0x19]
   1400349f7:	mov    ebx,r14d
   1400349fa:	lea    r12,[rsi+0x8]
   1400349fe:	add    r15,rcx
   140034a01:	and    ebx,r11d
   140034a04:	xor    esi,esi
   140034a06:	movzx  eax,WORD PTR [r12]
   140034a0b:	movzx  ecx,WORD PTR [r15]
   140034a0f:	mov    r10d,esi
   140034a12:	imul   ecx,eax
   140034a15:	mov    eax,DWORD PTR [rdx]
   140034a17:	lea    r8d,[rax+rcx*1]
   140034a1b:	cmp    r8d,eax
   140034a1e:	jb     0x140034a25
   140034a20:	cmp    r8d,ecx
   140034a23:	jae    0x140034a28
   140034a25:	mov    r10d,r11d
   140034a28:	mov    DWORD PTR [rdx],r8d
   140034a2b:	test   r10d,r10d
   140034a2e:	je     0x140034a35
   140034a30:	add    WORD PTR [rdx+0x4],r11w
   140034a35:	sub    r13d,r11d
   140034a38:	add    r15,0x2
   140034a3c:	sub    r12,0x2
   140034a40:	test   r13d,r13d
   140034a43:	jg     0x140034a06
   140034a45:	mov    rsi,QWORD PTR [rbp-0x31]
   140034a49:	xor    r15d,r15d
   140034a4c:	sub    edi,r11d
   140034a4f:	add    rdx,0x2
   140034a53:	add    r14d,r11d
   140034a56:	test   edi,edi
   140034a58:	jg     0x1400349e5
   140034a5a:	mov    r10d,DWORD PTR [rbp-0x21]
   140034a5e:	mov    r8d,DWORD PTR [rbp-0x29]
   140034a62:	mov    eax,0xc002
   140034a67:	add    r9w,ax
   140034a6b:	mov    ebx,0xffff
   140034a70:	mov    r14d,0x80000000
   140034a76:	test   r9w,r9w
   140034a7a:	jle    0x140034ab8
   140034a7c:	test   r14d,r10d
   140034a7f:	jne    0x140034ab2
   140034a81:	mov    edi,DWORD PTR [rbp-0x25]
   140034a84:	mov    edx,r8d
   140034a87:	add    r10d,r10d
   140034a8a:	shr    edx,0x1f
   140034a8d:	add    r8d,r8d
   140034a90:	mov    ecx,edi
   140034a92:	shr    ecx,0x1f
   140034a95:	lea    eax,[rdi+rdi*1]
   140034a98:	add    r9w,bx
   140034a9c:	or     eax,edx
   140034a9e:	or     r10d,ecx
   140034aa1:	mov    DWORD PTR [rbp-0x29],r8d
   140034aa5:	mov    DWORD PTR [rbp-0x25],eax
   140034aa8:	mov    DWORD PTR [rbp-0x21],r10d
   140034aac:	test   r9w,r9w
   140034ab0:	jg     0x140034a7c
   140034ab2:	test   r9w,r9w
   140034ab6:	jg     0x140034b25
   140034ab8:	add    r9w,bx
   140034abc:	jns    0x140034b25
   140034abe:	movzx  eax,r9w
   140034ac2:	neg    ax
   140034ac5:	movzx  edx,ax
   140034ac8:	add    r9w,dx
   140034acc:	mov    WORD PTR [rbp-0x5d],r9w
   140034ad1:	mov    r9d,DWORD PTR [rbp-0x65]
   140034ad5:	test   BYTE PTR [rbp-0x29],r11b
   140034ad9:	je     0x140034ade
   140034adb:	add    r9d,r11d
   140034ade:	mov    edi,DWORD PTR [rbp-0x25]
   140034ae1:	mov    eax,r10d
   140034ae4:	shr    r8d,1
   140034ae7:	mov    ecx,edi
   140034ae9:	shl    eax,0x1f
   140034aec:	shr    edi,1
   140034aee:	shl    ecx,0x1f
   140034af1:	or     edi,eax
   140034af3:	shr    r10d,1
   140034af6:	or     r8d,ecx
   140034af9:	mov    DWORD PTR [rbp-0x25],edi
   140034afc:	mov    DWORD PTR [rbp-0x29],r8d
   140034b00:	sub    rdx,r11
   140034b03:	jne    0x140034ad5
   140034b05:	test   r9d,r9d
   140034b08:	movzx  r9d,WORD PTR [rbp-0x5d]
   140034b0d:	mov    DWORD PTR [rbp-0x21],r10d
   140034b11:	je     0x140034b25
   140034b13:	movzx  eax,r8w
   140034b17:	or     ax,r11w
   140034b1b:	mov    WORD PTR [rbp-0x29],ax
   140034b1f:	mov    r8d,DWORD PTR [rbp-0x29]
   140034b23:	jmp    0x140034b29
   140034b25:	movzx  eax,WORD PTR [rbp-0x29]
   140034b29:	mov    ecx,0x8000
   140034b2e:	cmp    ax,cx
   140034b31:	ja     0x140034b43
   140034b33:	and    r8d,0x1ffff
   140034b3a:	cmp    r8d,0x18000
   140034b41:	jne    0x140034b8b
   140034b43:	mov    eax,DWORD PTR [rbp-0x27]
   140034b46:	or     edx,0xffffffff
   140034b49:	cmp    eax,edx
   140034b4b:	jne    0x140034b85
   140034b4d:	mov    eax,DWORD PTR [rbp-0x23]
   140034b50:	mov    DWORD PTR [rbp-0x27],r15d
   140034b54:	cmp    eax,edx
   140034b56:	jne    0x140034b79
   140034b58:	movzx  eax,WORD PTR [rbp-0x1f]
   140034b5c:	mov    DWORD PTR [rbp-0x23],r15d
   140034b60:	cmp    ax,bx
   140034b63:	jne    0x140034b6f
   140034b65:	mov    WORD PTR [rbp-0x1f],cx
   140034b69:	add    r9w,r11w
   140034b6d:	jmp    0x140034b7f
   140034b6f:	add    ax,r11w
   140034b73:	mov    WORD PTR [rbp-0x1f],ax
   140034b77:	jmp    0x140034b7f
   140034b79:	add    eax,r11d
   140034b7c:	mov    DWORD PTR [rbp-0x23],eax
   140034b7f:	mov    r10d,DWORD PTR [rbp-0x21]
   140034b83:	jmp    0x140034b8b
   140034b85:	add    eax,r11d
   140034b88:	mov    DWORD PTR [rbp-0x27],eax
   140034b8b:	mov    r13d,0x7fff
   140034b91:	mov    r12d,0x5
   140034b97:	mov    edi,0x7fffffff
   140034b9c:	cmp    r9w,r13w
   140034ba0:	jb     0x140034baf
   140034ba2:	movzx  eax,WORD PTR [rbp-0x69]
   140034ba6:	mov    r10d,DWORD PTR [rbp-0x51]
   140034baa:	neg    ax
   140034bad:	jmp    0x140034be1
   140034baf:	movzx  eax,WORD PTR [rbp-0x27]
   140034bb3:	or     r9w,WORD PTR [rbp-0x69]
   140034bb8:	mov    DWORD PTR [rbp-0x13],r10d
   140034bbc:	mov    r10d,DWORD PTR [rbp-0x51]
   140034bc0:	mov    WORD PTR [rbp-0x19],ax
   140034bc4:	mov    eax,DWORD PTR [rbp-0x25]
   140034bc7:	mov    DWORD PTR [rbp-0x17],eax
   140034bca:	mov    r8d,DWORD PTR [rbp-0x15]
   140034bce:	mov    edx,DWORD PTR [rbp-0x19]
   140034bd1:	mov    WORD PTR [rbp-0xf],r9w
   140034bd6:	jmp    0x140034bfb
   140034bd8:	mov    r13d,0x7fff
   140034bde:	neg    bx
   140034be1:	sbb    eax,eax
   140034be3:	mov    DWORD PTR [rbp-0x15],r15d
   140034be7:	and    eax,r14d
   140034bea:	add    eax,0x7fff8000
   140034bef:	mov    DWORD PTR [rbp-0x11],eax
   140034bf2:	mov    edx,r15d
   140034bf5:	mov    r8d,r15d
   140034bf8:	mov    DWORD PTR [rbp-0x19],edx
   140034bfb:	mov    r9,QWORD PTR [rbp-0x59]
   140034bff:	test   r10d,r10d
   140034c02:	jne    0x1400348d2
   140034c08:	mov    rbx,QWORD PTR [rbp-0x41]
   140034c0c:	mov    ecx,DWORD PTR [rbp-0x61]
   140034c0f:	mov    esi,0xbffd
   140034c14:	jmp    0x140034c1d
   140034c16:	mov    r8d,DWORD PTR [rbp-0x15]
   140034c1a:	mov    edx,DWORD PTR [rbp-0x19]
   140034c1d:	mov    eax,DWORD PTR [rbp-0x11]
   140034c20:	mov    r9d,0x3fff
   140034c26:	shr    eax,0x10
   140034c29:	cmp    ax,r9w
   140034c2d:	jb     0x140034ee9
   140034c33:	add    cx,r11w
   140034c37:	mov    r9d,0x8000
   140034c3d:	mov    DWORD PTR [rbp-0x65],r15d
   140034c41:	lea    r10d,[r9-0x1]
   140034c45:	mov    DWORD PTR [rbp-0x61],ecx
   140034c48:	movzx  ecx,WORD PTR [rbp+0x1]
   140034c4c:	movzx  r13d,cx
   140034c50:	and    cx,r10w
   140034c54:	mov    QWORD PTR [rbp-0x29],0x0
   140034c5c:	xor    r13w,ax
   140034c60:	and    ax,r10w
   140034c64:	mov    DWORD PTR [rbp-0x21],r15d
   140034c68:	and    r13w,r9w
   140034c6c:	lea    r9d,[rax+rcx*1]
   140034c70:	cmp    ax,r10w
   140034c74:	jae    0x140034ed2
   140034c7a:	cmp    cx,r10w
   140034c7e:	jae    0x140034ed2
   140034c84:	cmp    r9w,si
   140034c88:	ja     0x140034ed2
   140034c8e:	mov    r10d,0x3fbf
   140034c94:	cmp    r9w,r10w
   140034c98:	ja     0x140034ca3
   140034c9a:	mov    DWORD PTR [rbp-0x11],r15d
   140034c9e:	jmp    0x140034ee3
   140034ca3:	test   ax,ax
   140034ca6:	jne    0x140034cc4
   140034ca8:	add    r9w,r11w
   140034cac:	test   DWORD PTR [rbp-0x11],edi
   140034caf:	jne    0x140034cc4
   140034cb1:	test   r8d,r8d
   140034cb4:	jne    0x140034cc4
   140034cb6:	test   edx,edx
   140034cb8:	jne    0x140034cc4
   140034cba:	mov    WORD PTR [rbp-0xf],r15w
   140034cbf:	jmp    0x140034ee9
   140034cc4:	test   cx,cx
   140034cc7:	jne    0x140034cde
   140034cc9:	add    r9w,r11w
   140034ccd:	test   DWORD PTR [rbp-0x1],edi
   140034cd0:	jne    0x140034cde
   140034cd2:	cmp    DWORD PTR [rbp-0x5],r15d
   140034cd6:	jne    0x140034cde
   140034cd8:	cmp    DWORD PTR [rbp-0x9],r15d
   140034cdc:	je     0x140034c9a
   140034cde:	mov    edi,r15d
   140034ce1:	lea    rcx,[rbp-0x29]
   140034ce5:	lea    eax,[rdi+rdi*1]
   140034ce8:	xor    ebx,ebx
   140034cea:	mov    r15d,r12d
   140034ced:	movsxd rdx,eax
   140034cf0:	test   r12d,r12d
   140034cf3:	jle    0x140034d47
   140034cf5:	lea    r14,[rbp-0x19]
   140034cf9:	mov    r12d,edi
   140034cfc:	lea    rsi,[rbp-0x1]
   140034d00:	and    r12d,r11d
   140034d03:	add    r14,rdx
   140034d06:	movzx  eax,WORD PTR [r14]
   140034d0a:	movzx  edx,WORD PTR [rsi]
   140034d0d:	mov    r8d,ebx
   140034d10:	imul   edx,eax
   140034d13:	mov    eax,DWORD PTR [rcx]
   140034d15:	lea    r10d,[rax+rdx*1]
   140034d19:	cmp    r10d,eax
   140034d1c:	jb     0x140034d23
   140034d1e:	cmp    r10d,edx
   140034d21:	jae    0x140034d26
   140034d23:	mov    r8d,r11d
   140034d26:	mov    DWORD PTR [rcx],r10d
   140034d29:	test   r8d,r8d
   140034d2c:	je     0x140034d33
   140034d2e:	add    WORD PTR [rcx+0x4],r11w
   140034d33:	sub    r15d,r11d
   140034d36:	add    r14,0x2
   140034d3a:	sub    rsi,0x2
   140034d3e:	test   r15d,r15d
   140034d41:	jg     0x140034d06
   140034d43:	mov    r12d,DWORD PTR [rbp-0x49]
   140034d47:	sub    r12d,r11d
   140034d4a:	add    rcx,0x2
   140034d4e:	add    edi,r11d
   140034d51:	xor    r15d,r15d
   140034d54:	mov    DWORD PTR [rbp-0x49],r12d
   140034d58:	test   r12d,r12d
   140034d5b:	jg     0x140034ce5
   140034d5d:	mov    rbx,QWORD PTR [rbp-0x41]
   140034d61:	mov    r8d,DWORD PTR [rbp-0x21]
   140034d65:	mov    r10d,DWORD PTR [rbp-0x29]
   140034d69:	mov    eax,0xc002
   140034d6e:	mov    esi,0x80000000
   140034d73:	mov    r14d,0xffff
   140034d79:	add    r9w,ax
   140034d7d:	test   r9w,r9w
   140034d81:	jle    0x140034dbf
   140034d83:	test   esi,r8d
   140034d86:	jne    0x140034db9
   140034d88:	mov    edi,DWORD PTR [rbp-0x25]
   140034d8b:	mov    edx,r10d
   140034d8e:	add    r8d,r8d
   140034d91:	shr    edx,0x1f
   140034d94:	add    r10d,r10d
   140034d97:	mov    ecx,edi
   140034d99:	shr    ecx,0x1f
   140034d9c:	lea    eax,[rdi+rdi*1]
   140034d9f:	add    r9w,r14w
   140034da3:	or     eax,edx
   140034da5:	or     r8d,ecx
   140034da8:	mov    DWORD PTR [rbp-0x29],r10d
   140034dac:	mov    DWORD PTR [rbp-0x25],eax
   140034daf:	mov    DWORD PTR [rbp-0x21],r8d
   140034db3:	test   r9w,r9w
   140034db7:	jg     0x140034d83
   140034db9:	test   r9w,r9w
   140034dbd:	jg     0x140034e24
   140034dbf:	add    r9w,r14w
   140034dc3:	jns    0x140034e24
   140034dc5:	mov    ebx,DWORD PTR [rbp-0x65]
   140034dc8:	movzx  eax,r9w
   140034dcc:	neg    ax
   140034dcf:	movzx  edx,ax
   140034dd2:	add    r9w,dx
   140034dd6:	test   BYTE PTR [rbp-0x29],r11b
   140034dda:	je     0x140034ddf
   140034ddc:	add    ebx,r11d
   140034ddf:	mov    edi,DWORD PTR [rbp-0x25]
   140034de2:	mov    eax,r8d
   140034de5:	shr    r10d,1
   140034de8:	mov    ecx,edi
   140034dea:	shl    eax,0x1f
   140034ded:	shr    edi,1
   140034def:	shl    ecx,0x1f
   140034df2:	or     edi,eax
   140034df4:	shr    r8d,1
   140034df7:	or     r10d,ecx
   140034dfa:	mov    DWORD PTR [rbp-0x25],edi
   140034dfd:	mov    DWORD PTR [rbp-0x29],r10d
   140034e01:	sub    rdx,r11
   140034e04:	jne    0x140034dd6
   140034e06:	test   ebx,ebx
   140034e08:	mov    rbx,QWORD PTR [rbp-0x41]
   140034e0c:	mov    DWORD PTR [rbp-0x21],r8d
   140034e10:	je     0x140034e24
   140034e12:	movzx  eax,r10w
   140034e16:	or     ax,r11w
   140034e1a:	mov    WORD PTR [rbp-0x29],ax
   140034e1e:	mov    r10d,DWORD PTR [rbp-0x29]
   140034e22:	jmp    0x140034e28
   140034e24:	movzx  eax,WORD PTR [rbp-0x29]
   140034e28:	mov    ecx,0x8000
   140034e2d:	cmp    ax,cx
   140034e30:	ja     0x140034e42
   140034e32:	and    r10d,0x1ffff
   140034e39:	cmp    r10d,0x18000
   140034e40:	jne    0x140034e8b
   140034e42:	mov    eax,DWORD PTR [rbp-0x27]
   140034e45:	or     edx,0xffffffff
   140034e48:	cmp    eax,edx
   140034e4a:	jne    0x140034e85
   140034e4c:	mov    eax,DWORD PTR [rbp-0x23]
   140034e4f:	mov    DWORD PTR [rbp-0x27],r15d
   140034e53:	cmp    eax,edx
   140034e55:	jne    0x140034e79
   140034e57:	movzx  eax,WORD PTR [rbp-0x1f]
   140034e5b:	mov    DWORD PTR [rbp-0x23],r15d
   140034e5f:	cmp    ax,r14w
   140034e63:	jne    0x140034e6f
   140034e65:	mov    WORD PTR [rbp-0x1f],cx
   140034e69:	add    r9w,r11w
   140034e6d:	jmp    0x140034e7f
   140034e6f:	add    ax,r11w
   140034e73:	mov    WORD PTR [rbp-0x1f],ax
   140034e77:	jmp    0x140034e7f
   140034e79:	add    eax,r11d
   140034e7c:	mov    DWORD PTR [rbp-0x23],eax
   140034e7f:	mov    r8d,DWORD PTR [rbp-0x21]
   140034e83:	jmp    0x140034e8b
   140034e85:	add    eax,r11d
   140034e88:	mov    DWORD PTR [rbp-0x27],eax
   140034e8b:	mov    eax,0x7fff
   140034e90:	cmp    r9w,ax
   140034e94:	jb     0x140034eae
   140034e96:	neg    r13w
   140034e9a:	mov    r8d,r15d
   140034e9d:	mov    edx,r15d
   140034ea0:	sbb    eax,eax
   140034ea2:	and    eax,esi
   140034ea4:	add    eax,0x7fff8000
   140034ea9:	mov    DWORD PTR [rbp-0x11],eax
   140034eac:	jmp    0x140034eee
   140034eae:	movzx  eax,WORD PTR [rbp-0x27]
   140034eb2:	or     r9w,r13w
   140034eb6:	mov    DWORD PTR [rbp-0x13],r8d
   140034eba:	mov    WORD PTR [rbp-0x19],ax
   140034ebe:	mov    eax,DWORD PTR [rbp-0x25]
   140034ec1:	mov    WORD PTR [rbp-0xf],r9w
   140034ec6:	mov    DWORD PTR [rbp-0x17],eax
   140034ec9:	mov    r8d,DWORD PTR [rbp-0x15]
   140034ecd:	mov    edx,DWORD PTR [rbp-0x19]
   140034ed0:	jmp    0x140034eee
   140034ed2:	neg    r13w
   140034ed6:	sbb    eax,eax
   140034ed8:	and    eax,r14d
   140034edb:	add    eax,0x7fff8000
   140034ee0:	mov    DWORD PTR [rbp-0x11],eax
   140034ee3:	mov    edx,r15d
   140034ee6:	mov    r8d,r15d
   140034ee9:	mov    ecx,0x8000
   140034eee:	mov    eax,DWORD PTR [rbp-0x61]
   140034ef1:	mov    r14d,DWORD PTR [rbp-0x4d]
   140034ef5:	mov    WORD PTR [rbx],ax
   140034ef8:	test   BYTE PTR [rbp-0x39],r11b
   140034efc:	je     0x140034f1b
   140034efe:	cwde   
   140034eff:	add    r14d,eax
   140034f02:	test   r14d,r14d
   140034f05:	jg     0x140034f1b
   140034f07:	cmp    WORD PTR [rbp-0x67],cx
   140034f0b:	mov    eax,0x20
   140034f10:	lea    ecx,[rax+0xd]
   140034f13:	cmove  eax,ecx
   140034f16:	jmp    0x14003475c
   140034f1b:	mov    r9d,DWORD PTR [rbp-0x11]
   140034f1f:	mov    eax,0x15
   140034f24:	mov    WORD PTR [rbp-0xf],r15w
   140034f29:	mov    esi,DWORD PTR [rbp-0x11]
   140034f2c:	cmp    r14d,eax
   140034f2f:	lea    r10d,[rax-0xd]
   140034f33:	cmovg  r14d,eax
   140034f37:	shr    r9d,0x10
   140034f3b:	sub    r9d,0x3ffe
   140034f42:	mov    ecx,r8d
   140034f45:	mov    eax,edx
   140034f47:	add    esi,esi
   140034f49:	add    r8d,r8d
   140034f4c:	shr    eax,0x1f
   140034f4f:	shr    ecx,0x1f
   140034f52:	or     r8d,eax
   140034f55:	or     esi,ecx
   140034f57:	add    edx,edx
   140034f59:	sub    r10,r11
   140034f5c:	jne    0x140034f42
   140034f5e:	mov    DWORD PTR [rbp-0x15],r8d
   140034f62:	mov    DWORD PTR [rbp-0x19],edx
   140034f65:	test   r9d,r9d
   140034f68:	jns    0x140034f9c
   140034f6a:	neg    r9d
   140034f6d:	movzx  r10d,r9b
   140034f71:	test   r10d,r10d
   140034f74:	jle    0x140034f9c
   140034f76:	mov    ecx,r8d
   140034f79:	mov    eax,esi
   140034f7b:	shr    edx,1
   140034f7d:	shr    r8d,1
   140034f80:	shl    eax,0x1f
   140034f83:	shl    ecx,0x1f
   140034f86:	sub    r10d,r11d
   140034f89:	shr    esi,1
   140034f8b:	or     r8d,eax
   140034f8e:	or     edx,ecx
   140034f90:	test   r10d,r10d
   140034f93:	jg     0x140034f76
   140034f95:	mov    DWORD PTR [rbp-0x15],r8d
   140034f99:	mov    DWORD PTR [rbp-0x19],edx
   140034f9c:	lea    r12d,[r14+0x1]
   140034fa0:	lea    rdi,[rbx+0x4]
   140034fa4:	mov    r10,rdi
   140034fa7:	test   r12d,r12d
   140034faa:	jle    0x14003507e
   140034fb0:	mov    r15,QWORD PTR [rbp-0x19]
   140034fb4:	mov    ecx,r8d
   140034fb7:	add    r8d,r8d
   140034fba:	shr    ecx,0x1f
   140034fbd:	mov    eax,edx
   140034fbf:	add    edx,edx
   140034fc1:	shr    eax,0x1f
   140034fc4:	lea    r9d,[rsi+rsi*1]
   140034fc8:	mov    QWORD PTR [rbp+0x7],r15
   140034fcc:	or     r8d,eax
   140034fcf:	or     r9d,ecx
   140034fd2:	mov    eax,edx
   140034fd4:	mov    ecx,r8d
   140034fd7:	shr    eax,0x1f
   140034fda:	add    r8d,r8d
   140034fdd:	or     r8d,eax
   140034fe0:	add    edx,edx
   140034fe2:	add    r9d,r9d
   140034fe5:	shr    ecx,0x1f
   140034fe8:	mov    eax,r15d
   140034feb:	lea    r13d,[rax+rdx*1]
   140034fef:	or     r9d,ecx
   140034ff2:	cmp    r13d,edx
   140034ff5:	jb     0x140034ffc
   140034ff7:	cmp    r13d,eax
   140034ffa:	jae    0x140035019
   140034ffc:	lea    eax,[r8+0x1]
   140035000:	xor    ecx,ecx
   140035002:	cmp    eax,r8d
   140035005:	jb     0x14003500c
   140035007:	cmp    eax,r11d
   14003500a:	jae    0x14003500f
   14003500c:	mov    ecx,r11d
   14003500f:	mov    r8d,eax
   140035012:	test   ecx,ecx
   140035014:	je     0x140035019
   140035016:	add    r9d,r11d
   140035019:	shr    r15,0x20
   14003501d:	lea    r14d,[r8+r15*1]
   140035021:	cmp    r14d,r8d
   140035024:	jb     0x14003502b
   140035026:	cmp    r14d,r15d
   140035029:	jae    0x14003502e
   14003502b:	add    r9d,r11d
   14003502e:	add    r9d,esi
   140035031:	xor    r15d,r15d
   140035034:	mov    eax,r13d
   140035037:	shr    eax,0x1f
   14003503a:	lea    r8d,[r14+r14*1]
   14003503e:	mov    ecx,r14d
   140035041:	or     r8d,eax
   140035044:	shr    ecx,0x1f
   140035047:	lea    eax,[r9+r9*1]
   14003504b:	or     eax,ecx
   14003504d:	lea    edx,[r13*2+0x0]
   140035055:	sub    r12d,r11d
   140035058:	mov    DWORD PTR [rbp-0x11],eax
   14003505b:	shr    eax,0x18
   14003505e:	mov    DWORD PTR [rbp-0x19],edx
   140035061:	add    al,0x30
   140035063:	mov    DWORD PTR [rbp-0x15],r8d
   140035067:	mov    BYTE PTR [rbp-0xe],r15b
   14003506b:	mov    BYTE PTR [r10],al
   14003506e:	add    r10,r11
   140035071:	test   r12d,r12d
   140035074:	jle    0x14003507e
   140035076:	mov    esi,DWORD PTR [rbp-0x11]
   140035079:	jmp    0x140034fb0
   14003507e:	sub    r10,r11
   140035081:	mov    al,BYTE PTR [r10]
   140035084:	sub    r10,r11
   140035087:	cmp    al,0x35
   140035089:	jl     0x1400350f5
   14003508b:	jmp    0x14003509a
   14003508d:	cmp    BYTE PTR [r10],0x39
   140035091:	jne    0x14003509f
   140035093:	mov    BYTE PTR [r10],0x30
   140035097:	sub    r10,r11
   14003509a:	cmp    r10,rdi
   14003509d:	jae    0x14003508d
   14003509f:	cmp    r10,rdi
   1400350a2:	jae    0x1400350ab
   1400350a4:	add    r10,r11
   1400350a7:	add    WORD PTR [rbx],r11w
   1400350ab:	add    BYTE PTR [r10],r11b
   1400350ae:	sub    r10b,bl
   1400350b1:	sub    r10b,0x3
   1400350b5:	movsx  rax,r10b
   1400350b9:	mov    BYTE PTR [rbx+0x3],r10b
   1400350bd:	mov    BYTE PTR [rax+rbx*1+0x4],r15b
   1400350c2:	mov    eax,r11d
   1400350c5:	mov    rcx,QWORD PTR [rbp+0x17]
   1400350c9:	xor    rcx,rsp
   1400350cc:	call   0x140020e50
   1400350d1:	mov    rbx,QWORD PTR [rsp+0x108]
   1400350d9:	add    rsp,0xc0
   1400350e0:	pop    r15
   1400350e2:	pop    r14
   1400350e4:	pop    r13
   1400350e6:	pop    r12
   1400350e8:	pop    rdi
   1400350e9:	pop    rsi
   1400350ea:	pop    rbp
   1400350eb:	ret    
   1400350ec:	cmp    BYTE PTR [r10],0x30
   1400350f0:	jne    0x1400350fa
   1400350f2:	sub    r10,r11
   1400350f5:	cmp    r10,rdi
   1400350f8:	jae    0x1400350ec
   1400350fa:	cmp    r10,rdi
   1400350fd:	jae    0x1400350ae
   1400350ff:	mov    eax,0x20
   140035104:	mov    r9d,0x8000
   14003510a:	mov    WORD PTR [rbx],r15w
   14003510e:	cmp    WORD PTR [rbp-0x67],r9w
   140035113:	lea    ecx,[rax+0xd]
   140035116:	mov    BYTE PTR [rbx+0x3],r11b
   14003511a:	cmove  eax,ecx
   14003511d:	mov    BYTE PTR [rbx+0x2],al
   140035120:	mov    BYTE PTR [rdi],0x30
   140035123:	jmp    0x140034769
   140035128:	xor    r9d,r9d
   14003512b:	xor    r8d,r8d
   14003512e:	xor    edx,edx
   140035130:	xor    ecx,ecx
   140035132:	mov    QWORD PTR [rsp+0x20],r15
   140035137:	call   0x140024574
   14003513c:	int3   
   14003513d:	xor    r9d,r9d
   140035140:	xor    r8d,r8d
   140035143:	xor    edx,edx
   140035145:	xor    ecx,ecx
   140035147:	mov    QWORD PTR [rsp+0x20],r15
   14003514c:	call   0x140024574
   140035151:	int3   
   140035152:	xor    r9d,r9d
   140035155:	xor    r8d,r8d
   140035158:	xor    edx,edx
   14003515a:	xor    ecx,ecx
   14003515c:	mov    QWORD PTR [rsp+0x20],r15
   140035161:	call   0x140024574
   140035166:	int3   
   140035167:	xor    r9d,r9d
   14003516a:	xor    r8d,r8d
   14003516d:	xor    edx,edx
   14003516f:	xor    ecx,ecx
   140035171:	mov    QWORD PTR [rsp+0x20],r15
   140035176:	call   0x140024574
   14003517b:	int3   
   14003517c:	mov    rax,rsp
   14003517f:	mov    QWORD PTR [rax+0x8],rbx
   140035183:	mov    QWORD PTR [rax+0x10],rbp
   140035187:	mov    QWORD PTR [rax+0x18],rsi
   14003518b:	mov    QWORD PTR [rax+0x20],rdi
   14003518f:	push   r13
   140035191:	push   r14
   140035193:	push   r15
   140035195:	sub    rsp,0x10
   140035199:	and    DWORD PTR [r8],0x0
   14003519d:	and    DWORD PTR [r8+0x4],0x0
   1400351a2:	and    DWORD PTR [r8+0x8],0x0
   1400351a7:	mov    r10,r8
   1400351aa:	mov    edi,edx
   1400351ac:	mov    rbp,rcx
   1400351af:	mov    ebx,0x404e
   1400351b4:	test   edx,edx
   1400351b6:	je     0x1400352fb
   1400351bc:	xor    r11d,r11d
   1400351bf:	xor    r8d,r8d
   1400351c2:	xor    r9d,r9d
   1400351c5:	lea    r13d,[r11+0x1]
   1400351c9:	mov    rsi,QWORD PTR [r10]
   1400351cc:	mov    r15d,DWORD PTR [r10+0x8]
   1400351d0:	mov    ecx,r8d
   1400351d3:	shr    ecx,0x1f
   1400351d6:	add    r8d,r8d
   1400351d9:	add    r9d,r9d
   1400351dc:	or     r9d,ecx
   1400351df:	lea    edx,[r11+r11*1]
   1400351e3:	mov    eax,r11d
   1400351e6:	shr    eax,0x1f
   1400351e9:	add    r9d,r9d
   1400351ec:	mov    QWORD PTR [rsp],rsi
   1400351f0:	or     r8d,eax
   1400351f3:	mov    eax,edx
   1400351f5:	add    edx,edx
   1400351f7:	mov    ecx,r8d
   1400351fa:	shr    eax,0x1f
   1400351fd:	add    r8d,r8d
   140035200:	shr    ecx,0x1f
   140035203:	or     r8d,eax
   140035206:	xor    eax,eax
   140035208:	or     r9d,ecx
   14003520b:	mov    ecx,esi
   14003520d:	mov    DWORD PTR [r10],edx
   140035210:	lea    r14d,[rdx+rcx*1]
   140035214:	mov    DWORD PTR [r10+0x4],r8d
   140035218:	mov    DWORD PTR [r10+0x8],r9d
   14003521c:	cmp    r14d,edx
   14003521f:	jb     0x140035226
   140035221:	cmp    r14d,ecx
   140035224:	jae    0x140035229
   140035226:	mov    eax,r13d
   140035229:	mov    DWORD PTR [r10],r14d
   14003522c:	test   eax,eax
   14003522e:	je     0x140035254
   140035230:	mov    eax,r8d
   140035233:	inc    r8d
   140035236:	xor    ecx,ecx
   140035238:	cmp    r8d,eax
   14003523b:	jb     0x140035242
   14003523d:	cmp    r8d,r13d
   140035240:	jae    0x140035245
   140035242:	mov    ecx,r13d
   140035245:	mov    DWORD PTR [r10+0x4],r8d
   140035249:	test   ecx,ecx
   14003524b:	je     0x140035254
   14003524d:	inc    r9d
   140035250:	mov    DWORD PTR [r10+0x8],r9d
   140035254:	shr    rsi,0x20
   140035258:	xor    eax,eax
   14003525a:	lea    r11d,[r8+rsi*1]
   14003525e:	cmp    r11d,r8d
   140035261:	jb     0x140035268
   140035263:	cmp    r11d,esi
   140035266:	jae    0x14003526b
   140035268:	mov    eax,r13d
   14003526b:	mov    DWORD PTR [r10+0x4],r11d
   14003526f:	test   eax,eax
   140035271:	je     0x14003527a
   140035273:	add    r9d,r13d
   140035276:	mov    DWORD PTR [r10+0x8],r9d
   14003527a:	add    r9d,r15d
   14003527d:	lea    edx,[r14+r14*1]
   140035281:	mov    ecx,r11d
   140035284:	shr    ecx,0x1f
   140035287:	lea    r8d,[r11+r11*1]
   14003528b:	add    r9d,r9d
   14003528e:	or     r9d,ecx
   140035291:	mov    eax,r14d
   140035294:	mov    DWORD PTR [r10],edx
   140035297:	shr    eax,0x1f
   14003529a:	mov    DWORD PTR [r10+0x8],r9d
   14003529e:	or     r8d,eax
   1400352a1:	xor    eax,eax
   1400352a3:	mov    DWORD PTR [r10+0x4],r8d
   1400352a7:	movsx  ecx,BYTE PTR [rbp+0x0]
   1400352ab:	lea    r11d,[rdx+rcx*1]
   1400352af:	cmp    r11d,edx
   1400352b2:	jb     0x1400352b9
   1400352b4:	cmp    r11d,ecx
   1400352b7:	jae    0x1400352bc
   1400352b9:	mov    eax,r13d
   1400352bc:	mov    DWORD PTR [r10],r11d
   1400352bf:	test   eax,eax
   1400352c1:	je     0x1400352e8
   1400352c3:	lea    eax,[r8+0x1]
   1400352c7:	xor    ecx,ecx
   1400352c9:	cmp    eax,r8d
   1400352cc:	jb     0x1400352d3
   1400352ce:	cmp    eax,r13d
   1400352d1:	jae    0x1400352d6
   1400352d3:	mov    ecx,r13d
   1400352d6:	mov    r8d,eax
   1400352d9:	mov    DWORD PTR [r10+0x4],eax
   1400352dd:	test   ecx,ecx
   1400352df:	je     0x1400352e8
   1400352e1:	inc    r9d
   1400352e4:	mov    DWORD PTR [r10+0x8],r9d
   1400352e8:	add    rbp,r13
   1400352eb:	mov    DWORD PTR [r10+0x4],r8d
   1400352ef:	mov    DWORD PTR [r10+0x8],r9d
   1400352f3:	dec    edi
   1400352f5:	jne    0x1400351c9
   1400352fb:	cmp    DWORD PTR [r10+0x8],0x0
   140035300:	jne    0x14003533c
   140035302:	mov    r8d,DWORD PTR [r10+0x4]
   140035306:	mov    edx,DWORD PTR [r10]
   140035309:	mov    eax,r8d
   14003530c:	mov    r9d,r8d
   14003530f:	shl    eax,0x10
   140035312:	mov    ecx,edx
   140035314:	shl    edx,0x10
   140035317:	shr    ecx,0x10
   14003531a:	shr    r9d,0x10
   14003531e:	mov    DWORD PTR [r10],edx
   140035321:	mov    r8d,ecx
   140035324:	or     r8d,eax
   140035327:	mov    eax,0xfff0
   14003532c:	add    bx,ax
   14003532f:	test   r9d,r9d
   140035332:	je     0x140035306
   140035334:	mov    DWORD PTR [r10+0x4],r8d
   140035338:	mov    DWORD PTR [r10+0x8],r9d
   14003533c:	mov    edx,DWORD PTR [r10+0x8]
   140035340:	mov    r11d,0x8000
   140035346:	test   r11d,edx
   140035349:	jne    0x140035383
   14003534b:	mov    r9d,DWORD PTR [r10]
   14003534e:	mov    r8d,DWORD PTR [r10+0x4]
   140035352:	mov    ecx,r8d
   140035355:	mov    eax,r9d
   140035358:	add    r8d,r8d
   14003535b:	shr    eax,0x1f
   14003535e:	add    edx,edx
   140035360:	shr    ecx,0x1f
   140035363:	or     r8d,eax
   140035366:	mov    eax,0xffff
   14003536b:	or     edx,ecx
   14003536d:	add    bx,ax
   140035370:	add    r9d,r9d
   140035373:	test   r11d,edx
   140035376:	je     0x140035352
   140035378:	mov    DWORD PTR [r10],r9d
   14003537b:	mov    DWORD PTR [r10+0x4],r8d
   14003537f:	mov    DWORD PTR [r10+0x8],edx
   140035383:	mov    rbp,QWORD PTR [rsp+0x38]
   140035388:	mov    rsi,QWORD PTR [rsp+0x40]
   14003538d:	mov    rdi,QWORD PTR [rsp+0x48]
   140035392:	mov    WORD PTR [r10+0xa],bx
   140035397:	mov    rbx,QWORD PTR [rsp+0x30]
   14003539c:	add    rsp,0x10
   1400353a0:	pop    r15
   1400353a2:	pop    r14
   1400353a4:	pop    r13
   1400353a6:	ret    
   1400353a7:	int3   
   1400353a8:	int3   
   1400353a9:	int3   
   1400353aa:	int3   
   1400353ab:	int3   
   1400353ac:	int3   
   1400353ad:	int3   
   1400353ae:	int3   
   1400353af:	int3   
   1400353b0:	int3   
   1400353b1:	int3   
   1400353b2:	int3   
   1400353b3:	int3   
   1400353b4:	int3   
   1400353b5:	int3   
   1400353b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400353c0:	push   rbx
   1400353c1:	mov    eax,ecx
   1400353c3:	mov    r9,rdx
   1400353c6:	mov    ecx,0x0
   1400353cb:	cpuid  
   1400353cd:	mov    DWORD PTR [r9],eax
   1400353d0:	mov    DWORD PTR [r9+0x4],ebx
   1400353d4:	mov    DWORD PTR [r9+0x8],ecx
   1400353d8:	mov    DWORD PTR [r9+0xc],edx
   1400353dc:	pop    rbx
   1400353dd:	ret    
   1400353de:	int3   
   1400353df:	int3   
   1400353e0:	int3   
   1400353e1:	int3   
   1400353e2:	int3   
   1400353e3:	int3   
   1400353e4:	int3   
   1400353e5:	int3   
   1400353e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400353f0:	xor    rax,rax
   1400353f3:	rdpmc  
   1400353f5:	shl    rdx,0x20
   1400353f9:	or     rax,rdx
   1400353fc:	ret    
   1400353fd:	int3   
   1400353fe:	int3   
   1400353ff:	int3   
   140035400:	int3   
   140035401:	int3   
   140035402:	int3   
   140035403:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140035410:	push   rbx
   140035411:	mov    eax,0x564d5868
   140035416:	mov    ebx,0x0
   14003541b:	mov    ecx,0xa
   140035420:	mov    edx,0x5658
   140035425:	in     eax,dx
   140035426:	mov    rax,0x0
   14003542d:	cmp    ebx,0x564d5868
   140035433:	jne    0x14003543c
   140035435:	mov    rax,0x1
   14003543c:	pop    rbx
   14003543d:	ret    
   14003543e:	int3   
   14003543f:	int3   
   140035440:	rex push rbp
   140035442:	sub    rsp,0x20
   140035446:	mov    rbp,rdx
   140035449:	mov    rcx,QWORD PTR [rbp+0x30]
   14003544d:	add    rsp,0x20
   140035451:	pop    rbp
   140035452:	jmp    0x1400214d0
   140035457:	int3   
   140035458:	rex push rbp
   14003545a:	sub    rsp,0x20
   14003545e:	mov    rbp,rdx
   140035461:	movsxd rcx,DWORD PTR [rbp+0x20]
   140035465:	mov    rax,rcx
   140035468:	mov    rdx,QWORD PTR [rip+0x1d091]        # 0x140052500
   14003546f:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140035473:	call   0x140021520
   140035478:	nop
   140035479:	add    rsp,0x20
   14003547d:	pop    rbp
   14003547e:	ret    
   14003547f:	int3   
   140035480:	rex push rbp
   140035482:	sub    rsp,0x20
   140035486:	mov    rbp,rdx
   140035489:	mov    ecx,0x1
   14003548e:	add    rsp,0x20
   140035492:	pop    rbp
   140035493:	jmp    0x140023820
   140035498:	int3   
   140035499:	rex push rbp
   14003549b:	sub    rsp,0x20
   14003549f:	mov    rbp,rdx
   1400354a2:	add    rsp,0x20
   1400354a6:	pop    rbp
   1400354a7:	jmp    0x140022338
   1400354ac:	int3   
   1400354ad:	rex push rbp
   1400354af:	sub    rsp,0x20
   1400354b3:	mov    rbp,rdx
   1400354b6:	mov    ecx,0xd
   1400354bb:	add    rsp,0x20
   1400354bf:	pop    rbp
   1400354c0:	jmp    0x140023820
   1400354c5:	int3   
   1400354c6:	rex push rbp
   1400354c8:	sub    rsp,0x20
   1400354cc:	mov    rbp,rdx
   1400354cf:	mov    ecx,0xc
   1400354d4:	add    rsp,0x20
   1400354d8:	pop    rbp
   1400354d9:	jmp    0x140023820
   1400354de:	int3   
   1400354df:	rex push rbp
   1400354e1:	sub    rsp,0x20
   1400354e5:	mov    rbp,rdx
   1400354e8:	cmp    DWORD PTR [rbp+0x80],0x0
   1400354ef:	je     0x1400354fc
   1400354f1:	mov    ecx,0x8
   1400354f6:	call   0x140023820
   1400354fb:	nop
   1400354fc:	add    rsp,0x20
   140035500:	pop    rbp
   140035501:	ret    
   140035502:	int3   
   140035503:	rex push rbp
   140035505:	sub    rsp,0x20
   140035509:	mov    rbp,rdx
   14003550c:	mov    ecx,0xb
   140035511:	call   0x140023820
   140035516:	nop
   140035517:	add    rsp,0x20
   14003551b:	pop    rbp
   14003551c:	ret    
   14003551d:	int3   
   14003551e:	rex push rbp
   140035520:	sub    rsp,0x20
   140035524:	mov    rbp,rdx
   140035527:	mov    ecx,0x1
   14003552c:	add    rsp,0x20
   140035530:	pop    rbp
   140035531:	jmp    0x140023820
   140035536:	int3   
   140035537:	rex push rbp
   140035539:	sub    rsp,0x20
   14003553d:	mov    rbp,rdx
   140035540:	mov    rcx,QWORD PTR [rip+0x17fb9]        # 0x14004d500
   140035547:	add    rsp,0x20
   14003554b:	pop    rbp
   14003554c:	rex.W jmp QWORD PTR [rip+0x3c5d]        # 0x1400391b0
   140035553:	int3   
   140035554:	rex push rbp
   140035556:	sub    rsp,0x20
   14003555a:	mov    rbp,rdx
   14003555d:	mov    ecx,0xe
   140035562:	add    rsp,0x20
   140035566:	pop    rbp
   140035567:	jmp    0x140023820
   14003556c:	int3   
   14003556d:	rex push rbp
   14003556f:	sub    rsp,0x20
   140035573:	mov    rbp,rdx
   140035576:	mov    ecx,0xc
   14003557b:	add    rsp,0x20
   14003557f:	pop    rbp
   140035580:	jmp    0x140023820
   140035585:	int3   
   140035586:	rex push rbp
   140035588:	sub    rsp,0x20
   14003558c:	mov    rbp,rdx
   14003558f:	mov    ecx,0xd
   140035594:	add    rsp,0x20
   140035598:	pop    rbp
   140035599:	jmp    0x140023820
   14003559e:	int3   
   14003559f:	int3   
   1400355a0:	rex push rbp
   1400355a2:	sub    rsp,0x20
   1400355a6:	mov    rbp,rdx
   1400355a9:	mov    rax,QWORD PTR [rcx]
   1400355ac:	xor    ecx,ecx
   1400355ae:	cmp    DWORD PTR [rax],0xc0000005
   1400355b4:	sete   cl
   1400355b7:	mov    eax,ecx
   1400355b9:	add    rsp,0x20
   1400355bd:	pop    rbp
   1400355be:	ret    
   1400355bf:	int3   
   1400355c0:	rex push rbp
   1400355c2:	sub    rsp,0x20
   1400355c6:	mov    rbp,rdx
   1400355c9:	cmp    DWORD PTR [rbp+0x60],0x0
   1400355cd:	je     0x1400355d7
   1400355cf:	xor    ecx,ecx
   1400355d1:	call   0x140023820
   1400355d6:	nop
   1400355d7:	add    rsp,0x20
   1400355db:	pop    rbp
   1400355dc:	ret    
   1400355dd:	int3   
   1400355de:	rex push rbp
   1400355e0:	sub    rsp,0x20
   1400355e4:	mov    rbp,rdx
   1400355e7:	mov    ecx,0xa
   1400355ec:	add    rsp,0x20
   1400355f0:	pop    rbp
   1400355f1:	jmp    0x140023820
   1400355f6:	int3   
   1400355f7:	rex push rbp
   1400355f9:	sub    rsp,0x40
   1400355fd:	mov    rbp,rdx
   140035600:	lea    rax,[rbp+0x40]
   140035604:	mov    QWORD PTR [rsp+0x30],rax
   140035609:	mov    rax,QWORD PTR [rbp+0x90]
   140035610:	mov    QWORD PTR [rsp+0x28],rax
   140035615:	mov    rax,QWORD PTR [rbp+0x88]
   14003561c:	mov    QWORD PTR [rsp+0x20],rax
   140035621:	mov    r9,QWORD PTR [rbp+0x80]
   140035628:	mov    r8,QWORD PTR [rbp+0x78]
   14003562c:	mov    rdx,QWORD PTR [rbp+0x70]
   140035630:	call   0x14002ac68
   140035635:	nop
   140035636:	add    rsp,0x40
   14003563a:	pop    rbp
   14003563b:	ret    
   14003563c:	int3   
   14003563d:	rex push rbp
   14003563f:	sub    rsp,0x20
   140035643:	mov    rbp,rdx
   140035646:	mov    rcx,QWORD PTR [rbp+0x38]
   14003564a:	add    rsp,0x20
   14003564e:	pop    rbp
   14003564f:	jmp    0x1400214d0
   140035654:	int3   
   140035655:	rex push rbp
   140035657:	sub    rsp,0x20
   14003565b:	mov    rbp,rdx
   14003565e:	mov    rcx,QWORD PTR [rbp+0x58]
   140035662:	add    rsp,0x20
   140035666:	pop    rbp
   140035667:	jmp    0x1400214d0
   14003566c:	int3   
   14003566d:	rex push rbp
   14003566f:	sub    rsp,0x20
   140035673:	mov    rbp,rdx
   140035676:	mov    ecx,DWORD PTR [rbp+0x40]
   140035679:	add    rsp,0x20
   14003567d:	pop    rbp
   14003567e:	jmp    0x140028380
   140035683:	int3   
   140035684:	rex push rbp
   140035686:	sub    rsp,0x20
   14003568a:	mov    rbp,rdx
   14003568d:	mov    QWORD PTR [rbp+0x70],rcx
   140035691:	mov    QWORD PTR [rbp+0x68],rcx
   140035695:	mov    rax,QWORD PTR [rbp+0x68]
   140035699:	mov    rcx,QWORD PTR [rax]
   14003569c:	mov    QWORD PTR [rbp+0x28],rcx
   1400356a0:	mov    DWORD PTR [rbp+0x20],0x0
   1400356a7:	mov    rax,QWORD PTR [rbp+0x28]
   1400356ab:	cmp    DWORD PTR [rax],0xe06d7363
   1400356b1:	jne    0x140035700
   1400356b3:	mov    rax,QWORD PTR [rbp+0x28]
   1400356b7:	cmp    DWORD PTR [rax+0x18],0x4
   1400356bb:	jne    0x140035700
   1400356bd:	mov    rax,QWORD PTR [rbp+0x28]
   1400356c1:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400356c8:	je     0x1400356e4
   1400356ca:	mov    rax,QWORD PTR [rbp+0x28]
   1400356ce:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400356d5:	je     0x1400356e4
   1400356d7:	mov    rax,QWORD PTR [rbp+0x28]
   1400356db:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400356e2:	jne    0x140035700
   1400356e4:	mov    rdx,QWORD PTR [rbp+0x28]
   1400356e8:	mov    rax,QWORD PTR [rbp+0xd8]
   1400356ef:	mov    rcx,QWORD PTR [rax+0x28]
   1400356f3:	cmp    QWORD PTR [rdx+0x28],rcx
   1400356f7:	jne    0x140035700
   1400356f9:	mov    DWORD PTR [rbp+0x20],0x1
   140035700:	mov    rax,QWORD PTR [rbp+0x28]
   140035704:	cmp    DWORD PTR [rax],0xe06d7363
   14003570a:	jne    0x140035767
   14003570c:	mov    rax,QWORD PTR [rbp+0x28]
   140035710:	cmp    DWORD PTR [rax+0x18],0x4
   140035714:	jne    0x140035767
   140035716:	mov    rax,QWORD PTR [rbp+0x28]
   14003571a:	cmp    DWORD PTR [rax+0x20],0x19930520
   140035721:	je     0x14003573d
   140035723:	mov    rax,QWORD PTR [rbp+0x28]
   140035727:	cmp    DWORD PTR [rax+0x20],0x19930521
   14003572e:	je     0x14003573d
   140035730:	mov    rax,QWORD PTR [rbp+0x28]
   140035734:	cmp    DWORD PTR [rax+0x20],0x19930522
   14003573b:	jne    0x140035767
   14003573d:	mov    rax,QWORD PTR [rbp+0x28]
   140035741:	cmp    QWORD PTR [rax+0x30],0x0
   140035746:	jne    0x140035767
   140035748:	call   0x140021ed4
   14003574d:	mov    DWORD PTR [rax+0x460],0x1
   140035757:	mov    DWORD PTR [rbp+0x20],0x1
   14003575e:	mov    DWORD PTR [rbp+0x30],0x1
   140035765:	jmp    0x14003576e
   140035767:	mov    DWORD PTR [rbp+0x30],0x0
   14003576e:	mov    eax,DWORD PTR [rbp+0x30]
   140035771:	add    rsp,0x20
   140035775:	pop    rbp
   140035776:	ret    
   140035777:	int3   
   140035778:	rex push rbx
   14003577a:	push   rbp
   14003577b:	sub    rsp,0x28
   14003577f:	mov    rbp,rdx
   140035782:	mov    rcx,QWORD PTR [rbp+0x38]
   140035786:	call   0x14002ada4
   14003578b:	cmp    DWORD PTR [rbp+0x20],0x0
   14003578f:	jne    0x1400357cb
   140035791:	mov    rbx,QWORD PTR [rbp+0xd8]
   140035798:	cmp    DWORD PTR [rbx],0xe06d7363
   14003579e:	jne    0x1400357cb
   1400357a0:	cmp    DWORD PTR [rbx+0x18],0x4
   1400357a4:	jne    0x1400357cb
   1400357a6:	mov    eax,DWORD PTR [rbx+0x20]
   1400357a9:	sub    eax,0x19930520
   1400357ae:	cmp    eax,0x2
   1400357b1:	ja     0x1400357cb
   1400357b3:	mov    rcx,QWORD PTR [rbx+0x28]
   1400357b7:	call   0x14002ae34
   1400357bc:	test   eax,eax
   1400357be:	je     0x1400357cb
   1400357c0:	mov    dl,0x1
   1400357c2:	mov    rcx,rbx
   1400357c5:	call   0x14002c57c
   1400357ca:	nop
   1400357cb:	call   0x140021ed4
   1400357d0:	mov    rcx,QWORD PTR [rbp+0xe0]
   1400357d7:	mov    QWORD PTR [rax+0xf0],rcx
   1400357de:	call   0x140021ed4
   1400357e3:	mov    rcx,QWORD PTR [rbp+0x50]
   1400357e7:	mov    QWORD PTR [rax+0xf8],rcx
   1400357ee:	add    rsp,0x28
   1400357f2:	pop    rbp
   1400357f3:	pop    rbx
   1400357f4:	ret    
   1400357f5:	int3   
   1400357f6:	rex push rbp
   1400357f8:	sub    rsp,0x20
   1400357fc:	mov    rbp,rdx
   1400357ff:	xor    eax,eax
   140035801:	cmp    BYTE PTR [rbp+0x38],al
   140035804:	setne  al
   140035807:	add    rsp,0x20
   14003580b:	pop    rbp
   14003580c:	ret    
   14003580d:	int3   
   14003580e:	rex push rbp
   140035810:	sub    rsp,0x20
   140035814:	mov    rbp,rdx
   140035817:	call   0x14002d3f4
   14003581c:	nop
   14003581d:	add    rsp,0x20
   140035821:	pop    rbp
   140035822:	ret    
   140035823:	int3   
   140035824:	rex push rbp
   140035826:	sub    rsp,0x20
   14003582a:	mov    rbp,rdx
   14003582d:	call   0x140021ed4
   140035832:	cmp    DWORD PTR [rax+0x100],0x0
   140035839:	jle    0x140035846
   14003583b:	call   0x140021ed4
   140035840:	dec    DWORD PTR [rax+0x100]
   140035846:	add    rsp,0x20
   14003584a:	pop    rbp
   14003584b:	ret    
   14003584c:	int3   
   14003584d:	mov    QWORD PTR [rsp+0x10],rdx
   140035852:	push   rbp
   140035853:	sub    rsp,0x20
   140035857:	mov    rbp,rdx
   14003585a:	and    QWORD PTR [rbp+0x50],0x0
   14003585f:	lea    rax,[rip+0xffffffffffff88db]        # 0x14002e141
   140035866:	add    rsp,0x20
   14003586a:	pop    rbp
   14003586b:	ret    
   14003586c:	int3   
   14003586d:	rex push rbp
   14003586f:	sub    rsp,0x20
   140035873:	mov    rbp,rdx
   140035876:	mov    ecx,DWORD PTR [rbp+0x50]
   140035879:	add    rsp,0x20
   14003587d:	pop    rbp
   14003587e:	jmp    0x140028380
   140035883:	int3   
   140035884:	rex push rbp
   140035886:	sub    rsp,0x20
   14003588a:	mov    rbp,rdx
   14003588d:	mov    rax,QWORD PTR [rcx]
   140035890:	mov    rdx,rcx
   140035893:	mov    ecx,DWORD PTR [rax]
   140035895:	call   0x140021b90
   14003589a:	nop
   14003589b:	add    rsp,0x20
   14003589f:	pop    rbp
   1400358a0:	ret    
   1400358a1:	int3   
   1400358a2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400358a9:	jmp    0x140002120
   1400358ae:	mov    rcx,QWORD PTR [rdx+0x20]
   1400358b5:	jmp    0x140001344
   1400358ba:	mov    rcx,QWORD PTR [rdx+0x20]
   1400358c1:	jmp    0x140001080
   1400358c6:	mov    rcx,QWORD PTR [rdx+0x40]
   1400358cd:	jmp    0x140001344
   1400358d2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400358d9:	jmp    0x140001080
   1400358de:	mov    rcx,QWORD PTR [rdx+0x40]
   1400358e5:	jmp    0x1400011c4
   1400358ea:	mov    rcx,QWORD PTR [rdx+0x40]
   1400358f1:	jmp    0x140001080
   1400358f6:	lea    rcx,[rip+0x19e4b]        # 0x14004f748
   1400358fd:	jmp    0x140001080
   140035902:	lea    rcx,[rip+0x19e3f]        # 0x14004f748
   140035909:	jmp    0x1400011c4
   14003590e:	lea    rcx,[rip+0x19e2b]        # 0x14004f740
   140035915:	jmp    0x140001080
   14003591a:	lea    rcx,[rip+0x19e1f]        # 0x14004f740
   140035921:	jmp    0x1400011c4
   140035926:	lea    rcx,[rip+0x19e23]        # 0x14004f750
   14003592d:	jmp    0x140001080
   140035932:	lea    rcx,[rip+0x19e0f]        # 0x14004f748
   140035939:	jmp    0x1400011c4
   14003593e:	lea    rcx,[rip+0x19e03]        # 0x14004f748
   140035945:	jmp    0x140001080
   14003594a:	lea    rcx,[rip+0x19def]        # 0x14004f740
   140035951:	jmp    0x1400011c4
   140035956:	lea    rcx,[rip+0x19de3]        # 0x14004f740
   14003595d:	jmp    0x140001080
   140035962:	lea    rcx,[rdx+0x20]
   140035969:	add    rcx,0x8
   14003596d:	jmp    0x140003200
   140035972:	lea    rcx,[rdx+0x20]
   140035979:	add    rcx,0x20
   14003597d:	jmp    0x140003370
   140035982:	lea    rcx,[rdx+0x20]
   140035989:	add    rcx,0x8
   14003598d:	jmp    0x140003200
   140035992:	lea    rcx,[rdx+0x20]
   140035999:	add    rcx,0x20
   14003599d:	jmp    0x140003370
   1400359a2:	lea    rcx,[rdx+0x38]
   1400359a9:	jmp    0x1400030f8
   1400359ae:	lea    rcx,[rdx+0x38]
   1400359b5:	jmp    0x140002120
   1400359ba:	lea    rcx,[rdx+0x38]
   1400359c1:	jmp    0x140001be4
   1400359c6:	mov    rcx,QWORD PTR [rdx+0x40]
   1400359cd:	jmp    0x140020e30
   1400359d2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400359d9:	jmp    0x140020e30
   1400359de:	mov    rcx,QWORD PTR [rdx+0x30]
   1400359e5:	jmp    0x140020e30
   1400359ea:	lea    rcx,[rdx+0x50]
   1400359f1:	jmp    0x140001344
   1400359f6:	lea    rcx,[rdx+0x50]
   1400359fd:	jmp    0x140001460
   140035a02:	lea    rcx,[rdx+0x50]
   140035a09:	jmp    0x140001344
   140035a0e:	lea    rcx,[rdx+0x38]
   140035a15:	jmp    0x140002120
   140035a1a:	mov    QWORD PTR [rsp+0x10],rdx
   140035a1f:	push   rbp
   140035a20:	sub    rsp,0x20
   140035a24:	mov    rbp,rdx
   140035a27:	mov    rcx,QWORD PTR [rbp+0x68]
   140035a2b:	mov    QWORD PTR [rbp+0x68],rcx
   140035a2f:	xor    eax,eax
   140035a31:	inc    rcx
   140035a34:	jne    0x140035a38
   140035a36:	jmp    0x140035a48
   140035a38:	cmp    rcx,0xffffffffffffffff
   140035a3c:	ja     0x140035a55
   140035a3e:	call   0x140021a98
   140035a43:	test   rax,rax
   140035a46:	je     0x140035a55
   140035a48:	mov    QWORD PTR [rbp+0x20],rax
   140035a4c:	lea    rax,[rip+0xfffffffffffcca3f]        # 0x140002492
   140035a53:	jmp    0x140035a5b
   140035a55:	call   0x14002a918
   140035a5a:	nop
   140035a5b:	add    rsp,0x20
   140035a5f:	pop    rbp
   140035a60:	ret    
   140035a61:	int3   
   140035a62:	mov    QWORD PTR [rsp+0x10],rdx
   140035a67:	push   rbx
   140035a68:	push   rbp
   140035a69:	sub    rsp,0x28
   140035a6d:	mov    rbp,rdx
   140035a70:	mov    rbx,QWORD PTR [rbp+0x60]
   140035a74:	cmp    QWORD PTR [rbx+0x18],0x10
   140035a79:	jb     0x140035a83
   140035a7b:	mov    rcx,QWORD PTR [rbx]
   140035a7e:	call   0x140020e30
   140035a83:	mov    QWORD PTR [rbx+0x18],0xf
   140035a8b:	and    QWORD PTR [rbx+0x10],0x0
   140035a90:	mov    BYTE PTR [rbx],0x0
   140035a93:	xor    edx,edx
   140035a95:	xor    ecx,ecx
   140035a97:	call   0x1400265e8
   140035a9c:	nop
   140035a9d:	rex push rbp
   140035a9f:	sub    rsp,0x20
   140035aa3:	mov    rbp,rdx
   140035aa6:	mov    rdx,QWORD PTR [rbp+0x68]
   140035aaa:	mov    rcx,QWORD PTR [rbp+0x78]
   140035aae:	call   0x140001000
   140035ab3:	add    rsp,0x20
   140035ab7:	pop    rbp
   140035ab8:	ret    
   140035ab9:	mov    rcx,QWORD PTR [rdx+0x40]
   140035ac0:	jmp    0x140020e30
   140035ac5:	mov    rcx,QWORD PTR [rdx+0x40]
   140035acc:	jmp    0x140002afc
   140035ad1:	lea    rcx,[rdx+0x1a0]
   140035ad8:	jmp    0x140006018
   140035add:	mov    QWORD PTR [rsp+0x10],rdx
   140035ae2:	push   rbx
   140035ae3:	push   rbp
   140035ae4:	sub    rsp,0x38
   140035ae8:	mov    rbp,rdx
   140035aeb:	mov    rbx,QWORD PTR [rbp+0x60]
   140035aef:	lea    rax,[rbx+0xc]
   140035af3:	mov    QWORD PTR [rbp+0x40],rax
   140035af7:	mov    rcx,QWORD PTR [rbp+0x38]
   140035afb:	mov    rax,QWORD PTR [rcx]
   140035afe:	lea    r9,[rbp+0x40]
   140035b02:	mov    r8d,0x1
   140035b08:	mov    edx,DWORD PTR [rbx+0x4]
   140035b0b:	call   QWORD PTR [rax]
   140035b0d:	mov    eax,DWORD PTR [rbx+0x4]
   140035b10:	mov    DWORD PTR [rbp+0x34],eax
   140035b13:	lea    rax,[rip+0xfffffffffffcc322]        # 0x140001e3c
   140035b1a:	add    rsp,0x38
   140035b1e:	pop    rbp
   140035b1f:	pop    rbx
   140035b20:	ret    
   140035b21:	int3   
   140035b22:	mov    QWORD PTR [rsp+0x10],rdx
   140035b27:	push   rbx
   140035b28:	push   rbp
   140035b29:	sub    rsp,0x38
   140035b2d:	mov    rbp,rdx
   140035b30:	mov    rdx,QWORD PTR [rbp+0x38]
   140035b34:	mov    rbx,QWORD PTR [rbp+0x50]
   140035b38:	mov    rcx,rbx
   140035b3b:	call   0x14000313c
   140035b40:	mov    eax,DWORD PTR [rbx+0x4]
   140035b43:	mov    DWORD PTR [rbp+0x34],eax
   140035b46:	lea    rax,[rip+0xfffffffffffcc2ef]        # 0x140001e3c
   140035b4d:	add    rsp,0x38
   140035b51:	pop    rbp
   140035b52:	pop    rbx
   140035b53:	ret    
   140035b54:	int3   
   140035b55:	mov    QWORD PTR [rsp+0x10],rdx
   140035b5a:	push   rbx
   140035b5b:	push   rbp
   140035b5c:	sub    rsp,0x38
   140035b60:	mov    rbp,rdx
   140035b63:	mov    rbx,QWORD PTR [rbp+0x58]
   140035b67:	cmp    DWORD PTR [rbx],0x1
   140035b6a:	jne    0x140035b77
   140035b6c:	xor    r9d,r9d
   140035b6f:	xor    r8d,r8d
   140035b72:	mov    edx,DWORD PTR [rbx+0x4]
   140035b75:	jmp    0x140035bad
   140035b77:	mov    r9d,DWORD PTR [rbx+0x4]
   140035b7b:	lea    r8,[rip+0x78d2]        # 0x14003d454
   140035b82:	mov    edx,0x40
   140035b87:	lea    rcx,[rbp+0x1a0]
   140035b8e:	call   0x140001004
   140035b93:	lea    rax,[rbp+0x1a0]
   140035b9a:	mov    QWORD PTR [rbp+0x40],rax
   140035b9e:	lea    r9,[rbp+0x40]
   140035ba2:	mov    edx,0xe12303e9
   140035ba7:	mov    r8d,0x1
   140035bad:	mov    rcx,QWORD PTR [rbp+0x38]
   140035bb1:	mov    rax,QWORD PTR [rcx]
   140035bb4:	call   QWORD PTR [rax]
   140035bb6:	mov    eax,DWORD PTR [rbx+0x4]
   140035bb9:	mov    DWORD PTR [rbp+0x34],eax
   140035bbc:	lea    rax,[rip+0xfffffffffffcc279]        # 0x140001e3c
   140035bc3:	add    rsp,0x38
   140035bc7:	pop    rbp
   140035bc8:	pop    rbx
   140035bc9:	ret    
   140035bca:	int3   
   140035bcb:	rex push rbp
   140035bcd:	sub    rsp,0x20
   140035bd1:	mov    rbp,rdx
   140035bd4:	mov    eax,DWORD PTR [rbp+0x20]
   140035bd7:	and    eax,0x1
   140035bda:	test   eax,eax
   140035bdc:	je     0x140035beb
   140035bde:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140035be2:	mov    rcx,QWORD PTR [rbp+0x48]
   140035be6:	call   0x1400020f0
   140035beb:	add    rsp,0x20
   140035bef:	pop    rbp
   140035bf0:	ret    
   140035bf1:	mov    rcx,QWORD PTR [rdx+0x40]
   140035bf8:	jmp    0x14000566c
   140035bfd:	mov    rcx,QWORD PTR [rdx+0x40]
   140035c04:	add    rcx,0x8
   140035c08:	jmp    0x140002518
   140035c0d:	lea    rcx,[rdx+0x20]
   140035c14:	add    rcx,0x8
   140035c18:	jmp    0x140003200
   140035c1d:	lea    rcx,[rdx+0x20]
   140035c24:	add    rcx,0x20
   140035c28:	jmp    0x140003370
   140035c2d:	rex push rbp
   140035c2f:	sub    rsp,0x20
   140035c33:	mov    rbp,rdx
   140035c36:	mov    rdx,QWORD PTR [rbp+0x40]
   140035c3a:	mov    rcx,QWORD PTR [rbp+0x50]
   140035c3e:	call   0x140001000
   140035c43:	add    rsp,0x20
   140035c47:	pop    rbp
   140035c48:	ret    
   140035c49:	mov    QWORD PTR [rsp+0x10],rdx
   140035c4e:	push   rbx
   140035c4f:	push   rbp
   140035c50:	sub    rsp,0x28
   140035c54:	mov    rbp,rdx
   140035c57:	mov    rbx,QWORD PTR [rbp+0x58]
   140035c5b:	jmp    0x140035c82
   140035c5d:	cmp    QWORD PTR [rbx+0x18],0x8
   140035c62:	jb     0x140035c6c
   140035c64:	mov    rcx,QWORD PTR [rbx]
   140035c67:	call   0x140020e30
   140035c6c:	mov    QWORD PTR [rbx+0x18],0x7
   140035c74:	and    QWORD PTR [rbx+0x10],0x0
   140035c79:	xor    eax,eax
   140035c7b:	mov    WORD PTR [rbx],ax
   140035c7e:	add    rbx,0x20
   140035c82:	cmp    rbx,QWORD PTR [rbp+0x40]
   140035c86:	jne    0x140035c5d
   140035c88:	xor    edx,edx
   140035c8a:	xor    ecx,ecx
   140035c8c:	call   0x1400265e8
   140035c91:	nop
   140035c92:	mov    QWORD PTR [rsp+0x10],rdx
   140035c97:	push   rbx
   140035c98:	push   rbp
   140035c99:	sub    rsp,0x28
   140035c9d:	mov    rbp,rdx
   140035ca0:	mov    rbx,QWORD PTR [rbp+0x68]
   140035ca4:	jmp    0x140035ccb
   140035ca6:	cmp    QWORD PTR [rbx+0x18],0x8
   140035cab:	jb     0x140035cb5
   140035cad:	mov    rcx,QWORD PTR [rbx]
   140035cb0:	call   0x140020e30
   140035cb5:	mov    QWORD PTR [rbx+0x18],0x7
   140035cbd:	and    QWORD PTR [rbx+0x10],0x0
   140035cc2:	xor    eax,eax
   140035cc4:	mov    WORD PTR [rbx],ax
   140035cc7:	add    rbx,0x20
   140035ccb:	cmp    rbx,QWORD PTR [rbp+0x60]
   140035ccf:	jne    0x140035ca6
   140035cd1:	xor    edx,edx
   140035cd3:	xor    ecx,ecx
   140035cd5:	call   0x1400265e8
   140035cda:	nop
   140035cdb:	rex push rbp
   140035cdd:	sub    rsp,0x20
   140035ce1:	mov    rbp,rdx
   140035ce4:	mov    rdx,QWORD PTR [rbp+0x58]
   140035ce8:	mov    rcx,QWORD PTR [rbp+0x50]
   140035cec:	call   0x140001000
   140035cf1:	add    rsp,0x20
   140035cf5:	pop    rbp
   140035cf6:	ret    
   140035cf7:	rex push rbp
   140035cf9:	sub    rsp,0x20
   140035cfd:	mov    rbp,rdx
   140035d00:	mov    rdx,QWORD PTR [rbp+0x68]
   140035d04:	mov    rcx,QWORD PTR [rbp+0x28]
   140035d08:	call   0x140001000
   140035d0d:	add    rsp,0x20
   140035d11:	pop    rbp
   140035d12:	ret    
   140035d13:	mov    rcx,QWORD PTR [rdx+0x60]
   140035d1a:	add    rcx,0x8
   140035d1e:	jmp    0x140003200
   140035d23:	mov    rcx,QWORD PTR [rdx+0x60]
   140035d2a:	add    rcx,0x20
   140035d2e:	jmp    0x140003370
   140035d33:	mov    rcx,QWORD PTR [rdx+0x40]
   140035d3a:	add    rcx,0x8
   140035d3e:	jmp    0x140003200
   140035d43:	mov    rcx,QWORD PTR [rdx+0x40]
   140035d4a:	add    rcx,0x20
   140035d4e:	jmp    0x140003370
   140035d53:	rex push rbp
   140035d55:	sub    rsp,0x20
   140035d59:	mov    rbp,rdx
   140035d5c:	mov    rdx,QWORD PTR [rbp+0x40]
   140035d60:	mov    rcx,QWORD PTR [rbp+0x48]
   140035d64:	call   0x140001000
   140035d69:	add    rsp,0x20
   140035d6d:	pop    rbp
   140035d6e:	ret    
   140035d6f:	mov    QWORD PTR [rsp+0x10],rdx
   140035d74:	push   rbp
   140035d75:	sub    rsp,0x20
   140035d79:	mov    rbp,rdx
   140035d7c:	mov    rcx,QWORD PTR [rbp+0x68]
   140035d80:	mov    QWORD PTR [rbp+0x68],rcx
   140035d84:	xor    eax,eax
   140035d86:	inc    rcx
   140035d89:	jne    0x140035d8d
   140035d8b:	jmp    0x140035da9
   140035d8d:	movabs rax,0x7fffffffffffffff
   140035d97:	cmp    rcx,rax
   140035d9a:	ja     0x140035db6
   140035d9c:	add    rcx,rcx
   140035d9f:	call   0x140021a98
   140035da4:	test   rax,rax
   140035da7:	je     0x140035db6
   140035da9:	mov    QWORD PTR [rbp+0x20],rax
   140035dad:	lea    rax,[rip+0xfffffffffffcdda5]        # 0x140003b59
   140035db4:	jmp    0x140035dbc
   140035db6:	call   0x14002a918
   140035dbb:	nop
   140035dbc:	add    rsp,0x20
   140035dc0:	pop    rbp
   140035dc1:	ret    
   140035dc2:	int3   
   140035dc3:	mov    QWORD PTR [rsp+0x10],rdx
   140035dc8:	push   rbx
   140035dc9:	push   rbp
   140035dca:	sub    rsp,0x28
   140035dce:	mov    rbp,rdx
   140035dd1:	mov    rbx,QWORD PTR [rbp+0x60]
   140035dd5:	cmp    QWORD PTR [rbx+0x18],0x8
   140035dda:	jb     0x140035de4
   140035ddc:	mov    rcx,QWORD PTR [rbx]
   140035ddf:	call   0x140020e30
   140035de4:	mov    QWORD PTR [rbx+0x18],0x7
   140035dec:	and    QWORD PTR [rbx+0x10],0x0
   140035df1:	xor    eax,eax
   140035df3:	mov    WORD PTR [rbx],ax
   140035df6:	xor    edx,edx
   140035df8:	xor    ecx,ecx
   140035dfa:	call   0x1400265e8
   140035dff:	nop
   140035e00:	rex push rbp
   140035e02:	sub    rsp,0x20
   140035e06:	mov    rbp,rdx
   140035e09:	mov    rdx,QWORD PTR [rbp+0x68]
   140035e0d:	mov    rcx,QWORD PTR [rbp+0x78]
   140035e11:	call   0x140001000
   140035e16:	add    rsp,0x20
   140035e1a:	pop    rbp
   140035e1b:	ret    
   140035e1c:	mov    QWORD PTR [rsp+0x10],rdx
   140035e21:	push   rbp
   140035e22:	sub    rsp,0x20
   140035e26:	mov    rbp,rdx
   140035e29:	mov    rcx,QWORD PTR [rbp+0x48]
   140035e2d:	call   0x140020e30
   140035e32:	xor    edx,edx
   140035e34:	xor    ecx,ecx
   140035e36:	call   0x1400265e8
   140035e3b:	nop
   140035e3c:	mov    QWORD PTR [rsp+0x10],rdx
   140035e41:	push   rbp
   140035e42:	sub    rsp,0x30
   140035e46:	mov    rbp,rdx
   140035e49:	mov    rcx,QWORD PTR [rbp+0x78]
   140035e4d:	call   0x140020e30
   140035e52:	xor    edx,edx
   140035e54:	xor    ecx,ecx
   140035e56:	call   0x1400265e8
   140035e5b:	nop
   140035e5c:	mov    QWORD PTR [rsp+0x10],rdx
   140035e61:	push   rbx
   140035e62:	push   rbp
   140035e63:	sub    rsp,0x28
   140035e67:	mov    rbp,rdx
   140035e6a:	mov    rbx,QWORD PTR [rbp+0x50]
   140035e6e:	mov    rcx,QWORD PTR [rbx]
   140035e71:	test   rcx,rcx
   140035e74:	je     0x140035e89
   140035e76:	call   0x140020e30
   140035e7b:	and    QWORD PTR [rbx],0x0
   140035e7f:	and    QWORD PTR [rbx+0x8],0x0
   140035e84:	and    QWORD PTR [rbx+0x10],0x0
   140035e89:	xor    edx,edx
   140035e8b:	xor    ecx,ecx
   140035e8d:	call   0x1400265e8
   140035e92:	nop
   140035e93:	mov    QWORD PTR [rsp+0x10],rdx
   140035e98:	push   rbx
   140035e99:	push   rbp
   140035e9a:	push   rsi
   140035e9b:	push   rdi
   140035e9c:	sub    rsp,0x38
   140035ea0:	mov    rbp,rdx
   140035ea3:	mov    rdi,QWORD PTR [rbp+0x50]
   140035ea7:	mov    rbx,QWORD PTR [rdi]
   140035eaa:	test   rbx,rbx
   140035ead:	je     0x140035ef5
   140035eaf:	mov    rsi,QWORD PTR [rdi+0x8]
   140035eb3:	jmp    0x140035eda
   140035eb5:	cmp    QWORD PTR [rbx+0x18],0x8
   140035eba:	jb     0x140035ec4
   140035ebc:	mov    rcx,QWORD PTR [rbx]
   140035ebf:	call   0x140020e30
   140035ec4:	mov    QWORD PTR [rbx+0x18],0x7
   140035ecc:	and    QWORD PTR [rbx+0x10],0x0
   140035ed1:	xor    eax,eax
   140035ed3:	mov    WORD PTR [rbx],ax
   140035ed6:	add    rbx,0x20
   140035eda:	cmp    rbx,rsi
   140035edd:	jne    0x140035eb5
   140035edf:	mov    rcx,QWORD PTR [rdi]
   140035ee2:	call   0x140020e30
   140035ee7:	and    QWORD PTR [rdi],0x0
   140035eeb:	and    QWORD PTR [rdi+0x8],0x0
   140035ef0:	and    QWORD PTR [rdi+0x10],0x0
   140035ef5:	xor    edx,edx
   140035ef7:	xor    ecx,ecx
   140035ef9:	call   0x1400265e8
   140035efe:	nop
   140035eff:	mov    rcx,QWORD PTR [rdx+0x40]
   140035f06:	jmp    0x140002afc
   140035f0b:	lea    rcx,[rdx+0x70]
   140035f12:	jmp    0x140004adc
   140035f17:	mov    QWORD PTR [rsp+0x10],rdx
   140035f1c:	push   rbx
   140035f1d:	push   rbp
   140035f1e:	sub    rsp,0x38
   140035f22:	mov    rbp,rdx
   140035f25:	mov    rax,QWORD PTR [rbp+0x60]
   140035f29:	cmp    DWORD PTR [rax],0x8007000e
   140035f2f:	jne    0x140035f5c
   140035f31:	mov    WORD PTR [rbp+0x38],0x0
   140035f37:	xor    eax,eax
   140035f39:	mov    rbx,QWORD PTR [rbp+0x40]
   140035f3d:	jmp    0x140035f56
   140035f3f:	mov    BYTE PTR [rbp+0x38],al
   140035f42:	mov    r8,QWORD PTR [rbp+0x30]
   140035f46:	lea    rdx,[rbp+0x38]
   140035f4a:	mov    rcx,QWORD PTR [rbp+0x50]
   140035f4e:	call   0x1400041ec
   140035f53:	inc    rbx
   140035f56:	mov    al,BYTE PTR [rbx]
   140035f58:	test   al,al
   140035f5a:	jne    0x140035f3f
   140035f5c:	lea    rax,[rip+0xfffffffffffce541]        # 0x1400044a4
   140035f63:	add    rsp,0x38
   140035f67:	pop    rbp
   140035f68:	pop    rbx
   140035f69:	ret    
   140035f6a:	int3   
   140035f6b:	lea    rcx,[rdx+0x50]
   140035f72:	jmp    0x140004adc
   140035f77:	mov    QWORD PTR [rsp+0x10],rdx
   140035f7c:	push   rbp
   140035f7d:	sub    rsp,0x30
   140035f81:	mov    rbp,rdx
   140035f84:	mov    rdx,QWORD PTR [rbp+0x30]
   140035f88:	mov    rcx,QWORD PTR [rbp+0x38]
   140035f8c:	call   0x14002b930
   140035f91:	nop
   140035f92:	lea    rax,[rip+0xfffffffffffce7c5]        # 0x14000475e
   140035f99:	add    rsp,0x30
   140035f9d:	pop    rbp
   140035f9e:	ret    
   140035f9f:	int3   
   140035fa0:	lea    rcx,[rip+0x18a89]        # 0x14004ea30
   140035fa7:	jmp    0x1400031d0
   140035fac:	lea    rcx,[rip+0x18a7d]        # 0x14004ea30
   140035fb3:	add    rcx,0x20
   140035fb7:	jmp    0x1400031d0
   140035fbc:	lea    rcx,[rip+0x18a6d]        # 0x14004ea30
   140035fc3:	add    rcx,0x40
   140035fc7:	jmp    0x1400031d0
   140035fcc:	rex push rbp
   140035fce:	sub    rsp,0x20
   140035fd2:	mov    rbp,rdx
   140035fd5:	mov    eax,DWORD PTR [rbp+0x20]
   140035fd8:	and    eax,0x1
   140035fdb:	test   eax,eax
   140035fdd:	je     0x140035fec
   140035fdf:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140035fe3:	mov    rcx,QWORD PTR [rbp+0x48]
   140035fe7:	call   0x14000578c
   140035fec:	add    rsp,0x20
   140035ff0:	pop    rbp
   140035ff1:	ret    
   140035ff2:	mov    rcx,QWORD PTR [rdx+0x48]
   140035ff9:	jmp    0x140005a10
   140035ffe:	mov    QWORD PTR [rsp+0x10],rdx
   140036003:	push   rbp
   140036004:	sub    rsp,0x20
   140036008:	mov    rbp,rdx
   14003600b:	mov    rcx,QWORD PTR [rbp+0x48]
   14003600f:	call   0x140020e30
   140036014:	xor    edx,edx
   140036016:	xor    ecx,ecx
   140036018:	call   0x1400265e8
   14003601d:	nop
   14003601e:	mov    QWORD PTR [rsp+0x10],rdx
   140036023:	push   rbx
   140036024:	push   rbp
   140036025:	sub    rsp,0x28
   140036029:	mov    rbp,rdx
   14003602c:	mov    rbx,QWORD PTR [rbp+0x40]
   140036030:	mov    rcx,QWORD PTR [rbx]
   140036033:	test   rcx,rcx
   140036036:	je     0x14003604b
   140036038:	call   0x140020e30
   14003603d:	and    QWORD PTR [rbx],0x0
   140036041:	and    QWORD PTR [rbx+0x8],0x0
   140036046:	and    QWORD PTR [rbx+0x10],0x0
   14003604b:	xor    edx,edx
   14003604d:	xor    ecx,ecx
   14003604f:	call   0x1400265e8
   140036054:	nop
   140036055:	mov    rcx,QWORD PTR [rdx+0x40]
   14003605c:	jmp    0x140026484
   140036061:	mov    rcx,QWORD PTR [rdx+0x40]
   140036068:	jmp    0x140006b7c
   14003606d:	mov    rcx,QWORD PTR [rdx+0x40]
   140036074:	jmp    0x140006b7c
   140036079:	mov    rcx,QWORD PTR [rdx+0x40]
   140036080:	jmp    0x140026484
   140036085:	mov    rcx,QWORD PTR [rdx+0x40]
   14003608c:	jmp    0x140026484
   140036091:	lea    rcx,[rdx+0x78]
   140036098:	jmp    0x140006bf4
   14003609d:	lea    rcx,[rdx+0xb8]
   1400360a4:	jmp    0x1400031d0
   1400360a9:	lea    rcx,[rdx+0xd8]
   1400360b0:	jmp    0x1400031d0
   1400360b5:	lea    rcx,[rdx+0x98]
   1400360bc:	jmp    0x140026484
   1400360c1:	lea    rcx,[rdx+0x98]
   1400360c8:	jmp    0x140006b7c
   1400360cd:	lea    rcx,[rdx+0x80]
   1400360d4:	jmp    0x140006bf4
   1400360d9:	lea    rcx,[rdx+0x30]
   1400360e0:	jmp    0x140006bf4
   1400360e5:	lea    rcx,[rdx+0x60]
   1400360ec:	jmp    0x140026484
   1400360f1:	lea    rcx,[rdx+0x60]
   1400360f8:	jmp    0x140006b7c
   1400360fd:	lea    rcx,[rdx+0x28]
   140036104:	jmp    0x140006bf4
   140036109:	lea    rcx,[rdx+0x38]
   140036110:	jmp    0x140003200
   140036115:	lea    rcx,[rdx+0x78]
   14003611c:	jmp    0x140026484
   140036121:	lea    rcx,[rdx+0x78]
   140036128:	jmp    0x140006b7c
   14003612d:	lea    rcx,[rdx+0x48]
   140036134:	jmp    0x140006bf4
   140036139:	lea    rcx,[rdx+0x70]
   140036140:	jmp    0x140026484
   140036145:	lea    rcx,[rdx+0x70]
   14003614c:	jmp    0x140006b7c
   140036151:	lea    rcx,[rdx+0x40]
   140036158:	jmp    0x140006bf4
   14003615d:	lea    rcx,[rdx+0xa0]
   140036164:	jmp    0x140026484
   140036169:	lea    rcx,[rdx+0xa0]
   140036170:	jmp    0x140006b7c
   140036175:	lea    rcx,[rdx+0x88]
   14003617c:	jmp    0x140026484
   140036181:	lea    rcx,[rdx+0x88]
   140036188:	jmp    0x140006b7c
   14003618d:	lea    rcx,[rdx+0x28]
   140036194:	jmp    0x140006bf4
   140036199:	lea    rcx,[rdx+0x40]
   1400361a0:	jmp    0x140026484
   1400361a5:	lea    rcx,[rdx+0x40]
   1400361ac:	jmp    0x140006b7c
   1400361b1:	lea    rcx,[rdx+0x20]
   1400361b8:	jmp    0x140006bf4
   1400361bd:	lea    rcx,[rdx+0x58]
   1400361c4:	jmp    0x140026484
   1400361c9:	lea    rcx,[rdx+0x58]
   1400361d0:	jmp    0x140006b7c
   1400361d5:	lea    rcx,[rdx+0x88]
   1400361dc:	jmp    0x140006bf4
   1400361e1:	lea    rcx,[rdx+0x28]
   1400361e8:	jmp    0x140026484
   1400361ed:	lea    rcx,[rdx+0x28]
   1400361f4:	jmp    0x140006b7c
   1400361f9:	lea    rcx,[rdx+0x80]
   140036200:	jmp    0x140006bf4
   140036205:	lea    rcx,[rdx+0x40]
   14003620c:	jmp    0x140026484
   140036211:	lea    rcx,[rdx+0x40]
   140036218:	jmp    0x140006b7c
   14003621d:	rex push rbp
   14003621f:	sub    rsp,0x20
   140036223:	mov    rbp,rdx
   140036226:	mov    eax,DWORD PTR [rbp+0x20]
   140036229:	and    eax,0x1
   14003622c:	test   eax,eax
   14003622e:	je     0x14003623d
   140036230:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140036234:	mov    rcx,QWORD PTR [rbp+0x48]
   140036238:	call   0x1400031d0
   14003623d:	add    rsp,0x20
   140036241:	pop    rbp
   140036242:	ret    
   140036243:	lea    rcx,[rdx+0x50]
   14003624a:	jmp    0x140007868
   14003624f:	mov    rcx,QWORD PTR [rdx+0x48]
   140036256:	jmp    0x140005a10
   14003625b:	mov    rcx,QWORD PTR [rdx+0x40]
   140036262:	add    rcx,0x8
   140036266:	jmp    0x14000578c
   14003626b:	mov    rcx,QWORD PTR [rdx+0x40]
   140036272:	jmp    0x14001654c
   140036277:	mov    rcx,QWORD PTR [rdx+0x40]
   14003627e:	add    rcx,0x648
   140036285:	jmp    0x1400090dc
   14003628a:	mov    rcx,QWORD PTR [rdx+0x40]
   140036291:	add    rcx,0x658
   140036298:	jmp    0x1400090dc
   14003629d:	mov    rcx,QWORD PTR [rdx+0x40]
   1400362a4:	add    rcx,0x668
   1400362ab:	jmp    0x1400090dc
   1400362b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400362b7:	jmp    0x14001654c
   1400362bc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400362c3:	add    rcx,0x648
   1400362ca:	jmp    0x1400090dc
   1400362cf:	mov    rcx,QWORD PTR [rdx+0x40]
   1400362d6:	add    rcx,0x658
   1400362dd:	jmp    0x1400090dc
   1400362e2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400362e9:	add    rcx,0x668
   1400362f0:	jmp    0x1400090dc
   1400362f5:	rex push rbp
   1400362f7:	sub    rsp,0x20
   1400362fb:	mov    rbp,rdx
   1400362fe:	mov    rdx,QWORD PTR [rbp+0x50]
   140036302:	movsxd rax,DWORD PTR [rbp+0x60]
   140036306:	imul   rax,rax,0x8
   14003630a:	mov    rdx,QWORD PTR [rdx]
   14003630d:	add    rdx,rax
   140036310:	mov    rcx,QWORD PTR [rbp+0x68]
   140036314:	call   0x140001000
   140036319:	add    rsp,0x20
   14003631d:	pop    rbp
   14003631e:	ret    
   14003631f:	mov    rcx,QWORD PTR [rdx+0x68]
   140036326:	jmp    0x14000578c
   14003632b:	lea    rcx,[rdx+0x48]
   140036332:	jmp    0x140005a10
   140036337:	lea    rcx,[rdx+0x48]
   14003633e:	jmp    0x14000578c
   140036343:	lea    rcx,[rdx+0x40]
   14003634a:	jmp    0x140005a10
   14003634f:	lea    rcx,[rdx+0x40]
   140036356:	jmp    0x14000578c
   14003635b:	lea    rcx,[rdx+0x40]
   140036362:	jmp    0x140005a10
   140036367:	lea    rcx,[rdx+0x30]
   14003636e:	jmp    0x140005a10
   140036373:	lea    rcx,[rdx+0x30]
   14003637a:	jmp    0x14000578c
   14003637f:	lea    rcx,[rdx+0x30]
   140036386:	jmp    0x140005a10
   14003638b:	lea    rcx,[rdx+0x38]
   140036392:	jmp    0x140005a10
   140036397:	lea    rcx,[rdx+0x38]
   14003639e:	jmp    0x14000578c
   1400363a3:	lea    rcx,[rdx+0x38]
   1400363aa:	jmp    0x140005a10
   1400363af:	lea    rcx,[rdx+0x48]
   1400363b6:	jmp    0x140005a10
   1400363bb:	mov    rcx,QWORD PTR [rdx+0x68]
   1400363c2:	jmp    0x140002afc
   1400363c7:	mov    rcx,QWORD PTR [rdx+0x30]
   1400363ce:	jmp    0x140002afc
   1400363d3:	mov    rcx,QWORD PTR [rdx+0x30]
   1400363da:	add    rcx,0x20
   1400363de:	jmp    0x140009190
   1400363e3:	mov    rcx,QWORD PTR [rdx+0x68]
   1400363ea:	add    rcx,0x8
   1400363ee:	jmp    0x14001ce18
   1400363f3:	mov    rcx,QWORD PTR [rdx+0x68]
   1400363fa:	add    rcx,0x40
   1400363fe:	jmp    0x140009190
   140036403:	mov    rcx,QWORD PTR [rdx+0x30]
   14003640a:	jmp    0x140002518
   14003640f:	mov    rcx,QWORD PTR [rdx+0x68]
   140036416:	add    rcx,0x58
   14003641a:	jmp    0x1400162f8
   14003641f:	mov    rcx,QWORD PTR [rdx+0x30]
   140036426:	jmp    0x140002518
   14003642b:	mov    rcx,QWORD PTR [rdx+0x68]
   140036432:	add    rcx,0x70
   140036436:	jmp    0x1400162f8
   14003643b:	mov    rcx,QWORD PTR [rdx+0x30]
   140036442:	jmp    0x140002518
   140036447:	mov    rcx,QWORD PTR [rdx+0x68]
   14003644e:	add    rcx,0x88
   140036455:	jmp    0x1400162f8
   14003645a:	mov    rcx,QWORD PTR [rdx+0x30]
   140036461:	jmp    0x140002518
   140036466:	mov    rcx,QWORD PTR [rdx+0x68]
   14003646d:	add    rcx,0xa0
   140036474:	jmp    0x1400162f8
   140036479:	mov    rcx,QWORD PTR [rdx+0x30]
   140036480:	jmp    0x140002518
   140036485:	mov    rcx,QWORD PTR [rdx+0x68]
   14003648c:	add    rcx,0xb8
   140036493:	jmp    0x1400162f8
   140036498:	mov    rcx,QWORD PTR [rdx+0x30]
   14003649f:	jmp    0x140002518
   1400364a4:	mov    rcx,QWORD PTR [rdx+0x68]
   1400364ab:	add    rcx,0xd0
   1400364b2:	jmp    0x1400162f8
   1400364b7:	mov    rcx,QWORD PTR [rdx+0x30]
   1400364be:	jmp    0x140002518
   1400364c3:	mov    rcx,QWORD PTR [rdx+0x68]
   1400364ca:	add    rcx,0xe8
   1400364d1:	jmp    0x1400179a8
   1400364d6:	mov    rcx,QWORD PTR [rdx+0x68]
   1400364dd:	add    rcx,0xf8
   1400364e4:	jmp    0x140002518
   1400364e9:	mov    rcx,QWORD PTR [rdx+0x48]
   1400364f0:	jmp    0x14000566c
   1400364f5:	mov    rcx,QWORD PTR [rdx+0x48]
   1400364fc:	add    rcx,0x8
   140036500:	jmp    0x140002518
   140036505:	mov    rcx,QWORD PTR [rdx+0x38]
   14003650c:	add    rcx,0x10
   140036510:	jmp    0x14000257c
   140036515:	mov    rcx,QWORD PTR [rdx+0x30]
   14003651c:	add    rcx,0x8
   140036520:	jmp    0x14001dff4
   140036525:	mov    rcx,QWORD PTR [rdx+0x68]
   14003652c:	add    rcx,0x110
   140036533:	jmp    0x1400157a8
   140036538:	mov    rcx,QWORD PTR [rdx+0x68]
   14003653f:	add    rcx,0x2a0
   140036546:	jmp    0x14000ecc0
   14003654b:	mov    rcx,QWORD PTR [rdx+0x48]
   140036552:	add    rcx,0x8
   140036556:	jmp    0x140009190
   14003655b:	mov    rcx,QWORD PTR [rdx+0x38]
   140036562:	jmp    0x14000dcf8
   140036567:	mov    rcx,QWORD PTR [rdx+0x38]
   14003656e:	jmp    0x14000dcd8
   140036573:	mov    rcx,QWORD PTR [rdx+0x38]
   14003657a:	jmp    0x14000dcb8
   14003657f:	mov    rcx,QWORD PTR [rdx+0x38]
   140036586:	jmp    0x14000d740
   14003658b:	mov    rcx,QWORD PTR [rdx+0x48]
   140036592:	add    rcx,0x38
   140036596:	jmp    0x14000cb48
   14003659b:	mov    rcx,QWORD PTR [rdx+0x30]
   1400365a2:	jmp    0x14000e428
   1400365a7:	mov    rcx,QWORD PTR [rdx+0x38]
   1400365ae:	add    rcx,0x10
   1400365b2:	jmp    0x14000e054
   1400365b7:	mov    rcx,QWORD PTR [rdx+0x30]
   1400365be:	add    rcx,0x8
   1400365c2:	jmp    0x14000e4fc
   1400365c7:	mov    rcx,QWORD PTR [rdx+0x38]
   1400365ce:	add    rcx,0x30
   1400365d2:	jmp    0x14000e0c4
   1400365d7:	mov    rcx,QWORD PTR [rdx+0x48]
   1400365de:	add    rcx,0x48
   1400365e2:	jmp    0x14000ddc0
   1400365e7:	mov    rcx,QWORD PTR [rdx+0x68]
   1400365ee:	add    rcx,0xf78
   1400365f5:	jmp    0x14000cb64
   1400365fa:	mov    rcx,QWORD PTR [rdx+0x48]
   140036601:	add    rcx,0x48
   140036605:	jmp    0x140009190
   14003660a:	mov    rcx,QWORD PTR [rdx+0x30]
   140036611:	jmp    0x14000e428
   140036616:	mov    rcx,QWORD PTR [rdx+0x38]
   14003661d:	add    rcx,0x10
   140036621:	jmp    0x14000e054
   140036626:	mov    rcx,QWORD PTR [rdx+0x30]
   14003662d:	add    rcx,0x8
   140036631:	jmp    0x14000e4fc
   140036636:	mov    rcx,QWORD PTR [rdx+0x38]
   14003663d:	add    rcx,0x30
   140036641:	jmp    0x14000e0c4
   140036646:	mov    rcx,QWORD PTR [rdx+0x48]
   14003664d:	add    rcx,0x60
   140036651:	jmp    0x14000ddc0
   140036656:	rex push rbp
   140036658:	sub    rsp,0x20
   14003665c:	mov    rbp,rdx
   14003665f:	mov    rdx,QWORD PTR [rbp+0x30]
   140036663:	mov    rdx,QWORD PTR [rdx]
   140036666:	mov    rcx,QWORD PTR [rbp+0x40]
   14003666a:	call   0x140001000
   14003666f:	add    rsp,0x20
   140036673:	pop    rbp
   140036674:	ret    
   140036675:	mov    rcx,QWORD PTR [rdx+0x40]
   14003667c:	add    rcx,0x10
   140036680:	jmp    0x140009190
   140036685:	mov    rcx,QWORD PTR [rdx+0x38]
   14003668c:	jmp    0x1400128f8
   140036691:	mov    rcx,QWORD PTR [rdx+0x38]
   140036698:	add    rcx,0x10
   14003669c:	jmp    0x14000e4fc
   1400366a1:	mov    rcx,QWORD PTR [rdx+0x48]
   1400366a8:	add    rcx,0xb8
   1400366af:	jmp    0x140012668
   1400366b4:	mov    rcx,QWORD PTR [rdx+0x68]
   1400366bb:	add    rcx,0x1018
   1400366c2:	jmp    0x140011020
   1400366c7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400366ce:	jmp    0x14000566c
   1400366d3:	mov    rcx,QWORD PTR [rdx+0x48]
   1400366da:	add    rcx,0x8
   1400366de:	jmp    0x14000e4fc
   1400366e3:	mov    rcx,QWORD PTR [rdx+0x40]
   1400366ea:	add    rcx,0x58
   1400366ee:	jmp    0x14000e0c4
   1400366f3:	mov    rcx,QWORD PTR [rdx+0x48]
   1400366fa:	jmp    0x140003200
   1400366ff:	mov    rcx,QWORD PTR [rdx+0x40]
   140036706:	add    rcx,0xa0
   14003670d:	jmp    0x140015e94
   140036712:	mov    rcx,QWORD PTR [rdx+0x68]
   140036719:	add    rcx,0x1108
   140036720:	jmp    0x14001448c
   140036725:	mov    rcx,QWORD PTR [rdx+0x38]
   14003672c:	jmp    0x14000566c
   140036731:	mov    rcx,QWORD PTR [rdx+0x38]
   140036738:	add    rcx,0x8
   14003673c:	jmp    0x140002518
   140036741:	mov    rcx,QWORD PTR [rdx+0x48]
   140036748:	add    rcx,0x10
   14003674c:	jmp    0x14000257c
   140036751:	mov    rcx,QWORD PTR [rdx+0x38]
   140036758:	jmp    0x14000566c
   14003675d:	mov    rcx,QWORD PTR [rdx+0x38]
   140036764:	add    rcx,0x8
   140036768:	jmp    0x140002518
   14003676d:	mov    rcx,QWORD PTR [rdx+0x48]
   140036774:	add    rcx,0x150
   14003677b:	jmp    0x14000257c
   140036780:	mov    rcx,QWORD PTR [rdx+0x38]
   140036787:	jmp    0x140002518
   14003678c:	mov    rcx,QWORD PTR [rdx+0x48]
   140036793:	add    rcx,0x290
   14003679a:	jmp    0x1400162f8
   14003679f:	mov    rcx,QWORD PTR [rdx+0x38]
   1400367a6:	jmp    0x140002518
   1400367ab:	mov    rcx,QWORD PTR [rdx+0x48]
   1400367b2:	add    rcx,0x2a8
   1400367b9:	jmp    0x1400162f8
   1400367be:	mov    rcx,QWORD PTR [rdx+0x38]
   1400367c5:	jmp    0x140002518
   1400367ca:	mov    rcx,QWORD PTR [rdx+0x48]
   1400367d1:	add    rcx,0x2c0
   1400367d8:	jmp    0x1400179a8
   1400367dd:	mov    rcx,QWORD PTR [rdx+0x38]
   1400367e4:	jmp    0x140002518
   1400367e9:	mov    rcx,QWORD PTR [rdx+0x48]
   1400367f0:	add    rcx,0x2d0
   1400367f7:	jmp    0x1400179a8
   1400367fc:	mov    rcx,QWORD PTR [rdx+0x40]
   140036803:	add    rcx,0x10
   140036807:	jmp    0x14001f4dc
   14003680c:	mov    rcx,QWORD PTR [rdx+0x68]
   140036813:	add    rcx,0x11e0
   14003681a:	jmp    0x14000fa78
   14003681f:	mov    rcx,QWORD PTR [rdx+0x68]
   140036826:	add    rcx,0x14e8
   14003682d:	jmp    0x1400100b8
   140036832:	mov    rcx,QWORD PTR [rdx+0x68]
   140036839:	add    rcx,0x1568
   140036840:	jmp    0x14001875c
   140036845:	mov    rcx,QWORD PTR [rdx+0x68]
   14003684c:	add    rcx,0x17d8
   140036853:	jmp    0x14001875c
   140036858:	mov    rcx,QWORD PTR [rdx+0x68]
   14003685f:	add    rcx,0x1a48
   140036866:	jmp    0x14001875c
   14003686b:	mov    rcx,QWORD PTR [rdx+0x68]
   140036872:	add    rcx,0x1cb8
   140036879:	jmp    0x14001875c
   14003687e:	mov    rcx,QWORD PTR [rdx+0x40]
   140036885:	jmp    0x140002df4
   14003688a:	mov    rcx,QWORD PTR [rdx+0x68]
   140036891:	add    rcx,0x2138
   140036898:	jmp    0x140009278
   14003689d:	mov    rcx,QWORD PTR [rdx+0x68]
   1400368a4:	add    rcx,0x2178
   1400368ab:	jmp    0x14000ca84
   1400368b0:	mov    rcx,QWORD PTR [rdx+0x68]
   1400368b7:	add    rcx,0x2188
   1400368be:	jmp    0x14000ca84
   1400368c3:	mov    rcx,QWORD PTR [rdx+0x68]
   1400368ca:	add    rcx,0x2198
   1400368d1:	jmp    0x1400090dc
   1400368d6:	mov    rcx,QWORD PTR [rdx+0x68]
   1400368dd:	add    rcx,0x21a8
   1400368e4:	jmp    0x1400090dc
   1400368e9:	mov    rcx,QWORD PTR [rdx+0x68]
   1400368f0:	add    rcx,0x21b8
   1400368f7:	jmp    0x140013cd0
   1400368fc:	mov    rcx,QWORD PTR [rdx+0x68]
   140036903:	add    rcx,0x21f0
   14003690a:	jmp    0x140003370
   14003690f:	mov    rcx,QWORD PTR [rdx+0x68]
   140036916:	add    rcx,0x2208
   14003691d:	jmp    0x14000ca84
   140036922:	mov    rcx,QWORD PTR [rdx+0x40]
   140036929:	add    rcx,0x30
   14003692d:	jmp    0x140013bb8
   140036932:	mov    rcx,QWORD PTR [rdx+0x68]
   140036939:	add    rcx,0x2218
   140036940:	jmp    0x140013744
   140036945:	mov    rcx,QWORD PTR [rdx+0x40]
   14003694c:	add    rcx,0x8
   140036950:	jmp    0x14001b6c8
   140036955:	mov    rcx,QWORD PTR [rdx+0x40]
   14003695c:	add    rcx,0x50
   140036960:	jmp    0x14001b6c8
   140036965:	mov    rcx,QWORD PTR [rdx+0x68]
   14003696c:	add    rcx,0x2270
   140036973:	jmp    0x14001ab20
   140036978:	mov    rcx,QWORD PTR [rdx+0x40]
   14003697f:	jmp    0x140020e30
   140036984:	mov    rcx,QWORD PTR [rdx+0x50]
   14003698b:	jmp    0x140002afc
   140036990:	mov    rcx,QWORD PTR [rdx+0x50]
   140036997:	add    rcx,0x8
   14003699b:	jmp    0x14001ce18
   1400369a0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369a7:	add    rcx,0x40
   1400369ab:	jmp    0x140009190
   1400369b0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369b7:	add    rcx,0x58
   1400369bb:	jmp    0x1400162f8
   1400369c0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369c7:	add    rcx,0x70
   1400369cb:	jmp    0x1400162f8
   1400369d0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369d7:	add    rcx,0x88
   1400369de:	jmp    0x1400162f8
   1400369e3:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369ea:	add    rcx,0xa0
   1400369f1:	jmp    0x1400162f8
   1400369f6:	mov    rcx,QWORD PTR [rdx+0x50]
   1400369fd:	add    rcx,0xb8
   140036a04:	jmp    0x1400162f8
   140036a09:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a10:	add    rcx,0xd0
   140036a17:	jmp    0x1400162f8
   140036a1c:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a23:	add    rcx,0xe8
   140036a2a:	jmp    0x1400179a8
   140036a2f:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a36:	add    rcx,0xf8
   140036a3d:	jmp    0x140002518
   140036a42:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a49:	add    rcx,0x110
   140036a50:	jmp    0x1400157a8
   140036a55:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a5c:	add    rcx,0x2a0
   140036a63:	jmp    0x14000ecc0
   140036a68:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a6f:	add    rcx,0xf78
   140036a76:	jmp    0x14000cb64
   140036a7b:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a82:	add    rcx,0x1018
   140036a89:	jmp    0x140011020
   140036a8e:	mov    rcx,QWORD PTR [rdx+0x50]
   140036a95:	add    rcx,0x1108
   140036a9c:	jmp    0x14001448c
   140036aa1:	mov    rcx,QWORD PTR [rdx+0x50]
   140036aa8:	add    rcx,0x11e0
   140036aaf:	jmp    0x14000fa78
   140036ab4:	mov    rcx,QWORD PTR [rdx+0x50]
   140036abb:	add    rcx,0x14e8
   140036ac2:	jmp    0x1400100b8
   140036ac7:	mov    rcx,QWORD PTR [rdx+0x50]
   140036ace:	add    rcx,0x1568
   140036ad5:	jmp    0x14001875c
   140036ada:	mov    rcx,QWORD PTR [rdx+0x50]
   140036ae1:	add    rcx,0x17d8
   140036ae8:	jmp    0x14001875c
   140036aed:	mov    rcx,QWORD PTR [rdx+0x50]
   140036af4:	add    rcx,0x1a48
   140036afb:	jmp    0x14001875c
   140036b00:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b07:	add    rcx,0x1cb8
   140036b0e:	jmp    0x14001875c
   140036b13:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b1a:	add    rcx,0x2138
   140036b21:	jmp    0x140009278
   140036b26:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b2d:	add    rcx,0x2178
   140036b34:	jmp    0x14000ca84
   140036b39:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b40:	add    rcx,0x2188
   140036b47:	jmp    0x14000ca84
   140036b4c:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b53:	add    rcx,0x2198
   140036b5a:	jmp    0x1400090dc
   140036b5f:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b66:	add    rcx,0x21a8
   140036b6d:	jmp    0x1400090dc
   140036b72:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b79:	add    rcx,0x21b8
   140036b80:	jmp    0x140013cd0
   140036b85:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b8c:	add    rcx,0x21f0
   140036b93:	jmp    0x140003370
   140036b98:	mov    rcx,QWORD PTR [rdx+0x50]
   140036b9f:	add    rcx,0x2208
   140036ba6:	jmp    0x14000ca84
   140036bab:	mov    rcx,QWORD PTR [rdx+0x50]
   140036bb2:	add    rcx,0x2218
   140036bb9:	jmp    0x140013744
   140036bbe:	mov    rcx,QWORD PTR [rdx+0x50]
   140036bc5:	add    rcx,0x2270
   140036bcc:	jmp    0x14001ab20
   140036bd1:	mov    rcx,QWORD PTR [rdx+0x58]
   140036bd8:	add    rcx,0x8
   140036bdc:	jmp    0x14001769c
   140036be1:	mov    rcx,QWORD PTR [rdx+0x58]
   140036be8:	jmp    0x140002df4
   140036bed:	mov    rcx,QWORD PTR [rdx+0x20]
   140036bf4:	jmp    0x140002df4
   140036bf9:	mov    rcx,QWORD PTR [rdx+0x40]
   140036c00:	jmp    0x140002df4
   140036c05:	lea    rcx,[rdx+0x50]
   140036c0c:	jmp    0x14000578c
   140036c11:	lea    rcx,[rdx+0x50]
   140036c18:	jmp    0x140005a10
   140036c1d:	lea    rcx,[rdx+0x30]
   140036c24:	jmp    0x1400031d0
   140036c29:	lea    rcx,[rdx+0x50]
   140036c30:	jmp    0x1400031d0
   140036c35:	lea    rcx,[rdx+0x50]
   140036c3c:	jmp    0x1400031d0
   140036c41:	lea    rcx,[rdx+0x68]
   140036c48:	jmp    0x140005a10
   140036c4d:	lea    rcx,[rdx+0x68]
   140036c54:	jmp    0x14000578c
   140036c59:	rex push rbp
   140036c5b:	sub    rsp,0x20
   140036c5f:	mov    rbp,rdx
   140036c62:	mov    rdx,QWORD PTR [rbp+0x100]
   140036c69:	movsxd rax,DWORD PTR [rbp+0xa8]
   140036c70:	imul   rax,rax,0x18
   140036c74:	mov    rdx,QWORD PTR [rdx]
   140036c77:	add    rdx,rax
   140036c7a:	mov    rcx,QWORD PTR [rbp+0x118]
   140036c81:	call   0x140001000
   140036c86:	add    rsp,0x20
   140036c8a:	pop    rbp
   140036c8b:	ret    
   140036c8c:	rex push rbp
   140036c8e:	sub    rsp,0x20
   140036c92:	mov    rbp,rdx
   140036c95:	mov    rdx,QWORD PTR [rbp+0x110]
   140036c9c:	movsxd rax,DWORD PTR [rbp+0x70]
   140036ca0:	mov    rdx,QWORD PTR [rdx]
   140036ca3:	add    rdx,rax
   140036ca6:	mov    rcx,QWORD PTR [rbp+0xb0]
   140036cad:	call   0x140001000
   140036cb2:	add    rsp,0x20
   140036cb6:	pop    rbp
   140036cb7:	ret    
   140036cb8:	lea    rcx,[rdx+0x68]
   140036cbf:	jmp    0x140005a10
   140036cc4:	mov    QWORD PTR [rsp+0x10],rdx
   140036cc9:	push   rbx
   140036cca:	push   rbp
   140036ccb:	sub    rsp,0x58
   140036ccf:	mov    rbp,rdx
   140036cd2:	mov    rdx,QWORD PTR [rbp+0x80]
   140036cd9:	mov    rdx,QWORD PTR [rdx+0x1558]
   140036ce0:	mov    rbx,QWORD PTR [rbp+0x120]
   140036ce7:	mov    rcx,rbx
   140036cea:	call   0x14000313c
   140036cef:	mov    eax,DWORD PTR [rbx+0x4]
   140036cf2:	mov    DWORD PTR [rbp+0x5c],eax
   140036cf5:	lea    rax,[rip+0xfffffffffffd3a09]        # 0x14000a705
   140036cfc:	add    rsp,0x58
   140036d00:	pop    rbp
   140036d01:	pop    rbx
   140036d02:	ret    
   140036d03:	int3   
   140036d04:	rex push rbp
   140036d06:	sub    rsp,0x20
   140036d0a:	mov    rbp,rdx
   140036d0d:	mov    rdx,QWORD PTR [rbp+0xb0]
   140036d14:	movsxd rax,DWORD PTR [rbp+0x70]
   140036d18:	imul   rax,rax,0x8
   140036d1c:	mov    rdx,QWORD PTR [rdx]
   140036d1f:	add    rdx,rax
   140036d22:	mov    rcx,QWORD PTR [rbp+0xa0]
   140036d29:	call   0x140001000
   140036d2e:	add    rsp,0x20
   140036d32:	pop    rbp
   140036d33:	ret    
   140036d34:	mov    rcx,QWORD PTR [rdx+0x40]
   140036d3b:	jmp    0x140020e30
   140036d40:	mov    rcx,QWORD PTR [rdx+0x50]
   140036d47:	add    rcx,0x38
   140036d4b:	jmp    0x1400031d0
   140036d50:	mov    rcx,QWORD PTR [rdx+0x50]
   140036d57:	add    rcx,0x58
   140036d5b:	jmp    0x1400031d0
   140036d60:	mov    rcx,QWORD PTR [rdx+0x40]
   140036d67:	add    rcx,0x8
   140036d6b:	jmp    0x14001769c
   140036d70:	lea    rcx,[rdx+0x40]
   140036d77:	jmp    0x140006018
   140036d7c:	lea    rcx,[rdx+0x30]
   140036d83:	jmp    0x1400031d0
   140036d88:	lea    rcx,[rdx+0x50]
   140036d8f:	jmp    0x1400031d0
   140036d94:	mov    rcx,QWORD PTR [rdx+0x40]
   140036d9b:	jmp    0x140020e30
   140036da0:	mov    rcx,QWORD PTR [rdx+0x40]
   140036da7:	jmp    0x140002afc
   140036dac:	lea    rcx,[rdx+0xe0]
   140036db3:	jmp    0x1400030f8
   140036db8:	mov    QWORD PTR [rsp+0x10],rdx
   140036dbd:	push   rbx
   140036dbe:	push   rbp
   140036dbf:	sub    rsp,0x38
   140036dc3:	mov    rbp,rdx
   140036dc6:	mov    rax,QWORD PTR [rbp+0x80]
   140036dcd:	mov    edx,DWORD PTR [rax+0x4]
   140036dd0:	mov    rbx,QWORD PTR [rbp+0x38]
   140036dd4:	mov    rcx,QWORD PTR [rbx+0x1558]
   140036ddb:	add    rax,0xc
   140036ddf:	mov    QWORD PTR [rbp+0x30],rax
   140036de3:	mov    rax,QWORD PTR [rcx]
   140036de6:	lea    r9,[rbp+0x30]
   140036dea:	mov    r8d,0x1
   140036df0:	call   QWORD PTR [rax]
   140036df2:	mov    rcx,rbx
   140036df5:	call   0x14000b050
   140036dfa:	nop
   140036dfb:	lea    rax,[rip+0xfffffffffffd478f]        # 0x14000b591
   140036e02:	add    rsp,0x38
   140036e06:	pop    rbp
   140036e07:	pop    rbx
   140036e08:	ret    
   140036e09:	int3   
   140036e0a:	mov    QWORD PTR [rsp+0x10],rdx
   140036e0f:	push   rbx
   140036e10:	push   rbp
   140036e11:	sub    rsp,0x38
   140036e15:	mov    rbp,rdx
   140036e18:	mov    rbx,QWORD PTR [rbp+0x38]
   140036e1c:	mov    rdx,QWORD PTR [rbx+0x1558]
   140036e23:	mov    rcx,QWORD PTR [rbp+0x98]
   140036e2a:	call   0x14000313c
   140036e2f:	mov    rcx,rbx
   140036e32:	call   0x14000b050
   140036e37:	nop
   140036e38:	lea    rax,[rip+0xfffffffffffd4752]        # 0x14000b591
   140036e3f:	add    rsp,0x38
   140036e43:	pop    rbp
   140036e44:	pop    rbx
   140036e45:	ret    
   140036e46:	int3   
   140036e47:	mov    QWORD PTR [rsp+0x10],rdx
   140036e4c:	push   rbx
   140036e4d:	push   rbp
   140036e4e:	sub    rsp,0x38
   140036e52:	mov    rbp,rdx
   140036e55:	mov    rdx,QWORD PTR [rbp+0x88]
   140036e5c:	cmp    DWORD PTR [rdx],0x1
   140036e5f:	jne    0x140036e6c
   140036e61:	xor    r9d,r9d
   140036e64:	xor    r8d,r8d
   140036e67:	mov    edx,DWORD PTR [rdx+0x4]
   140036e6a:	jmp    0x140036ea2
   140036e6c:	mov    r9d,DWORD PTR [rdx+0x4]
   140036e70:	lea    r8,[rip+0x65dd]        # 0x14003d454
   140036e77:	mov    edx,0x40
   140036e7c:	lea    rcx,[rbp+0xe0]
   140036e83:	call   0x140001004
   140036e88:	lea    rax,[rbp+0xe0]
   140036e8f:	mov    QWORD PTR [rbp+0x30],rax
   140036e93:	lea    r9,[rbp+0x30]
   140036e97:	mov    edx,0xe123055d
   140036e9c:	mov    r8d,0x1
   140036ea2:	mov    rbx,QWORD PTR [rbp+0x38]
   140036ea6:	mov    rcx,QWORD PTR [rbx+0x1558]
   140036ead:	mov    rax,QWORD PTR [rcx]
   140036eb0:	call   QWORD PTR [rax]
   140036eb2:	mov    rcx,rbx
   140036eb5:	call   0x14000b050
   140036eba:	nop
   140036ebb:	lea    rax,[rip+0xfffffffffffd46cf]        # 0x14000b591
   140036ec2:	add    rsp,0x38
   140036ec6:	pop    rbp
   140036ec7:	pop    rbx
   140036ec8:	ret    
   140036ec9:	int3   
   140036eca:	rex push rbp
   140036ecc:	sub    rsp,0x20
   140036ed0:	mov    rbp,rdx
   140036ed3:	mov    rdx,QWORD PTR [rbp+0x58]
   140036ed7:	mov    rcx,QWORD PTR [rbp+0x28]
   140036edb:	call   0x140001000
   140036ee0:	add    rsp,0x20
   140036ee4:	pop    rbp
   140036ee5:	ret    
   140036ee6:	mov    QWORD PTR [rsp+0x10],rdx
   140036eeb:	push   rbp
   140036eec:	sub    rsp,0x20
   140036ef0:	mov    rbp,rdx
   140036ef3:	mov    rcx,QWORD PTR [rbp+0x50]
   140036ef7:	call   0x140020e30
   140036efc:	xor    edx,edx
   140036efe:	xor    ecx,ecx
   140036f00:	call   0x1400265e8
   140036f05:	nop
   140036f06:	mov    QWORD PTR [rsp+0x10],rdx
   140036f0b:	push   rbp
   140036f0c:	sub    rsp,0x30
   140036f10:	mov    rbp,rdx
   140036f13:	mov    rcx,QWORD PTR [rbp+0x80]
   140036f1a:	call   0x140020e30
   140036f1f:	xor    edx,edx
   140036f21:	xor    ecx,ecx
   140036f23:	call   0x1400265e8
   140036f28:	nop
   140036f29:	mov    QWORD PTR [rsp+0x10],rdx
   140036f2e:	push   rbp
   140036f2f:	sub    rsp,0x30
   140036f33:	mov    rbp,rdx
   140036f36:	mov    rcx,QWORD PTR [rbp+0x80]
   140036f3d:	call   0x140020e30
   140036f42:	xor    edx,edx
   140036f44:	xor    ecx,ecx
   140036f46:	call   0x1400265e8
   140036f4b:	nop
   140036f4c:	rex push rbp
   140036f4e:	sub    rsp,0x20
   140036f52:	mov    rbp,rdx
   140036f55:	mov    rdx,QWORD PTR [rbp+0x40]
   140036f59:	mov    rdx,QWORD PTR [rdx]
   140036f5c:	mov    rcx,QWORD PTR [rbp+0x48]
   140036f60:	call   0x140001000
   140036f65:	add    rsp,0x20
   140036f69:	pop    rbp
   140036f6a:	ret    
   140036f6b:	mov    rcx,QWORD PTR [rdx+0x40]
   140036f72:	jmp    0x14000e428
   140036f77:	mov    rcx,QWORD PTR [rdx+0x40]
   140036f7e:	add    rcx,0x10
   140036f82:	jmp    0x14000e054
   140036f87:	mov    rcx,QWORD PTR [rdx+0x40]
   140036f8e:	add    rcx,0x30
   140036f92:	jmp    0x14000e0c4
   140036f97:	mov    rcx,QWORD PTR [rdx+0x48]
   140036f9e:	add    rcx,0x8
   140036fa2:	jmp    0x14000e4fc
   140036fa7:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fae:	add    rcx,0x8
   140036fb2:	jmp    0x14000e4fc
   140036fb7:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fbe:	jmp    0x14000dcb8
   140036fc3:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fca:	jmp    0x14000dcd8
   140036fcf:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fd6:	jmp    0x14000dcf8
   140036fdb:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fe2:	jmp    0x14000dcf8
   140036fe7:	mov    rcx,QWORD PTR [rdx+0x40]
   140036fee:	jmp    0x14000dcd8
   140036ff3:	mov    rcx,QWORD PTR [rdx+0x40]
   140036ffa:	jmp    0x14000dcf8
   140036fff:	mov    rcx,QWORD PTR [rdx+0x40]
   140037006:	jmp    0x14000d740
   14003700b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037012:	add    rcx,0x8
   140037016:	jmp    0x140009190
   14003701b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037022:	add    rcx,0x38
   140037026:	jmp    0x14000cb48
   14003702b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037032:	add    rcx,0x48
   140037036:	jmp    0x14000ddc0
   14003703b:	mov    rcx,QWORD PTR [rdx+0x48]
   140037042:	add    rcx,0x10
   140037046:	jmp    0x14000e054
   14003704b:	mov    rcx,QWORD PTR [rdx+0x48]
   140037052:	add    rcx,0x30
   140037056:	jmp    0x14000e0c4
   14003705b:	mov    rcx,QWORD PTR [rdx+0x50]
   140037062:	add    rcx,0x8
   140037066:	jmp    0x14000e4fc
   14003706b:	mov    rcx,QWORD PTR [rdx+0x48]
   140037072:	jmp    0x14000d740
   140037077:	rex push rbp
   140037079:	sub    rsp,0x20
   14003707d:	mov    rbp,rdx
   140037080:	mov    rdx,QWORD PTR [rbp+0x48]
   140037084:	mov    rcx,QWORD PTR [rbp+0x50]
   140037088:	call   0x140001000
   14003708d:	add    rsp,0x20
   140037091:	pop    rbp
   140037092:	ret    
   140037093:	rex push rbp
   140037095:	sub    rsp,0x20
   140037099:	mov    rbp,rdx
   14003709c:	mov    rdx,QWORD PTR [rbp+0x48]
   1400370a0:	mov    rcx,QWORD PTR [rbp+0x50]
   1400370a4:	call   0x140001000
   1400370a9:	add    rsp,0x20
   1400370ad:	pop    rbp
   1400370ae:	ret    
   1400370af:	rex push rbp
   1400370b1:	sub    rsp,0x20
   1400370b5:	mov    rbp,rdx
   1400370b8:	mov    rdx,QWORD PTR [rbp+0x48]
   1400370bc:	mov    rcx,QWORD PTR [rbp+0x50]
   1400370c0:	call   0x140001000
   1400370c5:	add    rsp,0x20
   1400370c9:	pop    rbp
   1400370ca:	ret    
   1400370cb:	mov    QWORD PTR [rsp+0x10],rdx
   1400370d0:	push   rbp
   1400370d1:	sub    rsp,0x20
   1400370d5:	mov    rbp,rdx
   1400370d8:	mov    rcx,QWORD PTR [rbp+0x40]
   1400370dc:	call   0x140020e30
   1400370e1:	xor    edx,edx
   1400370e3:	xor    ecx,ecx
   1400370e5:	call   0x1400265e8
   1400370ea:	nop
   1400370eb:	rex push rbp
   1400370ed:	sub    rsp,0x20
   1400370f1:	mov    rbp,rdx
   1400370f4:	mov    rdx,QWORD PTR [rbp+0x50]
   1400370f8:	mov    rcx,QWORD PTR [rbp+0x58]
   1400370fc:	call   0x140001000
   140037101:	add    rsp,0x20
   140037105:	pop    rbp
   140037106:	ret    
   140037107:	rex push rbp
   140037109:	sub    rsp,0x20
   14003710d:	mov    rbp,rdx
   140037110:	mov    rdx,QWORD PTR [rbp+0x50]
   140037114:	mov    rcx,QWORD PTR [rbp+0x58]
   140037118:	call   0x140001000
   14003711d:	add    rsp,0x20
   140037121:	pop    rbp
   140037122:	ret    
   140037123:	rex push rbp
   140037125:	sub    rsp,0x20
   140037129:	mov    rbp,rdx
   14003712c:	mov    rdx,QWORD PTR [rbp+0x50]
   140037130:	mov    rcx,QWORD PTR [rbp+0x58]
   140037134:	call   0x140001000
   140037139:	add    rsp,0x20
   14003713d:	pop    rbp
   14003713e:	ret    
   14003713f:	mov    QWORD PTR [rsp+0x10],rdx
   140037144:	push   rbp
   140037145:	sub    rsp,0x20
   140037149:	mov    rbp,rdx
   14003714c:	mov    rcx,QWORD PTR [rbp+0x48]
   140037150:	call   0x140020e30
   140037155:	xor    edx,edx
   140037157:	xor    ecx,ecx
   140037159:	call   0x1400265e8
   14003715e:	nop
   14003715f:	mov    rcx,QWORD PTR [rdx+0x48]
   140037166:	jmp    0x14000566c
   14003716b:	mov    rcx,QWORD PTR [rdx+0x48]
   140037172:	add    rcx,0x8
   140037176:	jmp    0x140002518
   14003717b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037182:	add    rcx,0x10
   140037186:	jmp    0x14000257c
   14003718b:	mov    rcx,QWORD PTR [rdx+0x50]
   140037192:	jmp    0x14000566c
   140037197:	mov    rcx,QWORD PTR [rdx+0x50]
   14003719e:	add    rcx,0x8
   1400371a2:	jmp    0x140002518
   1400371a7:	mov    rcx,QWORD PTR [rdx+0x48]
   1400371ae:	add    rcx,0x20
   1400371b2:	jmp    0x14000257c
   1400371b7:	mov    rcx,QWORD PTR [rdx+0x50]
   1400371be:	jmp    0x140002518
   1400371c3:	mov    rcx,QWORD PTR [rdx+0x48]
   1400371ca:	add    rcx,0x170
   1400371d1:	jmp    0x140020c64
   1400371d6:	mov    rcx,QWORD PTR [rdx+0x58]
   1400371dd:	jmp    0x14000566c
   1400371e2:	mov    rcx,QWORD PTR [rdx+0x58]
   1400371e9:	add    rcx,0x8
   1400371ed:	jmp    0x140002518
   1400371f2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400371f9:	add    rcx,0x10
   1400371fd:	jmp    0x14000257c
   140037202:	mov    rcx,QWORD PTR [rdx+0x8]
   140037209:	jmp    0x14000566c
   14003720e:	mov    rcx,QWORD PTR [rdx+0x8]
   140037215:	add    rcx,0x8
   140037219:	jmp    0x140002518
   14003721e:	mov    rcx,QWORD PTR [rdx+0x58]
   140037225:	add    rcx,0x10
   140037229:	jmp    0x14000257c
   14003722e:	mov    rcx,QWORD PTR [rdx+0x50]
   140037235:	add    rcx,0x150
   14003723c:	jmp    0x14001fd2c
   140037241:	mov    rcx,QWORD PTR [rdx+0x48]
   140037248:	add    rcx,0x180
   14003724f:	jmp    0x14001ec1c
   140037254:	mov    rcx,QWORD PTR [rdx+0x40]
   14003725b:	add    rcx,0x150
   140037262:	jmp    0x14001ee9c
   140037267:	mov    rcx,QWORD PTR [rdx+0x50]
   14003726e:	jmp    0x14000566c
   140037273:	mov    rcx,QWORD PTR [rdx+0x50]
   14003727a:	add    rcx,0x8
   14003727e:	jmp    0x140002518
   140037283:	mov    rcx,QWORD PTR [rdx+0x48]
   14003728a:	add    rcx,0x10
   14003728e:	jmp    0x14000257c
   140037293:	mov    rcx,QWORD PTR [rdx+0x58]
   14003729a:	jmp    0x14000566c
   14003729f:	mov    rcx,QWORD PTR [rdx+0x58]
   1400372a6:	add    rcx,0x8
   1400372aa:	jmp    0x140002518
   1400372af:	mov    rcx,QWORD PTR [rdx+0x50]
   1400372b6:	add    rcx,0x10
   1400372ba:	jmp    0x14000257c
   1400372bf:	mov    rcx,QWORD PTR [rdx+0x48]
   1400372c6:	add    rcx,0x150
   1400372cd:	jmp    0x14001fd80
   1400372d2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400372d9:	jmp    0x140002518
   1400372de:	mov    rcx,QWORD PTR [rdx+0x48]
   1400372e5:	add    rcx,0x2b0
   1400372ec:	jmp    0x1400162f8
   1400372f1:	mov    rcx,QWORD PTR [rdx+0x50]
   1400372f8:	jmp    0x140002518
   1400372fd:	mov    rcx,QWORD PTR [rdx+0x48]
   140037304:	add    rcx,0x2c8
   14003730b:	jmp    0x1400162f8
   140037310:	mov    rcx,QWORD PTR [rdx+0x40]
   140037317:	add    rcx,0x578
   14003731e:	jmp    0x14001f174
   140037323:	mov    rcx,QWORD PTR [rdx+0x50]
   14003732a:	jmp    0x14000566c
   14003732f:	mov    rcx,QWORD PTR [rdx+0x50]
   140037336:	add    rcx,0x8
   14003733a:	jmp    0x140002518
   14003733f:	mov    rcx,QWORD PTR [rdx+0x48]
   140037346:	add    rcx,0x10
   14003734a:	jmp    0x14000257c
   14003734f:	mov    rcx,QWORD PTR [rdx+0x48]
   140037356:	jmp    0x14001f264
   14003735b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037362:	add    rcx,0x870
   140037369:	jmp    0x14001e9a0
   14003736e:	mov    rcx,QWORD PTR [rdx+0x50]
   140037375:	jmp    0x14000566c
   14003737a:	mov    rcx,QWORD PTR [rdx+0x50]
   140037381:	add    rcx,0x8
   140037385:	jmp    0x140002518
   14003738a:	mov    rcx,QWORD PTR [rdx+0x48]
   140037391:	add    rcx,0x18
   140037395:	jmp    0x14000257c
   14003739a:	mov    rcx,QWORD PTR [rdx+0x50]
   1400373a1:	jmp    0x14000566c
   1400373a6:	mov    rcx,QWORD PTR [rdx+0x50]
   1400373ad:	add    rcx,0x8
   1400373b1:	jmp    0x140002518
   1400373b6:	mov    rcx,QWORD PTR [rdx+0x48]
   1400373bd:	add    rcx,0x158
   1400373c4:	jmp    0x14000257c
   1400373c9:	mov    rcx,QWORD PTR [rdx+0x50]
   1400373d0:	jmp    0x140002afc
   1400373d5:	mov    rcx,QWORD PTR [rdx+0x50]
   1400373dc:	add    rcx,0x20
   1400373e0:	jmp    0x140009190
   1400373e5:	mov    rcx,QWORD PTR [rdx+0x48]
   1400373ec:	add    rcx,0x2a0
   1400373f3:	jmp    0x14001ce18
   1400373f8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400373ff:	add    rcx,0x9f8
   140037406:	jmp    0x14001e110
   14003740b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037412:	add    rcx,0x10
   140037416:	jmp    0x14000257c
   14003741b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037422:	add    rcx,0x150
   140037429:	jmp    0x14001ee9c
   14003742e:	mov    rcx,QWORD PTR [rdx+0x40]
   140037435:	add    rcx,0x578
   14003743c:	jmp    0x14001f174
   140037441:	mov    rcx,QWORD PTR [rdx+0x40]
   140037448:	add    rcx,0x870
   14003744f:	jmp    0x14001e9a0
   140037454:	mov    rcx,QWORD PTR [rdx+0x40]
   14003745b:	add    rcx,0x9f8
   140037462:	jmp    0x14001e110
   140037467:	mov    rcx,QWORD PTR [rdx+0x48]
   14003746e:	jmp    0x14001f264
   140037473:	rex push rbp
   140037475:	sub    rsp,0x20
   140037479:	mov    rbp,rdx
   14003747c:	mov    rdx,QWORD PTR [rbp+0x40]
   140037480:	mov    rcx,QWORD PTR [rbp+0x50]
   140037484:	call   0x140001000
   140037489:	add    rsp,0x20
   14003748d:	pop    rbp
   14003748e:	ret    
   14003748f:	mov    rcx,QWORD PTR [rdx+0x40]
   140037496:	jmp    0x140020e30
   14003749b:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374a2:	add    rcx,0x10
   1400374a6:	jmp    0x14001f4dc
   1400374ab:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374b2:	add    rcx,0x10
   1400374b6:	jmp    0x140009190
   1400374bb:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374c2:	jmp    0x1400128f8
   1400374c7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374ce:	add    rcx,0x10
   1400374d2:	jmp    0x14000e4fc
   1400374d7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374de:	add    rcx,0x48
   1400374e2:	jmp    0x140009190
   1400374e7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374ee:	add    rcx,0x60
   1400374f2:	jmp    0x14000ddc0
   1400374f7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400374fe:	add    rcx,0xb8
   140037505:	jmp    0x140012668
   14003750a:	mov    rcx,QWORD PTR [rdx+0x48]
   140037511:	jmp    0x1400128f8
   140037516:	mov    rcx,QWORD PTR [rdx+0x48]
   14003751d:	add    rcx,0x10
   140037521:	jmp    0x14000e4fc
   140037526:	mov    rcx,QWORD PTR [rdx+0x48]
   14003752d:	add    rcx,0x10
   140037531:	jmp    0x14000e054
   140037536:	mov    rcx,QWORD PTR [rdx+0x48]
   14003753d:	add    rcx,0x30
   140037541:	jmp    0x14000e0c4
   140037546:	mov    rcx,QWORD PTR [rdx+0x50]
   14003754d:	add    rcx,0x8
   140037551:	jmp    0x14000e4fc
   140037556:	lea    rcx,[rdx+0x40]
   14003755d:	jmp    0x140009158
   140037562:	lea    rcx,[rdx+0xa8]
   140037569:	jmp    0x140009158
   14003756e:	lea    rcx,[rdx+0x78]
   140037575:	jmp    0x14000578c
   14003757a:	lea    rcx,[rdx+0x78]
   140037581:	jmp    0x140012bf8
   140037586:	lea    rcx,[rdx+0x78]
   14003758d:	jmp    0x14000578c
   140037592:	mov    rcx,QWORD PTR [rdx+0x38]
   140037599:	jmp    0x140005a10
   14003759e:	mov    rcx,QWORD PTR [rdx+0x40]
   1400375a5:	jmp    0x14000578c
   1400375aa:	mov    rcx,QWORD PTR [rdx+0x40]
   1400375b1:	jmp    0x140005a10
   1400375b6:	mov    rcx,QWORD PTR [rdx+0x40]
   1400375bd:	jmp    0x140012c2c
   1400375c2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400375c9:	add    rcx,0x30
   1400375cd:	jmp    0x140013bb8
   1400375d2:	rex push rbp
   1400375d4:	mov    rbp,rdx
   1400375d7:	mov    eax,DWORD PTR [rip+0x1ac4f]        # 0x14005222c
   1400375dd:	and    eax,0xfffffffe
   1400375e0:	mov    DWORD PTR [rip+0x1ac46],eax        # 0x14005222c
   1400375e6:	pop    rbp
   1400375e7:	ret    
   1400375e8:	mov    rcx,QWORD PTR [rdx+0x70]
   1400375ef:	jmp    0x140020e30
   1400375f4:	mov    rcx,QWORD PTR [rdx+0x70]
   1400375fb:	jmp    0x140012c2c
   140037600:	mov    rcx,QWORD PTR [rdx+0x70]
   140037607:	jmp    0x140020e30
   14003760c:	mov    rcx,QWORD PTR [rdx+0x70]
   140037613:	jmp    0x140012c2c
   140037618:	lea    rcx,[rdx+0x60]
   14003761f:	jmp    0x14000578c
   140037624:	lea    rcx,[rdx+0x60]
   14003762b:	jmp    0x140012bf8
   140037630:	lea    rcx,[rdx+0x60]
   140037637:	jmp    0x14000578c
   14003763c:	mov    rcx,QWORD PTR [rdx+0x38]
   140037643:	jmp    0x140005a10
   140037648:	rex push rbp
   14003764a:	sub    rsp,0x20
   14003764e:	mov    rbp,rdx
   140037651:	mov    rdx,QWORD PTR [rbp+0x50]
   140037655:	mov    rdx,QWORD PTR [rdx]
   140037658:	mov    rcx,QWORD PTR [rbp+0x58]
   14003765c:	call   0x140001000
   140037661:	add    rsp,0x20
   140037665:	pop    rbp
   140037666:	ret    
   140037667:	mov    rcx,QWORD PTR [rdx+0x58]
   14003766e:	add    rcx,0x10
   140037672:	jmp    0x140009190
   140037677:	mov    rcx,QWORD PTR [rdx+0x40]
   14003767e:	jmp    0x1400128f8
   140037683:	mov    rcx,QWORD PTR [rdx+0x40]
   14003768a:	add    rcx,0x10
   14003768e:	jmp    0x14000e4fc
   140037693:	mov    rcx,QWORD PTR [rdx+0x40]
   14003769a:	jmp    0x14000566c
   14003769f:	mov    rcx,QWORD PTR [rdx+0x40]
   1400376a6:	add    rcx,0x58
   1400376aa:	jmp    0x14000e0c4
   1400376af:	mov    rcx,QWORD PTR [rdx+0x40]
   1400376b6:	add    rcx,0xa0
   1400376bd:	jmp    0x140015e94
   1400376c2:	mov    rcx,QWORD PTR [rdx+0x48]
   1400376c9:	jmp    0x140003200
   1400376ce:	mov    rcx,QWORD PTR [rdx+0x48]
   1400376d5:	add    rcx,0x8
   1400376d9:	jmp    0x14000e4fc
   1400376de:	lea    rcx,[rip+0x1ab53]        # 0x140052238
   1400376e5:	jmp    0x1400128f8
   1400376ea:	lea    rcx,[rip+0x1ab47]        # 0x140052238
   1400376f1:	add    rcx,0x10
   1400376f5:	jmp    0x14000e4fc
   1400376fa:	rex push rbp
   1400376fc:	mov    rbp,rdx
   1400376ff:	mov    eax,DWORD PTR [rip+0x1ab2b]        # 0x140052230
   140037705:	and    eax,0xfffffffe
   140037708:	mov    DWORD PTR [rip+0x1ab22],eax        # 0x140052230
   14003770e:	pop    rbp
   14003770f:	ret    
   140037710:	lea    rcx,[rdx+0x80]
   140037717:	add    rcx,0x8
   14003771b:	jmp    0x14000e4fc
   140037720:	lea    rcx,[rdx+0x80]
   140037727:	jmp    0x14000e0c4
   14003772c:	lea    rcx,[rdx+0x80]
   140037733:	add    rcx,0x8
   140037737:	jmp    0x14000e4fc
   14003773c:	lea    rcx,[rdx+0x80]
   140037743:	jmp    0x140009158
   140037748:	lea    rcx,[rdx+0x38]
   14003774f:	jmp    0x140002afc
   140037754:	lea    rcx,[rdx+0x38]
   14003775b:	add    rcx,0x20
   14003775f:	jmp    0x140009190
   140037764:	lea    rcx,[rdx+0x38]
   14003776b:	jmp    0x14001ce18
   140037770:	lea    rcx,[rdx+0x48]
   140037777:	jmp    0x140009158
   14003777c:	mov    rcx,QWORD PTR [rdx+0x40]
   140037783:	add    rcx,0x8
   140037787:	jmp    0x14001dff4
   14003778c:	mov    rcx,QWORD PTR [rdx+0x40]
   140037793:	jmp    0x14000ddc0
   140037798:	mov    rcx,QWORD PTR [rdx+0x40]
   14003779f:	add    rcx,0x58
   1400377a3:	jmp    0x140009190
   1400377a8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400377af:	add    rcx,0x10
   1400377b3:	jmp    0x14000e054
   1400377b8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400377bf:	add    rcx,0x30
   1400377c3:	jmp    0x14000e0c4
   1400377c8:	mov    rcx,QWORD PTR [rdx+0x48]
   1400377cf:	add    rcx,0x8
   1400377d3:	jmp    0x14000e4fc
   1400377d8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400377df:	add    rcx,0x8
   1400377e3:	jmp    0x1400158b4
   1400377e8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400377ef:	add    rcx,0x78
   1400377f3:	jmp    0x1400158b4
   1400377f8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400377ff:	add    rcx,0xe8
   140037806:	jmp    0x140009190
   14003780b:	mov    rcx,QWORD PTR [rdx+0x48]
   140037812:	jmp    0x14000ddc0
   140037817:	mov    rcx,QWORD PTR [rdx+0x48]
   14003781e:	add    rcx,0x58
   140037822:	jmp    0x140009190
   140037827:	mov    rcx,QWORD PTR [rdx+0x48]
   14003782e:	add    rcx,0x10
   140037832:	jmp    0x14000e054
   140037837:	mov    rcx,QWORD PTR [rdx+0x48]
   14003783e:	add    rcx,0x30
   140037842:	jmp    0x14000e0c4
   140037847:	mov    rcx,QWORD PTR [rdx+0x50]
   14003784e:	add    rcx,0x8
   140037852:	jmp    0x14000e4fc
   140037857:	mov    rcx,QWORD PTR [rdx+0x40]
   14003785e:	jmp    0x14000ddc0
   140037863:	mov    rcx,QWORD PTR [rdx+0x40]
   14003786a:	add    rcx,0x58
   14003786e:	jmp    0x140009190
   140037873:	mov    rcx,QWORD PTR [rdx+0x40]
   14003787a:	add    rcx,0x10
   14003787e:	jmp    0x14000e054
   140037883:	mov    rcx,QWORD PTR [rdx+0x40]
   14003788a:	add    rcx,0x30
   14003788e:	jmp    0x14000e0c4
   140037893:	mov    rcx,QWORD PTR [rdx+0x48]
   14003789a:	add    rcx,0x8
   14003789e:	jmp    0x14000e4fc
   1400378a3:	lea    rcx,[rip+0x19a26]        # 0x1400512d0
   1400378aa:	jmp    0x1400157d4
   1400378af:	lea    rcx,[rip+0x1976a]        # 0x140051020
   1400378b6:	jmp    0x1400157d4
   1400378bb:	rex push rbp
   1400378bd:	sub    rsp,0x20
   1400378c1:	mov    rbp,rdx
   1400378c4:	mov    rdx,QWORD PTR [rbp+0x50]
   1400378c8:	mov    rcx,QWORD PTR [rbp+0x58]
   1400378cc:	call   0x140001000
   1400378d1:	add    rsp,0x20
   1400378d5:	pop    rbp
   1400378d6:	ret    
   1400378d7:	mov    QWORD PTR [rsp+0x10],rdx
   1400378dc:	push   rbp
   1400378dd:	sub    rsp,0x20
   1400378e1:	mov    rbp,rdx
   1400378e4:	xor    edx,edx
   1400378e6:	xor    ecx,ecx
   1400378e8:	call   0x1400265e8
   1400378ed:	nop
   1400378ee:	mov    rcx,QWORD PTR [rdx+0x40]
   1400378f5:	jmp    0x140003200
   1400378fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400378ff:	push   rbp
   140037900:	sub    rsp,0x30
   140037904:	mov    rbp,rdx
   140037907:	mov    rcx,QWORD PTR [rbp+0x58]
   14003790b:	call   0x140020e30
   140037910:	xor    edx,edx
   140037912:	xor    ecx,ecx
   140037914:	call   0x1400265e8
   140037919:	nop
   14003791a:	mov    rcx,QWORD PTR [rdx+0x40]
   140037921:	jmp    0x140005a10
   140037926:	mov    rcx,QWORD PTR [rdx+0x40]
   14003792d:	add    rcx,0x8
   140037931:	jmp    0x14000578c
   140037936:	mov    rcx,QWORD PTR [rdx+0x40]
   14003793d:	jmp    0x140005a10
   140037942:	lea    rcx,[rdx+0x98]
   140037949:	jmp    0x14000578c
   14003794e:	lea    rcx,[rdx+0x90]
   140037955:	jmp    0x14000578c
   14003795a:	lea    rcx,[rdx+0x88]
   140037961:	jmp    0x14000578c
   140037966:	lea    rcx,[rdx+0x88]
   14003796d:	jmp    0x140005a10
   140037972:	lea    rcx,[rdx+0x90]
   140037979:	jmp    0x140005a10
   14003797e:	lea    rcx,[rdx+0x98]
   140037985:	jmp    0x140005a10
   14003798a:	lea    rcx,[rdx+0x48]
   140037991:	jmp    0x1400172d8
   140037996:	lea    rcx,[rdx+0x50]
   14003799d:	jmp    0x1400172d0
   1400379a2:	lea    rcx,[rdx+0x58]
   1400379a9:	jmp    0x1400172d0
   1400379ae:	lea    rcx,[rdx+0xc8]
   1400379b5:	jmp    0x14000578c
   1400379ba:	lea    rcx,[rdx+0xc8]
   1400379c1:	jmp    0x140005a10
   1400379c6:	lea    rcx,[rdx+0xc8]
   1400379cd:	jmp    0x140005a10
   1400379d2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400379d9:	add    rcx,0x38
   1400379dd:	jmp    0x1400031d0
   1400379e2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400379e9:	add    rcx,0x58
   1400379ed:	jmp    0x1400031d0
   1400379f2:	lea    rcx,[rdx+0x38]
   1400379f9:	jmp    0x14000578c
   1400379fe:	lea    rcx,[rdx+0x38]
   140037a05:	jmp    0x140005a10
   140037a0a:	lea    rcx,[rdx+0x20]
   140037a11:	jmp    0x14000578c
   140037a16:	lea    rcx,[rdx+0x20]
   140037a1d:	jmp    0x140005a10
   140037a22:	rex push rbp
   140037a24:	sub    rsp,0x20
   140037a28:	mov    rbp,rdx
   140037a2b:	mov    eax,DWORD PTR [rbp+0x20]
   140037a2e:	and    eax,0x1
   140037a31:	test   eax,eax
   140037a33:	je     0x140037a42
   140037a35:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140037a39:	mov    rcx,QWORD PTR [rbp+0x48]
   140037a3d:	call   0x14000578c
   140037a42:	add    rsp,0x20
   140037a46:	pop    rbp
   140037a47:	ret    
   140037a48:	rex push rbp
   140037a4a:	sub    rsp,0x20
   140037a4e:	mov    rbp,rdx
   140037a51:	mov    eax,DWORD PTR [rbp+0x20]
   140037a54:	and    eax,0x1
   140037a57:	test   eax,eax
   140037a59:	je     0x140037a68
   140037a5b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140037a5f:	mov    rcx,QWORD PTR [rbp+0x58]
   140037a63:	call   0x14000578c
   140037a68:	add    rsp,0x20
   140037a6c:	pop    rbp
   140037a6d:	ret    
   140037a6e:	mov    rcx,QWORD PTR [rdx+0x58]
   140037a75:	jmp    0x140005a10
   140037a7a:	lea    rcx,[rdx+0x68]
   140037a81:	add    rcx,0x8
   140037a85:	jmp    0x140003200
   140037a8a:	lea    rcx,[rdx+0x68]
   140037a91:	add    rcx,0x20
   140037a95:	jmp    0x140003370
   140037a9a:	lea    rcx,[rdx+0xa0]
   140037aa1:	add    rcx,0x8
   140037aa5:	jmp    0x140003200
   140037aaa:	lea    rcx,[rdx+0xa0]
   140037ab1:	add    rcx,0x20
   140037ab5:	jmp    0x140003370
   140037aba:	lea    rcx,[rdx+0x30]
   140037ac1:	jmp    0x1400090dc
   140037ac6:	lea    rcx,[rdx+0x50]
   140037acd:	jmp    0x14000578c
   140037ad2:	lea    rcx,[rdx+0x50]
   140037ad9:	jmp    0x140005a10
   140037ade:	lea    rcx,[rdx+0x60]
   140037ae5:	jmp    0x14000578c
   140037aea:	lea    rcx,[rdx+0x60]
   140037af1:	jmp    0x140005a10
   140037af6:	lea    rcx,[rdx+0x58]
   140037afd:	jmp    0x14000578c
   140037b02:	lea    rcx,[rdx+0x58]
   140037b09:	jmp    0x140005a10
   140037b0e:	lea    rcx,[rdx+0x48]
   140037b15:	jmp    0x14000578c
   140037b1a:	lea    rcx,[rdx+0x48]
   140037b21:	jmp    0x140005a10
   140037b26:	mov    QWORD PTR [rsp+0x10],rdx
   140037b2b:	push   rbp
   140037b2c:	sub    rsp,0x20
   140037b30:	mov    rbp,rdx
   140037b33:	lea    rax,[rip+0xfffffffffffe077d]        # 0x1400182b7
   140037b3a:	add    rsp,0x20
   140037b3e:	pop    rbp
   140037b3f:	ret    
   140037b40:	int3   
   140037b41:	mov    rcx,QWORD PTR [rdx+0x40]
   140037b48:	jmp    0x14000566c
   140037b4d:	mov    QWORD PTR [rsp+0x10],rdx
   140037b52:	push   rbp
   140037b53:	mov    rbp,rdx
   140037b56:	mov    rax,QWORD PTR [rbp+0x40]
   140037b5a:	mov    BYTE PTR [rax+0x22c],0x0
   140037b61:	lea    rax,[rip+0xfffffffffffe08b0]        # 0x140018418
   140037b68:	pop    rbp
   140037b69:	ret    
   140037b6a:	int3   
   140037b6b:	mov    rcx,QWORD PTR [rdx+0x40]
   140037b72:	jmp    0x14000566c
   140037b77:	mov    QWORD PTR [rsp+0x10],rdx
   140037b7c:	push   rbp
   140037b7d:	sub    rsp,0x20
   140037b81:	mov    rbp,rdx
   140037b84:	mov    rcx,QWORD PTR [rbp+0x70]
   140037b88:	mov    rax,QWORD PTR [rcx]
   140037b8b:	mov    rdx,QWORD PTR [rbp+0x28]
   140037b8f:	call   QWORD PTR [rax]
   140037b91:	nop
   140037b92:	lea    rax,[rip+0xfffffffffffe0afe]        # 0x140018697
   140037b99:	add    rsp,0x20
   140037b9d:	pop    rbp
   140037b9e:	ret    
   140037b9f:	int3   
   140037ba0:	mov    rcx,QWORD PTR [rdx+0x40]
   140037ba7:	jmp    0x1400187b8
   140037bac:	mov    rcx,QWORD PTR [rdx+0x40]
   140037bb3:	add    rcx,0x10
   140037bb7:	jmp    0x140019adc
   140037bbc:	mov    rcx,QWORD PTR [rdx+0x50]
   140037bc3:	jmp    0x140005a10
   140037bc8:	rex push rbp
   140037bca:	sub    rsp,0x20
   140037bce:	mov    rbp,rdx
   140037bd1:	mov    eax,DWORD PTR [rbp+0x30]
   140037bd4:	and    eax,0x1
   140037bd7:	test   eax,eax
   140037bd9:	je     0x140037be8
   140037bdb:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140037bdf:	mov    rcx,QWORD PTR [rbp+0x50]
   140037be3:	call   0x14000578c
   140037be8:	add    rsp,0x20
   140037bec:	pop    rbp
   140037bed:	ret    
   140037bee:	lea    rcx,[rip+0x16f2b]        # 0x14004eb20
   140037bf5:	jmp    0x1400187b8
   140037bfa:	lea    rcx,[rip+0x16f1f]        # 0x14004eb20
   140037c01:	add    rcx,0x10
   140037c05:	jmp    0x140019adc
   140037c0a:	rex push rbp
   140037c0c:	sub    rsp,0x20
   140037c10:	mov    rbp,rdx
   140037c13:	mov    rdx,QWORD PTR [rbp+0x50]
   140037c17:	movsxd rax,DWORD PTR [rbp+0x68]
   140037c1b:	imul   rax,rax,0x8
   140037c1f:	mov    rdx,QWORD PTR [rdx]
   140037c22:	add    rdx,rax
   140037c25:	mov    rcx,QWORD PTR [rbp+0x28]
   140037c29:	call   0x140001000
   140037c2e:	add    rsp,0x20
   140037c32:	pop    rbp
   140037c33:	ret    
   140037c34:	mov    rcx,QWORD PTR [rdx+0x28]
   140037c3b:	jmp    0x14000578c
   140037c40:	rex push rbp
   140037c42:	sub    rsp,0x20
   140037c46:	mov    rbp,rdx
   140037c49:	mov    rdx,QWORD PTR [rbp+0x50]
   140037c4d:	add    rdx,0x8
   140037c51:	movsxd rax,DWORD PTR [rbp+0x68]
   140037c55:	imul   rax,rax,0x48
   140037c59:	mov    rdx,QWORD PTR [rdx]
   140037c5c:	add    rdx,rax
   140037c5f:	mov    rcx,QWORD PTR [rbp+0x28]
   140037c63:	call   0x140001000
   140037c68:	add    rsp,0x20
   140037c6c:	pop    rbp
   140037c6d:	ret    
   140037c6e:	lea    rcx,[rdx+0x68]
   140037c75:	jmp    0x14000578c
   140037c7a:	lea    rcx,[rdx+0x68]
   140037c81:	jmp    0x140005a10
   140037c86:	mov    QWORD PTR [rsp+0x10],rdx
   140037c8b:	push   rbp
   140037c8c:	sub    rsp,0x20
   140037c90:	mov    rbp,rdx
   140037c93:	lea    rax,[rip+0xfffffffffffe0f0c]        # 0x140018ba6
   140037c9a:	add    rsp,0x20
   140037c9e:	pop    rbp
   140037c9f:	ret    
   140037ca0:	int3   
   140037ca1:	lea    rcx,[rdx+0x40]
   140037ca8:	jmp    0x14000578c
   140037cad:	lea    rcx,[rdx+0x40]
   140037cb4:	jmp    0x140005a10
   140037cb9:	lea    rcx,[rdx+0x20]
   140037cc0:	jmp    0x14000578c
   140037cc5:	lea    rcx,[rdx+0x30]
   140037ccc:	jmp    0x140005a10
   140037cd1:	lea    rcx,[rdx+0x30]
   140037cd8:	jmp    0x14000578c
   140037cdd:	lea    rcx,[rdx+0xa0]
   140037ce4:	jmp    0x14000578c
   140037ce9:	lea    rcx,[rdx+0xa0]
   140037cf0:	jmp    0x140005a10
   140037cf5:	lea    rcx,[rdx+0x38]
   140037cfc:	jmp    0x140005a10
   140037d01:	lea    rcx,[rdx+0x38]
   140037d08:	jmp    0x14000578c
   140037d0d:	lea    rcx,[rdx+0xf0]
   140037d14:	jmp    0x14000578c
   140037d19:	lea    rcx,[rdx+0x90]
   140037d20:	jmp    0x14000578c
   140037d25:	lea    rcx,[rdx+0xd0]
   140037d2c:	jmp    0x14000578c
   140037d31:	lea    rcx,[rdx+0x80]
   140037d38:	jmp    0x14000578c
   140037d3d:	lea    rcx,[rdx+0xe0]
   140037d44:	jmp    0x14000578c
   140037d49:	lea    rcx,[rdx+0x28]
   140037d50:	jmp    0x14000578c
   140037d55:	lea    rcx,[rdx+0xe0]
   140037d5c:	jmp    0x140005a10
   140037d61:	lea    rcx,[rdx+0x80]
   140037d68:	jmp    0x140005a10
   140037d6d:	lea    rcx,[rdx+0xd0]
   140037d74:	jmp    0x140005a10
   140037d79:	lea    rcx,[rdx+0x90]
   140037d80:	jmp    0x140005a10
   140037d85:	lea    rcx,[rdx+0xf0]
   140037d8c:	jmp    0x140005a10
   140037d91:	lea    rcx,[rdx+0x38]
   140037d98:	jmp    0x140005a10
   140037d9d:	lea    rcx,[rdx+0x60]
   140037da4:	jmp    0x14000578c
   140037da9:	lea    rcx,[rdx+0x60]
   140037db0:	jmp    0x140005a10
   140037db5:	lea    rcx,[rdx+0x50]
   140037dbc:	jmp    0x140005a10
   140037dc1:	lea    rcx,[rdx+0x50]
   140037dc8:	jmp    0x14000578c
   140037dcd:	lea    rcx,[rdx+0xc0]
   140037dd4:	jmp    0x14000578c
   140037dd9:	lea    rcx,[rdx+0xd8]
   140037de0:	jmp    0x14000578c
   140037de5:	lea    rcx,[rdx+0xb0]
   140037dec:	jmp    0x14000578c
   140037df1:	lea    rcx,[rdx+0xe8]
   140037df8:	jmp    0x14000578c
   140037dfd:	lea    rcx,[rdx+0xe8]
   140037e04:	jmp    0x140005a10
   140037e09:	lea    rcx,[rdx+0xb0]
   140037e10:	jmp    0x140005a10
   140037e15:	lea    rcx,[rdx+0xd8]
   140037e1c:	jmp    0x140005a10
   140037e21:	lea    rcx,[rdx+0xc0]
   140037e28:	jmp    0x140005a10
   140037e2d:	lea    rcx,[rdx+0x50]
   140037e34:	jmp    0x140005a10
   140037e39:	lea    rcx,[rdx+0x68]
   140037e40:	jmp    0x14000578c
   140037e45:	lea    rcx,[rdx+0x68]
   140037e4c:	jmp    0x140005a10
   140037e51:	lea    rcx,[rdx+0x40]
   140037e58:	jmp    0x140005a10
   140037e5d:	lea    rcx,[rdx+0x40]
   140037e64:	jmp    0x14000578c
   140037e69:	lea    rcx,[rdx+0x88]
   140037e70:	jmp    0x14000578c
   140037e75:	lea    rcx,[rdx+0x78]
   140037e7c:	jmp    0x14000578c
   140037e81:	lea    rcx,[rdx+0x78]
   140037e88:	jmp    0x140005a10
   140037e8d:	lea    rcx,[rdx+0x88]
   140037e94:	jmp    0x140005a10
   140037e99:	lea    rcx,[rdx+0x40]
   140037ea0:	jmp    0x140005a10
   140037ea5:	lea    rcx,[rdx+0x48]
   140037eac:	jmp    0x140005a10
   140037eb1:	lea    rcx,[rdx+0x48]
   140037eb8:	jmp    0x14000578c
   140037ebd:	lea    rcx,[rdx+0xa8]
   140037ec4:	jmp    0x14000578c
   140037ec9:	lea    rcx,[rdx+0x98]
   140037ed0:	jmp    0x14000578c
   140037ed5:	lea    rcx,[rdx+0x98]
   140037edc:	jmp    0x140005a10
   140037ee1:	lea    rcx,[rdx+0xa8]
   140037ee8:	jmp    0x140005a10
   140037eed:	lea    rcx,[rdx+0x48]
   140037ef4:	jmp    0x140005a10
   140037ef9:	lea    rcx,[rdx+0xb8]
   140037f00:	jmp    0x14000578c
   140037f05:	lea    rcx,[rdx+0xb8]
   140037f0c:	jmp    0x140005a10
   140037f11:	lea    rcx,[rdx+0x28]
   140037f18:	jmp    0x140005a10
   140037f1d:	lea    rcx,[rdx+0x30]
   140037f24:	jmp    0x140005a10
   140037f29:	lea    rcx,[rdx+0x20]
   140037f30:	jmp    0x140005a10
   140037f35:	mov    QWORD PTR [rsp+0x10],rdx
   140037f3a:	push   rbp
   140037f3b:	sub    rsp,0x20
   140037f3f:	mov    rbp,rdx
   140037f42:	and    DWORD PTR [rip+0x16bff],0x0        # 0x14004eb48
   140037f49:	lea    rax,[rip+0xfffffffffffe094b]        # 0x14001889b
   140037f50:	add    rsp,0x20
   140037f54:	pop    rbp
   140037f55:	ret    
   140037f56:	int3   
   140037f57:	lea    rcx,[rdx+0x78]
   140037f5e:	jmp    0x140005a10
   140037f63:	lea    rcx,[rdx+0x78]
   140037f6a:	jmp    0x14000578c
   140037f6f:	lea    rcx,[rdx+0x70]
   140037f76:	jmp    0x140005a10
   140037f7b:	lea    rcx,[rdx+0x70]
   140037f82:	jmp    0x14000578c
   140037f87:	mov    rcx,QWORD PTR [rdx+0x88]
   140037f8e:	jmp    0x140020e30
   140037f93:	mov    rcx,QWORD PTR [rdx+0x88]
   140037f9a:	jmp    0x140020e30
   140037f9f:	mov    rcx,QWORD PTR [rdx+0x38]
   140037fa6:	jmp    0x140005a10
   140037fab:	mov    rcx,QWORD PTR [rdx+0x88]
   140037fb2:	add    rcx,0x10
   140037fb6:	jmp    0x14000578c
   140037fbb:	lea    rcx,[rdx+0x70]
   140037fc2:	jmp    0x140005a10
   140037fc7:	lea    rcx,[rdx+0x78]
   140037fce:	jmp    0x140005a10
   140037fd3:	mov    rcx,QWORD PTR [rdx+0x40]
   140037fda:	add    rcx,0x10
   140037fde:	jmp    0x14000578c
   140037fe3:	mov    rcx,QWORD PTR [rdx+0x40]
   140037fea:	jmp    0x140005a10
   140037fef:	mov    rcx,QWORD PTR [rdx+0x50]
   140037ff6:	jmp    0x14001aae4
   140037ffb:	mov    rcx,QWORD PTR [rdx+0x58]
   140038002:	jmp    0x140005a10
   140038007:	mov    rcx,QWORD PTR [rdx+0x50]
   14003800e:	add    rcx,0x60
   140038012:	jmp    0x14000578c
   140038017:	mov    rcx,QWORD PTR [rdx+0x40]
   14003801e:	jmp    0x14001aae4
   140038023:	mov    rcx,QWORD PTR [rdx+0x40]
   14003802a:	add    rcx,0x60
   14003802e:	jmp    0x14000578c
   140038033:	mov    rcx,QWORD PTR [rdx+0x48]
   14003803a:	jmp    0x140005a10
   14003803f:	lea    rcx,[rdx+0xf8]
   140038046:	jmp    0x14000578c
   14003804b:	lea    rcx,[rdx+0xf8]
   140038052:	jmp    0x140005a10
   140038057:	mov    QWORD PTR [rsp+0x10],rdx
   14003805c:	push   rbp
   14003805d:	sub    rsp,0x20
   140038061:	mov    rbp,rdx
   140038064:	lea    rax,[rip+0xfffffffffffe3786]        # 0x14001b7f1
   14003806b:	add    rsp,0x20
   14003806f:	pop    rbp
   140038070:	ret    
   140038071:	int3   
   140038072:	mov    QWORD PTR [rsp+0x10],rdx
   140038077:	push   rbp
   140038078:	sub    rsp,0x20
   14003807c:	mov    rbp,rdx
   14003807f:	lea    rax,[rip+0xfffffffffffe3a93]        # 0x14001bb19
   140038086:	add    rsp,0x20
   14003808a:	pop    rbp
   14003808b:	ret    
   14003808c:	int3   
   14003808d:	mov    QWORD PTR [rsp+0x10],rdx
   140038092:	push   rbp
   140038093:	sub    rsp,0x20
   140038097:	mov    rbp,rdx
   14003809a:	lea    rax,[rip+0xfffffffffffe38fc]        # 0x14001b99d
   1400380a1:	add    rsp,0x20
   1400380a5:	pop    rbp
   1400380a6:	ret    
   1400380a7:	int3   
   1400380a8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400380af:	add    rcx,0x8
   1400380b3:	jmp    0x14001b6c8
   1400380b8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400380bf:	add    rcx,0x50
   1400380c3:	jmp    0x14001b6c8
   1400380c8:	mov    rcx,QWORD PTR [rdx+0x48]
   1400380cf:	jmp    0x14001c500
   1400380d4:	mov    rcx,QWORD PTR [rdx+0x48]
   1400380db:	add    rcx,0x8
   1400380df:	jmp    0x14000578c
   1400380e4:	mov    rcx,QWORD PTR [rdx+0x48]
   1400380eb:	jmp    0x140005a10
   1400380f0:	rex push rbp
   1400380f2:	sub    rsp,0x20
   1400380f6:	mov    rbp,rdx
   1400380f9:	mov    rdx,QWORD PTR [rbp+0x20]
   1400380fd:	mov    rcx,QWORD PTR [rbp+0x30]
   140038101:	call   0x140001000
   140038106:	add    rsp,0x20
   14003810a:	pop    rbp
   14003810b:	ret    
   14003810c:	mov    QWORD PTR [rsp+0x10],rdx
   140038111:	push   rbp
   140038112:	sub    rsp,0x20
   140038116:	mov    rbp,rdx
   140038119:	mov    rdx,QWORD PTR [rbp+0x60]
   14003811d:	mov    rax,QWORD PTR [rdx+0x40]
   140038121:	mov    rcx,QWORD PTR [rbp+0x20]
   140038125:	mov    QWORD PTR [rcx+0x10],rax
   140038129:	mov    QWORD PTR [rdx+0x40],rcx
   14003812d:	xor    edx,edx
   14003812f:	xor    ecx,ecx
   140038131:	call   0x1400265e8
   140038136:	nop
   140038137:	rex push rbp
   140038139:	sub    rsp,0x20
   14003813d:	mov    rbp,rdx
   140038140:	mov    rdx,QWORD PTR [rbp+0x20]
   140038144:	mov    rcx,QWORD PTR [rbp+0x30]
   140038148:	call   0x140001000
   14003814d:	add    rsp,0x20
   140038151:	pop    rbp
   140038152:	ret    
   140038153:	mov    QWORD PTR [rsp+0x10],rdx
   140038158:	push   rbp
   140038159:	sub    rsp,0x20
   14003815d:	mov    rbp,rdx
   140038160:	mov    rdx,QWORD PTR [rbp+0x60]
   140038164:	mov    rax,QWORD PTR [rdx+0x40]
   140038168:	mov    rcx,QWORD PTR [rbp+0x20]
   14003816c:	mov    QWORD PTR [rcx+0x20],rax
   140038170:	mov    QWORD PTR [rdx+0x40],rcx
   140038174:	xor    edx,edx
   140038176:	xor    ecx,ecx
   140038178:	call   0x1400265e8
   14003817d:	nop
   14003817e:	rex push rbp
   140038180:	sub    rsp,0x20
   140038184:	mov    rbp,rdx
   140038187:	mov    rdx,QWORD PTR [rbp+0x20]
   14003818b:	mov    rcx,QWORD PTR [rbp+0x30]
   14003818f:	call   0x140001000
   140038194:	add    rsp,0x20
   140038198:	pop    rbp
   140038199:	ret    
   14003819a:	mov    rcx,QWORD PTR [rdx+0x38]
   1400381a1:	jmp    0x140005a10
   1400381a6:	mov    rcx,QWORD PTR [rdx+0x30]
   1400381ad:	add    rcx,0x8
   1400381b1:	jmp    0x14000578c
   1400381b6:	mov    rcx,QWORD PTR [rdx+0x30]
   1400381bd:	jmp    0x14001c500
   1400381c2:	mov    QWORD PTR [rsp+0x10],rdx
   1400381c7:	push   rbp
   1400381c8:	sub    rsp,0x20
   1400381cc:	mov    rbp,rdx
   1400381cf:	mov    rdx,QWORD PTR [rbp+0x60]
   1400381d3:	mov    rax,QWORD PTR [rdx+0x40]
   1400381d7:	mov    rcx,QWORD PTR [rbp+0x20]
   1400381db:	mov    QWORD PTR [rcx+0x10],rax
   1400381df:	mov    QWORD PTR [rdx+0x40],rcx
   1400381e3:	xor    edx,edx
   1400381e5:	xor    ecx,ecx
   1400381e7:	call   0x1400265e8
   1400381ec:	nop
   1400381ed:	lea    rcx,[rdx+0x48]
   1400381f4:	jmp    0x140005a10
   1400381f9:	lea    rcx,[rdx+0x48]
   140038200:	jmp    0x14000578c
   140038205:	mov    rcx,QWORD PTR [rdx+0x38]
   14003820c:	jmp    0x14000578c
   140038211:	mov    rcx,QWORD PTR [rdx+0x80]
   140038218:	jmp    0x14000578c
   14003821d:	mov    rcx,QWORD PTR [rdx+0x80]
   140038224:	jmp    0x140005a10
   140038229:	mov    rcx,QWORD PTR [rdx+0x80]
   140038230:	jmp    0x140005a10
   140038235:	mov    rcx,QWORD PTR [rdx+0x80]
   14003823c:	jmp    0x140005a10
   140038241:	mov    rcx,QWORD PTR [rdx+0x80]
   140038248:	jmp    0x140005a10
   14003824d:	lea    rcx,[rdx+0x48]
   140038254:	jmp    0x140005a10
   140038259:	lea    rcx,[rdx+0x48]
   140038260:	jmp    0x140005a10
   140038265:	mov    QWORD PTR [rsp+0x10],rdx
   14003826a:	push   rbp
   14003826b:	sub    rsp,0x30
   14003826f:	mov    rbp,rdx
   140038272:	mov    rcx,QWORD PTR [rbp+0x78]
   140038276:	test   rcx,rcx
   140038279:	jne    0x140038286
   14003827b:	mov    ecx,0x80004005
   140038280:	call   0x140003e64
   140038285:	int3   
   140038286:	xor    edx,edx
   140038288:	mov    eax,DWORD PTR [rcx+0x28]
   14003828b:	mov    r9,QWORD PTR [rbp+0x60]
   14003828f:	div    DWORD PTR [r9+0x10]
   140038293:	mov    r10,QWORD PTR [r9]
   140038296:	mov    r8,QWORD PTR [r10+rdx*8]
   14003829a:	cmp    rcx,r8
   14003829d:	je     0x1400382c0
   14003829f:	mov    rax,QWORD PTR [r8+0x20]
   1400382a3:	jmp    0x1400382ac
   1400382a5:	mov    r8,rax
   1400382a8:	mov    rax,QWORD PTR [rax+0x20]
   1400382ac:	cmp    rax,rcx
   1400382af:	jne    0x1400382a5
   1400382b1:	test   r8,r8
   1400382b4:	je     0x1400382c0
   1400382b6:	mov    rax,QWORD PTR [rcx+0x20]
   1400382ba:	mov    QWORD PTR [r8+0x20],rax
   1400382be:	jmp    0x1400382c8
   1400382c0:	mov    rax,QWORD PTR [rcx+0x20]
   1400382c4:	mov    QWORD PTR [r10+rdx*8],rax
   1400382c8:	mov    rdx,rcx
   1400382cb:	mov    rcx,r9
   1400382ce:	call   0x14001c480
   1400382d3:	xor    edx,edx
   1400382d5:	xor    ecx,ecx
   1400382d7:	call   0x1400265e8
   1400382dc:	nop
   1400382dd:	mov    QWORD PTR [rsp+0x10],rdx
   1400382e2:	push   rbp
   1400382e3:	sub    rsp,0x30
   1400382e7:	mov    rbp,rdx
   1400382ea:	mov    rcx,QWORD PTR [rbp+0x88]
   1400382f1:	test   rcx,rcx
   1400382f4:	jne    0x140038301
   1400382f6:	mov    ecx,0x80004005
   1400382fb:	call   0x140003e64
   140038300:	int3   
   140038301:	xor    edx,edx
   140038303:	mov    eax,DWORD PTR [rcx+0x18]
   140038306:	mov    r9,QWORD PTR [rbp+0x70]
   14003830a:	div    DWORD PTR [r9+0x10]
   14003830e:	mov    r10,QWORD PTR [r9]
   140038311:	mov    r8,QWORD PTR [r10+rdx*8]
   140038315:	cmp    rcx,r8
   140038318:	je     0x14003833b
   14003831a:	mov    rax,QWORD PTR [r8+0x10]
   14003831e:	jmp    0x140038327
   140038320:	mov    r8,rax
   140038323:	mov    rax,QWORD PTR [rax+0x10]
   140038327:	cmp    rax,rcx
   14003832a:	jne    0x140038320
   14003832c:	test   r8,r8
   14003832f:	je     0x14003833b
   140038331:	mov    rax,QWORD PTR [rcx+0x10]
   140038335:	mov    QWORD PTR [r8+0x10],rax
   140038339:	jmp    0x140038343
   14003833b:	mov    rax,QWORD PTR [rcx+0x10]
   14003833f:	mov    QWORD PTR [r10+rdx*8],rax
   140038343:	mov    rdx,rcx
   140038346:	mov    rcx,r9
   140038349:	call   0x14001c170
   14003834e:	xor    edx,edx
   140038350:	xor    ecx,ecx
   140038352:	call   0x1400265e8
   140038357:	nop
   140038358:	lea    rcx,[rdx+0x20]
   14003835f:	jmp    0x14000578c
   140038364:	lea    rcx,[rdx+0x20]
   14003836b:	jmp    0x140012bf8
   140038370:	lea    rcx,[rdx+0x20]
   140038377:	jmp    0x14000578c
   14003837c:	mov    rcx,QWORD PTR [rdx+0x30]
   140038383:	jmp    0x140005a10
   140038388:	mov    rcx,QWORD PTR [rdx+0x40]
   14003838f:	jmp    0x140002afc
   140038394:	mov    rcx,QWORD PTR [rdx+0x40]
   14003839b:	add    rcx,0x20
   14003839f:	jmp    0x140009190
   1400383a4:	lea    rcx,[rdx+0x50]
   1400383ab:	jmp    0x140009158
   1400383b0:	lea    rcx,[rdx+0x70]
   1400383b7:	jmp    0x140009158
   1400383bc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400383c3:	add    rcx,0x10
   1400383c7:	jmp    0x14000257c
   1400383cc:	mov    rcx,QWORD PTR [rdx+0x48]
   1400383d3:	add    rcx,0x8
   1400383d7:	jmp    0x1400179a8
   1400383dc:	mov    rcx,QWORD PTR [rdx+0x48]
   1400383e3:	jmp    0x140020e30
   1400383e8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400383ef:	add    rcx,0x18
   1400383f3:	jmp    0x14000257c
   1400383f8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400383ff:	add    rcx,0x158
   140038406:	jmp    0x14000257c
   14003840b:	mov    rcx,QWORD PTR [rdx+0x40]
   140038412:	add    rcx,0x2a0
   140038419:	jmp    0x14001ce18
   14003841e:	mov    rcx,QWORD PTR [rdx+0x48]
   140038425:	add    rcx,0x8
   140038429:	jmp    0x1400179a8
   14003842e:	mov    rcx,QWORD PTR [rdx+0x70]
   140038435:	jmp    0x140020e30
   14003843a:	mov    rcx,QWORD PTR [rdx+0x40]
   140038441:	jmp    0x14001f264
   140038446:	mov    rcx,QWORD PTR [rdx+0x40]
   14003844d:	add    rcx,0x10
   140038451:	jmp    0x14000257c
   140038456:	mov    rcx,QWORD PTR [rdx+0x40]
   14003845d:	add    rcx,0x150
   140038464:	jmp    0x14001fd2c
   140038469:	mov    rcx,QWORD PTR [rdx+0x48]
   140038470:	add    rcx,0x10
   140038474:	jmp    0x14000257c
   140038479:	lea    rcx,[rdx+0x90]
   140038480:	jmp    0x14000566c
   140038485:	rex push rbp
   140038487:	sub    rsp,0x20
   14003848b:	mov    rbp,rdx
   14003848e:	mov    rdx,QWORD PTR [rbp+0x90]
   140038495:	mov    rcx,QWORD PTR [rbp+0xa8]
   14003849c:	call   0x140001000
   1400384a1:	add    rsp,0x20
   1400384a5:	pop    rbp
   1400384a6:	ret    
   1400384a7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400384ae:	add    rcx,0x20
   1400384b2:	jmp    0x14000257c
   1400384b7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400384be:	add    rcx,0x170
   1400384c5:	jmp    0x140020c64
   1400384ca:	mov    rcx,QWORD PTR [rdx+0x40]
   1400384d1:	add    rcx,0x180
   1400384d8:	jmp    0x14001ec1c
   1400384dd:	mov    rcx,QWORD PTR [rdx+0x40]
   1400384e4:	add    rcx,0x10
   1400384e8:	jmp    0x14000257c
   1400384ed:	mov    rcx,QWORD PTR [rdx+0x40]
   1400384f4:	add    rcx,0x150
   1400384fb:	jmp    0x14001fd80
   140038500:	mov    rcx,QWORD PTR [rdx+0x40]
   140038507:	add    rcx,0x2b0
   14003850e:	jmp    0x1400162f8
   140038513:	mov    rcx,QWORD PTR [rdx+0x40]
   14003851a:	add    rcx,0x2c8
   140038521:	jmp    0x1400162f8
   140038526:	mov    rcx,QWORD PTR [rdx+0x48]
   14003852d:	add    rcx,0x10
   140038531:	jmp    0x14000257c
   140038536:	mov    rcx,QWORD PTR [rdx+0x40]
   14003853d:	add    rcx,0x10
   140038541:	jmp    0x14000257c
   140038546:	mov    rcx,QWORD PTR [rdx+0x40]
   14003854d:	add    rcx,0x150
   140038554:	jmp    0x14000257c
   140038559:	mov    rcx,QWORD PTR [rdx+0x40]
   140038560:	add    rcx,0x290
   140038567:	jmp    0x1400162f8
   14003856c:	mov    rcx,QWORD PTR [rdx+0x40]
   140038573:	add    rcx,0x2a8
   14003857a:	jmp    0x1400162f8
   14003857f:	mov    rcx,QWORD PTR [rdx+0x40]
   140038586:	add    rcx,0x2c0
   14003858d:	jmp    0x1400179a8
   140038592:	mov    rcx,QWORD PTR [rdx+0x40]
   140038599:	add    rcx,0x2d0
   1400385a0:	jmp    0x1400179a8
   1400385a5:	mov    rcx,QWORD PTR [rdx+0x20]
   1400385ac:	jmp    0x140002518
   1400385b1:	mov    rcx,QWORD PTR [rdx+0x30]
   1400385b8:	add    rcx,0x8
   1400385bc:	jmp    0x1400179a8
   1400385c1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400385c8:	add    rcx,0x10
   1400385cc:	jmp    0x14000257c
   1400385d1:	mov    rcx,QWORD PTR [rdx+0x88]
   1400385d8:	jmp    0x14000e428
   1400385dd:	mov    rcx,QWORD PTR [rdx+0x80]
   1400385e4:	add    rcx,0x10
   1400385e8:	jmp    0x14000e054
   1400385ed:	mov    rcx,QWORD PTR [rdx+0x88]
   1400385f4:	add    rcx,0x8
   1400385f8:	jmp    0x14000e4fc
   1400385fd:	mov    rcx,QWORD PTR [rdx+0x80]
   140038604:	add    rcx,0x30
   140038608:	jmp    0x14000e0c4
   14003860d:	mov    rcx,QWORD PTR [rdx+0x78]
   140038614:	jmp    0x14000ddc0
   140038619:	mov    rcx,QWORD PTR [rdx+0x78]
   140038620:	add    rcx,0x58
   140038624:	jmp    0x140009190
   140038629:	mov    rcx,QWORD PTR [rdx+0x70]
   140038630:	add    rcx,0x8
   140038634:	jmp    0x1400158b4
   140038639:	mov    rcx,QWORD PTR [rdx+0x88]
   140038640:	jmp    0x14000e428
   140038645:	mov    rcx,QWORD PTR [rdx+0x80]
   14003864c:	add    rcx,0x10
   140038650:	jmp    0x14000e054
   140038655:	mov    rcx,QWORD PTR [rdx+0x88]
   14003865c:	add    rcx,0x8
   140038660:	jmp    0x14000e4fc
   140038665:	mov    rcx,QWORD PTR [rdx+0x80]
   14003866c:	add    rcx,0x30
   140038670:	jmp    0x14000e0c4
   140038675:	mov    rcx,QWORD PTR [rdx+0x78]
   14003867c:	jmp    0x14000ddc0
   140038681:	mov    rcx,QWORD PTR [rdx+0x78]
   140038688:	add    rcx,0x58
   14003868c:	jmp    0x140009190
   140038691:	mov    rcx,QWORD PTR [rdx+0x70]
   140038698:	add    rcx,0x78
   14003869c:	jmp    0x1400158b4
   1400386a1:	mov    rcx,QWORD PTR [rdx+0x70]
   1400386a8:	add    rcx,0xe8
   1400386af:	jmp    0x140009190
   1400386b4:	mov    rcx,QWORD PTR [rdx+0x168]
   1400386bb:	jmp    0x140020e30
   1400386c0:	lea    rcx,[rdx+0x178]
   1400386c7:	jmp    0x140009158
   1400386cc:	lea    rcx,[rdx+0x50]
   1400386d3:	jmp    0x140009158
   1400386d8:	lea    rcx,[rdx+0x48]
   1400386df:	jmp    0x140009158
   1400386e4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400386eb:	jmp    0x140002518
   1400386f0:	lea    rcx,[rip+0x3c9]        # 0x140038ac0
   1400386f7:	jmp    0x140021890
   1400386fc:	sub    rsp,0x38
   140038700:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038709:	lea    rax,[rip+0x48c0]        # 0x14003cfd0
   140038710:	mov    QWORD PTR [rip+0x17039],rax        # 0x14004f750
   140038717:	lea    rcx,[rip+0x3ea]        # 0x140038b08
   14003871e:	add    rsp,0x38
   140038722:	jmp    0x140021890
   140038727:	int3   
   140038728:	sub    rsp,0x38
   14003872c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038735:	lea    rax,[rip+0x4894]        # 0x14003cfd0
   14003873c:	mov    QWORD PTR [rip+0x17005],rax        # 0x14004f748
   140038743:	lea    rax,[rip+0x48be]        # 0x14003d008
   14003874a:	mov    QWORD PTR [rip+0x16ff7],rax        # 0x14004f748
   140038751:	lea    rcx,[rip+0x390]        # 0x140038ae8
   140038758:	add    rsp,0x38
   14003875c:	jmp    0x140021890
   140038761:	int3   
   140038762:	int3   
   140038763:	int3   
   140038764:	sub    rsp,0x38
   140038768:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038771:	lea    rax,[rip+0x4858]        # 0x14003cfd0
   140038778:	mov    QWORD PTR [rip+0x16fc1],rax        # 0x14004f740
   14003877f:	lea    rax,[rip+0x48ba]        # 0x14003d040
   140038786:	mov    QWORD PTR [rip+0x16fb3],rax        # 0x14004f740
   14003878d:	lea    rcx,[rip+0x334]        # 0x140038ac8
   140038794:	add    rsp,0x38
   140038798:	jmp    0x140021890
   14003879d:	int3   
   14003879e:	int3   
   14003879f:	int3   
   1400387a0:	mov    rax,rsp
   1400387a3:	push   rdi
   1400387a4:	sub    rsp,0x240
   1400387ab:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400387b4:	mov    QWORD PTR [rax+0x8],rbx
   1400387b8:	mov    QWORD PTR [rax+0x10],rsi
   1400387bc:	mov    rax,QWORD PTR [rip+0x14c85]        # 0x14004d448
   1400387c3:	xor    rax,rsp
   1400387c6:	mov    QWORD PTR [rsp+0x230],rax
   1400387ce:	xor    esi,esi
   1400387d0:	mov    QWORD PTR [rip+0x16289],rsi        # 0x14004ea60
   1400387d7:	mov    QWORD PTR [rip+0x1628a],rsi        # 0x14004ea68
   1400387de:	lea    eax,[rsi+0x7]
   1400387e1:	mov    QWORD PTR [rip+0x16280],rax        # 0x14004ea68
   1400387e8:	mov    QWORD PTR [rip+0x16271],rsi        # 0x14004ea60
   1400387ef:	mov    WORD PTR [rip+0x1625a],si        # 0x14004ea50
   1400387f6:	mov    QWORD PTR [rip+0x16283],rsi        # 0x14004ea80
   1400387fd:	mov    QWORD PTR [rip+0x16284],rsi        # 0x14004ea88
   140038804:	mov    QWORD PTR [rip+0x1627d],rax        # 0x14004ea88
   14003880b:	mov    QWORD PTR [rip+0x1626e],rsi        # 0x14004ea80
   140038812:	mov    WORD PTR [rip+0x16257],si        # 0x14004ea70
   140038819:	mov    r8d,0xff
   14003881f:	lea    rdx,[rsp+0x30]
   140038824:	xor    ecx,ecx
   140038826:	call   QWORD PTR [rip+0x9e4]        # 0x140039210
   14003882c:	test   eax,eax
   14003882e:	je     0x1400388c2
   140038834:	lea    rdx,[rsp+0x30]
   140038839:	lea    rcx,[rip+0x16230]        # 0x14004ea70
   140038840:	call   0x1400034e4
   140038845:	lea    rcx,[rsp+0x30]
   14003884a:	or     rbx,0xffffffffffffffff
   14003884e:	mov    rax,rbx
   140038851:	inc    rax
   140038854:	cmp    WORD PTR [rcx+rax*2],si
   140038858:	jne    0x140038851
   14003885a:	lea    rdi,[rsp+0x30]
   14003885f:	lea    rdi,[rdi+rax*2]
   140038863:	test   rax,rax
   140038866:	je     0x140038877
   140038868:	cmp    WORD PTR [rdi],0x5c
   14003886c:	je     0x140038877
   14003886e:	sub    rdi,0x2
   140038872:	dec    rax
   140038875:	jne    0x140038868
   140038877:	mov    WORD PTR [rdi],si
   14003887a:	lea    rdx,[rsp+0x30]
   14003887f:	lea    rcx,[rip+0x161ca]        # 0x14004ea50
   140038886:	call   0x1400034e4
   14003888b:	inc    rbx
   14003888e:	cmp    WORD PTR [rdi+rbx*2+0x2],si
   140038893:	jne    0x14003888b
   140038895:	test   rbx,rbx
   140038898:	je     0x1400388b1
   14003889a:	cmp    WORD PTR [rdi+rbx*2+0x2],0x2e
   1400388a0:	je     0x1400388a7
   1400388a2:	dec    rbx
   1400388a5:	jne    0x14003889a
   1400388a7:	test   rbx,rbx
   1400388aa:	je     0x1400388b1
   1400388ac:	mov    WORD PTR [rdi+rbx*2+0x2],si
   1400388b1:	lea    rdx,[rdi+0x2]
   1400388b5:	lea    rcx,[rip+0x16174]        # 0x14004ea30
   1400388bc:	call   0x1400034e4
   1400388c1:	nop
   1400388c2:	lea    rcx,[rip+0x25f]        # 0x140038b28
   1400388c9:	call   0x140021890
   1400388ce:	mov    rcx,QWORD PTR [rsp+0x230]
   1400388d6:	xor    rcx,rsp
   1400388d9:	call   0x140020e50
   1400388de:	lea    r11,[rsp+0x240]
   1400388e6:	mov    rbx,QWORD PTR [r11+0x10]
   1400388ea:	mov    rsi,QWORD PTR [r11+0x18]
   1400388ee:	mov    rsp,r11
   1400388f1:	pop    rdi
   1400388f2:	ret    
   1400388f3:	int3   
   1400388f4:	lea    rcx,[rip+0x2d5]        # 0x140038bd0
   1400388fb:	jmp    0x140021890
   140038900:	mov    r11,rsp
   140038903:	sub    rsp,0x58
   140038907:	xor    ecx,ecx
   140038909:	lea    rax,[rip+0x161d0]        # 0x14004eae0
   140038910:	lea    rdx,[rip+0x161b9]        # 0x14004ead0
   140038917:	mov    QWORD PTR [r11-0x18],rax
   14003891b:	lea    rax,[rip+0x161ce]        # 0x14004eaf0
   140038922:	mov    QWORD PTR [r11-0x10],rcx
   140038926:	mov    QWORD PTR [r11-0x20],rax
   14003892a:	mov    QWORD PTR [r11-0x28],rcx
   14003892e:	mov    QWORD PTR [r11-0x30],rcx
   140038932:	lea    rax,[r11-0x18]
   140038936:	lea    r9d,[rcx+0x1]
   14003893a:	lea    rcx,[rip+0xfffffffffffdf993]        # 0x1400182d4
   140038941:	mov    r8,rdx
   140038944:	mov    QWORD PTR [r11-0x38],rax
   140038948:	call   QWORD PTR [rip+0x702]        # 0x140039050
   14003894e:	lea    rcx,[rip+0x28b]        # 0x140038be0
   140038955:	add    rsp,0x58
   140038959:	jmp    0x140021890
   14003895e:	int3   
   14003895f:	int3   
   140038960:	sub    rsp,0x38
   140038964:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003896d:	lea    rcx,[rip+0x1895c]        # 0x1400512d0
   140038974:	call   0x14001fe4c
   140038979:	nop
   14003897a:	lea    rax,[rip+0x5e97]        # 0x14003e818
   140038981:	mov    QWORD PTR [rip+0x18948],rax        # 0x1400512d0
   140038988:	and    DWORD PTR [rip+0x18be9],0x0        # 0x140051578
   14003898f:	lea    rcx,[rip+0x27a]        # 0x140038c10
   140038996:	add    rsp,0x38
   14003899a:	jmp    0x140021890
   14003899f:	int3   
   1400389a0:	sub    rsp,0x38
   1400389a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400389ad:	lea    rcx,[rip+0x1866c]        # 0x140051020
   1400389b4:	call   0x14001fe4c
   1400389b9:	nop
   1400389ba:	lea    rax,[rip+0x5e2f]        # 0x14003e7f0
   1400389c1:	mov    QWORD PTR [rip+0x18658],rax        # 0x140051020
   1400389c8:	and    DWORD PTR [rip+0x188f9],0x0        # 0x1400512c8
   1400389cf:	lea    rcx,[rip+0x25a]        # 0x140038c30
   1400389d6:	add    rsp,0x38
   1400389da:	jmp    0x140021890
   1400389df:	int3   
   1400389e0:	xor    eax,eax
   1400389e2:	lea    rcx,[rip+0x267]        # 0x140038c50
   1400389e9:	mov    DWORD PTR [rip+0x18bb1],eax        # 0x1400515a0
   1400389ef:	mov    DWORD PTR [rip+0x18baf],eax        # 0x1400515a4
   1400389f5:	mov    QWORD PTR [rip+0x18b9c],rax        # 0x140051598
   1400389fc:	mov    DWORD PTR [rip+0x18ba2],0xffffffff        # 0x1400515a8
   140038a06:	jmp    0x140021890
   140038a0b:	int3   
   140038a0c:	sub    rsp,0x38
   140038a10:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038a19:	lea    rax,[rip+0x5f50]        # 0x14003e970
   140038a20:	mov    QWORD PTR [rip+0x160f9],rax        # 0x14004eb20
   140038a27:	xor    eax,eax
   140038a29:	mov    QWORD PTR [rip+0x160f8],rax        # 0x14004eb28
   140038a30:	mov    QWORD PTR [rip+0x160f9],rax        # 0x14004eb30
   140038a37:	mov    QWORD PTR [rip+0x160fa],rax        # 0x14004eb38
   140038a3e:	mov    DWORD PTR [rip+0x160fc],eax        # 0x14004eb40
   140038a44:	mov    DWORD PTR [rip+0x160fe],eax        # 0x14004eb48
   140038a4a:	lea    rcx,[rip+0x22f]        # 0x140038c80
   140038a51:	add    rsp,0x38
   140038a55:	jmp    0x140021890
   140038a5a:	int3   
   140038a5b:	int3   
   140038a5c:	sub    rsp,0x28
   140038a60:	lea    rcx,[rip+0x181e9]        # 0x140050c50
   140038a67:	call   0x14002f6dc
   140038a6c:	lea    rcx,[rip+0x219]        # 0x140038c8c
   140038a73:	add    rsp,0x28
   140038a77:	jmp    0x140021890
   140038a7c:	sub    rsp,0x28
   140038a80:	call   QWORD PTR [rip+0x792]        # 0x140039218
   140038a86:	lea    rcx,[rip+0x4743]        # 0x14003d1d0
   140038a8d:	mov    BYTE PTR [rip+0x1822c],0x0        # 0x140050cc0
   140038a94:	mov    QWORD PTR [rip+0x18215],rcx        # 0x140050cb0
   140038a9b:	lea    rcx,[rip+0x1f6]        # 0x140038c98
   140038aa2:	mov    QWORD PTR [rip+0x1820f],rax        # 0x140050cb8
   140038aa9:	add    rsp,0x28
   140038aad:	jmp    0x140021890
   140038ab2:	int3   
   140038ab3:	int3   
   140038ab4:	lea    rcx,[rip+0x211]        # 0x140038ccc
   140038abb:	jmp    0x140021890
   140038ac0:	jmp    0x1400052cc
   140038ac5:	int3   
   140038ac6:	int3   
   140038ac7:	int3   
   140038ac8:	sub    rsp,0x18
   140038acc:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140038ad4:	lea    rax,[rip+0x44bd]        # 0x14003cf98
   140038adb:	mov    QWORD PTR [rip+0x16c5e],rax        # 0x14004f740
   140038ae2:	add    rsp,0x18
   140038ae6:	ret    
   140038ae7:	int3   
   140038ae8:	sub    rsp,0x18
   140038aec:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140038af4:	lea    rax,[rip+0x449d]        # 0x14003cf98
   140038afb:	mov    QWORD PTR [rip+0x16c46],rax        # 0x14004f748
   140038b02:	add    rsp,0x18
   140038b06:	ret    
   140038b07:	int3   
   140038b08:	sub    rsp,0x18
   140038b0c:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140038b14:	lea    rax,[rip+0x447d]        # 0x14003cf98
   140038b1b:	mov    QWORD PTR [rip+0x16c2e],rax        # 0x14004f750
   140038b22:	add    rsp,0x18
   140038b26:	ret    
   140038b27:	int3   
   140038b28:	rex push rdi
   140038b2a:	sub    rsp,0x30
   140038b2e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038b37:	mov    QWORD PTR [rsp+0x40],rbx
   140038b3c:	cmp    QWORD PTR [rip+0x15f44],0x8        # 0x14004ea88
   140038b44:	jb     0x140038b52
   140038b46:	mov    rcx,QWORD PTR [rip+0x15f23]        # 0x14004ea70
   140038b4d:	call   0x140020e30
   140038b52:	mov    edi,0x7
   140038b57:	mov    QWORD PTR [rip+0x15f2a],rdi        # 0x14004ea88
   140038b5e:	xor    ebx,ebx
   140038b60:	mov    QWORD PTR [rip+0x15f19],rbx        # 0x14004ea80
   140038b67:	mov    WORD PTR [rip+0x15f02],bx        # 0x14004ea70
   140038b6e:	cmp    QWORD PTR [rip+0x15ef2],0x8        # 0x14004ea68
   140038b76:	jb     0x140038b84
   140038b78:	mov    rcx,QWORD PTR [rip+0x15ed1]        # 0x14004ea50
   140038b7f:	call   0x140020e30
   140038b84:	mov    QWORD PTR [rip+0x15edd],rdi        # 0x14004ea68
   140038b8b:	mov    QWORD PTR [rip+0x15ece],rbx        # 0x14004ea60
   140038b92:	mov    WORD PTR [rip+0x15eb7],bx        # 0x14004ea50
   140038b99:	cmp    QWORD PTR [rip+0x15ea7],0x8        # 0x14004ea48
   140038ba1:	jb     0x140038baf
   140038ba3:	mov    rcx,QWORD PTR [rip+0x15e86]        # 0x14004ea30
   140038baa:	call   0x140020e30
   140038baf:	mov    QWORD PTR [rip+0x15e92],rdi        # 0x14004ea48
   140038bb6:	mov    QWORD PTR [rip+0x15e83],rbx        # 0x14004ea40
   140038bbd:	mov    WORD PTR [rip+0x15e6c],bx        # 0x14004ea30
   140038bc4:	mov    rbx,QWORD PTR [rsp+0x40]
   140038bc9:	add    rsp,0x30
   140038bcd:	pop    rdi
   140038bce:	ret    
   140038bcf:	int3   
   140038bd0:	lea    rax,[rip+0x50f1]        # 0x14003dcc8
   140038bd7:	mov    QWORD PTR [rip+0x15eb2],rax        # 0x14004ea90
   140038bde:	ret    
   140038bdf:	int3   
   140038be0:	ret    0x0
   140038be3:	int3   
   140038be4:	sub    rsp,0x38
   140038be8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038bf1:	mov    rcx,QWORD PTR [rip+0x19660]        # 0x140052258
   140038bf8:	call   0x14002b138
   140038bfd:	nop
   140038bfe:	lea    rcx,[rip+0x19633]        # 0x140052238
   140038c05:	add    rsp,0x38
   140038c09:	jmp    0x1400128f8
   140038c0e:	int3   
   140038c0f:	int3   
   140038c10:	sub    rsp,0x38
   140038c14:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038c1d:	lea    rcx,[rip+0x186ac]        # 0x1400512d0
   140038c24:	add    rsp,0x38
   140038c28:	jmp    0x1400157d4
   140038c2d:	int3   
   140038c2e:	int3   
   140038c2f:	int3   
   140038c30:	sub    rsp,0x38
   140038c34:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038c3d:	lea    rcx,[rip+0x183dc]        # 0x140051020
   140038c44:	add    rsp,0x38
   140038c48:	jmp    0x1400157d4
   140038c4d:	int3   
   140038c4e:	int3   
   140038c4f:	int3   
   140038c50:	sub    rsp,0x28
   140038c54:	mov    rax,QWORD PTR [rip+0x1893d]        # 0x140051598
   140038c5b:	test   rax,rax
   140038c5e:	je     0x140038c6d
   140038c60:	mov    rcx,QWORD PTR [rip+0x18931]        # 0x140051598
   140038c67:	call   QWORD PTR [rip+0x953]        # 0x1400395c0
   140038c6d:	mov    QWORD PTR [rip+0x18920],0x0        # 0x140051598
   140038c78:	add    rsp,0x28
   140038c7c:	ret    
   140038c7d:	int3   
   140038c7e:	int3   
   140038c7f:	int3   
   140038c80:	lea    rcx,[rip+0x15e99]        # 0x14004eb20
   140038c87:	jmp    0x14001881c
   140038c8c:	lea    rcx,[rip+0x17fbd]        # 0x140050c50
   140038c93:	jmp    0x14002f778
   140038c98:	sub    rsp,0x28
   140038c9c:	cmp    BYTE PTR [rip+0x1801d],0x0        # 0x140050cc0
   140038ca3:	lea    rax,[rip+0x4526]        # 0x14003d1d0
   140038caa:	mov    QWORD PTR [rip+0x17fff],rax        # 0x140050cb0
   140038cb1:	je     0x140038cc5
   140038cb3:	mov    rcx,QWORD PTR [rip+0x17ffe]        # 0x140050cb8
   140038cba:	test   rcx,rcx
   140038cbd:	je     0x140038cc5
   140038cbf:	call   QWORD PTR [rip+0x46b]        # 0x140039130
   140038cc5:	add    rsp,0x28
   140038cc9:	ret    
   140038cca:	int3   
   140038ccb:	int3   
   140038ccc:	lea    rax,[rip+0x4525]        # 0x14003d1f8
   140038cd3:	mov    QWORD PTR [rip+0x15786],rax        # 0x14004e460
   140038cda:	ret    

Disassembly of section .rdata:

0000000140039000 <.rdata>:
   140039000:	sbb    BYTE PTR [rbp+0x4],dh
   140039006:	add    BYTE PTR [rax],al
   140039008:	sub    al,0xb5
   14003900a:	add    al,0x0
   14003900c:	add    BYTE PTR [rax],al
   14003900e:	add    BYTE PTR [rax],al
   140039010:	cmp    al,0xb5
   140039012:	add    al,0x0
   140039014:	add    BYTE PTR [rax],al
   140039016:	add    BYTE PTR [rax],al
   140039018:	mov    esi,0x4c2
   14003901d:	add    BYTE PTR [rax],al
   14003901f:	add    dh,dl
   140039021:	ret    0x4
   140039024:	add    BYTE PTR [rax],al
   140039026:	add    BYTE PTR [rax],al
   140039028:	out    dx,al
   140039029:	ret    0x4
   14003902c:	add    BYTE PTR [rax],al
   14003902e:	add    BYTE PTR [rax],al
   140039030:	inc    dl
   140039032:	add    al,0x0
   140039034:	add    BYTE PTR [rax],al
   140039036:	add    BYTE PTR [rax],al
   140039038:	(bad)  
   140039039:	ret    
   14003903a:	add    al,0x0
   14003903c:	add    BYTE PTR [rax],al
   14003903e:	add    BYTE PTR [rax],al
   140039040:	and    al,0xc3
   140039042:	add    al,0x0
   140039044:	add    BYTE PTR [rax],al
   140039046:	add    BYTE PTR [rax],al
   140039048:	cmp    al,0xc3
   14003904a:	add    al,0x0
   14003904c:	add    BYTE PTR [rax],al
   14003904e:	add    BYTE PTR [rax],al
   140039050:	rex.WX ret 
   140039052:	add    al,0x0
   140039054:	add    BYTE PTR [rax],al
   140039056:	add    BYTE PTR [rax],al
   140039058:	(bad)  
   140039059:	ret    
   14003905a:	add    al,0x0
   14003905c:	add    BYTE PTR [rax],al
   14003905e:	add    BYTE PTR [rax],al
   140039060:	scas   al,BYTE PTR es:[rdi]
   140039061:	ret    0x4
   140039064:	add    BYTE PTR [rax],al
   140039066:	add    BYTE PTR [rax],al
   140039068:	(bad)  
   140039069:	mov    eax,0x4
   14003906e:	add    BYTE PTR [rax],al
   140039070:	(bad)  
   140039071:	mov    eax,0x4
   140039076:	add    BYTE PTR [rax],al
   140039078:	mov    dh,0xb8
   14003907a:	add    al,0x0
   14003907c:	add    BYTE PTR [rax],al
   14003907e:	add    BYTE PTR [rax],al
   140039080:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039081:	mov    eax,0x4
   140039086:	add    BYTE PTR [rax],al
   140039088:	xchg   edx,eax
   140039089:	mov    eax,0x4
   14003908e:	add    BYTE PTR [rax],al
   140039090:	jl     0x14003904a
   140039092:	add    al,0x0
   140039094:	add    BYTE PTR [rax],al
   140039096:	add    BYTE PTR [rax],al
   140039098:	push   0xffffffffffffffb8
   14003909a:	add    al,0x0
   14003909c:	add    BYTE PTR [rax],al
   14003909e:	add    BYTE PTR [rax],al
   1400390a0:	pop    rax
   1400390a1:	mov    eax,0x4
   1400390a6:	add    BYTE PTR [rax],al
   1400390a8:	rex.X mov eax,0x4
   1400390ae:	add    BYTE PTR [rax],al
   1400390b0:	xor    bh,BYTE PTR [rax+0x4]
   1400390b6:	add    BYTE PTR [rax],al
   1400390b8:	and    bh,BYTE PTR [rax+0x4]
   1400390be:	add    BYTE PTR [rax],al
   1400390c0:	adc    bh,BYTE PTR [rax+0x4]
   1400390c6:	add    BYTE PTR [rax],al
   1400390c8:	cld    
   1400390c9:	mov    bh,0x4
   1400390cb:	add    BYTE PTR [rax],al
   1400390cd:	add    BYTE PTR [rax],al
   1400390cf:	add    dl,ch
   1400390d1:	mov    bh,0x4
   1400390d3:	add    BYTE PTR [rax],al
   1400390d5:	add    BYTE PTR [rax],al
   1400390d7:	add    BYTE PTR [rdx],dl
   1400390d9:	mov    bh,0x4
   1400390db:	add    BYTE PTR [rax],al
   1400390dd:	add    BYTE PTR [rax],al
   1400390df:	add    BYTE PTR [rsi],ah
   1400390e1:	mov    bh,0x4
   1400390e3:	add    BYTE PTR [rax],al
   1400390e5:	add    BYTE PTR [rax],al
   1400390e7:	add    BYTE PTR [rdi+rsi*4],bh
   1400390ea:	add    al,0x0
   1400390ec:	add    BYTE PTR [rax],al
   1400390ee:	add    BYTE PTR [rax],al
   1400390f0:	push   rsp
   1400390f1:	mov    bh,0x4
   1400390f3:	add    BYTE PTR [rax],al
   1400390f5:	add    BYTE PTR [rax],al
   1400390f7:	add    BYTE PTR [rdi+rsi*4+0x4],ch
   1400390fb:	add    BYTE PTR [rax],al
   1400390fd:	add    BYTE PTR [rax],al
   1400390ff:	add    BYTE PTR [rax+0x4b7],al
   140039105:	add    BYTE PTR [rax],al
   140039107:	add    BYTE PTR [rsi+0x4b7],dl
   14003910d:	add    BYTE PTR [rax],al
   14003910f:	add    BYTE PTR [rsi+0x4b7],ch
   140039115:	add    BYTE PTR [rax],al
   140039117:	add    al,al
   140039119:	mov    bh,0x4
   14003911b:	add    BYTE PTR [rax],al
   14003911d:	add    BYTE PTR [rax],al
   14003911f:	add    al,bl
   140039121:	mov    bh,0x4
	...
   14003912f:	add    BYTE PTR [rbx+rax*8+0x4],ah
   140039136:	add    BYTE PTR [rax],al
   140039138:	mov    dl,0xc3
   14003913a:	add    al,0x0
   14003913c:	add    BYTE PTR [rax],al
   14003913e:	add    BYTE PTR [rax],al
   140039140:	rol    bl,0x4
   140039143:	add    BYTE PTR [rax],al
   140039145:	add    BYTE PTR [rax],al
   140039147:	add    dh,cl
   140039149:	ret    
   14003914a:	add    al,0x0
   14003914c:	add    BYTE PTR [rax],al
   14003914e:	add    BYTE PTR [rax],al
   140039150:	loopne 0x140039115
   140039152:	add    al,0x0
   140039154:	add    BYTE PTR [rax],al
   140039156:	add    BYTE PTR [rax],al
   140039158:	cld    
   140039159:	ret    
   14003915a:	add    al,0x0
   14003915c:	add    BYTE PTR [rax],al
   14003915e:	add    BYTE PTR [rax],al
   140039160:	(bad)  
   140039161:	(bad)  
   140039162:	add    al,0x0
   140039164:	add    BYTE PTR [rax],al
   140039166:	add    BYTE PTR [rax],al
   140039168:	sbb    al,0xc4
   14003916a:	add    al,0x0
   14003916c:	add    BYTE PTR [rax],al
   14003916e:	add    BYTE PTR [rax],al
   140039170:	xor    al,0xc4
   140039172:	add    al,0x0
   140039174:	add    BYTE PTR [rax],al
   140039176:	add    BYTE PTR [rax],al
   140039178:	rex.WR (bad) 
   14003917a:	add    al,0x0
   14003917c:	add    BYTE PTR [rax],al
   14003917e:	add    BYTE PTR [rax],al
   140039180:	(bad)  
   140039181:	(bad)  
   140039182:	add    al,0x0
   140039184:	add    BYTE PTR [rax],al
   140039186:	add    BYTE PTR [rax],al
   140039188:	jo     0x14003914e
   14003918a:	add    al,0x0
   14003918c:	add    BYTE PTR [rax],al
   14003918e:	add    BYTE PTR [rax],al
   140039190:	add    ah,0x4
   140039193:	add    BYTE PTR [rax],al
   140039195:	add    BYTE PTR [rax],al
   140039197:	add    BYTE PTR [rsi+0x4c4],cl
   14003919d:	add    BYTE PTR [rax],al
   14003919f:	add    dl,ah
   1400391a1:	mov    eax,0x4
   1400391a6:	add    BYTE PTR [rax],al
   1400391a8:	hlt    
   1400391a9:	mov    eax,0x4
   1400391ae:	add    BYTE PTR [rax],al
   1400391b0:	or     al,0xb9
   1400391b2:	add    al,0x0
   1400391b4:	add    BYTE PTR [rax],al
   1400391b6:	add    BYTE PTR [rax],al
   1400391b8:	and    al,0xb9
   1400391ba:	add    al,0x0
   1400391bc:	add    BYTE PTR [rax],al
   1400391be:	add    BYTE PTR [rax],al
   1400391c0:	xor    al,0xb9
   1400391c2:	add    al,0x0
   1400391c4:	add    BYTE PTR [rax],al
   1400391c6:	add    BYTE PTR [rax],al
   1400391c8:	rex.R mov ecx,0x4
   1400391ce:	add    BYTE PTR [rax],al
   1400391d0:	push   rsp
   1400391d1:	mov    ecx,0x4
   1400391d6:	add    BYTE PTR [rax],al
   1400391d8:	push   0x4b9
   1400391dd:	add    BYTE PTR [rax],al
   1400391df:	add    BYTE PTR [rsi-0x47],bh
   1400391e2:	add    al,0x0
   1400391e4:	add    BYTE PTR [rax],al
   1400391e6:	add    BYTE PTR [rax],al
   1400391e8:	mov    WORD PTR [rcx+0x4],?
   1400391ee:	add    BYTE PTR [rax],al
   1400391f0:	movabs ds:0xb4000000000004b9,al
   1400391f9:	mov    ecx,0x4
   1400391fe:	add    BYTE PTR [rax],al
   140039200:	retf   0x4b9
   140039203:	add    BYTE PTR [rax],al
   140039205:	add    BYTE PTR [rax],al
   140039207:	add    dl,bl
   140039209:	mov    ecx,0x4
   14003920e:	add    BYTE PTR [rax],al
   140039210:	out    0xb9,al
   140039212:	add    al,0x0
   140039214:	add    BYTE PTR [rax],al
   140039216:	add    BYTE PTR [rax],al
   140039218:	cld    
   140039219:	mov    ecx,0x4
   14003921e:	add    BYTE PTR [rax],al
   140039220:	(bad)  
   140039221:	mov    edx,0x4
   140039226:	add    BYTE PTR [rax],al
   140039228:	sbb    al,0xba
   14003922a:	add    al,0x0
   14003922c:	add    BYTE PTR [rax],al
   14003922e:	add    BYTE PTR [rax],al
   140039230:	rex.R mov edx,0x4
   140039236:	add    BYTE PTR [rax],al
   140039238:	pop    rsp
   140039239:	mov    edx,0x4
   14003923e:	add    BYTE PTR [rax],al
   140039240:	jb     0x1400391fc
   140039242:	add    al,0x0
   140039244:	add    BYTE PTR [rax],al
   140039246:	add    BYTE PTR [rax],al
   140039248:	test   BYTE PTR [rdx+0x4],bh
   14003924e:	add    BYTE PTR [rax],al
   140039250:	sahf   
   140039251:	mov    edx,0x4
   140039256:	add    BYTE PTR [rax],al
   140039258:	mov    eax,0x4ba
   14003925d:	add    BYTE PTR [rax],al
   14003925f:	add    dl,cl
   140039261:	mov    edx,0x4
   140039266:	add    BYTE PTR [rax],al
   140039268:	in     al,0xba
   14003926a:	add    al,0x0
   14003926c:	add    BYTE PTR [rax],al
   14003926e:	add    BYTE PTR [rax],al
   140039270:	(bad)  
   140039271:	mov    edx,0x4
   140039276:	add    BYTE PTR [rax],al
   140039278:	or     al,0xbb
   14003927a:	add    al,0x0
   14003927c:	add    BYTE PTR [rax],al
   14003927e:	add    BYTE PTR [rax],al
   140039280:	sbb    BYTE PTR [rbx+0x4],bh
   140039286:	add    BYTE PTR [rax],al
   140039288:	sub    al,0xbb
   14003928a:	add    al,0x0
   14003928c:	add    BYTE PTR [rax],al
   14003928e:	add    BYTE PTR [rax],al
   140039290:	movabs rbx,0xbb5c000000000004
   14003929a:	add    al,0x0
   14003929c:	add    BYTE PTR [rax],al
   14003929e:	add    BYTE PTR [rax],al
   1400392a0:	jb     0x14003925d
   1400392a2:	add    al,0x0
   1400392a4:	add    BYTE PTR [rax],al
   1400392a6:	add    BYTE PTR [rax],al
   1400392a8:	(bad)  
   1400392a9:	mov    ebx,0x4
   1400392ae:	add    BYTE PTR [rax],al
   1400392b0:	xchg   esp,eax
   1400392b1:	mov    ebx,0x4
   1400392b6:	add    BYTE PTR [rax],al
   1400392b8:	movabs al,ds:0xac000000000004bb
   1400392c1:	mov    ebx,0x4
   1400392c6:	add    BYTE PTR [rax],al
   1400392c8:	sar    BYTE PTR [rbx+0x4],0x0
   1400392cf:	add    BYTE PTR [rax+0x4c4],ah
   1400392d5:	add    BYTE PTR [rax],al
   1400392d7:	add    dh,ah
   1400392d9:	mov    ebx,0x4
   1400392de:	add    BYTE PTR [rax],al
   1400392e0:	add    BYTE PTR [rsp+rax*1+0x0],bh
   1400392e7:	add    BYTE PTR [rsp+rdi*4],dl
   1400392ea:	add    al,0x0
   1400392ec:	add    BYTE PTR [rax],al
   1400392ee:	add    BYTE PTR [rax],al
   1400392f0:	xor    BYTE PTR [rsp+rax*1+0x0],bh
   1400392f7:	add    BYTE PTR [rsp+rdi*4],bh
   1400392fa:	add    al,0x0
   1400392fc:	add    BYTE PTR [rax],al
   1400392fe:	add    BYTE PTR [rax],al
   140039300:	rex.WX movabs rsp,0xbc58000000000004
   14003930a:	add    al,0x0
   14003930c:	add    BYTE PTR [rax],al
   14003930e:	add    BYTE PTR [rax],al
   140039310:	(bad)  
   140039311:	mov    esp,0x4
   140039316:	add    BYTE PTR [rax],al
   140039318:	jbe    0x1400392d6
   14003931a:	add    al,0x0
   14003931c:	add    BYTE PTR [rax],al
   14003931e:	add    BYTE PTR [rax],al
   140039320:	mov    bh,BYTE PTR [rsp+rax*1+0x0]
   140039327:	add    BYTE PTR [rsi+0x4bc],bl
   14003932d:	add    BYTE PTR [rax],al
   14003932f:	add    BYTE PTR [rax+0x4bc],dh
   140039335:	add    BYTE PTR [rax],al
   140039337:	add    BYTE PTR [rdx+0x4bc],bh
   14003933d:	add    BYTE PTR [rax],al
   14003933f:	add    dh,al
   140039341:	mov    esp,0x4
   140039346:	add    BYTE PTR [rax],al
   140039348:	sar    BYTE PTR [rsp+rax*1+0x0],cl
   14003934f:	add    al,ah
   140039351:	mov    esp,0x4
   140039356:	add    BYTE PTR [rax],al
   140039358:	repnz mov esp,0x4
   14003935e:	add    BYTE PTR [rax],al
   140039360:	or     BYTE PTR [rbp+0x4],bh
   140039366:	add    BYTE PTR [rax],al
   140039368:	sbb    BYTE PTR [rbp+0x4],bh
   14003936e:	add    BYTE PTR [rax],al
   140039370:	es mov ebp,0x4
   140039376:	add    BYTE PTR [rax],al
   140039378:	ss mov ebp,0x4
   14003937e:	add    BYTE PTR [rax],al
   140039380:	rex.WX movabs rbp,0xbd5a000000000004
   14003938a:	add    al,0x0
   14003938c:	add    BYTE PTR [rax],al
   14003938e:	add    BYTE PTR [rax],al
   140039390:	push   0xffffffffffffffbd
   140039392:	add    al,0x0
   140039394:	add    BYTE PTR [rax],al
   140039396:	add    BYTE PTR [rax],al
   140039398:	jl     0x140039357
   14003939a:	add    al,0x0
   14003939c:	add    BYTE PTR [rax],al
   14003939e:	add    BYTE PTR [rax],al
   1400393a0:	mov    bh,BYTE PTR [rbp+0x4]
   1400393a6:	add    BYTE PTR [rax],al
   1400393a8:	(bad)  
   1400393a9:	mov    ebp,0x4
   1400393ae:	add    BYTE PTR [rax],al
   1400393b0:	lods   al,BYTE PTR ds:[rsi]
   1400393b1:	mov    ebp,0x4
   1400393b6:	add    BYTE PTR [rax],al
   1400393b8:	mov    esp,0x4bd
   1400393bd:	add    BYTE PTR [rax],al
   1400393bf:	add    ah,cl
   1400393c1:	mov    ebp,0x4
   1400393c6:	add    BYTE PTR [rax],al
   1400393c8:	loop   0x140039387
   1400393ca:	add    al,0x0
   1400393cc:	add    BYTE PTR [rax],al
   1400393ce:	add    BYTE PTR [rax],al
   1400393d0:	lock mov ebp,0x4
   1400393d6:	add    BYTE PTR [rax],al
   1400393d8:	add    al,0xbe
   1400393da:	add    al,0x0
   1400393dc:	add    BYTE PTR [rax],al
   1400393de:	add    BYTE PTR [rax],al
   1400393e0:	(bad)  
   1400393e1:	mov    esi,0x4
   1400393e6:	add    BYTE PTR [rax],al
   1400393e8:	cmp    BYTE PTR [rsi+0x4],bh
   1400393ee:	add    BYTE PTR [rax],al
   1400393f0:	rex.WX movabs rsi,0xbe5c000000000004
   1400393fa:	add    al,0x0
   1400393fc:	add    BYTE PTR [rax],al
   1400393fe:	add    BYTE PTR [rax],al
   140039400:	ins    BYTE PTR es:[rdi],dx
   140039401:	mov    esi,0x4
   140039406:	add    BYTE PTR [rax],al
   140039408:	mov    bh,BYTE PTR [rsi+0x4]
   14003940e:	add    BYTE PTR [rax],al
   140039410:	(bad)  
   140039411:	mov    esi,0x4
   140039416:	add    BYTE PTR [rax],al
   140039418:	scas   al,BYTE PTR es:[rdi]
   140039419:	mov    esi,0x4
   14003941e:	add    BYTE PTR [rax],al
   140039420:	mov    esi,0x4be
   140039425:	add    BYTE PTR [rax],al
   140039427:	add    al,dl
   140039429:	mov    esi,0x4
   14003942e:	add    BYTE PTR [rax],al
   140039430:	fdivr  QWORD PTR [rsi+0x4]
   140039436:	add    BYTE PTR [rax],al
   140039438:	in     al,dx
   140039439:	mov    esi,0x4
   14003943e:	add    BYTE PTR [rax],al
   140039440:	add    bh,BYTE PTR [rdi+0x4]
   140039446:	add    BYTE PTR [rax],al
   140039448:	(bad)  
   140039449:	mov    edi,0x4
   14003944e:	add    BYTE PTR [rax],al
   140039450:	xor    BYTE PTR [rdi+0x4],bh
   140039456:	add    BYTE PTR [rax],al
   140039458:	rex mov edi,0x4
   14003945e:	add    BYTE PTR [rax],al
   140039460:	push   rax
   140039461:	mov    edi,0x4
   140039466:	add    BYTE PTR [rax],al
   140039468:	(bad)  
   140039469:	mov    edi,0x4
   14003946e:	add    BYTE PTR [rax],al
   140039470:	jb     0x140039431
   140039472:	add    al,0x0
   140039474:	add    BYTE PTR [rax],al
   140039476:	add    BYTE PTR [rax],al
   140039478:	(bad)  
   140039479:	mov    edi,0x4
   14003947e:	add    BYTE PTR [rax],al
   140039480:	nop
   140039481:	mov    edi,0x4
   140039486:	add    BYTE PTR [rax],al
   140039488:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039489:	mov    edi,0x4
   14003948e:	add    BYTE PTR [rax],al
   140039490:	ret    0x4bf
   140039493:	add    BYTE PTR [rax],al
   140039495:	add    BYTE PTR [rax],al
   140039497:	add    ah,dl
   140039499:	mov    edi,0x4
   14003949e:	add    BYTE PTR [rax],al
   1400394a0:	(bad)  
   1400394a1:	mov    edi,0x4
   1400394a6:	add    BYTE PTR [rax],al
   1400394a8:	cli    
   1400394a9:	mov    edi,0x4
   1400394ae:	add    BYTE PTR [rax],al
   1400394b0:	adc    al,0xc0
   1400394b2:	add    al,0x0
   1400394b4:	add    BYTE PTR [rax],al
   1400394b6:	add    BYTE PTR [rax],al
   1400394b8:	and    al,al
   1400394ba:	add    al,0x0
   1400394bc:	add    BYTE PTR [rax],al
   1400394be:	add    BYTE PTR [rax],al
   1400394c0:	xor    al,0xc0
   1400394c2:	add    al,0x0
   1400394c4:	add    BYTE PTR [rax],al
   1400394c6:	add    BYTE PTR [rax],al
   1400394c8:	rex rol BYTE PTR [rax+rax*1],0x0
   1400394cd:	add    BYTE PTR [rax],al
   1400394cf:	add    BYTE PTR [rdx-0x40],bl
   1400394d2:	add    al,0x0
   1400394d4:	add    BYTE PTR [rax],al
   1400394d6:	add    BYTE PTR [rax],al
   1400394d8:	push   0xffffffffffffffc0
   1400394da:	add    al,0x0
   1400394dc:	add    BYTE PTR [rax],al
   1400394de:	add    BYTE PTR [rax],al
   1400394e0:	jbe    0x1400394a2
   1400394e2:	add    al,0x0
   1400394e4:	add    BYTE PTR [rax],al
   1400394e6:	add    BYTE PTR [rax],al
   1400394e8:	mov    eax,es
   1400394ea:	add    al,0x0
   1400394ec:	add    BYTE PTR [rax],al
   1400394ee:	add    BYTE PTR [rax],al
   1400394f0:	pushf  
   1400394f1:	rol    BYTE PTR [rax+rax*1],0x0
   1400394f5:	add    BYTE PTR [rax],al
   1400394f7:	add    BYTE PTR [rsi+0x4c0],ch
   1400394fd:	add    BYTE PTR [rax],al
   1400394ff:	add    BYTE PTR [rsi+0x4c0],bh
   140039505:	add    BYTE PTR [rax],al
   140039507:	add    ah,cl
   140039509:	rol    BYTE PTR [rax+rax*1],0x0
   14003950d:	add    BYTE PTR [rax],al
   14003950f:	add    dl,ah
   140039511:	rol    BYTE PTR [rax+rax*1],0x0
   140039515:	add    BYTE PTR [rax],al
   140039517:	add    dh,bh
   140039519:	rol    BYTE PTR [rax+rax*1],0x0
   14003951d:	add    BYTE PTR [rax],al
   14003951f:	add    BYTE PTR [rdx],dl
   140039521:	rol    DWORD PTR [rax+rax*1],0x0
   140039525:	add    BYTE PTR [rax],al
   140039527:	add    BYTE PTR [rdx],ah
   140039529:	rol    DWORD PTR [rax+rax*1],0x0
   14003952d:	add    BYTE PTR [rax],al
   14003952f:	add    BYTE PTR [rdx],bh
   140039531:	rol    DWORD PTR [rax+rax*1],0x0
   140039535:	add    BYTE PTR [rax],al
   140039537:	add    BYTE PTR [rsi-0x3f],cl
   14003953a:	add    al,0x0
   14003953c:	add    BYTE PTR [rax],al
   14003953e:	add    BYTE PTR [rax],al
   140039540:	pop    rsi
   140039541:	rol    DWORD PTR [rax+rax*1],0x0
   140039545:	add    BYTE PTR [rax],al
   140039547:	add    BYTE PTR [rax-0x3f],dh
   14003954a:	add    al,0x0
   14003954c:	add    BYTE PTR [rax],al
   14003954e:	add    BYTE PTR [rax],al
   140039550:	xchg   cl,al
   140039552:	add    al,0x0
   140039554:	add    BYTE PTR [rax],al
   140039556:	add    BYTE PTR [rax],al
   140039558:	movabs ds:0xbe000000000004c1,al
   140039561:	rol    DWORD PTR [rax+rax*1],0x0
   140039565:	add    BYTE PTR [rax],al
   140039567:	add    dl,dl
   140039569:	rol    DWORD PTR [rax+rax*1],0x0
   14003956d:	add    BYTE PTR [rax],al
   14003956f:	add    al,ah
   140039571:	rol    DWORD PTR [rax+rax*1],0x0
   140039575:	add    BYTE PTR [rax],al
   140039577:	add    dh,ch
   140039579:	rol    DWORD PTR [rax+rax*1],0x0
   14003957d:	add    BYTE PTR [rax],al
   14003957f:	add    dl,bh
   140039581:	rol    DWORD PTR [rax+rax*1],0x0
   140039585:	add    BYTE PTR [rax],al
   140039587:	add    BYTE PTR [rdx+rax*8],cl
   14003958a:	add    al,0x0
   14003958c:	add    BYTE PTR [rax],al
   14003958e:	add    BYTE PTR [rax],al
   140039590:	sbb    al,0xc2
   140039592:	add    al,0x0
   140039594:	add    BYTE PTR [rax],al
   140039596:	add    BYTE PTR [rax],al
   140039598:	sub    al,dl
   14003959a:	add    al,0x0
   14003959c:	add    BYTE PTR [rax],al
   14003959e:	add    BYTE PTR [rax],al
   1400395a0:	cmp    al,0xc2
   1400395a2:	add    al,0x0
   1400395a4:	add    BYTE PTR [rax],al
   1400395a6:	add    BYTE PTR [rax],al
   1400395a8:	xchg   bl,al
   1400395aa:	add    al,0x0
   1400395ac:	add    BYTE PTR [rax],al
   1400395ae:	add    BYTE PTR [rax],al
   1400395b0:	jbe    0x140039575
   1400395b2:	add    al,0x0
   1400395b4:	add    BYTE PTR [rax],al
   1400395b6:	add    BYTE PTR [rax],al
   1400395b8:	in     al,dx
   1400395b9:	mov    ch,0x4
   1400395bb:	add    BYTE PTR [rax],al
   1400395bd:	add    BYTE PTR [rax],al
   1400395bf:	add    dh,bl
   1400395c1:	mov    ch,0x4
   1400395c3:	add    BYTE PTR [rax],al
   1400395c5:	add    BYTE PTR [rax],al
   1400395c7:	add    dh,cl
   1400395c9:	mov    ch,0x4
   1400395cb:	add    BYTE PTR [rax],al
   1400395cd:	add    BYTE PTR [rax],al
   1400395cf:	add    BYTE PTR [rax+0x4b5],bh
   1400395d5:	add    BYTE PTR [rax],al
   1400395d7:	add    BYTE PTR [rax+0x4b5],ah
   1400395dd:	add    BYTE PTR [rax],al
   1400395df:	add    BYTE PTR [rax+0x4b5],dl
   1400395e5:	add    BYTE PTR [rax],al
   1400395e7:	add    BYTE PTR [rsi-0x4b],bh
   1400395ea:	add    al,0x0
   1400395ec:	add    BYTE PTR [rax],al
   1400395ee:	add    BYTE PTR [rax],al
   1400395f0:	jbe    0x1400395a7
   1400395f2:	add    al,0x0
   1400395f4:	add    BYTE PTR [rax],al
   1400395f6:	add    BYTE PTR [rax],al
   1400395f8:	pop    rax
   1400395f9:	mov    ch,0x4
   1400395fb:	add    BYTE PTR [rax],al
   1400395fd:	add    BYTE PTR [rax],al
   1400395ff:	add    dl,dl
   140039601:	mov    ebx,0x4
   140039606:	add    BYTE PTR [rax],al
   140039608:	mov    ah,0xc4
   14003960a:	add    al,0x0
	...
   140039618:	mov    edx,es
   14003961a:	add    al,0x0
   14003961c:	add    BYTE PTR [rax],al
   14003961e:	add    BYTE PTR [rax],al
   140039620:	jbe    0x1400395e4
   140039622:	add    al,0x0
   140039624:	add    BYTE PTR [rax],al
   140039626:	add    BYTE PTR [rax],al
   140039628:	movabs al,ds:0xee000000000004c2
   140039631:	mov    dh,0x4
	...
   14003963f:	add    BYTE PTR [rsi],bl
   140039641:	mov    dh,0x4
   140039643:	add    BYTE PTR [rax],al
   140039645:	add    BYTE PTR [rax],al
   140039647:	add    BYTE PTR [rsi],al
   140039649:	mov    dh,0x4
	...
   140039657:	add    BYTE PTR [rsi-0x4a],ah
   14003965a:	add    al,0x0
   14003965c:	add    BYTE PTR [rax],al
   14003965e:	add    BYTE PTR [rax],al
   140039660:	push   rdx
   140039661:	ret    0x4
   140039664:	add    BYTE PTR [rax],al
   140039666:	add    BYTE PTR [rax],al
   140039668:	(bad)
   14003966d:	add    BYTE PTR [rax],al
   14003966f:	add    BYTE PTR [rsi+rsi*4+0x4],dl
   140039673:	add    BYTE PTR [rax],al
   140039675:	add    BYTE PTR [rax],al
   140039677:	add    BYTE PTR [rdx-0x4a],al
   14003967a:	add    al,0x0
	...
   140039688:	sahf   
   140039689:	mov    dh,0x4
   14003968b:	add    BYTE PTR [rax],al
   14003968d:	add    BYTE PTR [rax],al
   14003968f:	add    BYTE PTR [rsi+0x4b6],ch
   140039695:	add    BYTE PTR [rax],al
   140039697:	add    al,al
   140039699:	mov    dh,0x4
   14003969b:	add    BYTE PTR [rax],al
   14003969d:	add    BYTE PTR [rax],al
   14003969f:	add    al,dl
   1400396a1:	mov    dh,0x4
   1400396a3:	add    BYTE PTR [rax],al
   1400396a5:	add    BYTE PTR [rax],al
   1400396a7:	add    BYTE PTR [rax+0x4b6],al
	...
   1400396bd:	add    BYTE PTR [rax],al
   1400396bf:	add    BYTE PTR [rdx+rcx*4+0x3],bl
   1400396c3:	rex add DWORD PTR [rax],eax
   1400396c6:	add    BYTE PTR [rax],al
   1400396c8:	jl     0x140039654
   1400396ca:	add    eax,DWORD PTR [rax+0x1]
   1400396cd:	add    BYTE PTR [rax],al
   1400396cf:	add    BYTE PTR [rdx+rcx*4+0x14003],dh
   1400396d6:	add    BYTE PTR [rax],al
   1400396d8:	lock xchg BYTE PTR [rbx],al
   1400396db:	rex add DWORD PTR [rax],eax
   1400396de:	add    BYTE PTR [rax],al
   1400396e0:	cld    
   1400396e1:	xchg   BYTE PTR [rbx],al
   1400396e3:	rex add DWORD PTR [rax],eax
   1400396e6:	add    BYTE PTR [rax],al
   1400396e8:	sub    BYTE PTR [rdi+0x14003],al
   1400396ee:	add    BYTE PTR [rax],al
   1400396f0:	xchg   DWORD PTR fs:[rbx],eax
   1400396f3:	rex add DWORD PTR [rax],eax
   1400396f6:	add    BYTE PTR [rax],al
   1400396f8:	movabs al,ds:0xf400000001400387
   140039701:	mov    BYTE PTR [rbx],al
   140039703:	rex add DWORD PTR [rax],eax
   140039706:	add    BYTE PTR [rax],al
   140039708:	add    BYTE PTR [rcx+0x14003],cl
   14003970e:	add    BYTE PTR [rax],al
   140039710:	(bad)  
   140039711:	mov    DWORD PTR [rbx],eax
   140039713:	rex add DWORD PTR [rax],eax
   140039716:	add    BYTE PTR [rax],al
   140039718:	movabs al,ds:0xe000000001400389
   140039721:	mov    DWORD PTR [rbx],eax
   140039723:	rex add DWORD PTR [rax],eax
   140039726:	add    BYTE PTR [rax],al
   140039728:	or     al,0x8a
   14003972a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003973d:	add    BYTE PTR [rax],al
   14003973f:	add    BYTE PTR [rbx+rdx*1+0x2],ah
   140039743:	rex add DWORD PTR [rax],eax
   140039746:	add    BYTE PTR [rax],al
   140039748:	rex (bad) 
   14003974a:	add    al,BYTE PTR [rax+0x1]
   14003974d:	add    BYTE PTR [rax],al
   14003974f:	add    BYTE PTR [rax+0x1400234],cl
   140039755:	add    BYTE PTR [rax],al
   140039757:	add    BYTE PTR [rax+0x6c],bh
   14003975a:	add    al,BYTE PTR [rax+0x1]
   14003975d:	add    BYTE PTR [rax],al
   14003975f:	add    BYTE PTR [rax+0x1b],bh
   140039762:	add    al,BYTE PTR [rax+0x1]
	...
   140039775:	add    BYTE PTR [rax],al
   140039777:	add    BYTE PTR [rdx+rbx*4+0x14002],cl
   14003977e:	add    BYTE PTR [rax],al
   140039780:	mov    BYTE PTR [rdx+rax*1+0x140],bl
   140039787:	add    ah,bh
   140039789:	adc    eax,DWORD PTR [rdx]
   14003978b:	rex add DWORD PTR [rax],eax
	...
   1400397b2:	add    BYTE PTR [rax],al
   1400397b4:	rex.X mov bpl,0x11
   1400397b7:	push   rax
   1400397b8:	add    BYTE PTR [rax],al
   1400397ba:	add    BYTE PTR [rax],al
   1400397bc:	add    al,BYTE PTR [rax]
   1400397be:	add    BYTE PTR [rax],al
   1400397c0:	add    BYTE PTR es:[rax],al
   1400397c3:	add    BYTE PTR [rax],dh
   1400397c5:	sbb    DWORD PTR [rax+rax*1],eax
   1400397c8:	xor    BYTE PTR [rbx],cl
   1400397ca:	add    al,0x0
   1400397cc:	add    BYTE PTR [rax],al
   1400397ce:	add    BYTE PTR [rax],al
   1400397d0:	rex.X mov bpl,0x11
   1400397d3:	push   rax
   1400397d4:	add    BYTE PTR [rax],al
   1400397d6:	add    BYTE PTR [rax],al
   1400397d8:	or     al,0x0
   1400397da:	add    BYTE PTR [rax],al
   1400397dc:	adc    BYTE PTR [rax],al
   1400397de:	add    BYTE PTR [rax],al
   1400397e0:	pop    rax
   1400397e1:	sbb    DWORD PTR [rax+rax*1],eax
   1400397e4:	pop    rax
   1400397e5:	or     eax,DWORD PTR [rax+rax*1]
   1400397e8:	push   0x1400419
   1400397ed:	add    BYTE PTR [rax],al
   1400397ef:	add    BYTE PTR [rax],ch
   1400397f1:	sbb    al,BYTE PTR [rdx]
   1400397f3:	rex add DWORD PTR [rax],eax
   1400397f6:	add    BYTE PTR [rax],al
   1400397f8:	loopne 0x140039813
   1400397fa:	add    al,0x40
   1400397fc:	add    DWORD PTR [rax],eax
   1400397fe:	add    BYTE PTR [rax],al
   140039800:	add    al,0x1b
   140039802:	add    al,BYTE PTR [rax+0x1]
   140039805:	add    BYTE PTR [rax],al
   140039807:	add    BYTE PTR [rax+0x1400265],bl
   14003980d:	add    BYTE PTR [rax],al
   14003980f:	add    BYTE PTR [rdx+0x61],ah
   140039812:	and    BYTE PTR fs:[rcx+0x6c],ah
   140039816:	ins    BYTE PTR es:[rdi],dx
   140039817:	outs   dx,DWORD PTR ds:[rsi]
   140039818:	movsxd esp,DWORD PTR [rcx+0x74]
   14003981b:	imul   ebp,DWORD PTR [rdi+0x6e],0x50000
   140039822:	add    al,al
   140039824:	or     eax,DWORD PTR [rax]
	...
   14003982e:	add    BYTE PTR [rax],al
   140039830:	sbb    eax,0x4c00000
	...
   14003983d:	add    BYTE PTR [rax],al
   14003983f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14003984d:	add    BYTE PTR [rax],al
   14003984f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14003985d:	add    BYTE PTR [rax],al
   14003985f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14003986d:	add    BYTE PTR [rax],al
   14003986f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14003987d:	add    BYTE PTR [rax],al
   14003987f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14003988d:	add    BYTE PTR [rax],al
   14003988f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14003989d:	add    BYTE PTR [rax],al
   14003989f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   1400398ad:	add    BYTE PTR [rax],al
   1400398af:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   1400398bd:	add    BYTE PTR [rax],al
   1400398bf:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   1400398ce:	add    BYTE PTR [rax],al
   1400398d0:	mov    ch,0x2
   1400398d2:	add    al,al
   1400398d4:	or     BYTE PTR [rax],al
	...
   1400398de:	add    BYTE PTR [rax],al
   1400398e0:	or     al,0x0
   1400398e2:	add    BYTE PTR [rax],al
   1400398e4:	rol    BYTE PTR [rax],0x0
   1400398e7:	add    BYTE PTR [rbx],al
   1400398e9:	add    BYTE PTR [rax],al
   1400398eb:	add    BYTE PTR [rcx],cl
   1400398ed:	add    BYTE PTR [rax],al
   1400398ef:	add    BYTE PTR [rbx+0x6f],al
   1400398f2:	jb     0x140039939
   1400398f4:	js     0x14003995f
   1400398f6:	je     0x140039948
   1400398f8:	jb     0x140039969
   1400398fa:	movsxd esp,DWORD PTR [rbp+0x73]
   1400398fd:	jae    0x1400398ff
   1400398ff:	add    BYTE PTR [rdx],al
   140039901:	add    BYTE PTR [rax],al
   140039903:	add    BYTE PTR [rax],al
   140039905:	add    BYTE PTR [rax],al
   140039907:	add    BYTE PTR [rax-0x66],dh
   14003990a:	add    eax,DWORD PTR [rax+0x1]
   14003990d:	add    BYTE PTR [rax],al
   14003990f:	add    BYTE PTR [rax],cl
   140039911:	add    BYTE PTR [rax],al
   140039913:	add    BYTE PTR [rax],al
   140039915:	add    BYTE PTR [rax],al
   140039917:	add    al,dl
   140039919:	(bad)  
   14003991a:	add    eax,DWORD PTR [rax+0x1]
   14003991d:	add    BYTE PTR [rax],al
   14003991f:	add    BYTE PTR [rcx],cl
   140039921:	add    BYTE PTR [rax],al
   140039923:	add    BYTE PTR [rax],al
   140039925:	add    BYTE PTR [rax],al
   140039927:	add    BYTE PTR [rax],dh
   140039929:	fwait
   14003992a:	add    eax,DWORD PTR [rax+0x1]
   14003992d:	add    BYTE PTR [rax],al
   14003992f:	add    BYTE PTR [rdx],cl
   140039931:	add    BYTE PTR [rax],al
   140039933:	add    BYTE PTR [rax],al
   140039935:	add    BYTE PTR [rax],al
   140039937:	add    BYTE PTR [rax+0x140039b],dl
   14003993d:	add    BYTE PTR [rax],al
   14003993f:	add    BYTE PTR [rax],dl
   140039941:	add    BYTE PTR [rax],al
   140039943:	add    BYTE PTR [rax],al
   140039945:	add    BYTE PTR [rax],al
   140039947:	add    al,ah
   140039949:	fwait
   14003994a:	add    eax,DWORD PTR [rax+0x1]
   14003994d:	add    BYTE PTR [rax],al
   14003994f:	add    BYTE PTR [rcx],dl
   140039951:	add    BYTE PTR [rax],al
   140039953:	add    BYTE PTR [rax],al
   140039955:	add    BYTE PTR [rax],al
   140039957:	add    BYTE PTR [rax-0x64],al
   14003995a:	add    eax,DWORD PTR [rax+0x1]
   14003995d:	add    BYTE PTR [rax],al
   14003995f:	add    BYTE PTR [rdx],dl
   140039961:	add    BYTE PTR [rax],al
   140039963:	add    BYTE PTR [rax],al
   140039965:	add    BYTE PTR [rax],al
   140039967:	add    BYTE PTR [rax+0x140039c],ah
   14003996d:	add    BYTE PTR [rax],al
   14003996f:	add    BYTE PTR [rbx],dl
   140039971:	add    BYTE PTR [rax],al
   140039973:	add    BYTE PTR [rax],al
   140039975:	add    BYTE PTR [rax],al
   140039977:	add    al,dh
   140039979:	pushf  
   14003997a:	add    eax,DWORD PTR [rax+0x1]
   14003997d:	add    BYTE PTR [rax],al
   14003997f:	add    BYTE PTR [rax],bl
   140039981:	add    BYTE PTR [rax],al
   140039983:	add    BYTE PTR [rax],al
   140039985:	add    BYTE PTR [rax],al
   140039987:	add    BYTE PTR [rax-0x63],dl
   14003998a:	add    eax,DWORD PTR [rax+0x1]
   14003998d:	add    BYTE PTR [rax],al
   14003998f:	add    BYTE PTR [rcx],bl
   140039991:	add    BYTE PTR [rax],al
   140039993:	add    BYTE PTR [rax],al
   140039995:	add    BYTE PTR [rax],al
   140039997:	add    al,al
   140039999:	popf   
   14003999a:	add    eax,DWORD PTR [rax+0x1]
   14003999d:	add    BYTE PTR [rax],al
   14003999f:	add    BYTE PTR [rdx],bl
   1400399a1:	add    BYTE PTR [rax],al
   1400399a3:	add    BYTE PTR [rax],al
   1400399a5:	add    BYTE PTR [rax],al
   1400399a7:	add    BYTE PTR [rax],dl
   1400399a9:	sahf   
   1400399aa:	add    eax,DWORD PTR [rax+0x1]
   1400399ad:	add    BYTE PTR [rax],al
   1400399af:	add    BYTE PTR [rbx],bl
   1400399b1:	add    BYTE PTR [rax],al
   1400399b3:	add    BYTE PTR [rax],al
   1400399b5:	add    BYTE PTR [rax],al
   1400399b7:	add    BYTE PTR [rax+0x140039e],al
   1400399bd:	add    BYTE PTR [rax],al
   1400399bf:	add    BYTE PTR [rax+rax*1],bl
   1400399c2:	add    BYTE PTR [rax],al
   1400399c4:	add    BYTE PTR [rax],al
   1400399c6:	add    BYTE PTR [rax],al
   1400399c8:	lock sahf 
   1400399ca:	add    eax,DWORD PTR [rax+0x1]
   1400399cd:	add    BYTE PTR [rax],al
   1400399cf:	add    BYTE PTR [rsi],bl
   1400399d1:	add    BYTE PTR [rax],al
   1400399d3:	add    BYTE PTR [rax],al
   1400399d5:	add    BYTE PTR [rax],al
   1400399d7:	add    BYTE PTR [rax-0x61],al
   1400399da:	add    eax,DWORD PTR [rax+0x1]
   1400399dd:	add    BYTE PTR [rax],al
   1400399df:	add    BYTE PTR [rdi],bl
   1400399e1:	add    BYTE PTR [rax],al
   1400399e3:	add    BYTE PTR [rax],al
   1400399e5:	add    BYTE PTR [rax],al
   1400399e7:	add    BYTE PTR [rax+0x140039f],al
   1400399ed:	add    BYTE PTR [rax],al
   1400399ef:	add    BYTE PTR [rax],ah
   1400399f1:	add    BYTE PTR [rax],al
   1400399f3:	add    BYTE PTR [rax],al
   1400399f5:	add    BYTE PTR [rax],al
   1400399f7:	add    BYTE PTR [rax-0x60],dl
   1400399fa:	add    eax,DWORD PTR [rax+0x1]
   1400399fd:	add    BYTE PTR [rax],al
   1400399ff:	add    BYTE PTR [rcx],ah
   140039a01:	add    BYTE PTR [rax],al
   140039a03:	add    BYTE PTR [rax],al
   140039a05:	add    BYTE PTR [rax],al
   140039a07:	add    al,al
   140039a09:	movabs al,ds:0x22000000014003
   140039a12:	add    BYTE PTR [rax],al
   140039a14:	add    BYTE PTR [rax],al
   140039a16:	add    BYTE PTR [rax],al
   140039a18:	mov    al,0xa2
   140039a1a:	add    eax,DWORD PTR [rax+0x1]
   140039a1d:	add    BYTE PTR [rax],al
   140039a1f:	add    BYTE PTR [rax+0x0],bh
   140039a22:	add    BYTE PTR [rax],al
   140039a24:	add    BYTE PTR [rax],al
   140039a26:	add    BYTE PTR [rax],al
   140039a28:	sbb    BYTE PTR [rbx+0x14003],ah
   140039a2e:	add    BYTE PTR [rax],al
   140039a30:	jns    0x140039a32
   140039a32:	add    BYTE PTR [rax],al
   140039a34:	add    BYTE PTR [rax],al
   140039a36:	add    BYTE PTR [rax],al
   140039a38:	cmp    BYTE PTR [rbx+0x14003],ah
   140039a3e:	add    BYTE PTR [rax],al
   140039a40:	jp     0x140039a42
   140039a42:	add    BYTE PTR [rax],al
   140039a44:	add    BYTE PTR [rax],al
   140039a46:	add    BYTE PTR [rax],al
   140039a48:	pop    rax
   140039a49:	movabs ds:0xfc000000014003,eax
   140039a52:	add    BYTE PTR [rax],al
   140039a54:	add    BYTE PTR [rax],al
   140039a56:	add    BYTE PTR [rax],al
   140039a58:	je     0x1400399fd
   140039a5a:	add    eax,DWORD PTR [rax+0x1]
   140039a5d:	add    BYTE PTR [rax],al
   140039a5f:	add    bh,bh
   140039a61:	add    BYTE PTR [rax],al
   140039a63:	add    BYTE PTR [rax],al
   140039a65:	add    BYTE PTR [rax],al
   140039a67:	add    BYTE PTR [rax+0x14003a3],al
   140039a6d:	add    BYTE PTR [rax],al
   140039a6f:	add    BYTE PTR [rdx+0x0],dl
   140039a72:	add    BYTE PTR ss:[rax],dh
   140039a75:	add    BYTE PTR [rax],dh
   140039a77:	add    BYTE PTR [rdx],dh
   140039a79:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a47f
   140039a7f:	add    BYTE PTR [rax],ah
   140039a81:	add    BYTE PTR [rsi+0x0],ah
   140039a84:	ins    BYTE PTR es:[rdi],dx
   140039a85:	add    BYTE PTR [rdi+0x0],ch
   140039a88:	(bad)  
   140039a89:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039a8d:	add    BYTE PTR [rsi+0x0],ch
   140039a90:	add    BYTE PTR [eax],ah
   140039a93:	add    BYTE PTR [rax+0x0],dh
   140039a96:	outs   dx,DWORD PTR ds:[rsi]
   140039a97:	add    BYTE PTR [rcx+0x0],ch
   140039a9a:	outs   dx,BYTE PTR ds:[rsi]
   140039a9b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039a9f:	add    BYTE PTR [rbx+0x0],dh
   140039aa2:	jne    0x140039aa4
   140039aa4:	jo     0x140039aa6
   140039aa6:	jo     0x140039aa8
   140039aa8:	outs   dx,DWORD PTR ds:[rsi]
   140039aa9:	add    BYTE PTR [rdx+0x0],dh
   140039aac:	je     0x140039aae
   140039aae:	and    BYTE PTR [rax],al
   140039ab0:	outs   dx,BYTE PTR ds:[rsi]
   140039ab1:	add    BYTE PTR [rdi+0x0],ch
   140039ab4:	je     0x140039ab6
   140039ab6:	and    BYTE PTR [rax],al
   140039ab8:	ins    BYTE PTR es:[rdi],dx
   140039ab9:	add    BYTE PTR [rdi+0x0],ch
   140039abc:	(bad)  
   140039abd:	add    BYTE PTR [rax+rax*1+0x65],ah
   140039ac1:	add    BYTE PTR [rax+rax*1+0xd],ah
   140039ac5:	add    BYTE PTR [rdx],cl
	...
   140039acf:	add    BYTE PTR [rdx+0x0],dl
   140039ad2:	add    BYTE PTR ss:[rax],dh
   140039ad5:	add    BYTE PTR [rax],dh
   140039ad7:	add    BYTE PTR [rax],bh
   140039ad9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a4df
   140039adf:	add    BYTE PTR [rax],ah
   140039ae1:	add    BYTE PTR [rsi+0x0],ch
   140039ae4:	outs   dx,DWORD PTR ds:[rsi]
   140039ae5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039ae9:	add    BYTE PTR [rbp+0x0],ah
   140039aec:	outs   dx,BYTE PTR ds:[rsi]
   140039aed:	add    BYTE PTR [rdi+0x0],ch
   140039af0:	jne    0x140039af2
   140039af2:	add    BYTE PTR [eax+0x0],ch
   140039af6:	and    BYTE PTR [rax],al
   140039af8:	jae    0x140039afa
   140039afa:	jo     0x140039afc
   140039afc:	(bad)  
   140039afd:	add    BYTE PTR [rbx+0x0],ah
   140039b00:	add    BYTE PTR gs:[rax],ah
   140039b03:	add    BYTE PTR [rsi+0x0],ah
   140039b06:	outs   dx,DWORD PTR ds:[rsi]
   140039b07:	add    BYTE PTR [rdx+0x0],dh
   140039b0a:	and    BYTE PTR [rax],al
   140039b0c:	(bad)  
   140039b0d:	add    BYTE PTR [rdx+0x0],dh
   140039b10:	add    BYTE PTR [ebp+0x0],dh
   140039b14:	ins    DWORD PTR es:[rdi],dx
   140039b15:	add    BYTE PTR [rbp+0x0],ah
   140039b18:	outs   dx,BYTE PTR ds:[rsi]
   140039b19:	add    BYTE PTR [rax+rax*1+0x73],dh
   140039b1d:	add    BYTE PTR [rip+0xa00],cl        # 0x14003a523
	...
   140039b2f:	add    BYTE PTR [rdx+0x0],dl
   140039b32:	add    BYTE PTR ss:[rax],dh
   140039b35:	add    BYTE PTR [rax],dh
   140039b37:	add    BYTE PTR [rcx],bh
   140039b39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a53f
   140039b3f:	add    BYTE PTR [rax],ah
   140039b41:	add    BYTE PTR [rsi+0x0],ch
   140039b44:	outs   dx,DWORD PTR ds:[rsi]
   140039b45:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039b49:	add    BYTE PTR [rbp+0x0],ah
   140039b4c:	outs   dx,BYTE PTR ds:[rsi]
   140039b4d:	add    BYTE PTR [rdi+0x0],ch
   140039b50:	jne    0x140039b52
   140039b52:	add    BYTE PTR [eax+0x0],ch
   140039b56:	and    BYTE PTR [rax],al
   140039b58:	jae    0x140039b5a
   140039b5a:	jo     0x140039b5c
   140039b5c:	(bad)  
   140039b5d:	add    BYTE PTR [rbx+0x0],ah
   140039b60:	add    BYTE PTR gs:[rax],ah
   140039b63:	add    BYTE PTR [rsi+0x0],ah
   140039b66:	outs   dx,DWORD PTR ds:[rsi]
   140039b67:	add    BYTE PTR [rdx+0x0],dh
   140039b6a:	and    BYTE PTR [rax],al
   140039b6c:	add    BYTE PTR gs:[rsi+0x0],ch
   140039b70:	jbe    0x140039b72
   140039b72:	imul   eax,DWORD PTR [rax],0x6f0072
   140039b78:	outs   dx,BYTE PTR ds:[rsi]
   140039b79:	add    BYTE PTR [rbp+0x0],ch
   140039b7c:	add    BYTE PTR gs:[rsi+0x0],ch
   140039b80:	je     0x140039b82
   140039b82:	or     eax,0xa00
	...
   140039b8f:	add    BYTE PTR [rdx+0x0],dl
   140039b92:	add    BYTE PTR ss:[rax],dh
   140039b95:	add    BYTE PTR [rcx],dh
   140039b97:	add    BYTE PTR [rax],dh
   140039b99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a59f
   140039b9f:	add    BYTE PTR [rax],ah
   140039ba1:	add    BYTE PTR [rcx+0x0],ah
   140039ba4:	(bad)  
   140039ba5:	add    BYTE PTR [rdi+0x0],ch
   140039ba8:	jb     0x140039baa
   140039baa:	je     0x140039bac
   140039bac:	sub    BYTE PTR [rax],al
   140039bae:	sub    DWORD PTR [rax],eax
   140039bb0:	and    BYTE PTR [rax],al
   140039bb2:	push   0x73006100
   140039bb7:	add    BYTE PTR [rax],ah
   140039bb9:	add    BYTE PTR [rdx+0x0],ah
   140039bbc:	add    BYTE PTR gs:[rbp+0x0],ah
   140039bc0:	outs   dx,BYTE PTR ds:[rsi]
   140039bc1:	add    BYTE PTR [rax],ah
   140039bc3:	add    BYTE PTR [rbx+0x0],ah
   140039bc6:	(bad)  
   140039bc7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140039bcb:	add    BYTE PTR [rbp+0x0],ah
   140039bce:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14003a5d5
	...
   140039bdd:	add    BYTE PTR [rax],al
   140039bdf:	add    BYTE PTR [rdx+0x0],dl
   140039be2:	add    BYTE PTR ss:[rax],dh
   140039be5:	add    BYTE PTR [rcx],dh
   140039be7:	add    BYTE PTR [rsi],dh
   140039be9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a5ef
   140039bef:	add    BYTE PTR [rax],ah
   140039bf1:	add    BYTE PTR [rsi+0x0],ch
   140039bf4:	outs   dx,DWORD PTR ds:[rsi]
   140039bf5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039bf9:	add    BYTE PTR [rbp+0x0],ah
   140039bfc:	outs   dx,BYTE PTR ds:[rsi]
   140039bfd:	add    BYTE PTR [rdi+0x0],ch
   140039c00:	jne    0x140039c02
   140039c02:	add    BYTE PTR [eax+0x0],ch
   140039c06:	and    BYTE PTR [rax],al
   140039c08:	jae    0x140039c0a
   140039c0a:	jo     0x140039c0c
   140039c0c:	(bad)  
   140039c0d:	add    BYTE PTR [rbx+0x0],ah
   140039c10:	add    BYTE PTR gs:[rax],ah
   140039c13:	add    BYTE PTR [rsi+0x0],ah
   140039c16:	outs   dx,DWORD PTR ds:[rsi]
   140039c17:	add    BYTE PTR [rdx+0x0],dh
   140039c1a:	and    BYTE PTR [rax],al
   140039c1c:	je     0x140039c1e
   140039c1e:	push   0x65007200
   140039c23:	add    BYTE PTR [rcx+0x0],ah
   140039c26:	add    BYTE PTR fs:[rax],ah
   140039c29:	add    BYTE PTR [rax+rax*1+0x61],ah
   140039c2d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140039c31:	add    BYTE PTR [rip+0xa00],cl        # 0x14003a637
	...
   140039c3f:	add    BYTE PTR [rdx+0x0],dl
   140039c42:	add    BYTE PTR ss:[rax],dh
   140039c45:	add    BYTE PTR [rcx],dh
   140039c47:	add    BYTE PTR [rdi],dh
   140039c49:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a64f
   140039c4f:	add    BYTE PTR [rax],ah
   140039c51:	add    BYTE PTR [rbp+0x0],dh
   140039c54:	outs   dx,BYTE PTR ds:[rsi]
   140039c55:	add    BYTE PTR [rbp+0x0],ah
   140039c58:	js     0x140039c5a
   140039c5a:	jo     0x140039c5c
   140039c5c:	add    BYTE PTR gs:[rbx+0x0],ah
   140039c60:	je     0x140039c62
   140039c62:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140039c67:	add    BYTE PTR [rbp+0x0],ch
   140039c6a:	jne    0x140039c6c
   140039c6c:	ins    BYTE PTR es:[rdi],dx
   140039c6d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039c71:	add    BYTE PTR [rax+rax*1+0x68],dh
   140039c75:	add    BYTE PTR [rdx+0x0],dh
   140039c78:	add    BYTE PTR gs:[rcx+0x0],ah
   140039c7c:	add    BYTE PTR fs:[rax],ah
   140039c7f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140039c83:	add    BYTE PTR [rbx+0x0],ah
   140039c86:	imul   eax,DWORD PTR [rax],0x20
   140039c89:	add    BYTE PTR [rbp+0x0],ah
   140039c8c:	jb     0x140039c8e
   140039c8e:	jb     0x140039c90
   140039c90:	outs   dx,DWORD PTR ds:[rsi]
   140039c91:	add    BYTE PTR [rdx+0x0],dh
   140039c94:	or     eax,0xa00
   140039c99:	add    BYTE PTR [rax],al
   140039c9b:	add    BYTE PTR [rax],al
   140039c9d:	add    BYTE PTR [rax],al
   140039c9f:	add    BYTE PTR [rdx+0x0],dl
   140039ca2:	add    BYTE PTR ss:[rax],dh
   140039ca5:	add    BYTE PTR [rcx],dh
   140039ca7:	add    BYTE PTR [rax],bh
   140039ca9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a6af
   140039caf:	add    BYTE PTR [rax],ah
   140039cb1:	add    BYTE PTR [rbp+0x0],dh
   140039cb4:	outs   dx,BYTE PTR ds:[rsi]
   140039cb5:	add    BYTE PTR [rbp+0x0],ah
   140039cb8:	js     0x140039cba
   140039cba:	jo     0x140039cbc
   140039cbc:	add    BYTE PTR gs:[rbx+0x0],ah
   140039cc0:	je     0x140039cc2
   140039cc2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140039cc7:	add    BYTE PTR [rax+0x0],ch
   140039cca:	add    BYTE PTR gs:[rcx+0x0],ah
   140039cce:	jo     0x140039cd0
   140039cd0:	and    BYTE PTR [rax],al
   140039cd2:	add    BYTE PTR gs:[rdx+0x0],dh
   140039cd6:	jb     0x140039cd8
   140039cd8:	outs   dx,DWORD PTR ds:[rsi]
   140039cd9:	add    BYTE PTR [rdx+0x0],dh
   140039cdc:	or     eax,0xa00
	...
   140039ced:	add    BYTE PTR [rax],al
   140039cef:	add    BYTE PTR [rdx+0x0],dl
   140039cf2:	add    BYTE PTR ss:[rax],dh
   140039cf5:	add    BYTE PTR [rcx],dh
   140039cf7:	add    BYTE PTR [rcx],bh
   140039cf9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a6ff
   140039cff:	add    BYTE PTR [rax],ah
   140039d01:	add    BYTE PTR [rbp+0x0],dh
   140039d04:	outs   dx,BYTE PTR ds:[rsi]
   140039d05:	add    BYTE PTR [rcx+0x0],ah
   140039d08:	(bad)  
   140039d09:	add    BYTE PTR [rax+rax*1+0x65],ch
   140039d0d:	add    BYTE PTR [rax],ah
   140039d0f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140039d13:	add    BYTE PTR [rax],ah
   140039d15:	add    BYTE PTR [rdi+0x0],ch
   140039d18:	jo     0x140039d1a
   140039d1a:	add    BYTE PTR gs:[rsi+0x0],ch
   140039d1e:	and    BYTE PTR [rax],al
   140039d20:	movsxd eax,DWORD PTR [rax]
   140039d22:	outs   dx,DWORD PTR ds:[rsi]
   140039d23:	add    BYTE PTR [rsi+0x0],ch
   140039d26:	jae    0x140039d28
   140039d28:	outs   dx,DWORD PTR ds:[rsi]
   140039d29:	add    BYTE PTR [rax+rax*1+0x65],ch
   140039d2d:	add    BYTE PTR [rax],ah
   140039d2f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140039d33:	add    BYTE PTR [rsi+0x0],dh
   140039d36:	imul   eax,DWORD PTR [rax],0x650063
   140039d3c:	or     eax,0xa00
	...
   140039d4d:	add    BYTE PTR [rax],al
   140039d4f:	add    BYTE PTR [rdx+0x0],dl
   140039d52:	add    BYTE PTR ss:[rax],dh
   140039d55:	add    BYTE PTR [rdx],dh
   140039d57:	add    BYTE PTR [rax+rax*1],dh
   140039d5a:	or     eax,0x2d000a00
   140039d5f:	add    BYTE PTR [rax],ah
   140039d61:	add    BYTE PTR [rsi+0x0],ch
   140039d64:	outs   dx,DWORD PTR ds:[rsi]
   140039d65:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039d69:	add    BYTE PTR [rbp+0x0],ah
   140039d6c:	outs   dx,BYTE PTR ds:[rsi]
   140039d6d:	add    BYTE PTR [rdi+0x0],ch
   140039d70:	jne    0x140039d72
   140039d72:	add    BYTE PTR [eax+0x0],ch
   140039d76:	and    BYTE PTR [rax],al
   140039d78:	jae    0x140039d7a
   140039d7a:	jo     0x140039d7c
   140039d7c:	(bad)  
   140039d7d:	add    BYTE PTR [rbx+0x0],ah
   140039d80:	add    BYTE PTR gs:[rax],ah
   140039d83:	add    BYTE PTR [rsi+0x0],ah
   140039d86:	outs   dx,DWORD PTR ds:[rsi]
   140039d87:	add    BYTE PTR [rdx+0x0],dh
   140039d8a:	and    BYTE PTR [rax],al
   140039d8c:	pop    rdi
   140039d8d:	add    BYTE PTR [rdi+0x0],ch
   140039d90:	outs   dx,BYTE PTR ds:[rsi]
   140039d91:	add    BYTE PTR [rbp+0x0],ah
   140039d94:	js     0x140039d96
   140039d96:	imul   eax,DWORD PTR [rax],0x2f0074
   140039d9c:	(bad)  
   140039d9d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140039da1:	add    BYTE PTR [rax+0x0],bh
   140039da4:	imul   eax,DWORD PTR [rax],0x200074
   140039daa:	je     0x140039dac
   140039dac:	(bad)  
   140039dad:	add    BYTE PTR [rdx+0x0],ah
   140039db0:	ins    BYTE PTR es:[rdi],dx
   140039db1:	add    BYTE PTR [rbp+0x0],ah
   140039db4:	or     eax,0xa00
   140039db9:	add    BYTE PTR [rax],al
   140039dbb:	add    BYTE PTR [rax],al
   140039dbd:	add    BYTE PTR [rax],al
   140039dbf:	add    BYTE PTR [rdx+0x0],dl
   140039dc2:	add    BYTE PTR ss:[rax],dh
   140039dc5:	add    BYTE PTR [rdx],dh
   140039dc7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a03aacd
   140039dcd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b003bdd3
   140039dd3:	add    BYTE PTR [rbp+0x0],dh
   140039dd6:	jb     0x140039dd8
   140039dd8:	add    BYTE PTR gs:[rax],ah
   140039ddb:	add    BYTE PTR [rsi+0x0],dh
   140039dde:	imul   eax,DWORD PTR [rax],0x740072
   140039de4:	jne    0x140039de6
   140039de6:	(bad)  
   140039de7:	add    BYTE PTR [rax+rax*1+0x20],ch
   140039deb:	add    BYTE PTR [rsi+0x0],ah
   140039dee:	jne    0x140039df0
   140039df0:	outs   dx,BYTE PTR ds:[rsi]
   140039df1:	add    BYTE PTR [rbx+0x0],ah
   140039df4:	je     0x140039df6
   140039df6:	imul   eax,DWORD PTR [rax],0x6e006f
   140039dfc:	and    BYTE PTR [rax],al
   140039dfe:	movsxd eax,DWORD PTR [rax]
   140039e00:	(bad)  
   140039e01:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140039e05:	add    BYTE PTR [rip+0xa00],cl        # 0x14003a80b
   140039e0b:	add    BYTE PTR [rax],al
   140039e0d:	add    BYTE PTR [rax],al
   140039e0f:	add    BYTE PTR [rdx+0x0],dl
   140039e12:	add    BYTE PTR ss:[rax],dh
   140039e15:	add    BYTE PTR [rdx],dh
   140039e17:	add    BYTE PTR [rsi],dh
   140039e19:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a81f
   140039e1f:	add    BYTE PTR [rax],ah
   140039e21:	add    BYTE PTR [rsi+0x0],ch
   140039e24:	outs   dx,DWORD PTR ds:[rsi]
   140039e25:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039e29:	add    BYTE PTR [rbp+0x0],ah
   140039e2c:	outs   dx,BYTE PTR ds:[rsi]
   140039e2d:	add    BYTE PTR [rdi+0x0],ch
   140039e30:	jne    0x140039e32
   140039e32:	add    BYTE PTR [eax+0x0],ch
   140039e36:	and    BYTE PTR [rax],al
   140039e38:	jae    0x140039e3a
   140039e3a:	jo     0x140039e3c
   140039e3c:	(bad)  
   140039e3d:	add    BYTE PTR [rbx+0x0],ah
   140039e40:	add    BYTE PTR gs:[rax],ah
   140039e43:	add    BYTE PTR [rsi+0x0],ah
   140039e46:	outs   dx,DWORD PTR ds:[rsi]
   140039e47:	add    BYTE PTR [rdx+0x0],dh
   140039e4a:	and    BYTE PTR [rax],al
   140039e4c:	jae    0x140039e4e
   140039e4e:	je     0x140039e50
   140039e50:	add    BYTE PTR fs:[rcx+0x0],ch
   140039e54:	outs   dx,DWORD PTR ds:[rsi]
   140039e55:	add    BYTE PTR [rax],ah
   140039e57:	add    BYTE PTR [rcx+0x0],ch
   140039e5a:	outs   dx,BYTE PTR ds:[rsi]
   140039e5b:	add    BYTE PTR [rcx+0x0],ch
   140039e5e:	je     0x140039e60
   140039e60:	imul   eax,DWORD PTR [rax],0x6c0061
   140039e66:	imul   eax,DWORD PTR [rax],0x61007a
   140039e6c:	je     0x140039e6e
   140039e6e:	imul   eax,DWORD PTR [rax],0x6e006f
   140039e74:	or     eax,0xa00
   140039e79:	add    BYTE PTR [rax],al
   140039e7b:	add    BYTE PTR [rax],al
   140039e7d:	add    BYTE PTR [rax],al
   140039e7f:	add    BYTE PTR [rdx+0x0],dl
   140039e82:	add    BYTE PTR ss:[rax],dh
   140039e85:	add    BYTE PTR [rdx],dh
   140039e87:	add    BYTE PTR [rdi],dh
   140039e89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a88f
   140039e8f:	add    BYTE PTR [rax],ah
   140039e91:	add    BYTE PTR [rsi+0x0],ch
   140039e94:	outs   dx,DWORD PTR ds:[rsi]
   140039e95:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039e99:	add    BYTE PTR [rbp+0x0],ah
   140039e9c:	outs   dx,BYTE PTR ds:[rsi]
   140039e9d:	add    BYTE PTR [rdi+0x0],ch
   140039ea0:	jne    0x140039ea2
   140039ea2:	add    BYTE PTR [eax+0x0],ch
   140039ea6:	and    BYTE PTR [rax],al
   140039ea8:	jae    0x140039eaa
   140039eaa:	jo     0x140039eac
   140039eac:	(bad)  
   140039ead:	add    BYTE PTR [rbx+0x0],ah
   140039eb0:	add    BYTE PTR gs:[rax],ah
   140039eb3:	add    BYTE PTR [rsi+0x0],ah
   140039eb6:	outs   dx,DWORD PTR ds:[rsi]
   140039eb7:	add    BYTE PTR [rdx+0x0],dh
   140039eba:	and    BYTE PTR [rax],al
   140039ebc:	ins    BYTE PTR es:[rdi],dx
   140039ebd:	add    BYTE PTR [rdi+0x0],ch
   140039ec0:	ja     0x140039ec2
   140039ec2:	imul   eax,DWORD PTR [rax],0x20006f
   140039ec8:	imul   eax,DWORD PTR [rax],0x69006e
   140039ece:	je     0x140039ed0
   140039ed0:	imul   eax,DWORD PTR [rax],0x6c0061
   140039ed6:	imul   eax,DWORD PTR [rax],0x61007a
   140039edc:	je     0x140039ede
   140039ede:	imul   eax,DWORD PTR [rax],0x6e006f
   140039ee4:	or     eax,0xa00
   140039ee9:	add    BYTE PTR [rax],al
   140039eeb:	add    BYTE PTR [rax],al
   140039eed:	add    BYTE PTR [rax],al
   140039eef:	add    BYTE PTR [rdx+0x0],dl
   140039ef2:	add    BYTE PTR ss:[rax],dh
   140039ef5:	add    BYTE PTR [rdx],dh
   140039ef7:	add    BYTE PTR [rax],bh
   140039ef9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a8ff
   140039eff:	add    BYTE PTR [rax],ah
   140039f01:	add    BYTE PTR [rbp+0x0],dh
   140039f04:	outs   dx,BYTE PTR ds:[rsi]
   140039f05:	add    BYTE PTR [rcx+0x0],ah
   140039f08:	(bad)  
   140039f09:	add    BYTE PTR [rax+rax*1+0x65],ch
   140039f0d:	add    BYTE PTR [rax],ah
   140039f0f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140039f13:	add    BYTE PTR [rax],ah
   140039f15:	add    BYTE PTR [rcx+0x0],ch
   140039f18:	outs   dx,BYTE PTR ds:[rsi]
   140039f19:	add    BYTE PTR [rcx+0x0],ch
   140039f1c:	je     0x140039f1e
   140039f1e:	imul   eax,DWORD PTR [rax],0x6c0061
   140039f24:	imul   eax,DWORD PTR [rax],0x65007a
   140039f2a:	and    BYTE PTR [rax],al
   140039f2c:	push   0x61006500
   140039f31:	add    BYTE PTR [rax+0x0],dh
   140039f34:	or     eax,0xa00
   140039f39:	add    BYTE PTR [rax],al
   140039f3b:	add    BYTE PTR [rax],al
   140039f3d:	add    BYTE PTR [rax],al
   140039f3f:	add    BYTE PTR [rdx+0x0],dl
   140039f42:	add    BYTE PTR ss:[rax],dh
   140039f45:	add    BYTE PTR [rbx],dh
   140039f47:	add    BYTE PTR [rax],dh
   140039f49:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a94f
   140039f4f:	add    BYTE PTR [rax],ah
   140039f51:	add    BYTE PTR [rbx+0x0],al
   140039f54:	push   rdx
   140039f55:	add    BYTE PTR [rax+rax*1+0x20],dl
   140039f59:	add    BYTE PTR [rsi+0x0],ch
   140039f5c:	outs   dx,DWORD PTR ds:[rsi]
   140039f5d:	add    BYTE PTR [rax+rax*1+0x20],dh
   140039f61:	add    BYTE PTR [rcx+0x0],ch
   140039f64:	outs   dx,BYTE PTR ds:[rsi]
   140039f65:	add    BYTE PTR [rcx+0x0],ch
   140039f68:	je     0x140039f6a
   140039f6a:	imul   eax,DWORD PTR [rax],0x6c0061
   140039f70:	imul   eax,DWORD PTR [rax],0x65007a
   140039f76:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14003a97d
   140039f7d:	add    BYTE PTR [rax],al
   140039f7f:	add    BYTE PTR [rdx+0x0],dl
   140039f82:	add    BYTE PTR ss:[rax],dh
   140039f85:	add    BYTE PTR [rbx],dh
   140039f87:	add    BYTE PTR [rcx],dh
   140039f89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03a98f
   140039f8f:	add    BYTE PTR [rax],ah
   140039f91:	add    BYTE PTR [rcx+0x0],al
   140039f94:	je     0x140039f96
   140039f96:	je     0x140039f98
   140039f98:	add    BYTE PTR gs:[rbp+0x0],ch
   140039f9c:	jo     0x140039f9e
   140039f9e:	je     0x140039fa0
   140039fa0:	and    BYTE PTR [rax],al
   140039fa2:	je     0x140039fa4
   140039fa4:	outs   dx,DWORD PTR ds:[rsi]
   140039fa5:	add    BYTE PTR [rax],ah
   140039fa7:	add    BYTE PTR [rcx+0x0],ch
   140039faa:	outs   dx,BYTE PTR ds:[rsi]
   140039fab:	add    BYTE PTR [rcx+0x0],ch
   140039fae:	je     0x140039fb0
   140039fb0:	imul   eax,DWORD PTR [rax],0x6c0061
   140039fb6:	imul   eax,DWORD PTR [rax],0x65007a
   140039fbc:	and    BYTE PTR [rax],al
   140039fbe:	je     0x140039fc0
   140039fc0:	push   0x20006500
   140039fc5:	add    BYTE PTR [rbx+0x0],al
   140039fc8:	push   rdx
   140039fc9:	add    BYTE PTR [rax+rax*1+0x20],dl
   140039fcd:	add    BYTE PTR [rbp+0x0],ch
   140039fd0:	outs   dx,DWORD PTR ds:[rsi]
   140039fd1:	add    BYTE PTR [rdx+0x0],dh
   140039fd4:	add    BYTE PTR gs:[rax],ah
   140039fd7:	add    BYTE PTR [rax+rax*1+0x68],dh
   140039fdb:	add    BYTE PTR [rcx+0x0],ah
   140039fde:	outs   dx,BYTE PTR ds:[rsi]
   140039fdf:	add    BYTE PTR [rax],ah
   140039fe1:	add    BYTE PTR [rdi+0x0],ch
   140039fe4:	outs   dx,BYTE PTR ds:[rsi]
   140039fe5:	add    BYTE PTR [rbx+0x0],ah
   140039fe8:	add    BYTE PTR gs:[rsi],ch
   140039feb:	add    BYTE PTR [rdx],cl
   140039fed:	add    BYTE PTR [rax+rax*1+0x68],dl
   140039ff1:	add    BYTE PTR [rcx+0x0],ch
   140039ff4:	jae    0x140039ff6
   140039ff6:	and    BYTE PTR [rax],al
   140039ff8:	imul   eax,DWORD PTR [rax],0x64006e
   140039ffe:	imul   eax,DWORD PTR [rax],0x610063
   14003a004:	je     0x14003a006
   14003a006:	add    BYTE PTR gs:[rbx+0x0],dh
   14003a00a:	and    BYTE PTR [rax],al
   14003a00c:	(bad)  
   14003a00d:	add    BYTE PTR [rax],ah
   14003a00f:	add    BYTE PTR [rdx+0x0],ah
   14003a012:	jne    0x14003a014
   14003a014:	add    BYTE PTR [eax],ah
   14003a017:	add    BYTE PTR [rcx+0x0],ch
   14003a01a:	outs   dx,BYTE PTR ds:[rsi]
   14003a01b:	add    BYTE PTR [rax],ah
   14003a01d:	add    BYTE PTR [rcx+0x0],bh
   14003a020:	outs   dx,DWORD PTR ds:[rsi]
   14003a021:	add    BYTE PTR [rbp+0x0],dh
   14003a024:	jb     0x14003a026
   14003a026:	and    BYTE PTR [rax],al
   14003a028:	(bad)  
   14003a029:	add    BYTE PTR [rax+0x0],dh
   14003a02c:	jo     0x14003a02e
   14003a02e:	ins    BYTE PTR es:[rdi],dx
   14003a02f:	add    BYTE PTR [rcx+0x0],ch
   14003a032:	movsxd eax,DWORD PTR [rax]
   14003a034:	(bad)  
   14003a035:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a039:	add    BYTE PTR [rdi+0x0],ch
   14003a03c:	outs   dx,BYTE PTR ds:[rsi]
   14003a03d:	add    BYTE PTR [rsi],ch
   14003a03f:	add    BYTE PTR [rip+0xa00],cl        # 0x14003aa45
	...
   14003a04d:	add    BYTE PTR [rax],al
   14003a04f:	add    BYTE PTR [rdx+0x0],dl
   14003a052:	add    BYTE PTR ss:[rax],dh
   14003a055:	add    BYTE PTR [rbx],dh
   14003a057:	add    BYTE PTR [rdx],dh
   14003a059:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03aa5f
   14003a05f:	add    BYTE PTR [rax],ah
   14003a061:	add    BYTE PTR [rsi+0x0],ch
   14003a064:	outs   dx,DWORD PTR ds:[rsi]
   14003a065:	add    BYTE PTR [rax+rax*1+0x20],dh
   14003a069:	add    BYTE PTR [rbp+0x0],ah
   14003a06c:	outs   dx,BYTE PTR ds:[rsi]
   14003a06d:	add    BYTE PTR [rdi+0x0],ch
   14003a070:	jne    0x14003a072
   14003a072:	add    BYTE PTR [eax+0x0],ch
   14003a076:	and    BYTE PTR [rax],al
   14003a078:	jae    0x14003a07a
   14003a07a:	jo     0x14003a07c
   14003a07c:	(bad)  
   14003a07d:	add    BYTE PTR [rbx+0x0],ah
   14003a080:	add    BYTE PTR gs:[rax],ah
   14003a083:	add    BYTE PTR [rsi+0x0],ah
   14003a086:	outs   dx,DWORD PTR ds:[rsi]
   14003a087:	add    BYTE PTR [rdx+0x0],dh
   14003a08a:	and    BYTE PTR [rax],al
   14003a08c:	ins    BYTE PTR es:[rdi],dx
   14003a08d:	add    BYTE PTR [rdi+0x0],ch
   14003a090:	movsxd eax,DWORD PTR [rax]
   14003a092:	(bad)  
   14003a093:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003a097:	add    BYTE PTR [rax],ah
   14003a099:	add    BYTE PTR [rcx+0x0],ch
   14003a09c:	outs   dx,BYTE PTR ds:[rsi]
   14003a09d:	add    BYTE PTR [rsi+0x0],ah
   14003a0a0:	outs   dx,DWORD PTR ds:[rsi]
   14003a0a1:	add    BYTE PTR [rdx+0x0],dh
   14003a0a4:	ins    DWORD PTR es:[rdi],dx
   14003a0a5:	add    BYTE PTR [rcx+0x0],ah
   14003a0a8:	je     0x14003a0aa
   14003a0aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14003a0b0:	or     eax,0xa00
	...
   14003a0bd:	add    BYTE PTR [rax],al
   14003a0bf:	add    BYTE PTR [rdx+0x0],dl
   14003a0c2:	add    BYTE PTR ss:[rax],dh
   14003a0c5:	add    BYTE PTR [rbx],dh
   14003a0c7:	add    BYTE PTR [rbx],dh
   14003a0c9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d03aacf
   14003a0cf:	add    BYTE PTR [rax],ah
   14003a0d1:	add    BYTE PTR [rcx+0x0],al
   14003a0d4:	je     0x14003a0d6
   14003a0d6:	je     0x14003a0d8
   14003a0d8:	add    BYTE PTR gs:[rbp+0x0],ch
   14003a0dc:	jo     0x14003a0de
   14003a0de:	je     0x14003a0e0
   14003a0e0:	and    BYTE PTR [rax],al
   14003a0e2:	je     0x14003a0e4
   14003a0e4:	outs   dx,DWORD PTR ds:[rsi]
   14003a0e5:	add    BYTE PTR [rax],ah
   14003a0e7:	add    BYTE PTR [rbp+0x0],dh
   14003a0ea:	jae    0x14003a0ec
   14003a0ec:	add    BYTE PTR gs:[rax],ah
   14003a0ef:	add    BYTE PTR [rbp+0x0],cl
   14003a0f2:	push   rbx
   14003a0f3:	add    BYTE PTR [rcx+0x0],cl
   14003a0f6:	rex.WR add BYTE PTR [rax],r12b
   14003a0f9:	add    BYTE PTR [rbx+0x0],ah
   14003a0fc:	outs   dx,DWORD PTR ds:[rsi]
   14003a0fd:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003a101:	add    BYTE PTR [rax],ah
   14003a103:	add    BYTE PTR [rsi+0x0],ah
   14003a106:	jb     0x14003a108
   14003a108:	outs   dx,DWORD PTR ds:[rsi]
   14003a109:	add    BYTE PTR [rbp+0x0],ch
   14003a10c:	and    BYTE PTR [rax],al
   14003a10e:	je     0x14003a110
   14003a110:	push   0x73006900
   14003a115:	add    BYTE PTR [rax],ah
   14003a117:	add    BYTE PTR [rcx+0x0],ah
   14003a11a:	jae    0x14003a11c
   14003a11c:	jae    0x14003a11e
   14003a11e:	add    BYTE PTR gs:[rbp+0x0],ch
   14003a122:	(bad)  
   14003a123:	add    BYTE PTR [rax+rax*1+0x79],ch
   14003a127:	add    BYTE PTR [rax],ah
   14003a129:	add    BYTE PTR [rax+rax*1+0x75],ah
   14003a12d:	add    BYTE PTR [rdx+0x0],dh
   14003a130:	imul   eax,DWORD PTR [rax],0x67006e
   14003a136:	and    BYTE PTR [rax],al
   14003a138:	outs   dx,BYTE PTR ds:[rsi]
   14003a139:	add    BYTE PTR [rcx+0x0],ah
   14003a13c:	je     0x14003a13e
   14003a13e:	imul   eax,DWORD PTR [rax],0x650076
   14003a144:	and    BYTE PTR [rax],al
   14003a146:	movsxd eax,DWORD PTR [rax]
   14003a148:	outs   dx,DWORD PTR ds:[rsi]
   14003a149:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003a14d:	add    BYTE PTR [rax],ah
   14003a14f:	add    BYTE PTR [rcx+0x0],ch
   14003a152:	outs   dx,BYTE PTR ds:[rsi]
   14003a153:	add    BYTE PTR [rcx+0x0],ch
   14003a156:	je     0x14003a158
   14003a158:	imul   eax,DWORD PTR [rax],0x6c0061
   14003a15e:	imul   eax,DWORD PTR [rax],0x61007a
   14003a164:	je     0x14003a166
   14003a166:	imul   eax,DWORD PTR [rax],0x6e006f
   14003a16c:	or     al,BYTE PTR [rax]
   14003a16e:	push   rsp
   14003a16f:	add    BYTE PTR [rax+0x0],ch
   14003a172:	imul   eax,DWORD PTR [rax],0x200073
   14003a178:	imul   eax,DWORD PTR [rax],0x64006e
   14003a17e:	imul   eax,DWORD PTR [rax],0x610063
   14003a184:	je     0x14003a186
   14003a186:	add    BYTE PTR gs:[rbx+0x0],dh
   14003a18a:	and    BYTE PTR [rax],al
   14003a18c:	(bad)  
   14003a18d:	add    BYTE PTR [rax],ah
   14003a18f:	add    BYTE PTR [rdx+0x0],ah
   14003a192:	jne    0x14003a194
   14003a194:	add    BYTE PTR [eax],ah
   14003a197:	add    BYTE PTR [rcx+0x0],ch
   14003a19a:	outs   dx,BYTE PTR ds:[rsi]
   14003a19b:	add    BYTE PTR [rax],ah
   14003a19d:	add    BYTE PTR [rcx+0x0],bh
   14003a1a0:	outs   dx,DWORD PTR ds:[rsi]
   14003a1a1:	add    BYTE PTR [rbp+0x0],dh
   14003a1a4:	jb     0x14003a1a6
   14003a1a6:	and    BYTE PTR [rax],al
   14003a1a8:	(bad)  
   14003a1a9:	add    BYTE PTR [rax+0x0],dh
   14003a1ac:	jo     0x14003a1ae
   14003a1ae:	ins    BYTE PTR es:[rdi],dx
   14003a1af:	add    BYTE PTR [rcx+0x0],ch
   14003a1b2:	movsxd eax,DWORD PTR [rax]
   14003a1b4:	(bad)  
   14003a1b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a1b9:	add    BYTE PTR [rdi+0x0],ch
   14003a1bc:	outs   dx,BYTE PTR ds:[rsi]
   14003a1bd:	add    BYTE PTR [rsi],ch
   14003a1bf:	add    BYTE PTR [rax],ah
   14003a1c1:	add    BYTE PTR [rcx+0x0],cl
   14003a1c4:	je     0x14003a1c6
   14003a1c6:	and    BYTE PTR [rax],al
   14003a1c8:	imul   eax,DWORD PTR [rax],0x200073
   14003a1ce:	ins    DWORD PTR es:[rdi],dx
   14003a1cf:	add    BYTE PTR [rdi+0x0],ch
   14003a1d2:	jae    0x14003a1d4
   14003a1d4:	je     0x14003a1d6
   14003a1d6:	and    BYTE PTR [rax],al
   14003a1d8:	ins    BYTE PTR es:[rdi],dx
   14003a1d9:	add    BYTE PTR [rcx+0x0],ch
   14003a1dc:	imul   eax,DWORD PTR [rax],0x65
   14003a1df:	add    BYTE PTR [rax+rax*1+0x79],ch
   14003a1e3:	add    BYTE PTR [rax],ah
   14003a1e5:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003a1e9:	add    BYTE PTR [rbp+0x0],ah
   14003a1ec:	and    BYTE PTR [rax],al
   14003a1ee:	jb     0x14003a1f0
   14003a1f0:	add    BYTE PTR gs:[rbx+0x0],dh
   14003a1f4:	jne    0x14003a1f6
   14003a1f6:	ins    BYTE PTR es:[rdi],dx
   14003a1f7:	add    BYTE PTR [rax+rax*1+0x20],dh
   14003a1fb:	add    BYTE PTR [rdi+0x0],ch
   14003a1fe:	data16 add BYTE PTR [rax],ah
   14003a201:	add    BYTE PTR [rbx+0x0],ah
   14003a204:	(bad)  
   14003a205:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003a209:	add    BYTE PTR [rcx+0x0],ch
   14003a20c:	outs   dx,BYTE PTR ds:[rsi]
   14003a20d:	add    BYTE PTR [rdi+0x0],ah
   14003a210:	and    BYTE PTR [rax],al
   14003a212:	(bad)  
   14003a213:	add    BYTE PTR [rsi+0x0],ch
   14003a216:	and    BYTE PTR [rax],al
   14003a218:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14003a21c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14003a221:	add    BYTE PTR [rbx+0x0],ah
   14003a224:	outs   dx,DWORD PTR ds:[rsi]
   14003a225:	add    BYTE PTR [rbp+0x0],ch
   14003a228:	jo     0x14003a22a
   14003a22a:	imul   eax,DWORD PTR [rax],0x65006c
   14003a230:	add    BYTE PTR fs:[rax],ah
   14003a233:	add    BYTE PTR [rax],ch
   14003a235:	add    BYTE PTR [rdi],ch
   14003a237:	add    BYTE PTR [rbx+0x0],ah
   14003a23a:	ins    BYTE PTR es:[rdi],dx
   14003a23b:	add    BYTE PTR [rdx+0x0],dh
   14003a23e:	sub    DWORD PTR [rax],eax
   14003a240:	and    BYTE PTR [rax],al
   14003a242:	data16 add BYTE PTR [rbp+0x0],dh
   14003a246:	outs   dx,BYTE PTR ds:[rsi]
   14003a247:	add    BYTE PTR [rbx+0x0],ah
   14003a24a:	je     0x14003a24c
   14003a24c:	imul   eax,DWORD PTR [rax],0x6e006f
   14003a252:	and    BYTE PTR [rax],al
   14003a254:	data16 add BYTE PTR [rdx+0x0],dh
   14003a258:	outs   dx,DWORD PTR ds:[rsi]
   14003a259:	add    BYTE PTR [rbp+0x0],ch
   14003a25c:	and    BYTE PTR [rax],al
   14003a25e:	(bad)  
   14003a25f:	add    BYTE PTR [rax],ah
   14003a261:	add    BYTE PTR [rsi+0x0],ch
   14003a264:	(bad)  
   14003a265:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a269:	add    BYTE PTR [rsi+0x0],dh
   14003a26c:	add    BYTE PTR gs:[rax],ah
   14003a26f:	add    BYTE PTR [rbx+0x0],ah
   14003a272:	outs   dx,DWORD PTR ds:[rsi]
   14003a273:	add    BYTE PTR [rsi+0x0],ch
   14003a276:	jae    0x14003a278
   14003a278:	je     0x14003a27a
   14003a27a:	jb     0x14003a27c
   14003a27c:	jne    0x14003a27e
   14003a27e:	movsxd eax,DWORD PTR [rax]
   14003a280:	je     0x14003a282
   14003a282:	outs   dx,DWORD PTR ds:[rsi]
   14003a283:	add    BYTE PTR [rdx+0x0],dh
   14003a286:	and    BYTE PTR [rax],al
   14003a288:	outs   dx,DWORD PTR ds:[rsi]
   14003a289:	add    BYTE PTR [rdx+0x0],dh
   14003a28c:	and    BYTE PTR [rax],al
   14003a28e:	data16 add BYTE PTR [rdx+0x0],dh
   14003a292:	outs   dx,DWORD PTR ds:[rsi]
   14003a293:	add    BYTE PTR [rbp+0x0],ch
   14003a296:	and    BYTE PTR [rax],al
   14003a298:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14003a29d:	add    BYTE PTR [rbp+0x0],cl
   14003a2a0:	(bad)  
   14003a2a1:	add    BYTE PTR [rcx+0x0],ch
   14003a2a4:	outs   dx,BYTE PTR ds:[rsi]
   14003a2a5:	add    BYTE PTR [rsi],ch
   14003a2a7:	add    BYTE PTR [rip+0xa00],cl        # 0x14003acad
   14003a2ad:	add    BYTE PTR [rax],al
   14003a2af:	add    BYTE PTR [rdx+0x0],dl
   14003a2b2:	add    BYTE PTR ss:[rax],dh
   14003a2b5:	add    BYTE PTR [rbx],dh
   14003a2b7:	add    BYTE PTR [rax+rax*1],dh
   14003a2ba:	or     eax,0x2d000a00
   14003a2bf:	add    BYTE PTR [rax],ah
   14003a2c1:	add    BYTE PTR [rcx+0x0],ch
   14003a2c4:	outs   dx,BYTE PTR ds:[rsi]
   14003a2c5:	add    BYTE PTR [rbx+0x0],ah
   14003a2c8:	outs   dx,DWORD PTR ds:[rsi]
   14003a2c9:	add    BYTE PTR [rsi+0x0],ch
   14003a2cc:	jae    0x14003a2ce
   14003a2ce:	imul   eax,DWORD PTR [rax],0x740073
   14003a2d4:	add    BYTE PTR gs:[rsi+0x0],ch
   14003a2d8:	je     0x14003a2da
   14003a2da:	and    BYTE PTR [rax],al
   14003a2dc:	outs   dx,DWORD PTR ds:[rsi]
   14003a2dd:	add    BYTE PTR [rsi+0x0],ch
   14003a2e0:	add    BYTE PTR gs:[rax+0x0],bh
   14003a2e4:	imul   eax,DWORD PTR [rax],0x200074
   14003a2ea:	(bad)  
   14003a2eb:	add    BYTE PTR [rbp+0x0],ah
   14003a2ee:	add    BYTE PTR [ecx+0x0],ch
   14003a2f2:	outs   dx,BYTE PTR ds:[rsi]
   14003a2f3:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae0407f9
   14003a2f9:	add    BYTE PTR [rax+rax*1+0x20],ah
   14003a2fd:	add    BYTE PTR [rsi+0x0],dh
   14003a300:	(bad)  
   14003a301:	add    BYTE PTR [rdx+0x0],dh
   14003a304:	imul   eax,DWORD PTR [rax],0x620061
   14003a30a:	ins    BYTE PTR es:[rdi],dx
   14003a30b:	add    BYTE PTR [rbp+0x0],ah
   14003a30e:	jae    0x14003a310
   14003a310:	or     eax,0xa00
   14003a315:	add    BYTE PTR [rax],al
   14003a317:	add    BYTE PTR [rax+rax*1+0x4f],al
   14003a31b:	add    BYTE PTR [rbp+0x0],cl
   14003a31e:	add    BYTE PTR [r9+0x0],cl
   14003a322:	rex.WRX add BYTE PTR [rax],r12b
   14003a325:	add    BYTE PTR [rbp+0x0],ah
   14003a328:	jb     0x14003a32a
   14003a32a:	jb     0x14003a32c
   14003a32c:	outs   dx,DWORD PTR ds:[rsi]
   14003a32d:	add    BYTE PTR [rdx+0x0],dh
   14003a330:	or     eax,0xa00
   14003a335:	add    BYTE PTR [rax],al
   14003a337:	add    BYTE PTR [rbx+0x0],dl
   14003a33a:	rex.WB add BYTE PTR [r14+0x0],cl
   14003a33e:	rex.RXB add BYTE PTR [r8],r12b
   14003a341:	add    BYTE PTR [rbp+0x0],ah
   14003a344:	jb     0x14003a346
   14003a346:	jb     0x14003a348
   14003a348:	outs   dx,DWORD PTR ds:[rsi]
   14003a349:	add    BYTE PTR [rdx+0x0],dh
   14003a34c:	or     eax,0xa00
   14003a351:	add    BYTE PTR [rax],al
   14003a353:	add    BYTE PTR [rax],al
   14003a355:	add    BYTE PTR [rax],al
   14003a357:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14003a35b:	add    BYTE PTR [rdi+0x0],cl
   14003a35e:	push   rbx
   14003a35f:	add    BYTE PTR [rbx+0x0],dl
   14003a362:	and    BYTE PTR [rax],al
   14003a364:	add    BYTE PTR gs:[rdx+0x0],dh
   14003a368:	jb     0x14003a36a
   14003a36a:	outs   dx,DWORD PTR ds:[rsi]
   14003a36b:	add    BYTE PTR [rdx+0x0],dh
   14003a36e:	or     eax,0xa00
   14003a373:	add    BYTE PTR [rip+0xa00],cl        # 0x14003ad79
   14003a379:	add    BYTE PTR [rax],al
   14003a37b:	add    BYTE PTR [rax],al
   14003a37d:	add    BYTE PTR [rax],al
   14003a37f:	add    BYTE PTR [rdx+0x0],dh
   14003a382:	jne    0x14003a384
   14003a384:	outs   dx,BYTE PTR ds:[rsi]
   14003a385:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a389:	add    BYTE PTR [rbp+0x0],ch
   14003a38c:	add    BYTE PTR gs:[rax],ah
   14003a38f:	add    BYTE PTR [rbp+0x0],ah
   14003a392:	jb     0x14003a394
   14003a394:	jb     0x14003a396
   14003a396:	outs   dx,DWORD PTR ds:[rsi]
   14003a397:	add    BYTE PTR [rdx+0x0],dh
   14003a39a:	and    BYTE PTR [rax],al
   14003a39c:	add    BYTE PTR [rax],al
   14003a39e:	add    BYTE PTR [rax],al
   14003a3a0:	push   rdx
   14003a3a1:	add    BYTE PTR [rbp+0x0],dh
   14003a3a4:	outs   dx,BYTE PTR ds:[rsi]
   14003a3a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a3a9:	add    BYTE PTR [rbp+0x0],ch
   14003a3ac:	add    BYTE PTR gs:[rax],ah
   14003a3af:	add    BYTE PTR [rbp+0x0],al
   14003a3b2:	jb     0x14003a3b4
   14003a3b4:	jb     0x14003a3b6
   14003a3b6:	outs   dx,DWORD PTR ds:[rsi]
   14003a3b7:	add    BYTE PTR [rdx+0x0],dh
   14003a3ba:	and    DWORD PTR [rax],eax
   14003a3bc:	or     al,BYTE PTR [rax]
   14003a3be:	or     al,BYTE PTR [rax]
   14003a3c0:	push   rax
   14003a3c1:	add    BYTE PTR [rdx+0x0],dh
   14003a3c4:	outs   dx,DWORD PTR ds:[rsi]
   14003a3c5:	add    BYTE PTR [rdi+0x0],ah
   14003a3c8:	jb     0x14003a3ca
   14003a3ca:	(bad)  
   14003a3cb:	add    BYTE PTR [rbp+0x0],ch
   14003a3ce:	cmp    al,BYTE PTR [rax]
   14003a3d0:	and    BYTE PTR [rax],al
   14003a3d2:	add    BYTE PTR [rax],al
   14003a3d4:	add    BYTE PTR [rax],al
   14003a3d6:	add    BYTE PTR [rax],al
   14003a3d8:	cmp    al,0x0
   14003a3da:	jo     0x14003a3dc
   14003a3dc:	jb     0x14003a3de
   14003a3de:	outs   dx,DWORD PTR ds:[rsi]
   14003a3df:	add    BYTE PTR [rdi+0x0],ah
   14003a3e2:	jb     0x14003a3e4
   14003a3e4:	(bad)  
   14003a3e5:	add    BYTE PTR [rbp+0x0],ch
   14003a3e8:	and    BYTE PTR [rax],al
   14003a3ea:	outs   dx,BYTE PTR ds:[rsi]
   14003a3eb:	add    BYTE PTR [rcx+0x0],ah
   14003a3ee:	ins    DWORD PTR es:[rdi],dx
   14003a3ef:	add    BYTE PTR [rbp+0x0],ah
   14003a3f2:	and    BYTE PTR [rax],al
   14003a3f4:	jne    0x14003a3f6
   14003a3f6:	outs   dx,BYTE PTR ds:[rsi]
   14003a3f7:	add    BYTE PTR [rbx+0x0],ch
   14003a3fa:	outs   dx,BYTE PTR ds:[rsi]
   14003a3fb:	add    BYTE PTR [rdi+0x0],ch
   14003a3fe:	ja     0x14003a400
   14003a400:	outs   dx,BYTE PTR ds:[rsi]
   14003a401:	add    BYTE PTR [rsi],bh
   14003a403:	add    BYTE PTR [rax],al
   14003a405:	add    BYTE PTR [rax],al
   14003a407:	add    BYTE PTR [rsi],ch
   14003a409:	add    BYTE PTR [rsi],ch
   14003a40b:	add    BYTE PTR [rsi],ch
   14003a40d:	add    BYTE PTR [rax],al
   14003a40f:	add    BYTE PTR [rdx],cl
   14003a411:	add    BYTE PTR [rdx],cl
	...
   14003a41f:	add    BYTE PTR [rbp+0x0],cl
   14003a422:	imul   eax,DWORD PTR [rax],0x720063
   14003a428:	outs   dx,DWORD PTR ds:[rsi]
   14003a429:	add    BYTE PTR [rbx+0x0],dh
   14003a42c:	outs   dx,DWORD PTR ds:[rsi]
   14003a42d:	add    BYTE PTR [rsi+0x0],ah
   14003a430:	je     0x14003a432
   14003a432:	and    BYTE PTR [rax],al
   14003a434:	push   rsi
   14003a435:	add    BYTE PTR [rcx+0x0],ch
   14003a438:	jae    0x14003a43a
   14003a43a:	jne    0x14003a43c
   14003a43c:	(bad)  
   14003a43d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14003a441:	add    BYTE PTR [rbx+0x0],al
   14003a444:	sub    eax,DWORD PTR [rax]
   14003a446:	sub    eax,DWORD PTR [rax]
   14003a448:	and    BYTE PTR [rax],al
   14003a44a:	push   rdx
   14003a44b:	add    BYTE PTR [rbp+0x0],dh
   14003a44e:	outs   dx,BYTE PTR ds:[rsi]
   14003a44f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003a453:	add    BYTE PTR [rbp+0x0],ch
   14003a456:	add    BYTE PTR gs:[rax],ah
   14003a459:	add    BYTE PTR [rax+rax*1+0x69],cl
   14003a45d:	add    BYTE PTR [rdx+0x0],ah
   14003a460:	jb     0x14003a462
   14003a462:	(bad)  
   14003a463:	add    BYTE PTR [rdx+0x0],dh
   14003a466:	jns    0x14003a468
	...
   14003a470:	rex add eax,DWORD PTR [rip+0x140]        # 0x14003a5b7
   14003a477:	add    al,ah
   14003a479:	add    eax,DWORD PTR [rip+0x140]        # 0x14003a5bf
   14003a47f:	add    BYTE PTR [rax],ch
   14003a481:	outs   dx,BYTE PTR ds:[rsi]
   14003a482:	jne    0x14003a4f0
   14003a484:	ins    BYTE PTR es:[rdi],dx
   14003a485:	sub    DWORD PTR [rax],eax
   14003a487:	add    BYTE PTR [rax],ch
   14003a489:	add    BYTE PTR [rsi+0x0],ch
   14003a48c:	jne    0x14003a48e
   14003a48e:	ins    BYTE PTR es:[rdi],dx
   14003a48f:	add    BYTE PTR [rax+rax*1+0x29],ch
	...
   14003a49f:	add    BYTE PTR [rsi],al
   14003a4a1:	add    BYTE PTR [rax],al
   14003a4a3:	(bad)  
   14003a4a4:	add    BYTE PTR [rcx],al
   14003a4a6:	add    BYTE PTR [rax],al
   14003a4a8:	adc    BYTE PTR [rax],al
   14003a4aa:	add    eax,DWORD PTR [rsi]
   14003a4ac:	add    BYTE PTR [rsi],al
   14003a4ae:	add    dl,BYTE PTR [rax]
   14003a4b0:	add    al,0x45
   14003a4b2:	rex.RB
   14003a4b3:	rex.RB add eax,0x5050505
   14003a4b9:	xor    eax,0x500030
   14003a4be:	add    BYTE PTR [rax],al
   14003a4c0:	add    BYTE PTR [rax],ch
   14003a4c2:	and    BYTE PTR [rax],bh
   14003a4c4:	push   rax
   14003a4c5:	pop    rax
   14003a4c6:	(bad)  
   14003a4c7:	or     BYTE PTR [rax],al
   14003a4c9:	(bad)  
   14003a4ca:	xor    BYTE PTR [rax],dh
   14003a4cc:	push   rdi
   14003a4cd:	push   rax
   14003a4ce:	(bad)  
   14003a4cf:	add    BYTE PTR [rax],al
   14003a4d1:	and    BYTE PTR [rax],ah
   14003a4d3:	or     BYTE PTR [rax],al
   14003a4d5:	add    BYTE PTR [rax],al
   14003a4d7:	add    BYTE PTR [rax],cl
   14003a4d9:	(bad)  
   14003a4da:	push   0x60606060
   14003a4df:	add    BYTE PTR [rax],al
   14003a4e1:	js     0x14003a553
   14003a4e3:	js     0x14003a55d
   14003a4e5:	js     0x14003a55f
   14003a4e7:	or     BYTE PTR [rdi],al
   14003a4e9:	or     BYTE PTR [rax],al
   14003a4eb:	add    BYTE PTR [rdi],al
   14003a4ed:	add    BYTE PTR [rax],cl
   14003a4ef:	or     BYTE PTR [rax],cl
   14003a4f1:	add    BYTE PTR [rax],al
   14003a4f3:	or     BYTE PTR [rax],al
   14003a4f5:	or     BYTE PTR [rax],al
   14003a4f7:	(bad)  
   14003a4f8:	or     BYTE PTR [rax],al
   14003a4fa:	add    BYTE PTR [rax],al
   14003a4fc:	add    BYTE PTR [rax],al
   14003a4fe:	add    BYTE PTR [rax],al
   14003a500:	(bad)  
   14003a501:	sbb    al,BYTE PTR [rax+rax*2]
   14003a504:	add    DWORD PTR [rax],eax
   14003a506:	add    BYTE PTR [rax],al
   14003a508:	fsub   DWORD PTR [rdx+rax*1+0x40]
   14003a50c:	add    DWORD PTR [rax],eax
   14003a50e:	add    BYTE PTR [rax],al
   14003a510:	cwde   
   14003a511:	add    al,BYTE PTR gs:[rax+0x1]
   14003a515:	add    BYTE PTR [rax],al
   14003a517:	add    BYTE PTR [rbp+0x6e],dl
   14003a51a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003a51e:	outs   dx,BYTE PTR ds:[rsi]
   14003a51f:	and    BYTE PTR [rbp+0x78],ah
   14003a522:	movsxd esp,DWORD PTR [rbp+0x70]
   14003a525:	je     0x14003a590
   14003a527:	outs   dx,DWORD PTR ds:[rsi]
   14003a528:	outs   dx,BYTE PTR ds:[rsi]
   14003a529:	add    BYTE PTR [rax],al
   14003a52b:	add    BYTE PTR [rax],al
   14003a52d:	add    BYTE PTR [rax],al
   14003a52f:	add    BYTE PTR [rbx+0x73],ah
   14003a532:	ins    DWORD PTR es:[rdi],dx
   14003a533:	loopne 0x14003a536
	...
   14003a545:	add    BYTE PTR [rax],al
   14003a547:	add    BYTE PTR [rax+rax*1],al
   14003a54a:	add    BYTE PTR [rax],al
   14003a54c:	add    BYTE PTR [rax],al
   14003a54e:	add    BYTE PTR [rax],al
   14003a550:	and    BYTE PTR [rip+0x1993],al        # 0x14003bee9
	...
   14003a56e:	add    BYTE PTR [rax],al
   14003a570:	rex.RXB
   14003a571:	gs je  0x14003a5b7
   14003a574:	jne    0x14003a5e8
   14003a576:	jb     0x14003a5dd
   14003a578:	outs   dx,BYTE PTR ds:[rsi]
   14003a579:	je     0x14003a5cb
   14003a57b:	(bad)  
   14003a57c:	movsxd ebp,DWORD PTR [rbx+0x61]
   14003a57f:	addr32 gs rex.WB
   14003a582:	add    BYTE PTR fs:[rax],al
   14003a585:	add    BYTE PTR [rax],al
   14003a587:	add    BYTE PTR [rbx+0x0],ch
   14003a58a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003a58e:	outs   dx,BYTE PTR ds:[rsi]
   14003a58f:	add    BYTE PTR [rbp+0x0],ah
   14003a592:	ins    BYTE PTR es:[rdi],dx
   14003a593:	add    BYTE PTR [rbx],dh
   14003a595:	add    BYTE PTR [rdx],dh
   14003a597:	add    BYTE PTR [rsi],ch
   14003a599:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003a59d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003a5a1:	add    BYTE PTR [rax],al
   14003a5a3:	add    BYTE PTR [rbx+0x75],dl
   14003a5a6:	outs   dx,BYTE PTR ds:[rsi]
   14003a5a7:	add    BYTE PTR [rbp+0x6f],cl
   14003a5aa:	outs   dx,BYTE PTR ds:[rsi]
   14003a5ab:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14003a5af:	add    BYTE PTR [rdi+0x65],dl
   14003a5b2:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   14003a5b7:	add    BYTE PTR [rsi+0x72],al
   14003a5ba:	imul   eax,DWORD PTR [rax],0x746153
   14003a5c0:	push   rbx
   14003a5c1:	jne    0x14003a631
   14003a5c3:	fs (bad) 
   14003a5c5:	jns    0x14003a5c7
   14003a5c7:	add    BYTE PTR [rbp+0x6f],cl
   14003a5ca:	outs   dx,BYTE PTR ds:[rsi]
   14003a5cb:	fs (bad) 
   14003a5cd:	jns    0x14003a5cf
   14003a5cf:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14003a5d3:	jae    0x14003a639
   14003a5d5:	(bad)  
   14003a5d6:	jns    0x14003a5d8
   14003a5d8:	push   rdi
   14003a5d9:	gs outs dx,BYTE PTR fs:[rsi]
   14003a5dc:	gs jae 0x14003a643
   14003a5df:	(bad)  
   14003a5e0:	jns    0x14003a5e2
   14003a5e2:	add    BYTE PTR [rax],al
   14003a5e4:	add    BYTE PTR [rax],al
   14003a5e6:	add    BYTE PTR [rax],al
   14003a5e8:	push   rsp
   14003a5e9:	push   0x64737275
   14003a5ee:	(bad)  
   14003a5ef:	jns    0x14003a5f1
   14003a5f1:	add    BYTE PTR [rax],al
   14003a5f3:	add    BYTE PTR [rsi+0x72],al
   14003a5f6:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14003a5fe:	add    BYTE PTR [rax],al
   14003a600:	push   rbx
   14003a601:	(bad)  
   14003a602:	je     0x14003a679
   14003a604:	jb     0x14003a66a
   14003a606:	(bad)  
   14003a607:	jns    0x14003a609
   14003a609:	add    BYTE PTR [rax],al
   14003a60b:	add    BYTE PTR [rdx+0x61],cl
   14003a60e:	outs   dx,BYTE PTR ds:[rsi]
   14003a60f:	add    BYTE PTR [rsi+0x65],al
   14003a612:	(bad)  
   14003a613:	add    BYTE PTR [rbp+0x61],cl
   14003a616:	jb     0x14003a618
   14003a618:	rex.B jo 0x14003a68d
   14003a61b:	add    BYTE PTR [rbp+0x61],cl
   14003a61e:	jns    0x14003a620
   14003a620:	rex.WX jne 0x14003a691
   14003a623:	add    BYTE PTR [rdx+0x75],cl
   14003a626:	ins    BYTE PTR es:[rdi],dx
   14003a627:	add    BYTE PTR [rcx+0x75],al
   14003a62a:	add    BYTE PTR [ebx+0x65],dl
   14003a62e:	jo     0x14003a630
   14003a630:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   14003a635:	outs   dx,DWORD PTR ds:[rsi]
   14003a636:	jbe    0x14003a638
   14003a638:	rex.R
   14003a639:	movsxd eax,DWORD PTR gs:[rax]
   14003a63c:	add    BYTE PTR [rax],al
   14003a63e:	add    BYTE PTR [rax],al
   14003a640:	rex.WX (bad) 
   14003a642:	outs   dx,BYTE PTR ds:[rsi]
   14003a643:	jne    0x14003a6a6
   14003a645:	jb     0x14003a6c0
   14003a647:	add    BYTE PTR [rsi+0x65],al
   14003a64a:	(bad)
   14003a64f:	jns    0x14003a651
   14003a651:	add    BYTE PTR [rax],al
   14003a653:	add    BYTE PTR [rbp+0x61],cl
   14003a656:	jb     0x14003a6bb
   14003a658:	push   0x41000000
   14003a65d:	jo     0x14003a6d1
   14003a65f:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   14003a667:	add    BYTE PTR gs:[rax],al
   14003a66a:	add    BYTE PTR [rax],al
   14003a66c:	rex.WX jne 0x14003a6db
   14003a66f:	jns    0x14003a671
   14003a671:	add    BYTE PTR [rax],al
   14003a673:	add    BYTE PTR [rcx+0x75],al
   14003a676:	addr32 jne 0x14003a6ec
   14003a679:	je     0x14003a67b
   14003a67b:	add    BYTE PTR [rax],al
   14003a67d:	add    BYTE PTR [rax],al
   14003a67f:	add    BYTE PTR [rbx+0x65],dl
   14003a682:	jo     0x14003a6f8
   14003a684:	gs ins DWORD PTR es:[rdi],dx
   14003a686:	(bad)  
   14003a687:	gs jb  0x14003a68a
   14003a68a:	add    BYTE PTR [rax],al
   14003a68c:	add    BYTE PTR [rax],al
   14003a68e:	add    BYTE PTR [rax],al
   14003a690:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   14003a695:	gs jb  0x14003a698
   14003a698:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003a69a:	jbe    0x14003a701
   14003a69c:	ins    DWORD PTR es:[rdi],dx
   14003a69d:	(bad)  
   14003a69e:	gs jb  0x14003a6a1
   14003a6a1:	add    BYTE PTR [rax],al
   14003a6a3:	add    BYTE PTR [rax],al
   14003a6a5:	add    BYTE PTR [rax],al
   14003a6a7:	add    BYTE PTR [rbp+riz*2+0x63],al
   14003a6ab:	gs ins DWORD PTR es:[rdi],dx
   14003a6ad:	(bad)  
   14003a6ae:	gs jb  0x14003a6b1
   14003a6b1:	add    BYTE PTR [rax],al
   14003a6b3:	add    BYTE PTR [rcx+0x4d],al
   14003a6b6:	add    BYTE PTR [rax],al
   14003a6b8:	push   rax
   14003a6b9:	rex.WRB add BYTE PTR [r8],r8b
   14003a6bc:	add    BYTE PTR [rax],al
   14003a6be:	add    BYTE PTR [rax],al
   14003a6c0:	rex.WRB
   14003a6c1:	rex.WRB (bad) 
   14003a6c3:	fs fs (bad) 
   14003a6c6:	jns    0x14003a741
	...
   14003a6d0:	fs fs fs fs sub al,0x20
   14003a6d6:	rex.WRB
   14003a6d7:	rex.WRB
   14003a6d8:	rex.WRB
   14003a6d9:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14003a6de:	and    BYTE PTR [rcx+0x79],bh
   14003a6e1:	jns    0x14003a75c
   14003a6e3:	add    BYTE PTR [rax],al
   14003a6e5:	add    BYTE PTR [rax],al
   14003a6e7:	add    BYTE PTR [rax+0x48],cl
   14003a6ea:	cmp    ch,BYTE PTR [rbp+0x6d]
   14003a6ed:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14003a6f8:	push   rbx
   14003a6f9:	add    BYTE PTR [rbp+0x0],dh
   14003a6fc:	outs   dx,BYTE PTR ds:[rsi]
   14003a6fd:	add    BYTE PTR [rax],al
   14003a6ff:	add    BYTE PTR [rbp+0x0],cl
   14003a702:	outs   dx,DWORD PTR ds:[rsi]
   14003a703:	add    BYTE PTR [rsi+0x0],ch
   14003a706:	add    BYTE PTR [rax],al
   14003a708:	push   rsp
   14003a709:	add    BYTE PTR [rbp+0x0],dh
   14003a70c:	add    BYTE PTR gs:[rax],al
   14003a70f:	add    BYTE PTR [rdi+0x0],dl
   14003a712:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14003a717:	add    BYTE PTR [rax+rax*1+0x68],dl
   14003a71b:	add    BYTE PTR [rbp+0x0],dh
   14003a71e:	add    BYTE PTR [rax],al
   14003a720:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14003a724:	imul   eax,DWORD PTR [rax],0x530000
   14003a72a:	(bad)  
   14003a72b:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003a72f:	add    BYTE PTR [rbx+0x0],dl
   14003a732:	jne    0x14003a734
   14003a734:	outs   dx,BYTE PTR ds:[rsi]
   14003a735:	add    BYTE PTR [rax+rax*1+0x61],ah
   14003a739:	add    BYTE PTR [rcx+0x0],bh
   14003a73c:	add    BYTE PTR [rax],al
   14003a73e:	add    BYTE PTR [rax],al
   14003a740:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14003a744:	outs   dx,BYTE PTR ds:[rsi]
   14003a745:	add    BYTE PTR [rax+rax*1+0x61],ah
   14003a749:	add    BYTE PTR [rcx+0x0],bh
   14003a74c:	add    BYTE PTR [rax],al
   14003a74e:	add    BYTE PTR [rax],al
   14003a750:	push   rsp
   14003a751:	add    BYTE PTR [rbp+0x0],dh
   14003a754:	add    BYTE PTR gs:[rbx+0x0],dh
   14003a758:	add    BYTE PTR fs:[rcx+0x0],ah
   14003a75c:	jns    0x14003a75e
   14003a75e:	add    BYTE PTR [rax],al
   14003a760:	push   rdi
   14003a761:	add    BYTE PTR [rbp+0x0],ah
   14003a764:	add    BYTE PTR fs:[rsi+0x0],ch
   14003a768:	add    BYTE PTR gs:[rbx+0x0],dh
   14003a76c:	add    BYTE PTR fs:[rcx+0x0],ah
   14003a770:	jns    0x14003a772
   14003a772:	add    BYTE PTR [rax],al
   14003a774:	add    BYTE PTR [rax],al
   14003a776:	add    BYTE PTR [rax],al
   14003a778:	push   rsp
   14003a779:	add    BYTE PTR [rax+0x0],ch
   14003a77c:	jne    0x14003a77e
   14003a77e:	jb     0x14003a780
   14003a780:	jae    0x14003a782
   14003a782:	add    BYTE PTR fs:[rcx+0x0],ah
   14003a786:	jns    0x14003a788
	...
   14003a790:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14003a794:	imul   eax,DWORD PTR [rax],0x610064
   14003a79a:	jns    0x14003a79c
   14003a79c:	add    BYTE PTR [rax],al
   14003a79e:	add    BYTE PTR [rax],al
   14003a7a0:	push   rbx
   14003a7a1:	add    BYTE PTR [rcx+0x0],ah
   14003a7a4:	je     0x14003a7a6
   14003a7a6:	jne    0x14003a7a8
   14003a7a8:	jb     0x14003a7aa
   14003a7aa:	add    BYTE PTR fs:[rcx+0x0],ah
   14003a7ae:	jns    0x14003a7b0
	...
   14003a7b8:	rex.WX add BYTE PTR [rcx+0x0],spl
   14003a7bc:	outs   dx,BYTE PTR ds:[rsi]
   14003a7bd:	add    BYTE PTR [rax],al
   14003a7bf:	add    BYTE PTR [rsi+0x0],al
   14003a7c2:	add    BYTE PTR gs:[rdx+0x0],ah
   14003a7c6:	add    BYTE PTR [rax],al
   14003a7c8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003a7cc:	jb     0x14003a7ce
   14003a7ce:	add    BYTE PTR [rax],al
   14003a7d0:	add    BYTE PTR [r8+0x0],sil
   14003a7d4:	jb     0x14003a7d6
   14003a7d6:	add    BYTE PTR [rax],al
   14003a7d8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003a7dc:	jns    0x14003a7de
   14003a7de:	add    BYTE PTR [rax],al
   14003a7e0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14003a7e4:	outs   dx,BYTE PTR ds:[rsi]
   14003a7e5:	add    BYTE PTR [rax],al
   14003a7e7:	add    BYTE PTR [rdx+0x0],cl
   14003a7ea:	jne    0x14003a7ec
   14003a7ec:	ins    BYTE PTR es:[rdi],dx
   14003a7ed:	add    BYTE PTR [rax],al
   14003a7ef:	add    BYTE PTR [rcx+0x0],al
   14003a7f2:	jne    0x14003a7f4
   14003a7f4:	add    BYTE PTR [eax],al
   14003a7f7:	add    BYTE PTR [rbx+0x0],dl
   14003a7fa:	add    BYTE PTR gs:[rax+0x0],dh
   14003a7fe:	add    BYTE PTR [rax],al
   14003a800:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14003a804:	je     0x14003a806
   14003a806:	add    BYTE PTR [rax],al
   14003a808:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14003a80c:	jbe    0x14003a80e
   14003a80e:	add    BYTE PTR [rax],al
   14003a810:	add    BYTE PTR [rbp+0x0],r12b
   14003a814:	movsxd eax,DWORD PTR [rax]
   14003a816:	add    BYTE PTR [rax],al
   14003a818:	rex.WX add BYTE PTR [rcx+0x0],spl
   14003a81c:	outs   dx,BYTE PTR ds:[rsi]
   14003a81d:	add    BYTE PTR [rbp+0x0],dh
   14003a820:	(bad)  
   14003a821:	add    BYTE PTR [rdx+0x0],dh
   14003a824:	jns    0x14003a826
   14003a826:	add    BYTE PTR [rax],al
   14003a828:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14003a82c:	(bad)  
   14003a82d:	add    BYTE PTR [rdx+0x0],dh
   14003a830:	jne    0x14003a832
   14003a832:	(bad)  
   14003a833:	add    BYTE PTR [rdx+0x0],dh
   14003a836:	jns    0x14003a838
	...
   14003a840:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003a844:	jb     0x14003a846
   14003a846:	movsxd eax,DWORD PTR [rax]
   14003a848:	push   0x0
   14003a84d:	add    BYTE PTR [rax],al
   14003a84f:	add    BYTE PTR [rcx+0x0],al
   14003a852:	jo     0x14003a854
   14003a854:	jb     0x14003a856
   14003a856:	imul   eax,DWORD PTR [rax],0x6c
   14003a85c:	add    BYTE PTR [rax],al
   14003a85e:	add    BYTE PTR [rax],al
   14003a860:	rex.WX add BYTE PTR [rbp+0x0],sil
   14003a864:	outs   dx,BYTE PTR ds:[rsi]
   14003a865:	add    BYTE PTR [rbp+0x0],ah
	...
   14003a870:	rex.WX add BYTE PTR [rbp+0x0],sil
   14003a874:	ins    BYTE PTR es:[rdi],dx
   14003a875:	add    BYTE PTR [rcx+0x0],bh
	...
   14003a880:	add    BYTE PTR [r13+0x0],sil
   14003a884:	add    BYTE PTR [ebp+0x0],dh
   14003a888:	jae    0x14003a88a
   14003a88a:	je     0x14003a88c
   14003a88c:	add    BYTE PTR [rax],al
   14003a88e:	add    BYTE PTR [rax],al
   14003a890:	push   rbx
   14003a891:	add    BYTE PTR [rbp+0x0],ah
   14003a894:	jo     0x14003a896
   14003a896:	je     0x14003a898
   14003a898:	add    BYTE PTR gs:[rbp+0x0],ch
   14003a89c:	(bad)  
   14003a89d:	add    BYTE PTR [rbp+0x0],ah
   14003a8a0:	jb     0x14003a8a2
   14003a8a2:	add    BYTE PTR [rax],al
   14003a8a4:	add    BYTE PTR [rax],al
   14003a8a6:	add    BYTE PTR [rax],al
   14003a8a8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14003a8ac:	je     0x14003a8ae
   14003a8ae:	outs   dx,DWORD PTR ds:[rsi]
   14003a8af:	add    BYTE PTR [rdx+0x0],ah
   14003a8b2:	add    BYTE PTR gs:[rdx+0x0],dh
   14003a8b6:	add    BYTE PTR [rax],al
   14003a8b8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14003a8bc:	jbe    0x14003a8be
   14003a8be:	add    BYTE PTR gs:[rbp+0x0],ch
   14003a8c2:	(bad)  
   14003a8c3:	add    BYTE PTR [rbp+0x0],ah
   14003a8c6:	jb     0x14003a8c8
	...
   14003a8d0:	add    BYTE PTR [rbp+0x0],r12b
   14003a8d4:	movsxd eax,DWORD PTR [rax]
   14003a8d6:	add    BYTE PTR gs:[rbp+0x0],ch
   14003a8da:	(bad)  
   14003a8db:	add    BYTE PTR [rbp+0x0],ah
   14003a8de:	jb     0x14003a8e0
   14003a8e0:	add    BYTE PTR [rax],al
   14003a8e2:	add    BYTE PTR [rax],al
   14003a8e4:	add    BYTE PTR [r13+0x0],cl
   14003a8e8:	add    BYTE PTR [rax],al
   14003a8ea:	add    BYTE PTR [rax],al
   14003a8ec:	push   rax
   14003a8ed:	add    BYTE PTR [rbp+0x0],cl
	...
   14003a8f8:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14003a8fc:	(bad)  
   14003a8fd:	add    BYTE PTR [rax+rax*1+0x64],ah
   14003a901:	add    BYTE PTR [rdi],ch
   14003a903:	add    BYTE PTR [rcx+0x0],bh
   14003a906:	jns    0x14003a908
	...
   14003a910:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14003a915:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14003a919:	add    BYTE PTR [rax],ah
   14003a91b:	add    BYTE PTR [rbp+0x0],cl
   14003a91e:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14003a922:	rex.WRB add BYTE PTR [r8],r12b
   14003a925:	add    BYTE PTR [rax+rax*1+0x64],ah
   14003a929:	add    BYTE PTR [rax+rax*1],ch
   14003a92c:	and    BYTE PTR [rax],al
   14003a92e:	jns    0x14003a930
   14003a930:	jns    0x14003a932
   14003a932:	jns    0x14003a934
   14003a934:	jns    0x14003a936
   14003a936:	add    BYTE PTR [rax],al
   14003a938:	rex.W add BYTE PTR [rax+0x0],cl
   14003a93c:	cmp    al,BYTE PTR [rax]
   14003a93e:	ins    DWORD PTR es:[rdi],dx
   14003a93f:	add    BYTE PTR [rbp+0x0],ch
   14003a942:	cmp    al,BYTE PTR [rax]
   14003a944:	jae    0x14003a946
   14003a946:	jae    0x14003a948
	...
   14003a950:	add    BYTE PTR gs:[rsi+0x0],ch
   14003a954:	sub    eax,0x53005500
   14003a959:	add    BYTE PTR [rax],al
   14003a95b:	add    BYTE PTR [rax],al
   14003a95d:	add    BYTE PTR [rax],al
   14003a95f:	add    BYTE PTR [rax+0x14003a9],al
   14003a965:	add    BYTE PTR [rax],al
   14003a967:	add    BYTE PTR [rax+0x14003a9],dl
   14003a96d:	add    BYTE PTR [rax],al
   14003a96f:	add    BYTE PTR [rax+0x14003a9],ah
   14003a975:	add    BYTE PTR [rax],al
   14003a977:	add    BYTE PTR [rax+0x14003a9],dh
   14003a97d:	add    BYTE PTR [rax],al
   14003a97f:	add    BYTE PTR [rdx+0x0],ch
   14003a982:	(bad)  
   14003a983:	add    BYTE PTR [rip+0x50004a00],ch        # 0x19003f389
   14003a989:	add    BYTE PTR [rax],al
   14003a98b:	add    BYTE PTR [rax],al
   14003a98d:	add    BYTE PTR [rax],al
   14003a98f:	add    BYTE PTR [rdx+0x0],bh
   14003a992:	push   0x43002d00
   14003a997:	add    BYTE PTR [rsi+0x0],cl
   14003a99a:	add    BYTE PTR [rax],al
   14003a99c:	add    BYTE PTR [rax],al
   14003a99e:	add    BYTE PTR [rax],al
   14003a9a0:	imul   eax,DWORD PTR [rax],0x6f
   14003a9a3:	add    BYTE PTR [rip+0x52004b00],ch        # 0x19203f4a9
   14003a9a9:	add    BYTE PTR [rax],al
   14003a9ab:	add    BYTE PTR [rax],al
   14003a9ad:	add    BYTE PTR [rax],al
   14003a9af:	add    BYTE PTR [rdx+0x0],bh
   14003a9b2:	push   0x54002d00
   14003a9b7:	add    BYTE PTR [rdi+0x0],dl
   14003a9ba:	add    BYTE PTR [rax],al
   14003a9bc:	add    BYTE PTR [rax],al
   14003a9be:	add    BYTE PTR [rax],al
   14003a9c0:	push   rbp
   14003a9c1:	add    BYTE PTR [rbx+0x0],dl
   14003a9c4:	add    BYTE PTR [r10+0x0],r10b
   14003a9c8:	xor    eax,DWORD PTR [rax]
   14003a9ca:	xor    al,BYTE PTR [rax]
   14003a9cc:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   14003a9d1:	add    BYTE PTR [rax+rax*1+0x0],cl
   14003a9d5:	add    BYTE PTR [rax],al
   14003a9d7:	add    BYTE PTR [rbp+0x65],cl
   14003a9da:	jae    0x14003aa4f
   14003a9dc:	(bad)  
   14003a9dd:	rex.X outs dx,DWORD PTR gs:[esi]
   14003a9e1:	js     0x14003aa3a
   14003a9e3:	add    BYTE PTR [rax],al
   14003a9e5:	add    BYTE PTR [rax],al
   14003a9e7:	add    BYTE PTR [rdi+0x65],al
   14003a9ea:	je     0x14003aa2d
   14003a9ec:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14003a9f0:	gs push rdi
   14003a9f2:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   14003a9f9:	gs je  0x14003aa48
   14003a9fc:	(bad)  
   14003a9fd:	jae    0x14003aa73
   14003a9ff:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14003aa04:	gs push rax
   14003aa06:	outs   dx,DWORD PTR ds:[rsi]
   14003aa07:	jo     0x14003aa7e
   14003aa09:	jo     0x14003aa0b
   14003aa0b:	add    BYTE PTR [rax],al
   14003aa0d:	add    BYTE PTR [rax],al
   14003aa0f:	add    BYTE PTR [rdi+0x65],al
   14003aa12:	je     0x14003aa69
   14003aa14:	jae    0x14003aa7b
   14003aa16:	jb     0x14003aa67
   14003aa18:	(bad)  
   14003aa19:	push   0x65
   14003aa1b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14003aa1f:	outs   dx,WORD PTR ds:[rsi]
   14003aa21:	jb     0x14003aa90
   14003aa23:	(bad)  
   14003aa24:	je     0x14003aa8f
   14003aa26:	outs   dx,DWORD PTR ds:[rsi]
   14003aa27:	outs   dx,BYTE PTR ds:[rsi]
   14003aa28:	push   rdi
   14003aa29:	add    BYTE PTR [rax],al
   14003aa2b:	add    BYTE PTR [rax],al
   14003aa2d:	add    BYTE PTR [rax],al
   14003aa2f:	add    BYTE PTR [rdi+0x65],al
   14003aa32:	je     0x14003aa84
   14003aa34:	jb     0x14003aaa5
   14003aa36:	movsxd esp,DWORD PTR [rbp+0x73]
   14003aa39:	jae    0x14003aa92
   14003aa3b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14003aa42:	(bad)  
   14003aa43:	je     0x14003aaae
   14003aa45:	outs   dx,DWORD PTR ds:[rsi]
   14003aa46:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003aa4f:	add    BYTE PTR [rsi],al
   14003aa51:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   14003aa58:	add    BYTE PTR [rax],dl
   14003aa5a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   14003aa60:	adc    al,0x5
   14003aa62:	add    eax,0x85454545
   14003aa67:	test   DWORD PTR [rbp+0x30000005],eax
   14003aa6d:	xor    BYTE PTR [rax+0x888050],al
   14003aa73:	or     BYTE PTR [rax],al
   14003aa75:	sub    BYTE PTR [rdi],ah
   14003aa77:	cmp    BYTE PTR [rax+0x57],dl
   14003aa7a:	add    BYTE PTR [rax],0x7
   14003aa7d:	add    BYTE PTR [rdi],dh
   14003aa7f:	xor    BYTE PTR [rax],dh
   14003aa81:	push   rax
   14003aa82:	push   rax
   14003aa83:	mov    BYTE PTR [rax],al
   14003aa85:	add    BYTE PTR [rax],al
   14003aa87:	and    BYTE PTR [rax],ch
   14003aa89:	or     BYTE PTR [rax+0x8080],0x0
   14003aa90:	(bad)  
   14003aa91:	push   0x68686860
   14003aa96:	or     BYTE PTR [rax],cl
   14003aa98:	(bad)  
   14003aa99:	js     0x14003ab0b
   14003aa9b:	jo     0x14003ab14
   14003aa9d:	jo     0x14003ab0f
   14003aa9f:	or     BYTE PTR [rax],cl
   14003aaa1:	add    BYTE PTR [rax],al
   14003aaa3:	or     BYTE PTR [rax],al
   14003aaa5:	or     BYTE PTR [rax],al
   14003aaa7:	(bad)  
   14003aaa8:	or     BYTE PTR [rax],al
   14003aaaa:	add    BYTE PTR [rax],al
   14003aaac:	add    BYTE PTR [rax],al
   14003aaae:	add    BYTE PTR [rax],al
   14003aab0:	shr    BYTE PTR [rbp+0x14003],0x0
   14003aab7:	add    al,dl
   14003aab9:	lods   eax,DWORD PTR ds:[rsi]
   14003aaba:	add    eax,DWORD PTR [rax+0x1]
   14003aabd:	add    BYTE PTR [rax],al
   14003aabf:	add    al,bl
   14003aac1:	lods   eax,DWORD PTR ds:[rsi]
   14003aac2:	add    eax,DWORD PTR [rax+0x1]
   14003aac5:	add    BYTE PTR [rax],al
   14003aac7:	add    al,ch
   14003aac9:	lods   eax,DWORD PTR ds:[rsi]
   14003aaca:	add    eax,DWORD PTR [rax+0x1]
   14003aacd:	add    BYTE PTR [rax],al
   14003aacf:	add    al,bh
   14003aad1:	lods   eax,DWORD PTR ds:[rsi]
   14003aad2:	add    eax,DWORD PTR [rax+0x1]
   14003aad5:	add    BYTE PTR [rax],al
   14003aad7:	add    BYTE PTR [rax],cl
   14003aad9:	scas   al,BYTE PTR es:[rdi]
   14003aada:	add    eax,DWORD PTR [rax+0x1]
   14003aadd:	add    BYTE PTR [rax],al
   14003aadf:	add    BYTE PTR [rax],bl
   14003aae1:	scas   al,BYTE PTR es:[rdi]
   14003aae2:	add    eax,DWORD PTR [rax+0x1]
   14003aae5:	add    BYTE PTR [rax],al
   14003aae7:	add    BYTE PTR [rsi+rbp*4],ah
   14003aaea:	add    eax,DWORD PTR [rax+0x1]
   14003aaed:	add    BYTE PTR [rax],al
   14003aaef:	add    BYTE PTR [rax],dh
   14003aaf1:	scas   al,BYTE PTR es:[rdi]
   14003aaf2:	add    eax,DWORD PTR [rax+0x1]
   14003aaf5:	add    BYTE PTR [rax],al
   14003aaf7:	add    BYTE PTR [rax],bh
   14003aaf9:	scas   al,BYTE PTR es:[rdi]
   14003aafa:	add    eax,DWORD PTR [rax+0x1]
   14003aafd:	add    BYTE PTR [rax],al
   14003aaff:	add    BYTE PTR [rax-0x52],cl
   14003ab02:	add    eax,DWORD PTR [rax+0x1]
   14003ab05:	add    BYTE PTR [rax],al
   14003ab07:	add    BYTE PTR [rax-0x52],bl
   14003ab0a:	add    eax,DWORD PTR [rax+0x1]
   14003ab0d:	add    BYTE PTR [rax],al
   14003ab0f:	add    BYTE PTR [rdx-0x16],ah
   14003ab12:	add    eax,DWORD PTR [rax+0x1]
   14003ab15:	add    BYTE PTR [rax],al
   14003ab17:	add    BYTE PTR [rax-0x4d],ch
   14003ab1a:	add    eax,DWORD PTR [rax+0x1]
   14003ab1d:	add    BYTE PTR [rax],al
   14003ab1f:	add    BYTE PTR [rax+0x14003b3],al
   14003ab25:	add    BYTE PTR [rax],al
   14003ab27:	add    BYTE PTR [rax+0x14003b3],ah
   14003ab2d:	add    BYTE PTR [rax],al
   14003ab2f:	add    BYTE PTR [rax+0x14003b3],bh
   14003ab35:	add    BYTE PTR [rax],al
   14003ab37:	add    al,bl
   14003ab39:	mov    bl,0x3
   14003ab3b:	rex add DWORD PTR [rax],eax
   14003ab3e:	add    BYTE PTR [rax],al
   14003ab40:	fs scas al,BYTE PTR es:[rdi]
   14003ab42:	add    eax,DWORD PTR [rax+0x1]
   14003ab45:	add    BYTE PTR [rax],al
   14003ab47:	add    BYTE PTR [rax-0x52],dh
   14003ab4a:	add    eax,DWORD PTR [rax+0x1]
   14003ab4d:	add    BYTE PTR [rax],al
   14003ab4f:	add    BYTE PTR [rax-0x52],bh
   14003ab52:	add    eax,DWORD PTR [rax+0x1]
   14003ab55:	add    BYTE PTR [rax],al
   14003ab57:	add    BYTE PTR [rsi+rbp*4+0x3],bh
   14003ab5b:	rex add DWORD PTR [rax],eax
   14003ab5e:	add    BYTE PTR [rax],al
   14003ab60:	sub    BYTE PTR [rsi+0x14003],0x0
   14003ab67:	add    BYTE PTR [rsi+rbp*4+0x14003],al
   14003ab6e:	add    BYTE PTR [rax],al
   14003ab70:	mov    BYTE PTR [rsi+0x14003],ch
   14003ab76:	add    BYTE PTR [rax],al
   14003ab78:	mov    WORD PTR [rsi+0x14003],gs
   14003ab7e:	add    BYTE PTR [rax],al
   14003ab80:	nop
   14003ab81:	scas   al,BYTE PTR es:[rdi]
   14003ab82:	add    eax,DWORD PTR [rax+0x1]
   14003ab85:	add    BYTE PTR [rax],al
   14003ab87:	add    BYTE PTR [rax+0x14003ae],bl
   14003ab8d:	add    BYTE PTR [rax],al
   14003ab8f:	add    BYTE PTR [rsi+rbp*4+0x14003],ah
   14003ab96:	add    BYTE PTR [rax],al
   14003ab98:	test   al,0xae
   14003ab9a:	add    eax,DWORD PTR [rax+0x1]
   14003ab9d:	add    BYTE PTR [rax],al
   14003ab9f:	add    BYTE PTR [rsi+rbp*4+0x14003],ch
   14003aba6:	add    BYTE PTR [rax],al
   14003aba8:	mov    al,0xae
   14003abaa:	add    eax,DWORD PTR [rax+0x1]
   14003abad:	add    BYTE PTR [rax],al
   14003abaf:	add    BYTE PTR [rsi+rbp*4+0x14003],dh
   14003abb6:	add    BYTE PTR [rax],al
   14003abb8:	mov    eax,0x14003ae
   14003abbd:	add    BYTE PTR [rax],al
   14003abbf:	add    BYTE PTR [rsi+rbp*4+0x14003],bh
   14003abc6:	add    BYTE PTR [rax],al
   14003abc8:	shr    BYTE PTR [rsi+0x14003],0x0
   14003abcf:	add    ah,al
   14003abd1:	scas   al,BYTE PTR es:[rdi]
   14003abd2:	add    eax,DWORD PTR [rax+0x1]
   14003abd5:	add    BYTE PTR [rax],al
   14003abd7:	add    al,cl
   14003abd9:	scas   al,BYTE PTR es:[rdi]
   14003abda:	add    eax,DWORD PTR [rax+0x1]
   14003abdd:	add    BYTE PTR [rax],al
   14003abdf:	add    ah,cl
   14003abe1:	scas   al,BYTE PTR es:[rdi]
   14003abe2:	add    eax,DWORD PTR [rax+0x1]
   14003abe5:	add    BYTE PTR [rax],al
   14003abe7:	add    al,dl
   14003abe9:	scas   al,BYTE PTR es:[rdi]
   14003abea:	add    eax,DWORD PTR [rax+0x1]
   14003abed:	add    BYTE PTR [rax],al
   14003abef:	add    ah,dl
   14003abf1:	scas   al,BYTE PTR es:[rdi]
   14003abf2:	add    eax,DWORD PTR [rax+0x1]
   14003abf5:	add    BYTE PTR [rax],al
   14003abf7:	add    al,bl
   14003abf9:	scas   al,BYTE PTR es:[rdi]
   14003abfa:	add    eax,DWORD PTR [rax+0x1]
   14003abfd:	add    BYTE PTR [rax],al
   14003abff:	add    ah,bl
   14003ac01:	scas   al,BYTE PTR es:[rdi]
   14003ac02:	add    eax,DWORD PTR [rax+0x1]
   14003ac05:	add    BYTE PTR [rax],al
   14003ac07:	add    al,ah
   14003ac09:	scas   al,BYTE PTR es:[rdi]
   14003ac0a:	add    eax,DWORD PTR [rax+0x1]
   14003ac0d:	add    BYTE PTR [rax],al
   14003ac0f:	add    ah,ah
   14003ac11:	scas   al,BYTE PTR es:[rdi]
   14003ac12:	add    eax,DWORD PTR [rax+0x1]
   14003ac15:	add    BYTE PTR [rax],al
   14003ac17:	add    al,ch
   14003ac19:	scas   al,BYTE PTR es:[rdi]
   14003ac1a:	add    eax,DWORD PTR [rax+0x1]
   14003ac1d:	add    BYTE PTR [rax],al
   14003ac1f:	add    ah,ch
   14003ac21:	scas   al,BYTE PTR es:[rdi]
   14003ac22:	add    eax,DWORD PTR [rax+0x1]
   14003ac25:	add    BYTE PTR [rax],al
   14003ac27:	add    al,dh
   14003ac29:	scas   al,BYTE PTR es:[rdi]
   14003ac2a:	add    eax,DWORD PTR [rax+0x1]
   14003ac2d:	add    BYTE PTR [rax],al
   14003ac2f:	add    ah,dh
   14003ac31:	scas   al,BYTE PTR es:[rdi]
   14003ac32:	add    eax,DWORD PTR [rax+0x1]
   14003ac35:	add    BYTE PTR [rax],al
   14003ac37:	add    al,bh
   14003ac39:	scas   al,BYTE PTR es:[rdi]
   14003ac3a:	add    eax,DWORD PTR [rax+0x1]
   14003ac3d:	add    BYTE PTR [rax],al
   14003ac3f:	add    ah,bh
   14003ac41:	scas   al,BYTE PTR es:[rdi]
   14003ac42:	add    eax,DWORD PTR [rax+0x1]
   14003ac45:	add    BYTE PTR [rax],al
   14003ac47:	add    BYTE PTR [rax],al
   14003ac49:	scas   eax,DWORD PTR es:[rdi]
   14003ac4a:	add    eax,DWORD PTR [rax+0x1]
   14003ac4d:	add    BYTE PTR [rax],al
   14003ac4f:	add    BYTE PTR [rdi+rbp*4],al
   14003ac52:	add    eax,DWORD PTR [rax+0x1]
   14003ac55:	add    BYTE PTR [rax],al
   14003ac57:	add    BYTE PTR [rax],cl
   14003ac59:	scas   eax,DWORD PTR es:[rdi]
   14003ac5a:	add    eax,DWORD PTR [rax+0x1]
   14003ac5d:	add    BYTE PTR [rax],al
   14003ac5f:	add    BYTE PTR [rdi+rbp*4],cl
   14003ac62:	add    eax,DWORD PTR [rax+0x1]
   14003ac65:	add    BYTE PTR [rax],al
   14003ac67:	add    BYTE PTR [rax],dl
   14003ac69:	scas   eax,DWORD PTR es:[rdi]
   14003ac6a:	add    eax,DWORD PTR [rax+0x1]
   14003ac6d:	add    BYTE PTR [rax],al
   14003ac6f:	add    BYTE PTR [rdi+rbp*4],dl
   14003ac72:	add    eax,DWORD PTR [rax+0x1]
   14003ac75:	add    BYTE PTR [rax],al
   14003ac77:	add    BYTE PTR [rax],bl
   14003ac79:	scas   eax,DWORD PTR es:[rdi]
   14003ac7a:	add    eax,DWORD PTR [rax+0x1]
   14003ac7d:	add    BYTE PTR [rax],al
   14003ac7f:	add    BYTE PTR [rdi+rbp*4],bl
   14003ac82:	add    eax,DWORD PTR [rax+0x1]
   14003ac85:	add    BYTE PTR [rax],al
   14003ac87:	add    BYTE PTR [rax],ah
   14003ac89:	scas   eax,DWORD PTR es:[rdi]
   14003ac8a:	add    eax,DWORD PTR [rax+0x1]
   14003ac8d:	add    BYTE PTR [rax],al
   14003ac8f:	add    BYTE PTR [rax],dh
   14003ac91:	scas   eax,DWORD PTR es:[rdi]
   14003ac92:	add    eax,DWORD PTR [rax+0x1]
   14003ac95:	add    BYTE PTR [rax],al
   14003ac97:	add    BYTE PTR [rax-0x51],al
   14003ac9a:	add    eax,DWORD PTR [rax+0x1]
   14003ac9d:	add    BYTE PTR [rax],al
   14003ac9f:	add    BYTE PTR [rax-0x51],cl
   14003aca2:	add    eax,DWORD PTR [rax+0x1]
   14003aca5:	add    BYTE PTR [rax],al
   14003aca7:	add    BYTE PTR [rax-0x51],bl
   14003acaa:	add    eax,DWORD PTR [rax+0x1]
   14003acad:	add    BYTE PTR [rax],al
   14003acaf:	add    BYTE PTR [rax-0x51],dh
   14003acb2:	add    eax,DWORD PTR [rax+0x1]
   14003acb5:	add    BYTE PTR [rax],al
   14003acb7:	add    BYTE PTR [rax+0x14003af],al
   14003acbd:	add    BYTE PTR [rax],al
   14003acbf:	add    BYTE PTR [rax+0x14003af],bl
   14003acc5:	add    BYTE PTR [rax],al
   14003acc7:	add    BYTE PTR [rax+0x14003af],bh
   14003accd:	add    BYTE PTR [rax],al
   14003accf:	add    al,bl
   14003acd1:	scas   eax,DWORD PTR es:[rdi]
   14003acd2:	add    eax,DWORD PTR [rax+0x1]
   14003acd5:	add    BYTE PTR [rax],al
   14003acd7:	add    al,bh
   14003acd9:	scas   eax,DWORD PTR es:[rdi]
   14003acda:	add    eax,DWORD PTR [rax+0x1]
   14003acdd:	add    BYTE PTR [rax],al
   14003acdf:	add    BYTE PTR [rax],bl
   14003ace1:	mov    al,0x3
   14003ace3:	rex add DWORD PTR [rax],eax
   14003ace6:	add    BYTE PTR [rax],al
   14003ace8:	cmp    BYTE PTR [rax+0x14003],dh
   14003acee:	add    BYTE PTR [rax],al
   14003acf0:	(bad)  
   14003acf1:	mov    al,0x3
   14003acf3:	rex add DWORD PTR [rax],eax
   14003acf6:	add    BYTE PTR [rax],al
   14003acf8:	xor    BYTE PTR [rax+0x14003],0x0
   14003acff:	add    BYTE PTR [rax+0x14003b0],ch
   14003ad05:	add    BYTE PTR [rax],al
   14003ad07:	add    al,cl
   14003ad09:	mov    al,0x3
   14003ad0b:	rex add DWORD PTR [rax],eax
   14003ad0e:	add    BYTE PTR [rax],al
   14003ad10:	lock mov al,0x3
   14003ad13:	rex add DWORD PTR [rax],eax
   14003ad16:	add    BYTE PTR [rax],al
   14003ad18:	adc    BYTE PTR [rcx+0x14003],dh
   14003ad1e:	add    BYTE PTR [rax],al
   14003ad20:	and    BYTE PTR [rcx+0x14003],dh
   14003ad26:	add    BYTE PTR [rax],al
   14003ad28:	and    al,0xb1
   14003ad2a:	add    eax,DWORD PTR [rax+0x1]
   14003ad2d:	add    BYTE PTR [rax],al
   14003ad2f:	add    BYTE PTR [rax],dh
   14003ad31:	mov    cl,0x3
   14003ad33:	rex add DWORD PTR [rax],eax
   14003ad36:	add    BYTE PTR [rax],al
   14003ad38:	mov    cl,0x3
   14003ad3b:	rex add DWORD PTR [rax],eax
   14003ad3e:	add    BYTE PTR [rax],al
   14003ad40:	fs mov cl,0x3
   14003ad43:	rex add DWORD PTR [rax],eax
   14003ad46:	add    BYTE PTR [rax],al
   14003ad48:	jo     0x14003acfb
   14003ad4a:	add    eax,DWORD PTR [rax+0x1]
   14003ad4d:	add    BYTE PTR [rax],al
   14003ad4f:	add    BYTE PTR [rax+0x14003b1],al
   14003ad55:	add    BYTE PTR [rax],al
   14003ad57:	add    BYTE PTR [rax+0x14003b1],dl
   14003ad5d:	add    BYTE PTR [rax],al
   14003ad5f:	add    BYTE PTR [rax+0x14003b1],dh
   14003ad65:	add    BYTE PTR [rax],al
   14003ad67:	add    al,dl
   14003ad69:	mov    cl,0x3
   14003ad6b:	rex add DWORD PTR [rax],eax
   14003ad6e:	add    BYTE PTR [rax],al
   14003ad70:	clc    
   14003ad71:	mov    cl,0x3
   14003ad73:	rex add DWORD PTR [rax],eax
   14003ad76:	add    BYTE PTR [rax],al
   14003ad78:	and    BYTE PTR [rdx+0x14003],dh
   14003ad7e:	add    BYTE PTR [rax],al
   14003ad80:	rex.W mov dl,0x3
   14003ad83:	rex add DWORD PTR [rax],eax
   14003ad86:	add    BYTE PTR [rax],al
   14003ad88:	js     0x14003ad3c
   14003ad8a:	add    eax,DWORD PTR [rax+0x1]
   14003ad8d:	add    BYTE PTR [rax],al
   14003ad8f:	add    BYTE PTR [rax+0x14003b2],bl
   14003ad95:	add    BYTE PTR [rax],al
   14003ad97:	add    al,al
   14003ad99:	mov    dl,0x3
   14003ad9b:	rex add DWORD PTR [rax],eax
   14003ad9e:	add    BYTE PTR [rax],al
   14003ada0:	call   0x14143b157
   14003ada5:	add    BYTE PTR [rax],al
   14003ada7:	add    BYTE PTR [rax],bl
   14003ada9:	mov    bl,0x3
   14003adab:	rex add DWORD PTR [rax],eax
   14003adae:	add    BYTE PTR [rax],al
   14003adb0:	rex.W mov bl,0x3
   14003adb3:	rex add DWORD PTR [rax],eax
   14003adb6:	add    BYTE PTR [rax],al
   14003adb8:	(bad)  
   14003adb9:	(bad)  
   14003adba:	add    eax,DWORD PTR [rax+0x1]
   14003adbd:	add    BYTE PTR [rax],al
   14003adbf:	add    BYTE PTR [rdi+0x5f],bl
   14003adc2:	(bad)  
   14003adc4:	jae    0x14003ae2b
   14003adc6:	sub    BYTE PTR fs:[rax],al
   14003adc9:	add    BYTE PTR [rax],al
   14003adcb:	add    BYTE PTR [rax],al
   14003adcd:	add    BYTE PTR [rax],al
   14003adcf:	add    BYTE PTR [rdi+0x5f],bl
   14003add2:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14003add6:	ins    BYTE PTR es:[rdi],dx
   14003add7:	add    BYTE PTR [rdi+0x5f],bl
   14003adda:	jo     0x14003ae3d
   14003addc:	jae    0x14003ae41
   14003adde:	(bad)  
   14003addf:	ins    BYTE PTR es:[rdi],dx
	...
   14003ade8:	pop    rdi
   14003ade9:	pop    rdi
   14003adea:	jae    0x14003ae60
   14003adec:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   14003adf0:	ins    BYTE PTR es:[rdi],dx
   14003adf1:	add    BYTE PTR [rax],al
   14003adf3:	add    BYTE PTR [rax],al
   14003adf5:	add    BYTE PTR [rax],al
   14003adf7:	add    BYTE PTR [rdi+0x5f],bl
   14003adfa:	je     0x14003ae64
   14003adfc:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   14003ae03:	add    BYTE PTR [rax],al
   14003ae05:	add    BYTE PTR [rax],al
   14003ae07:	add    BYTE PTR [rdi+0x5f],bl
   14003ae0a:	data16 (bad) 
   14003ae0c:	jae    0x14003ae82
   14003ae0e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003ae11:	ins    BYTE PTR es:[rdi],dx
   14003ae12:	add    BYTE PTR [rax],al
   14003ae14:	add    BYTE PTR [rax],al
   14003ae16:	add    BYTE PTR [rax],al
   14003ae18:	pop    rdi
   14003ae19:	pop    rdi
   14003ae1a:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   14003ae1e:	(bad)  
   14003ae1f:	ins    BYTE PTR es:[rdi],dx
   14003ae20:	ins    BYTE PTR es:[rdi],dx
   14003ae21:	add    BYTE PTR [rax],al
   14003ae23:	add    BYTE PTR [rdi+0x5f],bl
   14003ae26:	gs (bad) 
   14003ae28:	(bad)  
   14003ae29:	imul   eax,DWORD PTR [rax],0x0
   14003ae2f:	add    BYTE PTR [rdi+0x5f],bl
   14003ae32:	jo     0x14003aea8
   14003ae34:	jb     0x14003ae6c
   14003ae36:	xor    al,0x0
   14003ae38:	pop    rdi
   14003ae39:	pop    rdi
   14003ae3a:	jb     0x14003aea1
   14003ae3c:	jae    0x14003aeb2
   14003ae3e:	jb     0x14003aea9
   14003ae40:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14003ae44:	add    BYTE PTR [rax],al
   14003ae46:	add    BYTE PTR [rax],al
   14003ae48:	pop    rdi
   14003ae49:	pop    rdi
   14003ae4a:	jne    0x14003aeba
   14003ae4c:	(bad)  
   14003ae4d:	ins    BYTE PTR es:[rdi],dx
   14003ae4e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   14003ae55:	add    BYTE PTR [rax],al
   14003ae57:	add    BYTE PTR [rdx+0x65],dh
   14003ae5a:	jae    0x14003aed0
   14003ae5c:	jb     0x14003aec7
   14003ae5e:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   14003ae62:	add    BYTE PTR [rax],al
   14003ae64:	and    BYTE PTR [rsi+0x65],ch
   14003ae67:	ja     0x14003ae69
   14003ae69:	add    BYTE PTR [rax],al
   14003ae6b:	add    BYTE PTR [rax],al
   14003ae6d:	add    BYTE PTR [rax],al
   14003ae6f:	add    BYTE PTR [rax],ah
   14003ae71:	fs gs ins BYTE PTR es:[rdi],dx
   14003ae74:	gs je  0x14003aedc
   14003ae77:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e03ae7d
   14003ae7d:	add    BYTE PTR ds:[rax],al
   14003ae80:	cmp    al,0x3c
   14003ae82:	add    BYTE PTR [rax],al
   14003ae84:	and    DWORD PTR [rax],eax
   14003ae86:	add    BYTE PTR [rax],al
   14003ae88:	cmp    eax,0x2100003d
   14003ae8d:	cmp    eax,0x5d5b0000
   14003ae92:	add    BYTE PTR [rax],al
   14003ae94:	add    BYTE PTR [rax],al
   14003ae96:	add    BYTE PTR [rax],al
   14003ae98:	outs   dx,DWORD PTR ds:[rsi]
   14003ae99:	jo     0x14003af00
   14003ae9b:	jb     0x14003aefe
   14003ae9d:	je     0x14003af0e
   14003ae9f:	jb     0x14003aea1
   14003aea1:	add    BYTE PTR [rax],al
   14003aea3:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a03aee7
   14003aea9:	add    BYTE PTR [rax],al
   14003aeab:	add    BYTE PTR [rbx],ch
   14003aead:	sub    eax,DWORD PTR [rax]
   14003aeaf:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d03aee2
   14003aeb5:	add    BYTE PTR [rax],al
   14003aeb7:	add    BYTE PTR [rbx],ch
   14003aeb9:	add    BYTE PTR [rax],al
   14003aebb:	add    BYTE PTR [rsi],ah
   14003aebd:	add    BYTE PTR [rax],al
   14003aebf:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f03d903
   14003aec5:	add    BYTE PTR [rax],al
   14003aec7:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c03aecd
   14003aecd:	add    BYTE PTR [rax],al
   14003aecf:	add    BYTE PTR [rdi*1+0x3e0000],bh
   14003aed6:	add    BYTE PTR [rax],al
   14003aed8:	ds cmp eax,0x2c0000
   14003aede:	add    BYTE PTR [rax],al
   14003aee0:	sub    BYTE PTR [rcx],ch
   14003aee2:	add    BYTE PTR [rax],al
   14003aee4:	jle    0x14003aee6
   14003aee6:	add    BYTE PTR [rax],al
   14003aee8:	pop    rsi
   14003aee9:	add    BYTE PTR [rax],al
   14003aeeb:	add    BYTE PTR [rax+rax*1+0x0],bh
   14003aeef:	add    BYTE PTR [rsi],ah
   14003aef1:	add    BYTE PTR es:[rax],al
   14003aef4:	jl     0x14003af72
   14003aef6:	add    BYTE PTR [rax],al
   14003aef8:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2eaefe
   14003aefe:	add    BYTE PTR [rax],al
   14003af00:	sub    eax,0x2f00003d
   14003af05:	cmp    eax,0x3d250000
   14003af0a:	add    BYTE PTR [rax],al
   14003af0c:	ds ds cmp eax,0x3d3c3c00
   14003af13:	add    BYTE PTR [rsi],ah
   14003af15:	cmp    eax,0x3d7c0000
   14003af1a:	add    BYTE PTR [rax],al
   14003af1c:	pop    rsi
   14003af1d:	cmp    eax,0x76600000
   14003af22:	data16 je 0x14003af86
   14003af25:	(bad)  
   14003af26:	ins    BYTE PTR es:[rdi],dx
   14003af27:	gs (bad) 
   14003af29:	add    BYTE PTR [rax],al
   14003af2b:	add    BYTE PTR [rax],al
   14003af2d:	add    BYTE PTR [rax],al
   14003af2f:	add    BYTE PTR [rax+0x76],ah
   14003af32:	(bad)  
   14003af33:	je     0x14003af96
   14003af35:	(bad)  
   14003af36:	ins    BYTE PTR es:[rdi],dx
   14003af37:	gs (bad) 
   14003af39:	add    BYTE PTR [rax],al
   14003af3b:	add    BYTE PTR [rax],al
   14003af3d:	add    BYTE PTR [rax],al
   14003af3f:	add    BYTE PTR [rax+0x76],ah
   14003af42:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003af45:	ins    BYTE PTR es:[rdi],dx
   14003af46:	(bad)  
   14003af47:	add    BYTE PTR [rax+0x74],ah
   14003af4a:	jns    0x14003afbc
   14003af4c:	outs   dx,DWORD PTR gs:[rsi]
   14003af4e:	data16 (bad) 
	...
   14003af58:	(bad)  
   14003af59:	ins    BYTE PTR es:[rdi],dx
   14003af5a:	outs   dx,DWORD PTR ds:[rsi]
   14003af5b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003af5e:	and    BYTE PTR [rbx+0x74],dh
   14003af61:	(bad)  
   14003af62:	je     0x14003afcd
   14003af64:	movsxd esp,DWORD PTR [rax]
   14003af66:	addr32 jne 0x14003afca
   14003af69:	jb     0x14003afcf
   14003af6b:	(bad)  
   14003af6c:	add    BYTE PTR [rax],al
   14003af6e:	add    BYTE PTR [rax],al
   14003af70:	(bad)  
   14003af71:	jae    0x14003afe7
   14003af73:	jb     0x14003afde
   14003af75:	outs   dx,BYTE PTR ds:[rsi]
   14003af76:	addr32 (bad) 
	...
   14003af80:	(bad)  
   14003af81:	jbe    0x14003afe5
   14003af83:	(bad)  
   14003af84:	jae    0x14003afeb
   14003af86:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003af8a:	je     0x14003affe
   14003af8c:	jne    0x14003aff1
   14003af8e:	je     0x14003afff
   14003af90:	jb     0x14003afb9
   14003af92:	add    BYTE PTR [rax],al
   14003af94:	add    BYTE PTR [rax],al
   14003af96:	add    BYTE PTR [rax],al
   14003af98:	(bad)  
   14003af99:	jbe    0x14003b000
   14003af9b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003af9f:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003afa3:	gs je  0x14003b00f
   14003afa6:	outs   dx,BYTE PTR ds:[rsi]
   14003afa7:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14003afac:	je     0x14003b020
   14003afae:	jne    0x14003b013
   14003afb0:	je     0x14003b021
   14003afb2:	jb     0x14003afdb
   14003afb4:	add    BYTE PTR [rax],al
   14003afb6:	add    BYTE PTR [rax],al
   14003afb8:	(bad)  
   14003afb9:	fs gs data16 (bad) 
   14003afbd:	jne    0x14003b02b
   14003afbf:	je     0x14003afe1
   14003afc1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003afc4:	jae    0x14003b03a
   14003afc6:	jb     0x14003b03d
   14003afc8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003afcc:	and    BYTE PTR [rbx+0x6c],ah
   14003afcf:	outs   dx,DWORD PTR ds:[rsi]
   14003afd0:	jae    0x14003b047
   14003afd2:	jb     0x14003b039
   14003afd4:	(bad)  
   14003afd5:	add    BYTE PTR [rax],al
   14003afd7:	add    BYTE PTR [rax+0x73],ah
   14003afda:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003afdd:	(bad)  
   14003afde:	jb     0x14003b000
   14003afe0:	fs gs ins BYTE PTR es:[rdi],dx
   14003afe3:	gs je  0x14003b04f
   14003afe6:	outs   dx,BYTE PTR ds:[rsi]
   14003afe7:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14003afec:	je     0x14003b060
   14003afee:	jne    0x14003b053
   14003aff0:	je     0x14003b061
   14003aff2:	jb     0x14003b01b
   14003aff4:	add    BYTE PTR [rax],al
   14003aff6:	add    BYTE PTR [rax],al
   14003aff8:	(bad)  
   14003aff9:	jbe    0x14003b060
   14003affb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003afff:	and    BYTE PTR [rbx+0x6f],ah
   14003b002:	outs   dx,BYTE PTR ds:[rsi]
   14003b003:	jae    0x14003b079
   14003b005:	jb     0x14003b07c
   14003b007:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b00b:	and    BYTE PTR [rcx+0x74],ch
   14003b00e:	gs jb  0x14003b072
   14003b011:	je     0x14003b082
   14003b013:	jb     0x14003b03c
   14003b015:	add    BYTE PTR [rax],al
   14003b017:	add    BYTE PTR [rax+0x76],ah
   14003b01a:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003b01f:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003b023:	je     0x14003b097
   14003b025:	jne    0x14003b08a
   14003b027:	je     0x14003b098
   14003b029:	jb     0x14003b04b
   14003b02b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14003b033:	(bad)  
   14003b034:	add    BYTE PTR [rax],al
   14003b036:	add    BYTE PTR [rax],al
   14003b038:	(bad)  
   14003b039:	jbe    0x14003b0a0
   14003b03b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b03f:	and    BYTE PTR [rsi+0x62],dh
   14003b042:	(bad)  
   14003b043:	jae    0x14003b0aa
   14003b045:	and    BYTE PTR [rbx+0x6f],ah
   14003b048:	outs   dx,BYTE PTR ds:[rsi]
   14003b049:	jae    0x14003b0bf
   14003b04b:	jb     0x14003b0c2
   14003b04d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b051:	and    BYTE PTR [rcx+0x74],ch
   14003b054:	gs jb  0x14003b0b8
   14003b057:	je     0x14003b0c8
   14003b059:	jb     0x14003b082
   14003b05b:	add    BYTE PTR [rax],al
   14003b05d:	add    BYTE PTR [rax],al
   14003b05f:	add    BYTE PTR [rax+0x76],ah
   14003b062:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   14003b069:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   14003b071:	ins    DWORD PTR es:[rdi],dx
   14003b072:	outs   dx,BYTE PTR gs:[rsi]
   14003b074:	je     0x14003b096
   14003b076:	ins    DWORD PTR es:[rdi],dx
   14003b077:	(bad)  
   14003b078:	jo     0x14003b0a1
   14003b07a:	add    BYTE PTR [rax],al
   14003b07c:	add    BYTE PTR [rax],al
   14003b07e:	add    BYTE PTR [rax],al
   14003b080:	(bad)  
   14003b081:	gs push 0x63657620
   14003b087:	je     0x14003b0f8
   14003b089:	jb     0x14003b0ab
   14003b08b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003b08e:	jae    0x14003b104
   14003b090:	jb     0x14003b107
   14003b092:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b096:	and    BYTE PTR [rcx+0x74],ch
   14003b099:	gs jb  0x14003b0fd
   14003b09c:	je     0x14003b10d
   14003b09e:	jb     0x14003b0c7
	...
   14003b0a8:	(bad)  
   14003b0a9:	gs push 0x63657620
   14003b0af:	je     0x14003b120
   14003b0b1:	jb     0x14003b0d3
   14003b0b3:	fs gs jae 0x14003b12b
   14003b0b7:	jb     0x14003b12e
   14003b0b9:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b0bd:	and    BYTE PTR [rcx+0x74],ch
   14003b0c0:	gs jb  0x14003b124
   14003b0c3:	je     0x14003b134
   14003b0c5:	jb     0x14003b0ee
   14003b0c7:	add    BYTE PTR [rax+0x65],ah
   14003b0ca:	push   0x63657620
   14003b0cf:	je     0x14003b140
   14003b0d1:	jb     0x14003b0f3
   14003b0d3:	jbe    0x14003b137
   14003b0d5:	(bad)  
   14003b0d6:	jae    0x14003b13d
   14003b0d8:	and    BYTE PTR [rbx+0x6f],ah
   14003b0db:	outs   dx,BYTE PTR ds:[rsi]
   14003b0dc:	jae    0x14003b152
   14003b0de:	jb     0x14003b155
   14003b0e0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b0e4:	and    BYTE PTR [rcx+0x74],ch
   14003b0e7:	gs jb  0x14003b14b
   14003b0ea:	je     0x14003b15b
   14003b0ec:	jb     0x14003b115
   14003b0ee:	add    BYTE PTR [rax],al
   14003b0f0:	(bad)  
   14003b0f1:	movsxd ebp,DWORD PTR [rdi+0x70]
   14003b0f4:	jns    0x14003b116
   14003b0f6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003b0f9:	jae    0x14003b16f
   14003b0fb:	jb     0x14003b172
   14003b0fd:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b101:	and    BYTE PTR [rbx+0x6c],ah
   14003b104:	outs   dx,DWORD PTR ds:[rsi]
   14003b105:	jae    0x14003b17c
   14003b107:	jb     0x14003b16e
   14003b109:	(bad)  
   14003b10a:	add    BYTE PTR [rax],al
   14003b10c:	add    BYTE PTR [rax],al
   14003b10e:	add    BYTE PTR [rax],al
   14003b110:	(bad)  
   14003b111:	jne    0x14003b177
   14003b113:	je     0x14003b135
   14003b115:	jb     0x14003b17c
   14003b117:	je     0x14003b18e
   14003b119:	jb     0x14003b189
   14003b11b:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   14003b122:	rex.W add BYTE PTR [rax+0x52],spl
   14003b126:	push   rsp
   14003b127:	push   rsp
   14003b128:	rex.WB add BYTE PTR [r8],al
   14003b12b:	add    BYTE PTR [rax],al
   14003b12d:	add    BYTE PTR [rax],al
   14003b12f:	add    BYTE PTR [rax+0x6c],ah
   14003b132:	outs   dx,DWORD PTR ds:[rsi]
   14003b133:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b136:	and    BYTE PTR [rsi+0x66],dh
   14003b139:	je     0x14003b19c
   14003b13b:	(bad)  
   14003b13c:	ins    BYTE PTR es:[rdi],dx
   14003b13d:	gs (bad) 
   14003b13f:	add    BYTE PTR [rax+0x6c],ah
   14003b142:	outs   dx,DWORD PTR ds:[rsi]
   14003b143:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b146:	and    BYTE PTR [rsi+0x66],dh
   14003b149:	je     0x14003b1ac
   14003b14b:	(bad)  
   14003b14c:	ins    BYTE PTR es:[rdi],dx
   14003b14d:	and    BYTE PTR gs:[rbx+0x6f],ah
   14003b151:	outs   dx,BYTE PTR ds:[rsi]
   14003b152:	jae    0x14003b1c8
   14003b154:	jb     0x14003b1cb
   14003b156:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b15a:	and    BYTE PTR [rbx+0x6c],ah
   14003b15d:	outs   dx,DWORD PTR ds:[rsi]
   14003b15e:	jae    0x14003b1d5
   14003b160:	jb     0x14003b1c7
   14003b162:	(bad)  
   14003b163:	add    BYTE PTR [rax],ah
   14003b165:	outs   dx,BYTE PTR ds:[rsi]
   14003b166:	gs ja  0x14003b1c4
   14003b169:	pop    rbp
   14003b16a:	add    BYTE PTR [rax],al
   14003b16c:	add    BYTE PTR [rax],al
   14003b16e:	add    BYTE PTR [rax],al
   14003b170:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003b174:	gs je  0x14003b1dc
   14003b177:	pop    rbx
   14003b178:	pop    rbp
   14003b179:	add    BYTE PTR [rax],al
   14003b17b:	add    BYTE PTR [rax],al
   14003b17d:	add    BYTE PTR [rax],al
   14003b17f:	add    BYTE PTR [rax+0x6f],ah
   14003b182:	ins    DWORD PTR es:[rdi],dx
   14003b183:	outs   dx,BYTE PTR ds:[rsi]
   14003b184:	imul   esp,DWORD PTR [rax],0x6c6c6163
   14003b18a:	jae    0x14003b1f5
   14003b18c:	addr32 (bad) 
   14003b18e:	add    BYTE PTR [rax],al
   14003b190:	(bad)  
   14003b191:	jo     0x14003b1ff
   14003b193:	(bad)  
   14003b194:	movsxd esp,DWORD PTR [rbp+0x6d]
   14003b197:	outs   dx,BYTE PTR gs:[rsi]
   14003b199:	je     0x14003b1bb
   14003b19b:	fs gs ins BYTE PTR es:[rdi],dx
   14003b19e:	gs je  0x14003b206
   14003b1a1:	and    BYTE PTR [rbx+0x6c],ah
   14003b1a4:	outs   dx,DWORD PTR ds:[rsi]
   14003b1a5:	jae    0x14003b21c
   14003b1a7:	jb     0x14003b20e
   14003b1a9:	(bad)  
   14003b1aa:	add    BYTE PTR [rax],al
   14003b1ac:	add    BYTE PTR [rax],al
   14003b1ae:	add    BYTE PTR [rax],al
   14003b1b0:	(bad)  
   14003b1b1:	jo     0x14003b21f
   14003b1b3:	(bad)  
   14003b1b4:	movsxd esp,DWORD PTR [rbp+0x6d]
   14003b1b7:	outs   dx,BYTE PTR gs:[rsi]
   14003b1b9:	je     0x14003b1db
   14003b1bb:	fs gs ins BYTE PTR es:[rdi],dx
   14003b1be:	gs je  0x14003b226
   14003b1c1:	pop    rbx
   14003b1c2:	pop    rbp
   14003b1c3:	and    BYTE PTR [rbx+0x6c],ah
   14003b1c6:	outs   dx,DWORD PTR ds:[rsi]
   14003b1c7:	jae    0x14003b23e
   14003b1c9:	jb     0x14003b230
   14003b1cb:	(bad)  
   14003b1cc:	add    BYTE PTR [rax],al
   14003b1ce:	add    BYTE PTR [rax],al
   14003b1d0:	(bad)  
   14003b1d1:	ins    DWORD PTR es:[rdi],dx
   14003b1d2:	(bad)  
   14003b1d3:	outs   dx,BYTE PTR ds:[rsi]
   14003b1d4:	(bad)  
   14003b1d5:	gs and BYTE PTR fs:[esi+0x65],dh
   14003b1db:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b1df:	and    BYTE PTR [rbx+0x6f],ah
   14003b1e2:	outs   dx,BYTE PTR ds:[rsi]
   14003b1e3:	jae    0x14003b259
   14003b1e5:	jb     0x14003b25c
   14003b1e7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b1eb:	and    BYTE PTR [rcx+0x74],ch
   14003b1ee:	gs jb  0x14003b252
   14003b1f1:	je     0x14003b262
   14003b1f3:	jb     0x14003b21c
   14003b1f5:	add    BYTE PTR [rax],al
   14003b1f7:	add    BYTE PTR [rax+0x6d],ah
   14003b1fa:	(bad)  
   14003b1fb:	outs   dx,BYTE PTR ds:[rsi]
   14003b1fc:	(bad)  
   14003b1fd:	gs and BYTE PTR fs:[esi+0x65],dh
   14003b203:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b207:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003b20b:	je     0x14003b27f
   14003b20d:	jne    0x14003b272
   14003b20f:	je     0x14003b280
   14003b211:	jb     0x14003b233
   14003b213:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14003b21b:	(bad)  
   14003b21c:	add    BYTE PTR [rax],al
   14003b21e:	add    BYTE PTR [rax],al
   14003b220:	(bad)  
   14003b221:	gs push 0x63657620
   14003b227:	je     0x14003b298
   14003b229:	jb     0x14003b24b
   14003b22b:	movsxd ebp,DWORD PTR [rdi+0x70]
   14003b22e:	jns    0x14003b250
   14003b230:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003b233:	jae    0x14003b2a9
   14003b235:	jb     0x14003b2ac
   14003b237:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b23b:	and    BYTE PTR [rcx+0x74],ch
   14003b23e:	gs jb  0x14003b2a2
   14003b241:	je     0x14003b2b2
   14003b243:	jb     0x14003b26c
   14003b245:	add    BYTE PTR [rax],al
   14003b247:	add    BYTE PTR [rax+0x65],ah
   14003b24a:	push   0x63657620
   14003b24f:	je     0x14003b2c0
   14003b251:	jb     0x14003b273
   14003b253:	jbe    0x14003b2b7
   14003b255:	(bad)  
   14003b256:	jae    0x14003b2bd
   14003b258:	and    BYTE PTR [rbx+0x6f],ah
   14003b25b:	jo     0x14003b2d6
   14003b25d:	and    BYTE PTR [rbx+0x6f],ah
   14003b260:	outs   dx,BYTE PTR ds:[rsi]
   14003b261:	jae    0x14003b2d7
   14003b263:	jb     0x14003b2da
   14003b265:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b269:	and    BYTE PTR [rcx+0x74],ch
   14003b26c:	gs jb  0x14003b2d0
   14003b26f:	je     0x14003b2e0
   14003b271:	jb     0x14003b29a
   14003b273:	add    BYTE PTR [rax],al
   14003b275:	add    BYTE PTR [rax],al
   14003b277:	add    BYTE PTR [rax+0x64],ah
   14003b27a:	jns    0x14003b2ea
   14003b27c:	(bad)  
   14003b27d:	ins    DWORD PTR es:[rdi],dx
   14003b27e:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   14003b285:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   14003b28c:	and    BYTE PTR [rsi+0x6f],ah
   14003b28f:	jb     0x14003b2b1
   14003b291:	(bad)  
   14003b292:	add    BYTE PTR [rax],al
   14003b294:	add    BYTE PTR [rax],al
   14003b296:	add    BYTE PTR [rax],al
   14003b298:	(bad)  
   14003b299:	fs jns 0x14003b30a
   14003b29c:	(bad)  
   14003b29d:	ins    DWORD PTR es:[rdi],dx
   14003b29e:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   14003b2a5:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   14003b2ad:	jne    0x14003b312
   14003b2af:	je     0x14003b320
   14003b2b1:	jb     0x14003b2d3
   14003b2b3:	outs   dx,WORD PTR ds:[rsi]
   14003b2b5:	jb     0x14003b2d7
   14003b2b7:	(bad)  
	...
   14003b2c0:	(bad)  
   14003b2c1:	jbe    0x14003b328
   14003b2c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b2c7:	and    BYTE PTR [rbx+0x6f],ah
   14003b2ca:	jo     0x14003b345
   14003b2cc:	and    BYTE PTR [rbx+0x6f],ah
   14003b2cf:	outs   dx,BYTE PTR ds:[rsi]
   14003b2d0:	jae    0x14003b346
   14003b2d2:	jb     0x14003b349
   14003b2d4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b2d8:	and    BYTE PTR [rcx+0x74],ch
   14003b2db:	gs jb  0x14003b33f
   14003b2de:	je     0x14003b34f
   14003b2e0:	jb     0x14003b309
   14003b2e2:	add    BYTE PTR [rax],al
   14003b2e4:	add    BYTE PTR [rax],al
   14003b2e6:	add    BYTE PTR [rax],al
   14003b2e8:	(bad)  
   14003b2e9:	jbe    0x14003b350
   14003b2eb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b2ef:	and    BYTE PTR [rsi+0x62],dh
   14003b2f2:	(bad)  
   14003b2f3:	jae    0x14003b35a
   14003b2f5:	and    BYTE PTR [rbx+0x6f],ah
   14003b2f8:	jo     0x14003b373
   14003b2fa:	and    BYTE PTR [rbx+0x6f],ah
   14003b2fd:	outs   dx,BYTE PTR ds:[rsi]
   14003b2fe:	jae    0x14003b374
   14003b300:	jb     0x14003b377
   14003b302:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b306:	and    BYTE PTR [rcx+0x74],ch
   14003b309:	gs jb  0x14003b36d
   14003b30c:	je     0x14003b37d
   14003b30e:	jb     0x14003b337
	...
   14003b318:	(bad)  
   14003b319:	ins    DWORD PTR es:[rdi],dx
   14003b31a:	(bad)  
   14003b31b:	outs   dx,BYTE PTR ds:[rsi]
   14003b31c:	(bad)  
   14003b31d:	gs and BYTE PTR fs:[esi+0x65],dh
   14003b323:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b327:	and    BYTE PTR [rbx+0x6f],ah
   14003b32a:	jo     0x14003b3a5
   14003b32c:	and    BYTE PTR [rbx+0x6f],ah
   14003b32f:	outs   dx,BYTE PTR ds:[rsi]
   14003b330:	jae    0x14003b3a6
   14003b332:	jb     0x14003b3a9
   14003b334:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003b338:	and    BYTE PTR [rcx+0x74],ch
   14003b33b:	gs jb  0x14003b39f
   14003b33e:	je     0x14003b3af
   14003b340:	jb     0x14003b369
   14003b342:	add    BYTE PTR [rax],al
   14003b344:	add    BYTE PTR [rax],al
   14003b346:	add    BYTE PTR [rax],al
   14003b348:	(bad)  
   14003b349:	ins    BYTE PTR es:[rdi],dx
   14003b34a:	outs   dx,DWORD PTR ds:[rsi]
   14003b34b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b34e:	and    BYTE PTR [rbx+0x74],dh
   14003b351:	(bad)  
   14003b352:	je     0x14003b3bd
   14003b354:	movsxd esp,DWORD PTR [rax]
   14003b356:	je     0x14003b3c0
   14003b358:	jb     0x14003b3bf
   14003b35a:	(bad)  
   14003b35b:	and    BYTE PTR fs:[rdi+0x75],ah
   14003b35f:	(bad)  
   14003b360:	jb     0x14003b3c6
   14003b362:	(bad)  
   14003b363:	add    BYTE PTR [rax],al
   14003b365:	add    BYTE PTR [rax],al
   14003b367:	add    BYTE PTR [rax],ah
   14003b369:	push   rsp
   14003b36a:	jns    0x14003b3dc
   14003b36c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   14003b371:	movsxd esi,DWORD PTR [rdx+0x69]
   14003b374:	jo     0x14003b3ea
   14003b376:	outs   dx,DWORD PTR ds:[rsi]
   14003b377:	jb     0x14003b3a0
   14003b379:	add    BYTE PTR [rax],al
   14003b37b:	add    BYTE PTR [rax],al
   14003b37d:	add    BYTE PTR [rax],al
   14003b37f:	add    BYTE PTR [rax],ah
   14003b381:	rex.X (bad) 
   14003b383:	jae    0x14003b3ea
   14003b385:	and    BYTE PTR [rbx+0x6c],al
   14003b388:	(bad)  
   14003b389:	jae    0x14003b3fe
   14003b38b:	and    BYTE PTR [rbp+riz*2+0x73],al
   14003b38f:	movsxd esi,DWORD PTR [rdx+0x69]
   14003b392:	jo     0x14003b408
   14003b394:	outs   dx,DWORD PTR ds:[rsi]
   14003b395:	jb     0x14003b3b7
   14003b397:	(bad)  
   14003b398:	je     0x14003b3ba
   14003b39a:	sub    BYTE PTR [rax],al
   14003b39c:	add    BYTE PTR [rax],al
   14003b39e:	add    BYTE PTR [rax],al
   14003b3a0:	and    BYTE PTR [rdx+0x61],al
   14003b3a3:	jae    0x14003b40a
   14003b3a5:	and    BYTE PTR [rbx+0x6c],al
   14003b3a8:	(bad)  
   14003b3a9:	jae    0x14003b41e
   14003b3ab:	and    BYTE PTR [rcx+0x72],al
   14003b3ae:	jb     0x14003b411
   14003b3b0:	jns    0x14003b3d9
   14003b3b2:	add    BYTE PTR [rax],al
   14003b3b4:	add    BYTE PTR [rax],al
   14003b3b6:	add    BYTE PTR [rax],al
   14003b3b8:	and    BYTE PTR [rbx+0x6c],al
   14003b3bb:	(bad)  
   14003b3bc:	jae    0x14003b431
   14003b3be:	and    BYTE PTR [rax+0x69],cl
   14003b3c1:	gs jb  0x14003b425
   14003b3c4:	jb     0x14003b429
   14003b3c6:	push   0x65442079
   14003b3cb:	jae    0x14003b430
   14003b3cd:	jb     0x14003b438
   14003b3cf:	jo     0x14003b445
   14003b3d1:	outs   dx,DWORD PTR ds:[rsi]
   14003b3d2:	jb     0x14003b3fb
   14003b3d4:	add    BYTE PTR [rax],al
   14003b3d6:	add    BYTE PTR [rax],al
   14003b3d8:	and    BYTE PTR [rbx+0x6f],al
   14003b3db:	ins    DWORD PTR es:[rdi],dx
   14003b3dc:	jo     0x14003b44a
   14003b3de:	gs je  0x14003b446
   14003b3e1:	and    BYTE PTR [rdi+0x62],cl
   14003b3e4:	push   0x65
   14003b3e6:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   14003b3ea:	outs   dx,DWORD PTR ds:[rsi]
   14003b3eb:	movsxd esp,DWORD PTR [rcx+0x74]
   14003b3ee:	outs   dx,DWORD PTR ds:[rsi]
   14003b3ef:	jb     0x14003b418
	...
   14003b4fd:	add    BYTE PTR [rax],al
   14003b4ff:	add    BYTE PTR [rax],ah
   14003b501:	add    BYTE PTR [rax],ah
   14003b503:	add    BYTE PTR [rax],ah
   14003b505:	add    BYTE PTR [rax],ah
   14003b507:	add    BYTE PTR [rax],ah
   14003b509:	add    BYTE PTR [rax],ah
   14003b50b:	add    BYTE PTR [rax],ah
   14003b50d:	add    BYTE PTR [rax],ah
   14003b50f:	add    BYTE PTR [rax],ah
   14003b511:	add    BYTE PTR [rax],ch
   14003b513:	add    BYTE PTR [rax],ch
   14003b515:	add    BYTE PTR [rax],ch
   14003b517:	add    BYTE PTR [rax],ch
   14003b519:	add    BYTE PTR [rax],ch
   14003b51b:	add    BYTE PTR [rax],ah
   14003b51d:	add    BYTE PTR [rax],ah
   14003b51f:	add    BYTE PTR [rax],ah
   14003b521:	add    BYTE PTR [rax],ah
   14003b523:	add    BYTE PTR [rax],ah
   14003b525:	add    BYTE PTR [rax],ah
   14003b527:	add    BYTE PTR [rax],ah
   14003b529:	add    BYTE PTR [rax],ah
   14003b52b:	add    BYTE PTR [rax],ah
   14003b52d:	add    BYTE PTR [rax],ah
   14003b52f:	add    BYTE PTR [rax],ah
   14003b531:	add    BYTE PTR [rax],ah
   14003b533:	add    BYTE PTR [rax],ah
   14003b535:	add    BYTE PTR [rax],ah
   14003b537:	add    BYTE PTR [rax],ah
   14003b539:	add    BYTE PTR [rax],ah
   14003b53b:	add    BYTE PTR [rax],ah
   14003b53d:	add    BYTE PTR [rax],ah
   14003b53f:	add    BYTE PTR [rax+0x0],cl
   14003b542:	adc    BYTE PTR [rax],al
   14003b544:	adc    BYTE PTR [rax],al
   14003b546:	adc    BYTE PTR [rax],al
   14003b548:	adc    BYTE PTR [rax],al
   14003b54a:	adc    BYTE PTR [rax],al
   14003b54c:	adc    BYTE PTR [rax],al
   14003b54e:	adc    BYTE PTR [rax],al
   14003b550:	adc    BYTE PTR [rax],al
   14003b552:	adc    BYTE PTR [rax],al
   14003b554:	adc    BYTE PTR [rax],al
   14003b556:	adc    BYTE PTR [rax],al
   14003b558:	adc    BYTE PTR [rax],al
   14003b55a:	adc    BYTE PTR [rax],al
   14003b55c:	adc    BYTE PTR [rax],al
   14003b55e:	adc    BYTE PTR [rax],al
   14003b560:	test   BYTE PTR [rax],al
   14003b562:	test   BYTE PTR [rax],al
   14003b564:	test   BYTE PTR [rax],al
   14003b566:	test   BYTE PTR [rax],al
   14003b568:	test   BYTE PTR [rax],al
   14003b56a:	test   BYTE PTR [rax],al
   14003b56c:	test   BYTE PTR [rax],al
   14003b56e:	test   BYTE PTR [rax],al
   14003b570:	test   BYTE PTR [rax],al
   14003b572:	test   BYTE PTR [rax],al
   14003b574:	adc    BYTE PTR [rax],al
   14003b576:	adc    BYTE PTR [rax],al
   14003b578:	adc    BYTE PTR [rax],al
   14003b57a:	adc    BYTE PTR [rax],al
   14003b57c:	adc    BYTE PTR [rax],al
   14003b57e:	adc    BYTE PTR [rax],al
   14003b580:	adc    BYTE PTR [rax],al
   14003b582:	add    DWORD PTR [rax],0x810081
   14003b588:	add    DWORD PTR [rax],0x810081
   14003b58e:	add    DWORD PTR [rax],eax
   14003b590:	add    DWORD PTR [rax],eax
   14003b592:	add    DWORD PTR [rax],eax
   14003b594:	add    DWORD PTR [rax],eax
   14003b596:	add    DWORD PTR [rax],eax
   14003b598:	add    DWORD PTR [rax],eax
   14003b59a:	add    DWORD PTR [rax],eax
   14003b59c:	add    DWORD PTR [rax],eax
   14003b59e:	add    DWORD PTR [rax],eax
   14003b5a0:	add    DWORD PTR [rax],eax
   14003b5a2:	add    DWORD PTR [rax],eax
   14003b5a4:	add    DWORD PTR [rax],eax
   14003b5a6:	add    DWORD PTR [rax],eax
   14003b5a8:	add    DWORD PTR [rax],eax
   14003b5aa:	add    DWORD PTR [rax],eax
   14003b5ac:	add    DWORD PTR [rax],eax
   14003b5ae:	add    DWORD PTR [rax],eax
   14003b5b0:	add    DWORD PTR [rax],eax
   14003b5b2:	add    DWORD PTR [rax],eax
   14003b5b4:	add    DWORD PTR [rax],eax
   14003b5b6:	adc    BYTE PTR [rax],al
   14003b5b8:	adc    BYTE PTR [rax],al
   14003b5ba:	adc    BYTE PTR [rax],al
   14003b5bc:	adc    BYTE PTR [rax],al
   14003b5be:	adc    BYTE PTR [rax],al
   14003b5c0:	adc    BYTE PTR [rax],al
   14003b5c2:	(bad)  
   14003b5c3:	add    BYTE PTR [rdx-0x7dff7e00],al
   14003b5c9:	add    BYTE PTR [rdx+0x2008200],al
   14003b5cf:	add    BYTE PTR [rdx],al
   14003b5d1:	add    BYTE PTR [rdx],al
   14003b5d3:	add    BYTE PTR [rdx],al
   14003b5d5:	add    BYTE PTR [rdx],al
   14003b5d7:	add    BYTE PTR [rdx],al
   14003b5d9:	add    BYTE PTR [rdx],al
   14003b5db:	add    BYTE PTR [rdx],al
   14003b5dd:	add    BYTE PTR [rdx],al
   14003b5df:	add    BYTE PTR [rdx],al
   14003b5e1:	add    BYTE PTR [rdx],al
   14003b5e3:	add    BYTE PTR [rdx],al
   14003b5e5:	add    BYTE PTR [rdx],al
   14003b5e7:	add    BYTE PTR [rdx],al
   14003b5e9:	add    BYTE PTR [rdx],al
   14003b5eb:	add    BYTE PTR [rdx],al
   14003b5ed:	add    BYTE PTR [rdx],al
   14003b5ef:	add    BYTE PTR [rdx],al
   14003b5f1:	add    BYTE PTR [rdx],al
   14003b5f3:	add    BYTE PTR [rdx],al
   14003b5f5:	add    BYTE PTR [rax],dl
   14003b5f7:	add    BYTE PTR [rax],dl
   14003b5f9:	add    BYTE PTR [rax],dl
   14003b5fb:	add    BYTE PTR [rax],dl
   14003b5fd:	add    BYTE PTR [rax],ah
	...
   14003b6ff:	add    BYTE PTR [rax],al
   14003b701:	add    BYTE PTR [rax],ah
   14003b703:	add    BYTE PTR [rax],ah
   14003b705:	add    BYTE PTR [rax],ah
   14003b707:	add    BYTE PTR [rax],ah
   14003b709:	add    BYTE PTR [rax],ah
   14003b70b:	add    BYTE PTR [rax],ah
   14003b70d:	add    BYTE PTR [rax],ah
   14003b70f:	add    BYTE PTR [rax],ah
   14003b711:	add    BYTE PTR [rax],ah
   14003b713:	add    BYTE PTR [rax+0x0],ch
   14003b716:	sub    BYTE PTR [rax],al
   14003b718:	sub    BYTE PTR [rax],al
   14003b71a:	sub    BYTE PTR [rax],al
   14003b71c:	sub    BYTE PTR [rax],al
   14003b71e:	and    BYTE PTR [rax],al
   14003b720:	and    BYTE PTR [rax],al
   14003b722:	and    BYTE PTR [rax],al
   14003b724:	and    BYTE PTR [rax],al
   14003b726:	and    BYTE PTR [rax],al
   14003b728:	and    BYTE PTR [rax],al
   14003b72a:	and    BYTE PTR [rax],al
   14003b72c:	and    BYTE PTR [rax],al
   14003b72e:	and    BYTE PTR [rax],al
   14003b730:	and    BYTE PTR [rax],al
   14003b732:	and    BYTE PTR [rax],al
   14003b734:	and    BYTE PTR [rax],al
   14003b736:	and    BYTE PTR [rax],al
   14003b738:	and    BYTE PTR [rax],al
   14003b73a:	and    BYTE PTR [rax],al
   14003b73c:	and    BYTE PTR [rax],al
   14003b73e:	and    BYTE PTR [rax],al
   14003b740:	and    BYTE PTR [rax],al
   14003b742:	rex.W add BYTE PTR [rax],dl
   14003b745:	add    BYTE PTR [rax],dl
   14003b747:	add    BYTE PTR [rax],dl
   14003b749:	add    BYTE PTR [rax],dl
   14003b74b:	add    BYTE PTR [rax],dl
   14003b74d:	add    BYTE PTR [rax],dl
   14003b74f:	add    BYTE PTR [rax],dl
   14003b751:	add    BYTE PTR [rax],dl
   14003b753:	add    BYTE PTR [rax],dl
   14003b755:	add    BYTE PTR [rax],dl
   14003b757:	add    BYTE PTR [rax],dl
   14003b759:	add    BYTE PTR [rax],dl
   14003b75b:	add    BYTE PTR [rax],dl
   14003b75d:	add    BYTE PTR [rax],dl
   14003b75f:	add    BYTE PTR [rax],dl
   14003b761:	add    BYTE PTR [rax+rax*1+0x840084],al
   14003b768:	test   BYTE PTR [rax],al
   14003b76a:	test   BYTE PTR [rax],al
   14003b76c:	test   BYTE PTR [rax],al
   14003b76e:	test   BYTE PTR [rax],al
   14003b770:	test   BYTE PTR [rax],al
   14003b772:	test   BYTE PTR [rax],al
   14003b774:	test   BYTE PTR [rax],al
   14003b776:	adc    BYTE PTR [rax],al
   14003b778:	adc    BYTE PTR [rax],al
   14003b77a:	adc    BYTE PTR [rax],al
   14003b77c:	adc    BYTE PTR [rax],al
   14003b77e:	adc    BYTE PTR [rax],al
   14003b780:	adc    BYTE PTR [rax],al
   14003b782:	adc    BYTE PTR [rax],al
   14003b784:	add    DWORD PTR [rcx],0x1810181
   14003b78a:	add    DWORD PTR [rcx],0x1810181
   14003b790:	add    DWORD PTR [rcx],eax
   14003b792:	add    DWORD PTR [rcx],eax
   14003b794:	add    DWORD PTR [rcx],eax
   14003b796:	add    DWORD PTR [rcx],eax
   14003b798:	add    DWORD PTR [rcx],eax
   14003b79a:	add    DWORD PTR [rcx],eax
   14003b79c:	add    DWORD PTR [rcx],eax
   14003b79e:	add    DWORD PTR [rcx],eax
   14003b7a0:	add    DWORD PTR [rcx],eax
   14003b7a2:	add    DWORD PTR [rcx],eax
   14003b7a4:	add    DWORD PTR [rcx],eax
   14003b7a6:	add    DWORD PTR [rcx],eax
   14003b7a8:	add    DWORD PTR [rcx],eax
   14003b7aa:	add    DWORD PTR [rcx],eax
   14003b7ac:	add    DWORD PTR [rcx],eax
   14003b7ae:	add    DWORD PTR [rcx],eax
   14003b7b0:	add    DWORD PTR [rcx],eax
   14003b7b2:	add    DWORD PTR [rcx],eax
   14003b7b4:	add    DWORD PTR [rcx],eax
   14003b7b6:	add    DWORD PTR [rcx],eax
   14003b7b8:	adc    BYTE PTR [rax],al
   14003b7ba:	adc    BYTE PTR [rax],al
   14003b7bc:	adc    BYTE PTR [rax],al
   14003b7be:	adc    BYTE PTR [rax],al
   14003b7c0:	adc    BYTE PTR [rax],al
   14003b7c2:	adc    BYTE PTR [rax],al
   14003b7c4:	(bad)  
   14003b7c5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14003b7cb:	add    DWORD PTR [rdx+0x2018201],eax
   14003b7d1:	add    DWORD PTR [rdx],eax
   14003b7d3:	add    DWORD PTR [rdx],eax
   14003b7d5:	add    DWORD PTR [rdx],eax
   14003b7d7:	add    DWORD PTR [rdx],eax
   14003b7d9:	add    DWORD PTR [rdx],eax
   14003b7db:	add    DWORD PTR [rdx],eax
   14003b7dd:	add    DWORD PTR [rdx],eax
   14003b7df:	add    DWORD PTR [rdx],eax
   14003b7e1:	add    DWORD PTR [rdx],eax
   14003b7e3:	add    DWORD PTR [rdx],eax
   14003b7e5:	add    DWORD PTR [rdx],eax
   14003b7e7:	add    DWORD PTR [rdx],eax
   14003b7e9:	add    DWORD PTR [rdx],eax
   14003b7eb:	add    DWORD PTR [rdx],eax
   14003b7ed:	add    DWORD PTR [rdx],eax
   14003b7ef:	add    DWORD PTR [rdx],eax
   14003b7f1:	add    DWORD PTR [rdx],eax
   14003b7f3:	add    DWORD PTR [rdx],eax
   14003b7f5:	add    DWORD PTR [rdx],eax
   14003b7f7:	add    DWORD PTR [rax],edx
   14003b7f9:	add    BYTE PTR [rax],dl
   14003b7fb:	add    BYTE PTR [rax],dl
   14003b7fd:	add    BYTE PTR [rax],dl
   14003b7ff:	add    BYTE PTR [rax],ah
   14003b801:	add    BYTE PTR [rax],ah
   14003b803:	add    BYTE PTR [rax],ah
   14003b805:	add    BYTE PTR [rax],ah
   14003b807:	add    BYTE PTR [rax],ah
   14003b809:	add    BYTE PTR [rax],ah
   14003b80b:	add    BYTE PTR [rax],ah
   14003b80d:	add    BYTE PTR [rax],ah
   14003b80f:	add    BYTE PTR [rax],ah
   14003b811:	add    BYTE PTR [rax],ah
   14003b813:	add    BYTE PTR [rax],ah
   14003b815:	add    BYTE PTR [rax],ah
   14003b817:	add    BYTE PTR [rax],ah
   14003b819:	add    BYTE PTR [rax],ah
   14003b81b:	add    BYTE PTR [rax],ah
   14003b81d:	add    BYTE PTR [rax],ah
   14003b81f:	add    BYTE PTR [rax],ah
   14003b821:	add    BYTE PTR [rax],ah
   14003b823:	add    BYTE PTR [rax],ah
   14003b825:	add    BYTE PTR [rax],ah
   14003b827:	add    BYTE PTR [rax],ah
   14003b829:	add    BYTE PTR [rax],ah
   14003b82b:	add    BYTE PTR [rax],ah
   14003b82d:	add    BYTE PTR [rax],ah
   14003b82f:	add    BYTE PTR [rax],ah
   14003b831:	add    BYTE PTR [rax],ah
   14003b833:	add    BYTE PTR [rax],ah
   14003b835:	add    BYTE PTR [rax],ah
   14003b837:	add    BYTE PTR [rax],ah
   14003b839:	add    BYTE PTR [rax],ah
   14003b83b:	add    BYTE PTR [rax],ah
   14003b83d:	add    BYTE PTR [rax],ah
   14003b83f:	add    BYTE PTR [rax],ah
   14003b841:	add    BYTE PTR [rax+0x0],cl
   14003b844:	adc    BYTE PTR [rax],al
   14003b846:	adc    BYTE PTR [rax],al
   14003b848:	adc    BYTE PTR [rax],al
   14003b84a:	adc    BYTE PTR [rax],al
   14003b84c:	adc    BYTE PTR [rax],al
   14003b84e:	adc    BYTE PTR [rax],al
   14003b850:	adc    BYTE PTR [rax],al
   14003b852:	adc    BYTE PTR [rax],al
   14003b854:	adc    BYTE PTR [rax],al
   14003b856:	adc    BYTE PTR [rax],al
   14003b858:	adc    BYTE PTR [rax],al
   14003b85a:	adc    BYTE PTR [rax],al
   14003b85c:	adc    BYTE PTR [rax],al
   14003b85e:	adc    BYTE PTR [rax],al
   14003b860:	adc    BYTE PTR [rax],al
   14003b862:	adc    BYTE PTR [rax],al
   14003b864:	adc    BYTE PTR [rax],al
   14003b866:	adc    al,0x0
   14003b868:	adc    al,0x0
   14003b86a:	adc    BYTE PTR [rax],al
   14003b86c:	adc    BYTE PTR [rax],al
   14003b86e:	adc    BYTE PTR [rax],al
   14003b870:	adc    BYTE PTR [rax],al
   14003b872:	adc    BYTE PTR [rax],al
   14003b874:	adc    al,0x0
   14003b876:	adc    BYTE PTR [rax],al
   14003b878:	adc    BYTE PTR [rax],al
   14003b87a:	adc    BYTE PTR [rax],al
   14003b87c:	adc    BYTE PTR [rax],al
   14003b87e:	adc    BYTE PTR [rax],al
   14003b880:	adc    BYTE PTR [rax],al
   14003b882:	add    DWORD PTR [rcx],eax
   14003b884:	add    DWORD PTR [rcx],eax
   14003b886:	add    DWORD PTR [rcx],eax
   14003b888:	add    DWORD PTR [rcx],eax
   14003b88a:	add    DWORD PTR [rcx],eax
   14003b88c:	add    DWORD PTR [rcx],eax
   14003b88e:	add    DWORD PTR [rcx],eax
   14003b890:	add    DWORD PTR [rcx],eax
   14003b892:	add    DWORD PTR [rcx],eax
   14003b894:	add    DWORD PTR [rcx],eax
   14003b896:	add    DWORD PTR [rcx],eax
   14003b898:	add    DWORD PTR [rcx],eax
   14003b89a:	add    DWORD PTR [rcx],eax
   14003b89c:	add    DWORD PTR [rcx],eax
   14003b89e:	add    DWORD PTR [rcx],eax
   14003b8a0:	add    DWORD PTR [rcx],eax
   14003b8a2:	add    DWORD PTR [rcx],eax
   14003b8a4:	add    DWORD PTR [rcx],eax
   14003b8a6:	add    DWORD PTR [rcx],eax
   14003b8a8:	add    DWORD PTR [rcx],eax
   14003b8aa:	add    DWORD PTR [rcx],eax
   14003b8ac:	add    DWORD PTR [rcx],eax
   14003b8ae:	add    DWORD PTR [rcx],eax
   14003b8b0:	adc    BYTE PTR [rax],al
   14003b8b2:	add    DWORD PTR [rcx],eax
   14003b8b4:	add    DWORD PTR [rcx],eax
   14003b8b6:	add    DWORD PTR [rcx],eax
   14003b8b8:	add    DWORD PTR [rcx],eax
   14003b8ba:	add    DWORD PTR [rcx],eax
   14003b8bc:	add    DWORD PTR [rcx],eax
   14003b8be:	add    DWORD PTR [rcx],eax
   14003b8c0:	add    al,BYTE PTR [rcx]
   14003b8c2:	add    al,BYTE PTR [rcx]
   14003b8c4:	add    al,BYTE PTR [rcx]
   14003b8c6:	add    al,BYTE PTR [rcx]
   14003b8c8:	add    al,BYTE PTR [rcx]
   14003b8ca:	add    al,BYTE PTR [rcx]
   14003b8cc:	add    al,BYTE PTR [rcx]
   14003b8ce:	add    al,BYTE PTR [rcx]
   14003b8d0:	add    al,BYTE PTR [rcx]
   14003b8d2:	add    al,BYTE PTR [rcx]
   14003b8d4:	add    al,BYTE PTR [rcx]
   14003b8d6:	add    al,BYTE PTR [rcx]
   14003b8d8:	add    al,BYTE PTR [rcx]
   14003b8da:	add    al,BYTE PTR [rcx]
   14003b8dc:	add    al,BYTE PTR [rcx]
   14003b8de:	add    al,BYTE PTR [rcx]
   14003b8e0:	add    al,BYTE PTR [rcx]
   14003b8e2:	add    al,BYTE PTR [rcx]
   14003b8e4:	add    al,BYTE PTR [rcx]
   14003b8e6:	add    al,BYTE PTR [rcx]
   14003b8e8:	add    al,BYTE PTR [rcx]
   14003b8ea:	add    al,BYTE PTR [rcx]
   14003b8ec:	add    al,BYTE PTR [rcx]
   14003b8ee:	add    al,BYTE PTR [rcx]
   14003b8f0:	adc    BYTE PTR [rax],al
   14003b8f2:	add    al,BYTE PTR [rcx]
   14003b8f4:	add    al,BYTE PTR [rcx]
   14003b8f6:	add    al,BYTE PTR [rcx]
   14003b8f8:	add    al,BYTE PTR [rcx]
   14003b8fa:	add    al,BYTE PTR [rcx]
   14003b8fc:	add    al,BYTE PTR [rcx]
   14003b8fe:	add    al,BYTE PTR [rcx]
   14003b900:	add    al,BYTE PTR [rcx]
   14003b902:	add    DWORD PTR [rcx],eax
	...
   14003b910:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14003b917:	xchg   DWORD PTR [rax-0x73747577],ecx
   14003b91d:	lea    ecx,[rsi-0x6d6e6f71]
   14003b923:	xchg   ebx,eax
   14003b924:	xchg   esp,eax
   14003b925:	xchg   ebp,eax
   14003b926:	xchg   esi,eax
   14003b927:	xchg   edi,eax
   14003b928:	cwde   
   14003b929:	cdq    
   14003b92a:	(bad)  
   14003b92b:	fwait
   14003b92c:	pushf  
   14003b92d:	popf   
   14003b92e:	sahf   
   14003b92f:	lahf   
   14003b930:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003b939:	test   eax,0xadacabaa
   14003b93e:	scas   al,BYTE PTR es:[rdi]
   14003b93f:	scas   eax,DWORD PTR es:[rdi]
   14003b940:	mov    al,0xb1
   14003b942:	mov    dl,0xb3
   14003b944:	mov    ah,0xb5
   14003b946:	mov    dh,0xb7
   14003b948:	mov    eax,0xbcbbbab9
   14003b94d:	mov    ebp,0xc1c0bfbe
   14003b952:	ret    0xc4c3
   14003b955:	(bad)
   14003b958:	enter  0xcac9,0xcb
   14003b95c:	int3   
   14003b95d:	int    0xce
   14003b95f:	iret   
   14003b960:	rcl    cl,1
   14003b962:	rcl    bl,cl
   14003b964:	(bad)  
   14003b965:	(bad)  
   14003b966:	(bad)  
   14003b967:	xlat   BYTE PTR ds:[rbx]
   14003b968:	fcomp  st(1)
   14003b96a:	fcmovu st,st(3)
   14003b96c:	(bad)  
   14003b96e:	(bad)  
   14003b970:	loopne 0x14003b953
   14003b972:	loop   0x14003b957
   14003b974:	in     al,0xe5
   14003b976:	out    0xe7,al
   14003b978:	call   0x12cefa466
   14003b97d:	in     eax,dx
   14003b97e:	out    dx,al
   14003b97f:	out    dx,eax
   14003b980:	lock icebp 
   14003b982:	repnz repz hlt 
   14003b985:	cmc    
   14003b986:	div    bh
   14003b988:	clc    
   14003b989:	stc    
   14003b98a:	cli    
   14003b98b:	sti    
   14003b98c:	cld    
   14003b98d:	std    
   14003b98e:	(bad)  
   14003b98f:	inc    DWORD PTR [rax]
   14003b991:	add    DWORD PTR [rdx],eax
   14003b993:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003b99a:	or     cl,BYTE PTR [rbx]
   14003b99c:	or     al,0xd
   14003b99e:	(bad)  
   14003b99f:	movups xmm2,XMMWORD PTR [rcx]
   14003b9a2:	adc    dl,BYTE PTR [rbx]
   14003b9a4:	adc    al,0x15
   14003b9a6:	(bad)  
   14003b9a7:	(bad)  
   14003b9a8:	sbb    BYTE PTR [rcx],bl
   14003b9aa:	sbb    bl,BYTE PTR [rbx]
   14003b9ac:	sbb    al,0x1d
   14003b9ae:	(bad)  
   14003b9af:	(bad)  
   14003b9b0:	and    BYTE PTR [rcx],ah
   14003b9b2:	and    ah,BYTE PTR [rbx]
   14003b9b4:	and    al,0x25
   14003b9b6:	es (bad) 
   14003b9b8:	sub    BYTE PTR [rcx],ch
   14003b9ba:	sub    ch,BYTE PTR [rbx]
   14003b9bc:	sub    al,0x2d
   14003b9be:	cs (bad) 
   14003b9c0:	xor    BYTE PTR [rcx],dh
   14003b9c2:	xor    dh,BYTE PTR [rbx]
   14003b9c4:	xor    al,0x35
   14003b9c6:	ss (bad) 
   14003b9c8:	cmp    BYTE PTR [rcx],bh
   14003b9ca:	cmp    bh,BYTE PTR [rbx]
   14003b9cc:	cmp    al,0x3d
   14003b9ce:	ds (bad) 
   14003b9d0:	rex (bad) 
   14003b9d2:	(bad)
   14003b9d7:	addr32 push 0x6c6b6a69
   14003b9dd:	ins    DWORD PTR es:[rdi],dx
   14003b9de:	outs   dx,BYTE PTR ds:[rsi]
   14003b9df:	outs   dx,DWORD PTR ds:[rsi]
   14003b9e0:	jo     0x14003ba53
   14003b9e2:	jb     0x14003ba57
   14003b9e4:	je     0x14003ba5b
   14003b9e6:	jbe    0x14003ba5f
   14003b9e8:	js     0x14003ba63
   14003b9ea:	jp     0x14003ba47
   14003b9ec:	pop    rsp
   14003b9ed:	pop    rbp
   14003b9ee:	pop    rsi
   14003b9ef:	pop    rdi
   14003b9f0:	(bad)  
   14003b9f1:	(bad)  
   14003b9f2:	(bad)
   14003b9f7:	addr32 push 0x6c6b6a69
   14003b9fd:	ins    DWORD PTR es:[rdi],dx
   14003b9fe:	outs   dx,BYTE PTR ds:[rsi]
   14003b9ff:	outs   dx,DWORD PTR ds:[rsi]
   14003ba00:	jo     0x14003ba73
   14003ba02:	jb     0x14003ba77
   14003ba04:	je     0x14003ba7b
   14003ba06:	jbe    0x14003ba7f
   14003ba08:	js     0x14003ba83
   14003ba0a:	jp     0x14003ba87
   14003ba0c:	jl     0x14003ba8b
   14003ba0e:	jle    0x14003ba8f
   14003ba10:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14003ba17:	xchg   DWORD PTR [rax-0x73747577],ecx
   14003ba1d:	lea    ecx,[rsi-0x6d6e6f71]
   14003ba23:	xchg   ebx,eax
   14003ba24:	xchg   esp,eax
   14003ba25:	xchg   ebp,eax
   14003ba26:	xchg   esi,eax
   14003ba27:	xchg   edi,eax
   14003ba28:	cwde   
   14003ba29:	cdq    
   14003ba2a:	(bad)  
   14003ba2b:	fwait
   14003ba2c:	pushf  
   14003ba2d:	popf   
   14003ba2e:	sahf   
   14003ba2f:	lahf   
   14003ba30:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003ba39:	test   eax,0xadacabaa
   14003ba3e:	scas   al,BYTE PTR es:[rdi]
   14003ba3f:	scas   eax,DWORD PTR es:[rdi]
   14003ba40:	mov    al,0xb1
   14003ba42:	mov    dl,0xb3
   14003ba44:	mov    ah,0xb5
   14003ba46:	mov    dh,0xb7
   14003ba48:	mov    eax,0xbcbbbab9
   14003ba4d:	mov    ebp,0xc1c0bfbe
   14003ba52:	ret    0xc4c3
   14003ba55:	(bad)
   14003ba58:	enter  0xcac9,0xcb
   14003ba5c:	int3   
   14003ba5d:	int    0xce
   14003ba5f:	iret   
   14003ba60:	rcl    cl,1
   14003ba62:	rcl    bl,cl
   14003ba64:	(bad)  
   14003ba65:	(bad)  
   14003ba66:	(bad)  
   14003ba67:	xlat   BYTE PTR ds:[rbx]
   14003ba68:	fcomp  st(1)
   14003ba6a:	fcmovu st,st(3)
   14003ba6c:	(bad)  
   14003ba6e:	(bad)  
   14003ba70:	loopne 0x14003ba53
   14003ba72:	loop   0x14003ba57
   14003ba74:	in     al,0xe5
   14003ba76:	out    0xe7,al
   14003ba78:	call   0x12cefa566
   14003ba7d:	in     eax,dx
   14003ba7e:	out    dx,al
   14003ba7f:	out    dx,eax
   14003ba80:	lock icebp 
   14003ba82:	repnz repz hlt 
   14003ba85:	cmc    
   14003ba86:	div    bh
   14003ba88:	clc    
   14003ba89:	stc    
   14003ba8a:	cli    
   14003ba8b:	sti    
   14003ba8c:	cld    
   14003ba8d:	std    
   14003ba8e:	(bad)  
   14003ba8f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14003ba95:	test   DWORD PTR [rsi-0x75767779],eax
   14003ba9b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003baa2:	xchg   edx,eax
   14003baa3:	xchg   ebx,eax
   14003baa4:	xchg   esp,eax
   14003baa5:	xchg   ebp,eax
   14003baa6:	xchg   esi,eax
   14003baa7:	xchg   edi,eax
   14003baa8:	cwde   
   14003baa9:	cdq    
   14003baaa:	(bad)  
   14003baab:	fwait
   14003baac:	pushf  
   14003baad:	popf   
   14003baae:	sahf   
   14003baaf:	lahf   
   14003bab0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003bab9:	test   eax,0xadacabaa
   14003babe:	scas   al,BYTE PTR es:[rdi]
   14003babf:	scas   eax,DWORD PTR es:[rdi]
   14003bac0:	mov    al,0xb1
   14003bac2:	mov    dl,0xb3
   14003bac4:	mov    ah,0xb5
   14003bac6:	mov    dh,0xb7
   14003bac8:	mov    eax,0xbcbbbab9
   14003bacd:	mov    ebp,0xc1c0bfbe
   14003bad2:	ret    0xc4c3
   14003bad5:	(bad)
   14003bad8:	enter  0xcac9,0xcb
   14003badc:	int3   
   14003badd:	int    0xce
   14003badf:	iret   
   14003bae0:	rcl    cl,1
   14003bae2:	rcl    bl,cl
   14003bae4:	(bad)  
   14003bae5:	(bad)  
   14003bae6:	(bad)  
   14003bae7:	xlat   BYTE PTR ds:[rbx]
   14003bae8:	fcomp  st(1)
   14003baea:	fcmovu st,st(3)
   14003baec:	(bad)  
   14003baee:	(bad)  
   14003baf0:	loopne 0x14003bad3
   14003baf2:	loop   0x14003bad7
   14003baf4:	in     al,0xe5
   14003baf6:	out    0xe7,al
   14003baf8:	call   0x12cefa5e6
   14003bafd:	in     eax,dx
   14003bafe:	out    dx,al
   14003baff:	out    dx,eax
   14003bb00:	lock icebp 
   14003bb02:	repnz repz hlt 
   14003bb05:	cmc    
   14003bb06:	div    bh
   14003bb08:	clc    
   14003bb09:	stc    
   14003bb0a:	cli    
   14003bb0b:	sti    
   14003bb0c:	cld    
   14003bb0d:	std    
   14003bb0e:	(bad)  
   14003bb0f:	inc    DWORD PTR [rax]
   14003bb11:	add    DWORD PTR [rdx],eax
   14003bb13:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003bb1a:	or     cl,BYTE PTR [rbx]
   14003bb1c:	or     al,0xd
   14003bb1e:	(bad)  
   14003bb1f:	movups xmm2,XMMWORD PTR [rcx]
   14003bb22:	adc    dl,BYTE PTR [rbx]
   14003bb24:	adc    al,0x15
   14003bb26:	(bad)  
   14003bb27:	(bad)  
   14003bb28:	sbb    BYTE PTR [rcx],bl
   14003bb2a:	sbb    bl,BYTE PTR [rbx]
   14003bb2c:	sbb    al,0x1d
   14003bb2e:	(bad)  
   14003bb2f:	(bad)  
   14003bb30:	and    BYTE PTR [rcx],ah
   14003bb32:	and    ah,BYTE PTR [rbx]
   14003bb34:	and    al,0x25
   14003bb36:	es (bad) 
   14003bb38:	sub    BYTE PTR [rcx],ch
   14003bb3a:	sub    ch,BYTE PTR [rbx]
   14003bb3c:	sub    al,0x2d
   14003bb3e:	cs (bad) 
   14003bb40:	xor    BYTE PTR [rcx],dh
   14003bb42:	xor    dh,BYTE PTR [rbx]
   14003bb44:	xor    al,0x35
   14003bb46:	ss (bad) 
   14003bb48:	cmp    BYTE PTR [rcx],bh
   14003bb4a:	cmp    bh,BYTE PTR [rbx]
   14003bb4c:	cmp    al,0x3d
   14003bb4e:	ds (bad) 
   14003bb50:	rex
   14003bb51:	rex.B
   14003bb52:	rex.X
   14003bb53:	rex.XB
   14003bb54:	rex.R
   14003bb55:	rex.RB
   14003bb56:	rex.RX
   14003bb57:	rex.RXB
   14003bb58:	rex.W
   14003bb59:	rex.WB
   14003bb5a:	rex.WX
   14003bb5b:	rex.WXB
   14003bb5c:	rex.WR
   14003bb5d:	rex.WRB
   14003bb5e:	rex.WRX
   14003bb5f:	rex.WRXB push r8
   14003bb61:	push   rcx
   14003bb62:	push   rdx
   14003bb63:	push   rbx
   14003bb64:	push   rsp
   14003bb65:	push   rbp
   14003bb66:	push   rsi
   14003bb67:	push   rdi
   14003bb68:	pop    rax
   14003bb69:	pop    rcx
   14003bb6a:	pop    rdx
   14003bb6b:	pop    rbx
   14003bb6c:	pop    rsp
   14003bb6d:	pop    rbp
   14003bb6e:	pop    rsi
   14003bb6f:	pop    rdi
   14003bb70:	(bad)  
   14003bb71:	rex.B
   14003bb72:	rex.X
   14003bb73:	rex.XB
   14003bb74:	rex.R
   14003bb75:	rex.RB
   14003bb76:	rex.RX
   14003bb77:	rex.RXB
   14003bb78:	rex.W
   14003bb79:	rex.WB
   14003bb7a:	rex.WX
   14003bb7b:	rex.WXB
   14003bb7c:	rex.WR
   14003bb7d:	rex.WRB
   14003bb7e:	rex.WRX
   14003bb7f:	rex.WRXB push r8
   14003bb81:	push   rcx
   14003bb82:	push   rdx
   14003bb83:	push   rbx
   14003bb84:	push   rsp
   14003bb85:	push   rbp
   14003bb86:	push   rsi
   14003bb87:	push   rdi
   14003bb88:	pop    rax
   14003bb89:	pop    rcx
   14003bb8a:	pop    rdx
   14003bb8b:	jnp    0x14003bc09
   14003bb8d:	jge    0x14003bc0d
   14003bb8f:	jg     0x14003bb11
   14003bb91:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14003bb9b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003bba2:	xchg   edx,eax
   14003bba3:	xchg   ebx,eax
   14003bba4:	xchg   esp,eax
   14003bba5:	xchg   ebp,eax
   14003bba6:	xchg   esi,eax
   14003bba7:	xchg   edi,eax
   14003bba8:	cwde   
   14003bba9:	cdq    
   14003bbaa:	(bad)  
   14003bbab:	fwait
   14003bbac:	pushf  
   14003bbad:	popf   
   14003bbae:	sahf   
   14003bbaf:	lahf   
   14003bbb0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003bbb9:	test   eax,0xadacabaa
   14003bbbe:	scas   al,BYTE PTR es:[rdi]
   14003bbbf:	scas   eax,DWORD PTR es:[rdi]
   14003bbc0:	mov    al,0xb1
   14003bbc2:	mov    dl,0xb3
   14003bbc4:	mov    ah,0xb5
   14003bbc6:	mov    dh,0xb7
   14003bbc8:	mov    eax,0xbcbbbab9
   14003bbcd:	mov    ebp,0xc1c0bfbe
   14003bbd2:	ret    0xc4c3
   14003bbd5:	(bad)
   14003bbd8:	enter  0xcac9,0xcb
   14003bbdc:	int3   
   14003bbdd:	int    0xce
   14003bbdf:	iret   
   14003bbe0:	rcl    cl,1
   14003bbe2:	rcl    bl,cl
   14003bbe4:	(bad)  
   14003bbe5:	(bad)  
   14003bbe6:	(bad)  
   14003bbe7:	xlat   BYTE PTR ds:[rbx]
   14003bbe8:	fcomp  st(1)
   14003bbea:	fcmovu st,st(3)
   14003bbec:	(bad)  
   14003bbee:	(bad)  
   14003bbf0:	loopne 0x14003bbd3
   14003bbf2:	loop   0x14003bbd7
   14003bbf4:	in     al,0xe5
   14003bbf6:	out    0xe7,al
   14003bbf8:	call   0x12cefa6e6
   14003bbfd:	in     eax,dx
   14003bbfe:	out    dx,al
   14003bbff:	out    dx,eax
   14003bc00:	lock icebp 
   14003bc02:	repnz repz hlt 
   14003bc05:	cmc    
   14003bc06:	div    bh
   14003bc08:	clc    
   14003bc09:	stc    
   14003bc0a:	cli    
   14003bc0b:	sti    
   14003bc0c:	cld    
   14003bc0d:	std    
   14003bc0e:	(bad)  
   14003bc0f:	inc    DWORD PTR [rbx+0x0]
   14003bc12:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003bc16:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14003bc1a:	push   rsp
   14003bc1b:	add    BYTE PTR [rax+rax*1],ah
   14003bc1e:	add    BYTE PTR [rax],al
   14003bc20:	add    DWORD PTR [rdx],eax
   14003bc22:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003bc29:	or     cl,BYTE PTR [rbx]
   14003bc2b:	or     al,0xd
   14003bc2d:	(bad)  
   14003bc2e:	movups xmm2,XMMWORD PTR [rcx]
   14003bc31:	adc    dl,BYTE PTR [rbx]
   14003bc33:	adc    al,0x15
   14003bc35:	(bad)  
   14003bc36:	(bad)  
   14003bc37:	sbb    BYTE PTR [rcx],bl
   14003bc39:	sbb    bl,BYTE PTR [rbx]
   14003bc3b:	sbb    al,0x1d
   14003bc3d:	(bad)  
   14003bc3e:	(bad)  
   14003bc3f:	and    BYTE PTR [rcx],ah
   14003bc41:	and    ah,BYTE PTR [rbx]
   14003bc43:	and    al,0x25
   14003bc45:	es (bad) 
   14003bc47:	sub    BYTE PTR [rcx],ch
   14003bc49:	sub    ch,BYTE PTR [rbx]
   14003bc4b:	sub    al,0x2d
   14003bc4d:	cs (bad) 
   14003bc4f:	xor    BYTE PTR [rcx],dh
   14003bc51:	xor    dh,BYTE PTR [rbx]
   14003bc53:	xor    al,0x35
   14003bc55:	ss (bad) 
   14003bc57:	cmp    BYTE PTR [rcx],bh
   14003bc59:	cmp    bh,BYTE PTR [rbx]
   14003bc5b:	cmp    al,0x3d
   14003bc5d:	ds (bad) 
   14003bc5f:	rex
   14003bc60:	rex.B
   14003bc61:	rex.X
   14003bc62:	rex.XB
   14003bc63:	rex.R
   14003bc64:	rex.RB
   14003bc65:	rex.RX
   14003bc66:	rex.RXB
   14003bc67:	rex.W
   14003bc68:	rex.WB
   14003bc69:	rex.WX
   14003bc6a:	rex.WXB
   14003bc6b:	rex.WR
   14003bc6c:	rex.WRB
   14003bc6d:	rex.WRX
   14003bc6e:	rex.WRXB push r8
   14003bc70:	push   rcx
   14003bc71:	push   rdx
   14003bc72:	push   rbx
   14003bc73:	push   rsp
   14003bc74:	push   rbp
   14003bc75:	push   rsi
   14003bc76:	push   rdi
   14003bc77:	pop    rax
   14003bc78:	pop    rcx
   14003bc79:	pop    rdx
   14003bc7a:	pop    rbx
   14003bc7b:	pop    rsp
   14003bc7c:	pop    rbp
   14003bc7d:	pop    rsi
   14003bc7e:	pop    rdi
   14003bc7f:	(bad)  
   14003bc80:	(bad)  
   14003bc81:	(bad)
   14003bc86:	addr32 push 0x6c6b6a69
   14003bc8c:	ins    DWORD PTR es:[rdi],dx
   14003bc8d:	outs   dx,BYTE PTR ds:[rsi]
   14003bc8e:	outs   dx,DWORD PTR ds:[rsi]
   14003bc8f:	jo     0x14003bd02
   14003bc91:	jb     0x14003bd06
   14003bc93:	je     0x14003bd0a
   14003bc95:	jbe    0x14003bd0e
   14003bc97:	js     0x14003bd12
   14003bc99:	jp     0x14003bd16
   14003bc9b:	jl     0x14003bd1a
   14003bc9d:	jle    0x14003bd1e
   14003bc9f:	add    BYTE PTR [rip+0x0],al        # 0x14003bca5
   14003bca5:	add    BYTE PTR [rax],al
   14003bca7:	add    BYTE PTR [rax-0x3a],al
   14003bcaa:	add    eax,DWORD PTR [rax+0x1]
   14003bcad:	add    BYTE PTR [rax],al
   14003bcaf:	add    BYTE PTR [rdi+0x0],dh
   14003bcb5:	add    BYTE PTR [rax],al
   14003bcb7:	add    BYTE PTR [rax-0x3a],bl
   14003bcba:	add    eax,DWORD PTR [rax+0x1]
   14003bcbd:	add    BYTE PTR [rax],al
   14003bcbf:	add    BYTE PTR [rax+rax*1],dl
   14003bcc2:	add    BYTE PTR [rax],al
   14003bcc4:	add    BYTE PTR [rax],al
   14003bcc6:	add    BYTE PTR [rax],al
   14003bcc8:	push   0x14003c6
   14003bccd:	add    BYTE PTR [rax],al
   14003bccf:	add    BYTE PTR [rdi+0x0],ch
   14003bcd2:	add    BYTE PTR [rax],al
   14003bcd4:	add    BYTE PTR [rax],al
   14003bcd6:	add    BYTE PTR [rax],al
   14003bcd8:	js     0x14003bca0
   14003bcda:	add    eax,DWORD PTR [rax+0x1]
   14003bcdd:	add    BYTE PTR [rax],al
   14003bcdf:	add    BYTE PTR [rdx+0x0],ch
   14003bce5:	add    BYTE PTR [rax],al
   14003bce7:	add    BYTE PTR [rax+0x14003c6],dl
   14003bced:	add    BYTE PTR [rax],al
   14003bcef:	add    BYTE PTR [rsi+0x0],cl
   14003bcf5:	add    BYTE PTR [rax],al
   14003bcf7:	add    BYTE PTR [rax+0x14003c6],dl
   14003bcfd:	add    BYTE PTR [rax],al
   14003bcff:	add    BYTE PTR [rdx+0x0],dl
   14003bd02:	add    BYTE PTR [rax],al
   14003bd04:	add    BYTE PTR [rax],al
   14003bd06:	add    BYTE PTR [rax],al
   14003bd08:	rex mov BYTE PTR [rbx],0x40
   14003bd0c:	add    DWORD PTR [rax],eax
   14003bd0e:	add    BYTE PTR [rax],al
   14003bd10:	repz add eax,DWORD PTR [rax]
   14003bd13:	add    BYTE PTR [rax],al
   14003bd15:	add    BYTE PTR [rax],al
   14003bd17:	add    BYTE PTR [rax+0x14003c6],ch
   14003bd1d:	add    BYTE PTR [rax],al
   14003bd1f:	add    ah,dh
   14003bd21:	add    eax,DWORD PTR [rax]
   14003bd23:	add    BYTE PTR [rax],al
   14003bd25:	add    BYTE PTR [rax],al
   14003bd27:	add    BYTE PTR [rax+0x14003c6],ch
   14003bd2d:	add    BYTE PTR [rax],al
   14003bd2f:	add    ch,dh
   14003bd31:	add    eax,DWORD PTR [rax]
   14003bd33:	add    BYTE PTR [rax],al
   14003bd35:	add    BYTE PTR [rax],al
   14003bd37:	add    BYTE PTR [rax+0x14003c6],ch
   14003bd3d:	add    BYTE PTR [rax],al
   14003bd3f:	add    BYTE PTR [rax],dl
   14003bd41:	add    BYTE PTR [rax],al
   14003bd43:	add    BYTE PTR [rax],al
   14003bd45:	add    BYTE PTR [rax],al
   14003bd47:	add    BYTE PTR [rax-0x3a],al
   14003bd4a:	add    eax,DWORD PTR [rax+0x1]
   14003bd4d:	add    BYTE PTR [rax],al
   14003bd4f:	add    BYTE PTR [rdi],dh
   14003bd51:	add    BYTE PTR [rax],al
   14003bd53:	add    BYTE PTR [rax],al
   14003bd55:	add    BYTE PTR [rax],al
   14003bd57:	add    BYTE PTR [rax-0x3a],ch
   14003bd5a:	add    eax,DWORD PTR [rax+0x1]
   14003bd5d:	add    BYTE PTR [rax],al
   14003bd5f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   14003bd63:	add    BYTE PTR [rax],al
   14003bd65:	add    BYTE PTR [rax],al
   14003bd67:	add    BYTE PTR [rax+0x14003c6],dl
   14003bd6d:	add    BYTE PTR [rax],al
   14003bd6f:	add    BYTE PTR [rcx+0x0],dl
   14003bd75:	add    BYTE PTR [rax],al
   14003bd77:	add    BYTE PTR [rax+0x14003c6],bh
   14003bd7d:	add    BYTE PTR [rax],al
   14003bd7f:	add    BYTE PTR [rbx],cl
   14003bd81:	add    DWORD PTR [rax],eax
   14003bd83:	add    BYTE PTR [rax],al
   14003bd85:	add    BYTE PTR [rax],al
   14003bd87:	add    al,dl
   14003bd89:	mov    BYTE PTR [rbx],0x40
   14003bd8c:	add    DWORD PTR [rax],eax
   14003bd8e:	add    BYTE PTR [rax],al
   14003bd90:	jo     0x14003bd92
   14003bd92:	add    BYTE PTR [rax],al
   14003bd94:	add    BYTE PTR [rax],al
   14003bd96:	add    BYTE PTR [rax],al
   14003bd98:	call   0x14143c163
   14003bd9d:	add    BYTE PTR [rax],al
   14003bd9f:	add    BYTE PTR [rax+0x0],dl
   14003bda2:	add    BYTE PTR [rax],al
   14003bda4:	add    BYTE PTR [rax],al
   14003bda6:	add    BYTE PTR [rax],al
   14003bda8:	pop    rax
   14003bda9:	mov    BYTE PTR [rbx],0x40
   14003bdac:	add    DWORD PTR [rax],eax
   14003bdae:	add    BYTE PTR [rax],al
   14003bdb0:	add    al,BYTE PTR [rax]
   14003bdb2:	add    BYTE PTR [rax],al
   14003bdb4:	add    BYTE PTR [rax],al
   14003bdb6:	add    BYTE PTR [rax],al
   14003bdb8:	add    bh,al
   14003bdba:	add    eax,DWORD PTR [rax+0x1]
   14003bdbd:	add    BYTE PTR [rax],al
   14003bdbf:	add    BYTE PTR [rdi],ah
   14003bdc1:	add    BYTE PTR [rax],al
   14003bdc3:	add    BYTE PTR [rax],al
   14003bdc5:	add    BYTE PTR [rax],al
   14003bdc7:	add    al,ch
   14003bdc9:	mov    BYTE PTR [rbx],0x40
   14003bdcc:	add    DWORD PTR [rax],eax
   14003bdce:	add    BYTE PTR [rax],al
   14003bdd0:	or     al,0x0
   14003bdd2:	add    BYTE PTR [rax],al
   14003bdd4:	add    BYTE PTR [rax],al
   14003bdd6:	add    BYTE PTR [rax],al
   14003bdd8:	rex mov BYTE PTR [rbx],0x40
   14003bddc:	add    DWORD PTR [rax],eax
   14003bdde:	add    BYTE PTR [rax],al
   14003bde0:	sldt   WORD PTR [rax]
   14003bde3:	add    BYTE PTR [rax],al
   14003bde5:	add    BYTE PTR [rax],al
   14003bde7:	add    BYTE PTR [rax-0x3a],ch
   14003bdea:	add    eax,DWORD PTR [rax+0x1]
   14003bded:	add    BYTE PTR [rax],al
   14003bdef:	add    BYTE PTR [rcx],al
   14003bdf1:	add    BYTE PTR [rax],al
   14003bdf3:	add    BYTE PTR [rax],al
   14003bdf5:	add    BYTE PTR [rax],al
   14003bdf7:	add    BYTE PTR [rax],ah
   14003bdf9:	mov    DWORD PTR [rbx],0x140
   14003bdff:	add    BYTE PTR [rsi],al
   14003be01:	add    BYTE PTR [rax],al
   14003be03:	add    BYTE PTR [rax],al
   14003be05:	add    BYTE PTR [rax],al
   14003be07:	add    al,dl
   14003be09:	mov    BYTE PTR [rbx],0x40
   14003be0c:	add    DWORD PTR [rax],eax
   14003be0e:	add    BYTE PTR [rax],al
   14003be10:	jnp    0x14003be12
   14003be12:	add    BYTE PTR [rax],al
   14003be14:	add    BYTE PTR [rax],al
   14003be16:	add    BYTE PTR [rax],al
   14003be18:	rol    dh,1
   14003be1a:	add    eax,DWORD PTR [rax+0x1]
   14003be1d:	add    BYTE PTR [rax],al
   14003be1f:	add    BYTE PTR [rcx],ah
   14003be21:	add    BYTE PTR [rax],al
   14003be23:	add    BYTE PTR [rax],al
   14003be25:	add    BYTE PTR [rax],al
   14003be27:	add    BYTE PTR [rax],bh
   14003be29:	mov    DWORD PTR [rbx],0x140
   14003be2f:	add    ah,dl
   14003be31:	add    BYTE PTR [rax],al
   14003be33:	add    BYTE PTR [rax],al
   14003be35:	add    BYTE PTR [rax],al
   14003be37:	add    BYTE PTR [rax],bh
   14003be39:	mov    DWORD PTR [rbx],0x140
   14003be3f:	add    BYTE PTR [rbx+0x0],al
   14003be45:	add    BYTE PTR [rax],al
   14003be47:	add    al,dl
   14003be49:	mov    BYTE PTR [rbx],0x40
   14003be4c:	add    DWORD PTR [rax],eax
   14003be4e:	add    BYTE PTR [rax],al
   14003be50:	out    0x3,al
   14003be52:	add    BYTE PTR [rax],al
   14003be54:	add    BYTE PTR [rax],al
   14003be56:	add    BYTE PTR [rax],al
   14003be58:	rex mov BYTE PTR [rbx],0x40
   14003be5c:	add    DWORD PTR [rax],eax
   14003be5e:	add    BYTE PTR [rax],al
   14003be60:	or     BYTE PTR [rax],al
   14003be62:	add    BYTE PTR [rax],al
   14003be64:	add    BYTE PTR [rax],al
   14003be66:	add    BYTE PTR [rax],al
   14003be68:	push   rax
   14003be69:	mov    DWORD PTR [rbx],0x140
   14003be6f:	add    BYTE PTR [rip+0x0],dl        # 0x14003be75
   14003be75:	add    BYTE PTR [rax],al
   14003be77:	add    BYTE PTR [rax-0x39],ch
   14003be7a:	add    eax,DWORD PTR [rax+0x1]
   14003be7d:	add    BYTE PTR [rax],al
   14003be7f:	add    BYTE PTR [rcx],dl
   14003be81:	add    BYTE PTR [rax],al
   14003be83:	add    BYTE PTR [rax],al
   14003be85:	add    BYTE PTR [rax],al
   14003be87:	add    BYTE PTR [rax+0x14003c7],cl
   14003be8d:	add    BYTE PTR [rax],al
   14003be8f:	add    BYTE PTR [rsi+0x0],ch
   14003be92:	add    BYTE PTR [rax],al
   14003be94:	add    BYTE PTR [rax],al
   14003be96:	add    BYTE PTR [rax],al
   14003be98:	test   al,0xc6
   14003be9a:	add    eax,DWORD PTR [rax+0x1]
   14003be9d:	add    BYTE PTR [rax],al
   14003be9f:	add    BYTE PTR [rcx+0x9],ah
   14003bea2:	add    BYTE PTR [rax],al
   14003bea4:	add    BYTE PTR [rax],al
   14003bea6:	add    BYTE PTR [rax],al
   14003bea8:	nop
   14003bea9:	mov    BYTE PTR [rbx],0x40
   14003beac:	add    DWORD PTR [rax],eax
   14003beae:	add    BYTE PTR [rax],al
   14003beb0:	jrcxz  0x14003beb5
   14003beb2:	add    BYTE PTR [rax],al
   14003beb4:	add    BYTE PTR [rax],al
   14003beb6:	add    BYTE PTR [rax],al
   14003beb8:	movabs al,ds:0xe000000014003c7
   14003bec1:	add    BYTE PTR [rax],al
   14003bec3:	add    BYTE PTR [rax],al
   14003bec5:	add    BYTE PTR [rax],al
   14003bec7:	add    BYTE PTR [rax-0x39],dl
   14003beca:	add    eax,DWORD PTR [rax+0x1]
   14003becd:	add    BYTE PTR [rax],al
   14003becf:	add    BYTE PTR [rbx],al
	...
   14003bed9:	mov    DWORD PTR [rbx],0x140
   14003bedf:	add    BYTE PTR [rsi],bl
   14003bee1:	add    BYTE PTR [rax],al
   14003bee3:	add    BYTE PTR [rax],al
   14003bee5:	add    BYTE PTR [rax],al
   14003bee7:	add    BYTE PTR [rax+0x14003c6],ch
   14003beed:	add    BYTE PTR [rax],al
   14003beef:	add    ch,dl
   14003bef1:	add    al,0x0
   14003bef3:	add    BYTE PTR [rax],al
   14003bef5:	add    BYTE PTR [rax],al
   14003bef7:	add    BYTE PTR [rax-0x39],ch
   14003befa:	add    eax,DWORD PTR [rax+0x1]
   14003befd:	add    BYTE PTR [rax],al
   14003beff:	add    BYTE PTR [rcx],bl
   14003bf01:	add    BYTE PTR [rax],al
   14003bf03:	add    BYTE PTR [rax],al
   14003bf05:	add    BYTE PTR [rax],al
   14003bf07:	add    BYTE PTR [rax+0x14003c6],ch
   14003bf0d:	add    BYTE PTR [rax],al
   14003bf0f:	add    BYTE PTR [rax],ah
   14003bf11:	add    BYTE PTR [rax],al
   14003bf13:	add    BYTE PTR [rax],al
   14003bf15:	add    BYTE PTR [rax],al
   14003bf17:	add    BYTE PTR [rax-0x3a],al
   14003bf1a:	add    eax,DWORD PTR [rax+0x1]
   14003bf1d:	add    BYTE PTR [rax],al
   14003bf1f:	add    BYTE PTR [rax+rax*1],al
   14003bf22:	add    BYTE PTR [rax],al
   14003bf24:	add    BYTE PTR [rax],al
   14003bf26:	add    BYTE PTR [rax],al
   14003bf28:	mov    eax,0x14003c7
   14003bf2d:	add    BYTE PTR [rax],al
   14003bf2f:	add    BYTE PTR [rip+0x0],bl        # 0x14003bf35
   14003bf35:	add    BYTE PTR [rax],al
   14003bf37:	add    BYTE PTR [rax+0x14003c6],ch
   14003bf3d:	add    BYTE PTR [rax],al
   14003bf3f:	add    BYTE PTR [rbx],dl
   14003bf41:	add    BYTE PTR [rax],al
   14003bf43:	add    BYTE PTR [rax],al
   14003bf45:	add    BYTE PTR [rax],al
   14003bf47:	add    BYTE PTR [rax-0x3a],al
   14003bf4a:	add    eax,DWORD PTR [rax+0x1]
   14003bf4d:	add    BYTE PTR [rax],al
   14003bf4f:	add    BYTE PTR [rip+0x27],bl        # 0x14003bf7c
   14003bf55:	add    BYTE PTR [rax],al
   14003bf57:	add    al,dl
   14003bf59:	mov    DWORD PTR [rbx],0x140
   14003bf5f:	add    BYTE PTR [rax+0x27],al
   14003bf62:	add    BYTE PTR [rax],al
   14003bf64:	add    BYTE PTR [rax],al
   14003bf66:	add    BYTE PTR [rax],al
   14003bf68:	call   0x14143c334
   14003bf6d:	add    BYTE PTR [rax],al
   14003bf6f:	add    BYTE PTR [rcx+0x27],al
   14003bf72:	add    BYTE PTR [rax],al
   14003bf74:	add    BYTE PTR [rax],al
   14003bf76:	add    BYTE PTR [rax],al
   14003bf78:	clc    
   14003bf79:	mov    DWORD PTR [rbx],0x140
   14003bf7f:	add    BYTE PTR [rdi],bh
   14003bf81:	(bad)  
   14003bf82:	add    BYTE PTR [rax],al
   14003bf84:	add    BYTE PTR [rax],al
   14003bf86:	add    BYTE PTR [rax],al
   14003bf88:	adc    al,cl
   14003bf8a:	add    eax,DWORD PTR [rax+0x1]
   14003bf8d:	add    BYTE PTR [rax],al
   14003bf8f:	add    BYTE PTR [rip+0x27],dh        # 0x14003bfbc
   14003bf95:	add    BYTE PTR [rax],al
   14003bf97:	add    BYTE PTR [rax],dh
   14003bf99:	enter  0x4003,0x1
   14003bf9d:	add    BYTE PTR [rax],al
   14003bf9f:	add    BYTE PTR [rcx],bl
   14003bfa1:	(bad)  
   14003bfa2:	add    BYTE PTR [rax],al
   14003bfa4:	add    BYTE PTR [rax],al
   14003bfa6:	add    BYTE PTR [rax],al
   14003bfa8:	push   rax
   14003bfa9:	enter  0x4003,0x1
   14003bfad:	add    BYTE PTR [rax],al
   14003bfaf:	add    BYTE PTR [rbp+0x27],al
   14003bfb2:	add    BYTE PTR [rax],al
   14003bfb4:	add    BYTE PTR [rax],al
   14003bfb6:	add    BYTE PTR [rax],al
   14003bfb8:	push   0x14003c8
   14003bfbd:	add    BYTE PTR [rax],al
   14003bfbf:	add    BYTE PTR [rbp+0x27],cl
   14003bfc2:	add    BYTE PTR [rax],al
   14003bfc4:	add    BYTE PTR [rax],al
   14003bfc6:	add    BYTE PTR [rax],al
   14003bfc8:	or     al,0x3
   14003bfcb:	rex add DWORD PTR [rax],eax
   14003bfce:	add    BYTE PTR [rax],al
   14003bfd0:	rex.RX (bad) 
   14003bfd2:	add    BYTE PTR [rax],al
   14003bfd4:	add    BYTE PTR [rax],al
   14003bfd6:	add    BYTE PTR [rax],al
   14003bfd8:	cwde   
   14003bfd9:	enter  0x4003,0x1
   14003bfdd:	add    BYTE PTR [rax],al
   14003bfdf:	add    BYTE PTR [rdi],dh
   14003bfe1:	(bad)  
   14003bfe2:	add    BYTE PTR [rax],al
   14003bfe4:	add    BYTE PTR [rax],al
   14003bfe6:	add    BYTE PTR [rax],al
   14003bfe8:	mov    al,0xc8
   14003bfea:	add    eax,DWORD PTR [rax+0x1]
   14003bfed:	add    BYTE PTR [rax],al
   14003bfef:	add    BYTE PTR [rsi],bl
   14003bff1:	(bad)  
   14003bff2:	add    BYTE PTR [rax],al
   14003bff4:	add    BYTE PTR [rax],al
   14003bff6:	add    BYTE PTR [rax],al
   14003bff8:	ror    al,1
   14003bffa:	add    eax,DWORD PTR [rax+0x1]
   14003bffd:	add    BYTE PTR [rax],al
   14003bfff:	add    BYTE PTR [rcx+0x27],dl
   14003c002:	add    BYTE PTR [rax],al
   14003c004:	add    BYTE PTR [rax],al
   14003c006:	add    BYTE PTR [rax],al
   14003c008:	loopne 0x14003bfd2
   14003c00a:	add    eax,DWORD PTR [rax+0x1]
   14003c00d:	add    BYTE PTR [rax],al
   14003c00f:	add    BYTE PTR [rdi+riz*1],dh
   14003c012:	add    BYTE PTR [rax],al
   14003c014:	add    BYTE PTR [rax],al
   14003c016:	add    BYTE PTR [rax],al
   14003c018:	clc    
   14003c019:	enter  0x4003,0x1
   14003c01d:	add    BYTE PTR [rax],al
   14003c01f:	add    BYTE PTR [rdi+riz*1],dl
   14003c022:	add    BYTE PTR [rax],al
   14003c024:	add    BYTE PTR [rax],al
   14003c026:	add    BYTE PTR [rax],al
   14003c028:	adc    cl,cl
   14003c02a:	add    eax,DWORD PTR [rax+0x1]
   14003c02d:	add    BYTE PTR [rax],al
   14003c02f:	add    BYTE PTR [rsi],ah
   14003c031:	(bad)  
   14003c032:	add    BYTE PTR [rax],al
   14003c034:	add    BYTE PTR [rax],al
   14003c036:	add    BYTE PTR [rax],al
   14003c038:	and    cl,cl
   14003c03a:	add    eax,DWORD PTR [rax+0x1]
   14003c03d:	add    BYTE PTR [rax],al
   14003c03f:	add    BYTE PTR [rax+0x27],cl
   14003c042:	add    BYTE PTR [rax],al
   14003c044:	add    BYTE PTR [rax],al
   14003c046:	add    BYTE PTR [rax],al
   14003c048:	cmp    cl,cl
   14003c04a:	add    eax,DWORD PTR [rax+0x1]
   14003c04d:	add    BYTE PTR [rax],al
   14003c04f:	add    BYTE PTR [rax],ch
   14003c051:	(bad)  
   14003c052:	add    BYTE PTR [rax],al
   14003c054:	add    BYTE PTR [rax],al
   14003c056:	add    BYTE PTR [rax],al
   14003c058:	push   rax
   14003c059:	leave  
   14003c05a:	add    eax,DWORD PTR [rax+0x1]
   14003c05d:	add    BYTE PTR [rax],al
   14003c05f:	add    BYTE PTR [rax],bh
   14003c061:	(bad)  
   14003c062:	add    BYTE PTR [rax],al
   14003c064:	add    BYTE PTR [rax],al
   14003c066:	add    BYTE PTR [rax],al
   14003c068:	push   0x14003c9
   14003c06d:	add    BYTE PTR [rax],al
   14003c06f:	add    BYTE PTR [rdi+0x27],cl
   14003c072:	add    BYTE PTR [rax],al
   14003c074:	add    BYTE PTR [rax],al
   14003c076:	add    BYTE PTR [rax],al
   14003c078:	js     0x14003c043
   14003c07a:	add    eax,DWORD PTR [rax+0x1]
   14003c07d:	add    BYTE PTR [rax],al
   14003c07f:	add    BYTE PTR [rdx+0x27],al
   14003c082:	add    BYTE PTR [rax],al
   14003c084:	add    BYTE PTR [rax],al
   14003c086:	add    BYTE PTR [rax],al
   14003c088:	nop
   14003c089:	leave  
   14003c08a:	add    eax,DWORD PTR [rax+0x1]
   14003c08d:	add    BYTE PTR [rax],al
   14003c08f:	add    BYTE PTR [rdi+riz*1+0x0],al
   14003c093:	add    BYTE PTR [rax],al
   14003c095:	add    BYTE PTR [rax],al
   14003c097:	add    BYTE PTR [rax+0x14003c9],ah
   14003c09d:	add    BYTE PTR [rax],al
   14003c09f:	add    BYTE PTR [rbx+0x27],al
   14003c0a2:	add    BYTE PTR [rax],al
   14003c0a4:	add    BYTE PTR [rax],al
   14003c0a6:	add    BYTE PTR [rax],al
   14003c0a8:	mov    al,0xc9
   14003c0aa:	add    eax,DWORD PTR [rax+0x1]
   14003c0ad:	add    BYTE PTR [rax],al
   14003c0af:	add    BYTE PTR [rdi+0x27],al
   14003c0b2:	add    BYTE PTR [rax],al
   14003c0b4:	add    BYTE PTR [rax],al
   14003c0b6:	add    BYTE PTR [rax],al
   14003c0b8:	enter  0x3c9,0x40
   14003c0bc:	add    DWORD PTR [rax],eax
   14003c0be:	add    BYTE PTR [rax],al
   14003c0c0:	cmp    ah,BYTE PTR [rdi]
   14003c0c2:	add    BYTE PTR [rax],al
   14003c0c4:	add    BYTE PTR [rax],al
   14003c0c6:	add    BYTE PTR [rax],al
   14003c0c8:	fmul   st,st(1)
   14003c0ca:	add    eax,DWORD PTR [rax+0x1]
   14003c0cd:	add    BYTE PTR [rax],al
   14003c0cf:	add    BYTE PTR [rcx+0x27],cl
   14003c0d2:	add    BYTE PTR [rax],al
   14003c0d4:	add    BYTE PTR [rax],al
   14003c0d6:	add    BYTE PTR [rax],al
   14003c0d8:	lock leave 
   14003c0da:	add    eax,DWORD PTR [rax+0x1]
   14003c0dd:	add    BYTE PTR [rax],al
   14003c0df:	add    BYTE PTR [rsi],dh
   14003c0e1:	(bad)  
   14003c0e2:	add    BYTE PTR [rax],al
   14003c0e4:	add    BYTE PTR [rax],al
   14003c0e6:	add    BYTE PTR [rax],al
   14003c0e8:	add    dl,cl
   14003c0ea:	add    eax,DWORD PTR [rax+0x1]
   14003c0ed:	add    BYTE PTR [rax],al
   14003c0ef:	add    BYTE PTR [rip+0x27],bh        # 0x14003c11c
   14003c0f5:	add    BYTE PTR [rax],al
   14003c0f7:	add    BYTE PTR [rax],dl
   14003c0f9:	retf   0x4003
   14003c0fc:	add    DWORD PTR [rax],eax
   14003c0fe:	add    BYTE PTR [rax],al
   14003c100:	cmp    esp,DWORD PTR [rdi]
   14003c102:	add    BYTE PTR [rax],al
   14003c104:	add    BYTE PTR [rax],al
   14003c106:	add    BYTE PTR [rax],al
   14003c108:	sub    dl,cl
   14003c10a:	add    eax,DWORD PTR [rax+0x1]
   14003c10d:	add    BYTE PTR [rax],al
   14003c10f:	add    BYTE PTR [rcx],bh
   14003c111:	(bad)  
   14003c112:	add    BYTE PTR [rax],al
   14003c114:	add    BYTE PTR [rax],al
   14003c116:	add    BYTE PTR [rax],al
   14003c118:	rex retf 0x4003
   14003c11c:	add    DWORD PTR [rax],eax
   14003c11e:	add    BYTE PTR [rax],al
   14003c120:	rex.WR (bad) 
   14003c122:	add    BYTE PTR [rax],al
   14003c124:	add    BYTE PTR [rax],al
   14003c126:	add    BYTE PTR [rax],al
   14003c128:	pop    rax
   14003c129:	retf   0x4003
   14003c12c:	add    DWORD PTR [rax],eax
   14003c12e:	add    BYTE PTR [rax],al
   14003c130:	xor    esp,DWORD PTR [rdi]
   14003c132:	add    BYTE PTR [rax],al
   14003c134:	add    BYTE PTR [rax],al
   14003c136:	add    BYTE PTR [rax],al
   14003c138:	push   0x14003ca
	...
   14003c14d:	add    BYTE PTR [rax],al
   14003c14f:	add    BYTE PTR [rsi+0x0],ah
   14003c152:	add    BYTE PTR [rax],al
   14003c154:	add    BYTE PTR [rax],al
   14003c156:	add    BYTE PTR [rax],al
   14003c158:	or     dl,0x3
   14003c15b:	rex add DWORD PTR [rax],eax
   14003c15e:	add    BYTE PTR [rax],al
   14003c160:	add    BYTE PTR fs:[rax],al
   14003c163:	add    BYTE PTR [rax],al
   14003c165:	add    BYTE PTR [rax],al
   14003c167:	add    BYTE PTR [rax+0x14003ca],ah
   14003c16d:	add    BYTE PTR [rax],al
   14003c16f:	add    BYTE PTR [rbp+0x0],ah
   14003c172:	add    BYTE PTR [rax],al
   14003c174:	add    BYTE PTR [rax],al
   14003c176:	add    BYTE PTR [rax],al
   14003c178:	mov    al,0xca
   14003c17a:	add    eax,DWORD PTR [rax+0x1]
   14003c17d:	add    BYTE PTR [rax],al
   14003c17f:	add    BYTE PTR [rcx+0x0],dh
   14003c182:	add    BYTE PTR [rax],al
   14003c184:	add    BYTE PTR [rax],al
   14003c186:	add    BYTE PTR [rax],al
   14003c188:	enter  0x3ca,0x40
   14003c18c:	add    DWORD PTR [rax],eax
   14003c18e:	add    BYTE PTR [rax],al
   14003c190:	(bad)  
   14003c191:	add    BYTE PTR [rax],al
   14003c193:	add    BYTE PTR [rax],al
   14003c195:	add    BYTE PTR [rax],al
   14003c197:	add    al,ah
   14003c199:	retf   0x4003
   14003c19c:	add    DWORD PTR [rax],eax
   14003c19e:	add    BYTE PTR [rax],al
   14003c1a0:	and    DWORD PTR [rax],eax
   14003c1a2:	add    BYTE PTR [rax],al
   14003c1a4:	add    BYTE PTR [rax],al
   14003c1a6:	add    BYTE PTR [rax],al
   14003c1a8:	clc    
   14003c1a9:	retf   0x4003
   14003c1ac:	add    DWORD PTR [rax],eax
   14003c1ae:	add    BYTE PTR [rax],al
   14003c1b0:	(bad)  
   14003c1b1:	add    BYTE PTR [rax],al
   14003c1b3:	add    BYTE PTR [rax],al
   14003c1b5:	add    BYTE PTR [rax],al
   14003c1b7:	add    BYTE PTR [rax],dl
   14003c1b9:	retf   
   14003c1ba:	add    eax,DWORD PTR [rax+0x1]
   14003c1bd:	add    BYTE PTR [rax],al
   14003c1bf:	add    BYTE PTR [rcx],cl
   14003c1c1:	add    BYTE PTR [rax],al
   14003c1c3:	add    BYTE PTR [rax],al
   14003c1c5:	add    BYTE PTR [rax],al
   14003c1c7:	add    BYTE PTR [rax],ah
   14003c1c9:	retf   
   14003c1ca:	add    eax,DWORD PTR [rax+0x1]
   14003c1cd:	add    BYTE PTR [rax],al
   14003c1cf:	add    BYTE PTR [rax+0x0],ch
   14003c1d2:	add    BYTE PTR [rax],al
   14003c1d4:	add    BYTE PTR [rax],al
   14003c1d6:	add    BYTE PTR [rax],al
   14003c1d8:	cmp    bl,cl
   14003c1da:	add    eax,DWORD PTR [rax+0x1]
   14003c1dd:	add    BYTE PTR [rax],al
   14003c1df:	add    BYTE PTR [rax],ah
   14003c1e1:	add    BYTE PTR [rax],al
   14003c1e3:	add    BYTE PTR [rax],al
   14003c1e5:	add    BYTE PTR [rax],al
   14003c1e7:	add    BYTE PTR [rax-0x35],cl
   14003c1ea:	add    eax,DWORD PTR [rax+0x1]
   14003c1ed:	add    BYTE PTR [rax],al
   14003c1ef:	add    BYTE PTR [rdx+0x0],ch
   14003c1f2:	add    BYTE PTR [rax],al
   14003c1f4:	add    BYTE PTR [rax],al
   14003c1f6:	add    BYTE PTR [rax],al
   14003c1f8:	pop    rax
   14003c1f9:	retf   
   14003c1fa:	add    eax,DWORD PTR [rax+0x1]
   14003c1fd:	add    BYTE PTR [rax],al
   14003c1ff:	add    BYTE PTR [rdi+0x0],ah
   14003c202:	add    BYTE PTR [rax],al
   14003c204:	add    BYTE PTR [rax],al
   14003c206:	add    BYTE PTR [rax],al
   14003c208:	jo     0x14003c1d5
   14003c20a:	add    eax,DWORD PTR [rax+0x1]
   14003c20d:	add    BYTE PTR [rax],al
   14003c20f:	add    BYTE PTR [rbx+0x0],ch
   14003c212:	add    BYTE PTR [rax],al
   14003c214:	add    BYTE PTR [rax],al
   14003c216:	add    BYTE PTR [rax],al
   14003c218:	nop
   14003c219:	retf   
   14003c21a:	add    eax,DWORD PTR [rax+0x1]
   14003c21d:	add    BYTE PTR [rax],al
   14003c21f:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003c223:	add    BYTE PTR [rax],al
   14003c225:	add    BYTE PTR [rax],al
   14003c227:	add    BYTE PTR [rax+0x14003cb],ch
   14003c22d:	add    BYTE PTR [rax],al
   14003c22f:	add    BYTE PTR [rdx],dl
   14003c231:	add    BYTE PTR [rax],al
   14003c233:	add    BYTE PTR [rax],al
   14003c235:	add    BYTE PTR [rax],al
   14003c237:	add    BYTE PTR [rax+0x14003c7],cl
   14003c23d:	add    BYTE PTR [rax],al
   14003c23f:	add    BYTE PTR [rbp+0x0],ch
   14003c242:	add    BYTE PTR [rax],al
   14003c244:	add    BYTE PTR [rax],al
   14003c246:	add    BYTE PTR [rax],al
   14003c248:	ror    bl,0x3
   14003c24b:	rex add DWORD PTR [rax],eax
   14003c24e:	add    BYTE PTR [rax],al
   14003c250:	adc    BYTE PTR [rax],al
   14003c252:	add    BYTE PTR [rax],al
   14003c254:	add    BYTE PTR [rax],al
   14003c256:	add    BYTE PTR [rax],al
   14003c258:	nop
   14003c259:	mov    BYTE PTR [rbx],0x40
   14003c25c:	add    DWORD PTR [rax],eax
   14003c25e:	add    BYTE PTR [rax],al
   14003c260:	sub    DWORD PTR [rax],eax
   14003c262:	add    BYTE PTR [rax],al
   14003c264:	add    BYTE PTR [rax],al
   14003c266:	add    BYTE PTR [rax],al
   14003c268:	mov    eax,0x14003c6
   14003c26d:	add    BYTE PTR [rax],al
   14003c26f:	add    BYTE PTR [rax],cl
   14003c271:	add    BYTE PTR [rax],al
   14003c273:	add    BYTE PTR [rax],al
   14003c275:	add    BYTE PTR [rax],al
   14003c277:	add    al,ah
   14003c279:	retf   
   14003c27a:	add    eax,DWORD PTR [rax+0x1]
   14003c27d:	add    BYTE PTR [rax],al
   14003c27f:	add    BYTE PTR [rcx],dl
   14003c281:	add    BYTE PTR [rax],al
   14003c283:	add    BYTE PTR [rax],al
   14003c285:	add    BYTE PTR [rax],al
   14003c287:	add    BYTE PTR [rax-0x3a],bl
   14003c28a:	add    eax,DWORD PTR [rax+0x1]
   14003c28d:	add    BYTE PTR [rax],al
   14003c28f:	add    BYTE PTR [rbx],bl
   14003c291:	add    BYTE PTR [rax],al
   14003c293:	add    BYTE PTR [rax],al
   14003c295:	add    BYTE PTR [rax],al
   14003c297:	add    al,bh
   14003c299:	retf   
   14003c29a:	add    eax,DWORD PTR [rax+0x1]
   14003c29d:	add    BYTE PTR [rax],al
   14003c29f:	add    BYTE PTR [rsi],ah
   14003c2a1:	add    BYTE PTR [rax],al
   14003c2a3:	add    BYTE PTR [rax],al
   14003c2a5:	add    BYTE PTR [rax],al
   14003c2a7:	add    BYTE PTR [rax-0x3a],bh
   14003c2aa:	add    eax,DWORD PTR [rax+0x1]
   14003c2ad:	add    BYTE PTR [rax],al
   14003c2af:	add    BYTE PTR [rax],ch
   14003c2b1:	add    BYTE PTR [rax],al
   14003c2b3:	add    BYTE PTR [rax],al
   14003c2b5:	add    BYTE PTR [rax],al
   14003c2b7:	add    BYTE PTR [rax],ah
   14003c2b9:	mov    DWORD PTR [rbx],0x140
   14003c2bf:	add    BYTE PTR [rsi+0x0],ch
   14003c2c2:	add    BYTE PTR [rax],al
   14003c2c4:	add    BYTE PTR [rax],al
   14003c2c6:	add    BYTE PTR [rax],al
   14003c2c8:	or     ah,cl
   14003c2ca:	add    eax,DWORD PTR [rax+0x1]
   14003c2cd:	add    BYTE PTR [rax],al
   14003c2cf:	add    BYTE PTR [rdi+0x0],ch
   14003c2d2:	add    BYTE PTR [rax],al
   14003c2d4:	add    BYTE PTR [rax],al
   14003c2d6:	add    BYTE PTR [rax],al
   14003c2d8:	and    ah,cl
   14003c2da:	add    eax,DWORD PTR [rax+0x1]
   14003c2dd:	add    BYTE PTR [rax],al
   14003c2df:	add    BYTE PTR [rdx],ch
   14003c2e1:	add    BYTE PTR [rax],al
   14003c2e3:	add    BYTE PTR [rax],al
   14003c2e5:	add    BYTE PTR [rax],al
   14003c2e7:	add    BYTE PTR [rax],bh
   14003c2e9:	int3   
   14003c2ea:	add    eax,DWORD PTR [rax+0x1]
   14003c2ed:	add    BYTE PTR [rax],al
   14003c2ef:	add    BYTE PTR [rcx],bl
   14003c2f1:	add    BYTE PTR [rax],al
   14003c2f3:	add    BYTE PTR [rax],al
   14003c2f5:	add    BYTE PTR [rax],al
   14003c2f7:	add    BYTE PTR [rax-0x34],dl
   14003c2fa:	add    eax,DWORD PTR [rax+0x1]
   14003c2fd:	add    BYTE PTR [rax],al
   14003c2ff:	add    BYTE PTR [rax+rax*1],al
   14003c302:	add    BYTE PTR [rax],al
   14003c304:	add    BYTE PTR [rax],al
   14003c306:	add    BYTE PTR [rax],al
   14003c308:	adc    cl,cl
   14003c30a:	add    eax,DWORD PTR [rax+0x1]
   14003c30d:	add    BYTE PTR [rax],al
   14003c30f:	add    BYTE PTR [rsi],dl
   14003c311:	add    BYTE PTR [rax],al
   14003c313:	add    BYTE PTR [rax],al
   14003c315:	add    BYTE PTR [rax],al
   14003c317:	add    al,dl
   14003c319:	mov    BYTE PTR [rbx],0x40
   14003c31c:	add    DWORD PTR [rax],eax
   14003c31e:	add    BYTE PTR [rax],al
   14003c320:	sbb    eax,0x0
   14003c325:	add    BYTE PTR [rax],al
   14003c327:	add    BYTE PTR [rax-0x34],bh
   14003c32a:	add    eax,DWORD PTR [rax+0x1]
   14003c32d:	add    BYTE PTR [rax],al
   14003c32f:	add    BYTE PTR [rip+0x0],al        # 0x14003c335
   14003c335:	add    BYTE PTR [rax],al
   14003c337:	add    BYTE PTR [rax+0x14003c6],ch
   14003c33d:	add    BYTE PTR [rax],al
   14003c33f:	add    BYTE PTR [rip+0x0],dl        # 0x14003c345
   14003c345:	add    BYTE PTR [rax],al
   14003c347:	add    BYTE PTR [rax+0x14003cc],cl
   14003c34d:	add    BYTE PTR [rax],al
   14003c34f:	add    BYTE PTR [rbx+0x0],dh
   14003c352:	add    BYTE PTR [rax],al
   14003c354:	add    BYTE PTR [rax],al
   14003c356:	add    BYTE PTR [rax],al
   14003c358:	cwde   
   14003c359:	int3   
   14003c35a:	add    eax,DWORD PTR [rax+0x1]
   14003c35d:	add    BYTE PTR [rax],al
   14003c35f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003c363:	add    BYTE PTR [rax],al
   14003c365:	add    BYTE PTR [rax],al
   14003c367:	add    BYTE PTR [rax+0x14003cc],ch
   14003c36d:	add    BYTE PTR [rax],al
   14003c36f:	add    BYTE PTR [rbp+0x0],dh
   14003c372:	add    BYTE PTR [rax],al
   14003c374:	add    BYTE PTR [rax],al
   14003c376:	add    BYTE PTR [rax],al
   14003c378:	mov    eax,0x14003cc
   14003c37d:	add    BYTE PTR [rax],al
   14003c37f:	add    BYTE PTR [rsi+0x0],dh
   14003c382:	add    BYTE PTR [rax],al
   14003c384:	add    BYTE PTR [rax],al
   14003c386:	add    BYTE PTR [rax],al
   14003c388:	enter  0x3cc,0x40
   14003c38c:	add    DWORD PTR [rax],eax
   14003c38e:	add    BYTE PTR [rax],al
   14003c390:	ja     0x14003c392
   14003c392:	add    BYTE PTR [rax],al
   14003c394:	add    BYTE PTR [rax],al
   14003c396:	add    BYTE PTR [rax],al
   14003c398:	loopne 0x14003c366
   14003c39a:	add    eax,DWORD PTR [rax+0x1]
   14003c39d:	add    BYTE PTR [rax],al
   14003c39f:	add    BYTE PTR [rdx],cl
   14003c3a1:	add    BYTE PTR [rax],al
   14003c3a3:	add    BYTE PTR [rax],al
   14003c3a5:	add    BYTE PTR [rax],al
   14003c3a7:	add    al,dh
   14003c3a9:	int3   
   14003c3aa:	add    eax,DWORD PTR [rax+0x1]
   14003c3ad:	add    BYTE PTR [rax],al
   14003c3af:	add    BYTE PTR [rcx+0x0],bh
   14003c3b2:	add    BYTE PTR [rax],al
   14003c3b4:	add    BYTE PTR [rax],al
   14003c3b6:	add    BYTE PTR [rax],al
   14003c3b8:	or     ch,cl
   14003c3ba:	add    eax,DWORD PTR [rax+0x1]
   14003c3bd:	add    BYTE PTR [rax],al
   14003c3bf:	add    BYTE PTR [rdi],ah
   14003c3c1:	add    BYTE PTR [rax],al
   14003c3c3:	add    BYTE PTR [rax],al
   14003c3c5:	add    BYTE PTR [rax],al
   14003c3c7:	add    BYTE PTR [rax],bh
   14003c3c9:	mov    DWORD PTR [rbx],0x140
   14003c3cf:	add    BYTE PTR [rax+0x0],bh
   14003c3d2:	add    BYTE PTR [rax],al
   14003c3d4:	add    BYTE PTR [rax],al
   14003c3d6:	add    BYTE PTR [rax],al
   14003c3d8:	adc    ch,cl
   14003c3da:	add    eax,DWORD PTR [rax+0x1]
   14003c3dd:	add    BYTE PTR [rax],al
   14003c3df:	add    BYTE PTR [rdx+0x0],bh
   14003c3e2:	add    BYTE PTR [rax],al
   14003c3e4:	add    BYTE PTR [rax],al
   14003c3e6:	add    BYTE PTR [rax],al
   14003c3e8:	sub    ch,cl
   14003c3ea:	add    eax,DWORD PTR [rax+0x1]
   14003c3ed:	add    BYTE PTR [rax],al
   14003c3ef:	add    BYTE PTR [rbx+0x0],bh
   14003c3f2:	add    BYTE PTR [rax],al
   14003c3f4:	add    BYTE PTR [rax],al
   14003c3f6:	add    BYTE PTR [rax],al
   14003c3f8:	cmp    ch,cl
   14003c3fa:	add    eax,DWORD PTR [rax+0x1]
   14003c3fd:	add    BYTE PTR [rax],al
   14003c3ff:	add    BYTE PTR [rax+rax*1],bl
   14003c402:	add    BYTE PTR [rax],al
   14003c404:	add    BYTE PTR [rax],al
   14003c406:	add    BYTE PTR [rax],al
   14003c408:	call   0x14143c7d3
   14003c40d:	add    BYTE PTR [rax],al
   14003c40f:	add    BYTE PTR [rax+rax*1+0x0],bh
   14003c413:	add    BYTE PTR [rax],al
   14003c415:	add    BYTE PTR [rax],al
   14003c417:	add    BYTE PTR [rax-0x33],dl
   14003c41a:	add    eax,DWORD PTR [rax+0x1]
   14003c41d:	add    BYTE PTR [rax],al
   14003c41f:	add    BYTE PTR [rsi],al
   14003c421:	add    BYTE PTR [rax],al
   14003c423:	add    BYTE PTR [rax],al
   14003c425:	add    BYTE PTR [rax],al
   14003c427:	add    BYTE PTR [rax-0x33],ch
   14003c42a:	add    eax,DWORD PTR [rax+0x1]
   14003c42d:	add    BYTE PTR [rax],al
   14003c42f:	add    BYTE PTR [rbx],dl
   14003c431:	add    BYTE PTR [rax],al
   14003c433:	add    BYTE PTR [rax],al
   14003c435:	add    BYTE PTR [rax],al
   14003c437:	add    BYTE PTR [rax-0x3a],ch
   14003c43a:	add    eax,DWORD PTR [rax+0x1]
   14003c43d:	add    BYTE PTR [rax],al
   14003c43f:	add    BYTE PTR [rdx],al
	...
   14003c449:	mov    DWORD PTR [rbx],0x140
   14003c44f:	add    BYTE PTR [rbx],al
   14003c451:	add    BYTE PTR [rax],al
   14003c453:	add    BYTE PTR [rax],al
   14003c455:	add    BYTE PTR [rax],al
   14003c457:	add    BYTE PTR [rax+0x14003cd],cl
   14003c45d:	add    BYTE PTR [rax],al
   14003c45f:	add    BYTE PTR [rax+rax*1],dl
   14003c462:	add    BYTE PTR [rax],al
   14003c464:	add    BYTE PTR [rax],al
   14003c466:	add    BYTE PTR [rax],al
   14003c468:	cwde   
   14003c469:	int    0x3
   14003c46b:	rex add DWORD PTR [rax],eax
   14003c46e:	add    BYTE PTR [rax],al
   14003c470:	add    BYTE PTR [rax],0x0
   14003c473:	add    BYTE PTR [rax],al
   14003c475:	add    BYTE PTR [rax],al
   14003c477:	add    BYTE PTR [rax+0x14003cd],ch
   14003c47d:	add    BYTE PTR [rax],al
   14003c47f:	add    BYTE PTR [rbp+0x0],bh
   14003c482:	add    BYTE PTR [rax],al
   14003c484:	add    BYTE PTR [rax],al
   14003c486:	add    BYTE PTR [rax],al
   14003c488:	mov    eax,0x14003cd
   14003c48d:	add    BYTE PTR [rax],al
   14003c48f:	add    BYTE PTR [rsi+0x0],bh
   14003c492:	add    BYTE PTR [rax],al
   14003c494:	add    BYTE PTR [rax],al
   14003c496:	add    BYTE PTR [rax],al
   14003c498:	enter  0x3cd,0x40
   14003c49c:	add    DWORD PTR [rax],eax
   14003c49e:	add    BYTE PTR [rax],al
   14003c4a0:	or     al,0x0
   14003c4a2:	add    BYTE PTR [rax],al
   14003c4a4:	add    BYTE PTR [rax],al
   14003c4a6:	add    BYTE PTR [rax],al
   14003c4a8:	push   rax
   14003c4a9:	mov    DWORD PTR [rbx],0x140
   14003c4af:	add    BYTE PTR [rcx+0x0],al
   14003c4b5:	add    BYTE PTR [rax],al
   14003c4b7:	add    al,bl
   14003c4b9:	int    0x3
   14003c4bb:	rex add DWORD PTR [rax],eax
   14003c4be:	add    BYTE PTR [rax],al
   14003c4c0:	imul   eax,DWORD PTR [rax],0x0
   14003c4c6:	add    BYTE PTR [rax],al
   14003c4c8:	movabs al,ds:0x70000000014003c7
   14003c4d1:	add    BYTE PTR [rax],al
   14003c4d3:	add    BYTE PTR [rax],al
   14003c4d5:	add    BYTE PTR [rax],al
   14003c4d7:	add    al,ch
   14003c4d9:	int    0x3
   14003c4db:	rex add DWORD PTR [rax],eax
   14003c4de:	add    BYTE PTR [rax],al
   14003c4e0:	add    DWORD PTR [rax],eax
   14003c4e2:	add    BYTE PTR [rax],al
   14003c4e4:	add    BYTE PTR [rax],al
   14003c4e6:	add    BYTE PTR [rax],al
   14003c4e8:	add    dh,cl
   14003c4ea:	add    eax,DWORD PTR [rax+0x1]
   14003c4ed:	add    BYTE PTR [rax],al
   14003c4ef:	add    BYTE PTR [rdx+0x0],al
   14003c4f5:	add    BYTE PTR [rax],al
   14003c4f7:	add    BYTE PTR [rax],bl
   14003c4f9:	(bad)  
   14003c4fa:	add    eax,DWORD PTR [rax+0x1]
   14003c4fd:	add    BYTE PTR [rax],al
   14003c4ff:	add    BYTE PTR [rax+rax*1+0x0],cl
   14003c506:	add    BYTE PTR [rax],al
   14003c508:	xor    dh,cl
   14003c50a:	add    eax,DWORD PTR [rax+0x1]
   14003c50d:	add    BYTE PTR [rax],al
   14003c50f:	add    BYTE PTR [rbp+0x0],al
   14003c515:	add    BYTE PTR [rax],al
   14003c517:	add    BYTE PTR [rax-0x32],cl
   14003c51a:	add    eax,DWORD PTR [rax+0x1]
   14003c51d:	add    BYTE PTR [rax],al
   14003c51f:	add    BYTE PTR [rip+0x0],cl        # 0x14003c525
   14003c525:	add    BYTE PTR [rax],al
   14003c527:	add    BYTE PTR [rax-0x3a],al
   14003c52a:	add    eax,DWORD PTR [rax+0x1]
   14003c52d:	add    BYTE PTR [rax],al
   14003c52f:	add    BYTE PTR [rsi+0x0],al
   14003c535:	add    BYTE PTR [rax],al
   14003c537:	add    BYTE PTR [rax-0x32],bl
   14003c53a:	add    eax,DWORD PTR [rax+0x1]
   14003c53d:	add    BYTE PTR [rax],al
   14003c53f:	add    BYTE PTR [rdi+0x0],al
   14003c545:	add    BYTE PTR [rax],al
   14003c547:	add    BYTE PTR [rax-0x32],ch
   14003c54a:	add    eax,DWORD PTR [rax+0x1]
   14003c54d:	add    BYTE PTR [rax],al
   14003c54f:	add    BYTE PTR [rsi],bl
   14003c551:	add    BYTE PTR [rax],al
   14003c553:	add    BYTE PTR [rax],al
   14003c555:	add    BYTE PTR [rax],al
   14003c557:	add    BYTE PTR [rax+0x14003ce],al
   14003c55d:	add    BYTE PTR [rax],al
   14003c55f:	add    BYTE PTR [rax+rax*1],ah
   14003c562:	add    BYTE PTR [rax],al
   14003c564:	add    BYTE PTR [rax],al
   14003c566:	add    BYTE PTR [rax],al
   14003c568:	cwde   
   14003c569:	(bad)  
   14003c56a:	add    eax,DWORD PTR [rax+0x1]
   14003c56d:	add    BYTE PTR [rax],al
   14003c56f:	add    BYTE PTR [rbx],cl
   14003c571:	add    BYTE PTR [rax],al
   14003c573:	add    BYTE PTR [rax],al
   14003c575:	add    BYTE PTR [rax],al
   14003c577:	add    BYTE PTR [rax-0x39],ch
   14003c57a:	add    eax,DWORD PTR [rax+0x1]
   14003c57d:	add    BYTE PTR [rax],al
   14003c57f:	add    BYTE PTR [rdx],ah
   14003c581:	add    BYTE PTR [rax],al
   14003c583:	add    BYTE PTR [rax],al
   14003c585:	add    BYTE PTR [rax],al
   14003c587:	add    BYTE PTR [rax+0x14003ce],bh
   14003c58d:	add    BYTE PTR [rax],al
   14003c58f:	add    BYTE PTR [rdi+0x0],bh
   14003c592:	add    BYTE PTR [rax],al
   14003c594:	add    BYTE PTR [rax],al
   14003c596:	add    BYTE PTR [rax],al
   14003c598:	ror    dh,1
   14003c59a:	add    eax,DWORD PTR [rax+0x1]
   14003c59d:	add    BYTE PTR [rax],al
   14003c59f:	add    BYTE PTR [rcx+0x0],cl
   14003c5a5:	add    BYTE PTR [rax],al
   14003c5a7:	add    al,ch
   14003c5a9:	(bad)  
   14003c5aa:	add    eax,DWORD PTR [rax+0x1]
   14003c5ad:	add    BYTE PTR [rax],al
   14003c5af:	add    BYTE PTR [rbx+0x0],cl
   14003c5b5:	add    BYTE PTR [rax],al
   14003c5b7:	add    al,bh
   14003c5b9:	(bad)  
   14003c5ba:	add    eax,DWORD PTR [rax+0x1]
   14003c5bd:	add    BYTE PTR [rax],al
   14003c5bf:	add    BYTE PTR [rdx+0x0],cl
   14003c5c5:	add    BYTE PTR [rax],al
   14003c5c7:	add    BYTE PTR [rax],cl
   14003c5c9:	iret   
   14003c5ca:	add    eax,DWORD PTR [rax+0x1]
   14003c5cd:	add    BYTE PTR [rax],al
   14003c5cf:	add    BYTE PTR [rdi],dl
   14003c5d1:	add    BYTE PTR [rax],al
   14003c5d3:	add    BYTE PTR [rax],al
   14003c5d5:	add    BYTE PTR [rax],al
   14003c5d7:	add    BYTE PTR [rax],bl
   14003c5d9:	iret   
   14003c5da:	add    eax,DWORD PTR [rax+0x1]
   14003c5dd:	add    BYTE PTR [rax],al
   14003c5df:	add    BYTE PTR [rax],bl
   14003c5e1:	add    BYTE PTR [rax],al
   14003c5e3:	add    BYTE PTR [rax],al
   14003c5e5:	add    BYTE PTR [rax],al
   14003c5e7:	add    BYTE PTR [rax+0x14003c7],bh
   14003c5ed:	add    BYTE PTR [rax],al
   14003c5ef:	add    BYTE PTR [rdi],bl
   14003c5f1:	add    BYTE PTR [rax],al
   14003c5f3:	add    BYTE PTR [rax],al
   14003c5f5:	add    BYTE PTR [rax],al
   14003c5f7:	add    BYTE PTR [rax],bh
   14003c5f9:	iret   
   14003c5fa:	add    eax,DWORD PTR [rax+0x1]
   14003c5fd:	add    BYTE PTR [rax],al
   14003c5ff:	add    BYTE PTR [rdx+0x0],dh
   14003c602:	add    BYTE PTR [rax],al
   14003c604:	add    BYTE PTR [rax],al
   14003c606:	add    BYTE PTR [rax],al
   14003c608:	iretq  
   14003c60a:	add    eax,DWORD PTR [rax+0x1]
   14003c60d:	add    BYTE PTR [rax],al
   14003c60f:	add    BYTE PTR [rax+rax*1+0x0],al
   14003c616:	add    BYTE PTR [rax],al
   14003c618:	push   0x14003cf
   14003c61d:	add    BYTE PTR [rax],al
   14003c61f:	add    BYTE PTR [rax+0x0],cl
   14003c625:	add    BYTE PTR [rax],al
   14003c627:	add    BYTE PTR [rax-0x31],bh
   14003c62a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003c63d:	add    BYTE PTR [rax],al
   14003c63f:	add    BYTE PTR [rax+0x65],dh
   14003c642:	jb     0x14003c6b1
   14003c644:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14003c64b:	fs outs dx,BYTE PTR gs:[rsi]
   14003c64e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14003c655:	add    BYTE PTR [rax],al
   14003c657:	add    BYTE PTR [rsi+0x69],ah
   14003c65a:	ins    BYTE PTR es:[rdi],dx
   14003c65b:	and    BYTE PTR gs:[rbp+0x78],ah
   14003c65f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   14003c666:	add    BYTE PTR [rax],al
   14003c668:	outs   dx,BYTE PTR ds:[rsi]
   14003c669:	outs   dx,DWORD PTR ds:[rsi]
   14003c66a:	and    BYTE PTR [rbx+0x75],dh
   14003c66d:	movsxd ebp,DWORD PTR [rax+0x20]
   14003c670:	fs gs jbe 0x14003c6dd
   14003c674:	movsxd esp,DWORD PTR [rbp+0x0]
   14003c677:	add    BYTE PTR [rsi+0x69],ah
   14003c67a:	ins    BYTE PTR es:[rdi],dx
   14003c67b:	outs   dx,BYTE PTR gs:[rsi]
   14003c67d:	(bad)  
   14003c67e:	ins    DWORD PTR es:[rdi],dx
   14003c67f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14003c684:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003c688:	add    BYTE PTR [eax],al
   14003c68b:	add    BYTE PTR [rax],al
   14003c68d:	add    BYTE PTR [rax],al
   14003c68f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   14003c693:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14003c69a:	jb     0x14003c701
   14003c69c:	jae    0x14003c70d
   14003c69e:	jne    0x14003c712
   14003c6a0:	movsxd esp,DWORD PTR [rbp+0x20]
   14003c6a3:	(bad)  
   14003c6a4:	jne    0x14003c719
   14003c6a6:	jns    0x14003c6a8
   14003c6a8:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14003c6af:	jb     0x14003c6b1
   14003c6b1:	add    BYTE PTR [rax],al
   14003c6b3:	add    BYTE PTR [rax],al
   14003c6b5:	add    BYTE PTR [rax],al
   14003c6b7:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14003c6bb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003c6c0:	jns    0x14003c6e2
   14003c6c2:	outs   dx,BYTE PTR ds:[rsi]
   14003c6c3:	outs   dx,DWORD PTR ds:[rsi]
   14003c6c4:	je     0x14003c6e6
   14003c6c6:	gs ins DWORD PTR es:[rdi],dx
   14003c6c8:	jo     0x14003c73e
   14003c6ca:	jns    0x14003c6cc
   14003c6cc:	add    BYTE PTR [rax],al
   14003c6ce:	add    BYTE PTR [rax],al
   14003c6d0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14003c6d7:	and    BYTE PTR [rcx+0x72],ah
   14003c6da:	addr32 jne 0x14003c74a
   14003c6dd:	outs   dx,BYTE PTR gs:[rsi]
   14003c6df:	je     0x14003c6e1
   14003c6e1:	add    BYTE PTR [rax],al
   14003c6e3:	add    BYTE PTR [rax],al
   14003c6e5:	add    BYTE PTR [rax],al
   14003c6e7:	add    BYTE PTR [rsi+0x6f],ch
   14003c6ea:	and    BYTE PTR [rbx+0x70],dh
   14003c6ed:	(bad)  
   14003c6ee:	movsxd esp,DWORD PTR [rbp+0x20]
   14003c6f1:	outs   dx,DWORD PTR ds:[rsi]
   14003c6f2:	outs   dx,BYTE PTR ds:[rsi]
   14003c6f3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14003c6f7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   14003c6fe:	add    BYTE PTR [rax],al
   14003c700:	outs   dx,BYTE PTR ds:[rsi]
   14003c701:	outs   dx,DWORD PTR ds:[rsi]
   14003c702:	and    BYTE PTR [rbx+0x75],dh
   14003c705:	movsxd ebp,DWORD PTR [rax+0x20]
   14003c708:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14003c70f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14003c713:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003c718:	jns    0x14003c71a
   14003c71a:	add    BYTE PTR [rax],al
   14003c71c:	add    BYTE PTR [rax],al
   14003c71e:	add    BYTE PTR [rax],al
   14003c720:	data16 jne 0x14003c791
   14003c723:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003c727:	outs   dx,BYTE PTR ds:[rsi]
   14003c728:	and    BYTE PTR [rsi+0x6f],ch
   14003c72b:	je     0x14003c74d
   14003c72d:	jae    0x14003c7a4
   14003c72f:	jo     0x14003c7a1
   14003c731:	outs   dx,DWORD PTR ds:[rsi]
   14003c732:	jb     0x14003c7a8
   14003c734:	gs add BYTE PTR fs:[rax],al
   14003c738:	outs   dx,BYTE PTR ds:[rsi]
   14003c739:	outs   dx,DWORD PTR ds:[rsi]
   14003c73a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14003c73e:	imul   esp,DWORD PTR [rax],0x61
   14003c741:	jbe    0x14003c7a4
   14003c743:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14003c74b:	add    BYTE PTR [rax],al
   14003c74d:	add    BYTE PTR [rax],al
   14003c74f:	add    BYTE PTR [rsi+0x6f],ch
   14003c752:	je     0x14003c774
   14003c754:	outs   dx,BYTE PTR gs:[rsi]
   14003c756:	outs   dx,DWORD PTR ds:[rsi]
   14003c757:	jne    0x14003c7c0
   14003c759:	push   0x6d656d20
   14003c75e:	outs   dx,DWORD PTR ds:[rsi]
   14003c75f:	jb     0x14003c7da
   14003c761:	add    BYTE PTR [rax],al
   14003c763:	add    BYTE PTR [rax],al
   14003c765:	add    BYTE PTR [rax],al
   14003c767:	add    BYTE PTR [rdx+0x65],dh
   14003c76a:	jae    0x14003c7db
   14003c76c:	jne    0x14003c7e0
   14003c76e:	movsxd esp,DWORD PTR [rbp+0x20]
   14003c771:	jne    0x14003c7e1
   14003c773:	(bad)  
   14003c774:	jbe    0x14003c7d7
   14003c776:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14003c77e:	jb     0x14003c7f9
   14003c780:	and    BYTE PTR [rcx+0x67],ah
   14003c783:	(bad)  
   14003c784:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14003c78b:	jae    0x14003c800
   14003c78d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14003c791:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   14003c798:	imul   eax,DWORD PTR [rax],0x0
   14003c79b:	add    BYTE PTR [rax],al
   14003c79d:	add    BYTE PTR [rax],al
   14003c79f:	add    BYTE PTR [rdi+0x70],ch
   14003c7a2:	gs jb  0x14003c806
   14003c7a5:	je     0x14003c810
   14003c7a7:	outs   dx,DWORD PTR ds:[rsi]
   14003c7a8:	outs   dx,BYTE PTR ds:[rsi]
   14003c7a9:	and    BYTE PTR [rbx+0x61],ah
   14003c7ac:	outs   dx,BYTE PTR ds:[rsi]
   14003c7ad:	movsxd esp,DWORD PTR [rbp+0x6c]
   14003c7b0:	gs add BYTE PTR fs:[rax],al
   14003c7b4:	add    BYTE PTR [rax],al
   14003c7b6:	add    BYTE PTR [rax],al
   14003c7b8:	je     0x14003c829
   14003c7ba:	outs   dx,DWORD PTR ds:[rsi]
   14003c7bb:	and    BYTE PTR [rbp+0x61],ch
   14003c7be:	outs   dx,BYTE PTR ds:[rsi]
   14003c7bf:	jns    0x14003c7e1
   14003c7c1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14003c7c8:	jo     0x14003c82f
   14003c7ca:	outs   dx,BYTE PTR ds:[rsi]
   14003c7cb:	add    BYTE PTR [rax],al
   14003c7cd:	add    BYTE PTR [rax],al
   14003c7cf:	add    BYTE PTR [rax+0x65],dh
   14003c7d2:	jb     0x14003c841
   14003c7d4:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14003c7db:	fs outs dx,BYTE PTR gs:[rsi]
   14003c7de:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14003c7e5:	add    BYTE PTR [rax],al
   14003c7e7:	add    BYTE PTR [rcx+0x64],ah
   14003c7ea:	fs jb  0x14003c852
   14003c7ed:	jae    0x14003c862
   14003c7ef:	pop    rdi
   14003c7f0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   14003c7f7:	add    BYTE PTR [rcx+0x64],ah
   14003c7fa:	fs jb  0x14003c862
   14003c7fd:	jae    0x14003c872
   14003c7ff:	pop    rdi
   14003c800:	outs   dx,BYTE PTR ds:[rsi]
   14003c801:	outs   dx,DWORD PTR ds:[rsi]
   14003c802:	je     0x14003c863
   14003c804:	(bad)  
   14003c805:	jbe    0x14003c868
   14003c807:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14003c80f:	add    BYTE PTR [rcx+0x64],ah
   14003c812:	fs jb  0x14003c87a
   14003c815:	jae    0x14003c88a
   14003c817:	pop    rdi
   14003c818:	data16 (bad) 
   14003c81a:	ins    DWORD PTR es:[rdi],dx
   14003c81b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   14003c823:	jae    0x14003c89a
   14003c825:	jo     0x14003c897
   14003c827:	outs   dx,DWORD PTR ds:[rsi]
   14003c828:	jb     0x14003c89e
   14003c82a:	gs add BYTE PTR fs:[rax],al
   14003c82e:	add    BYTE PTR [rax],al
   14003c830:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c833:	outs   dx,BYTE PTR ds:[rsi]
   14003c834:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003c839:	outs   dx,BYTE PTR ds:[rsi]
   14003c83a:	pop    rdi
   14003c83b:	(bad)  
   14003c83c:	ins    BYTE PTR es:[rdi],dx
   14003c83d:	jb     0x14003c8a4
   14003c83f:	(bad)  
   14003c840:	fs jns 0x14003c8a2
   14003c843:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14003c84a:	jb     0x14003c8b1
   14003c84c:	jae    0x14003c8c1
   14003c84e:	add    BYTE PTR [rax],al
   14003c850:	(bad)
   14003c855:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14003c85d:	jb     0x14003c8c8
   14003c85f:	jo     0x14003c8d5
   14003c861:	outs   dx,DWORD PTR ds:[rsi]
   14003c862:	jb     0x14003c864
   14003c864:	add    BYTE PTR [rax],al
   14003c866:	add    BYTE PTR [rax],al
   14003c868:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c86b:	outs   dx,BYTE PTR ds:[rsi]
   14003c86c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003c871:	outs   dx,BYTE PTR ds:[rsi]
   14003c872:	pop    rdi
   14003c873:	(bad)  
   14003c874:	(bad)  
   14003c875:	outs   dx,DWORD PTR ds:[rsi]
   14003c876:	jb     0x14003c8ec
   14003c878:	gs add BYTE PTR fs:[rax],al
   14003c87c:	add    BYTE PTR [rax],al
   14003c87e:	add    BYTE PTR [rax],al
   14003c880:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c883:	outs   dx,BYTE PTR ds:[rsi]
   14003c884:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003c889:	outs   dx,BYTE PTR ds:[rsi]
   14003c88a:	pop    rdi
   14003c88b:	jb     0x14003c8f2
   14003c88d:	data16 jne 0x14003c903
   14003c890:	gs add BYTE PTR fs:[rax],al
   14003c894:	add    BYTE PTR [rax],al
   14003c896:	add    BYTE PTR [rax],al
   14003c898:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c89b:	outs   dx,BYTE PTR ds:[rsi]
   14003c89c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003c8a1:	outs   dx,BYTE PTR ds:[rsi]
   14003c8a2:	pop    rdi
   14003c8a3:	jb     0x14003c90a
   14003c8a5:	jae    0x14003c90c
   14003c8a7:	je     0x14003c8a9
   14003c8a9:	add    BYTE PTR [rax],al
   14003c8ab:	add    BYTE PTR [rax],al
   14003c8ad:	add    BYTE PTR [rax],al
   14003c8af:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14003c8b3:	je     0x14003c91e
   14003c8b5:	outs   dx,BYTE PTR ds:[rsi]
   14003c8b6:	(bad)  
   14003c8b7:	je     0x14003c922
   14003c8b9:	outs   dx,DWORD PTR ds:[rsi]
   14003c8ba:	outs   dx,BYTE PTR ds:[rsi]
   14003c8bb:	pop    rdi
   14003c8bc:	(bad)  
   14003c8bd:	fs fs jb 0x14003c926
   14003c8c1:	jae    0x14003c936
   14003c8c3:	pop    rdi
   14003c8c4:	jb     0x14003c92b
   14003c8c6:	jno    0x14003c93d
   14003c8c8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14003c8cf:	add    BYTE PTR [rdx+0x61],ah
   14003c8d2:	fs pop rdi
   14003c8d4:	(bad)  
   14003c8d5:	fs fs jb 0x14003c93e
   14003c8d9:	jae    0x14003c94e
   14003c8db:	add    BYTE PTR [rax],al
   14003c8dd:	add    BYTE PTR [rax],al
   14003c8df:	add    BYTE PTR [rax+0x6f],ch
   14003c8e2:	jae    0x14003c958
   14003c8e4:	pop    rdi
   14003c8e5:	jne    0x14003c955
   14003c8e7:	jb     0x14003c94e
   14003c8e9:	(bad)  
   14003c8ea:	movsxd ebp,DWORD PTR [rax+0x61]
   14003c8ed:	(bad)  
   14003c8ee:	ins    BYTE PTR es:[rdi],dx
   14003c8ef:	add    BYTE PTR gs:[rax],al
   14003c8f2:	add    BYTE PTR [rax],al
   14003c8f4:	add    BYTE PTR [rax],al
   14003c8f6:	add    BYTE PTR [rax],al
   14003c8f8:	outs   dx,DWORD PTR ds:[rsi]
   14003c8f9:	jo     0x14003c960
   14003c8fb:	jb     0x14003c95e
   14003c8fd:	je     0x14003c968
   14003c8ff:	outs   dx,DWORD PTR ds:[rsi]
   14003c900:	outs   dx,BYTE PTR ds:[rsi]
   14003c901:	pop    rdi
   14003c902:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14003c909:	jb     0x14003c970
   14003c90b:	jae    0x14003c980
   14003c90d:	add    BYTE PTR [rax],al
   14003c90f:	add    BYTE PTR [rcx+0x6e],ch
   14003c912:	je     0x14003c979
   14003c914:	jb     0x14003c988
   14003c916:	jne    0x14003c988
   14003c918:	je     0x14003c97f
   14003c91a:	add    BYTE PTR fs:[rax],al
   14003c91d:	add    BYTE PTR [rax],al
   14003c91f:	add    BYTE PTR [rcx+0x6e],ch
   14003c922:	jbe    0x14003c985
   14003c924:	ins    BYTE PTR es:[rdi],dx
   14003c925:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   14003c92d:	outs   dx,BYTE PTR gs:[rsi]
   14003c92f:	je     0x14003c931
   14003c931:	add    BYTE PTR [rax],al
   14003c933:	add    BYTE PTR [rax],al
   14003c935:	add    BYTE PTR [rax],al
   14003c937:	add    BYTE PTR [rcx+0x6c],ah
   14003c93a:	jb     0x14003c9a1
   14003c93c:	(bad)  
   14003c93d:	fs jns 0x14003c99f
   14003c940:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c943:	outs   dx,BYTE PTR ds:[rsi]
   14003c944:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003c949:	add    BYTE PTR [rax],al
   14003c94b:	add    BYTE PTR [rax],al
   14003c94d:	add    BYTE PTR [rax],al
   14003c94f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14003c953:	pop    rdi
   14003c954:	ins    DWORD PTR es:[rdi],dx
   14003c955:	(bad)  
   14003c956:	outs   dx,BYTE PTR ds:[rsi]
   14003c957:	jns    0x14003c9b8
   14003c959:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   14003c960:	jo     0x14003c9c7
   14003c962:	outs   dx,BYTE PTR ds:[rsi]
   14003c963:	add    BYTE PTR [rax],al
   14003c965:	add    BYTE PTR [rax],al
   14003c967:	add    BYTE PTR [rbp+0x65],ch
   14003c96a:	jae    0x14003c9df
   14003c96c:	(bad)  
   14003c96d:	addr32 gs pop rdi
   14003c970:	jae    0x14003c9db
   14003c972:	jp     0x14003c9d9
   14003c974:	add    BYTE PTR [rax],al
   14003c976:	add    BYTE PTR [rax],al
   14003c978:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14003c97f:	gs pop rdi
   14003c981:	je     0x14003c9f2
   14003c983:	outs   dx,DWORD PTR ds:[rsi]
   14003c984:	pop    rdi
   14003c985:	ins    BYTE PTR es:[rdi],dx
   14003c986:	outs   dx,DWORD PTR ds:[rsi]
   14003c987:	outs   dx,BYTE PTR ds:[rsi]
   14003c988:	add    BYTE PTR [eax],al
   14003c98b:	add    BYTE PTR [rax],al
   14003c98d:	add    BYTE PTR [rax],al
   14003c98f:	add    BYTE PTR [rsi+0x65],ch
   14003c992:	je     0x14003ca0b
   14003c994:	outs   dx,DWORD PTR ds:[rsi]
   14003c995:	jb     0x14003ca02
   14003c997:	pop    rdi
   14003c998:	outs   dx,DWORD PTR fs:[rsi]
   14003c99a:	ja     0x14003ca0a
   14003c99c:	add    BYTE PTR [rax],al
   14003c99e:	add    BYTE PTR [rax],al
   14003c9a0:	outs   dx,BYTE PTR ds:[rsi]
   14003c9a1:	gs je  0x14003ca1b
   14003c9a4:	outs   dx,DWORD PTR ds:[rsi]
   14003c9a5:	jb     0x14003ca12
   14003c9a7:	pop    rdi
   14003c9a8:	jb     0x14003ca0f
   14003c9aa:	jae    0x14003ca11
   14003c9ac:	je     0x14003c9ae
   14003c9ae:	add    BYTE PTR [rax],al
   14003c9b0:	outs   dx,BYTE PTR ds:[rsi]
   14003c9b1:	gs je  0x14003ca2b
   14003c9b4:	outs   dx,DWORD PTR ds:[rsi]
   14003c9b5:	jb     0x14003ca22
   14003c9b7:	pop    rdi
   14003c9b8:	jne    0x14003ca28
   14003c9ba:	jb     0x14003ca21
   14003c9bc:	(bad)  
   14003c9bd:	movsxd ebp,DWORD PTR [rax+0x61]
   14003c9c0:	(bad)  
   14003c9c1:	ins    BYTE PTR es:[rdi],dx
   14003c9c2:	add    BYTE PTR gs:[rax],al
   14003c9c5:	add    BYTE PTR [rax],al
   14003c9c7:	add    BYTE PTR [rsi+0x6f],ch
   14003c9ca:	pop    rdi
   14003c9cb:	(bad)  
   14003c9cc:	jne    0x14003ca34
   14003c9ce:	data16 gs jb 0x14003ca31
   14003c9d2:	jae    0x14003ca44
   14003c9d4:	(bad)  
   14003c9d5:	movsxd esp,DWORD PTR [rbp+0x0]
   14003c9d8:	outs   dx,BYTE PTR ds:[rsi]
   14003c9d9:	outs   dx,DWORD PTR ds:[rsi]
   14003c9da:	pop    rdi
   14003c9db:	jo     0x14003ca4f
   14003c9dd:	outs   dx,DWORD PTR ds:[rsi]
   14003c9de:	je     0x14003ca4f
   14003c9e0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003c9e3:	pop    rdi
   14003c9e4:	outs   dx,DWORD PTR ds:[rsi]
   14003c9e5:	jo     0x14003ca5b
   14003c9e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003c9ee:	add    BYTE PTR [rax],al
   14003c9f0:	outs   dx,BYTE PTR ds:[rsi]
   14003c9f1:	outs   dx,DWORD PTR ds:[rsi]
   14003c9f2:	je     0x14003ca53
   14003c9f4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003c9f7:	outs   dx,BYTE PTR ds:[rsi]
   14003c9f8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003c9fd:	add    BYTE PTR [rax],al
   14003c9ff:	add    BYTE PTR [rsi+0x6f],ch
   14003ca02:	je     0x14003ca63
   14003ca04:	(bad)  
   14003ca05:	pop    rdi
   14003ca06:	jae    0x14003ca77
   14003ca08:	movsxd ebp,DWORD PTR [rbx+0x65]
   14003ca0b:	je     0x14003ca0d
   14003ca0d:	add    BYTE PTR [rax],al
   14003ca0f:	add    BYTE PTR [rdi+0x70],ch
   14003ca12:	gs jb  0x14003ca76
   14003ca15:	je     0x14003ca80
   14003ca17:	outs   dx,DWORD PTR ds:[rsi]
   14003ca18:	outs   dx,BYTE PTR ds:[rsi]
   14003ca19:	pop    rdi
   14003ca1a:	outs   dx,BYTE PTR ds:[rsi]
   14003ca1b:	outs   dx,DWORD PTR ds:[rsi]
   14003ca1c:	je     0x14003ca7d
   14003ca1e:	jae    0x14003ca95
   14003ca20:	jo     0x14003ca92
   14003ca22:	outs   dx,DWORD PTR ds:[rsi]
   14003ca23:	jb     0x14003ca99
   14003ca25:	gs add BYTE PTR fs:[rax+0x72],dh
   14003ca2a:	outs   dx,DWORD PTR ds:[rsi]
   14003ca2b:	je     0x14003ca9c
   14003ca2d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003ca30:	pop    rdi
   14003ca31:	outs   dx,BYTE PTR ds:[rsi]
   14003ca32:	outs   dx,DWORD PTR ds:[rsi]
   14003ca33:	je     0x14003ca94
   14003ca35:	jae    0x14003caac
   14003ca37:	jo     0x14003caa9
   14003ca39:	outs   dx,DWORD PTR ds:[rsi]
   14003ca3a:	jb     0x14003cab0
   14003ca3c:	gs add BYTE PTR fs:[rax],al
   14003ca40:	ja     0x14003cab4
   14003ca42:	outs   dx,DWORD PTR ds:[rsi]
   14003ca43:	outs   dx,BYTE PTR ds:[rsi]
   14003ca44:	addr32 pop rdi
   14003ca46:	jo     0x14003caba
   14003ca48:	outs   dx,DWORD PTR ds:[rsi]
   14003ca49:	je     0x14003caba
   14003ca4b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003ca4e:	pop    rdi
   14003ca4f:	je     0x14003caca
   14003ca51:	jo     0x14003cab8
   14003ca53:	add    BYTE PTR [rax],al
   14003ca55:	add    BYTE PTR [rax],al
   14003ca57:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14003ca5b:	gs fs pop rdi
   14003ca5e:	outs   dx,DWORD PTR ds:[rsi]
   14003ca5f:	jne    0x14003cad5
   14003ca61:	add    BYTE PTR [rax],al
   14003ca63:	add    BYTE PTR [rax],al
   14003ca65:	add    BYTE PTR [rax],al
   14003ca67:	add    BYTE PTR [rdi+0x70],ch
   14003ca6a:	gs jb  0x14003cace
   14003ca6d:	je     0x14003cad8
   14003ca6f:	outs   dx,DWORD PTR ds:[rsi]
   14003ca70:	outs   dx,BYTE PTR ds:[rsi]
   14003ca71:	pop    rdi
   14003ca72:	ja     0x14003cae3
   14003ca74:	jne    0x14003cae2
   14003ca76:	fs pop rdi
   14003ca78:	(bad)  
   14003ca79:	ins    BYTE PTR es:[rdi],dx
   14003ca7a:	outs   dx,DWORD PTR ds:[rsi]
   14003ca7b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003ca7e:	add    BYTE PTR [rax],al
   14003ca80:	(bad)  
   14003ca81:	fs fs jb 0x14003caea
   14003ca85:	jae    0x14003cafa
   14003ca87:	and    BYTE PTR [rsi+0x61],ah
   14003ca8a:	ins    DWORD PTR es:[rdi],dx
   14003ca8b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   14003ca93:	jae    0x14003cb0a
   14003ca95:	jo     0x14003cb07
   14003ca97:	outs   dx,DWORD PTR ds:[rsi]
   14003ca98:	jb     0x14003cb0e
   14003ca9a:	gs add BYTE PTR fs:[rax],al
   14003ca9e:	add    BYTE PTR [rax],al
   14003caa0:	(bad)  
   14003caa1:	fs fs jb 0x14003cb0a
   14003caa5:	jae    0x14003cb1a
   14003caa7:	and    BYTE PTR [rcx+0x6e],ch
   14003caaa:	and    BYTE PTR [rbp+0x73],dh
   14003caad:	add    BYTE PTR gs:[rax],al
   14003cab0:	(bad)  
   14003cab1:	fs fs jb 0x14003cb1a
   14003cab5:	jae    0x14003cb2a
   14003cab7:	and    BYTE PTR [rsi+0x6f],ch
   14003caba:	je     0x14003cadc
   14003cabc:	(bad)  
   14003cabd:	jbe    0x14003cb20
   14003cabf:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14003cac7:	add    BYTE PTR [rcx+0x6c],ah
   14003caca:	jb     0x14003cb31
   14003cacc:	(bad)  
   14003cacd:	fs jns 0x14003caf0
   14003cad0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003cad3:	outs   dx,BYTE PTR ds:[rsi]
   14003cad4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003cad9:	add    BYTE PTR [rax],al
   14003cadb:	add    BYTE PTR [rax],al
   14003cadd:	add    BYTE PTR [rax],al
   14003cadf:	add    BYTE PTR [rcx+0x72],ah
   14003cae2:	addr32 jne 0x14003cb52
   14003cae5:	outs   dx,BYTE PTR gs:[rsi]
   14003cae7:	je     0x14003cb09
   14003cae9:	ins    BYTE PTR es:[rdi],dx
   14003caea:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   14003caf1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003caf5:	add    BYTE PTR [eax],al
   14003caf8:	(bad)  
   14003caf9:	jb     0x14003cb62
   14003cafb:	jne    0x14003cb6a
   14003cafd:	outs   dx,BYTE PTR gs:[rsi]
   14003caff:	je     0x14003cb21
   14003cb01:	outs   dx,DWORD PTR ds:[rsi]
   14003cb02:	jne    0x14003cb78
   14003cb04:	and    BYTE PTR [rdi+0x66],ch
   14003cb07:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14003cb0b:	(bad)  
   14003cb0c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   14003cb13:	and    BYTE PTR [rcx+0x64],ah
   14003cb16:	fs jb  0x14003cb7e
   14003cb19:	jae    0x14003cb8e
   14003cb1b:	add    BYTE PTR [rax],al
   14003cb1d:	add    BYTE PTR [rax],al
   14003cb1f:	add    BYTE PTR [rdx+0x61],ah
   14003cb22:	and    BYTE PTR fs:[rsi+0x69],ah
   14003cb26:	ins    BYTE PTR es:[rdi],dx
   14003cb27:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14003cb2c:	movsxd esi,DWORD PTR [rdx+0x69]
   14003cb2f:	jo     0x14003cba5
   14003cb31:	outs   dx,DWORD PTR ds:[rsi]
   14003cb32:	jb     0x14003cb34
   14003cb34:	add    BYTE PTR [rax],al
   14003cb36:	add    BYTE PTR [rax],al
   14003cb38:	(bad)
   14003cb3d:	gs jae 0x14003cbb3
   14003cb40:	(bad)  
   14003cb41:	add    BYTE PTR gs:[eax],al
   14003cb45:	add    BYTE PTR [rax],al
   14003cb47:	add    BYTE PTR [rdx+0x72],ah
   14003cb4a:	outs   dx,DWORD PTR ds:[rsi]
   14003cb4b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14003cb4f:	jo     0x14003cbba
   14003cb51:	jo     0x14003cbb8
   14003cb53:	add    BYTE PTR [rax],al
   14003cb55:	add    BYTE PTR [rax],al
   14003cb57:	add    BYTE PTR [rbx+0x6f],ah
   14003cb5a:	outs   dx,BYTE PTR ds:[rsi]
   14003cb5b:	outs   dx,BYTE PTR ds:[rsi]
   14003cb5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cb61:	outs   dx,BYTE PTR ds:[rsi]
   14003cb62:	and    BYTE PTR [rcx+0x62],ah
   14003cb65:	outs   dx,DWORD PTR ds:[rsi]
   14003cb66:	jb     0x14003cbdc
   14003cb68:	gs add BYTE PTR fs:[rax],al
   14003cb6c:	add    BYTE PTR [rax],al
   14003cb6e:	add    BYTE PTR [rax],al
   14003cb70:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003cb73:	outs   dx,BYTE PTR ds:[rsi]
   14003cb74:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cb79:	outs   dx,BYTE PTR ds:[rsi]
   14003cb7a:	and    BYTE PTR [rcx+0x6c],ah
   14003cb7d:	jb     0x14003cbe4
   14003cb7f:	(bad)  
   14003cb80:	fs jns 0x14003cba3
   14003cb83:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14003cb8a:	jb     0x14003cbf1
   14003cb8c:	jae    0x14003cc01
   14003cb8e:	add    BYTE PTR [rax],al
   14003cb90:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003cb93:	outs   dx,BYTE PTR ds:[rsi]
   14003cb94:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cb99:	outs   dx,BYTE PTR ds:[rsi]
   14003cb9a:	and    BYTE PTR [rdx+0x65],dh
   14003cb9d:	data16 jne 0x14003cc13
   14003cba0:	gs add BYTE PTR fs:[rax],al
   14003cba4:	add    BYTE PTR [rax],al
   14003cba6:	add    BYTE PTR [rax],al
   14003cba8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003cbab:	outs   dx,BYTE PTR ds:[rsi]
   14003cbac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cbb1:	outs   dx,BYTE PTR ds:[rsi]
   14003cbb2:	and    BYTE PTR [rdx+0x65],dh
   14003cbb5:	jae    0x14003cc1c
   14003cbb7:	je     0x14003cbb9
   14003cbb9:	add    BYTE PTR [rax],al
   14003cbbb:	add    BYTE PTR [rax],al
   14003cbbd:	add    BYTE PTR [rax],al
   14003cbbf:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14003cbc3:	je     0x14003cc2e
   14003cbc5:	outs   dx,BYTE PTR ds:[rsi]
   14003cbc6:	(bad)  
   14003cbc7:	je     0x14003cc32
   14003cbc9:	outs   dx,DWORD PTR ds:[rsi]
   14003cbca:	outs   dx,BYTE PTR ds:[rsi]
   14003cbcb:	and    BYTE PTR [rcx+0x64],ah
   14003cbce:	fs jb  0x14003cc36
   14003cbd1:	jae    0x14003cc46
   14003cbd3:	and    BYTE PTR [rdx+0x65],dh
   14003cbd6:	jno    0x14003cc4d
   14003cbd8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14003cbdf:	add    BYTE PTR [rbp+0x78],ah
   14003cbe2:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14003cbe6:	(bad)  
   14003cbe7:	(bad)  
   14003cbe8:	ins    BYTE PTR es:[rdi],dx
   14003cbe9:	and    BYTE PTR gs:[rsi+0x6f],ah
   14003cbed:	jb     0x14003cc5c
   14003cbef:	(bad)  
   14003cbf0:	je     0x14003cc12
   14003cbf2:	gs jb  0x14003cc67
   14003cbf5:	outs   dx,DWORD PTR ds:[rsi]
   14003cbf6:	jb     0x14003cbf8
   14003cbf8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14003cbff:	outs   dx,DWORD PTR ds:[rsi]
   14003cc00:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14003cc04:	add    BYTE PTR gs:[eax],al
   14003cc08:	push   0x2074736f
   14003cc0d:	jne    0x14003cc7d
   14003cc0f:	jb     0x14003cc76
   14003cc11:	(bad)  
   14003cc12:	movsxd ebp,DWORD PTR [rax+0x61]
   14003cc15:	(bad)  
   14003cc16:	ins    BYTE PTR es:[rdi],dx
   14003cc17:	add    BYTE PTR gs:[rax],al
   14003cc1a:	add    BYTE PTR [rax],al
   14003cc1c:	add    BYTE PTR [rax],al
   14003cc1e:	add    BYTE PTR [rax],al
   14003cc20:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   14003cc28:	gs jb  0x14003cc4b
   14003cc2b:	jb     0x14003cc92
   14003cc2d:	ins    DWORD PTR es:[rdi],dx
   14003cc2e:	outs   dx,DWORD PTR ds:[rsi]
   14003cc2f:	jbe    0x14003cc96
   14003cc31:	add    BYTE PTR fs:[rax],al
   14003cc34:	add    BYTE PTR [rax],al
   14003cc36:	add    BYTE PTR [rax],al
   14003cc38:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   14003cc40:	(bad)  
   14003cc41:	jns    0x14003ccb7
   14003cc43:	and    BYTE PTR gs:[rbx+0x65],dh
   14003cc47:	jno    0x14003ccbe
   14003cc49:	outs   dx,BYTE PTR gs:[rsi]
   14003cc4b:	movsxd esp,DWORD PTR [rbp+0x0]
   14003cc4e:	add    BYTE PTR [rax],al
   14003cc50:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   14003cc57:	jo     0x14003cccb
   14003cc59:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   14003cc60:	and    BYTE PTR [rbx+0x6f],ah
   14003cc63:	outs   dx,BYTE PTR ds:[rsi]
   14003cc64:	je     0x14003ccd8
   14003cc66:	outs   dx,DWORD PTR ds:[rsi]
   14003cc67:	ins    BYTE PTR es:[rdi],dx
   14003cc68:	and    BYTE PTR [rdi+0x70],ch
   14003cc6b:	gs jb  0x14003cccf
   14003cc6e:	je     0x14003ccd9
   14003cc70:	outs   dx,DWORD PTR ds:[rsi]
   14003cc71:	outs   dx,BYTE PTR ds:[rsi]
   14003cc72:	add    BYTE PTR [rax],al
   14003cc74:	add    BYTE PTR [rax],al
   14003cc76:	add    BYTE PTR [rax],al
   14003cc78:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14003cc7f:	and    BYTE PTR [rbx+0x65],dh
   14003cc82:	imul   eax,DWORD PTR gs:[rax],0x0
   14003cc86:	add    BYTE PTR [rax],al
   14003cc88:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14003cc8f:	jb     0x14003ccf6
   14003cc91:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003cc95:	jns    0x14003cc97
   14003cc97:	add    BYTE PTR [rbp+0x65],ch
   14003cc9a:	jae    0x14003cd0f
   14003cc9c:	(bad)  
   14003cc9d:	and    BYTE PTR gs:[ebx+0x69],dh
   14003cca2:	jp     0x14003cd09
   14003cca4:	add    BYTE PTR [rax],al
   14003cca6:	add    BYTE PTR [rax],al
   14003cca8:	outs   dx,BYTE PTR ds:[rsi]
   14003cca9:	gs je  0x14003cd23
   14003ccac:	outs   dx,DWORD PTR ds:[rsi]
   14003ccad:	jb     0x14003cd1a
   14003ccaf:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   14003ccb3:	outs   dx,BYTE PTR ds:[rsi]
   14003ccb4:	add    BYTE PTR [rax],al
   14003ccb6:	add    BYTE PTR [rax],al
   14003ccb8:	outs   dx,BYTE PTR ds:[rsi]
   14003ccb9:	gs je  0x14003cd33
   14003ccbc:	outs   dx,DWORD PTR ds:[rsi]
   14003ccbd:	jb     0x14003cd2a
   14003ccbf:	and    BYTE PTR [rdx+0x65],dh
   14003ccc2:	jae    0x14003cd29
   14003ccc4:	je     0x14003ccc6
   14003ccc6:	add    BYTE PTR [rax],al
   14003ccc8:	outs   dx,BYTE PTR ds:[rsi]
   14003ccc9:	gs je  0x14003cd43
   14003cccc:	outs   dx,DWORD PTR ds:[rsi]
   14003cccd:	jb     0x14003cd3a
   14003cccf:	and    BYTE PTR [rbp+0x6e],dh
   14003ccd2:	jb     0x14003cd39
   14003ccd4:	(bad)  
   14003ccd5:	movsxd ebp,DWORD PTR [rax+0x61]
   14003ccd8:	(bad)  
   14003ccd9:	ins    BYTE PTR es:[rdi],dx
   14003ccda:	add    BYTE PTR gs:[rax],al
   14003ccdd:	add    BYTE PTR [rax],al
   14003ccdf:	add    BYTE PTR [rsi+0x6f],ch
   14003cce2:	and    BYTE PTR [rdx+0x75],ah
   14003cce5:	data16 data16 gs jb 0x14003cd0a
   14003ccea:	jae    0x14003cd5c
   14003ccec:	(bad)  
   14003cced:	movsxd esp,DWORD PTR [rbp+0x0]
   14003ccf0:	outs   dx,BYTE PTR ds:[rsi]
   14003ccf1:	outs   dx,DWORD PTR ds:[rsi]
   14003ccf2:	and    BYTE PTR [rbx+0x68],ah
   14003ccf5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14003ccfd:	gs jae 0x14003cd73
	...
   14003cd08:	outs   dx,BYTE PTR ds:[rsi]
   14003cd09:	outs   dx,DWORD PTR ds:[rsi]
   14003cd0a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14003cd0e:	imul   eax,DWORD PTR [rax],0x6e
   14003cd11:	outs   dx,DWORD PTR ds:[rsi]
   14003cd12:	and    BYTE PTR [rbp+0x65],ch
   14003cd15:	jae    0x14003cd8a
   14003cd17:	(bad)  
   14003cd18:	and    BYTE PTR gs:[ecx+0x76],ah
   14003cd1d:	(bad)  
   14003cd1e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14003cd26:	add    BYTE PTR [rax],al
   14003cd28:	outs   dx,BYTE PTR ds:[rsi]
   14003cd29:	outs   dx,DWORD PTR ds:[rsi]
   14003cd2a:	and    BYTE PTR [rbp+0x65],ch
   14003cd2d:	jae    0x14003cda2
   14003cd2f:	(bad)  
   14003cd30:	add    BYTE PTR gs:[eax],al
   14003cd34:	add    BYTE PTR [rax],al
   14003cd36:	add    BYTE PTR [rax],al
   14003cd38:	outs   dx,BYTE PTR ds:[rsi]
   14003cd39:	outs   dx,DWORD PTR ds:[rsi]
   14003cd3a:	and    BYTE PTR [rax+0x72],dh
   14003cd3d:	outs   dx,DWORD PTR ds:[rsi]
   14003cd3e:	je     0x14003cdaf
   14003cd40:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003cd43:	and    BYTE PTR [rdi+0x70],ch
   14003cd46:	je     0x14003cdb1
   14003cd48:	outs   dx,DWORD PTR ds:[rsi]
   14003cd49:	outs   dx,BYTE PTR ds:[rsi]
   14003cd4a:	add    BYTE PTR [rax],al
   14003cd4c:	add    BYTE PTR [rax],al
   14003cd4e:	add    BYTE PTR [rax],al
   14003cd50:	outs   dx,BYTE PTR ds:[rsi]
   14003cd51:	outs   dx,DWORD PTR ds:[rsi]
   14003cd52:	and    BYTE PTR [rbx+0x74],dh
   14003cd55:	jb     0x14003cdbc
   14003cd57:	(bad)  
   14003cd58:	ins    DWORD PTR es:[rdi],dx
   14003cd59:	and    BYTE PTR [rdx+0x65],dh
   14003cd5c:	jae    0x14003cdcd
   14003cd5e:	jne    0x14003cdd2
   14003cd60:	movsxd esp,DWORD PTR [rbp+0x73]
   14003cd63:	add    BYTE PTR [rax],al
   14003cd65:	add    BYTE PTR [rax],al
   14003cd67:	add    BYTE PTR [rsi+0x6f],ch
   14003cd6a:	and    BYTE PTR [rbx+0x75],dh
   14003cd6d:	movsxd ebp,DWORD PTR [rax+0x20]
   14003cd70:	fs gs jbe 0x14003cddd
   14003cd74:	movsxd esp,DWORD PTR [rbp+0x20]
   14003cd77:	outs   dx,DWORD PTR ds:[rsi]
   14003cd78:	jb     0x14003cd9a
   14003cd7a:	(bad)  
   14003cd7b:	fs fs jb 0x14003cde4
   14003cd7f:	jae    0x14003cdf4
   14003cd81:	add    BYTE PTR [rax],al
   14003cd83:	add    BYTE PTR [rax],al
   14003cd85:	add    BYTE PTR [rax],al
   14003cd87:	add    BYTE PTR [rsi+0x6f],ch
   14003cd8a:	and    BYTE PTR [rbx+0x75],dh
   14003cd8d:	movsxd ebp,DWORD PTR [rax+0x20]
   14003cd90:	jo     0x14003ce04
   14003cd92:	outs   dx,DWORD PTR ds:[rsi]
   14003cd93:	movsxd esp,DWORD PTR [rbp+0x73]
   14003cd96:	jae    0x14003cd98
   14003cd98:	outs   dx,BYTE PTR ds:[rsi]
   14003cd99:	outs   dx,DWORD PTR ds:[rsi]
   14003cd9a:	je     0x14003cdbc
   14003cd9c:	(bad)  
   14003cd9d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14003cda1:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003cda6:	jns    0x14003cda8
   14003cda8:	outs   dx,BYTE PTR ds:[rsi]
   14003cda9:	outs   dx,DWORD PTR ds:[rsi]
   14003cdaa:	je     0x14003cdcc
   14003cdac:	(bad)  
   14003cdad:	and    BYTE PTR [rbx+0x6f],dh
   14003cdb0:	movsxd ebp,DWORD PTR [rbx+0x65]
   14003cdb3:	je     0x14003cdb5
   14003cdb5:	add    BYTE PTR [rax],al
   14003cdb7:	add    BYTE PTR [rsi+0x6f],ch
   14003cdba:	je     0x14003cddc
   14003cdbc:	(bad)  
   14003cdbd:	and    BYTE PTR [rbx+0x74],dh
   14003cdc0:	jb     0x14003ce27
   14003cdc2:	(bad)  
   14003cdc3:	ins    DWORD PTR es:[rdi],dx
   14003cdc4:	add    BYTE PTR [rax],al
   14003cdc6:	add    BYTE PTR [rax],al
   14003cdc8:	outs   dx,BYTE PTR ds:[rsi]
   14003cdc9:	outs   dx,DWORD PTR ds:[rsi]
   14003cdca:	je     0x14003cdec
   14003cdcc:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003cdcf:	outs   dx,BYTE PTR ds:[rsi]
   14003cdd0:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003cdd5:	add    BYTE PTR [rax],al
   14003cdd7:	add    BYTE PTR [rsi+0x6f],ch
   14003cdda:	je     0x14003cdfc
   14003cddc:	jae    0x14003ce53
   14003cdde:	jo     0x14003ce50
   14003cde0:	outs   dx,DWORD PTR ds:[rsi]
   14003cde1:	jb     0x14003ce57
   14003cde3:	gs add BYTE PTR fs:[rax],al
   14003cde7:	add    BYTE PTR [rdi+0x70],ch
   14003cdea:	gs jb  0x14003ce4e
   14003cded:	je     0x14003ce58
   14003cdef:	outs   dx,DWORD PTR ds:[rsi]
   14003cdf0:	outs   dx,BYTE PTR ds:[rsi]
   14003cdf1:	and    BYTE PTR [rcx+0x6e],ch
   14003cdf4:	and    BYTE PTR [rax+0x72],dh
   14003cdf7:	outs   dx,DWORD PTR ds:[rsi]
   14003cdf8:	addr32 jb 0x14003ce60
   14003cdfb:	jae    0x14003ce70
   14003cdfd:	add    BYTE PTR [rax],al
   14003cdff:	add    BYTE PTR [rdi+0x70],ch
   14003ce02:	gs jb  0x14003ce66
   14003ce05:	je     0x14003ce70
   14003ce07:	outs   dx,DWORD PTR ds:[rsi]
   14003ce08:	outs   dx,BYTE PTR ds:[rsi]
   14003ce09:	and    BYTE PTR [rsi+0x6f],ch
   14003ce0c:	je     0x14003ce2e
   14003ce0e:	jo     0x14003ce75
   14003ce10:	jb     0x14003ce7f
   14003ce12:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14003ce1a:	gs jb  0x14003ce7e
   14003ce1d:	je     0x14003ce88
   14003ce1f:	outs   dx,DWORD PTR ds:[rsi]
   14003ce20:	outs   dx,BYTE PTR ds:[rsi]
   14003ce21:	and    BYTE PTR [rsi+0x6f],ch
   14003ce24:	je     0x14003ce46
   14003ce26:	jae    0x14003ce9d
   14003ce28:	jo     0x14003ce9a
   14003ce2a:	outs   dx,DWORD PTR ds:[rsi]
   14003ce2b:	jb     0x14003cea1
   14003ce2d:	gs add BYTE PTR fs:[rdi+0x70],ch
   14003ce32:	gs jb  0x14003ce96
   14003ce35:	je     0x14003cea0
   14003ce37:	outs   dx,DWORD PTR ds:[rsi]
   14003ce38:	outs   dx,BYTE PTR ds:[rsi]
   14003ce39:	and    BYTE PTR [rdi+0x6f],dh
   14003ce3c:	jne    0x14003ceaa
   14003ce3e:	and    BYTE PTR fs:[rdx+0x6c],ah
   14003ce42:	outs   dx,DWORD PTR ds:[rsi]
   14003ce43:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003ce46:	add    BYTE PTR [rax],al
   14003ce48:	outs   dx,DWORD PTR ds:[rsi]
   14003ce49:	ja     0x14003ceb9
   14003ce4b:	gs jb  0x14003ce6e
   14003ce4e:	fs gs (bad) 
   14003ce51:	add    BYTE PTR fs:[rax],al
   14003ce54:	add    BYTE PTR [rax],al
   14003ce56:	add    BYTE PTR [rax],al
   14003ce58:	jo     0x14003cecc
   14003ce5a:	outs   dx,DWORD PTR ds:[rsi]
   14003ce5b:	je     0x14003cecc
   14003ce5d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003ce60:	and    BYTE PTR [rbp+0x72],ah
   14003ce63:	jb     0x14003ced4
   14003ce65:	jb     0x14003ce67
   14003ce67:	add    BYTE PTR [rax+0x72],dh
   14003ce6a:	outs   dx,DWORD PTR ds:[rsi]
   14003ce6b:	je     0x14003cedc
   14003ce6d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003ce70:	and    BYTE PTR [rsi+0x6f],ch
   14003ce73:	je     0x14003ce95
   14003ce75:	jae    0x14003ceec
   14003ce77:	jo     0x14003cee9
   14003ce79:	outs   dx,DWORD PTR ds:[rsi]
   14003ce7a:	jb     0x14003cef0
   14003ce7c:	gs add BYTE PTR fs:[rax],al
   14003ce80:	jb     0x14003cee7
   14003ce82:	(bad)  
   14003ce83:	and    BYTE PTR fs:[rdi+0x6e],ch
   14003ce87:	ins    BYTE PTR es:[rdi],dx
   14003ce88:	jns    0x14003ceaa
   14003ce8a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   14003ce91:	jae    0x14003cf07
   14003ce93:	gs ins DWORD PTR es:[rdi],dx
   14003ce95:	add    BYTE PTR [rax],al
   14003ce97:	add    BYTE PTR [rdx+0x65],dh
   14003ce9a:	jae    0x14003cf0b
   14003ce9c:	jne    0x14003cf10
   14003ce9e:	movsxd esp,DWORD PTR [rbp+0x20]
   14003cea1:	fs gs (bad) 
   14003cea4:	fs ins BYTE PTR es:[rdi],dx
   14003cea6:	outs   dx,DWORD PTR ds:[rsi]
   14003cea7:	movsxd ebp,DWORD PTR [rbx+0x20]
   14003ceaa:	ja     0x14003cf1b
   14003ceac:	jne    0x14003cf1a
   14003ceae:	and    BYTE PTR fs:[rdi+0x63],ch
   14003ceb2:	movsxd esi,DWORD PTR [rbp+0x72]
   14003ceb5:	add    BYTE PTR [rax],al
   14003ceb7:	add    BYTE PTR [rdx+0x65],dh
   14003ceba:	jae    0x14003cf31
   14003cebc:	ins    BYTE PTR es:[rdi],dx
   14003cebd:	je     0x14003cedf
   14003cebf:	outs   dx,DWORD PTR ds:[rsi]
   14003cec0:	jne    0x14003cf36
   14003cec2:	and    BYTE PTR [rdi+0x66],ch
   14003cec5:	and    BYTE PTR [rdx+0x61],dh
   14003cec8:	outs   dx,BYTE PTR ds:[rsi]
   14003cec9:	add    BYTE PTR gs:[eax],al
   14003cecd:	add    BYTE PTR [rax],al
   14003cecf:	add    BYTE PTR [rbx+0x74],dh
   14003ced2:	(bad)  
   14003ced3:	je     0x14003cf3a
   14003ced5:	and    BYTE PTR [rsi+0x6f],ch
   14003ced8:	je     0x14003cefa
   14003ceda:	jb     0x14003cf41
   14003cedc:	movsxd ebp,DWORD PTR [rdi+0x76]
   14003cedf:	gs jb  0x14003cf43
   14003cee2:	(bad)  
   14003cee3:	ins    BYTE PTR es:[rdi],dx
   14003cee4:	add    BYTE PTR gs:[rax],al
   14003cee7:	add    BYTE PTR [rbx+0x74],dh
   14003ceea:	jb     0x14003cf51
   14003ceec:	(bad)  
   14003ceed:	ins    DWORD PTR es:[rdi],dx
   14003ceee:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   14003cef2:	outs   dx,DWORD PTR gs:[rsi]
   14003cef4:	jne    0x14003cf6a
   14003cef6:	add    BYTE PTR [rax],al
   14003cef8:	je     0x14003cf5f
   14003cefa:	js     0x14003cf70
   14003cefc:	and    BYTE PTR [rsi+0x69],ah
   14003ceff:	ins    BYTE PTR es:[rdi],dx
   14003cf00:	and    BYTE PTR gs:[rdx+0x75],ah
   14003cf04:	jae    0x14003cf7f
   14003cf06:	add    BYTE PTR [rax],al
   14003cf08:	je     0x14003cf73
   14003cf0a:	ins    DWORD PTR es:[rdi],dx
   14003cf0b:	gs and BYTE PTR fs:[rdi+0x75],ch
   14003cf10:	je     0x14003cf12
   14003cf12:	add    BYTE PTR [rax],al
   14003cf14:	add    BYTE PTR [rax],al
   14003cf16:	add    BYTE PTR [rax],al
   14003cf18:	je     0x14003cf89
   14003cf1a:	outs   dx,DWORD PTR ds:[rsi]
   14003cf1b:	and    BYTE PTR [rbp+0x61],ch
   14003cf1e:	outs   dx,BYTE PTR ds:[rsi]
   14003cf1f:	jns    0x14003cf41
   14003cf21:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14003cf28:	jo     0x14003cf8f
   14003cf2a:	outs   dx,BYTE PTR ds:[rsi]
   14003cf2b:	and    BYTE PTR [rcx+0x6e],ch
   14003cf2e:	and    BYTE PTR [rbx+0x79],dh
   14003cf31:	jae    0x14003cfa7
   14003cf33:	gs ins DWORD PTR es:[rdi],dx
   14003cf35:	add    BYTE PTR [rax],al
   14003cf37:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14003cf3b:	and    BYTE PTR [rbp+0x61],ch
   14003cf3e:	outs   dx,BYTE PTR ds:[rsi]
   14003cf3f:	jns    0x14003cf61
   14003cf41:	ins    BYTE PTR es:[rdi],dx
   14003cf42:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   14003cf49:	outs   dx,DWORD PTR ds:[rsi]
   14003cf4a:	outs   dx,DWORD PTR ds:[rsi]
   14003cf4b:	and    BYTE PTR [rbp+0x61],ch
   14003cf4e:	outs   dx,BYTE PTR ds:[rsi]
   14003cf4f:	jns    0x14003cf71
   14003cf51:	jae    0x14003cfcc
   14003cf53:	ins    DWORD PTR es:[rdi],dx
   14003cf54:	(bad)  
   14003cf55:	outs   dx,DWORD PTR ds:[rsi]
   14003cf56:	ins    BYTE PTR es:[rdi],dx
   14003cf57:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14003cf5e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003cf62:	gs ins BYTE PTR es:[rdi],dx
   14003cf64:	jae    0x14003cf66
   14003cf66:	add    BYTE PTR [rax],al
   14003cf68:	jbe    0x14003cfcb
   14003cf6a:	ins    BYTE PTR es:[rdi],dx
   14003cf6b:	jne    0x14003cfd2
   14003cf6d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14003cf71:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14003cf75:	add    BYTE PTR gs:[edi+0x72],dh
   14003cf7a:	outs   dx,DWORD PTR ds:[rsi]
   14003cf7b:	outs   dx,BYTE PTR ds:[rsi]
   14003cf7c:	and    BYTE PTR [eax+0x72],dh
   14003cf80:	outs   dx,DWORD PTR ds:[rsi]
   14003cf81:	je     0x14003cff2
   14003cf83:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003cf86:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14003cf8a:	add    BYTE PTR gs:[rax],al
   14003cf8d:	add    BYTE PTR [rax],al
   14003cf8f:	add    BYTE PTR [rax+0x1d],bl
   14003cf92:	add    al,0x40
   14003cf94:	add    DWORD PTR [rax],eax
   14003cf96:	add    BYTE PTR [rax],al
   14003cf98:	mov    WORD PTR [rax],ss
   14003cf9a:	add    BYTE PTR [rax+0x1],al
   14003cf9d:	add    BYTE PTR [rax],al
   14003cf9f:	add    ah,dl
   14003cfa1:	sbb    DWORD PTR [rdx],eax
   14003cfa3:	rex add DWORD PTR [rax],eax
   14003cfa6:	add    BYTE PTR [rax],al
   14003cfa8:	(bad)  
   14003cfa9:	sbb    DWORD PTR [rdx],eax
   14003cfab:	rex add DWORD PTR [rax],eax
   14003cfae:	add    BYTE PTR [rax],al
   14003cfb0:	mov    ah,0x10
   14003cfb2:	add    BYTE PTR [rax+0x1],al
   14003cfb5:	add    BYTE PTR [rax],al
   14003cfb7:	add    al,bh
   14003cfb9:	adc    BYTE PTR [rax],al
   14003cfbb:	rex add DWORD PTR [rax],eax
   14003cfbe:	add    BYTE PTR [rax],al
   14003cfc0:	rcl    BYTE PTR [rax],0x0
   14003cfc3:	rex add DWORD PTR [rax],eax
   14003cfc6:	add    BYTE PTR [rax],al
   14003cfc8:	mov    eax,0x140041c
   14003cfcd:	add    BYTE PTR [rax],al
   14003cfcf:	add    BYTE PTR [rax+0x1400011],dl
   14003cfd5:	add    BYTE PTR [rax],al
   14003cfd7:	add    BYTE PTR [rcx+rdx*1],cl
   14003cfda:	add    BYTE PTR [rax+0x1],al
   14003cfdd:	add    BYTE PTR [rax],al
   14003cfdf:	add    BYTE PTR [rcx+rdx*1],dl
   14003cfe2:	add    BYTE PTR [rax+0x1],al
   14003cfe5:	add    BYTE PTR [rax],al
   14003cfe7:	add    BYTE PTR [rax+rdx*1+0x14000],dh
   14003cfee:	add    BYTE PTR [rax],al
   14003cff0:	clc    
   14003cff1:	adc    BYTE PTR [rax],al
   14003cff3:	rex add DWORD PTR [rax],eax
   14003cff6:	add    BYTE PTR [rax],al
   14003cff8:	rcl    BYTE PTR [rax],0x0
   14003cffb:	rex add DWORD PTR [rax],eax
   14003cffe:	add    BYTE PTR [rax],al
   14003d000:	sbb    BYTE PTR [rip+0x14004],0x0        # 0x14005100b
   14003d007:	add    BYTE PTR [rdx+rdx*1+0x0],cl
   14003d00b:	rex add DWORD PTR [rax],eax
   14003d00e:	add    BYTE PTR [rax],al
   14003d010:	in     al,0x11
   14003d012:	add    BYTE PTR [rax+0x1],al
   14003d015:	add    BYTE PTR [rax],al
   14003d017:	add    ah,ch
   14003d019:	adc    DWORD PTR [rax],eax
   14003d01b:	rex add DWORD PTR [rax],eax
   14003d01e:	add    BYTE PTR [rax],al
   14003d020:	mov    ah,0x10
   14003d022:	add    BYTE PTR [rax+0x1],al
   14003d025:	add    BYTE PTR [rax],al
   14003d027:	add    al,bh
   14003d029:	adc    BYTE PTR [rax],al
   14003d02b:	rex add DWORD PTR [rax],eax
   14003d02e:	add    BYTE PTR [rax],al
   14003d030:	rcl    BYTE PTR [rax],0x0
   14003d033:	rex add DWORD PTR [rax],eax
   14003d036:	add    BYTE PTR [rax],al
   14003d038:	(bad)  
   14003d039:	(bad)  
   14003d03a:	add    al,0x40
   14003d03c:	add    DWORD PTR [rax],eax
   14003d03e:	add    BYTE PTR [rax],al
   14003d040:	rex.WR adc r8b,BYTE PTR [rax]
   14003d043:	rex add DWORD PTR [rax],eax
   14003d046:	add    BYTE PTR [rax],al
   14003d048:	adc    BYTE PTR [rdx],0x0
   14003d04b:	rex add DWORD PTR [rax],eax
   14003d04e:	add    BYTE PTR [rax],al
   14003d050:	mov    BYTE PTR [rdx],dl
   14003d052:	add    BYTE PTR [rax+0x1],al
   14003d055:	add    BYTE PTR [rax],al
   14003d057:	add    BYTE PTR [rbx+rdx*1],al
   14003d05a:	add    BYTE PTR [rax+0x1],al
   14003d05d:	add    BYTE PTR [rax],al
   14003d05f:	add    al,bh
   14003d061:	adc    BYTE PTR [rax],al
   14003d063:	rex add DWORD PTR [rax],eax
   14003d066:	add    BYTE PTR [rax],al
   14003d068:	rcl    BYTE PTR [rax],0x0
   14003d06b:	rex add DWORD PTR [rax],eax
   14003d06e:	add    BYTE PTR [rax],al
   14003d070:	(bad)  
   14003d071:	and    al,0x4
   14003d073:	rex add DWORD PTR [rax],eax
   14003d076:	add    BYTE PTR [rax],al
   14003d078:	cmp    al,0x6b
   14003d07a:	add    BYTE PTR [rax+0x1],al
   14003d07d:	add    BYTE PTR [rax],al
   14003d07f:	add    BYTE PTR [rax+0x1400265],bl
   14003d085:	add    BYTE PTR [rax],al
   14003d087:	add    BYTE PTR [rax],bh
   14003d089:	and    al,0x4
   14003d08b:	rex add DWORD PTR [rax],eax
   14003d08e:	add    BYTE PTR [rax],al
   14003d090:	cwde   
   14003d091:	imul   eax,DWORD PTR [rax],0x40
   14003d094:	add    DWORD PTR [rax],eax
   14003d096:	add    BYTE PTR [rax],al
   14003d098:	cwde   
   14003d099:	add    al,BYTE PTR gs:[rax+0x1]
   14003d09d:	add    BYTE PTR [rax],al
   14003d09f:	add    BYTE PTR [rax+0x140041a],cl
   14003d0a5:	add    BYTE PTR [rax],al
   14003d0a7:	add    al,ch
   14003d0a9:	test   al,0x2
   14003d0ab:	rex add DWORD PTR [rax],eax
   14003d0ae:	add    BYTE PTR [rax],al
   14003d0b0:	cwde   
   14003d0b1:	add    al,BYTE PTR gs:[rax+0x1]
   14003d0b5:	add    BYTE PTR [rax],al
   14003d0b7:	add    BYTE PTR [rax],dl
   14003d0b9:	sbb    eax,DWORD PTR [rax+rax*2]
   14003d0bc:	add    DWORD PTR [rax],eax
   14003d0be:	add    BYTE PTR [rax],al
   14003d0c0:	call   0x14143d36d
   14003d0c5:	add    BYTE PTR [rax],al
   14003d0c7:	add    BYTE PTR [rax+0x1400265],bl
   14003d0cd:	add    BYTE PTR [rax],al
   14003d0cf:	add    BYTE PTR [rcx],ch
   14003d0d1:	add    BYTE PTR [rax],al
   14003d0d3:	add    BYTE PTR [rcx],0x0
	...
   14003d0e6:	add    BYTE PTR [rax],al
   14003d0e8:	sldt   WORD PTR [rax]
   14003d0eb:	add    BYTE PTR [rax],al
   14003d0ed:	add    BYTE PTR [rax],al
   14003d0ef:	add    BYTE PTR [rax],ah
   14003d0f1:	add    eax,0x1993
	...
   14003d166:	add    BYTE PTR [rax],al
   14003d168:	jl     0x14003d12f
   14003d16a:	add    al,BYTE PTR [rax+0x1]
   14003d16d:	add    BYTE PTR [rax],al
   14003d16f:	add    BYTE PTR [rax+0x140041b],bl
   14003d175:	add    BYTE PTR [rax],al
   14003d177:	add    BYTE PTR [rax],ah
   14003d179:	mov    BYTE PTR [rdx],0x40
   14003d17c:	add    DWORD PTR [rax],eax
   14003d17e:	add    BYTE PTR [rax],al
   14003d180:	cwde   
   14003d181:	add    al,BYTE PTR gs:[rax+0x1]
   14003d185:	add    BYTE PTR [rax],al
   14003d187:	add    BYTE PTR [rdx+0x61],ah
   14003d18a:	and    BYTE PTR fs:[rbp+0x78],ah
   14003d18e:	movsxd esp,DWORD PTR [rbp+0x70]
   14003d191:	je     0x14003d1fc
   14003d193:	outs   dx,DWORD PTR ds:[rsi]
   14003d194:	outs   dx,BYTE PTR ds:[rsi]
   14003d195:	add    BYTE PTR [rax],al
   14003d197:	add    BYTE PTR [rdx],ah
   14003d199:	add    eax,0x21993
   14003d19e:	add    BYTE PTR [rax],al
   14003d1a0:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003d1a8:	xor    al,0x47
   14003d1aa:	add    al,0x0
   14003d1ac:	(bad)  
   14003d1ad:	add    BYTE PTR [rax],al
   14003d1af:	add    BYTE PTR [rdi+rax*2+0x4],bl
   14003d1b3:	add    BYTE PTR [rax],ah
   14003d1b5:	add    BYTE PTR [rax],al
   14003d1b7:	add    BYTE PTR [rax],al
   14003d1b9:	add    BYTE PTR [rax],al
   14003d1bb:	add    BYTE PTR [rcx],al
   14003d1bd:	add    BYTE PTR [rax],al
   14003d1bf:	add    BYTE PTR [rax],ch
   14003d1c1:	sub    BYTE PTR [rcx-0x2d],cl
   14003d1c4:	cmp    BYTE PTR [rcx-0x2c],al
   14003d1c7:	rex.WRXB mov r11b,0xec
   14003d1ca:	fistp  DWORD PTR [rcx-0x7951a1ed]
   14003d1d0:	adc    cl,bh
   14003d1d2:	add    al,BYTE PTR [rax+0x1]
   14003d1d5:	add    BYTE PTR [rax],al
   14003d1d7:	add    BYTE PTR [rax],dh
   14003d1d9:	stc    
   14003d1da:	add    al,BYTE PTR [rax+0x1]
   14003d1dd:	add    BYTE PTR [rax],al
   14003d1df:	add    al,al
   14003d1e1:	stc    
   14003d1e2:	add    al,BYTE PTR [rax+0x1]
   14003d1e5:	add    BYTE PTR [rax],al
   14003d1e7:	add    BYTE PTR [rcx+rdi*8+0x2],bl
   14003d1eb:	rex add DWORD PTR [rax],eax
   14003d1ee:	add    BYTE PTR [rax],al
   14003d1f0:	push   rax
   14003d1f1:	clc    
   14003d1f2:	add    al,BYTE PTR [rax+0x1]
   14003d1f5:	add    BYTE PTR [rax],al
   14003d1f7:	add    BYTE PTR [rax+rdi*8+0x14002],bl
   14003d1fe:	add    BYTE PTR [rax],al
   14003d200:	and    al,0xf9
   14003d202:	add    al,BYTE PTR [rax+0x1]
   14003d205:	add    BYTE PTR [rax],al
   14003d207:	add    BYTE PTR [rcx+rdi*8+0x2],ch
   14003d20b:	rex add DWORD PTR [rax],eax
   14003d20e:	add    BYTE PTR [rax],al
   14003d210:	push   rax
   14003d211:	stc    
   14003d212:	add    al,BYTE PTR [rax+0x1]
   14003d215:	add    BYTE PTR [rax],al
   14003d217:	add    BYTE PTR [rax],ah
   14003d219:	stc    
   14003d21a:	add    al,BYTE PTR [rax+0x1]
   14003d21d:	add    BYTE PTR [rax],al
   14003d21f:	add    BYTE PTR [rax],ch
   14003d221:	clc    
   14003d222:	add    al,BYTE PTR [rax+0x1]
   14003d225:	add    BYTE PTR [rax],al
   14003d227:	add    BYTE PTR [rdx+0x6b49353c],bl
   14003d22d:	push   rcx
   14003d22e:	rcl    DWORD PTR [rcx],1
   14003d230:	scas   al,BYTE PTR es:[rdi]
   14003d231:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d232:	add    al,al
   14003d234:	rex.WRXB mov r14b,0x88
   14003d237:	and    BYTE PTR [rcx],al
   14003d239:	js     0x14003d1c0
   14003d23b:	jl     0x14003d1be
   14003d23d:	jae    0x14003d20e
   14003d23f:	adc    DWORD PTR [rax+0xaa004d],ecx
   14003d245:	rex.WXB
   14003d246:	cs and al,0x80
   14003d249:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d24a:	adc    bl,ah
   14003d24c:	jg     0x14003d2c1
   14003d24e:	iret   
   14003d24f:	adc    DWORD PTR [rax+0xaa004d],ecx
   14003d255:	rex.WXB
   14003d256:	cs and al,0x88
   14003d259:	ret    0x2705
   14003d25c:	scas   al,BYTE PTR es:[rdi]
   14003d25d:	jns    0x14003d231
   14003d25f:	adc    DWORD PTR [rbx+0x5a100048],esi
   14003d265:	(bad)  
   14003d266:	xor    DWORD PTR [rdi-0x74],0x231cfaba
   14003d26d:	adc    eax,0x79ad11d1
   14003d272:	add    al,al
   14003d274:	rex.WRXB fdivr st,st(5)
   14003d277:	(bad)  
   14003d278:	(bad)  
   14003d279:	xchg   esi,eax
   14003d27a:	sar    DWORD PTR [rsi+0x5],0x70
   14003d27e:	rcl    DWORD PTR [rcx],1
   14003d280:	lods   eax,DWORD PTR ds:[rsi]
   14003d281:	nop
   14003d282:	add    al,al
   14003d284:	rex.WRXB fdivr st,st(5)
   14003d287:	call   FWORD PTR [rcx+0x6b49353c]
   14003d28d:	push   rcx
   14003d28e:	rcl    DWORD PTR [rcx],1
   14003d290:	scas   al,BYTE PTR es:[rdi]
   14003d291:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d292:	add    al,al
   14003d294:	rex.WRXB mov r14b,0x88
   14003d297:	and    BYTE PTR [rsi+0x4f9a6530],al
   14003d29d:	(bad)  
   14003d29e:	rcl    BYTE PTR [rcx],cl
   14003d2a0:	mov    ch,0xf9
   14003d2a2:	add    BYTE PTR [rax],dl
   14003d2a4:	rex.WXB jo 0x14003d2e5
   14003d2a7:	std    
   14003d2a8:	popf   
   14003d2a9:	push   rbp
   14003d2aa:	sbb    al,0x8d
   14003d2ac:	lock test BYTE PTR [rbx+0x56d5a74b],dh
   14003d2b3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003d2b4:	rex.XB pop r10
   14003d2b6:	fwait
   14003d2b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d2b8:	rex.WRX xchg rdi,rax
   14003d2ba:	scas   eax,DWORD PTR es:[rdi]
   14003d2bb:	ins    DWORD PTR es:[rdi],dx
   14003d2bc:	(bad)  
   14003d2bd:	rcl    BYTE PTR cs:[rcx],cl
   14003d2c0:	scas   al,BYTE PTR es:[rdi]
   14003d2c1:	leave  
   14003d2c2:	add    al,al
   14003d2c4:	rex.WRXB mov r14b,0x88
   14003d2c7:	and    BYTE PTR [rbp+0x33eb87e1],bh
   14003d2cd:	xor    dl,dl
   14003d2cf:	adc    DWORD PTR [rsi+0x4fc000c9],ebp
   14003d2d5:	mov    dh,0x88
   14003d2d7:	and    cl,bh
   14003d2d9:	sbb    eax,0xd515b7b3
   14003d2de:	rcl    DWORD PTR [rcx],cl
   14003d2e0:	movabs eax,ds:0xf25a511f5a10001c
   14003d2e9:	adc    ax,0x1ec7
   14003d2ed:	push   rsi
   14003d2ee:	rcl    DWORD PTR [rcx],1
   14003d2f0:	lods   eax,DWORD PTR ds:[rsi]
   14003d2f1:	xchg   DWORD PTR [rax],eax
   14003d2f3:	ror    BYTE PTR [rdi-0x28],0xfd
   14003d2f7:	call   QWORD PTR [rdi-0x69]
   14003d2fa:	scas   eax,DWORD PTR es:[rdi]
   14003d2fb:	ins    DWORD PTR es:[rdi],dx
   14003d2fc:	(bad)  
   14003d2fd:	rcl    BYTE PTR cs:[rcx],cl
   14003d300:	scas   al,BYTE PTR es:[rdi]
   14003d301:	leave  
   14003d302:	add    al,al
   14003d304:	rex.WRXB mov r14b,0x88
   14003d307:	and    BYTE PTR [rcx+0x7fdc12a6],al
   14003d30d:	jae    0x14003d2de
   14003d30f:	adc    DWORD PTR [rax+0xaa004d],ecx
   14003d315:	rex.WXB
   14003d316:	cs and al,0xc7
   14003d319:	xor    bl,BYTE PTR [rsi-0x2d43743c]
   14003d31f:	adc    DWORD PTR [rbp+0x5a1000d4],eax
   14003d325:	(bad)  
   14003d326:	add    DWORD PTR [rdx+rdi*1],0xffffff88
   14003d32a:	mov    edi,0xd3cad7bf
   14003d32f:	adc    DWORD PTR [rcx+0x5a10001b],esp
   14003d335:	(bad)  
   14003d336:	push   rcx
   14003d337:	pop    rdx
   14003d338:	je     0x14003d2e0
   14003d33a:	lods   al,BYTE PTR ds:[rsi]
   14003d33b:	rex.R cld 
   14003d33d:	call   0x1bca3e512
   14003d342:	add    al,al
   14003d344:	rex.WRXB mov r14b,0x88
   14003d347:	and    BYTE PTR [rbx*4+0x34713173],al
   14003d34e:	hlt    
   14003d34f:	rex.WR (bad) 
   14003d351:	jl     0x14003d3aa
   14003d353:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d354:	rex.WX out 0x19,eax
   14003d357:	push   rsi
   14003d358:	cwde   
   14003d359:	data16 rex.WXB
   14003d35b:	addr32 xchg edx,eax
   14003d35d:	out    dx,al
   14003d35e:	rcl    BYTE PTR [rcx],1
   14003d360:	lods   eax,DWORD PTR ds:[rsi]
   14003d361:	jno    0x14003d363
   14003d363:	ror    BYTE PTR [rdi-0x28],0xfd
   14003d367:	jmp    rcx
   14003d369:	rex.RXB jns 0x14003d36e
   14003d36c:	xor    edi,edx
   14003d36e:	(bad)  
   14003d36f:	adc    DWORD PTR [rbx+0x57],esp
   14003d375:	add    BYTE PTR [rax],al
   14003d377:	add    DWORD PTR [rcx-0x736aa924],ebx
   14003d37d:	(bad)  
   14003d37e:	iret   
   14003d37f:	adc    DWORD PTR [rbx+0xaa007e],esp
   14003d385:	xor    al,BYTE PTR [rax-0x39]
   14003d388:	adc    eax,edi
   14003d38a:	nop
   14003d38b:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f8ce562
   14003d392:	add    BYTE PTR [rdx+0x242e4b00],ch
   14003d398:	(bad)  
   14003d399:	xor    bl,BYTE PTR [rsi-0x2d43743c]
   14003d39f:	adc    DWORD PTR [rbp+0x5a1000d4],eax
   14003d3a5:	(bad)  
   14003d3a6:	add    DWORD PTR [rax+rbp*1],0x20
   14003d3aa:	mov    ebp,0xd1152349
   14003d3af:	adc    DWORD PTR [rbp+0x4fc00079],ebp
   14003d3b5:	fdivr  st,st(5)
   14003d3b7:	push   QWORD PTR [rbp-0x5a]
   14003d3ba:	lods   al,BYTE PTR ds:[rsi]
   14003d3bb:	rex.R cld 
   14003d3bd:	call   0x1bca3e592
   14003d3c2:	add    al,al
   14003d3c4:	rex.WRXB mov r14b,0x88
   14003d3c7:	and    BYTE PTR [rcx+riz*8+0x3233eb87],bh
   14003d3ce:	rcl    BYTE PTR [rcx],cl
   14003d3d0:	scas   al,BYTE PTR es:[rdi]
   14003d3d1:	leave  
   14003d3d2:	add    al,al
   14003d3d4:	rex.WRXB mov r14b,0x88
   14003d3d7:	and    BYTE PTR [rdx+0x6b49353c],dl
   14003d3dd:	push   rcx
   14003d3de:	rcl    DWORD PTR [rcx],1
   14003d3e0:	scas   al,BYTE PTR es:[rdi]
   14003d3e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d3e2:	add    al,al
   14003d3e4:	rex.WRXB mov r14b,0x88
   14003d3e7:	and    BYTE PTR [rdi+0x7fdc12a6],al
   14003d3ed:	jae    0x14003d3be
   14003d3ef:	adc    DWORD PTR [rax+0xaa004d],ecx
   14003d3f5:	rex.WXB
   14003d3f6:	cs and al,0xc5
   14003d3f9:	ficomp WORD PTR [rcx-0x5d]
   14003d3fc:	adc    ebp,eax
   14003d3fe:	xor    al,0x48
   14003d400:	mov    ch,BYTE PTR [rdx]
   14003d402:	mov    edx,0x7d771d7f
   14003d407:	jbe    0x14003d403
   14003d409:	pop    rsp
   14003d40a:	shl    edi,cl
   14003d40c:	mov    esi,DWORD PTR [rsi+rbx*2]
   14003d40f:	rex.W mov bpl,0x24
   14003d412:	and    eax,0x97d62527
   14003d417:	retf   0x6f52
   14003d41a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d41c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003d424:	add    BYTE PTR [rax],al
   14003d426:	add    BYTE PTR [rax],al
   14003d428:	movsxd eax,DWORD PTR [rax]
   14003d42a:	outs   dx,DWORD PTR ds:[rsi]
   14003d42b:	add    BYTE PTR [rbp+0x0],ch
   14003d42e:	(bad)  
   14003d42f:	add    BYTE PTR [rcx+0x0],ah
   14003d432:	jae    0x14003d434
   14003d434:	add    BYTE PTR gs:[rsi],ch
   14003d437:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003d43b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003d43f:	add    BYTE PTR [rdx+0x6f],dl
   14003d442:	push   rbp
   14003d443:	outs   dx,BYTE PTR ds:[rsi]
   14003d444:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14003d44b:	imul   edi,DWORD PTR [rdx+0x65],0x0
   14003d452:	add    BYTE PTR [rax],al
   14003d454:	and    eax,0x5800
   14003d459:	add    BYTE PTR [rax],al
   14003d45b:	add    BYTE PTR [rax],al
   14003d45d:	add    BYTE PTR [rax],al
   14003d45f:	add    BYTE PTR [rdi+0x65],ah
   14003d462:	outs   dx,BYTE PTR ds:[rsi]
   14003d463:	gs jb  0x14003d4cf
   14003d466:	movsxd eax,DWORD PTR [rax]
   14003d468:	jne    0x14003d4d8
   14003d46a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003d46e:	outs   dx,BYTE PTR ds:[rsi]
   14003d46f:	and    BYTE PTR [rbp+0x72],ah
   14003d472:	jb     0x14003d4e3
   14003d474:	jb     0x14003d476
   14003d476:	add    BYTE PTR [rax],al
   14003d478:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14003d47f:	ins    DWORD PTR es:[rdi],dx
	...
   14003d488:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14003d48f:	ins    DWORD PTR es:[rdi],dx
   14003d490:	and    BYTE PTR [rbx+0x74],dh
   14003d493:	jb     0x14003d4fa
   14003d495:	(bad)  
   14003d496:	ins    DWORD PTR es:[rdi],dx
   14003d497:	and    BYTE PTR [rbp+0x72],ah
   14003d49a:	jb     0x14003d50b
   14003d49c:	jb     0x14003d49e
   14003d49e:	add    BYTE PTR [rax],al
   14003d4a0:	jae    0x14003d51b
   14003d4a2:	jae    0x14003d518
   14003d4a4:	gs ins DWORD PTR es:[rdi],dx
   14003d4a6:	add    BYTE PTR [rax],al
   14003d4a8:	push   rsi
   14003d4a9:	add    BYTE PTR [rbx+0x0],dl
   14003d4ac:	push   rax
   14003d4ad:	add    BYTE PTR [rbp+0x0],ah
   14003d4b0:	jb     0x14003d4b2
   14003d4b2:	data16 add BYTE PTR [rbp+0x0],cl
   14003d4b6:	outs   dx,DWORD PTR ds:[rsi]
   14003d4b7:	add    BYTE PTR [rsi+0x0],ch
   14003d4ba:	add    BYTE PTR cs:[rbp+0x0],ah
   14003d4be:	js     0x14003d4c0
   14003d4c0:	add    BYTE PTR gs:[rax],al
   14003d4c3:	add    BYTE PTR [rax],al
   14003d4c5:	add    BYTE PTR [rax],al
   14003d4c7:	add    BYTE PTR [rbx+0x0],ah
   14003d4ca:	outs   dx,DWORD PTR ds:[rsi]
   14003d4cb:	add    BYTE PTR [rsi+0x0],dh
   14003d4ce:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d4d2:	(bad)  
   14003d4d3:	add    BYTE PTR [rdi+0x0],ah
   14003d4d6:	add    BYTE PTR gs:[rax],al
   14003d4d9:	add    BYTE PTR [rax],al
   14003d4db:	add    BYTE PTR [rax],al
   14003d4dd:	add    BYTE PTR [rax],al
   14003d4df:	add    BYTE PTR [rsi+0x0],dh
   14003d4e2:	jae    0x14003d4e4
   14003d4e4:	jo     0x14003d4e6
   14003d4e6:	add    BYTE PTR [rax],al
   14003d4e8:	movsxd eax,DWORD PTR [rax]
   14003d4ea:	outs   dx,DWORD PTR ds:[rsi]
   14003d4eb:	add    BYTE PTR [rsi+0x0],dh
   14003d4ee:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d4f2:	(bad)  
   14003d4f3:	add    BYTE PTR [rdi+0x0],ah
   14003d4f6:	add    BYTE PTR gs:[rax],al
   14003d4f9:	add    BYTE PTR [rbx+0x0],ah
   14003d4fc:	outs   dx,DWORD PTR ds:[rsi]
   14003d4fd:	add    BYTE PTR [rsi+0x0],dh
   14003d500:	add    BYTE PTR [rax],al
   14003d502:	jbe    0x14003d504
   14003d504:	jae    0x14003d506
   14003d506:	jo     0x14003d508
   14003d508:	add    BYTE PTR [rax],al
   14003d50a:	imul   eax,DWORD PTR [rax],0x700063
	...
   14003d518:	jbe    0x14003d51a
   14003d51a:	jae    0x14003d51c
   14003d51c:	jo     0x14003d51e
   14003d51e:	add    BYTE PTR [rax],al
   14003d520:	imul   eax,DWORD PTR [rax],0x700063
	...
   14003d52e:	add    BYTE PTR [rax],al
   14003d530:	push   rbx
   14003d531:	outs   dx,DWORD PTR ds:[rsi]
   14003d532:	data16 je 0x14003d5ac
   14003d535:	(bad)  
   14003d536:	jb     0x14003d59d
   14003d538:	pop    rsp
   14003d539:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14003d541:	je     0x14003d59f
   14003d543:	push   rsi
   14003d544:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
   14003d54b:	jne    0x14003d5b1
   14003d54d:	imul   ebp,DWORD PTR [rdi+0x5c],0x302e3131
   14003d554:	pop    rsp
   14003d555:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003d557:	je     0x14003d5be
   14003d559:	jb     0x14003d5cb
   14003d55b:	jb     0x14003d5c6
   14003d55d:	jae    0x14003d5c4
   14003d55f:	push   rsp
   14003d560:	outs   dx,DWORD PTR ds:[rsi]
   14003d561:	outs   dx,DWORD PTR ds:[rsi]
   14003d562:	ins    BYTE PTR es:[rdi],dx
   14003d563:	jae    0x14003d5c1
   14003d565:	rex.RX (bad) 
   14003d567:	jne    0x14003d5d5
   14003d569:	je     0x14003d5bf
   14003d56b:	gs jae 0x14003d5e2
   14003d56e:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14003d575:	add    BYTE PTR [rax],al
   14003d577:	add    BYTE PTR [rsi+0x73],dh
   14003d57a:	jo     0x14003d5e1
   14003d57c:	jb     0x14003d5e4
   14003d57e:	ins    DWORD PTR es:[rdi],dx
   14003d57f:	outs   dx,DWORD PTR ds:[rsi]
   14003d580:	outs   dx,BYTE PTR ds:[rsi]
   14003d581:	cs gs js 0x14003d5ea
   14003d585:	add    BYTE PTR [rax],al
   14003d587:	add    BYTE PTR [rbx+0x65],dl
   14003d58a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d58c:	movsxd esi,DWORD PTR [rdx+0x65]
   14003d58f:	(bad)  
   14003d590:	jae    0x14003d5f7
   14003d592:	rex.X (bad) 
   14003d594:	jae    0x14003d5fb
   14003d596:	push   rax
   14003d597:	jb     0x14003d602
   14003d599:	outs   dx,DWORD PTR ds:[rsi]
   14003d59a:	jb     0x14003d605
   14003d59c:	je     0x14003d617
   14003d59e:	push   rax
   14003d59f:	jb     0x14003d60a
   14003d5a1:	jbe    0x14003d60c
   14003d5a3:	ins    BYTE PTR es:[rdi],dx
   14003d5a4:	gs add BYTE PTR gs:[esi+0x0],dl
   14003d5aa:	push   rbx
   14003d5ab:	add    BYTE PTR [rax+0x0],dl
   14003d5ae:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d5b2:	data16 add BYTE PTR [rbx+0x0],dl
   14003d5b6:	jb     0x14003d5b8
   14003d5b8:	jbe    0x14003d5ba
   14003d5ba:	add    BYTE PTR [rax],al
   14003d5bc:	add    BYTE PTR [rax],al
   14003d5be:	add    BYTE PTR [rax],al
   14003d5c0:	xor    DWORD PTR [rax],eax
   14003d5c2:	xor    DWORD PTR [rax],eax
   14003d5c4:	add    BYTE PTR cs:[rax],dh
   14003d5c7:	add    BYTE PTR [rsi],ch
   14003d5c9:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770405cf
   14003d5cf:	add    BYTE PTR [rdx],dh
   14003d5d1:	add    BYTE PTR [rdi],dh
   14003d5d3:	add    BYTE PTR [rsi],ch
   14003d5d5:	add    BYTE PTR [rcx],dh
	...
   14003d5df:	add    BYTE PTR [rbx+0x0],dh
   14003d5e2:	jne    0x14003d5e4
   14003d5e4:	jo     0x14003d5e6
   14003d5e6:	jo     0x14003d5e8
   14003d5e8:	jb     0x14003d5ea
   14003d5ea:	add    BYTE PTR gs:[rbx+0x0],dh
   14003d5ee:	jae    0x14003d5f0
   14003d5f0:	pop    rdi
   14003d5f1:	add    BYTE PTR [rdi+0x0],dh
   14003d5f4:	(bad)  
   14003d5f5:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003d5f9:	add    BYTE PTR [rdi+0x0],ch
   14003d5fc:	outs   dx,BYTE PTR ds:[rsi]
   14003d5fd:	add    BYTE PTR [rax],al
   14003d5ff:	add    BYTE PTR [rcx+0x6e],ch
   14003d602:	jbe    0x14003d665
   14003d604:	ins    BYTE PTR es:[rdi],dx
   14003d605:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14003d60d:	and    BYTE PTR [eax+0x6f],dh
   14003d611:	jae    0x14003d67c
   14003d613:	je     0x14003d67e
   14003d615:	outs   dx,DWORD PTR ds:[rsi]
   14003d616:	outs   dx,BYTE PTR ds:[rsi]
   14003d617:	add    BYTE PTR [rbx+0x74],dh
   14003d61a:	jb     0x14003d685
   14003d61c:	outs   dx,BYTE PTR ds:[rsi]
   14003d61d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14003d622:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003d626:	add    BYTE PTR [eax],al
   14003d629:	add    BYTE PTR [rax],al
   14003d62b:	add    BYTE PTR [rax],al
   14003d62d:	add    BYTE PTR [rax],al
   14003d62f:	add    BYTE PTR [rbp+0x0],cl
   14003d632:	imul   eax,DWORD PTR [rax],0x720063
   14003d638:	outs   dx,DWORD PTR ds:[rsi]
   14003d639:	add    BYTE PTR [rbx+0x0],dh
   14003d63c:	outs   dx,DWORD PTR ds:[rsi]
   14003d63d:	add    BYTE PTR [rsi+0x0],ah
   14003d640:	je     0x14003d642
   14003d642:	scas   al,BYTE PTR es:[rdi]
   14003d643:	add    BYTE PTR [rax],ah
   14003d645:	add    BYTE PTR [rsi+0x0],dl
   14003d648:	push   rbx
   14003d649:	add    BYTE PTR [rax+0x0],dl
   14003d64c:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d650:	data16 add BYTE PTR [rax],ah
   14003d653:	add    BYTE PTR [rax+0x0],dl
   14003d656:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d65a:	data16 add BYTE PTR [rdi+0x0],ch
   14003d65e:	jb     0x14003d660
   14003d660:	ins    DWORD PTR es:[rdi],dx
   14003d661:	add    BYTE PTR [rcx+0x0],ah
   14003d664:	outs   dx,BYTE PTR ds:[rsi]
   14003d665:	add    BYTE PTR [rbx+0x0],ah
   14003d668:	add    BYTE PTR gs:[rax],ah
   14003d66b:	add    BYTE PTR [rbp+0x0],cl
   14003d66e:	outs   dx,DWORD PTR ds:[rsi]
   14003d66f:	add    BYTE PTR [rsi+0x0],ch
   14003d672:	imul   eax,DWORD PTR [rax],0x6f0074
   14003d678:	jb     0x14003d67a
   14003d67a:	add    BYTE PTR [rax],al
   14003d67c:	add    BYTE PTR [rax],al
   14003d67e:	add    BYTE PTR [rax],al
   14003d680:	shl    ch,0x3
   14003d683:	rex add DWORD PTR [rax],eax
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	and    dh,ah
   14003d68a:	add    eax,DWORD PTR [rax+0x1]
   14003d68d:	add    BYTE PTR [rax],al
   14003d68f:	add    BYTE PTR [rax-0x1b],al
   14003d692:	add    eax,DWORD PTR [rax+0x1]
   14003d695:	add    BYTE PTR [rax],al
   14003d697:	add    BYTE PTR [rax],cl
   14003d699:	out    0x3,al
   14003d69b:	rex add DWORD PTR [rax],eax
   14003d69e:	add    BYTE PTR [rax],al
   14003d6a0:	lock in eax,0x3
   14003d6a3:	rex add DWORD PTR [rax],eax
   14003d6a6:	add    BYTE PTR [rax],al
   14003d6a8:	fsub   st,st(5)
   14003d6aa:	add    eax,DWORD PTR [rax+0x1]
   14003d6ad:	add    BYTE PTR [rax],al
   14003d6af:	add    BYTE PTR [rbp+0x0],cl
   14003d6b2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14003d6b6:	and    BYTE PTR [rax],al
   14003d6b8:	add    BYTE PTR [rcx+0x0],r12b
   14003d6bc:	je     0x14003d6be
   14003d6be:	(bad)  
	...
   14003d6c7:	add    al,al
   14003d6c9:	call   0x1400516d1
   14003d6ce:	add    BYTE PTR [rax],al
   14003d6d0:	jl     0x14003d6bb
   14003d6d2:	add    al,0x40
   14003d6d4:	add    DWORD PTR [rax],eax
   14003d6d6:	add    BYTE PTR [rax],al
   14003d6d8:	xchg   esp,eax
   14003d6d9:	call   0x1400516e2
   14003d6de:	add    BYTE PTR [rax],al
   14003d6e0:	pop    rsp
   14003d6e1:	out    0x4,eax
   14003d6e3:	rex add DWORD PTR [rax],eax
   14003d6e6:	add    BYTE PTR [rax],al
   14003d6e8:	mov    esp,0x14004e8
   14003d6ed:	add    BYTE PTR [rax],al
   14003d6ef:	add    BYTE PTR [rdi+riz*8+0x14004],dl
   14003d6f6:	add    BYTE PTR [rax],al
   14003d6f8:	or     al,0xe9
   14003d6fa:	add    al,0x40
   14003d6fc:	add    DWORD PTR [rax],eax
   14003d6fe:	add    BYTE PTR [rax],al
   14003d700:	fsubr  st(7),st
   14003d702:	add    al,0x40
   14003d704:	add    DWORD PTR [rax],eax
   14003d706:	add    BYTE PTR [rax],al
   14003d708:	in     al,dx
   14003d709:	call   0x140051712
   14003d70e:	add    BYTE PTR [rax],al
   14003d710:	rex.R out 0x4,eax
   14003d713:	rex add DWORD PTR [rax],eax
   14003d716:	add    BYTE PTR [rax],al
   14003d718:	mov    ah,0xe9
   14003d71a:	add    al,0x40
   14003d71c:	add    DWORD PTR [rax],eax
   14003d71e:	add    BYTE PTR [rax],al
   14003d720:	(bad)  
   14003d721:	out    0x4,eax
   14003d723:	rex add DWORD PTR [rax],eax
   14003d726:	add    BYTE PTR [rax],al
   14003d728:	adc    al,0xe8
   14003d72a:	add    al,0x40
   14003d72c:	add    DWORD PTR [rax],eax
   14003d72e:	add    BYTE PTR [rax],al
   14003d730:	cmp    al,0xe8
   14003d732:	add    al,0x40
   14003d734:	add    DWORD PTR [rax],eax
   14003d736:	add    BYTE PTR [rax],al
   14003d738:	push   rsp
   14003d739:	add    BYTE PTR [rdi+0x0],cl
   14003d73c:	rex.WXB add BYTE PTR [r13+0x0],al
   14003d740:	rex.WRX add BYTE PTR [rax],r12b
   14003d743:	add    BYTE PTR [rax+rax*1+0x61],al
   14003d747:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003d74b:	add    BYTE PTR [rax],al
   14003d74d:	add    BYTE PTR [rax],al
   14003d74f:	add    BYTE PTR [rax],bl
	...
   14003d759:	add    BYTE PTR [rax],al
   14003d75b:	add    BYTE PTR [rax],bl
   14003d75d:	add    BYTE PTR [rax],al
   14003d75f:	add    BYTE PTR [rax],ah
   14003d761:	add    BYTE PTR [rax],al
   14003d763:	add    BYTE PTR [rax],bl
   14003d765:	add    BYTE PTR [rax],al
   14003d767:	add    BYTE PTR [rax],bl
   14003d769:	add    BYTE PTR [rax],al
   14003d76b:	add    BYTE PTR [rax],bl
	...
   14003d799:	add    BYTE PTR [rax],al
   14003d79b:	add    BYTE PTR [rax],bl
   14003d79d:	add    BYTE PTR [rax],al
   14003d79f:	add    BYTE PTR [rax],bl
   14003d7a1:	add    BYTE PTR [rax],al
   14003d7a3:	add    BYTE PTR [rax],bl
   14003d7a5:	add    BYTE PTR [rax],al
   14003d7a7:	add    BYTE PTR [rax],bl
   14003d7a9:	add    BYTE PTR [rax],al
   14003d7ab:	add    BYTE PTR [rax],ch
   14003d7ad:	add    BYTE PTR [rax],al
   14003d7af:	add    BYTE PTR [rax],ch
   14003d7b1:	add    BYTE PTR [rax],al
   14003d7b3:	add    BYTE PTR [rax],bl
   14003d7b5:	add    BYTE PTR [rax],al
   14003d7b7:	add    BYTE PTR [rax],bl
   14003d7b9:	add    BYTE PTR [rax],al
   14003d7bb:	add    BYTE PTR [rax],al
   14003d7bd:	add    BYTE PTR [rax],al
   14003d7bf:	add    BYTE PTR [rax],bl
	...
   14003d7c9:	add    BYTE PTR [rax],al
   14003d7cb:	add    BYTE PTR [rax+rax*1],cl
   14003d7ce:	add    BYTE PTR [rax],al
   14003d7d0:	adc    BYTE PTR [rax],al
   14003d7d2:	add    BYTE PTR [rax],al
   14003d7d4:	or     al,0x0
   14003d7d6:	add    BYTE PTR [rax],al
   14003d7d8:	or     al,0x0
   14003d7da:	add    BYTE PTR [rax],al
   14003d7dc:	or     al,0x0
	...
   14003d80a:	add    BYTE PTR [rax],al
   14003d80c:	adc    al,0x0
   14003d80e:	add    BYTE PTR [rax],al
   14003d810:	adc    BYTE PTR [rax],al
   14003d812:	add    BYTE PTR [rax],al
   14003d814:	adc    BYTE PTR [rax],al
   14003d816:	add    BYTE PTR [rax],al
   14003d818:	adc    BYTE PTR [rax],al
   14003d81a:	add    BYTE PTR [rax],al
   14003d81c:	sbb    BYTE PTR [rax],al
   14003d81e:	add    BYTE PTR [rax],al
   14003d820:	sbb    BYTE PTR [rax],al
   14003d822:	add    BYTE PTR [rax],al
   14003d824:	or     al,0x0
   14003d826:	add    BYTE PTR [rax],al
   14003d828:	or     al,0x0
   14003d82a:	add    BYTE PTR [rax],al
   14003d82c:	add    BYTE PTR [rax],al
   14003d82e:	add    BYTE PTR [rax],al
   14003d830:	sbb    BYTE PTR [rax],al
	...
   14003d83a:	add    BYTE PTR [rax],al
   14003d83c:	sbb    BYTE PTR [rax],al
   14003d83e:	add    BYTE PTR [rax],al
   14003d840:	and    BYTE PTR [rax],al
   14003d842:	add    BYTE PTR [rax],al
   14003d844:	sbb    BYTE PTR [rax],al
   14003d846:	add    BYTE PTR [rax],al
   14003d848:	sbb    BYTE PTR [rax],al
   14003d84a:	add    BYTE PTR [rax],al
   14003d84c:	sbb    BYTE PTR [rax],al
	...
   14003d87a:	add    BYTE PTR [rax],al
   14003d87c:	sbb    BYTE PTR [rax],al
   14003d87e:	add    BYTE PTR [rax],al
   14003d880:	sbb    BYTE PTR [rax],al
   14003d882:	add    BYTE PTR [rax],al
   14003d884:	sbb    BYTE PTR [rax],al
   14003d886:	add    BYTE PTR [rax],al
   14003d888:	sbb    BYTE PTR [rax],al
   14003d88a:	add    BYTE PTR [rax],al
   14003d88c:	sub    BYTE PTR [rax],al
   14003d88e:	add    BYTE PTR [rax],al
   14003d890:	sub    BYTE PTR [rax],al
   14003d892:	add    BYTE PTR [rax],al
   14003d894:	sbb    BYTE PTR [rax],al
   14003d896:	add    BYTE PTR [rax],al
   14003d898:	sbb    BYTE PTR [rax],al
   14003d89a:	add    BYTE PTR [rax],al
   14003d89c:	add    BYTE PTR [rax],al
   14003d89e:	add    BYTE PTR [rax],al
   14003d8a0:	nop
   14003d8a1:	in     eax,dx
   14003d8a2:	add    eax,DWORD PTR [rax+0x1]
   14003d8a5:	add    BYTE PTR [rax],al
   14003d8a7:	add    BYTE PTR [rax-0x13],cl
   14003d8aa:	add    eax,DWORD PTR [rax+0x1]
   14003d8ad:	add    BYTE PTR [rax],al
   14003d8af:	add    BYTE PTR [rax],al
   14003d8b1:	in     eax,dx
   14003d8b2:	add    eax,DWORD PTR [rax+0x1]
   14003d8b5:	add    BYTE PTR [rax],al
   14003d8b7:	add    BYTE PTR [rax-0x13],dh
   14003d8ba:	add    eax,DWORD PTR [rax+0x1]
   14003d8bd:	add    BYTE PTR [rax],al
   14003d8bf:	add    BYTE PTR [rbp+0x49e814a],ch
   14003d8c5:	xor    dl,dl
   14003d8c7:	adc    DWORD PTR [rdx+0x8600082],ebx
   14003d8cd:	test   al,0x69
   14003d8cf:	cmp    DWORD PTR [rax],esp
   14003d8d1:	(bad)  
   14003d8d2:	add    al,0x40
   14003d8d4:	add    DWORD PTR [rax],eax
   14003d8d6:	add    BYTE PTR [rax],al
   14003d8d8:	push   rax
   14003d8d9:	adc    eax,DWORD PTR [rax]
   14003d8db:	rex add DWORD PTR [rax],eax
   14003d8de:	add    BYTE PTR [rax],al
   14003d8e0:	(bad)  
   14003d8e1:	sbb    DWORD PTR [rdx],eax
   14003d8e3:	rex add DWORD PTR [rax],eax
   14003d8e6:	add    BYTE PTR [rax],al
   14003d8e8:	(bad)  
   14003d8e9:	sbb    DWORD PTR [rdx],eax
   14003d8eb:	rex add DWORD PTR [rax],eax
   14003d8ee:	add    BYTE PTR [rax],al
   14003d8f0:	(bad)  
   14003d8f1:	sbb    DWORD PTR [rdx],eax
   14003d8f3:	rex add DWORD PTR [rax],eax
   14003d8f6:	add    BYTE PTR [rax],al
   14003d8f8:	(bad)  
   14003d8f9:	sbb    DWORD PTR [rdx],eax
   14003d8fb:	rex add DWORD PTR [rax],eax
   14003d8fe:	add    BYTE PTR [rax],al
   14003d900:	adc    DWORD PTR [rax],eax
   14003d902:	add    BYTE PTR [rax],al
   14003d904:	(bad)  
   14003d905:	add    BYTE PTR [rax],al
   14003d907:	add    BYTE PTR [rip+0x25000000],bl        # 0x16503d90d
   14003d90d:	add    BYTE PTR [rax],al
   14003d90f:	add    BYTE PTR [rcx],ch
   14003d911:	add    BYTE PTR [rax],al
   14003d913:	add    BYTE PTR [rip+0x43000000],dh        # 0x18303d919
   14003d919:	add    BYTE PTR [rax],al
   14003d91b:	add    BYTE PTR [rbx+0x0],dl
   14003d91e:	add    BYTE PTR [rax],al
   14003d920:	add    BYTE PTR [eax],al
   14003d923:	add    BYTE PTR [rbx-0x5d000000],al
   14003d929:	add    BYTE PTR [rax],al
   14003d92b:	add    bl,dl
   14003d92d:	add    BYTE PTR [rax],al
   14003d92f:	add    BYTE PTR [rcx],al
   14003d931:	add    DWORD PTR [rax],eax
   14003d933:	add    BYTE PTR [rbx+0x1],cl
   14003d936:	add    BYTE PTR [rax],al
   14003d938:	cdq    
   14003d939:	add    DWORD PTR [rax],eax
   14003d93b:	add    BYTE PTR [rcx],cl
   14003d93d:	add    al,BYTE PTR [rax]
   14003d93f:	add    BYTE PTR [rdi+0x35000002],al
   14003d945:	add    eax,DWORD PTR [rax]
   14003d947:	add    BYTE PTR [rdi],al
   14003d949:	add    al,0x0
   14003d94b:	add    BYTE PTR [rbx],cl
   14003d94d:	add    eax,0x65b0000
   14003d952:	add    BYTE PTR [rax],al
   14003d954:	add    eax,0x1f000008
   14003d959:	or     al,BYTE PTR [rax]
   14003d95b:	add    BYTE PTR [rbx+0x300000c],dh
   14003d961:	adc    BYTE PTR [rax],al
   14003d963:	add    BYTE PTR [rdi],ch
   14003d965:	adc    al,0x0
   14003d967:	add    BYTE PTR [rcx+0x19],bh
   14003d96a:	add    BYTE PTR [rax],al
   14003d96c:	adc    DWORD PTR [rax],esp
   14003d96e:	add    BYTE PTR [rax],al
   14003d970:	pop    rbx
   14003d971:	sub    BYTE PTR [rax],al
   14003d973:	add    bh,cl
   14003d975:	xor    al,BYTE PTR [rax]
   14003d977:	add    BYTE PTR [rbx],bl
   14003d979:	add    BYTE PTR [rax],al
   14003d97c:	mov    bh,0x50
   14003d97e:	add    BYTE PTR [rax],al
   14003d980:	movabs eax,ds:0x5300008003000065
   14003d989:	movabs eax,ds:0x10000cb350000
   14003d992:	add    DWORD PTR [rax],eax
   14003d994:	mov    eax,DWORD PTR [rdx+0x1]
   14003d997:	add    BYTE PTR [rcx-0x6a],ah
   14003d99a:	add    DWORD PTR [rax],eax
   14003d99c:	sbb    eax,0x29000200
   14003d9a1:	test   DWORD PTR [rdx],eax
   14003d9a3:	add    bl,al
   14003d9a5:	sub    al,0x3
   14003d9a7:	add    BYTE PTR [rbx],al
   14003d9a9:	add    BYTE PTR [rax+rax*1],al
   14003d9ac:	(bad)  
   14003d9ad:	or     al,BYTE PTR [rip+0x6599300]        # 0x1465d6cb3
   14003d9b3:	add    BYTE PTR [rip+0x53000800],dl        # 0x19303e1b9
   14003d9b9:	adc    al,0xa
   14003d9bb:	add    BYTE PTR [rbx],ah
   14003d9bd:	mov    bl,0xc
   14003d9bf:	add    BYTE PTR [rdi],al
   14003d9c1:	add    BYTE PTR [rax],dl
   14003d9c3:	add    BYTE PTR [rbx+0x1f001428],dh
   14003d9c9:	sbb    WORD PTR [rax],ax
   14003d9cc:	adc    DWORD PTR [rax],eax
   14003d9ce:	and    BYTE PTR [rax],al
   14003d9d0:	push   rcx
   14003d9d1:	push   rcx
   14003d9d2:	sub    BYTE PTR [rax],al
   14003d9d4:	dec    ebx
   14003d9d6:	xor    al,BYTE PTR [rax]
   14003d9d8:	sldt   WORD PTR [rax+0x0]
   14003d9dc:	lea    esp,[rdx-0x67feffb0]
   14003d9e2:	add    BYTE PTR gs:[rcx],cl
   14003d9e5:	add    BYTE PTR [rax-0x5ebadf00],al
   14003d9eb:	add    cl,bh
   14003d9ed:	(bad)  
   14003d9ee:	retf   
   14003d9ef:	add    bh,bh
   14003d9f1:	(bad)  
   14003d9f2:	(bad)  
   14003d9f3:	inc    DWORD PTR [rax]
   14003d9f5:	add    BYTE PTR [rax],al
   14003d9f7:	add    BYTE PTR [rax+0x140041e],bh
   14003d9fd:	add    BYTE PTR [rax],al
   14003d9ff:	add    BYTE PTR [rsp+rdx*1],ch
   14003da02:	add    BYTE PTR [rax+0x1],al
   14003da05:	add    BYTE PTR [rax],al
   14003da07:	add    BYTE PTR [rax],al
   14003da09:	adc    BYTE PTR [rax],al
   14003da0b:	rex add DWORD PTR [rax],eax
   14003da0e:	add    BYTE PTR [rax],al
   14003da10:	add    BYTE PTR [rax],dl
   14003da12:	add    BYTE PTR [rax+0x1],al
   14003da15:	add    BYTE PTR [rax],al
   14003da17:	add    BYTE PTR [rax],al
   14003da19:	adc    BYTE PTR [rax],al
   14003da1b:	rex add DWORD PTR [rax],eax
   14003da1e:	add    BYTE PTR [rax],al
   14003da20:	add    BYTE PTR [rax],dl
   14003da22:	add    BYTE PTR [rax+0x1],al
   14003da25:	add    BYTE PTR [rax],al
   14003da27:	add    al,bl
   14003da29:	and    BYTE PTR [rax+rax*2],al
   14003da2c:	add    DWORD PTR [rax],eax
   14003da2e:	add    BYTE PTR [rax],al
   14003da30:	(bad)  
   14003da31:	(bad)  
   14003da32:	add    BYTE PTR [rax+0x1],al
   14003da35:	add    BYTE PTR [rax],al
   14003da37:	add    BYTE PTR [rax+0x60],bh
   14003da3a:	add    BYTE PTR [rax+0x1],al
   14003da3d:	add    BYTE PTR [rax],al
   14003da3f:	add    BYTE PTR ds:0x14000,ah
   14003da46:	add    BYTE PTR [rax],al
   14003da48:	sbb    BYTE PTR [rcx],ah
   14003da4a:	add    al,0x40
   14003da4c:	add    DWORD PTR [rax],eax
   14003da4e:	add    BYTE PTR [rax],al
   14003da50:	(bad)  
   14003da51:	(bad)  
   14003da52:	add    BYTE PTR [rax+0x1],al
   14003da55:	add    BYTE PTR [rax],al
   14003da57:	add    BYTE PTR [rax+0x60],bh
   14003da5a:	add    BYTE PTR [rax+0x1],al
   14003da5d:	add    BYTE PTR [rax],al
   14003da5f:	add    al,dh
   14003da61:	sub    al,BYTE PTR [rax]
   14003da63:	rex add DWORD PTR [rax],eax
   14003da66:	add    BYTE PTR [rax],al
   14003da68:	rex.RXB ins BYTE PTR es:[rdi],dx
   14003da6a:	outs   dx,DWORD PTR ds:[rsi]
   14003da6b:	(bad)
   14003da70:	(bad)  
   14003da71:	and    BYTE PTR [rax+rax*2],al
   14003da74:	add    DWORD PTR [rax],eax
   14003da76:	add    BYTE PTR [rax],al
   14003da78:	rex.WR and rax,0x14000
   14003da7e:	add    BYTE PTR [rax],al
   14003da80:	call   0x14143daaf
	...
   14003da8d:	add    BYTE PTR [rax],al
   14003da8f:	add    BYTE PTR [rsi],dh
   14003da91:	add    BYTE PTR [rsi+0x0],al
   14003da94:	xor    eax,0x39003300
   14003da99:	add    BYTE PTR [rcx],bh
   14003da9b:	add    BYTE PTR [rdx],dh
   14003da9d:	add    BYTE PTR [rsi],dh
   14003da9f:	add    BYTE PTR [rip+0x46003800],ch        # 0x1860412a5
   14003daa5:	add    BYTE PTR [rax+rax*1],dh
   14003daa8:	xor    al,0x0
   14003daaa:	sub    eax,0x33003400
   14003daaf:	add    BYTE PTR [rsi+0x0],ah
   14003dab2:	xor    eax,DWORD PTR [rax]
   14003dab4:	sub    eax,0x41003900
   14003dab9:	add    BYTE PTR [rax+rax*1+0x30],al
   14003dabd:	add    BYTE PTR [rip+0x45004200],ch        # 0x185041cc3
   14003dac3:	add    BYTE PTR [rsi+0x0],al
   14003dac6:	cmp    DWORD PTR [rax],eax
   14003dac8:	rex.RX add BYTE PTR [rbp+0x0],r8b
   14003dacc:	add    BYTE PTR [r8],r15b
   14003dacf:	add    BYTE PTR [rax+rax*1],dh
   14003dad2:	cmp    DWORD PTR [rax],eax
   14003dad4:	add    BYTE PTR [rcx+0x0],r8b
	...
   14003dae0:	mov    eax,0x1400421
   14003dae5:	add    BYTE PTR [rax],al
   14003dae7:	add    ah,dl
   14003dae9:	sbb    DWORD PTR [rdx],eax
   14003daeb:	rex add DWORD PTR [rax],eax
   14003daee:	add    BYTE PTR [rax],al
   14003daf0:	(bad)  
   14003daf1:	sbb    DWORD PTR [rdx],eax
   14003daf3:	rex add DWORD PTR [rax],eax
   14003daf6:	add    BYTE PTR [rax],al
   14003daf8:	or     al,0x2b
   14003dafa:	add    BYTE PTR [rax+0x1],al
   14003dafd:	add    BYTE PTR [rax],al
   14003daff:	add    BYTE PTR [rax],cl
   14003db01:	sub    eax,DWORD PTR [rax]
   14003db03:	rex add DWORD PTR [rax],eax
   14003db06:	add    BYTE PTR [rax],al
   14003db08:	or     BYTE PTR [rbx],ch
   14003db0a:	add    BYTE PTR [rax+0x1],al
   14003db0d:	add    BYTE PTR [rax],al
   14003db0f:	add    BYTE PTR [rax+0x21],ch
   14003db12:	add    al,0x40
   14003db14:	add    DWORD PTR [rax],eax
   14003db16:	add    BYTE PTR [rax],al
   14003db18:	js     0x14003db45
   14003db1a:	add    BYTE PTR [rax+0x1],al
   14003db1d:	add    BYTE PTR [rax],al
   14003db1f:	add    BYTE PTR [rax+0x2c],bl
   14003db22:	add    BYTE PTR [rax+0x1],al
   14003db25:	add    BYTE PTR [rax],al
   14003db27:	add    BYTE PTR [rax],bh
   14003db29:	sub    eax,DWORD PTR [rax]
   14003db2b:	rex add DWORD PTR [rax],eax
   14003db2e:	add    BYTE PTR [rax],al
   14003db30:	xor    al,0x2b
   14003db32:	add    BYTE PTR [rax+0x1],al
   14003db35:	add    BYTE PTR [rax],al
   14003db37:	add    BYTE PTR [rax],cl
   14003db39:	sub    eax,DWORD PTR [rax]
   14003db3b:	rex add DWORD PTR [rax],eax
   14003db3e:	add    BYTE PTR [rax],al
   14003db40:	jbe    0x14003dba7
   14003db42:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003db46:	cmp    al,0x54
   14003db48:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14003db4d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003db51:	add    BYTE PTR [eax],al
   14003db54:	add    BYTE PTR [rax],al
   14003db56:	add    BYTE PTR [rax],al
   14003db58:	(bad)  
   14003db59:	and    al,BYTE PTR [rax+rax*2]
   14003db5c:	add    DWORD PTR [rax],eax
   14003db5e:	add    BYTE PTR [rax],al
   14003db60:	(bad)  
   14003db61:	sbb    DWORD PTR [rdx],eax
   14003db63:	rex add DWORD PTR [rax],eax
   14003db66:	add    BYTE PTR [rax],al
   14003db68:	add    BYTE PTR [rsi],ch
   14003db6a:	add    BYTE PTR [rax+0x1],al
   14003db6d:	add    BYTE PTR [rax],al
   14003db6f:	add    BYTE PTR [rip+0x6400],ah        # 0x140043f75
   14003db75:	add    BYTE PTR [rax],al
   14003db77:	add    BYTE PTR [rax],ch
   14003db79:	add    BYTE PTR [rax+0x0],dh
   14003db7c:	jb     0x14003db7e
   14003db7e:	add    BYTE PTR gs:[rbx+0x0],dh
   14003db82:	jae    0x14003db84
   14003db84:	and    BYTE PTR [rax],al
   14003db86:	cmp    al,0x0
   14003db88:	jb     0x14003db8a
   14003db8a:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14003db8f:	add    BYTE PTR [rdx+0x0],dh
   14003db92:	outs   dx,BYTE PTR ds:[rsi]
   14003db93:	add    BYTE PTR [rsi],bh
   14003db95:	add    BYTE PTR [rax],ah
   14003db97:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003db9b:	add    BYTE PTR [rax],ah
   14003db9d:	add    BYTE PTR [rbx+0x0],ah
   14003dba0:	outs   dx,DWORD PTR ds:[rsi]
   14003dba1:	add    BYTE PTR [rsi+0x0],ch
   14003dba4:	je     0x14003dba6
   14003dba6:	imul   eax,DWORD PTR [rax],0x75006e
   14003dbac:	add    BYTE PTR gs:[rcx],ch
	...
   14003dbb7:	add    BYTE PTR [rip+0x64003400],ah        # 0x1a4040fbd
   14003dbbd:	add    BYTE PTR [rax],al
   14003dbbf:	add    BYTE PTR [rip+0x6434],ah        # 0x140043ff9
   14003dbc5:	add    BYTE PTR [rax],al
   14003dbc7:	add    BYTE PTR [rax],cl
   14003dbc9:	and    eax,DWORD PTR [rax+rax*2]
   14003dbcc:	add    DWORD PTR [rax],eax
   14003dbce:	add    BYTE PTR [rax],al
   14003dbd0:	movabs al,ds:0xac0000000140003e
   14003dbd9:	(bad)  
   14003dbda:	add    BYTE PTR [rax+0x1],al
   14003dbdd:	add    BYTE PTR [rax],al
   14003dbdf:	add    BYTE PTR [rax+0x1400041],bh
   14003dbe5:	add    BYTE PTR [rax],al
   14003dbe7:	add    BYTE PTR [rax],cl
   14003dbe9:	sub    eax,DWORD PTR [rax]
   14003dbeb:	rex add DWORD PTR [rax],eax
   14003dbee:	add    BYTE PTR [rax],al
   14003dbf0:	mov    eax,0x1400040
   14003dbf5:	add    BYTE PTR [rax],al
   14003dbf7:	add    BYTE PTR [rcx+0x73],cl
   14003dbfa:	push   rdi
   14003dbfb:	outs   dx,DWORD PTR ds:[rsi]
   14003dbfc:	ja     0x14003dc34
   14003dbfe:	xor    al,0x50
   14003dc00:	jb     0x14003dc71
   14003dc02:	movsxd esp,DWORD PTR [rbp+0x73]
   14003dc05:	jae    0x14003dc07
   14003dc07:	add    BYTE PTR [rbx+0x65],ch
   14003dc0a:	jb     0x14003dc7a
   14003dc0c:	gs ins BYTE PTR es:[rdi],dx
   14003dc0e:	xor    esi,DWORD PTR [rdx]
	...
   14003dc18:	rex.RXB
   14003dc19:	gs je  0x14003dc6a
   14003dc1c:	(bad)  
   14003dc1d:	je     0x14003dc88
   14003dc1f:	jbe    0x14003dc86
   14003dc21:	push   rbx
   14003dc22:	jns    0x14003dc97
   14003dc24:	je     0x14003dc8b
   14003dc26:	ins    DWORD PTR es:[rdi],dx
   14003dc27:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003dc29:	outs   dx,WORD PTR ds:[rsi]
   14003dc2b:	add    BYTE PTR [rbp+0x49],dl
   14003dc2e:	add    BYTE PTR [rax],al
   14003dc30:	and    eax,0x2e342573
   14003dc35:	xor    al,0x64
   14003dc37:	add    BYTE PTR [rsp+rbp*2+0x6c],ah
   14003dc3b:	add    BYTE PTR [rax],al
   14003dc3d:	add    BYTE PTR [rax],al
   14003dc3f:	add    BYTE PTR [rax],dh
   14003dc41:	and    eax,DWORD PTR [rax+rax*2]
   14003dc44:	add    DWORD PTR [rax],eax
   14003dc46:	add    BYTE PTR [rax],al
   14003dc48:	rex.R push rsi
   14003dc4a:	add    BYTE PTR [rax+0x1],al
   14003dc4d:	add    BYTE PTR [rax],al
   14003dc4f:	add    BYTE PTR [rax+rax*1+0x0],bl
   14003dc53:	add    BYTE PTR [rax],al
   14003dc55:	add    BYTE PTR [rax],al
   14003dc57:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e044f5d
   14003dc5d:	add    BYTE PTR [rip+0x7300],ah        # 0x140044f63
   14003dc63:	add    BYTE PTR [rax],al
   14003dc65:	add    BYTE PTR [rax],al
   14003dc67:	add    BYTE PTR [rip+0x25007300],ah        # 0x165044f6d
   14003dc6d:	add    BYTE PTR [rbx+0x0],dh
	...
   14003dc78:	push   rsi
   14003dc79:	gs jb  0x14003dce5
   14003dc7c:	data16 jns 0x14003dcd5
   14003dc7f:	gs jb  0x14003dcf5
   14003dc82:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14003dc89:	add    BYTE PTR [r8],al
   14003dc8c:	add    BYTE PTR [rax],al
   14003dc8e:	add    BYTE PTR [rax],al
   14003dc90:	push   rsi
   14003dc91:	gs jb  0x14003dce7
   14003dc94:	gs je  0x14003dcda
   14003dc97:	outs   dx,DWORD PTR ds:[rsi]
   14003dc98:	outs   dx,BYTE PTR ds:[rsi]
   14003dc99:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   14003dca2:	imul   eax,DWORD PTR [rax],0x0
   14003dca5:	add    BYTE PTR [rax],al
   14003dca7:	add    BYTE PTR [rbp+0x0],ch
   14003dcaa:	jae    0x14003dcac
   14003dcac:	movsxd eax,DWORD PTR [rax]
   14003dcae:	outs   dx,DWORD PTR ds:[rsi]
   14003dcaf:	add    BYTE PTR [rdx+0x0],dh
   14003dcb2:	add    BYTE PTR gs:[rbp+0x0],ah
   14003dcb6:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003dcbb:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003dcbf:	add    BYTE PTR [rax+0x23],bl
   14003dcc2:	add    al,0x40
   14003dcc4:	add    DWORD PTR [rax],eax
   14003dcc6:	add    BYTE PTR [rax],al
   14003dcc8:	add    BYTE PTR [rsi+0x0],ah
   14003dccb:	rex add DWORD PTR [rax],eax
   14003dcce:	add    BYTE PTR [rax],al
   14003dcd0:	imul   esp,DWORD PTR [rbp+0x72],0x6e
   14003dcd4:	gs ins BYTE PTR es:[rdi],dx
   14003dcd6:	xor    esi,DWORD PTR [rdx]
   14003dcd8:	cs fs ins BYTE PTR es:[rdi],dx
   14003dcdb:	ins    BYTE PTR es:[rdi],dx
   14003dcdc:	add    BYTE PTR [rax],al
   14003dcde:	add    BYTE PTR [rax],al
   14003dce0:	rex.WXB
   14003dce1:	rex.RB push r10
   14003dce3:	rex.WRX
   14003dce4:	rex.RB
   14003dce5:	xor    r14,QWORD PTR [rdx]
   14003dce8:	cs rex.R
   14003dcea:	rex.WR
   14003dceb:	rex.WR add BYTE PTR [rax],r8b
   14003dcee:	add    BYTE PTR [rax],al
   14003dcf0:	rex.W
   14003dcf1:	push   r10
   14003dcf3:	rex.R push rdi
   14003dcf5:	push   r10
   14003dcf7:	rex.RB pop r12
   14003dcf9:	rex.R
   14003dcfa:	rex.RB push r11
   14003dcfc:	rex.XB push r10
   14003dcfe:	rex.WB push r8
   14003dd00:	push   rsp
   14003dd01:	rex.WB
   14003dd02:	rex.WRXB
   14003dd03:	rex.WRX pop rsp
   14003dd05:	push   rbx
   14003dd06:	jns    0x14003dd7b
   14003dd08:	je     0x14003dd6f
   14003dd0a:	ins    DWORD PTR es:[rdi],dx
   14003dd0b:	pop    rsp
   14003dd0c:	rex.XB
   14003dd0d:	outs   dx,BYTE PTR gs:[rsi]
   14003dd0f:	je     0x14003dd83
   14003dd11:	(bad)  
   14003dd12:	ins    BYTE PTR es:[rdi],dx
   14003dd13:	push   rax
   14003dd14:	jb     0x14003dd85
   14003dd16:	movsxd esp,DWORD PTR [rbp+0x73]
   14003dd19:	jae    0x14003dd8a
   14003dd1b:	jb     0x14003dd79
   14003dd1d:	xor    BYTE PTR [rax],al
   14003dd1f:	add    BYTE PTR [rsi+0x4d],bh
   14003dd22:	rex.W jp 0x14003dd25
   14003dd25:	add    BYTE PTR [rax],al
   14003dd27:	add    BYTE PTR [rsi+0x4d],bh
   14003dd2a:	push   0x7a
   14003dd2f:	add    BYTE PTR [rsi+0x6d],bh
   14003dd32:	push   0x7a
   14003dd37:	add    BYTE PTR [rax+0x72],dl
   14003dd3a:	outs   dx,DWORD PTR ds:[rsi]
   14003dd3b:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x7361
   14003dd42:	push   rbx
   14003dd43:	je     0x14003dda6
   14003dd45:	jb     0x14003ddbb
   14003dd47:	gs add BYTE PTR fs:[rax],al
   14003dd4b:	add    BYTE PTR [rax],al
   14003dd4d:	add    BYTE PTR [rax],al
   14003dd4f:	add    BYTE PTR [rax+0x72],dl
   14003dd52:	outs   dx,DWORD PTR ds:[rsi]
   14003dd53:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x7361
   14003dd5a:	push   rbx
   14003dd5b:	je     0x14003ddbe
   14003dd5d:	jb     0x14003ddd3
   14003dd5f:	gs fs rex.WRXB jne 0x14003ddd8
   14003dd64:	jo     0x14003dddb
   14003dd66:	je     0x14003ddae
   14003dd68:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x0
   14003dd70:	push   rax
   14003dd71:	imul   esi,DWORD PTR [rax+0x65],0x6e676953
   14003dd78:	(bad)  
   14003dd79:	ins    BYTE PTR es:[rdi],dx
   14003dd7a:	rex.XB ins BYTE PTR es:[rdi],dx
   14003dd7c:	imul   esp,DWORD PTR [rbp+0x6e],0x74
   14003dd83:	add    BYTE PTR [rax],al
   14003dd85:	add    BYTE PTR [rax],al
   14003dd87:	add    BYTE PTR [rax+0x69],dl
   14003dd8a:	jo     0x14003ddf1
   14003dd8c:	push   rbx
   14003dd8d:	imul   esp,DWORD PTR [rdi+0x6e],0x65536c61
   14003dd94:	jb     0x14003de0c
   14003dd96:	gs jb  0x14003dd99
   14003dd99:	add    BYTE PTR [rax],al
   14003dd9b:	add    BYTE PTR [rax],al
   14003dd9d:	add    BYTE PTR [rax],al
   14003dd9f:	add    BYTE PTR [rdx+0x65],dl
   14003dda2:	imul   esi,DWORD PTR fs:[rdx+0x65],0x6f437463
   14003ddaa:	ins    DWORD PTR es:[rdi],dx
   14003ddab:	jo     0x14003de19
   14003ddad:	gs je  0x14003de15
	...
   14003ddb8:	rex.XB ins BYTE PTR es:[rdi],dx
   14003ddba:	outs   dx,DWORD PTR ds:[rsi]
   14003ddbb:	jae    0x14003de22
   14003ddbd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003ddbf:	ins    DWORD PTR es:[rdi],dx
   14003ddc0:	jo     0x14003de2e
   14003ddc2:	gs je  0x14003de2a
   14003ddc5:	add    BYTE PTR [rax],al
   14003ddc7:	add    BYTE PTR [rdi+rbp*2+0x67],cl
   14003ddcb:	addr32 gs jb 0x14003de18
   14003ddcf:	outs   dx,BYTE PTR ds:[rsi]
   14003ddd0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003ddd8:	add    BYTE PTR fs:[rax],al
   14003dddb:	add    BYTE PTR [rax],al
   14003dddd:	add    BYTE PTR [rax],al
   14003dddf:	add    BYTE PTR [rdx+0x75],al
   14003dde2:	data16 data16 gs jb 0x14003de37
   14003dde7:	outs   dx,DWORD PTR ds:[rsi]
   14003dde8:	outs   dx,DWORD PTR ds:[rsi]
   14003dde9:	ins    BYTE PTR es:[rdi],dx
   14003ddea:	add    BYTE PTR [rax],al
   14003ddec:	add    BYTE PTR [rax],al
   14003ddee:	add    BYTE PTR [rax],al
   14003ddf0:	rex.RB jbe 0x14003de58
   14003ddf3:	outs   dx,BYTE PTR ds:[rsi]
   14003ddf4:	je     0x14003de38
   14003ddf6:	jne    0x14003de5e
   14003ddf8:	data16 gs jb 0x14003de3d
   14003ddfc:	jb     0x14003de70
   14003ddfe:	(bad)  
   14003ddff:	jns    0x14003de01
   14003de01:	add    BYTE PTR [rax],al
   14003de03:	add    BYTE PTR [rax],al
   14003de05:	add    BYTE PTR [rax],al
   14003de07:	add    BYTE PTR [rdx+0x75],al
   14003de0a:	data16 data16 gs jb 0x14003de50
   14003de0f:	jb     0x14003de83
   14003de11:	(bad)  
   14003de12:	jns    0x14003de14
   14003de14:	rex.B
   14003de15:	fs ins DWORD PTR es:[rdi],dx
   14003de17:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14003de1e:	add    BYTE PTR [rax],al
   14003de20:	imul   r13d,DWORD PTR [rbp+r12*2+0x48],0x65646165
   14003de29:	jb     0x14003de2b
   14003de2b:	add    BYTE PTR [rax],al
   14003de2d:	add    BYTE PTR [rax],al
   14003de2f:	add    BYTE PTR [rbx+0x6f],al
   14003de32:	outs   dx,BYTE PTR ds:[rsi]
   14003de33:	je     0x14003dea7
   14003de35:	outs   dx,DWORD PTR ds:[rsi]
   14003de36:	ins    BYTE PTR es:[rdi],dx
   14003de37:	rex.X ins BYTE PTR es:[rdi],dx
   14003de39:	outs   dx,DWORD PTR ds:[rsi]
   14003de3a:	movsxd ebp,DWORD PTR [rbx+0x73]
   14003de3d:	add    BYTE PTR [rax],al
   14003de3f:	add    BYTE PTR [rax+0x69],dl
   14003de42:	jo     0x14003dea9
   14003de44:	rex.WRB
   14003de45:	gs ins DWORD PTR es:[rdi],dx
   14003de47:	add    BYTE PTR [rax+0x69],dl
   14003de4a:	jo     0x14003deb1
   14003de4c:	rex.XB ins BYTE PTR es:[rdi],dx
   14003de4e:	imul   esp,DWORD PTR [rbp+0x6e],0x69705374
   14003de55:	outs   dx,BYTE PTR ds:[rsi]
   14003de56:	ins    BYTE PTR es:[rdi],dx
   14003de57:	outs   dx,DWORD PTR ds:[rsi]
   14003de58:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003de5b:	add    BYTE PTR [rax],al
   14003de5d:	add    BYTE PTR [rax],al
   14003de5f:	add    BYTE PTR [rbp+0x65],cl
   14003de62:	jae    0x14003ded7
   14003de64:	(bad)  
   14003de65:	imul   ebp,DWORD PTR [esi+0x67],0x6e697053
   14003de6d:	ins    BYTE PTR es:[rdi],dx
   14003de6e:	outs   dx,DWORD PTR ds:[rsi]
   14003de6f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003de72:	add    BYTE PTR [rax],al
   14003de74:	add    BYTE PTR [rax],al
   14003de76:	add    BYTE PTR [rax],al
   14003de78:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003de7a:	outs   dx,BYTE PTR ds:[rsi]
   14003de7b:	je     0x14003deef
   14003de7d:	outs   dx,DWORD PTR ds:[rsi]
   14003de7e:	ins    BYTE PTR es:[rdi],dx
   14003de7f:	push   rbx
   14003de80:	jo     0x14003deeb
   14003de82:	outs   dx,BYTE PTR ds:[rsi]
   14003de83:	ins    BYTE PTR es:[rdi],dx
   14003de84:	outs   dx,DWORD PTR ds:[rsi]
   14003de85:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003de88:	rex.RX jb 0x14003def0
   14003de8b:	gs push rcx
   14003de8d:	jne    0x14003def4
   14003de8f:	jne    0x14003def6
   14003de91:	push   rbx
   14003de92:	gs ins DWORD PTR es:[rdi],dx
   14003de94:	(bad)  
   14003de95:	jo     0x14003deff
   14003de97:	outs   dx,DWORD PTR ds:[rsi]
   14003de98:	jb     0x14003deff
   14003de9a:	add    BYTE PTR [rax],al
   14003de9c:	add    BYTE PTR [rax],al
   14003de9e:	add    BYTE PTR [rax],al
   14003dea0:	push   rax
   14003dea1:	imul   esi,DWORD PTR [rax+0x65],0x76726553
   14003dea8:	gs jb  0x14003defe
   14003deab:	push   0x6f647475
   14003deb0:	ja     0x14003df20
   14003deb2:	add    BYTE PTR [rax],al
   14003deb4:	add    BYTE PTR [rax],al
   14003deb6:	add    BYTE PTR [rax],al
   14003deb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003deba:	ins    BYTE PTR es:[rdi],dx
   14003debb:	ins    BYTE PTR es:[rdi],dx
   14003debc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003dec1:	outs   dx,BYTE PTR ds:[rsi]
   14003dec2:	push   rbx
   14003dec3:	gs je  0x14003df3a
   14003dec6:	imul   ebp,DWORD PTR [rsi+0x67],0x69705373
   14003decd:	outs   dx,BYTE PTR ds:[rsi]
   14003dece:	ins    BYTE PTR es:[rdi],dx
   14003decf:	outs   dx,DWORD PTR ds:[rsi]
   14003ded0:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003ded3:	add    BYTE PTR [rax],al
   14003ded5:	add    BYTE PTR [rax],al
   14003ded7:	add    BYTE PTR [rbp+0x76],al
   14003deda:	outs   dx,BYTE PTR gs:[rsi]
   14003dedc:	je     0x14003df2f
   14003dede:	jne    0x14003df45
   14003dee0:	jne    0x14003df47
   14003dee2:	add    BYTE PTR fs:[rax],al
   14003dee5:	add    BYTE PTR [rax],al
   14003dee7:	add    BYTE PTR [rbp+0x76],al
   14003deea:	outs   dx,BYTE PTR gs:[rsi]
   14003deec:	je     0x14003df32
   14003deee:	gs push rcx
   14003def0:	jne    0x14003df57
   14003def2:	jne    0x14003df59
   14003def4:	add    BYTE PTR fs:[rax],al
   14003def7:	add    BYTE PTR [rsi+0x0],dh
   14003defa:	jae    0x14003defc
   14003defc:	jo     0x14003defe
   14003defe:	add    BYTE PTR gs:[rdx+0x0],dh
   14003df02:	data16 add BYTE PTR [rax],al
   14003df05:	add    BYTE PTR [rax],al
   14003df07:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14003df0b:	(bad)  
   14003df0c:	ins    BYTE PTR es:[rdi],dx
   14003df0d:	add    BYTE PTR cs:[rax],al
   14003df10:	and    eax,0x2e532573
   14003df15:	and    eax,0x5c5c0073
   14003df1a:	cs pop rsp
   14003df1c:	jo     0x14003df87
   14003df1e:	jo     0x14003df85
   14003df20:	pop    rsp
   14003df21:	push   rsi
   14003df22:	push   rbx
   14003df23:	push   rax
   14003df24:	gs jb  0x14003df8d
   14003df27:	push   rax
   14003df28:	imul   esi,DWORD PTR [rax+0x65],0x0
   14003df2f:	add    BYTE PTR [rdi+0x70],ch
   14003df32:	gs jb  0x14003df96
   14003df35:	je     0x14003dfa6
   14003df37:	jb     0x14003df59
   14003df39:	push   rbx
   14003df3a:	rex.XB
   14003df3b:	rex.WRB pop r15
   14003df3d:	rex.W
   14003df3e:	rex.B
   14003df3f:	rex.WRX
   14003df40:	rex.R
   14003df41:	rex.WR
   14003df42:	sub    BYTE PTR [r9],r13b
   14003df45:	add    BYTE PTR [rax],al
   14003df47:	add    BYTE PTR [rbx+0x65],dl
   14003df4a:	jb     0x14003dfc2
   14003df4c:	imul   esp,DWORD PTR [rbx+0x65],0x74634173
   14003df53:	imul   esi,DWORD PTR [rsi+0x65],0x560000
   14003df5a:	push   rbx
   14003df5b:	add    BYTE PTR [rax+0x0],dl
   14003df5e:	add    BYTE PTR gs:[rdx+0x0],dh
   14003df62:	data16 add BYTE PTR [rbx+0x0],dl
   14003df66:	jb     0x14003df68
   14003df68:	jbe    0x14003df6a
   14003df6a:	add    BYTE PTR cs:[rbp+0x0],ah
   14003df6e:	js     0x14003df70
   14003df70:	add    BYTE PTR gs:[rax],al
   14003df73:	add    BYTE PTR [rax],al
   14003df75:	add    BYTE PTR [rax],al
   14003df77:	add    BYTE PTR [rax+0x25],bh
   14003df7a:	add    al,0x40
   14003df7c:	add    DWORD PTR [rax],eax
   14003df7e:	add    BYTE PTR [rax],al
   14003df80:	mov    al,0x78
   14003df82:	add    BYTE PTR [rax+0x1],al
	...
   14003df8d:	add    BYTE PTR [rax],al
   14003df8f:	add    BYTE PTR [rbx+0x0],dl
   14003df92:	outs   dx,DWORD PTR ds:[rsi]
   14003df93:	add    BYTE PTR [rsi+0x0],ah
   14003df96:	je     0x14003df98
   14003df98:	ja     0x14003df9a
   14003df9a:	(bad)  
   14003df9b:	add    BYTE PTR [rdx+0x0],dh
   14003df9e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14003dfa3:	add    BYTE PTR [rcx+0x0],ch
   14003dfa6:	movsxd eax,DWORD PTR [rax]
   14003dfa8:	jb     0x14003dfaa
   14003dfaa:	outs   dx,DWORD PTR ds:[rsi]
   14003dfab:	add    BYTE PTR [rbx+0x0],dh
   14003dfae:	outs   dx,DWORD PTR ds:[rsi]
   14003dfaf:	add    BYTE PTR [rsi+0x0],ah
   14003dfb2:	je     0x14003dfb4
   14003dfb4:	pop    rsp
   14003dfb5:	add    BYTE PTR [rsi+0x0],dl
   14003dfb8:	imul   eax,DWORD PTR [rax],0x750073
   14003dfbe:	(bad)  
   14003dfbf:	add    BYTE PTR [rax+rax*1+0x53],ch
   14003dfc3:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003dfc7:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003dfcb:	add    BYTE PTR [rdi+0x0],ch
   14003dfce:	pop    rsp
   14003dfcf:	add    BYTE PTR [rcx],bh
   14003dfd1:	add    BYTE PTR [rsi],ch
   14003dfd3:	add    BYTE PTR [rax],dh
   14003dfd5:	add    BYTE PTR [rax+rax*1+0x47],bl
   14003dfd9:	add    BYTE PTR [rbp+0x0],ah
   14003dfdc:	outs   dx,BYTE PTR ds:[rsi]
   14003dfdd:	add    BYTE PTR [rbp+0x0],ah
   14003dfe0:	jb     0x14003dfe2
   14003dfe2:	(bad)  
   14003dfe3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003dfe7:	add    BYTE PTR [rbp+0x0],dl
   14003dfea:	jae    0x14003dfec
   14003dfec:	add    BYTE PTR gs:[rdx+0x0],dh
   14003dff0:	rex.XB add BYTE PTR [r9+0x0],spl
   14003dff4:	outs   dx,BYTE PTR ds:[rsi]
   14003dff5:	add    BYTE PTR [rcx+0x0],al
   14003dff8:	jne    0x14003dffa
   14003dffa:	je     0x14003dffc
   14003dffc:	outs   dx,DWORD PTR ds:[rsi]
   14003dffd:	add    BYTE PTR [rbx+0x0],dl
   14003e000:	add    BYTE PTR gs:[rsi+0x0],ch
   14003e004:	add    BYTE PTR fs:[rbp+0x0],al
   14003e008:	jb     0x14003e00a
   14003e00a:	jb     0x14003e00c
   14003e00c:	outs   dx,DWORD PTR ds:[rsi]
   14003e00d:	add    BYTE PTR [rdx+0x0],dh
   14003e010:	push   rdx
   14003e011:	add    BYTE PTR [rbp+0x0],ah
   14003e014:	jo     0x14003e016
   14003e016:	outs   dx,DWORD PTR ds:[rsi]
   14003e017:	add    BYTE PTR [rdx+0x0],dh
   14003e01a:	je     0x14003e01c
   14003e01c:	add    BYTE PTR [rax],al
   14003e01e:	add    BYTE PTR [rax],al
   14003e020:	push   rbx
   14003e021:	add    BYTE PTR [rdi+0x0],ch
   14003e024:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14003e029:	add    BYTE PTR [rcx+0x0],ah
   14003e02c:	jb     0x14003e02e
   14003e02e:	add    BYTE PTR gs:[rax+rax*1+0x57],bl
   14003e033:	add    BYTE PTR [rdi+0x0],ch
   14003e036:	ja     0x14003e038
   14003e038:	add    BYTE PTR ss:[rax+rax*1],dh
   14003e03c:	xor    eax,DWORD PTR [rax]
   14003e03e:	xor    al,BYTE PTR [rax]
   14003e040:	outs   dx,BYTE PTR ds:[rsi]
   14003e041:	add    BYTE PTR [rdi+0x0],ch
   14003e044:	add    BYTE PTR fs:[rbp+0x0],ah
   14003e048:	pop    rsp
   14003e049:	add    BYTE PTR [rbp+0x0],cl
   14003e04c:	imul   eax,DWORD PTR [rax],0x720063
   14003e052:	outs   dx,DWORD PTR ds:[rsi]
   14003e053:	add    BYTE PTR [rbx+0x0],dh
   14003e056:	outs   dx,DWORD PTR ds:[rsi]
   14003e057:	add    BYTE PTR [rsi+0x0],ah
   14003e05a:	je     0x14003e05c
   14003e05c:	pop    rsp
   14003e05d:	add    BYTE PTR [rax+0x0],dl
   14003e060:	rex.XB add BYTE PTR [r8+0x0],cl
   14003e064:	add    BYTE PTR gs:[rcx+0x0],ah
   14003e068:	ins    BYTE PTR es:[rdi],dx
   14003e069:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003e06d:	add    BYTE PTR [rax+rax*1+0x45],bl
   14003e071:	add    BYTE PTR [rdx+0x0],dh
   14003e074:	jb     0x14003e076
   14003e076:	outs   dx,DWORD PTR ds:[rsi]
   14003e077:	add    BYTE PTR [rdx+0x0],dh
   14003e07a:	push   rdx
   14003e07b:	add    BYTE PTR [rbp+0x0],ah
   14003e07e:	jo     0x14003e080
   14003e080:	outs   dx,DWORD PTR ds:[rsi]
   14003e081:	add    BYTE PTR [rdx+0x0],dh
   14003e084:	je     0x14003e086
   14003e086:	imul   eax,DWORD PTR [rax],0x67006e
   14003e08c:	pop    rsp
   14003e08d:	add    BYTE PTR [rax+rax*1+0x57],al
   14003e091:	add    BYTE PTR [rax+rax*1+0x49],bl
   14003e095:	add    BYTE PTR [rsi+0x0],ch
   14003e098:	jae    0x14003e09a
   14003e09a:	je     0x14003e09c
   14003e09c:	(bad)  
   14003e09d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003e0a1:	add    BYTE PTR [rbp+0x0],ah
   14003e0a4:	add    BYTE PTR fs:[rax],al
   14003e0a7:	add    BYTE PTR [rax+rax*1+0x57],al
   14003e0ab:	add    BYTE PTR [rax],dh
   14003e0ad:	add    BYTE PTR [rdx],dh
   14003e0af:	add    BYTE PTR [rax],dh
   14003e0b1:	add    BYTE PTR [rcx],dh
	...
   14003e0bf:	add    BYTE PTR [rax+0x4b],cl
   14003e0c2:	rex.WR
   14003e0c3:	rex.WRB pop r12
   14003e0c5:	push   rbx
   14003e0c6:	outs   dx,DWORD PTR ds:[rsi]
   14003e0c7:	data16 je 0x14003e141
   14003e0ca:	(bad)  
   14003e0cb:	jb     0x14003e132
   14003e0cd:	pop    rsp
   14003e0ce:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14003e0d6:	je     0x14003e134
   14003e0d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003e0da:	je     0x14003e141
   14003e0dc:	jb     0x14003e14c
   14003e0de:	gs je  0x14003e101
   14003e0e1:	rex.RB js 0x14003e154
   14003e0e4:	ins    BYTE PTR es:[rdi],dx
   14003e0e5:	outs   dx,DWORD PTR ds:[rsi]
   14003e0e6:	jb     0x14003e14d
   14003e0e8:	jb     0x14003e146
   14003e0ea:	push   rdx
   14003e0eb:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69746172
   14003e0f4:	outs   dx,DWORD PTR ds:[rsi]
   14003e0f5:	outs   dx,BYTE PTR ds:[rsi]
   14003e0f6:	pop    rsp
   14003e0f7:	imul   r12d,DWORD PTR [rdi+0x69],0x506c6174
   14003e0ff:	jb     0x14003e170
   14003e101:	fs jne 0x14003e167
   14003e104:	je     0x14003e14f
   14003e106:	add    BYTE PTR [rax+rax*1+0x77],r12b
   14003e10b:	add    BYTE PTR [rdx],dh
   14003e10d:	add    BYTE PTR [rax],dh
   14003e10f:	add    BYTE PTR [rsi],ch
   14003e111:	add    BYTE PTR [rbp+0x0],ah
   14003e114:	js     0x14003e116
   14003e116:	add    BYTE PTR gs:[rax],ah
   14003e119:	add    BYTE PTR [rip+0x20007800],ch        # 0x16004591f
   14003e11f:	add    BYTE PTR [rip+0x20007300],ch        # 0x160045425
   14003e125:	add    BYTE PTR [rip+0x36004900],ah        # 0x176042a2b
   14003e12b:	add    BYTE PTR [rax+rax*1],dh
   14003e12e:	jne    0x14003e130
	...
   14003e138:	enter  0x425,0x40
   14003e13c:	add    DWORD PTR [rax],eax
   14003e13e:	add    BYTE PTR [rax],al
   14003e140:	cmp    al,0x81
   14003e142:	add    BYTE PTR [rax+0x1],al
   14003e145:	add    BYTE PTR [rax],al
   14003e147:	add    BYTE PTR [rdi+rdi*4+0x137ece1d],dh
   14003e14e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e14f:	xchg   QWORD PTR [r8+0x10aa593f],r14
   14003e156:	sub    al,0xbc
   14003e158:	shr    DWORD PTR [rax-0x1fac291],1
   14003e15e:	rcl    BYTE PTR [rcx],1
   14003e160:	popf   
   14003e161:	fiadd  DWORD PTR [rax]
   14003e163:	ror    BYTE PTR [rdi-0x29],0xba
   14003e167:	jl     0x14003e1b8
   14003e169:	add    BYTE PTR [rbp+0x0],dl
   14003e16c:	push   rsp
   14003e16d:	add    BYTE PTR [rax+0x0],dl
   14003e170:	push   rbp
   14003e171:	add    BYTE PTR [rax+rax*1+0x0],dl
   14003e175:	add    BYTE PTR [rax],al
   14003e177:	add    BYTE PTR [rbx+0x0],dl
   14003e17a:	add    BYTE PTR [r13+0x0],cl
   14003e17e:	push   rax
   14003e17f:	add    BYTE PTR [rax+rax*1+0x45],cl
   14003e183:	add    BYTE PTR [rax],al
   14003e185:	add    BYTE PTR [rax],al
   14003e187:	add    BYTE PTR [rax+rax*1+0x52],dl
   14003e18b:	add    BYTE PTR [rcx+0x0],al
   14003e18e:	rex.XB add BYTE PTR [r13+0x0],al
   14003e192:	add    BYTE PTR [rax],al
   14003e194:	add    BYTE PTR [rax],al
   14003e196:	add    BYTE PTR [rax],al
   14003e198:	rex.XB add BYTE PTR [r15+0x0],cl
   14003e19c:	push   rsi
   14003e19d:	add    BYTE PTR [rbp+0x0],al
   14003e1a0:	push   rdx
   14003e1a1:	add    BYTE PTR [rcx+0x0],al
   14003e1a4:	rex.RXB add BYTE PTR [r13+0x0],r8b
	...
   14003e1b0:	rex.XB add BYTE PTR [r15+0x0],cl
   14003e1b4:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14003e1b8:	push   rbp
   14003e1b9:	add    BYTE PTR [rdx+0x0],dl
   14003e1bc:	push   rdx
   14003e1bd:	add    BYTE PTR [rbp+0x0],al
   14003e1c0:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14003e1c4:	pop    rcx
   14003e1c5:	add    BYTE PTR [rax],al
   14003e1c7:	add    BYTE PTR [rax+rax*1+0x53],al
   14003e1cb:	add    BYTE PTR [rax],al
   14003e1cd:	add    BYTE PTR [rax],al
   14003e1cf:	add    BYTE PTR [rbx+0x0],al
   14003e1d2:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14003e1d6:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14003e1db:	add    BYTE PTR [rdx+0x0],dl
   14003e1de:	add    BYTE PTR [rax],al
   14003e1e0:	(bad)  
   14003e1e1:	add    BYTE PTR [rax],al
   14003e1e3:	add    BYTE PTR [rax],al
   14003e1e5:	add    BYTE PTR [rax],al
   14003e1e7:	add    BYTE PTR [rax+0x0],cl
   14003e1ea:	add    BYTE PTR [r8+rax*1+0x50],r9b
	...
   14003e1f7:	add    BYTE PTR [rbp+0x0],dl
   14003e1fa:	push   rbx
   14003e1fb:	add    BYTE PTR [rbp+0x0],al
   14003e1fe:	push   rdx
   14003e1ff:	add    BYTE PTR [rax],al
   14003e201:	add    BYTE PTR [rax],al
   14003e203:	add    BYTE PTR [rax+rax*1+0x0],al
   14003e207:	add    BYTE PTR [rbx+0x0],al
   14003e20a:	push   rdx
   14003e20b:	add    BYTE PTR [rdi+0x0],cl
   14003e20e:	push   rbx
   14003e20f:	add    BYTE PTR [rbx+0x0],dl
   14003e212:	push   rbx
   14003e213:	add    BYTE PTR [rbp+0x0],al
   14003e216:	push   rbx
   14003e217:	add    BYTE PTR [rbx+0x0],dl
   14003e21a:	rex.WB add BYTE PTR [r15+0x0],cl
   14003e21e:	rex.WRX add BYTE PTR [rax],r8b
   14003e221:	add    BYTE PTR [rax],al
   14003e223:	add    BYTE PTR [rbx+0x0],al
   14003e226:	push   rbx
	...
   14003e22f:	add    BYTE PTR [rdi+0x0],dl
   14003e232:	rex.WB add BYTE PTR [r14+0x0],cl
   14003e236:	rex.XB add BYTE PTR [r15+0x0],cl
   14003e23a:	push   rbp
   14003e23b:	add    BYTE PTR [rsi+0x0],cl
   14003e23e:	push   rsp
   14003e23f:	add    BYTE PTR [rbp+0x0],al
   14003e242:	push   rdx
   14003e243:	add    BYTE PTR [rax],al
   14003e245:	add    BYTE PTR [rax],al
   14003e247:	add    BYTE PTR [rcx+0x0],al
   14003e24a:	push   rbp
   14003e24b:	add    BYTE PTR [rax+rax*1+0x4f],dl
   14003e24f:	add    BYTE PTR [rbp+0x0],cl
   14003e252:	add    BYTE PTR [r10+0x0],dl
   14003e256:	rex.WXB add BYTE PTR [r8],al
   14003e259:	add    BYTE PTR [rax],al
   14003e25b:	add    BYTE PTR [rax],al
   14003e25d:	add    BYTE PTR [rax],al
   14003e25f:	add    BYTE PTR [rax+0x27],dh
   14003e262:	add    al,0x40
   14003e264:	add    DWORD PTR [rax],eax
   14003e266:	add    BYTE PTR [rax],al
   14003e268:	loopne 0x14003e1f9
   14003e26a:	add    BYTE PTR [rax+0x1],al
   14003e26d:	add    BYTE PTR [rax],al
   14003e26f:	add    ah,ch
   14003e271:	pop    QWORD PTR [rax]
   14003e273:	rex add DWORD PTR [rax],eax
   14003e276:	add    BYTE PTR [rax],al
   14003e278:	cld    
   14003e279:	pop    QWORD PTR [rax]
   14003e27b:	rex add DWORD PTR [rax],eax
   14003e27e:	add    BYTE PTR [rax],al
   14003e280:	ror    BYTE PTR [rsi+0x14000],0x0
   14003e287:	add    ah,cl
   14003e289:	mov    es,WORD PTR [rax]
   14003e28b:	rex add DWORD PTR [rax],eax
   14003e28e:	add    BYTE PTR [rax],al
   14003e290:	fmul   DWORD PTR [rsi+0x14000]
   14003e296:	add    BYTE PTR [rax],al
   14003e298:	in     al,0x8e
   14003e29a:	add    BYTE PTR [rax+0x1],al
   14003e29d:	add    BYTE PTR [rax],al
   14003e29f:	add    al,dh
   14003e2a1:	mov    es,WORD PTR [rax]
   14003e2a3:	rex add DWORD PTR [rax],eax
   14003e2a6:	add    BYTE PTR [rax],al
   14003e2a8:	add    al,0x8f
   14003e2aa:	add    BYTE PTR [rax+0x1],al
   14003e2ad:	add    BYTE PTR [rax],al
   14003e2af:	add    BYTE PTR [rdi+rcx*4],cl
   14003e2b2:	add    BYTE PTR [rax+0x1],al
   14003e2b5:	add    BYTE PTR [rax],al
   14003e2b7:	add    BYTE PTR [rax-0x71],cl
   14003e2ba:	add    BYTE PTR [rax+0x1],al
   14003e2bd:	add    BYTE PTR [rax],al
   14003e2bf:	add    BYTE PTR [rax-0x71],dl
   14003e2c2:	add    BYTE PTR [rax+0x1],al
   14003e2c5:	add    BYTE PTR [rax],al
   14003e2c7:	add    al,bl
   14003e2c9:	pop    QWORD PTR [rax]
   14003e2cb:	rex add DWORD PTR [rax],eax
   14003e2ce:	add    BYTE PTR [rax],al
   14003e2d0:	cld    
   14003e2d1:	mov    es,WORD PTR [rax]
   14003e2d3:	rex add DWORD PTR [rax],eax
   14003e2d6:	add    BYTE PTR [rax],al
   14003e2d8:	mov    WORD PTR [rdi+0x14000],cs
   14003e2de:	add    BYTE PTR [rax],al
   14003e2e0:	xchg   esp,eax
   14003e2e1:	pop    QWORD PTR [rax]
   14003e2e3:	rex add DWORD PTR [rax],eax
   14003e2e6:	add    BYTE PTR [rax],al
   14003e2e8:	ror    BYTE PTR [rdi+0x14000],1
   14003e2ee:	add    BYTE PTR [rax],al
   14003e2f0:	rex
   14003e2f1:	es add al,0x40
   14003e2f4:	add    DWORD PTR [rax],eax
   14003e2f6:	add    BYTE PTR [rax],al
   14003e2f8:	mov    eax,0x1400084
   14003e2fd:	add    BYTE PTR [rax],al
   14003e2ff:	add    BYTE PTR [rsi+rcx*4+0x14000],cl
   14003e306:	add    BYTE PTR [rax],al
   14003e308:	and    BYTE PTR [rbp+0x14000],al
   14003e30e:	add    BYTE PTR [rax],al
   14003e310:	or     BYTE PTR [rbx+0x14000],cl
   14003e316:	add    BYTE PTR [rax],al
   14003e318:	sub    al,0x8b
   14003e31a:	add    BYTE PTR [rax+0x1],al
   14003e31d:	add    BYTE PTR [rax],al
   14003e31f:	add    BYTE PTR [rax-0x75],ch
   14003e322:	add    BYTE PTR [rax+0x1],al
   14003e325:	add    BYTE PTR [rax],al
   14003e327:	add    BYTE PTR [rax+0x140008b],bl
   14003e32d:	add    BYTE PTR [rax],al
   14003e32f:	add    BYTE PTR [rax+0x1400083],al
   14003e335:	add    BYTE PTR [rax],al
   14003e337:	add    BYTE PTR [rax],al
   14003e339:	adc    BYTE PTR [rax],al
   14003e33b:	rex add DWORD PTR [rax],eax
   14003e33e:	add    BYTE PTR [rax],al
   14003e340:	sbb    BYTE PTR [rdx],ch
   14003e342:	add    al,0x40
   14003e344:	add    DWORD PTR [rax],eax
   14003e346:	add    BYTE PTR [rax],al
   14003e348:	jl     0x14003e316
   14003e34a:	add    DWORD PTR [rax+0x1],eax
   14003e34d:	add    BYTE PTR [rax],al
   14003e34f:	add    BYTE PTR [rax-0x34],ch
   14003e352:	add    DWORD PTR [rax+0x1],eax
   14003e355:	add    BYTE PTR [rax],al
   14003e357:	add    BYTE PTR [rax],bl
   14003e359:	sub    BYTE PTR [rax+rax*2],al
   14003e35c:	add    DWORD PTR [rax],eax
   14003e35e:	add    BYTE PTR [rax],al
   14003e360:	(bad)
   14003e364:	add    DWORD PTR [rax],eax
   14003e366:	add    BYTE PTR [rax],al
   14003e368:	xor    al,0xc3
   14003e36a:	add    BYTE PTR [rax+0x1],al
   14003e36d:	add    BYTE PTR [rax],al
   14003e36f:	add    BYTE PTR [rax+0x140009e],cl
   14003e375:	add    BYTE PTR [rax],al
   14003e377:	add    BYTE PTR [rax],cl
   14003e379:	sub    eax,DWORD PTR [rax]
   14003e37b:	rex add DWORD PTR [rax],eax
   14003e37e:	add    BYTE PTR [rax],al
   14003e380:	or     BYTE PTR [rbx],ch
   14003e382:	add    BYTE PTR [rax+0x1],al
   14003e385:	add    BYTE PTR [rax],al
   14003e387:	add    BYTE PTR [rax+0x29],dh
   14003e38a:	add    al,0x40
   14003e38c:	add    DWORD PTR [rax],eax
   14003e38e:	add    BYTE PTR [rax],al
   14003e390:	cwde   
   14003e391:	xchg   edx,eax
   14003e392:	add    BYTE PTR [rax+0x1],al
   14003e395:	add    BYTE PTR [rax],al
   14003e397:	add    BYTE PTR [rdx+rdx*4+0x0],al
   14003e39b:	rex add DWORD PTR [rax],eax
   14003e39e:	add    BYTE PTR [rax],al
   14003e3a0:	push   rbp
   14003e3a1:	add    BYTE PTR [rsi+0x0],ch
   14003e3a4:	imul   eax,DWORD PTR [rax],0x6e
   14003e3a7:	add    BYTE PTR [rdi+0x0],ch
   14003e3aa:	ja     0x14003e3ac
   14003e3ac:	outs   dx,BYTE PTR ds:[rsi]
   14003e3ad:	add    BYTE PTR [rax],al
   14003e3af:	add    BYTE PTR [rcx+riz*2+0x65],al
   14003e3b3:	ins    DWORD PTR es:[rdi],dx
   14003e3b4:	outs   dx,DWORD PTR ds:[rsi]
   14003e3b5:	outs   dx,BYTE PTR ds:[rsi]
   14003e3b6:	add    BYTE PTR [rax],al
   14003e3b8:	rex.WRB (bad) 
   14003e3ba:	imul   ebp,DWORD PTR [rbx+rdx*2+0x6c],0x746f
   14003e3c2:	add    BYTE PTR [rax],al
   14003e3c4:	add    BYTE PTR [rax],al
   14003e3c6:	add    BYTE PTR [rax],al
   14003e3c8:	rex.X jne 0x14003e431
   14003e3cb:	push   rdi
   14003e3cc:	jb     0x14003e437
   14003e3ce:	je     0x14003e435
   14003e3d0:	jb     0x14003e3d2
   14003e3d2:	add    BYTE PTR [rax],al
   14003e3d4:	add    BYTE PTR [rax],al
   14003e3d6:	add    BYTE PTR [rax],al
   14003e3d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003e3da:	fs gs js 0x14003e42b
   14003e3de:	addr32 jb 0x14003e3e1
   14003e3e1:	add    BYTE PTR [rax],al
   14003e3e3:	add    BYTE PTR [rax],al
   14003e3e5:	add    BYTE PTR [rax],al
   14003e3e7:	add    BYTE PTR [rcx+0x0],cl
   14003e3ea:	outs   dx,BYTE PTR ds:[rsi]
   14003e3eb:	add    BYTE PTR [rbx+0x0],dh
   14003e3ee:	je     0x14003e3f0
   14003e3f0:	jb     0x14003e3f2
   14003e3f2:	jne    0x14003e3f4
   14003e3f4:	movsxd eax,DWORD PTR [rax]
   14003e3f6:	je     0x14003e3f8
   14003e3f8:	imul   eax,DWORD PTR [rax],0x6e006f
   14003e3fe:	jae    0x14003e400
   14003e400:	push   rdx
   14003e401:	add    BYTE PTR [rbp+0x0],ah
   14003e404:	je     0x14003e406
   14003e406:	imul   eax,DWORD PTR [rax],0x650072
   14003e40c:	add    BYTE PTR fs:[rax],al
   14003e40f:	add    BYTE PTR [rdi+0x65],al
   14003e412:	je     0x14003e461
   14003e414:	(bad)  
   14003e415:	js     0x14003e480
   14003e417:	ins    DWORD PTR es:[rdi],dx
   14003e418:	jne    0x14003e487
   14003e41a:	push   rax
   14003e41b:	jb     0x14003e48c
   14003e41d:	movsxd esp,DWORD PTR [rbp+0x73]
   14003e420:	jae    0x14003e491
   14003e422:	jb     0x14003e46b
   14003e424:	jb     0x14003e495
   14003e426:	jne    0x14003e498
   14003e428:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003e42a:	jne    0x14003e49a
   14003e42c:	je     0x14003e42e
   14003e42e:	add    BYTE PTR [rax],al
   14003e430:	push   rbx
   14003e431:	gs rex.R
   14003e433:	gs (bad) 
   14003e435:	jne    0x14003e49e
   14003e437:	push   rax
   14003e438:	jb     0x14003e4a3
   14003e43a:	jbe    0x14003e4a5
   14003e43c:	ins    BYTE PTR es:[rdi],dx
   14003e43d:	gs add BYTE PTR gs:[eax],al
   14003e442:	add    BYTE PTR [rax],al
   14003e444:	add    BYTE PTR [rax],al
   14003e446:	add    BYTE PTR [rax],al
   14003e448:	push   rbx
   14003e449:	gs push rbx
   14003e44b:	jns    0x14003e4c0
   14003e44d:	je     0x14003e4b4
   14003e44f:	ins    DWORD PTR es:[rdi],dx
   14003e450:	push   rax
   14003e451:	jb     0x14003e4c2
   14003e453:	imul   bp,WORD PTR [rbp+riz*2+0x50],0x6972
   14003e45a:	jbe    0x14003e4c5
   14003e45c:	ins    BYTE PTR es:[rdi],dx
   14003e45d:	gs add BYTE PTR gs:[eax],al
   14003e462:	add    BYTE PTR [rax],al
   14003e464:	add    BYTE PTR [rax],al
   14003e466:	add    BYTE PTR [rax],al
   14003e468:	push   rbx
   14003e469:	gs push rbx
   14003e46b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14003e46f:	imul   esi,DWORD PTR [rcx+rdi*2+0x50],0x69766972
   14003e477:	ins    BYTE PTR es:[rdi],dx
   14003e478:	gs add BYTE PTR gs:[eax],al
   14003e47d:	add    BYTE PTR [rax],al
   14003e47f:	add    BYTE PTR [rbx+0x65],dl
   14003e482:	rex.XB push 0x65676e61
   14003e488:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003e48a:	je     0x14003e4f5
   14003e48c:	data16 jns 0x14003e4df
   14003e48f:	jb     0x14003e4fa
   14003e491:	jbe    0x14003e4fc
   14003e493:	ins    BYTE PTR es:[rdi],dx
   14003e494:	gs add BYTE PTR gs:[ebx+0x65],dl
   14003e49a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003e49c:	movsxd ebp,DWORD PTR [rbx+0x4d]
   14003e49f:	gs ins DWORD PTR es:[rdi],dx
   14003e4a1:	outs   dx,DWORD PTR ds:[rsi]
   14003e4a2:	jb     0x14003e51d
   14003e4a4:	push   rax
   14003e4a5:	jb     0x14003e510
   14003e4a7:	jbe    0x14003e512
   14003e4a9:	ins    BYTE PTR es:[rdi],dx
   14003e4aa:	gs add BYTE PTR gs:[eax],al
   14003e4af:	add    BYTE PTR [rbx+0x65],dl
   14003e4b2:	rex.XB jb 0x14003e51a
   14003e4b5:	(bad)  
   14003e4b6:	je     0x14003e51d
   14003e4b8:	rex.RXB ins BYTE PTR es:[rdi],dx
   14003e4ba:	outs   dx,DWORD PTR ds:[rsi]
   14003e4bb:	(bad)
   14003e4c0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14003e4c7:	add    BYTE PTR [rcx+0x6e],ch
   14003e4ca:	jbe    0x14003e52d
   14003e4cc:	ins    BYTE PTR es:[rdi],dx
   14003e4cd:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x732f7061
   14003e4d5:	gs je  0x14003e514
   14003e4d8:	push   rsp
   14003e4d9:	and    BYTE PTR ds:[rcx+0x74],ch
   14003e4dd:	gs jb  0x14003e541
   14003e4e0:	je     0x14003e551
   14003e4e2:	jb     0x14003e4e4
   14003e4e4:	add    BYTE PTR [rax],al
   14003e4e6:	add    BYTE PTR [rax],al
   14003e4e8:	ins    DWORD PTR es:[rdi],dx
   14003e4e9:	(bad)  
   14003e4ea:	jo     0x14003e51b
   14003e4ec:	jae    0x14003e553
   14003e4ee:	je     0x14003e52c
   14003e4f0:	push   rsp
   14003e4f1:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14003e4f6:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003e4fa:	add    BYTE PTR [eax],al
   14003e4fd:	add    BYTE PTR [rax],al
   14003e4ff:	add    BYTE PTR [rax+0x2a],ch
   14003e502:	add    al,0x40
   14003e504:	add    DWORD PTR [rax],eax
   14003e506:	add    BYTE PTR [rax],al
   14003e508:	hlt    
   14003e509:	cmc    
   14003e50a:	add    BYTE PTR [rax+0x1],al
   14003e50d:	add    BYTE PTR [rax],al
   14003e50f:	add    BYTE PTR [rsi+rsi*8+0x0],ch
   14003e513:	rex add DWORD PTR [rax],eax
   14003e516:	add    BYTE PTR [rax],al
   14003e518:	nop
   14003e519:	in     al,dx
   14003e51a:	add    BYTE PTR [rax+0x1],al
   14003e51d:	add    BYTE PTR [rax],al
   14003e51f:	add    al,al
   14003e521:	sub    al,BYTE PTR [rax+rax*2]
   14003e524:	add    DWORD PTR [rax],eax
   14003e526:	add    BYTE PTR [rax],al
   14003e528:	adc    bh,dh
   14003e52a:	add    BYTE PTR [rax+0x1],al
   14003e52d:	add    BYTE PTR [rax],al
   14003e52f:	add    BYTE PTR [rdi+rsi*8],bl
   14003e532:	add    BYTE PTR [rax+0x1],al
   14003e535:	add    BYTE PTR [rax],al
   14003e537:	add    BYTE PTR [rax-0x6],cl
   14003e53a:	add    BYTE PTR [rax+0x1],al
   14003e53d:	add    BYTE PTR [rax],al
   14003e53f:	add    BYTE PTR [rbx+0x0],dl
   14003e542:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14003e546:	push   rsp
   14003e547:	add    BYTE PTR [rdi+0x0],dl
   14003e54a:	add    BYTE PTR [r10+0x0],dl
   14003e54e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14003e553:	add    BYTE PTR [rcx+0x0],ch
   14003e556:	movsxd eax,DWORD PTR [rax]
   14003e558:	jb     0x14003e55a
   14003e55a:	outs   dx,DWORD PTR ds:[rsi]
   14003e55b:	add    BYTE PTR [rbx+0x0],dh
   14003e55e:	outs   dx,DWORD PTR ds:[rsi]
   14003e55f:	add    BYTE PTR [rsi+0x0],ah
   14003e562:	je     0x14003e564
   14003e564:	pop    rsp
   14003e565:	add    BYTE PTR [rsi+0x0],dl
   14003e568:	imul   eax,DWORD PTR [rax],0x750073
   14003e56e:	(bad)  
   14003e56f:	add    BYTE PTR [rax+rax*1+0x53],ch
   14003e573:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003e577:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003e57b:	add    BYTE PTR [rdi+0x0],ch
   14003e57e:	pop    rsp
   14003e57f:	add    BYTE PTR [rcx],dh
   14003e581:	add    BYTE PTR [rcx],dh
   14003e583:	add    BYTE PTR [rsi],ch
   14003e585:	add    BYTE PTR [rax],dh
   14003e587:	add    BYTE PTR [rax+rax*1+0x56],bl
   14003e58b:	add    BYTE PTR [rbx+0x0],dl
   14003e58e:	push   rax
   14003e58f:	add    BYTE PTR [rbp+0x0],ah
   14003e592:	jb     0x14003e594
   14003e594:	data16 add BYTE PTR [rax+rax*1+0x4d],bl
   14003e599:	add    BYTE PTR [rdi+0x0],ch
   14003e59c:	outs   dx,BYTE PTR ds:[rsi]
   14003e59d:	add    BYTE PTR [rcx+0x0],ch
   14003e5a0:	je     0x14003e5a2
   14003e5a2:	outs   dx,DWORD PTR ds:[rsi]
   14003e5a3:	add    BYTE PTR [rdx+0x0],dh
   14003e5a6:	pop    rsp
   14003e5a7:	add    BYTE PTR [rbp+0x0],al
   14003e5aa:	je     0x14003e5ac
   14003e5ac:	ja     0x14003e5ae
   14003e5ae:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003e5b2:	outs   dx,BYTE PTR ds:[rsi]
   14003e5b3:	add    BYTE PTR [rsi+0x0],ah
   14003e5b6:	imul   eax,DWORD PTR [rax],0x67
   14003e5bc:	add    BYTE PTR [rax],al
   14003e5be:	add    BYTE PTR [rax],al
   14003e5c0:	rex.X add BYTE PTR [rbp+0x0],sil
   14003e5c4:	data16 add BYTE PTR [rsi+0x0],ah
   14003e5c8:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e5cc:	push   rbx
   14003e5cd:	add    BYTE PTR [rcx+0x0],ch
   14003e5d0:	jp     0x14003e5d2
   14003e5d2:	add    BYTE PTR gs:[rax],al
   14003e5d5:	add    BYTE PTR [rax],al
   14003e5d7:	add    BYTE PTR [rsi+0x0],al
   14003e5da:	ins    BYTE PTR es:[rdi],dx
   14003e5db:	add    BYTE PTR [rbp+0x0],dh
   14003e5de:	jae    0x14003e5e0
   14003e5e0:	push   0x69005400
   14003e5e5:	add    BYTE PTR [rbp+0x0],ch
   14003e5e8:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e5ec:	add    BYTE PTR [rax],al
   14003e5ee:	add    BYTE PTR [rax],al
   14003e5f0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003e5f4:	js     0x14003e5f6
   14003e5f6:	rex.X add BYTE PTR [rbp+0x0],sil
   14003e5fa:	data16 add BYTE PTR [rsi+0x0],ah
   14003e5fe:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e602:	jae    0x14003e604
   14003e604:	add    BYTE PTR [rax],al
   14003e606:	add    BYTE PTR [rax],al
   14003e608:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14003e60c:	outs   dx,BYTE PTR ds:[rsi]
   14003e60d:	add    BYTE PTR [rdx+0x0],al
   14003e610:	jne    0x14003e612
   14003e612:	data16 add BYTE PTR [rsi+0x0],ah
   14003e616:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e61a:	jae    0x14003e61c
   14003e61c:	add    BYTE PTR [rax],al
   14003e61e:	add    BYTE PTR [rax],al
   14003e620:	push   rbp
   14003e621:	add    BYTE PTR [rbx+0x0],dh
   14003e624:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e628:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14003e62c:	jb     0x14003e62e
   14003e62e:	add    BYTE PTR [ebp+0x0],ah
   14003e632:	add    BYTE PTR [rax+r8*1+0x61],r13b
   14003e637:	add    BYTE PTR [rdi+0x0],ah
   14003e63a:	jae    0x14003e63c
   14003e63c:	add    BYTE PTR [rax],al
   14003e63e:	add    BYTE PTR [rax],al
   14003e640:	push   rbx
   14003e641:	je     0x14003e6a4
   14003e643:	jb     0x14003e6b9
   14003e645:	rex.WXB
   14003e646:	gs jb  0x14003e6b7
   14003e649:	gs ins BYTE PTR es:[rdi],dx
   14003e64b:	push   rsp
   14003e64c:	jb     0x14003e6af
   14003e64e:	movsxd esp,DWORD PTR [rbp+0x0]
   14003e651:	add    BYTE PTR [rax],al
   14003e653:	add    BYTE PTR [rax],al
   14003e655:	add    BYTE PTR [rax],al
   14003e657:	add    BYTE PTR [rbx+0x0],cl
   14003e65a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e65e:	outs   dx,BYTE PTR ds:[rsi]
   14003e65f:	add    BYTE PTR [rbp+0x0],ah
   14003e662:	ins    BYTE PTR es:[rdi],dx
   14003e663:	add    BYTE PTR [rax+rax*1+0x72],dl
   14003e667:	add    BYTE PTR [rcx+0x0],ah
   14003e66a:	movsxd eax,DWORD PTR [rax]
   14003e66c:	add    BYTE PTR gs:[rbx+0x0],al
   14003e670:	outs   dx,DWORD PTR ds:[rsi]
   14003e671:	add    BYTE PTR [rsi+0x0],ch
   14003e674:	je     0x14003e676
   14003e676:	jb     0x14003e678
   14003e678:	outs   dx,DWORD PTR ds:[rsi]
   14003e679:	add    BYTE PTR [rax+rax*1+0x2e],ch
   14003e67d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003e681:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003e685:	add    BYTE PTR [rax],al
   14003e687:	add    BYTE PTR [rsi],ch
   14003e689:	add    BYTE PTR [rax+rax*1+0x6d],dh
   14003e68d:	add    BYTE PTR [rax+0x0],dh
	...
   14003e698:	rex.XB jb 0x14003e700
   14003e69b:	(bad)  
   14003e69c:	je     0x14003e703
   14003e69e:	rex.WRB
   14003e69f:	gs jb  0x14003e709
   14003e6a2:	gs fs push rsp
   14003e6a5:	jb     0x14003e708
   14003e6a7:	movsxd esp,DWORD PTR [rbp+0x46]
   14003e6aa:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x560000
   14003e6b2:	push   rbx
   14003e6b3:	add    BYTE PTR [rax+0x0],dl
   14003e6b6:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e6ba:	data16 add BYTE PTR [rbp+0x0],cl
   14003e6be:	outs   dx,DWORD PTR ds:[rsi]
   14003e6bf:	add    BYTE PTR [rsi+0x0],ch
   14003e6c2:	and    BYTE PTR [rax],al
   14003e6c4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14003e6c8:	add    BYTE PTR [edi+0x0],ah
   14003e6cc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14003e6d8:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r10b
   14003e6dd:	add    BYTE PTR [rbx+0x0],cl
   14003e6e0:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e6e4:	outs   dx,BYTE PTR ds:[rsi]
   14003e6e5:	add    BYTE PTR [rbp+0x0],ah
   14003e6e8:	ins    BYTE PTR es:[rdi],dx
   14003e6e9:	add    BYTE PTR [rax],ah
   14003e6eb:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14003e6ef:	add    BYTE PTR [rdi+0x0],ah
   14003e6f2:	add    BYTE PTR [ebp+0x0],ah
   14003e6f6:	jb     0x14003e6f8
	...
   14003e700:	add    BYTE PTR cs:[rbx+0x0],ch
   14003e704:	jb     0x14003e706
   14003e706:	outs   dx,BYTE PTR ds:[rsi]
   14003e707:	add    BYTE PTR [rsi],ch
   14003e709:	add    BYTE PTR [rbp+0x0],ah
   14003e70c:	je     0x14003e70e
   14003e70e:	ins    BYTE PTR es:[rdi],dx
	...
   14003e717:	add    BYTE PTR [rsi],ch
   14003e719:	add    BYTE PTR [rcx+0x0],ah
   14003e71c:	jo     0x14003e71e
   14003e71e:	jo     0x14003e720
   14003e720:	add    BYTE PTR cs:[rbp+0x0],ah
   14003e724:	je     0x14003e726
   14003e726:	ins    BYTE PTR es:[rdi],dx
	...
   14003e72f:	add    BYTE PTR [rax],dh
   14003e731:	sub    al,0x4
   14003e733:	rex add DWORD PTR [rax],eax
   14003e736:	add    BYTE PTR [rax],al
   14003e738:	xor    BYTE PTR [rsi],dh
   14003e73a:	add    DWORD PTR [rax+0x1],eax
   14003e73d:	add    BYTE PTR [rax],al
   14003e73f:	add    BYTE PTR [rax+0x1400130],ch
   14003e745:	add    BYTE PTR [rax],al
   14003e747:	add    al,bl
   14003e749:	xor    eax,0x14001
   14003e74e:	add    BYTE PTR [rax],al
   14003e750:	pop    rax
   14003e751:	sub    al,0x4
   14003e753:	rex add DWORD PTR [rax],eax
   14003e756:	add    BYTE PTR [rax],al
   14003e758:	xor    BYTE PTR [rdx],0x1
   14003e75b:	rex add DWORD PTR [rax],eax
   14003e75e:	add    BYTE PTR [rax],al
   14003e760:	test   al,0x30
   14003e762:	add    DWORD PTR [rax+0x1],eax
   14003e765:	add    BYTE PTR [rax],al
   14003e767:	add    BYTE PTR [rax],ch
   14003e769:	xor    al,BYTE PTR [rcx]
   14003e76b:	rex add DWORD PTR [rax],eax
	...
   14003e77e:	add    BYTE PTR [rax],al
   14003e780:	sub    BYTE PTR [rsp+rax*1],0x40
   14003e784:	add    DWORD PTR [rax],eax
   14003e786:	add    BYTE PTR [rax],al
   14003e788:	(bad)  
   14003e789:	sbb    DWORD PTR [rdx],eax
   14003e78b:	rex add DWORD PTR [rax],eax
   14003e78e:	add    BYTE PTR [rax],al
   14003e790:	test   al,0x30
   14003e792:	add    DWORD PTR [rax+0x1],eax
   14003e795:	add    BYTE PTR [rax],al
   14003e797:	add    al,cl
   14003e799:	sub    eax,DWORD PTR [rcx]
   14003e79b:	rex add DWORD PTR [rax],eax
   14003e79e:	add    BYTE PTR [rax],al
   14003e7a0:	adc    BYTE PTR [rip+0x14004],ch        # 0x1400527aa
   14003e7a6:	add    BYTE PTR [rax],al
   14003e7a8:	pop    rsp
   14003e7a9:	add    DWORD PTR [rax+0x1],r8d
   14003e7ad:	add    BYTE PTR [rax],al
   14003e7af:	add    BYTE PTR [rax+0x2d],ah
   14003e7b2:	add    al,0x40
   14003e7b4:	add    DWORD PTR [rax],eax
   14003e7b6:	add    BYTE PTR [rax],al
   14003e7b8:	js     0x14003e811
   14003e7ba:	add    DWORD PTR [rax+0x1],eax
   14003e7bd:	add    BYTE PTR [rax],al
   14003e7bf:	add    BYTE PTR [rax],al
   14003e7c1:	(bad)  
   14003e7c2:	add    al,0x40
   14003e7c4:	add    DWORD PTR [rax],eax
   14003e7c6:	add    BYTE PTR [rax],al
   14003e7c8:	(bad)  
   14003e7c9:	sbb    DWORD PTR [rdx],eax
   14003e7cb:	rex add DWORD PTR [rax],eax
   14003e7ce:	add    BYTE PTR [rax],al
   14003e7d0:	(bad)  
   14003e7d1:	sbb    DWORD PTR [rdx],eax
   14003e7d3:	rex add DWORD PTR [rax],eax
   14003e7d6:	add    BYTE PTR [rax],al
   14003e7d8:	(bad)  
   14003e7d9:	sbb    DWORD PTR [rdx],eax
   14003e7db:	rex add DWORD PTR [rax],eax
   14003e7de:	add    BYTE PTR [rax],al
   14003e7e0:	(bad)  
   14003e7e1:	sbb    DWORD PTR [rdx],eax
   14003e7e3:	rex add DWORD PTR [rax],eax
   14003e7e6:	add    BYTE PTR [rax],al
   14003e7e8:	mov    al,0x2d
   14003e7ea:	add    al,0x40
   14003e7ec:	add    DWORD PTR [rax],eax
   14003e7ee:	add    BYTE PTR [rax],al
   14003e7f0:	or     al,0x59
   14003e7f2:	add    DWORD PTR [rax+0x1],eax
   14003e7f5:	add    BYTE PTR [rax],al
   14003e7f7:	add    BYTE PTR [rax],ah
   14003e7f9:	pop    rcx
   14003e7fa:	add    DWORD PTR [rax+0x1],eax
   14003e7fd:	add    BYTE PTR [rax],al
   14003e7ff:	add    BYTE PTR [rax+0x1400159],bl
   14003e805:	add    BYTE PTR [rax],al
   14003e807:	add    BYTE PTR [rax],al
   14003e809:	adc    BYTE PTR [rax],al
   14003e80b:	rex add DWORD PTR [rax],eax
   14003e80e:	add    BYTE PTR [rax],al
   14003e810:	cwde   
   14003e811:	cs add al,0x40
   14003e814:	add    DWORD PTR [rax],eax
   14003e816:	add    BYTE PTR [rax],al
   14003e818:	or     al,0x59
   14003e81a:	add    DWORD PTR [rax+0x1],eax
   14003e81d:	add    BYTE PTR [rax],al
   14003e81f:	add    BYTE PTR [rcx+rbx*2],bl
   14003e822:	add    DWORD PTR [rax+0x1],eax
   14003e825:	add    BYTE PTR [rax],al
   14003e827:	add    BYTE PTR [rax+0x1400083],al
   14003e82d:	add    BYTE PTR [rax],al
   14003e82f:	add    BYTE PTR [rax],al
   14003e831:	adc    BYTE PTR [rax],al
   14003e833:	rex add DWORD PTR [rax],eax
   14003e836:	add    BYTE PTR [rax],al
   14003e838:	push   rax
   14003e839:	(bad)  
   14003e83a:	add    al,0x40
   14003e83c:	add    DWORD PTR [rax],eax
   14003e83e:	add    BYTE PTR [rax],al
   14003e840:	(bad)  
   14003e841:	(bad)  
   14003e842:	add    BYTE PTR [rax+0x1],al
   14003e845:	add    BYTE PTR [rax],al
   14003e847:	add    BYTE PTR [rax+0x60],bh
   14003e84a:	add    BYTE PTR [rax+0x1],al
   14003e84d:	add    BYTE PTR [rax],al
   14003e84f:	add    al,cl
   14003e851:	(bad)  
   14003e853:	rex add DWORD PTR [rax],eax
	...
   14003e85e:	add    BYTE PTR [rax],al
   14003e860:	mov    al,0x2f
   14003e862:	add    al,0x40
   14003e864:	add    DWORD PTR [rax],eax
   14003e866:	add    BYTE PTR [rax],al
   14003e868:	sbb    al,0x65
   14003e86a:	add    DWORD PTR [rax+0x1],eax
   14003e86d:	add    BYTE PTR [rax],al
   14003e86f:	add    BYTE PTR [rax+0x1400165],dl
   14003e875:	add    BYTE PTR [rax],al
   14003e877:	add    ah,dl
   14003e879:	sbb    DWORD PTR [rdx],eax
   14003e87b:	rex add DWORD PTR [rax],eax
   14003e87e:	add    BYTE PTR [rax],al
   14003e880:	(bad)  
   14003e881:	sbb    DWORD PTR [rdx],eax
   14003e883:	rex add DWORD PTR [rax],eax
   14003e886:	add    BYTE PTR [rax],al
   14003e888:	(bad)  
   14003e889:	sbb    DWORD PTR [rdx],eax
   14003e88b:	rex add DWORD PTR [rax],eax
   14003e88e:	add    BYTE PTR [rax],al
   14003e890:	(bad)  
   14003e891:	sbb    DWORD PTR [rdx],eax
   14003e893:	rex add DWORD PTR [rax],eax
   14003e896:	add    BYTE PTR [rax],al
   14003e898:	add    BYTE PTR [rax],dl
   14003e89a:	add    BYTE PTR [rax+0x1],al
   14003e89d:	add    BYTE PTR [rax],al
   14003e89f:	add    BYTE PTR [rax+0x1400083],al
   14003e8a5:	add    BYTE PTR [rax],al
   14003e8a7:	add    BYTE PTR [rax],al
   14003e8a9:	adc    BYTE PTR [rax],al
   14003e8ab:	rex add DWORD PTR [rax],eax
   14003e8ae:	add    BYTE PTR [rax],al
   14003e8b0:	and    BYTE PTR [rax],al
   14003e8b2:	add    BYTE PTR [rax],al
   14003e8b4:	and    eax,0x7800
   14003e8b9:	add    BYTE PTR [rax],al
   14003e8bb:	add    BYTE PTR [rax],al
   14003e8bd:	add    BYTE PTR [rax],al
   14003e8bf:	add    BYTE PTR [rsi+0x0],dl
   14003e8c2:	push   rbx
   14003e8c3:	add    BYTE PTR [rax+0x0],dl
   14003e8c6:	add    BYTE PTR [r10+0x0],r10b
   14003e8ca:	rex.RX add BYTE PTR [rax],r8b
   14003e8cd:	add    BYTE PTR [rax],al
   14003e8cf:	add    al,bl
   14003e8d1:	(bad)  
   14003e8d2:	add    al,0x40
   14003e8d4:	add    DWORD PTR [rax],eax
   14003e8d6:	add    BYTE PTR [rax],al
   14003e8d8:	test   BYTE PTR [rdi+0x1],dh
   14003e8db:	rex add DWORD PTR [rax],eax
   14003e8de:	add    BYTE PTR [rax],al
   14003e8e0:	sub    BYTE PTR [rax+0x1],bh
   14003e8e3:	rex add DWORD PTR [rax],eax
   14003e8e6:	add    BYTE PTR [rax],al
   14003e8e8:	and    al,0x77
   14003e8ea:	add    DWORD PTR [rax+0x1],eax
   14003e8ed:	add    BYTE PTR [rax],al
   14003e8ef:	add    BYTE PTR [rax],cl
   14003e8f1:	sub    eax,DWORD PTR [rax]
   14003e8f3:	rex add DWORD PTR [rax],eax
   14003e8f6:	add    BYTE PTR [rax],al
   14003e8f8:	or     BYTE PTR [rbx],ch
   14003e8fa:	add    BYTE PTR [rax+0x1],al
   14003e8fd:	add    BYTE PTR [rax],al
   14003e8ff:	add    BYTE PTR [rax+0x1400430],bl
   14003e905:	add    BYTE PTR [rax],al
   14003e907:	add    BYTE PTR [rax+0x60],ah
   14003e90a:	add    BYTE PTR [rax+0x1],al
   14003e90d:	add    BYTE PTR [rax],al
   14003e90f:	add    BYTE PTR [rax+0x60],bh
   14003e912:	add    BYTE PTR [rax+0x1],al
   14003e915:	add    BYTE PTR [rax],al
   14003e917:	add    BYTE PTR [rax+0x79],bh
   14003e91a:	add    DWORD PTR [rax+0x1],eax
   14003e91d:	add    BYTE PTR [rax],al
   14003e91f:	add    BYTE PTR [rax],dh
   14003e921:	add    BYTE PTR [rax+0x0],bh
   14003e924:	add    BYTE PTR [rax],al
   14003e926:	add    BYTE PTR [rax],al
   14003e928:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14003e92c:	outs   dx,BYTE PTR ds:[rsi]
   14003e92d:	add    BYTE PTR [rax+0x0],cl
   14003e930:	(bad)  
   14003e931:	add    BYTE PTR [rax+rax*1+0x74],ch
   14003e935:	add    BYTE PTR [rbp+0x0],ah
   14003e938:	add    BYTE PTR fs:[rbx+0x0],al
   14003e93c:	jns    0x14003e93e
   14003e93e:	movsxd eax,DWORD PTR [rax]
   14003e940:	ins    BYTE PTR es:[rdi],dx
   14003e941:	add    BYTE PTR [rbp+0x0],ah
   14003e944:	jae    0x14003e946
   14003e946:	add    BYTE PTR [rax],al
   14003e948:	xor    BYTE PTR [rax],al
   14003e94a:	js     0x14003e94c
   14003e94c:	and    eax,0x78006c00
   14003e951:	add    BYTE PTR [rax],al
   14003e953:	add    BYTE PTR [rax],al
   14003e955:	add    BYTE PTR [rax],al
   14003e957:	add    BYTE PTR [rax+0x31],cl
   14003e95a:	add    al,0x40
   14003e95c:	add    DWORD PTR [rax],eax
   14003e95e:	add    BYTE PTR [rax],al
   14003e960:	and    al,0x83
   14003e962:	add    DWORD PTR [rax+0x1],eax
   14003e965:	add    BYTE PTR [rax],al
   14003e967:	add    al,dh
   14003e969:	xor    DWORD PTR [rax+rax*2],eax
   14003e96c:	add    DWORD PTR [rax],eax
   14003e96e:	add    BYTE PTR [rax],al
   14003e970:	rcl    BYTE PTR [rsi+0x14001],1
   14003e976:	add    BYTE PTR [rax],al
   14003e978:	sbb    BYTE PTR [rdi+0x14001],dl
   14003e97e:	add    BYTE PTR [rax],al
   14003e980:	(bad)  
   14003e981:	xchg   esi,eax
   14003e982:	add    DWORD PTR [rax+0x1],eax
   14003e985:	add    BYTE PTR [rax],al
   14003e987:	add    ah,ch
   14003e989:	xchg   DWORD PTR [rcx],eax
   14003e98b:	rex add DWORD PTR [rax],eax
   14003e98e:	add    BYTE PTR [rax],al
   14003e990:	or     al,0x6a
   14003e992:	(bad)  [rax+0x11d4f192]
   14003e998:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e999:	pop    rdi
   14003e99a:	add    BYTE PTR [rax-0x6a],al
   14003e99d:	xor    dl,BYTE PTR [rcx-0x1b]
   14003e9a0:	shr    BYTE PTR [rsi-0x7],1
   14003e9a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e9a4:	sub    eax,edi
   14003e9a6:	outs   dx,BYTE PTR ds:[rsi]
   14003e9a7:	rex.RXB add r8d,0x2abdc7cd
   14003e9ae:	or     BYTE PTR [rdx],al
   14003e9b0:	movabs al,ds:0xd400000001400431
   14003e9b9:	sbb    DWORD PTR [rdx],eax
   14003e9bb:	rex add DWORD PTR [rax],eax
   14003e9be:	add    BYTE PTR [rax],al
   14003e9c0:	(bad)  
   14003e9c1:	sbb    DWORD PTR [rdx],eax
   14003e9c3:	rex add DWORD PTR [rax],eax
   14003e9c6:	add    BYTE PTR [rax],al
   14003e9c8:	(bad)  
   14003e9c9:	sbb    DWORD PTR [rdx],eax
   14003e9cb:	rex add DWORD PTR [rax],eax
   14003e9ce:	add    BYTE PTR [rax],al
   14003e9d0:	(bad)  
   14003e9d1:	xchg   DWORD PTR [rcx],eax
   14003e9d3:	rex add DWORD PTR [rax],eax
   14003e9d6:	add    BYTE PTR [rax],al
   14003e9d8:	push   rax
   14003e9d9:	add    BYTE PTR [rax+rax*1],dh
   14003e9dc:	add    BYTE PTR [rax],al
   14003e9de:	add    BYTE PTR [rax],al
   14003e9e0:	rex.WXB add BYTE PTR [r15],sil
   14003e9e3:	add    BYTE PTR [rax],al
   14003e9e5:	add    BYTE PTR [rax],al
   14003e9e7:	add    BYTE PTR [rax+0x0],dl
   14003e9ea:	add    BYTE PTR ss:[rax],al
   14003e9ed:	add    BYTE PTR [rax],al
   14003e9ef:	add    BYTE PTR [rsi+0x0],dl
   14003e9f2:	push   rbx
   14003e9f3:	add    BYTE PTR [rax+0x0],dl
   14003e9f6:	add    BYTE PTR gs:[rdx+0x0],dh
   14003e9fa:	data16 add BYTE PTR [rdi+0x0],bl
   14003e9fe:	push   rax
   14003e9ff:	add    BYTE PTR [rdi+0x0],ch
   14003ea02:	jb     0x14003ea04
   14003ea04:	je     0x14003ea06
   14003ea06:	(bad)  
   14003ea07:	add    BYTE PTR [rdx+0x0],ah
   14003ea0a:	ins    BYTE PTR es:[rdi],dx
   14003ea0b:	add    BYTE PTR [rbp+0x0],ah
   14003ea0e:	add    BYTE PTR cs:[rax+0x0],bh
   14003ea12:	ins    DWORD PTR es:[rdi],dx
   14003ea13:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003ea17:	add    BYTE PTR [rbx+0x0],cl
   14003ea1a:	cmp    BYTE PTR [rax],al
   14003ea1c:	add    BYTE PTR [rax],al
   14003ea1e:	add    BYTE PTR [rax],al
   14003ea20:	pop    rdi
   14003ea21:	add    BYTE PTR [rax],al
   14003ea23:	add    BYTE PTR [rsi],ch
   14003ea25:	js     0x14003ea94
   14003ea27:	ins    BYTE PTR es:[rdi],dx
	...
   14003ea30:	pop    rdi
   14003ea31:	(bad)  
   14003ea32:	jb     0x14003ea97
   14003ea34:	push   0x6c6d782e
   14003ea39:	add    BYTE PTR [rax],al
   14003ea3b:	add    BYTE PTR [rax],al
   14003ea3d:	add    BYTE PTR [rax],al
   14003ea3f:	add    BYTE PTR [rsi+0x0],dl
   14003ea42:	push   rbx
   14003ea43:	add    BYTE PTR [rax+0x0],dl
   14003ea46:	add    BYTE PTR gs:[rdx+0x0],dh
   14003ea4a:	data16 add BYTE PTR [rdi+0x0],bl
   14003ea4e:	push   rax
   14003ea4f:	add    BYTE PTR [rax+rax*1+0x61],ch
   14003ea53:	add    BYTE PTR [rax+rax*1+0x66],dh
   14003ea57:	add    BYTE PTR [rdi+0x0],ch
   14003ea5a:	jb     0x14003ea5c
   14003ea5c:	ins    DWORD PTR es:[rdi],dx
   14003ea5d:	add    BYTE PTR [rdi+0x0],bl
	...
   14003ea70:	add    BYTE PTR [rbx],dh
   14003ea72:	add    al,0x40
   14003ea74:	add    DWORD PTR [rax],eax
   14003ea76:	add    BYTE PTR [rax],al
   14003ea78:	sbb    al,0x59
   14003ea7a:	add    DWORD PTR [rax+0x1],eax
   14003ea7d:	add    BYTE PTR [rax],al
   14003ea7f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ea82:	add    DWORD PTR [rax+0x1],eax
   14003ea85:	add    BYTE PTR [rax],al
   14003ea87:	add    BYTE PTR [rcx+rbx*2],bl
   14003ea8a:	add    DWORD PTR [rax+0x1],eax
   14003ea8d:	add    BYTE PTR [rax],al
   14003ea8f:	add    BYTE PTR [rax+0x140019f],ah
   14003ea95:	add    BYTE PTR [rax],al
   14003ea97:	add    BYTE PTR [rax+0x140019f],ah
   14003ea9d:	add    BYTE PTR [rax],al
   14003ea9f:	add    BYTE PTR [rcx+rbx*2],bl
   14003eaa2:	add    DWORD PTR [rax+0x1],eax
   14003eaa5:	add    BYTE PTR [rax],al
   14003eaa7:	add    BYTE PTR [rsi+rbx*4+0x1],ah
   14003eaab:	rex add DWORD PTR [rax],eax
   14003eaae:	add    BYTE PTR [rax],al
   14003eab0:	pop    rax
   14003eab1:	sahf   
   14003eab2:	add    DWORD PTR [rax+0x1],eax
   14003eab5:	add    BYTE PTR [rax],al
   14003eab7:	add    BYTE PTR [rbx+0x0],al
   14003eaba:	outs   dx,DWORD PTR ds:[rsi]
   14003eabb:	add    BYTE PTR [rbp+0x0],dh
   14003eabe:	outs   dx,BYTE PTR ds:[rsi]
   14003eabf:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003eac3:	add    BYTE PTR [rdx+0x0],dh
   14003eac6:	add    BYTE PTR [rax],al
   14003eac8:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14003eacc:	ins    DWORD PTR es:[rdi],dx
   14003eacd:	add    BYTE PTR [rcx+0x0],ch
   14003ead0:	ins    BYTE PTR es:[rdi],dx
   14003ead1:	add    BYTE PTR [rcx+0x0],bh
   14003ead4:	add    BYTE PTR [rax],al
   14003ead6:	add    BYTE PTR [rax],al
   14003ead8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14003eadc:	ins    DWORD PTR es:[rdi],dx
   14003eadd:	add    BYTE PTR [rbp+0x0],ah
	...
   14003eae8:	pop    rdi
   14003eae9:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14003eaed:	add    BYTE PTR [rbx+0x0],ah
   14003eaf0:	add    BYTE PTR [r8+rax*1+0x74],sil
   14003eaf5:	add    BYTE PTR [rdx+0x0],dh
   14003eaf8:	add    BYTE PTR [rcx+0x0],r12b
   14003eafc:	je     0x14003eafe
   14003eafe:	(bad)  
	...
   14003eb07:	add    BYTE PTR [rdi+0x0],bl
   14003eb0a:	ins    BYTE PTR es:[rdi],dx
   14003eb0b:	add    BYTE PTR [rdi+0x0],ch
   14003eb0e:	movsxd eax,DWORD PTR [rax]
   14003eb10:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14003eb15:	add    BYTE PTR [rax],al
   14003eb17:	add    BYTE PTR [rax+rax*1+0x69],al
   14003eb1b:	add    BYTE PTR [rbx+0x0],dh
   14003eb1e:	jo     0x14003eb20
   14003eb20:	ins    BYTE PTR es:[rdi],dx
   14003eb21:	add    BYTE PTR [rcx+0x0],ah
   14003eb24:	jns    0x14003eb26
   14003eb26:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14003eb2a:	ins    DWORD PTR es:[rdi],dx
   14003eb2b:	add    BYTE PTR [rbp+0x0],ah
   14003eb2e:	add    BYTE PTR [rax],al
   14003eb30:	rex.XB add BYTE PTR [r9+0x0],spl
   14003eb34:	je     0x14003eb36
   14003eb36:	add    BYTE PTR gs:[rdi+0x0],ah
   14003eb3a:	outs   dx,DWORD PTR ds:[rsi]
   14003eb3b:	add    BYTE PTR [rdx+0x0],dh
   14003eb3e:	jns    0x14003eb40
	...
   14003eb48:	push   rdx
   14003eb49:	add    BYTE PTR [rbp+0x0],ah
   14003eb4c:	ins    BYTE PTR es:[rdi],dx
   14003eb4d:	add    BYTE PTR [rdi+0x0],ch
   14003eb50:	(bad)  
   14003eb51:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003eb55:	add    BYTE PTR [rax],al
   14003eb57:	add    BYTE PTR [rax+rax*1+0x65],al
   14003eb5b:	add    BYTE PTR [rbx+0x0],dh
   14003eb5e:	movsxd eax,DWORD PTR [rax]
   14003eb60:	jb     0x14003eb62
   14003eb62:	imul   eax,DWORD PTR [rax],0x740070
   14003eb68:	imul   eax,DWORD PTR [rax],0x6e006f
   14003eb6e:	add    BYTE PTR [rax],al
   14003eb70:	add    BYTE PTR [r11+0x0],r10b
   14003eb74:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   14003eb80:	rex.XB add BYTE PTR [r11+0x0],al
   14003eb84:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   14003eb90:	rex.X add BYTE PTR [rax+0x0],dl
   14003eb94:	push   rbp
   14003eb95:	add    BYTE PTR [rax],al
   14003eb97:	add    BYTE PTR [rdi+0x0],al
   14003eb9a:	jb     0x14003eb9c
   14003eb9c:	outs   dx,DWORD PTR ds:[rsi]
   14003eb9d:	add    BYTE PTR [rbp+0x0],dh
   14003eba0:	jo     0x14003eba2
   14003eba2:	add    BYTE PTR [rax],al
   14003eba4:	rex.WB add BYTE PTR [r9+0x0],dl
	...
   14003ebb0:	add    BYTE PTR [rax+r8*1+0x41],r9b
   14003ebb5:	add    BYTE PTR [rbp+0x0],cl
   14003ebb8:	add    BYTE PTR [r8],r8b
   14003ebbb:	add    BYTE PTR [rax],al
   14003ebbd:	add    BYTE PTR [rax],al
   14003ebbf:	add    BYTE PTR [rax+0x0],dl
   14003ebc2:	add    BYTE PTR gs:[rdx+0x0],dh
   14003ebc6:	data16 add BYTE PTR [rbp+0x0],al
   14003ebca:	jbe    0x14003ebcc
   14003ebcc:	je     0x14003ebce
   14003ebce:	push   rbx
   14003ebcf:	add    BYTE PTR [rbp+0x0],ah
   14003ebd2:	ins    BYTE PTR es:[rdi],dx
   14003ebd3:	add    BYTE PTR [rax],al
   14003ebd5:	add    BYTE PTR [rax],al
   14003ebd7:	add    BYTE PTR [rbp+0x0],cl
   14003ebda:	push   rbx
   14003ebdb:	add    BYTE PTR [rax],al
   14003ebdd:	add    BYTE PTR [rax],al
   14003ebdf:	add    BYTE PTR [rax+0x1400433],cl
   14003ebe5:	add    BYTE PTR [rax],al
   14003ebe7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ebea:	add    DWORD PTR [rax+0x1],eax
   14003ebed:	add    BYTE PTR [rax],al
   14003ebef:	add    BYTE PTR [rcx+rbx*2],bl
   14003ebf2:	add    DWORD PTR [rax+0x1],eax
   14003ebf5:	add    BYTE PTR [rax],al
   14003ebf7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ebfa:	add    DWORD PTR [rax+0x1],eax
   14003ebfd:	add    BYTE PTR [rax],al
   14003ebff:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec02:	add    DWORD PTR [rax+0x1],eax
   14003ec05:	add    BYTE PTR [rax],al
   14003ec07:	add    BYTE PTR [rcx+riz*4+0x1],bl
   14003ec0b:	rex add DWORD PTR [rax],eax
   14003ec0e:	add    BYTE PTR [rax],al
   14003ec10:	sbb    al,0x59
   14003ec12:	add    DWORD PTR [rax+0x1],eax
   14003ec15:	add    BYTE PTR [rax],al
   14003ec17:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec1a:	add    DWORD PTR [rax+0x1],eax
   14003ec1d:	add    BYTE PTR [rax],al
   14003ec1f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec22:	add    DWORD PTR [rax+0x1],eax
   14003ec25:	add    BYTE PTR [rax],al
   14003ec27:	add    BYTE PTR [rdx+rbp*4],dl
   14003ec2a:	add    DWORD PTR [rax+0x1],eax
   14003ec2d:	add    BYTE PTR [rax],al
   14003ec2f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec32:	add    DWORD PTR [rax+0x1],eax
   14003ec35:	add    BYTE PTR [rax],al
   14003ec37:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec3a:	add    DWORD PTR [rax+0x1],eax
   14003ec3d:	add    BYTE PTR [rax],al
   14003ec3f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec42:	add    DWORD PTR [rax+0x1],eax
   14003ec45:	add    BYTE PTR [rax],al
   14003ec47:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec4a:	add    DWORD PTR [rax+0x1],eax
   14003ec4d:	add    BYTE PTR [rax],al
   14003ec4f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec52:	add    DWORD PTR [rax+0x1],eax
   14003ec55:	add    BYTE PTR [rax],al
   14003ec57:	add    al,dl
   14003ec59:	movabs al,ds:0x9fb0000000014001
   14003ec62:	add    DWORD PTR [rax+0x1],eax
   14003ec65:	add    BYTE PTR [rax],al
   14003ec67:	add    BYTE PTR [rdi+rbx*4+0x14001],bh
   14003ec6e:	add    BYTE PTR [rax],al
   14003ec70:	test   al,0x34
   14003ec72:	add    al,0x40
   14003ec74:	add    DWORD PTR [rax],eax
   14003ec76:	add    BYTE PTR [rax],al
   14003ec78:	sbb    al,0x59
   14003ec7a:	add    DWORD PTR [rax+0x1],eax
   14003ec7d:	add    BYTE PTR [rax],al
   14003ec7f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec82:	add    DWORD PTR [rax+0x1],eax
   14003ec85:	add    BYTE PTR [rax],al
   14003ec87:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec8a:	add    DWORD PTR [rax+0x1],eax
   14003ec8d:	add    BYTE PTR [rax],al
   14003ec8f:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec92:	add    DWORD PTR [rax+0x1],eax
   14003ec95:	add    BYTE PTR [rax],al
   14003ec97:	add    BYTE PTR [rcx+rbx*2],bl
   14003ec9a:	add    DWORD PTR [rax+0x1],eax
   14003ec9d:	add    BYTE PTR [rax],al
   14003ec9f:	add    BYTE PTR [rcx+rbx*2],bl
   14003eca2:	add    DWORD PTR [rax+0x1],eax
   14003eca5:	add    BYTE PTR [rax],al
   14003eca7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecaa:	add    DWORD PTR [rax+0x1],eax
   14003ecad:	add    BYTE PTR [rax],al
   14003ecaf:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecb2:	add    DWORD PTR [rax+0x1],eax
   14003ecb5:	add    BYTE PTR [rax],al
   14003ecb7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecba:	add    DWORD PTR [rax+0x1],eax
   14003ecbd:	add    BYTE PTR [rax],al
   14003ecbf:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecc2:	add    DWORD PTR [rax+0x1],eax
   14003ecc5:	add    BYTE PTR [rax],al
   14003ecc7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecca:	add    DWORD PTR [rax+0x1],eax
   14003eccd:	add    BYTE PTR [rax],al
   14003eccf:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecd2:	add    DWORD PTR [rax+0x1],eax
   14003ecd5:	add    BYTE PTR [rax],al
   14003ecd7:	add    BYTE PTR [rcx+rbx*2],bl
   14003ecda:	add    DWORD PTR [rax+0x1],eax
   14003ecdd:	add    BYTE PTR [rax],al
   14003ecdf:	add    BYTE PTR [rcx+rbx*2],bl
   14003ece2:	add    DWORD PTR [rax+0x1],eax
   14003ece5:	add    BYTE PTR [rax],al
   14003ece7:	add    BYTE PTR [rdx+rbp*4+0x14001],bh
   14003ecee:	add    BYTE PTR [rax],al
   14003ecf0:	shl    BYTE PTR [rsp+rax*1],1
   14003ecf3:	rex add DWORD PTR [rax],eax
   14003ecf6:	add    BYTE PTR [rax],al
   14003ecf8:	lock stos BYTE PTR es:[rdi],al
   14003ecfa:	add    DWORD PTR [rax+0x1],eax
   14003ecfd:	add    BYTE PTR [rax],al
   14003ecff:	add    BYTE PTR [rsi+0x0],dl
   14003ed02:	push   rbx
   14003ed03:	add    BYTE PTR [rax+0x0],dl
   14003ed06:	add    BYTE PTR gs:[rdx+0x0],dh
   14003ed0a:	data16 add BYTE PTR [rax],ah
   14003ed0d:	add    BYTE PTR [rax+0x0],dl
   14003ed10:	jb     0x14003ed12
   14003ed12:	outs   dx,DWORD PTR ds:[rsi]
   14003ed13:	add    BYTE PTR [rsi+0x0],ah
   14003ed16:	imul   eax,DWORD PTR [rax],0x65006c
   14003ed1c:	and    BYTE PTR [rax],al
   14003ed1e:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14003ed22:	outs   dx,BYTE PTR ds:[rsi]
   14003ed23:	add    BYTE PTR [rcx+0x0],ch
   14003ed26:	je     0x14003ed28
   14003ed28:	outs   dx,DWORD PTR ds:[rsi]
   14003ed29:	add    BYTE PTR [rdx+0x0],dh
   14003ed2c:	and    BYTE PTR [rax],al
   14003ed2e:	add    BYTE PTR [rdx+0x0],r14b
   14003ed32:	imul   eax,DWORD PTR [rax],0x650076
   14003ed38:	jb     0x14003ed3a
   14003ed3a:	and    BYTE PTR [rax],al
   14003ed3c:	xor    DWORD PTR [rax],eax
   14003ed3e:	xor    DWORD PTR [rax],eax
   14003ed40:	add    BYTE PTR cs:[rax],dh
   14003ed43:	add    BYTE PTR [rax],al
   14003ed45:	add    BYTE PTR [rax],al
   14003ed47:	add    BYTE PTR [rsi+0x0],dl
   14003ed4a:	push   rbx
   14003ed4b:	add    BYTE PTR [rax+0x0],dl
   14003ed4e:	add    BYTE PTR gs:[rdx+0x0],dh
   14003ed52:	data16 add BYTE PTR [rax+rax*1+0x72],al
   14003ed57:	add    BYTE PTR [rsi+0x0],dh
   14003ed5a:	xor    DWORD PTR [rax],eax
   14003ed5c:	xor    DWORD PTR [rax],eax
   14003ed5e:	xor    BYTE PTR [rax],al
   14003ed60:	add    BYTE PTR cs:[rbx+0x0],dh
   14003ed64:	jns    0x14003ed66
   14003ed66:	jae    0x14003ed68
	...
   14003ed70:	push   rsi
   14003ed71:	add    BYTE PTR [rbx+0x0],dl
   14003ed74:	push   rax
   14003ed75:	add    BYTE PTR [rbp+0x0],ah
   14003ed78:	jb     0x14003ed7a
   14003ed7a:	data16 add BYTE PTR [rax+rax*1+0x72],al
   14003ed7f:	add    BYTE PTR [rsi+0x0],dh
   14003ed82:	xor    DWORD PTR [rax],eax
   14003ed84:	xor    DWORD PTR [rax],eax
   14003ed86:	xor    BYTE PTR [rax],al
	...
   14003ed90:	pop    rsp
   14003ed91:	add    BYTE PTR [rax+rax*1+0x2e],bl
   14003ed95:	add    BYTE PTR [rax+rax*1+0x56],bl
   14003ed99:	add    BYTE PTR [rbx+0x0],dl
   14003ed9c:	push   rax
   14003ed9d:	add    BYTE PTR [rbp+0x0],ah
   14003eda0:	jb     0x14003eda2
   14003eda2:	data16 add BYTE PTR [rax+rax*1+0x72],al
   14003eda7:	add    BYTE PTR [rsi+0x0],dh
   14003edaa:	xor    DWORD PTR [rax],eax
   14003edac:	xor    DWORD PTR [rax],eax
   14003edae:	xor    BYTE PTR [rax],al
	...
   14003edb8:	movabs al,ds:0xa400000001400435
   14003edc1:	(bad)  
   14003edc2:	add    DWORD PTR [rax+0x1],eax
   14003edc5:	add    BYTE PTR [rax],al
   14003edc7:	add    BYTE PTR [rdi+rcx*8+0x1],dh
   14003edcb:	rex add DWORD PTR [rax],eax
   14003edce:	add    BYTE PTR [rax],al
   14003edd0:	movabs al,ds:0x8000000014001cd
   14003edd9:	sub    eax,DWORD PTR [rax]
   14003eddb:	rex add DWORD PTR [rax],eax
   14003edde:	add    BYTE PTR [rax],al
   14003ede0:	or     BYTE PTR [rbx],ch
   14003ede2:	add    BYTE PTR [rax+0x1],al
   14003ede5:	add    BYTE PTR [rax],al
   14003ede7:	add    ah,ch
   14003ede9:	rol    BYTE PTR [rcx],1
   14003edeb:	rex add DWORD PTR [rax],eax
   14003edee:	add    BYTE PTR [rax],al
   14003edf0:	rex.RXB ins BYTE PTR es:[rdi],dx
   14003edf2:	outs   dx,DWORD PTR ds:[rsi]
   14003edf3:	(bad)
   14003edf8:	outs   dx,DWORD PTR ds:[rsi]
   14003edf9:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   14003ee00:	outs   dx,DWORD PTR ds:[rsi]
   14003ee01:	data16 data16 add BYTE PTR [rdi+0x6e],ch
   14003ee06:	add    BYTE PTR [rax],al
   14003ee08:	and    al,BYTE PTR [rax]
   14003ee0a:	outs   dx,DWORD PTR ds:[rsi]
   14003ee0b:	add    BYTE PTR [rsi+0x0],ch
   14003ee0e:	and    al,BYTE PTR [rax]
   14003ee10:	sub    al,0x0
   14003ee12:	and    BYTE PTR [rax],al
   14003ee14:	and    al,BYTE PTR [rax]
   14003ee16:	outs   dx,DWORD PTR ds:[rsi]
   14003ee17:	add    BYTE PTR [rsi+0x0],ah
   14003ee1a:	data16 add BYTE PTR [rdx],ah
   14003ee1d:	add    BYTE PTR [rax+rax*1],ch
   14003ee20:	and    BYTE PTR [rax],al
   14003ee22:	outs   dx,DWORD PTR ds:[rsi]
   14003ee23:	add    BYTE PTR [rdx+0x0],dh
   14003ee26:	and    BYTE PTR [rax],al
   14003ee28:	and    al,BYTE PTR [rax]
   14003ee2a:	outs   dx,BYTE PTR ds:[rsi]
   14003ee2b:	add    BYTE PTR [rbp+0x0],ah
   14003ee2e:	jbe    0x14003ee30
   14003ee30:	add    BYTE PTR gs:[rdx+0x0],dh
   14003ee34:	and    al,BYTE PTR [rax]
   14003ee36:	add    BYTE PTR [rax],al
   14003ee38:	add    BYTE PTR [r8+r8*1+0x6f],r13b
   14003ee3d:	add    BYTE PTR [rdx+0x0],ah
   14003ee40:	(bad)  
   14003ee41:	add    BYTE PTR [rax+rax*1+0x50],ch
   14003ee45:	add    BYTE PTR [rdx+0x0],dh
   14003ee48:	outs   dx,DWORD PTR ds:[rsi]
   14003ee49:	add    BYTE PTR [rsi+0x0],ah
   14003ee4c:	imul   eax,DWORD PTR [rax],0x65006c
   14003ee52:	add    BYTE PTR [rax],al
   14003ee54:	outs   dx,BYTE PTR ds:[rsi]
   14003ee55:	gs jbe 0x14003eebd
   14003ee58:	jb     0x14003ee5a
   14003ee5a:	add    BYTE PTR [rax],al
   14003ee5c:	outs   dx,DWORD PTR ds:[rsi]
   14003ee5d:	add    BYTE PTR [rsi+0x0],ch
	...
   14003ee68:	push   rax
   14003ee69:	add    BYTE PTR [rdx+0x0],dh
   14003ee6c:	outs   dx,DWORD PTR ds:[rsi]
   14003ee6d:	add    BYTE PTR [rbx+0x0],ah
   14003ee70:	add    BYTE PTR gs:[rbx+0x0],dh
   14003ee74:	jae    0x14003ee76
   14003ee76:	push   rax
   14003ee77:	add    BYTE PTR [rdx+0x0],dh
   14003ee7a:	outs   dx,DWORD PTR ds:[rsi]
   14003ee7b:	add    BYTE PTR [rsi+0x0],ah
   14003ee7e:	imul   eax,DWORD PTR [rax],0x65006c
   14003ee84:	add    BYTE PTR [rax],al
   14003ee86:	add    BYTE PTR [rax],al
   14003ee88:	push   rsp
   14003ee89:	push   0x64616572
   14003ee8e:	push   rax
   14003ee8f:	jb     0x14003ef00
   14003ee91:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   14003ee98:	push   rax
   14003ee99:	jb     0x14003ef0a
   14003ee9b:	movsxd esp,DWORD PTR [rbp+0x73]
   14003ee9e:	jae    0x14003eef0
   14003eea0:	jb     0x14003ef11
   14003eea2:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x2200
   14003eea9:	add    BYTE PTR [rdi+0x0],ch
   14003eeac:	outs   dx,BYTE PTR ds:[rsi]
   14003eead:	add    BYTE PTR [rdx],ah
   14003eeaf:	add    BYTE PTR [rax],ah
   14003eeb1:	add    BYTE PTR [rdi+0x0],ch
   14003eeb4:	jb     0x14003eeb6
   14003eeb6:	and    BYTE PTR [rax],al
   14003eeb8:	and    al,BYTE PTR [rax]
   14003eeba:	outs   dx,DWORD PTR ds:[rsi]
   14003eebb:	add    BYTE PTR [rsi+0x0],ah
   14003eebe:	data16 add BYTE PTR [rdx],ah
   14003eec1:	add    BYTE PTR [rsi],ch
	...
   14003eecf:	add    BYTE PTR [rbx+0x0],dl
   14003eed2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14003eed6:	push   rsp
   14003eed7:	add    BYTE PTR [rdi+0x0],dl
   14003eeda:	add    BYTE PTR [r10+0x0],dl
   14003eede:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14003eee3:	add    BYTE PTR [rcx+0x0],ch
   14003eee6:	movsxd eax,DWORD PTR [rax]
   14003eee8:	jb     0x14003eeea
   14003eeea:	outs   dx,DWORD PTR ds:[rsi]
   14003eeeb:	add    BYTE PTR [rbx+0x0],dh
   14003eeee:	outs   dx,DWORD PTR ds:[rsi]
   14003eeef:	add    BYTE PTR [rsi+0x0],ah
   14003eef2:	je     0x14003eef4
   14003eef4:	pop    rsp
   14003eef5:	add    BYTE PTR [rsi+0x0],dl
   14003eef8:	imul   eax,DWORD PTR [rax],0x750073
   14003eefe:	(bad)  
   14003eeff:	add    BYTE PTR [rax+rax*1+0x53],ch
   14003ef03:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003ef07:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003ef0b:	add    BYTE PTR [rdi+0x0],ch
   14003ef0e:	pop    rsp
   14003ef0f:	add    BYTE PTR [rcx],dh
   14003ef11:	add    BYTE PTR [rcx],dh
   14003ef13:	add    BYTE PTR [rsi],ch
   14003ef15:	add    BYTE PTR [rax],dh
   14003ef17:	add    BYTE PTR [rax+rax*1+0x56],bl
   14003ef1b:	add    BYTE PTR [rbx+0x0],dl
   14003ef1e:	push   rax
   14003ef1f:	add    BYTE PTR [rbp+0x0],ah
   14003ef22:	jb     0x14003ef24
   14003ef24:	data16 add BYTE PTR [rax+rax*1+0x4d],bl
   14003ef29:	add    BYTE PTR [rdi+0x0],ch
   14003ef2c:	outs   dx,BYTE PTR ds:[rsi]
   14003ef2d:	add    BYTE PTR [rcx+0x0],ch
   14003ef30:	je     0x14003ef32
   14003ef32:	outs   dx,DWORD PTR ds:[rsi]
   14003ef33:	add    BYTE PTR [rdx+0x0],dh
   14003ef36:	pop    rsp
   14003ef37:	add    BYTE PTR [rbx+0x0],dl
   14003ef3a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14003ef3f:	add    BYTE PTR [rcx+0x0],ch
   14003ef42:	outs   dx,BYTE PTR ds:[rsi]
   14003ef43:	add    BYTE PTR [rdi+0x0],ah
   14003ef46:	jae    0x14003ef48
	...
   14003ef50:	rex.W add BYTE PTR [rbx+0x0],cl
   14003ef54:	add    BYTE PTR [r9+0x0],r11b
   14003ef58:	pop    rdi
   14003ef59:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14003ef5d:	add    BYTE PTR [rbx+0x0],al
   14003ef60:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14003ef65:	add    BYTE PTR [rbp+0x0],cl
   14003ef68:	add    BYTE PTR [r11+0x0],al
   14003ef6c:	rex.W add BYTE PTR [rcx+0x0],cl
   14003ef70:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14003ef74:	add    BYTE PTR [rax],al
   14003ef76:	add    BYTE PTR [rax],al
   14003ef78:	push   rsp
   14003ef79:	add    BYTE PTR [rax+0x0],ch
   14003ef7c:	jb     0x14003ef7e
   14003ef7e:	add    BYTE PTR gs:[rcx+0x0],ah
   14003ef82:	add    BYTE PTR fs:[rax+0x0],dl
   14003ef86:	jb     0x14003ef88
   14003ef88:	outs   dx,DWORD PTR ds:[rsi]
   14003ef89:	add    BYTE PTR [rsi+0x0],ah
   14003ef8c:	imul   eax,DWORD PTR [rax],0x65006c
   14003ef92:	add    BYTE PTR [rax],al
   14003ef94:	add    BYTE PTR [rax],al
   14003ef96:	add    BYTE PTR [rax],al
   14003ef98:	rex.WRB (bad) 
   14003ef9a:	js     0x14003efec
   14003ef9c:	jb     0x14003f00d
   14003ef9e:	movsxd esp,DWORD PTR [rbp+0x73]
   14003efa1:	jae    0x14003f008
   14003efa3:	jae    0x14003efa5
   14003efa5:	add    BYTE PTR [rax],al
   14003efa7:	add    BYTE PTR [rax+0x0],cl
   14003efaa:	rex.WXB add BYTE PTR [r13+0x0],al
   14003efae:	pop    rcx
   14003efaf:	add    BYTE PTR [rdi+0x0],bl
   14003efb2:	rex.XB add BYTE PTR [r13+0x0],dl
   14003efb6:	push   rdx
   14003efb7:	add    BYTE PTR [rdx+0x0],dl
   14003efba:	add    BYTE PTR [r14+0x0],r9b
   14003efbe:	push   rsp
   14003efbf:	add    BYTE PTR [rdi+0x0],bl
   14003efc2:	push   rbp
   14003efc3:	add    BYTE PTR [rbx+0x0],dl
   14003efc6:	add    BYTE PTR [r10+0x0],r10b
   14003efca:	add    BYTE PTR [rax],al
   14003efcc:	add    BYTE PTR [rax],al
   14003efce:	add    BYTE PTR [rax],al
   14003efd0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003efd4:	js     0x14003efd6
   14003efd6:	push   rsp
   14003efd7:	add    BYTE PTR [rax+0x0],ch
   14003efda:	jb     0x14003efdc
   14003efdc:	add    BYTE PTR gs:[rcx+0x0],ah
   14003efe0:	add    BYTE PTR fs:[rbx+0x0],dh
   14003efe4:	add    BYTE PTR [rax],al
   14003efe6:	add    BYTE PTR [rax],al
   14003efe8:	push   rbx
   14003efe9:	imul   edi,DWORD PTR [rdx+0x65],0x7542664f
   14003eff0:	data16 data16 gs jb 0x14003f068
   14003eff5:	add    BYTE PTR [rax],al
   14003eff7:	add    BYTE PTR [rbp+0x0],cl
   14003effa:	(bad)  
   14003effb:	add    BYTE PTR [rax+0x0],bh
   14003effe:	push   rax
   14003efff:	add    BYTE PTR [rdx+0x0],dh
   14003f002:	outs   dx,DWORD PTR ds:[rsi]
   14003f003:	add    BYTE PTR [rbx+0x0],ah
   14003f006:	add    BYTE PTR gs:[rbx+0x0],dh
   14003f00a:	jae    0x14003f00c
   14003f00c:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14003f018:	rex.WRB (bad) 
   14003f01a:	js     0x14003f070
   14003f01c:	push   0x64616572
   14003f021:	jae    0x14003f023
   14003f023:	add    BYTE PTR [rax],al
   14003f025:	add    BYTE PTR [rax],al
   14003f027:	add    BYTE PTR [rsi+0x0],cl
   14003f02a:	jne    0x14003f02c
   14003f02c:	ins    DWORD PTR es:[rdi],dx
   14003f02d:	add    BYTE PTR [rdx+0x0],ah
   14003f030:	add    BYTE PTR gs:[rdx+0x0],dh
   14003f034:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   14003f038:	rex.X add BYTE PTR [rbp+0x0],sil
   14003f03c:	data16 add BYTE PTR [rsi+0x0],ah
   14003f040:	add    BYTE PTR gs:[rdx+0x0],dh
   14003f044:	jae    0x14003f046
   14003f046:	add    BYTE PTR [rax],al
   14003f048:	rex.WRB (bad) 
   14003f04a:	js     0x14003f09c
   14003f04c:	(bad)  
   14003f04d:	addr32 gs jae 0x14003f097
   14003f051:	outs   dx,DWORD PTR ds:[rsi]
   14003f052:	jb     0x14003f0ab
   14003f054:	rex.RX
   14003f055:	rex.RXB add BYTE PTR [r8],r8b
   14003f058:	push   rbx
   14003f059:	add    BYTE PTR [rcx+0x0],ch
   14003f05c:	jp     0x14003f05e
   14003f05e:	add    BYTE PTR gs:[rdi+0x0],cl
   14003f062:	data16 add BYTE PTR [rdx+0x0],al
   14003f066:	jne    0x14003f068
   14003f068:	data16 add BYTE PTR [rsi+0x0],ah
   14003f06c:	add    BYTE PTR gs:[rdx+0x0],dh
   14003f070:	jae    0x14003f072
   14003f072:	add    BYTE PTR [rax],al
   14003f074:	add    BYTE PTR [rax],al
   14003f076:	add    BYTE PTR [rax],al
   14003f078:	rex.WRX jne 0x14003f0e8
   14003f07b:	(bad)  
   14003f07c:	gs jb  0x14003f0ce
   14003f07f:	data16 rex.X jne 0x14003f0e9
   14003f083:	data16 gs jb 0x14003f0fa
   14003f087:	add    BYTE PTR [rbp+0x0],cl
   14003f08a:	(bad)  
   14003f08b:	add    BYTE PTR [rax+0x0],bh
   14003f08e:	push   rax
   14003f08f:	add    BYTE PTR [rcx+0x0],ah
   14003f092:	add    BYTE PTR [ebp+0x0],ah
   14003f096:	jae    0x14003f098
   14003f098:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14003f09c:	jb     0x14003f09e
   14003f09e:	push   rdi
   14003f09f:	add    BYTE PTR [rsi+0x0],al
   14003f0a2:	rex.RXB add BYTE PTR [r8],r8b
   14003f0a5:	add    BYTE PTR [rax],al
   14003f0a7:	add    al,cl
   14003f0a9:	xor    eax,0x14004
   14003f0ae:	add    BYTE PTR [rax],al
   14003f0b0:	pop    rax
   14003f0b1:	loopne 0x14003f0b4
   14003f0b3:	rex add DWORD PTR [rax],eax
   14003f0b6:	add    BYTE PTR [rax],al
   14003f0b8:	mov    ah,0xe0
   14003f0ba:	add    DWORD PTR [rax+0x1],eax
   14003f0bd:	add    BYTE PTR [rax],al
   14003f0bf:	add    ah,bh
   14003f0c1:	(bad)  
   14003f0c2:	add    DWORD PTR [rax+0x1],eax
   14003f0c5:	add    BYTE PTR [rax],al
   14003f0c7:	add    BYTE PTR [rax+0x1400436],ah
   14003f0cd:	add    BYTE PTR [rax],al
   14003f0cf:	add    al,ch
   14003f0d1:	call   0x1400530d7
   14003f0d6:	add    BYTE PTR [rax],al
   14003f0d8:	rex.R jmp 0x1400530df
   14003f0de:	add    BYTE PTR [rax],al
   14003f0e0:	push   rsp
   14003f0e1:	add    BYTE PTR [rcx+0x0],ch
   14003f0e4:	ins    DWORD PTR es:[rdi],dx
   14003f0e5:	add    BYTE PTR [rbp+0x0],ah
   14003f0e8:	push   rbx
   14003f0e9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003f0ed:	add    BYTE PTR [rbp+0x0],ch
   14003f0f0:	jo     0x14003f0f2
   14003f0f2:	and    BYTE PTR [rax],al
   14003f0f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003f0f8:	jne    0x14003f0fa
   14003f0fa:	outs   dx,BYTE PTR ds:[rsi]
   14003f0fb:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003f0ff:	add    BYTE PTR [rdx+0x0],dh
   14003f102:	add    BYTE PTR [rax],al
   14003f104:	add    BYTE PTR [rax],al
   14003f106:	add    BYTE PTR [rax],al
   14003f108:	push   rbp
   14003f109:	add    BYTE PTR [rsi+0x0],ch
   14003f10c:	jne    0x14003f10e
   14003f10e:	jae    0x14003f110
   14003f110:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14003f115:	add    BYTE PTR [rax],al
   14003f117:	add    BYTE PTR [rcx],dh
   14003f119:	xor    DWORD PTR [rsi],ebp
   14003f11b:	xor    BYTE PTR [rsi],ch
   14003f11d:	xor    eax,0x37323730
   14003f122:	and    BYTE PTR [rax+0x36],bh
   14003f125:	xor    al,0x0
   14003f127:	add    al,ah
   14003f129:	ss add al,0x40
   14003f12c:	add    DWORD PTR [rax],eax
   14003f12e:	add    BYTE PTR [rax],al
   14003f130:	and    al,0xf4
   14003f132:	add    DWORD PTR [rax+0x1],eax
   14003f135:	add    BYTE PTR [rax],al
   14003f137:	add    BYTE PTR [rax+0x14001f4],al
   14003f13d:	add    BYTE PTR [rax],al
   14003f13f:	add    al,bl
   14003f141:	(bad)  
   14003f142:	add    al,0x40
   14003f144:	add    DWORD PTR [rax],eax
   14003f146:	add    BYTE PTR [rax],al
   14003f148:	in     al,0xed
   14003f14a:	add    DWORD PTR [rax+0x1],eax
   14003f14d:	add    BYTE PTR [rax],al
   14003f14f:	add    BYTE PTR [rax-0x12],al
   14003f152:	add    DWORD PTR [rax+0x1],eax
   14003f155:	add    BYTE PTR [rax],al
   14003f157:	add    BYTE PTR [rax+0x1400438],al
   14003f15d:	add    BYTE PTR [rax],al
   14003f15f:	add    BYTE PTR [rax+rsi*8+0x14001],dh
   14003f166:	add    BYTE PTR [rax],al
   14003f168:	adc    al,0xf1
   14003f16a:	add    DWORD PTR [rax+0x1],eax
   14003f16d:	add    BYTE PTR [rax],al
   14003f16f:	add    BYTE PTR [rax],al
   14003f171:	cmp    DWORD PTR [rax+rax*2],eax
   14003f174:	add    DWORD PTR [rax],eax
   14003f176:	add    BYTE PTR [rax],al
   14003f178:	rex.R
   14003f179:	repnz add DWORD PTR [rax+0x1],eax
   14003f17d:	add    BYTE PTR [rax],al
   14003f17f:	add    BYTE PTR [rdx+rsi*8+0x1],dl
   14003f183:	rex add DWORD PTR [rax],eax
   14003f186:	add    BYTE PTR [rax],al
   14003f188:	and    BYTE PTR [rax],al
   14003f18a:	push   rax
   14003f18b:	add    BYTE PTR [rdx+0x0],dh
   14003f18e:	outs   dx,DWORD PTR ds:[rsi]
   14003f18f:	add    BYTE PTR [rsi+0x0],ah
   14003f192:	imul   eax,DWORD PTR [rax],0x65006c
   14003f198:	push   rdx
   14003f199:	add    BYTE PTR [rbp+0x0],dh
   14003f19c:	outs   dx,BYTE PTR ds:[rsi]
   14003f19d:	add    BYTE PTR [rax],ah
	...
   14003f1a7:	add    BYTE PTR [rax],ch
   14003f1a9:	cmp    DWORD PTR [rax+rax*2],eax
   14003f1ac:	add    DWORD PTR [rax],eax
   14003f1ae:	add    BYTE PTR [rax],al
   14003f1b0:	and    al,0xf4
   14003f1b2:	add    DWORD PTR [rax+0x1],eax
   14003f1b5:	add    BYTE PTR [rax],al
   14003f1b7:	add    BYTE PTR [rax+0x14001f4],al
   14003f1bd:	add    BYTE PTR [rax],al
   14003f1bf:	add    BYTE PTR [rax+0x39],dl
   14003f1c2:	add    al,0x40
   14003f1c4:	add    DWORD PTR [rax],eax
   14003f1c6:	add    BYTE PTR [rax],al
   14003f1c8:	jo     0x14003f1c4
   14003f1ca:	add    DWORD PTR [rax+0x1],eax
   14003f1cd:	add    BYTE PTR [rax],al
   14003f1cf:	add    BYTE PTR [rax],cl
   14003f1d1:	sti    
   14003f1d2:	add    DWORD PTR [rax+0x1],eax
   14003f1d5:	add    BYTE PTR [rax],al
   14003f1d7:	add    BYTE PTR [rax],dl
   14003f1d9:	cmp    al,BYTE PTR [rax+rax*2]
   14003f1dc:	add    DWORD PTR [rax],eax
   14003f1de:	add    BYTE PTR [rax],al
   14003f1e0:	add    al,0xfd
   14003f1e2:	add    DWORD PTR [rax+0x1],eax
   14003f1e5:	add    BYTE PTR [rax],al
   14003f1e7:	add    BYTE PTR [rax],ah
   14003f1e9:	std    
   14003f1ea:	add    DWORD PTR [rax+0x1],eax
   14003f1ed:	add    BYTE PTR [rax],al
   14003f1ef:	add    BYTE PTR [rax+0x3a],bh
   14003f1f2:	add    al,0x40
   14003f1f4:	add    DWORD PTR [rax],eax
   14003f1f6:	add    BYTE PTR [rax],al
   14003f1f8:	pop    rax
   14003f1f9:	std    
   14003f1fa:	add    DWORD PTR [rax+0x1],eax
   14003f1fd:	add    BYTE PTR [rax],al
   14003f1ff:	add    BYTE PTR [rbp+rdi*8+0x1],dh
   14003f203:	rex add DWORD PTR [rax],eax
   14003f206:	add    BYTE PTR [rax],al
   14003f208:	sub    BYTE PTR [rbx],bh
   14003f20a:	add    al,0x40
   14003f20c:	add    DWORD PTR [rax],eax
   14003f20e:	add    BYTE PTR [rax],al
   14003f210:	pop    rax
   14003f211:	std    
   14003f212:	add    DWORD PTR [rax+0x1],eax
   14003f215:	add    BYTE PTR [rax],al
   14003f217:	add    BYTE PTR [rbp+rdi*8+0x1],dh
   14003f21b:	rex add DWORD PTR [rax],eax
   14003f21e:	add    BYTE PTR [rax],al
   14003f220:	mov    al,0x3b
   14003f222:	add    al,0x40
   14003f224:	add    DWORD PTR [rax],eax
   14003f226:	add    BYTE PTR [rax],al
   14003f228:	(bad)  
   14003f229:	(bad)  
   14003f22a:	add    BYTE PTR [rax+0x1],al
   14003f22d:	add    BYTE PTR [rax],al
   14003f22f:	add    BYTE PTR [rax+0x60],bh
   14003f232:	add    BYTE PTR [rax+0x1],al
   14003f235:	add    BYTE PTR [rax],al
   14003f237:	add    BYTE PTR [rsp+rcx*1],dh
   14003f23a:	add    al,BYTE PTR [rax+0x1]
   14003f23d:	add    BYTE PTR [rax],al
   14003f23f:	add    BYTE PTR [rdx],ah
   14003f241:	add    eax,0x11993
   14003f246:	add    BYTE PTR [rax],al
   14003f248:	sbb    BYTE PTR [rdx+0x4],cl
	...
   14003f253:	add    BYTE PTR [rcx],al
   14003f255:	add    BYTE PTR [rax],al
   14003f257:	add    BYTE PTR [rax],dh
   14003f259:	rex.WB add al,0x0
	...
   14003f270:	and    al,BYTE PTR [rip+0x21993]        # 0x140060c09
   14003f276:	add    BYTE PTR [rax],al
   14003f278:	rex.W
   14003f279:	rex.WB add al,0x0
	...
   14003f284:	add    DWORD PTR [rax],eax
   14003f286:	add    BYTE PTR [rax],al
   14003f288:	pop    rax
   14003f289:	rex.WB add al,0x0
	...
   14003f2a0:	and    al,BYTE PTR [rip+0x21993]        # 0x140060c39
   14003f2a6:	add    BYTE PTR [rax],al
   14003f2a8:	jo     0x14003f2f3
   14003f2aa:	add    al,0x0
	...
   14003f2b4:	add    DWORD PTR [rax],eax
   14003f2b6:	add    BYTE PTR [rax],al
   14003f2b8:	or     BYTE PTR [rcx+0x4],0x0
	...
   14003f2d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140060c69
   14003f2d6:	add    BYTE PTR [rax],al
   14003f2d8:	cwde   
   14003f2d9:	rex.WB add al,0x0
	...
   14003f2e4:	add    al,0x0
   14003f2e6:	add    BYTE PTR [rax],al
   14003f2e8:	test   al,0x49
   14003f2ea:	add    al,0x0
   14003f2ec:	and    BYTE PTR [rax],al
	...
   14003f2fe:	add    BYTE PTR [rax],al
   14003f300:	and    al,BYTE PTR [rip+0x21993]        # 0x140060c99
   14003f306:	add    BYTE PTR [rax],al
   14003f308:	fmul   DWORD PTR [rcx+0x4]
	...
   14003f313:	add    BYTE PTR [rax+rax*1],al
   14003f316:	add    BYTE PTR [rax],al
   14003f318:	call   0x16003f766
	...
   14003f32d:	add    BYTE PTR [rax],al
   14003f32f:	add    BYTE PTR [rdx],ah
   14003f331:	add    eax,0x11993
   14003f336:	add    BYTE PTR [rax],al
   14003f338:	sbb    BYTE PTR [rdx+0x4],cl
	...
   14003f343:	add    BYTE PTR [rbx],al
   14003f345:	add    BYTE PTR [rax],al
   14003f347:	add    BYTE PTR [rax],ah
   14003f349:	rex.WX add al,0x0
   14003f34c:	and    BYTE PTR [rax],al
	...
   14003f35e:	add    BYTE PTR [rax],al
   14003f360:	and    al,BYTE PTR [rip+0x51993]        # 0x140090cf9
   14003f366:	add    BYTE PTR [rax],al
   14003f368:	push   rax
   14003f369:	rex.WX add al,0x0
   14003f36c:	add    al,BYTE PTR [rax]
   14003f36e:	add    BYTE PTR [rax],al
   14003f370:	js     0x14003f3bc
   14003f372:	add    al,0x0
   14003f374:	or     al,0x0
   14003f376:	add    BYTE PTR [rax],al
   14003f378:	enter  0x44a,0x0
   14003f37c:	sub    BYTE PTR [rax],al
	...
   14003f38e:	add    BYTE PTR [rax],al
   14003f390:	and    al,BYTE PTR [rip+0x51993]        # 0x140090d29
   14003f396:	add    BYTE PTR [rax],al
   14003f398:	jo     0x14003f3e5
   14003f39a:	add    al,0x0
   14003f39c:	add    DWORD PTR [rax],eax
   14003f39e:	add    BYTE PTR [rax],al
   14003f3a0:	cwde   
   14003f3a1:	rex.WXB add al,0x0
   14003f3a4:	adc    BYTE PTR [rax],al
   14003f3a6:	add    BYTE PTR [rax],al
   14003f3a8:	call   0x1a803f7f8
	...
   14003f3bd:	add    BYTE PTR [rax],al
   14003f3bf:	add    BYTE PTR [rdx],ah
   14003f3c1:	add    eax,0x11993
   14003f3c6:	add    BYTE PTR [rax],al
   14003f3c8:	mov    WORD PTR [rsp+rax*1+0x0],cs
	...
   14003f3d4:	add    DWORD PTR [rax],eax
   14003f3d6:	add    BYTE PTR [rax],al
   14003f3d8:	xchg   esp,eax
   14003f3d9:	rex.WR add al,0x0
   14003f3dc:	and    BYTE PTR [rax],al
	...
   14003f3ee:	add    BYTE PTR [rax],al
   14003f3f0:	and    al,BYTE PTR [rip+0xf1993]        # 0x140130d89
   14003f3f6:	add    BYTE PTR [rax],al
   14003f3f8:	ror    BYTE PTR [rsp+rax*1+0x0],0x0
   14003f3fd:	add    BYTE PTR [rax],al
   14003f3ff:	add    BYTE PTR [rax],al
   14003f401:	add    BYTE PTR [rax],al
   14003f403:	add    BYTE PTR [rax+rax*1],cl
   14003f406:	add    BYTE PTR [rax],al
   14003f408:	cmp    BYTE PTR [rbp+0x4],cl
   14003f40b:	add    BYTE PTR [rax+0x0],ah
	...
   14003f41e:	add    BYTE PTR [rax],al
   14003f420:	and    al,BYTE PTR [rip+0x11993]        # 0x140050db9
   14003f426:	add    BYTE PTR [rax],al
   14003f428:	ror    BYTE PTR [rbp+0x4],0x0
	...
   14003f434:	add    al,BYTE PTR [rax]
   14003f436:	add    BYTE PTR [rax],al
   14003f438:	enter  0x44d,0x0
   14003f43c:	xor    BYTE PTR [rax],al
	...
   14003f44e:	add    BYTE PTR [rax],al
   14003f450:	and    al,BYTE PTR [rip+0x41993]        # 0x140080de9
   14003f456:	add    BYTE PTR [rax],al
   14003f458:	clc    
   14003f459:	rex.WRB add al,0x0
	...
   14003f464:	add    eax,0x18000000
   14003f469:	rex.WRX add al,0x0
   14003f46c:	pop    rax
	...
   14003f47d:	add    BYTE PTR [rax],al
   14003f47f:	add    BYTE PTR [rdx],ah
   14003f481:	add    eax,0x11993
   14003f486:	add    BYTE PTR [rax],al
   14003f488:	push   rax
   14003f489:	rex.WRX add al,0x0
	...
   14003f494:	add    DWORD PTR [rax],eax
   14003f496:	add    BYTE PTR [rax],al
   14003f498:	pop    rax
   14003f499:	rex.WRX add al,0x0
	...
   14003f4b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050e49
   14003f4b6:	add    BYTE PTR [rax],al
   14003f4b8:	jo     0x14003f508
   14003f4ba:	add    al,0x0
	...
   14003f4c4:	add    DWORD PTR [rax],eax
   14003f4c6:	add    BYTE PTR [rax],al
   14003f4c8:	js     0x14003f518
   14003f4ca:	add    al,0x0
   14003f4cc:	and    BYTE PTR [rax],al
	...
   14003f4de:	add    BYTE PTR [rax],al
   14003f4e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050e79
   14003f4e6:	add    BYTE PTR [rax],al
   14003f4e8:	fmul   QWORD PTR [rsi+0x4]
	...
   14003f4f3:	add    BYTE PTR [rdx],al
   14003f4f5:	add    BYTE PTR [rax],al
   14003f4f7:	add    BYTE PTR [rsi+rcx*2+0x280004],dl
	...
   14003f50e:	add    BYTE PTR [rax],al
   14003f510:	and    al,BYTE PTR [rip+0x21993]        # 0x140060ea9
   14003f516:	add    BYTE PTR [rax],al
   14003f518:	mov    ah,0x4e
   14003f51a:	add    al,0x0
	...
   14003f524:	add    DWORD PTR [rax],eax
   14003f526:	add    BYTE PTR [rax],al
   14003f528:	(bad)  
   14003f529:	rex.WRX add al,0x0
   14003f52c:	and    BYTE PTR [rax],al
	...
   14003f53e:	add    BYTE PTR [rax],al
   14003f540:	and    al,BYTE PTR [rip+0x11993]        # 0x140050ed9
   14003f546:	add    BYTE PTR [rax],al
   14003f548:	fmul   QWORD PTR [rsi+0x4]
	...
   14003f553:	add    BYTE PTR [rdx],al
   14003f555:	add    BYTE PTR [rax],al
   14003f557:	add    ah,ah
   14003f559:	rex.WRX add al,0x0
   14003f55c:	sub    BYTE PTR [rax],al
	...
   14003f56e:	add    BYTE PTR [rax],al
   14003f570:	and    al,BYTE PTR [rip+0x11993]        # 0x140050f09
   14003f576:	add    BYTE PTR [rax],al
   14003f578:	add    al,0x4f
   14003f57a:	add    al,0x0
	...
   14003f584:	add    DWORD PTR [rax],eax
   14003f586:	add    BYTE PTR [rax],al
   14003f588:	or     al,0x4f
   14003f58a:	add    al,0x0
	...
   14003f5a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050f39
   14003f5a6:	add    BYTE PTR [rax],al
   14003f5a8:	and    al,0x4f
   14003f5aa:	add    al,0x0
	...
   14003f5b4:	add    DWORD PTR [rax],eax
   14003f5b6:	add    BYTE PTR [rax],al
   14003f5b8:	sub    al,0x4f
   14003f5ba:	add    al,0x0
   14003f5bc:	and    BYTE PTR [rax],al
	...
   14003f5ce:	add    BYTE PTR [rax],al
   14003f5d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050f69
   14003f5d6:	add    BYTE PTR [rax],al
   14003f5d8:	fmul   QWORD PTR [rsi+0x4]
	...
   14003f5e3:	add    BYTE PTR [rdx],al
   14003f5e5:	add    BYTE PTR [rax],al
   14003f5e7:	add    BYTE PTR [rax+0x4f],cl
   14003f5ea:	add    al,0x0
   14003f5ec:	sub    BYTE PTR [rax],al
	...
   14003f5fa:	add    BYTE PTR [rax],al
   14003f5fc:	add    BYTE PTR [rax-0x71],al
   14003f5ff:	add    BYTE PTR [rax],al
   14003f602:	add    BYTE PTR [rdi+0x0],bl
   14003f605:	add    BYTE PTR [rax+0x5f],al
   14003f60b:	add    BYTE PTR [rax],al
   14003f60d:	add    BYTE PTR [rax],al
   14003f60f:	add    BYTE PTR [rdx],ah
   14003f611:	add    eax,0x21993
   14003f616:	add    BYTE PTR [rax],al
   14003f618:	jl     0x14003f669
   14003f61a:	add    al,0x0
	...
   14003f624:	add    eax,DWORD PTR [rax]
   14003f626:	add    BYTE PTR [rax],al
   14003f628:	mov    WORD PTR [rdi+0x4],cs
   14003f62b:	add    BYTE PTR [rax+0x0],bl
	...
   14003f63e:	add    BYTE PTR [rax],al
   14003f640:	and    al,BYTE PTR [rip+0x21993]        # 0x140060fd9
   14003f646:	add    BYTE PTR [rax],al
   14003f648:	fmul   QWORD PTR [rdi+0x4]
	...
   14003f653:	add    BYTE PTR [rax+rax*1],al
   14003f656:	add    BYTE PTR [rax],al
   14003f658:	in     al,dx
   14003f659:	rex.WRXB add al,0x0
   14003f65c:	and    BYTE PTR [rax],al
	...
   14003f66e:	add    BYTE PTR [rax],al
   14003f670:	and    al,BYTE PTR [rip+0x11993]        # 0x140051009
   14003f676:	add    BYTE PTR [rax],al
   14003f678:	rex.WR push rax
   14003f67a:	add    al,0x0
	...
   14003f684:	add    DWORD PTR [rax],eax
   14003f686:	add    BYTE PTR [rax],al
   14003f688:	push   rsp
   14003f689:	push   rax
   14003f68a:	add    al,0x0
   14003f68c:	and    BYTE PTR [rax],al
	...
   14003f69e:	add    BYTE PTR [rax],al
   14003f6a0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061039
   14003f6a6:	add    BYTE PTR [rax],al
   14003f6a8:	jo     0x14003f6fa
   14003f6aa:	add    al,0x0
	...
   14003f6b4:	add    eax,0x80000000
   14003f6b9:	push   rax
   14003f6ba:	add    al,0x0
   14003f6bc:	and    BYTE PTR [rax],al
	...
   14003f6ce:	add    BYTE PTR [rax],al
   14003f6d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061069
   14003f6d6:	add    BYTE PTR [rax],al
   14003f6d8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003f6e0:	mov    esp,0x5000450
   14003f6e5:	add    BYTE PTR [rax],al
   14003f6e7:	add    ah,ah
   14003f6e9:	push   rax
   14003f6ea:	add    al,0x0
   14003f6ec:	and    BYTE PTR [rax],al
	...
   14003f6fe:	add    BYTE PTR [rax],al
   14003f700:	and    al,BYTE PTR [rip+0x11993]        # 0x140051099
   14003f706:	add    BYTE PTR [rax],al
   14003f708:	cmp    BYTE PTR [rcx+0x4],dl
	...
   14003f713:	add    BYTE PTR [rbx],al
   14003f715:	add    BYTE PTR [rax],al
   14003f717:	add    BYTE PTR [rax+0x51],al
   14003f71a:	add    al,0x0
   14003f71c:	and    BYTE PTR [rax],al
	...
   14003f72e:	add    BYTE PTR [rax],al
   14003f730:	and    al,BYTE PTR [rip+0x31993]        # 0x1400710c9
   14003f736:	add    BYTE PTR [rax],al
   14003f738:	push   0x1000451
   14003f73d:	add    BYTE PTR [rax],al
   14003f73f:	add    BYTE PTR [rax+0x7000451],al
   14003f745:	add    BYTE PTR [rax],al
   14003f747:	add    BYTE PTR [rax+0x20000451],ch
	...
   14003f75d:	add    BYTE PTR [rax],al
   14003f75f:	add    BYTE PTR [rdx],ah
   14003f761:	add    eax,0x51993
   14003f766:	add    BYTE PTR [rax],al
   14003f768:	or     al,0x52
   14003f76a:	add    al,0x0
   14003f76c:	add    al,BYTE PTR [rax]
   14003f76e:	add    BYTE PTR [rax],al
   14003f770:	xor    al,0x52
   14003f772:	add    al,0x0
   14003f774:	or     al,0x0
   14003f776:	add    BYTE PTR [rax],al
   14003f778:	test   BYTE PTR [rdx+0x4],dl
   14003f77b:	add    BYTE PTR [rax],ch
	...
   14003f78d:	add    BYTE PTR [rax],al
   14003f78f:	add    BYTE PTR [rdx],ah
   14003f791:	add    eax,0x21993
   14003f796:	add    BYTE PTR [rax],al
   14003f798:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003f7a0:	sub    BYTE PTR [rbx+0x4],dl
   14003f7a3:	add    BYTE PTR [rip+0x50000000],al        # 0x19003f7a9
   14003f7a9:	push   rbx
   14003f7aa:	add    al,0x0
   14003f7ac:	xor    BYTE PTR [rax],al
	...
   14003f7be:	add    BYTE PTR [rax],al
   14003f7c0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061159
   14003f7c6:	add    BYTE PTR [rax],al
   14003f7c8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003f7d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003f7d1:	push   rbx
   14003f7d2:	add    al,0x0
   14003f7d4:	add    eax,0xcc000000
   14003f7d9:	push   rbx
   14003f7da:	add    al,0x0
   14003f7dc:	and    BYTE PTR [rax],al
	...
   14003f7ee:	add    BYTE PTR [rax],al
   14003f7f0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061189
   14003f7f6:	add    BYTE PTR [rax],al
   14003f7f8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003f800:	xor    BYTE PTR [rsp+rax*1+0x0],dl
   14003f804:	add    eax,0x58000000
   14003f809:	push   rsp
   14003f80a:	add    al,0x0
   14003f80c:	xor    BYTE PTR [rax],al
	...
   14003f81e:	add    BYTE PTR [rax],al
   14003f820:	and    al,BYTE PTR [rip+0x21993]        # 0x1400611b9
   14003f826:	add    BYTE PTR [rax],al
   14003f828:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003f830:	mov    al,0x54
   14003f832:	add    al,0x0
   14003f834:	add    eax,0xd8000000
   14003f839:	push   rsp
   14003f83a:	add    al,0x0
   14003f83c:	xor    BYTE PTR [rax],al
	...
   14003f84e:	add    BYTE PTR [rax],al
   14003f850:	and    al,BYTE PTR [rip+0x21993]        # 0x1400611e9
   14003f856:	add    BYTE PTR [rax],al
   14003f858:	ins    BYTE PTR es:[rdi],dx
   14003f859:	push   rbp
   14003f85a:	add    al,0x0
	...
   14003f864:	add    eax,DWORD PTR [rax]
   14003f866:	add    BYTE PTR [rax],al
   14003f868:	rex.R push rbp
   14003f86a:	add    al,0x0
   14003f86c:	and    BYTE PTR [rax],al
	...
   14003f87e:	add    BYTE PTR [rax],al
   14003f880:	and    al,BYTE PTR [rip+0x21993]        # 0x140061219
   14003f886:	add    BYTE PTR [rax],al
   14003f888:	ins    BYTE PTR es:[rdi],dx
   14003f889:	push   rbp
   14003f88a:	add    al,0x0
	...
   14003f894:	add    al,0x0
   14003f896:	add    BYTE PTR [rax],al
   14003f898:	jl     0x14003f8ef
   14003f89a:	add    al,0x0
   14003f89c:	and    BYTE PTR [rax],al
	...
   14003f8ae:	add    BYTE PTR [rax],al
   14003f8b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061249
   14003f8b6:	add    BYTE PTR [rax],al
   14003f8b8:	mov    esp,0x455
   14003f8bd:	add    BYTE PTR [rax],al
   14003f8bf:	add    BYTE PTR [rax],al
   14003f8c1:	add    BYTE PTR [rax],al
   14003f8c3:	add    BYTE PTR [rax+rax*1],al
   14003f8c6:	add    BYTE PTR [rax],al
   14003f8c8:	int3   
   14003f8c9:	push   rbp
   14003f8ca:	add    al,0x0
   14003f8cc:	and    BYTE PTR [rax],al
	...
   14003f8de:	add    BYTE PTR [rax],al
   14003f8e0:	and    al,BYTE PTR [rip+0x31993]        # 0x140071279
   14003f8e6:	add    BYTE PTR [rax],al
   14003f8e8:	sub    BYTE PTR [rsi+0x4],dl
   14003f8eb:	add    BYTE PTR [rcx],al
   14003f8ed:	add    BYTE PTR [rax],al
   14003f8ef:	add    BYTE PTR [rax+0x56],al
   14003f8f2:	add    al,0x0
   14003f8f4:	or     BYTE PTR [rax],al
   14003f8f6:	add    BYTE PTR [rax],al
   14003f8f8:	push   0x40000456
	...
   14003f90d:	add    BYTE PTR [rax],al
   14003f90f:	add    BYTE PTR [rdx],ah
   14003f911:	add    eax,0x31993
   14003f916:	add    BYTE PTR [rax],al
   14003f918:	(bad)  
   14003f919:	push   rsi
   14003f91a:	add    al,0x0
   14003f91c:	add    DWORD PTR [rax],eax
   14003f91e:	add    BYTE PTR [rax],al
   14003f920:	in     al,dx
   14003f921:	push   rsi
   14003f922:	add    al,0x0
   14003f924:	or     BYTE PTR [rax],al
   14003f926:	add    BYTE PTR [rax],al
   14003f928:	adc    al,0x57
   14003f92a:	add    al,0x0
   14003f92c:	pop    rax
	...
   14003f93d:	add    BYTE PTR [rax],al
   14003f93f:	add    BYTE PTR [rdx],ah
   14003f941:	add    eax,0x11993
   14003f946:	add    BYTE PTR [rax],al
   14003f948:	rex.WR push rax
   14003f94a:	add    al,0x0
	...
   14003f954:	add    DWORD PTR [rax],eax
   14003f956:	add    BYTE PTR [rax],al
   14003f958:	js     0x14003f9b1
   14003f95a:	add    al,0x0
   14003f95c:	and    BYTE PTR [rax],al
	...
   14003f96e:	add    BYTE PTR [rax],al
   14003f970:	and    al,BYTE PTR [rip+0x21993]        # 0x140061309
   14003f976:	add    BYTE PTR [rax],al
   14003f978:	hlt    
   14003f979:	push   rdi
   14003f97a:	add    al,0x0
	...
   14003f984:	add    eax,0x4000000
   14003f989:	pop    rax
   14003f98a:	add    al,0x0
   14003f98c:	and    BYTE PTR [rax],al
	...
   14003f99e:	add    BYTE PTR [rax],al
   14003f9a0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061339
   14003f9a6:	add    BYTE PTR [rax],al
   14003f9a8:	lock pop rax
   14003f9aa:	add    al,0x0
	...
   14003f9b4:	add    al,BYTE PTR [rax]
   14003f9b6:	add    BYTE PTR [rax],al
   14003f9b8:	add    BYTE PTR [rcx+0x4],bl
   14003f9bb:	add    BYTE PTR [rax],ch
	...
   14003f9cd:	add    BYTE PTR [rax],al
   14003f9cf:	add    BYTE PTR [rdx],ah
   14003f9d1:	add    eax,0x11993
   14003f9d6:	add    BYTE PTR [rax],al
   14003f9d8:	cwde   
   14003f9d9:	(bad)  
   14003f9da:	add    al,0x0
	...
   14003f9e4:	add    DWORD PTR [rax],eax
   14003f9e6:	add    BYTE PTR [rax],al
   14003f9e8:	and    BYTE PTR [rcx+0x4],bl
   14003f9eb:	add    BYTE PTR [rax],ah
	...
   14003f9fd:	add    BYTE PTR [rax],al
   14003f9ff:	add    BYTE PTR [rdx],ah
   14003fa01:	add    eax,0x11993
   14003fa06:	add    BYTE PTR [rax],al
   14003fa08:	cwde   
   14003fa09:	(bad)  
   14003fa0a:	add    al,0x0
	...
   14003fa14:	add    eax,DWORD PTR [rax]
   14003fa16:	add    BYTE PTR [rax],al
   14003fa18:	cmp    al,0x59
   14003fa1a:	add    al,0x0
   14003fa1c:	and    BYTE PTR [rax],al
	...
   14003fa2e:	add    BYTE PTR [rax],al
   14003fa30:	and    al,BYTE PTR [rip+0x11993]        # 0x1400513c9
   14003fa36:	add    BYTE PTR [rax],al
   14003fa38:	cwde   
   14003fa39:	(bad)  
   14003fa3a:	add    al,0x0
	...
   14003fa44:	add    DWORD PTR [rax],eax
   14003fa46:	add    BYTE PTR [rax],al
   14003fa48:	ins    BYTE PTR es:[rdi],dx
   14003fa49:	pop    rcx
   14003fa4a:	add    al,0x0
   14003fa4c:	and    BYTE PTR [rax],al
	...
   14003fa5e:	add    BYTE PTR [rax],al
   14003fa60:	and    al,BYTE PTR [rip+0x31993]        # 0x1400713f9
   14003fa66:	add    BYTE PTR [rax],al
   14003fa68:	mov    BYTE PTR [rcx+0x4],bl
	...
   14003fa73:	add    BYTE PTR [rax+rax*1],al
   14003fa76:	add    BYTE PTR [rax],al
   14003fa78:	movabs al,ds:0x20000459
	...
   14003fa8d:	add    BYTE PTR [rax],al
   14003fa8f:	add    BYTE PTR [rdx],ah
   14003fa91:	add    eax,0x31993
   14003fa96:	add    BYTE PTR [rax],al
   14003fa98:	mov    BYTE PTR [rcx+0x4],bl
	...
   14003faa3:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x12003faa9
   14003faa9:	pop    rcx
   14003faaa:	add    al,0x0
   14003faac:	and    BYTE PTR [rax],al
	...
   14003fabe:	add    BYTE PTR [rax],al
   14003fac0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061459
   14003fac6:	add    BYTE PTR [rax],al
   14003fac8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003fad0:	rex.R pop rdx
   14003fad2:	add    al,0x0
   14003fad4:	add    eax,0x6c000000
   14003fad9:	pop    rdx
   14003fada:	add    al,0x0
   14003fadc:	and    BYTE PTR [rax],al
	...
   14003faee:	add    BYTE PTR [rax],al
   14003faf0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061489
   14003faf6:	add    BYTE PTR [rax],al
   14003faf8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   14003fb00:	mov    esp,0x500045a
   14003fb05:	add    BYTE PTR [rax],al
   14003fb07:	add    ah,ah
   14003fb09:	pop    rdx
   14003fb0a:	add    al,0x0
   14003fb0c:	and    BYTE PTR [rax],al
	...
   14003fb1e:	add    BYTE PTR [rax],al
   14003fb20:	and    al,BYTE PTR [rip+0x11993]        # 0x1400514b9
   14003fb26:	add    BYTE PTR [rax],al
   14003fb28:	fs pop rbx
   14003fb2a:	add    al,0x0
	...
   14003fb34:	add    al,BYTE PTR [rax]
   14003fb36:	add    BYTE PTR [rax],al
   14003fb38:	ins    BYTE PTR es:[rdi],dx
   14003fb39:	pop    rbx
   14003fb3a:	add    al,0x0
   14003fb3c:	sub    BYTE PTR [rax],al
	...
   14003fb4e:	add    BYTE PTR [rax],al
   14003fb50:	and    al,BYTE PTR [rip+0x11993]        # 0x1400514e9
   14003fb56:	add    BYTE PTR [rax],al
   14003fb58:	mov    WORD PTR [rbx+0x4],ds
	...
   14003fb63:	add    BYTE PTR [rbx],al
   14003fb65:	add    BYTE PTR [rax],al
   14003fb67:	add    BYTE PTR [rbx+rbx*2+0x200004],dl
	...
   14003fb7e:	add    BYTE PTR [rax],al
   14003fb80:	and    al,BYTE PTR [rip+0x21993]        # 0x140061519
   14003fb86:	add    BYTE PTR [rax],al
   14003fb88:	mov    esp,0x45b
   14003fb8d:	add    BYTE PTR [rax],al
   14003fb8f:	add    BYTE PTR [rax],al
   14003fb91:	add    BYTE PTR [rax],al
   14003fb93:	add    BYTE PTR [rax+rax*1],al
   14003fb96:	add    BYTE PTR [rax],al
   14003fb98:	int3   
   14003fb99:	pop    rbx
   14003fb9a:	add    al,0x0
   14003fb9c:	and    BYTE PTR [rax],al
	...
   14003fbae:	add    BYTE PTR [rax],al
   14003fbb0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061549
   14003fbb6:	add    BYTE PTR [rax],al
   14003fbb8:	sbb    BYTE PTR [rsp+rax*1+0x0],bl
	...
   14003fbc4:	add    DWORD PTR [rax],eax
   14003fbc6:	add    BYTE PTR [rax],al
   14003fbc8:	cld    
   14003fbc9:	pop    rbx
   14003fbca:	add    al,0x0
   14003fbcc:	and    BYTE PTR [rax],al
	...
   14003fbde:	add    BYTE PTR [rax],al
   14003fbe0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061579
   14003fbe6:	add    BYTE PTR [rax],al
   14003fbe8:	sbb    BYTE PTR [rsp+rax*1+0x0],bl
	...
   14003fbf4:	add    DWORD PTR [rax],eax
   14003fbf6:	add    BYTE PTR [rax],al
   14003fbf8:	sub    BYTE PTR [rsp+rax*1+0x0],bl
   14003fbfc:	and    BYTE PTR [rax],al
	...
   14003fc0e:	add    BYTE PTR [rax],al
   14003fc10:	and    al,BYTE PTR [rip+0x11993]        # 0x1400515a9
   14003fc16:	add    BYTE PTR [rax],al
   14003fc18:	mov    WORD PTR [rbx+0x4],ds
	...
   14003fc23:	add    BYTE PTR [rcx],al
   14003fc25:	add    BYTE PTR [rax],al
   14003fc27:	add    BYTE PTR [rax+0x5c],al
   14003fc2a:	add    al,0x0
   14003fc2c:	and    BYTE PTR [rax],al
	...
   14003fc3e:	add    BYTE PTR [rax],al
   14003fc40:	and    al,BYTE PTR [rip+0x11993]        # 0x1400515d9
   14003fc46:	add    BYTE PTR [rax],al
   14003fc48:	mov    WORD PTR [rbx+0x4],ds
	...
   14003fc53:	add    BYTE PTR [rcx],al
   14003fc55:	add    BYTE PTR [rax],al
   14003fc57:	add    BYTE PTR [rsp+rbx*2+0x4],bl
   14003fc5b:	add    BYTE PTR [rax],ah
	...
   14003fc6d:	add    BYTE PTR [rax],al
   14003fc6f:	add    BYTE PTR [rdx],ah
   14003fc71:	add    eax,0xa1993
   14003fc76:	add    BYTE PTR [rax],al
   14003fc78:	mov    BYTE PTR [rsp+rax*1+0x0],bl
	...
   14003fc84:	or     al,BYTE PTR [rax]
   14003fc86:	add    BYTE PTR [rax],al
   14003fc88:	fcomp  DWORD PTR [rsp+rax*1+0x0]
   14003fc8c:	mov    al,0x0
	...
   14003fc9e:	add    BYTE PTR [rax],al
   14003fca0:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400e1639
   14003fca6:	add    BYTE PTR [rax],al
   14003fca8:	cmp    al,0x5d
   14003fcaa:	add    al,0x0
	...
   14003fcb4:	or     eax,DWORD PTR [rax]
   14003fcb6:	add    BYTE PTR [rax],al
   14003fcb8:	mov    WORD PTR [rbp+0x4],ds
   14003fcbb:	add    BYTE PTR [rax],ah
	...
   14003fccd:	add    BYTE PTR [rax],al
   14003fccf:	add    BYTE PTR [rdx],ah
   14003fcd1:	add    eax,0xa1993
   14003fcd6:	add    BYTE PTR [rax],al
   14003fcd8:	(bad)  
   14003fcd9:	(bad)  
   14003fcda:	add    al,0x0
	...
   14003fce4:	or     eax,DWORD PTR [rax]
   14003fce6:	add    BYTE PTR [rax],al
   14003fce8:	add    al,0x5e
   14003fcea:	add    al,0x0
   14003fcec:	jo     0x14003fcee
	...
   14003fcfe:	add    BYTE PTR [rax],al
   14003fd00:	and    al,BYTE PTR [rip+0xb1993]        # 0x1400f1699
   14003fd06:	add    BYTE PTR [rax],al
   14003fd08:	sbb    BYTE PTR [rsi+0x4],0x0
	...
   14003fd14:	sldt   WORD PTR [rax]
   14003fd17:	add    al,bl
   14003fd19:	pop    rsi
   14003fd1a:	add    al,0x0
   14003fd1c:	nop
	...
   14003fd2d:	add    BYTE PTR [rax],al
   14003fd2f:	add    BYTE PTR [rdx],ah
   14003fd31:	add    eax,0xc1993
   14003fd36:	add    BYTE PTR [rax],al
   14003fd38:	je     0x14003fd99
   14003fd3a:	add    al,0x0
	...
   14003fd44:	(bad)  
   14003fd45:	add    BYTE PTR [rax],al
   14003fd47:	add    ah,dl
   14003fd49:	pop    rdi
   14003fd4a:	add    al,0x0
   14003fd4c:	mov    eax,0x0
	...
   14003fd5d:	add    BYTE PTR [rax],al
   14003fd5f:	add    BYTE PTR [rdx],ah
   14003fd61:	add    eax,0xa1993
   14003fd66:	add    BYTE PTR [rax],al
   14003fd68:	(bad)  
   14003fd69:	(bad)  
   14003fd6a:	add    al,0x0
	...
   14003fd74:	or     eax,DWORD PTR [rax]
   14003fd76:	add    BYTE PTR [rax],al
   14003fd78:	mov    al,0x60
   14003fd7a:	add    al,0x0
   14003fd7c:	jo     0x14003fd7e
	...
   14003fd8e:	add    BYTE PTR [rax],al
   14003fd90:	and    al,BYTE PTR [rip+0x11993]        # 0x140051729
   14003fd96:	add    BYTE PTR [rax],al
   14003fd98:	and    BYTE PTR [rcx+0x4],ah
	...
   14003fda3:	add    BYTE PTR [rbx],al
   14003fda5:	add    BYTE PTR [rax],al
   14003fda7:	add    BYTE PTR [rax],ch
   14003fda9:	(bad)  
   14003fdaa:	add    al,0x0
   14003fdac:	rex.W add BYTE PTR [rax],al
	...
   14003fdbf:	add    BYTE PTR [rdx],ah
   14003fdc1:	add    eax,0x11993
   14003fdc6:	add    BYTE PTR [rax],al
   14003fdc8:	cwde   
   14003fdc9:	(bad)  
   14003fdca:	add    al,0x0
	...
   14003fdd4:	add    DWORD PTR [rax],eax
   14003fdd6:	add    BYTE PTR [rax],al
   14003fdd8:	movabs al,ds:0x20000461
	...
   14003fded:	add    BYTE PTR [rax],al
   14003fdef:	add    BYTE PTR [rdx],ah
   14003fdf1:	add    eax,0x21993
   14003fdf6:	add    BYTE PTR [rax],al
   14003fdf8:	mov    esp,0x461
   14003fdfd:	add    BYTE PTR [rax],al
   14003fdff:	add    BYTE PTR [rax],al
   14003fe01:	add    BYTE PTR [rax],al
   14003fe03:	add    BYTE PTR [rbx],al
   14003fe05:	add    BYTE PTR [rax],al
   14003fe07:	add    ah,cl
   14003fe09:	(bad)  
   14003fe0a:	add    al,0x0
   14003fe0c:	and    BYTE PTR [rax],al
	...
   14003fe1e:	add    BYTE PTR [rax],al
   14003fe20:	and    al,BYTE PTR [rip+0x121993]        # 0x1401617b9
   14003fe26:	add    BYTE PTR [rax],al
   14003fe28:	cmp    al,0x62
   14003fe2a:	add    al,0x0
	...
   14003fe34:	or     DWORD PTR [rax],eax
   14003fe36:	add    BYTE PTR [rax],al
   14003fe38:	int3   
   14003fe39:	(bad)  
   14003fe3a:	add    al,0x0
   14003fe3c:	mov    BYTE PTR [rax],al
	...
   14003fe4e:	add    BYTE PTR [rax],al
   14003fe50:	and    al,BYTE PTR [rip+0x41993]        # 0x1400817e9
   14003fe56:	add    BYTE PTR [rax],al
   14003fe58:	sub    BYTE PTR [rbx+0x4],ah
	...
   14003fe63:	add    BYTE PTR [rip+0x48000000],al        # 0x18803fe69
   14003fe69:	movsxd eax,DWORD PTR [rax+rax*1]
   14003fe6c:	and    BYTE PTR [rax],al
	...
   14003fe7e:	add    BYTE PTR [rax],al
   14003fe80:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a1819
   14003fe86:	add    BYTE PTR [rax],al
   14003fe88:	mov    BYTE PTR [rbx+0x4],ah
	...
   14003fe93:	add    BYTE PTR [rsi],al
   14003fe95:	add    BYTE PTR [rax],al
   14003fe97:	add    BYTE PTR [rax+0x20000463],bh
	...
   14003fead:	add    BYTE PTR [rax],al
   14003feaf:	add    BYTE PTR [rdx],ah
   14003feb1:	add    eax,0x11993
   14003feb6:	add    BYTE PTR [rax],al
   14003feb8:	cmp    BYTE PTR [rsp+rax*1+0x0],ah
	...
   14003fec4:	add    eax,DWORD PTR [rax]
   14003fec6:	add    BYTE PTR [rax],al
   14003fec8:	rex
   14003fec9:	fs add al,0x0
   14003fecc:	js     0x14003fece
	...
   14003fede:	add    BYTE PTR [rax],al
   14003fee0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061879
   14003fee6:	add    BYTE PTR [rax],al
   14003fee8:	jo     0x14003ff4e
   14003feea:	add    al,0x0
	...
   14003fef4:	add    eax,DWORD PTR [rax]
   14003fef6:	add    BYTE PTR [rax],al
   14003fef8:	and    BYTE PTR [rsp+rax*1+0x0],0x20
	...
   14003ff0d:	add    BYTE PTR [rax],al
   14003ff0f:	add    BYTE PTR [rdx],ah
   14003ff11:	add    eax,0x31993
   14003ff16:	add    BYTE PTR [rax],al
   14003ff18:	mov    esp,0x464
   14003ff1d:	add    BYTE PTR [rax],al
   14003ff1f:	add    BYTE PTR [rax],al
   14003ff21:	add    BYTE PTR [rax],al
   14003ff23:	add    BYTE PTR [rdi],al
   14003ff25:	add    BYTE PTR [rax],al
   14003ff27:	add    ah,dl
   14003ff29:	fs add al,0x0
   14003ff2c:	sub    BYTE PTR [rax],al
	...
   14003ff3e:	add    BYTE PTR [rax],al
   14003ff40:	and    al,BYTE PTR [rip+0x21993]        # 0x1400618d9
   14003ff46:	add    BYTE PTR [rax],al
   14003ff48:	cmp    BYTE PTR [rbp+0x4],ah
	...
   14003ff53:	add    BYTE PTR [rbx],al
   14003ff55:	add    BYTE PTR [rax],al
   14003ff57:	add    BYTE PTR [rax+0x65],cl
   14003ff5a:	add    al,0x0
   14003ff5c:	jo     0x14003ff5e
	...
   14003ff6e:	add    BYTE PTR [rax],al
   14003ff70:	and    al,BYTE PTR [rip+0x41993]        # 0x140081909
   14003ff76:	add    BYTE PTR [rax],al
   14003ff78:	shl    BYTE PTR [rbp+0x4],0x0
	...
   14003ff84:	(bad)  
   14003ff85:	add    BYTE PTR [rax],al
   14003ff87:	add    al,ah
   14003ff89:	gs add al,0x0
   14003ff8c:	pop    rax
	...
   14003ff9d:	add    BYTE PTR [rax],al
   14003ff9f:	add    BYTE PTR [rdx],ah
   14003ffa1:	add    eax,0x21993
   14003ffa6:	add    BYTE PTR [rax],al
   14003ffa8:	cmp    al,0x66
   14003ffaa:	add    al,0x0
	...
   14003ffb4:	add    eax,0x4c000000
   14003ffb9:	data16 add al,0x0
   14003ffbc:	sub    BYTE PTR [rax],al
	...
   14003ffce:	add    BYTE PTR [rax],al
   14003ffd0:	and    al,BYTE PTR [rip+0x221993]        # 0x140261969
   14003ffd6:	add    BYTE PTR [rax],al
   14003ffd8:	mov    WORD PTR [rsi+0x4],fs
	...
   14003ffe3:	add    BYTE PTR [rdx],ah
   14003ffe5:	add    BYTE PTR [rax],al
   14003ffe7:	add    BYTE PTR [rdi+riz*2+0x200004],bl
	...
   14003fffe:	add    BYTE PTR [rax],al
   140040000:	and    al,BYTE PTR [rip+0x11993]        # 0x140051999
   140040006:	add    BYTE PTR [rax],al
   140040008:	mov    esp,0x468
   14004000d:	add    BYTE PTR [rax],al
   14004000f:	add    BYTE PTR [rax],al
   140040011:	add    BYTE PTR [rax],al
   140040013:	add    BYTE PTR [rcx],al
   140040015:	add    BYTE PTR [rax],al
   140040017:	add    ah,al
   140040019:	push   0x4
	...
   14004002e:	add    BYTE PTR [rax],al
   140040030:	and    al,BYTE PTR [rip+0x11993]        # 0x1400519c9
   140040036:	add    BYTE PTR [rax],al
   140040038:	fsubr  QWORD PTR [rax+0x4]
	...
   140040043:	add    BYTE PTR [rcx],al
   140040045:	add    BYTE PTR [rax],al
   140040047:	add    ah,ah
   140040049:	push   0x200004
	...
   14004005e:	add    BYTE PTR [rax],al
   140040060:	and    al,BYTE PTR [rip+0x21993]        # 0x1400619f9
   140040066:	add    BYTE PTR [rax],al
   140040068:	hlt    
   140040069:	push   rdi
   14004006a:	add    al,0x0
	...
   140040074:	add    eax,0x10000000
   140040079:	imul   eax,DWORD PTR [rax+rax*1],0x48
	...
   140040090:	and    al,BYTE PTR [rip+0x31993]        # 0x140071a29
   140040096:	add    BYTE PTR [rax],al
   140040098:	pop    rsp
   140040099:	imul   eax,DWORD PTR [rax+rax*1],0x1
   1400400a0:	je     0x14004010b
   1400400a2:	add    al,0x0
   1400400a4:	or     al,0x0
   1400400a6:	add    BYTE PTR [rax],al
   1400400a8:	(bad)  
   1400400a9:	imul   eax,DWORD PTR [rax+rax*1],0x90
	...
   1400400c0:	and    al,BYTE PTR [rip+0x81993]        # 0x1400c1a59
   1400400c6:	add    BYTE PTR [rax],al
   1400400c8:	(bad)  
   1400400c9:	push   0x4
   1400400cb:	add    BYTE PTR [rcx],al
   1400400cd:	add    BYTE PTR [rax],al
   1400400cf:	add    BYTE PTR [rax+0xe00046a],ah
   1400400d5:	add    BYTE PTR [rax],al
   1400400d7:	add    al,cl
   1400400d9:	push   0x4
   1400400db:	add    BYTE PTR [rax],dh
   1400400dd:	add    DWORD PTR [rax],eax
	...
   1400400ef:	add    BYTE PTR [rdx],ah
   1400400f1:	add    eax,0x5c1993
   1400400f6:	add    BYTE PTR [rax],al
   1400400f8:	sub    BYTE PTR [rbx+0x4],0x0
	...
   140040104:	pop    rax
   140040105:	add    BYTE PTR [rax],al
   140040107:	add    BYTE PTR [rax+0x6e],ah
   14004010a:	add    al,0x0
   14004010c:	(bad)  
	...
   14004011d:	add    BYTE PTR [rax],al
   14004011f:	add    BYTE PTR [rdx],ah
   140040121:	add    eax,0x21993
   140040126:	add    BYTE PTR [rax],al
   140040128:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140040130:	cmp    BYTE PTR [rcx+0x4],dh
   140040133:	add    BYTE PTR [rbx],al
   140040135:	add    BYTE PTR [rax],al
   140040137:	add    BYTE PTR [rax+0x71],ah
   14004013a:	add    al,0x0
   14004013c:	cmp    BYTE PTR [rax],al
	...
   14004014e:	add    BYTE PTR [rax],al
   140040150:	and    al,BYTE PTR [rip+0x11993]        # 0x140051ae9
   140040156:	add    BYTE PTR [rax],al
   140040158:	cwde   
   140040159:	jno    0x14004015f
	...
   140040163:	add    BYTE PTR [rbx],al
   140040165:	add    BYTE PTR [rax],al
   140040167:	add    BYTE PTR [rax+0x20000471],ah
	...
   14004017d:	add    BYTE PTR [rax],al
   14004017f:	add    BYTE PTR [rdx],ah
   140040181:	add    eax,0x51993
   140040186:	add    BYTE PTR [rax],al
   140040188:	enter  0x471,0x0
   14004018c:	add    DWORD PTR [rax],eax
   14004018e:	add    BYTE PTR [rax],al
   140040190:	lock jno 0x140040197
   140040193:	add    BYTE PTR [rdx],cl
   140040195:	add    BYTE PTR [rax],al
   140040197:	add    BYTE PTR [rax],bl
   140040199:	jb     0x14004019f
   14004019b:	add    BYTE PTR [rax],ah
	...
   1400401ad:	add    BYTE PTR [rax],al
   1400401af:	add    BYTE PTR [rdx],ah
   1400401b1:	add    eax,0x21993
   1400401b6:	add    BYTE PTR [rax],al
   1400401b8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   1400401c0:	mov    BYTE PTR [rdx+0x4],dh
   1400401c3:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf00401c9
   1400401c9:	jb     0x1400401cf
   1400401cb:	add    BYTE PTR [rax],dh
	...
   1400401dd:	add    BYTE PTR [rax],al
   1400401df:	add    BYTE PTR [rdx],ah
   1400401e1:	add    eax,0x31993
   1400401e6:	add    BYTE PTR [rax],al
   1400401e8:	clc    
   1400401e9:	jb     0x1400401ef
   1400401eb:	add    BYTE PTR [rcx],al
   1400401ed:	add    BYTE PTR [rax],al
   1400401ef:	add    BYTE PTR [rax],dl
   1400401f1:	jae    0x1400401f7
   1400401f3:	add    BYTE PTR [rsi],al
   1400401f5:	add    BYTE PTR [rax],al
   1400401f7:	add    BYTE PTR [rax],bh
   1400401f9:	jae    0x1400401ff
   1400401fb:	add    BYTE PTR [rax],ah
	...
   14004020d:	add    BYTE PTR [rax],al
   14004020f:	add    BYTE PTR [rdx],ah
   140040211:	add    eax,0x11993
   140040216:	add    BYTE PTR [rax],al
   140040218:	mov    BYTE PTR [rbx+0x4],dh
	...
   140040223:	add    BYTE PTR [rcx],al
   140040225:	add    BYTE PTR [rax],al
   140040227:	add    BYTE PTR [rax+0x20000473],dl
	...
   14004023d:	add    BYTE PTR [rax],al
   14004023f:	add    BYTE PTR [rdx],ah
   140040241:	add    eax,0x11993
   140040246:	add    BYTE PTR [rax],al
   140040248:	mov    al,0x73
   14004024a:	add    al,0x0
	...
   140040254:	add    eax,DWORD PTR [rax]
   140040256:	add    BYTE PTR [rax],al
   140040258:	mov    eax,0x20000473
	...
   14004026d:	add    BYTE PTR [rax],al
   14004026f:	add    BYTE PTR [rdx],ah
   140040271:	add    eax,0x21993
   140040276:	add    BYTE PTR [rax],al
   140040278:	pop    rax
   140040279:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004027a:	add    al,0x0
	...
   140040284:	add    eax,0xf0000000
   140040289:	jae    0x14004028f
   14004028b:	add    BYTE PTR [rax],ah
	...
   14004029d:	add    BYTE PTR [rax],al
   14004029f:	add    BYTE PTR [rdx],ah
   1400402a1:	add    eax,0x31993
   1400402a6:	add    BYTE PTR [rax],al
   1400402a8:	sub    BYTE PTR [rsp+rax*1+0x0],dh
	...
   1400402b4:	add    eax,DWORD PTR [rax]
   1400402b6:	add    BYTE PTR [rax],al
   1400402b8:	rex je 0x1400402bf
   1400402bb:	add    BYTE PTR [rax],ah
	...
   1400402cd:	add    BYTE PTR [rax],al
   1400402cf:	add    BYTE PTR [rdx],ah
   1400402d1:	add    eax,0x51993
   1400402d6:	add    BYTE PTR [rax],al
   1400402d8:	push   0x1000474
   1400402dd:	add    BYTE PTR [rax],al
   1400402df:	add    BYTE PTR [rax+0xa000474],dl
   1400402e5:	add    BYTE PTR [rax],al
   1400402e7:	add    BYTE PTR [rax+0x20000474],bh
	...
   1400402fd:	add    BYTE PTR [rax],al
   1400402ff:	add    BYTE PTR [rdx],ah
   140040301:	add    eax,0x11993
   140040306:	add    BYTE PTR [rax],al
   140040308:	sub    BYTE PTR [rbp+0x4],dh
	...
   140040313:	add    BYTE PTR [rcx],al
   140040315:	add    BYTE PTR [rax],al
   140040317:	add    BYTE PTR [rax],dh
   140040319:	jne    0x14004031f
   14004031b:	add    BYTE PTR [rax],ah
	...
   14004032d:	add    BYTE PTR [rax],al
   14004032f:	add    BYTE PTR [rdx],ah
   140040331:	add    eax,0x21993
   140040336:	add    BYTE PTR [rax],al
   140040338:	rex.W jne 0x14004033f
	...
   140040343:	add    BYTE PTR [rcx],al
   140040345:	add    BYTE PTR [rax],al
   140040347:	add    BYTE PTR [rax+0x75],bl
   14004034a:	add    al,0x0
   14004034c:	and    BYTE PTR [rax],al
	...
   14004035e:	add    BYTE PTR [rax],al
   140040360:	and    al,BYTE PTR [rip+0x31993]        # 0x140071cf9
   140040366:	add    BYTE PTR [rax],al
   140040368:	js     0x1400403df
   14004036a:	add    al,0x0
	...
   140040374:	add    eax,DWORD PTR [rax]
   140040376:	add    BYTE PTR [rax],al
   140040378:	nop
   140040379:	jne    0x14004037f
   14004037b:	add    BYTE PTR [rax],ah
	...
   14004038d:	add    BYTE PTR [rax],al
   14004038f:	add    BYTE PTR [rdx],ah
   140040391:	add    eax,0x11993
   140040396:	add    BYTE PTR [rax],al
   140040398:	sbb    al,0x76
   14004039a:	add    al,0x0
	...
   1400403a4:	add    DWORD PTR [rax],eax
   1400403a6:	add    BYTE PTR [rax],al
   1400403a8:	and    al,0x76
   1400403aa:	add    al,0x0
   1400403ac:	and    BYTE PTR [rax],al
	...
   1400403be:	add    BYTE PTR [rax],al
   1400403c0:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b1d59
   1400403c6:	add    BYTE PTR [rax],al
   1400403c8:	ins    BYTE PTR es:[rdi],dx
   1400403c9:	jbe    0x1400403cf
	...
   1400403d3:	add    BYTE PTR [rsi],al
   1400403d5:	add    BYTE PTR [rax],al
   1400403d7:	add    BYTE PTR [rsi+rsi*2+0x200004],ah
	...
   1400403ee:	add    BYTE PTR [rax],al
   1400403f0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061d89
   1400403f6:	add    BYTE PTR [rax],al
   1400403f8:	adc    al,0x77
   1400403fa:	add    al,0x0
	...
   140040404:	add    eax,0x24000000
   140040409:	ja     0x14004040f
   14004040b:	add    BYTE PTR [rax+0x0],ch
	...
   14004041e:	add    BYTE PTR [rax],al
   140040420:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a1db9
   140040426:	add    BYTE PTR [rax],al
   140040428:	js     0x1400404a1
   14004042a:	add    al,0x0
	...
   140040434:	(bad)  
   140040435:	add    BYTE PTR [rax],al
   140040437:	add    BYTE PTR [rax+0x20000477],ch
	...
   14004044d:	add    BYTE PTR [rax],al
   14004044f:	add    BYTE PTR [rdx],ah
   140040451:	add    eax,0x2c1993
   140040456:	add    BYTE PTR [rax],al
   140040458:	lock ja 0x14004045f
	...
   140040463:	add    BYTE PTR [rbx],ch
   140040465:	add    BYTE PTR [rax],al
   140040467:	add    BYTE PTR [rax+0x79],dl
   14004046a:	add    al,0x0
	...
   140040480:	and    al,BYTE PTR [rip+0x11993]        # 0x140051e19
   140040486:	add    BYTE PTR [rax],al
   140040488:	lock jp 0x14004048f
	...
   140040493:	add    BYTE PTR [rcx],al
   140040495:	add    BYTE PTR [rax],al
   140040497:	add    al,bh
   140040499:	jp     0x14004049f
   14004049b:	add    BYTE PTR [rax],ah
	...
   1400404ad:	add    BYTE PTR [rax],al
   1400404af:	add    BYTE PTR [rdx],ah
   1400404b1:	add    eax,0x11993
   1400404b6:	add    BYTE PTR [rax],al
   1400404b8:	fs jnp 0x1400404bf
	...
   1400404c3:	add    BYTE PTR [rcx],al
   1400404c5:	add    BYTE PTR [rax],al
   1400404c7:	add    BYTE PTR [rbx+rdi*2+0x4],ch
   1400404cb:	add    BYTE PTR [rax],ah
	...
   1400404dd:	add    BYTE PTR [rax],al
   1400404df:	add    BYTE PTR [rdx],ah
   1400404e1:	add    eax,0x21993
   1400404e6:	add    BYTE PTR [rax],al
   1400404e8:	pop    rax
   1400404e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400404ea:	add    al,0x0
	...
   1400404f4:	add    eax,0x94000000
   1400404f9:	jnp    0x1400404ff
   1400404fb:	add    BYTE PTR [rax],ah
	...
   14004050d:	add    BYTE PTR [rax],al
   14004050f:	add    BYTE PTR [rdx],ah
   140040511:	add    eax,0x21993
   140040516:	add    BYTE PTR [rax],al
   140040518:	int3   
   140040519:	jnp    0x14004051f
	...
   140040523:	add    BYTE PTR [rbx],al
   140040525:	add    BYTE PTR [rax],al
   140040527:	add    ah,bl
   140040529:	jnp    0x14004052f
   14004052b:	add    BYTE PTR [rax],ah
	...
   14004053d:	add    BYTE PTR [rax],al
   14004053f:	add    BYTE PTR [rdx],ah
   140040541:	add    eax,0x11993
   140040546:	add    BYTE PTR [rax],al
   140040548:	loopne 0x1400405c6
   14004054a:	add    al,0x0
	...
   140040554:	add    eax,DWORD PTR [rax]
   140040556:	add    BYTE PTR [rax],al
   140040558:	test   BYTE PTR [rsp+rax*1+0x0],bh
   14004055c:	and    BYTE PTR [rax],al
	...
   14004056e:	add    BYTE PTR [rax],al
   140040570:	and    al,BYTE PTR [rip+0x11993]        # 0x140051f09
   140040576:	add    BYTE PTR [rax],al
   140040578:	loopne 0x1400405f6
   14004057a:	add    al,0x0
	...
   140040584:	add    eax,DWORD PTR [rax]
   140040586:	add    BYTE PTR [rax],al
   140040588:	mov    ah,0x7c
   14004058a:	add    al,0x0
   14004058c:	and    BYTE PTR [rax],al
	...
   14004059e:	add    BYTE PTR [rax],al
   1400405a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140051f39
   1400405a6:	add    BYTE PTR [rax],al
   1400405a8:	loopne 0x140040626
   1400405aa:	add    al,0x0
	...
   1400405b4:	add    eax,DWORD PTR [rax]
   1400405b6:	add    BYTE PTR [rax],al
   1400405b8:	call   0x160040a39
	...
   1400405cd:	add    BYTE PTR [rax],al
   1400405cf:	add    BYTE PTR [rdx],ah
   1400405d1:	add    eax,0x11993
   1400405d6:	add    BYTE PTR [rax],al
   1400405d8:	cmp    BYTE PTR [rbp+0x4],bh
	...
   1400405e3:	add    BYTE PTR [rbx],al
   1400405e5:	add    BYTE PTR [rax],al
   1400405e7:	add    BYTE PTR [rax+0x7d],al
   1400405ea:	add    al,0x0
   1400405ec:	push   rax
	...
   1400405fd:	add    BYTE PTR [rax],al
   1400405ff:	add    BYTE PTR [rdx],ah
   140040601:	add    eax,0x81993
   140040606:	add    BYTE PTR [rax],al
   140040608:	ins    BYTE PTR es:[rdi],dx
   140040609:	jge    0x14004060f
	...
   140040613:	add    BYTE PTR [rcx],cl
   140040615:	add    BYTE PTR [rax],al
   140040617:	add    BYTE PTR [rbp+rdi*2+0x200004],ch
	...
   14004062e:	add    BYTE PTR [rax],al
   140040630:	and    al,BYTE PTR [rip+0x11993]        # 0x140051fc9
   140040636:	add    BYTE PTR [rax],al
   140040638:	test   BYTE PTR [rsi+0x4],bh
	...
   140040643:	add    BYTE PTR [rcx],al
   140040645:	add    BYTE PTR [rax],al
   140040647:	add    BYTE PTR [rsi+rdi*2],bl
   14004064a:	add    al,0x0
   14004064c:	and    BYTE PTR [rax],al
	...
   14004065e:	add    BYTE PTR [rax],al
   140040660:	and    al,BYTE PTR [rip+0x11993]        # 0x140051ff9
   140040666:	add    BYTE PTR [rax],al
   140040668:	push   rsp
   140040669:	jle    0x14004066f
	...
   140040673:	add    BYTE PTR [rbx],al
   140040675:	add    BYTE PTR [rax],al
   140040677:	add    BYTE PTR [rsi+rdi*2+0x4],bl
   14004067b:	add    BYTE PTR [rax],ch
	...
   14004068d:	add    BYTE PTR [rax],al
   14004068f:	add    BYTE PTR [rdx],ah
   140040691:	add    eax,0x11993
   140040696:	add    BYTE PTR [rax],al
   140040698:	test   BYTE PTR [rsi+0x4],bh
	...
   1400406a3:	add    BYTE PTR [rcx],al
   1400406a5:	add    BYTE PTR [rax],al
   1400406a7:	add    BYTE PTR [rsi+rdi*2+0x200004],cl
	...
   1400406be:	add    BYTE PTR [rax],al
   1400406c0:	and    al,BYTE PTR [rip+0x41993]        # 0x140082059
   1400406c6:	add    BYTE PTR [rax],al
   1400406c8:	mov    ah,0x7e
   1400406ca:	add    al,0x0
	...
   1400406d4:	add    eax,DWORD PTR [rax]
   1400406d6:	add    BYTE PTR [rax],al
   1400406d8:	(bad)  
   1400406d9:	jle    0x1400406df
   1400406db:	add    BYTE PTR [rax],dh
	...
   1400406ed:	add    BYTE PTR [rax],al
   1400406ef:	add    BYTE PTR [rdx],ah
   1400406f1:	add    eax,0x21993
   1400406f6:	add    BYTE PTR [rax],al
   1400406f8:	sbb    al,0x7f
   1400406fa:	add    al,0x0
	...
   140040704:	add    DWORD PTR [rax],eax
   140040706:	add    BYTE PTR [rax],al
   140040708:	sub    al,0x7f
   14004070a:	add    al,0x0
   14004070c:	and    BYTE PTR [rax],al
	...
   14004071e:	add    BYTE PTR [rax],al
   140040720:	and    al,BYTE PTR [rip+0x41993]        # 0x1400820b9
   140040726:	add    BYTE PTR [rax],al
   140040728:	push   rax
   140040729:	jg     0x14004072f
	...
   140040733:	add    BYTE PTR [rbx],al
   140040735:	add    BYTE PTR [rax],al
   140040737:	add    BYTE PTR [rax+0x7f],dh
   14004073a:	add    al,0x0
   14004073c:	xor    BYTE PTR [rax],al
	...
   14004074e:	add    BYTE PTR [rax],al
   140040750:	and    al,BYTE PTR [rip+0x41993]        # 0x1400820e9
   140040756:	add    BYTE PTR [rax],al
   140040758:	test   al,0x7f
   14004075a:	add    al,0x0
	...
   140040764:	or     DWORD PTR [rax],eax
   140040766:	add    BYTE PTR [rax],al
   140040768:	enter  0x47f,0x0
   14004076c:	xor    BYTE PTR [rax],al
	...
   14004077e:	add    BYTE PTR [rax],al
   140040780:	and    al,BYTE PTR [rip+0x11993]        # 0x140052119
   140040786:	add    BYTE PTR [rax],al
   140040788:	and    BYTE PTR [rax+0x4],al
   14004078e:	add    BYTE PTR [rax],al
   140040790:	add    BYTE PTR [rax],al
   140040792:	add    BYTE PTR [rax],al
   140040794:	add    eax,DWORD PTR [rax]
   140040796:	add    BYTE PTR [rax],al
   140040798:	sub    BYTE PTR [rax+0x200004],al
	...
   1400407ae:	add    BYTE PTR [rax],al
   1400407b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052149
   1400407b6:	add    BYTE PTR [rax],al
   1400407b8:	push   rsp
   1400407b9:	add    BYTE PTR [rax+rax*1],0x0
   1400407bd:	add    BYTE PTR [rax],al
   1400407bf:	add    BYTE PTR [rax],al
   1400407c1:	add    BYTE PTR [rax],al
   1400407c3:	add    BYTE PTR [rbx],al
   1400407c5:	add    BYTE PTR [rax],al
   1400407c7:	add    BYTE PTR [rax+rax*4+0x4],bl
   1400407cb:	add    BYTE PTR [rax],ah
	...
   1400407dd:	add    BYTE PTR [rax],al
   1400407df:	add    BYTE PTR [rdx],ah
   1400407e1:	add    eax,0x11993
   1400407e6:	add    BYTE PTR [rax],al
   1400407e8:	rol    BYTE PTR [rax+0x4],0x0
   1400407ef:	add    BYTE PTR [rax],al
   1400407f1:	add    BYTE PTR [rax],al
   1400407f3:	add    BYTE PTR [rbx],al
   1400407f5:	add    BYTE PTR [rax],al
   1400407f7:	add    BYTE PTR [rax+0x20000480],dl
	...
   14004080d:	add    BYTE PTR [rax],al
   14004080f:	add    BYTE PTR [rdx],ah
   140040811:	add    eax,0x11993
   140040816:	add    BYTE PTR [rax],al
   140040818:	rol    BYTE PTR [rax+0x4],0x0
   14004081f:	add    BYTE PTR [rax],al
   140040821:	add    BYTE PTR [rax],al
   140040823:	add    BYTE PTR [rbx],al
   140040825:	add    BYTE PTR [rax],al
   140040827:	add    al,cl
   140040829:	add    BYTE PTR [rax+rax*1],0x20
	...
   14004083d:	add    BYTE PTR [rax],al
   14004083f:	add    BYTE PTR [rdx],ah
   140040841:	add    eax,0x41993
   140040846:	add    BYTE PTR [rax],al
   140040848:	hlt    
   140040849:	add    BYTE PTR [rax+rax*1],0x0
   14004084d:	add    BYTE PTR [rax],al
   14004084f:	add    BYTE PTR [rax],al
   140040851:	add    BYTE PTR [rax],al
   140040853:	add    BYTE PTR [rip+0x14000000],al        # 0x154040859
   140040859:	add    DWORD PTR [rax+rax*1],0x20
	...
   140040870:	and    al,BYTE PTR [rip+0x21993]        # 0x140062209
   140040876:	add    BYTE PTR [rax],al
   140040878:	pop    rax
   140040879:	add    DWORD PTR [rax+rax*1],0x0
   140040880:	add    BYTE PTR [rax],al
   140040882:	add    BYTE PTR [rax],al
   140040884:	add    eax,DWORD PTR [rax]
   140040886:	add    BYTE PTR [rax],al
   140040888:	push   0x20000481
	...
   14004089d:	add    BYTE PTR [rax],al
   14004089f:	add    BYTE PTR [rdx],ah
   1400408a1:	add    eax,0x61993
   1400408a6:	add    BYTE PTR [rax],al
   1400408a8:	lods   al,BYTE PTR ds:[rsi]
   1400408a9:	add    DWORD PTR [rax+rax*1],0x0
   1400408b0:	add    BYTE PTR [rax],al
   1400408b2:	add    BYTE PTR [rax],al
   1400408b4:	(bad)  
   1400408b5:	add    BYTE PTR [rax],al
   1400408b7:	add    ah,bl
   1400408b9:	add    DWORD PTR [rax+rax*1],0xf0
	...
   1400408d0:	and    al,BYTE PTR [rip+0x41993]        # 0x140082269
   1400408d6:	add    BYTE PTR [rax],al
   1400408d8:	sub    al,0x82
   1400408da:	add    al,0x0
	...
   1400408e4:	(bad)  
   1400408e5:	add    BYTE PTR [rax],al
   1400408e7:	add    BYTE PTR [rdx+rax*4+0x4],cl
   1400408eb:	add    BYTE PTR [rax],ah
	...
   1400408fd:	add    BYTE PTR [rax],al
   1400408ff:	add    BYTE PTR [rdx],ah
   140040901:	add    eax,0x51993
   140040906:	add    BYTE PTR [rax],al
   140040908:	lods   al,BYTE PTR ds:[rsi]
   140040909:	(bad)  
   14004090a:	add    al,0x0
	...
   140040914:	add    eax,0xd4000000
   140040919:	(bad)  
   14004091a:	add    al,0x0
   14004091c:	and    BYTE PTR [rax],al
	...
   14004092e:	add    BYTE PTR [rax],al
   140040930:	and    al,BYTE PTR [rip+0x11993]        # 0x1400522c9
   140040936:	add    BYTE PTR [rax],al
   140040938:	or     al,0x83
   14004093a:	add    al,0x0
	...
   140040944:	add    DWORD PTR [rax],eax
   140040946:	add    BYTE PTR [rax],al
   140040948:	adc    al,0x83
   14004094a:	add    al,0x0
   14004094c:	and    BYTE PTR [rax],al
	...
   14004095e:	add    BYTE PTR [rax],al
   140040960:	and    al,BYTE PTR [rip+0x11993]        # 0x1400522f9
   140040966:	add    BYTE PTR [rax],al
   140040968:	rex.WR add QWORD PTR [rax+rax*1],0x0
   14004096d:	add    BYTE PTR [rax],al
   14004096f:	add    BYTE PTR [rax],al
   140040971:	add    BYTE PTR [rax],al
   140040973:	add    BYTE PTR [rcx],al
   140040975:	add    BYTE PTR [rax],al
   140040977:	add    BYTE PTR [rbx+rax*4],dh
   14004097a:	add    al,0x0
   14004097c:	and    BYTE PTR [rax],al
	...
   14004098e:	add    BYTE PTR [rax],al
   140040990:	and    al,BYTE PTR [rip+0x11993]        # 0x140052329
   140040996:	add    BYTE PTR [rax],al
   140040998:	rex.WR add QWORD PTR [rax+rax*1],0x0
   14004099d:	add    BYTE PTR [rax],al
   14004099f:	add    BYTE PTR [rax],al
   1400409a1:	add    BYTE PTR [rax],al
   1400409a3:	add    BYTE PTR [rbx],al
   1400409a5:	add    BYTE PTR [rax],al
   1400409a7:	add    BYTE PTR [rbx+rax*4+0x4],dl
   1400409ab:	add    BYTE PTR [rax],ah
	...
   1400409bd:	add    BYTE PTR [rax],al
   1400409bf:	add    BYTE PTR [rdx],ah
   1400409c1:	add    eax,0x11993
   1400409c6:	add    BYTE PTR [rax],al
   1400409c8:	xchg   esp,eax
   1400409c9:	add    DWORD PTR [rax+rax*1],0x0
   1400409cd:	add    BYTE PTR [rax],al
   1400409cf:	add    BYTE PTR [rax],al
   1400409d1:	add    BYTE PTR [rax],al
   1400409d3:	add    BYTE PTR [rcx],al
   1400409d5:	add    BYTE PTR [rax],al
   1400409d7:	add    BYTE PTR [rbx+rax*4+0x4],bh
   1400409db:	add    BYTE PTR [rax],ah
	...
   1400409ed:	add    BYTE PTR [rax],al
   1400409ef:	add    BYTE PTR [rdx],ah
   1400409f1:	add    eax,0x11993
   1400409f6:	add    BYTE PTR [rax],al
   1400409f8:	xchg   esp,eax
   1400409f9:	add    DWORD PTR [rax+rax*1],0x0
   1400409fd:	add    BYTE PTR [rax],al
   1400409ff:	add    BYTE PTR [rax],al
   140040a01:	add    BYTE PTR [rax],al
   140040a03:	add    BYTE PTR [rbx],al
   140040a05:	add    BYTE PTR [rax],al
   140040a07:	add    BYTE PTR [rbx+rax*4+0x200004],bl
	...
   140040a1e:	add    BYTE PTR [rax],al
   140040a20:	and    al,BYTE PTR [rip+0x51993]        # 0x1400923b9
   140040a26:	add    BYTE PTR [rax],al
   140040a28:	(bad)
	...
   140040a34:	add    eax,0xec000000
   140040a39:	add    DWORD PTR [rax+rax*1],0x20
	...
   140040a4d:	add    BYTE PTR [rax],al
   140040a4f:	add    BYTE PTR [rdx],ah
   140040a51:	add    eax,0xd1993
   140040a56:	add    BYTE PTR [rax],al
   140040a58:	sub    BYTE PTR [rsp+rax*1+0x0],al
   140040a5f:	add    BYTE PTR [rax],al
   140040a61:	add    BYTE PTR [rax],al
   140040a63:	add    BYTE PTR [rax+rax*1],cl
   140040a66:	add    BYTE PTR [rax],al
   140040a68:	nop
   140040a69:	test   BYTE PTR [rax+rax*1],al
   140040a6c:	and    BYTE PTR [rax],al
	...
   140040a7e:	add    BYTE PTR [rax],al
   140040a80:	and    al,BYTE PTR [rip+0x31993]        # 0x140072419
   140040a86:	add    BYTE PTR [rax],al
   140040a88:	add    BYTE PTR [rbp+0x10004],al
   140040a8e:	add    BYTE PTR [rax],al
   140040a90:	sbb    BYTE PTR [rbp+0x70004],al
   140040a96:	add    BYTE PTR [rax],al
   140040a98:	rex test DWORD PTR [rax+rax*1],eax
   140040a9c:	and    BYTE PTR [rax],al
	...
   140040aae:	add    BYTE PTR [rax],al
   140040ab0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062449
   140040ab6:	add    BYTE PTR [rax],al
   140040ab8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140040ac0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040ac1:	test   DWORD PTR [rax+rax*1],eax
   140040ac4:	add    eax,0xcc000000
   140040ac9:	test   DWORD PTR [rax+rax*1],eax
   140040acc:	xor    BYTE PTR [rax],al
	...
   140040ade:	add    BYTE PTR [rax],al
   140040ae0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052479
   140040ae6:	add    BYTE PTR [rax],al
   140040ae8:	cmp    BYTE PTR [rcx+0x4],dl
	...
   140040af3:	add    BYTE PTR [rbx],al
   140040af5:	add    BYTE PTR [rax],al
   140040af7:	add    BYTE PTR [rsi+rax*4],ah
   140040afa:	add    al,0x0
   140040afc:	and    BYTE PTR [rax],al
	...
   140040b0e:	add    BYTE PTR [rax],al
   140040b10:	and    al,BYTE PTR [rip+0x11993]        # 0x1400524a9
   140040b16:	add    BYTE PTR [rax],al
   140040b18:	(bad)  
   140040b19:	xchg   BYTE PTR [rax+rax*1],al
	...
   140040b24:	add    DWORD PTR [rax],eax
   140040b26:	add    BYTE PTR [rax],al
   140040b28:	push   0x20000486
	...
   140040b3d:	add    BYTE PTR [rax],al
   140040b3f:	add    BYTE PTR [rdx],ah
   140040b41:	add    eax,0x11993
   140040b46:	add    BYTE PTR [rax],al
   140040b48:	sbb    BYTE PTR [rsi+0x4],ah
   140040b4e:	add    BYTE PTR [rax],al
   140040b50:	add    BYTE PTR [rax],al
   140040b52:	add    BYTE PTR [rax],al
   140040b54:	add    eax,DWORD PTR [rax]
   140040b56:	add    BYTE PTR [rax],al
   140040b58:	fadd   QWORD PTR [rsi+0x200004]
	...
   140040b6e:	add    BYTE PTR [rax],al
   140040b70:	and    al,BYTE PTR [rip+0x11993]        # 0x140052509
   140040b76:	add    BYTE PTR [rax],al
   140040b78:	cwde   
   140040b79:	(bad)  
   140040b7a:	add    al,0x0
	...
   140040b84:	add    eax,DWORD PTR [rax]
   140040b86:	add    BYTE PTR [rax],al
   140040b88:	pop    rax
   140040b89:	xchg   DWORD PTR [rax+rax*1],eax
   140040b8c:	and    BYTE PTR [rax],al
	...
   140040b9e:	add    BYTE PTR [rax],al
   140040ba0:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a2539
   140040ba6:	add    BYTE PTR [rax],al
   140040ba8:	mov    eax,0x487
   140040bad:	add    BYTE PTR [rax],al
   140040baf:	add    BYTE PTR [rax],al
   140040bb1:	add    BYTE PTR [rax],al
   140040bb3:	add    BYTE PTR [rdi],al
   140040bb5:	add    BYTE PTR [rax],al
   140040bb7:	add    al,ch
   140040bb9:	xchg   DWORD PTR [rax+rax*1],eax
   140040bbc:	xor    BYTE PTR [rax],al
	...
   140040bce:	add    BYTE PTR [rax],al
   140040bd0:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b2569
   140040bd6:	add    BYTE PTR [rax],al
   140040bd8:	mov    BYTE PTR [rax+rax*1],al
	...
   140040be4:	or     eax,DWORD PTR [rax]
   140040be6:	add    BYTE PTR [rax],al
   140040be8:	js     0x140040b72
   140040bea:	add    al,0x0
   140040bec:	(bad)  
	...
   140040bfd:	add    BYTE PTR [rax],al
   140040bff:	add    BYTE PTR [rdx],ah
   140040c01:	add    eax,0x21993
   140040c06:	add    BYTE PTR [rax],al
   140040c08:	or     al,0x89
   140040c0a:	add    al,0x0
	...
   140040c14:	add    DWORD PTR [rax],eax
   140040c16:	add    BYTE PTR [rax],al
   140040c18:	sbb    al,0x89
   140040c1a:	add    al,0x0
   140040c1c:	and    BYTE PTR [rax],al
	...
   140040c2e:	add    BYTE PTR [rax],al
   140040c30:	and    al,BYTE PTR [rip+0x21993]        # 0x1400625c9
   140040c36:	add    BYTE PTR [rax],al
   140040c38:	jl     0x140040bc3
   140040c3a:	add    al,0x0
	...
   140040c44:	add    al,0x0
   140040c46:	add    BYTE PTR [rax],al
   140040c48:	mov    WORD PTR [rcx+0x200004],cs
	...
   140040c5e:	add    BYTE PTR [rax],al
   140040c60:	and    al,BYTE PTR [rip+0x11993]        # 0x1400525f9
   140040c66:	add    BYTE PTR [rax],al
   140040c68:	rex.WR push rax
   140040c6a:	add    al,0x0
	...
   140040c74:	add    eax,DWORD PTR [rax]
   140040c76:	add    BYTE PTR [rax],al
   140040c78:	ror    BYTE PTR [rcx+0x200004],0x0
	...
   140040c8f:	add    BYTE PTR [rdx],ah
   140040c91:	add    eax,0x11993
   140040c96:	add    BYTE PTR [rax],al
   140040c98:	sbb    BYTE PTR [rsi+0x4],ah
   140040c9e:	add    BYTE PTR [rax],al
   140040ca0:	add    BYTE PTR [rax],al
   140040ca2:	add    BYTE PTR [rax],al
   140040ca4:	add    eax,DWORD PTR [rax]
   140040ca6:	add    BYTE PTR [rax],al
   140040ca8:	call   0x160041136
	...
   140040cbd:	add    BYTE PTR [rax],al
   140040cbf:	add    BYTE PTR [rdx],ah
   140040cc1:	add    eax,0x21993
   140040cc6:	add    BYTE PTR [rax],al
   140040cc8:	sbb    al,0x8a
   140040cca:	add    al,0x0
	...
   140040cd4:	(bad)  
   140040cd5:	add    BYTE PTR [rax],al
   140040cd7:	add    BYTE PTR [rdx+rcx*4],ch
   140040cda:	add    al,0x0
   140040cdc:	sub    BYTE PTR [rax],al
	...
   140040cee:	add    BYTE PTR [rax],al
   140040cf0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052689
   140040cf6:	add    BYTE PTR [rax],al
   140040cf8:	ins    BYTE PTR es:[rdi],dx
   140040cf9:	mov    al,BYTE PTR [rax+rax*1]
	...
   140040d04:	add    al,BYTE PTR [rax]
   140040d06:	add    BYTE PTR [rax],al
   140040d08:	je     0x140040c94
   140040d0a:	add    al,0x0
   140040d0c:	sub    BYTE PTR [rax],al
	...
   140040d1e:	add    BYTE PTR [rax],al
   140040d20:	and    al,BYTE PTR [rip+0xd1993]        # 0x1401126b9
   140040d26:	add    BYTE PTR [rax],al
   140040d28:	lods   al,BYTE PTR ds:[rsi]
   140040d29:	mov    al,BYTE PTR [rax+rax*1]
	...
   140040d34:	sldt   WORD PTR [rax]
   140040d37:	add    BYTE PTR [rbx+rcx*4],dl
   140040d3a:	add    al,0x0
   140040d3c:	fadd   DWORD PTR [rax]
	...
   140040d4e:	add    BYTE PTR [rax],al
   140040d50:	and    al,BYTE PTR [rip+0x21993]        # 0x1400626e9
   140040d56:	add    BYTE PTR [rax],al
   140040d58:	mov    al,0x8b
   140040d5a:	add    al,0x0
	...
   140040d64:	add    eax,0xc0000000
   140040d69:	mov    eax,DWORD PTR [rax+rax*1]
   140040d6c:	add    BYTE PTR [rax],al
	...
   140040d7f:	add    BYTE PTR [rdx],ah
   140040d81:	add    eax,0x21993
   140040d86:	add    BYTE PTR [rax],al
   140040d88:	add    BYTE PTR [rsp+rax*1+0x0],cl
   140040d8f:	add    BYTE PTR [rax],al
   140040d91:	add    BYTE PTR [rax],al
   140040d93:	add    BYTE PTR [rbx],al
   140040d95:	add    BYTE PTR [rax],al
   140040d97:	add    BYTE PTR [rax],dl
   140040d99:	mov    WORD PTR [rax+rax*1],es
   140040d9c:	sub    BYTE PTR [rax],al
	...
   140040dae:	add    BYTE PTR [rax],al
   140040db0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062749
   140040db6:	add    BYTE PTR [rax],al
   140040db8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140040dc0:	rex.R mov WORD PTR [rax+rax*1],es
   140040dc4:	add    al,0x0
   140040dc6:	add    BYTE PTR [rax],al
   140040dc8:	ins    BYTE PTR es:[rdi],dx
   140040dc9:	mov    WORD PTR [rax+rax*1],es
   140040dcc:	and    BYTE PTR [rax],al
	...
   140040dde:	add    BYTE PTR [rax],al
   140040de0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062779
   140040de6:	add    BYTE PTR [rax],al
   140040de8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140040df0:	ror    BYTE PTR [rsp+rax*1+0x600],1
   140040df7:	add    al,bh
   140040df9:	mov    WORD PTR [rax+rax*1],es
   140040dfc:	and    BYTE PTR [rax],al
	...
   140040e0e:	add    BYTE PTR [rax],al
   140040e10:	and    al,BYTE PTR [rip+0x11993]        # 0x1400527a9
   140040e16:	add    BYTE PTR [rax],al
   140040e18:	(bad)  
   140040e19:	lea    eax,[rax+rax*1]
	...
   140040e24:	add    eax,DWORD PTR [rax]
   140040e26:	add    BYTE PTR [rax],al
   140040e28:	push   0x2000048d
	...
   140040e3d:	add    BYTE PTR [rax],al
   140040e3f:	add    BYTE PTR [rdx],ah
   140040e41:	add    eax,0x31993
   140040e46:	add    BYTE PTR [rax],al
   140040e48:	nop
   140040e49:	lea    eax,[rax+rax*1]
   140040e4c:	add    DWORD PTR [rax],eax
   140040e4e:	add    BYTE PTR [rax],al
   140040e50:	test   al,0x8d
   140040e52:	add    al,0x0
   140040e54:	or     BYTE PTR [rax],al
   140040e56:	add    BYTE PTR [rax],al
   140040e58:	ror    BYTE PTR [rbp+0x280004],1
	...
   140040e6e:	add    BYTE PTR [rax],al
   140040e70:	and    al,BYTE PTR [rip+0x11993]        # 0x140052809
   140040e76:	add    BYTE PTR [rax],al
   140040e78:	cwde   
   140040e79:	(bad)  
   140040e7a:	add    al,0x0
	...
   140040e84:	add    DWORD PTR [rax],eax
   140040e86:	add    BYTE PTR [rax],al
   140040e88:	cmp    BYTE PTR [rsi+0x200004],cl
	...
   140040e9e:	add    BYTE PTR [rax],al
   140040ea0:	and    al,BYTE PTR [rip+0x31993]        # 0x140072839
   140040ea6:	add    BYTE PTR [rax],al
   140040ea8:	pop    rax
   140040ea9:	mov    es,WORD PTR [rax+rax*1]
	...
   140040eb4:	add    eax,0x70000000
   140040eb9:	mov    es,WORD PTR [rax+rax*1]
   140040ebc:	and    BYTE PTR [rax],al
	...
   140040ece:	add    BYTE PTR [rax],al
   140040ed0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062869
   140040ed6:	add    BYTE PTR [rax],al
   140040ed8:	lods   al,BYTE PTR ds:[rsi]
   140040ed9:	mov    es,WORD PTR [rax+rax*1]
	...
   140040ee4:	add    al,BYTE PTR [rax]
   140040ee6:	add    BYTE PTR [rax],al
   140040ee8:	mov    esp,0x3800048e
	...
   140040efd:	add    BYTE PTR [rax],al
   140040eff:	add    BYTE PTR [rdx],ah
   140040f01:	add    eax,0x21993
   140040f06:	add    BYTE PTR [rax],al
   140040f08:	lods   al,BYTE PTR ds:[rsi]
   140040f09:	mov    es,WORD PTR [rax+rax*1]
	...
   140040f14:	add    al,BYTE PTR [rax]
   140040f16:	add    BYTE PTR [rax],al
   140040f18:	call   0x1780413ab
	...
   140040f2d:	add    BYTE PTR [rax],al
   140040f2f:	add    BYTE PTR [rdx],ah
   140040f31:	add    eax,0x21993
   140040f36:	add    BYTE PTR [rax],al
   140040f38:	lods   al,BYTE PTR ds:[rsi]
   140040f39:	mov    es,WORD PTR [rax+rax*1]
	...
   140040f44:	add    al,BYTE PTR [rax]
   140040f46:	add    BYTE PTR [rax],al
   140040f48:	adc    BYTE PTR [rdi+0x380004],cl
	...
   140040f5e:	add    BYTE PTR [rax],al
   140040f60:	and    al,BYTE PTR [rip+0x41993]        # 0x1400828f9
   140040f66:	add    BYTE PTR [rax],al
   140040f68:	xor    al,0x8f
   140040f6a:	add    al,0x0
	...
   140040f74:	add    eax,DWORD PTR [rax]
   140040f76:	add    BYTE PTR [rax],al
   140040f78:	push   rsp
   140040f79:	pop    QWORD PTR [rax+rax*1]
   140040f7c:	and    BYTE PTR [rax],al
	...
   140040f8e:	add    BYTE PTR [rax],al
   140040f90:	and    al,BYTE PTR [rip+0x41993]        # 0x140082929
   140040f96:	add    BYTE PTR [rax],al
   140040f98:	mov    BYTE PTR [rdi+0x4],cl
   140040f9e:	add    BYTE PTR [rax],al
   140040fa0:	add    BYTE PTR [rax],al
   140040fa2:	add    BYTE PTR [rax],al
   140040fa4:	add    eax,0xa8000000
   140040fa9:	pop    QWORD PTR [rax+rax*1]
   140040fac:	and    BYTE PTR [rax],al
	...
   140040fbe:	add    BYTE PTR [rax],al
   140040fc0:	and    al,BYTE PTR [rip+0x421993]        # 0x140462959
   140040fc6:	add    BYTE PTR [rax],al
   140040fc8:	clc    
   140040fc9:	pop    QWORD PTR [rax+rax*1]
	...
   140040fd4:	xor    al,0x0
   140040fd6:	add    BYTE PTR [rax],al
   140040fd8:	or     BYTE PTR [rdx+0xf80004],dl
	...
   140040fee:	add    BYTE PTR [rax],al
   140040ff0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062989
   140040ff6:	add    BYTE PTR [rax],al
   140040ff8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140041000:	fcom   DWORD PTR [rbx+0x40004]
   140041006:	add    BYTE PTR [rax],al
   140041008:	add    BYTE PTR [rsp+rax*1+0x2800],dl
	...
   14004101f:	add    BYTE PTR [rdx],ah
   140041021:	add    eax,0xe1993
   140041026:	add    BYTE PTR [rax],al
   140041028:	xchg   rsp,rax
   14004102a:	add    al,0x0
	...
   140041034:	or     eax,DWORD PTR [rax]
   140041036:	add    BYTE PTR [rax],al
   140041038:	mov    eax,0x30000494
	...
   14004104d:	add    BYTE PTR [rax],al
   14004104f:	add    BYTE PTR [rdx],ah
   140041051:	add    eax,0x21993
   140041056:	add    BYTE PTR [rax],al
   140041058:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140041060:	and    BYTE PTR [rbp+0x60004],dl
   140041066:	add    BYTE PTR [rax],al
   140041068:	xchg   rbp,rax
   14004106a:	add    al,0x0
   14004106c:	and    BYTE PTR [rax],al
	...
   14004107e:	add    BYTE PTR [rax],al
   140041080:	and    al,BYTE PTR [rip+0x21993]        # 0x140062a19
   140041086:	add    BYTE PTR [rax],al
   140041088:	cwde   
   140041089:	xchg   ebp,eax
   14004108a:	add    al,0x0
	...
   140041094:	add    al,0x0
   140041096:	add    BYTE PTR [rax],al
   140041098:	test   al,0x95
   14004109a:	add    al,0x0
   14004109c:	and    BYTE PTR [rax],al
	...
   1400410ae:	add    BYTE PTR [rax],al
   1400410b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062a49
   1400410b6:	add    BYTE PTR [rax],al
   1400410b8:	fcom   DWORD PTR [rbp+0x4]
   1400410be:	add    BYTE PTR [rax],al
   1400410c0:	add    BYTE PTR [rax],al
   1400410c2:	add    BYTE PTR [rax],al
   1400410c4:	add    al,0x0
   1400410c6:	add    BYTE PTR [rax],al
   1400410c8:	call   0x160041562
	...
   1400410dd:	add    BYTE PTR [rax],al
   1400410df:	add    BYTE PTR [rdx],ah
   1400410e1:	add    eax,0x21993
   1400410e6:	add    BYTE PTR [rax],al
   1400410e8:	xor    al,0x96
   1400410ea:	add    al,0x0
	...
   1400410f4:	add    DWORD PTR [rax],eax
   1400410f6:	add    BYTE PTR [rax],al
   1400410f8:	rex.R xchg esi,eax
   1400410fa:	add    al,0x0
   1400410fc:	and    BYTE PTR [rax],al
	...
   14004110e:	add    BYTE PTR [rax],al
   140041110:	and    al,BYTE PTR [rip+0x21993]        # 0x140062aa9
   140041116:	add    BYTE PTR [rax],al
   140041118:	jo     0x1400410b0
   14004111a:	add    al,0x0
	...
   140041124:	add    eax,DWORD PTR [rax]
   140041126:	add    BYTE PTR [rax],al
   140041128:	adc    BYTE PTR [rsi+0xb80004],0x0
	...
   14004113f:	add    BYTE PTR [rdx],ah
   140041141:	add    eax,0x31993
   140041146:	add    BYTE PTR [rax],al
   140041148:	rcl    BYTE PTR [rsi+0x4],0x0
   14004114f:	add    BYTE PTR [rax],al
   140041151:	add    BYTE PTR [rax],al
   140041153:	add    BYTE PTR [rax+rax*1],al
   140041156:	add    BYTE PTR [rax],al
   140041158:	fcom   DWORD PTR [rsi+0x200004]
	...
   14004116e:	add    BYTE PTR [rax],al
   140041170:	and    al,BYTE PTR [rip+0x31993]        # 0x140072b09
   140041176:	add    BYTE PTR [rax],al
   140041178:	adc    BYTE PTR [rdi+0x4],dl
   14004117e:	add    BYTE PTR [rax],al
   140041180:	add    BYTE PTR [rax],al
   140041182:	add    BYTE PTR [rax],al
   140041184:	add    eax,0x28000000
   140041189:	xchg   edi,eax
   14004118a:	add    al,0x0
   14004118c:	and    BYTE PTR [rax],al
	...
   14004119e:	add    BYTE PTR [rax],al
   1400411a0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062b39
   1400411a6:	add    BYTE PTR [rax],al
   1400411a8:	or     al,0x89
   1400411aa:	add    al,0x0
	...
   1400411b4:	add    DWORD PTR [rax],eax
   1400411b6:	add    BYTE PTR [rax],al
   1400411b8:	(bad)  
   1400411b9:	xchg   edi,eax
   1400411ba:	add    al,0x0
   1400411bc:	and    BYTE PTR [rax],al
	...
   1400411ce:	add    BYTE PTR [rax],al
   1400411d0:	and    al,BYTE PTR [rip+0x31993]        # 0x140072b69
   1400411d6:	add    BYTE PTR [rax],al
   1400411d8:	test   BYTE PTR [rdi+0x10004],dl
   1400411de:	add    BYTE PTR [rax],al
   1400411e0:	pushf  
   1400411e1:	xchg   edi,eax
   1400411e2:	add    al,0x0
   1400411e4:	(bad)  
   1400411e5:	add    BYTE PTR [rax],al
   1400411e7:	add    ah,al
   1400411e9:	xchg   edi,eax
   1400411ea:	add    al,0x0
   1400411ec:	sub    BYTE PTR [rax],al
	...
   1400411fe:	add    BYTE PTR [rax],al
   140041200:	and    al,BYTE PTR [rip+0x31993]        # 0x140072b99
   140041206:	add    BYTE PTR [rax],al
   140041208:	sbb    BYTE PTR [rax+0x4],bl
   14004120e:	add    BYTE PTR [rax],al
   140041210:	add    BYTE PTR [rax],al
   140041212:	add    BYTE PTR [rax],al
   140041214:	add    DWORD PTR [rax],eax
   140041216:	add    BYTE PTR [rax],al
   140041218:	xor    BYTE PTR [rax+0x200004],bl
	...
   14004122e:	add    BYTE PTR [rax],al
   140041230:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a2bc9
   140041236:	add    BYTE PTR [rax],al
   140041238:	push   rsp
   140041239:	cwde   
   14004123a:	add    al,0x0
   14004123c:	add    DWORD PTR [rax],eax
   14004123e:	add    BYTE PTR [rax],al
   140041240:	test   BYTE PTR [rax+0x70004],bl
   140041246:	add    BYTE PTR [rax],al
   140041248:	lods   al,BYTE PTR ds:[rsi]
   140041249:	cwde   
   14004124a:	add    al,0x0
   14004124c:	sub    BYTE PTR [rax],al
	...
   14004125e:	add    BYTE PTR [rax],al
   140041260:	and    al,BYTE PTR [rip+0x31993]        # 0x140072bf9
   140041266:	add    BYTE PTR [rax],al
   140041268:	adc    BYTE PTR [rcx+0x10004],bl
   14004126e:	add    BYTE PTR [rax],al
   140041270:	sub    BYTE PTR [rcx+0x60004],bl
   140041276:	add    BYTE PTR [rax],al
   140041278:	push   rax
   140041279:	cdq    
   14004127a:	add    al,0x0
   14004127c:	sub    BYTE PTR [rax],al
	...
   14004128e:	add    BYTE PTR [rax],al
   140041290:	and    al,BYTE PTR [rip+0x21993]        # 0x140062c29
   140041296:	add    BYTE PTR [rax],al
   140041298:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   1400412a0:	test   al,0x99
   1400412a2:	add    al,0x0
   1400412a4:	add    al,0x0
   1400412a6:	add    BYTE PTR [rax],al
   1400412a8:	rcr    BYTE PTR [rcx+0x280004],1
	...
   1400412be:	add    BYTE PTR [rax],al
   1400412c0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062c59
   1400412c6:	add    BYTE PTR [rax],al
   1400412c8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   1400412d0:	sbb    BYTE PTR [rdx+0x50004],bl
   1400412d6:	add    BYTE PTR [rax],al
   1400412d8:	rex (bad) 
   1400412da:	add    al,0x0
   1400412dc:	cmp    BYTE PTR [rax],al
	...
   1400412ee:	add    BYTE PTR [rax],al
   1400412f0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062c89
   1400412f6:	add    BYTE PTR [rax],al
   1400412f8:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140041300:	nop
   140041301:	(bad)  
   140041302:	add    al,0x0
   140041304:	add    al,0x0
   140041306:	add    BYTE PTR [rax],al
   140041308:	mov    eax,0x2800049a
	...
   14004131d:	add    BYTE PTR [rax],al
   14004131f:	add    BYTE PTR [rdx],ah
   140041321:	add    eax,0x21993
   140041326:	add    BYTE PTR [rax],al
   140041328:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140041330:	add    al,0x9b
   140041332:	add    al,0x0
   140041334:	add    eax,0x2c000000
   140041339:	fwait
   14004133a:	add    al,0x0
   14004133c:	cmp    BYTE PTR [rax],al
	...
   14004134e:	add    BYTE PTR [rax],al
   140041350:	and    al,BYTE PTR [rip+0x21993]        # 0x140062ce9
   140041356:	add    BYTE PTR [rax],al
   140041358:	ror    BYTE PTR [rsp+rax*1+0x100],0x0
   140041360:	sbb    BYTE PTR [rbx+0x40004],0x0
   140041367:	add    BYTE PTR [rax+0x2800049b],ch
	...
   14004137d:	add    BYTE PTR [rax],al
   14004137f:	add    BYTE PTR [rdx],ah
   140041381:	add    eax,0xa1993
   140041386:	add    BYTE PTR [rax],al
   140041388:	add    BYTE PTR [rsp+rax*1+0x0],bl
   14004138f:	add    BYTE PTR [rax],al
   140041391:	add    BYTE PTR [rax],al
   140041393:	add    BYTE PTR [rsi],cl
   140041395:	add    BYTE PTR [rax],al
   140041397:	add    BYTE PTR [rax-0x64],dl
   14004139a:	add    al,0x0
   14004139c:	mov    BYTE PTR [rax],al
	...
   1400413ae:	add    BYTE PTR [rax],al
   1400413b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062d49
   1400413b6:	add    BYTE PTR [rax],al
   1400413b8:	clc    
   1400413b9:	pushf  
   1400413ba:	add    al,0x0
	...
   1400413c4:	add    al,0x0
   1400413c6:	add    BYTE PTR [rax],al
   1400413c8:	or     BYTE PTR [rbp+0x200004],bl
	...
   1400413de:	add    BYTE PTR [rax],al
   1400413e0:	and    al,BYTE PTR [rip+0x81993]        # 0x1400c2d79
   1400413e6:	add    BYTE PTR [rax],al
   1400413e8:	pushf  
   1400413e9:	popf   
   1400413ea:	add    al,0x0
	...
   1400413f4:	add    eax,0xdc000000
   1400413f9:	popf   
   1400413fa:	add    al,0x0
   1400413fc:	sub    BYTE PTR [rax],al
	...
   14004140e:	add    BYTE PTR [rax],al
   140041410:	and    al,BYTE PTR [rip+0x11993]        # 0x140052da9
   140041416:	add    BYTE PTR [rax],al
   140041418:	rol    BYTE PTR [rax+0x4],0x0
   14004141f:	add    BYTE PTR [rax],al
   140041421:	add    BYTE PTR [rax],al
   140041423:	add    BYTE PTR [rbx],al
   140041425:	add    BYTE PTR [rax],al
   140041427:	add    BYTE PTR [rsi+rbx*4],ah
   14004142a:	add    al,0x0
   14004142c:	and    BYTE PTR [rax],al
	...
   14004143e:	add    BYTE PTR [rax],al
   140041440:	and    al,BYTE PTR [rip+0x11993]        # 0x140052dd9
   140041446:	add    BYTE PTR [rax],al
   140041448:	pop    rsp
   140041449:	sahf   
   14004144a:	add    al,0x0
	...
   140041454:	add    eax,DWORD PTR [rax]
   140041456:	add    BYTE PTR [rax],al
   140041458:	fs sahf 
   14004145a:	add    al,0x0
   14004145c:	xor    BYTE PTR [rax],al
	...
   14004146e:	add    BYTE PTR [rax],al
   140041470:	and    al,BYTE PTR [rip+0x11993]        # 0x140052e09
   140041476:	add    BYTE PTR [rax],al
   140041478:	rol    BYTE PTR [rax+0x4],0x0
   14004147f:	add    BYTE PTR [rax],al
   140041481:	add    BYTE PTR [rax],al
   140041483:	add    BYTE PTR [rbx],al
   140041485:	add    BYTE PTR [rax],al
   140041487:	add    BYTE PTR [rax+0x2000049e],bl
	...
   14004149d:	add    BYTE PTR [rax],al
   14004149f:	add    BYTE PTR [rdx],ah
   1400414a1:	add    eax,0x11993
   1400414a6:	add    BYTE PTR [rax],al
   1400414a8:	loopne 0x140041526
   1400414aa:	add    al,0x0
	...
   1400414b4:	add    eax,DWORD PTR [rax]
   1400414b6:	add    BYTE PTR [rax],al
   1400414b8:	int3   
   1400414b9:	sahf   
   1400414ba:	add    al,0x0
   1400414bc:	and    BYTE PTR [rax],al
	...
   1400414ce:	add    BYTE PTR [rax],al
   1400414d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062e69
   1400414d6:	add    BYTE PTR [rax],al
   1400414d8:	cld    
   1400414d9:	sahf   
   1400414da:	add    al,0x0
	...
   1400414e4:	add    al,0x0
   1400414e6:	add    BYTE PTR [rax],al
   1400414e8:	or     al,0x9f
   1400414ea:	add    al,0x0
   1400414ec:	and    BYTE PTR [rax],al
	...
   1400414fe:	add    BYTE PTR [rax],al
   140041500:	and    al,BYTE PTR [rip+0x21993]        # 0x140062e99
   140041506:	add    BYTE PTR [rax],al
   140041508:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041509:	lahf   
   14004150a:	add    al,0x0
	...
   140041514:	add    eax,DWORD PTR [rax]
   140041516:	add    BYTE PTR [rax],al
   140041518:	mov    ah,0x9f
   14004151a:	add    al,0x0
   14004151c:	and    BYTE PTR [rax],al
	...
   14004152e:	add    BYTE PTR [rax],al
   140041530:	and    al,BYTE PTR [rip+0x11993]        # 0x140052ec9
   140041536:	add    BYTE PTR [rax],al
   140041538:	hlt    
   140041539:	lahf   
   14004153a:	add    al,0x0
	...
   140041544:	add    eax,DWORD PTR [rax]
   140041546:	add    BYTE PTR [rax],al
   140041548:	cld    
   140041549:	lahf   
   14004154a:	add    al,0x0
   14004154c:	mov    al,0x0
	...
   14004155e:	add    BYTE PTR [rax],al
   140041560:	and    al,BYTE PTR [rip+0x11993]        # 0x140052ef9
   140041566:	add    BYTE PTR [rax],al
   140041568:	cmp    al,0xa0
   14004156a:	add    al,0x0
	...
   140041574:	add    eax,DWORD PTR [rax]
   140041576:	add    BYTE PTR [rax],al
   140041578:	rex.R movabs al,ds:0x400004
	...
   14004158e:	add    BYTE PTR [rax],al
   140041590:	and    al,BYTE PTR [rip+0x41993]        # 0x140082f29
   140041596:	add    BYTE PTR [rax],al
   140041598:	mov    WORD PTR [rax+0x4],fs
   14004159e:	add    BYTE PTR [rax],al
   1400415a0:	add    BYTE PTR [rax],al
   1400415a2:	add    BYTE PTR [rax],al
   1400415a4:	add    eax,0xac000000
   1400415a9:	movabs al,ds:0x200004
	...
   1400415be:	add    BYTE PTR [rax],al
   1400415c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052f59
   1400415c6:	add    BYTE PTR [rax],al
   1400415c8:	in     al,0xa0
   1400415ca:	add    al,0x0
	...
   1400415d4:	add    DWORD PTR [rax],eax
   1400415d6:	add    BYTE PTR [rax],al
   1400415d8:	in     al,dx
   1400415d9:	movabs al,ds:0x200004
	...
   1400415ee:	add    BYTE PTR [rax],al
   1400415f0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062f89
   1400415f6:	add    BYTE PTR [rax],al
   1400415f8:	adc    al,0xa1
   1400415fa:	add    al,0x0
	...
   140041604:	add    eax,0x24000000
   140041609:	movabs eax,ds:0x400004
	...
   14004161e:	add    BYTE PTR [rax],al
   140041620:	and    al,BYTE PTR [rip+0x31993]        # 0x140072fb9
   140041626:	add    BYTE PTR [rax],al
   140041628:	pop    rsp
   140041629:	movabs eax,ds:0x4
   140041632:	add    BYTE PTR [rax],al
   140041634:	add    al,0x0
   140041636:	add    BYTE PTR [rax],al
   140041638:	je     0x1400415db
   14004163a:	add    al,0x0
   14004163c:	and    BYTE PTR [rax],al
	...
   14004164e:	add    BYTE PTR [rax],al
   140041650:	and    al,BYTE PTR [rip+0x31993]        # 0x140072fe9
   140041656:	add    BYTE PTR [rax],al
   140041658:	mov    ah,0xa1
   14004165a:	add    al,0x0
	...
   140041664:	add    eax,0xcc000000
   140041669:	movabs eax,ds:0x200004
	...
   14004167e:	add    BYTE PTR [rax],al
   140041680:	and    al,BYTE PTR [rip+0x51993]        # 0x140093019
   140041686:	add    BYTE PTR [rax],al
   140041688:	add    al,0xa2
   14004168a:	add    al,0x0
	...
   140041694:	add    eax,0x2c000000
   140041699:	movabs ds:0x200004,al
	...
   1400416ae:	add    BYTE PTR [rax],al
   1400416b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140063049
   1400416b6:	add    BYTE PTR [rax],al
   1400416b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400416b9:	lahf   
   1400416ba:	add    al,0x0
	...
   1400416c4:	add    eax,DWORD PTR [rax]
   1400416c6:	add    BYTE PTR [rax],al
   1400416c8:	js     0x14004166c
   1400416ca:	add    al,0x0
   1400416cc:	and    BYTE PTR [rax],al
	...
   1400416de:	add    BYTE PTR [rax],al
   1400416e0:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a3079
   1400416e6:	add    BYTE PTR [rax],al
   1400416e8:	clc    
   1400416e9:	movabs ds:0x4,al
   1400416f2:	add    BYTE PTR [rax],al
   1400416f4:	or     BYTE PTR [rax],al
   1400416f6:	add    BYTE PTR [rax],al
   1400416f8:	sub    BYTE PTR [rbx+0x200004],ah
	...
   14004170e:	add    BYTE PTR [rax],al
   140041710:	and    al,BYTE PTR [rip+0x21993]        # 0x1400630a9
   140041716:	add    BYTE PTR [rax],al
   140041718:	mov    BYTE PTR [rbx+0x4],ah
   14004171e:	add    BYTE PTR [rax],al
   140041720:	add    BYTE PTR [rax],al
   140041722:	add    BYTE PTR [rax],al
   140041724:	add    al,0x0
   140041726:	add    BYTE PTR [rax],al
   140041728:	cwde   
   140041729:	movabs ds:0x280004,eax
	...
   14004173e:	add    BYTE PTR [rax],al
   140041740:	and    al,BYTE PTR [rip+0x11993]        # 0x1400530d9
   140041746:	add    BYTE PTR [rax],al
   140041748:	enter  0x4a3,0x0
	...
   140041754:	add    DWORD PTR [rax],eax
   140041756:	add    BYTE PTR [rax],al
   140041758:	shl    BYTE PTR [rbx+0x200004],1
	...
   14004176e:	add    BYTE PTR [rax],al
   140041770:	and    al,BYTE PTR [rip+0x11993]        # 0x140053109
   140041776:	add    BYTE PTR [rax],al
   140041778:	enter  0x4a3,0x0
	...
   140041784:	add    DWORD PTR [rax],eax
   140041786:	add    BYTE PTR [rax],al
   140041788:	call   0x160041c30
	...
   14004179d:	add    BYTE PTR [rax],al
   14004179f:	add    BYTE PTR [rdx],ah
   1400417a1:	add    eax,0x21993
   1400417a6:	add    BYTE PTR [rax],al
   1400417a8:	pop    rax
   1400417a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417aa:	add    al,0x0
	...
   1400417b4:	add    eax,0x10000000
   1400417b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417ba:	add    al,0x0
   1400417bc:	and    BYTE PTR [rax],al
	...
   1400417ce:	add    BYTE PTR [rax],al
   1400417d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140063169
   1400417d6:	add    BYTE PTR [rax],al
   1400417d8:	pop    rax
   1400417d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417da:	add    al,0x0
	...
   1400417e4:	add    eax,0x68000000
   1400417e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417ea:	add    al,0x0
   1400417ec:	and    BYTE PTR [rax],al
	...
   1400417fe:	add    BYTE PTR [rax],al
   140041800:	and    al,BYTE PTR [rip+0x21993]        # 0x140063199
   140041806:	add    BYTE PTR [rax],al
   140041808:	mov    ah,0xa4
   14004180a:	add    al,0x0
	...
   140041814:	add    eax,0xc4000000
   140041819:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004181a:	add    al,0x0
   14004181c:	add    BYTE PTR [rax],0x0
	...
   14004182f:	add    BYTE PTR [rdx],ah
   140041831:	add    eax,0xf1993
   140041836:	add    BYTE PTR [rax],al
   140041838:	and    BYTE PTR [rbp+0x4],ah
   14004183e:	add    BYTE PTR [rax],al
   140041840:	add    BYTE PTR [rax],al
   140041842:	add    BYTE PTR [rax],al
   140041844:	(bad)  
   140041845:	add    BYTE PTR [rax],al
   140041847:	add    BYTE PTR [rax+0x200004a5],bl
	...
   14004185d:	add    BYTE PTR [rax],al
   14004185f:	add    BYTE PTR [rdx],ah
   140041861:	add    eax,0x11993
   140041866:	add    BYTE PTR [rax],al
   140041868:	sbb    BYTE PTR [rsi+0x4],ah
   14004186e:	add    BYTE PTR [rax],al
   140041870:	add    BYTE PTR [rax],al
   140041872:	add    BYTE PTR [rax],al
   140041874:	add    eax,DWORD PTR [rax]
   140041876:	add    BYTE PTR [rax],al
   140041878:	and    BYTE PTR [rsi+0x200004],ah
	...
   140041886:	add    BYTE PTR [rax],al
   140041888:	or     al,0x21
   14004188a:	add    eax,DWORD PTR [rax+0x1]
   14004188d:	add    BYTE PTR [rax],al
   14004188f:	add    BYTE PTR [rbp+0x2b],ah
   140041892:	xor    BYTE PTR [rax],dh
   140041894:	xor    BYTE PTR [rax],al
	...
   14004189e:	add    BYTE PTR [rax],al
   1400418a0:	xor    DWORD PTR [rbx],esp
   1400418a2:	push   rbx
   1400418a3:	rex.WRX
   1400418a4:	rex.B
   1400418a5:	rex.WRX add BYTE PTR [rax],r8b
   1400418a8:	xor    DWORD PTR [rbx],esp
   1400418aa:	rex.WB
   1400418ab:	rex.WRX
   1400418ac:	add    BYTE PTR [rax],r8b
   1400418af:	add    BYTE PTR [rcx],dh
   1400418b1:	and    ecx,DWORD PTR [rcx+0x4e]
   1400418b4:	rex.RX add BYTE PTR [rax],r8b
   1400418b7:	add    BYTE PTR [rcx],dh
   1400418b9:	and    edx,DWORD PTR [rcx+0x4e]
   1400418bc:	rex.B
   1400418bd:	rex.WRX add BYTE PTR [rax],r8b
   1400418c0:	jo     0x1400418c2
	...
   140041916:	add    BYTE PTR [rax],al
   140041918:	rex.W (bad) 
   14004191a:	add    al,0x40
   14004191c:	add    DWORD PTR [rax],eax
	...
   14004192e:	add    BYTE PTR [rax],al
   140041930:	push   rdx
   140041931:	push   rbx
   140041932:	rex.R push rbx
   140041934:	out    0xf,eax
   140041936:	jge    0x140041947
   140041938:	fimul  DWORD PTR [rdx+rdi*8+0x3201a546]
   14004193f:	sbb    eax,0xb9fc3e38
   140041944:	add    al,BYTE PTR [rax]
   140041946:	add    BYTE PTR [rax],al
   140041948:	push   rsi
   140041949:	push   rbx
   14004194a:	push   rax
   14004194b:	gs jb  0x1400419b4
   14004194e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140041950:	outs   dx,BYTE PTR ds:[rsi]
   140041951:	cs jo  0x1400419b8
   140041954:	(bad)  
   140041955:	add    BYTE PTR [rax],al
   140041957:	add    BYTE PTR [rcx],al
   140041959:	add    BYTE PTR [rax],al
   14004195b:	add    BYTE PTR [rax],cl
   14004195d:	add    DWORD PTR [rax],eax
   14004195f:	add    BYTE PTR [rax],cl
   140041961:	add    DWORD PTR [rax],eax
   140041963:	add    BYTE PTR [rax],al
   140041965:	add    BYTE PTR [rax],al
   140041967:	add    BYTE PTR [rcx],al
	...
   140041971:	add    BYTE PTR [rax],al
   140041973:	add    al,al
   140041975:	rol    DWORD PTR [rax+rax*1],cl
   140041978:	nop
   140041979:	sbb    DWORD PTR [rax+rax*1],eax
   14004197c:	push   0x419
	...
   140041995:	add    BYTE PTR [rax],al
   140041997:	add    BYTE PTR [rcx],al
   140041999:	add    BYTE PTR [rax],al
   14004199b:	add    BYTE PTR [rax+0x419],ch
   1400419a1:	add    BYTE PTR [rax],al
   1400419a3:	add    BYTE PTR [rax],al
   1400419a5:	add    BYTE PTR [rax],al
   1400419a7:	add    BYTE PTR [rax+0x419],bh
	...
   1400419b5:	add    BYTE PTR [rax],al
   1400419b7:	add    al,al
   1400419b9:	rol    DWORD PTR [rax+rax*1],cl
	...
   1400419c4:	(bad)  
   1400419c5:	(bad)  
   1400419c6:	(bad)  
   1400419c7:	inc    DWORD PTR [rax]
   1400419c9:	add    BYTE PTR [rax],al
   1400419cb:	add    BYTE PTR [rax+0x0],al
   1400419ce:	add    BYTE PTR [rax],al
   1400419d0:	nop
   1400419d1:	sbb    DWORD PTR [rax+rax*1],eax
	...
   1400419e0:	add    DWORD PTR [rax],eax
	...
   1400419ea:	add    BYTE PTR [rax],al
   1400419ec:	test   al,0xf2
   1400419ee:	add    al,0x0
   1400419f0:	or     BYTE PTR [rdx],bl
   1400419f2:	add    al,0x0
   1400419f4:	loopne 0x140041a0f
   1400419f6:	add    al,0x0
	...
   140041a10:	add    al,BYTE PTR [rax]
   140041a12:	add    BYTE PTR [rax],al
   140041a14:	and    BYTE PTR [rdx],bl
   140041a16:	add    al,0x0
	...
   140041a20:	cmp    BYTE PTR [rdx],bl
   140041a22:	add    al,0x0
   140041a24:	shl    BYTE PTR [rbx],1
   140041a26:	add    al,0x0
	...
   140041a38:	test   al,0xf2
   140041a3a:	add    al,0x0
   140041a3c:	add    DWORD PTR [rax],eax
   140041a3e:	add    BYTE PTR [rax],al
   140041a40:	add    BYTE PTR [rax],al
   140041a42:	add    BYTE PTR [rax],al
   140041a44:	(bad)  
   140041a45:	(bad)  
   140041a46:	(bad)  
   140041a47:	inc    DWORD PTR [rax]
   140041a49:	add    BYTE PTR [rax],al
   140041a4b:	add    BYTE PTR [rax+0x0],al
   140041a4e:	add    BYTE PTR [rax],al
   140041a50:	or     BYTE PTR [rdx],bl
   140041a52:	add    al,0x0
	...
   140041a60:	add    DWORD PTR [rax],eax
	...
   140041a6a:	add    BYTE PTR [rax],al
   140041a6c:	nop
   140041a6d:	out    dx,al
   140041a6e:	add    al,0x0
   140041a70:	cwde   
   140041a71:	and    al,0x4
   140041a73:	add    BYTE PTR [rax+0x1a],ah
   140041a76:	add    al,0x0
	...
   140041a88:	add    DWORD PTR [rax],eax
	...
   140041a92:	add    BYTE PTR [rax],al
   140041a94:	loopne 0x140041a78
   140041a96:	add    al,0x0
   140041a98:	mov    al,0x1a
   140041a9a:	add    al,0x0
   140041a9c:	mov    BYTE PTR [rdx],bl
   140041a9e:	add    al,0x0
	...
   140041ab8:	add    eax,DWORD PTR [rax]
   140041aba:	add    BYTE PTR [rax],al
   140041abc:	enter  0x41a,0x0
	...
   140041ac8:	call   0x138041ee7
   140041acd:	and    eax,DWORD PTR [rax+rax*1]
   140041ad0:	shl    BYTE PTR [rbx],1
   140041ad2:	add    al,0x0
	...
   140041ae8:	loopne 0x140041acc
   140041aea:	add    al,0x0
   140041aec:	add    al,BYTE PTR [rax]
   140041aee:	add    BYTE PTR [rax],al
   140041af0:	add    BYTE PTR [rax],al
   140041af2:	add    BYTE PTR [rax],al
   140041af4:	(bad)  
   140041af5:	(bad)  
   140041af6:	(bad)  
   140041af7:	inc    DWORD PTR [rax]
   140041af9:	add    BYTE PTR [rax],al
   140041afb:	add    BYTE PTR [rax+0x0],al
   140041afe:	add    BYTE PTR [rax],al
   140041b00:	mov    al,0x1a
   140041b02:	add    al,0x0
	...
   140041b10:	add    DWORD PTR [rax],eax
	...
   140041b1a:	add    BYTE PTR [rax],al
   140041b1c:	or     bl,ah
   140041b1e:	add    al,0x0
   140041b20:	cmp    BYTE PTR [rbx],bl
   140041b22:	add    al,0x0
   140041b24:	adc    BYTE PTR [rbx],bl
   140041b26:	add    al,0x0
	...
   140041b40:	add    eax,DWORD PTR [rax]
   140041b42:	add    BYTE PTR [rax],al
   140041b44:	push   rax
   140041b45:	sbb    eax,DWORD PTR [rax+rax*1]
	...
   140041b50:	jo     0x140041b6d
   140041b52:	add    al,0x0
   140041b54:	clc    
   140041b55:	and    eax,DWORD PTR [rax+rax*1]
   140041b58:	shl    BYTE PTR [rbx],1
   140041b5a:	add    al,0x0
	...
   140041b70:	or     bl,ah
   140041b72:	add    al,0x0
   140041b74:	add    al,BYTE PTR [rax]
   140041b76:	add    BYTE PTR [rax],al
   140041b78:	add    BYTE PTR [rax],al
   140041b7a:	add    BYTE PTR [rax],al
   140041b7c:	(bad)  
   140041b7d:	(bad)  
   140041b7e:	(bad)  
   140041b7f:	inc    DWORD PTR [rax]
   140041b81:	add    BYTE PTR [rax],al
   140041b83:	add    BYTE PTR [rax+0x0],al
   140041b86:	add    BYTE PTR [rax],al
   140041b88:	cmp    BYTE PTR [rbx],bl
   140041b8a:	add    al,0x0
	...
   140041b98:	add    DWORD PTR [rax],eax
	...
   140041ba2:	add    BYTE PTR [rax],al
   140041ba4:	xor    bl,ah
   140041ba6:	add    al,0x0
   140041ba8:	rcr    BYTE PTR [rbx],0x4
   140041bab:	add    BYTE PTR [rax+0x41b],bl
	...
   140041bc5:	add    BYTE PTR [rax],al
   140041bc7:	add    BYTE PTR [rdx],al
   140041bc9:	add    BYTE PTR [rax],al
   140041bcb:	add    al,bl
   140041bcd:	sbb    eax,DWORD PTR [rax+rax*1]
	...
   140041bd8:	lock sbb eax,DWORD PTR [rax+rax*1]
   140041bdc:	shl    BYTE PTR [rbx],1
   140041bde:	add    al,0x0
	...
   140041bf0:	xor    bl,ah
   140041bf2:	add    al,0x0
   140041bf4:	add    DWORD PTR [rax],eax
   140041bf6:	add    BYTE PTR [rax],al
   140041bf8:	add    BYTE PTR [rax],al
   140041bfa:	add    BYTE PTR [rax],al
   140041bfc:	(bad)  
   140041bfd:	(bad)  
   140041bfe:	(bad)  
   140041bff:	inc    DWORD PTR [rax]
   140041c01:	add    BYTE PTR [rax],al
   140041c03:	add    BYTE PTR [rax+0x0],al
   140041c06:	add    BYTE PTR [rax],al
   140041c08:	rcr    BYTE PTR [rbx],0x4
	...
   140041c17:	add    BYTE PTR [rax+0x10004e4],dl
   140041c1d:	add    BYTE PTR [rax],al
   140041c1f:	add    BYTE PTR [rax],al
   140041c21:	add    BYTE PTR [rax],al
   140041c23:	add    bh,bh
   140041c25:	(bad)  
   140041c26:	(bad)  
   140041c27:	inc    DWORD PTR [rax]
   140041c29:	add    BYTE PTR [rax],al
   140041c2b:	add    BYTE PTR [rax+0x0],al
   140041c2e:	add    BYTE PTR [rax],al
   140041c30:	loopne 0x140041c50
   140041c32:	add    al,0x0
	...
   140041c48:	add    DWORD PTR [rax],eax
   140041c4a:	add    BYTE PTR [rax],al
   140041c4c:	rcr    BYTE PTR [rip+0x4],1        # 0x140041c56
   140041c52:	add    BYTE PTR [rax],al
   140041c54:	add    BYTE PTR [rax],al
   140041c56:	add    BYTE PTR [rax],al
   140041c58:	clc    
   140041c59:	jmp    0x140041c5f
	...
   140041c63:	add    bh,bh
   140041c65:	(bad)  
   140041c66:	(bad)  
   140041c67:	inc    DWORD PTR [rax]
   140041c69:	add    BYTE PTR [rax],al
   140041c6b:	add    BYTE PTR [rax+0x0],al
   140041c6e:	add    BYTE PTR [rax],al
   140041c70:	sbb    al,0x4
	...
   140041c87:	add    BYTE PTR [rbx],al
   140041c89:	add    BYTE PTR [rax],al
   140041c8b:	add    BYTE PTR [rax+0x41c],bl
   140041c91:	add    BYTE PTR [rax],al
   140041c93:	add    BYTE PTR [rax],al
   140041c95:	add    BYTE PTR [rax],al
   140041c97:	add    al,ah
   140041c99:	sbb    eax,0x1ce00004
   140041c9e:	add    al,0x0
   140041ca0:	pop    rax
   140041ca1:	sbb    al,0x4
	...
   140041cb7:	add    BYTE PTR [rcx],al
	...
   140041cc1:	add    BYTE PTR [rax],al
   140041cc3:	add    BYTE PTR [rax-0x5ffffb14],al
   140041cc9:	(bad)  
   140041cca:	add    al,0x0
   140041ccc:	mov    eax,0x41c
	...
   140041cdd:	add    BYTE PTR [rax],al
   140041cdf:	add    BYTE PTR [rax+0x10004ec],al
   140041ce5:	add    BYTE PTR [rax],al
   140041ce7:	add    BYTE PTR [rax],al
   140041ce9:	add    BYTE PTR [rax],al
   140041ceb:	add    bh,bh
   140041ced:	(bad)  
   140041cee:	(bad)  
   140041cef:	inc    DWORD PTR [rax]
   140041cf1:	add    BYTE PTR [rax],al
   140041cf3:	add    BYTE PTR [rax+0x0],al
   140041cf6:	add    BYTE PTR [rax],al
   140041cf8:	movabs al,ds:0x41e
   140041d01:	add    BYTE PTR [rax],al
   140041d03:	add    BYTE PTR [rax],al
   140041d05:	add    BYTE PTR [rax],al
   140041d07:	add    BYTE PTR [rax-0x14],dl
   140041d0a:	add    al,0x0
	...
   140041d14:	(bad)  
   140041d15:	(bad)  
   140041d16:	(bad)  
   140041d17:	inc    DWORD PTR [rax]
   140041d19:	add    BYTE PTR [rax],al
   140041d1b:	add    BYTE PTR [rax+0x0],al
   140041d1e:	add    BYTE PTR [rax],al
   140041d20:	rex.W (bad) 
   140041d22:	add    al,0x0
	...
   140041d30:	mov    bl,ch
   140041d32:	add    al,0x0
   140041d34:	add    al,BYTE PTR [rax]
   140041d36:	add    BYTE PTR [rax],al
   140041d38:	add    BYTE PTR [rax],al
   140041d3a:	add    BYTE PTR [rax],al
   140041d3c:	(bad)  
   140041d3d:	(bad)  
   140041d3e:	(bad)  
   140041d3f:	inc    DWORD PTR [rax]
   140041d41:	add    BYTE PTR [rax],al
   140041d43:	add    BYTE PTR [rax+0x0],al
   140041d46:	add    BYTE PTR [rax],al
   140041d48:	or     BYTE PTR [rsi],bl
   140041d4a:	add    al,0x0
	...
   140041d58:	add    DWORD PTR [rax],eax
	...
   140041d62:	add    BYTE PTR [rax],al
   140041d64:	clc    
   140041d65:	jmp    0x140041d6b
   140041d67:	add    BYTE PTR [rax+0x1c],al
   140041d6a:	add    al,0x0
   140041d6c:	pop    rax
   140041d6d:	sbb    eax,0x4
	...
   140041d7e:	add    BYTE PTR [rax],al
   140041d80:	add    DWORD PTR [rax],eax
	...
   140041d8a:	add    BYTE PTR [rax],al
   140041d8c:	mov    bl,ch
   140041d8e:	add    al,0x0
   140041d90:	or     BYTE PTR [rsi],bl
   140041d92:	add    al,0x0
   140041d94:	sbb    BYTE PTR [rip+0x4],0x0        # 0x140041d9f
	...
   140041da7:	add    BYTE PTR [rax],bl
   140041da9:	sbb    al,0x4
   140041dab:	add    BYTE PTR [rax],cl
   140041dad:	sbb    eax,0x4
	...
   140041dbe:	add    BYTE PTR [rax],al
   140041dc0:	or     BYTE PTR [rip+0x4],bl        # 0x140041dca
	...
   140041dce:	add    BYTE PTR [rax],al
   140041dd0:	pop    rax
   140041dd1:	sbb    al,0x4
	...
   140041ddf:	add    al,al
   140041de1:	jmp    0x140041de7
   140041de3:	add    BYTE PTR [rdx],al
   140041de5:	add    BYTE PTR [rax],al
   140041de7:	add    BYTE PTR [rax],al
   140041de9:	add    BYTE PTR [rax],al
   140041deb:	add    bh,bh
   140041ded:	(bad)  
   140041dee:	(bad)  
   140041def:	inc    DWORD PTR [rax]
   140041df1:	add    BYTE PTR [rax],al
   140041df3:	add    BYTE PTR [rax+0x0],al
   140041df6:	add    BYTE PTR [rax],al
   140041df8:	sbb    BYTE PTR [rsp+rax*1],0x0
	...
   140041e10:	add    eax,DWORD PTR [rax]
   140041e12:	add    BYTE PTR [rax],al
   140041e14:	clc    
   140041e15:	(bad)  
   140041e16:	add    al,0x0
	...
   140041e20:	add    DWORD PTR [rax],eax
	...
   140041e2a:	add    BYTE PTR [rax],al
   140041e2c:	push   rax
   140041e2d:	in     al,dx
   140041e2e:	add    al,0x0
   140041e30:	rex.W (bad) 
   140041e32:	add    al,0x0
   140041e34:	and    BYTE PTR [rsi],bl
   140041e36:	add    al,0x0
	...
   140041e50:	add    DWORD PTR [rax],eax
   140041e52:	add    BYTE PTR [rax],al
   140041e54:	rcr    BYTE PTR [rip+0x4],0x0        # 0x140041e5f
   140041e5b:	add    BYTE PTR [rax],al
   140041e5d:	add    BYTE PTR [rax],al
   140041e5f:	add    BYTE PTR [rcx],al
	...
   140041e69:	add    BYTE PTR [rax],al
   140041e6b:	add    al,al
   140041e6d:	jmp    0x140041e73
   140041e6f:	add    BYTE PTR [rax+0x6000041c],al
   140041e75:	(bad)  
   140041e76:	add    al,0x0
	...
   140041e88:	loopne 0x140041ea6
   140041e8a:	add    al,0x0
   140041e8c:	pop    rax
   140041e8d:	sbb    al,0x4
	...
   140041ea7:	add    BYTE PTR [rdx],al
   140041ea9:	add    BYTE PTR [rax],al
   140041eab:	add    BYTE PTR [rax+0x41e],cl
   140041eb1:	add    BYTE PTR [rax],al
   140041eb3:	add    BYTE PTR [rax],al
   140041eb5:	add    BYTE PTR [rax],al
   140041eb7:	add    BYTE PTR [rcx],al
	...
   140041ec1:	add    BYTE PTR [rax],al
   140041ec3:	add    BYTE PTR [rax-0x1ffffb1c],dl
   140041ec9:	(bad)  
   140041eca:	add    al,0x0
   140041ecc:	mov    eax,0x41e
	...
   140041ee5:	add    BYTE PTR [rax],al
   140041ee7:	add    BYTE PTR [rdx],al
   140041ee9:	add    BYTE PTR [rax],al
   140041eeb:	add    BYTE PTR [rax+0x41d],ch
   140041ef1:	add    BYTE PTR [rax],al
   140041ef3:	add    BYTE PTR [rax],al
   140041ef5:	add    BYTE PTR [rax],al
   140041ef7:	add    BYTE PTR [rax],dh
   140041ef9:	sbb    eax,0x1ce00004
   140041efe:	add    al,0x0
   140041f00:	pop    rax
   140041f01:	sbb    al,0x4
	...
   140041f17:	add    al,dl
   140041f19:	(bad)  
   140041f1a:	add    al,0x0
	...
   140041f30:	add    DWORD PTR [rax],eax
   140041f32:	add    BYTE PTR [rax],al
   140041f34:	mov    BYTE PTR [rax],ah
   140041f36:	add    al,0x0
	...
   140041f48:	add    DWORD PTR [rax],eax
   140041f4a:	add    BYTE PTR [rax],al
   140041f4c:	sbb    BYTE PTR [rdi],bl
   140041f4e:	add    al,0x0
	...
   140041f58:	loopne 0x140041f46
   140041f5a:	add    al,0x0
	...
   140041f64:	(bad)  
   140041f65:	(bad)  
   140041f66:	(bad)  
   140041f67:	inc    DWORD PTR [rax]
   140041f69:	add    BYTE PTR [rax],al
   140041f6b:	add    BYTE PTR [rax+0x0],al
   140041f6e:	add    BYTE PTR [rax],al
   140041f70:	sub    BYTE PTR [rdi],bl
   140041f72:	add    al,0x0
	...
   140041f80:	mov    al,0x20
   140041f82:	add    al,0x0
   140041f84:	pop    rax
   140041f85:	(bad)  
   140041f86:	add    al,0x0
   140041f88:	clc    
   140041f89:	(bad)  
   140041f8a:	add    al,0x0
   140041f8c:	test   al,0x1f
   140041f8e:	add    al,0x0
	...
   140041fa8:	mov    eax,0x4ec
   140041fad:	add    BYTE PTR [rax],al
   140041faf:	add    BYTE PTR [rax],cl
   140041fb1:	add    BYTE PTR [rax],al
   140041fb3:	add    bh,bh
   140041fb5:	(bad)  
   140041fb6:	(bad)  
   140041fb7:	inc    DWORD PTR [rax]
   140041fb9:	add    BYTE PTR [rax],al
   140041fbb:	add    BYTE PTR [rax+0x0],al
   140041fbe:	add    BYTE PTR [rax],al
   140041fc0:	rex (bad) 
   140041fc2:	add    al,0x0
	...
   140041fd0:	mov    eax,0x4ec
   140041fd5:	add    BYTE PTR [rax],al
   140041fd7:	add    BYTE PTR [rax],al
   140041fd9:	add    BYTE PTR [rax],al
   140041fdb:	add    bh,bh
   140041fdd:	(bad)  
   140041fde:	(bad)  
   140041fdf:	inc    DWORD PTR [rax]
   140041fe1:	add    BYTE PTR [rax],al
   140041fe3:	add    BYTE PTR [rax+0x0],al
   140041fe6:	add    BYTE PTR [rax],al
   140041fe8:	rex (bad) 
   140041fea:	add    al,0x0
	...
   140041ff8:	xor    ch,ch
   140041ffa:	add    al,0x0
   140041ffc:	add    DWORD PTR [rax],eax
   140041ffe:	add    BYTE PTR [rax],al
   140042000:	or     BYTE PTR [rax],al
   140042002:	add    BYTE PTR [rax],al
   140042004:	(bad)  
   140042005:	(bad)  
   140042006:	(bad)  
   140042007:	inc    DWORD PTR [rax]
   140042009:	add    BYTE PTR [rax],al
   14004200b:	add    BYTE PTR [rax+0x0],al
   14004200e:	add    BYTE PTR [rax],al
   140042010:	and    BYTE PTR [rax],ah
   140042012:	add    al,0x0
	...
   140042028:	add    al,BYTE PTR [rax]
   14004202a:	add    BYTE PTR [rax],al
   14004202c:	cwde   
   14004202d:	and    BYTE PTR [rax+rax*1],al
	...
   140042038:	xor    ch,ch
   14004203a:	add    al,0x0
   14004203c:	add    DWORD PTR [rax],eax
   14004203e:	add    BYTE PTR [rax],al
   140042040:	add    BYTE PTR [rax],al
   140042042:	add    BYTE PTR [rax],al
   140042044:	(bad)  
   140042045:	(bad)  
   140042046:	(bad)  
   140042047:	inc    DWORD PTR [rax]
   140042049:	add    BYTE PTR [rax],al
   14004204b:	add    BYTE PTR [rax+0x0],al
   14004204e:	add    BYTE PTR [rax],al
   140042050:	and    BYTE PTR [rax],ah
   140042052:	add    al,0x0
	...
   140042060:	add    DWORD PTR [rax],eax
	...
   14004206a:	add    BYTE PTR [rax],al
   14004206c:	or     ch,ch
   14004206e:	add    al,0x0
   140042070:	add    BYTE PTR [rcx],ah
   140042072:	add    al,0x0
   140042074:	(bad)  
   140042075:	and    BYTE PTR [rax+rax*1],al
	...
   140042088:	pop    rax
   140042089:	(bad)  
   14004208a:	add    al,0x0
	...
   140042098:	cmp    BYTE PTR [rax],ah
   14004209a:	add    al,0x0
   14004209c:	rcr    BYTE PTR [rdi],1
   14004209e:	add    al,0x0
	...
   1400420b0:	or     ch,ch
   1400420b2:	add    al,0x0
   1400420b4:	add    eax,DWORD PTR [rax]
   1400420b6:	add    BYTE PTR [rax],al
   1400420b8:	add    BYTE PTR [rax],al
   1400420ba:	add    BYTE PTR [rax],al
   1400420bc:	(bad)  
   1400420bd:	(bad)  
   1400420be:	(bad)  
   1400420bf:	inc    DWORD PTR [rax]
   1400420c1:	add    BYTE PTR [rax],al
   1400420c3:	add    BYTE PTR [rax+0x0],al
   1400420c6:	add    BYTE PTR [rax],al
   1400420c8:	add    BYTE PTR [rcx],ah
   1400420ca:	add    al,0x0
	...
   1400420d8:	add    DWORD PTR [rax],eax
	...
   1400420e2:	add    BYTE PTR [rax],al
   1400420e4:	xor    ch,ch
   1400420e6:	add    al,0x0
   1400420e8:	and    BYTE PTR [rax],ah
   1400420ea:	add    al,0x0
   1400420ec:	fsub   DWORD PTR [rax]
   1400420ee:	add    al,0x0
	...
   140042104:	add    DWORD PTR [rax],eax
   140042106:	add    BYTE PTR [rax],al
   140042108:	add    al,0x0
   14004210a:	add    BYTE PTR [rax],al
   14004210c:	sbb    BYTE PTR [rdi],0x4
	...
   140042117:	add    BYTE PTR [rcx],al
   140042119:	add    BYTE PTR [rax],al
   14004211b:	add    BYTE PTR [rax],cl
   14004211d:	add    BYTE PTR [rax],al
   14004211f:	add    BYTE PTR [rax],al
   140042121:	add    BYTE PTR [rax],al
   140042123:	add    BYTE PTR [rax],cl
   140042125:	in     eax,dx
   140042126:	add    al,0x0
   140042128:	add    BYTE PTR [rcx],ah
   14004212a:	add    al,0x0
   14004212c:	sbb    BYTE PTR [rcx],ah
   14004212e:	add    al,0x0
	...
   140042140:	nop
   140042141:	in     eax,dx
   140042142:	add    al,0x0
	...
   14004214c:	(bad)  
   14004214d:	(bad)  
   14004214e:	(bad)  
   14004214f:	inc    DWORD PTR [rax]
   140042151:	add    BYTE PTR [rax],al
   140042153:	add    BYTE PTR [rax+0x0],al
   140042156:	add    BYTE PTR [rax],al
   140042158:	or     BYTE PTR [rdx],ah
   14004215a:	add    al,0x0
	...
   140042168:	add    DWORD PTR [rax],eax
	...
   140042172:	add    BYTE PTR [rax],al
   140042174:	mov    eax,0x200004ed
   140042179:	and    al,BYTE PTR [rax+rax*1]
   14004217c:	push   0x421
	...
   14004218d:	add    BYTE PTR [rax],al
   14004218f:	add    BYTE PTR [rax+0x21],al
   140042192:	add    al,0x0
	...
   1400421a0:	loopne 0x1400421c3
   1400421a2:	add    al,0x0
   1400421a4:	rex and DWORD PTR [rax+rax*1],eax
	...
   1400421b8:	add    DWORD PTR [rax],eax
	...
   1400421c2:	add    BYTE PTR [rax],al
   1400421c4:	nop
   1400421c5:	in     eax,dx
   1400421c6:	add    al,0x0
   1400421c8:	or     BYTE PTR [rdx],ah
   1400421ca:	add    al,0x0
   1400421cc:	mov    eax,0x421
	...
   1400421dd:	add    BYTE PTR [rax],al
   1400421df:	add    BYTE PTR [rax+0x10004ed],bh
   1400421e5:	add    BYTE PTR [rax],al
   1400421e7:	add    BYTE PTR [rax],al
   1400421e9:	add    BYTE PTR [rax],al
   1400421eb:	add    bh,bh
   1400421ed:	(bad)  
   1400421ee:	(bad)  
   1400421ef:	inc    DWORD PTR [rax]
   1400421f1:	add    BYTE PTR [rax],al
   1400421f3:	add    BYTE PTR [rax+0x0],al
   1400421f6:	add    BYTE PTR [rax],al
   1400421f8:	and    BYTE PTR [rdx],ah
   1400421fa:	add    al,0x0
	...
   140042210:	add    DWORD PTR [rax],eax
   140042212:	add    BYTE PTR [rax],al
   140042214:	nop
   140042215:	and    DWORD PTR [rax+rax*1],eax
	...
   140042228:	add    al,BYTE PTR [rax]
   14004222a:	add    BYTE PTR [rax],al
   14004222c:	movabs al,ds:0x421
   140042235:	add    BYTE PTR [rax],al
   140042237:	add    al,ch
   140042239:	in     eax,dx
   14004223a:	add    al,0x0
	...
   140042244:	(bad)  
   140042245:	(bad)  
   140042246:	(bad)  
   140042247:	inc    DWORD PTR [rax]
   140042249:	add    BYTE PTR [rax],al
   14004224b:	add    BYTE PTR [rax+0x0],al
   14004224e:	add    BYTE PTR [rax],al
   140042250:	cwde   
   140042251:	and    al,BYTE PTR [rax+rax*1]
	...
   140042260:	add    DWORD PTR [rax],eax
	...
   14004226a:	add    BYTE PTR [rax],al
   14004226c:	call   0xd804275e
   140042271:	and    al,BYTE PTR [rax+rax*1]
   140042274:	(bad)  
   140042275:	and    al,BYTE PTR [rax+rax*1]
	...
   140042288:	cmp    BYTE PTR [rdx],ah
   14004228a:	add    al,0x0
	...
   1400422a0:	add    DWORD PTR [rax],eax
   1400422a2:	add    BYTE PTR [rax],al
   1400422a4:	mov    BYTE PTR [rdx],ah
   1400422a6:	add    al,0x0
	...
   1400422b0:	adc    dh,ch
   1400422b2:	add    al,0x0
   1400422b4:	add    DWORD PTR [rax],eax
   1400422b6:	add    BYTE PTR [rax],al
   1400422b8:	add    BYTE PTR [rax],al
   1400422ba:	add    BYTE PTR [rax],al
   1400422bc:	(bad)  
   1400422bd:	(bad)  
   1400422be:	(bad)  
   1400422bf:	inc    DWORD PTR [rax]
   1400422c1:	add    BYTE PTR [rax],al
   1400422c3:	add    BYTE PTR [rax+0x0],al
   1400422c6:	add    BYTE PTR [rax],al
   1400422c8:	lock and al,BYTE PTR [rax+rax*1]
	...
   1400422d8:	mov    al,0x22
   1400422da:	add    al,0x0
   1400422dc:	rex and DWORD PTR [rax+rax*1],eax
	...
   1400422f8:	add    al,BYTE PTR [rax]
   1400422fa:	add    BYTE PTR [rax],al
   1400422fc:	fsub   DWORD PTR [rdx]
   1400422fe:	add    al,0x0
	...
   140042308:	add    DWORD PTR [rax],eax
	...
   140042312:	add    BYTE PTR [rax],al
   140042314:	adc    dh,ch
   140042316:	add    al,0x0
   140042318:	lock and al,BYTE PTR [rax+rax*1]
   14004231c:	or     BYTE PTR [rbx],ah
   14004231e:	add    al,0x0
	...
   140042330:	add    DWORD PTR [rax],eax
	...
   14004233a:	add    BYTE PTR [rax],al
   14004233c:	loopne 0x14004232a
   14004233e:	add    al,0x0
   140042340:	sub    BYTE PTR [rdi],bl
   140042342:	add    al,0x0
   140042344:	xor    BYTE PTR [rbx],ah
   140042346:	add    al,0x0
	...
   140042358:	add    DWORD PTR [rax],eax
	...
   140042362:	add    BYTE PTR [rax],al
   140042364:	push   0xffffffffb80004ee
   140042369:	and    eax,DWORD PTR [rax+rax*1]
   14004236c:	pop    rax
   14004236d:	and    eax,DWORD PTR [rax+rax*1]
	...
   140042380:	push   0x4ee
   140042385:	add    BYTE PTR [rax],al
   140042387:	add    BYTE PTR [rax],al
   140042389:	add    BYTE PTR [rax],al
   14004238b:	add    bh,bh
   14004238d:	(bad)  
   14004238e:	(bad)  
   14004238f:	inc    DWORD PTR [rax]
   140042391:	add    BYTE PTR [rax],al
   140042393:	add    BYTE PTR [rax+0x0],al
   140042396:	add    BYTE PTR [rax],al
   140042398:	mov    eax,0x423
	...
   1400423a5:	add    BYTE PTR [rax],al
   1400423a7:	add    BYTE PTR [rax+0x423],al
	...
   1400423bd:	add    BYTE PTR [rax],al
   1400423bf:	add    BYTE PTR [rcx],al
   1400423c1:	add    BYTE PTR [rax],al
   1400423c3:	add    BYTE PTR [rax+0x423],ch
   1400423c9:	add    BYTE PTR [rax],al
   1400423cb:	add    BYTE PTR [rax],al
   1400423cd:	add    BYTE PTR [rax],al
   1400423cf:	add    BYTE PTR [rax+0x4ee],dl
   1400423d5:	add    BYTE PTR [rax],al
   1400423d7:	add    BYTE PTR [rax],al
   1400423d9:	add    BYTE PTR [rax],al
   1400423db:	add    bh,bh
   1400423dd:	(bad)  
   1400423de:	(bad)  
   1400423df:	inc    DWORD PTR [rax]
   1400423e1:	add    BYTE PTR [rax],al
   1400423e3:	add    BYTE PTR [rax+0x0],al
   1400423e6:	add    BYTE PTR [rax],al
   1400423e8:	cwde   
   1400423e9:	and    al,0x4
	...
   1400423f7:	add    BYTE PTR [rax+0x10004ee],bh
   1400423fd:	add    BYTE PTR [rax],al
   1400423ff:	add    BYTE PTR [rax],al
   140042401:	add    BYTE PTR [rax],al
   140042403:	add    bh,bh
   140042405:	(bad)  
   140042406:	(bad)  
   140042407:	inc    DWORD PTR [rax]
   140042409:	add    BYTE PTR [rax],al
   14004240b:	add    BYTE PTR [rax+0x0],al
   14004240e:	add    BYTE PTR [rax],al
   140042410:	enter  0x424,0x0
	...
   140042428:	add    eax,DWORD PTR [rax]
   14004242a:	add    BYTE PTR [rax],al
   14004242c:	or     BYTE PTR [rip+0x4],ah        # 0x140042436
   140042432:	add    BYTE PTR [rax],al
   140042434:	add    BYTE PTR [rax],al
   140042436:	add    BYTE PTR [rax],al
   140042438:	add    DWORD PTR [rax],eax
	...
   140042442:	add    BYTE PTR [rax],al
   140042444:	loopne 0x140042434
   140042446:	add    al,0x0
   140042448:	and    BYTE PTR [rsp+rax*1],ah
   14004244b:	add    BYTE PTR [rax],bh
   14004244d:	and    al,0x4
	...
   14004245f:	add    BYTE PTR [rcx],al
	...
   140042469:	add    BYTE PTR [rax],al
   14004246b:	add    BYTE PTR [rax-0x37fffb12],bh
   140042471:	and    al,0x4
   140042473:	add    BYTE PTR [rax+0x24],ah
   140042476:	add    al,0x0
	...
   140042488:	shl    BYTE PTR [rbx],1
   14004248a:	add    al,0x0
	...
   1400424a0:	add    DWORD PTR [rax],eax
   1400424a2:	add    BYTE PTR [rax],al
   1400424a4:	mov    BYTE PTR [rsp+rax*1],ah
	...
   1400424af:	add    al,bh
   1400424b1:	and    eax,DWORD PTR [rax+rax*1]
   1400424b4:	shl    BYTE PTR [rbx],1
   1400424b6:	add    al,0x0
	...
   1400424d0:	add    al,BYTE PTR [rax]
   1400424d2:	add    BYTE PTR [rax],al
   1400424d4:	mov    al,0x24
   1400424d6:	add    al,0x0
	...
   1400424e0:	loopne 0x1400424d0
   1400424e2:	add    al,0x0
   1400424e4:	add    al,BYTE PTR [rax]
   1400424e6:	add    BYTE PTR [rax],al
   1400424e8:	add    BYTE PTR [rax],al
   1400424ea:	add    BYTE PTR [rax],al
   1400424ec:	(bad)  
   1400424ed:	(bad)  
   1400424ee:	(bad)  
   1400424ef:	inc    DWORD PTR [rax]
   1400424f1:	add    BYTE PTR [rax],al
   1400424f3:	add    BYTE PTR [rax+0x0],al
   1400424f6:	add    BYTE PTR [rax],al
   1400424f8:	and    BYTE PTR [rsp+rax*1],ah
	...
   140042507:	add    al,ah
   140042509:	and    al,0x4
   14004250b:	add    al,bh
   14004250d:	and    eax,DWORD PTR [rax+rax*1]
   140042510:	shl    BYTE PTR [rbx],1
   140042512:	add    al,0x0
	...
   140042528:	cmp    BYTE PTR [rip+0x4],ah        # 0x140042532
	...
   140042536:	add    BYTE PTR [rax],al
   140042538:	adc    bh,ch
   14004253a:	add    al,0x0
	...
   140042544:	(bad)  
   140042545:	(bad)  
   140042546:	(bad)  
   140042547:	inc    DWORD PTR [rax]
   140042549:	add    BYTE PTR [rax],al
   14004254b:	add    BYTE PTR [rax+0x0],al
   14004254e:	add    BYTE PTR [rax],al
   140042550:	(bad)  
   140042551:	and    eax,0x4
	...
   140042566:	add    BYTE PTR [rax],al
   140042568:	add    DWORD PTR [rax],eax
   14004256a:	add    BYTE PTR [rax],al
   14004256c:	sub    BYTE PTR [rip+0x4],ah        # 0x140042576
   140042572:	add    BYTE PTR [rax],al
   140042574:	add    BYTE PTR [rax],al
   140042576:	add    BYTE PTR [rax],al
   140042578:	add    DWORD PTR [rax],eax
	...
   140042582:	add    BYTE PTR [rax],al
   140042584:	adc    bh,ch
   140042586:	add    al,0x0
   140042588:	(bad)  
   140042589:	and    eax,0x25780004
   14004258e:	add    al,0x0
	...
   1400425a0:	xor    bh,ch
   1400425a2:	add    al,0x0
	...
   1400425ac:	(bad)  
   1400425ad:	(bad)  
   1400425ae:	(bad)  
   1400425af:	inc    DWORD PTR [rax]
   1400425b1:	add    BYTE PTR [rax],al
   1400425b3:	add    BYTE PTR [rax+0x0],al
   1400425b6:	add    BYTE PTR [rax],al
   1400425b8:	lock and eax,0x4
	...
   1400425c6:	add    BYTE PTR [rax],al
   1400425c8:	add    DWORD PTR [rax],eax
	...
   1400425d2:	add    BYTE PTR [rax],al
   1400425d4:	xor    bh,ch
   1400425d6:	add    al,0x0
   1400425d8:	lock and eax,0x25c80004
   1400425de:	add    al,0x0
	...
   1400425f8:	add    DWORD PTR [rax],eax
   1400425fa:	add    BYTE PTR [rax],al
   1400425fc:	or     BYTE PTR [rsi],ah
   1400425fe:	add    al,0x0
	...
   140042608:	movabs al,ds:0x425
   140042611:	add    BYTE PTR [rax],al
   140042613:	add    BYTE PTR [rax],al
   140042615:	add    BYTE PTR [rax],al
   140042617:	add    BYTE PTR [rax-0x11],bl
   14004261a:	add    al,0x0
   14004261c:	add    DWORD PTR [rax],eax
   14004261e:	add    BYTE PTR [rax],al
   140042620:	adc    BYTE PTR [rax],al
   140042622:	add    BYTE PTR [rax],al
   140042624:	(bad)  
   140042625:	(bad)  
   140042626:	(bad)  
   140042627:	inc    DWORD PTR [rax]
   140042629:	add    BYTE PTR [rax],al
   14004262b:	add    BYTE PTR [rax+0x0],al
   14004262e:	add    BYTE PTR [rax],al
   140042630:	shl    BYTE PTR [rdi],0x4
	...
   14004263f:	add    BYTE PTR [rcx],al
	...
   140042649:	add    BYTE PTR [rax],al
   14004264b:	add    al,ch
   14004264d:	out    dx,eax
   14004264e:	add    al,0x0
   140042650:	clc    
   140042651:	es add al,0x0
   140042654:	rex
   140042655:	es add al,0x0
	...
   140042668:	mov    al,0xef
   14004266a:	add    al,0x0
   14004266c:	add    BYTE PTR [rax],al
   14004266e:	add    BYTE PTR [rax],al
   140042670:	adc    BYTE PTR [rax],al
   140042672:	add    BYTE PTR [rax],al
   140042674:	(bad)  
   140042675:	(bad)  
   140042676:	(bad)  
   140042677:	inc    DWORD PTR [rax]
   140042679:	add    BYTE PTR [rax],al
   14004267b:	add    BYTE PTR [rax+0x0],al
   14004267e:	add    BYTE PTR [rax],al
   140042680:	loopne 0x1400426a8
   140042682:	add    al,0x0
	...
   140042690:	mov    bh,ch
   140042692:	add    al,0x0
	...
   14004269c:	(bad)  
   14004269d:	(bad)  
   14004269e:	(bad)  
   14004269f:	inc    DWORD PTR [rax]
   1400426a1:	add    BYTE PTR [rax],al
   1400426a3:	add    BYTE PTR [rax+0x0],al
   1400426a6:	add    BYTE PTR [rax],al
   1400426a8:	adc    BYTE PTR [rdi],ah
   1400426aa:	add    al,0x0
	...
   1400426b8:	mov    al,0xef
   1400426ba:	add    al,0x0
	...
   1400426c4:	(bad)  
   1400426c5:	(bad)  
   1400426c6:	(bad)  
   1400426c7:	inc    DWORD PTR [rax]
   1400426c9:	add    BYTE PTR [rax],al
   1400426cb:	add    BYTE PTR [rax+0x0],al
   1400426ce:	add    BYTE PTR [rax],al
   1400426d0:	loopne 0x1400426f8
   1400426d2:	add    al,0x0
	...
   1400426e8:	add    DWORD PTR [rax],eax
   1400426ea:	add    BYTE PTR [rax],al
   1400426ec:	push   rax
   1400426ed:	(bad)  
   1400426ee:	add    al,0x0
	...
   1400426fc:	add    DWORD PTR [rax],eax
   1400426fe:	add    BYTE PTR [rax],al
   140042700:	add    al,0x0
   140042702:	add    BYTE PTR [rax],al
   140042704:	cwde   
   140042705:	(bad)  
   140042706:	add    al,0x0
	...
   140042718:	add    DWORD PTR [rax],eax
   14004271a:	add    BYTE PTR [rax],al
   14004271c:	(bad)  
   14004271d:	(bad)  
   14004271e:	add    al,0x0
	...
   140042728:	call   0x143042c1c
   14004272d:	add    BYTE PTR [rax],al
   14004272f:	add    BYTE PTR [rax],al
   140042731:	add    BYTE PTR [rax],al
   140042733:	add    bh,bh
   140042735:	(bad)  
   140042736:	(bad)  
   140042737:	inc    DWORD PTR [rax]
   140042739:	add    BYTE PTR [rax],al
   14004273b:	add    BYTE PTR [rax+0x0],al
   14004273e:	add    BYTE PTR [rax],al
   140042740:	clc    
   140042741:	es add al,0x0
	...
   140042750:	mov    eax,0x426
	...
   14004275d:	add    BYTE PTR [rax],al
   14004275f:	add    BYTE PTR [rax+0x426],dl
	...
   14004276d:	add    BYTE PTR [rax],al
   14004276f:	add    BYTE PTR [rcx],al
   140042771:	add    BYTE PTR [rax],al
   140042773:	add    BYTE PTR [rax],dl
   140042775:	add    BYTE PTR [rax],al
   140042777:	add    BYTE PTR [rax],al
   140042779:	add    BYTE PTR [rax],al
   14004277b:	add    al,ch
   14004277d:	out    dx,eax
   14004277e:	add    al,0x0
   140042780:	clc    
   140042781:	es add al,0x0
   140042784:	jo     0x1400427ad
   140042786:	add    al,0x0
	...
   140042798:	sub    BYTE PTR [rdi],ah
   14004279a:	add    al,0x0
   14004279c:	nop
   14004279d:	es add al,0x0
   1400427a0:	sbb    BYTE PTR [rsi],ah
   1400427a2:	add    al,0x0
   1400427a4:	push   0x426
	...
   1400427c5:	add    BYTE PTR [rax],al
   1400427c7:	add    BYTE PTR [rdx],al
   1400427c9:	add    BYTE PTR [rax],al
   1400427cb:	add    BYTE PTR [rax],al
   1400427cd:	sub    BYTE PTR [rax+rax*1],al
	...
   1400427d8:	pop    rax
   1400427d9:	out    dx,eax
   1400427da:	add    al,0x0
   1400427dc:	add    DWORD PTR [rax],eax
   1400427de:	add    BYTE PTR [rax],al
   1400427e0:	add    BYTE PTR [rax],al
   1400427e2:	add    BYTE PTR [rax],al
   1400427e4:	(bad)  
   1400427e5:	(bad)  
   1400427e6:	(bad)  
   1400427e7:	inc    DWORD PTR [rax]
   1400427e9:	add    BYTE PTR [rax],al
   1400427eb:	add    BYTE PTR [rax+0x0],al
   1400427ee:	add    BYTE PTR [rax],al
   1400427f0:	shl    BYTE PTR [rdi],0x4
	...
   1400427ff:	add    al,bl
   140042801:	(bad)  
   140042802:	add    al,0x0
   140042804:	mov    eax,0x426
	...
   140042815:	add    BYTE PTR [rax],al
   140042817:	add    BYTE PTR [rcx],al
	...
   140042821:	add    BYTE PTR [rax],al
   140042823:	add    BYTE PTR [rax],dl
   140042825:	lock add al,0x0
   140042828:	shr    BYTE PTR [rax],0x4
   14004282b:	add    BYTE PTR [rax],bl
   14004282d:	sub    BYTE PTR [rax+rax*1],al
	...
   140042840:	cmp    al,dh
   140042842:	add    al,0x0
   140042844:	add    DWORD PTR [rax],eax
   140042846:	add    BYTE PTR [rax],al
   140042848:	add    BYTE PTR [rax],al
   14004284a:	add    BYTE PTR [rax],al
   14004284c:	(bad)  
   14004284d:	(bad)  
   14004284e:	(bad)  
   14004284f:	inc    DWORD PTR [rax]
   140042851:	add    BYTE PTR [rax],al
   140042853:	add    BYTE PTR [rax+0x0],al
   140042856:	add    BYTE PTR [rax],al
   140042858:	add    BYTE PTR [rdx],ch
   14004285a:	add    al,0x0
	...
   14004286c:	add    DWORD PTR [rax],eax
   14004286e:	add    BYTE PTR [rax],al
   140042870:	add    eax,DWORD PTR [rax]
   140042872:	add    BYTE PTR [rax],al
   140042874:	fsubr  DWORD PTR [rax]
   140042876:	add    al,0x0
	...
   140042880:	sub    BYTE PTR [rax+rax*1],al
   140042884:	cmp    BYTE PTR [rdx],ah
   140042886:	add    al,0x0
	...
   140042898:	shl    al,0x4
   14004289b:	add    BYTE PTR [rax],al
   14004289d:	add    BYTE PTR [rax],al
   14004289f:	add    BYTE PTR [rax],cl
   1400428a1:	add    BYTE PTR [rax],al
   1400428a3:	add    bh,bh
   1400428a5:	(bad)  
   1400428a6:	(bad)  
   1400428a7:	inc    DWORD PTR [rax]
   1400428a9:	add    BYTE PTR [rax],al
   1400428ab:	add    BYTE PTR [rax+0x0],al
   1400428ae:	add    BYTE PTR [rax],al
   1400428b0:	fsubr  DWORD PTR [rcx]
   1400428b2:	add    al,0x0
	...
   1400428c8:	add    al,BYTE PTR [rax]
   1400428ca:	add    BYTE PTR [rax],al
   1400428cc:	shr    BYTE PTR [rcx],0x4
	...
   1400428d7:	add    BYTE PTR [rax],ah
   1400428d9:	sub    DWORD PTR [rax+rax*1],eax
   1400428dc:	cwde   
   1400428dd:	sub    BYTE PTR [rax+rax*1],al
   1400428e0:	cwde   
   1400428e1:	sub    DWORD PTR [rax+rax*1],eax
	...
   1400428f8:	shl    al,0x4
	...
   140042903:	add    bh,bh
   140042905:	(bad)  
   140042906:	(bad)  
   140042907:	inc    DWORD PTR [rax]
   140042909:	add    BYTE PTR [rax],al
   14004290b:	add    BYTE PTR [rax+0x0],al
   14004290e:	add    BYTE PTR [rax],al
   140042910:	fsubr  DWORD PTR [rcx]
   140042912:	add    al,0x0
	...
   140042920:	push   0x20004f0
   140042925:	add    BYTE PTR [rax],al
   140042927:	add    BYTE PTR [rax],al
   140042929:	add    BYTE PTR [rax],al
   14004292b:	add    bh,bh
   14004292d:	(bad)  
   14004292e:	(bad)  
   14004292f:	inc    DWORD PTR [rax]
   140042931:	add    BYTE PTR [rax],al
   140042933:	add    BYTE PTR [rax+0x0],al
   140042936:	add    BYTE PTR [rax],al
   140042938:	push   0x428
	...
   140042945:	add    BYTE PTR [rax],al
   140042947:	add    BYTE PTR [rax],dl
   140042949:	lock add al,0x0
   14004294c:	add    DWORD PTR [rax],eax
   14004294e:	add    BYTE PTR [rax],al
   140042950:	add    BYTE PTR [rax],al
   140042952:	add    BYTE PTR [rax],al
   140042954:	(bad)  
   140042955:	(bad)  
   140042956:	(bad)  
   140042957:	inc    DWORD PTR [rax]
   140042959:	add    BYTE PTR [rax],al
   14004295b:	add    BYTE PTR [rax+0x0],al
   14004295e:	add    BYTE PTR [rax],al
   140042960:	shr    BYTE PTR [rax],0x4
	...
   14004296f:	add    BYTE PTR [rcx],al
	...
   140042979:	add    BYTE PTR [rax],al
   14004297b:	add    BYTE PTR [rax],bh
   14004297d:	lock add al,0x0
   140042980:	add    BYTE PTR [rdx],ch
   140042982:	add    al,0x0
   140042984:	jo     0x1400429af
   140042986:	add    al,0x0
	...
   140042998:	mov    eax,0x4ec
   14004299d:	add    BYTE PTR [rax],al
   14004299f:	add    BYTE PTR [rax],al
   1400429a1:	add    BYTE PTR [rax],al
   1400429a3:	add    bh,bh
   1400429a5:	(bad)  
   1400429a6:	(bad)  
   1400429a7:	inc    DWORD PTR [rax]
   1400429a9:	add    BYTE PTR [rax],al
   1400429ab:	add    BYTE PTR [rbp+0x0],cl
   1400429ae:	add    BYTE PTR [rax],al
   1400429b0:	rex (bad) 
   1400429b2:	add    al,0x0
	...
   1400429c0:	sub    QWORD PTR [rax+rax*1],rax
   1400429c4:	rex and DWORD PTR [rax+rax*1],eax
	...
   1400429e0:	add    DWORD PTR [rax],eax
   1400429e2:	add    BYTE PTR [rax],al
   1400429e4:	lock sub DWORD PTR [rax+rax*1],eax
	...
   1400429f0:	clc    
   1400429f1:	sub    BYTE PTR [rax+rax*1],al
	...
   140042a08:	add    al,BYTE PTR [rax]
   140042a0a:	add    BYTE PTR [rax],al
   140042a0c:	sub    BYTE PTR [rax],0x4
	...
   140042a17:	add    BYTE PTR [rcx],al
	...
   140042a21:	add    BYTE PTR [rax],al
   140042a23:	add    BYTE PTR [rax-0x10],ch
   140042a26:	add    al,0x0
   140042a28:	push   0x18000428
   140042a2d:	sub    al,BYTE PTR [rax+rax*1]
	...
   140042a40:	call   0x141042f35
   140042a45:	add    BYTE PTR [rax],al
   140042a47:	add    BYTE PTR [rax],al
   140042a49:	add    BYTE PTR [rax],al
   140042a4b:	add    bh,bh
   140042a4d:	(bad)  
   140042a4e:	(bad)  
   140042a4f:	inc    DWORD PTR [rax]
   140042a51:	add    BYTE PTR [rax],al
   140042a53:	add    BYTE PTR [rax+0x0],al
   140042a56:	add    BYTE PTR [rax],al
   140042a58:	nop
   140042a59:	sub    al,BYTE PTR [rax+rax*1]
	...
   140042a68:	add    DWORD PTR [rax],eax
	...
   140042a72:	add    BYTE PTR [rax],al
   140042a74:	call   0xd0042f69
   140042a79:	sub    al,BYTE PTR [rax+rax*1]
   140042a7c:	push   0x42a
	...
   140042a95:	add    BYTE PTR [rax],al
   140042a97:	add    BYTE PTR [rdx],al
   140042a99:	add    BYTE PTR [rax],al
   140042a9b:	add    BYTE PTR [rax+0x42a],ch
   140042aa1:	add    BYTE PTR [rax],al
   140042aa3:	add    BYTE PTR [rax],al
   140042aa5:	add    BYTE PTR [rax],al
   140042aa7:	add    BYTE PTR [rax+0x2a],al
   140042aaa:	add    al,0x0
   140042aac:	rcr    BYTE PTR [rdi],1
   140042aae:	add    al,0x0
	...
   140042ac0:	add    DWORD PTR [rax],eax
	...
   140042aca:	add    BYTE PTR [rax],al
   140042acc:	adc    cl,dh
   140042ace:	add    al,0x0
   140042ad0:	call   0x100042eff
   140042ad5:	sub    al,BYTE PTR [rax+rax*1]
	...
   140042af0:	add    al,BYTE PTR [rax]
   140042af2:	add    BYTE PTR [rax],al
   140042af4:	add    BYTE PTR [rbx],ch
   140042af6:	add    al,0x0
	...
   140042b00:	sbb    BYTE PTR [rbx],ch
   140042b02:	add    al,0x0
   140042b04:	rcr    BYTE PTR [rdi],1
   140042b06:	add    al,0x0
	...
   140042b18:	adc    cl,dh
   140042b1a:	add    al,0x0
   140042b1c:	add    DWORD PTR [rax],eax
   140042b1e:	add    BYTE PTR [rax],al
   140042b20:	add    BYTE PTR [rax],al
   140042b22:	add    BYTE PTR [rax],al
   140042b24:	(bad)  
   140042b25:	(bad)  
   140042b26:	(bad)  
   140042b27:	inc    DWORD PTR [rax]
   140042b29:	add    BYTE PTR [rax],al
   140042b2b:	add    BYTE PTR [rax+0x0],al
   140042b2e:	add    BYTE PTR [rax],al
   140042b30:	call   0x140042f5f
	...
   140042b3d:	add    BYTE PTR [rax],al
   140042b3f:	add    BYTE PTR [rax-0xf],ch
   140042b42:	add    al,0x0
	...
   140042b4c:	(bad)  
   140042b4d:	(bad)  
   140042b4e:	(bad)  
   140042b4f:	inc    DWORD PTR [rax]
   140042b51:	add    BYTE PTR [rax],al
   140042b53:	add    BYTE PTR [rax+0x0],al
   140042b56:	add    BYTE PTR [rax],al
   140042b58:	enter  0x42b,0x0
	...
   140042b68:	loopne 0x140042b95
   140042b6a:	add    al,0x0
   140042b6c:	rex sub eax,DWORD PTR [rax+rax*1]
	...
   140042b88:	add    al,BYTE PTR [rax]
   140042b8a:	add    BYTE PTR [rax],al
   140042b8c:	cwde   
   140042b8d:	sub    eax,DWORD PTR [rax+rax*1]
	...
   140042b98:	or     BYTE PTR [rsp+rax*1],ch
   140042b9b:	add    BYTE PTR [rax+0x2b],al
   140042b9e:	add    al,0x0
	...
   140042bb8:	add    al,BYTE PTR [rax]
   140042bba:	add    BYTE PTR [rax],al
   140042bbc:	push   0x42b
	...
   140042bcd:	add    BYTE PTR [rax],al
   140042bcf:	add    BYTE PTR [rcx],al
   140042bd1:	add    BYTE PTR [rax],al
   140042bd3:	add    BYTE PTR [rax+0x42c],ch
   140042bd9:	add    BYTE PTR [rax],al
   140042bdb:	add    BYTE PTR [rax],al
   140042bdd:	add    BYTE PTR [rax],al
   140042bdf:	add    BYTE PTR [rax-0xf],al
   140042be2:	add    al,0x0
   140042be4:	add    DWORD PTR [rax],eax
   140042be6:	add    BYTE PTR [rax],al
   140042be8:	add    BYTE PTR [rax],al
   140042bea:	add    BYTE PTR [rax],al
   140042bec:	(bad)  
   140042bed:	(bad)  
   140042bee:	(bad)  
   140042bef:	inc    DWORD PTR [rax]
   140042bf1:	add    BYTE PTR [rax],al
   140042bf3:	add    BYTE PTR [rax+0x0],al
   140042bf6:	add    BYTE PTR [rax],al
   140042bf8:	mov    al,0x2b
   140042bfa:	add    al,0x0
	...
   140042c08:	nop
   140042c09:	icebp  
   140042c0a:	add    al,0x0
   140042c0c:	add    DWORD PTR [rax],eax
   140042c0e:	add    BYTE PTR [rax],al
   140042c10:	add    BYTE PTR [rax],al
   140042c12:	add    BYTE PTR [rax],al
   140042c14:	(bad)  
   140042c15:	(bad)  
   140042c16:	(bad)  
   140042c17:	inc    DWORD PTR [rax]
   140042c19:	add    BYTE PTR [rax],al
   140042c1b:	add    BYTE PTR [rax+0x0],al
   140042c1e:	add    BYTE PTR [rax],al
   140042c20:	sub    BYTE PTR [rbx],0x4
	...
   140042c2f:	add    BYTE PTR [rcx],al
	...
   140042c39:	add    BYTE PTR [rax],al
   140042c3b:	add    BYTE PTR [rax-0x7ffffb0f],dl
   140042c41:	sub    eax,DWORD PTR [rax+rax*1]
   140042c44:	xor    BYTE PTR [rsp+rax*1],ch
	...
   140042c57:	add    BYTE PTR [rcx],al
	...
   140042c61:	add    BYTE PTR [rax],al
   140042c63:	add    BYTE PTR [rax-0xf],al
   140042c66:	add    al,0x0
   140042c68:	mov    al,0x2b
   140042c6a:	add    al,0x0
   140042c6c:	pop    rax
   140042c6d:	sub    al,0x4
	...
   140042c7f:	add    BYTE PTR [rcx],al
	...
   140042c89:	add    BYTE PTR [rax],al
   140042c8b:	add    BYTE PTR [rax-0xf],ch
   140042c8e:	add    al,0x0
   140042c90:	enter  0x42b,0x0
   140042c94:	sub    BYTE PTR [rsp+rax*1],0x0
	...
   140042ca8:	rex sub eax,DWORD PTR [rax+rax*1]
	...
   140042cb8:	mov    eax,0x10004f1
   140042cbd:	add    BYTE PTR [rax],al
   140042cbf:	add    BYTE PTR [rax],al
   140042cc1:	add    BYTE PTR [rax],al
   140042cc3:	add    bh,bh
   140042cc5:	(bad)  
   140042cc6:	(bad)  
   140042cc7:	inc    DWORD PTR [rax]
   140042cc9:	add    BYTE PTR [rax],al
   140042ccb:	add    BYTE PTR [rax+0x0],al
   140042cce:	add    BYTE PTR [rax],al
   140042cd0:	loopne 0x140042cfe
   140042cd2:	add    al,0x0
	...
   140042ce8:	add    al,BYTE PTR [rax]
   140042cea:	add    BYTE PTR [rax],al
   140042cec:	clc    
   140042ced:	sub    al,0x4
	...
   140042cf7:	add    BYTE PTR [rax+0x5800042c],bh
   140042cfd:	(bad)  
   140042cfe:	add    al,0x0
	...
   140042d10:	add    DWORD PTR [rax],eax
	...
   140042d1a:	add    BYTE PTR [rax],al
   140042d1c:	mov    eax,0xe00004f1
   140042d21:	sub    al,0x4
   140042d23:	add    BYTE PTR [rax],dl
   140042d25:	sub    eax,0x4
	...
   140042d3e:	add    BYTE PTR [rax],al
   140042d40:	add    DWORD PTR [rax],eax
   140042d42:	add    BYTE PTR [rax],al
   140042d44:	push   rax
   140042d45:	sub    eax,0x4
   140042d4a:	add    BYTE PTR [rax],al
   140042d4c:	add    BYTE PTR [rax],al
   140042d4e:	add    BYTE PTR [rax],al
   140042d50:	mov    BYTE PTR [rip+0x4],ch        # 0x140042d5a
	...
   140042d5e:	add    BYTE PTR [rax],al
   140042d60:	add    DWORD PTR [rax],eax
	...
   140042d6a:	add    BYTE PTR [rax],al
   140042d6c:	loopne 0x140042d5f
   140042d6e:	add    al,0x0
   140042d70:	cmp    BYTE PTR [rip+0x2d600004],ch        # 0x16d642d7a
   140042d76:	add    al,0x0
	...
   140042d88:	loopne 0x140042d7b
   140042d8a:	add    al,0x0
	...
   140042d94:	(bad)  
   140042d95:	(bad)  
   140042d96:	(bad)  
   140042d97:	inc    DWORD PTR [rax]
   140042d99:	add    BYTE PTR [rax],al
   140042d9b:	add    BYTE PTR [rax+0x0],al
   140042d9e:	add    BYTE PTR [rax],al
   140042da0:	cmp    BYTE PTR [rip+0x4],ch        # 0x140042daa
	...
   140042dae:	add    BYTE PTR [rax],al
   140042db0:	add    DWORD PTR [rax],eax
	...
   140042dba:	add    BYTE PTR [rax],al
   140042dbc:	push   rax
   140042dbd:	repnz add al,0x0
   140042dc0:	fsubr  DWORD PTR [rip+0x2db00004]        # 0x16db42dca
   140042dc6:	add    al,0x0
	...
   140042de0:	add    al,BYTE PTR [rax]
   140042de2:	add    BYTE PTR [rax],al
   140042de4:	xor    BYTE PTR [rsi],ch
   140042de6:	add    al,0x0
	...
   140042df0:	push   rax
   140042df1:	repnz add al,0x0
   140042df4:	add    DWORD PTR [rax],eax
   140042df6:	add    BYTE PTR [rax],al
   140042df8:	add    BYTE PTR [rax],al
   140042dfa:	add    BYTE PTR [rax],al
   140042dfc:	(bad)  
   140042dfd:	(bad)  
   140042dfe:	(bad)  
   140042dff:	inc    DWORD PTR [rax]
   140042e01:	add    BYTE PTR [rax],al
   140042e03:	add    BYTE PTR [rax+0x0],al
   140042e06:	add    BYTE PTR [rax],al
   140042e08:	fsubr  DWORD PTR [rip+0x4]        # 0x140042e12
	...
   140042e1e:	add    BYTE PTR [rax],al
   140042e20:	add    al,BYTE PTR [rax]
   140042e22:	add    BYTE PTR [rax],al
   140042e24:	shr    BYTE PTR [rsi],0x4
	...
   140042e2f:	add    al,dh
   140042e31:	sub    eax,0x2ed80004
   140042e36:	add    al,0x0
	...
   140042e48:	or     dl,dh
   140042e4a:	add    al,0x0
   140042e4c:	add    DWORD PTR [rax],eax
   140042e4e:	add    BYTE PTR [rax],al
   140042e50:	add    BYTE PTR [rax],al
   140042e52:	add    BYTE PTR [rax],al
   140042e54:	(bad)  
   140042e55:	(bad)  
   140042e56:	(bad)  
   140042e57:	inc    DWORD PTR [rax]
   140042e59:	add    BYTE PTR [rax],al
   140042e5b:	add    BYTE PTR [rax+0x0],al
   140042e5e:	add    BYTE PTR [rax],al
   140042e60:	sbb    BYTE PTR [rsi],ch
   140042e62:	add    al,0x0
	...
   140042e78:	add    DWORD PTR [rax],eax
   140042e7a:	add    BYTE PTR [rax],al
   140042e7c:	mov    BYTE PTR [rsi],ch
   140042e7e:	add    al,0x0
	...
   140042e88:	fsubr  DWORD PTR [rsi]
   140042e8a:	add    al,0x0
	...
   140042e98:	add    DWORD PTR [rax],eax
	...
   140042ea2:	add    BYTE PTR [rax],al
   140042ea4:	or     dl,dh
   140042ea6:	add    al,0x0
   140042ea8:	sbb    BYTE PTR [rsi],ch
   140042eaa:	add    al,0x0
   140042eac:	cwde   
   140042ead:	cs add al,0x0
	...
   140042ec0:	rex.W
   140042ec1:	cs add al,0x0
   140042ec4:	fsubr  DWORD PTR [rsi]
   140042ec6:	add    al,0x0
	...
   140042ed8:	sub    dl,dh
   140042eda:	add    al,0x0
	...
   140042ee4:	(bad)  
   140042ee5:	(bad)  
   140042ee6:	(bad)  
   140042ee7:	inc    DWORD PTR [rax]
   140042ee9:	add    BYTE PTR [rax],al
   140042eeb:	add    BYTE PTR [rax+0x0],al
   140042eee:	add    BYTE PTR [rax],al
   140042ef0:	jo     0x140042f20
   140042ef2:	add    al,0x0
	...
   140042f00:	add    DWORD PTR [rax],eax
	...
   140042f0a:	add    BYTE PTR [rax],al
   140042f0c:	sub    dl,dh
   140042f0e:	add    al,0x0
   140042f10:	jo     0x140042f40
   140042f12:	add    al,0x0
   140042f14:	add    BYTE PTR [rdi],ch
   140042f16:	add    al,0x0
	...
   140042f28:	mov    dl,dh
   140042f2a:	add    al,0x0
   140042f2c:	add    al,BYTE PTR [rax]
   140042f2e:	add    BYTE PTR [rax],al
   140042f30:	add    BYTE PTR [rax],al
   140042f32:	add    BYTE PTR [rax],al
   140042f34:	(bad)  
   140042f35:	(bad)  
   140042f36:	(bad)  
   140042f37:	inc    DWORD PTR [rax]
   140042f39:	add    BYTE PTR [rax],al
   140042f3b:	add    BYTE PTR [rax+0x0],al
   140042f3e:	add    BYTE PTR [rax],al
   140042f40:	cwde   
   140042f41:	(bad)  
   140042f42:	add    al,0x0
	...
   140042f50:	add    DWORD PTR [rax],eax
	...
   140042f5a:	add    BYTE PTR [rax],al
   140042f5c:	mov    dl,dh
   140042f5e:	add    al,0x0
   140042f60:	cwde   
   140042f61:	(bad)  
   140042f62:	add    al,0x0
   140042f64:	push   rax
   140042f65:	(bad)  
   140042f66:	add    al,0x0
	...
   140042f78:	sub    BYTE PTR [rdi],ch
   140042f7a:	add    al,0x0
   140042f7c:	cmp    BYTE PTR [rax],ah
   140042f7e:	add    al,0x0
   140042f80:	rcr    BYTE PTR [rdi],1
   140042f82:	add    al,0x0
	...
   140042fa0:	add    eax,DWORD PTR [rax]
   140042fa2:	add    BYTE PTR [rax],al
   140042fa4:	js     0x140042fd5
   140042fa6:	add    al,0x0
	...
   140042fb0:	add    DWORD PTR [rax],eax
	...
   140042fba:	add    BYTE PTR [rax],al
   140042fbc:	mov    bh,ch
   140042fbe:	add    al,0x0
   140042fc0:	adc    BYTE PTR [rdi],ah
   140042fc2:	add    al,0x0
   140042fc4:	mov    al,0x2f
   140042fc6:	add    al,0x0
	...
   140042fd8:	add    DWORD PTR [rax],eax
	...
   140042fe2:	add    BYTE PTR [rax],al
   140042fe4:	shl    dl,1
   140042fe6:	add    al,0x0
   140042fe8:	xor    BYTE PTR [rax+rax*1],al
   140042fec:	fsubr  DWORD PTR [rdi]
   140042fee:	add    al,0x0
	...
   140043000:	sbb    BYTE PTR [rax],dh
   140043002:	add    al,0x0
   140043004:	rex and DWORD PTR [rax+rax*1],eax
	...
   140043018:	shl    dl,1
   14004301a:	add    al,0x0
   14004301c:	add    DWORD PTR [rax],eax
   14004301e:	add    BYTE PTR [rax],al
   140043020:	add    BYTE PTR [rax],al
   140043022:	add    BYTE PTR [rax],al
   140043024:	(bad)  
   140043025:	(bad)  
   140043026:	(bad)  
   140043027:	inc    DWORD PTR [rax]
   140043029:	add    BYTE PTR [rax],al
   14004302b:	add    BYTE PTR [rax+0x0],al
   14004302e:	add    BYTE PTR [rax],al
   140043030:	xor    BYTE PTR [rax+rax*1],al
	...
   140043048:	add    al,BYTE PTR [rax]
   14004304a:	add    BYTE PTR [rax],al
   14004304c:	add    BYTE PTR [rax],dh
   14004304e:	add    al,0x0
	...
   140043058:	add    bl,dh
   14004305a:	add    al,0x0
   14004305c:	add    al,BYTE PTR [rax]
   14004305e:	add    BYTE PTR [rax],al
   140043060:	add    BYTE PTR [rax],al
   140043062:	add    BYTE PTR [rax],al
   140043064:	(bad)  
   140043065:	(bad)  
   140043066:	(bad)  
   140043067:	inc    DWORD PTR [rax]
   140043069:	add    BYTE PTR [rax],al
   14004306b:	add    BYTE PTR [rax+0x0],al
   14004306e:	add    BYTE PTR [rax],al
   140043070:	xor    BYTE PTR [rax],0x4
	...
   140043087:	add    BYTE PTR [rbx],al
   140043089:	add    BYTE PTR [rax],al
   14004308b:	add    al,al
   14004308d:	xor    BYTE PTR [rax+rax*1],al
	...
   140043098:	add    DWORD PTR [rax],eax
	...
   1400430a2:	add    BYTE PTR [rax],al
   1400430a4:	add    bl,dh
   1400430a6:	add    al,0x0
   1400430a8:	xor    BYTE PTR [rax],0x4
   1400430ab:	add    BYTE PTR [rax+0x430],bl
	...
   1400430bd:	add    BYTE PTR [rax],al
   1400430bf:	add    BYTE PTR [rax+0x30],bl
   1400430c2:	add    al,0x0
   1400430c4:	cmp    BYTE PTR [rax],ah
   1400430c6:	add    al,0x0
   1400430c8:	rcr    BYTE PTR [rdi],1
   1400430ca:	add    al,0x0
	...
   1400430e8:	add    al,BYTE PTR [rax]
   1400430ea:	add    BYTE PTR [rax],al
   1400430ec:	jo     0x14004311f
   1400430ee:	add    al,0x0
	...
   1400430f8:	and    bl,dh
   1400430fa:	add    al,0x0
   1400430fc:	add    DWORD PTR [rax],eax
   1400430fe:	add    BYTE PTR [rax],al
   140043100:	add    BYTE PTR [rax],al
   140043102:	add    BYTE PTR [rax],al
   140043104:	(bad)  
   140043105:	(bad)  
   140043106:	(bad)  
   140043107:	inc    DWORD PTR [rax]
   140043109:	add    BYTE PTR [rax],al
   14004310b:	add    BYTE PTR [rax+0x0],al
   14004310e:	add    BYTE PTR [rax],al
   140043110:	loopne 0x140043142
   140043112:	add    al,0x0
	...
   140043120:	loopne 0x14004310e
   140043122:	add    al,0x0
	...
   14004312c:	(bad)  
   14004312d:	(bad)  
   14004312e:	(bad)  
   14004312f:	inc    DWORD PTR [rax]
   140043131:	add    BYTE PTR [rax],al
   140043133:	add    BYTE PTR [rbp+0x0],cl
   140043136:	add    BYTE PTR [rax],al
   140043138:	sub    BYTE PTR [rdi],bl
   14004313a:	add    al,0x0
	...
   140043148:	add    DWORD PTR [rax],eax
	...
   140043152:	add    BYTE PTR [rax],al
   140043154:	and    bl,dh
   140043156:	add    al,0x0
   140043158:	loopne 0x14004318a
   14004315a:	add    al,0x0
   14004315c:	xor    QWORD PTR [rax+rax*1],rax
	...
   140043170:	clc    
   140043171:	xor    BYTE PTR [rax+rax*1],al
   140043174:	and    BYTE PTR [rcx],dh
   140043176:	add    al,0x0
	...
   140043190:	add    al,BYTE PTR [rax]
   140043192:	add    BYTE PTR [rax],al
   140043194:	sbb    BYTE PTR [rdx],dh
   140043196:	add    al,0x0
	...
   1400431a0:	add    DWORD PTR [rax],eax
	...
   1400431aa:	add    BYTE PTR [rax],al
   1400431ac:	push   0x400004f3
   1400431b1:	xor    al,BYTE PTR [rax+rax*1]
   1400431b4:	movabs al,ds:0x431
	...
   1400431c5:	add    BYTE PTR [rax],al
   1400431c7:	add    BYTE PTR [rax-0xd],ch
   1400431ca:	add    al,0x0
	...
   1400431d4:	(bad)  
   1400431d5:	(bad)  
   1400431d6:	(bad)  
   1400431d7:	inc    DWORD PTR [rax]
   1400431d9:	add    BYTE PTR [rax],al
   1400431db:	add    BYTE PTR [rax+0x0],al
   1400431de:	add    BYTE PTR [rax],al
   1400431e0:	xor    al,BYTE PTR [rax+rax*1]
	...
   1400431f0:	add    DWORD PTR [rax],eax
	...
   1400431fa:	add    BYTE PTR [rax],al
   1400431fc:	nop
   1400431fd:	repz add al,0x0
   140043200:	mov    BYTE PTR [rcx],dh
   140043202:	add    al,0x0
   140043204:	lock xor DWORD PTR [rax+rax*1],eax
	...
   140043218:	pop    rax
   140043219:	xor    al,BYTE PTR [rax+rax*1]
   14004321c:	enter  0x431,0x0
	...
   140043230:	enter  0x431,0x0
	...
   140043248:	add    DWORD PTR [rax],eax
   14004324a:	add    BYTE PTR [rax],al
   14004324c:	xor    BYTE PTR [rdx],dh
   14004324e:	add    al,0x0
	...
   140043258:	nop
   140043259:	repz add al,0x0
   14004325c:	add    DWORD PTR [rax],eax
   14004325e:	add    BYTE PTR [rax],al
   140043260:	add    BYTE PTR [rax],al
   140043262:	add    BYTE PTR [rax],al
   140043264:	(bad)  
   140043265:	(bad)  
   140043266:	(bad)  
   140043267:	inc    DWORD PTR [rax]
   140043269:	add    BYTE PTR [rax],al
   14004326b:	add    BYTE PTR [rax+0x0],al
   14004326e:	add    BYTE PTR [rax],al
   140043270:	mov    BYTE PTR [rcx],dh
   140043272:	add    al,0x0
	...
   140043280:	call   0x141043778
   140043285:	add    BYTE PTR [rax],al
   140043287:	add    BYTE PTR [rax],al
   140043289:	add    BYTE PTR [rax],al
   14004328b:	add    bh,bh
   14004328d:	(bad)  
   14004328e:	(bad)  
   14004328f:	inc    DWORD PTR [rax]
   140043291:	add    BYTE PTR [rax],al
   140043293:	add    BYTE PTR [rax+0x0],al
   140043296:	add    BYTE PTR [rax],al
   140043298:	sub    BYTE PTR [rbx],dh
   14004329a:	add    al,0x0
	...
   1400432a8:	mov    eax,0x20004f3
   1400432ad:	add    BYTE PTR [rax],al
   1400432af:	add    BYTE PTR [rax],al
   1400432b1:	add    BYTE PTR [rax],al
   1400432b3:	add    bh,bh
   1400432b5:	(bad)  
   1400432b6:	(bad)  
   1400432b7:	inc    DWORD PTR [rax]
   1400432b9:	add    BYTE PTR [rax],al
   1400432bb:	add    BYTE PTR [rax+0x0],al
   1400432be:	add    BYTE PTR [rax],al
   1400432c0:	call   0x1400436f7
	...
   1400432cd:	add    BYTE PTR [rax],al
   1400432cf:	add    BYTE PTR [rax-0x47fffbce],al
   1400432d5:	es add al,0x0
	...
   1400432f0:	add    eax,DWORD PTR [rax]
   1400432f2:	add    BYTE PTR [rax],al
   1400432f4:	rex xor eax,DWORD PTR [rax+rax*1]
	...
   140043300:	add    DWORD PTR [rax],eax
	...
   14004330a:	add    BYTE PTR [rax],al
   14004330c:	mov    eax,0xe80004f3
   140043311:	xor    al,BYTE PTR [rax+rax*1]
   140043314:	add    BYTE PTR [rbx],dh
   140043316:	add    al,0x0
	...
   140043330:	add    al,BYTE PTR [rax]
   140043332:	add    BYTE PTR [rax],al
   140043334:	shl    BYTE PTR [rdx],1
   140043336:	add    al,0x0
	...
   140043340:	test   al,0x32
   140043342:	add    al,0x0
   140043344:	xor    BYTE PTR [rdx],0x4
   140043347:	add    BYTE PTR [rax+0x426],bh
	...
   14004335d:	add    BYTE PTR [rax],al
   14004335f:	add    BYTE PTR [rax],dh
   140043361:	hlt    
   140043362:	add    al,0x0
   140043364:	add    al,BYTE PTR [rax]
   140043366:	add    BYTE PTR [rax],al
   140043368:	add    BYTE PTR [rax],al
   14004336a:	add    BYTE PTR [rax],al
   14004336c:	(bad)  
   14004336d:	(bad)  
   14004336e:	(bad)  
   14004336f:	inc    DWORD PTR [rax]
   140043371:	add    BYTE PTR [rax],al
   140043373:	add    BYTE PTR [rax+0x0],al
   140043376:	add    BYTE PTR [rax],al
   140043378:	fdiv   DWORD PTR [rbx]
   14004337a:	add    al,0x0
	...
   140043388:	add    DWORD PTR [rax],eax
	...
   140043392:	add    BYTE PTR [rax],al
   140043394:	adc    ah,dh
   140043396:	add    al,0x0
   140043398:	lock xor eax,DWORD PTR [rax+rax*1]
   14004339c:	mov    BYTE PTR [rbx],dh
   14004339e:	add    al,0x0
	...
   1400433b0:	(bad)  
   1400433b1:	hlt    
   1400433b2:	add    al,0x0
   1400433b4:	add    DWORD PTR [rax],eax
   1400433b6:	add    BYTE PTR [rax],al
   1400433b8:	add    BYTE PTR [rax],al
   1400433ba:	add    BYTE PTR [rax],al
   1400433bc:	(bad)  
   1400433bd:	(bad)  
   1400433be:	(bad)  
   1400433bf:	inc    DWORD PTR [rax]
   1400433c1:	add    BYTE PTR [rax],al
   1400433c3:	add    BYTE PTR [rax+0x0],al
   1400433c6:	add    BYTE PTR [rax],al
   1400433c8:	js     0x1400433fe
   1400433ca:	add    al,0x0
	...
   1400433e0:	add    eax,DWORD PTR [rax]
   1400433e2:	add    BYTE PTR [rax],al
   1400433e4:	pop    rax
   1400433e5:	xor    al,0x4
	...
   1400433f7:	add    BYTE PTR [rax+rax*1],al
   1400433fa:	add    BYTE PTR [rax],al
   1400433fc:	xor    BYTE PTR [rsp+rax*1],dh
	...
   140043407:	add    BYTE PTR [rax],dl
   140043409:	hlt    
   14004340a:	add    al,0x0
   14004340c:	add    eax,DWORD PTR [rax]
   14004340e:	add    BYTE PTR [rax],al
   140043410:	add    BYTE PTR [rax],al
   140043412:	add    BYTE PTR [rax],al
   140043414:	(bad)  
   140043415:	(bad)  
   140043416:	(bad)  
   140043417:	inc    DWORD PTR [rax]
   140043419:	add    BYTE PTR [rax],al
   14004341b:	add    BYTE PTR [rax+0x0],al
   14004341e:	add    BYTE PTR [rax],al
   140043420:	lock xor eax,DWORD PTR [rax+rax*1]
	...
   140043430:	or     BYTE PTR [rsp+rax*1],dh
   140043433:	add    BYTE PTR [rax+0x33],ah
   140043436:	add    al,0x0
   140043438:	mov    al,0x33
   14004343a:	add    al,0x0
   14004343c:	mov    eax,0x426
	...
   140043455:	add    BYTE PTR [rax],al
   140043457:	add    BYTE PTR [rax+0x33],ah
   14004345a:	add    al,0x0
   14004345c:	mov    al,0x33
   14004345e:	add    al,0x0
   140043460:	mov    eax,0x426
	...
   14004347d:	add    BYTE PTR [rax],al
   14004347f:	add    BYTE PTR [rdx],al
   140043481:	add    BYTE PTR [rax],al
   140043483:	add    BYTE PTR [rax+0x434],dl
   140043489:	add    BYTE PTR [rax],al
   14004348b:	add    BYTE PTR [rax],al
   14004348d:	add    BYTE PTR [rax],al
   14004348f:	add    BYTE PTR [rax-0x47fffbcd],dh
   140043495:	es add al,0x0
	...
   1400434a8:	add    DWORD PTR [rax],eax
	...
   1400434b2:	add    BYTE PTR [rax],al
   1400434b4:	xor    ah,dh
   1400434b6:	add    al,0x0
   1400434b8:	fdiv   DWORD PTR [rbx]
   1400434ba:	add    al,0x0
   1400434bc:	test   al,0x34
   1400434be:	add    al,0x0
	...
   1400434d0:	add    DWORD PTR [rax],eax
	...
   1400434da:	add    BYTE PTR [rax],al
   1400434dc:	nop
   1400434dd:	hlt    
   1400434de:	add    al,0x0
   1400434e0:	clc    
   1400434e1:	xor    al,0x4
   1400434e3:	add    al,dl
   1400434e5:	xor    al,0x4
	...
   1400434ff:	add    BYTE PTR [rcx],al
   140043501:	add    BYTE PTR [rax],al
   140043503:	add    BYTE PTR [rax],dl
   140043505:	xor    eax,0x4
   14004350a:	add    BYTE PTR [rax],al
   14004350c:	add    BYTE PTR [rax],al
   14004350e:	add    BYTE PTR [rax],al
   140043510:	and    BYTE PTR [rip+0x4],dh        # 0x14004351a
	...
   14004351e:	add    BYTE PTR [rax],al
   140043520:	nop
   140043521:	hlt    
   140043522:	add    al,0x0
	...
   14004352c:	(bad)  
   14004352d:	(bad)  
   14004352e:	(bad)  
   14004352f:	inc    DWORD PTR [rax]
   140043531:	add    BYTE PTR [rax],al
   140043533:	add    BYTE PTR [rax+0x0],al
   140043536:	add    BYTE PTR [rax],al
   140043538:	clc    
   140043539:	xor    al,0x4
	...
   140043547:	add    BYTE PTR [rax+0x35],ah
   14004354a:	add    al,0x0
   14004354c:	rex and DWORD PTR [rax+rax*1],eax
	...
   140043560:	mov    eax,0x10004f4
   140043565:	add    BYTE PTR [rax],al
   140043567:	add    BYTE PTR [rax],al
   140043569:	add    BYTE PTR [rax],al
   14004356b:	add    bh,bh
   14004356d:	(bad)  
   14004356e:	(bad)  
   14004356f:	inc    DWORD PTR [rax]
   140043571:	add    BYTE PTR [rax],al
   140043573:	add    BYTE PTR [rax+0x0],al
   140043576:	add    BYTE PTR [rax],al
   140043578:	mov    BYTE PTR [rip+0x4],dh        # 0x140043582
	...
   14004358e:	add    BYTE PTR [rax],al
   140043590:	add    al,BYTE PTR [rax]
   140043592:	add    BYTE PTR [rax],al
   140043594:	xor    rax,0x4
   14004359a:	add    BYTE PTR [rax],al
   14004359c:	add    BYTE PTR [rax],al
   14004359e:	add    BYTE PTR [rax],al
   1400435a0:	add    DWORD PTR [rax],eax
	...
   1400435aa:	add    BYTE PTR [rax],al
   1400435ac:	mov    eax,0x880004f4
   1400435b1:	xor    eax,0x35a00004
   1400435b6:	add    al,0x0
	...
   1400435c8:	add    DWORD PTR [rax],eax
	...
   1400435d2:	add    BYTE PTR [rax],al
   1400435d4:	call   0x170043acd
   1400435d9:	ss add al,0x0
   1400435dc:	enter  0x435,0x0
	...
   1400435f0:	call   0x141043ae9
   1400435f5:	add    BYTE PTR [rax],al
   1400435f7:	add    BYTE PTR [rax],al
   1400435f9:	add    BYTE PTR [rax],al
   1400435fb:	add    bh,bh
   1400435fd:	(bad)  
   1400435fe:	(bad)  
   1400435ff:	inc    DWORD PTR [rax]
   140043601:	add    BYTE PTR [rax],al
   140043603:	add    BYTE PTR [rax+0x0],al
   140043606:	add    BYTE PTR [rax],al
   140043608:	xor    BYTE PTR [rsi],dh
   14004360a:	add    al,0x0
	...
   140043618:	lock xor eax,0x1fd00004
   14004361e:	add    al,0x0
	...
   140043638:	add    al,BYTE PTR [rax]
   14004363a:	add    BYTE PTR [rax],al
   14004363c:	sbb    BYTE PTR [rsi],dh
   14004363e:	add    al,0x0
	...
   140043650:	add    al,BYTE PTR [rax]
   140043652:	add    BYTE PTR [rax],al
   140043654:	(bad)  
   140043655:	ss add al,0x0
	...
   140043660:	js     0x140043698
   140043662:	add    al,0x0
   140043664:	rcr    BYTE PTR [rdi],1
   140043666:	add    al,0x0
	...
   140043678:	sbb    ch,dh
   14004367a:	add    al,0x0
   14004367c:	add    DWORD PTR [rax],eax
   14004367e:	add    BYTE PTR [rax],al
   140043680:	add    BYTE PTR [rax],al
   140043682:	add    BYTE PTR [rax],al
   140043684:	(bad)  
   140043685:	(bad)  
   140043686:	(bad)  
   140043687:	inc    DWORD PTR [rax]
   140043689:	add    BYTE PTR [rax],al
   14004368b:	add    BYTE PTR [rax+0x0],al
   14004368e:	add    BYTE PTR [rax],al
   140043690:	rex.W
   140043691:	ss add al,0x0
	...
   1400436a0:	add    DWORD PTR [rax],eax
	...
   1400436aa:	add    BYTE PTR [rax],al
   1400436ac:	sbb    ch,dh
   1400436ae:	add    al,0x0
   1400436b0:	rex.W
   1400436b1:	ss add al,0x0
   1400436b4:	movabs al,ds:0x436
	...
   1400436cd:	add    BYTE PTR [rax],al
   1400436cf:	add    BYTE PTR [rbx],al
   1400436d1:	add    BYTE PTR [rax],al
   1400436d3:	add    BYTE PTR [rax],cl
   1400436d5:	(bad)  
   1400436d6:	add    al,0x0
	...
   1400436e0:	add    DWORD PTR [rax],eax
	...
   1400436ea:	add    BYTE PTR [rax],al
   1400436ec:	push   0xffffffffc80004f5
   1400436f1:	ss add al,0x0
   1400436f4:	loopne 0x14004372c
   1400436f6:	add    al,0x0
	...
   140043708:	sub    BYTE PTR [rdi],dh
   14004370a:	add    al,0x0
   14004370c:	push   rax
   14004370d:	(bad)  
   14004370e:	add    al,0x0
   140043710:	rcr    BYTE PTR [rdi],1
   140043712:	add    al,0x0
	...
   140043728:	push   0x20004f5
   14004372d:	add    BYTE PTR [rax],al
   14004372f:	add    BYTE PTR [rax],al
   140043731:	add    BYTE PTR [rax],al
   140043733:	add    bh,bh
   140043735:	(bad)  
   140043736:	(bad)  
   140043737:	inc    DWORD PTR [rax]
   140043739:	add    BYTE PTR [rax],al
   14004373b:	add    BYTE PTR [rax+0x0],al
   14004373e:	add    BYTE PTR [rax],al
   140043740:	enter  0x436,0x0
	...
   140043750:	rex cmc 
   140043752:	add    al,0x0
   140043754:	add    DWORD PTR [rax],eax
   140043756:	add    BYTE PTR [rax],al
   140043758:	add    BYTE PTR [rax],al
   14004375a:	add    BYTE PTR [rax],al
   14004375c:	(bad)  
   14004375d:	(bad)  
   14004375e:	(bad)  
   14004375f:	inc    DWORD PTR [rax]
   140043761:	add    BYTE PTR [rax],al
   140043763:	add    BYTE PTR [rax+0x0],al
   140043766:	add    BYTE PTR [rax],al
   140043768:	js     0x1400437a1
   14004376a:	add    al,0x0
	...
   140043780:	add    al,BYTE PTR [rax]
   140043782:	add    BYTE PTR [rax],al
   140043784:	nop
   140043785:	(bad)  
   140043786:	add    al,0x0
	...
   140043790:	push   rax
   140043791:	(bad)  
   140043792:	add    al,0x0
   140043794:	rcr    BYTE PTR [rdi],1
   140043796:	add    al,0x0
	...
   1400437a8:	add    BYTE PTR [rax],bh
   1400437aa:	add    al,0x0
   1400437ac:	rcr    BYTE PTR [rdi],1
   1400437ae:	add    al,0x0
	...
   1400437c8:	add    al,BYTE PTR [rax]
   1400437ca:	add    BYTE PTR [rax],al
   1400437cc:	test   al,0x37
   1400437ce:	add    al,0x0
	...
   1400437d8:	add    DWORD PTR [rax],eax
	...
   1400437e2:	add    BYTE PTR [rax],al
   1400437e4:	nop
   1400437e5:	cmc    
   1400437e6:	add    al,0x0
   1400437e8:	shl    BYTE PTR [rdi],0x4
   1400437eb:	add    al,bl
   1400437ed:	(bad)  
   1400437ee:	add    al,0x0
	...
   140043800:	nop
   140043801:	cmc    
   140043802:	add    al,0x0
   140043804:	add    DWORD PTR [rax],eax
   140043806:	add    BYTE PTR [rax],al
   140043808:	add    BYTE PTR [rax],al
   14004380a:	add    BYTE PTR [rax],al
   14004380c:	(bad)  
   14004380d:	(bad)  
   14004380e:	(bad)  
   14004380f:	inc    DWORD PTR [rax]
   140043811:	add    BYTE PTR [rax],al
   140043813:	add    BYTE PTR [rax+0x0],al
   140043816:	add    BYTE PTR [rax],al
   140043818:	shl    BYTE PTR [rdi],0x4
	...
   140043827:	add    BYTE PTR [rax+0x38],bl
   14004382a:	add    al,0x0
   14004382c:	rcr    BYTE PTR [rdi],1
   14004382e:	add    al,0x0
	...
   140043848:	add    al,BYTE PTR [rax]
   14004384a:	add    BYTE PTR [rax],al
   14004384c:	sub    BYTE PTR [rax],bh
   14004384e:	add    al,0x0
	...
   140043858:	call   0x141043d52
   14004385d:	add    BYTE PTR [rax],al
   14004385f:	add    BYTE PTR [rax],al
   140043861:	add    BYTE PTR [rax],al
   140043863:	add    bh,bh
   140043865:	(bad)  
   140043866:	(bad)  
   140043867:	inc    DWORD PTR [rax]
   140043869:	add    BYTE PTR [rax],al
   14004386b:	add    BYTE PTR [rax+0x0],al
   14004386e:	add    BYTE PTR [rax],al
   140043870:	cmp    BYTE PTR [rax+rax*1],al
	...
   140043880:	add    DWORD PTR [rax],eax
	...
   14004388a:	add    BYTE PTR [rax],al
   14004388c:	call   0x180043d86
   140043891:	cmp    BYTE PTR [rax+rax*1],al
   140043894:	cmp    BYTE PTR [rax],0x4
	...
   1400438a7:	add    al,al
   1400438a9:	cmp    BYTE PTR [rax+rax*1],al
   1400438ac:	rcr    BYTE PTR [rdi],1
   1400438ae:	add    al,0x0
	...
   1400438c0:	adc    dh,dh
   1400438c2:	add    al,0x0
   1400438c4:	add    DWORD PTR [rax],eax
   1400438c6:	add    BYTE PTR [rax],al
   1400438c8:	add    BYTE PTR [rax],al
   1400438ca:	add    BYTE PTR [rax],al
   1400438cc:	(bad)  
   1400438cd:	(bad)  
   1400438ce:	(bad)  
   1400438cf:	inc    DWORD PTR [rax]
   1400438d1:	add    BYTE PTR [rax],al
   1400438d3:	add    BYTE PTR [rax+0x0],al
   1400438d6:	add    BYTE PTR [rax],al
   1400438d8:	call   0x140043d15
	...
   1400438ed:	add    BYTE PTR [rax],al
   1400438ef:	add    BYTE PTR [rdx],al
   1400438f1:	add    BYTE PTR [rax],al
   1400438f3:	add    BYTE PTR [rax+0x438],ch
   1400438f9:	add    BYTE PTR [rax],al
   1400438fb:	add    BYTE PTR [rax],al
   1400438fd:	add    BYTE PTR [rax],al
   1400438ff:	add    BYTE PTR [rcx],al
	...
   140043909:	add    BYTE PTR [rax],al
   14004390b:	add    BYTE PTR [rax],dl
   14004390d:	test   BYTE PTR [rax+rax*1],0xe8
   140043911:	cmp    BYTE PTR [rax+rax*1],al
   140043914:	add    BYTE PTR [rcx],bh
   140043916:	add    al,0x0
	...
   140043928:	add    DWORD PTR [rax],eax
	...
   140043932:	add    BYTE PTR [rax],al
   140043934:	rex cmc 
   140043936:	add    al,0x0
   140043938:	js     0x140043971
   14004393a:	add    al,0x0
   14004393c:	sub    BYTE PTR [rcx],bh
   14004393e:	add    al,0x0
	...
   140043950:	add    DWORD PTR [rax],eax
	...
   14004395a:	add    BYTE PTR [rax],al
   14004395c:	rex test BYTE PTR [rax+rax*1],0xa0
   140043961:	cmp    DWORD PTR [rax+rax*1],eax
   140043964:	push   rax
   140043965:	cmp    DWORD PTR [rax+rax*1],eax
	...
   140043978:	rex test BYTE PTR [rax+rax*1],0x1
   14004397d:	add    BYTE PTR [rax],al
   14004397f:	add    BYTE PTR [rax],al
   140043981:	add    BYTE PTR [rax],al
   140043983:	add    bh,bh
   140043985:	(bad)  
   140043986:	(bad)  
   140043987:	inc    DWORD PTR [rax]
   140043989:	add    BYTE PTR [rax],al
   14004398b:	add    BYTE PTR [rax+0x0],al
   14004398e:	add    BYTE PTR [rax],al
   140043990:	movabs al,ds:0x439
	...
   1400439a5:	add    BYTE PTR [rax],al
   1400439a7:	add    BYTE PTR [rdx],al
   1400439a9:	add    BYTE PTR [rax],al
   1400439ab:	add    BYTE PTR [rax+0x439],bh
   1400439b1:	add    BYTE PTR [rax],al
   1400439b3:	add    BYTE PTR [rax],al
   1400439b5:	add    BYTE PTR [rax],al
   1400439b7:	add    BYTE PTR [rax+0x39],bh
   1400439ba:	add    al,0x0
   1400439bc:	rcr    BYTE PTR [rdi],1
   1400439be:	add    al,0x0
	...
   1400439d0:	call   0x110043e0e
   1400439d5:	(bad)  
   1400439d6:	add    al,0x0
	...
   1400439e8:	cwde   
   1400439e9:	test   BYTE PTR [rax+rax*1],0x1
   1400439ed:	add    BYTE PTR [rax],al
   1400439ef:	add    BYTE PTR [rax],al
   1400439f1:	add    BYTE PTR [rax],al
   1400439f3:	add    bh,bh
   1400439f5:	(bad)  
   1400439f6:	(bad)  
   1400439f7:	inc    DWORD PTR [rax]
   1400439f9:	add    BYTE PTR [rax],al
   1400439fb:	add    BYTE PTR [rax+0x0],al
   1400439fe:	add    BYTE PTR [rax],al
   140043a00:	cmp    BYTE PTR [rdx],bh
   140043a02:	add    al,0x0
	...
   140043a10:	add    DWORD PTR [rax],eax
	...
   140043a1a:	add    BYTE PTR [rax],al
   140043a1c:	cwde   
   140043a1d:	test   BYTE PTR [rax+rax*1],0x38
   140043a21:	cmp    al,BYTE PTR [rax+rax*1]
   140043a24:	adc    BYTE PTR [rdx],bh
   140043a26:	add    al,0x0
	...
   140043a40:	add    al,BYTE PTR [rax]
   140043a42:	add    BYTE PTR [rax],al
   140043a44:	sar    BYTE PTR [rcx],1
   140043a46:	add    al,0x0
	...
   140043a50:	shl    dh,0x4
   140043a53:	add    BYTE PTR [rcx],al
   140043a55:	add    BYTE PTR [rax],al
   140043a57:	add    BYTE PTR [rax],al
   140043a59:	add    BYTE PTR [rax],al
   140043a5b:	add    bh,bh
   140043a5d:	(bad)  
   140043a5e:	(bad)  
   140043a5f:	inc    DWORD PTR [rax]
   140043a61:	add    BYTE PTR [rax],al
   140043a63:	add    BYTE PTR [rax+0x0],al
   140043a66:	add    BYTE PTR [rax],al
   140043a68:	mov    eax,0x43a
	...
   140043a75:	add    BYTE PTR [rax],al
   140043a77:	add    BYTE PTR [rcx],al
	...
   140043a81:	add    BYTE PTR [rax],al
   140043a83:	add    al,al
   140043a85:	test   BYTE PTR [rax+rax*1],0xb8
   140043a89:	cmp    al,BYTE PTR [rax+rax*1]
   140043a8c:	js     0x140043ac8
   140043a8e:	add    al,0x0
	...
   140043aa0:	push   rax
   140043aa1:	cmp    al,BYTE PTR [rax+rax*1]
   140043aa4:	rcr    BYTE PTR [rdi],1
   140043aa6:	add    al,0x0
	...
   140043ac0:	add    al,BYTE PTR [rax]
   140043ac2:	add    BYTE PTR [rax],al
   140043ac4:	movabs al,ds:0x43a
   140043acd:	add    BYTE PTR [rax],al
   140043acf:	add    al,ch
   140043ad1:	cmp    al,BYTE PTR [rax+rax*1]
   140043ad4:	rcr    BYTE PTR [rdi],1
   140043ad6:	add    al,0x0
	...
   140043ae8:	call   0x141043fe3
   140043aed:	add    BYTE PTR [rax],al
   140043aef:	add    BYTE PTR [rax],al
   140043af1:	add    BYTE PTR [rax],al
   140043af3:	add    bh,bh
   140043af5:	(bad)  
   140043af6:	(bad)  
   140043af7:	inc    DWORD PTR [rax]
   140043af9:	add    BYTE PTR [rax],al
   140043afb:	add    BYTE PTR [rax+0x0],al
   140043afe:	add    BYTE PTR [rax],al
   140043b00:	adc    BYTE PTR [rbx],bh
   140043b02:	add    al,0x0
	...
   140043b18:	add    al,BYTE PTR [rax]
   140043b1a:	add    BYTE PTR [rax],al
   140043b1c:	sar    BYTE PTR [rdx],1
   140043b1e:	add    al,0x0
	...
   140043b28:	add    DWORD PTR [rax],eax
	...
   140043b32:	add    BYTE PTR [rax],al
   140043b34:	call   0x15004402f
   140043b39:	cmp    eax,DWORD PTR [rax+rax*1]
   140043b3c:	sub    BYTE PTR [rbx],bh
   140043b3e:	add    al,0x0
	...
   140043b58:	add    eax,DWORD PTR [rax]
   140043b5a:	add    BYTE PTR [rax],al
   140043b5c:	push   0x43b
   140043b61:	add    BYTE PTR [rax],al
   140043b63:	add    BYTE PTR [rax],al
   140043b65:	add    BYTE PTR [rax],al
   140043b67:	add    BYTE PTR [rax+0x3800043b],cl
   140043b6d:	and    BYTE PTR [rax+rax*1],al
   140043b70:	rcr    BYTE PTR [rdi],1
   140043b72:	add    al,0x0
	...
   140043b88:	sbb    bh,dh
   140043b8a:	add    al,0x0
   140043b8c:	add    al,BYTE PTR [rax]
   140043b8e:	add    BYTE PTR [rax],al
   140043b90:	add    BYTE PTR [rax],al
   140043b92:	add    BYTE PTR [rax],al
   140043b94:	(bad)  
   140043b95:	(bad)  
   140043b96:	(bad)  
   140043b97:	inc    DWORD PTR [rax]
   140043b99:	add    BYTE PTR [rax],al
   140043b9b:	add    BYTE PTR [rax+0x0],al
   140043b9e:	add    BYTE PTR [rax],al
   140043ba0:	push   rax
   140043ba1:	cmp    eax,DWORD PTR [rax+rax*1]
	...
   140043bb0:	add    DWORD PTR [rax],eax
	...
   140043bba:	add    BYTE PTR [rax],al
   140043bbc:	sbb    bh,dh
   140043bbe:	add    al,0x0
   140043bc0:	push   rax
   140043bc1:	cmp    eax,DWORD PTR [rax+rax*1]
   140043bc4:	mov    al,0x3b
   140043bc6:	add    al,0x0
	...
   140043bf8:	or     DWORD PTR [rdx],ecx
   140043bfa:	add    al,0x0
   140043bfc:	or     dh,BYTE PTR [rcx+rcx*1]
   140043bff:	add    BYTE PTR [rdx],cl
   140043c01:	push   rdx
   140043c02:	(bad)  
   140043c03:	jo     0x140043c4d
   140043c05:	xor    DWORD PTR [rdx],eax
   140043c07:	add    BYTE PTR [rcx],al
   140043c09:	add    BYTE PTR [rax],al
   140043c0b:	add    BYTE PTR [rax+0xd],ch
   140043c0e:	add    al,BYTE PTR [rax]
   140043c10:	test   BYTE PTR [rip+0x58840002],0x3        # 0x198883c19
   140043c17:	add    dh,dh
   140043c19:	or     eax,0x2
   140043c1e:	add    BYTE PTR [rax],al
   140043c20:	add    DWORD PTR [rax],eax
   140043c22:	add    BYTE PTR [rax],al
   140043c24:	add    BYTE PTR [rax],al
   140043c26:	add    BYTE PTR [rax],al
   140043c28:	add    DWORD PTR [rax],eax
   140043c2a:	add    BYTE PTR [rax],al
   140043c2c:	adc    DWORD PTR [rdi],ecx
   140043c2e:	add    al,0x0
   140043c30:	sysenter 
   140043c32:	(bad)  
   140043c33:	add    BYTE PTR [rdi],cl
   140043c35:	xor    cl,BYTE PTR [rbx]
   140043c37:	jo     0x140043c81
   140043c39:	xor    DWORD PTR [rdx],eax
   140043c3b:	add    BYTE PTR [rcx],al
   140043c3d:	add    BYTE PTR [rax],al
   140043c3f:	add    BYTE PTR [rax],bh
   140043c41:	(bad)  
   140043c42:	add    al,BYTE PTR [rax]
   140043c44:	rex.X (bad) 
   140043c46:	add    al,BYTE PTR [rax]
   140043c48:	rex push rsp
   140043c4a:	add    eax,DWORD PTR [rax]
   140043c4c:	add    BYTE PTR [rax],al
   140043c4e:	add    BYTE PTR [rax],al
   140043c50:	adc    DWORD PTR [rcx],ebx
   140043c52:	or     al,BYTE PTR [rax]
   140043c54:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   140043c58:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   140043c5c:	sbb    DWORD PTR [rdx+rcx*1],esi
   140043c5f:	add    BYTE PTR [rcx],bl
   140043c61:	push   rdx
   140043c62:	adc    eax,0x11e013f0
   140043c67:	ror    BYTE PTR [rax+0x31],1
   140043c6a:	add    al,BYTE PTR [rax]
   140043c6c:	add    al,BYTE PTR [rax]
   140043c6e:	add    BYTE PTR [rax],al
   140043c70:	mov    ah,0x16
   140043c72:	add    al,BYTE PTR [rax]
   140043c74:	clc    
   140043c75:	(bad)  
   140043c76:	add    al,BYTE PTR [rax]
   140043c78:	pop    rax
   140043c79:	push   rsp
   140043c7a:	add    eax,DWORD PTR [rax]
   140043c7c:	add    BYTE PTR [rax],al
   140043c7e:	add    BYTE PTR [rax],al
   140043c80:	adc    DWORD PTR [rsi],0x17110002
   140043c86:	add    al,BYTE PTR [rax]
   140043c88:	adc    BYTE PTR [rbx+rax*1+0x0],0x0
   140043c8d:	add    BYTE PTR [rax],al
   140043c8f:	add    BYTE PTR [rcx],dl
   140043c91:	sbb    DWORD PTR [rdx],ecx
   140043c93:	add    BYTE PTR [rcx],bl
   140043c95:	je     0x140043ca1
   140043c97:	add    BYTE PTR [rcx],bl
   140043c99:	or     DWORD PTR fs:[rax],eax
   140043c9c:	sbb    DWORD PTR [rax+rcx*1],esi
   140043c9f:	add    BYTE PTR [rcx],bl
   140043ca1:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e45097
   140043ca7:	ror    BYTE PTR [rax+0x31],0x2
   140043cab:	add    BYTE PTR [rcx],al
   140043cad:	add    BYTE PTR [rax],al
   140043caf:	add    BYTE PTR [rsi+0x6c000217],ah
   140043cb5:	sbb    BYTE PTR [rdx],al
   140043cb7:	add    BYTE PTR [rcx+0x354],bl
   140043cbd:	add    BYTE PTR [rax],al
   140043cbf:	add    BYTE PTR [rcx],al
   140043cc1:	sbb    ecx,DWORD PTR [rdx]
   140043cc3:	add    BYTE PTR [rbx],bl
   140043cc5:	in     al,0xf
   140043cc7:	add    BYTE PTR [rbx],bl
   140043cc9:	je     0x140043cd9
   140043ccb:	add    BYTE PTR [rbx],bl
   140043ccd:	fs or  eax,0xc341b00
   140043cd3:	add    BYTE PTR [rbx],bl
   140043cd5:	xchg   edx,eax
   140043cd6:	adc    al,0x50
   140043cd8:	adc    DWORD PTR [rbx],edx
   140043cda:	add    al,0x0
   140043cdc:	adc    esi,DWORD PTR [rdi+rax*1]
   140043cdf:	add    BYTE PTR [rbx],dl
   140043ce1:	xor    cl,BYTE PTR [rdi]
   140043ce3:	jo     0x140043d2d
   140043ce5:	xor    DWORD PTR [rdx],eax
   140043ce7:	add    BYTE PTR [rdx],al
   140043ce9:	add    BYTE PTR [rax],al
   140043ceb:	add    BYTE PTR [rsi+rbx*1],al
   140043cee:	add    al,BYTE PTR [rax]
   140043cf0:	xor    DWORD PTR [rsi],ebx
   140043cf2:	add    al,BYTE PTR [rax]
   140043cf4:	lods   eax,DWORD PTR ds:[rsi]
   140043cf5:	push   rsp
   140043cf6:	add    eax,DWORD PTR [rax]
   140043cf8:	add    BYTE PTR [rax],al
   140043cfa:	add    BYTE PTR [rax],al
   140043cfc:	rex.XB (bad) 
   140043cfe:	add    al,BYTE PTR [rax]
   140043d00:	jp     0x140043d20
   140043d02:	add    al,BYTE PTR [rax]
   140043d04:	(bad)  
   140043d05:	push   rsp
   140043d06:	add    eax,DWORD PTR [rax]
   140043d08:	add    BYTE PTR [rax],al
   140043d0a:	add    BYTE PTR [rax],al
   140043d0c:	adc    DWORD PTR [rdx],ecx
   140043d0e:	add    al,0x0
   140043d10:	or     dh,BYTE PTR [rsi+rax*1]
   140043d13:	add    BYTE PTR [rdx],cl
   140043d15:	xor    al,BYTE PTR [rsi]
   140043d17:	jo     0x140043d61
   140043d19:	xor    DWORD PTR [rdx],eax
   140043d1b:	add    BYTE PTR [rdx],al
   140043d1d:	add    BYTE PTR [rax],al
   140043d1f:	add    bl,bl
   140043d21:	(bad)  
   140043d22:	add    al,BYTE PTR [rax]
   140043d24:	in     eax,0x1f
   140043d26:	add    al,BYTE PTR [rax]
   140043d28:	lods   eax,DWORD PTR ds:[rsi]
   140043d29:	push   rsp
   140043d2a:	add    eax,DWORD PTR [rax]
   140043d2c:	add    BYTE PTR [rax],al
   140043d2e:	add    BYTE PTR [rax],al
   140043d30:	cli    
   140043d31:	(bad)  
   140043d32:	add    al,BYTE PTR [rax]
   140043d34:	and    DWORD PTR [rax],esp
   140043d36:	add    al,BYTE PTR [rax]
   140043d38:	(bad)  
   140043d39:	push   rsp
   140043d3a:	add    eax,DWORD PTR [rax]
   140043d3c:	add    BYTE PTR [rax],al
   140043d3e:	add    BYTE PTR [rax],al
   140043d40:	add    DWORD PTR [rdi],ecx
   140043d42:	add    al,0x0
   140043d44:	sysenter 
   140043d46:	(bad)  
   140043d47:	add    BYTE PTR [rdi],cl
   140043d49:	xor    cl,BYTE PTR [rbx]
   140043d4b:	jo     0x140043d5e
   140043d4d:	sbb    al,0xa
   140043d4f:	add    BYTE PTR [rsp+riz*2],bl
   140043d52:	ltr    WORD PTR [rsp+rsi*1]
   140043d56:	(bad)  
   140043d57:	add    BYTE PTR [rdx+rsi*2],bl
   140043d5a:	sbb    al,dh
   140043d5c:	(bad)  
   140043d5d:	loopne 0x140043d73
   140043d5f:	rcl    BYTE PTR [rdx],1
   140043d61:	rcl    BYTE PTR [rax],0x70
   140043d64:	xor    QWORD PTR [rdx],rax
   140043d67:	add    BYTE PTR [rcx],al
   140043d69:	add    BYTE PTR [rax],al
   140043d6b:	add    BYTE PTR [rbx+0x23],dh
   140043d6e:	add    al,BYTE PTR [rax]
   140043d70:	xchg   DWORD PTR [rdx+rax*1],esp
   140043d73:	add    bh,bl
   140043d75:	push   rsp
   140043d76:	add    eax,DWORD PTR [rax]
   140043d78:	add    BYTE PTR [rax],al
   140043d7a:	add    BYTE PTR [rax],al
   140043d7c:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41f3d8d
   140043d82:	push   rcx
   140043d83:	add    BYTE PTR [rbx],bl
   140043d85:	push   rsp
   140043d86:	push   rax
   140043d87:	add    BYTE PTR [rbx],bl
   140043d89:	xor    al,0x4f
   140043d8b:	add    BYTE PTR [rbx],bl
   140043d8d:	add    DWORD PTR [rdx+0x0],ecx
   140043d90:	adc    al,0xf0
   140043d92:	adc    ah,al
   140043d94:	adc    BYTE PTR [rax+0x0],dh
   140043d97:	add    ah,dl
   140043d99:	jge    0x140043d9d
   140043d9b:	add    BYTE PTR [rax+0x2],al
   140043d9e:	add    BYTE PTR [rax],al
   140043da0:	adc    DWORD PTR [rax],esp
   140043da2:	or     eax,0x1fc42000
   140043da7:	add    BYTE PTR [rax],ah
   140043da9:	je     0x140043dc9
   140043dab:	add    BYTE PTR [rax],ah
   140043dad:	fs sbb eax,0x1c342000
   140043db3:	add    BYTE PTR [rax],ah
   140043db5:	add    DWORD PTR [rax],ebx
   140043db7:	add    BYTE PTR [rcx],bl
   140043db9:	lock (bad) 
   140043dbb:	loopne 0x140043dd2
   140043dbd:	rol    BYTE PTR [rax],1
   140043dbf:	add    BYTE PTR [rax+0x31],cl
   140043dc2:	add    al,BYTE PTR [rax]
   140043dc4:	add    eax,DWORD PTR [rax]
   140043dc6:	add    BYTE PTR [rax],al
   140043dc8:	jo     0x140043df2
   140043dca:	add    al,BYTE PTR [rax]
   140043dcc:	mov    WORD PTR [rax],gs
   140043dce:	add    al,BYTE PTR [rax]
   140043dd0:	add    edx,DWORD PTR [rbp+0x3]
   140043dd3:	add    BYTE PTR [rax],al
   140043dd5:	add    BYTE PTR [rax],al
   140043dd7:	add    BYTE PTR [rdi-0x36fffdd8],dl
   140043ddd:	sub    BYTE PTR [rdx],al
   140043ddf:	add    BYTE PTR [rbx],al
   140043de1:	push   rbp
   140043de2:	add    eax,DWORD PTR [rax]
   140043de4:	add    BYTE PTR [rax],al
   140043de6:	add    BYTE PTR [rax],al
   140043de8:	shr    DWORD PTR [rax],1
   140043dea:	add    al,BYTE PTR [rax]
   140043dec:	movsxd ebp,DWORD PTR [rbx]
   140043dee:	add    al,BYTE PTR [rax]
   140043df0:	add    edx,DWORD PTR [rbp+0x3]
   140043df3:	add    BYTE PTR [rax],al
   140043df5:	add    BYTE PTR [rax],al
   140043df7:	add    BYTE PTR [rcx],al
   140043df9:	or     al,0x6
   140043dfb:	add    BYTE PTR [rsp+rsi*1],cl
   140043dfe:	or     al,0x0
   140043e00:	or     al,0x52
   140043e02:	or     BYTE PTR [rax+0x7],dh
   140043e05:	(bad)  
   140043e06:	(bad)  
   140043e07:	push   rax
   140043e08:	add    DWORD PTR [rip+0xffffffffc4150009],edx        # 0x104193e17
   140043e0e:	add    eax,0x4741500
   140043e13:	add    BYTE PTR [rip+0x15000364],dl        # 0x15504417d
   140043e19:	xor    al,0x2
   140043e1b:	add    BYTE PTR [rip+0x10000f0],dl        # 0x141043f11
   140043e21:	or     eax,0x340d0004
   140043e26:	or     DWORD PTR [rax],eax
   140043e28:	or     eax,0x1500632
   140043e2d:	or     DWORD PTR [rcx],eax
   140043e2f:	add    BYTE PTR [rcx],cl
   140043e31:	(bad)  
   140043e32:	add    BYTE PTR [rax],al
   140043e34:	add    DWORD PTR [rsi],eax
   140043e36:	add    al,BYTE PTR [rax]
   140043e38:	(bad)  
   140043e39:	adc    al,BYTE PTR [rdx]
   140043e3b:	xor    BYTE PTR [rcx],dl
   140043e3d:	clts   
   140043e3f:	add    BYTE PTR [rdi],cl
   140043e41:	or     DWORD PTR fs:[rax],eax
   140043e44:	sysenter 
   140043e46:	or     BYTE PTR [rax],al
   140043e48:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140043e4b:	jo     0x140043e95
   140043e4d:	xor    DWORD PTR [rdx],eax
   140043e4f:	add    BYTE PTR [rcx],al
   140043e51:	add    BYTE PTR [rax],al
   140043e53:	add    BYTE PTR [rdx+0x1c000235],ch
   140043e59:	add    al,BYTE PTR ss:[rax]
   140043e5c:	(bad)  
   140043e5d:	push   rbp
   140043e5e:	add    eax,DWORD PTR [rax]
   140043e60:	add    BYTE PTR [rax],al
   140043e62:	add    BYTE PTR [rax],al
   140043e64:	adc    DWORD PTR [rax],edx
   140043e66:	(bad)  
   140043e67:	add    BYTE PTR [rax],dl
   140043e69:	je     0x140043e72
   140043e6b:	add    BYTE PTR [rax],dl
   140043e6d:	xor    al,0x6
   140043e6f:	add    BYTE PTR [rax],dl
   140043e71:	xor    cl,BYTE PTR [rax+riz*8]
   140043e74:	xor    QWORD PTR [rdx],rax
   140043e77:	add    BYTE PTR [rcx],al
   140043e79:	add    BYTE PTR [rax],al
   140043e7b:	add    BYTE PTR [rsi+0x37],bh
   140043e7e:	add    al,BYTE PTR [rax]
   140043e80:	lahf   
   140043e81:	(bad)  
   140043e82:	add    al,BYTE PTR [rax]
   140043e84:	(bad)  
   140043e85:	push   rbp
   140043e86:	add    eax,DWORD PTR [rax]
   140043e88:	add    BYTE PTR [rax],al
   140043e8a:	add    BYTE PTR [rax],al
   140043e8c:	adc    DWORD PTR [rcx],edx
   140043e8e:	(bad)  
   140043e8f:	add    BYTE PTR [rcx],dl
   140043e91:	xor    al,0xa
   140043e93:	add    BYTE PTR [rcx],dl
   140043e95:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a744a7b
   140043e9b:	(bad)  
   140043e9c:	xor    QWORD PTR [rdx],rax
   140043e9f:	add    BYTE PTR [rcx],al
   140043ea1:	add    BYTE PTR [rax],al
   140043ea3:	add    dl,ah
   140043ea5:	cmp    al,BYTE PTR [rdx]
   140043ea7:	add    BYTE PTR [rsi],ah
   140043ea9:	cmp    eax,DWORD PTR [rdx]
   140043eab:	add    BYTE PTR [rbp+0x56],ch
   140043eae:	add    eax,DWORD PTR [rax]
   140043eb0:	add    BYTE PTR [rax],al
   140043eb2:	add    BYTE PTR [rax],al
   140043eb4:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174193ec2
   140043eba:	or     eax,DWORD PTR [rax]
   140043ebc:	adc    eax,0xff01132
   140043ec1:	loopne 0x140043ed0
   140043ec3:	ror    BYTE PTR [rbx],0x70
   140043ec6:	or     ah,BYTE PTR [rax+0x48]
   140043ec9:	xor    DWORD PTR [rdx],eax
   140043ecb:	add    BYTE PTR [rcx],al
   140043ecd:	add    BYTE PTR [rax],al
   140043ecf:	add    dh,dl
   140043ed1:	cmp    eax,DWORD PTR [rdx]
   140043ed3:	add    BYTE PTR [rax],cl
   140043ed5:	cmp    al,0x2
   140043ed7:	add    BYTE PTR [rbp+0x58],ch
   140043eda:	add    eax,DWORD PTR [rax]
   140043edc:	add    BYTE PTR [rax],al
   140043ede:	add    BYTE PTR [rax],al
   140043ee0:	sbb    DWORD PTR [rsi],esi
   140043ee2:	or     eax,DWORD PTR [rax]
   140043ee4:	and    eax,0x25037134
   140043ee9:	add    DWORD PTR [rsi+0x3],esp
   140043eec:	adc    al,dh
   140043eee:	(bad)  
   140043eef:	loopne 0x140043efd
   140043ef1:	ror    BYTE PTR [rdx],1
   140043ef3:	ror    BYTE PTR [rax],0x70
   140043ef6:	(bad)  
   140043ef7:	(bad)  
   140043ef8:	(bad)  
   140043ef9:	push   rax
   140043efa:	add    BYTE PTR [rax],al
   140043efc:	(bad)  
   140043efd:	jge    0x140043f01
   140043eff:	add    BYTE PTR [rax],ah
   140043f01:	sbb    eax,DWORD PTR [rax]
   140043f03:	add    BYTE PTR [rcx],al
   140043f05:	add    al,0x1
   140043f07:	add    BYTE PTR [rdx+riz*2],al
   140043f0a:	add    BYTE PTR [rax],al
   140043f0c:	sbb    DWORD PTR [rdi],ebp
   140043f0e:	or     DWORD PTR [rax],eax
   140043f10:	(bad)  
   140043f11:	je     0x140043ece
   140043f13:	add    BYTE PTR [rsi],bl
   140043f15:	fs mov edx,0xb9341e00
   140043f1b:	add    BYTE PTR [rsi],bl
   140043f1d:	add    DWORD PTR [rsi+0x501000],esi
   140043f23:	add    ah,dl
   140043f25:	jge    0x140043f29
   140043f27:	add    BYTE PTR [rax+0x1000005],ah
   140043f2d:	adc    al,0x8
   140043f2f:	add    BYTE PTR [rsp+riz*2],dl
   140043f32:	or     al,BYTE PTR [rax]
   140043f34:	adc    al,0x54
   140043f36:	or     DWORD PTR [rax],eax
   140043f38:	adc    al,0x34
   140043f3a:	or     BYTE PTR [rax],al
   140043f3c:	adc    al,0x52
   140043f3e:	adc    BYTE PTR [rax+0x1],dh
   140043f41:	adc    BYTE PTR [rsi],al
   140043f43:	add    BYTE PTR [rax],dl
   140043f45:	je     0x140043f4e
   140043f47:	add    BYTE PTR [rax],dl
   140043f49:	xor    al,0x6
   140043f4b:	add    BYTE PTR [rax],dl
   140043f4d:	xor    cl,BYTE PTR [rax+riz*8]
   140043f50:	add    DWORD PTR [rcx],ecx
   140043f52:	add    al,BYTE PTR [rax]
   140043f54:	or     DWORD PTR [rdx],esi
   140043f56:	add    eax,0xb301930
   140043f5b:	add    BYTE PTR [rdi],bl
   140043f5d:	xor    al,0x66
   140043f5f:	add    BYTE PTR [rdi],bl
   140043f61:	add    DWORD PTR [rax+rax*1+0x10],ebx
   140043f65:	lock (bad) 
   140043f67:	loopne 0x140043f75
   140043f69:	ror    BYTE PTR [rdx],1
   140043f6b:	ror    BYTE PTR [rax],0x70
   140043f6e:	(bad)  
   140043f6f:	(bad)  
   140043f70:	(bad)  
   140043f71:	push   rax
   140043f72:	add    BYTE PTR [rax],al
   140043f74:	(bad)  
   140043f75:	jge    0x140043f79
   140043f77:	add    al,bl
   140043f79:	add    al,BYTE PTR [rax]
   140043f7b:	add    BYTE PTR [rcx],al
   140043f7d:	(bad)  
   140043f7e:	or     BYTE PTR [rax],al
   140043f80:	(bad)  
   140043f81:	or     DWORD PTR fs:[rax],eax
   140043f84:	(bad)  
   140043f85:	push   rsp
   140043f86:	or     BYTE PTR [rax],al
   140043f88:	(bad)  
   140043f89:	xor    al,0x7
   140043f8b:	add    BYTE PTR [rdi],dl
   140043f8d:	xor    dl,BYTE PTR [rbx]
   140043f8f:	jo     0x140043f92
   140043f91:	add    BYTE PTR [rax],al
   140043f93:	add    BYTE PTR [rax],al
   140043f95:	add    BYTE PTR [rax],al
   140043f97:	add    BYTE PTR [rcx],al
   140043f99:	add    BYTE PTR [rax],al
   140043f9b:	add    BYTE PTR [rcx],dl
   140043f9d:	(bad)  
   140043f9e:	add    al,BYTE PTR [rax]
   140043fa0:	(bad)  
   140043fa1:	push   rdx
   140043fa2:	add    dh,BYTE PTR [rax]
   140043fa4:	xor    QWORD PTR [rdx],rax
   140043fa7:	add    BYTE PTR [rcx],al
   140043fa9:	add    BYTE PTR [rax],al
   140043fab:	add    ah,bh
   140043fad:	(bad)  
   140043faf:	add    BYTE PTR [rbx+riz*2+0x2],al
   140043fb3:	add    BYTE PTR [rbp+rdx*2+0x3],dl
   140043fb7:	add    BYTE PTR [rax],al
   140043fb9:	add    BYTE PTR [rax],al
   140043fbb:	add    BYTE PTR [rcx],al
   140043fbd:	adc    al,0x6
   140043fbf:	add    BYTE PTR [rsp+riz*2],dl
   140043fc2:	(bad)  
   140043fc3:	add    BYTE PTR [rsp+rsi*1],dl
   140043fc6:	(bad)  
   140043fc7:	add    BYTE PTR [rdx+rsi*1],dl
   140043fca:	adc    BYTE PTR [rax+0x1],dh
   140043fcd:	or     eax,0x340d0004
   140043fd2:	str    WORD PTR [rip+0x95006b2]        # 0x14954468b
   140043fd9:	add    al,0x1
   140043fdb:	add    BYTE PTR [rdx+rax*2],al
   140043fde:	add    BYTE PTR [rax],al
   140043fe0:	xor    QWORD PTR [rdx],rax
   140043fe3:	add    BYTE PTR [rcx],al
   140043fe5:	add    BYTE PTR [rax],al
   140043fe7:	add    ch,bh
   140043fe9:	data16 add al,BYTE PTR [rax]
   140043fec:	add    DWORD PTR [rdi+0x2],esp
   140043fef:	add    BYTE PTR [rcx],al
   140043ff1:	add    BYTE PTR [rax],al
   140043ff3:	add    BYTE PTR [rcx],al
   140043ff5:	add    al,BYTE PTR [eax]
   140043ff8:	or     DWORD PTR [rcx+rax*1],eax
   140043ffb:	add    BYTE PTR [rdx+rax*2],al
   140043ffe:	add    BYTE PTR [rax],al
   140044000:	xor    QWORD PTR [rdx],rax
   140044003:	add    BYTE PTR [rcx],al
   140044005:	add    BYTE PTR [rax],al
   140044007:	add    dh,bl
   140044009:	data16 add al,BYTE PTR [rax]
   14004400c:	loop   0x140044074
   14004400e:	add    al,BYTE PTR [rax]
   140044010:	add    DWORD PTR [rax],eax
   140044012:	add    BYTE PTR [rax],al
   140044014:	loop   0x14004407c
   140044016:	add    al,BYTE PTR [rax]
   140044018:	add    DWORD PTR [rax],ecx
   14004401a:	add    al,0x0
   14004401c:	or     BYTE PTR [rdx+0x4],dh
   14004401f:	jo     0x140044024
   140044021:	(bad)  
   140044022:	add    dh,BYTE PTR [rax]
   140044024:	add    DWORD PTR [rdx],ecx
   140044026:	add    al,0x0
   140044028:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14004402f:	jo     0x140044042
   140044031:	(bad)  
   140044032:	add    al,BYTE PTR [rax]
   140044034:	(bad)  
   140044035:	xor    al,BYTE PTR [rdx]
   140044037:	xor    BYTE PTR [rax+0x31],cl
   14004403a:	add    al,BYTE PTR [rax]
   14004403c:	add    DWORD PTR [rax],eax
   14004403e:	add    BYTE PTR [rax],al
   140044040:	fld    TBYTE PTR [rbx+0x2]
   140044043:	add    cl,dh
   140044045:	imul   eax,DWORD PTR [rdx],0x0
   140044048:	ins    DWORD PTR es:[rdi],dx
   140044049:	push   rbp
   14004404a:	add    eax,DWORD PTR [rax]
   14004404c:	add    BYTE PTR [rax],al
   14004404e:	add    BYTE PTR [rax],al
   140044050:	adc    DWORD PTR [rdx],ecx
   140044052:	add    al,0x0
   140044054:	or     dh,BYTE PTR [rdi+rax*1]
   140044057:	add    BYTE PTR [rdx],cl
   140044059:	xor    al,BYTE PTR [rsi]
   14004405b:	jo     0x1400440a5
   14004405d:	xor    DWORD PTR [rdx],eax
   14004405f:	add    BYTE PTR [rcx],al
   140044061:	add    BYTE PTR [rax],al
   140044063:	add    dl,dl
   140044065:	outs   dx,DWORD PTR ds:[rsi]
   140044066:	add    al,BYTE PTR [rax]
   140044068:	sub    DWORD PTR [rax+0x2],esi
   14004406b:	add    BYTE PTR [rsi+0x355],al
   140044071:	add    BYTE PTR [rax],al
   140044073:	add    BYTE PTR [rcx],dl
   140044075:	sbb    DWORD PTR [rdx],ecx
   140044077:	add    BYTE PTR [rcx],bl
   140044079:	in     al,0xb
   14004407b:	add    BYTE PTR [rcx],bl
   14004407d:	je     0x140044089
   14004407f:	add    BYTE PTR [rcx],bl
   140044081:	or     DWORD PTR fs:[rax],eax
   140044084:	sbb    DWORD PTR [rax+rcx*1],esi
   140044087:	add    BYTE PTR [rcx],bl
   140044089:	push   rdx
   14004408a:	adc    eax,0x23148f0
   14004408f:	add    BYTE PTR [rcx],al
   140044091:	add    BYTE PTR [rax],al
   140044093:	add    BYTE PTR [rbx+0x5a000271],ah
   140044099:	jb     0x14004409d
   14004409b:	add    BYTE PTR [rsi+0x355],al
   1400440a1:	add    BYTE PTR [rax],al
   1400440a3:	add    BYTE PTR [rcx],bl
   1400440a5:	and    eax,0x5416000a
   1400440aa:	adc    DWORD PTR [rax],eax
   1400440ac:	(bad)  
   1400440ad:	xor    al,0x10
   1400440af:	add    BYTE PTR [rsi],dl
   1400440b1:	jb     0x1400440c5
   1400440b3:	lock adc al,ah
   1400440b6:	(bad)  
   1400440b7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400440bb:	(bad)  
   1400440bc:	(bad)  
   1400440bd:	jge    0x1400440c1
   1400440bf:	add    BYTE PTR [rax],bh
   1400440c1:	add    BYTE PTR [rax],al
   1400440c3:	add    BYTE PTR [rcx],bl
   1400440c5:	sub    eax,DWORD PTR [rdi]
   1400440c7:	add    BYTE PTR [rdx],bl
   1400440c9:	je     0x14004407f
   1400440cb:	add    BYTE PTR [rdx],bl
   1400440cd:	xor    al,0xb3
   1400440cf:	add    BYTE PTR [rdx],bl
   1400440d1:	add    DWORD PTR [rax+0x500b00],esi
   1400440d7:	add    ah,dl
   1400440d9:	jge    0x1400440dd
   1400440db:	add    BYTE PTR [rax+0x5],dh
   1400440de:	add    BYTE PTR [rax],al
   1400440e0:	or     DWORD PTR [rdx],ecx
   1400440e2:	add    al,0x0
   1400440e4:	or     dh,BYTE PTR [rsi+rax*1]
   1400440e7:	add    BYTE PTR [rdx],cl
   1400440e9:	xor    al,BYTE PTR [rsi]
   1400440eb:	jo     0x140044135
   1400440ed:	xor    DWORD PTR [rdx],eax
   1400440ef:	add    BYTE PTR [rcx],al
   1400440f1:	add    BYTE PTR [rax],al
   1400440f3:	add    BYTE PTR [rbp-0xffffd8b],bh
   1400440f9:	jne    0x1400440fd
   1400440fb:	add    BYTE PTR [rax-0xffffcab],ah
   140044101:	jne    0x140044105
   140044103:	add    BYTE PTR [rcx],dl
   140044105:	adc    DWORD PTR [rax],ecx
   140044107:	add    BYTE PTR [rcx],dl
   140044109:	xor    al,0xe
   14004410b:	add    BYTE PTR [rcx],dl
   14004410d:	push   rdx
   14004410e:	or     eax,0x9e00bf0
   140044113:	rol    BYTE PTR [rdi],0x70
   140044116:	(bad)  
   140044117:	(bad)  
   140044118:	xor    QWORD PTR [rdx],rax
   14004411b:	add    BYTE PTR [rcx],al
   14004411d:	add    BYTE PTR [rax],al
   14004411f:	add    dh,dl
   140044121:	ja     0x140044125
   140044123:	add    BYTE PTR [rbp+0x78],bl
   140044126:	add    al,BYTE PTR [rax]
   140044128:	rcl    BYTE PTR [rbp+0x3],0x0
   14004412c:	add    BYTE PTR [rax],al
   14004412e:	add    BYTE PTR [rax],al
   140044130:	add    DWORD PTR [rax],eax
   140044132:	add    BYTE PTR [rax],al
   140044134:	sbb    DWORD PTR [rsi],ebx
   140044136:	or     BYTE PTR [rax],al
   140044138:	setb   BYTE PTR [rbx]
   14004413b:	lock or eax,esp
   14004413e:	(bad)  
   14004413f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436445b6
   140044146:	add    dh,BYTE PTR [rax]
   140044148:	(bad)  
   140044149:	jge    0x14004414d
   14004414b:	add    BYTE PTR [rax+0x0],cl
   14004414e:	add    BYTE PTR [rax],al
   140044150:	add    DWORD PTR [rdi],eax
   140044152:	add    al,BYTE PTR [rax]
   140044154:	(bad)  
   140044155:	add    DWORD PTR [rbx+0x100],ebx
   14004415b:	add    BYTE PTR [rcx],al
   14004415d:	add    BYTE PTR [rax],al
   14004415f:	add    BYTE PTR [rcx],al
   140044161:	add    BYTE PTR [rax],al
   140044163:	add    BYTE PTR [rcx],dl
   140044165:	(bad)  
   140044167:	add    BYTE PTR [rdi],cl
   140044169:	xor    al,0x7
   14004416b:	add    BYTE PTR [rdi],cl
   14004416d:	xor    cl,BYTE PTR [rbx]
   14004416f:	jo     0x1400441b9
   140044171:	xor    DWORD PTR [rdx],eax
   140044173:	add    BYTE PTR [rcx],al
   140044175:	add    BYTE PTR [rax],al
   140044177:	add    BYTE PTR [rdi-0x56fffd81],bl
   14004417d:	jg     0x140044181
   14004417f:	add    BYTE PTR [rax+0x54],al
   140044182:	add    eax,DWORD PTR [rax]
   140044184:	add    BYTE PTR [rax],al
   140044186:	add    BYTE PTR [rax],al
   140044188:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4194196
   14004418e:	or     BYTE PTR [rax],al
   140044190:	adc    eax,0x15000764
   140044195:	xor    al,0x6
   140044197:	add    BYTE PTR [rip+0x48f01132],dl        # 0x188f452cf
   14004419d:	xor    DWORD PTR [rdx],eax
   14004419f:	add    BYTE PTR [rcx],al
   1400441a1:	add    BYTE PTR [rax],al
   1400441a3:	add    bl,bh
   1400441a5:	add    DWORD PTR [rdx],0x2821800
   1400441ab:	add    dh,bl
   1400441ad:	push   rbp
   1400441ae:	add    eax,DWORD PTR [rax]
   1400441b0:	add    BYTE PTR [rax],al
   1400441b2:	add    BYTE PTR [rax],al
   1400441b4:	adc    DWORD PTR [rip+0x34150008],edx        # 0x1741941c2
   1400441ba:	or     eax,DWORD PTR [rax]
   1400441bc:	adc    eax,0xff01132
   1400441c1:	loopne 0x1400441d0
   1400441c3:	ror    BYTE PTR [rbx],0x70
   1400441c6:	or     ah,BYTE PTR [rax+0x48]
   1400441c9:	xor    DWORD PTR [rdx],eax
   1400441cb:	add    BYTE PTR [rcx],al
   1400441cd:	add    BYTE PTR [rax],al
   1400441cf:	add    BYTE PTR [rdx],bh
   1400441d1:	test   DWORD PTR [rdx],eax
   1400441d3:	add    BYTE PTR [rsi-0x7b],ch
   1400441d6:	add    al,BYTE PTR [rax]
   1400441d8:	ins    DWORD PTR es:[rdi],dx
   1400441d9:	pop    rax
   1400441da:	add    eax,DWORD PTR [rax]
   1400441dc:	add    BYTE PTR [rax],al
   1400441de:	add    BYTE PTR [rax],al
   1400441e0:	add    DWORD PTR [rcx],ebx
   1400441e2:	or     al,BYTE PTR [rax]
   1400441e4:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   1400441e8:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   1400441ec:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   1400441f0:	sbb    DWORD PTR [rsp+rcx*1],esi
   1400441f3:	add    BYTE PTR [rcx],bl
   1400441f5:	xchg   edx,eax
   1400441f6:	adc    eax,0x10401e0
   1400441fb:	add    BYTE PTR [rdx+rdx*1],al
   1400441fe:	add    BYTE PTR [rax],al
   140044200:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a419420c
   140044206:	adc    BYTE PTR [rax],al
   140044208:	adc    eax,0x15000e34
   14004420d:	mov    dl,0x11
   14004420f:	jo     0x14004422a
   140044211:	and    DWORD PTR [rax],ecx
   140044213:	add    BYTE PTR [rdx],dl
   140044215:	push   rsp
   140044216:	lldt   WORD PTR [rdx]
   140044219:	xor    al,0xe
   14004421b:	add    BYTE PTR [rdx],dl
   14004421d:	jb     0x14004422d
   14004421f:	loopne 0x14004422d
   140044221:	jo     0x14004422e
   140044223:	(bad)  
   140044224:	(bad)  
   140044225:	jge    0x140044229
   140044227:	add    BYTE PTR [rax],dh
   140044229:	add    BYTE PTR [rax],al
   14004422b:	add    BYTE PTR [rcx],al
   14004422d:	or     al,BYTE PTR [rdx]
   14004422f:	add    BYTE PTR [rdx],cl
   140044231:	xor    al,BYTE PTR [rsi]
   140044233:	xor    BYTE PTR [rcx],al
   140044235:	(bad)  
   140044236:	add    al,BYTE PTR [rax]
   140044238:	(bad)  
   140044239:	xor    cl,BYTE PTR [rdx]
   14004423b:	xor    BYTE PTR [rcx],al
   14004423d:	clts   
   14004423f:	add    BYTE PTR [rdi],cl
   140044241:	adc    DWORD PTR fs:[rax],eax
   140044244:	sysenter 
   140044246:	adc    BYTE PTR [rax],al
   140044248:	psrld  mm1,QWORD PTR [rbx]
   14004424b:	jo     0x140044266
   14004424d:	sub    eax,0x741f450d
   140044252:	adc    al,BYTE PTR [rax]
   140044254:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140044258:	(bad)  
   140044259:	xor    al,0x10
   14004425b:	add    BYTE PTR [rbx],dl
   14004425d:	rex.XB (bad) 
   14004425f:	xchg   edx,eax
   140044260:	or     dh,al
   140044262:	or     al,ah
   140044264:	(bad)  
   140044265:	rol    BYTE PTR [rax+rax*8],1
   140044268:	add    dl,BYTE PTR [rax+0x0]
   14004426b:	add    ah,dl
   14004426d:	jge    0x140044271
   14004426f:	add    BYTE PTR [rax+0x0],cl
   140044272:	add    BYTE PTR [rax],al
   140044274:	add    DWORD PTR [rdi],ecx
   140044276:	(bad)  
   140044277:	add    BYTE PTR [rdi],cl
   140044279:	str    WORD PTR fs:[rdi]
   14004427d:	xor    al,0xe
   14004427f:	add    BYTE PTR [rdi],cl
   140044281:	mov    dl,0xb
   140044283:	jo     0x14004429e
   140044285:	sub    eax,0x741f350d
   14004428a:	adc    BYTE PTR [rax],al
   14004428c:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140044290:	(bad)  
   140044291:	xor    al,0xe
   140044293:	add    BYTE PTR [rbx],dl
   140044295:	xor    ecx,DWORD PTR [rsi]
   140044297:	jb     0x1400442a3
   140044299:	lock or al,ah
   14004429c:	(bad)  
   14004429d:	rol    BYTE PTR [rax+rax*8],1
   1400442a0:	add    dl,BYTE PTR [rax+0x0]
   1400442a3:	add    ah,dl
   1400442a5:	jge    0x1400442a9
   1400442a7:	add    BYTE PTR [rax],dh
   1400442a9:	add    BYTE PTR [rax],al
   1400442ab:	add    BYTE PTR [rcx],dl
   1400442ad:	adc    DWORD PTR [rsi],eax
   1400442af:	add    BYTE PTR [rcx],dl
   1400442b1:	xor    al,0xa
   1400442b3:	add    BYTE PTR [rcx],dl
   1400442b5:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a744e9b
   1400442bb:	(bad)  
   1400442bc:	xor    QWORD PTR [rdx],rax
   1400442bf:	add    BYTE PTR [rcx],al
   1400442c1:	add    BYTE PTR [rax],al
   1400442c3:	add    al,cl
   1400442c5:	cwde   
   1400442c6:	add    al,BYTE PTR [rax]
   1400442c8:	in     al,dx
   1400442c9:	cwde   
   1400442ca:	add    al,BYTE PTR [rax]
   1400442cc:	ins    DWORD PTR es:[rdi],dx
   1400442cd:	push   rsi
   1400442ce:	add    eax,DWORD PTR [rax]
   1400442d0:	add    BYTE PTR [rax],al
   1400442d2:	add    BYTE PTR [rax],al
   1400442d4:	adc    DWORD PTR [rsi],eax
   1400442d6:	add    al,BYTE PTR [rax]
   1400442d8:	(bad)  
   1400442d9:	xor    al,BYTE PTR [rdx]
   1400442db:	jo     0x140044325
   1400442dd:	xor    DWORD PTR [rdx],eax
   1400442df:	add    BYTE PTR [rcx],al
   1400442e1:	add    BYTE PTR [rax],al
   1400442e3:	add    BYTE PTR [rcx-0x40fffd64],ch
   1400442e9:	pushf  
   1400442ea:	add    al,BYTE PTR [rax]
   1400442ec:	ins    DWORD PTR es:[rdi],dx
   1400442ed:	push   rbp
   1400442ee:	add    eax,DWORD PTR [rax]
   1400442f0:	add    BYTE PTR [rax],al
   1400442f2:	add    BYTE PTR [rax],al
   1400442f4:	add    DWORD PTR [rax],edx
   1400442f6:	(bad)  
   1400442f7:	add    BYTE PTR [rax],dl
   1400442f9:	adc    DWORD PTR fs:[rax],eax
   1400442fc:	adc    BYTE PTR [rdx+0x7007e009],dh
   140044302:	(bad)  
   140044303:	push   rax
   140044304:	add    BYTE PTR [rax],al
   140044306:	add    BYTE PTR [rax],al
   140044308:	add    DWORD PTR [rax],eax
   14004430a:	add    BYTE PTR [rax],al
   14004430c:	add    DWORD PTR [rcx+rax*1],eax
   14004430f:	add    BYTE PTR [rdx+riz*1],al
   140044312:	add    BYTE PTR [rax],al
   140044314:	add    DWORD PTR [rcx],ebx
   140044316:	or     al,BYTE PTR [rax]
   140044318:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   14004431c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   140044320:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140044324:	sbb    DWORD PTR [rdx+rcx*1],esi
   140044327:	add    BYTE PTR [rcx],bl
   140044329:	jb     0x140044340
   14004432b:	loopne 0x14004432e
   14004432d:	sbb    DWORD PTR [rdx],ecx
   14004432f:	add    BYTE PTR [rcx],bl
   140044331:	xor    al,0xe
   140044333:	add    BYTE PTR [rcx],bl
   140044335:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e4572b
   14004433b:	ror    BYTE PTR [rdi],1
   14004433d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b644fb4
   140044344:	add    DWORD PTR [rdx],edx
   140044346:	add    al,0x0
   140044348:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   14004434f:	push   rax
   140044350:	add    DWORD PTR [rcx+rax*1],eax
   140044353:	add    BYTE PTR [rdx+rax*4],al
   140044356:	add    BYTE PTR [rax],al
   140044358:	add    DWORD PTR [rcx],eax
   14004435a:	add    DWORD PTR [rax],eax
   14004435c:	add    DWORD PTR [rax],esi
   14004435e:	add    BYTE PTR [rax],al
   140044360:	add    DWORD PTR [rax],eax
   140044362:	add    BYTE PTR [rax],al
   140044364:	add    DWORD PTR [rcx],eax
   140044366:	add    DWORD PTR [rax],eax
   140044368:	add    DWORD PTR [rax],esi
   14004436a:	add    BYTE PTR [rax],al
   14004436c:	add    DWORD PTR [rdx],edx
   14004436e:	or     BYTE PTR [rax],al
   140044370:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   140044374:	adc    dh,BYTE PTR [rax+rcx*1]
   140044377:	add    BYTE PTR [rdx],dl
   140044379:	xor    cl,BYTE PTR [rsi]
   14004437b:	loopne 0x140044389
   14004437d:	jo     0x14004438a
   14004437f:	(bad)  
   140044380:	sbb    DWORD PTR [rbx],esi
   140044382:	or     eax,DWORD PTR [rax]
   140044384:	and    dh,BYTE PTR [rbp+rdi*4+0x0]
   140044388:	and    ah,BYTE PTR [rsp+rdi*4+0x0]
   14004438c:	and    dh,BYTE PTR [rbx+rdi*4]
   14004438f:	add    BYTE PTR [rdx],ah
   140044391:	add    DWORD PTR [rsi+0x12f01400],esi
   140044397:	loopne 0x1400443a9
   140044399:	push   rax
   14004439a:	add    BYTE PTR [rax],al
   14004439c:	(bad)  
   14004439d:	jge    0x1400443a1
   14004439f:	add    BYTE PTR [rax+0x9000005],ah
   1400443a5:	sbb    BYTE PTR [rdx],al
   1400443a7:	add    BYTE PTR [rax],bl
   1400443a9:	mov    dl,0x14
   1400443ab:	xor    BYTE PTR [rax+0x31],cl
   1400443ae:	add    al,BYTE PTR [rax]
   1400443b0:	add    DWORD PTR [rax],eax
   1400443b2:	add    BYTE PTR [rax],al
   1400443b4:	xor    ebp,DWORD PTR [rbp-0x52acfffe]
   1400443ba:	add    al,BYTE PTR [rax]
   1400443bc:	not    DWORD PTR [rbp+0x3]
   1400443bf:	add    BYTE PTR [rbx-0x53],dl
   1400443c2:	add    al,BYTE PTR [rax]
   1400443c4:	add    DWORD PTR [rsi],eax
   1400443c6:	add    al,BYTE PTR [rax]
   1400443c8:	(bad)  
   1400443c9:	jb     0x1400443cd
   1400443cb:	push   rax
   1400443cc:	add    DWORD PTR [rsi],edx
   1400443ce:	or     al,BYTE PTR [rax]
   1400443d0:	(bad)  
   1400443d1:	push   rsp
   1400443d2:	or     al,0x0
   1400443d4:	(bad)  
   1400443d5:	xor    al,0xb
   1400443d7:	add    BYTE PTR [rsi],dl
   1400443d9:	xor    dl,BYTE PTR [rdx]
   1400443db:	lock adc al,ah
   1400443de:	(bad)  
   1400443df:	ror    BYTE PTR [rax+rsi*2],0xb
   1400443e3:	(bad)  
   1400443e4:	add    DWORD PTR [rdi],ecx
   1400443e6:	(bad)  
   1400443e7:	add    BYTE PTR [rdi],cl
   1400443e9:	fs or  al,0x0
   1400443ec:	sysenter 
   1400443ee:	or     eax,DWORD PTR [rax]
   1400443f0:	(bad)  
   1400443f2:	or     esi,DWORD PTR [rax+0x1]
   1400443f5:	adc    al,0x8
   1400443f7:	add    BYTE PTR [rsp+riz*2],dl
   1400443fa:	or     al,0x0
   1400443fc:	adc    al,0x54
   1400443fe:	or     eax,DWORD PTR [rax]
   140044400:	adc    al,0x34
   140044402:	or     al,BYTE PTR [rax]
   140044404:	adc    al,0x72
   140044406:	adc    BYTE PTR [rax+0x1],dh
   140044409:	add    BYTE PTR [rax],al
   14004440b:	add    BYTE PTR [rcx],al
   14004440d:	sbb    DWORD PTR [rdx],ecx
   14004440f:	add    BYTE PTR [rcx],bl
   140044411:	je     0x140044421
   140044413:	add    BYTE PTR [rcx],bl
   140044415:	fs or  eax,0xc341900
   14004441b:	add    BYTE PTR [rcx],bl
   14004441d:	jb     0x140044434
   14004441f:	lock adc esp,eax
   140044422:	adc    eax,eax
   140044424:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4214436
   14004442a:	adc    DWORD PTR [rax],eax
   14004442c:	sbb    eax,0x1d001064
   140044431:	push   rsp
   140044432:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d04526d
   140044439:	xchg   edx,eax
   14004443a:	sbb    eax,esi
   14004443c:	(bad)  
   14004443d:	loopne 0x140044454
   14004443f:	rcl    BYTE PTR [rcx],0x19
   140044442:	or     BYTE PTR [rax],al
   140044444:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140044448:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14004444c:	sbb    DWORD PTR [rsi+rax*1],esi
   14004444f:	add    BYTE PTR [rcx],bl
   140044451:	xor    dl,BYTE PTR [rip+0x23148e0]        # 0x142358d37
   140044457:	add    BYTE PTR [rcx],al
   140044459:	add    BYTE PTR [rax],al
   14004445b:	add    BYTE PTR [rbx-0x41fffd4b],dl
   140044461:	mov    ch,0x2
   140044463:	add    BYTE PTR [rip+0x356],bh        # 0x1400447bf
   140044469:	add    BYTE PTR [rax],al
   14004446b:	add    BYTE PTR [rcx],al
   14004446d:	adc    al,0x8
   14004446f:	add    BYTE PTR [rsp+riz*2],dl
   140044472:	(bad)  
   140044473:	add    BYTE PTR [rsp+rdx*2],dl
   140044476:	or     eax,0xc341400
   14004447b:	add    BYTE PTR [rdx+rdx*4],dl
   14004447e:	adc    BYTE PTR [rax+0x11],dh
   140044481:	(bad)  
   140044483:	add    BYTE PTR [rdi],cl
   140044485:	xor    al,0x7
   140044487:	add    BYTE PTR [rdi],cl
   140044489:	xor    cl,BYTE PTR [rbx]
   14004448b:	jo     0x1400444d5
   14004448d:	xor    DWORD PTR [rdx],eax
   14004448f:	add    BYTE PTR [rcx],al
   140044491:	add    BYTE PTR [rax],al
   140044493:	add    BYTE PTR [rdi],cl
   140044495:	mov    ecx,0xb91a0002
   14004449a:	add    al,BYTE PTR [rax]
   14004449c:	rex push rsp
   14004449e:	add    eax,DWORD PTR [rax]
   1400444a0:	add    BYTE PTR [rax],al
   1400444a2:	add    BYTE PTR [rax],al
   1400444a4:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1741144b0
   1400444aa:	or     BYTE PTR [rax],al
   1400444ac:	or     eax,0x7e00932
   1400444b1:	jo     0x1400444b9
   1400444b3:	(bad)  
   1400444b4:	adc    DWORD PTR [rax],ebx
   1400444b6:	or     BYTE PTR [rax],al
   1400444b8:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   1400444bc:	sbb    BYTE PTR [rsp+rcx*1],dh
   1400444bf:	add    BYTE PTR [rax],bl
   1400444c1:	push   rdx
   1400444c2:	adc    al,0xf0
   1400444c4:	adc    ah,al
   1400444c6:	adc    BYTE PTR [rax+0x48],dh
   1400444c9:	xor    DWORD PTR [rdx],eax
   1400444cb:	add    BYTE PTR [rcx],al
   1400444cd:	add    BYTE PTR [rax],al
   1400444cf:	add    BYTE PTR [rax-0x39fffd47],dl
   1400444d5:	mov    ecx,0x56550002
   1400444da:	add    eax,DWORD PTR [rax]
   1400444dc:	add    BYTE PTR [rax],al
   1400444de:	add    BYTE PTR [rax],al
   1400444e0:	adc    DWORD PTR [rdi],edx
   1400444e2:	or     BYTE PTR [rax],al
   1400444e4:	(bad)  
   1400444e5:	or     eax,DWORD PTR fs:[rax]
   1400444e8:	(bad)  
   1400444e9:	xor    al,0xa
   1400444eb:	add    BYTE PTR [rdi],dl
   1400444ed:	xor    dl,BYTE PTR [rbx]
   1400444ef:	lock adc eax,esp
   1400444f2:	pshufw mm1,QWORD PTR [rax+0x31],0x2
   1400444f7:	add    BYTE PTR [rcx],al
   1400444f9:	add    BYTE PTR [rax],al
   1400444fb:	add    BYTE PTR [rax-0x49fffd46],dl
   140044501:	mov    edx,0x566d0002
   140044506:	add    eax,DWORD PTR [rax]
   140044508:	add    BYTE PTR [rax],al
   14004450a:	add    BYTE PTR [rax],al
   14004450c:	add    DWORD PTR [rcx],ebx
   14004450e:	or     al,BYTE PTR [rax]
   140044510:	sbb    DWORD PTR [rcx*1+0x15321900],esi
   140044517:	lock adc esp,eax
   14004451a:	adc    eax,edx
   14004451c:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b645193
   140044523:	push   rax
   140044524:	add    DWORD PTR [rsi],eax
   140044526:	add    al,BYTE PTR [rax]
   140044528:	(bad)  
   140044529:	xor    al,BYTE PTR [rdx]
   14004452b:	jo     0x14004452e
   14004452d:	or     al,BYTE PTR [rax+rax*1]
   140044530:	or     dh,BYTE PTR [rax+rcx*1]
   140044533:	add    BYTE PTR [rdx],cl
   140044535:	push   rdx
   140044536:	(bad)  
   140044537:	jo     0x14004453a
   140044539:	sbb    ecx,DWORD PTR [rdx]
   14004453b:	add    BYTE PTR [rbx],bl
   14004453d:	je     0x14004454f
   14004453f:	add    BYTE PTR [rbx],bl
   140044541:	ltr    WORD PTR fs:[rbx]
   140044545:	xor    al,0xe
   140044547:	add    BYTE PTR [rbx],bl
   140044549:	xchg   edx,eax
   14004454a:	adc    al,0xf0
   14004454c:	adc    ah,al
   14004454e:	adc    BYTE PTR [rax+0x1],dl
   140044551:	sgdt   [rax]
   140044554:	punpckldq mm0,DWORD PTR [rax]
   140044557:	add    BYTE PTR [rcx],bl
   140044559:	adc    ecx,DWORD PTR [rcx]
   14004455b:	add    BYTE PTR [rbx],dl
   14004455d:	add    DWORD PTR [rdx],edx
   14004455f:	add    BYTE PTR [rax+rsi*8],cl
   140044562:	or     ah,al
   140044564:	or     al,dl
   140044566:	(bad)  
   140044567:	rol    BYTE PTR [rax+rsi*2],0x3
   14004456b:	(bad)  
   14004456c:	add    dh,BYTE PTR [rax]
   14004456e:	add    BYTE PTR [rax],al
   140044570:	xor    QWORD PTR [rdx],rax
   140044573:	add    BYTE PTR [rdx],al
   140044575:	add    BYTE PTR [rax],al
   140044577:	add    dl,dl
   140044579:	rol    BYTE PTR [rdx],cl
   14004457b:	add    bh,dh
   14004457d:	rol    BYTE PTR [rdx],cl
   14004457f:	add    BYTE PTR [rsi+rdx*2-0x2d08fffd],al
   140044586:	add    al,BYTE PTR [rax]
   140044588:	rcl    dl,cl
   14004458a:	add    al,BYTE PTR [rax]
   14004458c:	jb     0x140044561
   14004458e:	add    al,BYTE PTR [rax]
   140044590:	js     0x1400445e9
   140044592:	add    eax,DWORD PTR [rax]
   140044594:	add    BYTE PTR [rax],al
   140044596:	add    BYTE PTR [rax],al
   140044598:	add    DWORD PTR [rdi],eax
   14004459a:	add    eax,DWORD PTR [rax]
   14004459c:	(bad)  
   14004459d:	rex.X add edx,DWORD PTR [rax+0x2]
   1400445a1:	xor    BYTE PTR [rax],al
   1400445a3:	add    BYTE PTR [rcx],al
   1400445a5:	(bad)  
   1400445a6:	add    al,BYTE PTR [rax]
   1400445a8:	(bad)  
   1400445a9:	xor    al,BYTE PTR [rdx]
   1400445ab:	xor    BYTE PTR [rcx],bl
   1400445ad:	and    cl,BYTE PTR [rax]
   1400445af:	add    BYTE PTR [rdx],ah
   1400445b1:	push   rdx
   1400445b2:	(bad)  
   1400445b3:	lock sbb al,0xe0
   1400445b6:	sbb    dl,al
   1400445b8:	sbb    al,al
   1400445ba:	(bad)  
   1400445bb:	jo     0x1400445d2
   1400445bd:	(bad)  
   1400445be:	adc    al,0x30
   1400445c0:	xor    QWORD PTR [rdx],rax
   1400445c3:	add    BYTE PTR [rdx],al
   1400445c5:	add    BYTE PTR [rax],al
   1400445c7:	add    bl,dl
   1400445c9:	(bad)  
   1400445ca:	add    al,BYTE PTR [rax]
   1400445cc:	push   0xffffffffffffffd5
   1400445ce:	add    al,BYTE PTR [rax]
   1400445d0:	(bad)  
   1400445d1:	pop    rax
   1400445d2:	add    eax,DWORD PTR [rax]
   1400445d4:	push   0xffffffffffffffd5
   1400445d6:	add    al,BYTE PTR [rax]
   1400445d8:	fwait
   1400445d9:	(bad)  
   1400445da:	add    al,BYTE PTR [rax]
   1400445dc:	xchg   ecx,eax
   1400445dd:	(bad)  
   1400445de:	add    al,BYTE PTR [rax]
   1400445e0:	and    al,0x58
   1400445e2:	add    eax,DWORD PTR [rax]
   1400445e4:	add    BYTE PTR [rax],al
   1400445e6:	add    BYTE PTR [rax],al
   1400445e8:	add    DWORD PTR [rcx],esp
   1400445ea:	or     eax,DWORD PTR [rax]
   1400445ec:	and    DWORD PTR [rdi+rbx*1],esi
   1400445ef:	add    BYTE PTR [rcx],ah
   1400445f1:	add    DWORD PTR [rsi],edx
   1400445f3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e459e9
   1400445f9:	ror    BYTE PTR [rdi],1
   1400445fb:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b645272
   140044602:	add    BYTE PTR [rax],al
   140044604:	add    DWORD PTR [rdi],edx
   140044606:	or     al,BYTE PTR [rax]
   140044608:	(bad)  
   140044609:	push   rsp
   14004460a:	adc    al,BYTE PTR [rax]
   14004460c:	(bad)  
   14004460d:	xor    al,0x10
   14004460f:	add    BYTE PTR [rdi],dl
   140044611:	xchg   edx,eax
   140044612:	adc    esi,eax
   140044614:	adc    eax,esp
   140044616:	xadd   BYTE PTR [rip+0x9600c70],cl        # 0x14964528d
   14004461d:	adc    eax,0x74150008
   140044622:	or     BYTE PTR [rax],al
   140044624:	adc    eax,0x15000764
   140044629:	xor    al,0x6
   14004462b:	add    BYTE PTR [rip+0x48e01132],dl        # 0x188e45763
   140044631:	xor    DWORD PTR [rdx],eax
   140044633:	add    BYTE PTR [rcx],al
   140044635:	add    BYTE PTR [rax],al
   140044637:	add    BYTE PTR [rax-0x31],ch
   14004463a:	add    al,BYTE PTR [rax]
   14004463c:	ror    bh,cl
   14004463e:	add    al,BYTE PTR [rax]
   140044640:	add    DWORD PTR [rax],eax
   140044642:	add    BYTE PTR [rax],al
   140044644:	ror    bh,cl
   140044646:	add    al,BYTE PTR [rax]
   140044648:	add    DWORD PTR [rcx],ebx
   14004464a:	or     al,BYTE PTR [rax]
   14004464c:	sbb    DWORD PTR [rdi+rdx*1],esi
   14004464f:	add    BYTE PTR [rcx],bl
   140044651:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e45a47
   140044657:	ror    BYTE PTR [rdi],1
   140044659:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6452d0
   140044660:	or     DWORD PTR [rip+0x420d0001],ecx        # 0x182114667
   140044666:	add    BYTE PTR [rax],al
   140044668:	xor    QWORD PTR [rdx],rax
   14004466b:	add    BYTE PTR [rcx],al
   14004466d:	add    BYTE PTR [rax],al
   14004466f:	add    BYTE PTR [rbp-0x39fffd3b],dh
   140044675:	(bad)
   140044678:	not    BYTE PTR [rdi+0x3]
   14004467b:	add    al,cl
   14004467d:	(bad)
   140044680:	add    DWORD PTR [rsp+rcx*1],ebx
   140044683:	add    BYTE PTR [rsp+riz*2],bl
   140044686:	or     al,0x0
   140044688:	sbb    al,0x54
   14004468a:	or     eax,DWORD PTR [rax]
   14004468c:	sbb    al,0x34
   14004468e:	or     al,BYTE PTR [rax]
   140044690:	sbb    al,0x32
   140044692:	sbb    al,dh
   140044694:	(bad)  
   140044695:	loopne 0x1400446ab
   140044697:	rcl    BYTE PTR [rdx],1
   140044699:	rcl    BYTE PTR [rax],0x70
   14004469c:	add    DWORD PTR [rax],ebx
   14004469e:	or     al,BYTE PTR [rax]
   1400446a0:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   1400446a4:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   1400446a8:	sbb    BYTE PTR [rsp+rcx*1],dh
   1400446ab:	add    BYTE PTR [rax],bl
   1400446ad:	jb     0x1400446c3
   1400446af:	loopne 0x1400446c3
   1400446b1:	rcl    BYTE PTR [rax],0x70
   1400446b4:	or     DWORD PTR [rcx],ebx
   1400446b6:	or     al,BYTE PTR [rax]
   1400446b8:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400446bc:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400446c0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400446c3:	add    BYTE PTR [rcx],bl
   1400446c5:	push   rdx
   1400446c6:	adc    eax,0x11e013f0
   1400446cb:	ror    BYTE PTR [rax+0x31],1
   1400446ce:	add    al,BYTE PTR [rax]
   1400446d0:	add    DWORD PTR [rax],eax
   1400446d2:	add    BYTE PTR [rax],al
   1400446d4:	adc    al,0x2
   1400446d7:	add    bh,al
   1400446d9:	rol    DWORD PTR [rdx],1
   1400446db:	add    BYTE PTR [rcx],al
   1400446dd:	add    BYTE PTR [rax],al
   1400446df:	add    bl,cl
   1400446e1:	rol    DWORD PTR [rdx],1
   1400446e3:	add    BYTE PTR [rcx],al
   1400446e5:	and    BYTE PTR [rax+rax*1],cl
   1400446e8:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   1400446ec:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   1400446f0:	and    BYTE PTR [rdx+rcx*1],dh
   1400446f3:	add    BYTE PTR [rax],ah
   1400446f5:	xor    bl,BYTE PTR [rax+rsi*8]
   1400446f8:	sbb    ah,al
   1400446fa:	sbb    al,dl
   1400446fc:	(bad)  
   1400446fd:	rcl    BYTE PTR [rax+rsi*2],0x11
   140044701:	(bad)  
   140044703:	add    BYTE PTR [rdi],cl
   140044705:	xor    al,0x6
   140044707:	add    BYTE PTR [rdi],cl
   140044709:	xor    cl,BYTE PTR [rbx]
   14004470b:	jo     0x140044755
   14004470d:	xor    DWORD PTR [rdx],eax
   14004470f:	add    BYTE PTR [rcx],al
   140044711:	add    BYTE PTR [rax],al
   140044713:	add    BYTE PTR [rbx-0x70fffd22],al
   140044719:	fiadd  WORD PTR [rdx]
   14004471b:	add    BYTE PTR [rip+0x356],bh        # 0x140044a77
   140044721:	add    BYTE PTR [rax],al
   140044723:	add    BYTE PTR [rcx],bl
   140044725:	or     eax,0x62040001
   14004472a:	add    BYTE PTR [rax],al
   14004472c:	sbb    BYTE PTR [rax-0x2e67fffe],dh
   140044732:	add    eax,DWORD PTR [rax]
	...
   14004473c:	add    DWORD PTR [rax],eax
   14004473e:	add    BYTE PTR [rax],al
   140044740:	add    DWORD PTR [rax],eax
   140044742:	add    BYTE PTR [rax],al
   140044744:	rex.W
   140044745:	rex.RXB add al,0x0
   140044748:	add    BYTE PTR [rax],al
	...
   140044753:	add    BYTE PTR [rbp+0x58],cl
   140044756:	add    eax,DWORD PTR [rax]
   140044758:	cmp    BYTE PTR [rax],al
   14004475a:	add    BYTE PTR [rax],al
   14004475c:	sub    al,0xe1
   14004475e:	add    al,BYTE PTR [rax]
   140044760:	(bad)  
   140044761:	(bad)  
   140044762:	(bad)  
   140044763:	(bad)  
   140044764:	cmp    ecx,esp
   140044766:	add    al,BYTE PTR [rax]
   140044768:	add    BYTE PTR [rax],al
   14004476a:	add    BYTE PTR [rax],al
   14004476c:	(bad)  
   14004476d:	loope  0x140044771
   14004476f:	add    bh,bh
   140044771:	(bad)  
   140044772:	(bad)  
   140044773:	dec    DWORD PTR [rbp+0x58]
   140044776:	add    eax,DWORD PTR [rax]
   140044778:	add    BYTE PTR [rax],al
   14004477a:	add    BYTE PTR [rax],al
   14004477c:	pop    rdx
   14004477d:	pop    rax
   14004477e:	add    eax,DWORD PTR [rax]
   140044780:	add    DWORD PTR [rax],eax
   140044782:	add    BYTE PTR [rax],al
   140044784:	pop    rdi
   140044785:	pop    rax
   140044786:	add    eax,DWORD PTR [rax]
   140044788:	add    BYTE PTR [rax],al
   14004478a:	add    BYTE PTR [rax],al
   14004478c:	sbb    DWORD PTR [rdx],ecx
   14004478e:	add    al,BYTE PTR [rax]
   140044790:	or     dh,BYTE PTR [rdx]
   140044792:	(bad)  
   140044793:	push   rax
   140044794:	sbb    BYTE PTR [rax-0x2e67fffe],dh
   14004479a:	add    eax,DWORD PTR [rax]
   14004479c:	sbb    DWORD PTR [rax],esi
   14004479e:	or     eax,DWORD PTR [rax]
   1400447a0:	(bad)  
   1400447a1:	xor    al,0xa6
   1400447a3:	add    BYTE PTR [rdi],bl
   1400447a5:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   1400447ac:	or     al,0xd0
   1400447ae:	or     al,al
   1400447b0:	or     BYTE PTR [rax+0x7],dh
   1400447b3:	(bad)  
   1400447b4:	(bad)  
   1400447b5:	push   rax
   1400447b6:	add    BYTE PTR [rax],al
   1400447b8:	(bad)  
   1400447b9:	jge    0x1400447bd
   1400447bb:	add    al,dl
   1400447bd:	add    al,0x0
   1400447bf:	add    BYTE PTR [rcx],al
   1400447c1:	sbb    BYTE PTR [rax],cl
   1400447c3:	add    BYTE PTR [rax],bl
   1400447c5:	or     BYTE PTR fs:[rax],al
   1400447c8:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   1400447cc:	sbb    BYTE PTR [rsi+rax*1],dh
   1400447cf:	add    BYTE PTR [rax],bl
   1400447d1:	xor    dl,BYTE PTR [rax+rsi*2]
   1400447d4:	add    BYTE PTR [rax],al
   1400447d6:	add    BYTE PTR [rax],al
   1400447d8:	add    DWORD PTR [rcx+rax*1],eax
   1400447db:	add    BYTE PTR [rdx+rax*2],al
   1400447de:	add    BYTE PTR [rax],al
   1400447e0:	adc    DWORD PTR [rbx],ebx
   1400447e2:	or     al,BYTE PTR [rax]
   1400447e4:	sbb    esp,DWORD PTR [rsp+rcx*1+0x0]
   1400447e8:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400447eb:	add    BYTE PTR [rbx],bl
   1400447ed:	xor    dl,BYTE PTR [rdi]
   1400447ef:	lock adc eax,0x11d013e0
   1400447f5:	ror    BYTE PTR [rdi],0x70
   1400447f8:	xor    QWORD PTR [rdx],rax
   1400447fb:	add    BYTE PTR [rcx],al
   1400447fd:	add    BYTE PTR [rax],al
   1400447ff:	add    BYTE PTR [rax],al
   140044801:	out    dx,al
   140044802:	add    al,BYTE PTR [rax]
   140044804:	xor    ch,dh
   140044806:	add    al,BYTE PTR [rax]
   140044808:	ins    DWORD PTR es:[rdi],dx
   140044809:	pop    rax
   14004480a:	add    eax,DWORD PTR [rax]
   14004480c:	add    BYTE PTR [rax],al
   14004480e:	add    BYTE PTR [rax],al
   140044810:	add    DWORD PTR [rcx+rcx*1],ebx
   140044813:	add    BYTE PTR [rdx+riz*4],bl
   140044816:	adc    eax,0x11e013f0
   14004481b:	ror    BYTE PTR [rdi],1
   14004481d:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b645494
   140044824:	or     dl,BYTE PTR [rax+0x0]
   140044827:	add    BYTE PTR [rcx],al
   140044829:	adc    al,0x8
   14004482b:	add    BYTE PTR [rsp+riz*2],dl
   14004482e:	or     BYTE PTR [rax],al
   140044830:	adc    al,0x54
   140044832:	(bad)  
   140044833:	add    BYTE PTR [rsp+rsi*1],dl
   140044836:	(bad)  
   140044837:	add    BYTE PTR [rdx+rsi*1],dl
   14004483a:	adc    BYTE PTR [rax+0x1],dh
   14004483d:	adc    eax,DWORD PTR [rcx]
   14004483f:	add    BYTE PTR [rbx],dl
   140044841:	(bad)  
   140044842:	add    BYTE PTR [rax],al
   140044844:	add    DWORD PTR [rax],ebx
   140044846:	or     al,BYTE PTR [rax]
   140044848:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   14004484c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140044850:	sbb    BYTE PTR [rdx+rcx*1],dh
   140044853:	add    BYTE PTR [rax],bl
   140044855:	push   rdx
   140044856:	adc    al,0xf0
   140044858:	adc    ah,al
   14004485a:	adc    BYTE PTR [rax+0x9],dh
   14004485d:	add    al,0x1
   14004485f:	add    BYTE PTR [rdx+rax*2],al
   140044862:	add    BYTE PTR [rax],al
   140044864:	xor    QWORD PTR [rdx],rax
   140044867:	add    BYTE PTR [rcx],al
   140044869:	add    BYTE PTR [rax],al
   14004486b:	add    BYTE PTR [rdx-0x48fffd02],ah
   140044871:	inc    BYTE PTR [rdx]
   140044873:	add    BYTE PTR [rax+rbx*2-0x148fffd],al
   14004487a:	add    al,BYTE PTR [rax]
   14004487c:	sbb    DWORD PTR [rip+0xffffffffc41f350d],ebp        # 0x104237d8f
   140044882:	ltr    WORD PTR [rbx]
   140044885:	je     0x140044895
   140044887:	add    BYTE PTR [rdi],dl
   140044889:	fs or  eax,0xc341300
   14004488f:	add    BYTE PTR [rdi],cl
   140044891:	xor    ecx,DWORD PTR [rdx]
   140044893:	jb     0x14004489b
   140044895:	lock add al,0xe0
   140044898:	add    dl,BYTE PTR [rax+0x0]
   14004489b:	add    ah,dl
   14004489d:	jge    0x1400448a1
   14004489f:	add    BYTE PTR [rax],dh
   1400448a1:	add    BYTE PTR [rax],al
   1400448a3:	add    BYTE PTR [rcx],bl
   1400448a5:	xor    BYTE PTR [rbx],cl
   1400448a7:	add    BYTE PTR [rdi],bl
   1400448a9:	xor    al,0x82
   1400448ab:	add    BYTE PTR [rdi],bl
   1400448ad:	add    DWORD PTR [rax+0x0],edi
   1400448b0:	adc    al,dh
   1400448b2:	(bad)  
   1400448b3:	loopne 0x1400448c1
   1400448b5:	ror    BYTE PTR [rdx],1
   1400448b7:	ror    BYTE PTR [rax],0x70
   1400448ba:	(bad)  
   1400448bb:	(bad)  
   1400448bc:	(bad)  
   1400448bd:	push   rax
   1400448be:	add    BYTE PTR [rax],al
   1400448c0:	(bad)  
   1400448c1:	jge    0x1400448c5
   1400448c3:	add    BYTE PTR [rax+0x1000003],dh
   1400448c9:	adc    al,BYTE PTR [rsi]
   1400448cb:	add    BYTE PTR [rdx],dl
   1400448cd:	in     al,0x13
   1400448cf:	add    BYTE PTR [rdx],dl
   1400448d1:	je     0x1400448e4
   1400448d3:	add    BYTE PTR [rdx],dl
   1400448d5:	ror    BYTE PTR [rbx],cl
   1400448d7:	push   rax
   1400448d8:	sbb    DWORD PTR [rip+0x5416000a],esp        # 0x1941a48e8
   1400448de:	adc    DWORD PTR [rax],eax
   1400448e0:	(bad)  
   1400448e1:	xor    al,0x10
   1400448e3:	add    BYTE PTR [rsi],dl
   1400448e5:	jb     0x1400448f9
   1400448e7:	lock adc al,ah
   1400448ea:	(bad)  
   1400448eb:	ror    BYTE PTR [rax+rsi*2],1
   1400448ee:	or     esp,DWORD PTR [rax-0x2c]
   1400448f1:	jge    0x1400448f5
   1400448f3:	add    BYTE PTR [rax],dh
   1400448f5:	add    BYTE PTR [rax],al
   1400448f7:	add    BYTE PTR [rcx],al
   1400448f9:	(bad)  
   1400448fa:	add    al,BYTE PTR [rax]
   1400448fc:	(bad)  
   1400448fd:	jb     0x140044901
   1400448ff:	xor    BYTE PTR [rcx],bl
   140044901:	sub    BYTE PTR [rdx],cl
   140044903:	add    BYTE PTR [rdx],bl
   140044905:	xor    al,0x1b
   140044907:	add    BYTE PTR [rdx],bl
   140044909:	repnz adc al,dh
   14004490c:	(bad)  
   14004490d:	loopne 0x14004491b
   14004490f:	ror    BYTE PTR [rdx],1
   140044911:	ror    BYTE PTR [rax],0x70
   140044914:	(bad)  
   140044915:	(bad)  
   140044916:	(bad)  
   140044917:	push   rax
   140044918:	(bad)  
   140044919:	jge    0x14004491d
   14004491b:	add    BYTE PTR [rax+0x0],dh
   14004491e:	add    BYTE PTR [rax],al
   140044920:	adc    DWORD PTR [rcx+rax*1],ecx
   140044923:	add    BYTE PTR [rdx+riz*1],al
   140044926:	add    BYTE PTR [rax],al
   140044928:	sbb    BYTE PTR [rax-0xdbffffe],dh
   14004492e:	add    eax,DWORD PTR [rax]
   140044930:	or     BYTE PTR [rbx-0xfffd],cl
   140044936:	(bad)  
   140044937:	call   QWORD PTR [rcx]
   140044939:	or     al,0x1
   14004493b:	add    BYTE PTR [rdx+riz*1],al
   14004493e:	add    BYTE PTR [rax],al
   140044940:	sbb    BYTE PTR [rax-0xd8ffffe],dh
   140044946:	add    eax,DWORD PTR [rax]
   140044948:	(bad)  
   140044949:	(bad)  
   14004494a:	(bad)  
   14004494b:	push   QWORD PTR [rdx]
   14004494d:	pop    rcx
   14004494e:	add    eax,DWORD PTR [rax]
   140044950:	(bad)  
   140044951:	(bad)  
   140044952:	(bad)  
   140044953:	(bad)  
   140044954:	ds pop rcx
   140044956:	add    eax,DWORD PTR [rax]
   140044958:	call   0x13f044ce7
   14004495d:	(bad)  
   14004495e:	(bad)  
   14004495f:	call   QWORD PTR [rcx]
   140044961:	or     al,0x1
   140044963:	add    BYTE PTR [rdx+riz*1],al
   140044966:	add    BYTE PTR [rax],al
   140044968:	sbb    BYTE PTR [rax-0xd5ffffe],dh
   14004496e:	add    eax,DWORD PTR [rax]
   140044970:	(bad)  
   140044971:	(bad)  
   140044972:	(bad)  
   140044973:	dec    DWORD PTR [rdx+0x59]
   140044976:	add    eax,DWORD PTR [rax]
   140044978:	(bad)  
   140044979:	(bad)  
   14004497a:	(bad)  
   14004497b:	call   QWORD PTR [rsi+0x59]
   14004497e:	add    eax,DWORD PTR [rax]
   140044980:	enter  0x38a,0x0
   140044984:	(bad)  
   140044985:	(bad)  
   140044986:	(bad)  
   140044987:	call   QWORD PTR [rcx]
   140044989:	or     eax,0x62040001
   14004498e:	add    BYTE PTR [rax],al
   140044990:	sbb    BYTE PTR [rax-0xd2ffffe],dh
   140044996:	add    eax,DWORD PTR [rax]
   140044998:	(bad)  
   140044999:	(bad)  
   14004499a:	(bad)  
   14004499b:	dec    DWORD PTR [rsi]
   14004499d:	pop    rcx
   14004499e:	add    eax,DWORD PTR [rax]
   1400449a0:	(bad)  
   1400449a1:	(bad)  
   1400449a2:	(bad)  
   1400449a3:	call   FWORD PTR [rdx]
   1400449a5:	pop    rcx
   1400449a6:	add    eax,DWORD PTR [rax]
   1400449a8:	xchg   DWORD PTR fs:[rbx],eax
   1400449ab:	add    bh,bh
   1400449ad:	(bad)  
   1400449ae:	(bad)  
   1400449af:	push   QWORD PTR [rcx-0x79]
   1400449b2:	add    eax,DWORD PTR [rax]
   1400449b4:	add    BYTE PTR [rax],al
   1400449b6:	add    BYTE PTR [rax],al
   1400449b8:	jg     0x140044941
   1400449ba:	add    eax,DWORD PTR [rax]
   1400449bc:	add    DWORD PTR [rax],eax
   1400449be:	add    BYTE PTR [rax],al
   1400449c0:	lea    eax,[rdi-0xfffd]
   1400449c6:	(bad)  
   1400449c7:	call   QWORD PTR [rcx]
   1400449c9:	or     eax,0x62040001
   1400449ce:	add    BYTE PTR [rax],al
   1400449d0:	sbb    BYTE PTR [rax-0xcfffffe],dh
   1400449d6:	add    eax,DWORD PTR [rax]
   1400449d8:	(bad)  
   1400449d9:	(bad)  
   1400449da:	(bad)  
   1400449db:	push   rsi
   1400449dd:	pop    rax
   1400449de:	add    eax,DWORD PTR [rax]
   1400449e0:	(bad)  
   1400449e1:	(bad)  
   1400449e2:	(bad)  
   1400449e3:	inc    DWORD PTR [rdx]
   1400449e5:	pop    rcx
   1400449e6:	add    eax,DWORD PTR [rax]
   1400449e8:	sub    BYTE PTR [rdi-0xfffd],al
   1400449ee:	(bad)  
   1400449ef:	push   QWORD PTR [rip+0x387]        # 0x140044d7c
   1400449f5:	add    BYTE PTR [rax],al
   1400449f7:	add    BYTE PTR [rbx-0x79],al
   1400449fa:	add    eax,DWORD PTR [rax]
   1400449fc:	add    DWORD PTR [rax],eax
   1400449fe:	add    BYTE PTR [rax],al
   140044a00:	push   rcx
   140044a01:	xchg   DWORD PTR [rbx],eax
   140044a03:	add    bh,bh
   140044a05:	(bad)  
   140044a06:	(bad)  
   140044a07:	call   QWORD PTR [rcx]
   140044a09:	or     eax,0x62040001
   140044a0e:	add    BYTE PTR [rax],al
   140044a10:	sbb    BYTE PTR [rax-0xccffffe],dh
   140044a16:	add    eax,DWORD PTR [rax]
   140044a18:	(bad)  
   140044a19:	(bad)  
   140044a1a:	(bad)  
   140044a1b:	jmp    QWORD PTR [rsi]
   140044a1d:	pop    rcx
   140044a1e:	add    eax,DWORD PTR [rax]
   140044a20:	cld    
   140044a21:	xchg   BYTE PTR [rbx],al
   140044a23:	add    bh,bh
   140044a25:	(bad)  
   140044a26:	(bad)  
   140044a27:	dec    DWORD PTR [rcx]
   140044a29:	xchg   DWORD PTR [rbx],eax
   140044a2b:	add    BYTE PTR [rax],al
   140044a2d:	add    BYTE PTR [rax],al
   140044a2f:	add    BYTE PTR [rdi],dl
   140044a31:	xchg   DWORD PTR [rbx],eax
   140044a33:	add    bh,bh
   140044a35:	(bad)  
   140044a36:	(bad)  
   140044a37:	call   FWORD PTR [rcx]
   140044a39:	and    BYTE PTR [rip+0x14621800],al        # 0x15466623f
   140044a3f:	loopne 0x140044a53
   140044a41:	jo     0x140044a54
   140044a43:	(bad)  
   140044a44:	adc    BYTE PTR [rax],dh
   140044a46:	add    BYTE PTR [rax],al
   140044a48:	sbb    BYTE PTR [rax-0xc9ffffe],dh
   140044a4e:	add    eax,DWORD PTR [rax]
   140044a50:	(bad)  
   140044a51:	(bad)  
   140044a52:	(bad)  
   140044a53:	inc    DWORD PTR [rax]
   140044a55:	add    BYTE PTR [rax],al
   140044a57:	add    bh,bh
   140044a59:	(bad)  
   140044a5a:	(bad)  
   140044a5b:	inc    DWORD PTR [rax]
   140044a5d:	add    BYTE PTR [rax],al
   140044a5f:	add    BYTE PTR [rcx],al
   140044a61:	add    BYTE PTR [rax],al
   140044a63:	add    BYTE PTR [rax],al
   140044a65:	add    BYTE PTR [rax],al
   140044a67:	add    BYTE PTR [rcx],al
   140044a69:	add    BYTE PTR [rax],al
   140044a6b:	add    BYTE PTR [rax],al
   140044a6d:	add    BYTE PTR [rax],al
   140044a6f:	add    bh,bh
   140044a71:	(bad)  
   140044a72:	(bad)  
   140044a73:	call   FWORD PTR [rbp+0x35a]
   140044a79:	add    BYTE PTR [rax],al
   140044a7b:	add    BYTE PTR [rax],al
   140044a7d:	add    BYTE PTR [rax],al
   140044a7f:	add    BYTE PTR [rbx],al
   140044a81:	add    BYTE PTR [rax],al
   140044a83:	add    BYTE PTR [rcx],al
   140044a85:	add    BYTE PTR [rax],al
   140044a87:	add    BYTE PTR [rax+0x200044a],ah
   140044a8d:	add    BYTE PTR [rax],al
   140044a8f:	add    BYTE PTR [rdx],al
   140044a91:	add    BYTE PTR [rax],al
   140044a93:	add    BYTE PTR [rbx],al
   140044a95:	add    BYTE PTR [rax],al
   140044a97:	add    BYTE PTR [rcx],al
   140044a99:	add    BYTE PTR [rax],al
   140044a9b:	add    BYTE PTR [rdx+rcx*2+0x4],dh
	...
   140044aaa:	add    BYTE PTR [rax],al
   140044aac:	sbb    bl,BYTE PTR [rdx+0x3]
   140044aaf:	add    BYTE PTR [rax],bh
	...
   140044abd:	add    BYTE PTR [rax],al
   140044abf:	add    BYTE PTR [rdx+0x5a],ah
   140044ac2:	add    eax,DWORD PTR [rax]
   140044ac4:	rex.W add BYTE PTR [rax],al
   140044ac7:	add    al,bh
   140044ac9:	and    eax,DWORD PTR [rax]
   140044acb:	add    bh,bh
   140044acd:	(bad)  
   140044ace:	(bad)  
   140044acf:	jmp    QWORD PTR [rdi+0x24]
   140044ad2:	add    BYTE PTR [rax],al
   140044ad4:	add    BYTE PTR [rax],al
   140044ad6:	add    BYTE PTR [rax],al
   140044ad8:	nop
   140044ad9:	and    al,0x0
   140044adb:	add    bh,bh
   140044add:	(bad)  
   140044ade:	(bad)  
   140044adf:	push   rbx
   140044ae1:	and    al,0x0
   140044ae3:	add    BYTE PTR [rax+rax*1],al
   140044ae6:	add    BYTE PTR [rax],al
   140044ae8:	mul    BYTE PTR [rax+rax*1]
   140044aeb:	add    bh,bh
   140044aed:	(bad)  
   140044aee:	(bad)  
   140044aef:	call   FWORD PTR [rdx]
   140044af1:	pop    rdx
   140044af2:	add    eax,DWORD PTR [rax]
   140044af4:	add    BYTE PTR [rax],al
   140044af6:	add    BYTE PTR [rax],al
   140044af8:	(bad)  
   140044af9:	pop    rdx
   140044afa:	add    eax,DWORD PTR [rax]
   140044afc:	add    DWORD PTR [rax],eax
   140044afe:	add    BYTE PTR [rax],al
   140044b00:	(bad)  
   140044b01:	pop    rdx
   140044b02:	add    eax,DWORD PTR [rax]
   140044b04:	add    al,BYTE PTR [rax]
   140044b06:	add    BYTE PTR [rax],al
   140044b08:	rex.WR pop rdx
   140044b0a:	add    eax,DWORD PTR [rax]
   140044b0c:	add    BYTE PTR [rax],al
   140044b0e:	add    BYTE PTR [rax],al
   140044b10:	push   rbp
   140044b11:	pop    rdx
   140044b12:	add    eax,DWORD PTR [rax]
   140044b14:	add    al,BYTE PTR [rax]
   140044b16:	add    BYTE PTR [rax],al
   140044b18:	pop    rbx
   140044b19:	pop    rdx
   140044b1a:	add    eax,DWORD PTR [rax]
   140044b1c:	add    BYTE PTR [rax],al
   140044b1e:	add    BYTE PTR [rax],al
   140044b20:	jo     0x140044b7c
   140044b22:	add    eax,DWORD PTR [rax]
   140044b24:	add    eax,DWORD PTR [rax]
   140044b26:	add    BYTE PTR [rax],al
   140044b28:	sbb    DWORD PTR [rdx],ecx
   140044b2a:	add    al,BYTE PTR [rax]
   140044b2c:	or     dh,BYTE PTR [rdx]
   140044b2e:	(bad)  
   140044b2f:	push   rax
   140044b30:	sbb    BYTE PTR [rax-0xc9ffffe],dh
   140044b36:	add    eax,DWORD PTR [rax]
   140044b38:	sbb    DWORD PTR [rbx],ecx
   140044b3a:	add    eax,DWORD PTR [rax]
   140044b3c:	or     eax,DWORD PTR [rdx+0x7]
   140044b3f:	push   rax
   140044b40:	(bad)  
   140044b41:	xor    BYTE PTR [rax],al
   140044b43:	add    BYTE PTR [rax],bl
   140044b45:	mov    al,0x2
   140044b47:	add    BYTE PTR [rax-0xd],ah
   140044b4a:	add    eax,DWORD PTR [rax]
   140044b4c:	sbb    DWORD PTR [rdx],esi
   140044b4e:	or     DWORD PTR [rax],eax
   140044b50:	and    BYTE PTR [rbp+rax*2+0x0],ah
   140044b54:	sbb    al,0x34
   140044b56:	add    BYTE PTR [rdi],r9b
   140044b59:	add    DWORD PTR [rsi],edi
   140044b5b:	add    BYTE PTR [rax],cl
   140044b5d:	lock (bad) 
   140044b5f:	loopne 0x140044b65
   140044b61:	jo     0x140044b63
   140044b63:	add    BYTE PTR [rax+riz*1+0x3],bh
   140044b67:	add    BYTE PTR [rax-0x1cfffc0d],dl
   140044b6d:	add    DWORD PTR [rax],eax
   140044b6f:	add    bh,bh
   140044b71:	(bad)  
   140044b72:	(bad)  
   140044b73:	(bad)  
   140044b74:	mov    ecx,0x35a
   140044b79:	add    BYTE PTR [rax],al
   140044b7b:	add    ch,al
   140044b7d:	pop    rdx
   140044b7e:	add    eax,DWORD PTR [rax]
   140044b80:	(bad)  
   140044b81:	(bad)  
   140044b82:	(bad)  
   140044b83:	call   rcx
   140044b85:	pop    rdx
   140044b86:	add    eax,DWORD PTR [rax]
   140044b88:	(bad)  
   140044b89:	(bad)  
   140044b8a:	(bad)  
   140044b8b:	inc    DWORD PTR [rax]
   140044b8d:	add    BYTE PTR [rax],al
   140044b8f:	add    bh,bh
   140044b91:	(bad)  
   140044b92:	(bad)  
   140044b93:	inc    DWORD PTR [rax]
   140044b95:	add    BYTE PTR [rax],al
   140044b97:	add    BYTE PTR [rbx],al
   140044b99:	add    BYTE PTR [rax],al
   140044b9b:	add    BYTE PTR [rbx],al
   140044b9d:	add    BYTE PTR [rax],al
   140044b9f:	add    BYTE PTR [rax+rax*1],al
   140044ba2:	add    BYTE PTR [rax],al
   140044ba4:	add    eax,DWORD PTR [rax]
   140044ba6:	add    BYTE PTR [rax],al
   140044ba8:	lods   al,BYTE PTR ds:[rsi]
   140044ba9:	rex.WXB add al,0x0
   140044bac:	or     BYTE PTR [rax],al
   140044bae:	add    BYTE PTR [rax],al
   140044bb0:	mov    eax,0x600004e4
   140044bb5:	add    BYTE PTR [rax],al
   140044bb7:	add    ch,bl
   140044bb9:	pop    rdx
   140044bba:	add    eax,DWORD PTR [rax]
   140044bbc:	pop    rax
   140044bbd:	add    BYTE PTR [rax],al
   140044bbf:	add    BYTE PTR [rax],cl
   140044bc1:	add    BYTE PTR [rax],al
   140044bc3:	add    BYTE PTR [rax-0x15],ah
   140044bc6:	add    al,0x0
   140044bc8:	push   rax
   140044bc9:	add    BYTE PTR [rax],al
   140044bcb:	add    BYTE PTR [rdx],ah
   140044bcd:	pop    rbx
   140044bce:	add    eax,DWORD PTR [rax]
   140044bd0:	pop    rax
   140044bd1:	add    BYTE PTR [rax],al
   140044bd3:	add    BYTE PTR [rax],cl
   140044bd5:	add    BYTE PTR [rax],al
   140044bd7:	add    BYTE PTR [rax],ch
   140044bd9:	in     al,dx
   140044bda:	add    al,0x0
   140044bdc:	pop    rax
   140044bdd:	add    BYTE PTR [rax],al
   140044bdf:	add    BYTE PTR [rbp+0x5b],dl
   140044be2:	add    eax,DWORD PTR [rax]
   140044be4:	pop    rax
   140044be5:	add    BYTE PTR [rax],al
   140044be7:	add    BYTE PTR [rsp+rbx*1],cl
   140044bea:	add    BYTE PTR [rax],al
   140044bec:	(bad)  
   140044bed:	(bad)  
   140044bee:	(bad)  
   140044bef:	push   rcx
   140044bf1:	sbb    al,0x0
   140044bf3:	add    BYTE PTR [rax],al
   140044bf5:	add    BYTE PTR [rax],al
   140044bf7:	add    BYTE PTR [rax],al
   140044bf9:	sbb    eax,0x10000
   140044bfe:	add    BYTE PTR [rax],al
   140044c00:	sbb    DWORD PTR [rip+0x0],ebx        # 0x140044c06
   140044c06:	add    BYTE PTR [rax],al
   140044c08:	(bad)  
   140044c09:	sbb    eax,0xffff0000
   140044c0e:	(bad)  
   140044c0f:	(bad)  
   140044c10:	mov    esp,0x200001d
   140044c15:	add    BYTE PTR [rax],al
   140044c17:	add    cl,dh
   140044c19:	sbb    eax,0xffff0000
   140044c1e:	(bad)  
   140044c1f:	dec    DWORD PTR [rip+0x300001e]        # 0x143044c43
   140044c25:	add    BYTE PTR [rax],al
   140044c27:	add    BYTE PTR [rdx],bh
   140044c29:	(bad)  
   140044c2a:	add    BYTE PTR [rax],al
   140044c2c:	(bad)  
   140044c2d:	(bad)  
   140044c2e:	(bad)  
   140044c2f:	(bad)  
   140044c30:	fstp   QWORD PTR [rdx+0x3]
   140044c33:	add    BYTE PTR [rax],al
   140044c35:	add    BYTE PTR [rax],al
   140044c37:	add    bl,ch
   140044c39:	pop    rdx
   140044c3a:	add    eax,DWORD PTR [rax]
   140044c3c:	add    al,0x0
   140044c3e:	add    BYTE PTR [rax],al
   140044c40:	adc    ebx,DWORD PTR [rbx+0x3]
   140044c43:	add    BYTE PTR [rax],al
   140044c45:	add    BYTE PTR [rax],al
   140044c47:	add    BYTE PTR [rax],dh
   140044c49:	pop    rbx
   140044c4a:	add    eax,DWORD PTR [rax]
   140044c4c:	add    al,0x0
   140044c4e:	add    BYTE PTR [rax],al
   140044c50:	rex.RX pop rbx
   140044c52:	add    eax,DWORD PTR [rax]
   140044c54:	add    BYTE PTR [rax],al
   140044c56:	add    BYTE PTR [rax],al
   140044c58:	movsxd ebx,DWORD PTR [rbx+0x3]
   140044c5b:	add    BYTE PTR [rax+rax*1],al
   140044c5e:	add    BYTE PTR [rax],al
   140044c60:	mov    esp,0x35b
   140044c65:	add    BYTE PTR [rax],al
   140044c67:	add    BYTE PTR [rcx],bl
   140044c69:	or     eax,DWORD PTR [rbx]
   140044c6b:	add    BYTE PTR [rbx],cl
   140044c6d:	(bad)  
   140044c6e:	(bad)  
   140044c6f:	push   rax
   140044c70:	(bad)  
   140044c71:	xor    BYTE PTR [rax],al
   140044c73:	add    BYTE PTR [rax],bl
   140044c75:	mov    al,0x2
   140044c77:	add    BYTE PTR [rax+0x110003f3],dl
   140044c7d:	adc    al,BYTE PTR [rcx]
   140044c7f:	add    BYTE PTR [rcx],cl
   140044c81:	(bad)  
   140044c82:	add    BYTE PTR [rax],al
   140044c84:	sbb    BYTE PTR [rax-0xc3ffffe],dh
   140044c8a:	add    eax,DWORD PTR [rax]
   140044c8c:	(bad)  
   140044c8d:	(bad)  
   140044c8e:	(bad)  
   140044c8f:	jmp    QWORD PTR [rdx-0x1bfffca8]
   140044c95:	sbb    eax,DWORD PTR [rax]
   140044c97:	add    bh,bh
   140044c99:	(bad)  
   140044c9a:	(bad)  
   140044c9b:	call   FWORD PTR [rcx]
   140044c9d:	or     al,BYTE PTR ss:[rax]
   140044ca0:	sbb    al,0x1
   140044ca2:	xor    eax,DWORD PTR [rax]
   140044ca4:	or     eax,0x9e00bf0
   140044ca9:	rol    BYTE PTR [rdi],1
   140044cab:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143645122
   140044cb2:	add    dl,BYTE PTR [rax+0x7c]
   140044cb5:	and    BYTE PTR [rbx],al
   140044cb7:	add    al,dh
   140044cb9:	repz add eax,DWORD PTR [rax]
   140044cbc:	(bad)  
   140044cbd:	add    DWORD PTR [rax],eax
   140044cbf:	add    bh,bh
   140044cc1:	(bad)  
   140044cc2:	(bad)  
   140044cc3:	jmp    FWORD PTR [rsi-0xfffca7]
   140044cc9:	(bad)  
   140044cca:	(bad)  
   140044ccb:	(bad)  
   140044ccc:	mov    edx,0x1000359
   140044cd1:	add    BYTE PTR [rax],al
   140044cd3:	add    dh,al
   140044cd5:	pop    rcx
   140044cd6:	add    eax,DWORD PTR [rax]
   140044cd8:	(bad)  
   140044cd9:	(bad)  
   140044cda:	(bad)  
   140044cdb:	inc    DWORD PTR [rax]
   140044cdd:	add    BYTE PTR [rax],al
   140044cdf:	add    bh,bh
   140044ce1:	(bad)  
   140044ce2:	(bad)  
   140044ce3:	inc    DWORD PTR [rax]
   140044ce5:	add    BYTE PTR [rax],al
   140044ce7:	add    bh,bh
   140044ce9:	(bad)  
   140044cea:	(bad)  
   140044ceb:	inc    DWORD PTR [rax]
   140044ced:	add    BYTE PTR [rax],al
   140044cef:	add    BYTE PTR [rcx],al
   140044cf1:	add    BYTE PTR [rax],al
   140044cf3:	add    dl,dl
   140044cf5:	pop    rcx
   140044cf6:	add    eax,DWORD PTR [rax]
   140044cf8:	(bad)  
   140044cf9:	add    BYTE PTR [rax],al
   140044cfb:	add    dh,bl
   140044cfd:	pop    rcx
   140044cfe:	add    eax,DWORD PTR [rax]
   140044d00:	(bad)  
   140044d01:	(bad)  
   140044d02:	(bad)  
   140044d03:	inc    DWORD PTR [rax]
   140044d05:	add    BYTE PTR [rax],al
   140044d07:	add    BYTE PTR [rcx],al
   140044d09:	add    BYTE PTR [rax],al
   140044d0b:	add    dl,ch
   140044d0d:	pop    rcx
   140044d0e:	add    eax,DWORD PTR [rax]
   140044d10:	add    DWORD PTR [rax],eax
   140044d12:	add    BYTE PTR [rax],al
   140044d14:	neg    BYTE PTR [rcx+0x3]
   140044d17:	add    BYTE PTR [rcx],al
   140044d19:	add    BYTE PTR [rax],al
   140044d1b:	add    BYTE PTR [rax],al
   140044d1d:	add    BYTE PTR [rax],al
   140044d1f:	add    bh,bh
   140044d21:	(bad)  
   140044d22:	(bad)  
   140044d23:	inc    DWORD PTR [rax]
   140044d25:	add    BYTE PTR [rax],al
   140044d27:	add    BYTE PTR [rcx],al
   140044d29:	add    BYTE PTR [rax],al
   140044d2b:	add    BYTE PTR [rdx],al
   140044d2d:	pop    rdx
   140044d2e:	add    eax,DWORD PTR [rax]
   140044d30:	(bad)  
   140044d31:	(bad)  
   140044d32:	(bad)  
   140044d33:	dec    DWORD PTR [rsi]
   140044d35:	pop    rdx
   140044d36:	add    eax,DWORD PTR [rax]
   140044d38:	or     al,0x17
   140044d3a:	add    BYTE PTR [rax],al
   140044d3c:	(bad)  
   140044d3d:	(bad)  
   140044d3e:	(bad)  
   140044d3f:	call   QWORD PTR [rcx]
   140044d41:	sbb    BYTE PTR [rax],al
   140044d43:	add    BYTE PTR [rcx],al
   140044d45:	add    BYTE PTR [rax],al
   140044d47:	add    BYTE PTR [rax],ch
   140044d49:	sbb    BYTE PTR [rax],al
   140044d4b:	add    BYTE PTR [rdx],al
   140044d4d:	add    BYTE PTR [rax],al
   140044d4f:	add    BYTE PTR [rbx],bh
   140044d51:	sbb    BYTE PTR [rax],al
   140044d53:	add    BYTE PTR [rcx],al
   140044d55:	add    BYTE PTR [rax],al
   140044d57:	add    BYTE PTR [rdi+0x1a],dl
   140044d5a:	add    BYTE PTR [rax],al
   140044d5c:	(bad)  
   140044d5d:	add    BYTE PTR [rax],al
   140044d5f:	add    BYTE PTR [rax+0x1a],bh
   140044d62:	add    BYTE PTR [rax],al
   140044d64:	(bad)  
   140044d65:	add    BYTE PTR [rax],al
   140044d67:	add    BYTE PTR [rbp+0x600001a],cl
   140044d6d:	add    BYTE PTR [rax],al
   140044d6f:	add    BYTE PTR [rsi+0x100001a],dl
   140044d75:	add    BYTE PTR [rax],al
   140044d77:	add    bh,ah
   140044d79:	sbb    al,BYTE PTR [rax]
   140044d7b:	add    BYTE PTR [rcx],cl
   140044d7d:	add    BYTE PTR [rax],al
   140044d7f:	add    al,bh
   140044d81:	sbb    al,BYTE PTR [rax]
   140044d83:	add    BYTE PTR [rdx],cl
   140044d85:	add    BYTE PTR [rax],al
   140044d87:	add    BYTE PTR [rbx+rbx*1+0x10000],bl
   140044d8e:	add    BYTE PTR [rax],al
   140044d90:	scas   al,BYTE PTR es:[rdi]
   140044d91:	sbb    eax,DWORD PTR [rax]
   140044d93:	add    bh,bh
   140044d95:	(bad)  
   140044d96:	(bad)  
   140044d97:	inc    DWORD PTR [rcx]
   140044d99:	or     eax,0x340d0006
   140044d9e:	or     al,0x0
   140044da0:	or     eax,0x7e00952
   140044da5:	jo     0x140044dad
   140044da7:	(bad)  
   140044da8:	adc    DWORD PTR [rax],ebx
   140044daa:	add    eax,0x18341800
   140044daf:	add    BYTE PTR [rbx],cl
   140044db1:	add    DWORD PTR [rsi],edx
   140044db3:	add    BYTE PTR [rax+rsi*2],al
   140044db6:	add    BYTE PTR [rax],al
   140044db8:	sbb    BYTE PTR [rax-0xbdffffe],dh
   140044dbe:	add    eax,DWORD PTR [rax]
   140044dc0:	(bad)  
   140044dc1:	(bad)  
   140044dc2:	(bad)  
   140044dc3:	jmp    QWORD PTR [rdx-0x17fffca7]
   140044dc9:	adc    eax,0xffff0000
   140044dce:	(bad)  
   140044dcf:	(bad)  
   140044dd0:	(bad)  
   140044dd1:	(bad)  
   140044dd2:	add    BYTE PTR [rax],al
   140044dd4:	add    BYTE PTR [rax],al
   140044dd6:	add    BYTE PTR [rax],al
   140044dd8:	sbb    DWORD PTR [rdi+rax*1],esi
   140044ddb:	add    BYTE PTR [rbx],ah
   140044ddd:	je     0x140044e34
   140044ddf:	add    BYTE PTR [rdi],bl
   140044de1:	xor    al,0x54
   140044de3:	add    BYTE PTR [rdx],dl
   140044de5:	add    DWORD PTR [rdx+0x0],edx
   140044de8:	add    al,0x50
   140044dea:	add    BYTE PTR [rax],al
   140044dec:	jl     0x140044e0e
   140044dee:	add    eax,DWORD PTR [rax]
   140044df0:	push   rax
   140044df1:	hlt    
   140044df2:	add    eax,DWORD PTR [rax]
   140044df4:	(bad)  
   140044df5:	add    al,BYTE PTR [rax]
   140044df7:	add    bh,bh
   140044df9:	(bad)  
   140044dfa:	(bad)  
   140044dfb:	jmp    QWORD PTR [rdx+0x59]
   140044dfe:	add    eax,DWORD PTR [rax]
   140044e00:	add    BYTE PTR [rax],al
   140044e02:	add    BYTE PTR [rax],al
   140044e04:	jb     0x140044e5f
   140044e06:	add    eax,DWORD PTR [rax]
   140044e08:	(bad)  
   140044e09:	(bad)  
   140044e0a:	(bad)  
   140044e0b:	inc    DWORD PTR [rdx+0x2000359]
   140044e11:	add    BYTE PTR [rax],al
   140044e13:	add    BYTE PTR [rdx-0x4ffffca7],dl
   140044e19:	adc    al,0x0
   140044e1b:	add    bh,bh
   140044e1d:	(bad)  
   140044e1e:	(bad)  
   140044e1f:	push   QWORD PTR [rdx*1+0x0]
   140044e26:	add    BYTE PTR [rax],al
   140044e28:	rex.XB adc eax,0xffff0000
   140044e2e:	(bad)  
   140044e2f:	(bad)  
   140044e30:	jle    0x140044e47
   140044e32:	add    BYTE PTR [rax],al
   140044e34:	add    al,BYTE PTR [rax]
   140044e36:	add    BYTE PTR [rax],al
   140044e38:	lea    edx,[rip+0xffffffffffff0000]        # 0x140034e3e
   140044e3e:	(bad)  
   140044e3f:	call   QWORD PTR [rcx]
   140044e41:	adc    DWORD PTR [rcx],eax
   140044e43:	add    BYTE PTR [rcx],cl
   140044e45:	and    al,BYTE PTR [rax]
   140044e47:	add    BYTE PTR [rax],bl
   140044e49:	mov    al,0x2
   140044e4b:	add    BYTE PTR [rax-0xfffc0c],al
   140044e51:	(bad)  
   140044e52:	(bad)  
   140044e53:	jmp    FWORD PTR [rsi+0x60000358]
   140044e59:	adc    al,0x0
   140044e5b:	add    bh,bh
   140044e5d:	(bad)  
   140044e5e:	(bad)  
   140044e5f:	call   QWORD PTR [rcx]
   140044e61:	adc    eax,DWORD PTR [rdx]
   140044e63:	add    BYTE PTR [rdx],cl
   140044e65:	push   rdx
   140044e66:	(bad)  
   140044e67:	xor    BYTE PTR [rax],bl
   140044e69:	mov    al,0x2
   140044e6b:	add    BYTE PTR [rax-0xfffc0c],dh
   140044e71:	(bad)  
   140044e72:	(bad)  
   140044e73:	inc    esi
   140044e75:	pop    rax
   140044e76:	add    eax,DWORD PTR [rax]
   140044e78:	sub    al,0x14
   140044e7a:	add    BYTE PTR [rax],al
   140044e7c:	(bad)  
   140044e7d:	(bad)  
   140044e7e:	(bad)  
   140044e7f:	call   QWORD PTR [rcx]
   140044e81:	sbb    BYTE PTR [rax+rax*1],al
   140044e84:	sbb    BYTE PTR [rax+rcx*1],dh
   140044e87:	add    BYTE PTR [rdx+rdx*2],cl
   140044e8a:	or     BYTE PTR [rax+0x18],dh
   140044e8d:	mov    al,0x2
   140044e8f:	add    al,ah
   140044e91:	hlt    
   140044e92:	add    eax,DWORD PTR [rax]
   140044e94:	mov    BYTE PTR [rdx],dl
   140044e96:	add    BYTE PTR [rax],al
   140044e98:	(bad)  
   140044e99:	(bad)  
   140044e9a:	(bad)  
   140044e9b:	(bad)  
   140044e9c:	jmp    0x140044eb0
   140044e9e:	add    BYTE PTR [rax],al
   140044ea0:	add    BYTE PTR [rax],al
   140044ea2:	add    BYTE PTR [rax],al
   140044ea4:	adc    DWORD PTR [rbx],edx
   140044ea6:	add    al,BYTE PTR [rax]
   140044ea8:	or     dl,BYTE PTR [rdx+0x6]
   140044eab:	xor    BYTE PTR [rax],bl
   140044ead:	mov    al,0x2
   140044eaf:	add    BYTE PTR [rax],dl
   140044eb1:	cmc    
   140044eb2:	add    eax,DWORD PTR [rax]
   140044eb4:	(bad)  
   140044eb5:	(bad)  
   140044eb6:	(bad)  
   140044eb7:	(bad)  
   140044eb8:	ficomp WORD PTR [rax+0x3]
   140044ebb:	add    bh,bh
   140044ebd:	(bad)  
   140044ebe:	(bad)  
   140044ebf:	(bad)  
   140044ec0:	(bad)  
   140044ec1:	pop    rax
   140044ec2:	add    eax,DWORD PTR [rax]
   140044ec4:	rex.WR adc r8b,BYTE PTR [rax]
   140044ec7:	add    bh,bh
   140044ec9:	(bad)  
   140044eca:	(bad)  
   140044ecb:	call   QWORD PTR [rcx]
   140044ecd:	adc    eax,DWORD PTR [rdx]
   140044ecf:	add    BYTE PTR [rdx],cl
   140044ed1:	push   rdx
   140044ed2:	(bad)  
   140044ed3:	xor    BYTE PTR [rax],bl
   140044ed5:	mov    al,0x2
   140044ed7:	add    BYTE PTR [rax-0xb],al
   140044eda:	add    eax,DWORD PTR [rax]
   140044edc:	(bad)  
   140044edd:	(bad)  
   140044ede:	(bad)  
   140044edf:	dec    ebx
   140044ee1:	pop    rbx
   140044ee2:	add    eax,DWORD PTR [rax]
   140044ee4:	in     al,dx
   140044ee5:	adc    DWORD PTR [rax],eax
   140044ee7:	add    bh,bh
   140044ee9:	(bad)  
   140044eea:	(bad)  
   140044eeb:	push   QWORD PTR [rdi]
   140044eed:	adc    al,BYTE PTR [rax]
   140044eef:	add    BYTE PTR [rax],al
   140044ef1:	add    BYTE PTR [rax],al
   140044ef3:	add    BYTE PTR [rcx],dl
   140044ef5:	adc    DWORD PTR [rcx],eax
   140044ef7:	add    BYTE PTR [rcx],cl
   140044ef9:	and    al,BYTE PTR [rax]
   140044efb:	add    BYTE PTR [rax],bl
   140044efd:	mov    al,0x2
   140044eff:	add    BYTE PTR [rax-0xb],dh
   140044f02:	add    eax,DWORD PTR [rax]
   140044f04:	(bad)  
   140044f05:	(bad)  
   140044f06:	(bad)  
   140044f07:	(bad)  
   140044f08:	mov    edx,0xc4000358
   140044f0d:	adc    DWORD PTR [rax],eax
   140044f0f:	add    bh,bh
   140044f11:	(bad)  
   140044f12:	(bad)  
   140044f13:	call   QWORD PTR [rcx]
   140044f15:	adc    eax,DWORD PTR [rdx]
   140044f17:	add    BYTE PTR [rdx],cl
   140044f19:	push   rdx
   140044f1a:	(bad)  
   140044f1b:	xor    BYTE PTR [rax],bl
   140044f1d:	mov    al,0x2
   140044f1f:	add    BYTE PTR [rax-0xfffc0b],ah
   140044f25:	(bad)  
   140044f26:	(bad)  
   140044f27:	call   rdx
   140044f29:	pop    rax
   140044f2a:	add    eax,DWORD PTR [rax]
   140044f2c:	nop
   140044f2d:	adc    DWORD PTR [rax],eax
   140044f2f:	add    bh,bh
   140044f31:	(bad)  
   140044f32:	(bad)  
   140044f33:	call   QWORD PTR [rcx]
   140044f35:	sbb    BYTE PTR [rax+rax*1],al
   140044f38:	sbb    BYTE PTR [rax+rcx*1],dh
   140044f3b:	add    BYTE PTR [rdx+rdx*2],cl
   140044f3e:	or     BYTE PTR [rax+0x18],dh
   140044f41:	mov    al,0x2
   140044f43:	add    al,dl
   140044f45:	cmc    
   140044f46:	add    eax,DWORD PTR [rax]
   140044f48:	adc    al,0x11
   140044f4a:	add    BYTE PTR [rax],al
   140044f4c:	(bad)  
   140044f4d:	(bad)  
   140044f4e:	(bad)  
   140044f4f:	push   QWORD PTR [rdi+0x11]
   140044f52:	add    BYTE PTR [rax],al
   140044f54:	add    BYTE PTR [rax],al
   140044f56:	add    BYTE PTR [rax],al
   140044f58:	add    DWORD PTR [rdx],edx
   140044f5a:	add    eax,0xe421200
   140044f5f:	jo     0x140044f6e
   140044f61:	(bad)  
   140044f62:	or     al,0x50
   140044f64:	or     esi,DWORD PTR [rax]
   140044f66:	add    BYTE PTR [rax],al
   140044f68:	adc    DWORD PTR [rdx],ebx
   140044f6a:	add    eax,DWORD PTR [rax]
   140044f6c:	adc    DWORD PTR [rcx],eax
   140044f6e:	xor    al,BYTE PTR [rax]
   140044f70:	add    dl,BYTE PTR [rax+0x0]
   140044f73:	add    BYTE PTR [rax],bl
   140044f75:	mov    al,0x2
   140044f77:	add    BYTE PTR [rax],dl
   140044f79:	test   BYTE PTR [rbx],0x0
   140044f7c:	(bad)  
   140044f7d:	(bad)  
   140044f7e:	(bad)  
   140044f7f:	dec    DWORD PTR [rip+0x35c]        # 0x1400452e1
   140044f85:	add    BYTE PTR [rax],al
   140044f87:	add    BYTE PTR [rip+0xffffffffc800035c],bl        # 0x1080452e9
   140044f8d:	sub    DWORD PTR [rax],eax
   140044f8f:	add    bh,bh
   140044f91:	(bad)  
   140044f92:	(bad)  
   140044f93:	(bad)  
   140044f94:	mov    edx,0x2a
   140044f99:	add    BYTE PTR [rax],al
   140044f9b:	add    ah,cl
   140044f9d:	sub    al,BYTE PTR [rax]
   140044f9f:	add    bh,bh
   140044fa1:	(bad)  
   140044fa2:	(bad)  
   140044fa3:	call   FWORD PTR [rcx]
   140044fa5:	(bad)  
   140044fa6:	or     eax,0x57742600
   140044fab:	add    BYTE PTR [rsi],ah
   140044fad:	fs push rsi
   140044faf:	add    BYTE PTR [rsi],ah
   140044fb1:	xor    al,0x55
   140044fb3:	add    BYTE PTR [rsi],ah
   140044fb5:	add    DWORD PTR [rsi+0x0],ecx
   140044fb8:	sbb    al,dh
   140044fba:	(bad)  
   140044fbb:	loopne 0x140044fd1
   140044fbd:	rcl    BYTE PTR [rdx],1
   140044fbf:	rcl    BYTE PTR [rax],0x50
   140044fc2:	add    BYTE PTR [rax],al
   140044fc4:	(bad)  
   140044fc5:	jge    0x140044fc9
   140044fc7:	add    BYTE PTR [rax+0x2],ah
   140044fca:	add    BYTE PTR [rax],al
   140044fcc:	adc    DWORD PTR [rbx],edx
   140044fce:	add    al,BYTE PTR [rax]
   140044fd0:	or     dl,BYTE PTR [rdx+0x6]
   140044fd3:	xor    BYTE PTR [rax],bl
   140044fd5:	mov    al,0x2
   140044fd7:	add    BYTE PTR [rax-0xa],al
   140044fda:	add    eax,DWORD PTR [rax]
   140044fdc:	(bad)  
   140044fdd:	(bad)  
   140044fde:	(bad)  
   140044fdf:	push   rcx
   140044fe1:	pop    rbx
   140044fe2:	add    eax,DWORD PTR [rax]
   140044fe4:	add    BYTE PTR [rax],al
   140044fe6:	add    BYTE PTR [rax],al
   140044fe8:	std    
   140044fe9:	pop    rbx
   140044fea:	add    eax,DWORD PTR [rax]
   140044fec:	jl     0x140045013
   140044fee:	add    BYTE PTR [rax],al
   140044ff0:	(bad)  
   140044ff1:	(bad)  
   140044ff2:	(bad)  
   140044ff3:	jmp    QWORD PTR [rdi+0x1000025]
   140044ff9:	add    BYTE PTR [rax],al
   140044ffb:	add    BYTE PTR [rcx],dl
   140044ffd:	add    BYTE PTR es:[rax],al
   140045000:	add    BYTE PTR [rax],al
   140045002:	add    BYTE PTR [rax],al
   140045004:	sbb    al,0x26
   140045006:	add    BYTE PTR [rax],al
   140045008:	(bad)  
   140045009:	(bad)  
   14004500a:	(bad)  
   14004500b:	inc    DWORD PTR [rcx]
   14004500d:	sbb    eax,0x341d000a
   140045012:	adc    BYTE PTR [rax],al
   140045014:	sbb    eax,0x17f01952
   140045019:	loopne 0x140045030
   14004501b:	rcl    BYTE PTR [rbx],1
   14004501d:	rcl    BYTE PTR [rcx],0x70
   140045020:	adc    BYTE PTR [rax+0xf],ah
   140045023:	push   rax
   140045024:	add    DWORD PTR [rax],ebx
   140045026:	or     al,BYTE PTR [rax]
   140045028:	sbb    BYTE PTR [rdi+rcx*1+0x0],ah
   14004502c:	sbb    BYTE PTR [rsi+rcx*1+0x0],dl
   140045030:	sbb    BYTE PTR [rcx*1+0x14721800],dh
   140045037:	lock adc ah,al
   14004503a:	adc    BYTE PTR [rax+0x11],dh
   14004503d:	adc    eax,DWORD PTR [rdx]
   14004503f:	add    BYTE PTR [rdx],cl
   140045041:	push   rdx
   140045042:	(bad)  
   140045043:	xor    BYTE PTR [rax],bl
   140045045:	mov    al,0x2
   140045047:	add    BYTE PTR [rax-0xa],dh
   14004504a:	add    eax,DWORD PTR [rax]
   14004504c:	(bad)  
   14004504d:	(bad)  
   14004504e:	(bad)  
   14004504f:	(bad)  
   140045050:	call   FWORD PTR [rsi+0x3]
   140045053:	add    BYTE PTR [rax],bh
   140045055:	sub    eax,DWORD PTR [rax]
   140045057:	add    bh,bh
   140045059:	(bad)  
   14004505a:	(bad)  
   14004505b:	call   QWORD PTR [rcx]
   14004505d:	sbb    al,BYTE PTR [rax+rax*1]
   140045060:	adc    dl,BYTE PTR [rdx+0xe]
   140045063:	jo     0x140045072
   140045065:	(bad)  
   140045066:	or     al,0x30
   140045068:	sbb    BYTE PTR [rax-0x95ffffe],dh
   14004506e:	add    eax,DWORD PTR [rax]
   140045070:	(bad)  
   140045071:	(bad)  
   140045072:	(bad)  
   140045073:	(bad)  
   140045074:	fistp  DWORD PTR [rbx+rax*1+0x0]
   140045078:	add    BYTE PTR [rax],al
   14004507a:	add    BYTE PTR [rax],al
   14004507c:	neg    DWORD PTR [rbx+rax*1+0x0]
   140045080:	pop    rsp
   140045081:	cmp    eax,0xffff0000
   140045086:	(bad)  
   140045087:	inc    DWORD PTR [rax+0x3d]
   14004508d:	add    BYTE PTR [rax],al
   14004508f:	add    al,al
   140045091:	cmp    eax,0x10000
   140045096:	add    BYTE PTR [rax],al
   140045098:	(bad)  
   140045099:	cmp    eax,0x0
   14004509e:	add    BYTE PTR [rax],al
   1400450a0:	call   0x13f0450e2
   1400450a5:	(bad)  
   1400450a6:	(bad)  
   1400450a7:	call   FWORD PTR [rcx]
   1400450a9:	sbb    al,BYTE PTR [rax+rax*1]
   1400450ac:	adc    DWORD PTR [rdx+0xd],edx
   1400450af:	jo     0x1400450bd
   1400450b1:	(bad)  
   1400450b2:	or     esi,DWORD PTR [rax]
   1400450b4:	sbb    BYTE PTR [rax-0x92ffffe],dh
   1400450ba:	add    eax,DWORD PTR [rax]
	...
   1400450c4:	add    DWORD PTR [rax],eax
   1400450c6:	add    BYTE PTR [rax],al
   1400450c8:	add    DWORD PTR [rax],eax
   1400450ca:	add    BYTE PTR [rax],al
   1400450cc:	rcl    BYTE PTR [rax+0x4],1
	...
   1400450db:	add    BYTE PTR [rdx+0x4800035c],dl
   1400450e1:	add    BYTE PTR [rax],al
   1400450e3:	add    BYTE PTR [rdi*1-0x10000],al
   1400450ea:	(bad)  
   1400450eb:	jmp    FWORD PTR [rdi*1+0x0]
   1400450f2:	add    BYTE PTR [rax],al
   1400450f4:	push   rax
   1400450f5:	cmp    eax,0xffff0000
   1400450fa:	(bad)  
   1400450fb:	call   QWORD PTR [rdx+0x35c]
   140045101:	add    BYTE PTR [rax],al
   140045103:	add    BYTE PTR [rax+0x100035c],ah
   140045109:	add    BYTE PTR [rax],al
   14004510b:	add    BYTE PTR [rcx],bl
   14004510d:	or     eax,DWORD PTR [rbx]
   14004510f:	add    BYTE PTR [rbx],cl
   140045111:	rex.X (bad) 
   140045113:	push   rax
   140045114:	(bad)  
   140045115:	xor    BYTE PTR [rax],al
   140045117:	add    BYTE PTR [rax],bl
   140045119:	mov    al,0x2
   14004511b:	add    al,dl
   14004511d:	test   BYTE PTR [rbx],0x0
   140045120:	adc    DWORD PTR [rcx],ebx
   140045122:	(bad)  
   140045123:	add    BYTE PTR [rcx],bl
   140045125:	or     eax,DWORD PTR fs:[rax]
   140045128:	adc    al,0x34
   14004512a:	or     al,BYTE PTR [rax]
   14004512c:	(bad)  
   14004512d:	push   rdx
   14004512e:	add    dh,BYTE PTR [rax+0x18]
   140045131:	mov    al,0x2
   140045133:	add    BYTE PTR [rax],al
   140045135:	test   DWORD PTR [rbx],0xffffff00
   14004513b:	call   QWORD PTR [rbx+0x5d]
   14004513e:	add    eax,DWORD PTR [rax]
   140045140:	pop    rax
   140045141:	cmp    al,0x0
   140045143:	add    bh,bh
   140045145:	(bad)  
   140045146:	(bad)  
   140045147:	inc    esi
   140045149:	cmp    al,0x0
   14004514b:	add    BYTE PTR [rax],al
   14004514d:	add    BYTE PTR [rax],al
   14004514f:	add    ah,cl
   140045151:	cmp    al,0x0
   140045153:	add    bh,bh
   140045155:	(bad)  
   140045156:	(bad)  
   140045157:	call   FWORD PTR [rcx]
   140045159:	sbb    eax,DWORD PTR [rcx]
   14004515b:	add    BYTE PTR [rbx],dl
   14004515d:	(bad)  
   14004515e:	add    BYTE PTR [rax],al
   140045160:	sbb    BYTE PTR [rax-0x8cffffe],dh
   140045166:	add    eax,DWORD PTR [rax]
   140045168:	(bad)  
   140045169:	(bad)  
   14004516a:	(bad)  
   14004516b:	inc    DWORD PTR [rax]
   14004516d:	add    BYTE PTR [rax],al
   14004516f:	add    BYTE PTR [rax],al
   140045171:	add    BYTE PTR [rax],al
   140045173:	add    BYTE PTR [rip+0xffffffffff00035c],ch        # 0x13f0454d5
   140045179:	(bad)  
   14004517a:	(bad)  
   14004517b:	inc    DWORD PTR [rax]
   14004517d:	add    BYTE PTR [rax],al
   14004517f:	add    BYTE PTR [rax],al
   140045181:	add    BYTE PTR [rax],al
   140045183:	add    BYTE PTR [rcx],al
   140045185:	add    BYTE PTR [rax],al
   140045187:	add    BYTE PTR [rdx],al
   140045189:	add    BYTE PTR [rax],al
   14004518b:	add    BYTE PTR [rcx],al
   14004518d:	add    BYTE PTR [rax],al
   14004518f:	add    BYTE PTR [rcx+rdx*2+0x4],dl
	...
   14004519e:	add    BYTE PTR [rax],al
   1400451a0:	rex.WB pop r12
   1400451a2:	add    eax,DWORD PTR [rax]
   1400451a4:	rex.W add BYTE PTR [rax],al
   1400451a7:	add    ah,ah
   1400451a9:	cmp    eax,DWORD PTR [rax]
   1400451ab:	add    bh,bh
   1400451ad:	(bad)  
   1400451ae:	(bad)  
   1400451af:	inc    DWORD PTR [rsp+rdi*1]
   1400451b2:	add    BYTE PTR [rax],al
   1400451b4:	add    BYTE PTR [rax],al
   1400451b6:	add    BYTE PTR [rax],al
   1400451b8:	adc    DWORD PTR [rax+rax*1],edi
   1400451bb:	add    BYTE PTR [rcx],al
   1400451bd:	add    BYTE PTR [rax],al
   1400451bf:	add    BYTE PTR [rip+0x3c],bh        # 0x140045201
   1400451c5:	add    BYTE PTR [rax],al
   1400451c7:	add    BYTE PTR [rax+0x3c],dl
   1400451ca:	add    BYTE PTR [rax],al
   1400451cc:	(bad)  
   1400451cd:	(bad)  
   1400451ce:	(bad)  
   1400451cf:	dec    DWORD PTR [rcx+0x5c]
   1400451d2:	add    eax,DWORD PTR [rax]
   1400451d4:	add    BYTE PTR [rax],al
   1400451d6:	add    BYTE PTR [rax],al
   1400451d8:	push   rdi
   1400451d9:	pop    rsp
   1400451da:	add    eax,DWORD PTR [rax]
   1400451dc:	add    al,BYTE PTR [rax]
   1400451de:	add    BYTE PTR [rax],al
   1400451e0:	sbb    DWORD PTR [rbx],ecx
   1400451e2:	add    eax,DWORD PTR [rax]
   1400451e4:	or     eax,DWORD PTR [rdx+0x7]
   1400451e7:	push   rax
   1400451e8:	(bad)  
   1400451e9:	xor    BYTE PTR [rax],al
   1400451eb:	add    BYTE PTR [rax],bl
   1400451ed:	mov    al,0x2
   1400451ef:	add    BYTE PTR [rax],dh
   1400451f1:	test   DWORD PTR [rbx],0x6221900
   1400451f7:	add    BYTE PTR [rdx],bl
   1400451f9:	push   rdx
   1400451fa:	(bad)  
   1400451fb:	lock adc al,0xe0
   1400451fe:	adc    dh,BYTE PTR [rax+0x11]
   140045201:	(bad)  
   140045202:	adc    BYTE PTR [rax],dh
   140045204:	sbb    BYTE PTR [rax-0x89ffffe],dh
   14004520a:	add    eax,DWORD PTR [rax]
   14004520c:	(bad)  
   14004520d:	(bad)  
   14004520e:	(bad)  
   14004520f:	inc    DWORD PTR [rax]
   140045211:	add    BYTE PTR [rax],al
   140045213:	add    bh,bh
   140045215:	(bad)  
   140045216:	(bad)  
   140045217:	inc    DWORD PTR [rax]
   140045219:	add    BYTE PTR [rax],al
   14004521b:	add    BYTE PTR [rcx],al
   14004521d:	add    BYTE PTR [rax],al
   14004521f:	add    BYTE PTR [rax],al
   140045221:	add    BYTE PTR [rax],al
   140045223:	add    BYTE PTR [rcx],al
   140045225:	add    BYTE PTR [rax],al
   140045227:	add    BYTE PTR [rax],al
   140045229:	add    BYTE PTR [rax],al
   14004522b:	add    bh,bh
   14004522d:	(bad)  
   14004522e:	(bad)  
   14004522f:	inc    DWORD PTR [rax]
   140045231:	pop    rsi
   140045232:	add    eax,DWORD PTR [rax]
	...
   14004523c:	add    eax,DWORD PTR [rax]
   14004523e:	add    BYTE PTR [rax],al
   140045240:	add    DWORD PTR [rax],eax
   140045242:	add    BYTE PTR [rax],al
   140045244:	pop    rsp
   140045245:	push   rdx
   140045246:	add    al,0x0
   140045248:	add    al,BYTE PTR [rax]
   14004524a:	add    BYTE PTR [rax],al
   14004524c:	add    al,BYTE PTR [rax]
   14004524e:	add    BYTE PTR [rax],al
   140045250:	add    eax,DWORD PTR [rax]
   140045252:	add    BYTE PTR [rax],al
   140045254:	add    DWORD PTR [rax],eax
   140045256:	add    BYTE PTR [rax],al
   140045258:	jo     0x1400452ac
   14004525a:	add    al,0x0
	...
   140045268:	outs   dx,DWORD PTR ds:[rsi]
   140045269:	pop    rbp
   14004526a:	add    eax,DWORD PTR [rax]
   14004526c:	cmp    BYTE PTR [rax],al
	...
   14004527a:	add    BYTE PTR [rax],al
   14004527c:	ret    
   14004527d:	pop    rbp
   14004527e:	add    eax,DWORD PTR [rax]
   140045280:	rex.W add BYTE PTR [rax],al
   140045283:	add    BYTE PTR [rdx+rdi*1-0x10000],ch
   14004528a:	(bad)  
   14004528b:	jmp    QWORD PTR [rax]
   14004528d:	cmp    eax,DWORD PTR [rax]
   14004528f:	add    BYTE PTR [rax],al
   140045291:	add    BYTE PTR [rax],al
   140045293:	add    BYTE PTR [rdi+0x3b],dl
   140045296:	add    BYTE PTR [rax],al
   140045298:	(bad)  
   140045299:	(bad)  
   14004529a:	(bad)  
   14004529b:	(bad)  
   14004529c:	mov    esp,0x400003b
   1400452a1:	add    BYTE PTR [rax],al
   1400452a3:	add    BYTE PTR [rdi-0xffffc5],bh
   1400452a9:	(bad)  
   1400452aa:	(bad)  
   1400452ab:	jmp    FWORD PTR [rdi+0x5d]
   1400452ae:	add    eax,DWORD PTR [rax]
   1400452b0:	add    BYTE PTR [rax],al
   1400452b2:	add    BYTE PTR [rax],al
   1400452b4:	jl     0x140045313
   1400452b6:	add    eax,DWORD PTR [rax]
   1400452b8:	add    DWORD PTR [rax],eax
   1400452ba:	add    BYTE PTR [rax],al
   1400452bc:	test   BYTE PTR [rbp+0x3],bl
   1400452bf:	add    BYTE PTR [rdx],al
   1400452c1:	add    BYTE PTR [rax],al
   1400452c3:	add    BYTE PTR [rbp+0x35d],ch
   1400452c9:	add    BYTE PTR [rax],al
   1400452cb:	add    BYTE PTR [rsi+0x200035d],dh
   1400452d1:	add    BYTE PTR [rax],al
   1400452d3:	add    BYTE PTR [rbp+rbx*2+0x3],bh
   1400452da:	add    BYTE PTR [rax],al
   1400452dc:	rcr    DWORD PTR [rbp+0x3],1
   1400452df:	add    BYTE PTR [rbx],al
   1400452e1:	add    BYTE PTR [rax],al
   1400452e3:	add    BYTE PTR [rcx],bl
   1400452e5:	or     al,BYTE PTR [rdx]
   1400452e7:	add    BYTE PTR [rdx],cl
   1400452e9:	xor    al,BYTE PTR [rsi]
   1400452eb:	push   rax
   1400452ec:	sbb    BYTE PTR [rax-0x89ffffe],dh
   1400452f2:	add    eax,DWORD PTR [rax]
   1400452f4:	sbb    DWORD PTR [rbx],ecx
   1400452f6:	add    eax,DWORD PTR [rax]
   1400452f8:	or     eax,DWORD PTR [rdx+0x7]
   1400452fb:	push   rax
   1400452fc:	(bad)  
   1400452fd:	xor    BYTE PTR [rax],al
   1400452ff:	add    BYTE PTR [rax],bl
   140045301:	mov    al,0x2
   140045303:	add    BYTE PTR [rax-0x9],ah
   140045306:	add    eax,DWORD PTR [rax]
   140045308:	sbb    DWORD PTR [rax],esp
   14004530a:	or     al,BYTE PTR [rax]
   14004530c:	and    BYTE PTR [rax+rdx*1+0x0],ah
   140045310:	sbb    al,0x34
   140045312:	(bad)  
   140045313:	add    BYTE PTR [rax],dl
   140045315:	jb     0x140045323
   140045317:	lock or ah,al
   14004531a:	or     al,dl
   14004531c:	(bad)  
   14004531d:	rol    BYTE PTR [rax+rsi*2],0x18
   140045321:	mov    al,0x2
   140045323:	add    BYTE PTR [rax+0x3f7],dl
   140045329:	add    BYTE PTR [rax],al
   14004532b:	add    BYTE PTR [rax],al
   14004532d:	add    BYTE PTR [rax],al
   14004532f:	add    BYTE PTR [rcx],al
   140045331:	add    BYTE PTR [rax],al
   140045333:	add    BYTE PTR [rcx],al
   140045335:	add    BYTE PTR [rax],al
   140045337:	add    BYTE PTR [rbx+rdx*2],bh
   14004533a:	add    al,0x0
	...
   140045348:	cmp    al,0x5e
   14004534a:	add    eax,DWORD PTR [rax]
   14004534c:	rex.W add BYTE PTR [rax],al
   14004534f:	add    BYTE PTR [rax],dl
   140045351:	cmp    DWORD PTR [rax],eax
   140045353:	add    bh,bh
   140045355:	(bad)  
   140045356:	(bad)  
   140045357:	push   QWORD PTR [rcx+rdi*1+0x0]
   14004535b:	add    BYTE PTR [rax],al
   14004535d:	add    BYTE PTR [rax],al
   14004535f:	add    BYTE PTR [rcx+rdi*1-0x10000],al
   140045366:	(bad)  
   140045367:	(bad)  
   140045368:	cmp    al,0x5e
   14004536a:	add    eax,DWORD PTR [rax]
   14004536c:	add    BYTE PTR [rax],al
   14004536e:	add    BYTE PTR [rax],al
   140045370:	rex.WB pop r14
   140045372:	add    eax,DWORD PTR [rax]
   140045374:	add    DWORD PTR [rax],eax
   140045376:	add    BYTE PTR [rax],al
   140045378:	sbb    DWORD PTR [rdx],ecx
   14004537a:	add    al,BYTE PTR [rax]
   14004537c:	or     dl,BYTE PTR [rdx+0x6]
   14004537f:	push   rax
   140045380:	sbb    BYTE PTR [rax-0x86ffffe],dh
   140045386:	add    eax,DWORD PTR [rax]
   140045388:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b4215396
   14004538e:	or     eax,DWORD PTR [rax]
   140045390:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140045394:	adc    eax,0x9000834
   140045399:	push   rdx
   14004539a:	add    eax,0x2b018e0
   14004539f:	add    al,al
   1400453a1:	test   DWORD PTR [rbx],0x0
   1400453a7:	add    BYTE PTR [rax],al
   1400453a9:	add    BYTE PTR [rax],al
   1400453ab:	add    BYTE PTR [rcx],al
   1400453ad:	add    BYTE PTR [rax],al
   1400453af:	add    BYTE PTR [rcx],al
   1400453b1:	add    BYTE PTR [rax],al
   1400453b3:	add    BYTE PTR [rax+0x453],bh
	...
   1400453c1:	add    BYTE PTR [rax],al
   1400453c3:	add    BYTE PTR [rsi+rbx*2],bl
   1400453c6:	add    eax,DWORD PTR [rax]
   1400453c8:	cmp    BYTE PTR [rax],al
   1400453ca:	add    BYTE PTR [rax],al
   1400453cc:	pop    rax
   1400453cd:	cmp    BYTE PTR [rax],al
   1400453cf:	add    bh,bh
   1400453d1:	(bad)  
   1400453d2:	(bad)  
   1400453d3:	push   QWORD PTR [rbp+0x38]
   1400453d9:	add    BYTE PTR [rax],al
   1400453db:	add    ah,cl
   1400453dd:	cmp    BYTE PTR [rax],al
   1400453df:	add    bh,bh
   1400453e1:	(bad)  
   1400453e2:	(bad)  
   1400453e3:	call   FWORD PTR [rsi+rbx*2]
   1400453e6:	add    eax,DWORD PTR [rax]
   1400453e8:	add    BYTE PTR [rax],al
   1400453ea:	add    BYTE PTR [rax],al
   1400453ec:	sub    DWORD PTR [rsi+0x3],ebx
   1400453ef:	add    BYTE PTR [rcx],al
   1400453f1:	add    BYTE PTR [rax],al
   1400453f3:	add    BYTE PTR [rcx],bl
   1400453f5:	or     al,BYTE PTR [rdx]
   1400453f7:	add    BYTE PTR [rdx],cl
   1400453f9:	xor    al,BYTE PTR [rsi]
   1400453fb:	push   rax
   1400453fc:	sbb    BYTE PTR [rax-0x83ffffe],dh
   140045402:	add    eax,DWORD PTR [rax]
   140045404:	add    DWORD PTR [rdx+rcx*1],ebx
   140045407:	add    BYTE PTR [rsp+riz*2],bl
   14004540a:	or     eax,DWORD PTR [rax]
   14004540c:	sbb    al,0x54
   14004540e:	or     DWORD PTR [rax],eax
   140045410:	sbb    al,0x34
   140045412:	or     BYTE PTR [rax],al
   140045414:	sbb    al,0x32
   140045416:	sbb    al,dh
   140045418:	(bad)  
   140045419:	loopne 0x14004542f
   14004541b:	jo     0x140045436
   14004541d:	sbb    BYTE PTR [rax+rax*1],al
   140045420:	sbb    BYTE PTR [rbx+rcx*1],dh
   140045423:	add    BYTE PTR [rdx+rsi*2],cl
   140045426:	or     BYTE PTR [rax+0x18],dh
   140045429:	mov    al,0x2
   14004542b:	add    al,dh
   14004542d:	test   DWORD PTR [rbx],0x0
   140045433:	add    BYTE PTR [rax],al
   140045435:	add    BYTE PTR [rax],al
   140045437:	add    BYTE PTR [rcx],al
   140045439:	add    BYTE PTR [rax],al
   14004543b:	add    BYTE PTR [rcx],al
   14004543d:	add    BYTE PTR [rax],al
   14004543f:	add    BYTE PTR [rsp+rdx*2+0x4],al
	...
   14004544f:	add    BYTE PTR [rbx+0x6800035e],dl
   140045455:	add    BYTE PTR [rax],al
   140045457:	add    al,ch
   140045459:	xor    eax,DWORD PTR [rax]
   14004545b:	add    bh,bh
   14004545d:	(bad)  
   14004545e:	(bad)  
   14004545f:	jmp    QWORD PTR [rdi+0x34]
   140045465:	add    BYTE PTR [rax],al
   140045467:	add    cl,al
   140045469:	xor    al,0x0
   14004546b:	add    bh,bh
   14004546d:	(bad)  
   14004546e:	(bad)  
   14004546f:	call   QWORD PTR [rbx+0x35e]
   140045475:	add    BYTE PTR [rax],al
   140045477:	add    BYTE PTR [rbx+0x100035e],ah
   14004547d:	add    BYTE PTR [rax],al
   14004547f:	add    BYTE PTR [rcx],bl
   140045481:	or     eax,0x620d0005
   140045486:	or     DWORD PTR [rax+0x8],esi
   140045489:	(bad)  
   14004548a:	(bad)  
   14004548b:	push   rax
   14004548c:	(bad)  
   14004548d:	xor    BYTE PTR [rax],al
   14004548f:	add    BYTE PTR [rax],bl
   140045491:	mov    al,0x2
   140045493:	add    al,dh
   140045495:	test   DWORD PTR [rbx],0x61c1900
   14004549b:	add    BYTE PTR [rsp+riz*2],bl
   14004549e:	or     al,0x0
   1400454a0:	sbb    BYTE PTR [rbx+rcx*1],dh
   1400454a3:	add    BYTE PTR [rdx+rsi*2],cl
   1400454a6:	or     BYTE PTR [rax+0x18],dh
   1400454a9:	mov    al,0x2
   1400454ab:	add    BYTE PTR [rax],ah
   1400454ad:	clc    
   1400454ae:	add    eax,DWORD PTR [rax]
	...
   1400454b8:	add    DWORD PTR [rax],eax
   1400454ba:	add    BYTE PTR [rax],al
   1400454bc:	add    DWORD PTR [rax],eax
   1400454be:	add    BYTE PTR [rax],al
   1400454c0:	(bad)  
   1400454c1:	push   rsp
   1400454c2:	add    al,0x0
	...
   1400454d0:	pop    rsp
   1400454d1:	pop    rsi
   1400454d2:	add    eax,DWORD PTR [rax]
   1400454d4:	rex.W add BYTE PTR [rax],al
   1400454d7:	add    BYTE PTR [rdx+rsi*1],ch
   1400454da:	add    BYTE PTR [rax],al
   1400454dc:	(bad)  
   1400454dd:	(bad)  
   1400454de:	(bad)  
   1400454df:	call   QWORD PTR [rip+0x33]        # 0x140045518
   1400454e5:	add    BYTE PTR [rax],al
   1400454e7:	add    BYTE PTR [rbp+0x33],al
   1400454ea:	add    BYTE PTR [rax],al
   1400454ec:	(bad)  
   1400454ed:	(bad)  
   1400454ee:	(bad)  
   1400454ef:	call   FWORD PTR [rsi+rbx*2+0x3]
   1400454f3:	add    BYTE PTR [rax],al
   1400454f5:	add    BYTE PTR [rax],al
   1400454f7:	add    BYTE PTR [rdx+0x5e],ch
   1400454fa:	add    eax,DWORD PTR [rax]
   1400454fc:	add    DWORD PTR [rax],eax
   1400454fe:	add    BYTE PTR [rax],al
   140045500:	sbb    DWORD PTR [rbx],ecx
   140045502:	add    eax,DWORD PTR [rax]
   140045504:	or     eax,DWORD PTR [rdx+0x7]
   140045507:	push   rax
   140045508:	(bad)  
   140045509:	xor    BYTE PTR [rax],al
   14004550b:	add    BYTE PTR [rax],bl
   14004550d:	mov    al,0x2
   14004550f:	add    BYTE PTR [rax],ah
   140045511:	clc    
   140045512:	add    eax,DWORD PTR [rax]
   140045514:	add    DWORD PTR [rip+0x34050002],eax        # 0x17409551c
   14004551a:	add    DWORD PTR [rax],eax
   14004551c:	add    DWORD PTR [rsi],eax
   14004551e:	add    al,BYTE PTR [rax]
   140045520:	(bad)  
   140045521:	push   rdx
   140045522:	add    dh,BYTE PTR [rax]
   140045524:	sbb    DWORD PTR [rax],ebx
   140045526:	add    al,BYTE PTR [rax]
   140045528:	or     edx,esi
   14004552a:	add    dh,BYTE PTR [rax]
   14004552c:	(bad)  
   14004552d:	jge    0x140045531
   14004552f:	add    BYTE PTR [rax+0x0],dh
   140045532:	add    BYTE PTR [rax],al
   140045534:	adc    DWORD PTR [rbx],edx
   140045536:	add    al,BYTE PTR [rax]
   140045538:	or     dl,BYTE PTR [rdx+0x6]
   14004553b:	xor    BYTE PTR [rax],bl
   14004553d:	mov    al,0x2
   14004553f:	add    BYTE PTR [rax-0x8],dl
   140045542:	add    eax,DWORD PTR [rax]
   140045544:	clc    
   140045545:	xor    BYTE PTR [rax],al
   140045547:	add    bh,bh
   140045549:	(bad)  
   14004554a:	(bad)  
   14004554b:	dec    DWORD PTR [rsi]
   14004554d:	xor    DWORD PTR [rax],eax
   14004554f:	add    BYTE PTR [rax],al
   140045551:	add    BYTE PTR [rax],al
   140045553:	add    BYTE PTR [rax],bl
   140045555:	xor    DWORD PTR [rax],eax
   140045557:	add    bh,bh
   140045559:	(bad)  
   14004555a:	(bad)  
   14004555b:	call   QWORD PTR [rcx]
   14004555d:	sbb    al,0x2
   14004555f:	add    BYTE PTR [rdx+rdx*2],dl
   140045562:	adc    BYTE PTR [rax],dh
   140045564:	sbb    BYTE PTR [rax-0x77ffffe],dh
   14004556a:	add    eax,DWORD PTR [rax]
   14004556c:	(bad)  
   14004556d:	(bad)  
   14004556e:	(bad)  
   14004556f:	push   QWORD PTR [rbx]
   140045571:	pop    rbp
   140045572:	add    eax,DWORD PTR [rax]
   140045574:	add    BYTE PTR [rax],al
   140045576:	add    BYTE PTR [rax],al
   140045578:	rex.XB pop r13
   14004557a:	add    eax,DWORD PTR [rax]
   14004557c:	xchg   esp,eax
   14004557d:	(bad)  
   14004557e:	add    BYTE PTR [rax],al
   140045580:	(bad)  
   140045581:	(bad)  
   140045582:	(bad)  
   140045583:	dec    edx
   140045585:	(bad)  
   140045586:	add    BYTE PTR [rax],al
   140045588:	add    BYTE PTR [rax],al
   14004558a:	add    BYTE PTR [rax],al
   14004558c:	(bad)  
   14004558d:	(bad)  
   14004558e:	add    BYTE PTR [rax],al
   140045590:	add    DWORD PTR [rax],eax
   140045592:	add    BYTE PTR [rax],al
   140045594:	call   0x13f0455c8
   140045599:	(bad)  
   14004559a:	(bad)  
   14004559b:	call   QWORD PTR [rcx]
   14004559d:	and    ecx,DWORD PTR [rdx]
   14004559f:	add    BYTE PTR [rbx],ah
   1400455a1:	push   rsp
   1400455a2:	(bad)  
   1400455a3:	add    BYTE PTR [rdi],bl
   1400455a5:	xor    al,0xd
   1400455a7:	add    BYTE PTR [rbx],dl
   1400455a9:	push   rdx
   1400455aa:	(bad)  
   1400455ac:	or     eax,0x9c00be0
   1400455b1:	jo     0x1400455bb
   1400455b3:	(bad)  
   1400455b4:	sbb    BYTE PTR [rax-0x74ffffe],dh
   1400455ba:	add    eax,DWORD PTR [rax]
   1400455bc:	(bad)  
   1400455bd:	(bad)  
   1400455be:	(bad)  
   1400455bf:	call   QWORD PTR [rbx]
   1400455c1:	pop    rbp
   1400455c2:	add    eax,DWORD PTR [rax]
   1400455c4:	add    BYTE PTR [rax],al
   1400455c6:	add    BYTE PTR [rax],al
   1400455c8:	and    ebx,DWORD PTR [rbp+0x3]
   1400455cb:	add    ah,dh
   1400455cd:	(bad)  
   1400455ce:	add    BYTE PTR [rax],al
   1400455d0:	(bad)  
   1400455d1:	(bad)  
   1400455d2:	(bad)  
   1400455d3:	(bad)  
   1400455d4:	cmp    eax,0x30
   1400455d9:	add    BYTE PTR [rax],al
   1400455db:	add    BYTE PTR [rax+rsi*1+0x0],cl
   1400455df:	add    BYTE PTR [rcx],al
   1400455e1:	add    BYTE PTR [rax],al
   1400455e3:	add    ah,bl
   1400455e5:	xor    BYTE PTR [rax],al
   1400455e7:	add    bh,bh
   1400455e9:	(bad)  
   1400455ea:	(bad)  
   1400455eb:	inc    DWORD PTR [rcx]
   1400455ed:	sbb    BYTE PTR [rdx],cl
   1400455ef:	add    BYTE PTR [rax],bl
   1400455f1:	fs (bad) 
   1400455f3:	add    BYTE PTR [rax],bl
   1400455f5:	push   rsp
   1400455f6:	or     eax,0xc341800
   1400455fb:	add    BYTE PTR [rax],bl
   1400455fd:	jb     0x140045613
   1400455ff:	lock adc ah,al
   140045602:	adc    BYTE PTR [rax+0x19],dh
   140045605:	or     DWORD PTR cs:[rax],eax
   140045608:	adc    eax,DWORD PTR [rcx]
   14004560a:	(bad)  
   14004560b:	add    BYTE PTR [rax+rsi*8],cl
   14004560e:	or     ah,al
   140045610:	or     al,dl
   140045612:	(bad)  
   140045613:	rol    BYTE PTR [rax+rsi*2],0x3
   140045617:	(bad)  
   140045618:	add    dh,BYTE PTR [rax]
   14004561a:	add    BYTE PTR [rax],al
   14004561c:	jl     0x14004563e
   14004561e:	add    eax,DWORD PTR [rax]
   140045620:	loopne 0x14004561a
   140045622:	add    eax,DWORD PTR [rax]
   140045624:	jrcxz  0x140045626
   140045626:	add    BYTE PTR [rax],al
   140045628:	(bad)  
   140045629:	(bad)  
   14004562a:	(bad)  
   14004562b:	inc    DWORD PTR [rax]
   14004562d:	add    BYTE PTR [rax],al
   14004562f:	add    BYTE PTR [rax],al
   140045631:	add    BYTE PTR [rax],al
   140045633:	add    BYTE PTR [rbx+0x5f],ch
   140045636:	add    eax,DWORD PTR [rax]
   140045638:	(bad)  
   140045639:	(bad)  
   14004563a:	(bad)  
   14004563b:	inc    DWORD PTR [rax]
   14004563d:	add    BYTE PTR [rax],al
   14004563f:	add    BYTE PTR [rax],al
   140045641:	add    BYTE PTR [rax],al
   140045643:	add    BYTE PTR [rcx],al
   140045645:	add    BYTE PTR [rax],al
   140045647:	add    BYTE PTR [rdx],al
   140045649:	add    BYTE PTR [rax],al
   14004564b:	add    BYTE PTR [rcx],al
   14004564d:	add    BYTE PTR [rax],al
   14004564f:	add    BYTE PTR [rsi+rdx*2+0x4],dl
   140045653:	add    BYTE PTR [rax],al
   140045655:	add    BYTE PTR [rax],al
   140045657:	add    BYTE PTR [rax-0x12],al
   14004565a:	add    al,0x0
   14004565c:	add    BYTE PTR [rax],al
   14004565e:	add    BYTE PTR [rax],al
   140045660:	ja     0x1400456c1
   140045662:	add    eax,DWORD PTR [rax]
   140045664:	rex.W add BYTE PTR [rax],al
   140045667:	add    al,al
   140045669:	add    BYTE PTR [rax],r8b
   14004566c:	(bad)  
   14004566d:	(bad)  
   14004566e:	(bad)  
   14004566f:	jmp    FWORD PTR [rip+0x47]        # 0x1400456bc
   140045675:	add    BYTE PTR [rax],al
   140045677:	add    BYTE PTR [rbx],bh
   140045679:	rex.RXB add BYTE PTR [r8],r8b
   14004567c:	add    DWORD PTR [rax],eax
   14004567e:	add    BYTE PTR [rax],al
   140045680:	rex.WB
   140045681:	rex.RXB add BYTE PTR [r8],r8b
   140045684:	add    BYTE PTR [rax],al
   140045686:	add    BYTE PTR [rax],al
   140045688:	pop    rsi
   140045689:	rex.RXB add BYTE PTR [r8],r8b
   14004568c:	(bad)  
   14004568d:	(bad)  
   14004568e:	(bad)  
   14004568f:	push   QWORD PTR [rdi+0x5f]
   140045692:	add    eax,DWORD PTR [rax]
   140045694:	add    BYTE PTR [rax],al
   140045696:	add    BYTE PTR [rax],al
   140045698:	test   BYTE PTR [rdi+0x3],bl
   14004569b:	add    BYTE PTR [rdx],al
   14004569d:	add    BYTE PTR [rax],al
   14004569f:	add    BYTE PTR [rdx+0x35f],dl
   1400456a5:	add    BYTE PTR [rax],al
   1400456a7:	add    BYTE PTR [rcx],bl
   1400456a9:	or     al,BYTE PTR [rdx]
   1400456ab:	add    BYTE PTR [rdx],cl
   1400456ad:	push   rdx
   1400456ae:	(bad)  
   1400456af:	push   rax
   1400456b0:	sbb    BYTE PTR [rax-0x71ffffe],dh
   1400456b6:	add    eax,DWORD PTR [rax]
   1400456b8:	sbb    DWORD PTR [rsi],esp
   1400456ba:	add    eax,0x32010b00
   1400456bf:	add    BYTE PTR [rax+rsi*2],al
   1400456c2:	add    esp,DWORD PTR [rax+0x2]
   1400456c5:	xor    BYTE PTR [rax],al
   1400456c7:	add    BYTE PTR [rax+riz*1+0x3],bh
   1400456cb:	add    BYTE PTR [rax],dl
   1400456cd:	stc    
   1400456ce:	add    eax,DWORD PTR [rax]
   1400456d0:	add    DWORD PTR [rcx],0x0
   1400456d3:	add    bh,bh
   1400456d5:	(bad)  
   1400456d6:	(bad)  
   1400456d7:	inc    DWORD PTR [rax]
   1400456d9:	add    BYTE PTR [rax],al
   1400456db:	add    BYTE PTR [rax],al
   1400456dd:	add    BYTE PTR [rax],al
   1400456df:	add    BYTE PTR [rbx],cl
   1400456e1:	pop    rdi
   1400456e2:	add    eax,DWORD PTR [rax]
   1400456e4:	(bad)  
   1400456e5:	(bad)  
   1400456e6:	(bad)  
   1400456e7:	inc    DWORD PTR [rax]
   1400456e9:	add    BYTE PTR [rax],al
   1400456eb:	add    BYTE PTR [rax],al
   1400456ed:	add    BYTE PTR [rax],al
   1400456ef:	add    BYTE PTR [rcx],al
   1400456f1:	add    BYTE PTR [rax],al
   1400456f3:	add    BYTE PTR [rdx],al
   1400456f5:	add    BYTE PTR [rax],al
   1400456f7:	add    BYTE PTR [rcx],al
   1400456f9:	add    BYTE PTR [rax],al
   1400456fb:	add    BYTE PTR [rax],al
   1400456fd:	push   rdi
   1400456fe:	add    al,0x0
   140045700:	or     BYTE PTR [rax],al
   140045702:	add    BYTE PTR [rax],al
   140045704:	out    dx,al
   140045706:	add    al,0x0
   140045708:	(bad)  
   140045709:	add    BYTE PTR [rax],al
   14004570b:	add    BYTE PTR [rdi],dl
   14004570d:	pop    rdi
   14004570e:	add    eax,DWORD PTR [rax]
   140045710:	pop    rax
   140045711:	add    BYTE PTR [rax],al
   140045713:	add    ah,ch
   140045715:	add    BYTE PTR [r8],al
   140045718:	(bad)  
   140045719:	(bad)  
   14004571a:	(bad)  
   14004571b:	push   QWORD PTR [rbx+0x44]
   14004571e:	add    BYTE PTR [rax],al
   140045720:	add    BYTE PTR [rax],al
   140045722:	add    BYTE PTR [rax],al
   140045724:	add    DWORD PTR [rax+rax*1+0x0],0x1
   14004572c:	pop    QWORD PTR [rax+rax*1+0x0]
   140045730:	add    BYTE PTR [rax],al
   140045732:	add    BYTE PTR [rax],al
   140045734:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045735:	add    BYTE PTR [rax],r8b
   140045738:	(bad)  
   140045739:	(bad)  
   14004573a:	(bad)  
   14004573b:	call   QWORD PTR [rdi]
   14004573d:	pop    rdi
   14004573e:	add    eax,DWORD PTR [rax]
   140045740:	add    BYTE PTR [rax],al
   140045742:	add    BYTE PTR [rax],al
   140045744:	and    eax,0x200035f
   140045749:	add    BYTE PTR [rax],al
   14004574b:	add    BYTE PTR [rdi+rbx*2+0x3],bl
   14004574f:	add    BYTE PTR [rax],al
   140045751:	add    BYTE PTR [rax],al
   140045753:	add    BYTE PTR [rcx],bl
   140045755:	or     eax,DWORD PTR [rbx]
   140045757:	add    BYTE PTR [rbx],cl
   140045759:	(bad)  
   14004575a:	(bad)  
   14004575b:	push   rax
   14004575c:	(bad)  
   14004575d:	xor    BYTE PTR [rax],al
   14004575f:	add    BYTE PTR [rax],bl
   140045761:	mov    al,0x2
   140045763:	add    BYTE PTR [rax],dl
   140045765:	stc    
   140045766:	add    eax,DWORD PTR [rax]
   140045768:	adc    DWORD PTR [rbx],edx
   14004576a:	add    al,BYTE PTR [rax]
   14004576c:	or     dl,BYTE PTR [rdx+0x6]
   14004576f:	xor    BYTE PTR [rax],bl
   140045771:	mov    al,0x2
   140045773:	add    BYTE PTR [rax-0x7],al
   140045776:	add    eax,DWORD PTR [rax]
   140045778:	mov    eax,0xff000041
   14004577d:	(bad)  
   14004577e:	(bad)  
   14004577f:	call   FWORD PTR [rcx]
   140045781:	(bad)  
   140045782:	(bad)  
   140045783:	add    BYTE PTR [rdi],cl
   140045785:	str    WORD PTR fs:[rdi]
   140045789:	xor    al,0xe
   14004578b:	add    BYTE PTR [rdi],cl
   14004578d:	xchg   edx,eax
   14004578e:	or     esi,DWORD PTR [rax-0x2c]
   140045791:	jge    0x140045795
   140045793:	add    BYTE PTR [rax+0x0],al
   140045796:	add    BYTE PTR [rax],al
   140045798:	sbb    DWORD PTR [rdi],ebx
   14004579a:	or     BYTE PTR [rax],al
   14004579c:	adc    BYTE PTR [rax+rdx*1],dh
   14004579f:	add    BYTE PTR [rax],dl
   1400457a1:	jb     0x1400457af
   1400457a3:	lock or ah,al
   1400457a6:	or     BYTE PTR [rax+0x7],dh
   1400457a9:	(bad)  
   1400457aa:	(bad)  
   1400457ab:	push   rax
   1400457ac:	(bad)  
   1400457ad:	jge    0x1400457b1
   1400457af:	add    BYTE PTR [rax],bh
   1400457b1:	add    BYTE PTR [rax],al
   1400457b3:	add    BYTE PTR [rcx],bl
   1400457b5:	(bad)  
   1400457b6:	or     BYTE PTR [rax],al
   1400457b8:	adc    BYTE PTR [rdx+rdx*1],dh
   1400457bb:	add    BYTE PTR [rax],dl
   1400457bd:	xchg   edx,eax
   1400457be:	or     al,0xf0
   1400457c0:	or     ah,al
   1400457c2:	or     BYTE PTR [rax+0x7],dh
   1400457c5:	(bad)  
   1400457c6:	(bad)  
   1400457c7:	push   rax
   1400457c8:	(bad)  
   1400457c9:	jge    0x1400457cd
   1400457cb:	add    BYTE PTR [rax+0x0],al
   1400457ce:	add    BYTE PTR [rax],al
   1400457d0:	add    DWORD PTR [rcx],edx
   1400457d2:	add    al,0x0
   1400457d4:	adc    DWORD PTR [rdx],esi
   1400457d6:	or     eax,0xb600c70
   1400457db:	xor    BYTE PTR [rcx],dl
   1400457dd:	sbb    DWORD PTR [rsi],eax
   1400457df:	add    BYTE PTR [rcx],bl
   1400457e1:	or     al,BYTE PTR fs:[rax]
   1400457e4:	adc    al,0x34
   1400457e6:	or     DWORD PTR [rax],eax
   1400457e8:	(bad)  
   1400457e9:	push   rdx
   1400457ea:	add    dh,BYTE PTR [rax+0x18]
   1400457ed:	mov    al,0x2
   1400457ef:	add    BYTE PTR [rax-0x7],dh
   1400457f2:	add    eax,DWORD PTR [rax]
   1400457f4:	(bad)  
   1400457f5:	(bad)  
   1400457f6:	(bad)  
   1400457f7:	call   QWORD PTR [rbp+rbp*2+0x3]
   1400457fe:	add    BYTE PTR [rax],al
   140045800:	movabs al,ds:0xff0000478400036d
   140045809:	(bad)  
   14004580a:	(bad)  
   14004580b:	jmp    FWORD PTR [rdi+0x47]
   140045811:	add    BYTE PTR [rax],al
   140045813:	add    ah,dl
   140045815:	rex.RXB add BYTE PTR [r8],r8b
   140045818:	add    DWORD PTR [rax],eax
   14004581a:	add    BYTE PTR [rax],al
   14004581c:	rex.RXB
   14004581d:	rex.W add BYTE PTR [rax],al
   140045820:	add    BYTE PTR [rax],al
   140045822:	add    BYTE PTR [rax],al
   140045824:	rex.WXB
   140045825:	rex.W add BYTE PTR [rax],al
   140045828:	(bad)  
   140045829:	(bad)  
   14004582a:	(bad)  
   14004582b:	call   FWORD PTR [rcx]
   14004582d:	(bad)  
   14004582e:	add    eax,0x1f340d00
   140045833:	add    BYTE PTR [rip+0x6001c01],cl        # 0x14604743a
   140045839:	jo     0x14004583b
   14004583b:	add    ah,dl
   14004583d:	jge    0x140045841
   14004583f:	add    al,dl
   140045841:	add    BYTE PTR [rax],al
   140045843:	add    BYTE PTR [rcx],cl
   140045845:	add    al,0x1
   140045847:	add    BYTE PTR [rdx+riz*2],al
   14004584a:	add    BYTE PTR [rax],al
   14004584c:	xor    QWORD PTR [rdx],rax
   14004584f:	add    BYTE PTR [rcx],al
   140045851:	add    BYTE PTR [rax],al
   140045853:	add    BYTE PTR [rdx+rdx*2+0x52b60000],ch
   14004585a:	add    BYTE PTR [rax],al
   14004585c:	add    DWORD PTR [rax],eax
   14004585e:	add    BYTE PTR [rax],al
   140045860:	mov    dh,0x52
   140045862:	add    BYTE PTR [rax],al
   140045864:	sbb    DWORD PTR [rcx],ebx
   140045866:	add    al,0x0
   140045868:	or     dh,BYTE PTR [rdx+rcx*1]
   14004586b:	add    BYTE PTR [rdx],cl
   14004586d:	jb     0x140045875
   14004586f:	jo     0x140045845
   140045871:	jge    0x140045875
   140045873:	add    BYTE PTR [rax],dh
   140045875:	add    BYTE PTR [rax],al
   140045877:	add    BYTE PTR [rcx],bl
   140045879:	and    eax,0x74170008
   14004587e:	lldt   WORD PTR [rdi]
   140045881:	fs (bad) 
   140045883:	add    BYTE PTR [rdi],dl
   140045885:	xor    al,0xd
   140045887:	add    BYTE PTR [rdi],dl
   140045889:	xchg   edx,eax
   14004588a:	adc    BYTE PTR [rax-0x2c],dl
   14004588d:	jge    0x140045891
   14004588f:	add    BYTE PTR [rax+0x0],al
   140045892:	add    BYTE PTR [rax],al
   140045894:	sbb    DWORD PTR [rip+0xffffffffe41f000b],ebp        # 0x1242358a5
   14004589a:	sub    eax,DWORD PTR [rax]
   14004589c:	(bad)  
   14004589d:	je     0x1400458c9
   14004589f:	add    BYTE PTR [rdi],bl
   1400458a1:	sub    DWORD PTR fs:[rax],eax
   1400458a4:	(bad)  
   1400458a5:	xor    al,0x28
   1400458a7:	add    BYTE PTR [rdi],bl
   1400458a9:	add    DWORD PTR [rsi],esp
   1400458ab:	add    BYTE PTR [rax+rdx*2],dl
   1400458ae:	add    BYTE PTR [rax],al
   1400458b0:	(bad)  
   1400458b1:	jge    0x1400458b5
   1400458b3:	add    BYTE PTR [rax],ah
   1400458b5:	add    DWORD PTR [rax],eax
   1400458b7:	add    BYTE PTR [rcx],bl
   1400458b9:	or     DWORD PTR cs:[rax],eax
   1400458bc:	sbb    eax,0x1d00a364
   1400458c1:	xor    al,0xa0
   1400458c3:	add    BYTE PTR [rip+0xe009c01],bl        # 0x14e04f4ca
   1400458c9:	loopne 0x1400458d7
   1400458cb:	jo     0x1400458d8
   1400458cd:	push   rax
   1400458ce:	add    BYTE PTR [rax],al
   1400458d0:	(bad)  
   1400458d1:	jge    0x1400458d5
   1400458d3:	add    al,dl
   1400458d5:	add    al,0x0
   1400458d7:	add    BYTE PTR [rcx],dl
   1400458d9:	sbb    al,0x6
   1400458db:	add    BYTE PTR [rsp+riz*2],bl
   1400458de:	or     al,BYTE PTR [rax]
   1400458e0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400458e3:	add    BYTE PTR [rdx+rdx*2],cl
   1400458e6:	or     BYTE PTR [rax+0x18],dh
   1400458e9:	mov    al,0x2
   1400458eb:	add    BYTE PTR [rax-0xfffc07],ah
   1400458f1:	(bad)  
   1400458f2:	(bad)  
   1400458f3:	dec    esp
   1400458f5:	pop    rdi
   1400458f6:	add    eax,DWORD PTR [rax]
   1400458f8:	add    BYTE PTR [rax],al
   1400458fa:	add    BYTE PTR [rax],al
   1400458fc:	repnz pop rdi
   1400458fe:	add    eax,DWORD PTR [rax]
   140045900:	xchg   esp,eax
   140045901:	pop    rax
   140045902:	add    BYTE PTR [rax],al
   140045904:	(bad)  
   140045905:	(bad)  
   140045906:	(bad)  
   140045907:	dec    DWORD PTR [rsi]
   140045909:	pop    rcx
   14004590a:	add    BYTE PTR [rax],al
   14004590c:	add    BYTE PTR [rax],al
   14004590e:	add    BYTE PTR [rax],al
   140045910:	adc    DWORD PTR [rdx],edx
   140045912:	add    DWORD PTR [rax],eax
   140045914:	or     DWORD PTR [rdx+0x0],esp
   140045917:	add    BYTE PTR [rax],bl
   140045919:	mov    al,0x2
   14004591b:	add    al,dl
   14004591d:	stc    
   14004591e:	add    eax,DWORD PTR [rax]
   140045920:	mov    WORD PTR [rdi+0x0],ss
   140045923:	add    bh,bh
   140045925:	(bad)  
   140045926:	(bad)  
   140045927:	call   QWORD PTR [rcx]
   140045929:	sbb    BYTE PTR [rax+rax*1],al
   14004592c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004592f:	add    BYTE PTR [rdx],cl
   140045931:	push   rdx
   140045932:	(bad)  
   140045933:	jo     0x14004594d
   140045935:	mov    al,0x2
   140045937:	add    BYTE PTR [rax],al
   140045939:	cli    
   14004593a:	add    eax,DWORD PTR [rax]
   14004593c:	adc    al,0x57
   14004593e:	add    BYTE PTR [rax],al
   140045940:	(bad)  
   140045941:	(bad)  
   140045942:	(bad)  
   140045943:	dec    DWORD PTR [rdx+0x57]
   140045946:	add    BYTE PTR [rax],al
   140045948:	add    BYTE PTR [rax],al
   14004594a:	add    BYTE PTR [rax],al
   14004594c:	jle    0x1400459a5
   14004594e:	add    BYTE PTR [rax],al
   140045950:	(bad)  
   140045951:	(bad)  
   140045952:	(bad)  
   140045953:	call   QWORD PTR [rcx]
   140045955:	sbb    al,0x6
   140045957:	add    BYTE PTR [rsp+riz*2],bl
   14004595a:	or     al,BYTE PTR [rax]
   14004595c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004595f:	add    BYTE PTR [rdx+rdx*2],cl
   140045962:	or     BYTE PTR [rax+0x18],dh
   140045965:	mov    al,0x2
   140045967:	add    BYTE PTR [rax],dh
   140045969:	cli    
   14004596a:	add    eax,DWORD PTR [rax]
   14004596c:	js     0x1400459c4
   14004596e:	add    BYTE PTR [rax],al
   140045970:	(bad)  
   140045971:	(bad)  
   140045972:	(bad)  
   140045973:	call   QWORD PTR [rcx]
   140045975:	adc    al,0x4
   140045977:	add    BYTE PTR [rsp+rsi*1],dl
   14004597a:	or     BYTE PTR [rax],al
   14004597c:	(bad)  
   14004597d:	push   rdx
   14004597e:	add    dh,BYTE PTR [rax+0x18]
   140045981:	mov    al,0x2
   140045983:	add    BYTE PTR [rax-0x6],ah
   140045986:	add    eax,DWORD PTR [rax]
   140045988:	(bad)  
   140045989:	(bad)  
   14004598a:	(bad)  
   14004598b:	jmp    QWORD PTR [rax+0x35f]
   140045991:	add    BYTE PTR [rax],al
   140045993:	add    BYTE PTR [rdi+rbx*2+0x10003],ch
   14004599a:	add    BYTE PTR [rax],al
   14004599c:	mov    esp,0x2800035f
   1400459a1:	mov    eax,DWORD PTR [rbx]
   1400459a3:	add    bh,bh
   1400459a5:	(bad)  
   1400459a6:	(bad)  
   1400459a7:	(bad)  
   1400459a8:	cmp    al,0x8b
   1400459aa:	add    eax,DWORD PTR [rax]
   1400459ac:	add    DWORD PTR [rax],eax
   1400459ae:	add    BYTE PTR [rax],al
   1400459b0:	outs   dx,BYTE PTR ds:[rsi]
   1400459b1:	mov    eax,DWORD PTR [rbx]
   1400459b3:	add    BYTE PTR [rax],al
   1400459b5:	add    BYTE PTR [rax],al
   1400459b7:	add    BYTE PTR [rcx-0xfffc75],bl
   1400459bd:	(bad)  
   1400459be:	(bad)  
   1400459bf:	call   FWORD PTR [rcx]
   1400459c1:	cs (bad) 
   1400459c3:	add    BYTE PTR [rsp+riz*2],bl
   1400459c6:	rex.WXB add BYTE PTR [r8],bl
   1400459c9:	xor    al,0x4a
   1400459cb:	add    BYTE PTR [rbx],cl
   1400459cd:	add    DWORD PTR [rax+0x0],ecx
   1400459d0:	add    al,0x70
   1400459d2:	add    BYTE PTR [rax],al
   1400459d4:	jl     0x1400459f6
   1400459d6:	add    eax,DWORD PTR [rax]
   1400459d8:	nop
   1400459d9:	cli    
   1400459da:	add    eax,DWORD PTR [rax]
   1400459dc:	xor    al,BYTE PTR [rdx]
   1400459de:	add    BYTE PTR [rax],al
   1400459e0:	movabs al,ds:0xceffffffff000387
   1400459e9:	xchg   DWORD PTR [rbx],eax
   1400459eb:	add    BYTE PTR [rax],al
   1400459ed:	add    BYTE PTR [rax],al
   1400459ef:	add    dh,dh
   1400459f1:	xchg   DWORD PTR [rbx],eax
   1400459f3:	add    BYTE PTR [rcx],al
   1400459f5:	add    BYTE PTR [rax],al
   1400459f7:	add    BYTE PTR [rcx],bl
   1400459f9:	mov    BYTE PTR [rbx],al
   1400459fb:	add    BYTE PTR [rdx],al
   1400459fd:	add    BYTE PTR [rax],al
   1400459ff:	add    dl,al
   140045a01:	mov    BYTE PTR [rbx],al
   140045a03:	add    bh,bh
   140045a05:	(bad)  
   140045a06:	(bad)  
   140045a07:	inc    DWORD PTR [rcx]
   140045a09:	clts   
   140045a0b:	add    BYTE PTR [rdi],cl
   140045a0d:	or     DWORD PTR fs:[rax],eax
   140045a10:	sysenter 
   140045a12:	or     BYTE PTR [rax],al
   140045a14:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140045a17:	jo     0x140045a1a
   140045a19:	clts   
   140045a1b:	add    BYTE PTR [rdi],cl
   140045a1d:	or     BYTE PTR fs:[rax],al
   140045a20:	sysenter 
   140045a22:	(bad)  
   140045a23:	add    BYTE PTR [rdi],cl
   140045a25:	xor    cl,BYTE PTR [rbx]
   140045a27:	jo     0x140045a42
   140045a29:	sbb    eax,0x741d0008
   140045a2e:	or     eax,DWORD PTR [rax]
   140045a30:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140045a34:	adc    eax,0x9000834
   140045a39:	push   rdx
   140045a3a:	add    eax,0x2b018e0
   140045a3f:	add    al,al
   140045a41:	cli    
   140045a42:	add    eax,DWORD PTR [rax]
	...
   140045a4c:	add    DWORD PTR [rax],eax
   140045a4e:	add    BYTE PTR [rax],al
   140045a50:	add    DWORD PTR [rax],eax
   140045a52:	add    BYTE PTR [rax],al
   140045a54:	pop    rax
   140045a55:	pop    rdx
   140045a56:	add    al,0x0
	...
   140045a64:	(bad)  
   140045a65:	pop    rdi
   140045a66:	add    eax,DWORD PTR [rax]
   140045a68:	cmp    BYTE PTR [rax],al
   140045a6a:	add    BYTE PTR [rax],al
   140045a6c:	(bad)  
   140045a6d:	add    BYTE PTR gs:[rax],al
   140045a70:	(bad)  
   140045a71:	(bad)  
   140045a72:	(bad)  
   140045a73:	push   QWORD PTR [rax+0x65]
   140045a79:	add    BYTE PTR [rax],al
   140045a7b:	add    bl,al
   140045a7d:	add    BYTE PTR gs:[rax],al
   140045a80:	(bad)  
   140045a81:	(bad)  
   140045a82:	(bad)  
   140045a83:	(bad)  
   140045a84:	(bad)  
   140045a85:	pop    rdi
   140045a86:	add    eax,DWORD PTR [rax]
   140045a88:	add    BYTE PTR [rax],al
   140045a8a:	add    BYTE PTR [rax],al
   140045a8c:	or     esp,DWORD PTR [rax+0x3]
   140045a8f:	add    BYTE PTR [rcx],al
   140045a91:	add    BYTE PTR [rax],al
   140045a93:	add    BYTE PTR [rcx],bl
   140045a95:	or     al,BYTE PTR [rdx]
   140045a97:	add    BYTE PTR [rdx],cl
   140045a99:	xor    al,BYTE PTR [rsi]
   140045a9b:	push   rax
   140045a9c:	sbb    BYTE PTR [rax-0x53ffffe],dh
   140045aa2:	add    eax,DWORD PTR [rax]
   140045aa4:	sbb    DWORD PTR [rsi+rax*1],ebx
   140045aa7:	add    BYTE PTR [rsp+riz*2],bl
   140045aaa:	or     al,BYTE PTR [rax]
   140045aac:	sbb    BYTE PTR [rcx+rcx*1],dh
   140045aaf:	add    BYTE PTR [rdx+rdx*2],cl
   140045ab2:	or     BYTE PTR [rax+0x18],dh
   140045ab5:	mov    al,0x2
   140045ab7:	add    al,dh
   140045ab9:	cli    
   140045aba:	add    eax,DWORD PTR [rax]
	...
   140045ac4:	add    DWORD PTR [rax],eax
   140045ac6:	add    BYTE PTR [rax],al
   140045ac8:	add    DWORD PTR [rax],eax
   140045aca:	add    BYTE PTR [rax],al
   140045acc:	rcr    BYTE PTR [rdx+0x4],1
	...
   140045adb:	add    BYTE PTR [rsi],bl
   140045add:	(bad)  
   140045ade:	add    eax,DWORD PTR [rax]
   140045ae0:	rex.W add BYTE PTR [rax],al
   140045ae3:	add    BYTE PTR [rbx+riz*2],ch
   140045ae6:	add    BYTE PTR [rax],al
   140045ae8:	(bad)  
   140045ae9:	(bad)  
   140045aea:	(bad)  
   140045aeb:	(bad)  
   140045aec:	cld    
   140045aed:	movsxd eax,DWORD PTR [rax]
   140045aef:	add    BYTE PTR [rax],al
   140045af1:	add    BYTE PTR [rax],al
   140045af3:	add    BYTE PTR [rcx],dl
   140045af5:	add    BYTE PTR fs:[rax],al
   140045af8:	(bad)  
   140045af9:	(bad)  
   140045afa:	(bad)  
   140045afb:	call   FWORD PTR [rsi]
   140045afd:	(bad)  
   140045afe:	add    eax,DWORD PTR [rax]
   140045b00:	add    BYTE PTR [rax],al
   140045b02:	add    BYTE PTR [rax],al
   140045b04:	sub    al,0x60
   140045b06:	add    eax,DWORD PTR [rax]
   140045b08:	add    DWORD PTR [rax],eax
   140045b0a:	add    BYTE PTR [rax],al
   140045b0c:	sbb    DWORD PTR [rbx],ecx
   140045b0e:	add    eax,DWORD PTR [rax]
   140045b10:	or     eax,DWORD PTR [rdx+0x7]
   140045b13:	push   rax
   140045b14:	(bad)  
   140045b15:	xor    BYTE PTR [rax],al
   140045b17:	add    BYTE PTR [rax],bl
   140045b19:	mov    al,0x2
   140045b1b:	add    al,dh
   140045b1d:	cli    
   140045b1e:	add    eax,DWORD PTR [rax]
   140045b20:	add    DWORD PTR [rbx],ecx
   140045b22:	add    al,0x0
   140045b24:	or     edx,DWORD PTR [rdx+0x4]
   140045b27:	jo     0x140045b2c
   140045b29:	xor    BYTE PTR [rdx],al
   140045b2b:	push   rax
   140045b2c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4215b3e
   140045b32:	or     eax,0xc641d00
   140045b37:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d046691
   140045b3d:	xor    al,0xa
   140045b3f:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f47497
   140045b45:	loopne 0x140045b5c
   140045b47:	rol    BYTE PTR [rcx],0xa
   140045b4a:	add    al,0x0
   140045b4c:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140045b50:	add    eax,0x11000134
   140045b55:	adc    eax,DWORD PTR [rdx]
   140045b57:	add    BYTE PTR [rdx],cl
   140045b59:	push   rdx
   140045b5a:	(bad)  
   140045b5b:	xor    BYTE PTR [rax],bl
   140045b5d:	mov    al,0x2
   140045b5f:	add    BYTE PTR [rax],ah
   140045b61:	sti    
   140045b62:	add    eax,DWORD PTR [rax]
   140045b64:	(bad)  
   140045b65:	(bad)  
   140045b66:	(bad)  
   140045b67:	call   FWORD PTR [rip+0x6c000362]        # 0x1ac045ecf
   140045b6d:	ja     0x140045b6f
   140045b6f:	add    bh,bh
   140045b71:	(bad)  
   140045b72:	(bad)  
   140045b73:	jmp    QWORD PTR [rbx+0x77]
   140045b79:	add    BYTE PTR [rax],al
   140045b7b:	add    BYTE PTR [rcx],dl
   140045b7d:	adc    eax,DWORD PTR [rdx]
   140045b7f:	add    BYTE PTR [rdx],cl
   140045b81:	push   rdx
   140045b82:	(bad)  
   140045b83:	xor    BYTE PTR [rax],bl
   140045b85:	mov    al,0x2
   140045b87:	add    BYTE PTR [rax-0x5],dl
   140045b8a:	add    eax,DWORD PTR [rax]
   140045b8c:	(bad)  
   140045b8d:	(bad)  
   140045b8e:	(bad)  
   140045b8f:	inc    DWORD PTR [rbp+0x4c000360]
   140045b95:	ins    BYTE PTR es:[rdi],dx
   140045b96:	add    BYTE PTR [rax],al
   140045b98:	(bad)  
   140045b99:	(bad)  
   140045b9a:	(bad)  
   140045b9b:	jmp    FWORD PTR [rax+0x6c]
   140045b9e:	add    BYTE PTR [rax],al
   140045ba0:	add    BYTE PTR [rax],al
   140045ba2:	add    BYTE PTR [rax],al
   140045ba4:	jb     0x140045c12
   140045ba6:	add    BYTE PTR [rax],al
   140045ba8:	(bad)  
   140045ba9:	(bad)  
   140045baa:	(bad)  
   140045bab:	call   QWORD PTR [rcx]
   140045bad:	adc    eax,DWORD PTR [rdx]
   140045baf:	add    BYTE PTR [rdx],cl
   140045bb1:	push   rdx
   140045bb2:	(bad)  
   140045bb3:	xor    BYTE PTR [rax],bl
   140045bb5:	mov    al,0x2
   140045bb7:	add    BYTE PTR [rax-0xfffc05],al
   140045bbd:	(bad)  
   140045bbe:	(bad)  
   140045bbf:	call   QWORD PTR [rbp+0x60]
   140045bc2:	add    eax,DWORD PTR [rax]
   140045bc4:	(bad)  
   140045bc5:	(bad)  
   140045bc6:	(bad)  
   140045bc7:	jmp    QWORD PTR [rcx+0x60]
   140045bca:	add    eax,DWORD PTR [rax]
   140045bcc:	adc    BYTE PTR [rax+rax*1+0x0],ch
   140045bd0:	(bad)  
   140045bd1:	(bad)  
   140045bd2:	(bad)  
   140045bd3:	jmp    FWORD PTR [rsp+rbp*2]
   140045bd6:	add    BYTE PTR [rax],al
   140045bd8:	add    BYTE PTR [rax],al
   140045bda:	add    BYTE PTR [rax],al
   140045bdc:	ss ins BYTE PTR es:[rdi],dx
   140045bde:	add    BYTE PTR [rax],al
   140045be0:	add    DWORD PTR [rax],eax
   140045be2:	add    BYTE PTR [rax],al
   140045be4:	rex ins BYTE PTR es:[rdi],dx
   140045be6:	add    BYTE PTR [rax],al
   140045be8:	(bad)  
   140045be9:	(bad)  
   140045bea:	(bad)  
   140045beb:	call   QWORD PTR [rcx]
   140045bed:	adc    al,BYTE PTR [rcx]
   140045bef:	add    BYTE PTR [rcx],cl
   140045bf1:	(bad)  
   140045bf2:	add    BYTE PTR [rax],al
   140045bf4:	sbb    BYTE PTR [rax-0x44ffffe],dh
   140045bfa:	add    eax,DWORD PTR [rax]
   140045bfc:	fsubr  DWORD PTR [rbx+0x0]
   140045bff:	add    bh,bh
   140045c01:	(bad)  
   140045c02:	(bad)  
   140045c03:	call   QWORD PTR [rcx]
   140045c05:	sbb    BYTE PTR [rax+rax*1],al
   140045c08:	sbb    BYTE PTR [rcx+rcx*1],dh
   140045c0b:	add    BYTE PTR [rdx],cl
   140045c0d:	push   rdx
   140045c0e:	(bad)  
   140045c0f:	jo     0x140045c29
   140045c11:	mov    al,0x2
   140045c13:	add    al,ah
   140045c15:	sti    
   140045c16:	add    eax,DWORD PTR [rax]
   140045c18:	(bad)  
   140045c19:	(bad)  
   140045c1a:	(bad)  
   140045c1b:	jmp    FWORD PTR [rbp+0x60]
   140045c1e:	add    eax,DWORD PTR [rax]
   140045c20:	(bad)  
   140045c21:	(bad)  
   140045c22:	(bad)  
   140045c23:	(bad)  
   140045c24:	jns    0x140045c86
   140045c26:	add    eax,DWORD PTR [rax]
   140045c28:	cwde   
   140045c29:	imul   eax,DWORD PTR [rax],0x0
   140045c2c:	(bad)  
   140045c2d:	(bad)  
   140045c2e:	(bad)  
   140045c2f:	call   QWORD PTR [rcx]
   140045c31:	adc    al,BYTE PTR [rcx]
   140045c33:	add    BYTE PTR [rcx],cl
   140045c35:	(bad)  
   140045c36:	add    BYTE PTR [rax],al
   140045c38:	sbb    BYTE PTR [rax-0x3effffe],dh
   140045c3e:	add    eax,DWORD PTR [rax]
   140045c40:	jl     0x140045cad
   140045c42:	add    BYTE PTR [rax],al
   140045c44:	(bad)  
   140045c45:	(bad)  
   140045c46:	(bad)  
   140045c47:	call   QWORD PTR [rcx]
   140045c49:	sbb    BYTE PTR [rax+rax*1],al
   140045c4c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140045c4f:	add    BYTE PTR [rdx],cl
   140045c51:	push   rdx
   140045c52:	(bad)  
   140045c53:	jo     0x140045c6d
   140045c55:	mov    al,0x2
   140045c57:	add    BYTE PTR [rax-0x4],al
   140045c5a:	add    eax,DWORD PTR [rax]
   140045c5c:	cmp    al,0x6b
   140045c5e:	add    BYTE PTR [rax],al
   140045c60:	(bad)  
   140045c61:	(bad)  
   140045c62:	(bad)  
   140045c63:	call   FWORD PTR [rcx]
   140045c65:	xor    DWORD PTR [rcx],ecx
   140045c67:	add    BYTE PTR [rbx],ah
   140045c69:	je     0x140045c8f
   140045c6b:	add    BYTE PTR [rdi],bl
   140045c6d:	and    eax,DWORD PTR fs:[rax]
   140045c70:	sbb    esi,DWORD PTR [rdx+riz*1]
   140045c73:	add    BYTE PTR [rdi],cl
   140045c75:	add    DWORD PTR [rax],esp
   140045c77:	add    BYTE PTR [rax+rdx*2],al
   140045c7a:	add    BYTE PTR [rax],al
   140045c7c:	jl     0x140045c9e
   140045c7e:	add    eax,DWORD PTR [rax]
   140045c80:	jo     0x140045c7e
   140045c82:	add    eax,DWORD PTR [rax]
   140045c84:	cli    
   140045c85:	add    BYTE PTR [rax],al
   140045c87:	add    bh,bh
   140045c89:	(bad)  
   140045c8a:	(bad)  
   140045c8b:	inc    DWORD PTR [rax]
   140045c8d:	add    BYTE PTR [rax],al
   140045c8f:	add    bh,bh
   140045c91:	(bad)  
   140045c92:	(bad)  
   140045c93:	inc    DWORD PTR [rax]
   140045c95:	add    BYTE PTR [rax],al
   140045c97:	add    bh,bh
   140045c99:	(bad)  
   140045c9a:	(bad)  
   140045c9b:	call   QWORD PTR [rcx+0x2000360]
   140045ca1:	add    BYTE PTR [rax],al
   140045ca3:	add    BYTE PTR [rbp+0x3000360],bl
   140045ca9:	add    BYTE PTR [rax],al
   140045cab:	add    BYTE PTR [rcx+0x3000360],ch
   140045cb1:	add    BYTE PTR [rax],al
   140045cb3:	add    BYTE PTR [rbp+0x3000360],dh
   140045cb9:	add    BYTE PTR [rax],al
   140045cbb:	add    cl,al
   140045cbd:	(bad)  
   140045cbe:	add    eax,DWORD PTR [rax]
   140045cc0:	add    eax,DWORD PTR [rax]
   140045cc2:	add    BYTE PTR [rax],al
   140045cc4:	add    BYTE PTR [rax],al
   140045cc6:	add    BYTE PTR [rax],al
   140045cc8:	add    eax,DWORD PTR [rax]
   140045cca:	add    BYTE PTR [rax],al
   140045ccc:	add    BYTE PTR [rax],al
   140045cce:	add    BYTE PTR [rax],al
   140045cd0:	add    eax,DWORD PTR [rax]
   140045cd2:	add    BYTE PTR [rax],al
   140045cd4:	int    0x60
   140045cd6:	add    eax,DWORD PTR [rax]
   140045cd8:	(bad)  
   140045cd9:	ins    DWORD PTR es:[rdi],dx
   140045cda:	add    BYTE PTR [rax],al
   140045cdc:	(bad)  
   140045cdd:	(bad)  
   140045cde:	(bad)  
   140045cdf:	call   FWORD PTR [rcx]
   140045ce1:	outs   dx,BYTE PTR ds:[rsi]
   140045ce2:	add    BYTE PTR [rax],al
   140045ce4:	add    al,BYTE PTR [rax]
   140045ce6:	add    BYTE PTR [rax],al
   140045ce8:	xor    ch,BYTE PTR [rsi+0x0]
   140045ceb:	add    BYTE PTR [rbx],al
   140045ced:	add    BYTE PTR [rax],al
   140045cef:	add    BYTE PTR [rbx+0x400006e],cl
   140045cf5:	add    BYTE PTR [rax],al
   140045cf7:	add    BYTE PTR [rax+0x300006e],bl
   140045cfd:	add    BYTE PTR [rax],al
   140045cff:	add    BYTE PTR [rdi+rbp*2],al
   140045d02:	add    BYTE PTR [rax],al
   140045d04:	add    eax,0xf000000
   140045d09:	outs   dx,DWORD PTR ds:[rsi]
   140045d0a:	add    BYTE PTR [rax],al
   140045d0c:	(bad)  
   140045d0d:	add    BYTE PTR [rax],al
   140045d0f:	add    BYTE PTR [rdx],bl
   140045d11:	outs   dx,DWORD PTR ds:[rsi]
   140045d12:	add    BYTE PTR [rax],al
   140045d14:	add    eax,DWORD PTR [rax]
   140045d16:	add    BYTE PTR [rax],al
   140045d18:	xchg   edi,eax
   140045d19:	outs   dx,DWORD PTR ds:[rsi]
   140045d1a:	add    BYTE PTR [rax],al
   140045d1c:	add    al,BYTE PTR [rax]
   140045d1e:	add    BYTE PTR [rax],al
   140045d20:	mov    bl,0x6f
   140045d22:	add    BYTE PTR [rax],al
   140045d24:	(bad)  
   140045d25:	(bad)  
   140045d26:	(bad)  
   140045d27:	call   QWORD PTR [rcx]
   140045d29:	adc    al,BYTE PTR [rbx]
   140045d2b:	add    BYTE PTR [rdx],cl
   140045d2d:	ret    0x3003
   140045d30:	add    dl,BYTE PTR [rax+0x0]
   140045d33:	add    BYTE PTR [rax],bl
   140045d35:	mov    al,0x2
   140045d37:	add    BYTE PTR [rax-0xfffc04],ah
   140045d3d:	(bad)  
   140045d3e:	(bad)  
   140045d3f:	inc    DWORD PTR [rax]
   140045d41:	add    BYTE PTR [rax],al
   140045d43:	add    bh,bh
   140045d45:	(bad)  
   140045d46:	(bad)  
   140045d47:	inc    DWORD PTR [rax]
   140045d49:	add    BYTE PTR [rax],al
   140045d4b:	add    bh,bh
   140045d4d:	(bad)  
   140045d4e:	(bad)  
   140045d4f:	call   rbp
   140045d51:	(bad)  
   140045d52:	add    eax,DWORD PTR [rax]
   140045d54:	add    al,BYTE PTR [rax]
   140045d56:	add    BYTE PTR [rax],al
   140045d58:	loope  0x140045dbb
   140045d5a:	add    eax,DWORD PTR [rax]
   140045d5c:	add    al,BYTE PTR [rax]
   140045d5e:	add    BYTE PTR [rax],al
   140045d60:	in     eax,dx
   140045d61:	(bad)  
   140045d62:	add    eax,DWORD PTR [rax]
   140045d64:	add    al,BYTE PTR [rax]
   140045d66:	add    BYTE PTR [rax],al
   140045d68:	add    BYTE PTR [rax],al
   140045d6a:	add    BYTE PTR [rax],al
   140045d6c:	add    al,BYTE PTR [rax]
   140045d6e:	add    BYTE PTR [rax],al
   140045d70:	add    BYTE PTR [rax],al
   140045d72:	add    BYTE PTR [rax],al
   140045d74:	add    al,BYTE PTR [rax]
   140045d76:	add    BYTE PTR [rax],al
   140045d78:	stc    
   140045d79:	(bad)  
   140045d7a:	add    eax,DWORD PTR [rax]
   140045d7c:	(bad)  
   140045d7d:	add    BYTE PTR [rax],al
   140045d7f:	add    BYTE PTR [rip+0x7000362],al        # 0x1470460e7
   140045d85:	add    BYTE PTR [rax],al
   140045d87:	add    BYTE PTR [rcx],dl
   140045d89:	(bad)  
   140045d8b:	add    ah,ch
   140045d8d:	jae    0x140045d8f
   140045d8f:	add    bh,bh
   140045d91:	(bad)  
   140045d92:	(bad)  
   140045d93:	jmp    QWORD PTR [rax]
   140045d95:	je     0x140045d97
   140045d97:	add    BYTE PTR [rdx],al
   140045d99:	add    BYTE PTR [rax],al
   140045d9b:	add    BYTE PTR [rdx+0x74],al
   140045d9e:	add    BYTE PTR [rax],al
   140045da0:	add    eax,DWORD PTR [rax]
   140045da2:	add    BYTE PTR [rax],al
   140045da4:	rex.WRB je 0x140045da7
   140045da7:	add    BYTE PTR [rax+rax*1],al
   140045daa:	add    BYTE PTR [rax],al
   140045dac:	pop    rax
   140045dad:	je     0x140045daf
   140045daf:	add    BYTE PTR [rdx],al
   140045db1:	add    BYTE PTR [rax],al
   140045db3:	add    BYTE PTR [rcx+0x7000074],cl
   140045db9:	add    BYTE PTR [rax],al
   140045dbb:	add    BYTE PTR [rbx+0x8000074],ch
   140045dc1:	add    BYTE PTR [rax],al
   140045dc3:	add    BYTE PTR [rsi+0x9000074],dh
   140045dc9:	add    BYTE PTR [rax],al
   140045dcb:	add    cl,al
   140045dcd:	je     0x140045dcf
   140045dcf:	add    BYTE PTR [rdi],al
   140045dd1:	add    BYTE PTR [rax],al
   140045dd3:	add    dl,bl
   140045dd5:	je     0x140045dd7
   140045dd7:	add    BYTE PTR [rdx],al
   140045dd9:	add    BYTE PTR [rax],al
   140045ddb:	add    ah,ch
   140045ddd:	je     0x140045ddf
   140045ddf:	add    bh,bh
   140045de1:	(bad)  
   140045de2:	(bad)  
   140045de3:	call   FWORD PTR [rcx]
   140045de5:	sub    eax,DWORD PTR [rdi]
   140045de7:	add    BYTE PTR [rip+0x11001a34],bl        # 0x151047821
   140045ded:	add    DWORD PTR [rax+rax*1],edx
   140045df0:	(bad)  
   140045df1:	jo     0x140045df8
   140045df3:	(bad)  
   140045df4:	add    al,0x50
   140045df6:	add    BYTE PTR [rax],al
   140045df8:	jl     0x140045e1a
   140045dfa:	add    eax,DWORD PTR [rax]
   140045dfc:	sar    ah,1
   140045dfe:	add    eax,DWORD PTR [rax]
   140045e00:	(bad)  
   140045e01:	add    BYTE PTR [rax],al
   140045e03:	add    BYTE PTR [rsp+rbp*2+0x0],bh
   140045e07:	add    bh,bh
   140045e09:	(bad)  
   140045e0a:	(bad)  
   140045e0b:	push   QWORD PTR [rcx+0x200006c]
   140045e11:	add    BYTE PTR [rax],al
   140045e13:	add    bl,dl
   140045e15:	ins    BYTE PTR es:[rdi],dx
   140045e16:	add    BYTE PTR [rax],al
   140045e18:	add    eax,DWORD PTR [rax]
   140045e1a:	add    BYTE PTR [rax],al
   140045e1c:	fisubr WORD PTR [rax+rax*1+0x0]
   140045e20:	add    al,0x0
   140045e22:	add    BYTE PTR [rax],al
   140045e24:	jmp    0x142045e95
   140045e29:	add    BYTE PTR [rax],al
   140045e2b:	add    BYTE PTR [rdx],bl
   140045e2d:	ins    DWORD PTR es:[rdi],dx
   140045e2e:	add    BYTE PTR [rax],al
   140045e30:	(bad)  
   140045e31:	add    BYTE PTR [rax],al
   140045e33:	add    BYTE PTR [rbx+0x6d],al
   140045e36:	add    BYTE PTR [rax],al
   140045e38:	or     BYTE PTR [rax],al
   140045e3a:	add    BYTE PTR [rax],al
   140045e3c:	rex.WRX ins DWORD PTR es:[rdi],dx
   140045e3e:	add    BYTE PTR [rax],al
   140045e40:	or     DWORD PTR [rax],eax
   140045e42:	add    BYTE PTR [rax],al
   140045e44:	pop    rcx
   140045e45:	ins    DWORD PTR es:[rdi],dx
   140045e46:	add    BYTE PTR [rax],al
   140045e48:	(bad)  
   140045e49:	add    BYTE PTR [rax],al
   140045e4b:	add    BYTE PTR [rax+0x200006d],al
   140045e51:	add    BYTE PTR [rax],al
   140045e53:	add    BYTE PTR [rdx-0xffff93],dl
   140045e59:	(bad)  
   140045e5a:	(bad)  
   140045e5b:	call   FWORD PTR [rcx]
   140045e5d:	(bad)  
   140045e5e:	or     DWORD PTR [rax],eax
   140045e60:	es je  0x140045ea0
   140045e63:	add    BYTE PTR [rdx],ah
   140045e65:	fs cmp al,0x0
   140045e68:	(bad)  
   140045e69:	xor    al,0x3b
   140045e6b:	add    BYTE PTR [rdx],dl
   140045e6d:	add    DWORD PTR [rax],edi
   140045e6f:	add    BYTE PTR [rax+rdx*2],al
   140045e72:	add    BYTE PTR [rax],al
   140045e74:	jl     0x140045e96
   140045e76:	add    eax,DWORD PTR [rax]
   140045e78:	add    ch,bh
   140045e7a:	add    eax,DWORD PTR [rax]
   140045e7c:	mov    dl,0x1
   140045e7e:	add    BYTE PTR [rax],al
   140045e80:	(bad)  
   140045e81:	(bad)  
   140045e82:	(bad)  
   140045e83:	inc    DWORD PTR [rax]
   140045e85:	add    BYTE PTR [rax],al
   140045e87:	add    bh,bh
   140045e89:	(bad)  
   140045e8a:	(bad)  
   140045e8b:	inc    DWORD PTR [rax]
   140045e8d:	add    BYTE PTR [rax],al
   140045e8f:	add    bh,bh
   140045e91:	(bad)  
   140045e92:	(bad)  
   140045e93:	(bad)  
   140045e94:	fldenv [rax+0x3]
   140045e97:	add    BYTE PTR [rdx],al
   140045e99:	add    BYTE PTR [rax],al
   140045e9b:	add    ch,ah
   140045e9d:	(bad)  
   140045e9e:	add    eax,DWORD PTR [rax]
   140045ea0:	add    al,BYTE PTR [rax]
   140045ea2:	add    BYTE PTR [rax],al
   140045ea4:	icebp  
   140045ea5:	(bad)  
   140045ea6:	add    eax,DWORD PTR [rax]
   140045ea8:	add    al,BYTE PTR [rax]
   140045eaa:	add    BYTE PTR [rax],al
   140045eac:	add    BYTE PTR [rax],al
   140045eae:	add    BYTE PTR [rax],al
   140045eb0:	add    al,BYTE PTR [rax]
   140045eb2:	add    BYTE PTR [rax],al
   140045eb4:	add    BYTE PTR [rax],al
   140045eb6:	add    BYTE PTR [rax],al
   140045eb8:	add    al,BYTE PTR [rax]
   140045eba:	add    BYTE PTR [rax],al
   140045ebc:	std    
   140045ebd:	(bad)  
   140045ebe:	add    eax,DWORD PTR [rax]
   140045ec0:	(bad)  
   140045ec1:	add    BYTE PTR [rax],al
   140045ec3:	add    BYTE PTR [rcx],cl
   140045ec5:	(bad)  
   140045ec6:	add    eax,DWORD PTR [rax]
   140045ec8:	or     BYTE PTR [rax],al
   140045eca:	add    BYTE PTR [rax],al
   140045ecc:	adc    eax,0x8000361
   140045ed1:	add    BYTE PTR [rax],al
   140045ed3:	add    BYTE PTR [rcx],ah
   140045ed5:	(bad)  
   140045ed6:	add    eax,DWORD PTR [rax]
   140045ed8:	or     BYTE PTR [rbp+0x0],dh
   140045edb:	add    bh,bh
   140045edd:	(bad)  
   140045ede:	(bad)  
   140045edf:	inc    DWORD PTR [rax+0x2000075]
   140045ee5:	add    BYTE PTR [rax],al
   140045ee7:	add    BYTE PTR [rsi+0x3000075],ah
   140045eed:	add    BYTE PTR [rax],al
   140045eef:	add    BYTE PTR [rdx+0x4000075],dh
   140045ef5:	add    BYTE PTR [rax],al
   140045ef7:	add    BYTE PTR [rsi+0x2000075],bh
   140045efd:	add    BYTE PTR [rax],al
   140045eff:	add    BYTE PTR [rbx],al
   140045f01:	jbe    0x140045f03
   140045f03:	add    BYTE PTR [rdi],al
   140045f05:	add    BYTE PTR [rax],al
   140045f07:	add    BYTE PTR [rip+0x8000076],ah        # 0x148045f83
   140045f0d:	add    BYTE PTR [rax],al
   140045f0f:	add    BYTE PTR [rbp+0x7000076],dh
   140045f15:	add    BYTE PTR [rax],al
   140045f17:	add    ah,dl
   140045f19:	jbe    0x140045f1b
   140045f1b:	add    BYTE PTR [rdx],al
   140045f1d:	add    BYTE PTR [rax],al
   140045f1f:	add    bh,ah
   140045f21:	jbe    0x140045f23
   140045f23:	add    bh,bh
   140045f25:	(bad)  
   140045f26:	(bad)  
   140045f27:	(bad)  
   140045f28:	std    
   140045f29:	jbe    0x140045f2b
   140045f2b:	add    BYTE PTR [rax],cl
   140045f2d:	add    BYTE PTR [rax],al
   140045f2f:	add    BYTE PTR [rcx],bl
   140045f31:	ja     0x140045f33
   140045f33:	add    BYTE PTR [rcx],cl
   140045f35:	add    BYTE PTR [rax],al
   140045f37:	add    BYTE PTR [rip+0xa000077],ah        # 0x14a045fb4
   140045f3d:	add    BYTE PTR [rax],al
   140045f3f:	add    BYTE PTR [rcx],dh
   140045f41:	ja     0x140045f43
   140045f43:	add    BYTE PTR [rax],cl
   140045f45:	add    BYTE PTR [rax],al
   140045f47:	add    BYTE PTR [rbx+0x77],al
   140045f4a:	add    BYTE PTR [rax],al
   140045f4c:	(bad)  
   140045f4d:	(bad)  
   140045f4e:	(bad)  
   140045f4f:	call   FWORD PTR [rcx]
   140045f51:	xor    DWORD PTR [rcx],ecx
   140045f53:	add    BYTE PTR [rbx],ah
   140045f55:	je     0x140045f79
   140045f57:	add    BYTE PTR [rdi],bl
   140045f59:	and    DWORD PTR fs:[rax],eax
   140045f5c:	sbb    esi,DWORD PTR [rax+riz*1]
   140045f5f:	add    BYTE PTR [rdi],cl
   140045f61:	add    DWORD PTR [rsi],ebx
   140045f63:	add    BYTE PTR [rax+rdx*2],al
   140045f66:	add    BYTE PTR [rax],al
   140045f68:	jl     0x140045f8a
   140045f6a:	add    eax,DWORD PTR [rax]
   140045f6c:	xor    ch,bh
   140045f6e:	add    eax,DWORD PTR [rax]
   140045f70:	loop   0x140045f72
   140045f72:	add    BYTE PTR [rax],al
   140045f74:	(bad)  
   140045f75:	(bad)  
   140045f76:	(bad)  
   140045f77:	inc    DWORD PTR [rax]
   140045f79:	add    BYTE PTR [rax],al
   140045f7b:	add    bh,bh
   140045f7d:	(bad)  
   140045f7e:	(bad)  
   140045f7f:	inc    DWORD PTR [rax]
   140045f81:	add    BYTE PTR [rax],al
   140045f83:	add    bh,bh
   140045f85:	(bad)  
   140045f86:	(bad)  
   140045f87:	jmp    FWORD PTR [rip+0x2000361]        # 0x1420462ee
   140045f8d:	add    BYTE PTR [rax],al
   140045f8f:	add    BYTE PTR [rcx],bh
   140045f91:	(bad)  
   140045f92:	add    eax,DWORD PTR [rax]
   140045f94:	add    al,BYTE PTR [rax]
   140045f96:	add    BYTE PTR [rax],al
   140045f98:	rex.RB (bad) 
   140045f9a:	add    eax,DWORD PTR [rax]
   140045f9c:	add    al,BYTE PTR [rax]
   140045f9e:	add    BYTE PTR [rax],al
   140045fa0:	add    BYTE PTR [rax],al
   140045fa2:	add    BYTE PTR [rax],al
   140045fa4:	add    al,BYTE PTR [rax]
   140045fa6:	add    BYTE PTR [rax],al
   140045fa8:	add    BYTE PTR [rax],al
   140045faa:	add    BYTE PTR [rax],al
   140045fac:	add    al,BYTE PTR [rax]
   140045fae:	add    BYTE PTR [rax],al
   140045fb0:	push   rcx
   140045fb1:	(bad)  
   140045fb2:	add    eax,DWORD PTR [rax]
   140045fb4:	(bad)  
   140045fb5:	add    BYTE PTR [rax],al
   140045fb7:	add    BYTE PTR [rbp+0x61],bl
   140045fba:	add    eax,DWORD PTR [rax]
   140045fbc:	(bad)  
   140045fbd:	add    BYTE PTR [rax],al
   140045fbf:	add    BYTE PTR [rcx+0x61],ch
   140045fc2:	add    eax,DWORD PTR [rax]
   140045fc4:	(bad)  
   140045fc5:	add    BYTE PTR [rax],al
   140045fc7:	add    BYTE PTR [rbp+0x61],dh
   140045fca:	add    eax,DWORD PTR [rax]
   140045fcc:	(bad)  
   140045fcd:	add    BYTE PTR [rax],al
   140045fcf:	add    BYTE PTR [rcx-0x13fffc9f],al
   140045fd5:	outs   dx,DWORD PTR ds:[rsi]
   140045fd6:	add    BYTE PTR [rax],al
   140045fd8:	(bad)  
   140045fd9:	(bad)  
   140045fda:	(bad)  
   140045fdb:	call   QWORD PTR [rsi+0x2000070]
   140045fe1:	add    BYTE PTR [rax],al
   140045fe3:	add    BYTE PTR [rax+0x3000070],bh
   140045fe9:	add    BYTE PTR [rax],al
   140045feb:	add    bl,al
   140045fed:	jo     0x140045fef
   140045fef:	add    BYTE PTR [rax+rax*1],al
   140045ff2:	add    BYTE PTR [rax],al
   140045ff4:	(bad)  
   140045ff5:	jo     0x140045ff7
   140045ff7:	add    BYTE PTR [rdx],al
   140045ff9:	add    BYTE PTR [rax],al
   140045ffb:	add    BYTE PTR [rdx],al
   140045ffd:	jno    0x140045fff
   140045fff:	add    BYTE PTR [rdi],al
   140046001:	add    BYTE PTR [rax],al
   140046003:	add    BYTE PTR [rcx+rsi*2],ah
   140046006:	add    BYTE PTR [rax],al
   140046008:	or     BYTE PTR [rax],al
   14004600a:	add    BYTE PTR [rax],al
   14004600c:	(bad)  
   14004600d:	jno    0x14004600f
   14004600f:	add    BYTE PTR [rcx],cl
   140046011:	add    BYTE PTR [rax],al
   140046013:	add    BYTE PTR [rdx],bh
   140046015:	jno    0x140046017
   140046017:	add    BYTE PTR [rdi],al
   140046019:	add    BYTE PTR [rax],al
   14004601b:	add    BYTE PTR [rax+0xa000071],al
   140046021:	add    BYTE PTR [rax],al
   140046023:	add    BYTE PTR [rbx+0xb000071],cl
   140046029:	add    BYTE PTR [rax],al
   14004602b:	add    BYTE PTR [rsi+0x7000071],dl
   140046031:	add    BYTE PTR [rax],al
   140046033:	add    BYTE PTR [rax+0x72],dl
   140046036:	add    BYTE PTR [rax],al
   140046038:	add    al,BYTE PTR [rax]
   14004603a:	add    BYTE PTR [rax],al
   14004603c:	(bad)  
   14004603e:	add    BYTE PTR [rax],al
   140046040:	(bad)  
   140046041:	(bad)  
   140046042:	(bad)  
   140046043:	call   FWORD PTR [rcx]
   140046045:	sub    DWORD PTR [rip+0x16341b00],eax        # 0x156387b4b
   14004604b:	add    BYTE PTR [rdi],cl
   14004604d:	add    DWORD PTR [rax+rax*1],edx
   140046050:	add    al,0x50
   140046052:	add    BYTE PTR [rax],al
   140046054:	jl     0x140046076
   140046056:	add    eax,DWORD PTR [rax]
   140046058:	(bad)  
   140046059:	std    
   14004605a:	add    eax,DWORD PTR [rax]
   14004605c:	(bad)  
   14004605d:	add    BYTE PTR [rax],al
   14004605f:	add    bh,bh
   140046061:	(bad)  
   140046062:	(bad)  
   140046063:	inc    DWORD PTR [rax]
   140046065:	add    BYTE PTR [rax],al
   140046067:	add    bh,bh
   140046069:	(bad)  
   14004606a:	(bad)  
   14004606b:	inc    DWORD PTR [rax]
   14004606d:	add    BYTE PTR [rax],al
   14004606f:	add    bh,bh
   140046071:	(bad)  
   140046072:	(bad)  
   140046073:	dec    DWORD PTR [rbp+0x2000361]
   140046079:	add    BYTE PTR [rax],al
   14004607b:	add    BYTE PTR [rcx+0x2000361],bl
   140046081:	add    BYTE PTR [rax],al
   140046083:	add    BYTE PTR [rbp+0x2000361],ah
   140046089:	add    BYTE PTR [rax],al
   14004608b:	add    BYTE PTR [rax],al
   14004608d:	add    BYTE PTR [rax],al
   14004608f:	add    BYTE PTR [rdx],al
   140046091:	add    BYTE PTR [rax],al
   140046093:	add    BYTE PTR [rax],al
   140046095:	add    BYTE PTR [rax],al
   140046097:	add    BYTE PTR [rdx],al
   140046099:	add    BYTE PTR [rax],al
   14004609b:	add    BYTE PTR [rcx+0x7000361],dh
   1400460a1:	add    BYTE PTR [rax],al
   1400460a3:	add    BYTE PTR [rbp+0x7000361],bh
   1400460a9:	add    BYTE PTR [rax],al
   1400460ab:	add    cl,cl
   1400460ad:	(bad)  
   1400460ae:	add    eax,DWORD PTR [rax]
   1400460b0:	pushf  
   1400460b1:	jb     0x1400460b3
   1400460b3:	add    bh,bh
   1400460b5:	(bad)  
   1400460b6:	(bad)  
   1400460b7:	(bad)  
   1400460b8:	jmp    0x14204612f
   1400460bd:	add    BYTE PTR [rax],al
   1400460bf:	add    BYTE PTR [rbx],cl
   1400460c1:	jae    0x1400460c3
   1400460c3:	add    BYTE PTR [rbx],al
   1400460c5:	add    BYTE PTR [rax],al
   1400460c7:	add    BYTE PTR [rsi],dl
   1400460c9:	jae    0x1400460cb
   1400460cb:	add    BYTE PTR [rax+rax*1],al
   1400460ce:	add    BYTE PTR [rax],al
   1400460d0:	and    DWORD PTR [rbx+0x0],esi
   1400460d3:	add    BYTE PTR [rdx],al
   1400460d5:	add    BYTE PTR [rax],al
   1400460d7:	add    BYTE PTR [rdx+0x73],dl
   1400460da:	add    BYTE PTR [rax],al
   1400460dc:	(bad)  
   1400460dd:	add    BYTE PTR [rax],al
   1400460df:	add    BYTE PTR [rbx+rsi*2+0x0],dh
   1400460e3:	add    BYTE PTR [rax],cl
   1400460e5:	add    BYTE PTR [rax],al
   1400460e7:	add    BYTE PTR [rdi+0x73],bh
   1400460ea:	add    BYTE PTR [rax],al
   1400460ec:	or     DWORD PTR [rax],eax
   1400460ee:	add    BYTE PTR [rax],al
   1400460f0:	mov    dh,BYTE PTR [rbx+0x0]
   1400460f3:	add    BYTE PTR [rdi],al
   1400460f5:	add    BYTE PTR [rax],al
   1400460f7:	add    BYTE PTR [rcx+0x2000073],ch
   1400460fd:	add    BYTE PTR [rax],al
   1400460ff:	add    BYTE PTR [rbx-0xffff8d],bh
   140046105:	(bad)  
   140046106:	(bad)  
   140046107:	call   QWORD PTR [rcx]
   140046109:	(bad)  
   14004610a:	(bad)  
   14004610b:	add    BYTE PTR [rsi],cl
   14004610d:	rol    BYTE PTR [rdi],cl
   14004610f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143646586
   140046116:	add    dl,BYTE PTR [rax+0x18]
   140046119:	mov    al,0x2
   14004611b:	add    BYTE PTR [rax-0xfffc03],dl
   140046121:	(bad)  
   140046122:	(bad)  
   140046123:	inc    DWORD PTR [rbx+0x62]
   140046126:	add    eax,DWORD PTR [rax]
   140046128:	adc    al,0x79
   14004612a:	add    BYTE PTR [rax],al
   14004612c:	(bad)  
   14004612d:	(bad)  
   14004612e:	(bad)  
   14004612f:	dec    DWORD PTR [rax+0x79]
   140046132:	add    BYTE PTR [rax],al
   140046134:	add    BYTE PTR [rax],al
   140046136:	add    BYTE PTR [rax],al
   140046138:	and    edi,DWORD PTR [rdx+0x0]
   14004613b:	add    bh,bh
   14004613d:	(bad)  
   14004613e:	(bad)  
   14004613f:	inc    DWORD PTR [rcx]
   140046141:	or     BYTE PTR [rax+rax*1],al
   140046144:	or     BYTE PTR [rdx+0x4],dl
   140046147:	jo     0x14004614c
   140046149:	(bad)  
   14004614a:	add    dh,BYTE PTR [rax]
   14004614c:	add    DWORD PTR [rdi],eax
   14004614e:	add    eax,DWORD PTR [rax]
   140046150:	(bad)  
   140046151:	(bad)  
   140046153:	jo     0x140046157
   140046155:	xor    BYTE PTR [rax],al
   140046157:	add    BYTE PTR [rcx],bl
   140046159:	xor    DWORD PTR [rip+0x1fd42300],ecx        # 0x15fd8845f
   14004615f:	add    BYTE PTR [rbx],ah
   140046161:	je     0x140046181
   140046163:	add    BYTE PTR [rbx],ah
   140046165:	fs sbb eax,0x1c342300
   14004616b:	add    BYTE PTR [rbx],ah
   14004616d:	add    DWORD PTR [rax],ebx
   14004616f:	add    BYTE PTR [rax],bl
   140046171:	lock (bad) 
   140046173:	loopne 0x140046189
   140046175:	push   rax
   140046176:	add    BYTE PTR [rax],al
   140046178:	(bad)  
   140046179:	jge    0x14004617d
   14004617b:	add    BYTE PTR [rax+0x11000000],dh
   140046181:	sbb    DWORD PTR [rsi],eax
   140046183:	add    BYTE PTR [rcx],bl
   140046185:	or     al,BYTE PTR fs:[rax]
   140046188:	adc    al,0x34
   14004618a:	or     DWORD PTR [rax],eax
   14004618c:	(bad)  
   14004618d:	push   rdx
   14004618e:	add    dh,BYTE PTR [rax+0x18]
   140046191:	mov    al,0x2
   140046193:	add    al,al
   140046195:	std    
   140046196:	add    eax,DWORD PTR [rax]
   140046198:	(bad)  
   140046199:	(bad)  
   14004619a:	(bad)  
   14004619b:	call   FWORD PTR [rdx]
   14004619d:	jns    0x1400461a2
   14004619f:	add    ah,bl
   1400461a1:	nop
   1400461a2:	add    BYTE PTR [rax],al
   1400461a4:	(bad)  
   1400461a5:	(bad)  
   1400461a6:	(bad)  
   1400461a7:	call   QWORD PTR [rcx]
   1400461a9:	adc    eax,0x520c0004
   1400461ae:	or     BYTE PTR [rax+0x7],dh
   1400461b1:	(bad)  
   1400461b2:	(bad)  
   1400461b3:	xor    BYTE PTR [rax],bl
   1400461b5:	mov    al,0x2
   1400461b7:	add    al,dh
   1400461b9:	std    
   1400461ba:	add    eax,DWORD PTR [rax]
   1400461bc:	(bad)  
   1400461bd:	(bad)  
   1400461be:	(bad)  
   1400461bf:	push   rbp
   1400461c1:	(bad)  
   1400461c3:	add    BYTE PTR [rax],al
   1400461c5:	add    BYTE PTR [rax],al
   1400461c7:	add    BYTE PTR [rdi],bl
   1400461c9:	movsxd eax,DWORD PTR [rbx]
   1400461cb:	add    BYTE PTR [rax],ch
   1400461cd:	nop
   1400461ce:	add    BYTE PTR [rax],al
   1400461d0:	(bad)  
   1400461d1:	(bad)  
   1400461d2:	(bad)  
   1400461d3:	(bad)  
   1400461d4:	mov    esp,0x90
   1400461d9:	add    BYTE PTR [rax],al
   1400461db:	add    dl,cl
   1400461dd:	nop
   1400461de:	add    BYTE PTR [rax],al
   1400461e0:	(bad)  
   1400461e1:	(bad)  
   1400461e2:	(bad)  
   1400461e3:	inc    DWORD PTR [rcx]
   1400461e5:	or     al,BYTE PTR [rax+rax*1]
   1400461e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400461eb:	add    BYTE PTR [rdx],cl
   1400461ed:	xor    al,BYTE PTR [rsi]
   1400461ef:	jo     0x1400461f2
   1400461f1:	adc    al,0x8
   1400461f3:	add    BYTE PTR [rsp+riz*2],dl
   1400461f6:	or     DWORD PTR [rax],eax
   1400461f8:	adc    al,0x54
   1400461fa:	or     BYTE PTR [rax],al
   1400461fc:	adc    al,0x34
   1400461fe:	(bad)  
   1400461ff:	add    BYTE PTR [rdx+rsi*1],dl
   140046202:	adc    BYTE PTR [rax+0x1],dh
   140046205:	adc    al,BYTE PTR [rsi]
   140046207:	add    BYTE PTR [rdx],dl
   140046209:	je     0x140046216
   14004620b:	add    BYTE PTR [rdx],dl
   14004620d:	xor    al,0xa
   14004620f:	add    BYTE PTR [rdx],dl
   140046211:	jb     0x14004621e
   140046213:	push   rax
   140046214:	sbb    DWORD PTR [rbx],esi
   140046216:	or     eax,DWORD PTR [rax]
   140046218:	and    eax,0x19002f34
   14004621d:	add    DWORD PTR [rax+rax*1],esp
   140046220:	(bad)  
   140046221:	lock or al,0xe0
   140046224:	or     dl,al
   140046226:	or     al,al
   140046228:	(bad)  
   140046229:	jo     0x140046230
   14004622b:	(bad)  
   14004622c:	add    al,0x50
   14004622e:	add    BYTE PTR [rax],al
   140046230:	jl     0x140046252
   140046232:	add    eax,DWORD PTR [rax]
   140046234:	and    dh,bh
   140046236:	add    eax,DWORD PTR [rax]
   140046238:	adc    al,BYTE PTR [rcx]
   14004623a:	add    BYTE PTR [rax],al
   14004623c:	(bad)  
   14004623d:	(bad)  
   14004623e:	(bad)  
   14004623f:	jmp    FWORD PTR [rbx]
   140046241:	movsxd eax,DWORD PTR [rbx]
   140046243:	add    bh,bh
   140046245:	(bad)  
   140046246:	(bad)  
   140046247:	push   QWORD PTR [rdi]
   140046249:	movsxd eax,DWORD PTR [rbx]
   14004624b:	add    bh,bh
   14004624d:	(bad)  
   14004624e:	(bad)  
   14004624f:	inc    DWORD PTR [rax]
   140046251:	add    BYTE PTR [rax],al
   140046253:	add    bh,bh
   140046255:	(bad)  
   140046256:	(bad)  
   140046257:	inc    DWORD PTR [rax]
   140046259:	add    BYTE PTR [rax],al
   14004625b:	add    BYTE PTR [rcx],al
   14004625d:	add    BYTE PTR [rax],al
   14004625f:	add    BYTE PTR [rbx+0x63],al
   140046262:	add    eax,DWORD PTR [rax]
   140046264:	add    DWORD PTR [rax],eax
   140046266:	add    BYTE PTR [rax],al
   140046268:	rex.WRXB movsxd r8,DWORD PTR [r11]
   14004626b:	add    BYTE PTR [rcx],al
   14004626d:	add    BYTE PTR [rax],al
   14004626f:	add    BYTE PTR [rbx+0x63],bl
   140046272:	add    eax,DWORD PTR [rax]
   140046274:	add    DWORD PTR [rax],eax
   140046276:	add    BYTE PTR [rax],al
   140046278:	movsxd eax,DWORD PTR [ebx]
   14004627b:	add    BYTE PTR [rcx],al
   14004627d:	add    BYTE PTR [rax],al
   14004627f:	add    BYTE PTR [rbx+0x63],dh
   140046282:	add    eax,DWORD PTR [rax]
   140046284:	add    DWORD PTR [rax],eax
   140046286:	add    BYTE PTR [rax],al
   140046288:	jg     0x1400462ed
   14004628a:	add    eax,DWORD PTR [rax]
   14004628c:	add    DWORD PTR [rax],eax
   14004628e:	add    BYTE PTR [rax],al
   140046290:	mov    esp,DWORD PTR [rbx+0x3]
   140046293:	add    BYTE PTR [rcx],al
   140046295:	add    BYTE PTR [rax],al
   140046297:	add    BYTE PTR [rdi+0x1000363],dl
   14004629d:	add    BYTE PTR [rax],al
   14004629f:	add    BYTE PTR [rbx-0xfffc9d],ah
   1400462a5:	(bad)  
   1400462a6:	(bad)  
   1400462a7:	inc    DWORD PTR [rax]
   1400462a9:	add    BYTE PTR [rax],al
   1400462ab:	add    bh,bh
   1400462ad:	(bad)  
   1400462ae:	(bad)  
   1400462af:	inc    DWORD PTR [rax]
   1400462b1:	add    BYTE PTR [rax],al
   1400462b3:	add    bh,bh
   1400462b5:	(bad)  
   1400462b6:	(bad)  
   1400462b7:	inc    DWORD PTR [rax]
   1400462b9:	add    BYTE PTR [rax],al
   1400462bb:	add    bh,bh
   1400462bd:	(bad)  
   1400462be:	(bad)  
   1400462bf:	inc    DWORD PTR [rax]
   1400462c1:	add    BYTE PTR [rax],al
   1400462c3:	add    bh,bh
   1400462c5:	(bad)  
   1400462c6:	(bad)  
   1400462c7:	jmp    FWORD PTR [rdi+0x20000363]
   1400462cd:	test   DWORD PTR [rax],eax
   1400462cf:	add    bh,bh
   1400462d1:	(bad)  
   1400462d2:	(bad)  
   1400462d3:	(bad)  
   1400462d4:	jge    0x14004625b
   1400462d6:	add    BYTE PTR [rax],al
   1400462d8:	add    DWORD PTR [rax],eax
   1400462da:	add    BYTE PTR [rax],al
   1400462dc:	rol    DWORD PTR [rdi+0x50000],cl
   1400462e2:	add    BYTE PTR [rax],al
   1400462e4:	sbb    BYTE PTR [rax+0x10000],cl
   1400462ea:	add    BYTE PTR [rax],al
   1400462ec:	(bad)  
   1400462ed:	mov    BYTE PTR [rax],al
   1400462ef:	add    BYTE PTR [rax],cl
   1400462f1:	add    BYTE PTR [rax],al
   1400462f3:	add    BYTE PTR [rdi+0x1000088],ah
   1400462f9:	add    BYTE PTR [rax],al
   1400462fb:	add    ch,dh
   1400462fd:	mov    BYTE PTR [rax],al
   1400462ff:	add    BYTE PTR [rbx],cl
   140046301:	add    BYTE PTR [rax],al
   140046303:	add    BYTE PTR [rdx],bh
   140046305:	mov    DWORD PTR [rax],eax
   140046307:	add    BYTE PTR [rcx],al
   140046309:	add    BYTE PTR [rax],al
   14004630b:	add    BYTE PTR [rbx-0xffff76],bh
   140046311:	(bad)  
   140046312:	(bad)  
   140046313:	call   QWORD PTR [rcx]
   140046315:	sbb    BYTE PTR [rax+rax*1],al
   140046318:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004631b:	add    BYTE PTR [rdx],cl
   14004631d:	push   rdx
   14004631e:	(bad)  
   14004631f:	jo     0x140046339
   140046321:	mov    al,0x2
   140046323:	add    BYTE PTR [rax-0x2],dl
   140046326:	add    eax,DWORD PTR [rax]
   140046328:	(bad)  
   140046329:	(bad)  
   14004632a:	(bad)  
   14004632b:	push   QWORD PTR [rax+0x362]
   140046331:	add    BYTE PTR [rax],al
   140046333:	add    BYTE PTR [rdx+riz*2+0x10003],bh
   14004633a:	add    BYTE PTR [rax],al
   14004633c:	iret   
   14004633d:	(bad)  
   14004633f:	add    BYTE PTR [rdx],al
   140046341:	add    BYTE PTR [rax],al
   140046343:	add    dl,ah
   140046345:	(bad)  
   140046347:	add    BYTE PTR [rax-0xffff7c],bh
   14004634d:	(bad)  
   14004634e:	(bad)  
   14004634f:	call   rbp
   140046351:	test   BYTE PTR [rax],al
   140046353:	add    BYTE PTR [rdx],al
   140046355:	add    BYTE PTR [rax],al
   140046357:	add    dl,ah
   140046359:	test   BYTE PTR [rax],al
   14004635b:	add    BYTE PTR [rcx],al
   14004635d:	add    BYTE PTR [rax],al
   14004635f:	add    bh,ch
   140046361:	test   BYTE PTR [rax],al
   140046363:	add    BYTE PTR [rax],al
   140046365:	add    BYTE PTR [rax],al
   140046367:	add    ah,bh
   140046369:	test   BYTE PTR [rax],al
   14004636b:	add    bh,bh
   14004636d:	(bad)  
   14004636e:	(bad)  
   14004636f:	call   QWORD PTR [rcx]
   140046371:	and    BYTE PTR [rsi],al
   140046373:	add    BYTE PTR [rax],ah
   140046375:	or     eax,DWORD PTR fs:[rax]
   140046378:	sbb    al,0x34
   14004637a:	or     al,BYTE PTR [rax]
   14004637c:	adc    BYTE PTR [rdx+0xc],dl
   14004637f:	jo     0x140046399
   140046381:	mov    al,0x2
   140046383:	add    BYTE PTR [rax-0xfffc02],al
   140046389:	(bad)  
   14004638a:	(bad)  
   14004638b:	dec    DWORD PTR [rdi+0x62]
   14004638e:	add    eax,DWORD PTR [rax]
   140046390:	(bad)  
   140046391:	(bad)  
   140046392:	(bad)  
   140046393:	call   FWORD PTR [rbx+0x62]
   140046396:	add    eax,DWORD PTR [rax]
   140046398:	(bad)  
   140046399:	(bad)  
   14004639a:	(bad)  
   14004639b:	jmp    FWORD PTR [rbx+0x62]
   14004639e:	add    eax,DWORD PTR [rax]
   1400463a0:	add    al,BYTE PTR [rax]
   1400463a2:	add    BYTE PTR [rax],al
   1400463a4:	ja     0x140046408
   1400463a6:	add    eax,DWORD PTR [rax]
   1400463a8:	add    eax,DWORD PTR [rax]
   1400463aa:	add    BYTE PTR [rax],al
   1400463ac:	mov    ah,BYTE PTR [rdx+0x3]
   1400463af:	add    BYTE PTR [rax+rax*1],al
   1400463b2:	add    BYTE PTR [rax],al
   1400463b4:	popf   
   1400463b5:	(bad)  
   1400463b7:	add    BYTE PTR [rax-0xffff7d],cl
   1400463bd:	(bad)  
   1400463be:	(bad)  
   1400463bf:	(bad)  
   1400463c0:	fadd   DWORD PTR [rbx+0x20000]
   1400463c6:	add    BYTE PTR [rax],al
   1400463c8:	(bad)  
   1400463c9:	test   BYTE PTR [rax],al
   1400463cb:	add    BYTE PTR [rbx],al
   1400463cd:	add    BYTE PTR [rax],al
   1400463cf:	add    BYTE PTR [rip+0x4000084],ah        # 0x144046459
   1400463d5:	add    BYTE PTR [rax],al
   1400463d7:	add    BYTE PTR [rbx],dh
   1400463d9:	test   BYTE PTR [rax],al
   1400463db:	add    BYTE PTR [rip+0xffffffffa2000000],al        # 0xe20463e1
   1400463e1:	test   BYTE PTR [rax],al
   1400463e3:	add    bh,bh
   1400463e5:	(bad)  
   1400463e6:	(bad)  
   1400463e7:	call   FWORD PTR [rcx]
   1400463e9:	sbb    eax,DWORD PTR [rax+rax*1]
   1400463ec:	or     al,0x34
   1400463ee:	adc    eax,DWORD PTR [rax]
   1400463f0:	or     al,0xd2
   1400463f2:	or     BYTE PTR [rax-0x2c],dh
   1400463f5:	jge    0x1400463f9
   1400463f7:	add    BYTE PTR [rax+0x0],ch
   1400463fa:	add    BYTE PTR [rax],al
   1400463fc:	add    DWORD PTR [rcx],ebx
   1400463fe:	or     al,BYTE PTR [rax]
   140046400:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140046404:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140046408:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14004640c:	sbb    DWORD PTR [rax+rcx*1],esi
   14004640f:	add    BYTE PTR [rcx],bl
   140046411:	push   rdx
   140046412:	adc    eax,0x93219e0
   140046417:	add    BYTE PTR [rsp+rsi*2],ah
   14004641a:	sub    al,BYTE PTR [rax]
   14004641c:	and    BYTE PTR [rcx+rbp*1+0x0],ah
   140046420:	sbb    al,0x34
   140046422:	sub    BYTE PTR [rax],al
   140046424:	smsw   WORD PTR [rsi]
   140046427:	add    BYTE PTR [rax+rdx*2],al
   14004642a:	add    BYTE PTR [rax],al
   14004642c:	jl     0x14004644e
   14004642e:	add    eax,DWORD PTR [rax]
   140046430:	mov    al,0xfe
   140046432:	add    eax,DWORD PTR [rax]
   140046434:	and    al,BYTE PTR [rcx]
   140046436:	add    BYTE PTR [rax],al
   140046438:	(bad)  
   140046439:	(bad)  
   14004643a:	(bad)  
   14004643b:	push   QWORD PTR [rax+0x6d]
   14004643e:	add    eax,DWORD PTR [rax]
   140046440:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046441:	ret    
   140046442:	add    BYTE PTR [rax],al
   140046444:	(bad)  
   140046445:	(bad)  
   140046446:	(bad)  
   140046447:	push   QWORD PTR [rdx]
   140046449:	(bad)  
   14004644a:	add    BYTE PTR [rax],al
   14004644c:	add    BYTE PTR [rax],al
   14004644e:	add    BYTE PTR [rax],al
   140046450:	xchg   ebx,eax
   140046451:	mov    BYTE PTR [rax],0x0
   140046454:	(bad)  
   140046455:	(bad)  
   140046456:	(bad)  
   140046457:	call   QWORD PTR [rcx]
   140046459:	sbb    DWORD PTR [rsi],eax
   14004645b:	add    BYTE PTR [rcx],bl
   14004645d:	fs or  al,0x0
   140046460:	adc    al,0x34
   140046462:	or     eax,DWORD PTR [rax]
   140046464:	(bad)  
   140046465:	jb     0x140046469
   140046467:	jo     0x140046481
   140046469:	mov    al,0x2
   14004646b:	add    al,ah
   14004646d:	inc    BYTE PTR [rbx]
   14004646f:	add    bh,bh
   140046471:	(bad)  
   140046472:	(bad)  
   140046473:	inc    DWORD PTR [rip+0xffffffffff00036c]        # 0x13f0467e5
   140046479:	(bad)  
   14004647a:	(bad)  
   14004647b:	call   QWORD PTR [rcx]
   14004647d:	ins    BYTE PTR es:[rdi],dx
   14004647e:	add    eax,DWORD PTR [rax]
   140046480:	xchg   esp,eax
   140046481:	rol    DWORD PTR [rax],0x0
   140046484:	(bad)  
   140046485:	(bad)  
   140046486:	(bad)  
   140046487:	inc    DWORD PTR [rdx+rax*8+0x0]
   14004648e:	add    BYTE PTR [rax],al
   140046490:	xchg   esi,eax
   140046491:	ret    0x0
   140046494:	(bad)  
   140046495:	(bad)  
   140046496:	(bad)  
   140046497:	call   FWORD PTR [rcx]
   140046499:	(bad)  
   14004649a:	or     DWORD PTR [rax],eax
   14004649c:	cs xor al,0x18
   14004649f:	add    bl,BYTE PTR [rip+0x8021001]        # 0x1480674a6
   1400464a5:	lock (bad) 
   1400464a7:	loopne 0x1400464ad
   1400464a9:	jo     0x1400464ae
   1400464ab:	(bad)  
   1400464ac:	add    dl,BYTE PTR [rax+0x0]
   1400464af:	add    BYTE PTR [rax+riz*1+0x3],bh
   1400464b3:	add    BYTE PTR [rax],dl
   1400464b5:	inc    DWORD PTR [rbx]
   1400464b7:	add    BYTE PTR [rdx+0x10],dh
   1400464ba:	add    BYTE PTR [rax],al
   1400464bc:	(bad)  
   1400464bd:	(bad)  
   1400464be:	(bad)  
   1400464bf:	call   FWORD PTR [rip+0x36c]        # 0x140046831
   1400464c5:	add    BYTE PTR [rax],al
   1400464c7:	add    BYTE PTR [rcx],ch
   1400464c9:	ins    BYTE PTR es:[rdi],dx
   1400464ca:	add    eax,DWORD PTR [rax]
   1400464cc:	add    BYTE PTR [rax],al
   1400464ce:	add    BYTE PTR [rax],al
   1400464d0:	xor    eax,0x6c00036c
   1400464d5:	mov    edi,0xffff0000
   1400464da:	(bad)  
   1400464db:	(bad)  
   1400464dc:	out    dx,al
   1400464dd:	mov    edi,0x0
   1400464e2:	add    BYTE PTR [rax],al
   1400464e4:	and    al,al
   1400464e6:	add    BYTE PTR [rax],al
   1400464e8:	add    DWORD PTR [rax],eax
   1400464ea:	add    BYTE PTR [rax],al
   1400464ec:	xor    al,al
   1400464ee:	add    BYTE PTR [rax],al
   1400464f0:	add    BYTE PTR [rax],al
   1400464f2:	add    BYTE PTR [rax],al
   1400464f4:	nop
   1400464f5:	rol    BYTE PTR [rax],0x0
   1400464f8:	add    al,BYTE PTR [rax]
   1400464fa:	add    BYTE PTR [rax],al
   1400464fc:	sahf   
   1400464fd:	rol    BYTE PTR [rax],0x0
   140046500:	add    BYTE PTR [rax],al
   140046502:	add    BYTE PTR [rax],al
   140046504:	rol    QWORD PTR [r8],0x0
   140046508:	(bad)  
   140046509:	(bad)  
   14004650a:	(bad)  
   14004650b:	call   FWORD PTR [rcx]
   14004650d:	cmp    DWORD PTR [rip+0x25742b00],ecx        # 0x165789013
   140046513:	add    BYTE PTR [rdi],ah
   140046515:	fs and al,0x0
   140046518:	and    esi,DWORD PTR [rbx+riz*1]
   14004651b:	add    BYTE PTR [rdi],dl
   14004651d:	add    DWORD PTR [rax+rax*1],ebx
   140046520:	or     al,0xf0
   140046522:	or     ah,al
   140046524:	or     al,dl
   140046526:	(bad)  
   140046527:	rol    BYTE PTR [rax+rdx*2],0x0
   14004652b:	add    BYTE PTR [rax+riz*1+0x3],bh
   14004652f:	add    BYTE PTR [rax-0x1],al
   140046532:	add    eax,DWORD PTR [rax]
   140046534:	rol    BYTE PTR [rax],cl
   140046536:	add    BYTE PTR [rax],al
   140046538:	(bad)  
   140046539:	(bad)  
   14004653a:	(bad)  
   14004653b:	jmp    FWORD PTR [rsi+0x7c]
   14004653e:	add    eax,DWORD PTR [rax]
   140046540:	(bad)  
   140046541:	(bad)  
   140046542:	(bad)  
   140046543:	(bad)  
   140046544:	jp     0x1400465c2
   140046546:	add    eax,DWORD PTR [rax]
   140046548:	jo     0x140046503
   14004654a:	add    BYTE PTR [rax],al
   14004654c:	(bad)  
   14004654d:	(bad)  
   14004654e:	(bad)  
   14004654f:	jmp    QWORD PTR [rdi-0x44]
   140046552:	add    BYTE PTR [rax],al
   140046554:	add    BYTE PTR [rax],al
   140046556:	add    BYTE PTR [rax],al
   140046558:	jl     0x140046516
   14004655a:	add    BYTE PTR [rax],al
   14004655c:	(bad)  
   14004655d:	(bad)  
   14004655e:	(bad)  
   14004655f:	dec    DWORD PTR [rcx]
   140046561:	add    al,0x1
   140046563:	add    BYTE PTR [rdx+rax*2],al
   140046566:	add    BYTE PTR [rax],al
   140046568:	xor    QWORD PTR [rdx],rax
   14004656b:	add    BYTE PTR [rcx],al
   14004656d:	add    BYTE PTR [rax],al
   14004656f:	add    BYTE PTR [rax-0x47],bl
   140046572:	add    BYTE PTR [rax],al
   140046574:	fs mov ecx,0x10000
   14004657a:	add    BYTE PTR [rax],al
   14004657c:	push   0x10000b9
   140046581:	adc    al,0x8
   140046583:	add    BYTE PTR [rsp+riz*2],dl
   140046586:	or     eax,0xc541400
   14004658b:	add    BYTE PTR [rsp+rsi*1],dl
   14004658e:	or     eax,DWORD PTR [rax]
   140046590:	adc    al,0x72
   140046592:	adc    BYTE PTR [rax+0x19],dh
   140046595:	rex or eax,0x5b742f00
   14004659b:	add    BYTE PTR [rbx],ch
   14004659d:	fs pop rdx
   14004659f:	add    BYTE PTR [rdi],ah
   1400465a1:	xor    al,0x59
   1400465a3:	add    BYTE PTR [rdx],bl
   1400465a5:	add    DWORD PTR [rdx+0x0],edx
   1400465a8:	or     al,0xf0
   1400465aa:	or     ah,al
   1400465ac:	or     al,dl
   1400465ae:	(bad)  
   1400465af:	rol    BYTE PTR [rax+rdx*2],0x0
   1400465b3:	add    BYTE PTR [rax+riz*1+0x3],bh
   1400465b7:	add    BYTE PTR [rax-0x1],dh
   1400465ba:	add    eax,DWORD PTR [rax]
   1400465bc:	(bad)  
   1400465bd:	add    al,BYTE PTR [rax]
   1400465bf:	add    bh,bh
   1400465c1:	(bad)  
   1400465c2:	(bad)  
   1400465c3:	push   QWORD PTR [rbp*2+0x3]
   1400465ca:	add    BYTE PTR [rax],al
   1400465cc:	rex ins DWORD PTR es:[rdi],dx
   1400465ce:	add    eax,DWORD PTR [rax]
   1400465d0:	add    DWORD PTR [rax],eax
   1400465d2:	add    BYTE PTR [rax],al
   1400465d4:	push   rax
   1400465d5:	ins    DWORD PTR es:[rdi],dx
   1400465d6:	add    eax,DWORD PTR [rax]
   1400465d8:	add    BYTE PTR [rax],al
   1400465da:	add    BYTE PTR [rax],al
   1400465dc:	(bad)  
   1400465dd:	ins    DWORD PTR es:[rdi],dx
   1400465de:	add    eax,DWORD PTR [rax]
   1400465e0:	cmp    al,0xad
   1400465e2:	add    BYTE PTR [rax],al
   1400465e4:	(bad)  
   1400465e5:	(bad)  
   1400465e6:	(bad)  
   1400465e7:	call   QWORD PTR [rcx+0xad]
   1400465ed:	add    BYTE PTR [rax],al
   1400465ef:	add    dl,dl
   1400465f1:	lods   eax,DWORD PTR ds:[rsi]
   1400465f2:	add    BYTE PTR [rax],al
   1400465f4:	add    DWORD PTR [rax],eax
   1400465f6:	add    BYTE PTR [rax],al
   1400465f8:	jmp    0x1400465a7
   1400465fa:	add    BYTE PTR [rax],al
   1400465fc:	add    al,BYTE PTR [rax]
   1400465fe:	add    BYTE PTR [rax],al
   140046600:	imul   BYTE PTR [rbp+0x30000]
   140046606:	add    BYTE PTR [rax],al
   140046608:	add    BYTE PTR [rsi+0x0],ch
   14004660e:	add    BYTE PTR [rax],al
   140046610:	add    eax,0xff0000ae
   140046615:	(bad)  
   140046616:	(bad)  
   140046617:	call   FWORD PTR [rcx]
   140046619:	xor    ecx,DWORD PTR [rdx]
   14004661b:	add    BYTE PTR [rip+0x21001964],ah        # 0x161047f85
   140046621:	xor    al,0x18
   140046623:	add    BYTE PTR [rip+0x9f00bf2],dl        # 0x149f4721b
   140046629:	loopne 0x140046632
   14004662b:	rol    BYTE PTR [rip+0x7c500470],1        # 0x1bc546aa1
   140046631:	and    BYTE PTR [rbx],al
   140046633:	add    BYTE PTR [rax+0x720003ff],ah
   140046639:	add    BYTE PTR [rax],al
   14004663b:	add    bh,bh
   14004663d:	(bad)  
   14004663e:	(bad)  
   14004663f:	(bad)  
   140046640:	jl     0x1400466af
   140046642:	add    eax,DWORD PTR [rax]
   140046644:	add    BYTE PTR [rax],al
   140046646:	add    BYTE PTR [rax],al
   140046648:	mov    BYTE PTR [rbp+0x3],ch
   14004664b:	add    al,ah
   14004664d:	movabs eax,ds:0xa2e9ffffffff0000
   140046656:	add    BYTE PTR [rax],al
   140046658:	add    BYTE PTR [rax],al
   14004665a:	add    BYTE PTR [rax],al
   14004665c:	sbb    DWORD PTR [rbx+0x10000],esp
   140046662:	add    BYTE PTR [rax],al
   140046664:	sub    DWORD PTR [rbx+0x0],esp
   14004666a:	add    BYTE PTR [rax],al
   14004666c:	pop    rdi
   14004666d:	movabs ds:0x1a11ffffffff0000,eax
   140046676:	(bad)  
   140046677:	add    BYTE PTR [rdx],bl
   140046679:	xor    al,0xc
   14004667b:	add    BYTE PTR [rdx+rdx*2],cl
   14004667e:	or     BYTE PTR [rax+0x7],dh
   140046681:	(bad)  
   140046682:	(bad)  
   140046683:	push   rax
   140046684:	sbb    BYTE PTR [rax-0x2ffffe],dh
   14004668a:	add    eax,DWORD PTR [rax]
   14004668c:	(bad)  
   14004668d:	(bad)  
   14004668e:	(bad)  
   14004668f:	inc    DWORD PTR [rcx+rbp*2+0x3]
   140046696:	add    BYTE PTR [rax],al
   140046698:	nop
   140046699:	imul   eax,DWORD PTR [rbx],0x100
   14004669f:	add    BYTE PTR [rax+0x2000369],ah
   1400466a5:	add    BYTE PTR [rax],al
   1400466a7:	add    BYTE PTR [rax+0x3000369],dh
   1400466ad:	add    BYTE PTR [rax],al
   1400466af:	add    al,al
   1400466b1:	imul   eax,DWORD PTR [rbx],0x400
   1400466b7:	add    al,dl
   1400466b9:	imul   eax,DWORD PTR [rbx],0x500
   1400466bf:	add    bl,ah
   1400466c1:	imul   eax,DWORD PTR [rbx],0x600
   1400466c7:	add    dh,dh
   1400466c9:	imul   eax,DWORD PTR [rbx],0x700
   1400466cf:	add    BYTE PTR [rcx],cl
   1400466d1:	push   0x3
   1400466d3:	add    BYTE PTR [rax],cl
   1400466d5:	add    BYTE PTR [rax],al
   1400466d7:	add    BYTE PTR [rdx+rbp*2],bl
   1400466da:	add    eax,DWORD PTR [rax]
   1400466dc:	or     DWORD PTR [rax],eax
   1400466de:	add    BYTE PTR [rax],al
   1400466e0:	(bad)  
   1400466e1:	push   0x3
   1400466e3:	add    BYTE PTR [rdx],cl
   1400466e5:	add    BYTE PTR [rax],al
   1400466e7:	add    BYTE PTR [rdx+0x6a],al
   1400466ea:	add    eax,DWORD PTR [rax]
   1400466ec:	or     eax,DWORD PTR [rax]
   1400466ee:	add    BYTE PTR [rax],al
   1400466f0:	push   rbp
   1400466f1:	push   0x3
   1400466f3:	add    BYTE PTR [rax+rax*1],cl
   1400466f6:	add    BYTE PTR [rax],al
   1400466f8:	push   0xd00036a
   1400466fd:	add    BYTE PTR [rax],al
   1400466ff:	add    BYTE PTR [rbx+0x6a],bh
   140046702:	add    eax,DWORD PTR [rax]
   140046704:	(bad)  
   140046705:	add    BYTE PTR [rax],al
   140046707:	add    BYTE PTR [rsi+0xf00036a],cl
   14004670d:	add    BYTE PTR [rax],al
   14004670f:	add    BYTE PTR [rcx+0x1000036a],ah
   140046715:	add    BYTE PTR [rax],al
   140046717:	add    BYTE PTR [rdx+rbp*2+0x110003],dh
   14004671e:	add    BYTE PTR [rax],al
   140046720:	(bad)  
   140046721:	push   0x3
   140046723:	add    BYTE PTR [rdx],dl
   140046725:	add    BYTE PTR [rax],al
   140046727:	add    dl,bl
   140046729:	push   0x3
   14004672b:	add    BYTE PTR [rbx],dl
   14004672d:	add    BYTE PTR [rax],al
   14004672f:	add    ch,ch
   140046731:	push   0x3
   140046733:	add    BYTE PTR [rax+rax*1],dl
   140046736:	add    BYTE PTR [rax],al
   140046738:	add    BYTE PTR [rbx+0x3],ch
   14004673b:	add    BYTE PTR [rip+0x13000000],dl        # 0x153046741
   140046741:	imul   eax,DWORD PTR [rbx],0x0
   140046744:	(bad)  
   140046745:	add    BYTE PTR [rax],al
   140046747:	add    BYTE PTR [rsi],ah
   140046749:	imul   eax,DWORD PTR [rbx],0x0
   14004674c:	(bad)  
   14004674d:	add    BYTE PTR [rax],al
   14004674f:	add    BYTE PTR [rcx],bh
   140046751:	imul   eax,DWORD PTR [rbx],0x0
   140046754:	sbb    BYTE PTR [rax],al
   140046756:	add    BYTE PTR [rax],al
   140046758:	imul   r8,QWORD PTR [rbx],0x0
   14004675c:	sbb    DWORD PTR [rax],eax
   14004675e:	add    BYTE PTR [rax],al
   140046760:	pop    rdi
   140046761:	imul   eax,DWORD PTR [rbx],0x0
   140046764:	sbb    al,BYTE PTR [rax]
   140046766:	add    BYTE PTR [rax],al
   140046768:	jb     0x1400467d5
   14004676a:	add    eax,DWORD PTR [rax]
   14004676c:	sbb    eax,DWORD PTR [rax]
   14004676e:	add    BYTE PTR [rax],al
   140046770:	test   DWORD PTR [rbx+0x3],ebp
   140046773:	add    BYTE PTR [rax+rax*1],bl
   140046776:	add    BYTE PTR [rax],al
   140046778:	cwde   
   140046779:	imul   eax,DWORD PTR [rbx],0x0
   14004677c:	sbb    eax,0xab000000
   140046781:	imul   eax,DWORD PTR [rbx],0x0
   140046784:	(bad)  
   140046785:	add    BYTE PTR [rax],al
   140046787:	add    BYTE PTR [rsi+0x1f00036b],bh
   14004678d:	add    BYTE PTR [rax],al
   14004678f:	add    cl,dl
   140046791:	imul   eax,DWORD PTR [rbx],0x0
   140046794:	adc    eax,0xe1000000
   140046799:	imul   eax,DWORD PTR [rbx],0x0
   14004679c:	mov    eax,0xff00009e
   1400467a1:	(bad)  
   1400467a2:	(bad)  
   1400467a3:	(bad)  
   1400467a4:	fistp  WORD PTR [rsi+0x1f0000]
   1400467aa:	add    BYTE PTR [rax],al
   1400467ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400467ad:	lahf   
   1400467ae:	add    BYTE PTR [rax],al
   1400467b0:	(bad)  
   1400467b1:	add    BYTE PTR [rax],al
   1400467b3:	add    BYTE PTR [rdi+rbx*4+0x1d0000],dh
   1400467ba:	add    BYTE PTR [rax],al
   1400467bc:	rcr    DWORD PTR [rdi+0x1c0000],0x0
   1400467c3:	add    al,ah
   1400467c5:	lahf   
   1400467c6:	add    BYTE PTR [rax],al
   1400467c8:	sbb    eax,DWORD PTR [rax]
   1400467ca:	add    BYTE PTR [rax],al
   1400467cc:	in     eax,dx
   1400467cd:	lahf   
   1400467ce:	add    BYTE PTR [rax],al
   1400467d0:	sbb    al,BYTE PTR [rax]
   1400467d2:	add    BYTE PTR [rax],al
   1400467d4:	sbb    esp,DWORD PTR [rax+0x190000]
   1400467da:	add    BYTE PTR [rax],al
   1400467dc:	sub    BYTE PTR [rax+0x180000],ah
   1400467e2:	add    BYTE PTR [rax],al
   1400467e4:	xor    eax,0x170000a0
   1400467e9:	add    BYTE PTR [rax],al
   1400467eb:	add    BYTE PTR [rax+riz*4+0x0],dl
   1400467ef:	add    BYTE PTR [rsi],dl
   1400467f1:	add    BYTE PTR [rax],al
   1400467f3:	add    BYTE PTR [rbx-0x60],dh
   1400467f6:	add    BYTE PTR [rax],al
   1400467f8:	adc    eax,0x89000000
   1400467fd:	movabs al,ds:0xa096000000140000
   140046806:	add    BYTE PTR [rax],al
   140046808:	adc    eax,DWORD PTR [rax]
   14004680a:	add    BYTE PTR [rax],al
   14004680c:	movabs ds:0xb0000000120000a0,eax
   140046815:	movabs al,ds:0xa0bd000000110000
   14004681e:	add    BYTE PTR [rax],al
   140046820:	adc    BYTE PTR [rax],al
   140046822:	add    BYTE PTR [rax],al
   140046824:	hlt    
   140046825:	movabs al,ds:0xa1010000000f0000
   14004682e:	add    BYTE PTR [rax],al
   140046830:	(bad)  
   140046831:	add    BYTE PTR [rax],al
   140046833:	add    BYTE PTR [rsi],cl
   140046835:	movabs eax,ds:0xa11b0000000d0000
   14004683e:	add    BYTE PTR [rax],al
   140046840:	or     al,0x0
   140046842:	add    BYTE PTR [rax],al
   140046844:	sub    BYTE PTR [rcx+0xb0000],ah
   14004684a:	add    BYTE PTR [rax],al
   14004684c:	xor    eax,0xa0000a1
   140046851:	add    BYTE PTR [rax],al
   140046853:	add    BYTE PTR [rdx-0x5f],al
   140046856:	add    BYTE PTR [rax],al
   140046858:	or     DWORD PTR [rax],eax
   14004685a:	add    BYTE PTR [rax],al
   14004685c:	push   rax
   14004685d:	movabs eax,ds:0xa15d000000080000
   140046866:	add    BYTE PTR [rax],al
   140046868:	(bad)  
   140046869:	add    BYTE PTR [rax],al
   14004686b:	add    BYTE PTR [rdx-0x5f],ch
   14004686e:	add    BYTE PTR [rax],al
   140046870:	(bad)  
   140046871:	add    BYTE PTR [rax],al
   140046873:	add    BYTE PTR [rdi-0x5f],dh
   140046876:	add    BYTE PTR [rax],al
   140046878:	add    eax,0x84000000
   14004687d:	movabs eax,ds:0xa191000000040000
   140046886:	add    BYTE PTR [rax],al
   140046888:	add    eax,DWORD PTR [rax]
   14004688a:	add    BYTE PTR [rax],al
   14004688c:	fwait
   14004688d:	movabs eax,ds:0xa1a5000000020000
   140046896:	add    BYTE PTR [rax],al
   140046898:	add    DWORD PTR [rax],eax
   14004689a:	add    BYTE PTR [rax],al
   14004689c:	mov    esp,0xa1
   1400468a1:	add    BYTE PTR [rax],al
   1400468a3:	add    dh,al
   1400468a5:	movabs eax,ds:0x1111ffffffff0000
   1400468ae:	add    DWORD PTR [rax],eax
   1400468b0:	or     DWORD PTR [rdx],esp
   1400468b2:	add    BYTE PTR [rax],al
   1400468b4:	sbb    BYTE PTR [rax+0x2],dh
   1400468ba:	add    al,0x0
   1400468bc:	(bad)  
   1400468bd:	(bad)  
   1400468be:	(bad)  
   1400468bf:	(bad)  
   1400468c0:	in     eax,dx
   1400468c1:	imul   eax,DWORD PTR [rbx],0x0
   1400468c4:	js     0x140046858
   1400468c6:	add    BYTE PTR [rax],al
   1400468c8:	(bad)  
   1400468c9:	(bad)  
   1400468ca:	(bad)  
   1400468cb:	call   QWORD PTR [rcx]
   1400468cd:	adc    eax,DWORD PTR [rdx]
   1400468cf:	add    BYTE PTR [rdx],cl
   1400468d1:	push   rdx
   1400468d2:	(bad)  
   1400468d3:	xor    BYTE PTR [rax],bl
   1400468d5:	mov    al,0x2
   1400468d7:	add    BYTE PTR [rax],dh
   1400468d9:	add    BYTE PTR [rax+rax*1],al
   1400468dc:	(bad)  
   1400468dd:	(bad)  
   1400468de:	(bad)  
   1400468df:	(bad)  
   1400468e0:	stc    
   1400468e1:	imul   eax,DWORD PTR [rbx],0x0
   1400468e4:	rex.R xchg edx,eax
   1400468e6:	add    BYTE PTR [rax],al
   1400468e8:	(bad)  
   1400468e9:	(bad)  
   1400468ea:	(bad)  
   1400468eb:	call   FWORD PTR [rcx]
   1400468ed:	cmp    BYTE PTR [rcx],cl
   1400468ef:	add    BYTE PTR [rdi],ah
   1400468f1:	je     0x14004691e
   1400468f3:	add    DWORD PTR [rbx],esp
   1400468f5:	sub    al,BYTE PTR fs:[rcx]
   1400468f8:	(bad)  
   1400468f9:	xor    al,0x29
   1400468fb:	add    DWORD PTR [rdx],edx
   1400468fd:	add    DWORD PTR [rsi],esp
   1400468ff:	add    DWORD PTR [rax+rdx*2],eax
   140046902:	add    BYTE PTR [rax],al
   140046904:	jl     0x140046926
   140046906:	add    eax,DWORD PTR [rax]
   140046908:	(bad)  
   140046909:	add    BYTE PTR [rax+rax*1],al
   14004690c:	and    cl,BYTE PTR [rcx]
   14004690e:	add    BYTE PTR [rax],al
   140046910:	shl    BYTE PTR [rbp-0x10000],0xff
   140046917:	call   FWORD PTR [rdi+rsi*4+0x0]
   14004691b:	add    BYTE PTR [rax],al
   14004691d:	add    BYTE PTR [rax],al
   14004691f:	add    BYTE PTR [rbx-0x49],ch
   140046922:	add    BYTE PTR [rax],al
   140046924:	add    DWORD PTR [rax],eax
   140046926:	add    BYTE PTR [rax],al
   140046928:	jp     0x1400468e1
   14004692a:	add    BYTE PTR [rax],al
   14004692c:	add    BYTE PTR [rax],al
   14004692e:	add    BYTE PTR [rax],al
   140046930:	jg     0x1400468e9
   140046932:	add    BYTE PTR [rax],al
   140046934:	(bad)  
   140046935:	(bad)  
   140046936:	(bad)  
   140046937:	call   FWORD PTR [rcx]
   140046939:	xor    al,0x9
   14004693b:	add    BYTE PTR [rdx],ah
   14004693d:	fs sub al,0x0
   140046940:	(bad)  
   140046941:	xor    al,0x2b
   140046943:	add    BYTE PTR [rdi],cl
   140046945:	add    DWORD PTR [rsi],esp
   140046947:	add    BYTE PTR [rax],cl
   140046949:	lock (bad) 
   14004694b:	loopne 0x140046951
   14004694d:	jo     0x14004694f
   14004694f:	add    BYTE PTR [rax+riz*1+0x3],bh
   140046953:	add    BYTE PTR [rax+0x23000400],dl
   140046959:	add    DWORD PTR [rax],eax
   14004695b:	add    bh,bh
   14004695d:	(bad)  
   14004695e:	(bad)  
   14004695f:	inc    DWORD PTR [rax]
   140046961:	add    BYTE PTR [rax],al
   140046963:	add    BYTE PTR [rax],al
   140046965:	add    BYTE PTR [rax],al
   140046967:	add    BYTE PTR [rbp+rbp*2-0xfffd],ch
   14004696e:	(bad)  
   14004696f:	inc    DWORD PTR [rax]
   140046971:	add    BYTE PTR [rax],al
   140046973:	add    BYTE PTR [rax],al
   140046975:	add    BYTE PTR [rax],al
   140046977:	add    BYTE PTR [rcx],al
   140046979:	add    BYTE PTR [rax],al
   14004697b:	add    BYTE PTR [rdx],al
   14004697d:	add    BYTE PTR [rax],al
   14004697f:	add    BYTE PTR [rbx],al
   140046981:	add    BYTE PTR [rax],al
   140046983:	add    BYTE PTR [rax+0x8000469],cl
   140046989:	add    BYTE PTR [rax],al
   14004698b:	add    BYTE PTR [rax-0x7ffffb1c],bh
   140046991:	add    BYTE PTR [rax],al
   140046993:	add    BYTE PTR [rax+0x5800036d],bh
   140046999:	add    BYTE PTR [rax],al
   14004699b:	add    BYTE PTR [rax],cl
   14004699d:	add    BYTE PTR [rax],al
   14004699f:	add    BYTE PTR [rax-0x15],ah
   1400469a2:	add    al,0x0
   1400469a4:	cwde   
   1400469a5:	add    BYTE PTR [rax],al
   1400469a7:	add    BYTE PTR [rdx],cl
   1400469a9:	outs   dx,BYTE PTR ds:[rsi]
   1400469aa:	add    eax,DWORD PTR [rax]
   1400469ac:	pop    rax
   1400469ad:	add    BYTE PTR [rax],al
   1400469af:	add    BYTE PTR [rax],cl
   1400469b1:	add    BYTE PTR [rax],al
   1400469b3:	add    BYTE PTR [rax],ch
   1400469b5:	in     al,dx
   1400469b6:	add    al,0x0
   1400469b8:	mov    BYTE PTR [rax],al
   1400469ba:	add    BYTE PTR [rax],al
   1400469bc:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   1400469be:	add    eax,DWORD PTR [rax]
   1400469c0:	pop    rax
   1400469c1:	add    BYTE PTR [rax],al
   1400469c3:	add    BYTE PTR [rcx+rsi*4+0x0],cl
   1400469c7:	add    bh,bh
   1400469c9:	(bad)  
   1400469ca:	(bad)  
   1400469cb:	dec    DWORD PTR [rax+0xb1]
   1400469d1:	add    BYTE PTR [rax],al
   1400469d3:	add    BYTE PTR [rbx],ah
   1400469d5:	mov    bl,0x0
   1400469d7:	add    BYTE PTR [rcx],al
   1400469d9:	add    BYTE PTR [rax],al
   1400469db:	add    BYTE PTR [rsi-0x4d],dl
   1400469de:	add    BYTE PTR [rax],al
   1400469e0:	add    BYTE PTR [rax],al
   1400469e2:	add    BYTE PTR [rax],al
   1400469e4:	mov    WORD PTR [rbp-0x10000],?
   1400469ea:	(bad)  
   1400469eb:	call   QWORD PTR [rbx+0xb5]
   1400469f1:	add    BYTE PTR [rax],al
   1400469f3:	add    dh,al
   1400469f5:	ins    DWORD PTR es:[rdi],dx
   1400469f6:	add    eax,DWORD PTR [rax]
   1400469f8:	add    al,BYTE PTR [rax]
   1400469fa:	add    BYTE PTR [rax],al
   1400469fc:	sti    
   1400469fd:	ins    DWORD PTR es:[rdi],dx
   1400469fe:	add    eax,DWORD PTR [rax]
   140046a00:	add    BYTE PTR [rax],al
   140046a02:	add    BYTE PTR [rax],al
   140046a04:	sbb    BYTE PTR [rsi+0x3],ch
   140046a07:	add    BYTE PTR [rdx],al
   140046a09:	add    BYTE PTR [rax],al
   140046a0b:	add    BYTE PTR [rax],bh
   140046a0d:	outs   dx,BYTE PTR ds:[rsi]
   140046a0e:	add    eax,DWORD PTR [rax]
   140046a10:	add    BYTE PTR [rax],al
   140046a12:	add    BYTE PTR [rax],al
   140046a14:	push   rbp
   140046a15:	outs   dx,BYTE PTR ds:[rsi]
   140046a16:	add    eax,DWORD PTR [rax]
   140046a18:	add    al,BYTE PTR [rax]
   140046a1a:	add    BYTE PTR [rax],al
   140046a1c:	mov    ebx,0x36e
   140046a21:	add    BYTE PTR [rax],al
   140046a23:	add    BYTE PTR [rcx],bl
   140046a25:	or     eax,DWORD PTR [rbx]
   140046a27:	add    BYTE PTR [rbx],cl
   140046a29:	(bad)  
   140046a2a:	(bad)  
   140046a2b:	push   rax
   140046a2c:	(bad)  
   140046a2d:	xor    BYTE PTR [rax],al
   140046a2f:	add    BYTE PTR [rax],bl
   140046a31:	mov    al,0x2
   140046a33:	add    BYTE PTR [rax+0x19000400],dl
   140046a39:	cmp    BYTE PTR [rbx],cl
   140046a3b:	add    BYTE PTR [rsi],ah
   140046a3d:	fs mov ecx,0xb8342201
   140046a43:	add    DWORD PTR [rbx],edx
   140046a45:	add    DWORD PTR [rax+0xaf00c01],esi
   140046a4b:	loopne 0x140046a55
   140046a4d:	rol    BYTE PTR [rsi],1
   140046a4f:	rol    BYTE PTR [rax+rsi*2],0x0
   140046a53:	add    BYTE PTR [rax+riz*1+0x3],bh
   140046a57:	add    al,al
   140046a59:	add    BYTE PTR [rax+rax*1],al
   140046a5c:	jae    0x140046a6b
   140046a5e:	add    BYTE PTR [rax],al
   140046a60:	(bad)  
   140046a61:	(bad)  
   140046a62:	(bad)  
   140046a63:	inc    DWORD PTR [rax]
   140046a65:	add    BYTE PTR [rax],al
   140046a67:	add    BYTE PTR [rax],al
   140046a69:	add    BYTE PTR [rax],al
   140046a6b:	add    BYTE PTR [rcx+0x6c],al
   140046a6e:	add    eax,DWORD PTR [rax]
   140046a70:	add    BYTE PTR [rax],al
   140046a72:	add    BYTE PTR [rax],al
   140046a74:	rex.WRB ins BYTE PTR es:[rdi],dx
   140046a76:	add    eax,DWORD PTR [rax]
   140046a78:	add    al,BYTE PTR [rax]
   140046a7a:	add    BYTE PTR [rax],al
   140046a7c:	pop    rcx
   140046a7d:	ins    BYTE PTR es:[rdi],dx
   140046a7e:	add    eax,DWORD PTR [rax]
   140046a80:	add    al,BYTE PTR [rax]
   140046a82:	add    BYTE PTR [rax],al
   140046a84:	mov    WORD PTR [rbx+rax*1+0x0],gs
   140046a88:	add    BYTE PTR [rax],al
   140046a8a:	add    BYTE PTR [rax],al
   140046a8c:	mov    eax,0xff00036c
   140046a91:	(bad)  
   140046a92:	(bad)  
   140046a93:	inc    DWORD PTR [rax]
   140046a95:	add    BYTE PTR [rax],al
   140046a97:	add    bh,bh
   140046a99:	(bad)  
   140046a9a:	(bad)  
   140046a9b:	inc    DWORD PTR [rbp*2+0x3]
   140046aa2:	add    BYTE PTR [rax],al
   140046aa4:	add    eax,0x6000000
   140046aa9:	add    BYTE PTR [rax],al
   140046aab:	add    BYTE PTR [rcx],al
   140046aad:	add    BYTE PTR [rax],al
   140046aaf:	add    BYTE PTR [rdx+rbp*2+0x80004],dh
   140046ab6:	add    BYTE PTR [rax],al
   140046ab8:	(bad)  
   140046ab9:	jmp    0x140046abf
   140046abb:	add    BYTE PTR [rax],ah
   140046abd:	add    DWORD PTR [rax],eax
   140046abf:	add    ah,al
   140046ac1:	ins    BYTE PTR es:[rdi],dx
   140046ac2:	add    eax,DWORD PTR [rax]
   140046ac4:	js     0x140046ac6
   140046ac6:	add    BYTE PTR [rax],al
   140046ac8:	shl    BYTE PTR [rbx-0x10000],0xff
   140046acf:	dec    DWORD PTR [rcx+0xa4]
   140046ad5:	add    BYTE PTR [rax],al
   140046ad7:	add    dl,cl
   140046ad9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046ada:	add    BYTE PTR [rax],al
   140046adc:	add    al,BYTE PTR [rax]
   140046ade:	add    BYTE PTR [rax],al
   140046ae0:	fsub   QWORD PTR [rbp+0x30000]
   140046ae6:	add    BYTE PTR [rax],al
   140046ae8:	add    al,0xa6
   140046aea:	add    BYTE PTR [rax],al
   140046aec:	add    al,BYTE PTR [rax]
   140046aee:	add    BYTE PTR [rax],al
   140046af0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046af1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046af2:	add    BYTE PTR [rax],al
   140046af4:	add    al,0x0
   140046af6:	add    BYTE PTR [rax],al
   140046af8:	scas   al,BYTE PTR es:[rdi]
   140046af9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046afa:	add    BYTE PTR [rax],al
   140046afc:	add    al,BYTE PTR [rax]
   140046afe:	add    BYTE PTR [rax],al
   140046b00:	retf   
   140046b01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046b02:	add    BYTE PTR [rax],al
   140046b04:	add    BYTE PTR [rax],al
   140046b06:	add    BYTE PTR [rax],al
   140046b08:	add    eax,0xff0000a7
   140046b0d:	(bad)  
   140046b0e:	(bad)  
   140046b0f:	jmp    QWORD PTR [rdx]
   140046b11:	test   eax,0x70000
   140046b16:	add    BYTE PTR [rax],al
   140046b18:	xor    eax,0xff0000a9
   140046b1d:	(bad)  
   140046b1e:	(bad)  
   140046b1f:	inc    esp
   140046b21:	ins    BYTE PTR es:[rdi],dx
   140046b22:	add    eax,DWORD PTR [rax]
   140046b24:	add    BYTE PTR [rax],al
   140046b26:	add    BYTE PTR [rax],al
   140046b28:	shr    BYTE PTR [rbx+rax*1+0x0],cl
   140046b2c:	(bad)  
   140046b2d:	add    BYTE PTR [rax],al
   140046b2f:	add    ch,dh
   140046b31:	ins    BYTE PTR es:[rdi],dx
   140046b32:	add    eax,DWORD PTR [rax]
   140046b34:	add    BYTE PTR [rax],al
   140046b36:	add    BYTE PTR [rax],al
   140046b38:	add    DWORD PTR [rsi],eax
   140046b3a:	add    al,BYTE PTR [rax]
   140046b3c:	(bad)  
   140046b3d:	xor    al,BYTE PTR [rdx]
   140046b3f:	push   rax
   140046b40:	sbb    DWORD PTR [rbx],ecx
   140046b42:	add    eax,DWORD PTR [rax]
   140046b44:	or     esp,DWORD PTR [rdx+0x30065007]
   140046b4a:	add    BYTE PTR [rax],al
   140046b4c:	sbb    BYTE PTR [rax+0xc00002],dh
   140046b52:	add    al,0x0
   140046b54:	sbb    DWORD PTR [rax+0xd],eax
   140046b57:	add    BYTE PTR [rdi],ch
   140046b59:	je     0x140046b50
   140046b5b:	add    DWORD PTR [rbx],ebp
   140046b5d:	fs hlt 
   140046b5f:	add    DWORD PTR [rdi],esp
   140046b61:	xor    al,0xf3
   140046b63:	add    DWORD PTR [rdx],ebx
   140046b65:	add    esp,ebp
   140046b67:	add    DWORD PTR [rax+rsi*8],ecx
   140046b6a:	or     ah,al
   140046b6c:	or     al,dl
   140046b6e:	(bad)  
   140046b6f:	rol    BYTE PTR [rax+rdx*2],0x0
   140046b73:	add    BYTE PTR [rax+riz*1+0x3],bh
   140046b77:	add    al,dh
   140046b79:	add    BYTE PTR [rax+rax*1],al
   140046b7c:	push   rdx
   140046b7d:	sldt   WORD PTR [rax]
   140046b80:	(bad)  
   140046b81:	(bad)  
   140046b82:	(bad)  
   140046b83:	(bad)  
   140046b84:	mov    ebx,0x363
   140046b89:	add    BYTE PTR [rax],al
   140046b8b:	add    bh,al
   140046b8d:	movsxd eax,DWORD PTR [rbx]
   140046b8f:	add    BYTE PTR [rcx],al
   140046b91:	add    BYTE PTR [rax],al
   140046b93:	add    bl,dl
   140046b95:	movsxd eax,DWORD PTR [rbx]
   140046b97:	add    BYTE PTR [rax],al
   140046b99:	add    BYTE PTR [rax],al
   140046b9b:	add    bl,ah
   140046b9d:	movsxd eax,DWORD PTR [rbx]
   140046b9f:	add    BYTE PTR [rbx],al
   140046ba1:	add    BYTE PTR [rax],al
   140046ba3:	add    bl,dh
   140046ba5:	movsxd eax,DWORD PTR [rbx]
   140046ba7:	add    BYTE PTR [rax+rax*1],al
   140046baa:	add    BYTE PTR [rax],al
   140046bac:	add    esp,DWORD PTR [rbx+rax*1+0x0]
   140046bb0:	add    al,0x0
   140046bb2:	add    BYTE PTR [rax],al
   140046bb4:	pcmpgtb mm0,QWORD PTR [rbx]
   140046bb7:	add    BYTE PTR [rsi],al
   140046bb9:	add    BYTE PTR [rax],al
   140046bbb:	add    BYTE PTR [rdi],bl
   140046bbd:	add    eax,DWORD PTR fs:[rax]
   140046bc0:	(bad)  
   140046bc1:	add    BYTE PTR [rax],al
   140046bc3:	add    BYTE PTR [rbx],ch
   140046bc5:	add    eax,DWORD PTR fs:[rax]
   140046bc8:	or     BYTE PTR [rax],al
   140046bca:	add    BYTE PTR [rax],al
   140046bcc:	cmp    esp,DWORD PTR [rbx+rax*1+0x0]
   140046bd0:	or     BYTE PTR [rax],al
   140046bd2:	add    BYTE PTR [rax],al
   140046bd4:	rex.RXB
   140046bd5:	add    eax,DWORD PTR fs:[rax]
   140046bd8:	or     al,BYTE PTR [rax]
   140046bda:	add    BYTE PTR [rax],al
   140046bdc:	pop    rdx
   140046bdd:	add    eax,DWORD PTR fs:[rax]
   140046be0:	or     al,BYTE PTR [rax]
   140046be2:	add    BYTE PTR [rax],al
   140046be4:	add    ax,WORD PTR fs:[rax]
   140046be8:	or     al,0x0
   140046bea:	add    BYTE PTR [rax],al
   140046bec:	jns    0x140046c52
   140046bee:	add    eax,DWORD PTR [rax]
   140046bf0:	or     al,0x0
   140046bf2:	add    BYTE PTR [rax],al
   140046bf4:	test   DWORD PTR [rbx+rax*1+0x0],esp
   140046bf8:	(bad)  
   140046bf9:	add    BYTE PTR [rax],al
   140046bfb:	add    BYTE PTR [rax+0xe000364],bl
   140046c01:	add    BYTE PTR [rax],al
   140046c03:	add    BYTE PTR [rsp+riz*2+0x100003],ah
   140046c0a:	add    BYTE PTR [rax],al
   140046c0c:	mov    bh,0x64
   140046c0e:	add    eax,DWORD PTR [rax]
   140046c10:	adc    BYTE PTR [rax],al
   140046c12:	add    BYTE PTR [rax],al
   140046c14:	ret    
   140046c15:	add    eax,DWORD PTR fs:[rax]
   140046c18:	adc    al,BYTE PTR [rax]
   140046c1a:	add    BYTE PTR [rax],al
   140046c1c:	(bad)  
   140046c1d:	add    eax,DWORD PTR fs:[rax]
   140046c20:	adc    eax,DWORD PTR [rax]
   140046c22:	add    BYTE PTR [rax],al
   140046c24:	jmp    0x154046f8d
   140046c29:	add    BYTE PTR [rax],al
   140046c2b:	add    ch,dh
   140046c2d:	add    eax,DWORD PTR fs:[rax]
   140046c30:	adc    eax,DWORD PTR [rax]
   140046c32:	add    BYTE PTR [rax],al
   140046c34:	add    eax,0x13000365
   140046c39:	add    BYTE PTR [rax],al
   140046c3b:	add    BYTE PTR [rip+0x13000365],dl        # 0x153046fa6
   140046c41:	add    BYTE PTR [rax],al
   140046c43:	add    BYTE PTR [rip+0x18000365],ah        # 0x158046fae
   140046c49:	add    BYTE PTR [rax],al
   140046c4b:	add    BYTE PTR [rax],bh
   140046c4d:	add    eax,DWORD PTR gs:[rax]
   140046c50:	sbb    DWORD PTR [rax],eax
   140046c52:	add    BYTE PTR [rax],al
   140046c54:	rex.WXB
   140046c55:	add    eax,DWORD PTR gs:[rax]
   140046c58:	sbb    al,BYTE PTR [rax]
   140046c5a:	add    BYTE PTR [rax],al
   140046c5c:	pop    rbx
   140046c5d:	add    eax,DWORD PTR gs:[rax]
   140046c60:	sbb    al,BYTE PTR [rax]
   140046c62:	add    BYTE PTR [rax],al
   140046c64:	add    eax,DWORD PTR gs:[eax]
   140046c68:	sbb    al,BYTE PTR [rax]
   140046c6a:	add    BYTE PTR [rax],al
   140046c6c:	jae    0x140046cd3
   140046c6e:	add    eax,DWORD PTR [rax]
   140046c70:	sbb    al,BYTE PTR [rax]
   140046c72:	add    BYTE PTR [rax],al
   140046c74:	jg     0x140046cdb
   140046c76:	add    eax,DWORD PTR [rax]
   140046c78:	sbb    al,BYTE PTR [rax]
   140046c7a:	add    BYTE PTR [rax],al
   140046c7c:	mov    esp,DWORD PTR [rbp+0x3]
   140046c7f:	add    BYTE PTR [rdi],bl
   140046c81:	add    BYTE PTR [rax],al
   140046c83:	add    BYTE PTR [rbx+0x1f000365],bl
   140046c89:	add    BYTE PTR [rax],al
   140046c8b:	add    BYTE PTR [rdi+0x21000365],ah
   140046c91:	add    BYTE PTR [rax],al
   140046c93:	add    BYTE PTR [rdi+0x21000365],dh
   140046c99:	add    BYTE PTR [rax],al
   140046c9b:	add    bh,al
   140046c9d:	add    eax,DWORD PTR gs:[rax]
   140046ca0:	(bad)  
   140046ca1:	add    BYTE PTR [rax],al
   140046ca3:	add    bh,dl
   140046ca5:	add    eax,DWORD PTR gs:[rax]
   140046ca8:	sbb    DWORD PTR [rax],eax
   140046caa:	add    BYTE PTR [rax],al
   140046cac:	out    0x65,eax
   140046cae:	add    eax,DWORD PTR [rax]
   140046cb0:	and    eax,0xfa000000
   140046cb5:	add    eax,DWORD PTR gs:[rax]
   140046cb8:	add    BYTE PTR es:[rax],al
   140046cbb:	add    BYTE PTR [rdx],cl
   140046cbd:	add    ax,WORD PTR [rax]
   140046cc0:	add    BYTE PTR es:[rax],al
   140046cc3:	add    BYTE PTR [rsi],dl
   140046cc5:	add    ax,WORD PTR [rax]
   140046cc8:	sub    BYTE PTR [rax],al
   140046cca:	add    BYTE PTR [rax],al
   140046ccc:	add    ax,WORD PTR es:[rax]
   140046cd0:	sub    BYTE PTR [rax],al
   140046cd2:	add    BYTE PTR [rax],al
   140046cd4:	add    ax,WORD PTR ss:[rax]
   140046cd8:	add    BYTE PTR es:[rax],al
   140046cdb:	add    BYTE PTR [rsi+0x66],al
   140046cde:	add    eax,DWORD PTR [rax]
   140046ce0:	sub    eax,DWORD PTR [rax]
   140046ce2:	add    BYTE PTR [rax],al
   140046ce4:	push   rsi
   140046ce5:	add    ax,WORD PTR [rax]
   140046ce8:	sub    al,0x0
   140046cea:	add    BYTE PTR [rax],al
   140046cec:	jne    0x140046d54
   140046cee:	add    eax,DWORD PTR [rax]
   140046cf0:	sub    eax,DWORD PTR [rax]
   140046cf2:	add    BYTE PTR [rax],al
   140046cf4:	test   DWORD PTR [rsi+0x3],esp
   140046cf7:	add    BYTE PTR [rsi],ch
   140046cf9:	add    BYTE PTR [rax],al
   140046cfb:	add    BYTE PTR [rcx+0x2b000366],dl
   140046d01:	add    BYTE PTR [rax],al
   140046d03:	add    BYTE PTR [rcx+0x25000366],ah
   140046d09:	add    BYTE PTR [rax],al
   140046d0b:	add    BYTE PTR [rsi+riz*2+0x310003],dh
   140046d12:	add    BYTE PTR [rax],al
   140046d14:	(bad)  
   140046d15:	add    ax,WORD PTR [rax]
   140046d18:	xor    al,BYTE PTR [rax]
   140046d1a:	add    BYTE PTR [rax],al
   140046d1c:	shl    DWORD PTR [rsi+0x3],cl
   140046d1f:	add    BYTE PTR [rdx],dh
   140046d21:	add    BYTE PTR [rax],al
   140046d23:	add    bl,ah
   140046d25:	add    ax,WORD PTR [rax]
   140046d28:	xor    al,0x0
   140046d2a:	add    BYTE PTR [rax],al
   140046d2c:	repz add ax,WORD PTR [rax]
   140046d30:	xor    al,0x0
   140046d32:	add    BYTE PTR [rax],al
   140046d34:	jmp    QWORD PTR [rsi+0x3]
   140046d37:	add    BYTE PTR [rcx],dh
   140046d39:	add    BYTE PTR [rax],al
   140046d3b:	add    BYTE PTR [rdx],dl
   140046d3d:	add    eax,DWORD PTR [eax]
   140046d40:	(bad)  
   140046d41:	add    BYTE PTR [rax],al
   140046d43:	add    BYTE PTR [rip+0x38000367],ah        # 0x1780470b0
   140046d49:	add    BYTE PTR [rax],al
   140046d4b:	add    BYTE PTR [rcx],dh
   140046d4d:	add    eax,DWORD PTR [eax]
   140046d50:	(bad)  
   140046d51:	add    BYTE PTR [rax],al
   140046d53:	add    BYTE PTR [rcx+0x67],al
   140046d56:	add    eax,DWORD PTR [rax]
   140046d58:	cmp    al,BYTE PTR [rax]
   140046d5a:	add    BYTE PTR [rax],al
   140046d5c:	push   rcx
   140046d5d:	add    eax,DWORD PTR [eax]
   140046d60:	cmp    eax,DWORD PTR [rax]
   140046d62:	add    BYTE PTR [rax],al
   140046d64:	pop    rbp
   140046d65:	add    eax,DWORD PTR [eax]
   140046d68:	cmp    al,BYTE PTR [rax]
   140046d6a:	add    BYTE PTR [rax],al
   140046d6c:	ins    DWORD PTR es:[rdi],dx
   140046d6d:	add    eax,DWORD PTR [eax]
   140046d70:	cmp    eax,0x80000000
   140046d75:	add    eax,DWORD PTR [eax]
   140046d78:	cmp    eax,0x8c000000
   140046d7d:	add    eax,DWORD PTR [eax]
   140046d80:	(bad)  
   140046d81:	add    BYTE PTR [rax],al
   140046d83:	add    BYTE PTR [rdi+0x3f000367],bl
   140046d89:	add    BYTE PTR [rax],al
   140046d8b:	add    BYTE PTR [rbx+0x41000367],ch
   140046d91:	add    BYTE PTR [rax],al
   140046d93:	add    BYTE PTR [rsi+0x41000367],bh
   140046d99:	add    BYTE PTR [rax],al
   140046d9b:	add    dl,cl
   140046d9d:	add    eax,DWORD PTR [eax]
   140046da0:	rex.XB add BYTE PTR [r8],al
   140046da3:	add    ch,bl
   140046da5:	add    eax,DWORD PTR [eax]
   140046da8:	rex.XB add BYTE PTR [r8],al
   140046dab:	add    cl,ch
   140046dad:	add    eax,DWORD PTR [eax]
   140046db0:	(bad)  
   140046db1:	add    BYTE PTR [rax],al
   140046db3:	add    ah,bh
   140046db5:	add    eax,DWORD PTR [eax]
   140046db8:	(bad)  
   140046db9:	add    BYTE PTR [rax],al
   140046dbb:	add    BYTE PTR [rax+rbp*2],cl
   140046dbe:	add    eax,DWORD PTR [rax]
   140046dc0:	rex.RXB add BYTE PTR [r8],r8b
   140046dc3:	add    BYTE PTR [rdi],bl
   140046dc5:	push   0x480003
   140046dca:	add    BYTE PTR [rax],al
   140046dcc:	xor    ch,BYTE PTR [rax+0x3]
   140046dcf:	add    BYTE PTR [rcx+0x0],cl
   140046dd2:	add    BYTE PTR [rax],al
   140046dd4:	rex.RB push 0x4a0003
   140046dda:	add    BYTE PTR [rax],al
   140046ddc:	pop    rax
   140046ddd:	push   0x4b0003
   140046de2:	add    BYTE PTR [rax],al
   140046de4:	imul   ebp,DWORD PTR [rax+0x3],0x0
   140046de8:	rex.WR add BYTE PTR [rax],r8b
   140046deb:	add    BYTE PTR [rsi+0x68],bh
   140046dee:	add    eax,DWORD PTR [rax]
   140046df0:	rex.WR add BYTE PTR [rax],r8b
   140046df3:	add    BYTE PTR [rdx+0x4e000368],cl
   140046df9:	add    BYTE PTR [rax],al
   140046dfb:	add    BYTE PTR [rbp+0x4f000368],bl
   140046e01:	add    BYTE PTR [rax],al
   140046e03:	add    BYTE PTR [rax+0x50000368],dh
   140046e09:	add    BYTE PTR [rax],al
   140046e0b:	add    bl,al
   140046e0d:	push   0x510003
   140046e12:	add    BYTE PTR [rax],al
   140046e14:	(bad)  
   140046e15:	push   0x520003
   140046e1a:	add    BYTE PTR [rax],al
   140046e1c:	jmp    0x193047189
   140046e21:	add    BYTE PTR [rax],al
   140046e23:	add    ah,bh
   140046e25:	push   0x540003
   140046e2a:	add    BYTE PTR [rax],al
   140046e2c:	punpckhwd mm0,QWORD PTR [rbx]
   140046e2f:	add    BYTE PTR [rbp+0x0],dl
   140046e32:	add    BYTE PTR [rax],al
   140046e34:	and    ch,BYTE PTR [rcx+0x3]
   140046e37:	add    BYTE PTR [rbp+0x0],dl
   140046e3a:	add    BYTE PTR [rax],al
   140046e3c:	xor    ch,BYTE PTR [rcx+0x3]
   140046e3f:	add    BYTE PTR [rdi+0x0],dl
   140046e42:	add    BYTE PTR [rax],al
   140046e44:	imul   r8d,DWORD PTR [r11],0x5800
   140046e4b:	add    BYTE PTR [rbp+0x69],dl
   140046e4e:	add    eax,DWORD PTR [rax]
   140046e50:	push   rdi
   140046e51:	add    BYTE PTR [rax],al
   140046e53:	add    BYTE PTR [rbp+0x69],ah
   140046e56:	add    eax,DWORD PTR [rax]
   140046e58:	pop    rdx
   140046e59:	add    BYTE PTR [rax],al
   140046e5b:	add    BYTE PTR [rax+0x69],bh
   140046e5e:	add    eax,DWORD PTR [rax]
   140046e60:	sbb    al,0x93
   140046e62:	add    BYTE PTR [rax],al
   140046e64:	(bad)  
   140046e65:	(bad)  
   140046e66:	(bad)  
   140046e67:	push   QWORD PTR [rbx-0x6d]
   140046e6a:	add    BYTE PTR [rax],al
   140046e6c:	add    BYTE PTR [rax],al
   140046e6e:	add    BYTE PTR [rax],al
   140046e70:	mov    DWORD PTR [rbx+0x10000],edx
   140046e76:	add    BYTE PTR [rax],al
   140046e78:	test   eax,0x2000093
   140046e7d:	add    BYTE PTR [rax],al
   140046e7f:	add    BYTE PTR [rax+0x3000093],bh
   140046e85:	add    BYTE PTR [rax],al
   140046e87:	add    bh,al
   140046e89:	xchg   ebx,eax
   140046e8a:	add    BYTE PTR [rax],al
   140046e8c:	add    al,0x0
   140046e8e:	add    BYTE PTR [rax],al
   140046e90:	ficom  WORD PTR [rbx+0x50000]
   140046e96:	add    BYTE PTR [rax],al
   140046e98:	in     al,dx
   140046e99:	xchg   ebx,eax
   140046e9a:	add    BYTE PTR [rax],al
   140046e9c:	(bad)  
   140046e9d:	add    BYTE PTR [rax],al
   140046e9f:	add    ah,bh
   140046ea1:	xchg   ebx,eax
   140046ea2:	add    BYTE PTR [rax],al
   140046ea4:	(bad)  
   140046ea5:	add    BYTE PTR [rax],al
   140046ea7:	add    BYTE PTR [rbx],al
   140046ea9:	xchg   esp,eax
   140046eaa:	add    BYTE PTR [rax],al
   140046eac:	or     BYTE PTR [rax],al
   140046eae:	add    BYTE PTR [rax],al
   140046eb0:	sbb    BYTE PTR [rax+rax*1+0x900],dl
   140046eb7:	add    BYTE PTR [rcx],ah
   140046eb9:	xchg   esp,eax
   140046eba:	add    BYTE PTR [rax],al
   140046ebc:	or     al,BYTE PTR [rax]
   140046ebe:	add    BYTE PTR [rax],al
   140046ec0:	xor    eax,0xb000094
   140046ec5:	add    BYTE PTR [rax],al
   140046ec7:	add    BYTE PTR [rip+0xc000094],bh        # 0x14c046f61
   140046ecd:	add    BYTE PTR [rax],al
   140046ecf:	add    BYTE PTR [rax-0x6c],dl
   140046ed2:	add    BYTE PTR [rax],al
   140046ed4:	or     eax,0x57000000
   140046ed9:	xchg   esp,eax
   140046eda:	add    BYTE PTR [rax],al
   140046edc:	(bad)  
   140046edd:	add    BYTE PTR [rax],al
   140046edf:	add    BYTE PTR [rdx-0x6c],ch
   140046ee2:	add    BYTE PTR [rax],al
   140046ee4:	sldt   WORD PTR [rax]
   140046ee7:	add    BYTE PTR [rcx-0x6c],dh
   140046eea:	add    BYTE PTR [rax],al
   140046eec:	adc    BYTE PTR [rax],al
   140046eee:	add    BYTE PTR [rax],al
   140046ef0:	test   BYTE PTR [rax+rax*1+0x1100],dl
   140046ef7:	add    BYTE PTR [rsi+0x12000094],cl
   140046efd:	add    BYTE PTR [rax],al
   140046eff:	add    BYTE PTR [rdx+0x13000094],ah
   140046f05:	add    BYTE PTR [rax],al
   140046f07:	add    ah,ch
   140046f09:	xchg   esp,eax
   140046f0a:	add    BYTE PTR [rax],al
   140046f0c:	adc    al,0x0
   140046f0e:	add    BYTE PTR [rax],al
   140046f10:	hlt    
   140046f11:	xchg   esp,eax
   140046f12:	add    BYTE PTR [rax],al
   140046f14:	adc    eax,0x1d000000
   140046f19:	xchg   ebp,eax
   140046f1a:	add    BYTE PTR [rax],al
   140046f1c:	(bad)  
   140046f1d:	add    BYTE PTR [rax],al
   140046f1f:	add    BYTE PTR [rdx],dh
   140046f21:	xchg   ebp,eax
   140046f22:	add    BYTE PTR [rax],al
   140046f24:	(bad)  
   140046f25:	add    BYTE PTR [rax],al
   140046f27:	add    BYTE PTR [rcx],bh
   140046f29:	xchg   ebp,eax
   140046f2a:	add    BYTE PTR [rax],al
   140046f2c:	sbb    BYTE PTR [rax],al
   140046f2e:	add    BYTE PTR [rax],al
   140046f30:	xchg   r13,rax
   140046f32:	add    BYTE PTR [rax],al
   140046f34:	sbb    DWORD PTR [rax],eax
   140046f36:	add    BYTE PTR [rax],al
   140046f38:	imul   edx,DWORD PTR [rbp+0x1a0000],0x0
   140046f3f:	add    BYTE PTR [rdi+0x1f000095],cl
   140046f45:	add    BYTE PTR [rax],al
   140046f47:	add    BYTE PTR [rbx+0x20000095],dh
   140046f4d:	add    BYTE PTR [rax],al
   140046f4f:	add    cl,bl
   140046f51:	xchg   ebp,eax
   140046f52:	add    BYTE PTR [rax],al
   140046f54:	and    DWORD PTR [rax],eax
   140046f56:	add    BYTE PTR [rax],al
   140046f58:	adc    eax,0x22000096
   140046f5d:	add    BYTE PTR [rax],al
   140046f5f:	add    BYTE PTR [rsi+rdx*4],bl
   140046f62:	add    BYTE PTR [rax],al
   140046f64:	and    eax,DWORD PTR [rax]
   140046f66:	add    BYTE PTR [rax],al
   140046f68:	xor    edx,DWORD PTR [rsi+0x250000]
   140046f6e:	add    BYTE PTR [rax],al
   140046f70:	pop    rbx
   140046f71:	xchg   esi,eax
   140046f72:	add    BYTE PTR [rax],al
   140046f74:	add    BYTE PTR es:[rax],al
   140046f77:	add    BYTE PTR [rbp-0x6a],bh
   140046f7a:	add    BYTE PTR [rax],al
   140046f7c:	(bad)  
   140046f7d:	add    BYTE PTR [rax],al
   140046f7f:	add    BYTE PTR [rsi+0x28000096],ah
   140046f85:	add    BYTE PTR [rax],al
   140046f87:	add    BYTE PTR [rsi+0x29000096],bh
   140046f8d:	add    BYTE PTR [rax],al
   140046f8f:	add    cl,cl
   140046f91:	xchg   esi,eax
   140046f92:	add    BYTE PTR [rax],al
   140046f94:	sub    al,BYTE PTR [rax]
   140046f96:	add    BYTE PTR [rax],al
   140046f98:	jrcxz  0x140046f30
   140046f9a:	add    BYTE PTR [rax],al
   140046f9c:	sub    eax,DWORD PTR [rax]
   140046f9e:	add    BYTE PTR [rax],al
   140046fa0:	adc    dl,BYTE PTR [rdi+0x2c0000]
   140046fa6:	add    BYTE PTR [rax],al
   140046fa8:	and    eax,0x2e000097
   140046fad:	add    BYTE PTR [rax],al
   140046faf:	add    BYTE PTR [rdi+rdx*4+0x0],bl
   140046fb3:	add    BYTE PTR [rdi],ch
   140046fb5:	add    BYTE PTR [rax],al
   140046fb7:	add    BYTE PTR [rsi-0x69],ch
   140046fba:	add    BYTE PTR [rax],al
   140046fbc:	xor    BYTE PTR [rax],al
   140046fbe:	add    BYTE PTR [rax],al
   140046fc0:	nop
   140046fc1:	xchg   edi,eax
   140046fc2:	add    BYTE PTR [rax],al
   140046fc4:	xor    DWORD PTR [rax],eax
   140046fc6:	add    BYTE PTR [rax],al
   140046fc8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046fc9:	xchg   edi,eax
   140046fca:	add    BYTE PTR [rax],al
   140046fcc:	xor    al,BYTE PTR [rax]
   140046fce:	add    BYTE PTR [rax],al
   140046fd0:	jrcxz  0x140046f69
   140046fd2:	add    BYTE PTR [rax],al
   140046fd4:	xor    eax,DWORD PTR [rax]
   140046fd6:	add    BYTE PTR [rax],al
   140046fd8:	in     eax,dx
   140046fd9:	xchg   edi,eax
   140046fda:	add    BYTE PTR [rax],al
   140046fdc:	xor    al,0x0
   140046fde:	add    BYTE PTR [rax],al
   140046fe0:	sbb    eax,0x35000098
   140046fe5:	add    BYTE PTR [rax],al
   140046fe7:	add    BYTE PTR [rip+0x36000098],ch        # 0x176047085
   140046fed:	add    BYTE PTR [rax],al
   140046fef:	add    BYTE PTR [rdx-0x68],bl
   140046ff2:	add    BYTE PTR [rax],al
   140046ff4:	(bad)  
   140046ff5:	add    BYTE PTR [rax],al
   140046ff7:	add    BYTE PTR [rdx+0x38000098],ah
   140046ffd:	add    BYTE PTR [rax],al
   140046fff:	add    BYTE PTR [rcx+0x39000098],dh
   140047005:	add    BYTE PTR [rax],al
   140047007:	add    dl,bl
   140047009:	cwde   
   14004700a:	add    BYTE PTR [rax],al
   14004700c:	cmp    al,BYTE PTR [rax]
   14004700e:	add    BYTE PTR [rax],al
   140047010:	jmp    0x17b0470ad
   140047015:	add    BYTE PTR [rax],al
   140047017:	add    cl,dh
   140047019:	cwde   
   14004701a:	add    BYTE PTR [rax],al
   14004701c:	cmp    al,0x0
   14004701e:	add    BYTE PTR [rax],al
   140047020:	or     al,0x99
   140047022:	add    BYTE PTR [rax],al
   140047024:	cmp    eax,0x1f000000
   140047029:	cdq    
   14004702a:	add    BYTE PTR [rax],al
   14004702c:	add    BYTE PTR ds:[rax],al
   14004702f:	add    BYTE PTR [rip+0x3f000099],ch        # 0x17f0470ce
   140047035:	add    BYTE PTR [rax],al
   140047037:	add    BYTE PTR [rax-0x67],al
   14004703a:	add    BYTE PTR [rax],al
   14004703c:	add    BYTE PTR [rax],al
   14004703f:	add    BYTE PTR [rdi-0x67],al
   140047042:	add    BYTE PTR [rax],al
   140047044:	add    BYTE PTR [r8],al
   140047047:	add    BYTE PTR [rdx-0x67],bl
   14004704a:	add    BYTE PTR [rax],al
   14004704c:	rex.X add BYTE PTR [rax],al
   14004704f:	add    BYTE PTR [rcx+rbx*4+0x0],ah
   140047053:	add    BYTE PTR [rbx+0x0],al
   140047056:	add    BYTE PTR [rax],al
   140047058:	ja     0x140046ff3
   14004705a:	add    BYTE PTR [rax],al
   14004705c:	add    BYTE PTR [rax],r8b
   14004705f:	add    BYTE PTR [rdx-0x67],bh
   140047062:	add    BYTE PTR [rax],al
   140047064:	add    BYTE PTR [r8],r8b
   140047067:	add    BYTE PTR [rax+0x46000099],cl
   14004706d:	add    BYTE PTR [rax],al
   14004706f:	add    BYTE PTR [rdi+0x47000099],cl
   140047075:	add    BYTE PTR [rax],al
   140047077:	add    ch,dl
   140047079:	cdq    
   14004707a:	add    BYTE PTR [rax],al
   14004707c:	rex.W add BYTE PTR [rax],al
   14004707f:	add    BYTE PTR [rbx],al
   140047081:	(bad)  
   140047082:	add    BYTE PTR [rax],al
   140047084:	rex.WB add BYTE PTR [r8],al
   140047087:	add    BYTE PTR [rdi],dl
   140047089:	(bad)  
   14004708a:	add    BYTE PTR [rax],al
   14004708c:	rex.WX add BYTE PTR [rax],al
   14004708f:	add    BYTE PTR [rbx],ch
   140047091:	(bad)  
   140047092:	add    BYTE PTR [rax],al
   140047094:	rex.WXB add BYTE PTR [r8],al
   140047097:	add    BYTE PTR [rdi],bh
   140047099:	(bad)  
   14004709a:	add    BYTE PTR [rax],al
   14004709c:	rex.WR add BYTE PTR [rax],r8b
   14004709f:	add    BYTE PTR [rdx+rbx*4+0x0],bl
   1400470a3:	add    BYTE PTR [rbp+0x0],cl
   1400470a6:	add    BYTE PTR [rax],al
   1400470a8:	push   0xffffffffffffff9a
   1400470aa:	add    BYTE PTR [rax],al
   1400470ac:	rex.WRX add BYTE PTR [rax],r8b
   1400470af:	add    BYTE PTR [rbp+0x4f00009a],cl
   1400470b5:	add    BYTE PTR [rax],al
   1400470b7:	add    BYTE PTR [rbx+0x5000009a],bl
   1400470bd:	add    BYTE PTR [rax],al
   1400470bf:	add    BYTE PTR [rcx+0x5100009a],ch
   1400470c5:	add    BYTE PTR [rax],al
   1400470c7:	add    BYTE PTR [rdi+0x5200009a],dh
   1400470cd:	add    BYTE PTR [rax],al
   1400470cf:	add    cl,ah
   1400470d1:	(bad)  
   1400470d2:	add    BYTE PTR [rax],al
   1400470d4:	push   rbx
   1400470d5:	add    BYTE PTR [rax],al
   1400470d7:	add    ch,bh
   1400470d9:	(bad)  
   1400470da:	add    BYTE PTR [rax],al
   1400470dc:	push   rsp
   1400470dd:	add    BYTE PTR [rax],al
   1400470df:	add    BYTE PTR [rbx],cl
   1400470e1:	fwait
   1400470e2:	add    BYTE PTR [rax],al
   1400470e4:	push   rbp
   1400470e5:	add    BYTE PTR [rax],al
   1400470e7:	add    BYTE PTR [rdi],dh
   1400470e9:	fwait
   1400470ea:	add    BYTE PTR [rax],al
   1400470ec:	push   rsi
   1400470ed:	add    BYTE PTR [rax],al
   1400470ef:	add    BYTE PTR [rsi-0x65],al
   1400470f2:	add    BYTE PTR [rax],al
   1400470f4:	push   rdi
   1400470f5:	add    BYTE PTR [rax],al
   1400470f7:	add    BYTE PTR [rbp+0x5800009b],ch
   1400470fd:	add    BYTE PTR [rax],al
   1400470ff:	add    ah,dh
   140047101:	fwait
   140047102:	add    BYTE PTR [rax],al
   140047104:	pop    rdx
   140047105:	add    BYTE PTR [rax],al
   140047107:	add    BYTE PTR [rcx],dh
   140047109:	sahf   
   14004710a:	add    BYTE PTR [rax],al
   14004710c:	pop    rbx
   14004710d:	add    BYTE PTR [rax],al
   14004710f:	add    BYTE PTR [rsi-0x62],cl
   140047112:	add    BYTE PTR [rax],al
   140047114:	pop    rdx
   140047115:	add    BYTE PTR [rax],al
   140047117:	add    BYTE PTR [rbp-0x62],dl
   14004711a:	add    BYTE PTR [rax],al
   14004711c:	(bad)  
   14004711d:	(bad)  
   14004711e:	(bad)  
   14004711f:	call   FWORD PTR [rcx]
   140047121:	sbb    DWORD PTR [rsi],eax
   140047123:	add    BYTE PTR [rcx],bl
   140047125:	fs or  eax,0xc341400
   14004712b:	add    BYTE PTR [rsi],al
   14004712d:	xchg   edx,eax
   14004712e:	add    dh,BYTE PTR [rax+0x18]
   140047131:	mov    al,0x2
   140047133:	add    BYTE PTR [rax],ah
   140047135:	add    DWORD PTR [rax+rax*1],eax
	...
   140047140:	add    DWORD PTR [rax],eax
   140047142:	add    BYTE PTR [rax],al
   140047144:	add    DWORD PTR [rax],eax
   140047146:	add    BYTE PTR [rax],al
   140047148:	rex.WR jno 0x14004714f
	...
   140047157:	add    BYTE PTR [rcx],ch
   140047159:	outs   dx,DWORD PTR ds:[rsi]
   14004715a:	add    eax,DWORD PTR [rax]
   14004715c:	rex.W add BYTE PTR [rax],al
   14004715f:	add    BYTE PTR [rax-0xffff19],cl
   140047165:	(bad)  
   140047166:	(bad)  
   140047167:	jmp    FWORD PTR [rdx+0xe7]
   14004716d:	add    BYTE PTR [rax],al
   14004716f:	add    BYTE PTR [rsi],dh
   140047171:	outs   dx,DWORD PTR ds:[rsi]
   140047172:	add    eax,DWORD PTR [rax]
   140047174:	add    DWORD PTR [rax],eax
   140047176:	add    BYTE PTR [rax],al
   140047178:	sbb    DWORD PTR [rdx],ecx
   14004717a:	add    al,BYTE PTR [rax]
   14004717c:	or     dl,BYTE PTR [rdx+0x6]
   14004717f:	push   rax
   140047180:	sbb    BYTE PTR [rax+0x1200002],dh
   140047186:	add    al,0x0
   140047188:	adc    DWORD PTR [rbx],edx
   14004718a:	add    al,BYTE PTR [rax]
   14004718c:	or     dl,BYTE PTR [rdx+0x6]
   14004718f:	xor    BYTE PTR [rax],bl
   140047191:	mov    al,0x2
   140047193:	add    BYTE PTR [rax+0x1],dl
   140047196:	add    al,0x0
   140047198:	(bad)  
   140047199:	(bad)  
   14004719a:	(bad)  
   14004719b:	dec    DWORD PTR [rdi+rbp*2+0x3]
   14004719f:	add    ah,dl
   1400471a1:	jrcxz  0x1400471a3
   1400471a3:	add    bh,bh
   1400471a5:	(bad)  
   1400471a6:	(bad)  
   1400471a7:	dec    DWORD PTR [rax]
   1400471a9:	in     al,0x0
   1400471ab:	add    BYTE PTR [rax],al
   1400471ad:	add    BYTE PTR [rax],al
   1400471af:	add    BYTE PTR [rsp+riz*8],bl
   1400471b2:	add    BYTE PTR [rax],al
   1400471b4:	(bad)  
   1400471b5:	(bad)  
   1400471b6:	(bad)  
   1400471b7:	call   FWORD PTR [rcx]
   1400471b9:	lar    eax,WORD PTR [rax]
   1400471bc:	(bad)  
   1400471bd:	push   rdx
   1400471be:	add    dh,BYTE PTR [rax]
   1400471c0:	sbb    BYTE PTR [rax+0x1800002],dh
   1400471c6:	add    al,0x0
   1400471c8:	(bad)  
   1400471c9:	(bad)  
   1400471ca:	(bad)  
   1400471cb:	inc    DWORD PTR [rax]
   1400471cd:	add    BYTE PTR [rax],al
   1400471cf:	add    BYTE PTR [rax],al
   1400471d1:	add    BYTE PTR [rax],al
   1400471d3:	add    bl,ch
   1400471d5:	jo     0x1400471da
   1400471d7:	add    BYTE PTR [rax],al
   1400471d9:	add    BYTE PTR [rax],al
   1400471db:	add    BYTE PTR [rdi],al
   1400471dd:	jno    0x1400471e2
   1400471df:	add    BYTE PTR [rax],al
   1400471e1:	add    BYTE PTR [rax],al
   1400471e3:	add    BYTE PTR [rbx],ah
   1400471e5:	jno    0x1400471ea
   1400471e7:	add    bh,bh
   1400471e9:	(bad)  
   1400471ea:	(bad)  
   1400471eb:	inc    DWORD PTR [rax]
   1400471ed:	add    BYTE PTR [rax],al
   1400471ef:	add    BYTE PTR [rax],al
   1400471f1:	add    BYTE PTR [rax],al
   1400471f3:	add    BYTE PTR [rbx],al
   1400471f5:	add    BYTE PTR [rax],al
   1400471f7:	add    BYTE PTR [rax+rax*1],al
   1400471fa:	add    BYTE PTR [rax],al
   1400471fc:	add    DWORD PTR [rax],eax
   1400471fe:	add    BYTE PTR [rax],al
   140047200:	add    al,0x72
   140047202:	add    al,0x0
	...
   140047210:	(bad)  
   140047211:	jno    0x140047216
   140047213:	add    BYTE PTR [rax],bh
   140047215:	add    BYTE PTR [rax],al
   140047217:	add    BYTE PTR [rax-0x1d],bl
   14004721a:	add    BYTE PTR [rax],al
   14004721c:	(bad)  
   14004721d:	(bad)  
   14004721e:	(bad)  
   14004721f:	inc    DWORD PTR [rdi+0xe3]
   140047225:	add    BYTE PTR [rax],al
   140047227:	add    BYTE PTR [rcx+0x10000e3],dl
   14004722d:	add    BYTE PTR [rax],al
   14004722f:	add    BYTE PTR [rdi+0xe3],dl
   140047235:	add    BYTE PTR [rax],al
   140047237:	add    BYTE PTR [rbp+0x20000e3],ah
   14004723d:	add    BYTE PTR [rax],al
   14004723f:	add    BYTE PTR [rax+0xe3],dh
   140047245:	add    BYTE PTR [rax],al
   140047247:	add    BYTE PTR [rsi+0x30000e3],bh
   14004724d:	add    BYTE PTR [rax],al
   14004724f:	add    cl,cl
   140047251:	jrcxz  0x140047253
   140047253:	add    bh,bh
   140047255:	(bad)  
   140047256:	(bad)  
   140047257:	(bad)  
   140047258:	(bad)  
   140047259:	jno    0x14004725e
   14004725b:	add    BYTE PTR [rax],al
   14004725d:	add    BYTE PTR [rax],al
   14004725f:	add    BYTE PTR [rcx+rsi*2+0x3],cl
   140047263:	add    BYTE PTR [rax+rax*1],al
   140047266:	add    BYTE PTR [rax],al
   140047268:	sbb    DWORD PTR [rdx],ecx
   14004726a:	add    al,BYTE PTR [rax]
   14004726c:	or     dh,BYTE PTR [rdx]
   14004726e:	(bad)  
   14004726f:	push   rax
   140047270:	sbb    BYTE PTR [rax+0x1800002],dh
   140047276:	add    al,0x0
   140047278:	sbb    DWORD PTR [rbx],edx
   14004727a:	add    al,BYTE PTR [rax]
   14004727c:	or     dl,BYTE PTR [rdx-0x4fe7cffa]
   140047282:	add    al,BYTE PTR [rax]
   140047284:	mov    al,0x1
   140047286:	add    al,0x0
	...
   140047290:	add    DWORD PTR [rax],eax
   140047292:	add    BYTE PTR [rax],al
   140047294:	add    DWORD PTR [rax],eax
   140047296:	add    BYTE PTR [rax],al
   140047298:	pushf  
   140047299:	jb     0x14004729f
	...
   1400472a7:	add    BYTE PTR [rsi],al
   1400472a9:	outs   dx,DWORD PTR ds:[rsi]
   1400472aa:	add    eax,DWORD PTR [rax]
   1400472ac:	rex.W add BYTE PTR [rax],al
   1400472af:	add    BYTE PTR [rcx+riz*8],dh
   1400472b2:	add    BYTE PTR [rax],al
   1400472b4:	(bad)  
   1400472b5:	(bad)  
   1400472b6:	(bad)  
   1400472b7:	call   QWORD PTR [rbx-0x1f]
   1400472ba:	add    BYTE PTR [rax],al
   1400472bc:	add    BYTE PTR [rax],al
   1400472be:	add    BYTE PTR [rax],al
   1400472c0:	sub    esp,ebx
   1400472c2:	add    BYTE PTR [rax],al
   1400472c4:	(bad)  
   1400472c5:	(bad)  
   1400472c6:	(bad)  
   1400472c7:	call   QWORD PTR [rcx-0x1d]
   1400472ca:	add    BYTE PTR [rax],al
   1400472cc:	add    BYTE PTR [rax],al
   1400472ce:	add    BYTE PTR [rax],al
   1400472d0:	adc    ebp,DWORD PTR [rdi+0x3]
   1400472d3:	add    BYTE PTR [rcx],al
   1400472d5:	add    BYTE PTR [rax],al
   1400472d7:	add    BYTE PTR [rcx],bl
   1400472d9:	or     al,BYTE PTR [rdx]
   1400472db:	add    BYTE PTR [rdx],cl
   1400472dd:	push   rdx
   1400472de:	(bad)  
   1400472df:	push   rax
   1400472e0:	sbb    BYTE PTR [rax+0x1b00002],dh
   1400472e6:	add    al,0x0
   1400472e8:	sbb    DWORD PTR [rdi],ecx
   1400472ea:	add    al,BYTE PTR [rax]
   1400472ec:	(bad)  
   1400472ed:	push   rdx
   1400472ee:	add    dh,BYTE PTR [rax]
   1400472f0:	sbb    BYTE PTR [rax+0x1e00002],dh
   1400472f6:	add    al,0x0
   1400472f8:	(bad)  
   1400472f9:	(bad)  
   1400472fa:	(bad)  
   1400472fb:	inc    DWORD PTR [rax]
   1400472fd:	add    BYTE PTR [rax],al
   1400472ff:	add    BYTE PTR [rax],al
   140047301:	add    BYTE PTR [rax],al
   140047303:	add    dl,cl
   140047305:	outs   dx,BYTE PTR ds:[rsi]
   140047306:	add    eax,DWORD PTR [rax]
   140047308:	(bad)  
   140047309:	(bad)  
   14004730a:	(bad)  
   14004730b:	inc    DWORD PTR [rax]
   14004730d:	add    BYTE PTR [rax],al
   14004730f:	add    BYTE PTR [rax],al
   140047311:	add    BYTE PTR [rax],al
   140047313:	add    BYTE PTR [rcx],al
   140047315:	add    BYTE PTR [rax],al
   140047317:	add    BYTE PTR [rdx],al
   140047319:	add    BYTE PTR [rax],al
   14004731b:	add    BYTE PTR [rcx],al
   14004731d:	add    BYTE PTR [rax],al
   14004731f:	add    BYTE PTR [rbx+rsi*2],ah
   140047322:	add    al,0x0
	...
   140047330:	out    0x6e,al
   140047332:	add    eax,DWORD PTR [rax]
   140047334:	cmp    BYTE PTR [rax],al
   140047336:	add    BYTE PTR [rax],al
   140047338:	in     al,0xe0
   14004733a:	add    BYTE PTR [rax],al
   14004733c:	(bad)  
   14004733d:	(bad)  
   14004733e:	(bad)  
   14004733f:	dec    DWORD PTR [rcx]
   140047341:	loope  0x140047343
   140047343:	add    BYTE PTR [rax],al
   140047345:	add    BYTE PTR [rax],al
   140047347:	add    BYTE PTR [rdi],dl
   140047349:	loope  0x14004734b
   14004734b:	add    BYTE PTR [rcx],al
   14004734d:	add    BYTE PTR [rax],al
   14004734f:	add    BYTE PTR [rax],ch
   140047351:	loope  0x140047353
   140047353:	add    bh,bh
   140047355:	(bad)  
   140047356:	(bad)  
   140047357:	jmp    rsi
   140047359:	outs   dx,BYTE PTR ds:[rsi]
   14004735a:	add    eax,DWORD PTR [rax]
   14004735c:	add    BYTE PTR [rax],al
   14004735e:	add    BYTE PTR [rax],al
   140047360:	rep outs dx,BYTE PTR ds:[rsi]
   140047362:	add    eax,DWORD PTR [rax]
   140047364:	add    al,BYTE PTR [rax]
   140047366:	add    BYTE PTR [rax],al
   140047368:	sbb    DWORD PTR [rdx],ecx
   14004736a:	add    al,BYTE PTR [rax]
   14004736c:	or     dh,BYTE PTR [rdx]
   14004736e:	(bad)  
   14004736f:	push   rax
   140047370:	sbb    BYTE PTR [rax+0x1e00002],dh
   140047376:	add    al,0x0
   140047378:	adc    DWORD PTR [rdx],edx
   14004737a:	add    DWORD PTR [rax],eax
   14004737c:	or     DWORD PTR [rdx+0x0],esp
   14004737f:	add    BYTE PTR [rax],bl
   140047381:	mov    al,0x2
   140047383:	add    BYTE PTR [rax],dl
   140047385:	add    al,BYTE PTR [rax+rax*1]
   140047388:	(bad)  
   140047389:	(bad)  
   14004738a:	(bad)  
   14004738b:	jmp    QWORD PTR [rdi-0x3bfffc91]
   140047391:	loopne 0x140047393
   140047393:	add    bh,bh
   140047395:	(bad)  
   140047396:	(bad)  
   140047397:	call   QWORD PTR [rcx]
   140047399:	sbb    al,0x6
   14004739b:	add    BYTE PTR [rsp+riz*2],bl
   14004739e:	or     al,BYTE PTR [rax]
   1400473a0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400473a3:	add    BYTE PTR [rdx+rdx*2],cl
   1400473a6:	or     BYTE PTR [rax+0x18],dh
   1400473a9:	mov    al,0x2
   1400473ab:	add    BYTE PTR [rax+0x2],al
   1400473ae:	add    al,0x0
   1400473b0:	(bad)  
   1400473b1:	(bad)  
   1400473b2:	(bad)  
   1400473b3:	jmp    FWORD PTR [rbx+0x6f]
   1400473b6:	add    eax,DWORD PTR [rax]
   1400473b8:	push   rsp
   1400473b9:	loopne 0x1400473bb
   1400473bb:	add    bh,bh
   1400473bd:	(bad)  
   1400473be:	(bad)  
   1400473bf:	push   QWORD PTR [rbx-0x20]
   1400473c2:	add    BYTE PTR [rax],al
   1400473c4:	add    BYTE PTR [rax],al
   1400473c6:	add    BYTE PTR [rax],al
   1400473c8:	stos   BYTE PTR es:[rdi],al
   1400473c9:	loopne 0x1400473cb
   1400473cb:	add    bh,bh
   1400473cd:	(bad)  
   1400473ce:	(bad)  
   1400473cf:	call   QWORD PTR [rcx]
   1400473d1:	and    cl,BYTE PTR [rcx]
   1400473d3:	add    BYTE PTR [rdx],ah
   1400473d5:	xor    al,0x2c
   1400473d7:	add    BYTE PTR [rip+0xa002601],dl        # 0x14a0499de
   1400473dd:	lock or al,ah
   1400473e0:	(bad)  
   1400473e1:	jo     0x1400473e8
   1400473e3:	(bad)  
   1400473e4:	add    al,0x50
   1400473e6:	add    BYTE PTR [rax],al
   1400473e8:	sbb    BYTE PTR [rax+0x2700002],dh
   1400473ee:	add    al,0x0
   1400473f0:	clc    
   1400473f1:	fld    QWORD PTR [rax]
   1400473f3:	add    bh,bh
   1400473f5:	(bad)  
   1400473f6:	(bad)  
   1400473f7:	jmp    FWORD PTR [rsi]
   1400473f9:	fiadd  WORD PTR [rax]
   1400473fb:	add    BYTE PTR [rax],al
   1400473fd:	add    BYTE PTR [rax],al
   1400473ff:	add    BYTE PTR [rbp-0xffff22],dl
   140047405:	(bad)  
   140047406:	(bad)  
   140047407:	(bad)  
   140047408:	jle    0x1400473e9
   14004740a:	add    BYTE PTR [rax],al
   14004740c:	add    DWORD PTR [rax],eax
   14004740e:	add    BYTE PTR [rax],al
   140047410:	adc    eax,esp
   140047412:	add    BYTE PTR [rax],al
   140047414:	(bad)  
   140047415:	(bad)  
   140047416:	(bad)  
   140047417:	call   QWORD PTR [rcx]
   140047419:	adc    eax,DWORD PTR [rdx]
   14004741b:	add    BYTE PTR [rdx],cl
   14004741d:	push   rdx
   14004741e:	(bad)  
   14004741f:	xor    BYTE PTR [rax],bl
   140047421:	mov    al,0x2
   140047423:	add    BYTE PTR [rax-0xfffbfe],ah
   140047429:	(bad)  
   14004742a:	(bad)  
   14004742b:	push   QWORD PTR [rdi+0x6f]
   14004742e:	add    eax,DWORD PTR [rax]
   140047430:	add    BYTE PTR [rax],al
   140047432:	add    BYTE PTR [rax],al
   140047434:	xchg   DWORD PTR [rdi+0x3],ebp
   140047437:	add    BYTE PTR [rax],al
   140047439:	add    BYTE PTR [rax],al
   14004743b:	add    BYTE PTR [rdi-0x3ffffc91],dl
   140047441:	fld    QWORD PTR [rax]
   140047443:	add    bh,bh
   140047445:	(bad)  
   140047446:	(bad)  
   140047447:	call   rsi
   140047449:	fld    QWORD PTR [rax]
   14004744b:	add    BYTE PTR [rax],al
   14004744d:	add    BYTE PTR [rax],al
   14004744f:	add    cl,ch
   140047451:	fld    QWORD PTR [rax]
   140047453:	add    bh,bh
   140047455:	(bad)  
   140047456:	(bad)  
   140047457:	call   FWORD PTR [rcx]
   140047459:	adc    al,BYTE PTR [rcx]
   14004745b:	add    BYTE PTR [rcx],cl
   14004745d:	(bad)  
   14004745e:	add    BYTE PTR [rax],al
   140047460:	sbb    BYTE PTR [rax+0x2d00002],dh
   140047466:	add    al,0x0
   140047468:	(bad)  
   140047469:	(bad)  
   14004746a:	(bad)  
   14004746b:	inc    DWORD PTR [rax]
   14004746d:	add    BYTE PTR [rax],al
   14004746f:	add    BYTE PTR [rax],al
   140047471:	add    BYTE PTR [rax],al
   140047473:	add    BYTE PTR [rdi+0x70],dh
   140047476:	add    eax,DWORD PTR [rax]
   140047478:	add    BYTE PTR [rax],al
   14004747a:	add    BYTE PTR [rax],al
   14004747c:	xchg   ebx,eax
   14004747d:	jo     0x140047482
   14004747f:	add    BYTE PTR [rax],al
   140047481:	add    BYTE PTR [rax],al
   140047483:	add    BYTE PTR [rdi-0xfffc90],ch
   140047489:	(bad)  
   14004748a:	(bad)  
   14004748b:	inc    DWORD PTR [rax]
   14004748d:	add    BYTE PTR [rax],al
   14004748f:	add    BYTE PTR [rax],al
   140047491:	add    BYTE PTR [rax],al
   140047493:	add    BYTE PTR [rbx],al
   140047495:	add    BYTE PTR [rax],al
   140047497:	add    BYTE PTR [rax+rax*1],al
   14004749a:	add    BYTE PTR [rax],al
   14004749c:	add    DWORD PTR [rax],eax
   14004749e:	add    BYTE PTR [rax],al
   1400474a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400474a1:	je     0x1400474a7
	...
   1400474af:	add    bl,cl
   1400474b1:	jo     0x1400474b6
   1400474b3:	add    BYTE PTR [rax],bh
   1400474b5:	add    BYTE PTR [rax],al
   1400474b7:	add    BYTE PTR [rax-0x23],dl
   1400474ba:	add    BYTE PTR [rax],al
   1400474bc:	(bad)  
   1400474bd:	(bad)  
   1400474be:	(bad)  
   1400474bf:	(bad)  
   1400474c0:	jl     0x14004749f
   1400474c2:	add    BYTE PTR [rax],al
   1400474c4:	add    BYTE PTR [rax],al
   1400474c6:	add    BYTE PTR [rax],al
   1400474c8:	xchg   ch,bl
   1400474ca:	add    BYTE PTR [rax],al
   1400474cc:	add    DWORD PTR [rax],eax
   1400474ce:	add    BYTE PTR [rax],al
   1400474d0:	mov    ebp,ebx
   1400474d2:	add    BYTE PTR [rax],al
   1400474d4:	add    BYTE PTR [rax],al
   1400474d6:	add    BYTE PTR [rax],al
   1400474d8:	xchg   edi,eax
   1400474d9:	fld    QWORD PTR [rax]
   1400474db:	add    BYTE PTR [rdx],al
   1400474dd:	add    BYTE PTR [rax],al
   1400474df:	add    BYTE PTR [rdi+0xdd],bl
   1400474e5:	add    BYTE PTR [rax],al
   1400474e7:	add    BYTE PTR [rbp+0x30000dd],ch
   1400474ed:	add    BYTE PTR [rax],al
   1400474ef:	add    BYTE PTR [rbp-0xffff23],dh
   1400474f5:	(bad)  
   1400474f6:	(bad)  
   1400474f7:	dec    ebx
   1400474f9:	jo     0x1400474fe
   1400474fb:	add    BYTE PTR [rax],al
   1400474fd:	add    BYTE PTR [rax],al
   1400474ff:	add    al,bl
   140047501:	jo     0x140047506
   140047503:	add    BYTE PTR [rax+rax*1],al
   140047506:	add    BYTE PTR [rax],al
   140047508:	sbb    DWORD PTR [rdx],ecx
   14004750a:	add    al,BYTE PTR [rax]
   14004750c:	or     dh,BYTE PTR [rdx]
   14004750e:	(bad)  
   14004750f:	push   rax
   140047510:	sbb    BYTE PTR [rax+0x2d00002],dh
   140047516:	add    al,0x0
   140047518:	adc    DWORD PTR [rdx],edx
   14004751a:	add    DWORD PTR [rax],eax
   14004751c:	or     DWORD PTR [rdx+0x0],esp
   14004751f:	add    BYTE PTR [rax],bl
   140047521:	mov    al,0x2
   140047523:	add    BYTE PTR [rax],al
   140047525:	add    eax,DWORD PTR [rax+rax*1]
   140047528:	(bad)  
   140047529:	(bad)  
   14004752a:	(bad)  
   14004752b:	(bad)  
   14004752c:	fld    TBYTE PTR [rdi+0x3]
   14004752f:	add    al,bl
   140047531:	fadd   QWORD PTR [rax]
   140047533:	add    bh,bh
   140047535:	(bad)  
   140047536:	(bad)  
   140047537:	call   QWORD PTR [rcx]
   140047539:	adc    al,BYTE PTR [rcx]
   14004753b:	add    BYTE PTR [rcx],cl
   14004753d:	(bad)  
   14004753e:	add    BYTE PTR [rax],al
   140047540:	sbb    BYTE PTR [rax+0x3300002],dh
   140047546:	add    al,0x0
   140047548:	(bad)  
   140047549:	(bad)  
   14004754a:	(bad)  
   14004754b:	jmp    rdi
   14004754d:	outs   dx,DWORD PTR ds:[rsi]
   14004754e:	add    eax,DWORD PTR [rax]
   140047550:	(bad)  
   140047551:	(bad)  
   140047552:	(bad)  
   140047553:	push   rbx
   140047555:	outs   dx,DWORD PTR ds:[rsi]
   140047556:	add    eax,DWORD PTR [rax]
   140047558:	mov    eax,0xff0000dc
   14004755d:	(bad)  
   14004755e:	(bad)  
   14004755f:	call   QWORD PTR [rcx]
   140047561:	sbb    eax,0x741d0006
   140047566:	or     eax,DWORD PTR [rax]
   140047568:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004756b:	add    BYTE PTR [rip+0x18e00952],cl        # 0x158e47ec3
   140047571:	mov    al,0x2
   140047573:	add    BYTE PTR [rax+0x3],ah
   140047576:	add    al,0x0
   140047578:	(bad)  
   140047579:	(bad)  
   14004757a:	(bad)  
   14004757b:	push   QWORD PTR [rdi-0xfffc91]
   140047581:	(bad)  
   140047582:	(bad)  
   140047583:	inc    ebx
   140047585:	outs   dx,DWORD PTR ds:[rsi]
   140047586:	add    eax,DWORD PTR [rax]
   140047588:	(bad)  
   140047589:	(bad)  
   14004758a:	(bad)  
   14004758b:	dec    edi
   14004758d:	outs   dx,DWORD PTR ds:[rsi]
   14004758e:	add    eax,DWORD PTR [rax]
   140047590:	rex xlat BYTE PTR ds:[rbx]
   140047592:	add    BYTE PTR [rax],al
   140047594:	(bad)  
   140047595:	(bad)  
   140047596:	(bad)  
   140047597:	jmp    QWORD PTR [rax-0x29]
   14004759a:	add    BYTE PTR [rax],al
   14004759c:	add    BYTE PTR [rax],al
   14004759e:	add    BYTE PTR [rax],al
   1400475a0:	psubusb mm0,QWORD PTR [rax]
   1400475a3:	add    bh,bh
   1400475a5:	(bad)  
   1400475a6:	(bad)  
   1400475a7:	inc    DWORD PTR [rcx]
   1400475a9:	sbb    DWORD PTR [rbx],ecx
   1400475ab:	add    BYTE PTR [rcx],bl
   1400475ad:	push   rsp
   1400475ae:	sbb    al,BYTE PTR [rax]
   1400475b0:	sbb    DWORD PTR [rcx+rbx*1],esi
   1400475b3:	add    BYTE PTR [rcx],bl
   1400475b5:	add    DWORD PTR [rdx],edx
   1400475b7:	add    BYTE PTR [rdx],dl
   1400475b9:	lock adc al,ah
   1400475bc:	(bad)  
   1400475bd:	ror    BYTE PTR [rax+rsi*2],0xb
   1400475c1:	(bad)  
   1400475c2:	add    BYTE PTR [rax],al
   1400475c4:	add    DWORD PTR [rax],ebx
   1400475c6:	or     al,BYTE PTR [rax]
   1400475c8:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   1400475cc:	sbb    BYTE PTR [rsp+rcx*1+0x0],dl
   1400475d0:	sbb    BYTE PTR [rbx+rcx*1],dh
   1400475d3:	add    BYTE PTR [rax],bl
   1400475d5:	push   rdx
   1400475d6:	adc    al,0xf0
   1400475d8:	adc    ah,al
   1400475da:	adc    BYTE PTR [rax+0x1],dh
   1400475dd:	adc    al,0x9
   1400475df:	add    BYTE PTR [rdx+rax*2],dl
   1400475e2:	adc    al,dh
   1400475e4:	(bad)  
   1400475e5:	loopne 0x1400475f3
   1400475e7:	ror    BYTE PTR [rdx],1
   1400475e9:	ror    BYTE PTR [rax],0x70
   1400475ec:	(bad)  
   1400475ed:	(bad)  
   1400475ee:	(bad)  
   1400475ef:	push   rax
   1400475f0:	add    eax,0x1000030
   1400475f5:	sbb    DWORD PTR [rdx],ecx
   1400475f7:	add    BYTE PTR [rcx],bl
   1400475f9:	xor    al,0x13
   1400475fb:	add    BYTE PTR [rcx],bl
   1400475fd:	xchg   edx,eax
   1400475fe:	adc    eax,0x11e013f0
   140047603:	ror    BYTE PTR [rdi],1
   140047605:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64827c
   14004760c:	adc    DWORD PTR [rdx],edx
   14004760e:	add    DWORD PTR [rax],eax
   140047610:	or     DWORD PTR [rdx+0x0],esp
   140047613:	add    BYTE PTR [rax],bl
   140047615:	mov    al,0x2
   140047617:	add    BYTE PTR [rax-0xfffbfd],dl
   14004761d:	(bad)  
   14004761e:	(bad)  
   14004761f:	(bad)  
   140047620:	jmp    FWORD PTR [rdi+0x3]
   140047623:	add    BYTE PTR [rax-0x35],cl
   140047626:	add    BYTE PTR [rax],al
   140047628:	(bad)  
   140047629:	(bad)  
   14004762a:	(bad)  
   14004762b:	call   FWORD PTR [rcx]
   14004762d:	sbb    eax,0x10b0005
   140047632:	sbb    BYTE PTR [rax],al
   140047634:	add    al,0x70
   140047636:	add    esp,DWORD PTR [rax+0x2]
   140047639:	xor    BYTE PTR [rax],al
   14004763b:	add    ah,dl
   14004763d:	jge    0x140047641
   14004763f:	add    BYTE PTR [rax+0x1000000],dh
   140047645:	adc    cl,BYTE PTR [rax]
   140047647:	add    BYTE PTR [rdx],dl
   140047649:	push   rsp
   14004764a:	or     eax,DWORD PTR [rax]
   14004764c:	adc    dh,BYTE PTR [rdx+rcx*1]
   14004764f:	add    BYTE PTR [rdx],dl
   140047651:	xor    cl,BYTE PTR [rsi]
   140047653:	ror    BYTE PTR [rax+rsi*2],0xb
   140047657:	(bad)  
   140047658:	adc    DWORD PTR [rax],ebx
   14004765a:	add    al,0x0
   14004765c:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004765f:	add    BYTE PTR [rdx+rdx*2],cl
   140047662:	or     BYTE PTR [rax+0x18],dh
   140047665:	mov    al,0x2
   140047667:	add    al,al
   140047669:	add    eax,DWORD PTR [rax+rax*1]
   14004766c:	(bad)  
   14004766d:	(bad)  
   14004766e:	(bad)  
   14004766f:	dec    DWORD PTR [rbx]
   140047671:	jo     0x140047676
   140047673:	add    BYTE PTR [rax],al
   140047675:	add    BYTE PTR [rax],al
   140047677:	add    BYTE PTR [rbx],bl
   140047679:	jo     0x14004767e
   14004767b:	add    BYTE PTR [rcx],al
   14004767d:	add    BYTE PTR [rax],al
   14004767f:	add    BYTE PTR [rbx],ch
   140047681:	jo     0x140047686
   140047683:	add    BYTE PTR [rcx],al
   140047685:	add    BYTE PTR [rax],al
   140047687:	add    BYTE PTR [rbx],bh
   140047689:	jo     0x14004768e
   14004768b:	add    BYTE PTR [rbx],al
   14004768d:	add    BYTE PTR [rax],al
   14004768f:	add    BYTE PTR [rbx+0x70],cl
   140047692:	add    eax,DWORD PTR [rax]
   140047694:	add    eax,DWORD PTR [rax]
   140047696:	add    BYTE PTR [rax],al
   140047698:	pop    rbx
   140047699:	jo     0x14004769e
   14004769b:	add    BYTE PTR [rax],al
   14004769d:	add    BYTE PTR [rax],al
   14004769f:	add    BYTE PTR [rbx+0x70],ch
   1400476a2:	add    eax,DWORD PTR [rax]
   1400476a4:	fs retf 
   1400476a6:	add    BYTE PTR [rax],al
   1400476a8:	(bad)  
   1400476a9:	(bad)  
   1400476aa:	(bad)  
   1400476ab:	(bad)  
   1400476ac:	jg     0x140047679
   1400476ae:	add    BYTE PTR [rax],al
   1400476b0:	add    DWORD PTR [rax],eax
   1400476b2:	add    BYTE PTR [rax],al
   1400476b4:	xchg   ebx,ecx
   1400476b6:	add    BYTE PTR [rax],al
   1400476b8:	add    eax,DWORD PTR [rax]
   1400476ba:	add    BYTE PTR [rax],al
   1400476bc:	cdq    
   1400476bd:	retf   
   1400476be:	add    BYTE PTR [rax],al
   1400476c0:	add    DWORD PTR [rax],eax
   1400476c2:	add    BYTE PTR [rax],al
   1400476c4:	movabs ds:0xb2000000000000cb,eax
   1400476cd:	retf   
   1400476ce:	add    BYTE PTR [rax],al
   1400476d0:	(bad)  
   1400476d1:	(bad)  
   1400476d2:	(bad)  
   1400476d3:	call   FWORD PTR [rcx]
   1400476d5:	sbb    DWORD PTR [rax+rax*1],eax
   1400476d8:	or     dh,BYTE PTR [rsp+rcx*1]
   1400476db:	add    BYTE PTR [rdx],cl
   1400476dd:	jb     0x1400476e5
   1400476df:	jo     0x1400476b5
   1400476e1:	jge    0x1400476e5
   1400476e3:	add    BYTE PTR [rax],dh
   1400476e5:	add    BYTE PTR [rax],al
   1400476e7:	add    BYTE PTR [rcx],bl
   1400476e9:	rex or eax,0x5d742f00
   1400476ef:	add    BYTE PTR [rbx],ch
   1400476f1:	fs pop rsp
   1400476f3:	add    BYTE PTR [rdi],ah
   1400476f5:	xor    al,0x5b
   1400476f7:	add    BYTE PTR [rdx],bl
   1400476f9:	add    DWORD PTR [rax+rax*1+0xc],edx
   1400476fd:	lock or ah,al
   140047700:	or     al,dl
   140047702:	(bad)  
   140047703:	rol    BYTE PTR [rax+rdx*2],0x0
   140047707:	add    BYTE PTR [rax+riz*1+0x3],bh
   14004770b:	add    al,dh
   14004770d:	add    eax,DWORD PTR [rax+rax*1]
   140047710:	xchg   edx,eax
   140047711:	add    al,BYTE PTR [rax]
   140047713:	add    bh,bh
   140047715:	(bad)  
   140047716:	(bad)  
   140047717:	push   QWORD PTR [rbx+0x74]
   14004771a:	add    eax,DWORD PTR [rax]
   14004771c:	(bad)  
   14004771d:	(bad)  
   14004771e:	(bad)  
   14004771f:	dec    DWORD PTR [rdi-0x27fffc8c]
   140047725:	out    dx,eax
   140047726:	add    BYTE PTR [rax],al
   140047728:	(bad)  
   140047729:	(bad)  
   14004772a:	(bad)  
   14004772b:	push   QWORD PTR [rdx+rsi*8+0x0]
   140047732:	add    BYTE PTR [rax],al
   140047734:	xlat   BYTE PTR ds:[rbx]
   140047735:	repnz add BYTE PTR [rax],al
   140047738:	(bad)  
   140047739:	(bad)  
   14004773a:	(bad)  
   14004773b:	call   FWORD PTR [rbx-0xb]
   14004773e:	add    BYTE PTR [rax],al
   140047740:	add    DWORD PTR [rax],eax
   140047742:	add    BYTE PTR [rax],al
   140047744:	mov    ?,ebp
   140047746:	add    BYTE PTR [rax],al
   140047748:	(bad)  
   140047749:	(bad)  
   14004774a:	(bad)  
   14004774b:	call   FWORD PTR [rcx]
   14004774d:	and    BYTE PTR [rdi],al
   14004774f:	add    BYTE PTR [rsi],cl
   140047751:	add    DWORD PTR [rsi],edx
   140047753:	add    BYTE PTR [rdi],al
   140047755:	loopne 0x14004775c
   140047757:	jo     0x14004775d
   140047759:	(bad)  
   14004775a:	add    edx,DWORD PTR [rax+0x2]
   14004775d:	xor    BYTE PTR [rax],al
   14004775f:	add    ah,dl
   140047761:	jge    0x140047765
   140047763:	add    BYTE PTR [rax+0x11000000],ch
   140047769:	adc    eax,DWORD PTR [rdx]
   14004776b:	add    BYTE PTR [rdx],cl
   14004776d:	push   rdx
   14004776e:	(bad)  
   14004776f:	xor    BYTE PTR [rax],bl
   140047771:	mov    al,0x2
   140047773:	add    BYTE PTR [rax],ah
   140047775:	add    al,0x4
   140047777:	add    bh,bh
   140047779:	(bad)  
   14004777a:	(bad)  
   14004777b:	dec    DWORD PTR [rbx]
   14004777d:	je     0x140047782
   14004777f:	add    BYTE PTR [rax],al
   140047781:	add    BYTE PTR [rax],al
   140047783:	add    BYTE PTR [rbx],bl
   140047785:	je     0x14004778a
   140047787:	add    BYTE PTR [rcx],al
   140047789:	add    BYTE PTR [rax],al
   14004778b:	add    BYTE PTR [rsi],ch
   14004778d:	je     0x140047792
   14004778f:	add    BYTE PTR [rdx],al
   140047791:	add    BYTE PTR [rax],al
   140047793:	add    BYTE PTR [rcx+0x74],al
   140047796:	add    eax,DWORD PTR [rax]
   140047798:	add    eax,DWORD PTR [rax]
   14004779a:	add    BYTE PTR [rax],al
   14004779c:	push   rsp
   14004779d:	je     0x1400477a2
   14004779f:	add    BYTE PTR [rdx],al
   1400477a1:	add    BYTE PTR [rax],al
   1400477a3:	add    BYTE PTR [rdi+0x74],ah
   1400477a6:	add    eax,DWORD PTR [rax]
   1400477a8:	shr    ah,0x0
   1400477ab:	add    bh,bh
   1400477ad:	(bad)  
   1400477ae:	(bad)  
   1400477af:	jmp    rax
   1400477b1:	in     al,dx
   1400477b2:	add    BYTE PTR [rax],al
   1400477b4:	add    eax,DWORD PTR [rax]
   1400477b6:	add    BYTE PTR [rax],al
   1400477b8:	in     eax,dx
   1400477b9:	in     al,dx
   1400477ba:	add    BYTE PTR [rax],al
   1400477bc:	add    al,BYTE PTR [rax]
   1400477be:	add    BYTE PTR [rax],al
   1400477c0:	or     ebp,ebp
   1400477c2:	add    BYTE PTR [rax],al
   1400477c4:	add    DWORD PTR [rax],eax
   1400477c6:	add    BYTE PTR [rax],al
   1400477c8:	(bad)  
   1400477c9:	in     eax,dx
   1400477ca:	add    BYTE PTR [rax],al
   1400477cc:	add    BYTE PTR [rax],al
   1400477ce:	add    BYTE PTR [rax],al
   1400477d0:	and    ebp,ebp
   1400477d2:	add    BYTE PTR [rax],al
   1400477d4:	(bad)  
   1400477d5:	(bad)  
   1400477d6:	(bad)  
   1400477d7:	call   QWORD PTR [rcx]
   1400477d9:	sbb    BYTE PTR [rip+0x9221000],al        # 0x1492687df
   1400477df:	jo     0x1400477e9
   1400477e1:	(bad)  
   1400477e2:	(bad)  
   1400477e3:	xor    BYTE PTR [rsi],al
   1400477e5:	push   rax
   1400477e6:	add    BYTE PTR [rax],al
   1400477e8:	sbb    BYTE PTR [rax+0x4500002],dh
   1400477ee:	add    al,0x0
   1400477f0:	(bad)  
   1400477f1:	(bad)  
   1400477f2:	(bad)  
   1400477f3:	call   FWORD PTR [rdi+0x71]
   1400477f6:	add    eax,DWORD PTR [rax]
   1400477f8:	add    BYTE PTR [rax],al
   1400477fa:	add    BYTE PTR [rax],al
   1400477fc:	imul   esi,DWORD PTR [rcx+0x3],0x0
   140047800:	(bad)  
   140047801:	(bad)  
   140047802:	(bad)  
   140047803:	(bad)  
   140047804:	jnp    0x140047877
   140047806:	add    eax,DWORD PTR [rax]
   140047808:	add    al,BYTE PTR [rax]
   14004780a:	add    BYTE PTR [rax],al
   14004780c:	mov    esi,DWORD PTR [rcx+0x3]
   14004780f:	add    BYTE PTR [rbx],al
   140047811:	add    BYTE PTR [rax],al
   140047813:	add    BYTE PTR [rdi+0x2000371],dl
   140047819:	add    BYTE PTR [rax],al
   14004781b:	add    BYTE PTR [rdi+0x5000371],ah
   140047821:	add    BYTE PTR [rax],al
   140047823:	add    BYTE PTR [rdi+0x5000371],dh
   140047829:	add    BYTE PTR [rax],al
   14004782b:	add    bl,al
   14004782d:	jno    0x140047832
   14004782f:	add    BYTE PTR [rdi],al
   140047831:	add    BYTE PTR [rax],al
   140047833:	add    dh,dl
   140047835:	jno    0x14004783a
   140047837:	add    BYTE PTR [rax],cl
   140047839:	add    BYTE PTR [rax],al
   14004783b:	add    dl,ah
   14004783d:	jno    0x140047842
   14004783f:	add    BYTE PTR [rdi],al
   140047841:	add    BYTE PTR [rax],al
   140047843:	add    dl,dh
   140047845:	jno    0x14004784a
   140047847:	add    BYTE PTR [rdx],cl
   140047849:	add    BYTE PTR [rax],al
   14004784b:	add    BYTE PTR [rdx],al
   14004784d:	jb     0x140047852
   14004784f:	add    BYTE PTR [rbx],cl
   140047851:	add    BYTE PTR [rax],al
   140047853:	add    BYTE PTR [rsi],cl
   140047855:	jb     0x14004785a
   140047857:	add    BYTE PTR [rdx],cl
   140047859:	add    BYTE PTR [rax],al
   14004785b:	add    BYTE PTR [rsi],bl
   14004785d:	jb     0x140047862
   14004785f:	add    BYTE PTR [rdx],cl
   140047861:	add    BYTE PTR [rax],al
   140047863:	add    BYTE PTR [rsi],ch
   140047865:	jb     0x14004786a
   140047867:	add    BYTE PTR [rdi],al
   140047869:	add    BYTE PTR [rax],al
   14004786b:	add    BYTE PTR [rcx+0x72],al
   14004786e:	add    eax,DWORD PTR [rax]
   140047870:	add    al,BYTE PTR [rax]
   140047872:	add    BYTE PTR [rax],al
   140047874:	push   rsp
   140047875:	jb     0x14004787a
   140047877:	add    BYTE PTR [rax],dl
   140047879:	add    BYTE PTR [rax],al
   14004787b:	add    BYTE PTR [rdi+0x72],ah
   14004787e:	add    eax,DWORD PTR [rax]
   140047880:	adc    DWORD PTR [rax],eax
   140047882:	add    BYTE PTR [rax],al
   140047884:	jae    0x1400478f8
   140047886:	add    eax,DWORD PTR [rax]
   140047888:	adc    BYTE PTR [rax],al
   14004788a:	add    BYTE PTR [rax],al
   14004788c:	xor    DWORD PTR [rdx+0x3],0x0
   140047890:	adc    eax,DWORD PTR [rax]
   140047892:	add    BYTE PTR [rax],al
   140047894:	xchg   ebx,eax
   140047895:	jb     0x14004789a
   140047897:	add    BYTE PTR [rax+rax*1],dl
   14004789a:	add    BYTE PTR [rax],al
   14004789c:	lahf   
   14004789d:	jb     0x1400478a2
   14004789f:	add    BYTE PTR [rbx],dl
   1400478a1:	add    BYTE PTR [rax],al
   1400478a3:	add    BYTE PTR [rdi+0x13000372],ch
   1400478a9:	add    BYTE PTR [rax],al
   1400478ab:	add    BYTE PTR [rdi+0x17000372],bh
   1400478b1:	add    BYTE PTR [rax],al
   1400478b3:	add    dl,dl
   1400478b5:	jb     0x1400478ba
   1400478b7:	add    BYTE PTR [rdi],dl
   1400478b9:	add    BYTE PTR [rax],al
   1400478bb:	add    dh,bl
   1400478bd:	jb     0x1400478c2
   1400478bf:	add    BYTE PTR [rcx],bl
   1400478c1:	add    BYTE PTR [rax],al
   1400478c3:	add    cl,dh
   1400478c5:	jb     0x1400478ca
   1400478c7:	add    BYTE PTR [rcx],bl
   1400478c9:	add    BYTE PTR [rax],al
   1400478cb:	add    ch,bh
   1400478cd:	jb     0x1400478d2
   1400478cf:	add    BYTE PTR [rax],dl
   1400478d1:	add    BYTE PTR [rax],al
   1400478d3:	add    BYTE PTR [rax],dl
   1400478d5:	jae    0x1400478da
   1400478d7:	add    BYTE PTR [rax+rax*1],bl
   1400478da:	add    BYTE PTR [rax],al
   1400478dc:	and    esi,DWORD PTR [rbx+0x3]
   1400478df:	add    BYTE PTR [rip+0x2f000000],bl        # 0x16f0478e5
   1400478e5:	jae    0x1400478ea
   1400478e7:	add    BYTE PTR [rax+rax*1],bl
   1400478ea:	add    BYTE PTR [rax],al
   1400478ec:	(bad)  
   1400478ed:	jae    0x1400478f2
   1400478ef:	add    BYTE PTR [rax+rax*1],bl
   1400478f2:	add    BYTE PTR [rax],al
   1400478f4:	rex.WRXB jae 0x1400478fa
   1400478f7:	add    BYTE PTR [rax+rax*1],bl
   1400478fa:	add    BYTE PTR [rax],al
   1400478fc:	pop    rbx
   1400478fd:	jae    0x140047902
   1400478ff:	add    BYTE PTR [rcx],ah
   140047901:	add    BYTE PTR [rax],al
   140047903:	add    BYTE PTR [rsi+0x73],ch
   140047906:	add    eax,DWORD PTR [rax]
   140047908:	and    al,BYTE PTR [rax]
   14004790a:	add    BYTE PTR [rax],al
   14004790c:	jp     0x140047981
   14004790e:	add    eax,DWORD PTR [rax]
   140047910:	and    DWORD PTR [rax],eax
   140047912:	add    BYTE PTR [rax],al
   140047914:	mov    dh,BYTE PTR [rbx+0x3]
   140047917:	add    BYTE PTR [rax+rax*1],ah
   14004791a:	add    BYTE PTR [rax],al
   14004791c:	(bad)  
   14004791d:	jae    0x140047922
   14004791f:	add    BYTE PTR [rip+0xffffffffa6000000],ah        # 0xe6047925
   140047925:	jae    0x14004792a
   140047927:	add    BYTE PTR [rax+rax*1],ah
   14004792a:	add    BYTE PTR [rax],al
   14004792c:	mov    dh,0x73
   14004792e:	add    eax,DWORD PTR [rax]
   140047930:	(bad)  
   140047931:	add    BYTE PTR [rax],al
   140047933:	add    cl,cl
   140047935:	jae    0x14004793a
   140047937:	add    BYTE PTR [rax],ch
   140047939:	add    BYTE PTR [rax],al
   14004793b:	add    ch,dl
   14004793d:	jae    0x140047942
   14004793f:	add    BYTE PTR [rdi],ah
   140047941:	add    BYTE PTR [rax],al
   140047943:	add    ch,ah
   140047945:	jae    0x14004794a
   140047947:	add    BYTE PTR [rcx],ah
   140047949:	add    BYTE PTR [rax],al
   14004794b:	add    al,bh
   14004794d:	jae    0x140047952
   14004794f:	add    ah,dl
   140047951:	call   0x140037956
   140047956:	(bad)  
   140047957:	dec    DWORD PTR [rdi]
   140047959:	jmp    0x14004795e
   14004795e:	add    BYTE PTR [rax],al
   140047960:	and    cl,ch
   140047962:	add    BYTE PTR [rax],al
   140047964:	add    DWORD PTR [rax],eax
   140047966:	add    BYTE PTR [rax],al
   140047968:	jmp    0x14006796e
   14004796e:	add    BYTE PTR [rax],al
   140047970:	js     0x14004795b
   140047972:	add    BYTE PTR [rax],al
   140047974:	add    eax,DWORD PTR [rax]
   140047976:	add    BYTE PTR [rax],al
   140047978:	sub    cl,0x0
   14004797b:	add    BYTE PTR [rax+rax*1],al
   14004797e:	add    BYTE PTR [rax],al
   140047980:	(bad)  
   140047981:	jmp    0x140097986
   140047986:	add    BYTE PTR [rax],al
   140047988:	mov    edx,0x60000e9
   14004798d:	add    BYTE PTR [rax],al
   14004798f:	add    ah,al
   140047991:	jmp    0x1400b7996
   140047996:	add    BYTE PTR [rax],al
   140047998:	call   0x148047a86
   14004799d:	add    BYTE PTR [rax],al
   14004799f:	add    al,dh
   1400479a1:	jmp    0x1400d79a6
   1400479a6:	add    BYTE PTR [rax],al
   1400479a8:	or     ch,dl
   1400479aa:	add    BYTE PTR [rax],al
   1400479ac:	or     al,BYTE PTR [rax]
   1400479ae:	add    BYTE PTR [rax],al
   1400479b0:	cs (bad) 
   1400479b2:	add    BYTE PTR [rax],al
   1400479b4:	or     eax,DWORD PTR [rax]
   1400479b6:	add    BYTE PTR [rax],al
   1400479b8:	ss (bad) 
   1400479ba:	add    BYTE PTR [rax],al
   1400479bc:	or     al,0x0
   1400479be:	add    BYTE PTR [rax],al
   1400479c0:	push   rax
   1400479c1:	(bad)  
   1400479c2:	add    BYTE PTR [rax],al
   1400479c4:	(bad)  
   1400479c5:	add    BYTE PTR [rax],al
   1400479c7:	add    BYTE PTR [rsi-0x16],dl
   1400479ca:	add    BYTE PTR [rax],al
   1400479cc:	adc    BYTE PTR [rax],al
   1400479ce:	add    BYTE PTR [rax],al
   1400479d0:	jp     0x1400479bc
   1400479d2:	add    BYTE PTR [rax],al
   1400479d4:	adc    DWORD PTR [rax],eax
   1400479d6:	add    BYTE PTR [rax],al
   1400479d8:	(bad)  
   1400479d9:	(bad)  
   1400479da:	add    BYTE PTR [rax],al
   1400479dc:	adc    al,BYTE PTR [rax]
   1400479de:	add    BYTE PTR [rax],al
   1400479e0:	pushf  
   1400479e1:	(bad)  
   1400479e2:	add    BYTE PTR [rax],al
   1400479e4:	adc    eax,DWORD PTR [rax]
   1400479e6:	add    BYTE PTR [rax],al
   1400479e8:	shr    dl,0x0
   1400479eb:	add    BYTE PTR [rax+rax*1],dl
   1400479ee:	add    BYTE PTR [rax],al
   1400479f0:	enter  0xea,0x0
   1400479f4:	adc    eax,0xe2000000
   1400479f9:	(bad)  
   1400479fa:	add    BYTE PTR [rax],al
   1400479fc:	(bad)  
   1400479fd:	add    BYTE PTR [rax],al
   1400479ff:	add    bh,ch
   140047a01:	(bad)  
   140047a02:	add    BYTE PTR [rax],al
   140047a04:	(bad)  
   140047a05:	add    BYTE PTR [rax],al
   140047a07:	add    BYTE PTR [rcx],al
   140047a09:	jmp    0x140047a0b
   140047a0b:	add    BYTE PTR [rax],bl
   140047a0d:	add    BYTE PTR [rax],al
   140047a0f:	add    BYTE PTR [rsi],cl
   140047a11:	jmp    0x140047a13
   140047a13:	add    BYTE PTR [rcx],bl
   140047a15:	add    BYTE PTR [rax],al
   140047a17:	add    BYTE PTR [rax],ah
   140047a19:	jmp    0x140047a1b
   140047a1b:	add    BYTE PTR [rdx],bl
   140047a1d:	add    BYTE PTR [rax],al
   140047a1f:	add    BYTE PTR [rsi],ah
   140047a21:	jmp    0x140047a23
   140047a23:	add    BYTE PTR [rbx],bl
   140047a25:	add    BYTE PTR [rax],al
   140047a27:	add    BYTE PTR [rdx],bh
   140047a29:	jmp    0x140047a2b
   140047a2b:	add    BYTE PTR [rax+rax*1],bl
   140047a2e:	add    BYTE PTR [rax],al
   140047a30:	pop    rsi
   140047a31:	jmp    0x140047a33
   140047a33:	add    BYTE PTR [rip+0x66000000],bl        # 0x1a6047a39
   140047a39:	jmp    0x140047a3b
   140047a3b:	add    BYTE PTR [rsi],bl
   140047a3d:	add    BYTE PTR [rax],al
   140047a3f:	add    BYTE PTR [rax+0x1f0000eb],al
   140047a45:	add    BYTE PTR [rax],al
   140047a47:	add    BYTE PTR [rdx+0x200000eb],ah
   140047a4d:	add    BYTE PTR [rax],al
   140047a4f:	add    BYTE PTR [rbp+0x210000eb],bh
   140047a55:	add    BYTE PTR [rax],al
   140047a57:	add    ch,ah
   140047a59:	jmp    0x140047a5b
   140047a5b:	add    BYTE PTR [rdx],ah
   140047a5d:	add    BYTE PTR [rax],al
   140047a5f:	add    ch,ch
   140047a61:	jmp    0x140047a63
   140047a63:	add    BYTE PTR [rbx],ah
   140047a65:	add    BYTE PTR [rax],al
   140047a67:	add    BYTE PTR [rdi],al
   140047a69:	in     al,dx
   140047a6a:	add    BYTE PTR [rax],al
   140047a6c:	and    al,0x0
   140047a6e:	add    BYTE PTR [rax],al
   140047a70:	adc    eax,0x250000ec
   140047a75:	add    BYTE PTR [rax],al
   140047a77:	add    BYTE PTR [rip+0x260000ec],bl        # 0x166047b69
   140047a7d:	add    BYTE PTR [rax],al
   140047a7f:	add    BYTE PTR [rdi],dh
   140047a81:	in     al,dx
   140047a82:	add    BYTE PTR [rax],al
   140047a84:	(bad)  
   140047a85:	add    BYTE PTR [rax],al
   140047a87:	add    BYTE PTR [rbx-0x14],dl
   140047a8a:	add    BYTE PTR [rax],al
   140047a8c:	sub    BYTE PTR [rax],al
   140047a8e:	add    BYTE PTR [rax],al
   140047a90:	outs   dx,BYTE PTR ds:[rsi]
   140047a91:	in     al,dx
   140047a92:	add    BYTE PTR [rax],al
   140047a94:	sub    DWORD PTR [rax],eax
   140047a96:	add    BYTE PTR [rax],al
   140047a98:	jl     0x140047a86
   140047a9a:	add    BYTE PTR [rax],al
   140047a9c:	sub    al,BYTE PTR [rax]
   140047a9e:	add    BYTE PTR [rax],al
   140047aa0:	sub    esp,0x0
   140047aa3:	add    bh,bh
   140047aa5:	(bad)  
   140047aa6:	(bad)  
   140047aa7:	call   FWORD PTR [rcx]
   140047aa9:	sbb    al,BYTE PTR [rsi]
   140047aab:	add    BYTE PTR [rbx],cl
   140047aad:	rol    BYTE PTR [rdi],cl
   140047aaf:	loopne 0x140047ab6
   140047ab1:	jo     0x140047ab7
   140047ab3:	(bad)  
   140047ab4:	add    edx,DWORD PTR [rax+0x2]
   140047ab7:	xor    ah,dl
   140047ab9:	jge    0x140047abd
   140047abb:	add    BYTE PTR [rax+0x0],ah
   140047abe:	add    BYTE PTR [rax],al
   140047ac0:	sbb    DWORD PTR [rdi],ebp
   140047ac2:	or     DWORD PTR [rax],eax
   140047ac4:	(bad)  
   140047ac5:	je     0x140047ae6
   140047ac7:	add    DWORD PTR [rsi],ebx
   140047ac9:	fs (bad) 
   140047acb:	add    DWORD PTR [rsi],ebx
   140047acd:	xor    al,0x1d
   140047acf:	add    DWORD PTR [rsi],ebx
   140047ad1:	add    DWORD PTR [rdx],ebx
   140047ad3:	add    DWORD PTR [rax],edx
   140047ad5:	push   rax
   140047ad6:	add    BYTE PTR [rax],al
   140047ad8:	(bad)  
   140047ad9:	jge    0x140047add
   140047adb:	add    al,al
   140047add:	or     BYTE PTR [rax],al
   140047adf:	add    BYTE PTR [rcx],dl
   140047ae1:	adc    al,BYTE PTR [rcx]
   140047ae3:	add    BYTE PTR [rcx],cl
   140047ae5:	(bad)  
   140047ae6:	add    BYTE PTR [rax],al
   140047ae8:	sbb    BYTE PTR [rax+0x4800002],dh
   140047aee:	add    al,0x0
   140047af0:	(bad)  
   140047af1:	(bad)  
   140047af2:	(bad)  
   140047af3:	call   FWORD PTR [rbx+0x78000374]
   140047af9:	cli    
   140047afa:	add    BYTE PTR [rax],al
   140047afc:	(bad)  
   140047afd:	(bad)  
   140047afe:	(bad)  
   140047aff:	inc    DWORD PTR [rcx]
   140047b01:	or     al,BYTE PTR [rax+rax*1]
   140047b04:	or     dh,BYTE PTR [rcx+rcx*1]
   140047b07:	add    BYTE PTR [rdx],cl
   140047b09:	push   rdx
   140047b0a:	(bad)  
   140047b0b:	jo     0x140047b26
   140047b0d:	and    BYTE PTR [rdi],al
   140047b0f:	add    BYTE PTR [rsi],cl
   140047b11:	add    DWORD PTR [rax],ebx
   140047b13:	add    BYTE PTR [rdi],al
   140047b15:	loopne 0x140047b1c
   140047b17:	jo     0x140047b1d
   140047b19:	(bad)  
   140047b1a:	add    edx,DWORD PTR [rax+0x2]
   140047b1d:	xor    BYTE PTR [rax],al
   140047b1f:	add    ah,dl
   140047b21:	jge    0x140047b25
   140047b23:	add    BYTE PTR [rax+0x19000000],dh
   140047b29:	xor    DWORD PTR [rip+0x25742300],ecx        # 0x165789e2f
   140047b2f:	add    BYTE PTR [rbx],ah
   140047b31:	fs and al,0x0
   140047b34:	and    esi,DWORD PTR [rbx+riz*1]
   140047b37:	add    BYTE PTR [rbx],ah
   140047b39:	add    DWORD PTR [rax+rax*1],ebx
   140047b3c:	sbb    al,dh
   140047b3e:	(bad)  
   140047b3f:	loopne 0x140047b55
   140047b41:	rcl    BYTE PTR [rdx],1
   140047b43:	rcl    BYTE PTR [rax],0x50
   140047b46:	add    BYTE PTR [rax],al
   140047b48:	(bad)  
   140047b49:	jge    0x140047b4d
   140047b4b:	add    al,dl
   140047b4d:	add    BYTE PTR [rax],al
   140047b4f:	add    BYTE PTR [rcx],dl
   140047b51:	adc    al,0x4
   140047b53:	add    BYTE PTR [rsp+rsi*1],dl
   140047b56:	or     DWORD PTR [rax],eax
   140047b58:	(bad)  
   140047b59:	push   rdx
   140047b5a:	add    dh,BYTE PTR [rax+0x18]
   140047b5d:	mov    al,0x2
   140047b5f:	add    BYTE PTR [rax-0xfffbfc],dh
   140047b65:	(bad)  
   140047b66:	(bad)  
   140047b67:	jmp    FWORD PTR [rbx-0x7fffc8c]
   140047b6d:	sub    BYTE PTR [rcx],al
   140047b6f:	add    bh,bh
   140047b71:	(bad)  
   140047b72:	(bad)  
   140047b73:	call   QWORD PTR [rcx]
   140047b75:	and    cl,BYTE PTR [rcx]
   140047b77:	add    BYTE PTR [rdx],ah
   140047b79:	xor    al,0x2c
   140047b7b:	add    BYTE PTR [rip+0xa002601],dl        # 0x14a04a182
   140047b81:	lock or al,ah
   140047b84:	(bad)  
   140047b85:	jo     0x140047b8c
   140047b87:	(bad)  
   140047b88:	add    al,0x50
   140047b8a:	add    BYTE PTR [rax],al
   140047b8c:	sbb    BYTE PTR [rax+0x4e00002],dh
   140047b92:	add    al,0x0
   140047b94:	cwde   
   140047b95:	add    DWORD PTR es:[rax],eax
   140047b98:	(bad)  
   140047b99:	(bad)  
   140047b9a:	(bad)  
   140047b9b:	dec    esi
   140047b9d:	add    DWORD PTR es:[rax],eax
   140047ba0:	add    BYTE PTR [rax],al
   140047ba2:	add    BYTE PTR [rax],al
   140047ba4:	cmp    BYTE PTR [rdi],ah
   140047ba6:	add    DWORD PTR [rax],eax
   140047ba8:	(bad)  
   140047ba9:	(bad)  
   140047baa:	(bad)  
   140047bab:	jmp    QWORD PTR [rcx]
   140047bad:	sub    BYTE PTR [rcx],al
   140047baf:	add    BYTE PTR [rcx],al
   140047bb1:	add    BYTE PTR [rax],al
   140047bb3:	add    BYTE PTR [rax+rbp*1-0xffff],dh
   140047bba:	(bad)  
   140047bbb:	call   QWORD PTR [rcx]
   140047bbd:	adc    eax,DWORD PTR [rdx]
   140047bbf:	add    BYTE PTR [rdx],cl
   140047bc1:	push   rdx
   140047bc2:	(bad)  
   140047bc3:	xor    BYTE PTR [rax],bl
   140047bc5:	mov    al,0x2
   140047bc7:	add    BYTE PTR [rax],dl
   140047bc9:	add    eax,0xffff0004
   140047bce:	(bad)  
   140047bcf:	(bad)  
   140047bd0:	mov    ebx,0x374
   140047bd5:	add    BYTE PTR [rax],al
   140047bd7:	add    bh,al
   140047bd9:	je     0x140047bde
   140047bdb:	add    BYTE PTR [rax+0x26],ch
   140047bde:	add    DWORD PTR [rax],eax
   140047be0:	(bad)  
   140047be1:	(bad)  
   140047be2:	(bad)  
   140047be3:	(bad)  
   140047be4:	jle    0x140047c0c
   140047be6:	add    DWORD PTR [rax],eax
   140047be8:	add    BYTE PTR [rax],al
   140047bea:	add    BYTE PTR [rax],al
   140047bec:	mov    BYTE PTR [rsi],ah
   140047bee:	add    DWORD PTR [rax],eax
   140047bf0:	(bad)  
   140047bf1:	(bad)  
   140047bf2:	(bad)  
   140047bf3:	call   FWORD PTR [rcx]
   140047bf5:	cmp    ecx,DWORD PTR [rdi]
   140047bf7:	add    BYTE PTR [rdx],ch
   140047bf9:	push   0x7426007c
   140047bfe:	add    eax,DWORD PTR [rcx]
   140047c00:	es add al,BYTE PTR fs:[rcx]
   140047c04:	es xor al,0x1
   140047c07:	add    DWORD PTR [rsi],esp
   140047c09:	add    edx,edi
   140047c0b:	add    BYTE PTR [rax],bl
   140047c0d:	lock (bad) 
   140047c0f:	loopne 0x140047c25
   140047c11:	rcl    BYTE PTR [rdx],1
   140047c13:	rcl    BYTE PTR [rax],0x50
   140047c16:	add    BYTE PTR [rax],al
   140047c18:	(bad)  
   140047c19:	jge    0x140047c1d
   140047c1b:	add    BYTE PTR [rax+0x19000007],dh
   140047c21:	(bad)  
   140047c22:	(bad)  
   140047c23:	add    BYTE PTR [rcx+rax*1],cl
   140047c26:	add    BYTE PTR [eip+0x3600470],al        # 0x14364809d
   140047c2d:	push   rax
   140047c2e:	add    dh,BYTE PTR [rax]
   140047c30:	(bad)  
   140047c31:	jge    0x140047c35
   140047c33:	add    BYTE PTR [rax],ah
   140047c35:	add    eax,DWORD PTR [rax]
   140047c37:	add    BYTE PTR [rcx],bl
   140047c39:	sbb    eax,DWORD PTR [rbx]
   140047c3b:	add    BYTE PTR [rcx],cl
   140047c3d:	add    DWORD PTR [rax],ebp
   140047c3f:	add    BYTE PTR [rdx],al
   140047c41:	xor    BYTE PTR [rax],al
   140047c43:	add    ah,dl
   140047c45:	jge    0x140047c49
   140047c47:	add    BYTE PTR [rax],dh
   140047c49:	add    DWORD PTR [rax],eax
   140047c4b:	add    BYTE PTR [rcx],al
   140047c4d:	(bad)  
   140047c4e:	or     al,0x0
   140047c50:	(bad)  
   140047c51:	fs or  eax,0xc541f00
   140047c57:	add    BYTE PTR [rdi],bl
   140047c59:	xor    al,0xa
   140047c5b:	add    BYTE PTR [rdi],bl
   140047c5d:	xor    bl,BYTE PTR [rbx]
   140047c5f:	lock sbb eax,esp
   140047c62:	(bad)  
   140047c63:	rcl    BYTE PTR [rip+0x117013c0],1        # 0x151749029
   140047c69:	sbb    al,0x8
   140047c6b:	add    BYTE PTR [rsp+riz*2],bl
   140047c6e:	or     eax,DWORD PTR [rax]
   140047c70:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140047c74:	adc    al,0x34
   140047c76:	or     DWORD PTR [rax],eax
   140047c78:	or     BYTE PTR [rdx+0x4],dl
   140047c7b:	jo     0x140047c95
   140047c7d:	mov    al,0x2
   140047c7f:	add    BYTE PTR [rax+0x5],al
   140047c82:	add    al,0x0
   140047c84:	or     BYTE PTR [rdi],cl
   140047c86:	add    DWORD PTR [rax],eax
   140047c88:	(bad)  
   140047c89:	(bad)  
   140047c8a:	(bad)  
   140047c8b:	call   QWORD PTR [rax+0xf]
   140047c8e:	add    DWORD PTR [rax],eax
   140047c90:	add    BYTE PTR [rax],al
   140047c92:	add    BYTE PTR [rax],al
   140047c94:	ror    BYTE PTR [rdi],cl
   140047c96:	add    DWORD PTR [rax],eax
   140047c98:	(bad)  
   140047c99:	(bad)  
   140047c9a:	(bad)  
   140047c9b:	call   QWORD PTR [rcx]
   140047c9d:	sbb    BYTE PTR [rsi],al
   140047c9f:	add    BYTE PTR [rax],bl
   140047ca1:	or     al,BYTE PTR fs:[rax]
   140047ca4:	adc    al,0x34
   140047ca6:	or     DWORD PTR [rax],eax
   140047ca8:	or     BYTE PTR [rdx+0x4],dl
   140047cab:	jo     0x140047cc5
   140047cad:	mov    al,0x2
   140047caf:	add    BYTE PTR [rax+0x5],dh
   140047cb2:	add    al,0x0
   140047cb4:	sub    al,0xe
   140047cb6:	add    DWORD PTR [rax],eax
   140047cb8:	(bad)  
   140047cb9:	(bad)  
   140047cba:	(bad)  
   140047cbb:	jmp    FWORD PTR [rcx+0xe]
   140047cbe:	add    DWORD PTR [rax],eax
   140047cc0:	add    BYTE PTR [rax],al
   140047cc2:	add    BYTE PTR [rax],al
   140047cc4:	mov    esp,0xff00010e
   140047cc9:	(bad)  
   140047cca:	(bad)  
   140047ccb:	call   QWORD PTR [rcx]
   140047ccd:	adc    al,0x4
   140047ccf:	add    BYTE PTR [rsp+rsi*1],dl
   140047cd2:	or     DWORD PTR [rax],eax
   140047cd4:	(bad)  
   140047cd5:	push   rdx
   140047cd6:	add    dh,BYTE PTR [rax+0x18]
   140047cd9:	mov    al,0x2
   140047cdb:	add    BYTE PTR [rax-0xfffbfb],ah
   140047ce1:	(bad)  
   140047ce2:	(bad)  
   140047ce3:	call   QWORD PTR [rsi+0x75]
   140047ce6:	add    eax,DWORD PTR [rax]
   140047ce8:	js     0x140047cf7
   140047cea:	add    DWORD PTR [rax],eax
   140047cec:	(bad)  
   140047ced:	(bad)  
   140047cee:	(bad)  
   140047cef:	jmp    FWORD PTR [rdi+0x10d]
   140047cf5:	add    BYTE PTR [rax],al
   140047cf7:	add    ch,ah
   140047cf9:	or     eax,0xffff0001
   140047cfe:	(bad)  
   140047cff:	call   FWORD PTR [rcx]
   140047d01:	and    al,0x5
   140047d03:	add    BYTE PTR [rbx],dl
   140047d05:	add    DWORD PTR [rsi+0x0],esp
   140047d08:	add    al,0x70
   140047d0a:	add    esi,DWORD PTR [rax]
   140047d0c:	add    dl,BYTE PTR [rax+0x0]
   140047d0f:	add    ah,dl
   140047d11:	jge    0x140047d15
   140047d13:	add    BYTE PTR [rax],ah
   140047d15:	add    eax,DWORD PTR [rax]
   140047d17:	add    BYTE PTR [rcx],dl
   140047d19:	and    DWORD PTR [rdx],ecx
   140047d1b:	add    BYTE PTR [rcx],ah
   140047d1d:	xor    al,0x17
   140047d1f:	add    BYTE PTR [rip+0xcf00eb2],dl        # 0x14cf48bd7
   140047d25:	loopne 0x140047d31
   140047d27:	ror    BYTE PTR [rax],1
   140047d29:	rol    BYTE PTR [rsi],0x70
   140047d2c:	add    eax,0x18500460
   140047d31:	mov    al,0x2
   140047d33:	add    al,dl
   140047d35:	add    eax,0xffff0004
   140047d3a:	(bad)  
   140047d3b:	jmp    QWORD PTR [rdx+0x75]
   140047d3e:	add    eax,DWORD PTR [rax]
   140047d40:	rcl    BYTE PTR [rax],1
   140047d42:	add    DWORD PTR [rax],eax
   140047d44:	(bad)  
   140047d45:	(bad)  
   140047d46:	(bad)  
   140047d47:	jmp    FWORD PTR [rcx+0x112]
   140047d4d:	add    BYTE PTR [rax],al
   140047d4f:	add    ah,ah
   140047d51:	adc    al,BYTE PTR [rcx]
   140047d53:	add    bh,bh
   140047d55:	(bad)  
   140047d56:	(bad)  
   140047d57:	call   QWORD PTR [rcx]
   140047d59:	sbb    BYTE PTR [rax+rax*1],al
   140047d5c:	sbb    BYTE PTR [rbx+rcx*1],dh
   140047d5f:	add    BYTE PTR [rdx+rdx*2],cl
   140047d62:	or     BYTE PTR [rax+0x18],dh
   140047d65:	mov    al,0x2
   140047d67:	add    BYTE PTR [rax],al
   140047d69:	(bad)  
   140047d6a:	add    al,0x0
   140047d6c:	(bad)  
   140047d6d:	(bad)  
   140047d6e:	(bad)  
   140047d6f:	call   rdi
   140047d71:	je     0x140047d76
   140047d73:	add    BYTE PTR [rax],al
   140047d75:	add    BYTE PTR [rax],al
   140047d77:	add    bh,ah
   140047d79:	je     0x140047d7e
   140047d7b:	add    BYTE PTR [rcx],al
   140047d7d:	add    BYTE PTR [rax],al
   140047d7f:	add    bh,dh
   140047d81:	je     0x140047d86
   140047d83:	add    BYTE PTR [rcx],al
   140047d85:	add    BYTE PTR [rax],al
   140047d87:	add    BYTE PTR [rdx],cl
   140047d89:	jne    0x140047d8e
   140047d8b:	add    BYTE PTR [rbx],al
   140047d8d:	add    BYTE PTR [rax],al
   140047d8f:	add    BYTE PTR [rsi],dl
   140047d91:	jne    0x140047d96
   140047d93:	add    BYTE PTR [rax],al
   140047d95:	add    BYTE PTR [rax],al
   140047d97:	add    BYTE PTR [rsi],ah
   140047d99:	jne    0x140047d9e
   140047d9b:	add    BYTE PTR [rip+0x36000000],al        # 0x176047da1
   140047da1:	jne    0x140047da6
   140047da3:	add    BYTE PTR [rip+0x46000000],al        # 0x186047da9
   140047da9:	jne    0x140047dae
   140047dab:	add    BYTE PTR [rax],ah
   140047dad:	adc    BYTE PTR [rcx],al
   140047daf:	add    bh,bh
   140047db1:	(bad)  
   140047db2:	(bad)  
   140047db3:	(bad)  
   140047db4:	cmp    edx,DWORD PTR [rax]
   140047db6:	add    DWORD PTR [rax],eax
   140047db8:	add    al,BYTE PTR [rax]
   140047dba:	add    BYTE PTR [rax],al
   140047dbc:	movsxd edx,DWORD PTR [rax]
   140047dbe:	add    DWORD PTR [rax],eax
   140047dc0:	add    DWORD PTR [rax],eax
   140047dc2:	add    BYTE PTR [rax],al
   140047dc4:	outs   dx,BYTE PTR ds:[rsi]
   140047dc5:	adc    BYTE PTR [rcx],al
   140047dc7:	add    BYTE PTR [rbx],al
   140047dc9:	add    BYTE PTR [rax],al
   140047dcb:	add    BYTE PTR [rax+0x10],bh
   140047dce:	add    DWORD PTR [rax],eax
   140047dd0:	add    DWORD PTR [rax],eax
   140047dd2:	add    BYTE PTR [rax],al
   140047dd4:	adc    DWORD PTR [rax],0x1
   140047dda:	add    BYTE PTR [rax],al
   140047ddc:	mov    dl,BYTE PTR [rax]
   140047dde:	add    DWORD PTR [rax],eax
   140047de0:	add    eax,0x9d000000
   140047de5:	adc    BYTE PTR [rcx],al
   140047de7:	add    BYTE PTR [rax],al
   140047de9:	add    BYTE PTR [rax],al
   140047deb:	add    BYTE PTR [rdi-0xfffef0],ah
   140047df1:	(bad)  
   140047df2:	(bad)  
   140047df3:	inc    DWORD PTR [rcx]
   140047df5:	sbb    BYTE PTR [rdx],cl
   140047df7:	add    BYTE PTR [rax],bl
   140047df9:	fs or  eax,0xc541800
   140047dff:	add    BYTE PTR [rax],bl
   140047e01:	xor    al,0xa
   140047e03:	add    BYTE PTR [rax],bl
   140047e05:	push   rdx
   140047e06:	adc    al,0xf0
   140047e08:	adc    ah,al
   140047e0a:	adc    BYTE PTR [rax+0x11],dh
   140047e0d:	adc    al,BYTE PTR [rcx]
   140047e0f:	add    BYTE PTR [rcx],cl
   140047e11:	(bad)  
   140047e12:	add    BYTE PTR [rax],al
   140047e14:	sbb    BYTE PTR [rax+0x6300002],dh
   140047e1a:	add    al,0x0
   140047e1c:	or     BYTE PTR [rsi],dh
   140047e1e:	add    DWORD PTR [rax],eax
   140047e20:	(bad)  
   140047e21:	(bad)  
   140047e22:	(bad)  
   140047e23:	call   FWORD PTR [rcx]
   140047e25:	adc    eax,0xb2060002
   140047e2a:	add    dh,BYTE PTR [rax]
   140047e2c:	(bad)  
   140047e2d:	jge    0x140047e31
   140047e2f:	add    BYTE PTR [rax+0x0],dl
   140047e32:	add    BYTE PTR [rax],al
   140047e34:	adc    DWORD PTR [rax],esp
   140047e36:	or     al,BYTE PTR [rax]
   140047e38:	and    BYTE PTR [rsp+rcx*1+0x0],ah
   140047e3c:	sbb    al,0x54
   140047e3e:	or     eax,DWORD PTR [rax]
   140047e40:	sbb    BYTE PTR [rdx+rcx*1],dh
   140047e43:	add    BYTE PTR [rdx+rdx*2],cl
   140047e46:	or     al,dh
   140047e48:	(bad)  
   140047e49:	rol    BYTE PTR [rax+rsi*2],0x18
   140047e4d:	mov    al,0x2
   140047e4f:	add    BYTE PTR [rax+0x6],ah
   140047e52:	add    al,0x0
   140047e54:	(bad)  
   140047e55:	(bad)  
   140047e56:	(bad)  
   140047e57:	call   rdx
   140047e59:	jne    0x140047e5e
   140047e5b:	add    BYTE PTR [rax-0xfffece],al
   140047e61:	(bad)  
   140047e62:	(bad)  
   140047e63:	push   rbp
   140047e65:	xor    eax,DWORD PTR [rcx]
   140047e67:	add    BYTE PTR [rax],al
   140047e69:	add    BYTE PTR [rax],al
   140047e6b:	add    BYTE PTR [rcx+0x34],ch
   140047e6e:	add    DWORD PTR [rax],eax
   140047e70:	(bad)  
   140047e71:	(bad)  
   140047e72:	(bad)  
   140047e73:	call   QWORD PTR [rcx]
   140047e75:	adc    al,BYTE PTR [rcx]
   140047e77:	add    BYTE PTR [rcx],cl
   140047e79:	(bad)  
   140047e7a:	add    BYTE PTR [rax],al
   140047e7c:	sbb    BYTE PTR [rax+0x6900002],dh
   140047e82:	add    al,0x0
   140047e84:	(bad)  
   140047e85:	(bad)  
   140047e86:	(bad)  
   140047e87:	push   QWORD PTR [rsi+0x58000375]
   140047e8d:	xor    al,BYTE PTR [rcx]
   140047e8f:	add    bh,bh
   140047e91:	(bad)  
   140047e92:	(bad)  
   140047e93:	inc    DWORD PTR [rcx]
   140047e95:	or     al,0x2
   140047e97:	add    BYTE PTR [rdx+rsi*2],cl
   140047e9a:	or     BYTE PTR [rax],dh
   140047e9c:	adc    DWORD PTR [rsi],edx
   140047e9e:	(bad)  
   140047e9f:	add    BYTE PTR [rsi],dl
   140047ea1:	xor    al,0xd
   140047ea3:	add    BYTE PTR [rax],cl
   140047ea5:	jb     0x140047eab
   140047ea7:	jo     0x140047eac
   140047ea9:	(bad)  
   140047eaa:	add    dl,BYTE PTR [rax+0x18]
   140047ead:	mov    al,0x2
   140047eaf:	add    al,al
   140047eb1:	(bad)  
   140047eb2:	add    al,0x0
   140047eb4:	(bad)  
   140047eb5:	(bad)  
   140047eb6:	(bad)  
   140047eb7:	call   FWORD PTR [rax]
   140047eb9:	jbe    0x140047ebe
   140047ebb:	add    bh,bh
   140047ebd:	(bad)  
   140047ebe:	(bad)  
   140047ebf:	jmp    QWORD PTR [rsi+rsi*2]
   140047ec2:	add    eax,DWORD PTR [rax]
   140047ec4:	(bad)  
   140047ec5:	(bad)  
   140047ec6:	(bad)  
   140047ec7:	push   QWORD PTR [rax]
   140047ec9:	jbe    0x140047ece
   140047ecb:	add    bh,bh
   140047ecd:	(bad)  
   140047ece:	(bad)  
   140047ecf:	(bad)  
   140047ed0:	cmp    al,0x76
   140047ed2:	add    eax,DWORD PTR [rax]
   140047ed4:	test   al,0x30
   140047ed6:	add    DWORD PTR [rax],eax
   140047ed8:	(bad)  
   140047ed9:	(bad)  
   140047eda:	(bad)  
   140047edb:	jmp    rsi
   140047edd:	xor    BYTE PTR [rcx],al
   140047edf:	add    BYTE PTR [rcx],al
   140047ee1:	add    BYTE PTR [rax],al
   140047ee3:	add    BYTE PTR [rcx+rsi*1-0xffff],bl
   140047eea:	(bad)  
   140047eeb:	inc    DWORD PTR [rcx]
   140047eed:	clts   
   140047eef:	add    BYTE PTR [rdi],cl
   140047ef1:	or     BYTE PTR fs:[rax],al
   140047ef4:	sysenter 
   140047ef6:	(bad)  
   140047ef7:	add    BYTE PTR [rdi],cl
   140047ef9:	xor    cl,BYTE PTR [rbx]
   140047efb:	jo     0x140047efe
   140047efd:	adc    BYTE PTR [rsi],al
   140047eff:	add    BYTE PTR [rax],dl
   140047f01:	fs or  eax,0xc341000
   140047f07:	add    BYTE PTR [rax],dl
   140047f09:	jb     0x140047f17
   140047f0b:	jo     0x140047f1e
   140047f0d:	adc    al,BYTE PTR [rcx]
   140047f0f:	add    BYTE PTR [rcx],cl
   140047f11:	(bad)  
   140047f12:	add    BYTE PTR [rax],al
   140047f14:	sbb    BYTE PTR [rax+0x6f00002],dh
   140047f1a:	add    al,0x0
   140047f1c:	(bad)  
   140047f1d:	(bad)  
   140047f1e:	(bad)  
   140047f1f:	call   FWORD PTR [rsi-0xfffc8b]
   140047f25:	(bad)  
   140047f26:	(bad)  
   140047f27:	jmp    FWORD PTR [rdx-0x7fffc8b]
   140047f2d:	sub    eax,DWORD PTR [rcx]
   140047f2f:	add    bh,bh
   140047f31:	(bad)  
   140047f32:	(bad)  
   140047f33:	call   QWORD PTR [rcx]
   140047f35:	sbb    eax,0x341d0008
   140047f3a:	adc    BYTE PTR [rax],al
   140047f3c:	adc    DWORD PTR [rdx+0xa],esi
   140047f3f:	lock or al,ah
   140047f42:	(bad)  
   140047f43:	jo     0x140047f4a
   140047f45:	(bad)  
   140047f46:	add    al,0x50
   140047f48:	sbb    BYTE PTR [rax+0x7200002],dh
   140047f4e:	add    al,0x0
   140047f50:	(bad)  
   140047f51:	(bad)  
   140047f52:	(bad)  
   140047f53:	jmp    FWORD PTR [rsi+0x75]
   140047f56:	add    eax,DWORD PTR [rax]
   140047f58:	(bad)  
   140047f59:	(bad)  
   140047f5a:	(bad)  
   140047f5b:	(bad)  
   140047f5c:	jp     0x140047fd3
   140047f5e:	add    eax,DWORD PTR [rax]
   140047f60:	(bad)  
   140047f61:	(bad)  
   140047f62:	(bad)  
   140047f63:	inc    DWORD PTR [rsi-0xfffc8b]
   140047f69:	(bad)  
   140047f6a:	(bad)  
   140047f6b:	call   QWORD PTR [rdx-0x63fffc8b]
   140047f71:	sub    DWORD PTR [rcx],eax
   140047f73:	add    bh,bh
   140047f75:	(bad)  
   140047f76:	(bad)  
   140047f77:	(bad)  
   140047f78:	cld    
   140047f79:	sub    DWORD PTR [rcx],eax
   140047f7b:	add    BYTE PTR [rcx],al
   140047f7d:	add    BYTE PTR [rax],al
   140047f7f:	add    BYTE PTR [rdi-0xfffed5],al
   140047f85:	(bad)  
   140047f86:	(bad)  
   140047f87:	call   QWORD PTR [rcx]
   140047f89:	(bad)  
   140047f8a:	or     al,BYTE PTR [rax]
   140047f8c:	(bad)  
   140047f8d:	push   rsp
   140047f8e:	adc    BYTE PTR [rax],al
   140047f90:	sbb    esi,DWORD PTR [rdi+rcx*1]
   140047f93:	add    BYTE PTR [rdi],cl
   140047f95:	jb     0x140047fa2
   140047f97:	lock or eax,esp
   140047f9a:	(bad)  
   140047f9b:	rol    BYTE PTR [rip+0x18600470],0xb0        # 0x158648412
   140047fa2:	add    al,BYTE PTR [rax]
   140047fa4:	push   rax
   140047fa5:	(bad)  
   140047fa6:	add    al,0x0
   140047fa8:	(bad)  
   140047fa9:	(bad)  
   140047faa:	(bad)  
   140047fab:	(bad)  
   140047fac:	call   0x140048326
   140047fb1:	add    BYTE PTR [rax],al
   140047fb3:	add    ah,dh
   140047fb5:	jne    0x140047fba
   140047fb7:	add    bh,bh
   140047fb9:	(bad)  
   140047fba:	(bad)  
   140047fbb:	inc    DWORD PTR [rax]
   140047fbd:	jbe    0x140047fc2
   140047fbf:	add    BYTE PTR [rdx],al
   140047fc1:	add    BYTE PTR [rax],al
   140047fc3:	add    BYTE PTR [rsi+rsi*2],cl
   140047fc6:	add    eax,DWORD PTR [rax]
   140047fc8:	clc    
   140047fc9:	(bad)  
   140047fca:	add    DWORD PTR [rax],eax
   140047fcc:	(bad)  
   140047fcd:	(bad)  
   140047fce:	(bad)  
   140047fcf:	dec    DWORD PTR [rcx+0x3a]
   140047fd2:	add    DWORD PTR [rax],eax
   140047fd4:	add    BYTE PTR [rax],al
   140047fd6:	add    BYTE PTR [rax],al
   140047fd8:	outs   dx,DWORD PTR ds:[rsi]
   140047fd9:	cmp    al,BYTE PTR [rcx]
   140047fdb:	add    BYTE PTR [rcx],al
   140047fdd:	add    BYTE PTR [rax],al
   140047fdf:	add    BYTE PTR [rbp+0x3a],bh
   140047fe2:	add    DWORD PTR [rax],eax
   140047fe4:	add    BYTE PTR [rax],al
   140047fe6:	add    BYTE PTR [rax],al
   140047fe8:	cmp    DWORD PTR [rdx],0xffff0001
   140047fee:	(bad)  
   140047fef:	jmp    FWORD PTR [rbp+0x200013a]
   140047ff5:	add    BYTE PTR [rax],al
   140047ff7:	add    bl,dl
   140047ff9:	cmp    al,BYTE PTR [rcx]
   140047ffb:	add    BYTE PTR [rbx],al
   140047ffd:	add    BYTE PTR [rax],al
   140047fff:	add    ch,bl
   140048001:	cmp    al,BYTE PTR [rcx]
   140048003:	add    BYTE PTR [rdx],al
   140048005:	add    BYTE PTR [rax],al
   140048007:	add    cl,ah
   140048009:	cmp    al,BYTE PTR [rcx]
   14004800b:	add    bh,bh
   14004800d:	(bad)  
   14004800e:	(bad)  
   14004800f:	call   QWORD PTR [rcx]
   140048011:	adc    eax,DWORD PTR [rdx]
   140048013:	add    BYTE PTR [rdx],cl
   140048015:	push   rdx
   140048016:	(bad)  
   140048017:	xor    BYTE PTR [rax],bl
   140048019:	mov    al,0x2
   14004801b:	add    BYTE PTR [rax-0xfffbf9],al
   140048021:	(bad)  
   140048022:	(bad)  
   140048023:	inc    edx
   140048025:	jne    0x14004802a
   140048027:	add    BYTE PTR [rdi+rsi*1+0x1],al
   14004802b:	add    bh,bh
   14004802d:	(bad)  
   14004802e:	(bad)  
   14004802f:	call   FWORD PTR [rdx+0x37]
   140048032:	add    DWORD PTR [rax],eax
   140048034:	add    BYTE PTR [rax],al
   140048036:	add    BYTE PTR [rax],al
   140048038:	in     al,0x37
   14004803a:	add    DWORD PTR [rax],eax
   14004803c:	(bad)  
   14004803d:	(bad)  
   14004803e:	(bad)  
   14004803f:	call   QWORD PTR [rcx]
   140048041:	adc    al,0x4
   140048043:	add    BYTE PTR [rsp+rsi*1],dl
   140048046:	or     BYTE PTR [rax],al
   140048048:	(bad)  
   140048049:	push   rdx
   14004804a:	add    dh,BYTE PTR [rax+0x18]
   14004804d:	mov    al,0x2
   14004804f:	add    BYTE PTR [rax-0xfffbf9],dh
   140048055:	(bad)  
   140048056:	(bad)  
   140048057:	push   QWORD PTR [rax+0x77]
   14004805a:	add    eax,DWORD PTR [rax]
   14004805c:	clc    
   14004805d:	push   rbp
   14004805e:	add    DWORD PTR [rax],eax
   140048060:	(bad)  
   140048061:	(bad)  
   140048062:	(bad)  
   140048063:	push   QWORD PTR [rbx]
   140048065:	push   rsi
   140048066:	add    DWORD PTR [rax],eax
   140048068:	add    BYTE PTR [rax],al
   14004806a:	add    BYTE PTR [rax],al
   14004806c:	rex.WB push r14
   14004806e:	add    DWORD PTR [rax],eax
   140048070:	(bad)  
   140048071:	(bad)  
   140048072:	(bad)  
   140048073:	call   QWORD PTR [rcx]
   140048075:	sbb    eax,0x741d0008
   14004807a:	or     eax,DWORD PTR [rax]
   14004807c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140048080:	adc    eax,0x9000834
   140048085:	push   rdx
   140048086:	add    eax,0x2b018e0
   14004808b:	add    al,ah
   14004808d:	(bad)  
   14004808e:	add    al,0x0
   140048090:	sub    al,0x55
   140048092:	add    DWORD PTR [rax],eax
   140048094:	(bad)  
   140048095:	(bad)  
   140048096:	(bad)  
   140048097:	push   QWORD PTR [rbp+rdx*2+0x1]
   14004809b:	add    BYTE PTR [rax],al
   14004809d:	add    BYTE PTR [rax],al
   14004809f:	add    BYTE PTR [rbp+rdx*2-0xffff],ah
   1400480a6:	(bad)  
   1400480a7:	call   QWORD PTR [rcx]
   1400480a9:	sbb    BYTE PTR [rsi],al
   1400480ab:	add    BYTE PTR [rax],bl
   1400480ad:	or     DWORD PTR fs:[rax],eax
   1400480b0:	adc    al,0x34
   1400480b2:	or     BYTE PTR [rax],al
   1400480b4:	or     BYTE PTR [rdx+0x4],dl
   1400480b7:	jo     0x1400480d1
   1400480b9:	mov    al,0x2
   1400480bb:	add    BYTE PTR [rax],dl
   1400480bd:	or     BYTE PTR [rax+rax*1],al
   1400480c0:	(bad)  
   1400480c1:	(bad)  
   1400480c2:	(bad)  
   1400480c3:	jmp    QWORD PTR [rbx+rax*4+0x54200003]
   1400480ca:	add    DWORD PTR [rax],eax
   1400480cc:	(bad)  
   1400480cd:	(bad)  
   1400480ce:	(bad)  
   1400480cf:	call   FWORD PTR [rsi+0x54]
   1400480d2:	add    DWORD PTR [rax],eax
   1400480d4:	add    BYTE PTR [rax],al
   1400480d6:	add    BYTE PTR [rax],al
   1400480d8:	jrcxz  0x14004812e
   1400480da:	add    DWORD PTR [rax],eax
   1400480dc:	(bad)  
   1400480dd:	(bad)  
   1400480de:	(bad)  
   1400480df:	call   QWORD PTR [rcx]
   1400480e1:	sbb    BYTE PTR [rax+rax*1],al
   1400480e4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400480e7:	add    BYTE PTR [rdx+rdx*2],cl
   1400480ea:	or     BYTE PTR [rax+0x18],ah
   1400480ed:	mov    al,0x2
   1400480ef:	add    BYTE PTR [rax+0x8],al
   1400480f2:	add    al,0x0
   1400480f4:	(bad)  
   1400480f5:	(bad)  
   1400480f6:	(bad)  
   1400480f7:	dec    DWORD PTR [rax+0x76]
   1400480fa:	add    eax,DWORD PTR [rax]
   1400480fc:	add    BYTE PTR [rax],al
   1400480fe:	add    BYTE PTR [rax],al
   140048100:	addr32 jbe 0x140048106
   140048103:	add    bh,bh
   140048105:	(bad)  
   140048106:	(bad)  
   140048107:	push   QWORD PTR [rdi+0x76]
   14004810a:	add    eax,DWORD PTR [rax]
   14004810c:	add    al,BYTE PTR [rax]
   14004810e:	add    BYTE PTR [rax],al
   140048110:	xor    DWORD PTR [rsi+0x3],0x0
   140048114:	jl     0x140048169
   140048116:	add    DWORD PTR [rax],eax
   140048118:	(bad)  
   140048119:	(bad)  
   14004811a:	(bad)  
   14004811b:	dec    edx
   14004811d:	push   rbx
   14004811e:	add    DWORD PTR [rax],eax
   140048120:	add    BYTE PTR [rax],al
   140048122:	add    BYTE PTR [rax],al
   140048124:	jmp    0x14204827c
   140048129:	add    BYTE PTR [rax],al
   14004812b:	add    al,bh
   14004812d:	push   rbx
   14004812e:	add    DWORD PTR [rax],eax
   140048130:	add    eax,DWORD PTR [rax]
   140048132:	add    BYTE PTR [rax],al
   140048134:	adc    BYTE PTR [rcx+rax*1+0x0],dl
   140048138:	(bad)  
   140048139:	(bad)  
   14004813a:	(bad)  
   14004813b:	inc    DWORD PTR [rcx]
   14004813d:	or     eax,0x340d0004
   140048142:	adc    DWORD PTR [rax],eax
   140048144:	or     eax,0x115006b2
   140048149:	or     eax,0x62040001
   14004814e:	add    BYTE PTR [rax],al
   140048150:	sbb    BYTE PTR [rax+0x8700002],dh
   140048156:	add    al,0x0
   140048158:	(bad)  
   140048159:	(bad)  
   14004815a:	(bad)  
   14004815b:	(bad)  
   14004815c:	fidiv  WORD PTR [rsi+0x3]
   14004815f:	add    BYTE PTR [rax],al
   140048161:	add    BYTE PTR [rax],al
   140048163:	add    dl,ch
   140048165:	jbe    0x14004816a
   140048167:	add    ah,ah
   140048169:	mov    eax,DWORD PTR [rbx]
   14004816b:	add    bh,bh
   14004816d:	(bad)  
   14004816e:	(bad)  
   14004816f:	push   rcx
   140048171:	mov    eax,DWORD PTR [rbx]
   140048173:	add    BYTE PTR [rax],al
   140048175:	add    BYTE PTR [rax],al
   140048177:	add    dh,bh
   140048179:	mov    eax,DWORD PTR [rbx]
   14004817b:	add    bh,bh
   14004817d:	(bad)  
   14004817e:	(bad)  
   14004817f:	call   FWORD PTR [rcx]
   140048181:	(bad)  
   140048182:	or     eax,0x3d742e00
   140048187:	add    BYTE PTR [rdx],ch
   140048189:	fs cmp al,0x0
   14004818c:	es xor al,0x3b
   14004818f:	add    BYTE PTR [rdx],bl
   140048191:	add    DWORD PTR [rax+rax*1],esi
   140048194:	or     al,0xf0
   140048196:	or     ah,al
   140048198:	or     al,dl
   14004819a:	(bad)  
   14004819b:	rol    BYTE PTR [rax+rdx*2],0x0
   14004819f:	add    BYTE PTR [rax+riz*1+0x3],bh
   1400481a3:	add    BYTE PTR [rax-0x6dfffbf8],ah
   1400481a9:	add    DWORD PTR [rax],eax
   1400481ab:	add    bh,bh
   1400481ad:	(bad)  
   1400481ae:	(bad)  
   1400481af:	(bad)  
   1400481b0:	cli    
   1400481b1:	jbe    0x1400481b6
   1400481b3:	add    bh,bh
   1400481b5:	(bad)  
   1400481b6:	(bad)  
   1400481b7:	call   QWORD PTR [rax]
   1400481b9:	ja     0x1400481be
   1400481bb:	add    bh,bh
   1400481bd:	(bad)  
   1400481be:	(bad)  
   1400481bf:	jmp    QWORD PTR [rax]
   1400481c1:	ja     0x1400481c6
   1400481c3:	add    bh,bh
   1400481c5:	(bad)  
   1400481c6:	(bad)  
   1400481c7:	inc    DWORD PTR [rax]
   1400481c9:	add    BYTE PTR [rax],al
   1400481cb:	add    bh,bh
   1400481cd:	(bad)  
   1400481ce:	(bad)  
   1400481cf:	inc    DWORD PTR [rax]
   1400481d1:	add    BYTE PTR [rax],al
   1400481d3:	add    bh,bh
   1400481d5:	(bad)  
   1400481d6:	(bad)  
   1400481d7:	jmp    FWORD PTR [rdi+rsi*2]
   1400481da:	add    eax,DWORD PTR [rax]
   1400481dc:	sub    BYTE PTR [rsi+0x1],al
   1400481df:	add    bh,bh
   1400481e1:	(bad)  
   1400481e2:	(bad)  
   1400481e3:	dec    DWORD PTR [rdi+0x146]
   1400481e9:	add    BYTE PTR [rax],al
   1400481eb:	add    BYTE PTR [rsi+rax*2-0xffff],ah
   1400481f2:	(bad)  
   1400481f3:	push   QWORD PTR [rbx+0x1000146]
   1400481f9:	add    BYTE PTR [rax],al
   1400481fb:	add    BYTE PTR [rbx+0x2000146],bh
   140048201:	add    BYTE PTR [rax],al
   140048203:	add    BYTE PTR [rcx+rdx*2+0x1],cl
   140048207:	add    bh,bh
   140048209:	(bad)  
   14004820a:	(bad)  
   14004820b:	inc    DWORD PTR [rcx]
   14004820d:	add    al,BYTE PTR [rcx]
   14004820f:	add    BYTE PTR [rdx],al
   140048211:	push   rax
   140048212:	add    BYTE PTR [rax],al
   140048214:	adc    DWORD PTR [rbx],ebx
   140048216:	(bad)  
   140048217:	add    BYTE PTR [rbx],bl
   140048219:	je     0x14004822d
   14004821b:	add    BYTE PTR [rdi],dl
   14004821d:	xor    al,0x11
   14004821f:	add    BYTE PTR [rbx],cl
   140048221:	rol    BYTE PTR [rax+rdx*2],cl
   140048224:	sbb    BYTE PTR [rax+0x8d00002],dh
   14004822a:	add    al,0x0
   14004822c:	(bad)  
   14004822d:	(bad)  
   14004822e:	(bad)  
   14004822f:	(bad)  
   140048230:	cmp    al,0x77
   140048232:	add    eax,DWORD PTR [rax]
   140048234:	add    BYTE PTR [rax],al
   140048236:	add    BYTE PTR [rax],al
   140048238:	rex.W ja 0x14004823e
   14004823b:	add    BYTE PTR [rcx],al
   14004823d:	add    BYTE PTR [rax],al
   14004823f:	add    BYTE PTR [rdi+rsi*2+0x3],dl
   140048243:	add    BYTE PTR [rax],al
   140048245:	add    BYTE PTR [rax],al
   140048247:	add    BYTE PTR [rdi+rsi*2+0x3],ah
   14004824b:	add    BYTE PTR [rax],al
   14004824d:	cmp    eax,0xffff0001
   140048252:	(bad)  
   140048253:	(bad)  
   140048254:	cmp    al,0x3d
   140048256:	add    DWORD PTR [rax],eax
   140048258:	add    BYTE PTR [rax],al
   14004825a:	add    BYTE PTR [rax],al
   14004825c:	rex.RXB cmp eax,0x10001
   140048262:	add    BYTE PTR [rax],al
   140048264:	outs   dx,DWORD PTR ds:[rsi]
   140048265:	cmp    eax,0x20001
   14004826a:	add    BYTE PTR [rax],al
   14004826c:	cmp    DWORD PTR [rip+0x30001],0x0        # 0x140078274
   140048273:	add    BYTE PTR [rsi+0x13d],bh
   140048279:	add    BYTE PTR [rax],al
   14004827b:	add    al,cl
   14004827d:	cmp    eax,0xffff0001
   140048282:	(bad)  
   140048283:	inc    DWORD PTR [rcx]
   140048285:	invd   
   140048287:	add    BYTE PTR [rdi],cl
   140048289:	xchg   edx,eax
   14004828a:	or     esp,eax
   14004828c:	or     eax,edx
   14004828e:	(bad)  
   14004828f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143648706
   140048296:	add    dh,BYTE PTR [rax]
   140048298:	adc    DWORD PTR [rax],ebx
   14004829a:	add    al,0x0
   14004829c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004829f:	add    BYTE PTR [rdx],cl
   1400482a1:	push   rdx
   1400482a2:	(bad)  
   1400482a3:	jo     0x1400482bd
   1400482a5:	mov    al,0x2
   1400482a7:	add    BYTE PTR [rax],al
   1400482a9:	or     DWORD PTR [rax+rax*1],eax
   1400482ac:	(bad)  
   1400482ad:	(bad)  
   1400482ae:	(bad)  
   1400482af:	call   QWORD PTR [rbx+0x376]
   1400482b5:	add    BYTE PTR [rax],al
   1400482b7:	add    BYTE PTR [rdi+0x1000376],bl
   1400482bd:	add    BYTE PTR [rax],al
   1400482bf:	add    BYTE PTR [rdi+0x1000376],ch
   1400482c5:	add    BYTE PTR [rax],al
   1400482c7:	add    dl,al
   1400482c9:	jbe    0x1400482ce
   1400482cb:	add    BYTE PTR [rax],al
   1400482cd:	add    BYTE PTR [rax],al
   1400482cf:	add    dh,cl
   1400482d1:	jbe    0x1400482d6
   1400482d3:	add    BYTE PTR [rsp+rax*2-0xffff],cl
   1400482da:	(bad)  
   1400482db:	push   QWORD PTR [rcx+0x2000144]
   1400482e1:	add    BYTE PTR [rax],al
   1400482e3:	add    dl,cl
   1400482e5:	add    DWORD PTR [rax],r8d
   1400482e8:	add    DWORD PTR [rax],eax
   1400482ea:	add    BYTE PTR [rax],al
   1400482ec:	icebp  
   1400482ed:	add    DWORD PTR [rax],r8d
   1400482f0:	add    BYTE PTR [rax],al
   1400482f2:	add    BYTE PTR [rax],al
   1400482f4:	add    al,0x45
   1400482f6:	add    DWORD PTR [rax],eax
   1400482f8:	(bad)  
   1400482f9:	(bad)  
   1400482fa:	(bad)  
   1400482fb:	call   QWORD PTR [rcx]
   1400482fd:	adc    al,BYTE PTR [rcx]
   1400482ff:	add    BYTE PTR [rcx],cl
   140048301:	(bad)  
   140048302:	add    BYTE PTR [rax],al
   140048304:	sbb    BYTE PTR [rax+0x9300002],dh
   14004830a:	add    al,0x0
   14004830c:	(bad)  
   14004830d:	(bad)  
   14004830e:	(bad)  
   14004830f:	(bad)  
   140048310:	jl     0x140048389
   140048312:	add    eax,DWORD PTR [rax]
   140048314:	test   al,0x57
   140048316:	add    DWORD PTR [rax],eax
   140048318:	(bad)  
   140048319:	(bad)  
   14004831a:	(bad)  
   14004831b:	inc    DWORD PTR [rcx]
   14004831d:	(bad)  
   14004831e:	add    al,BYTE PTR [rax]
   140048320:	(bad)  
   140048321:	mov    dl,0x2
   140048323:	xor    BYTE PTR [rcx],dl
   140048325:	or     eax,0x62040001
   14004832a:	add    BYTE PTR [rax],al
   14004832c:	sbb    BYTE PTR [rax+0x9600002],dh
   140048332:	add    al,0x0
   140048334:	xor    BYTE PTR [rbx+rax*1-0x100],cl
   14004833b:	call   QWORD PTR [rcx]
   14004833d:	or     eax,0x62040001
   140048342:	add    BYTE PTR [rax],al
   140048344:	sbb    BYTE PTR [rax+0x9900002],dh
   14004834a:	add    al,0x0
   14004834c:	(bad)  
   14004834d:	(bad)  
   14004834e:	(bad)  
   14004834f:	jmp    FWORD PTR [rdi-0x5ffffc88]
   140048355:	mov    DWORD PTR [rbx],eax
   140048357:	add    bh,bh
   140048359:	(bad)  
   14004835a:	(bad)  
   14004835b:	(bad)  
   14004835c:	mov    edx,0x389
   140048361:	add    BYTE PTR [rax],al
   140048363:	add    bh,cl
   140048365:	mov    DWORD PTR [rbx],eax
   140048367:	add    bh,bh
   140048369:	(bad)  
   14004836a:	(bad)  
   14004836b:	call   QWORD PTR [rcx]
   14004836d:	or     eax,0x62040001
   140048372:	add    BYTE PTR [rax],al
   140048374:	sbb    BYTE PTR [rax+0x9c00002],dh
   14004837a:	add    al,0x0
   14004837c:	adc    BYTE PTR [rbx+rax*1-0x100],cl
   140048383:	call   QWORD PTR [rcx]
   140048385:	or     eax,0x62040001
   14004838a:	add    BYTE PTR [rax],al
   14004838c:	sbb    BYTE PTR [rax+0x9f00002],dh
   140048392:	add    al,0x0
   140048394:	(bad)  
   140048395:	(bad)  
   140048396:	(bad)  
   140048397:	jmp    QWORD PTR [rbx+0x60000378]
   14004839d:	mov    DWORD PTR [rbx],eax
   14004839f:	add    bh,bh
   1400483a1:	(bad)  
   1400483a2:	(bad)  
   1400483a3:	(bad)  
   1400483a4:	jp     0x14004832f
   1400483a6:	add    eax,DWORD PTR [rax]
   1400483a8:	add    BYTE PTR [rax],al
   1400483aa:	add    BYTE PTR [rax],al
   1400483ac:	(bad)
   1400483b0:	(bad)  
   1400483b1:	(bad)  
   1400483b2:	(bad)  
   1400483b3:	call   QWORD PTR [rcx]
   1400483b5:	adc    eax,DWORD PTR [rdx]
   1400483b7:	add    BYTE PTR [rdx],cl
   1400483b9:	push   rdx
   1400483ba:	(bad)  
   1400483bb:	xor    BYTE PTR [rax],bl
   1400483bd:	mov    al,0x2
   1400483bf:	add    BYTE PTR [rax],ah
   1400483c1:	or     al,BYTE PTR [rax+rax*1]
   1400483c4:	(bad)  
   1400483c5:	(bad)  
   1400483c6:	(bad)  
   1400483c7:	dec    DWORD PTR [rdi+rsi*2+0x3]
   1400483ce:	add    BYTE PTR [rax],al
   1400483d0:	cwde   
   1400483d1:	ja     0x1400483d6
   1400483d3:	add    bh,bh
   1400483d5:	(bad)  
   1400483d6:	(bad)  
   1400483d7:	jmp    FWORD PTR [rax+0x2000377]
   1400483dd:	add    BYTE PTR [rax],al
   1400483df:	add    BYTE PTR [rax+0x2000377],bh
   1400483e5:	add    BYTE PTR [rax],al
   1400483e7:	add    al,cl
   1400483e9:	ja     0x1400483ee
   1400483eb:	add    BYTE PTR [rax+rbx*2-0xffff],dh
   1400483f2:	(bad)  
   1400483f3:	dec    edx
   1400483f5:	pop    rax
   1400483f6:	add    DWORD PTR [rax],eax
   1400483f8:	add    BYTE PTR [rax],al
   1400483fa:	add    BYTE PTR [rax],al
   1400483fc:	in     eax,0x58
   1400483fe:	add    DWORD PTR [rax],eax
   140048400:	(bad)  
   140048401:	(bad)  
   140048402:	(bad)  
   140048403:	(bad)  
   140048404:	(bad)  
   140048405:	pop    rax
   140048406:	add    DWORD PTR [rax],eax
   140048408:	add    al,BYTE PTR [rax]
   14004840a:	add    BYTE PTR [rax],al
   14004840c:	std    
   14004840d:	pop    rax
   14004840e:	add    DWORD PTR [rax],eax
   140048410:	(bad)  
   140048411:	(bad)  
   140048412:	(bad)  
   140048413:	call   QWORD PTR [rcx]
   140048415:	sbb    BYTE PTR [rax+rax*1],al
   140048418:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004841b:	add    BYTE PTR [rdx],cl
   14004841d:	push   rdx
   14004841e:	(bad)  
   14004841f:	jo     0x140048439
   140048421:	mov    al,0x2
   140048423:	add    BYTE PTR [rax+0xa],dl
   140048426:	add    al,0x0
   140048428:	(bad)  
   140048429:	(bad)  
   14004842a:	(bad)  
   14004842b:	(bad)  
   14004842c:	fdiv   DWORD PTR [rdi+0x3]
   14004842f:	add    BYTE PTR [rax],al
   140048431:	add    BYTE PTR [rax],al
   140048433:	add    al,ch
   140048435:	ja     0x14004843a
   140048437:	add    BYTE PTR [rcx],al
   140048439:	add    BYTE PTR [rax],al
   14004843b:	add    al,bh
   14004843d:	ja     0x140048442
   14004843f:	add    BYTE PTR [rax],al
   140048441:	add    BYTE PTR [rax],al
   140048443:	add    BYTE PTR [rbx],cl
   140048445:	js     0x14004844a
   140048447:	add    BYTE PTR [rbx],al
   140048449:	add    BYTE PTR [rax],al
   14004844b:	add    BYTE PTR [rdi],dl
   14004844d:	js     0x140048452
   14004844f:	add    BYTE PTR [rax],al
   140048451:	add    BYTE PTR [rax],al
   140048453:	add    BYTE PTR [rdi],ah
   140048455:	js     0x14004845a
   140048457:	add    BYTE PTR [rip+0x37000000],al        # 0x17704845d
   14004845d:	js     0x140048462
   14004845f:	add    BYTE PTR [rip+0x47000000],al        # 0x187048465
   140048465:	js     0x14004846a
   140048467:	add    bh,bh
   140048469:	(bad)  
   14004846a:	(bad)  
   14004846b:	call   QWORD PTR [rdi+0x78]
   14004846e:	add    eax,DWORD PTR [rax]
   140048470:	or     BYTE PTR [rax],al
   140048472:	add    BYTE PTR [rax],al
   140048474:	movsxd edi,DWORD PTR [rax+0x3]
   140048477:	add    bh,bh
   140048479:	(bad)  
   14004847a:	(bad)  
   14004847b:	push   QWORD PTR [rbx+0x78]
   14004847e:	add    eax,DWORD PTR [rax]
   140048480:	or     al,BYTE PTR [rax]
   140048482:	add    BYTE PTR [rax],al
   140048484:	cmp    DWORD PTR [rax+0x3],0x0
   140048488:	or     al,BYTE PTR [rax]
   14004848a:	add    BYTE PTR [rax],al
   14004848c:	xchg   ebx,eax
   14004848d:	js     0x140048492
   14004848f:	add    ah,dl
   140048491:	push   rdi
   140048492:	add    DWORD PTR [rax],eax
   140048494:	(bad)  
   140048495:	(bad)  
   140048496:	(bad)  
   140048497:	(bad)  
   140048498:	stc    
   140048499:	push   rdi
   14004849a:	add    DWORD PTR [rax],eax
   14004849c:	add    DWORD PTR [rax],eax
   14004849e:	add    BYTE PTR [rax],al
   1400484a0:	sbb    eax,0x158
   1400484a5:	add    BYTE PTR [rax],al
   1400484a7:	add    BYTE PTR [rsi],ah
   1400484a9:	pop    rax
   1400484aa:	add    DWORD PTR [rax],eax
   1400484ac:	add    eax,DWORD PTR [rax]
   1400484ae:	add    BYTE PTR [rax],al
   1400484b0:	pop    r8
   1400484b2:	add    DWORD PTR [rax],eax
   1400484b4:	add    BYTE PTR [rax],al
   1400484b6:	add    BYTE PTR [rax],al
   1400484b8:	rex.RX pop rax
   1400484ba:	add    DWORD PTR [rax],eax
   1400484bc:	add    eax,0x59000000
   1400484c1:	pop    rax
   1400484c2:	add    DWORD PTR [rax],eax
   1400484c4:	add    BYTE PTR [rax],al
   1400484c6:	add    BYTE PTR [rax],al
   1400484c8:	movsxd ebx,DWORD PTR [rax+0x1]
   1400484cb:	add    bh,bh
   1400484cd:	(bad)  
   1400484ce:	(bad)  
   1400484cf:	jmp    FWORD PTR [rax+rbx*2+0x1]
   1400484d3:	add    BYTE PTR [rax],cl
   1400484d5:	add    BYTE PTR [rax],al
   1400484d7:	add    BYTE PTR [rdi-0xfffea8],al
   1400484dd:	(bad)  
   1400484de:	(bad)  
   1400484df:	dec    DWORD PTR [rax+rbx*2+0xa0001]
   1400484e6:	add    BYTE PTR [rax],al
   1400484e8:	lahf   
   1400484e9:	pop    rax
   1400484ea:	add    DWORD PTR [rax],eax
   1400484ec:	(bad)  
   1400484ed:	(bad)  
   1400484ee:	(bad)  
   1400484ef:	call   FWORD PTR [rcx]
   1400484f1:	(bad)  
   1400484f2:	add    DWORD PTR [rax],eax
   1400484f4:	(bad)  
   1400484f5:	(bad)  
   1400484f6:	add    BYTE PTR [rax],al
   1400484f8:	sbb    BYTE PTR [rax+0xa800002],dh
   1400484fe:	add    al,0x0
   140048500:	(bad)  
   140048501:	(bad)  
   140048502:	(bad)  
   140048503:	inc    DWORD PTR [rax]
   140048505:	add    BYTE PTR [rax],al
   140048507:	add    BYTE PTR [rax],al
   140048509:	add    BYTE PTR [rax],al
   14004850b:	add    BYTE PTR [rbx-0xfffc88],bh
   140048511:	(bad)  
   140048512:	(bad)  
   140048513:	inc    DWORD PTR [rax]
   140048515:	add    BYTE PTR [rax],al
   140048517:	add    BYTE PTR [rax],al
   140048519:	add    BYTE PTR [rax],al
   14004851b:	add    BYTE PTR [rcx],al
   14004851d:	add    BYTE PTR [rax],al
   14004851f:	add    BYTE PTR [rdx],al
   140048521:	add    BYTE PTR [rax],al
   140048523:	add    BYTE PTR [rcx],al
   140048525:	add    BYTE PTR [rax],al
   140048527:	add    BYTE PTR [rax*4+0x4],ch
	...
   140048536:	add    BYTE PTR [rax],al
   140048538:	xlat   BYTE PTR ds:[rbx]
   140048539:	js     0x14004853e
   14004853b:	add    BYTE PTR [rax],bh
   14004853d:	add    BYTE PTR [rax],al
   14004853f:	add    BYTE PTR [rax-0xfffe9f],al
   140048545:	(bad)  
   140048546:	(bad)  
   140048547:	call   QWORD PTR [rdi+0x161]
   14004854d:	add    BYTE PTR [rax],al
   14004854f:	add    BYTE PTR [rcx+0x1000161],ah
   140048555:	add    BYTE PTR [rax],al
   140048557:	add    bl,ah
   140048559:	(bad)  
   14004855a:	add    DWORD PTR [rax],eax
   14004855c:	add    BYTE PTR [rax],al
   14004855e:	add    BYTE PTR [rax],al
   140048560:	mul    DWORD PTR [rcx+0x1]
   140048563:	add    bh,bh
   140048565:	(bad)  
   140048566:	(bad)  
   140048567:	call   rdi
   140048569:	js     0x14004856e
   14004856b:	add    BYTE PTR [rax],al
   14004856d:	add    BYTE PTR [rax],al
   14004856f:	add    ah,ah
   140048571:	js     0x140048576
   140048573:	add    BYTE PTR [rdx],al
   140048575:	add    BYTE PTR [rax],al
   140048577:	add    BYTE PTR [rcx],bl
   140048579:	or     al,BYTE PTR [rdx]
   14004857b:	add    BYTE PTR [rdx],cl
   14004857d:	xor    al,BYTE PTR [rsi]
   14004857f:	push   rax
   140048580:	sbb    BYTE PTR [rax+0xa800002],dh
   140048586:	add    al,0x0
   140048588:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b4218596
   14004858e:	or     eax,0xc641900
   140048593:	add    BYTE PTR [rip+0x9000a34],dl        # 0x149048fcd
   140048599:	jb     0x1400485a0
   14004859b:	loopne 0x1400485b5
   14004859d:	mov    al,0x2
   14004859f:	add    BYTE PTR [rax+0x40a],dh
   1400485a5:	add    BYTE PTR [rax],al
   1400485a7:	add    BYTE PTR [rax],al
   1400485a9:	add    BYTE PTR [rax],al
   1400485ab:	add    BYTE PTR [rcx],al
   1400485ad:	add    BYTE PTR [rax],al
   1400485af:	add    BYTE PTR [rcx],al
   1400485b1:	add    BYTE PTR [rax],al
   1400485b3:	add    BYTE PTR [rax+0x485],bh
	...
   1400485c1:	add    BYTE PTR [rax],al
   1400485c3:	add    dl,bh
   1400485c5:	js     0x1400485ca
   1400485c7:	add    BYTE PTR [rax+0x0],cl
   1400485ca:	add    BYTE PTR [rax],al
   1400485cc:	mov    al,0x60
   1400485ce:	add    DWORD PTR [rax],eax
   1400485d0:	(bad)  
   1400485d1:	(bad)  
   1400485d2:	(bad)  
   1400485d3:	dec    DWORD PTR [rip+0x161]        # 0x14004873a
   1400485d9:	add    BYTE PTR [rax],al
   1400485db:	add    BYTE PTR [rip+0xffffffffff000161],bl        # 0x13f048742
   1400485e1:	(bad)  
   1400485e2:	(bad)  
   1400485e3:	(bad)  
   1400485e4:	cli    
   1400485e5:	js     0x1400485ea
   1400485e7:	add    BYTE PTR [rax],al
   1400485e9:	add    BYTE PTR [rax],al
   1400485eb:	add    BYTE PTR [rdi],al
   1400485ed:	jns    0x1400485f2
   1400485ef:	add    BYTE PTR [rcx],al
   1400485f1:	add    BYTE PTR [rax],al
   1400485f3:	add    BYTE PTR [rcx],bl
   1400485f5:	or     al,BYTE PTR [rdx]
   1400485f7:	add    BYTE PTR [rdx],cl
   1400485f9:	push   rdx
   1400485fa:	(bad)  
   1400485fb:	push   rax
   1400485fc:	sbb    BYTE PTR [rax+0xab00002],dh
   140048602:	add    al,0x0
   140048604:	add    DWORD PTR [rcx+rax*1],eax
   140048607:	add    BYTE PTR [rdx+rax*2],al
   14004860a:	add    BYTE PTR [rax],al
   14004860c:	adc    DWORD PTR [rcx],ebx
   14004860e:	(bad)  
   14004860f:	add    BYTE PTR [rcx],bl
   140048611:	or     eax,DWORD PTR fs:[rax]
   140048614:	adc    al,0x34
   140048616:	or     al,BYTE PTR [rax]
   140048618:	(bad)  
   140048619:	push   rdx
   14004861a:	add    dh,BYTE PTR [rax+0x18]
   14004861d:	mov    al,0x2
   14004861f:	add    al,ah
   140048621:	or     al,BYTE PTR [rax+rax*1]
   140048624:	int3   
   140048625:	pop    rsi
   140048626:	add    DWORD PTR [rax],eax
   140048628:	(bad)  
   140048629:	(bad)  
   14004862a:	(bad)  
   14004862b:	inc    DWORD PTR [rsi+0x5f]
   14004862e:	add    DWORD PTR [rax],eax
   140048630:	add    BYTE PTR [rax],al
   140048632:	add    BYTE PTR [rax],al
   140048634:	xchg   DWORD PTR [rdi+0x1],ebx
   140048637:	add    bh,bh
   140048639:	(bad)  
   14004863a:	(bad)  
   14004863b:	inc    DWORD PTR [rcx]
   14004863d:	adc    al,0x8
   14004863f:	add    BYTE PTR [rsp+riz*2],dl
   140048642:	or     eax,DWORD PTR [rax]
   140048644:	adc    al,0x54
   140048646:	or     al,BYTE PTR [rax]
   140048648:	adc    al,0x34
   14004864a:	or     DWORD PTR [rax],eax
   14004864c:	adc    al,0x52
   14004864e:	adc    BYTE PTR [rax+0x11],dh
   140048651:	adc    eax,DWORD PTR [rdx]
   140048653:	add    BYTE PTR [rdx],cl
   140048655:	push   rdx
   140048656:	(bad)  
   140048657:	xor    BYTE PTR [rax],bl
   140048659:	mov    al,0x2
   14004865b:	add    BYTE PTR [rax],dl
   14004865d:	or     eax,DWORD PTR [rax+rax*1]
   140048660:	(bad)  
   140048661:	(bad)  
   140048662:	(bad)  
   140048663:	(bad)  
   140048664:	out    dx,al
   140048665:	js     0x14004866a
   140048667:	add    BYTE PTR [rsi+rbx*2-0xffff],dl
   14004866e:	(bad)  
   14004866f:	call   FWORD PTR [rcx]
   140048671:	sub    ecx,DWORD PTR [rbx]
   140048673:	add    BYTE PTR [rcx],bl
   140048675:	push   rsp
   140048676:	outs   dx,BYTE PTR ds:[rsi]
   140048677:	add    BYTE PTR [rcx],bl
   140048679:	xor    al,0x6d
   14004867b:	add    BYTE PTR [rcx],bl
   14004867d:	add    DWORD PTR [rsi+0x0],esp
   140048680:	adc    dh,al
   140048682:	adc    al,ah
   140048684:	(bad)  
   140048685:	ror    BYTE PTR [rax+rsi*2],1
   140048688:	or     esp,DWORD PTR [rax+0x0]
   14004868b:	add    ah,dl
   14004868d:	jge    0x140048691
   14004868f:	add    BYTE PTR [rax],ah
   140048691:	add    eax,DWORD PTR [rax]
   140048693:	add    BYTE PTR [rcx],bl
   140048695:	sub    cl,BYTE PTR [rdx]
   140048697:	add    BYTE PTR [rsp+riz*2],bl
   14004869a:	sbb    DWORD PTR [rax],eax
   14004869c:	sbb    al,0x34
   14004869e:	sbb    BYTE PTR [rax],al
   1400486a0:	sbb    al,0xf2
   1400486a2:	adc    dh,al
   1400486a4:	adc    al,ah
   1400486a6:	(bad)  
   1400486a7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400486ab:	push   rax
   1400486ac:	(bad)  
   1400486ad:	jge    0x1400486b1
   1400486af:	add    BYTE PTR [rax+0x0],bh
   1400486b2:	add    BYTE PTR [rax],al
   1400486b4:	add    DWORD PTR [rip+0x74150009],edx        # 0x1b41986c3
   1400486ba:	add    eax,0x4641500
   1400486bf:	add    BYTE PTR [rip+0x15000354],dl        # 0x155048a19
   1400486c5:	xor    al,0x2
   1400486c7:	add    BYTE PTR [rip+0x110000e0],dl        # 0x1510487ad
   1400486cd:	adc    eax,DWORD PTR [rdx]
   1400486cf:	add    BYTE PTR [rdx],cl
   1400486d1:	push   rdx
   1400486d2:	(bad)  
   1400486d3:	xor    BYTE PTR [rax],bl
   1400486d5:	mov    al,0x2
   1400486d7:	add    BYTE PTR [rax+0xb],al
   1400486da:	add    al,0x0
   1400486dc:	clc    
   1400486dd:	(bad)  
   1400486df:	add    bh,bh
   1400486e1:	(bad)  
   1400486e2:	(bad)  
   1400486e3:	call   FWORD PTR [rax]
   1400486e5:	movsxd eax,DWORD PTR [rcx]
   1400486e7:	add    BYTE PTR [rax],al
   1400486e9:	add    BYTE PTR [rax],al
   1400486eb:	add    BYTE PTR [rdi],dh
   1400486ed:	movsxd eax,DWORD PTR [rcx]
   1400486ef:	add    bh,bh
   1400486f1:	(bad)  
   1400486f2:	(bad)  
   1400486f3:	call   FWORD PTR [rcx]
   1400486f5:	and    al,0x7
   1400486f7:	add    BYTE PTR [rdx],dl
   1400486f9:	fs (bad) 
   1400486fb:	add    BYTE PTR [rdx],dl
   1400486fd:	xor    al,0x16
   1400486ff:	add    BYTE PTR [rdx],dl
   140048701:	add    DWORD PTR [rdx],edx
   140048703:	add    BYTE PTR [rbx],cl
   140048705:	jo     0x140048707
   140048707:	add    ah,dl
   140048709:	jge    0x14004870d
   14004870b:	add    BYTE PTR [rax+0x1000000],al
   140048711:	clts   
   140048713:	add    BYTE PTR [rdi],cl
   140048715:	or     eax,DWORD PTR fs:[rax]
   140048718:	sysenter 
   14004871a:	or     al,BYTE PTR [rax]
   14004871c:	(bad)  
   14004871e:	or     esi,DWORD PTR [rax+0x1]
   140048721:	sbb    eax,0x741d000c
   140048726:	or     eax,DWORD PTR [rax]
   140048728:	sbb    eax,0x1d000a64
   14004872d:	push   rsp
   14004872e:	or     DWORD PTR [rax],eax
   140048730:	sbb    eax,0x1d000834
   140048735:	xor    bl,BYTE PTR [rcx]
   140048737:	lock (bad) 
   140048739:	loopne 0x140048750
   14004873b:	rcl    BYTE PTR [rcx],0x20
   14004873e:	or     BYTE PTR [rax],al
   140048740:	and    BYTE PTR [rbx+rcx*1+0x0],ah
   140048744:	sbb    al,0x54
   140048746:	or     al,BYTE PTR [rax]
   140048748:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004874b:	add    BYTE PTR [rdx+rdx*2],cl
   14004874e:	or     BYTE PTR [rax+0x18],dh
   140048751:	mov    al,0x2
   140048753:	add    BYTE PTR [rax+0xb],dh
   140048756:	add    al,0x0
   140048758:	loopne 0x1400487c9
   14004875a:	add    DWORD PTR [rax],eax
   14004875c:	(bad)  
   14004875d:	(bad)  
   14004875e:	(bad)  
   14004875f:	call   FWORD PTR [rsi]
   140048761:	jo     0x140048764
   140048763:	add    BYTE PTR [rax],al
   140048765:	add    BYTE PTR [rax],al
   140048767:	add    BYTE PTR [rax+rsi*2+0x1],dh
   14004876b:	add    bh,bh
   14004876d:	(bad)  
   14004876e:	(bad)  
   14004876f:	inc    DWORD PTR [rcx]
   140048771:	sbb    BYTE PTR [rax],cl
   140048773:	add    BYTE PTR [rax],bl
   140048775:	or     al,BYTE PTR fs:[rax]
   140048778:	sbb    BYTE PTR [rax+rcx*1],dh
   14004877b:	add    BYTE PTR [rax],bl
   14004877d:	xor    dl,BYTE PTR [rax+rsi*8]
   140048780:	adc    ah,al
   140048782:	adc    BYTE PTR [rax+0x1],dh
   140048785:	(bad)  
   140048786:	or     al,BYTE PTR [rax]
   140048788:	(bad)  
   140048789:	push   rsp
   14004878a:	or     al,0x0
   14004878c:	(bad)  
   14004878d:	xor    al,0xa
   14004878f:	add    BYTE PTR [rsi],dl
   140048791:	xor    dl,BYTE PTR [rdx]
   140048793:	lock adc al,ah
   140048796:	(bad)  
   140048797:	ror    BYTE PTR [rax+rsi*2],1
   14004879a:	or     esp,DWORD PTR [rax+0x11]
   14004879d:	sbb    cl,BYTE PTR [rax]
   14004879f:	add    BYTE PTR [rdx],dl
   1400487a1:	jb     0x1400487ae
   1400487a3:	lock or eax,esp
   1400487a6:	(bad)  
   1400487a7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143648c1e
   1400487ae:	add    dl,BYTE PTR [rax+0x18]
   1400487b1:	mov    al,0x2
   1400487b3:	add    BYTE PTR [rax-0xfffbf5],ah
   1400487b9:	(bad)  
   1400487ba:	(bad)  
   1400487bb:	inc    DWORD PTR [rdx+0x79]
   1400487be:	add    eax,DWORD PTR [rax]
   1400487c0:	add    BYTE PTR [rax],al
   1400487c2:	add    BYTE PTR [rax],al
   1400487c4:	rex.WRX jns 0x1400487ca
   1400487c7:	add    BYTE PTR [rcx],al
   1400487c9:	add    BYTE PTR [rax],al
   1400487cb:	add    BYTE PTR [rdx+0x79],bl
   1400487ce:	add    eax,DWORD PTR [rax]
   1400487d0:	add    DWORD PTR [rax],eax
   1400487d2:	add    BYTE PTR [rax],al
   1400487d4:	data16 jns 0x1400487da
   1400487d7:	add    BYTE PTR [rax],al
   1400487d9:	add    BYTE PTR [rax],al
   1400487db:	add    BYTE PTR [rdx+0x79],dh
   1400487de:	add    eax,DWORD PTR [rax]
   1400487e0:	(bad)  
   1400487e1:	(bad)  
   1400487e2:	(bad)  
   1400487e3:	(bad)  
   1400487e4:	jle    0x14004885f
   1400487e6:	add    eax,DWORD PTR [rax]
   1400487e8:	mov    al,0x6a
   1400487ea:	add    DWORD PTR [rax],eax
   1400487ec:	(bad)  
   1400487ed:	(bad)  
   1400487ee:	(bad)  
   1400487ef:	jmp    rsi
   1400487f1:	push   0x1
   1400487f3:	add    BYTE PTR [rax],al
   1400487f5:	add    BYTE PTR [rax],al
   1400487f7:	add    bl,bh
   1400487f9:	push   0x1
   1400487fb:	add    BYTE PTR [rcx],al
   1400487fd:	add    BYTE PTR [rax],al
   1400487ff:	add    BYTE PTR [rax],cl
   140048801:	imul   eax,DWORD PTR [rcx],0x0
   140048804:	add    al,BYTE PTR [rax]
   140048806:	add    BYTE PTR [rax],al
   140048808:	jrcxz  0x140048875
   14004880a:	add    DWORD PTR [rax],eax
   14004880c:	add    DWORD PTR [rax],eax
   14004880e:	add    BYTE PTR [rax],al
   140048810:	add    eax,0x16c
   140048815:	add    BYTE PTR [rax],al
   140048817:	add    BYTE PTR [rsp+rbp*2],ah
   14004881a:	add    DWORD PTR [rax],eax
   14004881c:	(bad)  
   14004881d:	(bad)  
   14004881e:	(bad)  
   14004881f:	call   QWORD PTR [rcx]
   140048821:	and    DWORD PTR [rdx],ecx
   140048823:	add    BYTE PTR [rcx],ah
   140048825:	xor    al,0x16
   140048827:	add    BYTE PTR [rip+0xcf00ed2],dl        # 0x14cf496ff
   14004882d:	loopne 0x140048839
   14004882f:	ror    BYTE PTR [rax],1
   140048831:	rol    BYTE PTR [rsi],0x70
   140048834:	add    eax,0x18500460
   140048839:	mov    al,0x2
   14004883b:	add    al,dl
   14004883d:	or     eax,DWORD PTR [rax+rax*1]
   140048840:	(bad)  
   140048841:	(bad)  
   140048842:	(bad)  
   140048843:	dec    DWORD PTR [rdx+0x379]
   140048849:	add    BYTE PTR [rax],al
   14004884b:	add    BYTE PTR [rsi+0x1000379],dl
   140048851:	add    BYTE PTR [rax],al
   140048853:	add    BYTE PTR [rdx+0x1000379],ah
   140048859:	add    BYTE PTR [rax],al
   14004885b:	add    BYTE PTR [rsi+0x1000379],ch
   140048861:	add    BYTE PTR [rax],al
   140048863:	add    BYTE PTR [rax],al
   140048865:	add    BYTE PTR [rax],al
   140048867:	add    BYTE PTR [rcx],al
   140048869:	add    BYTE PTR [rax],al
   14004886b:	add    BYTE PTR [rdx+0x1000379],bh
   140048871:	add    BYTE PTR [rax],al
   140048873:	add    dh,al
   140048875:	jns    0x14004887a
   140048877:	add    BYTE PTR [rax+0x66],bl
   14004887a:	add    DWORD PTR [rax],eax
   14004887c:	(bad)  
   14004887d:	(bad)  
   14004887e:	(bad)  
   14004887f:	(bad)  
   140048880:	call   0x1400489eb
   140048885:	add    BYTE PTR [rax],al
   140048887:	add    BYTE PTR [rax+0x1000167],al
   14004888d:	add    BYTE PTR [rax],al
   14004888f:	add    BYTE PTR [rsi+0x2000168],dl
   140048895:	add    BYTE PTR [rax],al
   140048897:	add    bl,al
   140048899:	push   0x10001
   14004889e:	add    BYTE PTR [rax],al
   1400488a0:	or     al,0x69
   1400488a2:	add    DWORD PTR [rax],eax
   1400488a4:	add    eax,DWORD PTR [rax]
   1400488a6:	add    BYTE PTR [rax],al
   1400488a8:	out    0x69,al
   1400488aa:	add    DWORD PTR [rax],eax
   1400488ac:	add    DWORD PTR [rax],eax
   1400488ae:	add    BYTE PTR [rax],al
   1400488b0:	or     al,0x6a
   1400488b2:	add    DWORD PTR [rax],eax
   1400488b4:	add    eax,DWORD PTR [rax]
   1400488b6:	add    BYTE PTR [rax],al
   1400488b8:	and    ch,BYTE PTR [rdx+0x1]
   1400488bb:	add    BYTE PTR [rcx],al
   1400488bd:	add    BYTE PTR [rax],al
   1400488bf:	add    BYTE PTR [rdi+0x6a],dh
   1400488c2:	add    DWORD PTR [rax],eax
   1400488c4:	add    BYTE PTR [rax],al
   1400488c6:	add    BYTE PTR [rax],al
   1400488c8:	sub    DWORD PTR [rdx+0x1],0xffffff00
   1400488cf:	inc    DWORD PTR [rcx]
   1400488d1:	sbb    BYTE PTR [rax],cl
   1400488d3:	add    BYTE PTR [rax],bl
   1400488d5:	or     eax,DWORD PTR fs:[rax]
   1400488d8:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   1400488dc:	sbb    BYTE PTR [rax+rcx*1],dh
   1400488df:	add    BYTE PTR [rax],bl
   1400488e1:	push   rdx
   1400488e2:	adc    al,0x70
   1400488e4:	add    DWORD PTR [rax],ebx
   1400488e6:	or     al,BYTE PTR [rax]
   1400488e8:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400488ec:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400488f0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400488f3:	add    BYTE PTR [rax],bl
   1400488f5:	xor    dl,BYTE PTR [rax+rsi*8]
   1400488f8:	adc    ah,al
   1400488fa:	adc    BYTE PTR [rax+0x11],dh
   1400488fd:	adc    al,BYTE PTR [rcx]
   1400488ff:	add    BYTE PTR [rcx],cl
   140048901:	(bad)  
   140048902:	add    BYTE PTR [rax],al
   140048904:	sbb    BYTE PTR [rax+0xc000002],dh
   14004890a:	add    al,0x0
   14004890c:	(bad)  
   14004890d:	(bad)  
   14004890e:	(bad)  
   14004890f:	jmp    QWORD PTR [rsi]
   140048911:	jns    0x140048916
   140048913:	add    bh,bh
   140048915:	(bad)  
   140048916:	(bad)  
   140048917:	push   QWORD PTR [rsi]
   140048919:	jns    0x14004891e
   14004891b:	add    BYTE PTR [rbp+riz*2+0x1],cl
   14004891f:	add    bh,bh
   140048921:	(bad)  
   140048922:	(bad)  
   140048923:	call   FWORD PTR [rcx]
   140048925:	(bad)  
   140048926:	or     DWORD PTR [rax],eax
   140048928:	adc    eax,0x15006154
   14004892d:	xor    al,0x60
   14004892f:	add    BYTE PTR [rip+0xe005a01],dl        # 0x14e04e336
   140048935:	loopne 0x140048943
   140048937:	jo     0x140048944
   140048939:	(bad)  
   14004893a:	add    BYTE PTR [rax],al
   14004893c:	(bad)  
   14004893d:	jge    0x140048941
   14004893f:	add    al,al
   140048941:	add    al,BYTE PTR [rax]
   140048943:	add    BYTE PTR [rcx],al
   140048945:	or     BYTE PTR [rdx],al
   140048947:	add    BYTE PTR [rax],cl
   140048949:	mov    dl,0x4
   14004894b:	xor    BYTE PTR [rcx],bl
   14004894d:	and    ecx,DWORD PTR [rax]
   14004894f:	add    BYTE PTR [rsp+riz*2],dl
   140048952:	lldt   WORD PTR [rsp+rdx*2]
   140048956:	(bad)  
   140048957:	add    BYTE PTR [rsp+rsi*1],dl
   14004895a:	or     eax,0x10921400
   14004895f:	jo     0x140048935
   140048961:	jge    0x140048965
   140048963:	add    BYTE PTR [rax+0x0],al
   140048966:	add    BYTE PTR [rax],al
   140048968:	adc    DWORD PTR [rax],ebx
   14004896a:	add    al,0x0
   14004896c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004896f:	add    BYTE PTR [rdx],cl
   140048971:	push   rdx
   140048972:	(bad)  
   140048973:	jo     0x14004898d
   140048975:	mov    al,0x2
   140048977:	add    BYTE PTR [rax],dh
   140048979:	or     al,0x4
   14004897b:	add    bh,bh
   14004897d:	(bad)  
   14004897e:	(bad)  
   14004897f:	call   rdx
   140048981:	jns    0x140048986
   140048983:	add    BYTE PTR [rax],al
   140048985:	add    BYTE PTR [rax],al
   140048987:	add    dl,ah
   140048989:	jns    0x14004898e
   14004898b:	add    BYTE PTR [rsi+rsi*2-0xffff],bl
   140048992:	(bad)  
   140048993:	push   QWORD PTR [rdi+0x1000176]
   140048999:	add    BYTE PTR [rax],al
   14004899b:	add    ch,dl
   14004899d:	jbe    0x1400489a0
   14004899f:	add    BYTE PTR [rax],al
   1400489a1:	add    BYTE PTR [rax],al
   1400489a3:	add    bh,dh
   1400489a5:	jbe    0x1400489a8
   1400489a7:	add    bh,bh
   1400489a9:	(bad)  
   1400489aa:	(bad)  
   1400489ab:	call   QWORD PTR [rcx]
   1400489ad:	sbb    BYTE PTR [rax+rax*1],al
   1400489b0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400489b3:	add    BYTE PTR [rdx],cl
   1400489b5:	push   rdx
   1400489b6:	(bad)  
   1400489b7:	jo     0x1400489d1
   1400489b9:	mov    al,0x2
   1400489bb:	add    BYTE PTR [rax+0xc],ah
   1400489be:	add    al,0x0
   1400489c0:	and    al,0x77
   1400489c2:	add    DWORD PTR [rax],eax
   1400489c4:	(bad)  
   1400489c5:	(bad)  
   1400489c6:	(bad)  
   1400489c7:	dec    DWORD PTR [rbx+0x77]
   1400489ca:	add    DWORD PTR [rax],eax
   1400489cc:	add    BYTE PTR [rax],al
   1400489ce:	add    BYTE PTR [rax],al
   1400489d0:	pop    rsp
   1400489d1:	ja     0x1400489d4
   1400489d3:	add    bh,bh
   1400489d5:	(bad)  
   1400489d6:	(bad)  
   1400489d7:	call   QWORD PTR [rcx]
   1400489d9:	adc    eax,DWORD PTR [rdx]
   1400489db:	add    BYTE PTR [rdx],cl
   1400489dd:	push   rdx
   1400489de:	(bad)  
   1400489df:	xor    BYTE PTR [rax],bl
   1400489e1:	mov    al,0x2
   1400489e3:	add    BYTE PTR [rax-0x57fffbf4],dl
   1400489e9:	jns    0x1400489ec
   1400489eb:	add    bh,bh
   1400489ed:	(bad)  
   1400489ee:	(bad)  
   1400489ef:	dec    eax
   1400489f1:	jns    0x1400489f4
   1400489f3:	add    BYTE PTR [rax],al
   1400489f5:	add    BYTE PTR [rax],al
   1400489f7:	add    bh,dl
   1400489f9:	jns    0x1400489fc
   1400489fb:	add    bh,bh
   1400489fd:	(bad)  
   1400489fe:	(bad)  
   1400489ff:	call   QWORD PTR [rcx]
   140048a01:	(bad)  
   140048a02:	or     BYTE PTR [rax],al
   140048a04:	(bad)  
   140048a05:	push   rsp
   140048a06:	or     al,0x0
   140048a08:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140048a0b:	add    BYTE PTR [rdi],cl
   140048a0d:	push   rdx
   140048a0e:	or     esp,eax
   140048a10:	or     DWORD PTR [rax+0x8],esi
   140048a13:	(bad)  
   140048a14:	sbb    BYTE PTR [rax+0xcc00002],dh
   140048a1a:	add    al,0x0
   140048a1c:	(bad)  
   140048a1d:	(bad)  
   140048a1e:	(bad)  
   140048a1f:	dec    DWORD PTR [rax+0x7a]
   140048a22:	add    eax,DWORD PTR [rax]
   140048a24:	add    BYTE PTR [rax],al
   140048a26:	add    BYTE PTR [rax],al
   140048a28:	outs   dx,BYTE PTR ds:[rsi]
   140048a29:	jp     0x140048a2e
   140048a2b:	add    BYTE PTR [rax],al
   140048a2d:	add    DWORD PTR [rcx],0xffffff00
   140048a33:	push   QWORD PTR [rcx-0x7f]
   140048a36:	add    DWORD PTR [rax],eax
   140048a38:	add    BYTE PTR [rax],al
   140048a3a:	add    BYTE PTR [rax],al
   140048a3c:	jle    0x1400489bf
   140048a3e:	add    DWORD PTR [rax],eax
   140048a40:	(bad)  
   140048a41:	(bad)  
   140048a42:	(bad)  
   140048a43:	inc    ecx
   140048a45:	add    DWORD PTR [rcx],0x0
   140048a4b:	add    bl,al
   140048a4d:	add    DWORD PTR [rcx],0xffffff00
   140048a53:	dec    esi
   140048a55:	add    DWORD PTR [rcx],0x0
   140048a5b:	add    BYTE PTR [rcx],dl
   140048a5d:	adc    eax,DWORD PTR [rdx]
   140048a5f:	add    BYTE PTR [rdx],cl
   140048a61:	push   rdx
   140048a62:	(bad)  
   140048a63:	xor    BYTE PTR [rax],bl
   140048a65:	mov    al,0x2
   140048a67:	add    al,dh
   140048a69:	or     al,0x4
   140048a6b:	add    bh,bh
   140048a6d:	(bad)  
   140048a6e:	(bad)  
   140048a6f:	jmp    QWORD PTR [rdx]
   140048a71:	jp     0x140048a76
   140048a73:	add    al,al
   140048a75:	add    BYTE PTR [rcx],0x0
   140048a78:	(bad)  
   140048a79:	(bad)  
   140048a7a:	(bad)  
   140048a7b:	(bad)  
   140048a7c:	jmp    0x1400489fe
   140048a7e:	add    DWORD PTR [rax],eax
   140048a80:	add    BYTE PTR [rax],al
   140048a82:	add    BYTE PTR [rax],al
   140048a84:	adc    DWORD PTR [rdi],ebp
   140048a86:	or     eax,0x2c742f00
   140048a8b:	add    BYTE PTR [rbx],ch
   140048a8d:	sub    eax,DWORD PTR fs:[rax]
   140048a90:	(bad)  
   140048a91:	xor    al,0x2a
   140048a93:	add    BYTE PTR [rbx],bl
   140048a95:	add    DWORD PTR [rax+rax*1],esp
   140048a98:	adc    al,dh
   140048a9a:	(bad)  
   140048a9b:	loopne 0x140048aa9
   140048a9d:	ror    BYTE PTR [rdx],1
   140048a9f:	ror    BYTE PTR [rax],0x50
   140048aa2:	add    BYTE PTR [rax],al
   140048aa4:	sbb    BYTE PTR [rax+0xd200002],dh
   140048aaa:	add    al,0x0
   140048aac:	(bad)  
   140048aad:	(bad)  
   140048aae:	(bad)  
   140048aaf:	(bad)  
   140048ab0:	jp     0x140048b2c
   140048ab2:	add    eax,DWORD PTR [rax]
   140048ab4:	add    BYTE PTR [rax],al
   140048ab6:	add    BYTE PTR [rax],al
   140048ab8:	mov    bh,BYTE PTR [rdx+0x3]
   140048abb:	add    bh,bh
   140048abd:	(bad)  
   140048abe:	(bad)  
   140048abf:	call   FWORD PTR [rdx+0x200037a]
   140048ac5:	add    BYTE PTR [rax],al
   140048ac7:	add    BYTE PTR [rdx-0xfffc86],ch
   140048acd:	(bad)  
   140048ace:	(bad)  
   140048acf:	(bad)  
   140048ad0:	mov    edx,0x400037a
   140048ad5:	add    BYTE PTR [rax],al
   140048ad7:	add    dh,al
   140048ad9:	jp     0x140048ade
   140048adb:	add    BYTE PTR [rax+rax*1],al
   140048ade:	add    BYTE PTR [rax],al
   140048ae0:	sar    BYTE PTR [rdx+0x3],cl
   140048ae3:	add    BYTE PTR [rax+rax*1],al
   140048ae6:	add    BYTE PTR [rax],al
   140048ae8:	fidivr WORD PTR [rdx+0x3]
   140048aeb:	add    BYTE PTR [rax+rax*1],al
   140048aee:	add    BYTE PTR [rax],al
   140048af0:	(bad)  
   140048af1:	jp     0x140048af6
   140048af3:	add    BYTE PTR [rax+rax*1],al
   140048af6:	add    BYTE PTR [rax],al
   140048af8:	idiv   BYTE PTR [rdx+0x3]
   140048afb:	add    BYTE PTR [rax+rax*1],al
   140048afe:	add    BYTE PTR [rax],al
   140048b00:	add    bh,BYTE PTR [rbx+0x3]
   140048b03:	add    BYTE PTR [rax+rax*1],al
   140048b06:	add    BYTE PTR [rax],al
   140048b08:	(bad)  
   140048b09:	jnp    0x140048b0e
   140048b0b:	add    BYTE PTR [rax+rax*1],al
   140048b0e:	add    BYTE PTR [rax],al
   140048b10:	sbb    bh,BYTE PTR [rbx+0x3]
   140048b13:	add    BYTE PTR [rax-0xfffe85],bh
   140048b19:	(bad)  
   140048b1a:	(bad)  
   140048b1b:	call   QWORD PTR [rsi]
   140048b1d:	jl     0x140048b20
   140048b1f:	add    BYTE PTR [rax],al
   140048b21:	add    BYTE PTR [rax],al
   140048b23:	add    BYTE PTR [rdx],ah
   140048b25:	jl     0x140048b28
   140048b27:	add    bh,bh
   140048b29:	(bad)  
   140048b2a:	(bad)  
   140048b2b:	(bad)  
   140048b2c:	mov    edx,0x200017c
   140048b31:	add    BYTE PTR [rax],al
   140048b33:	add    dh,al
   140048b35:	jl     0x140048b38
   140048b37:	add    bh,bh
   140048b39:	(bad)  
   140048b3a:	(bad)  
   140048b3b:	jmp    rsp
   140048b3d:	jl     0x140048b40
   140048b3f:	add    BYTE PTR [rax+rax*1],al
   140048b42:	add    BYTE PTR [rax],al
   140048b44:	rex.B jge 0x140048b48
   140048b47:	add    BYTE PTR [rdi],al
   140048b49:	add    BYTE PTR [rax],al
   140048b4b:	add    BYTE PTR [rdi+0x7d],cl
   140048b4e:	add    DWORD PTR [rax],eax
   140048b50:	add    al,0x0
   140048b52:	add    BYTE PTR [rax],al
   140048b54:	test   BYTE PTR [rbp+0x1],bh
   140048b57:	add    BYTE PTR [rcx],cl
   140048b59:	add    BYTE PTR [rax],al
   140048b5b:	add    BYTE PTR [rdx+0x400017d],dl
   140048b61:	add    BYTE PTR [rax],al
   140048b63:	add    ch,al
   140048b65:	jge    0x140048b68
   140048b67:	add    BYTE PTR [rip+0xffffffffd3000000],al        # 0x113048b6d
   140048b6d:	jge    0x140048b70
   140048b6f:	add    BYTE PTR [rax+rax*1],al
   140048b72:	add    BYTE PTR [rax],al
   140048b74:	sar    DWORD PTR [rsi+0x1],1
   140048b77:	add    BYTE PTR [rbx],cl
   140048b79:	add    BYTE PTR [rax],al
   140048b7b:	add    BYTE PTR [rdi],al
   140048b7d:	add    BYTE PTR [rcx],0x0
   140048b80:	add    al,0x0
   140048b82:	add    BYTE PTR [rax],al
   140048b84:	sub    DWORD PTR [rax-0xffff],eax
   140048b8a:	(bad)  
   140048b8b:	call   FWORD PTR [rcx]
   140048b8d:	xor    DWORD PTR [rcx],ecx
   140048b8f:	add    BYTE PTR [rbx],ah
   140048b91:	sub    DWORD PTR fs:[rax],eax
   140048b94:	(bad)  
   140048b95:	xor    al,0x28
   140048b97:	add    BYTE PTR [rdx],dl
   140048b99:	add    DWORD PTR [rdx],esp
   140048b9b:	add    BYTE PTR [rdi],al
   140048b9d:	loopne 0x140048ba4
   140048b9f:	jo     0x140048ba5
   140048ba1:	push   rax
   140048ba2:	add    BYTE PTR [rax],al
   140048ba4:	jl     0x140048bc6
   140048ba6:	add    eax,DWORD PTR [rax]
   140048ba8:	push   rax
   140048ba9:	or     eax,0x10a0004
   140048bae:	add    BYTE PTR [rax],al
   140048bb0:	(bad)  
   140048bb1:	(bad)  
   140048bb2:	(bad)  
   140048bb3:	push   rdx
   140048bb5:	jns    0x140048bba
   140048bb7:	add    bh,bh
   140048bb9:	(bad)  
   140048bba:	(bad)  
   140048bbb:	(bad)  
   140048bbc:	(bad)  
   140048bbd:	jns    0x140048bc2
   140048bbf:	add    BYTE PTR [rdx+rdi*2],dh
   140048bc2:	add    DWORD PTR [rax],eax
   140048bc4:	(bad)  
   140048bc5:	(bad)  
   140048bc6:	(bad)  
   140048bc7:	(bad)  
   140048bc8:	jl     0x140048c44
   140048bca:	add    DWORD PTR [rax],eax
   140048bcc:	add    BYTE PTR [rax],al
   140048bce:	add    BYTE PTR [rax],al
   140048bd0:	in     al,dx
   140048bd1:	jp     0x140048bd4
   140048bd3:	add    bh,bh
   140048bd5:	(bad)  
   140048bd6:	(bad)  
   140048bd7:	dec    DWORD PTR [rsi]
   140048bd9:	jnp    0x140048bdc
   140048bdb:	add    BYTE PTR [rax],al
   140048bdd:	add    BYTE PTR [rax],al
   140048bdf:	add    BYTE PTR [rbx-0xfffe85],dl
   140048be5:	(bad)  
   140048be6:	(bad)  
   140048be7:	call   QWORD PTR [rcx]
   140048be9:	sbb    BYTE PTR [rsi],al
   140048beb:	add    BYTE PTR [rax],bl
   140048bed:	or     DWORD PTR fs:[rax],eax
   140048bf0:	adc    al,0x34
   140048bf2:	or     BYTE PTR [rax],al
   140048bf4:	or     BYTE PTR [rdx+0x4],dl
   140048bf7:	jo     0x140048c11
   140048bf9:	mov    al,0x2
   140048bfb:	add    BYTE PTR [rax-0xfffbf3],al
   140048c01:	(bad)  
   140048c02:	(bad)  
   140048c03:	dec    DWORD PTR [rdx]
   140048c05:	jp     0x140048c0a
   140048c07:	add    bh,bh
   140048c09:	(bad)  
   140048c0a:	(bad)  
   140048c0b:	call   QWORD PTR [rsi]
   140048c0d:	jp     0x140048c12
   140048c0f:	add    BYTE PTR [rax+rax*4+0x1],dl
   140048c13:	add    bh,bh
   140048c15:	(bad)  
   140048c16:	(bad)  
   140048c17:	inc    DWORD PTR [rdx+0x180]
   140048c1d:	add    BYTE PTR [rax],al
   140048c1f:	add    BYTE PTR [rax+rax*4-0xffff],dl
   140048c26:	(bad)  
   140048c27:	call   FWORD PTR [rcx]
   140048c29:	sub    al,BYTE PTR [rip+0x12010f00]        # 0x152059b2f
   140048c2f:	add    BYTE PTR [rax],cl
   140048c31:	jo     0x140048c3a
   140048c33:	(bad)  
   140048c34:	(bad)  
   140048c35:	xor    BYTE PTR [rax],al
   140048c37:	add    BYTE PTR [rax+riz*1+0x3],bh
   140048c3b:	add    BYTE PTR [rax-0x7cfffbf3],dh
	...
   140048c49:	add    BYTE PTR [rax],al
   140048c4b:	add    BYTE PTR [rcx],al
   140048c4d:	add    BYTE PTR [rax],al
   140048c4f:	add    BYTE PTR [rcx],al
   140048c51:	add    BYTE PTR [rax],al
   140048c53:	add    BYTE PTR [rax-0x74],bl
   140048c56:	add    al,0x0
	...
   140048c64:	es jnp 0x140048c6a
   140048c67:	add    BYTE PTR [rax],bh
   140048c69:	add    BYTE PTR [rax],al
   140048c6b:	add    ah,ah
   140048c6d:	add    DWORD PTR [rcx],0xffffff00
   140048c73:	push   QWORD PTR [rdx+rax*4]
   140048c76:	add    DWORD PTR [rax],eax
   140048c78:	add    BYTE PTR [rax],al
   140048c7a:	add    BYTE PTR [rax],al
   140048c7c:	mov    bh,0x82
   140048c7e:	add    DWORD PTR [rax],eax
   140048c80:	(bad)  
   140048c81:	(bad)  
   140048c82:	(bad)  
   140048c83:	jmp    QWORD PTR [rsi]
   140048c85:	jnp    0x140048c8a
   140048c87:	add    BYTE PTR [rax],al
   140048c89:	add    BYTE PTR [rax],al
   140048c8b:	add    BYTE PTR [rcx],bl
   140048c8d:	or     al,BYTE PTR [rdx]
   140048c8f:	add    BYTE PTR [rdx],cl
   140048c91:	xor    al,BYTE PTR [rsi]
   140048c93:	push   rax
   140048c94:	sbb    BYTE PTR [rax+0xdb00002],dh
   140048c9a:	add    al,0x0
   140048c9c:	sbb    DWORD PTR [rax],ebp
   140048c9e:	or     al,0x0
   140048ca0:	sub    ah,al
   140048ca2:	(bad)  
   140048ca3:	add    BYTE PTR [rsp+rsi*2],ah
   140048ca6:	(bad)  
   140048ca7:	add    BYTE PTR [rax],ah
   140048ca9:	fs adc eax,0x14341c00
   140048caf:	add    BYTE PTR [rax],dl
   140048cb1:	repnz or eax,esi
   140048cb4:	(bad)  
   140048cb5:	loopne 0x140048cbc
   140048cb7:	rcr    BYTE PTR [rax],1
   140048cb9:	mov    al,0x2
   140048cbb:	add    al,ah
   140048cbd:	or     eax,0xffff0004
   140048cc2:	(bad)  
   140048cc3:	inc    DWORD PTR [rax]
   140048cc5:	add    BYTE PTR [rax],al
   140048cc7:	add    bh,bh
   140048cc9:	(bad)  
   140048cca:	(bad)  
   140048ccb:	inc    DWORD PTR [rax]
	...
   140048cd5:	add    BYTE PTR [rax],al
   140048cd7:	add    BYTE PTR [rcx],al
   140048cd9:	add    BYTE PTR [rax],al
   140048cdb:	add    BYTE PTR [rcx],al
   140048cdd:	add    BYTE PTR [rax],al
   140048cdf:	add    ah,ah
   140048ce1:	mov    WORD PTR [rax+rax*1],es
   140048ce4:	or     DWORD PTR [rax],eax
   140048ce6:	add    BYTE PTR [rax],al
   140048ce8:	sub    ah,ch
   140048cea:	add    al,0x0
   140048cec:	sub    BYTE PTR [rax],al
   140048cee:	add    BYTE PTR [rax],al
   140048cf0:	ja     0x140048d6d
   140048cf2:	add    eax,DWORD PTR [rax]
   140048cf4:	cmp    BYTE PTR [rax],al
   140048cf6:	add    BYTE PTR [rax],al
   140048cf8:	lods   al,BYTE PTR ds:[rsi]
   140048cf9:	test   DWORD PTR [rcx],eax
   140048cfb:	add    bh,bh
   140048cfd:	(bad)  
   140048cfe:	(bad)  
   140048cff:	dec    DWORD PTR [rsi+0x186]
   140048d05:	add    BYTE PTR [rax],al
   140048d07:	add    BYTE PTR [rbp-0xfffe7a],dl
   140048d0d:	(bad)  
   140048d0e:	(bad)  
   140048d0f:	push   QWORD PTR [rdi+0x7b]
   140048d12:	add    eax,DWORD PTR [rax]
   140048d14:	add    BYTE PTR [rax],al
   140048d16:	add    BYTE PTR [rax],al
   140048d18:	test   BYTE PTR [rbx+0x3],bh
   140048d1b:	add    BYTE PTR [rcx],al
   140048d1d:	add    BYTE PTR [rax],al
   140048d1f:	add    BYTE PTR [rdx+0x37b],dl
   140048d25:	add    BYTE PTR [rax],al
   140048d27:	add    BYTE PTR [rcx],bl
   140048d29:	or     al,BYTE PTR [rdx]
   140048d2b:	add    BYTE PTR [rdx],cl
   140048d2d:	xor    al,BYTE PTR [rsi]
   140048d2f:	push   rax
   140048d30:	sbb    BYTE PTR [rax+0xde00002],dh
   140048d36:	add    al,0x0
   140048d38:	add    DWORD PTR [rdi],edx
   140048d3a:	or     BYTE PTR [rax],al
   140048d3c:	(bad)  
   140048d3d:	push   rsp
   140048d3e:	or     al,0x0
   140048d40:	(bad)  
   140048d41:	xor    al,0xb
   140048d43:	add    BYTE PTR [rdi],dl
   140048d45:	push   rdx
   140048d46:	adc    esi,eax
   140048d48:	adc    DWORD PTR [rax+0x10],esi
   140048d4b:	(bad)  
   140048d4c:	adc    DWORD PTR [rax],ebx
   140048d4e:	add    al,0x0
   140048d50:	sbb    BYTE PTR [rcx+rcx*1],dh
   140048d53:	add    BYTE PTR [rdx],cl
   140048d55:	push   rdx
   140048d56:	(bad)  
   140048d57:	jo     0x140048d71
   140048d59:	mov    al,0x2
   140048d5b:	add    BYTE PTR [rax],dl
   140048d5d:	(bad)  
   140048d5e:	add    al,0x0
   140048d60:	(bad)  
   140048d61:	(bad)  
   140048d62:	(bad)  
   140048d63:	jmp    FWORD PTR [rbx+0x7b]
   140048d66:	add    eax,DWORD PTR [rax]
   140048d68:	pop    rsp
   140048d69:	xchg   DWORD PTR [rcx],eax
   140048d6b:	add    bh,bh
   140048d6d:	(bad)  
   140048d6e:	(bad)  
   140048d6f:	inc    DWORD PTR [rcx+0x187]
   140048d75:	add    BYTE PTR [rax],al
   140048d77:	add    BYTE PTR [rax-0xfffe79],ah
   140048d7d:	(bad)  
   140048d7e:	(bad)  
   140048d7f:	call   FWORD PTR [rcx]
   140048d81:	adc    al,0x2
   140048d83:	add    BYTE PTR [rdx+rdx*2],cl
   140048d86:	or     BYTE PTR [rax],dh
   140048d88:	sbb    BYTE PTR [rax+0xe400002],dh
   140048d8e:	add    al,0x0
   140048d90:	(bad)  
   140048d91:	(bad)  
   140048d92:	(bad)  
   140048d93:	inc    DWORD PTR [rcx+0x7b]
   140048d96:	add    eax,DWORD PTR [rax]
	...
   140048da8:	add    DWORD PTR [rax],eax
   140048daa:	add    BYTE PTR [rax],al
   140048dac:	add    DWORD PTR [rax],eax
   140048dae:	add    BYTE PTR [rax],al
   140048db0:	add    al,BYTE PTR [rax]
   140048db2:	add    BYTE PTR [rax],al
   140048db4:	add    DWORD PTR [rax],eax
   140048db6:	add    BYTE PTR [rax],al
   140048db8:	mov    esp,0x48d
	...
   140048dc5:	add    BYTE PTR [rax],al
   140048dc7:	add    BYTE PTR [rbp+0x7b],cl
   140048dca:	add    eax,DWORD PTR [rax]
   140048dcc:	sbb    BYTE PTR [rax],al
   140048dce:	add    BYTE PTR [rax],al
   140048dd0:	push   rsp
   140048dd1:	add    DWORD PTR [rcx],0x0
   140048dd4:	(bad)  
   140048dd5:	(bad)  
   140048dd6:	(bad)  
   140048dd7:	push   QWORD PTR [rbp-0x7d]
   140048dda:	add    DWORD PTR [rax],eax
   140048ddc:	add    BYTE PTR [rax],al
   140048dde:	add    BYTE PTR [rax],al
   140048de0:	movabs ds:0x1600000001000183,al
   140048de9:	test   BYTE PTR [rcx],al
   140048deb:	add    BYTE PTR [rax],al
   140048ded:	add    BYTE PTR [rax],al
   140048def:	add    BYTE PTR [rip+0xffffffffff000184],bl        # 0x13f048f79
   140048df5:	(bad)  
   140048df6:	(bad)  
   140048df7:	dec    DWORD PTR [rbp+0x7b]
   140048dfa:	add    eax,DWORD PTR [rax]
   140048dfc:	add    BYTE PTR [rax],al
   140048dfe:	add    BYTE PTR [rax],al
   140048e00:	push   rsi
   140048e01:	jnp    0x140048e06
   140048e03:	add    BYTE PTR [rdx],al
   140048e05:	add    BYTE PTR [rax],al
   140048e07:	add    BYTE PTR [rcx+0x7b],ah
   140048e0a:	add    eax,DWORD PTR [rax]
   140048e0c:	add    BYTE PTR [rax],al
   140048e0e:	add    BYTE PTR [rax],al
   140048e10:	sbb    DWORD PTR [rsi],eax
   140048e12:	add    DWORD PTR [rax],eax
   140048e14:	(bad)  
   140048e15:	push   rax
   140048e16:	add    BYTE PTR [rax],al
   140048e18:	sbb    BYTE PTR [rax+0xe400002],dh
   140048e1e:	add    al,0x0
   140048e20:	adc    DWORD PTR [rcx],ebx
   140048e22:	(bad)  
   140048e23:	add    BYTE PTR [rcx],bl
   140048e25:	or     al,BYTE PTR fs:[rax]
   140048e28:	adc    al,0x34
   140048e2a:	or     DWORD PTR [rax],eax
   140048e2c:	(bad)  
   140048e2d:	push   rdx
   140048e2e:	add    dh,BYTE PTR [rax+0x18]
   140048e31:	mov    al,0x2
   140048e33:	add    BYTE PTR [rax+0xe],dh
   140048e36:	add    al,0x0
   140048e38:	in     al,0x9b
   140048e3a:	add    DWORD PTR [rax],eax
   140048e3c:	(bad)  
   140048e3d:	(bad)  
   140048e3e:	(bad)  
   140048e3f:	call   QWORD PTR [rcx]
   140048e41:	sbb    al,BYTE PTR [rsi]
   140048e43:	add    BYTE PTR [rdx],bl
   140048e45:	xor    al,0xb
   140048e47:	add    BYTE PTR [rdx+rdx*2],cl
   140048e4a:	or     BYTE PTR [rax+0x7],dh
   140048e4d:	(bad)  
   140048e4e:	(bad)  
   140048e4f:	push   rax
   140048e50:	sbb    BYTE PTR [rax+0xea00002],dh
   140048e56:	add    al,0x0
   140048e58:	(bad)  
   140048e59:	(bad)  
   140048e5a:	(bad)  
   140048e5b:	dec    DWORD PTR [rdx]
   140048e5d:	jl     0x140048e62
   140048e5f:	add    BYTE PTR [rax],al
   140048e61:	add    BYTE PTR [rax],al
   140048e63:	add    BYTE PTR [rsp+rdi*2],dh
   140048e66:	add    eax,DWORD PTR [rax]
   140048e68:	(bad)  
   140048e69:	(bad)  
   140048e6a:	(bad)  
   140048e6b:	inc    DWORD PTR [rax+0x7c]
   140048e6e:	add    eax,DWORD PTR [rax]
   140048e70:	in     al,0x9a
   140048e72:	add    DWORD PTR [rax],eax
   140048e74:	(bad)  
   140048e75:	(bad)  
   140048e76:	(bad)  
   140048e77:	jmp    QWORD PTR [rbx-0x65]
   140048e7a:	add    DWORD PTR [rax],eax
   140048e7c:	add    BYTE PTR [rax],al
   140048e7e:	add    BYTE PTR [rax],al
   140048e80:	jno    0x140048e1d
   140048e82:	add    DWORD PTR [rax],eax
   140048e84:	(bad)  
   140048e85:	(bad)  
   140048e86:	(bad)  
   140048e87:	inc    DWORD PTR [rdx+0x200019b]
   140048e8d:	add    BYTE PTR [rax],al
   140048e8f:	add    ch,cl
   140048e91:	fwait
   140048e92:	add    DWORD PTR [rax],eax
   140048e94:	(bad)  
   140048e95:	(bad)  
   140048e96:	(bad)  
   140048e97:	call   QWORD PTR [rcx]
   140048e99:	sbb    BYTE PTR [rax+rax*1],al
   140048e9c:	sbb    BYTE PTR [rbx+rcx*1],dh
   140048e9f:	add    BYTE PTR [rdx+rsi*2],cl
   140048ea2:	or     BYTE PTR [rax+0x18],dh
   140048ea5:	mov    al,0x2
   140048ea7:	add    al,dl
   140048ea9:	(bad)  
   140048eaa:	add    al,0x0
   140048eac:	(bad)  
   140048ead:	(bad)  
   140048eae:	(bad)  
   140048eaf:	dec    eax
   140048eb1:	jnp    0x140048eb6
   140048eb3:	add    BYTE PTR [rax],al
   140048eb5:	add    BYTE PTR [rax],al
   140048eb7:	add    BYTE PTR [rbx+rdi*2-0x65d7fffd],bh
   140048ebe:	add    DWORD PTR [rax],eax
   140048ec0:	(bad)  
   140048ec1:	(bad)  
   140048ec2:	(bad)  
   140048ec3:	inc    DWORD PTR [rsi-0x66]
   140048ec6:	add    DWORD PTR [rax],eax
   140048ec8:	add    BYTE PTR [rax],al
   140048eca:	add    BYTE PTR [rax],al
   140048ecc:	adc    DWORD PTR [rcx],esp
   140048ece:	or     BYTE PTR [rax],al
   140048ed0:	and    DWORD PTR [rbp+rcx*1+0x0],esi
   140048ed4:	sbb    eax,0x19000c64
   140048ed9:	xor    al,0xb
   140048edb:	add    BYTE PTR [rip+0x18e00972],cl        # 0x158e49853
   140048ee1:	mov    al,0x2
   140048ee3:	add    BYTE PTR [rax],al
   140048ee5:	(bad)  
   140048ee7:	add    BYTE PTR [rax-0x67],dl
   140048eea:	add    DWORD PTR [rax],eax
   140048eec:	(bad)  
   140048eed:	(bad)  
   140048eee:	(bad)  
   140048eef:	(bad)  
   140048ef0:	jp     0x140048e8b
   140048ef2:	add    DWORD PTR [rax],eax
   140048ef4:	add    BYTE PTR [rax],al
   140048ef6:	add    BYTE PTR [rax],al
   140048ef8:	adc    DWORD PTR [rsi+rax*1],ebx
   140048efb:	add    BYTE PTR [rsp+riz*2],bl
   140048efe:	or     al,0x0
   140048f00:	sbb    BYTE PTR [rbx+rcx*1],dh
   140048f03:	add    BYTE PTR [rdx+rsi*2],cl
   140048f06:	or     BYTE PTR [rax+0x18],dh
   140048f09:	mov    al,0x2
   140048f0b:	add    BYTE PTR [rax],dh
   140048f0d:	(bad)  
   140048f0f:	add    BYTE PTR [rax-0xfffe68],bl
   140048f15:	(bad)  
   140048f16:	(bad)  
   140048f17:	(bad)  
   140048f18:	mov    ebp,0x198
   140048f1d:	add    BYTE PTR [rax],al
   140048f1f:	add    BYTE PTR [rcx],dl
   140048f21:	adc    al,0x4
   140048f23:	add    BYTE PTR [rsp+rsi*1],dl
   140048f26:	or     DWORD PTR [rax],eax
   140048f28:	(bad)  
   140048f29:	push   rdx
   140048f2a:	add    dh,BYTE PTR [rax+0x18]
   140048f2d:	mov    al,0x2
   140048f2f:	add    BYTE PTR [rax+0xf],ah
   140048f32:	add    al,0x0
   140048f34:	(bad)  
   140048f35:	(bad)  
   140048f36:	(bad)  
   140048f37:	jmp    QWORD PTR [rcx-0xfffc84]
   140048f3d:	(bad)  
   140048f3e:	(bad)  
   140048f3f:	inc    DWORD PTR [rax]
   140048f41:	add    BYTE PTR [rax],al
   140048f43:	add    bh,bh
   140048f45:	(bad)  
   140048f46:	(bad)  
   140048f47:	inc    DWORD PTR [rax]
   140048f49:	add    BYTE PTR [rax],al
   140048f4b:	add    bh,bh
   140048f4d:	(bad)  
   140048f4e:	(bad)  
   140048f4f:	jmp    FWORD PTR [rbp+0x1800037c]
   140048f55:	xchg   edi,eax
   140048f56:	add    DWORD PTR [rax],eax
   140048f58:	(bad)  
   140048f59:	(bad)  
   140048f5a:	(bad)  
   140048f5b:	(bad)  
   140048f5c:	cmp    dl,BYTE PTR [rdi+0x1]
   140048f62:	add    BYTE PTR [rax],al
   140048f64:	in     al,dx
   140048f65:	xchg   edi,eax
   140048f66:	add    DWORD PTR [rax],eax
   140048f68:	(bad)  
   140048f69:	(bad)  
   140048f6a:	(bad)  
   140048f6b:	call   QWORD PTR [rcx]
   140048f6d:	sbb    al,0x8
   140048f6f:	add    BYTE PTR [rsp+rdx*2],bl
   140048f72:	(bad)  
   140048f73:	add    BYTE PTR [rax],bl
   140048f75:	xor    al,0xc
   140048f77:	add    BYTE PTR [rdx+rsi*2],cl
   140048f7a:	or     al,dh
   140048f7c:	(bad)  
   140048f7d:	loopne 0x140048f83
   140048f7f:	jo     0x140048f99
   140048f81:	mov    al,0x2
   140048f83:	add    BYTE PTR [rax-0xfffbf1],dl
   140048f89:	(bad)  
   140048f8a:	(bad)  
   140048f8b:	jmp    FWORD PTR [rsi+0x7c]
   140048f8e:	add    eax,DWORD PTR [rax]
   140048f90:	(bad)  
   140048f91:	(bad)  
   140048f92:	(bad)  
   140048f93:	inc    DWORD PTR [rax]
   140048f95:	add    BYTE PTR [rax],al
   140048f97:	add    bh,bh
   140048f99:	(bad)  
   140048f9a:	(bad)  
   140048f9b:	inc    DWORD PTR [rax]
   140048f9d:	add    BYTE PTR [rax],al
   140048f9f:	add    bh,bh
   140048fa1:	(bad)  
   140048fa2:	(bad)  
   140048fa3:	(bad)  
   140048fa4:	jp     0x140049022
   140048fa6:	add    eax,DWORD PTR [rax]
   140048fa8:	sbb    al,0x95
   140048faa:	add    DWORD PTR [rax],eax
   140048fac:	(bad)  
   140048fad:	(bad)  
   140048fae:	(bad)  
   140048faf:	jmp    QWORD PTR [rdx-0x6b]
   140048fb2:	add    DWORD PTR [rax],eax
   140048fb4:	add    BYTE PTR [rax],al
   140048fb6:	add    BYTE PTR [rax],al
   140048fb8:	test   DWORD PTR [rsi-0xffff],edx
   140048fbe:	(bad)  
   140048fbf:	jmp    QWORD PTR [rbx+0x196]
   140048fc5:	add    BYTE PTR [rax],al
   140048fc7:	add    BYTE PTR [rdi-0xfffe6a],dh
   140048fcd:	(bad)  
   140048fce:	(bad)  
   140048fcf:	call   FWORD PTR [rcx]
   140048fd1:	cmp    DWORD PTR [rbx],ecx
   140048fd3:	add    BYTE PTR [rax],ch
   140048fd5:	xor    al,0xcf
   140048fd7:	add    BYTE PTR [rcx+rax*1],bl
   140048fda:	mov    BYTE PTR [rax],0xe
   140048fdd:	lock or al,0xe0
   140048fe0:	or     dl,al
   140048fe2:	or     al,al
   140048fe4:	(bad)  
   140048fe5:	jo     0x140048fec
   140048fe7:	(bad)  
   140048fe8:	add    al,0x50
   140048fea:	add    BYTE PTR [rax],al
   140048fec:	jl     0x14004900e
   140048fee:	add    eax,DWORD PTR [rax]
   140048ff0:	ror    BYTE PTR [rdi],0x4
   140048ff3:	add    BYTE PTR [rdx],ah
   140048ff5:	(bad)  
   140048ff6:	add    BYTE PTR [rax],al
   140048ff8:	(bad)  
   140048ff9:	(bad)  
   140048ffa:	(bad)  
   140048ffb:	(bad)  
   140048ffc:	mov    ecx,0xff00037c
   140049001:	(bad)  
   140049002:	(bad)  
   140049003:	inc    DWORD PTR [rax]
   140049005:	add    BYTE PTR [rax],al
   140049007:	add    bh,bh
   140049009:	(bad)  
   14004900a:	(bad)  
   14004900b:	inc    DWORD PTR [rax]
   14004900d:	add    BYTE PTR [rax],al
   14004900f:	add    BYTE PTR [rax],al
   140049011:	add    BYTE PTR [rax],al
   140049013:	add    ch,al
   140049015:	jl     0x14004901a
   140049017:	add    BYTE PTR [rax],al
   140049019:	add    BYTE PTR [rax],al
   14004901b:	add    cl,dl
   14004901d:	jl     0x140049022
   14004901f:	add    BYTE PTR [rax+rax*1],al
   140049022:	add    BYTE PTR [rax],al
   140049024:	fnstsw WORD PTR [rbx+rax*1+0x0]
   140049028:	add    al,0x0
   14004902a:	add    BYTE PTR [rax],al
   14004902c:	jmp    0x1400493ad
   140049031:	add    BYTE PTR [rax],al
   140049033:	add    BYTE PTR [rax],al
   140049035:	add    BYTE PTR [rax],al
   140049037:	add    bh,bh
   140049039:	(bad)  
   14004903a:	(bad)  
   14004903b:	inc    DWORD PTR [rax]
   14004903d:	add    BYTE PTR [rax],al
   14004903f:	add    BYTE PTR [rax+rax*1],al
   140049042:	add    BYTE PTR [rax],al
   140049044:	cmc    
   140049045:	jl     0x14004904a
   140049047:	add    BYTE PTR [rax+rax*1],al
   14004904a:	add    BYTE PTR [rax],al
   14004904c:	add    DWORD PTR [rbp+0x3],edi
   14004904f:	add    BYTE PTR [rdx],cl
   140049051:	add    BYTE PTR [rax],al
   140049053:	add    BYTE PTR [rip+0xb00037d],cl        # 0x14b0493d6
   140049059:	add    BYTE PTR [rax],al
   14004905b:	add    BYTE PTR [rcx],bl
   14004905d:	jge    0x140049062
   14004905f:	add    BYTE PTR [rax+rax*1],cl
   140049062:	add    BYTE PTR [rax],al
   140049064:	and    eax,0xd00037d
   140049069:	add    BYTE PTR [rax],al
   14004906b:	add    BYTE PTR [rcx],dh
   14004906d:	jge    0x140049072
   14004906f:	add    BYTE PTR [rsi],cl
   140049071:	add    BYTE PTR [rax],al
   140049073:	add    BYTE PTR [rip+0xf00037d],bh        # 0x14f0493f6
   140049079:	add    BYTE PTR [rax],al
   14004907b:	add    BYTE PTR [rcx+0x7d],cl
   14004907e:	add    eax,DWORD PTR [rax]
   140049080:	(bad)  
   140049081:	add    BYTE PTR [rax],al
   140049083:	add    BYTE PTR [rcx+0x7d],cl
   140049086:	add    eax,DWORD PTR [rax]
   140049088:	adc    DWORD PTR [rax],eax
   14004908a:	add    BYTE PTR [rax],al
   14004908c:	push   rbp
   14004908d:	jge    0x140049092
   14004908f:	add    BYTE PTR [rip+0x49000000],cl        # 0x189049095
   140049095:	jge    0x14004909a
   140049097:	add    BYTE PTR [rbx],dl
   140049099:	add    BYTE PTR [rax],al
   14004909b:	add    BYTE PTR [rcx+0x7d],ah
   14004909e:	add    eax,DWORD PTR [rax]
   1400490a0:	or     al,0x0
   1400490a2:	add    BYTE PTR [rax],al
   1400490a4:	rex.WB jge 0x1400490aa
   1400490a7:	add    BYTE PTR [rip+0x6d000000],dl        # 0x1ad0490ad
   1400490ad:	jge    0x1400490b2
   1400490af:	add    BYTE PTR [rbx],cl
   1400490b1:	add    BYTE PTR [rax],al
   1400490b3:	add    BYTE PTR [rcx+0x7d],cl
   1400490b6:	add    eax,DWORD PTR [rax]
   1400490b8:	(bad)  
   1400490b9:	add    BYTE PTR [rax],al
   1400490bb:	add    BYTE PTR [rcx+0x7d],bh
   1400490be:	add    eax,DWORD PTR [rax]
   1400490c0:	or     al,BYTE PTR [rax]
   1400490c2:	add    BYTE PTR [rax],al
   1400490c4:	rex.WB jge 0x1400490ca
   1400490c7:	add    BYTE PTR [rcx],bl
   1400490c9:	add    BYTE PTR [rax],al
   1400490cb:	add    BYTE PTR [rbp+0x400037d],al
   1400490d1:	add    BYTE PTR [rax],al
   1400490d3:	add    BYTE PTR [rcx+0x7d],cl
   1400490d6:	add    eax,DWORD PTR [rax]
   1400490d8:	sbb    eax,DWORD PTR [rax]
   1400490da:	add    BYTE PTR [rax],al
   1400490dc:	xchg   ecx,eax
   1400490dd:	jge    0x1400490e2
   1400490df:	add    BYTE PTR [rbx],bl
   1400490e1:	add    BYTE PTR [rax],al
   1400490e3:	add    BYTE PTR [rbp+0x1b00037d],bl
   1400490e9:	add    BYTE PTR [rax],al
   1400490eb:	add    BYTE PTR [rcx+0x1b00037d],ch
   1400490f1:	add    BYTE PTR [rax],al
   1400490f3:	add    BYTE PTR [rbp+0x1b00037d],dh
   1400490f9:	add    BYTE PTR [rax],al
   1400490fb:	add    cl,al
   1400490fd:	jge    0x140049102
   1400490ff:	add    BYTE PTR [rax],ah
   140049101:	add    BYTE PTR [rax],al
   140049103:	add    ch,cl
   140049105:	jge    0x14004910a
   140049107:	add    BYTE PTR [rcx],ah
   140049109:	add    BYTE PTR [rax],al
   14004910b:	add    cl,bl
   14004910d:	jge    0x140049112
   14004910f:	add    BYTE PTR [rdx],ah
   140049111:	add    BYTE PTR [rax],al
   140049113:	add    ch,ah
   140049115:	jge    0x14004911a
   140049117:	add    BYTE PTR [rbx],ah
   140049119:	add    BYTE PTR [rax],al
   14004911b:	add    cl,dh
   14004911d:	jge    0x140049122
   14004911f:	add    BYTE PTR [rbx],ah
   140049121:	add    BYTE PTR [rax],al
   140049123:	add    ch,bh
   140049125:	jge    0x14004912a
   140049127:	add    BYTE PTR [rdx],ah
   140049129:	add    BYTE PTR [rax],al
   14004912b:	add    BYTE PTR [rcx],cl
   14004912d:	jle    0x140049132
   14004912f:	add    BYTE PTR [rcx],ah
   140049131:	add    BYTE PTR [rax],al
   140049133:	add    BYTE PTR [rip+0x2000037e],dl        # 0x1600494b7
   140049139:	add    BYTE PTR [rax],al
   14004913b:	add    BYTE PTR [rcx],ah
   14004913d:	jle    0x140049142
   14004913f:	add    BYTE PTR [rbx],bl
   140049141:	add    BYTE PTR [rax],al
   140049143:	add    BYTE PTR [rip+0x1b00037e],ch        # 0x15b0494c7
   140049149:	add    BYTE PTR [rax],al
   14004914b:	add    BYTE PTR [rcx],bh
   14004914d:	jle    0x140049152
   14004914f:	add    BYTE PTR [rbx],bl
   140049151:	add    BYTE PTR [rax],al
   140049153:	add    BYTE PTR [rbp+0x7e],al
   140049156:	add    eax,DWORD PTR [rax]
   140049158:	sbb    eax,DWORD PTR [rax]
   14004915a:	add    BYTE PTR [rax],al
   14004915c:	push   rcx
   14004915d:	jle    0x140049162
   14004915f:	add    BYTE PTR [rbx],bl
   140049161:	add    BYTE PTR [rax],al
   140049163:	add    BYTE PTR [rbp+0x7e],bl
   140049166:	add    eax,DWORD PTR [rax]
   140049168:	sub    eax,0x69000000
   14004916d:	jle    0x140049172
   14004916f:	add    BYTE PTR [rsi],ch
   140049171:	add    BYTE PTR [rax],al
   140049173:	add    BYTE PTR [rbp+0x7e],dh
   140049176:	add    eax,DWORD PTR [rax]
   140049178:	add    BYTE PTR cs:[rax],al
   14004917b:	add    BYTE PTR [rcx+0x2d00037e],al
   140049181:	add    BYTE PTR [rax],al
   140049183:	add    BYTE PTR [rbp+0x1b00037e],cl
   140049189:	add    BYTE PTR [rax],al
   14004918b:	add    BYTE PTR [rcx+0x1b00037e],bl
   140049191:	add    BYTE PTR [rax],al
   140049193:	add    BYTE PTR [rbp+0x1b00037e],ah
   140049199:	add    BYTE PTR [rax],al
   14004919b:	add    BYTE PTR [rcx+0x3400037e],dh
   1400491a1:	add    BYTE PTR [rax],al
   1400491a3:	add    BYTE PTR [rbp+0x3500037e],bh
   1400491a9:	add    BYTE PTR [rax],al
   1400491ab:	add    cl,cl
   1400491ad:	jle    0x1400491b2
   1400491af:	add    BYTE PTR [rip+0xffffffffd5000000],dh        # 0x1150491b5
   1400491b5:	jle    0x1400491ba
   1400491b7:	add    BYTE PTR [rax+rax*1],dh
   1400491ba:	add    BYTE PTR [rax],al
   1400491bc:	loope  0x14004923c
   1400491be:	add    eax,DWORD PTR [rax]
   1400491c0:	sbb    eax,DWORD PTR [rax]
   1400491c2:	add    BYTE PTR [rax],al
   1400491c4:	in     eax,dx
   1400491c5:	jle    0x1400491ca
   1400491c7:	add    BYTE PTR [rbx],bl
   1400491c9:	add    BYTE PTR [rax],al
   1400491cb:	add    cl,bh
   1400491cd:	jle    0x1400491d2
   1400491cf:	add    BYTE PTR [rbx],bl
   1400491d1:	add    BYTE PTR [rax],al
   1400491d3:	add    BYTE PTR [rip+0x400037f],al        # 0x144049558
	...
   1400491e5:	add    BYTE PTR [rax],al
   1400491e7:	add    bh,bh
   1400491e9:	(bad)  
   1400491ea:	(bad)  
   1400491eb:	inc    DWORD PTR [rax]
   1400491ed:	add    BYTE PTR [rax],al
   1400491ef:	add    BYTE PTR [rax+rax*1],al
   1400491f2:	add    BYTE PTR [rax],al
   1400491f4:	adc    DWORD PTR [rdi+0x3],edi
   1400491f7:	add    BYTE PTR [rax],al
   1400491f9:	add    BYTE PTR [rax],al
   1400491fb:	add    BYTE PTR [rip+0xffffffffff00037f],bl        # 0x13f049580
   140049201:	(bad)  
   140049202:	(bad)  
   140049203:	jmp    FWORD PTR [rcx]
   140049205:	jg     0x14004920a
   140049207:	add    BYTE PTR [rsp+rcx*4],bl
   14004920a:	add    DWORD PTR [rax],eax
   14004920c:	(bad)  
   14004920d:	(bad)  
   14004920e:	(bad)  
   14004920f:	push   QWORD PTR [rax-0x74]
   140049212:	add    DWORD PTR [rax],eax
   140049214:	add    BYTE PTR [rax],al
   140049216:	add    BYTE PTR [rax],al
   140049218:	mov    bh,0x8d
   14004921a:	add    DWORD PTR [rax],eax
   14004921c:	add    al,0x0
   14004921e:	add    BYTE PTR [rax],al
   140049220:	int    0x8d
   140049222:	add    DWORD PTR [rax],eax
   140049224:	add    eax,0xd9000000
   140049229:	lea    eax,[rcx]
   14004922b:	add    BYTE PTR [rax+rax*1],al
   14004922e:	add    BYTE PTR [rax],al
   140049230:	(bad)  
   140049231:	mov    es,WORD PTR [rcx]
   140049233:	add    BYTE PTR [rcx],cl
   140049235:	add    BYTE PTR [rax],al
   140049237:	add    bl,ch
   140049239:	mov    es,WORD PTR [rcx]
   14004923b:	add    BYTE PTR [rdx],cl
   14004923d:	add    BYTE PTR [rax],al
   14004923f:	add    dl,bh
   140049241:	mov    es,WORD PTR [rcx]
   140049243:	add    BYTE PTR [rbx],cl
   140049245:	add    BYTE PTR [rax],al
   140049247:	add    BYTE PTR [rsi],cl
   140049249:	pop    QWORD PTR [rcx]
   14004924b:	add    BYTE PTR [rax+rax*1],cl
   14004924e:	add    BYTE PTR [rax],al
   140049250:	(bad)  
   140049251:	pop    QWORD PTR [rcx]
   140049253:	add    BYTE PTR [rip+0x33000000],cl        # 0x173049259
   140049259:	pop    QWORD PTR [rcx]
   14004925b:	add    BYTE PTR [rsi],cl
   14004925d:	add    BYTE PTR [rax],al
   14004925f:	add    BYTE PTR [rdi-0x71],al
   140049262:	add    DWORD PTR [rax],eax
   140049264:	sldt   WORD PTR [rax]
   140049267:	add    BYTE PTR [rdx-0x71],bl
   14004926a:	add    DWORD PTR [rax],eax
   14004926c:	adc    DWORD PTR [rax],eax
   14004926e:	add    BYTE PTR [rax],al
   140049270:	jnp    0x140049201
   140049272:	add    DWORD PTR [rax],eax
   140049274:	adc    eax,DWORD PTR [rax]
   140049276:	add    BYTE PTR [rax],al
   140049278:	pushf  
   140049279:	pop    QWORD PTR [rcx]
   14004927b:	add    BYTE PTR [rip+0xffffffffbd000000],dl        # 0xfd049281
   140049281:	pop    QWORD PTR [rcx]
   140049283:	add    BYTE PTR [rdi],dl
   140049285:	add    BYTE PTR [rax],al
   140049287:	add    dh,bl
   140049289:	pop    QWORD PTR [rcx]
   14004928b:	add    BYTE PTR [rcx],bl
   14004928d:	add    BYTE PTR [rax],al
   14004928f:	add    bh,bh
   140049291:	pop    QWORD PTR [rcx]
   140049293:	add    BYTE PTR [rbx],bl
   140049295:	add    BYTE PTR [rax],al
   140049297:	add    BYTE PTR [rip+0x1d000190],dh        # 0x15d04942d
   14004929d:	add    BYTE PTR [rax],al
   14004929f:	add    BYTE PTR [rcx-0x70],al
   1400492a2:	add    DWORD PTR [rax],eax
   1400492a4:	sbb    eax,DWORD PTR [rax]
   1400492a6:	add    BYTE PTR [rax],al
   1400492a8:	mov    WORD PTR [rax+0x1f0001],ss
   1400492ae:	add    BYTE PTR [rax],al
   1400492b0:	mov    bl,0x90
   1400492b2:	add    DWORD PTR [rax],eax
   1400492b4:	and    BYTE PTR [rax],al
   1400492b6:	add    BYTE PTR [rax],al
   1400492b8:	ret    0x190
   1400492bb:	add    BYTE PTR [rcx],ah
   1400492bd:	add    BYTE PTR [rax],al
   1400492bf:	add    dh,dl
   1400492c1:	nop
   1400492c2:	add    DWORD PTR [rax],eax
   1400492c4:	and    al,BYTE PTR [rax]
   1400492c6:	add    BYTE PTR [rax],al
   1400492c8:	out    0x90,eax
   1400492ca:	add    DWORD PTR [rax],eax
   1400492cc:	and    eax,DWORD PTR [rax]
   1400492ce:	add    BYTE PTR [rax],al
   1400492d0:	stc    
   1400492d1:	nop
   1400492d2:	add    DWORD PTR [rax],eax
   1400492d4:	and    al,0x0
   1400492d6:	add    BYTE PTR [rax],al
   1400492d8:	(bad)  
   1400492d9:	xchg   ecx,eax
   1400492da:	add    DWORD PTR [rax],eax
   1400492dc:	and    eax,DWORD PTR [rax]
   1400492de:	add    BYTE PTR [rax],al
   1400492e0:	sub    BYTE PTR [rcx+0x220001],dl
   1400492e6:	add    BYTE PTR [rax],al
   1400492e8:	xchg   r9,rax
   1400492ea:	add    DWORD PTR [rax],eax
   1400492ec:	and    DWORD PTR [rax],eax
   1400492ee:	add    BYTE PTR [rax],al
   1400492f0:	push   0xffffffffffffff91
   1400492f2:	add    DWORD PTR [rax],eax
   1400492f4:	and    BYTE PTR [rax],al
   1400492f6:	add    BYTE PTR [rax],al
   1400492f8:	mov    edx,DWORD PTR [rcx+0x1b0001]
   1400492fe:	add    BYTE PTR [rax],al
   140049300:	rcl    DWORD PTR [rcx+0x2a0001],0x0
   140049307:	add    ch,cl
   140049309:	xchg   ecx,eax
   14004930a:	add    DWORD PTR [rax],eax
   14004930c:	sbb    eax,DWORD PTR [rax]
   14004930e:	add    BYTE PTR [rax],al
   140049310:	(bad)  
   140049311:	xchg   edx,eax
   140049312:	add    DWORD PTR [rax],eax
   140049314:	sub    al,0x0
   140049316:	add    BYTE PTR [rax],al
   140049318:	test   eax,0x2d000192
   14004931d:	add    BYTE PTR [rax],al
   14004931f:	add    BYTE PTR [rax+0x2e000192],bh
   140049325:	add    BYTE PTR [rax],al
   140049327:	add    bl,cl
   140049329:	xchg   edx,eax
   14004932a:	add    DWORD PTR [rax],eax
   14004932c:	(bad)  
   14004932d:	add    BYTE PTR [rax],al
   14004932f:	add    cl,bl
   140049331:	xchg   edx,eax
   140049332:	add    DWORD PTR [rax],eax
   140049334:	add    BYTE PTR cs:[rax],al
   140049337:	add    bl,bh
   140049339:	xchg   edx,eax
   14004933a:	add    DWORD PTR [rax],eax
   14004933c:	sub    eax,0x1c000000
   140049341:	xchg   ebx,eax
   140049342:	add    DWORD PTR [rax],eax
   140049344:	sbb    eax,DWORD PTR [rax]
   140049346:	add    BYTE PTR [rax],al
   140049348:	rex xchg ebx,eax
   14004934a:	add    DWORD PTR [rax],eax
   14004934c:	xor    eax,DWORD PTR [rax]
   14004934e:	add    BYTE PTR [rax],al
   140049350:	addr32 xchg ebx,eax
   140049352:	add    DWORD PTR [rax],eax
   140049354:	xor    al,0x0
   140049356:	add    BYTE PTR [rax],al
   140049358:	jbe    0x1400492ed
   14004935a:	add    DWORD PTR [rax],eax
   14004935c:	xor    eax,0x88000000
   140049361:	xchg   ebx,eax
   140049362:	add    DWORD PTR [rax],eax
   140049364:	add    BYTE PTR ss:[rax],al
   140049367:	add    BYTE PTR [rsi+0x35000193],dl
   14004936d:	add    BYTE PTR [rax],al
   14004936f:	add    BYTE PTR [rdi+0x34000193],dh
   140049375:	add    BYTE PTR [rax],al
   140049377:	add    al,bl
   140049379:	xchg   ebx,eax
   14004937a:	add    DWORD PTR [rax],eax
   14004937c:	sbb    eax,DWORD PTR [rax]
   14004937e:	add    BYTE PTR [rax],al
   140049380:	or     eax,0x3a000194
   140049385:	add    BYTE PTR [rax],al
   140049387:	add    BYTE PTR [rcx],bl
   140049389:	xchg   esp,eax
   14004938a:	add    DWORD PTR [rax],eax
   14004938c:	sbb    eax,DWORD PTR [rax]
   14004938e:	add    BYTE PTR [rax],al
   140049390:	ins    DWORD PTR es:[rdi],dx
   140049391:	xchg   esp,eax
   140049392:	add    DWORD PTR [rax],eax
   140049394:	add    al,0x0
   140049396:	add    BYTE PTR [rax],al
   140049398:	(bad)  
   140049399:	xchg   esp,eax
   14004939a:	add    DWORD PTR [rax],eax
   14004939c:	add    BYTE PTR [rax],al
   14004939e:	add    BYTE PTR [rax],al
   1400493a0:	retf   
   1400493a1:	xchg   esp,eax
   1400493a2:	add    DWORD PTR [rax],eax
   1400493a4:	(bad)  
   1400493a5:	(bad)  
   1400493a6:	(bad)  
   1400493a7:	call   FWORD PTR [rcx]
   1400493a9:	sbb    DWORD PTR [rdx],eax
   1400493ab:	add    BYTE PTR [rdi],al
   1400493ad:	add    DWORD PTR [rcx+0x0],edx
   1400493b0:	(bad)  
   1400493b1:	jge    0x1400493b5
   1400493b3:	add    BYTE PTR [rax+0x2],dh
   1400493b6:	add    BYTE PTR [rax],al
   1400493b8:	sbb    DWORD PTR [rcx],esp
   1400493ba:	or     al,BYTE PTR [rax]
   1400493bc:	and    esp,esp
   1400493be:	or     eax,DWORD PTR [rax]
   1400493c0:	sbb    eax,0x19000a74
   1400493c5:	or     DWORD PTR fs:[rax],eax
   1400493c8:	adc    eax,0x9000834
   1400493cd:	push   rdx
   1400493ce:	add    eax,0x2b018f0
   1400493d3:	add    al,dh
   1400493d5:	(bad)  
	...
   1400493df:	add    BYTE PTR [rcx],al
   1400493e1:	add    BYTE PTR [rax],al
   1400493e3:	add    BYTE PTR [rcx],al
   1400493e5:	add    BYTE PTR [rax],al
   1400493e7:	add    ah,ch
   1400493e9:	xchg   ebx,eax
   1400493ea:	add    al,0x0
	...
   1400493f8:	xchg   BYTE PTR [rbx+rax*1+0x0],bh
   1400493fc:	cmp    BYTE PTR [rax],al
   1400493fe:	add    BYTE PTR [rax],al
   140049400:	adc    BYTE PTR [rbx-0xffff],cl
   140049406:	(bad)  
   140049407:	push   QWORD PTR [rbx+rcx*4]
   14004940a:	add    DWORD PTR [rax],eax
   14004940c:	add    BYTE PTR [rax],al
   14004940e:	add    BYTE PTR [rax],al
   140049410:	movabs ds:0x86ffffffff00018b,al
   140049419:	jl     0x14004941e
   14004941b:	add    BYTE PTR [rax],al
   14004941d:	add    BYTE PTR [rax],al
   14004941f:	add    BYTE PTR [rcx],bl
   140049421:	or     al,BYTE PTR [rdx]
   140049423:	add    BYTE PTR [rdx],cl
   140049425:	xor    al,BYTE PTR [rsi]
   140049427:	push   rax
   140049428:	sbb    BYTE PTR [rax+0xff00002],dh
   14004942e:	add    al,0x0
   140049430:	adc    DWORD PTR [rdx],ebx
   140049432:	(bad)  
   140049433:	add    BYTE PTR [rdx],dl
   140049435:	jb     0x140049442
   140049437:	loopne 0x140049442
   140049439:	jo     0x140049443
   14004943b:	(bad)  
   14004943c:	(bad)  
   14004943d:	xor    BYTE PTR [rsi],al
   14004943f:	push   rax
   140049440:	sbb    BYTE PTR [rax+0x10200002],dh
   140049446:	add    al,0x0
   140049448:	(bad)  
   140049449:	(bad)  
   14004944a:	(bad)  
   14004944b:	call   QWORD PTR [rdi+0x7f]
   14004944e:	add    eax,DWORD PTR [rax]
   140049450:	(bad)  
   140049451:	(bad)  
   140049452:	(bad)  
   140049453:	jmp    QWORD PTR [rbx+0x7f]
   140049456:	add    eax,DWORD PTR [rax]
   140049458:	add    DWORD PTR [rax],eax
   14004945a:	add    BYTE PTR [rax],al
   14004945c:	outs   dx,DWORD PTR ds:[rsi]
   14004945d:	jg     0x140049462
   14004945f:	add    BYTE PTR [rcx],al
   140049461:	add    BYTE PTR [rax],al
   140049463:	add    BYTE PTR [rbx+0x7f],bh
   140049466:	add    eax,DWORD PTR [rax]
   140049468:	add    DWORD PTR [rax],eax
   14004946a:	add    BYTE PTR [rax],al
   14004946c:	add    BYTE PTR [rax],al
   14004946e:	add    BYTE PTR [rax],al
   140049470:	(bad)  
   140049471:	(bad)  
   140049472:	(bad)  
   140049473:	inc    DWORD PTR [rax]
   140049475:	add    BYTE PTR [rax],al
   140049477:	add    BYTE PTR [rcx],al
   140049479:	add    BYTE PTR [rax],al
   14004947b:	add    BYTE PTR [rax],al
   14004947d:	add    BYTE PTR [rax],al
   14004947f:	add    bh,bh
   140049481:	(bad)  
   140049482:	(bad)  
   140049483:	inc    DWORD PTR [rax]
   140049485:	add    BYTE PTR [rax],al
   140049487:	add    BYTE PTR [rbx],al
   140049489:	add    BYTE PTR [rax],al
   14004948b:	add    BYTE PTR [rdi+0x300037f],al
   140049491:	add    BYTE PTR [rax],al
   140049493:	add    BYTE PTR [rbx+0x900037f],dl
   140049499:	add    BYTE PTR [rax],al
   14004949b:	add    BYTE PTR [rdi+0x900037f],bl
   1400494a1:	add    BYTE PTR [rax],al
   1400494a3:	add    BYTE PTR [rbx+0x100037f],ch
   1400494a9:	add    BYTE PTR [rax],al
   1400494ab:	add    BYTE PTR [rbx-0xfffc81],bh
   1400494b1:	(bad)  
   1400494b2:	(bad)  
   1400494b3:	inc    edi
   1400494b5:	jg     0x1400494ba
   1400494b7:	add    BYTE PTR [rax+rcx*4-0xffff],dh
   1400494be:	(bad)  
   1400494bf:	push   rcx
   1400494c1:	mov    BYTE PTR [rcx],al
   1400494c3:	add    BYTE PTR [rcx],al
   1400494c5:	add    BYTE PTR [rax],al
   1400494c7:	add    BYTE PTR [rdx],cl
   1400494c9:	mov    DWORD PTR [rcx],eax
   1400494cb:	add    BYTE PTR [rbx],al
   1400494cd:	add    BYTE PTR [rax],al
   1400494cf:	add    BYTE PTR [rcx-0x77],bh
   1400494d2:	add    DWORD PTR [rax],eax
   1400494d4:	or     BYTE PTR [rax],al
   1400494d6:	add    BYTE PTR [rax],al
   1400494d8:	xchg   ebx,eax
   1400494d9:	mov    DWORD PTR [rcx],eax
   1400494db:	add    BYTE PTR [rbx],al
   1400494dd:	add    BYTE PTR [rax],al
   1400494df:	add    BYTE PTR [rbx+0x9000189],bh
   1400494e5:	add    BYTE PTR [rax],al
   1400494e7:	add    dl,dh
   1400494e9:	mov    DWORD PTR [rcx],eax
   1400494eb:	add    BYTE PTR [rdx],cl
   1400494ed:	add    BYTE PTR [rax],al
   1400494ef:	add    BYTE PTR [rip+0x900018a],dl        # 0x14904967f
   1400494f5:	add    BYTE PTR [rax],al
   1400494f7:	add    BYTE PTR [rcx],bl
   1400494f9:	mov    al,BYTE PTR [rcx]
   1400494fb:	add    BYTE PTR [rbx],al
   1400494fd:	add    BYTE PTR [rax],al
   1400494ff:	add    cl,al
   140049501:	mov    al,BYTE PTR [rcx]
   140049503:	add    BYTE PTR [rcx],al
   140049505:	add    BYTE PTR [rax],al
   140049507:	add    bl,ah
   140049509:	mov    al,BYTE PTR [rcx]
   14004950b:	add    bh,bh
   14004950d:	(bad)  
   14004950e:	(bad)  
   14004950f:	call   FWORD PTR [rcx]
   140049511:	or     eax,0x62040001
   140049516:	add    BYTE PTR [rax],al
   140049518:	sbb    BYTE PTR [rax+0x10500002],dh
   14004951e:	add    al,0x0
	...
   140049528:	add    DWORD PTR [rax],eax
   14004952a:	add    BYTE PTR [rax],al
   14004952c:	add    DWORD PTR [rax],eax
   14004952e:	add    BYTE PTR [rax],al
   140049530:	xor    al,0x95
   140049532:	add    al,0x0
	...
   140049540:	xor    eax,0x3800037f
   140049545:	add    BYTE PTR [rax],al
   140049547:	add    BYTE PTR [rax+rcx*4+0x1],bl
   14004954b:	add    bh,bh
   14004954d:	(bad)  
   14004954e:	(bad)  
   14004954f:	(bad)  
   140049550:	jnp    0x1400494da
   140049552:	add    DWORD PTR [rax],eax
   140049554:	add    BYTE PTR [rax],al
   140049556:	add    BYTE PTR [rax],al
   140049558:	cdq    
   140049559:	mov    BYTE PTR [rcx],al
   14004955b:	add    bh,bh
   14004955d:	(bad)  
   14004955e:	(bad)  
   14004955f:	jmp    FWORD PTR [rbx+0x188]
   140049565:	add    BYTE PTR [rax],al
   140049567:	add    BYTE PTR [rdx+0x7f],al
   14004956a:	add    eax,DWORD PTR [rax]
   14004956c:	add    DWORD PTR [rax],eax
   14004956e:	add    BYTE PTR [rax],al
   140049570:	rex.WB jg 0x140049576
   140049573:	add    BYTE PTR [rax],al
   140049575:	add    BYTE PTR [rax],al
   140049577:	add    BYTE PTR [rcx],bl
   140049579:	or     al,BYTE PTR [rdx]
   14004957b:	add    BYTE PTR [rdx],cl
   14004957d:	xor    al,BYTE PTR [rsi]
   14004957f:	push   rax
   140049580:	sbb    BYTE PTR [rax+0x10500002],dh
   140049586:	add    al,0x0
   140049588:	adc    DWORD PTR [rbx],edx
   14004958a:	add    al,BYTE PTR [rax]
   14004958c:	or     dl,BYTE PTR [rdx+0x6]
   14004958f:	xor    BYTE PTR [rax],bl
   140049591:	mov    al,0x2
   140049593:	add    BYTE PTR [rax-0xfffbf0],al
   140049599:	(bad)  
   14004959a:	(bad)  
   14004959b:	jmp    QWORD PTR [rax+0x37b]
   1400495a1:	add    BYTE PTR [rax],al
   1400495a3:	add    BYTE PTR [rbx+rdi*2-0x77e3fffd],ch
   1400495aa:	add    DWORD PTR [rax],eax
   1400495ac:	(bad)  
   1400495ad:	(bad)  
   1400495ae:	(bad)  
   1400495af:	(bad)  
   1400495b0:	cmp    al,0x88
   1400495b2:	add    DWORD PTR [rax],eax
   1400495b4:	add    DWORD PTR [rax],eax
   1400495b6:	add    BYTE PTR [rax],al
   1400495b8:	rex.X mov BYTE PTR [rcx],al
   1400495bb:	add    BYTE PTR [rax],al
   1400495bd:	add    BYTE PTR [rax],al
   1400495bf:	add    BYTE PTR [rax+rcx*4+0x1],cl
   1400495c3:	add    bh,bh
   1400495c5:	(bad)  
   1400495c6:	(bad)  
   1400495c7:	call   QWORD PTR [rcx]
   1400495c9:	or     eax,0x62040001
   1400495ce:	add    BYTE PTR [rax],al
   1400495d0:	sbb    BYTE PTR [rax+0x10b00002],dh
   1400495d6:	add    al,0x0
   1400495d8:	(bad)  
   1400495d9:	(bad)  
   1400495da:	(bad)  
   1400495db:	(bad)  
   1400495dc:	out    dx,al
   1400495dd:	jnp    0x1400495e2
   1400495df:	add    BYTE PTR [rax],al
   1400495e1:	add    BYTE PTR [rax],al
   1400495e3:	add    dl,bh
   1400495e5:	jnp    0x1400495ea
   1400495e7:	add    BYTE PTR [rdx+rcx*4],cl
   1400495ea:	add    eax,DWORD PTR [rax]
   1400495ec:	(bad)  
   1400495ed:	(bad)  
   1400495ee:	(bad)  
   1400495ef:	call   FWORD PTR [rcx]
   1400495f1:	mov    al,BYTE PTR [rbx]
   1400495f3:	add    BYTE PTR [rax],al
   1400495f5:	add    BYTE PTR [rax],al
   1400495f7:	add    BYTE PTR [rdx+rcx*4+0x3],al
   1400495fb:	add    BYTE PTR [rcx],al
   1400495fd:	add    BYTE PTR [rax],al
   1400495ff:	add    BYTE PTR [rdx-0x76],cl
   140049602:	add    eax,DWORD PTR [rax]
   140049604:	(bad)  
   140049605:	(bad)  
   140049606:	(bad)  
   140049607:	call   FWORD PTR [rcx]
   140049609:	and    al,BYTE PTR [rdi]
   14004960b:	add    BYTE PTR [rsp+rsi*1],dl
   14004960e:	and    eax,DWORD PTR [rax]
   140049610:	adc    al,0x1
   140049612:	sbb    al,0x0
   140049614:	or     BYTE PTR [rax+0x7],dh
   140049617:	(bad)  
   140049618:	(bad)  
   140049619:	push   rax
   14004961a:	add    BYTE PTR [rax],al
   14004961c:	(bad)  
   14004961d:	jge    0x140049621
   14004961f:	add    al,dl
   140049621:	add    BYTE PTR [rax],al
   140049623:	add    BYTE PTR [rcx],dl
   140049625:	adc    al,BYTE PTR [rcx]
   140049627:	add    BYTE PTR [rcx],cl
   140049629:	(bad)  
   14004962a:	add    BYTE PTR [rax],al
   14004962c:	sbb    BYTE PTR [rax+0x10e00002],dh
   140049632:	add    al,0x0
   140049634:	(bad)  
   140049635:	(bad)  
   140049636:	(bad)  
   140049637:	call   rbx
   140049639:	jg     0x14004963e
   14004963b:	add    bh,bh
   14004963d:	(bad)  
   14004963e:	(bad)  
   14004963f:	jmp    rbx
   140049641:	jg     0x140049646
   140049643:	add    BYTE PTR [rsi+rbx*4-0xffff],dl
   14004964a:	(bad)  
   14004964b:	call   QWORD PTR [rcx]
   14004964d:	or     eax,DWORD PTR es:[rax]
   140049650:	es and DWORD PTR fs:[rax],eax
   140049654:	and    dh,BYTE PTR [rax+riz*1]
   140049657:	add    BYTE PTR [rsi],dl
   140049659:	add    DWORD PTR [rax],ebx
   14004965b:	add    BYTE PTR [rbx],cl
   14004965d:	lock or eax,esp
   140049660:	(bad)  
   140049661:	rol    BYTE PTR [rip+0x500470],1        # 0x140549ad7
   140049667:	add    BYTE PTR [rax],bl
   140049669:	mov    al,0x2
   14004966b:	add    BYTE PTR [rax],dl
   14004966d:	adc    DWORD PTR [rax+rax*1],eax
   140049670:	(bad)  
   140049671:	(bad)  
   140049672:	(bad)  
   140049673:	(bad)  
   140049674:	(bad)  
   140049675:	add    BYTE PTR [rbx],0x0
   140049678:	(bad)  
   140049679:	(bad)  
   14004967a:	(bad)  
   14004967b:	dec    DWORD PTR [rbx-0x80]
   14004967e:	add    eax,DWORD PTR [rax]
   140049680:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140049682:	add    DWORD PTR [rax],eax
   140049684:	(bad)  
   140049685:	(bad)  
   140049686:	(bad)  
   140049687:	jmp    FWORD PTR [rcx]
   140049689:	test   eax,0x1
   14004968e:	add    BYTE PTR [rax],al
   140049690:	(bad)  
   140049691:	test   eax,0xffff0001
   140049696:	(bad)  
   140049697:	inc    DWORD PTR [rcx]
   140049699:	or     al,BYTE PTR [rax+rax*1]
   14004969c:	or     dh,BYTE PTR [rbx+rcx*1]
   14004969f:	add    BYTE PTR [rdx],cl
   1400496a1:	jb     0x1400496a9
   1400496a3:	jo     0x1400496a6
   1400496a5:	or     al,BYTE PTR [rax+rax*1]
   1400496a8:	or     dh,BYTE PTR [rdx+rcx*1]
   1400496ab:	add    BYTE PTR [rdx],cl
   1400496ad:	jb     0x1400496b5
   1400496af:	jo     0x1400496c2
   1400496b1:	adc    eax,DWORD PTR [rdx]
   1400496b3:	add    BYTE PTR [rdx],cl
   1400496b5:	push   rdx
   1400496b6:	(bad)  
   1400496b7:	xor    BYTE PTR [rax],bl
   1400496b9:	mov    al,0x2
   1400496bb:	add    BYTE PTR [rax+0x11],al
   1400496be:	add    al,0x0
   1400496c0:	(bad)  
   1400496c1:	(bad)  
   1400496c2:	(bad)  
   1400496c3:	call   QWORD PTR [rdi]
   1400496c5:	add    BYTE PTR [rbx],0x0
   1400496c8:	add    BYTE PTR [rax],al
   1400496ca:	add    BYTE PTR [rax],al
   1400496cc:	and    eax,DWORD PTR [rax+0x3]
   1400496d2:	add    BYTE PTR [rax],al
   1400496d4:	xor    eax,DWORD PTR [rax-0x5efffffd]
   1400496da:	add    DWORD PTR [rax],eax
   1400496dc:	(bad)  
   1400496dd:	(bad)  
   1400496de:	(bad)  
   1400496df:	jmp    QWORD PTR [rax]
   1400496e1:	movabs eax,ds:0xa12a000000010001
   1400496ea:	add    DWORD PTR [rax],eax
   1400496ec:	add    BYTE PTR [rax],al
   1400496ee:	add    BYTE PTR [rax],al
   1400496f0:	rex.WXB movabs rax,ds:0x1a11ffffffff0001
   1400496fa:	(bad)  
   1400496fb:	add    BYTE PTR [rdx],bl
   1400496fd:	xor    al,0xc
   1400496ff:	add    BYTE PTR [rsi],cl
   140049701:	push   rdx
   140049702:	or     dh,BYTE PTR [rax+0x9]
   140049705:	(bad)  
   140049706:	or     BYTE PTR [rax+0x18],dl
   140049709:	mov    al,0x2
   14004970b:	add    BYTE PTR [rax+0x11],dh
   14004970e:	add    al,0x0
   140049710:	(bad)  
   140049711:	(bad)  
   140049712:	(bad)  
   140049713:	(bad)  
   140049714:	out    dx,eax
   140049715:	jg     0x14004971a
   140049717:	add    BYTE PTR [rax],al
   140049719:	add    BYTE PTR [rax],al
   14004971b:	add    bl,bh
   14004971d:	jg     0x140049722
   14004971f:	add    BYTE PTR [rax],al
   140049721:	add    BYTE PTR [rax],al
   140049723:	add    BYTE PTR [rdi],al
   140049725:	add    BYTE PTR [rbx],0x0
   140049728:	rcr    BYTE PTR [rdi-0xffff],0xff
   14004972f:	(bad)  
   140049730:	(bad)  
   140049731:	lahf   
   140049732:	add    DWORD PTR [rax],eax
   140049734:	add    BYTE PTR [rax],al
   140049736:	add    BYTE PTR [rax],al
   140049738:	(bad)  
   140049739:	movabs al,ds:0xa05a000000010001
   140049742:	add    DWORD PTR [rax],eax
   140049744:	add    al,BYTE PTR [rax]
   140049746:	add    BYTE PTR [rax],al
   140049748:	shl    BYTE PTR [rax-0xffff],0xff
   14004974f:	call   QWORD PTR [rcx]
   140049751:	adc    al,BYTE PTR [rcx]
   140049753:	add    BYTE PTR [rcx],cl
   140049755:	(bad)  
   140049756:	add    BYTE PTR [rax],al
   140049758:	sbb    BYTE PTR [rax+0x11a00002],dh
   14004975e:	add    al,0x0
   140049760:	add    ch,al
   140049762:	add    DWORD PTR [rax],eax
   140049764:	(bad)  
   140049765:	(bad)  
   140049766:	(bad)  
   140049767:	call   FWORD PTR [rcx]
   140049769:	and    BYTE PTR [rax],cl
   14004976b:	add    BYTE PTR [rax],ah
   14004976d:	fs (bad) 
   14004976f:	add    BYTE PTR [rsp+rsi*1],bl
   140049772:	or     eax,0xc721000
   140049777:	lock or ah,al
   14004977a:	or     BYTE PTR [rax+0x18],dh
   14004977d:	mov    al,0x2
   14004977f:	add    al,dl
   140049781:	adc    DWORD PTR [rax+rax*1],eax
   140049784:	(bad)  
   140049785:	(bad)  
   140049786:	(bad)  
   140049787:	inc    DWORD PTR [rax]
   140049789:	add    BYTE PTR [rax],al
   14004978b:	add    BYTE PTR [rax],al
   14004978d:	add    BYTE PTR [rax],al
   14004978f:	add    BYTE PTR [rdi],dh
   140049791:	add    DWORD PTR [rbx],0xffffff00
   140049797:	inc    DWORD PTR [rax]
   140049799:	add    BYTE PTR [rax],al
   14004979b:	add    BYTE PTR [rax],al
   14004979d:	add    BYTE PTR [rax],al
   14004979f:	add    BYTE PTR [rcx],al
   1400497a1:	add    BYTE PTR [rax],al
   1400497a3:	add    BYTE PTR [rdx],al
   1400497a5:	add    BYTE PTR [rax],al
   1400497a7:	add    BYTE PTR [rcx],al
   1400497a9:	add    BYTE PTR [rax],al
   1400497ab:	add    BYTE PTR [rax+0x497],dh
	...
   1400497b9:	add    BYTE PTR [rax],al
   1400497bb:	add    BYTE PTR [rbx-0x7f],dl
   1400497be:	add    eax,DWORD PTR [rax]
   1400497c0:	cmp    BYTE PTR [rax],al
   1400497c2:	add    BYTE PTR [rax],al
   1400497c4:	xor    al,0xc3
   1400497c6:	add    DWORD PTR [rax],eax
   1400497c8:	(bad)  
   1400497c9:	(bad)  
   1400497ca:	(bad)  
   1400497cb:	jmp    QWORD PTR [rsp+rax*8]
   1400497ce:	add    DWORD PTR [rax],eax
   1400497d0:	add    BYTE PTR [rax],al
   1400497d2:	add    BYTE PTR [rax],al
   1400497d4:	sub    esp,eax
   1400497d6:	add    DWORD PTR [rax],eax
   1400497d8:	add    DWORD PTR [rax],eax
   1400497da:	add    BYTE PTR [rax],al
   1400497dc:	(bad)  
   1400497dd:	(bad)
   1400497e1:	(bad)  
   1400497e2:	(bad)  
   1400497e3:	call   QWORD PTR [rbx-0x7f]
   1400497e6:	add    eax,DWORD PTR [rax]
   1400497e8:	add    BYTE PTR [rax],al
   1400497ea:	add    BYTE PTR [rax],al
   1400497ec:	(bad)  
   1400497ed:	add    DWORD PTR [rbx],0x200
   1400497f3:	add    BYTE PTR [rcx],bl
   1400497f5:	or     al,BYTE PTR [rdx]
   1400497f7:	add    BYTE PTR [rdx],cl
   1400497f9:	xor    al,BYTE PTR [rsi]
   1400497fb:	push   rax
   1400497fc:	sbb    BYTE PTR [rax+0x11d00002],dh
   140049802:	add    al,0x0
   140049804:	adc    DWORD PTR [rax],ebx
   140049806:	add    al,0x0
   140049808:	sbb    BYTE PTR [rax+rcx*1],dh
   14004980b:	add    BYTE PTR [rdx],cl
   14004980d:	push   rdx
   14004980e:	(bad)  
   14004980f:	jo     0x140049829
   140049811:	mov    al,0x2
   140049813:	add    BYTE PTR [rax],al
   140049815:	adc    al,BYTE PTR [rax+rax*1]
   140049818:	(bad)  
   140049819:	(bad)  
   14004981a:	(bad)  
   14004981b:	dec    eax
   14004981d:	add    BYTE PTR [rbx],0x0
   140049820:	(bad)  
   140049821:	(bad)  
   140049822:	(bad)  
   140049823:	call   rsp
   140049825:	add    BYTE PTR [rbx],0x0
   140049828:	(bad)  
   140049829:	(bad)  
   14004982a:	(bad)  
   14004982b:	jmp    rsp
   14004982d:	add    BYTE PTR [rbx],0x0
   140049830:	jo     0x1400497f3
   140049832:	add    DWORD PTR [rax],eax
   140049834:	(bad)  
   140049835:	(bad)  
   140049836:	(bad)  
   140049837:	call   FWORD PTR [rcx]
   140049839:	and    BYTE PTR [rax],cl
   14004983b:	add    BYTE PTR [rax],ah
   14004983d:	fs (bad) 
   14004983f:	add    BYTE PTR [rsp+rsi*1],bl
   140049842:	or     eax,0xc721000
   140049847:	lock or ah,al
   14004984a:	or     BYTE PTR [rax+0x18],dh
   14004984d:	mov    al,0x2
   14004984f:	add    BYTE PTR [rax],dh
   140049851:	adc    al,BYTE PTR [rax+rax*1]
   140049854:	(bad)  
   140049855:	(bad)  
   140049856:	(bad)  
   140049857:	inc    DWORD PTR [rax]
   140049859:	add    BYTE PTR [rax],al
   14004985b:	add    BYTE PTR [rax],al
   14004985d:	add    BYTE PTR [rax],al
   14004985f:	add    BYTE PTR [rsi-0x7f],bh
   140049862:	add    eax,DWORD PTR [rax]
   140049864:	add    DWORD PTR [rax],eax
   140049866:	add    BYTE PTR [rax],al
   140049868:	(bad)  
   140049869:	add    DWORD PTR [rbx],0x100
   14004986f:	add    BYTE PTR [rsi+0x1000381],ah
   140049875:	add    BYTE PTR [rax],al
   140049877:	add    BYTE PTR [rsi-0xfffc7f],dh
   14004987d:	(bad)  
   14004987e:	(bad)  
   14004987f:	inc    DWORD PTR [rax]
   140049881:	add    BYTE PTR [rax],al
   140049883:	add    BYTE PTR [rax],al
   140049885:	add    BYTE PTR [rax],al
   140049887:	add    BYTE PTR [rax+rax*1],al
   14004988a:	add    BYTE PTR [rax],al
   14004988c:	add    eax,0x1000000
   140049891:	add    BYTE PTR [rax],al
   140049893:	add    BYTE PTR [rax+0x498],bl
	...
   1400498a1:	add    BYTE PTR [rax],al
   1400498a3:	add    dl,al
   1400498a5:	add    DWORD PTR [rbx],0x3800
   1400498ab:	add    BYTE PTR [rax],cl
   1400498ad:	rol    BYTE PTR [rcx],0x0
   1400498b0:	(bad)  
   1400498b1:	(bad)  
   1400498b2:	(bad)  
   1400498b3:	push   rbx
   1400498b5:	rol    BYTE PTR [rcx],0x0
   1400498b8:	add    BYTE PTR [rax],al
   1400498ba:	add    BYTE PTR [rax],al
   1400498bc:	clc    
   1400498bd:	rol    BYTE PTR [rcx],0x0
   1400498c0:	add    DWORD PTR [rax],eax
   1400498c2:	add    BYTE PTR [rax],al
   1400498c4:	sbb    al,0xc1
   1400498c6:	add    DWORD PTR [rax],eax
   1400498c8:	add    al,0x0
   1400498ca:	add    BYTE PTR [rax],al
   1400498cc:	and    cl,al
   1400498ce:	add    DWORD PTR [rax],eax
   1400498d0:	(bad)  
   1400498d1:	(bad)  
   1400498d2:	(bad)  
   1400498d3:	inc    edx
   1400498d5:	add    DWORD PTR [rbx],0x0
   1400498db:	add    bh,cl
   1400498dd:	add    DWORD PTR [rbx],0x500
   1400498e3:	add    BYTE PTR [rcx],bl
   1400498e5:	or     al,BYTE PTR [rdx]
   1400498e7:	add    BYTE PTR [rdx],cl
   1400498e9:	xor    al,BYTE PTR [rsi]
   1400498eb:	push   rax
   1400498ec:	sbb    BYTE PTR [rax+0x12300002],dh
   1400498f2:	add    al,0x0
   1400498f4:	sbb    DWORD PTR [rax],esp
   1400498f6:	or     BYTE PTR [rax],al
   1400498f8:	and    BYTE PTR [rsi+rcx*1+0x0],ah
   1400498fc:	sbb    al,0x34
   1400498fe:	or     eax,0xc721000
   140049903:	lock or ah,al
   140049906:	or     BYTE PTR [rax+0x18],dh
   140049909:	mov    al,0x2
   14004990b:	add    BYTE PTR [rax+0x12],ah
   14004990e:	add    al,0x0
   140049910:	(bad)  
   140049911:	(bad)  
   140049912:	(bad)  
   140049913:	inc    DWORD PTR [rax]
   140049915:	add    BYTE PTR [rax],al
   140049917:	add    BYTE PTR [rax],al
   140049919:	add    BYTE PTR [rax],al
   14004991b:	add    al,dh
   14004991d:	add    BYTE PTR [rbx],0x0
   140049920:	(bad)  
   140049921:	(bad)  
   140049922:	(bad)  
   140049923:	inc    DWORD PTR [rax]
   140049925:	add    BYTE PTR [rax],al
   140049927:	add    BYTE PTR [rax],al
   140049929:	add    BYTE PTR [rax],al
   14004992b:	add    BYTE PTR [rcx],al
   14004992d:	add    BYTE PTR [rax],al
   14004992f:	add    BYTE PTR [rdx],al
   140049931:	add    BYTE PTR [rax],al
   140049933:	add    BYTE PTR [rcx],al
   140049935:	add    BYTE PTR [rax],al
   140049937:	add    BYTE PTR [rcx+rbx*4],bh
   14004993a:	add    al,0x0
	...
   140049948:	or     al,0x81
   14004994a:	add    eax,DWORD PTR [rax]
   14004994c:	cmp    BYTE PTR [rax],al
   14004994e:	add    BYTE PTR [rax],al
   140049950:	rex.WR movabs rsi,0xbf37ffffffff0001
   14004995a:	add    DWORD PTR [rax],eax
   14004995c:	add    BYTE PTR [rax],al
   14004995e:	add    BYTE PTR [rax],al
   140049960:	cmp    al,0xbf
   140049962:	add    DWORD PTR [rax],eax
   140049964:	add    DWORD PTR [rax],eax
   140049966:	add    BYTE PTR [rax],al
   140049968:	rex.X mov edi,0xffff0001
   14004996e:	(bad)  
   14004996f:	dec    DWORD PTR [rcx+rax*4]
   140049972:	add    eax,DWORD PTR [rax]
   140049974:	add    BYTE PTR [rax],al
   140049976:	add    BYTE PTR [rax],al
   140049978:	sbb    DWORD PTR [rcx+0x20003],eax
   14004997e:	add    BYTE PTR [rax],al
   140049980:	sbb    DWORD PTR [rdx],ecx
   140049982:	add    al,BYTE PTR [rax]
   140049984:	or     dh,BYTE PTR [rdx]
   140049986:	(bad)  
   140049987:	push   rax
   140049988:	sbb    BYTE PTR [rax+0x12600002],dh
   14004998e:	add    al,0x0
   140049990:	sbb    DWORD PTR [rcx],ebx
   140049992:	(bad)  
   140049993:	add    BYTE PTR [rcx],bl
   140049995:	or     DWORD PTR fs:[rax],eax
   140049998:	adc    al,0x34
   14004999a:	or     BYTE PTR [rax],al
   14004999c:	(bad)  
   14004999d:	push   rdx
   14004999e:	add    dh,BYTE PTR [rax+0x18]
   1400499a1:	mov    al,0x2
   1400499a3:	add    BYTE PTR [rax+0x412],dl
   1400499a9:	add    BYTE PTR [rax],al
   1400499ab:	add    BYTE PTR [rax],al
   1400499ad:	add    BYTE PTR [rax],al
   1400499af:	add    BYTE PTR [rcx],al
   1400499b1:	add    BYTE PTR [rax],al
   1400499b3:	add    BYTE PTR [rcx],al
   1400499b5:	add    BYTE PTR [rax],al
   1400499b7:	add    BYTE PTR [rcx+rbx*4+0x4],bh
	...
   1400499c6:	add    BYTE PTR [rax],al
   1400499c8:	jb     0x14004994a
   1400499ca:	add    eax,DWORD PTR [rax]
   1400499cc:	cmp    BYTE PTR [rax],al
   1400499ce:	add    BYTE PTR [rax],al
   1400499d0:	je     0x14004998c
   1400499d2:	add    DWORD PTR [rax],eax
   1400499d4:	(bad)  
   1400499d5:	(bad)  
   1400499d6:	(bad)  
   1400499d7:	call   QWORD PTR [rax+0x1ba]
   1400499dd:	add    BYTE PTR [rax],al
   1400499df:	add    BYTE PTR [rcx],bl
   1400499e1:	mov    ebx,0xffff0001
   1400499e6:	(bad)  
   1400499e7:	push   QWORD PTR [rdx-0x80]
   1400499ea:	add    eax,DWORD PTR [rax]
   1400499ec:	add    BYTE PTR [rax],al
   1400499ee:	add    BYTE PTR [rax],al
   1400499f0:	sbb    DWORD PTR [rdx],ecx
   1400499f2:	add    al,BYTE PTR [rax]
   1400499f4:	or     dh,BYTE PTR [rdx]
   1400499f6:	(bad)  
   1400499f7:	push   rax
   1400499f8:	sbb    BYTE PTR [rax+0x12900002],dh
   1400499fe:	add    al,0x0
   140049a00:	sbb    DWORD PTR [rsi+rax*1],ebx
   140049a03:	add    BYTE PTR [rsp+riz*2],bl
   140049a06:	(bad)  
   140049a07:	add    BYTE PTR [rax],bl
   140049a09:	xor    al,0xd
   140049a0b:	add    BYTE PTR [rdx+rdx*4],cl
   140049a0e:	or     BYTE PTR [rax+0x18],dh
   140049a11:	mov    al,0x2
   140049a13:	add    al,al
   140049a15:	adc    al,BYTE PTR [rax+rax*1]
	...
   140049a20:	add    DWORD PTR [rax],eax
   140049a22:	add    BYTE PTR [rax],al
   140049a24:	add    DWORD PTR [rax],eax
   140049a26:	add    BYTE PTR [rax],al
   140049a28:	sub    al,0x9a
   140049a2a:	add    al,0x0
	...
   140049a38:	gs (bad) 
   140049a3a:	add    eax,DWORD PTR [rax]
   140049a3c:	rex.W add BYTE PTR [rax],al
   140049a3f:	add    BYTE PTR [rax-0xfffe47],dh
   140049a45:	(bad)  
   140049a46:	(bad)  
   140049a47:	push   QWORD PTR [rcx]
   140049a49:	mov    edx,0x1
   140049a4e:	add    BYTE PTR [rax],al
   140049a50:	movabs rdx,0x8265ffffffff0001
   140049a5a:	add    eax,DWORD PTR [rax]
   140049a5c:	add    BYTE PTR [rax],al
   140049a5e:	add    BYTE PTR [rax],al
   140049a60:	jb     0x1400499e4
   140049a62:	add    eax,DWORD PTR [rax]
   140049a64:	add    DWORD PTR [rax],eax
   140049a66:	add    BYTE PTR [rax],al
   140049a68:	sbb    DWORD PTR [rdx],ecx
   140049a6a:	add    al,BYTE PTR [rax]
   140049a6c:	or     dl,BYTE PTR [rdx+0x6]
   140049a6f:	push   rax
   140049a70:	sbb    BYTE PTR [rax+0x12c00002],dh
   140049a76:	add    al,0x0
   140049a78:	sbb    DWORD PTR [rcx],ebx
   140049a7a:	(bad)  
   140049a7b:	add    BYTE PTR [rcx],bl
   140049a7d:	or     DWORD PTR fs:[rax],eax
   140049a80:	adc    al,0x34
   140049a82:	or     BYTE PTR [rax],al
   140049a84:	(bad)  
   140049a85:	push   rdx
   140049a86:	add    dh,BYTE PTR [rax+0x18]
   140049a89:	mov    al,0x2
   140049a8b:	add    al,dh
   140049a8d:	adc    al,BYTE PTR [rax+rax*1]
	...
   140049a98:	add    DWORD PTR [rax],eax
   140049a9a:	add    BYTE PTR [rax],al
   140049a9c:	add    DWORD PTR [rax],eax
   140049a9e:	add    BYTE PTR [rax],al
   140049aa0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049aa1:	(bad)  
   140049aa2:	add    al,0x0
	...
   140049ab0:	lea    eax,[rax+0x380003]
   140049ab6:	add    BYTE PTR [rax],al
   140049ab8:	clc    
   140049ab9:	mov    eax,0xffff0001
   140049abe:	(bad)  
   140049abf:	call   QWORD PTR [rcx+rdi*4]
   140049ac2:	add    DWORD PTR [rax],eax
   140049ac4:	add    BYTE PTR [rax],al
   140049ac6:	add    BYTE PTR [rax],al
   140049ac8:	popf   
   140049ac9:	mov    ecx,0xffff0001
   140049ace:	(bad)  
   140049acf:	dec    DWORD PTR [rbp+0x380]
   140049ad5:	add    BYTE PTR [rax],al
   140049ad7:	add    BYTE PTR [rcx],bl
   140049ad9:	or     al,BYTE PTR [rdx]
   140049adb:	add    BYTE PTR [rdx],cl
   140049add:	xor    al,BYTE PTR [rsi]
   140049adf:	push   rax
   140049ae0:	sbb    BYTE PTR [rax+0x12f00002],dh
   140049ae6:	add    al,0x0
   140049ae8:	sbb    DWORD PTR [rax],esp
   140049aea:	or     BYTE PTR [rax],al
   140049aec:	and    BYTE PTR [rax+rdx*1+0x0],ah
   140049af0:	sbb    al,0x34
   140049af2:	lldt   WORD PTR [rax]
   140049af5:	xchg   edx,eax
   140049af6:	or     al,0xf0
   140049af8:	or     ah,al
   140049afa:	or     BYTE PTR [rax+0x18],dh
   140049afd:	mov    al,0x2
   140049aff:	add    BYTE PTR [rax],ah
   140049b01:	adc    eax,DWORD PTR [rax+rax*1]
	...
   140049b0c:	add    DWORD PTR [rax],eax
   140049b0e:	add    BYTE PTR [rax],al
   140049b10:	add    DWORD PTR [rax],eax
   140049b12:	add    BYTE PTR [rax],al
   140049b14:	sbb    BYTE PTR [rbx+0x4],bl
	...
   140049b22:	add    BYTE PTR [rax],al
   140049b24:	fld    QWORD PTR [rdx+0x480003]
   140049b2a:	add    BYTE PTR [rax],al
   140049b2c:	or     BYTE PTR [rax-0xffff],bh
   140049b32:	(bad)  
   140049b33:	call   QWORD PTR [rsi+0x1b8]
   140049b39:	add    BYTE PTR [rax],al
   140049b3b:	add    BYTE PTR [rdx-0xfffe48],bh
   140049b41:	(bad)  
   140049b42:	(bad)  
   140049b43:	(bad)  
   140049b44:	fld    QWORD PTR [rdx+0x3]
   140049b4a:	add    BYTE PTR [rax],al
   140049b4c:	(bad)  
   140049b4d:	(bad)  
   140049b4e:	add    eax,DWORD PTR [rax]
   140049b50:	add    DWORD PTR [rax],eax
   140049b52:	add    BYTE PTR [rax],al
   140049b54:	sbb    DWORD PTR [rdx],ecx
   140049b56:	add    al,BYTE PTR [rax]
   140049b58:	or     dl,BYTE PTR [rdx+0x6]
   140049b5b:	push   rax
   140049b5c:	sbb    BYTE PTR [rax+0x13200002],dh
   140049b62:	add    al,0x0
   140049b64:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b4219b72
   140049b6a:	or     al,BYTE PTR [rax]
   140049b6c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140049b70:	adc    eax,0x9000834
   140049b75:	push   rdx
   140049b76:	add    eax,0x2b018e0
   140049b7b:	add    BYTE PTR [rax+0x13],dl
   140049b7e:	add    al,0x0
	...
   140049b88:	add    DWORD PTR [rax],eax
   140049b8a:	add    BYTE PTR [rax],al
   140049b8c:	add    DWORD PTR [rax],eax
   140049b8e:	add    BYTE PTR [rax],al
   140049b90:	xchg   esp,eax
   140049b91:	fwait
   140049b92:	add    al,0x0
	...
   140049ba0:	push   rdi
   140049ba1:	add    BYTE PTR [rbx],0x0
   140049ba4:	cmp    BYTE PTR [rax],al
   140049ba6:	add    BYTE PTR [rax],al
   140049ba8:	enter  0x1b6,0x0
   140049bac:	(bad)  
   140049bad:	(bad)  
   140049bae:	(bad)  
   140049baf:	(bad)  
   140049bb0:	call   0x140049d6b
   140049bb5:	add    BYTE PTR [rax],al
   140049bb7:	add    cl,dh
   140049bb9:	mov    bh,0x1
   140049bbb:	add    bh,bh
   140049bbd:	(bad)  
   140049bbe:	(bad)  
   140049bbf:	call   QWORD PTR [rdi-0x80]
   140049bc2:	add    eax,DWORD PTR [rax]
   140049bc4:	add    BYTE PTR [rax],al
   140049bc6:	add    BYTE PTR [rax],al
   140049bc8:	sbb    DWORD PTR [rdx],ecx
   140049bca:	add    al,BYTE PTR [rax]
   140049bcc:	or     dh,BYTE PTR [rdx]
   140049bce:	(bad)  
   140049bcf:	push   rax
   140049bd0:	sbb    BYTE PTR [rax+0x13500002],dh
   140049bd6:	add    al,0x0
   140049bd8:	sbb    DWORD PTR [rbx],esi
   140049bda:	or     eax,DWORD PTR [rax]
   140049bdc:	and    eax,0x19002334
   140049be1:	add    DWORD PTR [rax],ebx
   140049be3:	add    BYTE PTR [rsi],cl
   140049be5:	lock or al,0xe0
   140049be8:	or     dl,al
   140049bea:	or     al,al
   140049bec:	(bad)  
   140049bed:	jo     0x140049bf4
   140049bef:	(bad)  
   140049bf0:	add    al,0x50
   140049bf2:	add    BYTE PTR [rax],al
   140049bf4:	jl     0x140049c16
   140049bf6:	add    eax,DWORD PTR [rax]
   140049bf8:	adc    BYTE PTR [rbx],0x4
   140049bfb:	add    BYTE PTR [rdx-0x1000000],bh
   140049c01:	(bad)  
   140049c02:	(bad)  
   140049c03:	(bad)  
   140049c04:	in     eax,dx
   140049c05:	add    DWORD PTR [rbx],0xffffff00
   140049c0b:	(bad)  
   140049c0c:	stc    
   140049c0d:	add    DWORD PTR [rbx],0x100
   140049c13:	add    BYTE PTR [rip+0x1000382],al        # 0x141049f9b
   140049c19:	add    BYTE PTR [rax],al
   140049c1b:	add    BYTE PTR [rcx],dl
   140049c1d:	(bad)  
   140049c1e:	add    eax,DWORD PTR [rax]
   140049c20:	add    DWORD PTR [rax],eax
   140049c22:	add    BYTE PTR [rax],al
   140049c24:	sbb    eax,0x1000382
   140049c29:	add    BYTE PTR [rax],al
   140049c2b:	add    BYTE PTR [rcx],ch
   140049c2d:	(bad)  
   140049c2e:	add    eax,DWORD PTR [rax]
   140049c30:	add    DWORD PTR [rax],eax
   140049c32:	add    BYTE PTR [rax],al
   140049c34:	xor    eax,0x1000382
   140049c39:	add    BYTE PTR [rax],al
   140049c3b:	add    BYTE PTR [rcx-0x7e],al
   140049c3e:	add    eax,DWORD PTR [rax]
   140049c40:	(bad)  
   140049c41:	(bad)  
   140049c42:	(bad)  
   140049c43:	dec    DWORD PTR [rbp-0x7e]
   140049c46:	add    eax,DWORD PTR [rax]
   140049c48:	(bad)  
   140049c49:	(bad)  
   140049c4a:	(bad)  
   140049c4b:	call   FWORD PTR [rcx-0x7e]
   140049c4e:	add    eax,DWORD PTR [rax]
   140049c50:	and    al,0xae
   140049c52:	add    DWORD PTR [rax],eax
   140049c54:	(bad)  
   140049c55:	(bad)  
   140049c56:	(bad)  
   140049c57:	(bad)  
   140049c58:	jp     0x140049c09
   140049c5a:	add    DWORD PTR [rax],eax
   140049c5c:	add    DWORD PTR [rax],eax
   140049c5e:	add    BYTE PTR [rax],al
   140049c60:	imul   DWORD PTR [rdi+0x20001]
   140049c66:	add    BYTE PTR [rax],al
   140049c68:	add    DWORD PTR [rax+0x30001],esi
   140049c6e:	add    BYTE PTR [rax],al
   140049c70:	(bad)  
   140049c71:	mov    al,0x1
   140049c73:	add    BYTE PTR [rcx],al
   140049c75:	add    BYTE PTR [rax],al
   140049c77:	add    BYTE PTR [rbx+0x30001b0],bh
   140049c7d:	add    BYTE PTR [rax],al
   140049c7f:	add    bh,cl
   140049c81:	mov    al,0x1
   140049c83:	add    BYTE PTR [rcx],al
   140049c85:	add    BYTE PTR [rax],al
   140049c87:	add    cl,dl
   140049c89:	mov    al,0x1
   140049c8b:	add    BYTE PTR [rbx],al
   140049c8d:	add    BYTE PTR [rax],al
   140049c8f:	add    ch,ah
   140049c91:	mov    al,0x1
   140049c93:	add    BYTE PTR [rcx],al
   140049c95:	add    BYTE PTR [rax],al
   140049c97:	add    bh,ah
   140049c99:	mov    al,0x1
   140049c9b:	add    BYTE PTR [rbx],al
   140049c9d:	add    BYTE PTR [rax],al
   140049c9f:	add    bl,bh
   140049ca1:	mov    al,0x1
   140049ca3:	add    BYTE PTR [rcx],al
   140049ca5:	add    BYTE PTR [rax],al
   140049ca7:	add    BYTE PTR [rdi],ah
   140049ca9:	mov    cl,0x1
   140049cab:	add    bh,bh
   140049cad:	(bad)  
   140049cae:	(bad)  
   140049caf:	jmp    FWORD PTR [rbp-0x4f]
   140049cb2:	add    DWORD PTR [rax],eax
   140049cb4:	add    DWORD PTR [rax],eax
   140049cb6:	add    BYTE PTR [rax],al
   140049cb8:	js     0x140049c6b
   140049cba:	add    DWORD PTR [rax],eax
   140049cbc:	(bad)  
   140049cbd:	(bad)  
   140049cbe:	(bad)  
   140049cbf:	call   FWORD PTR [rcx]
   140049cc1:	sub    BYTE PTR [rdi],al
   140049cc3:	add    BYTE PTR [rdi],dl
   140049cc5:	xor    al,0xf4
   140049cc7:	add    DWORD PTR [rdi],edx
   140049cc9:	add    esi,ebp
   140049ccb:	add    DWORD PTR [rax],ecx
   140049ccd:	jo     0x140049cd6
   140049ccf:	(bad)  
   140049cd0:	(bad)  
   140049cd1:	push   rax
   140049cd2:	add    BYTE PTR [rax],al
   140049cd4:	(bad)  
   140049cd5:	jge    0x140049cd9
   140049cd7:	add    BYTE PTR [rax+0xf],ah
   140049cda:	add    BYTE PTR [rax],al
   140049cdc:	adc    DWORD PTR [rcx],esp
   140049cde:	or     BYTE PTR [rax],al
   140049ce0:	and    DWORD PTR [rbx+rcx*1+0x0],esi
   140049ce4:	sbb    eax,0x19000a64
   140049ce9:	xor    al,0x9
   140049ceb:	add    BYTE PTR [rip+0x18e00952],cl        # 0x158e4a643
   140049cf1:	mov    al,0x2
   140049cf3:	add    BYTE PTR [rax-0xfffbed],dh
   140049cf9:	(bad)  
   140049cfa:	(bad)  
   140049cfb:	jmp    FWORD PTR [rax+0x380]
   140049d01:	add    BYTE PTR [rax],al
   140049d03:	add    BYTE PTR [rax+0x20000380],bh
   140049d09:	stos   DWORD PTR es:[rdi],eax
   140049d0a:	add    DWORD PTR [rax],eax
   140049d0c:	(bad)  
   140049d0d:	(bad)  
   140049d0e:	(bad)  
   140049d0f:	dec    DWORD PTR [rsi-0x55]
   140049d12:	add    DWORD PTR [rax],eax
   140049d14:	add    DWORD PTR [rax],eax
   140049d16:	add    BYTE PTR [rax],al
   140049d18:	lods   al,BYTE PTR ss:[rsi]
   140049d1a:	add    DWORD PTR [rax],eax
   140049d1c:	add    BYTE PTR [rax],al
   140049d1e:	add    BYTE PTR [rax],al
   140049d20:	lods   al,BYTE PTR ds:[rsi]
   140049d22:	add    DWORD PTR [rax],eax
   140049d24:	(bad)  
   140049d25:	(bad)  
   140049d26:	(bad)  
   140049d27:	inc    DWORD PTR [rcx]
   140049d29:	sbb    BYTE PTR [rax],cl
   140049d2b:	add    BYTE PTR [rax],bl
   140049d2d:	fs (bad) 
   140049d2f:	add    BYTE PTR [rax],bl
   140049d31:	xor    al,0x15
   140049d33:	add    BYTE PTR [rax],bl
   140049d35:	repnz (bad) 
   140049d37:	loopne 0x140049d45
   140049d39:	jo     0x140049d46
   140049d3b:	push   rax
   140049d3c:	add    DWORD PTR [rdi],eax
   140049d3e:	add    DWORD PTR [rax],eax
   140049d40:	(bad)  
   140049d41:	(bad)  
   140049d42:	add    BYTE PTR [rax],al
   140049d44:	add    DWORD PTR [rsp+rcx*1],ebx
   140049d47:	add    BYTE PTR [rsp+riz*2],bl
   140049d4a:	adc    BYTE PTR [rax],al
   140049d4c:	sbb    al,0x54
   140049d4e:	ltr    WORD PTR [rsp+rsi*1]
   140049d52:	(bad)  
   140049d53:	add    BYTE PTR [rdx+rsi*2],bl
   140049d56:	sbb    al,dh
   140049d58:	(bad)  
   140049d59:	loopne 0x140049d6f
   140049d5b:	rcl    BYTE PTR [rdx],1
   140049d5d:	rcl    BYTE PTR [rax],0x70
   140049d60:	add    DWORD PTR [rcx],ebx
   140049d62:	or     al,BYTE PTR [rax]
   140049d64:	sbb    DWORD PTR [rbx+rdx*1+0x0],esi
   140049d68:	sbb    DWORD PTR [rdx+rdx*1+0x0],esp
   140049d6c:	sbb    DWORD PTR [rcx+rdx*1+0x0],edx
   140049d70:	sbb    DWORD PTR [rax+rdx*1],esi
   140049d73:	add    BYTE PTR [rcx],bl
   140049d75:	rcl    BYTE PTR [rip+0x93719e0],cl        # 0x1493bb75b
   140049d7b:	add    BYTE PTR [rsi],ah
   140049d7d:	fs push rdx
   140049d7f:	add    BYTE PTR [rdx],ah
   140049d81:	xor    al,0x51
   140049d83:	add    BYTE PTR [rip+0x7004c01],dl        # 0x14704e98a
   140049d89:	loopne 0x140049d90
   140049d8b:	jo     0x140049d91
   140049d8d:	push   rax
   140049d8e:	add    BYTE PTR [rax],al
   140049d90:	jl     0x140049db2
   140049d92:	add    eax,DWORD PTR [rax]
   140049d94:	loopne 0x140049da9
   140049d96:	add    al,0x0
   140049d98:	push   rdx
   140049d99:	add    al,BYTE PTR [rax]
   140049d9b:	add    bh,bh
   140049d9d:	(bad)  
   140049d9e:	(bad)  
   140049d9f:	call   FWORD PTR [rax-0x7d]
   140049da2:	add    eax,DWORD PTR [rax]
   140049da4:	(bad)  
   140049da5:	(bad)  
   140049da6:	(bad)  
   140049da7:	jmp    QWORD PTR [rbx+rax*4+0x3]
   140049dab:	add    bh,bh
   140049dad:	(bad)  
   140049dae:	(bad)  
   140049daf:	inc    DWORD PTR [rax]
   140049db1:	add    BYTE PTR [rax],al
   140049db3:	add    bh,bh
   140049db5:	(bad)  
   140049db6:	(bad)  
   140049db7:	inc    DWORD PTR [rax]
   140049db9:	add    BYTE PTR [rax],al
   140049dbb:	add    bh,bh
   140049dbd:	(bad)  
   140049dbe:	(bad)  
   140049dbf:	push   QWORD PTR [rax-0x7d]
   140049dc2:	add    eax,DWORD PTR [rax]
   140049dc4:	(bad)  
   140049dc5:	(bad)  
   140049dc6:	(bad)  
   140049dc7:	(bad)  
   140049dc8:	jl     0x140049d4d
   140049dca:	add    eax,DWORD PTR [rax]
   140049dcc:	(bad)  
   140049dcd:	(bad)  
   140049dce:	(bad)  
   140049dcf:	inc    DWORD PTR [rax]
   140049dd1:	add    BYTE PTR [rax],al
   140049dd3:	add    bh,bh
   140049dd5:	(bad)  
   140049dd6:	(bad)  
   140049dd7:	inc    DWORD PTR [rax]
   140049dd9:	add    BYTE PTR [rax],al
   140049ddb:	add    BYTE PTR [rax],bh
   140049ddd:	(bad)
   140049de0:	(bad)  
   140049de1:	(bad)  
   140049de2:	(bad)  
   140049de3:	jmp    QWORD PTR [rdx+0x10001c5]
   140049de9:	add    BYTE PTR [rax],al
   140049deb:	add    BYTE PTR [rsi],cl
   140049ded:	mov    DWORD PTR [rcx],0xffffff00
   140049df3:	push   QWORD PTR [rip+0x10001c7]        # 0x141049fc0
   140049df9:	add    BYTE PTR [rax],al
   140049dfb:	add    BYTE PTR [rax-0x39],al
   140049dfe:	add    DWORD PTR [rax],eax
   140049e00:	(bad)  
   140049e01:	(bad)  
   140049e02:	(bad)  
   140049e03:	call   QWORD PTR [rcx]
   140049e05:	and    BYTE PTR [rdx],cl
   140049e07:	add    BYTE PTR [rax],ah
   140049e09:	fs or  eax,0xc541c00
   140049e0f:	add    BYTE PTR [rax],bl
   140049e11:	xor    al,0xb
   140049e13:	add    BYTE PTR [rdx+rdx*2],cl
   140049e16:	or     al,dh
   140049e18:	(bad)  
   140049e19:	loopne 0x140049e1f
   140049e1b:	jo     0x140049e35
   140049e1d:	mov    al,0x2
   140049e1f:	add    BYTE PTR [rax],dl
   140049e21:	adc    al,0x4
   140049e23:	add    ah,ch
   140049e25:	rol    BYTE PTR [rcx],1
   140049e27:	add    bh,bh
   140049e29:	(bad)  
   140049e2a:	(bad)  
   140049e2b:	push   QWORD PTR [rcx+rdx*8]
   140049e2e:	add    DWORD PTR [rax],eax
   140049e30:	add    BYTE PTR [rax],al
   140049e32:	add    BYTE PTR [rax],al
   140049e34:	(bad)  
   140049e35:	rol    DWORD PTR [rcx],1
   140049e37:	add    bh,bh
   140049e39:	(bad)  
   140049e3a:	(bad)  
   140049e3b:	call   QWORD PTR [rcx]
   140049e3d:	and    ecx,DWORD PTR [rdx]
   140049e3f:	add    BYTE PTR [rbx],ah
   140049e41:	push   rsp
   140049e42:	adc    BYTE PTR [rax],al
   140049e44:	(bad)  
   140049e45:	xor    al,0xf
   140049e47:	add    BYTE PTR [rbx],dl
   140049e49:	jb     0x140049e5a
   140049e4b:	lock or eax,0x9c00be0
   140049e51:	jo     0x140049e5b
   140049e53:	(bad)  
   140049e54:	sbb    BYTE PTR [rax+0x14400002],dh
   140049e5a:	add    al,0x0
   140049e5c:	(bad)  
   140049e5d:	(bad)  
   140049e5e:	(bad)  
   140049e5f:	push   QWORD PTR [rax+0x74000383]
   140049e65:	iret   
   140049e66:	add    DWORD PTR [rax],eax
   140049e68:	(bad)  
   140049e69:	(bad)  
   140049e6a:	(bad)  
   140049e6b:	inc    DWORD PTR [rax+0x1d0]
   140049e71:	add    BYTE PTR [rax],al
   140049e73:	add    BYTE PTR [rcx-0xfffe30],bl
   140049e79:	(bad)  
   140049e7a:	(bad)  
   140049e7b:	call   QWORD PTR [rcx]
   140049e7d:	sbb    al,0x8
   140049e7f:	add    BYTE PTR [rsp+rdx*2],bl
   140049e82:	or     al,0x0
   140049e84:	(bad)  
   140049e85:	xor    al,0xb
   140049e87:	add    BYTE PTR [rcx],cl
   140049e89:	push   rdx
   140049e8a:	add    eax,0x27003e0
   140049e8f:	(bad)  
   140049e90:	sbb    BYTE PTR [rax+0x14700002],dh
   140049e96:	add    al,0x0
   140049e98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049e99:	(bad)  
   140049e9a:	add    DWORD PTR [rax],eax
   140049e9c:	(bad)  
   140049e9d:	(bad)  
   140049e9e:	(bad)  
   140049e9f:	dec    DWORD PTR [rdi+rcx*8]
   140049ea2:	add    DWORD PTR [rax],eax
   140049ea4:	add    BYTE PTR [rax],al
   140049ea6:	add    BYTE PTR [rax],al
   140049ea8:	and    eax,0xff0001cf
   140049ead:	(bad)  
   140049eae:	(bad)  
   140049eaf:	call   QWORD PTR [rcx]
   140049eb1:	sbb    al,0x8
   140049eb3:	add    BYTE PTR [rsp+riz*2],bl
   140049eb6:	or     eax,DWORD PTR [rax]
   140049eb8:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140049ebc:	adc    al,0x34
   140049ebe:	or     DWORD PTR [rax],eax
   140049ec0:	or     BYTE PTR [rdx+0x4],dl
   140049ec3:	jo     0x140049edd
   140049ec5:	mov    al,0x2
   140049ec7:	add    BYTE PTR [rax+0x18000414],ah
   140049ecd:	rol    BYTE PTR [rcx],cl
   140049ecf:	add    bh,bh
   140049ed1:	(bad)  
   140049ed2:	(bad)  
   140049ed3:	call   FWORD PTR [rbx-0x2e]
   140049ed6:	add    DWORD PTR [rax],eax
   140049ed8:	add    BYTE PTR [rax],al
   140049eda:	add    BYTE PTR [rax],al
   140049edc:	mov    dl,dl
   140049ede:	add    DWORD PTR [rax],eax
   140049ee0:	(bad)  
   140049ee1:	(bad)  
   140049ee2:	(bad)  
   140049ee3:	call   QWORD PTR [rcx]
   140049ee5:	sbb    al,0x6
   140049ee7:	add    BYTE PTR [rsp+riz*2],bl
   140049eea:	or     al,BYTE PTR [rax]
   140049eec:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049eef:	add    BYTE PTR [rdx+rdx*2],cl
   140049ef2:	or     BYTE PTR [rax+0x18],dh
   140049ef5:	mov    al,0x2
   140049ef7:	add    al,dl
   140049ef9:	adc    al,0x4
   140049efb:	add    bh,bh
   140049efd:	(bad)  
   140049efe:	(bad)  
   140049eff:	dec    DWORD PTR [rax+0x383]
   140049f05:	add    BYTE PTR [rax],al
   140049f07:	add    BYTE PTR [rbx+rax*4-0x31e7fffd],dl
   140049f0e:	add    DWORD PTR [rax],eax
   140049f10:	(bad)  
   140049f11:	(bad)  
   140049f12:	(bad)  
   140049f13:	inc    DWORD PTR [rcx-0x32]
   140049f16:	add    DWORD PTR [rax],eax
   140049f18:	add    DWORD PTR [rax],eax
   140049f1a:	add    BYTE PTR [rax],al
   140049f1c:	ins    DWORD PTR es:[rdi],dx
   140049f1d:	(bad)  
   140049f1e:	add    DWORD PTR [rax],eax
   140049f20:	add    BYTE PTR [rax],al
   140049f22:	add    BYTE PTR [rax],al
   140049f24:	mov    dh,cl
   140049f26:	add    DWORD PTR [rax],eax
   140049f28:	(bad)  
   140049f29:	(bad)  
   140049f2a:	(bad)  
   140049f2b:	call   FWORD PTR [rcx]
   140049f2d:	and    BYTE PTR [rax],cl
   140049f2f:	add    BYTE PTR [rdx],dl
   140049f31:	xchg   edx,eax
   140049f32:	or     esi,eax
   140049f34:	or     eax,esp
   140049f36:	(bad)  
   140049f37:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364a3ae
   140049f3e:	add    dl,BYTE PTR [rax-0x2c]
   140049f41:	jge    0x140049f45
   140049f43:	add    BYTE PTR [rax+0x0],al
   140049f46:	add    BYTE PTR [rax],al
   140049f48:	add    DWORD PTR [rsi],edx
   140049f4a:	or     BYTE PTR [rax],al
   140049f4c:	(bad)  
   140049f4d:	push   rsp
   140049f4e:	or     al,0x0
   140049f50:	(bad)  
   140049f51:	xor    al,0xa
   140049f53:	add    BYTE PTR [rsi],dl
   140049f55:	push   rdx
   140049f56:	adc    ah,al
   140049f58:	adc    BYTE PTR [rax+0xf],dh
   140049f5b:	(bad)  
   140049f5c:	add    DWORD PTR [rsi],edx
   140049f5e:	or     BYTE PTR [rax],al
   140049f60:	(bad)  
   140049f61:	push   rsp
   140049f62:	(bad)  
   140049f63:	add    BYTE PTR [rsi],dl
   140049f65:	xor    al,0xc
   140049f67:	add    BYTE PTR [rsi],dl
   140049f69:	jb     0x140049f7d
   140049f6b:	loopne 0x140049f7d
   140049f6d:	jo     0x140049f7e
   140049f6f:	(bad)  
   140049f70:	sbb    DWORD PTR [rsi],ebx
   140049f72:	add    eax,0x24011000
   140049f77:	add    BYTE PTR [rax+rsi*2],al
   140049f7a:	add    esi,DWORD PTR [rax]
   140049f7c:	add    dl,BYTE PTR [rax+0x0]
   140049f7f:	add    ah,dl
   140049f81:	jge    0x140049f85
   140049f83:	add    BYTE PTR [rax],dl
   140049f85:	add    DWORD PTR [rax],eax
   140049f87:	add    BYTE PTR [rcx],al
   140049f89:	(bad)  
   140049f8a:	add    DWORD PTR [rax],eax
   140049f8c:	(bad)  
   140049f8d:	movabs ds:0x3418000418110000,al
   140049f96:	or     al,BYTE PTR [rax]
   140049f98:	or     al,0x52
   140049f9a:	or     BYTE PTR [rax+0x18],dh
   140049f9d:	mov    al,0x2
   140049f9f:	add    BYTE PTR [rax],al
   140049fa1:	adc    eax,0xffff0004
   140049fa6:	(bad)  
   140049fa7:	(bad)  
   140049fa8:	mov    esp,0x383
   140049fad:	add    BYTE PTR [rax],al
   140049faf:	add    ah,cl
   140049fb1:	add    DWORD PTR [rbx],0x0
   140049fb4:	hlt    
   140049fb5:	fild   WORD PTR [rcx]
   140049fb7:	add    bh,bh
   140049fb9:	(bad)  
   140049fba:	(bad)  
   140049fbb:	call   FWORD PTR [rcx]
   140049fbd:	loopne 0x140049fc0
   140049fbf:	add    BYTE PTR [rax],al
   140049fc1:	add    BYTE PTR [rax],al
   140049fc3:	add    BYTE PTR [rbp-0x20],al
   140049fc6:	add    DWORD PTR [rax],eax
   140049fc8:	(bad)  
   140049fc9:	(bad)  
   140049fca:	(bad)  
   140049fcb:	call   FWORD PTR [rcx]
   140049fcd:	xor    eax,0x7427000b
   140049fd2:	xor    DWORD PTR [rax],eax
   140049fd4:	and    esp,DWORD PTR [rax+rsi*1+0x0]
   140049fd8:	(bad)  
   140049fd9:	xor    al,0x2f
   140049fdb:	add    BYTE PTR [rbx],dl
   140049fdd:	add    DWORD PTR [rdx],ebp
   140049fdf:	add    BYTE PTR [rax],cl
   140049fe1:	lock (bad) 
   140049fe3:	loopne 0x140049fe9
   140049fe5:	push   rax
   140049fe6:	add    BYTE PTR [rax],al
   140049fe8:	jl     0x14004a00a
   140049fea:	add    eax,DWORD PTR [rax]
   140049fec:	xor    BYTE PTR [rip+0x1420004],dl        # 0x141469ff6
   140049ff2:	add    BYTE PTR [rax],al
   140049ff4:	(bad)  
   140049ff5:	(bad)  
   140049ff6:	(bad)  
   140049ff7:	(bad)  
   140049ff8:	fadd   QWORD PTR [rbx-0x28d3fffd]
   140049ffe:	add    DWORD PTR [rax],eax
   14004a000:	(bad)  
   14004a001:	(bad)  
   14004a002:	(bad)  
   14004a003:	(bad)  
   14004a004:	cld    
   14004a005:	xlat   BYTE PTR ds:[rbx]
   14004a006:	add    DWORD PTR [rax],eax
   14004a008:	add    BYTE PTR [rax],al
   14004a00a:	add    BYTE PTR [rax],al
   14004a00c:	sbb    al,0xd8
   14004a00e:	add    DWORD PTR [rax],eax
   14004a010:	(bad)  
   14004a011:	(bad)  
   14004a012:	(bad)  
   14004a013:	inc    DWORD PTR [rcx]
   14004a015:	or     al,BYTE PTR [rax+rax*1]
   14004a018:	or     dh,BYTE PTR [rdi+rax*1]
   14004a01b:	add    BYTE PTR [rdx],cl
   14004a01d:	xor    al,BYTE PTR [rsi]
   14004a01f:	jo     0x14004a032
   14004a021:	sbb    ecx,DWORD PTR [rax]
   14004a023:	add    BYTE PTR [rbx],bl
   14004a025:	push   rsp
   14004a026:	adc    BYTE PTR [rax],al
   14004a028:	(bad)  
   14004a029:	xor    al,0xf
   14004a02b:	add    BYTE PTR [rbx],cl
   14004a02d:	xchg   edx,eax
   14004a02e:	(bad)  
   14004a02f:	loopne 0x14004a036
   14004a031:	jo     0x14004a037
   14004a033:	(bad)  
   14004a034:	sbb    BYTE PTR [rax+0x15600002],dh
   14004a03a:	add    al,0x0
   14004a03c:	(bad)  
   14004a03d:	(bad)  
   14004a03e:	(bad)  
   14004a03f:	jmp    FWORD PTR [rsi]
   14004a041:	test   BYTE PTR [rbx],al
   14004a043:	add    BYTE PTR [rcx+riz*8-0xffff],bl
   14004a04a:	(bad)  
   14004a04b:	inc    DWORD PTR [rbp-0x1e]
   14004a04e:	add    DWORD PTR [rax],eax
   14004a050:	add    BYTE PTR [rax],al
   14004a052:	add    BYTE PTR [rax],al
   14004a054:	gs loop 0x14004a058
   14004a057:	add    bh,bh
   14004a059:	(bad)  
   14004a05a:	(bad)  
   14004a05b:	inc    DWORD PTR [rcx]
   14004a05d:	sbb    al,0xc
   14004a05f:	add    BYTE PTR [rsp+riz*2],bl
   14004a062:	(bad)  
   14004a063:	add    BYTE PTR [rsp+rdx*2],bl
   14004a066:	(bad)  
   14004a067:	add    BYTE PTR [rsp+rsi*1],bl
   14004a06a:	adc    al,0x0
   14004a06c:	sbb    al,0xd2
   14004a06e:	sbb    al,dh
   14004a070:	(bad)  
   14004a071:	loopne 0x14004a087
   14004a073:	rcl    BYTE PTR [rdx],1
   14004a075:	rcl    BYTE PTR [rax],0x70
   14004a078:	adc    DWORD PTR [rax],ebx
   14004a07a:	add    al,0x0
   14004a07c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004a07f:	add    BYTE PTR [rdx+rdx*2],cl
   14004a082:	or     BYTE PTR [rax+0x18],dh
   14004a085:	mov    al,0x2
   14004a087:	add    BYTE PTR [rax-0xfffbeb],dl
   14004a08d:	(bad)  
   14004a08e:	(bad)  
   14004a08f:	(bad)  
   14004a090:	call   0x14004a418
   14004a095:	add    BYTE PTR [rax],al
   14004a097:	add    al,bh
   14004a099:	add    DWORD PTR [rbx],0x0
   14004a09c:	add    DWORD PTR [rax],eax
   14004a09e:	add    BYTE PTR [rax],al
   14004a0a0:	or     eax,DWORD PTR [rbx+rax*1+0x200]
   14004a0a7:	add    BYTE PTR [rsi],bl
   14004a0a9:	test   BYTE PTR [rbx],al
   14004a0ab:	add    BYTE PTR [rax],dl
   14004a0ad:	loope  0x14004a0b0
   14004a0af:	add    bh,bh
   14004a0b1:	(bad)  
   14004a0b2:	(bad)  
   14004a0b3:	push   QWORD PTR [rip+0x20001e1]        # 0x14204a29a
   14004a0b9:	add    BYTE PTR [rax],al
   14004a0bb:	add    BYTE PTR [rbp-0x1f],ch
   14004a0be:	add    DWORD PTR [rax],eax
   14004a0c0:	add    DWORD PTR [rax],eax
   14004a0c2:	add    BYTE PTR [rax],al
   14004a0c4:	jp     0x14004a0a7
   14004a0c6:	add    DWORD PTR [rax],eax
   14004a0c8:	add    BYTE PTR [rax],al
   14004a0ca:	add    BYTE PTR [rax],al
   14004a0cc:	xchg   ecx,esp
   14004a0ce:	add    DWORD PTR [rax],eax
   14004a0d0:	(bad)  
   14004a0d1:	(bad)  
   14004a0d2:	(bad)  
   14004a0d3:	call   QWORD PTR [rcx]
   14004a0d5:	adc    al,BYTE PTR [rcx]
   14004a0d7:	add    BYTE PTR [rcx],cl
   14004a0d9:	(bad)  
   14004a0da:	add    BYTE PTR [rax],al
   14004a0dc:	sbb    BYTE PTR [rax+0x15c00002],dh
   14004a0e2:	add    al,0x0
   14004a0e4:	(bad)  
   14004a0e5:	(bad)  
   14004a0e6:	(bad)  
   14004a0e7:	(bad)  
   14004a0e8:	cmp    al,BYTE PTR [rbx+rax*1+0x1e9a000]
   14004a0ef:	add    bh,bh
   14004a0f1:	(bad)  
   14004a0f2:	(bad)  
   14004a0f3:	call   QWORD PTR [rcx]
   14004a0f5:	(bad)  
   14004a0f6:	or     al,BYTE PTR [rax]
   14004a0f8:	(bad)  
   14004a0f9:	xor    al,0x14
   14004a0fb:	add    BYTE PTR [rdx],dl
   14004a0fd:	xchg   edx,eax
   14004a0fe:	(bad)  
   14004a0ff:	lock or al,0xe0
   14004a102:	or     dl,al
   14004a104:	or     al,al
   14004a106:	(bad)  
   14004a107:	jo     0x14004a10e
   14004a109:	(bad)  
   14004a10a:	add    al,0x50
   14004a10c:	sbb    BYTE PTR [rax+0x15f00002],dh
   14004a112:	add    al,0x0
   14004a114:	(bad)  
   14004a115:	(bad)  
   14004a116:	(bad)  
   14004a117:	(bad)  
   14004a118:	jns    0x14004a09e
   14004a11a:	add    eax,DWORD PTR [rax]
   14004a11c:	(bad)  
   14004a11d:	(bad)  
   14004a11e:	(bad)  
   14004a11f:	inc    DWORD PTR [rbp+0x74000384]
   14004a125:	in     al,dx
   14004a126:	add    DWORD PTR [rax],eax
   14004a128:	(bad)  
   14004a129:	(bad)  
   14004a12a:	(bad)  
   14004a12b:	push   QWORD PTR [rcx+0x1ec]
   14004a131:	add    BYTE PTR [rax],al
   14004a133:	add    BYTE PTR [rbx],dh
   14004a135:	in     eax,dx
   14004a136:	add    DWORD PTR [rax],eax
   14004a138:	(bad)  
   14004a139:	(bad)  
   14004a13a:	(bad)  
   14004a13b:	call   FWORD PTR [rdi+0x10001ed]
   14004a141:	add    BYTE PTR [rax],al
   14004a143:	add    BYTE PTR [rsi-0xfffe13],dh
   14004a149:	(bad)  
   14004a14a:	(bad)  
   14004a14b:	call   QWORD PTR [rcx]
   14004a14d:	adc    eax,DWORD PTR [rdx]
   14004a14f:	add    BYTE PTR [rdx],cl
   14004a151:	push   rdx
   14004a152:	(bad)  
   14004a153:	xor    BYTE PTR [rax],bl
   14004a155:	mov    al,0x2
   14004a157:	add    BYTE PTR [rax],ah
   14004a159:	(bad)  
   14004a15a:	add    al,0x0
   14004a15c:	(bad)  
   14004a15d:	(bad)  
   14004a15e:	(bad)  
   14004a15f:	inc    DWORD PTR [rsi-0x7c]
   14004a162:	add    eax,DWORD PTR [rax]
   14004a164:	add    BYTE PTR [rax],al
   14004a166:	add    BYTE PTR [rax],al
   14004a168:	push   rsi
   14004a169:	test   BYTE PTR [rbx],al
   14004a16b:	add    BYTE PTR [rax],al
   14004a16d:	add    BYTE PTR [rax],al
   14004a16f:	add    BYTE PTR [rcx-0x7c],ch
   14004a172:	add    eax,DWORD PTR [rax]
   14004a174:	sbb    al,0xec
   14004a176:	add    DWORD PTR [rax],eax
   14004a178:	(bad)  
   14004a179:	(bad)  
   14004a17a:	(bad)  
   14004a17b:	(bad)  
   14004a17c:	cmp    al,0xec
   14004a17e:	add    DWORD PTR [rax],eax
   14004a180:	add    DWORD PTR [rax],eax
   14004a182:	add    BYTE PTR [rax],al
   14004a184:	rex.R in al,dx
   14004a186:	add    DWORD PTR [rax],eax
   14004a188:	add    BYTE PTR [rax],al
   14004a18a:	add    BYTE PTR [rax],al
   14004a18c:	fs in  al,dx
   14004a18e:	add    DWORD PTR [rax],eax
   14004a190:	(bad)  
   14004a191:	(bad)  
   14004a192:	(bad)  
   14004a193:	inc    DWORD PTR [rcx]
   14004a195:	clts   
   14004a197:	add    BYTE PTR [rdi],cl
   14004a199:	fs (bad) 
   14004a19b:	add    BYTE PTR [rdi],cl
   14004a19d:	xor    al,0x6
   14004a19f:	add    BYTE PTR [rdi],cl
   14004a1a1:	xor    cl,BYTE PTR [rbx]
   14004a1a3:	jo     0x14004a1b6
   14004a1a5:	adc    eax,DWORD PTR [rdx]
   14004a1a7:	add    BYTE PTR [rdx],cl
   14004a1a9:	push   rdx
   14004a1aa:	(bad)  
   14004a1ab:	xor    BYTE PTR [rax],bl
   14004a1ad:	mov    al,0x2
   14004a1af:	add    BYTE PTR [rax+0x16],dl
   14004a1b2:	add    al,0x0
   14004a1b4:	(bad)  
   14004a1b5:	(bad)  
   14004a1b6:	(bad)  
   14004a1b7:	jmp    QWORD PTR [rdi+0x384]
   14004a1bd:	add    BYTE PTR [rax],al
   14004a1bf:	add    BYTE PTR [rdi+0x1000384],dh
   14004a1c5:	add    BYTE PTR [rax],al
   14004a1c7:	add    dl,cl
   14004a1c9:	test   BYTE PTR [rbx],al
   14004a1cb:	add    BYTE PTR [rsi+rbp*8-0xffff],bl
   14004a1d2:	(bad)  
   14004a1d3:	(bad)  
   14004a1d4:	mov    esp,0x20001ee
   14004a1d9:	add    BYTE PTR [rax],al
   14004a1db:	add    ah,cl
   14004a1dd:	out    dx,al
   14004a1de:	add    DWORD PTR [rax],eax
   14004a1e0:	add    DWORD PTR [rax],eax
   14004a1e2:	add    BYTE PTR [rax],al
   14004a1e4:	fldz   
   14004a1e6:	add    DWORD PTR [rax],eax
   14004a1e8:	add    BYTE PTR [rax],al
   14004a1ea:	add    BYTE PTR [rax],al
   14004a1ec:	out    0xee,al
   14004a1ee:	add    DWORD PTR [rax],eax
   14004a1f0:	(bad)  
   14004a1f1:	(bad)  
   14004a1f2:	(bad)  
   14004a1f3:	call   QWORD PTR [rcx]
   14004a1f5:	adc    eax,DWORD PTR [rdx]
   14004a1f7:	add    BYTE PTR [rdx],cl
   14004a1f9:	push   rdx
   14004a1fa:	(bad)  
   14004a1fb:	xor    BYTE PTR [rax],bl
   14004a1fd:	mov    al,0x2
   14004a1ff:	add    BYTE PTR [rax-0xfffbea],al
   14004a205:	(bad)  
   14004a206:	(bad)  
   14004a207:	(bad)  
   14004a208:	fld    QWORD PTR [rbx+rax*1+0x0]
   14004a20f:	add    ch,ch
   14004a211:	test   BYTE PTR [rbx],al
   14004a213:	add    BYTE PTR [rcx],al
   14004a215:	add    BYTE PTR [rax],al
   14004a217:	add    BYTE PTR [rax],al
   14004a219:	test   DWORD PTR [rbx],eax
   14004a21b:	add    BYTE PTR [rdx],al
   14004a21d:	add    BYTE PTR [rax],al
   14004a21f:	add    BYTE PTR [rbx],dl
   14004a221:	test   DWORD PTR [rbx],eax
   14004a223:	add    BYTE PTR [rax],al
   14004a225:	add    BYTE PTR [rax],al
   14004a227:	add    BYTE PTR [rsi],ah
   14004a229:	test   DWORD PTR [rbx],eax
   14004a22b:	add    BYTE PTR [rcx+rsi*8+0x1],dh
   14004a22f:	add    bh,bh
   14004a231:	(bad)  
   14004a232:	(bad)  
   14004a233:	call   QWORD PTR [rcx+rsi*8+0x20001]
   14004a23a:	add    BYTE PTR [rax],al
   14004a23c:	movabs eax,ds:0xae000000010001f1
   14004a245:	icebp  
   14004a246:	add    DWORD PTR [rax],eax
   14004a248:	add    BYTE PTR [rax],al
   14004a24a:	add    BYTE PTR [rax],al
   14004a24c:	(bad)  
   14004a24d:	icebp  
   14004a24e:	add    DWORD PTR [rax],eax
   14004a250:	(bad)  
   14004a251:	(bad)  
   14004a252:	(bad)  
   14004a253:	inc    DWORD PTR [rcx]
   14004a255:	sbb    BYTE PTR [rsi],al
   14004a257:	add    BYTE PTR [rax],bl
   14004a259:	fs (bad) 
   14004a25b:	add    BYTE PTR [rax],bl
   14004a25d:	xor    al,0x6
   14004a25f:	add    BYTE PTR [rax],bl
   14004a261:	xor    dl,BYTE PTR [rax+rsi*2]
   14004a264:	adc    DWORD PTR [rax],ebx
   14004a266:	add    al,0x0
   14004a268:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004a26b:	add    BYTE PTR [rdx+rdx*2],cl
   14004a26e:	or     BYTE PTR [rax+0x18],dh
   14004a271:	mov    al,0x2
   14004a273:	add    BYTE PTR [rax+0x64000416],dh
   14004a279:	repnz add DWORD PTR [rax],eax
   14004a27c:	(bad)  
   14004a27d:	(bad)  
   14004a27e:	(bad)  
   14004a27f:	dec    DWORD PTR [rcx+0x1f2]
   14004a285:	add    BYTE PTR [rax],al
   14004a287:	add    ah,cl
   14004a289:	repnz add DWORD PTR [rax],eax
   14004a28c:	(bad)  
   14004a28d:	(bad)  
   14004a28e:	(bad)  
   14004a28f:	call   FWORD PTR [rcx]
   14004a291:	sbb    DWORD PTR [rax+rax*1],eax
   14004a294:	or     dh,BYTE PTR [rsp+rcx*1]
   14004a297:	add    BYTE PTR [rdx],cl
   14004a299:	jb     0x14004a2a1
   14004a29b:	jo     0x14004a271
   14004a29d:	jge    0x14004a2a1
   14004a29f:	add    BYTE PTR [rax],bh
   14004a2a1:	add    BYTE PTR [rax],al
   14004a2a3:	add    BYTE PTR [rcx],al
   14004a2a5:	(bad)  
   14004a2a6:	or     BYTE PTR [rax],al
   14004a2a8:	(bad)  
   14004a2a9:	push   rsp
   14004a2aa:	lldt   WORD PTR [rdi]
   14004a2ad:	xor    al,0xe
   14004a2af:	add    BYTE PTR [rdi],dl
   14004a2b1:	xchg   edx,eax
   14004a2b2:	adc    esp,eax
   14004a2b4:	adc    DWORD PTR [rax+0x10],esi
   14004a2b7:	(bad)  
   14004a2b8:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b419a2c6
   14004a2be:	or     BYTE PTR [rax],al
   14004a2c0:	adc    eax,0x15000764
   14004a2c5:	xor    al,0x6
   14004a2c7:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e4b3ff
   14004a2cd:	and    al,0x7
   14004a2cf:	add    BYTE PTR [rdx],dl
   14004a2d1:	fs push rdx
   14004a2d3:	add    BYTE PTR [rdx],dl
   14004a2d5:	xor    al,0x51
   14004a2d7:	add    BYTE PTR [rdx],dl
   14004a2d9:	add    DWORD PTR [rsi+0x0],ecx
   14004a2dc:	or     esi,DWORD PTR [rax+0x0]
   14004a2df:	add    ah,dl
   14004a2e1:	jge    0x14004a2e5
   14004a2e3:	add    BYTE PTR [rax+0x2],ah
   14004a2e6:	add    BYTE PTR [rax],al
   14004a2e8:	adc    DWORD PTR [rbx],edx
   14004a2ea:	add    al,BYTE PTR [rax]
   14004a2ec:	or     dl,BYTE PTR [rdx+0x6]
   14004a2ef:	xor    BYTE PTR [rax],bl
   14004a2f1:	mov    al,0x2
   14004a2f3:	add    al,ah
   14004a2f5:	(bad)  
   14004a2f6:	add    al,0x0
   14004a2f8:	(bad)  
   14004a2f9:	(bad)  
   14004a2fa:	(bad)  
   14004a2fb:	push   QWORD PTR [rsi]
   14004a2fd:	test   DWORD PTR [rbx],eax
   14004a2ff:	add    BYTE PTR [rax],al
   14004a301:	add    BYTE PTR [rax],al
   14004a303:	add    BYTE PTR [rsi-0x7b],al
   14004a306:	add    eax,DWORD PTR [rax]
   14004a308:	add    DWORD PTR [rax],eax
   14004a30a:	add    BYTE PTR [rax],al
   14004a30c:	pop    rcx
   14004a30d:	test   DWORD PTR [rbx],eax
   14004a30f:	add    BYTE PTR [rdx],al
   14004a311:	add    BYTE PTR [rax],al
   14004a313:	add    BYTE PTR [rbp+rax*4+0x3],ch
   14004a317:	add    BYTE PTR [rbx],al
   14004a319:	add    BYTE PTR [rax],al
   14004a31b:	add    BYTE PTR [rdi-0x7b],bh
   14004a31e:	add    eax,DWORD PTR [rax]
   14004a320:	add    al,0x0
   14004a322:	add    BYTE PTR [rax],al
   14004a324:	xchg   edx,eax
   14004a325:	test   DWORD PTR [rbx],eax
   14004a327:	add    ah,bl
   14004a329:	hlt    
   14004a32a:	add    DWORD PTR [rax],eax
   14004a32c:	(bad)  
   14004a32d:	(bad)  
   14004a32e:	(bad)  
   14004a32f:	(bad)  
   14004a330:	cld    
   14004a331:	hlt    
   14004a332:	add    DWORD PTR [rax],eax
   14004a334:	add    eax,0xc000000
   14004a339:	cmc    
   14004a33a:	add    DWORD PTR [rax],eax
   14004a33c:	add    al,0x0
   14004a33e:	add    BYTE PTR [rax],al
   14004a340:	sbb    ebp,esi
   14004a342:	add    DWORD PTR [rax],eax
   14004a344:	add    eax,DWORD PTR [rax]
   14004a346:	add    BYTE PTR [rax],al
   14004a348:	es cmc 
   14004a34a:	add    DWORD PTR [rax],eax
   14004a34c:	add    al,BYTE PTR [rax]
   14004a34e:	add    BYTE PTR [rax],al
   14004a350:	xor    esi,ebp
   14004a352:	add    DWORD PTR [rax],eax
   14004a354:	add    DWORD PTR [rax],eax
   14004a356:	add    BYTE PTR [rax],al
   14004a358:	rex cmc 
   14004a35a:	add    DWORD PTR [rax],eax
   14004a35c:	add    BYTE PTR [rax],al
   14004a35e:	add    BYTE PTR [rax],al
   14004a360:	rex.WRB cmc 
   14004a362:	add    DWORD PTR [rax],eax
   14004a364:	(bad)  
   14004a365:	(bad)  
   14004a366:	(bad)  
   14004a367:	call   FWORD PTR [rcx]
   14004a369:	cs (bad) 
   14004a36b:	add    BYTE PTR [rsp+riz*2],bl
   14004a36e:	push   rbx
   14004a36f:	add    BYTE PTR [rax],bl
   14004a371:	xor    al,0x52
   14004a373:	add    BYTE PTR [rbx],cl
   14004a375:	add    DWORD PTR [rsi+0x0],ecx
   14004a378:	add    al,0x70
   14004a37a:	add    BYTE PTR [rax],al
   14004a37c:	jl     0x14004a39e
   14004a37e:	add    eax,DWORD PTR [rax]
   14004a380:	adc    BYTE PTR [rdi],dl
   14004a382:	add    al,0x0
   14004a384:	(bad)  
   14004a386:	add    BYTE PTR [rax],al
   14004a388:	(bad)  
   14004a389:	(bad)  
   14004a38a:	(bad)  
   14004a38b:	jmp    QWORD PTR [rbp-0xfffc7b]
   14004a391:	(bad)  
   14004a392:	(bad)  
   14004a393:	push   QWORD PTR [rcx-0x43fffc7b]
   14004a399:	sti    
   14004a39a:	add    DWORD PTR [rax],eax
   14004a39c:	(bad)  
   14004a39d:	(bad)  
   14004a39e:	(bad)  
   14004a39f:	call   QWORD PTR [rdi]
   14004a3a1:	cld    
   14004a3a2:	add    DWORD PTR [rax],eax
   14004a3a4:	add    BYTE PTR [rax],al
   14004a3a6:	add    BYTE PTR [rax],al
   14004a3a8:	and    esp,edi
   14004a3aa:	add    DWORD PTR [rax],eax
   14004a3ac:	add    DWORD PTR [rax],eax
   14004a3ae:	add    BYTE PTR [rax],al
   14004a3b0:	mov    al,0xfc
   14004a3b2:	add    DWORD PTR [rax],eax
   14004a3b4:	(bad)  
   14004a3b5:	(bad)  
   14004a3b6:	(bad)  
   14004a3b7:	call   QWORD PTR [rcx]
   14004a3b9:	adc    al,BYTE PTR [rcx]
   14004a3bb:	add    BYTE PTR [rcx],cl
   14004a3bd:	(bad)  
   14004a3be:	add    BYTE PTR [rax],al
   14004a3c0:	sbb    BYTE PTR [rax+0x17400002],dh
   14004a3c6:	add    al,0x0
   14004a3c8:	(bad)  
   14004a3c9:	(bad)  
   14004a3ca:	(bad)  
   14004a3cb:	inc    ecx
   14004a3cd:	test   DWORD PTR [rbx],eax
   14004a3cf:	add    BYTE PTR [rdi*8-0xffff],ch
   14004a3d6:	(bad)  
   14004a3d7:	call   QWORD PTR [rcx]
   14004a3d9:	adc    al,BYTE PTR [rcx]
   14004a3db:	add    BYTE PTR [rcx],cl
   14004a3dd:	(bad)  
   14004a3de:	add    BYTE PTR [rax],al
   14004a3e0:	sbb    BYTE PTR [rax+0x17700002],dh
   14004a3e6:	add    al,0x0
   14004a3e8:	cmp    ch,0x1
   14004a3eb:	add    bh,bh
   14004a3ed:	(bad)  
   14004a3ee:	(bad)  
   14004a3ef:	call   QWORD PTR [rcx]
   14004a3f1:	and    cl,BYTE PTR [rcx]
   14004a3f3:	add    BYTE PTR [rdx],ah
   14004a3f5:	xor    al,0x2c
   14004a3f7:	add    BYTE PTR [rip+0xa002601],dl        # 0x14a04c9fe
   14004a3fd:	lock or al,ah
   14004a400:	(bad)  
   14004a401:	jo     0x14004a408
   14004a403:	(bad)  
   14004a404:	add    al,0x50
   14004a406:	add    BYTE PTR [rax],al
   14004a408:	sbb    BYTE PTR [rax+0x17a00002],dh
   14004a40e:	add    al,0x0
   14004a410:	sbb    BYTE PTR [rcx],cl
   14004a412:	add    al,BYTE PTR [rax]
   14004a414:	(bad)  
   14004a415:	(bad)  
   14004a416:	(bad)  
   14004a417:	dec    DWORD PTR [rsi+0x9]
   14004a41a:	add    al,BYTE PTR [rax]
   14004a41c:	add    BYTE PTR [rax],al
   14004a41e:	add    BYTE PTR [rax],al
   14004a420:	mov    ch,0x9
   14004a422:	add    al,BYTE PTR [rax]
   14004a424:	(bad)  
   14004a425:	(bad)  
   14004a426:	(bad)  
   14004a427:	call   FWORD PTR [rsi+0x100020a]
   14004a42d:	add    BYTE PTR [rax],al
   14004a42f:	add    BYTE PTR [rcx],dh
   14004a431:	or     eax,DWORD PTR [rdx]
   14004a433:	add    bh,bh
   14004a435:	(bad)  
   14004a436:	(bad)  
   14004a437:	call   QWORD PTR [rcx]
   14004a439:	and    cl,BYTE PTR [rcx]
   14004a43b:	add    BYTE PTR [rdx],ah
   14004a43d:	xor    al,0x2c
   14004a43f:	add    BYTE PTR [rip+0xa002601],dl        # 0x14a04ca46
   14004a445:	lock or al,ah
   14004a448:	(bad)  
   14004a449:	jo     0x14004a450
   14004a44b:	(bad)  
   14004a44c:	add    al,0x50
   14004a44e:	add    BYTE PTR [rax],al
   14004a450:	sbb    BYTE PTR [rax+0x17d00002],dh
   14004a456:	add    al,0x0
   14004a458:	(bad)  
   14004a459:	(bad)  
   14004a45a:	(bad)  
   14004a45b:	push   QWORD PTR [rsi+rax*4-0xfffd]
   14004a462:	(bad)  
   14004a463:	inc    eax
   14004a465:	xchg   BYTE PTR [rbx],al
   14004a467:	add    BYTE PTR [rsi+rax*1-0xfffe],bh
   14004a46e:	(bad)  
   14004a46f:	push   rdx
   14004a471:	(bad)  
   14004a472:	add    al,BYTE PTR [rax]
   14004a474:	add    BYTE PTR [rax],al
   14004a476:	add    BYTE PTR [rax],al
   14004a478:	pop    rcx
   14004a479:	(bad)  
   14004a47a:	add    al,BYTE PTR [rax]
   14004a47c:	(bad)  
   14004a47d:	(bad)  
   14004a47e:	(bad)  
   14004a47f:	inc    DWORD PTR [rdx+0x8]
   14004a482:	add    al,BYTE PTR [rax]
   14004a484:	add    DWORD PTR [rax],eax
   14004a486:	add    BYTE PTR [rax],al
   14004a488:	(bad)  
   14004a489:	or     BYTE PTR [rdx],al
   14004a48b:	add    bh,bh
   14004a48d:	(bad)  
   14004a48e:	(bad)  
   14004a48f:	call   QWORD PTR [rcx]
   14004a491:	sub    al,0xb
   14004a493:	add    BYTE PTR [rsp+rsi*1],ch
   14004a496:	sbb    eax,0x12012000
   14004a49b:	add    BYTE PTR [rcx],bl
   14004a49d:	lock (bad) 
   14004a49f:	loopne 0x14004a4b6
   14004a4a1:	rcl    BYTE PTR [rbx],1
   14004a4a3:	rcl    BYTE PTR [rcx],0x70
   14004a4a6:	adc    BYTE PTR [rax+0xf],ah
   14004a4a9:	push   rax
   14004a4aa:	add    BYTE PTR [rax],al
   14004a4ac:	sbb    BYTE PTR [rax+0x18000002],dh
   14004a4b2:	add    al,0x0
   14004a4b4:	(bad)  
   14004a4b5:	(bad)  
   14004a4b6:	(bad)  
   14004a4b7:	dec    esp
   14004a4b9:	xchg   BYTE PTR [rbx],al
   14004a4bb:	add    bh,bh
   14004a4bd:	(bad)  
   14004a4be:	(bad)  
   14004a4bf:	(bad)  
   14004a4c0:	fadd   DWORD PTR [rsi+0x1d80003]
   14004a4c6:	add    al,BYTE PTR [rax]
   14004a4c8:	(bad)  
   14004a4c9:	(bad)  
   14004a4ca:	(bad)  
   14004a4cb:	call   QWORD PTR [rbp+0x202]
   14004a4d1:	add    BYTE PTR [rax],al
   14004a4d3:	add    cl,al
   14004a4d5:	add    al,BYTE PTR [rdx]
   14004a4d7:	add    bh,bh
   14004a4d9:	(bad)  
   14004a4da:	(bad)  
   14004a4db:	(bad)  
   14004a4dc:	(bad)  
   14004a4dd:	add    eax,0x10002
   14004a4e2:	add    BYTE PTR [rax],al
   14004a4e4:	jp     0x14004a4eb
   14004a4e6:	add    al,BYTE PTR [rax]
   14004a4e8:	(bad)  
   14004a4e9:	(bad)  
   14004a4ea:	(bad)  
   14004a4eb:	inc    DWORD PTR [rcx]
   14004a4ed:	sbb    BYTE PTR [rdx],cl
   14004a4ef:	add    BYTE PTR [rax],bl
   14004a4f1:	adc    BYTE PTR fs:[rax],al
   14004a4f4:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   14004a4f8:	sbb    BYTE PTR [rsi+rcx*1],dh
   14004a4fb:	add    BYTE PTR [rax],bl
   14004a4fd:	xchg   edx,eax
   14004a4fe:	adc    al,0xf0
   14004a500:	adc    ah,al
   14004a502:	adc    BYTE PTR [rax+0x11],dh
   14004a505:	sbb    eax,0x52150008
   14004a50a:	adc    eax,esp
   14004a50c:	(bad)  
   14004a50e:	or     eax,0xa700bc0
   14004a513:	(bad)  
   14004a514:	or     DWORD PTR [rax+0x8],edx
   14004a517:	xor    BYTE PTR [rax],bl
   14004a519:	mov    al,0x2
   14004a51b:	add    BYTE PTR [rax],dh
   14004a51d:	sbb    BYTE PTR [rax+rax*1],al
   14004a520:	(bad)  
   14004a521:	(bad)  
   14004a522:	(bad)  
   14004a523:	call   rcx
   14004a525:	test   DWORD PTR [rbx],eax
   14004a527:	add    bh,bh
   14004a529:	(bad)  
   14004a52a:	(bad)  
   14004a52b:	(bad)  
   14004a52c:	fld    QWORD PTR [rbp+0x10003]
   14004a532:	add    BYTE PTR [rax],al
   14004a534:	in     eax,dx
   14004a535:	test   DWORD PTR [rbx],eax
   14004a537:	add    BYTE PTR [rcx],al
   14004a539:	add    BYTE PTR [rax],al
   14004a53b:	add    ch,bh
   14004a53d:	test   DWORD PTR [rbx],eax
   14004a53f:	add    bh,bh
   14004a541:	(bad)  
   14004a542:	(bad)  
   14004a543:	dec    DWORD PTR [rip+0x4000386]        # 0x14404a8cf
   14004a549:	add    BYTE PTR [rax],al
   14004a54b:	add    BYTE PTR [rcx],bl
   14004a54d:	xchg   BYTE PTR [rbx],al
   14004a54f:	add    bh,bh
   14004a551:	(bad)  
   14004a552:	(bad)  
   14004a553:	jmp    FWORD PTR [rcx]
   14004a555:	xchg   BYTE PTR [rbx],al
   14004a557:	add    BYTE PTR [rsi],al
   14004a559:	add    BYTE PTR [rax],al
   14004a55b:	add    BYTE PTR [rcx],bh
   14004a55d:	xchg   BYTE PTR [rbx],al
   14004a55f:	add    BYTE PTR [rsi],al
   14004a561:	add    BYTE PTR [rax],al
   14004a563:	add    BYTE PTR [rbp-0x7a],al
   14004a566:	add    eax,DWORD PTR [rax]
   14004a568:	or     BYTE PTR [rax],al
   14004a56a:	add    BYTE PTR [rax],al
   14004a56c:	push   rbp
   14004a56d:	xchg   BYTE PTR [rbx],al
   14004a56f:	add    BYTE PTR [rax],cl
   14004a571:	add    BYTE PTR [rax],al
   14004a573:	add    BYTE PTR [rbp-0x7a],ah
   14004a576:	add    eax,DWORD PTR [rax]
   14004a578:	(bad)  
   14004a579:	add    BYTE PTR [rax],al
   14004a57b:	add    BYTE PTR [rbp-0x7a],dh
   14004a57e:	add    eax,DWORD PTR [rax]
   14004a580:	or     eax,DWORD PTR [rax]
   14004a582:	add    BYTE PTR [rax],al
   14004a584:	add    DWORD PTR [rsi+0x60003],0x86910000
   14004a58e:	add    eax,DWORD PTR [rax]
   14004a590:	or     eax,0xa1000000
   14004a595:	xchg   BYTE PTR [rbx],al
   14004a597:	add    BYTE PTR [rsi+rdi*8+0x1],cl
   14004a59b:	add    bh,bh
   14004a59d:	(bad)  
   14004a59e:	(bad)  
   14004a59f:	call   FWORD PTR [rsi+rdi*8+0x1]
   14004a5a6:	add    BYTE PTR [rax],al
   14004a5a8:	ret    
   14004a5a9:	inc    BYTE PTR [rcx]
   14004a5ab:	add    BYTE PTR [rcx],al
   14004a5ad:	add    BYTE PTR [rax],al
   14004a5af:	add    BYTE PTR [rcx],al
   14004a5b1:	inc    DWORD PTR [rcx]
   14004a5b3:	add    BYTE PTR [rdx],al
   14004a5b5:	add    BYTE PTR [rax],al
   14004a5b7:	add    BYTE PTR [rax],cl
   14004a5b9:	inc    DWORD PTR [rcx]
   14004a5bb:	add    BYTE PTR [rbx],al
   14004a5bd:	add    BYTE PTR [rax],al
   14004a5bf:	add    BYTE PTR [rdi],bl
   14004a5c1:	inc    DWORD PTR [rcx]
   14004a5c3:	add    BYTE PTR [rax+rax*1],al
   14004a5c6:	add    BYTE PTR [rax],al
   14004a5c8:	sub    eax,0x60001ff
   14004a5cd:	add    BYTE PTR [rax],al
   14004a5cf:	add    BYTE PTR [rsi-0x1],dl
   14004a5d2:	add    DWORD PTR [rax],eax
   14004a5d4:	(bad)  
   14004a5d5:	add    BYTE PTR [rax],al
   14004a5d7:	add    BYTE PTR [rdi+rdi*8+0x1],dh
   14004a5db:	add    BYTE PTR [rax],cl
   14004a5dd:	add    BYTE PTR [rax],al
   14004a5df:	add    BYTE PTR [rbp+0x90001ff],ch
   14004a5e5:	add    BYTE PTR [rax],al
   14004a5e7:	add    BYTE PTR [rdx+0xa0001ff],dh
   14004a5ed:	add    BYTE PTR [rax],al
   14004a5ef:	add    bh,al
   14004a5f1:	inc    DWORD PTR [rcx]
   14004a5f3:	add    BYTE PTR [rbx],cl
   14004a5f5:	add    BYTE PTR [rax],al
   14004a5f7:	add    ch,dl
   14004a5f9:	inc    DWORD PTR [rcx]
   14004a5fb:	add    BYTE PTR [rip+0xffffffffef000000],cl        # 0x12f04a601
   14004a601:	inc    DWORD PTR [rcx]
   14004a603:	add    bh,bh
   14004a605:	(bad)  
   14004a606:	(bad)  
   14004a607:	call   QWORD PTR [rcx]
   14004a609:	adc    eax,DWORD PTR [rdx]
   14004a60b:	add    BYTE PTR [rdx],cl
   14004a60d:	push   rdx
   14004a60e:	(bad)  
   14004a60f:	xor    BYTE PTR [rax],bl
   14004a611:	mov    al,0x2
   14004a613:	add    BYTE PTR [rax+0x18],ah
   14004a616:	add    al,0x0
   14004a618:	(bad)  
   14004a619:	(bad)  
   14004a61a:	(bad)  
   14004a61b:	jmp    rsp
   14004a61d:	xchg   BYTE PTR [rbx],al
   14004a61f:	add    BYTE PTR [rsp+rcx*1+0x2],ah
   14004a623:	add    bh,bh
   14004a625:	(bad)  
   14004a626:	(bad)  
   14004a627:	inc    DWORD PTR [rsp+rcx*1+0x2]
   14004a62e:	add    BYTE PTR [rax],al
   14004a630:	cwde   
   14004a631:	or     al,0x2
   14004a633:	add    bh,bh
   14004a635:	(bad)  
   14004a636:	(bad)  
   14004a637:	inc    DWORD PTR [rcx]
   14004a639:	sbb    DWORD PTR [rdx],ecx
   14004a63b:	add    BYTE PTR [rcx],bl
   14004a63d:	je     0x14004a648
   14004a63f:	add    BYTE PTR [rcx],bl
   14004a641:	or     BYTE PTR fs:[rax],al
   14004a644:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14004a648:	sbb    DWORD PTR [rsi+rax*1],esi
   14004a64b:	add    BYTE PTR [rcx],bl
   14004a64d:	xor    dl,BYTE PTR [rip+0xc1d01e0]        # 0x14c21a833
   14004a653:	add    BYTE PTR [rip+0x1d001174],bl        # 0x15d04b7cd
   14004a659:	adc    BYTE PTR fs:[rax],al
   14004a65c:	sbb    eax,0x1d000f54
   14004a661:	xor    al,0xe
   14004a663:	add    BYTE PTR [rip+0x17f01992],bl        # 0x157f4bffb
   14004a669:	loopne 0x14004a680
   14004a66b:	rcr    BYTE PTR [rcx],1
   14004a66d:	sbb    eax,DWORD PTR [rsi]
   14004a66f:	add    BYTE PTR [rcx+rax*1],cl
   14004a672:	adc    DWORD PTR [rax],eax
   14004a674:	add    eax,0x3600470
   14004a679:	push   rax
   14004a67a:	add    dh,BYTE PTR [rax]
   14004a67c:	(bad)  
   14004a67d:	jge    0x14004a681
   14004a67f:	add    BYTE PTR [rax+0x0],dh
   14004a682:	add    BYTE PTR [rax],al
   14004a684:	add    DWORD PTR [rsp+rcx*1],ebx
   14004a687:	add    BYTE PTR [rsp+riz*2],bl
   14004a68a:	adc    al,BYTE PTR [rax]
   14004a68c:	sbb    al,0x54
   14004a68e:	adc    DWORD PTR [rax],eax
   14004a690:	sbb    al,0x34
   14004a692:	adc    BYTE PTR [rax],al
   14004a694:	sbb    al,0x92
   14004a696:	sbb    al,dh
   14004a698:	(bad)  
   14004a699:	loopne 0x14004a6af
   14004a69b:	rcl    BYTE PTR [rdx],1
   14004a69d:	rcl    BYTE PTR [rax],0x70
   14004a6a0:	sbb    DWORD PTR [rax],ebx
   14004a6a2:	add    eax,0x5e20900
   14004a6a7:	jo     0x14004a6ad
   14004a6a9:	(bad)  
   14004a6aa:	add    edx,DWORD PTR [rax+0x2]
   14004a6ad:	xor    BYTE PTR [rax],al
   14004a6af:	add    ah,dl
   14004a6b1:	jge    0x14004a6b5
   14004a6b3:	add    BYTE PTR [rax+0x0],ah
   14004a6b6:	add    BYTE PTR [rax],al
   14004a6b8:	sbb    DWORD PTR [rip+0xfffffffff20e0006],ebx        # 0x13212a6c4
   14004a6be:	(bad)  
   14004a6bf:	loopne 0x14004a6c6
   14004a6c1:	jo     0x14004a6c7
   14004a6c3:	(bad)  
   14004a6c4:	add    edx,DWORD PTR [rax+0x2]
   14004a6c7:	xor    ah,dl
   14004a6c9:	jge    0x14004a6cd
   14004a6cb:	add    BYTE PTR [rax+0x0],dh
   14004a6ce:	add    BYTE PTR [rax],al
   14004a6d0:	sbb    DWORD PTR [rsp+rax*1],ebx
   14004a6d3:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d04bb0d
   14004a6d9:	repnz (bad) 
   14004a6db:	jo     0x14004a6b1
   14004a6dd:	jge    0x14004a6e1
   14004a6df:	add    BYTE PTR [rax+0x0],bh
   14004a6e2:	add    BYTE PTR [rax],al
   14004a6e4:	sbb    DWORD PTR [rdi],ebx
   14004a6e6:	(bad)  
   14004a6e7:	add    BYTE PTR [rcx],dl
   14004a6e9:	add    DWORD PTR [rcx],edx
   14004a6eb:	add    BYTE PTR [rip+0x3600470],al        # 0x14364ab61
   14004a6f1:	xor    BYTE PTR [rdx],al
   14004a6f3:	push   rax
   14004a6f4:	(bad)  
   14004a6f5:	jge    0x14004a6f9
   14004a6f7:	add    BYTE PTR [rax+0x0],dh
   14004a6fa:	add    BYTE PTR [rax],al
   14004a6fc:	sbb    DWORD PTR [rip+0x741f000c],ebp        # 0x1b423a70e
   14004a702:	adc    eax,0x14641f00
   14004a707:	add    BYTE PTR [rdi],bl
   14004a709:	xor    al,0x12
   14004a70b:	add    BYTE PTR [rdi],bl
   14004a70d:	mov    dl,0x18
   14004a70f:	lock (bad) 
   14004a711:	loopne 0x14004a727
   14004a713:	rcl    BYTE PTR [rdx],1
   14004a715:	rcl    BYTE PTR [rax],0x50
   14004a718:	(bad)  
   14004a719:	jge    0x14004a71d
   14004a71b:	add    BYTE PTR [rax+0x0],bl
   14004a71e:	add    BYTE PTR [rax],al
   14004a720:	sbb    DWORD PTR [rdx],ebp
   14004a722:	or     eax,DWORD PTR [rax]
   14004a724:	sbb    al,0x34
   14004a726:	(bad)  
   14004a727:	add    BYTE PTR [rcx+rax*1],bl
   14004a72a:	adc    al,0x0
   14004a72c:	adc    al,dh
   14004a72e:	(bad)  
   14004a72f:	loopne 0x14004a73d
   14004a731:	ror    BYTE PTR [rdx],1
   14004a733:	ror    BYTE PTR [rax],0x70
   14004a736:	(bad)  
   14004a737:	(bad)  
   14004a738:	(bad)  
   14004a739:	push   rax
   14004a73a:	add    BYTE PTR [rax],al
   14004a73c:	(bad)  
   14004a73d:	jge    0x14004a741
   14004a73f:	add    BYTE PTR [rax+0x19000000],bl
   14004a745:	sub    cl,BYTE PTR [rbx]
   14004a747:	add    BYTE PTR [rsp+rsi*1],bl
   14004a74a:	and    DWORD PTR [rax],eax
   14004a74c:	sbb    al,0x1
   14004a74e:	sbb    BYTE PTR [rax],al
   14004a750:	adc    al,dh
   14004a752:	(bad)  
   14004a753:	loopne 0x14004a761
   14004a755:	ror    BYTE PTR [rdx],1
   14004a757:	ror    BYTE PTR [rax],0x70
   14004a75a:	(bad)  
   14004a75b:	(bad)  
   14004a75c:	(bad)  
   14004a75d:	push   rax
   14004a75e:	add    BYTE PTR [rax],al
   14004a760:	(bad)  
   14004a761:	jge    0x14004a765
   14004a763:	add    BYTE PTR [rax+0x1000000],dh
   14004a769:	sbb    eax,0x741d000c
   14004a76e:	or     DWORD PTR [rax],eax
   14004a770:	sbb    eax,0x1d000864
   14004a775:	push   rsp
   14004a776:	(bad)  
   14004a777:	add    BYTE PTR [rip+0x1d000634],bl        # 0x15d04adb1
   14004a77d:	adc    bl,BYTE PTR [rcx]
   14004a77f:	lock (bad) 
   14004a781:	loopne 0x14004a798
   14004a783:	rol    BYTE PTR [rax],1
   14004a785:	add    BYTE PTR [rax],al
   14004a787:	add    BYTE PTR [rax],al
   14004a789:	add    BYTE PTR [rax],al
   14004a78b:	add    BYTE PTR [rax+0x21a],cl
   14004a791:	add    BYTE PTR [rax],al
   14004a793:	add    BYTE PTR [rax+0x4a7],ch
	...
   14004a7a5:	add    BYTE PTR [rax],al
   14004a7a7:	add    BYTE PTR [rdx],al
   14004a7a9:	add    BYTE PTR [rax],al
   14004a7ab:	add    al,al
   14004a7ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a7ae:	add    al,0x0
   14004a7b0:	adc    BYTE PTR [rbx+0x4],ch
	...
   14004a7c2:	add    BYTE PTR [rax],al
   14004a7c4:	test   al,0xf2
   14004a7c6:	add    al,0x0
   14004a7c8:	add    BYTE PTR [rax],al
   14004a7ca:	add    BYTE PTR [rax],al
   14004a7cc:	(bad)  
   14004a7cd:	(bad)  
   14004a7ce:	(bad)  
   14004a7cf:	inc    DWORD PTR [rax]
   14004a7d1:	add    BYTE PTR [rax],al
   14004a7d3:	add    BYTE PTR [rax],bl
   14004a7d5:	add    BYTE PTR [rax],al
   14004a7d7:	add    BYTE PTR [rdx+rbx*1+0x2],ah
	...
   14004a7eb:	add    al,ah
   14004a7ed:	test   al,0x2
   14004a7ef:	add    BYTE PTR [rax],al
   14004a7f1:	add    BYTE PTR [rax],al
   14004a7f3:	add    BYTE PTR [rax],cl
   14004a7f5:	test   al,0x4
	...
   14004a807:	add    BYTE PTR [rbx],al
   14004a809:	add    BYTE PTR [rax],al
   14004a80b:	add    BYTE PTR [rax],ch
   14004a80d:	test   al,0x4
   14004a80f:	add    al,ch
   14004a811:	stos   BYTE PTR es:[rdi],al
   14004a812:	add    al,0x0
   14004a814:	adc    BYTE PTR [rbx+0x4],ch
	...
   14004a82a:	add    BYTE PTR [rax],al
   14004a82c:	loopne 0x14004a810
   14004a82e:	add    al,0x0
   14004a830:	add    BYTE PTR [rax],al
   14004a832:	add    BYTE PTR [rax],al
   14004a834:	(bad)  
   14004a835:	(bad)  
   14004a836:	(bad)  
   14004a837:	inc    DWORD PTR [rax]
   14004a839:	add    BYTE PTR [rax],al
   14004a83b:	add    BYTE PTR [rax],bl
   14004a83d:	add    BYTE PTR [rax],al
   14004a83f:	add    BYTE PTR [rax+0x2a8],bl
	...
   14004a851:	add    BYTE PTR [rax],al
   14004a853:	add    al,ah
   14004a855:	test   al,0x2
   14004a857:	add    BYTE PTR [rax],al
   14004a859:	add    BYTE PTR [rax],al
   14004a85b:	add    BYTE PTR [rax-0x58],dh
   14004a85e:	add    al,0x0
	...
   14004a870:	add    eax,DWORD PTR [rax]
   14004a872:	add    BYTE PTR [rax],al
   14004a874:	nop
   14004a875:	test   al,0x4
   14004a877:	add    al,ch
   14004a879:	stos   BYTE PTR es:[rdi],al
   14004a87a:	add    al,0x0
   14004a87c:	adc    BYTE PTR [rbx+0x4],ch
	...
   14004a892:	add    BYTE PTR [rax],al
   14004a894:	or     bl,ah
   14004a896:	add    al,0x0
   14004a898:	add    BYTE PTR [rax],al
   14004a89a:	add    BYTE PTR [rax],al
   14004a89c:	(bad)  
   14004a89d:	(bad)  
   14004a89e:	(bad)  
   14004a89f:	inc    DWORD PTR [rax]
   14004a8a1:	add    BYTE PTR [rax],al
   14004a8a3:	add    BYTE PTR [rax],bl
   14004a8a5:	add    BYTE PTR [rax],al
   14004a8a7:	add    BYTE PTR [rax+rbp*4+0x2],bh
	...
   14004a8ba:	add    BYTE PTR [rax],al
   14004a8bc:	adc    dh,al
   14004a8be:	add    al,BYTE PTR [rax]
   14004a8c0:	add    BYTE PTR [rax],al
   14004a8c2:	add    BYTE PTR [rax],al
   14004a8c4:	fsubr  DWORD PTR [rax+0x4]
	...
   14004a8d6:	add    BYTE PTR [rax],al
   14004a8d8:	add    al,BYTE PTR [rax]
   14004a8da:	add    BYTE PTR [rax],al
   14004a8dc:	lock test al,0x4
   14004a8df:	add    BYTE PTR [rax],dl
   14004a8e1:	stos   DWORD PTR es:[rdi],eax
   14004a8e2:	add    al,0x0
	...
   14004a8f4:	xor    bl,ah
   14004a8f6:	add    al,0x0
   14004a8f8:	add    BYTE PTR [rax],al
   14004a8fa:	add    BYTE PTR [rax],al
   14004a8fc:	(bad)  
   14004a8fd:	(bad)  
   14004a8fe:	(bad)  
   14004a8ff:	inc    DWORD PTR [rax]
   14004a901:	add    BYTE PTR [rax],al
   14004a903:	add    BYTE PTR [rax],bl
   14004a905:	add    BYTE PTR [rax],al
   14004a907:	add    ah,ch
   14004a909:	(bad)
	...
   14004a91c:	clc    
   14004a91d:	xor    BYTE PTR [rax],al
   14004a91f:	add    BYTE PTR [rax],al
   14004a921:	add    BYTE PTR [rax],al
   14004a923:	add    BYTE PTR [rax+0x4a9],al
	...
   14004a941:	add    BYTE PTR [rax],al
   14004a943:	add    al,ch
   14004a945:	test   eax,0x4
	...
   14004a95a:	add    BYTE PTR [rax],al
   14004a95c:	mov    eax,0x4e4
   14004a961:	add    BYTE PTR [rax],al
   14004a963:	add    bh,bh
   14004a965:	(bad)  
   14004a966:	(bad)  
   14004a967:	inc    DWORD PTR [rax]
   14004a969:	add    BYTE PTR [rax],al
   14004a96b:	add    BYTE PTR [rdx+rax*1],dl
   14004a96e:	add    BYTE PTR [rax],al
   14004a970:	mov    al,0x2e
	...
   14004a97e:	add    BYTE PTR [rax],al
   14004a980:	add    al,BYTE PTR [rax]
   14004a982:	add    BYTE PTR [rax],al
   14004a984:	cwde   
   14004a985:	test   eax,0xa9c00004
   14004a98a:	add    al,0x0
	...
   14004a99c:	(bad)  
   14004a99d:	jmp    0x14004a9a3
   14004a99f:	add    BYTE PTR [rax],al
   14004a9a1:	add    BYTE PTR [rax],al
   14004a9a3:	add    bh,bh
   14004a9a5:	(bad)  
   14004a9a6:	(bad)  
   14004a9a7:	inc    DWORD PTR [rax]
   14004a9a9:	add    BYTE PTR [rax],al
   14004a9ab:	add    BYTE PTR [rax],bh
   14004a9ad:	add    BYTE PTR [rax],al
   14004a9af:	add    ah,dh
   14004a9b1:	(bad)  
	...
   14004a9c2:	add    BYTE PTR [rax],al
   14004a9c4:	sub    ah,ch
   14004a9c6:	add    al,0x0
   14004a9c8:	add    BYTE PTR [rax],al
   14004a9ca:	add    BYTE PTR [rax],al
   14004a9cc:	(bad)  
   14004a9cd:	(bad)  
   14004a9ce:	(bad)  
   14004a9cf:	inc    DWORD PTR [rax]
   14004a9d1:	add    BYTE PTR [rax],al
   14004a9d3:	add    BYTE PTR [rax],cl
	...
   14004a9e5:	add    BYTE PTR [rax],al
   14004a9e7:	add    BYTE PTR [rdx],al
   14004a9e9:	add    BYTE PTR [rax],al
   14004a9eb:	add    BYTE PTR [rax-0x57],bl
   14004a9ee:	add    al,0x0
   14004a9f0:	shr    BYTE PTR [rcx+0x4],0x0
	...
   14004aa0b:	add    BYTE PTR [rax],ah
   14004aa0d:	stos   BYTE PTR es:[rdi],al
   14004aa0e:	add    al,0x0
	...
   14004aa20:	add    al,BYTE PTR [rax]
   14004aa22:	add    BYTE PTR [rax],al
   14004aa24:	cmp    BYTE PTR [rdx-0x563ffffc],ch
   14004aa2a:	add    al,0x0
	...
   14004aa3c:	(bad)  
   14004aa3d:	in     eax,dx
   14004aa3e:	add    al,0x0
   14004aa40:	add    BYTE PTR [rax],al
   14004aa42:	add    BYTE PTR [rax],al
   14004aa44:	(bad)  
   14004aa45:	(bad)  
   14004aa46:	(bad)  
   14004aa47:	inc    DWORD PTR [rax]
   14004aa49:	add    BYTE PTR [rax],al
   14004aa4b:	add    BYTE PTR [rax],cl
	...
   14004aa5d:	add    BYTE PTR [rax],al
   14004aa5f:	add    BYTE PTR [rcx],al
   14004aa61:	add    BYTE PTR [rax],al
   14004aa63:	add    BYTE PTR [rax+0x4aa],dl
	...
   14004aa79:	add    BYTE PTR [rax],al
   14004aa7b:	add    BYTE PTR [rax-0x56],ah
   14004aa7e:	add    al,0x0
	...
   14004aa94:	out    dx,al
   14004aa96:	add    al,0x0
   14004aa98:	add    BYTE PTR [rax],al
   14004aa9a:	add    BYTE PTR [rax],al
   14004aa9c:	(bad)  
   14004aa9d:	(bad)  
   14004aa9e:	(bad)  
   14004aa9f:	inc    DWORD PTR [rax]
   14004aaa1:	add    BYTE PTR [rax],al
   14004aaa3:	add    BYTE PTR [rax+rax*1],al
	...
   14004aac2:	add    BYTE PTR [rax],al
   14004aac4:	fsubr  DWORD PTR [rdx+0x4]
	...
   14004aad6:	add    BYTE PTR [rax],al
   14004aad8:	add    DWORD PTR [rax],eax
   14004aada:	add    BYTE PTR [rax],al
   14004aadc:	shr    BYTE PTR [rcx+0x4],0x0
	...
   14004aaeb:	add    BYTE PTR [rax+0x4ee],bh
   14004aaf1:	add    BYTE PTR [rax],al
   14004aaf3:	add    bh,bh
   14004aaf5:	(bad)  
   14004aaf6:	(bad)  
   14004aaf7:	inc    DWORD PTR [rax]
   14004aaf9:	add    BYTE PTR [rax],al
   14004aafb:	add    BYTE PTR [rax],bl
   14004aafd:	add    BYTE PTR [rax],al
   14004aaff:	add    BYTE PTR [rsp+rbp*2+0x0],cl
	...
   14004ab13:	add    BYTE PTR [rax+0x4ee],dl
   14004ab19:	add    BYTE PTR [rax],al
   14004ab1b:	add    bh,bh
   14004ab1d:	(bad)  
   14004ab1e:	(bad)  
   14004ab1f:	inc    DWORD PTR [rax]
   14004ab21:	add    BYTE PTR [rax],al
   14004ab23:	add    BYTE PTR [rax],bl
   14004ab25:	add    BYTE PTR [rax],al
   14004ab27:	add    BYTE PTR [rax+0x64],bl
   14004ab2a:	add    al,BYTE PTR [rax]
	...
   14004ab3c:	loopne 0x14004ab2c
   14004ab3e:	add    al,0x0
   14004ab40:	add    BYTE PTR [rax],al
   14004ab42:	add    BYTE PTR [rax],al
   14004ab44:	(bad)  
   14004ab45:	(bad)  
   14004ab46:	(bad)  
   14004ab47:	inc    DWORD PTR [rax]
   14004ab49:	add    BYTE PTR [rax],al
   14004ab4b:	add    BYTE PTR [rax],bl
   14004ab4d:	add    BYTE PTR [rax],al
   14004ab4f:	add    BYTE PTR [rax],dl
   14004ab51:	ins    BYTE PTR es:[rdi],dx
	...
   14004ab62:	add    BYTE PTR [rax],al
   14004ab64:	fsubr  DWORD PTR [rbx+0x0]
   14004ab67:	add    BYTE PTR [rax],al
   14004ab69:	add    BYTE PTR [rax],al
   14004ab6b:	add    BYTE PTR [rax+0x4ab],al
	...
   14004ab7d:	add    BYTE PTR [rax],al
   14004ab7f:	add    BYTE PTR [rbx],al
   14004ab81:	add    BYTE PTR [rax],al
   14004ab83:	add    BYTE PTR [rax],bh
   14004ab85:	stos   DWORD PTR es:[rdi],eax
   14004ab86:	add    al,0x0
   14004ab88:	call   0x15004b037
   14004ab8d:	stos   DWORD PTR es:[rdi],eax
   14004ab8e:	add    al,0x0
	...
   14004aba0:	add    DWORD PTR [rax],eax
   14004aba2:	add    BYTE PTR [rax],al
   14004aba4:	shr    bh,1
   14004aba6:	add    al,0x0
   14004aba8:	add    BYTE PTR [rax],al
   14004abaa:	add    BYTE PTR [rax],al
   14004abac:	(bad)  
   14004abad:	(bad)  
   14004abae:	(bad)  
   14004abaf:	inc    DWORD PTR [rax]
   14004abb1:	add    BYTE PTR [rax],al
   14004abb3:	add    BYTE PTR [rax+rax*1],al
	...
   14004abd2:	add    BYTE PTR [rax],al
   14004abd4:	call   0x14004b084
	...
   14004abe5:	add    BYTE PTR [rax],al
   14004abe7:	add    BYTE PTR [rcx],al
   14004abe9:	add    BYTE PTR [rax],al
   14004abeb:	add    BYTE PTR [rax+0x4ab],ah
	...
   14004ac01:	add    BYTE PTR [rax],al
   14004ac03:	add    BYTE PTR [rax],bl
   14004ac05:	lods   al,BYTE PTR ds:[rsi]
   14004ac06:	add    al,0x0
	...
   14004ac18:	add    al,BYTE PTR [rax]
   14004ac1a:	add    BYTE PTR [rax],al
   14004ac1c:	xor    BYTE PTR [rsp+rax*1+0x4a9c000],ch
	...
   14004ac33:	add    BYTE PTR [rax+0x4f0],dl
   14004ac39:	add    BYTE PTR [rax],al
   14004ac3b:	add    bh,bh
   14004ac3d:	(bad)  
   14004ac3e:	(bad)  
   14004ac3f:	inc    DWORD PTR [rax]
   14004ac41:	add    BYTE PTR [rax],al
   14004ac43:	add    BYTE PTR [rax],cl
	...
   14004ac55:	add    BYTE PTR [rax],al
   14004ac57:	add    BYTE PTR [rcx],al
   14004ac59:	add    BYTE PTR [rax],al
   14004ac5b:	add    BYTE PTR [rax+0x4ac],cl
	...
   14004ac71:	add    BYTE PTR [rax],al
   14004ac73:	add    BYTE PTR [rax-0x54],bl
   14004ac76:	add    al,0x0
	...
   14004ac88:	add    DWORD PTR [rax],eax
   14004ac8a:	add    BYTE PTR [rax],al
   14004ac8c:	jo     0x14004ac80
   14004ac8e:	add    al,0x0
   14004ac90:	add    BYTE PTR [rax],al
   14004ac92:	add    BYTE PTR [rax],al
   14004ac94:	(bad)  
   14004ac95:	(bad)  
   14004ac96:	(bad)  
   14004ac97:	inc    DWORD PTR [rax]
   14004ac99:	add    BYTE PTR [rax],al
   14004ac9b:	add    BYTE PTR [rax+rax*1],al
	...
   14004acb2:	add    BYTE PTR [rax],al
   14004acb4:	rex
   14004acb5:	repz add al,0x0
   14004acb8:	add    BYTE PTR [rax],al
   14004acba:	add    BYTE PTR [rax],al
   14004acbc:	(bad)  
   14004acbd:	(bad)  
   14004acbe:	(bad)  
   14004acbf:	inc    DWORD PTR [rax]
   14004acc1:	add    BYTE PTR [rax],al
   14004acc3:	add    BYTE PTR [rax],cl
	...
   14004ace1:	add    BYTE PTR [rax],al
   14004ace3:	add    al,bh
   14004ace5:	lods   al,BYTE PTR ds:[rsi]
   14004ace6:	add    al,0x0
	...
   14004acf8:	add    al,BYTE PTR [rax]
   14004acfa:	add    BYTE PTR [rax],al
   14004acfc:	mov    al,0xac
   14004acfe:	add    al,0x0
   14004ad00:	shr    BYTE PTR [rcx+0x4],0x0
	...
   14004ad0f:	add    BYTE PTR [rdx],al
   14004ad11:	add    BYTE PTR [rax],al
   14004ad13:	add    BYTE PTR [rax-0x53],cl
   14004ad16:	add    al,0x0
   14004ad18:	shr    BYTE PTR [rcx+0x4],0x0
	...
   14004ad33:	add    BYTE PTR [rax],dl
   14004ad35:	lods   eax,DWORD PTR ds:[rsi]
   14004ad36:	add    al,0x0
	...
   14004ad4c:	mov    eax,0x4f5
   14004ad51:	add    BYTE PTR [rax],al
   14004ad53:	add    bh,bh
   14004ad55:	(bad)  
   14004ad56:	(bad)  
   14004ad57:	inc    DWORD PTR [rax]
   14004ad59:	add    BYTE PTR [rax],al
   14004ad5b:	add    BYTE PTR [rax],cl
	...
   14004ad71:	add    BYTE PTR [rax],al
   14004ad73:	add    BYTE PTR [rax-0xa],ch
   14004ad76:	add    al,0x0
   14004ad78:	add    BYTE PTR [rax],al
   14004ad7a:	add    BYTE PTR [rax],al
   14004ad7c:	(bad)  
   14004ad7d:	(bad)  
   14004ad7e:	(bad)  
   14004ad7f:	inc    DWORD PTR [rax]
   14004ad81:	add    BYTE PTR [rax],al
   14004ad83:	add    BYTE PTR [rax],cl
	...
   14004ada1:	add    BYTE PTR [rax],al
   14004ada3:	add    BYTE PTR [rax+0x4ad],bh
	...
   14004adb5:	add    BYTE PTR [rax],al
   14004adb7:	add    BYTE PTR [rdx],al
   14004adb9:	add    BYTE PTR [rax],al
   14004adbb:	add    BYTE PTR [rax-0x53],dh
   14004adbe:	add    al,0x0
   14004adc0:	shr    BYTE PTR [rcx+0x4],0x0
	...
   14004adcf:	add    BYTE PTR [rax-0x52],ah
   14004add2:	add    al,0x0
	...
   14004addc:	rex.WX mov bpl,0x4
   14004addf:	add    BYTE PTR [rax],al
   14004ade1:	nop
   14004ade2:	add    eax,DWORD PTR [rax]
   14004ade4:	nop
   14004ade5:	scas   eax,DWORD PTR es:[rdi]
   14004ade6:	add    al,0x0
	...
   14004adf0:	clc    
   14004adf1:	mov    ch,0x4
   14004adf3:	add    BYTE PTR [rax],dh
   14004adf5:	xchg   ecx,eax
   14004adf6:	add    eax,DWORD PTR [rax]
   14004adf8:	movabs al,ds:0x4b4
   14004ae01:	add    BYTE PTR [rax],al
   14004ae03:	add    BYTE PTR [rsi],dh
   14004ae05:	mov    dh,0x4
   14004ae07:	add    BYTE PTR [rax-0x6a],al
   14004ae0a:	add    eax,DWORD PTR [rax]
   14004ae0c:	mov    eax,0x4b4
   14004ae11:	add    BYTE PTR [rax],al
   14004ae13:	add    BYTE PTR [rax],al
   14004ae15:	add    BYTE PTR [rax],al
   14004ae17:	add    BYTE PTR [rsi-0x4a],dh
   14004ae1a:	add    al,0x0
   14004ae1c:	pop    rax
   14004ae1d:	xchg   esi,eax
   14004ae1e:	add    eax,DWORD PTR [rax]
   14004ae20:	call   0x14004b2d9
   14004ae25:	add    BYTE PTR [rax],al
   14004ae27:	add    BYTE PTR [rax],al
   14004ae29:	add    BYTE PTR [rax],al
   14004ae2b:	add    dh,ah
   14004ae2d:	mov    dh,0x4
   14004ae2f:	add    BYTE PTR [rax+0x78000396],cl
   14004ae35:	mov    ah,0x4
	...
   14004ae3f:	add    BYTE PTR [rsi],al
   14004ae41:	mov    bh,0x4
   14004ae43:	add    BYTE PTR [rax],bl
   14004ae45:	xchg   esi,eax
   14004ae46:	add    eax,DWORD PTR [rax]
	...
   14004ae60:	sbb    BYTE PTR [rbp+0x4],dh
   14004ae66:	add    BYTE PTR [rax],al
   14004ae68:	sub    al,0xb5
   14004ae6a:	add    al,0x0
   14004ae6c:	add    BYTE PTR [rax],al
   14004ae6e:	add    BYTE PTR [rax],al
   14004ae70:	cmp    al,0xb5
   14004ae72:	add    al,0x0
   14004ae74:	add    BYTE PTR [rax],al
   14004ae76:	add    BYTE PTR [rax],al
   14004ae78:	mov    esi,0x4c2
   14004ae7d:	add    BYTE PTR [rax],al
   14004ae7f:	add    dh,dl
   14004ae81:	ret    0x4
   14004ae84:	add    BYTE PTR [rax],al
   14004ae86:	add    BYTE PTR [rax],al
   14004ae88:	out    dx,al
   14004ae89:	ret    0x4
   14004ae8c:	add    BYTE PTR [rax],al
   14004ae8e:	add    BYTE PTR [rax],al
   14004ae90:	inc    dl
   14004ae92:	add    al,0x0
   14004ae94:	add    BYTE PTR [rax],al
   14004ae96:	add    BYTE PTR [rax],al
   14004ae98:	(bad)  
   14004ae99:	ret    
   14004ae9a:	add    al,0x0
   14004ae9c:	add    BYTE PTR [rax],al
   14004ae9e:	add    BYTE PTR [rax],al
   14004aea0:	and    al,0xc3
   14004aea2:	add    al,0x0
   14004aea4:	add    BYTE PTR [rax],al
   14004aea6:	add    BYTE PTR [rax],al
   14004aea8:	cmp    al,0xc3
   14004aeaa:	add    al,0x0
   14004aeac:	add    BYTE PTR [rax],al
   14004aeae:	add    BYTE PTR [rax],al
   14004aeb0:	rex.WX ret 
   14004aeb2:	add    al,0x0
   14004aeb4:	add    BYTE PTR [rax],al
   14004aeb6:	add    BYTE PTR [rax],al
   14004aeb8:	(bad)  
   14004aeb9:	ret    
   14004aeba:	add    al,0x0
   14004aebc:	add    BYTE PTR [rax],al
   14004aebe:	add    BYTE PTR [rax],al
   14004aec0:	scas   al,BYTE PTR es:[rdi]
   14004aec1:	ret    0x4
   14004aec4:	add    BYTE PTR [rax],al
   14004aec6:	add    BYTE PTR [rax],al
   14004aec8:	(bad)  
   14004aec9:	mov    eax,0x4
   14004aece:	add    BYTE PTR [rax],al
   14004aed0:	(bad)  
   14004aed1:	mov    eax,0x4
   14004aed6:	add    BYTE PTR [rax],al
   14004aed8:	mov    dh,0xb8
   14004aeda:	add    al,0x0
   14004aedc:	add    BYTE PTR [rax],al
   14004aede:	add    BYTE PTR [rax],al
   14004aee0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004aee1:	mov    eax,0x4
   14004aee6:	add    BYTE PTR [rax],al
   14004aee8:	xchg   edx,eax
   14004aee9:	mov    eax,0x4
   14004aeee:	add    BYTE PTR [rax],al
   14004aef0:	jl     0x14004aeaa
   14004aef2:	add    al,0x0
   14004aef4:	add    BYTE PTR [rax],al
   14004aef6:	add    BYTE PTR [rax],al
   14004aef8:	push   0xffffffffffffffb8
   14004aefa:	add    al,0x0
   14004aefc:	add    BYTE PTR [rax],al
   14004aefe:	add    BYTE PTR [rax],al
   14004af00:	pop    rax
   14004af01:	mov    eax,0x4
   14004af06:	add    BYTE PTR [rax],al
   14004af08:	rex.X mov eax,0x4
   14004af0e:	add    BYTE PTR [rax],al
   14004af10:	xor    bh,BYTE PTR [rax+0x4]
   14004af16:	add    BYTE PTR [rax],al
   14004af18:	and    bh,BYTE PTR [rax+0x4]
   14004af1e:	add    BYTE PTR [rax],al
   14004af20:	adc    bh,BYTE PTR [rax+0x4]
   14004af26:	add    BYTE PTR [rax],al
   14004af28:	cld    
   14004af29:	mov    bh,0x4
   14004af2b:	add    BYTE PTR [rax],al
   14004af2d:	add    BYTE PTR [rax],al
   14004af2f:	add    dl,ch
   14004af31:	mov    bh,0x4
   14004af33:	add    BYTE PTR [rax],al
   14004af35:	add    BYTE PTR [rax],al
   14004af37:	add    BYTE PTR [rdx],dl
   14004af39:	mov    bh,0x4
   14004af3b:	add    BYTE PTR [rax],al
   14004af3d:	add    BYTE PTR [rax],al
   14004af3f:	add    BYTE PTR [rsi],ah
   14004af41:	mov    bh,0x4
   14004af43:	add    BYTE PTR [rax],al
   14004af45:	add    BYTE PTR [rax],al
   14004af47:	add    BYTE PTR [rdi+rsi*4],bh
   14004af4a:	add    al,0x0
   14004af4c:	add    BYTE PTR [rax],al
   14004af4e:	add    BYTE PTR [rax],al
   14004af50:	push   rsp
   14004af51:	mov    bh,0x4
   14004af53:	add    BYTE PTR [rax],al
   14004af55:	add    BYTE PTR [rax],al
   14004af57:	add    BYTE PTR [rdi+rsi*4+0x4],ch
   14004af5b:	add    BYTE PTR [rax],al
   14004af5d:	add    BYTE PTR [rax],al
   14004af5f:	add    BYTE PTR [rax+0x4b7],al
   14004af65:	add    BYTE PTR [rax],al
   14004af67:	add    BYTE PTR [rsi+0x4b7],dl
   14004af6d:	add    BYTE PTR [rax],al
   14004af6f:	add    BYTE PTR [rsi+0x4b7],ch
   14004af75:	add    BYTE PTR [rax],al
   14004af77:	add    al,al
   14004af79:	mov    bh,0x4
   14004af7b:	add    BYTE PTR [rax],al
   14004af7d:	add    BYTE PTR [rax],al
   14004af7f:	add    al,bl
   14004af81:	mov    bh,0x4
	...
   14004af8f:	add    BYTE PTR [rbx+rax*8+0x4],ah
   14004af96:	add    BYTE PTR [rax],al
   14004af98:	mov    dl,0xc3
   14004af9a:	add    al,0x0
   14004af9c:	add    BYTE PTR [rax],al
   14004af9e:	add    BYTE PTR [rax],al
   14004afa0:	rol    bl,0x4
   14004afa3:	add    BYTE PTR [rax],al
   14004afa5:	add    BYTE PTR [rax],al
   14004afa7:	add    dh,cl
   14004afa9:	ret    
   14004afaa:	add    al,0x0
   14004afac:	add    BYTE PTR [rax],al
   14004afae:	add    BYTE PTR [rax],al
   14004afb0:	loopne 0x14004af75
   14004afb2:	add    al,0x0
   14004afb4:	add    BYTE PTR [rax],al
   14004afb6:	add    BYTE PTR [rax],al
   14004afb8:	cld    
   14004afb9:	ret    
   14004afba:	add    al,0x0
   14004afbc:	add    BYTE PTR [rax],al
   14004afbe:	add    BYTE PTR [rax],al
   14004afc0:	(bad)  
   14004afc1:	(bad)  
   14004afc2:	add    al,0x0
   14004afc4:	add    BYTE PTR [rax],al
   14004afc6:	add    BYTE PTR [rax],al
   14004afc8:	sbb    al,0xc4
   14004afca:	add    al,0x0
   14004afcc:	add    BYTE PTR [rax],al
   14004afce:	add    BYTE PTR [rax],al
   14004afd0:	xor    al,0xc4
   14004afd2:	add    al,0x0
   14004afd4:	add    BYTE PTR [rax],al
   14004afd6:	add    BYTE PTR [rax],al
   14004afd8:	rex.WR (bad) 
   14004afda:	add    al,0x0
   14004afdc:	add    BYTE PTR [rax],al
   14004afde:	add    BYTE PTR [rax],al
   14004afe0:	(bad)  
   14004afe1:	(bad)  
   14004afe2:	add    al,0x0
   14004afe4:	add    BYTE PTR [rax],al
   14004afe6:	add    BYTE PTR [rax],al
   14004afe8:	jo     0x14004afae
   14004afea:	add    al,0x0
   14004afec:	add    BYTE PTR [rax],al
   14004afee:	add    BYTE PTR [rax],al
   14004aff0:	add    ah,0x4
   14004aff3:	add    BYTE PTR [rax],al
   14004aff5:	add    BYTE PTR [rax],al
   14004aff7:	add    BYTE PTR [rsi+0x4c4],cl
   14004affd:	add    BYTE PTR [rax],al
   14004afff:	add    dl,ah
   14004b001:	mov    eax,0x4
   14004b006:	add    BYTE PTR [rax],al
   14004b008:	hlt    
   14004b009:	mov    eax,0x4
   14004b00e:	add    BYTE PTR [rax],al
   14004b010:	or     al,0xb9
   14004b012:	add    al,0x0
   14004b014:	add    BYTE PTR [rax],al
   14004b016:	add    BYTE PTR [rax],al
   14004b018:	and    al,0xb9
   14004b01a:	add    al,0x0
   14004b01c:	add    BYTE PTR [rax],al
   14004b01e:	add    BYTE PTR [rax],al
   14004b020:	xor    al,0xb9
   14004b022:	add    al,0x0
   14004b024:	add    BYTE PTR [rax],al
   14004b026:	add    BYTE PTR [rax],al
   14004b028:	rex.R mov ecx,0x4
   14004b02e:	add    BYTE PTR [rax],al
   14004b030:	push   rsp
   14004b031:	mov    ecx,0x4
   14004b036:	add    BYTE PTR [rax],al
   14004b038:	push   0x4b9
   14004b03d:	add    BYTE PTR [rax],al
   14004b03f:	add    BYTE PTR [rsi-0x47],bh
   14004b042:	add    al,0x0
   14004b044:	add    BYTE PTR [rax],al
   14004b046:	add    BYTE PTR [rax],al
   14004b048:	mov    WORD PTR [rcx+0x4],?
   14004b04e:	add    BYTE PTR [rax],al
   14004b050:	movabs ds:0xb4000000000004b9,al
   14004b059:	mov    ecx,0x4
   14004b05e:	add    BYTE PTR [rax],al
   14004b060:	retf   0x4b9
   14004b063:	add    BYTE PTR [rax],al
   14004b065:	add    BYTE PTR [rax],al
   14004b067:	add    dl,bl
   14004b069:	mov    ecx,0x4
   14004b06e:	add    BYTE PTR [rax],al
   14004b070:	out    0xb9,al
   14004b072:	add    al,0x0
   14004b074:	add    BYTE PTR [rax],al
   14004b076:	add    BYTE PTR [rax],al
   14004b078:	cld    
   14004b079:	mov    ecx,0x4
   14004b07e:	add    BYTE PTR [rax],al
   14004b080:	(bad)  
   14004b081:	mov    edx,0x4
   14004b086:	add    BYTE PTR [rax],al
   14004b088:	sbb    al,0xba
   14004b08a:	add    al,0x0
   14004b08c:	add    BYTE PTR [rax],al
   14004b08e:	add    BYTE PTR [rax],al
   14004b090:	rex.R mov edx,0x4
   14004b096:	add    BYTE PTR [rax],al
   14004b098:	pop    rsp
   14004b099:	mov    edx,0x4
   14004b09e:	add    BYTE PTR [rax],al
   14004b0a0:	jb     0x14004b05c
   14004b0a2:	add    al,0x0
   14004b0a4:	add    BYTE PTR [rax],al
   14004b0a6:	add    BYTE PTR [rax],al
   14004b0a8:	test   BYTE PTR [rdx+0x4],bh
   14004b0ae:	add    BYTE PTR [rax],al
   14004b0b0:	sahf   
   14004b0b1:	mov    edx,0x4
   14004b0b6:	add    BYTE PTR [rax],al
   14004b0b8:	mov    eax,0x4ba
   14004b0bd:	add    BYTE PTR [rax],al
   14004b0bf:	add    dl,cl
   14004b0c1:	mov    edx,0x4
   14004b0c6:	add    BYTE PTR [rax],al
   14004b0c8:	in     al,0xba
   14004b0ca:	add    al,0x0
   14004b0cc:	add    BYTE PTR [rax],al
   14004b0ce:	add    BYTE PTR [rax],al
   14004b0d0:	(bad)  
   14004b0d1:	mov    edx,0x4
   14004b0d6:	add    BYTE PTR [rax],al
   14004b0d8:	or     al,0xbb
   14004b0da:	add    al,0x0
   14004b0dc:	add    BYTE PTR [rax],al
   14004b0de:	add    BYTE PTR [rax],al
   14004b0e0:	sbb    BYTE PTR [rbx+0x4],bh
   14004b0e6:	add    BYTE PTR [rax],al
   14004b0e8:	sub    al,0xbb
   14004b0ea:	add    al,0x0
   14004b0ec:	add    BYTE PTR [rax],al
   14004b0ee:	add    BYTE PTR [rax],al
   14004b0f0:	movabs rbx,0xbb5c000000000004
   14004b0fa:	add    al,0x0
   14004b0fc:	add    BYTE PTR [rax],al
   14004b0fe:	add    BYTE PTR [rax],al
   14004b100:	jb     0x14004b0bd
   14004b102:	add    al,0x0
   14004b104:	add    BYTE PTR [rax],al
   14004b106:	add    BYTE PTR [rax],al
   14004b108:	(bad)  
   14004b109:	mov    ebx,0x4
   14004b10e:	add    BYTE PTR [rax],al
   14004b110:	xchg   esp,eax
   14004b111:	mov    ebx,0x4
   14004b116:	add    BYTE PTR [rax],al
   14004b118:	movabs al,ds:0xac000000000004bb
   14004b121:	mov    ebx,0x4
   14004b126:	add    BYTE PTR [rax],al
   14004b128:	sar    BYTE PTR [rbx+0x4],0x0
   14004b12f:	add    BYTE PTR [rax+0x4c4],ah
   14004b135:	add    BYTE PTR [rax],al
   14004b137:	add    dh,ah
   14004b139:	mov    ebx,0x4
   14004b13e:	add    BYTE PTR [rax],al
   14004b140:	add    BYTE PTR [rsp+rax*1+0x0],bh
   14004b147:	add    BYTE PTR [rsp+rdi*4],dl
   14004b14a:	add    al,0x0
   14004b14c:	add    BYTE PTR [rax],al
   14004b14e:	add    BYTE PTR [rax],al
   14004b150:	xor    BYTE PTR [rsp+rax*1+0x0],bh
   14004b157:	add    BYTE PTR [rsp+rdi*4],bh
   14004b15a:	add    al,0x0
   14004b15c:	add    BYTE PTR [rax],al
   14004b15e:	add    BYTE PTR [rax],al
   14004b160:	rex.WX movabs rsp,0xbc58000000000004
   14004b16a:	add    al,0x0
   14004b16c:	add    BYTE PTR [rax],al
   14004b16e:	add    BYTE PTR [rax],al
   14004b170:	(bad)  
   14004b171:	mov    esp,0x4
   14004b176:	add    BYTE PTR [rax],al
   14004b178:	jbe    0x14004b136
   14004b17a:	add    al,0x0
   14004b17c:	add    BYTE PTR [rax],al
   14004b17e:	add    BYTE PTR [rax],al
   14004b180:	mov    bh,BYTE PTR [rsp+rax*1+0x0]
   14004b187:	add    BYTE PTR [rsi+0x4bc],bl
   14004b18d:	add    BYTE PTR [rax],al
   14004b18f:	add    BYTE PTR [rax+0x4bc],dh
   14004b195:	add    BYTE PTR [rax],al
   14004b197:	add    BYTE PTR [rdx+0x4bc],bh
   14004b19d:	add    BYTE PTR [rax],al
   14004b19f:	add    dh,al
   14004b1a1:	mov    esp,0x4
   14004b1a6:	add    BYTE PTR [rax],al
   14004b1a8:	sar    BYTE PTR [rsp+rax*1+0x0],cl
   14004b1af:	add    al,ah
   14004b1b1:	mov    esp,0x4
   14004b1b6:	add    BYTE PTR [rax],al
   14004b1b8:	repnz mov esp,0x4
   14004b1be:	add    BYTE PTR [rax],al
   14004b1c0:	or     BYTE PTR [rbp+0x4],bh
   14004b1c6:	add    BYTE PTR [rax],al
   14004b1c8:	sbb    BYTE PTR [rbp+0x4],bh
   14004b1ce:	add    BYTE PTR [rax],al
   14004b1d0:	es mov ebp,0x4
   14004b1d6:	add    BYTE PTR [rax],al
   14004b1d8:	ss mov ebp,0x4
   14004b1de:	add    BYTE PTR [rax],al
   14004b1e0:	rex.WX movabs rbp,0xbd5a000000000004
   14004b1ea:	add    al,0x0
   14004b1ec:	add    BYTE PTR [rax],al
   14004b1ee:	add    BYTE PTR [rax],al
   14004b1f0:	push   0xffffffffffffffbd
   14004b1f2:	add    al,0x0
   14004b1f4:	add    BYTE PTR [rax],al
   14004b1f6:	add    BYTE PTR [rax],al
   14004b1f8:	jl     0x14004b1b7
   14004b1fa:	add    al,0x0
   14004b1fc:	add    BYTE PTR [rax],al
   14004b1fe:	add    BYTE PTR [rax],al
   14004b200:	mov    bh,BYTE PTR [rbp+0x4]
   14004b206:	add    BYTE PTR [rax],al
   14004b208:	(bad)  
   14004b209:	mov    ebp,0x4
   14004b20e:	add    BYTE PTR [rax],al
   14004b210:	lods   al,BYTE PTR ds:[rsi]
   14004b211:	mov    ebp,0x4
   14004b216:	add    BYTE PTR [rax],al
   14004b218:	mov    esp,0x4bd
   14004b21d:	add    BYTE PTR [rax],al
   14004b21f:	add    ah,cl
   14004b221:	mov    ebp,0x4
   14004b226:	add    BYTE PTR [rax],al
   14004b228:	loop   0x14004b1e7
   14004b22a:	add    al,0x0
   14004b22c:	add    BYTE PTR [rax],al
   14004b22e:	add    BYTE PTR [rax],al
   14004b230:	lock mov ebp,0x4
   14004b236:	add    BYTE PTR [rax],al
   14004b238:	add    al,0xbe
   14004b23a:	add    al,0x0
   14004b23c:	add    BYTE PTR [rax],al
   14004b23e:	add    BYTE PTR [rax],al
   14004b240:	(bad)  
   14004b241:	mov    esi,0x4
   14004b246:	add    BYTE PTR [rax],al
   14004b248:	cmp    BYTE PTR [rsi+0x4],bh
   14004b24e:	add    BYTE PTR [rax],al
   14004b250:	rex.WX movabs rsi,0xbe5c000000000004
   14004b25a:	add    al,0x0
   14004b25c:	add    BYTE PTR [rax],al
   14004b25e:	add    BYTE PTR [rax],al
   14004b260:	ins    BYTE PTR es:[rdi],dx
   14004b261:	mov    esi,0x4
   14004b266:	add    BYTE PTR [rax],al
   14004b268:	mov    bh,BYTE PTR [rsi+0x4]
   14004b26e:	add    BYTE PTR [rax],al
   14004b270:	(bad)  
   14004b271:	mov    esi,0x4
   14004b276:	add    BYTE PTR [rax],al
   14004b278:	scas   al,BYTE PTR es:[rdi]
   14004b279:	mov    esi,0x4
   14004b27e:	add    BYTE PTR [rax],al
   14004b280:	mov    esi,0x4be
   14004b285:	add    BYTE PTR [rax],al
   14004b287:	add    al,dl
   14004b289:	mov    esi,0x4
   14004b28e:	add    BYTE PTR [rax],al
   14004b290:	fdivr  QWORD PTR [rsi+0x4]
   14004b296:	add    BYTE PTR [rax],al
   14004b298:	in     al,dx
   14004b299:	mov    esi,0x4
   14004b29e:	add    BYTE PTR [rax],al
   14004b2a0:	add    bh,BYTE PTR [rdi+0x4]
   14004b2a6:	add    BYTE PTR [rax],al
   14004b2a8:	(bad)  
   14004b2a9:	mov    edi,0x4
   14004b2ae:	add    BYTE PTR [rax],al
   14004b2b0:	xor    BYTE PTR [rdi+0x4],bh
   14004b2b6:	add    BYTE PTR [rax],al
   14004b2b8:	rex mov edi,0x4
   14004b2be:	add    BYTE PTR [rax],al
   14004b2c0:	push   rax
   14004b2c1:	mov    edi,0x4
   14004b2c6:	add    BYTE PTR [rax],al
   14004b2c8:	(bad)  
   14004b2c9:	mov    edi,0x4
   14004b2ce:	add    BYTE PTR [rax],al
   14004b2d0:	jb     0x14004b291
   14004b2d2:	add    al,0x0
   14004b2d4:	add    BYTE PTR [rax],al
   14004b2d6:	add    BYTE PTR [rax],al
   14004b2d8:	(bad)  
   14004b2d9:	mov    edi,0x4
   14004b2de:	add    BYTE PTR [rax],al
   14004b2e0:	nop
   14004b2e1:	mov    edi,0x4
   14004b2e6:	add    BYTE PTR [rax],al
   14004b2e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b2e9:	mov    edi,0x4
   14004b2ee:	add    BYTE PTR [rax],al
   14004b2f0:	ret    0x4bf
   14004b2f3:	add    BYTE PTR [rax],al
   14004b2f5:	add    BYTE PTR [rax],al
   14004b2f7:	add    ah,dl
   14004b2f9:	mov    edi,0x4
   14004b2fe:	add    BYTE PTR [rax],al
   14004b300:	(bad)  
   14004b301:	mov    edi,0x4
   14004b306:	add    BYTE PTR [rax],al
   14004b308:	cli    
   14004b309:	mov    edi,0x4
   14004b30e:	add    BYTE PTR [rax],al
   14004b310:	adc    al,0xc0
   14004b312:	add    al,0x0
   14004b314:	add    BYTE PTR [rax],al
   14004b316:	add    BYTE PTR [rax],al
   14004b318:	and    al,al
   14004b31a:	add    al,0x0
   14004b31c:	add    BYTE PTR [rax],al
   14004b31e:	add    BYTE PTR [rax],al
   14004b320:	xor    al,0xc0
   14004b322:	add    al,0x0
   14004b324:	add    BYTE PTR [rax],al
   14004b326:	add    BYTE PTR [rax],al
   14004b328:	rex rol BYTE PTR [rax+rax*1],0x0
   14004b32d:	add    BYTE PTR [rax],al
   14004b32f:	add    BYTE PTR [rdx-0x40],bl
   14004b332:	add    al,0x0
   14004b334:	add    BYTE PTR [rax],al
   14004b336:	add    BYTE PTR [rax],al
   14004b338:	push   0xffffffffffffffc0
   14004b33a:	add    al,0x0
   14004b33c:	add    BYTE PTR [rax],al
   14004b33e:	add    BYTE PTR [rax],al
   14004b340:	jbe    0x14004b302
   14004b342:	add    al,0x0
   14004b344:	add    BYTE PTR [rax],al
   14004b346:	add    BYTE PTR [rax],al
   14004b348:	mov    eax,es
   14004b34a:	add    al,0x0
   14004b34c:	add    BYTE PTR [rax],al
   14004b34e:	add    BYTE PTR [rax],al
   14004b350:	pushf  
   14004b351:	rol    BYTE PTR [rax+rax*1],0x0
   14004b355:	add    BYTE PTR [rax],al
   14004b357:	add    BYTE PTR [rsi+0x4c0],ch
   14004b35d:	add    BYTE PTR [rax],al
   14004b35f:	add    BYTE PTR [rsi+0x4c0],bh
   14004b365:	add    BYTE PTR [rax],al
   14004b367:	add    ah,cl
   14004b369:	rol    BYTE PTR [rax+rax*1],0x0
   14004b36d:	add    BYTE PTR [rax],al
   14004b36f:	add    dl,ah
   14004b371:	rol    BYTE PTR [rax+rax*1],0x0
   14004b375:	add    BYTE PTR [rax],al
   14004b377:	add    dh,bh
   14004b379:	rol    BYTE PTR [rax+rax*1],0x0
   14004b37d:	add    BYTE PTR [rax],al
   14004b37f:	add    BYTE PTR [rdx],dl
   14004b381:	rol    DWORD PTR [rax+rax*1],0x0
   14004b385:	add    BYTE PTR [rax],al
   14004b387:	add    BYTE PTR [rdx],ah
   14004b389:	rol    DWORD PTR [rax+rax*1],0x0
   14004b38d:	add    BYTE PTR [rax],al
   14004b38f:	add    BYTE PTR [rdx],bh
   14004b391:	rol    DWORD PTR [rax+rax*1],0x0
   14004b395:	add    BYTE PTR [rax],al
   14004b397:	add    BYTE PTR [rsi-0x3f],cl
   14004b39a:	add    al,0x0
   14004b39c:	add    BYTE PTR [rax],al
   14004b39e:	add    BYTE PTR [rax],al
   14004b3a0:	pop    rsi
   14004b3a1:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3a5:	add    BYTE PTR [rax],al
   14004b3a7:	add    BYTE PTR [rax-0x3f],dh
   14004b3aa:	add    al,0x0
   14004b3ac:	add    BYTE PTR [rax],al
   14004b3ae:	add    BYTE PTR [rax],al
   14004b3b0:	xchg   cl,al
   14004b3b2:	add    al,0x0
   14004b3b4:	add    BYTE PTR [rax],al
   14004b3b6:	add    BYTE PTR [rax],al
   14004b3b8:	movabs ds:0xbe000000000004c1,al
   14004b3c1:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3c5:	add    BYTE PTR [rax],al
   14004b3c7:	add    dl,dl
   14004b3c9:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3cd:	add    BYTE PTR [rax],al
   14004b3cf:	add    al,ah
   14004b3d1:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3d5:	add    BYTE PTR [rax],al
   14004b3d7:	add    dh,ch
   14004b3d9:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3dd:	add    BYTE PTR [rax],al
   14004b3df:	add    dl,bh
   14004b3e1:	rol    DWORD PTR [rax+rax*1],0x0
   14004b3e5:	add    BYTE PTR [rax],al
   14004b3e7:	add    BYTE PTR [rdx+rax*8],cl
   14004b3ea:	add    al,0x0
   14004b3ec:	add    BYTE PTR [rax],al
   14004b3ee:	add    BYTE PTR [rax],al
   14004b3f0:	sbb    al,0xc2
   14004b3f2:	add    al,0x0
   14004b3f4:	add    BYTE PTR [rax],al
   14004b3f6:	add    BYTE PTR [rax],al
   14004b3f8:	sub    al,dl
   14004b3fa:	add    al,0x0
   14004b3fc:	add    BYTE PTR [rax],al
   14004b3fe:	add    BYTE PTR [rax],al
   14004b400:	cmp    al,0xc2
   14004b402:	add    al,0x0
   14004b404:	add    BYTE PTR [rax],al
   14004b406:	add    BYTE PTR [rax],al
   14004b408:	xchg   bl,al
   14004b40a:	add    al,0x0
   14004b40c:	add    BYTE PTR [rax],al
   14004b40e:	add    BYTE PTR [rax],al
   14004b410:	jbe    0x14004b3d5
   14004b412:	add    al,0x0
   14004b414:	add    BYTE PTR [rax],al
   14004b416:	add    BYTE PTR [rax],al
   14004b418:	in     al,dx
   14004b419:	mov    ch,0x4
   14004b41b:	add    BYTE PTR [rax],al
   14004b41d:	add    BYTE PTR [rax],al
   14004b41f:	add    dh,bl
   14004b421:	mov    ch,0x4
   14004b423:	add    BYTE PTR [rax],al
   14004b425:	add    BYTE PTR [rax],al
   14004b427:	add    dh,cl
   14004b429:	mov    ch,0x4
   14004b42b:	add    BYTE PTR [rax],al
   14004b42d:	add    BYTE PTR [rax],al
   14004b42f:	add    BYTE PTR [rax+0x4b5],bh
   14004b435:	add    BYTE PTR [rax],al
   14004b437:	add    BYTE PTR [rax+0x4b5],ah
   14004b43d:	add    BYTE PTR [rax],al
   14004b43f:	add    BYTE PTR [rax+0x4b5],dl
   14004b445:	add    BYTE PTR [rax],al
   14004b447:	add    BYTE PTR [rsi-0x4b],bh
   14004b44a:	add    al,0x0
   14004b44c:	add    BYTE PTR [rax],al
   14004b44e:	add    BYTE PTR [rax],al
   14004b450:	jbe    0x14004b407
   14004b452:	add    al,0x0
   14004b454:	add    BYTE PTR [rax],al
   14004b456:	add    BYTE PTR [rax],al
   14004b458:	pop    rax
   14004b459:	mov    ch,0x4
   14004b45b:	add    BYTE PTR [rax],al
   14004b45d:	add    BYTE PTR [rax],al
   14004b45f:	add    dl,dl
   14004b461:	mov    ebx,0x4
   14004b466:	add    BYTE PTR [rax],al
   14004b468:	mov    ah,0xc4
   14004b46a:	add    al,0x0
	...
   14004b478:	mov    edx,es
   14004b47a:	add    al,0x0
   14004b47c:	add    BYTE PTR [rax],al
   14004b47e:	add    BYTE PTR [rax],al
   14004b480:	jbe    0x14004b444
   14004b482:	add    al,0x0
   14004b484:	add    BYTE PTR [rax],al
   14004b486:	add    BYTE PTR [rax],al
   14004b488:	movabs al,ds:0xee000000000004c2
   14004b491:	mov    dh,0x4
	...
   14004b49f:	add    BYTE PTR [rsi],bl
   14004b4a1:	mov    dh,0x4
   14004b4a3:	add    BYTE PTR [rax],al
   14004b4a5:	add    BYTE PTR [rax],al
   14004b4a7:	add    BYTE PTR [rsi],al
   14004b4a9:	mov    dh,0x4
	...
   14004b4b7:	add    BYTE PTR [rsi-0x4a],ah
   14004b4ba:	add    al,0x0
   14004b4bc:	add    BYTE PTR [rax],al
   14004b4be:	add    BYTE PTR [rax],al
   14004b4c0:	push   rdx
   14004b4c1:	ret    0x4
   14004b4c4:	add    BYTE PTR [rax],al
   14004b4c6:	add    BYTE PTR [rax],al
   14004b4c8:	(bad)
   14004b4cd:	add    BYTE PTR [rax],al
   14004b4cf:	add    BYTE PTR [rsi+rsi*4+0x4],dl
   14004b4d3:	add    BYTE PTR [rax],al
   14004b4d5:	add    BYTE PTR [rax],al
   14004b4d7:	add    BYTE PTR [rdx-0x4a],al
   14004b4da:	add    al,0x0
	...
   14004b4e8:	sahf   
   14004b4e9:	mov    dh,0x4
   14004b4eb:	add    BYTE PTR [rax],al
   14004b4ed:	add    BYTE PTR [rax],al
   14004b4ef:	add    BYTE PTR [rsi+0x4b6],ch
   14004b4f5:	add    BYTE PTR [rax],al
   14004b4f7:	add    al,al
   14004b4f9:	mov    dh,0x4
   14004b4fb:	add    BYTE PTR [rax],al
   14004b4fd:	add    BYTE PTR [rax],al
   14004b4ff:	add    al,dl
   14004b501:	mov    dh,0x4
   14004b503:	add    BYTE PTR [rax],al
   14004b505:	add    BYTE PTR [rax],al
   14004b507:	add    BYTE PTR [rax+0x4b6],al
	...
   14004b515:	add    BYTE PTR [rax],al
   14004b517:	add    BYTE PTR [rbp+0x67655202],dl
   14004b51d:	push   rcx
   14004b51e:	jne    0x14004b585
   14004b520:	jb     0x14004b59b
   14004b522:	push   rsi
   14004b523:	(bad)  
   14004b524:	ins    BYTE PTR es:[rdi],dx
   14004b525:	jne    0x14004b58c
   14004b527:	rex.RB js 0x14004b56b
   14004b52a:	add    BYTE PTR [rax],al
   14004b52c:	mov    BYTE PTR [rdx],al
   14004b52e:	push   rdx
   14004b52f:	gs addr32 rex.WRXB jo 0x14004b599
   14004b534:	outs   dx,BYTE PTR ds:[rsi]
   14004b535:	rex.WXB
   14004b536:	gs jns 0x14004b57e
   14004b539:	js     0x14004b57c
   14004b53b:	add    BYTE PTR [rax+0x2],bl
   14004b53e:	push   rdx
   14004b53f:	gs rex.XB ins BYTE PTR es:[edi],dx
   14004b543:	outs   dx,DWORD PTR ds:[rsi]
   14004b544:	jae    0x14004b5ab
   14004b546:	rex.WXB
   14004b547:	gs jns 0x14004b54a
   14004b54a:	rex.B
   14004b54b:	rex.R push rsi
   14004b54d:	push   r8
   14004b54f:	xor    rsi,QWORD PTR [r10]
   14004b552:	cs fs ins BYTE PTR es:[rdi],dx
   14004b555:	ins    BYTE PTR es:[rdi],dx
   14004b556:	add    BYTE PTR [rax],al
   14004b558:	pop    rdi
   14004b559:	add    eax,0x55746553
   14004b55e:	outs   dx,BYTE PTR ds:[rsi]
   14004b55f:	push   0x6c646e61
   14004b564:	gs fs rex.RB js 0x14004b5cc
   14004b569:	gs jo  0x14004b5e0
   14004b56c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004b573:	gs jb  0x14004b576
   14004b576:	outs   dx,BYTE PTR ds:[rsi]
   14004b577:	add    eax,0x65656c53
   14004b57c:	jo     0x14004b57e
   14004b57e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b57f:	add    BYTE PTR [rbx+0x6f],al
   14004b582:	ins    DWORD PTR es:[rdi],dx
   14004b583:	jo     0x14004b5e6
   14004b585:	jb     0x14004b5ec
   14004b587:	push   rbx
   14004b588:	je     0x14004b5fc
   14004b58a:	imul   ebp,DWORD PTR [rsi+0x67],0x70000057
   14004b591:	add    al,BYTE PTR [rdi+0x65]
   14004b594:	je     0x14004b5e2
   14004b596:	(bad)  
   14004b597:	jae    0x14004b60d
   14004b599:	rex.RB jb 0x14004b60e
   14004b59c:	outs   dx,DWORD PTR ds:[rsi]
   14004b59d:	jb     0x14004b59f
   14004b59f:	add    dh,bl
   14004b5a1:	add    al,0x53
   14004b5a3:	gs je  0x14004b5e9
   14004b5a6:	outs   dx,DWORD PTR ds:[rsi]
   14004b5a7:	outs   dx,BYTE PTR ds:[rsi]
   14004b5a8:	jae    0x14004b619
   14004b5aa:	ins    BYTE PTR es:[rdi],dx
   14004b5ab:	gs rex.XB je 0x14004b621
   14004b5af:	ins    BYTE PTR es:[rdi],dx
   14004b5b0:	rex.W (bad) 
   14004b5b2:	outs   dx,BYTE PTR ds:[rsi]
   14004b5b3:	fs ins BYTE PTR es:[rdi],dx
   14004b5b5:	gs jb  0x14004b5b8
   14004b5b8:	pop    rsi
   14004b5b9:	add    ecx,DWORD PTR [rax+0x65]
   14004b5bc:	(bad)  
   14004b5bd:	jo     0x14004b612
   14004b5bf:	gs je  0x14004b60b
   14004b5c2:	outs   dx,BYTE PTR ds:[rsi]
   14004b5c3:	outs   dx,WORD PTR ds:[rsi]
   14004b5c5:	jb     0x14004b634
   14004b5c7:	(bad)  
   14004b5c8:	je     0x14004b633
   14004b5ca:	outs   dx,DWORD PTR ds:[rsi]
   14004b5cb:	outs   dx,BYTE PTR ds:[rsi]
   14004b5cc:	add    BYTE PTR [rax],al
   14004b5ce:	loop   0x14004b5d0
   14004b5d0:	rex.XB jb 0x14004b638
   14004b5d3:	(bad)  
   14004b5d4:	je     0x14004b63b
   14004b5d6:	rex.WRB jne 0x14004b64d
   14004b5d9:	gs js  0x14004b61d
   14004b5dc:	add    BYTE PTR [rax],al
   14004b5de:	mov    es,WORD PTR [rax]
   14004b5e0:	rex.XB ins BYTE PTR es:[rdi],dx
   14004b5e2:	outs   dx,DWORD PTR ds:[rsi]
   14004b5e3:	jae    0x14004b64a
   14004b5e5:	rex.W (bad) 
   14004b5e7:	outs   dx,BYTE PTR ds:[rsi]
   14004b5e8:	fs ins BYTE PTR es:[rdi],dx
   14004b5ea:	gs add al,dl
   14004b5ed:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14004b5f1:	(bad)  
   14004b5f2:	ins    BYTE PTR es:[rdi],dx
   14004b5f3:	rex.RX jb 0x14004b65b
   14004b5f6:	add    BYTE PTR gs:[rbx+0x45],cl
   14004b5fa:	push   rdx
   14004b5fb:	rex.WRX
   14004b5fc:	rex.RB
   14004b5fd:	xor    r14,QWORD PTR [rdx]
   14004b600:	cs fs ins BYTE PTR es:[rdi],dx
   14004b603:	ins    BYTE PTR es:[rdi],dx
   14004b604:	add    BYTE PTR [rax],al
   14004b606:	add    BYTE PTR [rax],al
   14004b608:	rex.RXB
   14004b609:	gs je  0x14004b651
   14004b60c:	jb     0x14004b680
   14004b60e:	outs   dx,DWORD PTR ds:[rsi]
   14004b60f:	jb     0x14004b65e
   14004b611:	gs jae 0x14004b687
   14004b614:	(bad)  
   14004b615:	rex.WRB outs dx,DWORD PTR gs:[esi]
   14004b619:	fs jne 0x14004b688
   14004b61c:	add    BYTE PTR gs:[rcx],al
   14004b61f:	add    BYTE PTR [rbx+0x65],dl
   14004b622:	je     0x14004b669
   14004b624:	jb     0x14004b698
   14004b626:	outs   dx,DWORD PTR ds:[rsi]
   14004b627:	jb     0x14004b676
   14004b629:	gs jae 0x14004b69f
   14004b62c:	(bad)  
   14004b62d:	rex.WRB outs dx,DWORD PTR gs:[esi]
   14004b631:	fs jne 0x14004b6a0
   14004b634:	add    BYTE PTR gs:[rsi+0x53],dl
   14004b638:	push   rax
   14004b639:	rex.WRB jae 0x14004b6a3
   14004b63c:	cs fs ins BYTE PTR es:[rdi],dx
   14004b63f:	ins    BYTE PTR es:[rdi],dx
   14004b640:	add    BYTE PTR [rax],al
   14004b642:	add    DWORD PTR [rax],0x6e556f43
   14004b648:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004b64f:	imul   edi,DWORD PTR [rdx+0x65],0x530000
   14004b656:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004b658:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004b65a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004b662:	rex.RB js 0x14004b665
   14004b665:	add    BYTE PTR [rax+rax*1],bl
   14004b668:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004b66a:	rex.XB jb 0x14004b6d2
   14004b66d:	(bad)  
   14004b66e:	je     0x14004b6d5
   14004b670:	rex.RXB jne 0x14004b6dc
   14004b673:	add    BYTE PTR fs:[rax],al
   14004b676:	outs   dx,DWORD PTR ds:[rsi]
   14004b677:	ins    BYTE PTR es:[rdi],dx
   14004b678:	xor    esi,DWORD PTR gs:[rdx]
   14004b67b:	cs fs ins BYTE PTR es:[rdi],dx
   14004b67e:	ins    BYTE PTR es:[rdi],dx
   14004b67f:	add    BYTE PTR [rcx+0x0],al
   14004b682:	push   rax
   14004b683:	fs push 0x46746547
   14004b689:	outs   dx,DWORD PTR ds:[rsi]
   14004b68a:	jb     0x14004b6f9
   14004b68c:	(bad)  
   14004b68d:	je     0x14004b703
   14004b68f:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14004b693:	jne    0x14004b703
   14004b695:	je     0x14004b6fc
   14004b697:	jb     0x14004b6ef
   14004b699:	(bad)  
   14004b69a:	ins    BYTE PTR es:[rdi],dx
   14004b69b:	jne    0x14004b702
   14004b69d:	add    BYTE PTR [rdi+0x0],dl
   14004b6a0:	push   rax
   14004b6a1:	fs push 0x6e65704f
   14004b6a7:	push   rcx
   14004b6a8:	jne    0x14004b70f
   14004b6aa:	jb     0x14004b725
   14004b6ac:	push   rdi
   14004b6ad:	add    BYTE PTR [rbx],al
   14004b6af:	add    BYTE PTR [rax+0x64],dl
   14004b6b2:	push   0x43646441
   14004b6b7:	outs   dx,DWORD PTR ds:[rsi]
   14004b6b8:	jne    0x14004b728
   14004b6ba:	je     0x14004b721
   14004b6bc:	jb     0x14004b715
   14004b6be:	add    BYTE PTR [rax],al
   14004b6c0:	adc    DWORD PTR [rax],eax
   14004b6c2:	push   rax
   14004b6c3:	fs push 0x736f6c43
   14004b6c9:	gs push rcx
   14004b6cb:	jne    0x14004b732
   14004b6cd:	jb     0x14004b748
   14004b6cf:	add    BYTE PTR [rdx],dl
   14004b6d1:	add    BYTE PTR [rax+0x64],dl
   14004b6d4:	push   0x6c6c6f43
   14004b6d9:	movsxd esi,DWORD PTR gs:[rcx+rdx*2+0x75]
   14004b6de:	gs jb  0x14004b75a
   14004b6e1:	rex.R (bad) 
   14004b6e3:	je     0x14004b746
   14004b6e5:	add    BYTE PTR [rax+0x64],dh
   14004b6e8:	push   0x6c6c642e
   14004b6ed:	add    BYTE PTR [rdx+0x74615000],dl
   14004b6f3:	push   0x616e6552
   14004b6f8:	ins    DWORD PTR es:[rdi],dx
   14004b6f9:	gs rex.RB js 0x14004b771
   14004b6fd:	outs   dx,BYTE PTR gs:[rsi]
   14004b6ff:	jae    0x14004b76a
   14004b701:	outs   dx,DWORD PTR ds:[rsi]
   14004b702:	outs   dx,BYTE PTR ds:[rsi]
   14004b703:	push   rdi
   14004b704:	add    BYTE PTR [rax],al
   14004b706:	push   rbx
   14004b707:	rex.W
   14004b708:	rex.WR push rdi
   14004b70a:	push   r8
   14004b70c:	rex.WB
   14004b70d:	cs fs ins BYTE PTR es:[rdi],dx
   14004b710:	ins    BYTE PTR es:[rdi],dx
   14004b711:	add    BYTE PTR [rdx],dl
   14004b713:	add    cl,BYTE PTR [rdi+0x70]
   14004b716:	outs   dx,BYTE PTR gs:[rsi]
   14004b718:	push   rax
   14004b719:	jb     0x14004b78a
   14004b71b:	movsxd esp,DWORD PTR [rbp+0x73]
   14004b71e:	jae    0x14004b774
   14004b720:	outs   dx,DWORD PTR ds:[rsi]
   14004b721:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14004b725:	add    BYTE PTR [rdi+0x1],ch
   14004b728:	rex.RXB
   14004b729:	gs je  0x14004b780
   14004b72c:	outs   dx,DWORD PTR ds:[rsi]
   14004b72d:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14004b731:	outs   dx,BYTE PTR ds:[rsi]
   14004b732:	outs   dx,WORD PTR ds:[rsi]
   14004b734:	jb     0x14004b7a3
   14004b736:	(bad)  
   14004b737:	je     0x14004b7a2
   14004b739:	outs   dx,DWORD PTR ds:[rsi]
   14004b73a:	outs   dx,BYTE PTR ds:[rsi]
   14004b73b:	add    BYTE PTR [rcx+rax*1+0x6b6f6f4c],ch
   14004b742:	jne    0x14004b7b4
   14004b744:	push   rax
   14004b745:	jb     0x14004b7b0
   14004b747:	jbe    0x14004b7b2
   14004b749:	ins    BYTE PTR es:[rdi],dx
   14004b74a:	gs addr32 gs push rsi
   14004b74e:	(bad)  
   14004b74f:	ins    BYTE PTR es:[rdi],dx
   14004b750:	jne    0x14004b7b7
   14004b752:	add    BYTE PTR [r15],bl
   14004b755:	add    BYTE PTR [rcx+0x64],al
   14004b758:	push   0x75
   14004b75a:	jae    0x14004b7d0
   14004b75c:	push   rsp
   14004b75d:	outs   dx,DWORD PTR ds:[rsi]
   14004b75e:	imul   esp,DWORD PTR [rbp+0x6e],0x50
   14004b762:	jb     0x14004b7cd
   14004b764:	jbe    0x14004b7cf
   14004b766:	ins    BYTE PTR es:[rdi],dx
   14004b767:	gs addr32 gs jae 0x14004b76c
   14004b76c:	rol    BYTE PTR [rdx],cl
   14004b76e:	push   rbx
   14004b76f:	gs je  0x14004b7b7
   14004b772:	outs   dx,BYTE PTR ds:[rsi]
   14004b773:	je     0x14004b7e7
   14004b775:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   14004b77c:	ins    BYTE PTR es:[rdi],dx
   14004b77d:	add    BYTE PTR [r8],al
   14004b780:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b781:	add    DWORD PTR [rdi+rbp*2+0x6f],ecx
   14004b785:	imul   esi,DWORD PTR [rbp+0x70],0x41
   14004b789:	movsxd esp,DWORD PTR [rbx+0x6f]
   14004b78c:	jne    0x14004b7fc
   14004b78e:	je     0x14004b7de
   14004b790:	(bad)  
   14004b791:	ins    DWORD PTR es:[rdi],dx
   14004b792:	gs push rdi
   14004b794:	add    BYTE PTR [rax],al
   14004b796:	fiadd  WORD PTR [rdx]
   14004b798:	push   rbx
   14004b799:	gs je  0x14004b7ea
   14004b79c:	(bad)  
   14004b79d:	ins    DWORD PTR es:[rdi],dx
   14004b79e:	gs fs push rbx
   14004b7a1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004b7a5:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x576f666e
   14004b7ad:	add    BYTE PTR [rdx+0x1],ah
   14004b7b0:	rex.RXB
   14004b7b1:	gs je  0x14004b807
   14004b7b4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004b7b8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   14004b7c0:	push   rsi
   14004b7c1:	add    DWORD PTR [rdi+0x65],eax
   14004b7c4:	je     0x14004b814
   14004b7c6:	(bad)  
   14004b7c7:	ins    DWORD PTR es:[rdi],dx
   14004b7c8:	gs fs push rbx
   14004b7cb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004b7cf:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x576f666e
   14004b7d7:	add    al,ch
   14004b7d9:	add    dl,BYTE PTR [rbx+0x65]
   14004b7dc:	je     0x14004b831
   14004b7de:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004b7e2:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   14004b7ea:	nop
   14004b7eb:	add    BYTE PTR [rbx+0x72],al
   14004b7ee:	gs (bad) 
   14004b7f0:	je     0x14004b857
   14004b7f2:	push   rbx
   14004b7f3:	gs jb  0x14004b86c
   14004b7f6:	imul   esp,DWORD PTR [rbx+0x65],0x65000057
   14004b7fd:	add    BYTE PTR [rbx+0x6c],al
   14004b800:	outs   dx,DWORD PTR ds:[rsi]
   14004b801:	jae    0x14004b868
   14004b803:	push   rbx
   14004b804:	gs jb  0x14004b87d
   14004b807:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   14004b80e:	ins    BYTE PTR es:[rdi],dx
   14004b80f:	add    BYTE PTR gs:[rax],al
   14004b812:	(bad)  
   14004b813:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14004b817:	gs je  0x14004b87f
   14004b81a:	push   rbx
   14004b81b:	gs jb  0x14004b894
   14004b81e:	imul   esp,DWORD PTR [rbx+0x65],0x4f021600
   14004b825:	jo     0x14004b88c
   14004b827:	outs   dx,BYTE PTR ds:[rsi]
   14004b828:	push   rbx
   14004b829:	gs jb  0x14004b8a2
   14004b82c:	imul   esp,DWORD PTR [rbx+0x65],0xf3000057
   14004b833:	add    dl,BYTE PTR [rbx+0x74]
   14004b836:	(bad)  
   14004b837:	jb     0x14004b8ad
   14004b839:	push   rbx
   14004b83a:	gs jb  0x14004b8b3
   14004b83d:	imul   esp,DWORD PTR [rbx+0x65],0x2500041
   14004b844:	push   rcx
   14004b845:	jne    0x14004b8ac
   14004b847:	jb     0x14004b8c2
   14004b849:	push   rbx
   14004b84a:	gs jb  0x14004b8c3
   14004b84d:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   14004b854:	jne    0x14004b8c9
   14004b856:	add    BYTE PTR [rax],al
   14004b858:	adc    eax,DWORD PTR [rdx]
   14004b85a:	rex.WRXB jo 0x14004b8c2
   14004b85d:	outs   dx,BYTE PTR ds:[rsi]
   14004b85e:	push   rbx
   14004b85f:	rex.XB
   14004b860:	rex.WRB (bad) 
   14004b862:	outs   dx,BYTE PTR ds:[rsi]
   14004b863:	(bad)  
   14004b864:	addr32 gs jb 0x14004b8a9
   14004b868:	add    BYTE PTR [rax],al
   14004b86a:	push   0x0
   14004b86c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004b86e:	outs   dx,BYTE PTR ds:[rsi]
   14004b86f:	je     0x14004b8e3
   14004b871:	outs   dx,DWORD PTR ds:[rsi]
   14004b872:	ins    BYTE PTR es:[rdi],dx
   14004b873:	push   rbx
   14004b874:	gs jb  0x14004b8ed
   14004b877:	imul   esp,DWORD PTR [rbx+0x65],0x24b0000
   14004b87e:	push   rcx
   14004b87f:	jne    0x14004b8e6
   14004b881:	jb     0x14004b8fc
   14004b883:	push   rbx
   14004b884:	gs jb  0x14004b8fd
   14004b887:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   14004b88e:	imul   esp,DWORD PTR [rdi+0x57],0x52029600
   14004b895:	gs addr32 push rcx
   14004b898:	jne    0x14004b8ff
   14004b89a:	jb     0x14004b915
   14004b89c:	push   rsi
   14004b89d:	(bad)  
   14004b89e:	ins    BYTE PTR es:[rdi],dx
   14004b89f:	jne    0x14004b906
   14004b8a1:	rex.RB js 0x14004b8fb
   14004b8a4:	add    BYTE PTR [rax],al
   14004b8a6:	mov    DWORD PTR [rdx],eax
   14004b8a8:	push   rdx
   14004b8a9:	gs addr32 rex.WRXB jo 0x14004b913
   14004b8ae:	outs   dx,BYTE PTR ds:[rsi]
   14004b8af:	rex.WXB
   14004b8b0:	gs jns 0x14004b8f8
   14004b8b3:	js     0x14004b90c
   14004b8b5:	add    BYTE PTR [rsi+0x0],ch
   14004b8b8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004b8ba:	outs   dx,BYTE PTR ds:[rsi]
   14004b8bb:	je     0x14004b92f
   14004b8bd:	outs   dx,DWORD PTR ds:[rsi]
   14004b8be:	ins    BYTE PTR es:[rdi],dx
   14004b8bf:	push   rsp
   14004b8c0:	jb     0x14004b923
   14004b8c2:	movsxd esp,DWORD PTR [rbp+0x57]
   14004b8c5:	add    BYTE PTR [rip+0x616e4501],al        # 0x1a172fdcc
   14004b8cb:	(bad)  
   14004b8cc:	ins    BYTE PTR es:[rdi],dx
   14004b8cd:	gs push rsp
   14004b8cf:	jb     0x14004b932
   14004b8d1:	movsxd esp,DWORD PTR [rbp+0x0]
   14004b8d4:	clc    
   14004b8d5:	add    dl,BYTE PTR [rbx+0x74]
   14004b8d8:	(bad)  
   14004b8d9:	jb     0x14004b94f
   14004b8db:	push   rsp
   14004b8dc:	jb     0x14004b93f
   14004b8de:	movsxd esp,DWORD PTR [rbp+0x57]
   14004b8e1:	add    cl,ch
   14004b8e3:	add    DWORD PTR [rdi+0x65],eax
   14004b8e6:	je     0x14004b92b
   14004b8e8:	outs   dx,DWORD PTR ds:[rsi]
   14004b8e9:	ins    DWORD PTR es:[rdi],dx
   14004b8ea:	ins    DWORD PTR es:[rdi],dx
   14004b8eb:	(bad)  
   14004b8ec:	outs   dx,BYTE PTR ds:[rsi]
   14004b8ed:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1440057
   14004b8f6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004b8f8:	je     0x14004b95f
   14004b8fa:	jb     0x14004b93f
   14004b8fc:	jb     0x14004b967
   14004b8fe:	je     0x14004b969
   14004b900:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004b903:	push   rbx
   14004b904:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004b909:	outs   dx,BYTE PTR ds:[rsi]
   14004b90a:	add    BYTE PTR [rax],al
   14004b90c:	rol    BYTE PTR [rbx],0x4c
   14004b90f:	gs (bad) 
   14004b911:	jbe    0x14004b978
   14004b913:	rex.XB jb 0x14004b97f
   14004b916:	je     0x14004b981
   14004b918:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004b91b:	push   rbx
   14004b91c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004b921:	outs   dx,BYTE PTR ds:[rsi]
   14004b922:	add    BYTE PTR [rax],al
   14004b924:	rex add DWORD PTR [rbp+0x6e],eax
   14004b928:	movsxd ebp,DWORD PTR [rdi+0x64]
   14004b92b:	gs push rax
   14004b92d:	outs   dx,DWORD PTR ds:[rsi]
   14004b92e:	imul   ebp,DWORD PTR [rsi+0x74],0x18007265
   14004b935:	add    DWORD PTR [rbp+riz*2+0x63],eax
   14004b939:	outs   dx,DWORD PTR ds:[rsi]
   14004b93a:	fs gs push rax
   14004b93d:	outs   dx,DWORD PTR ds:[rsi]
   14004b93e:	imul   ebp,DWORD PTR [rsi+0x74],0x25007265
   14004b945:	add    eax,0x4c746553
   14004b94a:	(bad)  
   14004b94b:	jae    0x14004b9c1
   14004b94d:	rex.RB jb 0x14004b9c2
   14004b950:	outs   dx,DWORD PTR ds:[rsi]
   14004b951:	jb     0x14004b953
   14004b953:	add    BYTE PTR [rip+0x74654702],ch        # 0x1b46a005b
   14004b959:	rex.XB jne 0x14004b9ce
   14004b95c:	jb     0x14004b9c3
   14004b95e:	outs   dx,BYTE PTR ds:[rsi]
   14004b95f:	je     0x14004b9b5
   14004b961:	push   0x64616572
   14004b966:	add    BYTE PTR [rax],al
   14004b968:	add    al,BYTE PTR cs:[rdi+0x65]
   14004b96c:	je     0x14004b9b1
   14004b96e:	jne    0x14004b9e2
   14004b970:	jb     0x14004b9d7
   14004b972:	outs   dx,BYTE PTR ds:[rsi]
   14004b973:	je     0x14004b9c9
   14004b975:	push   0x64616572
   14004b97a:	rex.WB
   14004b97b:	add    BYTE PTR fs:[rax],al
   14004b97e:	jae    0x14004b981
   14004b980:	rex.RB js 0x14004b9ec
   14004b983:	je     0x14004b9d5
   14004b985:	jb     0x14004b9f6
   14004b987:	movsxd esp,DWORD PTR [rbp+0x73]
   14004b98a:	jae    0x14004b98c
   14004b98c:	xchg   BYTE PTR [rdx],al
   14004b98e:	rex.RXB
   14004b98f:	gs je  0x14004b9df
   14004b992:	outs   dx,DWORD PTR ds:[rsi]
   14004b993:	fs jne 0x14004ba02
   14004b996:	gs rex.W (bad) 
   14004b999:	outs   dx,BYTE PTR ds:[rsi]
   14004b99a:	fs ins BYTE PTR es:[rdi],dx
   14004b99c:	gs rex.RB js 0x14004b9f7
   14004b9a0:	add    BYTE PTR [rax],al
   14004b9a2:	mov    esp,0x74654702
   14004b9a7:	push   rax
   14004b9a8:	jb     0x14004ba19
   14004b9aa:	movsxd eax,DWORD PTR [rcx+0x64]
   14004b9ad:	fs jb  0x14004ba15
   14004b9b0:	jae    0x14004ba25
   14004b9b2:	add    BYTE PTR [rax],al
   14004b9b4:	out    dx,eax
   14004b9b5:	add    ecx,DWORD PTR [rbp+0x75]
   14004b9b8:	ins    BYTE PTR es:[rdi],dx
   14004b9b9:	je     0x14004ba24
   14004b9bb:	rex.X jns 0x14004ba32
   14004b9be:	gs push rsp
   14004b9c0:	outs   dx,DWORD PTR ds:[rsi]
   14004b9c1:	push   rdi
   14004b9c2:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14004b9ca:	in     al,0x2
   14004b9cc:	rex.RXB
   14004b9cd:	gs je  0x14004ba23
   14004b9d0:	je     0x14004ba36
   14004b9d2:	rex.W (bad) 
   14004b9d4:	outs   dx,BYTE PTR ds:[rsi]
   14004b9d5:	fs ins BYTE PTR es:[rdi],dx
   14004b9d7:	add    BYTE PTR gs:[rax],al
   14004b9da:	add    DWORD PTR [rsi],eax
   14004b9dc:	push   rdi
   14004b9dd:	jb     0x14004ba48
   14004b9df:	je     0x14004ba46
   14004b9e1:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470283
   14004b9ea:	je     0x14004ba39
   14004b9ec:	outs   dx,DWORD PTR ds:[rsi]
   14004b9ed:	fs jne 0x14004ba5c
   14004b9f0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14004b9fa:	add    BYTE PTR [rax],al
   14004b9fc:	rol    DWORD PTR [rdx],0x47
   14004b9ff:	gs je  0x14004ba52
   14004ba02:	jb     0x14004ba73
   14004ba04:	movsxd esp,DWORD PTR [rbp+0x73]
   14004ba07:	jae    0x14004ba51
   14004ba09:	gs (bad) 
   14004ba0b:	jo     0x14004ba0d
   14004ba0d:	add    BYTE PTR [rsi+0x2],bl
   14004ba10:	rex.RXB
   14004ba11:	gs je  0x14004ba5a
   14004ba14:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14004ba1c:	outs   dx,DWORD PTR ds:[rsi]
   14004ba1d:	add    ecx,DWORD PTR [rcx+0x6e]
   14004ba20:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004ba28:	rex.XB jb 0x14004ba94
   14004ba2b:	je     0x14004ba96
   14004ba2d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ba30:	push   rbx
   14004ba31:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ba36:	outs   dx,BYTE PTR ds:[rsi]
   14004ba37:	rex.B outs dx,BYTE PTR ds:[rsi]
   14004ba39:	fs push rbx
   14004ba3b:	jo     0x14004baa6
   14004ba3d:	outs   dx,BYTE PTR ds:[rsi]
   14004ba3e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ba40:	jne    0x14004bab0
   14004ba42:	je     0x14004ba44
   14004ba44:	(bad)  
   14004ba45:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14004ba49:	gs je  0x14004bab1
   14004ba4c:	rex.XB jb 0x14004bab8
   14004ba4f:	je     0x14004baba
   14004ba51:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ba54:	push   rbx
   14004ba55:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ba5a:	outs   dx,BYTE PTR ds:[rsi]
   14004ba5b:	add    BYTE PTR [rdx+0x3],ch
   14004ba5e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004ba60:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x78456563
   14004ba68:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14004ba6c:	rex.WRXB outs dx,BYTE PTR gs:[rsi]
   14004ba6f:	movsxd esp,DWORD PTR [rbp+0x0]
   14004ba72:	fiadd  WORD PTR [rdx]
   14004ba74:	rex.RXB
   14004ba75:	gs je  0x14004bacb
   14004ba78:	je     0x14004badb
   14004ba7a:	jb     0x14004baf0
   14004ba7c:	jne    0x14004baee
   14004ba7e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004ba80:	outs   dx,WORD PTR ds:[rsi]
   14004ba82:	push   rdi
   14004ba83:	add    BYTE PTR [rdi],bh
   14004ba85:	add    al,0x51
   14004ba87:	jne    0x14004baee
   14004ba89:	jb     0x14004bb04
   14004ba8b:	push   rax
   14004ba8c:	gs jb  0x14004baf5
   14004ba8f:	outs   dx,DWORD PTR ds:[rsi]
   14004ba90:	jb     0x14004baff
   14004ba92:	(bad)  
   14004ba93:	outs   dx,BYTE PTR ds:[rsi]
   14004ba94:	movsxd esp,DWORD PTR [rbp+0x43]
   14004ba97:	outs   dx,DWORD PTR ds:[rsi]
   14004ba98:	jne    0x14004bb08
   14004ba9a:	je     0x14004bb01
   14004ba9c:	jb     0x14004ba9e
   14004ba9e:	sti    
   14004ba9f:	add    al,BYTE PTR [rdi+0x65]
   14004baa2:	je     0x14004baf7
   14004baa4:	jns    0x14004bb19
   14004baa6:	je     0x14004bb0d
   14004baa8:	ins    DWORD PTR es:[rdi],dx
   14004baa9:	push   rsp
   14004baaa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14004bab1:	ins    BYTE PTR es:[rdi],dx
   14004bab2:	gs push rsp
   14004bab4:	imul   ebp,DWORD PTR [rbp+0x65],0x47031800
   14004babb:	gs je  0x14004bb12
   14004babe:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14004bac5:	je     0x14004bafd
   14004bac7:	xor    al,0x0
   14004bac9:	add    BYTE PTR [rdi+0x2],al
   14004bacc:	rex.RXB
   14004bacd:	gs je  0x14004bb15
   14004bad0:	outs   dx,BYTE PTR ds:[rsi]
   14004bad1:	jbe    0x14004bb3c
   14004bad3:	jb     0x14004bb44
   14004bad5:	outs   dx,BYTE PTR ds:[rsi]
   14004bad6:	ins    DWORD PTR es:[rdi],dx
   14004bad7:	outs   dx,BYTE PTR gs:[rsi]
   14004bad9:	je     0x14004bb2e
   14004badb:	je     0x14004bb4f
   14004badd:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   14004bae4:	mov    ebp,0x65724601
   14004bae9:	rex.RB outs dx,BYTE PTR gs:[rsi]
   14004baec:	jbe    0x14004bb57
   14004baee:	jb     0x14004bb5f
   14004baf0:	outs   dx,BYTE PTR ds:[rsi]
   14004baf1:	ins    DWORD PTR es:[rdi],dx
   14004baf2:	outs   dx,BYTE PTR gs:[rsi]
   14004baf4:	je     0x14004bb49
   14004baf6:	je     0x14004bb6a
   14004baf8:	imul   ebp,DWORD PTR [rsi+0x67],0xc8005773
   14004baff:	add    al,0x52
   14004bb01:	je     0x14004bb6f
   14004bb03:	push   rbp
   14004bb04:	outs   dx,BYTE PTR ds:[rsi]
   14004bb05:	ja     0x14004bb70
   14004bb07:	outs   dx,BYTE PTR ds:[rsi]
   14004bb08:	fs rex.RB js 0x14004bb0c
   14004bb0c:	pop    rdx
   14004bb0d:	add    ecx,DWORD PTR [rax+0x65]
   14004bb10:	(bad)  
   14004bb11:	jo     0x14004bb59
   14004bb13:	jb     0x14004bb7a
   14004bb15:	add    BYTE PTR gs:[rax],al
   14004bb18:	xchg   BYTE PTR [rbx],al
   14004bb1a:	rex.WB jae 0x14004bb61
   14004bb1d:	gs (bad) 
   14004bb1f:	jne    0x14004bb88
   14004bb21:	addr32 gs jb 0x14004bb75
   14004bb25:	jb     0x14004bb8c
   14004bb27:	jae    0x14004bb8e
   14004bb29:	outs   dx,BYTE PTR ds:[rsi]
   14004bb2a:	je     0x14004bb2c
   14004bb2c:	mov    eax,DWORD PTR [rbx]
   14004bb2e:	rex.WB jae 0x14004bb81
   14004bb31:	jb     0x14004bba2
   14004bb33:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bb36:	jae    0x14004bba7
   14004bb38:	jb     0x14004bb80
   14004bb3a:	gs (bad) 
   14004bb3c:	je     0x14004bbb3
   14004bb3e:	jb     0x14004bba5
   14004bb40:	push   rax
   14004bb41:	jb     0x14004bba8
   14004bb43:	jae    0x14004bbaa
   14004bb45:	outs   dx,BYTE PTR ds:[rsi]
   14004bb46:	je     0x14004bb48
   14004bb48:	mov    bl,0x1
   14004bb4a:	rex.RX ins BYTE PTR es:[rdi],dx
   14004bb4c:	jne    0x14004bbc1
   14004bb4e:	push   0x656c6946
   14004bb53:	rex.X jne 0x14004bbbc
   14004bb56:	data16 gs jb 0x14004bbcd
   14004bb5a:	add    BYTE PTR [rax],al
   14004bb5c:	in     eax,dx
   14004bb5d:	add    eax,0x65646957
   14004bb62:	rex.XB push 0x6f547261
   14004bb68:	rex.WRB jne 0x14004bbd7
   14004bb6b:	je     0x14004bbd6
   14004bb6d:	rex.X jns 0x14004bbe4
   14004bb70:	gs add ah,bh
   14004bb73:	add    DWORD PTR [rdi+0x65],eax
   14004bb76:	je     0x14004bbbb
   14004bb78:	outs   dx,DWORD PTR ds:[rsi]
   14004bb79:	outs   dx,BYTE PTR ds:[rsi]
   14004bb7a:	jae    0x14004bbeb
   14004bb7c:	ins    BYTE PTR es:[rdi],dx
   14004bb7d:	gs rex.XB push r8
   14004bb80:	add    BYTE PTR [rax],al
   14004bb82:	(bad)  
   14004bb83:	add    al,BYTE PTR [rdi+0x65]
   14004bb86:	je     0x14004bbcb
   14004bb88:	outs   dx,DWORD PTR ds:[rsi]
   14004bb89:	outs   dx,BYTE PTR ds:[rsi]
   14004bb8a:	jae    0x14004bbfb
   14004bb8c:	ins    BYTE PTR es:[rdi],dx
   14004bb8d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14004bb90:	fs add BYTE PTR gs:[rax],al
   14004bb94:	pop    rdi
   14004bb95:	add    ecx,DWORD PTR [rax+0x65]
   14004bb98:	(bad)  
   14004bb99:	jo     0x14004bbee
   14004bb9b:	imul   edi,DWORD PTR [rdx+0x65],0x3560000
   14004bba2:	rex.W
   14004bba3:	gs (bad) 
   14004bba5:	jo     0x14004bbe8
   14004bba7:	ins    BYTE PTR es:[rdi],dx
   14004bba8:	ins    BYTE PTR es:[rdi],dx
   14004bba9:	outs   dx,DWORD PTR ds:[rsi]
   14004bbaa:	movsxd eax,DWORD PTR [rax]
   14004bbac:	(bad)  
   14004bbad:	add    al,0x52
   14004bbaf:	je     0x14004bc1d
   14004bbb1:	push   rax
   14004bbb2:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   14004bbb6:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   14004bbbe:	jb     0x14004bbc0
   14004bbc0:	rex.WR add al,0x52
   14004bbc3:	(bad)  
   14004bbc4:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14004bbcb:	jo     0x14004bc41
   14004bbcd:	imul   ebp,DWORD PTR [rdi+0x6e],0x4bb0000
   14004bbd4:	push   rdx
   14004bbd5:	je     0x14004bc43
   14004bbd7:	rex.XB (bad) 
   14004bbd9:	jo     0x14004bc4f
   14004bbdb:	jne    0x14004bc4f
   14004bbdd:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14004bbe0:	outs   dx,BYTE PTR ds:[rsi]
   14004bbe1:	je     0x14004bc48
   14004bbe3:	js     0x14004bc59
   14004bbe5:	add    dl,al
   14004bbe7:	add    al,0x52
   14004bbe9:	je     0x14004bc57
   14004bbeb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004bbed:	outs   dx,DWORD PTR ds:[rsi]
   14004bbee:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14004bbf2:	jne    0x14004bc62
   14004bbf4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004bbf8:	outs   dx,BYTE PTR ds:[rsi]
   14004bbf9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004bbfb:	je     0x14004bc6f
   14004bbfd:	jns    0x14004bbff
   14004bbff:	add    cl,cl
   14004bc01:	add    al,0x52
   14004bc03:	je     0x14004bc71
   14004bc05:	push   rsi
   14004bc06:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14004bc0d:	outs   dx,BYTE PTR ds:[rsi]
   14004bc0e:	ja     0x14004bc79
   14004bc10:	outs   dx,BYTE PTR ds:[rsi]
   14004bc11:	add    BYTE PTR fs:[rax],al
   14004bc14:	movabs al,ds:0x6c646e61686e5505
   14004bc1d:	gs fs rex.RB js 0x14004bc85
   14004bc22:	gs jo  0x14004bc99
   14004bc25:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004bc2c:	gs jb  0x14004bc2f
   14004bc2f:	add    BYTE PTR [rsi+0x736c4601],ch
   14004bc35:	rex.B ins BYTE PTR es:[rdi],dx
   14004bc37:	ins    BYTE PTR es:[rdi],dx
   14004bc38:	outs   dx,DWORD PTR ds:[rsi]
   14004bc39:	movsxd eax,DWORD PTR [rax]
   14004bc3b:	add    BYTE PTR [rax+0x736c4601],dh
   14004bc41:	rex.RXB
   14004bc42:	gs je  0x14004bc9b
   14004bc45:	(bad)  
   14004bc46:	ins    BYTE PTR es:[rdi],dx
   14004bc47:	jne    0x14004bcae
   14004bc49:	add    BYTE PTR [rcx+0x736c4601],dh
   14004bc4f:	push   rbx
   14004bc50:	gs je  0x14004bca9
   14004bc53:	(bad)  
   14004bc54:	ins    BYTE PTR es:[rdi],dx
   14004bc55:	jne    0x14004bcbc
   14004bc57:	add    BYTE PTR [rdi+0x736c4601],ch
   14004bc5d:	rex.RX jb 0x14004bcc5
   14004bc60:	add    BYTE PTR gs:[rcx],ch
   14004bc63:	add    al,BYTE PTR [rdi+0x65]
   14004bc66:	je     0x14004bcab
   14004bc68:	jne    0x14004bcdc
   14004bc6a:	jb     0x14004bcd1
   14004bc6c:	outs   dx,BYTE PTR ds:[rsi]
   14004bc6d:	je     0x14004bcbf
   14004bc6f:	jb     0x14004bce0
   14004bc71:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bc74:	jae    0x14004bc76
   14004bc76:	jle    0x14004bc7d
   14004bc78:	push   rsp
   14004bc79:	gs jb  0x14004bce9
   14004bc7c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14004bc83:	outs   dx,DWORD PTR ds:[rsi]
   14004bc84:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bc87:	jae    0x14004bc89
   14004bc89:	add    BYTE PTR [rdi+0x74654702],al
   14004bc8f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004bc91:	fs jne 0x14004bd00
   14004bc94:	gs rex.W (bad) 
   14004bc97:	outs   dx,BYTE PTR ds:[rsi]
   14004bc98:	fs ins BYTE PTR es:[rdi],dx
   14004bc9a:	gs push rdi
   14004bc9c:	add    BYTE PTR [rax],al
   14004bc9e:	nop
   14004bc9f:	add    ecx,DWORD PTR [rcx+0x73]
   14004bca2:	push   rsi
   14004bca3:	(bad)  
   14004bca4:	ins    BYTE PTR es:[rdi],dx
   14004bca5:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   14004bcad:	addr32 gs add ah,al
   14004bcb1:	add    DWORD PTR [rdi+0x65],eax
   14004bcb4:	je     0x14004bcf7
   14004bcb6:	rex.XB push r8
   14004bcb8:	add    BYTE PTR [rax],al
   14004bcba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bcbb:	add    al,BYTE PTR [rdi+0x65]
   14004bcbe:	je     0x14004bd0f
   14004bcc0:	rex.RB
   14004bcc1:	rex.WRB
   14004bcc2:	rex.XB push r8
   14004bcc4:	add    BYTE PTR [rax],al
   14004bcc6:	rol    DWORD PTR [rcx],cl
   14004bcc8:	rex.RXB
   14004bcc9:	gs je  0x14004bd0f
   14004bccc:	push   rax
   14004bccd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004bccf:	outs   dx,WORD PTR ds:[rsi]
   14004bcd1:	add    BYTE PTR [rsi+0x65724601],bh
   14004bcd7:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   14004bce0:	(bad)
   14004bce3:	outs   dx,DWORD PTR ds:[rsi]
   14004bce4:	(bad)  
   14004bce5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14004bcee:	js     0x14004bd47
   14004bcf0:	add    BYTE PTR [rax],al
   14004bcf2:	sbb    BYTE PTR [rdi+rcx*2],al
   14004bcf5:	jne    0x14004bd6b
   14004bcf7:	jo     0x14004bd6e
   14004bcf9:	je     0x14004bd3f
   14004bcfb:	gs (bad) 
   14004bcfd:	jne    0x14004bd66
   14004bcff:	push   rbx
   14004bd00:	je     0x14004bd74
   14004bd02:	imul   ebp,DWORD PTR [rsi+0x67],0xc6000057
   14004bd09:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14004bd0d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14004bd16:	add    BYTE PTR [rax],al
   14004bd18:	pop    rbp
   14004bd19:	add    ecx,DWORD PTR [rax+0x65]
   14004bd1c:	(bad)  
   14004bd1d:	jo     0x14004bd71
   14004bd1f:	gs rex.B ins BYTE PTR es:[rdi],dx
   14004bd22:	ins    BYTE PTR es:[rdi],dx
   14004bd23:	outs   dx,DWORD PTR ds:[rsi]
   14004bd24:	movsxd eax,DWORD PTR [rax]
   14004bd26:	cmp    eax,0x74655305
   14004bd2b:	push   rbx
   14004bd2c:	je     0x14004bd92
   14004bd2e:	rex.W (bad) 
   14004bd30:	outs   dx,BYTE PTR ds:[rsi]
   14004bd31:	fs ins BYTE PTR es:[rdi],dx
   14004bd33:	add    BYTE PTR gs:[rax],al
   14004bd36:	sbb    BYTE PTR [rip+0x46746553],al        # 0x18679228f
   14004bd3c:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14004bd44:	gs jb  0x14004bd8c
   14004bd47:	js     0x14004bd49
   14004bd49:	add    BYTE PTR [rax],al
   14004bd4b:	(bad)  
   14004bd4c:	push   rdi
   14004bd4d:	jb     0x14004bdb8
   14004bd4f:	je     0x14004bdb6
   14004bd51:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bd53:	outs   dx,BYTE PTR ds:[rsi]
   14004bd54:	jae    0x14004bdc5
   14004bd56:	ins    BYTE PTR es:[rdi],dx
   14004bd57:	gs push rdi
   14004bd59:	add    BYTE PTR [rbx+0x4d434c03],dh
   14004bd5f:	(bad)  
   14004bd60:	jo     0x14004bdb5
   14004bd62:	je     0x14004bdd6
   14004bd64:	imul   ebp,DWORD PTR [rsi+0x67],0xe9007845
   14004bd6b:	add    al,BYTE PTR [rdi+0x65]
   14004bd6e:	je     0x14004bdc3
   14004bd70:	je     0x14004bde4
   14004bd72:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14004bd79:	push   rdi
   14004bd7a:	add    BYTE PTR [rax],al
   14004bd7c:	(bad)  
   14004bd7d:	add    BYTE PTR [rbx+0x72],al
   14004bd80:	gs (bad) 
   14004bd82:	je     0x14004bde9
   14004bd84:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d03de00
   14004bd8d:	(bad)  
   14004bd8e:	jo     0x14004bde6
   14004bd90:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14004bd97:	ins    BYTE PTR es:[rdi],dx
   14004bd98:	add    BYTE PTR gs:[rbx+0x6d6e5505],ah
   14004bd9f:	(bad)  
   14004bda0:	jo     0x14004bdf8
   14004bda2:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14004bda9:	ins    BYTE PTR es:[rdi],dx
   14004bdaa:	gs add ch,al
   14004bdad:	add    eax,0x74726956
   14004bdb2:	jne    0x14004be15
   14004bdb4:	ins    BYTE PTR es:[rdi],dx
   14004bdb5:	push   rbp
   14004bdb6:	outs   dx,BYTE PTR ds:[rsi]
   14004bdb7:	ins    BYTE PTR es:[rdi],dx
   14004bdb8:	outs   dx,DWORD PTR ds:[rsi]
   14004bdb9:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004bdbc:	mov    ebx,0x72695605
   14004bdc1:	je     0x14004be38
   14004bdc3:	(bad)  
   14004bdc4:	ins    BYTE PTR es:[rdi],dx
   14004bdc5:	rex.B ins BYTE PTR es:[rdi],dx
   14004bdc7:	ins    BYTE PTR es:[rdi],dx
   14004bdc8:	outs   dx,DWORD PTR ds:[rsi]
   14004bdc9:	movsxd eax,DWORD PTR [rax]
   14004bdcb:	add    bh,cl
   14004bdcd:	add    BYTE PTR [rbx+0x72],al
   14004bdd0:	gs (bad) 
   14004bdd2:	je     0x14004be39
   14004bdd4:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   14004bddd:	outs   dx,BYTE PTR ds:[rsi]
   14004bdde:	add    BYTE PTR [r8d],al
   14004bde2:	rol    BYTE PTR [rip+0x74726956],0x75        # 0x1b477273f
   14004bde9:	(bad)  
   14004bdea:	ins    BYTE PTR es:[rdi],dx
   14004bdeb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004bded:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004bdf0:	add    al,BYTE PTR [rdi+rcx*2]
   14004bdf3:	jo     0x14004be5a
   14004bdf5:	outs   dx,BYTE PTR ds:[rsi]
   14004bdf6:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   14004bdff:	outs   dx,BYTE PTR ds:[rsi]
   14004be00:	add    BYTE PTR [r8d],al
   14004be04:	rex.WB add al,BYTE PTR [r15+0x65]
   14004be08:	je     0x14004be4f
   14004be0a:	outs   dx,BYTE PTR ds:[rsi]
   14004be0b:	jbe    0x14004be76
   14004be0d:	jb     0x14004be7e
   14004be0f:	outs   dx,BYTE PTR ds:[rsi]
   14004be10:	ins    DWORD PTR es:[rdi],dx
   14004be11:	outs   dx,BYTE PTR gs:[rsi]
   14004be13:	je     0x14004be6b
   14004be15:	(bad)  
   14004be16:	jb     0x14004be81
   14004be18:	(bad)  
   14004be19:	(bad)  
   14004be1a:	ins    BYTE PTR es:[rdi],dx
   14004be1b:	gs push rdi
   14004be1d:	add    BYTE PTR [rcx],cl
   14004be1f:	add    eax,0x45746553
   14004be24:	outs   dx,BYTE PTR ds:[rsi]
   14004be25:	jbe    0x14004be90
   14004be27:	jb     0x14004be98
   14004be29:	outs   dx,BYTE PTR ds:[rsi]
   14004be2a:	ins    DWORD PTR es:[rdi],dx
   14004be2b:	outs   dx,BYTE PTR gs:[rsi]
   14004be2d:	je     0x14004be85
   14004be2f:	(bad)  
   14004be30:	jb     0x14004be9b
   14004be32:	(bad)  
   14004be33:	(bad)  
   14004be34:	ins    BYTE PTR es:[rdi],dx
   14004be35:	gs push rdi
   14004be37:	add    BYTE PTR [rcx+0x726f4601],bh
   14004be3d:	ins    DWORD PTR es:[rdi],dx
   14004be3e:	(bad)  
   14004be3f:	je     0x14004be8e
   14004be41:	gs jae 0x14004beb7
   14004be44:	(bad)  
   14004be45:	add    BYTE PTR gs:[r8d],al
   14004be4a:	mov    edx,0x726f4601
   14004be4f:	ins    DWORD PTR es:[rdi],dx
   14004be50:	(bad)  
   14004be51:	je     0x14004bea0
   14004be53:	gs jae 0x14004bec9
   14004be56:	(bad)  
   14004be57:	addr32 gs push rdi
   14004be5a:	add    BYTE PTR [rax],al
   14004be5c:	test   BYTE PTR [rip+0x74697257],0x65        # 0x1b46e30ba
   14004be63:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004be65:	outs   dx,BYTE PTR ds:[rsi]
   14004be66:	jae    0x14004bed7
   14004be68:	ins    BYTE PTR es:[rdi],dx
   14004be69:	add    BYTE PTR gs:[r10+rax*1],dl
   14004be6e:	rex.RXB
   14004be6f:	gs je  0x14004beb5
   14004be72:	outs   dx,DWORD PTR ds:[rsi]
   14004be73:	outs   dx,BYTE PTR ds:[rsi]
   14004be74:	jae    0x14004bee5
   14004be76:	ins    BYTE PTR es:[rdi],dx
   14004be77:	gs push rbx
   14004be79:	movsxd esi,DWORD PTR [rdx+0x65]
   14004be7c:	outs   dx,BYTE PTR gs:[rsi]
   14004be7e:	rex.X jne 0x14004bee7
   14004be81:	data16 gs jb 0x14004bece
   14004be85:	outs   dx,BYTE PTR ds:[rsi]
   14004be86:	outs   dx,WORD PTR ds:[rsi]
   14004be88:	add    BYTE PTR [rax],al
   14004be8a:	cmc    
   14004be8b:	add    al,BYTE PTR [rdi+0x65]
   14004be8e:	je     0x14004bee3
   14004be90:	jns    0x14004bf05
   14004be92:	je     0x14004bef9
   14004be94:	ins    DWORD PTR es:[rdi],dx
   14004be95:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004be97:	outs   dx,WORD PTR ds:[rsi]
   14004be99:	add    BYTE PTR [rdx+rax*1+0x4d746547],al
   14004bea0:	outs   dx,DWORD PTR ds:[rsi]
   14004bea1:	fs jne 0x14004bf10
   14004bea4:	gs rex.W (bad) 
   14004bea7:	outs   dx,BYTE PTR ds:[rsi]
   14004bea8:	fs ins BYTE PTR es:[rdi],dx
   14004beaa:	add    BYTE PTR gs:[r8],al
   14004beae:	sub    eax,DWORD PTR [rbx]
   14004beb0:	rex.RXB
   14004beb1:	gs je  0x14004bf0a
   14004beb4:	gs jb  0x14004bf2a
   14004beb7:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   14004bebe:	mov    es,WORD PTR [rcx]
   14004bec0:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14004bec8:	je     0x14004bf10
   14004beca:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x18a0000
   14004bed2:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
   14004beda:	gs add bl,al
   14004bedd:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14004bee1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   14004beea:	add    BYTE PTR [rax],al
   14004beec:	(bad)  
   14004beed:	add    al,BYTE PTR [rdi+0x65]
   14004bef0:	je     0x14004bf3f
   14004bef2:	outs   dx,DWORD PTR ds:[rsi]
   14004bef3:	fs jne 0x14004bf62
   14004bef6:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14004bf00:	add    BYTE PTR [rax],al
   14004bf02:	add    eax,DWORD PTR es:[rdi+0x65]
   14004bf06:	je     0x14004bf5d
   14004bf08:	jae    0x14004bf6f
   14004bf0a:	jb     0x14004bf50
   14004bf0c:	gs data16 (bad) 
   14004bf0f:	jne    0x14004bf7d
   14004bf11:	je     0x14004bf68
   14004bf13:	rex.WB
   14004bf14:	rex.WR (bad) 
   14004bf16:	outs   dx,BYTE PTR ds:[rsi]
   14004bf17:	addr32 jne 0x14004bf7b
   14004bf1a:	add    BYTE PTR gs:[eax],al
   14004bf1e:	test   eax,0x6e694601
   14004bf23:	fs push rdx
   14004bf25:	gs jae 0x14004bf97
   14004bf28:	jne    0x14004bf9c
   14004bf2a:	movsxd esp,DWORD PTR [rbp+0x45]
   14004bf2d:	js     0x14004bf86
   14004bf2f:	add    BYTE PTR [rdx+0x6e694601],ch
   14004bf35:	fs push rdx
   14004bf37:	gs jae 0x14004bfa9
   14004bf3a:	jne    0x14004bfae
   14004bf3c:	movsxd esp,DWORD PTR [rbp+0x57]
   14004bf3f:	add    cl,cl
   14004bf41:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14004bf45:	fs push rdx
   14004bf47:	gs jae 0x14004bfb9
   14004bf4a:	jne    0x14004bfbe
   14004bf4c:	movsxd esp,DWORD PTR [rbp+0x0]
   14004bf4f:	add    BYTE PTR [rbp+0x5],ch
   14004bf52:	push   rbx
   14004bf53:	imul   edi,DWORD PTR [rdx+0x65],0x6552666f
   14004bf5a:	jae    0x14004bfcb
   14004bf5c:	jne    0x14004bfd0
   14004bf5e:	movsxd esp,DWORD PTR [rbp+0x0]
   14004bf61:	add    bl,bl
   14004bf63:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14004bf67:	imul   edx,DWORD PTR [rdx+0x65],0x73
   14004bf6b:	outs   dx,DWORD PTR ds:[rsi]
   14004bf6c:	jne    0x14004bfe0
   14004bf6e:	movsxd esp,DWORD PTR [rbp+0x0]
   14004bf71:	add    BYTE PTR [rax+0x2],al
   14004bf74:	rex.RXB
   14004bf75:	gs je  0x14004bfbc
   14004bf78:	jb     0x14004bfe3
   14004bf7a:	jbe    0x14004bfe1
   14004bf7c:	push   rsp
   14004bf7d:	jns    0x14004bfef
   14004bf7f:	gs push rdi
   14004bf81:	add    BYTE PTR [rbx],cl
   14004bf83:	add    al,0x4f
   14004bf85:	jo     0x14004bfec
   14004bf87:	outs   dx,BYTE PTR ds:[rsi]
   14004bf88:	push   rax
   14004bf89:	jb     0x14004bffa
   14004bf8b:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bf8e:	jae    0x14004bf90
   14004bf90:	push   rbp
   14004bf91:	add    al,BYTE PTR [rdi+0x65]
   14004bf94:	je     0x14004bfdc
   14004bf96:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14004bf9e:	(bad)  
   14004bf9f:	jne    0x14004c015
   14004bfa1:	gs jae 0x14004bffb
   14004bfa4:	add    BYTE PTR [rax],al
   14004bfa6:	add    al,0x51
   14004bfa9:	jne    0x14004c010
   14004bfab:	jb     0x14004c026
   14004bfad:	push   rax
   14004bfae:	gs jb  0x14004c017
   14004bfb1:	outs   dx,DWORD PTR ds:[rsi]
   14004bfb2:	jb     0x14004c021
   14004bfb4:	(bad)  
   14004bfb5:	outs   dx,BYTE PTR ds:[rsi]
   14004bfb6:	movsxd esp,DWORD PTR [rbp+0x46]
   14004bfb9:	jb     0x14004c020
   14004bfbb:	jno    0x14004c032
   14004bfbd:	outs   dx,BYTE PTR gs:[rsi]
   14004bfbf:	movsxd edi,DWORD PTR [rcx+0x0]
   14004bfc2:	out    dx,eax
   14004bfc3:	add    BYTE PTR [rbx+0x72],al
   14004bfc6:	gs (bad) 
   14004bfc8:	je     0x14004c02f
   14004bfca:	push   rax
   14004bfcb:	jb     0x14004c03c
   14004bfcd:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bfd0:	jae    0x14004c029
   14004bfd2:	add    BYTE PTR [rax],al
   14004bfd4:	retf   
   14004bfd5:	add    eax,0x74696157
   14004bfda:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004bfdc:	jb     0x14004c031
   14004bfde:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14004bfe5:	push   0x65
   14004bfe7:	movsxd esi,DWORD PTR [rax+rax*1+0x17]
   14004bfeb:	add    eax,DWORD PTR [rdi+0x65]
   14004bfee:	je     0x14004c044
   14004bff0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14004bff7:	je     0x14004bff9
   14004bff9:	add    cl,cl
   14004bffb:	add    eax,0x74696157
   14004c000:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004c002:	jb     0x14004c051
   14004c004:	jne    0x14004c072
   14004c006:	je     0x14004c071
   14004c008:	jo     0x14004c076
   14004c00a:	gs rex.WRXB (bad) 
   14004c00d:	push   0x65
   14004c00f:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14004c013:	add    dh,cl
   14004c015:	add    BYTE PTR [rbx+0x72],al
   14004c018:	gs (bad) 
   14004c01a:	je     0x14004c081
   14004c01c:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x5705d100
   14004c025:	(bad)  
   14004c026:	imul   esi,DWORD PTR [rsi+rcx*2+0x61],0x5064656d
   14004c02e:	imul   esi,DWORD PTR [rax+0x65],0x5c000041
   14004c035:	add    al,0x52
   14004c037:	gs (bad) 
   14004c039:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x53052e00
   14004c043:	gs je  0x14004c094
   14004c046:	(bad)  
   14004c047:	ins    DWORD PTR es:[rdi],dx
   14004c048:	gs fs push rax
   14004c04b:	imul   esi,DWORD PTR [rax+0x65],0x646e6148
   14004c052:	ins    BYTE PTR es:[rdi],dx
   14004c053:	gs push rbx
   14004c055:	je     0x14004c0b8
   14004c057:	je     0x14004c0be
   14004c059:	add    ch,ah
   14004c05b:	add    BYTE PTR [rbx+0x72],al
   14004c05e:	gs (bad) 
   14004c060:	je     0x14004c0c7
   14004c062:	rex.WRB jne 0x14004c0d9
   14004c065:	gs js  0x14004c0bf
   14004c068:	add    BYTE PTR [rax],al
   14004c06a:	or     eax,DWORD PTR [rip+0x45746553]        # 0x1857925c3
   14004c070:	jbe    0x14004c0d7
   14004c072:	outs   dx,BYTE PTR ds:[rsi]
   14004c073:	je     0x14004c075
   14004c075:	add    bl,dl
   14004c077:	add    BYTE PTR [rbx+0x72],al
   14004c07a:	gs (bad) 
   14004c07c:	je     0x14004c0e3
   14004c07e:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   14004c087:	outs   dx,BYTE PTR ds:[rsi]
   14004c088:	addr32 push rdi
   14004c08a:	add    BYTE PTR [rax],al
   14004c08c:	retf   0x4300
   14004c08f:	jb     0x14004c0f6
   14004c091:	(bad)  
   14004c092:	je     0x14004c0f9
   14004c094:	rex.RB jbe 0x14004c0fc
   14004c097:	outs   dx,BYTE PTR ds:[rsi]
   14004c098:	je     0x14004c0f1
   14004c09a:	add    BYTE PTR [rax],al
   14004c09c:	cmp    eax,0x70754401
   14004c0a1:	ins    BYTE PTR es:[rdi],dx
   14004c0a2:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14004c0a9:	outs   dx,BYTE PTR ds:[rsi]
   14004c0aa:	fs ins BYTE PTR es:[rdi],dx
   14004c0ac:	add    BYTE PTR gs:[rbx+0x6c655204],bl
   14004c0b3:	gs (bad) 
   14004c0b5:	jae    0x14004c11c
   14004c0b7:	rex.WRB jne 0x14004c12e
   14004c0ba:	gs js  0x14004c0bd
   14004c0bd:	add    BYTE PTR [rdx],ch
   14004c0bf:	add    eax,DWORD PTR [rdi+0x65]
   14004c0c2:	je     0x14004c11a
   14004c0c4:	gs jb  0x14004c13a
   14004c0c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x22a0000
   14004c0ce:	rex.RXB
   14004c0cf:	gs je  0x14004c115
   14004c0d2:	jne    0x14004c146
   14004c0d4:	jb     0x14004c13b
   14004c0d6:	outs   dx,BYTE PTR ds:[rsi]
   14004c0d7:	je     0x14004c129
   14004c0d9:	jb     0x14004c14a
   14004c0db:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c0de:	jae    0x14004c129
   14004c0e0:	add    BYTE PTR fs:[rdi+0x1],dh
   14004c0e4:	rex.RB js 0x14004c157
   14004c0e7:	(bad)  
   14004c0e8:	outs   dx,BYTE PTR ds:[rsi]
   14004c0e9:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14004c0ec:	jbe    0x14004c157
   14004c0ee:	jb     0x14004c15f
   14004c0f0:	outs   dx,BYTE PTR ds:[rsi]
   14004c0f1:	ins    DWORD PTR es:[rdi],dx
   14004c0f2:	outs   dx,BYTE PTR gs:[rsi]
   14004c0f4:	je     0x14004c149
   14004c0f6:	je     0x14004c16a
   14004c0f8:	imul   ebp,DWORD PTR [rsi+0x67],0x69005773
   14004c0ff:	add    al,BYTE PTR [rdi+0x65]
   14004c102:	je     0x14004c14a
   14004c104:	jne    0x14004c172
   14004c106:	ins    BYTE PTR es:[rdi],dx
   14004c107:	push   rax
   14004c108:	(bad)  
   14004c109:	je     0x14004c173
   14004c10b:	rex.WRX (bad) 
   14004c10d:	ins    DWORD PTR es:[rdi],dx
   14004c10e:	gs push rdi
   14004c110:	add    BYTE PTR [rax],al
   14004c112:	mov    DWORD PTR [rax],0x61657243
   14004c118:	je     0x14004c17f
   14004c11a:	rex.RB jbe 0x14004c182
   14004c11d:	outs   dx,BYTE PTR ds:[rsi]
   14004c11e:	je     0x14004c161
   14004c120:	add    BYTE PTR [rax],al
   14004c122:	cs add al,0x50
   14004c125:	jb     0x14004c196
   14004c127:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c12a:	jae    0x14004c175
   14004c12c:	fs push rsp
   14004c12e:	outs   dx,DWORD PTR ds:[rsi]
   14004c12f:	push   rbx
   14004c130:	gs jae 0x14004c1a6
   14004c133:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   14004c13a:	rex.WRB add r8b,BYTE PTR [r15+0x65]
   14004c13e:	je     0x14004c185
   14004c140:	js     0x14004c1ab
   14004c142:	je     0x14004c187
   14004c144:	outs   dx,DWORD PTR ds:[rsi]
   14004c145:	fs gs push rsp
   14004c148:	push   0x64616572
   14004c14d:	add    BYTE PTR [rax],al
   14004c14f:	add    DWORD PTR [rbx+0x72],eax
   14004c152:	gs (bad) 
   14004c154:	je     0x14004c1bb
   14004c156:	push   rsp
   14004c157:	push   0x64616572
   14004c15c:	add    BYTE PTR [rax],al
   14004c15e:	jns    0x14004c165
   14004c160:	push   rbx
   14004c161:	ja     0x14004c1cc
   14004c163:	je     0x14004c1c8
   14004c165:	push   0x68546f54
   14004c16a:	jb     0x14004c1d1
   14004c16c:	(bad)  
   14004c16d:	add    BYTE PTR fs:[rax],al
   14004c170:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   14004c174:	je     0x14004c1bb
   14004c176:	js     0x14004c1e1
   14004c178:	je     0x14004c1bd
   14004c17a:	outs   dx,DWORD PTR ds:[rsi]
   14004c17b:	fs gs push rax
   14004c17e:	jb     0x14004c1ef
   14004c180:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c183:	jae    0x14004c185
   14004c185:	add    ch,cl
   14004c187:	add    al,BYTE PTR [rdi+0x65]
   14004c18a:	je     0x14004c1dc
   14004c18c:	jb     0x14004c1fd
   14004c18e:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c191:	jae    0x14004c1ea
   14004c193:	outs   dx,DWORD PTR ds:[rsi]
   14004c194:	jb     0x14004c201
   14004c196:	imul   ebp,DWORD PTR [rsi+0x67],0x53746553
   14004c19d:	imul   edi,DWORD PTR [rdx+0x65],0x5380000
   14004c1a4:	push   rbx
   14004c1a5:	gs je  0x14004c1f8
   14004c1a8:	jb     0x14004c219
   14004c1aa:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c1ad:	jae    0x14004c206
   14004c1af:	outs   dx,DWORD PTR ds:[rsi]
   14004c1b0:	jb     0x14004c21d
   14004c1b2:	imul   ebp,DWORD PTR [rsi+0x67],0x53746553
   14004c1b9:	imul   edi,DWORD PTR [rdx+0x65],0x5500000
   14004c1c0:	push   rbx
   14004c1c1:	gs je  0x14004c218
   14004c1c4:	push   0x64616572
   14004c1c9:	push   rax
   14004c1ca:	jb     0x14004c235
   14004c1cc:	outs   dx,DWORD PTR ds:[rsi]
   14004c1cd:	jb     0x14004c238
   14004c1cf:	je     0x14004c24a
   14004c1d1:	add    BYTE PTR [rsi+0x72695605],bh
   14004c1d7:	je     0x14004c24e
   14004c1d9:	(bad)  
   14004c1da:	ins    BYTE PTR es:[rdi],dx
   14004c1db:	rex.RX jb 0x14004c243
   14004c1de:	add    BYTE PTR gs:[rdx+0x73655204],dh
   14004c1e5:	gs je  0x14004c22d
   14004c1e8:	jbe    0x14004c24f
   14004c1ea:	outs   dx,BYTE PTR ds:[rsi]
   14004c1eb:	je     0x14004c1ed
   14004c1ed:	add    BYTE PTR [rcx],dh
   14004c1ef:	(bad)  
   14004c1f0:	ins    BYTE PTR es:[rdi],dx
   14004c1f1:	jae    0x14004c267
   14004c1f3:	jb     0x14004c261
   14004c1f5:	outs   dx,BYTE PTR gs:[rsi]
   14004c1f7:	push   rdi
   14004c1f8:	add    BYTE PTR [rax],al
   14004c1fa:	(bad)  
   14004c1fb:	add    eax,0x46746553
   14004c200:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14004c208:	gs jb  0x14004c20b
   14004c20b:	add    BYTE PTR [rsi+0x70655204],ch
   14004c211:	ins    BYTE PTR es:[rdi],dx
   14004c212:	(bad)  
   14004c213:	movsxd esp,DWORD PTR [rbp+0x46]
   14004c216:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x1240000
   14004c21e:	rex.R
   14004c21f:	gs ins BYTE PTR es:[rdi],dx
   14004c221:	gs je  0x14004c289
   14004c224:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x57060300
   14004c22d:	jb     0x14004c298
   14004c22f:	je     0x14004c296
   14004c231:	imul   r13d,DWORD PTR [rbp+r12*2+0x47],0x65687461
   14004c23a:	jb     0x14004c23c
   14004c23c:	test   al,0x2
   14004c23e:	rex.RXB
   14004c23f:	gs je  0x14004c291
   14004c242:	jbe    0x14004c2a9
   14004c244:	jb     0x14004c2b2
   14004c246:	(bad)  
   14004c247:	jo     0x14004c2b9
   14004c249:	gs fs push rdx
   14004c24c:	gs jae 0x14004c2c4
   14004c24f:	ins    BYTE PTR es:[rdi],dx
   14004c250:	je     0x14004c252
   14004c252:	push   rdx
   14004c253:	add    BYTE PTR [rbx+0x6f],al
   14004c256:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004c258:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004c260:	add    BYTE PTR [rax],al
   14004c262:	sbb    eax,0x436f4300
   14004c267:	jb     0x14004c2ce
   14004c269:	(bad)  
   14004c26a:	je     0x14004c2d1
   14004c26c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004c26e:	jae    0x14004c2e4
   14004c270:	(bad)  
   14004c271:	outs   dx,BYTE PTR ds:[rsi]
   14004c272:	movsxd esp,DWORD PTR [rbp+0x0]
   14004c275:	add    BYTE PTR [rax+0x74615000],dl
   14004c27b:	push   0x6f6d6552
   14004c280:	jbe    0x14004c2e7
   14004c282:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x57636570
   14004c28b:	add    BYTE PTR [rax+rax*1],dh
   14004c28e:	push   rax
   14004c28f:	(bad)  
   14004c290:	je     0x14004c2fa
   14004c292:	rex.B
   14004c293:	fs fs rex.X (bad) 
   14004c297:	movsxd ebp,DWORD PTR [rbx+0x73]
   14004c29a:	ins    BYTE PTR es:[rdi],dx
   14004c29b:	(bad)  
   14004c29c:	jae    0x14004c306
   14004c29e:	push   rdi
   14004c29f:	add    BYTE PTR [rax],bh
   14004c2a1:	add    BYTE PTR [rax+0x61],dl
   14004c2a4:	je     0x14004c30e
   14004c2a6:	rex.B jo 0x14004c319
   14004c2a9:	outs   dx,BYTE PTR gs:[rsi]
   14004c2ab:	fs push rdi
   14004c2ad:	add    BYTE PTR [rsi+0x54734901],dl
   14004c2b3:	gs js  0x14004c32a
   14004c2b6:	push   rbp
   14004c2b7:	outs   dx,BYTE PTR ds:[rsi]
   14004c2b8:	imul   esp,DWORD PTR [rbx+0x6f],0xab006564
   14004c2bf:	add    dl,BYTE PTR [rdx+0x65]
   14004c2c2:	imul   esi,DWORD PTR [ebx+0x74],0x76457265
   14004c2ca:	outs   dx,BYTE PTR gs:[rsi]
   14004c2cc:	je     0x14004c321
   14004c2ce:	outs   dx,DWORD PTR ds:[rsi]
   14004c2cf:	jne    0x14004c343
   14004c2d1:	movsxd esp,DWORD PTR [rbp+0x57]
   14004c2d4:	add    BYTE PTR [rax],al
   14004c2d6:	jmp    0x14004c2d8
   14004c2d8:	rex.R
   14004c2d9:	gs jb  0x14004c341
   14004c2dc:	imul   esi,DWORD PTR [ebx+0x74],0x76457265
   14004c2e4:	outs   dx,BYTE PTR gs:[rsi]
   14004c2e6:	je     0x14004c33b
   14004c2e8:	outs   dx,DWORD PTR ds:[rsi]
   14004c2e9:	jne    0x14004c35d
   14004c2eb:	movsxd esp,DWORD PTR [rbp+0x0]
   14004c2ee:	mov    edx,0x70655202
   14004c2f3:	outs   dx,DWORD PTR ds:[rsi]
   14004c2f4:	jb     0x14004c36a
   14004c2f6:	rex.RB jbe 0x14004c35e
   14004c2f9:	outs   dx,BYTE PTR ds:[rsi]
   14004c2fa:	je     0x14004c33d
   14004c2fc:	add    BYTE PTR [rax],al
   14004c2fe:	mov    ebx,0x70655202
   14004c303:	outs   dx,DWORD PTR ds:[rsi]
   14004c304:	jb     0x14004c37a
   14004c306:	rex.RB jbe 0x14004c36e
   14004c309:	outs   dx,BYTE PTR ds:[rsi]
   14004c30a:	je     0x14004c363
   14004c30c:	add    BYTE PTR [rax],al
   14004c30e:	jo     0x14004c311
   14004c310:	rex.RXB
   14004c311:	gs je  0x14004c368
   14004c314:	jb     0x14004c377
   14004c316:	movsxd esp,DWORD PTR [rbp+0x45]
   14004c319:	outs   dx,BYTE PTR ds:[rsi]
   14004c31a:	(bad)  
   14004c31b:	(bad)  
   14004c31c:	ins    BYTE PTR es:[rdi],dx
   14004c31d:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14004c320:	(bad)  
   14004c321:	addr32 jae 0x14004c324
   14004c324:	jb     0x14004c327
   14004c326:	rex.RXB
   14004c327:	gs je  0x14004c37e
   14004c32a:	jb     0x14004c38d
   14004c32c:	movsxd esp,DWORD PTR [rbp+0x4c]
   14004c32f:	outs   dx,DWORD PTR ds:[rsi]
   14004c330:	addr32 addr32 gs jb 0x14004c37d
   14004c335:	(bad)  
   14004c336:	outs   dx,BYTE PTR ds:[rsi]
   14004c337:	fs ins BYTE PTR es:[rdi],dx
   14004c339:	add    BYTE PTR gs:[rax],al
   14004c33c:	and    DWORD PTR [rbx],eax
   14004c33e:	push   rsp
   14004c33f:	jb     0x14004c3a2
   14004c341:	movsxd esp,DWORD PTR [rbp+0x45]
   14004c344:	jbe    0x14004c3ab
   14004c346:	outs   dx,BYTE PTR ds:[rsi]
   14004c347:	je     0x14004c349
   14004c349:	add    BYTE PTR [rcx+0x67655202],dh
   14004c34f:	imul   esi,DWORD PTR [rbx+0x74],0x72547265
   14004c356:	(bad)  
   14004c357:	movsxd esp,DWORD PTR [rbp+0x47]
   14004c35a:	jne    0x14004c3c5
   14004c35c:	fs jae 0x14004c3a0
   14004c35f:	add    BYTE PTR [rcx+0x1],dh
   14004c362:	rex.RXB
   14004c363:	gs je  0x14004c3ba
   14004c366:	jb     0x14004c3c9
   14004c368:	movsxd esp,DWORD PTR [rbp+0x45]
   14004c36b:	outs   dx,BYTE PTR ds:[rsi]
   14004c36c:	(bad)  
   14004c36d:	(bad)  
   14004c36e:	ins    BYTE PTR es:[rdi],dx
   14004c36f:	gs rex.WR
   14004c371:	gs jbe 0x14004c3d9
   14004c374:	ins    BYTE PTR es:[rdi],dx
   14004c375:	add    BYTE PTR [rdx+0x4],bl
   14004c378:	push   rdx
   14004c379:	gs (bad) 
   14004c37b:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14004c37e:	outs   dx,BYTE PTR ds:[rsi]
   14004c37f:	jae    0x14004c3f0
   14004c381:	ins    BYTE PTR es:[rdi],dx
   14004c382:	gs push rdi
   14004c384:	add    BYTE PTR [rax],al
   14004c386:	jo     0x14004c38b
   14004c388:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004c38a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004c392:	rex.XB jb 0x14004c3fe
   14004c395:	je     0x14004c400
   14004c397:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004c39a:	push   rbx
   14004c39b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004c3a0:	outs   dx,BYTE PTR ds:[rsi]
   14004c3a1:	rex.RB js 0x14004c3a4
   14004c3a4:	pop    rcx
   14004c3a5:	add    ecx,DWORD PTR [rax+0x65]
   14004c3a8:	(bad)  
   14004c3a9:	jo     0x14004c3ef
   14004c3ab:	gs jae 0x14004c422
   14004c3ae:	jb     0x14004c41f
   14004c3b0:	jns    0x14004c3b2
   14004c3b2:	inc    BYTE PTR [rbx]
   14004c3b4:	rex.WRXB jo 0x14004c41c
   14004c3b7:	outs   dx,BYTE PTR ds:[rsi]
   14004c3b8:	rex.RB jbe 0x14004c420
   14004c3bb:	outs   dx,BYTE PTR ds:[rsi]
   14004c3bc:	je     0x14004c3ff
   14004c3be:	add    BYTE PTR [rax],al
   14004c3c0:	pop    rbx
   14004c3c1:	add    al,BYTE PTR [rdi+0x65]
   14004c3c4:	je     0x14004c40c
   14004c3c6:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14004c3ce:	xchg   ebp,eax
   14004c3cf:	add    DWORD PTR [rsi+0x69],eax
   14004c3d2:	outs   dx,BYTE PTR ds:[rsi]
   14004c3d3:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   14004c3dc:	gs push rdi
   14004c3de:	add    BYTE PTR [rax],al
   14004c3e0:	outs   dx,BYTE PTR ds:[rsi]
   14004c3e1:	add    ecx,DWORD PTR [rcx+0x6e]
   14004c3e4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004c3ec:	rex.XB jb 0x14004c458
   14004c3ef:	je     0x14004c45a
   14004c3f1:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004c3f4:	push   rbx
   14004c3f5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004c3fa:	outs   dx,BYTE PTR ds:[rsi]
   14004c3fb:	add    BYTE PTR [rcx],dh
   14004c3fd:	add    DWORD PTR [rbp+riz*2+0x76],eax
   14004c401:	imul   esp,DWORD PTR [rbx+0x65],0x6f436f49
   14004c408:	outs   dx,BYTE PTR ds:[rsi]
   14004c409:	je     0x14004c47d
   14004c40b:	outs   dx,DWORD PTR ds:[rsi]
   14004c40c:	ins    BYTE PTR es:[rdi],dx
   14004c40d:	add    BYTE PTR [rsi],al
   14004c40f:	add    al,0x4f
   14004c411:	jo     0x14004c478
   14004c413:	outs   dx,BYTE PTR ds:[rsi]
   14004c414:	rex.WRB jne 0x14004c48b
   14004c417:	gs js  0x14004c45b
   14004c41a:	add    BYTE PTR [rax],al
   14004c41c:	rex.RX add eax,0x54746553
   14004c422:	push   0x64616572
   14004c427:	rex.B
   14004c428:	data16 imul bp,WORD PTR [rsi+0x69],0x7974
   14004c42f:	rex.WRB (bad) 
   14004c431:	jae    0x14004c49e
   14004c433:	add    BYTE PTR [rbx+0x3],cl
   14004c436:	rex.RXB ins BYTE PTR es:[rdi],dx
   14004c438:	outs   dx,DWORD PTR ds:[rsi]
   14004c439:	(bad)
   14004c43e:	ins    DWORD PTR es:[rdi],dx
   14004c43f:	outs   dx,DWORD PTR ds:[rsi]
   14004c440:	jb     0x14004c4bb
   14004c442:	push   rbx
   14004c443:	je     0x14004c4a6
   14004c445:	je     0x14004c4bc
   14004c447:	jae    0x14004c48e
   14004c449:	js     0x14004c44b
   14004c44b:	add    cl,dh
   14004c44d:	add    DWORD PTR [rdi+0x65],eax
   14004c450:	je     0x14004c495
   14004c452:	outs   dx,DWORD PTR ds:[rsi]
   14004c453:	ins    DWORD PTR es:[rdi],dx
   14004c454:	jo     0x14004c4cb
   14004c456:	je     0x14004c4bd
   14004c458:	jb     0x14004c4a8
   14004c45a:	(bad)  
   14004c45b:	ins    DWORD PTR es:[rdi],dx
   14004c45c:	gs push rdi
   14004c45e:	add    BYTE PTR [rax],al
   14004c460:	sub    al,0x3
   14004c462:	rex.RXB
   14004c463:	gs je  0x14004c4bc
   14004c466:	gs jb  0x14004c4dc
   14004c469:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   14004c470:	jno    0x14004c474
   14004c472:	rex.RXB
   14004c473:	gs je  0x14004c4c2
   14004c476:	outs   dx,DWORD PTR ds:[rsi]
   14004c477:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004c47a:	push   rsp
   14004c47b:	imul   ebp,DWORD PTR [rbp+0x65],0x1740000
   14004c482:	rex.RB js 0x14004c4ee
   14004c485:	je     0x14004c4db
   14004c487:	push   0x64616572
   14004c48c:	add    BYTE PTR [rax],al
   14004c48e:	(bad)  
   14004c48f:	add    al,0x4f
   14004c491:	jo     0x14004c4f8
   14004c493:	outs   dx,BYTE PTR ds:[rsi]
   14004c494:	push   rbx
   14004c495:	gs ins DWORD PTR es:[rdi],dx
   14004c497:	(bad)  
   14004c498:	jo     0x14004c502
   14004c49a:	outs   dx,DWORD PTR ds:[rsi]
   14004c49b:	jb     0x14004c502
   14004c49d:	add    BYTE PTR [r8],al
   14004c4a0:	repnz add BYTE PTR [rbx+0x72],al
   14004c4a4:	gs (bad) 
   14004c4a6:	je     0x14004c50d
   14004c4a8:	push   rbx
   14004c4a9:	gs ins DWORD PTR es:[rdi],dx
   14004c4ab:	(bad)  
   14004c4ac:	jo     0x14004c516
   14004c4ae:	outs   dx,DWORD PTR ds:[rsi]
   14004c4af:	jb     0x14004c516
   14004c4b1:	add    BYTE PTR [r8],al
   14004c4b4:	lahf   
   14004c4b5:	add    al,0x52
   14004c4b7:	gs ins BYTE PTR es:[rdi],dx
   14004c4b9:	gs (bad) 
   14004c4bb:	jae    0x14004c522
   14004c4bd:	push   rbx
   14004c4be:	gs ins DWORD PTR es:[rdi],dx
   14004c4c0:	(bad)  
   14004c4c1:	jo     0x14004c52b
   14004c4c3:	outs   dx,DWORD PTR ds:[rsi]
   14004c4c4:	jb     0x14004c52b
	...

Disassembly of section .data:

000000014004d000 <.data>:
   14004d000:	and    BYTE PTR [rip+0x14005],ah        # 0x14006100b
	...
   14004d00e:	add    BYTE PTR [rax],al
   14004d010:	and    BYTE PTR [rip+0x14005],ah        # 0x14006101b
   14004d016:	add    BYTE PTR [rax],al
   14004d018:	add    DWORD PTR [rcx],eax
	...
   14004d022:	add    BYTE PTR [rax],al
   14004d024:	add    BYTE PTR [rax],dl
	...
   14004d046:	add    BYTE PTR [rax],al
   14004d048:	add    al,BYTE PTR [rax]
   14004d04a:	add    BYTE PTR [rax],al
   14004d04c:	add    DWORD PTR [rax],eax
	...
   14004d076:	add    BYTE PTR [rax],al
   14004d078:	add    al,BYTE PTR [rax]
   14004d07a:	add    BYTE PTR [rax],al
   14004d07c:	add    al,BYTE PTR [rax]
	...
   14004d3be:	add    BYTE PTR [rax],al
   14004d3c0:	lock xchg edi,eax
   14004d3c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d3cd:	add    BYTE PTR [rax],al
   14004d3cf:	add    BYTE PTR [rsi],ch
   14004d3d1:	(bad)  
   14004d3d2:	push   r14
   14004d3d4:	je     0x14004d44f
   14004d3d6:	jo     0x14004d43d
   14004d3d8:	pop    rdi
   14004d3d9:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14004d3e0:	(bad)  
   14004d3e1:	(bad)  
   14004d3e2:	(bad)  
   14004d3e3:	inc    DWORD PTR [rax]
	...
   14004d3ed:	add    BYTE PTR [rax],al
   14004d3ef:	add    bh,bh
   14004d3f1:	(bad)  
   14004d3f2:	(bad)  
   14004d3f3:	(bad)  
   14004d3f4:	(bad)  
   14004d3f5:	(bad)  
   14004d3f6:	(bad)  
   14004d3f7:	inc    DWORD PTR [rax+0xa]
	...
   14004d445:	add    BYTE PTR [rax],al
   14004d447:	add    BYTE PTR [rdx],dh
   14004d449:	movabs ds:0x5dcd00002b992ddf,al
   14004d452:	and    dl,dl
   14004d454:	data16 (bad) 
   14004d456:	(bad)  
   14004d457:	inc    DWORD PTR [rcx]
   14004d459:	add    BYTE PTR [rax],al
   14004d45b:	add    BYTE PTR [rdx],al
	...
   14004d465:	add    BYTE PTR [rax],al
   14004d467:	add    BYTE PTR [rcx],al
	...
   14004d475:	add    BYTE PTR [rax],al
   14004d477:	add    BYTE PTR [rcx],al
	...
   14004d495:	add    BYTE PTR [rax],al
   14004d497:	add    BYTE PTR [rcx],al
	...
   14004d4a5:	add    BYTE PTR [rax],al
   14004d4a7:	add    BYTE PTR [rcx],al
	...
   14004d4c5:	add    BYTE PTR [rax],al
   14004d4c7:	add    BYTE PTR [rcx],al
	...
   14004d4d5:	add    BYTE PTR [rax],al
   14004d4d7:	add    BYTE PTR [rcx],al
	...
   14004d4e5:	add    BYTE PTR [rax],al
   14004d4e7:	add    BYTE PTR [rcx],al
	...
   14004d505:	add    BYTE PTR [rax],al
   14004d507:	add    BYTE PTR [rcx],al
	...
   14004d525:	add    BYTE PTR [rax],al
   14004d527:	add    BYTE PTR [rcx],al
	...
   14004d535:	add    BYTE PTR [rax],al
   14004d537:	add    BYTE PTR [rcx],al
	...
   14004d545:	add    BYTE PTR [rax],al
   14004d547:	add    BYTE PTR [rcx],al
	...
   14004d565:	add    BYTE PTR [rax],al
   14004d567:	add    BYTE PTR [rcx],al
	...
   14004d575:	add    BYTE PTR [rax],al
   14004d577:	add    BYTE PTR [rcx],al
	...
   14004d585:	add    BYTE PTR [rax],al
   14004d587:	add    BYTE PTR [rcx],al
	...
   14004d69d:	add    BYTE PTR [rax],al
   14004d69f:	add    BYTE PTR [rax+0x14003a4],al
   14004d6a5:	add    BYTE PTR [rax],al
   14004d6a7:	add    BYTE PTR [rax+0x14003a4],cl
   14004d6ad:	add    BYTE PTR [rax],al
   14004d6af:	add    BYTE PTR [rcx],al
   14004d6b1:	add    BYTE PTR [rax],al
   14004d6b3:	add    BYTE PTR [rsi],dl
   14004d6b5:	add    BYTE PTR [rax],al
   14004d6b7:	add    BYTE PTR [rdx],al
   14004d6b9:	add    BYTE PTR [rax],al
   14004d6bb:	add    BYTE PTR [rdx],al
   14004d6bd:	add    BYTE PTR [rax],al
   14004d6bf:	add    BYTE PTR [rbx],al
   14004d6c1:	add    BYTE PTR [rax],al
   14004d6c3:	add    BYTE PTR [rdx],al
   14004d6c5:	add    BYTE PTR [rax],al
   14004d6c7:	add    BYTE PTR [rax+rax*1],al
   14004d6ca:	add    BYTE PTR [rax],al
   14004d6cc:	sbb    BYTE PTR [rax],al
   14004d6ce:	add    BYTE PTR [rax],al
   14004d6d0:	add    eax,0xd000000
   14004d6d5:	add    BYTE PTR [rax],al
   14004d6d7:	add    BYTE PTR [rsi],al
   14004d6d9:	add    BYTE PTR [rax],al
   14004d6db:	add    BYTE PTR [rcx],cl
   14004d6dd:	add    BYTE PTR [rax],al
   14004d6df:	add    BYTE PTR [rdi],al
   14004d6e1:	add    BYTE PTR [rax],al
   14004d6e3:	add    BYTE PTR [rax+rax*1],cl
   14004d6e6:	add    BYTE PTR [rax],al
   14004d6e8:	or     BYTE PTR [rax],al
   14004d6ea:	add    BYTE PTR [rax],al
   14004d6ec:	or     al,0x0
   14004d6ee:	add    BYTE PTR [rax],al
   14004d6f0:	or     DWORD PTR [rax],eax
   14004d6f2:	add    BYTE PTR [rax],al
   14004d6f4:	or     al,0x0
   14004d6f6:	add    BYTE PTR [rax],al
   14004d6f8:	or     al,BYTE PTR [rax]
   14004d6fa:	add    BYTE PTR [rax],al
   14004d6fc:	(bad)  
   14004d6fd:	add    BYTE PTR [rax],al
   14004d6ff:	add    BYTE PTR [rbx],cl
   14004d701:	add    BYTE PTR [rax],al
   14004d703:	add    BYTE PTR [rax],cl
   14004d705:	add    BYTE PTR [rax],al
   14004d707:	add    BYTE PTR [rax+rax*1],cl
   14004d70a:	add    BYTE PTR [rax],al
   14004d70c:	(bad)  
   14004d70d:	add    BYTE PTR [rax],al
   14004d70f:	add    BYTE PTR [rip+0x16000000],cl        # 0x15604d715
   14004d715:	add    BYTE PTR [rax],al
   14004d717:	add    BYTE PTR [rdi],cl
   14004d719:	add    BYTE PTR [rax],al
   14004d71b:	add    BYTE PTR [rdx],al
   14004d71d:	add    BYTE PTR [rax],al
   14004d71f:	add    BYTE PTR [rax],dl
   14004d721:	add    BYTE PTR [rax],al
   14004d723:	add    BYTE PTR [rip+0x11000000],cl        # 0x15104d729
   14004d729:	add    BYTE PTR [rax],al
   14004d72b:	add    BYTE PTR [rdx],dl
   14004d72d:	add    BYTE PTR [rax],al
   14004d72f:	add    BYTE PTR [rdx],dl
   14004d731:	add    BYTE PTR [rax],al
   14004d733:	add    BYTE PTR [rdx],al
   14004d735:	add    BYTE PTR [rax],al
   14004d737:	add    BYTE PTR [rcx],ah
   14004d739:	add    BYTE PTR [rax],al
   14004d73b:	add    BYTE PTR [rip+0x35000000],cl        # 0x17504d741
   14004d741:	add    BYTE PTR [rax],al
   14004d743:	add    BYTE PTR [rdx],al
   14004d745:	add    BYTE PTR [rax],al
   14004d747:	add    BYTE PTR [rcx+0x0],al
   14004d74a:	add    BYTE PTR [rax],al
   14004d74c:	or     eax,0x43000000
   14004d751:	add    BYTE PTR [rax],al
   14004d753:	add    BYTE PTR [rdx],al
   14004d755:	add    BYTE PTR [rax],al
   14004d757:	add    BYTE PTR [rax+0x0],dl
   14004d75a:	add    BYTE PTR [rax],al
   14004d75c:	adc    DWORD PTR [rax],eax
   14004d75e:	add    BYTE PTR [rax],al
   14004d760:	push   rdx
   14004d761:	add    BYTE PTR [rax],al
   14004d763:	add    BYTE PTR [rip+0x53000000],cl        # 0x19304d769
   14004d769:	add    BYTE PTR [rax],al
   14004d76b:	add    BYTE PTR [rip+0x57000000],cl        # 0x19704d771
   14004d771:	add    BYTE PTR [rax],al
   14004d773:	add    BYTE PTR [rsi],dl
   14004d775:	add    BYTE PTR [rax],al
   14004d777:	add    BYTE PTR [rcx+0x0],bl
   14004d77a:	add    BYTE PTR [rax],al
   14004d77c:	or     eax,DWORD PTR [rax]
   14004d77e:	add    BYTE PTR [rax],al
   14004d780:	ins    BYTE PTR es:[rdi],dx
   14004d781:	add    BYTE PTR [rax],al
   14004d783:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad04d789
   14004d789:	add    BYTE PTR [rax],al
   14004d78b:	add    BYTE PTR [rax],ah
   14004d78d:	add    BYTE PTR [rax],al
   14004d78f:	add    BYTE PTR [rax+0x0],dh
   14004d792:	add    BYTE PTR [rax],al
   14004d794:	sbb    al,0x0
   14004d796:	add    BYTE PTR [rax],al
   14004d798:	jb     0x14004d79a
   14004d79a:	add    BYTE PTR [rax],al
   14004d79c:	or     DWORD PTR [rax],eax
   14004d79e:	add    BYTE PTR [rax],al
   14004d7a0:	(bad)  
   14004d7a1:	add    BYTE PTR [rax],al
   14004d7a3:	add    BYTE PTR [rsi],dl
   14004d7a5:	add    BYTE PTR [rax],al
   14004d7a7:	add    BYTE PTR [rax+0xa000000],al
   14004d7ad:	add    BYTE PTR [rax],al
   14004d7af:	add    BYTE PTR [rcx+0xa000000],al
   14004d7b5:	add    BYTE PTR [rax],al
   14004d7b7:	add    BYTE PTR [rdx+0x9000000],al
   14004d7bd:	add    BYTE PTR [rax],al
   14004d7bf:	add    BYTE PTR [rbx+0x16000000],al
   14004d7c5:	add    BYTE PTR [rax],al
   14004d7c7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14004d7ce:	add    BYTE PTR [rax],al
   14004d7d0:	xchg   ecx,eax
   14004d7d1:	add    BYTE PTR [rax],al
   14004d7d3:	add    BYTE PTR [rcx],ch
   14004d7d5:	add    BYTE PTR [rax],al
   14004d7d7:	add    BYTE PTR [rsi+0xd000000],bl
   14004d7dd:	add    BYTE PTR [rax],al
   14004d7df:	add    BYTE PTR [rcx+0x2000000],ah
   14004d7e5:	add    BYTE PTR [rax],al
   14004d7e7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14004d7ee:	add    BYTE PTR [rax],al
   14004d7f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d7f1:	add    BYTE PTR [rax],al
   14004d7f3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf704d7f9
   14004d7f9:	add    BYTE PTR [rax],al
   14004d7fb:	add    BYTE PTR [rcx],dl
   14004d7fd:	add    BYTE PTR [rax],al
   14004d7ff:	add    dh,cl
   14004d801:	add    BYTE PTR [rax],al
   14004d803:	add    BYTE PTR [rdx],al
   14004d805:	add    BYTE PTR [rax],al
   14004d807:	add    bh,dl
   14004d809:	add    BYTE PTR [rax],al
   14004d80b:	add    BYTE PTR [rbx],cl
   14004d80d:	add    BYTE PTR [rax],al
   14004d80f:	add    BYTE PTR [rax],bl
   14004d811:	(bad)  
   14004d812:	add    BYTE PTR [rax],al
   14004d814:	or     al,0x0
   14004d816:	add    BYTE PTR [rax],al
   14004d818:	or     al,0x0
   14004d81a:	add    BYTE PTR [rax],al
   14004d81c:	or     BYTE PTR [rax],al
   14004d81e:	add    BYTE PTR [rax],al
   14004d820:	add    al,BYTE PTR [rax]
	...
   14004d82e:	add    BYTE PTR [rax],al
   14004d830:	(bad)  
   14004d831:	(bad)  
   14004d832:	(bad)  
   14004d833:	inc    DWORD PTR [rbx+0x0]
	...
   14004d83e:	add    BYTE PTR [rax],al
   14004d840:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d841:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d842:	add    eax,DWORD PTR [rax+0x1]
   14004d845:	add    BYTE PTR [rax],al
   14004d847:	add    BYTE PTR [rax+0x14003a5],ch
   14004d84d:	add    BYTE PTR [rax],al
   14004d84f:	add    BYTE PTR [rbp+riz*4+0x14003],ch
   14004d856:	add    BYTE PTR [rax],al
   14004d858:	mov    al,0xa5
   14004d85a:	add    eax,DWORD PTR [rax+0x1]
   14004d85d:	add    BYTE PTR [rax],al
   14004d85f:	add    BYTE PTR [rbp+riz*4+0x14003],dh
   14004d866:	add    BYTE PTR [rax],al
   14004d868:	mov    eax,0x14003a5
   14004d86d:	add    BYTE PTR [rax],al
   14004d86f:	add    BYTE PTR [rbp+riz*4+0x14003],bh
   14004d876:	add    BYTE PTR [rax],al
   14004d878:	shl    BYTE PTR [rbp+0x14003],0x0
   14004d87f:	add    al,cl
   14004d881:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d882:	add    eax,DWORD PTR [rax+0x1]
   14004d885:	add    BYTE PTR [rax],al
   14004d887:	add    al,dl
   14004d889:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d88a:	add    eax,DWORD PTR [rax+0x1]
   14004d88d:	add    BYTE PTR [rax],al
   14004d88f:	add    al,bl
   14004d891:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d892:	add    eax,DWORD PTR [rax+0x1]
   14004d895:	add    BYTE PTR [rax],al
   14004d897:	add    al,ch
   14004d899:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d89a:	add    eax,DWORD PTR [rax+0x1]
   14004d89d:	add    BYTE PTR [rax],al
   14004d89f:	add    ah,dh
   14004d8a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d8a2:	add    eax,DWORD PTR [rax+0x1]
   14004d8a5:	add    BYTE PTR [rax],al
   14004d8a7:	add    BYTE PTR [rax],al
   14004d8a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8aa:	add    eax,DWORD PTR [rax+0x1]
   14004d8ad:	add    BYTE PTR [rax],al
   14004d8af:	add    BYTE PTR [rsi+riz*4],cl
   14004d8b2:	add    eax,DWORD PTR [rax+0x1]
   14004d8b5:	add    BYTE PTR [rax],al
   14004d8b7:	add    BYTE PTR [rax],dl
   14004d8b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8ba:	add    eax,DWORD PTR [rax+0x1]
   14004d8bd:	add    BYTE PTR [rax],al
   14004d8bf:	add    BYTE PTR [rsi+riz*4],dl
   14004d8c2:	add    eax,DWORD PTR [rax+0x1]
   14004d8c5:	add    BYTE PTR [rax],al
   14004d8c7:	add    BYTE PTR [rax],bl
   14004d8c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8ca:	add    eax,DWORD PTR [rax+0x1]
   14004d8cd:	add    BYTE PTR [rax],al
   14004d8cf:	add    BYTE PTR [rsi+riz*4],bl
   14004d8d2:	add    eax,DWORD PTR [rax+0x1]
   14004d8d5:	add    BYTE PTR [rax],al
   14004d8d7:	add    BYTE PTR [rax],ah
   14004d8d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8da:	add    eax,DWORD PTR [rax+0x1]
   14004d8dd:	add    BYTE PTR [rax],al
   14004d8df:	add    BYTE PTR [rsi+riz*4],ah
   14004d8e2:	add    eax,DWORD PTR [rax+0x1]
   14004d8e5:	add    BYTE PTR [rax],al
   14004d8e7:	add    BYTE PTR [rax],ch
   14004d8e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8ea:	add    eax,DWORD PTR [rax+0x1]
   14004d8ed:	add    BYTE PTR [rax],al
   14004d8ef:	add    BYTE PTR [rsi+riz*4],ch
   14004d8f2:	add    eax,DWORD PTR [rax+0x1]
   14004d8f5:	add    BYTE PTR [rax],al
   14004d8f7:	add    BYTE PTR [rax],dh
   14004d8f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d8fa:	add    eax,DWORD PTR [rax+0x1]
   14004d8fd:	add    BYTE PTR [rax],al
   14004d8ff:	add    BYTE PTR [rsi+riz*4],dh
   14004d902:	add    eax,DWORD PTR [rax+0x1]
   14004d905:	add    BYTE PTR [rax],al
   14004d907:	add    BYTE PTR [rax],bh
   14004d909:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d90a:	add    eax,DWORD PTR [rax+0x1]
   14004d90d:	add    BYTE PTR [rax],al
   14004d90f:	add    BYTE PTR [rax-0x5a],al
   14004d912:	add    eax,DWORD PTR [rax+0x1]
   14004d915:	add    BYTE PTR [rax],al
   14004d917:	add    BYTE PTR [rax-0x5a],cl
   14004d91a:	add    eax,DWORD PTR [rax+0x1]
   14004d91d:	add    BYTE PTR [rax],al
   14004d91f:	add    BYTE PTR [rsi+riz*4+0x3],dl
   14004d923:	rex add DWORD PTR [rax],eax
   14004d926:	add    BYTE PTR [rax],al
   14004d928:	pop    rsp
   14004d929:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d92a:	add    eax,DWORD PTR [rax+0x1]
   14004d92d:	add    BYTE PTR [rax],al
   14004d92f:	add    BYTE PTR [rsi+riz*4],bl
   14004d932:	add    eax,DWORD PTR [rax+0x1]
   14004d935:	add    BYTE PTR [rax],al
   14004d937:	add    BYTE PTR [rsi+riz*4+0x3],ah
   14004d93b:	rex add DWORD PTR [rax],eax
   14004d93e:	add    BYTE PTR [rax],al
   14004d940:	ins    BYTE PTR es:[rdi],dx
   14004d941:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d942:	add    eax,DWORD PTR [rax+0x1]
   14004d945:	add    BYTE PTR [rax],al
   14004d947:	add    BYTE PTR [rsi+riz*4+0x3],dh
   14004d94b:	rex add DWORD PTR [rax],eax
   14004d94e:	add    BYTE PTR [rax],al
   14004d950:	and    BYTE PTR [rsi+0x14003],0x0
   14004d957:	add    BYTE PTR [rax+0x14003a6],dl
   14004d95d:	add    BYTE PTR [rax],al
   14004d95f:	add    BYTE PTR [rax+0x14003a6],bl
   14004d965:	add    BYTE PTR [rax],al
   14004d967:	add    BYTE PTR [rax+0x14003a6],ch
   14004d96d:	add    BYTE PTR [rax],al
   14004d96f:	add    BYTE PTR [rsi+riz*4+0x14003],dh
   14004d976:	add    BYTE PTR [rax],al
   14004d978:	mov    eax,0x14003a6
   14004d97d:	add    BYTE PTR [rax],al
   14004d97f:	add    al,al
   14004d981:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d982:	add    eax,DWORD PTR [rax+0x1]
   14004d985:	add    BYTE PTR [rax],al
   14004d987:	add    al,dl
   14004d989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d98a:	add    eax,DWORD PTR [rax+0x1]
   14004d98d:	add    BYTE PTR [rax],al
   14004d98f:	add    al,ch
   14004d991:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d992:	add    eax,DWORD PTR [rax+0x1]
   14004d995:	add    BYTE PTR [rax],al
   14004d997:	add    BYTE PTR [rcx],al
   14004d999:	add    BYTE PTR [rax],al
   14004d99b:	add    BYTE PTR [rax],al
   14004d99d:	add    BYTE PTR [rax],al
   14004d99f:	add    al,bh
   14004d9a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d9a2:	add    eax,DWORD PTR [rax+0x1]
   14004d9a5:	add    BYTE PTR [rax],al
   14004d9a7:	add    BYTE PTR [rax],al
   14004d9a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9aa:	add    eax,DWORD PTR [rax+0x1]
   14004d9ad:	add    BYTE PTR [rax],al
   14004d9af:	add    BYTE PTR [rax],cl
   14004d9b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9b2:	add    eax,DWORD PTR [rax+0x1]
   14004d9b5:	add    BYTE PTR [rax],al
   14004d9b7:	add    BYTE PTR [rax],dl
   14004d9b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9ba:	add    eax,DWORD PTR [rax+0x1]
   14004d9bd:	add    BYTE PTR [rax],al
   14004d9bf:	add    BYTE PTR [rax],bl
   14004d9c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9c2:	add    eax,DWORD PTR [rax+0x1]
   14004d9c5:	add    BYTE PTR [rax],al
   14004d9c7:	add    BYTE PTR [rax],ah
   14004d9c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9ca:	add    eax,DWORD PTR [rax+0x1]
   14004d9cd:	add    BYTE PTR [rax],al
   14004d9cf:	add    BYTE PTR [rax],ch
   14004d9d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9d2:	add    eax,DWORD PTR [rax+0x1]
   14004d9d5:	add    BYTE PTR [rax],al
   14004d9d7:	add    BYTE PTR [rax],dh
   14004d9d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d9da:	add    eax,DWORD PTR [rax+0x1]
   14004d9dd:	add    BYTE PTR [rax],al
   14004d9df:	add    BYTE PTR [rax-0x59],al
   14004d9e2:	add    eax,DWORD PTR [rax+0x1]
   14004d9e5:	add    BYTE PTR [rax],al
   14004d9e7:	add    BYTE PTR [rax-0x59],dl
   14004d9ea:	add    eax,DWORD PTR [rax+0x1]
   14004d9ed:	add    BYTE PTR [rax],al
   14004d9ef:	add    BYTE PTR [rax-0x59],ah
   14004d9f2:	add    eax,DWORD PTR [rax+0x1]
   14004d9f5:	add    BYTE PTR [rax],al
   14004d9f7:	add    BYTE PTR [rax-0x59],bh
   14004d9fa:	add    eax,DWORD PTR [rax+0x1]
   14004d9fd:	add    BYTE PTR [rax],al
   14004d9ff:	add    BYTE PTR [rax+0x14003a7],dl
   14004da05:	add    BYTE PTR [rax],al
   14004da07:	add    BYTE PTR [rax+0x14003a7],ah
   14004da0d:	add    BYTE PTR [rax],al
   14004da0f:	add    BYTE PTR [rax+0x14003a7],bh
   14004da15:	add    BYTE PTR [rax],al
   14004da17:	add    al,al
   14004da19:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da1a:	add    eax,DWORD PTR [rax+0x1]
   14004da1d:	add    BYTE PTR [rax],al
   14004da1f:	add    al,cl
   14004da21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da22:	add    eax,DWORD PTR [rax+0x1]
   14004da25:	add    BYTE PTR [rax],al
   14004da27:	add    al,dl
   14004da29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da2a:	add    eax,DWORD PTR [rax+0x1]
   14004da2d:	add    BYTE PTR [rax],al
   14004da2f:	add    al,bl
   14004da31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da32:	add    eax,DWORD PTR [rax+0x1]
   14004da35:	add    BYTE PTR [rax],al
   14004da37:	add    al,ah
   14004da39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da3a:	add    eax,DWORD PTR [rax+0x1]
   14004da3d:	add    BYTE PTR [rax],al
   14004da3f:	add    al,ch
   14004da41:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da42:	add    eax,DWORD PTR [rax+0x1]
   14004da45:	add    BYTE PTR [rax],al
   14004da47:	add    al,dh
   14004da49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da4a:	add    eax,DWORD PTR [rax+0x1]
   14004da4d:	add    BYTE PTR [rax],al
   14004da4f:	add    al,bh
   14004da51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004da52:	add    eax,DWORD PTR [rax+0x1]
   14004da55:	add    BYTE PTR [rax],al
   14004da57:	add    BYTE PTR [rax],al
   14004da59:	test   al,0x3
   14004da5b:	rex add DWORD PTR [rax],eax
   14004da5e:	add    BYTE PTR [rax],al
   14004da60:	or     BYTE PTR [rax+0x14003],ch
   14004da66:	add    BYTE PTR [rax],al
   14004da68:	adc    BYTE PTR [rax+0x14003],ch
   14004da6e:	add    BYTE PTR [rax],al
   14004da70:	sbb    BYTE PTR [rax+0x14003],ch
   14004da76:	add    BYTE PTR [rax],al
   14004da78:	sub    BYTE PTR [rax+0x14003],ch
   14004da7e:	add    BYTE PTR [rax],al
   14004da80:	test   al,0x3
   14004da83:	rex add DWORD PTR [rax],eax
   14004da86:	add    BYTE PTR [rax],al
   14004da88:	push   rax
   14004da89:	test   al,0x3
   14004da8b:	rex add DWORD PTR [rax],eax
   14004da8e:	add    BYTE PTR [rax],al
   14004da90:	fsub   DWORD PTR [rdi+0x14003]
   14004da96:	add    BYTE PTR [rax],al
   14004da98:	(bad)  
   14004da99:	test   al,0x3
   14004da9b:	rex add DWORD PTR [rax],eax
   14004da9e:	add    BYTE PTR [rax],al
   14004daa0:	jo     0x14004da4a
   14004daa2:	add    eax,DWORD PTR [rax+0x1]
   14004daa5:	add    BYTE PTR [rax],al
   14004daa7:	add    BYTE PTR [rax+0x14003a8],al
   14004daad:	add    BYTE PTR [rax],al
   14004daaf:	add    BYTE PTR [rax+0x14003a8],dl
   14004dab5:	add    BYTE PTR [rax],al
   14004dab7:	add    BYTE PTR [rax+0x14003a8],ch
   14004dabd:	add    BYTE PTR [rax],al
   14004dabf:	add    BYTE PTR [rax+0x14003a8],bh
   14004dac5:	add    BYTE PTR [rax],al
   14004dac7:	add    al,dl
   14004dac9:	test   al,0x3
   14004dacb:	rex add DWORD PTR [rax],eax
   14004dace:	add    BYTE PTR [rax],al
   14004dad0:	in     al,0xa8
   14004dad2:	add    eax,DWORD PTR [rax+0x1]
   14004dad5:	add    BYTE PTR [rax],al
   14004dad7:	add    ah,ch
   14004dad9:	test   al,0x3
   14004dadb:	rex add DWORD PTR [rax],eax
   14004dade:	add    BYTE PTR [rax],al
   14004dae0:	clc    
   14004dae1:	test   al,0x3
   14004dae3:	rex add DWORD PTR [rax],eax
   14004dae6:	add    BYTE PTR [rax],al
   14004dae8:	adc    BYTE PTR [rcx+0x14003],ch
   14004daee:	add    BYTE PTR [rax],al
   14004daf0:	cmp    BYTE PTR [rcx+0x14003],ch
   14004daf6:	add    BYTE PTR [rax],al
   14004daf8:	push   rax
   14004daf9:	test   eax,0x14003
   14004dafe:	add    BYTE PTR [rax],al
   14004db00:	adc    bl,bl
   14004db02:	add    al,0x40
   14004db04:	add    DWORD PTR [rax],eax
	...
   14004db0e:	add    BYTE PTR [rax],al
   14004db10:	add    DWORD PTR [rax],eax
	...
   14004db46:	add    BYTE PTR [rax],al
   14004db48:	xor    al,0xd8
   14004db4a:	add    al,0x40
   14004db4c:	add    DWORD PTR [rax],eax
	...
   14004db66:	add    BYTE PTR [rax],al
   14004db68:	xor    al,0xd8
   14004db6a:	add    al,0x40
   14004db6c:	add    DWORD PTR [rax],eax
	...
   14004db86:	add    BYTE PTR [rax],al
   14004db88:	xor    al,0xd8
   14004db8a:	add    al,0x40
   14004db8c:	add    DWORD PTR [rax],eax
	...
   14004dba6:	add    BYTE PTR [rax],al
   14004dba8:	xor    al,0xd8
   14004dbaa:	add    al,0x40
   14004dbac:	add    DWORD PTR [rax],eax
	...
   14004dbc6:	add    BYTE PTR [rax],al
   14004dbc8:	xor    al,0xd8
   14004dbca:	add    al,0x40
   14004dbcc:	add    DWORD PTR [rax],eax
	...
   14004dbde:	add    BYTE PTR [rax],al
   14004dbe0:	add    DWORD PTR [rax],eax
   14004dbe2:	add    BYTE PTR [rax],al
   14004dbe4:	add    DWORD PTR [rax],eax
	...
   14004dbfe:	add    BYTE PTR [rax],al
   14004dc00:	and    dl,ah
   14004dc02:	add    al,0x40
   14004dc04:	add    DWORD PTR [rax],eax
	...
   14004dc16:	add    BYTE PTR [rax],al
   14004dc18:	add    BYTE PTR [rbp+0x14003],dh
   14004dc1e:	add    BYTE PTR [rax],al
   14004dc20:	nop
   14004dc21:	mov    ecx,0x14003
   14004dc26:	add    BYTE PTR [rax],al
   14004dc28:	adc    BYTE PTR [rbx+0x14003],bh
   14004dc2e:	add    BYTE PTR [rax],al
   14004dc30:	rex fadd DWORD PTR [rax+rax*2]
   14004dc34:	add    DWORD PTR [rax],eax
	...
   14004dc66:	add    BYTE PTR [rax],al
   14004dc68:	add    DWORD PTR [rax],eax
   14004dc6a:	add    BYTE PTR [rax],al
   14004dc6c:	add    BYTE PTR [rax],al
   14004dc6e:	add    BYTE PTR [rax],al
   14004dc70:	add    DWORD PTR [rdx],eax
   14004dc72:	add    al,0x8
	...
   14004dc80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dc81:	add    eax,DWORD PTR [rax]
   14004dc83:	add    BYTE PTR [rax-0x7e],ah
   14004dc86:	jns    0x14004dc0a
   14004dc88:	and    DWORD PTR [rax],eax
   14004dc8a:	add    BYTE PTR [rax],al
   14004dc8c:	add    BYTE PTR [rax],al
   14004dc8e:	add    BYTE PTR [rax],al
   14004dc90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004dc91:	fild   WORD PTR [rax]
   14004dc93:	add    BYTE PTR [rax],al
   14004dc95:	add    BYTE PTR [rax],al
   14004dc97:	add    BYTE PTR [rcx+0xa5],ah
   14004dc9d:	add    BYTE PTR [rax],al
   14004dc9f:	add    BYTE PTR [rcx+0xfce09f],al
   14004dca5:	add    BYTE PTR [rax],al
   14004dca7:	add    BYTE PTR [rax+0x7e],al
   14004dcaa:	cmp    ah,0x0
   14004dcad:	add    BYTE PTR [rax],al
   14004dcaf:	add    BYTE PTR [rax-0x3efffffd],ch
   14004dcb5:	movabs ds:0x20a3da,eax
	...
   14004dcce:	add    BYTE PTR [rax],al
   14004dcd0:	cmp    esi,0x0
   14004dcd6:	add    BYTE PTR [rax],al
   14004dcd8:	rex inc BYTE PTR [rax]
   14004dcdb:	add    BYTE PTR [rax],al
   14004dcdd:	add    BYTE PTR [rax],al
   14004dcdf:	add    BYTE PTR [rbp-0x3efffffd],dh
   14004dce5:	movabs ds:0x20a3da,eax
	...
   14004dcfe:	add    BYTE PTR [rax],al
   14004dd00:	cmp    esi,0x0
   14004dd06:	add    BYTE PTR [rax],al
   14004dd08:	inc    BYTE PTR [r8]
   14004dd0b:	add    BYTE PTR [rax],al
   14004dd0d:	add    BYTE PTR [rax],al
   14004dd0f:	add    BYTE PTR [rsi-0x30fffffd],dh
   14004dd15:	movabs ds:0xa2e8a2e5001aa2e4,al
   14004dd1e:	pop    rbx
	...
   14004dd2f:	add    BYTE PTR [rcx+0xfe],al
   14004dd35:	add    BYTE PTR [rax],al
   14004dd37:	add    BYTE PTR [rax+0x7e],al
   14004dd3a:	movabs eax,ds:0x55100000000fe
   14004dd43:	add    BYTE PTR [rcx-0x26],dl
   14004dd46:	pop    rsi
   14004dd47:	fisub  DWORD PTR [rax]
   14004dd49:	add    BYTE PTR [rdi-0x26],bl
   14004dd4c:	push   0xffffffffffffffda
   14004dd4e:	xor    al,BYTE PTR [rax]
	...
   14004dd60:	adc    ebx,0xf9e0ded8
   14004dd66:	add    BYTE PTR [rax],al
   14004dd68:	xor    DWORD PTR [rsi-0x7f],edi
   14004dd6b:	inc    BYTE PTR [rax]
	...
   14004ddb1:	add    BYTE PTR [rax],dl
   14004ddb3:	adc    BYTE PTR [rax],dl
   14004ddb5:	adc    BYTE PTR [rax],dl
   14004ddb7:	adc    BYTE PTR [rax],dl
   14004ddb9:	adc    BYTE PTR [rax],dl
   14004ddbb:	adc    BYTE PTR [rax],dl
   14004ddbd:	adc    BYTE PTR [rax],dl
   14004ddbf:	adc    BYTE PTR [rax],dl
   14004ddc1:	adc    BYTE PTR [rax],dl
   14004ddc3:	adc    BYTE PTR [rax],dl
   14004ddc5:	adc    BYTE PTR [rax],dl
   14004ddc7:	adc    BYTE PTR [rax],dl
   14004ddc9:	adc    BYTE PTR [rax],dl
   14004ddcb:	adc    BYTE PTR [rax],al
   14004ddcd:	add    BYTE PTR [rax],al
   14004ddcf:	add    BYTE PTR [rax],al
   14004ddd1:	add    BYTE PTR [rax],ah
   14004ddd3:	and    BYTE PTR [rax],ah
   14004ddd5:	and    BYTE PTR [rax],ah
   14004ddd7:	and    BYTE PTR [rax],ah
   14004ddd9:	and    BYTE PTR [rax],ah
   14004dddb:	and    BYTE PTR [rax],ah
   14004dddd:	and    BYTE PTR [rax],ah
   14004dddf:	and    BYTE PTR [rax],ah
   14004dde1:	and    BYTE PTR [rax],ah
   14004dde3:	and    BYTE PTR [rax],ah
   14004dde5:	and    BYTE PTR [rax],ah
   14004dde7:	and    BYTE PTR [rax],ah
   14004dde9:	and    BYTE PTR [rax],ah
   14004ddeb:	and    BYTE PTR [rax],al
	...
   14004de75:	add    BYTE PTR [rax],al
   14004de77:	add    BYTE PTR [rax+0x14004df],al
	...
   14004dec1:	(bad)  
   14004dec2:	(bad)
   14004dec7:	addr32 push 0x6c6b6a69
   14004decd:	ins    DWORD PTR es:[rdi],dx
   14004dece:	outs   dx,BYTE PTR ds:[rsi]
   14004decf:	outs   dx,DWORD PTR ds:[rsi]
   14004ded0:	jo     0x14004df43
   14004ded2:	jb     0x14004df47
   14004ded4:	je     0x14004df4b
   14004ded6:	jbe    0x14004df4f
   14004ded8:	js     0x14004df53
   14004deda:	jp     0x14004dedc
   14004dedc:	add    BYTE PTR [rax],al
   14004dede:	add    BYTE PTR [rax],al
   14004dee0:	add    BYTE PTR [rcx+0x42],al
   14004dee3:	rex.XB
   14004dee4:	rex.R
   14004dee5:	rex.RB
   14004dee6:	rex.RX
   14004dee7:	rex.RXB
   14004dee8:	rex.W
   14004dee9:	rex.WB
   14004deea:	rex.WX
   14004deeb:	rex.WXB
   14004deec:	rex.WR
   14004deed:	rex.WRB
   14004deee:	rex.WRX
   14004deef:	rex.WRXB push r8
   14004def1:	push   rcx
   14004def2:	push   rdx
   14004def3:	push   rbx
   14004def4:	push   rsp
   14004def5:	push   rbp
   14004def6:	push   rsi
   14004def7:	push   rdi
   14004def8:	pop    rax
   14004def9:	pop    rcx
   14004defa:	pop    rdx
	...
   14004dfd7:	add    BYTE PTR [rax],al
   14004dfd9:	add    BYTE PTR [rax],dl
   14004dfdb:	adc    BYTE PTR [rax],dl
   14004dfdd:	adc    BYTE PTR [rax],dl
   14004dfdf:	adc    BYTE PTR [rax],dl
   14004dfe1:	adc    BYTE PTR [rax],dl
   14004dfe3:	adc    BYTE PTR [rax],dl
   14004dfe5:	adc    BYTE PTR [rax],dl
   14004dfe7:	adc    BYTE PTR [rax],dl
   14004dfe9:	adc    BYTE PTR [rax],dl
   14004dfeb:	adc    BYTE PTR [rax],dl
   14004dfed:	adc    BYTE PTR [rax],dl
   14004dfef:	adc    BYTE PTR [rax],dl
   14004dff1:	adc    BYTE PTR [rax],dl
   14004dff3:	adc    BYTE PTR [rax],al
   14004dff5:	add    BYTE PTR [rax],al
   14004dff7:	add    BYTE PTR [rax],al
   14004dff9:	add    BYTE PTR [rax],ah
   14004dffb:	and    BYTE PTR [rax],ah
   14004dffd:	and    BYTE PTR [rax],ah
   14004dfff:	and    BYTE PTR [rax],ah
   14004e001:	and    BYTE PTR [rax],ah
   14004e003:	and    BYTE PTR [rax],ah
   14004e005:	and    BYTE PTR [rax],ah
   14004e007:	and    BYTE PTR [rax],ah
   14004e009:	and    BYTE PTR [rax],ah
   14004e00b:	and    BYTE PTR [rax],ah
   14004e00d:	and    BYTE PTR [rax],ah
   14004e00f:	and    BYTE PTR [rax],ah
   14004e011:	and    BYTE PTR [rax],ah
   14004e013:	and    BYTE PTR [rax],al
	...
   14004e0d9:	add    BYTE PTR [rcx+0x62],ah
   14004e0dc:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   14004e0e0:	addr32 push 0x6c6b6a69
   14004e0e6:	ins    DWORD PTR es:[rdi],dx
   14004e0e7:	outs   dx,BYTE PTR ds:[rsi]
   14004e0e8:	outs   dx,DWORD PTR ds:[rsi]
   14004e0e9:	jo     0x14004e15c
   14004e0eb:	jb     0x14004e160
   14004e0ed:	je     0x14004e164
   14004e0ef:	jbe    0x14004e168
   14004e0f1:	js     0x14004e16c
   14004e0f3:	jp     0x14004e0f5
   14004e0f5:	add    BYTE PTR [rax],al
   14004e0f7:	add    BYTE PTR [rax],al
   14004e0f9:	add    BYTE PTR [rcx+0x42],al
   14004e0fc:	rex.XB
   14004e0fd:	rex.R
   14004e0fe:	rex.RB
   14004e0ff:	rex.RX
   14004e100:	rex.RXB
   14004e101:	rex.W
   14004e102:	rex.WB
   14004e103:	rex.WX
   14004e104:	rex.WXB
   14004e105:	rex.WR
   14004e106:	rex.WRB
   14004e107:	rex.WRX
   14004e108:	rex.WRXB push r8
   14004e10a:	push   rcx
   14004e10b:	push   rdx
   14004e10c:	push   rbx
   14004e10d:	push   rsp
   14004e10e:	push   rbp
   14004e10f:	push   rsi
   14004e110:	push   rdi
   14004e111:	pop    rax
   14004e112:	pop    rcx
   14004e113:	pop    rdx
	...
   14004e1b0:	rex.R cwde 
   14004e1b2:	add    al,BYTE PTR [rax+0x1]
   14004e1b5:	add    BYTE PTR [rax],al
   14004e1b7:	add    BYTE PTR [rax+rbx*4+0x2],al
   14004e1bb:	rex add DWORD PTR [rax],eax
   14004e1be:	add    BYTE PTR [rax],al
   14004e1c0:	rex.R cwde 
   14004e1c2:	add    al,BYTE PTR [rax+0x1]
   14004e1c5:	add    BYTE PTR [rax],al
   14004e1c7:	add    BYTE PTR [rax+rbx*4+0x2],al
   14004e1cb:	rex add DWORD PTR [rax],eax
   14004e1ce:	add    BYTE PTR [rax],al
   14004e1d0:	rex.R cwde 
   14004e1d2:	add    al,BYTE PTR [rax+0x1]
   14004e1d5:	add    BYTE PTR [rax],al
   14004e1d7:	add    BYTE PTR [rax+rbx*4+0x2],al
   14004e1db:	rex add DWORD PTR [rax],eax
   14004e1de:	add    BYTE PTR [rax],al
   14004e1e0:	rex.R cwde 
   14004e1e2:	add    al,BYTE PTR [rax+0x1]
   14004e1e5:	add    BYTE PTR [rax],al
   14004e1e7:	add    BYTE PTR [rax+rbx*4+0x2],al
   14004e1eb:	rex add DWORD PTR [rax],eax
   14004e1ee:	add    BYTE PTR [rax],al
   14004e1f0:	rex.R cwde 
   14004e1f2:	add    al,BYTE PTR [rax+0x1]
   14004e1f5:	add    BYTE PTR [rax],al
   14004e1f7:	add    BYTE PTR [rax+rbx*4+0x2],al
   14004e1fb:	rex add DWORD PTR [rax],eax
   14004e1fe:	add    BYTE PTR [rax],al
   14004e200:	(bad)  
   14004e201:	(bad)  
   14004e202:	(bad)  
   14004e203:	inc    DWORD PTR [rax]
	...
   14004e20d:	add    BYTE PTR [rax],al
   14004e20f:	add    BYTE PTR [rsi],ch
   14004e211:	add    BYTE PTR [rax],al
   14004e213:	add    BYTE PTR [rsi],ch
   14004e215:	add    BYTE PTR [rax],al
   14004e217:	add    BYTE PTR [rax],ah
   14004e219:	loop   0x14004e21f
   14004e21b:	rex add DWORD PTR [rax],eax
   14004e21e:	add    BYTE PTR [rax],al
   14004e220:	adc    dl,ah
   14004e222:	add    al,0x40
   14004e224:	add    DWORD PTR [rax],eax
   14004e226:	add    BYTE PTR [rax],al
   14004e228:	and    al,0xc
   14004e22a:	add    eax,0x140
   14004e22f:	add    BYTE PTR [rsp+rcx*1],ah
   14004e232:	add    eax,0x140
   14004e237:	add    BYTE PTR [rsp+rcx*1],ah
   14004e23a:	add    eax,0x140
   14004e23f:	add    BYTE PTR [rsp+rcx*1],ah
   14004e242:	add    eax,0x140
   14004e247:	add    BYTE PTR [rsp+rcx*1],ah
   14004e24a:	add    eax,0x140
   14004e24f:	add    BYTE PTR [rsp+rcx*1],ah
   14004e252:	add    eax,0x140
   14004e257:	add    BYTE PTR [rsp+rcx*1],ah
   14004e25a:	add    eax,0x140
   14004e25f:	add    BYTE PTR [rsp+rcx*1],ah
   14004e262:	add    eax,0x140
   14004e267:	add    BYTE PTR [rsp+rcx*1],ah
   14004e26a:	add    eax,0x140
   14004e26f:	add    BYTE PTR [rdi+0x7f],bh
   14004e272:	jg     0x14004e2f3
   14004e274:	jg     0x14004e2f5
   14004e276:	jg     0x14004e2f7
   14004e278:	adc    al,0xe2
   14004e27a:	add    al,0x40
   14004e27c:	add    DWORD PTR [rax],eax
   14004e27e:	add    BYTE PTR [rax],al
   14004e280:	sub    BYTE PTR [rax*1+0x140],cl
   14004e287:	add    BYTE PTR [rax],ch
   14004e289:	or     al,0x5
   14004e28b:	rex add DWORD PTR [rax],eax
   14004e28e:	add    BYTE PTR [rax],al
   14004e290:	sub    BYTE PTR [rax*1+0x140],cl
   14004e297:	add    BYTE PTR [rax],ch
   14004e299:	or     al,0x5
   14004e29b:	rex add DWORD PTR [rax],eax
   14004e29e:	add    BYTE PTR [rax],al
   14004e2a0:	sub    BYTE PTR [rax*1+0x140],cl
   14004e2a7:	add    BYTE PTR [rax],ch
   14004e2a9:	or     al,0x5
   14004e2ab:	rex add DWORD PTR [rax],eax
   14004e2ae:	add    BYTE PTR [rax],al
   14004e2b0:	sub    BYTE PTR [rax*1+0x140],cl
   14004e2b7:	add    BYTE PTR [rax],al
   14004e2b9:	mov    ch,0x3
   14004e2bb:	rex add DWORD PTR [rax],eax
   14004e2be:	add    BYTE PTR [rax],al
   14004e2c0:	add    dh,BYTE PTR [rdi+0x14003]
   14004e2c6:	add    BYTE PTR [rax],al
   14004e2c8:	(bad)  
   14004e2c9:	(bad)  
   14004e2ca:	(bad)  
   14004e2cb:	(bad)  
   14004e2cc:	(bad)  
   14004e2cd:	(bad)  
   14004e2ce:	(bad)  
   14004e2cf:	inc    DWORD PTR [rdi+rsi*4]
   14004e2d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e2dd:	add    BYTE PTR [rax],al
   14004e2df:	add    al,dh
   14004e2e1:	xchg   edi,eax
   14004e2e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e2ed:	add    BYTE PTR [rax],al
   14004e2ef:	add    BYTE PTR [rsi],ch
   14004e2f1:	(bad)  
   14004e2f2:	push   r14
   14004e2f4:	ins    BYTE PTR es:[rdi],dx
   14004e2f5:	outs   dx,BYTE PTR gs:[rsi]
   14004e2f7:	addr32 je 0x14004e362
   14004e2fa:	pop    rdi
   14004e2fb:	gs jb  0x14004e370
   14004e2fe:	outs   dx,DWORD PTR ds:[rsi]
   14004e2ff:	jb     0x14004e341
   14004e301:	jae    0x14004e377
   14004e303:	fs rex
   14004e305:	add    BYTE PTR [rax],al
   14004e308:	lock xchg edi,eax
   14004e30a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e315:	add    BYTE PTR [rax],al
   14004e317:	add    BYTE PTR [rsi],ch
   14004e319:	(bad)  
   14004e31a:	push   r14
   14004e31c:	outs   dx,DWORD PTR ds:[rsi]
   14004e31d:	jne    0x14004e393
   14004e31f:	pop    rdi
   14004e320:	outs   dx,DWORD PTR ds:[rsi]
   14004e321:	pop    di
   14004e323:	jb     0x14004e386
   14004e325:	outs   dx,BYTE PTR ds:[rsi]
   14004e326:	addr32 gs rex jae 0x14004e39f
   14004e32b:	fs rex
   14004e32d:	add    BYTE PTR [rax],al
   14004e330:	lock xchg edi,eax
   14004e332:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e33d:	add    BYTE PTR [rax],al
   14004e33f:	add    BYTE PTR [rsi],ch
   14004e341:	(bad)  
   14004e342:	push   r14
   14004e344:	(bad)
   14004e349:	js     0x14004e3ae
   14004e34b:	gs jo  0x14004e3c2
   14004e34e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14004e355:	rex
   14004e356:	add    BYTE PTR [rax],al
	...
   14004e41d:	add    BYTE PTR [rax],al
   14004e41f:	add    BYTE PTR [rcx],al
   14004e421:	add    DWORD PTR [rcx],eax
   14004e423:	add    DWORD PTR [rcx],eax
   14004e425:	add    DWORD PTR [rcx],eax
   14004e427:	add    DWORD PTR [rcx],eax
   14004e429:	add    DWORD PTR [rcx],eax
   14004e42b:	add    DWORD PTR [rcx],eax
   14004e42d:	add    DWORD PTR [rcx],eax
   14004e42f:	add    DWORD PTR [rcx],eax
   14004e431:	add    DWORD PTR [rcx],eax
   14004e433:	add    DWORD PTR [rcx],eax
   14004e435:	add    DWORD PTR [rcx],eax
   14004e437:	add    DWORD PTR [rcx],eax
   14004e439:	add    DWORD PTR [rcx],eax
   14004e43b:	add    DWORD PTR [rcx],eax
   14004e43d:	add    DWORD PTR [rcx],eax
   14004e43f:	add    DWORD PTR [rdx],eax
   14004e441:	add    al,BYTE PTR [rdx]
   14004e443:	add    al,BYTE PTR [rdx]
   14004e445:	add    al,BYTE PTR [rdx]
   14004e447:	add    al,BYTE PTR [rdx]
   14004e449:	add    al,BYTE PTR [rdx]
   14004e44b:	add    al,BYTE PTR [rdx]
   14004e44d:	add    al,BYTE PTR [rdx]
   14004e44f:	add    al,BYTE PTR [rbx]
   14004e451:	add    eax,DWORD PTR [rbx]
   14004e453:	add    eax,DWORD PTR [rbx]
   14004e455:	add    eax,DWORD PTR [rbx]
   14004e457:	add    eax,DWORD PTR [rax]
   14004e459:	add    BYTE PTR [rax],al
   14004e45b:	add    BYTE PTR [rax],al
   14004e45d:	add    BYTE PTR [rax],al
   14004e45f:	add    al,bh
   14004e461:	rol    DWORD PTR [rbx],1
   14004e463:	rex add DWORD PTR [rax],eax
   14004e466:	add    BYTE PTR [rax],al
   14004e468:	mov    al,0xc
   14004e46a:	add    eax,0x140
   14004e46f:	add    BYTE PTR [rax-0x1c],ah
   14004e472:	add    al,0x40
   14004e474:	add    DWORD PTR [rax],eax
	...
   14004e47e:	add    BYTE PTR [rax],al
   14004e480:	add    al,BYTE PTR [rax]
	...
   14004e48e:	add    BYTE PTR [rax],al
   14004e490:	lock xchg edi,eax
   14004e492:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e49d:	add    BYTE PTR [rax],al
   14004e49f:	add    BYTE PTR [rsi],ch
   14004e4a1:	(bad)  
   14004e4a2:	push   r14
   14004e4a4:	rex.XB push r8
   14004e4a6:	jb     0x14004e517
   14004e4a8:	movsxd edx,DWORD PTR [rax+rbp*2+0x72]
   14004e4ac:	gs (bad) 
   14004e4ae:	fs rex
   14004e4b0:	add    BYTE PTR [rax],al
   14004e4b3:	add    BYTE PTR [rax],al
   14004e4b5:	add    BYTE PTR [rax],al
   14004e4b7:	add    al,dh
   14004e4b9:	xchg   edi,eax
   14004e4ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4c5:	add    BYTE PTR [rax],al
   14004e4c7:	add    BYTE PTR [rsi],ch
   14004e4c9:	(bad)  
   14004e4ca:	push   r14
   14004e4cc:	js     0x14004e51c
   14004e4ce:	(bad)  
   14004e4cf:	ins    DWORD PTR es:[rdi],dx
   14004e4d0:	gs fs rex.WRXB (bad) 
   14004e4d4:	push   0x65
   14004e4d6:	movsxd esi,DWORD PTR [rbx+rax*2+0x72]
   14004e4da:	gs (bad) 
   14004e4dc:	je     0x14004e543
   14004e4de:	rex.RX (bad) 
   14004e4e0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4040
	...
   14004e4f0:	push   rax
   14004e4f1:	(bad)  
   14004e4f2:	add    eax,DWORD PTR [rax+0x1]
   14004e4f5:	add    BYTE PTR [rax],al
   14004e4f7:	add    BYTE PTR [rax+0x14003d4],ch
   14004e4fd:	add    BYTE PTR [rax],al
   14004e4ff:	add    BYTE PTR [rcx],al
   14004e501:	add    BYTE PTR [rax],al
   14004e503:	add    BYTE PTR [rcx],al
   14004e505:	add    DWORD PTR [rcx],eax
   14004e507:	add    BYTE PTR [rax+0x14003da],dl
   14004e50d:	add    BYTE PTR [rax],al
   14004e50f:	add    BYTE PTR [rax],dh
   14004e511:	(bad)  
   14004e512:	add    al,0x40
   14004e514:	add    DWORD PTR [rax],eax
   14004e516:	add    BYTE PTR [rax],al
   14004e518:	push   rax
   14004e519:	(bad)  
   14004e51a:	add    eax,DWORD PTR [rax+0x1]
   14004e51d:	add    BYTE PTR [rax],al
   14004e51f:	add    BYTE PTR [rax],bh
   14004e521:	fld    QWORD PTR [rbx]
   14004e523:	rex add DWORD PTR [rax],eax
   14004e526:	add    BYTE PTR [rax],al
   14004e528:	push   rax
   14004e529:	fld    QWORD PTR [rbx]
   14004e52b:	rex add DWORD PTR [rax],eax
   14004e52e:	add    BYTE PTR [rax],al
   14004e530:	jo     0x14004e50f
   14004e532:	add    eax,DWORD PTR [rax+0x1]
   14004e535:	add    BYTE PTR [rax],al
   14004e537:	add    BYTE PTR [rax+0x14003dd],cl
   14004e53d:	add    BYTE PTR [rax],al
   14004e53f:	add    BYTE PTR [rax+0x14003dd],ah
   14004e545:	add    BYTE PTR [rax],al
   14004e547:	add    BYTE PTR [rax+0x14003dd],bh
   14004e54d:	add    BYTE PTR [rax],al
   14004e54f:	add    al,cl
   14004e551:	fld    QWORD PTR [rbx]
   14004e553:	rex add DWORD PTR [rax],eax
   14004e556:	add    BYTE PTR [rax],al
   14004e558:	loopne 0x14004e537
   14004e55a:	add    eax,DWORD PTR [rax+0x1]
   14004e55d:	add    BYTE PTR [rax],al
   14004e55f:	add    al,dh
   14004e561:	fld    QWORD PTR [rbx]
   14004e563:	rex add DWORD PTR [rax],eax
   14004e566:	add    BYTE PTR [rax],al
   14004e568:	or     dh,bl
   14004e56a:	add    eax,DWORD PTR [rax+0x1]
   14004e56d:	add    BYTE PTR [rax],al
   14004e56f:	add    BYTE PTR [rsi+rbx*8],dl
   14004e572:	add    eax,DWORD PTR [rax+0x1]
   14004e575:	add    BYTE PTR [rax],al
   14004e577:	add    BYTE PTR [rax],ah
   14004e579:	fiadd  WORD PTR [rbx]
   14004e57b:	rex add DWORD PTR [rax],eax
   14004e57e:	add    BYTE PTR [rax],al
   14004e580:	xor    dh,bl
   14004e582:	add    eax,DWORD PTR [rax+0x1]
   14004e585:	add    BYTE PTR [rax],al
   14004e587:	add    BYTE PTR [rax-0x22],al
   14004e58a:	add    eax,DWORD PTR [rax+0x1]
   14004e58d:	add    BYTE PTR [rax],al
   14004e58f:	add    BYTE PTR [rax-0x22],cl
   14004e592:	add    eax,DWORD PTR [rax+0x1]
   14004e595:	add    BYTE PTR [rax],al
   14004e597:	add    BYTE PTR [rax-0x22],ah
   14004e59a:	add    eax,DWORD PTR [rax+0x1]
   14004e59d:	add    BYTE PTR [rax],al
   14004e59f:	add    BYTE PTR [rax-0x22],bh
   14004e5a2:	add    eax,DWORD PTR [rax+0x1]
   14004e5a5:	add    BYTE PTR [rax],al
   14004e5a7:	add    BYTE PTR [rax+0x14003de],cl
   14004e5ad:	add    BYTE PTR [rax],al
   14004e5af:	add    BYTE PTR [rax+0x14003de],ah
   14004e5b5:	add    BYTE PTR [rax],al
   14004e5b7:	add    BYTE PTR [rax+0x14003de],bh
   14004e5bd:	add    BYTE PTR [rax],al
   14004e5bf:	add    al,bl
   14004e5c1:	fiadd  WORD PTR [rbx]
   14004e5c3:	rex add DWORD PTR [rax],eax
   14004e5c6:	add    BYTE PTR [rax],al
   14004e5c8:	call   0x14144e9ab
   14004e5cd:	add    BYTE PTR [rax],al
   14004e5cf:	add    BYTE PTR [rax-0x2c],dl
   14004e5d2:	add    eax,DWORD PTR [rax+0x1]
   14004e5d5:	add    BYTE PTR [rax],al
   14004e5d7:	add    BYTE PTR [rax+0x14003e1],bl
   14004e5dd:	add    BYTE PTR [rax],al
   14004e5df:	add    al,cl
   14004e5e1:	loope  0x14004e5e6
   14004e5e3:	rex add DWORD PTR [rax],eax
   14004e5e6:	add    BYTE PTR [rax],al
   14004e5e8:	clc    
   14004e5e9:	loope  0x14004e5ee
   14004e5eb:	rex add DWORD PTR [rax],eax
   14004e5ee:	add    BYTE PTR [rax],al
   14004e5f0:	js     0x14004e5d3
   14004e5f2:	add    eax,DWORD PTR [rax+0x1]
   14004e5f5:	add    BYTE PTR [rax],al
   14004e5f7:	add    BYTE PTR [rdx+riz*8],ah
   14004e5fa:	add    eax,DWORD PTR [rax+0x1]
   14004e5fd:	add    BYTE PTR [rax],al
   14004e5ff:	add    BYTE PTR [rax+0x14003e1],dh
   14004e605:	add    BYTE PTR [rax],al
   14004e607:	add    BYTE PTR [rdx+riz*8],al
   14004e60a:	add    eax,DWORD PTR [rax+0x1]
   14004e60d:	add    BYTE PTR [rax],al
   14004e60f:	add    BYTE PTR [rax-0x1f],ch
   14004e612:	add    eax,DWORD PTR [rax+0x1]
   14004e615:	add    BYTE PTR [rax],al
   14004e617:	add    al,ch
   14004e619:	loope  0x14004e61e
   14004e61b:	rex add DWORD PTR [rax],eax
   14004e61e:	add    BYTE PTR [rax],al
   14004e620:	or     dl,ah
   14004e622:	add    eax,DWORD PTR [rax+0x1]
   14004e625:	add    BYTE PTR [rax],al
   14004e627:	add    al,ah
   14004e629:	loope  0x14004e62e
   14004e62b:	rex add DWORD PTR [rax],eax
   14004e62e:	add    BYTE PTR [rax],al
   14004e630:	mov    cl,ah
   14004e632:	add    eax,DWORD PTR [rax+0x1]
   14004e635:	add    BYTE PTR [rax],al
   14004e637:	add    al,dl
   14004e639:	loope  0x14004e63e
   14004e63b:	rex add DWORD PTR [rax],eax
   14004e63e:	add    BYTE PTR [rax],al
   14004e640:	rex.W loop 0x14004e646
   14004e643:	rex add DWORD PTR [rax],eax
   14004e646:	add    BYTE PTR [rax],al
   14004e648:	xor    dl,ah
   14004e64a:	add    eax,DWORD PTR [rax+0x1]
   14004e64d:	add    BYTE PTR [rax],al
   14004e64f:	add    al,ah
   14004e651:	(bad)  
   14004e652:	add    eax,DWORD PTR [rax+0x1]
   14004e655:	add    BYTE PTR [rax],al
   14004e657:	add    al,cl
   14004e659:	(bad)  
   14004e65a:	add    eax,DWORD PTR [rax+0x1]
   14004e65d:	add    BYTE PTR [rax],al
   14004e65f:	add    al,ch
   14004e661:	(bad)  
   14004e662:	add    eax,DWORD PTR [rax+0x1]
   14004e665:	add    BYTE PTR [rax],al
   14004e667:	add    BYTE PTR [rax],bl
   14004e669:	(bad)  
   14004e66a:	add    eax,DWORD PTR [rax+0x1]
   14004e66d:	add    BYTE PTR [rax],al
   14004e66f:	add    BYTE PTR [rcx],al
   14004e671:	add    BYTE PTR [rax],al
   14004e673:	add    BYTE PTR [rax+rax*1],al
   14004e676:	add    BYTE PTR [rax],al
   14004e678:	add    BYTE PTR [r13+0x0],sil
   14004e67c:	je     0x14004e67e
   14004e67e:	outs   dx,DWORD PTR ds:[rsi]
   14004e67f:	add    BYTE PTR [rbp+0x0],cl
   14004e682:	(bad)  
   14004e683:	add    BYTE PTR [rdx+0x0],dh
   14004e686:	imul   eax,DWORD PTR [rax],0x0
   14004e689:	add    BYTE PTR [rax],al
   14004e68b:	add    BYTE PTR [rax],al
   14004e68d:	add    DWORD PTR [rax],eax
   14004e68f:	add    BYTE PTR [rax],al
   14004e691:	add    al,0x0
   14004e693:	add    BYTE PTR [rax],al
   14004e695:	add    al,BYTE PTR [rax]
   14004e697:	add    bh,bh
   14004e699:	(bad)  
   14004e69a:	(bad)  
   14004e69b:	inc    DWORD PTR [rcx]
	...
   14004e6a9:	add    al,BYTE PTR [rax]
   14004e6ab:	add    BYTE PTR [rcx],al
   14004e6ad:	add    BYTE PTR [rax],al
   14004e6af:	add    BYTE PTR [rax+rax*1],al
   14004e6b2:	add    BYTE PTR [rax],al
   14004e6b4:	or     al,BYTE PTR [rax]
   14004e6b6:	add    BYTE PTR [rax],al
   14004e6b8:	add    BYTE PTR [rax],al
   14004e6ba:	add    BYTE PTR [rax],al
   14004e6bc:	add    BYTE PTR [rdx],al
   14004e6be:	add    BYTE PTR [rax],al
   14004e6c0:	sub    eax,0x0
   14004e6c5:	add    DWORD PTR [rax],eax
   14004e6c7:	add    BYTE PTR [rax+rax*1],ch
   14004e6ca:	add    BYTE PTR [rax],al
   14004e6cc:	add    BYTE PTR [rax],al
   14004e6ce:	add    BYTE PTR [rax],al
   14004e6d0:	add    BYTE PTR [rdx],al
   14004e6d2:	add    BYTE PTR [rax],al
   14004e6d4:	add    DWORD PTR [rax],eax
   14004e6d6:	add    BYTE PTR [rax],al
   14004e6d8:	or     BYTE PTR [rax],al
   14004e6da:	add    BYTE PTR [rax],al
   14004e6dc:	add    BYTE PTR fs:[rax],al
   14004e6df:	add    BYTE PTR [rax],al
   14004e6e1:	add    BYTE PTR [rax],al
   14004e6e3:	add    BYTE PTR [rax],al
   14004e6e5:	add    al,BYTE PTR [rax]
   14004e6e7:	add    BYTE PTR [rbx],cl
   14004e6e9:	add    BYTE PTR [rax],al
   14004e6eb:	add    BYTE PTR [rax-0x4a000000],al
	...
   14004e6f9:	add    al,BYTE PTR [rax]
   14004e6fb:	add    BYTE PTR [rdi],cl
   14004e6fd:	add    BYTE PTR [rax],al
   14004e6ff:	add    BYTE PTR [rax],al
   14004e701:	add    DWORD PTR [rax],eax
   14004e703:	add    BYTE PTR [rdx+0x1],ah
   14004e706:	add    BYTE PTR [rax],al
   14004e708:	add    BYTE PTR [rax],al
   14004e70a:	add    BYTE PTR [rax],al
   14004e70c:	add    BYTE PTR [rdx],al
   14004e70e:	add    BYTE PTR [rax],al
   14004e710:	or     DWORD PTR [rax],eax
   14004e712:	add    BYTE PTR [rax],al
   14004e714:	add    BYTE PTR [rcx],al
   14004e716:	add    BYTE PTR [rax],al
   14004e718:	add    BYTE PTR [rdx],0x0
   14004e71b:	add    BYTE PTR [rax],al
   14004e71d:	add    BYTE PTR [rax],al
   14004e71f:	add    BYTE PTR [rax],al
   14004e721:	add    al,BYTE PTR [rax]
   14004e723:	add    BYTE PTR [rcx],al
   14004e725:	add    BYTE PTR [rax],al
   14004e727:	add    BYTE PTR [rax+0x0],al
   14004e72a:	add    BYTE PTR [rax],al
   14004e72c:	call   0x14004e734
   14004e731:	add    BYTE PTR [rax],al
   14004e733:	add    BYTE PTR [rax],al
   14004e735:	add    al,BYTE PTR [rax]
   14004e737:	add    BYTE PTR [rcx],al
   14004e739:	add    BYTE PTR [rax],al
   14004e73b:	add    bh,bh
   14004e73d:	(bad)  
   14004e73e:	(bad)  
   14004e73f:	dec    DWORD PTR [rax]
   14004e741:	add    BYTE PTR [rax],al
   14004e743:	add    BYTE PTR [rdi+0x0],al
   14004e746:	jne    0x14004e748
   14004e748:	imul   eax,DWORD PTR [rax],0x64
	...
   14004e756:	add    BYTE PTR [rax],al
   14004e758:	(bad)  
   14004e759:	add    BYTE PTR [rax],al
   14004e75b:	add    BYTE PTR [rax+rax*1+0x65],al
   14004e75f:	add    BYTE PTR [rbx+0x0],dh
   14004e762:	movsxd eax,DWORD PTR [rax]
   14004e764:	jb     0x14004e766
   14004e766:	imul   eax,DWORD PTR [rax],0x740070
   14004e76c:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14004e78e:	add    BYTE PTR [rax],al
   14004e790:	adc    al,BYTE PTR [rax]
   14004e792:	add    BYTE PTR [rax],al
   14004e794:	add    BYTE PTR [r14+0x0],r14b
   14004e798:	add    BYTE PTR gs:[rsi+0x0],ch
   14004e79c:	je     0x14004e79e
   14004e79e:	push   rsp
   14004e79f:	add    BYTE PTR [rcx+0x0],bh
   14004e7a2:	jo     0x14004e7a4
   14004e7a4:	add    BYTE PTR gs:[rax],al
	...
   14004e7bf:	add    BYTE PTR [rsi],al
   14004e7c1:	add    BYTE PTR [rax],al
   14004e7c3:	add    BYTE PTR [rbp+0x0],cl
   14004e7c6:	add    BYTE PTR [r8+0x0],bl
	...
   14004e7d6:	add    BYTE PTR [rax],al
   14004e7d8:	sbb    BYTE PTR [rax],al
   14004e7da:	add    BYTE PTR [rax],al
   14004e7dc:	add    BYTE PTR [r14+0x0],r14b
   14004e7e0:	add    BYTE PTR gs:[rsi+0x0],ch
   14004e7e4:	je     0x14004e7e6
   14004e7e6:	push   rsi
   14004e7e7:	add    BYTE PTR [rbp+0x0],ah
   14004e7ea:	jb     0x14004e7ec
   14004e7ec:	jae    0x14004e7ee
   14004e7ee:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14004e810:	(bad)  
   14004e811:	add    BYTE PTR [rax],al
   14004e813:	add    BYTE PTR [rax+0x0],dh
   14004e816:	outs   dx,DWORD PTR ds:[rsi]
   14004e817:	add    BYTE PTR [rcx+0x0],ch
   14004e81a:	outs   dx,BYTE PTR ds:[rsi]
   14004e81b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14004e81f:	add    BYTE PTR [rdx+0x0],dh
	...
   14004e836:	add    BYTE PTR [rax],al
   14004e838:	adc    al,BYTE PTR [rax]
   14004e83a:	add    BYTE PTR [rax],al
   14004e83c:	push   rdi
   14004e83d:	add    BYTE PTR [rbp+0x0],ch
   14004e840:	imul   eax,DWORD PTR [rax],0x610044
   14004e846:	je     0x14004e848
   14004e848:	(bad)  
   14004e849:	add    BYTE PTR [rcx+0x0],cl
   14004e84c:	add    BYTE PTR fs:[rax],al
	...
   14004e867:	add    BYTE PTR [rax],dl
   14004e869:	add    BYTE PTR [rax],al
   14004e86b:	add    BYTE PTR [rdx+0x0],dh
   14004e86e:	outs   dx,DWORD PTR ds:[rsi]
   14004e86f:	add    BYTE PTR [rdi+0x0],ch
   14004e872:	je     0x14004e874
   14004e874:	pop    rsp
   14004e875:	add    BYTE PTR [rdi+0x0],dh
   14004e878:	ins    DWORD PTR es:[rdi],dx
   14004e879:	add    BYTE PTR [rcx+0x0],ch
	...
   14004e890:	(bad)  
   14004e891:	add    BYTE PTR [rax],al
   14004e893:	add    BYTE PTR [rdi+0x0],bl
   14004e896:	pop    rdi
   14004e897:	add    BYTE PTR [rbx+0x0],al
   14004e89a:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14004e89e:	push   rbx
   14004e89f:	add    BYTE PTR [rbx+0x0],dl
	...
   14004e8b6:	add    BYTE PTR [rax],al
   14004e8b8:	adc    al,BYTE PTR [rax]
   14004e8ba:	add    BYTE PTR [rax],al
   14004e8bc:	add    BYTE PTR gs:[rax+0x0],bh
   14004e8c0:	je     0x14004e8c2
   14004e8c2:	add    BYTE PTR gs:[rsi+0x0],ch
   14004e8c6:	jae    0x14004e8c8
   14004e8c8:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14004e8e6:	add    BYTE PTR [rax],al
   14004e8e8:	or     al,0x0
   14004e8ea:	add    BYTE PTR [rax],al
   14004e8ec:	data16 add BYTE PTR [rdi+0x0],ch
   14004e8f0:	jb     0x14004e8f2
   14004e8f2:	ins    DWORD PTR es:[rdi],dx
   14004e8f3:	add    BYTE PTR [rcx+0x0],ah
   14004e8f6:	je     0x14004e8f8
	...
   14004e908:	sbb    al,BYTE PTR [rax]
   14004e90a:	add    BYTE PTR [rax],al
   14004e90c:	add    BYTE PTR [r14+0x0],r14b
   14004e910:	add    BYTE PTR gs:[rsi+0x0],ch
   14004e914:	je     0x14004e916
   14004e916:	push   rsp
   14004e917:	add    BYTE PTR [rcx+0x0],bh
   14004e91a:	jo     0x14004e91c
   14004e91c:	add    BYTE PTR gs:[rsi+0x0],cl
   14004e920:	(bad)  
   14004e921:	add    BYTE PTR [rbp+0x0],ch
   14004e924:	add    BYTE PTR gs:[rax],al
	...
   14004e947:	add    BYTE PTR [rax+rax*1],dl
   14004e94a:	add    BYTE PTR [rax],al
   14004e94c:	add    BYTE PTR [r14+0x0],r14b
   14004e950:	add    BYTE PTR gs:[rsi+0x0],ch
   14004e954:	je     0x14004e956
   14004e956:	push   rsp
   14004e957:	add    BYTE PTR [rdx+0x0],dh
   14004e95a:	(bad)  
   14004e95b:	add    BYTE PTR [rbx+0x0],ah
   14004e95e:	add    BYTE PTR gs:[rax],al
	...
   14004e975:	add    BYTE PTR [rax],al
   14004e977:	add    BYTE PTR [rsi],dl
   14004e979:	add    BYTE PTR [rax],al
   14004e97b:	add    BYTE PTR [rax+rax*1+0x69],al
   14004e97f:	add    BYTE PTR [rbx+0x0],dh
   14004e982:	jo     0x14004e984
   14004e984:	ins    BYTE PTR es:[rdi],dx
   14004e985:	add    BYTE PTR [rcx+0x0],ah
   14004e988:	jns    0x14004e98a
   14004e98a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14004e98e:	ins    DWORD PTR es:[rdi],dx
   14004e98f:	add    BYTE PTR [rbp+0x0],ah
	...
   14004e9ae:	add    BYTE PTR [rax],al
   14004e9b0:	and    al,BYTE PTR [rax]
   14004e9b2:	add    BYTE PTR [rax],al
   14004e9b4:	push   rbx
   14004e9b5:	add    BYTE PTR [rax+rax*1+0x72],dh
   14004e9b9:	add    BYTE PTR [rcx+0x0],ch
   14004e9bc:	outs   dx,BYTE PTR ds:[rsi]
   14004e9bd:	add    BYTE PTR [rdi+0x0],ah
   14004e9c0:	push   rsp
   14004e9c1:	add    BYTE PTR [rbp+0x0],ah
   14004e9c4:	jb     0x14004e9c6
   14004e9c6:	ins    DWORD PTR es:[rdi],dx
   14004e9c7:	add    BYTE PTR [rcx+0x0],ch
   14004e9ca:	outs   dx,BYTE PTR ds:[rsi]
   14004e9cb:	add    BYTE PTR [rcx+0x0],ah
   14004e9ce:	je     0x14004e9d0
   14004e9d0:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14004e9fe:	add    BYTE PTR [rax],al
   14004ea00:	mov    esi,DWORD PTR [rip+0xffffffffa8919ba1]        # 0xe89685a7
   14004ea06:	rex.X
   14004ea07:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14004ea09:	push   rsi
   14004ea0a:	(bad)
   14004ea0d:	sahf   
   14004ea0e:	xor    esp,DWORD PTR [rbp+0x4003ef50]
   14004ea14:	add    DWORD PTR [rax],eax
   14004ea16:	add    BYTE PTR [rax],al
   14004ea18:	shr    dh,1
   14004ea1a:	add    eax,DWORD PTR [rax+0x1]
   14004ea1d:	add    BYTE PTR [rax],al
   14004ea1f:	add    BYTE PTR [rax+0x14003ef],ch
   14004ea25:	add    BYTE PTR [rax],al
   14004ea27:	add    BYTE PTR [rax],al
   14004ea29:	in     eax,dx
   14004ea2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ea45:	add    BYTE PTR [rax],al
   14004ea47:	add    BYTE PTR [rdi],al
	...
   14004ea8d:	add    BYTE PTR [rax],al
   14004ea8f:	add    al,cl
   14004ea91:	fadd   QWORD PTR [rbx]
   14004ea93:	rex add DWORD PTR [rax],eax
	...
   14004eace:	add    BYTE PTR [rax],al
   14004ead0:	mov    BYTE PTR [rsi+0x44],ah
   14004ead3:	and    cl,bl
   14004ead5:	(bad)  
   14004ead6:	jle    0x14004eb27
   14004ead8:	mov    al,0xb5
   14004eada:	xchg   BYTE PTR [rdx+0x5b],ah
   14004eadd:	(bad)
   14004eae0:	mov    ah,BYTE PTR [rsi+0x44]
   14004eae3:	and    cl,bl
   14004eae5:	(bad)  
   14004eae6:	jle    0x14004eb37
   14004eae8:	mov    al,0xb5
   14004eaea:	xchg   BYTE PTR [rdx+0x5b],ah
   14004eaed:	(bad)
	...
   14004eb20:	mov    eax,0x14003e9
	...
   14004eb4d:	add    BYTE PTR [rax],al
   14004eb4f:	add    BYTE PTR [rax+0x14003ed],dl
   14004eb55:	add    BYTE PTR [rax],al
   14004eb57:	add    BYTE PTR [rax-0x13],dh
   14004eb5a:	add    eax,DWORD PTR [rax+0x1]
   14004eb5d:	add    BYTE PTR [rax],al
   14004eb5f:	add    al,dh
   14004eb61:	xchg   edi,eax
   14004eb62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eb6d:	add    BYTE PTR [rax],al
   14004eb6f:	add    BYTE PTR [rsi],ch
   14004eb71:	(bad)  
   14004eb72:	push   r14
   14004eb74:	js     0x14004ebc3
   14004eb76:	gs jae 0x14004ebec
   14004eb79:	(bad)  
   14004eb7a:	addr32 gs rex.RB js 0x14004ebe2
   14004eb7f:	gs jo  0x14004ebf6
   14004eb82:	imul   ebp,DWORD PTR [rdi+0x6e],0xf0004040
   14004eb89:	xchg   edi,eax
   14004eb8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eb95:	add    BYTE PTR [rax],al
   14004eb97:	add    BYTE PTR [rsi],ch
   14004eb99:	(bad)  
   14004eb9a:	push   r14
   14004eb9c:	pop    rdi
   14004eb9d:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14004eb9f:	jae    0x14004ec15
   14004eba1:	jb     0x14004ec08
   14004eba3:	(bad)  
   14004eba4:	ins    DWORD PTR es:[rdi],dx
   14004eba5:	pop    rdi
   14004eba6:	gs jb  0x14004ec1b
   14004eba9:	outs   dx,DWORD PTR ds:[rsi]
   14004ebaa:	jb     0x14004ec0b
   14004ebac:	movsxd esp,DWORD PTR [rcx+0x74]
   14004ebaf:	outs   dx,DWORD PTR gs:[esi]
   14004ebb2:	jb     0x14004ec2d
   14004ebb4:	rex jae 0x14004ec2b
   14004ebb7:	fs rex
   14004ebb9:	add    BYTE PTR [rax],al
   14004ebbc:	add    BYTE PTR [rax],al
   14004ebbe:	add    BYTE PTR [rax],al
   14004ebc0:	lock xchg edi,eax
   14004ebc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ebcd:	add    BYTE PTR [rax],al
   14004ebcf:	add    BYTE PTR [rsi],ch
   14004ebd1:	(bad)  
   14004ebd2:	push   r14
   14004ebd4:	pop    rdi
   14004ebd5:	push   rbx
   14004ebd6:	jns    0x14004ec4b
   14004ebd8:	je     0x14004ec3f
   14004ebda:	ins    DWORD PTR es:[rdi],dx
   14004ebdb:	pop    rdi
   14004ebdc:	gs jb  0x14004ec51
   14004ebdf:	outs   dx,DWORD PTR ds:[rsi]
   14004ebe0:	jb     0x14004ec41
   14004ebe2:	movsxd esp,DWORD PTR [rcx+0x74]
   14004ebe5:	outs   dx,DWORD PTR gs:[esi]
   14004ebe8:	jb     0x14004ec63
   14004ebea:	rex jae 0x14004ec61
   14004ebed:	fs rex
   14004ebef:	add    BYTE PTR [rax],al
   14004ebf2:	add    BYTE PTR [rax],al
   14004ebf4:	add    BYTE PTR [rax],al
   14004ebf6:	add    BYTE PTR [rax],al
   14004ebf8:	lock xchg edi,eax
   14004ebfa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ec05:	add    BYTE PTR [rax],al
   14004ec07:	add    BYTE PTR [rsi],ch
   14004ec09:	(bad)  
   14004ec0a:	push   r14
   14004ec0c:	gs jb  0x14004ec81
   14004ec0f:	outs   dx,DWORD PTR ds:[rsi]
   14004ec10:	jb     0x14004ec71
   14004ec12:	movsxd esp,DWORD PTR [rcx+0x74]
   14004ec15:	outs   dx,DWORD PTR gs:[esi]
   14004ec18:	jb     0x14004ec93
   14004ec1a:	rex jae 0x14004ec91
   14004ec1d:	fs rex
   14004ec1f:	add    BYTE PTR [rax],al
   14004ec22:	add    BYTE PTR [rax],al
   14004ec24:	add    BYTE PTR [rax],al
   14004ec26:	add    BYTE PTR [rax],al
   14004ec28:	lock xchg edi,eax
   14004ec2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ec35:	add    BYTE PTR [rax],al
   14004ec37:	add    BYTE PTR [rsi],ch
   14004ec39:	(bad)  
   14004ec3a:	push   r14
   14004ec3c:	js     0x14004ec83
   14004ec3e:	js     0x14004eca3
   14004ec40:	gs jo  0x14004ecb7
   14004ec43:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004ec4a:	add    BYTE PTR [rax],al
   14004ec4c:	add    BYTE PTR [rax],al
   14004ec4e:	add    BYTE PTR [rax],al
   14004ec50:	lock xchg edi,eax
   14004ec52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ec5d:	add    BYTE PTR [rax],al
   14004ec5f:	add    BYTE PTR [rsi],ch
   14004ec61:	(bad)  
   14004ec62:	push   r14
   14004ec64:	rex.XB push r8
   14004ec66:	jb     0x14004ecd7
   14004ec68:	movsxd esp,DWORD PTR [rbp+0x73]
   14004ec6b:	jae    0x14004ecc1
   14004ec6d:	jb     0x14004ecd4
   14004ec6f:	gs rex.XB (bad) 
   14004ec72:	ins    BYTE PTR es:[rdi],dx
   14004ec73:	ins    BYTE PTR es:[rdi],dx
   14004ec74:	(bad)  
   14004ec76:	movsxd ebp,DWORD PTR [rbx+0x40]
   14004ec79:	add    BYTE PTR [rax],al
   14004ec7c:	add    BYTE PTR [rax],al
   14004ec7e:	add    BYTE PTR [rax],al
   14004ec80:	lock xchg edi,eax
   14004ec82:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ec8d:	add    BYTE PTR [rax],al
   14004ec8f:	add    BYTE PTR [rsi],ch
   14004ec91:	(bad)  
   14004ec92:	push   r14
   14004ec94:	pop    rdi
   14004ec95:	rex.RXB
   14004ec96:	outs   dx,BYTE PTR gs:[rsi]
   14004ec98:	gs jb  0x14004ed04
   14004ec9b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14004ec9e:	jb     0x14004ed12
   14004eca0:	outs   dx,DWORD PTR ds:[rsi]
   14004eca1:	jb     0x14004ed02
   14004eca3:	movsxd esp,DWORD PTR [rcx+0x74]
   14004eca6:	outs   dx,DWORD PTR gs:[esi]
   14004eca9:	jb     0x14004ed24
   14004ecab:	rex jae 0x14004ed22
   14004ecae:	fs rex
   14004ecb0:	add    BYTE PTR [rax],al
   14004ecb3:	add    BYTE PTR [rax],al
   14004ecb5:	add    BYTE PTR [rax],al
   14004ecb7:	add    al,dh
   14004ecb9:	xchg   edi,eax
   14004ecba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ecc5:	add    BYTE PTR [rax],al
   14004ecc7:	add    BYTE PTR [rsi],ch
   14004ecc9:	(bad)  
   14004ecca:	push   r14
   14004eccc:	rex.WB push r11
   14004ecce:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ecd2:	(bad)  
   14004ecd3:	(bad)  
   14004ecd4:	ins    BYTE PTR es:[rdi],dx
   14004ecd5:	gs rex
   14004ecd7:	add    BYTE PTR [rax],al
   14004ecda:	add    BYTE PTR [rax],al
   14004ecdc:	add    BYTE PTR [rax],al
   14004ecde:	add    BYTE PTR [rax],al
   14004ece0:	lock xchg edi,eax
   14004ece2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eced:	add    BYTE PTR [rax],al
   14004ecef:	add    BYTE PTR [rsi],ch
   14004ecf1:	(bad)  
   14004ecf2:	push   r14
   14004ecf4:	rex.XB
   14004ecf5:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004ecf7:	jbe    0x14004ed62
   14004ecf9:	jb     0x14004ed6a
   14004ecfb:	outs   dx,BYTE PTR ds:[rsi]
   14004ecfc:	ins    DWORD PTR es:[rdi],dx
   14004ecfd:	outs   dx,BYTE PTR gs:[rsi]
   14004ecff:	je     0x14004ed41
   14004ed01:	add    BYTE PTR [rax],al
   14004ed04:	add    BYTE PTR [rax],al
   14004ed06:	add    BYTE PTR [rax],al
   14004ed08:	lock xchg edi,eax
   14004ed0a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ed15:	add    BYTE PTR [rax],al
   14004ed17:	add    BYTE PTR [rsi],ch
   14004ed19:	(bad)  
   14004ed1a:	push   r14
   14004ed1c:	rex.XB push r11
   14004ed1e:	push   0x64657261
   14004ed23:	rex.WRB
   14004ed24:	gs ins DWORD PTR es:[rdi],dx
   14004ed26:	outs   dx,DWORD PTR ds:[rsi]
   14004ed27:	jb     0x14004eda2
   14004ed29:	rex
   14004ed2a:	add    BYTE PTR [rax],al
   14004ed2d:	add    BYTE PTR [rax],al
   14004ed2f:	add    al,dh
   14004ed31:	xchg   edi,eax
   14004ed32:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ed3d:	add    BYTE PTR [rax],al
   14004ed3f:	add    BYTE PTR [rsi],ch
   14004ed41:	(bad)  
   14004ed42:	push   r14
   14004ed44:	rex.XB push r11
   14004ed46:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ed4a:	(bad)  
   14004ed4b:	(bad)  
   14004ed4c:	ins    BYTE PTR es:[rdi],dx
   14004ed4d:	gs rex.WXB
   14004ed4f:	gs jb  0x14004edc0
   14004ed52:	gs ins BYTE PTR es:[rdi],dx
   14004ed54:	rex.WRXB (bad) 
   14004ed56:	push   0x65
   14004ed58:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14004ed5c:	add    BYTE PTR [rax],al
   14004ed5e:	add    BYTE PTR [rax],al
   14004ed60:	lock xchg edi,eax
   14004ed62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ed6d:	add    BYTE PTR [rax],al
   14004ed6f:	add    BYTE PTR [rsi],ch
   14004ed71:	(bad)  
   14004ed72:	push   r14
   14004ed74:	js     0x14004edc9
   14004ed76:	push   0x64657261
   14004ed7b:	rex.WRB
   14004ed7c:	gs ins DWORD PTR es:[rdi],dx
   14004ed7e:	outs   dx,DWORD PTR ds:[rsi]
   14004ed7f:	jb     0x14004edfa
   14004ed81:	rex.RB js 0x14004ede7
   14004ed84:	gs jo  0x14004edfb
   14004ed87:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004ed8e:	add    BYTE PTR [rax],al
   14004ed90:	lock xchg edi,eax
   14004ed92:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ed9d:	add    BYTE PTR [rax],al
   14004ed9f:	add    BYTE PTR [rsi],ch
   14004eda1:	(bad)  
   14004eda2:	push   r14
   14004eda4:	rex.WB
   14004eda5:	rex.RB jb 0x14004ee1a
   14004eda8:	outs   dx,DWORD PTR ds:[rsi]
   14004eda9:	jb     0x14004edfd
   14004edab:	gs jo  0x14004ee1d
   14004edae:	jb     0x14004ee24
   14004edb0:	gs jb  0x14004edf3
   14004edb3:	add    BYTE PTR [rax],al
   14004edb6:	add    BYTE PTR [rax],al
   14004edb8:	lock xchg edi,eax
   14004edba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004edc5:	add    BYTE PTR [rax],al
   14004edc7:	add    BYTE PTR [rsi],ch
   14004edc9:	(bad)  
   14004edca:	push   r14
   14004edcc:	rex.XB
   14004edcd:	rex.B jne 0x14004ee44
   14004edd0:	outs   dx,DWORD PTR ds:[rsi]
   14004edd1:	ins    DWORD PTR es:[rdi],dx
   14004edd2:	(bad)  
   14004edd3:	je     0x14004ee3e
   14004edd5:	outs   dx,DWORD PTR ds:[rsi]
   14004edd6:	outs   dx,BYTE PTR ds:[rsi]
   14004edd7:	rex.RB jbe 0x14004ee3f
   14004edda:	outs   dx,BYTE PTR ds:[rsi]
   14004eddb:	je     0x14004ee2f
   14004eddd:	gs jo  0x14004ee4f
   14004ede0:	jb     0x14004ee56
   14004ede2:	gs jb  0x14004ee25
   14004ede5:	add    BYTE PTR [rax],al
   14004ede8:	lock xchg edi,eax
   14004edea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004edf5:	add    BYTE PTR [rax],al
   14004edf7:	add    BYTE PTR [rsi],ch
   14004edf9:	(bad)  
   14004edfa:	push   r14
   14004edfc:	js     0x14004ee43
   14004edfe:	js     0x14004ee63
   14004ee00:	gs jo  0x14004ee77
   14004ee03:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6148
   14004ee0a:	ins    BYTE PTR es:[rdi],dx
   14004ee0b:	gs jb  0x14004ee4e
   14004ee0e:	add    al,sil
   14004ee11:	xchg   edi,eax
   14004ee12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ee1d:	add    BYTE PTR [rax],al
   14004ee1f:	add    BYTE PTR [rsi],ch
   14004ee21:	(bad)  
   14004ee22:	push   r14
   14004ee24:	rex.XB
   14004ee25:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x726f7272
   14004ee2e:	push   rdx
   14004ee2f:	gs jo  0x14004eea1
   14004ee32:	jb     0x14004eea8
   14004ee34:	gs jb  0x14004ee77
   14004ee37:	add    BYTE PTR [rax],al
   14004ee3a:	add    BYTE PTR [rax],al
   14004ee3c:	add    BYTE PTR [rax],al
   14004ee3e:	add    BYTE PTR [rax],al
   14004ee40:	lock xchg edi,eax
   14004ee42:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ee4d:	add    BYTE PTR [rax],al
   14004ee4f:	add    BYTE PTR [rsi],ch
   14004ee51:	(bad)  
   14004ee52:	push   r14
   14004ee54:	rex.XB
   14004ee55:	rex.B je 0x14004eec4
   14004ee58:	rex.RB js 0x14004eebe
   14004ee5b:	gs jo  0x14004eed2
   14004ee5e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14004ee65:	rex
   14004ee66:	add    al,sil
   14004ee69:	xchg   edi,eax
   14004ee6a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ee75:	add    BYTE PTR [rax],al
   14004ee77:	add    BYTE PTR [rsi],ch
   14004ee79:	(bad)  
   14004ee7a:	push   r14
   14004ee7c:	rex.XB push r11
   14004ee7e:	jns    0x14004eef3
   14004ee80:	je     0x14004eee7
   14004ee82:	ins    DWORD PTR es:[rdi],dx
   14004ee83:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004ee85:	outs   dx,WORD PTR ds:[rsi]
   14004ee87:	rex
   14004ee88:	add    BYTE PTR [rax],al
   14004ee8b:	add    BYTE PTR [rax],al
   14004ee8d:	add    BYTE PTR [rax],al
   14004ee8f:	add    al,dh
   14004ee91:	xchg   edi,eax
   14004ee92:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ee9d:	add    BYTE PTR [rax],al
   14004ee9f:	add    BYTE PTR [rsi],ch
   14004eea1:	(bad)  
   14004eea2:	push   r14
   14004eea4:	gs js  0x14004ef0a
   14004eea7:	gs jo  0x14004ef1e
   14004eeaa:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14004eeb1:	rex
   14004eeb2:	add    BYTE PTR [rax],al
   14004eeb5:	add    BYTE PTR [rax],al
   14004eeb7:	add    al,dh
   14004eeb9:	xchg   edi,eax
   14004eeba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eec5:	add    BYTE PTR [rax],al
   14004eec7:	add    BYTE PTR [rsi],ch
   14004eec9:	(bad)  
   14004eeca:	push   r14
   14004eecc:	ins    BYTE PTR es:[rdi],dx
   14004eecd:	outs   dx,DWORD PTR ds:[rsi]
   14004eece:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14004eed6:	jb     0x14004ef18
   14004eed8:	jae    0x14004ef4e
   14004eeda:	fs rex
   14004eedc:	add    BYTE PTR [rax],al
   14004eedf:	add    al,dh
   14004eee1:	xchg   edi,eax
   14004eee2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eeed:	add    BYTE PTR [rax],al
   14004eeef:	add    BYTE PTR [rsi],ch
   14004eef1:	(bad)  
   14004eef2:	push   r14
   14004eef4:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14004eefb:	pop    rdi
   14004eefc:	(bad)  
   14004eefd:	jb     0x14004ef66
   14004eeff:	jne    0x14004ef6e
   14004ef01:	outs   dx,BYTE PTR gs:[rsi]
   14004ef03:	je     0x14004ef45
   14004ef05:	jae    0x14004ef7b
   14004ef07:	fs rex
   14004ef09:	add    BYTE PTR [rax],al
   14004ef0c:	add    BYTE PTR [rax],al
   14004ef0e:	add    BYTE PTR [rax],al
   14004ef10:	lock xchg edi,eax
   14004ef12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ef1d:	add    BYTE PTR [rax],al
   14004ef1f:	add    BYTE PTR [rsi],ch
   14004ef21:	(bad)  
   14004ef22:	push   r14
   14004ef24:	rex.XB
   14004ef25:	rex.XB ins BYTE PTR es:[rdi],dx
   14004ef27:	gs (bad) 
   14004ef29:	outs   dx,BYTE PTR ds:[rsi]
   14004ef2a:	gs jb  0x14004ef6d
   14004ef2d:	add    BYTE PTR [rax],al
   14004ef30:	lock xchg edi,eax
   14004ef32:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ef3d:	add    BYTE PTR [rax],al
   14004ef3f:	add    BYTE PTR [rsi],ch
   14004ef41:	(bad)  
   14004ef42:	push   r14
   14004ef44:	rex.WB
   14004ef45:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004ef47:	addr32 addr32 gs jb 0x14004ef91
   14004ef4c:	outs   dx,BYTE PTR ds:[rsi]
   14004ef4d:	imul   ebp,DWORD PTR [esi+0x65],0x4040
   14004ef55:	add    BYTE PTR [rax],al
   14004ef57:	add    al,dh
   14004ef59:	xchg   edi,eax
   14004ef5a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ef65:	add    BYTE PTR [rax],al
   14004ef67:	add    BYTE PTR [rsi],ch
   14004ef69:	(bad)  
   14004ef6a:	push   r14
   14004ef6c:	rex.WB
   14004ef6d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004ef6f:	addr32 addr32 gs jb 0x14004efb9
   14004ef74:	outs   dx,BYTE PTR ds:[rsi]
   14004ef75:	imul   ebp,DWORD PTR [esi+0x65],0x666e6f43
   14004ef7d:	imul   esp,DWORD PTR [rdi+0x40],0x40
   14004ef84:	add    BYTE PTR [rax],al
   14004ef86:	add    BYTE PTR [rax],al
   14004ef88:	lock xchg edi,eax
   14004ef8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ef95:	add    BYTE PTR [rax],al
   14004ef97:	add    BYTE PTR [rsi],ch
   14004ef99:	(bad)  
   14004ef9a:	push   r14
   14004ef9c:	rex.XB
   14004ef9d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ef9f:	ins    DWORD PTR es:[rdi],dx
   14004efa0:	ins    DWORD PTR es:[rdi],dx
   14004efa1:	(bad)  
   14004efa2:	outs   dx,BYTE PTR ds:[rsi]
   14004efa3:	imul   r13,QWORD PTR fs:[rsi+0x65],0x404057
   14004efac:	add    BYTE PTR [rax],al
   14004efae:	add    BYTE PTR [rax],al
   14004efb0:	lock xchg edi,eax
   14004efb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004efbd:	add    BYTE PTR [rax],al
   14004efbf:	add    BYTE PTR [rsi],ch
   14004efc1:	(bad)  
   14004efc2:	push   r13
   14004efc4:	rex.WB push r13
   14004efc6:	outs   dx,BYTE PTR ds:[rsi]
   14004efc7:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14004efcb:	outs   dx,BYTE PTR ds:[rsi]
   14004efcc:	rex
   14004efcd:	add    BYTE PTR [rax],al
   14004efd0:	lock xchg edi,eax
   14004efd2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004efdd:	add    BYTE PTR [rax],al
   14004efdf:	add    BYTE PTR [rsi],ch
   14004efe1:	rex.WX add BYTE PTR [rax],al
   14004efe4:	add    BYTE PTR [rax],al
   14004efe6:	add    BYTE PTR [rax],al
   14004efe8:	lock xchg edi,eax
   14004efea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eff5:	add    BYTE PTR [rax],al
   14004eff7:	add    BYTE PTR [rsi],ch
   14004eff9:	(bad)  
   14004effa:	push   r14
   14004effc:	rex.XB push r8
   14004effe:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004f000:	outs   dx,BYTE PTR ds:[rsi]
   14004f001:	rex.XB ins DWORD PTR es:[rdi],dx
   14004f003:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4040
   14004f00c:	add    BYTE PTR [rax],al
   14004f00e:	add    BYTE PTR [rax],al
   14004f010:	lock xchg edi,eax
   14004f012:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f01d:	add    BYTE PTR [rax],al
   14004f01f:	add    BYTE PTR [rsi],ch
   14004f021:	(bad)  
   14004f022:	push   r14
   14004f024:	rex.XB
   14004f025:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004f027:	addr32 addr32 gs jb 0x14004f071
   14004f02c:	outs   dx,BYTE PTR ds:[rsi]
   14004f02d:	imul   ebp,DWORD PTR [esi+0x65],0x4040
   14004f035:	add    BYTE PTR [rax],al
   14004f037:	add    al,dh
   14004f039:	xchg   edi,eax
   14004f03a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f045:	add    BYTE PTR [rax],al
   14004f047:	add    BYTE PTR [rsi],ch
   14004f049:	(bad)  
   14004f04a:	push   r14
   14004f04c:	js     0x14004f09a
   14004f04e:	outs   dx,DWORD PTR ds:[rsi]
   14004f04f:	addr32 addr32 gs jb 0x14004f099
   14004f054:	js     0x14004f0b9
   14004f056:	gs jo  0x14004f0cd
   14004f059:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6148
   14004f060:	ins    BYTE PTR es:[rdi],dx
   14004f061:	gs jb  0x14004f0a4
   14004f064:	add    BYTE PTR [rax],al
   14004f067:	add    al,dh
   14004f069:	xchg   edi,eax
   14004f06a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f075:	add    BYTE PTR [rax],al
   14004f077:	add    BYTE PTR [rsi],ch
   14004f079:	(bad)  
   14004f07a:	push   r14
   14004f07c:	rex.XB push r8
   14004f07e:	gs jb  0x14004f0e7
   14004f081:	rex.R jb 0x14004f0ed
   14004f084:	jbe    0x14004f0eb
   14004f086:	jb     0x14004f0c8
   14004f088:	add    BYTE PTR [rax],al
   14004f08b:	add    BYTE PTR [rax],al
   14004f08d:	add    BYTE PTR [rax],al
   14004f08f:	add    al,dh
   14004f091:	xchg   edi,eax
   14004f092:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f09d:	add    BYTE PTR [rax],al
   14004f09f:	add    BYTE PTR [rsi],ch
   14004f0a1:	(bad)  
   14004f0a2:	push   r14
   14004f0a4:	js     0x14004f0f2
   14004f0a6:	outs   dx,DWORD PTR ds:[rsi]
   14004f0a7:	addr32 addr32 gs jb 0x14004f0f1
   14004f0ac:	outs   dx,BYTE PTR ds:[rsi]
   14004f0ad:	imul   ebp,DWORD PTR [esi+0x65],0x65637845
   14004f0b5:	jo     0x14004f12b
   14004f0b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f0be:	add    BYTE PTR [rax],al
   14004f0c0:	lock xchg edi,eax
   14004f0c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f0cd:	add    BYTE PTR [rax],al
   14004f0cf:	add    BYTE PTR [rsi],ch
   14004f0d1:	(bad)  
   14004f0d2:	push   r14
   14004f0d4:	rex.XB
   14004f0d5:	rex.R jb 0x14004f141
   14004f0d8:	jbe    0x14004f13f
   14004f0da:	jb     0x14004f11f
   14004f0dc:	outs   dx,DWORD PTR ds:[rsi]
   14004f0dd:	outs   dx,BYTE PTR ds:[rsi]
   14004f0de:	je     0x14004f152
   14004f0e0:	outs   dx,DWORD PTR ds:[rsi]
   14004f0e1:	ins    BYTE PTR es:[rdi],dx
   14004f0e2:	rex
   14004f0e3:	add    BYTE PTR [rax],al
   14004f0e6:	add    BYTE PTR [rax],al
   14004f0e8:	lock xchg edi,eax
   14004f0ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f0f5:	add    BYTE PTR [rax],al
   14004f0f7:	add    BYTE PTR [rsi],ch
   14004f0f9:	(bad)  
   14004f0fa:	push   r14
   14004f0fc:	rex.XB push r8
   14004f0fe:	rex.WRB
   14004f0ff:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004f101:	outs   dx,BYTE PTR ds:[rsi]
   14004f102:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x4040
   14004f10a:	add    BYTE PTR [rax],al
   14004f10c:	add    BYTE PTR [rax],al
   14004f10e:	add    BYTE PTR [rax],al
   14004f110:	lock xchg edi,eax
   14004f112:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f11d:	add    BYTE PTR [rax],al
   14004f11f:	add    BYTE PTR [rsi],ch
   14004f121:	(bad)  
   14004f122:	push   r14
   14004f124:	rex.XB push r8
   14004f126:	rex.WRB
   14004f127:	rex.WRX (bad) 
   14004f129:	ins    DWORD PTR es:[rdi],dx
   14004f12a:	gs fs push rax
   14004f12d:	imul   esi,DWORD PTR [rax+0x65],0x76726553
   14004f134:	gs jb  0x14004f177
   14004f137:	add    BYTE PTR [rax],al
   14004f13a:	add    BYTE PTR [rax],al
   14004f13c:	add    DWORD PTR [rax],eax
   14004f13e:	add    BYTE PTR [rax],al
   14004f140:	lock xchg edi,eax
   14004f142:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f14d:	add    BYTE PTR [rax],al
   14004f14f:	add    BYTE PTR [rsi],ch
   14004f151:	(bad)  
   14004f152:	push   r14
   14004f154:	rex.XB
   14004f155:	rex.RB je 0x14004f1cf
   14004f158:	rex.WXB
   14004f159:	gs jb  0x14004f1ca
   14004f15c:	gs ins BYTE PTR es:[rdi],dx
   14004f15e:	push   rbx
   14004f15f:	gs jae 0x14004f1d5
   14004f162:	imul   ebp,DWORD PTR [rdi+0x6e],0xf0004040
   14004f169:	xchg   edi,eax
   14004f16a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f175:	add    BYTE PTR [rax],al
   14004f177:	add    BYTE PTR [rsi],ch
   14004f179:	(bad)  
   14004f17a:	push   r14
   14004f17c:	rex.XB
   14004f17d:	rex.RB je 0x14004f1f7
   14004f180:	push   rbx
   14004f181:	gs jae 0x14004f1f7
   14004f184:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f18b:	add    BYTE PTR [rax],al
   14004f18d:	add    BYTE PTR [rax],al
   14004f18f:	add    al,dh
   14004f191:	xchg   edi,eax
   14004f192:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f19d:	add    BYTE PTR [rax],al
   14004f19f:	add    BYTE PTR [rsi],ch
   14004f1a1:	(bad)  
   14004f1a2:	push   r14
   14004f1a4:	rex.XB
   14004f1a5:	rex.RB je 0x14004f21f
   14004f1a8:	rex.B jo 0x14004f21b
   14004f1ab:	push   rbx
   14004f1ac:	gs jae 0x14004f222
   14004f1af:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f1b6:	add    BYTE PTR [rax],al
   14004f1b8:	lock xchg edi,eax
   14004f1ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f1c5:	add    BYTE PTR [rax],al
   14004f1c7:	add    BYTE PTR [rsi],ch
   14004f1c9:	(bad)  
   14004f1ca:	push   r14
   14004f1cc:	rex.XB push r8
   14004f1ce:	rex.WRB
   14004f1cf:	rex.X jne 0x14004f238
   14004f1d2:	data16 gs jb 0x14004f22d
   14004f1d6:	jb     0x14004f241
   14004f1d8:	je     0x14004f23f
   14004f1da:	jb     0x14004f21c
   14004f1dc:	add    BYTE PTR [rax],al
   14004f1df:	add    al,dh
   14004f1e1:	xchg   edi,eax
   14004f1e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f1ed:	add    BYTE PTR [rax],al
   14004f1ef:	add    BYTE PTR [rsi],ch
   14004f1f1:	(bad)  
   14004f1f2:	push   r14
   14004f1f4:	rex.XB push r8
   14004f1f6:	rex.WRB push r11
   14004f1f8:	gs je  0x14004f26f
   14004f1fb:	imul   ebp,DWORD PTR [rsi+0x67],0x404073
   14004f202:	add    BYTE PTR [rax],al
   14004f204:	add    BYTE PTR [rax],al
   14004f206:	add    BYTE PTR [rax],al
   14004f208:	lock xchg edi,eax
   14004f20a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f215:	add    BYTE PTR [rax],al
   14004f217:	add    BYTE PTR [rsi],ch
   14004f219:	(bad)  
   14004f21a:	push   r14
   14004f21c:	push   rax
   14004f21d:	push   rbp
   14004f21e:	imul   esp,DWORD PTR [rbx+rax*2+0x61],0x40656863
   14004f226:	add    al,sil
   14004f229:	xchg   edi,eax
   14004f22a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f235:	add    BYTE PTR [rax],al
   14004f237:	add    BYTE PTR [rsi],ch
   14004f239:	(bad)  
   14004f23a:	push   r14
   14004f23c:	push   rbp
   14004f23d:	outs   dx,BYTE PTR ds:[rsi]
   14004f23e:	imul   esi,DWORD PTR [rcx+0x75],0x43444965
   14004f245:	(bad)  
   14004f246:	movsxd ebp,DWORD PTR [rax+0x65]
   14004f249:	rex
   14004f24a:	add    BYTE PTR [rax],al
   14004f24d:	add    BYTE PTR [rax],al
   14004f24f:	add    al,dh
   14004f251:	xchg   edi,eax
   14004f252:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f25d:	add    BYTE PTR [rax],al
   14004f25f:	add    BYTE PTR [rsi],ch
   14004f261:	(bad)  
   14004f262:	push   r14
   14004f264:	push   rsp
   14004f265:	push   rbp
   14004f266:	imul   esp,DWORD PTR [rbx+rax*2+0x61],0x40656863
   14004f26e:	add    al,sil
   14004f271:	xchg   edi,eax
   14004f272:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f27d:	add    BYTE PTR [rax],al
   14004f27f:	add    BYTE PTR [rsi],ch
   14004f281:	rex.WXB add BYTE PTR [r8],al
   14004f284:	add    BYTE PTR [rax],al
   14004f286:	add    BYTE PTR [rax],al
   14004f288:	lock xchg edi,eax
   14004f28a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f295:	add    BYTE PTR [rax],al
   14004f297:	add    BYTE PTR [rsi],ch
   14004f299:	(bad)  
   14004f29a:	push   r14
   14004f29c:	rex.XB
   14004f29d:	rex.WRXB push r11
   14004f29f:	rex.RB jbe 0x14004f307
   14004f2a2:	outs   dx,BYTE PTR ds:[rsi]
   14004f2a3:	je     0x14004f2e5
   14004f2a5:	add    BYTE PTR [rax],al
   14004f2a8:	lock xchg edi,eax
   14004f2aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f2b5:	add    BYTE PTR [rax],al
   14004f2b7:	add    BYTE PTR [rsi],ch
   14004f2b9:	(bad)  
   14004f2ba:	push   r14
   14004f2bc:	(bad)
   14004f2c1:	ins    BYTE PTR es:[rdi],dx
   14004f2c2:	ins    BYTE PTR es:[rdi],dx
   14004f2c3:	outs   dx,DWORD PTR ds:[rsi]
   14004f2c4:	movsxd eax,DWORD PTR [rax+0x73]
   14004f2c7:	je     0x14004f32d
   14004f2c9:	rex
   14004f2ca:	add    BYTE PTR [rax],al
   14004f2cd:	add    BYTE PTR [rax],al
   14004f2cf:	add    al,dh
   14004f2d1:	xchg   edi,eax
   14004f2d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f2dd:	add    BYTE PTR [rax],al
   14004f2df:	add    BYTE PTR [rsi],ch
   14004f2e1:	(bad)  
   14004f2e2:	push   r14
   14004f2e4:	rex.XB
   14004f2e5:	rex.RB jbe 0x14004f34d
   14004f2e8:	outs   dx,BYTE PTR ds:[rsi]
   14004f2e9:	je     0x14004f337
   14004f2eb:	outs   dx,DWORD PTR ds:[rsi]
   14004f2ec:	addr32 rex.RB jb 0x14004f362
   14004f2f0:	outs   dx,DWORD PTR ds:[rsi]
   14004f2f1:	jb     0x14004f345
   14004f2f3:	gs jo  0x14004f365
   14004f2f6:	jb     0x14004f36c
   14004f2f8:	gs jb  0x14004f33b
   14004f2fb:	add    BYTE PTR [rax],al
   14004f2fe:	add    BYTE PTR [rax],al
   14004f300:	lock xchg edi,eax
   14004f302:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f30d:	add    BYTE PTR [rax],al
   14004f30f:	add    BYTE PTR [rsi],ch
   14004f311:	(bad)  
   14004f312:	push   r14
   14004f314:	rex.XB
   14004f315:	rex.WRXB push r11
   14004f317:	rex.WRB jne 0x14004f38e
   14004f31a:	gs js  0x14004f35d
   14004f31d:	add    BYTE PTR [rax],al
   14004f320:	lock xchg edi,eax
   14004f322:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f32d:	add    BYTE PTR [rax],al
   14004f32f:	add    BYTE PTR [rsi],ch
   14004f331:	(bad)  
   14004f332:	push   r14
   14004f334:	rex.XB push r12
   14004f336:	push   0x64616572
   14004f33b:	rex
   14004f33c:	add    BYTE PTR [rax],al
   14004f33f:	add    al,dh
   14004f341:	xchg   edi,eax
   14004f342:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f34d:	add    BYTE PTR [rax],al
   14004f34f:	add    BYTE PTR [rsi],ch
   14004f351:	(bad)  
   14004f352:	push   r14
   14004f354:	js     0x14004f3aa
   14004f356:	push   0x64616572
   14004f35b:	rex.RB js 0x14004f3c1
   14004f35e:	gs jo  0x14004f3d5
   14004f361:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f368:	lock xchg edi,eax
   14004f36a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f375:	add    BYTE PTR [rax],al
   14004f377:	add    BYTE PTR [rsi],ch
   14004f379:	(bad)  
   14004f37a:	push   r14
   14004f37c:	pop    rax
   14004f37d:	ins    DWORD PTR es:[rdi],dx
   14004f37e:	ins    BYTE PTR es:[rdi],dx
   14004f37f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f381:	jne    0x14004f3f1
   14004f383:	je     0x14004f3ea
   14004f385:	jb     0x14004f3fa
   14004f387:	rex.R
   14004f388:	rex.X
   14004f389:	rex
   14004f38a:	add    BYTE PTR [rax],al
   14004f38d:	add    BYTE PTR [rax],al
   14004f38f:	add    al,dh
   14004f391:	xchg   edi,eax
   14004f392:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f39d:	add    BYTE PTR [rax],al
   14004f39f:	add    BYTE PTR [rsi],ch
   14004f3a1:	(bad)  
   14004f3a2:	push   r14
   14004f3a4:	pop    rax
   14004f3a5:	ins    DWORD PTR es:[rdi],dx
   14004f3a6:	ins    BYTE PTR es:[rdi],dx
   14004f3a7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f3a9:	jne    0x14004f419
   14004f3ab:	je     0x14004f412
   14004f3ad:	jb     0x14004f422
   14004f3af:	rex.R
   14004f3b0:	rex.X
   14004f3b1:	rex.WB ins DWORD PTR es:[rdi],dx
   14004f3b3:	jo     0x14004f421
   14004f3b5:	rex
   14004f3b6:	add    al,sil
   14004f3b9:	xchg   edi,eax
   14004f3ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f3c5:	add    BYTE PTR [rax],al
   14004f3c7:	add    BYTE PTR [rsi],ch
   14004f3c9:	(bad)  
   14004f3ca:	push   r14
   14004f3cc:	push   rbx
   14004f3cd:	pop    r8
   14004f3cf:	rex.RB jb 0x14004f444
   14004f3d2:	outs   dx,DWORD PTR ds:[rsi]
   14004f3d3:	jb     0x14004f41d
   14004f3d5:	(bad)  
   14004f3d6:	outs   dx,BYTE PTR ds:[rsi]
   14004f3d7:	fs ins BYTE PTR es:[rdi],dx
   14004f3d9:	gs jb  0x14004f425
   14004f3dc:	ins    DWORD PTR es:[rdi],dx
   14004f3dd:	jo     0x14004f44b
   14004f3df:	rex
   14004f3e0:	add    BYTE PTR [rax],al
   14004f3e3:	add    BYTE PTR [rax],al
   14004f3e5:	add    BYTE PTR [rax],al
   14004f3e7:	add    al,dh
   14004f3e9:	xchg   edi,eax
   14004f3ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f3f5:	add    BYTE PTR [rax],al
   14004f3f7:	add    BYTE PTR [rsi],ch
   14004f3f9:	(bad)  
   14004f3fa:	push   r13
   14004f3fc:	rex.WB push r11
   14004f3fe:	pop    r8
   14004f400:	rex.RB jb 0x14004f475
   14004f403:	outs   dx,DWORD PTR ds:[rsi]
   14004f404:	jb     0x14004f44e
   14004f406:	(bad)  
   14004f407:	outs   dx,BYTE PTR ds:[rsi]
   14004f408:	fs ins BYTE PTR es:[rdi],dx
   14004f40a:	gs jb  0x14004f44d
   14004f40d:	add    BYTE PTR [rax],al
   14004f410:	lock xchg edi,eax
   14004f412:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f41d:	add    BYTE PTR [rax],al
   14004f41f:	add    BYTE PTR [rsi],ch
   14004f421:	(bad)  
   14004f422:	push   r14
   14004f424:	rex.WRB jns 0x14004f46a
   14004f427:	outs   dx,DWORD PTR ds:[rsi]
   14004f428:	outs   dx,BYTE PTR ds:[rsi]
   14004f429:	je     0x14004f490
   14004f42b:	outs   dx,BYTE PTR ds:[rsi]
   14004f42c:	je     0x14004f46e
   14004f42e:	add    al,sil
   14004f431:	xchg   edi,eax
   14004f432:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f43d:	add    BYTE PTR [rax],al
   14004f43f:	add    BYTE PTR [rsi],ch
   14004f441:	(bad)  
   14004f442:	push   r14
   14004f444:	push   rbx
   14004f445:	pop    r8
   14004f447:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f449:	outs   dx,BYTE PTR ds:[rsi]
   14004f44a:	je     0x14004f4b1
   14004f44c:	outs   dx,BYTE PTR ds:[rsi]
   14004f44d:	je     0x14004f497
   14004f44f:	(bad)  
   14004f450:	outs   dx,BYTE PTR ds:[rsi]
   14004f451:	fs ins BYTE PTR es:[rdi],dx
   14004f453:	gs jb  0x14004f49f
   14004f456:	ins    DWORD PTR es:[rdi],dx
   14004f457:	jo     0x14004f4c5
   14004f459:	rex
   14004f45a:	add    BYTE PTR [rax],al
   14004f45d:	add    BYTE PTR [rax],al
   14004f45f:	add    al,dh
   14004f461:	xchg   edi,eax
   14004f462:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f46d:	add    BYTE PTR [rax],al
   14004f46f:	add    BYTE PTR [rsi],ch
   14004f471:	(bad)  
   14004f472:	push   r13
   14004f474:	rex.WB push r11
   14004f476:	pop    r8
   14004f478:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f47a:	outs   dx,BYTE PTR ds:[rsi]
   14004f47b:	je     0x14004f4e2
   14004f47d:	outs   dx,BYTE PTR ds:[rsi]
   14004f47e:	je     0x14004f4c8
   14004f480:	(bad)  
   14004f481:	outs   dx,BYTE PTR ds:[rsi]
   14004f482:	fs ins BYTE PTR es:[rdi],dx
   14004f484:	gs jb  0x14004f4c7
   14004f487:	add    BYTE PTR [rax],al
   14004f48a:	add    BYTE PTR [rax],al
   14004f48c:	add    BYTE PTR [rax],al
   14004f48e:	add    BYTE PTR [rax],al
   14004f490:	lock xchg edi,eax
   14004f492:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f49d:	add    BYTE PTR [rax],al
   14004f49f:	add    BYTE PTR [rsi],ch
   14004f4a1:	(bad)  
   14004f4a2:	push   r14
   14004f4a4:	rex.XB push r12
   14004f4a6:	outs   dx,DWORD PTR ds:[rsi]
   14004f4a7:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   14004f4ab:	(bad)  
   14004f4ac:	outs   dx,BYTE PTR ds:[rsi]
   14004f4ad:	(bad)  
   14004f4ae:	addr32 gs jb 0x14004f4f2
   14004f4b2:	add    BYTE PTR [rax],al
   14004f4b5:	add    BYTE PTR [rax],al
   14004f4b7:	add    al,dh
   14004f4b9:	xchg   edi,eax
   14004f4ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f4c5:	add    BYTE PTR [rax],al
   14004f4c7:	add    BYTE PTR [rsi],ch
   14004f4c9:	(bad)  
   14004f4ca:	push   r14
   14004f4cc:	rex.XB
   14004f4cd:	rex.RB jb 0x14004f542
   14004f4d0:	outs   dx,DWORD PTR ds:[rsi]
   14004f4d1:	jb     0x14004f527
   14004f4d3:	jb     0x14004f536
   14004f4d5:	outs   dx,BYTE PTR ds:[rsi]
   14004f4d6:	jae    0x14004f53e
   14004f4d8:	gs jb  0x14004f51c
   14004f4db:	outs   dx,BYTE PTR gs:[esi]
   14004f4de:	je     0x14004f520
   14004f4e0:	add    BYTE PTR [rax],al
   14004f4e3:	add    BYTE PTR [rax],al
   14004f4e5:	add    BYTE PTR [rax],al
   14004f4e7:	add    al,dh
   14004f4e9:	xchg   edi,eax
   14004f4ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f4f5:	add    BYTE PTR [rax],al
   14004f4f7:	add    BYTE PTR [rsi],ch
   14004f4f9:	(bad)  
   14004f4fa:	push   r14
   14004f4fc:	rex.XB
   14004f4fd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f4ff:	ins    BYTE PTR es:[rdi],dx
   14004f500:	ins    BYTE PTR es:[rdi],dx
   14004f501:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004f506:	outs   dx,BYTE PTR ds:[rsi]
   14004f507:	push   rbx
   14004f508:	gs je  0x14004f57f
   14004f50b:	imul   ebp,DWORD PTR [rsi+0x67],0x404073
   14004f512:	add    BYTE PTR [rax],al
   14004f514:	add    BYTE PTR [rax],al
   14004f516:	add    BYTE PTR [rax],al
   14004f518:	lock xchg edi,eax
   14004f51a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f525:	add    BYTE PTR [rax],al
   14004f527:	add    BYTE PTR [rsi],ch
   14004f529:	(bad)  
   14004f52a:	push   r14
   14004f52c:	rex.XB
   14004f52d:	imul   r13d,DWORD PTR [rbp+r12*2+0x48],0x65646165
   14004f536:	jb     0x14004f578
   14004f538:	add    BYTE PTR [rax],al
   14004f53b:	add    BYTE PTR [rax],al
   14004f53d:	add    BYTE PTR [rax],al
   14004f53f:	add    al,dh
   14004f541:	xchg   edi,eax
   14004f542:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f54d:	add    BYTE PTR [rax],al
   14004f54f:	add    BYTE PTR [rsi],ch
   14004f551:	(bad)  
   14004f552:	push   r14
   14004f554:	rex.XB
   14004f555:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f557:	outs   dx,BYTE PTR ds:[rsi]
   14004f558:	je     0x14004f5cc
   14004f55a:	outs   dx,DWORD PTR ds:[rsi]
   14004f55b:	ins    BYTE PTR es:[rdi],dx
   14004f55c:	rex.X ins BYTE PTR es:[rdi],dx
   14004f55e:	outs   dx,DWORD PTR ds:[rsi]
   14004f55f:	movsxd ebp,DWORD PTR [rbx+0x73]
   14004f562:	rex
   14004f563:	add    BYTE PTR [rax],al
   14004f566:	add    BYTE PTR [rax],al
   14004f568:	lock xchg edi,eax
   14004f56a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f575:	add    BYTE PTR [rax],al
   14004f577:	add    BYTE PTR [rsi],ch
   14004f579:	(bad)  
   14004f57a:	push   r14
   14004f57c:	rex.XB push r8
   14004f57e:	jb     0x14004f5ef
   14004f580:	imul   bp,WORD PTR [rbp+riz*2+0x43],0x6e6f
   14004f587:	je     0x14004f5fb
   14004f589:	outs   dx,DWORD PTR ds:[rsi]
   14004f58a:	ins    BYTE PTR es:[rdi],dx
   14004f58b:	rex
   14004f58c:	add    BYTE PTR [rax],al
   14004f58f:	add    al,dh
   14004f591:	xchg   edi,eax
   14004f592:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f59d:	add    BYTE PTR [rax],al
   14004f59f:	add    BYTE PTR [rsi],ch
   14004f5a1:	(bad)  
   14004f5a2:	push   r14
   14004f5a4:	rex.XB
   14004f5a5:	rex.B jb 0x14004f61a
   14004f5a8:	(bad)  
   14004f5a9:	jns    0x14004f5f8
   14004f5ab:	(bad)  
   14004f5ac:	outs   dx,BYTE PTR ds:[rsi]
   14004f5ad:	(bad)  
   14004f5ae:	addr32 gs jb 0x14004f5f2
   14004f5b2:	add    BYTE PTR [rax],al
   14004f5b5:	add    BYTE PTR [rax],al
   14004f5b7:	add    al,dh
   14004f5b9:	xchg   edi,eax
   14004f5ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f5c5:	add    BYTE PTR [rax],al
   14004f5c7:	add    BYTE PTR [rsi],ch
   14004f5c9:	(bad)  
   14004f5ca:	push   r14
   14004f5cc:	js     0x14004f61f
   14004f5ce:	jne    0x14004f635
   14004f5d0:	jne    0x14004f637
   14004f5d2:	rex.WRB (bad) 
   14004f5d4:	outs   dx,BYTE PTR ds:[rsi]
   14004f5d5:	(bad)  
   14004f5d6:	addr32 gs jb 0x14004f61f
   14004f5da:	js     0x14004f63f
   14004f5dc:	gs jo  0x14004f653
   14004f5df:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f5e6:	add    BYTE PTR [rax],al
   14004f5e8:	lock xchg edi,eax
   14004f5ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f5f5:	add    BYTE PTR [rax],al
   14004f5f7:	add    BYTE PTR [rsi],ch
   14004f5f9:	(bad)  
   14004f5fa:	push   r14
   14004f5fc:	rex.XB push r9
   14004f5fe:	jne    0x14004f665
   14004f600:	jne    0x14004f667
   14004f602:	rex.WRB (bad) 
   14004f604:	outs   dx,BYTE PTR ds:[rsi]
   14004f605:	(bad)  
   14004f606:	addr32 gs jb 0x14004f64a
   14004f60a:	add    BYTE PTR [rax],al
   14004f60d:	add    BYTE PTR [rax],al
   14004f60f:	add    al,dh
   14004f611:	xchg   edi,eax
   14004f612:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f61d:	add    BYTE PTR [rax],al
   14004f61f:	add    BYTE PTR [rsi],ch
   14004f621:	(bad)  
   14004f622:	push   r14
   14004f624:	rex.XB push r8
   14004f626:	jb     0x14004f697
   14004f628:	imul   bp,WORD PTR [rbp+riz*2+0x45],0x6576
   14004f62f:	outs   dx,BYTE PTR ds:[rsi]
   14004f630:	je     0x14004f67f
   14004f632:	(bad)  
   14004f633:	outs   dx,BYTE PTR ds:[rsi]
   14004f634:	(bad)  
   14004f635:	addr32 gs jb 0x14004f679
   14004f639:	add    BYTE PTR [rax],al
   14004f63c:	add    BYTE PTR [rax],al
   14004f63e:	add    BYTE PTR [rax],al
   14004f640:	lock xchg edi,eax
   14004f642:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f64d:	add    BYTE PTR [rax],al
   14004f64f:	add    BYTE PTR [rsi],ch
   14004f651:	(bad)  
   14004f652:	push   r14
   14004f654:	rex.XB push r11
   14004f656:	push   0x64657261
   14004f65b:	push   rax
   14004f65c:	imul   esi,DWORD PTR [rax+0x65],0x4040
   14004f663:	add    BYTE PTR [rax],al
   14004f665:	add    BYTE PTR [rax],al
   14004f667:	add    al,dh
   14004f669:	xchg   edi,eax
   14004f66a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f675:	add    BYTE PTR [rax],al
   14004f677:	add    BYTE PTR [rsi],ch
   14004f679:	(bad)  
   14004f67a:	push   r14
   14004f67c:	js     0x14004f6d1
   14004f67e:	push   0x64657261
   14004f683:	push   rbx
   14004f684:	jo     0x14004f6ef
   14004f686:	outs   dx,BYTE PTR ds:[rsi]
   14004f687:	ins    BYTE PTR es:[rdi],dx
   14004f688:	outs   dx,DWORD PTR ds:[rsi]
   14004f689:	movsxd ebp,DWORD PTR [rbx+0x45]
   14004f68c:	js     0x14004f6f1
   14004f68e:	gs jo  0x14004f705
   14004f691:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004f698:	lock xchg edi,eax
   14004f69a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f6a5:	add    BYTE PTR [rax],al
   14004f6a7:	add    BYTE PTR [rsi],ch
   14004f6a9:	(bad)  
   14004f6aa:	push   r14
   14004f6ac:	rex.XB push r11
   14004f6ae:	push   0x64657261
   14004f6b3:	push   rbx
   14004f6b4:	jo     0x14004f71f
   14004f6b6:	outs   dx,BYTE PTR ds:[rsi]
   14004f6b7:	ins    BYTE PTR es:[rdi],dx
   14004f6b8:	outs   dx,DWORD PTR ds:[rsi]
   14004f6b9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14004f6bc:	add    BYTE PTR [rax],al
   14004f6bf:	add    al,dh
   14004f6c1:	xchg   edi,eax
   14004f6c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f6cd:	add    BYTE PTR [rax],al
   14004f6cf:	add    BYTE PTR [rsi],ch
   14004f6d1:	(bad)  
   14004f6d2:	push   r14
   14004f6d4:	rex.XB
   14004f6d5:	rex.X jne 0x14004f73e
   14004f6d8:	data16 gs jb 0x14004f72c
   14004f6dc:	outs   dx,DWORD PTR ds:[rsi]
   14004f6dd:	outs   dx,DWORD PTR ds:[rsi]
   14004f6de:	ins    BYTE PTR es:[rdi],dx
   14004f6df:	rex
   14004f6e0:	add    BYTE PTR [rax],al
   14004f6e3:	add    BYTE PTR [rax],al
   14004f6e5:	add    BYTE PTR [rax],al
   14004f6e7:	add    al,dh
   14004f6e9:	xchg   edi,eax
   14004f6ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f6f5:	add    BYTE PTR [rax],al
   14004f6f7:	add    BYTE PTR [rsi],ch
   14004f6f9:	(bad)  
   14004f6fa:	push   r14
   14004f6fc:	rex.XB push r8
   14004f6fe:	jb     0x14004f76f
   14004f700:	imul   bp,WORD PTR [rbp+riz*2+0x45],0x6576
   14004f707:	outs   dx,BYTE PTR ds:[rsi]
   14004f708:	je     0x14004f74b
   14004f70a:	jb     0x14004f77e
   14004f70c:	(bad)  
   14004f70d:	jns    0x14004f74f
   14004f70f:	add    BYTE PTR [rax],al
   14004f712:	add    BYTE PTR [rax],al
   14004f714:	add    BYTE PTR [rax],al
   14004f716:	add    BYTE PTR [rax],al
   14004f718:	lock xchg edi,eax
   14004f71a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f725:	add    BYTE PTR [rax],al
   14004f727:	add    BYTE PTR [rsi],ch
   14004f729:	(bad)  
   14004f72a:	push   r14
   14004f72c:	rex.XB
   14004f72d:	rex.WRXB push r11
   14004f72f:	push   rbx
   14004f730:	gs ins DWORD PTR es:[rdi],dx
   14004f732:	(bad)  
   14004f733:	jo     0x14004f79d
   14004f735:	outs   dx,DWORD PTR ds:[rsi]
   14004f736:	jb     0x14004f79d
   14004f738:	rex
   14004f739:	add    BYTE PTR [rax],al
   14004f73c:	add    BYTE PTR [rax],al
   14004f73e:	add    BYTE PTR [rax],al
   14004f740:	cwde   
   14004f741:	iret   
   14004f742:	add    eax,DWORD PTR [rax+0x1]
   14004f745:	add    BYTE PTR [rax],al
   14004f747:	add    BYTE PTR [rax+0x14003cf],bl
   14004f74d:	add    BYTE PTR [rax],al
   14004f74f:	add    BYTE PTR [rax+0x14003cf],bl
   14004f755:	add    BYTE PTR [rax],al
   14004f757:	add    BYTE PTR [rbp-0x68],dh
   14004f75a:	add    BYTE PTR [rax],al
   14004f75c:	jae    0x14004f6f6
   14004f75e:	add    BYTE PTR [rax],al
   14004f760:	add    BYTE PTR [rax+rax*1],al
   14004f763:	add    BYTE PTR [rcx],al
   14004f765:	cld    
   14004f766:	(bad)  
   14004f767:	push   QWORD PTR [rip+0xb000000]        # 0x14b04f76d
   14004f76d:	add    BYTE PTR [rax],al
   14004f76f:	add    BYTE PTR [rax+0x0],al
   14004f772:	add    BYTE PTR [rax],al
   14004f774:	inc    DWORD PTR [rbx]
   14004f776:	add    BYTE PTR [rax],al
   14004f778:	add    BYTE PTR [rax],0x0
   14004f77b:	add    BYTE PTR [rcx+0x18ffffff],al
   14004f781:	add    BYTE PTR [rax],al
   14004f783:	add    BYTE PTR [rax],cl
   14004f785:	add    BYTE PTR [rax],al
   14004f787:	add    BYTE PTR [rax],ah
   14004f789:	add    BYTE PTR [rax],al
   14004f78b:	add    BYTE PTR [rdi+0x0],bh
	...
   14004f796:	add    BYTE PTR [rax],al
   14004f798:	add    BYTE PTR [rax+0x4002],ah
   14004f79e:	add    BYTE PTR [rax],al
   14004f7a0:	add    BYTE PTR [rax],al
   14004f7a2:	add    BYTE PTR [rax],al
   14004f7a4:	add    al,cl
   14004f7a6:	add    eax,0x40
   14004f7ab:	add    BYTE PTR [rax],al
   14004f7ad:	add    BYTE PTR [rax],al
   14004f7af:	add    BYTE PTR [rax],al
   14004f7b1:	cli    
   14004f7b2:	or     BYTE PTR [rax+0x0],al
   14004f7b5:	add    BYTE PTR [rax],al
   14004f7b7:	add    BYTE PTR [rax],al
   14004f7b9:	add    BYTE PTR [rax],al
   14004f7bb:	add    BYTE PTR [rax-0x64],al
   14004f7be:	or     al,0x40
	...
   14004f7c8:	push   rax
   14004f7c9:	ret    
   14004f7ca:	cmovo  eax,DWORD PTR [rax]
   14004f7cd:	add    BYTE PTR [rax],al
   14004f7cf:	add    BYTE PTR [rax],al
   14004f7d1:	add    BYTE PTR [rax],al
   14004f7d3:	add    BYTE PTR [rsp+rsi*8],ah
   14004f7d6:	adc    al,BYTE PTR [rax+0x0]
   14004f7d9:	add    BYTE PTR [rax],al
   14004f7db:	add    BYTE PTR [rax],al
   14004f7dd:	add    BYTE PTR [rax],al
   14004f7df:	adc    BYTE PTR [rsi+0x401698],0x0
   14004f7e6:	add    BYTE PTR [rax],al
   14004f7e8:	add    BYTE PTR [rax],al
   14004f7ea:	add    BYTE PTR [rax],ah
   14004f7ec:	mov    esp,0x4019be
   14004f7f1:	add    BYTE PTR [rax],al
   14004f7f3:	add    BYTE PTR [rax],al
   14004f7f5:	add    al,0xbf
   14004f7f7:	leave  
   14004f7f8:	sbb    ecx,DWORD PTR [rsi+0x4034]
   14004f7fe:	add    BYTE PTR [rcx+0x1bcecced],ah
   14004f804:	ret    0x4ed3
   14004f807:	and    al,sil
   14004f80a:	sahf   
   14004f80b:	mov    ch,0x70
   14004f80d:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   14004f813:	rex rcr BYTE PTR [rbp-0x3],1
   14004f817:	and    eax,0x4f8e1ae5
   14004f81c:	sbb    ebx,ebp
   14004f81e:	add    DWORD PTR [rax+0x71],0xffffff96
   14004f822:	xlat   BYTE PTR ds:[rbx]
   14004f823:	xchg   ebp,eax
   14004f824:	rex.XB (bad) 
   14004f826:	add    eax,0x9eaf298d
   14004f82b:	rex stc 
   14004f82d:	mov    edi,0x81ed44a0
   14004f832:	adc    cl,BYTE PTR [rdi+0x40b98281]
   14004f838:	mov    edi,0xcfa6d53c
   14004f83d:	dec    DWORD PTR [rcx+0x1f]
   14004f840:	js     0x14004f804
   14004f842:	rol    DWORD PTR [rax+0x6f],cl
   14004f845:	(bad)  
   14004f846:	loopne 0x14004f7d4
   14004f848:	jmp    0xfa4cc1cd
   14004f84d:	xchg   ebx,eax
   14004f84e:	test   al,0x41
   14004f850:	mov    esp,0x27556b85
   14004f855:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   14004f85b:	rex.X mov esp,0xf9de8edd
   14004f861:	popf   
   14004f862:	sti    
   14004f863:	jmp    0x14004f8e3
   14004f865:	stos   BYTE PTR es:[rdi],al
   14004f866:	push   rcx
   14004f867:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   14004f871:	and    DWORD PTR [rsi],0x17102844
   14004f877:	stos   BYTE PTR es:[rdi],al
   14004f878:	clc    
   14004f879:	scas   al,BYTE PTR es:[rdi]
   14004f87a:	adc    bl,ah
   14004f87c:	(bad)
   14004f87f:	rex.R jmp 0x14004f829
   14004f882:	(bad)  
   14004f883:	repz imul ebx
   14004f886:	loope  0x14004f8d2
   14004f888:	jp     0x14004f81f
   14004f88a:	iret   
   14004f88b:	rex.RB
   14004f88c:	gs int3 
   14004f88e:	(bad)  
   14004f88f:	xchg   ecx,eax
   14004f890:	(bad)  
   14004f891:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f892:	scas   al,BYTE PTR es:[rdi]
   14004f893:	movabs al,ds:0xc17650d46a3e319
   14004f89c:	jne    0x14004f81f
   14004f89e:	xchg   BYTE PTR [rbp+0x76],dh
   14004f8a1:	leave  
   14004f8a2:	rex.W
   14004f8a3:	rex.WRB pop r8
   14004f8a5:	rex.X in al,0xa7
   14004f8a8:	xchg   ebx,eax
   14004f8a9:	cmp    DWORD PTR [rbx],edi
   14004f8ab:	xor    eax,0x53edb2b8
   14004f8b0:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004f8b2:	in     eax,0x5d
   14004f8b4:	cmp    eax,0x8b3b5dc5
   14004f8b9:	sahf   
   14004f8ba:	xchg   edx,eax
   14004f8bb:	pop    rdx
   14004f8bc:	call   FWORD PTR [rbp-0x5a]
   14004f8bf:	lock movabs eax,ds:0xd161378ca554c020
   14004f8c9:	std    
   14004f8ca:	mov    ebx,DWORD PTR [rdx-0x75]
   14004f8cd:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11bfe8230
   14004f8d3:	stos   BYTE PTR es:[edi],al
   14004f8d5:	xchg   ebp,eax
   14004f8d6:	clc    
   14004f8d7:	repz (bad) 
   14004f8d9:	mov    edi,0xdd5dc8a2
   14004f8de:	sub    BYTE PTR [rsi+0x4c],0xc9
   14004f8e2:	fwait
   14004f8e3:	xchg   edi,eax
   14004f8e4:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   14004f8ea:	and    eax,0x75
   14004f8ef:	add    ch,cl
   14004f8f1:	int3   
   14004f8f2:	int    0xcc
   14004f8f4:	int3   
   14004f8f5:	int3   
   14004f8f6:	int3   
   14004f8f7:	int3   
   14004f8f8:	int3   
   14004f8f9:	int3   
   14004f8fa:	sti    
   14004f8fb:	(bad)  
   14004f8fc:	jno    0x14004f93b
   14004f8fe:	or     dl,bh
   14004f900:	movabs ds:0x5a3ff8a3d70a3d70,eax
   14004f909:	fs cmp ebx,edi
   14004f90c:	rex.WRXB lea r10,[r15-0xa7ced92]
   14004f913:	(bad)  
   14004f914:	ret    
   14004f915:	shr    DWORD PTR [riz*2+0x1758e219],cl
   14004f91c:	mov    bh,0xd1
   14004f91e:	icebp  
   14004f91f:	(bad)  
   14004f920:	ror    BYTE PTR [rdi],1
   14004f922:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   14004f929:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f92a:	out    dx,al
   14004f92b:	(bad)  
   14004f92c:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f92e:	mov    dh,0x69
   14004f930:	ins    BYTE PTR es:[rdi],dx
   14004f931:	scas   eax,DWORD PTR es:[rdi]
   14004f932:	add    eax,0xeb8637bd
   14004f937:	(bad)  
   14004f938:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x1257f3bfa
   14004f93e:	(bad)  
   14004f93f:	xchg   esp,eax
   14004f940:	mov    edi,0xc23fe7d6
   14004f945:	std    
   14004f946:	std    
   14004f947:	(bad)  
   14004f948:	(bad)  
   14004f949:	test   BYTE PTR [rcx],dl
   14004f94b:	ja     0x14004f919
   14004f94d:	stos   DWORD PTR es:[rdi],eax
   14004f94e:	in     al,0x3f
   14004f950:	(bad)  
   14004f951:	rex.WR pop rbx
   14004f953:	loope  0x14004f9a2
   14004f955:	(bad)  
   14004f956:	mov    esi,0xc9e69594
   14004f95b:	(bad)  
   14004f95c:	xchg   edx,eax
   14004f95d:	(bad)  
   14004f95e:	push   rbx
   14004f95f:	cmp    esi,DWORD PTR [rbp+0x44]
   14004f962:	int    0x14
   14004f964:	mov    esi,0xde3faf9a
   14004f969:	addr32 mov edx,0xad453994
   14004f96f:	(bad)  
   14004f970:	mov    cl,0xcf
   14004f972:	xchg   esp,eax
   14004f973:	(bad)  
   14004f974:	and    al,0x23
   14004f976:	(bad)  
   14004f977:	loop   0x14004f935
   14004f979:	mov    edx,0x8b61313b
   14004f97e:	jp     0x14004f9bf
   14004f980:	(bad)  
   14004f981:	push   rbp
   14004f982:	pop    rcx
   14004f983:	sar    DWORD PTR [rsi-0x4f],0x53
   14004f987:	jl     0x14004f99b
   14004f989:	mov    ebx,0xeed73f5f
   14004f98e:	(bad)  
   14004f98f:	lea    eax,[rsi]
   14004f991:	mov    esi,0xfb158592
   14004f996:	rex.R (bad) 
   14004f998:	and    al,0x3f
   14004f99a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f99b:	jmp    0x12a2c9ed9
   14004f9a0:	jg     0x14004f94a
   14004f9a2:	sub    bh,BYTE PTR [rdi]
   14004f9a4:	jge    0x14004f952
   14004f9a6:	movabs eax,ds:0x55ddd0467c64bce4
   14004f9af:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   14004f9b3:	int3   
   14004f9b4:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   14004f9b8:	call   QWORD PTR [rcx-0x56ec27f]
   14004f9be:	cmp    bl,BYTE PTR [rcx]
   14004f9c0:	jp     0x14004fa25
   14004f9c2:	and    eax,0xacc03143
   14004f9c7:	cmp    al,0x21
   14004f9c9:	mov    ecx,edx
   14004f9cb:	cmp    BYTE PTR [rdx+0xb89747],al
   14004f9d1:	std    
   14004f9d2:	xlat   BYTE PTR ds:[rbx]
   14004f9d3:	cmp    ebx,esp
   14004f9d5:	mov    BYTE PTR [rax+0x8],bl
   14004f9d8:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   14004f9de:	add    edi,DWORD PTR [rbx]
   14004f9e0:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   14004f9e8:	(bad)  
   14004f9e9:	fld    TBYTE PTR [rsi]
   14004f9eb:	cmp    dh,BYTE PTR [rbx]
   14004f9ed:	jno    0x14004fa0b
   14004f9ef:	shl    BYTE PTR [rbx],cl
   14004f9f1:	(bad)  [rdx]
   14004f9f3:	out    dx,al
   14004f9f4:	xchg   r8,rax
   14004f9f6:	pop    rdx
   14004f9f7:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   14004f9fd:	fisub  DWORD PTR [rbp-0x4a5d597e]
   14004fa03:	xor    ah,dl
   14004fa05:	push   0x52a711b2
   14004fa0a:	lahf   
   14004fa0b:	rex.R pop rcx
   14004fa0d:	mov    bh,0x10
   14004fa0f:	sub    al,0x25
   14004fa11:	rex.WB in al,0x2d
   14004fa14:	ss xor al,0x4f
   14004fa17:	push   rbx
   14004fa18:	scas   al,BYTE PTR es:[rdi]
   14004fa19:	(bad)  
   14004fa1a:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe40953b0
   14004fa21:	faddp  st(2),st
   14004fa23:	jge    0x14004fa20
   14004fa25:	call   0x127a318f0
   14004fa2a:	mov    BYTE PTR [rdx+0x57],bl
   14004fa2d:	xchg   ecx,eax
   14004fa2e:	cmp    al,0xbf
   14004fa30:	push   rax
   14004fa31:	and    DWORD PTR [rdx],0x18
   14004fa34:	rex.WRX
   14004fa35:	rex.WXB
   14004fa36:	gs (bad) 
   14004fa38:	std    
   14004fa39:	or     DWORD PTR [rdi+0x7d9406af],0x11
   14004fa40:	in     al,0x2d
   14004fa42:	ficomp WORD PTR [rdi+0x4c8d2ce]
   14004fa48:	frstor [rsi+0xad8]
	...

Disassembly of section .pdata:

0000000140054000 <.pdata>:
   140054000:	add    al,0x10
   140054002:	add    BYTE PTR [rax],al
   140054004:	jge    0x140054016
   140054006:	add    BYTE PTR [rax],al
   140054008:	pop    rax
   140054009:	rex.WRXB add al,0x0
   14005400c:	mov    WORD PTR [rax],ss
   14005400e:	add    BYTE PTR [rax],al
   140054010:	mov    dl,0x10
   140054012:	add    BYTE PTR [rax],al
   140054014:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054015:	rex.RB add al,0x0
   140054018:	rcl    BYTE PTR [rax],0x0
   14005401b:	add    dh,dh
   14005401d:	adc    BYTE PTR [rax],al
   14005401f:	add    BYTE PTR [rdx*2+0x11140004],bl
   140054026:	add    BYTE PTR [rax],al
   140054028:	mov    ss,WORD PTR [rcx]
   14005402a:	add    BYTE PTR [rax],al
   14005402c:	xor    al,0x4f
   14005402e:	add    al,0x0
   140054030:	nop
   140054031:	adc    DWORD PTR [rax],eax
   140054033:	add    bl,al
   140054035:	adc    DWORD PTR [rax],eax
   140054037:	add    BYTE PTR [rdi+rcx*2],dl
   14005403a:	add    al,0x0
   14005403c:	(bad)  
   14005403d:	adc    DWORD PTR [rax],eax
   14005403f:	add    ah,ah
   140054041:	adc    DWORD PTR [rax],eax
   140054043:	add    ah,dh
   140054045:	rex.WRX add al,0x0
   140054048:	in     al,dx
   140054049:	adc    DWORD PTR [rax],eax
   14005404b:	add    BYTE PTR [rcx+0x12],cl
   14005404e:	add    BYTE PTR [rax],al
   140054050:	int3   
   140054051:	rex.WRX add al,0x0
   140054054:	rex.WR adc r8b,BYTE PTR [rax]
   140054057:	add    BYTE PTR [rdi+0x12],bh
   14005405a:	add    BYTE PTR [rax],al
   14005405c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005405d:	rex.WRX add al,0x0
   140054060:	mov    BYTE PTR [rdx],dl
   140054062:	add    BYTE PTR [rax],al
   140054064:	add    dl,BYTE PTR [rbx]
   140054066:	add    BYTE PTR [rax],al
   140054068:	or     BYTE PTR [rsi+0x4],0x0
   14005406c:	add    al,0x13
   14005406e:	add    BYTE PTR [rax],al
   140054070:	rex.XB adc eax,DWORD PTR [r8]
   140054073:	add    ah,ah
   140054075:	(bad)  
   140054076:	add    al,0x0
   140054078:	push   rax
   140054079:	adc    eax,DWORD PTR [rax]
   14005407b:	add    BYTE PTR [rsi+0x13],dh
   14005407e:	add    BYTE PTR [rax],al
   140054080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054081:	rex.RB add al,0x0
   140054084:	js     0x140054099
   140054086:	add    BYTE PTR [rax],al
   140054088:	sub    edx,DWORD PTR [rax+rax*1]
   14005408b:	add    BYTE PTR [rcx+riz*2+0x4],cl
   14005408f:	add    BYTE PTR [rsp+rdx*1],ch
   140054092:	add    BYTE PTR [rax],al
   140054094:	pop    rdi
   140054095:	adc    al,0x0
   140054097:	add    BYTE PTR [rax+0x4e],ah
   14005409a:	add    al,0x0
   14005409c:	(bad)  
   14005409d:	adc    al,0x0
   14005409f:	add    BYTE PTR [rax+0x40000014],al
   1400540a5:	rex.WRX add al,0x0
   1400540a8:	adc    BYTE PTR [rax+rax*1],0x0
   1400540ac:	scas   al,BYTE PTR es:[rdi]
   1400540ad:	adc    al,0x0
   1400540af:	add    BYTE PTR [rsi+rax*4],al
   1400540b2:	add    al,0x0
   1400540b4:	mov    al,0x14
   1400540b6:	add    BYTE PTR [rax],al
   1400540b8:	call   0x1180540d2
   1400540bd:	rex.WRB add al,0x0
   1400540c0:	call   0x1a90540da
   1400540c5:	(bad)  
   1400540c6:	add    BYTE PTR [rax],al
   1400540c8:	test   al,0x4d
   1400540ca:	add    al,0x0
   1400540cc:	ins    BYTE PTR es:[rdi],dx
   1400540cd:	(bad)  
   1400540ce:	add    BYTE PTR [rax],al
   1400540d0:	or     dl,BYTE PTR [rdi]
   1400540d2:	add    BYTE PTR [rax],al
   1400540d4:	cwde   
   1400540d5:	rex.WRB add al,0x0
   1400540d8:	or     al,0x17
   1400540da:	add    BYTE PTR [rax],al
   1400540dc:	loope  0x1400540f9
   1400540de:	add    BYTE PTR [rax],al
   1400540e0:	pushf  
   1400540e1:	rex.WR add al,0x0
   1400540e4:	in     al,0x1b
   1400540e6:	add    BYTE PTR [rax],al
   1400540e8:	or     DWORD PTR [rax+rax*1],ebx
   1400540eb:	add    BYTE PTR [rsp+rcx*2+0x4],bh
   1400540ef:	add    BYTE PTR [rsp+rbx*1],cl
   1400540f2:	add    BYTE PTR [rax],al
   1400540f4:	mov    esi,0x4c00001f
   1400540f9:	rex.WXB add al,0x0
   1400540fc:	(bad)  
   1400540fd:	(bad)  
   1400540fe:	add    BYTE PTR [rax],al
   140054100:	out    dx,al
   140054101:	and    BYTE PTR [rax],al
   140054103:	add    ah,bh
   140054105:	movsxd eax,DWORD PTR [rax+rax*1]
   140054108:	lock and BYTE PTR [rax],al
   14005410b:	add    BYTE PTR [rsi],bl
   14005410d:	and    DWORD PTR [rax],eax
   14005410f:	add    BYTE PTR [rbp+rax*2+0x21200004],ah
   140054116:	add    BYTE PTR [rax],al
   140054118:	(bad)  
   140054119:	and    DWORD PTR [rax],eax
   14005411b:	add    BYTE PTR [rsi+rax*4],al
   14005411e:	add    al,0x0
   140054120:	cmp    BYTE PTR [rcx],ah
   140054122:	add    BYTE PTR [rax],al
   140054124:	cmp    BYTE PTR [rdx],ah
   140054126:	add    BYTE PTR [rax],al
   140054128:	xchg   esp,eax
   140054129:	movabs eax,ds:0x235b000022380004
   140054132:	add    BYTE PTR [rax],al
   140054134:	sub    BYTE PTR [rax+0x4],cl
   140054137:	add    BYTE PTR [rbx+riz*1+0x0],bl
   14005413b:	add    bh,dh
   14005413d:	and    eax,DWORD PTR [rax]
   14005413f:	add    ah,ah
   140054141:	(bad)  
   140054142:	add    al,0x0
   140054144:	clc    
   140054145:	and    eax,DWORD PTR [rax]
   140054147:	add    BYTE PTR [rip+0x38000025],dl        # 0x178054172
   14005414d:	rex.WX add al,0x0
   140054150:	and    al,0x25
   140054152:	add    BYTE PTR [rax],al
   140054154:	rex.WX and rax,0x45a40000
   14005415a:	add    al,0x0
   14005415c:	rex.WR and rax,0x257b0000
   140054162:	add    BYTE PTR [rax],al
   140054164:	in     al,0x61
   140054166:	add    al,0x0
   140054168:	jl     0x14005418f
   14005416a:	add    BYTE PTR [rax],al
   14005416c:	sub    al,0x26
   14005416e:	add    BYTE PTR [rax],al
   140054170:	int3   
   140054171:	rex.WRXB add al,0x0
   140054174:	sub    al,0x26
   140054176:	add    BYTE PTR [rax],al
   140054178:	cmp    esp,DWORD PTR [rdi]
   14005417a:	add    BYTE PTR [rax],al
   14005417c:	lock (bad) 
   14005417e:	add    al,0x0
   140054180:	cmp    al,0x27
   140054182:	add    BYTE PTR [rax],al
   140054184:	(bad)  
   140054185:	sub    DWORD PTR [rax],eax
   140054187:	add    BYTE PTR [rdi+rcx*2+0x29c80004],ah
   14005418e:	add    BYTE PTR [rax],al
   140054190:	out    0x2a,eax
   140054192:	add    BYTE PTR [rax],al
   140054194:	push   0xc00044f
   140054199:	sub    eax,DWORD PTR [rax]
   14005419b:	add    BYTE PTR [rdx],dh
   14005419d:	sub    eax,DWORD PTR [rax]
   14005419f:	add    BYTE PTR [rbp+rax*2+0x2b380004],ah
   1400541a6:	add    BYTE PTR [rax],al
   1400541a8:	jne    0x1400541d5
   1400541aa:	add    BYTE PTR [rax],al
   1400541ac:	cmp    al,0x50
   1400541ae:	add    al,0x0
   1400541b0:	js     0x1400541dd
   1400541b2:	add    BYTE PTR [rax],al
   1400541b4:	push   rsi
   1400541b5:	sub    al,0x0
   1400541b7:	add    BYTE PTR [rax+rdx*2],ah
   1400541ba:	add    al,0x0
   1400541bc:	pop    rax
   1400541bd:	sub    al,0x0
   1400541bf:	add    BYTE PTR [rdx+0x2d],bh
   1400541c2:	add    BYTE PTR [rax],al
   1400541c4:	or     al,0x50
   1400541c6:	add    al,0x0
   1400541c8:	jl     0x1400541f7
   1400541ca:	add    BYTE PTR [rax],al
   1400541cc:	hlt    
   1400541cd:	sub    eax,0x55140000
   1400541d2:	add    al,0x0
   1400541d4:	add    BYTE PTR [rsi],ch
   1400541d6:	add    BYTE PTR [rax],al
   1400541d8:	es add BYTE PTR cs:[rax],al
   1400541dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400541dd:	rex.RB add al,0x0
   1400541e0:	sub    BYTE PTR [rsi],ch
   1400541e2:	add    BYTE PTR [rax],al
   1400541e4:	scas   al,BYTE PTR es:[rdi]
   1400541e5:	add    BYTE PTR cs:[rax],al
   1400541e8:	sbb    al,0x55
   1400541ea:	add    al,0x0
   1400541ec:	mov    al,0x2e
   1400541ee:	add    BYTE PTR [rax],al
   1400541f0:	out    0x2e,al
   1400541f2:	add    BYTE PTR [rax],al
   1400541f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400541f5:	rex.RB add al,0x0
   1400541f8:	call   0xd205422b
   1400541fd:	(bad)  
   1400541fe:	add    BYTE PTR [rax],al
   140054200:	and    BYTE PTR [rdi+0x2f940004],al
   140054206:	add    BYTE PTR [rax],al
   140054208:	icebp  
   140054209:	(bad)  
   14005420a:	add    BYTE PTR [rax],al
   14005420c:	pop    rsp
   14005420d:	push   rbp
   14005420e:	add    al,0x0
   140054210:	hlt    
   140054211:	(bad)  
   140054212:	add    BYTE PTR [rax],al
   140054214:	div    BYTE PTR [rax]
   140054216:	add    BYTE PTR [rax],al
   140054218:	pushf  
   140054219:	push   rbp
   14005421a:	add    al,0x0
   14005421c:	clc    
   14005421d:	xor    BYTE PTR [rax],al
   14005421f:	add    BYTE PTR [rbx],bh
   140054221:	xor    DWORD PTR [rax],eax
   140054223:	add    BYTE PTR [rdx*2+0x313c0004],dh
   14005422a:	add    BYTE PTR [rax],al
   14005422c:	iret   
   14005422d:	xor    DWORD PTR [rax],eax
   14005422f:	add    BYTE PTR [rdx*2+0x31d00004],ah
   140054236:	add    BYTE PTR [rax],al
   140054238:	push   QWORD PTR [rcx]
   14005423a:	add    BYTE PTR [rax],al
   14005423c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005423d:	rex.RB add al,0x0
   140054240:	add    BYTE PTR [rdx],dh
   140054242:	add    BYTE PTR [rax],al
   140054244:	sub    dh,BYTE PTR [rdx]
   140054246:	add    BYTE PTR [rax],al
   140054248:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054249:	rex.RB add al,0x0
   14005424c:	sub    al,0x32
   14005424e:	add    BYTE PTR [rax],al
   140054250:	outs   dx,DWORD PTR ds:[rsi]
   140054251:	xor    eax,DWORD PTR [rax]
   140054253:	add    BYTE PTR [rax+0x70000454],bl
   140054259:	xor    eax,DWORD PTR [rax]
   14005425b:	add    dh,ah
   14005425d:	xor    eax,DWORD PTR [rax]
   14005425f:	add    BYTE PTR [rax],ch
   140054261:	rex.W add al,0x0
   140054264:	call   0x12205429c
   140054269:	xor    al,0x0
   14005426b:	add    BYTE PTR [rsp+rdx*2],bl
   14005426e:	add    al,0x0
   140054270:	in     al,0x34
   140054272:	add    BYTE PTR [rax],al
   140054274:	adc    DWORD PTR [rsi],esi
   140054276:	add    BYTE PTR [rax],al
   140054278:	sub    BYTE PTR [rax+0x4],cl
   14005427b:	add    BYTE PTR [rsi+rsi*1],dl
   14005427e:	add    BYTE PTR [rax],al
   140054280:	adc    eax,0x4000037
   140054285:	push   rsp
   140054286:	add    al,0x0
   140054288:	sbb    BYTE PTR [rdi],dh
   14005428a:	add    BYTE PTR [rax],al
   14005428c:	push   rdi
   14005428d:	cmp    BYTE PTR [rax],al
   14005428f:	add    BYTE PTR [rax],bh
   140054291:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054292:	add    al,0x0
   140054294:	pop    rax
   140054295:	cmp    BYTE PTR [rax],al
   140054297:	add    BYTE PTR [rip+0xffffffff88000039],cl        # 0xc80542d6
   14005429d:	push   rbx
   14005429e:	add    al,0x0
   1400542a0:	adc    BYTE PTR [rcx],bh
   1400542a2:	add    BYTE PTR [rax],al
   1400542a4:	sti    
   1400542a5:	cmp    DWORD PTR [rax],eax
   1400542a7:	add    BYTE PTR [rax],cl
   1400542a9:	push   rbx
   1400542aa:	add    al,0x0
   1400542ac:	cld    
   1400542ad:	cmp    DWORD PTR [rax],eax
   1400542af:	add    BYTE PTR [rdx+rdi*1-0x5e6c0000],ch
   1400542b6:	add    al,0x0
   1400542b8:	lods   al,BYTE PTR ds:[rsi]
   1400542b9:	cmp    al,BYTE PTR [rax]
   1400542bb:	add    cl,ah
   1400542bd:	cmp    eax,DWORD PTR [rax]
   1400542bf:	add    ah,dh
   1400542c1:	push   rcx
   1400542c2:	add    al,0x0
   1400542c4:	in     al,0x3b
   1400542c6:	add    BYTE PTR [rax],al
   1400542c8:	push   rbp
   1400542c9:	cmp    al,0x0
   1400542cb:	add    BYTE PTR [rax+0x51],bl
   1400542ce:	add    al,0x0
   1400542d0:	pop    rax
   1400542d1:	cmp    al,0x0
   1400542d3:	add    BYTE PTR [rcx],al
   1400542d5:	cmp    eax,0x51200000
   1400542da:	add    al,0x0
   1400542dc:	add    al,0x3d
   1400542de:	add    BYTE PTR [rax],al
   1400542e0:	pop    rbx
   1400542e1:	cmp    eax,0x50a80000
   1400542e6:	add    al,0x0
   1400542e8:	pop    rsp
   1400542e9:	cmp    eax,0x3df00000
   1400542ee:	add    BYTE PTR [rax],al
   1400542f0:	pop    rsp
   1400542f1:	push   rax
   1400542f2:	add    al,0x0
   1400542f4:	lock cmp eax,0x3e620000
   1400542fa:	add    BYTE PTR [rax],al
   1400542fc:	rcl    BYTE PTR [rdi+0x4],1
   1400542ff:	add    BYTE PTR [rsi+rdi*1+0x0],ah
   140054303:	add    BYTE PTR [rsi+0x3e],bh
   140054306:	add    BYTE PTR [rax],al
   140054308:	add    al,0x86
   14005430a:	add    al,0x0
   14005430c:	cmp    BYTE PTR [rsi],0x0
   14005430f:	add    BYTE PTR [rsi+0x400003e],bl
   140054315:	xchg   BYTE PTR [rax+rax*1],al
   140054318:	movabs al,ds:0xb400003fab00003e
   140054321:	push   rdi
   140054322:	add    al,0x0
   140054324:	lods   al,BYTE PTR ds:[rsi]
   140054325:	(bad)  
   140054326:	add    BYTE PTR [rax],al
   140054328:	mov    bh,0x40
   14005432a:	add    BYTE PTR [rax],al
   14005432c:	cwde   
   14005432d:	push   rdi
   14005432e:	add    al,0x0
   140054330:	mov    esp,0xb6000040
   140054335:	add    BYTE PTR [r8],al
   140054338:	adc    BYTE PTR [rdi+0x4],0x0
   14005433c:	mov    eax,0xeb000041
   140054341:	add    BYTE PTR [r8],al
   140054344:	push   0xffffffffec000457
   140054349:	add    BYTE PTR [r8],al
   14005434c:	mov    edi,0xb8000044
   140054351:	push   rsi
   140054352:	add    al,0x0
   140054354:	rol    BYTE PTR [rax+rax*1+0x0],0x81
   140054359:	rex.RXB add BYTE PTR [r8],r8b
   14005435c:	add    al,0x56
   14005435e:	add    al,0x0
   140054360:	test   BYTE PTR [rdi+0x0],al
   140054363:	add    BYTE PTR [rsi+0x48],bl
   140054366:	add    BYTE PTR [rax],al
   140054368:	fcom   QWORD PTR [rdi+0x4]
   14005436b:	add    BYTE PTR [rax+0x48],ah
   14005436e:	add    BYTE PTR [rax],al
   140054370:	mov    bl,0x48
   140054372:	add    BYTE PTR [rax],al
   140054374:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054375:	xchg   esi,eax
   140054376:	add    al,0x0
   140054378:	mov    ah,0x48
   14005437a:	add    BYTE PTR [rax],al
   14005437c:	(bad)  
   14005437d:	rex.WB add BYTE PTR [r8],al
   140054380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054381:	xchg   esi,eax
   140054382:	add    al,0x0
   140054384:	or     BYTE PTR [rcx+0x0],cl
   140054387:	add    ch,ah
   140054389:	rex.WB add BYTE PTR [r8],al
   14005438c:	sub    al,0x58
   14005438e:	add    al,0x0
   140054390:	call   0x11a0543de
   140054395:	rex.WX add BYTE PTR [rax],al
   140054398:	cld    
   140054399:	movsxd eax,DWORD PTR [rax+rax*1]
   14005439c:	fmul   QWORD PTR [rdx+0x0]
   14005439f:	add    dh,dh
   1400543a1:	rex.WX add BYTE PTR [rax],al
   1400543a4:	add    al,0x86
   1400543a6:	add    al,0x0
   1400543a8:	clc    
   1400543a9:	rex.WX add BYTE PTR [rax],al
   1400543ac:	cmovl  eax,DWORD PTR [rax]
   1400543af:	add    ah,ch
   1400543b1:	push   rbp
   1400543b2:	add    al,0x0
   1400543b4:	adc    BYTE PTR [rax+rax*1+0x0],cl
   1400543b8:	ret    0x4c
   1400543bb:	add    ah,ah
   1400543bd:	(bad)  
   1400543be:	add    al,0x0
   1400543c0:	(bad)  
   1400543c1:	rex.WR add BYTE PTR [rax],r8b
   1400543c4:	jbe    0x140054413
   1400543c6:	add    BYTE PTR [rax],al
   1400543c8:	in     al,0x61
   1400543ca:	add    al,0x0
   1400543cc:	js     0x14005441b
   1400543ce:	add    BYTE PTR [rax],al
   1400543d0:	xor    eax,0x7800004f
   1400543d5:	pop    rax
   1400543d6:	add    al,0x0
   1400543d8:	cmp    BYTE PTR [rdi+0x0],cl
   1400543db:	add    BYTE PTR [rbp+0x51],bh
   1400543de:	add    BYTE PTR [rax],al
   1400543e0:	xchg   esp,eax
   1400543e1:	pop    rax
   1400543e2:	add    al,0x0
   1400543e4:	adc    BYTE PTR [rcx+0x0],0x0
   1400543e8:	test   al,0x52
   1400543ea:	add    BYTE PTR [rax],al
   1400543ec:	fs pop rax
   1400543ee:	add    al,0x0
   1400543f0:	test   al,0x52
   1400543f2:	add    BYTE PTR [rax],al
   1400543f4:	retf   0x52
   1400543f7:	add    BYTE PTR [rax+rbx*2+0x4],al
   1400543fb:	add    ah,cl
   1400543fd:	push   rdx
   1400543fe:	add    BYTE PTR [rax],al
   140054400:	sbb    BYTE PTR [rbx+0x0],dl
   140054403:	add    BYTE PTR [rsi+rax*4],al
   140054406:	add    al,0x0
   140054408:	sbb    BYTE PTR [rbx+0x0],dl
   14005440b:	add    BYTE PTR [rdx-0x47ffffab],dh
   140054411:	pop    rax
   140054412:	add    al,0x0
   140054414:	mov    ah,0x55
   140054416:	add    BYTE PTR [rax],al
   140054418:	push   r14
   14005441a:	add    BYTE PTR [rax],al
   14005441c:	sub    BYTE PTR [rax+0x4],cl
   14005441f:	add    BYTE PTR [rsi+rdx*2+0x0],al
   140054423:	add    BYTE PTR [rdx+0x56],ch
   140054426:	add    BYTE PTR [rax],al
   140054428:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054429:	rex.RB add al,0x0
   14005442c:	js     0x140054484
   14005442e:	add    BYTE PTR [rax],al
   140054430:	adc    al,0x57
   140054432:	add    BYTE PTR [rax],al
   140054434:	push   rsp
   140054435:	pop    rcx
   140054436:	add    al,0x0
   140054438:	adc    al,0x57
   14005443a:	add    BYTE PTR [rax],al
   14005443c:	mov    WORD PTR [rdi+0x0],ss
   14005443f:	add    BYTE PTR [rax],ch
   140054441:	pop    rcx
   140054442:	add    al,0x0
   140054444:	mov    WORD PTR [rdi+0x0],ss
   140054447:	add    BYTE PTR [rdx+0x10000057],bh
   14005444d:	pop    rcx
   14005444e:	add    al,0x0
   140054450:	mov    esp,0x92000057
   140054455:	pop    rax
   140054456:	add    BYTE PTR [rax],al
   140054458:	sub    BYTE PTR [rax+0x4],cl
   14005445b:	add    BYTE PTR [rax+rbx*2+0x592a0000],dl
   140054462:	add    BYTE PTR [rax],al
   140054464:	fcomp  DWORD PTR [rax+0x4]
   140054467:	add    BYTE PTR [rcx+rbx*2],ch
   14005446a:	add    BYTE PTR [rax],al
   14005446c:	or     eax,0x2000005a
   140054471:	xchg   DWORD PTR [rax+rax*1],eax
   140054474:	adc    BYTE PTR [rdx+0x0],bl
   140054477:	add    BYTE PTR [rax],dh
   140054479:	pop    rdx
   14005447a:	add    BYTE PTR [rax],al
   14005447c:	add    al,0x86
   14005447e:	add    al,0x0
   140054480:	xor    BYTE PTR [rdx+0x0],bl
   140054483:	add    dh,bl
   140054485:	pop    rdx
   140054486:	add    BYTE PTR [rax],al
   140054488:	sub    BYTE PTR [rax+0x4],cl
   14005448b:	add    al,ah
   14005448d:	pop    rdx
   14005448e:	add    BYTE PTR [rax],al
   140054490:	adc    DWORD PTR [rax+rax*1+0x0],ebx
   140054494:	in     al,0x88
   140054496:	add    al,0x0
   140054498:	adc    al,0x5c
   14005449a:	add    BYTE PTR [rax],al
   14005449c:	pop    rax
   14005449d:	pop    rbp
   14005449e:	add    BYTE PTR [rax],al
   1400544a0:	cmp    BYTE PTR [rsi+0x5d580004],ah
   1400544a6:	add    BYTE PTR [rax],al
   1400544a8:	addr32 pop rbp
   1400544aa:	add    BYTE PTR [rax],al
   1400544ac:	add    al,0x86
   1400544ae:	add    al,0x0
   1400544b0:	push   0xffffffffc600005d
   1400544b5:	pop    rbp
   1400544b6:	add    BYTE PTR [rax],al
   1400544b8:	add    al,0x86
   1400544ba:	add    al,0x0
   1400544bc:	enter  0x5d,0x0
   1400544c0:	outs   dx,BYTE PTR ds:[rsi]
   1400544c1:	pop    rsi
   1400544c2:	add    BYTE PTR [rax],al
   1400544c4:	cmp    BYTE PTR [rsi+0x5e700004],ah
   1400544ca:	add    BYTE PTR [rax],al
   1400544cc:	mov    ebx,0xa400005e
   1400544d1:	rex.RB add al,0x0
   1400544d4:	mov    esp,0x7800005e
   1400544d9:	pop    rdi
   1400544da:	add    BYTE PTR [rax],al
   1400544dc:	or     BYTE PTR [rdx+0x4],bl
   1400544df:	add    BYTE PTR [rax+0x5f],bh
   1400544e2:	add    BYTE PTR [rax],al
   1400544e4:	adc    eax,0x18000060
   1400544e9:	pop    rdx
   1400544ea:	add    al,0x0
   1400544ec:	sbb    BYTE PTR [rax+0x0],ah
   1400544ef:	add    BYTE PTR [rdi+0x60],bl
   1400544f2:	add    BYTE PTR [rax],al
   1400544f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400544f5:	rex.RB add al,0x0
   1400544f8:	(bad)  
   1400544f9:	(bad)  
   1400544fa:	add    BYTE PTR [rax],al
   1400544fc:	jbe    0x14005455e
   1400544fe:	add    BYTE PTR [rax],al
   140054500:	add    al,0x3f
   140054502:	add    al,0x0
   140054504:	js     0x140054566
   140054506:	add    BYTE PTR [rax],al
   140054508:	mov    fs,WORD PTR [rax+0x0]
   14005450b:	add    BYTE PTR [rdi+rdi*1],al
   14005450e:	add    al,0x0
   140054510:	nop
   140054511:	(bad)  
   140054512:	add    BYTE PTR [rax],al
   140054514:	mov    dl,0x61
   140054516:	add    BYTE PTR [rax],al
   140054518:	sub    BYTE PTR [rbp+0x61b40004],bl
   14005451e:	add    BYTE PTR [rax],al
   140054520:	sub    DWORD PTR [rbx+0x0],esp
   140054523:	add    BYTE PTR [rax],bh
   140054525:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054526:	add    al,0x0
   140054528:	sub    al,0x63
   14005452a:	add    BYTE PTR [rax],al
   14005452c:	sub    esp,DWORD PTR [rax+rax*1+0x0]
   140054530:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054531:	pop    rdx
   140054532:	add    al,0x0
   140054534:	sub    al,0x64
   140054536:	add    BYTE PTR [rax],al
   140054538:	pop    rbp
   140054539:	add    BYTE PTR gs:[rax],al
   14005453c:	in     al,0x88
   14005453e:	add    al,0x0
   140054540:	(bad)  
   140054541:	add    BYTE PTR gs:[rax],al
   140054544:	add    BYTE PTR [rsi+0x0],ah
   140054547:	add    BYTE PTR [rax],ch
   140054549:	pop    rdx
   14005454a:	add    al,0x0
   14005454c:	add    BYTE PTR [rsi+0x0],ah
   14005454f:	add    BYTE PTR [rsi],ah
   140054551:	data16 add BYTE PTR [rax],al
   140054554:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054555:	rex.RB add al,0x0
   140054558:	sub    BYTE PTR [rsi+0x0],ah
   14005455b:	add    BYTE PTR [rbx+0x14000067],bl
   140054561:	movabs al,ds:0x67fa0000679c0004
   14005456a:	add    BYTE PTR [rax],al
   14005456c:	in     al,0x61
   14005456e:	add    al,0x0
   140054570:	cld    
   140054571:	add    BYTE PTR [eax],al
   140054574:	sub    BYTE PTR [rcx+0x0],ch
   140054577:	add    ah,ah
   140054579:	(bad)  
   14005457a:	add    al,0x0
   14005457c:	sub    BYTE PTR [rcx+0x0],0x0
   140054580:	jno    0x1400545ec
   140054582:	add    BYTE PTR [rax],al
   140054584:	and    BYTE PTR [rbx+0x4],bl
   140054587:	add    BYTE PTR [rdx+rbp*2+0x0],dh
   14005458b:	add    BYTE PTR [rbx+rbp*2],bh
   14005458e:	add    BYTE PTR [rax],al
   140054590:	sub    al,0x5b
   140054592:	add    al,0x0
   140054594:	cmp    al,0x6b
   140054596:	add    BYTE PTR [rax],al
   140054598:	jns    0x140054605
   14005459a:	add    BYTE PTR [rax],al
   14005459c:	rex.W pop rsp
   14005459e:	add    al,0x0
   1400545a0:	jl     0x14005460d
   1400545a2:	add    BYTE PTR [rax],al
   1400545a4:	xchg   edi,eax
   1400545a5:	imul   eax,DWORD PTR [rax],0x0
   1400545a8:	xor    BYTE PTR [rsp+rax*1+0x0],bl
   1400545ac:	cwde   
   1400545ad:	imul   eax,DWORD PTR [rax],0x0
   1400545b0:	(bad)  
   1400545b1:	imul   eax,DWORD PTR [rax],0x0
   1400545b4:	add    al,0x5c
   1400545b6:	add    al,0x0
   1400545b8:	fsubr  DWORD PTR [rbx+0x0]
   1400545bb:	add    bl,dh
   1400545bd:	imul   eax,DWORD PTR [rax],0x0
   1400545c0:	in     al,dx
   1400545c1:	pop    rbx
   1400545c2:	add    al,0x0
   1400545c4:	hlt    
   1400545c5:	imul   eax,DWORD PTR [rax],0x0
   1400545c8:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400545cc:	add    al,0x86
   1400545ce:	add    al,0x0
   1400545d0:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400545d4:	rex.WB ins BYTE PTR es:[rdi],dx
   1400545d6:	add    BYTE PTR [rax],al
   1400545d8:	lods   al,BYTE PTR ds:[rsi]
   1400545d9:	pop    rbx
   1400545da:	add    al,0x0
   1400545dc:	rex.WR ins BYTE PTR es:[rdi],dx
   1400545de:	add    BYTE PTR [rax],al
   1400545e0:	jnp    0x14005464e
   1400545e2:	add    BYTE PTR [rax],al
   1400545e4:	jl     0x140054641
   1400545e6:	add    al,0x0
   1400545e8:	jl     0x140054656
   1400545ea:	add    BYTE PTR [rax],al
   1400545ec:	(bad)  
   1400545ed:	ins    DWORD PTR es:[rdi],dx
   1400545ee:	add    BYTE PTR [rax],al
   1400545f0:	in     al,0x5d
   1400545f2:	add    al,0x0
   1400545f4:	(bad)  
   1400545f5:	ins    DWORD PTR es:[rdi],dx
   1400545f6:	add    BYTE PTR [rax],al
   1400545f8:	in     al,dx
   1400545f9:	outs   dx,DWORD PTR ds:[rsi]
   1400545fa:	add    BYTE PTR [rax],al
   1400545fc:	fs pop rsp
   1400545fe:	add    al,0x0
   140054600:	in     al,dx
   140054601:	outs   dx,DWORD PTR ds:[rsi]
   140054602:	add    BYTE PTR [rax],al
   140054604:	(bad)  
   140054605:	jb     0x140054607
   140054607:	add    BYTE PTR [rax+0x5f],dl
   14005460a:	add    al,0x0
   14005460c:	pushf  
   14005460d:	jb     0x14005460f
   14005460f:	add    bl,ch
   140054611:	jae    0x140054613
   140054613:	add    BYTE PTR [rax+riz*2+0x4],al
   140054617:	add    ah,ch
   140054619:	jae    0x14005461b
   14005461b:	add    BYTE PTR [rsi],al
   14005461d:	jne    0x14005461f
   14005461f:	add    BYTE PTR [rax],ch
   140054621:	pop    rbp
   140054622:	add    al,0x0
   140054624:	or     BYTE PTR [rbp+0x0],dh
   140054627:	add    BYTE PTR [rbx+0x77],ch
   14005462a:	add    BYTE PTR [rax],al
   14005462c:	pop    rsp
   14005462d:	pop    rsi
   14005462e:	add    al,0x0
   140054630:	ins    BYTE PTR es:[rdi],dx
   140054631:	ja     0x140054633
   140054633:	add    BYTE PTR [rbp+0x54000077],dh
   140054639:	pop    rbx
   14005463a:	add    al,0x0
   14005463c:	mov    eax,0x68000077
   140054641:	js     0x140054643
   140054643:	add    BYTE PTR [rax+0x5b],cl
   140054646:	add    al,0x0
   140054648:	push   0xffffffffae000078
   14005464d:	js     0x14005464f
   14005464f:	add    BYTE PTR [rbp+rax*2+0x78b00004],ah
   140054656:	add    BYTE PTR [rax],al
   140054658:	adc    bh,BYTE PTR [rcx+0x0]
   14005465b:	add    ah,ah
   14005465d:	(bad)  
   14005465e:	add    al,0x0
   140054660:	adc    al,0x79
   140054662:	add    BYTE PTR [rax],al
   140054664:	rex.X jp 0x140054667
   140054667:	add    BYTE PTR [rax],cl
   140054669:	(bad)  
   14005466a:	add    al,0x0
   14005466c:	rex.R jp 0x14005466f
   14005466f:	add    bh,ch
   140054671:	jp     0x140054673
   140054673:	add    BYTE PTR [rcx+riz*2+0x4],cl
   140054677:	add    al,dh
   140054679:	jp     0x14005467b
   14005467b:	add    BYTE PTR [rdx+0x4000007b],ch
   140054681:	(bad)  
   140054682:	add    al,0x0
   140054684:	lods   al,BYTE PTR ds:[rsi]
   140054685:	jnp    0x140054687
   140054687:	add    BYTE PTR [rcx],ch
   140054689:	jl     0x14005468b
   14005468b:	add    BYTE PTR [rdi+rdi*1],al
   14005468e:	add    al,0x0
   140054690:	sub    al,0x7c
   140054692:	add    BYTE PTR [rax],al
   140054694:	cmp    DWORD PTR [rcx+0x61580000],eax
   14005469a:	add    al,0x0
   14005469c:	cmp    al,0x81
   14005469e:	add    BYTE PTR [rax],al
   1400546a0:	imul   eax,DWORD PTR [rcx+0x61e40000],0x4
   1400546a7:	add    BYTE PTR [rcx+rax*4+0x0],ch
   1400546ab:	add    BYTE PTR [rbx+0x4000081],dl
   1400546b1:	xchg   BYTE PTR [rax+rax*1],al
   1400546b4:	xchg   esp,eax
   1400546b5:	add    DWORD PTR [rax],0x820900
   1400546bb:	add    BYTE PTR [rdx*2-0x7df3fffc],dl
   1400546c2:	add    BYTE PTR [rax],al
   1400546c4:	jl     0x140054648
   1400546c6:	add    BYTE PTR [rax],al
   1400546c8:	call   0x1bc054b30
   1400546cd:	(bad)  
   1400546ce:	add    BYTE PTR [rax],al
   1400546d0:	jg     0x140054655
   1400546d2:	add    BYTE PTR [rax],al
   1400546d4:	in     al,0x61
   1400546d6:	add    al,0x0
   1400546d8:	mov    BYTE PTR [rbx-0x7b4b0000],al
   1400546de:	add    BYTE PTR [rax],al
   1400546e0:	jo     0x140054745
   1400546e2:	add    al,0x0
   1400546e4:	mov    eax,0x1f000084
   1400546e9:	test   DWORD PTR [rax],eax
   1400546eb:	add    BYTE PTR [rbx+riz*2],dl
   1400546ee:	add    al,0x0
   1400546f0:	and    BYTE PTR [rbp-0x74fa0000],al
   1400546f6:	add    BYTE PTR [rax],al
   1400546f8:	adc    al,0x62
   1400546fa:	add    al,0x0
   1400546fc:	or     BYTE PTR [rbx-0x74d60000],cl
   140054702:	add    BYTE PTR [rax],al
   140054704:	add    al,0x86
   140054706:	add    al,0x0
   140054708:	sub    al,0x8b
   14005470a:	add    BYTE PTR [rax],al
   14005470c:	mov    eax,DWORD PTR [eax]
   14005470f:	add    BYTE PTR [rbp+rax*2-0x7497fffc],ah
   140054716:	add    BYTE PTR [rax],al
   140054718:	cwde   
   140054719:	mov    eax,DWORD PTR [rax]
   14005471b:	add    BYTE PTR [rsi+rax*4],al
   14005471e:	add    al,0x0
   140054720:	cwde   
   140054721:	mov    eax,DWORD PTR [rax]
   140054723:	add    cl,bh
   140054725:	mov    WORD PTR [rax],es
   140054727:	add    BYTE PTR [rdx+riz*2],al
   14005472a:	add    al,0x0
   14005472c:	cld    
   14005472d:	mov    WORD PTR [rax],es
   14005472f:	add    BYTE PTR [rbx-0xfffff72],cl
   140054735:	(bad)  
   140054736:	add    al,0x0
   140054738:	mov    WORD PTR [rsi-0x71410000],cs
   14005473e:	add    BYTE PTR [rax],al
   140054740:	in     al,0x61
   140054742:	add    al,0x0
   140054744:	or     al,0x8f
   140054746:	add    BYTE PTR [rax],al
   140054748:	rex.RB pop QWORD PTR [r8]
   14005474b:	add    BYTE PTR [rsi+rax*4],al
   14005474e:	add    al,0x0
   140054750:	push   rax
   140054751:	pop    QWORD PTR [rax]
   140054753:	add    BYTE PTR [rcx+0x400008f],cl
   140054759:	xchg   BYTE PTR [rax+rax*1],al
   14005475c:	xchg   esp,eax
   14005475d:	pop    QWORD PTR [rax]
   14005475f:	add    ch,cl
   140054761:	pop    QWORD PTR [rax]
   140054763:	add    BYTE PTR [rsi+rax*4],al
   140054766:	add    al,0x0
   140054768:	cld    
   140054769:	pop    QWORD PTR [rax]
   14005476b:	add    BYTE PTR [rax],ch
   14005476d:	nop
   14005476e:	add    BYTE PTR [rax],al
   140054770:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054771:	rex.RB add al,0x0
   140054774:	sub    BYTE PTR [rax-0x6f260000],dl
   14005477a:	add    BYTE PTR [rax],al
   14005477c:	test   al,0x61
   14005477e:	add    al,0x0
   140054780:	fcom   QWORD PTR [rax-0x6ea80000]
   140054786:	add    BYTE PTR [rax],al
   140054788:	and    BYTE PTR [rcx+0x4],0x0
   14005478c:	pop    rax
   14005478d:	xchg   ecx,eax
   14005478e:	add    BYTE PTR [rax],al
   140054790:	mov    ss,WORD PTR [rcx-0x79fc0000]
   140054796:	add    al,0x0
   140054798:	nop
   140054799:	xchg   ecx,eax
   14005479a:	add    BYTE PTR [rax],al
   14005479c:	mov    bh,0x91
   14005479e:	add    BYTE PTR [rax],al
   1400547a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400547a1:	rex.RB add al,0x0
   1400547a4:	mov    eax,0x43000091
   1400547a9:	xchg   edx,eax
   1400547aa:	add    BYTE PTR [rax],al
   1400547ac:	hlt    
   1400547ad:	rex.XB add al,0x0
   1400547b0:	rex.R xchg edx,eax
   1400547b2:	add    BYTE PTR [rax],al
   1400547b4:	ja     0x140054748
   1400547b6:	add    BYTE PTR [rax],al
   1400547b8:	int3   
   1400547b9:	push   0xffffffff92780004
   1400547be:	add    BYTE PTR [rax],al
   1400547c0:	cwde   
   1400547c1:	xchg   edx,eax
   1400547c2:	add    BYTE PTR [rax],al
   1400547c4:	lods   al,BYTE PTR ds:[rsi]
   1400547c5:	push   0xffffffff92980004
   1400547ca:	add    BYTE PTR [rax],al
   1400547cc:	sbb    dl,BYTE PTR [rbx+0x55240000]
   1400547d2:	add    al,0x0
   1400547d4:	sbb    al,0x93
   1400547d6:	add    BYTE PTR [rax],al
   1400547d8:	mov    BYTE PTR [rsi+0x6b540000],bl
   1400547de:	add    al,0x0
   1400547e0:	mov    BYTE PTR [rsi-0x61490000],bl
   1400547e6:	add    BYTE PTR [rax],al
   1400547e8:	in     al,0x61
   1400547ea:	add    al,0x0
   1400547ec:	mov    eax,0xdd00009e
   1400547f1:	movabs eax,ds:0xa1e0000466740000
   1400547fa:	add    BYTE PTR [rax],al
   1400547fc:	mov    cl,0xa3
   1400547fe:	add    BYTE PTR [rax],al
   140054800:	sbb    BYTE PTR [rsi+0x4],ah
   140054803:	add    al,al
   140054805:	movabs ds:0x6a380000ad3b0000,eax
   14005480e:	add    al,0x0
   140054810:	cmp    al,0xad
   140054812:	add    BYTE PTR [rax],al
   140054814:	push   rax
   140054815:	mov    al,0x0
   140054817:	add    BYTE PTR [rbp+riz*2-0x4faffffc],dl
   14005481e:	add    BYTE PTR [rax],al
   140054820:	rex.WX mov cl,0x0
   140054823:	add    BYTE PTR [rax+0x4c000465],al
   140054829:	mov    cl,0x0
   14005482b:	add    BYTE PTR [rbp+0x380000b5],bh
   140054831:	imul   eax,DWORD PTR [rax+rax*1],0xb5c0
   140054838:	stc    
   140054839:	mov    eax,0x68ec0000
   14005483e:	add    al,0x0
   140054840:	cld    
   140054841:	mov    eax,0xb9520000
   140054846:	add    BYTE PTR [rax],al
   140054848:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054849:	rex.RB add al,0x0
   14005484c:	push   rsp
   14005484d:	mov    ecx,0xb96f0000
   140054852:	add    BYTE PTR [rax],al
   140054854:	(bad)  
   140054855:	gs add al,0x0
   140054858:	jo     0x140054813
   14005485a:	add    BYTE PTR [rax],al
   14005485c:	sar    BYTE PTR [rsi+0x650c0000],0x4
   140054863:	add    al,al
   140054865:	mov    esi,0xbf690000
   14005486a:	add    BYTE PTR [rax],al
   14005486c:	xchg   esp,eax
   14005486d:	movabs eax,ds:0xc1910000bf6c0004
   140054876:	add    BYTE PTR [rax],al
   140054878:	cwde   
   140054879:	fs add al,0x0
   14005487c:	xchg   esp,eax
   14005487d:	rol    DWORD PTR [rax],0x0
   140054880:	ret    0xc2
   140054883:	add    BYTE PTR [rax+0x64],bl
   140054886:	add    al,0x0
   140054888:	(bad)
   14005488c:	xor    al,bl
   14005488e:	add    BYTE PTR [rax],al
   140054890:	cmp    BYTE PTR [rsi-0x3ccbfffc],ah
   140054896:	add    BYTE PTR [rax],al
   140054898:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054899:	ret    
   14005489a:	add    BYTE PTR [rax],al
   14005489c:	cmp    BYTE PTR [rsi-0x3c5bfffc],ah
   1400548a2:	add    BYTE PTR [rax],al
   1400548a4:	(bad)  
   1400548a5:	mov    BYTE PTR [rax],0x0
   1400548a8:	adc    al,0x64
   1400548aa:	add    al,0x0
   1400548ac:	(bad)  
   1400548ad:	mov    BYTE PTR [rax],0x0
   1400548b0:	jns    0x14005487a
   1400548b2:	add    BYTE PTR [rax],al
   1400548b4:	cmp    BYTE PTR [rsi-0x3783fffc],ah
   1400548ba:	add    BYTE PTR [rax],al
   1400548bc:	mov    ecx,cs
   1400548be:	add    BYTE PTR [rax],al
   1400548c0:	add    BYTE PTR [rsi+0x4],0x0
   1400548c4:	mov    ecx,cs
   1400548c6:	add    BYTE PTR [rax],al
   1400548c8:	or     edx,0x0
   1400548cb:	add    ah,bh
   1400548cd:	movsxd eax,DWORD PTR [rax+rax*1]
   1400548d0:	test   dl,cl
   1400548d2:	add    BYTE PTR [rax],al
   1400548d4:	lods   al,BYTE PTR ds:[rsi]
   1400548d5:	retf   0x0
   1400548d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400548d9:	rex.RB add al,0x0
   1400548dc:	lods   al,BYTE PTR ds:[rsi]
   1400548dd:	retf   0x0
   1400548e0:	rex.RXB retf 
   1400548e2:	add    BYTE PTR [rax],al
   1400548e4:	sub    al,0x76
   1400548e6:	add    al,0x0
   1400548e8:	rex.W retf 
   1400548ea:	add    BYTE PTR [rax],al
   1400548ec:	movsxd ecx,ebx
   1400548ee:	add    BYTE PTR [rax],al
   1400548f0:	or     al,0x76
   1400548f2:	add    al,0x0
   1400548f4:	fs retf 
   1400548f6:	add    BYTE PTR [rax],al
   1400548f8:	fmul   st,st(3)
   1400548fa:	add    BYTE PTR [rax],al
   1400548fc:	pop    rax
   1400548fd:	jbe    0x140054903
   1400548ff:	add    al,bl
   140054901:	retf   
   140054902:	add    BYTE PTR [rax],al
   140054904:	sbb    ecx,esi
   140054906:	add    BYTE PTR [rax],al
   140054908:	rex.R jbe 0x14005490f
   14005490b:	add    BYTE PTR [rsi+rcx*8],bl
   14005490e:	add    BYTE PTR [rax],al
   140054910:	pushf  
   140054911:	rol    BYTE PTR [rax],1
   140054913:	add    ah,dh
   140054915:	jne    0x14005491b
   140054917:	add    BYTE PTR [rax+rdx*8-0x2d740000],bl
   14005491e:	add    BYTE PTR [rax],al
   140054920:	fdiv   QWORD PTR [rbp+0x4]
   140054923:	add    BYTE PTR [rdx+rdx*8-0x2d140000],cl
   14005492a:	add    BYTE PTR [rax],al
   14005492c:	in     al,0x61
   14005492e:	add    al,0x0
   140054930:	in     al,dx
   140054931:	rol    BYTE PTR [rax],cl
   140054933:	add    ch,ch
   140054935:	rol    DWORD PTR [rax],cl
   140054937:	add    ah,al
   140054939:	jne    0x14005493f
   14005493b:	add    al,dh
   14005493d:	rol    DWORD PTR [rax],cl
   14005493f:	add    BYTE PTR [rdi],bh
   140054941:	xlat   BYTE PTR ds:[rbx]
   140054942:	add    BYTE PTR [rax],al
   140054944:	test   al,0x75
   140054946:	add    al,0x0
   140054948:	rex xlat BYTE PTR ds:[rbx]
   14005494a:	add    BYTE PTR [rax],al
   14005494c:	(bad)  
   14005494d:	fadd   DWORD PTR [rax]
   14005494f:	add    BYTE PTR [rax+0x75],ah
   140054952:	add    al,0x0
   140054954:	sub    al,bl
   140054956:	add    BYTE PTR [rax],al
   140054958:	mov    ch,0xdc
   14005495a:	add    BYTE PTR [rax],al
   14005495c:	mov    esp,0xb800043f
   140054961:	fadd   QWORD PTR [rax]
   140054963:	add    dh,dl
   140054965:	fadd   QWORD PTR [rax]
   140054967:	add    BYTE PTR [rax],bh
   140054969:	jne    0x14005496f
   14005496b:	add    al,bl
   14005496d:	fadd   QWORD PTR [rax]
   14005496f:	add    dh,dh
   140054971:	fadd   QWORD PTR [rax]
   140054973:	add    BYTE PTR [rax],bl
   140054975:	jne    0x14005497b
   140054977:	add    BYTE PTR [rax],al
   140054979:	fld    QWORD PTR [rax]
   14005497b:	add    BYTE PTR [rsi-0x23],cl
   14005497e:	add    BYTE PTR [rax],al
   140054980:	xchg   esp,eax
   140054981:	movabs eax,ds:0xddc00000dd500004
   14005498a:	add    BYTE PTR [rax],al
   14005498c:	pop    rax
   14005498d:	je     0x140054993
   14005498f:	add    al,al
   140054991:	fld    QWORD PTR [rax]
   140054993:	add    bh,dh
   140054995:	fld    QWORD PTR [rax]
   140054997:	add    BYTE PTR [rax],bl
   140054999:	je     0x14005499f
   14005499b:	add    al,bh
   14005499d:	fld    QWORD PTR [rax]
   14005499f:	add    BYTE PTR [rdx-0x20],dl
   1400549a2:	add    BYTE PTR [rax],al
   1400549a4:	shl    BYTE PTR [rbx+0x4],1
   1400549a7:	add    BYTE PTR [rax+riz*8+0x0],dl
   1400549ab:	add    cl,al
   1400549ad:	loopne 0x1400549af
   1400549af:	add    BYTE PTR [rax-0x3bfffb8d],bl
   1400549b5:	loopne 0x1400549b7
   1400549b7:	add    bl,ah
   1400549b9:	loopne 0x1400549bb
   1400549bb:	add    BYTE PTR [rax+0x73],bh
   1400549be:	add    al,0x0
   1400549c0:	in     al,0xe0
   1400549c2:	add    BYTE PTR [rax],al
   1400549c4:	xor    ecx,esp
   1400549c6:	add    BYTE PTR [rax],al
   1400549c8:	call   0x174054e3f
   1400549cd:	loope  0x1400549cf
   1400549cf:	add    BYTE PTR [rax-0x1d],bl
   1400549d2:	add    BYTE PTR [rax],al
   1400549d4:	js     0x140054a48
   1400549d6:	add    al,0x0
   1400549d8:	pop    rax
   1400549d9:	jrcxz  0x1400549db
   1400549db:	add    dl,dl
   1400549dd:	jrcxz  0x1400549df
   1400549df:	add    BYTE PTR [rax-0x2bfffb8f],bh
   1400549e5:	jrcxz  0x1400549e7
   1400549e7:	add    BYTE PTR [rip+0xffffffff880000e4],ah        # 0xc8054ad1
   1400549ed:	jno    0x1400549f3
   1400549ef:	add    BYTE PTR [rax],ch
   1400549f1:	in     al,0x0
   1400549f3:	add    BYTE PTR [rbx-0x1c],ah
   1400549f6:	add    BYTE PTR [rax],al
   1400549f8:	in     al,0x61
   1400549fa:	add    al,0x0
   1400549fc:	fs in  al,0x0
   1400549ff:	add    cl,bh
   140054a01:	in     al,0x0
   140054a03:	add    BYTE PTR [rax],ch
   140054a05:	rex.W add al,0x0
   140054a08:	or     ch,ah
   140054a0a:	add    BYTE PTR [rax],al
   140054a0c:	test   edi,esp
   140054a0e:	add    BYTE PTR [rax],al
   140054a10:	in     al,0x61
   140054a12:	add    al,0x0
   140054a14:	mov    bh,ah
   140054a16:	add    BYTE PTR [rax],al
   140054a18:	shr    eax,1
   140054a1a:	add    BYTE PTR [rax],al
   140054a1c:	and    BYTE PTR [rcx+0x4],dh
   140054a1f:	add    ah,dl
   140054a21:	call   0x12c944a26
   140054a26:	add    BYTE PTR [rax],al
   140054a28:	fdiv   DWORD PTR [rdi+0x4]
   140054a2b:	add    BYTE PTR [rax-0x40ffff14],dl
   140054a31:	in     al,dx
   140054a32:	add    BYTE PTR [rax],al
   140054a34:	in     al,0x61
   140054a36:	add    al,0x0
   140054a38:	shr    ah,0x0
   140054a3b:	add    BYTE PTR [rcx],dh
   140054a3d:	in     eax,dx
   140054a3e:	add    BYTE PTR [rax],al
   140054a40:	push   0x34000477
   140054a45:	in     eax,dx
   140054a46:	add    BYTE PTR [rax],al
   140054a48:	sti    
   140054a49:	out    dx,al
   140054a4a:	add    BYTE PTR [rax],al
   140054a4c:	rex.WR ja 0x140054a53
   140054a4f:	add    ah,bh
   140054a51:	out    dx,al
   140054a52:	add    BYTE PTR [rax],al
   140054a54:	fsubr  st,st(7)
   140054a56:	add    BYTE PTR [rax],al
   140054a58:	cld    
   140054a59:	movsxd eax,DWORD PTR [rax+rax*1]
   140054a5c:	fsubr  st,st(7)
   140054a5e:	add    BYTE PTR [rax],al
   140054a60:	repnz cmc 
   140054a62:	add    BYTE PTR [rax],al
   140054a64:	call   0x134054edf
   140054a69:	cmc    
   140054a6a:	add    BYTE PTR [rax],al
   140054a6c:	ins    BYTE PTR es:[rdi],dx
   140054a6d:	test   BYTE PTR [rax],0x0
   140054a70:	xchg   esp,eax
   140054a71:	movabs eax,ds:0xf70e0000f66c0004
   140054a7a:	add    BYTE PTR [rax],al
   140054a7c:	(bad)  
   140054a7d:	jbe    0x140054a83
   140054a7f:	add    BYTE PTR [rax],ch
   140054a81:	test   DWORD PTR [rax],0xfa4700
   140054a87:	add    al,al
   140054a89:	jp     0x140054a8f
   140054a8b:	add    BYTE PTR [rax-0x6],cl
   140054a8e:	add    BYTE PTR [rax],al
   140054a90:	ja     0x140054a8c
   140054a92:	add    BYTE PTR [rax],al
   140054a94:	in     al,0x61
   140054a96:	add    al,0x0
   140054a98:	js     0x140054a94
   140054a9a:	add    BYTE PTR [rax],al
   140054a9c:	movabs eax,ds:0xa400047ae00000fa
   140054aa5:	cli    
   140054aa6:	add    BYTE PTR [rax],al
   140054aa8:	out    dx,al
   140054aa9:	sti    
   140054aaa:	add    BYTE PTR [rax],al
   140054aac:	test   al,0x7a
   140054aae:	add    al,0x0
   140054ab0:	lock sti 
   140054ab2:	add    BYTE PTR [rax],al
   140054ab4:	loopne 0x140054ab2
   140054ab6:	add    BYTE PTR [rax],al
   140054ab8:	hlt    
   140054ab9:	rex.XB add al,0x0
   140054abc:	loopne 0x140054aba
   140054abe:	add    BYTE PTR [rax],al
   140054ac0:	push   0xffffffff940000fe
   140054ac5:	movabs eax,ds:0xff940000fe680004
   140054ace:	add    BYTE PTR [rax],al
   140054ad0:	or     al,0x45
   140054ad2:	add    al,0x0
   140054ad4:	xchg   esp,eax
   140054ad5:	inc    DWORD PTR [rax]
   140054ad7:	add    BYTE PTR [rdi+0x38000100],dh
   140054add:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054ade:	add    al,0x0
   140054ae0:	mov    eax,0xf3000100
   140054ae5:	add    BYTE PTR [rcx],al
   140054ae7:	add    BYTE PTR [rbp+rax*2+0xf40004],ah
   140054aee:	add    DWORD PTR [rax],eax
   140054af0:	(bad)  
   140054af1:	(bad)  
   140054af2:	add    DWORD PTR [rax],eax
   140054af4:	sub    BYTE PTR [rbx+0x4],bh
   140054af7:	add    al,dl
   140054af9:	(bad)  
   140054afa:	add    DWORD PTR [rax],eax
   140054afc:	ror    BYTE PTR [rcx],1
   140054afe:	add    DWORD PTR [rax],eax
   140054b00:	or     al,0x7b
   140054b02:	add    al,0x0
   140054b04:	ror    BYTE PTR [rcx],1
   140054b06:	add    DWORD PTR [rax],eax
   140054b08:	call   0x178054c17
   140054b0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054b0e:	add    al,0x0
   140054b10:	pop    rsp
   140054b11:	or     eax,DWORD PTR [rcx]
   140054b13:	add    BYTE PTR [rdi+0xc],dl
   140054b16:	add    DWORD PTR [rax],eax
   140054b18:	add    BYTE PTR [rbx+0x4],bh
   140054b1b:	add    BYTE PTR [rax+0xc],bl
   140054b1e:	add    DWORD PTR [rax],eax
   140054b20:	ja     0x140054b2f
   140054b22:	add    DWORD PTR [rax],eax
   140054b24:	add    al,0x86
   140054b26:	add    al,0x0
   140054b28:	js     0x140054b37
   140054b2a:	add    DWORD PTR [rax],eax
   140054b2c:	sub    al,0xe
   140054b2e:	add    DWORD PTR [rax],eax
   140054b30:	int3   
   140054b31:	jl     0x140054b37
   140054b33:	add    BYTE PTR [rsi+rcx*1],ch
   140054b36:	add    DWORD PTR [rax],eax
   140054b38:	add    eax,0x9c00010f
   140054b3d:	jl     0x140054b43
   140054b3f:	add    BYTE PTR [rax],cl
   140054b41:	sgdt   [rax]
   140054b44:	and    BYTE PTR [rax],dl
   140054b46:	add    DWORD PTR [rax],eax
   140054b48:	push   0x2000047c
   140054b4d:	adc    BYTE PTR [rcx],al
   140054b4f:	add    ch,cl
   140054b51:	adc    BYTE PTR [rcx],al
   140054b53:	add    BYTE PTR [rax+0x7d],bl
   140054b56:	add    al,0x0
   140054b58:	rcl    BYTE PTR [rax],1
   140054b5a:	add    DWORD PTR [rax],eax
   140054b5c:	jb     0x140054b72
   140054b5e:	add    DWORD PTR [rax],eax
   140054b60:	sbb    BYTE PTR [rbp+0x4],bh
   140054b63:	add    ah,bh
   140054b65:	adc    al,0x1
   140054b67:	add    BYTE PTR [rdi+0x28000115],dh
   140054b6d:	rex.W add al,0x0
   140054b70:	mov    eax,0x20000115
   140054b75:	(bad)  
   140054b76:	add    DWORD PTR [rax],eax
   140054b78:	xchg   esp,eax
   140054b79:	movabs eax,ds:0x167f000116200004
   140054b82:	add    DWORD PTR [rax],eax
   140054b84:	xchg   esp,eax
   140054b85:	movabs eax,ds:0x1701000116800004
   140054b8e:	add    DWORD PTR [rax],eax
   140054b90:	cmp    BYTE PTR [rsi+0x17040004],ah
   140054b96:	add    DWORD PTR [rax],eax
   140054b98:	sbb    bl,BYTE PTR [rcx]
   140054b9a:	add    DWORD PTR [rax],eax
   140054b9c:	rex.WR jl 0x140054ba3
   140054b9f:	add    BYTE PTR [rcx+rbx*1],bl
   140054ba2:	add    DWORD PTR [rax],eax
   140054ba4:	ja     0x140054bbf
   140054ba6:	add    DWORD PTR [rax],eax
   140054ba8:	cmp    BYTE PTR [rsp+rax*1+0x0],bh
   140054bac:	js     0x140054bc7
   140054bae:	add    DWORD PTR [rax],eax
   140054bb0:	sbb    al,BYTE PTR [rcx]
   140054bb3:	add    BYTE PTR [rax],al
   140054bb5:	jge    0x140054bbb
   140054bb7:	add    BYTE PTR [rax+0x1a],al
   140054bba:	add    DWORD PTR [rax],eax
   140054bbc:	or     BYTE PTR [rbx],bl
   140054bbe:	add    DWORD PTR [rax],eax
   140054bc0:	add    BYTE PTR [rbp+0x4],bh
   140054bc3:	add    BYTE PTR [rax],cl
   140054bc5:	sbb    eax,DWORD PTR [rcx]
   140054bc7:	add    BYTE PTR [rsi+0x1c],ch
   140054bca:	add    DWORD PTR [rax],eax
   140054bcc:	and    BYTE PTR [rsp+rax*1+0x0],bh
   140054bd0:	jo     0x140054bee
   140054bd2:	add    DWORD PTR [rax],eax
   140054bd4:	(bad)  
   140054bd5:	sbb    al,0x1
   140054bd7:	add    BYTE PTR [rax],ch
   140054bd9:	rex.W add al,0x0
   140054bdc:	in     al,dx
   140054bdd:	sbb    al,0x1
   140054bdf:	add    BYTE PTR [rsi+0x3800011e],cl
   140054be5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054be6:	add    al,0x0
   140054be8:	nop
   140054be9:	(bad)  
   140054bea:	add    DWORD PTR [rax],eax
   140054bec:	gs add DWORD PTR es:[rax],eax
   140054bf0:	hlt    
   140054bf1:	jnp    0x140054bf7
   140054bf3:	add    BYTE PTR [rax+0x26],ch
   140054bf6:	add    DWORD PTR [rax],eax
   140054bf8:	xchg   ebp,eax
   140054bf9:	add    DWORD PTR es:[rax],eax
   140054bfc:	mov    esp,0x9800047b
   140054c01:	add    DWORD PTR es:[rax],eax
   140054c04:	cmc    
   140054c05:	sub    BYTE PTR [rcx],al
   140054c07:	add    BYTE PTR [rbx+rdi*2+0x4],dh
   140054c0b:	add    al,bh
   140054c0d:	sub    BYTE PTR [rcx],al
   140054c0f:	add    BYTE PTR [rbp+0x29],al
   140054c12:	add    DWORD PTR [rax],eax
   140054c14:	push   rax
   140054c15:	jnp    0x140054c1b
   140054c17:	add    BYTE PTR [rax+0x29],cl
   140054c1a:	add    DWORD PTR [rax],eax
   140054c1c:	pushf  
   140054c1d:	sub    DWORD PTR [rcx],eax
   140054c1f:	add    BYTE PTR [rbp+rax*2+0x299c0004],ah
   140054c26:	add    DWORD PTR [rax],eax
   140054c28:	(bad)  
   140054c29:	sub    eax,DWORD PTR [rcx]
   140054c2b:	add    BYTE PTR [rdi+rdi*2],dh
   140054c2e:	add    al,0x0
   140054c30:	enter  0x12b,0x0
   140054c34:	imul   DWORD PTR [rbx]
   140054c36:	add    DWORD PTR [rax],eax
   140054c38:	in     al,0x61
   140054c3a:	add    al,0x0
   140054c3c:	clc    
   140054c3d:	sub    eax,DWORD PTR [rcx]
   140054c3f:	add    BYTE PTR [rbx],ch
   140054c41:	sub    al,0x1
   140054c43:	add    BYTE PTR [rdi+rdi*2],cl
   140054c46:	add    al,0x0
   140054c48:	sub    al,0x2c
   140054c4a:	add    DWORD PTR [rax],eax
   140054c4c:	pop    rdi
   140054c4d:	sub    al,0x1
   140054c4f:	add    BYTE PTR [rbp+rax*2+0x2c600004],ah
   140054c56:	add    DWORD PTR [rax],eax
   140054c58:	out    0x2d,al
   140054c5a:	add    DWORD PTR [rax],eax
   140054c5c:	and    BYTE PTR [rdi+0x2de80004],al
   140054c62:	add    DWORD PTR [rax],eax
   140054c64:	push   rbx
   140054c65:	add    DWORD PTR cs:[rax],eax
   140054c68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054c69:	rex.RB add al,0x0
   140054c6c:	push   rsp
   140054c6d:	add    DWORD PTR cs:[rax],eax
   140054c70:	rex.WR (bad) 
   140054c72:	add    DWORD PTR [rax],eax
   140054c74:	cld    
   140054c75:	jle    0x140054c7b
   140054c77:	add    BYTE PTR [rdi+rbp*1+0x1],cl
   140054c7b:	add    BYTE PTR [rsi+0x1400012f],ah
   140054c81:	movabs al,ds:0x30a500012fa80004
   140054c8a:	add    DWORD PTR [rax],eax
   140054c8c:	in     al,dx
   140054c8d:	jle    0x140054c93
   140054c8f:	add    BYTE PTR [rax-0x31fffed0],ch
   140054c95:	xor    DWORD PTR [rcx],eax
   140054c97:	add    BYTE PTR [rsi+rdi*2+0x31d00004],bl
   140054c9e:	add    DWORD PTR [rax],eax
   140054ca0:	xor    al,BYTE PTR es:[rcx]
   140054ca3:	add    BYTE PTR [rsi+rdi*2+0x32280004],dl
   140054caa:	add    DWORD PTR [rax],eax
   140054cac:	push   rdi
   140054cad:	xor    al,BYTE PTR [rcx]
   140054caf:	add    ah,ah
   140054cb1:	(bad)  
   140054cb2:	add    al,0x0
   140054cb4:	pop    rax
   140054cb5:	xor    al,BYTE PTR [rcx]
   140054cb7:	add    BYTE PTR [rbp+0x32],bh
   140054cba:	add    DWORD PTR [rax],eax
   140054cbc:	je     0x140054d3c
   140054cbe:	add    al,0x0
   140054cc0:	xor    BYTE PTR [rdx],0x1
   140054cc3:	add    BYTE PTR [rip+0x34000135],bl        # 0x174054dfe
   140054cc9:	jle    0x140054ccf
   140054ccb:	add    BYTE PTR [rax],ah
   140054ccd:	xor    eax,0x35d70001
   140054cd2:	add    DWORD PTR [rax],eax
   140054cd4:	and    al,0x7e
   140054cd6:	add    al,0x0
   140054cd8:	fdiv   DWORD PTR [rip+0x36070001]        # 0x1760c4cdf
   140054cde:	add    DWORD PTR [rax],eax
   140054ce0:	in     al,0x61
   140054ce2:	add    al,0x0
   140054ce4:	or     BYTE PTR [rsi],dh
   140054ce6:	add    DWORD PTR [rax],eax
   140054ce8:	sub    eax,0xc000136
   140054ced:	jle    0x140054cf3
   140054cef:	add    BYTE PTR [rax],dh
   140054cf1:	add    DWORD PTR ss:[rax],eax
   140054cf4:	rex.R (bad) 
   140054cf6:	add    DWORD PTR [rax],eax
   140054cf8:	hlt    
   140054cf9:	jge    0x140054cff
   140054cfb:	add    BYTE PTR [rdi+rsi*1+0x1],al
   140054cff:	add    al,bh
   140054d01:	(bad)  
   140054d02:	add    DWORD PTR [rax],eax
   140054d04:	adc    BYTE PTR [rax+0x37f80004],al
   140054d0a:	add    DWORD PTR [rax],eax
   140054d0c:	and    edi,DWORD PTR [rbx]
   140054d0e:	add    DWORD PTR [rax],eax
   140054d10:	mov    BYTE PTR [rdi+0x4],bh
   140054d13:	add    BYTE PTR [rbx+rdi*1],ah
   140054d16:	add    DWORD PTR [rax],eax
   140054d18:	mov    ch,0x3b
   140054d1a:	add    DWORD PTR [rax],eax
   140054d1c:	xchg   esp,eax
   140054d1d:	movabs eax,ds:0x3bce00013bb80004
   140054d26:	add    DWORD PTR [rax],eax
   140054d28:	add    al,0x86
   140054d2a:	add    al,0x0
   140054d2c:	sar    BYTE PTR [rbx],1
   140054d2e:	add    DWORD PTR [rax],eax
   140054d30:	iret   
   140054d31:	cmp    al,0x1
   140054d33:	add    ah,ah
   140054d35:	mov    BYTE PTR [rax+rax*1],al
   140054d38:	sar    BYTE PTR [rcx+rax*1],1
   140054d3b:	add    bh,bh
   140054d3d:	cmp    al,0x1
   140054d3f:	add    BYTE PTR [rbp+rax*2+0x3d000004],ah
   140054d46:	add    DWORD PTR [rax],eax
   140054d48:	adc    BYTE PTR [rsi],bh
   140054d4a:	add    DWORD PTR [rax],eax
   140054d4c:	adc    al,0x82
   140054d4e:	add    al,0x0
   140054d50:	adc    BYTE PTR [rsi],bh
   140054d52:	add    DWORD PTR [rax],eax
   140054d54:	pop    rbx
   140054d55:	add    DWORD PTR [rax],r8d
   140054d58:	test   BYTE PTR [rdx+0x445c0004],al
   140054d5e:	add    DWORD PTR [rax],eax
   140054d60:	mov    eax,DWORD PTR [rcx+rax*1+0x0]
   140054d64:	in     al,0x61
   140054d66:	add    al,0x0
   140054d68:	mov    WORD PTR [rcx+rax*1+0x0],es
   140054d6c:	sbb    DWORD PTR [rbp+0x1],eax
   140054d6f:	add    BYTE PTR [rax+0x1c000482],bl
   140054d75:	add    DWORD PTR [r8],r8d
   140054d78:	(bad)  
   140054d79:	rex.RX add DWORD PTR [rax],r8d
   140054d7c:	rex.R
   140054d7d:	rex.W add al,0x0
   140054d80:	sub    BYTE PTR [rsi+0x1],al
   140054d83:	add    BYTE PTR [rdi-0x7ffffeaf],al
   140054d89:	add    DWORD PTR [rax+rax*1],0x15188
   140054d90:	cmp    eax,0x3c000153
   140054d95:	add    DWORD PTR [rax+rax*1],0x15340
   140054d9c:	jl     0x140054df1
   140054d9e:	add    DWORD PTR [rax],eax
   140054da0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054da1:	rex.RB add al,0x0
   140054da4:	jl     0x140054df9
   140054da6:	add    DWORD PTR [rax],eax
   140054da8:	(bad)  
   140054da9:	push   rsp
   140054daa:	add    DWORD PTR [rax],eax
   140054dac:	loopne 0x140054d2e
   140054dae:	add    al,0x0
   140054db0:	and    BYTE PTR [rcx+rax*1+0x0],dl
   140054db4:	sub    al,0x55
   140054db6:	add    DWORD PTR [rax],eax
   140054db8:	test   al,0x80
   140054dba:	add    al,0x0
   140054dbc:	sub    al,0x55
   140054dbe:	add    DWORD PTR [rax],eax
   140054dc0:	cmc    
   140054dc1:	push   rbp
   140054dc2:	add    DWORD PTR [rax],eax
   140054dc4:	je     0x140054d46
   140054dc6:	add    al,0x0
   140054dc8:	clc    
   140054dc9:	push   rbp
   140054dca:	add    DWORD PTR [rax],eax
   140054dcc:	(bad)  
   140054dcd:	push   rsi
   140054dce:	add    DWORD PTR [rax],eax
   140054dd0:	rex add BYTE PTR [rax+rax*1],0x90
   140054dd5:	push   rsi
   140054dd6:	add    DWORD PTR [rax],eax
   140054dd8:	in     al,0x56
   140054dda:	add    DWORD PTR [rax],eax
   140054ddc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054ddd:	rex.RB add al,0x0
   140054de0:	in     al,0x56
   140054de2:	add    DWORD PTR [rax],eax
   140054de4:	js     0x140054e3d
   140054de6:	add    DWORD PTR [rax],eax
   140054de8:	sub    BYTE PTR [rax+0x4],cl
   140054deb:	add    BYTE PTR [rax+0x57],bh
   140054dee:	add    DWORD PTR [rax],eax
   140054df0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054df1:	push   rdi
   140054df2:	add    DWORD PTR [rax],eax
   140054df4:	in     al,0x61
   140054df6:	add    al,0x0
   140054df8:	test   al,0x57
   140054dfa:	add    DWORD PTR [rax],eax
   140054dfc:	rcl    DWORD PTR [rdi+0x1],1
   140054dff:	add    ah,bh
   140054e01:	(bad)  
   140054e02:	add    al,0x0
   140054e04:	(bad)  
   140054e05:	push   rdi
   140054e06:	add    DWORD PTR [rax],eax
   140054e08:	mov    dl,0x58
   140054e0a:	add    DWORD PTR [rax],eax
   140054e0c:	adc    al,0x84
   140054e0e:	add    al,0x0
   140054e10:	mov    ah,0x58
   140054e12:	add    DWORD PTR [rax],eax
   140054e14:	or     ebx,DWORD PTR [rcx+0x1]
   140054e17:	add    BYTE PTR [rbx+rax*4+0x59200004],dh
   140054e1e:	add    DWORD PTR [rax],eax
   140054e20:	xchg   esi,eax
   140054e21:	pop    rcx
   140054e22:	add    DWORD PTR [rax],eax
   140054e24:	sbb    al,0x83
   140054e26:	add    al,0x0
   140054e28:	rcr    BYTE PTR [rcx+0x1],1
   140054e2b:	add    BYTE PTR [rdx+0x3c00015a],dl
   140054e31:	xchg   BYTE PTR [rax+rax*1],al
   140054e34:	xchg   esp,eax
   140054e35:	pop    rdx
   140054e36:	add    DWORD PTR [rax],eax
   140054e38:	adc    BYTE PTR [rbx+0x1],bl
   140054e3b:	add    BYTE PTR [rbp+rax*2+0x5b100004],ah
   140054e42:	add    DWORD PTR [rax],eax
   140054e44:	(bad)  
   140054e45:	pop    rsp
   140054e46:	add    DWORD PTR [rax],eax
   140054e48:	xchg   esp,eax
   140054e49:	xchg   BYTE PTR [rax+rax*1],al
   140054e4c:	rcr    BYTE PTR [rcx+rax*1+0x0],1
   140054e50:	xchg   ecx,eax
   140054e51:	pop    rsi
   140054e52:	add    DWORD PTR [rax],eax
   140054e54:	jo     0x140054ddc
   140054e56:	add    al,0x0
   140054e58:	xchg   esp,eax
   140054e59:	pop    rsi
   140054e5a:	add    DWORD PTR [rax],eax
   140054e5c:	retf   
   140054e5d:	pop    rsi
   140054e5e:	add    DWORD PTR [rax],eax
   140054e60:	push   rax
   140054e61:	xchg   BYTE PTR [rax+rax*1],al
   140054e64:	int3   
   140054e65:	pop    rsi
   140054e66:	add    DWORD PTR [rax],eax
   140054e68:	icebp  
   140054e69:	pop    rdi
   140054e6a:	add    DWORD PTR [rax],eax
   140054e6c:	or     al,0x86
   140054e6e:	add    al,0x0
   140054e70:	hlt    
   140054e71:	pop    rdi
   140054e72:	add    DWORD PTR [rax],eax
   140054e74:	scas   al,BYTE PTR es:[rdi]
   140054e75:	(bad)  
   140054e76:	add    DWORD PTR [rax],eax
   140054e78:	add    al,0x86
   140054e7a:	add    al,0x0
   140054e7c:	mov    al,0x60
   140054e7e:	add    DWORD PTR [rax],eax
   140054e80:	jg     0x140054ee3
   140054e82:	add    DWORD PTR [rax],eax
   140054e84:	mov    BYTE PTR [rbp+0x61800004],al
   140054e8a:	add    DWORD PTR [rax],eax
   140054e8c:	jmp    QWORD PTR [rcx+0x1]
   140054e8f:	add    al,dh
   140054e91:	test   BYTE PTR [rax+rax*1],al
   140054e94:	add    BYTE PTR [rdx+0x1],ah
   140054e97:	add    bh,al
   140054e99:	(bad)  
   140054e9b:	add    BYTE PTR [rsi+rax*4+0x62c80004],dh
   140054ea2:	add    DWORD PTR [rax],eax
   140054ea4:	mul    DWORD PTR [rdx+0x1]
   140054ea7:	add    ah,ah
   140054ea9:	(bad)  
   140054eaa:	add    al,0x0
   140054eac:	clc    
   140054ead:	(bad)  
   140054eaf:	add    BYTE PTR [rdi+0x63],al
   140054eb2:	add    DWORD PTR [rax],eax
   140054eb4:	int3   
   140054eb5:	xchg   BYTE PTR [rax+rax*1],al
   140054eb8:	movsxd rax,DWORD PTR [rcx]
   140054ebb:	add    BYTE PTR [rdi-0x6bfffe9d],dh
   140054ec1:	movabs eax,ds:0x6497000163b80004
   140054eca:	add    DWORD PTR [rax],eax
   140054ecc:	hlt    
   140054ecd:	xchg   BYTE PTR [rax+rax*1],al
   140054ed0:	cwde   
   140054ed1:	add    DWORD PTR fs:[rax],eax
   140054ed4:	sbb    esp,DWORD PTR [rbp+0x1]
   140054ed7:	add    BYTE PTR [rax],dl
   140054ed9:	xchg   DWORD PTR [rax+rax*1],eax
   140054edc:	sbb    al,0x65
   140054ede:	add    DWORD PTR [rax],eax
   140054ee0:	rex.WXB
   140054ee1:	add    DWORD PTR gs:[rax],eax
   140054ee4:	in     al,0x61
   140054ee6:	add    al,0x0
   140054ee8:	rex.WR
   140054ee9:	add    DWORD PTR gs:[rax],eax
   140054eec:	lea    esp,[rbp+0x1]
   140054eef:	add    ah,bh
   140054ef1:	mov    BYTE PTR [rax+rax*1],al
   140054ef4:	nop
   140054ef5:	add    DWORD PTR gs:[rax],eax
   140054ef8:	push   rdi
   140054ef9:	add    WORD PTR [rax],ax
   140054efc:	in     al,0x88
   140054efe:	add    al,0x0
   140054f00:	pop    rax
   140054f01:	add    WORD PTR [rax],ax
   140054f04:	scas   al,BYTE PTR es:[rdi]
   140054f05:	push   0x1
   140054f07:	add    BYTE PTR [rax],ah
   140054f09:	mov    BYTE PTR [rax+rax*1],al
   140054f0c:	mov    al,0x6a
   140054f0e:	add    DWORD PTR [rax],eax
   140054f10:	push   rsp
   140054f11:	ins    BYTE PTR es:[rdi],dx
   140054f12:	add    DWORD PTR [rax],eax
   140054f14:	pushf  
   140054f15:	xchg   DWORD PTR [rax+rax*1],eax
   140054f18:	push   rsp
   140054f19:	ins    BYTE PTR es:[rdi],dx
   140054f1a:	add    DWORD PTR [rax],eax
   140054f1c:	out    0x6d,al
   140054f1e:	add    DWORD PTR [rax],eax
   140054f20:	test   BYTE PTR [rdi+0x6de80004],al
   140054f26:	add    DWORD PTR [rax],eax
   140054f28:	(bad)  
   140054f29:	outs   dx,BYTE PTR ds:[rsi]
   140054f2a:	add    DWORD PTR [rax],eax
   140054f2c:	ror    BYTE PTR [rax+0x6ed00004],1
   140054f32:	add    DWORD PTR [rax],eax
   140054f34:	loopne 0x140054fa5
   140054f36:	add    DWORD PTR [rax],eax
   140054f38:	jo     0x140054ec1
   140054f3a:	add    al,0x0
   140054f3c:	loopne 0x140054fad
   140054f3e:	add    DWORD PTR [rax],eax
   140054f40:	mov    WORD PTR [rax+0x1],?
   140054f43:	add    BYTE PTR [rdi+rax*4],bh
   140054f46:	add    al,0x0
   140054f48:	mov    WORD PTR [rax+0x1],?
   140054f4b:	add    BYTE PTR [rdx+0x20000171],bh
   140054f51:	xchg   DWORD PTR [rax+rax*1],eax
   140054f54:	mov    esp,0xd0000171
   140054f59:	jb     0x140054f5c
   140054f5b:	add    BYTE PTR [rax],ch
   140054f5d:	rex.W add al,0x0
   140054f60:	fdiv   DWORD PTR [rdx+0x1]
   140054f63:	add    dl,bh
   140054f65:	jb     0x140054f68
   140054f67:	add    BYTE PTR [rbp+rax*2+0x72fc0004],ah
   140054f6e:	add    DWORD PTR [rax],eax
   140054f70:	sub    DWORD PTR [rcx+rax*1+0x0],esi
   140054f74:	and    al,0x89
   140054f76:	add    al,0x0
   140054f78:	sub    al,0x74
   140054f7a:	add    DWORD PTR [rax],eax
   140054f7c:	xor    al,0x75
   140054f7e:	add    DWORD PTR [rax],eax
   140054f80:	mov    QWORD PTR [rax+rax*1],r8
   140054f84:	xor    al,0x75
   140054f86:	add    DWORD PTR [rax],eax
   140054f88:	sbb    al,0x76
   140054f8a:	add    DWORD PTR [rax],eax
   140054f8c:	mov    QWORD PTR [rax+rax*1],r8
   140054f90:	sbb    al,0x76
   140054f92:	add    DWORD PTR [rax],eax
   140054f94:	fwait
   140054f95:	jbe    0x140054f98
   140054f97:	add    BYTE PTR [rcx+rcx*4+0x4],al
   140054f9b:	add    BYTE PTR [rsi+rsi*2+0x77220001],bl
   140054fa2:	add    DWORD PTR [rax],eax
   140054fa4:	push   0x24000489
   140054fa9:	ja     0x140054fac
   140054fab:	add    BYTE PTR [rdx-0x53fffe89],al
   140054fb1:	mov    DWORD PTR [rax+rax*1],eax
   140054fb4:	test   BYTE PTR [rdi+0x1],dh
   140054fb7:	add    BYTE PTR [rax],ch
   140054fb9:	js     0x140054fbc
   140054fbb:	add    BYTE PTR [rsp+rax*2+0x4],ch
   140054fbf:	add    BYTE PTR [rax],ch
   140054fc1:	js     0x140054fc4
   140054fc3:	add    ah,cl
   140054fc5:	js     0x140054fc8
   140054fc7:	add    BYTE PTR [rsp+rax*2+0x4],ch
   140054fcb:	add    ah,cl
   140054fcd:	js     0x140054fd0
   140054fcf:	add    BYTE PTR [rdi+0x79],dh
   140054fd2:	add    DWORD PTR [rax],eax
   140054fd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054fd5:	rex.RB add al,0x0
   140054fd8:	js     0x140055053
   140054fda:	add    DWORD PTR [rax],eax
   140054fdc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054fdd:	jns    0x140054fe0
   140054fdf:	add    ah,ah
   140054fe1:	(bad)  
   140054fe2:	add    al,0x0
   140054fe4:	test   al,0x79
   140054fe6:	add    DWORD PTR [rax],eax
   140054fe8:	out    0x79,eax
   140054fea:	add    DWORD PTR [rax],eax
   140054fec:	fmul   DWORD PTR [rcx+0x79e80004]
   140054ff2:	add    DWORD PTR [rax],eax
   140054ff4:	xor    DWORD PTR [rdx+0x1],edi
   140054ff7:	add    ah,ah
   140054ff9:	(bad)  
   140054ffa:	add    al,0x0
   140054ffc:	xor    al,0x7a
   140054ffe:	add    DWORD PTR [rax],eax
   140055000:	mov    bh,0x7b
   140055002:	add    DWORD PTR [rax],eax
   140055004:	mov    WORD PTR [rbx+0x7bb80004],cs
   14005500a:	add    DWORD PTR [rax],eax
   14005500c:	push   rsp
   14005500d:	add    BYTE PTR [rcx],0x0
   140055010:	test   BYTE PTR [rdx-0x7fabfffc],cl
   140055016:	add    DWORD PTR [rax],eax
   140055018:	mov    ebp,0xe8000180
   14005501d:	mov    eax,DWORD PTR [rax+rax*1]
   140055020:	rol    BYTE PTR [rax-0x7f02ffff],0x1
   140055027:	add    BYTE PTR [rdx+rcx*4+0x4],bl
   14005502b:	add    BYTE PTR [rax],al
   14005502d:	add    DWORD PTR [rcx],0x181e200
   140055033:	add    BYTE PTR [rax],al
   140055035:	mov    al,BYTE PTR [rax+rax*1]
   140055038:	in     al,0x81
   14005503a:	add    DWORD PTR [rax],eax
   14005503c:	rol    BYTE PTR [rdx-0x73d7ffff],cl
   140055042:	add    al,0x0
   140055044:	(bad)  
   140055045:	(bad)  
   140055046:	add    DWORD PTR [rax],eax
   140055048:	and    eax,DWORD PTR [rbx+0x45a40001]
   14005504e:	add    al,0x0
   140055050:	and    al,0x83
   140055052:	add    DWORD PTR [rax],eax
   140055054:	push   rbx
   140055055:	add    DWORD PTR [rcx],0x0
   140055058:	in     al,0x61
   14005505a:	add    al,0x0
   14005505c:	push   rsp
   14005505d:	add    DWORD PTR [rcx],0x0
   140055060:	test   BYTE PTR es:[rcx],al
   140055063:	add    BYTE PTR [rax+0x2800048d],al
   140055069:	test   BYTE PTR [rcx],al
   14005506b:	add    BYTE PTR [rbx+0x38000185],ch
   140055071:	lea    eax,[rax+rax*1]
   140055074:	lods   al,BYTE PTR ds:[rsi]
   140055075:	test   DWORD PTR [rcx],eax
   140055077:	add    cl,cl
   140055079:	xchg   BYTE PTR [rcx],al
   14005507b:	add    BYTE PTR [rsp+rcx*4-0x7933fffc],bl
   140055082:	add    DWORD PTR [rax],eax
   140055084:	pop    rcx
   140055085:	xchg   DWORD PTR [rcx],eax
   140055087:	add    BYTE PTR [rax],ch
   140055089:	rex.W add al,0x0
   14005508c:	pop    rsp
   14005508d:	xchg   DWORD PTR [rcx],eax
   14005508f:	add    BYTE PTR [rbp+0x4c000187],dh
   140055095:	lea    eax,[rax+rax*1]
   140055098:	(bad)  
   140055099:	xchg   DWORD PTR [rcx],eax
   14005509b:	add    dl,ch
   14005509d:	xchg   DWORD PTR [rcx],eax
   14005509f:	add    BYTE PTR [rbp+rax*2-0x7813fffc],ah
   1400550a6:	add    DWORD PTR [rax],eax
   1400550a8:	sbb    ecx,DWORD PTR [rax+0x61e40001]
   1400550ae:	add    al,0x0
   1400550b0:	sbb    al,0x88
   1400550b2:	add    DWORD PTR [rax],eax
   1400550b4:	pop    rsp
   1400550b5:	mov    BYTE PTR [rcx],al
   1400550b7:	add    BYTE PTR [rax+0x5c000495],cl
   1400550bd:	mov    BYTE PTR [rcx],al
   1400550bf:	add    BYTE PTR [rcx+0x10000188],dh
   1400550c5:	xchg   ebp,eax
   1400550c6:	add    al,0x0
   1400550c8:	mov    ah,0x88
   1400550ca:	add    DWORD PTR [rax],eax
   1400550cc:	(bad)  
   1400550cd:	mov    eax,DWORD PTR [rcx]
   1400550cf:	add    BYTE PTR [rax],dh
   1400550d1:	xchg   esp,eax
   1400550d2:	add    al,0x0
   1400550d4:	adc    BYTE PTR [rbx-0x7439ffff],cl
   1400550da:	add    DWORD PTR [rax],eax
   1400550dc:	mov    eax,0xc8000493
   1400550e1:	mov    eax,DWORD PTR [rcx]
   1400550e3:	add    BYTE PTR [rsp+rcx*4],bl
   1400550e6:	add    DWORD PTR [rax],eax
   1400550e8:	test   al,0x93
   1400550ea:	add    al,0x0
   1400550ec:	sbb    al,0x8c
   1400550ee:	add    DWORD PTR [rax],eax
   1400550f0:	sbb    DWORD PTR [rbp-0x702fffff],edx
   1400550f6:	add    al,0x0
   1400550f8:	sbb    al,0x95
   1400550fa:	add    DWORD PTR [rax],eax
   1400550fc:	int    0x96
   1400550fe:	add    DWORD PTR [rax],eax
   140055100:	ins    BYTE PTR es:[rdi],dx
   140055101:	pop    QWORD PTR [rax+rax*1]
   140055104:	(bad)  
   140055105:	xchg   esi,eax
   140055106:	add    DWORD PTR [rax],eax
   140055108:	(bad)  
   140055109:	xchg   edi,eax
   14005510a:	add    DWORD PTR [rax],eax
   14005510c:	add    al,0x86
   14005510e:	add    al,0x0
   140055110:	sbb    BYTE PTR [rdi-0x67ebffff],dl
   140055116:	add    DWORD PTR [rax],eax
   140055118:	and    BYTE PTR [rdi-0x67ebfffc],cl
   14005511e:	add    DWORD PTR [rax],eax
   140055120:	xchg   ebp,eax
   140055121:	cwde   
   140055122:	add    DWORD PTR [rax],eax
   140055124:	xchg   esp,eax
   140055125:	movabs eax,ds:0x9950000198980004
   14005512e:	add    DWORD PTR [rax],eax
   140055130:	clc    
   140055131:	mov    es,WORD PTR [rax+rax*1]
   140055134:	push   rax
   140055135:	cdq    
   140055136:	add    DWORD PTR [rax],eax
   140055138:	and    eax,0xcc00019a
   14005513d:	mov    es,WORD PTR [rax+rax*1]
   140055140:	sub    BYTE PTR [rdx-0x6525ffff],bl
   140055146:	add    DWORD PTR [rax],eax
   140055148:	cwde   
   140055149:	mov    es,WORD PTR [rax+rax*1]
   14005514c:	in     al,0x9a
   14005514e:	add    DWORD PTR [rax],eax
   140055150:	loop   0x1400550ed
   140055152:	add    DWORD PTR [rax],eax
   140055154:	rex mov es,WORD PTR [rax+rax*1]
   140055158:	in     al,0x9b
   14005515a:	add    DWORD PTR [rax],eax
   14005515c:	outs   dx,DWORD PTR ds:[rsi]
   14005515d:	pushf  
   14005515e:	add    DWORD PTR [rax],eax
   140055160:	and    BYTE PTR [rsi-0x638ffffc],cl
   140055166:	add    DWORD PTR [rax],eax
   140055168:	mov    WORD PTR [rbp+0x63fc0001],ds
   14005516e:	add    al,0x0
   140055170:	mov    WORD PTR [rbp-0x61aaffff],ds
   140055176:	add    DWORD PTR [rax],eax
   140055178:	add    BYTE PTR [rsi+0x4],0x0
   14005517c:	fs sahf 
   14005517e:	add    DWORD PTR [rax],eax
   140055180:	xchg   ebx,eax
   140055181:	sahf   
   140055182:	add    DWORD PTR [rax],eax
   140055184:	in     al,0x61
   140055186:	add    al,0x0
   140055188:	xchg   esp,eax
   140055189:	sahf   
   14005518a:	add    DWORD PTR [rax],eax
   14005518c:	(bad)  
   14005518d:	sahf   
   14005518e:	add    DWORD PTR [rax],eax
   140055190:	and    al,0x96
   140055192:	add    al,0x0
   140055194:	fcomp  DWORD PTR [rsi-0x6060ffff]
   14005519a:	add    DWORD PTR [rax],eax
   14005519c:	or     BYTE PTR [rsi-0x605ffffc],dl
   1400551a2:	add    DWORD PTR [rax],eax
   1400551a4:	mov    al,0x9f
   1400551a6:	add    DWORD PTR [rax],eax
   1400551a8:	add    al,0x86
   1400551aa:	add    al,0x0
   1400551ac:	rcr    BYTE PTR [rdi-0x5f2fffff],0x1
   1400551b3:	add    al,bh
   1400551b5:	xchg   esi,eax
   1400551b6:	add    al,0x0
   1400551b8:	shl    BYTE PTR [rax-0x5f00ffff],1
   1400551be:	add    DWORD PTR [rax],eax
   1400551c0:	in     al,0x61
   1400551c2:	add    al,0x0
   1400551c4:	add    BYTE PTR [rcx-0x5ea4ffff],ah
   1400551ca:	add    DWORD PTR [rax],eax
   1400551cc:	mov    al,0x96
   1400551ce:	add    al,0x0
   1400551d0:	pop    rsp
   1400551d1:	movabs eax,ds:0x86040001a1890001
   1400551da:	add    al,0x0
   1400551dc:	mov    WORD PTR [rcx-0x5dd6ffff],fs
   1400551e2:	add    DWORD PTR [rax],eax
   1400551e4:	or     BYTE PTR [rdx+0x4],bl
   1400551e7:	add    BYTE PTR [rdx+riz*4],ch
   1400551ea:	add    DWORD PTR [rax],eax
   1400551ec:	cwde   
   1400551ed:	movabs ds:0xa298000448280001,al
   1400551f6:	add    DWORD PTR [rax],eax
   1400551f8:	(bad)  
   1400551f9:	movabs ds:0xa2d8000461e40001,al
   140055202:	add    DWORD PTR [rax],eax
   140055204:	rex.B movabs ds:0xa344000487100001,eax
   14005520e:	add    DWORD PTR [rax],eax
   140055210:	mov    ebp,0xa40001a3
   140055215:	xchg   esi,eax
   140055216:	add    al,0x0
   140055218:	shl    BYTE PTR [rbx-0x5b66ffff],0x1
   14005521f:	add    BYTE PTR [rax-0x63fffb6a],bl
   140055225:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055226:	add    DWORD PTR [rax],eax
   140055228:	(bad)  
   140055229:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005522a:	add    DWORD PTR [rax],eax
   14005522c:	adc    al,0xa0
   14005522e:	add    al,0x0
   140055230:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140055232:	add    DWORD PTR [rax],eax
   140055234:	adc    ebp,DWORD PTR [rdx-0x69b3ffff]
   14005523a:	add    al,0x0
   14005523c:	adc    al,0xaa
   14005523e:	add    DWORD PTR [rax],eax
   140055240:	mov    esp,0x940001aa
   140055245:	movabs eax,ds:0xaae20001aabc0004
   14005524e:	add    DWORD PTR [rax],eax
   140055250:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055251:	rex.RB add al,0x0
   140055254:	lock stos BYTE PTR es:[rdi],al
   140055256:	add    DWORD PTR [rax],eax
   140055258:	(bad)  
   140055259:	stos   DWORD PTR es:[rdi],eax
   14005525a:	add    DWORD PTR [rax],eax
   14005525c:	in     al,0x61
   14005525e:	add    al,0x0
   140055260:	and    BYTE PTR [rbx-0x53a2ffff],ch
   140055266:	add    DWORD PTR [rax],eax
   140055268:	fcomp  QWORD PTR [rsp+rax*1+0x1ac6000]
   14005526f:	add    BYTE PTR [rsi+rbp*4],ah
   140055272:	add    DWORD PTR [rax],eax
   140055274:	rcr    BYTE PTR [rsp+rax*1+0x1ae2400],0x0
   14005527c:	outs   dx,BYTE PTR ds:[rsi]
   14005527d:	mov    bl,0x1
   14005527f:	add    al,bl
   140055281:	fwait
   140055282:	add    al,0x0
   140055284:	jo     0x140055239
   140055286:	add    DWORD PTR [rax],eax
   140055288:	movabs eax,ds:0xa4000448280001b4
   140055291:	mov    ah,0x1
   140055293:	add    ch,dl
   140055295:	mov    ch,0x1
   140055297:	add    BYTE PTR [rax],ch
   140055299:	rex.W add al,0x0
   14005529c:	fdiv   DWORD PTR [rbp-0x49b2ffff]
   1400552a2:	add    DWORD PTR [rax],eax
   1400552a4:	xchg   esp,eax
   1400552a5:	movabs eax,ds:0xb6c50001b6500004
   1400552ae:	add    DWORD PTR [rax],eax
   1400552b0:	xchg   esp,eax
   1400552b1:	movabs eax,ds:0xb8070001b6c80004
   1400552ba:	add    DWORD PTR [rax],eax
   1400552bc:	fs fwait
   1400552be:	add    al,0x0
   1400552c0:	or     BYTE PTR [rax-0x4707ffff],bh
   1400552c6:	add    DWORD PTR [rax],eax
   1400552c8:	call   0x138055767
   1400552cd:	mov    eax,0xb9ad0001
   1400552d2:	add    DWORD PTR [rax],eax
   1400552d4:	js     0x140055270
   1400552d6:	add    al,0x0
   1400552d8:	mov    al,0xb9
   1400552da:	add    DWORD PTR [rax],eax
   1400552dc:	je     0x140055298
   1400552de:	add    DWORD PTR [rax],eax
   1400552e0:	add    BYTE PTR [rdx-0x458bfffc],bl
   1400552e6:	add    DWORD PTR [rax],eax
   1400552e8:	sub    DWORD PTR [rbx-0x666fffff],edi
   1400552ee:	add    al,0x0
   1400552f0:	ins    BYTE PTR es:[rdi],dx
   1400552f1:	mov    ebx,0xbbcc0001
   1400552f6:	add    DWORD PTR [rax],eax
   1400552f8:	adc    al,0x55
   1400552fa:	add    al,0x0
   1400552fc:	int3   
   1400552fd:	mov    ebx,0xbc2c0001
   140055302:	add    DWORD PTR [rax],eax
   140055304:	adc    al,0x55
   140055306:	add    al,0x0
   140055308:	sub    al,0xbc
   14005530a:	add    DWORD PTR [rax],eax
   14005530c:	(bad)  
   14005530d:	mov    esp,0xa1940001
   140055312:	add    al,0x0
   140055314:	(bad)  
   140055315:	mov    esp,0xbdcb0001
   14005531a:	add    DWORD PTR [rax],eax
   14005531c:	sub    BYTE PTR [rax+0x4],cl
   14005531f:	add    BYTE PTR [rsi+rdi*4+0x1],cl
   140055323:	add    BYTE PTR [rcx-0xbfffe41],dl
   140055329:	cwde   
   14005532a:	add    al,0x0
   14005532c:	or     al,al
   14005532e:	add    DWORD PTR [rax],eax
   140055330:	outs   dx,DWORD PTR ds:[rsi]
   140055331:	rol    DWORD PTR [rcx],0x0
   140055334:	cmp    BYTE PTR [rax-0x3e8ffffc],bl
   14005533a:	add    DWORD PTR [rax],eax
   14005533c:	sub    eax,edx
   14005533e:	add    DWORD PTR [rax],eax
   140055340:	add    al,0x98
   140055342:	add    al,0x0
   140055344:	sub    al,0xc2
   140055346:	add    DWORD PTR [rax],eax
   140055348:	xor    eax,ebx
   14005534a:	add    DWORD PTR [rax],eax
   14005534c:	sub    BYTE PTR [rax+0x4],cl
   14005534f:	add    BYTE PTR [rbx+rax*8],dh
   140055352:	add    DWORD PTR [rax],eax
   140055354:	jle    0x14005531a
   140055356:	add    DWORD PTR [rax],eax
   140055358:	push   0xffffffff80000497
   14005535d:	(bad)
   140055361:	(bad)
   140055364:	in     al,0x61
   140055366:	add    al,0x0
   140055368:	add    ch,al
   14005536a:	add    DWORD PTR [rax],eax
   14005536c:	(bad)  
   14005536d:	(bad)
   140055370:	push   rax
   140055371:	xchg   edi,eax
   140055372:	add    al,0x0
   140055374:	cmp    ch,al
   140055376:	add    DWORD PTR [rax],eax
   140055378:	imul   eax,edi,0x9d780001
   14005537e:	add    al,0x0
   140055380:	ins    BYTE PTR es:[rdi],dx
   140055381:	mov    DWORD PTR [rcx],0x1c87300
   140055387:	add    BYTE PTR [rax-0x63],ah
   14005538a:	add    al,0x0
   14005538c:	je     0x140055356
   14005538e:	add    DWORD PTR [rax],eax
   140055390:	(bad)  
   140055392:	add    DWORD PTR [rax],eax
   140055394:	mov    DWORD PTR [rax+rax*1],r8d
   140055398:	loopne 0x140055362
   14005539a:	add    DWORD PTR [rax],eax
   14005539c:	sbb    eax,0x500001c9
   1400553a1:	rex.XB add al,0x0
   1400553a4:	and    cl,cl
   1400553a6:	add    DWORD PTR [rax],eax
   1400553a8:	mov    edi,0x440001cb
   1400553ad:	popf   
   1400553ae:	add    al,0x0
   1400553b0:	ror    bl,0x1
   1400553b3:	add    BYTE PTR [rdi],dl
   1400553b5:	int3   
   1400553b6:	add    DWORD PTR [rax],eax
   1400553b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400553b9:	xchg   esi,eax
   1400553ba:	add    al,0x0
   1400553bc:	sbb    ah,cl
   1400553be:	add    DWORD PTR [rax],eax
   1400553c0:	gs int3 
   1400553c2:	add    DWORD PTR [rax],eax
   1400553c4:	cmp    al,0x9d
   1400553c6:	add    al,0x0
   1400553c8:	mov    esp,cs
   1400553ca:	add    DWORD PTR [rax],eax
   1400553cc:	movabs al,ds:0xa000049d280001cd
   1400553d5:	int    0x1
   1400553d7:	add    bh,cl
   1400553d9:	int    0x1
   1400553db:	add    ah,ah
   1400553dd:	(bad)  
   1400553de:	add    al,0x0
   1400553e0:	ror    ch,1
   1400553e2:	add    DWORD PTR [rax],eax
   1400553e4:	(bad)  
   1400553e5:	(bad)  
   1400553e6:	add    DWORD PTR [rax],eax
   1400553e8:	xchg   esp,eax
   1400553e9:	movabs eax,ds:0xcea20001ce180004
   1400553f2:	add    DWORD PTR [rax],eax
   1400553f4:	in     al,0x9e
   1400553f6:	add    al,0x0
   1400553f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400553f9:	(bad)  
   1400553fa:	add    DWORD PTR [rax],eax
   1400553fc:	jno    0x1400553cd
   1400553fe:	add    DWORD PTR [rax],eax
   140055400:	jl     0x1400553a0
   140055402:	add    al,0x0
   140055404:	je     0x1400553d5
   140055406:	add    DWORD PTR [rax],eax
   140055408:	jmp    0x1400553da
   14005540a:	add    DWORD PTR [rax],eax
   14005540c:	cmp    al,0x9e
   14005540e:	add    al,0x0
   140055410:	in     al,dx
   140055411:	rol    BYTE PTR [rcx],1
   140055413:	add    BYTE PTR [rsi],dl
   140055415:	rol    BYTE PTR [rcx],cl
   140055417:	add    BYTE PTR [rsi+rbx*4],al
   14005541a:	add    al,0x0
   14005541c:	sbb    dl,dl
   14005541e:	add    DWORD PTR [rax],eax
   140055420:	fcmovbe st,st(2)
   140055422:	add    DWORD PTR [rax],eax
   140055424:	mov    al,0x9e
   140055426:	add    al,0x0
   140055428:	(bad)  
   14005542a:	add    DWORD PTR [rax],eax
   14005542c:	(bad)  
   14005542d:	rol    DWORD PTR [rcx],cl
   14005542f:	add    BYTE PTR [rax+0x2000049f],cl
   140055435:	rol    DWORD PTR [rcx],cl
   140055437:	add    cl,ah
   140055439:	rol    DWORD PTR [rcx],cl
   14005543b:	add    BYTE PTR [rax-0x61],dh
   14005543e:	add    al,0x0
   140055440:	in     al,0xd3
   140055442:	add    DWORD PTR [rax],eax
   140055444:	jo     0x14005541a
   140055446:	add    DWORD PTR [rax],eax
   140055448:	pop    rsp
   140055449:	lahf   
   14005544a:	add    al,0x0
   14005544c:	jo     0x140055422
   14005544e:	add    DWORD PTR [rax],eax
   140055450:	and    eax,0x480001d5
   140055455:	lahf   
   140055456:	add    al,0x0
   140055458:	sub    ch,dl
   14005545a:	add    DWORD PTR [rax],eax
   14005545c:	stc    
   14005545d:	(bad)  
   14005545e:	add    DWORD PTR [rax],eax
   140055460:	sub    al,0x9f
   140055462:	add    al,0x0
   140055464:	cld    
   140055465:	(bad)  
   140055466:	add    DWORD PTR [rax],eax
   140055468:	sub    edx,edi
   14005546a:	add    DWORD PTR [rax],eax
   14005546c:	in     al,0x61
   14005546e:	add    al,0x0
   140055470:	sub    al,0xd7
   140055472:	add    DWORD PTR [rax],eax
   140055474:	hlt    
   140055475:	fild   WORD PTR [rcx]
   140055477:	add    ah,cl
   140055479:	lahf   
   14005547a:	add    al,0x0
   14005547c:	hlt    
   14005547d:	fild   WORD PTR [rcx]
   14005547f:	add    BYTE PTR [rax-0x20],bl
   140055482:	add    DWORD PTR [rax],eax
   140055484:	nop
   140055485:	lahf   
   140055486:	add    al,0x0
   140055488:	pop    rax
   140055489:	loopne 0x14005548c
   14005548b:	add    BYTE PTR [rdx-0x6bfffe20],dh
   140055491:	movabs eax,ds:0xe10f0001e0b40004
   14005549a:	add    DWORD PTR [rax],eax
   14005549c:	adc    al,0xa0
   14005549e:	add    al,0x0
   1400554a0:	adc    cl,ah
   1400554a2:	add    DWORD PTR [rax],eax
   1400554a4:	(bad)  
   1400554a5:	loope  0x1400554a8
   1400554a7:	add    BYTE PTR [rax-0x60],bh
   1400554aa:	add    al,0x0
   1400554ac:	pushf  
   1400554ad:	loope  0x1400554b0
   1400554af:	add    BYTE PTR [rax+0x200001e2],bh
   1400554b5:	movabs al,ds:0xe7ca0001e2b80004
   1400554be:	add    DWORD PTR [rax],eax
   1400554c0:	pop    rsp
   1400554c1:	movabs al,ds:0xe8e60001e7cc0004
   1400554ca:	add    DWORD PTR [rax],eax
   1400554cc:	and    BYTE PTR [rdi-0x1717fffc],al
   1400554d2:	add    DWORD PTR [rax],eax
   1400554d4:	rex.X jmp 0xe19954db
   1400554da:	add    al,0x0
   1400554dc:	rex.R jmp 0x129a454e3
   1400554e2:	add    DWORD PTR [rax],eax
   1400554e4:	adc    al,0xa0
   1400554e6:	add    al,0x0
   1400554e8:	movabs al,ds:0xd40001e9c50001e9
   1400554f1:	movabs al,ds:0xea170001e9c80004
   1400554fa:	add    DWORD PTR [rax],eax
   1400554fc:	in     al,0x61
   1400554fe:	add    al,0x0
   140055500:	sbb    dl,ch
   140055502:	add    DWORD PTR [rax],eax
   140055504:	jo     0x1400554f0
   140055506:	add    DWORD PTR [rax],eax
   140055508:	in     al,0x61
   14005550a:	add    al,0x0
   14005550c:	jo     0x1400554f8
   14005550e:	add    DWORD PTR [rax],eax
   140055510:	xchg   bl,ch
   140055512:	add    DWORD PTR [rax],eax
   140055514:	and    BYTE PTR [rdi-0x1477fffc],al
   14005551a:	add    DWORD PTR [rax],eax
   14005551c:	sbb    al,0xec
   14005551e:	add    DWORD PTR [rax],eax
   140055520:	xchg   esp,eax
   140055521:	movabs eax,ds:0xec720001ec1c0004
   14005552a:	add    DWORD PTR [rax],eax
   14005552c:	rex.WR movabs rax,ds:0xede10001ec740004
   140055536:	add    DWORD PTR [rax],eax
   140055538:	hlt    
   140055539:	movabs al,ds:0xee3e0001ede40004
   140055542:	add    DWORD PTR [rax],eax
   140055544:	xchg   esp,eax
   140055545:	movabs eax,ds:0xee9b0001ee400004
   14005554e:	add    DWORD PTR [rax],eax
   140055550:	adc    al,0xa0
   140055552:	add    al,0x0
   140055554:	pushf  
   140055555:	out    dx,al
   140055556:	add    DWORD PTR [rax],eax
   140055558:	hlt    
   140055559:	out    dx,al
   14005555a:	add    DWORD PTR [rax],eax
   14005555c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005555d:	movabs eax,ds:0xef980001eef40004
   140055566:	add    DWORD PTR [rax],eax
   140055568:	sub    BYTE PTR [rax+0x4],cl
   14005556b:	add    BYTE PTR [rax+0x3a0001ef],bl
   140055571:	lock add DWORD PTR [rax],eax
   140055574:	sub    BYTE PTR [rax+0x4],cl
   140055577:	add    BYTE PTR [rax+rsi*8],bh
   14005557a:	add    DWORD PTR [rax],eax
   14005557c:	mov    bl,0xf0
   14005557e:	add    DWORD PTR [rax],eax
   140055580:	sub    BYTE PTR [rax+0x4],cl
   140055583:	add    BYTE PTR [rax+rsi*8-0xeeeffff],dh
   14005558a:	add    DWORD PTR [rax],eax
   14005558c:	xchg   esp,eax
   14005558d:	movabs eax,ds:0xf1720001f1140004
   140055596:	add    DWORD PTR [rax],eax
   140055598:	adc    al,0xa0
   14005559a:	add    al,0x0
   14005559c:	je     0x14005558f
   14005559e:	add    DWORD PTR [rax],eax
   1400555a0:	fdivr  st(1),st
   1400555a2:	add    DWORD PTR [rax],eax
   1400555a4:	hlt    
   1400555a5:	movabs eax,ds:0xf2410001f1dc0004
   1400555ae:	add    DWORD PTR [rax],eax
   1400555b0:	sub    BYTE PTR [rax+0x4],cl
   1400555b3:	add    BYTE PTR [rdx+rsi*8+0x1],ah
   1400555b7:	add    bh,bl
   1400555b9:	repnz add DWORD PTR [rax],eax
   1400555bc:	movabs fs:0xf3210001f2e00004,al
   1400555c6:	add    DWORD PTR [rax],eax
   1400555c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400555c9:	rex.RB add al,0x0
   1400555cc:	and    al,0xf3
   1400555ce:	add    DWORD PTR [rax],eax
   1400555d0:	push   rdi
   1400555d1:	repz add DWORD PTR [rax],eax
   1400555d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400555d5:	rex.RB add al,0x0
   1400555d8:	pop    rax
   1400555d9:	repz add DWORD PTR [rax],eax
   1400555dc:	and    dh,ah
   1400555de:	add    DWORD PTR [rax],eax
   1400555e0:	push   rsp
   1400555e1:	movabs ds:0xf47e0001f4240004,al
   1400555ea:	add    DWORD PTR [rax],eax
   1400555ec:	xchg   esp,eax
   1400555ed:	movabs eax,ds:0xf4db0001f4800004
   1400555f6:	add    DWORD PTR [rax],eax
   1400555f8:	adc    al,0xa0
   1400555fa:	add    al,0x0
   1400555fc:	fdivr  st(4),st
   1400555fe:	add    DWORD PTR [rax],eax
   140055600:	pop    rbx
   140055601:	cmc    
   140055602:	add    DWORD PTR [rax],eax
   140055604:	call   0x19c055aab
   140055609:	cmc    
   14005560a:	add    DWORD PTR [rax],eax
   14005560c:	repz test DWORD PTR [rcx],0x4a2cc00
   140055613:	add    ah,dh
   140055615:	test   DWORD PTR [rcx],0x1f87c00
   14005561b:	add    BYTE PTR [rax],bh
   14005561d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005561e:	add    al,0x0
   140055620:	jl     0x14005561a
   140055622:	add    DWORD PTR [rax],eax
   140055624:	cmc    
   140055625:	clc    
   140055626:	add    DWORD PTR [rax],eax
   140055628:	mov    eax,0xf80004a2
   14005562d:	clc    
   14005562e:	add    DWORD PTR [rax],eax
   140055630:	jo     0x14005562c
   140055632:	add    DWORD PTR [rax],eax
   140055634:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055635:	movabs ds:0xfb070001fa700004,al
   14005563e:	add    DWORD PTR [rax],eax
   140055640:	in     al,0x61
   140055642:	add    al,0x0
   140055644:	or     bl,bh
   140055646:	add    DWORD PTR [rax],eax
   140055648:	mov    ebx,0x900001fb
   14005564d:	movabs ds:0xfcd80001fbbc0004,al
   140055656:	add    DWORD PTR [rax],eax
   140055658:	push   0xffffffffd80004a3
   14005565d:	cld    
   14005565e:	add    DWORD PTR [rax],eax
   140055660:	add    bh,ch
   140055662:	add    DWORD PTR [rax],eax
   140055664:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055665:	rex.RB add al,0x0
   140055668:	sub    al,0xfd
   14005566a:	add    DWORD PTR [rax],eax
   14005566c:	push   rbp
   14005566d:	std    
   14005566e:	add    DWORD PTR [rax],eax
   140055670:	mov    eax,0x800004a3
   140055675:	std    
   140055676:	add    DWORD PTR [rax],eax
   140055678:	test   eax,0xd80001fd
   14005567d:	movabs ds:0xfdf50001fdac0004,eax
   140055686:	add    DWORD PTR [rax],eax
   140055688:	push   rax
   140055689:	rex.XB add al,0x0
   14005568c:	clc    
   14005568d:	std    
   14005568e:	add    DWORD PTR [rax],eax
   140055690:	rex.WX inc BYTE PTR [rcx]
   140055693:	add    BYTE PTR [rax+0x43],dl
   140055696:	add    al,0x0
   140055698:	rex.WR inc BYTE PTR [rcx]
   14005569b:	add    BYTE PTR [rcx],al
   14005569d:	add    BYTE PTR [rdx],al
   14005569f:	add    BYTE PTR [riz*4+0x40004],al
   1400556a6:	add    al,BYTE PTR [rax]
   1400556a8:	(bad)  
   1400556a9:	add    BYTE PTR [rdx],al
   1400556ab:	add    ah,ch
   1400556ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400556ae:	add    al,0x0
   1400556b0:	in     al,dx
   1400556b1:	add    BYTE PTR [rdx],al
   1400556b3:	add    bh,dl
   1400556b5:	add    DWORD PTR [rdx],eax
   1400556b7:	add    BYTE PTR [rax],ch
   1400556b9:	rex.W add al,0x0
   1400556bc:	fadd   DWORD PTR [rcx]
   1400556be:	add    al,BYTE PTR [rax]
   1400556c0:	mov    ebx,0x90000206
   1400556c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400556c6:	add    al,0x0
   1400556c8:	mov    esp,0x16000206
   1400556cd:	or     DWORD PTR [rdx],eax
   1400556cf:	add    BYTE PTR [rax],bh
   1400556d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400556d2:	add    al,0x0
   1400556d4:	sbb    BYTE PTR [rcx],cl
   1400556d6:	add    al,BYTE PTR [rax]
   1400556d8:	jb     0x1400556e5
   1400556da:	add    al,BYTE PTR [rax]
   1400556dc:	lock movabs ds:0xc3100020b740004,eax
   1400556e6:	add    al,BYTE PTR [rax]
   1400556e8:	and    BYTE PTR [rdi+0xc340004],al
   1400556ee:	add    al,BYTE PTR [rax]
   1400556f0:	movsxd ecx,DWORD PTR [rdx+rax*1]
   1400556f3:	add    ah,ah
   1400556f5:	(bad)  
   1400556f6:	add    al,0x0
   1400556f8:	fs or  al,0x2
   1400556fb:	add    BYTE PTR [rax+0x800020c],ch
   140055701:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055702:	add    al,0x0
   140055704:	test   al,0xc
   140055706:	add    al,BYTE PTR [rax]
   140055708:	sbb    cl,BYTE PTR [rsi]
   14005570a:	add    al,BYTE PTR [rax]
   14005570c:	clc    
   14005570d:	cmp    eax,DWORD PTR [rax+rax*1]
   140055710:	sbb    al,0xe
   140055712:	add    al,BYTE PTR [rax]
   140055714:	cs (bad) 
   140055716:	add    al,BYTE PTR [rax]
   140055718:	add    al,0x86
   14005571a:	add    al,0x0
   14005571c:	push   rax
   14005571d:	(bad)  
   14005571e:	add    al,BYTE PTR [rax]
   140055720:	outs   dx,DWORD PTR ds:[rsi]
   140055721:	(bad)  
   140055722:	add    al,BYTE PTR [rax]
   140055724:	and    BYTE PTR [rsp+rax*1],bh
   140055727:	add    BYTE PTR [rax+0x6400020e],al
   14005572d:	adc    eax,DWORD PTR [rdx]
   14005572f:	add    BYTE PTR [rax],ch
   140055731:	cmp    al,0x4
   140055733:	add    BYTE PTR [rbx+rdx*1+0x2],ah
   140055737:	add    ah,bh
   140055739:	adc    eax,DWORD PTR [rdx]
   14005573b:	add    ah,ah
   14005573d:	(bad)  
   14005573e:	add    al,0x0
   140055740:	cld    
   140055741:	adc    eax,DWORD PTR [rdx]
   140055743:	add    BYTE PTR [rsp+rdx*1],ch
   140055746:	add    al,BYTE PTR [rax]
   140055748:	add    al,0x86
   14005574a:	add    al,0x0
   14005574c:	xor    al,0x14
   14005574e:	add    al,BYTE PTR [rax]
   140055750:	cdq    
   140055751:	adc    al,0x2
   140055753:	add    BYTE PTR [rbp+rax*2+0x149c0004],ah
   14005575a:	add    al,BYTE PTR [rax]
   14005575c:	int    0x14
   14005575e:	add    al,BYTE PTR [rax]
   140055760:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055761:	rex.RB add al,0x0
   140055764:	rex adc eax,0x158c0002
   14005576a:	add    al,BYTE PTR [rax]
   14005576c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005576d:	rex.RB add al,0x0
   140055770:	mov    WORD PTR [rip+0x16050002],ss        # 0x1560a5778
   140055776:	add    al,BYTE PTR [rax]
   140055778:	xchg   esp,eax
   140055779:	movabs eax,ds:0x1657000216140004
   140055782:	add    al,BYTE PTR [rax]
   140055784:	sub    al,0x3c
   140055786:	add    al,0x0
   140055788:	pop    rax
   140055789:	(bad)  
   14005578a:	add    al,BYTE PTR [rax]
   14005578c:	ds (bad) 
   14005578e:	add    al,BYTE PTR [rax]
   140055790:	push   rax
   140055791:	cmp    al,0x4
   140055793:	add    BYTE PTR [rax+0x17],al
   140055796:	add    al,BYTE PTR [rax]
   140055798:	adc    DWORD PTR [rdi],0x2
   14005579b:	add    BYTE PTR [rbp+rax*2+0x17840004],ah
   1400557a2:	add    al,BYTE PTR [rax]
   1400557a4:	mov    ds,WORD PTR [rax]
   1400557a6:	add    al,BYTE PTR [rax]
   1400557a8:	nop
   1400557a9:	cmp    al,0x4
   1400557ab:	add    BYTE PTR [rax-0x58fffde8],dl
   1400557b1:	sbb    BYTE PTR [rdx],al
   1400557b3:	add    BYTE PTR [rsi+rax*4],al
   1400557b6:	add    al,0x0
   1400557b8:	rcr    BYTE PTR [rax],0x2
   1400557bb:	add    dh,dl
   1400557bd:	sbb    BYTE PTR [rdx],al
   1400557bf:	add    BYTE PTR [rdi+rdi*1],al
   1400557c2:	add    al,0x0
   1400557c4:	fcomp  DWORD PTR [rax]
   1400557c6:	add    al,BYTE PTR [rax]
   1400557c8:	(bad)  
   1400557c9:	sbb    DWORD PTR [rdx],eax
   1400557cb:	add    al,al
   1400557cd:	cmp    al,0x4
   1400557cf:	add    ah,dl
   1400557d1:	sbb    DWORD PTR [rdx],eax
   1400557d3:	add    BYTE PTR [rax],cl
   1400557d5:	sbb    al,BYTE PTR [rdx]
   1400557d7:	add    BYTE PTR [rsi+rax*4],al
   1400557da:	add    al,0x0
   1400557dc:	or     BYTE PTR [rdx],bl
   1400557de:	add    al,BYTE PTR [rax]
   1400557e0:	sbb    al,BYTE PTR es:[rdx]
   1400557e3:	add    BYTE PTR [rsi+rax*4],al
   1400557e6:	add    al,0x0
   1400557e8:	sub    BYTE PTR [rdx],bl
   1400557ea:	add    al,BYTE PTR [rax]
   1400557ec:	(bad)  
   1400557ed:	sbb    al,BYTE PTR [rdx]
   1400557ef:	add    ah,ah
   1400557f1:	(bad)  
   1400557f2:	add    al,0x0
   1400557f4:	sbb    al,BYTE PTR fs:[rdx]
   1400557f7:	add    BYTE PTR [rbp-0x5bfffde6],al
   1400557fd:	rex.RB add al,0x0
   140055800:	cwde   
   140055801:	sbb    al,BYTE PTR [rdx]
   140055803:	add    BYTE PTR [rcx],al
   140055805:	sbb    eax,DWORD PTR [rdx]
   140055807:	add    al,bh
   140055809:	rex.W add al,0x0
   14005580c:	add    al,0x1b
   14005580e:	add    al,BYTE PTR [rax]
   140055810:	cmp    eax,0xe400021b
   140055815:	(bad)  
   140055816:	add    al,0x0
   140055818:	rex sbb eax,DWORD PTR [rdx]
   14005581b:	add    BYTE PTR [rax+0x1b],bh
   14005581e:	add    al,BYTE PTR [rax]
   140055820:	add    al,0x86
   140055822:	add    al,0x0
   140055824:	js     0x140055841
   140055826:	add    al,BYTE PTR [rax]
   140055828:	(bad)  
   140055829:	sbb    eax,DWORD PTR [rdx]
   14005582b:	add    BYTE PTR [rsi+rax*4],al
   14005582e:	add    al,0x0
   140055830:	nop
   140055831:	sbb    eax,DWORD PTR [rdx]
   140055833:	add    BYTE PTR [rbp+rbx*1+0x2],bl
   140055837:	add    BYTE PTR [rax],ch
   140055839:	rex.W add al,0x0
   14005583c:	fs sbb eax,0x1e970002
   140055842:	add    al,BYTE PTR [rax]
   140055844:	fdivr  DWORD PTR [rsp+rax*1]
   140055847:	add    BYTE PTR [rax-0x2bfffde2],bl
   14005584d:	(bad)  
   14005584e:	add    al,BYTE PTR [rax]
   140055850:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055851:	rex.RB add al,0x0
   140055854:	(bad)  
   140055855:	(bad)  
   140055856:	add    al,BYTE PTR [rax]
   140055858:	clc    
   140055859:	(bad)  
   14005585a:	add    al,BYTE PTR [rax]
   14005585c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005585d:	rex.RB add al,0x0
   140055860:	clc    
   140055861:	(bad)  
   140055862:	add    al,BYTE PTR [rax]
   140055864:	jp     0x140055885
   140055866:	add    al,BYTE PTR [rax]
   140055868:	in     al,0x61
   14005586a:	add    al,0x0
   14005586c:	jl     0x14005588d
   14005586e:	add    al,BYTE PTR [rax]
   140055870:	and    BYTE PTR ss:[rdx],al
   140055873:	add    BYTE PTR [rdi*1+0x20380004],cl
   14005587a:	add    al,BYTE PTR [rax]
   14005587c:	mov    bh,0x20
   14005587e:	add    al,BYTE PTR [rax]
   140055880:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055881:	rex.RB add al,0x0
   140055884:	mov    eax,0xdc000220
   140055889:	and    BYTE PTR [rdx],al
   14005588b:	add    BYTE PTR [rsi+rax*4],al
   14005588e:	add    al,0x0
   140055890:	fsub   QWORD PTR [rax]
   140055892:	add    al,BYTE PTR [rax]
   140055894:	sbb    eax,0xa4000221
   140055899:	rex.RB add al,0x0
   14005589c:	and    BYTE PTR [rcx],ah
   14005589e:	add    al,BYTE PTR [rax]
   1400558a0:	and    DWORD PTR ss:[rdx],eax
   1400558a3:	add    BYTE PTR [rbp+rax*2+0x21380004],ah
   1400558aa:	add    al,BYTE PTR [rax]
   1400558ac:	pop    rsi
   1400558ad:	and    DWORD PTR [rdx],eax
   1400558af:	add    BYTE PTR [rbp+rax*2+0x21800004],ah
   1400558b6:	add    al,BYTE PTR [rax]
   1400558b8:	(bad)  
   1400558b9:	and    al,BYTE PTR [rdx]
   1400558bb:	add    ah,ah
   1400558bd:	(bad)  
   1400558be:	add    al,0x0
   1400558c0:	cmp    al,0x22
   1400558c2:	add    al,BYTE PTR [rax]
   1400558c4:	jb     0x1400558e8
   1400558c6:	add    al,BYTE PTR [rax]
   1400558c8:	add    al,0x86
   1400558ca:	add    al,0x0
   1400558cc:	je     0x1400558f0
   1400558ce:	add    al,BYTE PTR [rax]
   1400558d0:	mov    edx,0xa4000222
   1400558d5:	rex.RB add al,0x0
   1400558d8:	mov    esp,0xef000222
   1400558dd:	and    al,BYTE PTR [rdx]
   1400558df:	add    BYTE PTR [rax+0x3d],al
   1400558e2:	add    al,0x0
   1400558e4:	lock and al,BYTE PTR [rdx]
   1400558e7:	add    BYTE PTR [rcx],ch
   1400558e9:	and    eax,DWORD PTR [rdx]
   1400558eb:	add    ah,ah
   1400558ed:	(bad)  
   1400558ee:	add    al,0x0
   1400558f0:	and    r8d,DWORD PTR [rdx]
   1400558f3:	add    cl,bl
   1400558f5:	and    al,0x2
   1400558f7:	add    BYTE PTR [rbp+rdi*1+0x4],cl
   1400558fb:	add    al,ch
   1400558fd:	and    al,0x2
   1400558ff:	add    BYTE PTR [rbx],ch
   140055901:	and    eax,0x86040002
   140055906:	add    al,0x0
   140055908:	pop    rsp
   140055909:	and    eax,0x27cb0002
   14005590e:	add    al,BYTE PTR [rax]
   140055910:	jl     0x14005594f
   140055912:	add    al,0x0
   140055914:	int3   
   140055915:	(bad)  
   140055916:	add    al,BYTE PTR [rax]
   140055918:	in     al,dx
   140055919:	(bad)  
   14005591a:	add    al,BYTE PTR [rax]
   14005591c:	add    al,0x86
   14005591e:	add    al,0x0
   140055920:	in     al,dx
   140055921:	(bad)  
   140055922:	add    al,BYTE PTR [rax]
   140055924:	(bad)  
   140055925:	sub    BYTE PTR [rdx],al
   140055927:	add    BYTE PTR [rsi+rax*4],al
   14005592a:	add    al,0x0
   14005592c:	sbb    BYTE PTR [rax],ch
   14005592e:	add    al,BYTE PTR [rax]
   140055930:	(bad)  
   140055931:	sub    BYTE PTR [rdx],al
   140055933:	add    BYTE PTR [rsi+rax*4],al
   140055936:	add    al,0x0
   140055938:	sub    BYTE PTR [rdx],al
   14005593b:	add    BYTE PTR [rbx+rbp*1+0x3da00002],dl
   140055942:	add    al,0x0
   140055944:	xchg   esp,eax
   140055945:	sub    eax,DWORD PTR [rdx]
   140055947:	add    BYTE PTR [rcx-0x7fffdd4],al
   14005594d:	cmp    eax,0x2c840004
   140055952:	add    al,BYTE PTR [rax]
   140055954:	sbb    al,0x2e
   140055956:	add    al,BYTE PTR [rax]
   140055958:	or     BYTE PTR [rsi],bh
   14005595a:	add    al,0x0
   14005595c:	sbb    al,0x2e
   14005595e:	add    al,BYTE PTR [rax]
   140055960:	push   rsp
   140055961:	(bad)  
   140055962:	add    al,BYTE PTR [rax]
   140055964:	cld    
   140055965:	movsxd eax,DWORD PTR [rax+rax*1]
   140055968:	pop    rsp
   140055969:	(bad)  
   14005596a:	add    al,BYTE PTR [rax]
   14005596c:	pushf  
   14005596d:	(bad)  
   14005596e:	add    al,BYTE PTR [rax]
   140055970:	add    al,0x86
   140055972:	add    al,0x0
   140055974:	pushf  
   140055975:	(bad)  
   140055976:	add    al,BYTE PTR [rax]
   140055978:	push   rsp
   140055979:	xor    BYTE PTR [rdx],al
   14005597b:	add    BYTE PTR [rax],ah
   14005597d:	ds add al,0x0
   140055980:	push   rsp
   140055981:	xor    BYTE PTR [rdx],al
   140055983:	add    BYTE PTR [rax+rsi*1+0x61e40002],cl
   14005598a:	add    al,0x0
   14005598c:	mov    WORD PTR [rax],?
   14005598e:	add    al,BYTE PTR [rax]
   140055990:	(bad)  
   140055991:	xor    BYTE PTR [rdx],al
   140055993:	add    ah,ah
   140055995:	(bad)  
   140055996:	add    al,0x0
   140055998:	(bad)  
   140055999:	xor    BYTE PTR [rdx],al
   14005599b:	add    BYTE PTR [rsi+0x31],al
   14005599e:	add    al,BYTE PTR [rax]
   1400559a0:	sub    BYTE PTR [rax+0x4],cl
   1400559a3:	add    BYTE PTR [rax+0x31],cl
   1400559a6:	add    al,BYTE PTR [rax]
   1400559a8:	xor    eax,DWORD PTR es:[rdx]
   1400559ab:	add    BYTE PTR [rbp+rbx*4+0x4],al
   1400559af:	add    BYTE PTR [rax],ch
   1400559b1:	xor    eax,DWORD PTR [rdx]
   1400559b3:	add    BYTE PTR [rbp+0x33],ah
   1400559b6:	add    al,BYTE PTR [rax]
   1400559b8:	sub    al,0x42
   1400559ba:	add    al,0x0
   1400559bc:	push   0xffffffffb1000233
   1400559c1:	xor    eax,DWORD PTR [rdx]
   1400559c3:	add    BYTE PTR [rbp+rax*2+0x33b40004],ah
   1400559ca:	add    al,BYTE PTR [rax]
   1400559cc:	test   DWORD PTR [rdx+rax*1],esi
   1400559cf:	add    BYTE PTR [rsi+rdi*1],ch
   1400559d2:	add    al,0x0
   1400559d4:	mov    BYTE PTR [rdx+rax*1],dh
   1400559d7:	add    BYTE PTR [rsi+0x34000235],cl
   1400559dd:	ds add al,0x0
   1400559e0:	nop
   1400559e1:	xor    eax,0x36380002
   1400559e6:	add    al,BYTE PTR [rax]
   1400559e8:	cmp    al,0x3e
   1400559ea:	add    al,0x0
   1400559ec:	cmp    BYTE PTR [rsi],dh
   1400559ee:	add    al,BYTE PTR [rax]
   1400559f0:	jl     0x140055a28
   1400559f2:	add    al,BYTE PTR [rax]
   1400559f4:	in     al,0x61
   1400559f6:	add    al,0x0
   1400559f8:	jl     0x140055a30
   1400559fa:	add    al,BYTE PTR [rax]
   1400559fc:	add    esi,DWORD PTR [rdi]
   1400559fe:	add    al,BYTE PTR [rax]
   140055a00:	sub    BYTE PTR [rax+0x4],cl
   140055a03:	add    BYTE PTR [rdi+rsi*1],al
   140055a06:	add    al,BYTE PTR [rax]
   140055a08:	mov    edi,0x64000237
   140055a0d:	ds add al,0x0
   140055a10:	shl    BYTE PTR [rdi],0x2
   140055a13:	add    BYTE PTR [rdi],bl
   140055a15:	cmp    BYTE PTR [rdx],al
   140055a17:	add    BYTE PTR [rcx+riz*4+0x38380004],dl
   140055a1e:	add    al,BYTE PTR [rax]
   140055a20:	mov    eax,0x38000238
   140055a25:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055a26:	add    al,0x0
   140055a28:	mov    eax,0x33000238
   140055a2d:	cmp    DWORD PTR [rdx],eax
   140055a2f:	add    BYTE PTR [rax],bh
   140055a31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055a32:	add    al,0x0
   140055a34:	xor    al,0x39
   140055a36:	add    al,BYTE PTR [rax]
   140055a38:	mov    dh,0x39
   140055a3a:	add    al,BYTE PTR [rax]
   140055a3c:	cmp    BYTE PTR [rsi+0x39b80004],ah
   140055a42:	add    al,BYTE PTR [rax]
   140055a44:	cmp    eax,0xe400023a
   140055a49:	mov    BYTE PTR [rax+rax*1],al
   140055a4c:	cmp    al,BYTE PTR [rdx]
   140055a4f:	add    BYTE PTR [rsi+0x3a],ah
   140055a52:	add    al,BYTE PTR [rax]
   140055a54:	add    al,0x86
   140055a56:	add    al,0x0
   140055a58:	push   0x5200023a
   140055a5d:	cmp    eax,DWORD PTR [rdx]
   140055a5f:	add    BYTE PTR [rsi+rdi*1+0x3b540004],cl
   140055a66:	add    al,BYTE PTR [rax]
   140055a68:	cmp    al,0x2
   140055a6b:	add    BYTE PTR [rsi+rdi*1+0x3c400004],dh
   140055a72:	add    al,BYTE PTR [rax]
   140055a74:	mov    ah,0x43
   140055a76:	add    al,BYTE PTR [rax]
   140055a78:	loopne 0x140055ab8
   140055a7a:	add    al,0x0
   140055a7c:	mov    ah,0x43
   140055a7e:	add    al,BYTE PTR [rax]
   140055a80:	in     eax,dx
   140055a81:	rex.XB add al,BYTE PTR [r8]
   140055a84:	add    al,0x86
   140055a86:	add    al,0x0
   140055a88:	lock rex.XB add al,BYTE PTR [r8]
   140055a8c:	loop   0x140055ad2
   140055a8e:	add    al,BYTE PTR [rax]
   140055a90:	or     al,0x3f
   140055a92:	add    al,0x0
   140055a94:	in     al,dx
   140055a95:	add    r8b,BYTE PTR [rax]
   140055a98:	push   rcx
   140055a99:	add    r8b,BYTE PTR [r8]
   140055a9c:	sub    al,0x3f
   140055a9e:	add    al,0x0
   140055aa0:	push   rsp
   140055aa1:	add    r8b,BYTE PTR [r8]
   140055aa4:	jb     0x140055aeb
   140055aa6:	add    al,BYTE PTR [rax]
   140055aa8:	add    al,0x3f
   140055aaa:	add    al,0x0
   140055aac:	je     0x140055af3
   140055aae:	add    al,BYTE PTR [rax]
   140055ab0:	scas   eax,DWORD PTR es:[rdi]
   140055ab1:	add    r8b,BYTE PTR [r8]
   140055ab4:	add    al,0x86
   140055ab6:	add    al,0x0
   140055ab8:	mov    al,0x45
   140055aba:	add    al,BYTE PTR [rax]
   140055abc:	out    0x45,eax
   140055abe:	add    al,BYTE PTR [rax]
   140055ac0:	push   rax
   140055ac1:	(bad)  
   140055ac2:	add    al,0x0
   140055ac4:	call   0xf7055d0e
   140055ac9:	rex.RX add r8b,BYTE PTR [rax]
   140055acc:	rex (bad) 
   140055ace:	add    al,0x0
   140055ad0:	mov    eax,0x60000246
   140055ad5:	rex.RXB add r8b,BYTE PTR [r8]
   140055ad8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055ad9:	rex.RB add al,0x0
   140055adc:	(bad)  
   140055add:	rex.RXB add r8b,BYTE PTR [r8]
   140055ae0:	ficom  WORD PTR [rcx+0x2]
   140055ae3:	add    BYTE PTR [rax+0x3f],bl
   140055ae6:	add    al,0x0
   140055ae8:	loopne 0x140055b3b
   140055aea:	add    al,BYTE PTR [rax]
   140055aec:	es push rdx
   140055aee:	add    al,BYTE PTR [rax]
   140055af0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055af1:	rex.RB add al,0x0
   140055af4:	sub    BYTE PTR [rdx+0x2],dl
   140055af7:	add    BYTE PTR [rcx+0x52],bh
   140055afa:	add    al,BYTE PTR [rax]
   140055afc:	rol    BYTE PTR [rdi+0x4],0x0
   140055b00:	jl     0x140055b54
   140055b02:	add    al,BYTE PTR [rax]
   140055b04:	adc    BYTE PTR [rbx+0x2],dl
   140055b07:	add    ah,ah
   140055b09:	mov    BYTE PTR [rax+rax*1],al
   140055b0c:	adc    BYTE PTR [rbx+0x2],dl
   140055b0f:	add    BYTE PTR [rax],dh
   140055b11:	push   rbx
   140055b12:	add    al,BYTE PTR [rax]
   140055b14:	add    al,0x86
   140055b16:	add    al,0x0
   140055b18:	xor    BYTE PTR [rbx+0x2],dl
   140055b1b:	add    BYTE PTR [rsi+0x53],bh
   140055b1e:	add    al,BYTE PTR [rax]
   140055b20:	in     al,0x61
   140055b22:	add    al,0x0
   140055b24:	adc    BYTE PTR [rbx+0x2],0x0
   140055b28:	movabs al,ds:0xf000048604000253
   140055b31:	push   rbx
   140055b32:	add    al,BYTE PTR [rax]
   140055b34:	xchg   BYTE PTR [rbp+0x2],dl
   140055b37:	add    BYTE PTR [rdi+rdi*1+0x4],bh
   140055b3b:	add    BYTE PTR [rax+0x2f000255],cl
   140055b41:	(bad)  
   140055b42:	add    al,BYTE PTR [rax]
   140055b44:	pushf  
   140055b45:	rex.RXB add al,0x0
   140055b48:	xor    BYTE PTR [rax+0x2],ah
   140055b4b:	add    cl,cl
   140055b4d:	(bad)  
   140055b4e:	add    al,BYTE PTR [rax]
   140055b50:	in     al,0x88
   140055b52:	add    al,0x0
   140055b54:	loopne 0x140055bb6
   140055b56:	add    al,BYTE PTR [rax]
   140055b58:	(bad)  
   140055b59:	(bad)  
   140055b5a:	add    al,BYTE PTR [rax]
   140055b5c:	nop
   140055b5d:	(bad)  
   140055b5e:	add    al,0x0
   140055b60:	or     BYTE PTR [rdx+0x2],ah
   140055b63:	add    BYTE PTR [rbp+0x62],bl
   140055b66:	add    al,BYTE PTR [rax]
   140055b68:	add    al,0x86
   140055b6a:	add    al,0x0
   140055b6c:	and    BYTE PTR [rdx+0x2],0x0
   140055b70:	out    0x62,eax
   140055b72:	add    al,BYTE PTR [rax]
   140055b74:	cwde   
   140055b75:	(bad)  
   140055b76:	add    al,0x0
   140055b78:	call   0x194055ddf
   140055b7d:	movsxd eax,DWORD PTR [rdx]
   140055b7f:	add    BYTE PTR [rdi+rdi*1+0x63540004],bl
   140055b86:	add    al,BYTE PTR [rax]
   140055b88:	or     ah,BYTE PTR [rdx+rax*1+0x0]
   140055b8c:	xchg   esp,eax
   140055b8d:	movabs eax,ds:0x64390002640c0004
   140055b96:	add    al,BYTE PTR [rax]
   140055b98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055b99:	rex.RB add al,0x0
   140055b9c:	pop    rax
   140055b9d:	add    al,BYTE PTR fs:[rax]
   140055ba0:	(bad)  
   140055ba1:	add    al,BYTE PTR fs:[rax]
   140055ba4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055ba5:	rex.RB add al,0x0
   140055ba8:	xchg   esp,eax
   140055ba9:	add    al,BYTE PTR fs:[rax]
   140055bac:	fsub   DWORD PTR [rdx+rax*1+0x0]
   140055bb0:	in     al,0x61
   140055bb2:	add    al,0x0
   140055bb4:	fsub   DWORD PTR [rdx+rax*1+0x0]
   140055bb8:	adc    DWORD PTR [rbp+0x2],esp
   140055bbb:	add    ah,ah
   140055bbd:	(bad)  
   140055bbe:	add    al,0x0
   140055bc0:	adc    al,0x65
   140055bc2:	add    al,BYTE PTR [rax]
   140055bc4:	outs   dx,BYTE PTR ds:[rsi]
   140055bc5:	add    al,BYTE PTR gs:[rax]
   140055bc8:	mov    esp,0x7000043f
   140055bcd:	add    al,BYTE PTR gs:[rax]
   140055bd0:	xchg   edi,eax
   140055bd1:	add    al,BYTE PTR gs:[rax]
   140055bd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055bd5:	rex.RB add al,0x0
   140055bd8:	lods   al,BYTE PTR ds:[rsi]
   140055bd9:	add    al,BYTE PTR gs:[rax]
   140055bdc:	fbld   TBYTE PTR [rbp+0x2]
   140055bdf:	add    BYTE PTR [rbp+rax*2+0x65e80004],ah
   140055be6:	add    al,BYTE PTR [rax]
   140055be8:	(bad)  
   140055be9:	data16 add al,BYTE PTR [rax]
   140055bec:	int3   
   140055bed:	(bad)  
   140055bee:	add    al,0x0
   140055bf0:	enter  0x266,0x0
   140055bf4:	call   0x138055e5f
   140055bf9:	(bad)  
   140055bfa:	add    al,0x0
   140055bfc:	call   0x147055e67
   140055c01:	add    al,BYTE PTR [eax]
   140055c04:	fdivr  DWORD PTR [rdi]
   140055c06:	add    al,0x0
   140055c08:	or     BYTE PTR [rdi+0x2],ah
   140055c0b:	add    BYTE PTR [rip+0x4000267],ah        # 0x144055e78
   140055c11:	xchg   BYTE PTR [rax+rax*1],al
   140055c14:	sub    BYTE PTR [rdi+0x2],ah
   140055c17:	add    BYTE PTR [rbp+0x24000267],dl
   140055c1d:	add    al,0x0
   140055c20:	cwde   
   140055c21:	add    al,BYTE PTR [eax]
   140055c24:	or     DWORD PTR [rax+0x2],ebp
   140055c27:	add    BYTE PTR [rax],bl
   140055c29:	add    al,0x0
   140055c2c:	sub    al,0x68
   140055c2e:	add    al,BYTE PTR [rax]
   140055c30:	mov    ch,BYTE PTR [rax+0x2]
   140055c33:	add    BYTE PTR [rbp+rax*2+0x68940004],ah
   140055c3a:	add    al,BYTE PTR [rax]
   140055c3c:	mov    bl,0x68
   140055c3e:	add    al,BYTE PTR [rax]
   140055c40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055c41:	rex.RB add al,0x0
   140055c44:	mov    ah,0x68
   140055c46:	add    al,BYTE PTR [rax]
   140055c48:	(bad)  
   140055c49:	push   0x45a40002
   140055c4e:	add    al,0x0
   140055c50:	(bad)  
   140055c51:	imul   eax,DWORD PTR [rdx],0x26af600
   140055c57:	add    BYTE PTR [rax],ch
   140055c59:	rex.W add al,0x0
   140055c5c:	pushf  
   140055c5d:	imul   eax,DWORD PTR [rdx],0x0
   140055c60:	adc    DWORD PTR [rdx+rax*1+0x0],ebp
   140055c64:	xor    BYTE PTR [rax+0x4],al
   140055c67:	add    BYTE PTR [rsp+rbp*2],dl
   140055c6a:	add    al,BYTE PTR [rax]
   140055c6c:	jbe    0x140055cda
   140055c6e:	add    al,BYTE PTR [rax]
   140055c70:	in     al,0x61
   140055c72:	add    al,0x0
   140055c74:	js     0x140055ce2
   140055c76:	add    al,BYTE PTR [rax]
   140055c78:	movabs al,ds:0xa00004860400026c
   140055c81:	ins    BYTE PTR es:[rdi],dx
   140055c82:	add    al,BYTE PTR [rax]
   140055c84:	sbb    eax,0xf800026d
   140055c89:	rex.W add al,0x0
   140055c8c:	and    BYTE PTR [rbp+0x2],ch
   140055c8f:	add    BYTE PTR [rsi+0x2800026d],ch
   140055c95:	rex.W add al,0x0
   140055c98:	mov    al,0x6d
   140055c9a:	add    al,BYTE PTR [rax]
   140055c9c:	xchg   ecx,eax
   140055c9d:	outs   dx,DWORD PTR ds:[rsi]
   140055c9e:	add    al,BYTE PTR [rax]
   140055ca0:	(bad)  
   140055ca1:	add    al,0x0
   140055ca4:	xchg   esp,eax
   140055ca5:	outs   dx,DWORD PTR ds:[rsi]
   140055ca6:	add    al,BYTE PTR [rax]
   140055ca8:	rex.WRX jo 0x140055cad
   140055cab:	add    BYTE PTR [rax+0x40],dl
   140055cae:	add    al,0x0
   140055cb0:	push   rax
   140055cb1:	jo     0x140055cb5
   140055cb3:	add    BYTE PTR [rdx+rsi*2+0x40740002],ch
   140055cba:	add    al,0x0
   140055cbc:	lods   al,BYTE PTR ds:[rsi]
   140055cbd:	jb     0x140055cc1
   140055cbf:	add    BYTE PTR [rdx+0x75],bl
   140055cc2:	add    al,BYTE PTR [rax]
   140055cc4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055cc5:	add    al,0x0
   140055cc8:	mov    al,0x75
   140055cca:	add    al,BYTE PTR [rax]
   140055ccc:	std    
   140055ccd:	jne    0x140055cd1
   140055ccf:	add    al,ah
   140055cd1:	add    al,0x0
   140055cd4:	xor    BYTE PTR [rsi+0x2],dh
   140055cd7:	add    BYTE PTR [rcx+0x76],ch
   140055cda:	add    al,BYTE PTR [rax]
   140055cdc:	in     al,0x61
   140055cde:	add    al,0x0
   140055ce0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055ce1:	jbe    0x140055ce5
   140055ce3:	add    al,cl
   140055ce5:	js     0x140055ce9
   140055ce7:	add    BYTE PTR [rcx+rax*2],al
   140055cea:	add    al,0x0
   140055cec:	loopne 0x140055d66
   140055cee:	add    al,BYTE PTR [rax]
   140055cf0:	mov    BYTE PTR [rcx+0x2],bh
   140055cf3:	add    BYTE PTR [rax],dh
   140055cf5:	rex.B add al,0x0
   140055cf8:	mov    BYTE PTR [rcx+0x2],bh
   140055cfb:	add    BYTE PTR [rip+0xffffffffa400027a],cl        # 0xe4055f7b
   140055d01:	rex.RB add al,0x0
   140055d04:	adc    BYTE PTR [rdx+0x2],bh
   140055d07:	add    BYTE PTR [rbx+0x7a],bh
   140055d0a:	add    al,BYTE PTR [rax]
   140055d0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055d0d:	rex.RB add al,0x0
   140055d10:	cwde   
   140055d11:	jp     0x140055d15
   140055d13:	add    BYTE PTR [rbx+rdi*2+0x2],ah
   140055d17:	add    BYTE PTR [rbp+rax*2+0x7b640004],ah
   140055d1e:	add    al,BYTE PTR [rax]
   140055d20:	sar    BYTE PTR [rbp+0x2],cl
   140055d23:	add    BYTE PTR [rcx+rax*2],dh
   140055d26:	add    al,0x0
   140055d28:	(bad)  
   140055d29:	jge    0x140055d2d
   140055d2b:	add    cl,dh
   140055d2d:	jge    0x140055d31
   140055d2f:	add    BYTE PTR [rsi+rax*4],al
   140055d32:	add    al,0x0
   140055d34:	hlt    
   140055d35:	jge    0x140055d39
   140055d37:	add    BYTE PTR [rdi+0x7e],dl
   140055d3a:	add    al,BYTE PTR [rax]
   140055d3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055d3d:	rex.RB add al,0x0
   140055d40:	jo     0x140055dc0
   140055d42:	add    al,BYTE PTR [rax]
   140055d44:	xchg   esp,eax
   140055d45:	jle    0x140055d49
   140055d47:	add    BYTE PTR [rax+0x41],dl
   140055d4a:	add    al,0x0
   140055d4c:	movabs al,ds:0x5800027eb800027e
   140055d55:	rex.B add al,0x0
   140055d58:	sar    BYTE PTR [rsi+0x2],0x0
   140055d5c:	sar    DWORD PTR [rsi+0x2],0x0
   140055d60:	pop    rsp
   140055d61:	rex.B add al,0x0
   140055d64:	sar    BYTE PTR [rsi+0x2],1
   140055d67:	add    cl,dl
   140055d69:	jle    0x140055d6d
   140055d6b:	add    BYTE PTR [rax+0x41],ah
   140055d6e:	add    al,0x0
   140055d70:	fdivr  QWORD PTR [rsi+0x2]
   140055d73:	add    BYTE PTR [rsi+0x7f],dl
   140055d76:	add    al,BYTE PTR [rax]
   140055d78:	in     al,0x61
   140055d7a:	add    al,0x0
   140055d7c:	pop    rax
   140055d7d:	jg     0x140055d81
   140055d7f:	add    BYTE PTR [rsi+0x6400027f],bh
   140055d85:	rex.B add al,0x0
   140055d88:	sar    BYTE PTR [rdi+0x2],0x0
   140055d8c:	xchg   ebx,eax
   140055d8d:	add    BYTE PTR [rdx],0x0
   140055d90:	xchg   esp,eax
   140055d91:	movabs eax,ds:0x811a000280940004
   140055d9a:	add    al,BYTE PTR [rax]
   140055d9c:	xchg   esp,eax
   140055d9d:	movabs eax,ds:0x81b60002811c0004
   140055da6:	add    al,BYTE PTR [rax]
   140055da8:	in     al,0x61
   140055daa:	add    al,0x0
   140055dac:	mov    eax,0x4e000281
   140055db1:	(bad)  
   140055db2:	add    al,BYTE PTR [rax]
   140055db4:	mov    BYTE PTR [rcx+0x4],al
   140055db7:	add    BYTE PTR [rax-0x7e],dl
   140055dba:	add    al,BYTE PTR [rax]
   140055dbc:	cli    
   140055dbd:	(bad)  
   140055dbe:	add    al,BYTE PTR [rax]
   140055dc0:	rex (bad) 
   140055dc2:	add    al,0x0
   140055dc4:	cld    
   140055dc5:	(bad)  
   140055dc6:	add    al,BYTE PTR [rax]
   140055dc8:	jg     0x140055d4d
   140055dca:	add    al,BYTE PTR [rax]
   140055dcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055dcd:	rex.RB add al,0x0
   140055dd0:	lods   al,BYTE PTR ds:[rsi]
   140055dd1:	add    DWORD PTR [rdx],0x0
   140055dd4:	out    dx,eax
   140055dd5:	add    DWORD PTR [rdx],0x0
   140055dd8:	clc    
   140055dd9:	rex.W add al,0x0
   140055ddc:	lock add DWORD PTR [rdx],0x0
   140055de0:	xor    eax,0xf8000284
   140055de5:	rex.W add al,0x0
   140055de8:	test   BYTE PTR [rdx],r8b
   140055deb:	add    BYTE PTR [rdi-0x5bfffd7c],dh
   140055df1:	rex.RB add al,0x0
   140055df4:	mov    eax,0xa8000284
   140055df9:	test   DWORD PTR [rdx],eax
   140055dfb:	add    BYTE PTR [rcx+rax*2-0x7a57fffc],dh
   140055e02:	add    al,BYTE PTR [rax]
   140055e04:	cmp    eax,DWORD PTR [rsi-0x5e6bfffe]
   140055e0a:	add    al,0x0
   140055e0c:	cmp    al,0x86
   140055e0e:	add    al,BYTE PTR [rax]
   140055e10:	lea    eax,[rdi+0x41e00002]
   140055e16:	add    al,0x0
   140055e18:	cwde   
   140055e19:	xchg   DWORD PTR [rdx],eax
   140055e1b:	add    cl,dh
   140055e1d:	xchg   DWORD PTR [rdx],eax
   140055e1f:	add    BYTE PTR [rsi+rdi*1],ch
   140055e22:	add    al,0x0
   140055e24:	adc    BYTE PTR [rax-0x77a1fffe],cl
   140055e2a:	add    al,BYTE PTR [rax]
   140055e2c:	clc    
   140055e2d:	rex.B add al,0x0
   140055e30:	(bad)  
   140055e31:	mov    BYTE PTR [rdx],al
   140055e33:	add    dl,ch
   140055e35:	mov    DWORD PTR [rdx],eax
   140055e37:	add    BYTE PTR [rax],al
   140055e39:	rex.X add al,0x0
   140055e3c:	in     al,dx
   140055e3d:	mov    DWORD PTR [rdx],eax
   140055e3f:	add    BYTE PTR [rax],al
   140055e41:	mov    al,BYTE PTR [rdx]
   140055e43:	add    BYTE PTR [rdi+rdi*1],al
   140055e46:	add    al,0x0
   140055e48:	add    BYTE PTR [rdx-0x75acfffe],cl
   140055e4e:	add    al,BYTE PTR [rax]
   140055e50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055e51:	rex.RB add al,0x0
   140055e54:	push   rsp
   140055e55:	mov    al,BYTE PTR [rdx]
   140055e57:	add    BYTE PTR [rbx],ch
   140055e59:	mov    WORD PTR [rdx],es
   140055e5b:	add    BYTE PTR [rax],dl
   140055e5d:	rex.X add al,0x0
   140055e60:	sub    al,0x8c
   140055e62:	add    al,BYTE PTR [rax]
   140055e64:	call   0xe40560f5
   140055e69:	rex.RB add al,0x0
   140055e6c:	call   0x15f0560fd
   140055e71:	lea    eax,[rdx]
   140055e73:	add    BYTE PTR [rax+0x2000049f],cl
   140055e79:	lea    eax,[rdx]
   140055e7b:	add    BYTE PTR [rcx-0x5bfffd73],al
   140055e81:	rex.RB add al,0x0
   140055e84:	test   BYTE PTR [rbp-0x7171fffe],cl
   140055e8a:	add    al,BYTE PTR [rax]
   140055e8c:	xor    al,0x42
   140055e8e:	add    al,0x0
   140055e90:	nop
   140055e91:	mov    es,WORD PTR [rdx]
   140055e93:	add    ah,bh
   140055e95:	mov    es,WORD PTR [rdx]
   140055e97:	add    BYTE PTR [rdx+rax*2],ch
   140055e9a:	add    al,0x0
   140055e9c:	cld    
   140055e9d:	mov    es,WORD PTR [rdx]
   140055e9f:	add    dh,dh
   140055ea1:	xchg   edx,eax
   140055ea2:	add    al,BYTE PTR [rax]
   140055ea4:	xor    al,0x42
   140055ea6:	add    al,0x0
   140055ea8:	clc    
   140055ea9:	xchg   edx,eax
   140055eaa:	add    al,BYTE PTR [rax]
   140055eac:	(bad)  
   140055ead:	xchg   ebp,eax
   140055eae:	add    al,BYTE PTR [rax]
   140055eb0:	rex.WR
   140055eb1:	rex.X add al,0x0
   140055eb4:	enter  0x295,0x0
   140055eb8:	pop    rsi
   140055eb9:	xchg   esi,eax
   140055eba:	add    al,BYTE PTR [rax]
   140055ebc:	cmp    al,0x42
   140055ebe:	add    al,0x0
   140055ec0:	(bad)  
   140055ec1:	xchg   esi,eax
   140055ec2:	add    al,BYTE PTR [rax]
   140055ec4:	(bad)
   140055ec7:	add    BYTE PTR [rdx+rax*2-0x6837fffc],al
   140055ece:	add    al,BYTE PTR [rax]
   140055ed0:	rex.R cwde 
   140055ed2:	add    al,BYTE PTR [rax]
   140055ed4:	je     0x140055f18
   140055ed6:	add    al,0x0
   140055ed8:	push   rax
   140055ed9:	cwde   
   140055eda:	add    al,BYTE PTR [rax]
   140055edc:	and    BYTE PTR [rcx+0x42ac0002],bl
   140055ee2:	add    al,0x0
   140055ee4:	and    BYTE PTR [rcx-0x6614fffe],bl
   140055eea:	add    al,BYTE PTR [rax]
   140055eec:	in     al,0x61
   140055eee:	add    al,0x0
   140055ef0:	in     al,dx
   140055ef1:	cdq    
   140055ef2:	add    al,BYTE PTR [rax]
   140055ef4:	and    ebx,DWORD PTR [rdx+0x45a40002]
   140055efa:	add    al,0x0
   140055efc:	and    al,0x9a
   140055efe:	add    al,BYTE PTR [rax]
   140055f00:	mov    bl,BYTE PTR [rdx+0x422c0002]
   140055f06:	add    al,0x0
   140055f08:	mov    WORD PTR [rdx-0x6553fffe],ds
   140055f0e:	add    al,BYTE PTR [rax]
   140055f10:	add    al,0x86
   140055f12:	add    al,0x0
   140055f14:	lods   al,BYTE PTR ds:[rsi]
   140055f15:	(bad)  
   140055f16:	add    al,BYTE PTR [rax]
   140055f18:	out    0x9a,eax
   140055f1a:	add    al,BYTE PTR [rax]
   140055f1c:	push   rax
   140055f1d:	rex.XB add al,0x0
   140055f20:	call   0xc60561bf
   140055f25:	pushf  
   140055f26:	add    al,BYTE PTR [rax]
   140055f28:	ins    BYTE PTR es:[rdi],dx
   140055f29:	rex.XB add al,0x0
   140055f2c:	mov    BYTE PTR [rdx+rax*1+0x29ccf00],bl
   140055f33:	add    ah,dl
   140055f35:	rex.X add al,0x0
   140055f38:	rcr    BYTE PTR [rdx+rax*1+0x29dab00],1
   140055f3f:	add    ah,dh
   140055f41:	rex.X add al,0x0
   140055f44:	rcr    BYTE PTR [rbp-0x6178fffe],0x2
   140055f4b:	add    BYTE PTR [rax],cl
   140055f4d:	rex.XB add al,0x0
   140055f50:	test   al,0x9e
   140055f52:	add    al,BYTE PTR [rax]
   140055f54:	iret   
   140055f55:	sahf   
   140055f56:	add    al,BYTE PTR [rax]
   140055f58:	add    al,0x3f
   140055f5a:	add    al,0x0
   140055f5c:	rcr    BYTE PTR [rsi-0x601ffffe],1
   140055f62:	add    al,BYTE PTR [rax]
   140055f64:	sub    BYTE PTR [rax+0x4],cl
   140055f67:	add    ah,ch
   140055f69:	lahf   
   140055f6a:	add    al,BYTE PTR [rax]
   140055f6c:	js     0x140055f0e
   140055f6e:	add    al,BYTE PTR [rax]
   140055f70:	or     al,0x43
   140055f72:	add    al,0x0
   140055f74:	js     0x140055f16
   140055f76:	add    al,BYTE PTR [rax]
   140055f78:	cld    
   140055f79:	movabs al,ds:0xa0fc000486040002
   140055f82:	add    al,BYTE PTR [rax]
   140055f84:	jmp    0x13405622a
   140055f89:	rex.XB add al,0x0
   140055f8c:	in     al,dx
   140055f8d:	movabs eax,ds:0x86040002a2830002
   140055f96:	add    al,0x0
   140055f98:	test   BYTE PTR [rdx-0x5c65fffe],ah
   140055f9e:	add    al,BYTE PTR [rax]
   140055fa0:	adc    al,0x43
   140055fa2:	add    al,0x0
   140055fa4:	pushf  
   140055fa5:	movabs ds:0x432c0002a5840002,eax
   140055fae:	add    al,0x0
   140055fb0:	cwde   
   140055fb1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055fb2:	add    al,BYTE PTR [rax]
   140055fb4:	(bad)  
   140055fb5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055fb6:	add    al,BYTE PTR [rax]
   140055fb8:	rex.R
   140055fb9:	rex.XB add al,0x0
   140055fbc:	cld    
   140055fbd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055fbe:	add    al,BYTE PTR [rax]
   140055fc0:	rex.RB test al,0x2
   140055fc3:	add    BYTE PTR [rax],cl
   140055fc5:	pop    rdx
   140055fc6:	add    al,0x0
   140055fc8:	cwde   
   140055fc9:	test   al,0x2
   140055fcb:	add    BYTE PTR [rcx-0x5bfffd58],bh
   140055fd1:	rex.RB add al,0x0
   140055fd4:	mov    esp,0xdd0002a8
   140055fd9:	test   al,0x2
   140055fdb:	add    BYTE PTR [rbp+rax*2-0x5717fffc],ah
   140055fe2:	add    al,BYTE PTR [rax]
   140055fe4:	(bad)  
   140055fe5:	test   eax,0x61e40002
   140055fea:	add    al,0x0
   140055fec:	sbb    BYTE PTR [rcx-0x56a4fffe],ch
   140055ff2:	add    al,BYTE PTR [rax]
   140055ff4:	push   rax
   140055ff5:	rex.XB add al,0x0
   140055ff8:	pop    rsp
   140055ff9:	test   eax,0xa9920002
   140055ffe:	add    al,BYTE PTR [rax]
   140056000:	push   rax
   140056001:	rex.XB add al,0x0
   140056004:	xchg   esp,eax
   140056005:	test   eax,0xa9ca0002
   14005600a:	add    al,BYTE PTR [rax]
   14005600c:	push   rax
   14005600d:	rex.XB add al,0x0
   140056010:	fsubr  QWORD PTR [rcx-0x555afffe]
   140056016:	add    al,BYTE PTR [rax]
   140056018:	int3   
   140056019:	rex.XB add al,0x0
   14005601c:	test   al,0xaa
   14005601e:	add    al,BYTE PTR [rax]
   140056020:	(bad)  
   140056021:	stos   DWORD PTR es:[rdi],eax
   140056022:	add    al,BYTE PTR [rax]
   140056024:	and    BYTE PTR [rdi-0x542bfffc],al
   14005602a:	add    al,BYTE PTR [rax]
   14005602c:	push   0x6c0002ac
   140056031:	rex.XB add al,0x0
   140056034:	push   0x90002ac
   140056039:	lods   eax,DWORD PTR ds:[rsi]
   14005603a:	add    al,BYTE PTR [rax]
   14005603c:	hlt    
   14005603d:	rex.XB add al,0x0
   140056040:	or     al,0xad
   140056042:	add    al,BYTE PTR [rax]
   140056044:	pop    rbp
   140056045:	lods   eax,DWORD PTR ds:[rsi]
   140056046:	add    al,BYTE PTR [rax]
   140056048:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056049:	rex.XB add al,0x0
   14005604c:	(bad)  
   14005604d:	lods   eax,DWORD PTR ds:[rsi]
   14005604e:	add    al,BYTE PTR [rax]
   140056050:	movabs ds:0xa4000445a40002ad,eax
   140056059:	lods   eax,DWORD PTR ds:[rsi]
   14005605a:	add    al,BYTE PTR [rax]
   14005605c:	add    ch,BYTE PTR [rsi+0x61e40002]
   140056062:	add    al,0x0
   140056064:	add    al,0xae
   140056066:	add    al,BYTE PTR [rax]
   140056068:	sbb    DWORD PTR [rsi-0x79fbfffe],ebp
   14005606e:	add    al,0x0
   140056070:	sbb    al,0xae
   140056072:	add    al,BYTE PTR [rax]
   140056074:	xor    DWORD PTR [rsi-0x79fbfffe],ebp
   14005607a:	add    al,0x0
   14005607c:	xor    al,0xae
   14005607e:	add    al,BYTE PTR [rax]
   140056080:	data16 scas al,BYTE PTR es:[rdi]
   140056082:	add    al,BYTE PTR [rax]
   140056084:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056085:	rex.RB add al,0x0
   140056088:	push   0xffffffff830002ae
   14005608d:	scas   al,BYTE PTR es:[rdi]
   14005608e:	add    al,BYTE PTR [rax]
   140056090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056091:	rex.RB add al,0x0
   140056094:	test   BYTE PTR [rsi-0x5160fffe],ch
   14005609a:	add    al,BYTE PTR [rax]
   14005609c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005609d:	rex.RB add al,0x0
   1400560a0:	movabs al,ds:0x800002b0150002ae
   1400560a9:	rex.XB add al,0x0
   1400560ac:	sbb    BYTE PTR [rax-0x4f60fffe],dh
   1400560b2:	add    al,BYTE PTR [rax]
   1400560b4:	in     al,0x43
   1400560b6:	add    al,0x0
   1400560b8:	mov    al,0xb0
   1400560ba:	add    al,BYTE PTR [rax]
   1400560bc:	sub    eax,0x80002b1
   1400560c1:	rex.R add al,0x0
   1400560c4:	mov    cl,0x2
   1400560c7:	add    BYTE PTR [rbx+rsi*4],bl
   1400560ca:	add    al,BYTE PTR [rax]
   1400560cc:	and    al,0x44
   1400560ce:	add    al,0x0
   1400560d0:	sbb    al,0xb3
   1400560d2:	add    al,BYTE PTR [rax]
   1400560d4:	rex.WR mov spl,0x2
   1400560d7:	add    BYTE PTR [rsp+rax*2],cl
   1400560da:	add    al,0x0
   1400560dc:	rex.WR mov spl,0x2
   1400560df:	add    BYTE PTR [rdx-0x4c],ch
   1400560e2:	add    al,BYTE PTR [rax]
   1400560e4:	add    al,0x3f
   1400560e6:	add    al,0x0
   1400560e8:	ins    BYTE PTR es:[rdi],dx
   1400560e9:	mov    ah,0x2
   1400560eb:	add    BYTE PTR [rbp-0x5bfffd4c],ch
   1400560f1:	rex.RB add al,0x0
   1400560f4:	mov    al,0xb4
   1400560f6:	add    al,BYTE PTR [rax]
   1400560f8:	in     al,0xb5
   1400560fa:	add    al,BYTE PTR [rax]
   1400560fc:	rex
   1400560fd:	rex.R add al,0x0
   140056100:	in     al,0xb5
   140056102:	add    al,BYTE PTR [rax]
   140056104:	cli    
   140056105:	mov    ch,0x2
   140056107:	add    BYTE PTR [rdi+rdi*1],al
   14005610a:	add    al,0x0
   14005610c:	cld    
   14005610d:	mov    ch,0x2
   14005610f:	add    bh,al
   140056111:	mov    dh,0x2
   140056113:	add    BYTE PTR [rsp+rax*2+0x4],ch
   140056117:	add    al,cl
   140056119:	mov    dh,0x2
   14005611b:	add    cl,dl
   14005611d:	mov    eax,0x44a40002
   140056122:	add    al,0x0
   140056124:	(bad)  
   140056125:	mov    eax,0xb9300002
   14005612a:	add    al,BYTE PTR [rax]
   14005612c:	add    BYTE PTR [rsp+rax*1+0x0],0x30
   140056131:	mov    ecx,0xb9e40002
   140056136:	add    al,BYTE PTR [rax]
   140056138:	mov    ah,0x44
   14005613a:	add    al,0x0
   14005613c:	in     al,0xb9
   14005613e:	add    al,BYTE PTR [rax]
   140056140:	call   0x1200563ff
   140056145:	rex.R add al,0x0
   140056148:	call   0x105056407
   14005614d:	mov    ebx,0x5b480002
   140056152:	add    al,0x0
   140056154:	enter  0x2bb,0x0
   140056158:	adc    BYTE PTR [rbp-0x5d47fffe],bh
   14005615e:	add    al,0x0
   140056160:	adc    BYTE PTR [rbp-0x4050fffe],bh
   140056166:	add    al,BYTE PTR [rax]
   140056168:	or     al,0x45
   14005616a:	add    al,0x0
   14005616c:	mov    al,0xbf
   14005616e:	add    al,BYTE PTR [rax]
   140056170:	add    eax,eax
   140056172:	add    al,BYTE PTR [rax]
   140056174:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056175:	rex.RB add al,0x0
   140056178:	or     al,0xc0
   14005617a:	add    al,BYTE PTR [rax]
   14005617c:	xchg   al,al
   14005617e:	add    al,BYTE PTR [rax]
   140056180:	and    al,0x45
   140056182:	add    al,0x0
   140056184:	mov    al,al
   140056186:	add    al,BYTE PTR [rax]
   140056188:	movabs ds:0xa4000445380002c1,al
   140056191:	rol    DWORD PTR [rdx],0x0
   140056194:	sbb    eax,0x2c0002c2
   140056199:	rex.RB add al,0x0
   14005619c:	and    dl,al
   14005619e:	add    al,BYTE PTR [rax]
   1400561a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400561a1:	ret    0x2
   1400561a4:	xchg   esp,eax
   1400561a5:	movabs eax,ds:0xc5580002c2a80004
   1400561ae:	add    al,BYTE PTR [rax]
   1400561b0:	or     al,0x45
   1400561b2:	add    al,0x0
   1400561b4:	pop    rax
   1400561b5:	(bad)
   1400561b8:	jl     0x14005617f
   1400561ba:	add    al,BYTE PTR [rax]
   1400561bc:	push   rax
   1400561bd:	rex.RB add al,0x0
   1400561c0:	jl     0x140056187
   1400561c2:	add    al,BYTE PTR [rax]
   1400561c4:	(bad)  
   1400561c5:	(bad)
   1400561c8:	(bad)  
   1400561c9:	rex.RX add al,0x0
   1400561cc:	in     al,dx
   1400561cd:	(bad)
   1400561d0:	or     eax,0xa40002c6
   1400561d5:	rex.RB add al,0x0
   1400561d8:	and    dh,al
   1400561da:	add    al,BYTE PTR [rax]
   1400561dc:	pop    rcx
   1400561dd:	mov    BYTE PTR [rdx],0x0
   1400561e0:	in     al,0x61
   1400561e2:	add    al,0x0
   1400561e4:	pop    rsp
   1400561e5:	mov    BYTE PTR [rdx],0x0
   1400561e8:	sbb    eax,0x40002c7
   1400561ed:	rex.RX add al,0x0
   1400561f0:	and    bh,al
   1400561f2:	add    al,BYTE PTR [rax]
   1400561f4:	(bad)  
   1400561f5:	retf   
   1400561f6:	add    al,BYTE PTR [rax]
   1400561f8:	call   0x114056642
   1400561fd:	retf   
   1400561fe:	add    al,BYTE PTR [rax]
   140056200:	cmp    esi,ecx
   140056202:	add    al,BYTE PTR [rax]
   140056204:	rex.W
   140056205:	rex.RX add al,0x0
   140056208:	cmp    al,0xce
   14005620a:	add    al,BYTE PTR [rax]
   14005620c:	adc    ecx,edi
   14005620e:	add    al,BYTE PTR [rax]
   140056210:	add    BYTE PTR [rsi+0x4],0x0
   140056214:	cmp    bh,cl
   140056216:	add    al,BYTE PTR [rax]
   140056218:	out    dx,al
   140056219:	iret   
   14005621a:	add    al,BYTE PTR [rax]
   14005621c:	sbb    al,0x46
   14005621e:	add    al,0x0
   140056220:	lock iret 
   140056222:	add    al,BYTE PTR [rax]
   140056224:	in     eax,dx
   140056225:	rol    DWORD PTR [rdx],1
   140056227:	add    BYTE PTR [rsi+rax*2-0x2e0ffffc],dh
   14005622e:	add    al,BYTE PTR [rax]
   140056230:	repz rol DWORD PTR [rdx],cl
   140056233:	add    BYTE PTR [rax+0x45],bl
   140056236:	add    al,0x0
   140056238:	hlt    
   140056239:	rol    DWORD PTR [rdx],cl
   14005623b:	add    BYTE PTR [rdi-0x2c],al
   14005623e:	add    al,BYTE PTR [rax]
   140056240:	add    al,0x86
   140056242:	add    al,0x0
   140056244:	rex.W (bad) 
   140056246:	add    al,BYTE PTR [rax]
   140056248:	fcmovbe st,st(5)
   14005624a:	add    al,BYTE PTR [rax]
   14005624c:	lods   al,BYTE PTR ds:[rsi]
   14005624d:	rex.RB add al,0x0
   140056250:	(bad)  
   140056252:	add    al,BYTE PTR [rax]
   140056254:	add    al,bl
   140056256:	add    al,BYTE PTR [rax]
   140056258:	pushf  
   140056259:	rex.RX add al,0x0
   14005625c:	add    al,bl
   14005625e:	add    al,BYTE PTR [rax]
   140056260:	(bad)  
   140056261:	fld    DWORD PTR [rdx]
   140056263:	add    BYTE PTR [rax],bh
   140056265:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056266:	add    al,0x0
   140056268:	and    cl,bl
   14005626a:	add    al,BYTE PTR [rax]
   14005626c:	rex.RXB fld DWORD PTR [r10]
   14005626f:	add    BYTE PTR [rsi+rax*4],al
   140056272:	add    al,0x0
   140056274:	rex.W fld DWORD PTR [rdx]
   140056277:	add    BYTE PTR [rcx-0x27],dh
   14005627a:	add    al,BYTE PTR [rax]
   14005627c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005627d:	rex.RB add al,0x0
   140056280:	sbb    cl,0x2
   140056283:	add    BYTE PTR [rbx-0x1bfffd27],bh
   140056289:	(bad)  
   14005628a:	add    al,0x0
   14005628c:	(bad)  
   14005628d:	fld    DWORD PTR [rdx]
   14005628f:	add    BYTE PTR [rbp-0x26],cl
   140056292:	add    al,BYTE PTR [rax]
   140056294:	sub    BYTE PTR [rax+0x4],cl
   140056297:	add    BYTE PTR [rax-0x26],dl
   14005629a:	add    al,BYTE PTR [rax]
   14005629c:	(bad)  
   14005629e:	add    al,BYTE PTR [rax]
   1400562a0:	in     al,0x46
   1400562a2:	add    al,0x0
   1400562a4:	loopne 0x140056281
   1400562a6:	add    al,BYTE PTR [rax]
   1400562a8:	xor    ebx,ebp
   1400562aa:	add    al,BYTE PTR [rax]
   1400562ac:	xchg   esp,eax
   1400562ad:	movabs eax,ds:0xde3c0002dd340004
   1400562b6:	add    al,BYTE PTR [rax]
   1400562b8:	in     al,0x61
   1400562ba:	add    al,0x0
   1400562bc:	cmp    al,0xde
   1400562be:	add    al,BYTE PTR [rax]
   1400562c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400562c1:	fiadd  WORD PTR [rdx]
   1400562c3:	add    BYTE PTR [rax],al
   1400562c5:	rex.RXB add al,0x0
   1400562c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400562c9:	fiadd  WORD PTR [rdx]
   1400562cb:	add    bl,bh
   1400562cd:	fild   WORD PTR [rdx]
   1400562cf:	add    BYTE PTR [rcx+riz*4-0x1ffbfffc],dl
   1400562d6:	add    al,BYTE PTR [rax]
   1400562d8:	(bad)  
   1400562d9:	loopne 0x1400562dd
   1400562db:	add    BYTE PTR [rsi+rdx*4-0x1f63fffc],ah
   1400562e2:	add    al,BYTE PTR [rax]
   1400562e4:	adc    eax,0x100002e1
   1400562e9:	xchg   DWORD PTR [rax+rax*1],eax
   1400562ec:	sub    al,0xe1
   1400562ee:	add    al,BYTE PTR [rax]
   1400562f0:	rex.WXB loope 0x1400562f5
   1400562f3:	add    BYTE PTR [rdi+rax*2],ah
   1400562f6:	add    al,0x0
   1400562f8:	rex.WR loope 0x1400562fd
   1400562fb:	add    BYTE PTR [rsi-0x14],cl
   1400562fe:	add    al,BYTE PTR [rax]
   140056300:	pushf  
   140056301:	rex.RXB add al,0x0
   140056304:	push   rax
   140056305:	in     al,dx
   140056306:	add    al,BYTE PTR [rax]
   140056308:	xchg   esp,ebp
   14005630a:	add    al,BYTE PTR [rax]
   14005630c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005630d:	rex.RB add al,0x0
   140056310:	mov    ah,ch
   140056312:	add    al,BYTE PTR [rax]
   140056314:	fldlg2 
   140056316:	add    al,BYTE PTR [rax]
   140056318:	rol    BYTE PTR [rdi+0x4],0x0
   14005631c:	add    ch,ch
   14005631e:	add    al,BYTE PTR [rax]
   140056320:	rex in eax,dx
   140056322:	add    al,BYTE PTR [rax]
   140056324:	fadd   DWORD PTR [rdi+0x4]
   140056327:	add    BYTE PTR [rax-0x13],cl
   14005632a:	add    al,BYTE PTR [rax]
   14005632c:	outs   dx,DWORD PTR ds:[rsi]
   14005632d:	out    dx,al
   14005632e:	add    al,BYTE PTR [rax]
   140056330:	loopne 0x140056379
   140056332:	add    al,0x0
   140056334:	jo     0x140056324
   140056336:	add    al,BYTE PTR [rax]
   140056338:	(bad)  
   14005633a:	add    al,BYTE PTR [rax]
   14005633c:	adc    BYTE PTR [rax+0x4],cl
   14005633f:	add    ah,bl
   140056341:	test   BYTE PTR [rdx],0x0
   140056344:	ja     0x14005633d
   140056346:	add    al,BYTE PTR [rax]
   140056348:	in     al,0x61
   14005634a:	add    al,0x0
   14005634c:	js     0x140056345
   14005634e:	add    al,BYTE PTR [rax]
   140056350:	lods   al,BYTE PTR ds:[rsi]
   140056351:	test   DWORD PTR [rdx],0x445a400
   140056357:	add    BYTE PTR [rdi+rsi*8-0x7d7fffe],ch
   14005635e:	add    al,BYTE PTR [rax]
   140056360:	sub    BYTE PTR [rax+0x4],cl
   140056363:	add    BYTE PTR [rax],ch
   140056365:	clc    
   140056366:	add    al,BYTE PTR [rax]
   140056368:	rex.WRX clc 
   14005636a:	add    al,BYTE PTR [rax]
   14005636c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005636d:	rex.RB add al,0x0
   140056370:	push   rax
   140056371:	clc    
   140056372:	add    al,BYTE PTR [rax]
   140056374:	(bad)  
   140056375:	clc    
   140056376:	add    al,BYTE PTR [rax]
   140056378:	in     al,0x61
   14005637a:	add    al,0x0
   14005637c:	pushf  
   14005637d:	clc    
   14005637e:	add    al,BYTE PTR [rax]
   140056380:	psubw  mm0,QWORD PTR [rdx]
   140056383:	add    ah,ah
   140056385:	(bad)  
   140056386:	add    al,0x0
   140056388:	xor    cl,bh
   14005638a:	add    al,BYTE PTR [rax]
   14005638c:	rex.WRB stc 
   14005638e:	add    al,BYTE PTR [rax]
   140056390:	add    al,0x86
   140056392:	add    al,0x0
   140056394:	ins    BYTE PTR es:[rdi],dx
   140056395:	stc    
   140056396:	add    al,BYTE PTR [rax]
   140056398:	mov    ebp,0xa40002f9
   14005639d:	rex.RB add al,0x0
   1400563a0:	sar    cl,0x2
   1400563a3:	add    bh,bh
   1400563a5:	stc    
   1400563a6:	add    al,BYTE PTR [rax]
   1400563a8:	add    al,0x86
   1400563aa:	add    al,0x0
   1400563ac:	add    dl,bh
   1400563ae:	add    al,BYTE PTR [rax]
   1400563b0:	repnz sti 
   1400563b2:	add    al,BYTE PTR [rax]
   1400563b4:	jl     0x1400563fe
   1400563b6:	add    al,0x0
   1400563b8:	cld    
   1400563b9:	sti    
   1400563ba:	add    al,BYTE PTR [rax]
   1400563bc:	rex.RXB cld 
   1400563be:	add    al,BYTE PTR [rax]
   1400563c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400563c1:	xchg   esi,eax
   1400563c2:	add    al,0x0
   1400563c4:	rex.W cld 
   1400563c6:	add    al,BYTE PTR [rax]
   1400563c8:	jge    0x1400563c6
   1400563ca:	add    al,BYTE PTR [rax]
   1400563cc:	cmp    al,0x48
   1400563ce:	add    al,0x0
   1400563d0:	cmp    ah,0x2
   1400563d3:	add    BYTE PTR [rdi],ch
   1400563d5:	std    
   1400563d6:	add    al,BYTE PTR [rax]
   1400563d8:	ins    BYTE PTR es:[rdi],dx
   1400563d9:	rex.R add al,0x0
   1400563dc:	xor    ch,bh
   1400563de:	add    al,BYTE PTR [rax]
   1400563e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400563e1:	std    
   1400563e2:	add    al,BYTE PTR [rax]
   1400563e4:	or     BYTE PTR [rdx+0x4],bl
   1400563e7:	add    BYTE PTR [rax-0x6afffd03],ch
   1400563ed:	inc    BYTE PTR [rdx]
   1400563ef:	add    BYTE PTR [rax+rcx*2+0x4],al
   1400563f3:	add    BYTE PTR [rax-0x3bfffd02],bl
   1400563f9:	inc    BYTE PTR [rdx]
   1400563fb:	add    BYTE PTR [rax+rcx*2+0x4],bl
   1400563ff:	add    ah,al
   140056401:	inc    BYTE PTR [rdx]
   140056403:	add    BYTE PTR [rdi+rdi*8+0x2],dl
   140056407:	add    ah,ah
   140056409:	(bad)  
   14005640a:	add    al,0x0
   14005640c:	push   rsp
   14005640d:	inc    DWORD PTR [rdx]
   14005640f:	add    BYTE PTR [rdi+0x0],dl
   140056412:	add    eax,DWORD PTR [rax]
   140056414:	xchg   esp,eax
   140056415:	movabs eax,ds:0x24a000300580004
   14005641e:	add    eax,DWORD PTR [rax]
   140056420:	jl     0x14005646a
   140056422:	add    al,0x0
   140056424:	push   rsp
   140056425:	add    al,BYTE PTR [rbx]
   140056427:	add    BYTE PTR [rdi-0x5bfffcfe],bl
   14005642d:	xchg   esi,eax
   14005642e:	add    al,0x0
   140056430:	fadd   QWORD PTR [rdx]
   140056432:	add    eax,DWORD PTR [rax]
   140056434:	and    al,BYTE PTR [rbx]
   140056436:	add    eax,DWORD PTR [rax]
   140056438:	add    al,0x86
   14005643a:	add    al,0x0
   14005643c:	and    al,0x3
   14005643e:	add    eax,DWORD PTR [rax]
   140056440:	xlat   BYTE PTR ds:[rbx]
   140056441:	add    eax,DWORD PTR [rbx]
   140056443:	add    BYTE PTR [rax],dl
   140056445:	xchg   DWORD PTR [rax+rax*1],eax
   140056448:	fadd   DWORD PTR [rbx]
   14005644a:	add    eax,DWORD PTR [rax]
   14005644c:	jno    0x140056452
   14005644e:	add    eax,DWORD PTR [rax]
   140056450:	xchg   esp,eax
   140056451:	movabs eax,ds:0x4c4000304740004
   14005645a:	add    eax,DWORD PTR [rax]
   14005645c:	xchg   esp,eax
   14005645d:	movabs eax,ds:0x17ca000304c40004
   140056466:	add    eax,DWORD PTR [rax]
   140056468:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056469:	rex.W add al,0x0
   14005646c:	int3   
   14005646d:	(bad)  
   14005646e:	add    eax,DWORD PTR [rax]
   140056470:	(bad)  
   140056471:	sbb    DWORD PTR [rbx],eax
   140056473:	add    al,cl
   140056475:	rex.W add al,0x0
   140056478:	rex sbb DWORD PTR [rbx],eax
   14005647b:	add    BYTE PTR [rbx+rbx*1+0x3],al
   14005647f:	add    al,bl
   140056481:	rex.W add al,0x0
   140056484:	sbb    r8d,DWORD PTR [rbx]
   140056487:	add    BYTE PTR [rsi-0x7fffce5],bh
   14005648d:	rex.W add al,0x0
   140056490:	rcr    BYTE PTR [rbx],0x3
   140056493:	add    BYTE PTR [rdi],bh
   140056495:	sbb    al,0x3
   140056497:	add    al,bh
   140056499:	rex.W add al,0x0
   14005649c:	sbb    al,0x3
   14005649f:	add    BYTE PTR [rsi+0x1f],ch
   1400564a2:	add    eax,DWORD PTR [rax]
   1400564a4:	add    BYTE PTR [rcx+0x4],cl
   1400564a7:	add    BYTE PTR [rax+0x1f],dh
   1400564aa:	add    eax,DWORD PTR [rax]
   1400564ac:	pop    rsp
   1400564ad:	and    BYTE PTR [rbx],al
   1400564af:	add    BYTE PTR [rax+0x5c0004a2],bh
   1400564b5:	and    BYTE PTR [rbx],al
   1400564b7:	add    BYTE PTR [rdx+0x20],bh
   1400564ba:	add    eax,DWORD PTR [rax]
   1400564bc:	add    al,0x3f
   1400564be:	add    al,0x0
   1400564c0:	jl     0x1400564e2
   1400564c2:	add    eax,DWORD PTR [rax]
   1400564c4:	or     esp,DWORD PTR [rcx]
   1400564c6:	add    eax,DWORD PTR [rax]
   1400564c8:	cmp    BYTE PTR [rsi+0x219c0004],ah
   1400564ce:	add    eax,DWORD PTR [rax]
   1400564d0:	shl    BYTE PTR [rcx],0x3
   1400564d3:	add    BYTE PTR [rax+0x43],dl
   1400564d6:	add    al,0x0
   1400564d8:	shl    BYTE PTR [rcx],0x3
   1400564db:	add    BYTE PTR [rsi],bh
   1400564dd:	and    al,BYTE PTR [rbx]
   1400564df:	add    BYTE PTR [rdi+rdi*1],al
   1400564e2:	add    al,0x0
   1400564e4:	and    al,BYTE PTR [rbx]
   1400564e7:	add    al,dh
   1400564e9:	and    eax,0xa6840003
   1400564ee:	add    al,0x0
   1400564f0:	lock and eax,0x27e90003
   1400564f6:	add    eax,DWORD PTR [rax]
   1400564f8:	push   rax
   1400564f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564fa:	add    al,0x0
   1400564fc:	in     al,dx
   1400564fd:	(bad)  
   1400564fe:	add    eax,DWORD PTR [rax]
   140056500:	jrcxz  0x14005652a
   140056502:	add    eax,DWORD PTR [rax]
   140056504:	ins    BYTE PTR es:[rdi],dx
   140056505:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056506:	add    al,0x0
   140056508:	in     al,0x28
   14005650a:	add    eax,DWORD PTR [rax]
   14005650c:	sub    r8b,BYTE PTR [r11]
   14005650f:	add    BYTE PTR [rbx+rax*2],dl
   140056512:	add    al,0x0
   140056514:	rex.W sub al,BYTE PTR [rbx]
   140056517:	add    BYTE PTR [rcx],bl
   140056519:	sub    eax,DWORD PTR [rbx]
   14005651b:	add    BYTE PTR [rax+0x1c0004a6],ah
   140056521:	sub    eax,DWORD PTR [rbx]
   140056523:	add    BYTE PTR [rax+0x2c],dl
   140056526:	add    eax,DWORD PTR [rax]
   140056528:	mov    eax,0x580004a6
   14005652d:	sub    al,0x3
   14005652f:	add    dh,ch
   140056531:	sub    al,0x3
   140056533:	add    al,bh
   140056535:	rex.W add al,0x0
   140056538:	clc    
   140056539:	sub    al,0x3
   14005653b:	add    BYTE PTR [rax],bh
   14005653d:	sub    eax,0x551c0003
   140056542:	add    al,0x0
   140056544:	rex sub eax,0x2dbf0003
   14005654a:	add    eax,DWORD PTR [rax]
   14005654c:	clc    
   14005654d:	rex.W add al,0x0
   140056550:	(bad)  
   140056551:	sub    eax,0x2f180003
   140056556:	add    eax,DWORD PTR [rax]
   140056558:	or     al,0x43
   14005655a:	add    al,0x0
   14005655c:	sbb    BYTE PTR [rdi],ch
   14005655e:	add    eax,DWORD PTR [rax]
   140056560:	jrcxz  0x140056591
   140056562:	add    eax,DWORD PTR [rax]
   140056564:	in     al,0x61
   140056566:	add    al,0x0
   140056568:	in     al,0x2f
   14005656a:	add    eax,DWORD PTR [rax]
   14005656c:	stos   DWORD PTR es:[rdi],eax
   14005656d:	xor    BYTE PTR [rbx],al
   14005656f:	add    al,dl
   140056571:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056572:	add    al,0x0
   140056574:	lods   al,BYTE PTR ds:[rsi]
   140056575:	xor    BYTE PTR [rbx],al
   140056577:	add    BYTE PTR [rbx+0x31],dh
   14005657a:	add    eax,DWORD PTR [rax]
   14005657c:	shl    BYTE PTR [rsi+0x31740004],1
   140056582:	add    eax,DWORD PTR [rax]
   140056584:	xor    al,BYTE PTR [r11]
   140056587:	add    BYTE PTR [rdx*2+0x32440004],dl
   14005658e:	add    eax,DWORD PTR [rax]
   140056590:	stc    
   140056591:	xor    al,BYTE PTR [rbx]
   140056593:	add    ah,ah
   140056595:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056596:	add    al,0x0
   140056598:	cld    
   140056599:	xor    al,BYTE PTR [rbx]
   14005659b:	add    BYTE PTR [rdx-0x3fffcc8],ch
   1400565a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565a2:	add    al,0x0
   1400565a4:	lods   al,BYTE PTR ds:[rsi]
   1400565a5:	cmp    BYTE PTR [rbx],al
   1400565a7:	add    BYTE PTR [rdx+0x3e],bl
   1400565aa:	add    eax,DWORD PTR [rax]
   1400565ac:	cld    
   1400565ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565ae:	add    al,0x0
   1400565b0:	pop    rsp
   1400565b1:	add    eax,DWORD PTR ds:[rax]
   1400565b4:	lods   eax,DWORD PTR ds:[rsi]
   1400565b5:	rex.RX add r8d,DWORD PTR [rax]
   1400565b8:	and    BYTE PTR [rdi+0x46b00004],ah
   1400565be:	add    eax,DWORD PTR [rax]
   1400565c0:	jl     0x140056613
   1400565c2:	add    eax,DWORD PTR [rax]
   1400565c4:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565c6:	add    al,0x0
   1400565c8:	jl     0x14005661b
   1400565ca:	add    eax,DWORD PTR [rax]
   1400565cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565cd:	push   rbx
   1400565ce:	add    eax,DWORD PTR [rax]
   1400565d0:	push   0xffffffffc00004a7
   1400565d5:	push   rbx
   1400565d6:	add    eax,DWORD PTR [rax]
   1400565d8:	ficom  WORD PTR [rbx+0x3]
   1400565db:	add    BYTE PTR [rax+0x43],bl
   1400565de:	add    al,0x0
   1400565e0:	lock push rbx
   1400565e2:	add    eax,DWORD PTR [rax]
   1400565e4:	std    
   1400565e5:	push   rbx
   1400565e6:	add    eax,DWORD PTR [rax]
   1400565e8:	(bad)  
   1400565e9:	rex.XB add al,0x0
   1400565ec:	adc    BYTE PTR [rbx+rax*1+0x0],dl
   1400565f0:	ds push rsp
   1400565f2:	add    eax,DWORD PTR [rax]
   1400565f4:	fs rex.XB add al,0x0
   1400565f8:	rex push rsp
   1400565fa:	add    eax,DWORD PTR [rax]
   1400565fc:	pop    rax
   1400565fd:	push   rsp
   1400565fe:	add    eax,DWORD PTR [rax]
   140056600:	cmp    BYTE PTR [rbx+0x4],ch
   140056603:	add    BYTE PTR [rax+0x54],bl
   140056606:	add    eax,DWORD PTR [rax]
   140056608:	adc    BYTE PTR [rbx+rax*1+0x0],0x38
   14005660d:	imul   eax,DWORD PTR [rax+rax*1],0xffffff80
   140056611:	push   rsp
   140056612:	add    eax,DWORD PTR [rax]
   140056614:	cdq    
   140056615:	push   rsp
   140056616:	add    eax,DWORD PTR [rax]
   140056618:	cmp    BYTE PTR [rbx+0x4],ch
   14005661b:	add    BYTE PTR [rcx-0x52fffcac],bl
   140056621:	push   rsp
   140056622:	add    eax,DWORD PTR [rax]
   140056624:	cmp    BYTE PTR [rbx+0x4],ch
   140056627:	add    BYTE PTR [rbp-0x39fffcac],ch
   14005662d:	push   rsp
   14005662e:	add    eax,DWORD PTR [rax]
   140056630:	cmp    BYTE PTR [rbx+0x4],ch
   140056633:	add    dh,al
   140056635:	push   rsp
   140056636:	add    eax,DWORD PTR [rax]
   140056638:	fist   WORD PTR [rbx+rax*1+0x0]
   14005663c:	cmp    BYTE PTR [rbx+0x4],ch
   14005663f:	add    bh,bl
   140056641:	push   rsp
   140056642:	add    eax,DWORD PTR [rax]
   140056644:	add    edx,DWORD PTR [rbp+0x3]
   140056647:	add    BYTE PTR [rax],bh
   140056649:	imul   eax,DWORD PTR [rax+rax*1],0x3
   14005664d:	push   rbp
   14005664e:	add    eax,DWORD PTR [rax]
   140056650:	(bad)  
   140056651:	push   rbp
   140056652:	add    eax,DWORD PTR [rax]
   140056654:	cmp    BYTE PTR [rbx+0x4],ch
   140056657:	add    BYTE PTR [rsi],bl
   140056659:	push   rbp
   14005665a:	add    eax,DWORD PTR [rax]
   14005665c:	(bad)  
   14005665d:	push   rbp
   14005665e:	add    eax,DWORD PTR [rax]
   140056660:	cmp    BYTE PTR [rbx+0x4],ch
   140056663:	add    BYTE PTR [rdi],dh
   140056665:	push   rbp
   140056666:	add    eax,DWORD PTR [rax]
   140056668:	push   rsp
   140056669:	push   rbp
   14005666a:	add    eax,DWORD PTR [rax]
   14005666c:	cmp    BYTE PTR [rbx+0x4],ch
   14005666f:	add    BYTE PTR [rbp+rdx*2+0x3],dl
   140056673:	add    BYTE PTR [rbp+0x55],ch
   140056676:	add    eax,DWORD PTR [rax]
   140056678:	cmp    BYTE PTR [rbx+0x4],ch
   14005667b:	add    BYTE PTR [rbp+0x55],ch
   14005667e:	add    eax,DWORD PTR [rax]
   140056680:	xchg   BYTE PTR [rbp+0x3],dl
   140056683:	add    BYTE PTR [rax],bh
   140056685:	imul   eax,DWORD PTR [rax+rax*1],0xffffff86
   140056689:	push   rbp
   14005668a:	add    eax,DWORD PTR [rax]
   14005668c:	lahf   
   14005668d:	push   rbp
   14005668e:	add    eax,DWORD PTR [rax]
   140056690:	cmp    BYTE PTR [rbx+0x4],ch
   140056693:	add    BYTE PTR [rax-0x3ffffcab],ah
   140056699:	push   rbp
   14005669a:	add    eax,DWORD PTR [rax]
   14005669c:	cmp    BYTE PTR [rbx+0x4],ch
   14005669f:	add    al,al
   1400566a1:	push   rbp
   1400566a2:	add    eax,DWORD PTR [rax]
   1400566a4:	ficom  WORD PTR [rbp+0x3]
   1400566a7:	add    BYTE PTR [rax],bh
   1400566a9:	imul   eax,DWORD PTR [rax+rax*1],0xffffffde
   1400566ad:	push   rbp
   1400566ae:	add    eax,DWORD PTR [rax]
   1400566b0:	not    DWORD PTR [rbp+0x3]
   1400566b3:	add    BYTE PTR [rax],bh
   1400566b5:	imul   eax,DWORD PTR [rax+rax*1],0xfffffff7
   1400566b9:	push   rbp
   1400566ba:	add    eax,DWORD PTR [rax]
   1400566bc:	cmp    eax,0xc4000356
   1400566c1:	rex.XB add al,0x0
   1400566c4:	cmp    eax,0x55000356
   1400566c9:	push   rsi
   1400566ca:	add    eax,DWORD PTR [rax]
   1400566cc:	cmp    BYTE PTR [rbx+0x4],ch
   1400566cf:	add    BYTE PTR [rbp+0x56],dl
   1400566d2:	add    eax,DWORD PTR [rax]
   1400566d4:	ins    DWORD PTR es:[rdi],dx
   1400566d5:	push   rsi
   1400566d6:	add    eax,DWORD PTR [rax]
   1400566d8:	cmp    BYTE PTR [rbx+0x4],ch
   1400566db:	add    BYTE PTR [rbp+0x56],ch
   1400566de:	add    eax,DWORD PTR [rax]
   1400566e0:	test   BYTE PTR [rsi+0x3],dl
   1400566e3:	add    BYTE PTR [rax],bh
   1400566e5:	imul   eax,DWORD PTR [rax+rax*1],0xffffff84
   1400566e9:	push   rsi
   1400566ea:	add    eax,DWORD PTR [rax]
   1400566ec:	js     0x140056745
   1400566ee:	add    eax,DWORD PTR [rax]
   1400566f0:	cmp    BYTE PTR [rbx+0x4],ch
   1400566f3:	add    BYTE PTR [rax+0x57],bh
   1400566f6:	add    eax,DWORD PTR [rax]
   1400566f8:	not    BYTE PTR [rdi+0x3]
   1400566fb:	add    BYTE PTR [rax-0x9fffbbb],bl
   140056701:	push   rdi
   140056702:	add    eax,DWORD PTR [rax]
   140056704:	(bad)  
   140056705:	pop    rax
   140056706:	add    eax,DWORD PTR [rax]
   140056708:	cmp    BYTE PTR [rbx+0x4],ch
   14005670b:	add    BYTE PTR [rsi],cl
   14005670d:	pop    rax
   14005670e:	add    eax,DWORD PTR [rax]
   140056710:	and    al,0x58
   140056712:	add    eax,DWORD PTR [rax]
   140056714:	cmp    BYTE PTR [rbx+0x4],ch
   140056717:	add    BYTE PTR [rax+rbx*2],ah
   14005671a:	add    eax,DWORD PTR [rax]
   14005671c:	rex.WRB pop r8
   14005671e:	add    eax,DWORD PTR [rax]
   140056720:	cmp    BYTE PTR [rbx+0x4],ch
   140056723:	add    BYTE PTR [rbp+0x58],cl
   140056726:	add    eax,DWORD PTR [rax]
   140056728:	ins    DWORD PTR es:[rdi],dx
   140056729:	pop    rax
   14005672a:	add    eax,DWORD PTR [rax]
   14005672c:	mov    WORD PTR [rdi+0x4],es
   14005672f:	add    BYTE PTR [rbp+0x58],ch
   140056732:	add    eax,DWORD PTR [rax]
   140056734:	test   BYTE PTR [rax+0x3],bl
   140056737:	add    BYTE PTR [rax],bh
   140056739:	imul   eax,DWORD PTR [rax+rax*1],0xffffff84
   14005673d:	pop    rax
   14005673e:	add    eax,DWORD PTR [rax]
   140056740:	movabs ds:0x1a00046b38000358,al
   140056749:	pop    rdx
   14005674a:	add    eax,DWORD PTR [rax]
   14005674c:	(bad)  
   14005674d:	pop    rdx
   14005674e:	add    eax,DWORD PTR [rax]
   140056750:	sub    BYTE PTR [rbx+0x4],cl
   140056753:	add    BYTE PTR [rdx+0x5a],ah
   140056756:	add    eax,DWORD PTR [rax]
   140056758:	popf   
   140056759:	pop    rdx
   14005675a:	add    eax,DWORD PTR [rax]
   14005675c:	cmp    BYTE PTR [rbx+0x4],cl
   14005675f:	add    BYTE PTR [rbp-0x46fffca6],bl
   140056765:	pop    rdx
   140056766:	add    eax,DWORD PTR [rax]
   140056768:	cmp    BYTE PTR [rbx+0x4],ch
   14005676b:	add    ch,bl
   14005676d:	pop    rdx
   14005676e:	add    eax,DWORD PTR [rax]
   140056770:	and    bl,BYTE PTR [rbx+0x3]
   140056773:	add    BYTE PTR [rax+0x4c],ch
   140056776:	add    al,0x0
   140056778:	and    bl,BYTE PTR [rbx+0x3]
   14005677b:	add    BYTE PTR [rbp+0x5b],dl
   14005677e:	add    eax,DWORD PTR [rax]
   140056780:	push   0x5500044c
   140056785:	pop    rbx
   140056786:	add    eax,DWORD PTR [rax]
   140056788:	retf   
   140056789:	pop    rbx
   14005678a:	add    eax,DWORD PTR [rax]
   14005678c:	push   0xffffffffcb00044c
   140056791:	pop    rbx
   140056792:	add    eax,DWORD PTR [rax]
   140056794:	icebp  
   140056795:	pop    rbx
   140056796:	add    eax,DWORD PTR [rax]
   140056798:	cmp    BYTE PTR [rbx+0x4],ch
   14005679b:	add    BYTE PTR [rip+0x4900035c],ch        # 0x189056afd
   1400567a1:	pop    rsp
   1400567a2:	add    eax,DWORD PTR [rax]
   1400567a4:	cmp    BYTE PTR [rbx+0x4],ch
   1400567a7:	add    BYTE PTR [rcx+0x5c],cl
   1400567aa:	add    eax,DWORD PTR [rax]
   1400567ac:	xchg   edx,eax
   1400567ad:	pop    rsp
   1400567ae:	add    eax,DWORD PTR [rax]
   1400567b0:	loopne 0x140056803
   1400567b2:	add    al,0x0
   1400567b4:	xchg   edx,eax
   1400567b5:	pop    rsp
   1400567b6:	add    eax,DWORD PTR [rax]
   1400567b8:	fistp  DWORD PTR [rbx+rax*1+0x0]
   1400567bc:	or     al,0x51
   1400567be:	add    al,0x0
   1400567c0:	fistp  DWORD PTR [rbx+rax*1+0x0]
   1400567c4:	neg    DWORD PTR [rbx+rax*1+0x0]
   1400567c8:	cmp    BYTE PTR [rbx+0x4],ch
   1400567cb:	add    bh,dh
   1400567cd:	pop    rsp
   1400567ce:	add    eax,DWORD PTR [rax]
   1400567d0:	adc    ebx,DWORD PTR [rbp+0x3]
   1400567d3:	add    BYTE PTR [rax],bh
   1400567d5:	imul   eax,DWORD PTR [rax+rax*1],0x53
   1400567d9:	pop    rbp
   1400567da:	add    eax,DWORD PTR [rax]
   1400567dc:	outs   dx,DWORD PTR ds:[rsi]
   1400567dd:	pop    rbp
   1400567de:	add    eax,DWORD PTR [rax]
   1400567e0:	cmp    BYTE PTR [rbx+0x4],ch
   1400567e3:	add    BYTE PTR [rdi+0x5d],ch
   1400567e6:	add    eax,DWORD PTR [rax]
   1400567e8:	ret    
   1400567e9:	pop    rbp
   1400567ea:	add    eax,DWORD PTR [rax]
   1400567ec:	in     al,0x52
   1400567ee:	add    al,0x0
   1400567f0:	ret    
   1400567f1:	pop    rbp
   1400567f2:	add    eax,DWORD PTR [rax]
   1400567f4:	add    BYTE PTR [rsi+0x3],bl
   1400567f7:	add    ah,dh
   1400567f9:	push   rdx
   1400567fa:	add    al,0x0
   1400567fc:	add    BYTE PTR [rsi+0x3],bl
   1400567ff:	add    BYTE PTR [rsi+rbx*2],bl
   140056802:	add    eax,DWORD PTR [rax]
   140056804:	cmp    BYTE PTR [rbx+0x4],ch
   140056807:	add    BYTE PTR [rsi+rbx*2],bl
   14005680a:	add    eax,DWORD PTR [rax]
   14005680c:	cmp    al,0x5e
   14005680e:	add    eax,DWORD PTR [rax]
   140056810:	hlt    
   140056811:	push   rbx
   140056812:	add    al,0x0
   140056814:	cmp    al,0x5e
   140056816:	add    eax,DWORD PTR [rax]
   140056818:	pop    rsp
   140056819:	pop    rsi
   14005681a:	add    eax,DWORD PTR [rax]
   14005681c:	js     0x140056871
   14005681e:	add    al,0x0
   140056820:	pop    rsp
   140056821:	pop    rsi
   140056822:	add    eax,DWORD PTR [rax]
   140056824:	xchg   ebx,eax
   140056825:	pop    rsi
   140056826:	add    eax,DWORD PTR [rax]
   140056828:	add    BYTE PTR [rbp+0x4],dl
   14005682b:	add    BYTE PTR [rbx-0xfffca2],dl
   140056831:	pop    rsi
   140056832:	add    eax,DWORD PTR [rax]
   140056834:	adc    BYTE PTR [rsp+rax*1+0x0],0x17
   140056839:	pop    rdi
   14005683a:	add    eax,DWORD PTR [rax]
   14005683c:	imul   ebx,DWORD PTR [rdi+0x3],0x0
   140056840:	push   rsp
   140056841:	push   rdi
   140056842:	add    al,0x0
   140056844:	ja     0x1400568a5
   140056846:	add    eax,DWORD PTR [rax]
   140056848:	movabs al,ds:0xcc000456a800035f
   140056851:	pop    rdi
   140056852:	add    eax,DWORD PTR [rax]
   140056854:	repnz pop rdi
   140056856:	add    eax,DWORD PTR [rax]
   140056858:	cmp    BYTE PTR [rbx+0x4],ch
   14005685b:	add    dh,bh
   14005685d:	pop    rdi
   14005685e:	add    eax,DWORD PTR [rax]
   140056860:	(bad)  
   140056861:	(bad)  
   140056862:	add    eax,DWORD PTR [rax]
   140056864:	xchg   esp,eax
   140056865:	pop    rdx
   140056866:	add    al,0x0
   140056868:	(bad)  
   140056869:	(bad)  
   14005686a:	add    eax,DWORD PTR [rax]
   14005686c:	push   rbp
   14005686d:	(bad)  
   14005686e:	add    eax,DWORD PTR [rax]
   140056870:	or     al,0x5b
   140056872:	add    al,0x0
   140056874:	sbb    eax,0x43000362
   140056879:	(bad)  
   14005687b:	add    BYTE PTR [rax],bh
   14005687d:	imul   eax,DWORD PTR [rax+rax*1],0xfffffff5
   140056881:	(bad)  
   140056883:	add    BYTE PTR [rdi],bl
   140056885:	movsxd eax,DWORD PTR [rbx]
   140056887:	add    BYTE PTR [rax],bh
   140056889:	imul   eax,DWORD PTR [rax+rax*1],0x56
   14005688d:	add    ax,WORD PTR [rax]
   140056890:	jne    0x1400568f8
   140056892:	add    eax,DWORD PTR [rax]
   140056894:	cmp    BYTE PTR [rbx+0x4],ch
   140056897:	add    BYTE PTR [rcx+0x6c],bl
   14005689a:	add    eax,DWORD PTR [rax]
   14005689c:	mov    WORD PTR [rbx+rax*1+0x0],gs
   1400568a0:	cmp    BYTE PTR [rbx+0x4],ch
   1400568a3:	add    BYTE PTR [rsp+rbp*2+0x6cb80003],cl
   1400568aa:	add    eax,DWORD PTR [rax]
   1400568ac:	cmp    BYTE PTR [rbx+0x4],ch
   1400568af:	add    ah,al
   1400568b1:	ins    BYTE PTR es:[rdi],dx
   1400568b2:	add    eax,DWORD PTR [rax]
   1400568b4:	add    al,0x6d
   1400568b6:	add    eax,DWORD PTR [rax]
   1400568b8:	rex imul eax,DWORD PTR [rax+rax*1],0x4
   1400568bd:	ins    DWORD PTR es:[rdi],dx
   1400568be:	add    eax,DWORD PTR [rax]
   1400568c0:	xor    al,0x6d
   1400568c2:	add    eax,DWORD PTR [rax]
   1400568c4:	cmp    BYTE PTR [rbx+0x4],ch
   1400568c7:	add    BYTE PTR [rax+0xa00036d],bh
   1400568cd:	outs   dx,BYTE PTR ds:[rsi]
   1400568ce:	add    eax,DWORD PTR [rax]
   1400568d0:	and    al,0x6a
   1400568d2:	add    al,0x0
   1400568d4:	or     ch,BYTE PTR [rsi+0x3]
   1400568d7:	add    BYTE PTR [rdi+0x6e],al
   1400568da:	add    eax,DWORD PTR [rax]
   1400568dc:	and    al,0x6a
   1400568de:	add    al,0x0
   1400568e0:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   1400568e2:	add    eax,DWORD PTR [rax]
   1400568e4:	retf   0x36e
   1400568e7:	add    BYTE PTR [rdx+rbp*2],ah
   1400568ea:	add    al,0x0
   1400568ec:	retf   0x36e
   1400568ef:	add    dh,ah
   1400568f1:	outs   dx,BYTE PTR ds:[rsi]
   1400568f2:	add    eax,DWORD PTR [rax]
   1400568f4:	cmp    BYTE PTR [rbx+0x4],ch
   1400568f7:	add    dh,ah
   1400568f9:	outs   dx,BYTE PTR ds:[rsi]
   1400568fa:	add    eax,DWORD PTR [rax]
   1400568fc:	(bad)  
   1400568fd:	outs   dx,DWORD PTR ds:[rsi]
   1400568fe:	add    eax,DWORD PTR [rax]
   140056900:	push   0x6000473
   140056905:	outs   dx,DWORD PTR ds:[rsi]
   140056906:	add    eax,DWORD PTR [rax]
   140056908:	sub    DWORD PTR [rdi+0x3],ebp
   14005690b:	add    al,bl
   14005690d:	jb     0x140056913
   14005690f:	add    BYTE PTR [rcx],ch
   140056911:	outs   dx,DWORD PTR ds:[rsi]
   140056912:	add    eax,DWORD PTR [rax]
   140056914:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140056916:	add    eax,DWORD PTR [rax]
   140056918:	js     0x14005698b
   14005691a:	add    al,0x0
   14005691c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14005691e:	add    eax,DWORD PTR [rax]
   140056920:	imul   ebp,DWORD PTR [rdi+0x3],0x0
   140056924:	cmp    BYTE PTR [rbx+0x4],ch
   140056927:	add    BYTE PTR [rdi+0x70],dh
   14005692a:	add    eax,DWORD PTR [rax]
   14005692c:	xchg   ebx,eax
   14005692d:	jo     0x140056932
   14005692f:	add    BYTE PTR [rax],bh
   140056931:	imul   eax,DWORD PTR [rax+rax*1],0xffffff93
   140056935:	jo     0x14005693a
   140056937:	add    BYTE PTR [rdi+0x38000370],ch
   14005693d:	imul   eax,DWORD PTR [rax+rax*1],0xffffffaf
   140056941:	jo     0x140056946
   140056943:	add    bl,cl
   140056945:	jo     0x14005694a
   140056947:	add    BYTE PTR [rax],bh
   140056949:	imul   eax,DWORD PTR [rax+rax*1],0xffffffcb
   14005694d:	jo     0x140056952
   14005694f:	add    bl,ch
   140056951:	jo     0x140056956
   140056953:	add    BYTE PTR [rax],cl
   140056955:	jne    0x14005695b
   140056957:	add    bl,ch
   140056959:	jo     0x14005695e
   14005695b:	add    BYTE PTR [rdi],al
   14005695d:	jno    0x140056962
   14005695f:	add    BYTE PTR [rax],bh
   140056961:	imul   eax,DWORD PTR [rax+rax*1],0x7
   140056965:	jno    0x14005696a
   140056967:	add    BYTE PTR [rbx],ah
   140056969:	jno    0x14005696e
   14005696b:	add    BYTE PTR [rax],bh
   14005696d:	imul   eax,DWORD PTR [rax+rax*1],0x23
   140056971:	jno    0x140056976
   140056973:	add    BYTE PTR [rdi],bh
   140056975:	jno    0x14005697a
   140056977:	add    BYTE PTR [rax],bh
   140056979:	imul   eax,DWORD PTR [rax+rax*1],0x3f
   14005697d:	jno    0x140056982
   14005697f:	add    BYTE PTR [rdi+0x71],bl
   140056982:	add    eax,DWORD PTR [rax]
   140056984:	push   0x73000472
   140056989:	je     0x14005698e
   14005698b:	add    BYTE PTR [rdi+0x38000374],cl
   140056991:	imul   eax,DWORD PTR [rax+rax*1],0xffffffd2
   140056995:	jne    0x14005699a
   140056997:	add    al,ch
   140056999:	jne    0x14005699e
   14005699b:	add    BYTE PTR [rdx+rax*4],cl
   14005699e:	add    al,0x0
   1400569a0:	rex.W jbe 0x1400569a6
   1400569a3:	add    BYTE PTR [rdi+0x76],ah
   1400569a6:	add    eax,DWORD PTR [rax]
   1400569a8:	cmp    BYTE PTR [rbx+0x4],ch
   1400569ab:	add    dl,bh
   1400569ad:	jbe    0x1400569b2
   1400569af:	add    BYTE PTR [rax],dl
   1400569b1:	ja     0x1400569b6
   1400569b3:	add    BYTE PTR [rdx+rax*4],cl
   1400569b6:	add    al,0x0
   1400569b8:	mov    ebx,0xd7000378
   1400569bd:	js     0x1400569c2
   1400569bf:	add    BYTE PTR [rax],bh
   1400569c1:	imul   eax,DWORD PTR [rax+rax*1],0xffffffd7
   1400569c5:	js     0x1400569ca
   1400569c7:	add    dh,ch
   1400569c9:	js     0x1400569ce
   1400569cb:	add    BYTE PTR [rax-0x7b],bh
   1400569ce:	add    al,0x0
   1400569d0:	cli    
   1400569d1:	js     0x1400569d6
   1400569d3:	add    BYTE PTR [rdx],bl
   1400569d5:	jns    0x1400569da
   1400569d7:	add    ah,dh
   1400569d9:	test   DWORD PTR [rax+rax*1],eax
   1400569dc:	and    bh,BYTE PTR [rdx+0x3]
   1400569df:	add    BYTE PTR [rax+0x7a],cl
   1400569e2:	add    eax,DWORD PTR [rax]
   1400569e4:	cmp    BYTE PTR [rbx+0x4],ch
   1400569e7:	add    BYTE PTR [rax+0x7a],cl
   1400569ea:	add    eax,DWORD PTR [rax]
   1400569ec:	outs   dx,BYTE PTR ds:[rsi]
   1400569ed:	jp     0x1400569f2
   1400569ef:	add    BYTE PTR [rax],bh
   1400569f1:	imul   eax,DWORD PTR [rax+rax*1],0x26
   1400569f5:	jnp    0x1400569fa
   1400569f7:	add    BYTE PTR [rcx+0x7b],al
   1400569fa:	add    eax,DWORD PTR [rax]
   1400569fc:	mov    WORD PTR [rsp+rax*1+0x37b4d00],cs
   140056a03:	add    BYTE PTR [rbx+0x7b],ch
   140056a06:	add    eax,DWORD PTR [rax]
   140056a08:	adc    BYTE PTR [rsi+0x7b770004],cl
   140056a0e:	add    eax,DWORD PTR [rax]
   140056a10:	movabs al,ds:0xc800048d2800037b
   140056a19:	jnp    0x140056a1e
   140056a1b:	add    dh,ch
   140056a1d:	jnp    0x140056a22
   140056a1f:	add    BYTE PTR [rax],bh
   140056a21:	imul   eax,DWORD PTR [rax+rax*1],0xa
   140056a25:	jl     0x140056a2a
   140056a27:	add    BYTE PTR [rsp+rdi*2],dh
   140056a2a:	add    eax,DWORD PTR [rax]
   140056a2c:	cmp    BYTE PTR [rbx+0x4],ch
   140056a2f:	add    BYTE PTR [rax+0x7c],al
   140056a32:	add    eax,DWORD PTR [rax]
   140056a34:	outs   dx,BYTE PTR ds:[rsi]
   140056a35:	jl     0x140056a3a
   140056a37:	add    BYTE PTR [rax],bh
   140056a39:	imul   eax,DWORD PTR [rax+rax*1],0xffffff86
   140056a3d:	jl     0x140056a42
   140056a3f:	add    BYTE PTR [rcx+0x2000037c],ah
   140056a45:	xchg   esp,eax
   140056a46:	add    al,0x0
   140056a48:	xor    eax,0x5700037f
   140056a4d:	jg     0x140056a52
   140056a4f:	add    BYTE PTR [rax-0x6b],bh
   140056a52:	add    al,0x0
   140056a54:	push   rdi
   140056a55:	add    BYTE PTR [rbx],0x0
   140056a58:	jb     0x1400569da
   140056a5a:	add    eax,DWORD PTR [rax]
   140056a5c:	enter  0x49b,0x0
   140056a60:	jb     0x1400569e2
   140056a62:	add    eax,DWORD PTR [rax]
   140056a64:	lea    eax,[rax-0x660ffffd]
   140056a6a:	add    al,0x0
   140056a6c:	lea    eax,[rax-0x7f57fffd]
   140056a72:	add    eax,DWORD PTR [rax]
   140056a74:	fcomp  DWORD PTR [rdx-0x7f0ffffc]
   140056a7a:	add    eax,DWORD PTR [rax]
   140056a7c:	or     al,0x81
   140056a7e:	add    eax,DWORD PTR [rax]
   140056a80:	cmp    BYTE PTR [rbx+0x4],ch
   140056a83:	add    BYTE PTR [rcx+rax*4],cl
   140056a86:	add    eax,DWORD PTR [rax]
   140056a88:	(bad)  
   140056a89:	add    DWORD PTR [rbx],0x4998000
   140056a8f:	add    BYTE PTR [rdi],dh
   140056a91:	add    DWORD PTR [rbx],0x3815300
   140056a97:	add    BYTE PTR [rax],bh
   140056a99:	imul   eax,DWORD PTR [rax+rax*1],0x53
   140056a9d:	add    DWORD PTR [rbx],0x3817e00
   140056aa3:	add    ah,dh
   140056aa5:	xchg   edi,eax
   140056aa6:	add    al,0x0
   140056aa8:	jle    0x140056a2b
   140056aaa:	add    eax,DWORD PTR [rax]
   140056aac:	(bad)  
   140056aad:	add    DWORD PTR [rbx],0x46b3800
   140056ab3:	add    dl,al
   140056ab5:	add    DWORD PTR [rbx],0x381ed00
   140056abb:	add    ah,ah
   140056abd:	cwde   
   140056abe:	add    al,0x0
   140056ac0:	gs (bad) 
   140056ac2:	add    eax,DWORD PTR [rax]
   140056ac4:	fld    QWORD PTR [rdx-0x6597fffd]
   140056aca:	add    al,0x0
   140056acc:	fld    QWORD PTR [rdx-0x7ca7fffd]
   140056ad2:	add    eax,DWORD PTR [rax]
   140056ad4:	push   rsp
   140056ad5:	fwait
   140056ad6:	add    al,0x0
   140056ad8:	test   DWORD PTR [rbx+rax*1+0x384a700],eax
   140056adf:	add    BYTE PTR [rax],bh
   140056ae1:	imul   eax,DWORD PTR [rax+rax*1],0xfffffffc
   140056ae5:	xchg   BYTE PTR [rbx],al
   140056ae7:	add    BYTE PTR [rdi],ah
   140056ae9:	xchg   DWORD PTR [rbx],eax
   140056aeb:	add    BYTE PTR [rax],cl
   140056aed:	rex.WX add al,0x0
   140056af0:	sub    BYTE PTR [rdi-0x789efffd],al
   140056af6:	add    eax,DWORD PTR [rax]
   140056af8:	enter  0x449,0x0
   140056afc:	xchg   DWORD PTR fs:[rbx],eax
   140056aff:	add    BYTE PTR [rbp-0x77fffc79],bl
   140056b05:	rex.WB add al,0x0
   140056b08:	movabs al,ds:0xc0000388f3000387
   140056b11:	pop    rcx
   140056b12:	add    al,0x0
   140056b14:	add    BYTE PTR [rcx-0x76a1fffd],cl
   140056b1a:	add    eax,DWORD PTR [rax]
   140056b1c:	mov    BYTE PTR [rdi-0x769ffffc],bl
   140056b22:	add    eax,DWORD PTR [rax]
   140056b24:	lahf   
   140056b25:	mov    DWORD PTR [rbx],eax
   140056b27:	add    BYTE PTR [rbx+rax*4-0x765ffffc],al
   140056b2e:	add    eax,DWORD PTR [rax]
   140056b30:	fisttp WORD PTR [rcx-0x7cc3fffd]
   140056b36:	add    al,0x0
   140056b38:	or     al,0x8a
   140056b3a:	add    eax,DWORD PTR [rax]
   140056b3c:	pop    rdx
   140056b3d:	mov    al,BYTE PTR [rbx]
   140056b3f:	add    al,cl
   140056b41:	xchg   ebp,eax
   140056b42:	add    al,0x0
   140056b44:	pop    rsp
   140056b45:	mov    al,BYTE PTR [rbx]
   140056b47:	add    BYTE PTR [rdx+rcx*4+0x3],bh
   140056b4b:	add    BYTE PTR [rsi+rax*4],al
   140056b4e:	add    al,0x0
   140056b50:	jl     0x140056adc
   140056b52:	add    eax,DWORD PTR [rax]
   140056b54:	mov    dl,0x8a
   140056b56:	add    eax,DWORD PTR [rax]
   140056b58:	add    al,0x86
   140056b5a:	add    al,0x0
   140056b5c:	enter  0x38a,0x0
   140056b60:	out    0x8a,eax
   140056b62:	add    eax,DWORD PTR [rax]
   140056b64:	(bad)  
   140056b65:	rex.WB add al,0x0
   140056b68:	call   0x147056ef7
   140056b6d:	mov    eax,DWORD PTR [rbx]
   140056b6f:	add    BYTE PTR [rax],bh
   140056b71:	rex.WB add al,0x0
   140056b74:	or     BYTE PTR [rbx-0x74d8fffd],cl
   140056b7a:	add    eax,DWORD PTR [rax]
   140056b7c:	and    BYTE PTR [rcx+0x4],cl
   140056b7f:	add    BYTE PTR [rax],ch
   140056b81:	mov    eax,DWORD PTR [rbx]
   140056b83:	add    bh,cl
   140056b85:	mov    eax,DWORD PTR [rbx]
   140056b87:	add    BYTE PTR [rcx+rbx*2+0x4],dh
   140056b8b:	add    ah,ah
   140056b8d:	mov    eax,DWORD PTR [rbx]
   140056b8f:	add    BYTE PTR [rsi],cl
   140056b91:	mov    WORD PTR [rbx],es
   140056b93:	add    BYTE PTR [rax-0x7f],cl
   140056b96:	add    al,0x0
   140056b98:	adc    BYTE PTR [rbx+rax*1+0x38c2d00],cl
   140056b9f:	add    BYTE PTR [rbx+rax*4+0x4],ch
   140056ba3:	add    BYTE PTR [rax],dh
   140056ba5:	mov    WORD PTR [rbx],es
   140056ba7:	add    BYTE PTR [rbp-0x74],cl
   140056baa:	add    eax,DWORD PTR [rax]
   140056bac:	and    al,0x83
   140056bae:	add    al,0x0
   140056bb0:	push   rax
   140056bb1:	mov    WORD PTR [rbx],es
   140056bb3:	add    BYTE PTR [rbp-0x74],bh
   140056bb6:	add    eax,DWORD PTR [rax]
   140056bb8:	add    al,0x86
   140056bba:	add    al,0x0
   140056bbc:	cwde   
   140056bbd:	mov    WORD PTR [rbx],es
   140056bbf:	add    dl,cl
   140056bc1:	mov    WORD PTR [rbx],es
   140056bc3:	add    BYTE PTR [rsi+rax*4],al
   140056bc6:	add    al,0x0

Disassembly of section .rsrc:

0000000140057000 <.rsrc>:
	...
   140057008:	add    al,0x0
   14005700a:	add    BYTE PTR [rax],al
   14005700c:	add    BYTE PTR [rax],al
   14005700e:	add    al,BYTE PTR [rax]
   140057010:	adc    BYTE PTR [rax],al
   140057012:	add    BYTE PTR [rax],al
   140057014:	and    BYTE PTR [rax],al
   140057016:	add    BYTE PTR [rax+0x18],al
   14005701c:	cmp    BYTE PTR [rax],al
   14005701e:	add    BYTE PTR [rax+0x0],al
   140057024:	add    BYTE PTR [rax],al
   140057026:	add    BYTE PTR [rax],al
   140057028:	add    al,0x0
   14005702a:	add    BYTE PTR [rax],al
   14005702c:	add    BYTE PTR [rax],al
   14005702e:	add    DWORD PTR [rax],eax
   140057030:	add    DWORD PTR [rax],eax
   140057032:	add    BYTE PTR [rax],al
   140057034:	push   rax
   140057035:	add    BYTE PTR [rax],al
   140057037:	add    BYTE PTR [rax],0x0
   14005703a:	add    BYTE PTR [rax],al
   14005703c:	add    BYTE PTR [rax],al
   14005703e:	add    BYTE PTR [rax],al
   140057040:	add    al,0x0
   140057042:	add    BYTE PTR [rax],al
   140057044:	add    BYTE PTR [rax],al
   140057046:	add    DWORD PTR [rax],eax
   140057048:	add    DWORD PTR [rax],eax
   14005704a:	add    BYTE PTR [rax],al
   14005704c:	push   0x800000
   140057051:	add    BYTE PTR [rax],al
   140057053:	add    BYTE PTR [rax],al
   140057055:	add    BYTE PTR [rax],al
   140057057:	add    BYTE PTR [rax+rax*1],al
   14005705a:	add    BYTE PTR [rax],al
   14005705c:	add    BYTE PTR [rax],al
   14005705e:	add    DWORD PTR [rax],eax
   140057060:	or     DWORD PTR [rax+rax*1],eax
   140057063:	add    BYTE PTR [rax+0x0],al
   140057069:	add    BYTE PTR [rax],al
   14005706b:	add    BYTE PTR [rax],al
   14005706d:	add    BYTE PTR [rax],al
   14005706f:	add    BYTE PTR [rax+rax*1],al
   140057072:	add    BYTE PTR [rax],al
   140057074:	add    BYTE PTR [rax],al
   140057076:	add    DWORD PTR [rax],eax
   140057078:	or     DWORD PTR [rax+rax*1],eax
   14005707b:	add    BYTE PTR [rax-0x60000000],dl
   140057081:	jo     0x140057088
   140057083:	add    BYTE PTR [rbx+rax*1+0x4e40000],dl
   14005708a:	add    BYTE PTR [rax],al
   14005708c:	add    BYTE PTR [rax],al
   14005708e:	add    BYTE PTR [rax],al
   140057090:	xor    al,0x74
   140057092:	add    eax,0x19b00
   140057097:	add    ah,ah
   140057099:	add    al,0x0
   14005709b:	add    BYTE PTR [rax],al
   14005709d:	add    BYTE PTR [rax],al
   14005709f:	add    BYTE PTR [rbx+rax*1+0x34],dl
   1400570a6:	push   rsi
   1400570a7:	add    BYTE PTR [rbx+0x0],dl
   1400570aa:	pop    rdi
   1400570ab:	add    BYTE PTR [rsi+0x0],dl
   1400570ae:	add    BYTE PTR [r10+0x0],r10b
   1400570b2:	push   rbx
   1400570b3:	add    BYTE PTR [rcx+0x0],cl
   1400570b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400570ba:	pop    rdi
   1400570bb:	add    BYTE PTR [rcx+0x0],cl
   1400570be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400570c2:	rex.WRXB add BYTE PTR [r8],r8b
   1400570c5:	add    BYTE PTR [rax],al
   1400570c7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400570cd:	add    BYTE PTR [rcx],al
   1400570cf:	add    BYTE PTR [rax],al
   1400570d1:	add    BYTE PTR [rbx],cl
   1400570d3:	add    BYTE PTR [rcx],al
   1400570d5:	add    BYTE PTR [rdi],ah
   1400570d7:	mov    BYTE PTR [rax],0x0
   1400570da:	or     eax,DWORD PTR [rax]
   1400570dc:	add    DWORD PTR [rax],eax
   1400570de:	(bad)  
   1400570df:	(bad)  
   1400570e0:	(bad)  
   1400570e1:	add    BYTE PTR [rax],al
   1400570e3:	add    BYTE PTR [rax],al
   1400570e5:	add    BYTE PTR [rax],al
   1400570e7:	add    BYTE PTR [rax+rax*1],al
   1400570ea:	add    BYTE PTR [rax],al
   1400570ec:	add    DWORD PTR [rax],eax
	...
   1400570fa:	add    BYTE PTR [rax],al
   1400570fc:	repnz add al,BYTE PTR [rax]
   1400570ff:	add    BYTE PTR [rcx],al
   140057101:	add    BYTE PTR [rbx+0x0],dl
   140057104:	je     0x140057106
   140057106:	jb     0x140057108
   140057108:	imul   eax,DWORD PTR [rax],0x67006e
   14005710e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140057112:	ins    BYTE PTR es:[rdi],dx
   140057113:	add    BYTE PTR [rbp+0x0],ah
   140057116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14005711a:	data16 add BYTE PTR [rdi+0x0],ch
   14005711e:	add    BYTE PTR [rax],al
   140057120:	(bad)  
   140057121:	add    al,BYTE PTR [rax]
   140057123:	add    BYTE PTR [rcx],al
   140057125:	add    BYTE PTR [rax],dh
   140057127:	add    BYTE PTR [rax+rax*1],dh
   14005712a:	xor    BYTE PTR [rax],al
   14005712c:	cmp    DWORD PTR [rax],eax
   14005712e:	xor    BYTE PTR [rax],al
   140057130:	xor    al,0x0
   140057132:	(bad)  
   140057133:	add    BYTE PTR [rax],dh
   140057135:	add    BYTE PTR [rax],al
   140057137:	add    BYTE PTR [rax+rax*1+0x16],cl
   14005713b:	add    BYTE PTR [rcx],al
   14005713d:	add    BYTE PTR [rbx+0x0],al
   140057140:	outs   dx,DWORD PTR ds:[rsi]
   140057141:	add    BYTE PTR [rbp+0x0],ch
   140057144:	jo     0x140057146
   140057146:	(bad)  
   140057147:	add    BYTE PTR [rsi+0x0],ch
   14005714a:	jns    0x14005714c
   14005714c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140057150:	ins    DWORD PTR es:[rdi],dx
   140057151:	add    BYTE PTR [rbp+0x0],ah
   140057154:	add    BYTE PTR [rax],al
   140057156:	add    BYTE PTR [rax],al
   140057158:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14005715c:	movsxd eax,DWORD PTR [rax]
   14005715e:	jb     0x140057160
   140057160:	outs   dx,DWORD PTR ds:[rsi]
   140057161:	add    BYTE PTR [rbx+0x0],dh
   140057164:	outs   dx,DWORD PTR ds:[rsi]
   140057165:	add    BYTE PTR [rsi+0x0],ah
   140057168:	je     0x14005716a
   14005716a:	and    BYTE PTR [rax],al
   14005716c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140057170:	jb     0x140057172
   140057172:	jo     0x140057174
   140057174:	outs   dx,DWORD PTR ds:[rsi]
   140057175:	add    BYTE PTR [rdx+0x0],dh
   140057178:	(bad)  
   140057179:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005717d:	add    BYTE PTR [rdi+0x0],ch
   140057180:	outs   dx,BYTE PTR ds:[rsi]
   140057181:	add    BYTE PTR [rax],al
   140057183:	add    BYTE PTR [rax+0x0],dh
   140057186:	and    al,0x0
   140057188:	add    DWORD PTR [rax],eax
   14005718a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14005718e:	ins    BYTE PTR es:[rdi],dx
   14005718f:	add    BYTE PTR [rbp+0x0],ah
   140057192:	add    BYTE PTR [rbp+0x0],r12b
   140057196:	jae    0x140057198
   140057198:	movsxd eax,DWORD PTR [rax]
   14005719a:	jb     0x14005719c
   14005719c:	imul   eax,DWORD PTR [rax],0x740070
   1400571a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400571a8:	add    BYTE PTR [rax],al
   1400571aa:	add    BYTE PTR [rax],al
   1400571ac:	push   rsi
   1400571ad:	add    BYTE PTR [rbx+0x0],dl
   1400571b0:	push   rax
   1400571b1:	add    BYTE PTR [rbp+0x0],ah
   1400571b4:	jb     0x1400571b6
   1400571b6:	data16 add BYTE PTR [rax],ah
   1400571b9:	add    BYTE PTR [rbx+0x0],al
   1400571bc:	outs   dx,DWORD PTR ds:[rsi]
   1400571bd:	add    BYTE PTR [rsi+0x0],ch
   1400571c0:	jae    0x1400571c2
   1400571c2:	outs   dx,DWORD PTR ds:[rsi]
   1400571c3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400571c7:	add    BYTE PTR [rax],ah
   1400571c9:	add    BYTE PTR [rax+0x0],dl
   1400571cc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400571d0:	data16 add BYTE PTR [rdi+0x0],ch
   1400571d4:	jb     0x1400571d6
   1400571d6:	ins    DWORD PTR es:[rdi],dx
   1400571d7:	add    BYTE PTR [rcx+0x0],ah
   1400571da:	outs   dx,BYTE PTR ds:[rsi]
   1400571db:	add    BYTE PTR [rbx+0x0],ah
   1400571de:	add    BYTE PTR gs:[rax],ah
   1400571e1:	add    BYTE PTR [rbp+0x0],cl
   1400571e4:	outs   dx,DWORD PTR ds:[rsi]
   1400571e5:	add    BYTE PTR [rsi+0x0],ch
   1400571e8:	imul   eax,DWORD PTR [rax],0x6f0074
   1400571ee:	jb     0x1400571f0
   1400571f0:	add    BYTE PTR cs:[rax],al
   1400571f3:	add    BYTE PTR [rax+rax*1+0x1e],bl
   1400571f7:	add    BYTE PTR [rcx],al
   1400571f9:	add    BYTE PTR [rsi+0x0],al
   1400571fc:	imul   eax,DWORD PTR [rax],0x65006c
   140057202:	push   rsi
   140057203:	add    BYTE PTR [rbp+0x0],ah
   140057206:	jb     0x140057208
   140057208:	jae    0x14005720a
   14005720a:	imul   eax,DWORD PTR [rax],0x6e006f
   140057210:	add    BYTE PTR [rax],al
   140057212:	add    BYTE PTR [rax],al
   140057214:	xor    DWORD PTR [rax],eax
   140057216:	xor    DWORD PTR [rax],eax
   140057218:	add    BYTE PTR cs:[rax],dh
   14005721b:	add    BYTE PTR [rsi],ch
   14005721d:	add    BYTE PTR [rip+0x37003000],dh        # 0x17705a223
   140057223:	add    BYTE PTR [rdx],dh
   140057225:	add    BYTE PTR [rdi],dh
   140057227:	add    BYTE PTR [rsi],ch
   140057229:	add    BYTE PTR [rcx],dh
   14005722b:	add    BYTE PTR [rax],ah
   14005722d:	add    BYTE PTR [rdx+0x0],ah
   140057230:	jne    0x140057232
   140057232:	imul   eax,DWORD PTR [rax],0x74006c
   140057238:	and    BYTE PTR [rax],al
   14005723a:	(bad)  
   14005723b:	add    BYTE PTR [rcx+0x0],bh
   14005723e:	cmp    al,BYTE PTR [rax]
   140057240:	and    BYTE PTR [rax],al
   140057242:	push   rdx
   140057243:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140057247:	add    BYTE PTR [rdx+0x0],dl
   14005724a:	add    BYTE PTR [r8+rax*1+0x0],r9b
   14005724f:	add    BYTE PTR [rax+rax*1],bh
   140057252:	(bad)  
   140057253:	add    BYTE PTR [rcx],al
   140057255:	add    BYTE PTR [rcx+0x0],cl
   140057258:	outs   dx,BYTE PTR ds:[rsi]
   140057259:	add    BYTE PTR [rax+rax*1+0x65],dh
   14005725d:	add    BYTE PTR [rdx+0x0],dh
   140057260:	outs   dx,BYTE PTR ds:[rsi]
   140057261:	add    BYTE PTR [rcx+0x0],ah
   140057264:	ins    BYTE PTR es:[rdi],dx
   140057265:	add    BYTE PTR [rsi+0x0],cl
   140057268:	(bad)  
   140057269:	add    BYTE PTR [rbp+0x0],ch
   14005726c:	add    BYTE PTR gs:[rax],al
   14005726f:	add    BYTE PTR [rsi+0x0],dl
   140057272:	push   rbx
   140057273:	add    BYTE PTR [rax+0x0],dl
   140057276:	add    BYTE PTR gs:[rdx+0x0],dh
   14005727a:	data16 add BYTE PTR [rbp+0x0],cl
   14005727e:	outs   dx,DWORD PTR ds:[rsi]
   14005727f:	add    BYTE PTR [rsi+0x0],ch
   140057282:	add    BYTE PTR cs:[rbp+0x0],ah
   140057286:	js     0x140057288
   140057288:	add    BYTE PTR gs:[rax],al
   14005728b:	add    BYTE PTR [rax+0x1002e00],al
   140057291:	add    BYTE PTR [rax+rax*1+0x65],cl
   140057295:	add    BYTE PTR [rdi+0x0],ah
   140057298:	(bad)  
   140057299:	add    BYTE PTR [rax+rax*1+0x43],ch
   14005729d:	add    BYTE PTR [rdi+0x0],ch
   1400572a0:	jo     0x1400572a2
   1400572a2:	jns    0x1400572a4
   1400572a4:	jb     0x1400572a6
   1400572a6:	imul   eax,DWORD PTR [rax],0x680067
   1400572ac:	je     0x1400572ae
   1400572ae:	add    BYTE PTR [rax],al
   1400572b0:	test   eax,0x4d002000
   1400572b5:	add    BYTE PTR [rcx+0x0],ch
   1400572b8:	movsxd eax,DWORD PTR [rax]
   1400572ba:	jb     0x1400572bc
   1400572bc:	outs   dx,DWORD PTR ds:[rsi]
   1400572bd:	add    BYTE PTR [rbx+0x0],dh
   1400572c0:	outs   dx,DWORD PTR ds:[rsi]
   1400572c1:	add    BYTE PTR [rsi+0x0],ah
   1400572c4:	je     0x1400572c6
   1400572c6:	and    BYTE PTR [rax],al
   1400572c8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400572cc:	jb     0x1400572ce
   1400572ce:	jo     0x1400572d0
   1400572d0:	outs   dx,DWORD PTR ds:[rsi]
   1400572d1:	add    BYTE PTR [rdx+0x0],dh
   1400572d4:	(bad)  
   1400572d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400572d9:	add    BYTE PTR [rdi+0x0],ch
   1400572dc:	outs   dx,BYTE PTR ds:[rsi]
   1400572dd:	add    BYTE PTR [rsi],ch
   1400572df:	add    BYTE PTR [rax],ah
   1400572e1:	add    BYTE PTR [rcx+0x0],al
   1400572e4:	ins    BYTE PTR es:[rdi],dx
   1400572e5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400572e9:	add    BYTE PTR [rdx+0x0],dh
   1400572ec:	imul   eax,DWORD PTR [rax],0x680067
   1400572f2:	je     0x1400572f4
   1400572f4:	jae    0x1400572f6
   1400572f6:	and    BYTE PTR [rax],al
   1400572f8:	jb     0x1400572fa
   1400572fa:	add    BYTE PTR gs:[rbx+0x0],dh
   1400572fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140057302:	jbe    0x140057304
   140057304:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057309:	add    BYTE PTR [rax],al
   14005730b:	add    BYTE PTR [rax+rax*1+0xe],al
   14005730f:	add    BYTE PTR [rcx],al
   140057311:	add    BYTE PTR [rdi+0x0],cl
   140057314:	jb     0x140057316
   140057316:	imul   eax,DWORD PTR [rax],0x690067
   14005731c:	outs   dx,BYTE PTR ds:[rsi]
   14005731d:	add    BYTE PTR [rcx+0x0],ah
   140057320:	ins    BYTE PTR es:[rdi],dx
   140057321:	add    BYTE PTR [rsi+0x0],al
   140057324:	imul   eax,DWORD PTR [rax],0x65006c
   14005732a:	outs   dx,BYTE PTR ds:[rsi]
   14005732b:	add    BYTE PTR [rcx+0x0],ah
   14005732e:	ins    DWORD PTR es:[rdi],dx
   14005732f:	add    BYTE PTR [rbp+0x0],ah
   140057332:	add    BYTE PTR [rax],al
   140057334:	push   rsi
   140057335:	add    BYTE PTR [rbx+0x0],dl
   140057338:	push   rax
   140057339:	add    BYTE PTR [rbp+0x0],ah
   14005733c:	jb     0x14005733e
   14005733e:	data16 add BYTE PTR [rbp+0x0],cl
   140057342:	outs   dx,DWORD PTR ds:[rsi]
   140057343:	add    BYTE PTR [rsi+0x0],ch
   140057346:	add    BYTE PTR cs:[rbp+0x0],ah
   14005734a:	js     0x14005734c
   14005734c:	add    BYTE PTR gs:[rax],al
   14005734f:	add    BYTE PTR [rsi+0x0],bl
   140057352:	(bad)  
   140057353:	add    BYTE PTR [rcx],al
   140057355:	add    BYTE PTR [rax+0x0],dl
   140057358:	jb     0x14005735a
   14005735a:	outs   dx,DWORD PTR ds:[rsi]
   14005735b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14005735f:	add    BYTE PTR [rbx+0x0],ah
   140057362:	je     0x140057364
   140057364:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140057368:	ins    DWORD PTR es:[rdi],dx
   140057369:	add    BYTE PTR [rbp+0x0],ah
   14005736c:	add    BYTE PTR [rax],al
   14005736e:	add    BYTE PTR [rax],al
   140057370:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140057374:	movsxd eax,DWORD PTR [rax]
   140057376:	jb     0x140057378
   140057378:	outs   dx,DWORD PTR ds:[rsi]
   140057379:	add    BYTE PTR [rbx+0x0],dh
   14005737c:	outs   dx,DWORD PTR ds:[rsi]
   14005737d:	add    BYTE PTR [rsi+0x0],ah
   140057380:	je     0x140057382
   140057382:	scas   al,BYTE PTR es:[rdi]
   140057383:	add    BYTE PTR [rax],ah
   140057385:	add    BYTE PTR [rsi+0x0],dl
   140057388:	imul   eax,DWORD PTR [rax],0x750073
   14005738e:	(bad)  
   14005738f:	add    BYTE PTR [rax+rax*1+0x20],ch
   140057393:	add    BYTE PTR [rbx+0x0],dl
   140057396:	je     0x140057398
   140057398:	jne    0x14005739a
   14005739a:	add    BYTE PTR fs:[rcx+0x0],ch
   14005739e:	outs   dx,DWORD PTR ds:[rsi]
   14005739f:	add    BYTE PTR [rsi+0x32002000],ch
   1400573a5:	add    BYTE PTR [rax],dh
   1400573a7:	add    BYTE PTR [rcx],dh
   1400573a9:	add    BYTE PTR [rdx],dh
   1400573ab:	add    BYTE PTR [rax],al
   1400573ad:	add    BYTE PTR [rax],al
   1400573af:	add    BYTE PTR [rsi],bh
   1400573b1:	add    BYTE PTR [rip+0x50000100],cl        # 0x1900574b7
   1400573b7:	add    BYTE PTR [rdx+0x0],dh
   1400573ba:	outs   dx,DWORD PTR ds:[rsi]
   1400573bb:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400573bf:	add    BYTE PTR [rbx+0x0],ah
   1400573c2:	je     0x1400573c4
   1400573c4:	push   rsi
   1400573c5:	add    BYTE PTR [rbp+0x0],ah
   1400573c8:	jb     0x1400573ca
   1400573ca:	jae    0x1400573cc
   1400573cc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400573d2:	add    BYTE PTR [rax],al
   1400573d4:	xor    DWORD PTR [rax],eax
   1400573d6:	xor    DWORD PTR [rax],eax
   1400573d8:	add    BYTE PTR cs:[rax],dh
   1400573db:	add    BYTE PTR [rsi],ch
   1400573dd:	add    BYTE PTR [rip+0x37003000],dh        # 0x17705a3e3
   1400573e3:	add    BYTE PTR [rdx],dh
   1400573e5:	add    BYTE PTR [rdi],dh
   1400573e7:	add    BYTE PTR [rsi],ch
   1400573e9:	add    BYTE PTR [rcx],dh
   1400573eb:	add    BYTE PTR [rax],al
   1400573ed:	add    BYTE PTR [rax],al
   1400573ef:	add    BYTE PTR [rax+rax*1+0x0],al
   1400573f3:	add    BYTE PTR [rcx],al
   1400573f5:	add    BYTE PTR [rsi+0x0],dl
   1400573f8:	(bad)  
   1400573f9:	add    BYTE PTR [rdx+0x0],dh
   1400573fc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140057400:	ins    BYTE PTR es:[rdi],dx
   140057401:	add    BYTE PTR [rbp+0x0],ah
   140057404:	rex.WB add BYTE PTR [r14+0x0],bpl
   140057408:	data16 add BYTE PTR [rdi+0x0],ch
   14005740c:	add    BYTE PTR [rax],al
   14005740e:	add    BYTE PTR [rax],al
   140057410:	and    al,0x0
   140057412:	add    al,0x0
   140057414:	add    BYTE PTR [rax],al
   140057416:	push   rsp
   140057417:	add    BYTE PTR [rdx+0x0],dh
   14005741a:	(bad)  
   14005741b:	add    BYTE PTR [rsi+0x0],ch
   14005741e:	jae    0x140057420
   140057420:	ins    BYTE PTR es:[rdi],dx
   140057421:	add    BYTE PTR [rcx+0x0],ah
   140057424:	je     0x140057426
   140057426:	imul   eax,DWORD PTR [rax],0x6e006f
   14005742c:	add    BYTE PTR [rax],al
   14005742e:	add    BYTE PTR [rax],al
   140057430:	or     DWORD PTR [rax+rsi*4],eax
   140057433:	add    al,0x3c
   140057435:	(bad)  
   140057436:	jae    0x1400574ab
   140057438:	gs ins DWORD PTR es:[rdi],dx
   14005743a:	(bad)  
   14005743b:	ins    BYTE PTR es:[rdi],dx
   14005743c:	jns    0x14005745e
   14005743e:	js     0x1400574ad
   140057440:	ins    BYTE PTR es:[rdi],dx
   140057441:	outs   dx,BYTE PTR ds:[rsi]
   140057442:	jae    0x140057481
   140057444:	and    dh,BYTE PTR [rbp+0x72]
   140057447:	outs   dx,BYTE PTR ds:[rsi]
   140057448:	cmp    dh,BYTE PTR [rbx+0x63]
   14005744b:	push   0x73616d65
   140057450:	sub    eax,0x7263696d
   140057455:	outs   dx,DWORD PTR ds:[rsi]
   140057456:	jae    0x1400574c7
   140057458:	data16 je 0x140057488
   14005745b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14005745e:	cmp    ah,BYTE PTR [rcx+0x73]
   140057461:	ins    DWORD PTR es:[rdi],dx
   140057462:	cs jbe 0x140057496
   140057465:	and    ah,BYTE PTR [rax]
   140057467:	ins    DWORD PTR es:[rdi],dx
   140057468:	(bad)  
   140057469:	outs   dx,BYTE PTR ds:[rsi]
   14005746a:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140057471:	jb     0x1400574e6
   140057473:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14005747a:	xor    BYTE PTR [rdx],ah
   14005747c:	ds cmp al,0x61
   14005747f:	jae    0x1400574f4
   140057481:	gs ins DWORD PTR es:[rdi],dx
   140057483:	(bad)  
   140057484:	ins    BYTE PTR es:[rdi],dx
   140057485:	jns    0x1400574d0
   140057487:	fs outs dx,BYTE PTR gs:[rsi]
   14005748a:	je     0x1400574f5
   14005748c:	je     0x140057507
   14005748e:	and    BYTE PTR [rsi+0x65],dh
   140057491:	jb     0x140057506
   140057493:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14005749a:	xor    BYTE PTR [rsi],ch
   14005749c:	xor    BYTE PTR [rsi],ch
   14005749e:	xor    BYTE PTR [rdx],ah
   1400574a0:	and    BYTE PTR [rax+0x72],dh
   1400574a3:	outs   dx,DWORD PTR ds:[rsi]
   1400574a4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400574a7:	jae    0x140057518
   1400574a9:	jb     0x1400574ec
   1400574ab:	jb     0x140057510
   1400574ad:	push   0x63657469
   1400574b2:	je     0x140057529
   1400574b4:	jb     0x14005751b
   1400574b6:	cmp    eax,0x36385822
   1400574bb:	and    ah,BYTE PTR [rax]
   1400574bd:	outs   dx,BYTE PTR ds:[rsi]
   1400574be:	(bad)  
   1400574bf:	ins    DWORD PTR es:[rdi],dx
   1400574c0:	gs cmp eax,0x50535622
   1400574c6:	gs jb  0x14005752f
   1400574c9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400574cb:	outs   dx,BYTE PTR ds:[rsi]
   1400574cc:	and    ah,BYTE PTR [rax]
   1400574ce:	je     0x140057549
   1400574d0:	jo     0x140057537
   1400574d2:	cmp    eax,0x6e697722
   1400574d7:	xor    esi,DWORD PTR [rdx]
   1400574d9:	and    bh,BYTE PTR [rsi]
   1400574db:	cmp    al,0x2f
   1400574dd:	(bad)  
   1400574de:	jae    0x140057553
   1400574e0:	gs ins DWORD PTR es:[rdi],dx
   1400574e2:	(bad)  
   1400574e3:	ins    BYTE PTR es:[rdi],dx
   1400574e4:	jns    0x14005752f
   1400574e6:	fs outs dx,BYTE PTR gs:[rsi]
   1400574e9:	je     0x140057554
   1400574eb:	je     0x140057566
   1400574ed:	ds cmp al,0x74
   1400574f0:	jb     0x140057567
   1400574f2:	jae    0x140057568
   1400574f4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400574f6:	outs   dx,WORD PTR ds:[rsi]
   1400574f8:	and    BYTE PTR [rax+0x6d],bh
   1400574fb:	ins    BYTE PTR es:[rdi],dx
   1400574fc:	outs   dx,BYTE PTR ds:[rsi]
   1400574fd:	jae    0x14005753c
   1400574ff:	and    dh,BYTE PTR [rbp+0x72]
   140057502:	outs   dx,BYTE PTR ds:[rsi]
   140057503:	cmp    dh,BYTE PTR [rbx+0x63]
   140057506:	push   0x73616d65
   14005750b:	sub    eax,0x7263696d
   140057510:	outs   dx,DWORD PTR ds:[rsi]
   140057511:	jae    0x140057582
   140057513:	data16 je 0x140057543
   140057516:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140057519:	cmp    ah,BYTE PTR [rcx+0x73]
   14005751c:	ins    DWORD PTR es:[rdi],dx
   14005751d:	cs jbe 0x140057553
   140057520:	and    bh,BYTE PTR [rsi]
   140057522:	cmp    al,0x73
   140057524:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057528:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   140057530:	jne    0x140057597
   140057532:	jae    0x1400575a8
   140057534:	gs fs push rax
   140057537:	jb     0x1400575a2
   140057539:	jbe    0x1400575a4
   14005753b:	ins    BYTE PTR es:[rdi],dx
   14005753c:	gs addr32 gs jae 0x14005757f
   140057541:	cmp    al,0x72
   140057543:	gs jno 0x1400575bb
   140057546:	gs jae 0x1400575bd
   140057549:	gs fs rex.RB js 0x1400575b3
   14005754e:	movsxd esi,DWORD PTR [rbp+0x74]
   140057551:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140057558:	ins    BYTE PTR es:[rdi],dx
   140057559:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14005755d:	gs ins BYTE PTR es:[rdi],dx
   14005755f:	cmp    eax,0x49736122
   140057564:	outs   dx,BYTE PTR ds:[rsi]
   140057565:	jbe    0x1400575d6
   140057567:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14005756b:	and    BYTE PTR [rbp+0x69],dh
   14005756e:	movsxd esp,DWORD PTR [r11+0x65]
   140057572:	jae    0x1400575e7
   140057574:	cmp    eax,0x6c616622
   140057579:	jae    0x1400575e0
   14005757b:	and    bh,BYTE PTR [rsi]
   14005757d:	cmp    al,0x2f
   14005757f:	jb     0x1400575e6
   140057581:	jno    0x1400575f8
   140057583:	gs jae 0x1400575fa
   140057586:	gs fs rex.RB js 0x1400575f0
   14005758b:	movsxd esi,DWORD PTR [rbp+0x74]
   14005758e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140057595:	ins    BYTE PTR es:[rdi],dx
   140057596:	ds cmp al,0x2f
   140057599:	jb     0x140057600
   14005759b:	jno    0x140057612
   14005759d:	gs jae 0x140057614
   1400575a0:	gs fs push rax
   1400575a3:	jb     0x14005760e
   1400575a5:	jbe    0x140057610
   1400575a7:	ins    BYTE PTR es:[rdi],dx
   1400575a8:	gs addr32 gs jae 0x1400575eb
   1400575ad:	cmp    al,0x2f
   1400575af:	jae    0x140057616
   1400575b1:	movsxd esi,DWORD PTR [rbp+0x72]
   1400575b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   1400575bc:	jne    0x140057631
   1400575be:	je     0x140057609
   1400575c0:	outs   dx,BYTE PTR ds:[rsi]
   1400575c1:	outs   dx,WORD PTR ds:[rsi]
   1400575c3:	ds cmp al,0x2f
   1400575c6:	(bad)  
   1400575c7:	jae    0x14005763c
   1400575c9:	gs ins DWORD PTR es:[rdi],dx
   1400575cb:	(bad)  
   1400575cc:	ins    BYTE PTR es:[rdi],dx
   1400575cd:	jns    0x14005760d
   1400575cf:	push   rax

Disassembly of section .reloc:

0000000140058000 <.reloc>:
   140058000:	add    BYTE PTR [rax+0x6c0003],dl
   140058006:	add    BYTE PTR [rax],al
   140058008:	shl    BYTE PTR [rsi-0x592f5938],0xd8
   14005800f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058010:	loopne 0x140057fb8
   140058012:	call   0x138ac70bd
   140058017:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058018:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14005801e:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140058024:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058026:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140058028:	push   rax
   140058029:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005802a:	pop    rax
   14005802b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005802c:	(bad)  
   14005802d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005802e:	js     0x140057fd7
   140058030:	and    BYTE PTR [rdi-0x58175878],0xf0
   140058037:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058038:	clc    
   140058039:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005803a:	add    BYTE PTR [rax-0x56f757f8],ch
   140058040:	sbb    BYTE PTR [rcx-0x56c756d8],ch
   140058046:	test   rax,0xffffffffa968a958
   14005804c:	js     0x140057ff7
   14005804e:	mov    BYTE PTR [rcx-0x56575668],ch
   140058054:	mov    eax,0xd8a9c8a9
   140058059:	test   eax,0xa9f8a9e8
   14005805e:	or     BYTE PTR [rdx-0x55d755e8],ch
   140058064:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   14005806a:	push   0x3a000aa
   14005806f:	add    al,ah
   140058071:	add    BYTE PTR [rax],al
   140058073:	add    BYTE PTR [rax-0x5c],dh
   140058076:	js     0x14005801c
   140058078:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14005807e:	(bad)  
   14005807f:	test   eax,0xa970a968
   140058084:	js     0x14005802f
   140058086:	mov    al,0xaa
   140058088:	mov    eax,0xc8aac0aa
   14005808d:	stos   BYTE PTR es:[rdi],al
   14005808e:	shr    BYTE PTR [rdx-0x551f5528],1
   140058094:	call   0x138b07143
   140058099:	stos   BYTE PTR es:[rdi],al
   14005809a:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400580a0:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400580a6:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400580ac:	stos   QWORD PTR es:[rdi],rax
   1400580ae:	push   rax
   1400580af:	stos   DWORD PTR es:[rdi],eax
   1400580b0:	pop    rax
   1400580b1:	stos   DWORD PTR es:[rdi],eax
   1400580b2:	(bad)  
   1400580b3:	stos   DWORD PTR es:[rdi],eax
   1400580b4:	push   0x78ab70ab
   1400580b9:	stos   DWORD PTR es:[rdi],eax
   1400580ba:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400580c1:	stos   DWORD PTR es:[rdi],eax
   1400580c2:	movabs al,ds:0xc0abb8abb0aba8ab
   1400580cb:	stos   DWORD PTR es:[rdi],eax
   1400580cc:	enter  0xd0ab,0xab
   1400580d0:	fsubr  DWORD PTR [rbx-0x54175420]
   1400580d6:	lock stos DWORD PTR es:[rdi],eax
   1400580d8:	clc    
   1400580d9:	stos   DWORD PTR es:[rdi],eax
   1400580da:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400580e1:	lods   al,BYTE PTR ds:[rsi]
   1400580e2:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400580e9:	lods   al,BYTE PTR ds:[rsi]
   1400580ea:	lods   al,BYTE PTR ds:[rsi]
   1400580ec:	rex.W lods al,BYTE PTR ds:[rsi]
   1400580ee:	push   rax
   1400580ef:	lods   al,BYTE PTR ds:[rsi]
   1400580f0:	pop    rax
   1400580f1:	lods   al,BYTE PTR ds:[rsi]
   1400580f2:	(bad)  
   1400580f3:	lods   al,BYTE PTR ds:[rsi]
   1400580f4:	push   0x78ac70ac
   1400580f9:	lods   al,BYTE PTR ds:[rsi]
   1400580fa:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   140058102:	movabs al,ds:0xc0acb8acb0aca8ac
   14005810b:	lods   al,BYTE PTR ds:[rsi]
   14005810c:	enter  0xd0ac,0xac
   140058110:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140058117:	lods   al,BYTE PTR ds:[rsi]
   140058118:	clc    
   140058119:	lods   al,BYTE PTR ds:[rsi]
   14005811a:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140058120:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140058126:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14005812c:	lods   rax,QWORD PTR ds:[rsi]
   14005812e:	push   rax
   14005812f:	lods   eax,DWORD PTR ds:[rsi]
   140058130:	pop    rax
   140058131:	lods   eax,DWORD PTR ds:[rsi]
   140058132:	(bad)  
   140058133:	lods   eax,DWORD PTR ds:[rsi]
   140058134:	push   0x78ad70ad
   140058139:	lods   eax,DWORD PTR ds:[rsi]
   14005813a:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140058141:	lods   eax,DWORD PTR ds:[rsi]
   140058142:	movabs al,ds:0xadb8adb0ada8ad
   14005814b:	add    BYTE PTR [rax],al
   14005814d:	mov    al,0x3
   14005814f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140058153:	add    BYTE PTR [rax-0x37534754],ch
   140058159:	lods   al,BYTE PTR ds:[rsi]
   14005815a:	fsubr  DWORD PTR [rax+rbp*8+0x8acf8ac]
   140058161:	lods   eax,DWORD PTR ds:[rsi]
   140058162:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   140058168:	lods   rax,QWORD PTR ds:[rsi]
   14005816a:	pop    rax
   14005816b:	lods   eax,DWORD PTR ds:[rsi]
   14005816c:	push   0xffffffff88ad78ad
   140058171:	lods   eax,DWORD PTR ds:[rsi]
   140058172:	cwde   
   140058173:	lods   eax,DWORD PTR ds:[rsi]
   140058174:	test   al,0xad
   140058176:	mov    eax,0xd8adc8ad
   14005817b:	lods   eax,DWORD PTR ds:[rsi]
   14005817c:	call   0x148b37a2e
   140058181:	scas   al,BYTE PTR es:[rdi]
   140058182:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   140058188:	rex.W scas al,BYTE PTR es:[rdi]
   14005818a:	pop    rax
   14005818b:	scas   al,BYTE PTR es:[rdi]
   14005818c:	push   0xffffffff88ae78ae
   140058191:	scas   al,BYTE PTR es:[rdi]
   140058192:	cwde   
   140058193:	scas   al,BYTE PTR es:[rdi]
   140058194:	test   al,0xae
   140058196:	mov    eax,0xd8aec8ae
   14005819b:	scas   al,BYTE PTR es:[rdi]
   14005819c:	call   0x148b47a4f
   1400581a1:	scas   eax,DWORD PTR es:[rdi]
   1400581a2:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400581a8:	scas   rax,QWORD PTR es:[rdi]
   1400581aa:	pop    rax
   1400581ab:	scas   eax,DWORD PTR es:[rdi]
   1400581ac:	push   0xffffffff88af78af
   1400581b1:	scas   eax,DWORD PTR es:[rdi]
   1400581b2:	cwde   
   1400581b3:	scas   eax,DWORD PTR es:[rdi]
   1400581b4:	test   al,0xaf
   1400581b6:	mov    eax,0xd8afc8af
   1400581bb:	scas   eax,DWORD PTR es:[rdi]
   1400581bc:	call   0x140b57a70
   1400581c1:	rol    BYTE PTR [rbx],0x0
   1400581c4:	call   0x1480581c9
   1400581c9:	movabs al,ds:0xa048a038a028a018
   1400581d2:	pop    rax
   1400581d3:	movabs al,ds:0xa098a088a078a068
   1400581dc:	test   al,0xa0
   1400581de:	mov    eax,0xd8a0c8a0
   1400581e3:	movabs al,ds:0xa118a108a0f8a0e8
   1400581ec:	sub    BYTE PTR [rcx-0x5ea75ec8],ah
   1400581f2:	push   0xffffffff88a178a1
   1400581f7:	movabs eax,ds:0xa1c8a1b8a1a8a198
   140058200:	fsub   DWORD PTR [rcx-0x5e075e18]
   140058206:	or     BYTE PTR [rdx-0x5dd75de8],ah
   14005820c:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   140058212:	push   0xffffffff88a278a2
   140058217:	movabs ds:0xa2c8a2b8a2a8a298,al
   140058220:	fsub   DWORD PTR [rdx-0x5d075d18]
   140058226:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   14005822c:	cmp    BYTE PTR [rbx-0x5ca75cb8],ah
   140058232:	push   0xffffffff88a378a3
   140058237:	movabs ds:0xa3c8a3b8a3a8a398,eax
   140058240:	fsub   DWORD PTR [rbx-0x5c075c18]
   140058246:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   14005824d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005824e:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058250:	pop    rax
   140058251:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058252:	push   0xffffffff88a478a4
   140058257:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058258:	cwde   
   140058259:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005825a:	test   al,0xa4
   14005825c:	mov    eax,0xd8a4c8a4
   140058261:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058262:	call   0x148aa7b0b
   140058267:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058268:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   14005826e:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140058270:	pop    rax
   140058271:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058272:	push   0xffffffff88a578a5
   140058277:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058278:	cwde   
   140058279:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005827a:	test   al,0xa5
   14005827c:	mov    eax,0xd8a5c8a5
   140058281:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058282:	call   0x148ab7b2c
   140058287:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058288:	sbb    BYTE PTR [rsi-0x506f59d8],ah
   14005828e:	cwde   
   14005828f:	scas   eax,DWORD PTR es:[rdi]
   140058290:	movabs al,ds:0xc0afb8afb0afa8af
   140058299:	scas   eax,DWORD PTR es:[rdi]
   14005829a:	enter  0xd0af,0xaf
   14005829e:	fsubr  DWORD PTR [rdi-0x50175020]
   1400582a4:	lock scas eax,DWORD PTR es:[rdi]
   1400582a6:	clc    
   1400582a7:	scas   eax,DWORD PTR es:[rdi]
   1400582a8:	add    al,dl
   1400582aa:	add    eax,DWORD PTR [rax]
   1400582ac:	lock add BYTE PTR [rax],al
   1400582af:	add    BYTE PTR [rax],al
   1400582b1:	movabs al,ds:0xa020a018a010a008
   1400582ba:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   1400582c0:	movabs al,ds:0xa060a058a050a048
   1400582ca:	push   0x78a070a0
   1400582cf:	movabs al,ds:0xa098a090a088a080
   1400582d8:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400582e1:	movabs al,ds:0xa178a170a168a0c8
   1400582ea:	and    BYTE PTR [rcx-0x5e275e30],0xe0
   1400582f1:	movabs eax,ds:0xa200a1f8a1f0a1e8
   1400582fa:	or     BYTE PTR [rdx-0x5de75df0],ah
   140058300:	and    BYTE PTR [rdx-0x59775980],ah
   140058306:	nop
   140058307:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058308:	cwde   
   140058309:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005830a:	movabs al,ds:0xd8a6d0a6c8a6a8a6
   140058313:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058314:	loopne 0x1400582bc
   140058316:	call   0x138ac73c1
   14005831b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005831c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140058322:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140058328:	xor    BYTE PTR [rdi-0x57575760],ah
   14005832e:	mov    al,0xa8
   140058330:	mov    eax,0xd8a8d0a8
   140058335:	test   al,0xe0
   140058337:	test   al,0xe8
   140058339:	test   al,0xf0
   14005833b:	test   al,0xf8
   14005833d:	test   al,0xf8
   14005833f:	test   eax,0xaa08aa00
   140058344:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14005834a:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140058350:	stos   BYTE PTR es:[rdi],al
   140058352:	rex.W stos BYTE PTR es:[rdi],al
   140058354:	push   rax
   140058355:	stos   BYTE PTR es:[rdi],al
   140058356:	pop    rax
   140058357:	stos   BYTE PTR es:[rdi],al
   140058358:	(bad)  
   140058359:	stos   BYTE PTR es:[rdi],al
   14005835a:	jo     0x140058306
   14005835c:	js     0x140058308
   14005835e:	sub    BYTE PTR [rdx-0x55175520],0xf0
   140058365:	stos   BYTE PTR es:[rdi],al
   140058366:	clc    
   140058367:	stos   BYTE PTR es:[rdi],al
   140058368:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14005836e:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140058374:	xor    BYTE PTR [rbx-0x54a754c8],ch
   14005837a:	(bad)  
   14005837b:	stos   DWORD PTR es:[rdi],eax
   14005837c:	push   0xffffffffd0abc8ab
   140058381:	stos   DWORD PTR es:[rdi],eax
   140058382:	fsubr  DWORD PTR [rbx-0x54175420]
   140058388:	lock stos DWORD PTR es:[rdi],eax
   14005838a:	lods   al,BYTE PTR ds:[rsi]
   14005838c:	rex.W lods al,BYTE PTR ds:[rsi]
   14005838e:	shr    BYTE PTR [rax+rcx*8-0x7f508754],0xaf
   140058396:	add    BYTE PTR [rax],al
   140058398:	add    al,ah
   14005839a:	add    eax,DWORD PTR [rax]
   14005839c:	pop    rsp
   14005839d:	add    DWORD PTR [rax],eax
   14005839f:	add    BYTE PTR [rax],bh
   1400583a1:	movabs eax,ds:0xa270a268a260a140
   1400583aa:	js     0x14005834e
   1400583ac:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   1400583b3:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   1400583bc:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   1400583c3:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   1400583cc:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   1400583d2:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   1400583d8:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   1400583de:	movabs ds:0xa368a360a358a350,rax
   1400583e8:	jo     0x14005838d
   1400583ea:	js     0x14005838f
   1400583ec:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   1400583f3:	movabs ds:0xa518a510a508a500,eax
   1400583fc:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   140058402:	cmp    BYTE PTR [rbp-0x58c758d0],ah
   140058408:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005840a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14005840c:	push   rax
   14005840d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005840e:	pop    rax
   14005840f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058410:	(bad)  
   140058411:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058412:	push   0xffffffff88a780a7
   140058417:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058418:	nop
   140058419:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005841a:	cwde   
   14005841b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005841c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140058425:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058426:	enter  0xd0a7,0xa7
   14005842a:	fsub   DWORD PTR [rdi-0x58175820]
   140058430:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058432:	clc    
   140058433:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058434:	add    BYTE PTR [rax-0x57ef57f8],ch
   14005843a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140058440:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140058446:	rex.W test al,0x50
   140058449:	test   al,0x60
   14005844b:	test   al,0x68
   14005844d:	test   al,0x70
   14005844f:	test   al,0x78
   140058451:	test   al,0x80
   140058453:	test   al,0x88
   140058455:	test   al,0x90
   140058457:	test   al,0x98
   140058459:	test   al,0xa0
   14005845b:	test   al,0xa8
   14005845d:	test   al,0xd0
   14005845f:	test   al,0xd8
   140058461:	test   al,0xe0
   140058463:	test   al,0xe8
   140058465:	test   al,0xf0
   140058467:	test   al,0xf8
   140058469:	test   al,0x0
   14005846b:	test   eax,0xa910a908
   140058470:	sbb    BYTE PTR [rcx-0x569f56a8],ch
   140058476:	push   0x78a970a9
   14005847b:	test   eax,0xa988a980
   140058480:	mov    al,0xa9
   140058482:	mov    eax,0xc8a9c0a9
   140058487:	test   eax,0xaa70a9d0
   14005848c:	js     0x140058438
   14005848e:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140058495:	stos   BYTE PTR es:[rdi],al
   140058496:	movabs al,ds:0xe8abe0aab0aaa8aa
   14005849f:	stos   DWORD PTR es:[rdi],eax
   1400584a0:	lock stos DWORD PTR es:[rdi],eax
   1400584a2:	clc    
   1400584a3:	stos   DWORD PTR es:[rdi],eax
   1400584a4:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400584ab:	lods   al,BYTE PTR ds:[rsi]
   1400584ac:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400584b3:	lods   al,BYTE PTR ds:[rsi]
   1400584b4:	lods   al,BYTE PTR ds:[rsi]
   1400584b6:	rex.W lods al,BYTE PTR ds:[rsi]
   1400584b8:	push   rax
   1400584b9:	lods   al,BYTE PTR ds:[rsi]
   1400584ba:	pop    rax
   1400584bb:	lods   al,BYTE PTR ds:[rsi]
   1400584bc:	(bad)  
   1400584bd:	lods   al,BYTE PTR ds:[rsi]
   1400584be:	push   0x78ac70ac
   1400584c3:	lods   al,BYTE PTR ds:[rsi]
   1400584c4:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400584cc:	movabs al,ds:0xc0acb8acb0aca8ac
   1400584d5:	lods   al,BYTE PTR ds:[rsi]
   1400584d6:	enter  0xd0ac,0xac
   1400584da:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400584e1:	lods   al,BYTE PTR ds:[rsi]
   1400584e2:	clc    
   1400584e3:	lods   al,BYTE PTR ds:[rsi]
   1400584e4:	mov    eax,0xc8adc0ad
   1400584e9:	lods   eax,DWORD PTR ds:[rsi]
   1400584ea:	shr    BYTE PTR [rbp-0x521f5228],1
   1400584f0:	call   0x1400585a2
   1400584f5:	lock add eax,DWORD PTR [rax]
   1400584f8:	push   rsp
   1400584f9:	add    BYTE PTR [rax],al
   1400584fb:	add    BYTE PTR [rax-0x475f4f60],ch
   140058501:	movabs al,ds:0xa0d8a0d0a0c8a0c0
   14005850a:	sub    BYTE PTR [rcx-0x5ec75ed0],ah
   140058510:	rex movabs eax,ds:0xa160a158a150a148
   14005851a:	push   0x78a170a1
   14005851f:	movabs eax,ds:0xa1b8a1b0a1a8a180
   140058528:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14005852f:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140058538:	add    BYTE PTR [rdx-0x5def5df8],ah
   14005853e:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140058544:	xor    BYTE PTR [rdx+0x1000a238],ah
   14005854a:	add    al,0x0
   14005854c:	or     al,0x0
   14005854e:	add    BYTE PTR [rax],al
   140058550:	mov    BYTE PTR [rax-0x2fff56e8],ch
   140058556:	add    al,0x0
   140058558:	fadd   DWORD PTR [rax]
   14005855a:	add    BYTE PTR [rax],al
   14005855c:	add    BYTE PTR [rax-0x5c3f5ff0],ah
   140058562:	movabs al,ds:0x50a848a840a6a8a6
   14005856b:	test   al,0x58
   14005856d:	test   al,0x60
   14005856f:	test   al,0x68
   140058571:	test   al,0x70
   140058573:	test   al,0x78
   140058575:	test   al,0x80
   140058577:	test   al,0x88
   140058579:	test   al,0x90
   14005857b:	test   al,0x98
   14005857d:	test   al,0xa0
   14005857f:	test   al,0xa8
   140058581:	test   al,0xb0
   140058583:	test   al,0xb8
   140058585:	test   al,0xc0
   140058587:	test   al,0xc8
   140058589:	test   al,0xd0
   14005858b:	test   al,0xd8
   14005858d:	test   al,0xe0
   14005858f:	test   al,0xe8
   140058591:	test   al,0xf0
   140058593:	test   al,0xf8
   140058595:	test   al,0x0
   140058597:	test   eax,0xa910a908
   14005859c:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400585a2:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400585a8:	test   rax,0xffffffffa958a950
   1400585ae:	(bad)  
   1400585af:	test   eax,0xa970a968
   1400585b4:	js     0x14005855f
   1400585b6:	sub    BYTE PTR [rcx-0x566f5678],0xa0
   1400585bd:	test   eax,0xa9b0a9a8
   1400585c2:	mov    eax,0xc8a9c0a9
   1400585c7:	test   eax,0xa9d8a9d0
   1400585cc:	loopne 0x140058577
   1400585ce:	call   0x138af767c
   1400585d3:	test   eax,0xaa08aa00
   1400585d8:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400585de:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400585e4:	stos   BYTE PTR es:[rdi],al
   1400585e6:	rex.W stos BYTE PTR es:[rdi],al
   1400585e8:	push   rax
   1400585e9:	stos   BYTE PTR es:[rdi],al
   1400585ea:	pop    rax
   1400585eb:	stos   BYTE PTR es:[rdi],al
   1400585ec:	(bad)  
   1400585ed:	stos   BYTE PTR es:[rdi],al
   1400585ee:	push   0x78aa70aa
   1400585f3:	stos   BYTE PTR es:[rdi],al
   1400585f4:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400585fb:	stos   BYTE PTR es:[rdi],al
   1400585fc:	movabs al,ds:0xc0aab8aab0aaa8aa
   140058605:	stos   BYTE PTR es:[rdi],al
   140058606:	enter  0xd0aa,0xaa
   14005860a:	fsubr  DWORD PTR [rdx-0x55175520]
   140058610:	lock stos BYTE PTR es:[rdi],al
   140058612:	clc    
   140058613:	stos   BYTE PTR es:[rdi],al
   140058614:	add    BYTE PTR [rbx-0x549754b8],ch
   14005861a:	mov    BYTE PTR [rbx-0x54375458],ch
   140058620:	add    BYTE PTR [rax+rbx*1+0x28ac20ac],ch
   140058627:	lods   al,BYTE PTR ds:[rsi]
   140058628:	xor    BYTE PTR [rax+rdi*2+0x4e000ae],ch
   14005862f:	add    BYTE PTR [rax],al
   140058631:	add    DWORD PTR [rax],eax
   140058633:	add    BYTE PTR [rax-0x3f5e475f],dh
   140058639:	movabs eax,ds:0xa1e0a1d8a1d0a1c8
   140058642:	call   0x138a776e8
   140058647:	movabs eax,ds:0xa230a228a220a218
   140058650:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   140058656:	push   rax
   140058657:	movabs ds:0xa278a268a260a258,al
   140058660:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140058667:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140058670:	shl    BYTE PTR [rdx-0x5d1f5d30],0x8
   140058677:	movabs ds:0xa470a468a460a330,eax
   140058680:	nop
   140058681:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058682:	mov    eax,0xf8a4f0a4
   140058687:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058688:	or     BYTE PTR [rbp-0x5ae75af0],ah
   14005868e:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   140058694:	cmp    BYTE PTR [rbp-0x5ab75ac0],ah
   14005869a:	push   rax
   14005869b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005869c:	pop    rax
   14005869d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005869e:	(bad)  
   14005869f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586a0:	push   0x78a570a5
   1400586a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586a6:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400586ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586ae:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400586b7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586b8:	enter  0xd0a5,0xa5
   1400586bc:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400586c2:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586c4:	clc    
   1400586c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400586c6:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400586cc:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400586d2:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400586d8:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400586da:	push   rax
   1400586db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400586dc:	pop    rax
   1400586dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400586de:	(bad)  
   1400586df:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400586e0:	push   0x18aa10a6
   1400586e5:	stos   BYTE PTR es:[rdi],al
   1400586e6:	and    BYTE PTR [rdx-0x556f55d8],ch
   1400586ec:	and    BYTE PTR [rbx-0x54a754b0],ch
   1400586f2:	(bad)  
   1400586f3:	stos   DWORD PTR es:[rdi],eax
   1400586f4:	mov    BYTE PTR [rbx-0x54075440],ch
   1400586fa:	sub    BYTE PTR [rax+rdx*2-0x47537f54],ch
   140058701:	lods   al,BYTE PTR ds:[rsi]
   140058702:	loopne 0x1400586b0
   140058704:	or     BYTE PTR [rbp-0x529f52d0],ch
   14005870a:	nop
   14005870b:	lods   eax,DWORD PTR ds:[rsi]
   14005870c:	mov    eax,0x10ade8ad
   140058711:	scas   al,BYTE PTR es:[rdi]
   140058712:	scas   al,BYTE PTR es:[rdi]
   140058714:	push   0xffffffffb8ae90ae
   140058719:	scas   al,BYTE PTR es:[rdi]
   14005871a:	loopne 0x1400586ca
   14005871c:	adc    BYTE PTR [rdi-0x50a750d0],ch
   140058722:	mov    BYTE PTR [rdi-0x502f5050],ch
   140058728:	call   0x1400587dc
   14005872d:	lock add al,0x0
   140058730:	push   0x10000000
   140058735:	movabs al,ds:0xa0c0a090a068a038
   14005873e:	call   0x180a697e3
   140058743:	movabs eax,ds:0xa1e0a1b8a190a168
   14005874c:	or     BYTE PTR [rdx-0x5daf5dd8],ah
   140058752:	jo     0x1400586f6
   140058754:	mov    BYTE PTR [rdx-0x5d2f5d58],ah
   14005875a:	add    BYTE PTR [rbx-0x5cbf5ce0],ah
   140058760:	push   0xffffffffb8a390a3
   140058765:	movabs ds:0xa460a430a410a3e8,eax
   14005876e:	nop
   14005876f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058770:	mov    eax,0x18a4e8a4
   140058775:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058776:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058778:	push   0xffffffffb8a590a5
   14005877d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005877e:	call   0x180ab9828
   140058783:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058784:	push   0xffffffffc0a698a6
   140058789:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005878a:	call   0x180aca035
   14005878f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058790:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140058792:	push   rax
   140058793:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
