
8e9353fc3c070861eb933c7c33f2d08d7c015496e81b90d48d9ea6d6700ed1ed.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	xor    ebx,ebx
   14000100f:	lea    rax,[rdx-0x1]
   140001013:	mov    r10d,0x7ffffffe
   140001019:	mov    r9d,ebx
   14000101c:	cmp    rax,r10
   14000101f:	mov    r11d,0x80070057
   140001025:	cmova  r9d,r11d
   140001029:	test   r9d,r9d
   14000102c:	js     0x14000106d
   14000102e:	mov    r9d,ebx
   140001031:	test   rdx,rdx
   140001034:	je     0x140001061
   140001036:	sub    r10,rdx
   140001039:	sub    r8,rcx
   14000103c:	lea    rax,[r10+rdx*1]
   140001040:	test   rax,rax
   140001043:	je     0x14000105c
   140001045:	movzx  eax,WORD PTR [r8+rcx*1]
   14000104a:	test   ax,ax
   14000104d:	je     0x14000105c
   14000104f:	mov    WORD PTR [rcx],ax
   140001052:	add    rcx,0x2
   140001056:	sub    rdx,0x1
   14000105a:	jne    0x14000103c
   14000105c:	test   rdx,rdx
   14000105f:	jne    0x140001072
   140001061:	sub    rcx,0x2
   140001065:	mov    r9d,0x8007007a
   14000106b:	jmp    0x140001072
   14000106d:	test   rdx,rdx
   140001070:	je     0x140001075
   140001072:	mov    WORD PTR [rcx],bx
   140001075:	mov    rbx,QWORD PTR [rsp+0x8]
   14000107a:	mov    eax,r9d
   14000107d:	ret    
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	mov    QWORD PTR [rsp+0x8],rbx
   140001089:	mov    QWORD PTR [rsp+0x10],rdi
   14000108e:	xor    edi,edi
   140001090:	lea    rax,[rdx-0x1]
   140001094:	cmp    rax,0x7ffffffe
   14000109a:	mov    r10,rdx
   14000109d:	mov    r9d,edi
   1400010a0:	mov    edx,0x80070057
   1400010a5:	cmova  r9d,edx
   1400010a9:	mov    rbx,r8
   1400010ac:	mov    r11,rcx
   1400010af:	test   r9d,r9d
   1400010b2:	js     0x1400010de
   1400010b4:	mov    rax,r10
   1400010b7:	mov    r9d,edi
   1400010ba:	test   r10,r10
   1400010bd:	je     0x1400010db
   1400010bf:	cmp    WORD PTR [rcx],di
   1400010c2:	je     0x1400010ce
   1400010c4:	add    rcx,0x2
   1400010c8:	sub    rax,0x1
   1400010cc:	jne    0x1400010bf
   1400010ce:	test   rax,rax
   1400010d1:	je     0x1400010db
   1400010d3:	mov    r8,r10
   1400010d6:	sub    r8,rax
   1400010d9:	jmp    0x1400010e1
   1400010db:	mov    r9d,edx
   1400010de:	mov    r8,rdi
   1400010e1:	test   r9d,r9d
   1400010e4:	js     0x140001138
   1400010e6:	mov    rdx,r10
   1400010e9:	lea    rcx,[r11+r8*2]
   1400010ed:	mov    r9d,edi
   1400010f0:	sub    rdx,r8
   1400010f3:	je     0x14000112b
   1400010f5:	mov    rax,rdx
   1400010f8:	sub    rax,r10
   1400010fb:	lea    r10,[r8+0x7ffffffe]
   140001102:	add    r10,rax
   140001105:	sub    rbx,rcx
   140001108:	test   r10,r10
   14000110b:	je     0x140001126
   14000110d:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001111:	test   ax,ax
   140001114:	je     0x140001126
   140001116:	mov    WORD PTR [rcx],ax
   140001119:	dec    r10
   14000111c:	add    rcx,0x2
   140001120:	sub    rdx,0x1
   140001124:	jne    0x140001108
   140001126:	test   rdx,rdx
   140001129:	jne    0x140001135
   14000112b:	sub    rcx,0x2
   14000112f:	mov    r9d,0x8007007a
   140001135:	mov    WORD PTR [rcx],di
   140001138:	mov    rbx,QWORD PTR [rsp+0x8]
   14000113d:	mov    eax,r9d
   140001140:	mov    rdi,QWORD PTR [rsp+0x10]
   140001145:	ret    
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	mov    QWORD PTR [rsp+0x18],r8
   140001151:	mov    QWORD PTR [rsp+0x20],r9
   140001156:	push   rbx
   140001157:	push   rbp
   140001158:	push   rsi
   140001159:	push   rdi
   14000115a:	sub    rsp,0x28
   14000115e:	xor    ebp,ebp
   140001160:	lea    rax,[rdx-0x1]
   140001164:	cmp    rax,0x7ffffffe
   14000116a:	mov    rsi,rcx
   14000116d:	mov    edi,ebp
   14000116f:	mov    ecx,0x80070057
   140001174:	cmova  edi,ecx
   140001177:	test   edi,edi
   140001179:	js     0x1400011b0
   14000117b:	lea    rbx,[rdx-0x1]
   14000117f:	mov    rcx,rsi
   140001182:	mov    rdx,rbx
   140001185:	lea    r9,[rsp+0x68]
   14000118a:	mov    edi,ebp
   14000118c:	call   QWORD PTR [rip+0x71be]        # 0x140008350
   140001192:	test   eax,eax
   140001194:	js     0x1400011a5
   140001196:	cdqe   
   140001198:	cmp    rax,rbx
   14000119b:	ja     0x1400011a5
   14000119d:	jne    0x1400011b8
   14000119f:	mov    WORD PTR [rsi+rbx*2],bp
   1400011a3:	jmp    0x1400011b8
   1400011a5:	mov    WORD PTR [rsi+rbx*2],bp
   1400011a9:	mov    edi,0x8007007a
   1400011ae:	jmp    0x1400011b8
   1400011b0:	test   rdx,rdx
   1400011b3:	je     0x1400011b8
   1400011b5:	mov    WORD PTR [rsi],bp
   1400011b8:	mov    eax,edi
   1400011ba:	add    rsp,0x28
   1400011be:	pop    rdi
   1400011bf:	pop    rsi
   1400011c0:	pop    rbp
   1400011c1:	pop    rbx
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011d5:	push   rdi
   1400011d6:	sub    rsp,0x20
   1400011da:	mov    r10,QWORD PTR [rsp+0x60]
   1400011df:	xor    edi,edi
   1400011e1:	test   r10,r10
   1400011e4:	je     0x1400012da
   1400011ea:	test   edx,edx
   1400011ec:	je     0x140001297
   1400011f2:	sub    edx,0x1
   1400011f5:	jne    0x1400012da
   1400011fb:	mov    r11d,edi
   1400011fe:	mov    rax,QWORD PTR [rsp+0x50]
   140001203:	mov    QWORD PTR [r10+0x10],r9
   140001207:	lea    r9d,[rdi+0x1]
   14000120b:	mov    DWORD PTR [r10+0x24],r9d
   14000120f:	mov    BYTE PTR [r10+0x28],r8b
   140001213:	mov    QWORD PTR [r10+0x18],rax
   140001217:	cmp    di,WORD PTR [r10+0x2a]
   14000121c:	jae    0x1400012da
   140001222:	mov    rax,QWORD PTR [r10+0x38]
   140001226:	mov    dl,BYTE PTR [r10+0x28]
   14000122a:	mov    ebx,r11d
   14000122d:	mov    rcx,QWORD PTR [rax+rbx*8]
   140001231:	mov    rax,QWORD PTR [r10+0x40]
   140001235:	cmp    BYTE PTR [rbx+rax*1],dl
   140001238:	jbe    0x14000123e
   14000123a:	test   dl,dl
   14000123c:	jne    0x140001256
   14000123e:	test   rcx,rcx
   140001241:	je     0x140001271
   140001243:	test   QWORD PTR [r10+0x10],rcx
   140001247:	je     0x140001256
   140001249:	mov    rax,QWORD PTR [r10+0x18]
   14000124d:	and    rax,rcx
   140001250:	cmp    rax,QWORD PTR [r10+0x18]
   140001254:	je     0x140001271
   140001256:	mov    r8,QWORD PTR [r10+0x30]
   14000125a:	mov    ecx,r11d
   14000125d:	and    ecx,0x1f
   140001260:	shr    rbx,0x5
   140001264:	mov    edx,r9d
   140001267:	shl    edx,cl
   140001269:	not    edx
   14000126b:	and    DWORD PTR [r8+rbx*4],edx
   14000126f:	jmp    0x140001288
   140001271:	mov    r8,QWORD PTR [r10+0x30]
   140001275:	mov    ecx,r11d
   140001278:	and    ecx,0x1f
   14000127b:	shr    rbx,0x5
   14000127f:	mov    edx,r9d
   140001282:	shl    edx,cl
   140001284:	or     DWORD PTR [r8+rbx*4],edx
   140001288:	movzx  eax,WORD PTR [r10+0x2a]
   14000128d:	add    r11d,r9d
   140001290:	cmp    r11d,eax
   140001293:	jb     0x140001222
   140001295:	jmp    0x1400012da
   140001297:	mov    DWORD PTR [r10+0x24],edi
   14000129b:	mov    BYTE PTR [r10+0x28],dil
   14000129f:	mov    QWORD PTR [r10+0x10],rdi
   1400012a3:	mov    QWORD PTR [r10+0x18],rdi
   1400012a7:	cmp    WORD PTR [r10+0x2a],di
   1400012ac:	jbe    0x1400012da
   1400012ae:	movzx  eax,WORD PTR [r10+0x2a]
   1400012b3:	mov    r9d,0x1
   1400012b9:	mov    rcx,QWORD PTR [r10+0x30]
   1400012bd:	sub    eax,r9d
   1400012c0:	cdq    
   1400012c1:	and    edx,0x1f
   1400012c4:	add    eax,edx
   1400012c6:	xor    edx,edx
   1400012c8:	sar    eax,0x5
   1400012cb:	add    eax,r9d
   1400012ce:	movsxd r8,eax
   1400012d1:	shl    r8,0x2
   1400012d5:	call   0x140007eae
   1400012da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012df:	add    rsp,0x20
   1400012e3:	pop    rdi
   1400012e4:	ret    
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	cmp    QWORD PTR [rip+0xc32c],0x0        # 0x14000d620
   1400012f4:	je     0x1400012f9
   1400012f6:	xor    eax,eax
   1400012f8:	ret    
   1400012f9:	lea    r9,[rip+0xc320]        # 0x14000d620
   140001300:	lea    r8,[rip+0xbd19]        # 0x14000d020
   140001307:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x1400011d0
   14000130e:	lea    rcx,[rip+0x75db]        # 0x1400088f0
   140001315:	rex.W jmp QWORD PTR [rip+0x6f3c]        # 0x140008258
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	int3   
   140001321:	int3   
   140001322:	int3   
   140001323:	int3   
   140001324:	sub    rsp,0x28
   140001328:	mov    rcx,QWORD PTR [rip+0xc2f1]        # 0x14000d620
   14000132f:	test   rcx,rcx
   140001332:	jne    0x140001338
   140001334:	xor    eax,eax
   140001336:	jmp    0x140001346
   140001338:	call   QWORD PTR [rip+0x6f12]        # 0x140008250
   14000133e:	and    QWORD PTR [rip+0xc2da],0x0        # 0x14000d620
   140001346:	add    rsp,0x28
   14000134a:	ret    
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	int3   
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	mov    QWORD PTR [rsp+0x8],rbx
   140001359:	push   rbp
   14000135a:	mov    rbp,rsp
   14000135d:	sub    rsp,0x80
   140001364:	mov    rax,QWORD PTR [rip+0xbc9d]        # 0x14000d008
   14000136b:	xor    rax,rsp
   14000136e:	mov    QWORD PTR [rbp-0x10],rax
   140001372:	xor    ebx,ebx
   140001374:	or     rcx,0xffffffffffffffff
   140001378:	mov    DWORD PTR [rbp-0x60],ebx
   14000137b:	lea    r10d,[rbx+0xa]
   14000137f:	test   r8,r8
   140001382:	je     0x14000139a
   140001384:	mov    rax,rcx
   140001387:	inc    rax
   14000138a:	cmp    WORD PTR [r8+rax*2],bx
   14000138f:	jne    0x140001387
   140001391:	lea    edx,[rax*2+0x2]
   140001398:	jmp    0x14000139d
   14000139a:	mov    edx,r10d
   14000139d:	test   r8,r8
   1400013a0:	mov    DWORD PTR [rbp-0x48],edx
   1400013a3:	lea    r11,[rip+0x709e]        # 0x140008448
   1400013aa:	mov    DWORD PTR [rbp-0x44],ebx
   1400013ad:	mov    rax,r11
   1400013b0:	cmovne rax,r8
   1400013b4:	mov    QWORD PTR [rbp-0x50],rax
   1400013b8:	test   r9,r9
   1400013bb:	je     0x1400013d2
   1400013bd:	inc    rcx
   1400013c0:	cmp    WORD PTR [r9+rcx*2],bx
   1400013c5:	jne    0x1400013bd
   1400013c7:	lea    r10d,[rcx*2+0x2]
   1400013cf:	test   r9,r9
   1400013d2:	mov    rcx,QWORD PTR [rip+0xc247]        # 0x14000d620
   1400013d9:	lea    rax,[rbp-0x60]
   1400013dd:	cmovne r11,r9
   1400013e1:	mov    QWORD PTR [rbp-0x30],rax
   1400013e5:	mov    r8d,0x4
   1400013eb:	mov    QWORD PTR [rbp-0x40],r11
   1400013ef:	lea    r9,[rbp-0x50]
   1400013f3:	mov    QWORD PTR [rbp-0x28],r8
   1400013f7:	lea    rdx,[rip+0x74ca]        # 0x1400088c8
   1400013fe:	mov    DWORD PTR [rbp-0x38],r10d
   140001402:	mov    DWORD PTR [rbp-0x34],ebx
   140001405:	mov    QWORD PTR [rbp-0x20],rbx
   140001409:	mov    QWORD PTR [rbp-0x18],rbx
   14000140d:	call   QWORD PTR [rip+0x6e4d]        # 0x140008260
   140001413:	mov    rcx,QWORD PTR [rbp-0x10]
   140001417:	xor    rcx,rsp
   14000141a:	call   0x140007730
   14000141f:	mov    rbx,QWORD PTR [rsp+0x90]
   140001427:	add    rsp,0x80
   14000142e:	pop    rbp
   14000142f:	ret    
   140001430:	int3   
   140001431:	int3   
   140001432:	int3   
   140001433:	int3   
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	mov    QWORD PTR [rsp+0x8],rbx
   14000143d:	mov    QWORD PTR [rsp+0x10],rbp
   140001442:	mov    QWORD PTR [rsp+0x18],rsi
   140001447:	push   rdi
   140001448:	push   r12
   14000144a:	push   r13
   14000144c:	push   r14
   14000144e:	push   r15
   140001450:	sub    rsp,0x20
   140001454:	xor    edi,edi
   140001456:	mov    r12,r9
   140001459:	mov    ebx,edi
   14000145b:	mov    r13,r8
   14000145e:	mov    rdi,QWORD PTR [rsp+0x70]
   140001463:	mov    r14,rdx
   140001466:	mov    r15d,ecx
   140001469:	mov    esi,0x1
   14000146e:	mov    ebp,esi
   140001470:	mov    rcx,QWORD PTR [r14+rbp*8]
   140001474:	call   QWORD PTR [rip+0x6d86]        # 0x140008200
   14000147a:	cmp    eax,0x4
   14000147d:	jl     0x1400014f3
   14000147f:	mov    rcx,QWORD PTR [r14+rbp*8]
   140001483:	mov    edx,0xfffd
   140001488:	movzx  eax,WORD PTR [rcx]
   14000148b:	sub    ax,0x2d
   14000148f:	test   dx,ax
   140001492:	jne    0x1400014f3
   140001494:	movzx  edx,WORD PTR [rcx+0x2]
   140001498:	mov    r8d,0xffdf
   14000149e:	lea    eax,[rdx-0x43]
   1400014a1:	test   r8w,ax
   1400014a5:	jne    0x1400014bb
   1400014a7:	cmp    WORD PTR [rcx+0x4],0x3a
   1400014ac:	jne    0x1400014bb
   1400014ae:	lea    rax,[rcx+0x6]
   1400014b2:	or     ebx,0x1
   1400014b5:	mov    QWORD PTR [r13+0x0],rax
   1400014b9:	jmp    0x1400014f3
   1400014bb:	lea    eax,[rdx-0x48]
   1400014be:	test   r8w,ax
   1400014c2:	jne    0x1400014d8
   1400014c4:	cmp    WORD PTR [rcx+0x4],0x3a
   1400014c9:	jne    0x1400014d8
   1400014cb:	lea    rax,[rcx+0x6]
   1400014cf:	or     ebx,0x2
   1400014d2:	mov    QWORD PTR [r12],rax
   1400014d6:	jmp    0x1400014f3
   1400014d8:	sub    dx,0x4c
   1400014dc:	test   r8w,dx
   1400014e0:	jne    0x1400014f3
   1400014e2:	cmp    WORD PTR [rcx+0x4],0x3a
   1400014e7:	jne    0x1400014f3
   1400014e9:	add    rcx,0x6
   1400014ed:	mov    QWORD PTR [rdi],rcx
   1400014f0:	or     ebx,0x4
   1400014f3:	inc    esi
   1400014f5:	cmp    esi,r15d
   1400014f8:	jb     0x14000146e
   1400014fe:	mov    rbp,QWORD PTR [rsp+0x58]
   140001503:	cmp    ebx,0x7
   140001506:	mov    rbx,QWORD PTR [rsp+0x50]
   14000150b:	mov    rsi,QWORD PTR [rsp+0x60]
   140001510:	sete   al
   140001513:	add    rsp,0x20
   140001517:	pop    r15
   140001519:	pop    r14
   14000151b:	pop    r13
   14000151d:	pop    r12
   14000151f:	pop    rdi
   140001520:	ret    
   140001521:	int3   
   140001522:	int3   
   140001523:	int3   
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	mov    QWORD PTR [rsp+0x8],rbx
   14000152d:	mov    QWORD PTR [rsp+0x10],rsi
   140001532:	mov    QWORD PTR [rsp+0x18],rdi
   140001537:	push   r14
   140001539:	sub    rsp,0x30
   14000153d:	movzx  eax,WORD PTR [rcx]
   140001540:	mov    rbx,rcx
   140001543:	sub    ax,0x2d
   140001547:	xor    esi,esi
   140001549:	mov    ecx,0xfffd
   14000154e:	mov    r14,rdx
   140001551:	test   cx,ax
   140001554:	jne    0x1400015c2
   140001556:	movzx  eax,WORD PTR [rbx+0x2]
   14000155a:	mov    ecx,0xffdf
   14000155f:	sub    ax,0x51
   140001563:	test   cx,ax
   140001566:	jne    0x1400015c2
   140001568:	mov    rcx,rbx
   14000156b:	call   QWORD PTR [rip+0x6c8f]        # 0x140008200
   140001571:	cmp    eax,0x4
   140001574:	jl     0x1400015bf
   140001576:	cmp    WORD PTR [rbx+0x4],0x3a
   14000157b:	jne    0x1400015bf
   14000157d:	lea    rdi,[rip+0xc0dc]        # 0x14000d660
   140001584:	xor    edx,edx
   140001586:	mov    rcx,rdi
   140001589:	mov    r8d,0x410
   14000158f:	call   0x140007eae
   140001594:	add    rbx,0x6
   140001598:	mov    QWORD PTR [rsp+0x28],rsi
   14000159d:	mov    rdx,rbx
   1400015a0:	mov    QWORD PTR [rsp+0x20],rdi
   1400015a5:	mov    r9d,0x208
   1400015ab:	xor    r8d,r8d
   1400015ae:	xor    ecx,ecx
   1400015b0:	call   QWORD PTR [rip+0x6b4a]        # 0x140008100
   1400015b6:	test   eax,eax
   1400015b8:	cmove  rdi,rbx
   1400015bc:	mov    QWORD PTR [r14],rdi
   1400015bf:	mov    sil,0x1
   1400015c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015c7:	mov    al,sil
   1400015ca:	mov    rsi,QWORD PTR [rsp+0x48]
   1400015cf:	mov    rdi,QWORD PTR [rsp+0x50]
   1400015d4:	add    rsp,0x30
   1400015d8:	pop    r14
   1400015da:	ret    
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	int3   
   1400015e1:	int3   
   1400015e2:	int3   
   1400015e3:	int3   
   1400015e4:	test   rdx,rdx
   1400015e7:	je     0x1400016b9
   1400015ed:	mov    r11,rsp
   1400015f0:	mov    QWORD PTR [r11+0x8],rbx
   1400015f4:	mov    QWORD PTR [r11+0x18],rsi
   1400015f8:	push   rdi
   1400015f9:	sub    rsp,0x40
   1400015fd:	and    DWORD PTR [rsp+0x58],0x0
   140001602:	mov    dil,r9b
   140001605:	and    DWORD PTR [rsp+0x30],0x0
   14000160a:	mov    rsi,r8
   14000160d:	mov    DWORD PTR [rsp+0x34],0x4
   140001615:	mov    rbx,rdx
   140001618:	test   r8,r8
   14000161b:	je     0x1400016aa
   140001621:	lea    rax,[r11-0x14]
   140001625:	xor    r8d,r8d
   140001628:	mov    QWORD PTR [r11-0x20],rax
   14000162c:	lea    r9,[r11+0x10]
   140001630:	lea    rax,[r11-0x18]
   140001634:	mov    QWORD PTR [r11-0x28],rax
   140001638:	call   QWORD PTR [rip+0x6b32]        # 0x140008170
   14000163e:	test   eax,eax
   140001640:	jne    0x140001688
   140001642:	cmp    DWORD PTR [rsp+0x58],0x4
   140001647:	jne    0x140001670
   140001649:	lea    ecx,[rax+0x1]
   14000164c:	call   0x140007d38
   140001651:	mov    r9d,DWORD PTR [rsp+0x30]
   140001656:	lea    rdx,[rip+0x6ea3]        # 0x140008500
   14000165d:	mov    rcx,rax
   140001660:	mov    DWORD PTR [rsp+0x20],r9d
   140001665:	mov    r8,rsi
   140001668:	call   QWORD PTR [rip+0x6cea]        # 0x140008358
   14000166e:	jmp    0x1400016aa
   140001670:	test   dil,dil
   140001673:	je     0x1400016aa
   140001675:	mov    ecx,0x1
   14000167a:	call   0x140007d38
   14000167f:	lea    rdx,[rip+0x6e92]        # 0x140008518
   140001686:	jmp    0x14000169e
   140001688:	test   dil,dil
   14000168b:	je     0x1400016aa
   14000168d:	mov    ecx,0x1
   140001692:	call   0x140007d38
   140001697:	lea    rdx,[rip+0x6eaa]        # 0x140008548
   14000169e:	mov    r8,rbx
   1400016a1:	mov    rcx,rax
   1400016a4:	call   QWORD PTR [rip+0x6cae]        # 0x140008358
   1400016aa:	mov    rbx,QWORD PTR [rsp+0x50]
   1400016af:	mov    rsi,QWORD PTR [rsp+0x60]
   1400016b4:	add    rsp,0x40
   1400016b8:	pop    rdi
   1400016b9:	ret    
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	test   rdx,rdx
   1400016c3:	je     0x140001784
   1400016c9:	push   rbx
   1400016ca:	push   rsi
   1400016cb:	push   rdi
   1400016cc:	sub    rsp,0x260
   1400016d3:	mov    rax,QWORD PTR [rip+0xb92e]        # 0x14000d008
   1400016da:	xor    rax,rsp
   1400016dd:	mov    QWORD PTR [rsp+0x250],rax
   1400016e5:	and    DWORD PTR [rsp+0x30],0x0
   1400016ea:	mov    rbx,r8
   1400016ed:	mov    DWORD PTR [rsp+0x34],0x208
   1400016f5:	mov    rdi,rdx
   1400016f8:	mov    rsi,rcx
   1400016fb:	test   rbx,rbx
   1400016fe:	je     0x14000176a
   140001700:	xor    edx,edx
   140001702:	lea    rcx,[rsp+0x40]
   140001707:	mov    r8d,0x20a
   14000170d:	call   0x140007eae
   140001712:	lea    rax,[rsp+0x34]
   140001717:	xor    r8d,r8d
   14000171a:	mov    QWORD PTR [rsp+0x28],rax
   14000171f:	lea    r9,[rsp+0x30]
   140001724:	lea    rax,[rsp+0x40]
   140001729:	mov    rdx,rdi
   14000172c:	mov    rcx,rsi
   14000172f:	mov    QWORD PTR [rsp+0x20],rax
   140001734:	call   QWORD PTR [rip+0x6a36]        # 0x140008170
   14000173a:	test   eax,eax
   14000173c:	jne    0x14000176a
   14000173e:	mov    eax,DWORD PTR [rsp+0x30]
   140001742:	mov    ecx,0x1
   140001747:	dec    eax
   140001749:	cmp    eax,ecx
   14000174b:	ja     0x14000176a
   14000174d:	call   0x140007d38
   140001752:	mov    rcx,rax
   140001755:	lea    r9,[rsp+0x40]
   14000175a:	mov    r8,rbx
   14000175d:	lea    rdx,[rip+0x6e0c]        # 0x140008570
   140001764:	call   QWORD PTR [rip+0x6bee]        # 0x140008358
   14000176a:	mov    rcx,QWORD PTR [rsp+0x250]
   140001772:	xor    rcx,rsp
   140001775:	call   0x140007730
   14000177a:	add    rsp,0x260
   140001781:	pop    rdi
   140001782:	pop    rsi
   140001783:	pop    rbx
   140001784:	ret    
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	mov    rax,rsp
   14000178f:	mov    QWORD PTR [rax+0x10],rbx
   140001793:	mov    QWORD PTR [rax+0x18],rsi
   140001797:	mov    QWORD PTR [rax+0x20],rdi
   14000179b:	push   rbp
   14000179c:	push   r14
   14000179e:	push   r15
   1400017a0:	lea    rbp,[rax-0x1b8]
   1400017a7:	sub    rsp,0x2a0
   1400017ae:	mov    rax,QWORD PTR [rip+0xb853]        # 0x14000d008
   1400017b5:	xor    rax,rsp
   1400017b8:	mov    QWORD PTR [rbp+0x190],rax
   1400017bf:	xor    r14d,r14d
   1400017c2:	mov    rsi,rcx
   1400017c5:	mov    QWORD PTR [rsp+0x40],r14
   1400017ca:	mov    QWORD PTR [rsp+0x48],r14
   1400017cf:	lea    r15d,[r14+0x1]
   1400017d3:	mov    ecx,r15d
   1400017d6:	call   0x140007d38
   1400017db:	mov    rcx,rax
   1400017de:	lea    rdx,[rip+0x6deb]        # 0x1400085d0
   1400017e5:	call   QWORD PTR [rip+0x6b6d]        # 0x140008358
   1400017eb:	lea    rax,[rsp+0x40]
   1400017f0:	mov    rdi,0xffffffff80000002
   1400017f7:	mov    rcx,rdi
   1400017fa:	mov    QWORD PTR [rsp+0x20],rax
   1400017ff:	mov    r9d,0x20019
   140001805:	lea    rdx,[rip+0x90e4]        # 0x14000a8f0
   14000180c:	xor    r8d,r8d
   14000180f:	call   QWORD PTR [rip+0x6953]        # 0x140008168
   140001815:	mov    ebx,eax
   140001817:	test   eax,eax
   140001819:	jne    0x14000188d
   14000181b:	mov    rcx,QWORD PTR [rsp+0x40]
   140001820:	lea    rdx,[rip+0x6dd9]        # 0x140008600
   140001827:	mov    r8,rdx
   14000182a:	mov    r9b,r15b
   14000182d:	call   0x1400015e4
   140001832:	mov    rcx,QWORD PTR [rsp+0x40]
   140001837:	lea    r8,[rip+0x6dda]        # 0x140008618
   14000183e:	mov    r9b,r15b
   140001841:	lea    rdx,[rip+0x92e8]        # 0x14000ab30
   140001848:	call   0x1400015e4
   14000184d:	mov    rcx,QWORD PTR [rsp+0x40]
   140001852:	lea    r8,[rip+0x6def]        # 0x140008648
   140001859:	mov    r9b,r15b
   14000185c:	lea    rdx,[rip+0x9305]        # 0x14000ab68
   140001863:	call   0x1400015e4
   140001868:	mov    ecx,r15d
   14000186b:	call   0x140007d38
   140001870:	mov    rcx,rax
   140001873:	lea    rdx,[rip+0x6df2]        # 0x14000866c
   14000187a:	call   QWORD PTR [rip+0x6ad8]        # 0x140008358
   140001880:	mov    rcx,QWORD PTR [rsp+0x40]
   140001885:	call   QWORD PTR [rip+0x6905]        # 0x140008190
   14000188b:	jmp    0x1400018af
   14000188d:	mov    ecx,r15d
   140001890:	call   0x140007d38
   140001895:	mov    rcx,rax
   140001898:	lea    r8,[rip+0x9051]        # 0x14000a8f0
   14000189f:	mov    r9d,ebx
   1400018a2:	lea    rdx,[rip+0x6dc7]        # 0x140008670
   1400018a9:	call   QWORD PTR [rip+0x6aa9]        # 0x140008358
   1400018af:	lea    rax,[rsp+0x40]
   1400018b4:	mov    r9d,0x20019
   1400018ba:	xor    r8d,r8d
   1400018bd:	mov    QWORD PTR [rsp+0x20],rax
   1400018c2:	lea    rdx,[rip+0x6b97]        # 0x140008460
   1400018c9:	mov    rcx,rdi
   1400018cc:	call   QWORD PTR [rip+0x6896]        # 0x140008168
   1400018d2:	mov    ebx,eax
   1400018d4:	test   eax,eax
   1400018d6:	jne    0x140001b49
   1400018dc:	xor    edx,edx
   1400018de:	mov    DWORD PTR [rsp+0x50],0x104
   1400018e6:	mov    r8d,0x228
   1400018ec:	lea    rcx,[rsp+0x60]
   1400018f1:	mov    edi,r14d
   1400018f4:	call   0x140007eae
   1400018f9:	xor    edx,edx
   1400018fb:	jmp    0x140001b09
   140001900:	test   rsi,rsi
   140001903:	je     0x14000191b
   140001905:	lea    rdx,[rsp+0x60]
   14000190a:	mov    rcx,rsi
   14000190d:	call   QWORD PTR [rip+0x68e5]        # 0x1400081f8
   140001913:	test   eax,eax
   140001915:	jne    0x140001aea
   14000191b:	lea    r8,[rip+0x6d8a]        # 0x1400086ac
   140001922:	mov    edx,0x114
   140001927:	lea    rcx,[rsp+0x60]
   14000192c:	call   0x140001084
   140001931:	lea    r8,[rip+0x6b70]        # 0x1400084a8
   140001938:	mov    edx,0x114
   14000193d:	lea    rcx,[rsp+0x60]
   140001942:	call   0x140001084
   140001947:	mov    rcx,QWORD PTR [rsp+0x40]
   14000194c:	lea    rax,[rsp+0x48]
   140001951:	mov    r9d,0x20019
   140001957:	mov    QWORD PTR [rsp+0x20],rax
   14000195c:	xor    r8d,r8d
   14000195f:	lea    rdx,[rsp+0x60]
   140001964:	call   QWORD PTR [rip+0x67fe]        # 0x140008168
   14000196a:	test   eax,eax
   14000196c:	jne    0x140001aea
   140001972:	mov    eax,DWORD PTR [rsp+0x50]
   140001976:	lea    r9,[rsp+0x58]
   14000197b:	mov    rcx,QWORD PTR [rsp+0x48]
   140001980:	lea    rdx,[rip+0x6b39]        # 0x1400084c0
   140001987:	xor    r8d,r8d
   14000198a:	mov    DWORD PTR [rsp+0x58],r14d
   14000198f:	mov    DWORD PTR [rsp+0x54],r14d
   140001994:	mov    WORD PTR [rsp+rax*2+0x60],r14w
   14000199a:	lea    rax,[rsp+0x5c]
   14000199f:	mov    QWORD PTR [rsp+0x28],rax
   1400019a4:	lea    rax,[rsp+0x54]
   1400019a9:	mov    QWORD PTR [rsp+0x20],rax
   1400019ae:	mov    DWORD PTR [rsp+0x5c],0x4
   1400019b6:	call   QWORD PTR [rip+0x67b4]        # 0x140008170
   1400019bc:	test   eax,eax
   1400019be:	jne    0x1400019e9
   1400019c0:	mov    eax,DWORD PTR [rsp+0x58]
   1400019c4:	add    eax,0xfffffffd
   1400019c7:	cmp    eax,r15d
   1400019ca:	ja     0x1400019e9
   1400019cc:	cmp    DWORD PTR [rsp+0x54],r14d
   1400019d1:	setne  al
   1400019d4:	test   al,al
   1400019d6:	je     0x1400019e9
   1400019d8:	mov    ecx,r15d
   1400019db:	call   0x140007d38
   1400019e0:	lea    rdx,[rip+0x6b99]        # 0x140008580
   1400019e7:	jmp    0x1400019f8
   1400019e9:	mov    ecx,r15d
   1400019ec:	call   0x140007d38
   1400019f1:	lea    rdx,[rip+0x6bb0]        # 0x1400085a8
   1400019f8:	lea    r8,[rsp+0x60]
   1400019fd:	mov    rcx,rax
   140001a00:	call   QWORD PTR [rip+0x6952]        # 0x140008358
   140001a06:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a0b:	lea    r8,[rip+0x6c9e]        # 0x1400086b0
   140001a12:	lea    rdx,[rip+0x6caf]        # 0x1400086c8
   140001a19:	call   0x1400016c0
   140001a1e:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a23:	lea    r8,[rip+0x6cae]        # 0x1400086d8
   140001a2a:	lea    rdx,[rip+0x6cc7]        # 0x1400086f8
   140001a31:	call   0x1400016c0
   140001a36:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a3b:	lea    r8,[rip+0x6cc6]        # 0x140008708
   140001a42:	lea    rdx,[rip+0x6ce7]        # 0x140008730
   140001a49:	call   0x1400016c0
   140001a4e:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a53:	lea    r8,[rip+0x6ce6]        # 0x140008740
   140001a5a:	lea    rdx,[rip+0x6cff]        # 0x140008760
   140001a61:	call   0x1400016c0
   140001a66:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a6b:	lea    r8,[rip+0x6cfe]        # 0x140008770
   140001a72:	xor    r9d,r9d
   140001a75:	lea    rdx,[rip+0x9094]        # 0x14000ab10
   140001a7c:	call   0x1400015e4
   140001a81:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a86:	lea    r8,[rip+0x6d0b]        # 0x140008798
   140001a8d:	xor    r9d,r9d
   140001a90:	lea    rdx,[rip+0x9099]        # 0x14000ab30
   140001a97:	call   0x1400015e4
   140001a9c:	mov    rcx,QWORD PTR [rsp+0x48]
   140001aa1:	lea    r8,[rip+0x6d10]        # 0x1400087b8
   140001aa8:	xor    r9d,r9d
   140001aab:	lea    rdx,[rip+0x909e]        # 0x14000ab50
   140001ab2:	call   0x1400015e4
   140001ab7:	mov    rcx,QWORD PTR [rsp+0x48]
   140001abc:	lea    r8,[rip+0x6d15]        # 0x1400087d8
   140001ac3:	xor    r9d,r9d
   140001ac6:	lea    rdx,[rip+0x909b]        # 0x14000ab68
   140001acd:	call   0x1400015e4
   140001ad2:	mov    ecx,r15d
   140001ad5:	call   0x140007d38
   140001ada:	mov    rcx,rax
   140001add:	lea    rdx,[rip+0x6b88]        # 0x14000866c
   140001ae4:	call   QWORD PTR [rip+0x686e]        # 0x140008358
   140001aea:	add    edi,r15d
   140001aed:	mov    DWORD PTR [rsp+0x50],0x104
   140001af5:	xor    edx,edx
   140001af7:	lea    rcx,[rsp+0x60]
   140001afc:	mov    r8d,0x228
   140001b02:	call   0x140007eae
   140001b07:	mov    edx,edi
   140001b09:	mov    rcx,QWORD PTR [rsp+0x40]
   140001b0e:	lea    r9,[rsp+0x50]
   140001b13:	mov    QWORD PTR [rsp+0x38],r14
   140001b18:	lea    r8,[rsp+0x60]
   140001b1d:	mov    QWORD PTR [rsp+0x30],r14
   140001b22:	mov    QWORD PTR [rsp+0x28],r14
   140001b27:	mov    QWORD PTR [rsp+0x20],r14
   140001b2c:	call   QWORD PTR [rip+0x6656]        # 0x140008188
   140001b32:	mov    ebx,eax
   140001b34:	test   eax,eax
   140001b36:	je     0x140001900
   140001b3c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001b41:	call   QWORD PTR [rip+0x6649]        # 0x140008190
   140001b47:	jmp    0x140001b6b
   140001b49:	mov    ecx,r15d
   140001b4c:	call   0x140007d38
   140001b51:	mov    rcx,rax
   140001b54:	lea    r8,[rip+0x6905]        # 0x140008460
   140001b5b:	mov    r9d,ebx
   140001b5e:	lea    rdx,[rip+0x6b0b]        # 0x140008670
   140001b65:	call   QWORD PTR [rip+0x67ed]        # 0x140008358
   140001b6b:	mov    eax,ebx
   140001b6d:	mov    rcx,QWORD PTR [rbp+0x190]
   140001b74:	xor    rcx,rsp
   140001b77:	call   0x140007730
   140001b7c:	lea    r11,[rsp+0x2a0]
   140001b84:	mov    rbx,QWORD PTR [r11+0x28]
   140001b88:	mov    rsi,QWORD PTR [r11+0x30]
   140001b8c:	mov    rdi,QWORD PTR [r11+0x38]
   140001b90:	mov    rsp,r11
   140001b93:	pop    r15
   140001b95:	pop    r14
   140001b97:	pop    rbp
   140001b98:	ret    
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    rax,rsp
   140001ba3:	mov    QWORD PTR [rax+0x10],rbx
   140001ba7:	mov    DWORD PTR [rax+0x18],r8d
   140001bab:	mov    QWORD PTR [rax+0x8],rcx
   140001baf:	push   rsi
   140001bb0:	push   rdi
   140001bb1:	push   r12
   140001bb3:	push   r14
   140001bb5:	push   r15
   140001bb7:	sub    rsp,0x40
   140001bbb:	mov    r14d,r8d
   140001bbe:	mov    r15,rdx
   140001bc1:	xor    edi,edi
   140001bc3:	mov    QWORD PTR [rax+0x20],rdi
   140001bc7:	mov    rcx,rdx
   140001bca:	call   QWORD PTR [rip+0x6630]        # 0x140008200
   140001bd0:	mov    ebx,eax
   140001bd2:	lea    r12,[rip+0x68cf]        # 0x1400084a8
   140001bd9:	mov    rcx,r12
   140001bdc:	call   QWORD PTR [rip+0x661e]        # 0x140008200
   140001be2:	add    ebx,eax
   140001be4:	lea    rcx,[rip+0x6c15]        # 0x140008800
   140001beb:	call   QWORD PTR [rip+0x660f]        # 0x140008200
   140001bf1:	lea    ecx,[rbx+0x2]
   140001bf4:	add    ecx,eax
   140001bf6:	mov    DWORD PTR [rsp+0x70],ecx
   140001bfa:	mov    ebx,ecx
   140001bfc:	add    rbx,rbx
   140001bff:	call   QWORD PTR [rip+0x649b]        # 0x1400080a0
   140001c05:	mov    rcx,rax
   140001c08:	mov    r8,rbx
   140001c0b:	lea    edx,[rdi+0x8]
   140001c0e:	call   QWORD PTR [rip+0x6474]        # 0x140008088
   140001c14:	mov    rsi,rax
   140001c17:	mov    QWORD PTR [rsp+0x38],rax
   140001c1c:	test   rax,rax
   140001c1f:	jne    0x140001c29
   140001c21:	lea    ebx,[rdi+0xe]
   140001c24:	jmp    0x140001cdf
   140001c29:	mov    edx,DWORD PTR [rsp+0x70]
   140001c2d:	mov    QWORD PTR [rsp+0x28],r12
   140001c32:	mov    QWORD PTR [rsp+0x20],r15
   140001c37:	lea    r9,[rip+0x6bc2]        # 0x140008800
   140001c3e:	lea    r8,[rip+0x6c03]        # 0x140008848
   140001c45:	mov    rcx,rax
   140001c48:	call   0x14000114c
   140001c4d:	nop
   140001c4e:	lea    rax,[rsp+0x88]
   140001c56:	mov    QWORD PTR [rsp+0x20],rax
   140001c5b:	mov    r9d,0x2001f
   140001c61:	xor    r8d,r8d
   140001c64:	mov    rdx,rsi
   140001c67:	mov    rcx,0xffffffff80000002
   140001c6e:	call   QWORD PTR [rip+0x64f4]        # 0x140008168
   140001c74:	mov    ebx,eax
   140001c76:	mov    DWORD PTR [rsp+0x30],eax
   140001c7a:	jmp    0x140001c91
   140001c7c:	mov    ebx,eax
   140001c7e:	mov    DWORD PTR [rsp+0x30],eax
   140001c82:	xor    edi,edi
   140001c84:	mov    r14d,DWORD PTR [rsp+0x80]
   140001c8c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001c91:	test   ebx,ebx
   140001c93:	jne    0x140001cdf
   140001c95:	lea    rdx,[rip+0x6824]        # 0x1400084c0
   140001c9c:	mov    rcx,QWORD PTR [rsp+0x88]
   140001ca4:	test   r14d,r14d
   140001ca7:	je     0x140001cd1
   140001ca9:	mov    DWORD PTR [rsp+0x70],0x1
   140001cb1:	lea    r9d,[rbx+0x4]
   140001cb5:	mov    DWORD PTR [rsp+0x28],r9d
   140001cba:	lea    rax,[rsp+0x70]
   140001cbf:	mov    QWORD PTR [rsp+0x20],rax
   140001cc4:	xor    r8d,r8d
   140001cc7:	call   QWORD PTR [rip+0x64cb]        # 0x140008198
   140001ccd:	mov    ebx,eax
   140001ccf:	jmp    0x140001cdf
   140001cd1:	call   QWORD PTR [rip+0x6489]        # 0x140008160
   140001cd7:	mov    ebx,eax
   140001cd9:	cmp    eax,0x2
   140001cdc:	cmove  ebx,edi
   140001cdf:	mov    rcx,QWORD PTR [rsp+0x88]
   140001ce7:	lea    rax,[rcx-0x1]
   140001ceb:	cmp    rax,0xfffffffffffffffd
   140001cef:	ja     0x140001cf7
   140001cf1:	call   QWORD PTR [rip+0x6499]        # 0x140008190
   140001cf7:	test   rsi,rsi
   140001cfa:	je     0x140001d10
   140001cfc:	call   QWORD PTR [rip+0x639e]        # 0x1400080a0
   140001d02:	mov    rcx,rax
   140001d05:	mov    r8,rsi
   140001d08:	xor    edx,edx
   140001d0a:	call   QWORD PTR [rip+0x6388]        # 0x140008098
   140001d10:	mov    eax,ebx
   140001d12:	mov    rbx,QWORD PTR [rsp+0x78]
   140001d17:	add    rsp,0x40
   140001d1b:	pop    r15
   140001d1d:	pop    r14
   140001d1f:	pop    r12
   140001d21:	pop    rdi
   140001d22:	pop    rsi
   140001d23:	ret    
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	mov    rax,rsp
   140001d2f:	mov    QWORD PTR [rax+0x8],rbx
   140001d33:	mov    QWORD PTR [rax+0x10],rbp
   140001d37:	mov    QWORD PTR [rax+0x18],rsi
   140001d3b:	mov    QWORD PTR [rax+0x20],rdi
   140001d3f:	push   r12
   140001d41:	push   r14
   140001d43:	push   r15
   140001d45:	sub    rsp,0x30
   140001d49:	mov    rbx,QWORD PTR [rdx+0x8]
   140001d4d:	or     rax,0xffffffffffffffff
   140001d51:	xor    r12d,r12d
   140001d54:	mov    r14,r9
   140001d57:	mov    r15,r8
   140001d5a:	mov    rsi,rdx
   140001d5d:	mov    ebp,ecx
   140001d5f:	inc    rax
   140001d62:	cmp    WORD PTR [rbx+rax*2],r12w
   140001d67:	jne    0x140001d5f
   140001d69:	cmp    rax,0x4
   140001d6d:	jb     0x140001deb
   140001d6f:	movzx  eax,WORD PTR [rbx]
   140001d72:	mov    ecx,0xfffd
   140001d77:	sub    ax,0x2d
   140001d7b:	test   cx,ax
   140001d7e:	jne    0x140001deb
   140001d80:	movzx  eax,WORD PTR [rbx+0x2]
   140001d84:	mov    ecx,0xffdf
   140001d89:	sub    ax,0x4d
   140001d8d:	test   cx,ax
   140001d90:	jne    0x140001deb
   140001d92:	cmp    WORD PTR [rbx+0x4],0x3a
   140001d97:	jne    0x140001deb
   140001d99:	lea    rdi,[rip+0xbcd0]        # 0x14000da70
   140001da0:	xor    edx,edx
   140001da2:	mov    rcx,rdi
   140001da5:	mov    r8d,0x410
   140001dab:	call   0x140007eae
   140001db0:	add    rbx,0x6
   140001db4:	mov    QWORD PTR [rsp+0x28],r12
   140001db9:	mov    rdx,rbx
   140001dbc:	mov    QWORD PTR [rsp+0x20],rdi
   140001dc1:	mov    r9d,0x208
   140001dc7:	xor    r8d,r8d
   140001dca:	xor    ecx,ecx
   140001dcc:	call   QWORD PTR [rip+0x632e]        # 0x140008100
   140001dd2:	test   eax,eax
   140001dd4:	cmove  rdi,rbx
   140001dd8:	mov    QWORD PTR [r15],rdi
   140001ddb:	cmp    ebp,0x2
   140001dde:	jle    0x140001de7
   140001de0:	mov    rax,QWORD PTR [rsi+0x10]
   140001de4:	mov    QWORD PTR [r14],rax
   140001de7:	mov    al,0x1
   140001de9:	jmp    0x140001ded
   140001deb:	xor    al,al
   140001ded:	mov    rbx,QWORD PTR [rsp+0x50]
   140001df2:	mov    rbp,QWORD PTR [rsp+0x58]
   140001df7:	mov    rsi,QWORD PTR [rsp+0x60]
   140001dfc:	mov    rdi,QWORD PTR [rsp+0x68]
   140001e01:	add    rsp,0x30
   140001e05:	pop    r15
   140001e07:	pop    r14
   140001e09:	pop    r12
   140001e0b:	ret    
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	int3   
   140001e11:	int3   
   140001e12:	int3   
   140001e13:	int3   
   140001e14:	mov    QWORD PTR [rsp+0x8],rbx
   140001e19:	mov    QWORD PTR [rsp+0x10],rbp
   140001e1e:	mov    QWORD PTR [rsp+0x18],rsi
   140001e23:	push   rdi
   140001e24:	push   r12
   140001e26:	push   r13
   140001e28:	push   r14
   140001e2a:	push   r15
   140001e2c:	sub    rsp,0x50
   140001e30:	xor    edi,edi
   140001e32:	mov    rbp,r8
   140001e35:	mov    r14,rdx
   140001e38:	mov    r13,rcx
   140001e3b:	mov    ebx,edi
   140001e3d:	mov    r12d,edi
   140001e40:	test   rcx,rcx
   140001e43:	je     0x140002056
   140001e49:	test   rdx,rdx
   140001e4c:	je     0x140002056
   140001e52:	mov    rcx,rdx
   140001e55:	call   QWORD PTR [rip+0x63a5]        # 0x140008200
   140001e5b:	lea    edx,[rdi+0x5c]
   140001e5e:	mov    rcx,r14
   140001e61:	mov    esi,eax
   140001e63:	call   QWORD PTR [rip+0x64ff]        # 0x140008368
   140001e69:	test   rax,rax
   140001e6c:	jne    0x14000206f
   140001e72:	test   rbp,rbp
   140001e75:	je     0x140001f19
   140001e7b:	cmp    WORD PTR [rbp+0x0],0x2e
   140001e80:	je     0x140001f19
   140001e86:	mov    rcx,rbp
   140001e89:	call   QWORD PTR [rip+0x6371]        # 0x140008200
   140001e8f:	test   eax,eax
   140001e91:	je     0x140001f19
   140001e97:	lea    ecx,[rax+0x2]
   140001e9a:	cmp    eax,ecx
   140001e9c:	jae    0x140001f19
   140001e9e:	lea    eax,[rcx+rsi*1]
   140001ea1:	cmp    ecx,eax
   140001ea3:	jae    0x140001f19
   140001ea5:	cmp    esi,eax
   140001ea7:	jae    0x140001f19
   140001ea9:	lea    r15,[rax+rax*1]
   140001ead:	mov    edi,eax
   140001eaf:	mov    rax,r15
   140001eb2:	sar    rax,0x20
   140001eb6:	test   eax,eax
   140001eb8:	jne    0x140001f19
   140001eba:	call   QWORD PTR [rip+0x61e0]        # 0x1400080a0
   140001ec0:	mov    r8,r15
   140001ec3:	lea    edx,[rbx+0x8]
   140001ec6:	mov    rcx,rax
   140001ec9:	call   QWORD PTR [rip+0x61b9]        # 0x140008088
   140001ecf:	mov    rbx,rax
   140001ed2:	test   rax,rax
   140001ed5:	je     0x140001f19
   140001ed7:	mov    r8,rbp
   140001eda:	mov    edx,edi
   140001edc:	mov    rcx,rax
   140001edf:	call   0x140001008
   140001ee4:	mov    rcx,rbx
   140001ee7:	call   QWORD PTR [rip+0x6313]        # 0x140008200
   140001eed:	test   eax,eax
   140001eef:	jle    0x140001f19
   140001ef1:	mov    rcx,rbx
   140001ef4:	call   QWORD PTR [rip+0x6306]        # 0x140008200
   140001efa:	movsxd rcx,eax
   140001efd:	mov    eax,0x5c
   140001f02:	cmp    WORD PTR [rbx+rcx*2-0x2],ax
   140001f07:	je     0x140001fda
   140001f0d:	lea    r8,[rip+0x6798]        # 0x1400086ac
   140001f14:	jmp    0x140001fcf
   140001f19:	mov    rcx,r13
   140001f1c:	call   QWORD PTR [rip+0x62de]        # 0x140008200
   140001f22:	lea    edx,[rax+0x8]
   140001f25:	cmp    eax,edx
   140001f27:	jae    0x140001fea
   140001f2d:	lea    ecx,[rdx+rsi*1]
   140001f30:	cmp    edx,ecx
   140001f32:	jae    0x140001fea
   140001f38:	cmp    esi,ecx
   140001f3a:	jae    0x140001fea
   140001f40:	lea    rax,[rcx+rcx*2]
   140001f44:	mov    edi,ecx
   140001f46:	add    rax,rax
   140001f49:	sar    rax,0x20
   140001f4d:	test   eax,eax
   140001f4f:	jne    0x140001fea
   140001f55:	lea    ebx,[rcx+rcx*2]
   140001f58:	add    rbx,rbx
   140001f5b:	call   QWORD PTR [rip+0x613f]        # 0x1400080a0
   140001f61:	mov    r8,rbx
   140001f64:	mov    edx,0x8
   140001f69:	mov    rcx,rax
   140001f6c:	call   QWORD PTR [rip+0x6116]        # 0x140008088
   140001f72:	mov    rbx,rax
   140001f75:	xor    eax,eax
   140001f77:	test   rbx,rbx
   140001f7a:	je     0x140001fea
   140001f7c:	mov    QWORD PTR [rsp+0x40],rax
   140001f81:	lea    r15,[rbx+rdi*2]
   140001f85:	mov    QWORD PTR [rsp+0x38],rax
   140001f8a:	lea    rbp,[r15+rdi*2]
   140001f8e:	mov    QWORD PTR [rsp+0x30],rax
   140001f93:	mov    r9,rbp
   140001f96:	mov    QWORD PTR [rsp+0x28],rax
   140001f9b:	mov    r8d,edi
   140001f9e:	mov    rdx,r15
   140001fa1:	mov    QWORD PTR [rsp+0x20],rdi
   140001fa6:	mov    rcx,r13
   140001fa9:	call   QWORD PTR [rip+0x63b1]        # 0x140008360
   140001faf:	xor    r13d,r13d
   140001fb2:	cmp    WORD PTR [r15],r13w
   140001fb6:	je     0x140001fea
   140001fb8:	cmp    WORD PTR [rbp+0x0],r13w
   140001fbd:	je     0x140001fea
   140001fbf:	mov    r8,r15
   140001fc2:	mov    edx,edi
   140001fc4:	mov    rcx,rbx
   140001fc7:	call   0x140001008
   140001fcc:	mov    r8,rbp
   140001fcf:	mov    rdx,rdi
   140001fd2:	mov    rcx,rbx
   140001fd5:	call   0x140001084
   140001fda:	mov    rdx,rdi
   140001fdd:	mov    r8,r14
   140001fe0:	mov    rcx,rbx
   140001fe3:	call   0x140001084
   140001fe8:	jmp    0x14000205c
   140001fea:	xor    edx,edx
   140001fec:	xor    ecx,ecx
   140001fee:	call   QWORD PTR [rip+0x6124]        # 0x140008118
   140001ff4:	lea    ecx,[rax+0x1]
   140001ff7:	cmp    eax,ecx
   140001ff9:	jae    0x14000205c
   140001ffb:	lea    edi,[rcx+rsi*1]
   140001ffe:	cmp    ecx,edi
   140002000:	jae    0x14000205c
   140002002:	cmp    esi,edi
   140002004:	jae    0x14000205c
   140002006:	lea    rbp,[rdi+rdi*1]
   14000200a:	mov    esi,edi
   14000200c:	mov    rax,rbp
   14000200f:	sar    rax,0x20
   140002013:	test   eax,eax
   140002015:	jne    0x14000205c
   140002017:	call   QWORD PTR [rip+0x6083]        # 0x1400080a0
   14000201d:	mov    r8,rbp
   140002020:	mov    edx,0x8
   140002025:	mov    rcx,rax
   140002028:	call   QWORD PTR [rip+0x605a]        # 0x140008088
   14000202e:	mov    rbx,rax
   140002031:	test   rax,rax
   140002034:	je     0x14000206f
   140002036:	mov    rdx,rax
   140002039:	mov    ecx,edi
   14000203b:	call   QWORD PTR [rip+0x60d7]        # 0x140008118
   140002041:	lea    r8,[rip+0x6664]        # 0x1400086ac
   140002048:	mov    edx,esi
   14000204a:	mov    rcx,rbx
   14000204d:	call   0x140001084
   140002052:	mov    edx,esi
   140002054:	jmp    0x140001fdd
   140002056:	mov    r12d,0x57
   14000205c:	test   rbx,rbx
   14000205f:	jne    0x14000206f
   140002061:	test   r12d,r12d
   140002064:	je     0x14000206f
   140002066:	mov    ecx,r12d
   140002069:	call   QWORD PTR [rip+0x5fc9]        # 0x140008038
   14000206f:	lea    r11,[rsp+0x50]
   140002074:	mov    rax,rbx
   140002077:	mov    rbx,QWORD PTR [r11+0x30]
   14000207b:	mov    rbp,QWORD PTR [r11+0x38]
   14000207f:	mov    rsi,QWORD PTR [r11+0x40]
   140002083:	mov    rsp,r11
   140002086:	pop    r15
   140002088:	pop    r14
   14000208a:	pop    r13
   14000208c:	pop    r12
   14000208e:	pop    rdi
   14000208f:	ret    
   140002090:	int3   
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	mov    QWORD PTR [rsp+0x18],rbx
   14000209d:	mov    QWORD PTR [rsp+0x20],rsi
   1400020a2:	push   rbp
   1400020a3:	push   rdi
   1400020a4:	push   r13
   1400020a6:	push   r14
   1400020a8:	push   r15
   1400020aa:	lea    rbp,[rsp-0xe0]
   1400020b2:	sub    rsp,0x1e0
   1400020b9:	mov    rax,QWORD PTR [rip+0xaf48]        # 0x14000d008
   1400020c0:	xor    rax,rsp
   1400020c3:	mov    QWORD PTR [rbp+0xd0],rax
   1400020ca:	xor    esi,esi
   1400020cc:	mov    QWORD PTR [rbp-0x48],rdx
   1400020d0:	mov    QWORD PTR [rbp-0x50],rsi
   1400020d4:	mov    r13d,esi
   1400020d7:	mov    QWORD PTR [rbp-0x68],rsi
   1400020db:	mov    r14,rcx
   1400020de:	mov    DWORD PTR [rbp-0x70],esi
   1400020e1:	mov    DWORD PTR [rsp+0x74],esi
   1400020e5:	mov    DWORD PTR [rbp-0x80],esi
   1400020e8:	mov    QWORD PTR [rbp-0x60],rcx
   1400020ec:	call   0x14000590c
   1400020f1:	mov    ebx,eax
   1400020f3:	test   eax,eax
   1400020f5:	jne    0x140002b0e
   1400020fb:	call   0x140005ebc
   140002100:	mov    ebx,eax
   140002102:	test   eax,eax
   140002104:	jne    0x140002b0e
   14000210a:	mov    rcx,QWORD PTR [rip+0xb517]        # 0x14000d628
   140002111:	mov    eax,esi
   140002113:	mov    DWORD PTR [rsp+0x78],esi
   140002117:	mov    r9d,esi
   14000211a:	mov    DWORD PTR [rsp+0x70],esi
   14000211e:	mov    r10d,esi
   140002121:	mov    DWORD PTR [rsp+0x7c],eax
   140002125:	test   rcx,rcx
   140002128:	je     0x140002b0e
   14000212e:	mov    rdx,QWORD PTR [rcx+0x8]
   140002132:	jmp    0x14000216f
   140002134:	inc    r9d
   140002137:	add    eax,0x1
   14000213a:	mov    DWORD PTR [rsp+0x78],r9d
   14000213f:	mov    DWORD PTR [rsp+0x7c],eax
   140002143:	je     0x140002276
   140002149:	mov    r8,QWORD PTR [rdx+0x8]
   14000214d:	jmp    0x140002167
   14000214f:	inc    r10d
   140002152:	add    eax,0x1
   140002155:	mov    DWORD PTR [rsp+0x70],r10d
   14000215a:	mov    DWORD PTR [rsp+0x7c],eax
   14000215e:	je     0x140002276
   140002164:	mov    r8,QWORD PTR [r8]
   140002167:	test   r8,r8
   14000216a:	jne    0x14000214f
   14000216c:	mov    rdx,QWORD PTR [rdx]
   14000216f:	test   rdx,rdx
   140002172:	jne    0x140002134
   140002174:	mov    rcx,QWORD PTR [rcx]
   140002177:	test   rcx,rcx
   14000217a:	jne    0x14000212e
   14000217c:	test   eax,eax
   14000217e:	je     0x140002b0e
   140002184:	mov    ecx,eax
   140002186:	add    rcx,rcx
   140002189:	mov    rax,rcx
   14000218c:	sar    rax,0x20
   140002190:	test   eax,eax
   140002192:	jne    0x140002276
   140002198:	mov    DWORD PTR [rsp+0x7c],ecx
   14000219c:	call   0x140007050
   1400021a1:	mov    ebx,eax
   1400021a3:	test   eax,eax
   1400021a5:	jne    0x140002b0e
   1400021ab:	lea    rax,[rbp-0x68]
   1400021af:	mov    r15,0xffffffff80000002
   1400021b6:	mov    rcx,r15
   1400021b9:	mov    QWORD PTR [rsp+0x20],rax
   1400021be:	mov    r9d,0x2001f
   1400021c4:	lea    rdx,[rip+0x8725]        # 0x14000a8f0
   1400021cb:	xor    r8d,r8d
   1400021ce:	call   QWORD PTR [rip+0x5f94]        # 0x140008168
   1400021d4:	mov    ebx,eax
   1400021d6:	mov    edi,0x4
   1400021db:	test   eax,eax
   1400021dd:	jne    0x14000232a
   1400021e3:	mov    rcx,QWORD PTR [rbp-0x68]
   1400021e7:	lea    rax,[rsp+0x70]
   1400021ec:	mov    QWORD PTR [rsp+0x28],rax
   1400021f1:	lea    r9,[rsp+0x78]
   1400021f6:	lea    rax,[rsp+0x74]
   1400021fb:	mov    DWORD PTR [rsp+0x78],esi
   1400021ff:	xor    r8d,r8d
   140002202:	mov    QWORD PTR [rsp+0x20],rax
   140002207:	lea    rdx,[rip+0x8922]        # 0x14000ab30
   14000220e:	mov    DWORD PTR [rsp+0x70],edi
   140002212:	call   QWORD PTR [rip+0x5f58]        # 0x140008170
   140002218:	mov    ebx,eax
   14000221a:	test   eax,eax
   14000221c:	jne    0x14000231c
   140002222:	cmp    DWORD PTR [rsp+0x78],edi
   140002226:	jne    0x14000226c
   140002228:	mov    rcx,QWORD PTR [rbp-0x68]
   14000222c:	lea    rax,[rsp+0x70]
   140002231:	mov    QWORD PTR [rsp+0x28],rax
   140002236:	lea    r9,[rsp+0x78]
   14000223b:	lea    rax,[rbp-0x80]
   14000223f:	mov    DWORD PTR [rsp+0x78],esi
   140002243:	xor    r8d,r8d
   140002246:	mov    QWORD PTR [rsp+0x20],rax
   14000224b:	lea    rdx,[rip+0x8916]        # 0x14000ab68
   140002252:	mov    DWORD PTR [rsp+0x70],edi
   140002256:	call   QWORD PTR [rip+0x5f14]        # 0x140008170
   14000225c:	mov    ebx,eax
   14000225e:	test   eax,eax
   140002260:	jne    0x14000231c
   140002266:	cmp    DWORD PTR [rsp+0x78],edi
   14000226a:	je     0x140002280
   14000226c:	mov    ebx,0xd
   140002271:	jmp    0x14000231c
   140002276:	mov    ebx,0x216
   14000227b:	jmp    0x140002b0e
   140002280:	mov    ecx,DWORD PTR [rsp+0x74]
   140002284:	mov    edx,DWORD PTR [rbp-0x80]
   140002287:	lea    eax,[rcx+0x1]
   14000228a:	cmp    eax,edx
   14000228c:	jne    0x140002317
   140002292:	mov    eax,DWORD PTR [rsp+0x7c]
   140002296:	lea    r8d,[rax+rcx*1]
   14000229a:	cmp    ecx,r8d
   14000229d:	jae    0x140002317
   14000229f:	lea    ecx,[rax+rdx*1]
   1400022a2:	cmp    edx,ecx
   1400022a4:	jae    0x140002317
   1400022a6:	mov    DWORD PTR [rsp+0x74],r8d
   1400022ab:	lea    rax,[rsp+0x74]
   1400022b0:	mov    DWORD PTR [rbp-0x80],ecx
   1400022b3:	lea    rdx,[rip+0x8876]        # 0x14000ab30
   1400022ba:	mov    rcx,QWORD PTR [rbp-0x68]
   1400022be:	xor    r8d,r8d
   1400022c1:	mov    DWORD PTR [rsp+0x28],edi
   1400022c5:	mov    r9d,edi
   1400022c8:	mov    QWORD PTR [rsp+0x20],rax
   1400022cd:	call   QWORD PTR [rip+0x5ec5]        # 0x140008198
   1400022d3:	mov    ebx,eax
   1400022d5:	test   eax,eax
   1400022d7:	jne    0x1400022ff
   1400022d9:	mov    rcx,QWORD PTR [rbp-0x68]
   1400022dd:	lea    rax,[rbp-0x80]
   1400022e1:	mov    DWORD PTR [rsp+0x28],edi
   1400022e5:	lea    rdx,[rip+0x887c]        # 0x14000ab68
   1400022ec:	mov    r9d,edi
   1400022ef:	mov    QWORD PTR [rsp+0x20],rax
   1400022f4:	xor    r8d,r8d
   1400022f7:	call   QWORD PTR [rip+0x5e9b]        # 0x140008198
   1400022fd:	mov    ebx,eax
   1400022ff:	mov    ecx,DWORD PTR [rsp+0x74]
   140002303:	mov    eax,0x2
   140002308:	sub    eax,DWORD PTR [rsp+0x7c]
   14000230c:	mov    DWORD PTR [rbp-0x80],ecx
   14000230f:	add    ecx,eax
   140002311:	mov    DWORD PTR [rsp+0x74],ecx
   140002315:	jmp    0x14000231c
   140002317:	mov    ebx,0x216
   14000231c:	mov    rcx,QWORD PTR [rbp-0x68]
   140002320:	call   QWORD PTR [rip+0x5e6a]        # 0x140008190
   140002326:	mov    QWORD PTR [rbp-0x68],rsi
   14000232a:	mov    rcx,QWORD PTR [rip+0xb327]        # 0x14000d658
   140002331:	test   rcx,rcx
   140002334:	je     0x14000233c
   140002336:	call   QWORD PTR [rip+0x5edc]        # 0x140008218
   14000233c:	test   ebx,ebx
   14000233e:	jne    0x140002b0e
   140002344:	lea    rax,[rbp-0x50]
   140002348:	mov    edi,0x2001f
   14000234d:	mov    r9d,edi
   140002350:	mov    QWORD PTR [rsp+0x20],rax
   140002355:	xor    r8d,r8d
   140002358:	lea    rdx,[rip+0x8601]        # 0x14000a960
   14000235f:	mov    rcx,r15
   140002362:	call   QWORD PTR [rip+0x5e00]        # 0x140008168
   140002368:	mov    ebx,eax
   14000236a:	test   eax,eax
   14000236c:	je     0x1400023e1
   14000236e:	lea    rax,[rbp-0x68]
   140002372:	mov    r9d,edi
   140002375:	xor    r8d,r8d
   140002378:	mov    QWORD PTR [rsp+0x20],rax
   14000237d:	lea    rdx,[rip+0x856c]        # 0x14000a8f0
   140002384:	mov    rcx,r15
   140002387:	call   QWORD PTR [rip+0x5ddb]        # 0x140008168
   14000238d:	mov    ebx,eax
   14000238f:	test   eax,eax
   140002391:	jne    0x140002b0e
   140002397:	mov    rcx,QWORD PTR [rbp-0x68]
   14000239b:	lea    rax,[rbp-0x70]
   14000239f:	mov    QWORD PTR [rsp+0x40],rax
   1400023a4:	lea    rdx,[rip+0x863d]        # 0x14000a9e8
   1400023ab:	lea    rax,[rbp-0x50]
   1400023af:	xor    r9d,r9d
   1400023b2:	mov    QWORD PTR [rsp+0x38],rax
   1400023b7:	xor    r8d,r8d
   1400023ba:	mov    QWORD PTR [rsp+0x30],rsi
   1400023bf:	mov    DWORD PTR [rsp+0x28],edi
   1400023c3:	mov    DWORD PTR [rsp+0x20],esi
   1400023c7:	call   QWORD PTR [rip+0x5dab]        # 0x140008178
   1400023cd:	mov    rcx,QWORD PTR [rbp-0x68]
   1400023d1:	mov    ebx,eax
   1400023d3:	call   QWORD PTR [rip+0x5db7]        # 0x140008190
   1400023d9:	test   ebx,ebx
   1400023db:	jne    0x140002b0e
   1400023e1:	mov    r15,QWORD PTR [rip+0xb240]        # 0x14000d628
   1400023e8:	mov    DWORD PTR [rsp+0x78],esi
   1400023ec:	jmp    0x140002b06
   1400023f1:	test   r15,r15
   1400023f4:	je     0x140002b0e
   1400023fa:	call   0x140007050
   1400023ff:	mov    ebx,eax
   140002401:	test   eax,eax
   140002403:	jne    0x140002af0
   140002409:	xor    edx,edx
   14000240b:	lea    rcx,[rbp-0x30]
   14000240f:	mov    r8d,0x80
   140002415:	call   0x140007eae
   14000241a:	movzx  ecx,BYTE PTR [r15+0x1e]
   14000241f:	movzx  edx,BYTE PTR [r15+0x1d]
   140002424:	movzx  r8d,BYTE PTR [r15+0x1c]
   140002429:	movzx  r9d,BYTE PTR [r15+0x1b]
   14000242e:	movzx  eax,BYTE PTR [r15+0x1f]
   140002433:	movzx  r10d,BYTE PTR [r15+0x1a]
   140002438:	movzx  r11d,BYTE PTR [r15+0x19]
   14000243d:	movzx  ebx,BYTE PTR [r15+0x18]
   140002442:	movzx  edi,WORD PTR [r15+0x16]
   140002447:	movzx  esi,WORD PTR [r15+0x14]
   14000244c:	mov    DWORD PTR [rsp+0x68],eax
   140002450:	mov    DWORD PTR [rsp+0x60],ecx
   140002454:	lea    rcx,[rbp-0x30]
   140002458:	mov    DWORD PTR [rsp+0x58],edx
   14000245c:	mov    edx,0x40
   140002461:	mov    DWORD PTR [rsp+0x50],r8d
   140002466:	lea    r8,[rip+0x63f3]        # 0x140008860
   14000246d:	mov    DWORD PTR [rsp+0x48],r9d
   140002472:	mov    r9d,DWORD PTR [r15+0x10]
   140002476:	mov    DWORD PTR [rsp+0x40],r10d
   14000247b:	mov    DWORD PTR [rsp+0x38],r11d
   140002480:	mov    DWORD PTR [rsp+0x30],ebx
   140002484:	mov    DWORD PTR [rsp+0x28],edi
   140002488:	mov    DWORD PTR [rsp+0x20],esi
   14000248c:	call   0x14000114c
   140002491:	mov    rcx,QWORD PTR [rbp-0x50]
   140002495:	lea    rax,[rbp-0x70]
   140002499:	mov    QWORD PTR [rsp+0x40],rax
   14000249e:	lea    rdx,[rbp-0x30]
   1400024a2:	lea    rax,[rbp-0x58]
   1400024a6:	xor    esi,esi
   1400024a8:	mov    QWORD PTR [rsp+0x38],rax
   1400024ad:	xor    r9d,r9d
   1400024b0:	mov    QWORD PTR [rsp+0x30],rsi
   1400024b5:	xor    r8d,r8d
   1400024b8:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400024c0:	mov    DWORD PTR [rsp+0x20],esi
   1400024c4:	call   QWORD PTR [rip+0x5cae]        # 0x140008178
   1400024ca:	mov    ebx,eax
   1400024cc:	test   eax,eax
   1400024ce:	jne    0x140002ab8
   1400024d4:	cmp    DWORD PTR [rbp-0x70],0x1
   1400024d8:	je     0x140002503
   1400024da:	mov    rcx,QWORD PTR [rbp-0x58]
   1400024de:	mov    rdx,r15
   1400024e1:	call   0x1400066c8
   1400024e6:	mov    rcx,QWORD PTR [rbp-0x58]
   1400024ea:	mov    ebx,eax
   1400024ec:	call   QWORD PTR [rip+0x5c9e]        # 0x140008190
   1400024f2:	mov    QWORD PTR [rbp-0x58],rsi
   1400024f6:	test   ebx,ebx
   1400024f8:	jne    0x140002abc
   1400024fe:	jmp    0x140002ac4
   140002503:	mov    rax,QWORD PTR [r15+0x30]
   140002507:	lea    rdx,[rip+0x851a]        # 0x14000aa28
   14000250e:	mov    edi,0x4
   140002513:	xor    r8d,r8d
   140002516:	mov    DWORD PTR [rsp+0x28],edi
   14000251a:	mov    r9d,edi
   14000251d:	mov    ecx,DWORD PTR [rax+0x10]
   140002520:	lea    rax,[rsp+0x70]
   140002525:	mov    DWORD PTR [rsp+0x70],ecx
   140002529:	mov    rcx,QWORD PTR [rbp-0x58]
   14000252d:	mov    QWORD PTR [rsp+0x20],rax
   140002532:	call   QWORD PTR [rip+0x5c60]        # 0x140008198
   140002538:	mov    ebx,eax
   14000253a:	test   eax,eax
   14000253c:	jne    0x140002a54
   140002542:	mov    rcx,QWORD PTR [r15+0x28]
   140002546:	test   rcx,rcx
   140002549:	je     0x1400025a3
   14000254b:	call   QWORD PTR [rip+0x5caf]        # 0x140008200
   140002551:	inc    eax
   140002553:	movsxd rcx,eax
   140002556:	add    rcx,rcx
   140002559:	mov    rax,rcx
   14000255c:	sar    rax,0x20
   140002560:	test   eax,eax
   140002562:	je     0x14000256e
   140002564:	mov    ebx,0x216
   140002569:	jmp    0x140002a54
   14000256e:	mov    DWORD PTR [rsp+0x70],ecx
   140002572:	lea    rdx,[rip+0x848f]        # 0x14000aa08
   140002579:	mov    rax,QWORD PTR [r15+0x28]
   14000257d:	mov    r9d,0x1
   140002583:	mov    DWORD PTR [rsp+0x28],ecx
   140002587:	xor    r8d,r8d
   14000258a:	mov    rcx,QWORD PTR [rbp-0x58]
   14000258e:	mov    QWORD PTR [rsp+0x20],rax
   140002593:	call   QWORD PTR [rip+0x5bff]        # 0x140008198
   140002599:	mov    ebx,eax
   14000259b:	test   eax,eax
   14000259d:	jne    0x140002a54
   1400025a3:	mov    r8,QWORD PTR [rbp-0x48]
   1400025a7:	mov    rcx,r14
   1400025aa:	mov    rdx,QWORD PTR [r15+0x20]
   1400025ae:	call   0x140001e14
   1400025b3:	mov    rdi,rax
   1400025b6:	test   rax,rax
   1400025b9:	jne    0x1400025bf
   1400025bb:	mov    rdi,QWORD PTR [r15+0x20]
   1400025bf:	mov    rcx,rdi
   1400025c2:	call   QWORD PTR [rip+0x5c38]        # 0x140008200
   1400025c8:	inc    eax
   1400025ca:	movsxd rcx,eax
   1400025cd:	add    rcx,rcx
   1400025d0:	mov    rax,rcx
   1400025d3:	sar    rax,0x20
   1400025d7:	test   eax,eax
   1400025d9:	je     0x1400025e2
   1400025db:	mov    ebx,0x216
   1400025e0:	jmp    0x14000260b
   1400025e2:	mov    DWORD PTR [rsp+0x28],ecx
   1400025e6:	lea    rdx,[rip+0x845b]        # 0x14000aa48
   1400025ed:	mov    DWORD PTR [rsp+0x70],ecx
   1400025f1:	mov    r9d,0x2
   1400025f7:	mov    rcx,QWORD PTR [rbp-0x58]
   1400025fb:	xor    r8d,r8d
   1400025fe:	mov    QWORD PTR [rsp+0x20],rdi
   140002603:	call   QWORD PTR [rip+0x5b8f]        # 0x140008198
   140002609:	mov    ebx,eax
   14000260b:	test   rdi,rdi
   14000260e:	je     0x14000262a
   140002610:	cmp    rdi,QWORD PTR [r15+0x20]
   140002614:	je     0x14000262a
   140002616:	call   QWORD PTR [rip+0x5a84]        # 0x1400080a0
   14000261c:	mov    r8,rdi
   14000261f:	xor    edx,edx
   140002621:	mov    rcx,rax
   140002624:	call   QWORD PTR [rip+0x5a6e]        # 0x140008098
   14000262a:	test   ebx,ebx
   14000262c:	jne    0x140002a54
   140002632:	mov    r14,QWORD PTR [r15+0x8]
   140002636:	test   r14,r14
   140002639:	je     0x140002a50
   14000263f:	mov    eax,DWORD PTR [rbp-0x80]
   140002642:	cmp    DWORD PTR [rsp+0x74],eax
   140002646:	ja     0x140002a4b
   14000264c:	xor    edx,edx
   14000264e:	lea    rcx,[rbp+0x50]
   140002652:	mov    r8d,0x80
   140002658:	call   0x140007eae
   14000265d:	movzx  ecx,BYTE PTR [r14+0x1e]
   140002662:	movzx  edx,BYTE PTR [r14+0x1d]
   140002667:	movzx  r8d,BYTE PTR [r14+0x1c]
   14000266c:	movzx  r9d,BYTE PTR [r14+0x1b]
   140002671:	movzx  eax,BYTE PTR [r14+0x1f]
   140002676:	movzx  r10d,BYTE PTR [r14+0x1a]
   14000267b:	movzx  r11d,BYTE PTR [r14+0x19]
   140002680:	movzx  ebx,BYTE PTR [r14+0x18]
   140002685:	movzx  edi,WORD PTR [r14+0x16]
   14000268a:	movzx  esi,WORD PTR [r14+0x14]
   14000268f:	mov    DWORD PTR [rsp+0x68],eax
   140002693:	mov    DWORD PTR [rsp+0x60],ecx
   140002697:	lea    rcx,[rbp+0x50]
   14000269b:	mov    DWORD PTR [rsp+0x58],edx
   14000269f:	mov    edx,0x40
   1400026a4:	mov    DWORD PTR [rsp+0x50],r8d
   1400026a9:	lea    r8,[rip+0x61b0]        # 0x140008860
   1400026b0:	mov    DWORD PTR [rsp+0x48],r9d
   1400026b5:	mov    r9d,DWORD PTR [r14+0x10]
   1400026b9:	mov    DWORD PTR [rsp+0x40],r10d
   1400026be:	mov    DWORD PTR [rsp+0x38],r11d
   1400026c3:	mov    DWORD PTR [rsp+0x30],ebx
   1400026c7:	mov    DWORD PTR [rsp+0x28],edi
   1400026cb:	mov    DWORD PTR [rsp+0x20],esi
   1400026cf:	call   0x14000114c
   1400026d4:	mov    rcx,QWORD PTR [rbp-0x50]
   1400026d8:	lea    r8,[rbp+0x50]
   1400026dc:	lea    rdx,[rbp-0x30]
   1400026e0:	call   0x140006530
   1400026e5:	mov    edi,0xb7
   1400026ea:	xor    esi,esi
   1400026ec:	mov    ebx,eax
   1400026ee:	cmp    eax,edi
   1400026f0:	jne    0x1400026fc
   1400026f2:	mov    r14,QWORD PTR [r14]
   1400026f5:	mov    ebx,esi
   1400026f7:	jmp    0x140002636
   1400026fc:	test   eax,eax
   1400026fe:	jne    0x140002a50
   140002704:	mov    rcx,QWORD PTR [rbp-0x58]
   140002708:	lea    rax,[rbp-0x70]
   14000270c:	mov    QWORD PTR [rsp+0x40],rax
   140002711:	lea    rdx,[rbp+0x50]
   140002715:	lea    rax,[rbp-0x78]
   140002719:	xor    r9d,r9d
   14000271c:	mov    QWORD PTR [rsp+0x38],rax
   140002721:	xor    r8d,r8d
   140002724:	mov    QWORD PTR [rsp+0x30],rsi
   140002729:	mov    DWORD PTR [rsp+0x28],0x2001f
   140002731:	mov    DWORD PTR [rsp+0x20],esi
   140002735:	call   QWORD PTR [rip+0x5a3d]        # 0x140008178
   14000273b:	mov    ebx,eax
   14000273d:	test   eax,eax
   14000273f:	jne    0x140002753
   140002741:	cmp    DWORD PTR [rbp-0x70],0x1
   140002745:	mov    rcx,QWORD PTR [rbp-0x78]
   140002749:	je     0x140002762
   14000274b:	mov    ebx,edi
   14000274d:	call   QWORD PTR [rip+0x5a3d]        # 0x140008190
   140002753:	mov    rcx,rsi
   140002756:	mov    QWORD PTR [rbp-0x78],rcx
   14000275a:	test   ebx,ebx
   14000275c:	jne    0x140002a50
   140002762:	mov    edi,0x4
   140002767:	lea    rax,[r14+0x38]
   14000276b:	mov    DWORD PTR [rsp+0x28],edi
   14000276f:	lea    rdx,[rip+0x82fa]        # 0x14000aa70
   140002776:	mov    r9d,edi
   140002779:	mov    QWORD PTR [rsp+0x20],rax
   14000277e:	xor    r8d,r8d
   140002781:	call   QWORD PTR [rip+0x5a11]        # 0x140008198
   140002787:	mov    ebx,eax
   140002789:	test   eax,eax
   14000278b:	jne    0x140002a50
   140002791:	mov    rcx,QWORD PTR [rbp-0x78]
   140002795:	lea    rax,[r14+0x3c]
   140002799:	mov    DWORD PTR [rsp+0x28],edi
   14000279d:	lea    rdx,[rip+0x82ec]        # 0x14000aa90
   1400027a4:	mov    r9d,edi
   1400027a7:	mov    QWORD PTR [rsp+0x20],rax
   1400027ac:	xor    r8d,r8d
   1400027af:	call   QWORD PTR [rip+0x59e3]        # 0x140008198
   1400027b5:	mov    ebx,eax
   1400027b7:	test   eax,eax
   1400027b9:	jne    0x140002a50
   1400027bf:	mov    rax,QWORD PTR [r14+0x28]
   1400027c3:	lea    rdx,[rip+0x82e6]        # 0x14000aab0
   1400027ca:	mov    DWORD PTR [rsp+0x28],edi
   1400027ce:	mov    r9d,edi
   1400027d1:	xor    r8d,r8d
   1400027d4:	mov    ecx,DWORD PTR [rax+0x10]
   1400027d7:	lea    rax,[rsp+0x70]
   1400027dc:	mov    DWORD PTR [rsp+0x70],ecx
   1400027e0:	mov    rcx,QWORD PTR [rbp-0x78]
   1400027e4:	mov    QWORD PTR [rsp+0x20],rax
   1400027e9:	call   QWORD PTR [rip+0x59a9]        # 0x140008198
   1400027ef:	mov    ebx,eax
   1400027f1:	test   eax,eax
   1400027f3:	jne    0x140002a50
   1400027f9:	mov    rcx,QWORD PTR [rbp-0x78]
   1400027fd:	lea    rax,[rsp+0x74]
   140002802:	mov    DWORD PTR [rsp+0x28],edi
   140002806:	lea    rdx,[rip+0x8303]        # 0x14000ab10
   14000280d:	mov    r9d,edi
   140002810:	mov    QWORD PTR [rsp+0x20],rax
   140002815:	xor    r8d,r8d
   140002818:	call   QWORD PTR [rip+0x597a]        # 0x140008198
   14000281e:	mov    ebx,eax
   140002820:	test   eax,eax
   140002822:	jne    0x140002a50
   140002828:	mov    rax,QWORD PTR [r14+0x30]
   14000282c:	test   rax,rax
   14000282f:	je     0x140002886
   140002831:	cmp    DWORD PTR [rax+0x14],0xffffffff
   140002835:	je     0x140002886
   140002837:	mov    ecx,DWORD PTR [rax+0x14]
   14000283a:	mov    rax,QWORD PTR [rip+0xadef]        # 0x14000d630
   140002841:	lea    rdx,[rax+rcx*2]
   140002845:	or     rax,0xffffffffffffffff
   140002849:	inc    rax
   14000284c:	cmp    WORD PTR [rdx+rax*2],si
   140002850:	jne    0x140002849
   140002852:	mov    rcx,QWORD PTR [rbp-0x78]
   140002856:	lea    eax,[rax*2+0x2]
   14000285d:	mov    DWORD PTR [rsp+0x28],eax
   140002861:	mov    r9d,0x1
   140002867:	mov    QWORD PTR [rsp+0x20],rdx
   14000286c:	xor    r8d,r8d
   14000286f:	lea    rdx,[rip+0x830a]        # 0x14000ab80
   140002876:	call   QWORD PTR [rip+0x591c]        # 0x140008198
   14000287c:	mov    ebx,eax
   14000287e:	test   eax,eax
   140002880:	jne    0x140002a50
   140002886:	mov    eax,esi
   140002888:	mov    DWORD PTR [rsp+0x7c],eax
   14000288c:	mov    rdx,QWORD PTR [r14+0x8]
   140002890:	jmp    0x1400028af
   140002892:	mov    ecx,DWORD PTR [rsp+0x74]
   140002896:	inc    eax
   140002898:	add    ecx,0x2
   14000289b:	mov    DWORD PTR [rsp+0x7c],eax
   14000289f:	mov    DWORD PTR [rsp+0x74],ecx
   1400028a3:	test   eax,eax
   1400028a5:	je     0x140002910
   1400028a7:	cmp    ecx,DWORD PTR [rbp-0x80]
   1400028aa:	ja     0x140002909
   1400028ac:	mov    rdx,QWORD PTR [rdx]
   1400028af:	test   rdx,rdx
   1400028b2:	jne    0x140002892
   1400028b4:	mov    rcx,QWORD PTR [rbp-0x78]
   1400028b8:	lea    rax,[rsp+0x74]
   1400028bd:	mov    DWORD PTR [rsp+0x28],edi
   1400028c1:	lea    rdx,[rip+0x8268]        # 0x14000ab30
   1400028c8:	mov    r9d,edi
   1400028cb:	mov    QWORD PTR [rsp+0x20],rax
   1400028d0:	xor    r8d,r8d
   1400028d3:	call   QWORD PTR [rip+0x58bf]        # 0x140008198
   1400028d9:	mov    ebx,eax
   1400028db:	mov    eax,DWORD PTR [rsp+0x7c]
   1400028df:	add    DWORD PTR [rsp+0x74],0x2
   1400028e4:	test   ebx,ebx
   1400028e6:	jne    0x140002a2a
   1400028ec:	imul   rcx,rax,0x38
   1400028f0:	mov    rax,rcx
   1400028f3:	mov    DWORD PTR [rsp+0x70],ecx
   1400028f7:	sar    rax,0x20
   1400028fb:	test   eax,eax
   1400028fd:	je     0x140002917
   1400028ff:	mov    ebx,0x216
   140002904:	jmp    0x140002a2a
   140002909:	mov    ebx,0xd
   14000290e:	jmp    0x1400028df
   140002910:	mov    ebx,0x216
   140002915:	jmp    0x1400028df
   140002917:	test   r13,r13
   14000291a:	je     0x140002934
   14000291c:	call   QWORD PTR [rip+0x577e]        # 0x1400080a0
   140002922:	mov    r8,r13
   140002925:	xor    edx,edx
   140002927:	mov    rcx,rax
   14000292a:	call   QWORD PTR [rip+0x5768]        # 0x140008098
   140002930:	mov    ecx,DWORD PTR [rsp+0x70]
   140002934:	mov    ebx,ecx
   140002936:	call   QWORD PTR [rip+0x5764]        # 0x1400080a0
   14000293c:	mov    r8d,ebx
   14000293f:	mov    edx,0x8
   140002944:	mov    rcx,rax
   140002947:	call   QWORD PTR [rip+0x573b]        # 0x140008088
   14000294d:	mov    r13,rax
   140002950:	test   rax,rax
   140002953:	jne    0x14000295d
   140002955:	lea    ebx,[rax+0xe]
   140002958:	jmp    0x140002a2a
   14000295d:	mov    rdx,QWORD PTR [r14+0x8]
   140002961:	test   rdx,rdx
   140002964:	je     0x1400029d6
   140002966:	lea    r8,[rax+0x8]
   14000296a:	mov    eax,DWORD PTR [rdx+0x30]
   14000296d:	mov    DWORD PTR [r8-0x8],eax
   140002971:	mov    rax,QWORD PTR [rdx+0x10]
   140002975:	mov    ecx,DWORD PTR [rax+0x10]
   140002978:	mov    DWORD PTR [r8-0x4],ecx
   14000297c:	mov    rax,QWORD PTR [rdx+0x28]
   140002980:	mov    QWORD PTR [r8],rax
   140002983:	lea    r8,[r8+0x38]
   140002987:	mov    rax,QWORD PTR [rdx+0x18]
   14000298b:	mov    ecx,DWORD PTR [rax+0x10]
   14000298e:	mov    DWORD PTR [r8-0x30],ecx
   140002992:	mov    eax,DWORD PTR [rdx+0x48]
   140002995:	mov    DWORD PTR [r8-0x2c],eax
   140002999:	mov    eax,DWORD PTR [rdx+0x40]
   14000299c:	mov    DWORD PTR [r8-0x28],eax
   1400029a0:	mov    eax,DWORD PTR [rdx+0x44]
   1400029a3:	mov    DWORD PTR [r8-0x24],eax
   1400029a7:	mov    rax,QWORD PTR [rdx+0x20]
   1400029ab:	mov    ecx,DWORD PTR [rax+0x10]
   1400029ae:	mov    DWORD PTR [r8-0x20],ecx
   1400029b2:	mov    eax,DWORD PTR [rdx+0x4c]
   1400029b5:	mov    DWORD PTR [r8-0x1c],eax
   1400029b9:	mov    eax,DWORD PTR [rdx+0x50]
   1400029bc:	mov    DWORD PTR [r8-0x18],eax
   1400029c0:	mov    eax,DWORD PTR [rdx+0x58]
   1400029c3:	mov    DWORD PTR [r8-0x10],eax
   1400029c7:	mov    eax,DWORD PTR [rdx+0x54]
   1400029ca:	mov    DWORD PTR [r8-0x14],eax
   1400029ce:	mov    rdx,QWORD PTR [rdx]
   1400029d1:	test   rdx,rdx
   1400029d4:	jne    0x14000296a
   1400029d6:	mov    eax,DWORD PTR [rsp+0x70]
   1400029da:	lea    rdx,[rip+0x810f]        # 0x14000aaf0
   1400029e1:	mov    rcx,QWORD PTR [rbp-0x78]
   1400029e5:	mov    r9d,0x3
   1400029eb:	mov    DWORD PTR [rsp+0x28],eax
   1400029ef:	xor    r8d,r8d
   1400029f2:	mov    QWORD PTR [rsp+0x20],r13
   1400029f7:	call   QWORD PTR [rip+0x579b]        # 0x140008198
   1400029fd:	mov    ebx,eax
   1400029ff:	test   eax,eax
   140002a01:	jne    0x140002a2a
   140002a03:	mov    rcx,QWORD PTR [rbp-0x78]
   140002a07:	lea    rax,[rsp+0x7c]
   140002a0c:	mov    DWORD PTR [rsp+0x28],edi
   140002a10:	lea    rdx,[rip+0x80b9]        # 0x14000aad0
   140002a17:	mov    r9d,edi
   140002a1a:	mov    QWORD PTR [rsp+0x20],rax
   140002a1f:	xor    r8d,r8d
   140002a22:	call   QWORD PTR [rip+0x5770]        # 0x140008198
   140002a28:	mov    ebx,eax
   140002a2a:	mov    rcx,QWORD PTR [rbp-0x78]
   140002a2e:	lea    rax,[rcx-0x1]
   140002a32:	cmp    rax,0xfffffffffffffffd
   140002a36:	ja     0x140002a3e
   140002a38:	call   QWORD PTR [rip+0x5752]        # 0x140008190
   140002a3e:	mov    r14,QWORD PTR [r14]
   140002a41:	test   ebx,ebx
   140002a43:	je     0x140002636
   140002a49:	jmp    0x140002a50
   140002a4b:	mov    ebx,0xd
   140002a50:	mov    r14,QWORD PTR [rbp-0x60]
   140002a54:	mov    rcx,QWORD PTR [rbp-0x58]
   140002a58:	test   rcx,rcx
   140002a5b:	je     0x140002abc
   140002a5d:	call   QWORD PTR [rip+0x572d]        # 0x140008190
   140002a63:	test   ebx,ebx
   140002a65:	je     0x140002aa0
   140002a67:	mov    rdi,QWORD PTR [rbp-0x50]
   140002a6b:	lea    rax,[rbp-0x40]
   140002a6f:	mov    rcx,rdi
   140002a72:	mov    QWORD PTR [rsp+0x20],rax
   140002a77:	mov    r9d,0x2000000
   140002a7d:	lea    rdx,[rbp-0x30]
   140002a81:	xor    r8d,r8d
   140002a84:	call   QWORD PTR [rip+0x56de]        # 0x140008168
   140002a8a:	test   eax,eax
   140002a8c:	jne    0x140002abc
   140002a8e:	lea    r8,[rbp-0x40]
   140002a92:	mov    rcx,rdi
   140002a95:	lea    rdx,[rbp-0x30]
   140002a99:	call   0x140006aec
   140002a9e:	jmp    0x140002abc
   140002aa0:	test   BYTE PTR [rip+0xb401],0x1        # 0x14000dea8
   140002aa7:	je     0x140002ad9
   140002aa9:	mov    r9,QWORD PTR [r15+0x28]
   140002aad:	lea    r8,[rbp-0x30]
   140002ab1:	call   0x140001354
   140002ab6:	jmp    0x140002abc
   140002ab8:	mov    QWORD PTR [rbp-0x58],rsi
   140002abc:	cmp    ebx,0xb7
   140002ac2:	jne    0x140002ad9
   140002ac4:	mov    r9,r14
   140002ac7:	lea    r8,[rbp-0x30]
   140002acb:	xor    edx,edx
   140002acd:	mov    ecx,0x25b
   140002ad2:	call   0x140006e40
   140002ad7:	mov    ebx,esi
   140002ad9:	mov    rcx,QWORD PTR [rip+0xab78]        # 0x14000d658
   140002ae0:	test   rcx,rcx
   140002ae3:	je     0x140002aeb
   140002ae5:	call   QWORD PTR [rip+0x572d]        # 0x140008218
   140002aeb:	mov    r15,QWORD PTR [r15]
   140002aee:	jmp    0x140002b06
   140002af0:	cmp    DWORD PTR [rsp+0x78],0xa
   140002af5:	jae    0x140002b0e
   140002af7:	mov    ecx,0x3e8
   140002afc:	call   QWORD PTR [rip+0x571e]        # 0x140008220
   140002b02:	inc    DWORD PTR [rsp+0x78]
   140002b06:	test   ebx,ebx
   140002b08:	je     0x1400023f1
   140002b0e:	mov    rcx,QWORD PTR [rbp-0x50]
   140002b12:	lea    rax,[rcx-0x1]
   140002b16:	cmp    rax,0xfffffffffffffffd
   140002b1a:	ja     0x140002b22
   140002b1c:	call   QWORD PTR [rip+0x566e]        # 0x140008190
   140002b22:	test   r13,r13
   140002b25:	je     0x140002b3b
   140002b27:	call   QWORD PTR [rip+0x5573]        # 0x1400080a0
   140002b2d:	mov    r8,r13
   140002b30:	xor    edx,edx
   140002b32:	mov    rcx,rax
   140002b35:	call   QWORD PTR [rip+0x555d]        # 0x140008098
   140002b3b:	call   0x140005cbc
   140002b40:	mov    rcx,QWORD PTR [rip+0xab11]        # 0x14000d658
   140002b47:	test   rcx,rcx
   140002b4a:	je     0x140002b59
   140002b4c:	call   QWORD PTR [rip+0x5526]        # 0x140008078
   140002b52:	mov    QWORD PTR [rip+0xaaff],rsi        # 0x14000d658
   140002b59:	mov    r8,r14
   140002b5c:	test   ebx,ebx
   140002b5e:	jne    0x140002b6e
   140002b60:	xor    edx,edx
   140002b62:	mov    ecx,0x259
   140002b67:	call   0x140006e40
   140002b6c:	jmp    0x140002b80
   140002b6e:	mov    r9d,ebx
   140002b71:	mov    edx,0x2
   140002b76:	mov    ecx,0x25a
   140002b7b:	call   0x140006e40
   140002b80:	mov    eax,ebx
   140002b82:	mov    rcx,QWORD PTR [rbp+0xd0]
   140002b89:	xor    rcx,rsp
   140002b8c:	call   0x140007730
   140002b91:	lea    r11,[rsp+0x1e0]
   140002b99:	mov    rbx,QWORD PTR [r11+0x40]
   140002b9d:	mov    rsi,QWORD PTR [r11+0x48]
   140002ba1:	mov    rsp,r11
   140002ba4:	pop    r15
   140002ba6:	pop    r14
   140002ba8:	pop    r13
   140002baa:	pop    rdi
   140002bab:	pop    rbp
   140002bac:	ret    
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	int3   
   140002bb1:	int3   
   140002bb2:	int3   
   140002bb3:	int3   
   140002bb4:	mov    QWORD PTR [rsp+0x8],rbx
   140002bb9:	mov    QWORD PTR [rsp+0x10],rsi
   140002bbe:	push   rbp
   140002bbf:	push   rdi
   140002bc0:	push   r12
   140002bc2:	push   r14
   140002bc4:	push   r15
   140002bc6:	mov    rbp,rsp
   140002bc9:	sub    rsp,0x40
   140002bcd:	xor    r12d,r12d
   140002bd0:	mov    r14,rdx
   140002bd3:	mov    edi,ecx
   140002bd5:	xor    r9d,r9d
   140002bd8:	xor    r8d,r8d
   140002bdb:	xor    ecx,ecx
   140002bdd:	mov    ebx,r12d
   140002be0:	lea    r15d,[r12+0x1]
   140002be5:	mov    edx,r15d
   140002be8:	call   QWORD PTR [rip+0x54a2]        # 0x140008090
   140002bee:	xor    r8d,r8d
   140002bf1:	xor    edx,edx
   140002bf3:	mov    ecx,0x100
   140002bf8:	call   QWORD PTR [rip+0x54f2]        # 0x1400080f0
   140002bfe:	call   0x1400012ec
   140002c03:	cmp    edi,0x2
   140002c06:	jl     0x140002f8a
   140002c0c:	mov    rcx,QWORD PTR [r14+0x8]
   140002c10:	or     rsi,0xffffffffffffffff
   140002c14:	mov    rax,rsi
   140002c17:	inc    rax
   140002c1a:	cmp    WORD PTR [rcx+rax*2],r12w
   140002c1f:	jne    0x140002c17
   140002c21:	test   rax,rax
   140002c24:	je     0x140002f8a
   140002c2a:	mov    rax,rsi
   140002c2d:	inc    rax
   140002c30:	cmp    WORD PTR [rcx+rax*2],r12w
   140002c35:	jne    0x140002c2d
   140002c37:	mov    edx,0xfffd
   140002c3c:	cmp    rax,0x2
   140002c40:	jb     0x140002c59
   140002c42:	movzx  eax,WORD PTR [rcx]
   140002c45:	sub    ax,0x2d
   140002c49:	test   dx,ax
   140002c4c:	jne    0x140002c59
   140002c4e:	cmp    WORD PTR [rcx+0x2],0x3f
   140002c53:	je     0x140002f8a
   140002c59:	cmp    edi,0x4
   140002c5c:	jl     0x140002cbb
   140002c5e:	mov    rcx,r12
   140002c61:	mov    QWORD PTR [rbp-0x10],r12
   140002c65:	mov    rdx,r12
   140002c68:	mov    QWORD PTR [rbp+0x40],rcx
   140002c6c:	mov    QWORD PTR [rbp+0x48],rdx
   140002c70:	mov    r8,r12
   140002c73:	jb     0x140002ca1
   140002c75:	lea    rax,[rbp-0x10]
   140002c79:	mov    rdx,r14
   140002c7c:	lea    r9,[rbp+0x48]
   140002c80:	mov    QWORD PTR [rsp+0x20],rax
   140002c85:	lea    r8,[rbp+0x40]
   140002c89:	mov    ecx,edi
   140002c8b:	call   0x140001438
   140002c90:	mov    rcx,QWORD PTR [rbp+0x40]
   140002c94:	mov    r15b,al
   140002c97:	mov    rdx,QWORD PTR [rbp+0x48]
   140002c9b:	mov    r8,QWORD PTR [rbp-0x10]
   140002c9f:	jmp    0x140002ca4
   140002ca1:	mov    r15b,r12b
   140002ca4:	test   r15b,r15b
   140002ca7:	je     0x140002f77
   140002cad:	xor    r9d,r9d
   140002cb0:	call   QWORD PTR [rip+0x55fa]        # 0x1400082b0
   140002cb6:	jmp    0x140002f70
   140002cbb:	lea    r9,[rbp+0x48]
   140002cbf:	mov    QWORD PTR [rbp+0x40],r12
   140002cc3:	lea    r8,[rbp+0x40]
   140002cc7:	mov    QWORD PTR [rbp+0x48],r12
   140002ccb:	mov    rdx,r14
   140002cce:	mov    ecx,edi
   140002cd0:	call   0x140001d2c
   140002cd5:	test   al,al
   140002cd7:	je     0x140002d03
   140002cd9:	call   QWORD PTR [rip+0x55e9]        # 0x1400082c8
   140002cdf:	mov    ebx,eax
   140002ce1:	test   eax,eax
   140002ce3:	jne    0x140002f8f
   140002ce9:	mov    rdx,QWORD PTR [rbp+0x48]
   140002ced:	mov    rcx,QWORD PTR [rbp+0x40]
   140002cf1:	call   0x140002098
   140002cf6:	mov    ebx,eax
   140002cf8:	call   QWORD PTR [rip+0x55aa]        # 0x1400082a8
   140002cfe:	jmp    0x140002f8f
   140002d03:	mov    rbx,QWORD PTR [r14+0x8]
   140002d07:	mov    rax,rsi
   140002d0a:	inc    rax
   140002d0d:	cmp    WORD PTR [rbx+rax*2],r12w
   140002d12:	jne    0x140002d0a
   140002d14:	mov    edx,0xffdf
   140002d19:	lea    ecx,[rdx+0x1e]
   140002d1c:	cmp    rax,0x4
   140002d20:	jb     0x140002d96
   140002d22:	movzx  eax,WORD PTR [rbx]
   140002d25:	sub    ax,0x2d
   140002d29:	test   cx,ax
   140002d2c:	jne    0x140002d96
   140002d2e:	movzx  eax,WORD PTR [rbx+0x2]
   140002d32:	sub    ax,0x53
   140002d36:	test   dx,ax
   140002d39:	jne    0x140002d96
   140002d3b:	cmp    WORD PTR [rbx+0x4],0x3a
   140002d40:	jne    0x140002d96
   140002d42:	lea    rdi,[rip+0xad27]        # 0x14000da70
   140002d49:	xor    edx,edx
   140002d4b:	mov    rcx,rdi
   140002d4e:	mov    r8d,0x410
   140002d54:	call   0x140007eae
   140002d59:	add    rbx,0x6
   140002d5d:	mov    QWORD PTR [rsp+0x28],r12
   140002d62:	mov    rdx,rbx
   140002d65:	mov    QWORD PTR [rsp+0x20],rdi
   140002d6a:	mov    r9d,0x208
   140002d70:	xor    r8d,r8d
   140002d73:	xor    ecx,ecx
   140002d75:	call   QWORD PTR [rip+0x5385]        # 0x140008100
   140002d7b:	test   eax,eax
   140002d7d:	lea    rdx,[rip+0x56bc]        # 0x140008440
   140002d84:	cmove  rdi,rbx
   140002d88:	mov    rcx,rdi
   140002d8b:	call   QWORD PTR [rip+0x553f]        # 0x1400082d0
   140002d91:	jmp    0x140002f15
   140002d96:	mov    rdi,r12
   140002d99:	inc    rsi
   140002d9c:	cmp    WORD PTR [rbx+rsi*2],r12w
   140002da1:	jne    0x140002d99
   140002da3:	cmp    rsi,0x2
   140002da7:	jb     0x140002e92
   140002dad:	movzx  eax,WORD PTR [rbx]
   140002db0:	sub    ax,0x2d
   140002db4:	test   cx,ax
   140002db7:	jne    0x140002e92
   140002dbd:	movzx  eax,WORD PTR [rbx+0x2]
   140002dc1:	sub    ax,0x52
   140002dc5:	test   dx,ax
   140002dc8:	jne    0x140002e92
   140002dce:	cmp    rsi,0x2
   140002dd2:	je     0x140002e28
   140002dd4:	cmp    rsi,0x3
   140002dd8:	je     0x140002e92
   140002dde:	cmp    WORD PTR [rbx+0x4],0x3a
   140002de3:	jne    0x140002e92
   140002de9:	lea    rdi,[rip+0xac80]        # 0x14000da70
   140002df0:	xor    edx,edx
   140002df2:	mov    rcx,rdi
   140002df5:	mov    r8d,0x410
   140002dfb:	call   0x140007eae
   140002e00:	add    rbx,0x6
   140002e04:	mov    QWORD PTR [rsp+0x28],r12
   140002e09:	mov    rdx,rbx
   140002e0c:	mov    QWORD PTR [rsp+0x20],rdi
   140002e11:	mov    r9d,0x208
   140002e17:	xor    r8d,r8d
   140002e1a:	xor    ecx,ecx
   140002e1c:	call   QWORD PTR [rip+0x52de]        # 0x140008100
   140002e22:	test   eax,eax
   140002e24:	cmove  rdi,rbx
   140002e28:	xor    edx,edx
   140002e2a:	mov    rcx,rdi
   140002e2d:	call   QWORD PTR [rip+0x54a5]        # 0x1400082d8
   140002e33:	mov    ebx,eax
   140002e35:	test   eax,eax
   140002e37:	jne    0x140002e61
   140002e39:	xor    edx,edx
   140002e3b:	test   rdi,rdi
   140002e3e:	je     0x140002e52
   140002e40:	mov    r8,rdi
   140002e43:	mov    ecx,0x25c
   140002e48:	call   0x140006e40
   140002e4d:	jmp    0x140002f8f
   140002e52:	mov    ecx,0x25e
   140002e57:	call   0x140006e40
   140002e5c:	jmp    0x140002f8f
   140002e61:	mov    edx,0x2
   140002e66:	test   rdi,rdi
   140002e69:	je     0x140002e80
   140002e6b:	mov    r9d,eax
   140002e6e:	mov    r8,rdi
   140002e71:	mov    ecx,0x25d
   140002e76:	call   0x140006e40
   140002e7b:	jmp    0x140002f8f
   140002e80:	mov    r8d,eax
   140002e83:	mov    ecx,0x25f
   140002e88:	call   0x140006e40
   140002e8d:	jmp    0x140002f8f
   140002e92:	mov    rcx,rbx
   140002e95:	call   QWORD PTR [rip+0x5365]        # 0x140008200
   140002e9b:	mov    esi,0xfffd
   140002ea0:	cmp    eax,0x4
   140002ea3:	jl     0x140002edb
   140002ea5:	movzx  eax,WORD PTR [rbx]
   140002ea8:	sub    ax,0x2d
   140002eac:	test   si,ax
   140002eaf:	jne    0x140002edb
   140002eb1:	movzx  eax,WORD PTR [rbx+0x2]
   140002eb5:	lea    ecx,[rsi-0x1e]
   140002eb8:	sub    ax,0x54
   140002ebc:	test   cx,ax
   140002ebf:	jne    0x140002edb
   140002ec1:	cmp    WORD PTR [rbx+0x4],0x3a
   140002ec6:	jne    0x140002edb
   140002ec8:	lea    rdx,[rbx+0x6]
   140002ecc:	test   rdx,rdx
   140002ecf:	je     0x140002edb
   140002ed1:	xor    ecx,ecx
   140002ed3:	call   QWORD PTR [rip+0x53df]        # 0x1400082b8
   140002ed9:	jmp    0x140002f15
   140002edb:	mov    rdi,QWORD PTR [r14+0x8]
   140002edf:	mov    rbx,r12
   140002ee2:	mov    rcx,rdi
   140002ee5:	mov    QWORD PTR [rbp+0x40],rbx
   140002ee9:	call   QWORD PTR [rip+0x5311]        # 0x140008200
   140002eef:	cmp    eax,0x2
   140002ef2:	jl     0x140002f06
   140002ef4:	lea    rdx,[rbp+0x40]
   140002ef8:	mov    rcx,rdi
   140002efb:	call   0x140001528
   140002f00:	mov    rbx,QWORD PTR [rbp+0x40]
   140002f04:	jmp    0x140002f09
   140002f06:	mov    al,r12b
   140002f09:	test   al,al
   140002f0b:	je     0x140002f19
   140002f0d:	mov    rcx,rbx
   140002f10:	call   0x14000178c
   140002f15:	mov    ebx,eax
   140002f17:	jmp    0x140002f8f
   140002f19:	mov    rbx,QWORD PTR [r14+0x8]
   140002f1d:	mov    rcx,rbx
   140002f20:	call   QWORD PTR [rip+0x52da]        # 0x140008200
   140002f26:	cmp    eax,0x4
   140002f29:	jl     0x140002f77
   140002f2b:	movzx  eax,WORD PTR [rbx]
   140002f2e:	sub    ax,0x2d
   140002f32:	test   si,ax
   140002f35:	jne    0x140002f77
   140002f37:	movzx  ecx,WORD PTR [rbx+0x2]
   140002f3b:	mov    edx,0xffde
   140002f40:	lea    eax,[rcx-0x44]
   140002f43:	test   dx,ax
   140002f46:	jne    0x140002f77
   140002f48:	cmp    WORD PTR [rbx+0x4],0x3a
   140002f4d:	jne    0x140002f77
   140002f4f:	sub    cx,0x45
   140002f53:	lea    rdx,[rbx+0x6]
   140002f57:	mov    eax,0xffdf
   140002f5c:	mov    r8d,r12d
   140002f5f:	test   ax,cx
   140002f62:	setne  r8b
   140002f66:	test   rdx,rdx
   140002f69:	je     0x140002f77
   140002f6b:	call   0x140001ba0
   140002f70:	mov    ebx,eax
   140002f72:	test   r15b,r15b
   140002f75:	jne    0x140002f8f
   140002f77:	call   QWORD PTR [rip+0x518b]        # 0x140008108
   140002f7d:	mov    rcx,rax
   140002f80:	xor    edx,edx
   140002f82:	call   QWORD PTR [rip+0x5338]        # 0x1400082c0
   140002f88:	jmp    0x140002f15
   140002f8a:	call   0x140006fa4
   140002f8f:	call   0x140001324
   140002f94:	mov    rsi,QWORD PTR [rsp+0x78]
   140002f99:	mov    eax,ebx
   140002f9b:	mov    rbx,QWORD PTR [rsp+0x70]
   140002fa0:	add    rsp,0x40
   140002fa4:	pop    r15
   140002fa6:	pop    r14
   140002fa8:	pop    r12
   140002faa:	pop    rdi
   140002fab:	pop    rbp
   140002fac:	ret    
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	int3   
   140002fb1:	int3   
   140002fb2:	int3   
   140002fb3:	int3   
   140002fb4:	mov    rax,rsp
   140002fb7:	mov    QWORD PTR [rax+0x8],rbx
   140002fbb:	mov    QWORD PTR [rax+0x10],rbp
   140002fbf:	mov    QWORD PTR [rax+0x18],rsi
   140002fc3:	mov    QWORD PTR [rax+0x20],rdi
   140002fc7:	push   r14
   140002fc9:	sub    rsp,0x20
   140002fcd:	mov    edi,r8d
   140002fd0:	mov    rbp,rdx
   140002fd3:	mov    rsi,rcx
   140002fd6:	cmp    r8d,0x7ffffffd
   140002fdd:	jbe    0x140002fe6
   140002fdf:	mov    eax,0x216
   140002fe4:	jmp    0x140003038
   140002fe6:	lea    ebx,[rdi*2+0x4]
   140002fed:	call   QWORD PTR [rip+0x50ad]        # 0x1400080a0
   140002ff3:	mov    r8d,ebx
   140002ff6:	xor    edx,edx
   140002ff8:	mov    rcx,rax
   140002ffb:	call   QWORD PTR [rip+0x5087]        # 0x140008088
   140003001:	xor    r14d,r14d
   140003004:	mov    QWORD PTR [rsi],rax
   140003007:	mov    rcx,rax
   14000300a:	test   rax,rax
   14000300d:	jne    0x140003014
   14000300f:	lea    eax,[rcx+0xe]
   140003012:	jmp    0x140003038
   140003014:	lea    rbx,[rdi+rdi*1]
   140003018:	mov    rdx,rbp
   14000301b:	mov    r8,rbx
   14000301e:	call   0x140007ea2
   140003023:	mov    rax,QWORD PTR [rsi]
   140003026:	lea    ecx,[rdi+0x1]
   140003029:	mov    WORD PTR [rbx+rax*1],r14w
   14000302e:	mov    rax,QWORD PTR [rsi]
   140003031:	mov    WORD PTR [rax+rcx*2],r14w
   140003036:	xor    eax,eax
   140003038:	mov    rbx,QWORD PTR [rsp+0x30]
   14000303d:	mov    rbp,QWORD PTR [rsp+0x38]
   140003042:	mov    rsi,QWORD PTR [rsp+0x40]
   140003047:	mov    rdi,QWORD PTR [rsp+0x48]
   14000304c:	add    rsp,0x20
   140003050:	pop    r14
   140003052:	ret    
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	xor    r8d,r8d
   14000305f:	test   rcx,rcx
   140003062:	je     0x14000309d
   140003064:	test   rdx,rdx
   140003067:	je     0x14000309d
   140003069:	cmp    rcx,rdx
   14000306c:	jae    0x14000309d
   14000306e:	jmp    0x140003092
   140003070:	cmp    rcx,rdx
   140003073:	jae    0x14000309d
   140003075:	cmp    WORD PTR [rcx],0x20
   140003079:	ja     0x14000309a
   14000307b:	movzx  eax,WORD PTR [rcx]
   14000307e:	movabs r9,0x100002600
   140003088:	bt     r9,rax
   14000308c:	jae    0x14000309a
   14000308e:	add    rcx,0x2
   140003092:	cmp    WORD PTR [rcx],r8w
   140003096:	jne    0x140003070
   140003098:	jmp    0x14000309d
   14000309a:	mov    r8,rcx
   14000309d:	mov    rax,r8
   1400030a0:	ret    
   1400030a1:	int3   
   1400030a2:	int3   
   1400030a3:	int3   
   1400030a4:	int3   
   1400030a5:	int3   
   1400030a6:	int3   
   1400030a7:	int3   
   1400030a8:	xor    r8d,r8d
   1400030ab:	test   rcx,rcx
   1400030ae:	je     0x1400030e7
   1400030b0:	test   rdx,rdx
   1400030b3:	je     0x1400030e7
   1400030b5:	cmp    rcx,rdx
   1400030b8:	jae    0x1400030e7
   1400030ba:	cmp    WORD PTR [rcx],r8w
   1400030be:	je     0x1400030e7
   1400030c0:	cmp    rcx,rdx
   1400030c3:	jae    0x1400030e7
   1400030c5:	cmp    WORD PTR [rcx],0x3e
   1400030c9:	ja     0x1400030de
   1400030cb:	movzx  eax,WORD PTR [rcx]
   1400030ce:	movabs r9,0x7000800500002600
   1400030d8:	bt     r9,rax
   1400030dc:	jb     0x1400030e4
   1400030de:	add    rcx,0x2
   1400030e2:	jmp    0x1400030ba
   1400030e4:	mov    r8,rcx
   1400030e7:	mov    rax,r8
   1400030ea:	ret    
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	int3   
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	xor    eax,eax
   1400030f6:	mov    DWORD PTR [r8],eax
   1400030f9:	test   rcx,rcx
   1400030fc:	je     0x14000326e
   140003102:	test   rdx,rdx
   140003105:	je     0x14000326e
   14000310b:	cmp    rcx,rdx
   14000310e:	jae    0x14000326e
   140003114:	cmp    WORD PTR [rcx],ax
   140003117:	je     0x14000326e
   14000311d:	mov    r11w,0x3e
   140003122:	cmp    rcx,rdx
   140003125:	jae    0x14000326e
   14000312b:	cmp    WORD PTR [rcx],0x2f
   14000312f:	jne    0x140003151
   140003131:	lea    r9,[rcx+0x2]
   140003135:	cmp    rcx,r9
   140003138:	jae    0x140003149
   14000313a:	cmp    r9,rdx
   14000313d:	jae    0x140003149
   14000313f:	cmp    WORD PTR [r9],r11w
   140003143:	je     0x140003237
   140003149:	mov    rcx,r9
   14000314c:	jmp    0x14000322d
   140003151:	cmp    WORD PTR [rcx],0x3c
   140003155:	jne    0x140003217
   14000315b:	lea    r9,[rcx+0x2]
   14000315f:	cmp    rcx,r9
   140003162:	jae    0x140003240
   140003168:	cmp    r9,rdx
   14000316b:	jae    0x140003240
   140003171:	movzx  r10d,WORD PTR [r9]
   140003175:	cmp    r10w,0x2f
   14000317a:	je     0x140003249
   140003180:	cmp    r10w,0x21
   140003185:	jne    0x1400031e7
   140003187:	lea    r9,[rcx+0x6]
   14000318b:	cmp    rcx,r9
   14000318e:	jae    0x140003240
   140003194:	cmp    r9,rdx
   140003197:	jae    0x140003240
   14000319d:	cmp    WORD PTR [rcx+0x4],0x2d
   1400031a2:	jne    0x140003240
   1400031a8:	cmp    WORD PTR [r9],0x2d
   1400031ad:	jne    0x140003240
   1400031b3:	lea    r9,[rcx+0xc]
   1400031b7:	cmp    rcx,r9
   1400031ba:	jae    0x140003240
   1400031c0:	cmp    r9,rdx
   1400031c3:	jae    0x140003240
   1400031c5:	mov    rcx,r9
   1400031c8:	cmp    WORD PTR [rcx-0x4],0x2d
   1400031cd:	jne    0x1400031dc
   1400031cf:	cmp    WORD PTR [rcx-0x2],0x2d
   1400031d4:	jne    0x1400031dc
   1400031d6:	cmp    WORD PTR [rcx],r11w
   1400031da:	je     0x140003229
   1400031dc:	add    rcx,0x2
   1400031e0:	cmp    rcx,rdx
   1400031e3:	jb     0x1400031c8
   1400031e5:	jmp    0x140003229
   1400031e7:	cmp    r10w,0x3f
   1400031ec:	jne    0x140003240
   1400031ee:	lea    r9,[rcx+0x6]
   1400031f2:	cmp    rcx,r9
   1400031f5:	jae    0x140003240
   1400031f7:	cmp    r9,rdx
   1400031fa:	jae    0x140003240
   1400031fc:	mov    rcx,r9
   1400031ff:	cmp    WORD PTR [rcx],r11w
   140003203:	jne    0x14000320c
   140003205:	cmp    WORD PTR [rcx-0x2],0x3f
   14000320a:	je     0x140003229
   14000320c:	add    rcx,0x2
   140003210:	cmp    rcx,rdx
   140003213:	jb     0x1400031ff
   140003215:	jmp    0x140003229
   140003217:	cmp    WORD PTR [rcx],r11w
   14000321b:	je     0x140003264
   14000321d:	cmp    WORD PTR [rcx],0x3d
   140003221:	je     0x14000325b
   140003223:	cmp    WORD PTR [rcx],0x22
   140003227:	je     0x140003252
   140003229:	add    rcx,0x2
   14000322d:	cmp    WORD PTR [rcx],ax
   140003230:	je     0x14000326e
   140003232:	jmp    0x140003122
   140003237:	mov    DWORD PTR [r8],0x3
   14000323e:	jmp    0x14000326b
   140003240:	mov    DWORD PTR [r8],0x1
   140003247:	jmp    0x14000326b
   140003249:	mov    DWORD PTR [r8],0x2
   140003250:	jmp    0x14000326b
   140003252:	mov    DWORD PTR [r8],0x5
   140003259:	jmp    0x14000326b
   14000325b:	mov    DWORD PTR [r8],0x6
   140003262:	jmp    0x14000326b
   140003264:	mov    DWORD PTR [r8],0x4
   14000326b:	mov    rax,rcx
   14000326e:	ret    
   14000326f:	int3   
   140003270:	int3   
   140003271:	int3   
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	mov    QWORD PTR [rsp+0x8],rbx
   14000327d:	mov    QWORD PTR [rsp+0x10],rbp
   140003282:	mov    QWORD PTR [rsp+0x18],rsi
   140003287:	push   rdi
   140003288:	sub    rsp,0x20
   14000328c:	xor    ebx,ebx
   14000328e:	mov    ebp,r8d
   140003291:	mov    rsi,rdx
   140003294:	mov    rdi,rcx
   140003297:	test   rcx,rcx
   14000329a:	je     0x1400032bf
   14000329c:	test   rdx,rdx
   14000329f:	je     0x1400032bf
   1400032a1:	call   QWORD PTR [rip+0x4f59]        # 0x140008200
   1400032a7:	cmp    eax,ebp
   1400032a9:	jne    0x1400032bf
   1400032ab:	mov    r8d,ebp
   1400032ae:	mov    rdx,rsi
   1400032b1:	mov    rcx,rdi
   1400032b4:	call   QWORD PTR [rip+0x50d6]        # 0x140008390
   1400032ba:	test   eax,eax
   1400032bc:	sete   bl
   1400032bf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400032c4:	mov    al,bl
   1400032c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400032d0:	add    rsp,0x20
   1400032d4:	pop    rdi
   1400032d5:	ret    
   1400032d6:	int3   
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	test   rcx,rcx
   1400032df:	je     0x140003324
   1400032e1:	mov    QWORD PTR [rsp+0x8],rbx
   1400032e6:	push   rdi
   1400032e7:	sub    rsp,0x20
   1400032eb:	mov    rdi,QWORD PTR [rcx]
   1400032ee:	mov    rbx,rcx
   1400032f1:	test   rdi,rdi
   1400032f4:	je     0x14000330a
   1400032f6:	call   QWORD PTR [rip+0x4da4]        # 0x1400080a0
   1400032fc:	mov    r8,rdi
   1400032ff:	xor    edx,edx
   140003301:	mov    rcx,rax
   140003304:	call   QWORD PTR [rip+0x4d8e]        # 0x140008098
   14000330a:	xor    edx,edx
   14000330c:	mov    r8d,0xc18
   140003312:	mov    rcx,rbx
   140003315:	call   0x140007eae
   14000331a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000331f:	add    rsp,0x20
   140003323:	pop    rdi
   140003324:	ret    
   140003325:	int3   
   140003326:	int3   
   140003327:	int3   
   140003328:	int3   
   140003329:	int3   
   14000332a:	int3   
   14000332b:	int3   
   14000332c:	mov    QWORD PTR [rsp+0x10],rbx
   140003331:	push   rbp
   140003332:	push   rsi
   140003333:	push   rdi
   140003334:	push   r12
   140003336:	push   r13
   140003338:	push   r14
   14000333a:	push   r15
   14000333c:	mov    rbp,rsp
   14000333f:	sub    rsp,0x40
   140003343:	xor    edi,edi
   140003345:	or     r14,0xffffffffffffffff
   140003349:	and    DWORD PTR [rbp+0x40],edi
   14000334c:	mov    rbx,rdx
   14000334f:	mov    rsi,rcx
   140003352:	test   rcx,rcx
   140003355:	je     0x14000358c
   14000335b:	test   rdx,rdx
   14000335e:	je     0x14000358c
   140003364:	xor    edx,edx
   140003366:	mov    r8d,0xc18
   14000336c:	call   0x140007eae
   140003371:	and    QWORD PTR [rsp+0x30],rdi
   140003376:	lea    r12d,[rdi+0x1]
   14000337a:	mov    r8d,r12d
   14000337d:	mov    DWORD PTR [rsp+0x28],0x80
   140003385:	xor    r9d,r9d
   140003388:	mov    DWORD PTR [rsp+0x20],0x3
   140003390:	mov    edx,0x80000000
   140003395:	mov    rcx,rbx
   140003398:	call   QWORD PTR [rip+0x4cc2]        # 0x140008060
   14000339e:	mov    r14,rax
   1400033a1:	cmp    rax,0xffffffffffffffff
   1400033a5:	jne    0x1400033c7
   1400033a7:	call   QWORD PTR [rip+0x4c7b]        # 0x140008028
   1400033ad:	lea    edx,[r12+0x1]
   1400033b2:	mov    r8,rbx
   1400033b5:	mov    r9d,eax
   1400033b8:	mov    edi,eax
   1400033ba:	lea    ecx,[rdx+0x66]
   1400033bd:	call   0x140006e40
   1400033c2:	jmp    0x1400035a4
   1400033c7:	lea    rdx,[rbp+0x40]
   1400033cb:	mov    rcx,rax
   1400033ce:	call   QWORD PTR [rip+0x4c7c]        # 0x140008050
   1400033d4:	mov    r9d,0x4000000
   1400033da:	mov    r15d,eax
   1400033dd:	cmp    DWORD PTR [rbp+0x40],edi
   1400033e0:	ja     0x140003575
   1400033e6:	cmp    eax,r9d
   1400033e9:	ja     0x140003575
   1400033ef:	lea    ecx,[rax+0x1fff]
   1400033f5:	and    ecx,0xffffe000
   1400033fb:	cmp    ecx,eax
   1400033fd:	cmovb  ecx,eax
   140003400:	mov    r13d,ecx
   140003403:	call   QWORD PTR [rip+0x4c97]        # 0x1400080a0
   140003409:	mov    r8d,r13d
   14000340c:	mov    edx,0x8
   140003411:	mov    rcx,rax
   140003414:	call   QWORD PTR [rip+0x4c6e]        # 0x140008088
   14000341a:	mov    QWORD PTR [rsi],rax
   14000341d:	test   rax,rax
   140003420:	jne    0x14000343d
   140003422:	lea    edx,[rax+0x2]
   140003425:	mov    r8d,0x18a
   14000342b:	lea    ecx,[rax+0x66]
   14000342e:	call   0x140006e40
   140003433:	mov    edi,0xe
   140003438:	jmp    0x140003591
   14000343d:	and    QWORD PTR [rsp+0x20],rdi
   140003442:	lea    r9,[rbp+0x40]
   140003446:	mov    r8d,r15d
   140003449:	mov    rdx,rax
   14000344c:	mov    rcx,r14
   14000344f:	call   QWORD PTR [rip+0x4c03]        # 0x140008058
   140003455:	test   eax,eax
   140003457:	jne    0x140003479
   140003459:	call   QWORD PTR [rip+0x4bc9]        # 0x140008028
   14000345f:	mov    edx,0x2
   140003464:	mov    r8,rbx
   140003467:	mov    r9d,eax
   14000346a:	mov    edi,eax
   14000346c:	lea    ecx,[rdx+0x68]
   14000346f:	call   0x140006e40
   140003474:	jmp    0x140003591
   140003479:	mov    edx,DWORD PTR [rbp+0x40]
   14000347c:	lea    r8,[rbp+0x50]
   140003480:	mov    rcx,QWORD PTR [rsi]
   140003483:	mov    DWORD PTR [rbp+0x50],0x1000
   14000348a:	call   QWORD PTR [rip+0x4b70]        # 0x140008000
   140003490:	test   eax,eax
   140003492:	jne    0x140003570
   140003498:	mov    r12,QWORD PTR [rsi]
   14000349b:	lea    r15,[r13*2+0x0]
   1400034a3:	mov    rax,r15
   1400034a6:	sar    rax,0x20
   1400034aa:	test   eax,eax
   1400034ac:	je     0x1400034ce
   1400034ae:	and    QWORD PTR [rsi],rdi
   1400034b1:	mov    edx,0x2
   1400034b6:	mov    r8d,0x1a0
   1400034bc:	lea    ecx,[rdx+0x64]
   1400034bf:	call   0x140006e40
   1400034c4:	mov    edi,0x216
   1400034c9:	jmp    0x14000355a
   1400034ce:	call   QWORD PTR [rip+0x4bcc]        # 0x1400080a0
   1400034d4:	mov    r8d,r15d
   1400034d7:	mov    edx,0x8
   1400034dc:	mov    rcx,rax
   1400034df:	call   QWORD PTR [rip+0x4ba3]        # 0x140008088
   1400034e5:	mov    QWORD PTR [rsi],rax
   1400034e8:	test   rax,rax
   1400034eb:	jne    0x140003505
   1400034ed:	lea    edx,[rax+0x2]
   1400034f0:	mov    r8d,0x1a6
   1400034f6:	lea    ecx,[rax+0x66]
   1400034f9:	call   0x140006e40
   1400034fe:	mov    edi,0xe
   140003503:	jmp    0x14000355a
   140003505:	mov    r9d,DWORD PTR [rbp+0x40]
   140003509:	mov    r8,r12
   14000350c:	shr    r15d,1
   14000350f:	xor    edx,edx
   140003511:	mov    DWORD PTR [rsp+0x28],r15d
   140003516:	xor    ecx,ecx
   140003518:	mov    QWORD PTR [rsp+0x20],rax
   14000351d:	call   QWORD PTR [rip+0x4cbd]        # 0x1400081e0
   140003523:	mov    DWORD PTR [rbp+0x40],eax
   140003526:	cmp    eax,0x459
   14000352b:	jne    0x140003534
   14000352d:	mov    edi,0xd
   140003532:	jmp    0x140003544
   140003534:	test   eax,eax
   140003536:	jne    0x14000355a
   140003538:	call   QWORD PTR [rip+0x4aea]        # 0x140008028
   14000353e:	mov    edi,eax
   140003540:	test   eax,eax
   140003542:	je     0x14000355a
   140003544:	mov    edx,0x2
   140003549:	mov    r9d,edi
   14000354c:	mov    r8d,0x1b3
   140003552:	lea    ecx,[rdx+0x69]
   140003555:	call   0x140006e40
   14000355a:	call   QWORD PTR [rip+0x4b40]        # 0x1400080a0
   140003560:	mov    r8,r12
   140003563:	xor    edx,edx
   140003565:	mov    rcx,rax
   140003568:	call   QWORD PTR [rip+0x4b2a]        # 0x140008098
   14000356e:	jmp    0x140003591
   140003570:	shr    DWORD PTR [rbp+0x40],1
   140003573:	jmp    0x140003591
   140003575:	mov    r8,rbx
   140003578:	mov    edx,r12d
   14000357b:	mov    ecx,0x69
   140003580:	call   0x140006e40
   140003585:	mov    edi,0x216
   14000358a:	jmp    0x140003591
   14000358c:	mov    edi,0x57
   140003591:	lea    rax,[r14-0x1]
   140003595:	cmp    rax,0xfffffffffffffffd
   140003599:	ja     0x1400035a4
   14000359b:	mov    rcx,r14
   14000359e:	call   QWORD PTR [rip+0x4ad4]        # 0x140008078
   1400035a4:	test   edi,edi
   1400035a6:	jne    0x1400035c3
   1400035a8:	mov    rdx,QWORD PTR [rsi]
   1400035ab:	mov    eax,DWORD PTR [rbp+0x40]
   1400035ae:	lea    rcx,[rdx+rax*2]
   1400035b2:	mov    QWORD PTR [rsi+0x8],rcx
   1400035b6:	mov    QWORD PTR [rsi+0x18],rdx
   1400035ba:	mov    rax,QWORD PTR [rsi]
   1400035bd:	mov    QWORD PTR [rsi+0x28],rax
   1400035c1:	jmp    0x1400035cb
   1400035c3:	mov    rcx,rsi
   1400035c6:	call   0x1400032dc
   1400035cb:	mov    eax,edi
   1400035cd:	mov    rbx,QWORD PTR [rsp+0x88]
   1400035d5:	add    rsp,0x40
   1400035d9:	pop    r15
   1400035db:	pop    r14
   1400035dd:	pop    r13
   1400035df:	pop    r12
   1400035e1:	pop    rdi
   1400035e2:	pop    rsi
   1400035e3:	pop    rbp
   1400035e4:	ret    
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	int3   
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	rex push rbx
   1400035ee:	sub    rsp,0x20
   1400035f2:	xor    r10d,r10d
   1400035f5:	mov    r11,rdx
   1400035f8:	test   rdx,rdx
   1400035fb:	je     0x140003647
   1400035fd:	mov    DWORD PTR [rdx],r10d
   140003600:	cmp    QWORD PTR [rcx],r10
   140003603:	je     0x140003647
   140003605:	cmp    DWORD PTR [rcx+0x10],r10d
   140003609:	je     0x140003647
   14000360b:	mov    eax,DWORD PTR [rcx+0x10]
   14000360e:	mov    rdx,QWORD PTR [rcx+0x8]
   140003612:	inc    rax
   140003615:	lea    rax,[rax+rax*2]
   140003619:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000361d:	add    rcx,0x2
   140003621:	call   0x14000305c
   140003626:	mov    rbx,rax
   140003629:	test   rax,rax
   14000362c:	je     0x140003647
   14000362e:	mov    rcx,rax
   140003631:	call   0x1400030a8
   140003636:	test   rax,rax
   140003639:	je     0x140003647
   14000363b:	sub    rax,rbx
   14000363e:	mov    r10,rbx
   140003641:	sar    rax,1
   140003644:	mov    DWORD PTR [r11],eax
   140003647:	mov    rax,r10
   14000364a:	add    rsp,0x20
   14000364e:	pop    rbx
   14000364f:	ret    
   140003650:	int3   
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	mov    rax,rsp
   14000365b:	mov    QWORD PTR [rax+0x8],rbx
   14000365f:	mov    QWORD PTR [rax+0x10],rbp
   140003663:	mov    QWORD PTR [rax+0x18],rsi
   140003667:	mov    QWORD PTR [rax+0x20],rdi
   14000366b:	push   r12
   14000366d:	push   r14
   14000366f:	push   r15
   140003671:	sub    rsp,0x20
   140003675:	xor    ebx,ebx
   140003677:	mov    r14,r8
   14000367a:	mov    r15,rdx
   14000367d:	mov    rdi,rcx
   140003680:	test   rcx,rcx
   140003683:	je     0x140003804
   140003689:	test   rdx,rdx
   14000368c:	je     0x140003804
   140003692:	test   r8,r8
   140003695:	je     0x140003804
   14000369b:	mov    rcx,rdx
   14000369e:	mov    DWORD PTR [r8],ebx
   1400036a1:	call   QWORD PTR [rip+0x4b59]        # 0x140008200
   1400036a7:	mov    rsi,QWORD PTR [rdi+0x8]
   1400036ab:	mov    r12d,eax
   1400036ae:	cmp    QWORD PTR [rdi],rbx
   1400036b1:	je     0x140003804
   1400036b7:	cmp    DWORD PTR [rdi+0x10],ebx
   1400036ba:	je     0x140003804
   1400036c0:	test   eax,eax
   1400036c2:	je     0x140003804
   1400036c8:	mov    eax,DWORD PTR [rdi+0x10]
   1400036cb:	inc    rax
   1400036ce:	lea    rax,[rax+rax*2]
   1400036d2:	mov    rcx,QWORD PTR [rdi+rax*8]
   1400036d6:	test   rcx,rcx
   1400036d9:	je     0x140003804
   1400036df:	add    rcx,0x2
   1400036e3:	mov    rdx,rsi
   1400036e6:	call   0x14000305c
   1400036eb:	test   rax,rax
   1400036ee:	je     0x140003804
   1400036f4:	cmp    rax,rsi
   1400036f7:	jae    0x140003804
   1400036fd:	mov    rcx,rax
   140003700:	call   0x1400030a8
   140003705:	test   rax,rax
   140003708:	je     0x140003804
   14000370e:	cmp    rax,rsi
   140003711:	jae    0x140003804
   140003717:	mov    rdx,rsi
   14000371a:	mov    rcx,rax
   14000371d:	call   0x14000305c
   140003722:	mov    r10,rax
   140003725:	test   rax,rax
   140003728:	je     0x140003804
   14000372e:	cmp    rax,rsi
   140003731:	jae    0x140003804
   140003737:	mov    rcx,rax
   14000373a:	call   0x1400030a8
   14000373f:	mov    r11,rax
   140003742:	test   rax,rax
   140003745:	je     0x140003804
   14000374b:	cmp    rax,rsi
   14000374e:	jae    0x140003804
   140003754:	cmp    r10,rax
   140003757:	je     0x140003804
   14000375d:	mov    rcx,rax
   140003760:	call   0x14000305c
   140003765:	test   rax,rax
   140003768:	je     0x140003804
   14000376e:	cmp    rax,rsi
   140003771:	jae    0x140003804
   140003777:	cmp    WORD PTR [rax],0x3d
   14000377b:	jne    0x140003804
   140003781:	lea    rcx,[rax+0x2]
   140003785:	call   0x14000305c
   14000378a:	mov    rbp,rax
   14000378d:	test   rax,rax
   140003790:	je     0x140003804
   140003792:	cmp    rax,rsi
   140003795:	jae    0x140003804
   140003797:	cmp    WORD PTR [rax],0x22
   14000379b:	jne    0x140003804
   14000379d:	lea    rdi,[rax+0x2]
   1400037a1:	test   rdi,rdi
   1400037a4:	je     0x140003804
   1400037a6:	test   rsi,rsi
   1400037a9:	je     0x140003804
   1400037ab:	cmp    rdi,rsi
   1400037ae:	jae    0x140003804
   1400037b0:	cmp    WORD PTR [rdi],bx
   1400037b3:	je     0x140003804
   1400037b5:	cmp    rdi,rsi
   1400037b8:	jae    0x140003804
   1400037ba:	cmp    WORD PTR [rdi],0x22
   1400037be:	je     0x1400037c6
   1400037c0:	add    rdi,0x2
   1400037c4:	jmp    0x1400037b0
   1400037c6:	test   rdi,rdi
   1400037c9:	je     0x140003804
   1400037cb:	cmp    rdi,rsi
   1400037ce:	jae    0x140003804
   1400037d0:	lea    rax,[r10+r12*2]
   1400037d4:	mov    r8,r12
   1400037d7:	cmp    rax,r11
   1400037da:	jne    0x1400037ec
   1400037dc:	mov    rdx,r15
   1400037df:	mov    rcx,r10
   1400037e2:	call   QWORD PTR [rip+0x4ba8]        # 0x140008390
   1400037e8:	test   eax,eax
   1400037ea:	je     0x1400037f5
   1400037ec:	lea    rax,[rdi+0x2]
   1400037f0:	jmp    0x14000370e
   1400037f5:	sub    rdi,rbp
   1400037f8:	lea    rbx,[rbp+0x2]
   1400037fc:	sar    rdi,1
   1400037ff:	dec    edi
   140003801:	mov    DWORD PTR [r14],edi
   140003804:	mov    rbp,QWORD PTR [rsp+0x48]
   140003809:	mov    rax,rbx
   14000380c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003811:	mov    rsi,QWORD PTR [rsp+0x50]
   140003816:	mov    rdi,QWORD PTR [rsp+0x58]
   14000381b:	add    rsp,0x20
   14000381f:	pop    r15
   140003821:	pop    r14
   140003823:	pop    r12
   140003825:	ret    
   140003826:	int3   
   140003827:	int3   
   140003828:	int3   
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	mov    QWORD PTR [rsp+0x10],rbx
   140003831:	mov    QWORD PTR [rsp+0x18],rbp
   140003836:	mov    QWORD PTR [rsp+0x20],rsi
   14000383b:	push   rdi
   14000383c:	sub    rsp,0x20
   140003840:	mov    rdi,rcx
   140003843:	xor    ebx,ebx
   140003845:	mov    ecx,ebx
   140003847:	test   rdi,rdi
   14000384a:	je     0x1400038f9
   140003850:	cmp    QWORD PTR [rdi],rbx
   140003853:	je     0x1400038f9
   140003859:	cmp    DWORD PTR [rdi+0x10],ebx
   14000385c:	jbe    0x1400038f9
   140003862:	mov    eax,DWORD PTR [rdi+0x10]
   140003865:	inc    rax
   140003868:	lea    rsi,[rax+rax*2]
   14000386c:	mov    rax,QWORD PTR [rdi+rsi*8+0x8]
   140003871:	test   rax,rax
   140003874:	jne    0x14000388a
   140003876:	mov    rax,QWORD PTR [rdi+rsi*8]
   14000387a:	test   rax,rax
   14000387d:	je     0x140003883
   14000387f:	lea    rcx,[rax+0x2]
   140003883:	mov    ebp,0x1
   140003888:	jmp    0x140003890
   14000388a:	lea    rcx,[rax+0x2]
   14000388e:	mov    ebp,ebx
   140003890:	test   rcx,rcx
   140003893:	je     0x1400038f9
   140003895:	cmp    rcx,QWORD PTR [rdi+0x8]
   140003899:	jae    0x1400038f9
   14000389b:	mov    rdx,QWORD PTR [rdi+0x8]
   14000389f:	lea    r8,[rsp+0x30]
   1400038a4:	call   0x1400030f4
   1400038a9:	mov    rcx,rax
   1400038ac:	test   rax,rax
   1400038af:	je     0x1400038f9
   1400038b1:	mov    edx,DWORD PTR [rsp+0x30]
   1400038b5:	cmp    edx,0x1
   1400038b8:	jne    0x1400038db
   1400038ba:	inc    ebp
   1400038bc:	cmp    ebp,edx
   1400038be:	jne    0x1400038ee
   1400038c0:	mov    QWORD PTR [rdi+rsi*8-0x8],rax
   1400038c5:	mov    QWORD PTR [rdi+rsi*8],rax
   1400038c9:	add    rax,0x2
   1400038cd:	mov    QWORD PTR [rdi+rsi*8+0x8],rbx
   1400038d2:	mov    bl,dl
   1400038d4:	mov    QWORD PTR [rdi+rsi*8+0x10],rax
   1400038d9:	jmp    0x1400038f9
   1400038db:	lea    eax,[rdx-0x2]
   1400038de:	cmp    eax,0x1
   1400038e1:	jbe    0x1400038e9
   1400038e3:	test   edx,edx
   1400038e5:	je     0x1400038f9
   1400038e7:	jmp    0x1400038ee
   1400038e9:	sub    ebp,0x1
   1400038ec:	js     0x1400038f4
   1400038ee:	add    rcx,0x2
   1400038f2:	jmp    0x140003893
   1400038f4:	mov    QWORD PTR [rdi+rsi*8-0x10],rcx
   1400038f9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400038fe:	mov    al,bl
   140003900:	mov    rbx,QWORD PTR [rsp+0x38]
   140003905:	mov    rsi,QWORD PTR [rsp+0x48]
   14000390a:	add    rsp,0x20
   14000390e:	pop    rdi
   14000390f:	ret    
   140003910:	int3   
   140003911:	int3   
   140003912:	int3   
   140003913:	int3   
   140003914:	int3   
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	mov    QWORD PTR [rsp+0x8],rbx
   14000391d:	mov    QWORD PTR [rsp+0x10],rsi
   140003922:	mov    QWORD PTR [rsp+0x20],r9
   140003927:	push   rdi
   140003928:	sub    rsp,0x20
   14000392c:	xor    ebx,ebx
   14000392e:	mov    rsi,rdx
   140003931:	mov    rdi,rcx
   140003934:	test   rcx,rcx
   140003937:	je     0x14000397f
   140003939:	cmp    QWORD PTR [rcx],rbx
   14000393c:	je     0x14000397f
   14000393e:	test   rsi,rsi
   140003941:	je     0x14000396b
   140003943:	lea    rdx,[rsp+0x48]
   140003948:	mov    DWORD PTR [rsp+0x48],ebx
   14000394c:	mov    rcx,rdi
   14000394f:	call   0x1400035ec
   140003954:	test   rax,rax
   140003957:	je     0x140003971
   140003959:	mov    r8d,DWORD PTR [rsp+0x48]
   14000395e:	mov    rdx,rax
   140003961:	mov    rcx,rsi
   140003964:	call   0x140003278
   140003969:	jmp    0x14000396d
   14000396b:	mov    al,0x1
   14000396d:	test   al,al
   14000396f:	jne    0x14000397d
   140003971:	mov    rcx,rdi
   140003974:	call   0x14000382c
   140003979:	test   al,al
   14000397b:	jmp    0x14000393c
   14000397d:	mov    bl,0x1
   14000397f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003984:	mov    al,bl
   140003986:	mov    rbx,QWORD PTR [rsp+0x30]
   14000398b:	add    rsp,0x20
   14000398f:	pop    rdi
   140003990:	ret    
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	int3   
   140003995:	int3   
   140003996:	int3   
   140003997:	int3   
   140003998:	mov    QWORD PTR [rsp+0x10],rbx
   14000399d:	mov    QWORD PTR [rsp+0x18],rbp
   1400039a2:	mov    QWORD PTR [rsp+0x20],rsi
   1400039a7:	push   rdi
   1400039a8:	sub    rsp,0x20
   1400039ac:	xor    edi,edi
   1400039ae:	mov    rbx,rcx
   1400039b1:	test   rcx,rcx
   1400039b4:	je     0x140003a59
   1400039ba:	cmp    QWORD PTR [rcx],rdi
   1400039bd:	je     0x140003a59
   1400039c3:	cmp    DWORD PTR [rcx+0x10],0x7f
   1400039c7:	jae    0x140003a59
   1400039cd:	mov    eax,DWORD PTR [rcx+0x10]
   1400039d0:	mov    ebp,edi
   1400039d2:	inc    rax
   1400039d5:	cmp    DWORD PTR [rcx+0x10],edi
   1400039d8:	lea    rsi,[rax+rax*2]
   1400039dc:	mov    rcx,QWORD PTR [rcx+rsi*8]
   1400039e0:	je     0x1400039eb
   1400039e2:	test   rcx,rcx
   1400039e5:	je     0x140003a59
   1400039e7:	add    rcx,0x2
   1400039eb:	test   rcx,rcx
   1400039ee:	je     0x140003a59
   1400039f0:	cmp    rcx,QWORD PTR [rbx+0x8]
   1400039f4:	jae    0x140003a59
   1400039f6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400039fa:	lea    r8,[rsp+0x30]
   1400039ff:	call   0x1400030f4
   140003a04:	mov    rcx,rax
   140003a07:	test   rax,rax
   140003a0a:	je     0x140003a59
   140003a0c:	mov    edx,DWORD PTR [rsp+0x30]
   140003a10:	cmp    edx,0x1
   140003a13:	jne    0x140003a3b
   140003a15:	inc    ebp
   140003a17:	cmp    ebp,edx
   140003a19:	jne    0x140003a4e
   140003a1b:	mov    QWORD PTR [rbx+rsi*8+0x10],rax
   140003a20:	mov    QWORD PTR [rbx+rsi*8+0x18],rax
   140003a25:	add    rax,0x2
   140003a29:	mov    QWORD PTR [rbx+rsi*8+0x20],rdi
   140003a2e:	mov    dil,dl
   140003a31:	mov    QWORD PTR [rbx+rsi*8+0x28],rax
   140003a36:	inc    DWORD PTR [rbx+0x10]
   140003a39:	jmp    0x140003a59
   140003a3b:	lea    eax,[rdx-0x2]
   140003a3e:	cmp    eax,0x1
   140003a41:	jbe    0x140003a49
   140003a43:	test   edx,edx
   140003a45:	je     0x140003a59
   140003a47:	jmp    0x140003a4e
   140003a49:	sub    ebp,0x1
   140003a4c:	js     0x140003a54
   140003a4e:	add    rcx,0x2
   140003a52:	jmp    0x1400039ee
   140003a54:	mov    QWORD PTR [rbx+rsi*8+0x8],rcx
   140003a59:	mov    rbx,QWORD PTR [rsp+0x38]
   140003a5e:	mov    al,dil
   140003a61:	mov    rbp,QWORD PTR [rsp+0x40]
   140003a66:	mov    rsi,QWORD PTR [rsp+0x48]
   140003a6b:	add    rsp,0x20
   140003a6f:	pop    rdi
   140003a70:	ret    
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	mov    rax,rsp
   140003a7b:	mov    QWORD PTR [rax+0x8],rbx
   140003a7f:	mov    QWORD PTR [rax+0x10],rbp
   140003a83:	mov    QWORD PTR [rax+0x18],rsi
   140003a87:	mov    QWORD PTR [rax+0x20],rdi
   140003a8b:	push   r12
   140003a8d:	push   r14
   140003a8f:	push   r15
   140003a91:	sub    rsp,0x20
   140003a95:	xor    ebx,ebx
   140003a97:	mov    ebp,r9d
   140003a9a:	mov    r14,r8
   140003a9d:	mov    r12,rcx
   140003aa0:	mov    edi,ebx
   140003aa2:	test   r9d,r9d
   140003aa5:	je     0x140003ad6
   140003aa7:	mov    r15d,edx
   140003aaa:	mov    rsi,r8
   140003aad:	mov    rdx,QWORD PTR [rsi]
   140003ab0:	mov    r8,r15
   140003ab3:	mov    rcx,r12
   140003ab6:	call   QWORD PTR [rip+0x48d4]        # 0x140008390
   140003abc:	test   eax,eax
   140003abe:	je     0x140003acc
   140003ac0:	inc    edi
   140003ac2:	add    rsi,0x18
   140003ac6:	cmp    edi,ebp
   140003ac8:	jb     0x140003aad
   140003aca:	jmp    0x140003ad6
   140003acc:	mov    eax,edi
   140003ace:	lea    rcx,[rax+rax*2]
   140003ad2:	lea    rbx,[r14+rcx*8]
   140003ad6:	mov    rbp,QWORD PTR [rsp+0x48]
   140003adb:	mov    rax,rbx
   140003ade:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ae3:	mov    rsi,QWORD PTR [rsp+0x50]
   140003ae8:	mov    rdi,QWORD PTR [rsp+0x58]
   140003aed:	add    rsp,0x20
   140003af1:	pop    r15
   140003af3:	pop    r14
   140003af5:	pop    r12
   140003af7:	ret    
   140003af8:	int3   
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	rex push rbx
   140003b02:	sub    rsp,0x20
   140003b06:	lea    r8,[rsp+0x40]
   140003b0b:	call   0x140003658
   140003b10:	mov    rbx,rax
   140003b13:	test   rax,rax
   140003b16:	je     0x140003b4e
   140003b18:	mov    r8d,0xa
   140003b1e:	lea    rdx,[rsp+0x48]
   140003b23:	mov    rcx,rax
   140003b26:	call   QWORD PTR [rip+0x4854]        # 0x140008380
   140003b2c:	cmp    QWORD PTR [rsp+0x48],rbx
   140003b31:	jne    0x140003b51
   140003b33:	mov    r8d,0x10
   140003b39:	lea    rdx,[rsp+0x48]
   140003b3e:	mov    rcx,rbx
   140003b41:	call   QWORD PTR [rip+0x4839]        # 0x140008380
   140003b47:	cmp    QWORD PTR [rsp+0x48],rbx
   140003b4c:	jne    0x140003b51
   140003b4e:	or     eax,0xffffffff
   140003b51:	add    rsp,0x20
   140003b55:	pop    rbx
   140003b56:	ret    
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	mov    QWORD PTR [rsp+0x8],rbx
   140003b65:	mov    QWORD PTR [rsp+0x10],rdi
   140003b6a:	xor    r11d,r11d
   140003b6d:	mov    DWORD PTR [r9],r8d
   140003b70:	mov    edi,r11d
   140003b73:	mov    r10d,r11d
   140003b76:	lea    ebx,[r11+0x1]
   140003b7a:	test   rcx,rcx
   140003b7d:	je     0x140003bd1
   140003b7f:	test   edx,edx
   140003b81:	je     0x140003bd1
   140003b83:	cmp    WORD PTR [rcx],0x2d
   140003b87:	jne    0x140003b90
   140003b89:	or     ebx,0xffffffff
   140003b8c:	lea    r10d,[r11+0x1]
   140003b90:	cmp    r10d,edx
   140003b93:	jae    0x140003bc8
   140003b95:	mov    eax,r10d
   140003b98:	lea    r8,[rcx+rax*2]
   140003b9c:	movzx  eax,WORD PTR [r8]
   140003ba0:	sub    ax,0x30
   140003ba4:	cmp    ax,0x9
   140003ba8:	ja     0x140003bc3
   140003baa:	movzx  eax,WORD PTR [r8]
   140003bae:	lea    edi,[rdi+rdi*4]
   140003bb1:	inc    r10d
   140003bb4:	lea    edi,[rdi-0x18]
   140003bb7:	add    r8,0x2
   140003bbb:	lea    edi,[rax+rdi*2]
   140003bbe:	cmp    r10d,edx
   140003bc1:	jb     0x140003b9c
   140003bc3:	cmp    r10d,edx
   140003bc6:	jb     0x140003bd1
   140003bc8:	imul   ebx,edi
   140003bcb:	mov    r11b,0x1
   140003bce:	mov    DWORD PTR [r9],ebx
   140003bd1:	mov    rbx,QWORD PTR [rsp+0x8]
   140003bd6:	mov    al,r11b
   140003bd9:	mov    rdi,QWORD PTR [rsp+0x10]
   140003bde:	ret    
   140003bdf:	int3   
   140003be0:	int3   
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	xor    r8d,r8d
   140003beb:	lea    eax,[rcx-0x30]
   140003bee:	mov    BYTE PTR [rdx],r8b
   140003bf1:	cmp    ax,0x9
   140003bf5:	ja     0x140003bfc
   140003bf7:	sub    cl,0x30
   140003bfa:	jmp    0x140003c16
   140003bfc:	lea    eax,[rcx-0x41]
   140003bff:	cmp    ax,0x5
   140003c03:	ja     0x140003c0a
   140003c05:	sub    cl,0x37
   140003c08:	jmp    0x140003c16
   140003c0a:	lea    eax,[rcx-0x61]
   140003c0d:	cmp    ax,0x5
   140003c11:	ja     0x140003c1a
   140003c13:	sub    cl,0x57
   140003c16:	mov    BYTE PTR [rdx],cl
   140003c18:	jmp    0x140003c20
   140003c1a:	mov    r8d,0xd
   140003c20:	mov    eax,r8d
   140003c23:	ret    
   140003c24:	int3   
   140003c25:	int3   
   140003c26:	int3   
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140003c31:	mov    QWORD PTR [rsp+0x10],rsi
   140003c36:	push   rdi
   140003c37:	sub    rsp,0x20
   140003c3b:	xor    r9d,r9d
   140003c3e:	mov    r11,r8
   140003c41:	mov    esi,edx
   140003c43:	mov    rbx,rcx
   140003c46:	test   r8,r8
   140003c49:	jne    0x140003c54
   140003c4b:	lea    r9d,[r8+0xd]
   140003c4f:	jmp    0x140003e45
   140003c54:	xor    eax,eax
   140003c56:	mov    QWORD PTR [r8],rax
   140003c59:	mov    QWORD PTR [r8+0x8],rax
   140003c5d:	test   rcx,rcx
   140003c60:	je     0x140003e36
   140003c66:	lea    eax,[rdx-0x24]
   140003c69:	test   eax,0xfffffffd
   140003c6e:	jne    0x140003e36
   140003c74:	xor    r10d,r10d
   140003c77:	cmp    WORD PTR [rcx],0x7b
   140003c7b:	jne    0x140003c8a
   140003c7d:	cmp    edx,0x26
   140003c80:	jne    0x140003e36
   140003c86:	lea    r10d,[rdx-0x25]
   140003c8a:	xor    edi,edi
   140003c8c:	cmp    edi,0x8
   140003c8f:	jae    0x140003cc0
   140003c91:	lea    eax,[rdi+r10*1]
   140003c95:	movzx  ecx,WORD PTR [rbx+rax*2]
   140003c99:	lea    rdx,[rsp+0x40]
   140003c9e:	call   0x140003be8
   140003ca3:	mov    r9d,eax
   140003ca6:	test   eax,eax
   140003ca8:	jne    0x140003cba
   140003caa:	mov    edx,DWORD PTR [r11]
   140003cad:	movzx  ecx,BYTE PTR [rsp+0x40]
   140003cb2:	shl    edx,0x4
   140003cb5:	add    edx,ecx
   140003cb7:	mov    DWORD PTR [r11],edx
   140003cba:	inc    edi
   140003cbc:	test   eax,eax
   140003cbe:	je     0x140003c8c
   140003cc0:	test   r9d,r9d
   140003cc3:	jne    0x140003e3c
   140003cc9:	add    r10d,0x8
   140003ccd:	cmp    WORD PTR [rbx+r10*2],0x2d
   140003cd3:	jne    0x140003e36
   140003cd9:	inc    r10d
   140003cdc:	xor    edi,edi
   140003cde:	cmp    edi,0x4
   140003ce1:	jae    0x140003d19
   140003ce3:	lea    eax,[rdi+r10*1]
   140003ce7:	movzx  ecx,WORD PTR [rbx+rax*2]
   140003ceb:	lea    rdx,[rsp+0x40]
   140003cf0:	call   0x140003be8
   140003cf5:	mov    r9d,eax
   140003cf8:	test   eax,eax
   140003cfa:	jne    0x140003d12
   140003cfc:	movzx  ecx,WORD PTR [r11+0x4]
   140003d01:	movzx  eax,BYTE PTR [rsp+0x40]
   140003d06:	shl    cx,0x4
   140003d0a:	add    cx,ax
   140003d0d:	mov    WORD PTR [r11+0x4],cx
   140003d12:	inc    edi
   140003d14:	test   r9d,r9d
   140003d17:	je     0x140003cde
   140003d19:	test   r9d,r9d
   140003d1c:	jne    0x140003e3c
   140003d22:	add    r10d,0x4
   140003d26:	cmp    WORD PTR [rbx+r10*2],0x2d
   140003d2c:	jne    0x140003e36
   140003d32:	inc    r10d
   140003d35:	xor    edi,edi
   140003d37:	cmp    edi,0x4
   140003d3a:	jae    0x140003d72
   140003d3c:	lea    eax,[rdi+r10*1]
   140003d40:	movzx  ecx,WORD PTR [rbx+rax*2]
   140003d44:	lea    rdx,[rsp+0x40]
   140003d49:	call   0x140003be8
   140003d4e:	mov    r9d,eax
   140003d51:	test   eax,eax
   140003d53:	jne    0x140003d6b
   140003d55:	movzx  ecx,WORD PTR [r11+0x6]
   140003d5a:	movzx  eax,BYTE PTR [rsp+0x40]
   140003d5f:	shl    cx,0x4
   140003d63:	add    cx,ax
   140003d66:	mov    WORD PTR [r11+0x6],cx
   140003d6b:	inc    edi
   140003d6d:	test   r9d,r9d
   140003d70:	je     0x140003d37
   140003d72:	test   r9d,r9d
   140003d75:	jne    0x140003e3c
   140003d7b:	add    r10d,0x4
   140003d7f:	cmp    WORD PTR [rbx+r10*2],0x2d
   140003d85:	jne    0x140003e36
   140003d8b:	inc    r10d
   140003d8e:	xor    edi,edi
   140003d90:	cmp    edi,0x4
   140003d93:	jae    0x140003dcb
   140003d95:	lea    eax,[rdi+r10*1]
   140003d99:	movzx  ecx,WORD PTR [rbx+rax*2]
   140003d9d:	lea    rdx,[rsp+0x40]
   140003da2:	call   0x140003be8
   140003da7:	mov    r9d,eax
   140003daa:	test   eax,eax
   140003dac:	jne    0x140003dc4
   140003dae:	mov    ecx,edi
   140003db0:	shr    rcx,1
   140003db3:	mov    al,BYTE PTR [rcx+r11*1+0x8]
   140003db8:	shl    al,0x4
   140003dbb:	add    al,BYTE PTR [rsp+0x40]
   140003dbf:	mov    BYTE PTR [rcx+r11*1+0x8],al
   140003dc4:	inc    edi
   140003dc6:	test   r9d,r9d
   140003dc9:	je     0x140003d90
   140003dcb:	test   r9d,r9d
   140003dce:	jne    0x140003e3c
   140003dd0:	add    r10d,0x4
   140003dd4:	cmp    WORD PTR [rbx+r10*2],0x2d
   140003dda:	jne    0x140003e36
   140003ddc:	inc    r10d
   140003ddf:	xor    edi,edi
   140003de1:	cmp    edi,0xc
   140003de4:	jae    0x140003e20
   140003de6:	lea    eax,[rdi+r10*1]
   140003dea:	movzx  ecx,WORD PTR [rbx+rax*2]
   140003dee:	lea    rdx,[rsp+0x40]
   140003df3:	call   0x140003be8
   140003df8:	mov    r9d,eax
   140003dfb:	test   eax,eax
   140003dfd:	jne    0x140003e19
   140003dff:	mov    eax,edi
   140003e01:	shr    eax,1
   140003e03:	add    eax,0x2
   140003e06:	mov    ecx,eax
   140003e08:	mov    al,BYTE PTR [rax+r11*1+0x8]
   140003e0d:	shl    al,0x4
   140003e10:	add    al,BYTE PTR [rsp+0x40]
   140003e14:	mov    BYTE PTR [rcx+r11*1+0x8],al
   140003e19:	inc    edi
   140003e1b:	test   r9d,r9d
   140003e1e:	je     0x140003de1
   140003e20:	test   r9d,r9d
   140003e23:	jne    0x140003e3c
   140003e25:	add    r10d,0xc
   140003e29:	cmp    r10d,esi
   140003e2c:	jae    0x140003e45
   140003e2e:	cmp    WORD PTR [rbx+r10*2],0x7d
   140003e34:	je     0x140003e45
   140003e36:	mov    r9d,0xd
   140003e3c:	xor    eax,eax
   140003e3e:	mov    QWORD PTR [r11],rax
   140003e41:	mov    QWORD PTR [r11+0x8],rax
   140003e45:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e4a:	mov    eax,r9d
   140003e4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e52:	add    rsp,0x20
   140003e56:	pop    rdi
   140003e57:	ret    
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	mov    QWORD PTR [rsp+0x8],rbx
   140003e65:	mov    QWORD PTR [rsp+0x10],rbp
   140003e6a:	mov    QWORD PTR [rsp+0x18],rsi
   140003e6f:	push   rdi
   140003e70:	push   r14
   140003e72:	push   r15
   140003e74:	sub    rsp,0x20
   140003e78:	xor    ebx,ebx
   140003e7a:	mov    ebp,edx
   140003e7c:	mov    r14,rcx
   140003e7f:	test   rcx,rcx
   140003e82:	jne    0x140003e8c
   140003e84:	lea    ebx,[rcx+0x57]
   140003e87:	jmp    0x140003fcf
   140003e8c:	mov    r8,QWORD PTR [rip+0x979d]        # 0x14000d630
   140003e93:	test   r8,r8
   140003e96:	jne    0x140003eee
   140003e98:	mov    DWORD PTR [rip+0x9796],0x10000        # 0x14000d638
   140003ea2:	mov    DWORD PTR [rip+0x97a0],ebx        # 0x14000d648
   140003ea8:	call   QWORD PTR [rip+0x41f2]        # 0x1400080a0
   140003eae:	mov    edx,0x8
   140003eb3:	mov    r8d,0x20000
   140003eb9:	mov    rcx,rax
   140003ebc:	call   QWORD PTR [rip+0x41c6]        # 0x140008088
   140003ec2:	mov    QWORD PTR [rip+0x9767],rax        # 0x14000d630
   140003ec9:	mov    r8,rax
   140003ecc:	test   rax,rax
   140003ecf:	jne    0x140003eee
   140003ed1:	mov    r8d,0x4f1
   140003ed7:	mov    ecx,0x66
   140003edc:	lea    edx,[rcx-0x64]
   140003edf:	call   0x140006e40
   140003ee4:	mov    ebx,0xe
   140003ee9:	jmp    0x140003fcf
   140003eee:	mov    edi,DWORD PTR [rip+0x9754]        # 0x14000d648
   140003ef4:	lea    edx,[rdi+0x1]
   140003ef7:	add    edx,ebp
   140003ef9:	cmp    edx,edi
   140003efb:	ja     0x140003f1a
   140003efd:	mov    r8d,0x4fa
   140003f03:	mov    edx,0x2
   140003f08:	lea    ecx,[rdx+0x64]
   140003f0b:	call   0x140006e40
   140003f10:	mov    ebx,0x216
   140003f15:	jmp    0x140003fcf
   140003f1a:	mov    ecx,DWORD PTR [rip+0x9718]        # 0x14000d638
   140003f20:	cmp    edx,ecx
   140003f22:	jbe    0x140003fb3
   140003f28:	mov    edi,ecx
   140003f2a:	cmp    edi,edx
   140003f2c:	ja     0x140003f42
   140003f2e:	mov    edi,edi
   140003f30:	add    rdi,rdi
   140003f33:	mov    rax,rdi
   140003f36:	sar    rax,0x20
   140003f3a:	test   eax,eax
   140003f3c:	jne    0x140003f9c
   140003f3e:	cmp    edi,ecx
   140003f40:	jae    0x140003f2a
   140003f42:	cmp    edi,ecx
   140003f44:	jbe    0x140003fea
   140003f4a:	mov    esi,edi
   140003f4c:	add    rsi,rsi
   140003f4f:	mov    rax,rsi
   140003f52:	sar    rax,0x20
   140003f56:	test   eax,eax
   140003f58:	jne    0x140003fea
   140003f5e:	mov    r15,r8
   140003f61:	call   QWORD PTR [rip+0x4139]        # 0x1400080a0
   140003f67:	mov    r9,rsi
   140003f6a:	mov    r8,r15
   140003f6d:	mov    rcx,rax
   140003f70:	mov    edx,0x8
   140003f75:	call   QWORD PTR [rip+0x412d]        # 0x1400080a8
   140003f7b:	mov    QWORD PTR [rip+0x96ae],rax        # 0x14000d630
   140003f82:	mov    r8,rax
   140003f85:	test   rax,rax
   140003f88:	jne    0x140003fa7
   140003f8a:	mov    QWORD PTR [rip+0x969f],r15        # 0x14000d630
   140003f91:	mov    r8d,0x519
   140003f97:	jmp    0x140003ed7
   140003f9c:	mov    r8d,0x505
   140003fa2:	jmp    0x140003f03
   140003fa7:	mov    DWORD PTR [rip+0x968b],edi        # 0x14000d638
   140003fad:	mov    edi,DWORD PTR [rip+0x9695]        # 0x14000d648
   140003fb3:	mov    ecx,edi
   140003fb5:	lea    edx,[rbp+0x1]
   140003fb8:	lea    rcx,[r8+rcx*2]
   140003fbc:	mov    r8,r14
   140003fbf:	call   0x140001008
   140003fc4:	lea    ecx,[rbp+0x1]
   140003fc7:	add    ecx,edi
   140003fc9:	mov    DWORD PTR [rip+0x9679],ecx        # 0x14000d648
   140003fcf:	mov    rbp,QWORD PTR [rsp+0x48]
   140003fd4:	mov    eax,ebx
   140003fd6:	mov    rbx,QWORD PTR [rsp+0x40]
   140003fdb:	mov    rsi,QWORD PTR [rsp+0x50]
   140003fe0:	add    rsp,0x20
   140003fe4:	pop    r15
   140003fe6:	pop    r14
   140003fe8:	pop    rdi
   140003fe9:	ret    
   140003fea:	mov    r8d,0x510
   140003ff0:	jmp    0x140003f03
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140004001:	mov    QWORD PTR [rsp+0x10],rbp
   140004006:	mov    QWORD PTR [rsp+0x18],rsi
   14000400b:	push   rdi
   14000400c:	push   r12
   14000400e:	push   r13
   140004010:	push   r14
   140004012:	push   r15
   140004014:	sub    rsp,0x20
   140004018:	mov    rbx,QWORD PTR [rip+0x9621]        # 0x14000d640
   14000401f:	xor    r13d,r13d
   140004022:	mov    r12d,r9d
   140004025:	mov    r15,r8
   140004028:	mov    edi,edx
   14000402a:	mov    rsi,rcx
   14000402d:	mov    r14d,r13d
   140004030:	test   rcx,rcx
   140004033:	jne    0x14000403d
   140004035:	mov    rbx,r13
   140004038:	jmp    0x140004250
   14000403d:	test   rbx,rbx
   140004040:	je     0x14000417a
   140004046:	mov    eax,DWORD PTR [rbx+0x10]
   140004049:	cmp    eax,DWORD PTR [rip+0x95e9]        # 0x14000d638
   14000404f:	jae    0x1400040df
   140004055:	mov    ecx,eax
   140004057:	mov    rax,QWORD PTR [rip+0x95d2]        # 0x14000d630
   14000405e:	lea    r13,[rax+rcx*2]
   140004062:	mov    rcx,r13
   140004065:	call   QWORD PTR [rip+0x4195]        # 0x140008200
   14000406b:	cmp    eax,edi
   14000406d:	mov    ebp,eax
   14000406f:	sete   dl
   140004072:	test   dl,dl
   140004074:	je     0x14000408e
   140004076:	mov    r8,rdi
   140004079:	mov    rdx,r13
   14000407c:	mov    rcx,rsi
   14000407f:	call   QWORD PTR [rip+0x430b]        # 0x140008390
   140004085:	test   eax,eax
   140004087:	sete   dl
   14000408a:	test   dl,dl
   14000408c:	jne    0x1400040e7
   14000408e:	cmp    ebp,0xa
   140004091:	jbe    0x1400040ba
   140004093:	cmp    edi,ebp
   140004095:	jae    0x1400040ba
   140004097:	lea    rcx,[rdi+0xa]
   14000409b:	mov    r8,rdi
   14000409e:	cmp    rcx,rbp
   1400040a1:	jne    0x1400040ba
   1400040a3:	lea    rdx,[r13+0x12]
   1400040a7:	mov    rcx,rsi
   1400040aa:	call   QWORD PTR [rip+0x42e0]        # 0x140008390
   1400040b0:	xor    r13d,r13d
   1400040b3:	test   eax,eax
   1400040b5:	sete   dl
   1400040b8:	jmp    0x1400040db
   1400040ba:	cmp    edi,0xa
   1400040bd:	jbe    0x1400040d8
   1400040bf:	cmp    ebp,edi
   1400040c1:	jae    0x1400040d8
   1400040c3:	lea    rcx,[rbp+0xa]
   1400040c7:	mov    r8,rbp
   1400040ca:	cmp    rcx,rdi
   1400040cd:	jne    0x1400040d8
   1400040cf:	lea    rcx,[rsi+0x12]
   1400040d3:	mov    rdx,r13
   1400040d6:	jmp    0x1400040aa
   1400040d8:	xor    r13d,r13d
   1400040db:	test   dl,dl
   1400040dd:	jne    0x1400040ea
   1400040df:	mov    rbx,QWORD PTR [rbx]
   1400040e2:	jmp    0x14000403d
   1400040e7:	xor    r13d,r13d
   1400040ea:	test   r15,r15
   1400040ed:	je     0x140004167
   1400040ef:	mov    eax,DWORD PTR [rbx+0x14]
   1400040f2:	cmp    eax,DWORD PTR [rip+0x9540]        # 0x14000d638
   1400040f8:	jae    0x140004167
   1400040fa:	mov    ecx,eax
   1400040fc:	mov    rax,QWORD PTR [rip+0x952d]        # 0x14000d630
   140004103:	lea    rbp,[rax+rcx*2]
   140004107:	mov    rcx,rbp
   14000410a:	call   QWORD PTR [rip+0x40f0]        # 0x140008200
   140004110:	cmp    eax,r12d
   140004113:	jne    0x140004145
   140004115:	mov    r8,r12
   140004118:	mov    rdx,r15
   14000411b:	mov    rcx,rbp
   14000411e:	call   QWORD PTR [rip+0x426c]        # 0x140008390
   140004124:	test   eax,eax
   140004126:	jne    0x140004145
   140004128:	cmp    DWORD PTR [rbx+0x1c],r13d
   14000412c:	je     0x140004171
   14000412e:	cmp    DWORD PTR [rsp+0x70],0x1
   140004133:	jne    0x1400041f8
   140004139:	mov    DWORD PTR [rbx+0x1c],0x1
   140004140:	jmp    0x1400041f8
   140004145:	movzx  ebx,WORD PTR [rsi+rdi*2]
   140004149:	mov    edx,0x1
   14000414e:	mov    r8,rsi
   140004151:	mov    WORD PTR [rsi+rdi*2],r13w
   140004156:	lea    ecx,[rdx+0x71]
   140004159:	call   0x140006e40
   14000415e:	mov    WORD PTR [rsi+rdi*2],bx
   140004162:	jmp    0x140004035
   140004167:	cmp    DWORD PTR [rbx+0x1c],r13d
   14000416b:	jne    0x1400041f8
   140004171:	mov    eax,DWORD PTR [rsp+0x70]
   140004175:	mov    DWORD PTR [rbx+0x1c],eax
   140004178:	jmp    0x1400041f8
   14000417a:	call   QWORD PTR [rip+0x3f20]        # 0x1400080a0
   140004180:	mov    edx,0x8
   140004185:	mov    rcx,rax
   140004188:	lea    r8d,[rdx+0x18]
   14000418c:	call   QWORD PTR [rip+0x3ef6]        # 0x140008088
   140004192:	mov    rbx,rax
   140004195:	test   rax,rax
   140004198:	jne    0x1400041b0
   14000419a:	lea    edx,[rax+0x2]
   14000419d:	mov    r8d,0x578
   1400041a3:	lea    ecx,[rax+0x66]
   1400041a6:	call   0x140006e40
   1400041ab:	jmp    0x140004250
   1400041b0:	mov    eax,DWORD PTR [rip+0x9492]        # 0x14000d648
   1400041b6:	mov    edx,edi
   1400041b8:	mov    rcx,rsi
   1400041bb:	mov    DWORD PTR [rbx+0x10],eax
   1400041be:	call   0x140003e60
   1400041c3:	mov    r14d,eax
   1400041c6:	test   eax,eax
   1400041c8:	jne    0x140004227
   1400041ca:	mov    ecx,DWORD PTR [rip+0x8e9c]        # 0x14000d06c
   1400041d0:	or     DWORD PTR [rbx+0x14],0xffffffff
   1400041d4:	mov    DWORD PTR [rbx+0x18],ecx
   1400041d7:	add    ecx,0x2
   1400041da:	mov    DWORD PTR [rip+0x8e8c],ecx        # 0x14000d06c
   1400041e0:	mov    ecx,DWORD PTR [rsp+0x70]
   1400041e4:	mov    DWORD PTR [rbx+0x1c],ecx
   1400041e7:	mov    rcx,QWORD PTR [rip+0x9452]        # 0x14000d640
   1400041ee:	mov    QWORD PTR [rbx],rcx
   1400041f1:	mov    QWORD PTR [rip+0x9448],rbx        # 0x14000d640
   1400041f8:	mov    eax,DWORD PTR [rip+0x943a]        # 0x14000d638
   1400041fe:	cmp    DWORD PTR [rbx+0x14],eax
   140004201:	jb     0x14000423e
   140004203:	test   r15,r15
   140004206:	je     0x14000423e
   140004208:	mov    eax,DWORD PTR [rip+0x943a]        # 0x14000d648
   14000420e:	mov    edx,r12d
   140004211:	mov    rcx,r15
   140004214:	mov    DWORD PTR [rbx+0x14],eax
   140004217:	call   0x140003e60
   14000421c:	mov    r14d,eax
   14000421f:	test   eax,eax
   140004221:	je     0x14000423e
   140004223:	or     DWORD PTR [rbx+0x14],0xffffffff
   140004227:	call   QWORD PTR [rip+0x3e73]        # 0x1400080a0
   14000422d:	mov    r8,rbx
   140004230:	xor    edx,edx
   140004232:	mov    rcx,rax
   140004235:	call   QWORD PTR [rip+0x3e5d]        # 0x140008098
   14000423b:	mov    rbx,r13
   14000423e:	test   rbx,rbx
   140004241:	jne    0x140004250
   140004243:	test   r14d,r14d
   140004246:	jne    0x140004250
   140004248:	xor    ecx,ecx
   14000424a:	call   QWORD PTR [rip+0x3de8]        # 0x140008038
   140004250:	mov    rbp,QWORD PTR [rsp+0x58]
   140004255:	mov    rax,rbx
   140004258:	mov    rbx,QWORD PTR [rsp+0x50]
   14000425d:	mov    rsi,QWORD PTR [rsp+0x60]
   140004262:	add    rsp,0x20
   140004266:	pop    r15
   140004268:	pop    r14
   14000426a:	pop    r13
   14000426c:	pop    r12
   14000426e:	pop    rdi
   14000426f:	ret    
   140004270:	int3   
   140004271:	int3   
   140004272:	int3   
   140004273:	int3   
   140004274:	int3   
   140004275:	int3   
   140004276:	int3   
   140004277:	int3   
   140004278:	mov    QWORD PTR [rsp+0x8],rbx
   14000427d:	mov    QWORD PTR [rsp+0x10],rbp
   140004282:	mov    QWORD PTR [rsp+0x18],rsi
   140004287:	push   rdi
   140004288:	push   r14
   14000428a:	push   r15
   14000428c:	sub    rsp,0x20
   140004290:	mov    r14d,edx
   140004293:	mov    r15d,r9d
   140004296:	mov    rdi,r8
   140004299:	mov    rsi,rcx
   14000429c:	test   rcx,rcx
   14000429f:	je     0x14000433e
   1400042a5:	mov    rbx,QWORD PTR [rip+0x9394]        # 0x14000d640
   1400042ac:	test   rbx,rbx
   1400042af:	je     0x14000433e
   1400042b5:	mov    eax,DWORD PTR [rbx+0x10]
   1400042b8:	cmp    eax,DWORD PTR [rip+0x937a]        # 0x14000d638
   1400042be:	jae    0x1400042ee
   1400042c0:	mov    ecx,eax
   1400042c2:	mov    rax,QWORD PTR [rip+0x9367]        # 0x14000d630
   1400042c9:	lea    rbp,[rax+rcx*2]
   1400042cd:	mov    rcx,rbp
   1400042d0:	call   QWORD PTR [rip+0x3f2a]        # 0x140008200
   1400042d6:	cmp    eax,r14d
   1400042d9:	jne    0x1400042ee
   1400042db:	mov    r8,r14
   1400042de:	mov    rdx,rbp
   1400042e1:	mov    rcx,rsi
   1400042e4:	call   QWORD PTR [rip+0x40a6]        # 0x140008390
   1400042ea:	test   eax,eax
   1400042ec:	je     0x1400042f3
   1400042ee:	mov    rbx,QWORD PTR [rbx]
   1400042f1:	jmp    0x1400042ac
   1400042f3:	test   rdi,rdi
   1400042f6:	je     0x14000431d
   1400042f8:	mov    eax,DWORD PTR [rip+0x933a]        # 0x14000d638
   1400042fe:	cmp    DWORD PTR [rbx+0x14],eax
   140004301:	jae    0x14000431d
   140004303:	mov    edx,0x1
   140004308:	mov    r8,rbp
   14000430b:	lea    ecx,[rdx+0x71]
   14000430e:	call   0x140006e40
   140004313:	mov    eax,0xd
   140004318:	jmp    0x1400043e1
   14000431d:	mov    eax,DWORD PTR [rsp+0x60]
   140004321:	test   eax,eax
   140004323:	je     0x1400043c4
   140004329:	test   DWORD PTR [rbx+0x1c],0xfffffffd
   140004330:	jne    0x1400043c4
   140004336:	mov    DWORD PTR [rbx+0x1c],eax
   140004339:	jmp    0x1400043c4
   14000433e:	call   QWORD PTR [rip+0x3d5c]        # 0x1400080a0
   140004344:	mov    edx,0x8
   140004349:	mov    rcx,rax
   14000434c:	lea    r8d,[rdx+0x18]
   140004350:	call   QWORD PTR [rip+0x3d32]        # 0x140008088
   140004356:	mov    rbx,rax
   140004359:	test   rax,rax
   14000435c:	jne    0x140004374
   14000435e:	lea    edx,[rax+0x2]
   140004361:	mov    r8d,0x607
   140004367:	lea    ecx,[rax+0x66]
   14000436a:	call   0x140006e40
   14000436f:	lea    eax,[rbx+0xe]
   140004372:	jmp    0x1400043e1
   140004374:	mov    rax,QWORD PTR [rip+0x92c5]        # 0x14000d640
   14000437b:	mov    QWORD PTR [rbx],rax
   14000437e:	or     eax,0xffffffff
   140004381:	mov    DWORD PTR [rbx+0x10],eax
   140004384:	mov    DWORD PTR [rbx+0x14],eax
   140004387:	mov    eax,DWORD PTR [rip+0x8cdf]        # 0x14000d06c
   14000438d:	mov    DWORD PTR [rbx+0x18],eax
   140004390:	add    eax,0x2
   140004393:	mov    DWORD PTR [rip+0x8cd3],eax        # 0x14000d06c
   140004399:	mov    eax,DWORD PTR [rsp+0x60]
   14000439d:	mov    DWORD PTR [rbx+0x1c],eax
   1400043a0:	mov    QWORD PTR [rip+0x9299],rbx        # 0x14000d640
   1400043a7:	test   rsi,rsi
   1400043aa:	je     0x1400043c4
   1400043ac:	mov    eax,DWORD PTR [rip+0x9296]        # 0x14000d648
   1400043b2:	mov    edx,r14d
   1400043b5:	mov    rcx,rsi
   1400043b8:	mov    DWORD PTR [rbx+0x10],eax
   1400043bb:	call   0x140003e60
   1400043c0:	test   eax,eax
   1400043c2:	jne    0x1400043e1
   1400043c4:	test   rdi,rdi
   1400043c7:	je     0x1400043eb
   1400043c9:	mov    eax,DWORD PTR [rip+0x9279]        # 0x14000d648
   1400043cf:	mov    edx,r15d
   1400043d2:	mov    rcx,rdi
   1400043d5:	mov    DWORD PTR [rbx+0x14],eax
   1400043d8:	call   0x140003e60
   1400043dd:	test   eax,eax
   1400043df:	je     0x1400043eb
   1400043e1:	xor    ebx,ebx
   1400043e3:	mov    ecx,eax
   1400043e5:	call   QWORD PTR [rip+0x3c4d]        # 0x140008038
   1400043eb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400043f0:	mov    rax,rbx
   1400043f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400043fd:	add    rsp,0x20
   140004401:	pop    r15
   140004403:	pop    r14
   140004405:	pop    rdi
   140004406:	ret    
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    rax,rsp
   140004413:	mov    QWORD PTR [rax+0x8],rbx
   140004417:	mov    QWORD PTR [rax+0x10],rbp
   14000441b:	mov    QWORD PTR [rax+0x18],rsi
   14000441f:	mov    QWORD PTR [rax+0x20],rdi
   140004423:	push   r14
   140004425:	sub    rsp,0x20
   140004429:	mov    edi,r9d
   14000442c:	mov    esi,r8d
   14000442f:	mov    ebp,edx
   140004431:	mov    r14,rcx
   140004434:	cmp    r9d,0xffffffff
   140004438:	jne    0x140004441
   14000443a:	mov    eax,0xd
   14000443f:	jmp    0x140004498
   140004441:	call   QWORD PTR [rip+0x3c59]        # 0x1400080a0
   140004447:	mov    edx,0x8
   14000444c:	mov    rcx,rax
   14000444f:	lea    r8d,[rdx+0x18]
   140004453:	call   QWORD PTR [rip+0x3c2f]        # 0x140008088
   140004459:	mov    rbx,rax
   14000445c:	test   rax,rax
   14000445f:	jne    0x140004466
   140004461:	lea    eax,[rbx+0xe]
   140004464:	jmp    0x140004498
   140004466:	mov    rax,QWORD PTR [rip+0x91d3]        # 0x14000d640
   14000446d:	mov    edx,ebp
   14000446f:	or     DWORD PTR [rbx+0x10],0xffffffff
   140004473:	mov    rcx,r14
   140004476:	mov    QWORD PTR [rbx],rax
   140004479:	mov    eax,DWORD PTR [rip+0x91c9]        # 0x14000d648
   14000447f:	mov    DWORD PTR [rbx+0x14],eax
   140004482:	mov    QWORD PTR [rip+0x91b7],rbx        # 0x14000d640
   140004489:	mov    DWORD PTR [rbx+0x18],edi
   14000448c:	mov    DWORD PTR [rbx+0x1c],esi
   14000448f:	call   0x140003e60
   140004494:	test   eax,eax
   140004496:	je     0x1400044a4
   140004498:	mov    ecx,eax
   14000449a:	call   QWORD PTR [rip+0x3b98]        # 0x140008038
   1400044a0:	xor    eax,eax
   1400044a2:	jmp    0x1400044a7
   1400044a4:	mov    rax,rbx
   1400044a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400044b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400044b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400044bb:	add    rsp,0x20
   1400044bf:	pop    r14
   1400044c1:	ret    
   1400044c2:	int3   
   1400044c3:	int3   
   1400044c4:	int3   
   1400044c5:	int3   
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400044cd:	push   rdi
   1400044ce:	sub    rsp,0x30
   1400044d2:	movsd  xmm0,QWORD PTR [rip+0x66f6]        # 0x14000abd0
   1400044da:	mov    edi,edx
   1400044dc:	movsd  xmm1,QWORD PTR [rip+0x916c]        # 0x14000d650
   1400044e4:	mov    rbx,rcx
   1400044e7:	comisd xmm0,xmm1
   1400044eb:	jbe    0x1400044fc
   1400044ed:	mov    eax,DWORD PTR [rsp+0x60]
   1400044f1:	mov    DWORD PTR [rsp+0x20],eax
   1400044f5:	call   0x140003ffc
   1400044fa:	jmp    0x140004572
   1400044fc:	comisd xmm1,QWORD PTR [rip+0x66dc]        # 0x14000abe0
   140004504:	jb     0x140004517
   140004506:	mov    r9d,DWORD PTR [rsp+0x68]
   14000450b:	mov    r8d,DWORD PTR [rsp+0x60]
   140004510:	call   0x140004410
   140004515:	jmp    0x140004572
   140004517:	test   rcx,rcx
   14000451a:	je     0x140004521
   14000451c:	test   r8,r8
   14000451f:	jne    0x140004565
   140004521:	cmp    edx,0xa
   140004524:	jbe    0x14000455b
   140004526:	lea    ecx,[rdx-0x1]
   140004529:	mov    eax,0x29
   14000452e:	cmp    ax,WORD PTR [rbx+rcx*2]
   140004532:	jne    0x14000455b
   140004534:	lea    r8d,[rax-0x20]
   140004538:	mov    rcx,rbx
   14000453b:	lea    rdx,[rip+0x5dc6]        # 0x14000a308
   140004542:	call   QWORD PTR [rip+0x3e48]        # 0x140008390
   140004548:	test   eax,eax
   14000454a:	jne    0x14000455b
   14000454c:	xor    r9d,r9d
   14000454f:	lea    edx,[rdi-0xa]
   140004552:	xor    r8d,r8d
   140004555:	lea    rcx,[rbx+0x12]
   140004559:	jmp    0x140004565
   14000455b:	xor    edx,edx
   14000455d:	mov    r9d,edi
   140004560:	xor    ecx,ecx
   140004562:	mov    r8,rbx
   140004565:	mov    eax,DWORD PTR [rsp+0x60]
   140004569:	mov    DWORD PTR [rsp+0x20],eax
   14000456d:	call   0x140004278
   140004572:	mov    rbx,QWORD PTR [rsp+0x40]
   140004577:	add    rsp,0x30
   14000457b:	pop    rdi
   14000457c:	ret    
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	int3   
   140004581:	int3   
   140004582:	int3   
   140004583:	int3   
   140004584:	mov    QWORD PTR [rsp+0x8],rbx
   140004589:	mov    QWORD PTR [rsp+0x20],rsi
   14000458e:	push   rdi
   14000458f:	sub    rsp,0x30
   140004593:	lea    r8,[rsp+0x50]
   140004598:	mov    rdi,rcx
   14000459b:	lea    rdx,[rip+0x463a]        # 0x140008bdc
   1400045a2:	xor    ebx,ebx
   1400045a4:	call   0x140003658
   1400045a9:	mov    rsi,rax
   1400045ac:	test   rax,rax
   1400045af:	jne    0x1400045d3
   1400045b1:	lea    r8,[rip+0x4624]        # 0x140008bdc
   1400045b8:	mov    edx,0x2
   1400045bd:	lea    r9,[rip+0x44a4]        # 0x140008a68
   1400045c4:	lea    ecx,[rdx+0x6a]
   1400045c7:	call   0x140006e40
   1400045cc:	mov    ebx,0xd
   1400045d1:	jmp    0x14000461f
   1400045d3:	lea    r8,[rsp+0x48]
   1400045d8:	mov    rcx,rdi
   1400045db:	lea    rdx,[rip+0x46d6]        # 0x140008cb8
   1400045e2:	call   0x140003658
   1400045e7:	test   rax,rax
   1400045ea:	jne    0x1400045f5
   1400045ec:	lea    r8,[rip+0x46c5]        # 0x140008cb8
   1400045f3:	jmp    0x1400045b8
   1400045f5:	or     DWORD PTR [rsp+0x28],0xffffffff
   1400045fa:	mov    r8,rax
   1400045fd:	mov    r9d,DWORD PTR [rsp+0x48]
   140004602:	mov    rcx,rsi
   140004605:	mov    edx,DWORD PTR [rsp+0x50]
   140004609:	mov    DWORD PTR [rsp+0x20],ebx
   14000460d:	call   0x1400044c8
   140004612:	test   rax,rax
   140004615:	jne    0x14000461f
   140004617:	call   QWORD PTR [rip+0x3a0b]        # 0x140008028
   14000461d:	mov    ebx,eax
   14000461f:	mov    rsi,QWORD PTR [rsp+0x58]
   140004624:	mov    eax,ebx
   140004626:	mov    rbx,QWORD PTR [rsp+0x40]
   14000462b:	add    rsp,0x30
   14000462f:	pop    rdi
   140004630:	ret    
   140004631:	int3   
   140004632:	int3   
   140004633:	int3   
   140004634:	int3   
   140004635:	int3   
   140004636:	int3   
   140004637:	int3   
   140004638:	mov    QWORD PTR [rsp+0x8],rbx
   14000463d:	push   rbp
   14000463e:	push   rsi
   14000463f:	push   rdi
   140004640:	push   r12
   140004642:	push   r13
   140004644:	push   r14
   140004646:	push   r15
   140004648:	mov    rbp,rsp
   14000464b:	sub    rsp,0x40
   14000464f:	xor    ebx,ebx
   140004651:	lea    r8,[rbp+0x48]
   140004655:	lea    rdx,[rip+0x44bc]        # 0x140008b18
   14000465c:	mov    DWORD PTR [rbp+0x50],ebx
   14000465f:	mov    esi,ebx
   140004661:	mov    r13,rcx
   140004664:	call   0x140003658
   140004669:	mov    r15,rax
   14000466c:	test   rax,rax
   14000466f:	jne    0x140004693
   140004671:	lea    r9,[rip+0x42f8]        # 0x140008970
   140004678:	lea    r8,[rip+0x4499]        # 0x140008b18
   14000467f:	lea    edx,[rbx+0x2]
   140004682:	lea    ecx,[rbx+0x6c]
   140004685:	call   0x140006e40
   14000468a:	lea    r14d,[rbx+0xd]
   14000468e:	jmp    0x140004995
   140004693:	mov    eax,DWORD PTR [rbp+0x48]
   140004696:	lea    r8,[rbp+0x58]
   14000469a:	inc    eax
   14000469c:	lea    rdx,[rip+0x4435]        # 0x140008ad8
   1400046a3:	mov    rcx,r13
   1400046a6:	mov    QWORD PTR [rbp-0x10],rax
   1400046aa:	lea    rdi,[rax*2+0x7]
   1400046b2:	shr    rdi,0x3
   1400046b6:	lea    ebx,[rdi*8+0x40]
   1400046bd:	call   0x140003658
   1400046c2:	mov    r12d,DWORD PTR [rbp+0x58]
   1400046c6:	mov    r14,rax
   1400046c9:	test   rax,rax
   1400046cc:	je     0x1400046e2
   1400046ce:	lea    eax,[r12+0x1]
   1400046d3:	lea    rcx,[rax*2+0x7]
   1400046db:	shr    rcx,0x3
   1400046df:	lea    ebx,[rbx+rcx*8]
   1400046e2:	call   QWORD PTR [rip+0x39b8]        # 0x1400080a0
   1400046e8:	mov    r8,rbx
   1400046eb:	mov    edx,0x8
   1400046f0:	mov    rcx,rax
   1400046f3:	call   QWORD PTR [rip+0x398f]        # 0x140008088
   1400046f9:	xor    ebx,ebx
   1400046fb:	mov    rsi,rax
   1400046fe:	test   rax,rax
   140004701:	jne    0x14000471d
   140004703:	lea    edx,[rax+0x2]
   140004706:	mov    r8d,0x723
   14000470c:	lea    ecx,[rax+0x66]
   14000470f:	call   0x140006e40
   140004714:	lea    r14d,[rsi+0xe]
   140004718:	jmp    0x140004995
   14000471d:	mov    rdx,QWORD PTR [rbp-0x10]
   140004721:	lea    rcx,[rax+0x40]
   140004725:	mov    r8,r15
   140004728:	mov    QWORD PTR [rax+0x20],rcx
   14000472c:	call   0x140001008
   140004731:	test   r14,r14
   140004734:	je     0x14000474f
   140004736:	lea    rcx,[rdi+0x8]
   14000473a:	mov    r8,r14
   14000473d:	lea    rcx,[rsi+rcx*8]
   140004741:	lea    edx,[r12+0x1]
   140004746:	mov    QWORD PTR [rsi+0x28],rcx
   14000474a:	call   0x140001008
   14000474f:	lea    r8,[rbp+0x48]
   140004753:	mov    rcx,r13
   140004756:	lea    rdx,[rip+0x433b]        # 0x140008a98
   14000475d:	call   0x140003658
   140004762:	mov    r12,rax
   140004765:	test   rax,rax
   140004768:	jne    0x14000478d
   14000476a:	lea    r9,[rip+0x41ff]        # 0x140008970
   140004771:	lea    r8,[rip+0x4320]        # 0x140008a98
   140004778:	lea    edx,[rax+0x2]
   14000477b:	lea    ecx,[rax+0x6c]
   14000477e:	call   0x140006e40
   140004783:	lea    r14d,[r12+0xd]
   140004788:	jmp    0x14000497e
   14000478d:	mov    edx,DWORD PTR [rbp+0x48]
   140004790:	lea    r8,[rsi+0x10]
   140004794:	mov    rcx,rax
   140004797:	call   0x140003c2c
   14000479c:	mov    r14d,eax
   14000479f:	test   eax,eax
   1400047a1:	je     0x1400047df
   1400047a3:	mov    edi,DWORD PTR [rbp+0x48]
   1400047a6:	lea    r15,[rip+0x41c3]        # 0x140008970
   1400047ad:	xor    eax,eax
   1400047af:	mov    QWORD PTR [rsp+0x20],r15
   1400047b4:	lea    r9,[rip+0x42dd]        # 0x140008a98
   1400047bb:	mov    r8,r12
   1400047be:	movzx  ebx,WORD PTR [r12+rdi*2]
   1400047c3:	lea    edx,[rax+0x2]
   1400047c6:	mov    WORD PTR [r12+rdi*2],ax
   1400047cb:	lea    ecx,[rax+0x6e]
   1400047ce:	call   0x140006e40
   1400047d3:	mov    WORD PTR [r12+rdi*2],bx
   1400047d8:	xor    ebx,ebx
   1400047da:	jmp    0x140004979
   1400047df:	lea    r8,[rbp+0x48]
   1400047e3:	mov    BYTE PTR [rip+0x8e63],bl        # 0x14000d64c
   1400047e9:	lea    rdx,[rip+0x4308]        # 0x140008af8
   1400047f0:	mov    DWORD PTR [rip+0x886e],0x1        # 0x14000d068
   1400047fa:	mov    rcx,r13
   1400047fd:	call   0x140003658
   140004802:	test   rax,rax
   140004805:	je     0x140004832
   140004807:	mov    edx,DWORD PTR [rbp+0x48]
   14000480a:	lea    r9,[rbp+0x50]
   14000480e:	or     r8d,0xffffffff
   140004812:	mov    rcx,rax
   140004815:	call   0x140003b60
   14000481a:	test   al,al
   14000481c:	je     0x140004832
   14000481e:	mov    eax,DWORD PTR [rbp+0x50]
   140004821:	test   eax,eax
   140004823:	js     0x140004832
   140004825:	mov    DWORD PTR [rip+0x883d],eax        # 0x14000d068
   14000482b:	mov    BYTE PTR [rip+0x8e1a],0x1        # 0x14000d64c
   140004832:	lea    r8,[rbp+0x48]
   140004836:	mov    QWORD PTR [rsi+0x30],rbx
   14000483a:	lea    rdx,[rip+0x4277]        # 0x140008ab8
   140004841:	mov    rcx,r13
   140004844:	call   0x140003658
   140004849:	mov    r12,rax
   14000484c:	lea    rax,[rip+0x604d]        # 0x14000a8a0
   140004853:	test   r12,r12
   140004856:	je     0x140004870
   140004858:	mov    edx,DWORD PTR [rbp+0x48]
   14000485b:	mov    r9d,0x3
   140004861:	mov    r8,rax
   140004864:	mov    rcx,r12
   140004867:	call   0x140003a78
   14000486c:	mov    QWORD PTR [rsi+0x30],rax
   140004870:	lea    r15,[rip+0x40f9]        # 0x140008970
   140004877:	cmp    QWORD PTR [rsi+0x30],rbx
   14000487b:	jne    0x1400048cb
   14000487d:	test   r12,r12
   140004880:	je     0x1400048c0
   140004882:	mov    edi,DWORD PTR [rbp+0x48]
   140004885:	lea    r9,[rip+0x422c]        # 0x140008ab8
   14000488c:	xor    eax,eax
   14000488e:	mov    edx,0x1
   140004893:	mov    r8,r12
   140004896:	movzx  ebx,WORD PTR [r12+rdi*2]
   14000489b:	mov    WORD PTR [r12+rdi*2],ax
   1400048a0:	lea    ecx,[rdx+0x6e]
   1400048a3:	mov    rax,QWORD PTR [rip+0x5ff6]        # 0x14000a8a0
   1400048aa:	mov    QWORD PTR [rsp+0x28],rax
   1400048af:	mov    QWORD PTR [rsp+0x20],r15
   1400048b4:	call   0x140006e40
   1400048b9:	mov    WORD PTR [r12+rdi*2],bx
   1400048be:	xor    ebx,ebx
   1400048c0:	lea    rax,[rip+0x5fd9]        # 0x14000a8a0
   1400048c7:	mov    QWORD PTR [rsi+0x30],rax
   1400048cb:	lea    r8,[rbp+0x48]
   1400048cf:	mov    QWORD PTR [rsi+0x38],rbx
   1400048d3:	lea    rdx,[rip+0x4266]        # 0x140008b40
   1400048da:	mov    rcx,r13
   1400048dd:	call   0x140003658
   1400048e2:	lea    r13,[rip+0x5ae7]        # 0x14000a3d0
   1400048e9:	mov    r12,rax
   1400048ec:	test   rax,rax
   1400048ef:	je     0x140004909
   1400048f1:	mov    edx,DWORD PTR [rbp+0x48]
   1400048f4:	mov    r9d,0x2
   1400048fa:	mov    r8,r13
   1400048fd:	mov    rcx,rax
   140004900:	call   0x140003a78
   140004905:	mov    QWORD PTR [rsi+0x38],rax
   140004909:	cmp    QWORD PTR [rsi+0x38],rbx
   14000490d:	jne    0x140004956
   14000490f:	test   r12,r12
   140004912:	je     0x140004952
   140004914:	mov    edi,DWORD PTR [rbp+0x48]
   140004917:	lea    r9,[rip+0x4222]        # 0x140008b40
   14000491e:	xor    eax,eax
   140004920:	mov    edx,0x1
   140004925:	mov    r8,r12
   140004928:	movzx  ebx,WORD PTR [r12+rdi*2]
   14000492d:	mov    WORD PTR [r12+rdi*2],ax
   140004932:	lea    ecx,[rdx+0x6e]
   140004935:	mov    rax,QWORD PTR [rip+0x5a94]        # 0x14000a3d0
   14000493c:	mov    QWORD PTR [rsp+0x28],rax
   140004941:	mov    QWORD PTR [rsp+0x20],r15
   140004946:	call   0x140006e40
   14000494b:	mov    WORD PTR [r12+rdi*2],bx
   140004950:	xor    ebx,ebx
   140004952:	mov    QWORD PTR [rsi+0x38],r13
   140004956:	mov    rax,QWORD PTR [rip+0x8ccb]        # 0x14000d628
   14000495d:	mov    QWORD PTR [rsi],rbx
   140004960:	test   rax,rax
   140004963:	jne    0x140004971
   140004965:	mov    QWORD PTR [rip+0x8cbc],rsi        # 0x14000d628
   14000496c:	jmp    0x14000499e
   14000496e:	mov    rax,QWORD PTR [rax]
   140004971:	cmp    QWORD PTR [rax],rbx
   140004974:	jne    0x14000496e
   140004976:	mov    QWORD PTR [rax],rsi
   140004979:	test   r14d,r14d
   14000497c:	je     0x14000499e
   14000497e:	call   QWORD PTR [rip+0x371c]        # 0x1400080a0
   140004984:	mov    r8,rsi
   140004987:	xor    edx,edx
   140004989:	mov    rcx,rax
   14000498c:	call   QWORD PTR [rip+0x3706]        # 0x140008098
   140004992:	mov    rsi,rbx
   140004995:	mov    ecx,r14d
   140004998:	call   QWORD PTR [rip+0x369a]        # 0x140008038
   14000499e:	mov    rax,rsi
   1400049a1:	mov    rbx,QWORD PTR [rsp+0x80]
   1400049a9:	add    rsp,0x40
   1400049ad:	pop    r15
   1400049af:	pop    r14
   1400049b1:	pop    r13
   1400049b3:	pop    r12
   1400049b5:	pop    rdi
   1400049b6:	pop    rsi
   1400049b7:	pop    rbp
   1400049b8:	ret    
   1400049b9:	int3   
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049ca:	mov    QWORD PTR [rsp+0x20],rdi
   1400049cf:	push   rbp
   1400049d0:	push   r12
   1400049d2:	push   r13
   1400049d4:	push   r14
   1400049d6:	push   r15
   1400049d8:	mov    rbp,rsp
   1400049db:	sub    rsp,0x30
   1400049df:	mov    r13,rdx
   1400049e2:	mov    ebx,0x58
   1400049e7:	lea    rdx,[rip+0x417a]        # 0x140008b68
   1400049ee:	mov    rdi,rcx
   1400049f1:	lea    r8,[rbp+0x40]
   1400049f5:	call   0x140003658
   1400049fa:	mov    r15d,DWORD PTR [rbp+0x40]
   1400049fe:	xor    r12d,r12d
   140004a01:	mov    r14,rax
   140004a04:	test   rax,rax
   140004a07:	je     0x140004a20
   140004a09:	lea    edx,[r15+0x1]
   140004a0d:	lea    rcx,[rdx*2+0x7]
   140004a15:	shr    rcx,0x3
   140004a19:	lea    ebx,[rcx*8+0x58]
   140004a20:	call   QWORD PTR [rip+0x367a]        # 0x1400080a0
   140004a26:	mov    r8,rbx
   140004a29:	mov    edx,0x8
   140004a2e:	mov    rcx,rax
   140004a31:	call   QWORD PTR [rip+0x3651]        # 0x140008088
   140004a37:	mov    rsi,rax
   140004a3a:	test   rax,rax
   140004a3d:	jne    0x140004a59
   140004a3f:	lea    edx,[rax+0x2]
   140004a42:	mov    r8d,0x7a2
   140004a48:	lea    ecx,[rax+0x66]
   140004a4b:	call   0x140006e40
   140004a50:	lea    r14d,[rsi+0xe]
   140004a54:	jmp    0x140004de5
   140004a59:	test   r14,r14
   140004a5c:	je     0x140004a74
   140004a5e:	lea    rcx,[rax+0x58]
   140004a62:	mov    r8,r14
   140004a65:	lea    edx,[r15+0x1]
   140004a69:	mov    QWORD PTR [rax+0x20],rcx
   140004a6d:	call   0x140001008
   140004a72:	jmp    0x140004a78
   140004a74:	mov    QWORD PTR [rax+0x20],r12
   140004a78:	lea    r8,[rbp+0x40]
   140004a7c:	mov    rcx,rdi
   140004a7f:	lea    rdx,[rip+0x4242]        # 0x140008cc8
   140004a86:	call   0x140003658
   140004a8b:	test   rax,rax
   140004a8e:	je     0x140004adc
   140004a90:	mov    r8d,DWORD PTR [rbp+0x40]
   140004a94:	lea    rbx,[rsi+0x40]
   140004a98:	mov    rcx,rbx
   140004a9b:	mov    rdx,rax
   140004a9e:	call   0x140002fb4
   140004aa3:	mov    r14d,eax
   140004aa6:	test   eax,eax
   140004aa8:	jne    0x140004d77
   140004aae:	mov    rax,QWORD PTR [rbx]
   140004ab1:	mov    edx,r12d
   140004ab4:	cmp    WORD PTR [rax],r12w
   140004ab8:	je     0x140004adc
   140004aba:	mov    rcx,r12
   140004abd:	mov    rax,QWORD PTR [rbx]
   140004ac0:	cmp    WORD PTR [rax+rcx*1],0x2c
   140004ac5:	jne    0x140004acc
   140004ac7:	mov    WORD PTR [rax+rcx*1],r12w
   140004acc:	mov    rax,QWORD PTR [rbx]
   140004acf:	inc    edx
   140004ad1:	lea    rcx,[rdx+rdx*1]
   140004ad5:	cmp    WORD PTR [rcx+rax*1],r12w
   140004ada:	jne    0x140004abd
   140004adc:	lea    r8,[rbp+0x40]
   140004ae0:	mov    rcx,rdi
   140004ae3:	lea    rdx,[rip+0x420e]        # 0x140008cf8
   140004aea:	call   0x140003658
   140004aef:	test   rax,rax
   140004af2:	je     0x140004b71
   140004af4:	mov    r8d,DWORD PTR [rbp+0x40]
   140004af8:	lea    rcx,[rsi+0x48]
   140004afc:	mov    rdx,rax
   140004aff:	call   0x140002fb4
   140004b04:	mov    r14d,eax
   140004b07:	test   eax,eax
   140004b09:	jne    0x140004d77
   140004b0f:	lea    r8,[rbp+0x40]
   140004b13:	mov    rcx,rdi
   140004b16:	lea    rdx,[rip+0x41eb]        # 0x140008d08
   140004b1d:	call   0x140003658
   140004b22:	test   rax,rax
   140004b25:	je     0x140004b4d
   140004b27:	mov    rcx,QWORD PTR [r13+0x30]
   140004b2b:	cmp    QWORD PTR [rcx+0x10],0x1
   140004b30:	jne    0x140004b9e
   140004b32:	mov    r8d,DWORD PTR [rbp+0x40]
   140004b36:	lea    rcx,[rsi+0x50]
   140004b3a:	mov    rdx,rax
   140004b3d:	call   0x140002fb4
   140004b42:	mov    r14d,eax
   140004b45:	test   eax,eax
   140004b47:	jne    0x140004d77
   140004b4d:	lea    r8,[rbp+0x40]
   140004b51:	mov    rcx,rdi
   140004b54:	lea    rdx,[rip+0x3ffd]        # 0x140008b58
   140004b5b:	call   0x140003658
   140004b60:	mov    r15,rax
   140004b63:	test   rax,rax
   140004b66:	jne    0x140004ba9
   140004b68:	lea    r8,[rip+0x3fe9]        # 0x140008b58
   140004b6f:	jmp    0x140004b8a
   140004b71:	movsd  xmm0,QWORD PTR [rip+0x8ad7]        # 0x14000d650
   140004b79:	comisd xmm0,QWORD PTR [rip+0x6057]        # 0x14000abd8
   140004b81:	jb     0x140004b0f
   140004b83:	lea    r8,[rip+0x416e]        # 0x140008cf8
   140004b8a:	mov    edx,0x2
   140004b8f:	lea    r9,[rip+0x3e0a]        # 0x1400089a0
   140004b96:	lea    ecx,[rdx+0x6a]
   140004b99:	call   0x140006e40
   140004b9e:	mov    r14d,0xd
   140004ba4:	jmp    0x140004d77
   140004ba9:	mov    edx,DWORD PTR [rbp+0x40]
   140004bac:	lea    r8,[rsi+0x10]
   140004bb0:	mov    rcx,rax
   140004bb3:	call   0x140003c2c
   140004bb8:	mov    r14d,eax
   140004bbb:	test   eax,eax
   140004bbd:	je     0x140004bf9
   140004bbf:	mov    edi,DWORD PTR [rbp+0x40]
   140004bc2:	lea    rax,[rip+0x3dd7]        # 0x1400089a0
   140004bc9:	mov    edx,0x2
   140004bce:	mov    QWORD PTR [rsp+0x20],rax
   140004bd3:	lea    r9,[rip+0x3f7e]        # 0x140008b58
   140004bda:	mov    r8,r15
   140004bdd:	movzx  ebx,WORD PTR [r15+rdi*2]
   140004be2:	lea    ecx,[rdx+0x6c]
   140004be5:	mov    WORD PTR [r15+rdi*2],r12w
   140004bea:	call   0x140006e40
   140004bef:	mov    WORD PTR [r15+rdi*2],bx
   140004bf4:	jmp    0x140004d72
   140004bf9:	lea    rdx,[rip+0x3f80]        # 0x140008b80
   140004c00:	mov    rcx,rdi
   140004c03:	call   0x140003b00
   140004c08:	lea    r8,[rbp+0x40]
   140004c0c:	mov    rcx,rdi
   140004c0f:	lea    rdx,[rip+0x3f5a]        # 0x140008b70
   140004c16:	mov    ebx,eax
   140004c18:	call   0x140003658
   140004c1d:	or     r15d,0xffffffff
   140004c21:	test   rax,rax
   140004c24:	je     0x140004c62
   140004c26:	mov    edx,DWORD PTR [rbp+0x40]
   140004c29:	xor    r9d,r9d
   140004c2c:	mov    DWORD PTR [rsp+0x28],ebx
   140004c30:	xor    r8d,r8d
   140004c33:	mov    rcx,rax
   140004c36:	mov    DWORD PTR [rsp+0x20],0x1
   140004c3e:	call   0x1400044c8
   140004c43:	test   rax,rax
   140004c46:	je     0x140004c54
   140004c48:	mov    ecx,DWORD PTR [rax+0x18]
   140004c4b:	mov    DWORD PTR [rsi+0x38],ecx
   140004c4e:	mov    QWORD PTR [rsi+0x30],rax
   140004c52:	jmp    0x140004c66
   140004c54:	call   QWORD PTR [rip+0x33ce]        # 0x140008028
   140004c5a:	mov    r14d,eax
   140004c5d:	jmp    0x140004d72
   140004c62:	mov    DWORD PTR [rsi+0x38],r15d
   140004c66:	lea    rdx,[rip+0x3f3b]        # 0x140008ba8
   140004c6d:	mov    rcx,rdi
   140004c70:	call   0x140003b00
   140004c75:	lea    r8,[rbp+0x40]
   140004c79:	mov    rcx,rdi
   140004c7c:	lea    rdx,[rip+0x3f0d]        # 0x140008b90
   140004c83:	mov    ebx,eax
   140004c85:	call   0x140003658
   140004c8a:	test   rax,rax
   140004c8d:	je     0x140004cb9
   140004c8f:	mov    edx,DWORD PTR [rbp+0x40]
   140004c92:	xor    r9d,r9d
   140004c95:	mov    DWORD PTR [rsp+0x28],ebx
   140004c99:	xor    r8d,r8d
   140004c9c:	mov    rcx,rax
   140004c9f:	mov    DWORD PTR [rsp+0x20],0x2
   140004ca7:	call   0x1400044c8
   140004cac:	test   rax,rax
   140004caf:	je     0x140004c54
   140004cb1:	mov    eax,DWORD PTR [rax+0x18]
   140004cb4:	mov    DWORD PTR [rsi+0x3c],eax
   140004cb7:	jmp    0x140004cbd
   140004cb9:	mov    DWORD PTR [rsi+0x3c],r15d
   140004cbd:	lea    r8,[rbp+0x40]
   140004cc1:	mov    QWORD PTR [rsi+0x28],r12
   140004cc5:	lea    rdx,[rip+0x3efc]        # 0x140008bc8
   140004ccc:	mov    rcx,rdi
   140004ccf:	call   0x140003658
   140004cd4:	mov    r15,rax
   140004cd7:	lea    rax,[rip+0x5ab2]        # 0x14000a790
   140004cde:	test   r15,r15
   140004ce1:	je     0x140004cfb
   140004ce3:	mov    edx,DWORD PTR [rbp+0x40]
   140004ce6:	mov    r9d,0x6
   140004cec:	mov    r8,rax
   140004cef:	mov    rcx,r15
   140004cf2:	call   0x140003a78
   140004cf7:	mov    QWORD PTR [rsi+0x28],rax
   140004cfb:	cmp    QWORD PTR [rsi+0x28],r12
   140004cff:	jne    0x140004d52
   140004d01:	test   r15,r15
   140004d04:	je     0x140004d47
   140004d06:	mov    edi,DWORD PTR [rbp+0x40]
   140004d09:	lea    r9,[rip+0x3eb8]        # 0x140008bc8
   140004d10:	mov    edx,0x1
   140004d15:	mov    r8,r15
   140004d18:	movzx  ebx,WORD PTR [r15+rdi*2]
   140004d1d:	mov    WORD PTR [r15+rdi*2],r12w
   140004d22:	lea    ecx,[rdx+0x6e]
   140004d25:	mov    rax,QWORD PTR [rip+0x5a64]        # 0x14000a790
   140004d2c:	mov    QWORD PTR [rsp+0x28],rax
   140004d31:	lea    rax,[rip+0x3c68]        # 0x1400089a0
   140004d38:	mov    QWORD PTR [rsp+0x20],rax
   140004d3d:	call   0x140006e40
   140004d42:	mov    WORD PTR [r15+rdi*2],bx
   140004d47:	lea    rax,[rip+0x5a42]        # 0x14000a790
   140004d4e:	mov    QWORD PTR [rsi+0x28],rax
   140004d52:	mov    QWORD PTR [rsi],r12
   140004d55:	mov    rax,QWORD PTR [r13+0x8]
   140004d59:	test   rax,rax
   140004d5c:	jne    0x140004d6a
   140004d5e:	mov    QWORD PTR [r13+0x8],rsi
   140004d62:	jmp    0x140004dee
   140004d67:	mov    rax,QWORD PTR [rax]
   140004d6a:	cmp    QWORD PTR [rax],r12
   140004d6d:	jne    0x140004d67
   140004d6f:	mov    QWORD PTR [rax],rsi
   140004d72:	test   r14d,r14d
   140004d75:	je     0x140004dee
   140004d77:	mov    rbx,QWORD PTR [rsi+0x40]
   140004d7b:	test   rbx,rbx
   140004d7e:	je     0x140004d94
   140004d80:	call   QWORD PTR [rip+0x331a]        # 0x1400080a0
   140004d86:	mov    r8,rbx
   140004d89:	xor    edx,edx
   140004d8b:	mov    rcx,rax
   140004d8e:	call   QWORD PTR [rip+0x3304]        # 0x140008098
   140004d94:	mov    rbx,QWORD PTR [rsi+0x48]
   140004d98:	test   rbx,rbx
   140004d9b:	je     0x140004db1
   140004d9d:	call   QWORD PTR [rip+0x32fd]        # 0x1400080a0
   140004da3:	mov    r8,rbx
   140004da6:	xor    edx,edx
   140004da8:	mov    rcx,rax
   140004dab:	call   QWORD PTR [rip+0x32e7]        # 0x140008098
   140004db1:	mov    rbx,QWORD PTR [rsi+0x50]
   140004db5:	test   rbx,rbx
   140004db8:	je     0x140004dce
   140004dba:	call   QWORD PTR [rip+0x32e0]        # 0x1400080a0
   140004dc0:	mov    r8,rbx
   140004dc3:	xor    edx,edx
   140004dc5:	mov    rcx,rax
   140004dc8:	call   QWORD PTR [rip+0x32ca]        # 0x140008098
   140004dce:	call   QWORD PTR [rip+0x32cc]        # 0x1400080a0
   140004dd4:	mov    r8,rsi
   140004dd7:	xor    edx,edx
   140004dd9:	mov    rcx,rax
   140004ddc:	call   QWORD PTR [rip+0x32b6]        # 0x140008098
   140004de2:	mov    rsi,r12
   140004de5:	mov    ecx,r14d
   140004de8:	call   QWORD PTR [rip+0x324a]        # 0x140008038
   140004dee:	mov    rbx,QWORD PTR [rsp+0x60]
   140004df3:	mov    rax,rsi
   140004df6:	mov    rsi,QWORD PTR [rsp+0x68]
   140004dfb:	mov    rdi,QWORD PTR [rsp+0x78]
   140004e00:	add    rsp,0x30
   140004e04:	pop    r15
   140004e06:	pop    r14
   140004e08:	pop    r13
   140004e0a:	pop    r12
   140004e0c:	pop    rbp
   140004e0d:	ret    
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	int3   
   140004e11:	int3   
   140004e12:	int3   
   140004e13:	int3   
   140004e14:	mov    QWORD PTR [rsp+0x8],rbx
   140004e19:	mov    QWORD PTR [rsp+0x18],r8
   140004e1e:	mov    QWORD PTR [rsp+0x10],rdx
   140004e23:	push   rbp
   140004e24:	push   rsi
   140004e25:	push   rdi
   140004e26:	push   r12
   140004e28:	push   r13
   140004e2a:	push   r14
   140004e2c:	push   r15
   140004e2e:	mov    rbp,rsp
   140004e31:	sub    rsp,0x40
   140004e35:	mov    r12,r8
   140004e38:	mov    ebx,0x78
   140004e3d:	xor    esi,esi
   140004e3f:	lea    r8,[rbp+0x48]
   140004e43:	lea    rdx,[rip+0x3d1e]        # 0x140008b68
   140004e4a:	mov    DWORD PTR [rbp+0x58],esi
   140004e4d:	mov    r14d,esi
   140004e50:	mov    r15,rcx
   140004e53:	call   0x140003658
   140004e58:	mov    r13d,DWORD PTR [rbp+0x48]
   140004e5c:	mov    rdi,rax
   140004e5f:	test   rax,rax
   140004e62:	je     0x140004e7b
   140004e64:	lea    eax,[r13+0x1]
   140004e68:	lea    rcx,[rax*2+0x7]
   140004e70:	shr    rcx,0x3
   140004e74:	lea    ebx,[rcx*8+0x78]
   140004e7b:	call   QWORD PTR [rip+0x321f]        # 0x1400080a0
   140004e81:	mov    r8,rbx
   140004e84:	mov    edx,0x8
   140004e89:	mov    rcx,rax
   140004e8c:	call   QWORD PTR [rip+0x31f6]        # 0x140008088
   140004e92:	mov    rsi,rax
   140004e95:	test   rax,rax
   140004e98:	jne    0x140004ea3
   140004e9a:	lea    r14d,[rax+0xe]
   140004e9e:	jmp    0x14000551a
   140004ea3:	test   rdi,rdi
   140004ea6:	je     0x140004ec0
   140004ea8:	lea    rcx,[rax+0x78]
   140004eac:	mov    r8,rdi
   140004eaf:	lea    edx,[r13+0x1]
   140004eb3:	mov    QWORD PTR [rax+0x8],rcx
   140004eb7:	call   0x140001008
   140004ebc:	xor    edi,edi
   140004ebe:	jmp    0x140004ec4
   140004ec0:	mov    QWORD PTR [rax+0x8],rdi
   140004ec4:	lea    r8,[rbp+0x48]
   140004ec8:	mov    rcx,r15
   140004ecb:	lea    rdx,[rip+0x3e06]        # 0x140008cd8
   140004ed2:	call   0x140003658
   140004ed7:	or     r13,0xffffffffffffffff
   140004edb:	mov    rdx,rax
   140004ede:	test   rax,rax
   140004ee1:	jne    0x140004efe
   140004ee3:	mov    rdx,QWORD PTR [r12+0x40]
   140004ee8:	test   rdx,rdx
   140004eeb:	je     0x140004f18
   140004eed:	mov    rax,r13
   140004ef0:	inc    rax
   140004ef3:	cmp    WORD PTR [rdx+rax*2],di
   140004ef7:	jne    0x140004ef0
   140004ef9:	mov    DWORD PTR [rbp+0x48],eax
   140004efc:	jmp    0x140004f01
   140004efe:	mov    eax,DWORD PTR [rbp+0x48]
   140004f01:	lea    rcx,[rsi+0x60]
   140004f05:	mov    r8d,eax
   140004f08:	call   0x140002fb4
   140004f0d:	mov    r14d,eax
   140004f10:	test   eax,eax
   140004f12:	jne    0x1400054ac
   140004f18:	lea    r8,[rbp+0x48]
   140004f1c:	mov    rcx,r15
   140004f1f:	lea    rdx,[rip+0x3dc2]        # 0x140008ce8
   140004f26:	call   0x140003658
   140004f2b:	test   rax,rax
   140004f2e:	je     0x140004f4b
   140004f30:	mov    r8d,DWORD PTR [rbp+0x48]
   140004f34:	lea    rcx,[rsi+0x68]
   140004f38:	mov    rdx,rax
   140004f3b:	call   0x140002fb4
   140004f40:	mov    r14d,eax
   140004f43:	test   eax,eax
   140004f45:	jne    0x1400054ac
   140004f4b:	lea    r8,[rbp+0x48]
   140004f4f:	mov    rcx,r15
   140004f52:	lea    rdx,[rip+0x3d9f]        # 0x140008cf8
   140004f59:	call   0x140003658
   140004f5e:	test   rax,rax
   140004f61:	je     0x140004f7e
   140004f63:	mov    r8d,DWORD PTR [rbp+0x48]
   140004f67:	lea    rcx,[rsi+0x70]
   140004f6b:	mov    rdx,rax
   140004f6e:	call   0x140002fb4
   140004f73:	mov    r14d,eax
   140004f76:	test   eax,eax
   140004f78:	jne    0x1400054ac
   140004f7e:	lea    r8,[rbp+0x48]
   140004f82:	mov    rcx,r15
   140004f85:	lea    rdx,[rip+0x3c50]        # 0x140008bdc
   140004f8c:	call   0x140003658
   140004f91:	mov    QWORD PTR [rbp-0x10],rax
   140004f95:	mov    rcx,rax
   140004f98:	test   rax,rax
   140004f9b:	je     0x140005486
   140004fa1:	mov    edx,DWORD PTR [rbp+0x48]
   140004fa4:	lea    r9,[rbp+0x58]
   140004fa8:	mov    r8d,r13d
   140004fab:	call   0x140003b60
   140004fb0:	test   al,al
   140004fb2:	je     0x140005473
   140004fb8:	mov    eax,DWORD PTR [rbp+0x58]
   140004fbb:	test   eax,eax
   140004fbd:	js     0x140005473
   140004fc3:	lea    rdx,[rip+0x3bb6]        # 0x140008b80
   140004fca:	mov    DWORD PTR [rsi+0x30],eax
   140004fcd:	mov    rcx,r15
   140004fd0:	call   0x140003b00
   140004fd5:	lea    r8,[rbp+0x48]
   140004fd9:	mov    rcx,r15
   140004fdc:	lea    rdx,[rip+0x3b8d]        # 0x140008b70
   140004fe3:	mov    ebx,eax
   140004fe5:	call   0x140003658
   140004fea:	or     r12d,0xffffffff
   140004fee:	test   rax,rax
   140004ff1:	je     0x14000502f
   140004ff3:	mov    edx,DWORD PTR [rbp+0x48]
   140004ff6:	xor    r9d,r9d
   140004ff9:	mov    DWORD PTR [rsp+0x28],ebx
   140004ffd:	xor    r8d,r8d
   140005000:	mov    rcx,rax
   140005003:	mov    DWORD PTR [rsp+0x20],0x1
   14000500b:	call   0x1400044c8
   140005010:	test   rax,rax
   140005013:	je     0x140005021
   140005015:	mov    ecx,DWORD PTR [rax+0x18]
   140005018:	mov    DWORD PTR [rsi+0x40],ecx
   14000501b:	mov    QWORD PTR [rsi+0x38],rax
   14000501f:	jmp    0x140005033
   140005021:	call   QWORD PTR [rip+0x3001]        # 0x140008028
   140005027:	mov    r14d,eax
   14000502a:	jmp    0x1400054a7
   14000502f:	mov    DWORD PTR [rsi+0x40],r12d
   140005033:	lea    rdx,[rip+0x3b6e]        # 0x140008ba8
   14000503a:	mov    rcx,r15
   14000503d:	call   0x140003b00
   140005042:	lea    r8,[rbp+0x48]
   140005046:	mov    rcx,r15
   140005049:	lea    rdx,[rip+0x3b40]        # 0x140008b90
   140005050:	mov    edi,eax
   140005052:	call   0x140003658
   140005057:	mov    ebx,0x2
   14000505c:	test   rax,rax
   14000505f:	je     0x140005089
   140005061:	mov    edx,DWORD PTR [rbp+0x48]
   140005064:	xor    r9d,r9d
   140005067:	mov    DWORD PTR [rsp+0x28],edi
   14000506b:	xor    r8d,r8d
   14000506e:	mov    rcx,rax
   140005071:	mov    DWORD PTR [rsp+0x20],ebx
   140005075:	call   0x1400044c8
   14000507a:	xor    edi,edi
   14000507c:	test   rax,rax
   14000507f:	je     0x140005021
   140005081:	mov    eax,DWORD PTR [rax+0x18]
   140005084:	mov    DWORD PTR [rsi+0x44],eax
   140005087:	jmp    0x14000508f
   140005089:	mov    DWORD PTR [rsi+0x44],r12d
   14000508d:	xor    edi,edi
   14000508f:	lea    r8,[rbp+0x48]
   140005093:	mov    QWORD PTR [rsi+0x10],rdi
   140005097:	lea    rdx,[rip+0x3b4a]        # 0x140008be8
   14000509e:	mov    rcx,r15
   1400050a1:	call   0x140003658
   1400050a6:	mov    QWORD PTR [rbp+0x58],rax
   1400050aa:	test   rax,rax
   1400050ad:	je     0x1400050cf
   1400050af:	mov    edx,DWORD PTR [rbp+0x48]
   1400050b2:	lea    r8,[rip+0x5347]        # 0x14000a400
   1400050b9:	mov    r9d,0x26
   1400050bf:	mov    rcx,rax
   1400050c2:	call   0x140003a78
   1400050c7:	mov    QWORD PTR [rsi+0x10],rax
   1400050cb:	mov    rax,QWORD PTR [rbp+0x58]
   1400050cf:	cmp    QWORD PTR [rsi+0x10],rdi
   1400050d3:	jne    0x140005139
   1400050d5:	test   rax,rax
   1400050d8:	jne    0x1400050f4
   1400050da:	lea    r9,[rip+0x38d7]        # 0x1400089b8
   1400050e1:	mov    edx,ebx
   1400050e3:	lea    r8,[rip+0x3afe]        # 0x140008be8
   1400050ea:	lea    ecx,[rax+0x6c]
   1400050ed:	call   0x140006e40
   1400050f2:	jmp    0x14000512e
   1400050f4:	mov    edi,DWORD PTR [rbp+0x48]
   1400050f7:	lea    r12,[rip+0x38ba]        # 0x1400089b8
   1400050fe:	xor    edx,edx
   140005100:	mov    QWORD PTR [rsp+0x20],r12
   140005105:	lea    r9,[rip+0x3adc]        # 0x140008be8
   14000510c:	mov    r8,rax
   14000510f:	movzx  ebx,WORD PTR [rax+rdi*2]
   140005113:	mov    WORD PTR [rax+rdi*2],dx
   140005117:	mov    edx,0x2
   14000511c:	lea    ecx,[rdx+0x6b]
   14000511f:	call   0x140006e40
   140005124:	mov    rax,QWORD PTR [rbp+0x58]
   140005128:	mov    WORD PTR [rax+rdi*2],bx
   14000512c:	xor    edi,edi
   14000512e:	mov    r14d,0xd
   140005134:	jmp    0x1400054ac
   140005139:	lea    r8,[rbp+0x48]
   14000513d:	mov    QWORD PTR [rsi+0x18],rdi
   140005141:	lea    rdx,[rip+0x3ae0]        # 0x140008c28
   140005148:	mov    rcx,r15
   14000514b:	call   0x140003658
   140005150:	mov    rcx,rax
   140005153:	mov    QWORD PTR [rbp+0x58],rax
   140005157:	lea    rax,[rip+0x5242]        # 0x14000a3a0
   14000515e:	test   rcx,rcx
   140005161:	je     0x140005179
   140005163:	mov    edx,DWORD PTR [rbp+0x48]
   140005166:	mov    r9d,ebx
   140005169:	mov    r8,rax
   14000516c:	call   0x140003a78
   140005171:	mov    rcx,QWORD PTR [rbp+0x58]
   140005175:	mov    QWORD PTR [rsi+0x18],rax
   140005179:	lea    r12,[rip+0x3838]        # 0x1400089b8
   140005180:	cmp    QWORD PTR [rsi+0x18],rdi
   140005184:	jne    0x1400051d5
   140005186:	test   rcx,rcx
   140005189:	je     0x1400051ca
   14000518b:	mov    edi,DWORD PTR [rbp+0x48]
   14000518e:	lea    r9,[rip+0x3a93]        # 0x140008c28
   140005195:	xor    edx,edx
   140005197:	mov    r8,rcx
   14000519a:	movzx  ebx,WORD PTR [rcx+rdi*2]
   14000519e:	mov    WORD PTR [rcx+rdi*2],dx
   1400051a2:	mov    edx,0x1
   1400051a7:	mov    rax,QWORD PTR [rip+0x51f2]        # 0x14000a3a0
   1400051ae:	mov    QWORD PTR [rsp+0x28],rax
   1400051b3:	mov    QWORD PTR [rsp+0x20],r12
   1400051b8:	lea    ecx,[rdx+0x6e]
   1400051bb:	call   0x140006e40
   1400051c0:	mov    rax,QWORD PTR [rbp+0x58]
   1400051c4:	mov    WORD PTR [rax+rdi*2],bx
   1400051c8:	xor    edi,edi
   1400051ca:	lea    rax,[rip+0x51cf]        # 0x14000a3a0
   1400051d1:	mov    QWORD PTR [rsi+0x18],rax
   1400051d5:	mov    ebx,edi
   1400051d7:	lea    r8,[rbp+0x48]
   1400051db:	lea    rdx,[rip+0x3a26]        # 0x140008c08
   1400051e2:	mov    DWORD PTR [rbp+0x58],ebx
   1400051e5:	mov    rcx,r15
   1400051e8:	call   0x140003658
   1400051ed:	mov    QWORD PTR [rbp-0x10],rax
   1400051f1:	mov    rcx,rax
   1400051f4:	test   rax,rax
   1400051f7:	je     0x140005248
   1400051f9:	mov    edx,DWORD PTR [rbp+0x48]
   1400051fc:	lea    r9,[rbp+0x58]
   140005200:	xor    r8d,r8d
   140005203:	call   0x140003b60
   140005208:	test   al,al
   14000520a:	jne    0x140005245
   14000520c:	movzx  ebx,WORD PTR [rcx+rdx*2]
   140005210:	lea    r8,[rip+0x39f1]        # 0x140008c08
   140005217:	mov    edi,edx
   140005219:	mov    QWORD PTR [rsp+0x20],rcx
   14000521e:	xor    edx,edx
   140005220:	mov    r9,r12
   140005223:	mov    WORD PTR [rcx+rdi*2],dx
   140005227:	mov    edx,0x1
   14000522c:	lea    ecx,[rdx+0x70]
   14000522f:	call   0x140006e40
   140005234:	mov    rax,QWORD PTR [rbp-0x10]
   140005238:	mov    WORD PTR [rax+rdi*2],bx
   14000523c:	xor    edi,edi
   14000523e:	mov    ebx,edi
   140005240:	mov    DWORD PTR [rbp+0x58],ebx
   140005243:	jmp    0x140005248
   140005245:	mov    ebx,DWORD PTR [rbp+0x58]
   140005248:	lea    r8,[rbp+0x48]
   14000524c:	mov    DWORD PTR [rsi+0x48],ebx
   14000524f:	lea    rdx,[rip+0x39a2]        # 0x140008bf8
   140005256:	mov    rcx,r15
   140005259:	call   0x140003658
   14000525e:	mov    QWORD PTR [rbp-0x10],rax
   140005262:	mov    rcx,rax
   140005265:	test   rax,rax
   140005268:	je     0x1400052b6
   14000526a:	mov    edx,DWORD PTR [rbp+0x48]
   14000526d:	lea    r9,[rbp+0x58]
   140005271:	mov    r8d,r13d
   140005274:	call   0x140003b60
   140005279:	test   al,al
   14000527b:	je     0x140005284
   14000527d:	mov    eax,DWORD PTR [rbp+0x58]
   140005280:	test   eax,eax
   140005282:	jns    0x1400052bc
   140005284:	lea    r8,[rip+0x396d]        # 0x140008bf8
   14000528b:	mov    r9,r12
   14000528e:	movzx  ebx,WORD PTR [rcx+rdx*2]
   140005292:	mov    rdi,rdx
   140005295:	xor    edx,edx
   140005297:	mov    QWORD PTR [rsp+0x20],rcx
   14000529c:	mov    WORD PTR [rcx+rdi*2],dx
   1400052a0:	mov    edx,0x2
   1400052a5:	lea    ecx,[rdx+0x6f]
   1400052a8:	call   0x140006e40
   1400052ad:	mov    rax,QWORD PTR [rbp-0x10]
   1400052b1:	jmp    0x140005128
   1400052b6:	mov    eax,r13d
   1400052b9:	mov    DWORD PTR [rbp+0x58],eax
   1400052bc:	lea    r8,[rbp+0x48]
   1400052c0:	mov    DWORD PTR [rsi+0x4c],eax
   1400052c3:	lea    rdx,[rip+0x398e]        # 0x140008c58
   1400052ca:	mov    rcx,r15
   1400052cd:	call   0x140003658
   1400052d2:	mov    QWORD PTR [rbp-0x10],rax
   1400052d6:	mov    rcx,rax
   1400052d9:	test   rax,rax
   1400052dc:	je     0x140005301
   1400052de:	mov    edx,DWORD PTR [rbp+0x48]
   1400052e1:	lea    r9,[rbp+0x58]
   1400052e5:	mov    r8d,r13d
   1400052e8:	call   0x140003b60
   1400052ed:	test   al,al
   1400052ef:	je     0x1400052f8
   1400052f1:	mov    eax,DWORD PTR [rbp+0x58]
   1400052f4:	test   eax,eax
   1400052f6:	jns    0x140005307
   1400052f8:	lea    r8,[rip+0x3959]        # 0x140008c58
   1400052ff:	jmp    0x14000528b
   140005301:	mov    eax,r13d
   140005304:	mov    DWORD PTR [rbp+0x58],eax
   140005307:	lea    r8,[rbp+0x48]
   14000530b:	mov    DWORD PTR [rsi+0x50],eax
   14000530e:	lea    rdx,[rip+0x3973]        # 0x140008c88
   140005315:	mov    rcx,r15
   140005318:	call   0x140003658
   14000531d:	mov    QWORD PTR [rbp-0x10],rax
   140005321:	mov    rcx,rax
   140005324:	test   rax,rax
   140005327:	je     0x14000534f
   140005329:	mov    edx,DWORD PTR [rbp+0x48]
   14000532c:	lea    r9,[rbp+0x58]
   140005330:	mov    r8d,r13d
   140005333:	call   0x140003b60
   140005338:	test   al,al
   14000533a:	je     0x140005343
   14000533c:	mov    eax,DWORD PTR [rbp+0x58]
   14000533f:	test   eax,eax
   140005341:	jns    0x140005355
   140005343:	lea    r8,[rip+0x393e]        # 0x140008c88
   14000534a:	jmp    0x14000528b
   14000534f:	mov    eax,r13d
   140005352:	mov    DWORD PTR [rbp+0x58],eax
   140005355:	lea    r8,[rbp+0x48]
   140005359:	mov    DWORD PTR [rsi+0x58],eax
   14000535c:	lea    rdx,[rip+0x390d]        # 0x140008c70
   140005363:	mov    rcx,r15
   140005366:	call   0x140003658
   14000536b:	mov    QWORD PTR [rbp-0x10],rax
   14000536f:	mov    rcx,rax
   140005372:	test   rax,rax
   140005375:	je     0x14000539f
   140005377:	mov    edx,DWORD PTR [rbp+0x48]
   14000537a:	lea    r9,[rbp+0x58]
   14000537e:	mov    r8d,r13d
   140005381:	call   0x140003b60
   140005386:	test   al,al
   140005388:	je     0x140005393
   14000538a:	mov    r13d,DWORD PTR [rbp+0x58]
   14000538e:	test   r13d,r13d
   140005391:	jns    0x14000539f
   140005393:	lea    r8,[rip+0x38d6]        # 0x140008c70
   14000539a:	jmp    0x14000528b
   14000539f:	mov    rbx,QWORD PTR [rbp+0x50]
   1400053a3:	mov    DWORD PTR [rsi+0x54],r13d
   1400053a7:	mov    rax,QWORD PTR [rbx+0x28]
   1400053ab:	test   DWORD PTR [rax+0x10],0xfffffffd
   1400053b2:	je     0x140005449
   1400053b8:	lea    r8,[rbp+0x48]
   1400053bc:	mov    QWORD PTR [rsi+0x20],rdi
   1400053c0:	lea    rdx,[rip+0x3879]        # 0x140008c40
   1400053c7:	mov    rcx,r15
   1400053ca:	call   0x140003658
   1400053cf:	lea    r13,[rip+0x4f4a]        # 0x14000a320
   1400053d6:	mov    r15,rax
   1400053d9:	test   rax,rax
   1400053dc:	je     0x1400053f6
   1400053de:	mov    edx,DWORD PTR [rbp+0x48]
   1400053e1:	mov    r9d,0x5
   1400053e7:	mov    r8,r13
   1400053ea:	mov    rcx,rax
   1400053ed:	call   0x140003a78
   1400053f2:	mov    QWORD PTR [rsi+0x20],rax
   1400053f6:	cmp    QWORD PTR [rsi+0x20],rdi
   1400053fa:	jne    0x140005454
   1400053fc:	test   r15,r15
   1400053ff:	je     0x140005443
   140005401:	mov    edi,DWORD PTR [rbp+0x48]
   140005404:	lea    r9,[rip+0x3835]        # 0x140008c40
   14000540b:	xor    edx,edx
   14000540d:	mov    r8,r15
   140005410:	movzx  ebx,WORD PTR [r15+rdi*2]
   140005415:	mov    WORD PTR [r15+rdi*2],dx
   14000541a:	mov    edx,0x1
   14000541f:	mov    rax,QWORD PTR [rip+0x4efa]        # 0x14000a320
   140005426:	mov    QWORD PTR [rsp+0x28],rax
   14000542b:	mov    QWORD PTR [rsp+0x20],r12
   140005430:	lea    ecx,[rdx+0x6e]
   140005433:	call   0x140006e40
   140005438:	mov    WORD PTR [r15+rdi*2],bx
   14000543d:	xor    edi,edi
   14000543f:	mov    rbx,QWORD PTR [rbp+0x50]
   140005443:	mov    QWORD PTR [rsi+0x20],r13
   140005447:	jmp    0x140005454
   140005449:	lea    rax,[rip+0x4f30]        # 0x14000a380
   140005450:	mov    QWORD PTR [rsi+0x20],rax
   140005454:	mov    QWORD PTR [rsi],rdi
   140005457:	mov    rax,QWORD PTR [rbx+0x8]
   14000545b:	test   rax,rax
   14000545e:	jne    0x140005469
   140005460:	mov    QWORD PTR [rbx+0x8],rsi
   140005464:	jmp    0x1400054a7
   140005466:	mov    rax,QWORD PTR [rax]
   140005469:	cmp    QWORD PTR [rax],rdi
   14000546c:	jne    0x140005466
   14000546e:	mov    QWORD PTR [rax],rsi
   140005471:	jmp    0x1400054a7
   140005473:	lea    r9,[rip+0x353e]        # 0x1400089b8
   14000547a:	lea    r8,[rip+0x375b]        # 0x140008bdc
   140005481:	jmp    0x14000528e
   140005486:	mov    edx,0x2
   14000548b:	lea    r9,[rip+0x3526]        # 0x1400089b8
   140005492:	lea    r8,[rip+0x3743]        # 0x140008bdc
   140005499:	lea    ecx,[rdx+0x6a]
   14000549c:	call   0x140006e40
   1400054a1:	mov    r14d,0xd
   1400054a7:	test   r14d,r14d
   1400054aa:	je     0x140005523
   1400054ac:	mov    rbx,QWORD PTR [rsi+0x60]
   1400054b0:	test   rbx,rbx
   1400054b3:	je     0x1400054c9
   1400054b5:	call   QWORD PTR [rip+0x2be5]        # 0x1400080a0
   1400054bb:	mov    r8,rbx
   1400054be:	xor    edx,edx
   1400054c0:	mov    rcx,rax
   1400054c3:	call   QWORD PTR [rip+0x2bcf]        # 0x140008098
   1400054c9:	mov    rbx,QWORD PTR [rsi+0x68]
   1400054cd:	test   rbx,rbx
   1400054d0:	je     0x1400054e6
   1400054d2:	call   QWORD PTR [rip+0x2bc8]        # 0x1400080a0
   1400054d8:	mov    r8,rbx
   1400054db:	xor    edx,edx
   1400054dd:	mov    rcx,rax
   1400054e0:	call   QWORD PTR [rip+0x2bb2]        # 0x140008098
   1400054e6:	mov    rbx,QWORD PTR [rsi+0x70]
   1400054ea:	test   rbx,rbx
   1400054ed:	je     0x140005503
   1400054ef:	call   QWORD PTR [rip+0x2bab]        # 0x1400080a0
   1400054f5:	mov    r8,rbx
   1400054f8:	xor    edx,edx
   1400054fa:	mov    rcx,rax
   1400054fd:	call   QWORD PTR [rip+0x2b95]        # 0x140008098
   140005503:	call   QWORD PTR [rip+0x2b97]        # 0x1400080a0
   140005509:	mov    r8,rsi
   14000550c:	xor    edx,edx
   14000550e:	mov    rcx,rax
   140005511:	call   QWORD PTR [rip+0x2b81]        # 0x140008098
   140005517:	mov    rsi,rdi
   14000551a:	mov    ecx,r14d
   14000551d:	call   QWORD PTR [rip+0x2b15]        # 0x140008038
   140005523:	mov    rax,rsi
   140005526:	mov    rbx,QWORD PTR [rsp+0x80]
   14000552e:	add    rsp,0x40
   140005532:	pop    r15
   140005534:	pop    r14
   140005536:	pop    r13
   140005538:	pop    r12
   14000553a:	pop    rdi
   14000553b:	pop    rsi
   14000553c:	pop    rbp
   14000553d:	ret    
   14000553e:	int3   
   14000553f:	int3   
   140005540:	int3   
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	mov    r11,rsp
   140005547:	mov    QWORD PTR [r11+0x10],rbx
   14000554b:	mov    QWORD PTR [r11+0x18],rbp
   14000554f:	mov    QWORD PTR [r11+0x20],rsi
   140005553:	push   rdi
   140005554:	push   r12
   140005556:	push   r13
   140005558:	push   r14
   14000555a:	push   r15
   14000555c:	sub    rsp,0x80
   140005563:	mov    rax,QWORD PTR [rip+0x7a9e]        # 0x14000d008
   14000556a:	xor    rax,rsp
   14000556d:	mov    QWORD PTR [rsp+0x70],rax
   140005572:	lea    r8,[r11-0x78]
   140005576:	mov    rsi,rcx
   140005579:	lea    rdx,[rip+0x34f8]        # 0x140008a78
   140005580:	call   0x140003658
   140005585:	xor    r15d,r15d
   140005588:	test   rax,rax
   14000558b:	jne    0x140005592
   14000558d:	xorps  xmm0,xmm0
   140005590:	jmp    0x1400055d5
   140005592:	cmp    DWORD PTR [rsp+0x30],0x14
   140005597:	jb     0x1400055a3
   140005599:	mov    ebp,0x7a
   14000559e:	jmp    0x1400057ab
   1400055a3:	mov    ebx,DWORD PTR [rsp+0x30]
   1400055a7:	lea    rcx,[rsp+0x48]
   1400055ac:	add    rbx,rbx
   1400055af:	mov    rdx,rax
   1400055b2:	mov    r8,rbx
   1400055b5:	call   0x140007ea2
   1400055ba:	cmp    rbx,0x28
   1400055be:	jae    0x1400058fd
   1400055c4:	lea    rcx,[rsp+0x48]
   1400055c9:	mov    WORD PTR [rsp+rbx*1+0x48],r15w
   1400055cf:	call   QWORD PTR [rip+0x2db3]        # 0x140008388
   1400055d5:	movsd  QWORD PTR [rip+0x8073],xmm0        # 0x14000d650
   1400055dd:	mov    ebp,r15d
   1400055e0:	call   0x140007e96
   1400055e5:	comisd xmm0,QWORD PTR [rip+0x55f3]        # 0x14000abe0
   1400055ed:	jbe    0x1400055f9
   1400055ef:	mov    ebp,0x47e
   1400055f4:	jmp    0x1400057ab
   1400055f9:	mov    rcx,rsi
   1400055fc:	mov    ebx,r15d
   1400055ff:	call   0x140003998
   140005604:	test   al,al
   140005606:	je     0x14000579e
   14000560c:	lea    rdx,[rip+0x3375]        # 0x140008988
   140005613:	mov    rcx,rsi
   140005616:	call   0x140003918
   14000561b:	test   al,al
   14000561d:	je     0x14000578e
   140005623:	mov    rcx,rsi
   140005626:	call   0x140004638
   14000562b:	mov    QWORD PTR [rsp+0x40],rax
   140005630:	mov    r14,rax
   140005633:	test   rax,rax
   140005636:	je     0x1400058f0
   14000563c:	mov    ecx,DWORD PTR [rip+0x7a2a]        # 0x14000d06c
   140005642:	mov    edi,r15d
   140005645:	cmp    BYTE PTR [rip+0x8000],r15b        # 0x14000d64c
   14000564c:	cmovne ecx,DWORD PTR [rip+0x7a15]        # 0x14000d068
   140005653:	inc    ebx
   140005655:	mov    DWORD PTR [rip+0x7a11],ecx        # 0x14000d06c
   14000565b:	mov    rcx,rsi
   14000565e:	mov    DWORD PTR [rsp+0x34],ebx
   140005662:	call   0x140003998
   140005667:	test   al,al
   140005669:	je     0x140005771
   14000566f:	lea    rdx,[rip+0x332a]        # 0x1400089a0
   140005676:	mov    rcx,rsi
   140005679:	call   0x140003918
   14000567e:	test   al,al
   140005680:	je     0x140005761
   140005686:	mov    rdx,r14
   140005689:	mov    rcx,rsi
   14000568c:	call   0x1400049c0
   140005691:	mov    r13,rax
   140005694:	test   rax,rax
   140005697:	je     0x1400058f0
   14000569d:	inc    edi
   14000569f:	mov    rcx,rsi
   1400056a2:	mov    DWORD PTR [rsp+0x38],edi
   1400056a6:	mov    r12d,r15d
   1400056a9:	call   0x140003998
   1400056ae:	test   al,al
   1400056b0:	je     0x14000572d
   1400056b2:	lea    rdx,[rip+0x32ff]        # 0x1400089b8
   1400056b9:	mov    rcx,rsi
   1400056bc:	call   0x140003918
   1400056c1:	test   al,al
   1400056c3:	je     0x14000571c
   1400056c5:	mov    r8,r13
   1400056c8:	mov    rcx,rsi
   1400056cb:	call   0x140004e14
   1400056d0:	xor    ebx,ebx
   1400056d2:	mov    r15,rax
   1400056d5:	test   rax,rax
   1400056d8:	je     0x1400058f0
   1400056de:	mov    rcx,rsi
   1400056e1:	inc    r12d
   1400056e4:	call   0x140003998
   1400056e9:	test   al,al
   1400056eb:	jne    0x1400058c1
   1400056f1:	xor    r15d,r15d
   1400056f4:	mov    rcx,rsi
   1400056f7:	call   0x14000382c
   1400056fc:	test   al,al
   1400056fe:	je     0x140005713
   140005700:	lea    rdx,[rip+0x32b1]        # 0x1400089b8
   140005707:	mov    rcx,rsi
   14000570a:	call   0x140003918
   14000570f:	test   al,al
   140005711:	jne    0x1400056c5
   140005713:	mov    r14,QWORD PTR [rsp+0x40]
   140005718:	mov    edi,DWORD PTR [rsp+0x38]
   14000571c:	mov    eax,DWORD PTR [rsi+0x10]
   14000571f:	test   eax,eax
   140005721:	je     0x140005728
   140005723:	dec    eax
   140005725:	mov    DWORD PTR [rsi+0x10],eax
   140005728:	test   r12d,r12d
   14000572b:	jne    0x14000573a
   14000572d:	mov    edx,0x1
   140005732:	lea    ecx,[rdx+0x7a]
   140005735:	call   0x140006e40
   14000573a:	mov    rcx,rsi
   14000573d:	call   0x14000382c
   140005742:	test   al,al
   140005744:	je     0x14000575d
   140005746:	lea    rdx,[rip+0x3253]        # 0x1400089a0
   14000574d:	mov    rcx,rsi
   140005750:	call   0x140003918
   140005755:	test   al,al
   140005757:	jne    0x140005686
   14000575d:	mov    ebx,DWORD PTR [rsp+0x34]
   140005761:	mov    eax,DWORD PTR [rsi+0x10]
   140005764:	test   eax,eax
   140005766:	je     0x14000576d
   140005768:	dec    eax
   14000576a:	mov    DWORD PTR [rsi+0x10],eax
   14000576d:	test   edi,edi
   14000576f:	jne    0x14000577e
   140005771:	mov    edx,0x1
   140005776:	lea    ecx,[rdx+0x79]
   140005779:	call   0x140006e40
   14000577e:	mov    rcx,rsi
   140005781:	call   0x14000382c
   140005786:	test   al,al
   140005788:	jne    0x14000560c
   14000578e:	mov    eax,DWORD PTR [rsi+0x10]
   140005791:	test   eax,eax
   140005793:	je     0x14000579a
   140005795:	dec    eax
   140005797:	mov    DWORD PTR [rsi+0x10],eax
   14000579a:	test   ebx,ebx
   14000579c:	jne    0x1400057ab
   14000579e:	mov    edx,0x1
   1400057a3:	lea    ecx,[rdx+0x78]
   1400057a6:	call   0x140006e40
   1400057ab:	mov    eax,ebp
   1400057ad:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057b2:	xor    rcx,rsp
   1400057b5:	call   0x140007730
   1400057ba:	lea    r11,[rsp+0x80]
   1400057c2:	mov    rbx,QWORD PTR [r11+0x38]
   1400057c6:	mov    rbp,QWORD PTR [r11+0x40]
   1400057ca:	mov    rsi,QWORD PTR [r11+0x48]
   1400057ce:	mov    rsp,r11
   1400057d1:	pop    r15
   1400057d3:	pop    r14
   1400057d5:	pop    r13
   1400057d7:	pop    r12
   1400057d9:	pop    rdi
   1400057da:	ret    
   1400057db:	mov    rcx,rsi
   1400057de:	call   0x140003998
   1400057e3:	test   al,al
   1400057e5:	je     0x1400058d8
   1400057eb:	lea    rdi,[rip+0x31fe]        # 0x1400089f0
   1400057f2:	mov    rcx,rsi
   1400057f5:	mov    rdx,rdi
   1400057f8:	call   0x140003918
   1400057fd:	test   al,al
   1400057ff:	je     0x1400058a9
   140005805:	mov    ebp,ebx
   140005807:	lea    r8,[rsp+0x30]
   14000580c:	mov    rcx,rsi
   14000580f:	lea    rdx,[rip+0x335a]        # 0x140008b70
   140005816:	call   0x140003658
   14000581b:	mov    r14,rax
   14000581e:	test   rax,rax
   140005821:	je     0x14000588a
   140005823:	mov    edx,DWORD PTR [rsp+0x30]
   140005827:	lea    r8,[rip+0x4ff2]        # 0x14000a820
   14000582e:	mov    r9d,0x5
   140005834:	mov    rcx,rax
   140005837:	call   0x140003a78
   14000583c:	test   rax,rax
   14000583f:	jne    0x140005882
   140005841:	mov    edi,DWORD PTR [rsp+0x30]
   140005845:	lea    r9,[rip+0x3324]        # 0x140008b70
   14000584c:	mov    edx,0x1
   140005851:	mov    r8,r14
   140005854:	movzx  ebx,WORD PTR [r14+rdi*2]
   140005859:	mov    WORD PTR [r14+rdi*2],ax
   14000585e:	lea    ecx,[rdx+0x6f]
   140005861:	lea    rax,[rip+0x3188]        # 0x1400089f0
   140005868:	mov    QWORD PTR [rsp+0x20],rax
   14000586d:	call   0x140006e40
   140005872:	mov    WORD PTR [r14+rdi*2],bx
   140005877:	xor    ebx,ebx
   140005879:	lea    rdi,[rip+0x3170]        # 0x1400089f0
   140005880:	jmp    0x14000588a
   140005882:	mov    rax,QWORD PTR [rax+0x10]
   140005886:	or     QWORD PTR [r15+0x28],rax
   14000588a:	mov    rcx,rsi
   14000588d:	call   0x14000382c
   140005892:	test   al,al
   140005894:	je     0x1400058a9
   140005896:	mov    rdx,rdi
   140005899:	mov    rcx,rsi
   14000589c:	call   0x140003918
   1400058a1:	test   al,al
   1400058a3:	jne    0x140005807
   1400058a9:	mov    eax,DWORD PTR [rsi+0x10]
   1400058ac:	test   eax,eax
   1400058ae:	je     0x1400058b5
   1400058b0:	dec    eax
   1400058b2:	mov    DWORD PTR [rsi+0x10],eax
   1400058b5:	mov    rcx,rsi
   1400058b8:	call   0x14000382c
   1400058bd:	test   al,al
   1400058bf:	je     0x1400058d8
   1400058c1:	lea    rdx,[rip+0x3100]        # 0x1400089c8
   1400058c8:	mov    rcx,rsi
   1400058cb:	call   0x140003918
   1400058d0:	test   al,al
   1400058d2:	jne    0x1400057db
   1400058d8:	mov    eax,DWORD PTR [rsi+0x10]
   1400058db:	xor    r15d,r15d
   1400058de:	test   eax,eax
   1400058e0:	je     0x1400056f4
   1400058e6:	dec    eax
   1400058e8:	mov    DWORD PTR [rsi+0x10],eax
   1400058eb:	jmp    0x1400056f4
   1400058f0:	call   QWORD PTR [rip+0x2732]        # 0x140008028
   1400058f6:	mov    ebp,eax
   1400058f8:	jmp    0x1400057ab
   1400058fd:	call   0x140007c38
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	mov    rax,rsp
   14000590f:	mov    QWORD PTR [rax+0x10],rbx
   140005913:	mov    QWORD PTR [rax+0x18],rbp
   140005917:	mov    QWORD PTR [rax+0x20],rsi
   14000591b:	push   rdi
   14000591c:	push   r14
   14000591e:	push   r15
   140005920:	sub    rsp,0x30
   140005924:	movaps XMMWORD PTR [rax-0x28],xmm6
   140005928:	mov    rdi,rcx
   14000592b:	test   rcx,rcx
   14000592e:	jne    0x140005945
   140005930:	lea    edx,[rcx+0x2]
   140005933:	lea    ecx,[rdi+0x65]
   140005936:	call   0x140006e40
   14000593b:	mov    edi,0x57
   140005940:	jmp    0x140005c90
   140005945:	call   QWORD PTR [rip+0x2755]        # 0x1400080a0
   14000594b:	mov    edx,0x8
   140005950:	mov    r8d,0xc18
   140005956:	mov    rcx,rax
   140005959:	call   QWORD PTR [rip+0x2729]        # 0x140008088
   14000595f:	mov    rbx,rax
   140005962:	test   rax,rax
   140005965:	jne    0x140005980
   140005967:	lea    edx,[rax+0x2]
   14000596a:	mov    r8d,0xa56
   140005970:	lea    ecx,[rax+0x66]
   140005973:	call   0x140006e40
   140005978:	lea    edi,[rbx+0xe]
   14000597b:	jmp    0x140005c90
   140005980:	mov    rdx,rdi
   140005983:	mov    rcx,rax
   140005986:	call   0x14000332c
   14000598b:	mov    edi,eax
   14000598d:	test   eax,eax
   14000598f:	jne    0x140005c70
   140005995:	mov    rcx,rbx
   140005998:	call   0x140003998
   14000599d:	test   al,al
   14000599f:	jne    0x1400059b6
   1400059a1:	lea    edx,[rdi+0x2]
   1400059a4:	lea    ecx,[rdi+0x67]
   1400059a7:	call   0x140006e40
   1400059ac:	mov    edi,0xd
   1400059b1:	jmp    0x140005c70
   1400059b6:	xor    edx,edx
   1400059b8:	mov    rcx,rbx
   1400059bb:	xor    r14d,r14d
   1400059be:	call   0x140003918
   1400059c3:	lea    r15d,[r14+0x1]
   1400059c7:	test   al,al
   1400059c9:	je     0x140005c57
   1400059cf:	movsd  xmm6,QWORD PTR [rip+0x5201]        # 0x14000abd8
   1400059d7:	lea    rdx,[rsp+0x50]
   1400059dc:	mov    rcx,rbx
   1400059df:	call   0x1400035ec
   1400059e4:	mov    rsi,rax
   1400059e7:	test   rax,rax
   1400059ea:	je     0x140005c28
   1400059f0:	lea    rcx,[rip+0x2f11]        # 0x140008908
   1400059f7:	call   QWORD PTR [rip+0x2803]        # 0x140008200
   1400059fd:	cmp    DWORD PTR [rsp+0x50],eax
   140005a01:	jb     0x140005c28
   140005a07:	mov    ebp,DWORD PTR [rsp+0x50]
   140005a0b:	lea    rdx,[rip+0x2ef6]        # 0x140008908
   140005a12:	mov    r8d,ebp
   140005a15:	mov    rcx,rsi
   140005a18:	call   QWORD PTR [rip+0x2972]        # 0x140008390
   140005a1e:	test   eax,eax
   140005a20:	je     0x140005a3d
   140005a22:	mov    r8d,ebp
   140005a25:	lea    rdx,[rip+0x2ef4]        # 0x140008920
   140005a2c:	mov    rcx,rsi
   140005a2f:	call   QWORD PTR [rip+0x295b]        # 0x140008390
   140005a35:	test   eax,eax
   140005a37:	jne    0x140005c28
   140005a3d:	cmp    WORD PTR [rsi+rbp*2],0x3e
   140005a42:	ja     0x140005c28
   140005a48:	movzx  eax,WORD PTR [rsi+rbp*2]
   140005a4c:	movabs rcx,0x4000000100002600
   140005a56:	bt     rcx,rax
   140005a5a:	jae    0x140005c28
   140005a60:	mov    rcx,rbx
   140005a63:	call   0x140003998
   140005a68:	test   al,al
   140005a6a:	je     0x140005c28
   140005a70:	jmp    0x140005c0a
   140005a75:	lea    rdx,[rsp+0x50]
   140005a7a:	mov    rcx,rbx
   140005a7d:	call   0x1400035ec
   140005a82:	mov    rsi,rax
   140005a85:	test   rax,rax
   140005a88:	je     0x140005bfe
   140005a8e:	mov    ebp,DWORD PTR [rsp+0x50]
   140005a92:	lea    rdx,[rip+0x2eb7]        # 0x140008950
   140005a99:	mov    r8d,ebp
   140005a9c:	mov    rcx,rax
   140005a9f:	call   QWORD PTR [rip+0x28eb]        # 0x140008390
   140005aa5:	test   eax,eax
   140005aa7:	jne    0x140005b20
   140005aa9:	mov    rcx,rbx
   140005aac:	add    r14d,r15d
   140005aaf:	xor    esi,esi
   140005ab1:	call   0x140003998
   140005ab6:	test   al,al
   140005ab8:	jne    0x140005ae2
   140005aba:	mov    ecx,0x78
   140005abf:	jmp    0x140005b13
   140005ac1:	mov    rcx,rbx
   140005ac4:	add    esi,r15d
   140005ac7:	call   0x140005544
   140005acc:	mov    edi,eax
   140005ace:	test   eax,eax
   140005ad0:	jne    0x140005c70
   140005ad6:	mov    rcx,rbx
   140005ad9:	call   0x14000382c
   140005ade:	test   al,al
   140005ae0:	je     0x140005af5
   140005ae2:	lea    rdx,[rip+0x2e87]        # 0x140008970
   140005ae9:	mov    rcx,rbx
   140005aec:	call   0x140003918
   140005af1:	test   al,al
   140005af3:	jne    0x140005ac1
   140005af5:	mov    eax,DWORD PTR [rbx+0x10]
   140005af8:	test   eax,eax
   140005afa:	je     0x140005b01
   140005afc:	dec    eax
   140005afe:	mov    DWORD PTR [rbx+0x10],eax
   140005b01:	test   esi,esi
   140005b03:	je     0x140005aba
   140005b05:	cmp    esi,r15d
   140005b08:	jbe    0x140005bfe
   140005b0e:	mov    ecx,0x7d
   140005b13:	mov    edx,r15d
   140005b16:	call   0x140006e40
   140005b1b:	jmp    0x140005bfe
   140005b20:	comisd xmm6,QWORD PTR [rip+0x7b28]        # 0x14000d650
   140005b28:	jbe    0x140005bfe
   140005b2e:	mov    r8,rbp
   140005b31:	lea    rdx,[rip+0x2ee0]        # 0x140008a18
   140005b38:	mov    rcx,rsi
   140005b3b:	call   QWORD PTR [rip+0x284f]        # 0x140008390
   140005b41:	test   eax,eax
   140005b43:	jne    0x140005bfe
   140005b49:	mov    rcx,rbx
   140005b4c:	call   0x140003998
   140005b51:	test   al,al
   140005b53:	je     0x140005bfe
   140005b59:	lea    rdx,[rip+0x2ed8]        # 0x140008a38
   140005b60:	mov    rcx,rbx
   140005b63:	call   0x140003918
   140005b68:	test   al,al
   140005b6a:	je     0x140005bf2
   140005b70:	lea    r8,[rsp+0x50]
   140005b75:	mov    rcx,rbx
   140005b78:	lea    rdx,[rip+0x3129]        # 0x140008ca8
   140005b7f:	call   0x140003658
   140005b84:	mov    rcx,rbx
   140005b87:	call   0x140003998
   140005b8c:	test   al,al
   140005b8e:	je     0x140005bf2
   140005b90:	lea    rdx,[rip+0x2eb9]        # 0x140008a50
   140005b97:	mov    rcx,rbx
   140005b9a:	call   0x140003918
   140005b9f:	test   al,al
   140005ba1:	je     0x140005be6
   140005ba3:	mov    rcx,rbx
   140005ba6:	call   0x140003998
   140005bab:	test   al,al
   140005bad:	je     0x140005be6
   140005baf:	jmp    0x140005bc7
   140005bb1:	mov    rcx,rbx
   140005bb4:	call   0x140004584
   140005bb9:	mov    rcx,rbx
   140005bbc:	mov    edi,eax
   140005bbe:	call   0x14000382c
   140005bc3:	test   al,al
   140005bc5:	je     0x140005bda
   140005bc7:	lea    rdx,[rip+0x2e9a]        # 0x140008a68
   140005bce:	mov    rcx,rbx
   140005bd1:	call   0x140003918
   140005bd6:	test   al,al
   140005bd8:	jne    0x140005bb1
   140005bda:	mov    eax,DWORD PTR [rbx+0x10]
   140005bdd:	test   eax,eax
   140005bdf:	je     0x140005be6
   140005be1:	dec    eax
   140005be3:	mov    DWORD PTR [rbx+0x10],eax
   140005be6:	mov    eax,DWORD PTR [rbx+0x10]
   140005be9:	test   eax,eax
   140005beb:	je     0x140005bf2
   140005bed:	dec    eax
   140005bef:	mov    DWORD PTR [rbx+0x10],eax
   140005bf2:	mov    eax,DWORD PTR [rbx+0x10]
   140005bf5:	test   eax,eax
   140005bf7:	je     0x140005bfe
   140005bf9:	dec    eax
   140005bfb:	mov    DWORD PTR [rbx+0x10],eax
   140005bfe:	mov    rcx,rbx
   140005c01:	call   0x14000382c
   140005c06:	test   al,al
   140005c08:	je     0x140005c1c
   140005c0a:	xor    edx,edx
   140005c0c:	mov    rcx,rbx
   140005c0f:	call   0x140003918
   140005c14:	test   al,al
   140005c16:	jne    0x140005a75
   140005c1c:	mov    eax,DWORD PTR [rbx+0x10]
   140005c1f:	test   eax,eax
   140005c21:	je     0x140005c28
   140005c23:	dec    eax
   140005c25:	mov    DWORD PTR [rbx+0x10],eax
   140005c28:	mov    rcx,rbx
   140005c2b:	call   0x14000382c
   140005c30:	test   al,al
   140005c32:	je     0x140005c46
   140005c34:	xor    edx,edx
   140005c36:	mov    rcx,rbx
   140005c39:	call   0x140003918
   140005c3e:	test   al,al
   140005c40:	jne    0x1400059d7
   140005c46:	test   r14d,r14d
   140005c49:	je     0x140005c57
   140005c4b:	cmp    r14d,r15d
   140005c4e:	jbe    0x140005c64
   140005c50:	mov    ecx,0x7c
   140005c55:	jmp    0x140005c5c
   140005c57:	mov    ecx,0x77
   140005c5c:	mov    edx,r15d
   140005c5f:	call   0x140006e40
   140005c64:	mov    eax,DWORD PTR [rbx+0x10]
   140005c67:	test   eax,eax
   140005c69:	je     0x140005c70
   140005c6b:	dec    eax
   140005c6d:	mov    DWORD PTR [rbx+0x10],eax
   140005c70:	mov    rcx,rbx
   140005c73:	call   0x1400032dc
   140005c78:	call   QWORD PTR [rip+0x2422]        # 0x1400080a0
   140005c7e:	mov    r8,rbx
   140005c81:	xor    edx,edx
   140005c83:	mov    rcx,rax
   140005c86:	call   QWORD PTR [rip+0x240c]        # 0x140008098
   140005c8c:	test   edi,edi
   140005c8e:	je     0x140005c95
   140005c90:	call   0x140005cbc
   140005c95:	mov    rbx,QWORD PTR [rsp+0x58]
   140005c9a:	mov    eax,edi
   140005c9c:	mov    rbp,QWORD PTR [rsp+0x60]
   140005ca1:	mov    rsi,QWORD PTR [rsp+0x68]
   140005ca6:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140005cab:	add    rsp,0x30
   140005caf:	pop    r15
   140005cb1:	pop    r14
   140005cb3:	pop    rdi
   140005cb4:	ret    
   140005cb5:	int3   
   140005cb6:	int3   
   140005cb7:	int3   
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	mov    QWORD PTR [rsp+0x10],rbx
   140005cc1:	mov    QWORD PTR [rsp+0x18],rbp
   140005cc6:	mov    QWORD PTR [rsp+0x20],rsi
   140005ccb:	push   rdi
   140005ccc:	push   r12
   140005cce:	push   r13
   140005cd0:	push   r14
   140005cd2:	push   r15
   140005cd4:	sub    rsp,0x20
   140005cd8:	call   QWORD PTR [rip+0x23c2]        # 0x1400080a0
   140005cde:	mov    rsi,QWORD PTR [rip+0x7943]        # 0x14000d628
   140005ce5:	xor    r12d,r12d
   140005ce8:	mov    r14,QWORD PTR [rip+0x7951]        # 0x14000d640
   140005cef:	mov    rbp,rax
   140005cf2:	test   rsi,rsi
   140005cf5:	je     0x140005e1c
   140005cfb:	mov    rbx,QWORD PTR [rsi+0x8]
   140005cff:	mov    r13,QWORD PTR [rsi]
   140005d02:	test   rbx,rbx
   140005d05:	je     0x140005e02
   140005d0b:	mov    rdi,QWORD PTR [rbx+0x8]
   140005d0f:	mov    r15,QWORD PTR [rbx]
   140005d12:	mov    QWORD PTR [rsp+0x50],r15
   140005d17:	test   rdi,rdi
   140005d1a:	je     0x140005d91
   140005d1c:	mov    r15,QWORD PTR [rdi+0x60]
   140005d20:	mov    r12,QWORD PTR [rdi]
   140005d23:	test   r15,r15
   140005d26:	je     0x140005d3c
   140005d28:	call   QWORD PTR [rip+0x2372]        # 0x1400080a0
   140005d2e:	mov    r8,r15
   140005d31:	xor    edx,edx
   140005d33:	mov    rcx,rax
   140005d36:	call   QWORD PTR [rip+0x235c]        # 0x140008098
   140005d3c:	mov    r15,QWORD PTR [rdi+0x68]
   140005d40:	test   r15,r15
   140005d43:	je     0x140005d59
   140005d45:	call   QWORD PTR [rip+0x2355]        # 0x1400080a0
   140005d4b:	mov    r8,r15
   140005d4e:	xor    edx,edx
   140005d50:	mov    rcx,rax
   140005d53:	call   QWORD PTR [rip+0x233f]        # 0x140008098
   140005d59:	mov    r15,QWORD PTR [rdi+0x70]
   140005d5d:	test   r15,r15
   140005d60:	je     0x140005d76
   140005d62:	call   QWORD PTR [rip+0x2338]        # 0x1400080a0
   140005d68:	mov    r8,r15
   140005d6b:	xor    edx,edx
   140005d6d:	mov    rcx,rax
   140005d70:	call   QWORD PTR [rip+0x2322]        # 0x140008098
   140005d76:	mov    r8,rdi
   140005d79:	xor    edx,edx
   140005d7b:	mov    rcx,rbp
   140005d7e:	call   QWORD PTR [rip+0x2314]        # 0x140008098
   140005d84:	mov    rdi,r12
   140005d87:	test   r12,r12
   140005d8a:	jne    0x140005d1c
   140005d8c:	mov    r15,QWORD PTR [rsp+0x50]
   140005d91:	mov    rdi,QWORD PTR [rbx+0x40]
   140005d95:	test   rdi,rdi
   140005d98:	je     0x140005dae
   140005d9a:	call   QWORD PTR [rip+0x2300]        # 0x1400080a0
   140005da0:	mov    r8,rdi
   140005da3:	xor    edx,edx
   140005da5:	mov    rcx,rax
   140005da8:	call   QWORD PTR [rip+0x22ea]        # 0x140008098
   140005dae:	mov    rdi,QWORD PTR [rbx+0x48]
   140005db2:	test   rdi,rdi
   140005db5:	je     0x140005dcb
   140005db7:	call   QWORD PTR [rip+0x22e3]        # 0x1400080a0
   140005dbd:	mov    r8,rdi
   140005dc0:	xor    edx,edx
   140005dc2:	mov    rcx,rax
   140005dc5:	call   QWORD PTR [rip+0x22cd]        # 0x140008098
   140005dcb:	mov    rdi,QWORD PTR [rbx+0x50]
   140005dcf:	test   rdi,rdi
   140005dd2:	je     0x140005de8
   140005dd4:	call   QWORD PTR [rip+0x22c6]        # 0x1400080a0
   140005dda:	mov    r8,rdi
   140005ddd:	xor    edx,edx
   140005ddf:	mov    rcx,rax
   140005de2:	call   QWORD PTR [rip+0x22b0]        # 0x140008098
   140005de8:	mov    r8,rbx
   140005deb:	xor    edx,edx
   140005ded:	mov    rcx,rbp
   140005df0:	call   QWORD PTR [rip+0x22a2]        # 0x140008098
   140005df6:	mov    rbx,r15
   140005df9:	test   r15,r15
   140005dfc:	jne    0x140005d0b
   140005e02:	mov    r8,rsi
   140005e05:	xor    edx,edx
   140005e07:	mov    rcx,rbp
   140005e0a:	call   QWORD PTR [rip+0x2288]        # 0x140008098
   140005e10:	mov    rsi,r13
   140005e13:	test   r13,r13
   140005e16:	jne    0x140005cfb
   140005e1c:	test   r14,r14
   140005e1f:	je     0x140005e3a
   140005e21:	mov    rbx,QWORD PTR [r14]
   140005e24:	mov    r8,r14
   140005e27:	xor    edx,edx
   140005e29:	mov    rcx,rbp
   140005e2c:	call   QWORD PTR [rip+0x2266]        # 0x140008098
   140005e32:	mov    r14,rbx
   140005e35:	test   rbx,rbx
   140005e38:	jne    0x140005e21
   140005e3a:	mov    r8,QWORD PTR [rip+0x77ef]        # 0x14000d630
   140005e41:	test   r8,r8
   140005e44:	je     0x140005e51
   140005e46:	xor    edx,edx
   140005e48:	mov    rcx,rbp
   140005e4b:	call   QWORD PTR [rip+0x2247]        # 0x140008098
   140005e51:	mov    rbx,QWORD PTR [rsp+0x58]
   140005e56:	mov    eax,0x1
   140005e5b:	mov    rbp,QWORD PTR [rsp+0x60]
   140005e60:	xorps  xmm0,xmm0
   140005e63:	mov    rsi,QWORD PTR [rsp+0x68]
   140005e68:	movsd  QWORD PTR [rip+0x77e0],xmm0        # 0x14000d650
   140005e70:	mov    DWORD PTR [rip+0x71f6],eax        # 0x14000d06c
   140005e76:	mov    DWORD PTR [rip+0x71ec],eax        # 0x14000d068
   140005e7c:	mov    QWORD PTR [rip+0x77a5],r12        # 0x14000d628
   140005e83:	mov    QWORD PTR [rip+0x77b6],r12        # 0x14000d640
   140005e8a:	mov    QWORD PTR [rip+0x779f],r12        # 0x14000d630
   140005e91:	mov    DWORD PTR [rip+0x77a0],r12d        # 0x14000d638
   140005e98:	mov    DWORD PTR [rip+0x77a9],r12d        # 0x14000d648
   140005e9f:	mov    BYTE PTR [rip+0x77a6],r12b        # 0x14000d64c
   140005ea6:	add    rsp,0x20
   140005eaa:	pop    r15
   140005eac:	pop    r14
   140005eae:	pop    r13
   140005eb0:	pop    r12
   140005eb2:	pop    rdi
   140005eb3:	ret    
   140005eb4:	int3   
   140005eb5:	int3   
   140005eb6:	int3   
   140005eb7:	int3   
   140005eb8:	int3   
   140005eb9:	int3   
   140005eba:	int3   
   140005ebb:	int3   
   140005ebc:	mov    QWORD PTR [rsp+0x10],rbx
   140005ec1:	mov    QWORD PTR [rsp+0x18],rbp
   140005ec6:	mov    QWORD PTR [rsp+0x20],rsi
   140005ecb:	push   rdi
   140005ecc:	push   r12
   140005ece:	push   r13
   140005ed0:	push   r14
   140005ed2:	push   r15
   140005ed4:	sub    rsp,0x30
   140005ed8:	mov    r15,QWORD PTR [rip+0x7749]        # 0x14000d628
   140005edf:	xor    edi,edi
   140005ee1:	mov    QWORD PTR [rsp+0x60],r15
   140005ee6:	mov    rcx,r15
   140005ee9:	test   r15,r15
   140005eec:	je     0x140005f34
   140005eee:	mov    r8,QWORD PTR [rcx]
   140005ef1:	mov    rdx,r8
   140005ef4:	test   r8,r8
   140005ef7:	je     0x140005f15
   140005ef9:	mov    rax,QWORD PTR [rcx+0x10]
   140005efd:	cmp    rax,QWORD PTR [rdx+0x10]
   140005f01:	jne    0x140005f0d
   140005f03:	mov    rax,QWORD PTR [rcx+0x18]
   140005f07:	cmp    rax,QWORD PTR [rdx+0x18]
   140005f0b:	je     0x140005f1d
   140005f0d:	mov    rdx,QWORD PTR [rdx]
   140005f10:	test   rdx,rdx
   140005f13:	jne    0x140005ef9
   140005f15:	mov    rcx,r8
   140005f18:	test   r8,r8
   140005f1b:	jmp    0x140005eec
   140005f1d:	mov    ecx,0x73
   140005f22:	mov    edx,0x2
   140005f27:	lea    edi,[rdx+0xb]
   140005f2a:	call   0x140006e40
   140005f2f:	jmp    0x14000650b
   140005f34:	mov    rdx,r15
   140005f37:	test   r15,r15
   140005f3a:	je     0x140005fb5
   140005f3c:	mov    rcx,QWORD PTR [rdx+0x8]
   140005f40:	test   rcx,rcx
   140005f43:	je     0x140005fa3
   140005f45:	mov    r10,QWORD PTR [rcx]
   140005f48:	mov    r8,r10
   140005f4b:	test   r10,r10
   140005f4e:	je     0x140005f6c
   140005f50:	mov    rax,QWORD PTR [rcx+0x10]
   140005f54:	cmp    rax,QWORD PTR [r8+0x10]
   140005f58:	jne    0x140005f64
   140005f5a:	mov    rax,QWORD PTR [rcx+0x18]
   140005f5e:	cmp    rax,QWORD PTR [r8+0x18]
   140005f62:	je     0x140005fab
   140005f64:	mov    r8,QWORD PTR [r8]
   140005f67:	test   r8,r8
   140005f6a:	jne    0x140005f50
   140005f6c:	mov    r9,QWORD PTR [rdx]
   140005f6f:	jmp    0x140005f96
   140005f71:	mov    r8,QWORD PTR [r9+0x8]
   140005f75:	jmp    0x140005f8e
   140005f77:	mov    rax,QWORD PTR [rcx+0x10]
   140005f7b:	cmp    rax,QWORD PTR [r8+0x10]
   140005f7f:	jne    0x140005f8b
   140005f81:	mov    rax,QWORD PTR [rcx+0x18]
   140005f85:	cmp    rax,QWORD PTR [r8+0x18]
   140005f89:	je     0x140005fab
   140005f8b:	mov    r8,QWORD PTR [r8]
   140005f8e:	test   r8,r8
   140005f91:	jne    0x140005f77
   140005f93:	mov    r9,QWORD PTR [r9]
   140005f96:	test   r9,r9
   140005f99:	jne    0x140005f71
   140005f9b:	mov    rcx,r10
   140005f9e:	test   r10,r10
   140005fa1:	jne    0x140005f45
   140005fa3:	mov    rdx,QWORD PTR [rdx]
   140005fa6:	test   rdx,rdx
   140005fa9:	jmp    0x140005f3a
   140005fab:	mov    ecx,0x74
   140005fb0:	jmp    0x140005f22
   140005fb5:	mov    esi,0xd
   140005fba:	lea    r13,[rip+0x2c37]        # 0x140008bf8
   140005fc1:	or     r12d,0xffffffff
   140005fc5:	lea    rdx,[rip+0x3b9c]        # 0x140009b68
   140005fcc:	lea    r9,[rip+0x388d]        # 0x140009860
   140005fd3:	lea    ebp,[rsi-0xb]
   140005fd6:	lea    r11d,[rsi+0x69]
   140005fda:	lea    r10d,[rsi+0x68]
   140005fde:	test   r15,r15
   140005fe1:	je     0x14000650b
   140005fe7:	mov    r14,QWORD PTR [r15+0x8]
   140005feb:	test   edi,edi
   140005fed:	jne    0x1400064fb
   140005ff3:	lea    r15,[rip+0x403e]        # 0x14000a038
   140005ffa:	test   r14,r14
   140005ffd:	je     0x1400064f6
   140006003:	mov    rbx,QWORD PTR [r14+0x8]
   140006007:	jmp    0x1400064e3
   14000600c:	test   rbx,rbx
   14000600f:	je     0x1400064eb
   140006015:	mov    r8,QWORD PTR [rbx+0x10]
   140006019:	mov    ecx,DWORD PTR [r8+0x10]
   14000601d:	cmp    ecx,0x20c20400
   140006023:	ja     0x140006226
   140006029:	je     0x1400061c8
   14000602f:	cmp    ecx,0x650500
   140006035:	je     0x140006070
   140006037:	cmp    ecx,0x20020400
   14000603d:	je     0x14000616e
   140006043:	cmp    ecx,0x20020500
   140006049:	je     0x140006142
   14000604f:	lea    eax,[rcx-0x20470500]
   140006055:	test   eax,0xffefffff
   14000605a:	je     0x1400060d2
   14000605c:	cmp    ecx,0x20610500
   140006062:	je     0x140006070
   140006064:	cmp    ecx,0x20670500
   14000606a:	jne    0x14000626f
   140006070:	mov    edx,DWORD PTR [rbx+0x50]
   140006073:	mov    DWORD PTR [rbx+0x4c],r12d
   140006077:	mov    DWORD PTR [rbx+0x58],r12d
   14000607b:	cmp    edx,r12d
   14000607e:	je     0x14000633d
   140006084:	mov    rcx,QWORD PTR [r14+0x8]
   140006088:	mov    rax,rcx
   14000608b:	test   rcx,rcx
   14000608e:	je     0x14000633d
   140006094:	cmp    DWORD PTR [rax+0x30],edx
   140006097:	je     0x1400060a1
   140006099:	mov    rax,QWORD PTR [rax]
   14000609c:	test   rax,rax
   14000609f:	jne    0x140006094
   1400060a1:	test   rax,rax
   1400060a4:	je     0x14000633d
   1400060aa:	mov    rax,QWORD PTR [rax+0x10]
   1400060ae:	cmp    DWORD PTR [rax+0x10],0x10100
   1400060b5:	je     0x1400062e3
   1400060bb:	mov    rax,QWORD PTR [rax+0x8]
   1400060bf:	lea    r8,[rip+0x2b92]        # 0x140008c58
   1400060c6:	mov    QWORD PTR [rsp+0x28],rax
   1400060cb:	mov    QWORD PTR [rsp+0x20],r9
   1400060d0:	jmp    0x140006123
   1400060d2:	mov    ecx,DWORD PTR [rbx+0x4c]
   1400060d5:	mov    DWORD PTR [rbx+0x50],r12d
   1400060d9:	mov    DWORD PTR [rbx+0x54],r12d
   1400060dd:	mov    DWORD PTR [rbx+0x58],r12d
   1400060e1:	cmp    ecx,r12d
   1400060e4:	je     0x140006136
   1400060e6:	mov    rax,QWORD PTR [r14+0x8]
   1400060ea:	test   rax,rax
   1400060ed:	je     0x140006136
   1400060ef:	cmp    DWORD PTR [rax+0x30],ecx
   1400060f2:	je     0x1400060fc
   1400060f4:	mov    rax,QWORD PTR [rax]
   1400060f7:	test   rax,rax
   1400060fa:	jne    0x1400060ef
   1400060fc:	test   rax,rax
   1400060ff:	je     0x140006136
   140006101:	mov    rax,QWORD PTR [rax+0x10]
   140006105:	cmp    DWORD PTR [rax+0x10],0x40030500
   14000610c:	je     0x1400064c8
   140006112:	mov    rax,QWORD PTR [rax+0x8]
   140006116:	mov    QWORD PTR [rsp+0x28],rax
   14000611b:	mov    QWORD PTR [rsp+0x20],r15
   140006120:	mov    r8,r13
   140006123:	mov    r9d,DWORD PTR [rbx+0x30]
   140006127:	mov    edx,ebp
   140006129:	mov    ecx,r11d
   14000612c:	call   0x140006e40
   140006131:	jmp    0x1400064c6
   140006136:	mov    rax,QWORD PTR [r8+0x8]
   14000613a:	mov    r8,r13
   14000613d:	jmp    0x1400064b3
   140006142:	mov    ecx,DWORD PTR [rbx+0x4c]
   140006145:	mov    DWORD PTR [rbx+0x50],r12d
   140006149:	mov    DWORD PTR [rbx+0x54],r12d
   14000614d:	mov    DWORD PTR [rbx+0x58],r12d
   140006151:	cmp    ecx,r12d
   140006154:	je     0x140006136
   140006156:	mov    rax,QWORD PTR [r14+0x8]
   14000615a:	test   rax,rax
   14000615d:	je     0x140006136
   14000615f:	cmp    DWORD PTR [rax+0x30],ecx
   140006162:	je     0x1400060fc
   140006164:	mov    rax,QWORD PTR [rax]
   140006167:	test   rax,rax
   14000616a:	jne    0x14000615f
   14000616c:	jmp    0x1400060fc
   14000616e:	mov    ecx,DWORD PTR [rbx+0x4c]
   140006171:	mov    DWORD PTR [rbx+0x50],r12d
   140006175:	mov    DWORD PTR [rbx+0x54],r12d
   140006179:	mov    DWORD PTR [rbx+0x58],r12d
   14000617d:	cmp    ecx,r12d
   140006180:	je     0x140006136
   140006182:	mov    rax,QWORD PTR [r14+0x8]
   140006186:	test   rax,rax
   140006189:	je     0x140006136
   14000618b:	cmp    DWORD PTR [rax+0x30],ecx
   14000618e:	je     0x140006198
   140006190:	mov    rax,QWORD PTR [rax]
   140006193:	test   rax,rax
   140006196:	jne    0x14000618b
   140006198:	test   rax,rax
   14000619b:	je     0x140006136
   14000619d:	mov    rax,QWORD PTR [rax+0x10]
   1400061a1:	cmp    DWORD PTR [rax+0x10],0x40030403
   1400061a8:	je     0x1400064c8
   1400061ae:	mov    rax,QWORD PTR [rax+0x8]
   1400061b2:	mov    QWORD PTR [rsp+0x28],rax
   1400061b7:	lea    rax,[rip+0x3e32]        # 0x140009ff0
   1400061be:	mov    QWORD PTR [rsp+0x20],rax
   1400061c3:	jmp    0x140006120
   1400061c8:	mov    ecx,DWORD PTR [rbx+0x4c]
   1400061cb:	mov    DWORD PTR [rbx+0x50],r12d
   1400061cf:	mov    DWORD PTR [rbx+0x54],r12d
   1400061d3:	mov    DWORD PTR [rbx+0x58],r12d
   1400061d7:	cmp    ecx,r12d
   1400061da:	je     0x140006136
   1400061e0:	mov    rax,QWORD PTR [r14+0x8]
   1400061e4:	test   rax,rax
   1400061e7:	je     0x140006136
   1400061ed:	cmp    DWORD PTR [rax+0x30],ecx
   1400061f0:	je     0x1400061fa
   1400061f2:	mov    rax,QWORD PTR [rax]
   1400061f5:	test   rax,rax
   1400061f8:	jne    0x1400061ed
   1400061fa:	test   rax,rax
   1400061fd:	je     0x140006136
   140006203:	mov    rax,QWORD PTR [rax+0x10]
   140006207:	cmp    DWORD PTR [rax+0x10],0x40030401
   14000620e:	je     0x1400064c8
   140006214:	mov    rax,QWORD PTR [rax+0x8]
   140006218:	mov    QWORD PTR [rsp+0x28],rax
   14000621d:	lea    rax,[rip+0x38a4]        # 0x140009ac8
   140006224:	jmp    0x1400061be
   140006226:	lea    eax,[rcx-0x22410500]
   14000622c:	test   eax,0xffefffff
   140006231:	je     0x140006479
   140006237:	cmp    ecx,0x23410500
   14000623d:	je     0x140006388
   140006243:	cmp    ecx,0x23510500
   140006249:	je     0x140006479
   14000624f:	cmp    ecx,0x30020400
   140006255:	je     0x14000634d
   14000625b:	cmp    ecx,0x30240500
   140006261:	je     0x140006070
   140006267:	cmp    ecx,0x40020500
   14000626d:	je     0x140006284
   14000626f:	mov    DWORD PTR [rbx+0x4c],r12d
   140006273:	mov    DWORD PTR [rbx+0x50],r12d
   140006277:	mov    DWORD PTR [rbx+0x54],r12d
   14000627b:	mov    DWORD PTR [rbx+0x58],r12d
   14000627f:	jmp    0x1400064c8
   140006284:	mov    ecx,DWORD PTR [rbx+0x4c]
   140006287:	mov    DWORD PTR [rbx+0x50],r12d
   14000628b:	mov    DWORD PTR [rbx+0x54],r12d
   14000628f:	mov    DWORD PTR [rbx+0x58],r12d
   140006293:	cmp    ecx,r12d
   140006296:	je     0x140006136
   14000629c:	mov    rax,QWORD PTR [r14+0x8]
   1400062a0:	test   rax,rax
   1400062a3:	je     0x140006136
   1400062a9:	cmp    DWORD PTR [rax+0x30],ecx
   1400062ac:	je     0x1400062b6
   1400062ae:	mov    rax,QWORD PTR [rax]
   1400062b1:	test   rax,rax
   1400062b4:	jne    0x1400062a9
   1400062b6:	test   rax,rax
   1400062b9:	je     0x140006136
   1400062bf:	mov    rax,QWORD PTR [rax+0x10]
   1400062c3:	cmp    DWORD PTR [rax+0x10],0x40030402
   1400062ca:	je     0x1400064c8
   1400062d0:	mov    rax,QWORD PTR [rax+0x8]
   1400062d4:	mov    QWORD PTR [rsp+0x28],rax
   1400062d9:	mov    QWORD PTR [rsp+0x20],rdx
   1400062de:	jmp    0x140006120
   1400062e3:	mov    eax,DWORD PTR [rbx+0x54]
   1400062e6:	cmp    eax,r12d
   1400062e9:	je     0x14000632d
   1400062eb:	test   rcx,rcx
   1400062ee:	je     0x14000632d
   1400062f0:	cmp    DWORD PTR [rcx+0x30],eax
   1400062f3:	je     0x1400062fd
   1400062f5:	mov    rcx,QWORD PTR [rcx]
   1400062f8:	test   rcx,rcx
   1400062fb:	jne    0x1400062f0
   1400062fd:	test   rcx,rcx
   140006300:	je     0x14000632d
   140006302:	mov    rax,QWORD PTR [rcx+0x10]
   140006306:	cmp    DWORD PTR [rax+0x10],0x10100
   14000630d:	je     0x1400064c8
   140006313:	mov    rax,QWORD PTR [rax+0x8]
   140006317:	lea    r8,[rip+0x2952]        # 0x140008c70
   14000631e:	mov    QWORD PTR [rsp+0x28],rax
   140006323:	mov    QWORD PTR [rsp+0x20],r9
   140006328:	jmp    0x140006123
   14000632d:	mov    rax,QWORD PTR [r8+0x8]
   140006331:	lea    r8,[rip+0x2938]        # 0x140008c70
   140006338:	jmp    0x1400064b3
   14000633d:	mov    rax,QWORD PTR [r8+0x8]
   140006341:	lea    r8,[rip+0x2910]        # 0x140008c58
   140006348:	jmp    0x1400064b3
   14000634d:	mov    ecx,DWORD PTR [rbx+0x4c]
   140006350:	mov    DWORD PTR [rbx+0x50],r12d
   140006354:	mov    DWORD PTR [rbx+0x54],r12d
   140006358:	mov    DWORD PTR [rbx+0x58],r12d
   14000635c:	cmp    ecx,r12d
   14000635f:	je     0x140006136
   140006365:	mov    rax,QWORD PTR [r14+0x8]
   140006369:	test   rax,rax
   14000636c:	je     0x140006136
   140006372:	cmp    DWORD PTR [rax+0x30],ecx
   140006375:	je     0x1400062b6
   14000637b:	mov    rax,QWORD PTR [rax]
   14000637e:	test   rax,rax
   140006381:	jne    0x140006372
   140006383:	jmp    0x1400062b6
   140006388:	mov    ecx,DWORD PTR [rbx+0x4c]
   14000638b:	mov    DWORD PTR [rbx+0x50],r12d
   14000638f:	mov    DWORD PTR [rbx+0x54],r12d
   140006393:	cmp    ecx,r12d
   140006396:	je     0x1400063e8
   140006398:	mov    rax,QWORD PTR [r14+0x8]
   14000639c:	test   rax,rax
   14000639f:	je     0x1400063e8
   1400063a1:	cmp    DWORD PTR [rax+0x30],ecx
   1400063a4:	je     0x1400063ae
   1400063a6:	mov    rax,QWORD PTR [rax]
   1400063a9:	test   rax,rax
   1400063ac:	jne    0x1400063a1
   1400063ae:	test   rax,rax
   1400063b1:	je     0x1400063e8
   1400063b3:	mov    rax,QWORD PTR [rax+0x10]
   1400063b7:	cmp    DWORD PTR [rax+0x10],0x42030500
   1400063be:	je     0x14000640e
   1400063c0:	mov    rax,QWORD PTR [rax+0x8]
   1400063c4:	mov    r8,r13
   1400063c7:	mov    r9d,DWORD PTR [rbx+0x30]
   1400063cb:	mov    edx,ebp
   1400063cd:	mov    QWORD PTR [rsp+0x28],rax
   1400063d2:	mov    ecx,r11d
   1400063d5:	lea    rax,[rip+0x3a24]        # 0x140009e00
   1400063dc:	mov    QWORD PTR [rsp+0x20],rax
   1400063e1:	call   0x140006e40
   1400063e6:	jmp    0x140006402
   1400063e8:	mov    rax,QWORD PTR [r8+0x8]
   1400063ec:	mov    edx,ebp
   1400063ee:	mov    r9d,DWORD PTR [rbx+0x30]
   1400063f2:	mov    r8,r13
   1400063f5:	mov    ecx,r10d
   1400063f8:	mov    QWORD PTR [rsp+0x20],rax
   1400063fd:	call   0x140006e40
   140006402:	mov    r11d,0x76
   140006408:	mov    edi,esi
   14000640a:	lea    r10d,[r11-0x1]
   14000640e:	mov    ecx,DWORD PTR [rbx+0x58]
   140006411:	cmp    ecx,r12d
   140006414:	je     0x140006463
   140006416:	mov    rax,QWORD PTR [r14+0x8]
   14000641a:	test   rax,rax
   14000641d:	je     0x140006463
   14000641f:	cmp    DWORD PTR [rax+0x30],ecx
   140006422:	je     0x14000642c
   140006424:	mov    rax,QWORD PTR [rax]
   140006427:	test   rax,rax
   14000642a:	jne    0x14000641f
   14000642c:	test   rax,rax
   14000642f:	je     0x140006463
   140006431:	mov    rax,QWORD PTR [rax+0x10]
   140006435:	cmp    DWORD PTR [rax+0x10],0x10000
   14000643c:	je     0x1400064c8
   140006442:	mov    rax,QWORD PTR [rax+0x8]
   140006446:	lea    r8,[rip+0x283b]        # 0x140008c88
   14000644d:	mov    QWORD PTR [rsp+0x28],rax
   140006452:	lea    rax,[rip+0x339f]        # 0x1400097f8
   140006459:	mov    QWORD PTR [rsp+0x20],rax
   14000645e:	jmp    0x140006123
   140006463:	mov    rax,QWORD PTR [rbx+0x10]
   140006467:	lea    r8,[rip+0x281a]        # 0x140008c88
   14000646e:	mov    rcx,QWORD PTR [rax+0x8]
   140006472:	mov    QWORD PTR [rsp+0x20],rcx
   140006477:	jmp    0x1400064b8
   140006479:	mov    ecx,DWORD PTR [rbx+0x58]
   14000647c:	mov    DWORD PTR [rbx+0x4c],r12d
   140006480:	mov    DWORD PTR [rbx+0x50],r12d
   140006484:	mov    DWORD PTR [rbx+0x54],r12d
   140006488:	cmp    ecx,r12d
   14000648b:	je     0x1400064a8
   14000648d:	mov    rax,QWORD PTR [r14+0x8]
   140006491:	test   rax,rax
   140006494:	je     0x1400064a8
   140006496:	cmp    DWORD PTR [rax+0x30],ecx
   140006499:	je     0x1400064a3
   14000649b:	mov    rax,QWORD PTR [rax]
   14000649e:	test   rax,rax
   1400064a1:	jne    0x140006496
   1400064a3:	test   rax,rax
   1400064a6:	jne    0x140006431
   1400064a8:	mov    rax,QWORD PTR [r8+0x8]
   1400064ac:	lea    r8,[rip+0x27d5]        # 0x140008c88
   1400064b3:	mov    QWORD PTR [rsp+0x20],rax
   1400064b8:	mov    r9d,DWORD PTR [rbx+0x30]
   1400064bc:	mov    edx,ebp
   1400064be:	mov    ecx,r10d
   1400064c1:	call   0x140006e40
   1400064c6:	mov    edi,esi
   1400064c8:	mov    rbx,QWORD PTR [rbx]
   1400064cb:	lea    r9,[rip+0x338e]        # 0x140009860
   1400064d2:	mov    r10d,0x75
   1400064d8:	lea    rdx,[rip+0x3689]        # 0x140009b68
   1400064df:	lea    r11d,[r10+0x1]
   1400064e3:	test   edi,edi
   1400064e5:	je     0x14000600c
   1400064eb:	mov    r14,QWORD PTR [r14]
   1400064ee:	test   edi,edi
   1400064f0:	je     0x140005ffa
   1400064f6:	mov    r15,QWORD PTR [rsp+0x60]
   1400064fb:	mov    r15,QWORD PTR [r15]
   1400064fe:	mov    QWORD PTR [rsp+0x60],r15
   140006503:	test   edi,edi
   140006505:	je     0x140005fde
   14000650b:	mov    rbx,QWORD PTR [rsp+0x68]
   140006510:	mov    eax,edi
   140006512:	mov    rbp,QWORD PTR [rsp+0x70]
   140006517:	mov    rsi,QWORD PTR [rsp+0x78]
   14000651c:	add    rsp,0x30
   140006520:	pop    r15
   140006522:	pop    r14
   140006524:	pop    r13
   140006526:	pop    r12
   140006528:	pop    rdi
   140006529:	ret    
   14000652a:	int3   
   14000652b:	int3   
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	mov    QWORD PTR [rsp+0x20],rbx
   140006535:	push   rbp
   140006536:	push   rsi
   140006537:	push   rdi
   140006538:	push   r12
   14000653a:	push   r13
   14000653c:	push   r14
   14000653e:	push   r15
   140006540:	lea    rbp,[rsp-0x380]
   140006548:	sub    rsp,0x480
   14000654f:	mov    rax,QWORD PTR [rip+0x6ab2]        # 0x14000d008
   140006556:	xor    rax,rsp
   140006559:	mov    QWORD PTR [rbp+0x370],rax
   140006560:	xor    r13d,r13d
   140006563:	mov    r12,r8
   140006566:	mov    esi,r13d
   140006569:	mov    r15,rdx
   14000656c:	mov    r14,rcx
   14000656f:	xor    edx,edx
   140006571:	mov    DWORD PTR [rsp+0x40],0x104
   140006579:	mov    r8d,0x20a
   14000657f:	lea    rcx,[rsp+0x50]
   140006584:	call   0x140007eae
   140006589:	mov    QWORD PTR [rsp+0x38],r13
   14000658e:	lea    r9,[rsp+0x40]
   140006593:	mov    QWORD PTR [rsp+0x30],r13
   140006598:	lea    r8,[rsp+0x50]
   14000659d:	mov    QWORD PTR [rsp+0x28],r13
   1400065a2:	mov    edx,esi
   1400065a4:	mov    rcx,r14
   1400065a7:	mov    QWORD PTR [rsp+0x20],r13
   1400065ac:	call   QWORD PTR [rip+0x1bd6]        # 0x140008188
   1400065b2:	mov    ebx,eax
   1400065b4:	test   eax,eax
   1400065b6:	jne    0x140006681
   1400065bc:	lea    rax,[rsp+0x48]
   1400065c1:	mov    r9d,0x20019
   1400065c7:	xor    r8d,r8d
   1400065ca:	mov    QWORD PTR [rsp+0x20],rax
   1400065cf:	lea    rdx,[rsp+0x50]
   1400065d4:	mov    rcx,r14
   1400065d7:	call   QWORD PTR [rip+0x1b8b]        # 0x140008168
   1400065dd:	test   eax,eax
   1400065df:	jne    0x14000667e
   1400065e5:	mov    edi,r13d
   1400065e8:	xor    edx,edx
   1400065ea:	mov    DWORD PTR [rsp+0x40],0x104
   1400065f2:	mov    r8d,0x20a
   1400065f8:	lea    rcx,[rbp+0x160]
   1400065ff:	call   0x140007eae
   140006604:	mov    rcx,QWORD PTR [rsp+0x48]
   140006609:	lea    r9,[rsp+0x40]
   14000660e:	mov    QWORD PTR [rsp+0x38],r13
   140006613:	lea    r8,[rbp+0x160]
   14000661a:	mov    QWORD PTR [rsp+0x30],r13
   14000661f:	mov    edx,edi
   140006621:	mov    QWORD PTR [rsp+0x28],r13
   140006626:	mov    QWORD PTR [rsp+0x20],r13
   14000662b:	call   QWORD PTR [rip+0x1b57]        # 0x140008188
   140006631:	mov    ebx,eax
   140006633:	test   eax,eax
   140006635:	jne    0x14000664b
   140006637:	mov    rdx,r12
   14000663a:	lea    rcx,[rbp+0x160]
   140006641:	call   QWORD PTR [rip+0x1d31]        # 0x140008378
   140006647:	test   eax,eax
   140006649:	je     0x140006653
   14000664b:	inc    edi
   14000664d:	test   ebx,ebx
   14000664f:	jne    0x140006671
   140006651:	jmp    0x1400065e8
   140006653:	mov    rdx,r15
   140006656:	lea    rcx,[rsp+0x50]
   14000665b:	call   QWORD PTR [rip+0x1d17]        # 0x140008378
   140006661:	neg    eax
   140006663:	sbb    ebx,ebx
   140006665:	and    ebx,0xffffff56
   14000666b:	add    ebx,0xb7
   140006671:	mov    rcx,QWORD PTR [rsp+0x48]
   140006676:	call   QWORD PTR [rip+0x1b14]        # 0x140008190
   14000667c:	jmp    0x140006681
   14000667e:	mov    ebx,r13d
   140006681:	inc    esi
   140006683:	test   ebx,ebx
   140006685:	je     0x14000656f
   14000668b:	cmp    ebx,0x103
   140006691:	cmove  ebx,r13d
   140006695:	mov    eax,ebx
   140006697:	mov    rcx,QWORD PTR [rbp+0x370]
   14000669e:	xor    rcx,rsp
   1400066a1:	call   0x140007730
   1400066a6:	mov    rbx,QWORD PTR [rsp+0x4d8]
   1400066ae:	add    rsp,0x480
   1400066b5:	pop    r15
   1400066b7:	pop    r14
   1400066b9:	pop    r13
   1400066bb:	pop    r12
   1400066bd:	pop    rdi
   1400066be:	pop    rsi
   1400066bf:	pop    rbp
   1400066c0:	ret    
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	int3   
   1400066c5:	int3   
   1400066c6:	int3   
   1400066c7:	int3   
   1400066c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400066cd:	push   rbp
   1400066ce:	push   rsi
   1400066cf:	push   rdi
   1400066d0:	push   r12
   1400066d2:	push   r13
   1400066d4:	push   r14
   1400066d6:	push   r15
   1400066d8:	lea    rbp,[rsp-0x210]
   1400066e0:	sub    rsp,0x310
   1400066e7:	mov    rax,QWORD PTR [rip+0x691a]        # 0x14000d008
   1400066ee:	xor    rax,rsp
   1400066f1:	mov    QWORD PTR [rbp+0x200],rax
   1400066f8:	lea    rax,[rsp+0x40]
   1400066fd:	mov    DWORD PTR [rsp+0x40],0x4
   140006705:	mov    QWORD PTR [rsp+0x28],rax
   14000670a:	lea    r9,[rsp+0x44]
   14000670f:	lea    rax,[rsp+0x48]
   140006714:	mov    r15,rdx
   140006717:	xor    r13d,r13d
   14000671a:	mov    QWORD PTR [rsp+0x20],rax
   14000671f:	xor    r8d,r8d
   140006722:	mov    DWORD PTR [rsp+0x44],r13d
   140006727:	lea    rdx,[rip+0x42fa]        # 0x14000aa28
   14000672e:	mov    r12,rcx
   140006731:	call   QWORD PTR [rip+0x1a39]        # 0x140008170
   140006737:	mov    ebx,eax
   140006739:	test   eax,eax
   14000673b:	jne    0x140006ab9
   140006741:	mov    rax,QWORD PTR [r15+0x30]
   140006745:	mov    ecx,DWORD PTR [rax+0x10]
   140006748:	cmp    DWORD PTR [rsp+0x48],ecx
   14000674c:	je     0x140006758
   14000674e:	mov    ebx,0xd
   140006753:	jmp    0x140006ab9
   140006758:	xor    edx,edx
   14000675a:	mov    DWORD PTR [rsp+0x44],r13d
   14000675f:	mov    r8d,0x20a
   140006765:	mov    DWORD PTR [rsp+0x40],0x208
   14000676d:	lea    rcx,[rbp-0x10]
   140006771:	call   0x140007eae
   140006776:	lea    rax,[rsp+0x40]
   14000677b:	xor    r8d,r8d
   14000677e:	mov    QWORD PTR [rsp+0x28],rax
   140006783:	lea    r9,[rsp+0x44]
   140006788:	lea    rax,[rbp-0x10]
   14000678c:	mov    rcx,r12
   14000678f:	lea    rdx,[rip+0x42b2]        # 0x14000aa48
   140006796:	mov    QWORD PTR [rsp+0x20],rax
   14000679b:	call   QWORD PTR [rip+0x19cf]        # 0x140008170
   1400067a1:	mov    ebx,eax
   1400067a3:	test   eax,eax
   1400067a5:	jne    0x140006ab9
   1400067ab:	mov    rdx,QWORD PTR [r15+0x20]
   1400067af:	lea    rcx,[rbp-0x10]
   1400067b3:	call   QWORD PTR [rip+0x1bbf]        # 0x140008378
   1400067b9:	test   eax,eax
   1400067bb:	je     0x14000681c
   1400067bd:	lea    rcx,[rbp-0x10]
   1400067c1:	call   QWORD PTR [rip+0x1a39]        # 0x140008200
   1400067c7:	movsxd rcx,eax
   1400067ca:	lea    rcx,[rbp+rcx*2-0x12]
   1400067cf:	cmp    WORD PTR [rcx],0x5c
   1400067d3:	je     0x14000674e
   1400067d9:	lea    rax,[rbp-0x10]
   1400067dd:	cmp    rcx,rax
   1400067e0:	jb     0x14000674e
   1400067e6:	cmp    WORD PTR [rcx],0x5c
   1400067ea:	je     0x1400067f9
   1400067ec:	sub    rcx,0x2
   1400067f0:	lea    rax,[rbp-0x10]
   1400067f4:	cmp    rcx,rax
   1400067f7:	jae    0x1400067e6
   1400067f9:	lea    rax,[rbp-0x10]
   1400067fd:	cmp    rcx,rax
   140006800:	jb     0x14000674e
   140006806:	mov    rdx,QWORD PTR [r15+0x20]
   14000680a:	add    rcx,0x2
   14000680e:	call   QWORD PTR [rip+0x1b64]        # 0x140008378
   140006814:	test   eax,eax
   140006816:	jne    0x14000674e
   14000681c:	xor    edx,edx
   14000681e:	mov    DWORD PTR [rsp+0x40],0x40
   140006826:	mov    r8d,0x80
   14000682c:	lea    rcx,[rsp+0x70]
   140006831:	mov    r14d,r13d
   140006834:	call   0x140007eae
   140006839:	mov    QWORD PTR [rsp+0x38],r13
   14000683e:	lea    r9,[rsp+0x40]
   140006843:	mov    QWORD PTR [rsp+0x30],r13
   140006848:	lea    r8,[rsp+0x70]
   14000684d:	mov    QWORD PTR [rsp+0x28],r13
   140006852:	xor    edx,edx
   140006854:	mov    rcx,r12
   140006857:	mov    QWORD PTR [rsp+0x20],r13
   14000685c:	call   QWORD PTR [rip+0x1926]        # 0x140008188
   140006862:	mov    edi,0xd
   140006867:	jmp    0x140006a8b
   14000686c:	mov    edx,DWORD PTR [rsp+0x40]
   140006870:	lea    r8,[rsp+0x58]
   140006875:	lea    rcx,[rsp+0x70]
   14000687a:	inc    r14d
   14000687d:	call   0x140003c2c
   140006882:	mov    ebx,eax
   140006884:	test   eax,eax
   140006886:	jne    0x140006a99
   14000688c:	mov    rsi,QWORD PTR [r15+0x8]
   140006890:	test   rsi,rsi
   140006893:	je     0x140006a97
   140006899:	mov    rax,QWORD PTR [rsp+0x60]
   14000689e:	mov    rcx,QWORD PTR [rsp+0x58]
   1400068a3:	cmp    rcx,QWORD PTR [rsi+0x10]
   1400068a7:	jne    0x1400068af
   1400068a9:	cmp    rax,QWORD PTR [rsi+0x18]
   1400068ad:	je     0x1400068b7
   1400068af:	mov    rsi,QWORD PTR [rsi]
   1400068b2:	test   rsi,rsi
   1400068b5:	jne    0x1400068a3
   1400068b7:	test   rsi,rsi
   1400068ba:	je     0x140006a97
   1400068c0:	lea    rax,[rsp+0x50]
   1400068c5:	mov    r9d,0x2001f
   1400068cb:	xor    r8d,r8d
   1400068ce:	mov    QWORD PTR [rsp+0x20],rax
   1400068d3:	lea    rdx,[rsp+0x70]
   1400068d8:	mov    rcx,r12
   1400068db:	call   QWORD PTR [rip+0x1887]        # 0x140008168
   1400068e1:	mov    ebx,eax
   1400068e3:	test   eax,eax
   1400068e5:	jne    0x140006a99
   1400068eb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400068f0:	lea    rax,[rsp+0x40]
   1400068f5:	mov    QWORD PTR [rsp+0x28],rax
   1400068fa:	lea    r9,[rsp+0x44]
   1400068ff:	lea    rax,[rsp+0x48]
   140006904:	mov    DWORD PTR [rsp+0x44],r13d
   140006909:	xor    r8d,r8d
   14000690c:	mov    QWORD PTR [rsp+0x20],rax
   140006911:	lea    rdx,[rip+0x4158]        # 0x14000aa70
   140006918:	mov    DWORD PTR [rsp+0x40],0x4
   140006920:	call   QWORD PTR [rip+0x184a]        # 0x140008170
   140006926:	mov    ebx,eax
   140006928:	test   eax,eax
   14000692a:	jne    0x140006a38
   140006930:	mov    eax,DWORD PTR [rsi+0x38]
   140006933:	cmp    DWORD PTR [rsp+0x48],eax
   140006937:	jne    0x1400069d9
   14000693d:	mov    rcx,QWORD PTR [rsp+0x50]
   140006942:	lea    rax,[rsp+0x40]
   140006947:	mov    QWORD PTR [rsp+0x28],rax
   14000694c:	lea    r9,[rsp+0x44]
   140006951:	lea    rax,[rsp+0x48]
   140006956:	mov    DWORD PTR [rsp+0x44],r13d
   14000695b:	xor    r8d,r8d
   14000695e:	mov    QWORD PTR [rsp+0x20],rax
   140006963:	lea    rdx,[rip+0x4126]        # 0x14000aa90
   14000696a:	mov    DWORD PTR [rsp+0x40],0x4
   140006972:	call   QWORD PTR [rip+0x17f8]        # 0x140008170
   140006978:	mov    ebx,eax
   14000697a:	test   eax,eax
   14000697c:	jne    0x140006a38
   140006982:	mov    eax,DWORD PTR [rsi+0x3c]
   140006985:	cmp    DWORD PTR [rsp+0x48],eax
   140006989:	jne    0x1400069d9
   14000698b:	mov    rcx,QWORD PTR [rsp+0x50]
   140006990:	lea    rax,[rsp+0x40]
   140006995:	mov    QWORD PTR [rsp+0x28],rax
   14000699a:	lea    r9,[rsp+0x44]
   14000699f:	lea    rax,[rsp+0x48]
   1400069a4:	mov    DWORD PTR [rsp+0x44],r13d
   1400069a9:	xor    r8d,r8d
   1400069ac:	mov    QWORD PTR [rsp+0x20],rax
   1400069b1:	lea    rdx,[rip+0x40f8]        # 0x14000aab0
   1400069b8:	mov    DWORD PTR [rsp+0x40],0x4
   1400069c0:	call   QWORD PTR [rip+0x17aa]        # 0x140008170
   1400069c6:	mov    ebx,eax
   1400069c8:	test   eax,eax
   1400069ca:	jne    0x140006a38
   1400069cc:	mov    rax,QWORD PTR [rsi+0x28]
   1400069d0:	mov    ecx,DWORD PTR [rax+0x10]
   1400069d3:	cmp    DWORD PTR [rsp+0x48],ecx
   1400069d7:	je     0x1400069dd
   1400069d9:	mov    ebx,edi
   1400069db:	jmp    0x140006a38
   1400069dd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400069e2:	lea    rax,[rsp+0x40]
   1400069e7:	mov    QWORD PTR [rsp+0x28],rax
   1400069ec:	lea    r9,[rsp+0x44]
   1400069f1:	lea    rax,[rsp+0x48]
   1400069f6:	mov    DWORD PTR [rsp+0x44],r13d
   1400069fb:	xor    r8d,r8d
   1400069fe:	mov    QWORD PTR [rsp+0x20],rax
   140006a03:	lea    rdx,[rip+0x40c6]        # 0x14000aad0
   140006a0a:	mov    DWORD PTR [rsp+0x40],0x4
   140006a12:	call   QWORD PTR [rip+0x1758]        # 0x140008170
   140006a18:	mov    ebx,eax
   140006a1a:	test   eax,eax
   140006a1c:	jne    0x140006a38
   140006a1e:	mov    rax,QWORD PTR [rsi+0x8]
   140006a22:	mov    ecx,r13d
   140006a25:	jmp    0x140006a2c
   140006a27:	mov    rax,QWORD PTR [rax]
   140006a2a:	inc    ecx
   140006a2c:	test   rax,rax
   140006a2f:	jne    0x140006a27
   140006a31:	cmp    DWORD PTR [rsp+0x48],ecx
   140006a35:	cmovne ebx,edi
   140006a38:	mov    rcx,QWORD PTR [rsp+0x50]
   140006a3d:	call   QWORD PTR [rip+0x174d]        # 0x140008190
   140006a43:	test   ebx,ebx
   140006a45:	jne    0x140006a99
   140006a47:	xor    edx,edx
   140006a49:	mov    DWORD PTR [rsp+0x40],0x40
   140006a51:	mov    r8d,0x80
   140006a57:	lea    rcx,[rsp+0x70]
   140006a5c:	call   0x140007eae
   140006a61:	mov    QWORD PTR [rsp+0x38],r13
   140006a66:	lea    r9,[rsp+0x40]
   140006a6b:	mov    QWORD PTR [rsp+0x30],r13
   140006a70:	lea    r8,[rsp+0x70]
   140006a75:	mov    QWORD PTR [rsp+0x28],r13
   140006a7a:	mov    edx,r14d
   140006a7d:	mov    rcx,r12
   140006a80:	mov    QWORD PTR [rsp+0x20],r13
   140006a85:	call   QWORD PTR [rip+0x16fd]        # 0x140008188
   140006a8b:	mov    ebx,eax
   140006a8d:	test   eax,eax
   140006a8f:	je     0x14000686c
   140006a95:	jmp    0x140006a99
   140006a97:	mov    ebx,edi
   140006a99:	cmp    ebx,0x103
   140006a9f:	jne    0x140006ab9
   140006aa1:	mov    rax,QWORD PTR [r15+0x8]
   140006aa5:	jmp    0x140006aad
   140006aa7:	mov    rax,QWORD PTR [rax]
   140006aaa:	dec    r14d
   140006aad:	test   rax,rax
   140006ab0:	jne    0x140006aa7
   140006ab2:	neg    r14d
   140006ab5:	sbb    ebx,ebx
   140006ab7:	and    ebx,edi
   140006ab9:	mov    eax,ebx
   140006abb:	mov    rcx,QWORD PTR [rbp+0x200]
   140006ac2:	xor    rcx,rsp
   140006ac5:	call   0x140007730
   140006aca:	mov    rbx,QWORD PTR [rsp+0x360]
   140006ad2:	add    rsp,0x310
   140006ad9:	pop    r15
   140006adb:	pop    r14
   140006add:	pop    r13
   140006adf:	pop    r12
   140006ae1:	pop    rdi
   140006ae2:	pop    rsi
   140006ae3:	pop    rbp
   140006ae4:	ret    
   140006ae5:	int3   
   140006ae6:	int3   
   140006ae7:	int3   
   140006ae8:	int3   
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	mov    QWORD PTR [rsp+0x20],rbx
   140006af1:	push   rbp
   140006af2:	push   rsi
   140006af3:	push   rdi
   140006af4:	lea    rbp,[rsp-0x190]
   140006afc:	sub    rsp,0x290
   140006b03:	mov    rax,QWORD PTR [rip+0x64fe]        # 0x14000d008
   140006b0a:	xor    rax,rsp
   140006b0d:	mov    QWORD PTR [rbp+0x180],rax
   140006b14:	mov    rbx,QWORD PTR [r8]
   140006b17:	xor    eax,eax
   140006b19:	mov    QWORD PTR [rsp+0x58],rax
   140006b1e:	mov    rsi,rdx
   140006b21:	mov    QWORD PTR [rsp+0x50],rax
   140006b26:	mov    rdi,rcx
   140006b29:	mov    QWORD PTR [rsp+0x48],rax
   140006b2e:	xor    r9d,r9d
   140006b31:	mov    QWORD PTR [rsp+0x40],rax
   140006b36:	xor    r8d,r8d
   140006b39:	mov    QWORD PTR [rsp+0x38],rax
   140006b3e:	xor    edx,edx
   140006b40:	mov    QWORD PTR [rsp+0x30],rax
   140006b45:	mov    rcx,rbx
   140006b48:	mov    QWORD PTR [rsp+0x28],rax
   140006b4d:	lea    rax,[rsp+0x60]
   140006b52:	mov    QWORD PTR [rsp+0x20],rax
   140006b57:	call   QWORD PTR [rip+0x1623]        # 0x140008180
   140006b5d:	jmp    0x140006b96
   140006b5f:	lea    rax,[rsp+0x68]
   140006b64:	mov    r9d,0x2000000
   140006b6a:	xor    r8d,r8d
   140006b6d:	mov    QWORD PTR [rsp+0x20],rax
   140006b72:	lea    rdx,[rsp+0x70]
   140006b77:	mov    rcx,rbx
   140006b7a:	call   QWORD PTR [rip+0x15e8]        # 0x140008168
   140006b80:	test   eax,eax
   140006b82:	jne    0x140006bce
   140006b84:	lea    r8,[rsp+0x68]
   140006b89:	mov    rcx,rbx
   140006b8c:	lea    rdx,[rsp+0x70]
   140006b91:	call   0x140006aec
   140006b96:	test   eax,eax
   140006b98:	jne    0x140006bce
   140006b9a:	mov    r8d,0x20a
   140006ba0:	lea    rcx,[rsp+0x70]
   140006ba5:	xor    edx,edx
   140006ba7:	call   0x140007eae
   140006bac:	mov    edx,DWORD PTR [rsp+0x60]
   140006bb0:	lea    r8,[rsp+0x70]
   140006bb5:	dec    edx
   140006bb7:	mov    r9d,0x105
   140006bbd:	mov    rcx,rbx
   140006bc0:	mov    DWORD PTR [rsp+0x60],edx
   140006bc4:	call   QWORD PTR [rip+0x15e6]        # 0x1400081b0
   140006bca:	test   eax,eax
   140006bcc:	je     0x140006b5f
   140006bce:	mov    rcx,rbx
   140006bd1:	call   QWORD PTR [rip+0x15b9]        # 0x140008190
   140006bd7:	mov    rdx,rsi
   140006bda:	mov    rcx,rdi
   140006bdd:	call   QWORD PTR [rip+0x15c5]        # 0x1400081a8
   140006be3:	mov    rcx,QWORD PTR [rbp+0x180]
   140006bea:	xor    rcx,rsp
   140006bed:	call   0x140007730
   140006bf2:	mov    rbx,QWORD PTR [rsp+0x2c8]
   140006bfa:	add    rsp,0x290
   140006c01:	pop    rdi
   140006c02:	pop    rsi
   140006c03:	pop    rbp
   140006c04:	ret    
   140006c05:	int3   
   140006c06:	int3   
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	mov    rax,rsp
   140006c0f:	mov    QWORD PTR [rax+0x8],rbx
   140006c13:	mov    QWORD PTR [rax+0x10],rbp
   140006c17:	mov    QWORD PTR [rax+0x18],rsi
   140006c1b:	mov    QWORD PTR [rax+0x20],rdi
   140006c1f:	push   r14
   140006c21:	sub    rsp,0x20
   140006c25:	xor    ebp,ebp
   140006c27:	mov    rdi,rcx
   140006c2a:	mov    ecx,ebp
   140006c2c:	mov    esi,ebp
   140006c2e:	movzx  eax,WORD PTR [rdi]
   140006c31:	cmp    bp,ax
   140006c34:	je     0x140006cba
   140006c3a:	lea    r14d,[rbp+0xa]
   140006c3e:	cmp    r14w,ax
   140006c42:	jne    0x140006c46
   140006c44:	inc    ecx
   140006c46:	inc    esi
   140006c48:	inc    ecx
   140006c4a:	mov    eax,esi
   140006c4c:	movzx  eax,WORD PTR [rdi+rsi*2]
   140006c50:	cmp    bp,ax
   140006c53:	jne    0x140006c3e
   140006c55:	cmp    ecx,esi
   140006c57:	je     0x140006cba
   140006c59:	lea    ebx,[rcx+0x1]
   140006c5c:	add    rbx,rbx
   140006c5f:	call   QWORD PTR [rip+0x143b]        # 0x1400080a0
   140006c65:	mov    r8,rbx
   140006c68:	xor    edx,edx
   140006c6a:	mov    rcx,rax
   140006c6d:	call   QWORD PTR [rip+0x1415]        # 0x140008088
   140006c73:	mov    r8,rax
   140006c76:	test   rax,rax
   140006c79:	je     0x140006cbd
   140006c7b:	mov    edx,ebp
   140006c7d:	test   esi,esi
   140006c7f:	je     0x140006cae
   140006c81:	mov    r9d,esi
   140006c84:	cmp    r14w,WORD PTR [rdi]
   140006c88:	jne    0x140006c98
   140006c8a:	mov    eax,edx
   140006c8c:	mov    ecx,0xd
   140006c91:	inc    edx
   140006c93:	mov    WORD PTR [r8+rax*2],cx
   140006c98:	movzx  eax,WORD PTR [rdi]
   140006c9b:	add    rdi,0x2
   140006c9f:	mov    ecx,edx
   140006ca1:	inc    edx
   140006ca3:	mov    WORD PTR [r8+rcx*2],ax
   140006ca8:	sub    r9,0x1
   140006cac:	jne    0x140006c84
   140006cae:	mov    eax,edx
   140006cb0:	mov    WORD PTR [r8+rax*2],bp
   140006cb5:	mov    rax,r8
   140006cb8:	jmp    0x140006cbd
   140006cba:	mov    rax,rdi
   140006cbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cc2:	mov    rbp,QWORD PTR [rsp+0x38]
   140006cc7:	mov    rsi,QWORD PTR [rsp+0x40]
   140006ccc:	mov    rdi,QWORD PTR [rsp+0x48]
   140006cd1:	add    rsp,0x20
   140006cd5:	pop    r14
   140006cd7:	ret    
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140006ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140006cea:	push   rsi
   140006ceb:	push   rdi
   140006cec:	push   r12
   140006cee:	push   r14
   140006cf0:	push   r15
   140006cf2:	sub    rsp,0x40
   140006cf6:	mov    r14,rcx
   140006cf9:	mov    ecx,0xfffffff5
   140006cfe:	call   QWORD PTR [rip+0x140c]        # 0x140008110
   140006d04:	or     rbp,0xffffffffffffffff
   140006d08:	mov    r15,rax
   140006d0b:	cmp    rax,rbp
   140006d0e:	je     0x140006d4c
   140006d10:	mov    rcx,rax
   140006d13:	call   QWORD PTR [rip+0x134f]        # 0x140008068
   140006d19:	btr    eax,0xf
   140006d1d:	cmp    eax,0x2
   140006d20:	jne    0x140006d4c
   140006d22:	xor    edi,edi
   140006d24:	inc    rbp
   140006d27:	cmp    WORD PTR [r14+rbp*2],di
   140006d2c:	jne    0x140006d24
   140006d2e:	mov    r8,rbp
   140006d31:	mov    QWORD PTR [rsp+0x20],rdi
   140006d36:	lea    r9,[rsp+0x70]
   140006d3b:	mov    rdx,r14
   140006d3e:	mov    rcx,r15
   140006d41:	call   QWORD PTR [rip+0x12c9]        # 0x140008010
   140006d47:	jmp    0x140006e1e
   140006d4c:	mov    rcx,r14
   140006d4f:	call   0x140006c0c
   140006d54:	xor    edi,edi
   140006d56:	mov    rsi,rax
   140006d59:	test   rax,rax
   140006d5c:	je     0x140006e00
   140006d62:	mov    QWORD PTR [rsp+0x38],rdi
   140006d67:	lea    ecx,[rdi+0x1]
   140006d6a:	mov    QWORD PTR [rsp+0x30],rdi
   140006d6f:	mov    r9d,ebp
   140006d72:	mov    DWORD PTR [rsp+0x28],edi
   140006d76:	mov    r8,rax
   140006d79:	xor    edx,edx
   140006d7b:	mov    QWORD PTR [rsp+0x20],rdi
   140006d80:	call   QWORD PTR [rip+0x1462]        # 0x1400081e8
   140006d86:	movsxd r12,eax
   140006d89:	test   eax,eax
   140006d8b:	je     0x140006e00
   140006d8d:	call   QWORD PTR [rip+0x130d]        # 0x1400080a0
   140006d93:	mov    r8,r12
   140006d96:	xor    edx,edx
   140006d98:	mov    rcx,rax
   140006d9b:	call   QWORD PTR [rip+0x12e7]        # 0x140008088
   140006da1:	mov    rbx,rax
   140006da4:	test   rax,rax
   140006da7:	je     0x140006e00
   140006da9:	mov    QWORD PTR [rsp+0x38],rdi
   140006dae:	lea    ecx,[rdi+0x1]
   140006db1:	mov    QWORD PTR [rsp+0x30],rdi
   140006db6:	mov    r9d,ebp
   140006db9:	mov    DWORD PTR [rsp+0x28],r12d
   140006dbe:	mov    r8,rsi
   140006dc1:	xor    edx,edx
   140006dc3:	mov    QWORD PTR [rsp+0x20],rax
   140006dc8:	call   QWORD PTR [rip+0x141a]        # 0x1400081e8
   140006dce:	test   eax,eax
   140006dd0:	je     0x140006dec
   140006dd2:	lea    r8d,[rax-0x1]
   140006dd6:	mov    QWORD PTR [rsp+0x20],rdi
   140006ddb:	lea    r9,[rsp+0x70]
   140006de0:	mov    rdx,rbx
   140006de3:	mov    rcx,r15
   140006de6:	call   QWORD PTR [rip+0x125c]        # 0x140008048
   140006dec:	call   QWORD PTR [rip+0x12ae]        # 0x1400080a0
   140006df2:	mov    r8,rbx
   140006df5:	xor    edx,edx
   140006df7:	mov    rcx,rax
   140006dfa:	call   QWORD PTR [rip+0x1298]        # 0x140008098
   140006e00:	cmp    r14,rsi
   140006e03:	je     0x140006e1e
   140006e05:	test   rsi,rsi
   140006e08:	je     0x140006e1e
   140006e0a:	call   QWORD PTR [rip+0x1290]        # 0x1400080a0
   140006e10:	mov    r8,rsi
   140006e13:	xor    edx,edx
   140006e15:	mov    rcx,rax
   140006e18:	call   QWORD PTR [rip+0x127a]        # 0x140008098
   140006e1e:	lea    r11,[rsp+0x40]
   140006e23:	mov    rbx,QWORD PTR [r11+0x38]
   140006e27:	mov    rbp,QWORD PTR [r11+0x40]
   140006e2b:	mov    rsp,r11
   140006e2e:	pop    r15
   140006e30:	pop    r14
   140006e32:	pop    r12
   140006e34:	pop    rdi
   140006e35:	pop    rsi
   140006e36:	ret    
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	mov    rax,rsp
   140006e43:	mov    DWORD PTR [rax+0x10],edx
   140006e46:	mov    QWORD PTR [rax+0x18],r8
   140006e4a:	mov    QWORD PTR [rax+0x20],r9
   140006e4e:	push   rbp
   140006e4f:	push   rbx
   140006e50:	push   rsi
   140006e51:	push   rdi
   140006e52:	lea    rbp,[rax-0x13a8]
   140006e59:	mov    eax,0x1488
   140006e5e:	call   0x140007ef0
   140006e63:	sub    rsp,rax
   140006e66:	mov    rax,QWORD PTR [rip+0x619b]        # 0x14000d008
   140006e6d:	xor    rax,rsp
   140006e70:	mov    QWORD PTR [rbp+0x1370],rax
   140006e77:	mov    esi,ecx
   140006e79:	xor    ecx,ecx
   140006e7b:	call   QWORD PTR [rip+0x124f]        # 0x1400080d0
   140006e81:	xor    edi,edi
   140006e83:	mov    rbx,rax
   140006e86:	lea    rcx,[rax-0x1]
   140006e8a:	cmp    rcx,0xfffffffffffffffd
   140006e8e:	ja     0x140006f81
   140006e94:	xor    edx,edx
   140006e96:	lea    rcx,[rsp+0x50]
   140006e9b:	mov    r8d,0x208
   140006ea1:	call   0x140007eae
   140006ea6:	mov    ecx,DWORD PTR [rbp+0x13b8]
   140006eac:	test   ecx,ecx
   140006eae:	je     0x140006ec6
   140006eb0:	sub    ecx,0x1
   140006eb3:	je     0x140006ebf
   140006eb5:	cmp    ecx,0x1
   140006eb8:	jne    0x140006ee1
   140006eba:	lea    edx,[rdi+0x16]
   140006ebd:	jmp    0x140006ecb
   140006ebf:	mov    edx,0x15
   140006ec4:	jmp    0x140006ecb
   140006ec6:	mov    edx,0x14
   140006ecb:	mov    r9d,0x104
   140006ed1:	lea    r8,[rsp+0x50]
   140006ed6:	mov    rcx,rbx
   140006ed9:	call   QWORD PTR [rip+0x11f9]        # 0x1400080d8
   140006edf:	mov    edi,eax
   140006ee1:	xor    edx,edx
   140006ee3:	lea    rcx,[rbp+0x160]
   140006eea:	mov    r8d,0x208
   140006ef0:	call   0x140007eae
   140006ef5:	mov    r9d,0x104
   140006efb:	lea    r8,[rbp+0x160]
   140006f02:	mov    edx,esi
   140006f04:	mov    rcx,rbx
   140006f07:	call   QWORD PTR [rip+0x11cb]        # 0x1400080d8
   140006f0d:	test   eax,eax
   140006f0f:	jle    0x140006f81
   140006f11:	xor    edx,edx
   140006f13:	lea    rcx,[rbp+0x370]
   140006f1a:	mov    r8d,0x1000
   140006f20:	call   0x140007eae
   140006f25:	lea    rax,[rbp+0x13c0]
   140006f2c:	xor    r9d,r9d
   140006f2f:	mov    QWORD PTR [rsp+0x40],rax
   140006f34:	lea    rdx,[rbp+0x160]
   140006f3b:	lea    rax,[rsp+0x40]
   140006f40:	xor    r8d,r8d
   140006f43:	mov    QWORD PTR [rsp+0x30],rax
   140006f48:	mov    ecx,0x400
   140006f4d:	lea    rax,[rbp+0x370]
   140006f54:	mov    DWORD PTR [rsp+0x28],0x800
   140006f5c:	mov    QWORD PTR [rsp+0x20],rax
   140006f61:	call   QWORD PTR [rip+0x1181]        # 0x1400080e8
   140006f67:	test   edi,edi
   140006f69:	jle    0x140006f75
   140006f6b:	lea    rcx,[rsp+0x50]
   140006f70:	call   0x140006ce0
   140006f75:	lea    rcx,[rbp+0x370]
   140006f7c:	call   0x140006ce0
   140006f81:	mov    rcx,QWORD PTR [rbp+0x1370]
   140006f88:	xor    rcx,rsp
   140006f8b:	call   0x140007730
   140006f90:	add    rsp,0x1488
   140006f97:	pop    rdi
   140006f98:	pop    rsi
   140006f99:	pop    rbx
   140006f9a:	pop    rbp
   140006f9b:	ret    
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	int3   
   140006fa1:	int3   
   140006fa2:	int3   
   140006fa3:	int3   
   140006fa4:	mov    QWORD PTR [rsp+0x8],rbx
   140006fa9:	push   rdi
   140006faa:	sub    rsp,0x240
   140006fb1:	mov    rax,QWORD PTR [rip+0x6050]        # 0x14000d008
   140006fb8:	xor    rax,rsp
   140006fbb:	mov    QWORD PTR [rsp+0x230],rax
   140006fc3:	xor    ecx,ecx
   140006fc5:	call   QWORD PTR [rip+0x1105]        # 0x1400080d0
   140006fcb:	mov    rdi,rax
   140006fce:	lea    rcx,[rax-0x1]
   140006fd2:	cmp    rcx,0xfffffffffffffffd
   140006fd6:	ja     0x140007029
   140006fd8:	mov    ebx,0x12d
   140006fdd:	xor    edx,edx
   140006fdf:	lea    rcx,[rsp+0x20]
   140006fe4:	mov    r8d,0x208
   140006fea:	call   0x140007eae
   140006fef:	mov    r9d,0x104
   140006ff5:	lea    r8,[rsp+0x20]
   140006ffa:	mov    edx,ebx
   140006ffc:	mov    rcx,rdi
   140006fff:	call   QWORD PTR [rip+0x10d3]        # 0x1400080d8
   140007005:	test   eax,eax
   140007007:	jle    0x14000701f
   140007009:	lea    rcx,[rip+0x3b88]        # 0x14000ab98
   140007010:	call   0x140006ce0
   140007015:	lea    rcx,[rsp+0x20]
   14000701a:	call   0x140006ce0
   14000701f:	inc    ebx
   140007021:	cmp    ebx,0x148
   140007027:	jbe    0x140006fdd
   140007029:	mov    rcx,QWORD PTR [rsp+0x230]
   140007031:	xor    rcx,rsp
   140007034:	call   0x140007730
   140007039:	mov    rbx,QWORD PTR [rsp+0x250]
   140007041:	add    rsp,0x240
   140007048:	pop    rdi
   140007049:	ret    
   14000704a:	int3   
   14000704b:	int3   
   14000704c:	int3   
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	mov    r11,rsp
   140007053:	mov    QWORD PTR [r11+0x8],rbx
   140007057:	mov    QWORD PTR [r11+0x10],rsi
   14000705b:	push   rdi
   14000705c:	sub    rsp,0x160
   140007063:	mov    rax,QWORD PTR [rip+0x5f9e]        # 0x14000d008
   14000706a:	xor    rax,rsp
   14000706d:	mov    QWORD PTR [rsp+0x150],rax
   140007075:	xor    ebx,ebx
   140007077:	mov    edi,ebx
   140007079:	mov    esi,ebx
   14000707b:	mov    QWORD PTR [rsp+0x80],rbx
   140007083:	mov    DWORD PTR [rsp+0xa8],ebx
   14000708a:	mov    WORD PTR [rsp+0xac],0x500
   140007094:	mov    DWORD PTR [rsp+0xb0],ebx
   14000709b:	mov    WORD PTR [rsp+0xb4],0x100
   1400070a5:	mov    QWORD PTR [rsp+0x68],rbx
   1400070aa:	mov    QWORD PTR [rsp+0x70],rbx
   1400070af:	mov    QWORD PTR [rsp+0x78],rbx
   1400070b4:	mov    QWORD PTR [r11-0xe0],rbx
   1400070bb:	mov    rax,QWORD PTR [rip+0x6596]        # 0x14000d658
   1400070c2:	test   rax,rax
   1400070c5:	jne    0x140007329
   1400070cb:	xor    edx,edx
   1400070cd:	mov    r8d,0x90
   1400070d3:	lea    rcx,[r11-0xa8]
   1400070da:	call   0x140007eae
   1400070df:	lea    rax,[rsp+0x68]
   1400070e4:	mov    QWORD PTR [rsp+0x50],rax
   1400070e9:	mov    DWORD PTR [rsp+0x48],ebx
   1400070ed:	mov    DWORD PTR [rsp+0x40],ebx
   1400070f1:	mov    DWORD PTR [rsp+0x38],ebx
   1400070f5:	mov    DWORD PTR [rsp+0x30],ebx
   1400070f9:	mov    DWORD PTR [rsp+0x28],ebx
   1400070fd:	mov    DWORD PTR [rsp+0x20],ebx
   140007101:	xor    r9d,r9d
   140007104:	lea    r8d,[rbx+0x12]
   140007108:	mov    dl,0x1
   14000710a:	lea    rcx,[rsp+0xa8]
   140007112:	call   QWORD PTR [rip+0x1168]        # 0x140008280
   140007118:	test   eax,eax
   14000711a:	jne    0x140007129
   14000711c:	call   QWORD PTR [rip+0xf06]        # 0x140008028
   140007122:	mov    edi,eax
   140007124:	jmp    0x140007363
   140007129:	mov    DWORD PTR [rsp+0xc0],0x1f0001
   140007134:	mov    edi,0x2
   140007139:	mov    QWORD PTR [rsp+0xc4],rdi
   140007141:	mov    DWORD PTR [rsp+0xdc],ebx
   140007148:	mov    DWORD PTR [rsp+0xe0],0x5
   140007153:	mov    rax,QWORD PTR [rsp+0x68]
   140007158:	mov    QWORD PTR [rsp+0xe8],rax
   140007160:	lea    rax,[rsp+0x70]
   140007165:	mov    QWORD PTR [rsp+0x50],rax
   14000716a:	mov    DWORD PTR [rsp+0x48],ebx
   14000716e:	mov    DWORD PTR [rsp+0x40],ebx
   140007172:	mov    DWORD PTR [rsp+0x38],ebx
   140007176:	mov    DWORD PTR [rsp+0x30],ebx
   14000717a:	mov    DWORD PTR [rsp+0x28],ebx
   14000717e:	mov    DWORD PTR [rsp+0x20],ebx
   140007182:	mov    r9d,0x220
   140007188:	lea    r8d,[rdi+0x1e]
   14000718c:	mov    dl,dil
   14000718f:	lea    rcx,[rsp+0xa8]
   140007197:	call   QWORD PTR [rip+0x10e3]        # 0x140008280
   14000719d:	test   eax,eax
   14000719f:	je     0x14000711c
   1400071a5:	mov    DWORD PTR [rsp+0xf0],0x1f0001
   1400071b0:	mov    QWORD PTR [rsp+0xf4],rdi
   1400071b8:	mov    DWORD PTR [rsp+0x10c],ebx
   1400071bf:	mov    DWORD PTR [rsp+0x110],edi
   1400071c6:	mov    rax,QWORD PTR [rsp+0x70]
   1400071cb:	mov    QWORD PTR [rsp+0x118],rax
   1400071d3:	lea    rax,[rsp+0x78]
   1400071d8:	mov    QWORD PTR [rsp+0x50],rax
   1400071dd:	mov    DWORD PTR [rsp+0x48],ebx
   1400071e1:	mov    DWORD PTR [rsp+0x40],ebx
   1400071e5:	mov    DWORD PTR [rsp+0x38],ebx
   1400071e9:	mov    DWORD PTR [rsp+0x30],ebx
   1400071ed:	mov    DWORD PTR [rsp+0x28],ebx
   1400071f1:	mov    DWORD PTR [rsp+0x20],ebx
   1400071f5:	xor    r9d,r9d
   1400071f8:	xor    r8d,r8d
   1400071fb:	mov    dl,0x1
   1400071fd:	lea    rcx,[rsp+0xb0]
   140007205:	call   QWORD PTR [rip+0x1075]        # 0x140008280
   14000720b:	test   eax,eax
   14000720d:	je     0x14000711c
   140007213:	mov    DWORD PTR [rsp+0x120],0x120001
   14000721e:	mov    QWORD PTR [rsp+0x124],rdi
   140007226:	mov    DWORD PTR [rsp+0x13c],ebx
   14000722d:	mov    DWORD PTR [rsp+0x140],0x5
   140007238:	mov    rax,QWORD PTR [rsp+0x78]
   14000723d:	mov    QWORD PTR [rsp+0x148],rax
   140007245:	lea    r9,[rsp+0x88]
   14000724d:	xor    r8d,r8d
   140007250:	lea    rdx,[rsp+0xc0]
   140007258:	lea    ecx,[rdi+0x1]
   14000725b:	call   QWORD PTR [rip+0x1037]        # 0x140008298
   140007261:	mov    edi,eax
   140007263:	test   eax,eax
   140007265:	jne    0x140007363
   14000726b:	lea    edx,[rax+0x28]
   14000726e:	lea    ecx,[rax+0x40]
   140007271:	call   QWORD PTR [rip+0xe49]        # 0x1400080c0
   140007277:	mov    rsi,rax
   14000727a:	mov    QWORD PTR [rsp+0x80],rax
   140007282:	test   rax,rax
   140007285:	je     0x14000711c
   14000728b:	lea    edx,[rdi+0x1]
   14000728e:	mov    rcx,rax
   140007291:	call   QWORD PTR [rip+0xfe1]        # 0x140008278
   140007297:	test   eax,eax
   140007299:	je     0x14000711c
   14000729f:	xor    r9d,r9d
   1400072a2:	mov    r8,QWORD PTR [rsp+0x88]
   1400072aa:	lea    edx,[rdi+0x1]
   1400072ad:	mov    rcx,rsi
   1400072b0:	call   QWORD PTR [rip+0xfba]        # 0x140008270
   1400072b6:	test   eax,eax
   1400072b8:	je     0x14000711c
   1400072be:	mov    DWORD PTR [rsp+0x90],0x18
   1400072c9:	mov    DWORD PTR [rsp+0xa0],0x1
   1400072d4:	mov    QWORD PTR [rsp+0x98],rsi
   1400072dc:	lea    r8,[rip+0x38bd]        # 0x14000aba0
   1400072e3:	xor    edx,edx
   1400072e5:	lea    rcx,[rsp+0x90]
   1400072ed:	call   QWORD PTR [rip+0xf1d]        # 0x140008210
   1400072f3:	mov    QWORD PTR [rip+0x635e],rax        # 0x14000d658
   1400072fa:	test   rax,rax
   1400072fd:	jne    0x140007312
   1400072ff:	call   QWORD PTR [rip+0xd23]        # 0x140008028
   140007305:	mov    edi,eax
   140007307:	mov    DWORD PTR [rsp+0x60],eax
   14000730b:	mov    rax,QWORD PTR [rip+0x6346]        # 0x14000d658
   140007312:	jmp    0x140007324
   140007314:	mov    edi,eax
   140007316:	mov    DWORD PTR [rsp+0x60],eax
   14000731a:	mov    rsi,QWORD PTR [rsp+0x80]
   140007322:	jmp    0x140007363
   140007324:	test   rax,rax
   140007327:	je     0x14000734f
   140007329:	mov    edx,0x927c0
   14000732e:	mov    rcx,rax
   140007331:	call   QWORD PTR [rip+0xef1]        # 0x140008228
   140007337:	mov    edi,eax
   140007339:	mov    DWORD PTR [rsp+0x60],eax
   14000733d:	jmp    0x14000734f
   14000733f:	mov    edi,eax
   140007341:	mov    DWORD PTR [rsp+0x60],eax
   140007345:	mov    rsi,QWORD PTR [rsp+0x80]
   14000734d:	jmp    0x140007363
   14000734f:	test   edi,0xffffff7f
   140007355:	je     0x140007361
   140007357:	cmp    edi,0xffffffff
   14000735a:	jne    0x140007363
   14000735c:	jmp    0x14000711c
   140007361:	mov    edi,ebx
   140007363:	mov    rcx,QWORD PTR [rsp+0x68]
   140007368:	test   rcx,rcx
   14000736b:	je     0x140007373
   14000736d:	call   QWORD PTR [rip+0xf15]        # 0x140008288
   140007373:	mov    rcx,QWORD PTR [rsp+0x70]
   140007378:	test   rcx,rcx
   14000737b:	je     0x140007383
   14000737d:	call   QWORD PTR [rip+0xf05]        # 0x140008288
   140007383:	mov    rcx,QWORD PTR [rsp+0x78]
   140007388:	test   rcx,rcx
   14000738b:	je     0x140007393
   14000738d:	call   QWORD PTR [rip+0xef5]        # 0x140008288
   140007393:	mov    rcx,QWORD PTR [rsp+0x88]
   14000739b:	test   rcx,rcx
   14000739e:	je     0x1400073a6
   1400073a0:	call   QWORD PTR [rip+0xd12]        # 0x1400080b8
   1400073a6:	test   rsi,rsi
   1400073a9:	je     0x1400073b4
   1400073ab:	mov    rcx,rsi
   1400073ae:	call   QWORD PTR [rip+0xd04]        # 0x1400080b8
   1400073b4:	mov    eax,edi
   1400073b6:	mov    rcx,QWORD PTR [rsp+0x150]
   1400073be:	xor    rcx,rsp
   1400073c1:	call   0x140007730
   1400073c6:	lea    r11,[rsp+0x160]
   1400073ce:	mov    rbx,QWORD PTR [r11+0x10]
   1400073d2:	mov    rsi,QWORD PTR [r11+0x18]
   1400073d6:	mov    rsp,r11
   1400073d9:	pop    rdi
   1400073da:	ret    
   1400073db:	int3   
   1400073dc:	int3   
   1400073dd:	int3   
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	int3   
   1400073e1:	int3   
   1400073e2:	int3   
   1400073e3:	int3   
   1400073e4:	int3   
   1400073e5:	int3   
   1400073e6:	int3   
   1400073e7:	int3   
   1400073e8:	int3   
   1400073e9:	int3   
   1400073ea:	int3   
   1400073eb:	int3   
   1400073ec:	int3   
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	sub    rsp,0x28
   1400073f4:	mov    eax,0x5a4d
   1400073f9:	cmp    WORD PTR [rip+0xffffffffffff8c00],ax        # 0x140000000
   140007400:	je     0x140007406
   140007402:	xor    eax,eax
   140007404:	jmp    0x140007455
   140007406:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8c2f]        # 0x14000003c
   14000740d:	lea    rax,[rip+0xffffffffffff8bec]        # 0x140000000
   140007414:	add    rcx,rax
   140007417:	cmp    DWORD PTR [rcx],0x4550
   14000741d:	jne    0x140007402
   14000741f:	movzx  eax,WORD PTR [rcx+0x18]
   140007423:	cmp    eax,0x10b
   140007428:	je     0x140007444
   14000742a:	cmp    eax,0x20b
   14000742f:	jne    0x140007402
   140007431:	xor    eax,eax
   140007433:	cmp    DWORD PTR [rcx+0x84],0xe
   14000743a:	jbe    0x140007455
   14000743c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007442:	jmp    0x140007452
   140007444:	xor    eax,eax
   140007446:	cmp    DWORD PTR [rcx+0x74],0xe
   14000744a:	jbe    0x140007455
   14000744c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007452:	setne  al
   140007455:	mov    ecx,0x1
   14000745a:	mov    DWORD PTR [rip+0x5c30],eax        # 0x14000d090
   140007460:	call   0x140007828
   140007465:	mov    ecx,eax
   140007467:	call   QWORD PTR [rip+0xec3]        # 0x140008330
   14000746d:	mov    rcx,QWORD PTR [rip+0xe84]        # 0x1400082f8
   140007474:	or     rax,0xffffffffffffffff
   140007478:	mov    QWORD PTR [rip+0x6a01],rax        # 0x14000de80
   14000747f:	mov    QWORD PTR [rip+0x6a02],rax        # 0x14000de88
   140007486:	mov    eax,DWORD PTR [rip+0x5c18]        # 0x14000d0a4
   14000748c:	mov    DWORD PTR [rcx],eax
   14000748e:	mov    rcx,QWORD PTR [rip+0xe5b]        # 0x1400082f0
   140007495:	mov    eax,DWORD PTR [rip+0x5bfd]        # 0x14000d098
   14000749b:	mov    DWORD PTR [rcx],eax
   14000749d:	call   0x140007a40
   1400074a2:	cmp    DWORD PTR [rip+0x5b57],0x0        # 0x14000d000
   1400074a9:	jne    0x1400074b8
   1400074ab:	lea    rcx,[rip+0x58e]        # 0x140007a40
   1400074b2:	call   QWORD PTR [rip+0xe58]        # 0x140008310
   1400074b8:	xor    eax,eax
   1400074ba:	add    rsp,0x28
   1400074be:	ret    
   1400074bf:	int3   
   1400074c0:	int3   
   1400074c1:	int3   
   1400074c2:	int3   
   1400074c3:	int3   
   1400074c4:	int3   
   1400074c5:	int3   
   1400074c6:	int3   
   1400074c7:	int3   
   1400074c8:	int3   
   1400074c9:	int3   
   1400074ca:	int3   
   1400074cb:	int3   
   1400074cc:	int3   
   1400074cd:	int3   
   1400074ce:	int3   
   1400074cf:	int3   
   1400074d0:	sub    rsp,0x38
   1400074d4:	mov    eax,DWORD PTR [rip+0x5bc6]        # 0x14000d0a0
   1400074da:	lea    r8,[rip+0x5ba7]        # 0x14000d088
   1400074e1:	mov    r9d,DWORD PTR [rip+0x5bb4]        # 0x14000d09c
   1400074e8:	lea    rdx,[rip+0x5b91]        # 0x14000d080
   1400074ef:	mov    DWORD PTR [rip+0x5b9f],eax        # 0x14000d094
   1400074f5:	lea    rcx,[rip+0x5b7c]        # 0x14000d078
   1400074fc:	lea    rax,[rip+0x5b91]        # 0x14000d094
   140007503:	mov    QWORD PTR [rsp+0x20],rax
   140007508:	call   QWORD PTR [rip+0xe2a]        # 0x140008338
   14000750e:	mov    DWORD PTR [rip+0x5b68],eax        # 0x14000d07c
   140007514:	add    rsp,0x38
   140007518:	ret    
   140007519:	int3   
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	int3   
   14000751d:	int3   
   14000751e:	int3   
   14000751f:	int3   
   140007520:	mov    rax,rsp
   140007523:	mov    QWORD PTR [rax+0x8],rbx
   140007527:	mov    QWORD PTR [rax+0x10],rsi
   14000752b:	mov    QWORD PTR [rax+0x18],rdi
   14000752f:	mov    QWORD PTR [rax+0x20],r12
   140007533:	push   r14
   140007535:	sub    rsp,0x30
   140007539:	mov    rax,QWORD PTR gs:0x30
   140007542:	mov    rbx,QWORD PTR [rax+0x8]
   140007546:	xor    r14d,r14d
   140007549:	xor    eax,eax
   14000754b:	lock cmpxchg QWORD PTR [rip+0x693c],rbx        # 0x14000de90
   140007554:	je     0x140007572
   140007556:	cmp    rax,rbx
   140007559:	jne    0x140007565
   14000755b:	mov    ebx,0x1
   140007560:	mov    r14d,ebx
   140007563:	jmp    0x140007577
   140007565:	mov    ecx,0x3e8
   14000756a:	call   QWORD PTR [rip+0xcb0]        # 0x140008220
   140007570:	jmp    0x140007549
   140007572:	mov    ebx,0x1
   140007577:	mov    eax,DWORD PTR [rip+0x691b]        # 0x14000de98
   14000757d:	cmp    eax,ebx
   14000757f:	jne    0x14000758d
   140007581:	mov    ecx,0x1f
   140007586:	call   0x140007874
   14000758b:	jmp    0x1400075f6
   14000758d:	mov    eax,DWORD PTR [rip+0x6905]        # 0x14000de98
   140007593:	test   eax,eax
   140007595:	jne    0x1400075f0
   140007597:	mov    DWORD PTR [rip+0x68fb],ebx        # 0x14000de98
   14000759d:	lea    r12,[rip+0xe54]        # 0x1400083f8
   1400075a4:	lea    rdi,[rip+0xe35]        # 0x1400083e0
   1400075ab:	mov    QWORD PTR [rsp+0x28],rdi
   1400075b0:	mov    DWORD PTR [rsp+0x20],eax
   1400075b4:	cmp    rdi,r12
   1400075b7:	jae    0x1400075e2
   1400075b9:	test   eax,eax
   1400075bb:	jne    0x1400075e6
   1400075bd:	mov    rsi,QWORD PTR [rdi]
   1400075c0:	test   rsi,rsi
   1400075c3:	je     0x1400075d7
   1400075c5:	mov    rcx,rsi
   1400075c8:	mov    rax,QWORD PTR [rip+0xde9]        # 0x1400083b8
   1400075cf:	call   rax
   1400075d1:	call   rsi
   1400075d3:	mov    DWORD PTR [rsp+0x20],eax
   1400075d7:	add    rdi,0x8
   1400075db:	mov    QWORD PTR [rsp+0x28],rdi
   1400075e0:	jmp    0x1400075b4
   1400075e2:	test   eax,eax
   1400075e4:	je     0x1400075f6
   1400075e6:	mov    eax,0xff
   1400075eb:	jmp    0x1400076d7
   1400075f0:	mov    DWORD PTR [rip+0x5a7e],ebx        # 0x14000d074
   1400075f6:	mov    eax,DWORD PTR [rip+0x689c]        # 0x14000de98
   1400075fc:	cmp    eax,ebx
   1400075fe:	jne    0x14000761d
   140007600:	lea    rdx,[rip+0xdd1]        # 0x1400083d8
   140007607:	lea    rcx,[rip+0xdba]        # 0x1400083c8
   14000760e:	call   0x140007a4a
   140007613:	mov    DWORD PTR [rip+0x687b],0x2        # 0x14000de98
   14000761d:	test   r14d,r14d
   140007620:	jne    0x14000762b
   140007622:	xor    eax,eax
   140007624:	xchg   QWORD PTR [rip+0x6865],rax        # 0x14000de90
   14000762b:	cmp    QWORD PTR [rip+0x686d],0x0        # 0x14000dea0
   140007633:	je     0x140007663
   140007635:	lea    rcx,[rip+0x6864]        # 0x14000dea0
   14000763c:	call   0x1400078d0
   140007641:	test   eax,eax
   140007643:	je     0x140007663
   140007645:	mov    rbx,QWORD PTR [rip+0x6854]        # 0x14000dea0
   14000764c:	mov    rcx,rbx
   14000764f:	mov    rax,QWORD PTR [rip+0xd62]        # 0x1400083b8
   140007656:	call   rax
   140007658:	xor    r8d,r8d
   14000765b:	lea    edx,[r8+0x2]
   14000765f:	xor    ecx,ecx
   140007661:	call   rbx
   140007663:	mov    r8,QWORD PTR [rip+0x5a1e]        # 0x14000d088
   14000766a:	mov    rdx,QWORD PTR [rip+0x5a0f]        # 0x14000d080
   140007671:	mov    ecx,DWORD PTR [rip+0x5a01]        # 0x14000d078
   140007677:	call   0x140002bb4
   14000767c:	mov    DWORD PTR [rip+0x59ee],eax        # 0x14000d070
   140007682:	cmp    DWORD PTR [rip+0x5a07],0x0        # 0x14000d090
   140007689:	jne    0x140007693
   14000768b:	mov    ecx,eax
   14000768d:	call   QWORD PTR [rip+0xc95]        # 0x140008328
   140007693:	cmp    DWORD PTR [rip+0x59da],0x0        # 0x14000d074
   14000769a:	jne    0x1400076a8
   14000769c:	call   QWORD PTR [rip+0xc76]        # 0x140008318
   1400076a2:	mov    eax,DWORD PTR [rip+0x59c8]        # 0x14000d070
   1400076a8:	jmp    0x1400076d7
   1400076aa:	mov    DWORD PTR [rip+0x59c0],eax        # 0x14000d070
   1400076b0:	cmp    DWORD PTR [rip+0x59d9],0x0        # 0x14000d090
   1400076b7:	jne    0x1400076c2
   1400076b9:	mov    ecx,eax
   1400076bb:	call   QWORD PTR [rip+0xc5f]        # 0x140008320
   1400076c1:	int3   
   1400076c2:	cmp    DWORD PTR [rip+0x59ab],0x0        # 0x14000d074
   1400076c9:	jne    0x1400076d7
   1400076cb:	call   QWORD PTR [rip+0xc47]        # 0x140008318
   1400076d1:	mov    eax,DWORD PTR [rip+0x5999]        # 0x14000d070
   1400076d7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400076dc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400076e1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400076e6:	mov    r12,QWORD PTR [rsp+0x58]
   1400076eb:	add    rsp,0x30
   1400076ef:	pop    r14
   1400076f1:	ret    
   1400076f2:	int3   
   1400076f3:	int3   
   1400076f4:	int3   
   1400076f5:	int3   
   1400076f6:	int3   
   1400076f7:	int3   
   1400076f8:	int3   
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	int3   
   1400076fd:	int3   
   1400076fe:	int3   
   1400076ff:	int3   
   140007700:	sub    rsp,0x28
   140007704:	call   0x140007964
   140007709:	add    rsp,0x28
   14000770d:	jmp    0x140007520
   140007712:	int3   
   140007713:	int3   
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	int3   
   140007721:	int3   
   140007722:	int3   
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007730:	cmp    rcx,QWORD PTR [rip+0x58d1]        # 0x14000d008
   140007737:	jne    0x140007749
   140007739:	rol    rcx,0x10
   14000773d:	test   cx,0xffff
   140007742:	jne    0x140007745
   140007744:	ret    
   140007745:	ror    rcx,0x10
   140007749:	jmp    0x140007ac0
   14000774e:	int3   
   14000774f:	int3   
   140007750:	int3   
   140007751:	int3   
   140007752:	int3   
   140007753:	int3   
   140007754:	int3   
   140007755:	int3   
   140007756:	int3   
   140007757:	int3   
   140007758:	int3   
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	sub    rsp,0x28
   140007764:	mov    rax,QWORD PTR [rcx]
   140007767:	cmp    DWORD PTR [rax],0xe06d7363
   14000776d:	jne    0x140007792
   14000776f:	cmp    DWORD PTR [rax+0x18],0x4
   140007773:	jne    0x140007792
   140007775:	mov    ecx,DWORD PTR [rax+0x20]
   140007778:	lea    eax,[rcx-0x19930520]
   14000777e:	cmp    eax,0x2
   140007781:	jbe    0x14000778b
   140007783:	cmp    ecx,0x1994000
   140007789:	jne    0x140007792
   14000778b:	call   QWORD PTR [rip+0xb57]        # 0x1400082e8
   140007791:	int3   
   140007792:	xor    eax,eax
   140007794:	add    rsp,0x28
   140007798:	ret    
   140007799:	int3   
   14000779a:	int3   
   14000779b:	int3   
   14000779c:	int3   
   14000779d:	int3   
   14000779e:	int3   
   14000779f:	int3   
   1400077a0:	sub    rsp,0x28
   1400077a4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140007760
   1400077ab:	call   QWORD PTR [rip+0x86f]        # 0x140008020
   1400077b1:	xor    eax,eax
   1400077b3:	add    rsp,0x28
   1400077b7:	ret    
   1400077b8:	int3   
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	jmp    QWORD PTR [rip+0xb84]        # 0x140008348
   1400077c4:	int3   
   1400077c5:	int3   
   1400077c6:	int3   
   1400077c7:	int3   
   1400077c8:	int3   
   1400077c9:	int3   
   1400077ca:	int3   
   1400077cb:	int3   
   1400077cc:	sub    rsp,0x18
   1400077d0:	xor    edx,edx
   1400077d2:	lea    rax,[rcx-0x1]
   1400077d6:	cmp    rax,0xfffffffffffffffd
   1400077da:	ja     0x140007818
   1400077dc:	mov    eax,0x5a4d
   1400077e1:	cmp    WORD PTR [rcx],ax
   1400077e4:	jne    0x140007810
   1400077e6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400077e9:	jl     0x140007810
   1400077eb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400077f2:	jae    0x140007810
   1400077f4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400077f8:	add    rax,rcx
   1400077fb:	mov    QWORD PTR [rsp],rax
   1400077ff:	cmp    DWORD PTR [rax],0x4550
   140007805:	cmovne rax,rdx
   140007809:	mov    rdx,rax
   14000780c:	mov    QWORD PTR [rsp],rax
   140007810:	jmp    0x140007818
   140007812:	xor    edx,edx
   140007814:	mov    QWORD PTR [rsp],rdx
   140007818:	mov    rax,rdx
   14000781b:	add    rsp,0x18
   14000781f:	ret    
   140007820:	int3   
   140007821:	int3   
   140007822:	int3   
   140007823:	int3   
   140007824:	int3   
   140007825:	int3   
   140007826:	int3   
   140007827:	int3   
   140007828:	rex push rbx
   14000782a:	sub    rsp,0x20
   14000782e:	mov    ebx,ecx
   140007830:	xor    ecx,ecx
   140007832:	call   QWORD PTR [rip+0x898]        # 0x1400080d0
   140007838:	test   rax,rax
   14000783b:	je     0x140007865
   14000783d:	mov    rcx,rax
   140007840:	call   0x1400077cc
   140007845:	test   rax,rax
   140007848:	je     0x140007865
   14000784a:	mov    ecx,0x2
   14000784f:	cmp    WORD PTR [rax+0x5c],cx
   140007853:	jne    0x140007859
   140007855:	mov    eax,ecx
   140007857:	jmp    0x140007867
   140007859:	cmp    WORD PTR [rax+0x5c],0x3
   14000785e:	mov    eax,0x1
   140007863:	je     0x140007867
   140007865:	mov    eax,ebx
   140007867:	add    rsp,0x20
   14000786b:	pop    rbx
   14000786c:	ret    
   14000786d:	int3   
   14000786e:	int3   
   14000786f:	int3   
   140007870:	int3   
   140007871:	int3   
   140007872:	int3   
   140007873:	int3   
   140007874:	jmp    QWORD PTR [rip+0xac6]        # 0x140008340
   14000787a:	int3   
   14000787b:	int3   
   14000787c:	int3   
   14000787d:	int3   
   14000787e:	int3   
   14000787f:	int3   
   140007880:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007884:	xor    r9d,r9d
   140007887:	add    r8,rcx
   14000788a:	mov    r10,rdx
   14000788d:	movzx  eax,WORD PTR [r8+0x14]
   140007892:	movzx  r11d,WORD PTR [r8+0x6]
   140007897:	add    rax,0x18
   14000789b:	add    rax,r8
   14000789e:	test   r11d,r11d
   1400078a1:	je     0x1400078c1
   1400078a3:	mov    edx,DWORD PTR [rax+0xc]
   1400078a6:	cmp    r10,rdx
   1400078a9:	jb     0x1400078b5
   1400078ab:	mov    ecx,DWORD PTR [rax+0x8]
   1400078ae:	add    ecx,edx
   1400078b0:	cmp    r10,rcx
   1400078b3:	jb     0x1400078c3
   1400078b5:	inc    r9d
   1400078b8:	add    rax,0x28
   1400078bc:	cmp    r9d,r11d
   1400078bf:	jb     0x1400078a3
   1400078c1:	xor    eax,eax
   1400078c3:	ret    
   1400078c4:	int3   
   1400078c5:	int3   
   1400078c6:	int3   
   1400078c7:	int3   
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	int3   
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078d5:	push   rdi
   1400078d6:	sub    rsp,0x20
   1400078da:	mov    rbx,rcx
   1400078dd:	lea    rdi,[rip+0xffffffffffff871c]        # 0x140000000
   1400078e4:	mov    rcx,rdi
   1400078e7:	call   0x140007930
   1400078ec:	test   eax,eax
   1400078ee:	je     0x140007912
   1400078f0:	sub    rbx,rdi
   1400078f3:	mov    rdx,rbx
   1400078f6:	mov    rcx,rdi
   1400078f9:	call   0x140007880
   1400078fe:	test   rax,rax
   140007901:	je     0x140007912
   140007903:	mov    eax,DWORD PTR [rax+0x24]
   140007906:	shr    eax,0x1f
   140007909:	not    eax
   14000790b:	and    eax,0x1
   14000790e:	jmp    0x140007912
   140007910:	xor    eax,eax
   140007912:	mov    rbx,QWORD PTR [rsp+0x30]
   140007917:	add    rsp,0x20
   14000791b:	pop    rdi
   14000791c:	ret    
   14000791d:	int3   
   14000791e:	int3   
   14000791f:	int3   
   140007920:	int3   
   140007921:	int3   
   140007922:	int3   
   140007923:	int3   
   140007924:	int3   
   140007925:	int3   
   140007926:	int3   
   140007927:	int3   
   140007928:	int3   
   140007929:	int3   
   14000792a:	int3   
   14000792b:	int3   
   14000792c:	int3   
   14000792d:	int3   
   14000792e:	int3   
   14000792f:	int3   
   140007930:	mov    rax,rcx
   140007933:	mov    ecx,0x5a4d
   140007938:	cmp    WORD PTR [rax],cx
   14000793b:	je     0x140007940
   14000793d:	xor    eax,eax
   14000793f:	ret    
   140007940:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007944:	add    rcx,rax
   140007947:	xor    eax,eax
   140007949:	cmp    DWORD PTR [rcx],0x4550
   14000794f:	jne    0x14000795d
   140007951:	mov    edx,0x20b
   140007956:	cmp    WORD PTR [rcx+0x18],dx
   14000795a:	sete   al
   14000795d:	ret    
   14000795e:	int3   
   14000795f:	int3   
   140007960:	int3   
   140007961:	int3   
   140007962:	int3   
   140007963:	int3   
   140007964:	mov    QWORD PTR [rsp+0x20],rbx
   140007969:	push   rbp
   14000796a:	mov    rbp,rsp
   14000796d:	sub    rsp,0x20
   140007971:	and    QWORD PTR [rbp+0x18],0x0
   140007976:	movabs rbx,0x2b992ddfa232
   140007980:	mov    rax,QWORD PTR [rip+0x5681]        # 0x14000d008
   140007987:	cmp    rax,rbx
   14000798a:	jne    0x140007a1f
   140007990:	lea    rcx,[rbp+0x18]
   140007994:	call   QWORD PTR [rip+0x89e]        # 0x140008238
   14000799a:	mov    rax,QWORD PTR [rbp+0x18]
   14000799e:	mov    QWORD PTR [rbp+0x10],rax
   1400079a2:	call   QWORD PTR [rip+0x780]        # 0x140008128
   1400079a8:	mov    eax,eax
   1400079aa:	xor    QWORD PTR [rbp+0x10],rax
   1400079ae:	call   QWORD PTR [rip+0x784]        # 0x140008138
   1400079b4:	mov    eax,eax
   1400079b6:	xor    QWORD PTR [rbp+0x10],rax
   1400079ba:	call   QWORD PTR [rip+0x880]        # 0x140008240
   1400079c0:	mov    eax,eax
   1400079c2:	shl    rax,0x18
   1400079c6:	xor    QWORD PTR [rbp+0x10],rax
   1400079ca:	call   QWORD PTR [rip+0x870]        # 0x140008240
   1400079d0:	mov    eax,eax
   1400079d2:	lea    rcx,[rbp+0x10]
   1400079d6:	xor    rax,QWORD PTR [rbp+0x10]
   1400079da:	xor    rax,rcx
   1400079dd:	lea    rcx,[rbp+0x20]
   1400079e1:	mov    QWORD PTR [rbp+0x10],rax
   1400079e5:	call   QWORD PTR [rip+0x765]        # 0x140008150
   1400079eb:	mov    eax,DWORD PTR [rbp+0x20]
   1400079ee:	movabs rcx,0xffffffffffff
   1400079f8:	shl    rax,0x20
   1400079fc:	xor    rax,QWORD PTR [rbp+0x20]
   140007a00:	xor    rax,QWORD PTR [rbp+0x10]
   140007a04:	and    rax,rcx
   140007a07:	movabs rcx,0x2b992ddfa233
   140007a11:	cmp    rax,rbx
   140007a14:	cmove  rax,rcx
   140007a18:	mov    QWORD PTR [rip+0x55e9],rax        # 0x14000d008
   140007a1f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007a24:	not    rax
   140007a27:	mov    QWORD PTR [rip+0x55e2],rax        # 0x14000d010
   140007a2e:	add    rsp,0x20
   140007a32:	pop    rbp
   140007a33:	ret    
   140007a34:	int3   
   140007a35:	int3   
   140007a36:	int3   
   140007a37:	int3   
   140007a38:	int3   
   140007a39:	int3   
   140007a3a:	int3   
   140007a3b:	int3   
   140007a3c:	int3   
   140007a3d:	int3   
   140007a3e:	int3   
   140007a3f:	int3   
   140007a40:	xor    eax,eax
   140007a42:	ret    
   140007a43:	int3   
   140007a44:	int3   
   140007a45:	int3   
   140007a46:	int3   
   140007a47:	int3   
   140007a48:	int3   
   140007a49:	int3   
   140007a4a:	jmp    QWORD PTR [rip+0x8b8]        # 0x140008308
   140007a50:	int3   
   140007a51:	int3   
   140007a52:	int3   
   140007a53:	int3   
   140007a54:	int3   
   140007a55:	int3   
   140007a56:	jmp    QWORD PTR [rip+0x8a4]        # 0x140008300
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	int3   
   140007a61:	int3   
   140007a62:	int3   
   140007a63:	int3   
   140007a64:	int3   
   140007a65:	int3   
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	int3   
   140007a6b:	int3   
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	ret    0x0
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	int3   
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	rex push rbx
   140007a7e:	sub    rsp,0x20
   140007a82:	mov    rbx,rcx
   140007a85:	xor    ecx,ecx
   140007a87:	call   QWORD PTR [rip+0x593]        # 0x140008020
   140007a8d:	mov    rcx,rbx
   140007a90:	call   QWORD PTR [rip+0x59a]        # 0x140008030
   140007a96:	call   QWORD PTR [rip+0x694]        # 0x140008130
   140007a9c:	mov    rcx,rax
   140007a9f:	mov    edx,0xc0000409
   140007aa4:	add    rsp,0x20
   140007aa8:	pop    rbx
   140007aa9:	rex.W jmp QWORD PTR [rip+0x690]        # 0x140008140
   140007ab0:	int3   
   140007ab1:	int3   
   140007ab2:	int3   
   140007ab3:	int3   
   140007ab4:	int3   
   140007ab5:	int3   
   140007ab6:	int3   
   140007ab7:	int3   
   140007ab8:	int3   
   140007ab9:	int3   
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ac5:	sub    rsp,0x88
   140007acc:	lea    rcx,[rip+0x567d]        # 0x14000d150
   140007ad3:	call   QWORD PTR [rip+0x6f7]        # 0x1400081d0
   140007ad9:	mov    rax,QWORD PTR [rip+0x5768]        # 0x14000d248
   140007ae0:	mov    QWORD PTR [rsp+0x48],rax
   140007ae5:	xor    r8d,r8d
   140007ae8:	lea    rdx,[rsp+0x50]
   140007aed:	mov    rcx,QWORD PTR [rsp+0x48]
   140007af2:	call   QWORD PTR [rip+0x6d0]        # 0x1400081c8
   140007af8:	mov    QWORD PTR [rsp+0x40],rax
   140007afd:	cmp    QWORD PTR [rsp+0x40],0x0
   140007b03:	je     0x140007b47
   140007b05:	mov    QWORD PTR [rsp+0x38],0x0
   140007b0e:	lea    rax,[rsp+0x58]
   140007b13:	mov    QWORD PTR [rsp+0x30],rax
   140007b18:	lea    rax,[rsp+0x60]
   140007b1d:	mov    QWORD PTR [rsp+0x28],rax
   140007b22:	lea    rax,[rip+0x5627]        # 0x14000d150
   140007b29:	mov    QWORD PTR [rsp+0x20],rax
   140007b2e:	mov    r9,QWORD PTR [rsp+0x40]
   140007b33:	mov    r8,QWORD PTR [rsp+0x48]
   140007b38:	mov    rdx,QWORD PTR [rsp+0x50]
   140007b3d:	xor    ecx,ecx
   140007b3f:	call   QWORD PTR [rip+0x67b]        # 0x1400081c0
   140007b45:	jmp    0x140007b6a
   140007b47:	mov    rax,QWORD PTR [rip+0x569a]        # 0x14000d1e8
   140007b4e:	mov    rax,QWORD PTR [rax]
   140007b51:	mov    QWORD PTR [rip+0x56f0],rax        # 0x14000d248
   140007b58:	mov    rax,QWORD PTR [rip+0x5689]        # 0x14000d1e8
   140007b5f:	add    rax,0x8
   140007b63:	mov    QWORD PTR [rip+0x567e],rax        # 0x14000d1e8
   140007b6a:	mov    rax,QWORD PTR [rip+0x56d7]        # 0x14000d248
   140007b71:	mov    QWORD PTR [rip+0x5548],rax        # 0x14000d0c0
   140007b78:	mov    rax,QWORD PTR [rsp+0x90]
   140007b80:	mov    QWORD PTR [rip+0x5649],rax        # 0x14000d1d0
   140007b87:	mov    DWORD PTR [rip+0x551f],0xc0000409        # 0x14000d0b0
   140007b91:	mov    DWORD PTR [rip+0x5519],0x1        # 0x14000d0b4
   140007b9b:	mov    DWORD PTR [rip+0x5523],0x3        # 0x14000d0c8
   140007ba5:	mov    eax,0x8
   140007baa:	imul   rax,rax,0x0
   140007bae:	lea    rcx,[rip+0x551b]        # 0x14000d0d0
   140007bb5:	mov    QWORD PTR [rcx+rax*1],0x2
   140007bbd:	mov    eax,0x8
   140007bc2:	imul   rax,rax,0x1
   140007bc6:	lea    rcx,[rip+0x5503]        # 0x14000d0d0
   140007bcd:	mov    rdx,QWORD PTR [rip+0x5434]        # 0x14000d008
   140007bd4:	mov    QWORD PTR [rcx+rax*1],rdx
   140007bd8:	mov    eax,0x8
   140007bdd:	imul   rax,rax,0x2
   140007be1:	lea    rcx,[rip+0x54e8]        # 0x14000d0d0
   140007be8:	mov    rdx,QWORD PTR [rip+0x5421]        # 0x14000d010
   140007bef:	mov    QWORD PTR [rcx+rax*1],rdx
   140007bf3:	mov    eax,0x8
   140007bf8:	imul   rax,rax,0x0
   140007bfc:	mov    rcx,QWORD PTR [rip+0x5405]        # 0x14000d008
   140007c03:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007c08:	mov    eax,0x8
   140007c0d:	imul   rax,rax,0x1
   140007c11:	mov    rcx,QWORD PTR [rip+0x53f8]        # 0x14000d010
   140007c18:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007c1d:	lea    rcx,[rip+0x80c]        # 0x140008430
   140007c24:	call   0x140007a7c
   140007c29:	add    rsp,0x88
   140007c30:	ret    
   140007c31:	int3   
   140007c32:	int3   
   140007c33:	int3   
   140007c34:	int3   
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	sub    rsp,0x78
   140007c3c:	lea    rcx,[rip+0x550d]        # 0x14000d150
   140007c43:	call   QWORD PTR [rip+0x587]        # 0x1400081d0
   140007c49:	mov    rax,QWORD PTR [rip+0x55f8]        # 0x14000d248
   140007c50:	mov    QWORD PTR [rsp+0x48],rax
   140007c55:	xor    r8d,r8d
   140007c58:	lea    rdx,[rsp+0x50]
   140007c5d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007c62:	call   QWORD PTR [rip+0x560]        # 0x1400081c8
   140007c68:	mov    QWORD PTR [rsp+0x40],rax
   140007c6d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007c73:	je     0x140007cb7
   140007c75:	mov    QWORD PTR [rsp+0x38],0x0
   140007c7e:	lea    rax,[rsp+0x58]
   140007c83:	mov    QWORD PTR [rsp+0x30],rax
   140007c88:	lea    rax,[rsp+0x60]
   140007c8d:	mov    QWORD PTR [rsp+0x28],rax
   140007c92:	lea    rax,[rip+0x54b7]        # 0x14000d150
   140007c99:	mov    QWORD PTR [rsp+0x20],rax
   140007c9e:	mov    r9,QWORD PTR [rsp+0x40]
   140007ca3:	mov    r8,QWORD PTR [rsp+0x48]
   140007ca8:	mov    rdx,QWORD PTR [rsp+0x50]
   140007cad:	xor    ecx,ecx
   140007caf:	call   QWORD PTR [rip+0x50b]        # 0x1400081c0
   140007cb5:	jmp    0x140007cda
   140007cb7:	mov    rax,QWORD PTR [rip+0x552a]        # 0x14000d1e8
   140007cbe:	mov    rax,QWORD PTR [rax]
   140007cc1:	mov    QWORD PTR [rip+0x5580],rax        # 0x14000d248
   140007cc8:	mov    rax,QWORD PTR [rip+0x5519]        # 0x14000d1e8
   140007ccf:	add    rax,0x8
   140007cd3:	mov    QWORD PTR [rip+0x550e],rax        # 0x14000d1e8
   140007cda:	mov    rax,QWORD PTR [rip+0x5567]        # 0x14000d248
   140007ce1:	mov    QWORD PTR [rip+0x53d8],rax        # 0x14000d0c0
   140007ce8:	mov    DWORD PTR [rip+0x53be],0xc0000409        # 0x14000d0b0
   140007cf2:	mov    DWORD PTR [rip+0x53b8],0x1        # 0x14000d0b4
   140007cfc:	mov    DWORD PTR [rip+0x53c2],0x1        # 0x14000d0c8
   140007d06:	mov    eax,0x8
   140007d0b:	imul   rax,rax,0x0
   140007d0f:	lea    rcx,[rip+0x53ba]        # 0x14000d0d0
   140007d16:	mov    QWORD PTR [rcx+rax*1],0x8
   140007d1e:	lea    rcx,[rip+0x70b]        # 0x140008430
   140007d25:	call   0x140007a7c
   140007d2a:	add    rsp,0x78
   140007d2e:	ret    
   140007d2f:	int3   
   140007d30:	int3   
   140007d31:	int3   
   140007d32:	int3   
   140007d33:	int3   
   140007d34:	int3   
   140007d35:	int3   
   140007d36:	int3   
   140007d37:	int3   
   140007d38:	rex push rbx
   140007d3a:	sub    rsp,0x20
   140007d3e:	mov    ebx,ecx
   140007d40:	call   0x140007d5c
   140007d45:	lea    rdx,[rbx+rbx*2]
   140007d49:	shl    rdx,0x4
   140007d4d:	add    rax,rdx
   140007d50:	add    rsp,0x20
   140007d54:	pop    rbx
   140007d55:	ret    
   140007d56:	int3   
   140007d57:	int3   
   140007d58:	int3   
   140007d59:	int3   
   140007d5a:	int3   
   140007d5b:	int3   
   140007d5c:	jmp    QWORD PTR [rip+0x60e]        # 0x140008370
   140007d62:	int3   
   140007d63:	int3   
   140007d64:	int3   
   140007d65:	int3   
   140007d66:	int3   
   140007d67:	int3   
   140007d68:	sub    rsp,0x28
   140007d6c:	mov    r8,QWORD PTR [r9+0x38]
   140007d70:	mov    rcx,rdx
   140007d73:	mov    rdx,r9
   140007d76:	call   0x140007d8c
   140007d7b:	mov    eax,0x1
   140007d80:	add    rsp,0x28
   140007d84:	ret    
   140007d85:	int3   
   140007d86:	int3   
   140007d87:	int3   
   140007d88:	int3   
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	rex push rbx
   140007d8e:	sub    rsp,0x20
   140007d92:	mov    r11d,DWORD PTR [r8]
   140007d95:	mov    rbx,rdx
   140007d98:	and    r11d,0xfffffff8
   140007d9c:	mov    r9,rcx
   140007d9f:	test   BYTE PTR [r8],0x4
   140007da3:	mov    r10,rcx
   140007da6:	je     0x140007dbb
   140007da8:	mov    eax,DWORD PTR [r8+0x8]
   140007dac:	movsxd r10,DWORD PTR [r8+0x4]
   140007db0:	neg    eax
   140007db2:	add    r10,rcx
   140007db5:	movsxd rcx,eax
   140007db8:	and    r10,rcx
   140007dbb:	movsxd rax,r11d
   140007dbe:	mov    rdx,QWORD PTR [rax+r10*1]
   140007dc2:	mov    rax,QWORD PTR [rbx+0x10]
   140007dc6:	mov    ecx,DWORD PTR [rax+0x8]
   140007dc9:	add    rcx,QWORD PTR [rbx+0x8]
   140007dcd:	test   BYTE PTR [rcx+0x3],0xf
   140007dd1:	je     0x140007ddf
   140007dd3:	movzx  eax,BYTE PTR [rcx+0x3]
   140007dd7:	and    eax,0xfffffff0
   140007dda:	cdqe   
   140007ddc:	add    r9,rax
   140007ddf:	xor    r9,rdx
   140007de2:	mov    rcx,r9
   140007de5:	add    rsp,0x20
   140007de9:	pop    rbx
   140007dea:	jmp    0x140007730
   140007def:	int3   
   140007df0:	int3   
   140007df1:	int3   
   140007df2:	int3   
   140007df3:	int3   
   140007df4:	int3   
   140007df5:	int3   
   140007df6:	int3   
   140007df7:	int3   
   140007df8:	mov    rax,rsp
   140007dfb:	mov    QWORD PTR [rax+0x8],rbx
   140007dff:	mov    QWORD PTR [rax+0x10],rbp
   140007e03:	mov    QWORD PTR [rax+0x18],rsi
   140007e07:	mov    QWORD PTR [rax+0x20],rdi
   140007e0b:	push   r14
   140007e0d:	sub    rsp,0x20
   140007e11:	mov    r10,QWORD PTR [r9+0x38]
   140007e15:	mov    rsi,rdx
   140007e18:	mov    r14,r8
   140007e1b:	mov    rbp,rcx
   140007e1e:	mov    rdx,r9
   140007e21:	mov    rcx,rsi
   140007e24:	mov    rdi,r9
   140007e27:	mov    ebx,DWORD PTR [r10]
   140007e2a:	shl    rbx,0x4
   140007e2e:	add    rbx,r10
   140007e31:	lea    r8,[rbx+0x4]
   140007e35:	call   0x140007d8c
   140007e3a:	mov    r11d,DWORD PTR [rbx+0x4]
   140007e3e:	mov    edx,0x1
   140007e43:	mov    r10d,DWORD PTR [rbp+0x4]
   140007e47:	mov    eax,r11d
   140007e4a:	and    eax,edx
   140007e4c:	and    r11d,0x2
   140007e50:	and    r10b,0x66
   140007e54:	cmove  r11d,eax
   140007e58:	test   r11d,r11d
   140007e5b:	je     0x140007e71
   140007e5d:	mov    r9,rdi
   140007e60:	mov    r8,r14
   140007e63:	mov    rdx,rsi
   140007e66:	mov    rcx,rbp
   140007e69:	call   QWORD PTR [rip+0x491]        # 0x140008300
   140007e6f:	mov    edx,eax
   140007e71:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e76:	mov    eax,edx
   140007e78:	mov    rbp,QWORD PTR [rsp+0x38]
   140007e7d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007e82:	mov    rdi,QWORD PTR [rsp+0x48]
   140007e87:	add    rsp,0x20
   140007e8b:	pop    r14
   140007e8d:	ret    
   140007e8e:	int3   
   140007e8f:	int3   
   140007e90:	int3   
   140007e91:	int3   
   140007e92:	int3   
   140007e93:	int3   
   140007e94:	int3   
   140007e95:	int3   
   140007e96:	jmp    QWORD PTR [rip+0x4fc]        # 0x140008398
   140007e9c:	int3   
   140007e9d:	int3   
   140007e9e:	int3   
   140007e9f:	int3   
   140007ea0:	int3   
   140007ea1:	int3   
   140007ea2:	jmp    QWORD PTR [rip+0x4f8]        # 0x1400083a0
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	jmp    QWORD PTR [rip+0x4f4]        # 0x1400083a8
   140007eb4:	int3   
   140007eb5:	int3   
   140007eb6:	int3   
   140007eb7:	int3   
   140007eb8:	int3   
   140007eb9:	int3   
   140007eba:	int3   
   140007ebb:	int3   
   140007ebc:	int3   
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	int3   
   140007ec1:	int3   
   140007ec2:	int3   
   140007ec3:	int3   
   140007ec4:	int3   
   140007ec5:	int3   
   140007ec6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007ed0:	jmp    rax
   140007ed2:	int3   
   140007ed3:	int3   
   140007ed4:	int3   
   140007ed5:	int3   
   140007ed6:	int3   
   140007ed7:	int3   
   140007ed8:	int3   
   140007ed9:	int3   
   140007eda:	int3   
   140007edb:	int3   
   140007edc:	int3   
   140007edd:	int3   
   140007ede:	int3   
   140007edf:	int3   
   140007ee0:	int3   
   140007ee1:	int3   
   140007ee2:	int3   
   140007ee3:	int3   
   140007ee4:	int3   
   140007ee5:	int3   
   140007ee6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007ef0:	sub    rsp,0x10
   140007ef4:	mov    QWORD PTR [rsp],r10
   140007ef8:	mov    QWORD PTR [rsp+0x8],r11
   140007efd:	xor    r11,r11
   140007f00:	lea    r10,[rsp+0x18]
   140007f05:	sub    r10,rax
   140007f08:	cmovb  r10,r11
   140007f0c:	mov    r11,QWORD PTR gs:0x10
   140007f15:	cmp    r10,r11
   140007f18:	jae    0x140007f2f
   140007f1a:	and    r10w,0xf000
   140007f20:	lea    r11,[r11-0x1000]
   140007f27:	test   BYTE PTR [r11],r11b
   140007f2a:	cmp    r10,r11
   140007f2d:	jne    0x140007f20
   140007f2f:	mov    r10,QWORD PTR [rsp]
   140007f33:	mov    r11,QWORD PTR [rsp+0x8]
   140007f38:	add    rsp,0x10
   140007f3c:	ret    
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	int3   
   140007f41:	int3   
   140007f42:	int3   
   140007f43:	int3   
   140007f44:	int3   
   140007f45:	int3   
   140007f46:	rex push rbp
   140007f48:	sub    rsp,0x20
   140007f4c:	mov    rbp,rdx
   140007f4f:	mov    rax,QWORD PTR [rcx]
   140007f52:	mov    rdx,rcx
   140007f55:	mov    ecx,DWORD PTR [rax]
   140007f57:	call   0x1400077be
   140007f5c:	nop
   140007f5d:	add    rsp,0x20
   140007f61:	pop    rbp
   140007f62:	ret    
   140007f63:	int3   
   140007f64:	int3   
   140007f65:	int3   
   140007f66:	int3   
   140007f67:	int3   
   140007f68:	int3   
   140007f69:	int3   
   140007f6a:	int3   
   140007f6b:	int3   
   140007f6c:	int3   
   140007f6d:	int3   
   140007f6e:	int3   
   140007f6f:	int3   
   140007f70:	rex push rbp
   140007f72:	sub    rsp,0x20
   140007f76:	mov    rbp,rdx
   140007f79:	mov    rax,QWORD PTR [rcx]
   140007f7c:	xor    ecx,ecx
   140007f7e:	cmp    DWORD PTR [rax],0xc0000005
   140007f84:	sete   cl
   140007f87:	mov    eax,ecx
   140007f89:	add    rsp,0x20
   140007f8d:	pop    rbp
   140007f8e:	ret    
   140007f8f:	int3   

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	add    dl,al
	...
   14000800e:	add    BYTE PTR [rax],al
   140008010:	fdivr  DWORD PTR [rsi+0x0]
	...
   14000801e:	add    BYTE PTR [rax],al
   140008020:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008021:	mov    esp,0x0
   140008026:	add    BYTE PTR [rax],al
   140008028:	(bad)  
   140008029:	mov    esi,0x0
   14000802e:	add    BYTE PTR [rax],al
   140008030:	mov    BYTE PTR [rbp+0x0],bh
   140008036:	add    BYTE PTR [rax],al
   140008038:	sbb    al,0xbc
	...
   140008046:	add    BYTE PTR [rax],al
   140008048:	push   0xbe
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    dl,bl
   140008051:	mov    ebp,0x0
   140008056:	add    BYTE PTR [rax],al
   140008058:	cld    
   140008059:	mov    ebp,0x0
   14000805e:	add    BYTE PTR [rax],al
   140008060:	or     BYTE PTR [rsi+0x0],bh
   140008066:	add    BYTE PTR [rax],al
   140008068:	and    bh,BYTE PTR [rdi+0x0]
	...
   140008076:	add    BYTE PTR [rax],al
   140008078:	es mov esi,0x0
	...
   140008086:	add    BYTE PTR [rax],al
   140008088:	push   rsi
   140008089:	mov    ebx,0x0
   14000808e:	add    BYTE PTR [rax],al
   140008090:	pop    rsi
   140008091:	mov    esp,0x0
   140008096:	add    BYTE PTR [rax],al
   140008098:	(bad)  
   140008099:	mov    ebx,0x0
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	outs   dx,BYTE PTR ds:[rsi]
   1400080a1:	mov    ebx,0x0
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	int3   
   1400080a9:	mov    ebp,0x0
	...
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	rex.WX movabs rdi,0xbf14000000000000
	...
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	ret    0xbc
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rdx-0x42],bl
	...
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	stos   BYTE PTR es:[rdi],al
   1400080e9:	mov    esi,0x0
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	in     al,0xbb
	...
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	movabs rbx,0xbb36000000000000
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	call   0x1400081d3
   140008115:	add    BYTE PTR [rax],al
   140008117:	add    BYTE PTR [rsp+rdi*4],al
	...
   140008126:	add    BYTE PTR [rax],al
   140008128:	lock mov esp,0x0
   14000812e:	add    BYTE PTR [rax],al
   140008130:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008131:	mov    ebp,0x0
   140008136:	add    BYTE PTR [rax],al
   140008138:	(bad)  
   140008139:	mov    ebp,0x0
   14000813e:	add    BYTE PTR [rax],al
   140008140:	mov    eax,0xbd
	...
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    dh,dl
   140008151:	mov    esp,0x0
	...
   14000815e:	add    BYTE PTR [rax],al
   140008160:	sub    al,0xbc
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax],al
   140008168:	ds mov esp,0x0
   14000816e:	add    BYTE PTR [rax],al
   140008170:	movabs al,ds:0x8e000000000000bb
   140008179:	mov    ebx,0x0
   14000817e:	add    BYTE PTR [rax],al
   140008180:	call   0x140008242
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   14000818b:	add    BYTE PTR [rax],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rsp+rdi*4+0x0],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	xchg   edx,eax
   140008199:	mov    esp,0x0
	...
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	adc    dl,al
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	repnz rol DWORD PTR [rax],0x0
	...
   1400081c0:	je     0x14000817f
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	pop    rdx
   1400081c9:	mov    ebp,0x0
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	rex.RX mov ebp,0x0
	...
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	(bad)  
   1400081e1:	mov    ebx,0x0
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	je     0x1400081a8
	...
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	lods   al,BYTE PTR ds:[rsi]
   1400081f9:	ret    0x0
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	movabs al,ds:0xc2
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rsi+rdi*4],dh
   140008212:	add    BYTE PTR [rax],al
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	cmp    bh,BYTE PTR [rdi+0x0]
   14000821e:	add    BYTE PTR [rax],al
   140008220:	mov    ah,0xbb
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	rex.R mov esi,0x0
	...
   140008236:	add    BYTE PTR [rax],al
   140008238:	sbb    al,0xbd
   14000823a:	add    BYTE PTR [rax],al
   14000823c:	add    BYTE PTR [rax],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	ss mov ebp,0x0
	...
   14000824e:	add    BYTE PTR [rax],al
   140008250:	mov    esp,0xbb
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rsi-0x44],cl
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	cmp    BYTE PTR [rbx+0x0],0x0
	...
   14000826f:	add    BYTE PTR [rsi+rdi*4+0x0],bh
   140008276:	add    BYTE PTR [rax],al
   140008278:	mov    bh,BYTE PTR [rsi+0x0]
   14000827e:	add    BYTE PTR [rax],al
   140008280:	clc    
   140008281:	mov    esi,0x0
   140008286:	add    BYTE PTR [rax],al
   140008288:	xor    BYTE PTR [rdi+0x0],bh
	...
   140008296:	add    BYTE PTR [rax],al
   140008298:	and    dl,al
	...
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	(bad)  
   1400082a9:	mov    edx,0x0
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	cmp    BYTE PTR [rdx+0x0],0x0
   1400082b7:	add    BYTE PTR [rax],dl
   1400082b9:	mov    ebx,0x0
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	cwde   
   1400082c1:	mov    edx,0x0
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	mov    dh,0xba
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	hlt    
   1400082d1:	mov    edx,0x0
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	(bad)  
   1400082d9:	mov    edx,0x0
	...
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	rex.WRX movabs rdx,0xba36000000000000
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	sub    al,0xba
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	adc    al,0xba
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	or     BYTE PTR [rdx+0x0],bh
   14000830e:	add    BYTE PTR [rax],al
   140008310:	hlt    
   140008311:	mov    ecx,0x0
   140008316:	add    BYTE PTR [rax],al
   140008318:	(bad)  
   140008319:	mov    ecx,0x0
   14000831e:	add    BYTE PTR [rax],al
   140008320:	loop   0x1400082db
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	fidivr DWORD PTR [rcx+0x0]
   14000832e:	add    BYTE PTR [rax],al
   140008330:	enter  0xb9,0x0
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	mov    dh,0xb9
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	test   al,0xb9
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	(bad)  
   140008349:	mov    ecx,0x0
   14000834e:	add    BYTE PTR [rax],al
   140008350:	mov    WORD PTR [rcx+0x0],?
   140008356:	add    BYTE PTR [rax],al
   140008358:	(bad)  
   140008359:	mov    ecx,0x0
   14000835e:	add    BYTE PTR [rax],al
   140008360:	jb     0x14000831b
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	push   0xb9
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    ah,ah
   140008371:	ret    0x0
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	bnd ret 0x0
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	inc    dl
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	or     bl,al
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	adc    bl,al
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	sbb    al,0xc3
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	and    al,0xc3
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	add    BYTE PTR [rax],al
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	cs ret 
	...
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	jo     0x140008434
   1400083ba:	add    BYTE PTR [rax+0x1],al
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    al,dl
   1400083c1:	jle    0x1400083c3
   1400083c3:	rex add DWORD PTR [rax],eax
	...
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	shl    BYTE PTR [rax+rax*1+0x40],1
   1400083d4:	add    DWORD PTR [rax],eax
	...
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	lock jae 0x1400083eb
   1400083eb:	rex add DWORD PTR [rax],eax
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	movabs al,ds:0x1400077
   1400083f9:	add    BYTE PTR [rax],al
   1400083fb:	add    BYTE PTR [rax],al
   1400083fd:	add    BYTE PTR [rax],al
   1400083ff:	add    al,dl
   140008401:	adc    DWORD PTR [rax],eax
   140008403:	add    al,dh
   140008405:	jae    0x140008407
   140008407:	add    al,dl
   140008409:	je     0x14000840b
   14000840b:	add    BYTE PTR [rax],al
   14000840d:	ja     0x14000840f
   14000840f:	add    BYTE PTR [rax+0x77],ah
   140008412:	add    BYTE PTR [rax],al
   140008414:	movabs al,ds:0x7000007a40000077
   14000841d:	jp     0x14000841f
   14000841f:	add    al,al
   140008421:	jp     0x140008423
	...
   14000842f:	add    BYTE PTR [rax+0x14000d0],dh
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rax-0x2f],dl
   14000843a:	add    BYTE PTR [rax+0x1],al
	...
   140008445:	add    BYTE PTR [rax],al
   140008447:	add    BYTE PTR [rsi+0x0],cl
   14000844a:	push   rbp
   14000844b:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000845f:	add    BYTE PTR [rbx+0x0],dl
   140008462:	pop    rcx
   140008463:	add    BYTE PTR [rbx+0x0],dl
   140008466:	push   rsp
   140008467:	add    BYTE PTR [rbp+0x0],al
   14000846a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000846f:	add    BYTE PTR [rbp+0x0],dh
   140008472:	jb     0x140008474
   140008474:	jb     0x140008476
   140008476:	add    BYTE PTR gs:[rsi+0x0],ch
   14000847a:	je     0x14000847c
   14000847c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008480:	outs   dx,BYTE PTR ds:[rsi]
   140008481:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008485:	add    BYTE PTR [rdi+0x0],ch
   140008488:	ins    BYTE PTR es:[rdi],dx
   140008489:	add    BYTE PTR [rbx+0x0],dl
   14000848c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140008491:	add    BYTE PTR [rbx+0x0],dl
   140008494:	add    BYTE PTR gs:[rdx+0x0],dh
   140008498:	jbe    0x14000849a
   14000849a:	imul   eax,DWORD PTR [rax],0x650063
   1400084a0:	jae    0x1400084a2
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    BYTE PTR [rax],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	push   rax
   1400084a9:	add    BYTE PTR [rbp+0x0],ah
   1400084ac:	jb     0x1400084ae
   1400084ae:	data16 add BYTE PTR [rdi+0x0],ch
   1400084b2:	jb     0x1400084b4
   1400084b4:	ins    DWORD PTR es:[rdi],dx
   1400084b5:	add    BYTE PTR [rcx+0x0],ah
   1400084b8:	outs   dx,BYTE PTR ds:[rsi]
   1400084b9:	add    BYTE PTR [rbx+0x0],ah
   1400084bc:	add    BYTE PTR gs:[rax],al
   1400084bf:	add    BYTE PTR [rax+rax*1+0x69],al
   1400084c3:	add    BYTE PTR [rbx+0x0],dh
   1400084c6:	(bad)  
   1400084c7:	add    BYTE PTR [rdx+0x0],ah
   1400084ca:	ins    BYTE PTR es:[rdi],dx
   1400084cb:	add    BYTE PTR [rbp+0x0],ah
   1400084ce:	and    BYTE PTR [rax],al
   1400084d0:	push   rax
   1400084d1:	add    BYTE PTR [rbp+0x0],ah
   1400084d4:	jb     0x1400084d6
   1400084d6:	data16 add BYTE PTR [rdi+0x0],ch
   1400084da:	jb     0x1400084dc
   1400084dc:	ins    DWORD PTR es:[rdi],dx
   1400084dd:	add    BYTE PTR [rcx+0x0],ah
   1400084e0:	outs   dx,BYTE PTR ds:[rsi]
   1400084e1:	add    BYTE PTR [rbx+0x0],ah
   1400084e4:	add    BYTE PTR gs:[rax],ah
   1400084e7:	add    BYTE PTR [rbx+0x0],al
   1400084ea:	outs   dx,DWORD PTR ds:[rsi]
   1400084eb:	add    BYTE PTR [rbp+0x0],dh
   1400084ee:	outs   dx,BYTE PTR ds:[rsi]
   1400084ef:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400084f3:	add    BYTE PTR [rdx+0x0],dh
   1400084f6:	jae    0x1400084f8
	...
   140008500:	and    BYTE PTR [rax],ah
   140008502:	and    BYTE PTR [rax],ah
   140008504:	and    eax,0x203a7377
   140008509:	xor    BYTE PTR [rax+0x25],bh
   14000850c:	xor    BYTE PTR [rax],bh
   14000850e:	pop    rax
   14000850f:	and    BYTE PTR [rax],ch
   140008511:	and    eax,0xa2975
   140008516:	add    BYTE PTR [rax],al
   140008518:	and    BYTE PTR [rax],ah
   14000851a:	and    BYTE PTR [rax],ah
   14000851c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000851e:	jbe    0x140008581
   140008520:	ins    BYTE PTR es:[rdi],dx
   140008521:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x20657079
   140008529:	outs   dx,WORD PTR ds:[rsi]
   14000852b:	jb     0x14000854d
   14000852d:	and    ah,BYTE PTR [rip+0x20227377]        # 0x16022f8aa
   140008533:	jb     0x14000859a
   140008535:	imul   esi,DWORD PTR [ebx+0x74],0x76207972
   14000853d:	(bad)  
   14000853e:	ins    BYTE PTR es:[rdi],dx
   14000853f:	jne    0x1400085a6
   140008541:	or     al,BYTE PTR cs:[rax]
   140008544:	add    BYTE PTR [rax],al
   140008546:	add    BYTE PTR [rax],al
   140008548:	and    BYTE PTR [rax],ah
   14000854a:	and    BYTE PTR [rax],ah
   14000854c:	rex.XB (bad) 
   14000854e:	outs   dx,BYTE PTR ds:[rsi]
   14000854f:	outs   dx,BYTE PTR ds:[rsi]
   140008550:	outs   dx,DWORD PTR ds:[rsi]
   140008551:	je     0x140008573
   140008553:	jno    0x1400085ca
   140008555:	gs jb  0x1400085d1
   140008558:	and    BYTE PTR [rdx],ah
   14000855a:	and    eax,0x20227377
   14000855f:	jb     0x1400085c6
   140008561:	imul   esi,DWORD PTR [ebx+0x74],0x76207972
   140008569:	(bad)  
   14000856a:	ins    BYTE PTR es:[rdi],dx
   14000856b:	jne    0x1400085d2
   14000856d:	or     al,BYTE PTR cs:[rax]
   140008570:	and    BYTE PTR [rax],ah
   140008572:	and    BYTE PTR [rax],ah
   140008574:	and    eax,0x203a7377
   140008579:	and    eax,0xa7377
   14000857e:	add    BYTE PTR [rax],al
   140008580:	pop    rbx
   140008581:	and    eax,0x205d7377
   140008586:	push   rax
   140008587:	gs jb  0x1400085f0
   14000858a:	outs   dx,DWORD PTR ds:[rsi]
   14000858b:	jb     0x1400085fa
   14000858d:	(bad)  
   14000858e:	outs   dx,BYTE PTR ds:[rsi]
   14000858f:	movsxd esp,DWORD PTR [rbp+0x20]
   140008592:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008594:	jne    0x140008604
   140008596:	je     0x1400085fd
   140008598:	jb     0x14000860d
   14000859a:	and    BYTE PTR [rax],ch
   14000859c:	imul   r14d,DWORD PTR [rbx+0x61],0x64656c62
   1400085a4:	sub    DWORD PTR [rdx],ecx
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	pop    rbx
   1400085a9:	and    eax,0x205d7377
   1400085ae:	push   rax
   1400085af:	gs jb  0x140008618
   1400085b2:	outs   dx,DWORD PTR ds:[rsi]
   1400085b3:	jb     0x140008622
   1400085b5:	(bad)  
   1400085b6:	outs   dx,BYTE PTR ds:[rsi]
   1400085b7:	movsxd esp,DWORD PTR [rbp+0x20]
   1400085ba:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400085bc:	jne    0x14000862c
   1400085be:	je     0x140008625
   1400085c0:	jb     0x140008635
   1400085c2:	and    BYTE PTR [rax],ch
   1400085c4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400085c6:	(bad)  
   1400085c7:	(bad)  
   1400085c8:	ins    BYTE PTR es:[rdi],dx
   1400085c9:	gs sub DWORD PTR fs:[rdx],ecx
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rax+0x65],dl
   1400085d2:	jb     0x14000863a
   1400085d4:	outs   dx,DWORD PTR ds:[rsi]
   1400085d5:	jb     0x140008644
   1400085d7:	(bad)  
   1400085d8:	outs   dx,BYTE PTR ds:[rsi]
   1400085d9:	movsxd esp,DWORD PTR [rbp+0x20]
   1400085dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400085de:	jne    0x14000864e
   1400085e0:	je     0x140008647
   1400085e2:	jb     0x140008604
   1400085e4:	rex.WB
   1400085e5:	and    BYTE PTR [rcx+0x75],r10b
   1400085e9:	gs jb  0x140008655
   1400085ec:	gs jae 0x14000860f
   1400085ef:	pop    rbx
   1400085f0:	push   rax
   1400085f1:	rex.RB push r10
   1400085f3:	rex.RX
   1400085f4:	rex.WR
   1400085f5:	rex.WB
   1400085f6:	rex.X pop rbp
   1400085f8:	cmp    cl,BYTE PTR [rdx]
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	add    BYTE PTR [rax],al
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	rex.X add BYTE PTR [rcx+0x0],spl
   140008604:	jae    0x140008606
   140008606:	add    BYTE PTR gs:[rax],ah
   140008609:	add    BYTE PTR [rcx+0x0],cl
   14000860c:	outs   dx,BYTE PTR ds:[rsi]
   14000860d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008611:	add    BYTE PTR [rax+0x0],bh
   140008614:	add    BYTE PTR [rax],al
   140008616:	add    BYTE PTR [rax],al
   140008618:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000861c:	jae    0x14000861e
   14000861e:	je     0x140008620
   140008620:	and    BYTE PTR [rax],al
   140008622:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008626:	jne    0x140008628
   140008628:	outs   dx,BYTE PTR ds:[rsi]
   140008629:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000862d:	add    BYTE PTR [rdx+0x0],dh
   140008630:	and    BYTE PTR [rax],al
   140008632:	push   rsp
   140008633:	add    BYTE PTR [rbp+0x0],ah
   140008636:	js     0x140008638
   140008638:	je     0x14000863a
   14000863a:	and    BYTE PTR [rax],al
   14000863c:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008641:	add    BYTE PTR [rax],al
   140008643:	add    BYTE PTR [rax],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000864b:	add    BYTE PTR [rbx+0x0],dh
   14000864e:	je     0x140008650
   140008650:	and    BYTE PTR [rax],al
   140008652:	rex.W add BYTE PTR [rbp+0x0],spl
   140008656:	ins    BYTE PTR es:[rdi],dx
   140008657:	add    BYTE PTR [rax+0x0],dh
   14000865a:	and    BYTE PTR [rax],al
   14000865c:	push   rsp
   14000865d:	add    BYTE PTR [rbp+0x0],ah
   140008660:	js     0x140008662
   140008662:	je     0x140008664
   140008664:	and    BYTE PTR [rax],al
   140008666:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000866b:	add    BYTE PTR [rdx],cl
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    BYTE PTR [rax],ah
   140008671:	and    BYTE PTR [rax],ah
   140008673:	and    BYTE PTR [rbx+0x61],al
   140008676:	outs   dx,BYTE PTR ds:[rsi]
   140008677:	outs   dx,BYTE PTR ds:[rsi]
   140008678:	outs   dx,DWORD PTR ds:[rsi]
   140008679:	je     0x14000869b
   14000867b:	outs   dx,DWORD PTR ds:[rsi]
   14000867c:	jo     0x1400086e3
   14000867e:	outs   dx,BYTE PTR ds:[rsi]
   14000867f:	and    BYTE PTR [rdx],ah
   140008681:	and    eax,0x20227377
   140008686:	jb     0x1400086ed
   140008688:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   140008690:	gs jns 0x1400086bf
   140008693:	and    BYTE PTR [rdx+0x65],dh
   140008696:	je     0x14000870d
   140008698:	jb     0x140008708
   14000869a:	and    BYTE PTR [rbp+0x72],ah
   14000869d:	jb     0x14000870e
   14000869f:	jb     0x1400086c1
   1400086a1:	imul   esi,DWORD PTR [rbx+0x20],0xa2e7525
   1400086a8:	or     al,BYTE PTR [rax]
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	pop    rsp
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    BYTE PTR [rax+rax*1+0x4c],al
   1400086b3:	add    BYTE PTR [rax+rax*1+0x20],cl
   1400086b7:	add    BYTE PTR [rsi+0x0],cl
   1400086ba:	(bad)  
   1400086bb:	add    BYTE PTR [rbp+0x0],ch
   1400086be:	add    BYTE PTR gs:[rax],al
   1400086c1:	add    BYTE PTR [rax],al
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rax+rax*1+0x69],cl
   1400086cb:	add    BYTE PTR [rdx+0x0],ah
   1400086ce:	jb     0x1400086d0
   1400086d0:	(bad)  
   1400086d1:	add    BYTE PTR [rdx+0x0],dh
   1400086d4:	jns    0x1400086d6
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   1400086dc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400086e0:	and    BYTE PTR [rax],al
   1400086e2:	push   rax
   1400086e3:	add    BYTE PTR [rdx+0x0],dh
   1400086e6:	outs   dx,DWORD PTR ds:[rsi]
   1400086e7:	add    BYTE PTR [rbx+0x0],ah
   1400086ea:	add    BYTE PTR gs:[rax+rax*1+0x75],ah
   1400086ef:	add    BYTE PTR [rdx+0x0],dh
   1400086f2:	add    BYTE PTR gs:[rax],al
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    BYTE PTR [rdi+0x0],cl
   1400086fa:	jo     0x1400086fc
   1400086fc:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   140008708:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000870c:	ins    BYTE PTR es:[rdi],dx
   14000870d:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008711:	add    BYTE PTR [rbx+0x0],ah
   140008714:	je     0x140008716
   140008716:	and    BYTE PTR [rax],al
   140008718:	push   rax
   140008719:	add    BYTE PTR [rdx+0x0],dh
   14000871c:	outs   dx,DWORD PTR ds:[rsi]
   14000871d:	add    BYTE PTR [rbx+0x0],ah
   140008720:	add    BYTE PTR gs:[rax+rax*1+0x75],ah
   140008725:	add    BYTE PTR [rdx+0x0],dh
   140008728:	add    BYTE PTR gs:[rax],al
   14000872b:	add    BYTE PTR [rax],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rbx+0x0],al
   140008732:	outs   dx,DWORD PTR ds:[rsi]
   140008733:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008737:	add    BYTE PTR [rbp+0x0],ah
   14000873a:	movsxd eax,DWORD PTR [rax]
   14000873c:	je     0x14000873e
   14000873e:	add    BYTE PTR [rax],al
   140008740:	add    BYTE PTR [r8+r8*1+0x6f],bpl
   140008745:	add    BYTE PTR [rbx+0x0],dh
   140008748:	add    BYTE PTR gs:[rax],ah
   14000874b:	add    BYTE PTR [rax+0x0],dl
   14000874e:	jb     0x140008750
   140008750:	outs   dx,DWORD PTR ds:[rsi]
   140008751:	add    BYTE PTR [rbx+0x0],ah
   140008754:	add    BYTE PTR gs:[rax+rax*1+0x75],ah
   140008759:	add    BYTE PTR [rdx+0x0],dh
   14000875c:	add    BYTE PTR gs:[rax],al
   14000875f:	add    BYTE PTR [rbx+0x0],al
   140008762:	ins    BYTE PTR es:[rdi],dx
   140008763:	add    BYTE PTR [rdi+0x0],ch
   140008766:	jae    0x140008768
   140008768:	add    BYTE PTR gs:[rax],al
   14000876b:	add    BYTE PTR [rax],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rsi+0x0],al
   140008772:	imul   eax,DWORD PTR [rax],0x730072
   140008778:	je     0x14000877a
   14000877a:	and    BYTE PTR [rax],al
   14000877c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008780:	jne    0x140008782
   140008782:	outs   dx,BYTE PTR ds:[rsi]
   140008783:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008787:	add    BYTE PTR [rdx+0x0],dh
   14000878a:	and    BYTE PTR [rax],al
   14000878c:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008791:	add    BYTE PTR [rax],al
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000879b:	add    BYTE PTR [rbx+0x0],dh
   14000879e:	je     0x1400087a0
   1400087a0:	and    BYTE PTR [rax],al
   1400087a2:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400087a6:	jne    0x1400087a8
   1400087a8:	outs   dx,BYTE PTR ds:[rsi]
   1400087a9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400087ad:	add    BYTE PTR [rdx+0x0],dh
   1400087b0:	and    BYTE PTR [rax],al
   1400087b2:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400087b7:	add    BYTE PTR [rsi+0x0],al
   1400087ba:	imul   eax,DWORD PTR [rax],0x730072
   1400087c0:	je     0x1400087c2
   1400087c2:	and    BYTE PTR [rax],al
   1400087c4:	rex.W add BYTE PTR [rbp+0x0],spl
   1400087c8:	ins    BYTE PTR es:[rdi],dx
   1400087c9:	add    BYTE PTR [rax+0x0],dh
   1400087cc:	and    BYTE PTR [rax],al
   1400087ce:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400087d3:	add    BYTE PTR [rax],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rax+rax*1+0x61],cl
   1400087db:	add    BYTE PTR [rbx+0x0],dh
   1400087de:	je     0x1400087e0
   1400087e0:	and    BYTE PTR [rax],al
   1400087e2:	rex.W add BYTE PTR [rbp+0x0],spl
   1400087e6:	ins    BYTE PTR es:[rdi],dx
   1400087e7:	add    BYTE PTR [rax+0x0],dh
   1400087ea:	and    BYTE PTR [rax],al
   1400087ec:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
	...
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rbx+0x0],dl
   140008802:	pop    rcx
   140008803:	add    BYTE PTR [rbx+0x0],dl
   140008806:	push   rsp
   140008807:	add    BYTE PTR [rbp+0x0],al
   14000880a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000880f:	add    BYTE PTR [rbp+0x0],dh
   140008812:	jb     0x140008814
   140008814:	jb     0x140008816
   140008816:	add    BYTE PTR gs:[rsi+0x0],ch
   14000881a:	je     0x14000881c
   14000881c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008820:	outs   dx,BYTE PTR ds:[rsi]
   140008821:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008825:	add    BYTE PTR [rdi+0x0],ch
   140008828:	ins    BYTE PTR es:[rdi],dx
   140008829:	add    BYTE PTR [rbx+0x0],dl
   14000882c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140008831:	add    BYTE PTR [rbx+0x0],dl
   140008834:	add    BYTE PTR gs:[rdx+0x0],dh
   140008838:	jbe    0x14000883a
   14000883a:	imul   eax,DWORD PTR [rax],0x650063
   140008840:	jae    0x140008842
   140008842:	pop    rsp
   140008843:	add    BYTE PTR [rax],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300ff4d
   14000884d:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300ff53
   140008853:	add    BYTE PTR [rax+rax*1+0x25],bl
   140008857:	add    BYTE PTR [rdi+0x0],dh
   14000885a:	jae    0x14000885c
   14000885c:	add    BYTE PTR [rax],al
   14000885e:	add    BYTE PTR [rax],al
   140008860:	jnp    0x140008862
   140008862:	and    eax,0x38003000
   140008867:	add    BYTE PTR [rax+0x0],bh
   14000886a:	sub    eax,0x30002500
   14000886f:	add    BYTE PTR [rax+rax*1],dh
   140008872:	js     0x140008874
   140008874:	sub    eax,0x30002500
   140008879:	add    BYTE PTR [rax+rax*1],dh
   14000887c:	js     0x14000887e
   14000887e:	sub    eax,0x30002500
   140008883:	add    BYTE PTR [rdx],dh
   140008885:	add    BYTE PTR [rax+0x0],bh
   140008888:	and    eax,0x32003000
   14000888d:	add    BYTE PTR [rax+0x0],bh
   140008890:	sub    eax,0x30002500
   140008895:	add    BYTE PTR [rdx],dh
   140008897:	add    BYTE PTR [rax+0x0],bh
   14000889a:	and    eax,0x32003000
   14000889f:	add    BYTE PTR [rax+0x0],bh
   1400088a2:	and    eax,0x32003000
   1400088a7:	add    BYTE PTR [rax+0x0],bh
   1400088aa:	and    eax,0x32003000
   1400088af:	add    BYTE PTR [rax+0x0],bh
   1400088b2:	and    eax,0x32003000
   1400088b7:	add    BYTE PTR [rax+0x0],bh
   1400088ba:	and    eax,0x32003000
   1400088bf:	add    BYTE PTR [rax+0x0],bh
   1400088c2:	jge    0x1400088c4
   1400088c4:	add    BYTE PTR [rax],al
   1400088c6:	add    BYTE PTR [rax],al
   1400088c8:	call   0x1440988d0
	...
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    BYTE PTR [rax],0x0
   1400088da:	add    BYTE PTR [rax],al
   1400088dc:	add    BYTE PTR [rax],al
   1400088de:	add    BYTE PTR [rax+0x0],al
   1400088e4:	add    BYTE PTR [rax],al
   1400088e6:	add    BYTE PTR [rax+0x0],al
   1400088ec:	add    BYTE PTR [rax],al
   1400088ee:	add    BYTE PTR [rax+0x122ee297],al
   1400088f4:	rex.RXB mov r11d,0x65b241ae
   1400088fa:	sbb    al,0xa8
   1400088fc:	ror    DWORD PTR [rax+0x304406d],1
   140008902:	add    al,BYTE PTR [rax]
   140008904:	add    BYTE PTR [rax],al
   140008906:	add    BYTE PTR [rax],al
   140008908:	(bad)  
   140008909:	add    BYTE PTR [rbx+0x0],dh
   14000890c:	jae    0x14000890e
   14000890e:	add    BYTE PTR gs:[rbp+0x0],ch
   140008912:	(bad)  
   140008913:	add    BYTE PTR [rax+rax*1+0x79],ch
	...
   14000891f:	add    BYTE PTR [rcx+0x0],ch
   140008922:	outs   dx,BYTE PTR ds:[rsi]
   140008923:	add    BYTE PTR [rbx+0x0],dh
   140008926:	je     0x140008928
   140008928:	jb     0x14000892a
   14000892a:	jne    0x14000892c
   14000892c:	ins    DWORD PTR es:[rdi],dx
   14000892d:	add    BYTE PTR [rbp+0x0],ah
   140008930:	outs   dx,BYTE PTR ds:[rsi]
   140008931:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008935:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008939:	add    BYTE PTR [rdi+0x0],ch
   14000893c:	outs   dx,BYTE PTR ds:[rsi]
   14000893d:	add    BYTE PTR [rbp+0x0],cl
   140008940:	(bad)  
   140008941:	add    BYTE PTR [rsi+0x0],ch
   140008944:	imul   eax,DWORD PTR [rax],0x650066
   14000894a:	jae    0x14000894c
   14000894c:	je     0x14000894e
   14000894e:	add    BYTE PTR [rax],al
   140008950:	imul   eax,DWORD PTR [rax],0x73006e
   140008956:	je     0x140008958
   140008958:	jb     0x14000895a
   14000895a:	jne    0x14000895c
   14000895c:	ins    DWORD PTR es:[rdi],dx
   14000895d:	add    BYTE PTR [rbp+0x0],ah
   140008960:	outs   dx,BYTE PTR ds:[rsi]
   140008961:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008965:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008969:	add    BYTE PTR [rdi+0x0],ch
   14000896c:	outs   dx,BYTE PTR ds:[rsi]
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    BYTE PTR [rbx+0x0],ah
   140008972:	outs   dx,DWORD PTR ds:[rsi]
   140008973:	add    BYTE PTR [rbp+0x0],dh
   140008976:	outs   dx,BYTE PTR ds:[rsi]
   140008977:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000897b:	add    BYTE PTR [rdx+0x0],dh
   14000897e:	jae    0x140008980
	...
   140008988:	jo     0x14000898a
   14000898a:	jb     0x14000898c
   14000898c:	outs   dx,DWORD PTR ds:[rsi]
   14000898d:	add    BYTE PTR [rsi+0x0],dh
   140008990:	imul   eax,DWORD PTR [rax],0x650064
   140008996:	jb     0x140008998
	...
   1400089a0:	movsxd eax,DWORD PTR [rax]
   1400089a2:	outs   dx,DWORD PTR ds:[rsi]
   1400089a3:	add    BYTE PTR [rbp+0x0],dh
   1400089a6:	outs   dx,BYTE PTR ds:[rsi]
   1400089a7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400089ab:	add    BYTE PTR [rdx+0x0],dh
   1400089ae:	push   rbx
   1400089af:	add    BYTE PTR [rbp+0x0],ah
   1400089b2:	je     0x1400089b4
   1400089b4:	add    BYTE PTR [rax],al
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	movsxd eax,DWORD PTR [rax]
   1400089ba:	outs   dx,DWORD PTR ds:[rsi]
   1400089bb:	add    BYTE PTR [rbp+0x0],dh
   1400089be:	outs   dx,BYTE PTR ds:[rsi]
   1400089bf:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400089c3:	add    BYTE PTR [rdx+0x0],dh
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	movsxd eax,DWORD PTR [rax]
   1400089ca:	outs   dx,DWORD PTR ds:[rsi]
   1400089cb:	add    BYTE PTR [rbp+0x0],dh
   1400089ce:	outs   dx,BYTE PTR ds:[rsi]
   1400089cf:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400089d3:	add    BYTE PTR [rdx+0x0],dh
   1400089d6:	add    BYTE PTR [r8+rax*1+0x74],sil
   1400089db:	add    BYTE PTR [rdx+0x0],dh
   1400089de:	imul   eax,DWORD PTR [rax],0x750062
   1400089e4:	je     0x1400089e6
   1400089e6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400089ea:	add    BYTE PTR [rax],al
   1400089ec:	add    BYTE PTR [rax],al
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	movsxd eax,DWORD PTR [rax]
   1400089f2:	outs   dx,DWORD PTR ds:[rsi]
   1400089f3:	add    BYTE PTR [rbp+0x0],dh
   1400089f6:	outs   dx,BYTE PTR ds:[rsi]
   1400089f7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400089fb:	add    BYTE PTR [rdx+0x0],dh
   1400089fe:	add    BYTE PTR [r8+rax*1+0x74],sil
   140008a03:	add    BYTE PTR [rdx+0x0],dh
   140008a06:	imul   eax,DWORD PTR [rax],0x750062
   140008a0c:	je     0x140008a0e
   140008a0e:	add    BYTE PTR gs:[rax],al
   140008a11:	add    BYTE PTR [rax],al
   140008a13:	add    BYTE PTR [rax],al
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140008a1b:	add    BYTE PTR [rbx+0x0],ah
   140008a1e:	(bad)  
   140008a1f:	add    BYTE PTR [rax+rax*1+0x69],ch
   140008a23:	add    BYTE PTR [rdx+0x0],bh
   140008a26:	(bad)  
   140008a27:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008a2b:	add    BYTE PTR [rdi+0x0],ch
   140008a2e:	outs   dx,BYTE PTR ds:[rsi]
	...
   140008a37:	add    BYTE PTR [rdx+0x0],dh
   140008a3a:	add    BYTE PTR gs:[rbx+0x0],dh
   140008a3e:	outs   dx,DWORD PTR ds:[rsi]
   140008a3f:	add    BYTE PTR [rbp+0x0],dh
   140008a42:	jb     0x140008a44
   140008a44:	movsxd eax,DWORD PTR [rax]
   140008a46:	add    BYTE PTR gs:[rbx+0x0],dh
   140008a4a:	add    BYTE PTR [rax],al
   140008a4c:	add    BYTE PTR [rax],al
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	jae    0x140008a52
   140008a52:	je     0x140008a54
   140008a54:	jb     0x140008a56
   140008a56:	imul   eax,DWORD PTR [rax],0x67006e
   140008a5c:	push   rsp
   140008a5d:	add    BYTE PTR [rcx+0x0],ah
   140008a60:	(bad)  
   140008a61:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rbx+0x0],dh
   140008a6a:	je     0x140008a6c
   140008a6c:	jb     0x140008a6e
   140008a6e:	imul   eax,DWORD PTR [rax],0x67006e
   140008a74:	add    BYTE PTR [rax],al
   140008a76:	add    BYTE PTR [rax],al
   140008a78:	jae    0x140008a7a
   140008a7a:	movsxd eax,DWORD PTR [rax]
   140008a7c:	push   0x6d006500
   140008a81:	add    BYTE PTR [rcx+0x0],ah
   140008a84:	push   rsi
   140008a85:	add    BYTE PTR [rbp+0x0],ah
   140008a88:	jb     0x140008a8a
   140008a8a:	jae    0x140008a8c
   140008a8c:	imul   eax,DWORD PTR [rax],0x6e006f
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    BYTE PTR [rax],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	jo     0x140008a9a
   140008a9a:	jb     0x140008a9c
   140008a9c:	outs   dx,DWORD PTR ds:[rsi]
   140008a9d:	add    BYTE PTR [rsi+0x0],dh
   140008aa0:	imul   eax,DWORD PTR [rax],0x650064
   140008aa6:	jb     0x140008aa8
   140008aa8:	rex.RXB add BYTE PTR [r13+0x0],r14b
   140008aac:	imul   eax,DWORD PTR [rax],0x64
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	jo     0x140008aba
   140008aba:	jb     0x140008abc
   140008abc:	outs   dx,DWORD PTR ds:[rsi]
   140008abd:	add    BYTE PTR [rsi+0x0],dh
   140008ac0:	imul   eax,DWORD PTR [rax],0x650064
   140008ac6:	jb     0x140008ac8
   140008ac8:	push   rsp
   140008ac9:	add    BYTE PTR [rcx+0x0],bh
   140008acc:	jo     0x140008ace
   140008ace:	add    BYTE PTR gs:[rax],al
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	add    BYTE PTR [rax],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    BYTE PTR [rax+0x0],dh
   140008ada:	jb     0x140008adc
   140008adc:	outs   dx,DWORD PTR ds:[rsi]
   140008add:	add    BYTE PTR [rsi+0x0],dh
   140008ae0:	imul   eax,DWORD PTR [rax],0x650064
   140008ae6:	jb     0x140008ae8
   140008ae8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140008aec:	ins    DWORD PTR es:[rdi],dx
   140008aed:	add    BYTE PTR [rbp+0x0],ah
	...
   140008af8:	jb     0x140008afa
   140008afa:	add    BYTE PTR gs:[rbx+0x0],dh
   140008afe:	outs   dx,DWORD PTR ds:[rsi]
   140008aff:	add    BYTE PTR [rbp+0x0],dh
   140008b02:	jb     0x140008b04
   140008b04:	movsxd eax,DWORD PTR [rax]
   140008b06:	add    BYTE PTR gs:[rdx+0x0],al
   140008b0a:	(bad)  
   140008b0b:	add    BYTE PTR [rbx+0x0],dh
   140008b0e:	add    BYTE PTR gs:[rax],al
   140008b11:	add    BYTE PTR [rax],al
   140008b13:	add    BYTE PTR [rax],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rcx+0x0],ah
   140008b1a:	jo     0x140008b1c
   140008b1c:	jo     0x140008b1e
   140008b1e:	ins    BYTE PTR es:[rdi],dx
   140008b1f:	add    BYTE PTR [rcx+0x0],ch
   140008b22:	movsxd eax,DWORD PTR [rax]
   140008b24:	(bad)  
   140008b25:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008b29:	add    BYTE PTR [rdi+0x0],ch
   140008b2c:	outs   dx,BYTE PTR ds:[rsi]
   140008b2d:	add    BYTE PTR [rcx+0x0],cl
   140008b30:	add    BYTE PTR fs:[rbp+0x0],ah
   140008b34:	outs   dx,BYTE PTR ds:[rsi]
   140008b35:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008b39:	add    BYTE PTR [rax+rax*1+0x79],dh
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rbx+0x0],ah
   140008b42:	(bad)  
   140008b43:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008b47:	add    BYTE PTR [rdx+0x0],ah
   140008b4a:	(bad)  
   140008b4b:	add    BYTE PTR [rbx+0x0],ah
   140008b4e:	imul   eax,DWORD PTR [rax],0x0
   140008b51:	add    BYTE PTR [rax],al
   140008b53:	add    BYTE PTR [rax],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rdi+0x0],ah
   140008b5a:	jne    0x140008b5c
   140008b5c:	imul   eax,DWORD PTR [rax],0x64
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	add    BYTE PTR [rax],al
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	jne    0x140008b6a
   140008b6a:	jb     0x140008b6c
   140008b6c:	imul   eax,DWORD PTR [rax],0x6e0000
   140008b72:	(bad)  
   140008b73:	add    BYTE PTR [rbp+0x0],ch
   140008b76:	add    BYTE PTR gs:[rax],al
   140008b79:	add    BYTE PTR [rax],al
   140008b7b:	add    BYTE PTR [rax],al
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rsi+0x0],ch
   140008b82:	(bad)  
   140008b83:	add    BYTE PTR [rbp+0x0],ch
   140008b86:	add    BYTE PTR gs:[rcx+0x0],cl
   140008b8a:	add    BYTE PTR [rax],r8b
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008b93:	add    BYTE PTR [rbx+0x0],dh
   140008b96:	movsxd eax,DWORD PTR [rax]
   140008b98:	jb     0x140008b9a
   140008b9a:	imul   eax,DWORD PTR [rax],0x740070
   140008ba0:	imul   eax,DWORD PTR [rax],0x6e006f
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	add    BYTE PTR fs:[rbp+0x0],ah
   140008bac:	jae    0x140008bae
   140008bae:	movsxd eax,DWORD PTR [rax]
   140008bb0:	jb     0x140008bb2
   140008bb2:	imul   eax,DWORD PTR [rax],0x740070
   140008bb8:	imul   eax,DWORD PTR [rax],0x6e006f
   140008bbe:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008bc3:	add    BYTE PTR [rax],al
   140008bc5:	add    BYTE PTR [rax],al
   140008bc7:	add    BYTE PTR [rcx+0x0],ch
   140008bca:	outs   dx,BYTE PTR ds:[rsi]
   140008bcb:	add    BYTE PTR [rbx+0x0],dh
   140008bce:	je     0x140008bd0
   140008bd0:	(bad)  
   140008bd1:	add    BYTE PTR [rsi+0x0],ch
   140008bd4:	movsxd eax,DWORD PTR [rax]
   140008bd6:	add    BYTE PTR gs:[rbx+0x0],dh
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	imul   eax,DWORD PTR [rax],0x64
   140008be2:	add    BYTE PTR [rax],al
   140008be4:	add    BYTE PTR [rax],al
   140008be6:	add    BYTE PTR [rax],al
   140008be8:	je     0x140008bea
   140008bea:	jns    0x140008bec
   140008bec:	jo     0x140008bee
   140008bee:	add    BYTE PTR gs:[rax],al
   140008bf1:	add    BYTE PTR [rax],al
   140008bf3:	add    BYTE PTR [rax],al
   140008bf5:	add    BYTE PTR [rax],al
   140008bf7:	add    BYTE PTR [rdx+0x0],ah
   140008bfa:	(bad)  
   140008bfb:	add    BYTE PTR [rbx+0x0],dh
   140008bfe:	add    BYTE PTR gs:[rcx+0x0],cl
   140008c02:	add    BYTE PTR [rax],r8b
   140008c05:	add    BYTE PTR [rax],al
   140008c07:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008c0b:	add    BYTE PTR [rsi+0x0],ah
   140008c0e:	(bad)  
   140008c0f:	add    BYTE PTR [rbp+0x0],dh
   140008c12:	ins    BYTE PTR es:[rdi],dx
   140008c13:	add    BYTE PTR [rax+rax*1+0x53],dh
   140008c17:	add    BYTE PTR [rbx+0x0],ah
   140008c1a:	(bad)  
   140008c1b:	add    BYTE PTR [rax+rax*1+0x65],ch
	...
   140008c27:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008c2b:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008c2f:	add    BYTE PTR [rcx+0x0],ch
   140008c32:	ins    BYTE PTR es:[rdi],dx
   140008c33:	add    BYTE PTR [rax+rax*1+0x65],cl
   140008c37:	add    BYTE PTR [rsi+0x0],dh
   140008c3a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140008c3f:	add    BYTE PTR [rcx+0x0],ah
   140008c42:	add    BYTE PTR [edi+0x0],ah
   140008c46:	jb     0x140008c48
   140008c48:	add    BYTE PTR gs:[rdi+0x0],ah
   140008c4c:	(bad)  
   140008c4d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008c51:	add    BYTE PTR [rax],al
   140008c53:	add    BYTE PTR [rax],al
   140008c55:	add    BYTE PTR [rax],al
   140008c57:	add    BYTE PTR [rax+0x0],dh
   140008c5a:	add    BYTE PTR gs:[rdx+0x0],dh
   140008c5e:	data16 add BYTE PTR [rax+rax*1+0x69],dl
   140008c63:	add    BYTE PTR [rbp+0x0],ch
   140008c66:	add    BYTE PTR gs:[rcx+0x0],cl
   140008c6a:	add    BYTE PTR [rax],r8b
   140008c6d:	add    BYTE PTR [rax],al
   140008c6f:	add    BYTE PTR [rax+0x0],dh
   140008c72:	add    BYTE PTR gs:[rdx+0x0],dh
   140008c76:	data16 add BYTE PTR [rsi+0x0],al
   140008c7a:	jb     0x140008c7c
   140008c7c:	add    BYTE PTR gs:[rcx+0x0],dh
   140008c80:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008c85:	add    BYTE PTR [rax],al
   140008c87:	add    BYTE PTR [rbp+0x0],ch
   140008c8a:	jne    0x140008c8c
   140008c8c:	ins    BYTE PTR es:[rdi],dx
   140008c8d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008c91:	add    BYTE PTR [rbx+0x0],al
   140008c94:	outs   dx,DWORD PTR ds:[rsi]
   140008c95:	add    BYTE PTR [rbp+0x0],dh
   140008c98:	outs   dx,BYTE PTR ds:[rsi]
   140008c99:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008c9d:	add    BYTE PTR [rdx+0x0],dh
   140008ca0:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140008ca5:	add    BYTE PTR [rax],al
   140008ca7:	add    BYTE PTR [rbx+0x0],ah
   140008caa:	jne    0x140008cac
   140008cac:	ins    BYTE PTR es:[rdi],dx
   140008cad:	add    BYTE PTR [rax+rax*1+0x75],dh
   140008cb1:	add    BYTE PTR [rdx+0x0],dh
   140008cb4:	add    BYTE PTR gs:[rax],al
   140008cb7:	add    BYTE PTR [rsi+0x0],dh
   140008cba:	(bad)  
   140008cbb:	add    BYTE PTR [rax+rax*1+0x75],ch
   140008cbf:	add    BYTE PTR [rbp+0x0],ah
   140008cc2:	add    BYTE PTR [rax],al
   140008cc4:	add    BYTE PTR [rax],al
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	push   rbx
   140008cc9:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008ccd:	add    BYTE PTR [rbp+0x0],dh
   140008cd0:	movsxd eax,DWORD PTR [rax]
   140008cd2:	je     0x140008cd4
   140008cd4:	jae    0x140008cd6
   140008cd6:	add    BYTE PTR [rax],al
   140008cd8:	push   rbx
   140008cd9:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008cdd:	add    BYTE PTR [rbp+0x0],dh
   140008ce0:	movsxd eax,DWORD PTR [rax]
   140008ce2:	je     0x140008ce4
   140008ce4:	add    BYTE PTR [rax],al
   140008ce6:	add    BYTE PTR [rax],al
   140008ce8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008cec:	add    BYTE PTR gs:[rax+rax*1+0x64],ch
   140008cf1:	add    BYTE PTR [rax],al
   140008cf3:	add    BYTE PTR [rax],al
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rbx+0x0],dl
   140008cfa:	jns    0x140008cfc
   140008cfc:	ins    DWORD PTR es:[rdi],dx
   140008cfd:	add    BYTE PTR [rdx+0x0],ah
   140008d00:	outs   dx,DWORD PTR ds:[rsi]
   140008d01:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008d05:	add    BYTE PTR [rax],al
   140008d07:	add    BYTE PTR [rbx+0x0],dl
   140008d0a:	add    BYTE PTR gs:[rbx+0x0],ah
   140008d0e:	jne    0x140008d10
   140008d10:	jb     0x140008d12
   140008d12:	imul   eax,DWORD PTR [rax],0x790074
   140008d18:	add    BYTE PTR [rbp+0x0],r12b
   140008d1c:	jae    0x140008d1e
   140008d1e:	movsxd eax,DWORD PTR [rax]
   140008d20:	jb     0x140008d22
   140008d22:	imul   eax,DWORD PTR [rax],0x740070
   140008d28:	outs   dx,DWORD PTR ds:[rsi]
   140008d29:	add    BYTE PTR [rdx+0x0],dh
   140008d2c:	add    BYTE PTR [rax],al
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	jne    0x140008d32
   140008d32:	jae    0x140008d34
   140008d34:	add    BYTE PTR gs:[rdx+0x0],dh
   140008d38:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140008d3c:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   140008d48:	push   rax
   140008d49:	add    BYTE PTR [rbp+0x0],al
   140008d4c:	push   rdx
   140008d4d:	add    BYTE PTR [rsi+0x0],al
   140008d50:	pop    rdi
   140008d51:	add    BYTE PTR [rax+0x0],dl
   140008d54:	push   rdx
   140008d55:	add    BYTE PTR [rdi+0x0],cl
   140008d58:	push   rsi
   140008d59:	add    BYTE PTR [rcx+0x0],cl
   140008d5c:	add    BYTE PTR [rbp+0x0],r8b
   140008d60:	push   rdx
   140008d61:	add    BYTE PTR [rdi+0x0],bl
   140008d64:	push   rbp
   140008d65:	add    BYTE PTR [rbx+0x0],dl
   140008d68:	add    BYTE PTR [r10+0x0],r10b
   140008d6c:	pop    rdi
   140008d6d:	add    BYTE PTR [rbp+0x0],cl
   140008d70:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r8b
   140008d75:	add    BYTE PTR [rax],al
   140008d77:	add    BYTE PTR [rbx+0x0],ch
   140008d7a:	add    BYTE PTR gs:[rdx+0x0],dh
   140008d7e:	outs   dx,BYTE PTR ds:[rsi]
   140008d7f:	add    BYTE PTR [rbp+0x0],ah
   140008d82:	ins    BYTE PTR es:[rdi],dx
   140008d83:	add    BYTE PTR [rbp+0x0],cl
   140008d86:	outs   dx,DWORD PTR ds:[rsi]
   140008d87:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008d8b:	add    BYTE PTR [rax],al
   140008d8d:	add    BYTE PTR [rax],al
   140008d8f:	add    BYTE PTR [rax+0x0],dl
   140008d92:	add    BYTE PTR [r10+0x0],r10b
   140008d96:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140008d9a:	push   rax
   140008d9b:	add    BYTE PTR [rdx+0x0],dl
   140008d9e:	rex.WRXB add BYTE PTR [r14+0x0],r10b
   140008da2:	rex.WB add BYTE PTR [r8+rax*1+0x45],al
   140008da7:	add    BYTE PTR [rdx+0x0],dl
   140008daa:	pop    rdi
   140008dab:	add    BYTE PTR [rbx+0x0],cl
   140008dae:	add    BYTE PTR [r10+0x0],r10b
   140008db2:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140008db6:	rex.WR add BYTE PTR [rdi+0x0],r11b
   140008dba:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140008dbe:	add    BYTE PTR [rbp+0x0],r8b
   140008dc2:	add    BYTE PTR [rax],al
   140008dc4:	add    BYTE PTR [rax],al
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	add    BYTE PTR fs:[rdx+0x0],dh
   140008dcc:	imul   eax,DWORD PTR [rax],0x650076
   140008dd2:	jb     0x140008dd4
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	push   rax
   140008dd9:	add    BYTE PTR [rbp+0x0],al
   140008ddc:	push   rdx
   140008ddd:	add    BYTE PTR [rsi+0x0],al
   140008de0:	pop    rdi
   140008de1:	add    BYTE PTR [rax+0x0],dl
   140008de4:	push   rdx
   140008de5:	add    BYTE PTR [rdi+0x0],cl
   140008de8:	push   rsi
   140008de9:	add    BYTE PTR [rcx+0x0],cl
   140008dec:	add    BYTE PTR [rbp+0x0],r8b
   140008df0:	push   rdx
   140008df1:	add    BYTE PTR [rdi+0x0],bl
   140008df4:	add    BYTE PTR [rdx+0x0],r10b
   140008df8:	rex.WB add BYTE PTR [r14+0x0],dl
   140008dfc:	add    BYTE PTR [r10+0x0],r10b
	...
   140008e08:	add    BYTE PTR fs:[rbp+0x0],ah
   140008e0c:	data16 add BYTE PTR [rcx+0x0],ah
   140008e10:	jne    0x140008e12
   140008e12:	ins    BYTE PTR es:[rdi],dx
   140008e13:	add    BYTE PTR [rax+rax*1+0x0],dh
   140008e17:	add    BYTE PTR [rax],dh
   140008e19:	add    BYTE PTR [rax],al
   140008e1b:	add    BYTE PTR [rax],al
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    BYTE PTR [rbx+0x0],ah
   140008e22:	jne    0x140008e24
   140008e24:	jae    0x140008e26
   140008e26:	je     0x140008e28
   140008e28:	outs   dx,DWORD PTR ds:[rsi]
   140008e29:	add    BYTE PTR [rbp+0x0],ch
   140008e2c:	add    BYTE PTR [rax],al
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	xor    DWORD PTR [rax],eax
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	add    BYTE PTR [rax],al
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	jae    0x140008e3a
   140008e3a:	imul   eax,DWORD PTR [rax],0x67006e
   140008e40:	ins    BYTE PTR es:[rdi],dx
   140008e41:	add    BYTE PTR [rbp+0x0],ah
	...
   140008e50:	push   rax
   140008e51:	add    BYTE PTR [rbp+0x0],al
   140008e54:	push   rdx
   140008e55:	add    BYTE PTR [rsi+0x0],al
   140008e58:	pop    rdi
   140008e59:	add    BYTE PTR [rbx+0x0],al
   140008e5c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140008e60:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140008e65:	add    BYTE PTR [rdx+0x0],dl
   140008e68:	push   rbx
   140008e69:	add    BYTE PTR [rbp+0x0],al
   140008e6c:	push   rsp
   140008e6d:	add    BYTE PTR [rdi+0x0],bl
   140008e70:	push   rbx
   140008e71:	add    BYTE PTR [rcx+0x0],cl
   140008e74:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   140008e78:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140008e7c:	pop    rdi
   140008e7d:	add    BYTE PTR [rcx+0x0],cl
   140008e80:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140008e84:	push   rsp
   140008e85:	add    BYTE PTR [rcx+0x0],al
   140008e88:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   140008e8c:	add    BYTE PTR [r8],r8b
   140008e8f:	add    BYTE PTR [rbp+0x0],ch
   140008e92:	jne    0x140008e94
   140008e94:	ins    BYTE PTR es:[rdi],dx
   140008e95:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e99:	add    BYTE PTR [rax+0x0],dh
   140008e9c:	ins    BYTE PTR es:[rdi],dx
   140008e9d:	add    BYTE PTR [rbp+0x0],ah
	...
   140008eb0:	push   rax
   140008eb1:	add    BYTE PTR [rbp+0x0],al
   140008eb4:	push   rdx
   140008eb5:	add    BYTE PTR [rsi+0x0],al
   140008eb8:	pop    rdi
   140008eb9:	add    BYTE PTR [rbx+0x0],al
   140008ebc:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140008ec0:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140008ec5:	add    BYTE PTR [rdx+0x0],dl
   140008ec8:	push   rbx
   140008ec9:	add    BYTE PTR [rbp+0x0],al
   140008ecc:	push   rsp
   140008ecd:	add    BYTE PTR [rdi+0x0],bl
   140008ed0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140008ed4:	rex.WR add BYTE PTR [rax+rax*1+0x49],r10b
   140008ed9:	add    BYTE PTR [rdi+0x0],bl
   140008edc:	rex.WB add BYTE PTR [r14+0x0],cl
   140008ee0:	push   rbx
   140008ee1:	add    BYTE PTR [rax+rax*1+0x41],dl
   140008ee5:	add    BYTE PTR [rsi+0x0],cl
   140008ee8:	rex.XB add BYTE PTR [r13+0x0],al
   140008eec:	push   rbx
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	add    BYTE PTR [rdi+0x0],ah
   140008ef2:	ins    BYTE PTR es:[rdi],dx
   140008ef3:	add    BYTE PTR [rdi+0x0],ch
   140008ef6:	(bad)  
   140008ef7:	add    BYTE PTR [rcx+0x0],ah
   140008efa:	ins    BYTE PTR es:[rdi],dx
   140008efb:	add    BYTE PTR [rcx+0x0],al
   140008efe:	add    BYTE PTR [edi+0x0],ah
   140008f02:	jb     0x140008f04
   140008f04:	add    BYTE PTR gs:[rdi+0x0],ah
   140008f08:	(bad)  
   140008f09:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008f0d:	add    BYTE PTR [rax],al
   140008f0f:	add    BYTE PTR [rax+0x0],dl
   140008f12:	add    BYTE PTR [r10+0x0],r10b
   140008f16:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140008f1a:	rex.XB add BYTE PTR [r15+0x0],cl
   140008f1e:	push   rbp
   140008f1f:	add    BYTE PTR [rsi+0x0],cl
   140008f22:	push   rsp
   140008f23:	add    BYTE PTR [rbp+0x0],al
   140008f26:	push   rdx
   140008f27:	add    BYTE PTR [rbx+0x0],dl
   140008f2a:	add    BYTE PTR [r8+rax*1+0x5f],r10b
   140008f2f:	add    BYTE PTR [rbx+0x0],dl
   140008f32:	rex.WB add BYTE PTR [r14+0x0],cl
   140008f36:	add    BYTE PTR [r8+r8*1+0x45],r9b
   140008f3b:	add    BYTE PTR [rdi+0x0],bl
   140008f3e:	add    BYTE PTR [r15+0x0],al
   140008f42:	rex.RXB add BYTE PTR [r10+0x0],r10b
   140008f46:	add    BYTE PTR [r15+0x0],r8b
   140008f4a:	add    BYTE PTR [r8+rax*1+0x45],dl
	...
   140008f57:	add    BYTE PTR [rbp+0x0],ch
   140008f5a:	jne    0x140008f5c
   140008f5c:	ins    BYTE PTR es:[rdi],dx
   140008f5d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008f61:	add    BYTE PTR [rax+0x0],dh
   140008f64:	ins    BYTE PTR es:[rdi],dx
   140008f65:	add    BYTE PTR [rbp+0x0],ah
   140008f68:	add    BYTE PTR [r15+0x0],spl
   140008f6c:	add    BYTE PTR [edx+0x0],dh
   140008f70:	add    BYTE PTR gs:[rdi+0x0],ah
   140008f74:	(bad)  
   140008f75:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008f79:	add    BYTE PTR [rax],al
   140008f7b:	add    BYTE PTR [rax],al
   140008f7d:	add    BYTE PTR [rax],al
   140008f7f:	add    BYTE PTR [rax+0x0],dl
   140008f82:	add    BYTE PTR [r10+0x0],r10b
   140008f86:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140008f8a:	rex.XB add BYTE PTR [r15+0x0],cl
   140008f8e:	push   rbp
   140008f8f:	add    BYTE PTR [rsi+0x0],cl
   140008f92:	push   rsp
   140008f93:	add    BYTE PTR [rbp+0x0],al
   140008f96:	push   rdx
   140008f97:	add    BYTE PTR [rbx+0x0],dl
   140008f9a:	add    BYTE PTR [r8+rax*1+0x5f],r10b
   140008f9f:	add    BYTE PTR [rbp+0x0],cl
   140008fa2:	push   rbp
   140008fa3:	add    BYTE PTR [rax+rax*1+0x54],cl
   140008fa7:	add    BYTE PTR [rcx+0x0],cl
   140008faa:	pop    rdi
   140008fab:	add    BYTE PTR [rcx+0x0],al
   140008fae:	rex.RXB add BYTE PTR [r15+0x0],r8b
   140008fb2:	push   rdx
   140008fb3:	add    BYTE PTR [rbp+0x0],al
   140008fb6:	rex.RXB add BYTE PTR [r9+0x0],r8b
   140008fba:	push   rsp
   140008fbb:	add    BYTE PTR [rbp+0x0],al
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	imul   eax,DWORD PTR [rax],0x73006e
   140008fc6:	je     0x140008fc8
   140008fc8:	(bad)  
   140008fc9:	add    BYTE PTR [rsi+0x0],ch
   140008fcc:	movsxd eax,DWORD PTR [rax]
   140008fce:	add    BYTE PTR gs:[rcx+0x0],al
   140008fd2:	add    BYTE PTR [edi+0x0],ah
   140008fd6:	jb     0x140008fd8
   140008fd8:	add    BYTE PTR gs:[rdi+0x0],ah
   140008fdc:	(bad)  
   140008fdd:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rax+0x0],dl
   140008ff2:	add    BYTE PTR [r10+0x0],r10b
   140008ff6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140008ffa:	rex.XB add BYTE PTR [r15+0x0],cl
   140008ffe:	push   rbp
   140008fff:	add    BYTE PTR [rsi+0x0],cl
   140009002:	push   rsp
   140009003:	add    BYTE PTR [rbp+0x0],al
   140009006:	push   rdx
   140009007:	add    BYTE PTR [rbx+0x0],dl
   14000900a:	add    BYTE PTR [r8+rax*1+0x5f],r10b
   14000900f:	add    BYTE PTR [rcx+0x0],cl
   140009012:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140009016:	push   rsp
   140009017:	add    BYTE PTR [rcx+0x0],al
   14000901a:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14000901e:	add    BYTE PTR [r15+0x0],r11b
   140009022:	add    BYTE PTR [r15+0x0],al
   140009026:	rex.RXB add BYTE PTR [r10+0x0],r10b
   14000902a:	add    BYTE PTR [r15+0x0],r8b
   14000902e:	add    BYTE PTR [r8+rax*1+0x45],dl
   140009033:	add    BYTE PTR [rax],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rdi+0x0],ah
   14000903a:	ins    BYTE PTR es:[rdi],dx
   14000903b:	add    BYTE PTR [rdi+0x0],ch
   14000903e:	(bad)  
   14000903f:	add    BYTE PTR [rcx+0x0],ah
   140009042:	ins    BYTE PTR es:[rdi],dx
   140009043:	add    BYTE PTR [rcx+0x0],al
   140009046:	add    BYTE PTR [edi+0x0],ah
   14000904a:	jb     0x14000904c
   14000904c:	add    BYTE PTR gs:[rdi+0x0],ah
   140009050:	(bad)  
   140009051:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009055:	add    BYTE PTR [rax+0x0],cl
   140009058:	imul   eax,DWORD PTR [rax],0x740073
   14000905e:	outs   dx,DWORD PTR ds:[rsi]
   14000905f:	add    BYTE PTR [rdx+0x0],dh
   140009062:	jns    0x140009064
	...
   140009070:	push   rax
   140009071:	add    BYTE PTR [rbp+0x0],al
   140009074:	push   rdx
   140009075:	add    BYTE PTR [rsi+0x0],al
   140009078:	pop    rdi
   140009079:	add    BYTE PTR [rbx+0x0],al
   14000907c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009080:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140009085:	add    BYTE PTR [rdx+0x0],dl
   140009088:	push   rbx
   140009089:	add    BYTE PTR [rbp+0x0],al
   14000908c:	push   rsp
   14000908d:	add    BYTE PTR [rdi+0x0],bl
   140009090:	push   rbx
   140009091:	add    BYTE PTR [rcx+0x0],cl
   140009094:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   140009098:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000909c:	pop    rdi
   14000909d:	add    BYTE PTR [rcx+0x0],al
   1400090a0:	rex.RXB add BYTE PTR [r15+0x0],r8b
   1400090a4:	push   rdx
   1400090a5:	add    BYTE PTR [rbp+0x0],al
   1400090a8:	rex.RXB add BYTE PTR [r9+0x0],r8b
   1400090ac:	push   rsp
   1400090ad:	add    BYTE PTR [rbp+0x0],al
   1400090b0:	pop    rdi
   1400090b1:	add    BYTE PTR [rax+0x0],cl
   1400090b4:	rex.WB add BYTE PTR [r11+0x0],dl
   1400090b8:	push   rsp
   1400090b9:	add    BYTE PTR [rdi+0x0],cl
   1400090bc:	push   rdx
   1400090bd:	add    BYTE PTR [rcx+0x0],bl
	...
   1400090c8:	jae    0x1400090ca
   1400090ca:	je     0x1400090cc
   1400090cc:	(bad)  
   1400090cd:	add    BYTE PTR [rsi+0x0],ch
   1400090d0:	add    BYTE PTR fs:[rcx+0x0],ah
   1400090d4:	jb     0x1400090d6
   1400090d6:	add    BYTE PTR fs:[rax],al
   1400090d9:	add    BYTE PTR [rax],al
   1400090db:	add    BYTE PTR [rax],al
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    BYTE PTR [rax+0x0],dl
   1400090e2:	add    BYTE PTR [r10+0x0],r10b
   1400090e6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   1400090ea:	add    BYTE PTR [rbp+0x0],r8b
   1400090ee:	push   rsp
   1400090ef:	add    BYTE PTR [rcx+0x0],al
   1400090f2:	rex.WB add BYTE PTR [r8+rax*1+0x5f],cl
   1400090f7:	add    BYTE PTR [rsi+0x0],cl
   1400090fa:	rex.WRXB add BYTE PTR [r14+0x0],r10b
   1400090fe:	rex.WB add BYTE PTR [r11+0x0],al
   140009102:	add    BYTE PTR [r8],r8b
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rcx+0x0],ah
   14000910a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000910e:	(bad)  
   14000910f:	add    BYTE PTR [rsi+0x0],ch
   140009112:	movsxd eax,DWORD PTR [rax]
   140009114:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140009119:	add    BYTE PTR [rax],al
   14000911b:	add    BYTE PTR [rax],al
   14000911d:	add    BYTE PTR [rax],al
   14000911f:	add    BYTE PTR [rax+0x0],dl
   140009122:	add    BYTE PTR [r10+0x0],r10b
   140009126:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000912a:	add    BYTE PTR [rbp+0x0],r8b
   14000912e:	push   rsp
   14000912f:	add    BYTE PTR [rcx+0x0],al
   140009132:	rex.WB add BYTE PTR [r8+rax*1+0x5f],cl
   140009137:	add    BYTE PTR [rcx+0x0],al
   14000913a:	add    BYTE PTR [rsi+0x0],r10b
   14000913e:	add    BYTE PTR [r14+0x0],cl
   140009142:	rex.XB add BYTE PTR [r13+0x0],al
   140009146:	add    BYTE PTR [rax],r8b
   140009149:	add    BYTE PTR [rax],al
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rbx+0x0],dh
   140009152:	jne    0x140009154
   140009154:	ins    DWORD PTR es:[rdi],dx
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rax+0x0],dl
   14000915a:	add    BYTE PTR [r10+0x0],r10b
   14000915e:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009162:	add    BYTE PTR [r15+0x0],al
   140009166:	rex.RXB add BYTE PTR [r10+0x0],r10b
   14000916a:	add    BYTE PTR [r15+0x0],r8b
   14000916e:	add    BYTE PTR [r8+rax*1+0x45],dl
   140009173:	add    BYTE PTR [rdi+0x0],bl
   140009176:	push   rsp
   140009177:	add    BYTE PTR [rdi+0x0],cl
   14000917a:	push   rsp
   14000917b:	add    BYTE PTR [rcx+0x0],al
   14000917e:	rex.WR add BYTE PTR [rax],r8b
   140009181:	add    BYTE PTR [rax],al
   140009183:	add    BYTE PTR [rax],al
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rcx+0x0],ah
   14000918a:	jbe    0x14000918c
   14000918c:	add    BYTE PTR [eax],al
   14000918f:	add    BYTE PTR [rax+0x0],dl
   140009192:	add    BYTE PTR [r10+0x0],r10b
   140009196:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000919a:	add    BYTE PTR [r15+0x0],al
   14000919e:	rex.RXB add BYTE PTR [r10+0x0],r10b
   1400091a2:	add    BYTE PTR [r15+0x0],r8b
   1400091a6:	add    BYTE PTR [r8+rax*1+0x45],dl
   1400091ab:	add    BYTE PTR [rdi+0x0],bl
   1400091ae:	add    BYTE PTR [r14+0x0],dl
   1400091b2:	rex.RXB add BYTE PTR [r8],r8b
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    BYTE PTR [rbp+0x0],ch
   1400091ba:	(bad)  
   1400091bb:	add    BYTE PTR [rax+0x0],bh
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	push   rax
   1400091c1:	add    BYTE PTR [rbp+0x0],al
   1400091c4:	push   rdx
   1400091c5:	add    BYTE PTR [rsi+0x0],al
   1400091c8:	pop    rdi
   1400091c9:	add    BYTE PTR [rcx+0x0],al
   1400091cc:	rex.RXB add BYTE PTR [r15+0x0],r8b
   1400091d0:	push   rdx
   1400091d1:	add    BYTE PTR [rbp+0x0],al
   1400091d4:	rex.RXB add BYTE PTR [r9+0x0],r8b
   1400091d8:	push   rsp
   1400091d9:	add    BYTE PTR [rbp+0x0],al
   1400091dc:	pop    rdi
   1400091dd:	add    BYTE PTR [rbp+0x0],cl
   1400091e0:	add    BYTE PTR [r8+0x0],bl
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	ins    DWORD PTR es:[rdi],dx
   1400091e9:	add    BYTE PTR [rcx+0x0],ch
   1400091ec:	outs   dx,BYTE PTR ds:[rsi]
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rax+0x0],dl
   1400091f2:	add    BYTE PTR [r10+0x0],r10b
   1400091f6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   1400091fa:	add    BYTE PTR [r15+0x0],al
   1400091fe:	rex.RXB add BYTE PTR [r10+0x0],r10b
   140009202:	add    BYTE PTR [r15+0x0],r8b
   140009206:	add    BYTE PTR [r8+rax*1+0x45],dl
   14000920b:	add    BYTE PTR [rdi+0x0],bl
   14000920e:	rex.WRB add BYTE PTR [r9+0x0],r9b
   140009212:	rex.WRX add BYTE PTR [rax],r8b
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rbp+0x0],dh
   14000921a:	outs   dx,BYTE PTR ds:[rsi]
   14000921b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000921f:	add    BYTE PTR [rsi+0x0],ah
   140009222:	imul   eax,DWORD PTR [rax],0x65006e
   140009228:	add    BYTE PTR fs:[rax],al
   14000922b:	add    BYTE PTR [rax],al
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rax+0x0],dl
   140009232:	add    BYTE PTR [r10+0x0],r10b
   140009236:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000923a:	add    BYTE PTR [r15+0x0],al
   14000923e:	rex.RXB add BYTE PTR [r10+0x0],r10b
   140009242:	add    BYTE PTR [r15+0x0],r8b
   140009246:	add    BYTE PTR [r8+rax*1+0x45],dl
   14000924b:	add    BYTE PTR [rdi+0x0],bl
   14000924e:	push   rbp
   14000924f:	add    BYTE PTR [rsi+0x0],cl
   140009252:	add    BYTE PTR [rbp+0x0],r8b
   140009256:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000925a:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000925e:	add    BYTE PTR [rax],r8b
   140009261:	add    BYTE PTR [rax],al
   140009263:	add    BYTE PTR [rax],al
   140009265:	add    BYTE PTR [rax],al
   140009267:	add    BYTE PTR [rdx+0x0],dh
   14000926a:	add    BYTE PTR gs:[rsi+0x0],ah
   14000926e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009272:	add    BYTE PTR gs:[rsi+0x0],ch
   140009276:	movsxd eax,DWORD PTR [rax]
   140009278:	add    BYTE PTR gs:[rax],al
   14000927b:	add    BYTE PTR [rax],al
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rax+0x0],dl
   140009282:	add    BYTE PTR [r10+0x0],r10b
   140009286:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000928a:	add    BYTE PTR [r8+rax*1+0x54],dl
   14000928f:	add    BYTE PTR [rdx+0x0],dl
   140009292:	rex.WB add BYTE PTR [r10+0x0],al
   140009296:	pop    rdi
   140009297:	add    BYTE PTR [rdx+0x0],al
   14000929a:	pop    rcx
   14000929b:	add    BYTE PTR [rdi+0x0],bl
   14000929e:	push   rdx
   14000929f:	add    BYTE PTR [rbp+0x0],al
   1400092a2:	rex.RX add BYTE PTR [rbp+0x0],r8b
   1400092a6:	push   rdx
   1400092a7:	add    BYTE PTR [rbp+0x0],al
   1400092aa:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   1400092ae:	add    BYTE PTR [r8],r8b
   1400092b1:	add    BYTE PTR [rax],al
   1400092b3:	add    BYTE PTR [rax],al
   1400092b5:	add    BYTE PTR [rax],al
   1400092b7:	add    BYTE PTR [rsi+0x0],ch
   1400092ba:	outs   dx,DWORD PTR ds:[rsi]
   1400092bb:	add    BYTE PTR [rax+rax*1+0x69],al
   1400092bf:	add    BYTE PTR [rbx+0x0],dh
   1400092c2:	jo     0x1400092c4
   1400092c4:	ins    BYTE PTR es:[rdi],dx
   1400092c5:	add    BYTE PTR [rcx+0x0],ah
   1400092c8:	jns    0x1400092ca
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	push   rax
   1400092d1:	add    BYTE PTR [rbp+0x0],al
   1400092d4:	push   rdx
   1400092d5:	add    BYTE PTR [rsi+0x0],al
   1400092d8:	pop    rdi
   1400092d9:	add    BYTE PTR [rcx+0x0],al
   1400092dc:	push   rsp
   1400092dd:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400092e1:	add    BYTE PTR [rcx+0x0],cl
   1400092e4:	rex.X add BYTE PTR [rdi+0x0],bl
   1400092e8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   1400092ec:	pop    rdi
   1400092ed:	add    BYTE PTR [rax+rax*1+0x49],al
   1400092f1:	add    BYTE PTR [rbx+0x0],dl
   1400092f4:	push   rax
   1400092f5:	add    BYTE PTR [rax+rax*1+0x41],cl
   1400092f9:	add    BYTE PTR [rcx+0x0],bl
   1400092fc:	add    BYTE PTR [r10+0x0],al
   140009300:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	outs   dx,BYTE PTR ds:[rsi]
   140009309:	add    BYTE PTR [rdi+0x0],ch
   14000930c:	add    BYTE PTR [rcx+0x0],r13b
   140009310:	add    BYTE PTR [ecx+0x0],ch
   140009314:	je     0x140009316
   140009316:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000931a:	outs   dx,DWORD PTR ds:[rsi]
   14000931b:	add    BYTE PTR [rbp+0x0],dh
   14000931e:	jo     0x140009320
   140009320:	imul   eax,DWORD PTR [rax],0x67006e
   140009326:	add    BYTE PTR [rax],al
   140009328:	push   rax
   140009329:	add    BYTE PTR [rbp+0x0],al
   14000932c:	push   rdx
   14000932d:	add    BYTE PTR [rsi+0x0],al
   140009330:	pop    rdi
   140009331:	add    BYTE PTR [rcx+0x0],al
   140009334:	push   rsp
   140009335:	add    BYTE PTR [rax+rax*1+0x52],dl
   140009339:	add    BYTE PTR [rcx+0x0],cl
   14000933c:	rex.X add BYTE PTR [rdi+0x0],bl
   140009340:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140009344:	pop    rdi
   140009345:	add    BYTE PTR [rdi+0x0],al
   140009348:	push   rdx
   140009349:	add    BYTE PTR [rdi+0x0],cl
   14000934c:	push   rbp
   14000934d:	add    BYTE PTR [rax+0x0],dl
   140009350:	pop    rdi
   140009351:	add    BYTE PTR [rbx+0x0],dl
   140009354:	add    BYTE PTR [r8+0x0],r10b
   140009358:	add    BYTE PTR [r10+0x0],dl
   14000935c:	add    BYTE PTR [r8+rax*1+0x4f],dl
   140009361:	add    BYTE PTR [rdx+0x0],dl
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	add    BYTE PTR fs:[rcx+0x0],ch
   14000936c:	jae    0x14000936e
   14000936e:	jo     0x140009370
   140009370:	ins    BYTE PTR es:[rdi],dx
   140009371:	add    BYTE PTR [rcx+0x0],ah
   140009374:	jns    0x140009376
   140009376:	add    BYTE PTR [r11+0x0],sil
   14000937a:	rex.W add BYTE PTR [rbp+0x0],spl
   14000937e:	js     0x140009380
	...
   140009388:	push   rax
   140009389:	add    BYTE PTR [rbp+0x0],al
   14000938c:	push   rdx
   14000938d:	add    BYTE PTR [rsi+0x0],al
   140009390:	pop    rdi
   140009391:	add    BYTE PTR [rcx+0x0],al
   140009394:	push   rsp
   140009395:	add    BYTE PTR [rax+rax*1+0x52],dl
   140009399:	add    BYTE PTR [rcx+0x0],cl
   14000939c:	rex.X add BYTE PTR [rdi+0x0],bl
   1400093a0:	add    BYTE PTR [rcx+0x0],r9b
   1400093a4:	push   rbx
   1400093a5:	add    BYTE PTR [rax+0x0],dl
   1400093a8:	rex.WR add BYTE PTR [rcx+0x0],r8b
   1400093ac:	pop    rcx
   1400093ad:	add    BYTE PTR [rdi+0x0],bl
   1400093b0:	add    BYTE PTR [r11+0x0],dl
   1400093b4:	pop    rdi
   1400093b5:	add    BYTE PTR [rax+0x0],cl
   1400093b8:	add    BYTE PTR [r8+0x0],r11b
   1400093bc:	add    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	add    BYTE PTR fs:[rcx+0x0],ch
   1400093c4:	jae    0x1400093c6
   1400093c6:	jo     0x1400093c8
   1400093c8:	ins    BYTE PTR es:[rdi],dx
   1400093c9:	add    BYTE PTR [rcx+0x0],ah
   1400093cc:	jns    0x1400093ce
   1400093ce:	add    BYTE PTR [r11+0x0],sil
   1400093d2:	push   rdx
   1400093d3:	add    BYTE PTR [rbp+0x0],ah
   1400093d6:	(bad)  
   1400093d7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400093db:	add    BYTE PTR [rax],al
   1400093dd:	add    BYTE PTR [rax],al
   1400093df:	add    BYTE PTR [rax+0x0],dl
   1400093e2:	add    BYTE PTR [r10+0x0],r10b
   1400093e6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   1400093ea:	add    BYTE PTR [r8+rax*1+0x54],dl
   1400093ef:	add    BYTE PTR [rdx+0x0],dl
   1400093f2:	rex.WB add BYTE PTR [r10+0x0],al
   1400093f6:	pop    rdi
   1400093f7:	add    BYTE PTR [rax+rax*1+0x49],al
   1400093fb:	add    BYTE PTR [rbx+0x0],dl
   1400093fe:	push   rax
   1400093ff:	add    BYTE PTR [rax+rax*1+0x41],cl
   140009403:	add    BYTE PTR [rcx+0x0],bl
   140009406:	pop    rdi
   140009407:	add    BYTE PTR [rcx+0x0],al
   14000940a:	push   rbx
   14000940b:	add    BYTE PTR [rdi+0x0],bl
   14000940e:	push   rdx
   14000940f:	add    BYTE PTR [rbp+0x0],al
   140009412:	add    BYTE PTR [r8+rax*1+0x0],cl
   140009417:	add    BYTE PTR [rax+0x0],dh
   14000941a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000941e:	data16 add BYTE PTR [rdi+0x0],bl
   140009422:	movsxd eax,DWORD PTR [rax]
   140009424:	outs   dx,DWORD PTR ds:[rsi]
   140009425:	add    BYTE PTR [rbp+0x0],dh
   140009428:	outs   dx,BYTE PTR ds:[rsi]
   140009429:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000942d:	add    BYTE PTR [rdx+0x0],dh
   140009430:	pop    rdi
   140009431:	add    BYTE PTR [rbx+0x0],ah
   140009434:	outs   dx,DWORD PTR ds:[rsi]
   140009435:	add    BYTE PTR [rbp+0x0],dh
   140009438:	outs   dx,BYTE PTR ds:[rsi]
   140009439:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000943d:	add    BYTE PTR [rdx+0x0],dh
	...
   140009448:	push   rax
   140009449:	add    BYTE PTR [rbp+0x0],al
   14000944c:	push   rdx
   14000944d:	add    BYTE PTR [rsi+0x0],al
   140009450:	pop    rdi
   140009451:	add    BYTE PTR [rbx+0x0],al
   140009454:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009458:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14000945d:	add    BYTE PTR [rdx+0x0],dl
   140009460:	pop    rdi
   140009461:	add    BYTE PTR [rbx+0x0],al
   140009464:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009468:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14000946d:	add    BYTE PTR [rdx+0x0],dl
	...
   140009478:	jo     0x14000947a
   14000947a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000947e:	data16 add BYTE PTR [rdi+0x0],bl
   140009482:	movsxd eax,DWORD PTR [rax]
   140009484:	outs   dx,DWORD PTR ds:[rsi]
   140009485:	add    BYTE PTR [rbp+0x0],dh
   140009488:	outs   dx,BYTE PTR ds:[rsi]
   140009489:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000948d:	add    BYTE PTR [rdx+0x0],dh
   140009490:	pop    rdi
   140009491:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009495:	add    BYTE PTR [rbp+0x0],ch
   140009498:	add    BYTE PTR gs:[rdx+0x0],dh
   14000949c:	add    BYTE PTR [rax],al
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	push   rax
   1400094a1:	add    BYTE PTR [rbp+0x0],al
   1400094a4:	push   rdx
   1400094a5:	add    BYTE PTR [rsi+0x0],al
   1400094a8:	pop    rdi
   1400094a9:	add    BYTE PTR [rbx+0x0],al
   1400094ac:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   1400094b0:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   1400094b5:	add    BYTE PTR [rdx+0x0],dl
   1400094b8:	pop    rdi
   1400094b9:	add    BYTE PTR [rax+rax*1+0x49],dl
   1400094bd:	add    BYTE PTR [rbp+0x0],cl
   1400094c0:	add    BYTE PTR [r10+0x0],r10b
   1400094c4:	add    BYTE PTR [rax],al
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	jo     0x1400094ca
   1400094ca:	add    BYTE PTR gs:[rdx+0x0],dh
   1400094ce:	data16 add BYTE PTR [rdi+0x0],bl
   1400094d2:	movsxd eax,DWORD PTR [rax]
   1400094d4:	outs   dx,DWORD PTR ds:[rsi]
   1400094d5:	add    BYTE PTR [rbp+0x0],dh
   1400094d8:	outs   dx,BYTE PTR ds:[rsi]
   1400094d9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400094dd:	add    BYTE PTR [rdx+0x0],dh
   1400094e0:	pop    rdi
   1400094e1:	add    BYTE PTR [rcx+0x0],dh
   1400094e4:	jne    0x1400094e6
   1400094e6:	add    BYTE PTR gs:[rbp+0x0],dh
   1400094ea:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400094ef:	add    BYTE PTR [rsi+0x0],ch
   1400094f2:	pop    rdi
   1400094f3:	add    BYTE PTR [rax+rax*1+0x79],dh
   1400094f7:	add    BYTE PTR [rax+0x0],dh
   1400094fa:	add    BYTE PTR gs:[rax],al
   1400094fd:	add    BYTE PTR [rax],al
   1400094ff:	add    BYTE PTR [rax+0x0],dl
   140009502:	add    BYTE PTR [r10+0x0],r10b
   140009506:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000950a:	rex.XB add BYTE PTR [r15+0x0],cl
   14000950e:	push   rbp
   14000950f:	add    BYTE PTR [rsi+0x0],cl
   140009512:	push   rsp
   140009513:	add    BYTE PTR [rbp+0x0],al
   140009516:	push   rdx
   140009517:	add    BYTE PTR [rdi+0x0],bl
   14000951a:	push   rcx
   14000951b:	add    BYTE PTR [rbp+0x0],dl
   14000951e:	add    BYTE PTR [r13+0x0],r10b
   140009522:	add    BYTE PTR [r8+rax*1+0x45],r9b
   140009527:	add    BYTE PTR [rsi+0x0],cl
   14000952a:	pop    rdi
   14000952b:	add    BYTE PTR [rax+rax*1+0x59],dl
   14000952f:	add    BYTE PTR [rax+0x0],dl
   140009532:	add    BYTE PTR [r8],r8b
	...
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    BYTE PTR [rax+0x0],dh
   140009542:	add    BYTE PTR gs:[rdx+0x0],dh
   140009546:	data16 add BYTE PTR [rdi+0x0],bl
   14000954a:	movsxd eax,DWORD PTR [rax]
   14000954c:	outs   dx,DWORD PTR ds:[rsi]
   14000954d:	add    BYTE PTR [rbp+0x0],dh
   140009550:	outs   dx,BYTE PTR ds:[rsi]
   140009551:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009555:	add    BYTE PTR [rdx+0x0],dh
   140009558:	pop    rdi
   140009559:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000955d:	add    BYTE PTR [rdx+0x0],dh
   140009560:	add    BYTE PTR [ebp+0x0],ah
   140009564:	pop    rdi
   140009565:	add    BYTE PTR [rcx+0x0],dh
   140009568:	jne    0x14000956a
   14000956a:	add    BYTE PTR gs:[rbp+0x0],dh
   14000956e:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140009573:	add    BYTE PTR [rsi+0x0],ch
   140009576:	pop    rdi
   140009577:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000957b:	add    BYTE PTR [rax+0x0],dh
   14000957e:	add    BYTE PTR gs:[rax],al
	...
   14000958d:	add    BYTE PTR [rax],al
   14000958f:	add    BYTE PTR [rax+0x0],dl
   140009592:	add    BYTE PTR [r10+0x0],r10b
   140009596:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000959a:	rex.XB add BYTE PTR [r15+0x0],cl
   14000959e:	push   rbp
   14000959f:	add    BYTE PTR [rsi+0x0],cl
   1400095a2:	push   rsp
   1400095a3:	add    BYTE PTR [rbp+0x0],al
   1400095a6:	push   rdx
   1400095a7:	add    BYTE PTR [rdi+0x0],bl
   1400095aa:	rex.WR add BYTE PTR [rcx+0x0],r8b
   1400095ae:	push   rdx
   1400095af:	add    BYTE PTR [rdi+0x0],al
   1400095b2:	add    BYTE PTR [r15+0x0],r11b
   1400095b6:	push   rcx
   1400095b7:	add    BYTE PTR [rbp+0x0],dl
   1400095ba:	add    BYTE PTR [r13+0x0],r10b
   1400095be:	add    BYTE PTR [r8+rax*1+0x45],r9b
   1400095c3:	add    BYTE PTR [rsi+0x0],cl
   1400095c6:	pop    rdi
   1400095c7:	add    BYTE PTR [rax+rax*1+0x59],dl
   1400095cb:	add    BYTE PTR [rax+0x0],dl
   1400095ce:	add    BYTE PTR [r8],r8b
	...
   1400095dd:	add    BYTE PTR [rax],al
   1400095df:	add    BYTE PTR [rax+0x0],dh
   1400095e2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400095e6:	data16 add BYTE PTR [rdi+0x0],bl
   1400095ea:	movsxd eax,DWORD PTR [rax]
   1400095ec:	outs   dx,DWORD PTR ds:[rsi]
   1400095ed:	add    BYTE PTR [rbp+0x0],dh
   1400095f0:	outs   dx,BYTE PTR ds:[rsi]
   1400095f1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400095f5:	add    BYTE PTR [rdx+0x0],dh
   1400095f8:	pop    rdi
   1400095f9:	add    BYTE PTR [rcx],dh
   1400095fb:	add    BYTE PTR [rax],dh
   1400095fd:	add    BYTE PTR [rax],dh
   1400095ff:	add    BYTE PTR [rsi+0x0],ch
   140009602:	jae    0x140009604
   140009604:	pop    rdi
   140009605:	add    BYTE PTR [rcx+0x0],dh
   140009608:	jne    0x14000960a
   14000960a:	add    BYTE PTR gs:[rbp+0x0],dh
   14000960e:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140009613:	add    BYTE PTR [rsi+0x0],ch
   140009616:	pop    rdi
   140009617:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000961b:	add    BYTE PTR [rax+0x0],dh
   14000961e:	add    BYTE PTR gs:[rax],al
	...
   14000962d:	add    BYTE PTR [rax],al
   14000962f:	add    BYTE PTR [rax+0x0],dl
   140009632:	add    BYTE PTR [r10+0x0],r10b
   140009636:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000963a:	rex.XB add BYTE PTR [r15+0x0],cl
   14000963e:	push   rbp
   14000963f:	add    BYTE PTR [rsi+0x0],cl
   140009642:	push   rsp
   140009643:	add    BYTE PTR [rbp+0x0],al
   140009646:	push   rdx
   140009647:	add    BYTE PTR [rdi+0x0],bl
   14000964a:	xor    DWORD PTR [rax],eax
   14000964c:	xor    BYTE PTR [rax],al
   14000964e:	xor    BYTE PTR [rax],al
   140009650:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140009654:	pop    rdi
   140009655:	add    BYTE PTR [rcx+0x0],dl
   140009658:	push   rbp
   140009659:	add    BYTE PTR [rbp+0x0],al
   14000965c:	push   rbp
   14000965d:	add    BYTE PTR [rbp+0x0],al
   140009660:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140009664:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140009668:	push   rsp
   140009669:	add    BYTE PTR [rcx+0x0],bl
   14000966c:	push   rax
   14000966d:	add    BYTE PTR [rbp+0x0],al
	...
   140009680:	jo     0x140009682
   140009682:	add    BYTE PTR gs:[rdx+0x0],dh
   140009686:	data16 add BYTE PTR [rdi+0x0],bl
   14000968a:	movsxd eax,DWORD PTR [rax]
   14000968c:	outs   dx,DWORD PTR ds:[rsi]
   14000968d:	add    BYTE PTR [rbp+0x0],dh
   140009690:	outs   dx,BYTE PTR ds:[rsi]
   140009691:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009695:	add    BYTE PTR [rdx+0x0],dh
   140009698:	pop    rdi
   140009699:	add    BYTE PTR [rdi+0x0],ch
   14000969c:	(bad)  
   14000969d:	add    BYTE PTR [rdx+0x0],ch
   1400096a0:	pop    rdi
   1400096a1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400096a5:	add    BYTE PTR [rbp+0x0],ch
   1400096a8:	add    BYTE PTR gs:[rdi+0x0],bl
   1400096ac:	jno    0x1400096ae
   1400096ae:	jne    0x1400096b0
   1400096b0:	add    BYTE PTR gs:[rbp+0x0],dh
   1400096b4:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400096b9:	add    BYTE PTR [rsi+0x0],ch
   1400096bc:	pop    rdi
   1400096bd:	add    BYTE PTR [rax+rax*1+0x79],dh
   1400096c1:	add    BYTE PTR [rax+0x0],dh
   1400096c4:	add    BYTE PTR gs:[rax],al
	...
   1400096cf:	add    BYTE PTR [rax+0x0],dl
   1400096d2:	add    BYTE PTR [r10+0x0],r10b
   1400096d6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   1400096da:	rex.XB add BYTE PTR [r15+0x0],cl
   1400096de:	push   rbp
   1400096df:	add    BYTE PTR [rsi+0x0],cl
   1400096e2:	push   rsp
   1400096e3:	add    BYTE PTR [rbp+0x0],al
   1400096e6:	push   rdx
   1400096e7:	add    BYTE PTR [rdi+0x0],bl
   1400096ea:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   1400096ee:	rex.WX add BYTE PTR [rdi+0x0],bl
   1400096f2:	push   rsp
   1400096f3:	add    BYTE PTR [rcx+0x0],cl
   1400096f6:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400096fa:	pop    rdi
   1400096fb:	add    BYTE PTR [rcx+0x0],dl
   1400096fe:	push   rbp
   1400096ff:	add    BYTE PTR [rbp+0x0],al
   140009702:	push   rbp
   140009703:	add    BYTE PTR [rbp+0x0],al
   140009706:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000970a:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000970e:	push   rsp
   14000970f:	add    BYTE PTR [rcx+0x0],bl
   140009712:	push   rax
   140009713:	add    BYTE PTR [rbp+0x0],al
   140009716:	add    BYTE PTR [rax],al
   140009718:	jo     0x14000971a
   14000971a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000971e:	data16 add BYTE PTR [rdi+0x0],bl
   140009722:	movsxd eax,DWORD PTR [rax]
   140009724:	outs   dx,DWORD PTR ds:[rsi]
   140009725:	add    BYTE PTR [rbp+0x0],dh
   140009728:	outs   dx,BYTE PTR ds:[rsi]
   140009729:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000972d:	add    BYTE PTR [rdx+0x0],dh
   140009730:	pop    rdi
   140009731:	add    BYTE PTR [rdx+0x0],ah
   140009734:	jne    0x140009736
   140009736:	ins    BYTE PTR es:[rdi],dx
   140009737:	add    BYTE PTR [rbx+0x0],ch
   14000973a:	pop    rdi
   14000973b:	add    BYTE PTR [rbx+0x0],ah
   14000973e:	outs   dx,DWORD PTR ds:[rsi]
   14000973f:	add    BYTE PTR [rbp+0x0],dh
   140009742:	outs   dx,BYTE PTR ds:[rsi]
   140009743:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009747:	add    BYTE PTR [rax+0x0],dl
   14000974a:	add    BYTE PTR [r10+0x0],r10b
   14000974e:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009752:	rex.XB add BYTE PTR [r15+0x0],cl
   140009756:	push   rbp
   140009757:	add    BYTE PTR [rsi+0x0],cl
   14000975a:	push   rsp
   14000975b:	add    BYTE PTR [rbp+0x0],al
   14000975e:	push   rdx
   14000975f:	add    BYTE PTR [rdi+0x0],bl
   140009762:	rex.X add BYTE PTR [rbp+0x0],dl
   140009766:	rex.WR add BYTE PTR [rbx+0x0],r9b
   14000976a:	pop    rdi
   14000976b:	add    BYTE PTR [rbx+0x0],al
   14000976e:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009772:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140009777:	add    BYTE PTR [rax+0x0],dh
   14000977a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000977e:	data16 add BYTE PTR [rdi+0x0],bl
   140009782:	movsxd eax,DWORD PTR [rax]
   140009784:	outs   dx,DWORD PTR ds:[rsi]
   140009785:	add    BYTE PTR [rbp+0x0],dh
   140009788:	outs   dx,BYTE PTR ds:[rsi]
   140009789:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000978d:	add    BYTE PTR [rdx+0x0],dh
   140009790:	pop    rdi
   140009791:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009795:	add    BYTE PTR [rax+0x0],bh
   140009798:	je     0x14000979a
   14000979a:	add    BYTE PTR [rax],al
   14000979c:	add    BYTE PTR [rax],al
   14000979e:	add    BYTE PTR [rax],al
   1400097a0:	push   rax
   1400097a1:	add    BYTE PTR [rbp+0x0],al
   1400097a4:	push   rdx
   1400097a5:	add    BYTE PTR [rsi+0x0],al
   1400097a8:	pop    rdi
   1400097a9:	add    BYTE PTR [rbx+0x0],al
   1400097ac:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   1400097b0:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   1400097b5:	add    BYTE PTR [rdx+0x0],dl
   1400097b8:	pop    rdi
   1400097b9:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400097bd:	add    BYTE PTR [rax+0x0],bl
   1400097c0:	push   rsp
   1400097c1:	add    BYTE PTR [rax],al
   1400097c3:	add    BYTE PTR [rax],al
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rax+0x0],dh
   1400097ca:	add    BYTE PTR gs:[rdx+0x0],dh
   1400097ce:	data16 add BYTE PTR [rdi+0x0],bl
   1400097d2:	movsxd eax,DWORD PTR [rax]
   1400097d4:	outs   dx,DWORD PTR ds:[rsi]
   1400097d5:	add    BYTE PTR [rbp+0x0],dh
   1400097d8:	outs   dx,BYTE PTR ds:[rsi]
   1400097d9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400097dd:	add    BYTE PTR [rdx+0x0],dh
   1400097e0:	pop    rdi
   1400097e1:	add    BYTE PTR [rdx+0x0],dh
   1400097e4:	(bad)  
   1400097e5:	add    BYTE PTR [rdi+0x0],dh
   1400097e8:	movsxd eax,DWORD PTR [rax]
   1400097ea:	outs   dx,DWORD PTR ds:[rsi]
   1400097eb:	add    BYTE PTR [rbp+0x0],dh
   1400097ee:	outs   dx,BYTE PTR ds:[rsi]
   1400097ef:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400097f3:	add    BYTE PTR [rax],al
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    BYTE PTR [rax+0x0],dl
   1400097fa:	add    BYTE PTR [r10+0x0],r10b
   1400097fe:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009802:	rex.XB add BYTE PTR [r15+0x0],cl
   140009806:	push   rbp
   140009807:	add    BYTE PTR [rsi+0x0],cl
   14000980a:	push   rsp
   14000980b:	add    BYTE PTR [rbp+0x0],al
   14000980e:	push   rdx
   14000980f:	add    BYTE PTR [rdi+0x0],bl
   140009812:	push   rdx
   140009813:	add    BYTE PTR [rcx+0x0],al
   140009816:	push   rdi
   140009817:	add    BYTE PTR [rbx+0x0],al
   14000981a:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000981e:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140009823:	add    BYTE PTR [rax],al
   140009825:	add    BYTE PTR [rax],al
   140009827:	add    BYTE PTR [rax+0x0],dh
   14000982a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000982e:	data16 add BYTE PTR [rdi+0x0],bl
   140009832:	movsxd eax,DWORD PTR [rax]
   140009834:	outs   dx,DWORD PTR ds:[rsi]
   140009835:	add    BYTE PTR [rbp+0x0],dh
   140009838:	outs   dx,BYTE PTR ds:[rsi]
   140009839:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000983d:	add    BYTE PTR [rdx+0x0],dh
   140009840:	pop    rdi
   140009841:	add    BYTE PTR [rax+rax*1+0x61],ch
   140009845:	add    BYTE PTR [rdx+0x0],dh
   140009848:	add    BYTE PTR [ebp+0x0],ah
   14000984c:	pop    rdi
   14000984d:	add    BYTE PTR [rdx+0x0],dh
   140009850:	(bad)  
   140009851:	add    BYTE PTR [rdi+0x0],dh
   140009854:	movsxd eax,DWORD PTR [rax]
   140009856:	outs   dx,DWORD PTR ds:[rsi]
   140009857:	add    BYTE PTR [rbp+0x0],dh
   14000985a:	outs   dx,BYTE PTR ds:[rsi]
   14000985b:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000985f:	add    BYTE PTR [rax+0x0],dl
   140009862:	add    BYTE PTR [r10+0x0],r10b
   140009866:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000986a:	rex.XB add BYTE PTR [r15+0x0],cl
   14000986e:	push   rbp
   14000986f:	add    BYTE PTR [rsi+0x0],cl
   140009872:	push   rsp
   140009873:	add    BYTE PTR [rbp+0x0],al
   140009876:	push   rdx
   140009877:	add    BYTE PTR [rdi+0x0],bl
   14000987a:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14000987e:	push   rdx
   14000987f:	add    BYTE PTR [rdi+0x0],al
   140009882:	add    BYTE PTR [r15+0x0],r11b
   140009886:	push   rdx
   140009887:	add    BYTE PTR [rcx+0x0],al
   14000988a:	push   rdi
   14000988b:	add    BYTE PTR [rbx+0x0],al
   14000988e:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009892:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140009897:	add    BYTE PTR [rax+0x0],dh
   14000989a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000989e:	data16 add BYTE PTR [rdi+0x0],bl
   1400098a2:	movsxd eax,DWORD PTR [rax]
   1400098a4:	outs   dx,DWORD PTR ds:[rsi]
   1400098a5:	add    BYTE PTR [rbp+0x0],dh
   1400098a8:	outs   dx,BYTE PTR ds:[rsi]
   1400098a9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400098ad:	add    BYTE PTR [rdx+0x0],dh
   1400098b0:	pop    rdi
   1400098b1:	add    BYTE PTR [rdx+0x0],dh
   1400098b4:	(bad)  
   1400098b5:	add    BYTE PTR [rdi+0x0],dh
   1400098b8:	movsxd eax,DWORD PTR [rax]
   1400098ba:	outs   dx,DWORD PTR ds:[rsi]
   1400098bb:	add    BYTE PTR [rbp+0x0],dh
   1400098be:	outs   dx,BYTE PTR ds:[rsi]
   1400098bf:	add    BYTE PTR [rax+rax*1+0x5f],dh
   1400098c3:	add    BYTE PTR [rax+0x0],ch
   1400098c6:	add    BYTE PTR gs:[rax+0x0],bh
   1400098ca:	add    BYTE PTR [rax],al
   1400098cc:	add    BYTE PTR [rax],al
   1400098ce:	add    BYTE PTR [rax],al
   1400098d0:	push   rax
   1400098d1:	add    BYTE PTR [rbp+0x0],al
   1400098d4:	push   rdx
   1400098d5:	add    BYTE PTR [rsi+0x0],al
   1400098d8:	pop    rdi
   1400098d9:	add    BYTE PTR [rbx+0x0],al
   1400098dc:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   1400098e0:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   1400098e5:	add    BYTE PTR [rdx+0x0],dl
   1400098e8:	pop    rdi
   1400098e9:	add    BYTE PTR [rdx+0x0],dl
   1400098ec:	add    BYTE PTR [r15+0x0],dl
   1400098f0:	rex.XB add BYTE PTR [r15+0x0],cl
   1400098f4:	push   rbp
   1400098f5:	add    BYTE PTR [rsi+0x0],cl
   1400098f8:	push   rsp
   1400098f9:	add    BYTE PTR [rdi+0x0],bl
   1400098fc:	rex.W add BYTE PTR [rbp+0x0],al
   140009900:	pop    rax
	...
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rax+0x0],dh
   140009912:	add    BYTE PTR gs:[rdx+0x0],dh
   140009916:	data16 add BYTE PTR [rdi+0x0],bl
   14000991a:	movsxd eax,DWORD PTR [rax]
   14000991c:	outs   dx,DWORD PTR ds:[rsi]
   14000991d:	add    BYTE PTR [rbp+0x0],dh
   140009920:	outs   dx,BYTE PTR ds:[rsi]
   140009921:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009925:	add    BYTE PTR [rdx+0x0],dh
   140009928:	pop    rdi
   140009929:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000992d:	add    BYTE PTR [rdx+0x0],dh
   140009930:	add    BYTE PTR [ebp+0x0],ah
   140009934:	pop    rdi
   140009935:	add    BYTE PTR [rdx+0x0],dh
   140009938:	(bad)  
   140009939:	add    BYTE PTR [rdi+0x0],dh
   14000993c:	movsxd eax,DWORD PTR [rax]
   14000993e:	outs   dx,DWORD PTR ds:[rsi]
   14000993f:	add    BYTE PTR [rbp+0x0],dh
   140009942:	outs   dx,BYTE PTR ds:[rsi]
   140009943:	add    BYTE PTR [rax+rax*1+0x5f],dh
   140009947:	add    BYTE PTR [rax+0x0],ch
   14000994a:	add    BYTE PTR gs:[rax+0x0],bh
   14000994e:	add    BYTE PTR [rax],al
   140009950:	push   rax
   140009951:	add    BYTE PTR [rbp+0x0],al
   140009954:	push   rdx
   140009955:	add    BYTE PTR [rsi+0x0],al
   140009958:	pop    rdi
   140009959:	add    BYTE PTR [rbx+0x0],al
   14000995c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009960:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140009965:	add    BYTE PTR [rdx+0x0],dl
   140009968:	pop    rdi
   140009969:	add    BYTE PTR [rax+rax*1+0x41],cl
   14000996d:	add    BYTE PTR [rdx+0x0],dl
   140009970:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140009974:	pop    rdi
   140009975:	add    BYTE PTR [rdx+0x0],dl
   140009978:	add    BYTE PTR [r15+0x0],dl
   14000997c:	rex.XB add BYTE PTR [r15+0x0],cl
   140009980:	push   rbp
   140009981:	add    BYTE PTR [rsi+0x0],cl
   140009984:	push   rsp
   140009985:	add    BYTE PTR [rdi+0x0],bl
   140009988:	rex.W add BYTE PTR [rbp+0x0],al
   14000998c:	pop    rax
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    BYTE PTR [rax+0x0],dh
   140009992:	add    BYTE PTR gs:[rdx+0x0],dh
   140009996:	data16 add BYTE PTR [rdi+0x0],bl
   14000999a:	jae    0x14000999c
   14000999c:	(bad)  
   14000999d:	add    BYTE PTR [rbp+0x0],ch
   1400099a0:	jo     0x1400099a2
   1400099a2:	ins    BYTE PTR es:[rdi],dx
   1400099a3:	add    BYTE PTR [rbp+0x0],ah
   1400099a6:	pop    rdi
   1400099a7:	add    BYTE PTR [rsi+0x0],ah
   1400099aa:	jb     0x1400099ac
   1400099ac:	(bad)  
   1400099ad:	add    BYTE PTR [rbx+0x0],ah
   1400099b0:	je     0x1400099b2
   1400099b2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   1400099c0:	push   rax
   1400099c1:	add    BYTE PTR [rbp+0x0],al
   1400099c4:	push   rdx
   1400099c5:	add    BYTE PTR [rsi+0x0],al
   1400099c8:	pop    rdi
   1400099c9:	add    BYTE PTR [rbx+0x0],dl
   1400099cc:	add    BYTE PTR [r13+0x0],cl
   1400099d0:	push   rax
   1400099d1:	add    BYTE PTR [rax+rax*1+0x45],cl
   1400099d5:	add    BYTE PTR [rdi+0x0],bl
   1400099d8:	rex.RX add BYTE PTR [rdx+0x0],r10b
   1400099dc:	add    BYTE PTR [r11+0x0],al
   1400099e0:	push   rsp
   1400099e1:	add    BYTE PTR [rcx+0x0],cl
   1400099e4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
	...
   1400099f0:	jo     0x1400099f2
   1400099f2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400099f6:	data16 add BYTE PTR [rdi+0x0],bl
   1400099fa:	jae    0x1400099fc
   1400099fc:	(bad)  
   1400099fd:	add    BYTE PTR [rbp+0x0],ch
   140009a00:	jo     0x140009a02
   140009a02:	ins    BYTE PTR es:[rdi],dx
   140009a03:	add    BYTE PTR [rbp+0x0],ah
   140009a06:	pop    rdi
   140009a07:	add    BYTE PTR [rbx+0x0],ah
   140009a0a:	outs   dx,DWORD PTR ds:[rsi]
   140009a0b:	add    BYTE PTR [rbp+0x0],dh
   140009a0e:	outs   dx,BYTE PTR ds:[rsi]
   140009a0f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009a13:	add    BYTE PTR [rdx+0x0],dh
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	push   rax
   140009a19:	add    BYTE PTR [rbp+0x0],al
   140009a1c:	push   rdx
   140009a1d:	add    BYTE PTR [rsi+0x0],al
   140009a20:	pop    rdi
   140009a21:	add    BYTE PTR [rbx+0x0],dl
   140009a24:	add    BYTE PTR [r13+0x0],cl
   140009a28:	push   rax
   140009a29:	add    BYTE PTR [rax+rax*1+0x45],cl
   140009a2d:	add    BYTE PTR [rdi+0x0],bl
   140009a30:	rex.XB add BYTE PTR [r15+0x0],cl
   140009a34:	push   rbp
   140009a35:	add    BYTE PTR [rsi+0x0],cl
   140009a38:	push   rsp
   140009a39:	add    BYTE PTR [rbp+0x0],al
   140009a3c:	push   rdx
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    BYTE PTR [rax+0x0],dh
   140009a42:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a46:	data16 add BYTE PTR [rdi+0x0],bl
   140009a4a:	movsxd eax,DWORD PTR [rax]
   140009a4c:	outs   dx,DWORD PTR ds:[rsi]
   140009a4d:	add    BYTE PTR [rbp+0x0],dh
   140009a50:	outs   dx,BYTE PTR ds:[rsi]
   140009a51:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009a55:	add    BYTE PTR [rdx+0x0],dh
   140009a58:	pop    rdi
   140009a59:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009a5d:	add    BYTE PTR [rbp+0x0],ch
   140009a60:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a64:	pop    rdi
   140009a65:	add    BYTE PTR [rcx+0x0],ch
   140009a68:	outs   dx,BYTE PTR ds:[rsi]
   140009a69:	add    BYTE PTR [rsi+0x0],dh
   140009a6c:	add    BYTE PTR [rax],al
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	push   rax
   140009a71:	add    BYTE PTR [rbp+0x0],al
   140009a74:	push   rdx
   140009a75:	add    BYTE PTR [rsi+0x0],al
   140009a78:	pop    rdi
   140009a79:	add    BYTE PTR [rbx+0x0],al
   140009a7c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009a80:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140009a85:	add    BYTE PTR [rdx+0x0],dl
   140009a88:	pop    rdi
   140009a89:	add    BYTE PTR [rax+rax*1+0x49],dl
   140009a8d:	add    BYTE PTR [rbp+0x0],cl
   140009a90:	add    BYTE PTR [r10+0x0],r10b
   140009a94:	pop    rdi
   140009a95:	add    BYTE PTR [rcx+0x0],cl
   140009a98:	rex.WRX add BYTE PTR [rsi+0x0],r10b
   140009a9c:	add    BYTE PTR [rax],al
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	jo     0x140009aa2
   140009aa2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009aa6:	data16 add BYTE PTR [rdi+0x0],bl
   140009aaa:	jae    0x140009aac
   140009aac:	(bad)  
   140009aad:	add    BYTE PTR [rbp+0x0],ch
   140009ab0:	jo     0x140009ab2
   140009ab2:	ins    BYTE PTR es:[rdi],dx
   140009ab3:	add    BYTE PTR [rbp+0x0],ah
   140009ab6:	pop    rdi
   140009ab7:	add    BYTE PTR [rdx+0x0],ah
   140009aba:	(bad)  
   140009abb:	add    BYTE PTR [rbx+0x0],dh
   140009abe:	add    BYTE PTR gs:[rax],al
   140009ac1:	add    BYTE PTR [rax],al
   140009ac3:	add    BYTE PTR [rax],al
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    BYTE PTR [rax+0x0],dl
   140009aca:	add    BYTE PTR [r10+0x0],r10b
   140009ace:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009ad2:	push   rbx
   140009ad3:	add    BYTE PTR [rcx+0x0],al
   140009ad6:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140009ada:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140009ade:	pop    rdi
   140009adf:	add    BYTE PTR [rdx+0x0],al
   140009ae2:	add    BYTE PTR [r11+0x0],dl
   140009ae6:	add    BYTE PTR [r8],r8b
   140009ae9:	add    BYTE PTR [rax],al
   140009aeb:	add    BYTE PTR [rax],al
   140009aed:	add    BYTE PTR [rax],al
   140009aef:	add    BYTE PTR [rax+0x0],dh
   140009af2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009af6:	data16 add BYTE PTR [rdi+0x0],bl
   140009afa:	(bad)  
   140009afb:	add    BYTE PTR [rsi+0x0],dh
   140009afe:	add    BYTE PTR gs:[rdx+0x0],dh
   140009b02:	(bad)  
   140009b03:	add    BYTE PTR [rdi+0x0],ah
   140009b06:	add    BYTE PTR gs:[rdi+0x0],bl
   140009b0a:	je     0x140009b0c
   140009b0c:	imul   eax,DWORD PTR [rax],0x65006d
   140009b12:	jb     0x140009b14
   140009b14:	add    BYTE PTR [rax],al
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	push   rax
   140009b19:	add    BYTE PTR [rbp+0x0],al
   140009b1c:	push   rdx
   140009b1d:	add    BYTE PTR [rsi+0x0],al
   140009b20:	pop    rdi
   140009b21:	add    BYTE PTR [rcx+0x0],al
   140009b24:	push   rsi
   140009b25:	add    BYTE PTR [rbp+0x0],al
   140009b28:	push   rdx
   140009b29:	add    BYTE PTR [rcx+0x0],al
   140009b2c:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140009b30:	pop    rdi
   140009b31:	add    BYTE PTR [rax+rax*1+0x49],dl
   140009b35:	add    BYTE PTR [rbp+0x0],cl
   140009b38:	add    BYTE PTR [r10+0x0],r10b
   140009b3c:	add    BYTE PTR [rax],al
   140009b3e:	add    BYTE PTR [rax],al
   140009b40:	jo     0x140009b42
   140009b42:	add    BYTE PTR gs:[rdx+0x0],dh
   140009b46:	data16 add BYTE PTR [rdi+0x0],bl
   140009b4a:	(bad)  
   140009b4b:	add    BYTE PTR [rsi+0x0],dh
   140009b4e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009b52:	(bad)  
   140009b53:	add    BYTE PTR [rdi+0x0],ah
   140009b56:	add    BYTE PTR gs:[rdi+0x0],bl
   140009b5a:	(bad)  
   140009b5b:	add    BYTE PTR [rcx+0x0],ah
   140009b5e:	jae    0x140009b60
   140009b60:	add    BYTE PTR gs:[rax],al
   140009b63:	add    BYTE PTR [rax],al
   140009b65:	add    BYTE PTR [rax],al
   140009b67:	add    BYTE PTR [rax+0x0],dl
   140009b6a:	add    BYTE PTR [r10+0x0],r10b
   140009b6e:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009b72:	add    BYTE PTR [r14+0x0],dl
   140009b76:	add    BYTE PTR [r10+0x0],r10b
   140009b7a:	add    BYTE PTR [r15+0x0],al
   140009b7e:	add    BYTE PTR [r15+0x0],r11b
   140009b82:	rex.X add BYTE PTR [rcx+0x0],al
   140009b86:	push   rbx
   140009b87:	add    BYTE PTR [rbp+0x0],al
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	add    BYTE PTR [rax],al
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	jo     0x140009b92
   140009b92:	add    BYTE PTR gs:[rdx+0x0],dh
   140009b96:	data16 add BYTE PTR [rdi+0x0],bl
   140009b9a:	(bad)  
   140009b9b:	add    BYTE PTR [rsi+0x0],dh
   140009b9e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ba2:	(bad)  
   140009ba3:	add    BYTE PTR [rdi+0x0],ah
   140009ba6:	add    BYTE PTR gs:[rdi+0x0],bl
   140009baa:	(bad)  
   140009bab:	add    BYTE PTR [rbp+0x0],dh
   140009bae:	ins    BYTE PTR es:[rdi],dx
   140009baf:	add    BYTE PTR [rbx+0x0],ch
   140009bb2:	add    BYTE PTR [rax],al
   140009bb4:	add    BYTE PTR [rax],al
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	push   rax
   140009bb9:	add    BYTE PTR [rbp+0x0],al
   140009bbc:	push   rdx
   140009bbd:	add    BYTE PTR [rsi+0x0],al
   140009bc0:	pop    rdi
   140009bc1:	add    BYTE PTR [rcx+0x0],al
   140009bc4:	push   rsi
   140009bc5:	add    BYTE PTR [rbp+0x0],al
   140009bc8:	push   rdx
   140009bc9:	add    BYTE PTR [rcx+0x0],al
   140009bcc:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140009bd0:	pop    rdi
   140009bd1:	add    BYTE PTR [rdx+0x0],al
   140009bd4:	push   rbp
   140009bd5:	add    BYTE PTR [rax+rax*1+0x4b],cl
   140009bd9:	add    BYTE PTR [rax],al
   140009bdb:	add    BYTE PTR [rax],al
   140009bdd:	add    BYTE PTR [rax],al
   140009bdf:	add    BYTE PTR [rax+0x0],dh
   140009be2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009be6:	data16 add BYTE PTR [rdi+0x0],bl
   140009bea:	outs   dx,DWORD PTR ds:[rsi]
   140009beb:	add    BYTE PTR [rdx+0x0],ah
   140009bee:	push   0x0
   140009bf0:	pop    rdi
   140009bf1:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009bf5:	add    BYTE PTR [rbp+0x0],ch
   140009bf8:	add    BYTE PTR gs:[rdi+0x0],bl
   140009bfc:	je     0x140009bfe
   140009bfe:	imul   eax,DWORD PTR [rax],0x65006d
   140009c04:	jb     0x140009c06
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	push   rax
   140009c09:	add    BYTE PTR [rbp+0x0],al
   140009c0c:	push   rdx
   140009c0d:	add    BYTE PTR [rsi+0x0],al
   140009c10:	pop    rdi
   140009c11:	add    BYTE PTR [rdi+0x0],cl
   140009c14:	rex.X add BYTE PTR [rdx+0x0],cl
   140009c18:	pop    rdi
   140009c19:	add    BYTE PTR [rax+rax*1+0x49],dl
   140009c1d:	add    BYTE PTR [rbp+0x0],cl
   140009c20:	add    BYTE PTR [r15+0x0],r11b
   140009c24:	push   rsp
   140009c25:	add    BYTE PTR [rcx+0x0],cl
   140009c28:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009c2c:	push   rdx
   140009c2d:	add    BYTE PTR [rax],al
   140009c2f:	add    BYTE PTR [rax+0x0],dh
   140009c32:	add    BYTE PTR gs:[rdx+0x0],dh
   140009c36:	data16 add BYTE PTR [rdi+0x0],bl
   140009c3a:	xor    DWORD PTR [rax],eax
   140009c3c:	xor    BYTE PTR [rax],al
   140009c3e:	xor    BYTE PTR [rax],al
   140009c40:	outs   dx,BYTE PTR ds:[rsi]
   140009c41:	add    BYTE PTR [rbx+0x0],dh
   140009c44:	add    BYTE PTR gs:[rbx+0x0],ah
   140009c48:	pop    rdi
   140009c49:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009c4d:	add    BYTE PTR [rbp+0x0],ch
   140009c50:	add    BYTE PTR gs:[rdx+0x0],dh
   140009c54:	add    BYTE PTR [rax],al
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	push   rax
   140009c59:	add    BYTE PTR [rbp+0x0],al
   140009c5c:	push   rdx
   140009c5d:	add    BYTE PTR [rsi+0x0],al
   140009c60:	pop    rdi
   140009c61:	add    BYTE PTR [rcx],dh
   140009c63:	add    BYTE PTR [rax],dh
   140009c65:	add    BYTE PTR [rax],dh
   140009c67:	add    BYTE PTR [rsi+0x0],cl
   140009c6a:	push   rbx
   140009c6b:	add    BYTE PTR [rbp+0x0],al
   140009c6e:	rex.XB add BYTE PTR [r15+0x0],bl
   140009c72:	push   rsp
   140009c73:	add    BYTE PTR [rcx+0x0],cl
   140009c76:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009c7a:	push   rdx
   140009c7b:	add    BYTE PTR [rax],al
   140009c7d:	add    BYTE PTR [rax],al
   140009c7f:	add    BYTE PTR [rax+0x0],dh
   140009c82:	add    BYTE PTR gs:[rdx+0x0],dh
   140009c86:	data16 add BYTE PTR [rdi+0x0],bl
   140009c8a:	xor    DWORD PTR [rax],eax
   140009c8c:	xor    BYTE PTR [rax],al
   140009c8e:	xor    BYTE PTR [rax],al
   140009c90:	outs   dx,BYTE PTR ds:[rsi]
   140009c91:	add    BYTE PTR [rbx+0x0],dh
   140009c94:	add    BYTE PTR gs:[rbx+0x0],ah
   140009c98:	pop    rdi
   140009c99:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009c9d:	add    BYTE PTR [rbp+0x0],ch
   140009ca0:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ca4:	pop    rdi
   140009ca5:	add    BYTE PTR [rcx+0x0],ch
   140009ca8:	outs   dx,BYTE PTR ds:[rsi]
   140009ca9:	add    BYTE PTR [rsi+0x0],dh
   140009cac:	add    BYTE PTR [rax],al
   140009cae:	add    BYTE PTR [rax],al
   140009cb0:	push   rax
   140009cb1:	add    BYTE PTR [rbp+0x0],al
   140009cb4:	push   rdx
   140009cb5:	add    BYTE PTR [rsi+0x0],al
   140009cb8:	pop    rdi
   140009cb9:	add    BYTE PTR [rcx],dh
   140009cbb:	add    BYTE PTR [rax],dh
   140009cbd:	add    BYTE PTR [rax],dh
   140009cbf:	add    BYTE PTR [rsi+0x0],cl
   140009cc2:	push   rbx
   140009cc3:	add    BYTE PTR [rbp+0x0],al
   140009cc6:	rex.XB add BYTE PTR [r15+0x0],bl
   140009cca:	push   rsp
   140009ccb:	add    BYTE PTR [rcx+0x0],cl
   140009cce:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009cd2:	push   rdx
   140009cd3:	add    BYTE PTR [rdi+0x0],bl
   140009cd6:	rex.WB add BYTE PTR [r14+0x0],cl
   140009cda:	push   rsi
   140009cdb:	add    BYTE PTR [rax],al
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rax+0x0],dh
   140009ce2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ce6:	data16 add BYTE PTR [rdi+0x0],bl
   140009cea:	movsxd eax,DWORD PTR [rax]
   140009cec:	outs   dx,DWORD PTR ds:[rsi]
   140009ced:	add    BYTE PTR [rbp+0x0],dh
   140009cf0:	outs   dx,BYTE PTR ds:[rsi]
   140009cf1:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009cf5:	add    BYTE PTR [rdx+0x0],dh
   140009cf8:	pop    rdi
   140009cf9:	add    BYTE PTR [rbp+0x0],ch
   140009cfc:	jne    0x140009cfe
   140009cfe:	ins    BYTE PTR es:[rdi],dx
   140009cff:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009d03:	add    BYTE PTR [rdi+0x0],bl
   140009d06:	je     0x140009d08
   140009d08:	imul   eax,DWORD PTR [rax],0x65006d
   140009d0e:	jb     0x140009d10
	...
   140009d18:	push   rax
   140009d19:	add    BYTE PTR [rbp+0x0],al
   140009d1c:	push   rdx
   140009d1d:	add    BYTE PTR [rsi+0x0],al
   140009d20:	pop    rdi
   140009d21:	add    BYTE PTR [rbx+0x0],al
   140009d24:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009d28:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140009d2d:	add    BYTE PTR [rdx+0x0],dl
   140009d30:	pop    rdi
   140009d31:	add    BYTE PTR [rbp+0x0],cl
   140009d34:	push   rbp
   140009d35:	add    BYTE PTR [rax+rax*1+0x54],cl
   140009d39:	add    BYTE PTR [rcx+0x0],cl
   140009d3c:	pop    rdi
   140009d3d:	add    BYTE PTR [rax+rax*1+0x49],dl
   140009d41:	add    BYTE PTR [rbp+0x0],cl
   140009d44:	add    BYTE PTR [r10+0x0],r10b
	...
   140009d50:	jo     0x140009d52
   140009d52:	add    BYTE PTR gs:[rdx+0x0],dh
   140009d56:	data16 add BYTE PTR [rdi+0x0],bl
   140009d5a:	movsxd eax,DWORD PTR [rax]
   140009d5c:	outs   dx,DWORD PTR ds:[rsi]
   140009d5d:	add    BYTE PTR [rbp+0x0],dh
   140009d60:	outs   dx,BYTE PTR ds:[rsi]
   140009d61:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009d65:	add    BYTE PTR [rdx+0x0],dh
   140009d68:	pop    rdi
   140009d69:	add    BYTE PTR [rbp+0x0],ch
   140009d6c:	jne    0x140009d6e
   140009d6e:	ins    BYTE PTR es:[rdi],dx
   140009d6f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009d73:	add    BYTE PTR [rdi+0x0],bl
   140009d76:	je     0x140009d78
   140009d78:	imul   eax,DWORD PTR [rax],0x65006d
   140009d7e:	jb     0x140009d80
   140009d80:	pop    rdi
   140009d81:	add    BYTE PTR [rcx+0x0],ch
   140009d84:	outs   dx,BYTE PTR ds:[rsi]
   140009d85:	add    BYTE PTR [rsi+0x0],dh
	...
   140009d90:	push   rax
   140009d91:	add    BYTE PTR [rbp+0x0],al
   140009d94:	push   rdx
   140009d95:	add    BYTE PTR [rsi+0x0],al
   140009d98:	pop    rdi
   140009d99:	add    BYTE PTR [rbx+0x0],al
   140009d9c:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140009da0:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140009da5:	add    BYTE PTR [rdx+0x0],dl
   140009da8:	pop    rdi
   140009da9:	add    BYTE PTR [rbp+0x0],cl
   140009dac:	push   rbp
   140009dad:	add    BYTE PTR [rax+rax*1+0x54],cl
   140009db1:	add    BYTE PTR [rcx+0x0],cl
   140009db4:	pop    rdi
   140009db5:	add    BYTE PTR [rax+rax*1+0x49],dl
   140009db9:	add    BYTE PTR [rbp+0x0],cl
   140009dbc:	add    BYTE PTR [r10+0x0],r10b
   140009dc0:	pop    rdi
   140009dc1:	add    BYTE PTR [rcx+0x0],cl
   140009dc4:	rex.WRX add BYTE PTR [rsi+0x0],r10b
	...
   140009dd0:	jo     0x140009dd2
   140009dd2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009dd6:	data16 add BYTE PTR [rdi+0x0],bl
   140009dda:	movsxd eax,DWORD PTR [rax]
   140009ddc:	outs   dx,DWORD PTR ds:[rsi]
   140009ddd:	add    BYTE PTR [rbp+0x0],dh
   140009de0:	outs   dx,BYTE PTR ds:[rsi]
   140009de1:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009de5:	add    BYTE PTR [rdx+0x0],dh
   140009de8:	pop    rdi
   140009de9:	add    BYTE PTR [rbp+0x0],ch
   140009dec:	jne    0x140009dee
   140009dee:	ins    BYTE PTR es:[rdi],dx
   140009def:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009df3:	add    BYTE PTR [rdi+0x0],bl
   140009df6:	(bad)  
   140009df7:	add    BYTE PTR [rcx+0x0],ah
   140009dfa:	jae    0x140009dfc
   140009dfc:	add    BYTE PTR gs:[rax],al
   140009dff:	add    BYTE PTR [rax+0x0],dl
   140009e02:	add    BYTE PTR [r10+0x0],r10b
   140009e06:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009e0a:	rex.XB add BYTE PTR [r15+0x0],cl
   140009e0e:	push   rbp
   140009e0f:	add    BYTE PTR [rsi+0x0],cl
   140009e12:	push   rsp
   140009e13:	add    BYTE PTR [rbp+0x0],al
   140009e16:	push   rdx
   140009e17:	add    BYTE PTR [rdi+0x0],bl
   140009e1a:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140009e1e:	rex.WR add BYTE PTR [rax+rax*1+0x49],r10b
   140009e23:	add    BYTE PTR [rdi+0x0],bl
   140009e26:	rex.X add BYTE PTR [rcx+0x0],al
   140009e2a:	push   rbx
   140009e2b:	add    BYTE PTR [rbp+0x0],al
   140009e2e:	add    BYTE PTR [rax],al
   140009e30:	jo     0x140009e32
   140009e32:	add    BYTE PTR gs:[rdx+0x0],dh
   140009e36:	data16 add BYTE PTR [rdi+0x0],bl
   140009e3a:	xor    DWORD PTR [rax],eax
   140009e3c:	xor    BYTE PTR [rax],al
   140009e3e:	xor    BYTE PTR [rax],al
   140009e40:	outs   dx,BYTE PTR ds:[rsi]
   140009e41:	add    BYTE PTR [rbx+0x0],dh
   140009e44:	add    BYTE PTR gs:[rbx+0x0],ah
   140009e48:	pop    rdi
   140009e49:	add    BYTE PTR [rbp+0x0],ch
   140009e4c:	jne    0x140009e4e
   140009e4e:	ins    BYTE PTR es:[rdi],dx
   140009e4f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009e53:	add    BYTE PTR [rdi+0x0],bl
   140009e56:	je     0x140009e58
   140009e58:	imul   eax,DWORD PTR [rax],0x65006d
   140009e5e:	jb     0x140009e60
	...
   140009e68:	push   rax
   140009e69:	add    BYTE PTR [rbp+0x0],al
   140009e6c:	push   rdx
   140009e6d:	add    BYTE PTR [rsi+0x0],al
   140009e70:	pop    rdi
   140009e71:	add    BYTE PTR [rcx],dh
   140009e73:	add    BYTE PTR [rax],dh
   140009e75:	add    BYTE PTR [rax],dh
   140009e77:	add    BYTE PTR [rsi+0x0],cl
   140009e7a:	push   rbx
   140009e7b:	add    BYTE PTR [rbp+0x0],al
   140009e7e:	rex.XB add BYTE PTR [r15+0x0],bl
   140009e82:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140009e86:	rex.WR add BYTE PTR [rax+rax*1+0x49],r10b
   140009e8b:	add    BYTE PTR [rdi+0x0],bl
   140009e8e:	push   rsp
   140009e8f:	add    BYTE PTR [rcx+0x0],cl
   140009e92:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009e96:	push   rdx
	...
   140009e9f:	add    BYTE PTR [rax+0x0],dh
   140009ea2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ea6:	data16 add BYTE PTR [rdi+0x0],bl
   140009eaa:	xor    DWORD PTR [rax],eax
   140009eac:	xor    BYTE PTR [rax],al
   140009eae:	xor    BYTE PTR [rax],al
   140009eb0:	outs   dx,BYTE PTR ds:[rsi]
   140009eb1:	add    BYTE PTR [rbx+0x0],dh
   140009eb4:	add    BYTE PTR gs:[rbx+0x0],ah
   140009eb8:	pop    rdi
   140009eb9:	add    BYTE PTR [rbp+0x0],ch
   140009ebc:	jne    0x140009ebe
   140009ebe:	ins    BYTE PTR es:[rdi],dx
   140009ebf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009ec3:	add    BYTE PTR [rdi+0x0],bl
   140009ec6:	je     0x140009ec8
   140009ec8:	imul   eax,DWORD PTR [rax],0x65006d
   140009ece:	jb     0x140009ed0
   140009ed0:	pop    rdi
   140009ed1:	add    BYTE PTR [rcx+0x0],ch
   140009ed4:	outs   dx,BYTE PTR ds:[rsi]
   140009ed5:	add    BYTE PTR [rsi+0x0],dh
	...
   140009ee0:	push   rax
   140009ee1:	add    BYTE PTR [rbp+0x0],al
   140009ee4:	push   rdx
   140009ee5:	add    BYTE PTR [rsi+0x0],al
   140009ee8:	pop    rdi
   140009ee9:	add    BYTE PTR [rcx],dh
   140009eeb:	add    BYTE PTR [rax],dh
   140009eed:	add    BYTE PTR [rax],dh
   140009eef:	add    BYTE PTR [rsi+0x0],cl
   140009ef2:	push   rbx
   140009ef3:	add    BYTE PTR [rbp+0x0],al
   140009ef6:	rex.XB add BYTE PTR [r15+0x0],bl
   140009efa:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140009efe:	rex.WR add BYTE PTR [rax+rax*1+0x49],r10b
   140009f03:	add    BYTE PTR [rdi+0x0],bl
   140009f06:	push   rsp
   140009f07:	add    BYTE PTR [rcx+0x0],cl
   140009f0a:	rex.WRB add BYTE PTR [r13+0x0],r8b
   140009f0e:	push   rdx
   140009f0f:	add    BYTE PTR [rdi+0x0],bl
   140009f12:	rex.WB add BYTE PTR [r14+0x0],cl
   140009f16:	push   rsi
	...
   140009f1f:	add    BYTE PTR [rax+0x0],dh
   140009f22:	add    BYTE PTR gs:[rdx+0x0],dh
   140009f26:	data16 add BYTE PTR [rdi+0x0],bl
   140009f2a:	jb     0x140009f2c
   140009f2c:	(bad)  
   140009f2d:	add    BYTE PTR [rdi+0x0],dh
   140009f30:	pop    rdi
   140009f31:	add    BYTE PTR [rsi+0x0],ah
   140009f34:	jb     0x140009f36
   140009f36:	(bad)  
   140009f37:	add    BYTE PTR [rbx+0x0],ah
   140009f3a:	je     0x140009f3c
   140009f3c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009f42:	add    BYTE PTR [rax],al
   140009f44:	add    BYTE PTR [rax],al
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	push   rax
   140009f49:	add    BYTE PTR [rbp+0x0],al
   140009f4c:	push   rdx
   140009f4d:	add    BYTE PTR [rsi+0x0],al
   140009f50:	pop    rdi
   140009f51:	add    BYTE PTR [rdx+0x0],dl
   140009f54:	add    BYTE PTR [r15+0x0],dl
   140009f58:	pop    rdi
   140009f59:	add    BYTE PTR [rsi+0x0],al
   140009f5c:	push   rdx
   140009f5d:	add    BYTE PTR [rcx+0x0],al
   140009f60:	add    BYTE PTR [r8+r8*1+0x49],dl
   140009f65:	add    BYTE PTR [rdi+0x0],cl
   140009f68:	rex.WRX add BYTE PTR [rax],r8b
   140009f6b:	add    BYTE PTR [rax],al
   140009f6d:	add    BYTE PTR [rax],al
   140009f6f:	add    BYTE PTR [rax+0x0],dh
   140009f72:	add    BYTE PTR gs:[rdx+0x0],dh
   140009f76:	data16 add BYTE PTR [rdi+0x0],bl
   140009f7a:	ins    BYTE PTR es:[rdi],dx
   140009f7b:	add    BYTE PTR [rcx+0x0],ah
   140009f7e:	jb     0x140009f80
   140009f80:	add    BYTE PTR [ebp+0x0],ah
   140009f84:	pop    rdi
   140009f85:	add    BYTE PTR [rdx+0x0],dh
   140009f88:	(bad)  
   140009f89:	add    BYTE PTR [rdi+0x0],dh
   140009f8c:	pop    rdi
   140009f8d:	add    BYTE PTR [rsi+0x0],ah
   140009f90:	jb     0x140009f92
   140009f92:	(bad)  
   140009f93:	add    BYTE PTR [rbx+0x0],ah
   140009f96:	je     0x140009f98
   140009f98:	imul   eax,DWORD PTR [rax],0x6e006f
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	push   rax
   140009fa1:	add    BYTE PTR [rbp+0x0],al
   140009fa4:	push   rdx
   140009fa5:	add    BYTE PTR [rsi+0x0],al
   140009fa8:	pop    rdi
   140009fa9:	add    BYTE PTR [rax+rax*1+0x41],cl
   140009fad:	add    BYTE PTR [rdx+0x0],dl
   140009fb0:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140009fb4:	pop    rdi
   140009fb5:	add    BYTE PTR [rdx+0x0],dl
   140009fb8:	add    BYTE PTR [r15+0x0],dl
   140009fbc:	pop    rdi
   140009fbd:	add    BYTE PTR [rsi+0x0],al
   140009fc0:	push   rdx
   140009fc1:	add    BYTE PTR [rcx+0x0],al
   140009fc4:	add    BYTE PTR [r8+r8*1+0x49],dl
   140009fc9:	add    BYTE PTR [rdi+0x0],cl
   140009fcc:	rex.WRX add BYTE PTR [rax],r8b
   140009fcf:	add    BYTE PTR [rax+0x0],dh
   140009fd2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009fd6:	data16 add BYTE PTR [rdi+0x0],bl
   140009fda:	jb     0x140009fdc
   140009fdc:	(bad)  
   140009fdd:	add    BYTE PTR [rdi+0x0],dh
   140009fe0:	pop    rdi
   140009fe1:	add    BYTE PTR [rdx+0x0],ah
   140009fe4:	(bad)  
   140009fe5:	add    BYTE PTR [rbx+0x0],dh
   140009fe8:	add    BYTE PTR gs:[rax],al
   140009feb:	add    BYTE PTR [rax],al
   140009fed:	add    BYTE PTR [rax],al
   140009fef:	add    BYTE PTR [rax+0x0],dl
   140009ff2:	add    BYTE PTR [r10+0x0],r10b
   140009ff6:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009ffa:	push   rdx
   140009ffb:	add    BYTE PTR [rcx+0x0],al
   140009ffe:	push   rdi
   140009fff:	add    BYTE PTR [rdi+0x0],bl
   14000a002:	rex.X add BYTE PTR [rcx+0x0],al
   14000a006:	push   rbx
   14000a007:	add    BYTE PTR [rbp+0x0],al
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	jo     0x14000a012
   14000a012:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a016:	data16 add BYTE PTR [rdi+0x0],bl
   14000a01a:	ins    BYTE PTR es:[rdi],dx
   14000a01b:	add    BYTE PTR [rcx+0x0],ah
   14000a01e:	jb     0x14000a020
   14000a020:	add    BYTE PTR [ebp+0x0],ah
   14000a024:	pop    rdi
   14000a025:	add    BYTE PTR [rdx+0x0],dh
   14000a028:	(bad)  
   14000a029:	add    BYTE PTR [rdi+0x0],dh
   14000a02c:	pop    rdi
   14000a02d:	add    BYTE PTR [rdx+0x0],ah
   14000a030:	(bad)  
   14000a031:	add    BYTE PTR [rbx+0x0],dh
   14000a034:	add    BYTE PTR gs:[rax],al
   14000a037:	add    BYTE PTR [rax+0x0],dl
   14000a03a:	add    BYTE PTR [r10+0x0],r10b
   14000a03e:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000a042:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14000a046:	push   rdx
   14000a047:	add    BYTE PTR [rdi+0x0],al
   14000a04a:	add    BYTE PTR [r15+0x0],r11b
   14000a04e:	push   rdx
   14000a04f:	add    BYTE PTR [rcx+0x0],al
   14000a052:	push   rdi
   14000a053:	add    BYTE PTR [rdi+0x0],bl
   14000a056:	rex.X add BYTE PTR [rcx+0x0],al
   14000a05a:	push   rbx
   14000a05b:	add    BYTE PTR [rbp+0x0],al
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	jo     0x14000a062
   14000a062:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a066:	data16 add BYTE PTR [rdi+0x0],bl
   14000a06a:	add    BYTE PTR gs:[rax+rax*1+0x61],ch
   14000a06f:	add    BYTE PTR [rax+0x0],dh
   14000a072:	jae    0x14000a074
   14000a074:	add    BYTE PTR gs:[rax+rax*1+0x5f],ah
   14000a079:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a07d:	add    BYTE PTR [rbp+0x0],ch
   14000a080:	add    BYTE PTR gs:[rax],al
   14000a083:	add    BYTE PTR [rax],al
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rax+0x0],dl
   14000a08a:	add    BYTE PTR [r10+0x0],r10b
   14000a08e:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000a092:	add    BYTE PTR [r8+rax*1+0x41],r9b
   14000a097:	add    BYTE PTR [rax+0x0],dl
   14000a09a:	push   rbx
   14000a09b:	add    BYTE PTR [rbp+0x0],al
   14000a09e:	add    BYTE PTR [rdi+0x0],r11b
   14000a0a2:	push   rsp
   14000a0a3:	add    BYTE PTR [rcx+0x0],cl
   14000a0a6:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	jo     0x14000a0b2
   14000a0b2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a0b6:	data16 add BYTE PTR [rdi+0x0],bl
   14000a0ba:	movsxd eax,DWORD PTR [rax]
   14000a0bc:	outs   dx,DWORD PTR ds:[rsi]
   14000a0bd:	add    BYTE PTR [rbp+0x0],dh
   14000a0c0:	outs   dx,BYTE PTR ds:[rsi]
   14000a0c1:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a0c5:	add    BYTE PTR [rdx+0x0],dh
   14000a0c8:	pop    rdi
   14000a0c9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a0cd:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000a0d1:	add    BYTE PTR [rcx+0x0],ah
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	push   rax
   14000a0d9:	add    BYTE PTR [rbp+0x0],al
   14000a0dc:	push   rdx
   14000a0dd:	add    BYTE PTR [rsi+0x0],al
   14000a0e0:	pop    rdi
   14000a0e1:	add    BYTE PTR [rbx+0x0],al
   14000a0e4:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000a0e8:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14000a0ed:	add    BYTE PTR [rdx+0x0],dl
   14000a0f0:	pop    rdi
   14000a0f1:	add    BYTE PTR [rax+rax*1+0x45],al
   14000a0f5:	add    BYTE PTR [rax+rax*1+0x54],cl
   14000a0f9:	add    BYTE PTR [rcx+0x0],al
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	jo     0x14000a102
   14000a102:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a106:	data16 add BYTE PTR [rdi+0x0],bl
   14000a10a:	movsxd eax,DWORD PTR [rax]
   14000a10c:	outs   dx,DWORD PTR ds:[rsi]
   14000a10d:	add    BYTE PTR [rbp+0x0],dh
   14000a110:	outs   dx,BYTE PTR ds:[rsi]
   14000a111:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a115:	add    BYTE PTR [rdx+0x0],dh
   14000a118:	pop    rdi
   14000a119:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000a11d:	add    BYTE PTR [rdx+0x0],dh
   14000a120:	add    BYTE PTR [ebp+0x0],ah
   14000a124:	pop    rdi
   14000a125:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a129:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000a12d:	add    BYTE PTR [rcx+0x0],ah
	...
   14000a138:	push   rax
   14000a139:	add    BYTE PTR [rbp+0x0],al
   14000a13c:	push   rdx
   14000a13d:	add    BYTE PTR [rsi+0x0],al
   14000a140:	pop    rdi
   14000a141:	add    BYTE PTR [rbx+0x0],al
   14000a144:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000a148:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14000a14d:	add    BYTE PTR [rdx+0x0],dl
   14000a150:	pop    rdi
   14000a151:	add    BYTE PTR [rax+rax*1+0x41],cl
   14000a155:	add    BYTE PTR [rdx+0x0],dl
   14000a158:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000a15c:	pop    rdi
   14000a15d:	add    BYTE PTR [rax+rax*1+0x45],al
   14000a161:	add    BYTE PTR [rax+rax*1+0x54],cl
   14000a165:	add    BYTE PTR [rcx+0x0],al
	...
   14000a170:	jo     0x14000a172
   14000a172:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a176:	data16 add BYTE PTR [rdi+0x0],bl
   14000a17a:	jo     0x14000a17c
   14000a17c:	jb     0x14000a17e
   14000a17e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a182:	imul   eax,DWORD PTR [rax],0x690073
   14000a188:	outs   dx,DWORD PTR ds:[rsi]
   14000a189:	add    BYTE PTR [rsi+0x0],ch
   14000a18c:	pop    rdi
   14000a18d:	add    BYTE PTR [rbx+0x0],dh
   14000a190:	jns    0x14000a192
   14000a192:	jae    0x14000a194
   14000a194:	je     0x14000a196
   14000a196:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a19a:	pop    rdi
   14000a19b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a19f:	add    BYTE PTR [rbp+0x0],ch
   14000a1a2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	push   rax
   14000a1a9:	add    BYTE PTR [rbp+0x0],al
   14000a1ac:	push   rdx
   14000a1ad:	add    BYTE PTR [rsi+0x0],al
   14000a1b0:	pop    rdi
   14000a1b1:	add    BYTE PTR [rax+0x0],dl
   14000a1b4:	push   rdx
   14000a1b5:	add    BYTE PTR [rbp+0x0],al
   14000a1b8:	rex.XB add BYTE PTR [r9+0x0],cl
   14000a1bc:	push   rbx
   14000a1bd:	add    BYTE PTR [rcx+0x0],cl
   14000a1c0:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000a1c4:	pop    rdi
   14000a1c5:	add    BYTE PTR [rbx+0x0],dl
   14000a1c8:	pop    rcx
   14000a1c9:	add    BYTE PTR [rbx+0x0],dl
   14000a1cc:	push   rsp
   14000a1cd:	add    BYTE PTR [rbp+0x0],al
   14000a1d0:	rex.WRB add BYTE PTR [r15+0x0],r11b
   14000a1d4:	push   rsp
   14000a1d5:	add    BYTE PTR [rcx+0x0],cl
   14000a1d8:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000a1dc:	push   rdx
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rax+0x0],dh
   14000a1e2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a1e6:	data16 add BYTE PTR [rdi+0x0],bl
   14000a1ea:	jo     0x14000a1ec
   14000a1ec:	jb     0x14000a1ee
   14000a1ee:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a1f2:	imul   eax,DWORD PTR [rax],0x690073
   14000a1f8:	outs   dx,DWORD PTR ds:[rsi]
   14000a1f9:	add    BYTE PTR [rsi+0x0],ch
   14000a1fc:	pop    rdi
   14000a1fd:	add    BYTE PTR [rcx],dh
   14000a1ff:	add    BYTE PTR [rax],dh
   14000a201:	add    BYTE PTR [rax],dh
   14000a203:	add    BYTE PTR [rsi+0x0],ch
   14000a206:	jae    0x14000a208
   14000a208:	pop    rdi
   14000a209:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a20d:	add    BYTE PTR [rbp+0x0],ch
   14000a210:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a214:	add    BYTE PTR [rax],al
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	push   rax
   14000a219:	add    BYTE PTR [rbp+0x0],al
   14000a21c:	push   rdx
   14000a21d:	add    BYTE PTR [rsi+0x0],al
   14000a220:	pop    rdi
   14000a221:	add    BYTE PTR [rax+0x0],dl
   14000a224:	push   rdx
   14000a225:	add    BYTE PTR [rbp+0x0],al
   14000a228:	rex.XB add BYTE PTR [r9+0x0],cl
   14000a22c:	push   rbx
   14000a22d:	add    BYTE PTR [rcx+0x0],cl
   14000a230:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000a234:	pop    rdi
   14000a235:	add    BYTE PTR [rcx],dh
   14000a237:	add    BYTE PTR [rax],dh
   14000a239:	add    BYTE PTR [rax],dh
   14000a23b:	add    BYTE PTR [rsi+0x0],cl
   14000a23e:	push   rbx
   14000a23f:	add    BYTE PTR [rdi+0x0],bl
   14000a242:	push   rsp
   14000a243:	add    BYTE PTR [rcx+0x0],cl
   14000a246:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000a24a:	push   rdx
   14000a24b:	add    BYTE PTR [rax],al
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rax+0x0],dh
   14000a252:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a256:	data16 add BYTE PTR [rdi+0x0],bl
   14000a25a:	jo     0x14000a25c
   14000a25c:	jb     0x14000a25e
   14000a25e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a262:	imul   eax,DWORD PTR [rax],0x690073
   14000a268:	outs   dx,DWORD PTR ds:[rsi]
   14000a269:	add    BYTE PTR [rsi+0x0],ch
   14000a26c:	pop    rdi
   14000a26d:	add    BYTE PTR [rdi+0x0],ch
   14000a270:	(bad)  
   14000a271:	add    BYTE PTR [rdx+0x0],ch
   14000a274:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a278:	je     0x14000a27a
   14000a27a:	pop    rdi
   14000a27b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a27f:	add    BYTE PTR [rbp+0x0],ch
   14000a282:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	push   rax
   14000a289:	add    BYTE PTR [rbp+0x0],al
   14000a28c:	push   rdx
   14000a28d:	add    BYTE PTR [rsi+0x0],al
   14000a290:	pop    rdi
   14000a291:	add    BYTE PTR [rax+0x0],dl
   14000a294:	push   rdx
   14000a295:	add    BYTE PTR [rbp+0x0],al
   14000a298:	rex.XB add BYTE PTR [r9+0x0],cl
   14000a29c:	push   rbx
   14000a29d:	add    BYTE PTR [rcx+0x0],cl
   14000a2a0:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000a2a4:	pop    rdi
   14000a2a5:	add    BYTE PTR [rdi+0x0],cl
   14000a2a8:	rex.X add BYTE PTR [rdx+0x0],cl
   14000a2ac:	add    BYTE PTR [r11+0x0],r8b
   14000a2b0:	push   rsp
   14000a2b1:	add    BYTE PTR [rdi+0x0],bl
   14000a2b4:	push   rsp
   14000a2b5:	add    BYTE PTR [rcx+0x0],cl
   14000a2b8:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000a2bc:	push   rdx
   14000a2bd:	add    BYTE PTR [rax],al
   14000a2bf:	add    BYTE PTR [rbx+0x0],ah
   14000a2c2:	outs   dx,DWORD PTR ds:[rsi]
   14000a2c3:	add    BYTE PTR [rbp+0x0],ch
   14000a2c6:	jo     0x14000a2c8
   14000a2c8:	outs   dx,DWORD PTR ds:[rsi]
   14000a2c9:	add    BYTE PTR [rbx+0x0],dh
   14000a2cc:	imul   eax,DWORD PTR [rax],0x650074
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	push   rax
   14000a2d9:	add    BYTE PTR [rbp+0x0],al
   14000a2dc:	push   rdx
   14000a2dd:	add    BYTE PTR [rsi+0x0],al
   14000a2e0:	pop    rdi
   14000a2e1:	add    BYTE PTR [rbx+0x0],al
   14000a2e4:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000a2e8:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   14000a2ed:	add    BYTE PTR [rdx+0x0],dl
   14000a2f0:	pop    rdi
   14000a2f1:	add    BYTE PTR [rbx+0x0],al
   14000a2f4:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000a2f8:	push   rax
   14000a2f9:	add    BYTE PTR [rdi+0x0],cl
   14000a2fc:	push   rbx
   14000a2fd:	add    BYTE PTR [rcx+0x0],cl
   14000a300:	push   rsp
   14000a301:	add    BYTE PTR [rbp+0x0],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	and    al,0x0
   14000a30a:	sub    BYTE PTR [rax],al
   14000a30c:	jae    0x14000a30e
   14000a30e:	je     0x14000a310
   14000a310:	jb     0x14000a312
   14000a312:	imul   eax,DWORD PTR [rax],0x67006e
   14000a318:	add    BYTE PTR cs:[rax],al
   14000a31b:	add    BYTE PTR [rax],al
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    BYTE PTR [rax-0x6f],dl
   14000a322:	add    BYTE PTR [rax+0x1],al
   14000a325:	add    BYTE PTR [rax],al
   14000a327:	add    BYTE PTR [rax-0x6f],bl
   14000a32a:	add    BYTE PTR [rax+0x1],al
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rcx],al
   14000a331:	add    BYTE PTR [rax],al
   14000a333:	add    BYTE PTR [rax],al
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    BYTE PTR [rax+0x1400091],cl
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    BYTE PTR [rax+0x1400091],dl
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	add    BYTE PTR [rdx],al
   14000a349:	add    BYTE PTR [rax],al
   14000a34b:	add    BYTE PTR [rax],al
   14000a34d:	add    BYTE PTR [rax],al
   14000a34f:	add    BYTE PTR [rax+0x1400091],bh
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    al,al
   14000a359:	xchg   ecx,eax
   14000a35a:	add    BYTE PTR [rax+0x1],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rax+rax*1],al
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	call   0x14140a3fe
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    al,dh
   14000a371:	xchg   ecx,eax
   14000a372:	add    BYTE PTR [rax+0x1],al
   14000a375:	add    BYTE PTR [rax],al
   14000a377:	add    BYTE PTR [rbx],al
   14000a379:	add    BYTE PTR [rax],al
   14000a37b:	add    BYTE PTR [rax],al
   14000a37d:	add    BYTE PTR [rax],al
   14000a37f:	add    BYTE PTR [rax],bl
   14000a381:	xchg   edx,eax
   14000a382:	add    BYTE PTR [rax+0x1],al
   14000a385:	add    BYTE PTR [rax],al
   14000a387:	add    BYTE PTR [rax],dh
   14000a389:	xchg   edx,eax
   14000a38a:	add    BYTE PTR [rax+0x1],al
	...
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    al,cl
   14000a3a1:	nop
   14000a3a2:	add    BYTE PTR [rax+0x1],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    al,ah
   14000a3a9:	nop
   14000a3aa:	add    BYTE PTR [rax+0x1],al
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000a3b3:	add    BYTE PTR [rax],al
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	add    BYTE PTR [rax],cl
   14000a3b9:	xchg   ecx,eax
   14000a3ba:	add    BYTE PTR [rax+0x1],al
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    BYTE PTR [rax],ah
   14000a3c1:	xchg   ecx,eax
   14000a3c2:	add    BYTE PTR [rax+0x1],al
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    al,cl
   14000a3c9:	add    BYTE PTR [rax],al
   14000a3cb:	add    BYTE PTR [rax],al
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	add    BYTE PTR [rax],cl
   14000a3d1:	mov    es,WORD PTR [rax]
   14000a3d3:	rex add DWORD PTR [rax],eax
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	sbb    BYTE PTR [rsi+0x14000],cl
	...
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	and    BYTE PTR [rsi+0x14000],cl
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	xor    BYTE PTR [rsi+0x14000],cl
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	add    DWORD PTR [rax],eax
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	sbb    BYTE PTR [rax+rax*1+0x140],dl
   14000a407:	add    BYTE PTR [rax-0x6c],cl
   14000a40a:	add    BYTE PTR [rax+0x1],al
   14000a40d:	add    BYTE PTR [rax],al
   14000a40f:	add    BYTE PTR [rax],al
   14000a411:	add    al,0x41
   14000a413:	adc    BYTE PTR [rax],al
   14000a415:	add    BYTE PTR [rax],al
   14000a417:	add    BYTE PTR [rax-0x6c],bh
   14000a41a:	add    BYTE PTR [rax+0x1],al
   14000a41d:	add    BYTE PTR [rax],al
   14000a41f:	add    BYTE PTR [rax+0x1400094],ah
   14000a425:	add    BYTE PTR [rax],al
   14000a427:	add    BYTE PTR [rax],al
   14000a429:	add    eax,0x2041
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	enter  0x94,0x40
   14000a434:	add    DWORD PTR [rax],eax
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	add    BYTE PTR [rbp+0x14000],dl
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	add    BYTE PTR [rax*2+0x0],al
   14000a447:	add    BYTE PTR [rax-0x6b],al
   14000a44a:	add    BYTE PTR [rax+0x1],al
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rax+0x1400095],dl
   14000a455:	add    BYTE PTR [rax],al
   14000a457:	add    BYTE PTR [rax],al
   14000a459:	add    eax,0x45
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	loopne 0x14000a3f7
   14000a462:	add    BYTE PTR [rax+0x1],al
   14000a465:	add    BYTE PTR [rax],al
   14000a467:	add    BYTE PTR [rax],dh
   14000a469:	xchg   esi,eax
   14000a46a:	add    BYTE PTR [rax+0x1],al
   14000a46d:	add    BYTE PTR [rax],al
   14000a46f:	add    BYTE PTR [rax],al
   14000a471:	add    eax,0x55
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	adc    BYTE PTR [rsi+0x14000],0x0
   14000a47f:	add    al,dl
   14000a481:	xchg   esi,eax
   14000a482:	add    BYTE PTR [rax+0x1],al
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rax],al
   14000a489:	add    eax,0x65
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	sbb    BYTE PTR [rdi+0x14000],dl
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	xchg   rdi,rax
   14000a49a:	add    BYTE PTR [rax+0x1],al
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rax],al
   14000a4a1:	add    eax,0x1041
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	js     0x14000a441
   14000a4aa:	add    BYTE PTR [rax+0x1],al
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    BYTE PTR [rax+0x1400097],ah
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    BYTE PTR [rax],al
   14000a4b9:	or     eax,DWORD PTR [rax]
   14000a4bb:	add    BYTE PTR [rax],al
   14000a4bd:	add    BYTE PTR [rax],al
   14000a4bf:	add    al,cl
   14000a4c1:	xchg   edi,eax
   14000a4c2:	add    BYTE PTR [rax+0x1],al
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    al,bh
   14000a4c9:	xchg   edi,eax
   14000a4ca:	add    BYTE PTR [rax+0x1],al
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    BYTE PTR [rax],al
   14000a4d1:	add    BYTE PTR [rcx],al
   14000a4d3:	add    BYTE PTR [rax],al
   14000a4d5:	add    BYTE PTR [rax],al
   14000a4d7:	add    BYTE PTR [rax],ch
   14000a4d9:	cwde   
   14000a4da:	add    BYTE PTR [rax+0x1],al
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rax-0x68],ah
   14000a4e2:	add    BYTE PTR [rax+0x1],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    BYTE PTR [rax],al
   14000a4e9:	add    DWORD PTR [rcx],eax
   14000a4eb:	add    BYTE PTR [rax],al
   14000a4ed:	add    BYTE PTR [rax],al
   14000a4ef:	add    BYTE PTR [rax+0x1400098],bl
   14000a4f5:	add    BYTE PTR [rax],al
   14000a4f7:	add    al,dl
   14000a4f9:	cwde   
   14000a4fa:	add    BYTE PTR [rax+0x1],al
	...
   14000a505:	add    BYTE PTR [rax],al
   14000a507:	add    BYTE PTR [rax],dl
   14000a509:	cdq    
   14000a50a:	add    BYTE PTR [rax+0x1],al
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    BYTE PTR [rax-0x67],dl
   14000a512:	add    BYTE PTR [rax+0x1],al
   14000a515:	add    BYTE PTR [rax],al
   14000a517:	add    BYTE PTR [rax],al
   14000a519:	add    DWORD PTR [rax],eax
   14000a51b:	add    BYTE PTR [rax],al
   14000a51d:	add    BYTE PTR [rax],al
   14000a51f:	add    BYTE PTR [rax+0x1400099],dl
   14000a525:	add    BYTE PTR [rax],al
   14000a527:	add    al,al
   14000a529:	cdq    
   14000a52a:	add    BYTE PTR [rax+0x1],al
   14000a52d:	add    BYTE PTR [rax],al
   14000a52f:	add    BYTE PTR [rax],al
   14000a531:	add    al,0xc2
   14000a533:	and    BYTE PTR [rax],al
   14000a535:	add    BYTE PTR [rax],al
   14000a537:	add    al,dh
   14000a539:	cdq    
   14000a53a:	add    BYTE PTR [rax+0x1],al
   14000a53d:	add    BYTE PTR [rax],al
   14000a53f:	add    BYTE PTR [rax],bl
   14000a541:	(bad)  
   14000a542:	add    BYTE PTR [rax+0x1],al
   14000a545:	add    BYTE PTR [rax],al
   14000a547:	add    BYTE PTR [rax],al
   14000a549:	add    al,0x41
   14000a54b:	add    BYTE PTR [rax],al
   14000a54d:	add    BYTE PTR [rax],al
   14000a54f:	add    BYTE PTR [rax-0x66],al
   14000a552:	add    BYTE PTR [rax+0x1],al
   14000a555:	add    BYTE PTR [rax],al
   14000a557:	add    BYTE PTR [rax-0x66],dh
   14000a55a:	add    BYTE PTR [rax+0x1],al
   14000a55d:	add    BYTE PTR [rax],al
   14000a55f:	add    BYTE PTR [rax],al
   14000a561:	add    eax,0x2141
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	movabs al,ds:0xc80000000140009a
   14000a571:	(bad)  
   14000a572:	add    BYTE PTR [rax+0x1],al
   14000a575:	add    BYTE PTR [rax],al
   14000a577:	add    BYTE PTR [rcx],al
   14000a579:	add    al,0x3
   14000a57b:	add    BYTE PTR [rax],al
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	lock (bad) 
   14000a582:	add    BYTE PTR [rax+0x1],al
   14000a585:	add    BYTE PTR [rax],al
   14000a587:	add    BYTE PTR [rax],bl
   14000a589:	fwait
   14000a58a:	add    BYTE PTR [rax+0x1],al
   14000a58d:	add    BYTE PTR [rax],al
   14000a58f:	add    BYTE PTR [rax],al
   14000a591:	add    al,0x2
   14000a593:	xor    BYTE PTR [rax],al
   14000a595:	add    BYTE PTR [rax],al
   14000a597:	add    BYTE PTR [rax-0x65],al
   14000a59a:	add    BYTE PTR [rax+0x1],al
   14000a59d:	add    BYTE PTR [rax],al
   14000a59f:	add    BYTE PTR [rax-0x65],ch
   14000a5a2:	add    BYTE PTR [rax+0x1],al
   14000a5a5:	add    BYTE PTR [rax],al
   14000a5a7:	add    BYTE PTR [rdx],al
   14000a5a9:	add    al,0x3
   14000a5ab:	add    BYTE PTR [rax],al
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	nop
   14000a5b1:	fwait
   14000a5b2:	add    BYTE PTR [rax+0x1],al
   14000a5b5:	add    BYTE PTR [rax],al
   14000a5b7:	add    BYTE PTR [rax+0x140009b],bh
   14000a5bd:	add    BYTE PTR [rax],al
   14000a5bf:	add    BYTE PTR [rax],al
   14000a5c1:	add    eax,0x4002
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	loopne 0x14000a565
   14000a5ca:	add    BYTE PTR [rax+0x1],al
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rax],cl
   14000a5d1:	pushf  
   14000a5d2:	add    BYTE PTR [rax+0x1],al
   14000a5d5:	add    BYTE PTR [rax],al
   14000a5d7:	add    BYTE PTR [rax],al
   14000a5d9:	add    eax,0x2061
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	xor    BYTE PTR [rax+rax*1+0x140],bl
   14000a5e7:	add    BYTE PTR [rax-0x64],bl
   14000a5ea:	add    BYTE PTR [rax+0x1],al
   14000a5ed:	add    BYTE PTR [rax],al
   14000a5ef:	add    BYTE PTR [rax],al
   14000a5f1:	add    eax,0x2051
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	sbb    BYTE PTR [rax+rax*1+0x140],0x0
   14000a600:	mov    al,0x9c
   14000a602:	add    BYTE PTR [rax+0x1],al
   14000a605:	add    BYTE PTR [rax],al
   14000a607:	add    BYTE PTR [rax],al
   14000a609:	add    eax,0x2151
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	loopne 0x14000a5ae
   14000a612:	add    BYTE PTR [rax+0x1],al
   14000a615:	add    BYTE PTR [rax],al
   14000a617:	add    BYTE PTR [rax],bl
   14000a619:	popf   
   14000a61a:	add    BYTE PTR [rax+0x1],al
   14000a61d:	add    BYTE PTR [rax],al
   14000a61f:	add    BYTE PTR [rax],al
   14000a621:	add    eax,0x2241
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	push   rax
   14000a629:	popf   
   14000a62a:	add    BYTE PTR [rax+0x1],al
   14000a62d:	add    BYTE PTR [rax],al
   14000a62f:	add    BYTE PTR [rax+0x140009d],dl
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax],al
   14000a639:	add    eax,0x2341
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	rcr    BYTE PTR [rbp+0x14000],1
   14000a646:	add    BYTE PTR [rax],al
   14000a648:	add    BYTE PTR [rsi+0x14000],bl
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	add    BYTE PTR [rip+0x4203],al        # 0x14000e859
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	xor    BYTE PTR [rsi+0x14000],bl
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	push   0x140009e
   14000a665:	add    BYTE PTR [rax],al
   14000a667:	add    BYTE PTR [rax],al
   14000a669:	add    eax,0x2251
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	movabs al,ds:0xe00000000140009e
   14000a679:	sahf   
   14000a67a:	add    BYTE PTR [rax+0x1],al
   14000a67d:	add    BYTE PTR [rax],al
   14000a67f:	add    BYTE PTR [rax],al
   14000a681:	add    eax,0x2351
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	and    BYTE PTR [rdi+0x14000],bl
   14000a68e:	add    BYTE PTR [rax],al
   14000a690:	rex.W lahf 
   14000a692:	add    BYTE PTR [rax+0x1],al
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rax],al
   14000a699:	add    al,0x2
   14000a69b:	and    BYTE PTR [rax],al
   14000a69d:	add    BYTE PTR [rax],al
   14000a69f:	add    BYTE PTR [rax-0x61],dh
   14000a6a2:	add    BYTE PTR [rax+0x1],al
   14000a6a5:	add    BYTE PTR [rax],al
   14000a6a7:	add    BYTE PTR [rax+0x140009f],ah
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    BYTE PTR [rax],al
   14000a6b1:	add    eax,0x2002
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	rcr    BYTE PTR [rdi+0x14000],1
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	lock lahf 
   14000a6c2:	add    BYTE PTR [rax+0x1],al
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rbx],al
   14000a6c9:	add    al,0x3
   14000a6cb:	add    BYTE PTR [rax],al
   14000a6ce:	add    BYTE PTR [rax],al
   14000a6d0:	adc    BYTE PTR [rax+0x14000],ah
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	cmp    BYTE PTR [rax+0x14000],ah
   14000a6de:	add    BYTE PTR [rax],al
   14000a6e0:	add    BYTE PTR [rip+0x4003],al        # 0x14000e6e9
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	(bad)  
   14000a6e9:	movabs al,ds:0xa088000000014000
   14000a6f2:	add    BYTE PTR [rax+0x1],al
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    BYTE PTR [rax],al
   14000a6f9:	add    eax,0x3024
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	mov    al,0xa0
   14000a702:	add    BYTE PTR [rax+0x1],al
   14000a705:	add    BYTE PTR [rax],al
   14000a707:	add    al,bl
   14000a709:	movabs al,ds:0x400000000014000
   14000a712:	add    BYTE PTR [rax],al
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    BYTE PTR [rax],al
   14000a719:	movabs eax,ds:0xa138000000014000
   14000a722:	add    BYTE PTR [rax+0x1],al
   14000a725:	add    BYTE PTR [rax],al
   14000a727:	add    BYTE PTR [rax],al
   14000a729:	add    eax,0x40
   14000a72e:	add    BYTE PTR [rax],al
   14000a730:	jo     0x14000a6d3
   14000a732:	add    BYTE PTR [rax+0x1],al
   14000a735:	add    BYTE PTR [rax],al
   14000a737:	add    BYTE PTR [rax+0x14000a1],ch
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rax],al
   14000a741:	add    eax,0x2047
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	loopne 0x14000a6eb
   14000a74a:	add    BYTE PTR [rax+0x1],al
   14000a74d:	add    BYTE PTR [rax],al
   14000a74f:	add    BYTE PTR [rax],bl
   14000a751:	movabs ds:0x500000000014000,al
   14000a75a:	push   rdi
   14000a75b:	and    BYTE PTR [rax],al
   14000a75d:	add    BYTE PTR [rax],al
   14000a75f:	add    BYTE PTR [rax-0x5e],dl
   14000a762:	add    BYTE PTR [rax+0x1],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rax+0x14000a2],cl
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax],al
   14000a771:	add    eax,0x2067
   14000a776:	add    BYTE PTR [rax],al
   14000a778:	shl    BYTE PTR [rdx+0x14000],0x0
   14000a77f:	add    al,bl
   14000a781:	movabs ds:0x1000000014000,al
   14000a78a:	add    BYTE PTR [rax+0x0],al
   14000a790:	cmp    BYTE PTR [rsi+0x14000],cl
   14000a796:	add    BYTE PTR [rax],al
   14000a798:	push   rax
   14000a799:	mov    es,WORD PTR [rax]
   14000a79b:	rex add DWORD PTR [rax],eax
	...
   14000a7a6:	add    BYTE PTR [rax],al
   14000a7a8:	nop
   14000a7a9:	mov    es,WORD PTR [rax]
   14000a7ab:	rex add DWORD PTR [rax],eax
   14000a7ae:	add    BYTE PTR [rax],al
   14000a7b0:	mov    al,0x8e
   14000a7b2:	add    BYTE PTR [rax+0x1],al
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rdx],al
   14000a7b9:	add    BYTE PTR [rax],al
   14000a7bb:	add    BYTE PTR [rax],al
   14000a7bd:	add    BYTE PTR [rax],al
   14000a7bf:	add    al,dh
   14000a7c1:	mov    es,WORD PTR [rax]
   14000a7c3:	rex add DWORD PTR [rax],eax
   14000a7c6:	add    BYTE PTR [rax],al
   14000a7c8:	adc    BYTE PTR [rdi+0x14000],cl
   14000a7ce:	add    BYTE PTR [rax],al
   14000a7d0:	add    al,0x0
   14000a7d2:	add    BYTE PTR [rax],al
   14000a7d4:	add    BYTE PTR [rax],al
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	pop    rax
   14000a7d9:	pop    QWORD PTR [rax]
   14000a7db:	rex add DWORD PTR [rax],eax
   14000a7de:	add    BYTE PTR [rax],al
   14000a7e0:	or     BYTE PTR [rdi+0x14000],0x0
   14000a7e7:	add    BYTE PTR [rsi],al
   14000a7e9:	add    BYTE PTR [rax],al
   14000a7eb:	add    BYTE PTR [rax],al
   14000a7ed:	add    BYTE PTR [rax],al
   14000a7ef:	add    al,al
   14000a7f1:	pop    QWORD PTR [rax]
   14000a7f3:	rex add DWORD PTR [rax],eax
   14000a7f6:	add    BYTE PTR [rax],al
   14000a7f8:	lock pop QWORD PTR [rax]
   14000a7fb:	rex add DWORD PTR [rax],eax
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	(bad)  
   14000a801:	add    BYTE PTR [rax],al
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rax],bh
   14000a809:	nop
   14000a80a:	add    BYTE PTR [rax+0x1],al
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rax-0x70],dh
   14000a812:	add    BYTE PTR [rax+0x1],al
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rax+rax*1],cl
   14000a81a:	add    BYTE PTR [rax],al
   14000a81c:	add    BYTE PTR [rax],al
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	push   0x1400092
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rax+0x1400092],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rcx],al
   14000a831:	add    BYTE PTR [rax],al
   14000a833:	add    BYTE PTR [rax],al
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rax+0x1400092],bh
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    al,dl
   14000a841:	xchg   edx,eax
   14000a842:	add    BYTE PTR [rax+0x1],al
   14000a845:	add    BYTE PTR [rax],al
   14000a847:	add    BYTE PTR [rdx],al
   14000a849:	add    BYTE PTR [rax],al
   14000a84b:	add    BYTE PTR [rax],al
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    BYTE PTR [rax],cl
   14000a851:	xchg   ebx,eax
   14000a852:	add    BYTE PTR [rax+0x1],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rax],ch
   14000a859:	xchg   ebx,eax
   14000a85a:	add    BYTE PTR [rax+0x1],al
   14000a85d:	add    BYTE PTR [rax],al
   14000a85f:	add    BYTE PTR [rax+rax*1],al
   14000a862:	add    BYTE PTR [rax],al
   14000a864:	add    BYTE PTR [rax],al
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	push   0x1400093
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rax+0x1400093],cl
   14000a875:	add    BYTE PTR [rax],al
   14000a877:	add    BYTE PTR [rax],dl
   14000a879:	add    BYTE PTR [rax],al
   14000a87b:	add    BYTE PTR [rax],al
   14000a87d:	add    BYTE PTR [rax],al
   14000a87f:	add    al,al
   14000a881:	xchg   ebx,eax
   14000a882:	add    BYTE PTR [rax+0x1],al
   14000a885:	add    BYTE PTR [rax],al
   14000a887:	add    al,ah
   14000a889:	xchg   ebx,eax
   14000a88a:	add    BYTE PTR [rax+0x1],al
   14000a88d:	add    BYTE PTR [rax],al
   14000a88f:	add    BYTE PTR [rax],cl
	...
   14000a89d:	add    BYTE PTR [rax],al
   14000a89f:	add    BYTE PTR [rax],dh
   14000a8a1:	lea    eax,[rax]
   14000a8a3:	rex add DWORD PTR [rax],eax
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	lea    rax,[rax]
   14000a8ab:	rex add DWORD PTR [rax],eax
	...
   14000a8b6:	add    BYTE PTR [rax],al
   14000a8b8:	js     0x14000a847
   14000a8ba:	add    BYTE PTR [rax+0x1],al
   14000a8bd:	add    BYTE PTR [rax],al
   14000a8bf:	add    BYTE PTR [rax+0x140008d],dl
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rcx],al
   14000a8c9:	add    BYTE PTR [rax],al
   14000a8cb:	add    BYTE PTR [rax],al
   14000a8cd:	add    BYTE PTR [rax],al
   14000a8cf:	add    al,cl
   14000a8d1:	lea    eax,[rax]
   14000a8d3:	rex add DWORD PTR [rax],eax
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	fmul   DWORD PTR [rbp+0x14000]
   14000a8de:	add    BYTE PTR [rax],al
   14000a8e0:	add    al,BYTE PTR [rax]
	...
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	push   rbx
   14000a8f1:	add    BYTE PTR [rdi+0x0],ch
   14000a8f4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000a8f9:	add    BYTE PTR [rcx+0x0],ah
   14000a8fc:	jb     0x14000a8fe
   14000a8fe:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a903:	add    BYTE PTR [rcx+0x0],ch
   14000a906:	movsxd eax,DWORD PTR [rax]
   14000a908:	jb     0x14000a90a
   14000a90a:	outs   dx,DWORD PTR ds:[rsi]
   14000a90b:	add    BYTE PTR [rbx+0x0],dh
   14000a90e:	outs   dx,DWORD PTR ds:[rsi]
   14000a90f:	add    BYTE PTR [rsi+0x0],ah
   14000a912:	je     0x14000a914
   14000a914:	pop    rsp
   14000a915:	add    BYTE PTR [rdi+0x0],dl
   14000a918:	imul   eax,DWORD PTR [rax],0x64006e
   14000a91e:	outs   dx,DWORD PTR ds:[rsi]
   14000a91f:	add    BYTE PTR [rdi+0x0],dh
   14000a922:	jae    0x14000a924
   14000a924:	and    BYTE PTR [rax],al
   14000a926:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000a92b:	add    BYTE PTR [rbx+0x0],al
   14000a92e:	jne    0x14000a930
   14000a930:	jb     0x14000a932
   14000a932:	jb     0x14000a934
   14000a934:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a938:	je     0x14000a93a
   14000a93a:	push   rsi
   14000a93b:	add    BYTE PTR [rbp+0x0],ah
   14000a93e:	jb     0x14000a940
   14000a940:	jae    0x14000a942
   14000a942:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a948:	pop    rsp
   14000a949:	add    BYTE PTR [rax+0x0],dl
   14000a94c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a950:	data16 add BYTE PTR [rax+rax*1+0x69],ch
   14000a955:	add    BYTE PTR [rdx+0x0],ah
	...
   14000a960:	push   rbx
   14000a961:	add    BYTE PTR [rdi+0x0],ch
   14000a964:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000a969:	add    BYTE PTR [rcx+0x0],ah
   14000a96c:	jb     0x14000a96e
   14000a96e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a973:	add    BYTE PTR [rcx+0x0],ch
   14000a976:	movsxd eax,DWORD PTR [rax]
   14000a978:	jb     0x14000a97a
   14000a97a:	outs   dx,DWORD PTR ds:[rsi]
   14000a97b:	add    BYTE PTR [rbx+0x0],dh
   14000a97e:	outs   dx,DWORD PTR ds:[rsi]
   14000a97f:	add    BYTE PTR [rsi+0x0],ah
   14000a982:	je     0x14000a984
   14000a984:	pop    rsp
   14000a985:	add    BYTE PTR [rdi+0x0],dl
   14000a988:	imul   eax,DWORD PTR [rax],0x64006e
   14000a98e:	outs   dx,DWORD PTR ds:[rsi]
   14000a98f:	add    BYTE PTR [rdi+0x0],dh
   14000a992:	jae    0x14000a994
   14000a994:	and    BYTE PTR [rax],al
   14000a996:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000a99b:	add    BYTE PTR [rbx+0x0],al
   14000a99e:	jne    0x14000a9a0
   14000a9a0:	jb     0x14000a9a2
   14000a9a2:	jb     0x14000a9a4
   14000a9a4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a9a8:	je     0x14000a9aa
   14000a9aa:	push   rsi
   14000a9ab:	add    BYTE PTR [rbp+0x0],ah
   14000a9ae:	jb     0x14000a9b0
   14000a9b0:	jae    0x14000a9b2
   14000a9b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a9b8:	pop    rsp
   14000a9b9:	add    BYTE PTR [rax+0x0],dl
   14000a9bc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a9c0:	data16 add BYTE PTR [rax+rax*1+0x69],ch
   14000a9c5:	add    BYTE PTR [rdx+0x0],ah
   14000a9c8:	pop    rsp
   14000a9c9:	add    BYTE PTR [rdi+0x0],bl
   14000a9cc:	push   rsi
   14000a9cd:	add    BYTE PTR [rdx],dh
   14000a9cf:	add    BYTE PTR [rax+0x0],dl
   14000a9d2:	jb     0x14000a9d4
   14000a9d4:	outs   dx,DWORD PTR ds:[rsi]
   14000a9d5:	add    BYTE PTR [rsi+0x0],dh
   14000a9d8:	imul   eax,DWORD PTR [rax],0x650064
   14000a9de:	jb     0x14000a9e0
   14000a9e0:	jae    0x14000a9e2
   14000a9e2:	add    BYTE PTR [rax],al
   14000a9e4:	add    BYTE PTR [rax],al
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	pop    rdi
   14000a9e9:	add    BYTE PTR [rsi+0x0],dl
   14000a9ec:	xor    al,BYTE PTR [rax]
   14000a9ee:	push   rax
   14000a9ef:	add    BYTE PTR [rdx+0x0],dh
   14000a9f2:	outs   dx,DWORD PTR ds:[rsi]
   14000a9f3:	add    BYTE PTR [rsi+0x0],dh
   14000a9f6:	imul   eax,DWORD PTR [rax],0x650064
   14000a9fc:	jb     0x14000a9fe
   14000a9fe:	jae    0x14000aa00
	...
   14000aa08:	push   rax
   14000aa09:	add    BYTE PTR [rdx+0x0],dh
   14000aa0c:	outs   dx,DWORD PTR ds:[rsi]
   14000aa0d:	add    BYTE PTR [rsi+0x0],dh
   14000aa10:	imul   eax,DWORD PTR [rax],0x650064
   14000aa16:	jb     0x14000aa18
   14000aa18:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000aa1c:	ins    DWORD PTR es:[rdi],dx
   14000aa1d:	add    BYTE PTR [rbp+0x0],ah
	...
   14000aa28:	push   rax
   14000aa29:	add    BYTE PTR [rdx+0x0],dh
   14000aa2c:	outs   dx,DWORD PTR ds:[rsi]
   14000aa2d:	add    BYTE PTR [rsi+0x0],dh
   14000aa30:	imul   eax,DWORD PTR [rax],0x650064
   14000aa36:	jb     0x14000aa38
   14000aa38:	push   rsp
   14000aa39:	add    BYTE PTR [rcx+0x0],bh
   14000aa3c:	jo     0x14000aa3e
   14000aa3e:	add    BYTE PTR gs:[rax],al
   14000aa41:	add    BYTE PTR [rax],al
   14000aa43:	add    BYTE PTR [rax],al
   14000aa45:	add    BYTE PTR [rax],al
   14000aa47:	add    BYTE PTR [rcx+0x0],al
   14000aa4a:	jo     0x14000aa4c
   14000aa4c:	jo     0x14000aa4e
   14000aa4e:	ins    BYTE PTR es:[rdi],dx
   14000aa4f:	add    BYTE PTR [rcx+0x0],ch
   14000aa52:	movsxd eax,DWORD PTR [rax]
   14000aa54:	(bad)  
   14000aa55:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000aa59:	add    BYTE PTR [rdi+0x0],ch
   14000aa5c:	outs   dx,BYTE PTR ds:[rsi]
   14000aa5d:	add    BYTE PTR [rcx+0x0],cl
   14000aa60:	add    BYTE PTR fs:[rbp+0x0],ah
   14000aa64:	outs   dx,BYTE PTR ds:[rsi]
   14000aa65:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000aa69:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000aa6d:	add    BYTE PTR [rax],al
   14000aa6f:	add    BYTE PTR [rsi+0x0],cl
   14000aa72:	(bad)  
   14000aa73:	add    BYTE PTR [rbp+0x0],ch
   14000aa76:	add    BYTE PTR gs:[rdx+0x0],dl
   14000aa7a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000aa7e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa7f:	add    BYTE PTR [rbp+0x0],dh
   14000aa82:	jb     0x14000aa84
   14000aa84:	movsxd eax,DWORD PTR [rax]
   14000aa86:	add    BYTE PTR gs:[rax],al
   14000aa89:	add    BYTE PTR [rax],al
   14000aa8b:	add    BYTE PTR [rax],al
   14000aa8d:	add    BYTE PTR [rax],al
   14000aa8f:	add    BYTE PTR [rbp+0x0],al
   14000aa92:	js     0x14000aa94
   14000aa94:	jo     0x14000aa96
   14000aa96:	ins    BYTE PTR es:[rdi],dx
   14000aa97:	add    BYTE PTR [rcx+0x0],ah
   14000aa9a:	imul   eax,DWORD PTR [rax],0x52006e
   14000aaa0:	add    BYTE PTR gs:[rbx+0x0],dh
   14000aaa4:	outs   dx,DWORD PTR ds:[rsi]
   14000aaa5:	add    BYTE PTR [rbp+0x0],dh
   14000aaa8:	jb     0x14000aaaa
   14000aaaa:	movsxd eax,DWORD PTR [rax]
   14000aaac:	add    BYTE PTR gs:[rax],al
   14000aaaf:	add    BYTE PTR [rcx+0x0],cl
   14000aab2:	outs   dx,BYTE PTR ds:[rsi]
   14000aab3:	add    BYTE PTR [rbx+0x0],dh
   14000aab6:	je     0x14000aab8
   14000aab8:	(bad)  
   14000aab9:	add    BYTE PTR [rsi+0x0],ch
   14000aabc:	movsxd eax,DWORD PTR [rax]
   14000aabe:	add    BYTE PTR gs:[rax+rax*1+0x79],dl
   14000aac3:	add    BYTE PTR [rax+0x0],dh
   14000aac6:	add    BYTE PTR gs:[rax],al
   14000aac9:	add    BYTE PTR [rax],al
   14000aacb:	add    BYTE PTR [rax],al
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    BYTE PTR [rbx+0x0],al
   14000aad2:	outs   dx,DWORD PTR ds:[rsi]
   14000aad3:	add    BYTE PTR [rbp+0x0],dh
   14000aad6:	outs   dx,BYTE PTR ds:[rsi]
   14000aad7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000aadb:	add    BYTE PTR [rdx+0x0],dh
   14000aade:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000aae2:	jne    0x14000aae4
   14000aae4:	outs   dx,BYTE PTR ds:[rsi]
   14000aae5:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000aae9:	add    BYTE PTR [rax],al
   14000aaeb:	add    BYTE PTR [rax],al
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rbx+0x0],al
   14000aaf2:	outs   dx,DWORD PTR ds:[rsi]
   14000aaf3:	add    BYTE PTR [rbp+0x0],dh
   14000aaf6:	outs   dx,BYTE PTR ds:[rsi]
   14000aaf7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000aafb:	add    BYTE PTR [rdx+0x0],dh
   14000aafe:	add    BYTE PTR [rax+r8*1+0x6f],bpl
   14000ab03:	add    BYTE PTR [rbx+0x0],ah
   14000ab06:	imul   eax,DWORD PTR [rax],0x0
   14000ab09:	add    BYTE PTR [rax],al
   14000ab0b:	add    BYTE PTR [rax],al
   14000ab0d:	add    BYTE PTR [rax],al
   14000ab0f:	add    BYTE PTR [rsi+0x0],al
   14000ab12:	imul   eax,DWORD PTR [rax],0x730072
   14000ab18:	je     0x14000ab1a
   14000ab1a:	and    BYTE PTR [rax],al
   14000ab1c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ab20:	jne    0x14000ab22
   14000ab22:	outs   dx,BYTE PTR ds:[rsi]
   14000ab23:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab27:	add    BYTE PTR [rdx+0x0],dh
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	add    BYTE PTR [rax],al
   14000ab2e:	add    BYTE PTR [rax],al
   14000ab30:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000ab34:	jae    0x14000ab36
   14000ab36:	je     0x14000ab38
   14000ab38:	and    BYTE PTR [rax],al
   14000ab3a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ab3e:	jne    0x14000ab40
   14000ab40:	outs   dx,BYTE PTR ds:[rsi]
   14000ab41:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab45:	add    BYTE PTR [rdx+0x0],dh
	...
   14000ab50:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000ab54:	jb     0x14000ab56
   14000ab56:	jae    0x14000ab58
   14000ab58:	je     0x14000ab5a
   14000ab5a:	and    BYTE PTR [rax],al
   14000ab5c:	rex.W add BYTE PTR [rbp+0x0],spl
   14000ab60:	ins    BYTE PTR es:[rdi],dx
   14000ab61:	add    BYTE PTR [rax+0x0],dh
   14000ab64:	add    BYTE PTR [rax],al
   14000ab66:	add    BYTE PTR [rax],al
   14000ab68:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000ab6c:	jae    0x14000ab6e
   14000ab6e:	je     0x14000ab70
   14000ab70:	and    BYTE PTR [rax],al
   14000ab72:	rex.W add BYTE PTR [rbp+0x0],spl
   14000ab76:	ins    BYTE PTR es:[rdi],dx
   14000ab77:	add    BYTE PTR [rax+0x0],dh
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	add    BYTE PTR [rax],al
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000ab84:	jne    0x14000ab86
   14000ab86:	je     0x14000ab88
   14000ab88:	jb     0x14000ab8a
   14000ab8a:	(bad)  
   14000ab8b:	add    BYTE PTR [rax+rax*1+0x4e],ch
   14000ab8f:	add    BYTE PTR [rcx+0x0],ah
   14000ab92:	ins    DWORD PTR es:[rdi],dx
   14000ab93:	add    BYTE PTR [rbp+0x0],ah
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	or     al,BYTE PTR [rax]
   14000ab9a:	add    BYTE PTR [rax],al
   14000ab9c:	add    BYTE PTR [rax],al
   14000ab9e:	add    BYTE PTR [rax],al
   14000aba0:	add    BYTE PTR [r8+r8*1+0x6f],r13b
   14000aba5:	add    BYTE PTR [rdx+0x0],ah
   14000aba8:	(bad)  
   14000aba9:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000abad:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000abb1:	add    BYTE PTR [rcx+0x0],al
   14000abb4:	add    BYTE PTR [rax+0x0],r10b
   14000abb8:	add    BYTE PTR [r10+0x0],r10b
   14000abbc:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000abc0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000abc4:	push   rsp
   14000abc5:	add    BYTE PTR [rbp+0x0],al
   14000abc8:	pop    rax
	...
   14000abd5:	add    al,dh
   14000abd7:	(bad)  
   14000abd8:	(bad)  
   14000abd9:	cdq    
   14000abda:	cdq    
   14000abdb:	cdq    
   14000abdc:	cdq    
   14000abdd:	cdq    
   14000abde:	icebp  
   14000abdf:	(bad)  
   14000abe0:	add    BYTE PTR [rax],al
   14000abe2:	add    BYTE PTR [rax],al
   14000abe4:	add    BYTE PTR [rax],al
   14000abe6:	add    BYTE PTR [rax+0x0],al
	...
   14000abf1:	add    BYTE PTR [rax],al
   14000abf3:	add    dl,al
   14000abf5:	cmp    BYTE PTR [rdi+0x55],bl
   14000abfb:	add    BYTE PTR [rdx],al
   14000abfd:	add    BYTE PTR [rax],al
   14000abff:	add    BYTE PTR [rbx],ah
   14000ac01:	add    BYTE PTR [rax],al
   14000ac03:	add    al,dh
   14000ac05:	lods   al,BYTE PTR ds:[rsi]
   14000ac06:	add    BYTE PTR [rax],al
   14000ac08:	lock movabs al,ds:0x38c2000000000000
   14000ac12:	lahf   
   14000ac13:	push   rbp
   14000ac14:	add    BYTE PTR [rax],al
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	or     eax,0xe0000000
   14000ac1d:	add    DWORD PTR [rax],eax
   14000ac1f:	add    BYTE PTR [rax],ch
   14000ac21:	lods   eax,DWORD PTR ds:[rsi]
   14000ac22:	add    BYTE PTR [rax],al
   14000ac24:	sub    BYTE PTR [rcx+0x0],ah
	...
   14000ac4e:	add    BYTE PTR [rax],al
   14000ac50:	movabs al,ds:0x0
	...
   14000aca5:	add    BYTE PTR [rax],al
   14000aca7:	add    BYTE PTR [rax],cl
   14000aca9:	rol    BYTE PTR [rax],1
   14000acab:	rex add DWORD PTR [rax],eax
	...
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	mov    eax,0x1400083
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    al,al
   14000acc9:	add    DWORD PTR [rax],0x40
   14000accc:	add    DWORD PTR [rax],eax
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	add    BYTE PTR [rax+rax*1+0x140],al
   14000acd7:	add    BYTE PTR [rcx],cl
	...
   14000ace1:	xor    eax,0x0
	...
   14000acee:	add    BYTE PTR [rax],al
   14000acf0:	push   rdx
   14000acf1:	push   rbx
   14000acf2:	rex.R push rbx
   14000acf4:	int    0xd2
   14000acf6:	mov    al,0x7e
   14000acf8:	adc    ch,BYTE PTR [rax+rcx*4+0x3f1da84d]
   14000acff:	push   rdx
   14000ad00:	or     al,0xef
   14000ad02:	(bad)  
   14000ad03:	rex.X add DWORD PTR [rax],eax
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	ins    BYTE PTR es:[rdi],dx
   14000ad09:	outs   dx,DWORD PTR ds:[rsi]
   14000ad0a:	movsxd esi,DWORD PTR fs:[rdx+rsi*2+0x2e]
   14000ad0f:	jo     0x14000ad75
   14000ad11:	(bad)  
	...
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	rex.RXB
   14000ad29:	rex.XB push r12
   14000ad2b:	rex.WR add BYTE PTR [rax],r10b
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	mov    ah,0x6e
   14000ad32:	add    BYTE PTR [rax],al
   14000ad34:	cs je  0x14000ad9c
   14000ad37:	js     0x14000adad
   14000ad39:	and    al,0x6d
   14000ad3b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad3c:	add    BYTE PTR [rax],al
   14000ad3e:	add    BYTE PTR [rax],al
   14000ad40:	sar    BYTE PTR [rsi+0x0],0x0
   14000ad44:	jge    0x14000ad46
   14000ad46:	add    BYTE PTR [rax],al
   14000ad48:	cs je  0x14000adb0
   14000ad4b:	js     0x14000adc1
   14000ad4d:	and    al,0x6d
   14000ad4f:	outs   dx,BYTE PTR ds:[rsi]
   14000ad50:	and    al,0x30
   14000ad52:	xor    BYTE PTR [rax],al
   14000ad54:	rex jg 0x14000ad57
   14000ad57:	add    BYTE PTR [rax+0x0],dl
   14000ad5a:	add    BYTE PTR [rax],al
   14000ad5c:	cs je  0x14000adc4
   14000ad5f:	js     0x14000add5
   14000ad61:	and    al,0x78
   14000ad63:	add    BYTE PTR [rax],al
   14000ad65:	add    BYTE PTR [rax],0x0
   14000ad68:	mov    eax,0x2e000003
   14000ad6d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    BYTE PTR [rax+0x10000083],bh
   14000ad7d:	add    BYTE PTR [rax],al
   14000ad7f:	add    BYTE PTR [rsi],ch
   14000ad81:	xor    BYTE PTR [rax],dh
   14000ad83:	movsxd esp,DWORD PTR [rsi+0x67]
   14000ad86:	add    BYTE PTR [rax],al
   14000ad88:	enter  0x83,0x0
   14000ad8c:	or     BYTE PTR [rax],al
   14000ad8e:	add    BYTE PTR [rax],al
   14000ad90:	cs rex.XB push r10
   14000ad93:	push   rsp
   14000ad94:	and    al,0x58
   14000ad96:	rex.XB
   14000ad97:	add    BYTE PTR [r8],al
   14000ad9a:	add    BYTE PTR [rax],al
   14000ad9c:	rol    BYTE PTR [rbx+0x80000],1
   14000ada2:	add    BYTE PTR [rax],al
   14000ada4:	cs rex.XB push r10
   14000ada7:	push   rsp
   14000ada8:	and    al,0x58
   14000adaa:	rex.XB
   14000adab:	rex.B
   14000adac:	add    BYTE PTR [r8],al
   14000adaf:	add    al,bl
   14000adb1:	add    DWORD PTR [rax],0x0
   14000adb4:	or     BYTE PTR [rax],al
   14000adb6:	add    BYTE PTR [rax],al
   14000adb8:	cs rex.XB push r10
   14000adbb:	push   rsp
   14000adbc:	and    al,0x58
   14000adbe:	rex.XB pop r10
   14000adc0:	add    BYTE PTR [rax],al
   14000adc2:	add    BYTE PTR [rax],al
   14000adc4:	loopne 0x14000ad49
   14000adc6:	add    BYTE PTR [rax],al
   14000adc8:	or     BYTE PTR [rax],al
   14000adca:	add    BYTE PTR [rax],al
   14000adcc:	cs rex.XB push r10
   14000adcf:	push   rsp
   14000add0:	and    al,0x58
   14000add2:	rex.WB
   14000add3:	add    BYTE PTR [r8],al
   14000add6:	add    BYTE PTR [rax],al
   14000add8:	call   0x14800ae60
   14000addd:	add    BYTE PTR [rax],al
   14000addf:	add    BYTE PTR [rsi],ch
   14000ade1:	rex.XB push r10
   14000ade3:	push   rsp
   14000ade4:	and    al,0x58
   14000ade6:	rex.WB
   14000ade7:	rex.B
   14000ade8:	add    BYTE PTR [r8],al
   14000adeb:	add    al,dh
   14000aded:	add    DWORD PTR [rax],0x0
   14000adf0:	or     BYTE PTR [rax],al
   14000adf2:	add    BYTE PTR [rax],al
   14000adf4:	cs rex.XB push r10
   14000adf7:	push   rsp
   14000adf8:	and    al,0x58
   14000adfa:	rex.WB pop r9
   14000adfc:	add    BYTE PTR [rax],al
   14000adfe:	add    BYTE PTR [rax],al
   14000ae00:	clc    
   14000ae01:	add    DWORD PTR [rax],0x0
   14000ae04:	or     BYTE PTR [rax],al
   14000ae06:	add    BYTE PTR [rax],al
   14000ae08:	cs rex.XB push r10
   14000ae0b:	push   rsp
   14000ae0c:	and    al,0x58
   14000ae0e:	rex.WB pop r10
   14000ae10:	add    BYTE PTR [rax],al
   14000ae12:	add    BYTE PTR [rax],al
   14000ae14:	add    BYTE PTR [rax+rax*1+0x2400],al
   14000ae1b:	add    BYTE PTR [rsi],ch
   14000ae1d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000ae25:	add    BYTE PTR [rax],al
   14000ae27:	add    BYTE PTR [rax],dh
   14000ae29:	test   BYTE PTR [rax],al
   14000ae2b:	add    al,al
   14000ae2d:	sub    BYTE PTR [rax],al
   14000ae2f:	add    BYTE PTR [rsi],ch
   14000ae31:	jb     0x14000ae97
   14000ae33:	(bad)  
   14000ae34:	je     0x14000ae97
   14000ae36:	add    BYTE PTR [rax],al
   14000ae38:	lock lods al,BYTE PTR ds:[rsi]
   14000ae3a:	add    BYTE PTR [rax],al
   14000ae3c:	sbb    BYTE PTR [rdx],al
   14000ae3e:	add    BYTE PTR [rax],al
   14000ae40:	cs jb  0x14000aea7
   14000ae43:	(bad)  
   14000ae44:	je     0x14000aea7
   14000ae46:	and    al,0x7a
   14000ae48:	jp     0x14000aec4
   14000ae4a:	fs (bad) 
   14000ae4c:	add    BYTE PTR [eax],al
   14000ae4f:	add    BYTE PTR [rax],cl
   14000ae51:	scas   eax,DWORD PTR es:[rdi]
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	mov    al,0x4
   14000ae56:	add    BYTE PTR [rax],al
   14000ae58:	cs js  0x14000aebf
   14000ae5b:	(bad)  
   14000ae5c:	je     0x14000aebf
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	mov    eax,0xe00000b3
   14000ae65:	add    DWORD PTR [rax],eax
   14000ae67:	add    BYTE PTR [rsi],ch
   14000ae69:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000ae71:	add    BYTE PTR [rax],al
   14000ae73:	add    BYTE PTR [rax+0x140000b5],bl
   14000ae79:	add    BYTE PTR [rax],al
   14000ae7b:	add    BYTE PTR [rsi],ch
   14000ae7d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   14000ae85:	add    BYTE PTR [rax],al
   14000ae87:	add    BYTE PTR [rax-0x47ffff4b],dh
   14000ae8d:	add    eax,DWORD PTR [rax]
   14000ae8f:	add    BYTE PTR [rsi],ch
   14000ae91:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000ae99:	add    BYTE PTR [rax],al
   14000ae9b:	add    BYTE PTR [rax-0x47],ch
   14000ae9e:	add    BYTE PTR [rax],al
   14000aea0:	ror    BYTE PTR [rcx],1
   14000aea2:	add    BYTE PTR [rax],al
   14000aea4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000aead:	add    BYTE PTR [rax],al
   14000aeaf:	add    BYTE PTR [rax],al
   14000aeb1:	rol    BYTE PTR [rax],1
   14000aeb3:	add    BYTE PTR [rax+0x0],dh
   14000aeb6:	add    BYTE PTR [rax],al
   14000aeb8:	cs fs (bad) 
   14000aebb:	je     0x14000af1e
   14000aebd:	add    BYTE PTR [rax],al
   14000aebf:	add    BYTE PTR [rax-0x30],dh
   14000aec2:	add    BYTE PTR [rax],al
   14000aec4:	cmp    al,0xe
   14000aec6:	add    BYTE PTR [rax],al
   14000aec8:	cs (bad) 
   14000aecb:	jae    0x14000aecd
   14000aecd:	add    BYTE PTR [rax],al
   14000aecf:	add    BYTE PTR [rax],al
   14000aed1:	loopne 0x14000aed3
   14000aed3:	add    BYTE PTR [rax+0x3],ah
   14000aed6:	add    BYTE PTR [rax],al
   14000aed8:	cs jo  0x14000af3f
   14000aedb:	(bad)  
   14000aedc:	je     0x14000af3f
   14000aede:	add    BYTE PTR [rax],al
   14000aee0:	add    al,dh
   14000aee2:	add    BYTE PTR [rax],al
   14000aee4:	lock add BYTE PTR [rax],al
   14000aee7:	add    BYTE PTR [rsi],ch
   14000aee9:	jb     0x14000af5e
   14000aeeb:	jb     0x14000af50
   14000aeed:	and    al,0x30
   14000aeef:	xor    DWORD PTR [rax],eax
   14000aef1:	add    BYTE PTR [rax],al
   14000aef3:	add    al,dh
   14000aef5:	lock add BYTE PTR [rax],al
   14000aef8:	add    BYTE PTR [rdi],al
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	cs jb  0x14000af72
   14000aeff:	jb     0x14000af64
   14000af01:	and    al,0x30
   14000af03:	xor    al,BYTE PTR [rax]
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rcx],al
   14000af09:	add    eax,0x34050002
   14000af0e:	add    DWORD PTR [rax],eax
   14000af10:	add    DWORD PTR [rdx],ecx
   14000af12:	add    al,0x0
   14000af14:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000af18:	add    eax,0x1000134
   14000af1d:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42c123
   14000af23:	jo     0x14000af32
   14000af25:	(bad)  
   14000af26:	or     al,0x50
   14000af28:	or     esi,DWORD PTR [rax]
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	add    DWORD PTR [rdx],ecx
   14000af2e:	add    al,0x0
   14000af30:	or     dh,BYTE PTR [rsi+rax*1]
   14000af33:	add    BYTE PTR [rdx],cl
   14000af35:	xor    al,BYTE PTR [rsi]
   14000af37:	jo     0x14000af3a
   14000af39:	add    al,0x1
   14000af3b:	add    BYTE PTR [rdx+rax*2],al
   14000af3e:	add    BYTE PTR [rax],al
   14000af40:	sbb    DWORD PTR [rsi],ebx
   14000af42:	add    al,0x0
   14000af44:	adc    BYTE PTR [rdx+rdx*1],dh
   14000af47:	add    BYTE PTR [rax],dl
   14000af49:	repnz (bad) 
   14000af4b:	push   rax
   14000af4c:	push   0x7000007d
   14000af51:	add    BYTE PTR [rax],al
   14000af53:	add    BYTE PTR [rcx],al
   14000af55:	sbb    al,0xc
   14000af57:	add    BYTE PTR [rsp+riz*2],bl
   14000af5a:	or     al,0x0
   14000af5c:	sbb    al,0x54
   14000af5e:	or     eax,DWORD PTR [rax]
   14000af60:	sbb    al,0x34
   14000af62:	or     al,BYTE PTR [rax]
   14000af64:	sbb    al,0x32
   14000af66:	sbb    al,dh
   14000af68:	(bad)  
   14000af69:	loopne 0x14000af7f
   14000af6b:	rcl    BYTE PTR [rdx],1
   14000af6d:	rcl    BYTE PTR [rax],0x70
   14000af70:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415af7e
   14000af76:	or     al,BYTE PTR [rax]
   14000af78:	adc    eax,0x15000964
   14000af7d:	xor    al,0x8
   14000af7f:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0c0d7
   14000af85:	sbb    DWORD PTR [rsi],eax
   14000af87:	add    BYTE PTR [rcx],bl
   14000af89:	fs or  al,0x0
   14000af8c:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000af8f:	add    BYTE PTR [rcx],bl
   14000af91:	jb     0x14000afa8
   14000af93:	jo     0x14000afae
   14000af95:	and    eax,0x1130005
   14000af9a:	rex.WR add BYTE PTR [rax+rsi*2],r9b
   14000af9e:	or     esp,DWORD PTR [rax+0xa]
   14000afa1:	xor    BYTE PTR [rax],al
   14000afa3:	add    BYTE PTR [rax+0x7d],ch
   14000afa6:	add    BYTE PTR [rax],al
   14000afa8:	push   rax
   14000afa9:	add    al,BYTE PTR [rax]
   14000afab:	add    BYTE PTR [rcx],bl
   14000afad:	xor    ecx,DWORD PTR [rbx]
   14000afaf:	add    BYTE PTR [rdx],ah
   14000afb1:	je     0x14000b00e
   14000afb3:	add    BYTE PTR [rdx],ah
   14000afb5:	fs pop rdx
   14000afb7:	add    BYTE PTR [rdx],ah
   14000afb9:	xor    al,0x59
   14000afbb:	add    BYTE PTR [rdx],ah
   14000afbd:	add    DWORD PTR [rax+rax*1+0x14],edx
   14000afc1:	lock adc ah,al
   14000afc4:	adc    BYTE PTR [rax+0x0],dl
   14000afc7:	add    BYTE PTR [rax+0x7d],ch
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	nop
   14000afcd:	add    al,BYTE PTR [rax]
   14000afcf:	add    BYTE PTR [rcx],cl
   14000afd1:	sbb    ecx,DWORD PTR [rax]
   14000afd3:	add    BYTE PTR [rbx],bl
   14000afd5:	xor    al,0xf
   14000afd7:	add    BYTE PTR [rbx],bl
   14000afd9:	jb     0x14000aff2
   14000afdb:	lock adc eax,0x11c013e0
   14000afe1:	jo     0x14000aff3
   14000afe3:	(bad)  
   14000afe4:	push   rsi
   14000afe5:	jp     0x14000afe7
   14000afe7:	add    BYTE PTR [rcx],al
   14000afe9:	add    BYTE PTR [rax],al
   14000afeb:	add    BYTE PTR [rsi+0x1c],cl
   14000afee:	add    BYTE PTR [rax],al
   14000aff0:	jl     0x14000b00e
   14000aff2:	add    BYTE PTR [rax],al
   14000aff4:	add    DWORD PTR [rax],eax
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	jl     0x14000b016
   14000affa:	add    BYTE PTR [rax],al
   14000affc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41db00e
   14000b002:	or     eax,0xc641d00
   14000b007:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d00bb61
   14000b00d:	xor    al,0xa
   14000b00f:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0c967
   14000b015:	loopne 0x14000b02c
   14000b017:	rol    BYTE PTR [rcx],0x1c
   14000b01a:	or     al,0x0
   14000b01c:	sbb    al,0x64
   14000b01e:	adc    al,BYTE PTR [rax]
   14000b020:	sbb    al,0x54
   14000b022:	adc    DWORD PTR [rax],eax
   14000b024:	sbb    al,0x34
   14000b026:	adc    BYTE PTR [rax],al
   14000b028:	sbb    al,0x92
   14000b02a:	sbb    al,dh
   14000b02c:	(bad)  
   14000b02d:	loopne 0x14000b043
   14000b02f:	rcl    BYTE PTR [rdx],1
   14000b031:	rcl    BYTE PTR [rax],0x70
   14000b034:	sbb    DWORD PTR [rdx],esi
   14000b036:	or     eax,DWORD PTR [rax]
   14000b038:	and    DWORD PTR [rbp+rax*2+0x0],esp
   14000b03c:	and    DWORD PTR [rsp+rax*2],esi
   14000b03f:	add    BYTE PTR [rcx],ah
   14000b041:	add    DWORD PTR [rax+rax*1],edi
   14000b044:	adc    dh,al
   14000b046:	adc    al,ah
   14000b048:	(bad)  
   14000b049:	ror    BYTE PTR [rax+rsi*2],1
   14000b04c:	or     edx,DWORD PTR [rax+0x0]
   14000b04f:	add    BYTE PTR [rax+0x7d],ch
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	rol    BYTE PTR [rcx],1
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	add    DWORD PTR [rcx],ebx
   14000b05a:	or     al,BYTE PTR [rax]
   14000b05c:	sbb    DWORD PTR [rdi+rcx*1+0x0],esp
   14000b060:	sbb    DWORD PTR [rsi+rcx*1],esi
   14000b063:	add    BYTE PTR [rcx],bl
   14000b065:	jb     0x14000b079
   14000b067:	lock adc al,ah
   14000b06a:	(bad)  
   14000b06b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b06f:	push   rax
   14000b070:	add    DWORD PTR [rcx],ebx
   14000b072:	or     al,BYTE PTR [rax]
   14000b074:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000b078:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000b07c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b080:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b083:	add    BYTE PTR [rcx],bl
   14000b085:	xor    dl,BYTE PTR [rip+0x81401e0]        # 0x14814b26b
   14000b08b:	add    BYTE PTR [rsp+riz*2],dl
   14000b08e:	or     BYTE PTR [rax],al
   14000b090:	adc    al,0x54
   14000b092:	(bad)  
   14000b093:	add    BYTE PTR [rsp+rsi*1],dl
   14000b096:	(bad)  
   14000b097:	add    BYTE PTR [rdx+rsi*1],dl
   14000b09a:	adc    BYTE PTR [rax+0x1],dh
   14000b09d:	(bad)  
   14000b09f:	add    BYTE PTR [rdi],cl
   14000b0a1:	xor    al,0x6
   14000b0a3:	add    BYTE PTR [rdi],cl
   14000b0a5:	xor    cl,BYTE PTR [rbx]
   14000b0a7:	jo     0x14000b0aa
   14000b0a9:	(bad)  
   14000b0aa:	or     al,BYTE PTR [rax]
   14000b0ac:	(bad)  
   14000b0ad:	xor    al,0x11
   14000b0af:	add    BYTE PTR [rdi],dl
   14000b0b1:	jb     0x14000b0c3
   14000b0b3:	lock (bad) 
   14000b0b5:	loopne 0x14000b0c3
   14000b0b7:	ror    BYTE PTR [rdx],1
   14000b0b9:	ror    BYTE PTR [rax],0x70
   14000b0bc:	(bad)  
   14000b0bd:	(bad)  
   14000b0be:	(bad)  
   14000b0bf:	push   rax
   14000b0c0:	add    DWORD PTR [rsi],eax
   14000b0c2:	add    al,BYTE PTR [rax]
   14000b0c4:	(bad)  
   14000b0c5:	xor    al,BYTE PTR [rdx]
   14000b0c7:	xor    BYTE PTR [rcx],al
   14000b0c9:	sbb    eax,0x741d000c
   14000b0ce:	or     eax,DWORD PTR [rax]
   14000b0d0:	sbb    eax,0x1d000a64
   14000b0d5:	push   rsp
   14000b0d6:	or     DWORD PTR [rax],eax
   14000b0d8:	sbb    eax,0x1d000834
   14000b0dd:	xor    bl,BYTE PTR [rcx]
   14000b0df:	lock (bad) 
   14000b0e1:	loopne 0x14000b0f8
   14000b0e3:	rol    BYTE PTR [rcx],0x14
   14000b0e6:	or     BYTE PTR [rax],al
   14000b0e8:	adc    al,0x64
   14000b0ea:	or     DWORD PTR [rax],eax
   14000b0ec:	adc    al,0x54
   14000b0ee:	or     BYTE PTR [rax],al
   14000b0f0:	adc    al,0x34
   14000b0f2:	(bad)  
   14000b0f3:	add    BYTE PTR [rdx+rsi*1],dl
   14000b0f6:	adc    BYTE PTR [rax+0x1],dh
   14000b0f9:	adc    al,0x6
   14000b0fb:	add    BYTE PTR [rsp+riz*2],dl
   14000b0fe:	(bad)  
   14000b0ff:	add    BYTE PTR [rsp+rsi*1],dl
   14000b102:	(bad)  
   14000b103:	add    BYTE PTR [rdx+rsi*1],dl
   14000b106:	adc    BYTE PTR [rax+0x1],dh
   14000b109:	clts   
   14000b10b:	add    BYTE PTR [rdi],cl
   14000b10d:	fs (bad) 
   14000b10f:	add    BYTE PTR [rdi],cl
   14000b111:	xor    al,0x6
   14000b113:	add    BYTE PTR [rdi],cl
   14000b115:	xor    cl,BYTE PTR [rbx]
   14000b117:	jo     0x14000b11a
   14000b119:	sbb    BYTE PTR [rdx],cl
   14000b11b:	add    BYTE PTR [rax],bl
   14000b11d:	or     al,BYTE PTR fs:[rax]
   14000b120:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000b124:	sbb    BYTE PTR [rax+rcx*1],dh
   14000b127:	add    BYTE PTR [rax],bl
   14000b129:	xor    dl,BYTE PTR [rax+rsi*8]
   14000b12c:	adc    ah,al
   14000b12e:	adc    BYTE PTR [rax+0x1],dh
   14000b131:	or     al,BYTE PTR [rax+rax*1]
   14000b134:	or     dh,BYTE PTR [rax+rcx*1]
   14000b137:	add    BYTE PTR [rdx],cl
   14000b139:	push   rdx
   14000b13a:	(bad)  
   14000b13b:	jo     0x14000b13e
   14000b13d:	clts   
   14000b13f:	add    BYTE PTR [rdi],cl
   14000b141:	or     eax,DWORD PTR fs:[rax]
   14000b144:	sysenter 
   14000b146:	or     BYTE PTR [rax],al
   14000b148:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000b14b:	jo     0x14000b14e
   14000b14d:	(bad)  
   14000b14e:	or     al,BYTE PTR [rax]
   14000b150:	(bad)  
   14000b151:	xor    al,0x10
   14000b153:	add    BYTE PTR [rdi],dl
   14000b155:	jb     0x14000b167
   14000b157:	lock (bad) 
   14000b159:	loopne 0x14000b167
   14000b15b:	ror    BYTE PTR [rdx],1
   14000b15d:	ror    BYTE PTR [rax],0x70
   14000b160:	(bad)  
   14000b161:	(bad)  
   14000b162:	(bad)  
   14000b163:	push   rax
   14000b164:	add    DWORD PTR [rdi],ebx
   14000b166:	or     al,0x0
   14000b168:	(bad)  
   14000b169:	je     0x14000b17a
   14000b16b:	add    BYTE PTR [rdi],bl
   14000b16d:	fs or  eax,0xc341f00
   14000b173:	add    BYTE PTR [rdi],bl
   14000b175:	push   rdx
   14000b176:	sbb    al,dh
   14000b178:	(bad)  
   14000b179:	loopne 0x14000b18f
   14000b17b:	rcl    BYTE PTR [rdx],1
   14000b17d:	rcl    BYTE PTR [rax],0x50
   14000b180:	add    DWORD PTR [rcx],esp
   14000b182:	or     al,BYTE PTR [rax]
   14000b184:	and    DWORD PTR [rax+rdx*1],esi
   14000b187:	add    BYTE PTR [rcx],ah
   14000b189:	jb     0x14000b1a5
   14000b18b:	lock sbb al,ah
   14000b18e:	(bad)  
   14000b18f:	rcl    BYTE PTR [rax+rax*8],1
   14000b192:	adc    dh,BYTE PTR [rax+0x11]
   14000b195:	(bad)  
   14000b196:	adc    BYTE PTR [rax+0x19],dl
   14000b199:	cs or  al,0x0
   14000b19c:	(bad)  
   14000b19d:	sbb    DWORD PTR fs:[rax],eax
   14000b1a0:	(bad)  
   14000b1a1:	push   rsp
   14000b1a2:	sbb    BYTE PTR [rax],al
   14000b1a4:	(bad)  
   14000b1a5:	xor    al,0x17
   14000b1a7:	add    BYTE PTR [rdi],bl
   14000b1a9:	repnz sbb al,dh
   14000b1ac:	(bad)  
   14000b1ad:	loopne 0x14000b1c3
   14000b1af:	rcl    BYTE PTR [rdx],1
   14000b1b1:	rcl    BYTE PTR [rax],0x70
   14000b1b4:	push   0x7000007d
   14000b1b9:	add    BYTE PTR [rax],al
   14000b1bb:	add    BYTE PTR [rcx],al
   14000b1bd:	sbb    al,0xc
   14000b1bf:	add    BYTE PTR [rax+rbp*2],bl
   14000b1c2:	add    al,BYTE PTR [rax]
   14000b1c4:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   14000b1c8:	sbb    BYTE PTR [rsp+rcx*1+0x0],dl
   14000b1cc:	sbb    BYTE PTR [rbx+rcx*1],dh
   14000b1cf:	add    BYTE PTR [rax],bl
   14000b1d1:	push   rdx
   14000b1d2:	adc    al,0xf0
   14000b1d4:	adc    ah,al
   14000b1d6:	adc    BYTE PTR [rax+0x1],dh
   14000b1d9:	sbb    al,0xc
   14000b1db:	add    BYTE PTR [rsp+riz*2],bl
   14000b1de:	or     eax,0xc541c00
   14000b1e3:	add    BYTE PTR [rsp+rsi*1],bl
   14000b1e6:	or     eax,DWORD PTR [rax]
   14000b1e8:	sbb    al,0x32
   14000b1ea:	sbb    al,dh
   14000b1ec:	(bad)  
   14000b1ed:	loopne 0x14000b203
   14000b1ef:	rcl    BYTE PTR [rdx],1
   14000b1f1:	rcl    BYTE PTR [rax],0x70
   14000b1f4:	add    DWORD PTR [rsp+rcx*1],ebx
   14000b1f7:	add    BYTE PTR [rsp+riz*2],bl
   14000b1fa:	ltr    WORD PTR [rsp+rdx*2]
   14000b1fe:	(bad)  
   14000b1ff:	add    BYTE PTR [rsp+rsi*1],bl
   14000b202:	or     eax,0x18521c00
   14000b207:	lock (bad) 
   14000b209:	loopne 0x14000b21f
   14000b20b:	rcl    BYTE PTR [rdx],1
   14000b20d:	rcl    BYTE PTR [rax],0x70
   14000b210:	sbb    DWORD PTR [rax],esi
   14000b212:	or     eax,DWORD PTR [rax]
   14000b214:	(bad)  
   14000b215:	xor    al,0x9b
   14000b217:	add    BYTE PTR [rdi],bl
   14000b219:	add    DWORD PTR [rax+0xef01000],edx
   14000b21f:	loopne 0x14000b22d
   14000b221:	ror    BYTE PTR [rdx],1
   14000b223:	ror    BYTE PTR [rax],0x70
   14000b226:	(bad)  
   14000b227:	(bad)  
   14000b228:	(bad)  
   14000b229:	push   rax
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	push   0x7000007d
   14000b231:	add    al,0x0
   14000b233:	add    BYTE PTR [rcx],bl
   14000b235:	xor    BYTE PTR [rbx],cl
   14000b237:	add    BYTE PTR [rdi],bl
   14000b239:	xor    al,0x6c
   14000b23b:	add    BYTE PTR [rdi],bl
   14000b23d:	add    DWORD PTR [rdx+0x0],esp
   14000b240:	adc    al,dh
   14000b242:	(bad)  
   14000b243:	loopne 0x14000b251
   14000b245:	ror    BYTE PTR [rdx],1
   14000b247:	ror    BYTE PTR [rax],0x70
   14000b24a:	(bad)  
   14000b24b:	(bad)  
   14000b24c:	(bad)  
   14000b24d:	push   rax
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	push   0x7d
   14000b255:	add    eax,DWORD PTR [rax]
   14000b257:	add    BYTE PTR [rcx],bl
   14000b259:	sub    BYTE PTR [rdi],al
   14000b25b:	add    BYTE PTR [rdi],dl
   14000b25d:	xor    al,0x59
   14000b25f:	add    BYTE PTR [rdi],dl
   14000b261:	add    DWORD PTR [rdx+0x0],edx
   14000b264:	or     BYTE PTR [rax+0x7],dh
   14000b267:	(bad)  
   14000b268:	(bad)  
   14000b269:	push   rax
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	push   0xffffffff8000007d
   14000b271:	add    al,BYTE PTR [rax]
   14000b273:	add    BYTE PTR [rcx],al
   14000b275:	(bad)  
   14000b276:	or     al,BYTE PTR [rax]
   14000b278:	(bad)  
   14000b279:	push   rsp
   14000b27a:	adc    BYTE PTR [rax],al
   14000b27c:	(bad)  
   14000b27d:	xor    al,0xf
   14000b27f:	add    BYTE PTR [rsi],dl
   14000b281:	jb     0x14000b295
   14000b283:	lock adc al,ah
   14000b286:	(bad)  
   14000b287:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b28b:	(bad)  
   14000b28c:	sbb    DWORD PTR [rdi],esi
   14000b28e:	(bad)  
   14000b28f:	add    BYTE PTR [rsi],ah
   14000b291:	add    DWORD PTR [rcx+0x11701202],edx
   14000b297:	(bad)  
   14000b298:	adc    BYTE PTR [rax],dh
   14000b29a:	(bad)  
   14000b29c:	push   0x7000007d
   14000b2a1:	adc    al,0x0
   14000b2a3:	add    BYTE PTR [rcx],bl
   14000b2a5:	(bad)  
   14000b2a6:	add    eax,0x4a340d00
   14000b2ab:	add    BYTE PTR [rip+0x6004801],cl        # 0x14600fab2
   14000b2b1:	jo     0x14000b2b3
   14000b2b3:	add    BYTE PTR [rax+0x7d],ch
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	xor    BYTE PTR [rdx],al
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	sbb    DWORD PTR [rip+0x64130007],esp        # 0x1a413b2c9
   14000b2c2:	(bad)  
   14000b2c3:	add    BYTE PTR [rbx],dl
   14000b2c5:	xor    al,0x2e
   14000b2c7:	add    BYTE PTR [rbx],dl
   14000b2c9:	add    DWORD PTR [rax+rax*1],ebp
   14000b2cc:	or     al,0x70
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	clc    
   14000b2d1:	jge    0x14000b2d3
   14000b2d3:	add    BYTE PTR [rdx],al
   14000b2d5:	add    BYTE PTR [rax],al
   14000b2d7:	add    ah,bl
   14000b2d9:	jb     0x14000b2db
   14000b2db:	add    BYTE PTR [rbx+rsi*2],dl
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	add    DWORD PTR [rax],eax
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	adc    al,0x73
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	sub    DWORD PTR [rbx+0x0],esi
   14000b2eb:	add    BYTE PTR [rdi],bh
   14000b2ed:	jae    0x14000b2ef
   14000b2ef:	add    BYTE PTR [rcx],al
   14000b2f1:	add    BYTE PTR [rax],al
   14000b2f3:	add    BYTE PTR [rdi],bh
   14000b2f5:	jae    0x14000b2f7
   14000b2f7:	add    BYTE PTR [rcx+0x1],dl
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	add    DWORD PTR [rcx+rax*1],eax
   14000b2ff:	add    BYTE PTR [rdx+riz*2],al
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	or     DWORD PTR [rcx],ebx
   14000b306:	or     al,BYTE PTR [rax]
   14000b308:	sbb    esp,eax
   14000b30a:	or     eax,DWORD PTR [rax]
   14000b30c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000b310:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000b314:	sbb    DWORD PTR [rax+rcx*1],esi
   14000b317:	add    BYTE PTR [rcx],bl
   14000b319:	push   rdx
   14000b31a:	adc    eax,0x7a56e0
   14000b31f:	add    BYTE PTR [rcx],al
   14000b321:	add    BYTE PTR [rax],al
   14000b323:	add    BYTE PTR [rcx],bh
   14000b325:	jne    0x14000b327
   14000b327:	add    BYTE PTR [rdx+0x46000076],ch
   14000b32d:	jg     0x14000b32f
   14000b32f:	add    BYTE PTR [rdx+0x76],ch
   14000b335:	add    BYTE PTR [rax],al
   14000b337:	add    BYTE PTR [rcx],al
   14000b339:	add    BYTE PTR [rax],al
   14000b33b:	add    BYTE PTR [rcx],cl
   14000b33d:	add    al,0x1
   14000b33f:	add    BYTE PTR [rdx+riz*1],al
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	push   rsi
   14000b345:	jp     0x14000b347
   14000b347:	add    BYTE PTR [rcx],al
   14000b349:	add    BYTE PTR [rax],al
   14000b34b:	add    ah,bl
   14000b34d:	ja     0x14000b34f
   14000b34f:	add    BYTE PTR [rdx],dl
   14000b351:	js     0x14000b353
   14000b353:	add    BYTE PTR [rcx],al
   14000b355:	add    BYTE PTR [rax],al
   14000b357:	add    BYTE PTR [rdx],dl
   14000b359:	js     0x14000b35b
   14000b35b:	add    BYTE PTR [rcx],cl
   14000b35d:	or     al,BYTE PTR [rax+rax*1]
   14000b360:	or     dh,BYTE PTR [rsi+rax*1]
   14000b363:	add    BYTE PTR [rdx],cl
   14000b365:	xor    al,BYTE PTR [rsi]
   14000b367:	jo     0x14000b3bf
   14000b369:	jp     0x14000b36b
   14000b36b:	add    BYTE PTR [rcx],al
   14000b36d:	add    BYTE PTR [rax],al
   14000b36f:	add    ch,bl
   14000b371:	js     0x14000b373
   14000b373:	add    BYTE PTR [rax],dl
   14000b375:	jns    0x14000b377
   14000b377:	add    BYTE PTR [rax+0x7f],dh
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	adc    BYTE PTR [rcx+0x0],bh
   14000b37f:	add    BYTE PTR [rcx],al
   14000b381:	(bad)  
   14000b382:	add    al,BYTE PTR [rax]
   14000b384:	(bad)  
   14000b385:	xor    al,BYTE PTR [rdx]
   14000b387:	push   rax
   14000b388:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740db392
   14000b38e:	or     DWORD PTR [rax],eax
   14000b390:	or     eax,0x1500632
   14000b395:	add    al,0x1
   14000b397:	add    BYTE PTR [rdx+riz*8],al
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	add    DWORD PTR [rdx+rax*1],ecx
   14000b39f:	add    BYTE PTR [rcx+rax*1],cl
   14000b3a2:	adc    DWORD PTR [rax],eax
   14000b3a4:	add    BYTE PTR [rax],al
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	add    DWORD PTR [rax],eax
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	add    BYTE PTR [rax],al
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	add    DWORD PTR [rcx+rax*1],eax
   14000b3b3:	add    BYTE PTR [rdx+rdx*1],al
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	cwde   
   14000b3b9:	mov    eax,0x0
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	add    BYTE PTR [rax],al
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	rex.X mov edx,0x82e80000
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	pop    rax
   14000b3cd:	mov    eax,0x0
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	add    BYTE PTR [rax],al
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	sub    BYTE PTR [rbx-0x7d580000],bh
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	mov    al,0xb6
	...
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	push   rsi
   14000b3ed:	mov    edi,0x81000000
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	cmp    BYTE PTR [rsi+0x0],dh
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	test   BYTE PTR [rdi-0x7f780000],bh
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	add    BYTE PTR [rax+0x0],bh
   14000b40e:	add    BYTE PTR [rax],al
   14000b410:	add    BYTE PTR [rax],al
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b415:	mov    edi,0x82500000
   14000b41a:	add    BYTE PTR [rax],al
   14000b41c:	adc    BYTE PTR [rdi+0x0],dh
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	add    BYTE PTR [rax],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	int3   
   14000b429:	mov    edi,0x81600000
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	shl    BYTE PTR [rdi+0x0],0x0
   14000b437:	add    BYTE PTR [rax],al
   14000b439:	add    BYTE PTR [rax],al
   14000b43b:	add    al,dh
   14000b43d:	mov    edi,0x82100000
   14000b442:	add    BYTE PTR [rax],al
   14000b444:	nop
   14000b445:	mov    bh,0x0
	...
   14000b44f:	add    BYTE PTR [rdx],dl
   14000b451:	rol    BYTE PTR [rax],0x0
   14000b454:	loopne 0x14000b3d7
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	cwde   
   14000b459:	mov    dh,0x0
	...
   14000b463:	add    BYTE PTR [rax+rax*8],dh
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	call   0x11000b4ed
   14000b46d:	mov    ch,0x0
	...
   14000b477:	add    BYTE PTR [rax+rax*8+0x0],bl
   14000b47b:	add    BYTE PTR [rax],ah
   14000b47d:	add    BYTE PTR [rax],0x0
   14000b480:	xor    BYTE PTR [rsi+0x0],0x0
   14000b487:	add    BYTE PTR [rax],al
   14000b489:	add    BYTE PTR [rax],al
   14000b48b:	add    BYTE PTR [rsi-0x2fffff40],al
   14000b491:	add    BYTE PTR [rax],0x0
   14000b494:	add    BYTE PTR [rdi+0x0],dh
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	add    BYTE PTR [rax],al
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	mov    al,0xc0
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	push   rax
   14000b4a5:	add    DWORD PTR [rax],0xb6d800
	...
   14000b4b3:	add    ah,dl
   14000b4b5:	rol    BYTE PTR [rax],0x0
   14000b4b8:	sub    BYTE PTR [rcx-0x48180000],al
	...
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	inc    al
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	cmp    BYTE PTR [rdx-0x48900000],al
	...
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	and    al,cl
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	rol    BYTE PTR [rcx-0x4a080000],0x0
	...
   14000b4ef:	add    BYTE PTR [rax-0x3f],cl
   14000b4f2:	add    BYTE PTR [rax],al
   14000b4f4:	rex.W add BYTE PTR [rax],0x0
   14000b4f8:	sub    BYTE PTR [rsi+0x0],dh
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	add    BYTE PTR [rax],al
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	push   0x780000c1
   14000b509:	add    BYTE PTR [rax],0x0
   14000b50c:	and    BYTE PTR [rax+0x0],bh
   14000b512:	add    BYTE PTR [rax],al
   14000b514:	add    BYTE PTR [rax],al
   14000b516:	add    BYTE PTR [rax],al
   14000b518:	mov    al,cl
   14000b51a:	add    BYTE PTR [rax],al
   14000b51c:	jo     0x14000b4a0
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	shl    BYTE PTR [rbp+0x0],0x0
   14000b527:	add    BYTE PTR [rax],al
   14000b529:	add    BYTE PTR [rax],al
   14000b52b:	add    BYTE PTR [rsi+0x100000c1],ch
   14000b531:	add    BYTE PTR [rax],0x0
   14000b534:	push   0xb6
   14000b539:	add    BYTE PTR [rax],al
   14000b53b:	add    BYTE PTR [rax],al
   14000b53d:	add    BYTE PTR [rax],al
   14000b53f:	add    dl,dl
   14000b541:	rol    DWORD PTR [rax],0x0
   14000b544:	mov    eax,0x58000080
   14000b549:	mov    bh,0x0
	...
   14000b553:	add    BYTE PTR [rdx+rax*8],dh
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	test   al,0x81
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	mov    al,0xb5
	...
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	pop    rax
   14000b569:	ret    0x0
   14000b56c:	add    BYTE PTR [rax-0x47b80000],al
	...
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	js     0x14000b540
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	cwde   
   14000b581:	(bad)  
   14000b582:	add    BYTE PTR [rax],al
   14000b584:	test   al,0xb7
	...
   14000b58e:	add    BYTE PTR [rax],al
   14000b590:	mov    eax,0xf80000c2
   14000b595:	add    DWORD PTR [rax],0x0
	...
   14000b5af:	add    BYTE PTR [rax],al
   14000b5b1:	ret    0x0
	...
   14000b5c0:	fdivr  DWORD PTR [rsi+0x0]
	...
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b5d1:	mov    esp,0x0
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	(bad)  
   14000b5d9:	mov    esi,0x0
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	mov    BYTE PTR [rbp+0x0],bh
   14000b5e6:	add    BYTE PTR [rax],al
   14000b5e8:	sbb    al,0xbc
	...
   14000b5f6:	add    BYTE PTR [rax],al
   14000b5f8:	push   0xbe
   14000b5fd:	add    BYTE PTR [rax],al
   14000b5ff:	add    dl,bl
   14000b601:	mov    ebp,0x0
   14000b606:	add    BYTE PTR [rax],al
   14000b608:	cld    
   14000b609:	mov    ebp,0x0
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	or     BYTE PTR [rsi+0x0],bh
   14000b616:	add    BYTE PTR [rax],al
   14000b618:	and    bh,BYTE PTR [rdi+0x0]
	...
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	es mov esi,0x0
	...
   14000b636:	add    BYTE PTR [rax],al
   14000b638:	push   rsi
   14000b639:	mov    ebx,0x0
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	pop    rsi
   14000b641:	mov    esp,0x0
   14000b646:	add    BYTE PTR [rax],al
   14000b648:	(bad)  
   14000b649:	mov    ebx,0x0
   14000b64e:	add    BYTE PTR [rax],al
   14000b650:	outs   dx,BYTE PTR ds:[rsi]
   14000b651:	mov    ebx,0x0
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	int3   
   14000b659:	mov    ebp,0x0
	...
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	rex.WX movabs rdi,0xbf14000000000000
	...
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	ret    0xbc
   14000b683:	add    BYTE PTR [rax],al
   14000b685:	add    BYTE PTR [rax],al
   14000b687:	add    BYTE PTR [rdx-0x42],bl
	...
   14000b696:	add    BYTE PTR [rax],al
   14000b698:	stos   BYTE PTR es:[rdi],al
   14000b699:	mov    esi,0x0
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	in     al,0xbb
	...
   14000b6ae:	add    BYTE PTR [rax],al
   14000b6b0:	movabs rbx,0xbb36000000000000
   14000b6ba:	add    BYTE PTR [rax],al
   14000b6bc:	add    BYTE PTR [rax],al
   14000b6be:	add    BYTE PTR [rax],al
   14000b6c0:	call   0x14000b783
   14000b6c5:	add    BYTE PTR [rax],al
   14000b6c7:	add    BYTE PTR [rsp+rdi*4],al
	...
   14000b6d6:	add    BYTE PTR [rax],al
   14000b6d8:	lock mov esp,0x0
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b6e1:	mov    ebp,0x0
   14000b6e6:	add    BYTE PTR [rax],al
   14000b6e8:	(bad)  
   14000b6e9:	mov    ebp,0x0
   14000b6ee:	add    BYTE PTR [rax],al
   14000b6f0:	mov    eax,0xbd
	...
   14000b6fd:	add    BYTE PTR [rax],al
   14000b6ff:	add    dh,dl
   14000b701:	mov    esp,0x0
	...
   14000b70e:	add    BYTE PTR [rax],al
   14000b710:	sub    al,0xbc
   14000b712:	add    BYTE PTR [rax],al
   14000b714:	add    BYTE PTR [rax],al
   14000b716:	add    BYTE PTR [rax],al
   14000b718:	ds mov esp,0x0
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	movabs al,ds:0x8e000000000000bb
   14000b729:	mov    ebx,0x0
   14000b72e:	add    BYTE PTR [rax],al
   14000b730:	call   0x14000b7f2
   14000b735:	add    BYTE PTR [rax],al
   14000b737:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   14000b73b:	add    BYTE PTR [rax],al
   14000b73d:	add    BYTE PTR [rax],al
   14000b73f:	add    BYTE PTR [rsp+rdi*4+0x0],al
   14000b746:	add    BYTE PTR [rax],al
   14000b748:	xchg   edx,eax
   14000b749:	mov    esp,0x0
	...
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	adc    dl,al
   14000b75a:	add    BYTE PTR [rax],al
   14000b75c:	add    BYTE PTR [rax],al
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	repnz rol DWORD PTR [rax],0x0
	...
   14000b770:	je     0x14000b72f
   14000b772:	add    BYTE PTR [rax],al
   14000b774:	add    BYTE PTR [rax],al
   14000b776:	add    BYTE PTR [rax],al
   14000b778:	pop    rdx
   14000b779:	mov    ebp,0x0
   14000b77e:	add    BYTE PTR [rax],al
   14000b780:	rex.RX mov ebp,0x0
	...
   14000b78e:	add    BYTE PTR [rax],al
   14000b790:	(bad)  
   14000b791:	mov    ebx,0x0
   14000b796:	add    BYTE PTR [rax],al
   14000b798:	je     0x14000b758
	...
   14000b7a6:	add    BYTE PTR [rax],al
   14000b7a8:	lods   al,BYTE PTR ds:[rsi]
   14000b7a9:	ret    0x0
   14000b7ac:	add    BYTE PTR [rax],al
   14000b7ae:	add    BYTE PTR [rax],al
   14000b7b0:	movabs al,ds:0xc2
   14000b7b9:	add    BYTE PTR [rax],al
   14000b7bb:	add    BYTE PTR [rax],al
   14000b7bd:	add    BYTE PTR [rax],al
   14000b7bf:	add    BYTE PTR [rsi+rdi*4],dh
   14000b7c2:	add    BYTE PTR [rax],al
   14000b7c4:	add    BYTE PTR [rax],al
   14000b7c6:	add    BYTE PTR [rax],al
   14000b7c8:	cmp    bh,BYTE PTR [rdi+0x0]
   14000b7ce:	add    BYTE PTR [rax],al
   14000b7d0:	mov    ah,0xbb
   14000b7d2:	add    BYTE PTR [rax],al
   14000b7d4:	add    BYTE PTR [rax],al
   14000b7d6:	add    BYTE PTR [rax],al
   14000b7d8:	rex.R mov esi,0x0
	...
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	sbb    al,0xbd
   14000b7ea:	add    BYTE PTR [rax],al
   14000b7ec:	add    BYTE PTR [rax],al
   14000b7ee:	add    BYTE PTR [rax],al
   14000b7f0:	ss mov ebp,0x0
	...
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	mov    esp,0xbb
   14000b805:	add    BYTE PTR [rax],al
   14000b807:	add    BYTE PTR [rsi-0x44],cl
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	add    BYTE PTR [rax],al
   14000b80e:	add    BYTE PTR [rax],al
   14000b810:	cmp    BYTE PTR [rbx+0x0],0x0
	...
   14000b81f:	add    BYTE PTR [rsi+rdi*4+0x0],bh
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	mov    bh,BYTE PTR [rsi+0x0]
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	clc    
   14000b831:	mov    esi,0x0
   14000b836:	add    BYTE PTR [rax],al
   14000b838:	xor    BYTE PTR [rdi+0x0],bh
	...
   14000b846:	add    BYTE PTR [rax],al
   14000b848:	and    dl,al
	...
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	(bad)  
   14000b859:	mov    edx,0x0
   14000b85e:	add    BYTE PTR [rax],al
   14000b860:	cmp    BYTE PTR [rdx+0x0],0x0
   14000b867:	add    BYTE PTR [rax],dl
   14000b869:	mov    ebx,0x0
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	cwde   
   14000b871:	mov    edx,0x0
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	mov    dh,0xba
   14000b87a:	add    BYTE PTR [rax],al
   14000b87c:	add    BYTE PTR [rax],al
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	hlt    
   14000b881:	mov    edx,0x0
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	(bad)  
   14000b889:	mov    edx,0x0
	...
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	rex.WRX movabs rdx,0xba36000000000000
   14000b8a2:	add    BYTE PTR [rax],al
   14000b8a4:	add    BYTE PTR [rax],al
   14000b8a6:	add    BYTE PTR [rax],al
   14000b8a8:	sub    al,0xba
   14000b8aa:	add    BYTE PTR [rax],al
   14000b8ac:	add    BYTE PTR [rax],al
   14000b8ae:	add    BYTE PTR [rax],al
   14000b8b0:	adc    al,0xba
   14000b8b2:	add    BYTE PTR [rax],al
   14000b8b4:	add    BYTE PTR [rax],al
   14000b8b6:	add    BYTE PTR [rax],al
   14000b8b8:	or     BYTE PTR [rdx+0x0],bh
   14000b8be:	add    BYTE PTR [rax],al
   14000b8c0:	hlt    
   14000b8c1:	mov    ecx,0x0
   14000b8c6:	add    BYTE PTR [rax],al
   14000b8c8:	(bad)  
   14000b8c9:	mov    ecx,0x0
   14000b8ce:	add    BYTE PTR [rax],al
   14000b8d0:	loop   0x14000b88b
   14000b8d2:	add    BYTE PTR [rax],al
   14000b8d4:	add    BYTE PTR [rax],al
   14000b8d6:	add    BYTE PTR [rax],al
   14000b8d8:	fidivr DWORD PTR [rcx+0x0]
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	enter  0xb9,0x0
   14000b8e4:	add    BYTE PTR [rax],al
   14000b8e6:	add    BYTE PTR [rax],al
   14000b8e8:	mov    dh,0xb9
   14000b8ea:	add    BYTE PTR [rax],al
   14000b8ec:	add    BYTE PTR [rax],al
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	test   al,0xb9
   14000b8f2:	add    BYTE PTR [rax],al
   14000b8f4:	add    BYTE PTR [rax],al
   14000b8f6:	add    BYTE PTR [rax],al
   14000b8f8:	(bad)  
   14000b8f9:	mov    ecx,0x0
   14000b8fe:	add    BYTE PTR [rax],al
   14000b900:	mov    WORD PTR [rcx+0x0],?
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	(bad)  
   14000b909:	mov    ecx,0x0
   14000b90e:	add    BYTE PTR [rax],al
   14000b910:	jb     0x14000b8cb
   14000b912:	add    BYTE PTR [rax],al
   14000b914:	add    BYTE PTR [rax],al
   14000b916:	add    BYTE PTR [rax],al
   14000b918:	push   0xb9
   14000b91d:	add    BYTE PTR [rax],al
   14000b91f:	add    ah,ah
   14000b921:	ret    0x0
   14000b924:	add    BYTE PTR [rax],al
   14000b926:	add    BYTE PTR [rax],al
   14000b928:	bnd ret 0x0
   14000b92c:	add    BYTE PTR [rax],al
   14000b92e:	add    BYTE PTR [rax],al
   14000b930:	inc    dl
   14000b932:	add    BYTE PTR [rax],al
   14000b934:	add    BYTE PTR [rax],al
   14000b936:	add    BYTE PTR [rax],al
   14000b938:	or     bl,al
   14000b93a:	add    BYTE PTR [rax],al
   14000b93c:	add    BYTE PTR [rax],al
   14000b93e:	add    BYTE PTR [rax],al
   14000b940:	adc    bl,al
   14000b942:	add    BYTE PTR [rax],al
   14000b944:	add    BYTE PTR [rax],al
   14000b946:	add    BYTE PTR [rax],al
   14000b948:	sbb    al,0xc3
   14000b94a:	add    BYTE PTR [rax],al
   14000b94c:	add    BYTE PTR [rax],al
   14000b94e:	add    BYTE PTR [rax],al
   14000b950:	and    al,0xc3
   14000b952:	add    BYTE PTR [rax],al
   14000b954:	add    BYTE PTR [rax],al
   14000b956:	add    BYTE PTR [rax],al
   14000b958:	cs ret 
	...
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a3741ce5
   14000b96e:	push   0xfffffffff6000072
   14000b973:	add    ebx,DWORD PTR [rdi+0x77]
   14000b976:	jae    0x14000b9e8
   14000b978:	ins    BYTE PTR es:[rdi],dx
   14000b979:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   14000b981:	add    BYTE PTR [rbp+0x4],al
   14000b984:	data16 jo 0x14000b9f9
   14000b987:	imul   ebp,DWORD PTR [rsi+0x74],0x3690066
   14000b98e:	pop    rdi
   14000b98f:	jbe    0x14000ba04
   14000b991:	outs   dx,BYTE PTR ds:[rsi]
   14000b992:	ja     0x14000ba04
   14000b994:	jb     0x14000b9ff
   14000b996:	outs   dx,BYTE PTR ds:[rsi]
   14000b997:	je     0x14000b9ff
   14000b999:	add    BYTE PTR [rbp+0x0],dl
   14000b99c:	pop    rdi
   14000b99d:	pop    rax
   14000b99e:	movsxd esi,DWORD PTR [rax+0x74]
   14000b9a1:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b9aa:	pop    rdi
   14000b9ab:	(bad)  
   14000b9ac:	ins    DWORD PTR es:[rdi],dx
   14000b9ad:	jae    0x14000ba16
   14000b9af:	pop    rdi
   14000b9b0:	gs js  0x14000ba1c
   14000b9b3:	je     0x14000b9b5
   14000b9b5:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000b9bb:	addr32 gs je 0x14000ba2c
   14000b9bf:	(bad)  
   14000b9c0:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b9c7:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000b9cd:	gs je  0x14000ba2f
   14000b9d0:	(bad)  
   14000b9d1:	jo     0x14000ba43
   14000b9d3:	pop    rdi
   14000b9d4:	je     0x14000ba4f
   14000b9d6:	jo     0x14000ba3d
   14000b9d8:	add    BYTE PTR [rax],al
   14000b9da:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b9e1:	add    BYTE PTR [rsi],cl
   14000b9e3:	add    DWORD PTR [rdi+0x65],ebx
   14000b9e6:	js     0x14000ba51
   14000b9e8:	je     0x14000b9ea
   14000b9ea:	rol    DWORD PTR [rax],0x5f
   14000b9ed:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b9f0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b9f8:	jae    0x14000ba5f
   14000b9fa:	je     0x14000ba71
   14000b9fc:	jae    0x14000ba63
   14000b9fe:	jb     0x14000ba6d
   14000ba00:	(bad)  
   14000ba01:	je     0x14000ba6b
   14000ba03:	gs jb  0x14000ba78
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	jge    0x14000ba0b
   14000ba0a:	pop    rdi
   14000ba0b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000ba12:	ins    DWORD PTR es:[rdi],dx
   14000ba13:	add    BYTE PTR [rdi+0x0],dl
   14000ba16:	pop    rdi
   14000ba17:	pop    rdi
   14000ba18:	rex.XB pop r15
   14000ba1a:	jae    0x14000ba8c
   14000ba1c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000ba20:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000ba27:	ins    BYTE PTR es:[rdi],dx
   14000ba28:	gs jb  0x14000ba2b
   14000ba2b:	add    BYTE PTR [rdi],ah
   14000ba2d:	add    DWORD PTR [rdi+0x66],ebx
   14000ba30:	ins    DWORD PTR es:[rdi],dx
   14000ba31:	outs   dx,DWORD PTR ds:[rsi]
   14000ba32:	fs add BYTE PTR gs:[rax],al
   14000ba36:	rol    BYTE PTR [rax],cl
   14000ba38:	pop    rdi
   14000ba39:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ba3c:	ins    DWORD PTR es:[rdi],dx
   14000ba3d:	outs   dx,DWORD PTR ds:[rsi]
   14000ba3e:	fs add BYTE PTR gs:[rax],al
   14000ba42:	ins    DWORD PTR es:[rdi],dx
   14000ba43:	jae    0x14000babb
   14000ba45:	movsxd esi,DWORD PTR [rdx+0x74]
   14000ba48:	cs fs ins BYTE PTR es:[rdi],dx
   14000ba4b:	ins    BYTE PTR es:[rdi],dx
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	(bad)  
   14000ba4f:	add    BYTE PTR [rdi],bh
   14000ba51:	je     0x14000bab8
   14000ba53:	jb     0x14000bac2
   14000ba55:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000ba5c:	pop    rcx
   14000ba5d:	pop    r8
   14000ba5f:	pop    rax
   14000ba60:	pop    rdx
   14000ba61:	add    BYTE PTR [rsi],al
   14000ba63:	add    BYTE PTR [rax+rsi*2+0x52],cl
   14000ba67:	gs ins BYTE PTR es:[rdi],dx
   14000ba69:	gs (bad) 
   14000ba6b:	jae    0x14000bad2
   14000ba6d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ba6f:	jae    0x14000bae5
   14000ba71:	(bad)  
   14000ba72:	ins    BYTE PTR es:[rdi],dx
   14000ba73:	ins    BYTE PTR es:[rdi],dx
   14000ba74:	(bad)  
   14000ba75:	je     0x14000bae0
   14000ba77:	outs   dx,DWORD PTR ds:[rsi]
   14000ba78:	outs   dx,BYTE PTR ds:[rsi]
   14000ba79:	rex.WRB jne 0x14000baf0
   14000ba7c:	gs js  0x14000ba7f
   14000ba7f:	add    BYTE PTR [rip+0x64705500],cl        # 0x1a4710f85
   14000ba85:	(bad)  
   14000ba86:	je     0x14000baed
   14000ba88:	push   rax
   14000ba89:	gs jb  0x14000baf2
   14000ba8c:	rex.WRX (bad) 
   14000ba8e:	ins    DWORD PTR es:[rdi],dx
   14000ba8f:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x73],0x4000057
   14000ba99:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000ba9d:	fs push rax
   14000ba9f:	gs jb  0x14000bb08
   14000baa2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000baa4:	jne    0x14000bb14
   14000baa6:	je     0x14000bb0d
   14000baa8:	jb     0x14000bafe
   14000baaa:	gs js  0x14000bb21
   14000baad:	push   rbx
   14000baae:	je     0x14000bb22
   14000bab0:	imul   ebp,DWORD PTR [rsi+0x67],0x5005773
   14000bab7:	add    BYTE PTR [rax+rsi*2+0x41],cl
   14000babb:	movsxd esi,DWORD PTR [rcx+0x75]
   14000babe:	imul   esi,DWORD PTR [rdx+0x65],0x74736e49
   14000bac5:	(bad)  
   14000bac6:	ins    BYTE PTR es:[rdi],dx
   14000bac7:	ins    BYTE PTR es:[rdi],dx
   14000bac8:	(bad)  
   14000bac9:	je     0x14000bb34
   14000bacb:	outs   dx,DWORD PTR ds:[rsi]
   14000bacc:	outs   dx,BYTE PTR ds:[rsi]
   14000bacd:	rex.WRB jne 0x14000bb44
   14000bad0:	gs js  0x14000bad3
   14000bad3:	add    BYTE PTR [rdi],al
   14000bad5:	add    BYTE PTR [rdx+0x65],dl
   14000bad8:	jae    0x14000bb4e
   14000bada:	outs   dx,DWORD PTR ds:[rsi]
   14000badb:	jb     0x14000bb42
   14000badd:	push   rax
   14000bade:	gs jb  0x14000bb47
   14000bae1:	push   rdx
   14000bae2:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72467972
   14000baeb:	outs   dx,DWORD PTR ds:[rsi]
   14000baec:	ins    DWORD PTR es:[rdi],dx
   14000baed:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x0
   14000baf6:	rex.X (bad) 
   14000baf8:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000bafb:	jo     0x14000bb4d
   14000bafd:	gs jb  0x14000bb66
   14000bb00:	push   rdx
   14000bb01:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f547972
   14000bb0a:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x53000900
   14000bb13:	gs je  0x14000bb69
   14000bb16:	gs jb  0x14000bb8f
   14000bb19:	imul   esp,DWORD PTR [rbx+0x65],0x72547341
   14000bb20:	jne    0x14000bb95
   14000bb22:	je     0x14000bb89
   14000bb24:	fs push rdi
   14000bb26:	add    BYTE PTR [rax],al
   14000bb28:	ins    BYTE PTR es:[rdi],dx
   14000bb29:	outs   dx,DWORD PTR ds:[rsi]
   14000bb2a:	(bad)  
   14000bb2b:	fs jo  0x14000bb93
   14000bb2e:	jb     0x14000bb96
   14000bb30:	cs fs ins BYTE PTR es:[rdi],dx
   14000bb33:	ins    BYTE PTR es:[rdi],dx
   14000bb34:	add    BYTE PTR [rax],al
   14000bb36:	add    eax,0x74654700
   14000bb3b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bb3d:	ins    DWORD PTR es:[rdi],dx
   14000bb3e:	ins    DWORD PTR es:[rdi],dx
   14000bb3f:	(bad)  
   14000bb40:	outs   dx,BYTE PTR ds:[rsi]
   14000bb41:	imul   r13,QWORD PTR fs:[rsi+0x65],0x100057
   14000bb4a:	push   rbx
   14000bb4b:	gs (bad) 
   14000bb4d:	jb     0x14000bbb2
   14000bb4f:	push   0x68746150
   14000bb54:	push   rdi
   14000bb55:	add    BYTE PTR [rdx],al
   14000bb57:	add    BYTE PTR [rax+0x65],cl
   14000bb5a:	(bad)  
   14000bb5b:	jo     0x14000bb9e
   14000bb5d:	ins    BYTE PTR es:[rdi],dx
   14000bb5e:	ins    BYTE PTR es:[rdi],dx
   14000bb5f:	outs   dx,DWORD PTR ds:[rsi]
   14000bb60:	movsxd eax,DWORD PTR [rax]
   14000bb62:	(bad)  
   14000bb63:	add    BYTE PTR [rax+0x65],cl
   14000bb66:	(bad)  
   14000bb67:	jo     0x14000bbaf
   14000bb69:	jb     0x14000bbd0
   14000bb6b:	add    BYTE PTR gs:[rax],al
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	rex.RXB
   14000bb71:	gs je  0x14000bbc4
   14000bb74:	jb     0x14000bbe5
   14000bb76:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bb79:	jae    0x14000bbc3
   14000bb7b:	gs (bad) 
   14000bb7d:	jo     0x14000bb7f
   14000bb7f:	add    BYTE PTR [rsi],al
   14000bb81:	add    BYTE PTR [rbp+0x76],al
   14000bb84:	outs   dx,BYTE PTR gs:[rsi]
   14000bb86:	je     0x14000bbdf
   14000bb88:	jb     0x14000bbf3
   14000bb8a:	je     0x14000bbf1
   14000bb8c:	add    BYTE PTR [rax],al
   14000bb8e:	add    eax,DWORD PTR [rax]
   14000bb90:	push   rdx
   14000bb91:	gs addr32 rex.XB jb 0x14000bbfb
   14000bb96:	(bad)  
   14000bb97:	je     0x14000bbfe
   14000bb99:	rex.WXB
   14000bb9a:	gs jns 0x14000bbe2
   14000bb9d:	js     0x14000bbf6
   14000bb9f:	add    BYTE PTR [rbx],ah
   14000bba1:	add    BYTE PTR [rdx+0x65],dl
   14000bba4:	addr32 push rcx
   14000bba6:	jne    0x14000bc0d
   14000bba8:	jb     0x14000bc23
   14000bbaa:	push   rsi
   14000bbab:	(bad)  
   14000bbac:	ins    BYTE PTR es:[rdi],dx
   14000bbad:	jne    0x14000bc14
   14000bbaf:	rex.RB js 0x14000bc09
   14000bbb2:	add    BYTE PTR [rax],al
   14000bbb4:	sub    eax,0x656c5300
   14000bbb9:	gs jo  0x14000bbbc
   14000bbbc:	add    eax,0x65764500
   14000bbc1:	outs   dx,BYTE PTR ds:[rsi]
   14000bbc2:	je     0x14000bc19
   14000bbc4:	outs   dx,BYTE PTR ds:[rsi]
   14000bbc5:	jb     0x14000bc2c
   14000bbc7:	imul   esi,DWORD PTR [ebx+0x74],0x6007265
   14000bbcf:	add    BYTE PTR [rbp+0x75],cl
   14000bbd2:	ins    BYTE PTR es:[rdi],dx
   14000bbd3:	je     0x14000bc3e
   14000bbd5:	rex.X jns 0x14000bc4c
   14000bbd8:	gs push rsp
   14000bbda:	outs   dx,DWORD PTR ds:[rsi]
   14000bbdb:	push   rdi
   14000bbdc:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000bbe4:	cmp    DWORD PTR [rax],eax
   14000bbe6:	push   rbx
   14000bbe7:	gs je  0x14000bc3e
   14000bbea:	push   0x64616572
   14000bbef:	push   rax
   14000bbf0:	jb     0x14000bc57
   14000bbf2:	data16 gs jb 0x14000bc68
   14000bbf6:	gs fs push rbp
   14000bbf9:	rex.WB
   14000bbfa:	rex.WR (bad) 
   14000bbfc:	outs   dx,BYTE PTR ds:[rsi]
   14000bbfd:	addr32 jne 0x14000bc61
   14000bc00:	addr32 gs jae 0x14000bc04
   14000bc04:	(bad)  
   14000bc05:	add    BYTE PTR [rdi+0x65],al
   14000bc08:	je     0x14000bc4d
   14000bc0a:	jne    0x14000bc7e
   14000bc0c:	jb     0x14000bc73
   14000bc0e:	outs   dx,BYTE PTR ds:[rsi]
   14000bc0f:	je     0x14000bc55
   14000bc11:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000bc18:	jns    0x14000bc71
   14000bc1a:	add    BYTE PTR [rax],al
   14000bc1c:	or     eax,0x74655300
   14000bc21:	rex.WR (bad) 
   14000bc23:	jae    0x14000bc99
   14000bc25:	rex.RB jb 0x14000bc9a
   14000bc28:	outs   dx,DWORD PTR ds:[rsi]
   14000bc29:	jb     0x14000bc2b
   14000bc2b:	add    BYTE PTR [rbx],cl
   14000bc2d:	add    BYTE PTR [rdx+0x65],dl
   14000bc30:	addr32 rex.R
   14000bc32:	gs ins BYTE PTR es:[rdi],dx
   14000bc34:	gs je  0x14000bc9c
   14000bc37:	push   rsi
   14000bc38:	(bad)  
   14000bc39:	ins    BYTE PTR es:[rdi],dx
   14000bc3a:	jne    0x14000bca1
   14000bc3c:	push   rdi
   14000bc3d:	add    BYTE PTR [rsi],bl
   14000bc3f:	add    BYTE PTR [rdx+0x65],dl
   14000bc42:	addr32 rex.WRXB jo 0x14000bcab
   14000bc46:	outs   dx,BYTE PTR ds:[rsi]
   14000bc47:	rex.WXB
   14000bc48:	gs jns 0x14000bc90
   14000bc4b:	js     0x14000bca4
   14000bc4d:	add    BYTE PTR [rbx],al
   14000bc4f:	add    BYTE PTR [rbp+0x76],al
   14000bc52:	outs   dx,BYTE PTR gs:[rsi]
   14000bc54:	je     0x14000bca8
   14000bc56:	imul   esi,DWORD PTR gs:[ebx+0x74],0xa007265
   14000bc5f:	add    BYTE PTR [rax+0x65],cl
   14000bc62:	(bad)  
   14000bc63:	jo     0x14000bcb8
   14000bc65:	gs je  0x14000bcb1
   14000bc68:	outs   dx,BYTE PTR ds:[rsi]
   14000bc69:	outs   dx,WORD PTR ds:[rsi]
   14000bc6b:	jb     0x14000bcda
   14000bc6d:	(bad)  
   14000bc6e:	je     0x14000bcd9
   14000bc70:	outs   dx,DWORD PTR ds:[rsi]
   14000bc71:	outs   dx,BYTE PTR ds:[rsi]
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	(bad)  
   14000bc75:	add    BYTE PTR [rdx+0x65],dl
   14000bc78:	rex.RB outs dx,BYTE PTR ds:[esi]
   14000bc7b:	jne    0x14000bcea
   14000bc7d:	rex.WXB
   14000bc7e:	gs jns 0x14000bcc6
   14000bc81:	js     0x14000bcda
   14000bc83:	add    BYTE PTR [rax],al
   14000bc85:	add    BYTE PTR [rdx+0x65],dl
   14000bc88:	rex.XB ins BYTE PTR es:[edi],dx
   14000bc8b:	outs   dx,DWORD PTR ds:[rsi]
   14000bc8c:	jae    0x14000bcf3
   14000bc8e:	rex.WXB
   14000bc8f:	gs jns 0x14000bc92
   14000bc92:	sub    al,0x0
   14000bc94:	push   rdx
   14000bc95:	gs addr32 push rbx
   14000bc98:	gs je  0x14000bcf1
   14000bc9b:	(bad)  
   14000bc9c:	ins    BYTE PTR es:[rdi],dx
   14000bc9d:	jne    0x14000bd04
   14000bc9f:	rex.RB js 0x14000bcf9
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	lldt   WORD PTR [rbx+0x65]
   14000bca8:	je     0x14000bcff
   14000bcaa:	outs   dx,BYTE PTR ds:[rsi]
   14000bcab:	push   0x6c646e61
   14000bcb0:	gs fs rex.RB js 0x14000bd18
   14000bcb5:	gs jo  0x14000bd2c
   14000bcb8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000bcbf:	gs jb  0x14000bcc2
   14000bcc2:	adc    eax,DWORD PTR [rax]
   14000bcc4:	rex.RXB
   14000bcc5:	gs je  0x14000bd15
   14000bcc8:	outs   dx,DWORD PTR ds:[rsi]
   14000bcc9:	fs jne 0x14000bd38
   14000bccc:	gs rex.W (bad) 
   14000bccf:	outs   dx,BYTE PTR ds:[rsi]
   14000bcd0:	fs ins BYTE PTR es:[rdi],dx
   14000bcd2:	gs push rdi
   14000bcd4:	add    BYTE PTR [rax],al
   14000bcd6:	add    BYTE PTR [rax],al
   14000bcd8:	push   rcx
   14000bcd9:	jne    0x14000bd40
   14000bcdb:	jb     0x14000bd56
   14000bcdd:	push   rax
   14000bcde:	gs jb  0x14000bd47
   14000bce1:	outs   dx,DWORD PTR ds:[rsi]
   14000bce2:	jb     0x14000bd51
   14000bce4:	(bad)  
   14000bce5:	outs   dx,BYTE PTR ds:[rsi]
   14000bce6:	movsxd esp,DWORD PTR [rbp+0x43]
   14000bce9:	outs   dx,DWORD PTR ds:[rsi]
   14000bcea:	jne    0x14000bd5a
   14000bcec:	je     0x14000bd53
   14000bcee:	jb     0x14000bcf0
   14000bcf0:	or     eax,0x74654700
   14000bcf5:	rex.XB jne 0x14000bd6a
   14000bcf8:	jb     0x14000bd5f
   14000bcfa:	outs   dx,BYTE PTR ds:[rsi]
   14000bcfb:	je     0x14000bd4d
   14000bcfd:	jb     0x14000bd6e
   14000bcff:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bd02:	jae    0x14000bd4d
   14000bd04:	add    BYTE PTR fs:[rcx],dl
   14000bd07:	add    BYTE PTR [rdi+0x65],al
   14000bd0a:	je     0x14000bd4f
   14000bd0c:	jne    0x14000bd80
   14000bd0e:	jb     0x14000bd75
   14000bd10:	outs   dx,BYTE PTR ds:[rsi]
   14000bd11:	je     0x14000bd67
   14000bd13:	push   0x64616572
   14000bd18:	rex.WB
   14000bd19:	add    BYTE PTR fs:[rax],al
   14000bd1c:	adc    al,0x0
   14000bd1e:	rex.RXB
   14000bd1f:	gs je  0x14000bd75
   14000bd22:	jns    0x14000bd97
   14000bd24:	je     0x14000bd8b
   14000bd26:	ins    DWORD PTR es:[rdi],dx
   14000bd27:	push   rsp
   14000bd28:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000bd2f:	ins    BYTE PTR es:[rdi],dx
   14000bd30:	gs push rsp
   14000bd32:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000bd39:	gs je  0x14000bd90
   14000bd3c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000bd43:	je     0x14000bd45
   14000bd45:	add    BYTE PTR [rdx],al
   14000bd47:	add    BYTE PTR [rdx+0x74],dl
   14000bd4a:	ins    BYTE PTR es:[rdi],dx
   14000bd4b:	rex.XB (bad) 
   14000bd4d:	jo     0x14000bdc3
   14000bd4f:	jne    0x14000bdc3
   14000bd51:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000bd54:	outs   dx,BYTE PTR ds:[rsi]
   14000bd55:	je     0x14000bdbc
   14000bd57:	js     0x14000bdcd
   14000bd59:	add    BYTE PTR [rcx],cl
   14000bd5b:	add    BYTE PTR [rdx+0x74],dl
   14000bd5e:	ins    BYTE PTR es:[rdi],dx
   14000bd5f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000bd61:	outs   dx,DWORD PTR ds:[rsi]
   14000bd62:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000bd66:	jne    0x14000bdd6
   14000bd68:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000bd6c:	outs   dx,BYTE PTR ds:[rsi]
   14000bd6d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000bd6f:	je     0x14000bde3
   14000bd71:	jns    0x14000bd73
   14000bd73:	add    BYTE PTR [rdi],cl
   14000bd75:	add    BYTE PTR [rdx+0x74],dl
   14000bd78:	ins    BYTE PTR es:[rdi],dx
   14000bd79:	push   rsi
   14000bd7a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000bd81:	outs   dx,BYTE PTR ds:[rsi]
   14000bd82:	ja     0x14000bded
   14000bd84:	outs   dx,BYTE PTR ds:[rsi]
   14000bd85:	add    BYTE PTR fs:[rax],al
   14000bd88:	adc    DWORD PTR [rax],eax
   14000bd8a:	push   rbp
   14000bd8b:	outs   dx,BYTE PTR ds:[rsi]
   14000bd8c:	push   0x6c646e61
   14000bd91:	gs fs rex.RB js 0x14000bdf9
   14000bd96:	gs jo  0x14000be0d
   14000bd99:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000bda0:	gs jb  0x14000bda3
   14000bda3:	add    BYTE PTR [rax+rax*1],cl
   14000bda6:	rex.RXB
   14000bda7:	gs je  0x14000bded
   14000bdaa:	jne    0x14000be1e
   14000bdac:	jb     0x14000be13
   14000bdae:	outs   dx,BYTE PTR ds:[rsi]
   14000bdaf:	je     0x14000be01
   14000bdb1:	jb     0x14000be22
   14000bdb3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bdb6:	jae    0x14000bdb8
   14000bdb8:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000bdbd:	ins    DWORD PTR es:[rdi],dx
   14000bdbe:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000bdc5:	outs   dx,DWORD PTR ds:[rsi]
   14000bdc6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bdc9:	jae    0x14000bdcb
   14000bdcb:	add    BYTE PTR [rcx],cl
   14000bdcd:	add    BYTE PTR [rax+0x65],cl
   14000bdd0:	(bad)  
   14000bdd1:	jo     0x14000be25
   14000bdd3:	gs rex.B ins BYTE PTR es:[rdi],dx
   14000bdd6:	ins    BYTE PTR es:[rdi],dx
   14000bdd7:	outs   dx,DWORD PTR ds:[rsi]
   14000bdd8:	movsxd eax,DWORD PTR [rax]
   14000bdda:	sub    al,0x0
   14000bddc:	rex.RXB
   14000bddd:	gs je  0x14000be26
   14000bde0:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000bde8:	and    DWORD PTR [rax],eax
   14000bdea:	push   rdx
   14000bdeb:	gs addr32 push rcx
   14000bdee:	jne    0x14000be55
   14000bdf0:	jb     0x14000be6b
   14000bdf2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bdf4:	outs   dx,WORD PTR ds:[rsi]
   14000bdf6:	rex.WXB
   14000bdf7:	gs jns 0x14000be51
   14000bdfa:	add    BYTE PTR [rax],al
   14000bdfc:	rex.RXB add BYTE PTR [r10+0x65],r10b
   14000be00:	(bad)  
   14000be01:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x43000600
   14000be0b:	jb     0x14000be72
   14000be0d:	(bad)  
   14000be0e:	je     0x14000be75
   14000be10:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47000500
   14000be19:	gs je  0x14000be68
   14000be1c:	(bad)  
   14000be1d:	jae    0x14000be93
   14000be1f:	rex.RB jb 0x14000be94
   14000be22:	outs   dx,DWORD PTR ds:[rsi]
   14000be23:	jb     0x14000be25
   14000be25:	add    BYTE PTR [rax],al
   14000be27:	add    BYTE PTR [rbx+0x6c],al
   14000be2a:	outs   dx,DWORD PTR ds:[rsi]
   14000be2b:	jae    0x14000be92
   14000be2d:	rex.W (bad) 
   14000be2f:	outs   dx,BYTE PTR ds:[rsi]
   14000be30:	fs ins BYTE PTR es:[rdi],dx
   14000be32:	add    BYTE PTR gs:[rdx],cl
   14000be35:	add    BYTE PTR [rbx+0x72],al
   14000be38:	gs (bad) 
   14000be3a:	je     0x14000bea1
   14000be3c:	rex.WRB jne 0x14000beb3
   14000be3f:	gs js  0x14000be99
   14000be42:	add    BYTE PTR [rax],al
   14000be44:	add    BYTE PTR ss:[rdi+0x61],dl
   14000be48:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000be50:	ins    BYTE PTR es:[edi],dx
   14000be52:	gs rex.WRXB (bad) 
   14000be55:	push   0x65
   14000be57:	movsxd esi,DWORD PTR [rax+rax*1+0x1b]
   14000be5b:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000be5f:	fs push rbx
   14000be61:	je     0x14000bed5
   14000be63:	imul   ebp,DWORD PTR [rsi+0x67],0x590057
   14000be6a:	push   rdi
   14000be6b:	jb     0x14000bed6
   14000be6d:	je     0x14000bed4
   14000be6f:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x69570007
   14000be78:	fs gs rex.XB push 0x6f547261
   14000be80:	rex.WRB jne 0x14000beef
   14000be83:	je     0x14000beee
   14000be85:	rex.X jns 0x14000befc
   14000be88:	add    BYTE PTR gs:[rsi+0x0],al
   14000be8c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000be8e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000be96:	push   rbx
   14000be97:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000be9b:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000bea3:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14000beaa:	or     BYTE PTR [rax],al
   14000beac:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000beae:	jb     0x14000bf1d
   14000beb0:	(bad)  
   14000beb1:	je     0x14000bf00
   14000beb3:	gs jae 0x14000bf29
   14000beb6:	(bad)  
   14000beb7:	addr32 gs push rdi
   14000beba:	add    BYTE PTR [rax],al
   14000bebc:	(bad)  
   14000bebd:	add    BYTE PTR [rbx+0x65],dl
   14000bec0:	je     0x14000bf15
   14000bec2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000bec6:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000bece:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14000bed5:	movsxd ebp,DWORD PTR [rax+rax*1+0xd]
   14000bed9:	add    BYTE PTR [rdi+0x72],dl
   14000bedc:	imul   esi,DWORD PTR [rbp+riz*2+0x43],0x6f736e6f
   14000bee4:	ins    BYTE PTR es:[rdi],dx
   14000bee5:	gs push rdi
   14000bee7:	add    BYTE PTR [rax+rax*1],cl
   14000beea:	rex.RXB
   14000beeb:	gs je  0x14000bf41
   14000beee:	je     0x14000bf54
   14000bef0:	rex.W (bad) 
   14000bef2:	outs   dx,BYTE PTR ds:[rsi]
   14000bef3:	fs ins BYTE PTR es:[rdi],dx
   14000bef5:	add    BYTE PTR gs:[rax],al
   14000bef8:	(bad)  
   14000bef9:	add    BYTE PTR [rcx+0x6c],al
   14000befc:	ins    BYTE PTR es:[rdi],dx
   14000befd:	outs   dx,DWORD PTR ds:[rsi]
   14000befe:	movsxd esp,DWORD PTR [rcx+0x74]
   14000bf01:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000bf04:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000bf07:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bf0f:	push   rbx
   14000bf10:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f4c0002
   14000bf18:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bf1b:	rex.B ins BYTE PTR es:[rdi],dx
   14000bf1d:	ins    BYTE PTR es:[rdi],dx
   14000bf1e:	outs   dx,DWORD PTR ds:[rsi]
   14000bf1f:	movsxd eax,DWORD PTR [rax]
   14000bf21:	add    BYTE PTR [rdi],ch
   14000bf23:	add    BYTE PTR [rdi+0x65],al
   14000bf26:	je     0x14000bf6e
   14000bf28:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14000bf30:	sub    al,0x0
   14000bf32:	rex.RX jb 0x14000bf9a
   14000bf35:	gs push rbx
   14000bf37:	imul   esp,DWORD PTR [rax+rax*1+0x23],0x6c655200
   14000bf3f:	gs (bad) 
   14000bf41:	jae    0x14000bfa8
   14000bf43:	rex.WRB jne 0x14000bfba
   14000bf46:	gs js  0x14000bf49
   14000bf49:	add    BYTE PTR [rbx],al
   14000bf4b:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000bf4f:	(bad)  
   14000bf50:	ins    BYTE PTR es:[rdi],dx
   14000bf51:	rex.RX jb 0x14000bfb9
   14000bf54:	add    BYTE PTR gs:[rcx+0x70],ah
   14000bf58:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e32cf
   14000bf62:	outs   dx,DWORD PTR ds:[rsi]
   14000bf63:	jb     0x14000bfca
   14000bf65:	sub    eax,0x636f7270
   14000bf6a:	gs jae 0x14000bfe0
   14000bf6d:	outs   dx,BYTE PTR gs:[rsi]
   14000bf6f:	jbe    0x14000bfda
   14000bf71:	jb     0x14000bfe2
   14000bf73:	outs   dx,BYTE PTR ds:[rsi]
   14000bf74:	ins    DWORD PTR es:[rdi],dx
   14000bf75:	outs   dx,BYTE PTR gs:[rsi]
   14000bf77:	je     0x14000bfa6
   14000bf79:	ins    BYTE PTR es:[rdi],dx
   14000bf7a:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30ecb2
   14000bf80:	fs ins BYTE PTR es:[rdi],dx
   14000bf82:	ins    BYTE PTR es:[rdi],dx
   14000bf83:	add    BYTE PTR [rcx+0x70],ah
   14000bf86:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e32fd
   14000bf90:	outs   dx,DWORD PTR ds:[rsi]
   14000bf91:	jb     0x14000bff8
   14000bf93:	sub    eax,0x70616568
   14000bf98:	sub    eax,0x322d316c
   14000bf9d:	sub    eax,0x6c642e30
   14000bfa2:	ins    BYTE PTR es:[rdi],dx
   14000bfa3:	add    BYTE PTR [rcx+0x70],ah
   14000bfa6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e331d
   14000bfb0:	jbe    0x14000c017
   14000bfb2:	outs   dx,BYTE PTR ds:[rsi]
   14000bfb3:	je     0x14000c01e
   14000bfb5:	outs   dx,BYTE PTR ds:[rsi]
   14000bfb6:	addr32 sub eax,0x766f7270
   14000bfbc:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000bfc4:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64edfa
   14000bfca:	ins    BYTE PTR es:[rdi],dx
   14000bfcb:	add    BYTE PTR [rcx+0x70],ah
   14000bfce:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3345
   14000bfd8:	outs   dx,DWORD PTR ds:[rsi]
   14000bfd9:	jb     0x14000c040
   14000bfdb:	sub    eax,0x69676572
   14000bfe0:	jae    0x14000c056
   14000bfe2:	jb     0x14000c05d
   14000bfe4:	sub    eax,0x312d316c
   14000bfe9:	sub    eax,0x6c642e30
   14000bfee:	ins    BYTE PTR es:[rdi],dx
   14000bfef:	add    BYTE PTR [rcx+0x70],ah
   14000bff2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3369
   14000bffc:	outs   dx,DWORD PTR ds:[rsi]
   14000bffd:	jb     0x14000c064
   14000bfff:	sub    eax,0x636e7973
   14000c004:	push   0x2d316c2d
   14000c009:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64ee3f
   14000c00f:	ins    BYTE PTR es:[rdi],dx
   14000c010:	add    BYTE PTR [rax],al
   14000c012:	(bad)  
   14000c013:	jo     0x14000c07e
   14000c015:	sub    eax,0x772d736d
   14000c01a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c021:	sub    eax,0x69727473
   14000c026:	outs   dx,BYTE PTR ds:[rsi]
   14000c027:	addr32 sub eax,0x312d316c
   14000c02d:	sub    eax,0x6c642e30
   14000c032:	ins    BYTE PTR es:[rdi],dx
   14000c033:	add    BYTE PTR [rcx+0x70],ah
   14000c036:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e33ad
   14000c040:	outs   dx,DWORD PTR ds:[rsi]
   14000c041:	jb     0x14000c0a8
   14000c043:	sub    eax,0x61636f6c
   14000c048:	ins    BYTE PTR es:[rdi],dx
   14000c049:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000c050:	sub    eax,0x322d316c
   14000c055:	sub    eax,0x6c642e31
   14000c05a:	ins    BYTE PTR es:[rdi],dx
   14000c05b:	add    BYTE PTR [rcx+0x70],ah
   14000c05e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e33d5
   14000c068:	outs   dx,DWORD PTR ds:[rsi]
   14000c069:	jb     0x14000c0d0
   14000c06b:	sub    eax,0x6f727265
   14000c070:	jb     0x14000c0da
   14000c072:	(bad)  
   14000c073:	outs   dx,BYTE PTR ds:[rsi]
   14000c074:	fs ins BYTE PTR es:[rdi],dx
   14000c076:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000c07d:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64eeb4
   14000c083:	ins    BYTE PTR es:[rdi],dx
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	(bad)  
   14000c087:	jo     0x14000c0f2
   14000c089:	sub    eax,0x772d736d
   14000c08e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c095:	sub    eax,0x7262696c
   14000c09a:	(bad)  
   14000c09b:	jb     0x14000c116
   14000c09d:	ins    BYTE PTR es:[rdi],dx
   14000c09e:	outs   dx,DWORD PTR ds:[rsi]
   14000c09f:	(bad)  
   14000c0a0:	fs gs jb 0x14000c0d1
   14000c0a4:	ins    BYTE PTR es:[rdi],dx
   14000c0a5:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30eddd
   14000c0ab:	fs ins BYTE PTR es:[rdi],dx
   14000c0ad:	ins    BYTE PTR es:[rdi],dx
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	(bad)  
   14000c0b1:	jo     0x14000c11c
   14000c0b3:	sub    eax,0x772d736d
   14000c0b8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c0bf:	sub    eax,0x666f7270
   14000c0c4:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000c0cc:	sub    eax,0x6c642e30
   14000c0d1:	ins    BYTE PTR es:[rdi],dx
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	(bad)  
   14000c0d5:	jo     0x14000c140
   14000c0d7:	sub    eax,0x772d736d
   14000c0dc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c0e3:	sub    eax,0x636f7270
   14000c0e8:	gs jae 0x14000c15e
   14000c0eb:	je     0x14000c155
   14000c0ed:	jb     0x14000c154
   14000c0ef:	(bad)  
   14000c0f0:	fs jae 0x14000c120
   14000c0f3:	ins    BYTE PTR es:[rdi],dx
   14000c0f4:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32ee2b
   14000c0fa:	fs ins BYTE PTR es:[rdi],dx
   14000c0fc:	ins    BYTE PTR es:[rdi],dx
   14000c0fd:	add    BYTE PTR [rcx+0x70],ah
   14000c100:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3477
   14000c10a:	outs   dx,DWORD PTR ds:[rsi]
   14000c10b:	jb     0x14000c172
   14000c10d:	sub    eax,0x69737973
   14000c112:	outs   dx,BYTE PTR ds:[rsi]
   14000c113:	outs   dx,WORD PTR ds:[rsi]
   14000c115:	sub    eax,0x322d316c
   14000c11a:	sub    eax,0x6c642e31
   14000c11f:	ins    BYTE PTR es:[rdi],dx
   14000c120:	add    BYTE PTR [rax],al
   14000c122:	(bad)  
   14000c123:	jo     0x14000c18e
   14000c125:	sub    eax,0x772d736d
   14000c12a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c131:	sub    eax,0x736c7472
   14000c136:	jne    0x14000c1a8
   14000c138:	jo     0x14000c1a9
   14000c13a:	jb     0x14000c1b0
   14000c13c:	sub    eax,0x322d316c
   14000c141:	sub    eax,0x6c642e30
   14000c146:	ins    BYTE PTR es:[rdi],dx
   14000c147:	add    BYTE PTR [rcx+0x70],ah
   14000c14a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e34c1
   14000c154:	outs   dx,DWORD PTR ds:[rsi]
   14000c155:	jb     0x14000c1bc
   14000c157:	sub    eax,0x656c6966
   14000c15c:	sub    eax,0x322d316c
   14000c161:	sub    eax,0x6c642e31
   14000c166:	ins    BYTE PTR es:[rdi],dx
   14000c167:	add    BYTE PTR [rcx+0x70],ah
   14000c16a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e34e1
   14000c174:	outs   dx,DWORD PTR ds:[rsi]
   14000c175:	jb     0x14000c1dc
   14000c177:	sub    eax,0x646e6168
   14000c17c:	ins    BYTE PTR es:[rdi],dx
   14000c17d:	gs sub eax,0x312d316c
   14000c183:	sub    eax,0x6c642e30
   14000c188:	ins    BYTE PTR es:[rdi],dx
   14000c189:	add    BYTE PTR [rcx+0x70],ah
   14000c18c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e3503
   14000c196:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c19a:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   14000c1a2:	sub    eax,0x322d316c
   14000c1a7:	sub    eax,0x6c642e30
   14000c1ac:	ins    BYTE PTR es:[rdi],dx
   14000c1ad:	add    BYTE PTR [rcx+0x70],ah
   14000c1b0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3527
   14000c1ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c1bb:	jb     0x14000c222
   14000c1bd:	sub    eax,0x736e6f63
   14000c1c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c3:	ins    BYTE PTR es:[rdi],dx
   14000c1c4:	gs sub eax,0x312d316c
   14000c1ca:	sub    eax,0x6c642e30
   14000c1cf:	ins    BYTE PTR es:[rdi],dx
   14000c1d0:	add    BYTE PTR [rax],al
   14000c1d2:	(bad)  
   14000c1d3:	jo     0x14000c23e
   14000c1d5:	sub    eax,0x772d736d
   14000c1da:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c1e1:	sub    eax,0x70616568
   14000c1e6:	sub    eax,0x312d326c
   14000c1eb:	sub    eax,0x6c642e30
   14000c1f0:	ins    BYTE PTR es:[rdi],dx
   14000c1f1:	add    BYTE PTR [rip+0x67655200],cl        # 0x1a76613f7
   14000c1f7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c1f9:	jne    0x14000c268
   14000c1fb:	rex.WXB
   14000c1fc:	gs jns 0x14000c256
   14000c1ff:	add    BYTE PTR [rax],al
   14000c201:	add    BYTE PTR [rcx+0x73],cl
   14000c204:	push   rsp
   14000c205:	gs js  0x14000c27c
   14000c208:	push   rbp
   14000c209:	outs   dx,BYTE PTR ds:[rsi]
   14000c20a:	imul   esp,DWORD PTR [rbx+0x6f],0xa006564
   14000c211:	add    BYTE PTR [rdx+0x65],dl
   14000c214:	addr32 rex.R
   14000c216:	gs ins BYTE PTR es:[rdi],dx
   14000c218:	gs je  0x14000c280
   14000c21b:	rex.WXB
   14000c21c:	gs jns 0x14000c276
   14000c21f:	add    BYTE PTR [rbx],al
   14000c221:	add    BYTE PTR [rbx+0x65],dl
   14000c224:	je     0x14000c26b
   14000c226:	outs   dx,BYTE PTR ds:[rsi]
   14000c227:	je     0x14000c29b
   14000c229:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   14000c230:	ins    BYTE PTR es:[rdi],dx
   14000c231:	push   rdi
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	(bad)  
   14000c235:	jo     0x14000c2a0
   14000c237:	sub    eax,0x772d736d
   14000c23c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c243:	sub    eax,0x69676572
   14000c248:	jae    0x14000c2be
   14000c24a:	jb     0x14000c2c5
   14000c24c:	sub    eax,0x322d326c
   14000c251:	sub    eax,0x6c642e30
   14000c256:	ins    BYTE PTR es:[rdi],dx
   14000c257:	add    BYTE PTR [rcx+0x70],ah
   14000c25a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x622d6e69        # 0x1b72e35d1
   14000c264:	(bad)  
   14000c265:	jae    0x14000c2cc
   14000c267:	sub    eax,0x6c697475
   14000c26c:	sub    eax,0x312d316c
   14000c271:	sub    eax,0x6c642e30
   14000c276:	ins    BYTE PTR es:[rdi],dx
   14000c277:	add    BYTE PTR [rcx+0x70],ah
   14000c27a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e35f1
   14000c284:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c288:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x766f7270
   14000c290:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000c298:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64f0ce
   14000c29e:	ins    BYTE PTR es:[rdi],dx
   14000c29f:	add    BYTE PTR [rbx],cl
   14000c2a1:	add    BYTE PTR [rbx+rsi*2+0x74],ch
   14000c2a5:	jb     0x14000c313
   14000c2a7:	outs   dx,BYTE PTR gs:[rsi]
   14000c2a9:	push   rdi
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	add    eax,0x74736c00
   14000c2b1:	jb     0x14000c316
   14000c2b3:	ins    DWORD PTR es:[rdi],dx
   14000c2b4:	jo     0x14000c31f
   14000c2b6:	push   rdi
   14000c2b7:	add    BYTE PTR [rcx+0x70],ah
   14000c2ba:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3631
   14000c2c4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2c5:	jb     0x14000c32c
   14000c2c7:	sub    eax,0x69727473
   14000c2cc:	outs   dx,BYTE PTR ds:[rsi]
   14000c2cd:	addr32 sub eax,0x6f73626f
   14000c2d3:	ins    BYTE PTR es:[rdi],dx
   14000c2d4:	gs je  0x14000c33c
   14000c2d7:	sub    eax,0x312d316c
   14000c2dc:	sub    eax,0x6c642e30
   14000c2e1:	ins    BYTE PTR es:[rdi],dx
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	add    DWORD PTR [rax],0x6f695f5f
   14000c2ea:	(bad)  
   14000c2eb:	pop    rdi
   14000c2ec:	data16 jne 0x14000c35d
   14000c2ef:	movsxd eax,DWORD PTR [rax]
   14000c2f1:	add    BYTE PTR [rdx+0x63775f03],cl
   14000c2f7:	jae    0x14000c362
   14000c2f9:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000c2fc:	add    BYTE PTR [rax],al
   14000c2fe:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b474267b
   14000c304:	outs   dx,DWORD PTR ds:[rsi]
   14000c305:	jne    0x14000c373
   14000c307:	add    BYTE PTR [rbx],al
   14000c309:	add    al,0x5f
   14000c30b:	ja     0x14000c381
   14000c30d:	outs   dx,DWORD PTR ds:[rsi]
   14000c30e:	data16 add BYTE PTR [rbx+rax*1+0x7363775f],dl
   14000c316:	outs   dx,BYTE PTR ds:[rsi]
   14000c317:	imul   esp,DWORD PTR [rbx+0x6d],0x43f0070
   14000c31e:	data16 ins BYTE PTR es:[rdi],dx
   14000c320:	outs   dx,DWORD PTR ds:[rsi]
   14000c321:	outs   dx,DWORD PTR ds:[rsi]
   14000c322:	jb     0x14000c324
   14000c324:	xchg   edx,eax
   14000c325:	add    al,0x6d
   14000c327:	gs ins DWORD PTR es:[rdi],dx
   14000c329:	movsxd esi,DWORD PTR [rax+0x79]
   14000c32c:	add    BYTE PTR [rax],al
   14000c32e:	xchg   esi,eax
   14000c32f:	add    al,0x6d
   14000c331:	gs ins DWORD PTR es:[rdi],dx
   14000c333:	jae    0x14000c39a
   14000c335:	je     0x14000c337
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	add    DWORD PTR [rax],eax
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	int    0x5d
   14000d012:	and    dl,dl
   14000d014:	data16 (bad) 
   14000d016:	(bad)  
   14000d017:	inc    DWORD PTR [rax]
	...
   14000d049:	add    BYTE PTR [rbx],al
   14000d04b:	add    BYTE PTR [rax],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rax+0x14000de],ch
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	add    al,bl
   14000d059:	mov    BYTE PTR [rax],al
   14000d05b:	rex add DWORD PTR [rax],eax
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	add    BYTE PTR [rcx+0x14000],cl
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	add    DWORD PTR [rax],eax
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	or     BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	jle    0x14000e016
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	or     BYTE PTR [rdi+0x10840000],ch
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	rex.RX adc DWORD PTR [rax],r8d
   14000e013:	add    BYTE PTR [rax],dl
   14000e015:	scas   eax,DWORD PTR es:[rdi]
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	adc    QWORD PTR [rax],r8
   14000e01b:	add    bl,al
   14000e01d:	adc    DWORD PTR [rax],eax
   14000e01f:	add    BYTE PTR [rdi+rbp*4],bl
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	rcl    BYTE PTR [rcx],1
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	in     eax,0x12
   14000e02a:	add    BYTE PTR [rax],al
   14000e02c:	sub    al,0xaf
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	and    al,0x13
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	rex.WXB adc rax,QWORD PTR [r8]
   14000e037:	add    BYTE PTR [rax],bh
   14000e039:	scas   eax,DWORD PTR es:[rdi]
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	push   rsp
   14000e03d:	adc    eax,DWORD PTR [rax]
   14000e03f:	add    BYTE PTR [rax],dh
   14000e041:	adc    al,0x0
   14000e043:	add    BYTE PTR [rax-0x51],al
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	cmp    BYTE PTR [rax+rax*1],dl
   14000e04b:	add    BYTE PTR [rcx],ah
   14000e04d:	adc    eax,0xaf540000
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	sub    BYTE PTR [rip+0x15db0000],dl        # 0x155dbe05a
   14000e05a:	add    BYTE PTR [rax],al
   14000e05c:	jo     0x14000e00d
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	in     al,0x15
   14000e062:	add    BYTE PTR [rax],al
   14000e064:	mov    edx,0x84000016
   14000e069:	scas   eax,DWORD PTR es:[rdi]
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	rcl    BYTE PTR [rsi],0x0
   14000e06f:	add    BYTE PTR [rbp-0x6bffffe9],al
   14000e075:	scas   eax,DWORD PTR es:[rdi]
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	mov    WORD PTR [rdi],ss
   14000e07a:	add    BYTE PTR [rax],al
   14000e07c:	cdq    
   14000e07d:	sbb    eax,DWORD PTR [rax]
   14000e07f:	add    BYTE PTR [rdi+rbp*4+0x1ba00000],ch
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	and    al,0x1d
   14000e08a:	add    BYTE PTR [rax],al
   14000e08c:	shr    BYTE PTR [rdi+0x1d2c0000],1
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	or     al,0x1e
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	cld    
   14000e099:	scas   eax,DWORD PTR es:[rdi]
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	adc    al,0x1e
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	nop
   14000e0a1:	and    BYTE PTR [rax],al
   14000e0a3:	add    BYTE PTR [rax],bl
   14000e0a5:	mov    al,0x0
   14000e0a7:	add    BYTE PTR [rax-0x52ffffe0],bl
   14000e0ad:	sub    eax,DWORD PTR [rax]
   14000e0af:	add    BYTE PTR [rax+rsi*4],dh
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	mov    ah,0x2b
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	lods   eax,DWORD PTR ds:[rsi]
   14000e0b9:	(bad)  
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	pop    rax
   14000e0bd:	mov    al,0x0
   14000e0bf:	add    BYTE PTR [rdi+rbp*1+0x30530000],dh
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	jo     0x14000e07a
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	js     0x14000e100
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	(bad)  
   14000e0d1:	xor    al,BYTE PTR [rax]
   14000e0d3:	add    BYTE PTR [rax-0x23ffff50],cl
   14000e0d9:	xor    al,BYTE PTR [rax]
   14000e0db:	add    BYTE PTR [rip+0xffffffff9c000033],ah        # 0xdc00e114
   14000e0e1:	mov    al,0x0
   14000e0e3:	add    BYTE PTR [rbx+rsi*1],ch
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	in     eax,0x35
   14000e0ea:	add    BYTE PTR [rax],al
   14000e0ec:	test   al,0xb0
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	in     al,dx
   14000e0f1:	xor    eax,0x36500000
   14000e0f6:	add    BYTE PTR [rax],al
   14000e0f8:	shl    BYTE PTR [rax+0x36580000],0x0
   14000e0ff:	add    BYTE PTR [rsi],ah
   14000e101:	cmp    BYTE PTR [rax],al
   14000e103:	add    al,cl
   14000e105:	mov    al,0x0
   14000e107:	add    BYTE PTR [rax+rdi*1],ch
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	adc    BYTE PTR [rcx],bh
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	in     al,0xb0
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	sbb    BYTE PTR [rcx],bh
   14000e116:	add    BYTE PTR [rax],al
   14000e118:	xchg   ecx,eax
   14000e119:	cmp    DWORD PTR [rax],eax
   14000e11b:	add    al,bh
   14000e11d:	mov    al,0x0
   14000e11f:	add    BYTE PTR [rax+0x71000039],bl
   14000e125:	cmp    al,BYTE PTR [rax]
   14000e127:	add    ah,ah
   14000e129:	mov    al,0x0
   14000e12b:	add    BYTE PTR [rax+0x3a],bh
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	clc    
   14000e131:	cmp    al,BYTE PTR [rax]
   14000e133:	add    al,cl
   14000e135:	mov    al,0x0
   14000e137:	add    BYTE PTR [rax],al
   14000e139:	cmp    eax,DWORD PTR [rax]
   14000e13b:	add    BYTE PTR [rdi+0x3b],dl
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	shl    BYTE PTR [rax+0x3b600000],0x0
   14000e147:	add    bh,bl
   14000e149:	cmp    eax,DWORD PTR [rax]
   14000e14b:	add    BYTE PTR [rax],dl
   14000e14d:	scas   eax,DWORD PTR es:[rdi]
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	sub    al,0x3c
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	pop    rax
   14000e155:	add    BYTE PTR ds:[rax],al
   14000e158:	or     BYTE PTR [rcx+0x3e600000],dh
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	cmc    
   14000e161:	(bad)  
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	sbb    BYTE PTR [rcx+0x3ffc0000],dh
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	jo     0x14000e1b0
   14000e16e:	add    BYTE PTR [rax],al
   14000e170:	push   rsp
   14000e171:	scas   eax,DWORD PTR es:[rdi]
   14000e172:	add    BYTE PTR [rax],al
   14000e174:	js     0x14000e1b8
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	(bad)  
   14000e179:	add    BYTE PTR [rax],r8b
   14000e17c:	sbb    BYTE PTR [rcx+0x44100000],dh
   14000e182:	add    BYTE PTR [rax],al
   14000e184:	ret    0x44
   14000e187:	add    BYTE PTR [rax-0x50],dh
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	enter  0x44,0x0
   14000e190:	jge    0x14000e1d7
   14000e192:	add    BYTE PTR [rax],al
   14000e194:	xor    BYTE PTR [rcx+0x45840000],dh
   14000e19a:	add    BYTE PTR [rax],al
   14000e19c:	xor    DWORD PTR [rsi+0x0],eax
   14000e19f:	add    BYTE PTR [rcx+rsi*4],bh
   14000e1a2:	add    BYTE PTR [rax],al
   14000e1a4:	cmp    BYTE PTR [rsi+0x0],al
   14000e1a7:	add    BYTE PTR [rcx+0x4c000049],bh
   14000e1ad:	mov    cl,0x0
   14000e1af:	add    al,al
   14000e1b1:	rex.WB add BYTE PTR [r8],al
   14000e1b4:	(bad)  
   14000e1b5:	rex.WRX add BYTE PTR [rax],r8b
   14000e1b8:	fs mov cl,0x0
   14000e1bb:	add    BYTE PTR [rsi+rcx*2],dl
   14000e1be:	add    BYTE PTR [rax],al
   14000e1c0:	ds push rbp
   14000e1c2:	add    BYTE PTR [rax],al
   14000e1c4:	xor    BYTE PTR [rcx+0x55440000],0x0
   14000e1cb:	add    BYTE PTR [rbx],al
   14000e1cd:	pop    rcx
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	cwde   
   14000e1d1:	mov    cl,0x0
   14000e1d3:	add    BYTE PTR [rcx+rbx*2],cl
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	mov    ch,0x5c
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	mov    esp,0xbc0000b1
   14000e1e1:	pop    rsp
   14000e1e2:	add    BYTE PTR [rax],al
   14000e1e4:	mov    ah,0x5e
   14000e1e6:	add    BYTE PTR [rax],al
   14000e1e8:	fdiv   DWORD PTR [rcx+0x5ebc0000]
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	sub    ah,BYTE PTR [rbp+0x0]
   14000e1f3:	add    ah,dh
   14000e1f5:	mov    cl,0x0
   14000e1f7:	add    BYTE PTR [rax],dh
   14000e1f9:	add    BYTE PTR gs:[rax],al
   14000e1fc:	shl    DWORD PTR [rsi+0x0],0x0
   14000e200:	adc    BYTE PTR [rdx+0x66c80000],dh
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	in     eax,0x6a
   14000e20a:	add    BYTE PTR [rax],al
   14000e20c:	xor    al,0xb2
   14000e20e:	add    BYTE PTR [rax],al
   14000e210:	in     al,dx
   14000e211:	push   0x0
   14000e213:	add    BYTE PTR [rip+0x5800006c],al        # 0x19800e285
   14000e219:	mov    dl,0x0
   14000e21b:	add    BYTE PTR [rsp+rbp*2],cl
   14000e21e:	add    BYTE PTR [rax],al
   14000e220:	fsubr  DWORD PTR [rax+rax*1+0x0]
   14000e224:	jo     0x14000e1d6
   14000e226:	add    BYTE PTR [rax],al
   14000e228:	loopne 0x14000e296
   14000e22a:	add    BYTE PTR [rax],al
   14000e22c:	(bad)  
   14000e22d:	outs   dx,BYTE PTR ds:[rsi]
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	je     0x14000e1e4
   14000e232:	add    BYTE PTR [rax],al
   14000e234:	rex outs dx,BYTE PTR ds:[rsi]
   14000e236:	add    BYTE PTR [rax],al
   14000e238:	pushf  
   14000e239:	outs   dx,DWORD PTR ds:[rsi]
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	mov    WORD PTR [rdx+0x6fa40000],?
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	rex.WX jo 0x14000e247
   14000e247:	add    BYTE PTR [rdx+rsi*4+0x70500000],ah
   14000e24e:	add    BYTE PTR [rax],al
   14000e250:	(bad)  [rbx+0x0]
   14000e253:	add    BYTE PTR [rdx+rsi*4+0x73f00000],bh
   14000e25a:	add    BYTE PTR [rax],al
   14000e25c:	mov    edi,0x38000074
   14000e261:	scas   eax,DWORD PTR es:[rdi]
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	shl    BYTE PTR [rax+rax*1+0x0],1
   14000e268:	sbb    DWORD PTR [rbp+0x0],esi
   14000e26b:	add    ah,bh
   14000e26d:	mov    dl,0x0
   14000e26f:	add    BYTE PTR [rax],ah
   14000e271:	jne    0x14000e273
   14000e273:	add    dl,dh
   14000e275:	jbe    0x14000e277
   14000e277:	add    BYTE PTR [rbx+rsi*4],al
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	add    BYTE PTR [rdi+0x0],dh
   14000e27f:	add    BYTE PTR [rdx],dl
   14000e281:	ja     0x14000e283
   14000e283:	add    BYTE PTR [rax],bh
   14000e285:	scas   eax,DWORD PTR es:[rdi]
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	xor    BYTE PTR [rdi+0x0],dh
   14000e28b:	add    BYTE PTR [rsi+0x77],cl
   14000e28e:	add    BYTE PTR [rax],al
   14000e290:	cmp    BYTE PTR [rbx+0x77600000],dh
   14000e296:	add    BYTE PTR [rax],al
   14000e298:	cdq    
   14000e299:	ja     0x14000e29b
   14000e29b:	add    BYTE PTR [rax],bh
   14000e29d:	scas   eax,DWORD PTR es:[rdi]
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	movabs al,ds:0x38000077b8000077
   14000e2a9:	scas   eax,DWORD PTR es:[rdi]
   14000e2aa:	add    BYTE PTR [rax],al
   14000e2ac:	int3   
   14000e2ad:	ja     0x14000e2af
   14000e2af:	add    BYTE PTR [rax],ah
   14000e2b1:	js     0x14000e2b3
   14000e2b3:	add    BYTE PTR [rbx+rsi*4],bh
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	sub    BYTE PTR [rax+0x0],bh
   14000e2bb:	add    BYTE PTR [rbp+0x78],ch
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	shl    BYTE PTR [rax+0x78d00000],0x0
   14000e2c7:	add    BYTE PTR [rip+0x5c000079],bl        # 0x19c00e346
   14000e2cd:	mov    bl,0x0
   14000e2cf:	add    BYTE PTR [rcx+rdi*2+0x0],ah
   14000e2d3:	add    BYTE PTR [rdx+rdi*2],dh
   14000e2d6:	add    BYTE PTR [rax],al
   14000e2d8:	mov    BYTE PTR [rbx+0x7a7c0000],dh
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	mov    al,0x7a
   14000e2e2:	add    BYTE PTR [rax],al
   14000e2e4:	shl    BYTE PTR [rax+0x7ac00000],0x0
   14000e2eb:	add    BYTE PTR [rcx],dh
   14000e2ed:	jl     0x14000e2ef
   14000e2ef:	add    BYTE PTR [rbx+rsi*4+0x7c380000],bl
   14000e2f6:	add    BYTE PTR [rax],al
   14000e2f8:	(bad)  
   14000e2f9:	jge    0x14000e2fb
   14000e2fb:	add    BYTE PTR [rbx+rsi*4+0x7d380000],dl
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	push   rsi
   14000e305:	jge    0x14000e307
   14000e307:	add    al,al
   14000e309:	mov    al,0x0
   14000e30b:	add    BYTE PTR [rax+0x7d],ch
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	test   DWORD PTR [rbp+0x0],edi
   14000e313:	add    BYTE PTR [rax],bh
   14000e315:	scas   eax,DWORD PTR es:[rdi]
   14000e316:	add    BYTE PTR [rax],al
   14000e318:	mov    WORD PTR [rbp+0x0],?
   14000e31b:	add    bh,ch
   14000e31d:	jge    0x14000e31f
   14000e31f:	add    al,al
   14000e321:	mov    al,0x0
   14000e323:	add    al,bh
   14000e325:	jge    0x14000e327
   14000e327:	add    BYTE PTR [rsi+0x7000007e],cl
   14000e32d:	mov    al,0x0
   14000e32f:	add    al,dl
   14000e331:	jle    0x14000e333
   14000e333:	add    dl,dl
   14000e335:	jle    0x14000e337
   14000e337:	add    BYTE PTR [rax-0xfffff4d],ch
   14000e33d:	jle    0x14000e33f
   14000e33f:	add    BYTE PTR [rip+0xffffffffb000007f],bh        # 0xf000e3c4
   14000e345:	mov    bl,0x0
   14000e347:	add    BYTE PTR [rsi+0x7f],al
   14000e34a:	add    BYTE PTR [rax],al
   14000e34c:	fs jg  0x14000e34f
   14000e34f:	add    BYTE PTR [rax+0x700000b3],al
   14000e355:	jg     0x14000e357
   14000e357:	add    BYTE PTR [rax-0x7fffff81],dl
   14000e35d:	mov    bl,0x0
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    DWORD PTR [rax],eax
   14000f00e:	add    al,BYTE PTR [rax]
   14000f010:	call   0x16880f015
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	adc    BYTE PTR [rax],0x0
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	add    BYTE PTR [rax],al
   14000f01f:	sbb    BYTE PTR [rax],0x0
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	pop    rax
   14000f025:	add    BYTE PTR [rax],al
   14000f027:	add    BYTE PTR [rax],0x0
	...
   14000f036:	add    DWORD PTR [rax],eax
   14000f038:	add    DWORD PTR [rax],eax
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	jo     0x14000f03e
   14000f03e:	add    BYTE PTR [rax+0x0],al
	...
   14000f04c:	add    BYTE PTR [rax],al
   14000f04e:	add    DWORD PTR [rax],eax
   14000f050:	add    DWORD PTR [rax],eax
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	mov    BYTE PTR [rax],al
   14000f056:	add    BYTE PTR [rax+0x0],al
	...
   14000f064:	add    BYTE PTR [rax],al
   14000f066:	add    DWORD PTR [rax],eax
   14000f068:	add    DWORD PTR [rax],eax
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	movabs al,ds:0x800000
	...
   14000f07d:	add    BYTE PTR [rcx],al
   14000f07f:	add    BYTE PTR [rcx],cl
   14000f081:	add    al,0x0
   14000f083:	add    BYTE PTR [rax+0x0],bh
	...
   14000f095:	add    BYTE PTR [rcx],al
   14000f097:	add    BYTE PTR [rcx],cl
   14000f099:	add    al,0x0
   14000f09b:	add    al,cl
	...
   14000f0ad:	add    BYTE PTR [rcx],al
   14000f0af:	add    BYTE PTR [rcx],cl
   14000f0b1:	add    al,0x0
   14000f0b3:	add    al,bl
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rax],ch
   14000f0b9:	test   DWORD PTR [rax],0xc800
	...
   14000f0c7:	add    BYTE PTR [rax-0x6fffff0d],bl
   14000f0cd:	add    eax,DWORD PTR [rax]
	...
   14000f0d7:	add    al,dh
   14000f0d9:	lock add BYTE PTR [rax],al
   14000f0dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f0dd:	add    al,BYTE PTR [rax]
	...
   14000f0e7:	add    BYTE PTR [rbx],al
   14000f0e9:	add    BYTE PTR [rbp+0x0],cl
   14000f0ec:	push   rbp
   14000f0ed:	add    BYTE PTR [rcx+0x0],cl
   14000f0f0:	cmp    al,0x3f
   14000f0f2:	js     0x14000f161
   14000f0f4:	ins    BYTE PTR es:[rdi],dx
   14000f0f5:	and    BYTE PTR [rsi+0x65],dh
   14000f0f8:	jb     0x14000f16d
   14000f0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f101:	xor    BYTE PTR [rdx],ah
   14000f103:	and    BYTE PTR [rbp+0x6e],ah
   14000f106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f110:	rex.RX sub eax,0x73202238
   14000f116:	je     0x14000f179
   14000f118:	outs   dx,BYTE PTR ds:[rsi]
   14000f119:	fs (bad) 
   14000f11b:	ins    BYTE PTR es:[rdi],dx
   14000f11c:	outs   dx,DWORD PTR ds:[rsi]
   14000f11d:	outs   dx,BYTE PTR ds:[rsi]
   14000f11e:	gs cmp eax,0x73657922
   14000f124:	and    bh,BYTE PTR [rdi]
   14000f126:	ds or  eax,0x2d213c0a
   14000f12c:	sub    eax,0x706f4320
   14000f131:	jns    0x14000f1a5
   14000f133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f13a:	sub    DWORD PTR [rax],esp
   14000f13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f144:	je     0x14000f166
   14000f146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f148:	jb     0x14000f1ba
   14000f14a:	outs   dx,DWORD PTR ds:[rsi]
   14000f14b:	jb     0x14000f1ae
   14000f14d:	je     0x14000f1b8
   14000f14f:	outs   dx,DWORD PTR ds:[rsi]
   14000f150:	outs   dx,BYTE PTR ds:[rsi]
   14000f151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e2f84
   14000f157:	cmp    al,0x61
   14000f159:	jae    0x14000f1ce
   14000f15b:	gs ins DWORD PTR es:[rdi],dx
   14000f15d:	(bad)  
   14000f15e:	ins    BYTE PTR es:[rdi],dx
   14000f15f:	jns    0x14000f181
   14000f161:	js     0x14000f1d0
   14000f163:	ins    BYTE PTR es:[rdi],dx
   14000f164:	outs   dx,BYTE PTR ds:[rsi]
   14000f165:	jae    0x14000f1a4
   14000f167:	and    dh,BYTE PTR [rbp+0x72]
   14000f16a:	outs   dx,BYTE PTR ds:[rsi]
   14000f16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f16e:	push   0x73616d65
   14000f173:	sub    eax,0x7263696d
   14000f178:	outs   dx,DWORD PTR ds:[rsi]
   14000f179:	jae    0x14000f1ea
   14000f17b:	data16 je 0x14000f1ab
   14000f17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f184:	ins    DWORD PTR es:[rdi],dx
   14000f185:	cs jbe 0x14000f1b9
   14000f188:	and    ah,BYTE PTR [rax]
   14000f18a:	ins    DWORD PTR es:[rdi],dx
   14000f18b:	(bad)  
   14000f18c:	outs   dx,BYTE PTR ds:[rsi]
   14000f18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f194:	jb     0x14000f209
   14000f196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f19d:	xor    BYTE PTR [rdx],ah
   14000f19f:	ds or  eax,0x73613c0a
   14000f1a5:	jae    0x14000f20c
   14000f1a7:	ins    DWORD PTR es:[rdi],dx
   14000f1a8:	(bad)  
   14000f1a9:	ins    BYTE PTR es:[rdi],dx
   14000f1aa:	jns    0x14000f1f5
   14000f1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000f1af:	je     0x14000f21a
   14000f1b1:	je     0x14000f22c
   14000f1b3:	or     eax,0x2020200a
   14000f1b8:	and    BYTE PTR [rsi+0x65],dh
   14000f1bb:	jb     0x14000f230
   14000f1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f1c4:	xor    DWORD PTR [rsi],ebp
   14000f1c6:	xor    BYTE PTR [rsi],ch
   14000f1c8:	xor    BYTE PTR [rdx],ah
   14000f1ca:	or     eax,0x2020200a
   14000f1cf:	and    BYTE PTR [rax+0x72],dh
   14000f1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000f1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f1d6:	jae    0x14000f247
   14000f1d8:	jb     0x14000f21b
   14000f1da:	jb     0x14000f23f
   14000f1dc:	push   0x63657469
   14000f1e1:	je     0x14000f258
   14000f1e3:	jb     0x14000f24a
   14000f1e5:	cmp    eax,0x646d6122
   14000f1ea:	ss xor al,0x22
   14000f1ed:	or     eax,0x2020200a
   14000f1f2:	and    BYTE PTR [rsi+0x61],ch
   14000f1f5:	ins    DWORD PTR es:[rdi],dx
   14000f1f6:	gs cmp eax,0x63694d22
   14000f1fc:	jb     0x14000f26d
   14000f1fe:	jae    0x14000f26f
   14000f200:	data16 je 0x14000f231
   14000f203:	push   rdi
   14000f204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f20b:	imul   r12d,DWORD PTR [rcx+0x67],0x69736f6e
   14000f213:	jae    0x14000f243
   14000f215:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000f217:	fs rex.XB je 0x14000f28d
   14000f21b:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021122b
   14000f221:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f225:	gs cmp eax,0x6e697722
   14000f22b:	xor    esi,DWORD PTR [rdx]
   14000f22d:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f213d
   14000f233:	or     bh,BYTE PTR [rsp+riz*2]
   14000f236:	gs jae 0x14000f29c
   14000f239:	jb     0x14000f2a4
   14000f23b:	jo     0x14000f2b1
   14000f23d:	imul   ebp,DWORD PTR [rdi+0x6e],0x616f4c3e
   14000f244:	and    BYTE PTR fs:[rax+0x65],dl
   14000f248:	jb     0x14000f2b0
   14000f24a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f24c:	outs   dx,BYTE PTR ds:[rsi]
   14000f24d:	and    BYTE PTR [rbx+0x6f],al
   14000f250:	jne    0x14000f2c0
   14000f252:	je     0x14000f2b9
   14000f254:	jb     0x14000f2c9
   14000f256:	cmp    al,0x2f
   14000f258:	fs gs jae 0x14000f2bf
   14000f25c:	jb     0x14000f2c7
   14000f25e:	jo     0x14000f2d4
   14000f260:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000f267:	or     bh,BYTE PTR [rsp+rsi*2]
   14000f26a:	jb     0x14000f2e1
   14000f26c:	jae    0x14000f2e2
   14000f26e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f270:	outs   dx,WORD PTR ds:[rsi]
   14000f272:	and    BYTE PTR [rax+0x6d],bh
   14000f275:	ins    BYTE PTR es:[rdi],dx
   14000f276:	outs   dx,BYTE PTR ds:[rsi]
   14000f277:	jae    0x14000f2b6
   14000f279:	and    dh,BYTE PTR [rbp+0x72]
   14000f27c:	outs   dx,BYTE PTR ds:[rsi]
   14000f27d:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f280:	push   0x73616d65
   14000f285:	sub    eax,0x7263696d
   14000f28a:	outs   dx,DWORD PTR ds:[rsi]
   14000f28b:	jae    0x14000f2fc
   14000f28d:	data16 je 0x14000f2bd
   14000f290:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f293:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f296:	ins    DWORD PTR es:[rdi],dx
   14000f297:	cs jbe 0x14000f2cd
   14000f29a:	and    bh,BYTE PTR [rsi]
   14000f29c:	or     eax,0x2020200a
   14000f2a1:	and    BYTE PTR [rbx+rsi*2],bh
   14000f2a4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f2a8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f2b0:	and    BYTE PTR [rax],ah
   14000f2b2:	and    BYTE PTR [rax],ah
   14000f2b4:	and    BYTE PTR [rax],ah
   14000f2b6:	cmp    al,0x72
   14000f2b8:	gs jno 0x14000f330
   14000f2bb:	gs jae 0x14000f332
   14000f2be:	gs fs push rax
   14000f2c1:	jb     0x14000f32c
   14000f2c3:	jbe    0x14000f32e
   14000f2c5:	ins    BYTE PTR es:[rdi],dx
   14000f2c6:	gs addr32 gs jae 0x14000f309
   14000f2cb:	or     eax,0x2020200a
   14000f2d0:	and    BYTE PTR [rax],ah
   14000f2d2:	and    BYTE PTR [rax],ah
   14000f2d4:	and    BYTE PTR [rax],ah
   14000f2d6:	and    BYTE PTR [rax],ah
   14000f2d8:	and    BYTE PTR [rdx+rsi*2],bh
   14000f2db:	gs jno 0x14000f353
   14000f2de:	gs jae 0x14000f355
   14000f2e1:	gs fs rex.RB js 0x14000f34b
   14000f2e6:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f2e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f2f0:	ins    BYTE PTR es:[rdi],dx
   14000f2f1:	or     eax,0x2020200a
   14000f2f6:	and    BYTE PTR [rax],ah
   14000f2f8:	and    BYTE PTR [rax],ah
   14000f2fa:	and    BYTE PTR [rax],ah
   14000f2fc:	and    BYTE PTR [rax],ah
   14000f2fe:	and    BYTE PTR [rax],ah
   14000f300:	and    BYTE PTR [rax],ah
   14000f302:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f306:	gs ins BYTE PTR es:[rdi],dx
   14000f308:	cmp    eax,0x49736122
   14000f30d:	outs   dx,BYTE PTR ds:[rsi]
   14000f30e:	jbe    0x14000f37f
   14000f310:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f314:	or     eax,0x2020200a
   14000f319:	and    BYTE PTR [rax],ah
   14000f31b:	and    BYTE PTR [rax],ah
   14000f31d:	and    BYTE PTR [rax],ah
   14000f31f:	and    BYTE PTR [rax],ah
   14000f321:	and    BYTE PTR [rax],ah
   14000f323:	and    BYTE PTR [rax],ah
   14000f325:	and    BYTE PTR [rbp+0x69],dh
   14000f328:	movsxd esp,DWORD PTR [r11+0x65]
   14000f32c:	jae    0x14000f3a1
   14000f32e:	cmp    eax,0x6c616622
   14000f333:	jae    0x14000f39a
   14000f335:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211345
   14000f33b:	and    BYTE PTR [rax],ah
   14000f33d:	and    BYTE PTR [rax],ah
   14000f33f:	and    BYTE PTR [rax],ah
   14000f341:	and    BYTE PTR [rax],ah
   14000f343:	and    BYTE PTR [rdi],ch
   14000f345:	ds or  eax,0x2020200a
   14000f34b:	and    BYTE PTR [rax],ah
   14000f34d:	and    BYTE PTR [rax],ah
   14000f34f:	and    BYTE PTR [rdi+rbp*1],bh
   14000f352:	jb     0x14000f3b9
   14000f354:	jno    0x14000f3cb
   14000f356:	gs jae 0x14000f3cd
   14000f359:	gs fs push rax
   14000f35c:	jb     0x14000f3c7
   14000f35e:	jbe    0x14000f3c9
   14000f360:	ins    BYTE PTR es:[rdi],dx
   14000f361:	gs addr32 gs jae 0x14000f3a4
   14000f366:	or     eax,0x2020200a
   14000f36b:	and    BYTE PTR [rdi+rbp*1],bh
   14000f36e:	jae    0x14000f3d5
   14000f370:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f373:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f37b:	je     0x14000f3ef
   14000f37d:	jne    0x14000f3f2
   14000f37f:	je     0x14000f3ca
   14000f381:	outs   dx,BYTE PTR ds:[rsi]
   14000f382:	outs   dx,WORD PTR ds:[rsi]
   14000f384:	ds or  eax,0x612f3c0a
   14000f38a:	jae    0x14000f3ff
   14000f38c:	gs ins DWORD PTR es:[rdi],dx
   14000f38e:	(bad)  
   14000f38f:	ins    BYTE PTR es:[rdi],dx
   14000f390:	jns    0x14000f3d0
   14000f392:	or     eax,0xa0d0a
   14000f397:	add    BYTE PTR [rax+0x3403],dl
   14000f39d:	add    BYTE PTR [rsi+0x0],dl
   14000f3a0:	push   rbx
   14000f3a1:	add    BYTE PTR [rdi+0x0],bl
   14000f3a4:	push   rsi
   14000f3a5:	add    BYTE PTR [rbp+0x0],al
   14000f3a8:	push   rdx
   14000f3a9:	add    BYTE PTR [rbx+0x0],dl
   14000f3ac:	rex.WB add BYTE PTR [r15+0x0],cl
   14000f3b0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000f3b4:	rex.WB add BYTE PTR [r14+0x0],cl
   14000f3b8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000f3bc:	add    BYTE PTR [rax],al
   14000f3be:	add    BYTE PTR [rax],al
   14000f3c0:	mov    ebp,0xfeef04
   14000f3c5:	add    BYTE PTR [rcx],al
   14000f3c7:	add    BYTE PTR [rax],al
   14000f3c9:	add    BYTE PTR [rdx],cl
   14000f3cb:	add    BYTE PTR [rax],al
   14000f3cd:	add    BYTE PTR [rax],bpl
   14000f3d0:	add    BYTE PTR [rax],al
   14000f3d2:	or     al,BYTE PTR [rax]
   14000f3d4:	add    BYTE PTR [rax+0x0],al
   14000f3d7:	sub    BYTE PTR [rdi],bh
   14000f3d9:	add    BYTE PTR [rax],al
   14000f3db:	add    BYTE PTR [rax],al
   14000f3dd:	add    BYTE PTR [rax],al
   14000f3df:	add    BYTE PTR [rax+rax*1],al
   14000f3e2:	add    al,0x0
   14000f3e4:	add    DWORD PTR [rax],eax
	...
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	out    dx,al
   14000f3f5:	add    al,BYTE PTR [rax]
   14000f3f7:	add    BYTE PTR [rcx],al
   14000f3f9:	add    BYTE PTR [rbx+0x0],dl
   14000f3fc:	je     0x14000f3fe
   14000f3fe:	jb     0x14000f400
   14000f400:	imul   eax,DWORD PTR [rax],0x67006e
   14000f406:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f40a:	ins    BYTE PTR es:[rdi],dx
   14000f40b:	add    BYTE PTR [rbp+0x0],ah
   14000f40e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f412:	data16 add BYTE PTR [rdi+0x0],ch
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	retf   0x2
   14000f41b:	add    BYTE PTR [rcx],al
   14000f41d:	add    BYTE PTR [rax],dh
   14000f41f:	add    BYTE PTR [rax+rax*1],dh
   14000f422:	xor    BYTE PTR [rax],al
   14000f424:	cmp    DWORD PTR [rax],eax
   14000f426:	xor    BYTE PTR [rax],al
   14000f428:	xor    al,0x0
   14000f42a:	rex.X add BYTE PTR [rax],sil
   14000f42d:	add    BYTE PTR [rax],al
   14000f42f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f433:	add    BYTE PTR [rcx],al
   14000f435:	add    BYTE PTR [rbx+0x0],al
   14000f438:	outs   dx,DWORD PTR ds:[rsi]
   14000f439:	add    BYTE PTR [rbp+0x0],ch
   14000f43c:	jo     0x14000f43e
   14000f43e:	(bad)  
   14000f43f:	add    BYTE PTR [rsi+0x0],ch
   14000f442:	jns    0x14000f444
   14000f444:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f448:	ins    DWORD PTR es:[rdi],dx
   14000f449:	add    BYTE PTR [rbp+0x0],ah
   14000f44c:	add    BYTE PTR [rax],al
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f454:	movsxd eax,DWORD PTR [rax]
   14000f456:	jb     0x14000f458
   14000f458:	outs   dx,DWORD PTR ds:[rsi]
   14000f459:	add    BYTE PTR [rbx+0x0],dh
   14000f45c:	outs   dx,DWORD PTR ds:[rsi]
   14000f45d:	add    BYTE PTR [rsi+0x0],ah
   14000f460:	je     0x14000f462
   14000f462:	and    BYTE PTR [rax],al
   14000f464:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f468:	jb     0x14000f46a
   14000f46a:	jo     0x14000f46c
   14000f46c:	outs   dx,DWORD PTR ds:[rsi]
   14000f46d:	add    BYTE PTR [rdx+0x0],dh
   14000f470:	(bad)  
   14000f471:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f475:	add    BYTE PTR [rdi+0x0],ch
   14000f478:	outs   dx,BYTE PTR ds:[rsi]
   14000f479:	add    BYTE PTR [rax],al
   14000f47b:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000f47f:	add    BYTE PTR [rcx],al
   14000f481:	add    BYTE PTR [rsi+0x0],al
   14000f484:	imul   eax,DWORD PTR [rax],0x65006c
   14000f48a:	add    BYTE PTR [rbp+0x0],r12b
   14000f48e:	jae    0x14000f490
   14000f490:	movsxd eax,DWORD PTR [rax]
   14000f492:	jb     0x14000f494
   14000f494:	imul   eax,DWORD PTR [rax],0x740070
   14000f49a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f4a0:	add    BYTE PTR [rax],al
   14000f4a2:	add    BYTE PTR [rax],al
   14000f4a4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000f4a8:	(bad)  
   14000f4a9:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000f4ad:	add    BYTE PTR [rax+0x0],dl
   14000f4b0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f4b4:	data16 add BYTE PTR [rbp+0x0],cl
   14000f4b8:	outs   dx,DWORD PTR ds:[rsi]
   14000f4b9:	add    BYTE PTR [rsi+0x0],ch
   14000f4bc:	and    BYTE PTR [rax],al
   14000f4be:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f4c2:	jne    0x14000f4c4
   14000f4c4:	outs   dx,BYTE PTR ds:[rsi]
   14000f4c5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000f4c9:	add    BYTE PTR [rdx+0x0],dh
   14000f4cc:	jae    0x14000f4ce
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	data16 add BYTE PTR [rbx],ah
   14000f4d3:	add    BYTE PTR [rcx],al
   14000f4d5:	add    BYTE PTR [rsi+0x0],al
   14000f4d8:	imul   eax,DWORD PTR [rax],0x65006c
   14000f4de:	push   rsi
   14000f4df:	add    BYTE PTR [rbp+0x0],ah
   14000f4e2:	jb     0x14000f4e4
   14000f4e4:	jae    0x14000f4e6
   14000f4e6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f4ec:	add    BYTE PTR [rax],al
   14000f4ee:	add    BYTE PTR [rax],al
   14000f4f0:	xor    DWORD PTR [rax],eax
   14000f4f2:	xor    BYTE PTR [rax],al
   14000f4f4:	add    BYTE PTR cs:[rax],dh
   14000f4f7:	add    BYTE PTR [rsi],ch
   14000f4f9:	add    BYTE PTR [rcx],dh
   14000f4fb:	add    BYTE PTR [rax],dh
   14000f4fd:	add    BYTE PTR [rdx],dh
   14000f4ff:	add    BYTE PTR [rax+rax*1],dh
   14000f502:	xor    BYTE PTR [rax],al
   14000f504:	add    BYTE PTR cs:[rcx],dh
   14000f507:	add    BYTE PTR [rsi],dh
   14000f509:	add    BYTE PTR [rbx],dh
   14000f50b:	add    BYTE PTR [rax],bh
   14000f50d:	add    BYTE PTR [rax+rax*1],dh
   14000f510:	and    BYTE PTR [rax],al
   14000f512:	sub    BYTE PTR [rax],al
   14000f514:	je     0x14000f516
   14000f516:	push   0x2e003100
   14000f51b:	add    BYTE PTR [rcx],dh
   14000f51d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177012523
   14000f523:	add    BYTE PTR [rax],dh
   14000f525:	add    BYTE PTR [rcx],bh
   14000f527:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701262d
   14000f52d:	add    BYTE PTR [rax],dh
   14000f52f:	add    BYTE PTR [rax],dh
   14000f531:	add    BYTE PTR [rcx],ch
   14000f533:	add    BYTE PTR [rax],al
   14000f535:	add    BYTE PTR [rax],al
   14000f537:	add    BYTE PTR [rsi],dh
   14000f539:	add    BYTE PTR [rbx],cl
   14000f53b:	add    BYTE PTR [rcx],al
   14000f53d:	add    BYTE PTR [rcx+0x0],cl
   14000f540:	outs   dx,BYTE PTR ds:[rsi]
   14000f541:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000f545:	add    BYTE PTR [rdx+0x0],dh
   14000f548:	outs   dx,BYTE PTR ds:[rsi]
   14000f549:	add    BYTE PTR [rcx+0x0],ah
   14000f54c:	ins    BYTE PTR es:[rdi],dx
   14000f54d:	add    BYTE PTR [rsi+0x0],cl
   14000f550:	(bad)  
   14000f551:	add    BYTE PTR [rbp+0x0],ch
   14000f554:	add    BYTE PTR gs:[rax],al
   14000f557:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000f55b:	add    BYTE PTR [rax+rax*1+0x43],al
   14000f55f:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000f563:	add    BYTE PTR [rsi],ch
   14000f565:	add    BYTE PTR [rbp+0x0],al
   14000f568:	pop    rax
   14000f569:	add    BYTE PTR [rbp+0x0],al
   14000f56c:	add    BYTE PTR [rax],al
   14000f56e:	add    BYTE PTR [rax],al
   14000f570:	add    BYTE PTR [rax],0x2e
   14000f573:	add    BYTE PTR [rcx],al
   14000f575:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000f579:	add    BYTE PTR [rdi+0x0],ah
   14000f57c:	(bad)  
   14000f57d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000f581:	add    BYTE PTR [rdi+0x0],ch
   14000f584:	jo     0x14000f586
   14000f586:	jns    0x14000f588
   14000f588:	jb     0x14000f58a
   14000f58a:	imul   eax,DWORD PTR [rax],0x680067
   14000f590:	je     0x14000f592
   14000f592:	add    BYTE PTR [rax],al
   14000f594:	test   eax,0x4d002000
   14000f599:	add    BYTE PTR [rcx+0x0],ch
   14000f59c:	movsxd eax,DWORD PTR [rax]
   14000f59e:	jb     0x14000f5a0
   14000f5a0:	outs   dx,DWORD PTR ds:[rsi]
   14000f5a1:	add    BYTE PTR [rbx+0x0],dh
   14000f5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000f5a5:	add    BYTE PTR [rsi+0x0],ah
   14000f5a8:	je     0x14000f5aa
   14000f5aa:	and    BYTE PTR [rax],al
   14000f5ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000f5b0:	jb     0x14000f5b2
   14000f5b2:	jo     0x14000f5b4
   14000f5b4:	outs   dx,DWORD PTR ds:[rsi]
   14000f5b5:	add    BYTE PTR [rdx+0x0],dh
   14000f5b8:	(bad)  
   14000f5b9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f5bd:	add    BYTE PTR [rdi+0x0],ch
   14000f5c0:	outs   dx,BYTE PTR ds:[rsi]
   14000f5c1:	add    BYTE PTR [rsi],ch
   14000f5c3:	add    BYTE PTR [rax],ah
   14000f5c5:	add    BYTE PTR [rcx+0x0],al
   14000f5c8:	ins    BYTE PTR es:[rdi],dx
   14000f5c9:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000f5cd:	add    BYTE PTR [rdx+0x0],dh
   14000f5d0:	imul   eax,DWORD PTR [rax],0x680067
   14000f5d6:	je     0x14000f5d8
   14000f5d8:	jae    0x14000f5da
   14000f5da:	and    BYTE PTR [rax],al
   14000f5dc:	jb     0x14000f5de
   14000f5de:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f5e2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f5e6:	jbe    0x14000f5e8
   14000f5e8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000f5ed:	add    BYTE PTR [rax],al
   14000f5ef:	add    BYTE PTR [rsi],bh
   14000f5f1:	add    BYTE PTR [rbx],cl
   14000f5f3:	add    BYTE PTR [rcx],al
   14000f5f5:	add    BYTE PTR [rdi+0x0],cl
   14000f5f8:	jb     0x14000f5fa
   14000f5fa:	imul   eax,DWORD PTR [rax],0x690067
   14000f600:	outs   dx,BYTE PTR ds:[rsi]
   14000f601:	add    BYTE PTR [rcx+0x0],ah
   14000f604:	ins    BYTE PTR es:[rdi],dx
   14000f605:	add    BYTE PTR [rsi+0x0],al
   14000f608:	imul   eax,DWORD PTR [rax],0x65006c
   14000f60e:	outs   dx,BYTE PTR ds:[rsi]
   14000f60f:	add    BYTE PTR [rcx+0x0],ah
   14000f612:	ins    DWORD PTR es:[rdi],dx
   14000f613:	add    BYTE PTR [rbp+0x0],ah
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	rex.WR add BYTE PTR [rdi+0x0],r9b
   14000f61c:	add    BYTE PTR [rbx+0x0],r8b
   14000f620:	push   rsp
   14000f621:	add    BYTE PTR [rdx+0x0],dl
   14000f624:	add    BYTE PTR cs:[rbp+0x0],al
   14000f628:	pop    rax
   14000f629:	add    BYTE PTR [rbp+0x0],al
   14000f62c:	add    BYTE PTR [rax],al
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	push   0x0
   14000f632:	and    eax,0x50000100
   14000f637:	add    BYTE PTR [rdx+0x0],dh
   14000f63a:	outs   dx,DWORD PTR ds:[rsi]
   14000f63b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f63f:	add    BYTE PTR [rbx+0x0],ah
   14000f642:	je     0x14000f644
   14000f644:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f648:	ins    DWORD PTR es:[rdi],dx
   14000f649:	add    BYTE PTR [rbp+0x0],ah
   14000f64c:	add    BYTE PTR [rax],al
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000f654:	movsxd eax,DWORD PTR [rax]
   14000f656:	jb     0x14000f658
   14000f658:	outs   dx,DWORD PTR ds:[rsi]
   14000f659:	add    BYTE PTR [rbx+0x0],dh
   14000f65c:	outs   dx,DWORD PTR ds:[rsi]
   14000f65d:	add    BYTE PTR [rsi+0x0],ah
   14000f660:	je     0x14000f662
   14000f662:	scas   al,BYTE PTR es:[rdi]
   14000f663:	add    BYTE PTR [rax],ah
   14000f665:	add    BYTE PTR [rdi+0x0],dl
   14000f668:	imul   eax,DWORD PTR [rax],0x64006e
   14000f66e:	outs   dx,DWORD PTR ds:[rsi]
   14000f66f:	add    BYTE PTR [rdi+0x0],dh
   14000f672:	jae    0x14000f674
   14000f674:	scas   al,BYTE PTR es:[rdi]
   14000f675:	add    BYTE PTR [rax],ah
   14000f677:	add    BYTE PTR [rdi+0x0],cl
   14000f67a:	jo     0x14000f67c
   14000f67c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f680:	(bad)  
   14000f681:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000f685:	add    BYTE PTR [rsi+0x0],ch
   14000f688:	add    BYTE PTR [eax],ah
   14000f68b:	add    BYTE PTR [rbx+0x0],dl
   14000f68e:	jns    0x14000f690
   14000f690:	jae    0x14000f692
   14000f692:	je     0x14000f694
   14000f694:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f698:	add    BYTE PTR [rax],al
   14000f69a:	add    BYTE PTR [rax],al
   14000f69c:	rex.RX add BYTE PTR [rcx],r10b
   14000f69f:	add    BYTE PTR [rcx],al
   14000f6a1:	add    BYTE PTR [rax+0x0],dl
   14000f6a4:	jb     0x14000f6a6
   14000f6a6:	outs   dx,DWORD PTR ds:[rsi]
   14000f6a7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000f6ab:	add    BYTE PTR [rbx+0x0],ah
   14000f6ae:	je     0x14000f6b0
   14000f6b0:	push   rsi
   14000f6b1:	add    BYTE PTR [rbp+0x0],ah
   14000f6b4:	jb     0x14000f6b6
   14000f6b6:	jae    0x14000f6b8
   14000f6b8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f6be:	add    BYTE PTR [rax],al
   14000f6c0:	xor    DWORD PTR [rax],eax
   14000f6c2:	xor    BYTE PTR [rax],al
   14000f6c4:	add    BYTE PTR cs:[rax],dh
   14000f6c7:	add    BYTE PTR [rsi],ch
   14000f6c9:	add    BYTE PTR [rcx],dh
   14000f6cb:	add    BYTE PTR [rax],dh
   14000f6cd:	add    BYTE PTR [rdx],dh
   14000f6cf:	add    BYTE PTR [rax+rax*1],dh
   14000f6d2:	xor    BYTE PTR [rax],al
   14000f6d4:	add    BYTE PTR cs:[rcx],dh
   14000f6d7:	add    BYTE PTR [rsi],dh
   14000f6d9:	add    BYTE PTR [rbx],dh
   14000f6db:	add    BYTE PTR [rax],bh
   14000f6dd:	add    BYTE PTR [rax+rax*1],dh
   14000f6e0:	add    BYTE PTR [rax],al
   14000f6e2:	add    BYTE PTR [rax],al
   14000f6e4:	add    BYTE PTR [rax],r8b
   14000f6e7:	add    BYTE PTR [rcx],al
   14000f6e9:	add    BYTE PTR [rsi+0x0],dl
   14000f6ec:	(bad)  
   14000f6ed:	add    BYTE PTR [rdx+0x0],dh
   14000f6f0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f6f4:	ins    BYTE PTR es:[rdi],dx
   14000f6f5:	add    BYTE PTR [rbp+0x0],ah
   14000f6f8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f6fc:	data16 add BYTE PTR [rdi+0x0],ch
   14000f700:	add    BYTE PTR [rax],al
   14000f702:	add    BYTE PTR [rax],al
   14000f704:	and    al,0x0
   14000f706:	add    al,0x0
   14000f708:	add    BYTE PTR [rax],al
   14000f70a:	push   rsp
   14000f70b:	add    BYTE PTR [rdx+0x0],dh
   14000f70e:	(bad)  
   14000f70f:	add    BYTE PTR [rsi+0x0],ch
   14000f712:	jae    0x14000f714
   14000f714:	ins    BYTE PTR es:[rdi],dx
   14000f715:	add    BYTE PTR [rcx+0x0],ah
   14000f718:	je     0x14000f71a
   14000f71a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000f720:	add    BYTE PTR [rax],al
   14000f722:	add    BYTE PTR [rax],al
   14000f724:	or     DWORD PTR [rax+rsi*4],eax
   14000f727:	add    al,0xcd
   14000f729:	dec    ch
   14000f72b:	dec    al
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rax],al
   14000f731:	add    BYTE PTR [rcx],al
   14000f733:	add    BYTE PTR [rax],al
   14000f735:	add    BYTE PTR [rax],al
   14000f737:	add    BYTE PTR [rcx],dl
   14000f739:	add    BYTE PTR [rax],al
   14000f73b:	add    BYTE PTR [rax],al
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    BYTE PTR [rdx],al
   14000f741:	add    BYTE PTR [rax],al
   14000f743:	add    BYTE PTR [rbp-0x54b2744a],dh
   14000f749:	jne    0x14000f6f5
   14000f74b:	rex.RX mov edx,ss
   14000f74e:	sbb    ebx,DWORD PTR [rbp-0x7]
   14000f751:	(bad)  
   14000f752:	xchg   DWORD PTR [rbx+riz*8-0x405ef273],esp
   14000f759:	xchg   ebx,eax
   14000f75a:	push   rsi
   14000f75b:	rex.WB adc bpl,BYTE PTR [r13+rax*1-0x53623333]
   14000f763:	rex.WXB add BYTE PTR [r8],al
	...
   14000f77a:	add    BYTE PTR [rax],al
   14000f77c:	mov    BYTE PTR [rax],al
   14000f77e:	add    BYTE PTR [rax],al
   14000f780:	(bad)  
   14000f781:	add    BYTE PTR [rax],al
   14000f783:	add    BYTE PTR [rax+0x8000000],bl
   14000f789:	add    BYTE PTR [rax],al
   14000f78b:	add    BYTE PTR [rax+0xe000000],ah
   14000f791:	add    BYTE PTR [rax],al
   14000f793:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000f7a1:	add    BYTE PTR [rax],al
   14000f7a3:	add    BYTE PTR [rax+0xc000000],bh
   14000f7a9:	add    BYTE PTR [rax],al
   14000f7ab:	add    BYTE PTR [rax],al
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	add    BYTE PTR [rbp+0x0],cl
   14000f7b2:	push   rbp
   14000f7b3:	add    BYTE PTR [rcx+0x0],cl
	...
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	adc    BYTE PTR [rax],al
   14000f7c2:	add    BYTE PTR [rax],al
   14000f7c4:	sbb    BYTE PTR [rax],al
   14000f7c6:	add    BYTE PTR [rax],al
   14000f7c8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000f7cc:	rex.WB add BYTE PTR [r8],al
	...
   14000f7d7:	add    BYTE PTR [rsi],al
   14000f7d9:	add    BYTE PTR [rax],al
   14000f7db:	add    BYTE PTR [rax],dl
   14000f7dd:	add    BYTE PTR [rax],al
   14000f7df:	add    BYTE PTR [rbp+0x0],ah
   14000f7e2:	outs   dx,BYTE PTR ds:[rsi]
   14000f7e3:	add    BYTE PTR [rip+0x53005500],ch        # 0x193014ce9
   14000f7e9:	add    BYTE PTR [rax],al
   14000f7eb:	add    BYTE PTR [rax],al
   14000f7ed:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x180000],al
   140010006:	add    BYTE PTR [rax],al
   140010008:	mov    eax,0xd0a3c0a3
   14001000d:	movabs ds:0xa438a430a3f0a3e8,eax
   140010016:	add    BYTE PTR [rax],al
   140010018:	add    BYTE PTR [rax+0x1040000],ah
   14001001e:	add    BYTE PTR [rax],al
   140010020:	and    BYTE PTR [rbx-0x5cc75cd8],ah
   140010026:	rex movabs ds:0xa370a368a358a350,eax
   140010030:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   140010037:	movabs ds:0xa3d8a3d0a3c0a3b8,eax
   140010040:	call   0x140a4f0e8
   140010045:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010046:	or     BYTE PTR [rax+rbx*1+0x30a420a4],ah
   14001004d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001004e:	cmp    BYTE PTR [rax+rcx*2+0x60a450a4],ah
   140010055:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010056:	push   0xffffffff80a478a4
   14001005b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001005c:	nop
   14001005d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001005e:	cwde   
   14001005f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010060:	test   al,0xa4
   140010062:	mov    al,0xa4
   140010064:	shl    BYTE PTR [rax+rcx*8-0x1f5b275c],0xa4
   14001006c:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001006e:	clc    
   14001006f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010070:	or     BYTE PTR [rbp-0x5adf5af0],ah
   140010076:	sub    BYTE PTR [rbp-0x5abf5ac8],ah
   14001007c:	push   rax
   14001007d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001007e:	pop    rax
   14001007f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010080:	push   0xffffffff80a570a5
   140010085:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010086:	mov    BYTE PTR [rbp-0x5a5f5a68],ah
   14001008c:	mov    al,0xa5
   14001008e:	mov    eax,0xd0a5c8a5
   140010093:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010094:	loopne 0x14001003b
   140010096:	call   0x140a6f940
   14001009b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001009c:	adc    BYTE PTR [rsi-0x59d759e8],ah
   1400100a2:	xor    BYTE PTR [rsi-0x59b759c0],ah
   1400100a8:	pop    rax
   1400100a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100aa:	(bad)  
   1400100ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100ac:	jo     0x140010054
   1400100ae:	js     0x140010056
   1400100b0:	mov    BYTE PTR [rsi-0x595f5970],ah
   1400100b6:	test   al,0xa6
   1400100b8:	mov    eax,0xd0a6c0a6
   1400100bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100be:	fsub   DWORD PTR [rsi-0x590f5918]
   1400100c4:	add    BYTE PTR [rdi-0x58e758f8],ah
   1400100ca:	and    BYTE PTR [rdi-0x58c758d0],ah
   1400100d0:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400100d2:	push   rax
   1400100d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100d4:	(bad)  
   1400100d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100d6:	push   0xffffffff80a778a7
   1400100db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100dc:	nop
   1400100dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100de:	cwde   
   1400100df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100e0:	test   al,0xa7
   1400100e2:	mov    al,0xa7
   1400100e4:	shl    BYTE PTR [rdi-0x58275838],0xe0
   1400100eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100ec:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100ee:	clc    
   1400100ef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100f0:	or     BYTE PTR [rax-0x57df57f0],ch
   1400100f6:	sub    BYTE PTR [rax-0x57bf57c8],ch
   1400100fc:	push   rax
   1400100fd:	test   al,0x58
   1400100ff:	test   al,0x68
   140010101:	test   al,0x70
   140010103:	test   al,0x80
   140010105:	test   al,0x88
   140010107:	test   al,0xa0
   140010109:	test   al,0xa8
   14001010b:	test   al,0xb8
   14001010d:	test   al,0xc0
   14001010f:	test   al,0xd0
   140010111:	test   al,0xd8
   140010113:	test   al,0xa8
   140010115:	lods   al,BYTE PTR ds:[rsi]
   140010116:	shr    BYTE PTR [rax+rcx*8+0xacd0ac],0xd0
   14001011e:	add    BYTE PTR [rax],al
   140010120:	adc    BYTE PTR [rax],al
   140010122:	add    BYTE PTR [rax],al
   140010124:	push   rax
   140010125:	.byte 0xa0
   140010126:	pop    rax
   140010127:	.byte 0xa0
   140010128:	(bad)  
   140010129:	.byte 0xa0
	...
